define(["jquery","base1/cockpit","data!./ssh-list-public-keys.sh","data!./ssh-add-public-key.sh"],function(e,n,r,t){var i={};var a=n.gettext;function o(i,o){var s=this;var u=o+"/.ssh";var f=u+"/authorized_keys";var c=null;var l=null;var d=null;s.keys=[];s.state="loading";function v(n){s.keys=[];if(n.problem=="access-denied"){s.state=n.problem}else if(n.problem=="not-found"){s.state="ready"}else{s.state="failed";console.warn("Error proccessing authentication keys: "+n)}e(s).triggerHandler("changed")}function y(n,r){if(r!==d)return;s.keys=n;s.state="ready";e(s).triggerHandler("changed")}var p=/^(\S+)\s+(\S+)\s+(.*)\((\S+)\)$/;function h(t){var i=e.Deferred();var a=[];n.script(r).input(t+"\n").done(function(e){var n,r,t,i,o=e.split("\n");for(t=0;t+1<o.length;t+=2){i=o[t];r={raw:o[t+1]};a.push(r);n=o[t].trim().match(p);r.valid=!!n;if(n){r.size=n[1];r.fp=n[2];r.comment=n[3].trim();if(r.comment=="authorized_keys")r.comment=null;r.algorithm=n[4]}}}).always(function(){i.resolve(a)});return i.promise()}function m(e,n,r){d=n;if(r)return v(r);if(!e)return y([],n);h(e).done(function(e){y(e,n)})}s.add_key=function(r){var s=e.Deferred();s.notify(a("Validating key"));h(r).done(function(e){var r=e[0];if(r&&r.valid){s.notify(a("Adding key"));n.script(t,[i,o],{superuser:"try"}).input(r.raw+"\n").done(function(){s.resolve()}).fail(function(e){s.reject(a("Error saving authorized keys: ")+e)})}else{s.reject(a("The key you provided was not valid."))}});return s.promise()};s.remove_key=function(e){return c.modify(function(n){var r;var t=null;var i=[];if(!n)return"";i=[];t=n.trim().split("\n");for(r=0;r<t.length;r++){if(t[r]===e)e=undefined;else i.push(t[r])}return i.join("\n")})};s.close=function(){if(l)l.remove();if(c)c.close()};c=n.file(f,{superuser:"try"});l=c.watch(m)}i.instance=function s(e,n){return new o(e,n)};return i});
