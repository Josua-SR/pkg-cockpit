
define("users/authorized-keys", ["jquery","base1/cockpit","data!./ssh-list-public-keys.sh","data!./ssh-add-public-key.sh"],function(e,n,r,t){var i={};var a=n.gettext;function o(i,o){var s=this;var u=o+"/.ssh";var f=u+"/authorized_keys";var c=null;var l=null;var d=null;s.keys=[];s.state="loading";function v(n){s.keys=[];if(n.problem=="access-denied"){s.state=n.problem}else if(n.problem=="not-found"){s.state="ready"}else{s.state="failed";console.warn("Error proccessing authentication keys: "+n)}e(s).triggerHandler("changed")}function y(n,r){if(r!==d)return;s.keys=n;s.state="ready";e(s).triggerHandler("changed")}var p=/^(\S+)\s+(\S+)\s+(.*)\((\S+)\)$/;function h(t){var i=e.Deferred();var a=[];n.script(r).input(t+"\n").done(function(e){var n,r,t,i,o=e.split("\n");for(t=0;t+1<o.length;t+=2){i=o[t];r={raw:o[t+1]};a.push(r);n=o[t].trim().match(p);r.valid=!!n;if(n){r.size=n[1];r.fp=n[2];r.comment=n[3].trim();if(r.comment=="authorized_keys")r.comment=null;r.algorithm=n[4]}}}).always(function(){i.resolve(a)});return i.promise()}function m(e,n,r){d=n;if(r)return v(r);if(!e)return y([],n);h(e).done(function(e){y(e,n)})}s.add_key=function(r){var s=e.Deferred();s.notify(a("Validating key"));h(r).done(function(e){var r=e[0];if(r&&r.valid){s.notify(a("Adding key"));n.script(t,[i,o],{superuser:"try"}).input(r.raw+"\n").done(function(){s.resolve()}).fail(function(e){s.reject(a("Error saving authorized keys: ")+e)})}else{s.reject(a("The key you provided was not valid."))}});return s.promise()};s.remove_key=function(e){return c.modify(function(n){var r;var t=null;var i=[];if(!n)return"";i=[];t=n.trim().split("\n");for(r=0;r<t.length;r++){if(t[r]===e)e=undefined;else i.push(t[r])}return i.join("\n")})};s.close=function(){if(l)l.remove();if(c)c.close()};c=n.file(f,{superuser:"try"});l=c.watch(m)}i.instance=function s(e,n){return new o(e,n)};return i});

//# sourceURL=users/authorized-keys.min.js

require(["jquery","base1/cockpit","base1/mustache","shell/controls","shell/shell","users/authorized-keys","base1/patterns"],function(e,t,a,n,o,r){"use strict";var s=t.gettext;var c=t.gettext;var i=t.permission({admin:true});e(i).on("changed",u);function u(){e(".accounts-self-privileged").addClass("accounts-privileged");n.update_privileged_ui(i,".accounts-privileged:not('.accounts-current-account')",t.format(s("The user <b>$0</b> is not permitted to modify accounts"),t.user.name));e(".accounts-privileged").find("input").attr("disabled",i.allowed===false||e("#account-user-name").text()==="root");n.update_privileged_ui({allowed:true},".accounts-current-account","");e(".accounts-current-account").find("input").attr("disabled",false);if(e("#account-user-name").text()==="root"&&i.allowed){n.update_privileged_ui({allowed:false},"#account-delete",s("Unable to delete root account"));n.update_privileged_ui({allowed:false},"#account-real-name-wrapper",s("Unable to rename root account"))}}function l(a,n){var o=[/.*\(current\) UNIX password: $/];var r=[/.*New password: $/,/.*Retype new password: $/];var c=[/.*BAD PASSWORD:.*/];var i=e.Deferred();var u="";var l=false;var d=s("Old password not accepted");var p;var f=window.setTimeout(function(){d=s("Prompting via passwd timed out");h.close("terminated")},10*1e3);var h=t.spawn(["/usr/bin/passwd"],{pty:true,environ:["LC_ALL=C"],err:"out"}).always(function(){window.clearInterval(f)}).done(function(){i.resolve()}).fail(function(e){if(e.constructor.name=="ProcessError")e=new Error(d);i.reject(e)}).stream(function(e){u+=e;for(p=0;p<o.length;p++){if(o[p].test(u)){u="";h.input(a+"\n",true);return}}for(p=0;p<r.length;p++){if(r[p].test(u)){u="";h.input(n+"\n",true);d=s("Failed to change password");l=true;return}}for(p=0;l&&p<c.length;p++){if(c[p].test(u)){d=s("New password was not accepted");return}}});return i.promise()}function d(a,n){var o=e.Deferred();var r="";t.spawn(["chpasswd"],{superuser:"require",err:"out"}).input(a+":"+n).done(function(){o.resolve()}).fail(function(e,t){if(e.constructor.name=="ProcessError"){console.log(e);if(t)e=new Error(t);else e=new Error(s("Failed to change password"))}o.reject(e)});return o.promise()}function p(t){var a=e.Deferred();var n=0;if(typeof t=="function")t=arguments;function o(){if(n==t.length){a.resolve();return}t[n]().done(function(){o()}).fail(function(e){a.reject(e)});n+=1}o();return a.promise()}function f(e){if(!e){console.warn("Couldn't read /etc/passwd");return[]}var t=[];var a=e.split("\n");var n;for(var o=0;o<a.length;o++){if(!a[o])continue;n=a[o].split(":");t.push({name:n[0],password:n[1],uid:parseInt(n[2],10),gid:parseInt(n[3],10),gecos:n[4].replace(/,*$/,""),home:n[5],shell:n[6]})}return t}function h(e){e=(e||"").trim();if(!e){console.warn("Couldn't read /etc/group");return[]}var t=[];var a=e.split("\n");var n;for(var o=0;o<a.length;o++){if(!a[o])continue;n=a[o].split(":");t.push({name:n[0],password:n[1],gid:parseInt(n[2],10),userlist:n[3].split(",")})}return t}function g(a){var n=e.Deferred();t.spawn("/usr/bin/pwscore",{environ:["LC_ALL=C"]}).input(a).done(function(e){var t=parseInt(e,10);if(t===0){n.reject(new Error(s("Password is too weak")))}else if(t<=33){n.resolve("weak")}else if(t<=66){n.resolve("okay")}else if(t<=99){n.resolve("good")}else{n.resolve("excellent")}}).fail(function(){n.reject(new Error(s("Password is not acceptable")))});return n.promise()}function v(e,t){for(var a=0;t["userlist"]&&a<t["userlist"].length;a++){if(t["userlist"][a]===e)return true}return false}function m(e){console.warn("Unexpected error",e)}w.prototype={_init:function(){this.id="accounts"},getTitle:function(){return c("page-title","Accounts")},show:function(){},setup:function(){e("#accounts-create").on("click",e.proxy(this,"create"))},enter:function(){var e=this;function a(t){e.accounts=f(t);e.update()}this.handle_passwd=t.file("/etc/passwd");this.handle_passwd.read().done(a).fail(m);this.handle_passwd.watch(a)},leave:function(){if(this.handle_passwd){this.handle_passwd.close();this.handle_passwd=null}},update:function(){var t=e("#accounts-list");this.accounts.sort(function(e,t){if(!e["gecos"])return-1;else if(!t["gecos"])return 1;else return e["gecos"].localeCompare(t["gecos"])});t.empty();for(var a=0;a<this.accounts.length;a++){if(this.accounts[a]["uid"]<1e3&&this.accounts[a]["uid"]!==0||this.accounts[a]["shell"].match(/^(\/usr)?\/sbin\/nologin/)||this.accounts[a]["shell"]==="/bin/false")continue;var n=e("<div/>",{"class":"cockpit-account-pic pficon pficon-user"});var o=e("<div/>",{"class":"cockpit-account"}).append(n,e("<div/>",{"class":"cockpit-account-real-name"}).text(this.accounts[a]["gecos"]),e("<div/>",{"class":"cockpit-account-user-name"}).text(this.accounts[a]["name"]));o.on("click",e.proxy(this,"go",this.accounts[a]["name"]));t.append(o)}},create:function(){_.accounts=this.accounts;e("#accounts-create-dialog").modal("show")},go:function(e){t.location.go([e])}};function w(){this._init()}_.prototype={_init:function(){this.id="accounts-create-dialog";this.username_dirty=false},show:function(){},setup:function(){var t=this;e("#accounts-create-cancel").on("click",e.proxy(this,"cancel"));e("#accounts-create-create").on("click",e.proxy(this,"create"));e("#accounts-create-dialog .check-passwords").on("keydown change",e.proxy(this,"validate"));e("#accounts-create-real-name").on("input",e.proxy(this,"suggest_username"));e("#accounts-create-user-name").on("input",function(){t.username_dirty=true})},enter:function(){e("#accounts-create-user-name").val("");e("#accounts-create-real-name").val("");e("#accounts-create-pw1").val("");e("#accounts-create-pw2").val("");e("#accounts-create-locked").prop("checked",false);e("#accounts-create-password-meter").removeClass("weak okay good excellent");e("#accounts-create-dialog").dialog("failure",null);this.username_dirty=false},leave:function(){},validate:function(){var t,a=[];var n=e("#accounts-create-pw1").val();if(e("#accounts-create-pw2").val()!=n){t=new Error(s("The passwords do not match"));t.target="#accounts-create-pw2";a.push(t)}if(!e("#accounts-create-user-name").val()){t=new Error(s("No user name specified"));t.target="#accounts-create-user-name";a.push(t)}if(!e("#accounts-create-real-name").val()){t=new Error(s("No real name specified"));t.target="#accounts-create-real-name";a.push(t)}var o=e.Deferred();if(a.length)o.reject(a);else o.resolve();var r=g(n).fail(function(e){e.target="#accounts-create-pw2"}).always(function(t){var a=this.state()=="resolved"?t:"weak";var o=e("#accounts-create-password-meter").removeClass("weak okay good excellent");if(n)o.addClass(a);var r=e("#accounts-create-password-meter-message");if(a=="excellent"){r.text(s("Excellent password"))}else{r.text("")}});var c=this.check_username().fail(function(e){e.target="#accounts-create-user-name"});return e.when(o,r,c)},cancel:function(){e("#accounts-create-dialog").modal("hide")},create:function(){var a=[function o(){var a=["/usr/sbin/useradd"];if(e("#accounts-create-real-name").val()){a.push("-c");a.push(e("#accounts-create-real-name").val())}a.push(e("#accounts-create-user-name").val());return t.spawn(a,{superuser:"require"})}];if(e("#accounts-create-locked").prop("checked")){a.push(function r(){return t.spawn(["/usr/sbin/usermod",e("#accounts-create-user-name").val(),"--lock"],{superuser:"require"})})}a.push(function s(){return d(e("#accounts-create-user-name").val(),e("#accounts-create-pw1").val())});var n=this.validate().fail(function(t){e("#accounts-create-password-meter-message").hide();e("#accounts-create-dialog").dialog("failure",t)}).done(function(){n=p(a);e("#accounts-create-dialog").dialog("promise",n)});e("#accounts-create-dialog").dialog("wait",n)},is_valid_char_username:function(e){return e>="a"&&e<="z"||e>="A"&&e<="Z"||e>="0"&&e<="9"||e=="."||e=="_"||e=="-"},check_username:function(){var t=e.Deferred();var a=e("#accounts-create-user-name").val();for(var n=0;n<a.length;n++){if(!this.is_valid_char_username(a[n])){t.reject(new Error(s("The user name can only consist of letters from a-z, digits, dots, dashes and underscores.")));return t.promise()}}for(var o=0;o<_.accounts.length;o++){if(_.accounts[o]["name"]==a){t.reject(new Error(s("This user name already exists")));return t.promise()}}t.resolve();return t.promise()},suggest_username:function(){var t=this;function a(e){var a={a:"[àáâãäå]",ae:"æ",c:"čç",d:"ď",e:"[èéêë]",i:"[íìïî]",l:"[ĺľ]",n:"[ňñ]",o:"[òóôõö]",oe:"œ",r:"[ŕř]",s:"š",t:"ť",u:"[ùúůûűü]",y:"[ýÿ]",z:"ž"};for(var n in a)e=e.replace(new RegExp(a[n],"g"),n);for(var o=0;o<e.length;){if(!t.is_valid_char_username(e[o]))e=e.substr(0,o)+e.substr(o+1);else o++}return e}function n(e){var t="";var n=e.split(" ");if(n.length===1)t=n[0].toLowerCase();else if(n.length>1)t=n[0][0].toLowerCase()+n[n.length-1].toLowerCase();return a(t)}if(this.username_dirty)return;var o=n(e("#accounts-create-real-name").val());e("#accounts-create-user-name").val(o)}};function _(){this._init()}k.prototype={_init:function(){this.id="account";this.section_id="accounts";this.roles=[];this.role_template=e("#role-entry-tmpl").html();a.parse(this.role_template);this.keys_template=e("#authorized-keys-tmpl").html();a.parse(this.keys_template);this.authorized_keys=null},getTitle:function(){return c("page-title","Accounts")},show:function(){var t=this;e("#account").toggle(!!t.account_id);e("#account-failure").toggle(!t.account_id)},setup:function(){e("#account .breadcrumb a").on("click",function(){t.location.go("/")});e("#account-real-name").on("change",e.proxy(this,"change_real_name"));e("#account-real-name").on("keydown",e.proxy(this,"real_name_edited"));e("#account-set-password").on("click",e.proxy(this,"set_password"));e("#account-delete").on("click",e.proxy(this,"delete_account"));e("#account-logout").on("click",e.proxy(this,"logout_account"));e("#account-locked").on("change",e.proxy(this,"change_locked",true,null));e("#add-authorized-key").on("click",e.proxy(this,"add_key"));e("#add-authorized-key-dialog").on("hidden.bs.modal",function(){e("#authorized-keys-text").val("")})},setup_keys:function(t,a){var n=this;if(!n.authorized_keys){n.authorized_keys=r.instance(t,a);e(n.authorized_keys).on("changed",function(){n.update()})}},remove_key:function(t){if(!this.authorized_keys)return;var a=e(t.target).data("raw");e(".account-remove-key").prop("disabled",true);this.authorized_keys.remove_key(a).fail(C).always(function(){e(".account-remove-key").prop("disabled",false)})},add_key:function(){if(!this.authorized_keys){e("#add-authorized-key-dialog").modal("hide");return}var t=e("#authorized-keys-text").val();var a=this.authorized_keys.add_key(t);e("#add-authorized-key-dialog").dialog("promise",a)},get_user:function(){var e=this;function a(t){var a=f(t);for(var n=0;n<a.length;n++){if(a[n]["name"]!==e.account_id)continue;e.account=a[n];e.setup_keys(e.account.name,e.account.home);e.update()}}this.handle_passwd=t.file("/etc/passwd");this.handle_passwd.read().done(a).fail(m);this.handle_passwd.watch(a)},get_roles:function(){var a=this;var n={wheel:s("Server Administrator"),sudo:s("Server Administrator"),docker:s("Container Administrator")};function o(t){var o=h(t);while(a.roles.length>0)a.roles.pop();for(var r=0;r<o.length;r++){var s=o[r]["name"];if(n[s]){a.roles.push({name:s,desc:n[s],id:o[r]["gid"],member:v(a.account_id,o[r])})}}e(a).triggerHandler("roles");a.update()}this.handle_groups=t.file("/etc/group");this.handle_groups.read().done(o).fail(m);this.handle_groups.watch(o)},get_last_login:function(){var e=this;function a(e){e=e.split("\n")[1];if(e.length===0)return null;e=e.split("   ");if(e[e.length-1].indexOf("**Never logged in**")>-1)return null;else return new Date(e[e.length-1])}t.spawn(["/usr/bin/lastlog","-u",e.account_id],{environ:["LC_ALL=C"]}).done(function(t){e.lastLogin=a(t);e.update()}).fail(function(){e.lastLogin=null;e.update()})},get_locked:function(a){a=typeof a!=="undefined"?a:true;var n=e.Deferred();var o=this;function r(e){var t=e.split(" ")[1];return t&&(t=="LK"||t=="L")}t.spawn(["/usr/bin/passwd","-S",o.account_id],{environ:["LC_ALL=C"],superuser:"require"}).done(function(e){o.locked=r(e);if(a)o.update();n.resolve(o.locked)}).fail(function(e){n.reject(e)});return n.promise()},get_logged:function(){var e=this;if(!e.account_id){e.logged=false;e.update();return}function a(t){e.logged=t.length>0;if(!e.logged)e.get_last_login();else e.update()}t.spawn(["/usr/bin/w","-sh",e.account_id]).done(a).fail(m)},enter:function(t){this.account_id=t;e("#account-real-name").removeAttr("data-dirty");this.get_user();this.get_roles();this.get_locked();this.get_logged()},leave:function(){if(this.handle_passwd){this.handle_passwd.close();this.handle_passwd=null}if(this.handle_groups){this.handle_groups.close();this.handle_groups=null}if(this.authorized_keys){e(this.authorized_keys).off();this.authorized_keys.close();this.authorized_keys=null}e("#account-failure").hide()},update:function(){if(this.account){e("#account").show();e("#account-failure").hide();var n=e("#account-real-name");var o=this.account["gecos"];if(!o)o=this.account["name"];e("#account-logout").attr("disabled",!this.logged);e("#account-title").text(o);if(!n.attr("data-dirty"))e("#account-real-name").val(this.account["gecos"]);e("#account-user-name").text(this.account["name"]);if(this.logged)e("#account-last-login").text(s("Logged In"));else if(!this.lastLogin)e("#account-last-login").text(s("Never"));else e("#account-last-login").text(this.lastLogin.toLocaleString());if(typeof this.locked!="undefined"&&this.account["uid"]!==0){e("#account-locked").prop("checked",this.locked);e("#account-locked").parents("tr").show()}else{e("#account-locked").parents("tr").hide()}if(this.authorized_keys){var r=this.authorized_keys.keys;var c=this.authorized_keys.state;var i=a.render(this.keys_template,{keys:r,empty:r.length===0&&c=="ready",denied:c=="access-denied",failed:c=="failed"});e("#account-authorized-keys-list").html(i);e(".account-remove-key").on("click",e.proxy(this,"remove_key"));e("#account-authorized-keys").show()}else{e("#account-authorized-keys").hide()}if(this.account["uid"]!==0){var l=a.render(this.role_template,{roles:this.roles});e("#account-change-roles-roles").html(l);e("#account-roles").parents("tr").show();e("#account-change-roles-roles :input").on("change",e.proxy(this,"change_role"))}else{e("#account-roles").parents("tr").hide()}e("#account .breadcrumb .active").text(o);e(".accounts-self-privileged").toggleClass("accounts-current-account",t.user.id==this.account["uid"])}else{e("#account").hide();e("#account-failure").show();e("#account-real-name").val("");e("#account-user-name").text("");e("#account-last-login").text("");e("#account-locked").prop("checked",false);e("#account-roles").text("");e("#account .breadcrumb .active").text("?")}u()},change_role:function(a){var n=e(a.target).data("name");var o=e(a.target).data("gid");if(!n||!o||!this.account["name"])return;if(e(a.target).prop("checked")){t.spawn(["/usr/sbin/usermod",this.account["name"],"-G",o,"-a"],{superuser:"require"}).fail(C)}else{t.spawn(["/usr/bin/gpasswd","-d",this.account["name"],n],{superuser:"require"}).fail(C)}},real_name_edited:function(){e("#account-real-name").attr("data-dirty","true")},check_role_for_self_mod:function(){return this.account["name"]==t.user["user"]||i.allowed!==false},change_real_name:function(){var a=this;var n=e("#account-real-name");n.attr("data-dirty","true");if(!a.check_role_for_self_mod()){a.update();return}var o=n.val();t.spawn(["/usr/sbin/usermod",a.account["name"],"--comment",o],{superuser:"try"}).done(function(e){a.account["gecos"]=o;a.update();n.removeAttr("data-dirty")}).fail(C)},change_locked:function(a,n){n=n!==null?n:e("#account-locked").prop("checked");var o=this;t.spawn(["/usr/sbin/usermod",this.account["name"],n?"--lock":"--unlock"],{superuser:"require"}).done(function(){o.get_locked(false).done(function(e){if(a&&n!==e){console.log("Account locked state doesn't match desired value, trying again.");o.change_locked(false,n)}else{o.update()}})}).fail(C)},set_password:function(){if(!this.check_role_for_self_mod())return;b.user_name=this.account["name"];e("#account-set-password-dialog").modal("show")},delete_account:function(){x.user_name=this.account["name"];e("#account-confirm-delete-dialog").modal("show")},logout_account:function(){t.spawn(["/usr/bin/loginctl","kill-user",this.account["name"]],{superuser:"try"}).done(e.proxy(this,"get_logged")).fail(C)}};function k(){this._init()}var y=20;x.prototype={_init:function(){this.id="account-confirm-delete-dialog"},show:function(){},setup:function(){e("#account-confirm-delete-apply").on("click",e.proxy(this,"apply"))},enter:function(){e("#account-confirm-delete-files").prop("checked",false);e("#account-confirm-delete-title").text(t.format(s("Delete $0"),x.user_name))},leave:function(){},apply:function(){var a=["/usr/sbin/userdel"];if(e("#account-confirm-delete-files").prop("checked"))a.push("-r");a.push(x.user_name);t.spawn(a,{superuser:"require"}).done(function(){e("#account-confirm-delete-dialog").modal("hide");t.location.go("/")}).fail(C)}};function x(){this._init()}b.prototype={_init:function(){this.id="account-set-password-dialog"},show:function(){if(t.user["user"]!==b.user_name){e("#account-set-password-old").parents("tr").toggle(false);e("#account-set-password-pw1").focus()}else{e("#account-set-password-old").parents("tr").toggle(true);e("#account-set-password-old").focus()}},setup:function(){e("#account-set-password-apply").on("click",e.proxy(this,"apply"));e("#account-set-password-dialog .check-passwords").on("keydown change",e.proxy(this,"validate"))},enter:function(){e("#account-set-password-old").val("");e("#account-set-password-pw1").val("");e("#account-set-password-pw2").val("");e("#account-set-password-meter").removeClass("weak okay good excellent");e("#account-set-password-dialog").dialog("failure",null)},leave:function(){},validate:function(){var t;var a=e("#account-set-password-pw1").val();if(e("#account-set-password-pw2").val()!=a){t=new Error(s("The passwords do not match"));t.target="#account-set-password-pw2"}var n=e.Deferred();if(t)n.reject(t);else n.resolve();var o=g(a).fail(function(e){e.target="#account-set-password-pw2"}).always(function(t){var n=this.state()=="resolved"?t:"weak";var o=e("#account-set-password-meter").removeClass("weak okay good excellent");if(a)o.addClass(n);var r=e("#account-set-password-meter-message");if(n=="excellent"){r.text(s("Excellent password"))}else{r.text("")}});return e.when(n,o)},apply:function(){var a=this.validate().done(function(){var n=b.user_name;var o=e("#account-set-password-pw1").val();if(t.user["user"]===n)a=l(e("#account-set-password-old").val(),o);else a=d(n,o);e("#account-set-password-dialog").dialog("promise",a)}).fail(function(t){e("#account-set-password-meter-message").hide();e("#account-set-password-dialog").dialog("failure",t)});e("#account-set-password-dialog").dialog("wait",a)}};function b(){this._init()}function z(t,a){if(a){e("#error-popup-title").text(t);e("#error-popup-message").text(a)}else{e("#error-popup-title").text(s("Error"));e("#error-popup-message").text(t)}e('.modal[role="dialog"]').modal("hide");e("#error-popup").modal("show")}function C(e){z(s("Unexpected error"),e.message||e)}function L(t){t.setup();e("#"+t.id).on("show.bs.modal",function(){t.enter()}).on("shown.bs.modal",function(){t.show()}).on("hidden.bs.modal",function(){t.leave()})}function E(t,a){if(t._entered_)t.leave();t.enter(a);t._entered_=true;e("#"+t.id).show();t.show()}function A(t){e("#"+t.id).hide();if(t._entered_){t.leave();t._entered_=false}}function D(){var a;var n;function o(){var o=t.location.path;if(o.length===0){A(n);E(a)}else if(o.length===1){A(a);E(n,o[0])}else{console.warn("not a users location: "+o);t.location=""}e("body").show()}t.translate();a=new w;a.setup();n=new k;n.setup();L(new _);L(new x);L(new b);e(t).on("locationchanged",o);o()}e(D)});

//# sourceURL=users/local.min.js

define("users/ssh-add-public-key.sh_text", "#!/bin/sh\n\nset -euf\nmkdir -p \"$2/.ssh\"\ncd \"$2/.ssh\"\n\nchown $1 .\n\ntouch authorized_keys 2> /dev/null || true\nchown $1 authorized_keys 2> /dev/null || true\n\nsed -i -e '$a\\' authorized_keys\ncat >> authorized_keys\n\nchown $1 authorized_keys 2> /dev/null || true\nchmod 600 authorized_keys\n");
//# sourceURL=users/ssh-add-public-key.sh

define("users/ssh-list-public-keys.sh_text", "#!/bin/sh\n\ndir=$(mktemp -d)\ncd \"$dir\"\n\nprocess()\n{\n    if [ -z \"$1\" ]; then\n        return\n    fi\n    case \"$1\" in\n    \\#*)\n        ;;\n    *)\n        echo \"$1\" > authorized_keys\n        echo \"$(ssh-keygen -l -f authorized_keys)\"\n        echo \"$1\"\n        ;;\n    esac\n}\n\nsed -e '$a\\' | while read -r line; do\n    process \"$line\"\ndone\n\nrm -f \"$dir/authorized_keys\"\nrmdir \"$dir\"\n");
//# sourceURL=users/ssh-list-public-keys.sh
