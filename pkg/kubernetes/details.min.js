define(["jquery","base1/cockpit","base1/angular","base1/term","kubernetes/client","kubernetes/app"],function(e,t,r,n,a){"use strict";var o=t.gettext;var i=a.k8client();var l=e("#adjust-rc-button");var c=e("#adjust-rc-dialog");var u=e("#adjust-route-button");var f=e("#adjust-route-dialog");var s=e("#delete-entity-button");var d=e("#delete-entity-dialog");var p=e("#delete-pod-dialog");var v=e("#delete-pod-button");d.on("show.bs.modal",function(r){var n=e(r.relatedTarget).attr("data-key");var a=i.objects[n];d.find(".modal-body").text(t.format(o("Delete $0 $1?"),a.kind,a.metadata.name));r.stopPropagation();s.off("click").on("click",function(){var e=i.remove(a.metadata.selfLink);d.dialog("promise",e)})});f.on("show.bs.modal",function(r){var n=e(r.relatedTarget).attr("data-key");var a=i.objects[n];f.find("#host-value").val(a.spec.host);r.stopPropagation();u.off("click").on("click",function(){f.dialog("failure",null);function r(e,t){var r=e.spec;if(!r){console.warn("route without spec");return false}if(r.host===t)return false;r.host=t;return true}function n(n){var a=[];var l=e.Deferred();var c;var u;var f=e("#host-value").val();var s=e.trim(f);if(s==="")u=new Error(o("Not a valid value for Host"));if(u){u.target="#host-value";a.push(u)}if(a.length){l.reject(a);return l.promise()}l.notify(t.format(o("Updating $0..."),n.metadata.name)||null);c=i.modify(n.metadata.selfLink,function(e){return r(e,f)}).done(function(){l.resolve()}).fail(function(e){e=new Error(o("Unable to modify Routes"));e.target="#host-value";a.push(e);l.reject(a)});return l.promise()}f.dialog("promise",n(a))})});c.on("show.bs.modal",function(r){var n=e(r.relatedTarget).attr("data-key");var a=i.objects[n];c.find("#replica-count").val(a.spec.replicas);l.off("click").on("click",function(){function r(e,t){var r=e.spec;if(!r){console.warn("replicationcontroller without spec");return false}if(r.replicas===t)return false;r.replicas=t;return true}function n(n){var a=[];var l=e.Deferred();var u;var f;var s=c.find("#replica-count").val();var d=Number(e.trim(s));if(isNaN(d)||d<0)f=new Error(o("Not a valid number of replicas"));else if(d>128)f=new Error(o("The maximum number of replicas is 128"));if(f){f.target="#replica-count";a.push(f)}if(a.length){c.dialog("failure",a);l.reject(f)}l.notify(t.format(o("Updating $0..."),n.metadata.name)||null);u=i.modify(n.metadata.selfLink,function(e){return r(e,d)}).done(function(){l.resolve()}).fail(function(e){l.reject(e)});var p=l.promise();p.cancel=function v(){if(u&&u.cancel)u.cancel()};return p}var l=n(a);c.dialog("promise",l)})});p.on("show.bs.modal",function(t){var r=e(t.relatedTarget).attr("data-link");t.stopPropagation();v.off("click").on("click",function(){var e=i.remove(r);p.dialog("promise",e)})});function m(e){var t={E:1e18,P:1e15,T:1e12,G:1e9,M:1e6,K:1e3,m:.001,Ei:0x1000000000000000,Pi:0x4000000000000,Ti:1099511627776,Gi:1073741824,Mi:1048576,Ki:1024};for(var r in t){if(e.length>r.length&&e.slice(-r.length)===r){var n=Number(e.slice(0,-r.length));if(!isNaN(n))return n*t[r]}}return e}function g(e,t){var r=e.join(", ");if(t&&t.length){r=r+":"+t.map(function(e){if(e.protocol==="TCP")return e.port;else return e.port+"/"+e.protocol}).join(", ")}return r}return r.module("kubernetes.details",["ngRoute"]).config(["$routeProvider",function(e){e.when("/list",{templateUrl:"views/details-page.html",controller:"DetailsCtrl"})}]).controller("DetailsCtrl",["$scope","kubernetesClient",function(t,n){n.include("deploymentconfigs");n.include("routes");var a={Pod:null,ReplicationController:null,Service:null,Node:null,Endpoints:null,DeploymentConfig:null,Route:null};Object.keys(a).forEach(function(r){a[r]=n.select(r);n.track(a[r]);e(a[r]).on("changed",function(){t.$digest()})});r.extend(t,{pods:a.Pod,services:a.Service,nodes:a.Node,replicationcontrollers:a.ReplicationController,deploymentconfigs:a.DeploymentConfig,routes:a.Route});t.$on("$destroy",function(){r.forEach(a,function(e){n.track(e,false)})});t.itemIdentifier=function o(e){var t=e.metadata||{};var r=e.kind.toLowerCase()+"s/";if(t.namespace)r=r+t.namespace+"/";return r+t.name};t.serviceEndpoint=function i(e){return n.lookup("Endpoints",e.metadata.name,e.metadata.namespace)};t.replicationcontrollerPods=function l(e){return n.select("Pod",e.metadata.namespace,e.spec.selector)};t.nodePods=function c(e){return n.hosting("Pod",e.metadata.name)};t.nodeReadyCondition=function u(e){var t={};if(e){e.forEach(function(e){if(e.type=="Ready"){t=e;return false}})}return t}}]).filter("nodeStatus",function(){return function(e){var t=false;if(e){e.forEach(function(e){if(e.type=="Ready"){t=e.status=="True";return false}})}return t?o("Ready"):o("Not Ready")}}).filter("nodeExternalIP",function(){return function(e){var t=null;if(e){e.forEach(function(e){if(e.type=="LegacyHostIP"||t.type=="ExternalIP"){t=e.address;return false}})}return t?t:o("Unknown")}}).filter("formatCapacityName",function(){return function(e){var t;if(e=="cpu"){t="CPUs"}else{e=e.replace(/-/g," ");t=e.charAt(0).toUpperCase()+e.substr(1)}return t}}).filter("formatCapacityValue",function(){return function(e,r){var n;if(r=="memory"){var a=m(e);e=t.format_bytes(a)}return e}}).directive("kubernetesServiceCluster",function(){return{restrict:"E",link:function(e,t,r){e.$watchGroup(["item.spec.clusterIP","item.spec.ports"],function(e){var r=g([e[0]],e[1]);t.text(r)})}}})});
