define(["jquery","base1/cockpit","docker/docker"],function(e,n,r){"use strict";var o={};var i=n.gettext;function t(e){if(window.debugging=="all"||window.debugging=="nulecule")console.debug.apply(console,arguments)}function a(){var o=this;o.answers={};var a=1.1;var c="0.1.3";var s=null;function l(){return n.spawn(["mktemp","-p","/tmp","-d","APP_ENTITY.XXXX"])}function u(){var e=s.split("/tmp/");var r;if(e.length>1){r=e[1]}t("removing folder "+r);var o=n.spawn(["rm","-fr",r],{err:"out",superuser:true,directory:"/tmp",pty:true});s=null;return o.fail(function(e){console.warn("Error cleaning up nulecule temporary files: "+e.message)})}function f(r){var o=e.Deferred();t("writing to "+s+"/answers.conf");var i=n.file(s+"/answers.conf");var a=i.replace(JSON.stringify(r)).done(function(){o.resolve();i.close()}).fail(function(e){console.warn(e);o.reject(e);i.close()});var c=o.promise();c.cancel=function l(){a.cancel();i.close()};return c}function p(e){var n={};var r;var o=e.split("\n");for(var i=o.length-1;i>=0;i--){if(o[i].indexOf("io.projectatomic.nulecule.atomicappversion:")>-1){r=o[i].split("io.projectatomic.nulecule.atomicappversion:");if(r.length>1)n.atomicappversion=r[1]}else if(o[i].indexOf("io.projectatomic.nulecule.specversion:")>-1){r=o[i].split("io.projectatomic.nulecule.specversion:");if(r.length>1)n.specversion=r[1]}else if(o[i].indexOf("io.projectatomic.nulecule.providers:")>-1){r=o[i].split("io.projectatomic.nulecule.providers:");if(r.length>1)n.providers=r[1]}}return n}function v(r){var o=e.Deferred();var a={};t("checking nulecule specversion");var c=n.spawn(["/usr/bin/atomic","info",r],{superuser:true}).fail(function(e){console.warn(e);o.reject(new Error(i("The image is not a correctly labeled Nulecule image.")))}).done(function(e){a=p(e);t(a);if(Object.keys(a).length==3){o.resolve(a)}else{if(!a.providers)console.warn("This image does not contain io.projectatomic.nulecule.providers .");else if(!a.specversion)console.warn("This image does not contain io.projectatomic.nulecule.specversion.");else if(!a.atomicappversion)console.warn("This image does not contain io.projectatomic.nulecule.atomicappversion.");o.reject(new Error(i("This image is not a supported Nulecule image")))}}).always(function(){c.close()});var s=o.promise();s.cancel=function l(){c.close()};return s}function m(){var r=e.Deferred();t("checking atomic version");var o=n.spawn(["/usr/bin/atomic","--version"],{err:"out",superuser:true,pty:true}).fail(function(e){console.warn(e);var n=i("The 'atomic' command is not installed on the system.");var o=new Error(n);r.reject(o)}).done(function(e){var o=parseFloat(e);t("atomic version is "+o);if(parseFloat(e)>=a){r.resolve(e)}else{var c=n.format(i("The 'atomic' command version $0 is not supported."),o);var s=new Error(c);r.reject(s)}}).always(function(){o.close()});var c=r.promise();c.cancel=function s(){o.close()};return c}function d(n){var o=e.Deferred();r.inspect_image(n).done(function(e){o.resolve()}).fail(function(e){var i="latest";var t=n.split(":");if(t.length>1)i=i[1];r.pull(n,i).progress(function(e){o.notify(e)}).done(function(e){o.resolve()}).fail(function(e){o.reject(e)})});return o.promise()}function g(n){var r=e.Deferred();m().done(function(){d(n).progress(function(e){r.notify(e)}).done(function(){v(n).done(function(e){r.resolve(e)}).fail(function(e){r.reject(e)})}).fail(function(e){r.reject(e)})}).fail(function(e){r.reject(new Error(i("Unable to pull Nulecule app image.")))});var o=r.promise();return o}function w(r,o){var a=e.Deferred();var c;var l;if(!s){a.reject();return a.promise()}if(r==="install"){l=n.spawn(["/usr/bin/atomic","install","--opt2=--answers-format=json",o],{err:"out",superuser:true,directory:s,pty:true});t("Installing image: "+o+" in folder "+s);a.notify(i("Installing ..."))}else{l=n.spawn(["/usr/bin/atomic","run","--opt2=--answers=/atomicapp/answers.conf",o],{err:"out",superuser:true,directory:s,pty:true});t("Running image: "+o+" in folder "+s);a.notify(i("Running ..."))}function u(e,n){var r=null;var o=null;var i=e.split(n);if(i.length>1){r=i[1];o=r.split("\n");if(o.length>1){r=o[0]}}return r}l.always(function(){l.close()}).stream(function(e){e=String(e);t("buffer="+e);var n;if(e.indexOf("atomicapp.status.info.message")>-1){n=u(e,"atomicapp.status.info.message=");if(n)a.notify(n)}else if(e.indexOf("atomicapp.status.error.message")>-1){n=u(e,"atomicapp.status.error.message=");if(n){a.reject(new Error(n))}}}).done(function(e){a.resolve()}).fail(function(e){if(e.problem==="cancelled"){a.reject(e);return}var n=i("Image failed to "+r);console.warn(e.message);var o=new Error(n);a.reject(o)});c=a.promise();c.cancel=function f(){l.close("cancelled")};return c}o.close=function j(){if(s)u();return};o.install=function y(r){var a=e.Deferred();var f=null;var p;var v;if(s)u();g(r).progress(function(e){a.notify(e)}).done(function(e){var u=e.atomicappversion.trim();if(u==c){p=l().done(function(e){s=e.trim();t("created directory :"+s);v=w("install",r).progress(function(e){a.notify(e)}).done(function(){t("reading "+s+"/answers.conf.sample");var e=n.file(s+"/answers.conf.sample");e.read().done(function(n){if(n){var r=JSON.parse(n);t(r);o.answers=r;a.resolve(r)}else{var c=i("Unable to read answer.conf.sample file.");var s=new Error(c);a.reject(s)}e.close()}).fail(function(n){console.warn(n);a.reject(n);e.close()})}).fail(function(e){var n=i("Image failed to install.");console.warn(e.message);var r=new Error(n);a.reject(r)})}).fail(function(e){var n=i("Temporary folder was not created");console.warn(e.message);var r=new Error(n);a.reject(r)})}else{var f=n.format(i("atomicapp version $0 is not supported."),u);console.warn(f);var m=new Error(f);a.reject(m)}}).fail(function(e){a.reject(e)});f=a.promise();f.cancel=function m(){if(v)v.cancel();if(p)p.cancel()};return f};o.run=function h(n){var r=e.Deferred();var t=null;var a;var c;a=f(o.answers).progress(function(e){r.notify(e)}).done(function(){c=w("run",n).progress(function(e){r.notify(e)}).done(function(){r.resolve()}).fail(function(e){var n=i("Image failed to run.");console.warn(e.message);var o=new Error(n);r.reject(o)})}).fail(function(e){r.reject(e)});t=r.promise();t.cancel=function s(){if(c)c.cancel();if(a)a.cancel()};return t}}o.nuleculeclient=function c(){return new a};return o});
