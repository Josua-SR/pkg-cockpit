(function(){"use strict";angular.module("registry.projects",["ngRoute","ui.cockpit","kubeClient","kubernetes.listing","ui.cockpit"]).config(["$routeProvider",function(e){e.when("/projects/:namespace?",{controller:"ProjectsCtrl",templateUrl:function(e){if(!e["namespace"])return"views/projects-page.html";else return"views/project-page.html"}})}]).controller("ProjectsCtrl",["$scope","$routeParams","$location","kubeSelect","kubeLoader","projectData","projectActions","ListingState",function(e,t,n,r,i,a,o,c){i.watch("users");i.watch("groups");i.watch("policybindings");var u=t["namespace"]||"";if(u){e.listing=new c(e);e.project=function(){return r().kind("Project").name(u).one()}}else{e.listing=new c(e);e.projects=function(){return r().kind("Project")};e.$on("activate",function(t,r){if(!e.listing.expandable){t.preventDefault();n.path("/projects/"+r)}})}angular.extend(e,a);angular.extend(e,o);e.users=function(){return r().kind("User")};e.groups=function(){return r().kind("Group")}}]).factory("projectData",["kubeSelect","kubeLoader",function(e,t){t.listen(function(e,t){var i;for(i in t){if(t[i].kind=="PolicyBinding")n(t[i].roleBindings,true)}for(i in e){if(e[i].kind=="PolicyBinding")n(e[i].roleBindings,false);else if(e[i].kind=="RoleBinding")r(e[i].subjects||[])}});function n(e,n){angular.forEach(e||[],function(e){t.handle(e.roleBinding,n,"RoleBinding")})}function r(e){angular.forEach(e,function(e){var n=t.resolve(e.kind,e.name,e.namespace);if(n in t.objects)return;var r={kind:e.kind,apiVersion:"v1",metadata:{name:e.name}};if(e.namespace)r.metadata.namespace=e.namespace;t.handle(r)})}e.register({name:"containsSubject",digests:function(e){var t,n,r,i,a=[];if(typeof e=="string"){a.push(e)}else if(e.kind=="User"||e.kind=="Group"){t=e.metadata||{};a.push(t.name+":"+e.kind)}else if(e.kind=="RoleBinding"){i=e.subjects||[];for(n=0,r=i.length;n<r;n++){a.push(i[n].name);a.push(i[n].name+":"+i[n].kind)}}return a}});function i(t,n){return e().kind("RoleBinding").namespace(n).containsSubject(t)}function a(e,t){return i(e,t).one()?true:false}function o(e,t){var n="";var r;if(!e||e.length===0)return n;if(e.length<=3){for(r=e.length-1;r>=0;r--){n+=e[r]+","}}else{if(t==="Groups"){n=e.length+" "+t}else if(t==="Users"){n=e.length+" "+t}}return n}return{subjectRoleBindings:i,subjectIsMember:a,formatMembers:o}}]).directive("projectPanel",["kubeLoader","kubeSelect",function(e,t){return{restrict:"A",scope:true,link:function(n,r,i){var a="main";n.tab=function(e,t){if(t){a=e;t.stopPropagation()}return a===e};var o=n.id;e.load("Project",null,null);n.project=function(){return t().kind("Project").name(o).one()}},templateUrl:"views/project-panel.html"}}]).directive("projectListing",function(){return{restrict:"A",templateUrl:"views/project-listing.html"}}).factory("projectActions",["$modal",function(e){function t(){return e.open({controller:"ProjectModifyCtrl",templateUrl:"views/project-modify.html",resolve:{dialogData:function(){return{}}}}).result}function n(t){return e.open({animation:false,controller:"ProjectModifyCtrl",templateUrl:"views/project-modify.html",resolve:{dialogData:function(){return{project:t}}}}).result}function r(){return e.open({controller:"UserNewCtrl",templateUrl:"views/add-user-dialog.html"})}function i(){return e.open({controller:"GroupNewCtrl",templateUrl:"views/add-group-dialog.html"})}return{createProject:t,modifyProject:n,createGroup:i,createUser:r}}]).controller("ProjectModifyCtrl",["$q","$scope","dialogData","kubeMethods",function(e,t,n,r){var i=n.project||{};var a=i.metadata||{};var o=a.annotations||{};var c="openshift.io/display-name";var u="openshift.io/description";var s={name:a.name||"",display:o[c]||"",description:o[u]||""};t.fields=s;t.performCreate=function l(){var e;var t={kind:"ProjectRequest",apiVersion:"v1",metadata:{name:s.name.trim()},displayName:s.display.trim(),description:s.description.trim()};return r.check(t,{"metadata.name":"#project-new-name"}).then(function(){return r.create(t)})};t.performModify=function d(){var e={};var t={metadata:{annotations:e}};var n=s.display.trim();if(n!==o[c])e[c]=n;n=s.description.trim();if(n!==o[u])e[u]=n;return r.check(t,{}).then(function(){return r.patch(i,t)})};angular.extend(t,n)}]).controller("UserNewCtrl",["$q","$scope","kubeMethods",function(e,t,n){var r={name:"",identities:""};t.fields=r;t.performCreate=function i(){var e;var t=[];if(r.identities.trim()!=="")t=[r.identities.trim()];var i={kind:"User",apiVersion:"v1",metadata:{name:r.name.trim()},identities:t};return n.check(i,{"metadata.name":"#user_name"}).then(function(){return n.create(i)})}}]).controller("GroupNewCtrl",["$q","$scope","kubeMethods",function(e,t,n){var r={name:""};t.fields=r;t.performCreate=function i(){var e;var t={kind:"Group",apiVersion:"v1",metadata:{name:r.name.trim()}};return n.check(t,{"metadata.name":"#group_name"}).then(function(){return n.create(t)})}}])})();
