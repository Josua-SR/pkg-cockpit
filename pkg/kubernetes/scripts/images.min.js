(function(){"use strict";function e(e,a,t){var n,r,i;var m,o,l=(e.status||{}).tags||[];for(m=0,o=l.length;m<o;m++){i=l[m].items||[];for(n=0,r=i.length;n<r;n++)a.call(t||null,l[m],i[n])}}angular.module("registry.images",["ngRoute","ui.cockpit","kubeClient","kubernetes.date","kubernetes.listing","registry.layers"]).config(["$routeProvider",function(e){e.when("/images/:namespace?",{templateUrl:"views/images-page.html",controller:"ImagesCtrl"}).when("/images/:namespace/:target",{controller:"ImageCtrl",templateUrl:function(e){var a=e["target"]||"";if(a.indexOf(":")===-1)return"views/imagestream-page.html";else return"views/image-page.html"}})}]).controller("ImagesCtrl",["$scope","$location","imageData","imageActions","ListingState","filterService",function(e,a,t,n,r){e.imagestreams=t.allStreams;angular.extend(e,t);e.listing=new r(e);t.watchImages();e.$on("activate",function(t,n){if(!e.listing.expandable){t.preventDefault();a.path("/images/"+n)}});angular.extend(e,n)}]).controller("ImageCtrl",["$scope","$location","$routeParams","kubeSelect","kubeLoader","imageData","imageActions","ListingState",function(a,t,n,r,i,m,o,l){var s=n["target"]||"";var g=s.indexOf(":");var c=n["namespace"]||"";var u,f;if(g===-1){a.kind="ImageStream";u=s;f=null}else{a.kind="Image";u=s.substr(0,g);f=s.substr(g+1)}m.watchImages();var d=i.listen(function(){a.stream=r().kind("ImageStream").namespace(c).name(u).one();a.image=a.config=a.layers=a.labels=a.tag=null;e(a.stream||{},function(e,t){if(e.tag===f)a.tag=e});if(a.tag)a.image=r().kind("Image").taggedBy(a.tag).one();if(a.image){a.names=m.imageTagNames(a.image);a.config=m.imageConfig(a.image);a.layers=m.imageLayers(a.image);a.labels=m.imageLabels(a.image)}});a.listing=new l(a);a.listing.inline=true;a.imagestreams=function(){if(a.stream)return{"/":a.stream};return{}};a.$on("$destroy",function(){d.cancel()});angular.extend(a,m);angular.extend(a,o);a.deleteImageStream=function(e){var n=o.deleteImageStream(e);n.then(function(){t.path(a.viewUrl("images"))});return n};a.deleteTag=function(e,a){var n=o.deleteTag(e,a);n.then(function(){var a=["images",e.metadata.namespace,e.metadata.name];t.path("/"+a.map(encodeURIComponent).join("/"))});return n}}]).directive("imagePanel",["kubeLoader","imageData",function(e,a){return{restrict:"A",scope:true,link:function(t,n,r){var i="main";t.tab=function(e,a){if(a){i=e;a.stopPropagation()}return i===e};var m=e.listen(function(){t.names=t.config=t.layers=t.labels=null;if(t.image){t.names=a.imageTagNames(t.image);t.config=a.imageConfig(t.image);t.layers=a.imageLayers(t.image);t.labels=a.imageLabels(t.image)}});t.$on("$destroy",function(){m.cancel()})},templateUrl:"views/image-panel.html"}}]).directive("imageBody",function(){return{restrict:"A",templateUrl:"views/image-body.html"}}).directive("imageConfig",function(){return{restrict:"A",templateUrl:"views/image-config.html"}}).directive("imageMeta",function(){return{restrict:"A",templateUrl:"views/image-meta.html"}}).directive("imagestreamBody",function(){return{restrict:"A",templateUrl:"views/imagestream-body.html"}}).directive("imagestreamMeta",function(){return{restrict:"A",templateUrl:"views/imagestream-meta.html"}}).directive("imageListing",function(){return{restrict:"A",templateUrl:"views/image-listing.html"}}).factory("imageData",["kubeSelect","kubeLoader",function(a,t){function n(e){for(var a in e){if(e[a].kind==="ImageStream")r(e[a])}}function r(e){var a=e.metadata||{};var n=e.status||{};angular.forEach(n.tags||[],function(e){angular.forEach(e.items||[],function(e){var n=t.resolve("Image",e.image);if(n in t.objects)return;var r={kind:"Image",apiVersion:"v1",metadata:{name:e.image}};t.handle(r);var i=a.name+"@"+e.image;t.load("ImageStreamImage",i,a.namespace).then(function(e){var a=e.image;if(a){a.kind="Image";t.handle(a)}},function(e){console.warn("couldn't load image: "+e.statusText);r.metadata.resourceVersion="invalid"})})})}var i=null;function m(){t.watch("images");if(!i)i=t.watch("imagestreams");return i}t.listen(n);a.register("taggedBy",function(e){var t,n,r={};for(t=0,n=e.items.length;t<n;t++)this.name(e.items[t].image).extend(r);return a(r)});a.register({name:"containsTagImage",digests:function(a){var t=[];if(typeof a=="string"){t.push(a)}else{e(a,function(e,a){t.push(a.image+"")})}return t}});a.register("listTagNames",function(a){var t=[];angular.forEach(this.containsTagImage(a),function(n){e(n,function(e,r){if(!a||r.image==a)t.push(n.metadata.namespace+"/"+n.metadata.name+":"+e.tag)})});return t});a.register("dockerImageManifest",function(){var e={};angular.forEach(this,function(a,t){var n,r=a.dockerImageManifest;if(r){r=JSON.parse(r);angular.forEach(r.history||[],function(e){if(typeof e.v1Compatibility=="string")e.v1Compatibility=JSON.parse(e.v1Compatibility)});e[t]=r}});return a(e)});a.register("dockerImageConfig",function(){var e={};angular.forEach(this,function(a,t){var n,r=o(a)||{};if(r[0]){n=r[0].v1Compatibility;if(n&&n.config){e[t]=n.config;return}}var i=a.dockerImageMetadata||{};if(i.Config)e[t]=i.Config});return a(e)});a.register("dockerConfigLabels",function(){var e={};angular.forEach(this,function(a,t){var n;if(a)n=a.Labels;if(n)e[t]=n});return a(e)});function o(e){if(!e)return null;var t=a(e).dockerImageManifest().one();if(!t||t.schemaVersion!==1)return null;return t.history}function l(e){var a=[];if(!e)return"";if(e.Entrypoint)a.push.apply(a,e.Entrypoint);if(e.Cmd)a.push.apply(a,e.Cmd);var t=a.join(" ");if(e.User&&e.User.split(":")[0]!="root")return"$ "+t;else return"# "+t}return{watchImages:m,allStreams:function s(){return a().kind("ImageStream")},imagesByTag:function g(e){return a().kind("Image").taggedBy(e)},imageLayers:o,imageConfig:function c(e){return a(e).dockerImageConfig().one()||{}},imageTagNames:function u(e){return a().kind("ImageStream").listTagNames(e.metadata.name)},imageLabels:function f(e){return a(e).dockerImageConfig().dockerConfigLabels().one()},configCommand:l}}]).factory("imageActions",["$modal",function(e){function a(a){return e.open({animation:false,controller:"ImageStreamDeleteCtrl",templateUrl:"views/imagestream-delete.html",resolve:{dialogData:function(){return{stream:a}}}}).result}function t(){return e.open({animation:false,controller:"ImageStreamModifyCtrl",templateUrl:"views/imagestream-modify.html",resolve:{dialogData:function(){return{}}}}).result}function n(a){return e.open({animation:false,controller:"ImageStreamModifyCtrl",templateUrl:"views/imagestream-modify.html",resolve:{dialogData:function(){return{stream:a}}}}).result}function r(a,t){var n=e.open({animation:false,controller:"ImageDeleteCtrl",templateUrl:"views/image-delete.html",resolve:{dialogData:function(){return{stream:a,tag:t}}}});return n.result}return{createImageStream:t,modifyImageStream:n,deleteImageStream:a,deleteTag:r}}]).controller("ImageStreamDeleteCtrl",["$scope","$modalInstance","dialogData","kubeMethods",function(e,a,t,n){angular.extend(e,t);e.performDelete=function r(){return n.delete(e.stream)}}]).controller("ImageStreamModifyCtrl",["$scope","$modalInstance","dialogData","kubeMethods","filterService",function(e,a,t,n,r){var i=t.stream||{};var m=i.metadata||{};var o=i.spec||{};var l={name:m.name||"",project:m.namespace||r.namespace()||"",populate:o.dockerImageRepository?"pull":"none",pull:o.dockerImageRepository||""};e.fields=l;e.labels={populate:{none:"Don't pull images automatically",pull:"Pull all tags from another image repository"}};function s(){var e={spec:{dockerImageRepository:null,tags:null}};if(l.populate!="none")e.spec.dockerImageRepository=l.pull.trim();return n.patch(i,e)}function g(){var e={kind:"ImageStream",metadata:{name:l.name.trim(),namespace:l.project.trim()}};if(l.populate!="none"){e.spec={dockerImageRepository:l.pull.trim()}}return n.check(e,{"metadata.name":"#imagestream-modify-name","metadata.namespace":"#imagestream-modify-project"}).then(function(){return n.create(e,l.project)})}e.performCreate=g;e.performModify=s;e.projects=r.namespaces;angular.extend(e,t)}]).controller("ImageDeleteCtrl",["$scope","$modalInstance","dialogData","kubeMethods",function(e,a,t,n){angular.extend(e,t);e.performDelete=function r(){var a=e.stream.metadata.name+":"+e.tag.tag;return n.delete("ImageStreamTag",a,e.stream.metadata.namespace)}}])})();
