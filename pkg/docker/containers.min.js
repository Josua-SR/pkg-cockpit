require(["jquery","base1/cockpit","base1/mustache","docker/client","docker/overview","docker/details","docker/image","system/service","translated!base1/po"],function(e,n,o,t,i,c,a,r,l){n.locale(l);var d=n.gettext;var s=n.gettext;var u;var f=r.proxy("docker");function h(t,i){u=e("#curtain-tmpl").html();o.parse(u);e(t).on("failure",function(e,n){v(n)});e("#curtain").on("click","[data-action=docker-start]",function(){v(null);f.start().done(function(){t.close();t.connect().done(i)}).fail(function(e){v(n.format(d("Failed to start Docker: $0"),e))})});e("#curtain").on("click","[data-action=docker-connect]",function(){v(null);t.close();t.connect().done(i)})}function v(n){var t={};if(n===null){t.connecting=true}else if(typeof n=="string"){t.other=n;console.warn(n)}else if(n.problem=="not-found"){t.notfound=true}else if(n.problem=="access-denied"){t.denied=true}else{t.other=n.toString();console.warn(n)}e("#curtain").html(o.render(u,t));e("body > div").hide();e("#curtain").show();e("body").show()}function g(){e("#curtain").hide()}function k(){var o;var r;var l;var d;function s(){var o=n.location.path;e("body").show();g();if(o.length===0){l.hide();d.hide();r.show()}else if(o.length===1){r.hide();d.hide();l.show(o[0])}else if(o.length===2&&o[0]=="image"){r.hide();l.hide();d.show(o[1])}else{console.warn("not a containers location: "+o);n.location=""}}n.translate();o=t.init();h(o,s);r=i.init(o);l=c.init(o);d=a.init(o);v(null);o.connect().done(s);e(n).on("locationchanged",s)}e(k)});
