# Makefile.in generated by automake 1.15 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# Mustache is distributed for compat reasons

# This file is part of Cockpit.
#
# Copyright (C) 2013 Red Hat, Inc.
#
# Cockpit is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# Cockpit is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with Cockpit; If not, see <http://www.gnu.org/licenses/>.




VPATH = @srcdir@
am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = cockpit-bridge$(EXEEXT)
check_PROGRAMS = test-server$(EXEEXT)
libexec_PROGRAMS = $(am__EXEEXT_1) cockpit-askpass$(EXEEXT) \
	cockpit-stub$(EXEEXT) $(am__EXEEXT_2) $(am__EXEEXT_3) \
	cockpit-ws$(EXEEXT) cockpit-session$(EXEEXT)
noinst_PROGRAMS = $(am__EXEEXT_6) mock-bridge$(EXEEXT) $(am__EXEEXT_7) \
	frob-websocket$(EXEEXT) test-websocket$(EXEEXT) \
	$(am__EXEEXT_4) $(am__EXEEXT_9) test-server$(EXEEXT) \
	$(am__EXEEXT_11) mock-echo$(EXEEXT) mock-auth-command$(EXEEXT) \
	$(am__EXEEXT_4) mock-pam-conv-mod.so$(EXEEXT) $(am__EXEEXT_12)
sbin_PROGRAMS = remotectl$(EXEEXT)
TESTS = tools/test-bots $(am__EXEEXT_13) $(am__EXEEXT_16) \
	$(am__EXEEXT_6) $(am__EXEEXT_7) test-websocket$(EXEEXT) \
	$(am__EXEEXT_4) tools/test-static-code tools/test-bots \
	$(am__EXEEXT_17) $(am__EXEEXT_11) $(am__EXEEXT_12)
@ENABLE_DOC_TRUE@am__append_1 = doc/cockpit-transport.svg \
@ENABLE_DOC_TRUE@	doc/cockpit-transport.png $(NULL) \
@ENABLE_DOC_TRUE@	$(GUIDE_DOCBOOK) $(GUIDE_INCLUDES) \
@ENABLE_DOC_TRUE@	$(GUIDE_XSLT) $(GUIDE_FONTS) $(GUIDE_STATIC) \
@ENABLE_DOC_TRUE@	dist/guide/html dist/guide/links.html \
@ENABLE_DOC_TRUE@	dist/guide/index.html \
@ENABLE_DOC_TRUE@	doc/guide/directory.html \
@ENABLE_DOC_TRUE@	doc/guide/footer.html doc/guide/version.in \
@ENABLE_DOC_TRUE@	$(NULL) doc/man/cockpit-bridge.xml $(NULL) \
@ENABLE_DOC_TRUE@	doc/man/cockpit.xml doc/man/cockpit-ws.xml \
@ENABLE_DOC_TRUE@	doc/man/cockpit.conf.xml \
@ENABLE_DOC_TRUE@	doc/man/pam_ssh_add.xml doc/man/remotectl.xml \
@ENABLE_DOC_TRUE@	$(NULL)
@ENABLE_DOC_TRUE@am__append_2 = \
@ENABLE_DOC_TRUE@	dist/guide/html/index.html \
@ENABLE_DOC_TRUE@	dist/guide/index.html

@ENABLE_DOC_TRUE@am__append_3 = \
@ENABLE_DOC_TRUE@	dist/guide/html/* \
@ENABLE_DOC_TRUE@	dist/guide/links.html \
@ENABLE_DOC_TRUE@	dist/guide/index.html \
@ENABLE_DOC_TRUE@	*.tmp \
@ENABLE_DOC_TRUE@	$(NULL)

@ENABLE_DOC_TRUE@am__append_4 = doc/man/cockpit-bridge.1 $(NULL) \
@ENABLE_DOC_TRUE@	doc/man/cockpit.1 doc/man/cockpit-ws.8 \
@ENABLE_DOC_TRUE@	doc/man/cockpit.conf.5 doc/man/pam_ssh_add.8 \
@ENABLE_DOC_TRUE@	doc/man/remotectl.8 $(NULL)
@WITH_GOLANG_TRUE@am__append_5 = cockpit-kube-auth cockpit-kube-launch

# -----------------------------------------------------------------------------
# PCP
@ENABLE_PCP_TRUE@am__append_6 = cockpit-pcp
@ENABLE_PCP_TRUE@am__append_7 = libcockpit-pcp.a
@ENABLE_PCP_TRUE@am__append_8 = $(pmlogconf_DATA)
@ENABLE_PCP_TRUE@am__append_9 = \
@ENABLE_PCP_TRUE@	test-pcp \
@ENABLE_PCP_TRUE@	test-pcp-archives \
@ENABLE_PCP_TRUE@	$(NULL)

@ENABLE_PCP_TRUE@am__append_10 = mock-pmda.so
@ENABLE_PCP_TRUE@am__append_11 = \
@ENABLE_PCP_TRUE@	mock-pmda.so \
@ENABLE_PCP_TRUE@	mock-archives/* \
@ENABLE_PCP_TRUE@	$(NULL)

@WITH_COCKPIT_SSH_TRUE@am__append_12 = libcockpit-ssh.a
@WITH_COCKPIT_SSH_TRUE@am__append_13 = cockpit-ssh
@WITH_COCKPIT_SSH_TRUE@am__append_14 = mock-sshd $(SSH_CHECKS)
@WITH_COCKPIT_SSH_TRUE@am__append_15 = test_rsa_key
@WITH_COCKPIT_SSH_TRUE@am__append_16 = \
@WITH_COCKPIT_SSH_TRUE@	test_rsa_key \
@WITH_COCKPIT_SSH_TRUE@	$(NULL)

@WITH_COCKPIT_SSH_TRUE@am__append_17 = \
@WITH_COCKPIT_SSH_TRUE@	src/ssh/mock_rsa_key \
@WITH_COCKPIT_SSH_TRUE@	src/ssh/mock_dsa_key \
@WITH_COCKPIT_SSH_TRUE@	src/ssh/test_rsa \
@WITH_COCKPIT_SSH_TRUE@	src/ssh/test_rsa.pub \
@WITH_COCKPIT_SSH_TRUE@	src/ssh/mock_known_hosts \
@WITH_COCKPIT_SSH_TRUE@	src/ssh/mock-pid-cat \
@WITH_COCKPIT_SSH_TRUE@	src/ssh/mock-config \
@WITH_COCKPIT_SSH_TRUE@	src/ssh/invalid_known_hosts \
@WITH_COCKPIT_SSH_TRUE@	$(NULL)

@WITH_COCKPIT_SSH_TRUE@am__append_18 = \
@WITH_COCKPIT_SSH_TRUE@	src/ssh/mock-pid-cat \
@WITH_COCKPIT_SSH_TRUE@	$(NULL)

@WITH_COCKPIT_SSH_TRUE@am__append_19 = $(SSH_CHECKS)
@WITH_COCKPIT_SSH_TRUE@am__append_20 = \
@WITH_COCKPIT_SSH_TRUE@	test-authssh \
@WITH_COCKPIT_SSH_TRUE@	$(NULL)

subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(top_srcdir)/configure \
	$(am__configure_deps) $(dist_systemdunit_DATA) \
	$(am__DIST_COMMON)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno config.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = config.h
CONFIG_CLEAN_FILES = doc/guide/version
CONFIG_CLEAN_VPATH_FILES =
LIBRARIES = $(noinst_LIBRARIES)
ARFLAGS = cru
AM_V_AR = $(am__v_AR_@AM_V@)
am__v_AR_ = $(am__v_AR_@AM_DEFAULT_V@)
am__v_AR_0 = @echo "  AR      " $@;
am__v_AR_1 = 
libcockpit_bridge_a_AR = $(AR) $(ARFLAGS)
libcockpit_bridge_a_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 =
am__objects_2 =  \
	src/bridge/libcockpit_bridge_a-cockpitblocksamples.$(OBJEXT) \
	src/bridge/libcockpit_bridge_a-cockpitcgroupsamples.$(OBJEXT) \
	src/bridge/libcockpit_bridge_a-cockpitcpusamples.$(OBJEXT) \
	src/bridge/libcockpit_bridge_a-cockpitdisksamples.$(OBJEXT) \
	src/bridge/libcockpit_bridge_a-cockpitinternalmetrics.$(OBJEXT) \
	src/bridge/libcockpit_bridge_a-cockpitmemorysamples.$(OBJEXT) \
	src/bridge/libcockpit_bridge_a-cockpitmetrics.$(OBJEXT) \
	src/bridge/libcockpit_bridge_a-cockpitmountsamples.$(OBJEXT) \
	src/bridge/libcockpit_bridge_a-cockpitnetworksamples.$(OBJEXT) \
	src/bridge/libcockpit_bridge_a-cockpitsamples.$(OBJEXT) \
	$(am__objects_1)
am_libcockpit_bridge_a_OBJECTS =  \
	src/bridge/libcockpit_bridge_a-cockpitconnect.$(OBJEXT) \
	src/bridge/libcockpit_bridge_a-cockpitdbussetup.$(OBJEXT) \
	src/bridge/libcockpit_bridge_a-cockpitdbususer.$(OBJEXT) \
	src/bridge/libcockpit_bridge_a-cockpitdbusmachines.$(OBJEXT) \
	src/bridge/libcockpit_bridge_a-cockpitpolkitagent.$(OBJEXT) \
	src/bridge/libcockpit_bridge_a-cockpitfsread.$(OBJEXT) \
	src/bridge/libcockpit_bridge_a-cockpitfsreplace.$(OBJEXT) \
	src/bridge/libcockpit_bridge_a-cockpitfswatch.$(OBJEXT) \
	src/bridge/libcockpit_bridge_a-cockpitfslist.$(OBJEXT) \
	$(am__objects_2) $(am__objects_1)
libcockpit_bridge_a_OBJECTS = $(am_libcockpit_bridge_a_OBJECTS)
libcockpit_common_a_AR = $(AR) $(ARFLAGS)
libcockpit_common_a_LIBADD =
am__objects_3 =  \
	src/common/libcockpit_common_a-cockpitassets.$(OBJEXT) \
	$(am__objects_1)
am_libcockpit_common_a_OBJECTS =  \
	src/common/libcockpit_common_a-cockpitauthorize.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitbase64.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpiterror.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitframe.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpithash.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpithex.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitjson.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitknownhosts.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitlog.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitlocale.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitloopback.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitmachinesjson.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitmemory.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitpipe.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitpipetransport.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitsystem.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpittemplate.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpittest.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpittransport.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitunicode.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitunixfd.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitunixsignal.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitversion.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitwebfilter.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitwebinject.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitwebresponse.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitwebserver.$(OBJEXT) \
	src/common/libcockpit_common_a-cockpitconf.$(OBJEXT) \
	src/common/libcockpit_common_a-mock-dbus-tests.$(OBJEXT) \
	src/common/libcockpit_common_a-mock-service.$(OBJEXT) \
	$(am__objects_3) $(am__objects_1)
libcockpit_common_a_OBJECTS = $(am_libcockpit_common_a_OBJECTS)
libcockpit_pcp_a_AR = $(AR) $(ARFLAGS)
libcockpit_pcp_a_LIBADD =
am__libcockpit_pcp_a_SOURCES_DIST = src/bridge/cockpitchannel.c \
	src/bridge/cockpitchannel.h src/bridge/cockpitconnect.c \
	src/bridge/cockpitconnect.h src/bridge/cockpitpcpmetrics.c \
	src/bridge/cockpitpcpmetrics.h src/bridge/cockpitpeer.c \
	src/bridge/cockpitpeer.h src/bridge/cockpitrouter.c \
	src/bridge/cockpitrouter.h src/bridge/cockpitblocksamples.c \
	src/bridge/cockpitblocksamples.h \
	src/bridge/cockpitcgroupsamples.c \
	src/bridge/cockpitcgroupsamples.h \
	src/bridge/cockpitcpusamples.c src/bridge/cockpitcpusamples.h \
	src/bridge/cockpitdisksamples.c \
	src/bridge/cockpitdisksamples.h \
	src/bridge/cockpitinternalmetrics.c \
	src/bridge/cockpitinternalmetrics.h \
	src/bridge/cockpitmemorysamples.c \
	src/bridge/cockpitmemorysamples.h src/bridge/cockpitmetrics.c \
	src/bridge/cockpitmetrics.h src/bridge/cockpitmountsamples.c \
	src/bridge/cockpitmountsamples.h \
	src/bridge/cockpitnetworksamples.c \
	src/bridge/cockpitnetworksamples.h src/bridge/cockpitsamples.c \
	src/bridge/cockpitsamples.h
am__objects_4 =  \
	src/bridge/libcockpit_pcp_a-cockpitblocksamples.$(OBJEXT) \
	src/bridge/libcockpit_pcp_a-cockpitcgroupsamples.$(OBJEXT) \
	src/bridge/libcockpit_pcp_a-cockpitcpusamples.$(OBJEXT) \
	src/bridge/libcockpit_pcp_a-cockpitdisksamples.$(OBJEXT) \
	src/bridge/libcockpit_pcp_a-cockpitinternalmetrics.$(OBJEXT) \
	src/bridge/libcockpit_pcp_a-cockpitmemorysamples.$(OBJEXT) \
	src/bridge/libcockpit_pcp_a-cockpitmetrics.$(OBJEXT) \
	src/bridge/libcockpit_pcp_a-cockpitmountsamples.$(OBJEXT) \
	src/bridge/libcockpit_pcp_a-cockpitnetworksamples.$(OBJEXT) \
	src/bridge/libcockpit_pcp_a-cockpitsamples.$(OBJEXT) \
	$(am__objects_1)
@ENABLE_PCP_TRUE@am_libcockpit_pcp_a_OBJECTS = src/bridge/libcockpit_pcp_a-cockpitchannel.$(OBJEXT) \
@ENABLE_PCP_TRUE@	src/bridge/libcockpit_pcp_a-cockpitconnect.$(OBJEXT) \
@ENABLE_PCP_TRUE@	src/bridge/libcockpit_pcp_a-cockpitpcpmetrics.$(OBJEXT) \
@ENABLE_PCP_TRUE@	src/bridge/libcockpit_pcp_a-cockpitpeer.$(OBJEXT) \
@ENABLE_PCP_TRUE@	src/bridge/libcockpit_pcp_a-cockpitrouter.$(OBJEXT) \
@ENABLE_PCP_TRUE@	$(am__objects_4) $(am__objects_1)
libcockpit_pcp_a_OBJECTS = $(am_libcockpit_pcp_a_OBJECTS)
libcockpit_ssh_a_AR = $(AR) $(ARFLAGS)
libcockpit_ssh_a_LIBADD =
am__libcockpit_ssh_a_SOURCES_DIST = src/ssh/cockpitsshoptions.c \
	src/ssh/cockpitsshoptions.h src/ssh/cockpitsshrelay.h \
	src/ssh/cockpitsshrelay.c src/common/cockpitauthorize.c \
	src/common/cockpitauthorize.h
@WITH_COCKPIT_SSH_TRUE@am_libcockpit_ssh_a_OBJECTS = src/ssh/libcockpit_ssh_a-cockpitsshoptions.$(OBJEXT) \
@WITH_COCKPIT_SSH_TRUE@	src/ssh/libcockpit_ssh_a-cockpitsshrelay.$(OBJEXT) \
@WITH_COCKPIT_SSH_TRUE@	src/common/libcockpit_ssh_a-cockpitauthorize.$(OBJEXT) \
@WITH_COCKPIT_SSH_TRUE@	$(am__objects_1)
libcockpit_ssh_a_OBJECTS = $(am_libcockpit_ssh_a_OBJECTS)
libcockpit_stub_a_AR = $(AR) $(ARFLAGS)
libcockpit_stub_a_LIBADD =
am_libcockpit_stub_a_OBJECTS =  \
	src/bridge/libcockpit_stub_a-cockpitchannel.$(OBJEXT) \
	src/bridge/libcockpit_stub_a-cockpitconnect.$(OBJEXT) \
	src/bridge/libcockpit_stub_a-cockpitdbuscache.$(OBJEXT) \
	src/bridge/libcockpit_stub_a-cockpitdbusinternal.$(OBJEXT) \
	src/bridge/libcockpit_stub_a-cockpitdbusjson.$(OBJEXT) \
	src/bridge/libcockpit_stub_a-cockpitdbusprocess.$(OBJEXT) \
	src/bridge/libcockpit_stub_a-cockpitdbusmeta.$(OBJEXT) \
	src/bridge/libcockpit_stub_a-cockpitdbusrules.$(OBJEXT) \
	src/bridge/libcockpit_stub_a-cockpitechochannel.$(OBJEXT) \
	src/bridge/libcockpit_stub_a-cockpitpipechannel.$(OBJEXT) \
	src/bridge/libcockpit_stub_a-cockpithttpstream.$(OBJEXT) \
	src/bridge/libcockpit_stub_a-cockpitinteracttransport.$(OBJEXT) \
	src/bridge/libcockpit_stub_a-cockpitpackages.$(OBJEXT) \
	src/bridge/libcockpit_stub_a-cockpitpaths.$(OBJEXT) \
	src/bridge/libcockpit_stub_a-cockpitpeer.$(OBJEXT) \
	src/bridge/libcockpit_stub_a-cockpitnullchannel.$(OBJEXT) \
	src/bridge/libcockpit_stub_a-cockpitrouter.$(OBJEXT) \
	src/bridge/libcockpit_stub_a-cockpitstream.$(OBJEXT) \
	src/bridge/libcockpit_stub_a-cockpitwebsocketstream.$(OBJEXT) \
	$(am__objects_1)
libcockpit_stub_a_OBJECTS = $(am_libcockpit_stub_a_OBJECTS)
libcockpit_ws_a_AR = $(AR) $(ARFLAGS)
libcockpit_ws_a_LIBADD =
am_libcockpit_ws_a_OBJECTS =  \
	src/ws/libcockpit_ws_a-cockpithandlers.$(OBJEXT) \
	src/ws/libcockpit_ws_a-cockpitauth.$(OBJEXT) \
	src/ws/libcockpit_ws_a-cockpitcertificate.$(OBJEXT) \
	src/ws/libcockpit_ws_a-cockpitcompat.$(OBJEXT) \
	src/ws/libcockpit_ws_a-cockpitbranding.$(OBJEXT) \
	src/ws/libcockpit_ws_a-cockpitchannelresponse.$(OBJEXT) \
	src/ws/libcockpit_ws_a-cockpitchannelsocket.$(OBJEXT) \
	src/ws/libcockpit_ws_a-cockpitcreds.$(OBJEXT) \
	src/ws/libcockpit_ws_a-cockpitwebservice.$(OBJEXT) \
	$(am__objects_1)
libcockpit_ws_a_OBJECTS = $(am_libcockpit_ws_a_OBJECTS)
libpam_ssh_add_a_AR = $(AR) $(ARFLAGS)
libpam_ssh_add_a_LIBADD =
am_libpam_ssh_add_a_OBJECTS =  \
	src/pam-ssh-add/libpam_ssh_add_a-pam-ssh-add.$(OBJEXT) \
	$(am__objects_1)
libpam_ssh_add_a_OBJECTS = $(am_libpam_ssh_add_a_OBJECTS)
libretest_a_AR = $(AR) $(ARFLAGS)
libretest_a_LIBADD =
am_libretest_a_OBJECTS = src/retest/retest.$(OBJEXT) $(am__objects_1)
libretest_a_OBJECTS = $(am_libretest_a_OBJECTS)
libwebsocket_a_AR = $(AR) $(ARFLAGS)
libwebsocket_a_LIBADD =
am_libwebsocket_a_OBJECTS =  \
	src/websocket/libwebsocket_a-websocket.$(OBJEXT) \
	src/websocket/libwebsocket_a-websocketclient.$(OBJEXT) \
	src/websocket/libwebsocket_a-websocketserver.$(OBJEXT) \
	src/websocket/libwebsocket_a-websocketconnection.$(OBJEXT) \
	$(am__objects_1)
libwebsocket_a_OBJECTS = $(am_libwebsocket_a_OBJECTS)
am__installdirs = "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libexecdir)" \
	"$(DESTDIR)$(sbindir)" "$(DESTDIR)$(man1dir)" \
	"$(DESTDIR)$(man5dir)" "$(DESTDIR)$(man8dir)" \
	"$(DESTDIR)$(basedir)" "$(DESTDIR)$(basedebugdir)" \
	"$(DESTDIR)$(basefontsdir)" "$(DESTDIR)$(centosbrandingdir)" \
	"$(DESTDIR)$(debianbrandingdir)" \
	"$(DESTDIR)$(defaultbrandingdir)" \
	"$(DESTDIR)$(systemdunitdir)" "$(DESTDIR)$(fedorabrandingdir)" \
	"$(DESTDIR)$(firewalldir)" \
	"$(DESTDIR)$(kubernetesbrandingdir)" \
	"$(DESTDIR)$(machinesdir)" "$(DESTDIR)$(appdatadir)" \
	"$(DESTDIR)$(basedir)" "$(DESTDIR)$(desktopdir)" \
	"$(DESTDIR)$(staticdir)" "$(DESTDIR)$(systemdunitdir)" \
	"$(DESTDIR)$(ovirtdir)" "$(DESTDIR)$(pixmapdir)" \
	"$(DESTDIR)$(playgrounddir)" "$(DESTDIR)$(pmlogconfdir)" \
	"$(DESTDIR)$(registrybrandingdir)" \
	"$(DESTDIR)$(rhelbrandingdir)" "$(DESTDIR)$(staticfontsdir)" \
	"$(DESTDIR)$(ubuntubrandingdir)"
@WITH_GOLANG_TRUE@am__EXEEXT_1 = cockpit-kube-auth$(EXEEXT) \
@WITH_GOLANG_TRUE@	cockpit-kube-launch$(EXEEXT)
@ENABLE_PCP_TRUE@am__EXEEXT_2 = cockpit-pcp$(EXEEXT)
@WITH_COCKPIT_SSH_TRUE@am__EXEEXT_3 = cockpit-ssh$(EXEEXT)
am__EXEEXT_4 =
@ENABLE_PCP_TRUE@am__EXEEXT_5 = test-pcp$(EXEEXT) \
@ENABLE_PCP_TRUE@	test-pcp-archives$(EXEEXT) $(am__EXEEXT_4)
am__EXEEXT_6 = test-paths$(EXEEXT) test-rules$(EXEEXT) \
	test-channel$(EXEEXT) test-pipe-channel$(EXEEXT) \
	test-packages$(EXEEXT) test-peer$(EXEEXT) \
	test-dbus-meta$(EXEEXT) test-fs$(EXEEXT) test-metrics$(EXEEXT) \
	test-connect$(EXEEXT) test-stream$(EXEEXT) \
	test-httpstream$(EXEEXT) test-setup$(EXEEXT) \
	test-websocketstream$(EXEEXT) test-process$(EXEEXT) \
	test-bridge$(EXEEXT) test-router$(EXEEXT) $(am__EXEEXT_4) \
	$(am__EXEEXT_5)
am__EXEEXT_7 = test-hash$(EXEEXT) test-hex$(EXEEXT) test-json$(EXEEXT) \
	test-locale$(EXEEXT) test-knownhosts$(EXEEXT) \
	test-pipe$(EXEEXT) test-transport$(EXEEXT) \
	test-unixsignal$(EXEEXT) test-template$(EXEEXT) \
	test-webresponse$(EXEEXT) test-webserver$(EXEEXT) \
	test-config$(EXEEXT) test-unicode$(EXEEXT) \
	test-version$(EXEEXT) test-system$(EXEEXT) \
	test-base64$(EXEEXT) test-authorize$(EXEEXT) $(am__EXEEXT_4)
@WITH_COCKPIT_SSH_TRUE@am__EXEEXT_8 = test-sshoptions$(EXEEXT) \
@WITH_COCKPIT_SSH_TRUE@	test-sshbridge$(EXEEXT) $(am__EXEEXT_4)
@WITH_COCKPIT_SSH_TRUE@am__EXEEXT_9 = mock-sshd$(EXEEXT) \
@WITH_COCKPIT_SSH_TRUE@	$(am__EXEEXT_8)
@WITH_COCKPIT_SSH_TRUE@am__EXEEXT_10 = test-authssh$(EXEEXT) \
@WITH_COCKPIT_SSH_TRUE@	$(am__EXEEXT_4)
am__EXEEXT_11 = test-base64$(EXEEXT) test-creds$(EXEEXT) \
	test-auth$(EXEEXT) test-compat$(EXEEXT) \
	test-webservice$(EXEEXT) test-channelresponse$(EXEEXT) \
	test-handlers$(EXEEXT) test-kerberos$(EXEEXT) \
	test-remotectlcertificate$(EXEEXT) $(am__EXEEXT_4) \
	$(am__EXEEXT_10)
am__EXEEXT_12 = test-ssh-add$(EXEEXT) $(am__EXEEXT_4)
PROGRAMS = $(bin_PROGRAMS) $(libexec_PROGRAMS) $(noinst_PROGRAMS) \
	$(sbin_PROGRAMS)
am_cockpit_askpass_OBJECTS =  \
	src/bridge/cockpit_askpass-askpass.$(OBJEXT)
cockpit_askpass_OBJECTS = $(am_cockpit_askpass_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = libcockpit-bridge.a libcockpit-stub.a \
	libcockpit-common.a libwebsocket.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
cockpit_askpass_DEPENDENCIES = $(am__DEPENDENCIES_2)
cockpit_askpass_LINK = $(CCLD) $(cockpit_askpass_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_cockpit_bridge_OBJECTS =  \
	src/bridge/cockpit_bridge-bridge.$(OBJEXT)
cockpit_bridge_OBJECTS = $(am_cockpit_bridge_OBJECTS)
cockpit_bridge_DEPENDENCIES = $(am__DEPENDENCIES_2)
cockpit_bridge_LINK = $(CCLD) $(cockpit_bridge_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am__cockpit_kube_auth_SOURCES_DIST = pkg/kubernetes/standalone/src/cockpit-kube-auth/helpers/creds.go \
	pkg/kubernetes/standalone/src/cockpit-kube-auth/helpers/client.go \
	pkg/kubernetes/standalone/src/cockpit-kube-auth/main.go
@WITH_GOLANG_TRUE@am__objects_5 = $(am__objects_1)
@WITH_GOLANG_TRUE@am__objects_6 = $(am__objects_5) $(am__objects_1)
@WITH_GOLANG_TRUE@am_cockpit_kube_auth_OBJECTS = $(am__objects_6)
cockpit_kube_auth_OBJECTS = $(am_cockpit_kube_auth_OBJECTS)
cockpit_kube_auth_LDADD = $(LDADD)
am__cockpit_kube_launch_SOURCES_DIST = pkg/kubernetes/standalone/src/cockpit-kube-auth/helpers/creds.go \
	pkg/kubernetes/standalone/src/cockpit-kube-auth/helpers/client.go \
	pkg/kubernetes/standalone/src/cockpit-kube-launch/main.go
@WITH_GOLANG_TRUE@am_cockpit_kube_launch_OBJECTS = $(am__objects_6)
cockpit_kube_launch_OBJECTS = $(am_cockpit_kube_launch_OBJECTS)
cockpit_kube_launch_LDADD = $(LDADD)
am__cockpit_pcp_SOURCES_DIST = src/bridge/cockpitpcp.c
@ENABLE_PCP_TRUE@am_cockpit_pcp_OBJECTS =  \
@ENABLE_PCP_TRUE@	src/bridge/cockpit_pcp-cockpitpcp.$(OBJEXT)
cockpit_pcp_OBJECTS = $(am_cockpit_pcp_OBJECTS)
@ENABLE_PCP_TRUE@am__DEPENDENCIES_3 = libcockpit-pcp.a \
@ENABLE_PCP_TRUE@	libcockpit-common.a $(am__DEPENDENCIES_1) \
@ENABLE_PCP_TRUE@	$(am__DEPENDENCIES_1)
@ENABLE_PCP_TRUE@cockpit_pcp_DEPENDENCIES = $(am__DEPENDENCIES_3)
cockpit_pcp_LINK = $(CCLD) $(cockpit_pcp_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_cockpit_session_OBJECTS = src/common/cockpitauthorize.$(OBJEXT) \
	src/common/cockpitbase64.$(OBJEXT) \
	src/common/cockpitframe.$(OBJEXT) \
	src/common/cockpitmemory.$(OBJEXT) src/ws/session.$(OBJEXT) \
	$(am__objects_1)
cockpit_session_OBJECTS = $(am_cockpit_session_OBJECTS)
cockpit_session_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__cockpit_ssh_SOURCES_DIST = src/ssh/ssh.c
@WITH_COCKPIT_SSH_TRUE@am_cockpit_ssh_OBJECTS =  \
@WITH_COCKPIT_SSH_TRUE@	src/ssh/cockpit_ssh-ssh.$(OBJEXT) \
@WITH_COCKPIT_SSH_TRUE@	$(am__objects_1)
cockpit_ssh_OBJECTS = $(am_cockpit_ssh_OBJECTS)
@WITH_COCKPIT_SSH_TRUE@am__DEPENDENCIES_4 = libcockpit-ssh.a \
@WITH_COCKPIT_SSH_TRUE@	libcockpit-common.a \
@WITH_COCKPIT_SSH_TRUE@	$(am__DEPENDENCIES_1) \
@WITH_COCKPIT_SSH_TRUE@	$(am__DEPENDENCIES_1)
@WITH_COCKPIT_SSH_TRUE@cockpit_ssh_DEPENDENCIES =  \
@WITH_COCKPIT_SSH_TRUE@	$(am__DEPENDENCIES_4) \
@WITH_COCKPIT_SSH_TRUE@	$(am__DEPENDENCIES_1) \
@WITH_COCKPIT_SSH_TRUE@	$(am__DEPENDENCIES_1)
cockpit_ssh_LINK = $(CCLD) $(cockpit_ssh_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_cockpit_stub_OBJECTS = src/bridge/cockpit_stub-stub.$(OBJEXT)
cockpit_stub_OBJECTS = $(am_cockpit_stub_OBJECTS)
am__DEPENDENCIES_5 = libcockpit-stub.a libcockpit-common.a \
	libwebsocket.a $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
cockpit_stub_DEPENDENCIES = $(am__DEPENDENCIES_5)
cockpit_stub_LINK = $(CCLD) $(cockpit_stub_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_cockpit_ws_OBJECTS = src/ws/cockpit_ws-main.$(OBJEXT) \
	$(am__objects_1)
cockpit_ws_OBJECTS = $(am_cockpit_ws_OBJECTS)
am__DEPENDENCIES_6 = libcockpit-ws.a libcockpit-common.a \
	libwebsocket.a $(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
cockpit_ws_DEPENDENCIES = $(am__DEPENDENCIES_6) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
cockpit_ws_LINK = $(CCLD) $(cockpit_ws_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_frob_websocket_OBJECTS =  \
	src/websocket/frob_websocket-frob-websocket.$(OBJEXT)
frob_websocket_OBJECTS = $(am_frob_websocket_OBJECTS)
frob_websocket_DEPENDENCIES = libwebsocket.a $(am__DEPENDENCIES_1)
am_mock_auth_command_OBJECTS = src/common/cockpitauthorize.$(OBJEXT) \
	src/common/cockpitbase64.$(OBJEXT) \
	src/common/cockpitframe.$(OBJEXT) \
	src/common/cockpitmemory.$(OBJEXT) \
	src/ws/mock-auth-command.$(OBJEXT) $(am__objects_1)
mock_auth_command_OBJECTS = $(am_mock_auth_command_OBJECTS)
mock_auth_command_LDADD = $(LDADD)
am_mock_bridge_OBJECTS = src/bridge/mock_bridge-mock-bridge.$(OBJEXT)
mock_bridge_OBJECTS = $(am_mock_bridge_OBJECTS)
mock_bridge_DEPENDENCIES = $(am__DEPENDENCIES_2)
mock_bridge_LINK = $(CCLD) $(mock_bridge_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_mock_echo_OBJECTS = src/ws/mock_echo-mock-echo.$(OBJEXT)
mock_echo_OBJECTS = $(am_mock_echo_OBJECTS)
mock_echo_DEPENDENCIES = $(am__DEPENDENCIES_1)
mock_echo_LINK = $(CCLD) $(mock_echo_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_mock_pam_conv_mod_so_OBJECTS = src/ws/mock-pam-conv-mod.$(OBJEXT)
mock_pam_conv_mod_so_OBJECTS = $(am_mock_pam_conv_mod_so_OBJECTS)
mock_pam_conv_mod_so_LDADD = $(LDADD)
am__mock_sshd_SOURCES_DIST = src/ssh/mock-sshd.c
@WITH_COCKPIT_SSH_TRUE@am_mock_sshd_OBJECTS =  \
@WITH_COCKPIT_SSH_TRUE@	src/ssh/mock_sshd-mock-sshd.$(OBJEXT)
mock_sshd_OBJECTS = $(am_mock_sshd_OBJECTS)
@WITH_COCKPIT_SSH_TRUE@mock_sshd_DEPENDENCIES = $(am__DEPENDENCIES_1) \
@WITH_COCKPIT_SSH_TRUE@	$(am__DEPENDENCIES_1)
mock_sshd_LINK = $(CCLD) $(mock_sshd_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_remotectl_OBJECTS = src/ws/remotectl-cockpitcertificate.$(OBJEXT) \
	src/ws/remotectl-remotectl-certificate.$(OBJEXT) \
	src/ws/remotectl-remotectl.$(OBJEXT) $(am__objects_1)
remotectl_OBJECTS = $(am_remotectl_OBJECTS)
remotectl_DEPENDENCIES = libcockpit-common.a $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
remotectl_LINK = $(CCLD) $(remotectl_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_auth_OBJECTS = src/ws/test_auth-test-auth.$(OBJEXT) \
	src/ws/test_auth-mock-auth.$(OBJEXT) $(am__objects_1)
test_auth_OBJECTS = $(am_test_auth_OBJECTS)
am__DEPENDENCIES_7 = $(am__DEPENDENCIES_6) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
test_auth_DEPENDENCIES = libcockpit-ws.a $(am__DEPENDENCIES_7) \
	$(am__DEPENDENCIES_1)
test_auth_LINK = $(CCLD) $(test_auth_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_authorize_OBJECTS =  \
	src/common/test_authorize-cockpitauthorize.$(OBJEXT) \
	src/common/test_authorize-cockpitbase64.$(OBJEXT) \
	src/common/test_authorize-cockpitmemory.$(OBJEXT) \
	src/common/test_authorize-test-authorize.$(OBJEXT) \
	$(am__objects_1)
test_authorize_OBJECTS = $(am_test_authorize_OBJECTS)
test_authorize_DEPENDENCIES = libretest.a
test_authorize_LINK = $(CCLD) $(test_authorize_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am__test_authssh_SOURCES_DIST = src/ws/test-authssh.c \
	src/ws/mock-auth.c src/ws/mock-auth.h
@WITH_COCKPIT_SSH_TRUE@am_test_authssh_OBJECTS = src/ws/test_authssh-test-authssh.$(OBJEXT) \
@WITH_COCKPIT_SSH_TRUE@	src/ws/test_authssh-mock-auth.$(OBJEXT) \
@WITH_COCKPIT_SSH_TRUE@	$(am__objects_1)
test_authssh_OBJECTS = $(am_test_authssh_OBJECTS)
@WITH_COCKPIT_SSH_TRUE@test_authssh_DEPENDENCIES = libcockpit-ws.a \
@WITH_COCKPIT_SSH_TRUE@	$(am__DEPENDENCIES_7)
test_authssh_LINK = $(CCLD) $(test_authssh_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_base64_OBJECTS = src/common/test_base64-test-base64.$(OBJEXT) \
	src/common/test_base64-cockpitbase64.$(OBJEXT) \
	$(am__objects_1)
test_base64_OBJECTS = $(am_test_base64_OBJECTS)
test_base64_DEPENDENCIES = libretest.a
test_base64_LINK = $(CCLD) $(test_base64_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_bridge_OBJECTS = src/bridge/test_bridge-test-bridge.$(OBJEXT)
test_bridge_OBJECTS = $(am_test_bridge_OBJECTS)
test_bridge_DEPENDENCIES = $(am__DEPENDENCIES_2)
test_bridge_LINK = $(CCLD) $(test_bridge_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_channel_OBJECTS =  \
	src/bridge/test_channel-test-channel.$(OBJEXT) \
	src/bridge/test_channel-mock-transport.$(OBJEXT)
test_channel_OBJECTS = $(am_test_channel_OBJECTS)
test_channel_DEPENDENCIES = $(am__DEPENDENCIES_2)
test_channel_LINK = $(CCLD) $(test_channel_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_channelresponse_OBJECTS =  \
	src/ws/test_channelresponse-test-channelresponse.$(OBJEXT) \
	src/ws/test_channelresponse-mock-auth.$(OBJEXT) \
	src/common/test_channelresponse-mock-io-stream.$(OBJEXT) \
	$(am__objects_1)
test_channelresponse_OBJECTS = $(am_test_channelresponse_OBJECTS)
test_channelresponse_DEPENDENCIES = libwebsocket.a libcockpit-ws.a \
	$(am__DEPENDENCIES_7) $(am__DEPENDENCIES_1)
test_channelresponse_LINK = $(CCLD) $(test_channelresponse_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_compat_OBJECTS = src/ws/test_compat-test-compat.$(OBJEXT)
test_compat_OBJECTS = $(am_test_compat_OBJECTS)
test_compat_DEPENDENCIES = libcockpit-ws.a $(am__DEPENDENCIES_7)
test_compat_LINK = $(CCLD) $(test_compat_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_config_OBJECTS = src/common/test_config-test-config.$(OBJEXT)
test_config_OBJECTS = $(am_test_config_OBJECTS)
am__DEPENDENCIES_8 = libcockpit-common.a libwebsocket.a \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
test_config_DEPENDENCIES = $(am__DEPENDENCIES_8)
test_config_LINK = $(CCLD) $(test_config_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_connect_OBJECTS =  \
	src/bridge/test_connect-test-connect.$(OBJEXT)
test_connect_OBJECTS = $(am_test_connect_OBJECTS)
test_connect_DEPENDENCIES = $(am__DEPENDENCIES_2)
test_connect_LINK = $(CCLD) $(test_connect_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_creds_OBJECTS = src/ws/test_creds-test-creds.$(OBJEXT)
test_creds_OBJECTS = $(am_test_creds_OBJECTS)
test_creds_DEPENDENCIES = libcockpit-ws.a $(am__DEPENDENCIES_7)
test_creds_LINK = $(CCLD) $(test_creds_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_dbus_meta_OBJECTS =  \
	src/bridge/test_dbus_meta-test-dbus-meta.$(OBJEXT)
test_dbus_meta_OBJECTS = $(am_test_dbus_meta_OBJECTS)
test_dbus_meta_DEPENDENCIES = $(am__DEPENDENCIES_2)
test_dbus_meta_LINK = $(CCLD) $(test_dbus_meta_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_fs_OBJECTS = src/bridge/test_fs-test-fs.$(OBJEXT) \
	src/bridge/test_fs-mock-transport.$(OBJEXT)
test_fs_OBJECTS = $(am_test_fs_OBJECTS)
test_fs_DEPENDENCIES = $(am__DEPENDENCIES_2)
test_fs_LINK = $(CCLD) $(test_fs_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_handlers_OBJECTS =  \
	src/ws/test_handlers-test-handlers.$(OBJEXT) \
	src/ws/test_handlers-mock-auth.$(OBJEXT) \
	src/common/test_handlers-mock-io-stream.$(OBJEXT) \
	$(am__objects_1)
test_handlers_OBJECTS = $(am_test_handlers_OBJECTS)
test_handlers_DEPENDENCIES = libcockpit-ws.a $(am__DEPENDENCIES_7) \
	$(am__DEPENDENCIES_1)
test_handlers_LINK = $(CCLD) $(test_handlers_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_hash_OBJECTS = src/common/test_hash-test-hash.$(OBJEXT)
test_hash_OBJECTS = $(am_test_hash_OBJECTS)
test_hash_DEPENDENCIES = $(am__DEPENDENCIES_8)
test_hash_LINK = $(CCLD) $(test_hash_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_hex_OBJECTS = src/common/test_hex-test-hex.$(OBJEXT)
test_hex_OBJECTS = $(am_test_hex_OBJECTS)
test_hex_DEPENDENCIES = libretest.a $(am__DEPENDENCIES_8)
test_hex_LINK = $(CCLD) $(test_hex_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_httpstream_OBJECTS =  \
	src/bridge/test_httpstream-test-httpstream.$(OBJEXT) \
	src/bridge/test_httpstream-mock-transport.$(OBJEXT)
test_httpstream_OBJECTS = $(am_test_httpstream_OBJECTS)
test_httpstream_DEPENDENCIES = $(am__DEPENDENCIES_2)
test_httpstream_LINK = $(CCLD) $(test_httpstream_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_json_OBJECTS = src/common/test_json-test-json.$(OBJEXT)
test_json_OBJECTS = $(am_test_json_OBJECTS)
test_json_DEPENDENCIES = $(am__DEPENDENCIES_8)
test_json_LINK = $(CCLD) $(test_json_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_kerberos_OBJECTS =  \
	src/ws/test_kerberos-test-kerberos.$(OBJEXT)
test_kerberos_OBJECTS = $(am_test_kerberos_OBJECTS)
test_kerberos_DEPENDENCIES = libcockpit-ws.a $(am__DEPENDENCIES_7)
test_kerberos_LINK = $(CCLD) $(test_kerberos_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_knownhosts_OBJECTS =  \
	src/common/test_knownhosts-test-knownhosts.$(OBJEXT)
test_knownhosts_OBJECTS = $(am_test_knownhosts_OBJECTS)
test_knownhosts_DEPENDENCIES = $(am__DEPENDENCIES_8)
test_knownhosts_LINK = $(CCLD) $(test_knownhosts_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_locale_OBJECTS = src/common/test_locale-test-locale.$(OBJEXT)
test_locale_OBJECTS = $(am_test_locale_OBJECTS)
test_locale_DEPENDENCIES = $(am__DEPENDENCIES_8)
test_locale_LINK = $(CCLD) $(test_locale_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_metrics_OBJECTS =  \
	src/bridge/test_metrics-test-metrics.$(OBJEXT) \
	src/bridge/test_metrics-mock-transport.$(OBJEXT)
test_metrics_OBJECTS = $(am_test_metrics_OBJECTS)
test_metrics_DEPENDENCIES = $(am__DEPENDENCIES_2)
test_metrics_LINK = $(CCLD) $(test_metrics_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_packages_OBJECTS =  \
	src/bridge/test_packages-test-packages.$(OBJEXT) \
	src/bridge/test_packages-mock-transport.$(OBJEXT)
test_packages_OBJECTS = $(am_test_packages_OBJECTS)
test_packages_DEPENDENCIES = $(am__DEPENDENCIES_2)
test_packages_LINK = $(CCLD) $(test_packages_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_paths_OBJECTS = src/bridge/test_paths-test-paths.$(OBJEXT)
test_paths_OBJECTS = $(am_test_paths_OBJECTS)
test_paths_DEPENDENCIES = $(am__DEPENDENCIES_2)
test_paths_LINK = $(CCLD) $(test_paths_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_pcp_SOURCES_DIST = src/bridge/test-pcp.c \
	src/bridge/mock-transport.c src/bridge/mock-transport.h
@ENABLE_PCP_TRUE@am_test_pcp_OBJECTS =  \
@ENABLE_PCP_TRUE@	src/bridge/test_pcp-test-pcp.$(OBJEXT) \
@ENABLE_PCP_TRUE@	src/bridge/test_pcp-mock-transport.$(OBJEXT)
test_pcp_OBJECTS = $(am_test_pcp_OBJECTS)
@ENABLE_PCP_TRUE@test_pcp_DEPENDENCIES = $(am__DEPENDENCIES_3)
test_pcp_LINK = $(CCLD) $(test_pcp_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am__test_pcp_archives_SOURCES_DIST = src/bridge/test-pcp-archives.c \
	src/bridge/mock-transport.c src/bridge/mock-transport.h
@ENABLE_PCP_TRUE@am_test_pcp_archives_OBJECTS = src/bridge/test_pcp_archives-test-pcp-archives.$(OBJEXT) \
@ENABLE_PCP_TRUE@	src/bridge/test_pcp_archives-mock-transport.$(OBJEXT)
test_pcp_archives_OBJECTS = $(am_test_pcp_archives_OBJECTS)
@ENABLE_PCP_TRUE@test_pcp_archives_DEPENDENCIES =  \
@ENABLE_PCP_TRUE@	$(am__DEPENDENCIES_3)
test_pcp_archives_LINK = $(CCLD) $(test_pcp_archives_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_peer_OBJECTS = src/bridge/test_peer-test-peer.$(OBJEXT) \
	src/bridge/test_peer-mock-transport.$(OBJEXT)
test_peer_OBJECTS = $(am_test_peer_OBJECTS)
test_peer_DEPENDENCIES = $(am__DEPENDENCIES_2)
test_peer_LINK = $(CCLD) $(test_peer_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_pipe_OBJECTS = src/common/test_pipe-test-pipe.$(OBJEXT)
test_pipe_OBJECTS = $(am_test_pipe_OBJECTS)
test_pipe_DEPENDENCIES = $(am__DEPENDENCIES_8)
test_pipe_LINK = $(CCLD) $(test_pipe_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_pipe_channel_OBJECTS =  \
	src/bridge/test_pipe_channel-test-pipe-channel.$(OBJEXT) \
	src/bridge/test_pipe_channel-mock-transport.$(OBJEXT)
test_pipe_channel_OBJECTS = $(am_test_pipe_channel_OBJECTS)
test_pipe_channel_DEPENDENCIES = $(am__DEPENDENCIES_2)
test_pipe_channel_LINK = $(CCLD) $(test_pipe_channel_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_process_OBJECTS =  \
	src/bridge/test_process-test-process.$(OBJEXT)
test_process_OBJECTS = $(am_test_process_OBJECTS)
test_process_DEPENDENCIES = $(am__DEPENDENCIES_2)
test_process_LINK = $(CCLD) $(test_process_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_remotectlcertificate_OBJECTS = src/ws/test_remotectlcertificate-test-remotectlcertificate.$(OBJEXT) \
	src/ws/test_remotectlcertificate-cockpitcertificate.$(OBJEXT) \
	src/ws/test_remotectlcertificate-remotectl-certificate.$(OBJEXT) \
	$(am__objects_1)
test_remotectlcertificate_OBJECTS =  \
	$(am_test_remotectlcertificate_OBJECTS)
test_remotectlcertificate_DEPENDENCIES = libcockpit-common.a \
	$(am__DEPENDENCIES_1) $(am__DEPENDENCIES_1)
test_remotectlcertificate_LINK = $(CCLD) \
	$(test_remotectlcertificate_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_router_OBJECTS = src/bridge/test_router-test-router.$(OBJEXT) \
	src/bridge/test_router-mock-channel.$(OBJEXT) \
	src/bridge/test_router-mock-transport.$(OBJEXT)
test_router_OBJECTS = $(am_test_router_OBJECTS)
test_router_DEPENDENCIES = $(am__DEPENDENCIES_2)
test_router_LINK = $(CCLD) $(test_router_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_rules_OBJECTS = src/bridge/test_rules-test-rules.$(OBJEXT)
test_rules_OBJECTS = $(am_test_rules_OBJECTS)
test_rules_DEPENDENCIES = $(am__DEPENDENCIES_2)
test_rules_LINK = $(CCLD) $(test_rules_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_server_OBJECTS = src/ws/test_server-test-server.$(OBJEXT)
nodist_test_server_OBJECTS =
test_server_OBJECTS = $(am_test_server_OBJECTS) \
	$(nodist_test_server_OBJECTS)
test_server_DEPENDENCIES = $(am__DEPENDENCIES_6) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
test_server_LINK = $(CCLD) $(test_server_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_setup_OBJECTS = src/bridge/test_setup-test-setup.$(OBJEXT)
test_setup_OBJECTS = $(am_test_setup_OBJECTS)
test_setup_DEPENDENCIES = $(am__DEPENDENCIES_2)
test_setup_LINK = $(CCLD) $(test_setup_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_test_ssh_add_OBJECTS =  \
	src/pam-ssh-add/test_ssh_add-test-ssh-add.$(OBJEXT)
test_ssh_add_OBJECTS = $(am_test_ssh_add_OBJECTS)
am__DEPENDENCIES_9 = libpam_ssh_add.a $(am__DEPENDENCIES_1)
test_ssh_add_DEPENDENCIES = $(am__DEPENDENCIES_9) libretest.a
test_ssh_add_LINK = $(CCLD) $(test_ssh_add_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am__test_sshbridge_SOURCES_DIST = src/ssh/test-sshbridge.c
@WITH_COCKPIT_SSH_TRUE@am_test_sshbridge_OBJECTS = src/ssh/test_sshbridge-test-sshbridge.$(OBJEXT)
test_sshbridge_OBJECTS = $(am_test_sshbridge_OBJECTS)
@WITH_COCKPIT_SSH_TRUE@am__DEPENDENCIES_10 = $(am__DEPENDENCIES_4) \
@WITH_COCKPIT_SSH_TRUE@	$(am__DEPENDENCIES_1) \
@WITH_COCKPIT_SSH_TRUE@	$(am__DEPENDENCIES_1)
@WITH_COCKPIT_SSH_TRUE@test_sshbridge_DEPENDENCIES = libcockpit-ssh.a \
@WITH_COCKPIT_SSH_TRUE@	$(am__DEPENDENCIES_10)
test_sshbridge_LINK = $(CCLD) $(test_sshbridge_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am__test_sshoptions_SOURCES_DIST = src/ssh/test-sshoptions.c
@WITH_COCKPIT_SSH_TRUE@am_test_sshoptions_OBJECTS = src/ssh/test_sshoptions-test-sshoptions.$(OBJEXT)
test_sshoptions_OBJECTS = $(am_test_sshoptions_OBJECTS)
@WITH_COCKPIT_SSH_TRUE@test_sshoptions_DEPENDENCIES =  \
@WITH_COCKPIT_SSH_TRUE@	libcockpit-ssh.a $(am__DEPENDENCIES_10)
test_sshoptions_LINK = $(CCLD) $(test_sshoptions_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_stream_OBJECTS = src/bridge/test_stream-test-stream.$(OBJEXT) \
	src/common/test_stream-mock-io-stream.$(OBJEXT)
test_stream_OBJECTS = $(am_test_stream_OBJECTS)
test_stream_DEPENDENCIES = $(am__DEPENDENCIES_2)
test_stream_LINK = $(CCLD) $(test_stream_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_system_OBJECTS = src/common/test_system-test-system.$(OBJEXT)
test_system_OBJECTS = $(am_test_system_OBJECTS)
test_system_DEPENDENCIES = $(am__DEPENDENCIES_8)
test_system_LINK = $(CCLD) $(test_system_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_template_OBJECTS =  \
	src/common/test_template-test-template.$(OBJEXT)
test_template_OBJECTS = $(am_test_template_OBJECTS)
test_template_DEPENDENCIES = $(am__DEPENDENCIES_8)
test_template_LINK = $(CCLD) $(test_template_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_transport_OBJECTS =  \
	src/common/test_transport-test-transport.$(OBJEXT)
test_transport_OBJECTS = $(am_test_transport_OBJECTS)
test_transport_DEPENDENCIES = $(am__DEPENDENCIES_8)
test_transport_LINK = $(CCLD) $(test_transport_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_unicode_OBJECTS =  \
	src/common/test_unicode-test-unicode.$(OBJEXT)
test_unicode_OBJECTS = $(am_test_unicode_OBJECTS)
test_unicode_DEPENDENCIES = $(am__DEPENDENCIES_8)
test_unicode_LINK = $(CCLD) $(test_unicode_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_unixsignal_OBJECTS =  \
	src/common/test_unixsignal-test-unixsignal.$(OBJEXT)
test_unixsignal_OBJECTS = $(am_test_unixsignal_OBJECTS)
test_unixsignal_DEPENDENCIES = $(am__DEPENDENCIES_8)
test_unixsignal_LINK = $(CCLD) $(test_unixsignal_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_version_OBJECTS =  \
	src/common/test_version-test-version.$(OBJEXT)
test_version_OBJECTS = $(am_test_version_OBJECTS)
test_version_DEPENDENCIES = $(am__DEPENDENCIES_8)
test_version_LINK = $(CCLD) $(test_version_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am__objects_7 = src/common/test_webresponse-cockpitassets.$(OBJEXT) \
	$(am__objects_1)
am_test_webresponse_OBJECTS =  \
	src/common/test_webresponse-test-webresponse.$(OBJEXT) \
	src/common/test_webresponse-mock-io-stream.$(OBJEXT) \
	$(am__objects_7) $(am__objects_1)
test_webresponse_OBJECTS = $(am_test_webresponse_OBJECTS)
test_webresponse_DEPENDENCIES = $(am__DEPENDENCIES_8)
test_webresponse_LINK = $(CCLD) $(test_webresponse_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_webserver_OBJECTS =  \
	src/common/test_webserver-test-webserver.$(OBJEXT)
test_webserver_OBJECTS = $(am_test_webserver_OBJECTS)
test_webserver_DEPENDENCIES = $(am__DEPENDENCIES_8)
test_webserver_LINK = $(CCLD) $(test_webserver_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_webservice_OBJECTS =  \
	src/ws/test_webservice-test-webservice.$(OBJEXT) \
	src/ws/test_webservice-mock-auth.$(OBJEXT) \
	src/common/test_webservice-mock-io-stream.$(OBJEXT) \
	$(am__objects_1)
test_webservice_OBJECTS = $(am_test_webservice_OBJECTS)
test_webservice_DEPENDENCIES = libwebsocket.a libcockpit-ws.a \
	$(am__DEPENDENCIES_7) $(am__DEPENDENCIES_1)
test_webservice_LINK = $(CCLD) $(test_webservice_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am_test_websocket_OBJECTS =  \
	src/websocket/test_websocket-test-websocket.$(OBJEXT)
test_websocket_OBJECTS = $(am_test_websocket_OBJECTS)
test_websocket_DEPENDENCIES = libwebsocket.a $(am__DEPENDENCIES_1)
am_test_websocketstream_OBJECTS = src/bridge/test_websocketstream-test-websocketstream.$(OBJEXT) \
	src/bridge/test_websocketstream-mock-transport.$(OBJEXT)
test_websocketstream_OBJECTS = $(am_test_websocketstream_OBJECTS)
test_websocketstream_DEPENDENCIES = $(am__DEPENDENCIES_2)
test_websocketstream_LINK = $(CCLD) $(test_websocketstream_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SCRIPTS = $(nodist_noinst_SCRIPTS) $(noinst_SCRIPTS)
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@
depcomp = $(SHELL) $(top_srcdir)/tools/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libcockpit_bridge_a_SOURCES) \
	$(libcockpit_common_a_SOURCES) $(libcockpit_pcp_a_SOURCES) \
	$(libcockpit_ssh_a_SOURCES) $(libcockpit_stub_a_SOURCES) \
	$(libcockpit_ws_a_SOURCES) $(libpam_ssh_add_a_SOURCES) \
	$(libretest_a_SOURCES) $(libwebsocket_a_SOURCES) \
	$(cockpit_askpass_SOURCES) $(cockpit_bridge_SOURCES) \
	$(cockpit_kube_auth_SOURCES) $(cockpit_kube_launch_SOURCES) \
	$(cockpit_pcp_SOURCES) $(cockpit_session_SOURCES) \
	$(cockpit_ssh_SOURCES) $(cockpit_stub_SOURCES) \
	$(cockpit_ws_SOURCES) $(frob_websocket_SOURCES) \
	$(mock_auth_command_SOURCES) $(mock_bridge_SOURCES) \
	$(mock_echo_SOURCES) $(mock_pam_conv_mod_so_SOURCES) \
	$(mock_sshd_SOURCES) $(remotectl_SOURCES) $(test_auth_SOURCES) \
	$(test_authorize_SOURCES) $(test_authssh_SOURCES) \
	$(test_base64_SOURCES) $(test_bridge_SOURCES) \
	$(test_channel_SOURCES) $(test_channelresponse_SOURCES) \
	$(test_compat_SOURCES) $(test_config_SOURCES) \
	$(test_connect_SOURCES) $(test_creds_SOURCES) \
	$(test_dbus_meta_SOURCES) $(test_fs_SOURCES) \
	$(test_handlers_SOURCES) $(test_hash_SOURCES) \
	$(test_hex_SOURCES) $(test_httpstream_SOURCES) \
	$(test_json_SOURCES) $(test_kerberos_SOURCES) \
	$(test_knownhosts_SOURCES) $(test_locale_SOURCES) \
	$(test_metrics_SOURCES) $(test_packages_SOURCES) \
	$(test_paths_SOURCES) $(test_pcp_SOURCES) \
	$(test_pcp_archives_SOURCES) $(test_peer_SOURCES) \
	$(test_pipe_SOURCES) $(test_pipe_channel_SOURCES) \
	$(test_process_SOURCES) $(test_remotectlcertificate_SOURCES) \
	$(test_router_SOURCES) $(test_rules_SOURCES) \
	$(test_server_SOURCES) $(nodist_test_server_SOURCES) \
	$(test_setup_SOURCES) $(test_ssh_add_SOURCES) \
	$(test_sshbridge_SOURCES) $(test_sshoptions_SOURCES) \
	$(test_stream_SOURCES) $(test_system_SOURCES) \
	$(test_template_SOURCES) $(test_transport_SOURCES) \
	$(test_unicode_SOURCES) $(test_unixsignal_SOURCES) \
	$(test_version_SOURCES) $(test_webresponse_SOURCES) \
	$(test_webserver_SOURCES) $(test_webservice_SOURCES) \
	$(test_websocket_SOURCES) $(test_websocketstream_SOURCES)
DIST_SOURCES = $(libcockpit_bridge_a_SOURCES) \
	$(libcockpit_common_a_SOURCES) \
	$(am__libcockpit_pcp_a_SOURCES_DIST) \
	$(am__libcockpit_ssh_a_SOURCES_DIST) \
	$(libcockpit_stub_a_SOURCES) $(libcockpit_ws_a_SOURCES) \
	$(libpam_ssh_add_a_SOURCES) $(libretest_a_SOURCES) \
	$(libwebsocket_a_SOURCES) $(cockpit_askpass_SOURCES) \
	$(cockpit_bridge_SOURCES) \
	$(am__cockpit_kube_auth_SOURCES_DIST) \
	$(am__cockpit_kube_launch_SOURCES_DIST) \
	$(am__cockpit_pcp_SOURCES_DIST) $(cockpit_session_SOURCES) \
	$(am__cockpit_ssh_SOURCES_DIST) $(cockpit_stub_SOURCES) \
	$(cockpit_ws_SOURCES) $(frob_websocket_SOURCES) \
	$(mock_auth_command_SOURCES) $(mock_bridge_SOURCES) \
	$(mock_echo_SOURCES) $(mock_pam_conv_mod_so_SOURCES) \
	$(am__mock_sshd_SOURCES_DIST) $(remotectl_SOURCES) \
	$(test_auth_SOURCES) $(test_authorize_SOURCES) \
	$(am__test_authssh_SOURCES_DIST) $(test_base64_SOURCES) \
	$(test_bridge_SOURCES) $(test_channel_SOURCES) \
	$(test_channelresponse_SOURCES) $(test_compat_SOURCES) \
	$(test_config_SOURCES) $(test_connect_SOURCES) \
	$(test_creds_SOURCES) $(test_dbus_meta_SOURCES) \
	$(test_fs_SOURCES) $(test_handlers_SOURCES) \
	$(test_hash_SOURCES) $(test_hex_SOURCES) \
	$(test_httpstream_SOURCES) $(test_json_SOURCES) \
	$(test_kerberos_SOURCES) $(test_knownhosts_SOURCES) \
	$(test_locale_SOURCES) $(test_metrics_SOURCES) \
	$(test_packages_SOURCES) $(test_paths_SOURCES) \
	$(am__test_pcp_SOURCES_DIST) \
	$(am__test_pcp_archives_SOURCES_DIST) $(test_peer_SOURCES) \
	$(test_pipe_SOURCES) $(test_pipe_channel_SOURCES) \
	$(test_process_SOURCES) $(test_remotectlcertificate_SOURCES) \
	$(test_router_SOURCES) $(test_rules_SOURCES) \
	$(test_server_SOURCES) $(test_setup_SOURCES) \
	$(test_ssh_add_SOURCES) $(am__test_sshbridge_SOURCES_DIST) \
	$(am__test_sshoptions_SOURCES_DIST) $(test_stream_SOURCES) \
	$(test_system_SOURCES) $(test_template_SOURCES) \
	$(test_transport_SOURCES) $(test_unicode_SOURCES) \
	$(test_unixsignal_SOURCES) $(test_version_SOURCES) \
	$(test_webresponse_SOURCES) $(test_webserver_SOURCES) \
	$(test_webservice_SOURCES) $(test_websocket_SOURCES) \
	$(test_websocketstream_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
man1dir = $(mandir)/man1
man5dir = $(mandir)/man5
man8dir = $(mandir)/man8
NROFF = nroff
MANS = $(man_MANS)
DATA = $(base_DATA) $(basedebug_DATA) $(basefonts_DATA) \
	$(centosbranding_DATA) $(debianbranding_DATA) \
	$(defaultbranding_DATA) $(dist_systemdunit_DATA) \
	$(fedorabranding_DATA) $(firewall_DATA) \
	$(kubernetesbranding_DATA) $(machines_DATA) \
	$(nodist_appdata_DATA) $(nodist_base_DATA) \
	$(nodist_desktop_DATA) $(nodist_noinst_DATA) \
	$(nodist_static_DATA) $(nodist_systemdunit_DATA) \
	$(noinst_DATA) $(ovirt_DATA) $(pixmap_DATA) $(playground_DATA) \
	$(pmlogconf_DATA) $(registrybranding_DATA) \
	$(rhelbranding_DATA) $(staticfonts_DATA) \
	$(ubuntubranding_DATA)
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) \
	$(LISP)config.h.in
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
CSCOPE = cscope
AM_RECURSIVE_TARGETS = cscope check recheck
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
am__EXEEXT_13 = pkg/users/test-list-public-keys.sh $(am__EXEEXT_4)
am__EXEEXT_14 = dist/base1/test-base64.html dist/base1/test-utf8.html \
	dist/base1/test-events.html dist/base1/test-chan.html \
	dist/base1/test-dbus.html dist/base1/test-dbus-address.html \
	dist/base1/test-echo.html dist/base1/test-spawn.html \
	dist/base1/test-spawn-proc.html dist/base1/test-http.html \
	dist/base1/test-external.html dist/base1/test-location.html \
	dist/base1/test-locale.html dist/base1/test-format.html \
	dist/base1/test-file.html dist/base1/test-metrics.html \
	dist/base1/test-user.html dist/base1/test-machines.html \
	dist/base1/test-permissions.html dist/base1/test-series.html \
	dist/base1/test-cache.html dist/base1/test-websocket.html \
	dist/base1/test-stub.html dist/base1/test-browser-storage.html \
	$(am__EXEEXT_4)
am__EXEEXT_15 = dist/base1/test-no-jquery.html \
	dist/base1/test-framed-cache.html dist/base1/test-framed.html \
	dist/base1/test-dbus-framed.html $(am__EXEEXT_4)
am__EXEEXT_16 = $(am__EXEEXT_14) $(am__EXEEXT_15)
@WITH_COCKPIT_SSH_TRUE@am__EXEEXT_17 = $(am__EXEEXT_8)
TEST_SUITE_LOG = test-suite.log
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
am__test_logs3 = $(am__test_logs2:.html.log=.log)
HTML_LOG_COMPILE = $(HTML_LOG_COMPILER) $(AM_HTML_LOG_FLAGS) \
	$(HTML_LOG_FLAGS)
TEST_LOGS = $(am__test_logs3:.sh.log=.log)
SH_LOG_COMPILE = $(SH_LOG_COMPILER) $(AM_SH_LOG_FLAGS) $(SH_LOG_FLAGS)
am__DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/config.h.in \
	$(srcdir)/containers/Makefile.am $(srcdir)/doc/Makefile-doc.am \
	$(srcdir)/doc/guide/Makefile-guide.am \
	$(srcdir)/doc/man/Makefile-man.am $(srcdir)/pkg/Makefile.am \
	$(srcdir)/po/Makefile.am $(srcdir)/src/base1/Makefile.am \
	$(srcdir)/src/branding/centos/Makefile.am \
	$(srcdir)/src/branding/debian/Makefile.am \
	$(srcdir)/src/branding/default/Makefile.am \
	$(srcdir)/src/branding/fedora/Makefile.am \
	$(srcdir)/src/branding/kubernetes/Makefile.am \
	$(srcdir)/src/branding/registry/Makefile.am \
	$(srcdir)/src/branding/rhel/Makefile.am \
	$(srcdir)/src/branding/ubuntu/Makefile.am \
	$(srcdir)/src/bridge/Makefile.am \
	$(srcdir)/src/common/Makefile-common.am \
	$(srcdir)/src/pam-ssh-add/Makefile.am \
	$(srcdir)/src/retest/Makefile.am \
	$(srcdir)/src/ssh/Makefile-ssh.am \
	$(srcdir)/src/websocket/Makefile-websocket.am \
	$(srcdir)/src/ws/Makefile-ws.am \
	$(srcdir)/tools/Makefile-tools.am \
	$(top_srcdir)/doc/guide/version.in $(top_srcdir)/tools/ar-lib \
	$(top_srcdir)/tools/compile $(top_srcdir)/tools/depcomp \
	$(top_srcdir)/tools/install-sh $(top_srcdir)/tools/missing \
	AUTHORS COPYING tools/ar-lib tools/compile tools/depcomp \
	tools/install-sh tools/missing
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  if test -d "$(distdir)"; then \
    find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' \
      && rm -rf "$(distdir)" \
      || { sleep 5 && rm -rf "$(distdir)"; }; \
  else :; fi
am__post_remove_distdir = $(am__remove_distdir)
GZIP_ENV = --best
DIST_TARGETS = dist-xz
distuninstallcheck_listfiles = find . -type f -print
am__distuninstallcheck_listfiles = $(distuninstallcheck_listfiles) \
  | sed 's|^\./|$(prefix)/|' | grep -v '$(infodir)/dir$$'
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CATALOGS = @CATALOGS@
CATOBJEXT = @CATOBJEXT@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CHCON = @CHCON@
CHPASSWD = @CHPASSWD@
COCKPIT_BRIDGE_CFLAGS = @COCKPIT_BRIDGE_CFLAGS@
COCKPIT_BRIDGE_LIBS = @COCKPIT_BRIDGE_LIBS@
COCKPIT_CFLAGS = @COCKPIT_CFLAGS@
COCKPIT_GROUP = @COCKPIT_GROUP@
COCKPIT_LIBS = @COCKPIT_LIBS@
COCKPIT_PCP_CFLAGS = @COCKPIT_PCP_CFLAGS@
COCKPIT_PCP_LIBS = @COCKPIT_PCP_LIBS@
COCKPIT_SELINUX_CONFIG_TYPE = @COCKPIT_SELINUX_CONFIG_TYPE@
COCKPIT_SESSION_CFLAGS = @COCKPIT_SESSION_CFLAGS@
COCKPIT_SESSION_LIBS = @COCKPIT_SESSION_LIBS@
COCKPIT_SSH_SESSION_CFLAGS = @COCKPIT_SSH_SESSION_CFLAGS@
COCKPIT_SSH_SESSION_LIBS = @COCKPIT_SSH_SESSION_LIBS@
COCKPIT_USER = @COCKPIT_USER@
COCKPIT_WS_CFLAGS = @COCKPIT_WS_CFLAGS@
COCKPIT_WS_LIBS = @COCKPIT_WS_LIBS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CYGPATH_W = @CYGPATH_W@
DATADIRNAME = @DATADIRNAME@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
GETTEXT_PACKAGE = cockpit
GIO_CFLAGS = @GIO_CFLAGS@
GIO_LIBS = @GIO_LIBS@
GMOFILES = @GMOFILES@
GMSGFMT = @GMSGFMT@
GOLANG = @GOLANG@
GREP = @GREP@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
INSTOBJEXT = @INSTOBJEXT@
INTLLIBS = @INTLLIBS@
INTLTOOL_EXTRACT = @INTLTOOL_EXTRACT@
INTLTOOL_MERGE = @INTLTOOL_MERGE@
INTLTOOL_UPDATE = @INTLTOOL_UPDATE@
JSON_GLIB_CFLAGS = @JSON_GLIB_CFLAGS@
JSON_GLIB_LIBS = @JSON_GLIB_LIBS@
KRB5_CONFIG = @KRB5_CONFIG@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBSSH_CFLAGS = @LIBSSH_CFLAGS@
LIBSSH_LIBS = @LIBSSH_LIBS@
LIBSYSTEMD_CFLAGS = @LIBSYSTEMD_CFLAGS@
LIBSYSTEMD_LIBS = @LIBSYSTEMD_LIBS@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAINT = @MAINT@
MAKEINFO = @MAKEINFO@
MKDIR_P = @MKDIR_P@
MKINSTALLDIRS = @MKINSTALLDIRS@
MSGCAT = @MSGCAT@
MSGFMT = @MSGFMT@
MSGFMT_OPTS = @MSGFMT_OPTS@
MSGGREP = @MSGGREP@
MSGMERGE = @MSGMERGE@
NEWUSERS = @NEWUSERS@
NODE_ENV = @NODE_ENV@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PAM_LIBS = @PAM_LIBS@
PATH_SEPARATOR = @PATH_SEPARATOR@
PHANTOMJS = @PHANTOMJS@
PKEXEC = @PKEXEC@
PKG_CONFIG = @PKG_CONFIG@
PKG_CONFIG_LIBDIR = @PKG_CONFIG_LIBDIR@
PKG_CONFIG_PATH = @PKG_CONFIG_PATH@
POFILES = @POFILES@
POLKIT_CFLAGS = @POLKIT_CFLAGS@
POLKIT_LIBS = @POLKIT_LIBS@
POSUB = @POSUB@
PO_IN_DATADIR_FALSE = @PO_IN_DATADIR_FALSE@
PO_IN_DATADIR_TRUE = @PO_IN_DATADIR_TRUE@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SSH_ADD = @SSH_ADD@
SSH_AGENT = @SSH_AGENT@
STRIP = @STRIP@
SUDO = @SUDO@
SYSTEMD_CFLAGS = @SYSTEMD_CFLAGS@
SYSTEMD_LIBS = @SYSTEMD_LIBS@
USERMOD = @USERMOD@
USE_NLS = @USE_NLS@
VERSION = @VERSION@
XGETTEXT = @XGETTEXT@
XMLTO = @XMLTO@
XSLTPROC = @XSLTPROC@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build_alias = @build_alias@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
debugdir = @debugdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
host_alias = @host_alias@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pamdir = @pamdir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
systemdunitdir = @systemdunitdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@
with_networkmanager_needs_root = @with_networkmanager_needs_root@
with_storaged_iscsi_sessions = @with_storaged_iscsi_sessions@
NULL = 
man_MANS = $(am__append_4)
BUILT_SOURCES = $(COCKPIT_ASSETS)
check_SCRIPTS = 
noinst_SCRIPTS = $(WEBPACK_DEPS) $(WEBPACK_INSTALL) $(base_TESTS) \
	$(am__append_18) src/ws/mock-cat-with-init $(NULL)

# ----------------------------------------------------------------------------------------------------
noinst_LIBRARIES = libcockpit-stub.a libcockpit-bridge.a $(NULL) \
	$(am__append_7) libcockpit-common.a libwebsocket.a \
	$(am__append_12) libcockpit-ws.a libretest.a libpam_ssh_add.a
noinst_DATA = $(am__append_2) $(am__append_10) $(am__append_15)
nodist_noinst_DATA = 

# For the test-locale test
nodist_noinst_SCRIPTS =  \
	src/common/mock-locale/de_DE/LC_MESSAGES/test.mo \
	src/common/mock-locale/zh_CN/LC_MESSAGES/test.mo $(NULL)
dist_systemdunit_DATA = src/ws/cockpit.socket
nodist_systemdunit_DATA = src/ws/cockpit.service
CLEANFILES = $(man_MANS) valgrind-suppressions $(NULL) $(WEBPACK_DEPS) \
	$(WEBPACK_OUTPUTS) $(OPENSANS_FONTS) $(am__append_3) \
	$(MO_FILES) $(POJS_FILES) $(nodist_po_DATA) po/POTFILES.*.in \
	dist/shell/*.po src/ws/*.po po/cockpit*.pot po/po.empty.js.gz \
	$(NULL) dist/base1/cockpit.js dist/base1/cockpit.min.css \
	dist/base1/cockpit.min.css.gz dist/base1/cockpit.min.css.map \
	dist/base1/cockpit.min.js dist/base1/cockpit.min.js.gz \
	dist/base1/cockpit.min.js.map \
	dist/base1/fonts/fontawesome.woff \
	dist/base1/fonts/glyphicons.woff \
	dist/base1/fonts/patternfly.woff dist/base1/jquery.js \
	dist/base1/jquery.min.js dist/base1/jquery.min.js.gz \
	dist/base1/jquery.min.js.map dist/base1/manifest.json \
	dist/base1/mustache.js dist/base1/mustache.min.js \
	dist/base1/mustache.min.js.gz dist/base1/mustache.min.js.map \
	dist/base1/patternfly-base.css dist/base1/patternfly.min.css \
	dist/base1/patternfly.min.css.gz \
	dist/base1/patternfly.min.css.map \
	dist/base1/patternfly.css.map \
	dist/base1/patternfly-additions.css \
	dist/base1/patternfly-additions.css.map dist/base1/qunit.css \
	dist/base1/qunit.js dist/base1/require.js \
	dist/base1/require.min.js dist/base1/require.min.js.gz \
	dist/base1/require.min.js.map dist/base1/simple-tap.js \
	dist/base1/test-dbus-common.js $(base_TESTS) \
	$(base_TESTS_JAVASCRIPT) $(NULL) $(am__append_11) \
	$(COCKPIT_ASSETS) $(test_locale_MO) $(NULL) $(am__append_16) \
	dist/static/login.html dist/static/login.min.html \
	dist/static/login.js dist/static/login.min.js \
	dist/static/login.css dist/static/login.min.css $(NULL) \
	src/ws/cockpit.service $(NULL) $(nodist_appdata_DATA) \
	$(nodist_desktop_DATA) $(NULL) mock-pam-conv-mod.so \
	pam_ssh_add.so $(KUBERNETES_DIR)/rpms $(WS_DIR)/rpms
DISTCLEANFILES = \
	$(srcdir)/Makefile \
	node_modules \
	cockpit-cache-*.tar.xz \
	$(NULL)

EXTRA_DIST = package.json README.md $(NULL) $(WEBPACK_DEPS) \
	$(WEBPACK_MANIFEST_IN) webpack.config.js $(OPENSANS_FONTS) \
	$(am__append_1) $(PO_INPUTS) po/LINGUAS po/po.empty.js \
	po/po2json po/zanata.xml $(NULL) dist/playground/extra.de.po \
	pkg/playground/extra.de.po pkg/users/mock \
	pkg/lib/qunit-template.html node_modules/noVNC/package.json \
	node_modules/noVNC/include/base.css pkg/ovirt/install.sh \
	$(playground_DATA) $(pkg_TESTS) $(ovirt_DATA) \
	dist/base1/cockpit.js dist/base1/cockpit.min.css \
	dist/base1/cockpit.min.css.map dist/base1/cockpit.min.js \
	dist/base1/cockpit.min.js.map dist/base1/jquery.js \
	dist/base1/jquery.min.js dist/base1/jquery.min.js.map \
	dist/base1/mustache.js dist/base1/mustache.min.js \
	dist/base1/mustache.min.js.map dist/base1/patternfly-base.css \
	dist/base1/patternfly.min.css \
	dist/base1/patternfly.min.css.map \
	dist/base1/patternfly.css.map \
	dist/base1/patternfly-additions.css \
	dist/base1/patternfly-additions.css.map dist/base1/require.js \
	dist/base1/require.min.js dist/base1/require.min.js.map \
	dist/base1/simple-tap.js src/base1/cockpit.css \
	src/base1/cockpit.js src/base1/deprecated.js \
	src/base1/manifest.json src/base1/require-config.js \
	src/base1/require-loaders.js src/base1/simple-tap.js \
	src/base1/test-dbus-common.js $(base_DATA) $(basefonts_DATA) \
	$(base_TESTS) $(base_TESTS_DEPS) $(base_TESTS_SOURCE) \
	$(base_TESTS_JAVASCRIPT) $(NULL) $(centosbranding_DATA) \
	$(debianbranding_DATA) $(defaultbranding_DATA) \
	src/branding/default/logo.svg $(NULL) $(fedorabranding_DATA) \
	$(kubernetesbranding_DATA) $(registrybranding_DATA) \
	$(rhelbranding_DATA) $(ubuntubranding_DATA) \
	src/bridge/cockpit.pam.insecure $(NULL) \
	src/bridge/mock-resource src/bridge/mock-setup \
	src/bridge/mock-pmda.c src/bridge/mock-pmns \
	src/bridge/mock-client.crt src/bridge/mock-client.key \
	src/bridge/mock-server.crt src/bridge/mock-server.key $(NULL) \
	$(am__append_8) src/common/mock-content \
	src/common/mock_known_hosts src/common/mock-stderr \
	src/common/com.redhat.Cockpit.DBusTests.xml \
	src/common/cockpitassets.gresource.xml src/common/fail.html \
	$(test_locale_PO) $(NULL) \
	pkg/apps/content-security-policy.override $(am__append_17) \
	dist/static/login.html dist/static/login.min.html \
	dist/static/login.js dist/static/login.min.js \
	dist/static/login.css dist/static/login.min.css \
	src/ws/login.html src/ws/login.js src/ws/login.css \
	src/ws/po.empty.html $(LOGIN_PO_FILES) $(staticfonts_DATA) \
	$(NULL) src/ws/mock_cert src/ws/mock-cat-with-init \
	src/ws/mock-kdc src/ws/mock-krb5.conf.in \
	src/ws/mock-kdc.conf.in src/ws/mock-static src/ws/mock-config \
	$(NULL) src/ws/cockpit.service.in $(firewall_DATA) $(NULL) \
	$(appdata_in) $(desktop_in) $(pixmap_DATA) $(NULL) \
	src/ws/fatal.conf $(pam_ssh_add_FILES) $(NULL) \
	src/pam-ssh-add/mock-ssh-agent src/pam-ssh-add/mock-ssh-add \
	src/pam-ssh-add/mock-environment $(NULL) $(ATOMIC_SETUP)
SUFFIXES = \
	.css .css.gz \
	.html .html.gz \
	.js .js.gz \
	.json .json.in \
	.jsx \
	.map .map.gz \
	.mo .po \
	.service .service.in \
	.svg .svg.gz \
	.woff .woff.gz \
	.1 .8 .5 \
	$(NULL)

V_CHECK = $(V_CHECK_$(V))
V_CHECK_ = $(V_CHECK_$(AM_DEFAULT_VERBOSITY))
V_CHECK_0 = @echo "  CHECK   " $@;
V_GZIP = $(V_GZIP_$(V))
V_GZIP_ = $(V_GZIP_$(AM_DEFAULT_VERBOSITY))
V_GZIP_0 = @echo "  GZIP    " $@;
V_COPY = $(V_COPY_$(V))
V_COPY_ = $(V_COPY_$(AM_DEFAULT_VERBOSITY))
V_COPY_0 = @echo "  COPY    " $@;
MV = mv -f
COPY_RULE = \
        $(V_COPY) $(MKDIR_P) $(dir $@) && \
	cp -L $< $@.tmp && $(MV) $@.tmp $@

CAT_RULE = \
        $(AM_V_GEN) $(MKDIR_P) $(dir $@) && \
	cat $^ > $@.tmp && $(MV) $@.tmp $@

GZ_RULE = \
	$(V_GZIP) $(MKDIR_P) $(dir $@) && \
	gzip -n -c $< > $@.tmp && $(MV) $@.tmp $@

UGLIFY_JS = $(srcdir)/node_modules/.bin/uglifyjs
CLEAN_CSS = $(srcdir)/node_modules/.bin/cleancss
MIN_JS_RULE = \
	$(AM_V_GEN) $(MKDIR_P) $(dir $@) && \
	$(srcdir)/tools/missing $(UGLIFY_JS) $(filter-out %.deps, $^) --mangle --comments 'preserve' --beautify \
		--source-map $@.map --source-map-url $(notdir $@).map --source-map-include-sources > $@.tmp && \
	$(MV) $@.tmp $@

MIN_CSS_RULE = \
	$(AM_V_GEN) $(MKDIR_P) $(dir $@) && \
	$(srcdir)/tools/missing $(CLEAN_CSS) --keep-line-breaks --output=$@ \
		--source-map --source-map-inline-sources $^

JSHINT_RULE = \
	$(V_CHECK) $(srcdir)/tools/missing $(srcdir)/tools/jshint $<

SUBST_RULE = \
	$(AM_V_GEN) $(MKDIR_P) $(dir $@) && sed \
	-e 's,[@]datadir[@],$(datadir),g' \
	-e 's,[@]libexecdir[@],$(libexecdir),g' \
	-e 's,[@]libdir[@],$(libdir),g' \
	-e 's,[@]includedir[@],$(includedir),g' \
	-e 's,[@]bindir[@],$(bindir),g' \
	-e 's,[@]sbindir[@],$(sbindir),g' \
	-e 's,[@]prefix[@],$(prefix),g' \
	-e 's,[@]exec_prefix[@],$(exec_prefix),g' \
	-e 's,[@]prefix[@],$(prefix),g' \
	-e 's,[@]PACKAGE[@],$(PACKAGE),g' \
	-e 's,[@]VERSION[@],$(VERSION),g' \
	-e 's,[@]PKEXEC[@],$(PKEXEC),g' \
	-e 's,[@]SUDO[@],$(SUDO),g' \
	-e 's,[@]user[@],$(COCKPIT_USER),g' \
	-e 's,[@]group[@],$(COCKPIT_GROUP),g' \
	-e 's,[@]selinux_config_type[@],$(COCKPIT_SELINUX_CONFIG_TYPE),g' \
	-e 's,[@]with_networkmanager_needs_root[@],$(with_networkmanager_needs_root),g' \
	-e 's,[@]with_storaged_iscsi_sessions[@],$(with_storaged_iscsi_sessions),g' \
	$< > $@.tmp && $(MV) $@.tmp $@ \
	$(NULL)


# Webpack related
WEBPACK_PACKAGES = \
	apps \
	dashboard \
	docker \
	kdump \
	kubernetes \
	machines \
	networkmanager \
	ostree \
	ovirt \
	pcp \
	packagekit \
	playground \
	realmd \
	selinux \
	shell \
	sosreport \
	ssh \
	storaged \
	subscriptions \
	systemd \
	tuned \
	users \
	$(NULL)

V_WEBPACK = $(V_WEBPACK_$(V))
V_WEBPACK_ = $(V_WEBPACK_$(AM_DEFAULT_VERBOSITY))
V_WEBPACK_0 = @echo "  WEBPACK  $(@:dist/%/Makefile.deps=%)";
WEBPACK_MAKE = NODE_ENV=$(NODE_ENV) SRCDIR=$(abspath $(srcdir)) BUILDDIR=$(builddir) \
	       $(srcdir)/tools/missing $(srcdir)/tools/webpack-make

WEBPACK_RULE = $(V_WEBPACK) $(WEBPACK_MAKE)
WEBPACK_CONFIG = $(srcdir)/webpack.config.js
WEBPACK_INPUTS = 
WEBPACK_PO = 
WEBPACK_OUTPUTS = 
WEBPACK_INSTALL = $(WEBPACK_PACKAGES:%=dist/%/manifest.json)
WEBPACK_DEPS = $(WEBPACK_PACKAGES:%=dist/%/Makefile.deps)
WEBPACK_MANIFEST_IN = $(WEBPACK_PACKAGES:%=pkg/%/manifest.json.in)

#
ACLOCAL_AMFLAGS = -I tools ${ACLOCAL_FLAGS}
DISTCHECK_CONFIGURE_FLAGS = \
	--disable-debug \
	--disable-coverage \
	--disable-silent-rules \
	--enable-prefix-only \
	$(NULL)

AM_CPPFLAGS = \
	-I$(top_builddir) \
	-I$(top_builddir)/src \
	-I$(top_srcdir) \
	-I$(top_srcdir)/src \
	-DSRCDIR=\"$(abs_srcdir)\" \
	-DBUILDDIR=\"$(abs_builddir)\" \
	-DDATADIR=\"$(datadir)\" \
	-DPACKAGE_LIBEXEC_DIR=\""$(libexecdir)"\" \
	-DPACKAGE_SYSCONF_DIR=\""$(sysconfdir)"\" \
	-DPACKAGE_BIN_DIR=\""$(bindir)"\" \
	-DPACKAGE_LOCALSTATE_DIR=\""$(localstatedir)/lib/cockpit"\" \
	-DPACKAGE_LIB_DIR=\""$(libdir)"\" \
	-D_POSIX_PTHREAD_SEMANTICS -D_REENTRANT \
	$(NULL)

AM_LDFLAGS = -Wl,--as-needed
LOG_DRIVER = $(top_srcdir)/tools/tap-driver
LOG_COMPILER = $(top_srcdir)/tools/tap-gtester
TEST_EXTENSIONS = .html .sh
SH_LOG_DRIVER = $(top_srcdir)/tools/tap-driver
HTML_LOG_DRIVER = $(top_srcdir)/tools/tap-driver
HTML_TEST_SERVER = $(builddir)/test-server
@WITH_PHANTOMJS_TRUE@HTML_LOG_COMPILER = $(PHANTOMJS) $(top_srcdir)/tools/tap-phantom --strip=$(top_srcdir)/ -- $(HTML_TEST_SERVER)
@WITH_PHANTOMJS_FALSE@HTML_LOG_DRIVER_FLAGS = --missing=phantomjs
VALGRIND_ARGS = --trace-children=yes --quiet --error-exitcode=33 \
	--suppressions=valgrind-suppressions --gen-suppressions=all \
	--num-callers=16 --leak-check=yes --show-leak-kinds=definite \
	--errors-for-leak-kinds=definite --trace-children-skip='*mock*,/bin*,/usr/bin/*,/usr/local/bin'

VALGRIND_SUPPRESSIONS = \
	tools/gcrypt.supp \
	tools/glib.supp \
	tools/pthread.supp \
	tools/travis.supp \
	tools/polkit.supp \
	tools/pcp.supp \
	tools/unknown.supp \
	tools/zlib.supp \
	tools/libssh.supp \
	tools/json-glib.supp \
	$(NULL)


# Fonts are used by multiple things so put them here
OPENSANS_FONTS = \
	dist/fonts/OpenSans-Bold-webfont.woff \
	dist/fonts/OpenSans-BoldItalic-webfont.woff \
	dist/fonts/OpenSans-ExtraBold-webfont.woff  \
	dist/fonts/OpenSans-ExtraBoldItalic-webfont.woff \
	dist/fonts/OpenSans-Italic-webfont.woff \
	dist/fonts/OpenSans-Light-webfont.woff \
	dist/fonts/OpenSans-LightItalic-webfont.woff \
	dist/fonts/OpenSans-Regular-webfont.woff \
	dist/fonts/OpenSans-Semibold-webfont.woff \
	dist/fonts/OpenSans-SemiboldItalic-webfont.woff \
	$(NULL)

@ENABLE_DOC_TRUE@GUIDE_DOCBOOK = doc/guide/cockpit-guide.xml
@ENABLE_DOC_TRUE@GUIDE_INCLUDES = \
@ENABLE_DOC_TRUE@	doc/guide/api-cockpit.xml \
@ENABLE_DOC_TRUE@	doc/guide/api-container.xml \
@ENABLE_DOC_TRUE@	doc/guide/api-base1.xml \
@ENABLE_DOC_TRUE@	doc/guide/api-shell.xml \
@ENABLE_DOC_TRUE@	doc/guide/api-system.xml \
@ENABLE_DOC_TRUE@	doc/guide/cockpit-cache.xml \
@ENABLE_DOC_TRUE@	doc/guide/cockpit-channel.xml \
@ENABLE_DOC_TRUE@	doc/guide/cockpit-dbus.xml \
@ENABLE_DOC_TRUE@	doc/guide/cockpit-error.xml \
@ENABLE_DOC_TRUE@	doc/guide/cockpit-file.xml \
@ENABLE_DOC_TRUE@	doc/guide/cockpit-http.xml \
@ENABLE_DOC_TRUE@	doc/guide/cockpit-locale.xml \
@ENABLE_DOC_TRUE@	doc/guide/cockpit-location.xml \
@ENABLE_DOC_TRUE@	doc/guide/cockpit-manifest.xml \
@ENABLE_DOC_TRUE@	doc/guide/cockpit-metrics.xml \
@ENABLE_DOC_TRUE@	doc/guide/cockpit-series.xml \
@ENABLE_DOC_TRUE@	doc/guide/cockpit-session.xml \
@ENABLE_DOC_TRUE@	doc/guide/cockpit-spawn.xml \
@ENABLE_DOC_TRUE@	doc/guide/cockpit-util.xml \
@ENABLE_DOC_TRUE@	doc/guide/authentication.xml \
@ENABLE_DOC_TRUE@	doc/guide/embedding.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-docker.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-journal.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-kubernetes.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-machines.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-networkmanager.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-ostree.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-packagekit.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-pcp.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-realmd.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-selinux.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-sosreport.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-storaged.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-subscription.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-systemd.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-terminal.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-tuned.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-users.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-virtualmachines.xml \
@ENABLE_DOC_TRUE@	doc/guide/feature-ovirt.xml \
@ENABLE_DOC_TRUE@	doc/guide/packages.xml \
@ENABLE_DOC_TRUE@	doc/guide/privileges.xml \
@ENABLE_DOC_TRUE@	doc/guide/https.xml \
@ENABLE_DOC_TRUE@	doc/guide/listen.xml \
@ENABLE_DOC_TRUE@	doc/guide/sso.xml \
@ENABLE_DOC_TRUE@	doc/guide/startup.xml \
@ENABLE_DOC_TRUE@	doc/guide/urls.xml \
@ENABLE_DOC_TRUE@	$(NULL)

@ENABLE_DOC_TRUE@GUIDE_STATIC = \
@ENABLE_DOC_TRUE@	doc/guide/static/home.png \
@ENABLE_DOC_TRUE@	doc/guide/static/gtk-doc.css \
@ENABLE_DOC_TRUE@	doc/guide/static/left.png \
@ENABLE_DOC_TRUE@	doc/guide/static/right.png \
@ENABLE_DOC_TRUE@	doc/guide/static/style.css \
@ENABLE_DOC_TRUE@	doc/guide/static/up.png \
@ENABLE_DOC_TRUE@	$(NULL)

@ENABLE_DOC_TRUE@GUIDE_XSLT = \
@ENABLE_DOC_TRUE@	doc/guide/gtk-doc.xsl \
@ENABLE_DOC_TRUE@	doc/guide/version-greater-or-equal.xsl \
@ENABLE_DOC_TRUE@	$(NULL)

@ENABLE_DOC_TRUE@GUIDE_FONTS = $(subst dist/fonts/,dist/guide/html/,$(OPENSANS_FONTS))
@ENABLE_DOC_TRUE@MAN_PROC = $(MKDIR_P) doc/man/ && $(XSLTPROC) -nonet --param man.output.quietly 1 --output $@ \
@ENABLE_DOC_TRUE@	http://docbook.sourceforge.net/release/xsl/current/manpages/docbook.xsl $<


# Subdirectories to distribute everything that's committed to git
COMMITTED_DIST = \
	tools/ \
	test/ \
	$(NULL)

DIST_TAR_MAIN = tar --format=posix -cf - "$(distdir)"
DIST_TAR_CACHE = tar --format=posix -cf - --exclude='phantomjs*' --transform="s/^/$(distdir)/" \
	"$(srcdir)/node_modules" "$(srcdir)/package.json"

DIST_ARCHIVES = \
	cockpit-$(VERSION).tar.xz \
	cockpit-cache-$(VERSION).tar.xz


# The concrete set of linguas we are using
LINGUAS = $(shell cat $(srcdir)/po/LINGUAS)

# The full list of various input and output file types
PO_LINGUAS = $(addprefix po/,$(LINGUAS))
PO_INPUTS = $(addsuffix .po,$(PO_LINGUAS))
MO_FILES = $(addprefix src/ws/,$(addsuffix .mo,$(LINGUAS)))

# Used to list files in src/ws in the po file
FILTER_PO_SRC_WS = sed -ne 's|.*\(\(\.\./\)\?src/ws/[^:]\+\).*|-N \1|p' $<

# General code packages to translate
TRANSLATE = \
	pkg/ \
	node_modules/registry-image-widgets/ \
	src/ws/ \
	$(NULL)

ZANATA_CLI = LANG=en_US.UTF-8 LC_ALL=en_US.UTF-8 zanata-cli -B
pkg_TESTS = \
	pkg/users/test-list-public-keys.sh \
	$(NULL)


# Used for testing and the 'translate' playground
playgrounddir = $(pkgdatadir)/playground
playground_DATA = \
	dist/playground/po.extra.de.js \
	$(NULL)

machinesdir = $(pkgdatadir)/machines
machines_DATA = \
	dist/machines/base.css \
	$(NULL)

ovirtdir = $(pkgdatadir)/ovirt
ovirt_DATA = \
	dist/ovirt/install.sh \
	dist/ovirt/base.css \
	$(NULL)

@WITH_GOLANG_TRUE@AM_V_GO = $(am__v_GO_@AM_V@)
@WITH_GOLANG_TRUE@am__v_GO_ = $(am__v_GO_@AM_DEFAULT_V@)
@WITH_GOLANG_TRUE@am__v_GO_0 = @echo "  GO      " $@;
@WITH_GOLANG_TRUE@GO_BUILD_RULE = \
@WITH_GOLANG_TRUE@	GOPATH=$(abs_srcdir)/pkg/kubernetes/standalone $(GOLANG) build \
@WITH_GOLANG_TRUE@		-ldflags "-B 0x"`head -c20 /dev/urandom|od -An -tx1|tr -d ' \n'` "$@"

@WITH_GOLANG_TRUE@COCKPIT_KUBE_HELPERS = \
@WITH_GOLANG_TRUE@	pkg/kubernetes/standalone/src/cockpit-kube-auth/helpers/creds.go \
@WITH_GOLANG_TRUE@	pkg/kubernetes/standalone/src/cockpit-kube-auth/helpers/client.go \
@WITH_GOLANG_TRUE@	$(NULL)

@WITH_GOLANG_TRUE@COCKPIT_KUBE_AUTH = $(COCKPIT_KUBE_HELPERS) \
@WITH_GOLANG_TRUE@	pkg/kubernetes/standalone/src/cockpit-kube-auth/main.go \
@WITH_GOLANG_TRUE@	$(NULL)

@WITH_GOLANG_TRUE@COCKPIT_KUBE_LAUNCH = $(COCKPIT_KUBE_HELPERS) \
@WITH_GOLANG_TRUE@	pkg/kubernetes/standalone/src/cockpit-kube-launch/main.go \
@WITH_GOLANG_TRUE@	$(NULL)

@WITH_GOLANG_TRUE@cockpit_kube_auth_SOURCES = $(COCKPIT_KUBE_AUTH)
@WITH_GOLANG_TRUE@cockpit_kube_launch_SOURCES = $(COCKPIT_KUBE_LAUNCH)
basedir = $(pkgdatadir)/base1
nodist_base_DATA = \
	dist/base1/cockpit.min.css.gz \
	dist/base1/patternfly.min.css.gz \
	dist/base1/require.min.js.gz \
	dist/base1/mustache.min.js.gz \
	dist/base1/jquery.min.js.gz \
	dist/base1/cockpit.min.js.gz \
	$(NULL)

base_DATA = \
	dist/base1/manifest.json \
	$(NULL)

basedebugdir = $(debugdir)$(basedir)
basedebug_DATA = \
	dist/base1/cockpit.min.css.map \
	dist/base1/patternfly.min.css.map \
	dist/base1/mustache.min.js.map \
	dist/base1/require.min.js.map \
	dist/base1/jquery.min.js.map \
	dist/base1/cockpit.min.js.map \
	$(NULL)

AM_TESTS_ENVIRONMENT = export G_DEBUG=fatal-criticals,fatal-warnings ; export XDG_CACHE_HOME=$$(mktemp -d) ; export XDG_RUNTIME_DIR=$$XDG_CACHE_HOME ;
basefontsdir = $(pkgdatadir)/base1/fonts
basefonts_DATA = \
	dist/base1/fonts/fontawesome.woff \
	dist/base1/fonts/patternfly.woff \
	dist/base1/fonts/glyphicons.woff \
	$(NULL)


# Tests run with QUnit
base_QUNIT_TESTS = \
	dist/base1/test-base64.html \
	dist/base1/test-utf8.html \
	dist/base1/test-events.html \
	dist/base1/test-chan.html \
	dist/base1/test-dbus.html \
	dist/base1/test-dbus-address.html \
	dist/base1/test-echo.html \
	dist/base1/test-spawn.html \
	dist/base1/test-spawn-proc.html \
	dist/base1/test-http.html \
	dist/base1/test-external.html \
	dist/base1/test-location.html \
	dist/base1/test-locale.html \
	dist/base1/test-format.html \
	dist/base1/test-file.html \
	dist/base1/test-metrics.html \
	dist/base1/test-user.html \
	dist/base1/test-machines.html \
	dist/base1/test-permissions.html \
	dist/base1/test-series.html \
	dist/base1/test-cache.html \
	dist/base1/test-websocket.html \
	dist/base1/test-stub.html \
	dist/base1/test-browser-storage.html \
	$(NULL)

base_QUNIT_DEPS = \
	dist/base1/qunit.css \
	dist/base1/qunit.js \
	dist/base1/test-dbus-common.js \
	src/base1/qunit-template.html \
	src/base1/test-dbus-common.js \
	$(NULL)


# Simple tests run without QUnit
base_SIMPLE_TESTS = \
	dist/base1/test-no-jquery.html \
	dist/base1/test-framed-cache.html \
	dist/base1/test-framed.html \
	dist/base1/test-dbus-framed.html \
	$(NULL)

base_SIMPLE_DEPS = \
	dist/base1/simple-tap.js \
	src/base1/simple-template.html \
	src/base1/simple-tap.js \
	$(NULL)


# A html-webpack-plugin workalike for tests not built by webpack
SED_TEST_TEMPLATE = sed -e 's,[@]TEST[@],$(notdir $<),g'
base_TESTS = $(base_QUNIT_TESTS) $(base_SIMPLE_TESTS)
base_TESTS_DEPS = $(base_QUNIT_DEPS) $(base_SIMPLE_DEPS)
base_TESTS_JAVASCRIPT = $(base_TESTS:.html=.js)
base_TESTS_SOURCE = $(subst dist/,src/,$(base_TESTS_JAVASCRIPT))
centosbrandingdir = $(datadir)/cockpit/branding/centos
centosbranding_DATA = \
	src/branding/centos/branding.css \
	$(NULL)

debianbrandingdir = $(datadir)/cockpit/branding/debian
debianbranding_DATA = \
	src/branding/debian/branding.css \
	src/branding/debian/favicon.ico \
	$(NULL)

defaultbrandingdir = $(datadir)/cockpit/branding/default
defaultbranding_DATA = \
	src/branding/default/apple-touch-icon.png \
	src/branding/default/bg-login.jpg \
	src/branding/default/bg-plain.jpg \
	src/branding/default/branding.css \
	src/branding/default/brand-large.png \
	src/branding/default/favicon.ico \
	src/branding/default/logo.png \
	$(NULL)

fedorabrandingdir = $(datadir)/cockpit/branding/fedora
fedorabranding_DATA = \
	src/branding/fedora/branding.css \
	$(NULL)

kubernetesbrandingdir = $(datadir)/cockpit/branding/kubernetes
kubernetesbranding_DATA = \
	src/branding/kubernetes/branding.css \
	$(NULL)

registrybrandingdir = $(datadir)/cockpit/branding/registry
registrybranding_DATA = \
	src/branding/kubernetes/branding.css \
	$(NULL)

rhelbrandingdir = $(datadir)/cockpit/branding/rhel
rhelbranding_DATA = \
	src/branding/rhel/branding.css \
	src/branding/rhel/bg-login.jpg \
	$(NULL)

ubuntubrandingdir = $(datadir)/cockpit/branding/ubuntu
ubuntubranding_DATA = \
	src/branding/ubuntu/branding.css \
	src/branding/ubuntu/favicon.ico \
	$(NULL)

libcockpit_stub_a_SOURCES = \
	src/bridge/cockpitchannel.c \
	src/bridge/cockpitchannel.h \
	src/bridge/cockpitconnect.c \
	src/bridge/cockpitconnect.h \
	src/bridge/cockpitdbuscache.c \
	src/bridge/cockpitdbuscache.h \
	src/bridge/cockpitdbusinternal.h \
	src/bridge/cockpitdbusinternal.c \
	src/bridge/cockpitdbusjson.c \
	src/bridge/cockpitdbusjson.h \
	src/bridge/cockpitdbusprocess.c \
	src/bridge/cockpitdbusmeta.c \
	src/bridge/cockpitdbusmeta.h \
	src/bridge/cockpitdbusrules.c \
	src/bridge/cockpitdbusrules.h \
	src/bridge/cockpitechochannel.c \
	src/bridge/cockpitechochannel.h \
	src/bridge/cockpitpipechannel.c \
	src/bridge/cockpitpipechannel.h \
	src/bridge/cockpithttpstream.c \
	src/bridge/cockpithttpstream.h \
	src/bridge/cockpitinteracttransport.c \
	src/bridge/cockpitinteracttransport.h \
	src/bridge/cockpitpackages.c \
	src/bridge/cockpitpackages.h \
	src/bridge/cockpitpaths.c \
	src/bridge/cockpitpaths.h \
	src/bridge/cockpitpeer.c \
	src/bridge/cockpitpeer.h \
	src/bridge/cockpitnullchannel.c \
	src/bridge/cockpitnullchannel.h \
	src/bridge/cockpitrouter.c \
	src/bridge/cockpitrouter.h \
	src/bridge/cockpitstream.c \
	src/bridge/cockpitstream.h \
	src/bridge/cockpitwebsocketstream.c \
	src/bridge/cockpitwebsocketstream.h \
	$(NULL)

libcockpit_stub_a_CFLAGS = \
	-I$(srcdir)/src/bridge \
	-DG_LOG_DOMAIN=\"cockpit-bridge\" \
	$(COCKPIT_CFLAGS) \
	$(NULL)

libcockpit_bridge_METRICS = \
	src/bridge/cockpitblocksamples.c \
	src/bridge/cockpitblocksamples.h \
	src/bridge/cockpitcgroupsamples.c \
	src/bridge/cockpitcgroupsamples.h \
	src/bridge/cockpitcpusamples.c \
	src/bridge/cockpitcpusamples.h \
	src/bridge/cockpitdisksamples.c \
	src/bridge/cockpitdisksamples.h \
	src/bridge/cockpitinternalmetrics.c \
	src/bridge/cockpitinternalmetrics.h \
	src/bridge/cockpitmemorysamples.c \
	src/bridge/cockpitmemorysamples.h \
	src/bridge/cockpitmetrics.c \
	src/bridge/cockpitmetrics.h \
	src/bridge/cockpitmountsamples.c \
	src/bridge/cockpitmountsamples.h \
	src/bridge/cockpitnetworksamples.c \
	src/bridge/cockpitnetworksamples.h \
	src/bridge/cockpitsamples.c \
	src/bridge/cockpitsamples.h \
	$(NULL)

libcockpit_bridge_a_SOURCES = \
	src/bridge/cockpitconnect.c \
	src/bridge/cockpitconnect.h \
	src/bridge/cockpitdbussetup.c \
	src/bridge/cockpitdbususer.c \
	src/bridge/cockpitdbusmachines.c \
	src/bridge/cockpitpolkitagent.c \
	src/bridge/cockpitpolkitagent.h \
	src/bridge/cockpitfsread.c \
	src/bridge/cockpitfsread.h \
	src/bridge/cockpitfsreplace.c \
	src/bridge/cockpitfsreplace.h \
	src/bridge/cockpitfswatch.c \
	src/bridge/cockpitfswatch.h \
	src/bridge/cockpitfslist.c \
	src/bridge/cockpitfslist.h \
	$(libcockpit_bridge_METRICS) \
	$(NULL)

libcockpit_bridge_a_CFLAGS = \
	-I$(srcdir)/src/bridge \
	-DG_LOG_DOMAIN=\"cockpit-bridge\" \
	$(COCKPIT_BRIDGE_CFLAGS) \
	$(NULL)

libcockpit_stub_LIBS = \
	libcockpit-stub.a \
	libcockpit-common.a \
	libwebsocket.a \
	$(COCKPIT_LIBS) \
	$(NULL)

libcockpit_bridge_LIBS = \
	libcockpit-bridge.a \
	libcockpit-stub.a \
	libcockpit-common.a \
	libwebsocket.a \
	$(COCKPIT_BRIDGE_LIBS) \
	$(NULL)

cockpit_bridge_SOURCES = src/bridge/bridge.c
cockpit_bridge_CFLAGS = \
	-I$(srcdir)/src/bridge \
	-DG_LOG_DOMAIN=\"cockpit-bridge\" \
	$(COCKPIT_BRIDGE_CFLAGS) \
	$(NULL)

cockpit_bridge_LDADD = $(libcockpit_bridge_LIBS)
cockpit_askpass_SOURCES = src/bridge/askpass.c
cockpit_askpass_CFLAGS = \
	-I$(srcdir)/src/bridge \
	-DG_LOG_DOMAIN=\"cockpit-askpass\" \
	$(COCKPIT_BRIDGE_CFLAGS) \
	$(NULL)

cockpit_askpass_LDADD = $(libcockpit_bridge_LIBS)
cockpit_stub_SOURCES = src/bridge/stub.c
cockpit_stub_CFLAGS = \
	-I$(srcdir)/src/bridge \
	-DG_LOG_DOMAIN=\"cockpit-bridge\" \
	$(COCKPIT_CFLAGS) \
	$(NULL)

cockpit_stub_LDADD = $(libcockpit_stub_LIBS)

# -----------------------------------------------------------------------------
# TESTS
BRIDGE_CHECKS = test-paths test-rules test-channel test-pipe-channel \
	test-packages test-peer test-dbus-meta test-fs test-metrics \
	test-connect test-stream test-httpstream test-setup \
	test-websocketstream test-process test-bridge test-router \
	$(NULL) $(am__append_9)
mock_bridge_SOURCES = src/bridge/mock-bridge.c
mock_bridge_CFLAGS = \
	-DG_LOG_DOMAIN=\"mock-bridge\" \
	$(COCKPIT_BRIDGE_CFLAGS) \
	$(NULL)

mock_bridge_LDADD = $(libcockpit_bridge_LIBS)
test_bridge_SOURCES = src/bridge/test-bridge.c
test_bridge_CFLAGS = $(libcockpit_bridge_a_CFLAGS)
test_bridge_LDADD = $(libcockpit_bridge_LIBS)
test_channel_SOURCES = \
	src/bridge/test-channel.c \
	src/bridge/mock-transport.c src/bridge/mock-transport.h

test_channel_CFLAGS = $(libcockpit_bridge_a_CFLAGS)
test_channel_LDADD = $(libcockpit_bridge_LIBS)
test_connect_CFLAGS = $(libcockpit_bridge_a_CFLAGS)
test_connect_SOURCES = src/bridge/test-connect.c
test_connect_LDADD = $(libcockpit_bridge_LIBS)
test_dbus_meta_CFLAGS = $(libcockpit_bridge_a_CFLAGS)
test_dbus_meta_SOURCES = src/bridge/test-dbus-meta.c
test_dbus_meta_LDADD = $(libcockpit_bridge_LIBS)
test_packages_SOURCES = src/bridge/test-packages.c \
	src/bridge/mock-transport.c src/bridge/mock-transport.h

test_packages_CFLAGS = $(libcockpit_bridge_a_CFLAGS)
test_packages_LDADD = $(libcockpit_bridge_LIBS)
test_paths_SOURCES = src/bridge/test-paths.c
test_paths_CFLAGS = $(libcockpit_bridge_a_CFLAGS)
test_paths_LDADD = $(libcockpit_bridge_LIBS)
test_peer_SOURCES = src/bridge/test-peer.c \
	src/bridge/mock-transport.c src/bridge/mock-transport.h

test_peer_CFLAGS = $(libcockpit_bridge_a_CFLAGS)
test_peer_LDADD = $(libcockpit_bridge_LIBS)
test_router_SOURCES = src/bridge/test-router.c \
	src/bridge/mock-channel.c src/bridge/mock-channel.h \
	src/bridge/mock-transport.c src/bridge/mock-transport.h

test_router_CFLAGS = $(libcockpit_bridge_a_CFLAGS)
test_router_LDADD = $(libcockpit_bridge_LIBS)
test_rules_SOURCES = src/bridge/test-rules.c
test_rules_CFLAGS = $(libcockpit_bridge_a_CFLAGS)
test_rules_LDADD = $(libcockpit_bridge_LIBS)
test_setup_SOURCES = src/bridge/test-setup.c
test_setup_CFLAGS = $(libcockpit_bridge_a_CFLAGS)
test_setup_LDADD = $(libcockpit_bridge_LIBS)
test_stream_CFLAGS = $(libcockpit_bridge_a_CFLAGS)
test_stream_SOURCES = src/bridge/test-stream.c \
	src/common/mock-io-stream.c src/common/mock-io-stream.h

test_stream_LDADD = $(libcockpit_bridge_LIBS)
test_process_SOURCES = src/bridge/test-process.c
test_process_CFLAGS = $(libcockpit_bridge_a_CFLAGS)
test_process_LDADD = $(libcockpit_bridge_LIBS)
test_pipe_channel_SOURCES = \
	src/bridge/test-pipe-channel.c \
	src/bridge/mock-transport.c src/bridge/mock-transport.h

test_pipe_channel_CFLAGS = $(libcockpit_bridge_a_CFLAGS)
test_pipe_channel_LDADD = $(libcockpit_bridge_LIBS)
test_fs_SOURCES = \
	src/bridge/test-fs.c \
	src/bridge/mock-transport.c src/bridge/mock-transport.h

test_fs_CFLAGS = $(libcockpit_bridge_a_CFLAGS)
test_fs_LDADD = $(libcockpit_bridge_LIBS)
test_metrics_SOURCES = \
	src/bridge/test-metrics.c \
	src/bridge/mock-transport.c src/bridge/mock-transport.h

test_metrics_CFLAGS = $(libcockpit_bridge_a_CFLAGS)
test_metrics_LDADD = $(libcockpit_bridge_LIBS) -lm
test_httpstream_SOURCES = \
	src/bridge/test-httpstream.c \
	src/bridge/mock-transport.c src/bridge/mock-transport.h

test_httpstream_CFLAGS = $(libcockpit_bridge_a_CFLAGS)
test_httpstream_LDADD = $(libcockpit_bridge_LIBS) -ldl
test_websocketstream_SOURCES = \
	src/bridge/test-websocketstream.c \
	src/bridge/mock-transport.c src/bridge/mock-transport.h

test_websocketstream_CFLAGS = $(libcockpit_bridge_a_CFLAGS)
test_websocketstream_LDADD = $(libcockpit_bridge_LIBS) -ldl
@ENABLE_PCP_TRUE@libcockpit_pcp_a_SOURCES = \
@ENABLE_PCP_TRUE@	src/bridge/cockpitchannel.c \
@ENABLE_PCP_TRUE@	src/bridge/cockpitchannel.h \
@ENABLE_PCP_TRUE@	src/bridge/cockpitconnect.c \
@ENABLE_PCP_TRUE@	src/bridge/cockpitconnect.h \
@ENABLE_PCP_TRUE@	src/bridge/cockpitpcpmetrics.c \
@ENABLE_PCP_TRUE@	src/bridge/cockpitpcpmetrics.h \
@ENABLE_PCP_TRUE@	src/bridge/cockpitpeer.c \
@ENABLE_PCP_TRUE@	src/bridge/cockpitpeer.h \
@ENABLE_PCP_TRUE@	src/bridge/cockpitrouter.c \
@ENABLE_PCP_TRUE@	src/bridge/cockpitrouter.h \
@ENABLE_PCP_TRUE@	$(libcockpit_bridge_METRICS) \
@ENABLE_PCP_TRUE@	$(NULL)

@ENABLE_PCP_TRUE@libcockpit_pcp_a_CFLAGS = \
@ENABLE_PCP_TRUE@	-I$(srcdir)/src/bridge \
@ENABLE_PCP_TRUE@	-DG_LOG_DOMAIN=\"cockpit-pcp\" \
@ENABLE_PCP_TRUE@	$(COCKPIT_PCP_CFLAGS) \
@ENABLE_PCP_TRUE@	$(NULL)

@ENABLE_PCP_TRUE@libcockpit_pcp_LIBS = \
@ENABLE_PCP_TRUE@	libcockpit-pcp.a \
@ENABLE_PCP_TRUE@	libcockpit-common.a \
@ENABLE_PCP_TRUE@	$(COCKPIT_PCP_LIBS) \
@ENABLE_PCP_TRUE@	$(NULL)

@ENABLE_PCP_TRUE@cockpit_pcp_SOURCES = src/bridge/cockpitpcp.c
@ENABLE_PCP_TRUE@cockpit_pcp_CFLAGS = \
@ENABLE_PCP_TRUE@	-DG_LOG_DOMAIN=\"cockpit-pcp\" \
@ENABLE_PCP_TRUE@	$(COCKPIT_PCP_CFLAGS) \
@ENABLE_PCP_TRUE@	$(NULL)

@ENABLE_PCP_TRUE@cockpit_pcp_LDADD = $(libcockpit_pcp_LIBS)
@ENABLE_PCP_TRUE@pmlogconfdir = $(localstatedir)/lib/pcp/config/pmlogconf/tools
@ENABLE_PCP_TRUE@pmlogconf_DATA = src/bridge/pmlogconf/cockpit
@ENABLE_PCP_TRUE@test_pcp_SOURCES = \
@ENABLE_PCP_TRUE@	src/bridge/test-pcp.c \
@ENABLE_PCP_TRUE@	src/bridge/mock-transport.c src/bridge/mock-transport.h

@ENABLE_PCP_TRUE@test_pcp_CFLAGS = $(libcockpit_pcp_a_CFLAGS)
@ENABLE_PCP_TRUE@test_pcp_LDADD = $(libcockpit_pcp_LIBS) -ldl
@ENABLE_PCP_TRUE@test_pcp_archives_SOURCES = \
@ENABLE_PCP_TRUE@	src/bridge/test-pcp-archives.c \
@ENABLE_PCP_TRUE@	src/bridge/mock-transport.c src/bridge/mock-transport.h

@ENABLE_PCP_TRUE@test_pcp_archives_CFLAGS = $(libcockpit_pcp_a_CFLAGS)
@ENABLE_PCP_TRUE@test_pcp_archives_LDADD = $(libcockpit_pcp_LIBS) -ldl -lpcp_import
COCKPIT_ASSETS = \
       src/common/cockpitassets.h \
       src/common/cockpitassets.c \
       $(NULL)

libcockpit_common_a_SOURCES = \
	src/common/cockpitauthorize.c \
	src/common/cockpitauthorize.h \
	src/common/cockpitbase64.c \
	src/common/cockpitbase64.h \
	src/common/cockpiterror.h src/common/cockpiterror.c \
	src/common/cockpitframe.c \
	src/common/cockpitframe.h \
	src/common/cockpithash.c \
	src/common/cockpithash.h \
	src/common/cockpithex.c \
	src/common/cockpithex.h \
	src/common/cockpitjson.c \
	src/common/cockpitjson.h \
	src/common/cockpitknownhosts.c \
	src/common/cockpitknownhosts.h \
	src/common/cockpitlog.h src/common/cockpitlog.c \
	src/common/cockpitlocale.c \
	src/common/cockpitlocale.h \
	src/common/cockpitloopback.c \
	src/common/cockpitloopback.h \
	src/common/cockpitmachinesjson.c \
	src/common/cockpitmachinesjson.h \
	src/common/cockpitmemory.c \
	src/common/cockpitmemory.h \
	src/common/cockpitpipe.c \
	src/common/cockpitpipe.h \
	src/common/cockpitpipetransport.c \
	src/common/cockpitpipetransport.h \
	src/common/cockpitsystem.c \
	src/common/cockpitsystem.h \
	src/common/cockpittemplate.c \
	src/common/cockpittemplate.h \
	src/common/cockpittest.c \
	src/common/cockpittest.h \
	src/common/cockpittransport.c \
	src/common/cockpittransport.h \
	src/common/cockpitunicode.c \
	src/common/cockpitunicode.h \
	src/common/cockpitunixfd.c \
	src/common/cockpitunixfd.h \
	src/common/cockpitunixsignal.c \
	src/common/cockpitunixsignal.h \
	src/common/cockpitversion.c \
	src/common/cockpitversion.h \
	src/common/cockpitwebfilter.h \
	src/common/cockpitwebfilter.c \
	src/common/cockpitwebinject.h \
	src/common/cockpitwebinject.c \
	src/common/cockpitwebresponse.h \
	src/common/cockpitwebresponse.c \
	src/common/cockpitwebserver.h \
	src/common/cockpitwebserver.c \
	src/common/cockpitconf.h \
	src/common/cockpitconf.c \
	src/common/mock-dbus-tests.c \
	src/common/mock-dbus-tests.h \
	src/common/mock-service.c \
	src/common/mock-service.h \
	$(COCKPIT_ASSETS) \
	$(NULL)

libcockpit_common_a_CFLAGS = \
	-DG_LOG_DOMAIN=\"cockpit-protocol\" \
	$(COCKPIT_CFLAGS) \
	$(NULL)

libcockpit_common_a_LIBS = \
	libcockpit-common.a \
	libwebsocket.a \
	$(COCKPIT_LIBS) \
	$(NULL)


# -----------------------------------------------------------------------------
# TESTS
COCKPIT_CHECKS = \
	test-hash \
	test-hex \
	test-json \
	test-locale \
	test-knownhosts \
	test-pipe \
	test-transport \
	test-unixsignal \
	test-template \
	test-webresponse \
	test-webserver \
	test-config \
	test-unicode \
	test-version \
	test-system \
	test-base64 \
	test-authorize \
	$(NULL)

test_authorize_CFLAGS = $(libcockpit_common_a_CFLAGS)
test_authorize_SOURCES = \
	src/common/cockpitauthorize.c \
	src/common/cockpitauthorize.h \
	src/common/cockpitbase64.c \
	src/common/cockpitbase64.h \
	src/common/cockpitmemory.c \
	src/common/cockpitmemory.h \
	src/common/test-authorize.c \
	$(NULL)

test_authorize_LDADD = libretest.a
test_base64_CFLAGS = $(COCKPIT_SESSION_CFLAGS)
test_base64_SOURCES = \
	src/common/test-base64.c \
	src/common/cockpitbase64.h \
	src/common/cockpitbase64.c \
	$(NULL)

test_base64_LDADD = libretest.a
test_hash_CFLAGS = $(libcockpit_common_a_CFLAGS)
test_hash_SOURCES = src/common/test-hash.c
test_hash_LDADD = $(libcockpit_common_a_LIBS)
test_hex_CFLAGS = $(libcockpit_common_a_CFLAGS)
test_hex_SOURCES = src/common/test-hex.c
test_hex_LDADD = libretest.a $(libcockpit_common_a_LIBS)
test_json_CFLAGS = $(libcockpit_common_a_CFLAGS)
test_json_SOURCES = src/common/test-json.c
test_json_LDADD = $(libcockpit_common_a_LIBS)
test_locale_PO = \
	src/common/mock-locale/de_DE/LC_MESSAGES/test.po \
	src/common/mock-locale/zh_CN/LC_MESSAGES/test.po \
	$(NULL)

test_locale_MO = $(test_locale_PO:.po=.mo)
test_locale_CFLAGS = $(libcockpit_common_a_CFLAGS)
test_locale_SOURCES = src/common/test-locale.c
test_locale_LDADD = $(libcockpit_common_a_LIBS)
test_knownhosts_CFLAGS = $(libcockpit_common_a_CFLAGS)
test_knownhosts_SOURCES = src/common/test-knownhosts.c
test_knownhosts_LDADD = $(libcockpit_common_a_LIBS)
test_pipe_CFLAGS = $(libcockpit_common_a_CFLAGS)
test_pipe_SOURCES = src/common/test-pipe.c
test_pipe_LDADD = $(libcockpit_common_a_LIBS)
test_system_CFLAGS = $(libcockpit_common_a_CFLAGS)
test_system_SOURCES = src/common/test-system.c
test_system_LDADD = $(libcockpit_common_a_LIBS)
test_template_CFLAGS = $(libcockpit_common_a_CFLAGS)
test_template_SOURCES = src/common/test-template.c
test_template_LDADD = $(libcockpit_common_a_LIBS)
test_transport_CFLAGS = $(libcockpit_common_a_CFLAGS)
test_transport_SOURCES = src/common/test-transport.c
test_transport_LDADD = $(libcockpit_common_a_LIBS)
test_unicode_CFLAGS = $(libcockpit_common_a_CFLAGS)
test_unicode_SOURCES = src/common/test-unicode.c
test_unicode_LDADD = $(libcockpit_common_a_LIBS)
test_unixsignal_CFLAGS = $(libcockpit_common_a_CFLAGS)
test_unixsignal_SOURCES = src/common/test-unixsignal.c
test_unixsignal_LDADD = $(libcockpit_common_a_LIBS)
test_version_CFLAGS = $(libcockpit_common_a_CFLAGS)
test_version_SOURCES = src/common/test-version.c
test_version_LDADD = $(libcockpit_common_a_LIBS)
test_webresponse_SOURCES = \
	src/common/test-webresponse.c \
	src/common/mock-io-stream.c src/common/mock-io-stream.h \
	$(COCKPIT_ASSETS) \
	$(NULL)

test_webresponse_CFLAGS = $(libcockpit_common_a_CFLAGS)
test_webresponse_LDADD = $(libcockpit_common_a_LIBS)
test_webserver_SOURCES = src/common/test-webserver.c
test_webserver_CFLAGS = $(libcockpit_common_a_CFLAGS)
test_webserver_LDADD = $(libcockpit_common_a_LIBS)
test_config_CFLAGS = $(libcockpit_common_a_CFLAGS)
test_config_SOURCES = src/common/test-config.c
test_config_LDADD = $(libcockpit_common_a_LIBS)
libwebsocket_a_SOURCES = \
	src/websocket/websocket.h \
	src/websocket/websocket.c \
	src/websocket/websocketclient.h \
	src/websocket/websocketclient.c \
	src/websocket/websocketserver.h \
	src/websocket/websocketserver.c \
	src/websocket/websocketconnection.h \
	src/websocket/websocketconnection.c \
	src/websocket/websocketprivate.h \
	$(NULL)

libwebsocket_a_CPPFLAGS = \
	-DG_LOG_DOMAIN=\"WebSocket\" \
	$(GIO_CFLAGS) \
	$(NULL)

frob_websocket_SOURCES = src/websocket/frob-websocket.c
frob_websocket_CPPFLAGS = $(libwebsocket_a_CPPFLAGS)
frob_websocket_LDADD = libwebsocket.a $(GIO_LIBS)
test_websocket_SOURCES = src/websocket/test-websocket.c
test_websocket_CPPFLAGS = $(libwebsocket_a_CPPFLAGS)
test_websocket_LDADD = libwebsocket.a $(GIO_LIBS)
@WITH_COCKPIT_SSH_TRUE@libcockpit_ssh_a_SOURCES = \
@WITH_COCKPIT_SSH_TRUE@	src/ssh/cockpitsshoptions.c \
@WITH_COCKPIT_SSH_TRUE@	src/ssh/cockpitsshoptions.h \
@WITH_COCKPIT_SSH_TRUE@	src/ssh/cockpitsshrelay.h \
@WITH_COCKPIT_SSH_TRUE@	src/ssh/cockpitsshrelay.c \
@WITH_COCKPIT_SSH_TRUE@	src/common/cockpitauthorize.c \
@WITH_COCKPIT_SSH_TRUE@	src/common/cockpitauthorize.h \
@WITH_COCKPIT_SSH_TRUE@	$(NULL)

@WITH_COCKPIT_SSH_TRUE@libcockpit_ssh_a_CFLAGS = \
@WITH_COCKPIT_SSH_TRUE@	-I$(top_srcdir)/src/ssh \
@WITH_COCKPIT_SSH_TRUE@	-DCOCKPIT_BUILD_INFO=\"$(COCKPIT_BUILD_INFO)\"	\
@WITH_COCKPIT_SSH_TRUE@	-DG_LOG_DOMAIN=\"cockpit-ssh\" \
@WITH_COCKPIT_SSH_TRUE@	$(COCKPIT_SSH_SESSION_CFLAGS) \
@WITH_COCKPIT_SSH_TRUE@	$(NULL)

@WITH_COCKPIT_SSH_TRUE@libcockpit_ssh_LIBS = \
@WITH_COCKPIT_SSH_TRUE@	libcockpit-ssh.a \
@WITH_COCKPIT_SSH_TRUE@	libcockpit-common.a \
@WITH_COCKPIT_SSH_TRUE@	$(COCKPIT_SSH_SESSION_LIBS) \
@WITH_COCKPIT_SSH_TRUE@	$(NULL)

@WITH_COCKPIT_SSH_TRUE@cockpit_ssh_SOURCES = \
@WITH_COCKPIT_SSH_TRUE@	src/ssh/ssh.c \
@WITH_COCKPIT_SSH_TRUE@	$(NULL)

@WITH_COCKPIT_SSH_TRUE@cockpit_ssh_LDADD = \
@WITH_COCKPIT_SSH_TRUE@	$(libcockpit_ssh_LIBS) \
@WITH_COCKPIT_SSH_TRUE@	$(COCKPIT_SSH_SESSION_LIBS) \
@WITH_COCKPIT_SSH_TRUE@	$(NULL)

@WITH_COCKPIT_SSH_TRUE@cockpit_ssh_CFLAGS = \
@WITH_COCKPIT_SSH_TRUE@	$(COCKPIT_SSH_SESSION_CFLAGS) \
@WITH_COCKPIT_SSH_TRUE@	$(NULL)

@WITH_COCKPIT_SSH_TRUE@mock_sshd_SOURCES = src/ssh/mock-sshd.c
@WITH_COCKPIT_SSH_TRUE@mock_sshd_LDADD = \
@WITH_COCKPIT_SSH_TRUE@	$(COCKPIT_SSH_SESSION_LIBS) \
@WITH_COCKPIT_SSH_TRUE@	$(NULL)

@WITH_COCKPIT_SSH_TRUE@mock_sshd_CFLAGS = \
@WITH_COCKPIT_SSH_TRUE@	$(COCKPIT_SSH_SESSION_CFLAGS) \
@WITH_COCKPIT_SSH_TRUE@	$(NULL)

@WITH_COCKPIT_SSH_TRUE@SSH_CHECKS = \
@WITH_COCKPIT_SSH_TRUE@	test-sshoptions \
@WITH_COCKPIT_SSH_TRUE@	test-sshbridge \
@WITH_COCKPIT_SSH_TRUE@	$(NULL)

@WITH_COCKPIT_SSH_TRUE@test_sshoptions_CFLAGS = $(cockpit_ssh_CFLAGS)
@WITH_COCKPIT_SSH_TRUE@test_sshoptions_SOURCES = src/ssh/test-sshoptions.c
@WITH_COCKPIT_SSH_TRUE@test_sshoptions_LDADD = libcockpit-ssh.a $(cockpit_ssh_LDADD)
@WITH_COCKPIT_SSH_TRUE@test_sshbridge_CFLAGS = $(cockpit_ssh_CFLAGS)
@WITH_COCKPIT_SSH_TRUE@test_sshbridge_SOURCES = src/ssh/test-sshbridge.c
@WITH_COCKPIT_SSH_TRUE@test_sshbridge_LDADD = libcockpit-ssh.a $(cockpit_ssh_LDADD)
COCKPIT_BUILD_INFO = "Built on $(shell date)"
LOGIN_PO_FILES = $(patsubst %,dist/static/login.po.%.html,$(LINGUAS))
staticdir = $(datadir)/cockpit/static
nodist_static_DATA = dist/static/login.min.html dist/static/login.po.html $(LOGIN_PO_FILES)
staticfontsdir = $(staticdir)/fonts
staticfonts_DATA = $(OPENSANS_FONTS)
libcockpit_ws_a_SOURCES = \
	src/ws/cockpitws.h				\
	src/ws/cockpithandlers.h	src/ws/cockpithandlers.c	\
	src/ws/cockpitauth.h		src/ws/cockpitauth.c		\
	src/ws/cockpitcertificate.c \
	src/ws/cockpitcertificate.h \
	src/ws/cockpitcompat.c \
	src/ws/cockpitcompat.h \
	src/ws/cockpitbranding.h \
	src/ws/cockpitbranding.c \
	src/ws/cockpitchannelresponse.h \
	src/ws/cockpitchannelresponse.c \
	src/ws/cockpitchannelsocket.h \
	src/ws/cockpitchannelsocket.c \
	src/ws/cockpitcreds.h src/ws/cockpitcreds.c \
	src/ws/cockpitwebservice.h \
	src/ws/cockpitwebservice.c \
	$(NULL)

libcockpit_ws_a_CFLAGS = \
	-I$(top_srcdir)/src/ws \
	-DCOCKPIT_BUILD_INFO=\"$(COCKPIT_BUILD_INFO)\"	\
	-DG_LOG_DOMAIN=\"cockpit-ws\" \
	$(COCKPIT_WS_CFLAGS) \
	$(NULL)

libcockpit_ws_LIBS = \
	libcockpit-ws.a \
	libcockpit-common.a \
	libwebsocket.a \
	$(COCKPIT_WS_LIBS) \
	$(NULL)

cockpit_session_SOURCES = \
	src/common/cockpitauthorize.c \
	src/common/cockpitauthorize.h \
	src/common/cockpitbase64.c \
	src/common/cockpitbase64.h \
	src/common/cockpitframe.c \
	src/common/cockpitframe.h \
	src/common/cockpitmemory.c \
	src/common/cockpitmemory.h \
	src/ws/session.c \
	$(NULL)

cockpit_session_LDADD = $(COCKPIT_SESSION_LIBS)
cockpit_ws_SOURCES = \
	src/ws/main.c					\
	$(NULL)

cockpit_ws_CFLAGS = \
	-DG_LOG_DOMAIN=\"cockpit-ws\"			\
	-I$(top_srcdir)/src/ws				\
	$(COCKPIT_WS_CFLAGS)				\
	$(NULL)

cockpit_ws_LDADD = \
	$(libcockpit_ws_LIBS) \
	$(COCKPIT_WS_LIBS)					\
	$(NULL)

remotectl_SOURCES = \
	src/ws/cockpitcertificate.c \
	src/ws/cockpitcertificate.h \
	src/ws/remotectl-certificate.c \
	src/ws/remotectl.c \
	src/ws/remotectl.h \
	$(NULL)

remotectl_CFLAGS = \
	$(COCKPIT_CFLAGS) \
	$(NULL)

remotectl_LDADD = \
	libcockpit-common.a \
	$(COCKPIT_LIBS) \
	$(NULL)

firewalldir = $(prefix)/lib/firewalld/services
firewall_DATA = src/ws/cockpit.xml
appdatadir = $(datadir)/metainfo
nodist_appdata_DATA = src/ws/cockpit.appdata.xml
appdata_in = src/ws/cockpit.appdata.xml.in
desktopdir = $(datadir)/applications
nodist_desktop_DATA = src/ws/cockpit.desktop
desktop_in = src/ws/cockpit.desktop.in
pixmapdir = $(datadir)/pixmaps
pixmap_DATA = src/ws/cockpit.png
test_server_SOURCES = src/ws/test-server.c $(mock_dbus_sources)
nodist_test_server_SOURCES = $(test_built_sources)
test_server_CFLAGS = \
	-I$(top_srcdir)/src/ws \
	-DG_LOG_DOMAIN=\"test-server\"			\
	$(GIO_CFLAGS)					\
	$(COCKPIT_WS_CFLAGS) \
	$(NULL)

test_server_LDADD = \
	$(libcockpit_ws_LIBS) \
	$(GIO_LIBS)					\
	-lpam 						\
	$(NULL)

WS_CHECKS = test-base64 test-creds test-auth test-compat \
	test-webservice test-channelresponse test-handlers \
	test-kerberos test-remotectlcertificate $(NULL) \
	$(am__append_20)
test_auth_CFLAGS = $(cockpit_ws_CFLAGS)
test_auth_SOURCES = \
	src/ws/test-auth.c \
	src/ws/mock-auth.c \
	src/ws/mock-auth.h \
	$(NULL)

test_auth_LDADD = \
	libcockpit-ws.a \
	$(cockpit_ws_LDADD) \
	$(NULL)

test_channelresponse_CFLAGS = $(cockpit_ws_CFLAGS)
test_channelresponse_SOURCES = src/ws/test-channelresponse.c \
	src/ws/mock-auth.c src/ws/mock-auth.h \
	src/common/mock-io-stream.c src/common/mock-io-stream.h \
	$(NULL)

test_channelresponse_LDADD = \
	libwebsocket.a \
	libcockpit-ws.a \
	$(cockpit_ws_LDADD) \
	$(NULL)

test_compat_CFLAGS = $(cockpit_ws_CFLAGS)
test_compat_SOURCES = src/ws/test-compat.c
test_compat_LDADD = libcockpit-ws.a $(cockpit_ws_LDADD)
test_creds_CFLAGS = $(cockpit_ws_CFLAGS)
test_creds_SOURCES = src/ws/test-creds.c
test_creds_LDADD = \
	libcockpit-ws.a \
	$(cockpit_ws_LDADD)

test_handlers_CFLAGS = $(cockpit_ws_CFLAGS)
test_handlers_SOURCES = \
	src/ws/test-handlers.c \
	src/ws/mock-auth.c src/ws/mock-auth.h \
	src/common/mock-io-stream.c src/common/mock-io-stream.h \
	$(NULL)

test_handlers_LDADD = \
	libcockpit-ws.a \
	$(cockpit_ws_LDADD) \
	$(NULL)

test_remotectlcertificate_CFLAGS = \
	$(COCKPIT_CFLAGS) \
	$(NULL)

test_remotectlcertificate_SOURCES = \
	src/ws/test-remotectlcertificate.c \
	src/ws/cockpitcertificate.c \
	src/ws/cockpitcertificate.h \
	src/ws/remotectl-certificate.c \
	src/ws/remotectl.h \
	$(NULL)

test_remotectlcertificate_LDADD = \
	libcockpit-common.a \
	$(COCKPIT_LIBS) \
	$(NULL)

test_webservice_SOURCES = \
	src/ws/test-webservice.c \
	src/ws/mock-auth.c src/ws/mock-auth.h \
	src/common/mock-io-stream.c src/common/mock-io-stream.h \
	$(NULL)

test_webservice_CFLAGS = $(cockpit_ws_CFLAGS)
test_webservice_LDADD = \
	libwebsocket.a \
	libcockpit-ws.a \
	$(cockpit_ws_LDADD) \
	$(NULL)

test_kerberos_SOURCES = src/ws/test-kerberos.c
test_kerberos_LDADD = libcockpit-ws.a $(cockpit_ws_LDADD)
test_kerberos_CFLAGS = $(cockpit_ws_CFLAGS)
mock_echo_SOURCES = src/ws/mock-echo.c
mock_echo_CFLAGS = $(COCKPIT_WS_CFLAGS)
mock_echo_LDADD = $(COCKPIT_WS_LIBS)
mock_auth_command_SOURCES = \
	src/common/cockpitauthorize.c \
	src/common/cockpitauthorize.h \
	src/common/cockpitbase64.c \
	src/common/cockpitbase64.h \
	src/common/cockpitframe.c \
	src/common/cockpitframe.h \
	src/common/cockpitmemory.c \
	src/common/cockpitmemory.h \
	src/ws/mock-auth-command.c \
	$(NULL)

@WITH_COCKPIT_SSH_TRUE@test_authssh_CFLAGS = $(cockpit_ws_CFLAGS)
@WITH_COCKPIT_SSH_TRUE@test_authssh_SOURCES = \
@WITH_COCKPIT_SSH_TRUE@	src/ws/test-authssh.c \
@WITH_COCKPIT_SSH_TRUE@	src/ws/mock-auth.c \
@WITH_COCKPIT_SSH_TRUE@	src/ws/mock-auth.h \
@WITH_COCKPIT_SSH_TRUE@	$(NULL)

@WITH_COCKPIT_SSH_TRUE@test_authssh_LDADD = \
@WITH_COCKPIT_SSH_TRUE@	libcockpit-ws.a \
@WITH_COCKPIT_SSH_TRUE@	$(cockpit_ws_LDADD)

mock_pam_conv_mod_so_SOURCES = src/ws/mock-pam-conv-mod.c
testassetsdir = $(prefix)/lib/cockpit-test-assets
testserviceddir = $(systemdunitdir)/cockpit.service.d
libretest_a_SOURCES = \
	src/retest/retest.c \
	src/retest/retest.h \
	$(NULL)

libpam_ssh_add_a_SOURCES = \
	src/pam-ssh-add/pam-ssh-add.c \
	src/pam-ssh-add/pam-ssh-add.h \
	$(NULL)

libpam_ssh_add_a_CFLAGS = $(NULL)
libpam_ssh_add_a_LIBS = \
	libpam_ssh_add.a \
	$(PAM_LIBS)

pam_ssh_add_FILES = src/pam-ssh-add/pam-ssh-add.c src/pam-ssh-add/pam-ssh-add.c

# -----------------------------------------------------------------------------
# Tests
PAM_SSH_ADD_CHECKS = \
	test-ssh-add \
	$(NULL)

test_ssh_add_SOURCES = src/pam-ssh-add/test-ssh-add.c
test_ssh_add_CFLAGS = $(libpam_ssh_add_a_CFLAGS)
test_ssh_add_LDADD = $(libpam_ssh_add_a_LIBS) libretest.a
KUBERNETES_DIR = $(srcdir)/containers/kubernetes
WS_DIR = $(srcdir)/containers/ws

# needed for installed integration tests
ATOMIC_SETUP = \
	$(WS_DIR)/atomic-install   \
	$(WS_DIR)/atomic-run       \
	$(WS_DIR)/atomic-uninstall \
	$(NULL)

UNIT_TESTS_DIR = $(srcdir)/containers/unit-tests
all: $(BUILT_SOURCES) config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .css .css.gz .html .html.gz .js .js.gz .json .json.in .jsx .map .map.gz .mo .po .service .service.in .svg .svg.gz .woff .woff.gz .1 .8 .5 .c .html$(EXEEXT) .log .o .obj .sh .sh$(EXEEXT) .trs .xml
am--refresh: Makefile
	@:
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.am $(srcdir)/doc/Makefile-doc.am $(srcdir)/doc/guide/Makefile-guide.am $(srcdir)/doc/man/Makefile-man.am $(srcdir)/po/Makefile.am $(srcdir)/pkg/Makefile.am $(srcdir)/src/base1/Makefile.am $(srcdir)/src/branding/centos/Makefile.am $(srcdir)/src/branding/debian/Makefile.am $(srcdir)/src/branding/default/Makefile.am $(srcdir)/src/branding/fedora/Makefile.am $(srcdir)/src/branding/kubernetes/Makefile.am $(srcdir)/src/branding/registry/Makefile.am $(srcdir)/src/branding/rhel/Makefile.am $(srcdir)/src/branding/ubuntu/Makefile.am $(srcdir)/src/bridge/Makefile.am $(srcdir)/src/common/Makefile-common.am $(srcdir)/src/websocket/Makefile-websocket.am $(srcdir)/tools/Makefile-tools.am $(srcdir)/src/ssh/Makefile-ssh.am $(srcdir)/src/ws/Makefile-ws.am $(srcdir)/src/retest/Makefile.am $(srcdir)/src/pam-ssh-add/Makefile.am $(srcdir)/containers/Makefile.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --foreign'; \
	      $(am__cd) $(srcdir) && $(AUTOMAKE) --foreign \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;
$(srcdir)/doc/Makefile-doc.am $(srcdir)/doc/guide/Makefile-guide.am $(srcdir)/doc/man/Makefile-man.am $(srcdir)/po/Makefile.am $(srcdir)/pkg/Makefile.am $(srcdir)/src/base1/Makefile.am $(srcdir)/src/branding/centos/Makefile.am $(srcdir)/src/branding/debian/Makefile.am $(srcdir)/src/branding/default/Makefile.am $(srcdir)/src/branding/fedora/Makefile.am $(srcdir)/src/branding/kubernetes/Makefile.am $(srcdir)/src/branding/registry/Makefile.am $(srcdir)/src/branding/rhel/Makefile.am $(srcdir)/src/branding/ubuntu/Makefile.am $(srcdir)/src/bridge/Makefile.am $(srcdir)/src/common/Makefile-common.am $(srcdir)/src/websocket/Makefile-websocket.am $(srcdir)/tools/Makefile-tools.am $(srcdir)/src/ssh/Makefile-ssh.am $(srcdir)/src/ws/Makefile-ws.am $(srcdir)/src/retest/Makefile.am $(srcdir)/src/pam-ssh-add/Makefile.am $(srcdir)/containers/Makefile.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure: @MAINTAINER_MODE_TRUE@ $(am__configure_deps)
	$(am__cd) $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4): @MAINTAINER_MODE_TRUE@ $(am__aclocal_m4_deps)
	$(am__cd) $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
$(am__aclocal_m4_deps):

config.h: stamp-h1
	@test -f $@ || rm -f stamp-h1
	@test -f $@ || $(MAKE) $(AM_MAKEFLAGS) stamp-h1

stamp-h1: $(srcdir)/config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status config.h
$(srcdir)/config.h.in: @MAINTAINER_MODE_TRUE@ $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f config.h stamp-h1
doc/guide/version: $(top_builddir)/config.status $(top_srcdir)/doc/guide/version.in
	cd $(top_builddir) && $(SHELL) ./config.status $@

clean-noinstLIBRARIES:
	-test -z "$(noinst_LIBRARIES)" || rm -f $(noinst_LIBRARIES)
src/bridge/$(am__dirstamp):
	@$(MKDIR_P) src/bridge
	@: > src/bridge/$(am__dirstamp)
src/bridge/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/bridge/$(DEPDIR)
	@: > src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitconnect.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitdbussetup.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitdbususer.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitdbusmachines.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitpolkitagent.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitfsread.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitfsreplace.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitfswatch.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitfslist.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitblocksamples.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitcgroupsamples.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitcpusamples.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitdisksamples.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitinternalmetrics.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitmemorysamples.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitmetrics.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitmountsamples.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitnetworksamples.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_bridge_a-cockpitsamples.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

libcockpit-bridge.a: $(libcockpit_bridge_a_OBJECTS) $(libcockpit_bridge_a_DEPENDENCIES) $(EXTRA_libcockpit_bridge_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcockpit-bridge.a
	$(AM_V_AR)$(libcockpit_bridge_a_AR) libcockpit-bridge.a $(libcockpit_bridge_a_OBJECTS) $(libcockpit_bridge_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcockpit-bridge.a
src/common/$(am__dirstamp):
	@$(MKDIR_P) src/common
	@: > src/common/$(am__dirstamp)
src/common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/common/$(DEPDIR)
	@: > src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitauthorize.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitbase64.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpiterror.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitframe.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpithash.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpithex.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitjson.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitknownhosts.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitlog.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitlocale.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitloopback.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitmachinesjson.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitmemory.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitpipe.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitpipetransport.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitsystem.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpittemplate.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpittest.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpittransport.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitunicode.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitunixfd.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitunixsignal.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitversion.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitwebfilter.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitwebinject.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitwebresponse.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitwebserver.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitconf.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-mock-dbus-tests.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-mock-service.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_common_a-cockpitassets.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

libcockpit-common.a: $(libcockpit_common_a_OBJECTS) $(libcockpit_common_a_DEPENDENCIES) $(EXTRA_libcockpit_common_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcockpit-common.a
	$(AM_V_AR)$(libcockpit_common_a_AR) libcockpit-common.a $(libcockpit_common_a_OBJECTS) $(libcockpit_common_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcockpit-common.a
src/bridge/libcockpit_pcp_a-cockpitchannel.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_pcp_a-cockpitconnect.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_pcp_a-cockpitpcpmetrics.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_pcp_a-cockpitpeer.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_pcp_a-cockpitrouter.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_pcp_a-cockpitblocksamples.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_pcp_a-cockpitcgroupsamples.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_pcp_a-cockpitcpusamples.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_pcp_a-cockpitdisksamples.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_pcp_a-cockpitinternalmetrics.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_pcp_a-cockpitmemorysamples.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_pcp_a-cockpitmetrics.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_pcp_a-cockpitmountsamples.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_pcp_a-cockpitnetworksamples.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_pcp_a-cockpitsamples.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

libcockpit-pcp.a: $(libcockpit_pcp_a_OBJECTS) $(libcockpit_pcp_a_DEPENDENCIES) $(EXTRA_libcockpit_pcp_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcockpit-pcp.a
	$(AM_V_AR)$(libcockpit_pcp_a_AR) libcockpit-pcp.a $(libcockpit_pcp_a_OBJECTS) $(libcockpit_pcp_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcockpit-pcp.a
src/ssh/$(am__dirstamp):
	@$(MKDIR_P) src/ssh
	@: > src/ssh/$(am__dirstamp)
src/ssh/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/ssh/$(DEPDIR)
	@: > src/ssh/$(DEPDIR)/$(am__dirstamp)
src/ssh/libcockpit_ssh_a-cockpitsshoptions.$(OBJEXT):  \
	src/ssh/$(am__dirstamp) src/ssh/$(DEPDIR)/$(am__dirstamp)
src/ssh/libcockpit_ssh_a-cockpitsshrelay.$(OBJEXT):  \
	src/ssh/$(am__dirstamp) src/ssh/$(DEPDIR)/$(am__dirstamp)
src/common/libcockpit_ssh_a-cockpitauthorize.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

libcockpit-ssh.a: $(libcockpit_ssh_a_OBJECTS) $(libcockpit_ssh_a_DEPENDENCIES) $(EXTRA_libcockpit_ssh_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcockpit-ssh.a
	$(AM_V_AR)$(libcockpit_ssh_a_AR) libcockpit-ssh.a $(libcockpit_ssh_a_OBJECTS) $(libcockpit_ssh_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcockpit-ssh.a
src/bridge/libcockpit_stub_a-cockpitchannel.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_stub_a-cockpitconnect.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_stub_a-cockpitdbuscache.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_stub_a-cockpitdbusinternal.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_stub_a-cockpitdbusjson.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_stub_a-cockpitdbusprocess.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_stub_a-cockpitdbusmeta.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_stub_a-cockpitdbusrules.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_stub_a-cockpitechochannel.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_stub_a-cockpitpipechannel.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_stub_a-cockpithttpstream.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_stub_a-cockpitinteracttransport.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_stub_a-cockpitpackages.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_stub_a-cockpitpaths.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_stub_a-cockpitpeer.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_stub_a-cockpitnullchannel.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_stub_a-cockpitrouter.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_stub_a-cockpitstream.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/libcockpit_stub_a-cockpitwebsocketstream.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

libcockpit-stub.a: $(libcockpit_stub_a_OBJECTS) $(libcockpit_stub_a_DEPENDENCIES) $(EXTRA_libcockpit_stub_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcockpit-stub.a
	$(AM_V_AR)$(libcockpit_stub_a_AR) libcockpit-stub.a $(libcockpit_stub_a_OBJECTS) $(libcockpit_stub_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcockpit-stub.a
src/ws/$(am__dirstamp):
	@$(MKDIR_P) src/ws
	@: > src/ws/$(am__dirstamp)
src/ws/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/ws/$(DEPDIR)
	@: > src/ws/$(DEPDIR)/$(am__dirstamp)
src/ws/libcockpit_ws_a-cockpithandlers.$(OBJEXT):  \
	src/ws/$(am__dirstamp) src/ws/$(DEPDIR)/$(am__dirstamp)
src/ws/libcockpit_ws_a-cockpitauth.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)
src/ws/libcockpit_ws_a-cockpitcertificate.$(OBJEXT):  \
	src/ws/$(am__dirstamp) src/ws/$(DEPDIR)/$(am__dirstamp)
src/ws/libcockpit_ws_a-cockpitcompat.$(OBJEXT):  \
	src/ws/$(am__dirstamp) src/ws/$(DEPDIR)/$(am__dirstamp)
src/ws/libcockpit_ws_a-cockpitbranding.$(OBJEXT):  \
	src/ws/$(am__dirstamp) src/ws/$(DEPDIR)/$(am__dirstamp)
src/ws/libcockpit_ws_a-cockpitchannelresponse.$(OBJEXT):  \
	src/ws/$(am__dirstamp) src/ws/$(DEPDIR)/$(am__dirstamp)
src/ws/libcockpit_ws_a-cockpitchannelsocket.$(OBJEXT):  \
	src/ws/$(am__dirstamp) src/ws/$(DEPDIR)/$(am__dirstamp)
src/ws/libcockpit_ws_a-cockpitcreds.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)
src/ws/libcockpit_ws_a-cockpitwebservice.$(OBJEXT):  \
	src/ws/$(am__dirstamp) src/ws/$(DEPDIR)/$(am__dirstamp)

libcockpit-ws.a: $(libcockpit_ws_a_OBJECTS) $(libcockpit_ws_a_DEPENDENCIES) $(EXTRA_libcockpit_ws_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libcockpit-ws.a
	$(AM_V_AR)$(libcockpit_ws_a_AR) libcockpit-ws.a $(libcockpit_ws_a_OBJECTS) $(libcockpit_ws_a_LIBADD)
	$(AM_V_at)$(RANLIB) libcockpit-ws.a
src/pam-ssh-add/$(am__dirstamp):
	@$(MKDIR_P) src/pam-ssh-add
	@: > src/pam-ssh-add/$(am__dirstamp)
src/pam-ssh-add/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/pam-ssh-add/$(DEPDIR)
	@: > src/pam-ssh-add/$(DEPDIR)/$(am__dirstamp)
src/pam-ssh-add/libpam_ssh_add_a-pam-ssh-add.$(OBJEXT):  \
	src/pam-ssh-add/$(am__dirstamp) \
	src/pam-ssh-add/$(DEPDIR)/$(am__dirstamp)

libpam_ssh_add.a: $(libpam_ssh_add_a_OBJECTS) $(libpam_ssh_add_a_DEPENDENCIES) $(EXTRA_libpam_ssh_add_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libpam_ssh_add.a
	$(AM_V_AR)$(libpam_ssh_add_a_AR) libpam_ssh_add.a $(libpam_ssh_add_a_OBJECTS) $(libpam_ssh_add_a_LIBADD)
	$(AM_V_at)$(RANLIB) libpam_ssh_add.a
src/retest/$(am__dirstamp):
	@$(MKDIR_P) src/retest
	@: > src/retest/$(am__dirstamp)
src/retest/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/retest/$(DEPDIR)
	@: > src/retest/$(DEPDIR)/$(am__dirstamp)
src/retest/retest.$(OBJEXT): src/retest/$(am__dirstamp) \
	src/retest/$(DEPDIR)/$(am__dirstamp)

libretest.a: $(libretest_a_OBJECTS) $(libretest_a_DEPENDENCIES) $(EXTRA_libretest_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libretest.a
	$(AM_V_AR)$(libretest_a_AR) libretest.a $(libretest_a_OBJECTS) $(libretest_a_LIBADD)
	$(AM_V_at)$(RANLIB) libretest.a
src/websocket/$(am__dirstamp):
	@$(MKDIR_P) src/websocket
	@: > src/websocket/$(am__dirstamp)
src/websocket/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) src/websocket/$(DEPDIR)
	@: > src/websocket/$(DEPDIR)/$(am__dirstamp)
src/websocket/libwebsocket_a-websocket.$(OBJEXT):  \
	src/websocket/$(am__dirstamp) \
	src/websocket/$(DEPDIR)/$(am__dirstamp)
src/websocket/libwebsocket_a-websocketclient.$(OBJEXT):  \
	src/websocket/$(am__dirstamp) \
	src/websocket/$(DEPDIR)/$(am__dirstamp)
src/websocket/libwebsocket_a-websocketserver.$(OBJEXT):  \
	src/websocket/$(am__dirstamp) \
	src/websocket/$(DEPDIR)/$(am__dirstamp)
src/websocket/libwebsocket_a-websocketconnection.$(OBJEXT):  \
	src/websocket/$(am__dirstamp) \
	src/websocket/$(DEPDIR)/$(am__dirstamp)

libwebsocket.a: $(libwebsocket_a_OBJECTS) $(libwebsocket_a_DEPENDENCIES) $(EXTRA_libwebsocket_a_DEPENDENCIES) 
	$(AM_V_at)-rm -f libwebsocket.a
	$(AM_V_AR)$(libwebsocket_a_AR) libwebsocket.a $(libwebsocket_a_OBJECTS) $(libwebsocket_a_LIBADD)
	$(AM_V_at)$(RANLIB) libwebsocket.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(bindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(bindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-checkPROGRAMS:
	-test -z "$(check_PROGRAMS)" || rm -f $(check_PROGRAMS)
install-libexecPROGRAMS: $(libexec_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(libexec_PROGRAMS)'; test -n "$(libexecdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(libexecdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(libexecdir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(libexecdir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(libexecdir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-libexecPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(libexec_PROGRAMS)'; test -n "$(libexecdir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(libexecdir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(libexecdir)" && rm -f $$files

clean-libexecPROGRAMS:
	-test -z "$(libexec_PROGRAMS)" || rm -f $(libexec_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
install-sbinPROGRAMS: $(sbin_PROGRAMS)
	@$(NORMAL_INSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(sbindir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(sbindir)" || exit 1; \
	fi; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p \
	  ; then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' \
	    -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(sbindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(sbindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-sbinPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(sbin_PROGRAMS)'; test -n "$(sbindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' \
	`; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(sbindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(sbindir)" && rm -f $$files

clean-sbinPROGRAMS:
	-test -z "$(sbin_PROGRAMS)" || rm -f $(sbin_PROGRAMS)
src/bridge/cockpit_askpass-askpass.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

cockpit-askpass$(EXEEXT): $(cockpit_askpass_OBJECTS) $(cockpit_askpass_DEPENDENCIES) $(EXTRA_cockpit_askpass_DEPENDENCIES) 
	@rm -f cockpit-askpass$(EXEEXT)
	$(AM_V_CCLD)$(cockpit_askpass_LINK) $(cockpit_askpass_OBJECTS) $(cockpit_askpass_LDADD) $(LIBS)
src/bridge/cockpit_bridge-bridge.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

cockpit-bridge$(EXEEXT): $(cockpit_bridge_OBJECTS) $(cockpit_bridge_DEPENDENCIES) $(EXTRA_cockpit_bridge_DEPENDENCIES) 
	@rm -f cockpit-bridge$(EXEEXT)
	$(AM_V_CCLD)$(cockpit_bridge_LINK) $(cockpit_bridge_OBJECTS) $(cockpit_bridge_LDADD) $(LIBS)

@WITH_GOLANG_FALSE@cockpit-kube-auth$(EXEEXT): $(cockpit_kube_auth_OBJECTS) $(cockpit_kube_auth_DEPENDENCIES) $(EXTRA_cockpit_kube_auth_DEPENDENCIES) 
@WITH_GOLANG_FALSE@	@rm -f cockpit-kube-auth$(EXEEXT)
@WITH_GOLANG_FALSE@	$(AM_V_CCLD)$(LINK) $(cockpit_kube_auth_OBJECTS) $(cockpit_kube_auth_LDADD) $(LIBS)

@WITH_GOLANG_FALSE@cockpit-kube-launch$(EXEEXT): $(cockpit_kube_launch_OBJECTS) $(cockpit_kube_launch_DEPENDENCIES) $(EXTRA_cockpit_kube_launch_DEPENDENCIES) 
@WITH_GOLANG_FALSE@	@rm -f cockpit-kube-launch$(EXEEXT)
@WITH_GOLANG_FALSE@	$(AM_V_CCLD)$(LINK) $(cockpit_kube_launch_OBJECTS) $(cockpit_kube_launch_LDADD) $(LIBS)
src/bridge/cockpit_pcp-cockpitpcp.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

cockpit-pcp$(EXEEXT): $(cockpit_pcp_OBJECTS) $(cockpit_pcp_DEPENDENCIES) $(EXTRA_cockpit_pcp_DEPENDENCIES) 
	@rm -f cockpit-pcp$(EXEEXT)
	$(AM_V_CCLD)$(cockpit_pcp_LINK) $(cockpit_pcp_OBJECTS) $(cockpit_pcp_LDADD) $(LIBS)
src/common/cockpitauthorize.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/cockpitbase64.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/cockpitframe.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/cockpitmemory.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/ws/session.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)

cockpit-session$(EXEEXT): $(cockpit_session_OBJECTS) $(cockpit_session_DEPENDENCIES) $(EXTRA_cockpit_session_DEPENDENCIES) 
	@rm -f cockpit-session$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cockpit_session_OBJECTS) $(cockpit_session_LDADD) $(LIBS)
src/ssh/cockpit_ssh-ssh.$(OBJEXT): src/ssh/$(am__dirstamp) \
	src/ssh/$(DEPDIR)/$(am__dirstamp)

cockpit-ssh$(EXEEXT): $(cockpit_ssh_OBJECTS) $(cockpit_ssh_DEPENDENCIES) $(EXTRA_cockpit_ssh_DEPENDENCIES) 
	@rm -f cockpit-ssh$(EXEEXT)
	$(AM_V_CCLD)$(cockpit_ssh_LINK) $(cockpit_ssh_OBJECTS) $(cockpit_ssh_LDADD) $(LIBS)
src/bridge/cockpit_stub-stub.$(OBJEXT): src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

cockpit-stub$(EXEEXT): $(cockpit_stub_OBJECTS) $(cockpit_stub_DEPENDENCIES) $(EXTRA_cockpit_stub_DEPENDENCIES) 
	@rm -f cockpit-stub$(EXEEXT)
	$(AM_V_CCLD)$(cockpit_stub_LINK) $(cockpit_stub_OBJECTS) $(cockpit_stub_LDADD) $(LIBS)
src/ws/cockpit_ws-main.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)

cockpit-ws$(EXEEXT): $(cockpit_ws_OBJECTS) $(cockpit_ws_DEPENDENCIES) $(EXTRA_cockpit_ws_DEPENDENCIES) 
	@rm -f cockpit-ws$(EXEEXT)
	$(AM_V_CCLD)$(cockpit_ws_LINK) $(cockpit_ws_OBJECTS) $(cockpit_ws_LDADD) $(LIBS)
src/websocket/frob_websocket-frob-websocket.$(OBJEXT):  \
	src/websocket/$(am__dirstamp) \
	src/websocket/$(DEPDIR)/$(am__dirstamp)

frob-websocket$(EXEEXT): $(frob_websocket_OBJECTS) $(frob_websocket_DEPENDENCIES) $(EXTRA_frob_websocket_DEPENDENCIES) 
	@rm -f frob-websocket$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(frob_websocket_OBJECTS) $(frob_websocket_LDADD) $(LIBS)
src/ws/mock-auth-command.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)

mock-auth-command$(EXEEXT): $(mock_auth_command_OBJECTS) $(mock_auth_command_DEPENDENCIES) $(EXTRA_mock_auth_command_DEPENDENCIES) 
	@rm -f mock-auth-command$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(mock_auth_command_OBJECTS) $(mock_auth_command_LDADD) $(LIBS)
src/bridge/mock_bridge-mock-bridge.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

mock-bridge$(EXEEXT): $(mock_bridge_OBJECTS) $(mock_bridge_DEPENDENCIES) $(EXTRA_mock_bridge_DEPENDENCIES) 
	@rm -f mock-bridge$(EXEEXT)
	$(AM_V_CCLD)$(mock_bridge_LINK) $(mock_bridge_OBJECTS) $(mock_bridge_LDADD) $(LIBS)
src/ws/mock_echo-mock-echo.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)

mock-echo$(EXEEXT): $(mock_echo_OBJECTS) $(mock_echo_DEPENDENCIES) $(EXTRA_mock_echo_DEPENDENCIES) 
	@rm -f mock-echo$(EXEEXT)
	$(AM_V_CCLD)$(mock_echo_LINK) $(mock_echo_OBJECTS) $(mock_echo_LDADD) $(LIBS)
src/ws/mock-pam-conv-mod.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)
src/ssh/mock_sshd-mock-sshd.$(OBJEXT): src/ssh/$(am__dirstamp) \
	src/ssh/$(DEPDIR)/$(am__dirstamp)

mock-sshd$(EXEEXT): $(mock_sshd_OBJECTS) $(mock_sshd_DEPENDENCIES) $(EXTRA_mock_sshd_DEPENDENCIES) 
	@rm -f mock-sshd$(EXEEXT)
	$(AM_V_CCLD)$(mock_sshd_LINK) $(mock_sshd_OBJECTS) $(mock_sshd_LDADD) $(LIBS)
src/ws/remotectl-cockpitcertificate.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)
src/ws/remotectl-remotectl-certificate.$(OBJEXT):  \
	src/ws/$(am__dirstamp) src/ws/$(DEPDIR)/$(am__dirstamp)
src/ws/remotectl-remotectl.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)

remotectl$(EXEEXT): $(remotectl_OBJECTS) $(remotectl_DEPENDENCIES) $(EXTRA_remotectl_DEPENDENCIES) 
	@rm -f remotectl$(EXEEXT)
	$(AM_V_CCLD)$(remotectl_LINK) $(remotectl_OBJECTS) $(remotectl_LDADD) $(LIBS)
src/ws/test_auth-test-auth.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)
src/ws/test_auth-mock-auth.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)

test-auth$(EXEEXT): $(test_auth_OBJECTS) $(test_auth_DEPENDENCIES) $(EXTRA_test_auth_DEPENDENCIES) 
	@rm -f test-auth$(EXEEXT)
	$(AM_V_CCLD)$(test_auth_LINK) $(test_auth_OBJECTS) $(test_auth_LDADD) $(LIBS)
src/common/test_authorize-cockpitauthorize.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/test_authorize-cockpitbase64.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/test_authorize-cockpitmemory.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/test_authorize-test-authorize.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-authorize$(EXEEXT): $(test_authorize_OBJECTS) $(test_authorize_DEPENDENCIES) $(EXTRA_test_authorize_DEPENDENCIES) 
	@rm -f test-authorize$(EXEEXT)
	$(AM_V_CCLD)$(test_authorize_LINK) $(test_authorize_OBJECTS) $(test_authorize_LDADD) $(LIBS)
src/ws/test_authssh-test-authssh.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)
src/ws/test_authssh-mock-auth.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)

test-authssh$(EXEEXT): $(test_authssh_OBJECTS) $(test_authssh_DEPENDENCIES) $(EXTRA_test_authssh_DEPENDENCIES) 
	@rm -f test-authssh$(EXEEXT)
	$(AM_V_CCLD)$(test_authssh_LINK) $(test_authssh_OBJECTS) $(test_authssh_LDADD) $(LIBS)
src/common/test_base64-test-base64.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/test_base64-cockpitbase64.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-base64$(EXEEXT): $(test_base64_OBJECTS) $(test_base64_DEPENDENCIES) $(EXTRA_test_base64_DEPENDENCIES) 
	@rm -f test-base64$(EXEEXT)
	$(AM_V_CCLD)$(test_base64_LINK) $(test_base64_OBJECTS) $(test_base64_LDADD) $(LIBS)
src/bridge/test_bridge-test-bridge.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

test-bridge$(EXEEXT): $(test_bridge_OBJECTS) $(test_bridge_DEPENDENCIES) $(EXTRA_test_bridge_DEPENDENCIES) 
	@rm -f test-bridge$(EXEEXT)
	$(AM_V_CCLD)$(test_bridge_LINK) $(test_bridge_OBJECTS) $(test_bridge_LDADD) $(LIBS)
src/bridge/test_channel-test-channel.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/test_channel-mock-transport.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

test-channel$(EXEEXT): $(test_channel_OBJECTS) $(test_channel_DEPENDENCIES) $(EXTRA_test_channel_DEPENDENCIES) 
	@rm -f test-channel$(EXEEXT)
	$(AM_V_CCLD)$(test_channel_LINK) $(test_channel_OBJECTS) $(test_channel_LDADD) $(LIBS)
src/ws/test_channelresponse-test-channelresponse.$(OBJEXT):  \
	src/ws/$(am__dirstamp) src/ws/$(DEPDIR)/$(am__dirstamp)
src/ws/test_channelresponse-mock-auth.$(OBJEXT):  \
	src/ws/$(am__dirstamp) src/ws/$(DEPDIR)/$(am__dirstamp)
src/common/test_channelresponse-mock-io-stream.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-channelresponse$(EXEEXT): $(test_channelresponse_OBJECTS) $(test_channelresponse_DEPENDENCIES) $(EXTRA_test_channelresponse_DEPENDENCIES) 
	@rm -f test-channelresponse$(EXEEXT)
	$(AM_V_CCLD)$(test_channelresponse_LINK) $(test_channelresponse_OBJECTS) $(test_channelresponse_LDADD) $(LIBS)
src/ws/test_compat-test-compat.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)

test-compat$(EXEEXT): $(test_compat_OBJECTS) $(test_compat_DEPENDENCIES) $(EXTRA_test_compat_DEPENDENCIES) 
	@rm -f test-compat$(EXEEXT)
	$(AM_V_CCLD)$(test_compat_LINK) $(test_compat_OBJECTS) $(test_compat_LDADD) $(LIBS)
src/common/test_config-test-config.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-config$(EXEEXT): $(test_config_OBJECTS) $(test_config_DEPENDENCIES) $(EXTRA_test_config_DEPENDENCIES) 
	@rm -f test-config$(EXEEXT)
	$(AM_V_CCLD)$(test_config_LINK) $(test_config_OBJECTS) $(test_config_LDADD) $(LIBS)
src/bridge/test_connect-test-connect.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

test-connect$(EXEEXT): $(test_connect_OBJECTS) $(test_connect_DEPENDENCIES) $(EXTRA_test_connect_DEPENDENCIES) 
	@rm -f test-connect$(EXEEXT)
	$(AM_V_CCLD)$(test_connect_LINK) $(test_connect_OBJECTS) $(test_connect_LDADD) $(LIBS)
src/ws/test_creds-test-creds.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)

test-creds$(EXEEXT): $(test_creds_OBJECTS) $(test_creds_DEPENDENCIES) $(EXTRA_test_creds_DEPENDENCIES) 
	@rm -f test-creds$(EXEEXT)
	$(AM_V_CCLD)$(test_creds_LINK) $(test_creds_OBJECTS) $(test_creds_LDADD) $(LIBS)
src/bridge/test_dbus_meta-test-dbus-meta.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

test-dbus-meta$(EXEEXT): $(test_dbus_meta_OBJECTS) $(test_dbus_meta_DEPENDENCIES) $(EXTRA_test_dbus_meta_DEPENDENCIES) 
	@rm -f test-dbus-meta$(EXEEXT)
	$(AM_V_CCLD)$(test_dbus_meta_LINK) $(test_dbus_meta_OBJECTS) $(test_dbus_meta_LDADD) $(LIBS)
src/bridge/test_fs-test-fs.$(OBJEXT): src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/test_fs-mock-transport.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

test-fs$(EXEEXT): $(test_fs_OBJECTS) $(test_fs_DEPENDENCIES) $(EXTRA_test_fs_DEPENDENCIES) 
	@rm -f test-fs$(EXEEXT)
	$(AM_V_CCLD)$(test_fs_LINK) $(test_fs_OBJECTS) $(test_fs_LDADD) $(LIBS)
src/ws/test_handlers-test-handlers.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)
src/ws/test_handlers-mock-auth.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)
src/common/test_handlers-mock-io-stream.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-handlers$(EXEEXT): $(test_handlers_OBJECTS) $(test_handlers_DEPENDENCIES) $(EXTRA_test_handlers_DEPENDENCIES) 
	@rm -f test-handlers$(EXEEXT)
	$(AM_V_CCLD)$(test_handlers_LINK) $(test_handlers_OBJECTS) $(test_handlers_LDADD) $(LIBS)
src/common/test_hash-test-hash.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-hash$(EXEEXT): $(test_hash_OBJECTS) $(test_hash_DEPENDENCIES) $(EXTRA_test_hash_DEPENDENCIES) 
	@rm -f test-hash$(EXEEXT)
	$(AM_V_CCLD)$(test_hash_LINK) $(test_hash_OBJECTS) $(test_hash_LDADD) $(LIBS)
src/common/test_hex-test-hex.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-hex$(EXEEXT): $(test_hex_OBJECTS) $(test_hex_DEPENDENCIES) $(EXTRA_test_hex_DEPENDENCIES) 
	@rm -f test-hex$(EXEEXT)
	$(AM_V_CCLD)$(test_hex_LINK) $(test_hex_OBJECTS) $(test_hex_LDADD) $(LIBS)
src/bridge/test_httpstream-test-httpstream.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/test_httpstream-mock-transport.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

test-httpstream$(EXEEXT): $(test_httpstream_OBJECTS) $(test_httpstream_DEPENDENCIES) $(EXTRA_test_httpstream_DEPENDENCIES) 
	@rm -f test-httpstream$(EXEEXT)
	$(AM_V_CCLD)$(test_httpstream_LINK) $(test_httpstream_OBJECTS) $(test_httpstream_LDADD) $(LIBS)
src/common/test_json-test-json.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-json$(EXEEXT): $(test_json_OBJECTS) $(test_json_DEPENDENCIES) $(EXTRA_test_json_DEPENDENCIES) 
	@rm -f test-json$(EXEEXT)
	$(AM_V_CCLD)$(test_json_LINK) $(test_json_OBJECTS) $(test_json_LDADD) $(LIBS)
src/ws/test_kerberos-test-kerberos.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)

test-kerberos$(EXEEXT): $(test_kerberos_OBJECTS) $(test_kerberos_DEPENDENCIES) $(EXTRA_test_kerberos_DEPENDENCIES) 
	@rm -f test-kerberos$(EXEEXT)
	$(AM_V_CCLD)$(test_kerberos_LINK) $(test_kerberos_OBJECTS) $(test_kerberos_LDADD) $(LIBS)
src/common/test_knownhosts-test-knownhosts.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-knownhosts$(EXEEXT): $(test_knownhosts_OBJECTS) $(test_knownhosts_DEPENDENCIES) $(EXTRA_test_knownhosts_DEPENDENCIES) 
	@rm -f test-knownhosts$(EXEEXT)
	$(AM_V_CCLD)$(test_knownhosts_LINK) $(test_knownhosts_OBJECTS) $(test_knownhosts_LDADD) $(LIBS)
src/common/test_locale-test-locale.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-locale$(EXEEXT): $(test_locale_OBJECTS) $(test_locale_DEPENDENCIES) $(EXTRA_test_locale_DEPENDENCIES) 
	@rm -f test-locale$(EXEEXT)
	$(AM_V_CCLD)$(test_locale_LINK) $(test_locale_OBJECTS) $(test_locale_LDADD) $(LIBS)
src/bridge/test_metrics-test-metrics.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/test_metrics-mock-transport.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

test-metrics$(EXEEXT): $(test_metrics_OBJECTS) $(test_metrics_DEPENDENCIES) $(EXTRA_test_metrics_DEPENDENCIES) 
	@rm -f test-metrics$(EXEEXT)
	$(AM_V_CCLD)$(test_metrics_LINK) $(test_metrics_OBJECTS) $(test_metrics_LDADD) $(LIBS)
src/bridge/test_packages-test-packages.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/test_packages-mock-transport.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

test-packages$(EXEEXT): $(test_packages_OBJECTS) $(test_packages_DEPENDENCIES) $(EXTRA_test_packages_DEPENDENCIES) 
	@rm -f test-packages$(EXEEXT)
	$(AM_V_CCLD)$(test_packages_LINK) $(test_packages_OBJECTS) $(test_packages_LDADD) $(LIBS)
src/bridge/test_paths-test-paths.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

test-paths$(EXEEXT): $(test_paths_OBJECTS) $(test_paths_DEPENDENCIES) $(EXTRA_test_paths_DEPENDENCIES) 
	@rm -f test-paths$(EXEEXT)
	$(AM_V_CCLD)$(test_paths_LINK) $(test_paths_OBJECTS) $(test_paths_LDADD) $(LIBS)
src/bridge/test_pcp-test-pcp.$(OBJEXT): src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/test_pcp-mock-transport.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

test-pcp$(EXEEXT): $(test_pcp_OBJECTS) $(test_pcp_DEPENDENCIES) $(EXTRA_test_pcp_DEPENDENCIES) 
	@rm -f test-pcp$(EXEEXT)
	$(AM_V_CCLD)$(test_pcp_LINK) $(test_pcp_OBJECTS) $(test_pcp_LDADD) $(LIBS)
src/bridge/test_pcp_archives-test-pcp-archives.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/test_pcp_archives-mock-transport.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

test-pcp-archives$(EXEEXT): $(test_pcp_archives_OBJECTS) $(test_pcp_archives_DEPENDENCIES) $(EXTRA_test_pcp_archives_DEPENDENCIES) 
	@rm -f test-pcp-archives$(EXEEXT)
	$(AM_V_CCLD)$(test_pcp_archives_LINK) $(test_pcp_archives_OBJECTS) $(test_pcp_archives_LDADD) $(LIBS)
src/bridge/test_peer-test-peer.$(OBJEXT): src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/test_peer-mock-transport.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

test-peer$(EXEEXT): $(test_peer_OBJECTS) $(test_peer_DEPENDENCIES) $(EXTRA_test_peer_DEPENDENCIES) 
	@rm -f test-peer$(EXEEXT)
	$(AM_V_CCLD)$(test_peer_LINK) $(test_peer_OBJECTS) $(test_peer_LDADD) $(LIBS)
src/common/test_pipe-test-pipe.$(OBJEXT): src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-pipe$(EXEEXT): $(test_pipe_OBJECTS) $(test_pipe_DEPENDENCIES) $(EXTRA_test_pipe_DEPENDENCIES) 
	@rm -f test-pipe$(EXEEXT)
	$(AM_V_CCLD)$(test_pipe_LINK) $(test_pipe_OBJECTS) $(test_pipe_LDADD) $(LIBS)
src/bridge/test_pipe_channel-test-pipe-channel.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/test_pipe_channel-mock-transport.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

test-pipe-channel$(EXEEXT): $(test_pipe_channel_OBJECTS) $(test_pipe_channel_DEPENDENCIES) $(EXTRA_test_pipe_channel_DEPENDENCIES) 
	@rm -f test-pipe-channel$(EXEEXT)
	$(AM_V_CCLD)$(test_pipe_channel_LINK) $(test_pipe_channel_OBJECTS) $(test_pipe_channel_LDADD) $(LIBS)
src/bridge/test_process-test-process.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

test-process$(EXEEXT): $(test_process_OBJECTS) $(test_process_DEPENDENCIES) $(EXTRA_test_process_DEPENDENCIES) 
	@rm -f test-process$(EXEEXT)
	$(AM_V_CCLD)$(test_process_LINK) $(test_process_OBJECTS) $(test_process_LDADD) $(LIBS)
src/ws/test_remotectlcertificate-test-remotectlcertificate.$(OBJEXT):  \
	src/ws/$(am__dirstamp) src/ws/$(DEPDIR)/$(am__dirstamp)
src/ws/test_remotectlcertificate-cockpitcertificate.$(OBJEXT):  \
	src/ws/$(am__dirstamp) src/ws/$(DEPDIR)/$(am__dirstamp)
src/ws/test_remotectlcertificate-remotectl-certificate.$(OBJEXT):  \
	src/ws/$(am__dirstamp) src/ws/$(DEPDIR)/$(am__dirstamp)

test-remotectlcertificate$(EXEEXT): $(test_remotectlcertificate_OBJECTS) $(test_remotectlcertificate_DEPENDENCIES) $(EXTRA_test_remotectlcertificate_DEPENDENCIES) 
	@rm -f test-remotectlcertificate$(EXEEXT)
	$(AM_V_CCLD)$(test_remotectlcertificate_LINK) $(test_remotectlcertificate_OBJECTS) $(test_remotectlcertificate_LDADD) $(LIBS)
src/bridge/test_router-test-router.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/test_router-mock-channel.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/test_router-mock-transport.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

test-router$(EXEEXT): $(test_router_OBJECTS) $(test_router_DEPENDENCIES) $(EXTRA_test_router_DEPENDENCIES) 
	@rm -f test-router$(EXEEXT)
	$(AM_V_CCLD)$(test_router_LINK) $(test_router_OBJECTS) $(test_router_LDADD) $(LIBS)
src/bridge/test_rules-test-rules.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

test-rules$(EXEEXT): $(test_rules_OBJECTS) $(test_rules_DEPENDENCIES) $(EXTRA_test_rules_DEPENDENCIES) 
	@rm -f test-rules$(EXEEXT)
	$(AM_V_CCLD)$(test_rules_LINK) $(test_rules_OBJECTS) $(test_rules_LDADD) $(LIBS)
src/ws/test_server-test-server.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)

test-server$(EXEEXT): $(test_server_OBJECTS) $(test_server_DEPENDENCIES) $(EXTRA_test_server_DEPENDENCIES) 
	@rm -f test-server$(EXEEXT)
	$(AM_V_CCLD)$(test_server_LINK) $(test_server_OBJECTS) $(test_server_LDADD) $(LIBS)
src/bridge/test_setup-test-setup.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

test-setup$(EXEEXT): $(test_setup_OBJECTS) $(test_setup_DEPENDENCIES) $(EXTRA_test_setup_DEPENDENCIES) 
	@rm -f test-setup$(EXEEXT)
	$(AM_V_CCLD)$(test_setup_LINK) $(test_setup_OBJECTS) $(test_setup_LDADD) $(LIBS)
src/pam-ssh-add/test_ssh_add-test-ssh-add.$(OBJEXT):  \
	src/pam-ssh-add/$(am__dirstamp) \
	src/pam-ssh-add/$(DEPDIR)/$(am__dirstamp)

test-ssh-add$(EXEEXT): $(test_ssh_add_OBJECTS) $(test_ssh_add_DEPENDENCIES) $(EXTRA_test_ssh_add_DEPENDENCIES) 
	@rm -f test-ssh-add$(EXEEXT)
	$(AM_V_CCLD)$(test_ssh_add_LINK) $(test_ssh_add_OBJECTS) $(test_ssh_add_LDADD) $(LIBS)
src/ssh/test_sshbridge-test-sshbridge.$(OBJEXT):  \
	src/ssh/$(am__dirstamp) src/ssh/$(DEPDIR)/$(am__dirstamp)

test-sshbridge$(EXEEXT): $(test_sshbridge_OBJECTS) $(test_sshbridge_DEPENDENCIES) $(EXTRA_test_sshbridge_DEPENDENCIES) 
	@rm -f test-sshbridge$(EXEEXT)
	$(AM_V_CCLD)$(test_sshbridge_LINK) $(test_sshbridge_OBJECTS) $(test_sshbridge_LDADD) $(LIBS)
src/ssh/test_sshoptions-test-sshoptions.$(OBJEXT):  \
	src/ssh/$(am__dirstamp) src/ssh/$(DEPDIR)/$(am__dirstamp)

test-sshoptions$(EXEEXT): $(test_sshoptions_OBJECTS) $(test_sshoptions_DEPENDENCIES) $(EXTRA_test_sshoptions_DEPENDENCIES) 
	@rm -f test-sshoptions$(EXEEXT)
	$(AM_V_CCLD)$(test_sshoptions_LINK) $(test_sshoptions_OBJECTS) $(test_sshoptions_LDADD) $(LIBS)
src/bridge/test_stream-test-stream.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/common/test_stream-mock-io-stream.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-stream$(EXEEXT): $(test_stream_OBJECTS) $(test_stream_DEPENDENCIES) $(EXTRA_test_stream_DEPENDENCIES) 
	@rm -f test-stream$(EXEEXT)
	$(AM_V_CCLD)$(test_stream_LINK) $(test_stream_OBJECTS) $(test_stream_LDADD) $(LIBS)
src/common/test_system-test-system.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-system$(EXEEXT): $(test_system_OBJECTS) $(test_system_DEPENDENCIES) $(EXTRA_test_system_DEPENDENCIES) 
	@rm -f test-system$(EXEEXT)
	$(AM_V_CCLD)$(test_system_LINK) $(test_system_OBJECTS) $(test_system_LDADD) $(LIBS)
src/common/test_template-test-template.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-template$(EXEEXT): $(test_template_OBJECTS) $(test_template_DEPENDENCIES) $(EXTRA_test_template_DEPENDENCIES) 
	@rm -f test-template$(EXEEXT)
	$(AM_V_CCLD)$(test_template_LINK) $(test_template_OBJECTS) $(test_template_LDADD) $(LIBS)
src/common/test_transport-test-transport.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-transport$(EXEEXT): $(test_transport_OBJECTS) $(test_transport_DEPENDENCIES) $(EXTRA_test_transport_DEPENDENCIES) 
	@rm -f test-transport$(EXEEXT)
	$(AM_V_CCLD)$(test_transport_LINK) $(test_transport_OBJECTS) $(test_transport_LDADD) $(LIBS)
src/common/test_unicode-test-unicode.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-unicode$(EXEEXT): $(test_unicode_OBJECTS) $(test_unicode_DEPENDENCIES) $(EXTRA_test_unicode_DEPENDENCIES) 
	@rm -f test-unicode$(EXEEXT)
	$(AM_V_CCLD)$(test_unicode_LINK) $(test_unicode_OBJECTS) $(test_unicode_LDADD) $(LIBS)
src/common/test_unixsignal-test-unixsignal.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-unixsignal$(EXEEXT): $(test_unixsignal_OBJECTS) $(test_unixsignal_DEPENDENCIES) $(EXTRA_test_unixsignal_DEPENDENCIES) 
	@rm -f test-unixsignal$(EXEEXT)
	$(AM_V_CCLD)$(test_unixsignal_LINK) $(test_unixsignal_OBJECTS) $(test_unixsignal_LDADD) $(LIBS)
src/common/test_version-test-version.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-version$(EXEEXT): $(test_version_OBJECTS) $(test_version_DEPENDENCIES) $(EXTRA_test_version_DEPENDENCIES) 
	@rm -f test-version$(EXEEXT)
	$(AM_V_CCLD)$(test_version_LINK) $(test_version_OBJECTS) $(test_version_LDADD) $(LIBS)
src/common/test_webresponse-test-webresponse.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/test_webresponse-mock-io-stream.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)
src/common/test_webresponse-cockpitassets.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-webresponse$(EXEEXT): $(test_webresponse_OBJECTS) $(test_webresponse_DEPENDENCIES) $(EXTRA_test_webresponse_DEPENDENCIES) 
	@rm -f test-webresponse$(EXEEXT)
	$(AM_V_CCLD)$(test_webresponse_LINK) $(test_webresponse_OBJECTS) $(test_webresponse_LDADD) $(LIBS)
src/common/test_webserver-test-webserver.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-webserver$(EXEEXT): $(test_webserver_OBJECTS) $(test_webserver_DEPENDENCIES) $(EXTRA_test_webserver_DEPENDENCIES) 
	@rm -f test-webserver$(EXEEXT)
	$(AM_V_CCLD)$(test_webserver_LINK) $(test_webserver_OBJECTS) $(test_webserver_LDADD) $(LIBS)
src/ws/test_webservice-test-webservice.$(OBJEXT):  \
	src/ws/$(am__dirstamp) src/ws/$(DEPDIR)/$(am__dirstamp)
src/ws/test_webservice-mock-auth.$(OBJEXT): src/ws/$(am__dirstamp) \
	src/ws/$(DEPDIR)/$(am__dirstamp)
src/common/test_webservice-mock-io-stream.$(OBJEXT):  \
	src/common/$(am__dirstamp) \
	src/common/$(DEPDIR)/$(am__dirstamp)

test-webservice$(EXEEXT): $(test_webservice_OBJECTS) $(test_webservice_DEPENDENCIES) $(EXTRA_test_webservice_DEPENDENCIES) 
	@rm -f test-webservice$(EXEEXT)
	$(AM_V_CCLD)$(test_webservice_LINK) $(test_webservice_OBJECTS) $(test_webservice_LDADD) $(LIBS)
src/websocket/test_websocket-test-websocket.$(OBJEXT):  \
	src/websocket/$(am__dirstamp) \
	src/websocket/$(DEPDIR)/$(am__dirstamp)

test-websocket$(EXEEXT): $(test_websocket_OBJECTS) $(test_websocket_DEPENDENCIES) $(EXTRA_test_websocket_DEPENDENCIES) 
	@rm -f test-websocket$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(test_websocket_OBJECTS) $(test_websocket_LDADD) $(LIBS)
src/bridge/test_websocketstream-test-websocketstream.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)
src/bridge/test_websocketstream-mock-transport.$(OBJEXT):  \
	src/bridge/$(am__dirstamp) \
	src/bridge/$(DEPDIR)/$(am__dirstamp)

test-websocketstream$(EXEEXT): $(test_websocketstream_OBJECTS) $(test_websocketstream_DEPENDENCIES) $(EXTRA_test_websocketstream_DEPENDENCIES) 
	@rm -f test-websocketstream$(EXEEXT)
	$(AM_V_CCLD)$(test_websocketstream_LINK) $(test_websocketstream_OBJECTS) $(test_websocketstream_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f src/bridge/*.$(OBJEXT)
	-rm -f src/common/*.$(OBJEXT)
	-rm -f src/pam-ssh-add/*.$(OBJEXT)
	-rm -f src/retest/*.$(OBJEXT)
	-rm -f src/ssh/*.$(OBJEXT)
	-rm -f src/websocket/*.$(OBJEXT)
	-rm -f src/ws/*.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/cockpit_askpass-askpass.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/cockpit_bridge-bridge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/cockpit_pcp-cockpitpcp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/cockpit_stub-stub.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitblocksamples.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitcgroupsamples.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitconnect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitcpusamples.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbusmachines.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbussetup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbususer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdisksamples.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfslist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfsread.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfsreplace.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfswatch.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitinternalmetrics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmemorysamples.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmetrics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmountsamples.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitnetworksamples.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitpolkitagent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitsamples.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitblocksamples.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitcgroupsamples.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitchannel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitconnect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitcpusamples.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitdisksamples.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitinternalmetrics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmemorysamples.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmetrics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmountsamples.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitnetworksamples.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitpcpmetrics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitpeer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitrouter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitsamples.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitchannel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitconnect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbuscache.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusinternal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusjson.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusmeta.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusprocess.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusrules.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitechochannel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpithttpstream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitinteracttransport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitnullchannel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpackages.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpaths.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpeer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpipechannel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitrouter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitstream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitwebsocketstream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/mock_bridge-mock-bridge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_bridge-test-bridge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_channel-mock-transport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_channel-test-channel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_connect-test-connect.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_dbus_meta-test-dbus-meta.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_fs-mock-transport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_fs-test-fs.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_httpstream-mock-transport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_httpstream-test-httpstream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_metrics-mock-transport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_metrics-test-metrics.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_packages-mock-transport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_packages-test-packages.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_paths-test-paths.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_pcp-mock-transport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_pcp-test-pcp.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_pcp_archives-mock-transport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_pcp_archives-test-pcp-archives.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_peer-mock-transport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_peer-test-peer.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_pipe_channel-mock-transport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_pipe_channel-test-pipe-channel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_process-test-process.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_router-mock-channel.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_router-mock-transport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_router-test-router.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_rules-test-rules.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_setup-test-setup.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_stream-test-stream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_websocketstream-mock-transport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/bridge/$(DEPDIR)/test_websocketstream-test-websocketstream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/cockpitauthorize.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/cockpitbase64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/cockpitframe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/cockpitmemory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitassets.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitauthorize.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitbase64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitconf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpiterror.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitframe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpithash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpithex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitjson.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitknownhosts.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitlocale.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitlog.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitloopback.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitmachinesjson.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitmemory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitpipe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitpipetransport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitsystem.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpittemplate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpittest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpittransport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitunicode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitunixfd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitunixsignal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitversion.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebfilter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebinject.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebresponse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebserver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-mock-dbus-tests.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_common_a-mock-service.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/libcockpit_ssh_a-cockpitauthorize.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_authorize-cockpitauthorize.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_authorize-cockpitbase64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_authorize-cockpitmemory.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_authorize-test-authorize.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_base64-cockpitbase64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_base64-test-base64.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_channelresponse-mock-io-stream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_config-test-config.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_handlers-mock-io-stream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_hash-test-hash.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_hex-test-hex.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_json-test-json.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_knownhosts-test-knownhosts.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_locale-test-locale.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_pipe-test-pipe.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_stream-mock-io-stream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_system-test-system.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_template-test-template.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_transport-test-transport.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_unicode-test-unicode.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_unixsignal-test-unixsignal.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_version-test-version.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_webresponse-cockpitassets.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_webresponse-mock-io-stream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_webresponse-test-webresponse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_webserver-test-webserver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/common/$(DEPDIR)/test_webservice-mock-io-stream.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/pam-ssh-add/$(DEPDIR)/libpam_ssh_add_a-pam-ssh-add.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/pam-ssh-add/$(DEPDIR)/test_ssh_add-test-ssh-add.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/retest/$(DEPDIR)/retest.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ssh/$(DEPDIR)/cockpit_ssh-ssh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ssh/$(DEPDIR)/libcockpit_ssh_a-cockpitsshoptions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ssh/$(DEPDIR)/libcockpit_ssh_a-cockpitsshrelay.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ssh/$(DEPDIR)/mock_sshd-mock-sshd.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ssh/$(DEPDIR)/test_sshbridge-test-sshbridge.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ssh/$(DEPDIR)/test_sshoptions-test-sshoptions.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/websocket/$(DEPDIR)/frob_websocket-frob-websocket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/websocket/$(DEPDIR)/libwebsocket_a-websocket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/websocket/$(DEPDIR)/libwebsocket_a-websocketclient.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/websocket/$(DEPDIR)/libwebsocket_a-websocketconnection.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/websocket/$(DEPDIR)/libwebsocket_a-websocketserver.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/websocket/$(DEPDIR)/test_websocket-test-websocket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/cockpit_ws-main.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitauth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitbranding.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcertificate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitchannelresponse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitchannelsocket.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcompat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcreds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/libcockpit_ws_a-cockpithandlers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitwebservice.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/mock-auth-command.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/mock-pam-conv-mod.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/mock_echo-mock-echo.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/remotectl-cockpitcertificate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/remotectl-remotectl-certificate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/remotectl-remotectl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/session.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/test_auth-mock-auth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/test_auth-test-auth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/test_authssh-mock-auth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/test_authssh-test-authssh.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/test_channelresponse-mock-auth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/test_channelresponse-test-channelresponse.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/test_compat-test-compat.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/test_creds-test-creds.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/test_handlers-mock-auth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/test_handlers-test-handlers.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/test_kerberos-test-kerberos.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/test_remotectlcertificate-cockpitcertificate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/test_remotectlcertificate-remotectl-certificate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/test_remotectlcertificate-test-remotectlcertificate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/test_server-test-server.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/test_webservice-mock-auth.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@src/ws/$(DEPDIR)/test_webservice-test-webservice.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
@am__fastdepCC_TRUE@	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
@am__fastdepCC_TRUE@	$(am__mv) $$depbase.Tpo $$depbase.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

src/bridge/libcockpit_bridge_a-cockpitconnect.o: src/bridge/cockpitconnect.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitconnect.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitconnect.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitconnect.o `test -f 'src/bridge/cockpitconnect.c' || echo '$(srcdir)/'`src/bridge/cockpitconnect.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitconnect.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitconnect.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitconnect.c' object='src/bridge/libcockpit_bridge_a-cockpitconnect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitconnect.o `test -f 'src/bridge/cockpitconnect.c' || echo '$(srcdir)/'`src/bridge/cockpitconnect.c

src/bridge/libcockpit_bridge_a-cockpitconnect.obj: src/bridge/cockpitconnect.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitconnect.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitconnect.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitconnect.obj `if test -f 'src/bridge/cockpitconnect.c'; then $(CYGPATH_W) 'src/bridge/cockpitconnect.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitconnect.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitconnect.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitconnect.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitconnect.c' object='src/bridge/libcockpit_bridge_a-cockpitconnect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitconnect.obj `if test -f 'src/bridge/cockpitconnect.c'; then $(CYGPATH_W) 'src/bridge/cockpitconnect.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitconnect.c'; fi`

src/bridge/libcockpit_bridge_a-cockpitdbussetup.o: src/bridge/cockpitdbussetup.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitdbussetup.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbussetup.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitdbussetup.o `test -f 'src/bridge/cockpitdbussetup.c' || echo '$(srcdir)/'`src/bridge/cockpitdbussetup.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbussetup.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbussetup.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdbussetup.c' object='src/bridge/libcockpit_bridge_a-cockpitdbussetup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitdbussetup.o `test -f 'src/bridge/cockpitdbussetup.c' || echo '$(srcdir)/'`src/bridge/cockpitdbussetup.c

src/bridge/libcockpit_bridge_a-cockpitdbussetup.obj: src/bridge/cockpitdbussetup.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitdbussetup.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbussetup.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitdbussetup.obj `if test -f 'src/bridge/cockpitdbussetup.c'; then $(CYGPATH_W) 'src/bridge/cockpitdbussetup.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdbussetup.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbussetup.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbussetup.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdbussetup.c' object='src/bridge/libcockpit_bridge_a-cockpitdbussetup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitdbussetup.obj `if test -f 'src/bridge/cockpitdbussetup.c'; then $(CYGPATH_W) 'src/bridge/cockpitdbussetup.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdbussetup.c'; fi`

src/bridge/libcockpit_bridge_a-cockpitdbususer.o: src/bridge/cockpitdbususer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitdbususer.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbususer.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitdbususer.o `test -f 'src/bridge/cockpitdbususer.c' || echo '$(srcdir)/'`src/bridge/cockpitdbususer.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbususer.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbususer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdbususer.c' object='src/bridge/libcockpit_bridge_a-cockpitdbususer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitdbususer.o `test -f 'src/bridge/cockpitdbususer.c' || echo '$(srcdir)/'`src/bridge/cockpitdbususer.c

src/bridge/libcockpit_bridge_a-cockpitdbususer.obj: src/bridge/cockpitdbususer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitdbususer.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbususer.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitdbususer.obj `if test -f 'src/bridge/cockpitdbususer.c'; then $(CYGPATH_W) 'src/bridge/cockpitdbususer.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdbususer.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbususer.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbususer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdbususer.c' object='src/bridge/libcockpit_bridge_a-cockpitdbususer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitdbususer.obj `if test -f 'src/bridge/cockpitdbususer.c'; then $(CYGPATH_W) 'src/bridge/cockpitdbususer.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdbususer.c'; fi`

src/bridge/libcockpit_bridge_a-cockpitdbusmachines.o: src/bridge/cockpitdbusmachines.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitdbusmachines.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbusmachines.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitdbusmachines.o `test -f 'src/bridge/cockpitdbusmachines.c' || echo '$(srcdir)/'`src/bridge/cockpitdbusmachines.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbusmachines.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbusmachines.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdbusmachines.c' object='src/bridge/libcockpit_bridge_a-cockpitdbusmachines.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitdbusmachines.o `test -f 'src/bridge/cockpitdbusmachines.c' || echo '$(srcdir)/'`src/bridge/cockpitdbusmachines.c

src/bridge/libcockpit_bridge_a-cockpitdbusmachines.obj: src/bridge/cockpitdbusmachines.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitdbusmachines.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbusmachines.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitdbusmachines.obj `if test -f 'src/bridge/cockpitdbusmachines.c'; then $(CYGPATH_W) 'src/bridge/cockpitdbusmachines.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdbusmachines.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbusmachines.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdbusmachines.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdbusmachines.c' object='src/bridge/libcockpit_bridge_a-cockpitdbusmachines.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitdbusmachines.obj `if test -f 'src/bridge/cockpitdbusmachines.c'; then $(CYGPATH_W) 'src/bridge/cockpitdbusmachines.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdbusmachines.c'; fi`

src/bridge/libcockpit_bridge_a-cockpitpolkitagent.o: src/bridge/cockpitpolkitagent.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitpolkitagent.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitpolkitagent.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitpolkitagent.o `test -f 'src/bridge/cockpitpolkitagent.c' || echo '$(srcdir)/'`src/bridge/cockpitpolkitagent.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitpolkitagent.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitpolkitagent.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitpolkitagent.c' object='src/bridge/libcockpit_bridge_a-cockpitpolkitagent.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitpolkitagent.o `test -f 'src/bridge/cockpitpolkitagent.c' || echo '$(srcdir)/'`src/bridge/cockpitpolkitagent.c

src/bridge/libcockpit_bridge_a-cockpitpolkitagent.obj: src/bridge/cockpitpolkitagent.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitpolkitagent.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitpolkitagent.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitpolkitagent.obj `if test -f 'src/bridge/cockpitpolkitagent.c'; then $(CYGPATH_W) 'src/bridge/cockpitpolkitagent.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitpolkitagent.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitpolkitagent.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitpolkitagent.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitpolkitagent.c' object='src/bridge/libcockpit_bridge_a-cockpitpolkitagent.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitpolkitagent.obj `if test -f 'src/bridge/cockpitpolkitagent.c'; then $(CYGPATH_W) 'src/bridge/cockpitpolkitagent.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitpolkitagent.c'; fi`

src/bridge/libcockpit_bridge_a-cockpitfsread.o: src/bridge/cockpitfsread.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitfsread.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfsread.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitfsread.o `test -f 'src/bridge/cockpitfsread.c' || echo '$(srcdir)/'`src/bridge/cockpitfsread.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfsread.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfsread.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitfsread.c' object='src/bridge/libcockpit_bridge_a-cockpitfsread.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitfsread.o `test -f 'src/bridge/cockpitfsread.c' || echo '$(srcdir)/'`src/bridge/cockpitfsread.c

src/bridge/libcockpit_bridge_a-cockpitfsread.obj: src/bridge/cockpitfsread.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitfsread.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfsread.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitfsread.obj `if test -f 'src/bridge/cockpitfsread.c'; then $(CYGPATH_W) 'src/bridge/cockpitfsread.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitfsread.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfsread.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfsread.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitfsread.c' object='src/bridge/libcockpit_bridge_a-cockpitfsread.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitfsread.obj `if test -f 'src/bridge/cockpitfsread.c'; then $(CYGPATH_W) 'src/bridge/cockpitfsread.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitfsread.c'; fi`

src/bridge/libcockpit_bridge_a-cockpitfsreplace.o: src/bridge/cockpitfsreplace.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitfsreplace.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfsreplace.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitfsreplace.o `test -f 'src/bridge/cockpitfsreplace.c' || echo '$(srcdir)/'`src/bridge/cockpitfsreplace.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfsreplace.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfsreplace.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitfsreplace.c' object='src/bridge/libcockpit_bridge_a-cockpitfsreplace.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitfsreplace.o `test -f 'src/bridge/cockpitfsreplace.c' || echo '$(srcdir)/'`src/bridge/cockpitfsreplace.c

src/bridge/libcockpit_bridge_a-cockpitfsreplace.obj: src/bridge/cockpitfsreplace.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitfsreplace.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfsreplace.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitfsreplace.obj `if test -f 'src/bridge/cockpitfsreplace.c'; then $(CYGPATH_W) 'src/bridge/cockpitfsreplace.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitfsreplace.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfsreplace.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfsreplace.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitfsreplace.c' object='src/bridge/libcockpit_bridge_a-cockpitfsreplace.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitfsreplace.obj `if test -f 'src/bridge/cockpitfsreplace.c'; then $(CYGPATH_W) 'src/bridge/cockpitfsreplace.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitfsreplace.c'; fi`

src/bridge/libcockpit_bridge_a-cockpitfswatch.o: src/bridge/cockpitfswatch.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitfswatch.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfswatch.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitfswatch.o `test -f 'src/bridge/cockpitfswatch.c' || echo '$(srcdir)/'`src/bridge/cockpitfswatch.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfswatch.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfswatch.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitfswatch.c' object='src/bridge/libcockpit_bridge_a-cockpitfswatch.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitfswatch.o `test -f 'src/bridge/cockpitfswatch.c' || echo '$(srcdir)/'`src/bridge/cockpitfswatch.c

src/bridge/libcockpit_bridge_a-cockpitfswatch.obj: src/bridge/cockpitfswatch.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitfswatch.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfswatch.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitfswatch.obj `if test -f 'src/bridge/cockpitfswatch.c'; then $(CYGPATH_W) 'src/bridge/cockpitfswatch.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitfswatch.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfswatch.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfswatch.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitfswatch.c' object='src/bridge/libcockpit_bridge_a-cockpitfswatch.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitfswatch.obj `if test -f 'src/bridge/cockpitfswatch.c'; then $(CYGPATH_W) 'src/bridge/cockpitfswatch.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitfswatch.c'; fi`

src/bridge/libcockpit_bridge_a-cockpitfslist.o: src/bridge/cockpitfslist.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitfslist.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfslist.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitfslist.o `test -f 'src/bridge/cockpitfslist.c' || echo '$(srcdir)/'`src/bridge/cockpitfslist.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfslist.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfslist.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitfslist.c' object='src/bridge/libcockpit_bridge_a-cockpitfslist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitfslist.o `test -f 'src/bridge/cockpitfslist.c' || echo '$(srcdir)/'`src/bridge/cockpitfslist.c

src/bridge/libcockpit_bridge_a-cockpitfslist.obj: src/bridge/cockpitfslist.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitfslist.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfslist.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitfslist.obj `if test -f 'src/bridge/cockpitfslist.c'; then $(CYGPATH_W) 'src/bridge/cockpitfslist.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitfslist.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfslist.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitfslist.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitfslist.c' object='src/bridge/libcockpit_bridge_a-cockpitfslist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitfslist.obj `if test -f 'src/bridge/cockpitfslist.c'; then $(CYGPATH_W) 'src/bridge/cockpitfslist.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitfslist.c'; fi`

src/bridge/libcockpit_bridge_a-cockpitblocksamples.o: src/bridge/cockpitblocksamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitblocksamples.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitblocksamples.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitblocksamples.o `test -f 'src/bridge/cockpitblocksamples.c' || echo '$(srcdir)/'`src/bridge/cockpitblocksamples.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitblocksamples.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitblocksamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitblocksamples.c' object='src/bridge/libcockpit_bridge_a-cockpitblocksamples.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitblocksamples.o `test -f 'src/bridge/cockpitblocksamples.c' || echo '$(srcdir)/'`src/bridge/cockpitblocksamples.c

src/bridge/libcockpit_bridge_a-cockpitblocksamples.obj: src/bridge/cockpitblocksamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitblocksamples.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitblocksamples.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitblocksamples.obj `if test -f 'src/bridge/cockpitblocksamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitblocksamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitblocksamples.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitblocksamples.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitblocksamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitblocksamples.c' object='src/bridge/libcockpit_bridge_a-cockpitblocksamples.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitblocksamples.obj `if test -f 'src/bridge/cockpitblocksamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitblocksamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitblocksamples.c'; fi`

src/bridge/libcockpit_bridge_a-cockpitcgroupsamples.o: src/bridge/cockpitcgroupsamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitcgroupsamples.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitcgroupsamples.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitcgroupsamples.o `test -f 'src/bridge/cockpitcgroupsamples.c' || echo '$(srcdir)/'`src/bridge/cockpitcgroupsamples.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitcgroupsamples.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitcgroupsamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitcgroupsamples.c' object='src/bridge/libcockpit_bridge_a-cockpitcgroupsamples.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitcgroupsamples.o `test -f 'src/bridge/cockpitcgroupsamples.c' || echo '$(srcdir)/'`src/bridge/cockpitcgroupsamples.c

src/bridge/libcockpit_bridge_a-cockpitcgroupsamples.obj: src/bridge/cockpitcgroupsamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitcgroupsamples.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitcgroupsamples.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitcgroupsamples.obj `if test -f 'src/bridge/cockpitcgroupsamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitcgroupsamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitcgroupsamples.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitcgroupsamples.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitcgroupsamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitcgroupsamples.c' object='src/bridge/libcockpit_bridge_a-cockpitcgroupsamples.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitcgroupsamples.obj `if test -f 'src/bridge/cockpitcgroupsamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitcgroupsamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitcgroupsamples.c'; fi`

src/bridge/libcockpit_bridge_a-cockpitcpusamples.o: src/bridge/cockpitcpusamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitcpusamples.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitcpusamples.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitcpusamples.o `test -f 'src/bridge/cockpitcpusamples.c' || echo '$(srcdir)/'`src/bridge/cockpitcpusamples.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitcpusamples.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitcpusamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitcpusamples.c' object='src/bridge/libcockpit_bridge_a-cockpitcpusamples.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitcpusamples.o `test -f 'src/bridge/cockpitcpusamples.c' || echo '$(srcdir)/'`src/bridge/cockpitcpusamples.c

src/bridge/libcockpit_bridge_a-cockpitcpusamples.obj: src/bridge/cockpitcpusamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitcpusamples.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitcpusamples.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitcpusamples.obj `if test -f 'src/bridge/cockpitcpusamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitcpusamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitcpusamples.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitcpusamples.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitcpusamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitcpusamples.c' object='src/bridge/libcockpit_bridge_a-cockpitcpusamples.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitcpusamples.obj `if test -f 'src/bridge/cockpitcpusamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitcpusamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitcpusamples.c'; fi`

src/bridge/libcockpit_bridge_a-cockpitdisksamples.o: src/bridge/cockpitdisksamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitdisksamples.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdisksamples.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitdisksamples.o `test -f 'src/bridge/cockpitdisksamples.c' || echo '$(srcdir)/'`src/bridge/cockpitdisksamples.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdisksamples.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdisksamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdisksamples.c' object='src/bridge/libcockpit_bridge_a-cockpitdisksamples.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitdisksamples.o `test -f 'src/bridge/cockpitdisksamples.c' || echo '$(srcdir)/'`src/bridge/cockpitdisksamples.c

src/bridge/libcockpit_bridge_a-cockpitdisksamples.obj: src/bridge/cockpitdisksamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitdisksamples.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdisksamples.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitdisksamples.obj `if test -f 'src/bridge/cockpitdisksamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitdisksamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdisksamples.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdisksamples.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitdisksamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdisksamples.c' object='src/bridge/libcockpit_bridge_a-cockpitdisksamples.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitdisksamples.obj `if test -f 'src/bridge/cockpitdisksamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitdisksamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdisksamples.c'; fi`

src/bridge/libcockpit_bridge_a-cockpitinternalmetrics.o: src/bridge/cockpitinternalmetrics.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitinternalmetrics.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitinternalmetrics.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitinternalmetrics.o `test -f 'src/bridge/cockpitinternalmetrics.c' || echo '$(srcdir)/'`src/bridge/cockpitinternalmetrics.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitinternalmetrics.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitinternalmetrics.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitinternalmetrics.c' object='src/bridge/libcockpit_bridge_a-cockpitinternalmetrics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitinternalmetrics.o `test -f 'src/bridge/cockpitinternalmetrics.c' || echo '$(srcdir)/'`src/bridge/cockpitinternalmetrics.c

src/bridge/libcockpit_bridge_a-cockpitinternalmetrics.obj: src/bridge/cockpitinternalmetrics.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitinternalmetrics.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitinternalmetrics.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitinternalmetrics.obj `if test -f 'src/bridge/cockpitinternalmetrics.c'; then $(CYGPATH_W) 'src/bridge/cockpitinternalmetrics.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitinternalmetrics.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitinternalmetrics.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitinternalmetrics.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitinternalmetrics.c' object='src/bridge/libcockpit_bridge_a-cockpitinternalmetrics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitinternalmetrics.obj `if test -f 'src/bridge/cockpitinternalmetrics.c'; then $(CYGPATH_W) 'src/bridge/cockpitinternalmetrics.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitinternalmetrics.c'; fi`

src/bridge/libcockpit_bridge_a-cockpitmemorysamples.o: src/bridge/cockpitmemorysamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitmemorysamples.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmemorysamples.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitmemorysamples.o `test -f 'src/bridge/cockpitmemorysamples.c' || echo '$(srcdir)/'`src/bridge/cockpitmemorysamples.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmemorysamples.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmemorysamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitmemorysamples.c' object='src/bridge/libcockpit_bridge_a-cockpitmemorysamples.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitmemorysamples.o `test -f 'src/bridge/cockpitmemorysamples.c' || echo '$(srcdir)/'`src/bridge/cockpitmemorysamples.c

src/bridge/libcockpit_bridge_a-cockpitmemorysamples.obj: src/bridge/cockpitmemorysamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitmemorysamples.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmemorysamples.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitmemorysamples.obj `if test -f 'src/bridge/cockpitmemorysamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitmemorysamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitmemorysamples.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmemorysamples.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmemorysamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitmemorysamples.c' object='src/bridge/libcockpit_bridge_a-cockpitmemorysamples.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitmemorysamples.obj `if test -f 'src/bridge/cockpitmemorysamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitmemorysamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitmemorysamples.c'; fi`

src/bridge/libcockpit_bridge_a-cockpitmetrics.o: src/bridge/cockpitmetrics.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitmetrics.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmetrics.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitmetrics.o `test -f 'src/bridge/cockpitmetrics.c' || echo '$(srcdir)/'`src/bridge/cockpitmetrics.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmetrics.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmetrics.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitmetrics.c' object='src/bridge/libcockpit_bridge_a-cockpitmetrics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitmetrics.o `test -f 'src/bridge/cockpitmetrics.c' || echo '$(srcdir)/'`src/bridge/cockpitmetrics.c

src/bridge/libcockpit_bridge_a-cockpitmetrics.obj: src/bridge/cockpitmetrics.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitmetrics.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmetrics.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitmetrics.obj `if test -f 'src/bridge/cockpitmetrics.c'; then $(CYGPATH_W) 'src/bridge/cockpitmetrics.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitmetrics.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmetrics.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmetrics.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitmetrics.c' object='src/bridge/libcockpit_bridge_a-cockpitmetrics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitmetrics.obj `if test -f 'src/bridge/cockpitmetrics.c'; then $(CYGPATH_W) 'src/bridge/cockpitmetrics.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitmetrics.c'; fi`

src/bridge/libcockpit_bridge_a-cockpitmountsamples.o: src/bridge/cockpitmountsamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitmountsamples.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmountsamples.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitmountsamples.o `test -f 'src/bridge/cockpitmountsamples.c' || echo '$(srcdir)/'`src/bridge/cockpitmountsamples.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmountsamples.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmountsamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitmountsamples.c' object='src/bridge/libcockpit_bridge_a-cockpitmountsamples.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitmountsamples.o `test -f 'src/bridge/cockpitmountsamples.c' || echo '$(srcdir)/'`src/bridge/cockpitmountsamples.c

src/bridge/libcockpit_bridge_a-cockpitmountsamples.obj: src/bridge/cockpitmountsamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitmountsamples.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmountsamples.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitmountsamples.obj `if test -f 'src/bridge/cockpitmountsamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitmountsamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitmountsamples.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmountsamples.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitmountsamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitmountsamples.c' object='src/bridge/libcockpit_bridge_a-cockpitmountsamples.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitmountsamples.obj `if test -f 'src/bridge/cockpitmountsamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitmountsamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitmountsamples.c'; fi`

src/bridge/libcockpit_bridge_a-cockpitnetworksamples.o: src/bridge/cockpitnetworksamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitnetworksamples.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitnetworksamples.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitnetworksamples.o `test -f 'src/bridge/cockpitnetworksamples.c' || echo '$(srcdir)/'`src/bridge/cockpitnetworksamples.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitnetworksamples.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitnetworksamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitnetworksamples.c' object='src/bridge/libcockpit_bridge_a-cockpitnetworksamples.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitnetworksamples.o `test -f 'src/bridge/cockpitnetworksamples.c' || echo '$(srcdir)/'`src/bridge/cockpitnetworksamples.c

src/bridge/libcockpit_bridge_a-cockpitnetworksamples.obj: src/bridge/cockpitnetworksamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitnetworksamples.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitnetworksamples.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitnetworksamples.obj `if test -f 'src/bridge/cockpitnetworksamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitnetworksamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitnetworksamples.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitnetworksamples.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitnetworksamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitnetworksamples.c' object='src/bridge/libcockpit_bridge_a-cockpitnetworksamples.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitnetworksamples.obj `if test -f 'src/bridge/cockpitnetworksamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitnetworksamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitnetworksamples.c'; fi`

src/bridge/libcockpit_bridge_a-cockpitsamples.o: src/bridge/cockpitsamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitsamples.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitsamples.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitsamples.o `test -f 'src/bridge/cockpitsamples.c' || echo '$(srcdir)/'`src/bridge/cockpitsamples.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitsamples.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitsamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitsamples.c' object='src/bridge/libcockpit_bridge_a-cockpitsamples.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitsamples.o `test -f 'src/bridge/cockpitsamples.c' || echo '$(srcdir)/'`src/bridge/cockpitsamples.c

src/bridge/libcockpit_bridge_a-cockpitsamples.obj: src/bridge/cockpitsamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_bridge_a-cockpitsamples.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitsamples.Tpo -c -o src/bridge/libcockpit_bridge_a-cockpitsamples.obj `if test -f 'src/bridge/cockpitsamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitsamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitsamples.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitsamples.Tpo src/bridge/$(DEPDIR)/libcockpit_bridge_a-cockpitsamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitsamples.c' object='src/bridge/libcockpit_bridge_a-cockpitsamples.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_bridge_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_bridge_a-cockpitsamples.obj `if test -f 'src/bridge/cockpitsamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitsamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitsamples.c'; fi`

src/common/libcockpit_common_a-cockpitauthorize.o: src/common/cockpitauthorize.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitauthorize.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitauthorize.Tpo -c -o src/common/libcockpit_common_a-cockpitauthorize.o `test -f 'src/common/cockpitauthorize.c' || echo '$(srcdir)/'`src/common/cockpitauthorize.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitauthorize.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitauthorize.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitauthorize.c' object='src/common/libcockpit_common_a-cockpitauthorize.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitauthorize.o `test -f 'src/common/cockpitauthorize.c' || echo '$(srcdir)/'`src/common/cockpitauthorize.c

src/common/libcockpit_common_a-cockpitauthorize.obj: src/common/cockpitauthorize.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitauthorize.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitauthorize.Tpo -c -o src/common/libcockpit_common_a-cockpitauthorize.obj `if test -f 'src/common/cockpitauthorize.c'; then $(CYGPATH_W) 'src/common/cockpitauthorize.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitauthorize.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitauthorize.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitauthorize.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitauthorize.c' object='src/common/libcockpit_common_a-cockpitauthorize.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitauthorize.obj `if test -f 'src/common/cockpitauthorize.c'; then $(CYGPATH_W) 'src/common/cockpitauthorize.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitauthorize.c'; fi`

src/common/libcockpit_common_a-cockpitbase64.o: src/common/cockpitbase64.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitbase64.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitbase64.Tpo -c -o src/common/libcockpit_common_a-cockpitbase64.o `test -f 'src/common/cockpitbase64.c' || echo '$(srcdir)/'`src/common/cockpitbase64.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitbase64.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitbase64.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitbase64.c' object='src/common/libcockpit_common_a-cockpitbase64.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitbase64.o `test -f 'src/common/cockpitbase64.c' || echo '$(srcdir)/'`src/common/cockpitbase64.c

src/common/libcockpit_common_a-cockpitbase64.obj: src/common/cockpitbase64.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitbase64.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitbase64.Tpo -c -o src/common/libcockpit_common_a-cockpitbase64.obj `if test -f 'src/common/cockpitbase64.c'; then $(CYGPATH_W) 'src/common/cockpitbase64.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitbase64.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitbase64.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitbase64.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitbase64.c' object='src/common/libcockpit_common_a-cockpitbase64.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitbase64.obj `if test -f 'src/common/cockpitbase64.c'; then $(CYGPATH_W) 'src/common/cockpitbase64.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitbase64.c'; fi`

src/common/libcockpit_common_a-cockpiterror.o: src/common/cockpiterror.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpiterror.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpiterror.Tpo -c -o src/common/libcockpit_common_a-cockpiterror.o `test -f 'src/common/cockpiterror.c' || echo '$(srcdir)/'`src/common/cockpiterror.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpiterror.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpiterror.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpiterror.c' object='src/common/libcockpit_common_a-cockpiterror.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpiterror.o `test -f 'src/common/cockpiterror.c' || echo '$(srcdir)/'`src/common/cockpiterror.c

src/common/libcockpit_common_a-cockpiterror.obj: src/common/cockpiterror.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpiterror.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpiterror.Tpo -c -o src/common/libcockpit_common_a-cockpiterror.obj `if test -f 'src/common/cockpiterror.c'; then $(CYGPATH_W) 'src/common/cockpiterror.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpiterror.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpiterror.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpiterror.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpiterror.c' object='src/common/libcockpit_common_a-cockpiterror.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpiterror.obj `if test -f 'src/common/cockpiterror.c'; then $(CYGPATH_W) 'src/common/cockpiterror.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpiterror.c'; fi`

src/common/libcockpit_common_a-cockpitframe.o: src/common/cockpitframe.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitframe.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitframe.Tpo -c -o src/common/libcockpit_common_a-cockpitframe.o `test -f 'src/common/cockpitframe.c' || echo '$(srcdir)/'`src/common/cockpitframe.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitframe.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitframe.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitframe.c' object='src/common/libcockpit_common_a-cockpitframe.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitframe.o `test -f 'src/common/cockpitframe.c' || echo '$(srcdir)/'`src/common/cockpitframe.c

src/common/libcockpit_common_a-cockpitframe.obj: src/common/cockpitframe.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitframe.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitframe.Tpo -c -o src/common/libcockpit_common_a-cockpitframe.obj `if test -f 'src/common/cockpitframe.c'; then $(CYGPATH_W) 'src/common/cockpitframe.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitframe.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitframe.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitframe.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitframe.c' object='src/common/libcockpit_common_a-cockpitframe.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitframe.obj `if test -f 'src/common/cockpitframe.c'; then $(CYGPATH_W) 'src/common/cockpitframe.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitframe.c'; fi`

src/common/libcockpit_common_a-cockpithash.o: src/common/cockpithash.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpithash.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpithash.Tpo -c -o src/common/libcockpit_common_a-cockpithash.o `test -f 'src/common/cockpithash.c' || echo '$(srcdir)/'`src/common/cockpithash.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpithash.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpithash.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpithash.c' object='src/common/libcockpit_common_a-cockpithash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpithash.o `test -f 'src/common/cockpithash.c' || echo '$(srcdir)/'`src/common/cockpithash.c

src/common/libcockpit_common_a-cockpithash.obj: src/common/cockpithash.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpithash.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpithash.Tpo -c -o src/common/libcockpit_common_a-cockpithash.obj `if test -f 'src/common/cockpithash.c'; then $(CYGPATH_W) 'src/common/cockpithash.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpithash.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpithash.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpithash.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpithash.c' object='src/common/libcockpit_common_a-cockpithash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpithash.obj `if test -f 'src/common/cockpithash.c'; then $(CYGPATH_W) 'src/common/cockpithash.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpithash.c'; fi`

src/common/libcockpit_common_a-cockpithex.o: src/common/cockpithex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpithex.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpithex.Tpo -c -o src/common/libcockpit_common_a-cockpithex.o `test -f 'src/common/cockpithex.c' || echo '$(srcdir)/'`src/common/cockpithex.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpithex.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpithex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpithex.c' object='src/common/libcockpit_common_a-cockpithex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpithex.o `test -f 'src/common/cockpithex.c' || echo '$(srcdir)/'`src/common/cockpithex.c

src/common/libcockpit_common_a-cockpithex.obj: src/common/cockpithex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpithex.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpithex.Tpo -c -o src/common/libcockpit_common_a-cockpithex.obj `if test -f 'src/common/cockpithex.c'; then $(CYGPATH_W) 'src/common/cockpithex.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpithex.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpithex.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpithex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpithex.c' object='src/common/libcockpit_common_a-cockpithex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpithex.obj `if test -f 'src/common/cockpithex.c'; then $(CYGPATH_W) 'src/common/cockpithex.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpithex.c'; fi`

src/common/libcockpit_common_a-cockpitjson.o: src/common/cockpitjson.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitjson.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitjson.Tpo -c -o src/common/libcockpit_common_a-cockpitjson.o `test -f 'src/common/cockpitjson.c' || echo '$(srcdir)/'`src/common/cockpitjson.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitjson.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitjson.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitjson.c' object='src/common/libcockpit_common_a-cockpitjson.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitjson.o `test -f 'src/common/cockpitjson.c' || echo '$(srcdir)/'`src/common/cockpitjson.c

src/common/libcockpit_common_a-cockpitjson.obj: src/common/cockpitjson.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitjson.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitjson.Tpo -c -o src/common/libcockpit_common_a-cockpitjson.obj `if test -f 'src/common/cockpitjson.c'; then $(CYGPATH_W) 'src/common/cockpitjson.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitjson.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitjson.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitjson.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitjson.c' object='src/common/libcockpit_common_a-cockpitjson.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitjson.obj `if test -f 'src/common/cockpitjson.c'; then $(CYGPATH_W) 'src/common/cockpitjson.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitjson.c'; fi`

src/common/libcockpit_common_a-cockpitknownhosts.o: src/common/cockpitknownhosts.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitknownhosts.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitknownhosts.Tpo -c -o src/common/libcockpit_common_a-cockpitknownhosts.o `test -f 'src/common/cockpitknownhosts.c' || echo '$(srcdir)/'`src/common/cockpitknownhosts.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitknownhosts.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitknownhosts.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitknownhosts.c' object='src/common/libcockpit_common_a-cockpitknownhosts.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitknownhosts.o `test -f 'src/common/cockpitknownhosts.c' || echo '$(srcdir)/'`src/common/cockpitknownhosts.c

src/common/libcockpit_common_a-cockpitknownhosts.obj: src/common/cockpitknownhosts.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitknownhosts.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitknownhosts.Tpo -c -o src/common/libcockpit_common_a-cockpitknownhosts.obj `if test -f 'src/common/cockpitknownhosts.c'; then $(CYGPATH_W) 'src/common/cockpitknownhosts.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitknownhosts.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitknownhosts.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitknownhosts.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitknownhosts.c' object='src/common/libcockpit_common_a-cockpitknownhosts.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitknownhosts.obj `if test -f 'src/common/cockpitknownhosts.c'; then $(CYGPATH_W) 'src/common/cockpitknownhosts.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitknownhosts.c'; fi`

src/common/libcockpit_common_a-cockpitlog.o: src/common/cockpitlog.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitlog.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitlog.Tpo -c -o src/common/libcockpit_common_a-cockpitlog.o `test -f 'src/common/cockpitlog.c' || echo '$(srcdir)/'`src/common/cockpitlog.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitlog.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitlog.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitlog.c' object='src/common/libcockpit_common_a-cockpitlog.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitlog.o `test -f 'src/common/cockpitlog.c' || echo '$(srcdir)/'`src/common/cockpitlog.c

src/common/libcockpit_common_a-cockpitlog.obj: src/common/cockpitlog.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitlog.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitlog.Tpo -c -o src/common/libcockpit_common_a-cockpitlog.obj `if test -f 'src/common/cockpitlog.c'; then $(CYGPATH_W) 'src/common/cockpitlog.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitlog.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitlog.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitlog.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitlog.c' object='src/common/libcockpit_common_a-cockpitlog.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitlog.obj `if test -f 'src/common/cockpitlog.c'; then $(CYGPATH_W) 'src/common/cockpitlog.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitlog.c'; fi`

src/common/libcockpit_common_a-cockpitlocale.o: src/common/cockpitlocale.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitlocale.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitlocale.Tpo -c -o src/common/libcockpit_common_a-cockpitlocale.o `test -f 'src/common/cockpitlocale.c' || echo '$(srcdir)/'`src/common/cockpitlocale.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitlocale.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitlocale.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitlocale.c' object='src/common/libcockpit_common_a-cockpitlocale.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitlocale.o `test -f 'src/common/cockpitlocale.c' || echo '$(srcdir)/'`src/common/cockpitlocale.c

src/common/libcockpit_common_a-cockpitlocale.obj: src/common/cockpitlocale.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitlocale.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitlocale.Tpo -c -o src/common/libcockpit_common_a-cockpitlocale.obj `if test -f 'src/common/cockpitlocale.c'; then $(CYGPATH_W) 'src/common/cockpitlocale.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitlocale.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitlocale.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitlocale.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitlocale.c' object='src/common/libcockpit_common_a-cockpitlocale.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitlocale.obj `if test -f 'src/common/cockpitlocale.c'; then $(CYGPATH_W) 'src/common/cockpitlocale.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitlocale.c'; fi`

src/common/libcockpit_common_a-cockpitloopback.o: src/common/cockpitloopback.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitloopback.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitloopback.Tpo -c -o src/common/libcockpit_common_a-cockpitloopback.o `test -f 'src/common/cockpitloopback.c' || echo '$(srcdir)/'`src/common/cockpitloopback.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitloopback.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitloopback.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitloopback.c' object='src/common/libcockpit_common_a-cockpitloopback.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitloopback.o `test -f 'src/common/cockpitloopback.c' || echo '$(srcdir)/'`src/common/cockpitloopback.c

src/common/libcockpit_common_a-cockpitloopback.obj: src/common/cockpitloopback.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitloopback.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitloopback.Tpo -c -o src/common/libcockpit_common_a-cockpitloopback.obj `if test -f 'src/common/cockpitloopback.c'; then $(CYGPATH_W) 'src/common/cockpitloopback.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitloopback.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitloopback.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitloopback.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitloopback.c' object='src/common/libcockpit_common_a-cockpitloopback.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitloopback.obj `if test -f 'src/common/cockpitloopback.c'; then $(CYGPATH_W) 'src/common/cockpitloopback.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitloopback.c'; fi`

src/common/libcockpit_common_a-cockpitmachinesjson.o: src/common/cockpitmachinesjson.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitmachinesjson.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitmachinesjson.Tpo -c -o src/common/libcockpit_common_a-cockpitmachinesjson.o `test -f 'src/common/cockpitmachinesjson.c' || echo '$(srcdir)/'`src/common/cockpitmachinesjson.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitmachinesjson.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitmachinesjson.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitmachinesjson.c' object='src/common/libcockpit_common_a-cockpitmachinesjson.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitmachinesjson.o `test -f 'src/common/cockpitmachinesjson.c' || echo '$(srcdir)/'`src/common/cockpitmachinesjson.c

src/common/libcockpit_common_a-cockpitmachinesjson.obj: src/common/cockpitmachinesjson.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitmachinesjson.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitmachinesjson.Tpo -c -o src/common/libcockpit_common_a-cockpitmachinesjson.obj `if test -f 'src/common/cockpitmachinesjson.c'; then $(CYGPATH_W) 'src/common/cockpitmachinesjson.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitmachinesjson.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitmachinesjson.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitmachinesjson.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitmachinesjson.c' object='src/common/libcockpit_common_a-cockpitmachinesjson.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitmachinesjson.obj `if test -f 'src/common/cockpitmachinesjson.c'; then $(CYGPATH_W) 'src/common/cockpitmachinesjson.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitmachinesjson.c'; fi`

src/common/libcockpit_common_a-cockpitmemory.o: src/common/cockpitmemory.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitmemory.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitmemory.Tpo -c -o src/common/libcockpit_common_a-cockpitmemory.o `test -f 'src/common/cockpitmemory.c' || echo '$(srcdir)/'`src/common/cockpitmemory.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitmemory.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitmemory.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitmemory.c' object='src/common/libcockpit_common_a-cockpitmemory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitmemory.o `test -f 'src/common/cockpitmemory.c' || echo '$(srcdir)/'`src/common/cockpitmemory.c

src/common/libcockpit_common_a-cockpitmemory.obj: src/common/cockpitmemory.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitmemory.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitmemory.Tpo -c -o src/common/libcockpit_common_a-cockpitmemory.obj `if test -f 'src/common/cockpitmemory.c'; then $(CYGPATH_W) 'src/common/cockpitmemory.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitmemory.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitmemory.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitmemory.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitmemory.c' object='src/common/libcockpit_common_a-cockpitmemory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitmemory.obj `if test -f 'src/common/cockpitmemory.c'; then $(CYGPATH_W) 'src/common/cockpitmemory.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitmemory.c'; fi`

src/common/libcockpit_common_a-cockpitpipe.o: src/common/cockpitpipe.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitpipe.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitpipe.Tpo -c -o src/common/libcockpit_common_a-cockpitpipe.o `test -f 'src/common/cockpitpipe.c' || echo '$(srcdir)/'`src/common/cockpitpipe.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitpipe.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitpipe.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitpipe.c' object='src/common/libcockpit_common_a-cockpitpipe.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitpipe.o `test -f 'src/common/cockpitpipe.c' || echo '$(srcdir)/'`src/common/cockpitpipe.c

src/common/libcockpit_common_a-cockpitpipe.obj: src/common/cockpitpipe.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitpipe.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitpipe.Tpo -c -o src/common/libcockpit_common_a-cockpitpipe.obj `if test -f 'src/common/cockpitpipe.c'; then $(CYGPATH_W) 'src/common/cockpitpipe.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitpipe.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitpipe.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitpipe.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitpipe.c' object='src/common/libcockpit_common_a-cockpitpipe.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitpipe.obj `if test -f 'src/common/cockpitpipe.c'; then $(CYGPATH_W) 'src/common/cockpitpipe.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitpipe.c'; fi`

src/common/libcockpit_common_a-cockpitpipetransport.o: src/common/cockpitpipetransport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitpipetransport.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitpipetransport.Tpo -c -o src/common/libcockpit_common_a-cockpitpipetransport.o `test -f 'src/common/cockpitpipetransport.c' || echo '$(srcdir)/'`src/common/cockpitpipetransport.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitpipetransport.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitpipetransport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitpipetransport.c' object='src/common/libcockpit_common_a-cockpitpipetransport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitpipetransport.o `test -f 'src/common/cockpitpipetransport.c' || echo '$(srcdir)/'`src/common/cockpitpipetransport.c

src/common/libcockpit_common_a-cockpitpipetransport.obj: src/common/cockpitpipetransport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitpipetransport.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitpipetransport.Tpo -c -o src/common/libcockpit_common_a-cockpitpipetransport.obj `if test -f 'src/common/cockpitpipetransport.c'; then $(CYGPATH_W) 'src/common/cockpitpipetransport.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitpipetransport.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitpipetransport.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitpipetransport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitpipetransport.c' object='src/common/libcockpit_common_a-cockpitpipetransport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitpipetransport.obj `if test -f 'src/common/cockpitpipetransport.c'; then $(CYGPATH_W) 'src/common/cockpitpipetransport.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitpipetransport.c'; fi`

src/common/libcockpit_common_a-cockpitsystem.o: src/common/cockpitsystem.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitsystem.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitsystem.Tpo -c -o src/common/libcockpit_common_a-cockpitsystem.o `test -f 'src/common/cockpitsystem.c' || echo '$(srcdir)/'`src/common/cockpitsystem.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitsystem.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitsystem.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitsystem.c' object='src/common/libcockpit_common_a-cockpitsystem.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitsystem.o `test -f 'src/common/cockpitsystem.c' || echo '$(srcdir)/'`src/common/cockpitsystem.c

src/common/libcockpit_common_a-cockpitsystem.obj: src/common/cockpitsystem.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitsystem.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitsystem.Tpo -c -o src/common/libcockpit_common_a-cockpitsystem.obj `if test -f 'src/common/cockpitsystem.c'; then $(CYGPATH_W) 'src/common/cockpitsystem.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitsystem.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitsystem.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitsystem.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitsystem.c' object='src/common/libcockpit_common_a-cockpitsystem.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitsystem.obj `if test -f 'src/common/cockpitsystem.c'; then $(CYGPATH_W) 'src/common/cockpitsystem.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitsystem.c'; fi`

src/common/libcockpit_common_a-cockpittemplate.o: src/common/cockpittemplate.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpittemplate.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpittemplate.Tpo -c -o src/common/libcockpit_common_a-cockpittemplate.o `test -f 'src/common/cockpittemplate.c' || echo '$(srcdir)/'`src/common/cockpittemplate.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpittemplate.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpittemplate.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpittemplate.c' object='src/common/libcockpit_common_a-cockpittemplate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpittemplate.o `test -f 'src/common/cockpittemplate.c' || echo '$(srcdir)/'`src/common/cockpittemplate.c

src/common/libcockpit_common_a-cockpittemplate.obj: src/common/cockpittemplate.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpittemplate.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpittemplate.Tpo -c -o src/common/libcockpit_common_a-cockpittemplate.obj `if test -f 'src/common/cockpittemplate.c'; then $(CYGPATH_W) 'src/common/cockpittemplate.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpittemplate.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpittemplate.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpittemplate.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpittemplate.c' object='src/common/libcockpit_common_a-cockpittemplate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpittemplate.obj `if test -f 'src/common/cockpittemplate.c'; then $(CYGPATH_W) 'src/common/cockpittemplate.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpittemplate.c'; fi`

src/common/libcockpit_common_a-cockpittest.o: src/common/cockpittest.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpittest.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpittest.Tpo -c -o src/common/libcockpit_common_a-cockpittest.o `test -f 'src/common/cockpittest.c' || echo '$(srcdir)/'`src/common/cockpittest.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpittest.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpittest.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpittest.c' object='src/common/libcockpit_common_a-cockpittest.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpittest.o `test -f 'src/common/cockpittest.c' || echo '$(srcdir)/'`src/common/cockpittest.c

src/common/libcockpit_common_a-cockpittest.obj: src/common/cockpittest.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpittest.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpittest.Tpo -c -o src/common/libcockpit_common_a-cockpittest.obj `if test -f 'src/common/cockpittest.c'; then $(CYGPATH_W) 'src/common/cockpittest.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpittest.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpittest.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpittest.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpittest.c' object='src/common/libcockpit_common_a-cockpittest.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpittest.obj `if test -f 'src/common/cockpittest.c'; then $(CYGPATH_W) 'src/common/cockpittest.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpittest.c'; fi`

src/common/libcockpit_common_a-cockpittransport.o: src/common/cockpittransport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpittransport.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpittransport.Tpo -c -o src/common/libcockpit_common_a-cockpittransport.o `test -f 'src/common/cockpittransport.c' || echo '$(srcdir)/'`src/common/cockpittransport.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpittransport.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpittransport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpittransport.c' object='src/common/libcockpit_common_a-cockpittransport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpittransport.o `test -f 'src/common/cockpittransport.c' || echo '$(srcdir)/'`src/common/cockpittransport.c

src/common/libcockpit_common_a-cockpittransport.obj: src/common/cockpittransport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpittransport.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpittransport.Tpo -c -o src/common/libcockpit_common_a-cockpittransport.obj `if test -f 'src/common/cockpittransport.c'; then $(CYGPATH_W) 'src/common/cockpittransport.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpittransport.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpittransport.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpittransport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpittransport.c' object='src/common/libcockpit_common_a-cockpittransport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpittransport.obj `if test -f 'src/common/cockpittransport.c'; then $(CYGPATH_W) 'src/common/cockpittransport.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpittransport.c'; fi`

src/common/libcockpit_common_a-cockpitunicode.o: src/common/cockpitunicode.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitunicode.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitunicode.Tpo -c -o src/common/libcockpit_common_a-cockpitunicode.o `test -f 'src/common/cockpitunicode.c' || echo '$(srcdir)/'`src/common/cockpitunicode.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitunicode.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitunicode.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitunicode.c' object='src/common/libcockpit_common_a-cockpitunicode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitunicode.o `test -f 'src/common/cockpitunicode.c' || echo '$(srcdir)/'`src/common/cockpitunicode.c

src/common/libcockpit_common_a-cockpitunicode.obj: src/common/cockpitunicode.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitunicode.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitunicode.Tpo -c -o src/common/libcockpit_common_a-cockpitunicode.obj `if test -f 'src/common/cockpitunicode.c'; then $(CYGPATH_W) 'src/common/cockpitunicode.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitunicode.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitunicode.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitunicode.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitunicode.c' object='src/common/libcockpit_common_a-cockpitunicode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitunicode.obj `if test -f 'src/common/cockpitunicode.c'; then $(CYGPATH_W) 'src/common/cockpitunicode.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitunicode.c'; fi`

src/common/libcockpit_common_a-cockpitunixfd.o: src/common/cockpitunixfd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitunixfd.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitunixfd.Tpo -c -o src/common/libcockpit_common_a-cockpitunixfd.o `test -f 'src/common/cockpitunixfd.c' || echo '$(srcdir)/'`src/common/cockpitunixfd.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitunixfd.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitunixfd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitunixfd.c' object='src/common/libcockpit_common_a-cockpitunixfd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitunixfd.o `test -f 'src/common/cockpitunixfd.c' || echo '$(srcdir)/'`src/common/cockpitunixfd.c

src/common/libcockpit_common_a-cockpitunixfd.obj: src/common/cockpitunixfd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitunixfd.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitunixfd.Tpo -c -o src/common/libcockpit_common_a-cockpitunixfd.obj `if test -f 'src/common/cockpitunixfd.c'; then $(CYGPATH_W) 'src/common/cockpitunixfd.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitunixfd.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitunixfd.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitunixfd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitunixfd.c' object='src/common/libcockpit_common_a-cockpitunixfd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitunixfd.obj `if test -f 'src/common/cockpitunixfd.c'; then $(CYGPATH_W) 'src/common/cockpitunixfd.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitunixfd.c'; fi`

src/common/libcockpit_common_a-cockpitunixsignal.o: src/common/cockpitunixsignal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitunixsignal.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitunixsignal.Tpo -c -o src/common/libcockpit_common_a-cockpitunixsignal.o `test -f 'src/common/cockpitunixsignal.c' || echo '$(srcdir)/'`src/common/cockpitunixsignal.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitunixsignal.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitunixsignal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitunixsignal.c' object='src/common/libcockpit_common_a-cockpitunixsignal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitunixsignal.o `test -f 'src/common/cockpitunixsignal.c' || echo '$(srcdir)/'`src/common/cockpitunixsignal.c

src/common/libcockpit_common_a-cockpitunixsignal.obj: src/common/cockpitunixsignal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitunixsignal.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitunixsignal.Tpo -c -o src/common/libcockpit_common_a-cockpitunixsignal.obj `if test -f 'src/common/cockpitunixsignal.c'; then $(CYGPATH_W) 'src/common/cockpitunixsignal.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitunixsignal.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitunixsignal.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitunixsignal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitunixsignal.c' object='src/common/libcockpit_common_a-cockpitunixsignal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitunixsignal.obj `if test -f 'src/common/cockpitunixsignal.c'; then $(CYGPATH_W) 'src/common/cockpitunixsignal.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitunixsignal.c'; fi`

src/common/libcockpit_common_a-cockpitversion.o: src/common/cockpitversion.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitversion.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitversion.Tpo -c -o src/common/libcockpit_common_a-cockpitversion.o `test -f 'src/common/cockpitversion.c' || echo '$(srcdir)/'`src/common/cockpitversion.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitversion.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitversion.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitversion.c' object='src/common/libcockpit_common_a-cockpitversion.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitversion.o `test -f 'src/common/cockpitversion.c' || echo '$(srcdir)/'`src/common/cockpitversion.c

src/common/libcockpit_common_a-cockpitversion.obj: src/common/cockpitversion.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitversion.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitversion.Tpo -c -o src/common/libcockpit_common_a-cockpitversion.obj `if test -f 'src/common/cockpitversion.c'; then $(CYGPATH_W) 'src/common/cockpitversion.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitversion.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitversion.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitversion.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitversion.c' object='src/common/libcockpit_common_a-cockpitversion.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitversion.obj `if test -f 'src/common/cockpitversion.c'; then $(CYGPATH_W) 'src/common/cockpitversion.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitversion.c'; fi`

src/common/libcockpit_common_a-cockpitwebfilter.o: src/common/cockpitwebfilter.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitwebfilter.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebfilter.Tpo -c -o src/common/libcockpit_common_a-cockpitwebfilter.o `test -f 'src/common/cockpitwebfilter.c' || echo '$(srcdir)/'`src/common/cockpitwebfilter.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebfilter.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebfilter.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitwebfilter.c' object='src/common/libcockpit_common_a-cockpitwebfilter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitwebfilter.o `test -f 'src/common/cockpitwebfilter.c' || echo '$(srcdir)/'`src/common/cockpitwebfilter.c

src/common/libcockpit_common_a-cockpitwebfilter.obj: src/common/cockpitwebfilter.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitwebfilter.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebfilter.Tpo -c -o src/common/libcockpit_common_a-cockpitwebfilter.obj `if test -f 'src/common/cockpitwebfilter.c'; then $(CYGPATH_W) 'src/common/cockpitwebfilter.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitwebfilter.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebfilter.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebfilter.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitwebfilter.c' object='src/common/libcockpit_common_a-cockpitwebfilter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitwebfilter.obj `if test -f 'src/common/cockpitwebfilter.c'; then $(CYGPATH_W) 'src/common/cockpitwebfilter.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitwebfilter.c'; fi`

src/common/libcockpit_common_a-cockpitwebinject.o: src/common/cockpitwebinject.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitwebinject.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebinject.Tpo -c -o src/common/libcockpit_common_a-cockpitwebinject.o `test -f 'src/common/cockpitwebinject.c' || echo '$(srcdir)/'`src/common/cockpitwebinject.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebinject.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebinject.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitwebinject.c' object='src/common/libcockpit_common_a-cockpitwebinject.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitwebinject.o `test -f 'src/common/cockpitwebinject.c' || echo '$(srcdir)/'`src/common/cockpitwebinject.c

src/common/libcockpit_common_a-cockpitwebinject.obj: src/common/cockpitwebinject.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitwebinject.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebinject.Tpo -c -o src/common/libcockpit_common_a-cockpitwebinject.obj `if test -f 'src/common/cockpitwebinject.c'; then $(CYGPATH_W) 'src/common/cockpitwebinject.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitwebinject.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebinject.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebinject.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitwebinject.c' object='src/common/libcockpit_common_a-cockpitwebinject.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitwebinject.obj `if test -f 'src/common/cockpitwebinject.c'; then $(CYGPATH_W) 'src/common/cockpitwebinject.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitwebinject.c'; fi`

src/common/libcockpit_common_a-cockpitwebresponse.o: src/common/cockpitwebresponse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitwebresponse.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebresponse.Tpo -c -o src/common/libcockpit_common_a-cockpitwebresponse.o `test -f 'src/common/cockpitwebresponse.c' || echo '$(srcdir)/'`src/common/cockpitwebresponse.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebresponse.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebresponse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitwebresponse.c' object='src/common/libcockpit_common_a-cockpitwebresponse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitwebresponse.o `test -f 'src/common/cockpitwebresponse.c' || echo '$(srcdir)/'`src/common/cockpitwebresponse.c

src/common/libcockpit_common_a-cockpitwebresponse.obj: src/common/cockpitwebresponse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitwebresponse.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebresponse.Tpo -c -o src/common/libcockpit_common_a-cockpitwebresponse.obj `if test -f 'src/common/cockpitwebresponse.c'; then $(CYGPATH_W) 'src/common/cockpitwebresponse.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitwebresponse.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebresponse.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebresponse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitwebresponse.c' object='src/common/libcockpit_common_a-cockpitwebresponse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitwebresponse.obj `if test -f 'src/common/cockpitwebresponse.c'; then $(CYGPATH_W) 'src/common/cockpitwebresponse.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitwebresponse.c'; fi`

src/common/libcockpit_common_a-cockpitwebserver.o: src/common/cockpitwebserver.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitwebserver.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebserver.Tpo -c -o src/common/libcockpit_common_a-cockpitwebserver.o `test -f 'src/common/cockpitwebserver.c' || echo '$(srcdir)/'`src/common/cockpitwebserver.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebserver.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebserver.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitwebserver.c' object='src/common/libcockpit_common_a-cockpitwebserver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitwebserver.o `test -f 'src/common/cockpitwebserver.c' || echo '$(srcdir)/'`src/common/cockpitwebserver.c

src/common/libcockpit_common_a-cockpitwebserver.obj: src/common/cockpitwebserver.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitwebserver.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebserver.Tpo -c -o src/common/libcockpit_common_a-cockpitwebserver.obj `if test -f 'src/common/cockpitwebserver.c'; then $(CYGPATH_W) 'src/common/cockpitwebserver.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitwebserver.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebserver.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitwebserver.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitwebserver.c' object='src/common/libcockpit_common_a-cockpitwebserver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitwebserver.obj `if test -f 'src/common/cockpitwebserver.c'; then $(CYGPATH_W) 'src/common/cockpitwebserver.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitwebserver.c'; fi`

src/common/libcockpit_common_a-cockpitconf.o: src/common/cockpitconf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitconf.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitconf.Tpo -c -o src/common/libcockpit_common_a-cockpitconf.o `test -f 'src/common/cockpitconf.c' || echo '$(srcdir)/'`src/common/cockpitconf.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitconf.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitconf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitconf.c' object='src/common/libcockpit_common_a-cockpitconf.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitconf.o `test -f 'src/common/cockpitconf.c' || echo '$(srcdir)/'`src/common/cockpitconf.c

src/common/libcockpit_common_a-cockpitconf.obj: src/common/cockpitconf.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitconf.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitconf.Tpo -c -o src/common/libcockpit_common_a-cockpitconf.obj `if test -f 'src/common/cockpitconf.c'; then $(CYGPATH_W) 'src/common/cockpitconf.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitconf.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitconf.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitconf.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitconf.c' object='src/common/libcockpit_common_a-cockpitconf.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitconf.obj `if test -f 'src/common/cockpitconf.c'; then $(CYGPATH_W) 'src/common/cockpitconf.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitconf.c'; fi`

src/common/libcockpit_common_a-mock-dbus-tests.o: src/common/mock-dbus-tests.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-mock-dbus-tests.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-mock-dbus-tests.Tpo -c -o src/common/libcockpit_common_a-mock-dbus-tests.o `test -f 'src/common/mock-dbus-tests.c' || echo '$(srcdir)/'`src/common/mock-dbus-tests.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-mock-dbus-tests.Tpo src/common/$(DEPDIR)/libcockpit_common_a-mock-dbus-tests.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/mock-dbus-tests.c' object='src/common/libcockpit_common_a-mock-dbus-tests.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-mock-dbus-tests.o `test -f 'src/common/mock-dbus-tests.c' || echo '$(srcdir)/'`src/common/mock-dbus-tests.c

src/common/libcockpit_common_a-mock-dbus-tests.obj: src/common/mock-dbus-tests.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-mock-dbus-tests.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-mock-dbus-tests.Tpo -c -o src/common/libcockpit_common_a-mock-dbus-tests.obj `if test -f 'src/common/mock-dbus-tests.c'; then $(CYGPATH_W) 'src/common/mock-dbus-tests.c'; else $(CYGPATH_W) '$(srcdir)/src/common/mock-dbus-tests.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-mock-dbus-tests.Tpo src/common/$(DEPDIR)/libcockpit_common_a-mock-dbus-tests.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/mock-dbus-tests.c' object='src/common/libcockpit_common_a-mock-dbus-tests.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-mock-dbus-tests.obj `if test -f 'src/common/mock-dbus-tests.c'; then $(CYGPATH_W) 'src/common/mock-dbus-tests.c'; else $(CYGPATH_W) '$(srcdir)/src/common/mock-dbus-tests.c'; fi`

src/common/libcockpit_common_a-mock-service.o: src/common/mock-service.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-mock-service.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-mock-service.Tpo -c -o src/common/libcockpit_common_a-mock-service.o `test -f 'src/common/mock-service.c' || echo '$(srcdir)/'`src/common/mock-service.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-mock-service.Tpo src/common/$(DEPDIR)/libcockpit_common_a-mock-service.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/mock-service.c' object='src/common/libcockpit_common_a-mock-service.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-mock-service.o `test -f 'src/common/mock-service.c' || echo '$(srcdir)/'`src/common/mock-service.c

src/common/libcockpit_common_a-mock-service.obj: src/common/mock-service.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-mock-service.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-mock-service.Tpo -c -o src/common/libcockpit_common_a-mock-service.obj `if test -f 'src/common/mock-service.c'; then $(CYGPATH_W) 'src/common/mock-service.c'; else $(CYGPATH_W) '$(srcdir)/src/common/mock-service.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-mock-service.Tpo src/common/$(DEPDIR)/libcockpit_common_a-mock-service.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/mock-service.c' object='src/common/libcockpit_common_a-mock-service.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-mock-service.obj `if test -f 'src/common/mock-service.c'; then $(CYGPATH_W) 'src/common/mock-service.c'; else $(CYGPATH_W) '$(srcdir)/src/common/mock-service.c'; fi`

src/common/libcockpit_common_a-cockpitassets.o: src/common/cockpitassets.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitassets.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitassets.Tpo -c -o src/common/libcockpit_common_a-cockpitassets.o `test -f 'src/common/cockpitassets.c' || echo '$(srcdir)/'`src/common/cockpitassets.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitassets.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitassets.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitassets.c' object='src/common/libcockpit_common_a-cockpitassets.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitassets.o `test -f 'src/common/cockpitassets.c' || echo '$(srcdir)/'`src/common/cockpitassets.c

src/common/libcockpit_common_a-cockpitassets.obj: src/common/cockpitassets.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_common_a-cockpitassets.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_common_a-cockpitassets.Tpo -c -o src/common/libcockpit_common_a-cockpitassets.obj `if test -f 'src/common/cockpitassets.c'; then $(CYGPATH_W) 'src/common/cockpitassets.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitassets.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_common_a-cockpitassets.Tpo src/common/$(DEPDIR)/libcockpit_common_a-cockpitassets.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitassets.c' object='src/common/libcockpit_common_a-cockpitassets.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_common_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_common_a-cockpitassets.obj `if test -f 'src/common/cockpitassets.c'; then $(CYGPATH_W) 'src/common/cockpitassets.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitassets.c'; fi`

src/bridge/libcockpit_pcp_a-cockpitchannel.o: src/bridge/cockpitchannel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitchannel.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitchannel.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitchannel.o `test -f 'src/bridge/cockpitchannel.c' || echo '$(srcdir)/'`src/bridge/cockpitchannel.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitchannel.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitchannel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitchannel.c' object='src/bridge/libcockpit_pcp_a-cockpitchannel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitchannel.o `test -f 'src/bridge/cockpitchannel.c' || echo '$(srcdir)/'`src/bridge/cockpitchannel.c

src/bridge/libcockpit_pcp_a-cockpitchannel.obj: src/bridge/cockpitchannel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitchannel.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitchannel.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitchannel.obj `if test -f 'src/bridge/cockpitchannel.c'; then $(CYGPATH_W) 'src/bridge/cockpitchannel.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitchannel.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitchannel.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitchannel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitchannel.c' object='src/bridge/libcockpit_pcp_a-cockpitchannel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitchannel.obj `if test -f 'src/bridge/cockpitchannel.c'; then $(CYGPATH_W) 'src/bridge/cockpitchannel.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitchannel.c'; fi`

src/bridge/libcockpit_pcp_a-cockpitconnect.o: src/bridge/cockpitconnect.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitconnect.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitconnect.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitconnect.o `test -f 'src/bridge/cockpitconnect.c' || echo '$(srcdir)/'`src/bridge/cockpitconnect.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitconnect.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitconnect.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitconnect.c' object='src/bridge/libcockpit_pcp_a-cockpitconnect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitconnect.o `test -f 'src/bridge/cockpitconnect.c' || echo '$(srcdir)/'`src/bridge/cockpitconnect.c

src/bridge/libcockpit_pcp_a-cockpitconnect.obj: src/bridge/cockpitconnect.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitconnect.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitconnect.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitconnect.obj `if test -f 'src/bridge/cockpitconnect.c'; then $(CYGPATH_W) 'src/bridge/cockpitconnect.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitconnect.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitconnect.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitconnect.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitconnect.c' object='src/bridge/libcockpit_pcp_a-cockpitconnect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitconnect.obj `if test -f 'src/bridge/cockpitconnect.c'; then $(CYGPATH_W) 'src/bridge/cockpitconnect.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitconnect.c'; fi`

src/bridge/libcockpit_pcp_a-cockpitpcpmetrics.o: src/bridge/cockpitpcpmetrics.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitpcpmetrics.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitpcpmetrics.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitpcpmetrics.o `test -f 'src/bridge/cockpitpcpmetrics.c' || echo '$(srcdir)/'`src/bridge/cockpitpcpmetrics.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitpcpmetrics.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitpcpmetrics.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitpcpmetrics.c' object='src/bridge/libcockpit_pcp_a-cockpitpcpmetrics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitpcpmetrics.o `test -f 'src/bridge/cockpitpcpmetrics.c' || echo '$(srcdir)/'`src/bridge/cockpitpcpmetrics.c

src/bridge/libcockpit_pcp_a-cockpitpcpmetrics.obj: src/bridge/cockpitpcpmetrics.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitpcpmetrics.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitpcpmetrics.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitpcpmetrics.obj `if test -f 'src/bridge/cockpitpcpmetrics.c'; then $(CYGPATH_W) 'src/bridge/cockpitpcpmetrics.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitpcpmetrics.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitpcpmetrics.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitpcpmetrics.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitpcpmetrics.c' object='src/bridge/libcockpit_pcp_a-cockpitpcpmetrics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitpcpmetrics.obj `if test -f 'src/bridge/cockpitpcpmetrics.c'; then $(CYGPATH_W) 'src/bridge/cockpitpcpmetrics.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitpcpmetrics.c'; fi`

src/bridge/libcockpit_pcp_a-cockpitpeer.o: src/bridge/cockpitpeer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitpeer.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitpeer.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitpeer.o `test -f 'src/bridge/cockpitpeer.c' || echo '$(srcdir)/'`src/bridge/cockpitpeer.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitpeer.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitpeer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitpeer.c' object='src/bridge/libcockpit_pcp_a-cockpitpeer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitpeer.o `test -f 'src/bridge/cockpitpeer.c' || echo '$(srcdir)/'`src/bridge/cockpitpeer.c

src/bridge/libcockpit_pcp_a-cockpitpeer.obj: src/bridge/cockpitpeer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitpeer.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitpeer.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitpeer.obj `if test -f 'src/bridge/cockpitpeer.c'; then $(CYGPATH_W) 'src/bridge/cockpitpeer.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitpeer.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitpeer.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitpeer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitpeer.c' object='src/bridge/libcockpit_pcp_a-cockpitpeer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitpeer.obj `if test -f 'src/bridge/cockpitpeer.c'; then $(CYGPATH_W) 'src/bridge/cockpitpeer.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitpeer.c'; fi`

src/bridge/libcockpit_pcp_a-cockpitrouter.o: src/bridge/cockpitrouter.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitrouter.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitrouter.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitrouter.o `test -f 'src/bridge/cockpitrouter.c' || echo '$(srcdir)/'`src/bridge/cockpitrouter.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitrouter.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitrouter.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitrouter.c' object='src/bridge/libcockpit_pcp_a-cockpitrouter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitrouter.o `test -f 'src/bridge/cockpitrouter.c' || echo '$(srcdir)/'`src/bridge/cockpitrouter.c

src/bridge/libcockpit_pcp_a-cockpitrouter.obj: src/bridge/cockpitrouter.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitrouter.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitrouter.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitrouter.obj `if test -f 'src/bridge/cockpitrouter.c'; then $(CYGPATH_W) 'src/bridge/cockpitrouter.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitrouter.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitrouter.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitrouter.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitrouter.c' object='src/bridge/libcockpit_pcp_a-cockpitrouter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitrouter.obj `if test -f 'src/bridge/cockpitrouter.c'; then $(CYGPATH_W) 'src/bridge/cockpitrouter.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitrouter.c'; fi`

src/bridge/libcockpit_pcp_a-cockpitblocksamples.o: src/bridge/cockpitblocksamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitblocksamples.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitblocksamples.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitblocksamples.o `test -f 'src/bridge/cockpitblocksamples.c' || echo '$(srcdir)/'`src/bridge/cockpitblocksamples.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitblocksamples.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitblocksamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitblocksamples.c' object='src/bridge/libcockpit_pcp_a-cockpitblocksamples.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitblocksamples.o `test -f 'src/bridge/cockpitblocksamples.c' || echo '$(srcdir)/'`src/bridge/cockpitblocksamples.c

src/bridge/libcockpit_pcp_a-cockpitblocksamples.obj: src/bridge/cockpitblocksamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitblocksamples.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitblocksamples.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitblocksamples.obj `if test -f 'src/bridge/cockpitblocksamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitblocksamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitblocksamples.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitblocksamples.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitblocksamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitblocksamples.c' object='src/bridge/libcockpit_pcp_a-cockpitblocksamples.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitblocksamples.obj `if test -f 'src/bridge/cockpitblocksamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitblocksamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitblocksamples.c'; fi`

src/bridge/libcockpit_pcp_a-cockpitcgroupsamples.o: src/bridge/cockpitcgroupsamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitcgroupsamples.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitcgroupsamples.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitcgroupsamples.o `test -f 'src/bridge/cockpitcgroupsamples.c' || echo '$(srcdir)/'`src/bridge/cockpitcgroupsamples.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitcgroupsamples.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitcgroupsamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitcgroupsamples.c' object='src/bridge/libcockpit_pcp_a-cockpitcgroupsamples.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitcgroupsamples.o `test -f 'src/bridge/cockpitcgroupsamples.c' || echo '$(srcdir)/'`src/bridge/cockpitcgroupsamples.c

src/bridge/libcockpit_pcp_a-cockpitcgroupsamples.obj: src/bridge/cockpitcgroupsamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitcgroupsamples.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitcgroupsamples.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitcgroupsamples.obj `if test -f 'src/bridge/cockpitcgroupsamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitcgroupsamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitcgroupsamples.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitcgroupsamples.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitcgroupsamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitcgroupsamples.c' object='src/bridge/libcockpit_pcp_a-cockpitcgroupsamples.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitcgroupsamples.obj `if test -f 'src/bridge/cockpitcgroupsamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitcgroupsamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitcgroupsamples.c'; fi`

src/bridge/libcockpit_pcp_a-cockpitcpusamples.o: src/bridge/cockpitcpusamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitcpusamples.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitcpusamples.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitcpusamples.o `test -f 'src/bridge/cockpitcpusamples.c' || echo '$(srcdir)/'`src/bridge/cockpitcpusamples.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitcpusamples.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitcpusamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitcpusamples.c' object='src/bridge/libcockpit_pcp_a-cockpitcpusamples.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitcpusamples.o `test -f 'src/bridge/cockpitcpusamples.c' || echo '$(srcdir)/'`src/bridge/cockpitcpusamples.c

src/bridge/libcockpit_pcp_a-cockpitcpusamples.obj: src/bridge/cockpitcpusamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitcpusamples.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitcpusamples.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitcpusamples.obj `if test -f 'src/bridge/cockpitcpusamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitcpusamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitcpusamples.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitcpusamples.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitcpusamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitcpusamples.c' object='src/bridge/libcockpit_pcp_a-cockpitcpusamples.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitcpusamples.obj `if test -f 'src/bridge/cockpitcpusamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitcpusamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitcpusamples.c'; fi`

src/bridge/libcockpit_pcp_a-cockpitdisksamples.o: src/bridge/cockpitdisksamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitdisksamples.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitdisksamples.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitdisksamples.o `test -f 'src/bridge/cockpitdisksamples.c' || echo '$(srcdir)/'`src/bridge/cockpitdisksamples.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitdisksamples.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitdisksamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdisksamples.c' object='src/bridge/libcockpit_pcp_a-cockpitdisksamples.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitdisksamples.o `test -f 'src/bridge/cockpitdisksamples.c' || echo '$(srcdir)/'`src/bridge/cockpitdisksamples.c

src/bridge/libcockpit_pcp_a-cockpitdisksamples.obj: src/bridge/cockpitdisksamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitdisksamples.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitdisksamples.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitdisksamples.obj `if test -f 'src/bridge/cockpitdisksamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitdisksamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdisksamples.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitdisksamples.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitdisksamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdisksamples.c' object='src/bridge/libcockpit_pcp_a-cockpitdisksamples.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitdisksamples.obj `if test -f 'src/bridge/cockpitdisksamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitdisksamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdisksamples.c'; fi`

src/bridge/libcockpit_pcp_a-cockpitinternalmetrics.o: src/bridge/cockpitinternalmetrics.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitinternalmetrics.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitinternalmetrics.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitinternalmetrics.o `test -f 'src/bridge/cockpitinternalmetrics.c' || echo '$(srcdir)/'`src/bridge/cockpitinternalmetrics.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitinternalmetrics.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitinternalmetrics.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitinternalmetrics.c' object='src/bridge/libcockpit_pcp_a-cockpitinternalmetrics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitinternalmetrics.o `test -f 'src/bridge/cockpitinternalmetrics.c' || echo '$(srcdir)/'`src/bridge/cockpitinternalmetrics.c

src/bridge/libcockpit_pcp_a-cockpitinternalmetrics.obj: src/bridge/cockpitinternalmetrics.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitinternalmetrics.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitinternalmetrics.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitinternalmetrics.obj `if test -f 'src/bridge/cockpitinternalmetrics.c'; then $(CYGPATH_W) 'src/bridge/cockpitinternalmetrics.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitinternalmetrics.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitinternalmetrics.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitinternalmetrics.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitinternalmetrics.c' object='src/bridge/libcockpit_pcp_a-cockpitinternalmetrics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitinternalmetrics.obj `if test -f 'src/bridge/cockpitinternalmetrics.c'; then $(CYGPATH_W) 'src/bridge/cockpitinternalmetrics.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitinternalmetrics.c'; fi`

src/bridge/libcockpit_pcp_a-cockpitmemorysamples.o: src/bridge/cockpitmemorysamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitmemorysamples.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmemorysamples.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitmemorysamples.o `test -f 'src/bridge/cockpitmemorysamples.c' || echo '$(srcdir)/'`src/bridge/cockpitmemorysamples.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmemorysamples.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmemorysamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitmemorysamples.c' object='src/bridge/libcockpit_pcp_a-cockpitmemorysamples.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitmemorysamples.o `test -f 'src/bridge/cockpitmemorysamples.c' || echo '$(srcdir)/'`src/bridge/cockpitmemorysamples.c

src/bridge/libcockpit_pcp_a-cockpitmemorysamples.obj: src/bridge/cockpitmemorysamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitmemorysamples.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmemorysamples.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitmemorysamples.obj `if test -f 'src/bridge/cockpitmemorysamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitmemorysamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitmemorysamples.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmemorysamples.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmemorysamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitmemorysamples.c' object='src/bridge/libcockpit_pcp_a-cockpitmemorysamples.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitmemorysamples.obj `if test -f 'src/bridge/cockpitmemorysamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitmemorysamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitmemorysamples.c'; fi`

src/bridge/libcockpit_pcp_a-cockpitmetrics.o: src/bridge/cockpitmetrics.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitmetrics.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmetrics.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitmetrics.o `test -f 'src/bridge/cockpitmetrics.c' || echo '$(srcdir)/'`src/bridge/cockpitmetrics.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmetrics.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmetrics.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitmetrics.c' object='src/bridge/libcockpit_pcp_a-cockpitmetrics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitmetrics.o `test -f 'src/bridge/cockpitmetrics.c' || echo '$(srcdir)/'`src/bridge/cockpitmetrics.c

src/bridge/libcockpit_pcp_a-cockpitmetrics.obj: src/bridge/cockpitmetrics.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitmetrics.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmetrics.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitmetrics.obj `if test -f 'src/bridge/cockpitmetrics.c'; then $(CYGPATH_W) 'src/bridge/cockpitmetrics.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitmetrics.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmetrics.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmetrics.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitmetrics.c' object='src/bridge/libcockpit_pcp_a-cockpitmetrics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitmetrics.obj `if test -f 'src/bridge/cockpitmetrics.c'; then $(CYGPATH_W) 'src/bridge/cockpitmetrics.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitmetrics.c'; fi`

src/bridge/libcockpit_pcp_a-cockpitmountsamples.o: src/bridge/cockpitmountsamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitmountsamples.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmountsamples.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitmountsamples.o `test -f 'src/bridge/cockpitmountsamples.c' || echo '$(srcdir)/'`src/bridge/cockpitmountsamples.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmountsamples.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmountsamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitmountsamples.c' object='src/bridge/libcockpit_pcp_a-cockpitmountsamples.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitmountsamples.o `test -f 'src/bridge/cockpitmountsamples.c' || echo '$(srcdir)/'`src/bridge/cockpitmountsamples.c

src/bridge/libcockpit_pcp_a-cockpitmountsamples.obj: src/bridge/cockpitmountsamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitmountsamples.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmountsamples.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitmountsamples.obj `if test -f 'src/bridge/cockpitmountsamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitmountsamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitmountsamples.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmountsamples.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitmountsamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitmountsamples.c' object='src/bridge/libcockpit_pcp_a-cockpitmountsamples.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitmountsamples.obj `if test -f 'src/bridge/cockpitmountsamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitmountsamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitmountsamples.c'; fi`

src/bridge/libcockpit_pcp_a-cockpitnetworksamples.o: src/bridge/cockpitnetworksamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitnetworksamples.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitnetworksamples.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitnetworksamples.o `test -f 'src/bridge/cockpitnetworksamples.c' || echo '$(srcdir)/'`src/bridge/cockpitnetworksamples.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitnetworksamples.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitnetworksamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitnetworksamples.c' object='src/bridge/libcockpit_pcp_a-cockpitnetworksamples.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitnetworksamples.o `test -f 'src/bridge/cockpitnetworksamples.c' || echo '$(srcdir)/'`src/bridge/cockpitnetworksamples.c

src/bridge/libcockpit_pcp_a-cockpitnetworksamples.obj: src/bridge/cockpitnetworksamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitnetworksamples.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitnetworksamples.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitnetworksamples.obj `if test -f 'src/bridge/cockpitnetworksamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitnetworksamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitnetworksamples.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitnetworksamples.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitnetworksamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitnetworksamples.c' object='src/bridge/libcockpit_pcp_a-cockpitnetworksamples.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitnetworksamples.obj `if test -f 'src/bridge/cockpitnetworksamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitnetworksamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitnetworksamples.c'; fi`

src/bridge/libcockpit_pcp_a-cockpitsamples.o: src/bridge/cockpitsamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitsamples.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitsamples.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitsamples.o `test -f 'src/bridge/cockpitsamples.c' || echo '$(srcdir)/'`src/bridge/cockpitsamples.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitsamples.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitsamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitsamples.c' object='src/bridge/libcockpit_pcp_a-cockpitsamples.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitsamples.o `test -f 'src/bridge/cockpitsamples.c' || echo '$(srcdir)/'`src/bridge/cockpitsamples.c

src/bridge/libcockpit_pcp_a-cockpitsamples.obj: src/bridge/cockpitsamples.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_pcp_a-cockpitsamples.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitsamples.Tpo -c -o src/bridge/libcockpit_pcp_a-cockpitsamples.obj `if test -f 'src/bridge/cockpitsamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitsamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitsamples.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitsamples.Tpo src/bridge/$(DEPDIR)/libcockpit_pcp_a-cockpitsamples.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitsamples.c' object='src/bridge/libcockpit_pcp_a-cockpitsamples.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_pcp_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_pcp_a-cockpitsamples.obj `if test -f 'src/bridge/cockpitsamples.c'; then $(CYGPATH_W) 'src/bridge/cockpitsamples.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitsamples.c'; fi`

src/ssh/libcockpit_ssh_a-cockpitsshoptions.o: src/ssh/cockpitsshoptions.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ssh_a_CFLAGS) $(CFLAGS) -MT src/ssh/libcockpit_ssh_a-cockpitsshoptions.o -MD -MP -MF src/ssh/$(DEPDIR)/libcockpit_ssh_a-cockpitsshoptions.Tpo -c -o src/ssh/libcockpit_ssh_a-cockpitsshoptions.o `test -f 'src/ssh/cockpitsshoptions.c' || echo '$(srcdir)/'`src/ssh/cockpitsshoptions.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ssh/$(DEPDIR)/libcockpit_ssh_a-cockpitsshoptions.Tpo src/ssh/$(DEPDIR)/libcockpit_ssh_a-cockpitsshoptions.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ssh/cockpitsshoptions.c' object='src/ssh/libcockpit_ssh_a-cockpitsshoptions.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ssh_a_CFLAGS) $(CFLAGS) -c -o src/ssh/libcockpit_ssh_a-cockpitsshoptions.o `test -f 'src/ssh/cockpitsshoptions.c' || echo '$(srcdir)/'`src/ssh/cockpitsshoptions.c

src/ssh/libcockpit_ssh_a-cockpitsshoptions.obj: src/ssh/cockpitsshoptions.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ssh_a_CFLAGS) $(CFLAGS) -MT src/ssh/libcockpit_ssh_a-cockpitsshoptions.obj -MD -MP -MF src/ssh/$(DEPDIR)/libcockpit_ssh_a-cockpitsshoptions.Tpo -c -o src/ssh/libcockpit_ssh_a-cockpitsshoptions.obj `if test -f 'src/ssh/cockpitsshoptions.c'; then $(CYGPATH_W) 'src/ssh/cockpitsshoptions.c'; else $(CYGPATH_W) '$(srcdir)/src/ssh/cockpitsshoptions.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ssh/$(DEPDIR)/libcockpit_ssh_a-cockpitsshoptions.Tpo src/ssh/$(DEPDIR)/libcockpit_ssh_a-cockpitsshoptions.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ssh/cockpitsshoptions.c' object='src/ssh/libcockpit_ssh_a-cockpitsshoptions.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ssh_a_CFLAGS) $(CFLAGS) -c -o src/ssh/libcockpit_ssh_a-cockpitsshoptions.obj `if test -f 'src/ssh/cockpitsshoptions.c'; then $(CYGPATH_W) 'src/ssh/cockpitsshoptions.c'; else $(CYGPATH_W) '$(srcdir)/src/ssh/cockpitsshoptions.c'; fi`

src/ssh/libcockpit_ssh_a-cockpitsshrelay.o: src/ssh/cockpitsshrelay.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ssh_a_CFLAGS) $(CFLAGS) -MT src/ssh/libcockpit_ssh_a-cockpitsshrelay.o -MD -MP -MF src/ssh/$(DEPDIR)/libcockpit_ssh_a-cockpitsshrelay.Tpo -c -o src/ssh/libcockpit_ssh_a-cockpitsshrelay.o `test -f 'src/ssh/cockpitsshrelay.c' || echo '$(srcdir)/'`src/ssh/cockpitsshrelay.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ssh/$(DEPDIR)/libcockpit_ssh_a-cockpitsshrelay.Tpo src/ssh/$(DEPDIR)/libcockpit_ssh_a-cockpitsshrelay.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ssh/cockpitsshrelay.c' object='src/ssh/libcockpit_ssh_a-cockpitsshrelay.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ssh_a_CFLAGS) $(CFLAGS) -c -o src/ssh/libcockpit_ssh_a-cockpitsshrelay.o `test -f 'src/ssh/cockpitsshrelay.c' || echo '$(srcdir)/'`src/ssh/cockpitsshrelay.c

src/ssh/libcockpit_ssh_a-cockpitsshrelay.obj: src/ssh/cockpitsshrelay.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ssh_a_CFLAGS) $(CFLAGS) -MT src/ssh/libcockpit_ssh_a-cockpitsshrelay.obj -MD -MP -MF src/ssh/$(DEPDIR)/libcockpit_ssh_a-cockpitsshrelay.Tpo -c -o src/ssh/libcockpit_ssh_a-cockpitsshrelay.obj `if test -f 'src/ssh/cockpitsshrelay.c'; then $(CYGPATH_W) 'src/ssh/cockpitsshrelay.c'; else $(CYGPATH_W) '$(srcdir)/src/ssh/cockpitsshrelay.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ssh/$(DEPDIR)/libcockpit_ssh_a-cockpitsshrelay.Tpo src/ssh/$(DEPDIR)/libcockpit_ssh_a-cockpitsshrelay.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ssh/cockpitsshrelay.c' object='src/ssh/libcockpit_ssh_a-cockpitsshrelay.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ssh_a_CFLAGS) $(CFLAGS) -c -o src/ssh/libcockpit_ssh_a-cockpitsshrelay.obj `if test -f 'src/ssh/cockpitsshrelay.c'; then $(CYGPATH_W) 'src/ssh/cockpitsshrelay.c'; else $(CYGPATH_W) '$(srcdir)/src/ssh/cockpitsshrelay.c'; fi`

src/common/libcockpit_ssh_a-cockpitauthorize.o: src/common/cockpitauthorize.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ssh_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_ssh_a-cockpitauthorize.o -MD -MP -MF src/common/$(DEPDIR)/libcockpit_ssh_a-cockpitauthorize.Tpo -c -o src/common/libcockpit_ssh_a-cockpitauthorize.o `test -f 'src/common/cockpitauthorize.c' || echo '$(srcdir)/'`src/common/cockpitauthorize.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_ssh_a-cockpitauthorize.Tpo src/common/$(DEPDIR)/libcockpit_ssh_a-cockpitauthorize.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitauthorize.c' object='src/common/libcockpit_ssh_a-cockpitauthorize.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ssh_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_ssh_a-cockpitauthorize.o `test -f 'src/common/cockpitauthorize.c' || echo '$(srcdir)/'`src/common/cockpitauthorize.c

src/common/libcockpit_ssh_a-cockpitauthorize.obj: src/common/cockpitauthorize.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ssh_a_CFLAGS) $(CFLAGS) -MT src/common/libcockpit_ssh_a-cockpitauthorize.obj -MD -MP -MF src/common/$(DEPDIR)/libcockpit_ssh_a-cockpitauthorize.Tpo -c -o src/common/libcockpit_ssh_a-cockpitauthorize.obj `if test -f 'src/common/cockpitauthorize.c'; then $(CYGPATH_W) 'src/common/cockpitauthorize.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitauthorize.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/libcockpit_ssh_a-cockpitauthorize.Tpo src/common/$(DEPDIR)/libcockpit_ssh_a-cockpitauthorize.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitauthorize.c' object='src/common/libcockpit_ssh_a-cockpitauthorize.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ssh_a_CFLAGS) $(CFLAGS) -c -o src/common/libcockpit_ssh_a-cockpitauthorize.obj `if test -f 'src/common/cockpitauthorize.c'; then $(CYGPATH_W) 'src/common/cockpitauthorize.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitauthorize.c'; fi`

src/bridge/libcockpit_stub_a-cockpitchannel.o: src/bridge/cockpitchannel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitchannel.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitchannel.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitchannel.o `test -f 'src/bridge/cockpitchannel.c' || echo '$(srcdir)/'`src/bridge/cockpitchannel.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitchannel.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitchannel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitchannel.c' object='src/bridge/libcockpit_stub_a-cockpitchannel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitchannel.o `test -f 'src/bridge/cockpitchannel.c' || echo '$(srcdir)/'`src/bridge/cockpitchannel.c

src/bridge/libcockpit_stub_a-cockpitchannel.obj: src/bridge/cockpitchannel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitchannel.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitchannel.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitchannel.obj `if test -f 'src/bridge/cockpitchannel.c'; then $(CYGPATH_W) 'src/bridge/cockpitchannel.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitchannel.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitchannel.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitchannel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitchannel.c' object='src/bridge/libcockpit_stub_a-cockpitchannel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitchannel.obj `if test -f 'src/bridge/cockpitchannel.c'; then $(CYGPATH_W) 'src/bridge/cockpitchannel.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitchannel.c'; fi`

src/bridge/libcockpit_stub_a-cockpitconnect.o: src/bridge/cockpitconnect.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitconnect.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitconnect.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitconnect.o `test -f 'src/bridge/cockpitconnect.c' || echo '$(srcdir)/'`src/bridge/cockpitconnect.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitconnect.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitconnect.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitconnect.c' object='src/bridge/libcockpit_stub_a-cockpitconnect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitconnect.o `test -f 'src/bridge/cockpitconnect.c' || echo '$(srcdir)/'`src/bridge/cockpitconnect.c

src/bridge/libcockpit_stub_a-cockpitconnect.obj: src/bridge/cockpitconnect.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitconnect.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitconnect.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitconnect.obj `if test -f 'src/bridge/cockpitconnect.c'; then $(CYGPATH_W) 'src/bridge/cockpitconnect.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitconnect.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitconnect.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitconnect.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitconnect.c' object='src/bridge/libcockpit_stub_a-cockpitconnect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitconnect.obj `if test -f 'src/bridge/cockpitconnect.c'; then $(CYGPATH_W) 'src/bridge/cockpitconnect.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitconnect.c'; fi`

src/bridge/libcockpit_stub_a-cockpitdbuscache.o: src/bridge/cockpitdbuscache.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitdbuscache.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbuscache.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitdbuscache.o `test -f 'src/bridge/cockpitdbuscache.c' || echo '$(srcdir)/'`src/bridge/cockpitdbuscache.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbuscache.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbuscache.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdbuscache.c' object='src/bridge/libcockpit_stub_a-cockpitdbuscache.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitdbuscache.o `test -f 'src/bridge/cockpitdbuscache.c' || echo '$(srcdir)/'`src/bridge/cockpitdbuscache.c

src/bridge/libcockpit_stub_a-cockpitdbuscache.obj: src/bridge/cockpitdbuscache.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitdbuscache.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbuscache.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitdbuscache.obj `if test -f 'src/bridge/cockpitdbuscache.c'; then $(CYGPATH_W) 'src/bridge/cockpitdbuscache.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdbuscache.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbuscache.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbuscache.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdbuscache.c' object='src/bridge/libcockpit_stub_a-cockpitdbuscache.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitdbuscache.obj `if test -f 'src/bridge/cockpitdbuscache.c'; then $(CYGPATH_W) 'src/bridge/cockpitdbuscache.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdbuscache.c'; fi`

src/bridge/libcockpit_stub_a-cockpitdbusinternal.o: src/bridge/cockpitdbusinternal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitdbusinternal.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusinternal.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitdbusinternal.o `test -f 'src/bridge/cockpitdbusinternal.c' || echo '$(srcdir)/'`src/bridge/cockpitdbusinternal.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusinternal.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusinternal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdbusinternal.c' object='src/bridge/libcockpit_stub_a-cockpitdbusinternal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitdbusinternal.o `test -f 'src/bridge/cockpitdbusinternal.c' || echo '$(srcdir)/'`src/bridge/cockpitdbusinternal.c

src/bridge/libcockpit_stub_a-cockpitdbusinternal.obj: src/bridge/cockpitdbusinternal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitdbusinternal.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusinternal.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitdbusinternal.obj `if test -f 'src/bridge/cockpitdbusinternal.c'; then $(CYGPATH_W) 'src/bridge/cockpitdbusinternal.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdbusinternal.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusinternal.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusinternal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdbusinternal.c' object='src/bridge/libcockpit_stub_a-cockpitdbusinternal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitdbusinternal.obj `if test -f 'src/bridge/cockpitdbusinternal.c'; then $(CYGPATH_W) 'src/bridge/cockpitdbusinternal.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdbusinternal.c'; fi`

src/bridge/libcockpit_stub_a-cockpitdbusjson.o: src/bridge/cockpitdbusjson.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitdbusjson.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusjson.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitdbusjson.o `test -f 'src/bridge/cockpitdbusjson.c' || echo '$(srcdir)/'`src/bridge/cockpitdbusjson.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusjson.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusjson.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdbusjson.c' object='src/bridge/libcockpit_stub_a-cockpitdbusjson.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitdbusjson.o `test -f 'src/bridge/cockpitdbusjson.c' || echo '$(srcdir)/'`src/bridge/cockpitdbusjson.c

src/bridge/libcockpit_stub_a-cockpitdbusjson.obj: src/bridge/cockpitdbusjson.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitdbusjson.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusjson.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitdbusjson.obj `if test -f 'src/bridge/cockpitdbusjson.c'; then $(CYGPATH_W) 'src/bridge/cockpitdbusjson.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdbusjson.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusjson.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusjson.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdbusjson.c' object='src/bridge/libcockpit_stub_a-cockpitdbusjson.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitdbusjson.obj `if test -f 'src/bridge/cockpitdbusjson.c'; then $(CYGPATH_W) 'src/bridge/cockpitdbusjson.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdbusjson.c'; fi`

src/bridge/libcockpit_stub_a-cockpitdbusprocess.o: src/bridge/cockpitdbusprocess.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitdbusprocess.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusprocess.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitdbusprocess.o `test -f 'src/bridge/cockpitdbusprocess.c' || echo '$(srcdir)/'`src/bridge/cockpitdbusprocess.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusprocess.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusprocess.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdbusprocess.c' object='src/bridge/libcockpit_stub_a-cockpitdbusprocess.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitdbusprocess.o `test -f 'src/bridge/cockpitdbusprocess.c' || echo '$(srcdir)/'`src/bridge/cockpitdbusprocess.c

src/bridge/libcockpit_stub_a-cockpitdbusprocess.obj: src/bridge/cockpitdbusprocess.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitdbusprocess.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusprocess.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitdbusprocess.obj `if test -f 'src/bridge/cockpitdbusprocess.c'; then $(CYGPATH_W) 'src/bridge/cockpitdbusprocess.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdbusprocess.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusprocess.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusprocess.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdbusprocess.c' object='src/bridge/libcockpit_stub_a-cockpitdbusprocess.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitdbusprocess.obj `if test -f 'src/bridge/cockpitdbusprocess.c'; then $(CYGPATH_W) 'src/bridge/cockpitdbusprocess.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdbusprocess.c'; fi`

src/bridge/libcockpit_stub_a-cockpitdbusmeta.o: src/bridge/cockpitdbusmeta.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitdbusmeta.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusmeta.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitdbusmeta.o `test -f 'src/bridge/cockpitdbusmeta.c' || echo '$(srcdir)/'`src/bridge/cockpitdbusmeta.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusmeta.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusmeta.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdbusmeta.c' object='src/bridge/libcockpit_stub_a-cockpitdbusmeta.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitdbusmeta.o `test -f 'src/bridge/cockpitdbusmeta.c' || echo '$(srcdir)/'`src/bridge/cockpitdbusmeta.c

src/bridge/libcockpit_stub_a-cockpitdbusmeta.obj: src/bridge/cockpitdbusmeta.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitdbusmeta.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusmeta.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitdbusmeta.obj `if test -f 'src/bridge/cockpitdbusmeta.c'; then $(CYGPATH_W) 'src/bridge/cockpitdbusmeta.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdbusmeta.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusmeta.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusmeta.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdbusmeta.c' object='src/bridge/libcockpit_stub_a-cockpitdbusmeta.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitdbusmeta.obj `if test -f 'src/bridge/cockpitdbusmeta.c'; then $(CYGPATH_W) 'src/bridge/cockpitdbusmeta.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdbusmeta.c'; fi`

src/bridge/libcockpit_stub_a-cockpitdbusrules.o: src/bridge/cockpitdbusrules.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitdbusrules.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusrules.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitdbusrules.o `test -f 'src/bridge/cockpitdbusrules.c' || echo '$(srcdir)/'`src/bridge/cockpitdbusrules.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusrules.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusrules.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdbusrules.c' object='src/bridge/libcockpit_stub_a-cockpitdbusrules.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitdbusrules.o `test -f 'src/bridge/cockpitdbusrules.c' || echo '$(srcdir)/'`src/bridge/cockpitdbusrules.c

src/bridge/libcockpit_stub_a-cockpitdbusrules.obj: src/bridge/cockpitdbusrules.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitdbusrules.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusrules.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitdbusrules.obj `if test -f 'src/bridge/cockpitdbusrules.c'; then $(CYGPATH_W) 'src/bridge/cockpitdbusrules.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdbusrules.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusrules.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitdbusrules.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitdbusrules.c' object='src/bridge/libcockpit_stub_a-cockpitdbusrules.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitdbusrules.obj `if test -f 'src/bridge/cockpitdbusrules.c'; then $(CYGPATH_W) 'src/bridge/cockpitdbusrules.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitdbusrules.c'; fi`

src/bridge/libcockpit_stub_a-cockpitechochannel.o: src/bridge/cockpitechochannel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitechochannel.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitechochannel.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitechochannel.o `test -f 'src/bridge/cockpitechochannel.c' || echo '$(srcdir)/'`src/bridge/cockpitechochannel.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitechochannel.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitechochannel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitechochannel.c' object='src/bridge/libcockpit_stub_a-cockpitechochannel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitechochannel.o `test -f 'src/bridge/cockpitechochannel.c' || echo '$(srcdir)/'`src/bridge/cockpitechochannel.c

src/bridge/libcockpit_stub_a-cockpitechochannel.obj: src/bridge/cockpitechochannel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitechochannel.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitechochannel.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitechochannel.obj `if test -f 'src/bridge/cockpitechochannel.c'; then $(CYGPATH_W) 'src/bridge/cockpitechochannel.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitechochannel.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitechochannel.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitechochannel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitechochannel.c' object='src/bridge/libcockpit_stub_a-cockpitechochannel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitechochannel.obj `if test -f 'src/bridge/cockpitechochannel.c'; then $(CYGPATH_W) 'src/bridge/cockpitechochannel.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitechochannel.c'; fi`

src/bridge/libcockpit_stub_a-cockpitpipechannel.o: src/bridge/cockpitpipechannel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitpipechannel.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpipechannel.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitpipechannel.o `test -f 'src/bridge/cockpitpipechannel.c' || echo '$(srcdir)/'`src/bridge/cockpitpipechannel.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpipechannel.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpipechannel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitpipechannel.c' object='src/bridge/libcockpit_stub_a-cockpitpipechannel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitpipechannel.o `test -f 'src/bridge/cockpitpipechannel.c' || echo '$(srcdir)/'`src/bridge/cockpitpipechannel.c

src/bridge/libcockpit_stub_a-cockpitpipechannel.obj: src/bridge/cockpitpipechannel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitpipechannel.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpipechannel.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitpipechannel.obj `if test -f 'src/bridge/cockpitpipechannel.c'; then $(CYGPATH_W) 'src/bridge/cockpitpipechannel.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitpipechannel.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpipechannel.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpipechannel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitpipechannel.c' object='src/bridge/libcockpit_stub_a-cockpitpipechannel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitpipechannel.obj `if test -f 'src/bridge/cockpitpipechannel.c'; then $(CYGPATH_W) 'src/bridge/cockpitpipechannel.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitpipechannel.c'; fi`

src/bridge/libcockpit_stub_a-cockpithttpstream.o: src/bridge/cockpithttpstream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpithttpstream.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpithttpstream.Tpo -c -o src/bridge/libcockpit_stub_a-cockpithttpstream.o `test -f 'src/bridge/cockpithttpstream.c' || echo '$(srcdir)/'`src/bridge/cockpithttpstream.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpithttpstream.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpithttpstream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpithttpstream.c' object='src/bridge/libcockpit_stub_a-cockpithttpstream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpithttpstream.o `test -f 'src/bridge/cockpithttpstream.c' || echo '$(srcdir)/'`src/bridge/cockpithttpstream.c

src/bridge/libcockpit_stub_a-cockpithttpstream.obj: src/bridge/cockpithttpstream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpithttpstream.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpithttpstream.Tpo -c -o src/bridge/libcockpit_stub_a-cockpithttpstream.obj `if test -f 'src/bridge/cockpithttpstream.c'; then $(CYGPATH_W) 'src/bridge/cockpithttpstream.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpithttpstream.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpithttpstream.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpithttpstream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpithttpstream.c' object='src/bridge/libcockpit_stub_a-cockpithttpstream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpithttpstream.obj `if test -f 'src/bridge/cockpithttpstream.c'; then $(CYGPATH_W) 'src/bridge/cockpithttpstream.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpithttpstream.c'; fi`

src/bridge/libcockpit_stub_a-cockpitinteracttransport.o: src/bridge/cockpitinteracttransport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitinteracttransport.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitinteracttransport.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitinteracttransport.o `test -f 'src/bridge/cockpitinteracttransport.c' || echo '$(srcdir)/'`src/bridge/cockpitinteracttransport.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitinteracttransport.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitinteracttransport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitinteracttransport.c' object='src/bridge/libcockpit_stub_a-cockpitinteracttransport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitinteracttransport.o `test -f 'src/bridge/cockpitinteracttransport.c' || echo '$(srcdir)/'`src/bridge/cockpitinteracttransport.c

src/bridge/libcockpit_stub_a-cockpitinteracttransport.obj: src/bridge/cockpitinteracttransport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitinteracttransport.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitinteracttransport.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitinteracttransport.obj `if test -f 'src/bridge/cockpitinteracttransport.c'; then $(CYGPATH_W) 'src/bridge/cockpitinteracttransport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitinteracttransport.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitinteracttransport.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitinteracttransport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitinteracttransport.c' object='src/bridge/libcockpit_stub_a-cockpitinteracttransport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitinteracttransport.obj `if test -f 'src/bridge/cockpitinteracttransport.c'; then $(CYGPATH_W) 'src/bridge/cockpitinteracttransport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitinteracttransport.c'; fi`

src/bridge/libcockpit_stub_a-cockpitpackages.o: src/bridge/cockpitpackages.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitpackages.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpackages.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitpackages.o `test -f 'src/bridge/cockpitpackages.c' || echo '$(srcdir)/'`src/bridge/cockpitpackages.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpackages.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpackages.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitpackages.c' object='src/bridge/libcockpit_stub_a-cockpitpackages.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitpackages.o `test -f 'src/bridge/cockpitpackages.c' || echo '$(srcdir)/'`src/bridge/cockpitpackages.c

src/bridge/libcockpit_stub_a-cockpitpackages.obj: src/bridge/cockpitpackages.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitpackages.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpackages.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitpackages.obj `if test -f 'src/bridge/cockpitpackages.c'; then $(CYGPATH_W) 'src/bridge/cockpitpackages.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitpackages.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpackages.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpackages.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitpackages.c' object='src/bridge/libcockpit_stub_a-cockpitpackages.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitpackages.obj `if test -f 'src/bridge/cockpitpackages.c'; then $(CYGPATH_W) 'src/bridge/cockpitpackages.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitpackages.c'; fi`

src/bridge/libcockpit_stub_a-cockpitpaths.o: src/bridge/cockpitpaths.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitpaths.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpaths.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitpaths.o `test -f 'src/bridge/cockpitpaths.c' || echo '$(srcdir)/'`src/bridge/cockpitpaths.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpaths.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpaths.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitpaths.c' object='src/bridge/libcockpit_stub_a-cockpitpaths.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitpaths.o `test -f 'src/bridge/cockpitpaths.c' || echo '$(srcdir)/'`src/bridge/cockpitpaths.c

src/bridge/libcockpit_stub_a-cockpitpaths.obj: src/bridge/cockpitpaths.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitpaths.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpaths.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitpaths.obj `if test -f 'src/bridge/cockpitpaths.c'; then $(CYGPATH_W) 'src/bridge/cockpitpaths.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitpaths.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpaths.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpaths.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitpaths.c' object='src/bridge/libcockpit_stub_a-cockpitpaths.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitpaths.obj `if test -f 'src/bridge/cockpitpaths.c'; then $(CYGPATH_W) 'src/bridge/cockpitpaths.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitpaths.c'; fi`

src/bridge/libcockpit_stub_a-cockpitpeer.o: src/bridge/cockpitpeer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitpeer.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpeer.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitpeer.o `test -f 'src/bridge/cockpitpeer.c' || echo '$(srcdir)/'`src/bridge/cockpitpeer.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpeer.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpeer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitpeer.c' object='src/bridge/libcockpit_stub_a-cockpitpeer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitpeer.o `test -f 'src/bridge/cockpitpeer.c' || echo '$(srcdir)/'`src/bridge/cockpitpeer.c

src/bridge/libcockpit_stub_a-cockpitpeer.obj: src/bridge/cockpitpeer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitpeer.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpeer.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitpeer.obj `if test -f 'src/bridge/cockpitpeer.c'; then $(CYGPATH_W) 'src/bridge/cockpitpeer.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitpeer.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpeer.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitpeer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitpeer.c' object='src/bridge/libcockpit_stub_a-cockpitpeer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitpeer.obj `if test -f 'src/bridge/cockpitpeer.c'; then $(CYGPATH_W) 'src/bridge/cockpitpeer.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitpeer.c'; fi`

src/bridge/libcockpit_stub_a-cockpitnullchannel.o: src/bridge/cockpitnullchannel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitnullchannel.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitnullchannel.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitnullchannel.o `test -f 'src/bridge/cockpitnullchannel.c' || echo '$(srcdir)/'`src/bridge/cockpitnullchannel.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitnullchannel.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitnullchannel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitnullchannel.c' object='src/bridge/libcockpit_stub_a-cockpitnullchannel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitnullchannel.o `test -f 'src/bridge/cockpitnullchannel.c' || echo '$(srcdir)/'`src/bridge/cockpitnullchannel.c

src/bridge/libcockpit_stub_a-cockpitnullchannel.obj: src/bridge/cockpitnullchannel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitnullchannel.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitnullchannel.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitnullchannel.obj `if test -f 'src/bridge/cockpitnullchannel.c'; then $(CYGPATH_W) 'src/bridge/cockpitnullchannel.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitnullchannel.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitnullchannel.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitnullchannel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitnullchannel.c' object='src/bridge/libcockpit_stub_a-cockpitnullchannel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitnullchannel.obj `if test -f 'src/bridge/cockpitnullchannel.c'; then $(CYGPATH_W) 'src/bridge/cockpitnullchannel.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitnullchannel.c'; fi`

src/bridge/libcockpit_stub_a-cockpitrouter.o: src/bridge/cockpitrouter.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitrouter.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitrouter.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitrouter.o `test -f 'src/bridge/cockpitrouter.c' || echo '$(srcdir)/'`src/bridge/cockpitrouter.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitrouter.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitrouter.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitrouter.c' object='src/bridge/libcockpit_stub_a-cockpitrouter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitrouter.o `test -f 'src/bridge/cockpitrouter.c' || echo '$(srcdir)/'`src/bridge/cockpitrouter.c

src/bridge/libcockpit_stub_a-cockpitrouter.obj: src/bridge/cockpitrouter.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitrouter.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitrouter.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitrouter.obj `if test -f 'src/bridge/cockpitrouter.c'; then $(CYGPATH_W) 'src/bridge/cockpitrouter.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitrouter.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitrouter.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitrouter.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitrouter.c' object='src/bridge/libcockpit_stub_a-cockpitrouter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitrouter.obj `if test -f 'src/bridge/cockpitrouter.c'; then $(CYGPATH_W) 'src/bridge/cockpitrouter.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitrouter.c'; fi`

src/bridge/libcockpit_stub_a-cockpitstream.o: src/bridge/cockpitstream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitstream.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitstream.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitstream.o `test -f 'src/bridge/cockpitstream.c' || echo '$(srcdir)/'`src/bridge/cockpitstream.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitstream.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitstream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitstream.c' object='src/bridge/libcockpit_stub_a-cockpitstream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitstream.o `test -f 'src/bridge/cockpitstream.c' || echo '$(srcdir)/'`src/bridge/cockpitstream.c

src/bridge/libcockpit_stub_a-cockpitstream.obj: src/bridge/cockpitstream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitstream.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitstream.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitstream.obj `if test -f 'src/bridge/cockpitstream.c'; then $(CYGPATH_W) 'src/bridge/cockpitstream.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitstream.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitstream.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitstream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitstream.c' object='src/bridge/libcockpit_stub_a-cockpitstream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitstream.obj `if test -f 'src/bridge/cockpitstream.c'; then $(CYGPATH_W) 'src/bridge/cockpitstream.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitstream.c'; fi`

src/bridge/libcockpit_stub_a-cockpitwebsocketstream.o: src/bridge/cockpitwebsocketstream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitwebsocketstream.o -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitwebsocketstream.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitwebsocketstream.o `test -f 'src/bridge/cockpitwebsocketstream.c' || echo '$(srcdir)/'`src/bridge/cockpitwebsocketstream.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitwebsocketstream.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitwebsocketstream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitwebsocketstream.c' object='src/bridge/libcockpit_stub_a-cockpitwebsocketstream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitwebsocketstream.o `test -f 'src/bridge/cockpitwebsocketstream.c' || echo '$(srcdir)/'`src/bridge/cockpitwebsocketstream.c

src/bridge/libcockpit_stub_a-cockpitwebsocketstream.obj: src/bridge/cockpitwebsocketstream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -MT src/bridge/libcockpit_stub_a-cockpitwebsocketstream.obj -MD -MP -MF src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitwebsocketstream.Tpo -c -o src/bridge/libcockpit_stub_a-cockpitwebsocketstream.obj `if test -f 'src/bridge/cockpitwebsocketstream.c'; then $(CYGPATH_W) 'src/bridge/cockpitwebsocketstream.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitwebsocketstream.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitwebsocketstream.Tpo src/bridge/$(DEPDIR)/libcockpit_stub_a-cockpitwebsocketstream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitwebsocketstream.c' object='src/bridge/libcockpit_stub_a-cockpitwebsocketstream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_stub_a_CFLAGS) $(CFLAGS) -c -o src/bridge/libcockpit_stub_a-cockpitwebsocketstream.obj `if test -f 'src/bridge/cockpitwebsocketstream.c'; then $(CYGPATH_W) 'src/bridge/cockpitwebsocketstream.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitwebsocketstream.c'; fi`

src/ws/libcockpit_ws_a-cockpithandlers.o: src/ws/cockpithandlers.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -MT src/ws/libcockpit_ws_a-cockpithandlers.o -MD -MP -MF src/ws/$(DEPDIR)/libcockpit_ws_a-cockpithandlers.Tpo -c -o src/ws/libcockpit_ws_a-cockpithandlers.o `test -f 'src/ws/cockpithandlers.c' || echo '$(srcdir)/'`src/ws/cockpithandlers.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/libcockpit_ws_a-cockpithandlers.Tpo src/ws/$(DEPDIR)/libcockpit_ws_a-cockpithandlers.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpithandlers.c' object='src/ws/libcockpit_ws_a-cockpithandlers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -c -o src/ws/libcockpit_ws_a-cockpithandlers.o `test -f 'src/ws/cockpithandlers.c' || echo '$(srcdir)/'`src/ws/cockpithandlers.c

src/ws/libcockpit_ws_a-cockpithandlers.obj: src/ws/cockpithandlers.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -MT src/ws/libcockpit_ws_a-cockpithandlers.obj -MD -MP -MF src/ws/$(DEPDIR)/libcockpit_ws_a-cockpithandlers.Tpo -c -o src/ws/libcockpit_ws_a-cockpithandlers.obj `if test -f 'src/ws/cockpithandlers.c'; then $(CYGPATH_W) 'src/ws/cockpithandlers.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpithandlers.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/libcockpit_ws_a-cockpithandlers.Tpo src/ws/$(DEPDIR)/libcockpit_ws_a-cockpithandlers.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpithandlers.c' object='src/ws/libcockpit_ws_a-cockpithandlers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -c -o src/ws/libcockpit_ws_a-cockpithandlers.obj `if test -f 'src/ws/cockpithandlers.c'; then $(CYGPATH_W) 'src/ws/cockpithandlers.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpithandlers.c'; fi`

src/ws/libcockpit_ws_a-cockpitauth.o: src/ws/cockpitauth.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -MT src/ws/libcockpit_ws_a-cockpitauth.o -MD -MP -MF src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitauth.Tpo -c -o src/ws/libcockpit_ws_a-cockpitauth.o `test -f 'src/ws/cockpitauth.c' || echo '$(srcdir)/'`src/ws/cockpitauth.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitauth.Tpo src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitauth.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitauth.c' object='src/ws/libcockpit_ws_a-cockpitauth.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -c -o src/ws/libcockpit_ws_a-cockpitauth.o `test -f 'src/ws/cockpitauth.c' || echo '$(srcdir)/'`src/ws/cockpitauth.c

src/ws/libcockpit_ws_a-cockpitauth.obj: src/ws/cockpitauth.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -MT src/ws/libcockpit_ws_a-cockpitauth.obj -MD -MP -MF src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitauth.Tpo -c -o src/ws/libcockpit_ws_a-cockpitauth.obj `if test -f 'src/ws/cockpitauth.c'; then $(CYGPATH_W) 'src/ws/cockpitauth.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitauth.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitauth.Tpo src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitauth.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitauth.c' object='src/ws/libcockpit_ws_a-cockpitauth.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -c -o src/ws/libcockpit_ws_a-cockpitauth.obj `if test -f 'src/ws/cockpitauth.c'; then $(CYGPATH_W) 'src/ws/cockpitauth.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitauth.c'; fi`

src/ws/libcockpit_ws_a-cockpitcertificate.o: src/ws/cockpitcertificate.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -MT src/ws/libcockpit_ws_a-cockpitcertificate.o -MD -MP -MF src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcertificate.Tpo -c -o src/ws/libcockpit_ws_a-cockpitcertificate.o `test -f 'src/ws/cockpitcertificate.c' || echo '$(srcdir)/'`src/ws/cockpitcertificate.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcertificate.Tpo src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcertificate.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitcertificate.c' object='src/ws/libcockpit_ws_a-cockpitcertificate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -c -o src/ws/libcockpit_ws_a-cockpitcertificate.o `test -f 'src/ws/cockpitcertificate.c' || echo '$(srcdir)/'`src/ws/cockpitcertificate.c

src/ws/libcockpit_ws_a-cockpitcertificate.obj: src/ws/cockpitcertificate.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -MT src/ws/libcockpit_ws_a-cockpitcertificate.obj -MD -MP -MF src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcertificate.Tpo -c -o src/ws/libcockpit_ws_a-cockpitcertificate.obj `if test -f 'src/ws/cockpitcertificate.c'; then $(CYGPATH_W) 'src/ws/cockpitcertificate.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitcertificate.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcertificate.Tpo src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcertificate.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitcertificate.c' object='src/ws/libcockpit_ws_a-cockpitcertificate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -c -o src/ws/libcockpit_ws_a-cockpitcertificate.obj `if test -f 'src/ws/cockpitcertificate.c'; then $(CYGPATH_W) 'src/ws/cockpitcertificate.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitcertificate.c'; fi`

src/ws/libcockpit_ws_a-cockpitcompat.o: src/ws/cockpitcompat.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -MT src/ws/libcockpit_ws_a-cockpitcompat.o -MD -MP -MF src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcompat.Tpo -c -o src/ws/libcockpit_ws_a-cockpitcompat.o `test -f 'src/ws/cockpitcompat.c' || echo '$(srcdir)/'`src/ws/cockpitcompat.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcompat.Tpo src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcompat.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitcompat.c' object='src/ws/libcockpit_ws_a-cockpitcompat.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -c -o src/ws/libcockpit_ws_a-cockpitcompat.o `test -f 'src/ws/cockpitcompat.c' || echo '$(srcdir)/'`src/ws/cockpitcompat.c

src/ws/libcockpit_ws_a-cockpitcompat.obj: src/ws/cockpitcompat.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -MT src/ws/libcockpit_ws_a-cockpitcompat.obj -MD -MP -MF src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcompat.Tpo -c -o src/ws/libcockpit_ws_a-cockpitcompat.obj `if test -f 'src/ws/cockpitcompat.c'; then $(CYGPATH_W) 'src/ws/cockpitcompat.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitcompat.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcompat.Tpo src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcompat.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitcompat.c' object='src/ws/libcockpit_ws_a-cockpitcompat.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -c -o src/ws/libcockpit_ws_a-cockpitcompat.obj `if test -f 'src/ws/cockpitcompat.c'; then $(CYGPATH_W) 'src/ws/cockpitcompat.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitcompat.c'; fi`

src/ws/libcockpit_ws_a-cockpitbranding.o: src/ws/cockpitbranding.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -MT src/ws/libcockpit_ws_a-cockpitbranding.o -MD -MP -MF src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitbranding.Tpo -c -o src/ws/libcockpit_ws_a-cockpitbranding.o `test -f 'src/ws/cockpitbranding.c' || echo '$(srcdir)/'`src/ws/cockpitbranding.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitbranding.Tpo src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitbranding.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitbranding.c' object='src/ws/libcockpit_ws_a-cockpitbranding.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -c -o src/ws/libcockpit_ws_a-cockpitbranding.o `test -f 'src/ws/cockpitbranding.c' || echo '$(srcdir)/'`src/ws/cockpitbranding.c

src/ws/libcockpit_ws_a-cockpitbranding.obj: src/ws/cockpitbranding.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -MT src/ws/libcockpit_ws_a-cockpitbranding.obj -MD -MP -MF src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitbranding.Tpo -c -o src/ws/libcockpit_ws_a-cockpitbranding.obj `if test -f 'src/ws/cockpitbranding.c'; then $(CYGPATH_W) 'src/ws/cockpitbranding.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitbranding.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitbranding.Tpo src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitbranding.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitbranding.c' object='src/ws/libcockpit_ws_a-cockpitbranding.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -c -o src/ws/libcockpit_ws_a-cockpitbranding.obj `if test -f 'src/ws/cockpitbranding.c'; then $(CYGPATH_W) 'src/ws/cockpitbranding.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitbranding.c'; fi`

src/ws/libcockpit_ws_a-cockpitchannelresponse.o: src/ws/cockpitchannelresponse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -MT src/ws/libcockpit_ws_a-cockpitchannelresponse.o -MD -MP -MF src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitchannelresponse.Tpo -c -o src/ws/libcockpit_ws_a-cockpitchannelresponse.o `test -f 'src/ws/cockpitchannelresponse.c' || echo '$(srcdir)/'`src/ws/cockpitchannelresponse.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitchannelresponse.Tpo src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitchannelresponse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitchannelresponse.c' object='src/ws/libcockpit_ws_a-cockpitchannelresponse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -c -o src/ws/libcockpit_ws_a-cockpitchannelresponse.o `test -f 'src/ws/cockpitchannelresponse.c' || echo '$(srcdir)/'`src/ws/cockpitchannelresponse.c

src/ws/libcockpit_ws_a-cockpitchannelresponse.obj: src/ws/cockpitchannelresponse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -MT src/ws/libcockpit_ws_a-cockpitchannelresponse.obj -MD -MP -MF src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitchannelresponse.Tpo -c -o src/ws/libcockpit_ws_a-cockpitchannelresponse.obj `if test -f 'src/ws/cockpitchannelresponse.c'; then $(CYGPATH_W) 'src/ws/cockpitchannelresponse.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitchannelresponse.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitchannelresponse.Tpo src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitchannelresponse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitchannelresponse.c' object='src/ws/libcockpit_ws_a-cockpitchannelresponse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -c -o src/ws/libcockpit_ws_a-cockpitchannelresponse.obj `if test -f 'src/ws/cockpitchannelresponse.c'; then $(CYGPATH_W) 'src/ws/cockpitchannelresponse.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitchannelresponse.c'; fi`

src/ws/libcockpit_ws_a-cockpitchannelsocket.o: src/ws/cockpitchannelsocket.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -MT src/ws/libcockpit_ws_a-cockpitchannelsocket.o -MD -MP -MF src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitchannelsocket.Tpo -c -o src/ws/libcockpit_ws_a-cockpitchannelsocket.o `test -f 'src/ws/cockpitchannelsocket.c' || echo '$(srcdir)/'`src/ws/cockpitchannelsocket.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitchannelsocket.Tpo src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitchannelsocket.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitchannelsocket.c' object='src/ws/libcockpit_ws_a-cockpitchannelsocket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -c -o src/ws/libcockpit_ws_a-cockpitchannelsocket.o `test -f 'src/ws/cockpitchannelsocket.c' || echo '$(srcdir)/'`src/ws/cockpitchannelsocket.c

src/ws/libcockpit_ws_a-cockpitchannelsocket.obj: src/ws/cockpitchannelsocket.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -MT src/ws/libcockpit_ws_a-cockpitchannelsocket.obj -MD -MP -MF src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitchannelsocket.Tpo -c -o src/ws/libcockpit_ws_a-cockpitchannelsocket.obj `if test -f 'src/ws/cockpitchannelsocket.c'; then $(CYGPATH_W) 'src/ws/cockpitchannelsocket.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitchannelsocket.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitchannelsocket.Tpo src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitchannelsocket.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitchannelsocket.c' object='src/ws/libcockpit_ws_a-cockpitchannelsocket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -c -o src/ws/libcockpit_ws_a-cockpitchannelsocket.obj `if test -f 'src/ws/cockpitchannelsocket.c'; then $(CYGPATH_W) 'src/ws/cockpitchannelsocket.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitchannelsocket.c'; fi`

src/ws/libcockpit_ws_a-cockpitcreds.o: src/ws/cockpitcreds.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -MT src/ws/libcockpit_ws_a-cockpitcreds.o -MD -MP -MF src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcreds.Tpo -c -o src/ws/libcockpit_ws_a-cockpitcreds.o `test -f 'src/ws/cockpitcreds.c' || echo '$(srcdir)/'`src/ws/cockpitcreds.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcreds.Tpo src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcreds.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitcreds.c' object='src/ws/libcockpit_ws_a-cockpitcreds.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -c -o src/ws/libcockpit_ws_a-cockpitcreds.o `test -f 'src/ws/cockpitcreds.c' || echo '$(srcdir)/'`src/ws/cockpitcreds.c

src/ws/libcockpit_ws_a-cockpitcreds.obj: src/ws/cockpitcreds.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -MT src/ws/libcockpit_ws_a-cockpitcreds.obj -MD -MP -MF src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcreds.Tpo -c -o src/ws/libcockpit_ws_a-cockpitcreds.obj `if test -f 'src/ws/cockpitcreds.c'; then $(CYGPATH_W) 'src/ws/cockpitcreds.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitcreds.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcreds.Tpo src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitcreds.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitcreds.c' object='src/ws/libcockpit_ws_a-cockpitcreds.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -c -o src/ws/libcockpit_ws_a-cockpitcreds.obj `if test -f 'src/ws/cockpitcreds.c'; then $(CYGPATH_W) 'src/ws/cockpitcreds.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitcreds.c'; fi`

src/ws/libcockpit_ws_a-cockpitwebservice.o: src/ws/cockpitwebservice.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -MT src/ws/libcockpit_ws_a-cockpitwebservice.o -MD -MP -MF src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitwebservice.Tpo -c -o src/ws/libcockpit_ws_a-cockpitwebservice.o `test -f 'src/ws/cockpitwebservice.c' || echo '$(srcdir)/'`src/ws/cockpitwebservice.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitwebservice.Tpo src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitwebservice.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitwebservice.c' object='src/ws/libcockpit_ws_a-cockpitwebservice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -c -o src/ws/libcockpit_ws_a-cockpitwebservice.o `test -f 'src/ws/cockpitwebservice.c' || echo '$(srcdir)/'`src/ws/cockpitwebservice.c

src/ws/libcockpit_ws_a-cockpitwebservice.obj: src/ws/cockpitwebservice.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -MT src/ws/libcockpit_ws_a-cockpitwebservice.obj -MD -MP -MF src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitwebservice.Tpo -c -o src/ws/libcockpit_ws_a-cockpitwebservice.obj `if test -f 'src/ws/cockpitwebservice.c'; then $(CYGPATH_W) 'src/ws/cockpitwebservice.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitwebservice.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitwebservice.Tpo src/ws/$(DEPDIR)/libcockpit_ws_a-cockpitwebservice.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitwebservice.c' object='src/ws/libcockpit_ws_a-cockpitwebservice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libcockpit_ws_a_CFLAGS) $(CFLAGS) -c -o src/ws/libcockpit_ws_a-cockpitwebservice.obj `if test -f 'src/ws/cockpitwebservice.c'; then $(CYGPATH_W) 'src/ws/cockpitwebservice.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitwebservice.c'; fi`

src/pam-ssh-add/libpam_ssh_add_a-pam-ssh-add.o: src/pam-ssh-add/pam-ssh-add.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpam_ssh_add_a_CFLAGS) $(CFLAGS) -MT src/pam-ssh-add/libpam_ssh_add_a-pam-ssh-add.o -MD -MP -MF src/pam-ssh-add/$(DEPDIR)/libpam_ssh_add_a-pam-ssh-add.Tpo -c -o src/pam-ssh-add/libpam_ssh_add_a-pam-ssh-add.o `test -f 'src/pam-ssh-add/pam-ssh-add.c' || echo '$(srcdir)/'`src/pam-ssh-add/pam-ssh-add.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/pam-ssh-add/$(DEPDIR)/libpam_ssh_add_a-pam-ssh-add.Tpo src/pam-ssh-add/$(DEPDIR)/libpam_ssh_add_a-pam-ssh-add.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pam-ssh-add/pam-ssh-add.c' object='src/pam-ssh-add/libpam_ssh_add_a-pam-ssh-add.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpam_ssh_add_a_CFLAGS) $(CFLAGS) -c -o src/pam-ssh-add/libpam_ssh_add_a-pam-ssh-add.o `test -f 'src/pam-ssh-add/pam-ssh-add.c' || echo '$(srcdir)/'`src/pam-ssh-add/pam-ssh-add.c

src/pam-ssh-add/libpam_ssh_add_a-pam-ssh-add.obj: src/pam-ssh-add/pam-ssh-add.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpam_ssh_add_a_CFLAGS) $(CFLAGS) -MT src/pam-ssh-add/libpam_ssh_add_a-pam-ssh-add.obj -MD -MP -MF src/pam-ssh-add/$(DEPDIR)/libpam_ssh_add_a-pam-ssh-add.Tpo -c -o src/pam-ssh-add/libpam_ssh_add_a-pam-ssh-add.obj `if test -f 'src/pam-ssh-add/pam-ssh-add.c'; then $(CYGPATH_W) 'src/pam-ssh-add/pam-ssh-add.c'; else $(CYGPATH_W) '$(srcdir)/src/pam-ssh-add/pam-ssh-add.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/pam-ssh-add/$(DEPDIR)/libpam_ssh_add_a-pam-ssh-add.Tpo src/pam-ssh-add/$(DEPDIR)/libpam_ssh_add_a-pam-ssh-add.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pam-ssh-add/pam-ssh-add.c' object='src/pam-ssh-add/libpam_ssh_add_a-pam-ssh-add.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(libpam_ssh_add_a_CFLAGS) $(CFLAGS) -c -o src/pam-ssh-add/libpam_ssh_add_a-pam-ssh-add.obj `if test -f 'src/pam-ssh-add/pam-ssh-add.c'; then $(CYGPATH_W) 'src/pam-ssh-add/pam-ssh-add.c'; else $(CYGPATH_W) '$(srcdir)/src/pam-ssh-add/pam-ssh-add.c'; fi`

src/websocket/libwebsocket_a-websocket.o: src/websocket/websocket.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwebsocket_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/websocket/libwebsocket_a-websocket.o -MD -MP -MF src/websocket/$(DEPDIR)/libwebsocket_a-websocket.Tpo -c -o src/websocket/libwebsocket_a-websocket.o `test -f 'src/websocket/websocket.c' || echo '$(srcdir)/'`src/websocket/websocket.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/websocket/$(DEPDIR)/libwebsocket_a-websocket.Tpo src/websocket/$(DEPDIR)/libwebsocket_a-websocket.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/websocket/websocket.c' object='src/websocket/libwebsocket_a-websocket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwebsocket_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/websocket/libwebsocket_a-websocket.o `test -f 'src/websocket/websocket.c' || echo '$(srcdir)/'`src/websocket/websocket.c

src/websocket/libwebsocket_a-websocket.obj: src/websocket/websocket.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwebsocket_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/websocket/libwebsocket_a-websocket.obj -MD -MP -MF src/websocket/$(DEPDIR)/libwebsocket_a-websocket.Tpo -c -o src/websocket/libwebsocket_a-websocket.obj `if test -f 'src/websocket/websocket.c'; then $(CYGPATH_W) 'src/websocket/websocket.c'; else $(CYGPATH_W) '$(srcdir)/src/websocket/websocket.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/websocket/$(DEPDIR)/libwebsocket_a-websocket.Tpo src/websocket/$(DEPDIR)/libwebsocket_a-websocket.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/websocket/websocket.c' object='src/websocket/libwebsocket_a-websocket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwebsocket_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/websocket/libwebsocket_a-websocket.obj `if test -f 'src/websocket/websocket.c'; then $(CYGPATH_W) 'src/websocket/websocket.c'; else $(CYGPATH_W) '$(srcdir)/src/websocket/websocket.c'; fi`

src/websocket/libwebsocket_a-websocketclient.o: src/websocket/websocketclient.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwebsocket_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/websocket/libwebsocket_a-websocketclient.o -MD -MP -MF src/websocket/$(DEPDIR)/libwebsocket_a-websocketclient.Tpo -c -o src/websocket/libwebsocket_a-websocketclient.o `test -f 'src/websocket/websocketclient.c' || echo '$(srcdir)/'`src/websocket/websocketclient.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/websocket/$(DEPDIR)/libwebsocket_a-websocketclient.Tpo src/websocket/$(DEPDIR)/libwebsocket_a-websocketclient.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/websocket/websocketclient.c' object='src/websocket/libwebsocket_a-websocketclient.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwebsocket_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/websocket/libwebsocket_a-websocketclient.o `test -f 'src/websocket/websocketclient.c' || echo '$(srcdir)/'`src/websocket/websocketclient.c

src/websocket/libwebsocket_a-websocketclient.obj: src/websocket/websocketclient.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwebsocket_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/websocket/libwebsocket_a-websocketclient.obj -MD -MP -MF src/websocket/$(DEPDIR)/libwebsocket_a-websocketclient.Tpo -c -o src/websocket/libwebsocket_a-websocketclient.obj `if test -f 'src/websocket/websocketclient.c'; then $(CYGPATH_W) 'src/websocket/websocketclient.c'; else $(CYGPATH_W) '$(srcdir)/src/websocket/websocketclient.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/websocket/$(DEPDIR)/libwebsocket_a-websocketclient.Tpo src/websocket/$(DEPDIR)/libwebsocket_a-websocketclient.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/websocket/websocketclient.c' object='src/websocket/libwebsocket_a-websocketclient.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwebsocket_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/websocket/libwebsocket_a-websocketclient.obj `if test -f 'src/websocket/websocketclient.c'; then $(CYGPATH_W) 'src/websocket/websocketclient.c'; else $(CYGPATH_W) '$(srcdir)/src/websocket/websocketclient.c'; fi`

src/websocket/libwebsocket_a-websocketserver.o: src/websocket/websocketserver.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwebsocket_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/websocket/libwebsocket_a-websocketserver.o -MD -MP -MF src/websocket/$(DEPDIR)/libwebsocket_a-websocketserver.Tpo -c -o src/websocket/libwebsocket_a-websocketserver.o `test -f 'src/websocket/websocketserver.c' || echo '$(srcdir)/'`src/websocket/websocketserver.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/websocket/$(DEPDIR)/libwebsocket_a-websocketserver.Tpo src/websocket/$(DEPDIR)/libwebsocket_a-websocketserver.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/websocket/websocketserver.c' object='src/websocket/libwebsocket_a-websocketserver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwebsocket_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/websocket/libwebsocket_a-websocketserver.o `test -f 'src/websocket/websocketserver.c' || echo '$(srcdir)/'`src/websocket/websocketserver.c

src/websocket/libwebsocket_a-websocketserver.obj: src/websocket/websocketserver.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwebsocket_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/websocket/libwebsocket_a-websocketserver.obj -MD -MP -MF src/websocket/$(DEPDIR)/libwebsocket_a-websocketserver.Tpo -c -o src/websocket/libwebsocket_a-websocketserver.obj `if test -f 'src/websocket/websocketserver.c'; then $(CYGPATH_W) 'src/websocket/websocketserver.c'; else $(CYGPATH_W) '$(srcdir)/src/websocket/websocketserver.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/websocket/$(DEPDIR)/libwebsocket_a-websocketserver.Tpo src/websocket/$(DEPDIR)/libwebsocket_a-websocketserver.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/websocket/websocketserver.c' object='src/websocket/libwebsocket_a-websocketserver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwebsocket_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/websocket/libwebsocket_a-websocketserver.obj `if test -f 'src/websocket/websocketserver.c'; then $(CYGPATH_W) 'src/websocket/websocketserver.c'; else $(CYGPATH_W) '$(srcdir)/src/websocket/websocketserver.c'; fi`

src/websocket/libwebsocket_a-websocketconnection.o: src/websocket/websocketconnection.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwebsocket_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/websocket/libwebsocket_a-websocketconnection.o -MD -MP -MF src/websocket/$(DEPDIR)/libwebsocket_a-websocketconnection.Tpo -c -o src/websocket/libwebsocket_a-websocketconnection.o `test -f 'src/websocket/websocketconnection.c' || echo '$(srcdir)/'`src/websocket/websocketconnection.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/websocket/$(DEPDIR)/libwebsocket_a-websocketconnection.Tpo src/websocket/$(DEPDIR)/libwebsocket_a-websocketconnection.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/websocket/websocketconnection.c' object='src/websocket/libwebsocket_a-websocketconnection.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwebsocket_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/websocket/libwebsocket_a-websocketconnection.o `test -f 'src/websocket/websocketconnection.c' || echo '$(srcdir)/'`src/websocket/websocketconnection.c

src/websocket/libwebsocket_a-websocketconnection.obj: src/websocket/websocketconnection.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwebsocket_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/websocket/libwebsocket_a-websocketconnection.obj -MD -MP -MF src/websocket/$(DEPDIR)/libwebsocket_a-websocketconnection.Tpo -c -o src/websocket/libwebsocket_a-websocketconnection.obj `if test -f 'src/websocket/websocketconnection.c'; then $(CYGPATH_W) 'src/websocket/websocketconnection.c'; else $(CYGPATH_W) '$(srcdir)/src/websocket/websocketconnection.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/websocket/$(DEPDIR)/libwebsocket_a-websocketconnection.Tpo src/websocket/$(DEPDIR)/libwebsocket_a-websocketconnection.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/websocket/websocketconnection.c' object='src/websocket/libwebsocket_a-websocketconnection.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(libwebsocket_a_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/websocket/libwebsocket_a-websocketconnection.obj `if test -f 'src/websocket/websocketconnection.c'; then $(CYGPATH_W) 'src/websocket/websocketconnection.c'; else $(CYGPATH_W) '$(srcdir)/src/websocket/websocketconnection.c'; fi`

src/bridge/cockpit_askpass-askpass.o: src/bridge/askpass.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_askpass_CFLAGS) $(CFLAGS) -MT src/bridge/cockpit_askpass-askpass.o -MD -MP -MF src/bridge/$(DEPDIR)/cockpit_askpass-askpass.Tpo -c -o src/bridge/cockpit_askpass-askpass.o `test -f 'src/bridge/askpass.c' || echo '$(srcdir)/'`src/bridge/askpass.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/cockpit_askpass-askpass.Tpo src/bridge/$(DEPDIR)/cockpit_askpass-askpass.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/askpass.c' object='src/bridge/cockpit_askpass-askpass.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_askpass_CFLAGS) $(CFLAGS) -c -o src/bridge/cockpit_askpass-askpass.o `test -f 'src/bridge/askpass.c' || echo '$(srcdir)/'`src/bridge/askpass.c

src/bridge/cockpit_askpass-askpass.obj: src/bridge/askpass.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_askpass_CFLAGS) $(CFLAGS) -MT src/bridge/cockpit_askpass-askpass.obj -MD -MP -MF src/bridge/$(DEPDIR)/cockpit_askpass-askpass.Tpo -c -o src/bridge/cockpit_askpass-askpass.obj `if test -f 'src/bridge/askpass.c'; then $(CYGPATH_W) 'src/bridge/askpass.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/askpass.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/cockpit_askpass-askpass.Tpo src/bridge/$(DEPDIR)/cockpit_askpass-askpass.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/askpass.c' object='src/bridge/cockpit_askpass-askpass.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_askpass_CFLAGS) $(CFLAGS) -c -o src/bridge/cockpit_askpass-askpass.obj `if test -f 'src/bridge/askpass.c'; then $(CYGPATH_W) 'src/bridge/askpass.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/askpass.c'; fi`

src/bridge/cockpit_bridge-bridge.o: src/bridge/bridge.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_bridge_CFLAGS) $(CFLAGS) -MT src/bridge/cockpit_bridge-bridge.o -MD -MP -MF src/bridge/$(DEPDIR)/cockpit_bridge-bridge.Tpo -c -o src/bridge/cockpit_bridge-bridge.o `test -f 'src/bridge/bridge.c' || echo '$(srcdir)/'`src/bridge/bridge.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/cockpit_bridge-bridge.Tpo src/bridge/$(DEPDIR)/cockpit_bridge-bridge.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/bridge.c' object='src/bridge/cockpit_bridge-bridge.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_bridge_CFLAGS) $(CFLAGS) -c -o src/bridge/cockpit_bridge-bridge.o `test -f 'src/bridge/bridge.c' || echo '$(srcdir)/'`src/bridge/bridge.c

src/bridge/cockpit_bridge-bridge.obj: src/bridge/bridge.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_bridge_CFLAGS) $(CFLAGS) -MT src/bridge/cockpit_bridge-bridge.obj -MD -MP -MF src/bridge/$(DEPDIR)/cockpit_bridge-bridge.Tpo -c -o src/bridge/cockpit_bridge-bridge.obj `if test -f 'src/bridge/bridge.c'; then $(CYGPATH_W) 'src/bridge/bridge.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/bridge.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/cockpit_bridge-bridge.Tpo src/bridge/$(DEPDIR)/cockpit_bridge-bridge.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/bridge.c' object='src/bridge/cockpit_bridge-bridge.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_bridge_CFLAGS) $(CFLAGS) -c -o src/bridge/cockpit_bridge-bridge.obj `if test -f 'src/bridge/bridge.c'; then $(CYGPATH_W) 'src/bridge/bridge.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/bridge.c'; fi`

src/bridge/cockpit_pcp-cockpitpcp.o: src/bridge/cockpitpcp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_pcp_CFLAGS) $(CFLAGS) -MT src/bridge/cockpit_pcp-cockpitpcp.o -MD -MP -MF src/bridge/$(DEPDIR)/cockpit_pcp-cockpitpcp.Tpo -c -o src/bridge/cockpit_pcp-cockpitpcp.o `test -f 'src/bridge/cockpitpcp.c' || echo '$(srcdir)/'`src/bridge/cockpitpcp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/cockpit_pcp-cockpitpcp.Tpo src/bridge/$(DEPDIR)/cockpit_pcp-cockpitpcp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitpcp.c' object='src/bridge/cockpit_pcp-cockpitpcp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_pcp_CFLAGS) $(CFLAGS) -c -o src/bridge/cockpit_pcp-cockpitpcp.o `test -f 'src/bridge/cockpitpcp.c' || echo '$(srcdir)/'`src/bridge/cockpitpcp.c

src/bridge/cockpit_pcp-cockpitpcp.obj: src/bridge/cockpitpcp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_pcp_CFLAGS) $(CFLAGS) -MT src/bridge/cockpit_pcp-cockpitpcp.obj -MD -MP -MF src/bridge/$(DEPDIR)/cockpit_pcp-cockpitpcp.Tpo -c -o src/bridge/cockpit_pcp-cockpitpcp.obj `if test -f 'src/bridge/cockpitpcp.c'; then $(CYGPATH_W) 'src/bridge/cockpitpcp.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitpcp.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/cockpit_pcp-cockpitpcp.Tpo src/bridge/$(DEPDIR)/cockpit_pcp-cockpitpcp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/cockpitpcp.c' object='src/bridge/cockpit_pcp-cockpitpcp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_pcp_CFLAGS) $(CFLAGS) -c -o src/bridge/cockpit_pcp-cockpitpcp.obj `if test -f 'src/bridge/cockpitpcp.c'; then $(CYGPATH_W) 'src/bridge/cockpitpcp.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/cockpitpcp.c'; fi`

src/ssh/cockpit_ssh-ssh.o: src/ssh/ssh.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_ssh_CFLAGS) $(CFLAGS) -MT src/ssh/cockpit_ssh-ssh.o -MD -MP -MF src/ssh/$(DEPDIR)/cockpit_ssh-ssh.Tpo -c -o src/ssh/cockpit_ssh-ssh.o `test -f 'src/ssh/ssh.c' || echo '$(srcdir)/'`src/ssh/ssh.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ssh/$(DEPDIR)/cockpit_ssh-ssh.Tpo src/ssh/$(DEPDIR)/cockpit_ssh-ssh.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ssh/ssh.c' object='src/ssh/cockpit_ssh-ssh.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_ssh_CFLAGS) $(CFLAGS) -c -o src/ssh/cockpit_ssh-ssh.o `test -f 'src/ssh/ssh.c' || echo '$(srcdir)/'`src/ssh/ssh.c

src/ssh/cockpit_ssh-ssh.obj: src/ssh/ssh.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_ssh_CFLAGS) $(CFLAGS) -MT src/ssh/cockpit_ssh-ssh.obj -MD -MP -MF src/ssh/$(DEPDIR)/cockpit_ssh-ssh.Tpo -c -o src/ssh/cockpit_ssh-ssh.obj `if test -f 'src/ssh/ssh.c'; then $(CYGPATH_W) 'src/ssh/ssh.c'; else $(CYGPATH_W) '$(srcdir)/src/ssh/ssh.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ssh/$(DEPDIR)/cockpit_ssh-ssh.Tpo src/ssh/$(DEPDIR)/cockpit_ssh-ssh.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ssh/ssh.c' object='src/ssh/cockpit_ssh-ssh.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_ssh_CFLAGS) $(CFLAGS) -c -o src/ssh/cockpit_ssh-ssh.obj `if test -f 'src/ssh/ssh.c'; then $(CYGPATH_W) 'src/ssh/ssh.c'; else $(CYGPATH_W) '$(srcdir)/src/ssh/ssh.c'; fi`

src/bridge/cockpit_stub-stub.o: src/bridge/stub.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_stub_CFLAGS) $(CFLAGS) -MT src/bridge/cockpit_stub-stub.o -MD -MP -MF src/bridge/$(DEPDIR)/cockpit_stub-stub.Tpo -c -o src/bridge/cockpit_stub-stub.o `test -f 'src/bridge/stub.c' || echo '$(srcdir)/'`src/bridge/stub.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/cockpit_stub-stub.Tpo src/bridge/$(DEPDIR)/cockpit_stub-stub.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/stub.c' object='src/bridge/cockpit_stub-stub.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_stub_CFLAGS) $(CFLAGS) -c -o src/bridge/cockpit_stub-stub.o `test -f 'src/bridge/stub.c' || echo '$(srcdir)/'`src/bridge/stub.c

src/bridge/cockpit_stub-stub.obj: src/bridge/stub.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_stub_CFLAGS) $(CFLAGS) -MT src/bridge/cockpit_stub-stub.obj -MD -MP -MF src/bridge/$(DEPDIR)/cockpit_stub-stub.Tpo -c -o src/bridge/cockpit_stub-stub.obj `if test -f 'src/bridge/stub.c'; then $(CYGPATH_W) 'src/bridge/stub.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/stub.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/cockpit_stub-stub.Tpo src/bridge/$(DEPDIR)/cockpit_stub-stub.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/stub.c' object='src/bridge/cockpit_stub-stub.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_stub_CFLAGS) $(CFLAGS) -c -o src/bridge/cockpit_stub-stub.obj `if test -f 'src/bridge/stub.c'; then $(CYGPATH_W) 'src/bridge/stub.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/stub.c'; fi`

src/ws/cockpit_ws-main.o: src/ws/main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_ws_CFLAGS) $(CFLAGS) -MT src/ws/cockpit_ws-main.o -MD -MP -MF src/ws/$(DEPDIR)/cockpit_ws-main.Tpo -c -o src/ws/cockpit_ws-main.o `test -f 'src/ws/main.c' || echo '$(srcdir)/'`src/ws/main.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/cockpit_ws-main.Tpo src/ws/$(DEPDIR)/cockpit_ws-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/main.c' object='src/ws/cockpit_ws-main.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_ws_CFLAGS) $(CFLAGS) -c -o src/ws/cockpit_ws-main.o `test -f 'src/ws/main.c' || echo '$(srcdir)/'`src/ws/main.c

src/ws/cockpit_ws-main.obj: src/ws/main.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_ws_CFLAGS) $(CFLAGS) -MT src/ws/cockpit_ws-main.obj -MD -MP -MF src/ws/$(DEPDIR)/cockpit_ws-main.Tpo -c -o src/ws/cockpit_ws-main.obj `if test -f 'src/ws/main.c'; then $(CYGPATH_W) 'src/ws/main.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/main.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/cockpit_ws-main.Tpo src/ws/$(DEPDIR)/cockpit_ws-main.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/main.c' object='src/ws/cockpit_ws-main.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(cockpit_ws_CFLAGS) $(CFLAGS) -c -o src/ws/cockpit_ws-main.obj `if test -f 'src/ws/main.c'; then $(CYGPATH_W) 'src/ws/main.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/main.c'; fi`

src/websocket/frob_websocket-frob-websocket.o: src/websocket/frob-websocket.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frob_websocket_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/websocket/frob_websocket-frob-websocket.o -MD -MP -MF src/websocket/$(DEPDIR)/frob_websocket-frob-websocket.Tpo -c -o src/websocket/frob_websocket-frob-websocket.o `test -f 'src/websocket/frob-websocket.c' || echo '$(srcdir)/'`src/websocket/frob-websocket.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/websocket/$(DEPDIR)/frob_websocket-frob-websocket.Tpo src/websocket/$(DEPDIR)/frob_websocket-frob-websocket.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/websocket/frob-websocket.c' object='src/websocket/frob_websocket-frob-websocket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frob_websocket_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/websocket/frob_websocket-frob-websocket.o `test -f 'src/websocket/frob-websocket.c' || echo '$(srcdir)/'`src/websocket/frob-websocket.c

src/websocket/frob_websocket-frob-websocket.obj: src/websocket/frob-websocket.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frob_websocket_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/websocket/frob_websocket-frob-websocket.obj -MD -MP -MF src/websocket/$(DEPDIR)/frob_websocket-frob-websocket.Tpo -c -o src/websocket/frob_websocket-frob-websocket.obj `if test -f 'src/websocket/frob-websocket.c'; then $(CYGPATH_W) 'src/websocket/frob-websocket.c'; else $(CYGPATH_W) '$(srcdir)/src/websocket/frob-websocket.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/websocket/$(DEPDIR)/frob_websocket-frob-websocket.Tpo src/websocket/$(DEPDIR)/frob_websocket-frob-websocket.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/websocket/frob-websocket.c' object='src/websocket/frob_websocket-frob-websocket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(frob_websocket_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/websocket/frob_websocket-frob-websocket.obj `if test -f 'src/websocket/frob-websocket.c'; then $(CYGPATH_W) 'src/websocket/frob-websocket.c'; else $(CYGPATH_W) '$(srcdir)/src/websocket/frob-websocket.c'; fi`

src/bridge/mock_bridge-mock-bridge.o: src/bridge/mock-bridge.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mock_bridge_CFLAGS) $(CFLAGS) -MT src/bridge/mock_bridge-mock-bridge.o -MD -MP -MF src/bridge/$(DEPDIR)/mock_bridge-mock-bridge.Tpo -c -o src/bridge/mock_bridge-mock-bridge.o `test -f 'src/bridge/mock-bridge.c' || echo '$(srcdir)/'`src/bridge/mock-bridge.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/mock_bridge-mock-bridge.Tpo src/bridge/$(DEPDIR)/mock_bridge-mock-bridge.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-bridge.c' object='src/bridge/mock_bridge-mock-bridge.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mock_bridge_CFLAGS) $(CFLAGS) -c -o src/bridge/mock_bridge-mock-bridge.o `test -f 'src/bridge/mock-bridge.c' || echo '$(srcdir)/'`src/bridge/mock-bridge.c

src/bridge/mock_bridge-mock-bridge.obj: src/bridge/mock-bridge.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mock_bridge_CFLAGS) $(CFLAGS) -MT src/bridge/mock_bridge-mock-bridge.obj -MD -MP -MF src/bridge/$(DEPDIR)/mock_bridge-mock-bridge.Tpo -c -o src/bridge/mock_bridge-mock-bridge.obj `if test -f 'src/bridge/mock-bridge.c'; then $(CYGPATH_W) 'src/bridge/mock-bridge.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-bridge.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/mock_bridge-mock-bridge.Tpo src/bridge/$(DEPDIR)/mock_bridge-mock-bridge.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-bridge.c' object='src/bridge/mock_bridge-mock-bridge.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mock_bridge_CFLAGS) $(CFLAGS) -c -o src/bridge/mock_bridge-mock-bridge.obj `if test -f 'src/bridge/mock-bridge.c'; then $(CYGPATH_W) 'src/bridge/mock-bridge.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-bridge.c'; fi`

src/ws/mock_echo-mock-echo.o: src/ws/mock-echo.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mock_echo_CFLAGS) $(CFLAGS) -MT src/ws/mock_echo-mock-echo.o -MD -MP -MF src/ws/$(DEPDIR)/mock_echo-mock-echo.Tpo -c -o src/ws/mock_echo-mock-echo.o `test -f 'src/ws/mock-echo.c' || echo '$(srcdir)/'`src/ws/mock-echo.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/mock_echo-mock-echo.Tpo src/ws/$(DEPDIR)/mock_echo-mock-echo.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/mock-echo.c' object='src/ws/mock_echo-mock-echo.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mock_echo_CFLAGS) $(CFLAGS) -c -o src/ws/mock_echo-mock-echo.o `test -f 'src/ws/mock-echo.c' || echo '$(srcdir)/'`src/ws/mock-echo.c

src/ws/mock_echo-mock-echo.obj: src/ws/mock-echo.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mock_echo_CFLAGS) $(CFLAGS) -MT src/ws/mock_echo-mock-echo.obj -MD -MP -MF src/ws/$(DEPDIR)/mock_echo-mock-echo.Tpo -c -o src/ws/mock_echo-mock-echo.obj `if test -f 'src/ws/mock-echo.c'; then $(CYGPATH_W) 'src/ws/mock-echo.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/mock-echo.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/mock_echo-mock-echo.Tpo src/ws/$(DEPDIR)/mock_echo-mock-echo.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/mock-echo.c' object='src/ws/mock_echo-mock-echo.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mock_echo_CFLAGS) $(CFLAGS) -c -o src/ws/mock_echo-mock-echo.obj `if test -f 'src/ws/mock-echo.c'; then $(CYGPATH_W) 'src/ws/mock-echo.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/mock-echo.c'; fi`

src/ssh/mock_sshd-mock-sshd.o: src/ssh/mock-sshd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mock_sshd_CFLAGS) $(CFLAGS) -MT src/ssh/mock_sshd-mock-sshd.o -MD -MP -MF src/ssh/$(DEPDIR)/mock_sshd-mock-sshd.Tpo -c -o src/ssh/mock_sshd-mock-sshd.o `test -f 'src/ssh/mock-sshd.c' || echo '$(srcdir)/'`src/ssh/mock-sshd.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ssh/$(DEPDIR)/mock_sshd-mock-sshd.Tpo src/ssh/$(DEPDIR)/mock_sshd-mock-sshd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ssh/mock-sshd.c' object='src/ssh/mock_sshd-mock-sshd.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mock_sshd_CFLAGS) $(CFLAGS) -c -o src/ssh/mock_sshd-mock-sshd.o `test -f 'src/ssh/mock-sshd.c' || echo '$(srcdir)/'`src/ssh/mock-sshd.c

src/ssh/mock_sshd-mock-sshd.obj: src/ssh/mock-sshd.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mock_sshd_CFLAGS) $(CFLAGS) -MT src/ssh/mock_sshd-mock-sshd.obj -MD -MP -MF src/ssh/$(DEPDIR)/mock_sshd-mock-sshd.Tpo -c -o src/ssh/mock_sshd-mock-sshd.obj `if test -f 'src/ssh/mock-sshd.c'; then $(CYGPATH_W) 'src/ssh/mock-sshd.c'; else $(CYGPATH_W) '$(srcdir)/src/ssh/mock-sshd.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ssh/$(DEPDIR)/mock_sshd-mock-sshd.Tpo src/ssh/$(DEPDIR)/mock_sshd-mock-sshd.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ssh/mock-sshd.c' object='src/ssh/mock_sshd-mock-sshd.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(mock_sshd_CFLAGS) $(CFLAGS) -c -o src/ssh/mock_sshd-mock-sshd.obj `if test -f 'src/ssh/mock-sshd.c'; then $(CYGPATH_W) 'src/ssh/mock-sshd.c'; else $(CYGPATH_W) '$(srcdir)/src/ssh/mock-sshd.c'; fi`

src/ws/remotectl-cockpitcertificate.o: src/ws/cockpitcertificate.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(remotectl_CFLAGS) $(CFLAGS) -MT src/ws/remotectl-cockpitcertificate.o -MD -MP -MF src/ws/$(DEPDIR)/remotectl-cockpitcertificate.Tpo -c -o src/ws/remotectl-cockpitcertificate.o `test -f 'src/ws/cockpitcertificate.c' || echo '$(srcdir)/'`src/ws/cockpitcertificate.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/remotectl-cockpitcertificate.Tpo src/ws/$(DEPDIR)/remotectl-cockpitcertificate.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitcertificate.c' object='src/ws/remotectl-cockpitcertificate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(remotectl_CFLAGS) $(CFLAGS) -c -o src/ws/remotectl-cockpitcertificate.o `test -f 'src/ws/cockpitcertificate.c' || echo '$(srcdir)/'`src/ws/cockpitcertificate.c

src/ws/remotectl-cockpitcertificate.obj: src/ws/cockpitcertificate.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(remotectl_CFLAGS) $(CFLAGS) -MT src/ws/remotectl-cockpitcertificate.obj -MD -MP -MF src/ws/$(DEPDIR)/remotectl-cockpitcertificate.Tpo -c -o src/ws/remotectl-cockpitcertificate.obj `if test -f 'src/ws/cockpitcertificate.c'; then $(CYGPATH_W) 'src/ws/cockpitcertificate.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitcertificate.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/remotectl-cockpitcertificate.Tpo src/ws/$(DEPDIR)/remotectl-cockpitcertificate.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitcertificate.c' object='src/ws/remotectl-cockpitcertificate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(remotectl_CFLAGS) $(CFLAGS) -c -o src/ws/remotectl-cockpitcertificate.obj `if test -f 'src/ws/cockpitcertificate.c'; then $(CYGPATH_W) 'src/ws/cockpitcertificate.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitcertificate.c'; fi`

src/ws/remotectl-remotectl-certificate.o: src/ws/remotectl-certificate.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(remotectl_CFLAGS) $(CFLAGS) -MT src/ws/remotectl-remotectl-certificate.o -MD -MP -MF src/ws/$(DEPDIR)/remotectl-remotectl-certificate.Tpo -c -o src/ws/remotectl-remotectl-certificate.o `test -f 'src/ws/remotectl-certificate.c' || echo '$(srcdir)/'`src/ws/remotectl-certificate.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/remotectl-remotectl-certificate.Tpo src/ws/$(DEPDIR)/remotectl-remotectl-certificate.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/remotectl-certificate.c' object='src/ws/remotectl-remotectl-certificate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(remotectl_CFLAGS) $(CFLAGS) -c -o src/ws/remotectl-remotectl-certificate.o `test -f 'src/ws/remotectl-certificate.c' || echo '$(srcdir)/'`src/ws/remotectl-certificate.c

src/ws/remotectl-remotectl-certificate.obj: src/ws/remotectl-certificate.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(remotectl_CFLAGS) $(CFLAGS) -MT src/ws/remotectl-remotectl-certificate.obj -MD -MP -MF src/ws/$(DEPDIR)/remotectl-remotectl-certificate.Tpo -c -o src/ws/remotectl-remotectl-certificate.obj `if test -f 'src/ws/remotectl-certificate.c'; then $(CYGPATH_W) 'src/ws/remotectl-certificate.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/remotectl-certificate.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/remotectl-remotectl-certificate.Tpo src/ws/$(DEPDIR)/remotectl-remotectl-certificate.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/remotectl-certificate.c' object='src/ws/remotectl-remotectl-certificate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(remotectl_CFLAGS) $(CFLAGS) -c -o src/ws/remotectl-remotectl-certificate.obj `if test -f 'src/ws/remotectl-certificate.c'; then $(CYGPATH_W) 'src/ws/remotectl-certificate.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/remotectl-certificate.c'; fi`

src/ws/remotectl-remotectl.o: src/ws/remotectl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(remotectl_CFLAGS) $(CFLAGS) -MT src/ws/remotectl-remotectl.o -MD -MP -MF src/ws/$(DEPDIR)/remotectl-remotectl.Tpo -c -o src/ws/remotectl-remotectl.o `test -f 'src/ws/remotectl.c' || echo '$(srcdir)/'`src/ws/remotectl.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/remotectl-remotectl.Tpo src/ws/$(DEPDIR)/remotectl-remotectl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/remotectl.c' object='src/ws/remotectl-remotectl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(remotectl_CFLAGS) $(CFLAGS) -c -o src/ws/remotectl-remotectl.o `test -f 'src/ws/remotectl.c' || echo '$(srcdir)/'`src/ws/remotectl.c

src/ws/remotectl-remotectl.obj: src/ws/remotectl.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(remotectl_CFLAGS) $(CFLAGS) -MT src/ws/remotectl-remotectl.obj -MD -MP -MF src/ws/$(DEPDIR)/remotectl-remotectl.Tpo -c -o src/ws/remotectl-remotectl.obj `if test -f 'src/ws/remotectl.c'; then $(CYGPATH_W) 'src/ws/remotectl.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/remotectl.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/remotectl-remotectl.Tpo src/ws/$(DEPDIR)/remotectl-remotectl.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/remotectl.c' object='src/ws/remotectl-remotectl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(remotectl_CFLAGS) $(CFLAGS) -c -o src/ws/remotectl-remotectl.obj `if test -f 'src/ws/remotectl.c'; then $(CYGPATH_W) 'src/ws/remotectl.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/remotectl.c'; fi`

src/ws/test_auth-test-auth.o: src/ws/test-auth.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_auth_CFLAGS) $(CFLAGS) -MT src/ws/test_auth-test-auth.o -MD -MP -MF src/ws/$(DEPDIR)/test_auth-test-auth.Tpo -c -o src/ws/test_auth-test-auth.o `test -f 'src/ws/test-auth.c' || echo '$(srcdir)/'`src/ws/test-auth.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_auth-test-auth.Tpo src/ws/$(DEPDIR)/test_auth-test-auth.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-auth.c' object='src/ws/test_auth-test-auth.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_auth_CFLAGS) $(CFLAGS) -c -o src/ws/test_auth-test-auth.o `test -f 'src/ws/test-auth.c' || echo '$(srcdir)/'`src/ws/test-auth.c

src/ws/test_auth-test-auth.obj: src/ws/test-auth.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_auth_CFLAGS) $(CFLAGS) -MT src/ws/test_auth-test-auth.obj -MD -MP -MF src/ws/$(DEPDIR)/test_auth-test-auth.Tpo -c -o src/ws/test_auth-test-auth.obj `if test -f 'src/ws/test-auth.c'; then $(CYGPATH_W) 'src/ws/test-auth.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-auth.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_auth-test-auth.Tpo src/ws/$(DEPDIR)/test_auth-test-auth.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-auth.c' object='src/ws/test_auth-test-auth.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_auth_CFLAGS) $(CFLAGS) -c -o src/ws/test_auth-test-auth.obj `if test -f 'src/ws/test-auth.c'; then $(CYGPATH_W) 'src/ws/test-auth.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-auth.c'; fi`

src/ws/test_auth-mock-auth.o: src/ws/mock-auth.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_auth_CFLAGS) $(CFLAGS) -MT src/ws/test_auth-mock-auth.o -MD -MP -MF src/ws/$(DEPDIR)/test_auth-mock-auth.Tpo -c -o src/ws/test_auth-mock-auth.o `test -f 'src/ws/mock-auth.c' || echo '$(srcdir)/'`src/ws/mock-auth.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_auth-mock-auth.Tpo src/ws/$(DEPDIR)/test_auth-mock-auth.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/mock-auth.c' object='src/ws/test_auth-mock-auth.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_auth_CFLAGS) $(CFLAGS) -c -o src/ws/test_auth-mock-auth.o `test -f 'src/ws/mock-auth.c' || echo '$(srcdir)/'`src/ws/mock-auth.c

src/ws/test_auth-mock-auth.obj: src/ws/mock-auth.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_auth_CFLAGS) $(CFLAGS) -MT src/ws/test_auth-mock-auth.obj -MD -MP -MF src/ws/$(DEPDIR)/test_auth-mock-auth.Tpo -c -o src/ws/test_auth-mock-auth.obj `if test -f 'src/ws/mock-auth.c'; then $(CYGPATH_W) 'src/ws/mock-auth.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/mock-auth.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_auth-mock-auth.Tpo src/ws/$(DEPDIR)/test_auth-mock-auth.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/mock-auth.c' object='src/ws/test_auth-mock-auth.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_auth_CFLAGS) $(CFLAGS) -c -o src/ws/test_auth-mock-auth.obj `if test -f 'src/ws/mock-auth.c'; then $(CYGPATH_W) 'src/ws/mock-auth.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/mock-auth.c'; fi`

src/common/test_authorize-cockpitauthorize.o: src/common/cockpitauthorize.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authorize_CFLAGS) $(CFLAGS) -MT src/common/test_authorize-cockpitauthorize.o -MD -MP -MF src/common/$(DEPDIR)/test_authorize-cockpitauthorize.Tpo -c -o src/common/test_authorize-cockpitauthorize.o `test -f 'src/common/cockpitauthorize.c' || echo '$(srcdir)/'`src/common/cockpitauthorize.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_authorize-cockpitauthorize.Tpo src/common/$(DEPDIR)/test_authorize-cockpitauthorize.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitauthorize.c' object='src/common/test_authorize-cockpitauthorize.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authorize_CFLAGS) $(CFLAGS) -c -o src/common/test_authorize-cockpitauthorize.o `test -f 'src/common/cockpitauthorize.c' || echo '$(srcdir)/'`src/common/cockpitauthorize.c

src/common/test_authorize-cockpitauthorize.obj: src/common/cockpitauthorize.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authorize_CFLAGS) $(CFLAGS) -MT src/common/test_authorize-cockpitauthorize.obj -MD -MP -MF src/common/$(DEPDIR)/test_authorize-cockpitauthorize.Tpo -c -o src/common/test_authorize-cockpitauthorize.obj `if test -f 'src/common/cockpitauthorize.c'; then $(CYGPATH_W) 'src/common/cockpitauthorize.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitauthorize.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_authorize-cockpitauthorize.Tpo src/common/$(DEPDIR)/test_authorize-cockpitauthorize.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitauthorize.c' object='src/common/test_authorize-cockpitauthorize.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authorize_CFLAGS) $(CFLAGS) -c -o src/common/test_authorize-cockpitauthorize.obj `if test -f 'src/common/cockpitauthorize.c'; then $(CYGPATH_W) 'src/common/cockpitauthorize.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitauthorize.c'; fi`

src/common/test_authorize-cockpitbase64.o: src/common/cockpitbase64.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authorize_CFLAGS) $(CFLAGS) -MT src/common/test_authorize-cockpitbase64.o -MD -MP -MF src/common/$(DEPDIR)/test_authorize-cockpitbase64.Tpo -c -o src/common/test_authorize-cockpitbase64.o `test -f 'src/common/cockpitbase64.c' || echo '$(srcdir)/'`src/common/cockpitbase64.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_authorize-cockpitbase64.Tpo src/common/$(DEPDIR)/test_authorize-cockpitbase64.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitbase64.c' object='src/common/test_authorize-cockpitbase64.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authorize_CFLAGS) $(CFLAGS) -c -o src/common/test_authorize-cockpitbase64.o `test -f 'src/common/cockpitbase64.c' || echo '$(srcdir)/'`src/common/cockpitbase64.c

src/common/test_authorize-cockpitbase64.obj: src/common/cockpitbase64.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authorize_CFLAGS) $(CFLAGS) -MT src/common/test_authorize-cockpitbase64.obj -MD -MP -MF src/common/$(DEPDIR)/test_authorize-cockpitbase64.Tpo -c -o src/common/test_authorize-cockpitbase64.obj `if test -f 'src/common/cockpitbase64.c'; then $(CYGPATH_W) 'src/common/cockpitbase64.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitbase64.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_authorize-cockpitbase64.Tpo src/common/$(DEPDIR)/test_authorize-cockpitbase64.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitbase64.c' object='src/common/test_authorize-cockpitbase64.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authorize_CFLAGS) $(CFLAGS) -c -o src/common/test_authorize-cockpitbase64.obj `if test -f 'src/common/cockpitbase64.c'; then $(CYGPATH_W) 'src/common/cockpitbase64.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitbase64.c'; fi`

src/common/test_authorize-cockpitmemory.o: src/common/cockpitmemory.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authorize_CFLAGS) $(CFLAGS) -MT src/common/test_authorize-cockpitmemory.o -MD -MP -MF src/common/$(DEPDIR)/test_authorize-cockpitmemory.Tpo -c -o src/common/test_authorize-cockpitmemory.o `test -f 'src/common/cockpitmemory.c' || echo '$(srcdir)/'`src/common/cockpitmemory.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_authorize-cockpitmemory.Tpo src/common/$(DEPDIR)/test_authorize-cockpitmemory.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitmemory.c' object='src/common/test_authorize-cockpitmemory.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authorize_CFLAGS) $(CFLAGS) -c -o src/common/test_authorize-cockpitmemory.o `test -f 'src/common/cockpitmemory.c' || echo '$(srcdir)/'`src/common/cockpitmemory.c

src/common/test_authorize-cockpitmemory.obj: src/common/cockpitmemory.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authorize_CFLAGS) $(CFLAGS) -MT src/common/test_authorize-cockpitmemory.obj -MD -MP -MF src/common/$(DEPDIR)/test_authorize-cockpitmemory.Tpo -c -o src/common/test_authorize-cockpitmemory.obj `if test -f 'src/common/cockpitmemory.c'; then $(CYGPATH_W) 'src/common/cockpitmemory.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitmemory.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_authorize-cockpitmemory.Tpo src/common/$(DEPDIR)/test_authorize-cockpitmemory.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitmemory.c' object='src/common/test_authorize-cockpitmemory.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authorize_CFLAGS) $(CFLAGS) -c -o src/common/test_authorize-cockpitmemory.obj `if test -f 'src/common/cockpitmemory.c'; then $(CYGPATH_W) 'src/common/cockpitmemory.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitmemory.c'; fi`

src/common/test_authorize-test-authorize.o: src/common/test-authorize.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authorize_CFLAGS) $(CFLAGS) -MT src/common/test_authorize-test-authorize.o -MD -MP -MF src/common/$(DEPDIR)/test_authorize-test-authorize.Tpo -c -o src/common/test_authorize-test-authorize.o `test -f 'src/common/test-authorize.c' || echo '$(srcdir)/'`src/common/test-authorize.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_authorize-test-authorize.Tpo src/common/$(DEPDIR)/test_authorize-test-authorize.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-authorize.c' object='src/common/test_authorize-test-authorize.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authorize_CFLAGS) $(CFLAGS) -c -o src/common/test_authorize-test-authorize.o `test -f 'src/common/test-authorize.c' || echo '$(srcdir)/'`src/common/test-authorize.c

src/common/test_authorize-test-authorize.obj: src/common/test-authorize.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authorize_CFLAGS) $(CFLAGS) -MT src/common/test_authorize-test-authorize.obj -MD -MP -MF src/common/$(DEPDIR)/test_authorize-test-authorize.Tpo -c -o src/common/test_authorize-test-authorize.obj `if test -f 'src/common/test-authorize.c'; then $(CYGPATH_W) 'src/common/test-authorize.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-authorize.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_authorize-test-authorize.Tpo src/common/$(DEPDIR)/test_authorize-test-authorize.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-authorize.c' object='src/common/test_authorize-test-authorize.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authorize_CFLAGS) $(CFLAGS) -c -o src/common/test_authorize-test-authorize.obj `if test -f 'src/common/test-authorize.c'; then $(CYGPATH_W) 'src/common/test-authorize.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-authorize.c'; fi`

src/ws/test_authssh-test-authssh.o: src/ws/test-authssh.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authssh_CFLAGS) $(CFLAGS) -MT src/ws/test_authssh-test-authssh.o -MD -MP -MF src/ws/$(DEPDIR)/test_authssh-test-authssh.Tpo -c -o src/ws/test_authssh-test-authssh.o `test -f 'src/ws/test-authssh.c' || echo '$(srcdir)/'`src/ws/test-authssh.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_authssh-test-authssh.Tpo src/ws/$(DEPDIR)/test_authssh-test-authssh.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-authssh.c' object='src/ws/test_authssh-test-authssh.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authssh_CFLAGS) $(CFLAGS) -c -o src/ws/test_authssh-test-authssh.o `test -f 'src/ws/test-authssh.c' || echo '$(srcdir)/'`src/ws/test-authssh.c

src/ws/test_authssh-test-authssh.obj: src/ws/test-authssh.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authssh_CFLAGS) $(CFLAGS) -MT src/ws/test_authssh-test-authssh.obj -MD -MP -MF src/ws/$(DEPDIR)/test_authssh-test-authssh.Tpo -c -o src/ws/test_authssh-test-authssh.obj `if test -f 'src/ws/test-authssh.c'; then $(CYGPATH_W) 'src/ws/test-authssh.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-authssh.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_authssh-test-authssh.Tpo src/ws/$(DEPDIR)/test_authssh-test-authssh.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-authssh.c' object='src/ws/test_authssh-test-authssh.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authssh_CFLAGS) $(CFLAGS) -c -o src/ws/test_authssh-test-authssh.obj `if test -f 'src/ws/test-authssh.c'; then $(CYGPATH_W) 'src/ws/test-authssh.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-authssh.c'; fi`

src/ws/test_authssh-mock-auth.o: src/ws/mock-auth.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authssh_CFLAGS) $(CFLAGS) -MT src/ws/test_authssh-mock-auth.o -MD -MP -MF src/ws/$(DEPDIR)/test_authssh-mock-auth.Tpo -c -o src/ws/test_authssh-mock-auth.o `test -f 'src/ws/mock-auth.c' || echo '$(srcdir)/'`src/ws/mock-auth.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_authssh-mock-auth.Tpo src/ws/$(DEPDIR)/test_authssh-mock-auth.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/mock-auth.c' object='src/ws/test_authssh-mock-auth.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authssh_CFLAGS) $(CFLAGS) -c -o src/ws/test_authssh-mock-auth.o `test -f 'src/ws/mock-auth.c' || echo '$(srcdir)/'`src/ws/mock-auth.c

src/ws/test_authssh-mock-auth.obj: src/ws/mock-auth.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authssh_CFLAGS) $(CFLAGS) -MT src/ws/test_authssh-mock-auth.obj -MD -MP -MF src/ws/$(DEPDIR)/test_authssh-mock-auth.Tpo -c -o src/ws/test_authssh-mock-auth.obj `if test -f 'src/ws/mock-auth.c'; then $(CYGPATH_W) 'src/ws/mock-auth.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/mock-auth.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_authssh-mock-auth.Tpo src/ws/$(DEPDIR)/test_authssh-mock-auth.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/mock-auth.c' object='src/ws/test_authssh-mock-auth.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_authssh_CFLAGS) $(CFLAGS) -c -o src/ws/test_authssh-mock-auth.obj `if test -f 'src/ws/mock-auth.c'; then $(CYGPATH_W) 'src/ws/mock-auth.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/mock-auth.c'; fi`

src/common/test_base64-test-base64.o: src/common/test-base64.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_base64_CFLAGS) $(CFLAGS) -MT src/common/test_base64-test-base64.o -MD -MP -MF src/common/$(DEPDIR)/test_base64-test-base64.Tpo -c -o src/common/test_base64-test-base64.o `test -f 'src/common/test-base64.c' || echo '$(srcdir)/'`src/common/test-base64.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_base64-test-base64.Tpo src/common/$(DEPDIR)/test_base64-test-base64.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-base64.c' object='src/common/test_base64-test-base64.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_base64_CFLAGS) $(CFLAGS) -c -o src/common/test_base64-test-base64.o `test -f 'src/common/test-base64.c' || echo '$(srcdir)/'`src/common/test-base64.c

src/common/test_base64-test-base64.obj: src/common/test-base64.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_base64_CFLAGS) $(CFLAGS) -MT src/common/test_base64-test-base64.obj -MD -MP -MF src/common/$(DEPDIR)/test_base64-test-base64.Tpo -c -o src/common/test_base64-test-base64.obj `if test -f 'src/common/test-base64.c'; then $(CYGPATH_W) 'src/common/test-base64.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-base64.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_base64-test-base64.Tpo src/common/$(DEPDIR)/test_base64-test-base64.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-base64.c' object='src/common/test_base64-test-base64.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_base64_CFLAGS) $(CFLAGS) -c -o src/common/test_base64-test-base64.obj `if test -f 'src/common/test-base64.c'; then $(CYGPATH_W) 'src/common/test-base64.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-base64.c'; fi`

src/common/test_base64-cockpitbase64.o: src/common/cockpitbase64.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_base64_CFLAGS) $(CFLAGS) -MT src/common/test_base64-cockpitbase64.o -MD -MP -MF src/common/$(DEPDIR)/test_base64-cockpitbase64.Tpo -c -o src/common/test_base64-cockpitbase64.o `test -f 'src/common/cockpitbase64.c' || echo '$(srcdir)/'`src/common/cockpitbase64.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_base64-cockpitbase64.Tpo src/common/$(DEPDIR)/test_base64-cockpitbase64.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitbase64.c' object='src/common/test_base64-cockpitbase64.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_base64_CFLAGS) $(CFLAGS) -c -o src/common/test_base64-cockpitbase64.o `test -f 'src/common/cockpitbase64.c' || echo '$(srcdir)/'`src/common/cockpitbase64.c

src/common/test_base64-cockpitbase64.obj: src/common/cockpitbase64.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_base64_CFLAGS) $(CFLAGS) -MT src/common/test_base64-cockpitbase64.obj -MD -MP -MF src/common/$(DEPDIR)/test_base64-cockpitbase64.Tpo -c -o src/common/test_base64-cockpitbase64.obj `if test -f 'src/common/cockpitbase64.c'; then $(CYGPATH_W) 'src/common/cockpitbase64.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitbase64.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_base64-cockpitbase64.Tpo src/common/$(DEPDIR)/test_base64-cockpitbase64.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitbase64.c' object='src/common/test_base64-cockpitbase64.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_base64_CFLAGS) $(CFLAGS) -c -o src/common/test_base64-cockpitbase64.obj `if test -f 'src/common/cockpitbase64.c'; then $(CYGPATH_W) 'src/common/cockpitbase64.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitbase64.c'; fi`

src/bridge/test_bridge-test-bridge.o: src/bridge/test-bridge.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_bridge_CFLAGS) $(CFLAGS) -MT src/bridge/test_bridge-test-bridge.o -MD -MP -MF src/bridge/$(DEPDIR)/test_bridge-test-bridge.Tpo -c -o src/bridge/test_bridge-test-bridge.o `test -f 'src/bridge/test-bridge.c' || echo '$(srcdir)/'`src/bridge/test-bridge.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_bridge-test-bridge.Tpo src/bridge/$(DEPDIR)/test_bridge-test-bridge.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-bridge.c' object='src/bridge/test_bridge-test-bridge.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_bridge_CFLAGS) $(CFLAGS) -c -o src/bridge/test_bridge-test-bridge.o `test -f 'src/bridge/test-bridge.c' || echo '$(srcdir)/'`src/bridge/test-bridge.c

src/bridge/test_bridge-test-bridge.obj: src/bridge/test-bridge.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_bridge_CFLAGS) $(CFLAGS) -MT src/bridge/test_bridge-test-bridge.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_bridge-test-bridge.Tpo -c -o src/bridge/test_bridge-test-bridge.obj `if test -f 'src/bridge/test-bridge.c'; then $(CYGPATH_W) 'src/bridge/test-bridge.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-bridge.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_bridge-test-bridge.Tpo src/bridge/$(DEPDIR)/test_bridge-test-bridge.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-bridge.c' object='src/bridge/test_bridge-test-bridge.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_bridge_CFLAGS) $(CFLAGS) -c -o src/bridge/test_bridge-test-bridge.obj `if test -f 'src/bridge/test-bridge.c'; then $(CYGPATH_W) 'src/bridge/test-bridge.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-bridge.c'; fi`

src/bridge/test_channel-test-channel.o: src/bridge/test-channel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channel_CFLAGS) $(CFLAGS) -MT src/bridge/test_channel-test-channel.o -MD -MP -MF src/bridge/$(DEPDIR)/test_channel-test-channel.Tpo -c -o src/bridge/test_channel-test-channel.o `test -f 'src/bridge/test-channel.c' || echo '$(srcdir)/'`src/bridge/test-channel.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_channel-test-channel.Tpo src/bridge/$(DEPDIR)/test_channel-test-channel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-channel.c' object='src/bridge/test_channel-test-channel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channel_CFLAGS) $(CFLAGS) -c -o src/bridge/test_channel-test-channel.o `test -f 'src/bridge/test-channel.c' || echo '$(srcdir)/'`src/bridge/test-channel.c

src/bridge/test_channel-test-channel.obj: src/bridge/test-channel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channel_CFLAGS) $(CFLAGS) -MT src/bridge/test_channel-test-channel.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_channel-test-channel.Tpo -c -o src/bridge/test_channel-test-channel.obj `if test -f 'src/bridge/test-channel.c'; then $(CYGPATH_W) 'src/bridge/test-channel.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-channel.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_channel-test-channel.Tpo src/bridge/$(DEPDIR)/test_channel-test-channel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-channel.c' object='src/bridge/test_channel-test-channel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channel_CFLAGS) $(CFLAGS) -c -o src/bridge/test_channel-test-channel.obj `if test -f 'src/bridge/test-channel.c'; then $(CYGPATH_W) 'src/bridge/test-channel.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-channel.c'; fi`

src/bridge/test_channel-mock-transport.o: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channel_CFLAGS) $(CFLAGS) -MT src/bridge/test_channel-mock-transport.o -MD -MP -MF src/bridge/$(DEPDIR)/test_channel-mock-transport.Tpo -c -o src/bridge/test_channel-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_channel-mock-transport.Tpo src/bridge/$(DEPDIR)/test_channel-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_channel-mock-transport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channel_CFLAGS) $(CFLAGS) -c -o src/bridge/test_channel-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c

src/bridge/test_channel-mock-transport.obj: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channel_CFLAGS) $(CFLAGS) -MT src/bridge/test_channel-mock-transport.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_channel-mock-transport.Tpo -c -o src/bridge/test_channel-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_channel-mock-transport.Tpo src/bridge/$(DEPDIR)/test_channel-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_channel-mock-transport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channel_CFLAGS) $(CFLAGS) -c -o src/bridge/test_channel-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`

src/ws/test_channelresponse-test-channelresponse.o: src/ws/test-channelresponse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channelresponse_CFLAGS) $(CFLAGS) -MT src/ws/test_channelresponse-test-channelresponse.o -MD -MP -MF src/ws/$(DEPDIR)/test_channelresponse-test-channelresponse.Tpo -c -o src/ws/test_channelresponse-test-channelresponse.o `test -f 'src/ws/test-channelresponse.c' || echo '$(srcdir)/'`src/ws/test-channelresponse.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_channelresponse-test-channelresponse.Tpo src/ws/$(DEPDIR)/test_channelresponse-test-channelresponse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-channelresponse.c' object='src/ws/test_channelresponse-test-channelresponse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channelresponse_CFLAGS) $(CFLAGS) -c -o src/ws/test_channelresponse-test-channelresponse.o `test -f 'src/ws/test-channelresponse.c' || echo '$(srcdir)/'`src/ws/test-channelresponse.c

src/ws/test_channelresponse-test-channelresponse.obj: src/ws/test-channelresponse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channelresponse_CFLAGS) $(CFLAGS) -MT src/ws/test_channelresponse-test-channelresponse.obj -MD -MP -MF src/ws/$(DEPDIR)/test_channelresponse-test-channelresponse.Tpo -c -o src/ws/test_channelresponse-test-channelresponse.obj `if test -f 'src/ws/test-channelresponse.c'; then $(CYGPATH_W) 'src/ws/test-channelresponse.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-channelresponse.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_channelresponse-test-channelresponse.Tpo src/ws/$(DEPDIR)/test_channelresponse-test-channelresponse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-channelresponse.c' object='src/ws/test_channelresponse-test-channelresponse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channelresponse_CFLAGS) $(CFLAGS) -c -o src/ws/test_channelresponse-test-channelresponse.obj `if test -f 'src/ws/test-channelresponse.c'; then $(CYGPATH_W) 'src/ws/test-channelresponse.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-channelresponse.c'; fi`

src/ws/test_channelresponse-mock-auth.o: src/ws/mock-auth.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channelresponse_CFLAGS) $(CFLAGS) -MT src/ws/test_channelresponse-mock-auth.o -MD -MP -MF src/ws/$(DEPDIR)/test_channelresponse-mock-auth.Tpo -c -o src/ws/test_channelresponse-mock-auth.o `test -f 'src/ws/mock-auth.c' || echo '$(srcdir)/'`src/ws/mock-auth.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_channelresponse-mock-auth.Tpo src/ws/$(DEPDIR)/test_channelresponse-mock-auth.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/mock-auth.c' object='src/ws/test_channelresponse-mock-auth.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channelresponse_CFLAGS) $(CFLAGS) -c -o src/ws/test_channelresponse-mock-auth.o `test -f 'src/ws/mock-auth.c' || echo '$(srcdir)/'`src/ws/mock-auth.c

src/ws/test_channelresponse-mock-auth.obj: src/ws/mock-auth.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channelresponse_CFLAGS) $(CFLAGS) -MT src/ws/test_channelresponse-mock-auth.obj -MD -MP -MF src/ws/$(DEPDIR)/test_channelresponse-mock-auth.Tpo -c -o src/ws/test_channelresponse-mock-auth.obj `if test -f 'src/ws/mock-auth.c'; then $(CYGPATH_W) 'src/ws/mock-auth.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/mock-auth.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_channelresponse-mock-auth.Tpo src/ws/$(DEPDIR)/test_channelresponse-mock-auth.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/mock-auth.c' object='src/ws/test_channelresponse-mock-auth.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channelresponse_CFLAGS) $(CFLAGS) -c -o src/ws/test_channelresponse-mock-auth.obj `if test -f 'src/ws/mock-auth.c'; then $(CYGPATH_W) 'src/ws/mock-auth.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/mock-auth.c'; fi`

src/common/test_channelresponse-mock-io-stream.o: src/common/mock-io-stream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channelresponse_CFLAGS) $(CFLAGS) -MT src/common/test_channelresponse-mock-io-stream.o -MD -MP -MF src/common/$(DEPDIR)/test_channelresponse-mock-io-stream.Tpo -c -o src/common/test_channelresponse-mock-io-stream.o `test -f 'src/common/mock-io-stream.c' || echo '$(srcdir)/'`src/common/mock-io-stream.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_channelresponse-mock-io-stream.Tpo src/common/$(DEPDIR)/test_channelresponse-mock-io-stream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/mock-io-stream.c' object='src/common/test_channelresponse-mock-io-stream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channelresponse_CFLAGS) $(CFLAGS) -c -o src/common/test_channelresponse-mock-io-stream.o `test -f 'src/common/mock-io-stream.c' || echo '$(srcdir)/'`src/common/mock-io-stream.c

src/common/test_channelresponse-mock-io-stream.obj: src/common/mock-io-stream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channelresponse_CFLAGS) $(CFLAGS) -MT src/common/test_channelresponse-mock-io-stream.obj -MD -MP -MF src/common/$(DEPDIR)/test_channelresponse-mock-io-stream.Tpo -c -o src/common/test_channelresponse-mock-io-stream.obj `if test -f 'src/common/mock-io-stream.c'; then $(CYGPATH_W) 'src/common/mock-io-stream.c'; else $(CYGPATH_W) '$(srcdir)/src/common/mock-io-stream.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_channelresponse-mock-io-stream.Tpo src/common/$(DEPDIR)/test_channelresponse-mock-io-stream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/mock-io-stream.c' object='src/common/test_channelresponse-mock-io-stream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_channelresponse_CFLAGS) $(CFLAGS) -c -o src/common/test_channelresponse-mock-io-stream.obj `if test -f 'src/common/mock-io-stream.c'; then $(CYGPATH_W) 'src/common/mock-io-stream.c'; else $(CYGPATH_W) '$(srcdir)/src/common/mock-io-stream.c'; fi`

src/ws/test_compat-test-compat.o: src/ws/test-compat.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_compat_CFLAGS) $(CFLAGS) -MT src/ws/test_compat-test-compat.o -MD -MP -MF src/ws/$(DEPDIR)/test_compat-test-compat.Tpo -c -o src/ws/test_compat-test-compat.o `test -f 'src/ws/test-compat.c' || echo '$(srcdir)/'`src/ws/test-compat.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_compat-test-compat.Tpo src/ws/$(DEPDIR)/test_compat-test-compat.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-compat.c' object='src/ws/test_compat-test-compat.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_compat_CFLAGS) $(CFLAGS) -c -o src/ws/test_compat-test-compat.o `test -f 'src/ws/test-compat.c' || echo '$(srcdir)/'`src/ws/test-compat.c

src/ws/test_compat-test-compat.obj: src/ws/test-compat.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_compat_CFLAGS) $(CFLAGS) -MT src/ws/test_compat-test-compat.obj -MD -MP -MF src/ws/$(DEPDIR)/test_compat-test-compat.Tpo -c -o src/ws/test_compat-test-compat.obj `if test -f 'src/ws/test-compat.c'; then $(CYGPATH_W) 'src/ws/test-compat.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-compat.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_compat-test-compat.Tpo src/ws/$(DEPDIR)/test_compat-test-compat.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-compat.c' object='src/ws/test_compat-test-compat.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_compat_CFLAGS) $(CFLAGS) -c -o src/ws/test_compat-test-compat.obj `if test -f 'src/ws/test-compat.c'; then $(CYGPATH_W) 'src/ws/test-compat.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-compat.c'; fi`

src/common/test_config-test-config.o: src/common/test-config.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_config_CFLAGS) $(CFLAGS) -MT src/common/test_config-test-config.o -MD -MP -MF src/common/$(DEPDIR)/test_config-test-config.Tpo -c -o src/common/test_config-test-config.o `test -f 'src/common/test-config.c' || echo '$(srcdir)/'`src/common/test-config.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_config-test-config.Tpo src/common/$(DEPDIR)/test_config-test-config.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-config.c' object='src/common/test_config-test-config.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_config_CFLAGS) $(CFLAGS) -c -o src/common/test_config-test-config.o `test -f 'src/common/test-config.c' || echo '$(srcdir)/'`src/common/test-config.c

src/common/test_config-test-config.obj: src/common/test-config.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_config_CFLAGS) $(CFLAGS) -MT src/common/test_config-test-config.obj -MD -MP -MF src/common/$(DEPDIR)/test_config-test-config.Tpo -c -o src/common/test_config-test-config.obj `if test -f 'src/common/test-config.c'; then $(CYGPATH_W) 'src/common/test-config.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-config.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_config-test-config.Tpo src/common/$(DEPDIR)/test_config-test-config.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-config.c' object='src/common/test_config-test-config.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_config_CFLAGS) $(CFLAGS) -c -o src/common/test_config-test-config.obj `if test -f 'src/common/test-config.c'; then $(CYGPATH_W) 'src/common/test-config.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-config.c'; fi`

src/bridge/test_connect-test-connect.o: src/bridge/test-connect.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_connect_CFLAGS) $(CFLAGS) -MT src/bridge/test_connect-test-connect.o -MD -MP -MF src/bridge/$(DEPDIR)/test_connect-test-connect.Tpo -c -o src/bridge/test_connect-test-connect.o `test -f 'src/bridge/test-connect.c' || echo '$(srcdir)/'`src/bridge/test-connect.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_connect-test-connect.Tpo src/bridge/$(DEPDIR)/test_connect-test-connect.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-connect.c' object='src/bridge/test_connect-test-connect.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_connect_CFLAGS) $(CFLAGS) -c -o src/bridge/test_connect-test-connect.o `test -f 'src/bridge/test-connect.c' || echo '$(srcdir)/'`src/bridge/test-connect.c

src/bridge/test_connect-test-connect.obj: src/bridge/test-connect.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_connect_CFLAGS) $(CFLAGS) -MT src/bridge/test_connect-test-connect.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_connect-test-connect.Tpo -c -o src/bridge/test_connect-test-connect.obj `if test -f 'src/bridge/test-connect.c'; then $(CYGPATH_W) 'src/bridge/test-connect.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-connect.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_connect-test-connect.Tpo src/bridge/$(DEPDIR)/test_connect-test-connect.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-connect.c' object='src/bridge/test_connect-test-connect.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_connect_CFLAGS) $(CFLAGS) -c -o src/bridge/test_connect-test-connect.obj `if test -f 'src/bridge/test-connect.c'; then $(CYGPATH_W) 'src/bridge/test-connect.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-connect.c'; fi`

src/ws/test_creds-test-creds.o: src/ws/test-creds.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_creds_CFLAGS) $(CFLAGS) -MT src/ws/test_creds-test-creds.o -MD -MP -MF src/ws/$(DEPDIR)/test_creds-test-creds.Tpo -c -o src/ws/test_creds-test-creds.o `test -f 'src/ws/test-creds.c' || echo '$(srcdir)/'`src/ws/test-creds.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_creds-test-creds.Tpo src/ws/$(DEPDIR)/test_creds-test-creds.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-creds.c' object='src/ws/test_creds-test-creds.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_creds_CFLAGS) $(CFLAGS) -c -o src/ws/test_creds-test-creds.o `test -f 'src/ws/test-creds.c' || echo '$(srcdir)/'`src/ws/test-creds.c

src/ws/test_creds-test-creds.obj: src/ws/test-creds.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_creds_CFLAGS) $(CFLAGS) -MT src/ws/test_creds-test-creds.obj -MD -MP -MF src/ws/$(DEPDIR)/test_creds-test-creds.Tpo -c -o src/ws/test_creds-test-creds.obj `if test -f 'src/ws/test-creds.c'; then $(CYGPATH_W) 'src/ws/test-creds.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-creds.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_creds-test-creds.Tpo src/ws/$(DEPDIR)/test_creds-test-creds.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-creds.c' object='src/ws/test_creds-test-creds.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_creds_CFLAGS) $(CFLAGS) -c -o src/ws/test_creds-test-creds.obj `if test -f 'src/ws/test-creds.c'; then $(CYGPATH_W) 'src/ws/test-creds.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-creds.c'; fi`

src/bridge/test_dbus_meta-test-dbus-meta.o: src/bridge/test-dbus-meta.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_dbus_meta_CFLAGS) $(CFLAGS) -MT src/bridge/test_dbus_meta-test-dbus-meta.o -MD -MP -MF src/bridge/$(DEPDIR)/test_dbus_meta-test-dbus-meta.Tpo -c -o src/bridge/test_dbus_meta-test-dbus-meta.o `test -f 'src/bridge/test-dbus-meta.c' || echo '$(srcdir)/'`src/bridge/test-dbus-meta.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_dbus_meta-test-dbus-meta.Tpo src/bridge/$(DEPDIR)/test_dbus_meta-test-dbus-meta.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-dbus-meta.c' object='src/bridge/test_dbus_meta-test-dbus-meta.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_dbus_meta_CFLAGS) $(CFLAGS) -c -o src/bridge/test_dbus_meta-test-dbus-meta.o `test -f 'src/bridge/test-dbus-meta.c' || echo '$(srcdir)/'`src/bridge/test-dbus-meta.c

src/bridge/test_dbus_meta-test-dbus-meta.obj: src/bridge/test-dbus-meta.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_dbus_meta_CFLAGS) $(CFLAGS) -MT src/bridge/test_dbus_meta-test-dbus-meta.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_dbus_meta-test-dbus-meta.Tpo -c -o src/bridge/test_dbus_meta-test-dbus-meta.obj `if test -f 'src/bridge/test-dbus-meta.c'; then $(CYGPATH_W) 'src/bridge/test-dbus-meta.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-dbus-meta.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_dbus_meta-test-dbus-meta.Tpo src/bridge/$(DEPDIR)/test_dbus_meta-test-dbus-meta.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-dbus-meta.c' object='src/bridge/test_dbus_meta-test-dbus-meta.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_dbus_meta_CFLAGS) $(CFLAGS) -c -o src/bridge/test_dbus_meta-test-dbus-meta.obj `if test -f 'src/bridge/test-dbus-meta.c'; then $(CYGPATH_W) 'src/bridge/test-dbus-meta.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-dbus-meta.c'; fi`

src/bridge/test_fs-test-fs.o: src/bridge/test-fs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fs_CFLAGS) $(CFLAGS) -MT src/bridge/test_fs-test-fs.o -MD -MP -MF src/bridge/$(DEPDIR)/test_fs-test-fs.Tpo -c -o src/bridge/test_fs-test-fs.o `test -f 'src/bridge/test-fs.c' || echo '$(srcdir)/'`src/bridge/test-fs.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_fs-test-fs.Tpo src/bridge/$(DEPDIR)/test_fs-test-fs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-fs.c' object='src/bridge/test_fs-test-fs.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fs_CFLAGS) $(CFLAGS) -c -o src/bridge/test_fs-test-fs.o `test -f 'src/bridge/test-fs.c' || echo '$(srcdir)/'`src/bridge/test-fs.c

src/bridge/test_fs-test-fs.obj: src/bridge/test-fs.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fs_CFLAGS) $(CFLAGS) -MT src/bridge/test_fs-test-fs.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_fs-test-fs.Tpo -c -o src/bridge/test_fs-test-fs.obj `if test -f 'src/bridge/test-fs.c'; then $(CYGPATH_W) 'src/bridge/test-fs.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-fs.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_fs-test-fs.Tpo src/bridge/$(DEPDIR)/test_fs-test-fs.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-fs.c' object='src/bridge/test_fs-test-fs.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fs_CFLAGS) $(CFLAGS) -c -o src/bridge/test_fs-test-fs.obj `if test -f 'src/bridge/test-fs.c'; then $(CYGPATH_W) 'src/bridge/test-fs.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-fs.c'; fi`

src/bridge/test_fs-mock-transport.o: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fs_CFLAGS) $(CFLAGS) -MT src/bridge/test_fs-mock-transport.o -MD -MP -MF src/bridge/$(DEPDIR)/test_fs-mock-transport.Tpo -c -o src/bridge/test_fs-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_fs-mock-transport.Tpo src/bridge/$(DEPDIR)/test_fs-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_fs-mock-transport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fs_CFLAGS) $(CFLAGS) -c -o src/bridge/test_fs-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c

src/bridge/test_fs-mock-transport.obj: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fs_CFLAGS) $(CFLAGS) -MT src/bridge/test_fs-mock-transport.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_fs-mock-transport.Tpo -c -o src/bridge/test_fs-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_fs-mock-transport.Tpo src/bridge/$(DEPDIR)/test_fs-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_fs-mock-transport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_fs_CFLAGS) $(CFLAGS) -c -o src/bridge/test_fs-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`

src/ws/test_handlers-test-handlers.o: src/ws/test-handlers.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_handlers_CFLAGS) $(CFLAGS) -MT src/ws/test_handlers-test-handlers.o -MD -MP -MF src/ws/$(DEPDIR)/test_handlers-test-handlers.Tpo -c -o src/ws/test_handlers-test-handlers.o `test -f 'src/ws/test-handlers.c' || echo '$(srcdir)/'`src/ws/test-handlers.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_handlers-test-handlers.Tpo src/ws/$(DEPDIR)/test_handlers-test-handlers.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-handlers.c' object='src/ws/test_handlers-test-handlers.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_handlers_CFLAGS) $(CFLAGS) -c -o src/ws/test_handlers-test-handlers.o `test -f 'src/ws/test-handlers.c' || echo '$(srcdir)/'`src/ws/test-handlers.c

src/ws/test_handlers-test-handlers.obj: src/ws/test-handlers.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_handlers_CFLAGS) $(CFLAGS) -MT src/ws/test_handlers-test-handlers.obj -MD -MP -MF src/ws/$(DEPDIR)/test_handlers-test-handlers.Tpo -c -o src/ws/test_handlers-test-handlers.obj `if test -f 'src/ws/test-handlers.c'; then $(CYGPATH_W) 'src/ws/test-handlers.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-handlers.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_handlers-test-handlers.Tpo src/ws/$(DEPDIR)/test_handlers-test-handlers.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-handlers.c' object='src/ws/test_handlers-test-handlers.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_handlers_CFLAGS) $(CFLAGS) -c -o src/ws/test_handlers-test-handlers.obj `if test -f 'src/ws/test-handlers.c'; then $(CYGPATH_W) 'src/ws/test-handlers.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-handlers.c'; fi`

src/ws/test_handlers-mock-auth.o: src/ws/mock-auth.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_handlers_CFLAGS) $(CFLAGS) -MT src/ws/test_handlers-mock-auth.o -MD -MP -MF src/ws/$(DEPDIR)/test_handlers-mock-auth.Tpo -c -o src/ws/test_handlers-mock-auth.o `test -f 'src/ws/mock-auth.c' || echo '$(srcdir)/'`src/ws/mock-auth.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_handlers-mock-auth.Tpo src/ws/$(DEPDIR)/test_handlers-mock-auth.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/mock-auth.c' object='src/ws/test_handlers-mock-auth.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_handlers_CFLAGS) $(CFLAGS) -c -o src/ws/test_handlers-mock-auth.o `test -f 'src/ws/mock-auth.c' || echo '$(srcdir)/'`src/ws/mock-auth.c

src/ws/test_handlers-mock-auth.obj: src/ws/mock-auth.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_handlers_CFLAGS) $(CFLAGS) -MT src/ws/test_handlers-mock-auth.obj -MD -MP -MF src/ws/$(DEPDIR)/test_handlers-mock-auth.Tpo -c -o src/ws/test_handlers-mock-auth.obj `if test -f 'src/ws/mock-auth.c'; then $(CYGPATH_W) 'src/ws/mock-auth.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/mock-auth.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_handlers-mock-auth.Tpo src/ws/$(DEPDIR)/test_handlers-mock-auth.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/mock-auth.c' object='src/ws/test_handlers-mock-auth.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_handlers_CFLAGS) $(CFLAGS) -c -o src/ws/test_handlers-mock-auth.obj `if test -f 'src/ws/mock-auth.c'; then $(CYGPATH_W) 'src/ws/mock-auth.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/mock-auth.c'; fi`

src/common/test_handlers-mock-io-stream.o: src/common/mock-io-stream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_handlers_CFLAGS) $(CFLAGS) -MT src/common/test_handlers-mock-io-stream.o -MD -MP -MF src/common/$(DEPDIR)/test_handlers-mock-io-stream.Tpo -c -o src/common/test_handlers-mock-io-stream.o `test -f 'src/common/mock-io-stream.c' || echo '$(srcdir)/'`src/common/mock-io-stream.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_handlers-mock-io-stream.Tpo src/common/$(DEPDIR)/test_handlers-mock-io-stream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/mock-io-stream.c' object='src/common/test_handlers-mock-io-stream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_handlers_CFLAGS) $(CFLAGS) -c -o src/common/test_handlers-mock-io-stream.o `test -f 'src/common/mock-io-stream.c' || echo '$(srcdir)/'`src/common/mock-io-stream.c

src/common/test_handlers-mock-io-stream.obj: src/common/mock-io-stream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_handlers_CFLAGS) $(CFLAGS) -MT src/common/test_handlers-mock-io-stream.obj -MD -MP -MF src/common/$(DEPDIR)/test_handlers-mock-io-stream.Tpo -c -o src/common/test_handlers-mock-io-stream.obj `if test -f 'src/common/mock-io-stream.c'; then $(CYGPATH_W) 'src/common/mock-io-stream.c'; else $(CYGPATH_W) '$(srcdir)/src/common/mock-io-stream.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_handlers-mock-io-stream.Tpo src/common/$(DEPDIR)/test_handlers-mock-io-stream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/mock-io-stream.c' object='src/common/test_handlers-mock-io-stream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_handlers_CFLAGS) $(CFLAGS) -c -o src/common/test_handlers-mock-io-stream.obj `if test -f 'src/common/mock-io-stream.c'; then $(CYGPATH_W) 'src/common/mock-io-stream.c'; else $(CYGPATH_W) '$(srcdir)/src/common/mock-io-stream.c'; fi`

src/common/test_hash-test-hash.o: src/common/test-hash.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_hash_CFLAGS) $(CFLAGS) -MT src/common/test_hash-test-hash.o -MD -MP -MF src/common/$(DEPDIR)/test_hash-test-hash.Tpo -c -o src/common/test_hash-test-hash.o `test -f 'src/common/test-hash.c' || echo '$(srcdir)/'`src/common/test-hash.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_hash-test-hash.Tpo src/common/$(DEPDIR)/test_hash-test-hash.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-hash.c' object='src/common/test_hash-test-hash.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_hash_CFLAGS) $(CFLAGS) -c -o src/common/test_hash-test-hash.o `test -f 'src/common/test-hash.c' || echo '$(srcdir)/'`src/common/test-hash.c

src/common/test_hash-test-hash.obj: src/common/test-hash.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_hash_CFLAGS) $(CFLAGS) -MT src/common/test_hash-test-hash.obj -MD -MP -MF src/common/$(DEPDIR)/test_hash-test-hash.Tpo -c -o src/common/test_hash-test-hash.obj `if test -f 'src/common/test-hash.c'; then $(CYGPATH_W) 'src/common/test-hash.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-hash.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_hash-test-hash.Tpo src/common/$(DEPDIR)/test_hash-test-hash.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-hash.c' object='src/common/test_hash-test-hash.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_hash_CFLAGS) $(CFLAGS) -c -o src/common/test_hash-test-hash.obj `if test -f 'src/common/test-hash.c'; then $(CYGPATH_W) 'src/common/test-hash.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-hash.c'; fi`

src/common/test_hex-test-hex.o: src/common/test-hex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_hex_CFLAGS) $(CFLAGS) -MT src/common/test_hex-test-hex.o -MD -MP -MF src/common/$(DEPDIR)/test_hex-test-hex.Tpo -c -o src/common/test_hex-test-hex.o `test -f 'src/common/test-hex.c' || echo '$(srcdir)/'`src/common/test-hex.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_hex-test-hex.Tpo src/common/$(DEPDIR)/test_hex-test-hex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-hex.c' object='src/common/test_hex-test-hex.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_hex_CFLAGS) $(CFLAGS) -c -o src/common/test_hex-test-hex.o `test -f 'src/common/test-hex.c' || echo '$(srcdir)/'`src/common/test-hex.c

src/common/test_hex-test-hex.obj: src/common/test-hex.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_hex_CFLAGS) $(CFLAGS) -MT src/common/test_hex-test-hex.obj -MD -MP -MF src/common/$(DEPDIR)/test_hex-test-hex.Tpo -c -o src/common/test_hex-test-hex.obj `if test -f 'src/common/test-hex.c'; then $(CYGPATH_W) 'src/common/test-hex.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-hex.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_hex-test-hex.Tpo src/common/$(DEPDIR)/test_hex-test-hex.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-hex.c' object='src/common/test_hex-test-hex.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_hex_CFLAGS) $(CFLAGS) -c -o src/common/test_hex-test-hex.obj `if test -f 'src/common/test-hex.c'; then $(CYGPATH_W) 'src/common/test-hex.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-hex.c'; fi`

src/bridge/test_httpstream-test-httpstream.o: src/bridge/test-httpstream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_httpstream_CFLAGS) $(CFLAGS) -MT src/bridge/test_httpstream-test-httpstream.o -MD -MP -MF src/bridge/$(DEPDIR)/test_httpstream-test-httpstream.Tpo -c -o src/bridge/test_httpstream-test-httpstream.o `test -f 'src/bridge/test-httpstream.c' || echo '$(srcdir)/'`src/bridge/test-httpstream.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_httpstream-test-httpstream.Tpo src/bridge/$(DEPDIR)/test_httpstream-test-httpstream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-httpstream.c' object='src/bridge/test_httpstream-test-httpstream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_httpstream_CFLAGS) $(CFLAGS) -c -o src/bridge/test_httpstream-test-httpstream.o `test -f 'src/bridge/test-httpstream.c' || echo '$(srcdir)/'`src/bridge/test-httpstream.c

src/bridge/test_httpstream-test-httpstream.obj: src/bridge/test-httpstream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_httpstream_CFLAGS) $(CFLAGS) -MT src/bridge/test_httpstream-test-httpstream.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_httpstream-test-httpstream.Tpo -c -o src/bridge/test_httpstream-test-httpstream.obj `if test -f 'src/bridge/test-httpstream.c'; then $(CYGPATH_W) 'src/bridge/test-httpstream.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-httpstream.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_httpstream-test-httpstream.Tpo src/bridge/$(DEPDIR)/test_httpstream-test-httpstream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-httpstream.c' object='src/bridge/test_httpstream-test-httpstream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_httpstream_CFLAGS) $(CFLAGS) -c -o src/bridge/test_httpstream-test-httpstream.obj `if test -f 'src/bridge/test-httpstream.c'; then $(CYGPATH_W) 'src/bridge/test-httpstream.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-httpstream.c'; fi`

src/bridge/test_httpstream-mock-transport.o: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_httpstream_CFLAGS) $(CFLAGS) -MT src/bridge/test_httpstream-mock-transport.o -MD -MP -MF src/bridge/$(DEPDIR)/test_httpstream-mock-transport.Tpo -c -o src/bridge/test_httpstream-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_httpstream-mock-transport.Tpo src/bridge/$(DEPDIR)/test_httpstream-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_httpstream-mock-transport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_httpstream_CFLAGS) $(CFLAGS) -c -o src/bridge/test_httpstream-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c

src/bridge/test_httpstream-mock-transport.obj: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_httpstream_CFLAGS) $(CFLAGS) -MT src/bridge/test_httpstream-mock-transport.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_httpstream-mock-transport.Tpo -c -o src/bridge/test_httpstream-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_httpstream-mock-transport.Tpo src/bridge/$(DEPDIR)/test_httpstream-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_httpstream-mock-transport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_httpstream_CFLAGS) $(CFLAGS) -c -o src/bridge/test_httpstream-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`

src/common/test_json-test-json.o: src/common/test-json.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_json_CFLAGS) $(CFLAGS) -MT src/common/test_json-test-json.o -MD -MP -MF src/common/$(DEPDIR)/test_json-test-json.Tpo -c -o src/common/test_json-test-json.o `test -f 'src/common/test-json.c' || echo '$(srcdir)/'`src/common/test-json.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_json-test-json.Tpo src/common/$(DEPDIR)/test_json-test-json.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-json.c' object='src/common/test_json-test-json.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_json_CFLAGS) $(CFLAGS) -c -o src/common/test_json-test-json.o `test -f 'src/common/test-json.c' || echo '$(srcdir)/'`src/common/test-json.c

src/common/test_json-test-json.obj: src/common/test-json.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_json_CFLAGS) $(CFLAGS) -MT src/common/test_json-test-json.obj -MD -MP -MF src/common/$(DEPDIR)/test_json-test-json.Tpo -c -o src/common/test_json-test-json.obj `if test -f 'src/common/test-json.c'; then $(CYGPATH_W) 'src/common/test-json.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-json.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_json-test-json.Tpo src/common/$(DEPDIR)/test_json-test-json.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-json.c' object='src/common/test_json-test-json.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_json_CFLAGS) $(CFLAGS) -c -o src/common/test_json-test-json.obj `if test -f 'src/common/test-json.c'; then $(CYGPATH_W) 'src/common/test-json.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-json.c'; fi`

src/ws/test_kerberos-test-kerberos.o: src/ws/test-kerberos.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_kerberos_CFLAGS) $(CFLAGS) -MT src/ws/test_kerberos-test-kerberos.o -MD -MP -MF src/ws/$(DEPDIR)/test_kerberos-test-kerberos.Tpo -c -o src/ws/test_kerberos-test-kerberos.o `test -f 'src/ws/test-kerberos.c' || echo '$(srcdir)/'`src/ws/test-kerberos.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_kerberos-test-kerberos.Tpo src/ws/$(DEPDIR)/test_kerberos-test-kerberos.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-kerberos.c' object='src/ws/test_kerberos-test-kerberos.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_kerberos_CFLAGS) $(CFLAGS) -c -o src/ws/test_kerberos-test-kerberos.o `test -f 'src/ws/test-kerberos.c' || echo '$(srcdir)/'`src/ws/test-kerberos.c

src/ws/test_kerberos-test-kerberos.obj: src/ws/test-kerberos.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_kerberos_CFLAGS) $(CFLAGS) -MT src/ws/test_kerberos-test-kerberos.obj -MD -MP -MF src/ws/$(DEPDIR)/test_kerberos-test-kerberos.Tpo -c -o src/ws/test_kerberos-test-kerberos.obj `if test -f 'src/ws/test-kerberos.c'; then $(CYGPATH_W) 'src/ws/test-kerberos.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-kerberos.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_kerberos-test-kerberos.Tpo src/ws/$(DEPDIR)/test_kerberos-test-kerberos.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-kerberos.c' object='src/ws/test_kerberos-test-kerberos.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_kerberos_CFLAGS) $(CFLAGS) -c -o src/ws/test_kerberos-test-kerberos.obj `if test -f 'src/ws/test-kerberos.c'; then $(CYGPATH_W) 'src/ws/test-kerberos.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-kerberos.c'; fi`

src/common/test_knownhosts-test-knownhosts.o: src/common/test-knownhosts.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_knownhosts_CFLAGS) $(CFLAGS) -MT src/common/test_knownhosts-test-knownhosts.o -MD -MP -MF src/common/$(DEPDIR)/test_knownhosts-test-knownhosts.Tpo -c -o src/common/test_knownhosts-test-knownhosts.o `test -f 'src/common/test-knownhosts.c' || echo '$(srcdir)/'`src/common/test-knownhosts.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_knownhosts-test-knownhosts.Tpo src/common/$(DEPDIR)/test_knownhosts-test-knownhosts.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-knownhosts.c' object='src/common/test_knownhosts-test-knownhosts.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_knownhosts_CFLAGS) $(CFLAGS) -c -o src/common/test_knownhosts-test-knownhosts.o `test -f 'src/common/test-knownhosts.c' || echo '$(srcdir)/'`src/common/test-knownhosts.c

src/common/test_knownhosts-test-knownhosts.obj: src/common/test-knownhosts.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_knownhosts_CFLAGS) $(CFLAGS) -MT src/common/test_knownhosts-test-knownhosts.obj -MD -MP -MF src/common/$(DEPDIR)/test_knownhosts-test-knownhosts.Tpo -c -o src/common/test_knownhosts-test-knownhosts.obj `if test -f 'src/common/test-knownhosts.c'; then $(CYGPATH_W) 'src/common/test-knownhosts.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-knownhosts.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_knownhosts-test-knownhosts.Tpo src/common/$(DEPDIR)/test_knownhosts-test-knownhosts.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-knownhosts.c' object='src/common/test_knownhosts-test-knownhosts.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_knownhosts_CFLAGS) $(CFLAGS) -c -o src/common/test_knownhosts-test-knownhosts.obj `if test -f 'src/common/test-knownhosts.c'; then $(CYGPATH_W) 'src/common/test-knownhosts.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-knownhosts.c'; fi`

src/common/test_locale-test-locale.o: src/common/test-locale.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_locale_CFLAGS) $(CFLAGS) -MT src/common/test_locale-test-locale.o -MD -MP -MF src/common/$(DEPDIR)/test_locale-test-locale.Tpo -c -o src/common/test_locale-test-locale.o `test -f 'src/common/test-locale.c' || echo '$(srcdir)/'`src/common/test-locale.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_locale-test-locale.Tpo src/common/$(DEPDIR)/test_locale-test-locale.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-locale.c' object='src/common/test_locale-test-locale.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_locale_CFLAGS) $(CFLAGS) -c -o src/common/test_locale-test-locale.o `test -f 'src/common/test-locale.c' || echo '$(srcdir)/'`src/common/test-locale.c

src/common/test_locale-test-locale.obj: src/common/test-locale.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_locale_CFLAGS) $(CFLAGS) -MT src/common/test_locale-test-locale.obj -MD -MP -MF src/common/$(DEPDIR)/test_locale-test-locale.Tpo -c -o src/common/test_locale-test-locale.obj `if test -f 'src/common/test-locale.c'; then $(CYGPATH_W) 'src/common/test-locale.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-locale.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_locale-test-locale.Tpo src/common/$(DEPDIR)/test_locale-test-locale.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-locale.c' object='src/common/test_locale-test-locale.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_locale_CFLAGS) $(CFLAGS) -c -o src/common/test_locale-test-locale.obj `if test -f 'src/common/test-locale.c'; then $(CYGPATH_W) 'src/common/test-locale.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-locale.c'; fi`

src/bridge/test_metrics-test-metrics.o: src/bridge/test-metrics.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_metrics_CFLAGS) $(CFLAGS) -MT src/bridge/test_metrics-test-metrics.o -MD -MP -MF src/bridge/$(DEPDIR)/test_metrics-test-metrics.Tpo -c -o src/bridge/test_metrics-test-metrics.o `test -f 'src/bridge/test-metrics.c' || echo '$(srcdir)/'`src/bridge/test-metrics.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_metrics-test-metrics.Tpo src/bridge/$(DEPDIR)/test_metrics-test-metrics.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-metrics.c' object='src/bridge/test_metrics-test-metrics.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_metrics_CFLAGS) $(CFLAGS) -c -o src/bridge/test_metrics-test-metrics.o `test -f 'src/bridge/test-metrics.c' || echo '$(srcdir)/'`src/bridge/test-metrics.c

src/bridge/test_metrics-test-metrics.obj: src/bridge/test-metrics.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_metrics_CFLAGS) $(CFLAGS) -MT src/bridge/test_metrics-test-metrics.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_metrics-test-metrics.Tpo -c -o src/bridge/test_metrics-test-metrics.obj `if test -f 'src/bridge/test-metrics.c'; then $(CYGPATH_W) 'src/bridge/test-metrics.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-metrics.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_metrics-test-metrics.Tpo src/bridge/$(DEPDIR)/test_metrics-test-metrics.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-metrics.c' object='src/bridge/test_metrics-test-metrics.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_metrics_CFLAGS) $(CFLAGS) -c -o src/bridge/test_metrics-test-metrics.obj `if test -f 'src/bridge/test-metrics.c'; then $(CYGPATH_W) 'src/bridge/test-metrics.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-metrics.c'; fi`

src/bridge/test_metrics-mock-transport.o: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_metrics_CFLAGS) $(CFLAGS) -MT src/bridge/test_metrics-mock-transport.o -MD -MP -MF src/bridge/$(DEPDIR)/test_metrics-mock-transport.Tpo -c -o src/bridge/test_metrics-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_metrics-mock-transport.Tpo src/bridge/$(DEPDIR)/test_metrics-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_metrics-mock-transport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_metrics_CFLAGS) $(CFLAGS) -c -o src/bridge/test_metrics-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c

src/bridge/test_metrics-mock-transport.obj: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_metrics_CFLAGS) $(CFLAGS) -MT src/bridge/test_metrics-mock-transport.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_metrics-mock-transport.Tpo -c -o src/bridge/test_metrics-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_metrics-mock-transport.Tpo src/bridge/$(DEPDIR)/test_metrics-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_metrics-mock-transport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_metrics_CFLAGS) $(CFLAGS) -c -o src/bridge/test_metrics-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`

src/bridge/test_packages-test-packages.o: src/bridge/test-packages.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_packages_CFLAGS) $(CFLAGS) -MT src/bridge/test_packages-test-packages.o -MD -MP -MF src/bridge/$(DEPDIR)/test_packages-test-packages.Tpo -c -o src/bridge/test_packages-test-packages.o `test -f 'src/bridge/test-packages.c' || echo '$(srcdir)/'`src/bridge/test-packages.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_packages-test-packages.Tpo src/bridge/$(DEPDIR)/test_packages-test-packages.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-packages.c' object='src/bridge/test_packages-test-packages.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_packages_CFLAGS) $(CFLAGS) -c -o src/bridge/test_packages-test-packages.o `test -f 'src/bridge/test-packages.c' || echo '$(srcdir)/'`src/bridge/test-packages.c

src/bridge/test_packages-test-packages.obj: src/bridge/test-packages.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_packages_CFLAGS) $(CFLAGS) -MT src/bridge/test_packages-test-packages.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_packages-test-packages.Tpo -c -o src/bridge/test_packages-test-packages.obj `if test -f 'src/bridge/test-packages.c'; then $(CYGPATH_W) 'src/bridge/test-packages.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-packages.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_packages-test-packages.Tpo src/bridge/$(DEPDIR)/test_packages-test-packages.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-packages.c' object='src/bridge/test_packages-test-packages.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_packages_CFLAGS) $(CFLAGS) -c -o src/bridge/test_packages-test-packages.obj `if test -f 'src/bridge/test-packages.c'; then $(CYGPATH_W) 'src/bridge/test-packages.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-packages.c'; fi`

src/bridge/test_packages-mock-transport.o: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_packages_CFLAGS) $(CFLAGS) -MT src/bridge/test_packages-mock-transport.o -MD -MP -MF src/bridge/$(DEPDIR)/test_packages-mock-transport.Tpo -c -o src/bridge/test_packages-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_packages-mock-transport.Tpo src/bridge/$(DEPDIR)/test_packages-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_packages-mock-transport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_packages_CFLAGS) $(CFLAGS) -c -o src/bridge/test_packages-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c

src/bridge/test_packages-mock-transport.obj: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_packages_CFLAGS) $(CFLAGS) -MT src/bridge/test_packages-mock-transport.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_packages-mock-transport.Tpo -c -o src/bridge/test_packages-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_packages-mock-transport.Tpo src/bridge/$(DEPDIR)/test_packages-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_packages-mock-transport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_packages_CFLAGS) $(CFLAGS) -c -o src/bridge/test_packages-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`

src/bridge/test_paths-test-paths.o: src/bridge/test-paths.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_paths_CFLAGS) $(CFLAGS) -MT src/bridge/test_paths-test-paths.o -MD -MP -MF src/bridge/$(DEPDIR)/test_paths-test-paths.Tpo -c -o src/bridge/test_paths-test-paths.o `test -f 'src/bridge/test-paths.c' || echo '$(srcdir)/'`src/bridge/test-paths.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_paths-test-paths.Tpo src/bridge/$(DEPDIR)/test_paths-test-paths.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-paths.c' object='src/bridge/test_paths-test-paths.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_paths_CFLAGS) $(CFLAGS) -c -o src/bridge/test_paths-test-paths.o `test -f 'src/bridge/test-paths.c' || echo '$(srcdir)/'`src/bridge/test-paths.c

src/bridge/test_paths-test-paths.obj: src/bridge/test-paths.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_paths_CFLAGS) $(CFLAGS) -MT src/bridge/test_paths-test-paths.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_paths-test-paths.Tpo -c -o src/bridge/test_paths-test-paths.obj `if test -f 'src/bridge/test-paths.c'; then $(CYGPATH_W) 'src/bridge/test-paths.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-paths.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_paths-test-paths.Tpo src/bridge/$(DEPDIR)/test_paths-test-paths.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-paths.c' object='src/bridge/test_paths-test-paths.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_paths_CFLAGS) $(CFLAGS) -c -o src/bridge/test_paths-test-paths.obj `if test -f 'src/bridge/test-paths.c'; then $(CYGPATH_W) 'src/bridge/test-paths.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-paths.c'; fi`

src/bridge/test_pcp-test-pcp.o: src/bridge/test-pcp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pcp_CFLAGS) $(CFLAGS) -MT src/bridge/test_pcp-test-pcp.o -MD -MP -MF src/bridge/$(DEPDIR)/test_pcp-test-pcp.Tpo -c -o src/bridge/test_pcp-test-pcp.o `test -f 'src/bridge/test-pcp.c' || echo '$(srcdir)/'`src/bridge/test-pcp.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_pcp-test-pcp.Tpo src/bridge/$(DEPDIR)/test_pcp-test-pcp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-pcp.c' object='src/bridge/test_pcp-test-pcp.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pcp_CFLAGS) $(CFLAGS) -c -o src/bridge/test_pcp-test-pcp.o `test -f 'src/bridge/test-pcp.c' || echo '$(srcdir)/'`src/bridge/test-pcp.c

src/bridge/test_pcp-test-pcp.obj: src/bridge/test-pcp.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pcp_CFLAGS) $(CFLAGS) -MT src/bridge/test_pcp-test-pcp.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_pcp-test-pcp.Tpo -c -o src/bridge/test_pcp-test-pcp.obj `if test -f 'src/bridge/test-pcp.c'; then $(CYGPATH_W) 'src/bridge/test-pcp.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-pcp.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_pcp-test-pcp.Tpo src/bridge/$(DEPDIR)/test_pcp-test-pcp.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-pcp.c' object='src/bridge/test_pcp-test-pcp.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pcp_CFLAGS) $(CFLAGS) -c -o src/bridge/test_pcp-test-pcp.obj `if test -f 'src/bridge/test-pcp.c'; then $(CYGPATH_W) 'src/bridge/test-pcp.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-pcp.c'; fi`

src/bridge/test_pcp-mock-transport.o: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pcp_CFLAGS) $(CFLAGS) -MT src/bridge/test_pcp-mock-transport.o -MD -MP -MF src/bridge/$(DEPDIR)/test_pcp-mock-transport.Tpo -c -o src/bridge/test_pcp-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_pcp-mock-transport.Tpo src/bridge/$(DEPDIR)/test_pcp-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_pcp-mock-transport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pcp_CFLAGS) $(CFLAGS) -c -o src/bridge/test_pcp-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c

src/bridge/test_pcp-mock-transport.obj: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pcp_CFLAGS) $(CFLAGS) -MT src/bridge/test_pcp-mock-transport.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_pcp-mock-transport.Tpo -c -o src/bridge/test_pcp-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_pcp-mock-transport.Tpo src/bridge/$(DEPDIR)/test_pcp-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_pcp-mock-transport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pcp_CFLAGS) $(CFLAGS) -c -o src/bridge/test_pcp-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`

src/bridge/test_pcp_archives-test-pcp-archives.o: src/bridge/test-pcp-archives.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pcp_archives_CFLAGS) $(CFLAGS) -MT src/bridge/test_pcp_archives-test-pcp-archives.o -MD -MP -MF src/bridge/$(DEPDIR)/test_pcp_archives-test-pcp-archives.Tpo -c -o src/bridge/test_pcp_archives-test-pcp-archives.o `test -f 'src/bridge/test-pcp-archives.c' || echo '$(srcdir)/'`src/bridge/test-pcp-archives.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_pcp_archives-test-pcp-archives.Tpo src/bridge/$(DEPDIR)/test_pcp_archives-test-pcp-archives.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-pcp-archives.c' object='src/bridge/test_pcp_archives-test-pcp-archives.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pcp_archives_CFLAGS) $(CFLAGS) -c -o src/bridge/test_pcp_archives-test-pcp-archives.o `test -f 'src/bridge/test-pcp-archives.c' || echo '$(srcdir)/'`src/bridge/test-pcp-archives.c

src/bridge/test_pcp_archives-test-pcp-archives.obj: src/bridge/test-pcp-archives.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pcp_archives_CFLAGS) $(CFLAGS) -MT src/bridge/test_pcp_archives-test-pcp-archives.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_pcp_archives-test-pcp-archives.Tpo -c -o src/bridge/test_pcp_archives-test-pcp-archives.obj `if test -f 'src/bridge/test-pcp-archives.c'; then $(CYGPATH_W) 'src/bridge/test-pcp-archives.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-pcp-archives.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_pcp_archives-test-pcp-archives.Tpo src/bridge/$(DEPDIR)/test_pcp_archives-test-pcp-archives.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-pcp-archives.c' object='src/bridge/test_pcp_archives-test-pcp-archives.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pcp_archives_CFLAGS) $(CFLAGS) -c -o src/bridge/test_pcp_archives-test-pcp-archives.obj `if test -f 'src/bridge/test-pcp-archives.c'; then $(CYGPATH_W) 'src/bridge/test-pcp-archives.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-pcp-archives.c'; fi`

src/bridge/test_pcp_archives-mock-transport.o: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pcp_archives_CFLAGS) $(CFLAGS) -MT src/bridge/test_pcp_archives-mock-transport.o -MD -MP -MF src/bridge/$(DEPDIR)/test_pcp_archives-mock-transport.Tpo -c -o src/bridge/test_pcp_archives-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_pcp_archives-mock-transport.Tpo src/bridge/$(DEPDIR)/test_pcp_archives-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_pcp_archives-mock-transport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pcp_archives_CFLAGS) $(CFLAGS) -c -o src/bridge/test_pcp_archives-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c

src/bridge/test_pcp_archives-mock-transport.obj: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pcp_archives_CFLAGS) $(CFLAGS) -MT src/bridge/test_pcp_archives-mock-transport.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_pcp_archives-mock-transport.Tpo -c -o src/bridge/test_pcp_archives-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_pcp_archives-mock-transport.Tpo src/bridge/$(DEPDIR)/test_pcp_archives-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_pcp_archives-mock-transport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pcp_archives_CFLAGS) $(CFLAGS) -c -o src/bridge/test_pcp_archives-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`

src/bridge/test_peer-test-peer.o: src/bridge/test-peer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_peer_CFLAGS) $(CFLAGS) -MT src/bridge/test_peer-test-peer.o -MD -MP -MF src/bridge/$(DEPDIR)/test_peer-test-peer.Tpo -c -o src/bridge/test_peer-test-peer.o `test -f 'src/bridge/test-peer.c' || echo '$(srcdir)/'`src/bridge/test-peer.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_peer-test-peer.Tpo src/bridge/$(DEPDIR)/test_peer-test-peer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-peer.c' object='src/bridge/test_peer-test-peer.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_peer_CFLAGS) $(CFLAGS) -c -o src/bridge/test_peer-test-peer.o `test -f 'src/bridge/test-peer.c' || echo '$(srcdir)/'`src/bridge/test-peer.c

src/bridge/test_peer-test-peer.obj: src/bridge/test-peer.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_peer_CFLAGS) $(CFLAGS) -MT src/bridge/test_peer-test-peer.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_peer-test-peer.Tpo -c -o src/bridge/test_peer-test-peer.obj `if test -f 'src/bridge/test-peer.c'; then $(CYGPATH_W) 'src/bridge/test-peer.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-peer.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_peer-test-peer.Tpo src/bridge/$(DEPDIR)/test_peer-test-peer.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-peer.c' object='src/bridge/test_peer-test-peer.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_peer_CFLAGS) $(CFLAGS) -c -o src/bridge/test_peer-test-peer.obj `if test -f 'src/bridge/test-peer.c'; then $(CYGPATH_W) 'src/bridge/test-peer.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-peer.c'; fi`

src/bridge/test_peer-mock-transport.o: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_peer_CFLAGS) $(CFLAGS) -MT src/bridge/test_peer-mock-transport.o -MD -MP -MF src/bridge/$(DEPDIR)/test_peer-mock-transport.Tpo -c -o src/bridge/test_peer-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_peer-mock-transport.Tpo src/bridge/$(DEPDIR)/test_peer-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_peer-mock-transport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_peer_CFLAGS) $(CFLAGS) -c -o src/bridge/test_peer-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c

src/bridge/test_peer-mock-transport.obj: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_peer_CFLAGS) $(CFLAGS) -MT src/bridge/test_peer-mock-transport.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_peer-mock-transport.Tpo -c -o src/bridge/test_peer-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_peer-mock-transport.Tpo src/bridge/$(DEPDIR)/test_peer-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_peer-mock-transport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_peer_CFLAGS) $(CFLAGS) -c -o src/bridge/test_peer-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`

src/common/test_pipe-test-pipe.o: src/common/test-pipe.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pipe_CFLAGS) $(CFLAGS) -MT src/common/test_pipe-test-pipe.o -MD -MP -MF src/common/$(DEPDIR)/test_pipe-test-pipe.Tpo -c -o src/common/test_pipe-test-pipe.o `test -f 'src/common/test-pipe.c' || echo '$(srcdir)/'`src/common/test-pipe.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_pipe-test-pipe.Tpo src/common/$(DEPDIR)/test_pipe-test-pipe.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-pipe.c' object='src/common/test_pipe-test-pipe.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pipe_CFLAGS) $(CFLAGS) -c -o src/common/test_pipe-test-pipe.o `test -f 'src/common/test-pipe.c' || echo '$(srcdir)/'`src/common/test-pipe.c

src/common/test_pipe-test-pipe.obj: src/common/test-pipe.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pipe_CFLAGS) $(CFLAGS) -MT src/common/test_pipe-test-pipe.obj -MD -MP -MF src/common/$(DEPDIR)/test_pipe-test-pipe.Tpo -c -o src/common/test_pipe-test-pipe.obj `if test -f 'src/common/test-pipe.c'; then $(CYGPATH_W) 'src/common/test-pipe.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-pipe.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_pipe-test-pipe.Tpo src/common/$(DEPDIR)/test_pipe-test-pipe.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-pipe.c' object='src/common/test_pipe-test-pipe.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pipe_CFLAGS) $(CFLAGS) -c -o src/common/test_pipe-test-pipe.obj `if test -f 'src/common/test-pipe.c'; then $(CYGPATH_W) 'src/common/test-pipe.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-pipe.c'; fi`

src/bridge/test_pipe_channel-test-pipe-channel.o: src/bridge/test-pipe-channel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pipe_channel_CFLAGS) $(CFLAGS) -MT src/bridge/test_pipe_channel-test-pipe-channel.o -MD -MP -MF src/bridge/$(DEPDIR)/test_pipe_channel-test-pipe-channel.Tpo -c -o src/bridge/test_pipe_channel-test-pipe-channel.o `test -f 'src/bridge/test-pipe-channel.c' || echo '$(srcdir)/'`src/bridge/test-pipe-channel.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_pipe_channel-test-pipe-channel.Tpo src/bridge/$(DEPDIR)/test_pipe_channel-test-pipe-channel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-pipe-channel.c' object='src/bridge/test_pipe_channel-test-pipe-channel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pipe_channel_CFLAGS) $(CFLAGS) -c -o src/bridge/test_pipe_channel-test-pipe-channel.o `test -f 'src/bridge/test-pipe-channel.c' || echo '$(srcdir)/'`src/bridge/test-pipe-channel.c

src/bridge/test_pipe_channel-test-pipe-channel.obj: src/bridge/test-pipe-channel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pipe_channel_CFLAGS) $(CFLAGS) -MT src/bridge/test_pipe_channel-test-pipe-channel.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_pipe_channel-test-pipe-channel.Tpo -c -o src/bridge/test_pipe_channel-test-pipe-channel.obj `if test -f 'src/bridge/test-pipe-channel.c'; then $(CYGPATH_W) 'src/bridge/test-pipe-channel.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-pipe-channel.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_pipe_channel-test-pipe-channel.Tpo src/bridge/$(DEPDIR)/test_pipe_channel-test-pipe-channel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-pipe-channel.c' object='src/bridge/test_pipe_channel-test-pipe-channel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pipe_channel_CFLAGS) $(CFLAGS) -c -o src/bridge/test_pipe_channel-test-pipe-channel.obj `if test -f 'src/bridge/test-pipe-channel.c'; then $(CYGPATH_W) 'src/bridge/test-pipe-channel.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-pipe-channel.c'; fi`

src/bridge/test_pipe_channel-mock-transport.o: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pipe_channel_CFLAGS) $(CFLAGS) -MT src/bridge/test_pipe_channel-mock-transport.o -MD -MP -MF src/bridge/$(DEPDIR)/test_pipe_channel-mock-transport.Tpo -c -o src/bridge/test_pipe_channel-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_pipe_channel-mock-transport.Tpo src/bridge/$(DEPDIR)/test_pipe_channel-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_pipe_channel-mock-transport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pipe_channel_CFLAGS) $(CFLAGS) -c -o src/bridge/test_pipe_channel-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c

src/bridge/test_pipe_channel-mock-transport.obj: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pipe_channel_CFLAGS) $(CFLAGS) -MT src/bridge/test_pipe_channel-mock-transport.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_pipe_channel-mock-transport.Tpo -c -o src/bridge/test_pipe_channel-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_pipe_channel-mock-transport.Tpo src/bridge/$(DEPDIR)/test_pipe_channel-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_pipe_channel-mock-transport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_pipe_channel_CFLAGS) $(CFLAGS) -c -o src/bridge/test_pipe_channel-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`

src/bridge/test_process-test-process.o: src/bridge/test-process.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_process_CFLAGS) $(CFLAGS) -MT src/bridge/test_process-test-process.o -MD -MP -MF src/bridge/$(DEPDIR)/test_process-test-process.Tpo -c -o src/bridge/test_process-test-process.o `test -f 'src/bridge/test-process.c' || echo '$(srcdir)/'`src/bridge/test-process.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_process-test-process.Tpo src/bridge/$(DEPDIR)/test_process-test-process.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-process.c' object='src/bridge/test_process-test-process.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_process_CFLAGS) $(CFLAGS) -c -o src/bridge/test_process-test-process.o `test -f 'src/bridge/test-process.c' || echo '$(srcdir)/'`src/bridge/test-process.c

src/bridge/test_process-test-process.obj: src/bridge/test-process.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_process_CFLAGS) $(CFLAGS) -MT src/bridge/test_process-test-process.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_process-test-process.Tpo -c -o src/bridge/test_process-test-process.obj `if test -f 'src/bridge/test-process.c'; then $(CYGPATH_W) 'src/bridge/test-process.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-process.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_process-test-process.Tpo src/bridge/$(DEPDIR)/test_process-test-process.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-process.c' object='src/bridge/test_process-test-process.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_process_CFLAGS) $(CFLAGS) -c -o src/bridge/test_process-test-process.obj `if test -f 'src/bridge/test-process.c'; then $(CYGPATH_W) 'src/bridge/test-process.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-process.c'; fi`

src/ws/test_remotectlcertificate-test-remotectlcertificate.o: src/ws/test-remotectlcertificate.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_remotectlcertificate_CFLAGS) $(CFLAGS) -MT src/ws/test_remotectlcertificate-test-remotectlcertificate.o -MD -MP -MF src/ws/$(DEPDIR)/test_remotectlcertificate-test-remotectlcertificate.Tpo -c -o src/ws/test_remotectlcertificate-test-remotectlcertificate.o `test -f 'src/ws/test-remotectlcertificate.c' || echo '$(srcdir)/'`src/ws/test-remotectlcertificate.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_remotectlcertificate-test-remotectlcertificate.Tpo src/ws/$(DEPDIR)/test_remotectlcertificate-test-remotectlcertificate.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-remotectlcertificate.c' object='src/ws/test_remotectlcertificate-test-remotectlcertificate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_remotectlcertificate_CFLAGS) $(CFLAGS) -c -o src/ws/test_remotectlcertificate-test-remotectlcertificate.o `test -f 'src/ws/test-remotectlcertificate.c' || echo '$(srcdir)/'`src/ws/test-remotectlcertificate.c

src/ws/test_remotectlcertificate-test-remotectlcertificate.obj: src/ws/test-remotectlcertificate.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_remotectlcertificate_CFLAGS) $(CFLAGS) -MT src/ws/test_remotectlcertificate-test-remotectlcertificate.obj -MD -MP -MF src/ws/$(DEPDIR)/test_remotectlcertificate-test-remotectlcertificate.Tpo -c -o src/ws/test_remotectlcertificate-test-remotectlcertificate.obj `if test -f 'src/ws/test-remotectlcertificate.c'; then $(CYGPATH_W) 'src/ws/test-remotectlcertificate.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-remotectlcertificate.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_remotectlcertificate-test-remotectlcertificate.Tpo src/ws/$(DEPDIR)/test_remotectlcertificate-test-remotectlcertificate.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-remotectlcertificate.c' object='src/ws/test_remotectlcertificate-test-remotectlcertificate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_remotectlcertificate_CFLAGS) $(CFLAGS) -c -o src/ws/test_remotectlcertificate-test-remotectlcertificate.obj `if test -f 'src/ws/test-remotectlcertificate.c'; then $(CYGPATH_W) 'src/ws/test-remotectlcertificate.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-remotectlcertificate.c'; fi`

src/ws/test_remotectlcertificate-cockpitcertificate.o: src/ws/cockpitcertificate.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_remotectlcertificate_CFLAGS) $(CFLAGS) -MT src/ws/test_remotectlcertificate-cockpitcertificate.o -MD -MP -MF src/ws/$(DEPDIR)/test_remotectlcertificate-cockpitcertificate.Tpo -c -o src/ws/test_remotectlcertificate-cockpitcertificate.o `test -f 'src/ws/cockpitcertificate.c' || echo '$(srcdir)/'`src/ws/cockpitcertificate.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_remotectlcertificate-cockpitcertificate.Tpo src/ws/$(DEPDIR)/test_remotectlcertificate-cockpitcertificate.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitcertificate.c' object='src/ws/test_remotectlcertificate-cockpitcertificate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_remotectlcertificate_CFLAGS) $(CFLAGS) -c -o src/ws/test_remotectlcertificate-cockpitcertificate.o `test -f 'src/ws/cockpitcertificate.c' || echo '$(srcdir)/'`src/ws/cockpitcertificate.c

src/ws/test_remotectlcertificate-cockpitcertificate.obj: src/ws/cockpitcertificate.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_remotectlcertificate_CFLAGS) $(CFLAGS) -MT src/ws/test_remotectlcertificate-cockpitcertificate.obj -MD -MP -MF src/ws/$(DEPDIR)/test_remotectlcertificate-cockpitcertificate.Tpo -c -o src/ws/test_remotectlcertificate-cockpitcertificate.obj `if test -f 'src/ws/cockpitcertificate.c'; then $(CYGPATH_W) 'src/ws/cockpitcertificate.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitcertificate.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_remotectlcertificate-cockpitcertificate.Tpo src/ws/$(DEPDIR)/test_remotectlcertificate-cockpitcertificate.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/cockpitcertificate.c' object='src/ws/test_remotectlcertificate-cockpitcertificate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_remotectlcertificate_CFLAGS) $(CFLAGS) -c -o src/ws/test_remotectlcertificate-cockpitcertificate.obj `if test -f 'src/ws/cockpitcertificate.c'; then $(CYGPATH_W) 'src/ws/cockpitcertificate.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/cockpitcertificate.c'; fi`

src/ws/test_remotectlcertificate-remotectl-certificate.o: src/ws/remotectl-certificate.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_remotectlcertificate_CFLAGS) $(CFLAGS) -MT src/ws/test_remotectlcertificate-remotectl-certificate.o -MD -MP -MF src/ws/$(DEPDIR)/test_remotectlcertificate-remotectl-certificate.Tpo -c -o src/ws/test_remotectlcertificate-remotectl-certificate.o `test -f 'src/ws/remotectl-certificate.c' || echo '$(srcdir)/'`src/ws/remotectl-certificate.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_remotectlcertificate-remotectl-certificate.Tpo src/ws/$(DEPDIR)/test_remotectlcertificate-remotectl-certificate.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/remotectl-certificate.c' object='src/ws/test_remotectlcertificate-remotectl-certificate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_remotectlcertificate_CFLAGS) $(CFLAGS) -c -o src/ws/test_remotectlcertificate-remotectl-certificate.o `test -f 'src/ws/remotectl-certificate.c' || echo '$(srcdir)/'`src/ws/remotectl-certificate.c

src/ws/test_remotectlcertificate-remotectl-certificate.obj: src/ws/remotectl-certificate.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_remotectlcertificate_CFLAGS) $(CFLAGS) -MT src/ws/test_remotectlcertificate-remotectl-certificate.obj -MD -MP -MF src/ws/$(DEPDIR)/test_remotectlcertificate-remotectl-certificate.Tpo -c -o src/ws/test_remotectlcertificate-remotectl-certificate.obj `if test -f 'src/ws/remotectl-certificate.c'; then $(CYGPATH_W) 'src/ws/remotectl-certificate.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/remotectl-certificate.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_remotectlcertificate-remotectl-certificate.Tpo src/ws/$(DEPDIR)/test_remotectlcertificate-remotectl-certificate.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/remotectl-certificate.c' object='src/ws/test_remotectlcertificate-remotectl-certificate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_remotectlcertificate_CFLAGS) $(CFLAGS) -c -o src/ws/test_remotectlcertificate-remotectl-certificate.obj `if test -f 'src/ws/remotectl-certificate.c'; then $(CYGPATH_W) 'src/ws/remotectl-certificate.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/remotectl-certificate.c'; fi`

src/bridge/test_router-test-router.o: src/bridge/test-router.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_router_CFLAGS) $(CFLAGS) -MT src/bridge/test_router-test-router.o -MD -MP -MF src/bridge/$(DEPDIR)/test_router-test-router.Tpo -c -o src/bridge/test_router-test-router.o `test -f 'src/bridge/test-router.c' || echo '$(srcdir)/'`src/bridge/test-router.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_router-test-router.Tpo src/bridge/$(DEPDIR)/test_router-test-router.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-router.c' object='src/bridge/test_router-test-router.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_router_CFLAGS) $(CFLAGS) -c -o src/bridge/test_router-test-router.o `test -f 'src/bridge/test-router.c' || echo '$(srcdir)/'`src/bridge/test-router.c

src/bridge/test_router-test-router.obj: src/bridge/test-router.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_router_CFLAGS) $(CFLAGS) -MT src/bridge/test_router-test-router.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_router-test-router.Tpo -c -o src/bridge/test_router-test-router.obj `if test -f 'src/bridge/test-router.c'; then $(CYGPATH_W) 'src/bridge/test-router.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-router.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_router-test-router.Tpo src/bridge/$(DEPDIR)/test_router-test-router.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-router.c' object='src/bridge/test_router-test-router.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_router_CFLAGS) $(CFLAGS) -c -o src/bridge/test_router-test-router.obj `if test -f 'src/bridge/test-router.c'; then $(CYGPATH_W) 'src/bridge/test-router.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-router.c'; fi`

src/bridge/test_router-mock-channel.o: src/bridge/mock-channel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_router_CFLAGS) $(CFLAGS) -MT src/bridge/test_router-mock-channel.o -MD -MP -MF src/bridge/$(DEPDIR)/test_router-mock-channel.Tpo -c -o src/bridge/test_router-mock-channel.o `test -f 'src/bridge/mock-channel.c' || echo '$(srcdir)/'`src/bridge/mock-channel.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_router-mock-channel.Tpo src/bridge/$(DEPDIR)/test_router-mock-channel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-channel.c' object='src/bridge/test_router-mock-channel.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_router_CFLAGS) $(CFLAGS) -c -o src/bridge/test_router-mock-channel.o `test -f 'src/bridge/mock-channel.c' || echo '$(srcdir)/'`src/bridge/mock-channel.c

src/bridge/test_router-mock-channel.obj: src/bridge/mock-channel.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_router_CFLAGS) $(CFLAGS) -MT src/bridge/test_router-mock-channel.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_router-mock-channel.Tpo -c -o src/bridge/test_router-mock-channel.obj `if test -f 'src/bridge/mock-channel.c'; then $(CYGPATH_W) 'src/bridge/mock-channel.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-channel.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_router-mock-channel.Tpo src/bridge/$(DEPDIR)/test_router-mock-channel.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-channel.c' object='src/bridge/test_router-mock-channel.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_router_CFLAGS) $(CFLAGS) -c -o src/bridge/test_router-mock-channel.obj `if test -f 'src/bridge/mock-channel.c'; then $(CYGPATH_W) 'src/bridge/mock-channel.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-channel.c'; fi`

src/bridge/test_router-mock-transport.o: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_router_CFLAGS) $(CFLAGS) -MT src/bridge/test_router-mock-transport.o -MD -MP -MF src/bridge/$(DEPDIR)/test_router-mock-transport.Tpo -c -o src/bridge/test_router-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_router-mock-transport.Tpo src/bridge/$(DEPDIR)/test_router-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_router-mock-transport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_router_CFLAGS) $(CFLAGS) -c -o src/bridge/test_router-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c

src/bridge/test_router-mock-transport.obj: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_router_CFLAGS) $(CFLAGS) -MT src/bridge/test_router-mock-transport.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_router-mock-transport.Tpo -c -o src/bridge/test_router-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_router-mock-transport.Tpo src/bridge/$(DEPDIR)/test_router-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_router-mock-transport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_router_CFLAGS) $(CFLAGS) -c -o src/bridge/test_router-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`

src/bridge/test_rules-test-rules.o: src/bridge/test-rules.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_rules_CFLAGS) $(CFLAGS) -MT src/bridge/test_rules-test-rules.o -MD -MP -MF src/bridge/$(DEPDIR)/test_rules-test-rules.Tpo -c -o src/bridge/test_rules-test-rules.o `test -f 'src/bridge/test-rules.c' || echo '$(srcdir)/'`src/bridge/test-rules.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_rules-test-rules.Tpo src/bridge/$(DEPDIR)/test_rules-test-rules.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-rules.c' object='src/bridge/test_rules-test-rules.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_rules_CFLAGS) $(CFLAGS) -c -o src/bridge/test_rules-test-rules.o `test -f 'src/bridge/test-rules.c' || echo '$(srcdir)/'`src/bridge/test-rules.c

src/bridge/test_rules-test-rules.obj: src/bridge/test-rules.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_rules_CFLAGS) $(CFLAGS) -MT src/bridge/test_rules-test-rules.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_rules-test-rules.Tpo -c -o src/bridge/test_rules-test-rules.obj `if test -f 'src/bridge/test-rules.c'; then $(CYGPATH_W) 'src/bridge/test-rules.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-rules.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_rules-test-rules.Tpo src/bridge/$(DEPDIR)/test_rules-test-rules.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-rules.c' object='src/bridge/test_rules-test-rules.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_rules_CFLAGS) $(CFLAGS) -c -o src/bridge/test_rules-test-rules.obj `if test -f 'src/bridge/test-rules.c'; then $(CYGPATH_W) 'src/bridge/test-rules.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-rules.c'; fi`

src/ws/test_server-test-server.o: src/ws/test-server.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_server_CFLAGS) $(CFLAGS) -MT src/ws/test_server-test-server.o -MD -MP -MF src/ws/$(DEPDIR)/test_server-test-server.Tpo -c -o src/ws/test_server-test-server.o `test -f 'src/ws/test-server.c' || echo '$(srcdir)/'`src/ws/test-server.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_server-test-server.Tpo src/ws/$(DEPDIR)/test_server-test-server.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-server.c' object='src/ws/test_server-test-server.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_server_CFLAGS) $(CFLAGS) -c -o src/ws/test_server-test-server.o `test -f 'src/ws/test-server.c' || echo '$(srcdir)/'`src/ws/test-server.c

src/ws/test_server-test-server.obj: src/ws/test-server.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_server_CFLAGS) $(CFLAGS) -MT src/ws/test_server-test-server.obj -MD -MP -MF src/ws/$(DEPDIR)/test_server-test-server.Tpo -c -o src/ws/test_server-test-server.obj `if test -f 'src/ws/test-server.c'; then $(CYGPATH_W) 'src/ws/test-server.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-server.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_server-test-server.Tpo src/ws/$(DEPDIR)/test_server-test-server.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-server.c' object='src/ws/test_server-test-server.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_server_CFLAGS) $(CFLAGS) -c -o src/ws/test_server-test-server.obj `if test -f 'src/ws/test-server.c'; then $(CYGPATH_W) 'src/ws/test-server.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-server.c'; fi`

src/bridge/test_setup-test-setup.o: src/bridge/test-setup.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_setup_CFLAGS) $(CFLAGS) -MT src/bridge/test_setup-test-setup.o -MD -MP -MF src/bridge/$(DEPDIR)/test_setup-test-setup.Tpo -c -o src/bridge/test_setup-test-setup.o `test -f 'src/bridge/test-setup.c' || echo '$(srcdir)/'`src/bridge/test-setup.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_setup-test-setup.Tpo src/bridge/$(DEPDIR)/test_setup-test-setup.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-setup.c' object='src/bridge/test_setup-test-setup.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_setup_CFLAGS) $(CFLAGS) -c -o src/bridge/test_setup-test-setup.o `test -f 'src/bridge/test-setup.c' || echo '$(srcdir)/'`src/bridge/test-setup.c

src/bridge/test_setup-test-setup.obj: src/bridge/test-setup.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_setup_CFLAGS) $(CFLAGS) -MT src/bridge/test_setup-test-setup.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_setup-test-setup.Tpo -c -o src/bridge/test_setup-test-setup.obj `if test -f 'src/bridge/test-setup.c'; then $(CYGPATH_W) 'src/bridge/test-setup.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-setup.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_setup-test-setup.Tpo src/bridge/$(DEPDIR)/test_setup-test-setup.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-setup.c' object='src/bridge/test_setup-test-setup.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_setup_CFLAGS) $(CFLAGS) -c -o src/bridge/test_setup-test-setup.obj `if test -f 'src/bridge/test-setup.c'; then $(CYGPATH_W) 'src/bridge/test-setup.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-setup.c'; fi`

src/pam-ssh-add/test_ssh_add-test-ssh-add.o: src/pam-ssh-add/test-ssh-add.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_ssh_add_CFLAGS) $(CFLAGS) -MT src/pam-ssh-add/test_ssh_add-test-ssh-add.o -MD -MP -MF src/pam-ssh-add/$(DEPDIR)/test_ssh_add-test-ssh-add.Tpo -c -o src/pam-ssh-add/test_ssh_add-test-ssh-add.o `test -f 'src/pam-ssh-add/test-ssh-add.c' || echo '$(srcdir)/'`src/pam-ssh-add/test-ssh-add.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/pam-ssh-add/$(DEPDIR)/test_ssh_add-test-ssh-add.Tpo src/pam-ssh-add/$(DEPDIR)/test_ssh_add-test-ssh-add.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pam-ssh-add/test-ssh-add.c' object='src/pam-ssh-add/test_ssh_add-test-ssh-add.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_ssh_add_CFLAGS) $(CFLAGS) -c -o src/pam-ssh-add/test_ssh_add-test-ssh-add.o `test -f 'src/pam-ssh-add/test-ssh-add.c' || echo '$(srcdir)/'`src/pam-ssh-add/test-ssh-add.c

src/pam-ssh-add/test_ssh_add-test-ssh-add.obj: src/pam-ssh-add/test-ssh-add.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_ssh_add_CFLAGS) $(CFLAGS) -MT src/pam-ssh-add/test_ssh_add-test-ssh-add.obj -MD -MP -MF src/pam-ssh-add/$(DEPDIR)/test_ssh_add-test-ssh-add.Tpo -c -o src/pam-ssh-add/test_ssh_add-test-ssh-add.obj `if test -f 'src/pam-ssh-add/test-ssh-add.c'; then $(CYGPATH_W) 'src/pam-ssh-add/test-ssh-add.c'; else $(CYGPATH_W) '$(srcdir)/src/pam-ssh-add/test-ssh-add.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/pam-ssh-add/$(DEPDIR)/test_ssh_add-test-ssh-add.Tpo src/pam-ssh-add/$(DEPDIR)/test_ssh_add-test-ssh-add.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/pam-ssh-add/test-ssh-add.c' object='src/pam-ssh-add/test_ssh_add-test-ssh-add.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_ssh_add_CFLAGS) $(CFLAGS) -c -o src/pam-ssh-add/test_ssh_add-test-ssh-add.obj `if test -f 'src/pam-ssh-add/test-ssh-add.c'; then $(CYGPATH_W) 'src/pam-ssh-add/test-ssh-add.c'; else $(CYGPATH_W) '$(srcdir)/src/pam-ssh-add/test-ssh-add.c'; fi`

src/ssh/test_sshbridge-test-sshbridge.o: src/ssh/test-sshbridge.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sshbridge_CFLAGS) $(CFLAGS) -MT src/ssh/test_sshbridge-test-sshbridge.o -MD -MP -MF src/ssh/$(DEPDIR)/test_sshbridge-test-sshbridge.Tpo -c -o src/ssh/test_sshbridge-test-sshbridge.o `test -f 'src/ssh/test-sshbridge.c' || echo '$(srcdir)/'`src/ssh/test-sshbridge.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ssh/$(DEPDIR)/test_sshbridge-test-sshbridge.Tpo src/ssh/$(DEPDIR)/test_sshbridge-test-sshbridge.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ssh/test-sshbridge.c' object='src/ssh/test_sshbridge-test-sshbridge.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sshbridge_CFLAGS) $(CFLAGS) -c -o src/ssh/test_sshbridge-test-sshbridge.o `test -f 'src/ssh/test-sshbridge.c' || echo '$(srcdir)/'`src/ssh/test-sshbridge.c

src/ssh/test_sshbridge-test-sshbridge.obj: src/ssh/test-sshbridge.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sshbridge_CFLAGS) $(CFLAGS) -MT src/ssh/test_sshbridge-test-sshbridge.obj -MD -MP -MF src/ssh/$(DEPDIR)/test_sshbridge-test-sshbridge.Tpo -c -o src/ssh/test_sshbridge-test-sshbridge.obj `if test -f 'src/ssh/test-sshbridge.c'; then $(CYGPATH_W) 'src/ssh/test-sshbridge.c'; else $(CYGPATH_W) '$(srcdir)/src/ssh/test-sshbridge.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ssh/$(DEPDIR)/test_sshbridge-test-sshbridge.Tpo src/ssh/$(DEPDIR)/test_sshbridge-test-sshbridge.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ssh/test-sshbridge.c' object='src/ssh/test_sshbridge-test-sshbridge.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sshbridge_CFLAGS) $(CFLAGS) -c -o src/ssh/test_sshbridge-test-sshbridge.obj `if test -f 'src/ssh/test-sshbridge.c'; then $(CYGPATH_W) 'src/ssh/test-sshbridge.c'; else $(CYGPATH_W) '$(srcdir)/src/ssh/test-sshbridge.c'; fi`

src/ssh/test_sshoptions-test-sshoptions.o: src/ssh/test-sshoptions.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sshoptions_CFLAGS) $(CFLAGS) -MT src/ssh/test_sshoptions-test-sshoptions.o -MD -MP -MF src/ssh/$(DEPDIR)/test_sshoptions-test-sshoptions.Tpo -c -o src/ssh/test_sshoptions-test-sshoptions.o `test -f 'src/ssh/test-sshoptions.c' || echo '$(srcdir)/'`src/ssh/test-sshoptions.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ssh/$(DEPDIR)/test_sshoptions-test-sshoptions.Tpo src/ssh/$(DEPDIR)/test_sshoptions-test-sshoptions.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ssh/test-sshoptions.c' object='src/ssh/test_sshoptions-test-sshoptions.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sshoptions_CFLAGS) $(CFLAGS) -c -o src/ssh/test_sshoptions-test-sshoptions.o `test -f 'src/ssh/test-sshoptions.c' || echo '$(srcdir)/'`src/ssh/test-sshoptions.c

src/ssh/test_sshoptions-test-sshoptions.obj: src/ssh/test-sshoptions.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sshoptions_CFLAGS) $(CFLAGS) -MT src/ssh/test_sshoptions-test-sshoptions.obj -MD -MP -MF src/ssh/$(DEPDIR)/test_sshoptions-test-sshoptions.Tpo -c -o src/ssh/test_sshoptions-test-sshoptions.obj `if test -f 'src/ssh/test-sshoptions.c'; then $(CYGPATH_W) 'src/ssh/test-sshoptions.c'; else $(CYGPATH_W) '$(srcdir)/src/ssh/test-sshoptions.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ssh/$(DEPDIR)/test_sshoptions-test-sshoptions.Tpo src/ssh/$(DEPDIR)/test_sshoptions-test-sshoptions.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ssh/test-sshoptions.c' object='src/ssh/test_sshoptions-test-sshoptions.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_sshoptions_CFLAGS) $(CFLAGS) -c -o src/ssh/test_sshoptions-test-sshoptions.obj `if test -f 'src/ssh/test-sshoptions.c'; then $(CYGPATH_W) 'src/ssh/test-sshoptions.c'; else $(CYGPATH_W) '$(srcdir)/src/ssh/test-sshoptions.c'; fi`

src/bridge/test_stream-test-stream.o: src/bridge/test-stream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_stream_CFLAGS) $(CFLAGS) -MT src/bridge/test_stream-test-stream.o -MD -MP -MF src/bridge/$(DEPDIR)/test_stream-test-stream.Tpo -c -o src/bridge/test_stream-test-stream.o `test -f 'src/bridge/test-stream.c' || echo '$(srcdir)/'`src/bridge/test-stream.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_stream-test-stream.Tpo src/bridge/$(DEPDIR)/test_stream-test-stream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-stream.c' object='src/bridge/test_stream-test-stream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_stream_CFLAGS) $(CFLAGS) -c -o src/bridge/test_stream-test-stream.o `test -f 'src/bridge/test-stream.c' || echo '$(srcdir)/'`src/bridge/test-stream.c

src/bridge/test_stream-test-stream.obj: src/bridge/test-stream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_stream_CFLAGS) $(CFLAGS) -MT src/bridge/test_stream-test-stream.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_stream-test-stream.Tpo -c -o src/bridge/test_stream-test-stream.obj `if test -f 'src/bridge/test-stream.c'; then $(CYGPATH_W) 'src/bridge/test-stream.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-stream.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_stream-test-stream.Tpo src/bridge/$(DEPDIR)/test_stream-test-stream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-stream.c' object='src/bridge/test_stream-test-stream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_stream_CFLAGS) $(CFLAGS) -c -o src/bridge/test_stream-test-stream.obj `if test -f 'src/bridge/test-stream.c'; then $(CYGPATH_W) 'src/bridge/test-stream.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-stream.c'; fi`

src/common/test_stream-mock-io-stream.o: src/common/mock-io-stream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_stream_CFLAGS) $(CFLAGS) -MT src/common/test_stream-mock-io-stream.o -MD -MP -MF src/common/$(DEPDIR)/test_stream-mock-io-stream.Tpo -c -o src/common/test_stream-mock-io-stream.o `test -f 'src/common/mock-io-stream.c' || echo '$(srcdir)/'`src/common/mock-io-stream.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_stream-mock-io-stream.Tpo src/common/$(DEPDIR)/test_stream-mock-io-stream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/mock-io-stream.c' object='src/common/test_stream-mock-io-stream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_stream_CFLAGS) $(CFLAGS) -c -o src/common/test_stream-mock-io-stream.o `test -f 'src/common/mock-io-stream.c' || echo '$(srcdir)/'`src/common/mock-io-stream.c

src/common/test_stream-mock-io-stream.obj: src/common/mock-io-stream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_stream_CFLAGS) $(CFLAGS) -MT src/common/test_stream-mock-io-stream.obj -MD -MP -MF src/common/$(DEPDIR)/test_stream-mock-io-stream.Tpo -c -o src/common/test_stream-mock-io-stream.obj `if test -f 'src/common/mock-io-stream.c'; then $(CYGPATH_W) 'src/common/mock-io-stream.c'; else $(CYGPATH_W) '$(srcdir)/src/common/mock-io-stream.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_stream-mock-io-stream.Tpo src/common/$(DEPDIR)/test_stream-mock-io-stream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/mock-io-stream.c' object='src/common/test_stream-mock-io-stream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_stream_CFLAGS) $(CFLAGS) -c -o src/common/test_stream-mock-io-stream.obj `if test -f 'src/common/mock-io-stream.c'; then $(CYGPATH_W) 'src/common/mock-io-stream.c'; else $(CYGPATH_W) '$(srcdir)/src/common/mock-io-stream.c'; fi`

src/common/test_system-test-system.o: src/common/test-system.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_system_CFLAGS) $(CFLAGS) -MT src/common/test_system-test-system.o -MD -MP -MF src/common/$(DEPDIR)/test_system-test-system.Tpo -c -o src/common/test_system-test-system.o `test -f 'src/common/test-system.c' || echo '$(srcdir)/'`src/common/test-system.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_system-test-system.Tpo src/common/$(DEPDIR)/test_system-test-system.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-system.c' object='src/common/test_system-test-system.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_system_CFLAGS) $(CFLAGS) -c -o src/common/test_system-test-system.o `test -f 'src/common/test-system.c' || echo '$(srcdir)/'`src/common/test-system.c

src/common/test_system-test-system.obj: src/common/test-system.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_system_CFLAGS) $(CFLAGS) -MT src/common/test_system-test-system.obj -MD -MP -MF src/common/$(DEPDIR)/test_system-test-system.Tpo -c -o src/common/test_system-test-system.obj `if test -f 'src/common/test-system.c'; then $(CYGPATH_W) 'src/common/test-system.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-system.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_system-test-system.Tpo src/common/$(DEPDIR)/test_system-test-system.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-system.c' object='src/common/test_system-test-system.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_system_CFLAGS) $(CFLAGS) -c -o src/common/test_system-test-system.obj `if test -f 'src/common/test-system.c'; then $(CYGPATH_W) 'src/common/test-system.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-system.c'; fi`

src/common/test_template-test-template.o: src/common/test-template.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_template_CFLAGS) $(CFLAGS) -MT src/common/test_template-test-template.o -MD -MP -MF src/common/$(DEPDIR)/test_template-test-template.Tpo -c -o src/common/test_template-test-template.o `test -f 'src/common/test-template.c' || echo '$(srcdir)/'`src/common/test-template.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_template-test-template.Tpo src/common/$(DEPDIR)/test_template-test-template.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-template.c' object='src/common/test_template-test-template.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_template_CFLAGS) $(CFLAGS) -c -o src/common/test_template-test-template.o `test -f 'src/common/test-template.c' || echo '$(srcdir)/'`src/common/test-template.c

src/common/test_template-test-template.obj: src/common/test-template.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_template_CFLAGS) $(CFLAGS) -MT src/common/test_template-test-template.obj -MD -MP -MF src/common/$(DEPDIR)/test_template-test-template.Tpo -c -o src/common/test_template-test-template.obj `if test -f 'src/common/test-template.c'; then $(CYGPATH_W) 'src/common/test-template.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-template.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_template-test-template.Tpo src/common/$(DEPDIR)/test_template-test-template.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-template.c' object='src/common/test_template-test-template.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_template_CFLAGS) $(CFLAGS) -c -o src/common/test_template-test-template.obj `if test -f 'src/common/test-template.c'; then $(CYGPATH_W) 'src/common/test-template.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-template.c'; fi`

src/common/test_transport-test-transport.o: src/common/test-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_transport_CFLAGS) $(CFLAGS) -MT src/common/test_transport-test-transport.o -MD -MP -MF src/common/$(DEPDIR)/test_transport-test-transport.Tpo -c -o src/common/test_transport-test-transport.o `test -f 'src/common/test-transport.c' || echo '$(srcdir)/'`src/common/test-transport.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_transport-test-transport.Tpo src/common/$(DEPDIR)/test_transport-test-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-transport.c' object='src/common/test_transport-test-transport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_transport_CFLAGS) $(CFLAGS) -c -o src/common/test_transport-test-transport.o `test -f 'src/common/test-transport.c' || echo '$(srcdir)/'`src/common/test-transport.c

src/common/test_transport-test-transport.obj: src/common/test-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_transport_CFLAGS) $(CFLAGS) -MT src/common/test_transport-test-transport.obj -MD -MP -MF src/common/$(DEPDIR)/test_transport-test-transport.Tpo -c -o src/common/test_transport-test-transport.obj `if test -f 'src/common/test-transport.c'; then $(CYGPATH_W) 'src/common/test-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-transport.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_transport-test-transport.Tpo src/common/$(DEPDIR)/test_transport-test-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-transport.c' object='src/common/test_transport-test-transport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_transport_CFLAGS) $(CFLAGS) -c -o src/common/test_transport-test-transport.obj `if test -f 'src/common/test-transport.c'; then $(CYGPATH_W) 'src/common/test-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-transport.c'; fi`

src/common/test_unicode-test-unicode.o: src/common/test-unicode.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_unicode_CFLAGS) $(CFLAGS) -MT src/common/test_unicode-test-unicode.o -MD -MP -MF src/common/$(DEPDIR)/test_unicode-test-unicode.Tpo -c -o src/common/test_unicode-test-unicode.o `test -f 'src/common/test-unicode.c' || echo '$(srcdir)/'`src/common/test-unicode.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_unicode-test-unicode.Tpo src/common/$(DEPDIR)/test_unicode-test-unicode.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-unicode.c' object='src/common/test_unicode-test-unicode.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_unicode_CFLAGS) $(CFLAGS) -c -o src/common/test_unicode-test-unicode.o `test -f 'src/common/test-unicode.c' || echo '$(srcdir)/'`src/common/test-unicode.c

src/common/test_unicode-test-unicode.obj: src/common/test-unicode.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_unicode_CFLAGS) $(CFLAGS) -MT src/common/test_unicode-test-unicode.obj -MD -MP -MF src/common/$(DEPDIR)/test_unicode-test-unicode.Tpo -c -o src/common/test_unicode-test-unicode.obj `if test -f 'src/common/test-unicode.c'; then $(CYGPATH_W) 'src/common/test-unicode.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-unicode.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_unicode-test-unicode.Tpo src/common/$(DEPDIR)/test_unicode-test-unicode.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-unicode.c' object='src/common/test_unicode-test-unicode.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_unicode_CFLAGS) $(CFLAGS) -c -o src/common/test_unicode-test-unicode.obj `if test -f 'src/common/test-unicode.c'; then $(CYGPATH_W) 'src/common/test-unicode.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-unicode.c'; fi`

src/common/test_unixsignal-test-unixsignal.o: src/common/test-unixsignal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_unixsignal_CFLAGS) $(CFLAGS) -MT src/common/test_unixsignal-test-unixsignal.o -MD -MP -MF src/common/$(DEPDIR)/test_unixsignal-test-unixsignal.Tpo -c -o src/common/test_unixsignal-test-unixsignal.o `test -f 'src/common/test-unixsignal.c' || echo '$(srcdir)/'`src/common/test-unixsignal.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_unixsignal-test-unixsignal.Tpo src/common/$(DEPDIR)/test_unixsignal-test-unixsignal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-unixsignal.c' object='src/common/test_unixsignal-test-unixsignal.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_unixsignal_CFLAGS) $(CFLAGS) -c -o src/common/test_unixsignal-test-unixsignal.o `test -f 'src/common/test-unixsignal.c' || echo '$(srcdir)/'`src/common/test-unixsignal.c

src/common/test_unixsignal-test-unixsignal.obj: src/common/test-unixsignal.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_unixsignal_CFLAGS) $(CFLAGS) -MT src/common/test_unixsignal-test-unixsignal.obj -MD -MP -MF src/common/$(DEPDIR)/test_unixsignal-test-unixsignal.Tpo -c -o src/common/test_unixsignal-test-unixsignal.obj `if test -f 'src/common/test-unixsignal.c'; then $(CYGPATH_W) 'src/common/test-unixsignal.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-unixsignal.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_unixsignal-test-unixsignal.Tpo src/common/$(DEPDIR)/test_unixsignal-test-unixsignal.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-unixsignal.c' object='src/common/test_unixsignal-test-unixsignal.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_unixsignal_CFLAGS) $(CFLAGS) -c -o src/common/test_unixsignal-test-unixsignal.obj `if test -f 'src/common/test-unixsignal.c'; then $(CYGPATH_W) 'src/common/test-unixsignal.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-unixsignal.c'; fi`

src/common/test_version-test-version.o: src/common/test-version.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_version_CFLAGS) $(CFLAGS) -MT src/common/test_version-test-version.o -MD -MP -MF src/common/$(DEPDIR)/test_version-test-version.Tpo -c -o src/common/test_version-test-version.o `test -f 'src/common/test-version.c' || echo '$(srcdir)/'`src/common/test-version.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_version-test-version.Tpo src/common/$(DEPDIR)/test_version-test-version.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-version.c' object='src/common/test_version-test-version.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_version_CFLAGS) $(CFLAGS) -c -o src/common/test_version-test-version.o `test -f 'src/common/test-version.c' || echo '$(srcdir)/'`src/common/test-version.c

src/common/test_version-test-version.obj: src/common/test-version.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_version_CFLAGS) $(CFLAGS) -MT src/common/test_version-test-version.obj -MD -MP -MF src/common/$(DEPDIR)/test_version-test-version.Tpo -c -o src/common/test_version-test-version.obj `if test -f 'src/common/test-version.c'; then $(CYGPATH_W) 'src/common/test-version.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-version.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_version-test-version.Tpo src/common/$(DEPDIR)/test_version-test-version.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-version.c' object='src/common/test_version-test-version.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_version_CFLAGS) $(CFLAGS) -c -o src/common/test_version-test-version.obj `if test -f 'src/common/test-version.c'; then $(CYGPATH_W) 'src/common/test-version.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-version.c'; fi`

src/common/test_webresponse-test-webresponse.o: src/common/test-webresponse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webresponse_CFLAGS) $(CFLAGS) -MT src/common/test_webresponse-test-webresponse.o -MD -MP -MF src/common/$(DEPDIR)/test_webresponse-test-webresponse.Tpo -c -o src/common/test_webresponse-test-webresponse.o `test -f 'src/common/test-webresponse.c' || echo '$(srcdir)/'`src/common/test-webresponse.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_webresponse-test-webresponse.Tpo src/common/$(DEPDIR)/test_webresponse-test-webresponse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-webresponse.c' object='src/common/test_webresponse-test-webresponse.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webresponse_CFLAGS) $(CFLAGS) -c -o src/common/test_webresponse-test-webresponse.o `test -f 'src/common/test-webresponse.c' || echo '$(srcdir)/'`src/common/test-webresponse.c

src/common/test_webresponse-test-webresponse.obj: src/common/test-webresponse.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webresponse_CFLAGS) $(CFLAGS) -MT src/common/test_webresponse-test-webresponse.obj -MD -MP -MF src/common/$(DEPDIR)/test_webresponse-test-webresponse.Tpo -c -o src/common/test_webresponse-test-webresponse.obj `if test -f 'src/common/test-webresponse.c'; then $(CYGPATH_W) 'src/common/test-webresponse.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-webresponse.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_webresponse-test-webresponse.Tpo src/common/$(DEPDIR)/test_webresponse-test-webresponse.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-webresponse.c' object='src/common/test_webresponse-test-webresponse.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webresponse_CFLAGS) $(CFLAGS) -c -o src/common/test_webresponse-test-webresponse.obj `if test -f 'src/common/test-webresponse.c'; then $(CYGPATH_W) 'src/common/test-webresponse.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-webresponse.c'; fi`

src/common/test_webresponse-mock-io-stream.o: src/common/mock-io-stream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webresponse_CFLAGS) $(CFLAGS) -MT src/common/test_webresponse-mock-io-stream.o -MD -MP -MF src/common/$(DEPDIR)/test_webresponse-mock-io-stream.Tpo -c -o src/common/test_webresponse-mock-io-stream.o `test -f 'src/common/mock-io-stream.c' || echo '$(srcdir)/'`src/common/mock-io-stream.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_webresponse-mock-io-stream.Tpo src/common/$(DEPDIR)/test_webresponse-mock-io-stream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/mock-io-stream.c' object='src/common/test_webresponse-mock-io-stream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webresponse_CFLAGS) $(CFLAGS) -c -o src/common/test_webresponse-mock-io-stream.o `test -f 'src/common/mock-io-stream.c' || echo '$(srcdir)/'`src/common/mock-io-stream.c

src/common/test_webresponse-mock-io-stream.obj: src/common/mock-io-stream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webresponse_CFLAGS) $(CFLAGS) -MT src/common/test_webresponse-mock-io-stream.obj -MD -MP -MF src/common/$(DEPDIR)/test_webresponse-mock-io-stream.Tpo -c -o src/common/test_webresponse-mock-io-stream.obj `if test -f 'src/common/mock-io-stream.c'; then $(CYGPATH_W) 'src/common/mock-io-stream.c'; else $(CYGPATH_W) '$(srcdir)/src/common/mock-io-stream.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_webresponse-mock-io-stream.Tpo src/common/$(DEPDIR)/test_webresponse-mock-io-stream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/mock-io-stream.c' object='src/common/test_webresponse-mock-io-stream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webresponse_CFLAGS) $(CFLAGS) -c -o src/common/test_webresponse-mock-io-stream.obj `if test -f 'src/common/mock-io-stream.c'; then $(CYGPATH_W) 'src/common/mock-io-stream.c'; else $(CYGPATH_W) '$(srcdir)/src/common/mock-io-stream.c'; fi`

src/common/test_webresponse-cockpitassets.o: src/common/cockpitassets.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webresponse_CFLAGS) $(CFLAGS) -MT src/common/test_webresponse-cockpitassets.o -MD -MP -MF src/common/$(DEPDIR)/test_webresponse-cockpitassets.Tpo -c -o src/common/test_webresponse-cockpitassets.o `test -f 'src/common/cockpitassets.c' || echo '$(srcdir)/'`src/common/cockpitassets.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_webresponse-cockpitassets.Tpo src/common/$(DEPDIR)/test_webresponse-cockpitassets.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitassets.c' object='src/common/test_webresponse-cockpitassets.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webresponse_CFLAGS) $(CFLAGS) -c -o src/common/test_webresponse-cockpitassets.o `test -f 'src/common/cockpitassets.c' || echo '$(srcdir)/'`src/common/cockpitassets.c

src/common/test_webresponse-cockpitassets.obj: src/common/cockpitassets.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webresponse_CFLAGS) $(CFLAGS) -MT src/common/test_webresponse-cockpitassets.obj -MD -MP -MF src/common/$(DEPDIR)/test_webresponse-cockpitassets.Tpo -c -o src/common/test_webresponse-cockpitassets.obj `if test -f 'src/common/cockpitassets.c'; then $(CYGPATH_W) 'src/common/cockpitassets.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitassets.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_webresponse-cockpitassets.Tpo src/common/$(DEPDIR)/test_webresponse-cockpitassets.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/cockpitassets.c' object='src/common/test_webresponse-cockpitassets.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webresponse_CFLAGS) $(CFLAGS) -c -o src/common/test_webresponse-cockpitassets.obj `if test -f 'src/common/cockpitassets.c'; then $(CYGPATH_W) 'src/common/cockpitassets.c'; else $(CYGPATH_W) '$(srcdir)/src/common/cockpitassets.c'; fi`

src/common/test_webserver-test-webserver.o: src/common/test-webserver.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webserver_CFLAGS) $(CFLAGS) -MT src/common/test_webserver-test-webserver.o -MD -MP -MF src/common/$(DEPDIR)/test_webserver-test-webserver.Tpo -c -o src/common/test_webserver-test-webserver.o `test -f 'src/common/test-webserver.c' || echo '$(srcdir)/'`src/common/test-webserver.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_webserver-test-webserver.Tpo src/common/$(DEPDIR)/test_webserver-test-webserver.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-webserver.c' object='src/common/test_webserver-test-webserver.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webserver_CFLAGS) $(CFLAGS) -c -o src/common/test_webserver-test-webserver.o `test -f 'src/common/test-webserver.c' || echo '$(srcdir)/'`src/common/test-webserver.c

src/common/test_webserver-test-webserver.obj: src/common/test-webserver.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webserver_CFLAGS) $(CFLAGS) -MT src/common/test_webserver-test-webserver.obj -MD -MP -MF src/common/$(DEPDIR)/test_webserver-test-webserver.Tpo -c -o src/common/test_webserver-test-webserver.obj `if test -f 'src/common/test-webserver.c'; then $(CYGPATH_W) 'src/common/test-webserver.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-webserver.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_webserver-test-webserver.Tpo src/common/$(DEPDIR)/test_webserver-test-webserver.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/test-webserver.c' object='src/common/test_webserver-test-webserver.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webserver_CFLAGS) $(CFLAGS) -c -o src/common/test_webserver-test-webserver.obj `if test -f 'src/common/test-webserver.c'; then $(CYGPATH_W) 'src/common/test-webserver.c'; else $(CYGPATH_W) '$(srcdir)/src/common/test-webserver.c'; fi`

src/ws/test_webservice-test-webservice.o: src/ws/test-webservice.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webservice_CFLAGS) $(CFLAGS) -MT src/ws/test_webservice-test-webservice.o -MD -MP -MF src/ws/$(DEPDIR)/test_webservice-test-webservice.Tpo -c -o src/ws/test_webservice-test-webservice.o `test -f 'src/ws/test-webservice.c' || echo '$(srcdir)/'`src/ws/test-webservice.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_webservice-test-webservice.Tpo src/ws/$(DEPDIR)/test_webservice-test-webservice.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-webservice.c' object='src/ws/test_webservice-test-webservice.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webservice_CFLAGS) $(CFLAGS) -c -o src/ws/test_webservice-test-webservice.o `test -f 'src/ws/test-webservice.c' || echo '$(srcdir)/'`src/ws/test-webservice.c

src/ws/test_webservice-test-webservice.obj: src/ws/test-webservice.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webservice_CFLAGS) $(CFLAGS) -MT src/ws/test_webservice-test-webservice.obj -MD -MP -MF src/ws/$(DEPDIR)/test_webservice-test-webservice.Tpo -c -o src/ws/test_webservice-test-webservice.obj `if test -f 'src/ws/test-webservice.c'; then $(CYGPATH_W) 'src/ws/test-webservice.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-webservice.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_webservice-test-webservice.Tpo src/ws/$(DEPDIR)/test_webservice-test-webservice.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/test-webservice.c' object='src/ws/test_webservice-test-webservice.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webservice_CFLAGS) $(CFLAGS) -c -o src/ws/test_webservice-test-webservice.obj `if test -f 'src/ws/test-webservice.c'; then $(CYGPATH_W) 'src/ws/test-webservice.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/test-webservice.c'; fi`

src/ws/test_webservice-mock-auth.o: src/ws/mock-auth.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webservice_CFLAGS) $(CFLAGS) -MT src/ws/test_webservice-mock-auth.o -MD -MP -MF src/ws/$(DEPDIR)/test_webservice-mock-auth.Tpo -c -o src/ws/test_webservice-mock-auth.o `test -f 'src/ws/mock-auth.c' || echo '$(srcdir)/'`src/ws/mock-auth.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_webservice-mock-auth.Tpo src/ws/$(DEPDIR)/test_webservice-mock-auth.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/mock-auth.c' object='src/ws/test_webservice-mock-auth.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webservice_CFLAGS) $(CFLAGS) -c -o src/ws/test_webservice-mock-auth.o `test -f 'src/ws/mock-auth.c' || echo '$(srcdir)/'`src/ws/mock-auth.c

src/ws/test_webservice-mock-auth.obj: src/ws/mock-auth.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webservice_CFLAGS) $(CFLAGS) -MT src/ws/test_webservice-mock-auth.obj -MD -MP -MF src/ws/$(DEPDIR)/test_webservice-mock-auth.Tpo -c -o src/ws/test_webservice-mock-auth.obj `if test -f 'src/ws/mock-auth.c'; then $(CYGPATH_W) 'src/ws/mock-auth.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/mock-auth.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/ws/$(DEPDIR)/test_webservice-mock-auth.Tpo src/ws/$(DEPDIR)/test_webservice-mock-auth.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/ws/mock-auth.c' object='src/ws/test_webservice-mock-auth.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webservice_CFLAGS) $(CFLAGS) -c -o src/ws/test_webservice-mock-auth.obj `if test -f 'src/ws/mock-auth.c'; then $(CYGPATH_W) 'src/ws/mock-auth.c'; else $(CYGPATH_W) '$(srcdir)/src/ws/mock-auth.c'; fi`

src/common/test_webservice-mock-io-stream.o: src/common/mock-io-stream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webservice_CFLAGS) $(CFLAGS) -MT src/common/test_webservice-mock-io-stream.o -MD -MP -MF src/common/$(DEPDIR)/test_webservice-mock-io-stream.Tpo -c -o src/common/test_webservice-mock-io-stream.o `test -f 'src/common/mock-io-stream.c' || echo '$(srcdir)/'`src/common/mock-io-stream.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_webservice-mock-io-stream.Tpo src/common/$(DEPDIR)/test_webservice-mock-io-stream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/mock-io-stream.c' object='src/common/test_webservice-mock-io-stream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webservice_CFLAGS) $(CFLAGS) -c -o src/common/test_webservice-mock-io-stream.o `test -f 'src/common/mock-io-stream.c' || echo '$(srcdir)/'`src/common/mock-io-stream.c

src/common/test_webservice-mock-io-stream.obj: src/common/mock-io-stream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webservice_CFLAGS) $(CFLAGS) -MT src/common/test_webservice-mock-io-stream.obj -MD -MP -MF src/common/$(DEPDIR)/test_webservice-mock-io-stream.Tpo -c -o src/common/test_webservice-mock-io-stream.obj `if test -f 'src/common/mock-io-stream.c'; then $(CYGPATH_W) 'src/common/mock-io-stream.c'; else $(CYGPATH_W) '$(srcdir)/src/common/mock-io-stream.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/common/$(DEPDIR)/test_webservice-mock-io-stream.Tpo src/common/$(DEPDIR)/test_webservice-mock-io-stream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/common/mock-io-stream.c' object='src/common/test_webservice-mock-io-stream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_webservice_CFLAGS) $(CFLAGS) -c -o src/common/test_webservice-mock-io-stream.obj `if test -f 'src/common/mock-io-stream.c'; then $(CYGPATH_W) 'src/common/mock-io-stream.c'; else $(CYGPATH_W) '$(srcdir)/src/common/mock-io-stream.c'; fi`

src/websocket/test_websocket-test-websocket.o: src/websocket/test-websocket.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_websocket_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/websocket/test_websocket-test-websocket.o -MD -MP -MF src/websocket/$(DEPDIR)/test_websocket-test-websocket.Tpo -c -o src/websocket/test_websocket-test-websocket.o `test -f 'src/websocket/test-websocket.c' || echo '$(srcdir)/'`src/websocket/test-websocket.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/websocket/$(DEPDIR)/test_websocket-test-websocket.Tpo src/websocket/$(DEPDIR)/test_websocket-test-websocket.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/websocket/test-websocket.c' object='src/websocket/test_websocket-test-websocket.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_websocket_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/websocket/test_websocket-test-websocket.o `test -f 'src/websocket/test-websocket.c' || echo '$(srcdir)/'`src/websocket/test-websocket.c

src/websocket/test_websocket-test-websocket.obj: src/websocket/test-websocket.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_websocket_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -MT src/websocket/test_websocket-test-websocket.obj -MD -MP -MF src/websocket/$(DEPDIR)/test_websocket-test-websocket.Tpo -c -o src/websocket/test_websocket-test-websocket.obj `if test -f 'src/websocket/test-websocket.c'; then $(CYGPATH_W) 'src/websocket/test-websocket.c'; else $(CYGPATH_W) '$(srcdir)/src/websocket/test-websocket.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/websocket/$(DEPDIR)/test_websocket-test-websocket.Tpo src/websocket/$(DEPDIR)/test_websocket-test-websocket.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/websocket/test-websocket.c' object='src/websocket/test_websocket-test-websocket.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(test_websocket_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS) -c -o src/websocket/test_websocket-test-websocket.obj `if test -f 'src/websocket/test-websocket.c'; then $(CYGPATH_W) 'src/websocket/test-websocket.c'; else $(CYGPATH_W) '$(srcdir)/src/websocket/test-websocket.c'; fi`

src/bridge/test_websocketstream-test-websocketstream.o: src/bridge/test-websocketstream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_websocketstream_CFLAGS) $(CFLAGS) -MT src/bridge/test_websocketstream-test-websocketstream.o -MD -MP -MF src/bridge/$(DEPDIR)/test_websocketstream-test-websocketstream.Tpo -c -o src/bridge/test_websocketstream-test-websocketstream.o `test -f 'src/bridge/test-websocketstream.c' || echo '$(srcdir)/'`src/bridge/test-websocketstream.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_websocketstream-test-websocketstream.Tpo src/bridge/$(DEPDIR)/test_websocketstream-test-websocketstream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-websocketstream.c' object='src/bridge/test_websocketstream-test-websocketstream.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_websocketstream_CFLAGS) $(CFLAGS) -c -o src/bridge/test_websocketstream-test-websocketstream.o `test -f 'src/bridge/test-websocketstream.c' || echo '$(srcdir)/'`src/bridge/test-websocketstream.c

src/bridge/test_websocketstream-test-websocketstream.obj: src/bridge/test-websocketstream.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_websocketstream_CFLAGS) $(CFLAGS) -MT src/bridge/test_websocketstream-test-websocketstream.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_websocketstream-test-websocketstream.Tpo -c -o src/bridge/test_websocketstream-test-websocketstream.obj `if test -f 'src/bridge/test-websocketstream.c'; then $(CYGPATH_W) 'src/bridge/test-websocketstream.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-websocketstream.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_websocketstream-test-websocketstream.Tpo src/bridge/$(DEPDIR)/test_websocketstream-test-websocketstream.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/test-websocketstream.c' object='src/bridge/test_websocketstream-test-websocketstream.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_websocketstream_CFLAGS) $(CFLAGS) -c -o src/bridge/test_websocketstream-test-websocketstream.obj `if test -f 'src/bridge/test-websocketstream.c'; then $(CYGPATH_W) 'src/bridge/test-websocketstream.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/test-websocketstream.c'; fi`

src/bridge/test_websocketstream-mock-transport.o: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_websocketstream_CFLAGS) $(CFLAGS) -MT src/bridge/test_websocketstream-mock-transport.o -MD -MP -MF src/bridge/$(DEPDIR)/test_websocketstream-mock-transport.Tpo -c -o src/bridge/test_websocketstream-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_websocketstream-mock-transport.Tpo src/bridge/$(DEPDIR)/test_websocketstream-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_websocketstream-mock-transport.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_websocketstream_CFLAGS) $(CFLAGS) -c -o src/bridge/test_websocketstream-mock-transport.o `test -f 'src/bridge/mock-transport.c' || echo '$(srcdir)/'`src/bridge/mock-transport.c

src/bridge/test_websocketstream-mock-transport.obj: src/bridge/mock-transport.c
@am__fastdepCC_TRUE@	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_websocketstream_CFLAGS) $(CFLAGS) -MT src/bridge/test_websocketstream-mock-transport.obj -MD -MP -MF src/bridge/$(DEPDIR)/test_websocketstream-mock-transport.Tpo -c -o src/bridge/test_websocketstream-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) src/bridge/$(DEPDIR)/test_websocketstream-mock-transport.Tpo src/bridge/$(DEPDIR)/test_websocketstream-mock-transport.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='src/bridge/mock-transport.c' object='src/bridge/test_websocketstream-mock-transport.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(test_websocketstream_CFLAGS) $(CFLAGS) -c -o src/bridge/test_websocketstream-mock-transport.obj `if test -f 'src/bridge/mock-transport.c'; then $(CYGPATH_W) 'src/bridge/mock-transport.c'; else $(CYGPATH_W) '$(srcdir)/src/bridge/mock-transport.c'; fi`
install-man1: $(man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(man_MANS)'; \
	test -n "$(man1dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man1dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man1dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.1[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man1dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man1dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man1dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man1dir)" || exit $$?; }; \
	done; }

uninstall-man1:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man1dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.1[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^1][0-9a-z]*$$,1,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man1dir)'; $(am__uninstall_files_from_dir)
install-man5: $(man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(man_MANS)'; \
	test -n "$(man5dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man5dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man5dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.5[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^5][0-9a-z]*$$,5,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man5dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man5dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man5dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man5dir)" || exit $$?; }; \
	done; }

uninstall-man5:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man5dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.5[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^5][0-9a-z]*$$,5,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man5dir)'; $(am__uninstall_files_from_dir)
install-man8: $(man_MANS)
	@$(NORMAL_INSTALL)
	@list1=''; \
	list2='$(man_MANS)'; \
	test -n "$(man8dir)" \
	  && test -n "`echo $$list1$$list2`" \
	  || exit 0; \
	echo " $(MKDIR_P) '$(DESTDIR)$(man8dir)'"; \
	$(MKDIR_P) "$(DESTDIR)$(man8dir)" || exit 1; \
	{ for i in $$list1; do echo "$$i"; done;  \
	if test -n "$$list2"; then \
	  for i in $$list2; do echo "$$i"; done \
	    | sed -n '/\.8[a-z]*$$/p'; \
	fi; \
	} | while read p; do \
	  if test -f $$p; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; echo "$$p"; \
	done | \
	sed -e 'n;s,.*/,,;p;h;s,.*\.,,;s,^[^8][0-9a-z]*$$,8,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,' | \
	sed 'N;N;s,\n, ,g' | { \
	list=; while read file base inst; do \
	  if test "$$base" = "$$inst"; then list="$$list $$file"; else \
	    echo " $(INSTALL_DATA) '$$file' '$(DESTDIR)$(man8dir)/$$inst'"; \
	    $(INSTALL_DATA) "$$file" "$(DESTDIR)$(man8dir)/$$inst" || exit $$?; \
	  fi; \
	done; \
	for i in $$list; do echo "$$i"; done | $(am__base_list) | \
	while read files; do \
	  test -z "$$files" || { \
	    echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(man8dir)'"; \
	    $(INSTALL_DATA) $$files "$(DESTDIR)$(man8dir)" || exit $$?; }; \
	done; }

uninstall-man8:
	@$(NORMAL_UNINSTALL)
	@list=''; test -n "$(man8dir)" || exit 0; \
	files=`{ for i in $$list; do echo "$$i"; done; \
	l2='$(man_MANS)'; for i in $$l2; do echo "$$i"; done | \
	  sed -n '/\.8[a-z]*$$/p'; \
	} | sed -e 's,.*/,,;h;s,.*\.,,;s,^[^8][0-9a-z]*$$,8,;x' \
	      -e 's,\.[0-9a-z]*$$,,;$(transform);G;s,\n,.,'`; \
	dir='$(DESTDIR)$(man8dir)'; $(am__uninstall_files_from_dir)
install-baseDATA: $(base_DATA)
	@$(NORMAL_INSTALL)
	@list='$(base_DATA)'; test -n "$(basedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(basedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(basedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(basedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(basedir)" || exit $$?; \
	done

uninstall-baseDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(base_DATA)'; test -n "$(basedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(basedir)'; $(am__uninstall_files_from_dir)
install-basedebugDATA: $(basedebug_DATA)
	@$(NORMAL_INSTALL)
	@list='$(basedebug_DATA)'; test -n "$(basedebugdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(basedebugdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(basedebugdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(basedebugdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(basedebugdir)" || exit $$?; \
	done

uninstall-basedebugDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(basedebug_DATA)'; test -n "$(basedebugdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(basedebugdir)'; $(am__uninstall_files_from_dir)
install-basefontsDATA: $(basefonts_DATA)
	@$(NORMAL_INSTALL)
	@list='$(basefonts_DATA)'; test -n "$(basefontsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(basefontsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(basefontsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(basefontsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(basefontsdir)" || exit $$?; \
	done

uninstall-basefontsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(basefonts_DATA)'; test -n "$(basefontsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(basefontsdir)'; $(am__uninstall_files_from_dir)
install-centosbrandingDATA: $(centosbranding_DATA)
	@$(NORMAL_INSTALL)
	@list='$(centosbranding_DATA)'; test -n "$(centosbrandingdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(centosbrandingdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(centosbrandingdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(centosbrandingdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(centosbrandingdir)" || exit $$?; \
	done

uninstall-centosbrandingDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(centosbranding_DATA)'; test -n "$(centosbrandingdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(centosbrandingdir)'; $(am__uninstall_files_from_dir)
install-debianbrandingDATA: $(debianbranding_DATA)
	@$(NORMAL_INSTALL)
	@list='$(debianbranding_DATA)'; test -n "$(debianbrandingdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(debianbrandingdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(debianbrandingdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(debianbrandingdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(debianbrandingdir)" || exit $$?; \
	done

uninstall-debianbrandingDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(debianbranding_DATA)'; test -n "$(debianbrandingdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(debianbrandingdir)'; $(am__uninstall_files_from_dir)
install-defaultbrandingDATA: $(defaultbranding_DATA)
	@$(NORMAL_INSTALL)
	@list='$(defaultbranding_DATA)'; test -n "$(defaultbrandingdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(defaultbrandingdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(defaultbrandingdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(defaultbrandingdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(defaultbrandingdir)" || exit $$?; \
	done

uninstall-defaultbrandingDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(defaultbranding_DATA)'; test -n "$(defaultbrandingdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(defaultbrandingdir)'; $(am__uninstall_files_from_dir)
install-dist_systemdunitDATA: $(dist_systemdunit_DATA)
	@$(NORMAL_INSTALL)
	@list='$(dist_systemdunit_DATA)'; test -n "$(systemdunitdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(systemdunitdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(systemdunitdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(systemdunitdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(systemdunitdir)" || exit $$?; \
	done

uninstall-dist_systemdunitDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(dist_systemdunit_DATA)'; test -n "$(systemdunitdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(systemdunitdir)'; $(am__uninstall_files_from_dir)
install-fedorabrandingDATA: $(fedorabranding_DATA)
	@$(NORMAL_INSTALL)
	@list='$(fedorabranding_DATA)'; test -n "$(fedorabrandingdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(fedorabrandingdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(fedorabrandingdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(fedorabrandingdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(fedorabrandingdir)" || exit $$?; \
	done

uninstall-fedorabrandingDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(fedorabranding_DATA)'; test -n "$(fedorabrandingdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(fedorabrandingdir)'; $(am__uninstall_files_from_dir)
install-firewallDATA: $(firewall_DATA)
	@$(NORMAL_INSTALL)
	@list='$(firewall_DATA)'; test -n "$(firewalldir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(firewalldir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(firewalldir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(firewalldir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(firewalldir)" || exit $$?; \
	done

uninstall-firewallDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(firewall_DATA)'; test -n "$(firewalldir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(firewalldir)'; $(am__uninstall_files_from_dir)
install-kubernetesbrandingDATA: $(kubernetesbranding_DATA)
	@$(NORMAL_INSTALL)
	@list='$(kubernetesbranding_DATA)'; test -n "$(kubernetesbrandingdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(kubernetesbrandingdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(kubernetesbrandingdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(kubernetesbrandingdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(kubernetesbrandingdir)" || exit $$?; \
	done

uninstall-kubernetesbrandingDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(kubernetesbranding_DATA)'; test -n "$(kubernetesbrandingdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(kubernetesbrandingdir)'; $(am__uninstall_files_from_dir)
install-machinesDATA: $(machines_DATA)
	@$(NORMAL_INSTALL)
	@list='$(machines_DATA)'; test -n "$(machinesdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(machinesdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(machinesdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(machinesdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(machinesdir)" || exit $$?; \
	done

uninstall-machinesDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(machines_DATA)'; test -n "$(machinesdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(machinesdir)'; $(am__uninstall_files_from_dir)
install-nodist_appdataDATA: $(nodist_appdata_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_appdata_DATA)'; test -n "$(appdatadir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(appdatadir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(appdatadir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(appdatadir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(appdatadir)" || exit $$?; \
	done

uninstall-nodist_appdataDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_appdata_DATA)'; test -n "$(appdatadir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(appdatadir)'; $(am__uninstall_files_from_dir)
install-nodist_baseDATA: $(nodist_base_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_base_DATA)'; test -n "$(basedir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(basedir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(basedir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(basedir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(basedir)" || exit $$?; \
	done

uninstall-nodist_baseDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_base_DATA)'; test -n "$(basedir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(basedir)'; $(am__uninstall_files_from_dir)
install-nodist_desktopDATA: $(nodist_desktop_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_desktop_DATA)'; test -n "$(desktopdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(desktopdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(desktopdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(desktopdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(desktopdir)" || exit $$?; \
	done

uninstall-nodist_desktopDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_desktop_DATA)'; test -n "$(desktopdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(desktopdir)'; $(am__uninstall_files_from_dir)
install-nodist_staticDATA: $(nodist_static_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_static_DATA)'; test -n "$(staticdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(staticdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(staticdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(staticdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(staticdir)" || exit $$?; \
	done

uninstall-nodist_staticDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_static_DATA)'; test -n "$(staticdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(staticdir)'; $(am__uninstall_files_from_dir)
install-nodist_systemdunitDATA: $(nodist_systemdunit_DATA)
	@$(NORMAL_INSTALL)
	@list='$(nodist_systemdunit_DATA)'; test -n "$(systemdunitdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(systemdunitdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(systemdunitdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(systemdunitdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(systemdunitdir)" || exit $$?; \
	done

uninstall-nodist_systemdunitDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(nodist_systemdunit_DATA)'; test -n "$(systemdunitdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(systemdunitdir)'; $(am__uninstall_files_from_dir)
install-ovirtDATA: $(ovirt_DATA)
	@$(NORMAL_INSTALL)
	@list='$(ovirt_DATA)'; test -n "$(ovirtdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ovirtdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ovirtdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ovirtdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ovirtdir)" || exit $$?; \
	done

uninstall-ovirtDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ovirt_DATA)'; test -n "$(ovirtdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(ovirtdir)'; $(am__uninstall_files_from_dir)
install-pixmapDATA: $(pixmap_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pixmap_DATA)'; test -n "$(pixmapdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pixmapdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pixmapdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pixmapdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pixmapdir)" || exit $$?; \
	done

uninstall-pixmapDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pixmap_DATA)'; test -n "$(pixmapdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pixmapdir)'; $(am__uninstall_files_from_dir)
install-playgroundDATA: $(playground_DATA)
	@$(NORMAL_INSTALL)
	@list='$(playground_DATA)'; test -n "$(playgrounddir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(playgrounddir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(playgrounddir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(playgrounddir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(playgrounddir)" || exit $$?; \
	done

uninstall-playgroundDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(playground_DATA)'; test -n "$(playgrounddir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(playgrounddir)'; $(am__uninstall_files_from_dir)
install-pmlogconfDATA: $(pmlogconf_DATA)
	@$(NORMAL_INSTALL)
	@list='$(pmlogconf_DATA)'; test -n "$(pmlogconfdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(pmlogconfdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(pmlogconfdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(pmlogconfdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(pmlogconfdir)" || exit $$?; \
	done

uninstall-pmlogconfDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(pmlogconf_DATA)'; test -n "$(pmlogconfdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(pmlogconfdir)'; $(am__uninstall_files_from_dir)
install-registrybrandingDATA: $(registrybranding_DATA)
	@$(NORMAL_INSTALL)
	@list='$(registrybranding_DATA)'; test -n "$(registrybrandingdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(registrybrandingdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(registrybrandingdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(registrybrandingdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(registrybrandingdir)" || exit $$?; \
	done

uninstall-registrybrandingDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(registrybranding_DATA)'; test -n "$(registrybrandingdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(registrybrandingdir)'; $(am__uninstall_files_from_dir)
install-rhelbrandingDATA: $(rhelbranding_DATA)
	@$(NORMAL_INSTALL)
	@list='$(rhelbranding_DATA)'; test -n "$(rhelbrandingdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(rhelbrandingdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(rhelbrandingdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(rhelbrandingdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(rhelbrandingdir)" || exit $$?; \
	done

uninstall-rhelbrandingDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(rhelbranding_DATA)'; test -n "$(rhelbrandingdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(rhelbrandingdir)'; $(am__uninstall_files_from_dir)
install-staticfontsDATA: $(staticfonts_DATA)
	@$(NORMAL_INSTALL)
	@list='$(staticfonts_DATA)'; test -n "$(staticfontsdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(staticfontsdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(staticfontsdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(staticfontsdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(staticfontsdir)" || exit $$?; \
	done

uninstall-staticfontsDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(staticfonts_DATA)'; test -n "$(staticfontsdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(staticfontsdir)'; $(am__uninstall_files_from_dir)
install-ubuntubrandingDATA: $(ubuntubranding_DATA)
	@$(NORMAL_INSTALL)
	@list='$(ubuntubranding_DATA)'; test -n "$(ubuntubrandingdir)" || list=; \
	if test -n "$$list"; then \
	  echo " $(MKDIR_P) '$(DESTDIR)$(ubuntubrandingdir)'"; \
	  $(MKDIR_P) "$(DESTDIR)$(ubuntubrandingdir)" || exit 1; \
	fi; \
	for p in $$list; do \
	  if test -f "$$p"; then d=; else d="$(srcdir)/"; fi; \
	  echo "$$d$$p"; \
	done | $(am__base_list) | \
	while read files; do \
	  echo " $(INSTALL_DATA) $$files '$(DESTDIR)$(ubuntubrandingdir)'"; \
	  $(INSTALL_DATA) $$files "$(DESTDIR)$(ubuntubrandingdir)" || exit $$?; \
	done

uninstall-ubuntubrandingDATA:
	@$(NORMAL_UNINSTALL)
	@list='$(ubuntubranding_DATA)'; test -n "$(ubuntubrandingdir)" || list=; \
	files=`for p in $$list; do echo $$p; done | sed -e 's|^.*/||'`; \
	dir='$(DESTDIR)$(ubuntubrandingdir)'; $(am__uninstall_files_from_dir)

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscope: cscope.files
	test ! -s cscope.files \
	  || $(CSCOPE) -b -q $(AM_CSCOPEFLAGS) $(CSCOPEFLAGS) -i cscope.files $(CSCOPE_ARGS)
clean-cscope:
	-rm -f cscope.files
cscope.files: clean-cscope cscopelist
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags
	-rm -f cscope.out cscope.in.out cscope.po.out cscope.files

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	elif test -n "$$redo_logs"; then \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS) $(check_SCRIPTS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
tools/test-bots.log: tools/test-bots
	@p='tools/test-bots'; \
	b='tools/test-bots'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-paths.log: test-paths$(EXEEXT)
	@p='test-paths$(EXEEXT)'; \
	b='test-paths'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-rules.log: test-rules$(EXEEXT)
	@p='test-rules$(EXEEXT)'; \
	b='test-rules'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-channel.log: test-channel$(EXEEXT)
	@p='test-channel$(EXEEXT)'; \
	b='test-channel'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-pipe-channel.log: test-pipe-channel$(EXEEXT)
	@p='test-pipe-channel$(EXEEXT)'; \
	b='test-pipe-channel'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-packages.log: test-packages$(EXEEXT)
	@p='test-packages$(EXEEXT)'; \
	b='test-packages'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-peer.log: test-peer$(EXEEXT)
	@p='test-peer$(EXEEXT)'; \
	b='test-peer'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-dbus-meta.log: test-dbus-meta$(EXEEXT)
	@p='test-dbus-meta$(EXEEXT)'; \
	b='test-dbus-meta'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-fs.log: test-fs$(EXEEXT)
	@p='test-fs$(EXEEXT)'; \
	b='test-fs'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-metrics.log: test-metrics$(EXEEXT)
	@p='test-metrics$(EXEEXT)'; \
	b='test-metrics'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-connect.log: test-connect$(EXEEXT)
	@p='test-connect$(EXEEXT)'; \
	b='test-connect'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-stream.log: test-stream$(EXEEXT)
	@p='test-stream$(EXEEXT)'; \
	b='test-stream'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-httpstream.log: test-httpstream$(EXEEXT)
	@p='test-httpstream$(EXEEXT)'; \
	b='test-httpstream'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-setup.log: test-setup$(EXEEXT)
	@p='test-setup$(EXEEXT)'; \
	b='test-setup'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-websocketstream.log: test-websocketstream$(EXEEXT)
	@p='test-websocketstream$(EXEEXT)'; \
	b='test-websocketstream'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-process.log: test-process$(EXEEXT)
	@p='test-process$(EXEEXT)'; \
	b='test-process'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-bridge.log: test-bridge$(EXEEXT)
	@p='test-bridge$(EXEEXT)'; \
	b='test-bridge'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-router.log: test-router$(EXEEXT)
	@p='test-router$(EXEEXT)'; \
	b='test-router'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-pcp.log: test-pcp$(EXEEXT)
	@p='test-pcp$(EXEEXT)'; \
	b='test-pcp'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-pcp-archives.log: test-pcp-archives$(EXEEXT)
	@p='test-pcp-archives$(EXEEXT)'; \
	b='test-pcp-archives'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-hash.log: test-hash$(EXEEXT)
	@p='test-hash$(EXEEXT)'; \
	b='test-hash'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-hex.log: test-hex$(EXEEXT)
	@p='test-hex$(EXEEXT)'; \
	b='test-hex'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-json.log: test-json$(EXEEXT)
	@p='test-json$(EXEEXT)'; \
	b='test-json'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-locale.log: test-locale$(EXEEXT)
	@p='test-locale$(EXEEXT)'; \
	b='test-locale'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-knownhosts.log: test-knownhosts$(EXEEXT)
	@p='test-knownhosts$(EXEEXT)'; \
	b='test-knownhosts'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-pipe.log: test-pipe$(EXEEXT)
	@p='test-pipe$(EXEEXT)'; \
	b='test-pipe'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-transport.log: test-transport$(EXEEXT)
	@p='test-transport$(EXEEXT)'; \
	b='test-transport'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-unixsignal.log: test-unixsignal$(EXEEXT)
	@p='test-unixsignal$(EXEEXT)'; \
	b='test-unixsignal'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-template.log: test-template$(EXEEXT)
	@p='test-template$(EXEEXT)'; \
	b='test-template'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-webresponse.log: test-webresponse$(EXEEXT)
	@p='test-webresponse$(EXEEXT)'; \
	b='test-webresponse'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-webserver.log: test-webserver$(EXEEXT)
	@p='test-webserver$(EXEEXT)'; \
	b='test-webserver'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-config.log: test-config$(EXEEXT)
	@p='test-config$(EXEEXT)'; \
	b='test-config'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-unicode.log: test-unicode$(EXEEXT)
	@p='test-unicode$(EXEEXT)'; \
	b='test-unicode'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-version.log: test-version$(EXEEXT)
	@p='test-version$(EXEEXT)'; \
	b='test-version'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-system.log: test-system$(EXEEXT)
	@p='test-system$(EXEEXT)'; \
	b='test-system'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-base64.log: test-base64$(EXEEXT)
	@p='test-base64$(EXEEXT)'; \
	b='test-base64'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-authorize.log: test-authorize$(EXEEXT)
	@p='test-authorize$(EXEEXT)'; \
	b='test-authorize'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-websocket.log: test-websocket$(EXEEXT)
	@p='test-websocket$(EXEEXT)'; \
	b='test-websocket'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tools/test-static-code.log: tools/test-static-code
	@p='tools/test-static-code'; \
	b='tools/test-static-code'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-sshoptions.log: test-sshoptions$(EXEEXT)
	@p='test-sshoptions$(EXEEXT)'; \
	b='test-sshoptions'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-sshbridge.log: test-sshbridge$(EXEEXT)
	@p='test-sshbridge$(EXEEXT)'; \
	b='test-sshbridge'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-creds.log: test-creds$(EXEEXT)
	@p='test-creds$(EXEEXT)'; \
	b='test-creds'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-auth.log: test-auth$(EXEEXT)
	@p='test-auth$(EXEEXT)'; \
	b='test-auth'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-compat.log: test-compat$(EXEEXT)
	@p='test-compat$(EXEEXT)'; \
	b='test-compat'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-webservice.log: test-webservice$(EXEEXT)
	@p='test-webservice$(EXEEXT)'; \
	b='test-webservice'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-channelresponse.log: test-channelresponse$(EXEEXT)
	@p='test-channelresponse$(EXEEXT)'; \
	b='test-channelresponse'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-handlers.log: test-handlers$(EXEEXT)
	@p='test-handlers$(EXEEXT)'; \
	b='test-handlers'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-kerberos.log: test-kerberos$(EXEEXT)
	@p='test-kerberos$(EXEEXT)'; \
	b='test-kerberos'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-remotectlcertificate.log: test-remotectlcertificate$(EXEEXT)
	@p='test-remotectlcertificate$(EXEEXT)'; \
	b='test-remotectlcertificate'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-authssh.log: test-authssh$(EXEEXT)
	@p='test-authssh$(EXEEXT)'; \
	b='test-authssh'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
test-ssh-add.log: test-ssh-add$(EXEEXT)
	@p='test-ssh-add$(EXEEXT)'; \
	b='test-ssh-add'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.html.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(HTML_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_HTML_LOG_DRIVER_FLAGS) $(HTML_LOG_DRIVER_FLAGS) -- $(HTML_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.html$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(HTML_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_HTML_LOG_DRIVER_FLAGS) $(HTML_LOG_DRIVER_FLAGS) -- $(HTML_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)
.sh.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(SH_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_SH_LOG_DRIVER_FLAGS) $(SH_LOG_DRIVER_FLAGS) -- $(SH_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.sh$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(SH_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_SH_LOG_DRIVER_FLAGS) $(SH_LOG_DRIVER_FLAGS) -- $(SH_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	$(am__remove_distdir)
	test -d "$(distdir)" || mkdir "$(distdir)"
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	$(MAKE) $(AM_MAKEFLAGS) \
	  top_distdir="$(top_distdir)" distdir="$(distdir)" \
	  dist-hook
	-test -n "$(am__skip_mode_fix)" \
	|| find "$(distdir)" -type d ! -perm -755 \
		-exec chmod u+rwx,go+rx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r "$(distdir)"

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | BZIP2=$${BZIP2--9} bzip2 -c >$(distdir).tar.bz2
	$(am__post_remove_distdir)

dist-lzip: distdir
	tardir=$(distdir) && $(am__tar) | lzip -c $${LZIP_OPT--9} >$(distdir).tar.lz
	$(am__post_remove_distdir)

dist-tarZ: distdir
	@echo WARNING: "Support for distribution archives compressed with" \
		       "legacy program 'compress' is deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__post_remove_distdir)

dist-shar: distdir
	@echo WARNING: "Support for shar distribution archives is" \
	               "deprecated." >&2
	@echo WARNING: "It will be removed altogether in Automake 2.0" >&2
	shar $(distdir) | eval GZIP= gzip $(GZIP_ENV) -c >$(distdir).shar.gz
	$(am__post_remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__post_remove_distdir)

dist dist-all:
	$(MAKE) $(AM_MAKEFLAGS) $(DIST_TARGETS) am__post_remove_distdir='@:'
	$(am__post_remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bzip2 -dc $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.lz*) \
	  lzip -dc $(distdir).tar.lz | $(am__untar) ;;\
	*.tar.xz*) \
	  xz -dc $(distdir).tar.xz | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  eval GZIP= gzip $(GZIP_ENV) -dc $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir)
	chmod u+w $(distdir)
	mkdir $(distdir)/_build $(distdir)/_build/sub $(distdir)/_inst
	chmod a-w $(distdir)
	test -d $(distdir)/_build || exit 0; \
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && $(MAKE) $(AM_MAKEFLAGS) distcheck-hook \
	  && am__cwd=`pwd` \
	  && $(am__cd) $(distdir)/_build/sub \
	  && ../../configure \
	    $(AM_DISTCHECK_CONFIGURE_FLAGS) \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	    --srcdir=../.. --prefix="$$dc_install_base" \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck \
	  && cd "$$am__cwd" \
	  || exit 1
	$(am__post_remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e 1h -e 1s/./=/g -e 1p -e 1x -e '$$p' -e '$$x'
distuninstallcheck:
	@test -n '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: trying to run $@ with an empty' \
	       '$$(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	$(am__cd) '$(distuninstallcheck_dir)' || { \
	  echo 'ERROR: cannot chdir into $(distuninstallcheck_dir)' >&2; \
	  exit 1; \
	}; \
	test `$(am__distuninstallcheck_listfiles) | wc -l` -eq 0 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
@ENABLE_DOC_FALSE@check-local:
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS) $(check_SCRIPTS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS check-local
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(SCRIPTS) $(MANS) $(DATA) \
		config.h all-local
installdirs:
	for dir in "$(DESTDIR)$(bindir)" "$(DESTDIR)$(libexecdir)" "$(DESTDIR)$(sbindir)" "$(DESTDIR)$(man1dir)" "$(DESTDIR)$(man5dir)" "$(DESTDIR)$(man8dir)" "$(DESTDIR)$(basedir)" "$(DESTDIR)$(basedebugdir)" "$(DESTDIR)$(basefontsdir)" "$(DESTDIR)$(centosbrandingdir)" "$(DESTDIR)$(debianbrandingdir)" "$(DESTDIR)$(defaultbrandingdir)" "$(DESTDIR)$(systemdunitdir)" "$(DESTDIR)$(fedorabrandingdir)" "$(DESTDIR)$(firewalldir)" "$(DESTDIR)$(kubernetesbrandingdir)" "$(DESTDIR)$(machinesdir)" "$(DESTDIR)$(appdatadir)" "$(DESTDIR)$(basedir)" "$(DESTDIR)$(desktopdir)" "$(DESTDIR)$(staticdir)" "$(DESTDIR)$(systemdunitdir)" "$(DESTDIR)$(ovirtdir)" "$(DESTDIR)$(pixmapdir)" "$(DESTDIR)$(playgrounddir)" "$(DESTDIR)$(pmlogconfdir)" "$(DESTDIR)$(registrybrandingdir)" "$(DESTDIR)$(rhelbrandingdir)" "$(DESTDIR)$(staticfontsdir)" "$(DESTDIR)$(ubuntubrandingdir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f src/bridge/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/bridge/$(am__dirstamp)
	-rm -f src/common/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/common/$(am__dirstamp)
	-rm -f src/pam-ssh-add/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/pam-ssh-add/$(am__dirstamp)
	-rm -f src/retest/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/retest/$(am__dirstamp)
	-rm -f src/ssh/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/ssh/$(am__dirstamp)
	-rm -f src/websocket/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/websocket/$(am__dirstamp)
	-rm -f src/ws/$(DEPDIR)/$(am__dirstamp)
	-rm -f src/ws/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-checkPROGRAMS clean-generic \
	clean-libexecPROGRAMS clean-local clean-noinstLIBRARIES \
	clean-noinstPROGRAMS clean-sbinPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf src/bridge/$(DEPDIR) src/common/$(DEPDIR) src/pam-ssh-add/$(DEPDIR) src/retest/$(DEPDIR) src/ssh/$(DEPDIR) src/websocket/$(DEPDIR) src/ws/$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-local distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am: install-baseDATA install-basedebugDATA \
	install-basefontsDATA install-centosbrandingDATA \
	install-data-local install-debianbrandingDATA \
	install-defaultbrandingDATA install-dist_systemdunitDATA \
	install-fedorabrandingDATA install-firewallDATA \
	install-kubernetesbrandingDATA install-machinesDATA \
	install-man install-nodist_appdataDATA install-nodist_baseDATA \
	install-nodist_desktopDATA install-nodist_staticDATA \
	install-nodist_systemdunitDATA install-ovirtDATA \
	install-pixmapDATA install-playgroundDATA \
	install-pmlogconfDATA install-registrybrandingDATA \
	install-rhelbrandingDATA install-staticfontsDATA \
	install-ubuntubrandingDATA
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-data-hook
install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS install-exec-local \
	install-libexecPROGRAMS install-sbinPROGRAMS
	@$(NORMAL_INSTALL)
	$(MAKE) $(AM_MAKEFLAGS) install-exec-hook
install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man: install-man1 install-man5 install-man8

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf src/bridge/$(DEPDIR) src/common/$(DEPDIR) src/pam-ssh-add/$(DEPDIR) src/retest/$(DEPDIR) src/ssh/$(DEPDIR) src/websocket/$(DEPDIR) src/ws/$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-baseDATA uninstall-basedebugDATA \
	uninstall-basefontsDATA uninstall-binPROGRAMS \
	uninstall-centosbrandingDATA uninstall-debianbrandingDATA \
	uninstall-defaultbrandingDATA uninstall-dist_systemdunitDATA \
	uninstall-fedorabrandingDATA uninstall-firewallDATA \
	uninstall-kubernetesbrandingDATA uninstall-libexecPROGRAMS \
	uninstall-local uninstall-machinesDATA uninstall-man \
	uninstall-nodist_appdataDATA uninstall-nodist_baseDATA \
	uninstall-nodist_desktopDATA uninstall-nodist_staticDATA \
	uninstall-nodist_systemdunitDATA uninstall-ovirtDATA \
	uninstall-pixmapDATA uninstall-playgroundDATA \
	uninstall-pmlogconfDATA uninstall-registrybrandingDATA \
	uninstall-rhelbrandingDATA uninstall-sbinPROGRAMS \
	uninstall-staticfontsDATA uninstall-ubuntubrandingDATA

uninstall-man: uninstall-man1 uninstall-man5 uninstall-man8

.MAKE: all check check-am install install-am install-data-am \
	install-exec-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am all-local am--refresh check \
	check-TESTS check-am check-local clean clean-binPROGRAMS \
	clean-checkPROGRAMS clean-cscope clean-generic \
	clean-libexecPROGRAMS clean-local clean-noinstLIBRARIES \
	clean-noinstPROGRAMS clean-sbinPROGRAMS cscope cscopelist-am \
	ctags ctags-am dist dist-all dist-bzip2 dist-gzip dist-hook \
	dist-lzip dist-shar dist-tarZ dist-xz dist-zip distcheck \
	distclean distclean-compile distclean-generic distclean-hdr \
	distclean-local distclean-tags distcleancheck distdir \
	distuninstallcheck dvi dvi-am html html-am info info-am \
	install install-am install-baseDATA install-basedebugDATA \
	install-basefontsDATA install-binPROGRAMS \
	install-centosbrandingDATA install-data install-data-am \
	install-data-hook install-data-local \
	install-debianbrandingDATA install-defaultbrandingDATA \
	install-dist_systemdunitDATA install-dvi install-dvi-am \
	install-exec install-exec-am install-exec-hook \
	install-exec-local install-fedorabrandingDATA \
	install-firewallDATA install-html install-html-am install-info \
	install-info-am install-kubernetesbrandingDATA \
	install-libexecPROGRAMS install-machinesDATA install-man \
	install-man1 install-man5 install-man8 \
	install-nodist_appdataDATA install-nodist_baseDATA \
	install-nodist_desktopDATA install-nodist_staticDATA \
	install-nodist_systemdunitDATA install-ovirtDATA install-pdf \
	install-pdf-am install-pixmapDATA install-playgroundDATA \
	install-pmlogconfDATA install-ps install-ps-am \
	install-registrybrandingDATA install-rhelbrandingDATA \
	install-sbinPROGRAMS install-staticfontsDATA install-strip \
	install-ubuntubrandingDATA installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic pdf pdf-am \
	ps ps-am recheck tags tags-am uninstall uninstall-am \
	uninstall-baseDATA uninstall-basedebugDATA \
	uninstall-basefontsDATA uninstall-binPROGRAMS \
	uninstall-centosbrandingDATA uninstall-debianbrandingDATA \
	uninstall-defaultbrandingDATA uninstall-dist_systemdunitDATA \
	uninstall-fedorabrandingDATA uninstall-firewallDATA \
	uninstall-kubernetesbrandingDATA uninstall-libexecPROGRAMS \
	uninstall-local uninstall-machinesDATA uninstall-man \
	uninstall-man1 uninstall-man5 uninstall-man8 \
	uninstall-nodist_appdataDATA uninstall-nodist_baseDATA \
	uninstall-nodist_desktopDATA uninstall-nodist_staticDATA \
	uninstall-nodist_systemdunitDATA uninstall-ovirtDATA \
	uninstall-pixmapDATA uninstall-playgroundDATA \
	uninstall-pmlogconfDATA uninstall-registrybrandingDATA \
	uninstall-rhelbrandingDATA uninstall-sbinPROGRAMS \
	uninstall-staticfontsDATA uninstall-ubuntubrandingDATA

.PRECIOUS: Makefile

export PATH := $(PATH):$(abs_srcdir)/node_modules/.bin

clean-local::
	find $(builddir) -name '*.gc??' -delete
	find $(srcdir) -name '*.pyc' -delete

.css.css.gz:
	$(GZ_RULE)
.html.html.gz:
	$(GZ_RULE)
.js.js.gz:
	$(GZ_RULE)
.json.in.json:
	$(SUBST_RULE)
.map.map.gz:
	$(GZ_RULE)
.service.in.service:
	$(SUBST_RULE)
.svg.svg.gz:
	$(GZ_RULE)
.woff.woff.gz:
	$(GZ_RULE)

# Run webpack if we don't have the include file or if its out of date
# If we have distributed a copy in a tarball, copy that into place
dist/%/Makefile.deps: $(WEBPACK_CONFIG)
	$(AM_V_GEN) $(MKDIR_P) $(dir $@) && if test $(srcdir)/dist/$*/Makefile.deps -nt $(WEBPACK_CONFIG); \
	then cp -p $(srcdir)/dist/$*/Makefile.deps $@.tmp && $(MV) $@.tmp $@; \
	else $(WEBPACK_MAKE) -d $@ $<; fi
dist/%/manifest.json: pkg/%/manifest.json
	$(COPY_RULE)

-include $(WEBPACK_DEPS)

distclean-local::
	rm -rf dist/
install-data-local:: $(WEBPACK_INSTALL)
	$(MKDIR_P) $(DESTDIR)$(pkgdatadir)
	tar -cf - $^ | tar -C $(DESTDIR)$(pkgdatadir) --strip-components=1 -xvf -
install-data-local:: $(WEBPACK_DEBUG)
	$(MKDIR_P) $(DESTDIR)$(debugdir)$(pkgdatadir)
	tar -cf - $^ | tar -C $(DESTDIR)$(debugdir)$(pkgdatadir) --strip-components=1 -xvf -
uninstall-local::
	find $(DESTDIR)$(pkgdatadir) -type f -delete
	find $(DESTDIR)$(pkgdatadir) -type d -empty -delete
	find $(DESTDIR)$(debugdir)$(pkgdatadir) -type f -delete
	find $(DESTDIR)$(debugdir)$(pkgdatadir) -type d -empty -delete
dist-hook:: $(WEBPACK_INPUTS) $(WEBPACK_OUTPUTS) $(WEBPACK_PO)
	tar -cf - $^ | tar -C $(distdir) -xf -

valgrind-suppressions: $(VALGRIND_SUPPRESSIONS)
	$(AM_V_GEN) cat $^ > $@

check-memory: valgrind-suppressions
	$(MAKE) LOG_FLAGS="-- valgrind $(VALGRIND_ARGS)" \
	        HTML_LOG_FLAGS="valgrind $(VALGRIND_ARGS)" \
		$(AM_MAKEFLAGS) check
recheck-memory: valgrind-suppressions
	$(MAKE) LOG_FLAGS="-- valgrind $(VALGRIND_ARGS)" \
	        HTML_LOG_FLAGS="valgrind $(VALGRIND_ARGS)" \
		$(AM_MAKEFLAGS) recheck

install-data-hook::
	mkdir -p $(DESTDIR)$(localstatedir)/lib/cockpit
	chgrp wheel $(DESTDIR)$(localstatedir)/lib/cockpit || true
	chmod 775 $(DESTDIR)$(localstatedir)/lib/cockpit

dist/fonts/%.woff:
	$(V_COPY) $(MKDIR_P) $(dir $@) && \
	cp -L $(subst dist/fonts,$(srcdir)/node_modules/patternfly/dist/fonts,$@) $@.tmp && $(MV) $@.tmp $@

@ENABLE_DOC_TRUE@render-doc-images:
@ENABLE_DOC_TRUE@	 inkscape --without-gui --export-area-page \
@ENABLE_DOC_TRUE@		--export-width=1280 --export-height=960 \
@ENABLE_DOC_TRUE@		--export-png=$(srcdir)/doc/cockpit-transport.png \
@ENABLE_DOC_TRUE@		$(srcdir)/doc/cockpit-transport.svg

@ENABLE_DOC_TRUE@dist/guide/html/%.woff: dist/fonts/%.woff
@ENABLE_DOC_TRUE@	$(COPY_RULE)

@ENABLE_DOC_TRUE@dist/guide/html/index.html: $(GUIDE_DOCBOOK) $(GUIDE_INCLUDES) $(man_MANS) $(GUIDE_STATIC) $(GUIDE_XSLT) $(GUIDE_FONTS)
@ENABLE_DOC_TRUE@	$(AM_V_GEN) $(MKDIR_P) dist/guide/html/ && \
@ENABLE_DOC_TRUE@	cp $(addprefix $(srcdir)/,$(GUIDE_STATIC)) dist/guide/html/
@ENABLE_DOC_TRUE@	$(AM_V_GEN) LANG=en_US.UTF-8 $(XMLTO) html -m $(srcdir)/doc/guide/gtk-doc.xsl -o dist/guide/html/ \
@ENABLE_DOC_TRUE@		--searchpath $(abs_builddir):$(abs_srcdir):$(abs_builddir)/doc/guide \
@ENABLE_DOC_TRUE@		$(srcdir)/$(GUIDE_DOCBOOK)
@ENABLE_DOC_TRUE@	rm -f dist/guide/html/cockpit-guide.proc

@ENABLE_DOC_TRUE@dist/guide/html: dist/guide/html/index.html

@ENABLE_DOC_TRUE@dist/guide/links.html:
@ENABLE_DOC_TRUE@	$(AM_V_GEN) $(MKDIR_P) $(dir $@) && \
@ENABLE_DOC_TRUE@	(git -C $(srcdir) tag -l '[0-9]*' --sort=-version:refname --format \
@ENABLE_DOC_TRUE@		'<a href="./%(refname:strip=2)/">%(refname:strip=2)</a>' | head -n15 || true) > $@.tmp && \
@ENABLE_DOC_TRUE@	$(MV) $@.tmp $@

@ENABLE_DOC_TRUE@dist/guide/index.html: doc/guide/directory.html dist/guide/links.html doc/guide/footer.html
@ENABLE_DOC_TRUE@	$(CAT_RULE)

@ENABLE_DOC_TRUE@check-local::
@ENABLE_DOC_TRUE@	if grep -n -r 'name=\"id' dist/guide/html >&2; then \
@ENABLE_DOC_TRUE@		echo "Unexpected generated id in the documentation" >&2; \
@ENABLE_DOC_TRUE@		exit 1; \
@ENABLE_DOC_TRUE@	fi

@ENABLE_DOC_TRUE@.xml.8:
@ENABLE_DOC_TRUE@	$(AM_V_GEN) $(MAN_PROC)
@ENABLE_DOC_TRUE@.xml.1:
@ENABLE_DOC_TRUE@	$(AM_V_GEN) $(MAN_PROC)
@ENABLE_DOC_TRUE@.xml.5:
@ENABLE_DOC_TRUE@	$(AM_V_GEN) $(MAN_PROC)

@ENABLE_DOC_TRUE@dist-doc-hook:
@ENABLE_DOC_TRUE@	@true

@ENABLE_DOC_FALSE@dist-doc-hook:
@ENABLE_DOC_FALSE@	@echo "*** doc must be enabled (ie: --enable-doc) in order to make dist or distcheck"

dist-hook:: dist-doc-hook
	@true
distcheck-hook:: dist-doc-hook
	@true
install-data-local:: dist/guide/html/index.html
	$(MKDIR_P) $(DESTDIR)$(htmldir)
	$(INSTALL_DATA) $(dir $<)/* $(DESTDIR)$(htmldir)
uninstall-local::
	rm -rf $(DESTDIR)$(htmldir)

# See bots/make-source
dump-dist-gzip:
	@echo "$(abs_builddir)/$(distdir).tar.gz"

# Build up the distribution using $COMMITTED_DIST and include node_modules licenses
# also automatically update minimum base dependency in RPM spec file
dist-hook::
	( cd $(srcdir); git ls-tree HEAD --name-only -r $(COMMITTED_DIST) || (echo $(COMMITTED_DIST) | tr ' ' '\n' ) ) | \
		tar -C $(srcdir) -cf - -T - | tar -C $(distdir) -xf -
	echo $(VERSION) > $(distdir)/.tarball
	$(srcdir)/tools/build-copying $(distdir)/node_modules > $(distdir)/COPYING.node
	[ ! -d $(distdir)/tools/debian ] || $(srcdir)/tools/build-debian-copyright $(distdir)/node_modules > $(distdir)/tools/debian/copyright
	[ ! -e $(distdir)/tools/cockpit.spec ] || $(srcdir)/tools/gen-spec-dependencies $(distdir)/tools/cockpit.spec

dist-gzip: distdir
	$(DIST_TAR_MAIN) | GZIP=$(GZIP_ENV) gzip -c > $(distdir).tar.gz
	$(DIST_TAR_CACHE) | GZIP=$(GZIP_ENV) gzip -c > cockpit-cache-$(VERSION).tar.gz
	find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' && rm -rf "$(distdir)"
dist-xz: distdir
	$(DIST_TAR_MAIN) | xz -ec > $(distdir).tar.xz
	$(DIST_TAR_CACHE) | xz -ec > cockpit-cache-$(VERSION).tar.xz
	find "$(distdir)" -type d ! -perm -200 -exec chmod u+w {} ';' && rm -rf "$(distdir)"

distcheck-hook::
	$(srcdir)/tools/check-dist $(distdir)

install-integration-tests::
	$(MKDIR_P) $(DESTDIR)$(pkgdatadir)
	( cd $(srcdir); git ls-tree HEAD --full-tree --name-only -r test || echo test ) | \
		tar -C $(srcdir) -cf - -T - | tar -C $(DESTDIR)$(pkgdatadir) -xf -
	rm -r $(DESTDIR)$(pkgdatadir)/test/tmp; ln -sf /var/tmp/cockpit $(DESTDIR)$(pkgdatadir)/test/tmp

# A filtered po file with just src/ws
src/ws/%.po: po/%.po
	$(AM_V_GEN) $(MKDIR_P) $(dir $@) && \
	$(MSGGREP) `$(FILTER_PO_SRC_WS)` $< > $@.tmp && mv $@.tmp $@

# Build a binary mo file from po
.po.mo:
	$(AM_V_GEN) $(MKDIR_P) $(dir $@) && \
	$(MSGFMT) -o $@.tmp $< && mv $@.tmp $@ && touch $@

# Copy the empty translations to wherever they are needed
%/po.js: po/po.empty.js
	$(COPY_RULE)

# Build a javascript file from a po
po.%.js: %.po
	$(AM_V_GEN) $(MKDIR_P) $(dir $@) && \
	$(srcdir)/tools/missing $(srcdir)/po/po2json -m $(srcdir)/po/po.empty.js -o $@.js.tmp $< && \
	mv $@.js.tmp $@

# Always build the binary gettext data
all-local:: $(MO_FILES)

# Called to install the binary gettext data
install-data-local:: $(MO_FILES)
	for lang in $(LINGUAS); do \
		$(MKDIR_P) $(DESTDIR)$(localedir)/$$lang/LC_MESSAGES; \
		$(INSTALL_DATA) src/ws/$$lang.mo $(DESTDIR)$(localedir)/$$lang/LC_MESSAGES/$(GETTEXT_PACKAGE).mo; \
	done

# Called to ininstall the binary gettext data
uninstall-local::
	for lang in $(LINGUAS); do rm -f $(DESTDIR)$(localedir)/$$lang/LC_MESSAGES/$(GETTEXT_PACKAGE).mo; done

# Lists of files we need to extract from
po/POTFILES.c.in:
	$(MKDIR_P) $(notdir $@)
	( cd $(srcdir) && find src/ws/ src/bridge/ -name '*.c' ) > $@
po/POTFILES.html.in:
	$(MKDIR_P) $(notdir $@)
	( cd $(srcdir) && find $(TRANSLATE) -name '*.html' ) > $@
po/POTFILES.js.in:
	$(MKDIR_P) $(notdir $@)
	( cd $(srcdir) && find src/base1/ $(TRANSLATE) -name '*.js' -o -name '*.jsx' -o -name '*.es6' ) > $@
po/POTFILES.manifest.in:
	$(MKDIR_P) $(notdir $@)
	( cd $(srcdir) && find $(TRANSLATE) -name 'manifest.json' ) > $@
po/POTFILES.pre.in: prepare-po
	$(MKDIR_P) $(notdir $@)
	( cd tmp/ && find . -type f ) > $@
.PHONY: po/POTFILES.c.in po/POTFILES.html.in po/POTFILES.js.in po/POTFILES.manifest.in po/POTFILES.pre.in

# Extract from GLib based C code files
po/cockpit.c.pot: po/POTFILES.c.in
	$(XGETTEXT) --default-domain=cockpit --output=$@ --language=C \
		--keyword=_ --keyword=N_ --keyword=C_:1c,2 --keyword=NC_:1c,2 --keyword=Q_ \
		--keyword=g_dgettext:2 --keyword=g_dngettext:2,3 --keyword=g_dpgettext:2 \
		--keyword=g_dpgettext2=2c,3 \
		--from-code=UTF-8 --directory=$(srcdir) --files-from=$^

# Extract translate attribute, Glade style, angular-gettext HTML translations
po/cockpit.html.pot: po/POTFILES.html.in
	$(srcdir)/tools/missing $(srcdir)/po/html2po -d $(srcdir) -f $^ -o $@

# Extract cockpit style javascript translations
po/cockpit.js.pot: po/POTFILES.js.in
	$(XGETTEXT) --default-domain=cockpit --output=$@ --language=C --keyword= \
		--keyword=_:1,1t --keyword=_:1c,2,1t --keyword=C_:1c,2 \
		--keyword=N_ --keyword=NC_:1c,2 \
		--keyword=gettext:1,1t --keyword=gettext:1c,2,2t \
		--keyword=ngettext:1,2,3t --keyword=ngettext:1c,2,3,4t \
		--keyword=gettextCatalog.getString:1,3c --keyword=gettextCatalog.getPlural:2,3,4c \
		--from-code=UTF-8 --directory=$(srcdir) --files-from=$^

po/cockpit.manifest.pot: po/POTFILES.manifest.in
	$(srcdir)/tools/missing $(srcdir)/po/manifest2po -d $(srcdir) -f $^ -o $@

# Extract pre-processed prepare-po data in tmp/
po/cockpit.pre.pot: po/POTFILES.pre.in
	$(XGETTEXT) --default-domain=cockpit --output=$@ \
		--language=C --keyword=N_ \
		--from-code=UTF-8 --directory=$(builddir)/tmp --files-from=$^

# Combine the above pot files into one
po/cockpit.pot: po/cockpit.c.pot po/cockpit.html.pot po/cockpit.js.pot po/cockpit.manifest.pot po/cockpit.pre.pot
	$(MSGCAT) --sort-output --output-file=$@ $^

# Actually update the old translations with new translatable text
update-po: po/cockpit.pot
	for lang in $(LINGUAS); do \
		$(MSGMERGE) --output-file=$(srcdir)/po/$$lang.po $(srcdir)/po/$$lang.po $<; \
	done

upload-pot: po/cockpit.pot
	$(ZANATA_CLI) push --includes cockpit.pot --project-config "$(srcdir)/po/zanata.xml" \
		-s "$(builddir)/po"

upload-translations:
	$(ZANATA_CLI) push --includes=cockpit.pot --project-config "$(srcdir)/po/zanata.xml" \
		--push-type trans -s "$(builddir)/po" -t "$(srcdir)/po"

download-po:
	$(ZANATA_CLI) pull --includes=cockpit.pot --project-config "$(srcdir)/po/zanata.xml" \
		--min-doc-percent 1 -s "$(builddir)/po" -t "$(srcdir)/po"
	sh -c 'cd $(srcdir)/po; ls *.po' | sed 's/\.po//g' | sort > $(srcdir)/po/LINGUAS

dist/playground/extra.de.po: pkg/playground/extra.de.po
	$(COPY_RULE)

dist/machines/base.css: node_modules/noVNC/include/base.css
	$(COPY_RULE)

dist/ovirt/install.sh: pkg/ovirt/install.sh
	$(COPY_RULE)

dist/ovirt/base.css: node_modules/noVNC/include/base.css
	$(COPY_RULE)

@WITH_GOLANG_TRUE@cockpit-kube-auth$(EXEEXT): $(COCKPIT_KUBE_AUTH)
@WITH_GOLANG_TRUE@	$(AM_V_GO) $(GO_BUILD_RULE)

@WITH_GOLANG_TRUE@cockpit-kube-launch$(EXEEXT): $(COCKPIT_KUBE_LAUNCH)
@WITH_GOLANG_TRUE@	$(AM_V_GO) $(GO_BUILD_RULE)

dist/base1/cockpit.min.css: src/base1/cockpit.css
	$(AM_V_GEN) $(MKDIR_P) $(dir $@) && \
	$(srcdir)/tools/missing $(CLEAN_CSS) --keep-line-breaks --output=$@ --skip-import --source-map --source-map-inline-sources $^
dist/base1/patternfly.min.css: dist/base1/patternfly-base.css dist/base1/patternfly-additions.css
	$(MIN_CSS_RULE)
dist/base1/require.js: src/base1/deprecated.js src/base1/require-config.js src/base1/require-loaders.js
	$(AM_V_GEN) $(MKDIR_P) $(dir $@) && \
	cat $(srcdir)/src/base1/deprecated.js $(srcdir)/src/base1/require-config.js $(srcdir)/node_modules/requirejs/require.js $(srcdir)/src/base1/require-loaders.js > $@.tmp && $(MV) $@.tmp $@
dist/base1/require.min.js: dist/base1/require.js
	$(MIN_JS_RULE)
dist/base1/jquery.js:
	$(AM_V_GEN) $(MKDIR_P) $(dir $@) && \
	cat $(srcdir)/node_modules/jquery/dist/jquery.js $(srcdir)/node_modules/bootstrap/dist/js/bootstrap.js $(srcdir)/node_modules/patternfly/dist/js/patternfly.js > $@.tmp && $(MV) $@.tmp $@
dist/base1/jquery.min.js: dist/base1/jquery.js
	$(MIN_JS_RULE)
dist/base1/cockpit.js: src/base1/cockpit.js
	$(JSHINT_RULE)
	$(COPY_RULE)
dist/base1/cockpit.min.js: dist/base1/cockpit.js
	$(MIN_JS_RULE)
dist/base1/mustache.js: src/base1/deprecated.js
	$(V_COPY) $(MKDIR_P) $(dir $@) && \
	cat $(srcdir)/src/base1/deprecated.js $(srcdir)/node_modules/mustache/mustache.js > $@.tmp && $(MV) $@.tmp $@
dist/base1/mustache.min.js: dist/base1/mustache.js
	$(MIN_JS_RULE)
dist/base1/manifest.json: src/base1/manifest.json
	$(COPY_RULE)

# All map files are built as side effects of minification
dist/base1/require.min.js.map: dist/base1/require.min.js

dist/base1/cockpit.min.js.map: dist/base1/cockpit.min.js

dist/base1/jquery.min.js.map: dist/base1/jquery.min.js

dist/base1/mustache.min.js.map: dist/base1/mustache.min.js

dist/base1/cockpit.min.css.map: dist/base1/cockpit.min.css

dist/base1/patternfly.min.css.map: dist/base1/patternfly.min.css

# Modify the patternfly files appropriately
dist/base1/patternfly-base.css: dist/base1/patternfly.css.map
	$(AM_V_GEN) $(MKDIR_P) $(dir $@) && \
	sed -f $(srcdir)/tools/patternfly.sed $(srcdir)/node_modules/patternfly/dist/css/patternfly.css > $@.tmp && $(MV) $@.tmp $@
dist/base1/patternfly.css.map:
	$(V_COPY) $(MKDIR_P) $(dir $@) && \
	cp $(srcdir)/node_modules/patternfly/dist/css/patternfly.css.map $@.tmp && $(MV) $@.tmp $@
dist/base1/patternfly-additions.css: dist/base1/patternfly-additions.css.map
	$(AM_V_GEN) $(MKDIR_P) $(dir $@) && \
	sed -f $(srcdir)/tools/patternfly.sed $(srcdir)/node_modules/patternfly/dist/css/patternfly-additions.css > $@.tmp && $(MV) $@.tmp $@
dist/base1/patternfly-additions.css.map:
	$(V_COPY) $(MKDIR_P) $(dir $@) && \
	cp $(srcdir)/node_modules/patternfly/dist/css/patternfly-additions.css.map $@.tmp && $(MV) $@.tmp $@

dist/base1/fonts/fontawesome.woff:
	$(V_COPY) $(MKDIR_P) $(dir $@) && \
	cp $(srcdir)/node_modules/patternfly/dist/fonts/fontawesome-webfont.woff $@.tmp && $(MV) $@.tmp $@
dist/base1/fonts/glyphicons.woff:
	$(V_COPY) $(MKDIR_P) $(dir $@) && \
	cp $(srcdir)/node_modules/patternfly/dist/fonts/glyphicons-halflings-regular.woff $@.tmp && $(MV) $@.tmp $@
dist/base1/fonts/patternfly.woff:
	$(V_COPY) $(MKDIR_P) $(dir $@) && \
	cp $(srcdir)/node_modules/patternfly/dist/fonts/PatternFlyIcons-webfont.woff $@.tmp && $(MV) $@.tmp $@

install-data-local::
	$(LN_S) -nf require.min.js.gz $(DESTDIR)$(pkgdatadir)/base1/bundle.min.js.gz

dist/base1/qunit.js:
	$(V_COPY) $(MKDIR_P) $(dir $@) && \
	cat $(srcdir)/node_modules/qunitjs/qunit/qunit.js \
	    $(srcdir)/node_modules/qunit-tap/lib/qunit-tap.js \
            $(srcdir)/pkg/lib/qunit-config.js > $@.tmp && $(MV) $@.tmp $@

dist/base1/qunit.css:
	$(V_COPY) $(MKDIR_P) $(dir $@) && \
	cp $(srcdir)/node_modules/qunitjs/qunit/qunit.css $@.tmp && $(MV) $@.tmp $@

dist/base1/test-dbus-common.js: src/base1/test-dbus-common.js
	$(JSHINT_RULE)
	$(COPY_RULE)

$(base_QUNIT_TESTS): dist/base1/test-%.html: src/base1/test-%.js $(base_QUNIT_DEPS)
	$(JSHINT_RULE)
	$(AM_V_GEN) $(MKDIR_P) $(dir $@) && \
	cp -L $< $@.tmp.js && $(MV) $@.tmp.js $(dir $@)/$(notdir $<) && \
	$(SED_TEST_TEMPLATE) $(srcdir)/src/base1/qunit-template.html > $@.tmp && $(MV) $@.tmp $@

dist/base1/simple-tap.js: src/base1/simple-tap.js
	$(JSHINT_RULE)
	$(COPY_RULE)

$(base_SIMPLE_TESTS): dist/base1/test-%.html: src/base1/test-%.js $(base_SIMPLE_DEPS)
	$(JSHINT_RULE)
	$(AM_V_GEN) $(MKDIR_P) $(dir $@) && \
	cp -L $< $@.tmp.js && $(MV) $@.tmp.js $(dir $@)/$(notdir $<) && \
	$(SED_TEST_TEMPLATE) $(srcdir)/src/base1/simple-template.html > $@.tmp && $(MV) $@.tmp $@

dist/base1/test-%.js: dist/base1/test-%.html
	@true

# Opportunistically use fedora-logos
install-data-hook::
	$(LN_S) -f /usr/share/pixmaps/system-logo-white.png $(DESTDIR)$(centosbrandingdir)/logo.png
	$(LN_S) -f /usr/share/pixmaps/fedora-logo-sprite.png $(DESTDIR)$(centosbrandingdir)/apple-touch-icon.png
	$(LN_S) -f /etc/favicon.png $(DESTDIR)$(centosbrandingdir)/favicon.ico

# Opportunistically use debconf debian logos
install-data-hook::
	$(LN_S) -f /usr/share/pixmaps/debian-logo.png $(DESTDIR)$(debianbrandingdir)/logo.png
	$(LN_S) -f /usr/share/pixmaps/debian-logo.png $(DESTDIR)$(debianbrandingdir)/favicon.ico

# Opportunistically use fedora-logos
install-data-hook::
	$(LN_S) -f /usr/share/pixmaps/system-logo-white.png $(DESTDIR)$(fedorabrandingdir)/logo.png
	$(LN_S) -f /usr/share/pixmaps/fedora-logo-sprite.png $(DESTDIR)$(fedorabrandingdir)/apple-touch-icon.png
	$(LN_S) -f /etc/favicon.png $(DESTDIR)$(fedorabrandingdir)/favicon.ico

# Opportunistically use redhat-logos ... yes they're called 'fedora'
install-data-hook::
	$(LN_S) -f /usr/share/pixmaps/system-logo-white.png $(DESTDIR)$(rhelbrandingdir)/logo.png
	$(LN_S) -f /usr/share/pixmaps/fedora-logo-sprite.png $(DESTDIR)$(rhelbrandingdir)/apple-touch-icon.png
	$(LN_S) -f /etc/favicon.png $(DESTDIR)$(rhelbrandingdir)/favicon.ico

# Opportunistically use plymouth ubuntu logo
install-data-hook::
	$(LN_S) -f /usr/share/plymouth/ubuntu-logo.png $(DESTDIR)$(ubuntubrandingdir)/logo.png

# This is non-portable, but I don't feel like dragging in libtool just
# for this.
#
@ENABLE_PCP_TRUE@mock-pmda.so: src/bridge/mock-pmda.c
@ENABLE_PCP_TRUE@	$(AM_V_CCLD) $(CC) $(CFLAGS) -fPIC -shared \
@ENABLE_PCP_TRUE@		-DSRCDIR=\"$(abs_srcdir)\" \
@ENABLE_PCP_TRUE@		-o mock-pmda.so $(srcdir)/src/bridge/mock-pmda.c -lpcp_pmda -lpcp
mock-dbus-tests:
	gdbus-codegen \
		--interface-prefix com.redhat.Cockpit.DBusTests \
		--c-namespace Test \
		--c-generate-object-manager \
		--generate-c-code $(srcdir)/src/common/mock-dbus-tests \
		$(srcdir)/src/common/com.redhat.Cockpit.DBusTests.xml \
		$(NULL)

src/common/cockpitassets.h: src/common/cockpitassets.gresource.xml
	@$(MKDIR_P) $(dir $@)
	$(AM_V_GEN) glib-compile-resources --target=$@ --generate-header --sourcedir=$(dir $<) $<
src/common/cockpitassets.c: src/common/cockpitassets.gresource.xml src/common/fail.html
	@$(MKDIR_P) $(dir $@)
	$(AM_V_GEN) glib-compile-resources --target=$@ --generate-source --sourcedir=$(dir $<) $<

# Tell make that we depend on these files being built here
src/common/test-locale.c: $(test_locale_MO)

@WITH_COVERAGE_TRUE@coverage:
@WITH_COVERAGE_TRUE@	mkdir -p tools/coverage
@WITH_COVERAGE_TRUE@	$(MAKE)
@WITH_COVERAGE_TRUE@	lcov --directory . --capture --initial \
@WITH_COVERAGE_TRUE@		--output-file tools/coverage.base
@WITH_COVERAGE_TRUE@	$(MAKE) check
@WITH_COVERAGE_TRUE@	lcov --directory . --capture \
@WITH_COVERAGE_TRUE@		--output-file tools/coverage.test
@WITH_COVERAGE_TRUE@	lcov --directory . \
@WITH_COVERAGE_TRUE@		--output tools/coverage.all \
@WITH_COVERAGE_TRUE@		--add-tracefile tools/coverage.base \
@WITH_COVERAGE_TRUE@		--add-tracefile tools/coverage.test
@WITH_COVERAGE_TRUE@	lcov --directory . \
@WITH_COVERAGE_TRUE@		--remove tools/coverage.all \
@WITH_COVERAGE_TRUE@		--output tools/coverage.info \
@WITH_COVERAGE_TRUE@		$(BUILT_SOURCES) 'test-*' 'mock-*' 'frob-*' '/usr/include/*'
@WITH_COVERAGE_TRUE@	genhtml --output-directory tools/coverage \
@WITH_COVERAGE_TRUE@		--title "cockpit $(PACKAGE_VERSION)" \
@WITH_COVERAGE_TRUE@		tools/coverage.info
@WITH_COVERAGE_TRUE@	@echo "file://$(abs_top_builddir)/tools/coverage/index.html"

@WITH_COCKPIT_SSH_TRUE@test_rsa_key: src/ssh/test_rsa
@WITH_COCKPIT_SSH_TRUE@	$(AM_V_GEN) cp $< $@ && chmod 600 $@

@WITH_COCKPIT_SSH_TRUE@update-known-hosts:
@WITH_COCKPIT_SSH_TRUE@	cat $(srcdir)/src/ssh/mock_*.pub | \
@WITH_COCKPIT_SSH_TRUE@		sed -ne 's/\(.*\) [^ ]\+$$/[localhost]:*,[127.0.0.1]:* \1/p' > \
@WITH_COCKPIT_SSH_TRUE@			$(srcdir)/src/ssh/mock_known_hosts

dist/static/login.js: src/ws/login.js
	$(JSHINT_RULE)
	$(COPY_RULE)
dist/static/login.min.js: dist/static/login.js
	$(MIN_JS_RULE)
dist/static/login.css: src/ws/login.css
	$(COPY_RULE)
dist/static/login.min.css: dist/static/login.css
	$(MIN_CSS_RULE)
dist/static/login.html: src/ws/login.html dist/static/login.js dist/static/login.css
	$(AM_V_GEN) $(MKDIR_P) $(dir $@) && \
	sed -e '/<script>/ r dist/static/login.js' \
	    -e '/<style>/ r dist/static/login.css' $< > $@.tmp && \
	$(MV) $@.tmp $@
dist/static/login.min.html: src/ws/login.html dist/static/login.min.js dist/static/login.min.css
	$(AM_V_GEN) $(MKDIR_P) $(dir $@) && \
	sed -e '/<script>/ r dist/static/login.min.js' \
	    -e '/<style>/ r dist/static/login.min.css' $< > $@.tmp && \
	$(MV) $@.tmp $@

dist/static/login.po.html: src/ws/po.empty.html
	$(COPY_RULE)

dist/static/login.po.%.html: src/ws/%.po src/ws/po.empty.html
	$(AM_V_GEN) $(MKDIR_P) $(dir $@) && \
	$(srcdir)/tools/missing $(srcdir)/po/po2json -m $(srcdir)/src/ws/po.empty.html -o $@.tmp src/ws/$*.po && \
	$(MV) $@.tmp $@

# If running cockpit-ws as a non-standard user, we also set up
# cockpit-session to be setuid root, but only runnable by cockpit-session
install-exec-hook::
	chown -f root:$(COCKPIT_GROUP) $(DESTDIR)$(libexecdir)/cockpit-session || true
	test "$(COCKPIT_USER)" != "root" && chmod -f 4750 $(DESTDIR)$(libexecdir)/cockpit-session || true

$(nodist_appdata_DATA): $(appdata_in) $(PO_FILES)
	$(AM_V_GEN) LC_ALL=C $(INTLTOOL_MERGE) -q -x -u $(top_srcdir)/po $< $@

$(nodist_desktop_DATA): $(desktop_in) $(PO_FILES)
	$(AM_V_GEN) LC_ALL=C $(INTLTOOL_MERGE) -q -d -u $(top_srcdir)/po $< $@
mock-pam-conv-mod.so$(EXEEXT): $(mock_pam_conv_mod_so_SOURCES)
	$(AM_V_CCLD) $(CC) -fPIC -shared $(CFLAGS) -I$(builddir) \
		-o $@ $^ $(PAM_LIBS) $(LDFLAGS)

install-tests::
	$(MKDIR_P) $(DESTDIR)$(testassetsdir) $(DESTDIR)$(testserviceddir) $(DESTDIR)/etc/cockpit
	$(INSTALL_DATA) mock-pam-conv-mod.so $(DESTDIR)$(testassetsdir)
	$(INSTALL_DATA) $(srcdir)/src/ws/fatal.conf $(DESTDIR)/etc/cockpit/cockpit.conf

install-exec-hook::
	mkdir -p $(DESTDIR)$(sysconfdir)/cockpit/ws-certs.d $(DESTDIR)$(sysconfdir)/cockpit/machines.d
	chmod 755 $(DESTDIR)$(sysconfdir)/cockpit/ws-certs.d $(DESTDIR)$(sysconfdir)/cockpit/machines.d

prepare-po-appdata: $(appdata_in)
	cp $< .
	$(INTLTOOL_EXTRACT) -l --type=gettext/xml $(notdir $(appdata_in))

prepare-po-desktop: $(desktop_in)
	cp $< .
	$(INTLTOOL_EXTRACT) -l --type=gettext/ini $(notdir $(desktop_in))

prepare-po:: prepare-po-appdata prepare-po-desktop
pam_ssh_add.so: libpam_ssh_add.a $(pam_ssh_add_FILES)
	$(AM_V_CCLD) $(CC) -fPIC -shared $(CFLAGS) $(libpam_ssh_add_a_CFLAGS) -I$(builddir) \
		-o $@ $^ $(libpam_ssh_add_a_LIBS) $(LDFLAGS)

all-local:: pam_ssh_add.so

install-exec-local::
	$(MKDIR_P) $(DESTDIR)$(pamdir)
	$(INSTALL) pam_ssh_add.so $(DESTDIR)$(pamdir)
uninstall-local::
	$(RM) -f $(DESTDIR)$(pamdir)/pam_ssh_add.so

kubernetes-container:
	rm -rf $(KUBERNETES_DIR)/rpms && mkdir -p $(KUBERNETES_DIR)/rpms
	cd $(KUBERNETES_DIR)/rpms && $(abs_srcdir)/tools/make-rpms
	sudo docker build -t cockpit/kubernetes $(KUBERNETES_DIR)

kubernetes-container-shell:
	sudo docker run -ti --rm --publish=9001:9090 \
		--env KUBERNETES_SERVICE_HOST=10.111.112.101 \
		--env KUBERNETES_SERVICE_PORT=8443 \
		--env OPENSHIFT_OAUTH_PROVIDER_URL=https://10.111.112.101:8443 \
		--env OPENSHIFT_OAUTH_CLIENT_ID=cockpit-oauth-devel \
		--env KUBERNETES_INSECURE=true \
		--env=COCKPIT_KUBE_INSECURE=true \
		cockpit/kubernetes /bin/bash

registry-container-shell:
	sudo docker run -ti --rm --publish=9001:9090 \
		--env KUBERNETES_SERVICE_HOST=10.111.112.101 \
		--env KUBERNETES_SERVICE_PORT=8443 \
		--env OPENSHIFT_OAUTH_PROVIDER_URL=https://10.111.112.101:8443 \
		--env OPENSHIFT_OAUTH_CLIENT_ID=cockpit-oauth-devel \
		--env KUBERNETES_INSECURE=true \
		--env=COCKPIT_KUBE_INSECURE=true \
		--env=REGISTRY_ONLY=true \
		--env=REGISTRY_HOST=10.111.112.101:5000 \
		cockpit/kubernetes /bin/bash

install-integration-tests::
	$(MKDIR_P) $(DESTDIR)/$(pkgdatadir)/containers/ws/
	$(INSTALL_PROGRAM) $(ATOMIC_SETUP) $(DESTDIR)/$(pkgdatadir)/containers/ws/

ws-container:
	rm -rf $(WS_DIR)/rpms && mkdir -p $(WS_DIR)/rpms
	cd $(WS_DIR)/rpms && $(abs_srcdir)/tools/make-rpms
	sudo docker build -t cockpit/ws $(WS_DIR)

ws-container-shell:
	sudo docker run -ti --rm --publish=9001:9090 \
		cockpit/ws /bin/bash

unit-tests-container:
	sudo docker build -t cockpit/unit-tests $(UNIT_TESTS_DIR)
	sudo docker tag  cockpit/unit-tests:latest docker.io/cockpit/unit-tests:latest
	sudo docker build --build-arg arch=i386 -t cockpit/unit-tests:i386 containers/unit-tests/
	sudo docker tag  cockpit/unit-tests:i386 docker.io/cockpit/unit-tests:i386

unit-tests-container-run:
	sudo docker run -ti --rm -v $(abs_srcdir):/source:ro cockpit/unit-tests

unit-tests-container-shell:
	sudo docker run -ti --rm -v $(abs_srcdir):/source:ro cockpit/unit-tests /bin/bash

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
