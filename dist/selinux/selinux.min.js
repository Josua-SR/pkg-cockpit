!function(e) {
    function t(a) {
        if (n[a]) return n[a].exports;
        var r = n[a] = {
            exports: {},
            id: a,
            loaded: !1
        };
        return e[a].call(r.exports, r, r.exports, t), r.loaded = !0, r.exports;
    }
    var n = {};
    return t.m = e, t.c = n, t.p = "", t(0);
}([ function(e, t, n) {
    n(5), e.exports = n(104);
}, , , , , function(e, t, n) {
    "use strict";
    var a = n(6), r = a.gettext, s = n(7), i = n(8), o = n(97), d = n(98), u = function(e) {
        function t(e) {
            n.capabilities = e, p();
        }
        var n = {};
        n.domRootElement = e, n.entries = [], n.connected = !1, n.connecting = null, n.error = null, 
        n.client = i, n.selinuxStatusError = void 0;
        var u = function(e, t) {
            n.selinuxStatus = e, void 0 !== t && (n.selinuxStatusError = t), n.render();
        }, _ = function() {
            n.selinuxStatusError = void 0, n.render();
        }, l = function(e) {
            o.setEnforcing(e).then(function() {
                n.selinuxStatus.enforcing = e, n.render();
            }, function(e) {
                n.selinuxStatusError = a.format(r("Error while setting SELinux mode: '$0'"), e.message), 
                n.render();
            });
        };
        n.selinuxStatus = o.init(u);
        var m = function(e, t) {
            var a;
            for (a = n.entries.length - 1; a >= 0 && n.entries[a].key != e; --a) ;
            return a < 0 ? void console.log("Unable to find alert entry for element requesting fix: " + e + " (" + t + ").") : (n.entries[a].fix = {
                plugin: t,
                running: !0,
                result: null,
                success: !1
            }, n.render(), void n.client.runFix(e, t).done(function(e) {
                n.entries[a].fix = {
                    plugin: t,
                    running: !1,
                    result: e,
                    success: !0
                }, n.render();
            }).fail(function(e) {
                n.entries[a].fix = {
                    plugin: t,
                    running: !1,
                    result: e,
                    success: !1
                }, n.render();
            }));
        }, c = function(e) {
            n.client.capabilities.deleteAlert(e).done(function() {
                var t;
                for (t = n.entries.length - 1; t >= 0 && n.entries[t].key != e; --t) ;
                t < 0 || (n.entries.splice(t, 1), n.render());
            }).fail(function(e) {
                n.error = e, n.render();
            });
        }, h = function() {
            n.error = null, n.render();
        }, p = function() {
            var t = "capabilities" in n.client && "deleteAlert" in n.client.capabilities;
            s.render(s.createElement(d.SETroubleshootPage, {
                connected: n.connected,
                connecting: n.connecting,
                error: n.error,
                dismissError: h,
                entries: n.entries,
                runFix: m,
                deleteAlert: t ? c : void 0,
                selinuxStatus: n.selinuxStatus,
                selinuxStatusError: n.selinuxStatusError,
                changeSelinuxMode: l,
                dismissStatusError: _
            }), e);
        };
        n.render = p;
        var f = function(e, t, a, r) {
            var s;
            for (s = n.entries.length - 1; s >= 0; --s) if (n.entries[s].key == e) return void 0 === t || void 0 === a ? void (n.entries[s].details = r) : void (n.entries[s].count <= a && ((void 0 !== r || n.entries[s].count < a) && (n.entries[s].details = r), 
            n.entries[s].description = t, n.entries[s].count = a));
            n.entries.push({
                key: e,
                description: t,
                count: a,
                details: r,
                fix: null
            });
        }, M = function(e) {
            var t, a;
            for (t = 0; t != e.length; ++t) a = e[t], f(a.localId, a.summary, a.reportCount, void 0), 
            n.getAlertDetails(a.localId);
            p();
        };
        n.handleAlert = function(e, t) {
            n.getAlertDetails(t);
        };
        var L = function(e) {
            n.client.getAlert(e).done(function(t) {
                f(e, t.summary, t.reportCount, t), p();
            }).fail(function(t) {
                f(e, void 0, void 0, null), p();
            });
        };
        n.getAlertDetails = L;
        var y = function() {
            n.connected = !1, p();
        }, Y = function() {
            null !== n.connecting && (n.error = r("Not connected"), p());
        };
        return n.connectionTimeout = 5e3, n.tryConnect = function() {
            null === n.connecting && (n.connecting = window.setTimeout(Y, n.connectionTimeout), 
            p(), n.client.init(t).done(function(e) {
                n.connected = !0, window.clearTimeout(n.connecting), n.connecting = null, p(), n.client.handleAlert(n.handleAlert), 
                n.client.getAlerts().done(M).fail(function() {
                    console.error("Unable to get setroubleshootd messages"), y();
                });
            }).fail(function(e) {
                n.connected = !1, window.clearTimeout(n.connecting), n.connecting = null, p();
            }));
        }, p(), n.tryConnect(), n;
    };
    document.addEventListener("DOMContentLoaded", function() {
        u(document.getElementById("app"));
    });
}, function(e, t) {
    e.exports = cockpit;
}, function(e, t, n) {
    /*!
	 * react-lite.js v0.15.39
	 * (c) 2017 Jade Gu
	 * Released under the MIT License.
	 */
    !function(t, n) {
        e.exports = n();
    }(this, function() {
        "use strict";
        function e(e, t, n, a, r) {
            var s = {
                vtype: e,
                type: t,
                props: n,
                refs: Be,
                key: a,
                ref: r
            };
            return e !== Ie && e !== Ge || (s.uid = oe()), s;
        }
        function t(e, t, n) {
            var a = e.vtype, r = null;
            return a ? a === Ue ? r = d(e, t, n) : a === Ge ? r = y(e, t, n) : a === Ie ? r = p(e, t, n) : a === Re && (r = document.createComment("react-text: " + (e.uid || oe()))) : r = document.createTextNode(e), 
            r;
        }
        function n(e, t, n, r) {
            var s = e.vtype;
            if (s === Ge) return Y(e, t, n, r);
            if (s === Ie) return f(e, t, n, r);
            if (s !== Ue) return n;
            var i = e.props[ze] && e.props[ze].__html;
            return null != i ? (c(e, t, n, r), u(t, n, r)) : (a(e, t, n, r), c(e, t, n, r)), 
            n;
        }
        function a(e, t, n, a) {
            var o = {
                removes: [],
                updates: [],
                creates: []
            };
            m(o, e, t, n, a), se(o.removes, s), se(o.updates, r), se(o.creates, i);
        }
        function r(e) {
            if (e) {
                var t = e.vnode, n = e.node;
                e.shouldIgnore || (t.vtype ? t.vtype === Ue ? c(t, e.newVnode, n, e.parentContext) : t.vtype === Ie ? n = f(t, e.newVnode, n, e.parentContext) : t.vtype === Ge && (n = Y(t, e.newVnode, n, e.parentContext)) : n.replaceData(0, n.length, e.newVnode));
                var a = n.parentNode.childNodes[e.index];
                return a !== n && n.parentNode.insertBefore(n, a), n;
            }
        }
        function s(e) {
            o(e.vnode, e.node), e.node.parentNode.removeChild(e.node);
        }
        function i(e) {
            var n = t(e.vnode, e.parentContext, e.parentNode.namespaceURI);
            e.parentNode.insertBefore(n, e.parentNode.childNodes[e.index]);
        }
        function o(e, t) {
            var n = e.vtype;
            n === Ue ? h(e, t) : n === Ge ? v(e, t) : n === Ie && M(e, t);
        }
        function d(e, t, n) {
            var a = e.type, r = e.props, s = null;
            "svg" === a || n === Ne ? (s = document.createElementNS(Ne, a), n = Ne) : s = document.createElement(a), 
            u(e, s, t);
            var i = a.indexOf("-") >= 0 || null != r.is;
            return le(s, r, i), null != e.ref && (re(Ke, e), re(Ke, s)), s;
        }
        function u(e, n, a) {
            for (var r = n.vchildren = _(e), s = n.namespaceURI, i = 0, o = r.length; i < o; i++) n.appendChild(t(r[i], a, s));
        }
        function _(e) {
            var t = e.props.children, n = [];
            return kt(t) ? se(t, l, n) : l(t, n), n;
        }
        function l(e, t) {
            if (null != e && "boolean" != typeof e) {
                if (!e.vtype) {
                    if (e.toJS) return e = e.toJS(), void (kt(e) ? se(e, l, t) : l(e, t));
                    e = "" + e;
                }
                t[t.length] = e;
            }
        }
        function m(e, t, n, a, r) {
            if (a.vchildren) {
                var s = a.childNodes, i = a.vchildren, o = a.vchildren = _(n), d = i.length, u = o.length;
                if (0 !== d) if (0 !== u) {
                    for (var l = Array(u), c = null, h = null, p = 0; p < d; p++) for (var f = i[p], M = 0; M < u; M++) if (!l[M]) {
                        var L = o[M];
                        if (f === L) {
                            l[M] = {
                                shouldIgnore: P(a),
                                vnode: f,
                                newVnode: L,
                                node: s[p],
                                parentContext: r,
                                index: M
                            }, i[p] = null;
                            break;
                        }
                    }
                    for (var p = 0; p < d; p++) {
                        var y = i[p];
                        if (null !== y) {
                            for (var Y = !0, M = 0; M < u; M++) if (!l[M]) {
                                var v = o[M];
                                if (v.type === y.type && v.key === y.key && v.refs === y.refs) {
                                    l[M] = {
                                        vnode: y,
                                        newVnode: v,
                                        node: s[p],
                                        parentContext: r,
                                        index: M
                                    }, Y = !1;
                                    break;
                                }
                            }
                            Y && (c || (c = []), re(c, {
                                vnode: y,
                                node: s[p]
                            }));
                        }
                    }
                    for (var p = 0; p < u; p++) {
                        var g = l[p];
                        g ? g.vnode.vtype === Ue && m(e, g.vnode, g.newVnode, g.node, g.parentContext) : (h || (h = []), 
                        re(h, {
                            vnode: o[p],
                            parentNode: a,
                            parentContext: r,
                            index: p
                        }));
                    }
                    c && re(e.removes, c), h && re(e.creates, h), re(e.updates, l);
                } else for (var p = 0; p < d; p++) re(e.removes, {
                    vnode: i[p],
                    node: s[p]
                }); else if (u > 0) for (var p = 0; p < u; p++) re(e.creates, {
                    vnode: o[p],
                    parentNode: a,
                    parentContext: r,
                    index: p
                });
            }
        }
        function c(e, t, n) {
            var a = e.type.indexOf("-") >= 0 || null != e.props.is;
            return me(n, e.props, t.props, a), e.ref !== t.ref && (j(e.refs, e.ref, n), x(t.refs, t.ref, n)), 
            n;
        }
        function h(e, t) {
            var n = (e.props, t.vchildren), a = t.childNodes;
            if (n) for (var r = 0, s = n.length; r < s; r++) o(n[r], a[r]);
            j(e.refs, e.ref, t), t.eventStore = t.vchildren = null;
        }
        function p(e, n, a) {
            var r = L(e, n), s = t(r, n, a);
            return s.cache = s.cache || {}, s.cache[e.uid] = r, s;
        }
        function f(e, t, n, a) {
            var r = e.uid, s = n.cache[r];
            delete n.cache[r];
            var i = L(t, a), o = S(s, i, n, a);
            return o.cache = o.cache || {}, o.cache[t.uid] = i, o !== n && E(o.cache, n.cache, o), 
            o;
        }
        function M(e, t) {
            var n = e.uid, a = t.cache[n];
            delete t.cache[n], o(a, t);
        }
        function L(t, n) {
            var a = t.type, r = t.props, s = g(n, a.contextTypes), i = a(r, s);
            if (i && i.render && (i = i.render()), null === i || i === !1) i = e(Re); else if (!i || !i.vtype) throw new Error("@" + a.name + "#render:You may have returned undefined, an array or some other invalid object");
            return i;
        }
        function y(e, n, a) {
            var r = e.type, s = e.props, i = e.uid, o = g(n, r.contextTypes), d = new r(s, o), u = d.$updater, _ = d.$cache;
            _.parentContext = n, u.isPending = !0, d.props = d.props || s, d.context = d.context || o, 
            d.componentWillMount && (d.componentWillMount(), d.state = u.getState());
            var l = k(d), m = t(l, D(d, n), a);
            return m.cache = m.cache || {}, m.cache[i] = d, _.vnode = l, _.node = m, _.isMounted = !0, 
            re(Ze, d), null != e.ref && (re(Ke, e), re(Ke, d)), m;
        }
        function Y(e, t, n, a) {
            var r = e.uid, s = n.cache[r], i = s.$updater, o = s.$cache, d = t.type, u = t.props, _ = g(a, d.contextTypes);
            if (delete n.cache[r], n.cache[t.uid] = s, o.parentContext = a, s.componentWillReceiveProps) {
                var l = !i.isPending;
                l && (i.isPending = !0), s.componentWillReceiveProps(u, _), l && (i.isPending = !1);
            }
            return e.ref !== t.ref && (j(e.refs, e.ref, s), x(t.refs, t.ref, s)), i.emitUpdate(u, _), 
            o.node;
        }
        function v(e, t) {
            var n = e.uid, a = t.cache[n], r = a.$cache;
            delete t.cache[n], j(e.refs, e.ref, a), a.setState = a.forceUpdate = te, a.componentWillUnmount && a.componentWillUnmount(), 
            o(r.vnode, t), delete a.setState, r.isMounted = !1, r.node = r.parentContext = r.vnode = a.refs = a.context = null;
        }
        function g(e, t) {
            var n = {};
            if (!t || !e) return n;
            for (var a in t) t.hasOwnProperty(a) && (n[a] = e[a]);
            return n;
        }
        function k(t, n) {
            Be = t.refs;
            var a = t.render();
            if (null === a || a === !1) a = e(Re); else if (!a || !a.vtype) throw new Error("@" + t.constructor.name + "#render:You may have returned undefined, an array or some other invalid object");
            return Be = null, a;
        }
        function D(e, t) {
            if (e.getChildContext) {
                var n = e.getChildContext();
                n && (t = ie(ie({}, t), n));
            }
            return t;
        }
        function T() {
            var e = Ze.length;
            if (e) {
                var t = Ze;
                Ze = [];
                for (var n = -1; e--; ) {
                    var a = t[++n], r = a.$updater;
                    a.componentDidMount && a.componentDidMount(), r.isPending = !1, r.emitUpdate();
                }
            }
        }
        function w() {
            var e = Ke.length;
            if (e) {
                var t = Ke;
                Ke = [];
                for (var n = 0; n < e; n += 2) {
                    var a = t[n], r = t[n + 1];
                    x(a.refs, a.ref, r);
                }
            }
        }
        function b() {
            w(), T();
        }
        function S(e, a, r, s) {
            var i = r;
            return null == a ? (o(e, r), r.parentNode.removeChild(r)) : e.type !== a.type || e.key !== a.key ? (o(e, r), 
            i = t(a, s, r.namespaceURI), r.parentNode.replaceChild(i, r)) : (e !== a || s) && (i = n(e, a, r, s)), 
            i;
        }
        function H() {
            return this;
        }
        function x(e, t, n) {
            null != t && n && (n.nodeName && !n.getDOMNode && (n.getDOMNode = H), ee(t) ? t(n) : e && (e[t] = n));
        }
        function j(e, t, n) {
            null != t && (ee(t) ? t(null) : e && e[t] === n && delete e[t]);
        }
        function E(e, t, n) {
            for (var a in t) if (t.hasOwnProperty(a)) {
                var r = t[a];
                e[a] = r, r.forceUpdate && (r.$cache.node = n);
            }
        }
        function P(e) {
            var t = e.vchildren, n = e.children;
            if (t) for (var a = 0; a < t.length; a++) {
                var r = t[a];
                if ((r.vtype === Ge || r.vtype === Ie) && r.type.contextTypes) return !1;
            }
            if (n) for (var a = 0; a < n.length; a++) if (!P(n[a])) return !1;
            return !0;
        }
        function A(e) {
            this.instance = e, this.pendingStates = [], this.pendingCallbacks = [], this.isPending = !1, 
            this.nextProps = this.nextContext = null, this.clearCallbacks = this.clearCallbacks.bind(this);
        }
        function W(e, t) {
            this.$updater = new A(this), this.$cache = {
                isMounted: !1
            }, this.props = e, this.state = {}, this.refs = {}, this.context = t;
        }
        function F(e, t, n, a, r) {
            var s = !0;
            if (e.shouldComponentUpdate && (s = e.shouldComponentUpdate(t, n, a)), s === !1) return e.props = t, 
            e.state = n, void (e.context = a || {});
            var i = e.$cache;
            i.props = t, i.state = n, i.context = a || {}, e.forceUpdate(r);
        }
        function C(e) {
            return "onDoubleClick" === e ? e = "ondblclick" : "onTouchTap" === e && (e = "onclick"), 
            e.toLowerCase();
        }
        function O(e, t, n) {
            t = C(t);
            var a = e.eventStore || (e.eventStore = {});
            if (a[t] = n, 1 === et[t]) return void (e[t] = J);
            if (rt[t] || (document.addEventListener(t.substr(2), N, !1), rt[t] = !0), tt && t === at) return void e.addEventListener("click", nt, !1);
            e.nodeName;
            "onchange" === t && I(e) && O(e, "oninput", n);
        }
        function z(e, t) {
            t = C(t);
            var n = e.eventStore || (e.eventStore = {});
            if (delete n[t], 1 === et[t]) return void (e[t] = null);
            if (tt && t === at) return void e.removeEventListener("click", nt, !1);
            e.nodeName;
            "onchange" === t && I(e) && delete n.oninput;
        }
        function N(e) {
            var t = e.target, n = e.type, a = "on" + n, r = void 0;
            for (Xe.isPending = !0; t; ) {
                var s = t, i = s.eventStore, o = i && i[a];
                if (o) {
                    if (r || (r = U(e)), r.currentTarget = t, o.call(t, r), r.$cancelBubble) break;
                    t = t.parentNode;
                } else t = t.parentNode;
            }
            Xe.isPending = !1, Xe.batchUpdate();
        }
        function J(e) {
            var t = e.currentTarget || e.target, n = "on" + e.type, a = U(e);
            a.currentTarget = t, Xe.isPending = !0;
            var r = t.eventStore, s = r && r[n];
            s && s.call(t, a), Xe.isPending = !1, Xe.batchUpdate();
        }
        function U(e) {
            var t = {}, n = function() {
                return t.$cancelBubble = !0;
            };
            t.nativeEvent = e, t.persist = te;
            for (var a in e) "function" != typeof e[a] ? t[a] = e[a] : "stopPropagation" === a || "stopImmediatePropagation" === a ? t[a] = n : t[a] = e[a].bind(e);
            return t;
        }
        function I(e) {
            var t = e.nodeName && e.nodeName.toLowerCase();
            return "select" !== t && !("input" === t && "file" === e.type);
        }
        function G(e, t) {
            for (var n in t) t.hasOwnProperty(n) && q(e, n, t[n]);
        }
        function R(e, t) {
            for (var n in t) t.hasOwnProperty(n) && (e[n] = "");
        }
        function V(e, t, n) {
            if (t !== n) {
                if (!n && t) return void R(e, t);
                if (n && !t) return void G(e, n);
                for (var a in t) n.hasOwnProperty(a) ? n[a] !== t[a] && q(e, a, n[a]) : e[a] = "";
                for (var a in n) t.hasOwnProperty(a) || q(e, a, n[a]);
            }
        }
        function $(e, t) {
            return e + t.charAt(0).toUpperCase() + t.substring(1);
        }
        function q(e, t, n) {
            return !st[t] && ot.test(n) ? void (e[t] = n + "px") : ("float" === t && (t = "cssFloat"), 
            null != n && "boolean" != typeof n || (n = ""), void (e[t] = n));
        }
        function B(e) {
            var t = e.props, n = e.attrNS, a = e.domAttrs, r = e.domProps;
            for (var s in t) if (t.hasOwnProperty(s)) {
                var i = t[s];
                mt[s] = {
                    attributeName: a.hasOwnProperty(s) ? a[s] : s.toLowerCase(),
                    propertyName: r.hasOwnProperty(s) ? r[s] : s,
                    attributeNamespace: n.hasOwnProperty(s) ? n[s] : null,
                    mustUseProperty: Z(i, ct),
                    hasBooleanValue: Z(i, ht),
                    hasNumericValue: Z(i, pt),
                    hasPositiveNumericValue: Z(i, ft),
                    hasOverloadedBooleanValue: Z(i, Mt)
                };
            }
        }
        function Z(e, t) {
            return (e & t) === t;
        }
        function K(e, t, n) {
            var a = mt.hasOwnProperty(t) && mt[t];
            if (a) if (null == n || a.hasBooleanValue && !n || a.hasNumericValue && isNaN(n) || a.hasPositiveNumericValue && n < 1 || a.hasOverloadedBooleanValue && n === !1) X(e, t); else if (a.mustUseProperty) e[a.propertyName] = n; else {
                var r = a.attributeName, s = a.attributeNamespace;
                s ? e.setAttributeNS(s, r, "" + n) : a.hasBooleanValue || a.hasOverloadedBooleanValue && n === !0 ? e.setAttribute(r, "") : e.setAttribute(r, "" + n);
            } else lt(t) && _t.test(t) && (null == n ? e.removeAttribute(t) : e.setAttribute(t, "" + n));
        }
        function X(e, t) {
            var n = mt.hasOwnProperty(t) && mt[t];
            if (n) if (n.mustUseProperty) {
                var a = n.propertyName;
                n.hasBooleanValue ? e[a] = !1 : e[a] = "";
            } else e.removeAttribute(n.attributeName); else lt(t) && e.removeAttribute(t);
        }
        function Q(e, t, n) {
            var a, r, s = e.options;
            if (t) {
                if (e.multiple = !0, !Array.isArray(n)) throw new Error("The value prop supplied to <select> must be an array if `multiple` is true");
                for (a = {}, r = 0; r < n.length; r++) a["" + n[r]] = !0;
                for (r = 0; r < s.length; r++) {
                    var i = a.hasOwnProperty(s[r].value);
                    s[r].selected !== i && (s[r].selected = i);
                }
            } else {
                if (e.multiple = !1, Array.isArray(n)) throw new Error("The value prop supplied to <select> must be a scalar value if `multiple` is false.");
                for (a = "" + n, r = 0; r < s.length; r++) {
                    var o = s[r];
                    o.value === a ? o.selected || (o.selected = !0) : o.selected && (o.selected = !1);
                }
                s.selectedIndex < 0 && s.length && (s[0].selected = !0);
            }
        }
        function ee(e) {
            return "function" == typeof e;
        }
        function te() {}
        function ne(e) {
            return e;
        }
        function ae(e, t) {
            return function() {
                return e.apply(this, arguments), t.apply(this, arguments);
            };
        }
        function re(e, t) {
            e[e.length] = t;
        }
        function se(e, t, n) {
            for (var a = e.length, r = -1; a--; ) {
                var s = e[++r];
                kt(s) ? se(s, t, n) : t(s, n);
            }
        }
        function ie(e, t) {
            if (!t) return e;
            for (var n = Object.keys(t), a = n.length; a--; ) e[n[a]] = t[n[a]];
            return e;
        }
        function oe() {
            return ++Dt;
        }
        function de(e, t, n, a) {
            Tt.test(t) ? O(e, t, n) : "style" === t ? G(e.style, n) : t === ze ? n && null != n.__html && (e.innerHTML = n.__html) : a ? null == n ? e.removeAttribute(t) : e.setAttribute(t, "" + n) : K(e, t, n);
        }
        function ue(e, t, n, a) {
            Tt.test(t) ? z(e, t) : "style" === t ? R(e.style, n) : t === ze ? e.innerHTML = "" : a ? e.removeAttribute(t) : X(e, t);
        }
        function _e(e, t, n, a, r) {
            if ("value" !== t && "checked" !== t || (a = e[t]), n !== a) return void 0 === n ? void ue(e, t, a, r) : void ("style" === t ? V(e.style, a, n) : de(e, t, n, r));
        }
        function le(e, t, n) {
            var a = "SELECT" === e.nodeName;
            for (var r in t) "children" !== r && (!a || "value" !== r && "defaultValue" !== r ? de(e, r, t[r], n) : Q(e, t.multiple, t[r]));
        }
        function me(e, t, n, a) {
            var r = "SELECT" === e.nodeName;
            for (var s in t) "children" !== s && (n.hasOwnProperty(s) ? !r || "value" !== s && "defaultValue" !== s ? _e(e, s, n[s], t[s], a) : Q(e, n.multiple, n[s]) : ue(e, s, t[s], a));
            for (var s in n) "children" === s || t.hasOwnProperty(s) || (!r || "value" !== s && "defaultValue" !== s ? de(e, s, n[s], a) : Q(e, n.multiple, n[s]));
        }
        function ce(e) {
            return !(!e || e.nodeType !== Ve && e.nodeType !== $e && e.nodeType !== qe);
        }
        function he(e, n, a, r) {
            if (!e.vtype) throw new Error("cannot render " + e + " to container");
            if (!ce(n)) throw new Error("container " + n + " is not a DOM element");
            var s = n[Je] || (n[Je] = oe()), i = wt[s];
            if (i) return void (i === !0 ? wt[s] = i = {
                vnode: e,
                callback: a,
                parentContext: r
            } : (i.vnode = e, i.parentContext = r, i.callback = i.callback ? ae(i.callback, a) : a));
            wt[s] = !0;
            var o = null, d = null;
            if (o = bt[s]) d = S(o, e, n.firstChild, r); else {
                d = t(e, r, n.namespaceURI);
                for (var u = null; u = n.lastChild; ) n.removeChild(u);
                n.appendChild(d);
            }
            bt[s] = e;
            var _ = Xe.isPending;
            Xe.isPending = !0, b(), i = wt[s], delete wt[s];
            var l = null;
            return "object" == typeof i ? l = he(i.vnode, n, i.callback, i.parentContext) : e.vtype === Ue ? l = d : e.vtype === Ge && (l = d.cache[e.uid]), 
            _ || (Xe.isPending = !1, Xe.batchUpdate()), a && a.call(l), l;
        }
        function pe(e, t, n) {
            return he(e, t, n);
        }
        function fe(e, t, n, a) {
            var r = e.$cache.parentContext;
            return he(t, n, a, r);
        }
        function Me(e) {
            if (!e.nodeName) throw new Error("expect node");
            var t = e[Je], n = null;
            return !!(n = bt[t]) && (o(n, e.firstChild), e.removeChild(e.firstChild), delete bt[t], 
            !0);
        }
        function Le(e) {
            if (null == e) return null;
            if (e.nodeName) return e;
            var t = e;
            if (t.getDOMNode && t.$cache.isMounted) return t.getDOMNode();
            throw new Error("findDOMNode can not find Node");
        }
        function ye(t, n, a) {
            var r = null;
            if ("string" == typeof t) r = Ue; else {
                if ("function" != typeof t) throw new Error("React.createElement: unexpect type [ " + t + " ]");
                r = t.prototype && t.prototype.isReactComponent ? Ge : Ie;
            }
            var s = null, i = null, o = {};
            if (null != n) for (var d in n) n.hasOwnProperty(d) && ("key" === d ? void 0 !== n.key && (s = "" + n.key) : "ref" === d ? void 0 !== n.ref && (i = n.ref) : o[d] = n[d]);
            var u = t.defaultProps;
            if (u) for (var d in u) void 0 === o[d] && (o[d] = u[d]);
            var _ = arguments.length, l = a;
            if (_ > 3) {
                l = Array(_ - 2);
                for (var m = 2; m < _; m++) l[m - 2] = arguments[m];
            }
            return void 0 !== l && (o.children = l), e(r, t, o, s, i);
        }
        function Ye(e) {
            return null != e && !!e.vtype;
        }
        function ve(e, t) {
            for (var n = e.type, a = e.key, r = e.ref, s = ie(ie({
                key: a,
                ref: r
            }, e.props), t), i = arguments.length, o = Array(i > 2 ? i - 2 : 0), d = 2; d < i; d++) o[d - 2] = arguments[d];
            var u = ye.apply(void 0, [ n, s ].concat(o));
            return u.ref === e.ref && (u.refs = e.refs), u;
        }
        function ge(e) {
            var t = function() {
                for (var t = arguments.length, n = Array(t), a = 0; a < t; a++) n[a] = arguments[a];
                return ye.apply(void 0, [ e ].concat(n));
            };
            return t.type = e, t;
        }
        function ke(e) {
            if (Ye(e)) return e;
            throw new Error("expect only one child");
        }
        function De(e, t, n) {
            if (null == e) return e;
            var a = 0;
            if (kt(e)) se(e, function(e) {
                var r = typeof e;
                "undefined" !== r && "boolean" !== r || (e = null), t.call(n, e, a++);
            }); else {
                var r = typeof e;
                "undefined" !== r && "boolean" !== r || (e = null), t.call(n, e, a);
            }
        }
        function Te(e, t, n) {
            if (null == e) return e;
            var a = [], r = {};
            De(e, function(e, s) {
                var i = {};
                i.child = t.call(n, e, s) || e, i.isEqual = i.child === e;
                var o = i.key = Se(e, s);
                r.hasOwnProperty(o) ? r[o] += 1 : r[o] = 0, i.index = r[o], re(a, i);
            });
            var s = [];
            return a.forEach(function(e) {
                var t = e.child, n = e.key, a = e.index, i = e.isEqual;
                if (null != t && "boolean" != typeof t) {
                    if (!Ye(t) || null == n) return void re(s, t);
                    0 !== r[n] && (n += ":" + a), i || (n = He(t.key || "") + "/" + n), t = ve(t, {
                        key: n
                    }), re(s, t);
                }
            }), s;
        }
        function we(e) {
            var t = 0;
            return De(e, function() {
                t++;
            }), t;
        }
        function be(e) {
            return Te(e, ne) || [];
        }
        function Se(e, t) {
            var n = void 0;
            return n = Ye(e) && "string" == typeof e.key ? ".$" + e.key : "." + t.toString(36);
        }
        function He(e) {
            return ("" + e).replace(Pt, "//");
        }
        function xe(e, t) {
            e.forEach(function(e) {
                e && (kt(e.mixins) && xe(e.mixins, t), t(e));
            });
        }
        function je(e, t) {
            for (var n in t) if (t.hasOwnProperty(n)) {
                var a = t[n];
                if ("getInitialState" !== n) {
                    var r = e[n];
                    ee(r) && ee(a) ? e[n] = ae(r, a) : e[n] = a;
                } else re(e.$getInitialStates, a);
            }
        }
        function Ee(e, t) {
            t.propTypes && (e.propTypes = e.propTypes || {}, ie(e.propTypes, t.propTypes)), 
            t.contextTypes && (e.contextTypes = e.contextTypes || {}, ie(e.contextTypes, t.contextTypes)), 
            ie(e, t.statics), ee(t.getDefaultProps) && (e.defaultProps = e.defaultProps || {}, 
            ie(e.defaultProps, t.getDefaultProps()));
        }
        function Pe(e, t) {
            for (var n in t) t.hasOwnProperty(n) && ee(t[n]) && (e[n] = t[n].bind(e));
        }
        function Ae() {
            var e = this, t = {}, n = this.setState;
            return this.setState = Wt, this.$getInitialStates.forEach(function(n) {
                ee(n) && ie(t, n.call(e));
            }), this.setState = n, t;
        }
        function We(e) {
            function t(n, a) {
                W.call(this, n, a), this.constructor = t, e.autobind !== !1 && Pe(this, t.prototype), 
                this.state = this.getInitialState() || this.state;
            }
            if (!ee(e.render)) throw new Error("createClass: spec.render is not function");
            var n = e.mixins || [], a = n.concat(e);
            e.mixins = null, t.displayName = e.displayName;
            var r = t.prototype = new Wt();
            return r.$getInitialStates = [], xe(a, function(e) {
                je(r, e), Ee(t, e);
            }), r.getInitialState = Ae, e.mixins = n, t;
        }
        function Fe(e, t) {
            if (e === t) return !0;
            if ("object" != typeof e || null === e || "object" != typeof t || null === t) return !1;
            var n = Object.keys(e), a = Object.keys(t);
            if (n.length !== a.length) return !1;
            for (var r = 0; r < n.length; r++) if (!t.hasOwnProperty(n[r]) || e[n[r]] !== t[n[r]]) return !1;
            return !0;
        }
        function Ce(e, t) {
            W.call(this, e, t);
        }
        function Oe(e, t) {
            return !Fe(this.props, e) || !Fe(this.state, t);
        }
        var ze = "dangerouslySetInnerHTML", Ne = "http://www.w3.org/2000/svg", Je = "liteid", Ue = 2, Ie = 3, Ge = 4, Re = 5, Ve = 1, $e = 9, qe = 11, Be = null, Ze = [], Ke = [], Xe = {
            updaters: [],
            isPending: !1,
            add: function(e) {
                re(this.updaters, e);
            },
            batchUpdate: function() {
                if (!this.isPending) {
                    this.isPending = !0;
                    for (var e = this.updaters, t = void 0; t = e.pop(); ) t.updateComponent();
                    this.isPending = !1;
                }
            }
        };
        A.prototype = {
            emitUpdate: function(e, t) {
                this.nextProps = e, this.nextContext = t, e || !Xe.isPending ? this.updateComponent() : Xe.add(this);
            },
            updateComponent: function() {
                var e = this.instance, t = this.pendingStates, n = this.nextProps, a = this.nextContext;
                (n || t.length > 0) && (n = n || e.props, a = a || e.context, this.nextProps = this.nextContext = null, 
                F(e, n, this.getState(), a, this.clearCallbacks));
            },
            addState: function(e) {
                e && (re(this.pendingStates, e), this.isPending || this.emitUpdate());
            },
            replaceState: function(e) {
                var t = this.pendingStates;
                t.pop(), re(t, [ e ]);
            },
            getState: function() {
                var e = this.instance, t = this.pendingStates, n = e.state, a = e.props;
                return t.length && (n = ie({}, n), t.forEach(function(t) {
                    var r = kt(t);
                    r && (t = t[0]), ee(t) && (t = t.call(e, n, a)), r ? n = ie({}, t) : ie(n, t);
                }), t.length = 0), n;
            },
            clearCallbacks: function() {
                var e = this.pendingCallbacks, t = this.instance;
                e.length > 0 && (this.pendingCallbacks = [], e.forEach(function(e) {
                    return e.call(t);
                }));
            },
            addCallback: function(e) {
                ee(e) && re(this.pendingCallbacks, e);
            }
        };
        var Qe = {};
        W.prototype = {
            constructor: W,
            isReactComponent: Qe,
            forceUpdate: function(e) {
                var t = this.$updater, n = this.$cache, a = this.props, r = this.state, s = this.context;
                if (n.isMounted) {
                    if (t.isPending) return void t.addState(r);
                    var i = n.props || a, o = n.state || r, d = n.context || s, u = n.parentContext, _ = n.node, l = n.vnode;
                    n.props = n.state = n.context = null, t.isPending = !0, this.componentWillUpdate && this.componentWillUpdate(i, o, d), 
                    this.state = o, this.props = i, this.context = d;
                    var m = k(this), c = S(l, m, _, D(this, u));
                    c !== _ && (c.cache = c.cache || {}, E(c.cache, _.cache, c)), n.vnode = m, n.node = c, 
                    b(), this.componentDidUpdate && this.componentDidUpdate(a, r, s), e && e.call(this), 
                    t.isPending = !1, t.emitUpdate();
                }
            },
            setState: function(e, t) {
                var n = this.$updater;
                n.addCallback(t), n.addState(e);
            },
            replaceState: function(e, t) {
                var n = this.$updater;
                n.addCallback(t), n.replaceState(e);
            },
            getDOMNode: function() {
                var e = this.$cache.node;
                return e && "#comment" === e.nodeName ? null : e;
            },
            isMounted: function() {
                return this.$cache.isMounted;
            }
        };
        var et = {
            onmousemove: 1,
            ontouchmove: 1,
            onmouseleave: 1,
            onmouseenter: 1,
            onload: 1,
            onunload: 1,
            onscroll: 1,
            onfocus: 1,
            onblur: 1,
            onrowexit: 1,
            onbeforeunload: 1,
            onstop: 1,
            ondragdrop: 1,
            ondragenter: 1,
            ondragexit: 1,
            ondraggesture: 1,
            ondragover: 1,
            oncontextmenu: 1,
            onerror: 1,
            onabort: 1,
            oncanplay: 1,
            oncanplaythrough: 1,
            ondurationchange: 1,
            onemptied: 1,
            onended: 1,
            onloadeddata: 1,
            onloadedmetadata: 1,
            onloadstart: 1,
            onencrypted: 1,
            onpause: 1,
            onplay: 1,
            onplaying: 1,
            onprogress: 1,
            onratechange: 1,
            onseeking: 1,
            onseeked: 1,
            onstalled: 1,
            onsuspend: 1,
            ontimeupdate: 1,
            onvolumechange: 1,
            onwaiting: 1
        }, tt = "ontouchstart" in document, nt = function() {}, at = "onclick", rt = {}, st = {
            animationIterationCount: 1,
            borderImageOutset: 1,
            borderImageSlice: 1,
            borderImageWidth: 1,
            boxFlex: 1,
            boxFlexGroup: 1,
            boxOrdinalGroup: 1,
            columnCount: 1,
            flex: 1,
            flexGrow: 1,
            flexPositive: 1,
            flexShrink: 1,
            flexNegative: 1,
            flexOrder: 1,
            gridRow: 1,
            gridColumn: 1,
            fontWeight: 1,
            lineClamp: 1,
            lineHeight: 1,
            opacity: 1,
            order: 1,
            orphans: 1,
            tabSize: 1,
            widows: 1,
            zIndex: 1,
            zoom: 1,
            fillOpacity: 1,
            floodOpacity: 1,
            stopOpacity: 1,
            strokeDasharray: 1,
            strokeDashoffset: 1,
            strokeMiterlimit: 1,
            strokeOpacity: 1,
            strokeWidth: 1
        }, it = [ "Webkit", "ms", "Moz", "O" ];
        Object.keys(st).forEach(function(e) {
            it.forEach(function(t) {
                st[$(t, e)] = 1;
            });
        });
        var ot = /^-?\d+(\.\d+)?$/, dt = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", ut = dt + "\\-.0-9\\uB7\\u0300-\\u036F\\u203F-\\u2040", _t = new RegExp("^[" + dt + "][" + ut + "]*$"), lt = RegExp.prototype.test.bind(new RegExp("^(data|aria)-[" + ut + "]*$")), mt = {}, ct = 1, ht = 4, pt = 8, ft = 24, Mt = 32, Lt = {
            props: {
                accept: 0,
                acceptCharset: 0,
                accessKey: 0,
                action: 0,
                allowFullScreen: ht,
                allowTransparency: 0,
                alt: 0,
                async: ht,
                autoComplete: 0,
                autoFocus: ht,
                autoPlay: ht,
                capture: ht,
                cellPadding: 0,
                cellSpacing: 0,
                charSet: 0,
                challenge: 0,
                checked: ct | ht,
                cite: 0,
                classID: 0,
                className: 0,
                cols: ft,
                colSpan: 0,
                content: 0,
                contentEditable: 0,
                contextMenu: 0,
                controls: ht,
                coords: 0,
                crossOrigin: 0,
                data: 0,
                dateTime: 0,
                default: ht,
                defaultValue: ct,
                defaultChecked: ct | ht,
                defer: ht,
                dir: 0,
                disabled: ht,
                download: Mt,
                draggable: 0,
                encType: 0,
                form: 0,
                formAction: 0,
                formEncType: 0,
                formMethod: 0,
                formNoValidate: ht,
                formTarget: 0,
                frameBorder: 0,
                headers: 0,
                height: 0,
                hidden: ht,
                high: 0,
                href: 0,
                hrefLang: 0,
                htmlFor: 0,
                httpEquiv: 0,
                icon: 0,
                id: 0,
                inputMode: 0,
                integrity: 0,
                is: 0,
                keyParams: 0,
                keyType: 0,
                kind: 0,
                label: 0,
                lang: 0,
                list: 0,
                loop: ht,
                low: 0,
                manifest: 0,
                marginHeight: 0,
                marginWidth: 0,
                max: 0,
                maxLength: 0,
                media: 0,
                mediaGroup: 0,
                method: 0,
                min: 0,
                minLength: 0,
                multiple: ct | ht,
                muted: ct | ht,
                name: 0,
                nonce: 0,
                noValidate: ht,
                open: ht,
                optimum: 0,
                pattern: 0,
                placeholder: 0,
                poster: 0,
                preload: 0,
                profile: 0,
                radioGroup: 0,
                readOnly: ht,
                referrerPolicy: 0,
                rel: 0,
                required: ht,
                reversed: ht,
                role: 0,
                rows: ft,
                rowSpan: pt,
                sandbox: 0,
                scope: 0,
                scoped: ht,
                scrolling: 0,
                seamless: ht,
                selected: ct | ht,
                shape: 0,
                size: ft,
                sizes: 0,
                span: ft,
                spellCheck: 0,
                src: 0,
                srcDoc: 0,
                srcLang: 0,
                srcSet: 0,
                start: pt,
                step: 0,
                style: 0,
                summary: 0,
                tabIndex: 0,
                target: 0,
                title: 0,
                type: 0,
                useMap: 0,
                value: ct,
                width: 0,
                wmode: 0,
                wrap: 0,
                about: 0,
                datatype: 0,
                inlist: 0,
                prefix: 0,
                property: 0,
                playsInline: ht,
                resource: 0,
                typeof: 0,
                vocab: 0,
                autoCapitalize: 0,
                autoCorrect: 0,
                autoSave: 0,
                color: 0,
                itemProp: 0,
                itemScope: ht,
                itemType: 0,
                itemID: 0,
                itemRef: 0,
                results: 0,
                security: 0,
                unselectable: 0
            },
            attrNS: {},
            domAttrs: {
                acceptCharset: "accept-charset",
                className: "class",
                htmlFor: "for",
                httpEquiv: "http-equiv"
            },
            domProps: {}
        }, yt = "http://www.w3.org/1999/xlink", Yt = "http://www.w3.org/XML/1998/namespace", vt = {
            accentHeight: "accent-height",
            accumulate: 0,
            additive: 0,
            alignmentBaseline: "alignment-baseline",
            allowReorder: "allowReorder",
            alphabetic: 0,
            amplitude: 0,
            arabicForm: "arabic-form",
            ascent: 0,
            attributeName: "attributeName",
            attributeType: "attributeType",
            autoReverse: "autoReverse",
            azimuth: 0,
            baseFrequency: "baseFrequency",
            baseProfile: "baseProfile",
            baselineShift: "baseline-shift",
            bbox: 0,
            begin: 0,
            bias: 0,
            by: 0,
            calcMode: "calcMode",
            capHeight: "cap-height",
            clip: 0,
            clipPath: "clip-path",
            clipRule: "clip-rule",
            clipPathUnits: "clipPathUnits",
            colorInterpolation: "color-interpolation",
            colorInterpolationFilters: "color-interpolation-filters",
            colorProfile: "color-profile",
            colorRendering: "color-rendering",
            contentScriptType: "contentScriptType",
            contentStyleType: "contentStyleType",
            cursor: 0,
            cx: 0,
            cy: 0,
            d: 0,
            decelerate: 0,
            descent: 0,
            diffuseConstant: "diffuseConstant",
            direction: 0,
            display: 0,
            divisor: 0,
            dominantBaseline: "dominant-baseline",
            dur: 0,
            dx: 0,
            dy: 0,
            edgeMode: "edgeMode",
            elevation: 0,
            enableBackground: "enable-background",
            end: 0,
            exponent: 0,
            externalResourcesRequired: "externalResourcesRequired",
            fill: 0,
            fillOpacity: "fill-opacity",
            fillRule: "fill-rule",
            filter: 0,
            filterRes: "filterRes",
            filterUnits: "filterUnits",
            floodColor: "flood-color",
            floodOpacity: "flood-opacity",
            focusable: 0,
            fontFamily: "font-family",
            fontSize: "font-size",
            fontSizeAdjust: "font-size-adjust",
            fontStretch: "font-stretch",
            fontStyle: "font-style",
            fontVariant: "font-variant",
            fontWeight: "font-weight",
            format: 0,
            from: 0,
            fx: 0,
            fy: 0,
            g1: 0,
            g2: 0,
            glyphName: "glyph-name",
            glyphOrientationHorizontal: "glyph-orientation-horizontal",
            glyphOrientationVertical: "glyph-orientation-vertical",
            glyphRef: "glyphRef",
            gradientTransform: "gradientTransform",
            gradientUnits: "gradientUnits",
            hanging: 0,
            horizAdvX: "horiz-adv-x",
            horizOriginX: "horiz-origin-x",
            ideographic: 0,
            imageRendering: "image-rendering",
            in: 0,
            in2: 0,
            intercept: 0,
            k: 0,
            k1: 0,
            k2: 0,
            k3: 0,
            k4: 0,
            kernelMatrix: "kernelMatrix",
            kernelUnitLength: "kernelUnitLength",
            kerning: 0,
            keyPoints: "keyPoints",
            keySplines: "keySplines",
            keyTimes: "keyTimes",
            lengthAdjust: "lengthAdjust",
            letterSpacing: "letter-spacing",
            lightingColor: "lighting-color",
            limitingConeAngle: "limitingConeAngle",
            local: 0,
            markerEnd: "marker-end",
            markerMid: "marker-mid",
            markerStart: "marker-start",
            markerHeight: "markerHeight",
            markerUnits: "markerUnits",
            markerWidth: "markerWidth",
            mask: 0,
            maskContentUnits: "maskContentUnits",
            maskUnits: "maskUnits",
            mathematical: 0,
            mode: 0,
            numOctaves: "numOctaves",
            offset: 0,
            opacity: 0,
            operator: 0,
            order: 0,
            orient: 0,
            orientation: 0,
            origin: 0,
            overflow: 0,
            overlinePosition: "overline-position",
            overlineThickness: "overline-thickness",
            paintOrder: "paint-order",
            panose1: "panose-1",
            pathLength: "pathLength",
            patternContentUnits: "patternContentUnits",
            patternTransform: "patternTransform",
            patternUnits: "patternUnits",
            pointerEvents: "pointer-events",
            points: 0,
            pointsAtX: "pointsAtX",
            pointsAtY: "pointsAtY",
            pointsAtZ: "pointsAtZ",
            preserveAlpha: "preserveAlpha",
            preserveAspectRatio: "preserveAspectRatio",
            primitiveUnits: "primitiveUnits",
            r: 0,
            radius: 0,
            refX: "refX",
            refY: "refY",
            renderingIntent: "rendering-intent",
            repeatCount: "repeatCount",
            repeatDur: "repeatDur",
            requiredExtensions: "requiredExtensions",
            requiredFeatures: "requiredFeatures",
            restart: 0,
            result: 0,
            rotate: 0,
            rx: 0,
            ry: 0,
            scale: 0,
            seed: 0,
            shapeRendering: "shape-rendering",
            slope: 0,
            spacing: 0,
            specularConstant: "specularConstant",
            specularExponent: "specularExponent",
            speed: 0,
            spreadMethod: "spreadMethod",
            startOffset: "startOffset",
            stdDeviation: "stdDeviation",
            stemh: 0,
            stemv: 0,
            stitchTiles: "stitchTiles",
            stopColor: "stop-color",
            stopOpacity: "stop-opacity",
            strikethroughPosition: "strikethrough-position",
            strikethroughThickness: "strikethrough-thickness",
            string: 0,
            stroke: 0,
            strokeDasharray: "stroke-dasharray",
            strokeDashoffset: "stroke-dashoffset",
            strokeLinecap: "stroke-linecap",
            strokeLinejoin: "stroke-linejoin",
            strokeMiterlimit: "stroke-miterlimit",
            strokeOpacity: "stroke-opacity",
            strokeWidth: "stroke-width",
            surfaceScale: "surfaceScale",
            systemLanguage: "systemLanguage",
            tableValues: "tableValues",
            targetX: "targetX",
            targetY: "targetY",
            textAnchor: "text-anchor",
            textDecoration: "text-decoration",
            textRendering: "text-rendering",
            textLength: "textLength",
            to: 0,
            transform: 0,
            u1: 0,
            u2: 0,
            underlinePosition: "underline-position",
            underlineThickness: "underline-thickness",
            unicode: 0,
            unicodeBidi: "unicode-bidi",
            unicodeRange: "unicode-range",
            unitsPerEm: "units-per-em",
            vAlphabetic: "v-alphabetic",
            vHanging: "v-hanging",
            vIdeographic: "v-ideographic",
            vMathematical: "v-mathematical",
            values: 0,
            vectorEffect: "vector-effect",
            version: 0,
            vertAdvY: "vert-adv-y",
            vertOriginX: "vert-origin-x",
            vertOriginY: "vert-origin-y",
            viewBox: "viewBox",
            viewTarget: "viewTarget",
            visibility: 0,
            widths: 0,
            wordSpacing: "word-spacing",
            writingMode: "writing-mode",
            x: 0,
            xHeight: "x-height",
            x1: 0,
            x2: 0,
            xChannelSelector: "xChannelSelector",
            xlinkActuate: "xlink:actuate",
            xlinkArcrole: "xlink:arcrole",
            xlinkHref: "xlink:href",
            xlinkRole: "xlink:role",
            xlinkShow: "xlink:show",
            xlinkTitle: "xlink:title",
            xlinkType: "xlink:type",
            xmlBase: "xml:base",
            xmlns: 0,
            xmlnsXlink: "xmlns:xlink",
            xmlLang: "xml:lang",
            xmlSpace: "xml:space",
            y: 0,
            y1: 0,
            y2: 0,
            yChannelSelector: "yChannelSelector",
            z: 0,
            zoomAndPan: "zoomAndPan"
        }, gt = {
            props: {},
            attrNS: {
                xlinkActuate: yt,
                xlinkArcrole: yt,
                xlinkHref: yt,
                xlinkRole: yt,
                xlinkShow: yt,
                xlinkTitle: yt,
                xlinkType: yt,
                xmlBase: Yt,
                xmlLang: Yt,
                xmlSpace: Yt
            },
            domAttrs: {},
            domProps: {}
        };
        Object.keys(vt).map(function(e) {
            gt.props[e] = 0, vt[e] && (gt.domAttrs[e] = vt[e]);
        }), B(Lt), B(gt);
        var kt = Array.isArray, Dt = 0, Tt = /^on/i;
        Object.freeze || (Object.freeze = ne);
        var wt = {}, bt = {}, St = Object.freeze({
            render: pe,
            unstable_renderSubtreeIntoContainer: fe,
            unmountComponentAtNode: Me,
            findDOMNode: Le
        }), Ht = "a|abbr|address|area|article|aside|audio|b|base|bdi|bdo|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|data|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|main|map|mark|menu|menuitem|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|source|span|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|track|u|ul|var|video|wbr|circle|clipPath|defs|ellipse|g|image|line|linearGradient|mask|path|pattern|polygon|polyline|radialGradient|rect|stop|svg|text|tspan", xt = {};
        Ht.split("|").forEach(function(e) {
            xt[e] = ge(e);
        });
        var jt = function e() {
            return e;
        };
        jt.isRequired = jt;
        var Et = {
            array: jt,
            bool: jt,
            func: jt,
            number: jt,
            object: jt,
            string: jt,
            any: jt,
            arrayOf: jt,
            element: jt,
            instanceOf: jt,
            node: jt,
            objectOf: jt,
            oneOf: jt,
            oneOfType: jt,
            shape: jt
        }, Pt = /\/(?!\/)/g, At = Object.freeze({
            only: ke,
            forEach: De,
            map: Te,
            count: we,
            toArray: be
        }), Wt = function() {};
        Wt.prototype = W.prototype, Ce.prototype = Object.create(W.prototype), Ce.prototype.constructor = Ce, 
        Ce.prototype.isPureReactComponent = !0, Ce.prototype.shouldComponentUpdate = Oe;
        var Ft = ie({
            version: "0.15.1",
            cloneElement: ve,
            isValidElement: Ye,
            createElement: ye,
            createFactory: ge,
            Component: W,
            PureComponent: Ce,
            createClass: We,
            Children: At,
            PropTypes: Et,
            DOM: xt
        }, St);
        return Ft.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = St, Ft;
    });
}, function(e, t, n) {
    "use strict";
    var a = n(6), r = a.gettext, s = n(9), i = {}, o = "org.fedoraproject.Setroubleshootd", d = "org.fedoraproject.SetroubleshootdIface", u = "/org/fedoraproject/Setroubleshootd", _ = "org.fedoraproject.SetroubleshootFixit", l = _, m = "/org/fedoraproject/SetroubleshootFixit/object";
    i.init = function(e) {
        function t(e, t, n) {
            if (i.alertCallback && "alert" == t) {
                var a = n[0], r = n[1];
                i.alertCallback(a, r);
            }
        }
        i.connected = !1;
        var n = a.dbus(o);
        i.proxy = n.proxy(d, u), i.proxyFixit = a.dbus(_).proxy(l, m);
        var c = a.defer();
        i.proxy.wait(function() {
            i.proxy.call("start", []).done(function() {
                i.connected = !0, c.resolve();
            }).fail(function(e) {
                c.reject(new Error(r("Unable to start setroubleshootd")));
            });
        }), i.alertCallback = null, i.handleAlert = function(e) {
            i.alertCallback || i.proxy.addEventListener("signal", t), i.alertCallback = e;
        }, i.getAlerts = function(e) {
            var t, n = a.defer();
            return t = void 0 !== e ? i.proxy.call("get_all_alerts_since", [ e ]) : i.proxy.call("get_all_alerts", []), 
            t.done(function(e) {
                n.resolve(e[0].map(function(e) {
                    return {
                        localId: e[0],
                        summary: e[1],
                        reportCount: e[2]
                    };
                }));
            }).fail(function(e) {
                n.reject(e);
            }), n.promise();
        }, i.getAlert = function(e) {
            var t = a.defer();
            return i.proxy.call("get_alert", [ e ]).done(function(e) {
                var n = {
                    localId: e[0],
                    summary: e[1],
                    reportCount: e[2],
                    auditEvent: e[3],
                    pluginAnalysis: e[4]
                };
                e.length >= 8 && ("number" == typeof e[5] && (e[5] /= 1e3, e[6] /= 1e3), n.firstSeen = s(e[5]), 
                n.lastSeen = s(e[6]), n.level = e[7]), n.pluginAnalysis = n.pluginAnalysis.map(function(e) {
                    return {
                        ifText: e[0],
                        thenText: e[1],
                        doText: e[2],
                        analysisId: e[3],
                        fixable: e[4],
                        reportBug: e[5]
                    };
                }), t.resolve(n);
            }).fail(function(n) {
                console.warn("Unable to get alert for id " + e), console.warn(n), t.reject(new Error(a.format(r("Unable to get alert: $0"), e)));
            }), t.promise();
        }, i.runFix = function(e, t) {
            var n = a.defer();
            return i.proxyFixit.call("run_fix", [ e, t ]).done(function(e) {
                n.resolve(e[0]);
            }).fail(function(e) {
                n.reject(new Error(a.format(r("Unable to run fix: %0"), +e)));
            }), n.promise();
        };
        var h = function(e) {
            var t = a.defer();
            return i.proxy.call("delete_alert", [ e ]).done(function(n) {
                n ? t.resolve() : t.reject(new Error(a.format(r("Failed to delete alert: $0"), e)));
            }).fail(function(n) {
                console.warn("Unable to delete alert with id " + e), console.warn(n), t.reject(new Error(a.format(r("Error while deleting alert: $0"), e)));
            }), t.promise();
        };
        return i.capabilities = {}, n.addEventListener("meta", function(t, n) {
            d in n && "methods" in n[d] && "delete_alert" in n[d].methods ? i.capabilities.deleteAlert = h : delete i.capabilities.deleteAlert, 
            e && e(i.capabilities);
        }), c.promise();
    }, e.exports = i;
}, function(e, t, n) {
    (function(e) {
        //! moment.js
        //! version : 2.10.6
        //! authors : Tim Wood, Iskren Chernev, Moment.js contributors
        //! license : MIT
        //! momentjs.com
        !function(t, n) {
            e.exports = n();
        }(this, function() {
            "use strict";
            function t() {
                return Fn.apply(null, arguments);
            }
            function a(e) {
                Fn = e;
            }
            function r(e) {
                return "[object Array]" === Object.prototype.toString.call(e);
            }
            function s(e) {
                return e instanceof Date || "[object Date]" === Object.prototype.toString.call(e);
            }
            function i(e, t) {
                var n, a = [];
                for (n = 0; n < e.length; ++n) a.push(t(e[n], n));
                return a;
            }
            function o(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t);
            }
            function d(e, t) {
                for (var n in t) o(t, n) && (e[n] = t[n]);
                return o(t, "toString") && (e.toString = t.toString), o(t, "valueOf") && (e.valueOf = t.valueOf), 
                e;
            }
            function u(e, t, n, a) {
                return xe(e, t, n, a, !0).utc();
            }
            function _() {
                return {
                    empty: !1,
                    unusedTokens: [],
                    unusedInput: [],
                    overflow: -2,
                    charsLeftOver: 0,
                    nullInput: !1,
                    invalidMonth: null,
                    invalidFormat: !1,
                    userInvalidated: !1,
                    iso: !1
                };
            }
            function l(e) {
                return null == e._pf && (e._pf = _()), e._pf;
            }
            function m(e) {
                if (null == e._isValid) {
                    var t = l(e);
                    e._isValid = !(isNaN(e._d.getTime()) || !(t.overflow < 0) || t.empty || t.invalidMonth || t.invalidWeekday || t.nullInput || t.invalidFormat || t.userInvalidated), 
                    e._strict && (e._isValid = e._isValid && 0 === t.charsLeftOver && 0 === t.unusedTokens.length && void 0 === t.bigHour);
                }
                return e._isValid;
            }
            function c(e) {
                var t = u(NaN);
                return null != e ? d(l(t), e) : l(t).userInvalidated = !0, t;
            }
            function h(e, t) {
                var n, a, r;
                if ("undefined" != typeof t._isAMomentObject && (e._isAMomentObject = t._isAMomentObject), 
                "undefined" != typeof t._i && (e._i = t._i), "undefined" != typeof t._f && (e._f = t._f), 
                "undefined" != typeof t._l && (e._l = t._l), "undefined" != typeof t._strict && (e._strict = t._strict), 
                "undefined" != typeof t._tzm && (e._tzm = t._tzm), "undefined" != typeof t._isUTC && (e._isUTC = t._isUTC), 
                "undefined" != typeof t._offset && (e._offset = t._offset), "undefined" != typeof t._pf && (e._pf = l(t)), 
                "undefined" != typeof t._locale && (e._locale = t._locale), On.length > 0) for (n in On) a = On[n], 
                r = t[a], "undefined" != typeof r && (e[a] = r);
                return e;
            }
            function p(e) {
                h(this, e), this._d = new Date(null != e._d ? e._d.getTime() : NaN), zn === !1 && (zn = !0, 
                t.updateOffset(this), zn = !1);
            }
            function f(e) {
                return e instanceof p || null != e && null != e._isAMomentObject;
            }
            function M(e) {
                return e < 0 ? Math.ceil(e) : Math.floor(e);
            }
            function L(e) {
                var t = +e, n = 0;
                return 0 !== t && isFinite(t) && (n = M(t)), n;
            }
            function y(e, t, n) {
                var a, r = Math.min(e.length, t.length), s = Math.abs(e.length - t.length), i = 0;
                for (a = 0; a < r; a++) (n && e[a] !== t[a] || !n && L(e[a]) !== L(t[a])) && i++;
                return i + s;
            }
            function Y() {}
            function v(e) {
                return e ? e.toLowerCase().replace("_", "-") : e;
            }
            function g(e) {
                for (var t, n, a, r, s = 0; s < e.length; ) {
                    for (r = v(e[s]).split("-"), t = r.length, n = v(e[s + 1]), n = n ? n.split("-") : null; t > 0; ) {
                        if (a = k(r.slice(0, t).join("-"))) return a;
                        if (n && n.length >= t && y(r, n, !0) >= t - 1) break;
                        t--;
                    }
                    s++;
                }
                return null;
            }
            function k(t) {
                var a = null;
                if (!Nn[t] && "undefined" != typeof e && e && e.exports) try {
                    a = Cn._abbr, n(11)("./" + t), D(a);
                } catch (e) {}
                return Nn[t];
            }
            function D(e, t) {
                var n;
                return e && (n = "undefined" == typeof t ? w(e) : T(e, t), n && (Cn = n)), Cn._abbr;
            }
            function T(e, t) {
                return null !== t ? (t.abbr = e, Nn[e] = Nn[e] || new Y(), Nn[e].set(t), D(e), Nn[e]) : (delete Nn[e], 
                null);
            }
            function w(e) {
                var t;
                if (e && e._locale && e._locale._abbr && (e = e._locale._abbr), !e) return Cn;
                if (!r(e)) {
                    if (t = k(e)) return t;
                    e = [ e ];
                }
                return g(e);
            }
            function b(e, t) {
                var n = e.toLowerCase();
                Jn[n] = Jn[n + "s"] = Jn[t] = e;
            }
            function S(e) {
                return "string" == typeof e ? Jn[e] || Jn[e.toLowerCase()] : void 0;
            }
            function H(e) {
                var t, n, a = {};
                for (n in e) o(e, n) && (t = S(n), t && (a[t] = e[n]));
                return a;
            }
            function x(e, n) {
                return function(a) {
                    return null != a ? (E(this, e, a), t.updateOffset(this, n), this) : j(this, e);
                };
            }
            function j(e, t) {
                return e._d["get" + (e._isUTC ? "UTC" : "") + t]();
            }
            function E(e, t, n) {
                return e._d["set" + (e._isUTC ? "UTC" : "") + t](n);
            }
            function P(e, t) {
                var n;
                if ("object" == typeof e) for (n in e) this.set(n, e[n]); else if (e = S(e), "function" == typeof this[e]) return this[e](t);
                return this;
            }
            function A(e, t, n) {
                var a = "" + Math.abs(e), r = t - a.length, s = e >= 0;
                return (s ? n ? "+" : "" : "-") + Math.pow(10, Math.max(0, r)).toString().substr(1) + a;
            }
            function W(e, t, n, a) {
                var r = a;
                "string" == typeof a && (r = function() {
                    return this[a]();
                }), e && (Rn[e] = r), t && (Rn[t[0]] = function() {
                    return A(r.apply(this, arguments), t[1], t[2]);
                }), n && (Rn[n] = function() {
                    return this.localeData().ordinal(r.apply(this, arguments), e);
                });
            }
            function F(e) {
                return e.match(/\[[\s\S]/) ? e.replace(/^\[|\]$/g, "") : e.replace(/\\/g, "");
            }
            function C(e) {
                var t, n, a = e.match(Un);
                for (t = 0, n = a.length; t < n; t++) Rn[a[t]] ? a[t] = Rn[a[t]] : a[t] = F(a[t]);
                return function(r) {
                    var s = "";
                    for (t = 0; t < n; t++) s += a[t] instanceof Function ? a[t].call(r, e) : a[t];
                    return s;
                };
            }
            function O(e, t) {
                return e.isValid() ? (t = z(t, e.localeData()), Gn[t] = Gn[t] || C(t), Gn[t](e)) : e.localeData().invalidDate();
            }
            function z(e, t) {
                function n(e) {
                    return t.longDateFormat(e) || e;
                }
                var a = 5;
                for (In.lastIndex = 0; a >= 0 && In.test(e); ) e = e.replace(In, n), In.lastIndex = 0, 
                a -= 1;
                return e;
            }
            function N(e) {
                return "function" == typeof e && "[object Function]" === Object.prototype.toString.call(e);
            }
            function J(e, t, n) {
                ia[e] = N(t) ? t : function(e) {
                    return e && n ? n : t;
                };
            }
            function U(e, t) {
                return o(ia, e) ? ia[e](t._strict, t._locale) : new RegExp(I(e));
            }
            function I(e) {
                return e.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(e, t, n, a, r) {
                    return t || n || a || r;
                }).replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
            }
            function G(e, t) {
                var n, a = t;
                for ("string" == typeof e && (e = [ e ]), "number" == typeof t && (a = function(e, n) {
                    n[t] = L(e);
                }), n = 0; n < e.length; n++) oa[e[n]] = a;
            }
            function R(e, t) {
                G(e, function(e, n, a, r) {
                    a._w = a._w || {}, t(e, a._w, a, r);
                });
            }
            function V(e, t, n) {
                null != t && o(oa, e) && oa[e](t, n._a, n, e);
            }
            function $(e, t) {
                return new Date(Date.UTC(e, t + 1, 0)).getUTCDate();
            }
            function q(e) {
                return this._months[e.month()];
            }
            function B(e) {
                return this._monthsShort[e.month()];
            }
            function Z(e, t, n) {
                var a, r, s;
                for (this._monthsParse || (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = []), 
                a = 0; a < 12; a++) {
                    if (r = u([ 2e3, a ]), n && !this._longMonthsParse[a] && (this._longMonthsParse[a] = new RegExp("^" + this.months(r, "").replace(".", "") + "$", "i"), 
                    this._shortMonthsParse[a] = new RegExp("^" + this.monthsShort(r, "").replace(".", "") + "$", "i")), 
                    n || this._monthsParse[a] || (s = "^" + this.months(r, "") + "|^" + this.monthsShort(r, ""), 
                    this._monthsParse[a] = new RegExp(s.replace(".", ""), "i")), n && "MMMM" === t && this._longMonthsParse[a].test(e)) return a;
                    if (n && "MMM" === t && this._shortMonthsParse[a].test(e)) return a;
                    if (!n && this._monthsParse[a].test(e)) return a;
                }
            }
            function K(e, t) {
                var n;
                return "string" == typeof t && (t = e.localeData().monthsParse(t), "number" != typeof t) ? e : (n = Math.min(e.date(), $(e.year(), t)), 
                e._d["set" + (e._isUTC ? "UTC" : "") + "Month"](t, n), e);
            }
            function X(e) {
                return null != e ? (K(this, e), t.updateOffset(this, !0), this) : j(this, "Month");
            }
            function Q() {
                return $(this.year(), this.month());
            }
            function ee(e) {
                var t, n = e._a;
                return n && l(e).overflow === -2 && (t = n[ua] < 0 || n[ua] > 11 ? ua : n[_a] < 1 || n[_a] > $(n[da], n[ua]) ? _a : n[la] < 0 || n[la] > 24 || 24 === n[la] && (0 !== n[ma] || 0 !== n[ca] || 0 !== n[ha]) ? la : n[ma] < 0 || n[ma] > 59 ? ma : n[ca] < 0 || n[ca] > 59 ? ca : n[ha] < 0 || n[ha] > 999 ? ha : -1, 
                l(e)._overflowDayOfYear && (t < da || t > _a) && (t = _a), l(e).overflow = t), e;
            }
            function te(e) {
                t.suppressDeprecationWarnings === !1 && "undefined" != typeof console && console.warn && console.warn("Deprecation warning: " + e);
            }
            function ne(e, t) {
                var n = !0;
                return d(function() {
                    return n && (te(e + "\n" + new Error().stack), n = !1), t.apply(this, arguments);
                }, t);
            }
            function ae(e, t) {
                Ma[e] || (te(t), Ma[e] = !0);
            }
            function re(e) {
                var t, n, a = e._i, r = La.exec(a);
                if (r) {
                    for (l(e).iso = !0, t = 0, n = ya.length; t < n; t++) if (ya[t][1].exec(a)) {
                        e._f = ya[t][0];
                        break;
                    }
                    for (t = 0, n = Ya.length; t < n; t++) if (Ya[t][1].exec(a)) {
                        e._f += (r[6] || " ") + Ya[t][0];
                        break;
                    }
                    a.match(aa) && (e._f += "Z"), ke(e);
                } else e._isValid = !1;
            }
            function se(e) {
                var n = va.exec(e._i);
                return null !== n ? void (e._d = new Date(+n[1])) : (re(e), void (e._isValid === !1 && (delete e._isValid, 
                t.createFromInputFallback(e))));
            }
            function ie(e, t, n, a, r, s, i) {
                var o = new Date(e, t, n, a, r, s, i);
                return e < 1970 && o.setFullYear(e), o;
            }
            function oe(e) {
                var t = new Date(Date.UTC.apply(null, arguments));
                return e < 1970 && t.setUTCFullYear(e), t;
            }
            function de(e) {
                return ue(e) ? 366 : 365;
            }
            function ue(e) {
                return e % 4 === 0 && e % 100 !== 0 || e % 400 === 0;
            }
            function _e() {
                return ue(this.year());
            }
            function le(e, t, n) {
                var a, r = n - t, s = n - e.day();
                return s > r && (s -= 7), s < r - 7 && (s += 7), a = je(e).add(s, "d"), {
                    week: Math.ceil(a.dayOfYear() / 7),
                    year: a.year()
                };
            }
            function me(e) {
                return le(e, this._week.dow, this._week.doy).week;
            }
            function ce() {
                return this._week.dow;
            }
            function he() {
                return this._week.doy;
            }
            function pe(e) {
                var t = this.localeData().week(this);
                return null == e ? t : this.add(7 * (e - t), "d");
            }
            function fe(e) {
                var t = le(this, 1, 4).week;
                return null == e ? t : this.add(7 * (e - t), "d");
            }
            function Me(e, t, n, a, r) {
                var s, i = 6 + r - a, o = oe(e, 0, 1 + i), d = o.getUTCDay();
                return d < r && (d += 7), n = null != n ? 1 * n : r, s = 1 + i + 7 * (t - 1) - d + n, 
                {
                    year: s > 0 ? e : e - 1,
                    dayOfYear: s > 0 ? s : de(e - 1) + s
                };
            }
            function Le(e) {
                var t = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
                return null == e ? t : this.add(e - t, "d");
            }
            function ye(e, t, n) {
                return null != e ? e : null != t ? t : n;
            }
            function Ye(e) {
                var t = new Date();
                return e._useUTC ? [ t.getUTCFullYear(), t.getUTCMonth(), t.getUTCDate() ] : [ t.getFullYear(), t.getMonth(), t.getDate() ];
            }
            function ve(e) {
                var t, n, a, r, s = [];
                if (!e._d) {
                    for (a = Ye(e), e._w && null == e._a[_a] && null == e._a[ua] && ge(e), e._dayOfYear && (r = ye(e._a[da], a[da]), 
                    e._dayOfYear > de(r) && (l(e)._overflowDayOfYear = !0), n = oe(r, 0, e._dayOfYear), 
                    e._a[ua] = n.getUTCMonth(), e._a[_a] = n.getUTCDate()), t = 0; t < 3 && null == e._a[t]; ++t) e._a[t] = s[t] = a[t];
                    for (;t < 7; t++) e._a[t] = s[t] = null == e._a[t] ? 2 === t ? 1 : 0 : e._a[t];
                    24 === e._a[la] && 0 === e._a[ma] && 0 === e._a[ca] && 0 === e._a[ha] && (e._nextDay = !0, 
                    e._a[la] = 0), e._d = (e._useUTC ? oe : ie).apply(null, s), null != e._tzm && e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm), 
                    e._nextDay && (e._a[la] = 24);
                }
            }
            function ge(e) {
                var t, n, a, r, s, i, o;
                t = e._w, null != t.GG || null != t.W || null != t.E ? (s = 1, i = 4, n = ye(t.GG, e._a[da], le(je(), 1, 4).year), 
                a = ye(t.W, 1), r = ye(t.E, 1)) : (s = e._locale._week.dow, i = e._locale._week.doy, 
                n = ye(t.gg, e._a[da], le(je(), s, i).year), a = ye(t.w, 1), null != t.d ? (r = t.d, 
                r < s && ++a) : r = null != t.e ? t.e + s : s), o = Me(n, a, r, i, s), e._a[da] = o.year, 
                e._dayOfYear = o.dayOfYear;
            }
            function ke(e) {
                if (e._f === t.ISO_8601) return void re(e);
                e._a = [], l(e).empty = !0;
                var n, a, r, s, i, o = "" + e._i, d = o.length, u = 0;
                for (r = z(e._f, e._locale).match(Un) || [], n = 0; n < r.length; n++) s = r[n], 
                a = (o.match(U(s, e)) || [])[0], a && (i = o.substr(0, o.indexOf(a)), i.length > 0 && l(e).unusedInput.push(i), 
                o = o.slice(o.indexOf(a) + a.length), u += a.length), Rn[s] ? (a ? l(e).empty = !1 : l(e).unusedTokens.push(s), 
                V(s, a, e)) : e._strict && !a && l(e).unusedTokens.push(s);
                l(e).charsLeftOver = d - u, o.length > 0 && l(e).unusedInput.push(o), l(e).bigHour === !0 && e._a[la] <= 12 && e._a[la] > 0 && (l(e).bigHour = void 0), 
                e._a[la] = De(e._locale, e._a[la], e._meridiem), ve(e), ee(e);
            }
            function De(e, t, n) {
                var a;
                return null == n ? t : null != e.meridiemHour ? e.meridiemHour(t, n) : null != e.isPM ? (a = e.isPM(n), 
                a && t < 12 && (t += 12), a || 12 !== t || (t = 0), t) : t;
            }
            function Te(e) {
                var t, n, a, r, s;
                if (0 === e._f.length) return l(e).invalidFormat = !0, void (e._d = new Date(NaN));
                for (r = 0; r < e._f.length; r++) s = 0, t = h({}, e), null != e._useUTC && (t._useUTC = e._useUTC), 
                t._f = e._f[r], ke(t), m(t) && (s += l(t).charsLeftOver, s += 10 * l(t).unusedTokens.length, 
                l(t).score = s, (null == a || s < a) && (a = s, n = t));
                d(e, n || t);
            }
            function we(e) {
                if (!e._d) {
                    var t = H(e._i);
                    e._a = [ t.year, t.month, t.day || t.date, t.hour, t.minute, t.second, t.millisecond ], 
                    ve(e);
                }
            }
            function be(e) {
                var t = new p(ee(Se(e)));
                return t._nextDay && (t.add(1, "d"), t._nextDay = void 0), t;
            }
            function Se(e) {
                var t = e._i, n = e._f;
                return e._locale = e._locale || w(e._l), null === t || void 0 === n && "" === t ? c({
                    nullInput: !0
                }) : ("string" == typeof t && (e._i = t = e._locale.preparse(t)), f(t) ? new p(ee(t)) : (r(n) ? Te(e) : n ? ke(e) : s(t) ? e._d = t : He(e), 
                e));
            }
            function He(e) {
                var n = e._i;
                void 0 === n ? e._d = new Date() : s(n) ? e._d = new Date(+n) : "string" == typeof n ? se(e) : r(n) ? (e._a = i(n.slice(0), function(e) {
                    return parseInt(e, 10);
                }), ve(e)) : "object" == typeof n ? we(e) : "number" == typeof n ? e._d = new Date(n) : t.createFromInputFallback(e);
            }
            function xe(e, t, n, a, r) {
                var s = {};
                return "boolean" == typeof n && (a = n, n = void 0), s._isAMomentObject = !0, s._useUTC = s._isUTC = r, 
                s._l = n, s._i = e, s._f = t, s._strict = a, be(s);
            }
            function je(e, t, n, a) {
                return xe(e, t, n, a, !1);
            }
            function Ee(e, t) {
                var n, a;
                if (1 === t.length && r(t[0]) && (t = t[0]), !t.length) return je();
                for (n = t[0], a = 1; a < t.length; ++a) t[a].isValid() && !t[a][e](n) || (n = t[a]);
                return n;
            }
            function Pe() {
                var e = [].slice.call(arguments, 0);
                return Ee("isBefore", e);
            }
            function Ae() {
                var e = [].slice.call(arguments, 0);
                return Ee("isAfter", e);
            }
            function We(e) {
                var t = H(e), n = t.year || 0, a = t.quarter || 0, r = t.month || 0, s = t.week || 0, i = t.day || 0, o = t.hour || 0, d = t.minute || 0, u = t.second || 0, _ = t.millisecond || 0;
                this._milliseconds = +_ + 1e3 * u + 6e4 * d + 36e5 * o, this._days = +i + 7 * s, 
                this._months = +r + 3 * a + 12 * n, this._data = {}, this._locale = w(), this._bubble();
            }
            function Fe(e) {
                return e instanceof We;
            }
            function Ce(e, t) {
                W(e, 0, 0, function() {
                    var e = this.utcOffset(), n = "+";
                    return e < 0 && (e = -e, n = "-"), n + A(~~(e / 60), 2) + t + A(~~e % 60, 2);
                });
            }
            function Oe(e) {
                var t = (e || "").match(aa) || [], n = t[t.length - 1] || [], a = (n + "").match(wa) || [ "-", 0, 0 ], r = +(60 * a[1]) + L(a[2]);
                return "+" === a[0] ? r : -r;
            }
            function ze(e, n) {
                var a, r;
                return n._isUTC ? (a = n.clone(), r = (f(e) || s(e) ? +e : +je(e)) - +a, a._d.setTime(+a._d + r), 
                t.updateOffset(a, !1), a) : je(e).local();
            }
            function Ne(e) {
                return 15 * -Math.round(e._d.getTimezoneOffset() / 15);
            }
            function Je(e, n) {
                var a, r = this._offset || 0;
                return null != e ? ("string" == typeof e && (e = Oe(e)), Math.abs(e) < 16 && (e *= 60), 
                !this._isUTC && n && (a = Ne(this)), this._offset = e, this._isUTC = !0, null != a && this.add(a, "m"), 
                r !== e && (!n || this._changeInProgress ? at(this, Xe(e - r, "m"), 1, !1) : this._changeInProgress || (this._changeInProgress = !0, 
                t.updateOffset(this, !0), this._changeInProgress = null)), this) : this._isUTC ? r : Ne(this);
            }
            function Ue(e, t) {
                return null != e ? ("string" != typeof e && (e = -e), this.utcOffset(e, t), this) : -this.utcOffset();
            }
            function Ie(e) {
                return this.utcOffset(0, e);
            }
            function Ge(e) {
                return this._isUTC && (this.utcOffset(0, e), this._isUTC = !1, e && this.subtract(Ne(this), "m")), 
                this;
            }
            function Re() {
                return this._tzm ? this.utcOffset(this._tzm) : "string" == typeof this._i && this.utcOffset(Oe(this._i)), 
                this;
            }
            function Ve(e) {
                return e = e ? je(e).utcOffset() : 0, (this.utcOffset() - e) % 60 === 0;
            }
            function $e() {
                return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
            }
            function qe() {
                if ("undefined" != typeof this._isDSTShifted) return this._isDSTShifted;
                var e = {};
                if (h(e, this), e = Se(e), e._a) {
                    var t = e._isUTC ? u(e._a) : je(e._a);
                    this._isDSTShifted = this.isValid() && y(e._a, t.toArray()) > 0;
                } else this._isDSTShifted = !1;
                return this._isDSTShifted;
            }
            function Be() {
                return !this._isUTC;
            }
            function Ze() {
                return this._isUTC;
            }
            function Ke() {
                return this._isUTC && 0 === this._offset;
            }
            function Xe(e, t) {
                var n, a, r, s = e, i = null;
                return Fe(e) ? s = {
                    ms: e._milliseconds,
                    d: e._days,
                    M: e._months
                } : "number" == typeof e ? (s = {}, t ? s[t] = e : s.milliseconds = e) : (i = ba.exec(e)) ? (n = "-" === i[1] ? -1 : 1, 
                s = {
                    y: 0,
                    d: L(i[_a]) * n,
                    h: L(i[la]) * n,
                    m: L(i[ma]) * n,
                    s: L(i[ca]) * n,
                    ms: L(i[ha]) * n
                }) : (i = Sa.exec(e)) ? (n = "-" === i[1] ? -1 : 1, s = {
                    y: Qe(i[2], n),
                    M: Qe(i[3], n),
                    d: Qe(i[4], n),
                    h: Qe(i[5], n),
                    m: Qe(i[6], n),
                    s: Qe(i[7], n),
                    w: Qe(i[8], n)
                }) : null == s ? s = {} : "object" == typeof s && ("from" in s || "to" in s) && (r = tt(je(s.from), je(s.to)), 
                s = {}, s.ms = r.milliseconds, s.M = r.months), a = new We(s), Fe(e) && o(e, "_locale") && (a._locale = e._locale), 
                a;
            }
            function Qe(e, t) {
                var n = e && parseFloat(e.replace(",", "."));
                return (isNaN(n) ? 0 : n) * t;
            }
            function et(e, t) {
                var n = {
                    milliseconds: 0,
                    months: 0
                };
                return n.months = t.month() - e.month() + 12 * (t.year() - e.year()), e.clone().add(n.months, "M").isAfter(t) && --n.months, 
                n.milliseconds = +t - +e.clone().add(n.months, "M"), n;
            }
            function tt(e, t) {
                var n;
                return t = ze(t, e), e.isBefore(t) ? n = et(e, t) : (n = et(t, e), n.milliseconds = -n.milliseconds, 
                n.months = -n.months), n;
            }
            function nt(e, t) {
                return function(n, a) {
                    var r, s;
                    return null === a || isNaN(+a) || (ae(t, "moment()." + t + "(period, number) is deprecated. Please use moment()." + t + "(number, period)."), 
                    s = n, n = a, a = s), n = "string" == typeof n ? +n : n, r = Xe(n, a), at(this, r, e), 
                    this;
                };
            }
            function at(e, n, a, r) {
                var s = n._milliseconds, i = n._days, o = n._months;
                r = null == r || r, s && e._d.setTime(+e._d + s * a), i && E(e, "Date", j(e, "Date") + i * a), 
                o && K(e, j(e, "Month") + o * a), r && t.updateOffset(e, i || o);
            }
            function rt(e, t) {
                var n = e || je(), a = ze(n, this).startOf("day"), r = this.diff(a, "days", !0), s = r < -6 ? "sameElse" : r < -1 ? "lastWeek" : r < 0 ? "lastDay" : r < 1 ? "sameDay" : r < 2 ? "nextDay" : r < 7 ? "nextWeek" : "sameElse";
                return this.format(t && t[s] || this.localeData().calendar(s, this, je(n)));
            }
            function st() {
                return new p(this);
            }
            function it(e, t) {
                var n;
                return t = S("undefined" != typeof t ? t : "millisecond"), "millisecond" === t ? (e = f(e) ? e : je(e), 
                +this > +e) : (n = f(e) ? +e : +je(e), n < +this.clone().startOf(t));
            }
            function ot(e, t) {
                var n;
                return t = S("undefined" != typeof t ? t : "millisecond"), "millisecond" === t ? (e = f(e) ? e : je(e), 
                +this < +e) : (n = f(e) ? +e : +je(e), +this.clone().endOf(t) < n);
            }
            function dt(e, t, n) {
                return this.isAfter(e, n) && this.isBefore(t, n);
            }
            function ut(e, t) {
                var n;
                return t = S(t || "millisecond"), "millisecond" === t ? (e = f(e) ? e : je(e), +this === +e) : (n = +je(e), 
                +this.clone().startOf(t) <= n && n <= +this.clone().endOf(t));
            }
            function _t(e, t, n) {
                var a, r, s = ze(e, this), i = 6e4 * (s.utcOffset() - this.utcOffset());
                return t = S(t), "year" === t || "month" === t || "quarter" === t ? (r = lt(this, s), 
                "quarter" === t ? r /= 3 : "year" === t && (r /= 12)) : (a = this - s, r = "second" === t ? a / 1e3 : "minute" === t ? a / 6e4 : "hour" === t ? a / 36e5 : "day" === t ? (a - i) / 864e5 : "week" === t ? (a - i) / 6048e5 : a), 
                n ? r : M(r);
            }
            function lt(e, t) {
                var n, a, r = 12 * (t.year() - e.year()) + (t.month() - e.month()), s = e.clone().add(r, "months");
                return t - s < 0 ? (n = e.clone().add(r - 1, "months"), a = (t - s) / (s - n)) : (n = e.clone().add(r + 1, "months"), 
                a = (t - s) / (n - s)), -(r + a);
            }
            function mt() {
                return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
            }
            function ct() {
                var e = this.clone().utc();
                return 0 < e.year() && e.year() <= 9999 ? "function" == typeof Date.prototype.toISOString ? this.toDate().toISOString() : O(e, "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]") : O(e, "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]");
            }
            function ht(e) {
                var n = O(this, e || t.defaultFormat);
                return this.localeData().postformat(n);
            }
            function pt(e, t) {
                return this.isValid() ? Xe({
                    to: this,
                    from: e
                }).locale(this.locale()).humanize(!t) : this.localeData().invalidDate();
            }
            function ft(e) {
                return this.from(je(), e);
            }
            function Mt(e, t) {
                return this.isValid() ? Xe({
                    from: this,
                    to: e
                }).locale(this.locale()).humanize(!t) : this.localeData().invalidDate();
            }
            function Lt(e) {
                return this.to(je(), e);
            }
            function yt(e) {
                var t;
                return void 0 === e ? this._locale._abbr : (t = w(e), null != t && (this._locale = t), 
                this);
            }
            function Yt() {
                return this._locale;
            }
            function vt(e) {
                switch (e = S(e)) {
                  case "year":
                    this.month(0);

                  case "quarter":
                  case "month":
                    this.date(1);

                  case "week":
                  case "isoWeek":
                  case "day":
                    this.hours(0);

                  case "hour":
                    this.minutes(0);

                  case "minute":
                    this.seconds(0);

                  case "second":
                    this.milliseconds(0);
                }
                return "week" === e && this.weekday(0), "isoWeek" === e && this.isoWeekday(1), "quarter" === e && this.month(3 * Math.floor(this.month() / 3)), 
                this;
            }
            function gt(e) {
                return e = S(e), void 0 === e || "millisecond" === e ? this : this.startOf(e).add(1, "isoWeek" === e ? "week" : e).subtract(1, "ms");
            }
            function kt() {
                return +this._d - 6e4 * (this._offset || 0);
            }
            function Dt() {
                return Math.floor(+this / 1e3);
            }
            function Tt() {
                return this._offset ? new Date(+this) : this._d;
            }
            function wt() {
                var e = this;
                return [ e.year(), e.month(), e.date(), e.hour(), e.minute(), e.second(), e.millisecond() ];
            }
            function bt() {
                var e = this;
                return {
                    years: e.year(),
                    months: e.month(),
                    date: e.date(),
                    hours: e.hours(),
                    minutes: e.minutes(),
                    seconds: e.seconds(),
                    milliseconds: e.milliseconds()
                };
            }
            function St() {
                return m(this);
            }
            function Ht() {
                return d({}, l(this));
            }
            function xt() {
                return l(this).overflow;
            }
            function jt(e, t) {
                W(0, [ e, e.length ], 0, t);
            }
            function Et(e, t, n) {
                return le(je([ e, 11, 31 + t - n ]), t, n).week;
            }
            function Pt(e) {
                var t = le(this, this.localeData()._week.dow, this.localeData()._week.doy).year;
                return null == e ? t : this.add(e - t, "y");
            }
            function At(e) {
                var t = le(this, 1, 4).year;
                return null == e ? t : this.add(e - t, "y");
            }
            function Wt() {
                return Et(this.year(), 1, 4);
            }
            function Ft() {
                var e = this.localeData()._week;
                return Et(this.year(), e.dow, e.doy);
            }
            function Ct(e) {
                return null == e ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (e - 1) + this.month() % 3);
            }
            function Ot(e, t) {
                return "string" != typeof e ? e : isNaN(e) ? (e = t.weekdaysParse(e), "number" == typeof e ? e : null) : parseInt(e, 10);
            }
            function zt(e) {
                return this._weekdays[e.day()];
            }
            function Nt(e) {
                return this._weekdaysShort[e.day()];
            }
            function Jt(e) {
                return this._weekdaysMin[e.day()];
            }
            function Ut(e) {
                var t, n, a;
                for (this._weekdaysParse = this._weekdaysParse || [], t = 0; t < 7; t++) if (this._weekdaysParse[t] || (n = je([ 2e3, 1 ]).day(t), 
                a = "^" + this.weekdays(n, "") + "|^" + this.weekdaysShort(n, "") + "|^" + this.weekdaysMin(n, ""), 
                this._weekdaysParse[t] = new RegExp(a.replace(".", ""), "i")), this._weekdaysParse[t].test(e)) return t;
            }
            function It(e) {
                var t = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
                return null != e ? (e = Ot(e, this.localeData()), this.add(e - t, "d")) : t;
            }
            function Gt(e) {
                var t = (this.day() + 7 - this.localeData()._week.dow) % 7;
                return null == e ? t : this.add(e - t, "d");
            }
            function Rt(e) {
                return null == e ? this.day() || 7 : this.day(this.day() % 7 ? e : e - 7);
            }
            function Vt(e, t) {
                W(e, 0, 0, function() {
                    return this.localeData().meridiem(this.hours(), this.minutes(), t);
                });
            }
            function $t(e, t) {
                return t._meridiemParse;
            }
            function qt(e) {
                return "p" === (e + "").toLowerCase().charAt(0);
            }
            function Bt(e, t, n) {
                return e > 11 ? n ? "pm" : "PM" : n ? "am" : "AM";
            }
            function Zt(e, t) {
                t[ha] = L(1e3 * ("0." + e));
            }
            function Kt() {
                return this._isUTC ? "UTC" : "";
            }
            function Xt() {
                return this._isUTC ? "Coordinated Universal Time" : "";
            }
            function Qt(e) {
                return je(1e3 * e);
            }
            function en() {
                return je.apply(null, arguments).parseZone();
            }
            function tn(e, t, n) {
                var a = this._calendar[e];
                return "function" == typeof a ? a.call(t, n) : a;
            }
            function nn(e) {
                var t = this._longDateFormat[e], n = this._longDateFormat[e.toUpperCase()];
                return t || !n ? t : (this._longDateFormat[e] = n.replace(/MMMM|MM|DD|dddd/g, function(e) {
                    return e.slice(1);
                }), this._longDateFormat[e]);
            }
            function an() {
                return this._invalidDate;
            }
            function rn(e) {
                return this._ordinal.replace("%d", e);
            }
            function sn(e) {
                return e;
            }
            function on(e, t, n, a) {
                var r = this._relativeTime[n];
                return "function" == typeof r ? r(e, t, n, a) : r.replace(/%d/i, e);
            }
            function dn(e, t) {
                var n = this._relativeTime[e > 0 ? "future" : "past"];
                return "function" == typeof n ? n(t) : n.replace(/%s/i, t);
            }
            function un(e) {
                var t, n;
                for (n in e) t = e[n], "function" == typeof t ? this[n] = t : this["_" + n] = t;
                this._ordinalParseLenient = new RegExp(this._ordinalParse.source + "|" + /\d{1,2}/.source);
            }
            function _n(e, t, n, a) {
                var r = w(), s = u().set(a, t);
                return r[n](s, e);
            }
            function ln(e, t, n, a, r) {
                if ("number" == typeof e && (t = e, e = void 0), e = e || "", null != t) return _n(e, t, n, r);
                var s, i = [];
                for (s = 0; s < a; s++) i[s] = _n(e, s, n, r);
                return i;
            }
            function mn(e, t) {
                return ln(e, t, "months", 12, "month");
            }
            function cn(e, t) {
                return ln(e, t, "monthsShort", 12, "month");
            }
            function hn(e, t) {
                return ln(e, t, "weekdays", 7, "day");
            }
            function pn(e, t) {
                return ln(e, t, "weekdaysShort", 7, "day");
            }
            function fn(e, t) {
                return ln(e, t, "weekdaysMin", 7, "day");
            }
            function Mn() {
                var e = this._data;
                return this._milliseconds = Ka(this._milliseconds), this._days = Ka(this._days), 
                this._months = Ka(this._months), e.milliseconds = Ka(e.milliseconds), e.seconds = Ka(e.seconds), 
                e.minutes = Ka(e.minutes), e.hours = Ka(e.hours), e.months = Ka(e.months), e.years = Ka(e.years), 
                this;
            }
            function Ln(e, t, n, a) {
                var r = Xe(t, n);
                return e._milliseconds += a * r._milliseconds, e._days += a * r._days, e._months += a * r._months, 
                e._bubble();
            }
            function yn(e, t) {
                return Ln(this, e, t, 1);
            }
            function Yn(e, t) {
                return Ln(this, e, t, -1);
            }
            function vn(e) {
                return e < 0 ? Math.floor(e) : Math.ceil(e);
            }
            function gn() {
                var e, t, n, a, r, s = this._milliseconds, i = this._days, o = this._months, d = this._data;
                return s >= 0 && i >= 0 && o >= 0 || s <= 0 && i <= 0 && o <= 0 || (s += 864e5 * vn(Dn(o) + i), 
                i = 0, o = 0), d.milliseconds = s % 1e3, e = M(s / 1e3), d.seconds = e % 60, t = M(e / 60), 
                d.minutes = t % 60, n = M(t / 60), d.hours = n % 24, i += M(n / 24), r = M(kn(i)), 
                o += r, i -= vn(Dn(r)), a = M(o / 12), o %= 12, d.days = i, d.months = o, d.years = a, 
                this;
            }
            function kn(e) {
                return 4800 * e / 146097;
            }
            function Dn(e) {
                return 146097 * e / 4800;
            }
            function Tn(e) {
                var t, n, a = this._milliseconds;
                if (e = S(e), "month" === e || "year" === e) return t = this._days + a / 864e5, 
                n = this._months + kn(t), "month" === e ? n : n / 12;
                switch (t = this._days + Math.round(Dn(this._months)), e) {
                  case "week":
                    return t / 7 + a / 6048e5;

                  case "day":
                    return t + a / 864e5;

                  case "hour":
                    return 24 * t + a / 36e5;

                  case "minute":
                    return 1440 * t + a / 6e4;

                  case "second":
                    return 86400 * t + a / 1e3;

                  case "millisecond":
                    return Math.floor(864e5 * t) + a;

                  default:
                    throw new Error("Unknown unit " + e);
                }
            }
            function wn() {
                return this._milliseconds + 864e5 * this._days + this._months % 12 * 2592e6 + 31536e6 * L(this._months / 12);
            }
            function bn(e) {
                return function() {
                    return this.as(e);
                };
            }
            function Sn(e) {
                return e = S(e), this[e + "s"]();
            }
            function Hn(e) {
                return function() {
                    return this._data[e];
                };
            }
            function xn() {
                return M(this.days() / 7);
            }
            function jn(e, t, n, a, r) {
                return r.relativeTime(t || 1, !!n, e, a);
            }
            function En(e, t, n) {
                var a = Xe(e).abs(), r = cr(a.as("s")), s = cr(a.as("m")), i = cr(a.as("h")), o = cr(a.as("d")), d = cr(a.as("M")), u = cr(a.as("y")), _ = r < hr.s && [ "s", r ] || 1 === s && [ "m" ] || s < hr.m && [ "mm", s ] || 1 === i && [ "h" ] || i < hr.h && [ "hh", i ] || 1 === o && [ "d" ] || o < hr.d && [ "dd", o ] || 1 === d && [ "M" ] || d < hr.M && [ "MM", d ] || 1 === u && [ "y" ] || [ "yy", u ];
                return _[2] = t, _[3] = +e > 0, _[4] = n, jn.apply(null, _);
            }
            function Pn(e, t) {
                return void 0 !== hr[e] && (void 0 === t ? hr[e] : (hr[e] = t, !0));
            }
            function An(e) {
                var t = this.localeData(), n = En(this, !e, t);
                return e && (n = t.pastFuture(+this, n)), t.postformat(n);
            }
            function Wn() {
                var e, t, n, a = pr(this._milliseconds) / 1e3, r = pr(this._days), s = pr(this._months);
                e = M(a / 60), t = M(e / 60), a %= 60, e %= 60, n = M(s / 12), s %= 12;
                var i = n, o = s, d = r, u = t, _ = e, l = a, m = this.asSeconds();
                return m ? (m < 0 ? "-" : "") + "P" + (i ? i + "Y" : "") + (o ? o + "M" : "") + (d ? d + "D" : "") + (u || _ || l ? "T" : "") + (u ? u + "H" : "") + (_ ? _ + "M" : "") + (l ? l + "S" : "") : "P0D";
            }
            var Fn, Cn, On = t.momentProperties = [], zn = !1, Nn = {}, Jn = {}, Un = /(\[[^\[]*\])|(\\)?(Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Q|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g, In = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, Gn = {}, Rn = {}, Vn = /\d/, $n = /\d\d/, qn = /\d{3}/, Bn = /\d{4}/, Zn = /[+-]?\d{6}/, Kn = /\d\d?/, Xn = /\d{1,3}/, Qn = /\d{1,4}/, ea = /[+-]?\d{1,6}/, ta = /\d+/, na = /[+-]?\d+/, aa = /Z|[+-]\d\d:?\d\d/gi, ra = /[+-]?\d+(\.\d{1,3})?/, sa = /[0-9]*['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFFEF]+|[\u0600-\u06FF\/]+(\s*?[\u0600-\u06FF]+){1,2}/i, ia = {}, oa = {}, da = 0, ua = 1, _a = 2, la = 3, ma = 4, ca = 5, ha = 6;
            W("M", [ "MM", 2 ], "Mo", function() {
                return this.month() + 1;
            }), W("MMM", 0, 0, function(e) {
                return this.localeData().monthsShort(this, e);
            }), W("MMMM", 0, 0, function(e) {
                return this.localeData().months(this, e);
            }), b("month", "M"), J("M", Kn), J("MM", Kn, $n), J("MMM", sa), J("MMMM", sa), G([ "M", "MM" ], function(e, t) {
                t[ua] = L(e) - 1;
            }), G([ "MMM", "MMMM" ], function(e, t, n, a) {
                var r = n._locale.monthsParse(e, a, n._strict);
                null != r ? t[ua] = r : l(n).invalidMonth = e;
            });
            var pa = "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), fa = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"), Ma = {};
            t.suppressDeprecationWarnings = !1;
            var La = /^\s*(?:[+-]\d{6}|\d{4})-(?:(\d\d-\d\d)|(W\d\d$)|(W\d\d-\d)|(\d\d\d))((T| )(\d\d(:\d\d(:\d\d(\.\d+)?)?)?)?([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/, ya = [ [ "YYYYYY-MM-DD", /[+-]\d{6}-\d{2}-\d{2}/ ], [ "YYYY-MM-DD", /\d{4}-\d{2}-\d{2}/ ], [ "GGGG-[W]WW-E", /\d{4}-W\d{2}-\d/ ], [ "GGGG-[W]WW", /\d{4}-W\d{2}/ ], [ "YYYY-DDD", /\d{4}-\d{3}/ ] ], Ya = [ [ "HH:mm:ss.SSSS", /(T| )\d\d:\d\d:\d\d\.\d+/ ], [ "HH:mm:ss", /(T| )\d\d:\d\d:\d\d/ ], [ "HH:mm", /(T| )\d\d:\d\d/ ], [ "HH", /(T| )\d\d/ ] ], va = /^\/?Date\((\-?\d+)/i;
            t.createFromInputFallback = ne("moment construction falls back to js Date. This is discouraged and will be removed in upcoming major release. Please refer to https://github.com/moment/moment/issues/1407 for more info.", function(e) {
                e._d = new Date(e._i + (e._useUTC ? " UTC" : ""));
            }), W(0, [ "YY", 2 ], 0, function() {
                return this.year() % 100;
            }), W(0, [ "YYYY", 4 ], 0, "year"), W(0, [ "YYYYY", 5 ], 0, "year"), W(0, [ "YYYYYY", 6, !0 ], 0, "year"), 
            b("year", "y"), J("Y", na), J("YY", Kn, $n), J("YYYY", Qn, Bn), J("YYYYY", ea, Zn), 
            J("YYYYYY", ea, Zn), G([ "YYYYY", "YYYYYY" ], da), G("YYYY", function(e, n) {
                n[da] = 2 === e.length ? t.parseTwoDigitYear(e) : L(e);
            }), G("YY", function(e, n) {
                n[da] = t.parseTwoDigitYear(e);
            }), t.parseTwoDigitYear = function(e) {
                return L(e) + (L(e) > 68 ? 1900 : 2e3);
            };
            var ga = x("FullYear", !1);
            W("w", [ "ww", 2 ], "wo", "week"), W("W", [ "WW", 2 ], "Wo", "isoWeek"), b("week", "w"), 
            b("isoWeek", "W"), J("w", Kn), J("ww", Kn, $n), J("W", Kn), J("WW", Kn, $n), R([ "w", "ww", "W", "WW" ], function(e, t, n, a) {
                t[a.substr(0, 1)] = L(e);
            });
            var ka = {
                dow: 0,
                doy: 6
            };
            W("DDD", [ "DDDD", 3 ], "DDDo", "dayOfYear"), b("dayOfYear", "DDD"), J("DDD", Xn), 
            J("DDDD", qn), G([ "DDD", "DDDD" ], function(e, t, n) {
                n._dayOfYear = L(e);
            }), t.ISO_8601 = function() {};
            var Da = ne("moment().min is deprecated, use moment.min instead. https://github.com/moment/moment/issues/1548", function() {
                var e = je.apply(null, arguments);
                return e < this ? this : e;
            }), Ta = ne("moment().max is deprecated, use moment.max instead. https://github.com/moment/moment/issues/1548", function() {
                var e = je.apply(null, arguments);
                return e > this ? this : e;
            });
            Ce("Z", ":"), Ce("ZZ", ""), J("Z", aa), J("ZZ", aa), G([ "Z", "ZZ" ], function(e, t, n) {
                n._useUTC = !0, n._tzm = Oe(e);
            });
            var wa = /([\+\-]|\d\d)/gi;
            t.updateOffset = function() {};
            var ba = /(\-)?(?:(\d*)\.)?(\d+)\:(\d+)(?:\:(\d+)\.?(\d{3})?)?/, Sa = /^(-)?P(?:(?:([0-9,.]*)Y)?(?:([0-9,.]*)M)?(?:([0-9,.]*)D)?(?:T(?:([0-9,.]*)H)?(?:([0-9,.]*)M)?(?:([0-9,.]*)S)?)?|([0-9,.]*)W)$/;
            Xe.fn = We.prototype;
            var Ha = nt(1, "add"), xa = nt(-1, "subtract");
            t.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ";
            var ja = ne("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function(e) {
                return void 0 === e ? this.localeData() : this.locale(e);
            });
            W(0, [ "gg", 2 ], 0, function() {
                return this.weekYear() % 100;
            }), W(0, [ "GG", 2 ], 0, function() {
                return this.isoWeekYear() % 100;
            }), jt("gggg", "weekYear"), jt("ggggg", "weekYear"), jt("GGGG", "isoWeekYear"), 
            jt("GGGGG", "isoWeekYear"), b("weekYear", "gg"), b("isoWeekYear", "GG"), J("G", na), 
            J("g", na), J("GG", Kn, $n), J("gg", Kn, $n), J("GGGG", Qn, Bn), J("gggg", Qn, Bn), 
            J("GGGGG", ea, Zn), J("ggggg", ea, Zn), R([ "gggg", "ggggg", "GGGG", "GGGGG" ], function(e, t, n, a) {
                t[a.substr(0, 2)] = L(e);
            }), R([ "gg", "GG" ], function(e, n, a, r) {
                n[r] = t.parseTwoDigitYear(e);
            }), W("Q", 0, 0, "quarter"), b("quarter", "Q"), J("Q", Vn), G("Q", function(e, t) {
                t[ua] = 3 * (L(e) - 1);
            }), W("D", [ "DD", 2 ], "Do", "date"), b("date", "D"), J("D", Kn), J("DD", Kn, $n), 
            J("Do", function(e, t) {
                return e ? t._ordinalParse : t._ordinalParseLenient;
            }), G([ "D", "DD" ], _a), G("Do", function(e, t) {
                t[_a] = L(e.match(Kn)[0], 10);
            });
            var Ea = x("Date", !0);
            W("d", 0, "do", "day"), W("dd", 0, 0, function(e) {
                return this.localeData().weekdaysMin(this, e);
            }), W("ddd", 0, 0, function(e) {
                return this.localeData().weekdaysShort(this, e);
            }), W("dddd", 0, 0, function(e) {
                return this.localeData().weekdays(this, e);
            }), W("e", 0, 0, "weekday"), W("E", 0, 0, "isoWeekday"), b("day", "d"), b("weekday", "e"), 
            b("isoWeekday", "E"), J("d", Kn), J("e", Kn), J("E", Kn), J("dd", sa), J("ddd", sa), 
            J("dddd", sa), R([ "dd", "ddd", "dddd" ], function(e, t, n) {
                var a = n._locale.weekdaysParse(e);
                null != a ? t.d = a : l(n).invalidWeekday = e;
            }), R([ "d", "e", "E" ], function(e, t, n, a) {
                t[a] = L(e);
            });
            var Pa = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), Aa = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"), Wa = "Su_Mo_Tu_We_Th_Fr_Sa".split("_");
            W("H", [ "HH", 2 ], 0, "hour"), W("h", [ "hh", 2 ], 0, function() {
                return this.hours() % 12 || 12;
            }), Vt("a", !0), Vt("A", !1), b("hour", "h"), J("a", $t), J("A", $t), J("H", Kn), 
            J("h", Kn), J("HH", Kn, $n), J("hh", Kn, $n), G([ "H", "HH" ], la), G([ "a", "A" ], function(e, t, n) {
                n._isPm = n._locale.isPM(e), n._meridiem = e;
            }), G([ "h", "hh" ], function(e, t, n) {
                t[la] = L(e), l(n).bigHour = !0;
            });
            var Fa = /[ap]\.?m?\.?/i, Ca = x("Hours", !0);
            W("m", [ "mm", 2 ], 0, "minute"), b("minute", "m"), J("m", Kn), J("mm", Kn, $n), 
            G([ "m", "mm" ], ma);
            var Oa = x("Minutes", !1);
            W("s", [ "ss", 2 ], 0, "second"), b("second", "s"), J("s", Kn), J("ss", Kn, $n), 
            G([ "s", "ss" ], ca);
            var za = x("Seconds", !1);
            W("S", 0, 0, function() {
                return ~~(this.millisecond() / 100);
            }), W(0, [ "SS", 2 ], 0, function() {
                return ~~(this.millisecond() / 10);
            }), W(0, [ "SSS", 3 ], 0, "millisecond"), W(0, [ "SSSS", 4 ], 0, function() {
                return 10 * this.millisecond();
            }), W(0, [ "SSSSS", 5 ], 0, function() {
                return 100 * this.millisecond();
            }), W(0, [ "SSSSSS", 6 ], 0, function() {
                return 1e3 * this.millisecond();
            }), W(0, [ "SSSSSSS", 7 ], 0, function() {
                return 1e4 * this.millisecond();
            }), W(0, [ "SSSSSSSS", 8 ], 0, function() {
                return 1e5 * this.millisecond();
            }), W(0, [ "SSSSSSSSS", 9 ], 0, function() {
                return 1e6 * this.millisecond();
            }), b("millisecond", "ms"), J("S", Xn, Vn), J("SS", Xn, $n), J("SSS", Xn, qn);
            var Na;
            for (Na = "SSSS"; Na.length <= 9; Na += "S") J(Na, ta);
            for (Na = "S"; Na.length <= 9; Na += "S") G(Na, Zt);
            var Ja = x("Milliseconds", !1);
            W("z", 0, 0, "zoneAbbr"), W("zz", 0, 0, "zoneName");
            var Ua = p.prototype;
            Ua.add = Ha, Ua.calendar = rt, Ua.clone = st, Ua.diff = _t, Ua.endOf = gt, Ua.format = ht, 
            Ua.from = pt, Ua.fromNow = ft, Ua.to = Mt, Ua.toNow = Lt, Ua.get = P, Ua.invalidAt = xt, 
            Ua.isAfter = it, Ua.isBefore = ot, Ua.isBetween = dt, Ua.isSame = ut, Ua.isValid = St, 
            Ua.lang = ja, Ua.locale = yt, Ua.localeData = Yt, Ua.max = Ta, Ua.min = Da, Ua.parsingFlags = Ht, 
            Ua.set = P, Ua.startOf = vt, Ua.subtract = xa, Ua.toArray = wt, Ua.toObject = bt, 
            Ua.toDate = Tt, Ua.toISOString = ct, Ua.toJSON = ct, Ua.toString = mt, Ua.unix = Dt, 
            Ua.valueOf = kt, Ua.year = ga, Ua.isLeapYear = _e, Ua.weekYear = Pt, Ua.isoWeekYear = At, 
            Ua.quarter = Ua.quarters = Ct, Ua.month = X, Ua.daysInMonth = Q, Ua.week = Ua.weeks = pe, 
            Ua.isoWeek = Ua.isoWeeks = fe, Ua.weeksInYear = Ft, Ua.isoWeeksInYear = Wt, Ua.date = Ea, 
            Ua.day = Ua.days = It, Ua.weekday = Gt, Ua.isoWeekday = Rt, Ua.dayOfYear = Le, Ua.hour = Ua.hours = Ca, 
            Ua.minute = Ua.minutes = Oa, Ua.second = Ua.seconds = za, Ua.millisecond = Ua.milliseconds = Ja, 
            Ua.utcOffset = Je, Ua.utc = Ie, Ua.local = Ge, Ua.parseZone = Re, Ua.hasAlignedHourOffset = Ve, 
            Ua.isDST = $e, Ua.isDSTShifted = qe, Ua.isLocal = Be, Ua.isUtcOffset = Ze, Ua.isUtc = Ke, 
            Ua.isUTC = Ke, Ua.zoneAbbr = Kt, Ua.zoneName = Xt, Ua.dates = ne("dates accessor is deprecated. Use date instead.", Ea), 
            Ua.months = ne("months accessor is deprecated. Use month instead", X), Ua.years = ne("years accessor is deprecated. Use year instead", ga), 
            Ua.zone = ne("moment().zone is deprecated, use moment().utcOffset instead. https://github.com/moment/moment/issues/1779", Ue);
            var Ia = Ua, Ga = {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
            }, Ra = {
                LTS: "h:mm:ss A",
                LT: "h:mm A",
                L: "MM/DD/YYYY",
                LL: "MMMM D, YYYY",
                LLL: "MMMM D, YYYY h:mm A",
                LLLL: "dddd, MMMM D, YYYY h:mm A"
            }, Va = "Invalid date", $a = "%d", qa = /\d{1,2}/, Ba = {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
            }, Za = Y.prototype;
            Za._calendar = Ga, Za.calendar = tn, Za._longDateFormat = Ra, Za.longDateFormat = nn, 
            Za._invalidDate = Va, Za.invalidDate = an, Za._ordinal = $a, Za.ordinal = rn, Za._ordinalParse = qa, 
            Za.preparse = sn, Za.postformat = sn, Za._relativeTime = Ba, Za.relativeTime = on, 
            Za.pastFuture = dn, Za.set = un, Za.months = q, Za._months = pa, Za.monthsShort = B, 
            Za._monthsShort = fa, Za.monthsParse = Z, Za.week = me, Za._week = ka, Za.firstDayOfYear = he, 
            Za.firstDayOfWeek = ce, Za.weekdays = zt, Za._weekdays = Pa, Za.weekdaysMin = Jt, 
            Za._weekdaysMin = Wa, Za.weekdaysShort = Nt, Za._weekdaysShort = Aa, Za.weekdaysParse = Ut, 
            Za.isPM = qt, Za._meridiemParse = Fa, Za.meridiem = Bt, D("en", {
                ordinalParse: /\d{1,2}(th|st|nd|rd)/,
                ordinal: function(e) {
                    var t = e % 10, n = 1 === L(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th";
                    return e + n;
                }
            }), t.lang = ne("moment.lang is deprecated. Use moment.locale instead.", D), t.langData = ne("moment.langData is deprecated. Use moment.localeData instead.", w);
            var Ka = Math.abs, Xa = bn("ms"), Qa = bn("s"), er = bn("m"), tr = bn("h"), nr = bn("d"), ar = bn("w"), rr = bn("M"), sr = bn("y"), ir = Hn("milliseconds"), or = Hn("seconds"), dr = Hn("minutes"), ur = Hn("hours"), _r = Hn("days"), lr = Hn("months"), mr = Hn("years"), cr = Math.round, hr = {
                s: 45,
                m: 45,
                h: 22,
                d: 26,
                M: 11
            }, pr = Math.abs, fr = We.prototype;
            fr.abs = Mn, fr.add = yn, fr.subtract = Yn, fr.as = Tn, fr.asMilliseconds = Xa, 
            fr.asSeconds = Qa, fr.asMinutes = er, fr.asHours = tr, fr.asDays = nr, fr.asWeeks = ar, 
            fr.asMonths = rr, fr.asYears = sr, fr.valueOf = wn, fr._bubble = gn, fr.get = Sn, 
            fr.milliseconds = ir, fr.seconds = or, fr.minutes = dr, fr.hours = ur, fr.days = _r, 
            fr.weeks = xn, fr.months = lr, fr.years = mr, fr.humanize = An, fr.toISOString = Wn, 
            fr.toString = Wn, fr.toJSON = Wn, fr.locale = yt, fr.localeData = Yt, fr.toIsoString = ne("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", Wn), 
            fr.lang = ja, W("X", 0, 0, "unix"), W("x", 0, 0, "valueOf"), J("x", na), J("X", ra), 
            G("X", function(e, t, n) {
                n._d = new Date(1e3 * parseFloat(e, 10));
            }), G("x", function(e, t, n) {
                n._d = new Date(L(e));
            }), t.version = "2.10.6", a(je), t.fn = Ia, t.min = Pe, t.max = Ae, t.utc = u, t.unix = Qt, 
            t.months = mn, t.isDate = s, t.locale = D, t.invalid = c, t.duration = Xe, t.isMoment = f, 
            t.weekdays = hn, t.parseZone = en, t.localeData = w, t.isDuration = Fe, t.monthsShort = cn, 
            t.weekdaysMin = fn, t.defineLocale = T, t.weekdaysShort = pn, t.normalizeUnits = S, 
            t.relativeTimeThreshold = Pn;
            var Mr = t;
            return Mr;
        });
    }).call(t, n(10)(e));
}, function(e, t) {
    e.exports = function(e) {
        return e.webpackPolyfill || (e.deprecate = function() {}, e.paths = [], e.children = [], 
        e.webpackPolyfill = 1), e;
    };
}, function(e, t, n) {
    function a(e) {
        return n(r(e));
    }
    function r(e) {
        return s[e] || function() {
            throw new Error("Cannot find module '" + e + "'.");
        }();
    }
    var s = {
        "./af": 12,
        "./af.js": 12,
        "./ar": 13,
        "./ar-ma": 14,
        "./ar-ma.js": 14,
        "./ar-sa": 15,
        "./ar-sa.js": 15,
        "./ar-tn": 16,
        "./ar-tn.js": 16,
        "./ar.js": 13,
        "./az": 17,
        "./az.js": 17,
        "./be": 18,
        "./be.js": 18,
        "./bg": 19,
        "./bg.js": 19,
        "./bn": 20,
        "./bn.js": 20,
        "./bo": 21,
        "./bo.js": 21,
        "./br": 22,
        "./br.js": 22,
        "./bs": 23,
        "./bs.js": 23,
        "./ca": 24,
        "./ca.js": 24,
        "./cs": 25,
        "./cs.js": 25,
        "./cv": 26,
        "./cv.js": 26,
        "./cy": 27,
        "./cy.js": 27,
        "./da": 28,
        "./da.js": 28,
        "./de": 29,
        "./de-at": 30,
        "./de-at.js": 30,
        "./de.js": 29,
        "./el": 31,
        "./el.js": 31,
        "./en-au": 32,
        "./en-au.js": 32,
        "./en-ca": 33,
        "./en-ca.js": 33,
        "./en-gb": 34,
        "./en-gb.js": 34,
        "./eo": 35,
        "./eo.js": 35,
        "./es": 36,
        "./es.js": 36,
        "./et": 37,
        "./et.js": 37,
        "./eu": 38,
        "./eu.js": 38,
        "./fa": 39,
        "./fa.js": 39,
        "./fi": 40,
        "./fi.js": 40,
        "./fo": 41,
        "./fo.js": 41,
        "./fr": 42,
        "./fr-ca": 43,
        "./fr-ca.js": 43,
        "./fr.js": 42,
        "./fy": 44,
        "./fy.js": 44,
        "./gl": 45,
        "./gl.js": 45,
        "./he": 46,
        "./he.js": 46,
        "./hi": 47,
        "./hi.js": 47,
        "./hr": 48,
        "./hr.js": 48,
        "./hu": 49,
        "./hu.js": 49,
        "./hy-am": 50,
        "./hy-am.js": 50,
        "./id": 51,
        "./id.js": 51,
        "./is": 52,
        "./is.js": 52,
        "./it": 53,
        "./it.js": 53,
        "./ja": 54,
        "./ja.js": 54,
        "./jv": 55,
        "./jv.js": 55,
        "./ka": 56,
        "./ka.js": 56,
        "./km": 57,
        "./km.js": 57,
        "./ko": 58,
        "./ko.js": 58,
        "./lb": 59,
        "./lb.js": 59,
        "./lt": 60,
        "./lt.js": 60,
        "./lv": 61,
        "./lv.js": 61,
        "./me": 62,
        "./me.js": 62,
        "./mk": 63,
        "./mk.js": 63,
        "./ml": 64,
        "./ml.js": 64,
        "./mr": 65,
        "./mr.js": 65,
        "./ms": 66,
        "./ms-my": 67,
        "./ms-my.js": 67,
        "./ms.js": 66,
        "./my": 68,
        "./my.js": 68,
        "./nb": 69,
        "./nb.js": 69,
        "./ne": 70,
        "./ne.js": 70,
        "./nl": 71,
        "./nl.js": 71,
        "./nn": 72,
        "./nn.js": 72,
        "./pl": 73,
        "./pl.js": 73,
        "./pt": 74,
        "./pt-br": 75,
        "./pt-br.js": 75,
        "./pt.js": 74,
        "./ro": 76,
        "./ro.js": 76,
        "./ru": 77,
        "./ru.js": 77,
        "./si": 78,
        "./si.js": 78,
        "./sk": 79,
        "./sk.js": 79,
        "./sl": 80,
        "./sl.js": 80,
        "./sq": 81,
        "./sq.js": 81,
        "./sr": 82,
        "./sr-cyrl": 83,
        "./sr-cyrl.js": 83,
        "./sr.js": 82,
        "./sv": 84,
        "./sv.js": 84,
        "./ta": 85,
        "./ta.js": 85,
        "./th": 86,
        "./th.js": 86,
        "./tl-ph": 87,
        "./tl-ph.js": 87,
        "./tr": 88,
        "./tr.js": 88,
        "./tzl": 89,
        "./tzl.js": 89,
        "./tzm": 90,
        "./tzm-latn": 91,
        "./tzm-latn.js": 91,
        "./tzm.js": 90,
        "./uk": 92,
        "./uk.js": 92,
        "./uz": 93,
        "./uz.js": 93,
        "./vi": 94,
        "./vi.js": 94,
        "./zh-cn": 95,
        "./zh-cn.js": 95,
        "./zh-tw": 96,
        "./zh-tw.js": 96
    };
    a.keys = function() {
        return Object.keys(s);
    }, a.resolve = r, e.exports = a, a.id = 11;
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : afrikaans (af)
    //! author : Werner Mollentze : https://github.com/wernerm
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("af", {
            months: "Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember".split("_"),
            monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des".split("_"),
            weekdays: "Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag".split("_"),
            weekdaysShort: "Son_Maa_Din_Woe_Don_Vry_Sat".split("_"),
            weekdaysMin: "So_Ma_Di_Wo_Do_Vr_Sa".split("_"),
            meridiemParse: /vm|nm/i,
            isPM: function(e) {
                return /^nm$/i.test(e);
            },
            meridiem: function(e, t, n) {
                return e < 12 ? n ? "vm" : "VM" : n ? "nm" : "NM";
            },
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Vandag om] LT",
                nextDay: "[Môre om] LT",
                nextWeek: "dddd [om] LT",
                lastDay: "[Gister om] LT",
                lastWeek: "[Laas] dddd [om] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "oor %s",
                past: "%s gelede",
                s: "'n paar sekondes",
                m: "'n minuut",
                mm: "%d minute",
                h: "'n uur",
                hh: "%d ure",
                d: "'n dag",
                dd: "%d dae",
                M: "'n maand",
                MM: "%d maande",
                y: "'n jaar",
                yy: "%d jaar"
            },
            ordinalParse: /\d{1,2}(ste|de)/,
            ordinal: function(e) {
                return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de");
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! Locale: Arabic (ar)
    //! Author: Abdel Said: https://github.com/abdelsaid
    //! Changes in months, weekdays: Ahmed Elkhatib
    //! Native plural forms: forabi https://github.com/forabi
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "١",
            "2": "٢",
            "3": "٣",
            "4": "٤",
            "5": "٥",
            "6": "٦",
            "7": "٧",
            "8": "٨",
            "9": "٩",
            "0": "٠"
        }, n = {
            "١": "1",
            "٢": "2",
            "٣": "3",
            "٤": "4",
            "٥": "5",
            "٦": "6",
            "٧": "7",
            "٨": "8",
            "٩": "9",
            "٠": "0"
        }, a = function(e) {
            return 0 === e ? 0 : 1 === e ? 1 : 2 === e ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5;
        }, r = {
            s: [ "أقل من ثانية", "ثانية واحدة", [ "ثانيتان", "ثانيتين" ], "%d ثوان", "%d ثانية", "%d ثانية" ],
            m: [ "أقل من دقيقة", "دقيقة واحدة", [ "دقيقتان", "دقيقتين" ], "%d دقائق", "%d دقيقة", "%d دقيقة" ],
            h: [ "أقل من ساعة", "ساعة واحدة", [ "ساعتان", "ساعتين" ], "%d ساعات", "%d ساعة", "%d ساعة" ],
            d: [ "أقل من يوم", "يوم واحد", [ "يومان", "يومين" ], "%d أيام", "%d يومًا", "%d يوم" ],
            M: [ "أقل من شهر", "شهر واحد", [ "شهران", "شهرين" ], "%d أشهر", "%d شهرا", "%d شهر" ],
            y: [ "أقل من عام", "عام واحد", [ "عامان", "عامين" ], "%d أعوام", "%d عامًا", "%d عام" ]
        }, s = function(e) {
            return function(t, n, s, i) {
                var o = a(t), d = r[e][a(t)];
                return 2 === o && (d = d[n ? 0 : 1]), d.replace(/%d/i, t);
            };
        }, i = [ "كانون الثاني يناير", "شباط فبراير", "آذار مارس", "نيسان أبريل", "أيار مايو", "حزيران يونيو", "تموز يوليو", "آب أغسطس", "أيلول سبتمبر", "تشرين الأول أكتوبر", "تشرين الثاني نوفمبر", "كانون الأول ديسمبر" ], o = e.defineLocale("ar", {
            months: i,
            monthsShort: i,
            weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
            weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
            weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "D/‏M/‏YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            meridiemParse: /ص|م/,
            isPM: function(e) {
                return "م" === e;
            },
            meridiem: function(e, t, n) {
                return e < 12 ? "ص" : "م";
            },
            calendar: {
                sameDay: "[اليوم عند الساعة] LT",
                nextDay: "[غدًا عند الساعة] LT",
                nextWeek: "dddd [عند الساعة] LT",
                lastDay: "[أمس عند الساعة] LT",
                lastWeek: "dddd [عند الساعة] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "بعد %s",
                past: "منذ %s",
                s: s("s"),
                m: s("m"),
                mm: s("m"),
                h: s("h"),
                hh: s("h"),
                d: s("d"),
                dd: s("d"),
                M: s("M"),
                MM: s("M"),
                y: s("y"),
                yy: s("y")
            },
            preparse: function(e) {
                return e.replace(/\u200f/g, "").replace(/[١٢٣٤٥٦٧٨٩٠]/g, function(e) {
                    return n[e];
                }).replace(/،/g, ",");
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                }).replace(/,/g, "،");
            },
            week: {
                dow: 6,
                doy: 12
            }
        });
        return o;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Moroccan Arabic (ar-ma)
    //! author : ElFadili Yassine : https://github.com/ElFadiliY
    //! author : Abdel Said : https://github.com/abdelsaid
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ar-ma", {
            months: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
            monthsShort: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
            weekdays: "الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
            weekdaysShort: "احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),
            weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[اليوم على الساعة] LT",
                nextDay: "[غدا على الساعة] LT",
                nextWeek: "dddd [على الساعة] LT",
                lastDay: "[أمس على الساعة] LT",
                lastWeek: "dddd [على الساعة] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "في %s",
                past: "منذ %s",
                s: "ثوان",
                m: "دقيقة",
                mm: "%d دقائق",
                h: "ساعة",
                hh: "%d ساعات",
                d: "يوم",
                dd: "%d أيام",
                M: "شهر",
                MM: "%d أشهر",
                y: "سنة",
                yy: "%d سنوات"
            },
            week: {
                dow: 6,
                doy: 12
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Arabic Saudi Arabia (ar-sa)
    //! author : Suhail Alkowaileet : https://github.com/xsoh
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "١",
            "2": "٢",
            "3": "٣",
            "4": "٤",
            "5": "٥",
            "6": "٦",
            "7": "٧",
            "8": "٨",
            "9": "٩",
            "0": "٠"
        }, n = {
            "١": "1",
            "٢": "2",
            "٣": "3",
            "٤": "4",
            "٥": "5",
            "٦": "6",
            "٧": "7",
            "٨": "8",
            "٩": "9",
            "٠": "0"
        }, a = e.defineLocale("ar-sa", {
            months: "يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
            monthsShort: "يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
            weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
            weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
            weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            meridiemParse: /ص|م/,
            isPM: function(e) {
                return "م" === e;
            },
            meridiem: function(e, t, n) {
                return e < 12 ? "ص" : "م";
            },
            calendar: {
                sameDay: "[اليوم على الساعة] LT",
                nextDay: "[غدا على الساعة] LT",
                nextWeek: "dddd [على الساعة] LT",
                lastDay: "[أمس على الساعة] LT",
                lastWeek: "dddd [على الساعة] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "في %s",
                past: "منذ %s",
                s: "ثوان",
                m: "دقيقة",
                mm: "%d دقائق",
                h: "ساعة",
                hh: "%d ساعات",
                d: "يوم",
                dd: "%d أيام",
                M: "شهر",
                MM: "%d أشهر",
                y: "سنة",
                yy: "%d سنوات"
            },
            preparse: function(e) {
                return e.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function(e) {
                    return n[e];
                }).replace(/،/g, ",");
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                }).replace(/,/g, "،");
            },
            week: {
                dow: 6,
                doy: 12
            }
        });
        return a;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale  : Tunisian Arabic (ar-tn)
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ar-tn", {
            months: "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
            monthsShort: "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
            weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
            weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
            weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[اليوم على الساعة] LT",
                nextDay: "[غدا على الساعة] LT",
                nextWeek: "dddd [على الساعة] LT",
                lastDay: "[أمس على الساعة] LT",
                lastWeek: "dddd [على الساعة] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "في %s",
                past: "منذ %s",
                s: "ثوان",
                m: "دقيقة",
                mm: "%d دقائق",
                h: "ساعة",
                hh: "%d ساعات",
                d: "يوم",
                dd: "%d أيام",
                M: "شهر",
                MM: "%d أشهر",
                y: "سنة",
                yy: "%d سنوات"
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : azerbaijani (az)
    //! author : topchiyev : https://github.com/topchiyev
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = {
            1: "-inci",
            5: "-inci",
            8: "-inci",
            70: "-inci",
            80: "-inci",
            2: "-nci",
            7: "-nci",
            20: "-nci",
            50: "-nci",
            3: "-üncü",
            4: "-üncü",
            100: "-üncü",
            6: "-ncı",
            9: "-uncu",
            10: "-uncu",
            30: "-uncu",
            60: "-ıncı",
            90: "-ıncı"
        }, n = e.defineLocale("az", {
            months: "yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr".split("_"),
            monthsShort: "yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek".split("_"),
            weekdays: "Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə".split("_"),
            weekdaysShort: "Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən".split("_"),
            weekdaysMin: "Bz_BE_ÇA_Çə_CA_Cü_Şə".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[bugün saat] LT",
                nextDay: "[sabah saat] LT",
                nextWeek: "[gələn həftə] dddd [saat] LT",
                lastDay: "[dünən] LT",
                lastWeek: "[keçən həftə] dddd [saat] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s sonra",
                past: "%s əvvəl",
                s: "birneçə saniyyə",
                m: "bir dəqiqə",
                mm: "%d dəqiqə",
                h: "bir saat",
                hh: "%d saat",
                d: "bir gün",
                dd: "%d gün",
                M: "bir ay",
                MM: "%d ay",
                y: "bir il",
                yy: "%d il"
            },
            meridiemParse: /gecə|səhər|gündüz|axşam/,
            isPM: function(e) {
                return /^(gündüz|axşam)$/.test(e);
            },
            meridiem: function(e, t, n) {
                return e < 4 ? "gecə" : e < 12 ? "səhər" : e < 17 ? "gündüz" : "axşam";
            },
            ordinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
            ordinal: function(e) {
                if (0 === e) return e + "-ıncı";
                var n = e % 10, a = e % 100 - n, r = e >= 100 ? 100 : null;
                return e + (t[n] || t[a] || t[r]);
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return n;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : belarusian (be)
    //! author : Dmitry Demidov : https://github.com/demidov91
    //! author: Praleska: http://praleska.pro/
    //! Author : Menelion Elensúle : https://github.com/Oire
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t) {
            var n = e.split("_");
            return t % 10 === 1 && t % 100 !== 11 ? n[0] : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20) ? n[1] : n[2];
        }
        function n(e, n, a) {
            var r = {
                mm: n ? "хвіліна_хвіліны_хвілін" : "хвіліну_хвіліны_хвілін",
                hh: n ? "гадзіна_гадзіны_гадзін" : "гадзіну_гадзіны_гадзін",
                dd: "дзень_дні_дзён",
                MM: "месяц_месяцы_месяцаў",
                yy: "год_гады_гадоў"
            };
            return "m" === a ? n ? "хвіліна" : "хвіліну" : "h" === a ? n ? "гадзіна" : "гадзіну" : e + " " + t(r[a], +e);
        }
        function a(e, t) {
            var n = {
                nominative: "студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань".split("_"),
                accusative: "студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня".split("_")
            }, a = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(t) ? "accusative" : "nominative";
            return n[a][e.month()];
        }
        function r(e, t) {
            var n = {
                nominative: "нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота".split("_"),
                accusative: "нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу".split("_")
            }, a = /\[ ?[Вв] ?(?:мінулую|наступную)? ?\] ?dddd/.test(t) ? "accusative" : "nominative";
            return n[a][e.day()];
        }
        var s = e.defineLocale("be", {
            months: a,
            monthsShort: "студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж".split("_"),
            weekdays: r,
            weekdaysShort: "нд_пн_ат_ср_чц_пт_сб".split("_"),
            weekdaysMin: "нд_пн_ат_ср_чц_пт_сб".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY г.",
                LLL: "D MMMM YYYY г., HH:mm",
                LLLL: "dddd, D MMMM YYYY г., HH:mm"
            },
            calendar: {
                sameDay: "[Сёння ў] LT",
                nextDay: "[Заўтра ў] LT",
                lastDay: "[Учора ў] LT",
                nextWeek: function() {
                    return "[У] dddd [ў] LT";
                },
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                      case 3:
                      case 5:
                      case 6:
                        return "[У мінулую] dddd [ў] LT";

                      case 1:
                      case 2:
                      case 4:
                        return "[У мінулы] dddd [ў] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "праз %s",
                past: "%s таму",
                s: "некалькі секунд",
                m: n,
                mm: n,
                h: n,
                hh: n,
                d: "дзень",
                dd: n,
                M: "месяц",
                MM: n,
                y: "год",
                yy: n
            },
            meridiemParse: /ночы|раніцы|дня|вечара/,
            isPM: function(e) {
                return /^(дня|вечара)$/.test(e);
            },
            meridiem: function(e, t, n) {
                return e < 4 ? "ночы" : e < 12 ? "раніцы" : e < 17 ? "дня" : "вечара";
            },
            ordinalParse: /\d{1,2}-(і|ы|га)/,
            ordinal: function(e, t) {
                switch (t) {
                  case "M":
                  case "d":
                  case "DDD":
                  case "w":
                  case "W":
                    return e % 10 !== 2 && e % 10 !== 3 || e % 100 === 12 || e % 100 === 13 ? e + "-ы" : e + "-і";

                  case "D":
                    return e + "-га";

                  default:
                    return e;
                }
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return s;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : bulgarian (bg)
    //! author : Krasen Borisov : https://github.com/kraz
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("bg", {
            months: "януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември".split("_"),
            monthsShort: "янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек".split("_"),
            weekdays: "неделя_понеделник_вторник_сряда_четвъртък_петък_събота".split("_"),
            weekdaysShort: "нед_пон_вто_сря_чет_пет_съб".split("_"),
            weekdaysMin: "нд_пн_вт_ср_чт_пт_сб".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "D.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY H:mm",
                LLLL: "dddd, D MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[Днес в] LT",
                nextDay: "[Утре в] LT",
                nextWeek: "dddd [в] LT",
                lastDay: "[Вчера в] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                      case 3:
                      case 6:
                        return "[В изминалата] dddd [в] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[В изминалия] dddd [в] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "след %s",
                past: "преди %s",
                s: "няколко секунди",
                m: "минута",
                mm: "%d минути",
                h: "час",
                hh: "%d часа",
                d: "ден",
                dd: "%d дни",
                M: "месец",
                MM: "%d месеца",
                y: "година",
                yy: "%d години"
            },
            ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
            ordinal: function(e) {
                var t = e % 10, n = e % 100;
                return 0 === e ? e + "-ев" : 0 === n ? e + "-ен" : n > 10 && n < 20 ? e + "-ти" : 1 === t ? e + "-ви" : 2 === t ? e + "-ри" : 7 === t || 8 === t ? e + "-ми" : e + "-ти";
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Bengali (bn)
    //! author : Kaushik Gandhi : https://github.com/kaushikgandhi
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "১",
            "2": "২",
            "3": "৩",
            "4": "৪",
            "5": "৫",
            "6": "৬",
            "7": "৭",
            "8": "৮",
            "9": "৯",
            "0": "০"
        }, n = {
            "১": "1",
            "২": "2",
            "৩": "3",
            "৪": "4",
            "৫": "5",
            "৬": "6",
            "৭": "7",
            "৮": "8",
            "৯": "9",
            "০": "0"
        }, a = e.defineLocale("bn", {
            months: "জানুয়ারী_ফেবুয়ারী_মার্চ_এপ্রিল_মে_জুন_জুলাই_অগাস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর".split("_"),
            monthsShort: "জানু_ফেব_মার্চ_এপর_মে_জুন_জুল_অগ_সেপ্ট_অক্টো_নভ_ডিসেম্".split("_"),
            weekdays: "রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পত্তিবার_শুক্রুবার_শনিবার".split("_"),
            weekdaysShort: "রবি_সোম_মঙ্গল_বুধ_বৃহস্পত্তি_শুক্রু_শনি".split("_"),
            weekdaysMin: "রব_সম_মঙ্গ_বু_ব্রিহ_শু_শনি".split("_"),
            longDateFormat: {
                LT: "A h:mm সময়",
                LTS: "A h:mm:ss সময়",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm সময়",
                LLLL: "dddd, D MMMM YYYY, A h:mm সময়"
            },
            calendar: {
                sameDay: "[আজ] LT",
                nextDay: "[আগামীকাল] LT",
                nextWeek: "dddd, LT",
                lastDay: "[গতকাল] LT",
                lastWeek: "[গত] dddd, LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s পরে",
                past: "%s আগে",
                s: "কএক সেকেন্ড",
                m: "এক মিনিট",
                mm: "%d মিনিট",
                h: "এক ঘন্টা",
                hh: "%d ঘন্টা",
                d: "এক দিন",
                dd: "%d দিন",
                M: "এক মাস",
                MM: "%d মাস",
                y: "এক বছর",
                yy: "%d বছর"
            },
            preparse: function(e) {
                return e.replace(/[১২৩৪৫৬৭৮৯০]/g, function(e) {
                    return n[e];
                });
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                });
            },
            meridiemParse: /রাত|সকাল|দুপুর|বিকেল|রাত/,
            isPM: function(e) {
                return /^(দুপুর|বিকেল|রাত)$/.test(e);
            },
            meridiem: function(e, t, n) {
                return e < 4 ? "রাত" : e < 10 ? "সকাল" : e < 17 ? "দুপুর" : e < 20 ? "বিকেল" : "রাত";
            },
            week: {
                dow: 0,
                doy: 6
            }
        });
        return a;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : tibetan (bo)
    //! author : Thupten N. Chakrishar : https://github.com/vajradog
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "༡",
            "2": "༢",
            "3": "༣",
            "4": "༤",
            "5": "༥",
            "6": "༦",
            "7": "༧",
            "8": "༨",
            "9": "༩",
            "0": "༠"
        }, n = {
            "༡": "1",
            "༢": "2",
            "༣": "3",
            "༤": "4",
            "༥": "5",
            "༦": "6",
            "༧": "7",
            "༨": "8",
            "༩": "9",
            "༠": "0"
        }, a = e.defineLocale("bo", {
            months: "ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ".split("_"),
            monthsShort: "ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ".split("_"),
            weekdays: "གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་".split("_"),
            weekdaysShort: "ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་".split("_"),
            weekdaysMin: "ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་".split("_"),
            longDateFormat: {
                LT: "A h:mm",
                LTS: "A h:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm",
                LLLL: "dddd, D MMMM YYYY, A h:mm"
            },
            calendar: {
                sameDay: "[དི་རིང] LT",
                nextDay: "[སང་ཉིན] LT",
                nextWeek: "[བདུན་ཕྲག་རྗེས་མ], LT",
                lastDay: "[ཁ་སང] LT",
                lastWeek: "[བདུན་ཕྲག་མཐའ་མ] dddd, LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s ལ་",
                past: "%s སྔན་ལ",
                s: "ལམ་སང",
                m: "སྐར་མ་གཅིག",
                mm: "%d སྐར་མ",
                h: "ཆུ་ཚོད་གཅིག",
                hh: "%d ཆུ་ཚོད",
                d: "ཉིན་གཅིག",
                dd: "%d ཉིན་",
                M: "ཟླ་བ་གཅིག",
                MM: "%d ཟླ་བ",
                y: "ལོ་གཅིག",
                yy: "%d ལོ"
            },
            preparse: function(e) {
                return e.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function(e) {
                    return n[e];
                });
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                });
            },
            meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
            isPM: function(e) {
                return /^(ཉིན་གུང|དགོང་དག|མཚན་མོ)$/.test(e);
            },
            meridiem: function(e, t, n) {
                return e < 4 ? "མཚན་མོ" : e < 10 ? "ཞོགས་ཀས" : e < 17 ? "ཉིན་གུང" : e < 20 ? "དགོང་དག" : "མཚན་མོ";
            },
            week: {
                dow: 0,
                doy: 6
            }
        });
        return a;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : breton (br)
    //! author : Jean-Baptiste Le Duigou : https://github.com/jbleduigou
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t, n) {
            var a = {
                mm: "munutenn",
                MM: "miz",
                dd: "devezh"
            };
            return e + " " + r(a[n], e);
        }
        function n(e) {
            switch (a(e)) {
              case 1:
              case 3:
              case 4:
              case 5:
              case 9:
                return e + " bloaz";

              default:
                return e + " vloaz";
            }
        }
        function a(e) {
            return e > 9 ? a(e % 10) : e;
        }
        function r(e, t) {
            return 2 === t ? s(e) : e;
        }
        function s(e) {
            var t = {
                m: "v",
                b: "v",
                d: "z"
            };
            return void 0 === t[e.charAt(0)] ? e : t[e.charAt(0)] + e.substring(1);
        }
        var i = e.defineLocale("br", {
            months: "Genver_C'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu".split("_"),
            monthsShort: "Gen_C'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker".split("_"),
            weekdays: "Sul_Lun_Meurzh_Merc'her_Yaou_Gwener_Sadorn".split("_"),
            weekdaysShort: "Sul_Lun_Meu_Mer_Yao_Gwe_Sad".split("_"),
            weekdaysMin: "Su_Lu_Me_Mer_Ya_Gw_Sa".split("_"),
            longDateFormat: {
                LT: "h[e]mm A",
                LTS: "h[e]mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D [a viz] MMMM YYYY",
                LLL: "D [a viz] MMMM YYYY h[e]mm A",
                LLLL: "dddd, D [a viz] MMMM YYYY h[e]mm A"
            },
            calendar: {
                sameDay: "[Hiziv da] LT",
                nextDay: "[Warc'hoazh da] LT",
                nextWeek: "dddd [da] LT",
                lastDay: "[Dec'h da] LT",
                lastWeek: "dddd [paset da] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "a-benn %s",
                past: "%s 'zo",
                s: "un nebeud segondennoù",
                m: "ur vunutenn",
                mm: t,
                h: "un eur",
                hh: "%d eur",
                d: "un devezh",
                dd: t,
                M: "ur miz",
                MM: t,
                y: "ur bloaz",
                yy: n
            },
            ordinalParse: /\d{1,2}(añ|vet)/,
            ordinal: function(e) {
                var t = 1 === e ? "añ" : "vet";
                return e + t;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return i;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : bosnian (bs)
    //! author : Nedim Cholich : https://github.com/frontyard
    //! based on (hr) translation by Bojan Marković
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t, n) {
            var a = e + " ";
            switch (n) {
              case "m":
                return t ? "jedna minuta" : "jedne minute";

              case "mm":
                return a += 1 === e ? "minuta" : 2 === e || 3 === e || 4 === e ? "minute" : "minuta";

              case "h":
                return t ? "jedan sat" : "jednog sata";

              case "hh":
                return a += 1 === e ? "sat" : 2 === e || 3 === e || 4 === e ? "sata" : "sati";

              case "dd":
                return a += 1 === e ? "dan" : "dana";

              case "MM":
                return a += 1 === e ? "mjesec" : 2 === e || 3 === e || 4 === e ? "mjeseca" : "mjeseci";

              case "yy":
                return a += 1 === e ? "godina" : 2 === e || 3 === e || 4 === e ? "godine" : "godina";
            }
        }
        var n = e.defineLocale("bs", {
            months: "januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar".split("_"),
            monthsShort: "jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.".split("_"),
            weekdays: "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),
            weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
            weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD. MM. YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd, D. MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[danas u] LT",
                nextDay: "[sutra u] LT",
                nextWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[u] [nedjelju] [u] LT";

                      case 3:
                        return "[u] [srijedu] [u] LT";

                      case 6:
                        return "[u] [subotu] [u] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[u] dddd [u] LT";
                    }
                },
                lastDay: "[jučer u] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                      case 3:
                        return "[prošlu] dddd [u] LT";

                      case 6:
                        return "[prošle] [subote] [u] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[prošli] dddd [u] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "za %s",
                past: "prije %s",
                s: "par sekundi",
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: "dan",
                dd: t,
                M: "mjesec",
                MM: t,
                y: "godinu",
                yy: t
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return n;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : catalan (ca)
    //! author : Juan G. Hurtado : https://github.com/juanghurtado
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ca", {
            months: "gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre".split("_"),
            monthsShort: "gen._febr._mar._abr._mai._jun._jul._ag._set._oct._nov._des.".split("_"),
            weekdays: "diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte".split("_"),
            weekdaysShort: "dg._dl._dt._dc._dj._dv._ds.".split("_"),
            weekdaysMin: "Dg_Dl_Dt_Dc_Dj_Dv_Ds".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "LT:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY H:mm",
                LLLL: "dddd D MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: function() {
                    return "[avui a " + (1 !== this.hours() ? "les" : "la") + "] LT";
                },
                nextDay: function() {
                    return "[demà a " + (1 !== this.hours() ? "les" : "la") + "] LT";
                },
                nextWeek: function() {
                    return "dddd [a " + (1 !== this.hours() ? "les" : "la") + "] LT";
                },
                lastDay: function() {
                    return "[ahir a " + (1 !== this.hours() ? "les" : "la") + "] LT";
                },
                lastWeek: function() {
                    return "[el] dddd [passat a " + (1 !== this.hours() ? "les" : "la") + "] LT";
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "en %s",
                past: "fa %s",
                s: "uns segons",
                m: "un minut",
                mm: "%d minuts",
                h: "una hora",
                hh: "%d hores",
                d: "un dia",
                dd: "%d dies",
                M: "un mes",
                MM: "%d mesos",
                y: "un any",
                yy: "%d anys"
            },
            ordinalParse: /\d{1,2}(r|n|t|è|a)/,
            ordinal: function(e, t) {
                var n = 1 === e ? "r" : 2 === e ? "n" : 3 === e ? "r" : 4 === e ? "t" : "è";
                return "w" !== t && "W" !== t || (n = "a"), e + n;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : czech (cs)
    //! author : petrbela : https://github.com/petrbela
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e) {
            return e > 1 && e < 5 && 1 !== ~~(e / 10);
        }
        function n(e, n, a, r) {
            var s = e + " ";
            switch (a) {
              case "s":
                return n || r ? "pár sekund" : "pár sekundami";

              case "m":
                return n ? "minuta" : r ? "minutu" : "minutou";

              case "mm":
                return n || r ? s + (t(e) ? "minuty" : "minut") : s + "minutami";

              case "h":
                return n ? "hodina" : r ? "hodinu" : "hodinou";

              case "hh":
                return n || r ? s + (t(e) ? "hodiny" : "hodin") : s + "hodinami";

              case "d":
                return n || r ? "den" : "dnem";

              case "dd":
                return n || r ? s + (t(e) ? "dny" : "dní") : s + "dny";

              case "M":
                return n || r ? "měsíc" : "měsícem";

              case "MM":
                return n || r ? s + (t(e) ? "měsíce" : "měsíců") : s + "měsíci";

              case "y":
                return n || r ? "rok" : "rokem";

              case "yy":
                return n || r ? s + (t(e) ? "roky" : "let") : s + "lety";
            }
        }
        var a = "leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec".split("_"), r = "led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro".split("_"), s = e.defineLocale("cs", {
            months: a,
            monthsShort: r,
            monthsParse: function(e, t) {
                var n, a = [];
                for (n = 0; n < 12; n++) a[n] = new RegExp("^" + e[n] + "$|^" + t[n] + "$", "i");
                return a;
            }(a, r),
            weekdays: "neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota".split("_"),
            weekdaysShort: "ne_po_út_st_čt_pá_so".split("_"),
            weekdaysMin: "ne_po_út_st_čt_pá_so".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd D. MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[dnes v] LT",
                nextDay: "[zítra v] LT",
                nextWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[v neděli v] LT";

                      case 1:
                      case 2:
                        return "[v] dddd [v] LT";

                      case 3:
                        return "[ve středu v] LT";

                      case 4:
                        return "[ve čtvrtek v] LT";

                      case 5:
                        return "[v pátek v] LT";

                      case 6:
                        return "[v sobotu v] LT";
                    }
                },
                lastDay: "[včera v] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[minulou neděli v] LT";

                      case 1:
                      case 2:
                        return "[minulé] dddd [v] LT";

                      case 3:
                        return "[minulou středu v] LT";

                      case 4:
                      case 5:
                        return "[minulý] dddd [v] LT";

                      case 6:
                        return "[minulou sobotu v] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "za %s",
                past: "před %s",
                s: n,
                m: n,
                mm: n,
                h: n,
                hh: n,
                d: n,
                dd: n,
                M: n,
                MM: n,
                y: n,
                yy: n
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return s;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : chuvash (cv)
    //! author : Anatoly Mironov : https://github.com/mirontoli
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("cv", {
            months: "кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав".split("_"),
            monthsShort: "кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш".split("_"),
            weekdays: "вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун".split("_"),
            weekdaysShort: "выр_тун_ытл_юн_кӗҫ_эрн_шӑм".split("_"),
            weekdaysMin: "вр_тн_ыт_юн_кҫ_эр_шм".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD-MM-YYYY",
                LL: "YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]",
                LLL: "YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm",
                LLLL: "dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm"
            },
            calendar: {
                sameDay: "[Паян] LT [сехетре]",
                nextDay: "[Ыран] LT [сехетре]",
                lastDay: "[Ӗнер] LT [сехетре]",
                nextWeek: "[Ҫитес] dddd LT [сехетре]",
                lastWeek: "[Иртнӗ] dddd LT [сехетре]",
                sameElse: "L"
            },
            relativeTime: {
                future: function(e) {
                    var t = /сехет$/i.exec(e) ? "рен" : /ҫул$/i.exec(e) ? "тан" : "ран";
                    return e + t;
                },
                past: "%s каялла",
                s: "пӗр-ик ҫеккунт",
                m: "пӗр минут",
                mm: "%d минут",
                h: "пӗр сехет",
                hh: "%d сехет",
                d: "пӗр кун",
                dd: "%d кун",
                M: "пӗр уйӑх",
                MM: "%d уйӑх",
                y: "пӗр ҫул",
                yy: "%d ҫул"
            },
            ordinalParse: /\d{1,2}-мӗш/,
            ordinal: "%d-мӗш",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Welsh (cy)
    //! author : Robert Allen
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("cy", {
            months: "Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr".split("_"),
            monthsShort: "Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag".split("_"),
            weekdays: "Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn".split("_"),
            weekdaysShort: "Sul_Llun_Maw_Mer_Iau_Gwe_Sad".split("_"),
            weekdaysMin: "Su_Ll_Ma_Me_Ia_Gw_Sa".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Heddiw am] LT",
                nextDay: "[Yfory am] LT",
                nextWeek: "dddd [am] LT",
                lastDay: "[Ddoe am] LT",
                lastWeek: "dddd [diwethaf am] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "mewn %s",
                past: "%s yn ôl",
                s: "ychydig eiliadau",
                m: "munud",
                mm: "%d munud",
                h: "awr",
                hh: "%d awr",
                d: "diwrnod",
                dd: "%d diwrnod",
                M: "mis",
                MM: "%d mis",
                y: "blwyddyn",
                yy: "%d flynedd"
            },
            ordinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
            ordinal: function(e) {
                var t = e, n = "", a = [ "", "af", "il", "ydd", "ydd", "ed", "ed", "ed", "fed", "fed", "fed", "eg", "fed", "eg", "eg", "fed", "eg", "eg", "fed", "eg", "fed" ];
                return t > 20 ? n = 40 === t || 50 === t || 60 === t || 80 === t || 100 === t ? "fed" : "ain" : t > 0 && (n = a[t]), 
                e + n;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : danish (da)
    //! author : Ulrik Nielsen : https://github.com/mrbase
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("da", {
            months: "januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december".split("_"),
            monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
            weekdays: "søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split("_"),
            weekdaysShort: "søn_man_tir_ons_tor_fre_lør".split("_"),
            weekdaysMin: "sø_ma_ti_on_to_fr_lø".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY HH:mm",
                LLLL: "dddd [d.] D. MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[I dag kl.] LT",
                nextDay: "[I morgen kl.] LT",
                nextWeek: "dddd [kl.] LT",
                lastDay: "[I går kl.] LT",
                lastWeek: "[sidste] dddd [kl] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "om %s",
                past: "%s siden",
                s: "få sekunder",
                m: "et minut",
                mm: "%d minutter",
                h: "en time",
                hh: "%d timer",
                d: "en dag",
                dd: "%d dage",
                M: "en måned",
                MM: "%d måneder",
                y: "et år",
                yy: "%d år"
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : german (de)
    //! author : lluchs : https://github.com/lluchs
    //! author: Menelion Elensúle: https://github.com/Oire
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t, n, a) {
            var r = {
                m: [ "eine Minute", "einer Minute" ],
                h: [ "eine Stunde", "einer Stunde" ],
                d: [ "ein Tag", "einem Tag" ],
                dd: [ e + " Tage", e + " Tagen" ],
                M: [ "ein Monat", "einem Monat" ],
                MM: [ e + " Monate", e + " Monaten" ],
                y: [ "ein Jahr", "einem Jahr" ],
                yy: [ e + " Jahre", e + " Jahren" ]
            };
            return t ? r[n][0] : r[n][1];
        }
        var n = e.defineLocale("de", {
            months: "Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
            monthsShort: "Jan._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
            weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
            weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
            weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY HH:mm",
                LLLL: "dddd, D. MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Heute um] LT [Uhr]",
                sameElse: "L",
                nextDay: "[Morgen um] LT [Uhr]",
                nextWeek: "dddd [um] LT [Uhr]",
                lastDay: "[Gestern um] LT [Uhr]",
                lastWeek: "[letzten] dddd [um] LT [Uhr]"
            },
            relativeTime: {
                future: "in %s",
                past: "vor %s",
                s: "ein paar Sekunden",
                m: t,
                mm: "%d Minuten",
                h: t,
                hh: "%d Stunden",
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return n;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : austrian german (de-at)
    //! author : lluchs : https://github.com/lluchs
    //! author: Menelion Elensúle: https://github.com/Oire
    //! author : Martin Groller : https://github.com/MadMG
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t, n, a) {
            var r = {
                m: [ "eine Minute", "einer Minute" ],
                h: [ "eine Stunde", "einer Stunde" ],
                d: [ "ein Tag", "einem Tag" ],
                dd: [ e + " Tage", e + " Tagen" ],
                M: [ "ein Monat", "einem Monat" ],
                MM: [ e + " Monate", e + " Monaten" ],
                y: [ "ein Jahr", "einem Jahr" ],
                yy: [ e + " Jahre", e + " Jahren" ]
            };
            return t ? r[n][0] : r[n][1];
        }
        var n = e.defineLocale("de-at", {
            months: "Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
            monthsShort: "Jän._Febr._Mrz._Apr._Mai_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
            weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
            weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
            weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY HH:mm",
                LLLL: "dddd, D. MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Heute um] LT [Uhr]",
                sameElse: "L",
                nextDay: "[Morgen um] LT [Uhr]",
                nextWeek: "dddd [um] LT [Uhr]",
                lastDay: "[Gestern um] LT [Uhr]",
                lastWeek: "[letzten] dddd [um] LT [Uhr]"
            },
            relativeTime: {
                future: "in %s",
                past: "vor %s",
                s: "ein paar Sekunden",
                m: t,
                mm: "%d Minuten",
                h: t,
                hh: "%d Stunden",
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return n;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : modern greek (el)
    //! author : Aggelos Karalias : https://github.com/mehiel
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("el", {
            monthsNominativeEl: "Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος".split("_"),
            monthsGenitiveEl: "Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου".split("_"),
            months: function(e, t) {
                return /D/.test(t.substring(0, t.indexOf("MMMM"))) ? this._monthsGenitiveEl[e.month()] : this._monthsNominativeEl[e.month()];
            },
            monthsShort: "Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ".split("_"),
            weekdays: "Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο".split("_"),
            weekdaysShort: "Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ".split("_"),
            weekdaysMin: "Κυ_Δε_Τρ_Τε_Πε_Πα_Σα".split("_"),
            meridiem: function(e, t, n) {
                return e > 11 ? n ? "μμ" : "ΜΜ" : n ? "πμ" : "ΠΜ";
            },
            isPM: function(e) {
                return "μ" === (e + "").toLowerCase()[0];
            },
            meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
            longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY h:mm A",
                LLLL: "dddd, D MMMM YYYY h:mm A"
            },
            calendarEl: {
                sameDay: "[Σήμερα {}] LT",
                nextDay: "[Αύριο {}] LT",
                nextWeek: "dddd [{}] LT",
                lastDay: "[Χθες {}] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 6:
                        return "[το προηγούμενο] dddd [{}] LT";

                      default:
                        return "[την προηγούμενη] dddd [{}] LT";
                    }
                },
                sameElse: "L"
            },
            calendar: function(e, t) {
                var n = this._calendarEl[e], a = t && t.hours();
                return "function" == typeof n && (n = n.apply(t)), n.replace("{}", a % 12 === 1 ? "στη" : "στις");
            },
            relativeTime: {
                future: "σε %s",
                past: "%s πριν",
                s: "λίγα δευτερόλεπτα",
                m: "ένα λεπτό",
                mm: "%d λεπτά",
                h: "μία ώρα",
                hh: "%d ώρες",
                d: "μία μέρα",
                dd: "%d μέρες",
                M: "ένας μήνας",
                MM: "%d μήνες",
                y: "ένας χρόνος",
                yy: "%d χρόνια"
            },
            ordinalParse: /\d{1,2}η/,
            ordinal: "%dη",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : australian english (en-au)
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("en-au", {
            months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
            monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
            weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
            weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
            weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
            longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY h:mm A",
                LLLL: "dddd, D MMMM YYYY h:mm A"
            },
            calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
            },
            ordinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function(e) {
                var t = e % 10, n = 1 === ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th";
                return e + n;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : canadian english (en-ca)
    //! author : Jonathan Abourbih : https://github.com/jonbca
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("en-ca", {
            months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
            monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
            weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
            weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
            weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
            longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "YYYY-MM-DD",
                LL: "D MMMM, YYYY",
                LLL: "D MMMM, YYYY h:mm A",
                LLLL: "dddd, D MMMM, YYYY h:mm A"
            },
            calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
            },
            ordinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function(e) {
                var t = e % 10, n = 1 === ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th";
                return e + n;
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : great britain english (en-gb)
    //! author : Chris Gedrim : https://github.com/chrisgedrim
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("en-gb", {
            months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
            monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
            weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
            weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
            weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
            },
            ordinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function(e) {
                var t = e % 10, n = 1 === ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th";
                return e + n;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : esperanto (eo)
    //! author : Colin Dean : https://github.com/colindean
    //! komento: Mi estas malcerta se mi korekte traktis akuzativojn en tiu traduko.
    //!          Se ne, bonvolu korekti kaj avizi min por ke mi povas lerni!
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("eo", {
            months: "januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro".split("_"),
            monthsShort: "jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec".split("_"),
            weekdays: "Dimanĉo_Lundo_Mardo_Merkredo_Ĵaŭdo_Vendredo_Sabato".split("_"),
            weekdaysShort: "Dim_Lun_Mard_Merk_Ĵaŭ_Ven_Sab".split("_"),
            weekdaysMin: "Di_Lu_Ma_Me_Ĵa_Ve_Sa".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "D[-an de] MMMM, YYYY",
                LLL: "D[-an de] MMMM, YYYY HH:mm",
                LLLL: "dddd, [la] D[-an de] MMMM, YYYY HH:mm"
            },
            meridiemParse: /[ap]\.t\.m/i,
            isPM: function(e) {
                return "p" === e.charAt(0).toLowerCase();
            },
            meridiem: function(e, t, n) {
                return e > 11 ? n ? "p.t.m." : "P.T.M." : n ? "a.t.m." : "A.T.M.";
            },
            calendar: {
                sameDay: "[Hodiaŭ je] LT",
                nextDay: "[Morgaŭ je] LT",
                nextWeek: "dddd [je] LT",
                lastDay: "[Hieraŭ je] LT",
                lastWeek: "[pasinta] dddd [je] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "je %s",
                past: "antaŭ %s",
                s: "sekundoj",
                m: "minuto",
                mm: "%d minutoj",
                h: "horo",
                hh: "%d horoj",
                d: "tago",
                dd: "%d tagoj",
                M: "monato",
                MM: "%d monatoj",
                y: "jaro",
                yy: "%d jaroj"
            },
            ordinalParse: /\d{1,2}a/,
            ordinal: "%da",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : spanish (es)
    //! author : Julio Napurí : https://github.com/julionc
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = "Ene._Feb._Mar._Abr._May._Jun._Jul._Ago._Sep._Oct._Nov._Dic.".split("_"), n = "Ene_Feb_Mar_Abr_May_Jun_Jul_Ago_Sep_Oct_Nov_Dic".split("_"), a = e.defineLocale("es", {
            months: "Enero_Febrero_Marzo_Abril_Mayo_Junio_Julio_Agosto_Septiembre_Octubre_Noviembre_Diciembre".split("_"),
            monthsShort: function(e, a) {
                return /-MMM-/.test(a) ? n[e.month()] : t[e.month()];
            },
            weekdays: "Domingo_Lunes_Martes_Miércoles_Jueves_Viernes_Sábado".split("_"),
            weekdaysShort: "Dom._Lun._Mar._Mié._Jue._Vie._Sáb.".split("_"),
            weekdaysMin: "Do_Lu_Ma_Mi_Ju_Vi_Sá".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D [de] MMMM [de] YYYY",
                LLL: "D [de] MMMM [de] YYYY H:mm",
                LLLL: "dddd, D [de] MMMM [de] YYYY H:mm"
            },
            calendar: {
                sameDay: function() {
                    return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                nextDay: function() {
                    return "[mañana a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                nextWeek: function() {
                    return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                lastDay: function() {
                    return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                lastWeek: function() {
                    return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "en %s",
                past: "hace %s",
                s: "unos segundos",
                m: "un minuto",
                mm: "%d minutos",
                h: "una hora",
                hh: "%d horas",
                d: "un día",
                dd: "%d días",
                M: "un mes",
                MM: "%d meses",
                y: "un año",
                yy: "%d años"
            },
            ordinalParse: /\d{1,2}º/,
            ordinal: "%dº",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return a;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : estonian (et)
    //! author : Henry Kehlmann : https://github.com/madhenry
    //! improvements : Illimar Tambek : https://github.com/ragulka
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t, n, a) {
            var r = {
                s: [ "mõne sekundi", "mõni sekund", "paar sekundit" ],
                m: [ "ühe minuti", "üks minut" ],
                mm: [ e + " minuti", e + " minutit" ],
                h: [ "ühe tunni", "tund aega", "üks tund" ],
                hh: [ e + " tunni", e + " tundi" ],
                d: [ "ühe päeva", "üks päev" ],
                M: [ "kuu aja", "kuu aega", "üks kuu" ],
                MM: [ e + " kuu", e + " kuud" ],
                y: [ "ühe aasta", "aasta", "üks aasta" ],
                yy: [ e + " aasta", e + " aastat" ]
            };
            return t ? r[n][2] ? r[n][2] : r[n][1] : a ? r[n][0] : r[n][1];
        }
        var n = e.defineLocale("et", {
            months: "jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember".split("_"),
            monthsShort: "jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets".split("_"),
            weekdays: "pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev".split("_"),
            weekdaysShort: "P_E_T_K_N_R_L".split("_"),
            weekdaysMin: "P_E_T_K_N_R_L".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd, D. MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[Täna,] LT",
                nextDay: "[Homme,] LT",
                nextWeek: "[Järgmine] dddd LT",
                lastDay: "[Eile,] LT",
                lastWeek: "[Eelmine] dddd LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s pärast",
                past: "%s tagasi",
                s: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: "%d päeva",
                M: t,
                MM: t,
                y: t,
                yy: t
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return n;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : euskara (eu)
    //! author : Eneko Illarramendi : https://github.com/eillarra
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("eu", {
            months: "urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua".split("_"),
            monthsShort: "urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.".split("_"),
            weekdays: "igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata".split("_"),
            weekdaysShort: "ig._al._ar._az._og._ol._lr.".split("_"),
            weekdaysMin: "ig_al_ar_az_og_ol_lr".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "YYYY[ko] MMMM[ren] D[a]",
                LLL: "YYYY[ko] MMMM[ren] D[a] HH:mm",
                LLLL: "dddd, YYYY[ko] MMMM[ren] D[a] HH:mm",
                l: "YYYY-M-D",
                ll: "YYYY[ko] MMM D[a]",
                lll: "YYYY[ko] MMM D[a] HH:mm",
                llll: "ddd, YYYY[ko] MMM D[a] HH:mm"
            },
            calendar: {
                sameDay: "[gaur] LT[etan]",
                nextDay: "[bihar] LT[etan]",
                nextWeek: "dddd LT[etan]",
                lastDay: "[atzo] LT[etan]",
                lastWeek: "[aurreko] dddd LT[etan]",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s barru",
                past: "duela %s",
                s: "segundo batzuk",
                m: "minutu bat",
                mm: "%d minutu",
                h: "ordu bat",
                hh: "%d ordu",
                d: "egun bat",
                dd: "%d egun",
                M: "hilabete bat",
                MM: "%d hilabete",
                y: "urte bat",
                yy: "%d urte"
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Persian (fa)
    //! author : Ebrahim Byagowi : https://github.com/ebraminio
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "۱",
            "2": "۲",
            "3": "۳",
            "4": "۴",
            "5": "۵",
            "6": "۶",
            "7": "۷",
            "8": "۸",
            "9": "۹",
            "0": "۰"
        }, n = {
            "۱": "1",
            "۲": "2",
            "۳": "3",
            "۴": "4",
            "۵": "5",
            "۶": "6",
            "۷": "7",
            "۸": "8",
            "۹": "9",
            "۰": "0"
        }, a = e.defineLocale("fa", {
            months: "ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split("_"),
            monthsShort: "ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split("_"),
            weekdays: "یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه".split("_"),
            weekdaysShort: "یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه".split("_"),
            weekdaysMin: "ی_د_س_چ_پ_ج_ش".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            meridiemParse: /قبل از ظهر|بعد از ظهر/,
            isPM: function(e) {
                return /بعد از ظهر/.test(e);
            },
            meridiem: function(e, t, n) {
                return e < 12 ? "قبل از ظهر" : "بعد از ظهر";
            },
            calendar: {
                sameDay: "[امروز ساعت] LT",
                nextDay: "[فردا ساعت] LT",
                nextWeek: "dddd [ساعت] LT",
                lastDay: "[دیروز ساعت] LT",
                lastWeek: "dddd [پیش] [ساعت] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "در %s",
                past: "%s پیش",
                s: "چندین ثانیه",
                m: "یک دقیقه",
                mm: "%d دقیقه",
                h: "یک ساعت",
                hh: "%d ساعت",
                d: "یک روز",
                dd: "%d روز",
                M: "یک ماه",
                MM: "%d ماه",
                y: "یک سال",
                yy: "%d سال"
            },
            preparse: function(e) {
                return e.replace(/[۰-۹]/g, function(e) {
                    return n[e];
                }).replace(/،/g, ",");
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                }).replace(/,/g, "،");
            },
            ordinalParse: /\d{1,2}م/,
            ordinal: "%dم",
            week: {
                dow: 6,
                doy: 12
            }
        });
        return a;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : finnish (fi)
    //! author : Tarmo Aidantausta : https://github.com/bleadof
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t, a, r) {
            var s = "";
            switch (a) {
              case "s":
                return r ? "muutaman sekunnin" : "muutama sekunti";

              case "m":
                return r ? "minuutin" : "minuutti";

              case "mm":
                s = r ? "minuutin" : "minuuttia";
                break;

              case "h":
                return r ? "tunnin" : "tunti";

              case "hh":
                s = r ? "tunnin" : "tuntia";
                break;

              case "d":
                return r ? "päivän" : "päivä";

              case "dd":
                s = r ? "päivän" : "päivää";
                break;

              case "M":
                return r ? "kuukauden" : "kuukausi";

              case "MM":
                s = r ? "kuukauden" : "kuukautta";
                break;

              case "y":
                return r ? "vuoden" : "vuosi";

              case "yy":
                s = r ? "vuoden" : "vuotta";
            }
            return s = n(e, r) + " " + s;
        }
        function n(e, t) {
            return e < 10 ? t ? r[e] : a[e] : e;
        }
        var a = "nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän".split(" "), r = [ "nolla", "yhden", "kahden", "kolmen", "neljän", "viiden", "kuuden", a[7], a[8], a[9] ], s = e.defineLocale("fi", {
            months: "tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu".split("_"),
            monthsShort: "tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu".split("_"),
            weekdays: "sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai".split("_"),
            weekdaysShort: "su_ma_ti_ke_to_pe_la".split("_"),
            weekdaysMin: "su_ma_ti_ke_to_pe_la".split("_"),
            longDateFormat: {
                LT: "HH.mm",
                LTS: "HH.mm.ss",
                L: "DD.MM.YYYY",
                LL: "Do MMMM[ta] YYYY",
                LLL: "Do MMMM[ta] YYYY, [klo] HH.mm",
                LLLL: "dddd, Do MMMM[ta] YYYY, [klo] HH.mm",
                l: "D.M.YYYY",
                ll: "Do MMM YYYY",
                lll: "Do MMM YYYY, [klo] HH.mm",
                llll: "ddd, Do MMM YYYY, [klo] HH.mm"
            },
            calendar: {
                sameDay: "[tänään] [klo] LT",
                nextDay: "[huomenna] [klo] LT",
                nextWeek: "dddd [klo] LT",
                lastDay: "[eilen] [klo] LT",
                lastWeek: "[viime] dddd[na] [klo] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s päästä",
                past: "%s sitten",
                s: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return s;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : faroese (fo)
    //! author : Ragnar Johannesen : https://github.com/ragnar123
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("fo", {
            months: "januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember".split("_"),
            monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
            weekdays: "sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur".split("_"),
            weekdaysShort: "sun_mán_týs_mik_hós_frí_ley".split("_"),
            weekdaysMin: "su_má_tý_mi_hó_fr_le".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D. MMMM, YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Í dag kl.] LT",
                nextDay: "[Í morgin kl.] LT",
                nextWeek: "dddd [kl.] LT",
                lastDay: "[Í gjár kl.] LT",
                lastWeek: "[síðstu] dddd [kl] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "um %s",
                past: "%s síðani",
                s: "fá sekund",
                m: "ein minutt",
                mm: "%d minuttir",
                h: "ein tími",
                hh: "%d tímar",
                d: "ein dagur",
                dd: "%d dagar",
                M: "ein mánaði",
                MM: "%d mánaðir",
                y: "eitt ár",
                yy: "%d ár"
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : french (fr)
    //! author : John Fischer : https://github.com/jfroffice
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("fr", {
            months: "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),
            monthsShort: "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),
            weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
            weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
            weekdaysMin: "Di_Lu_Ma_Me_Je_Ve_Sa".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Aujourd'hui à] LT",
                nextDay: "[Demain à] LT",
                nextWeek: "dddd [à] LT",
                lastDay: "[Hier à] LT",
                lastWeek: "dddd [dernier à] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "dans %s",
                past: "il y a %s",
                s: "quelques secondes",
                m: "une minute",
                mm: "%d minutes",
                h: "une heure",
                hh: "%d heures",
                d: "un jour",
                dd: "%d jours",
                M: "un mois",
                MM: "%d mois",
                y: "un an",
                yy: "%d ans"
            },
            ordinalParse: /\d{1,2}(er|)/,
            ordinal: function(e) {
                return e + (1 === e ? "er" : "");
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : canadian french (fr-ca)
    //! author : Jonathan Abourbih : https://github.com/jonbca
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("fr-ca", {
            months: "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),
            monthsShort: "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),
            weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
            weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
            weekdaysMin: "Di_Lu_Ma_Me_Je_Ve_Sa".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Aujourd'hui à] LT",
                nextDay: "[Demain à] LT",
                nextWeek: "dddd [à] LT",
                lastDay: "[Hier à] LT",
                lastWeek: "dddd [dernier à] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "dans %s",
                past: "il y a %s",
                s: "quelques secondes",
                m: "une minute",
                mm: "%d minutes",
                h: "une heure",
                hh: "%d heures",
                d: "un jour",
                dd: "%d jours",
                M: "un mois",
                MM: "%d mois",
                y: "un an",
                yy: "%d ans"
            },
            ordinalParse: /\d{1,2}(er|e)/,
            ordinal: function(e) {
                return e + (1 === e ? "er" : "e");
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : frisian (fy)
    //! author : Robin van der Vliet : https://github.com/robin0van0der0v
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = "jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.".split("_"), n = "jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"), a = e.defineLocale("fy", {
            months: "jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber".split("_"),
            monthsShort: function(e, a) {
                return /-MMM-/.test(a) ? n[e.month()] : t[e.month()];
            },
            weekdays: "snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon".split("_"),
            weekdaysShort: "si._mo._ti._wo._to._fr._so.".split("_"),
            weekdaysMin: "Si_Mo_Ti_Wo_To_Fr_So".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD-MM-YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[hjoed om] LT",
                nextDay: "[moarn om] LT",
                nextWeek: "dddd [om] LT",
                lastDay: "[juster om] LT",
                lastWeek: "[ôfrûne] dddd [om] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "oer %s",
                past: "%s lyn",
                s: "in pear sekonden",
                m: "ien minút",
                mm: "%d minuten",
                h: "ien oere",
                hh: "%d oeren",
                d: "ien dei",
                dd: "%d dagen",
                M: "ien moanne",
                MM: "%d moannen",
                y: "ien jier",
                yy: "%d jierren"
            },
            ordinalParse: /\d{1,2}(ste|de)/,
            ordinal: function(e) {
                return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de");
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return a;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : galician (gl)
    //! author : Juan G. Hurtado : https://github.com/juanghurtado
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("gl", {
            months: "Xaneiro_Febreiro_Marzo_Abril_Maio_Xuño_Xullo_Agosto_Setembro_Outubro_Novembro_Decembro".split("_"),
            monthsShort: "Xan._Feb._Mar._Abr._Mai._Xuñ._Xul._Ago._Set._Out._Nov._Dec.".split("_"),
            weekdays: "Domingo_Luns_Martes_Mércores_Xoves_Venres_Sábado".split("_"),
            weekdaysShort: "Dom._Lun._Mar._Mér._Xov._Ven._Sáb.".split("_"),
            weekdaysMin: "Do_Lu_Ma_Mé_Xo_Ve_Sá".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY H:mm",
                LLLL: "dddd D MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: function() {
                    return "[hoxe " + (1 !== this.hours() ? "ás" : "á") + "] LT";
                },
                nextDay: function() {
                    return "[mañá " + (1 !== this.hours() ? "ás" : "á") + "] LT";
                },
                nextWeek: function() {
                    return "dddd [" + (1 !== this.hours() ? "ás" : "a") + "] LT";
                },
                lastDay: function() {
                    return "[onte " + (1 !== this.hours() ? "á" : "a") + "] LT";
                },
                lastWeek: function() {
                    return "[o] dddd [pasado " + (1 !== this.hours() ? "ás" : "a") + "] LT";
                },
                sameElse: "L"
            },
            relativeTime: {
                future: function(e) {
                    return "uns segundos" === e ? "nuns segundos" : "en " + e;
                },
                past: "hai %s",
                s: "uns segundos",
                m: "un minuto",
                mm: "%d minutos",
                h: "unha hora",
                hh: "%d horas",
                d: "un día",
                dd: "%d días",
                M: "un mes",
                MM: "%d meses",
                y: "un ano",
                yy: "%d anos"
            },
            ordinalParse: /\d{1,2}º/,
            ordinal: "%dº",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Hebrew (he)
    //! author : Tomer Cohen : https://github.com/tomer
    //! author : Moshe Simantov : https://github.com/DevelopmentIL
    //! author : Tal Ater : https://github.com/TalAter
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("he", {
            months: "ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר".split("_"),
            monthsShort: "ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳".split("_"),
            weekdays: "ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת".split("_"),
            weekdaysShort: "א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳".split("_"),
            weekdaysMin: "א_ב_ג_ד_ה_ו_ש".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D [ב]MMMM YYYY",
                LLL: "D [ב]MMMM YYYY HH:mm",
                LLLL: "dddd, D [ב]MMMM YYYY HH:mm",
                l: "D/M/YYYY",
                ll: "D MMM YYYY",
                lll: "D MMM YYYY HH:mm",
                llll: "ddd, D MMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[היום ב־]LT",
                nextDay: "[מחר ב־]LT",
                nextWeek: "dddd [בשעה] LT",
                lastDay: "[אתמול ב־]LT",
                lastWeek: "[ביום] dddd [האחרון בשעה] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "בעוד %s",
                past: "לפני %s",
                s: "מספר שניות",
                m: "דקה",
                mm: "%d דקות",
                h: "שעה",
                hh: function(e) {
                    return 2 === e ? "שעתיים" : e + " שעות";
                },
                d: "יום",
                dd: function(e) {
                    return 2 === e ? "יומיים" : e + " ימים";
                },
                M: "חודש",
                MM: function(e) {
                    return 2 === e ? "חודשיים" : e + " חודשים";
                },
                y: "שנה",
                yy: function(e) {
                    return 2 === e ? "שנתיים" : e % 10 === 0 && 10 !== e ? e + " שנה" : e + " שנים";
                }
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : hindi (hi)
    //! author : Mayank Singhal : https://github.com/mayanksinghal
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "१",
            "2": "२",
            "3": "३",
            "4": "४",
            "5": "५",
            "6": "६",
            "7": "७",
            "8": "८",
            "9": "९",
            "0": "०"
        }, n = {
            "१": "1",
            "२": "2",
            "३": "3",
            "४": "4",
            "५": "5",
            "६": "6",
            "७": "7",
            "८": "8",
            "९": "9",
            "०": "0"
        }, a = e.defineLocale("hi", {
            months: "जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर".split("_"),
            monthsShort: "जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.".split("_"),
            weekdays: "रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),
            weekdaysShort: "रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि".split("_"),
            weekdaysMin: "र_सो_मं_बु_गु_शु_श".split("_"),
            longDateFormat: {
                LT: "A h:mm बजे",
                LTS: "A h:mm:ss बजे",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm बजे",
                LLLL: "dddd, D MMMM YYYY, A h:mm बजे"
            },
            calendar: {
                sameDay: "[आज] LT",
                nextDay: "[कल] LT",
                nextWeek: "dddd, LT",
                lastDay: "[कल] LT",
                lastWeek: "[पिछले] dddd, LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s में",
                past: "%s पहले",
                s: "कुछ ही क्षण",
                m: "एक मिनट",
                mm: "%d मिनट",
                h: "एक घंटा",
                hh: "%d घंटे",
                d: "एक दिन",
                dd: "%d दिन",
                M: "एक महीने",
                MM: "%d महीने",
                y: "एक वर्ष",
                yy: "%d वर्ष"
            },
            preparse: function(e) {
                return e.replace(/[१२३४५६७८९०]/g, function(e) {
                    return n[e];
                });
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                });
            },
            meridiemParse: /रात|सुबह|दोपहर|शाम/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "रात" === t ? e < 4 ? e : e + 12 : "सुबह" === t ? e : "दोपहर" === t ? e >= 10 ? e : e + 12 : "शाम" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, n) {
                return e < 4 ? "रात" : e < 10 ? "सुबह" : e < 17 ? "दोपहर" : e < 20 ? "शाम" : "रात";
            },
            week: {
                dow: 0,
                doy: 6
            }
        });
        return a;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : hrvatski (hr)
    //! author : Bojan Marković : https://github.com/bmarkovic
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t, n) {
            var a = e + " ";
            switch (n) {
              case "m":
                return t ? "jedna minuta" : "jedne minute";

              case "mm":
                return a += 1 === e ? "minuta" : 2 === e || 3 === e || 4 === e ? "minute" : "minuta";

              case "h":
                return t ? "jedan sat" : "jednog sata";

              case "hh":
                return a += 1 === e ? "sat" : 2 === e || 3 === e || 4 === e ? "sata" : "sati";

              case "dd":
                return a += 1 === e ? "dan" : "dana";

              case "MM":
                return a += 1 === e ? "mjesec" : 2 === e || 3 === e || 4 === e ? "mjeseca" : "mjeseci";

              case "yy":
                return a += 1 === e ? "godina" : 2 === e || 3 === e || 4 === e ? "godine" : "godina";
            }
        }
        var n = e.defineLocale("hr", {
            months: "siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac".split("_"),
            monthsShort: "sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.".split("_"),
            weekdays: "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),
            weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
            weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD. MM. YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd, D. MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[danas u] LT",
                nextDay: "[sutra u] LT",
                nextWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[u] [nedjelju] [u] LT";

                      case 3:
                        return "[u] [srijedu] [u] LT";

                      case 6:
                        return "[u] [subotu] [u] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[u] dddd [u] LT";
                    }
                },
                lastDay: "[jučer u] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                      case 3:
                        return "[prošlu] dddd [u] LT";

                      case 6:
                        return "[prošle] [subote] [u] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[prošli] dddd [u] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "za %s",
                past: "prije %s",
                s: "par sekundi",
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: "dan",
                dd: t,
                M: "mjesec",
                MM: t,
                y: "godinu",
                yy: t
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return n;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : hungarian (hu)
    //! author : Adam Brunner : https://github.com/adambrunner
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t, n, a) {
            var r = e;
            switch (n) {
              case "s":
                return a || t ? "néhány másodperc" : "néhány másodperce";

              case "m":
                return "egy" + (a || t ? " perc" : " perce");

              case "mm":
                return r + (a || t ? " perc" : " perce");

              case "h":
                return "egy" + (a || t ? " óra" : " órája");

              case "hh":
                return r + (a || t ? " óra" : " órája");

              case "d":
                return "egy" + (a || t ? " nap" : " napja");

              case "dd":
                return r + (a || t ? " nap" : " napja");

              case "M":
                return "egy" + (a || t ? " hónap" : " hónapja");

              case "MM":
                return r + (a || t ? " hónap" : " hónapja");

              case "y":
                return "egy" + (a || t ? " év" : " éve");

              case "yy":
                return r + (a || t ? " év" : " éve");
            }
            return "";
        }
        function n(e) {
            return (e ? "" : "[múlt] ") + "[" + a[this.day()] + "] LT[-kor]";
        }
        var a = "vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton".split(" "), r = e.defineLocale("hu", {
            months: "január_február_március_április_május_június_július_augusztus_szeptember_október_november_december".split("_"),
            monthsShort: "jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec".split("_"),
            weekdays: "vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat".split("_"),
            weekdaysShort: "vas_hét_kedd_sze_csüt_pén_szo".split("_"),
            weekdaysMin: "v_h_k_sze_cs_p_szo".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "YYYY.MM.DD.",
                LL: "YYYY. MMMM D.",
                LLL: "YYYY. MMMM D. H:mm",
                LLLL: "YYYY. MMMM D., dddd H:mm"
            },
            meridiemParse: /de|du/i,
            isPM: function(e) {
                return "u" === e.charAt(1).toLowerCase();
            },
            meridiem: function(e, t, n) {
                return e < 12 ? n === !0 ? "de" : "DE" : n === !0 ? "du" : "DU";
            },
            calendar: {
                sameDay: "[ma] LT[-kor]",
                nextDay: "[holnap] LT[-kor]",
                nextWeek: function() {
                    return n.call(this, !0);
                },
                lastDay: "[tegnap] LT[-kor]",
                lastWeek: function() {
                    return n.call(this, !1);
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "%s múlva",
                past: "%s",
                s: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return r;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Armenian (hy-am)
    //! author : Armendarabyan : https://github.com/armendarabyan
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t) {
            var n = {
                nominative: "հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր".split("_"),
                accusative: "հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի".split("_")
            }, a = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(t) ? "accusative" : "nominative";
            return n[a][e.month()];
        }
        function n(e, t) {
            var n = "հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ".split("_");
            return n[e.month()];
        }
        function a(e, t) {
            var n = "կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ".split("_");
            return n[e.day()];
        }
        var r = e.defineLocale("hy-am", {
            months: t,
            monthsShort: n,
            weekdays: a,
            weekdaysShort: "կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),
            weekdaysMin: "կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY թ.",
                LLL: "D MMMM YYYY թ., HH:mm",
                LLLL: "dddd, D MMMM YYYY թ., HH:mm"
            },
            calendar: {
                sameDay: "[այսօր] LT",
                nextDay: "[վաղը] LT",
                lastDay: "[երեկ] LT",
                nextWeek: function() {
                    return "dddd [օրը ժամը] LT";
                },
                lastWeek: function() {
                    return "[անցած] dddd [օրը ժամը] LT";
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "%s հետո",
                past: "%s առաջ",
                s: "մի քանի վայրկյան",
                m: "րոպե",
                mm: "%d րոպե",
                h: "ժամ",
                hh: "%d ժամ",
                d: "օր",
                dd: "%d օր",
                M: "ամիս",
                MM: "%d ամիս",
                y: "տարի",
                yy: "%d տարի"
            },
            meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
            isPM: function(e) {
                return /^(ցերեկվա|երեկոյան)$/.test(e);
            },
            meridiem: function(e) {
                return e < 4 ? "գիշերվա" : e < 12 ? "առավոտվա" : e < 17 ? "ցերեկվա" : "երեկոյան";
            },
            ordinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
            ordinal: function(e, t) {
                switch (t) {
                  case "DDD":
                  case "w":
                  case "W":
                  case "DDDo":
                    return 1 === e ? e + "-ին" : e + "-րդ";

                  default:
                    return e;
                }
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return r;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Bahasa Indonesia (id)
    //! author : Mohammad Satrio Utomo : https://github.com/tyok
    //! reference: http://id.wikisource.org/wiki/Pedoman_Umum_Ejaan_Bahasa_Indonesia_yang_Disempurnakan
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("id", {
            months: "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember".split("_"),
            monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nov_Des".split("_"),
            weekdays: "Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu".split("_"),
            weekdaysShort: "Min_Sen_Sel_Rab_Kam_Jum_Sab".split("_"),
            weekdaysMin: "Mg_Sn_Sl_Rb_Km_Jm_Sb".split("_"),
            longDateFormat: {
                LT: "HH.mm",
                LTS: "HH.mm.ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY [pukul] HH.mm",
                LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
            },
            meridiemParse: /pagi|siang|sore|malam/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "pagi" === t ? e : "siang" === t ? e >= 11 ? e : e + 12 : "sore" === t || "malam" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, n) {
                return e < 11 ? "pagi" : e < 15 ? "siang" : e < 19 ? "sore" : "malam";
            },
            calendar: {
                sameDay: "[Hari ini pukul] LT",
                nextDay: "[Besok pukul] LT",
                nextWeek: "dddd [pukul] LT",
                lastDay: "[Kemarin pukul] LT",
                lastWeek: "dddd [lalu pukul] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "dalam %s",
                past: "%s yang lalu",
                s: "beberapa detik",
                m: "semenit",
                mm: "%d menit",
                h: "sejam",
                hh: "%d jam",
                d: "sehari",
                dd: "%d hari",
                M: "sebulan",
                MM: "%d bulan",
                y: "setahun",
                yy: "%d tahun"
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : icelandic (is)
    //! author : Hinrik Örn Sigurðsson : https://github.com/hinrik
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e) {
            return e % 100 === 11 || e % 10 !== 1;
        }
        function n(e, n, a, r) {
            var s = e + " ";
            switch (a) {
              case "s":
                return n || r ? "nokkrar sekúndur" : "nokkrum sekúndum";

              case "m":
                return n ? "mínúta" : "mínútu";

              case "mm":
                return t(e) ? s + (n || r ? "mínútur" : "mínútum") : n ? s + "mínúta" : s + "mínútu";

              case "hh":
                return t(e) ? s + (n || r ? "klukkustundir" : "klukkustundum") : s + "klukkustund";

              case "d":
                return n ? "dagur" : r ? "dag" : "degi";

              case "dd":
                return t(e) ? n ? s + "dagar" : s + (r ? "daga" : "dögum") : n ? s + "dagur" : s + (r ? "dag" : "degi");

              case "M":
                return n ? "mánuður" : r ? "mánuð" : "mánuði";

              case "MM":
                return t(e) ? n ? s + "mánuðir" : s + (r ? "mánuði" : "mánuðum") : n ? s + "mánuður" : s + (r ? "mánuð" : "mánuði");

              case "y":
                return n || r ? "ár" : "ári";

              case "yy":
                return t(e) ? s + (n || r ? "ár" : "árum") : s + (n || r ? "ár" : "ári");
            }
        }
        var a = e.defineLocale("is", {
            months: "janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember".split("_"),
            monthsShort: "jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des".split("_"),
            weekdays: "sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur".split("_"),
            weekdaysShort: "sun_mán_þri_mið_fim_fös_lau".split("_"),
            weekdaysMin: "Su_Má_Þr_Mi_Fi_Fö_La".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY [kl.] H:mm",
                LLLL: "dddd, D. MMMM YYYY [kl.] H:mm"
            },
            calendar: {
                sameDay: "[í dag kl.] LT",
                nextDay: "[á morgun kl.] LT",
                nextWeek: "dddd [kl.] LT",
                lastDay: "[í gær kl.] LT",
                lastWeek: "[síðasta] dddd [kl.] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "eftir %s",
                past: "fyrir %s síðan",
                s: n,
                m: n,
                mm: n,
                h: "klukkustund",
                hh: n,
                d: n,
                dd: n,
                M: n,
                MM: n,
                y: n,
                yy: n
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return a;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : italian (it)
    //! author : Lorenzo : https://github.com/aliem
    //! author: Mattia Larentis: https://github.com/nostalgiaz
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("it", {
            months: "gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split("_"),
            monthsShort: "gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split("_"),
            weekdays: "Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato".split("_"),
            weekdaysShort: "Dom_Lun_Mar_Mer_Gio_Ven_Sab".split("_"),
            weekdaysMin: "D_L_Ma_Me_G_V_S".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Oggi alle] LT",
                nextDay: "[Domani alle] LT",
                nextWeek: "dddd [alle] LT",
                lastDay: "[Ieri alle] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[la scorsa] dddd [alle] LT";

                      default:
                        return "[lo scorso] dddd [alle] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: function(e) {
                    return (/^[0-9].+$/.test(e) ? "tra" : "in") + " " + e;
                },
                past: "%s fa",
                s: "alcuni secondi",
                m: "un minuto",
                mm: "%d minuti",
                h: "un'ora",
                hh: "%d ore",
                d: "un giorno",
                dd: "%d giorni",
                M: "un mese",
                MM: "%d mesi",
                y: "un anno",
                yy: "%d anni"
            },
            ordinalParse: /\d{1,2}º/,
            ordinal: "%dº",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : japanese (ja)
    //! author : LI Long : https://github.com/baryon
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ja", {
            months: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
            monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
            weekdays: "日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日".split("_"),
            weekdaysShort: "日_月_火_水_木_金_土".split("_"),
            weekdaysMin: "日_月_火_水_木_金_土".split("_"),
            longDateFormat: {
                LT: "Ah時m分",
                LTS: "Ah時m分s秒",
                L: "YYYY/MM/DD",
                LL: "YYYY年M月D日",
                LLL: "YYYY年M月D日Ah時m分",
                LLLL: "YYYY年M月D日Ah時m分 dddd"
            },
            meridiemParse: /午前|午後/i,
            isPM: function(e) {
                return "午後" === e;
            },
            meridiem: function(e, t, n) {
                return e < 12 ? "午前" : "午後";
            },
            calendar: {
                sameDay: "[今日] LT",
                nextDay: "[明日] LT",
                nextWeek: "[来週]dddd LT",
                lastDay: "[昨日] LT",
                lastWeek: "[前週]dddd LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s後",
                past: "%s前",
                s: "数秒",
                m: "1分",
                mm: "%d分",
                h: "1時間",
                hh: "%d時間",
                d: "1日",
                dd: "%d日",
                M: "1ヶ月",
                MM: "%dヶ月",
                y: "1年",
                yy: "%d年"
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Boso Jowo (jv)
    //! author : Rony Lantip : https://github.com/lantip
    //! reference: http://jv.wikipedia.org/wiki/Basa_Jawa
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("jv", {
            months: "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember".split("_"),
            monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des".split("_"),
            weekdays: "Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu".split("_"),
            weekdaysShort: "Min_Sen_Sel_Reb_Kem_Jem_Sep".split("_"),
            weekdaysMin: "Mg_Sn_Sl_Rb_Km_Jm_Sp".split("_"),
            longDateFormat: {
                LT: "HH.mm",
                LTS: "HH.mm.ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY [pukul] HH.mm",
                LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
            },
            meridiemParse: /enjing|siyang|sonten|ndalu/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "enjing" === t ? e : "siyang" === t ? e >= 11 ? e : e + 12 : "sonten" === t || "ndalu" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, n) {
                return e < 11 ? "enjing" : e < 15 ? "siyang" : e < 19 ? "sonten" : "ndalu";
            },
            calendar: {
                sameDay: "[Dinten puniko pukul] LT",
                nextDay: "[Mbenjang pukul] LT",
                nextWeek: "dddd [pukul] LT",
                lastDay: "[Kala wingi pukul] LT",
                lastWeek: "dddd [kepengker pukul] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "wonten ing %s",
                past: "%s ingkang kepengker",
                s: "sawetawis detik",
                m: "setunggal menit",
                mm: "%d menit",
                h: "setunggal jam",
                hh: "%d jam",
                d: "sedinten",
                dd: "%d dinten",
                M: "sewulan",
                MM: "%d wulan",
                y: "setaun",
                yy: "%d taun"
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Georgian (ka)
    //! author : Irakli Janiashvili : https://github.com/irakli-janiashvili
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t) {
            var n = {
                nominative: "იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი".split("_"),
                accusative: "იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს".split("_")
            }, a = /D[oD] *MMMM?/.test(t) ? "accusative" : "nominative";
            return n[a][e.month()];
        }
        function n(e, t) {
            var n = {
                nominative: "კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი".split("_"),
                accusative: "კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს".split("_")
            }, a = /(წინა|შემდეგ)/.test(t) ? "accusative" : "nominative";
            return n[a][e.day()];
        }
        var a = e.defineLocale("ka", {
            months: t,
            monthsShort: "იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ".split("_"),
            weekdays: n,
            weekdaysShort: "კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ".split("_"),
            weekdaysMin: "კვ_ორ_სა_ოთ_ხუ_პა_შა".split("_"),
            longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY h:mm A",
                LLLL: "dddd, D MMMM YYYY h:mm A"
            },
            calendar: {
                sameDay: "[დღეს] LT[-ზე]",
                nextDay: "[ხვალ] LT[-ზე]",
                lastDay: "[გუშინ] LT[-ზე]",
                nextWeek: "[შემდეგ] dddd LT[-ზე]",
                lastWeek: "[წინა] dddd LT-ზე",
                sameElse: "L"
            },
            relativeTime: {
                future: function(e) {
                    return /(წამი|წუთი|საათი|წელი)/.test(e) ? e.replace(/ი$/, "ში") : e + "ში";
                },
                past: function(e) {
                    return /(წამი|წუთი|საათი|დღე|თვე)/.test(e) ? e.replace(/(ი|ე)$/, "ის წინ") : /წელი/.test(e) ? e.replace(/წელი$/, "წლის წინ") : void 0;
                },
                s: "რამდენიმე წამი",
                m: "წუთი",
                mm: "%d წუთი",
                h: "საათი",
                hh: "%d საათი",
                d: "დღე",
                dd: "%d დღე",
                M: "თვე",
                MM: "%d თვე",
                y: "წელი",
                yy: "%d წელი"
            },
            ordinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
            ordinal: function(e) {
                return 0 === e ? e : 1 === e ? e + "-ლი" : e < 20 || e <= 100 && e % 20 === 0 || e % 100 === 0 ? "მე-" + e : e + "-ე";
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return a;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : khmer (km)
    //! author : Kruy Vanna : https://github.com/kruyvanna
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("km", {
            months: "មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split("_"),
            monthsShort: "មករា_កុម្ភៈ_មិនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split("_"),
            weekdays: "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),
            weekdaysShort: "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),
            weekdaysMin: "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[ថ្ងៃនៈ ម៉ោង] LT",
                nextDay: "[ស្អែក ម៉ោង] LT",
                nextWeek: "dddd [ម៉ោង] LT",
                lastDay: "[ម្សិលមិញ ម៉ោង] LT",
                lastWeek: "dddd [សប្តាហ៍មុន] [ម៉ោង] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%sទៀត",
                past: "%sមុន",
                s: "ប៉ុន្មានវិនាទី",
                m: "មួយនាទី",
                mm: "%d នាទី",
                h: "មួយម៉ោង",
                hh: "%d ម៉ោង",
                d: "មួយថ្ងៃ",
                dd: "%d ថ្ងៃ",
                M: "មួយខែ",
                MM: "%d ខែ",
                y: "មួយឆ្នាំ",
                yy: "%d ឆ្នាំ"
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : korean (ko)
    //!
    //! authors
    //!
    //! - Kyungwook, Park : https://github.com/kyungw00k
    //! - Jeeeyul Lee <jeeeyul@gmail.com>
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ko", {
            months: "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),
            monthsShort: "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),
            weekdays: "일요일_월요일_화요일_수요일_목요일_금요일_토요일".split("_"),
            weekdaysShort: "일_월_화_수_목_금_토".split("_"),
            weekdaysMin: "일_월_화_수_목_금_토".split("_"),
            longDateFormat: {
                LT: "A h시 m분",
                LTS: "A h시 m분 s초",
                L: "YYYY.MM.DD",
                LL: "YYYY년 MMMM D일",
                LLL: "YYYY년 MMMM D일 A h시 m분",
                LLLL: "YYYY년 MMMM D일 dddd A h시 m분"
            },
            calendar: {
                sameDay: "오늘 LT",
                nextDay: "내일 LT",
                nextWeek: "dddd LT",
                lastDay: "어제 LT",
                lastWeek: "지난주 dddd LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s 후",
                past: "%s 전",
                s: "몇초",
                ss: "%d초",
                m: "일분",
                mm: "%d분",
                h: "한시간",
                hh: "%d시간",
                d: "하루",
                dd: "%d일",
                M: "한달",
                MM: "%d달",
                y: "일년",
                yy: "%d년"
            },
            ordinalParse: /\d{1,2}일/,
            ordinal: "%d일",
            meridiemParse: /오전|오후/,
            isPM: function(e) {
                return "오후" === e;
            },
            meridiem: function(e, t, n) {
                return e < 12 ? "오전" : "오후";
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Luxembourgish (lb)
    //! author : mweimerskirch : https://github.com/mweimerskirch, David Raison : https://github.com/kwisatz
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t, n, a) {
            var r = {
                m: [ "eng Minutt", "enger Minutt" ],
                h: [ "eng Stonn", "enger Stonn" ],
                d: [ "een Dag", "engem Dag" ],
                M: [ "ee Mount", "engem Mount" ],
                y: [ "ee Joer", "engem Joer" ]
            };
            return t ? r[n][0] : r[n][1];
        }
        function n(e) {
            var t = e.substr(0, e.indexOf(" "));
            return r(t) ? "a " + e : "an " + e;
        }
        function a(e) {
            var t = e.substr(0, e.indexOf(" "));
            return r(t) ? "viru " + e : "virun " + e;
        }
        function r(e) {
            if (e = parseInt(e, 10), isNaN(e)) return !1;
            if (e < 0) return !0;
            if (e < 10) return 4 <= e && e <= 7;
            if (e < 100) {
                var t = e % 10, n = e / 10;
                return r(0 === t ? n : t);
            }
            if (e < 1e4) {
                for (;e >= 10; ) e /= 10;
                return r(e);
            }
            return e /= 1e3, r(e);
        }
        var s = e.defineLocale("lb", {
            months: "Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
            monthsShort: "Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
            weekdays: "Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg".split("_"),
            weekdaysShort: "So._Mé._Dë._Më._Do._Fr._Sa.".split("_"),
            weekdaysMin: "So_Mé_Dë_Më_Do_Fr_Sa".split("_"),
            longDateFormat: {
                LT: "H:mm [Auer]",
                LTS: "H:mm:ss [Auer]",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm [Auer]",
                LLLL: "dddd, D. MMMM YYYY H:mm [Auer]"
            },
            calendar: {
                sameDay: "[Haut um] LT",
                sameElse: "L",
                nextDay: "[Muer um] LT",
                nextWeek: "dddd [um] LT",
                lastDay: "[Gëschter um] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 2:
                      case 4:
                        return "[Leschten] dddd [um] LT";

                      default:
                        return "[Leschte] dddd [um] LT";
                    }
                }
            },
            relativeTime: {
                future: n,
                past: a,
                s: "e puer Sekonnen",
                m: t,
                mm: "%d Minutten",
                h: t,
                hh: "%d Stonnen",
                d: t,
                dd: "%d Deeg",
                M: t,
                MM: "%d Méint",
                y: t,
                yy: "%d Joer"
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return s;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Lithuanian (lt)
    //! author : Mindaugas Mozūras : https://github.com/mmozuras
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t, n, a) {
            return t ? "kelios sekundės" : a ? "kelių sekundžių" : "kelias sekundes";
        }
        function n(e, t) {
            var n = {
                nominative: "sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis".split("_"),
                accusative: "sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio".split("_")
            }, a = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(t) ? "accusative" : "nominative";
            return n[a][e.month()];
        }
        function a(e, t, n, a) {
            return t ? s(n)[0] : a ? s(n)[1] : s(n)[2];
        }
        function r(e) {
            return e % 10 === 0 || e > 10 && e < 20;
        }
        function s(e) {
            return d[e].split("_");
        }
        function i(e, t, n, i) {
            var o = e + " ";
            return 1 === e ? o + a(e, t, n[0], i) : t ? o + (r(e) ? s(n)[1] : s(n)[0]) : i ? o + s(n)[1] : o + (r(e) ? s(n)[1] : s(n)[2]);
        }
        function o(e, t) {
            var n = t.indexOf("dddd HH:mm") === -1, a = u[e.day()];
            return n ? a : a.substring(0, a.length - 2) + "į";
        }
        var d = {
            m: "minutė_minutės_minutę",
            mm: "minutės_minučių_minutes",
            h: "valanda_valandos_valandą",
            hh: "valandos_valandų_valandas",
            d: "diena_dienos_dieną",
            dd: "dienos_dienų_dienas",
            M: "mėnuo_mėnesio_mėnesį",
            MM: "mėnesiai_mėnesių_mėnesius",
            y: "metai_metų_metus",
            yy: "metai_metų_metus"
        }, u = "sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis".split("_"), _ = e.defineLocale("lt", {
            months: n,
            monthsShort: "sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd".split("_"),
            weekdays: o,
            weekdaysShort: "Sek_Pir_Ant_Tre_Ket_Pen_Šeš".split("_"),
            weekdaysMin: "S_P_A_T_K_Pn_Š".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "YYYY [m.] MMMM D [d.]",
                LLL: "YYYY [m.] MMMM D [d.], HH:mm [val.]",
                LLLL: "YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]",
                l: "YYYY-MM-DD",
                ll: "YYYY [m.] MMMM D [d.]",
                lll: "YYYY [m.] MMMM D [d.], HH:mm [val.]",
                llll: "YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]"
            },
            calendar: {
                sameDay: "[Šiandien] LT",
                nextDay: "[Rytoj] LT",
                nextWeek: "dddd LT",
                lastDay: "[Vakar] LT",
                lastWeek: "[Praėjusį] dddd LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "po %s",
                past: "prieš %s",
                s: t,
                m: a,
                mm: i,
                h: a,
                hh: i,
                d: a,
                dd: i,
                M: a,
                MM: i,
                y: a,
                yy: i
            },
            ordinalParse: /\d{1,2}-oji/,
            ordinal: function(e) {
                return e + "-oji";
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return _;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : latvian (lv)
    //! author : Kristaps Karlsons : https://github.com/skakri
    //! author : Jānis Elmeris : https://github.com/JanisE
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t, n) {
            return n ? t % 10 === 1 && 11 !== t ? e[2] : e[3] : t % 10 === 1 && 11 !== t ? e[0] : e[1];
        }
        function n(e, n, a) {
            return e + " " + t(s[a], e, n);
        }
        function a(e, n, a) {
            return t(s[a], e, n);
        }
        function r(e, t) {
            return t ? "dažas sekundes" : "dažām sekundēm";
        }
        var s = {
            m: "minūtes_minūtēm_minūte_minūtes".split("_"),
            mm: "minūtes_minūtēm_minūte_minūtes".split("_"),
            h: "stundas_stundām_stunda_stundas".split("_"),
            hh: "stundas_stundām_stunda_stundas".split("_"),
            d: "dienas_dienām_diena_dienas".split("_"),
            dd: "dienas_dienām_diena_dienas".split("_"),
            M: "mēneša_mēnešiem_mēnesis_mēneši".split("_"),
            MM: "mēneša_mēnešiem_mēnesis_mēneši".split("_"),
            y: "gada_gadiem_gads_gadi".split("_"),
            yy: "gada_gadiem_gads_gadi".split("_")
        }, i = e.defineLocale("lv", {
            months: "janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris".split("_"),
            monthsShort: "jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec".split("_"),
            weekdays: "svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena".split("_"),
            weekdaysShort: "Sv_P_O_T_C_Pk_S".split("_"),
            weekdaysMin: "Sv_P_O_T_C_Pk_S".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY.",
                LL: "YYYY. [gada] D. MMMM",
                LLL: "YYYY. [gada] D. MMMM, HH:mm",
                LLLL: "YYYY. [gada] D. MMMM, dddd, HH:mm"
            },
            calendar: {
                sameDay: "[Šodien pulksten] LT",
                nextDay: "[Rīt pulksten] LT",
                nextWeek: "dddd [pulksten] LT",
                lastDay: "[Vakar pulksten] LT",
                lastWeek: "[Pagājušā] dddd [pulksten] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "pēc %s",
                past: "pirms %s",
                s: r,
                m: a,
                mm: n,
                h: a,
                hh: n,
                d: a,
                dd: n,
                M: a,
                MM: n,
                y: a,
                yy: n
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return i;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Montenegrin (me)
    //! author : Miodrag Nikač <miodrag@restartit.me> : https://github.com/miodragnikac
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = {
            words: {
                m: [ "jedan minut", "jednog minuta" ],
                mm: [ "minut", "minuta", "minuta" ],
                h: [ "jedan sat", "jednog sata" ],
                hh: [ "sat", "sata", "sati" ],
                dd: [ "dan", "dana", "dana" ],
                MM: [ "mjesec", "mjeseca", "mjeseci" ],
                yy: [ "godina", "godine", "godina" ]
            },
            correctGrammaticalCase: function(e, t) {
                return 1 === e ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2];
            },
            translate: function(e, n, a) {
                var r = t.words[a];
                return 1 === a.length ? n ? r[0] : r[1] : e + " " + t.correctGrammaticalCase(e, r);
            }
        }, n = e.defineLocale("me", {
            months: [ "januar", "februar", "mart", "april", "maj", "jun", "jul", "avgust", "septembar", "oktobar", "novembar", "decembar" ],
            monthsShort: [ "jan.", "feb.", "mar.", "apr.", "maj", "jun", "jul", "avg.", "sep.", "okt.", "nov.", "dec." ],
            weekdays: [ "nedjelja", "ponedjeljak", "utorak", "srijeda", "četvrtak", "petak", "subota" ],
            weekdaysShort: [ "ned.", "pon.", "uto.", "sri.", "čet.", "pet.", "sub." ],
            weekdaysMin: [ "ne", "po", "ut", "sr", "če", "pe", "su" ],
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD. MM. YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd, D. MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[danas u] LT",
                nextDay: "[sjutra u] LT",
                nextWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[u] [nedjelju] [u] LT";

                      case 3:
                        return "[u] [srijedu] [u] LT";

                      case 6:
                        return "[u] [subotu] [u] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[u] dddd [u] LT";
                    }
                },
                lastDay: "[juče u] LT",
                lastWeek: function() {
                    var e = [ "[prošle] [nedjelje] [u] LT", "[prošlog] [ponedjeljka] [u] LT", "[prošlog] [utorka] [u] LT", "[prošle] [srijede] [u] LT", "[prošlog] [četvrtka] [u] LT", "[prošlog] [petka] [u] LT", "[prošle] [subote] [u] LT" ];
                    return e[this.day()];
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "za %s",
                past: "prije %s",
                s: "nekoliko sekundi",
                m: t.translate,
                mm: t.translate,
                h: t.translate,
                hh: t.translate,
                d: "dan",
                dd: t.translate,
                M: "mjesec",
                MM: t.translate,
                y: "godinu",
                yy: t.translate
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return n;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : macedonian (mk)
    //! author : Borislav Mickov : https://github.com/B0k0
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("mk", {
            months: "јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември".split("_"),
            monthsShort: "јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек".split("_"),
            weekdays: "недела_понеделник_вторник_среда_четврток_петок_сабота".split("_"),
            weekdaysShort: "нед_пон_вто_сре_чет_пет_саб".split("_"),
            weekdaysMin: "нe_пo_вт_ср_че_пе_сa".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "D.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY H:mm",
                LLLL: "dddd, D MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[Денес во] LT",
                nextDay: "[Утре во] LT",
                nextWeek: "dddd [во] LT",
                lastDay: "[Вчера во] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                      case 3:
                      case 6:
                        return "[Во изминатата] dddd [во] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[Во изминатиот] dddd [во] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "после %s",
                past: "пред %s",
                s: "неколку секунди",
                m: "минута",
                mm: "%d минути",
                h: "час",
                hh: "%d часа",
                d: "ден",
                dd: "%d дена",
                M: "месец",
                MM: "%d месеци",
                y: "година",
                yy: "%d години"
            },
            ordinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
            ordinal: function(e) {
                var t = e % 10, n = e % 100;
                return 0 === e ? e + "-ев" : 0 === n ? e + "-ен" : n > 10 && n < 20 ? e + "-ти" : 1 === t ? e + "-ви" : 2 === t ? e + "-ри" : 7 === t || 8 === t ? e + "-ми" : e + "-ти";
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : malayalam (ml)
    //! author : Floyd Pink : https://github.com/floydpink
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ml", {
            months: "ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ".split("_"),
            monthsShort: "ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.".split("_"),
            weekdays: "ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച".split("_"),
            weekdaysShort: "ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി".split("_"),
            weekdaysMin: "ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ".split("_"),
            longDateFormat: {
                LT: "A h:mm -നു",
                LTS: "A h:mm:ss -നു",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm -നു",
                LLLL: "dddd, D MMMM YYYY, A h:mm -നു"
            },
            calendar: {
                sameDay: "[ഇന്ന്] LT",
                nextDay: "[നാളെ] LT",
                nextWeek: "dddd, LT",
                lastDay: "[ഇന്നലെ] LT",
                lastWeek: "[കഴിഞ്ഞ] dddd, LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s കഴിഞ്ഞ്",
                past: "%s മുൻപ്",
                s: "അൽപ നിമിഷങ്ങൾ",
                m: "ഒരു മിനിറ്റ്",
                mm: "%d മിനിറ്റ്",
                h: "ഒരു മണിക്കൂർ",
                hh: "%d മണിക്കൂർ",
                d: "ഒരു ദിവസം",
                dd: "%d ദിവസം",
                M: "ഒരു മാസം",
                MM: "%d മാസം",
                y: "ഒരു വർഷം",
                yy: "%d വർഷം"
            },
            meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
            isPM: function(e) {
                return /^(ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി)$/.test(e);
            },
            meridiem: function(e, t, n) {
                return e < 4 ? "രാത്രി" : e < 12 ? "രാവിലെ" : e < 17 ? "ഉച്ച കഴിഞ്ഞ്" : e < 20 ? "വൈകുന്നേരം" : "രാത്രി";
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Marathi (mr)
    //! author : Harshad Kale : https://github.com/kalehv
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "१",
            "2": "२",
            "3": "३",
            "4": "४",
            "5": "५",
            "6": "६",
            "7": "७",
            "8": "८",
            "9": "९",
            "0": "०"
        }, n = {
            "१": "1",
            "२": "2",
            "३": "3",
            "४": "4",
            "५": "5",
            "६": "6",
            "७": "7",
            "८": "8",
            "९": "9",
            "०": "0"
        }, a = e.defineLocale("mr", {
            months: "जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर".split("_"),
            monthsShort: "जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.".split("_"),
            weekdays: "रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),
            weekdaysShort: "रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि".split("_"),
            weekdaysMin: "र_सो_मं_बु_गु_शु_श".split("_"),
            longDateFormat: {
                LT: "A h:mm वाजता",
                LTS: "A h:mm:ss वाजता",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm वाजता",
                LLLL: "dddd, D MMMM YYYY, A h:mm वाजता"
            },
            calendar: {
                sameDay: "[आज] LT",
                nextDay: "[उद्या] LT",
                nextWeek: "dddd, LT",
                lastDay: "[काल] LT",
                lastWeek: "[मागील] dddd, LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s नंतर",
                past: "%s पूर्वी",
                s: "सेकंद",
                m: "एक मिनिट",
                mm: "%d मिनिटे",
                h: "एक तास",
                hh: "%d तास",
                d: "एक दिवस",
                dd: "%d दिवस",
                M: "एक महिना",
                MM: "%d महिने",
                y: "एक वर्ष",
                yy: "%d वर्षे"
            },
            preparse: function(e) {
                return e.replace(/[१२३४५६७८९०]/g, function(e) {
                    return n[e];
                });
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                });
            },
            meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "रात्री" === t ? e < 4 ? e : e + 12 : "सकाळी" === t ? e : "दुपारी" === t ? e >= 10 ? e : e + 12 : "सायंकाळी" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, n) {
                return e < 4 ? "रात्री" : e < 10 ? "सकाळी" : e < 17 ? "दुपारी" : e < 20 ? "सायंकाळी" : "रात्री";
            },
            week: {
                dow: 0,
                doy: 6
            }
        });
        return a;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Bahasa Malaysia (ms-MY)
    //! author : Weldan Jamili : https://github.com/weldan
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ms", {
            months: "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),
            monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),
            weekdays: "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
            weekdaysShort: "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
            weekdaysMin: "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
            longDateFormat: {
                LT: "HH.mm",
                LTS: "HH.mm.ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY [pukul] HH.mm",
                LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
            },
            meridiemParse: /pagi|tengahari|petang|malam/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "pagi" === t ? e : "tengahari" === t ? e >= 11 ? e : e + 12 : "petang" === t || "malam" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, n) {
                return e < 11 ? "pagi" : e < 15 ? "tengahari" : e < 19 ? "petang" : "malam";
            },
            calendar: {
                sameDay: "[Hari ini pukul] LT",
                nextDay: "[Esok pukul] LT",
                nextWeek: "dddd [pukul] LT",
                lastDay: "[Kelmarin pukul] LT",
                lastWeek: "dddd [lepas pukul] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "dalam %s",
                past: "%s yang lepas",
                s: "beberapa saat",
                m: "seminit",
                mm: "%d minit",
                h: "sejam",
                hh: "%d jam",
                d: "sehari",
                dd: "%d hari",
                M: "sebulan",
                MM: "%d bulan",
                y: "setahun",
                yy: "%d tahun"
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Bahasa Malaysia (ms-MY)
    //! author : Weldan Jamili : https://github.com/weldan
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ms-my", {
            months: "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),
            monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),
            weekdays: "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
            weekdaysShort: "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
            weekdaysMin: "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
            longDateFormat: {
                LT: "HH.mm",
                LTS: "HH.mm.ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY [pukul] HH.mm",
                LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
            },
            meridiemParse: /pagi|tengahari|petang|malam/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "pagi" === t ? e : "tengahari" === t ? e >= 11 ? e : e + 12 : "petang" === t || "malam" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, n) {
                return e < 11 ? "pagi" : e < 15 ? "tengahari" : e < 19 ? "petang" : "malam";
            },
            calendar: {
                sameDay: "[Hari ini pukul] LT",
                nextDay: "[Esok pukul] LT",
                nextWeek: "dddd [pukul] LT",
                lastDay: "[Kelmarin pukul] LT",
                lastWeek: "dddd [lepas pukul] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "dalam %s",
                past: "%s yang lepas",
                s: "beberapa saat",
                m: "seminit",
                mm: "%d minit",
                h: "sejam",
                hh: "%d jam",
                d: "sehari",
                dd: "%d hari",
                M: "sebulan",
                MM: "%d bulan",
                y: "setahun",
                yy: "%d tahun"
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Burmese (my)
    //! author : Squar team, mysquar.com
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "၁",
            "2": "၂",
            "3": "၃",
            "4": "၄",
            "5": "၅",
            "6": "၆",
            "7": "၇",
            "8": "၈",
            "9": "၉",
            "0": "၀"
        }, n = {
            "၁": "1",
            "၂": "2",
            "၃": "3",
            "၄": "4",
            "၅": "5",
            "၆": "6",
            "၇": "7",
            "၈": "8",
            "၉": "9",
            "၀": "0"
        }, a = e.defineLocale("my", {
            months: "ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ".split("_"),
            monthsShort: "ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ".split("_"),
            weekdays: "တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ".split("_"),
            weekdaysShort: "နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),
            weekdaysMin: "နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[ယနေ.] LT [မှာ]",
                nextDay: "[မနက်ဖြန်] LT [မှာ]",
                nextWeek: "dddd LT [မှာ]",
                lastDay: "[မနေ.က] LT [မှာ]",
                lastWeek: "[ပြီးခဲ့သော] dddd LT [မှာ]",
                sameElse: "L"
            },
            relativeTime: {
                future: "လာမည့် %s မှာ",
                past: "လွန်ခဲ့သော %s က",
                s: "စက္ကန်.အနည်းငယ်",
                m: "တစ်မိနစ်",
                mm: "%d မိနစ်",
                h: "တစ်နာရီ",
                hh: "%d နာရီ",
                d: "တစ်ရက်",
                dd: "%d ရက်",
                M: "တစ်လ",
                MM: "%d လ",
                y: "တစ်နှစ်",
                yy: "%d နှစ်"
            },
            preparse: function(e) {
                return e.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function(e) {
                    return n[e];
                });
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                });
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return a;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : norwegian bokmål (nb)
    //! authors : Espen Hovlandsdal : https://github.com/rexxars
    //!           Sigurd Gartmann : https://github.com/sigurdga
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("nb", {
            months: "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),
            monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
            weekdays: "søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split("_"),
            weekdaysShort: "søn_man_tirs_ons_tors_fre_lør".split("_"),
            weekdaysMin: "sø_ma_ti_on_to_fr_lø".split("_"),
            longDateFormat: {
                LT: "H.mm",
                LTS: "H.mm.ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY [kl.] H.mm",
                LLLL: "dddd D. MMMM YYYY [kl.] H.mm"
            },
            calendar: {
                sameDay: "[i dag kl.] LT",
                nextDay: "[i morgen kl.] LT",
                nextWeek: "dddd [kl.] LT",
                lastDay: "[i går kl.] LT",
                lastWeek: "[forrige] dddd [kl.] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "om %s",
                past: "for %s siden",
                s: "noen sekunder",
                m: "ett minutt",
                mm: "%d minutter",
                h: "en time",
                hh: "%d timer",
                d: "en dag",
                dd: "%d dager",
                M: "en måned",
                MM: "%d måneder",
                y: "ett år",
                yy: "%d år"
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : nepali/nepalese
    //! author : suvash : https://github.com/suvash
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "१",
            "2": "२",
            "3": "३",
            "4": "४",
            "5": "५",
            "6": "६",
            "7": "७",
            "8": "८",
            "9": "९",
            "0": "०"
        }, n = {
            "१": "1",
            "२": "2",
            "३": "3",
            "४": "4",
            "५": "5",
            "६": "6",
            "७": "7",
            "८": "8",
            "९": "9",
            "०": "0"
        }, a = e.defineLocale("ne", {
            months: "जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर".split("_"),
            monthsShort: "जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.".split("_"),
            weekdays: "आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार".split("_"),
            weekdaysShort: "आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.".split("_"),
            weekdaysMin: "आइ._सो._मङ्_बु._बि._शु._श.".split("_"),
            longDateFormat: {
                LT: "Aको h:mm बजे",
                LTS: "Aको h:mm:ss बजे",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, Aको h:mm बजे",
                LLLL: "dddd, D MMMM YYYY, Aको h:mm बजे"
            },
            preparse: function(e) {
                return e.replace(/[१२३४५६७८९०]/g, function(e) {
                    return n[e];
                });
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                });
            },
            meridiemParse: /राती|बिहान|दिउँसो|बेलुका|साँझ|राती/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "राती" === t ? e < 3 ? e : e + 12 : "बिहान" === t ? e : "दिउँसो" === t ? e >= 10 ? e : e + 12 : "बेलुका" === t || "साँझ" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, n) {
                return e < 3 ? "राती" : e < 10 ? "बिहान" : e < 15 ? "दिउँसो" : e < 18 ? "बेलुका" : e < 20 ? "साँझ" : "राती";
            },
            calendar: {
                sameDay: "[आज] LT",
                nextDay: "[भोली] LT",
                nextWeek: "[आउँदो] dddd[,] LT",
                lastDay: "[हिजो] LT",
                lastWeek: "[गएको] dddd[,] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%sमा",
                past: "%s अगाडी",
                s: "केही समय",
                m: "एक मिनेट",
                mm: "%d मिनेट",
                h: "एक घण्टा",
                hh: "%d घण्टा",
                d: "एक दिन",
                dd: "%d दिन",
                M: "एक महिना",
                MM: "%d महिना",
                y: "एक बर्ष",
                yy: "%d बर्ष"
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return a;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : dutch (nl)
    //! author : Joris Röling : https://github.com/jjupiter
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split("_"), n = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_"), a = e.defineLocale("nl", {
            months: "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split("_"),
            monthsShort: function(e, a) {
                return /-MMM-/.test(a) ? n[e.month()] : t[e.month()];
            },
            weekdays: "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),
            weekdaysShort: "zo._ma._di._wo._do._vr._za.".split("_"),
            weekdaysMin: "Zo_Ma_Di_Wo_Do_Vr_Za".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD-MM-YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[vandaag om] LT",
                nextDay: "[morgen om] LT",
                nextWeek: "dddd [om] LT",
                lastDay: "[gisteren om] LT",
                lastWeek: "[afgelopen] dddd [om] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "over %s",
                past: "%s geleden",
                s: "een paar seconden",
                m: "één minuut",
                mm: "%d minuten",
                h: "één uur",
                hh: "%d uur",
                d: "één dag",
                dd: "%d dagen",
                M: "één maand",
                MM: "%d maanden",
                y: "één jaar",
                yy: "%d jaar"
            },
            ordinalParse: /\d{1,2}(ste|de)/,
            ordinal: function(e) {
                return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de");
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return a;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : norwegian nynorsk (nn)
    //! author : https://github.com/mechuwind
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("nn", {
            months: "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),
            monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
            weekdays: "sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag".split("_"),
            weekdaysShort: "sun_mån_tys_ons_tor_fre_lau".split("_"),
            weekdaysMin: "su_må_ty_on_to_fr_lø".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[I dag klokka] LT",
                nextDay: "[I morgon klokka] LT",
                nextWeek: "dddd [klokka] LT",
                lastDay: "[I går klokka] LT",
                lastWeek: "[Føregåande] dddd [klokka] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "om %s",
                past: "for %s sidan",
                s: "nokre sekund",
                m: "eit minutt",
                mm: "%d minutt",
                h: "ein time",
                hh: "%d timar",
                d: "ein dag",
                dd: "%d dagar",
                M: "ein månad",
                MM: "%d månader",
                y: "eit år",
                yy: "%d år"
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : polish (pl)
    //! author : Rafal Hirsz : https://github.com/evoL
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e) {
            return e % 10 < 5 && e % 10 > 1 && ~~(e / 10) % 10 !== 1;
        }
        function n(e, n, a) {
            var r = e + " ";
            switch (a) {
              case "m":
                return n ? "minuta" : "minutę";

              case "mm":
                return r + (t(e) ? "minuty" : "minut");

              case "h":
                return n ? "godzina" : "godzinę";

              case "hh":
                return r + (t(e) ? "godziny" : "godzin");

              case "MM":
                return r + (t(e) ? "miesiące" : "miesięcy");

              case "yy":
                return r + (t(e) ? "lata" : "lat");
            }
        }
        var a = "styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień".split("_"), r = "stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia".split("_"), s = e.defineLocale("pl", {
            months: function(e, t) {
                return "" === t ? "(" + r[e.month()] + "|" + a[e.month()] + ")" : /D MMMM/.test(t) ? r[e.month()] : a[e.month()];
            },
            monthsShort: "sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru".split("_"),
            weekdays: "niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota".split("_"),
            weekdaysShort: "nie_pon_wt_śr_czw_pt_sb".split("_"),
            weekdaysMin: "N_Pn_Wt_Śr_Cz_Pt_So".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Dziś o] LT",
                nextDay: "[Jutro o] LT",
                nextWeek: "[W] dddd [o] LT",
                lastDay: "[Wczoraj o] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[W zeszłą niedzielę o] LT";

                      case 3:
                        return "[W zeszłą środę o] LT";

                      case 6:
                        return "[W zeszłą sobotę o] LT";

                      default:
                        return "[W zeszły] dddd [o] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "za %s",
                past: "%s temu",
                s: "kilka sekund",
                m: n,
                mm: n,
                h: n,
                hh: n,
                d: "1 dzień",
                dd: "%d dni",
                M: "miesiąc",
                MM: n,
                y: "rok",
                yy: n
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return s;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : portuguese (pt)
    //! author : Jefferson : https://github.com/jalex79
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("pt", {
            months: "Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro".split("_"),
            monthsShort: "Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez".split("_"),
            weekdays: "Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado".split("_"),
            weekdaysShort: "Dom_Seg_Ter_Qua_Qui_Sex_Sáb".split("_"),
            weekdaysMin: "Dom_2ª_3ª_4ª_5ª_6ª_Sáb".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D [de] MMMM [de] YYYY",
                LLL: "D [de] MMMM [de] YYYY HH:mm",
                LLLL: "dddd, D [de] MMMM [de] YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Hoje às] LT",
                nextDay: "[Amanhã às] LT",
                nextWeek: "dddd [às] LT",
                lastDay: "[Ontem às] LT",
                lastWeek: function() {
                    return 0 === this.day() || 6 === this.day() ? "[Último] dddd [às] LT" : "[Última] dddd [às] LT";
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "em %s",
                past: "há %s",
                s: "segundos",
                m: "um minuto",
                mm: "%d minutos",
                h: "uma hora",
                hh: "%d horas",
                d: "um dia",
                dd: "%d dias",
                M: "um mês",
                MM: "%d meses",
                y: "um ano",
                yy: "%d anos"
            },
            ordinalParse: /\d{1,2}º/,
            ordinal: "%dº",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : brazilian portuguese (pt-br)
    //! author : Caio Ribeiro Pereira : https://github.com/caio-ribeiro-pereira
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("pt-br", {
            months: "Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro".split("_"),
            monthsShort: "Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez".split("_"),
            weekdays: "Domingo_Segunda-Feira_Terça-Feira_Quarta-Feira_Quinta-Feira_Sexta-Feira_Sábado".split("_"),
            weekdaysShort: "Dom_Seg_Ter_Qua_Qui_Sex_Sáb".split("_"),
            weekdaysMin: "Dom_2ª_3ª_4ª_5ª_6ª_Sáb".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D [de] MMMM [de] YYYY",
                LLL: "D [de] MMMM [de] YYYY [às] HH:mm",
                LLLL: "dddd, D [de] MMMM [de] YYYY [às] HH:mm"
            },
            calendar: {
                sameDay: "[Hoje às] LT",
                nextDay: "[Amanhã às] LT",
                nextWeek: "dddd [às] LT",
                lastDay: "[Ontem às] LT",
                lastWeek: function() {
                    return 0 === this.day() || 6 === this.day() ? "[Último] dddd [às] LT" : "[Última] dddd [às] LT";
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "em %s",
                past: "%s atrás",
                s: "poucos segundos",
                m: "um minuto",
                mm: "%d minutos",
                h: "uma hora",
                hh: "%d horas",
                d: "um dia",
                dd: "%d dias",
                M: "um mês",
                MM: "%d meses",
                y: "um ano",
                yy: "%d anos"
            },
            ordinalParse: /\d{1,2}º/,
            ordinal: "%dº"
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : romanian (ro)
    //! author : Vlad Gurdiga : https://github.com/gurdiga
    //! author : Valentin Agachi : https://github.com/avaly
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t, n) {
            var a = {
                mm: "minute",
                hh: "ore",
                dd: "zile",
                MM: "luni",
                yy: "ani"
            }, r = " ";
            return (e % 100 >= 20 || e >= 100 && e % 100 === 0) && (r = " de "), e + r + a[n];
        }
        var n = e.defineLocale("ro", {
            months: "ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie".split("_"),
            monthsShort: "ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.".split("_"),
            weekdays: "duminică_luni_marți_miercuri_joi_vineri_sâmbătă".split("_"),
            weekdaysShort: "Dum_Lun_Mar_Mie_Joi_Vin_Sâm".split("_"),
            weekdaysMin: "Du_Lu_Ma_Mi_Jo_Vi_Sâ".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY H:mm",
                LLLL: "dddd, D MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[azi la] LT",
                nextDay: "[mâine la] LT",
                nextWeek: "dddd [la] LT",
                lastDay: "[ieri la] LT",
                lastWeek: "[fosta] dddd [la] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "peste %s",
                past: "%s în urmă",
                s: "câteva secunde",
                m: "un minut",
                mm: t,
                h: "o oră",
                hh: t,
                d: "o zi",
                dd: t,
                M: "o lună",
                MM: t,
                y: "un an",
                yy: t
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return n;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : russian (ru)
    //! author : Viktorminator : https://github.com/Viktorminator
    //! Author : Menelion Elensúle : https://github.com/Oire
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t) {
            var n = e.split("_");
            return t % 10 === 1 && t % 100 !== 11 ? n[0] : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20) ? n[1] : n[2];
        }
        function n(e, n, a) {
            var r = {
                mm: n ? "минута_минуты_минут" : "минуту_минуты_минут",
                hh: "час_часа_часов",
                dd: "день_дня_дней",
                MM: "месяц_месяца_месяцев",
                yy: "год_года_лет"
            };
            return "m" === a ? n ? "минута" : "минуту" : e + " " + t(r[a], +e);
        }
        function a(e, t) {
            var n = {
                nominative: "январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_"),
                accusative: "января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря".split("_")
            }, a = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(t) ? "accusative" : "nominative";
            return n[a][e.month()];
        }
        function r(e, t) {
            var n = {
                nominative: "янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек".split("_"),
                accusative: "янв_фев_мар_апр_мая_июня_июля_авг_сен_окт_ноя_дек".split("_")
            }, a = /D[oD]?(\[[^\[\]]*\]|\s+)+MMMM?/.test(t) ? "accusative" : "nominative";
            return n[a][e.month()];
        }
        function s(e, t) {
            var n = {
                nominative: "воскресенье_понедельник_вторник_среда_четверг_пятница_суббота".split("_"),
                accusative: "воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу".split("_")
            }, a = /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/.test(t) ? "accusative" : "nominative";
            return n[a][e.day()];
        }
        var i = e.defineLocale("ru", {
            months: a,
            monthsShort: r,
            weekdays: s,
            weekdaysShort: "вс_пн_вт_ср_чт_пт_сб".split("_"),
            weekdaysMin: "вс_пн_вт_ср_чт_пт_сб".split("_"),
            monthsParse: [ /^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[й|я]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i ],
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY г.",
                LLL: "D MMMM YYYY г., HH:mm",
                LLLL: "dddd, D MMMM YYYY г., HH:mm"
            },
            calendar: {
                sameDay: "[Сегодня в] LT",
                nextDay: "[Завтра в] LT",
                lastDay: "[Вчера в] LT",
                nextWeek: function() {
                    return 2 === this.day() ? "[Во] dddd [в] LT" : "[В] dddd [в] LT";
                },
                lastWeek: function(e) {
                    if (e.week() === this.week()) return 2 === this.day() ? "[Во] dddd [в] LT" : "[В] dddd [в] LT";
                    switch (this.day()) {
                      case 0:
                        return "[В прошлое] dddd [в] LT";

                      case 1:
                      case 2:
                      case 4:
                        return "[В прошлый] dddd [в] LT";

                      case 3:
                      case 5:
                      case 6:
                        return "[В прошлую] dddd [в] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "через %s",
                past: "%s назад",
                s: "несколько секунд",
                m: n,
                mm: n,
                h: "час",
                hh: n,
                d: "день",
                dd: n,
                M: "месяц",
                MM: n,
                y: "год",
                yy: n
            },
            meridiemParse: /ночи|утра|дня|вечера/i,
            isPM: function(e) {
                return /^(дня|вечера)$/.test(e);
            },
            meridiem: function(e, t, n) {
                return e < 4 ? "ночи" : e < 12 ? "утра" : e < 17 ? "дня" : "вечера";
            },
            ordinalParse: /\d{1,2}-(й|го|я)/,
            ordinal: function(e, t) {
                switch (t) {
                  case "M":
                  case "d":
                  case "DDD":
                    return e + "-й";

                  case "D":
                    return e + "-го";

                  case "w":
                  case "W":
                    return e + "-я";

                  default:
                    return e;
                }
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return i;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Sinhalese (si)
    //! author : Sampath Sitinamaluwa : https://github.com/sampathsris
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("si", {
            months: "ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්".split("_"),
            monthsShort: "ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ".split("_"),
            weekdays: "ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා".split("_"),
            weekdaysShort: "ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන".split("_"),
            weekdaysMin: "ඉ_ස_අ_බ_බ්‍ර_සි_සෙ".split("_"),
            longDateFormat: {
                LT: "a h:mm",
                LTS: "a h:mm:ss",
                L: "YYYY/MM/DD",
                LL: "YYYY MMMM D",
                LLL: "YYYY MMMM D, a h:mm",
                LLLL: "YYYY MMMM D [වැනි] dddd, a h:mm:ss"
            },
            calendar: {
                sameDay: "[අද] LT[ට]",
                nextDay: "[හෙට] LT[ට]",
                nextWeek: "dddd LT[ට]",
                lastDay: "[ඊයේ] LT[ට]",
                lastWeek: "[පසුගිය] dddd LT[ට]",
                sameElse: "L"
            },
            relativeTime: {
                future: "%sකින්",
                past: "%sකට පෙර",
                s: "තත්පර කිහිපය",
                m: "මිනිත්තුව",
                mm: "මිනිත්තු %d",
                h: "පැය",
                hh: "පැය %d",
                d: "දිනය",
                dd: "දින %d",
                M: "මාසය",
                MM: "මාස %d",
                y: "වසර",
                yy: "වසර %d"
            },
            ordinalParse: /\d{1,2} වැනි/,
            ordinal: function(e) {
                return e + " වැනි";
            },
            meridiem: function(e, t, n) {
                return e > 11 ? n ? "ප.ව." : "පස් වරු" : n ? "පෙ.ව." : "පෙර වරු";
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : slovak (sk)
    //! author : Martin Minka : https://github.com/k2s
    //! based on work of petrbela : https://github.com/petrbela
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e) {
            return e > 1 && e < 5;
        }
        function n(e, n, a, r) {
            var s = e + " ";
            switch (a) {
              case "s":
                return n || r ? "pár sekúnd" : "pár sekundami";

              case "m":
                return n ? "minúta" : r ? "minútu" : "minútou";

              case "mm":
                return n || r ? s + (t(e) ? "minúty" : "minút") : s + "minútami";

              case "h":
                return n ? "hodina" : r ? "hodinu" : "hodinou";

              case "hh":
                return n || r ? s + (t(e) ? "hodiny" : "hodín") : s + "hodinami";

              case "d":
                return n || r ? "deň" : "dňom";

              case "dd":
                return n || r ? s + (t(e) ? "dni" : "dní") : s + "dňami";

              case "M":
                return n || r ? "mesiac" : "mesiacom";

              case "MM":
                return n || r ? s + (t(e) ? "mesiace" : "mesiacov") : s + "mesiacmi";

              case "y":
                return n || r ? "rok" : "rokom";

              case "yy":
                return n || r ? s + (t(e) ? "roky" : "rokov") : s + "rokmi";
            }
        }
        var a = "január_február_marec_apríl_máj_jún_júl_august_september_október_november_december".split("_"), r = "jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec".split("_"), s = e.defineLocale("sk", {
            months: a,
            monthsShort: r,
            monthsParse: function(e, t) {
                var n, a = [];
                for (n = 0; n < 12; n++) a[n] = new RegExp("^" + e[n] + "$|^" + t[n] + "$", "i");
                return a;
            }(a, r),
            weekdays: "nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota".split("_"),
            weekdaysShort: "ne_po_ut_st_št_pi_so".split("_"),
            weekdaysMin: "ne_po_ut_st_št_pi_so".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd D. MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[dnes o] LT",
                nextDay: "[zajtra o] LT",
                nextWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[v nedeľu o] LT";

                      case 1:
                      case 2:
                        return "[v] dddd [o] LT";

                      case 3:
                        return "[v stredu o] LT";

                      case 4:
                        return "[vo štvrtok o] LT";

                      case 5:
                        return "[v piatok o] LT";

                      case 6:
                        return "[v sobotu o] LT";
                    }
                },
                lastDay: "[včera o] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[minulú nedeľu o] LT";

                      case 1:
                      case 2:
                        return "[minulý] dddd [o] LT";

                      case 3:
                        return "[minulú stredu o] LT";

                      case 4:
                      case 5:
                        return "[minulý] dddd [o] LT";

                      case 6:
                        return "[minulú sobotu o] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "za %s",
                past: "pred %s",
                s: n,
                m: n,
                mm: n,
                h: n,
                hh: n,
                d: n,
                dd: n,
                M: n,
                MM: n,
                y: n,
                yy: n
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return s;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : slovenian (sl)
    //! author : Robert Sedovšek : https://github.com/sedovsek
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t, n, a) {
            var r = e + " ";
            switch (n) {
              case "s":
                return t || a ? "nekaj sekund" : "nekaj sekundami";

              case "m":
                return t ? "ena minuta" : "eno minuto";

              case "mm":
                return r += 1 === e ? t ? "minuta" : "minuto" : 2 === e ? t || a ? "minuti" : "minutama" : e < 5 ? t || a ? "minute" : "minutami" : t || a ? "minut" : "minutami";

              case "h":
                return t ? "ena ura" : "eno uro";

              case "hh":
                return r += 1 === e ? t ? "ura" : "uro" : 2 === e ? t || a ? "uri" : "urama" : e < 5 ? t || a ? "ure" : "urami" : t || a ? "ur" : "urami";

              case "d":
                return t || a ? "en dan" : "enim dnem";

              case "dd":
                return r += 1 === e ? t || a ? "dan" : "dnem" : 2 === e ? t || a ? "dni" : "dnevoma" : t || a ? "dni" : "dnevi";

              case "M":
                return t || a ? "en mesec" : "enim mesecem";

              case "MM":
                return r += 1 === e ? t || a ? "mesec" : "mesecem" : 2 === e ? t || a ? "meseca" : "mesecema" : e < 5 ? t || a ? "mesece" : "meseci" : t || a ? "mesecev" : "meseci";

              case "y":
                return t || a ? "eno leto" : "enim letom";

              case "yy":
                return r += 1 === e ? t || a ? "leto" : "letom" : 2 === e ? t || a ? "leti" : "letoma" : e < 5 ? t || a ? "leta" : "leti" : t || a ? "let" : "leti";
            }
        }
        var n = e.defineLocale("sl", {
            months: "januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december".split("_"),
            monthsShort: "jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.".split("_"),
            weekdays: "nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota".split("_"),
            weekdaysShort: "ned._pon._tor._sre._čet._pet._sob.".split("_"),
            weekdaysMin: "ne_po_to_sr_če_pe_so".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD. MM. YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd, D. MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[danes ob] LT",
                nextDay: "[jutri ob] LT",
                nextWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[v] [nedeljo] [ob] LT";

                      case 3:
                        return "[v] [sredo] [ob] LT";

                      case 6:
                        return "[v] [soboto] [ob] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[v] dddd [ob] LT";
                    }
                },
                lastDay: "[včeraj ob] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[prejšnjo] [nedeljo] [ob] LT";

                      case 3:
                        return "[prejšnjo] [sredo] [ob] LT";

                      case 6:
                        return "[prejšnjo] [soboto] [ob] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[prejšnji] dddd [ob] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "čez %s",
                past: "pred %s",
                s: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return n;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Albanian (sq)
    //! author : Flakërim Ismani : https://github.com/flakerimi
    //! author: Menelion Elensúle: https://github.com/Oire (tests)
    //! author : Oerd Cukalla : https://github.com/oerd (fixes)
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("sq", {
            months: "Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor".split("_"),
            monthsShort: "Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj".split("_"),
            weekdays: "E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë".split("_"),
            weekdaysShort: "Die_Hën_Mar_Mër_Enj_Pre_Sht".split("_"),
            weekdaysMin: "D_H_Ma_Më_E_P_Sh".split("_"),
            meridiemParse: /PD|MD/,
            isPM: function(e) {
                return "M" === e.charAt(0);
            },
            meridiem: function(e, t, n) {
                return e < 12 ? "PD" : "MD";
            },
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Sot në] LT",
                nextDay: "[Nesër në] LT",
                nextWeek: "dddd [në] LT",
                lastDay: "[Dje në] LT",
                lastWeek: "dddd [e kaluar në] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "në %s",
                past: "%s më parë",
                s: "disa sekonda",
                m: "një minutë",
                mm: "%d minuta",
                h: "një orë",
                hh: "%d orë",
                d: "një ditë",
                dd: "%d ditë",
                M: "një muaj",
                MM: "%d muaj",
                y: "një vit",
                yy: "%d vite"
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Serbian-latin (sr)
    //! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = {
            words: {
                m: [ "jedan minut", "jedne minute" ],
                mm: [ "minut", "minute", "minuta" ],
                h: [ "jedan sat", "jednog sata" ],
                hh: [ "sat", "sata", "sati" ],
                dd: [ "dan", "dana", "dana" ],
                MM: [ "mesec", "meseca", "meseci" ],
                yy: [ "godina", "godine", "godina" ]
            },
            correctGrammaticalCase: function(e, t) {
                return 1 === e ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2];
            },
            translate: function(e, n, a) {
                var r = t.words[a];
                return 1 === a.length ? n ? r[0] : r[1] : e + " " + t.correctGrammaticalCase(e, r);
            }
        }, n = e.defineLocale("sr", {
            months: [ "januar", "februar", "mart", "april", "maj", "jun", "jul", "avgust", "septembar", "oktobar", "novembar", "decembar" ],
            monthsShort: [ "jan.", "feb.", "mar.", "apr.", "maj", "jun", "jul", "avg.", "sep.", "okt.", "nov.", "dec." ],
            weekdays: [ "nedelja", "ponedeljak", "utorak", "sreda", "četvrtak", "petak", "subota" ],
            weekdaysShort: [ "ned.", "pon.", "uto.", "sre.", "čet.", "pet.", "sub." ],
            weekdaysMin: [ "ne", "po", "ut", "sr", "če", "pe", "su" ],
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD. MM. YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd, D. MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[danas u] LT",
                nextDay: "[sutra u] LT",
                nextWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[u] [nedelju] [u] LT";

                      case 3:
                        return "[u] [sredu] [u] LT";

                      case 6:
                        return "[u] [subotu] [u] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[u] dddd [u] LT";
                    }
                },
                lastDay: "[juče u] LT",
                lastWeek: function() {
                    var e = [ "[prošle] [nedelje] [u] LT", "[prošlog] [ponedeljka] [u] LT", "[prošlog] [utorka] [u] LT", "[prošle] [srede] [u] LT", "[prošlog] [četvrtka] [u] LT", "[prošlog] [petka] [u] LT", "[prošle] [subote] [u] LT" ];
                    return e[this.day()];
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "za %s",
                past: "pre %s",
                s: "nekoliko sekundi",
                m: t.translate,
                mm: t.translate,
                h: t.translate,
                hh: t.translate,
                d: "dan",
                dd: t.translate,
                M: "mesec",
                MM: t.translate,
                y: "godinu",
                yy: t.translate
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return n;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Serbian-cyrillic (sr-cyrl)
    //! author : Milan Janačković<milanjanackovic@gmail.com> : https://github.com/milan-j
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = {
            words: {
                m: [ "један минут", "једне минуте" ],
                mm: [ "минут", "минуте", "минута" ],
                h: [ "један сат", "једног сата" ],
                hh: [ "сат", "сата", "сати" ],
                dd: [ "дан", "дана", "дана" ],
                MM: [ "месец", "месеца", "месеци" ],
                yy: [ "година", "године", "година" ]
            },
            correctGrammaticalCase: function(e, t) {
                return 1 === e ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2];
            },
            translate: function(e, n, a) {
                var r = t.words[a];
                return 1 === a.length ? n ? r[0] : r[1] : e + " " + t.correctGrammaticalCase(e, r);
            }
        }, n = e.defineLocale("sr-cyrl", {
            months: [ "јануар", "фебруар", "март", "април", "мај", "јун", "јул", "август", "септембар", "октобар", "новембар", "децембар" ],
            monthsShort: [ "јан.", "феб.", "мар.", "апр.", "мај", "јун", "јул", "авг.", "сеп.", "окт.", "нов.", "дец." ],
            weekdays: [ "недеља", "понедељак", "уторак", "среда", "четвртак", "петак", "субота" ],
            weekdaysShort: [ "нед.", "пон.", "уто.", "сре.", "чет.", "пет.", "суб." ],
            weekdaysMin: [ "не", "по", "ут", "ср", "че", "пе", "су" ],
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD. MM. YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd, D. MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[данас у] LT",
                nextDay: "[сутра у] LT",
                nextWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[у] [недељу] [у] LT";

                      case 3:
                        return "[у] [среду] [у] LT";

                      case 6:
                        return "[у] [суботу] [у] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[у] dddd [у] LT";
                    }
                },
                lastDay: "[јуче у] LT",
                lastWeek: function() {
                    var e = [ "[прошле] [недеље] [у] LT", "[прошлог] [понедељка] [у] LT", "[прошлог] [уторка] [у] LT", "[прошле] [среде] [у] LT", "[прошлог] [четвртка] [у] LT", "[прошлог] [петка] [у] LT", "[прошле] [суботе] [у] LT" ];
                    return e[this.day()];
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "за %s",
                past: "пре %s",
                s: "неколико секунди",
                m: t.translate,
                mm: t.translate,
                h: t.translate,
                hh: t.translate,
                d: "дан",
                dd: t.translate,
                M: "месец",
                MM: t.translate,
                y: "годину",
                yy: t.translate
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return n;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : swedish (sv)
    //! author : Jens Alm : https://github.com/ulmus
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("sv", {
            months: "januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december".split("_"),
            monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
            weekdays: "söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag".split("_"),
            weekdaysShort: "sön_mån_tis_ons_tor_fre_lör".split("_"),
            weekdaysMin: "sö_må_ti_on_to_fr_lö".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Idag] LT",
                nextDay: "[Imorgon] LT",
                lastDay: "[Igår] LT",
                nextWeek: "[På] dddd LT",
                lastWeek: "[I] dddd[s] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "om %s",
                past: "för %s sedan",
                s: "några sekunder",
                m: "en minut",
                mm: "%d minuter",
                h: "en timme",
                hh: "%d timmar",
                d: "en dag",
                dd: "%d dagar",
                M: "en månad",
                MM: "%d månader",
                y: "ett år",
                yy: "%d år"
            },
            ordinalParse: /\d{1,2}(e|a)/,
            ordinal: function(e) {
                var t = e % 10, n = 1 === ~~(e % 100 / 10) ? "e" : 1 === t ? "a" : 2 === t ? "a" : "e";
                return e + n;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : tamil (ta)
    //! author : Arjunkumar Krishnamoorthy : https://github.com/tk120404
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ta", {
            months: "ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split("_"),
            monthsShort: "ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split("_"),
            weekdays: "ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை".split("_"),
            weekdaysShort: "ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி".split("_"),
            weekdaysMin: "ஞா_தி_செ_பு_வி_வெ_ச".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, HH:mm",
                LLLL: "dddd, D MMMM YYYY, HH:mm"
            },
            calendar: {
                sameDay: "[இன்று] LT",
                nextDay: "[நாளை] LT",
                nextWeek: "dddd, LT",
                lastDay: "[நேற்று] LT",
                lastWeek: "[கடந்த வாரம்] dddd, LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s இல்",
                past: "%s முன்",
                s: "ஒரு சில விநாடிகள்",
                m: "ஒரு நிமிடம்",
                mm: "%d நிமிடங்கள்",
                h: "ஒரு மணி நேரம்",
                hh: "%d மணி நேரம்",
                d: "ஒரு நாள்",
                dd: "%d நாட்கள்",
                M: "ஒரு மாதம்",
                MM: "%d மாதங்கள்",
                y: "ஒரு வருடம்",
                yy: "%d ஆண்டுகள்"
            },
            ordinalParse: /\d{1,2}வது/,
            ordinal: function(e) {
                return e + "வது";
            },
            meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
            meridiem: function(e, t, n) {
                return e < 2 ? " யாமம்" : e < 6 ? " வைகறை" : e < 10 ? " காலை" : e < 14 ? " நண்பகல்" : e < 18 ? " எற்பாடு" : e < 22 ? " மாலை" : " யாமம்";
            },
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "யாமம்" === t ? e < 2 ? e : e + 12 : "வைகறை" === t || "காலை" === t ? e : "நண்பகல்" === t && e >= 10 ? e : e + 12;
            },
            week: {
                dow: 0,
                doy: 6
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : thai (th)
    //! author : Kridsada Thanabulpong : https://github.com/sirn
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("th", {
            months: "มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม".split("_"),
            monthsShort: "มกรา_กุมภา_มีนา_เมษา_พฤษภา_มิถุนา_กรกฎา_สิงหา_กันยา_ตุลา_พฤศจิกา_ธันวา".split("_"),
            weekdays: "อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์".split("_"),
            weekdaysShort: "อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์".split("_"),
            weekdaysMin: "อา._จ._อ._พ._พฤ._ศ._ส.".split("_"),
            longDateFormat: {
                LT: "H นาฬิกา m นาที",
                LTS: "H นาฬิกา m นาที s วินาที",
                L: "YYYY/MM/DD",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY เวลา H นาฬิกา m นาที",
                LLLL: "วันddddที่ D MMMM YYYY เวลา H นาฬิกา m นาที"
            },
            meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
            isPM: function(e) {
                return "หลังเที่ยง" === e;
            },
            meridiem: function(e, t, n) {
                return e < 12 ? "ก่อนเที่ยง" : "หลังเที่ยง";
            },
            calendar: {
                sameDay: "[วันนี้ เวลา] LT",
                nextDay: "[พรุ่งนี้ เวลา] LT",
                nextWeek: "dddd[หน้า เวลา] LT",
                lastDay: "[เมื่อวานนี้ เวลา] LT",
                lastWeek: "[วัน]dddd[ที่แล้ว เวลา] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "อีก %s",
                past: "%sที่แล้ว",
                s: "ไม่กี่วินาที",
                m: "1 นาที",
                mm: "%d นาที",
                h: "1 ชั่วโมง",
                hh: "%d ชั่วโมง",
                d: "1 วัน",
                dd: "%d วัน",
                M: "1 เดือน",
                MM: "%d เดือน",
                y: "1 ปี",
                yy: "%d ปี"
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Tagalog/Filipino (tl-ph)
    //! author : Dan Hagman
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("tl-ph", {
            months: "Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split("_"),
            monthsShort: "Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split("_"),
            weekdays: "Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split("_"),
            weekdaysShort: "Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),
            weekdaysMin: "Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "MM/D/YYYY",
                LL: "MMMM D, YYYY",
                LLL: "MMMM D, YYYY HH:mm",
                LLLL: "dddd, MMMM DD, YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Ngayon sa] LT",
                nextDay: "[Bukas sa] LT",
                nextWeek: "dddd [sa] LT",
                lastDay: "[Kahapon sa] LT",
                lastWeek: "dddd [huling linggo] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "sa loob ng %s",
                past: "%s ang nakalipas",
                s: "ilang segundo",
                m: "isang minuto",
                mm: "%d minuto",
                h: "isang oras",
                hh: "%d oras",
                d: "isang araw",
                dd: "%d araw",
                M: "isang buwan",
                MM: "%d buwan",
                y: "isang taon",
                yy: "%d taon"
            },
            ordinalParse: /\d{1,2}/,
            ordinal: function(e) {
                return e;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : turkish (tr)
    //! authors : Erhan Gundogan : https://github.com/erhangundogan,
    //!           Burak Yiğit Kaya: https://github.com/BYK
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = {
            1: "'inci",
            5: "'inci",
            8: "'inci",
            70: "'inci",
            80: "'inci",
            2: "'nci",
            7: "'nci",
            20: "'nci",
            50: "'nci",
            3: "'üncü",
            4: "'üncü",
            100: "'üncü",
            6: "'ncı",
            9: "'uncu",
            10: "'uncu",
            30: "'uncu",
            60: "'ıncı",
            90: "'ıncı"
        }, n = e.defineLocale("tr", {
            months: "Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık".split("_"),
            monthsShort: "Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara".split("_"),
            weekdays: "Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi".split("_"),
            weekdaysShort: "Paz_Pts_Sal_Çar_Per_Cum_Cts".split("_"),
            weekdaysMin: "Pz_Pt_Sa_Ça_Pe_Cu_Ct".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[bugün saat] LT",
                nextDay: "[yarın saat] LT",
                nextWeek: "[haftaya] dddd [saat] LT",
                lastDay: "[dün] LT",
                lastWeek: "[geçen hafta] dddd [saat] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s sonra",
                past: "%s önce",
                s: "birkaç saniye",
                m: "bir dakika",
                mm: "%d dakika",
                h: "bir saat",
                hh: "%d saat",
                d: "bir gün",
                dd: "%d gün",
                M: "bir ay",
                MM: "%d ay",
                y: "bir yıl",
                yy: "%d yıl"
            },
            ordinalParse: /\d{1,2}'(inci|nci|üncü|ncı|uncu|ıncı)/,
            ordinal: function(e) {
                if (0 === e) return e + "'ıncı";
                var n = e % 10, a = e % 100 - n, r = e >= 100 ? 100 : null;
                return e + (t[n] || t[a] || t[r]);
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return n;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : talossan (tzl)
    //! author : Robin van der Vliet : https://github.com/robin0van0der0v with the help of Iustì Canun
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t, n, a) {
            var r = {
                s: [ "viensas secunds", "'iensas secunds" ],
                m: [ "'n míut", "'iens míut" ],
                mm: [ e + " míuts", " " + e + " míuts" ],
                h: [ "'n þora", "'iensa þora" ],
                hh: [ e + " þoras", " " + e + " þoras" ],
                d: [ "'n ziua", "'iensa ziua" ],
                dd: [ e + " ziuas", " " + e + " ziuas" ],
                M: [ "'n mes", "'iens mes" ],
                MM: [ e + " mesen", " " + e + " mesen" ],
                y: [ "'n ar", "'iens ar" ],
                yy: [ e + " ars", " " + e + " ars" ]
            };
            return a ? r[n][0] : t ? r[n][0] : r[n][1].trim();
        }
        var n = e.defineLocale("tzl", {
            months: "Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar".split("_"),
            monthsShort: "Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec".split("_"),
            weekdays: "Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi".split("_"),
            weekdaysShort: "Súl_Lún_Mai_Már_Xhú_Vié_Sát".split("_"),
            weekdaysMin: "Sú_Lú_Ma_Má_Xh_Vi_Sá".split("_"),
            longDateFormat: {
                LT: "HH.mm",
                LTS: "LT.ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM [dallas] YYYY",
                LLL: "D. MMMM [dallas] YYYY LT",
                LLLL: "dddd, [li] D. MMMM [dallas] YYYY LT"
            },
            meridiem: function(e, t, n) {
                return e > 11 ? n ? "d'o" : "D'O" : n ? "d'a" : "D'A";
            },
            calendar: {
                sameDay: "[oxhi à] LT",
                nextDay: "[demà à] LT",
                nextWeek: "dddd [à] LT",
                lastDay: "[ieiri à] LT",
                lastWeek: "[sür el] dddd [lasteu à] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "osprei %s",
                past: "ja%s",
                s: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
            },
            ordinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return n;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Morocco Central Atlas Tamaziɣt (tzm)
    //! author : Abdel Said : https://github.com/abdelsaid
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("tzm", {
            months: "ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split("_"),
            monthsShort: "ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split("_"),
            weekdays: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
            weekdaysShort: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
            weekdaysMin: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[ⴰⵙⴷⵅ ⴴ] LT",
                nextDay: "[ⴰⵙⴽⴰ ⴴ] LT",
                nextWeek: "dddd [ⴴ] LT",
                lastDay: "[ⴰⵚⴰⵏⵜ ⴴ] LT",
                lastWeek: "dddd [ⴴ] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s",
                past: "ⵢⴰⵏ %s",
                s: "ⵉⵎⵉⴽ",
                m: "ⵎⵉⵏⵓⴺ",
                mm: "%d ⵎⵉⵏⵓⴺ",
                h: "ⵙⴰⵄⴰ",
                hh: "%d ⵜⴰⵙⵙⴰⵄⵉⵏ",
                d: "ⴰⵙⵙ",
                dd: "%d oⵙⵙⴰⵏ",
                M: "ⴰⵢoⵓⵔ",
                MM: "%d ⵉⵢⵢⵉⵔⵏ",
                y: "ⴰⵙⴳⴰⵙ",
                yy: "%d ⵉⵙⴳⴰⵙⵏ"
            },
            week: {
                dow: 6,
                doy: 12
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : Morocco Central Atlas Tamaziɣt in Latin (tzm-latn)
    //! author : Abdel Said : https://github.com/abdelsaid
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("tzm-latn", {
            months: "innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split("_"),
            monthsShort: "innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split("_"),
            weekdays: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
            weekdaysShort: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
            weekdaysMin: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[asdkh g] LT",
                nextDay: "[aska g] LT",
                nextWeek: "dddd [g] LT",
                lastDay: "[assant g] LT",
                lastWeek: "dddd [g] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "dadkh s yan %s",
                past: "yan %s",
                s: "imik",
                m: "minuḍ",
                mm: "%d minuḍ",
                h: "saɛa",
                hh: "%d tassaɛin",
                d: "ass",
                dd: "%d ossan",
                M: "ayowr",
                MM: "%d iyyirn",
                y: "asgas",
                yy: "%d isgasn"
            },
            week: {
                dow: 6,
                doy: 12
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : ukrainian (uk)
    //! author : zemlanin : https://github.com/zemlanin
    //! Author : Menelion Elensúle : https://github.com/Oire
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        function t(e, t) {
            var n = e.split("_");
            return t % 10 === 1 && t % 100 !== 11 ? n[0] : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20) ? n[1] : n[2];
        }
        function n(e, n, a) {
            var r = {
                mm: "хвилина_хвилини_хвилин",
                hh: "година_години_годин",
                dd: "день_дні_днів",
                MM: "місяць_місяці_місяців",
                yy: "рік_роки_років"
            };
            return "m" === a ? n ? "хвилина" : "хвилину" : "h" === a ? n ? "година" : "годину" : e + " " + t(r[a], +e);
        }
        function a(e, t) {
            var n = {
                nominative: "січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень".split("_"),
                accusative: "січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня".split("_")
            }, a = /D[oD]? *MMMM?/.test(t) ? "accusative" : "nominative";
            return n[a][e.month()];
        }
        function r(e, t) {
            var n = {
                nominative: "неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота".split("_"),
                accusative: "неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу".split("_"),
                genitive: "неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи".split("_")
            }, a = /(\[[ВвУу]\]) ?dddd/.test(t) ? "accusative" : /\[?(?:минулої|наступної)? ?\] ?dddd/.test(t) ? "genitive" : "nominative";
            return n[a][e.day()];
        }
        function s(e) {
            return function() {
                return e + "о" + (11 === this.hours() ? "б" : "") + "] LT";
            };
        }
        var i = e.defineLocale("uk", {
            months: a,
            monthsShort: "січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд".split("_"),
            weekdays: r,
            weekdaysShort: "нд_пн_вт_ср_чт_пт_сб".split("_"),
            weekdaysMin: "нд_пн_вт_ср_чт_пт_сб".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY р.",
                LLL: "D MMMM YYYY р., HH:mm",
                LLLL: "dddd, D MMMM YYYY р., HH:mm"
            },
            calendar: {
                sameDay: s("[Сьогодні "),
                nextDay: s("[Завтра "),
                lastDay: s("[Вчора "),
                nextWeek: s("[У] dddd ["),
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                      case 3:
                      case 5:
                      case 6:
                        return s("[Минулої] dddd [").call(this);

                      case 1:
                      case 2:
                      case 4:
                        return s("[Минулого] dddd [").call(this);
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "за %s",
                past: "%s тому",
                s: "декілька секунд",
                m: n,
                mm: n,
                h: "годину",
                hh: n,
                d: "день",
                dd: n,
                M: "місяць",
                MM: n,
                y: "рік",
                yy: n
            },
            meridiemParse: /ночі|ранку|дня|вечора/,
            isPM: function(e) {
                return /^(дня|вечора)$/.test(e);
            },
            meridiem: function(e, t, n) {
                return e < 4 ? "ночі" : e < 12 ? "ранку" : e < 17 ? "дня" : "вечора";
            },
            ordinalParse: /\d{1,2}-(й|го)/,
            ordinal: function(e, t) {
                switch (t) {
                  case "M":
                  case "d":
                  case "DDD":
                  case "w":
                  case "W":
                    return e + "-й";

                  case "D":
                    return e + "-го";

                  default:
                    return e;
                }
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return i;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : uzbek (uz)
    //! author : Sardor Muminov : https://github.com/muminoff
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("uz", {
            months: "январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_"),
            monthsShort: "янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек".split("_"),
            weekdays: "Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба".split("_"),
            weekdaysShort: "Якш_Душ_Сеш_Чор_Пай_Жум_Шан".split("_"),
            weekdaysMin: "Як_Ду_Се_Чо_Па_Жу_Ша".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "D MMMM YYYY, dddd HH:mm"
            },
            calendar: {
                sameDay: "[Бугун соат] LT [да]",
                nextDay: "[Эртага] LT [да]",
                nextWeek: "dddd [куни соат] LT [да]",
                lastDay: "[Кеча соат] LT [да]",
                lastWeek: "[Утган] dddd [куни соат] LT [да]",
                sameElse: "L"
            },
            relativeTime: {
                future: "Якин %s ичида",
                past: "Бир неча %s олдин",
                s: "фурсат",
                m: "бир дакика",
                mm: "%d дакика",
                h: "бир соат",
                hh: "%d соат",
                d: "бир кун",
                dd: "%d кун",
                M: "бир ой",
                MM: "%d ой",
                y: "бир йил",
                yy: "%d йил"
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : vietnamese (vi)
    //! author : Bang Nguyen : https://github.com/bangnk
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("vi", {
            months: "tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12".split("_"),
            monthsShort: "Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12".split("_"),
            weekdays: "chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy".split("_"),
            weekdaysShort: "CN_T2_T3_T4_T5_T6_T7".split("_"),
            weekdaysMin: "CN_T2_T3_T4_T5_T6_T7".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM [năm] YYYY",
                LLL: "D MMMM [năm] YYYY HH:mm",
                LLLL: "dddd, D MMMM [năm] YYYY HH:mm",
                l: "DD/M/YYYY",
                ll: "D MMM YYYY",
                lll: "D MMM YYYY HH:mm",
                llll: "ddd, D MMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Hôm nay lúc] LT",
                nextDay: "[Ngày mai lúc] LT",
                nextWeek: "dddd [tuần tới lúc] LT",
                lastDay: "[Hôm qua lúc] LT",
                lastWeek: "dddd [tuần rồi lúc] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s tới",
                past: "%s trước",
                s: "vài giây",
                m: "một phút",
                mm: "%d phút",
                h: "một giờ",
                hh: "%d giờ",
                d: "một ngày",
                dd: "%d ngày",
                M: "một tháng",
                MM: "%d tháng",
                y: "một năm",
                yy: "%d năm"
            },
            ordinalParse: /\d{1,2}/,
            ordinal: function(e) {
                return e;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : chinese (zh-cn)
    //! author : suupic : https://github.com/suupic
    //! author : Zeno Zeng : https://github.com/zenozeng
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("zh-cn", {
            months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
            monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
            weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
            weekdaysShort: "周日_周一_周二_周三_周四_周五_周六".split("_"),
            weekdaysMin: "日_一_二_三_四_五_六".split("_"),
            longDateFormat: {
                LT: "Ah点mm分",
                LTS: "Ah点m分s秒",
                L: "YYYY-MM-DD",
                LL: "YYYY年MMMD日",
                LLL: "YYYY年MMMD日Ah点mm分",
                LLLL: "YYYY年MMMD日ddddAh点mm分",
                l: "YYYY-MM-DD",
                ll: "YYYY年MMMD日",
                lll: "YYYY年MMMD日Ah点mm分",
                llll: "YYYY年MMMD日ddddAh点mm分"
            },
            meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "凌晨" === t || "早上" === t || "上午" === t ? e : "下午" === t || "晚上" === t ? e + 12 : e >= 11 ? e : e + 12;
            },
            meridiem: function(e, t, n) {
                var a = 100 * e + t;
                return a < 600 ? "凌晨" : a < 900 ? "早上" : a < 1130 ? "上午" : a < 1230 ? "中午" : a < 1800 ? "下午" : "晚上";
            },
            calendar: {
                sameDay: function() {
                    return 0 === this.minutes() ? "[今天]Ah[点整]" : "[今天]LT";
                },
                nextDay: function() {
                    return 0 === this.minutes() ? "[明天]Ah[点整]" : "[明天]LT";
                },
                lastDay: function() {
                    return 0 === this.minutes() ? "[昨天]Ah[点整]" : "[昨天]LT";
                },
                nextWeek: function() {
                    var t, n;
                    return t = e().startOf("week"), n = this.unix() - t.unix() >= 604800 ? "[下]" : "[本]", 
                    0 === this.minutes() ? n + "dddAh点整" : n + "dddAh点mm";
                },
                lastWeek: function() {
                    var t, n;
                    return t = e().startOf("week"), n = this.unix() < t.unix() ? "[上]" : "[本]", 0 === this.minutes() ? n + "dddAh点整" : n + "dddAh点mm";
                },
                sameElse: "LL"
            },
            ordinalParse: /\d{1,2}(日|月|周)/,
            ordinal: function(e, t) {
                switch (t) {
                  case "d":
                  case "D":
                  case "DDD":
                    return e + "日";

                  case "M":
                    return e + "月";

                  case "w":
                  case "W":
                    return e + "周";

                  default:
                    return e;
                }
            },
            relativeTime: {
                future: "%s内",
                past: "%s前",
                s: "几秒",
                m: "1 分钟",
                mm: "%d 分钟",
                h: "1 小时",
                hh: "%d 小时",
                d: "1 天",
                dd: "%d 天",
                M: "1 个月",
                MM: "%d 个月",
                y: "1 年",
                yy: "%d 年"
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, n) {
    //! moment.js locale configuration
    //! locale : traditional chinese (zh-tw)
    //! author : Ben : https://github.com/ben-lin
    !function(e, t) {
        t(n(9));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("zh-tw", {
            months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
            monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
            weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
            weekdaysShort: "週日_週一_週二_週三_週四_週五_週六".split("_"),
            weekdaysMin: "日_一_二_三_四_五_六".split("_"),
            longDateFormat: {
                LT: "Ah點mm分",
                LTS: "Ah點m分s秒",
                L: "YYYY年MMMD日",
                LL: "YYYY年MMMD日",
                LLL: "YYYY年MMMD日Ah點mm分",
                LLLL: "YYYY年MMMD日ddddAh點mm分",
                l: "YYYY年MMMD日",
                ll: "YYYY年MMMD日",
                lll: "YYYY年MMMD日Ah點mm分",
                llll: "YYYY年MMMD日ddddAh點mm分"
            },
            meridiemParse: /早上|上午|中午|下午|晚上/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "早上" === t || "上午" === t ? e : "中午" === t ? e >= 11 ? e : e + 12 : "下午" === t || "晚上" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, n) {
                var a = 100 * e + t;
                return a < 900 ? "早上" : a < 1130 ? "上午" : a < 1230 ? "中午" : a < 1800 ? "下午" : "晚上";
            },
            calendar: {
                sameDay: "[今天]LT",
                nextDay: "[明天]LT",
                nextWeek: "[下]ddddLT",
                lastDay: "[昨天]LT",
                lastWeek: "[上]ddddLT",
                sameElse: "L"
            },
            ordinalParse: /\d{1,2}(日|月|週)/,
            ordinal: function(e, t) {
                switch (t) {
                  case "d":
                  case "D":
                  case "DDD":
                    return e + "日";

                  case "M":
                    return e + "月";

                  case "w":
                  case "W":
                    return e + "週";

                  default:
                    return e;
                }
            },
            relativeTime: {
                future: "%s內",
                past: "%s前",
                s: "幾秒",
                m: "一分鐘",
                mm: "%d分鐘",
                h: "一小時",
                hh: "%d小時",
                d: "一天",
                dd: "%d天",
                M: "一個月",
                MM: "%d個月",
                y: "一年",
                yy: "%d年"
            }
        });
        return t;
    });
}, function(e, t, n) {
    "use strict";
    function a(e) {
        return e && e.__esModule ? e : {
            default: e
        };
    }
    function r(e) {
        function t() {
            o.default.hidden ? (window.clearInterval(a), a = null) : null === a && (a = window.setInterval(n, d), 
            n());
        }
        var n = function() {
            o.default.spawn(u, {
                err: "message",
                environ: [ "LC_ALL=C" ],
                superuser: "try"
            }).then(function(t) {
                var n = t.split("\n");
                n.map(function(e) {
                    var t = e.trim().split(":");
                    if (2 === t.length) {
                        var n = t[0].trim(), a = t[1].trim();
                        "SELinux status" == n ? _.enabled = "enabled" == a : "Current mode" == n ? _.enforcing = "enforcing" == a : "Mode from config file" == n && ("error (Permission denied)" == a ? _.configEnforcing = void 0 : _.configEnforcing = "enforcing" == a);
                    }
                }), e && e(_, void 0);
            }, function(t) {
                void 0 !== _ && e && (_.enabled = void 0, e(_, t.message));
            });
        }, a = null;
        return o.default.addEventListener("visibilitychange", t), t(), null === a && n(), 
        _;
    }
    function s(e) {
        var t = [ "setenforce", e ? "1" : "0" ];
        return o.default.spawn(t, {
            superuser: !0,
            err: "message"
        });
    }
    Object.defineProperty(t, "__esModule", {
        value: !0
    }), t.init = r, t.setEnforcing = s;
    var i = n(6), o = a(i), d = 1e4, u = "sestatus", _ = {
        enabled: void 0,
        enforcing: !1,
        configEnforcing: !1
    };
}, function(e, t, n) {
    "use strict";
    var a = n(6), r = a.gettext, s = n(7), i = n(99), o = n(102).OnOffSwitch, d = s.createClass({
        displayName: "SELinuxEventDetails",
        getInitialState: function() {
            var e;
            return this.props.details && (e = this.props.details.pluginAnalysis.map(function() {
                return !1;
            })), {
                solutionExpanded: e
            };
        },
        handleSolutionDetailsClick: function(e, t) {
            var n = this.state.solutionExpanded;
            n[e] = !n[e], this.setState({
                solutionExpanded: n
            }), t.stopPropagation(), t.preventDefault();
        },
        runFix: function(e) {
            var t = this.state.solutionExpanded;
            t[e] && (t[e] = !1, this.setState({
                solutionExpanded: t
            }));
            var n = this.props.details.localId, a = this.props.details.pluginAnalysis[e].analysisId;
            this.props.runFix(n, a);
        },
        render: function() {
            if (!this.props.details) {
                var e = void 0 === this.props.details;
                return s.createElement(_, {
                    icon: e ? "waiting" : "error",
                    description: r(e ? "Waiting for details..." : "Unable to get alert details."),
                    message: null,
                    relative: !0
                });
            }
            var t = this, n = this.props.details.pluginAnalysis.map(function(e, n) {
                var a = null, i = null;
                e.fixable ? (t.props.fix && t.props.fix.plugin == e.analysisId && (i = t.props.fix.running ? s.createElement("div", null, s.createElement("div", {
                    className: "spinner setroubleshoot-progress-spinner"
                }), s.createElement("span", {
                    className: "setroubleshoot-progress-message"
                }, " ", r("Applying solution..."))) : t.props.fix.success ? s.createElement("div", {
                    className: "alert alert-success"
                }, s.createElement("span", {
                    className: "pficon pficon-ok"
                }), s.createElement("span", null, " ", r("Solution applied successfully"), ": ", t.props.fix.result)) : s.createElement("div", {
                    className: "alert alert-danger"
                }, s.createElement("span", {
                    className: "pficon pficon-error-circle-o"
                }), s.createElement("span", null, " ", r("Solution failed"), ": ", t.props.fix.result))), 
                a = s.createElement("div", {
                    className: "setroubleshoot-listing-action"
                }, s.createElement("button", {
                    className: "btn btn-default",
                    onClick: t.runFix.bind(t, n)
                }, r("Apply this solution")))) : a = s.createElement("div", {
                    className: "setroubleshoot-listing-action"
                }, s.createElement("span", null, r("Unable to apply this solution automatically")));
                var o, d, u, _ = s.createElement("a", {
                    href: "#",
                    onClick: t.handleSolutionDetailsClick.bind(t, n)
                }, r("solution details"));
                return t.state.solutionExpanded[n] ? (u = s.createElement("i", {
                    className: "fa fa-angle-down"
                }), o = s.createElement("div", null, u, " ", _), d = s.createElement("div", null, e.doText)) : (u = s.createElement("i", {
                    className: "fa fa-angle-right"
                }), o = s.createElement("div", null, u, " ", _), d = null), s.createElement("div", {
                    className: "list-group-item",
                    key: e.analysisId
                }, s.createElement("div", null, s.createElement("div", null, s.createElement("span", null, e.ifText)), a, s.createElement("div", null, e.thenText), o, d, i));
            });
            return s.createElement("div", {
                className: "list-group"
            }, n);
        }
    }), u = s.createClass({
        displayName: "SELinuxEventLog",
        render: function() {
            if (!this.props.details) {
                var e = void 0 === this.props.details;
                return s.createElement(_, {
                    icon: e ? "waiting" : "error",
                    description: r(e ? "Waiting for details..." : "Unable to get alert details."),
                    message: null,
                    relative: !0
                });
            }
            var t = this, n = this.props.details.auditEvent.map(function(e, n) {
                return s.createElement("div", {
                    key: t.props.details.localId + "." + n
                }, e);
            });
            return s.createElement("div", {
                className: "setroubleshoot-log"
            }, n);
        }
    }), _ = s.createClass({
        displayName: "EmptyState",
        render: function() {
            var e = null;
            this.props.description && (e = s.createElement("h1", null, this.props.description));
            var t = null;
            this.props.message && (t = s.createElement("p", null, this.props.message));
            var n = "curtains-ct";
            this.props.relative && (n = "curtains-relative");
            var a = this.props.icon;
            return "waiting" == a ? a = s.createElement("div", {
                className: "spinner spinner-lg"
            }) : "error" == a && (a = s.createElement("div", {
                className: "pficon pficon-error-circle-o"
            })), s.createElement("div", {
                className: n + " blank-slate-pf"
            }, s.createElement("div", {
                className: "blank-slate-pf-icon"
            }, a), e, t);
        }
    }), l = s.createClass({
        displayName: "DismissableError",
        handleDismissError: function(e) {
            e && 0 === e.button && (this.props.dismissError && this.props.dismissError(), e.stopPropagation());
        },
        render: function() {
            return s.createElement("div", {
                className: "alert alert-danger alert-dismissable alert-ct-top"
            }, s.createElement("span", {
                className: "pficon pficon-error-circle-o"
            }), s.createElement("span", null, this.props.children), s.createElement("button", {
                type: "button",
                className: "close",
                "aria-hidden": "true",
                onClick: this.handleDismissError
            }, s.createElement("span", {
                className: "pficon pficon-close"
            })));
        }
    }), m = s.createClass({
        displayName: "SELinuxStatus",
        render: function() {
            var e;
            if (this.props.selinuxStatusError && (e = s.createElement(l, {
                dismissError: this.props.dismissError
            }, this.props.selinuxStatusError)), void 0 === this.props.selinuxStatus.enabled) return s.createElement("div", null, e, s.createElement("h3", null, r("SELinux system status is unknown.")));
            if (!this.props.selinuxStatus.enabled) return s.createElement("div", null, e, s.createElement("h3", null, r("SELinux is disabled on the system.")));
            var t, n = void 0 === this.props.selinuxStatus.configEnforcing;
            return n ? t = s.createElement("span", null, " ", r("The configured state is unknown, it might change on the next boot.")) : n || this.props.selinuxStatus.enforcing === this.props.selinuxStatus.configEnforcing || (t = s.createElement("span", null, " ", r("Setting deviates from the configured state and will revert on the next boot."))), 
            s.createElement("div", {
                className: "selinux-policy-ct"
            }, s.createElement("h2", null, r("SELinux Policy")), e, s.createElement("label", null, r("Enforce policy:"), s.createElement(o, {
                state: this.props.selinuxStatus.enforcing,
                onChange: this.props.changeSelinuxMode
            })), t);
        }
    }), c = s.createClass({
        displayName: "SETroubleshootPage",
        handleDeleteAlert: function(e, t) {
            t && 0 === t.button && (this.props.deleteAlert && this.props.deleteAlert(e), t.stopPropagation());
        },
        handleDismissError: function(e) {
            e && 0 === e.button && (this.props.dismissError && this.props.dismissError(), e.stopPropagation());
        },
        render: function() {
            if (this.props.selinuxStatus.enabled === !1) return s.createElement(_, {
                icon: s.createElement("div", {
                    className: "fa fa-exclamation-circle"
                }),
                description: r("SELinux is disabled on the system"),
                message: null,
                relative: !1
            });
            var e, t, n = this, o = r("SELinux Access Control Errors"), l = r("No SELinux alerts.");
            this.props.connected ? e = this.props.entries.map(function(e) {
                e.runFix = n.props.runFix;
                var t;
                e.details && "firstSeen" in e.details && (t = e.details.reportCount >= 2 ? a.format(r("Occurred between $0 and $1"), e.details.firstSeen.calendar(), e.details.lastSeen.calendar()) : a.format(r("Occurred $0"), e.details.firstSeen.calendar()));
                var o;
                e.details && (o = n.handleDeleteAlert.bind(n, e.details.localId));
                var _ = s.createElement("button", {
                    title: "Dismiss",
                    className: "pficon pficon-delete btn btn-danger",
                    onClick: o,
                    disabled: !o || !n.props.deleteAlert
                }), l = [ {
                    name: r("Solutions"),
                    renderer: d,
                    data: e
                }, {
                    name: r("Audit log"),
                    renderer: u,
                    data: e
                } ], m = null;
                e.details && "level" in e.details && "red" == e.details.level && (m = s.createElement("span", {
                    className: "fa fa-exclamation-triangle"
                }));
                var c, h = [ m, {
                    name: e.description,
                    header: !0
                } ];
                return e.count > 1 ? (c = a.format(a.ngettext("$0 occurrence", "$1 occurrences", e.count), e.count), 
                h.push(s.createElement("span", {
                    className: "badge",
                    title: c
                }, e.count))) : h.push(s.createElement("span", null)), s.createElement(i.ListingRow, {
                    columns: h,
                    tabRenderers: l,
                    listingDetail: t,
                    listingActions: [ _ ]
                });
            }) : this.props.connecting ? l = s.createElement("div", null, s.createElement("div", {
                className: "spinner spinner-sm"
            }), s.createElement("span", null, r("Connecting to SETroubleshoot daemon..."))) : (o = "", 
            l = s.createElement("span", null, r("Install setroubleshoot-server to troubleshoot SELinux events."))), 
            t = s.createElement(i.Listing, {
                title: o,
                emptyCaption: l
            }, e);
            var c;
            return this.props.error && (c = s.createElement("div", {
                className: "alert alert-danger alert-dismissable alert-ct-top"
            }, s.createElement("span", {
                className: "pficon pficon-error-circle-o"
            }), s.createElement("span", null, this.props.error), s.createElement("button", {
                type: "button",
                className: "close",
                "aria-hidden": "true",
                onClick: this.handleDismissError
            }, s.createElement("span", {
                className: "pficon pficon-close"
            })))), s.createElement("div", {
                className: "container-fluid"
            }, s.createElement(m, {
                selinuxStatus: this.props.selinuxStatus,
                selinuxStatusError: this.props.selinuxStatusError,
                changeSelinuxMode: this.props.changeSelinuxMode,
                dismissError: this.props.dismissStatusError
            }), c, t);
        }
    });
    e.exports = {
        SETroubleshootPage: c
    };
}, function(e, t, n) {
    "use strict";
    var a = Object.assign || function(e) {
        for (var t = 1; t < arguments.length; t++) {
            var n = arguments[t];
            for (var a in n) Object.prototype.hasOwnProperty.call(n, a) && (e[a] = n[a]);
        }
        return e;
    }, r = n(7);
    n(100);
    var s = r.createClass({
        displayName: "ListingRow",
        propTypes: {
            rowId: r.PropTypes.string,
            columns: r.PropTypes.array.isRequired,
            tabRenderers: r.PropTypes.array,
            navigateToItem: r.PropTypes.func,
            listingDetail: r.PropTypes.node,
            listingActions: r.PropTypes.arrayOf(r.PropTypes.node),
            selectChanged: r.PropTypes.func,
            selected: r.PropTypes.bool,
            initiallyExpanded: r.PropTypes.bool,
            initiallyActiveTab: r.PropTypes.bool
        },
        getDefaultProps: function() {
            return {
                tabRenderers: [],
                navigateToItem: null
            };
        },
        getInitialState: function() {
            return {
                expanded: this.props.initiallyExpanded,
                activeTab: this.props.initiallyActiveTab ? this.props.initiallyActiveTab : 0,
                loadedTabs: {},
                selected: this.props.selected
            };
        },
        handleNavigateClick: function(e) {
            e && 0 === e.button && this.props.navigateToItem();
        },
        handleExpandClick: function(e) {
            if (e && 0 === e.button) {
                var t = !this.state.expanded && this.props.tabRenderers.length > 0;
                this.setState({
                    expanded: t
                });
                var n = {};
                if (t) {
                    var a, r;
                    for (a = 0; a < this.props.tabRenderers.length; a++) r = "presence" in this.props.tabRenderers[a] ? this.props.tabRenderers[a].presence : "default", 
                    "always" == r && (n[a] = !0);
                    n[this.state.activeTab] = !0;
                }
                this.setState({
                    loadedTabs: n
                }), e.stopPropagation(), e.preventDefault();
            }
        },
        handleSelectClick: function(e) {
            if (e && 0 === e.button) {
                var t = !this.state.selected;
                this.setState({
                    selected: t
                }), this.props.selectChanged && this.props.selectChanged(t), e.stopPropagation(), 
                e.preventDefault();
            }
        },
        handleTabClick: function(e, t) {
            if (t && 0 === t.button) {
                var n = this.state.activeTab, a = "default", r = this.state.loadedTabs;
                n !== e && ("presence" in this.props.tabRenderers[n] && (a = this.props.tabRenderers[n].presence), 
                "onlyActive" == a && delete r[n], r[e] = !0, this.setState({
                    loadedTabs: r,
                    activeTab: e
                })), t.stopPropagation(), t.preventDefault();
            }
        },
        render: function() {
            var e, t = this, n = !!this.props.navigateToItem && !this.state.expanded, s = this.props.columns.map(function(e) {
                return "string" == typeof e || "number" == typeof e || null === e || void 0 === e || e instanceof String || r.isValidElement(e) ? r.createElement("td", null, e) : "header" in e && e.header ? r.createElement("th", null, e.name) : "tight" in e && e.tight ? r.createElement("td", {
                    className: "listing-ct-actions"
                }, e.name || e.element) : r.createElement("td", null, e.name);
            }), i = this.props.tabRenderers.length > 0;
            e = i ? r.createElement("td", {
                className: "listing-ct-toggle",
                onClick: n ? this.handleExpandClick : void 0
            }, r.createElement("i", {
                className: "fa fa-fw"
            })) : r.createElement("td", {
                className: "listing-ct-toggle"
            });
            var o = [ "listing-ct-item" ];
            n || o.push("listing-ct-nonavigate"), i || o.push("listing-ct-noexpand");
            var d, u = !(n || i) && void 0 !== this.state.selected;
            u ? (d = this.handleSelectClick, this.state.selected && o.push("listing-ct-selected")) : d = n ? this.handleNavigateClick : this.handleExpandClick;
            var _ = r.createElement("tr", {
                "data-row-id": this.props.rowId,
                className: o.join(" "),
                onClick: d
            }, e, s);
            if (this.state.expanded) {
                var l, m, c, h, p = this.props.tabRenderers.map(function(e, n) {
                    return r.createElement("li", {
                        key: n,
                        className: n === t.state.activeTab ? "active" : ""
                    }, r.createElement("a", {
                        href: "#",
                        onClick: t.handleTabClick.bind(t, n)
                    }, e.name));
                }), f = [];
                for (l = 0; l < this.props.tabRenderers.length; l++) m = this.props.tabRenderers[l].renderer, 
                c = this.props.tabRenderers[l].data, (l === this.state.activeTab || l in this.state.loadedTabs) && (h = r.createElement(m, a({
                    key: this.props.tabRenderers[l].name,
                    hidden: l !== this.state.activeTab
                }, c)), l === this.state.activeTab ? f.push(r.createElement("div", {
                    className: "listing-ct-body",
                    key: l
                }, h)) : f.push(r.createElement("div", {
                    className: "listing-ct-body",
                    key: l,
                    hidden: !0
                }, h)));
                var M;
                return "listingDetail" in this.props && (M = r.createElement("span", {
                    className: "listing-ct-caption"
                }, this.props.listingDetail)), r.createElement("tbody", {
                    className: "open"
                }, _, r.createElement("tr", {
                    className: "listing-ct-panel"
                }, r.createElement("td", {
                    colSpan: s.length + (e ? 1 : 0)
                }, r.createElement("div", {
                    className: "listing-ct-head"
                }, r.createElement("div", {
                    className: "listing-ct-actions"
                }, M, this.props.listingActions), r.createElement("ul", {
                    className: "nav nav-tabs nav-tabs-pf"
                }, p)), f)));
            }
            return r.createElement("tbody", null, _, r.createElement("tr", {
                className: "listing-ct-panel"
            }));
        }
    }), i = r.createClass({
        displayName: "Listing",
        propTypes: {
            title: r.PropTypes.string.isRequired,
            fullWidth: r.PropTypes.bool,
            emptyCaption: r.PropTypes.string.isRequired,
            columnTitles: r.PropTypes.arrayOf(r.PropTypes.string),
            actions: r.PropTypes.arrayOf(r.PropTypes.node)
        },
        getDefaultProps: function() {
            return {
                fullWidth: !0,
                columnTitles: [],
                actions: []
            };
        },
        render: function() {
            var e = [ "listing", "listing-ct" ];
            this.props.fullWidth && e.push("listing-ct-wide");
            var t, n, a;
            this.props.children && 0 !== this.props.children.length ? this.props.columnTitles.length ? (a = !1, 
            this.props.children.forEach(function(e) {
                void 0 !== e.props.selected && (a = !0);
            }), a && this.props.children.forEach(function(e) {
                void 0 === e.props.selected && (e.props.selected = !1);
            }), n = r.createElement("tr", null, r.createElement("th", {
                className: "listing-ct-toggle"
            }), this.props.columnTitles.map(function(e) {
                return r.createElement("th", null, e);
            }))) : n = r.createElement("tr", null) : (t = "listing-ct-empty", n = r.createElement("tr", null, r.createElement("td", null, this.props.emptyCaption)));
            var s;
            return (this.props.title || this.props.actions && this.props.actions.length > 0) && (s = r.createElement("caption", {
                className: "cockpit-caption"
            }, this.props.title, this.props.actions)), r.createElement("table", {
                className: e.join(" ")
            }, s, r.createElement("thead", {
                className: t
            }, n), this.props.children);
        }
    });
    e.exports = {
        ListingRow: s,
        Listing: i
    };
}, function(e, t) {}, , function(e, t, n) {
    "use strict";
    var a = n(6), r = n(7), s = a.gettext;
    n(103);
    var i = r.createClass({
        displayName: "OnOffSwitch",
        getDefaultProps: function() {
            return {
                captionOff: s("Off"),
                captionOn: s("On"),
                enabled: !0
            };
        },
        handleOnOffClick: function(e, t) {
            t && 0 === t.button && (this.props.onChange && this.props.enabled && this.props.onChange(e), 
            t.stopPropagation());
        },
        render: function() {
            var e = [ "btn" ], t = [ "btn" ];
            this.props.state ? e.push("active") : t.push("active"), this.props.enabled || (e.push("disabled"), 
            t.push("disabled"));
            var n = this.handleOnOffClick.bind(this, !this.props.state);
            return r.createElement("div", {
                className: "btn-group btn-onoff-ct",
                enabled: this.props.enabled
            }, r.createElement("label", {
                className: e.join(" ")
            }, r.createElement("input", {
                type: "radio"
            }), r.createElement("span", {
                onClick: n
            }, this.props.captionOn)), r.createElement("label", {
                className: t.join(" ")
            }, r.createElement("input", {
                type: "radio"
            }), r.createElement("span", {
                onClick: n
            }, this.props.captionOff)));
        }
    });
    e.exports = {
        OnOffSwitch: i
    };
}, function(e, t) {}, function(e, t) {} ]);
//# sourceMappingURL=selinux.min.js.map