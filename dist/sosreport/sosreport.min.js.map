{"version":3,"sources":["webpack:///sosreport/sosreport.min.js","webpack:///webpack/bootstrap 6e23a1f298dcfbdf7a25","webpack:///../pkg/sosreport/index.js","webpack:///external \"cockpit\"","webpack:///external \"jQuery\"","webpack:///../pkg/sosreport/run-sosreport.sh"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","sos_init","sos_create","sos_error","message","extra","$","hide","text","show","_","css","sos_archive_url","sos_archive_files","task","cockpit","script","run_sosreport_sh","superuser","err","pty","sos_task","output","progress_regex","archive_regex","stream","exec","parseInt","toString","done","archive","basename","replace","indexOf","substr","query","window","btoa","JSON","stringify","payload","binary","path","max_read_size","external","content-disposition","content-type","transport","csrf_token","fail","error","sos_cancel","close","length","spawn","concat","console","log","modal","sos_download","iframe","attr","on","event","title","get","contentDocument","append","init","translate","wait","gettext","jQuery"],"mappings":"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","file":"sosreport/sosreport.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(5);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\"use strict\";\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2015 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\tvar cockpit = __webpack_require__(2);\n\tvar $ = __webpack_require__(3);\n\t\n\tvar _ = cockpit.gettext;\n\t\n\tvar run_sosreport_sh = __webpack_require__(4);\n\t\n\tvar sos_task;\n\tvar sos_archive_url;\n\tvar sos_archive_files;\n\t\n\tfunction sos_init() {\n\t    // Start right away\n\t    sos_create();\n\t}\n\t\n\tfunction sos_error(message, extra) {\n\t    $(\"#sos-alert, #sos-progress, #sos-download\").hide();\n\t    $(\"#sos-error .alert-message\").text(message);\n\t    if (extra) {\n\t        $(\"#sos-error-extra\").text(extra);\n\t        $(\"#sos-error-extra\").show();\n\t    } else $(\"#sos-error-extra\").hide();\n\t    $(\"#sos-error\").show();\n\t    $(\"#sos-cancel\").text(_(\"Close\"));\n\t}\n\t\n\tfunction sos_create() {\n\t    $(\"#sos-progress .progress-bar\").css(\"width\", \"0%\");\n\t    $(\"#sos-download, #sos-error\").hide();\n\t    $(\"#sos-cancel\").text(_(\"Cancel\"));\n\t\n\t    sos_archive_url = null;\n\t    sos_archive_files = [];\n\t\n\t    var task = cockpit.script(run_sosreport_sh, [\"--batch\"], { superuser: true, err: \"out\", pty: true });\n\t    sos_task = task;\n\t\n\t    // TODO - Use a real API instead of scraping stdout once such\n\t    //        an API exists.\n\t\n\t    var output = \"\";\n\t    var progress_regex = /Running ([0-9]+)\\/([0-9]+):/g;\n\t    var archive_regex = /Your sosreport has been generated and saved in:[ \\r\\n]+(\\/[^\\r\\n]+)/;\n\t\n\t    task.stream(function (text) {\n\t        if (sos_task == task) {\n\t            var m, p;\n\t\n\t            output += text;\n\t\n\t            p = 0;\n\t            while (m = progress_regex.exec(output)) {\n\t                p = parseInt(m[1], 10) / parseInt(m[2], 10) * 100;\n\t            }\n\t            $(\"#sos-alert, #sos-progress\").show();\n\t            $(\"#sos-progress .progress-bar\").css(\"width\", p.toString() + \"%\");\n\t        }\n\t    });\n\t    task.done(function () {\n\t        if (sos_task == task) {\n\t            var m = archive_regex.exec(output);\n\t            if (m) {\n\t                var archive = m[1];\n\t                var basename = archive.replace(/.*\\//, \"\");\n\t\n\t                // When running sosreport in a container on the\n\t                // Atomics, the archive path needs to be adjusted.\n\t                //\n\t                if (archive.indexOf(\"/host\") === 0) archive = archive.substr(5);\n\t\n\t                sos_archive_files = [archive, archive + \".md5\"];\n\t\n\t                var query = window.btoa(JSON.stringify({\n\t                    payload: \"fsread1\",\n\t                    binary: \"raw\",\n\t                    path: archive,\n\t                    superuser: true,\n\t                    max_read_size: 150 * 1024 * 1024,\n\t                    external: {\n\t                        \"content-disposition\": 'attachment; filename=\"' + basename + '\"',\n\t                        \"content-type\": \"application/x-xz, application/octet-stream\"\n\t                    }\n\t                }));\n\t                sos_archive_url = \"/cockpit/channel/\" + cockpit.transport.csrf_token + '?' + query;\n\t                $(\"#sos-progress, #sos-error\").hide();\n\t                $(\"#sos-alert, #sos-download\").show();\n\t                $(\"#sos-cancel\").text(_(\"Close\"));\n\t            } else {\n\t                sos_error(_(\"No archive has been created.\"), output);\n\t            }\n\t            sos_task = null;\n\t        }\n\t    });\n\t    task.fail(function (error) {\n\t        if (sos_task == task) {\n\t            sos_error(error.toString(), output);\n\t            sos_task = null;\n\t        }\n\t    });\n\t}\n\t\n\tfunction sos_cancel() {\n\t    if (sos_task) {\n\t        sos_task.close(\"cancelled\");\n\t        sos_task = null;\n\t    }\n\t    if (sos_archive_files.length > 0) {\n\t        cockpit.spawn([\"rm\"].concat(sos_archive_files), { superuser: true, err: \"message\" }).fail(function (error) {\n\t            console.log(\"failed to remove\", sos_archive_files, error);\n\t        });\n\t    }\n\t    sos_archive_url = null;\n\t    sos_archive_files = [];\n\t    $(\"#sos\").modal('hide');\n\t}\n\t\n\tfunction sos_download() {\n\t    // We download via a hidden iframe to get better control over\n\t    // the error cases.\n\t    var iframe = $('<iframe>').attr('src', sos_archive_url).hide();\n\t    iframe.on('load', function (event) {\n\t        var title = iframe.get(0).contentDocument.title;\n\t        if (title) sos_error(title);\n\t    });\n\t    $('body').append(iframe);\n\t}\n\t\n\tfunction init() {\n\t    $(function () {\n\t        $(\"#sos\").on(\"show.bs.modal\", sos_init);\n\t        $(\"#sos-cancel\").on(\"click\", sos_cancel);\n\t        $('#sos-download button').on('click', sos_download);\n\t\n\t        cockpit.translate();\n\t        $('body').show();\n\t\n\t        // Send a 'init' message.  This tells the tests that we\n\t        // are ready to go.\n\t        //\n\t        cockpit.transport.wait(function () {});\n\t    });\n\t}\n\t\n\tinit();\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = cockpit;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = jQuery;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"#! /bin/bash\\n\\npresent () {\\n    which \\\"$1\\\" >/dev/null 2>/dev/null\\n}\\n\\nif present sosreport; then\\n    exec sosreport \\\"$@\\\"\\nelif present atomic; then\\n\\n    # HACK - sosreport inside the container does not behave as\\n    #        advertised, so we fix it via --sysroot and --tmp-dir.\\n    #\\n    # https://bugzilla.redhat.com/show_bug.cgi?id=1299794\\n    # https://bugzilla.redhat.com/show_bug.cgi?id=1277223\\n\\n    exec atomic run rhel7/rhel-tools -- sosreport --sysroot /host --tmp-dir /host/var/tmp \\\"$@\\\"\\nelse\\n    echo >&2 \\\"The sosreport utility is not installed.  This should not happen.  Please complain to your distribution vendor.\\\"\\n    exit 1\\nfi\\n\"\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// sosreport/sosreport.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 6e23a1f298dcfbdf7a25","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2015 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar cockpit = require(\"cockpit\");\nvar $ = require(\"jquery\");\n\nvar _ = cockpit.gettext;\n\nvar run_sosreport_sh = require(\"raw!./run-sosreport.sh\");\n\nvar sos_task;\nvar sos_archive_url;\nvar sos_archive_files;\n\nfunction sos_init() {\n    // Start right away\n    sos_create();\n}\n\nfunction sos_error(message, extra) {\n    $(\"#sos-alert, #sos-progress, #sos-download\").hide();\n    $(\"#sos-error .alert-message\").text(message);\n    if (extra) {\n        $(\"#sos-error-extra\").text(extra);\n        $(\"#sos-error-extra\").show();\n    } else\n        $(\"#sos-error-extra\").hide();\n    $(\"#sos-error\").show();\n    $(\"#sos-cancel\").text(_(\"Close\"));\n}\n\nfunction sos_create() {\n    $(\"#sos-progress .progress-bar\").css(\"width\", \"0%\");\n    $(\"#sos-download, #sos-error\").hide();\n    $(\"#sos-cancel\").text(_(\"Cancel\"));\n\n    sos_archive_url = null;\n    sos_archive_files = [ ];\n\n    var task = cockpit.script(run_sosreport_sh, [ \"--batch\" ],\n                              { superuser: true, err: \"out\", pty: true });\n    sos_task = task;\n\n    // TODO - Use a real API instead of scraping stdout once such\n    //        an API exists.\n\n    var output = \"\";\n    var progress_regex = /Running ([0-9]+)\\/([0-9]+):/g;\n    var archive_regex = /Your sosreport has been generated and saved in:[ \\r\\n]+(\\/[^\\r\\n]+)/;\n\n    task.stream(function (text) {\n        if (sos_task == task) {\n            var m, p;\n\n            output += text;\n\n            p = 0;\n            while ((m = progress_regex.exec(output))) {\n                p = (parseInt(m[1], 10) / parseInt(m[2], 10)) * 100;\n            }\n            $(\"#sos-alert, #sos-progress\").show();\n            $(\"#sos-progress .progress-bar\").css(\"width\", p.toString() + \"%\");\n        }\n    });\n    task.done(function () {\n        if (sos_task == task) {\n            var m = archive_regex.exec(output);\n            if (m) {\n                var archive = m[1];\n                var basename = archive.replace(/.*\\//, \"\");\n\n                // When running sosreport in a container on the\n                // Atomics, the archive path needs to be adjusted.\n                //\n                if (archive.indexOf(\"/host\") === 0)\n                    archive = archive.substr(5);\n\n                sos_archive_files = [ archive, archive + \".md5\" ];\n\n                var query = window.btoa(JSON.stringify({\n                    payload: \"fsread1\",\n                    binary: \"raw\",\n                    path: archive,\n                    superuser: true,\n                    max_read_size: 150 * 1024 * 1024,\n                    external: {\n                        \"content-disposition\": 'attachment; filename=\"' + basename + '\"',\n                        \"content-type\": \"application/x-xz, application/octet-stream\"\n                    }\n                }));\n                sos_archive_url = \"/cockpit/channel/\" + cockpit.transport.csrf_token + '?' + query;\n                $(\"#sos-progress, #sos-error\").hide();\n                $(\"#sos-alert, #sos-download\").show();\n                $(\"#sos-cancel\").text(_(\"Close\"));\n            } else {\n                sos_error(_(\"No archive has been created.\"), output);\n            }\n            sos_task = null;\n        }\n    });\n    task.fail(function (error) {\n        if (sos_task == task) {\n            sos_error(error.toString(), output);\n            sos_task = null;\n        }\n    });\n}\n\nfunction sos_cancel() {\n    if (sos_task) {\n        sos_task.close(\"cancelled\");\n        sos_task = null;\n    }\n    if (sos_archive_files.length > 0) {\n        cockpit.spawn([ \"rm\" ].concat(sos_archive_files), { superuser: true, err: \"message\" })\n                .fail(function (error) {\n                    console.log(\"failed to remove\", sos_archive_files, error);\n                });\n    }\n    sos_archive_url = null;\n    sos_archive_files = [ ];\n    $(\"#sos\").modal('hide');\n}\n\nfunction sos_download() {\n    // We download via a hidden iframe to get better control over\n    // the error cases.\n    var iframe = $('<iframe>').attr('src', sos_archive_url)\n            .hide();\n    iframe.on('load', function (event) {\n        var title = iframe.get(0).contentDocument.title;\n        if (title)\n            sos_error(title);\n    });\n    $('body').append(iframe);\n}\n\nfunction init() {\n    $(function () {\n        $(\"#sos\").on(\"show.bs.modal\", sos_init);\n        $(\"#sos-cancel\").on(\"click\", sos_cancel);\n        $('#sos-download button').on('click', sos_download);\n\n        cockpit.translate();\n        $('body').show();\n\n        // Send a 'init' message.  This tells the tests that we\n        // are ready to go.\n        //\n        cockpit.transport.wait(function () { });\n    });\n}\n\ninit();\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/sosreport/index.js","module.exports = cockpit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cockpit\"\n// module id = 2\n// module chunks = 0","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 3\n// module chunks = 0","module.exports = \"#! /bin/bash\\n\\npresent () {\\n    which \\\"$1\\\" >/dev/null 2>/dev/null\\n}\\n\\nif present sosreport; then\\n    exec sosreport \\\"$@\\\"\\nelif present atomic; then\\n\\n    # HACK - sosreport inside the container does not behave as\\n    #        advertised, so we fix it via --sysroot and --tmp-dir.\\n    #\\n    # https://bugzilla.redhat.com/show_bug.cgi?id=1299794\\n    # https://bugzilla.redhat.com/show_bug.cgi?id=1277223\\n\\n    exec atomic run rhel7/rhel-tools -- sosreport --sysroot /host --tmp-dir /host/var/tmp \\\"$@\\\"\\nelse\\n    echo >&2 \\\"The sosreport utility is not installed.  This should not happen.  Please complain to your distribution vendor.\\\"\\n    exit 1\\nfi\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/sosreport/run-sosreport.sh\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}