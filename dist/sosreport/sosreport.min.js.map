{"version":3,"sources":["webpack:///sosreport/sosreport.min.js","webpack:///webpack/bootstrap db5fdf4a1e3c5fa5a0f5","webpack:///../pkg/sosreport/index.js","webpack:///external \"cockpit\"","webpack:///external \"jQuery\"","webpack:///../pkg/sosreport/run-sosreport.sh"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","sos_init","sos_create","sos_error","message","extra","$","hide","text","show","_","css","sos_archive_url","sos_archive_files","task","cockpit","script","run_sosreport_sh","superuser","err","pty","sos_task","output","progress_regex","archive_regex","stream","exec","parseInt","toString","done","archive","basename","replace","indexOf","substr","query","window","btoa","JSON","stringify","payload","binary","path","external","content-disposition","content-type","transport","csrf_token","fail","error","sos_cancel","close","length","spawn","concat","console","log","modal","sos_download","iframe","attr","on","event","title","get","contentDocument","append","init","translate","wait","gettext","jQuery"],"mappings":"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","file":"sosreport/sosreport.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(1);\n\tmodule.exports = __webpack_require__(5);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2015 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t    var cockpit = __webpack_require__(2);\n\t    var $ = __webpack_require__(3);\n\t\n\t    var _ = cockpit.gettext;\n\t\n\t    var run_sosreport_sh = __webpack_require__(4);\n\t\n\t    var sos_task;\n\t    var sos_archive_url;\n\t    var sos_archive_files;\n\t\n\t    function sos_init() {\n\t        // Start right away\n\t        sos_create();\n\t    }\n\t\n\t    function sos_error(message, extra) {\n\t        $(\"#sos-alert, #sos-progress, #sos-download\").hide();\n\t        $(\"#sos-error .alert-message\").text(message);\n\t        if (extra) {\n\t            $(\"#sos-error-extra\").text(extra);\n\t            $(\"#sos-error-extra\").show();\n\t        } else\n\t            $(\"#sos-error-extra\").hide();\n\t        $(\"#sos-error\").show();\n\t        $(\"#sos-cancel\").text(_(\"Close\"));\n\t    }\n\t\n\t    function sos_create() {\n\t        $(\"#sos-progress .progress-bar\").css(\"width\", \"0%\");\n\t        $(\"#sos-download, #sos-error\").hide();\n\t        $(\"#sos-cancel\").text(_(\"Cancel\"));\n\t\n\t        sos_archive_url = null;\n\t        sos_archive_files = [ ];\n\t\n\t        var task = cockpit.script(run_sosreport_sh, [ \"--batch\" ],\n\t                                  { superuser: true, err: \"out\", pty: true });\n\t        sos_task = task;\n\t\n\t        // TODO - Use a real API instead of scraping stdout once such\n\t        //        an API exists.\n\t\n\t        var output = \"\";\n\t        var progress_regex = /Running ([0-9]+)\\/([0-9]+):/g;\n\t        var archive_regex = /Your sosreport has been generated and saved in:[ \\r\\n]+(\\/[^\\r\\n]+)/;\n\t\n\t        task.stream(function (text) {\n\t            if (sos_task == task) {\n\t                var m, p;\n\t\n\t                output += text;\n\t\n\t                p = 0;\n\t                while ((m = progress_regex.exec(output))) {\n\t                    p = (parseInt(m[1], 10) / parseInt(m[2], 10)) * 100;\n\t                }\n\t                $(\"#sos-alert, #sos-progress\").show();\n\t                $(\"#sos-progress .progress-bar\").css(\"width\", p.toString() + \"%\");\n\t            }\n\t        });\n\t        task.done(function () {\n\t            if (sos_task == task) {\n\t                var m = archive_regex.exec(output);\n\t                if (m) {\n\t                    var archive = m[1];\n\t                    var basename = archive.replace(/.*\\//, \"\");\n\t\n\t                    // When running sosreport in a container on the\n\t                    // Atomics, the archive path needs to be adjusted.\n\t                    //\n\t                    if (archive.indexOf(\"/host\") === 0)\n\t                        archive = archive.substr(5);\n\t\n\t                    sos_archive_files = [ archive, archive + \".md5\" ];\n\t\n\t                    var query = window.btoa(JSON.stringify({\n\t                        payload: \"fsread1\",\n\t                        binary: \"raw\",\n\t                        path: archive,\n\t                        superuser: true,\n\t                        external: {\n\t                            \"content-disposition\": 'attachment; filename=\"' + basename + '\"',\n\t                            \"content-type\": \"application/x-xz, application/octet-stream\"\n\t                        }\n\t                    }));\n\t                    sos_archive_url = \"/cockpit/channel/\" + cockpit.transport.csrf_token + '?' + query;\n\t                    $(\"#sos-progress, #sos-error\").hide();\n\t                    $(\"#sos-alert, #sos-download\").show();\n\t                    $(\"#sos-cancel\").text(_(\"Close\"));\n\t                } else {\n\t                    sos_error(_(\"No archive has been created.\"), output);\n\t                }\n\t                sos_task = null;\n\t            }\n\t        });\n\t        task.fail(function (error) {\n\t            if (sos_task == task) {\n\t                sos_error(error.toString(), output);\n\t                sos_task = null;\n\t            }\n\t        });\n\t    }\n\t\n\t    function sos_cancel() {\n\t        if (sos_task) {\n\t            sos_task.close(\"cancelled\");\n\t            sos_task = null;\n\t        }\n\t        if (sos_archive_files.length > 0) {\n\t            cockpit.spawn([ \"rm\" ].concat(sos_archive_files), { superuser: true, err: \"message\" }).\n\t                fail(function (error) {\n\t                    console.log(\"failed to remove\", sos_archive_files, error);\n\t                });\n\t        }\n\t        sos_archive_url = null;\n\t        sos_archive_files =  [ ];\n\t        $(\"#sos\").modal('hide');\n\t    }\n\t\n\t    function sos_download() {\n\t        // We download via a hidden iframe to get better control over\n\t        // the error cases.\n\t        var iframe = $('<iframe>').attr('src', sos_archive_url).hide();\n\t        iframe.on('load', function (event) {\n\t            var title = iframe.get(0).contentDocument.title;\n\t            if (title)\n\t                sos_error(title);\n\t        });\n\t        $('body').append(iframe);\n\t    }\n\t\n\t    function init() {\n\t        $(function () {\n\t            $(\"#sos\").on(\"show.bs.modal\", sos_init);\n\t            $(\"#sos-cancel\").on(\"click\", sos_cancel);\n\t            $('#sos-download button').on('click', sos_download);\n\t\n\t            cockpit.translate();\n\t            $('body').show();\n\t\n\t            // Send a 'init' message.  This tells the tests that we\n\t            // are ready to go.\n\t            //\n\t            cockpit.transport.wait(function () { });\n\t        });\n\t    }\n\t\n\t    init();\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = cockpit;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = jQuery;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"#! /bin/bash\\n\\npresent () {\\n    which \\\"$1\\\" >/dev/null 2>/dev/null\\n}\\n\\nif present sosreport; then\\n    exec sosreport \\\"$@\\\"\\nelif present atomic; then\\n\\n    # HACK - sosreport inside the container does not behave as\\n    #        advertised, so we fix it via --sysroot and --tmp-dir.\\n    #\\n    # https://bugzilla.redhat.com/show_bug.cgi?id=1299794\\n    # https://bugzilla.redhat.com/show_bug.cgi?id=1277223\\n\\n    exec atomic run rhel7/rhel-tools -- sosreport --sysroot /host --tmp-dir /host/var/tmp \\\"$@\\\"\\nelse\\n    echo >&2 \\\"The sosreport utility is not installed.  This should not happen.  Please complain to your distribution vendor.\\\"\\n    exit 1\\nfi\\n\"\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// sosreport/sosreport.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap db5fdf4a1e3c5fa5a0f5","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2015 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n    var cockpit = require(\"cockpit\");\n    var $ = require(\"jquery\");\n\n    var _ = cockpit.gettext;\n\n    var run_sosreport_sh = require(\"raw!./run-sosreport.sh\");\n\n    var sos_task;\n    var sos_archive_url;\n    var sos_archive_files;\n\n    function sos_init() {\n        // Start right away\n        sos_create();\n    }\n\n    function sos_error(message, extra) {\n        $(\"#sos-alert, #sos-progress, #sos-download\").hide();\n        $(\"#sos-error .alert-message\").text(message);\n        if (extra) {\n            $(\"#sos-error-extra\").text(extra);\n            $(\"#sos-error-extra\").show();\n        } else\n            $(\"#sos-error-extra\").hide();\n        $(\"#sos-error\").show();\n        $(\"#sos-cancel\").text(_(\"Close\"));\n    }\n\n    function sos_create() {\n        $(\"#sos-progress .progress-bar\").css(\"width\", \"0%\");\n        $(\"#sos-download, #sos-error\").hide();\n        $(\"#sos-cancel\").text(_(\"Cancel\"));\n\n        sos_archive_url = null;\n        sos_archive_files = [ ];\n\n        var task = cockpit.script(run_sosreport_sh, [ \"--batch\" ],\n                                  { superuser: true, err: \"out\", pty: true });\n        sos_task = task;\n\n        // TODO - Use a real API instead of scraping stdout once such\n        //        an API exists.\n\n        var output = \"\";\n        var progress_regex = /Running ([0-9]+)\\/([0-9]+):/g;\n        var archive_regex = /Your sosreport has been generated and saved in:[ \\r\\n]+(\\/[^\\r\\n]+)/;\n\n        task.stream(function (text) {\n            if (sos_task == task) {\n                var m, p;\n\n                output += text;\n\n                p = 0;\n                while ((m = progress_regex.exec(output))) {\n                    p = (parseInt(m[1], 10) / parseInt(m[2], 10)) * 100;\n                }\n                $(\"#sos-alert, #sos-progress\").show();\n                $(\"#sos-progress .progress-bar\").css(\"width\", p.toString() + \"%\");\n            }\n        });\n        task.done(function () {\n            if (sos_task == task) {\n                var m = archive_regex.exec(output);\n                if (m) {\n                    var archive = m[1];\n                    var basename = archive.replace(/.*\\//, \"\");\n\n                    // When running sosreport in a container on the\n                    // Atomics, the archive path needs to be adjusted.\n                    //\n                    if (archive.indexOf(\"/host\") === 0)\n                        archive = archive.substr(5);\n\n                    sos_archive_files = [ archive, archive + \".md5\" ];\n\n                    var query = window.btoa(JSON.stringify({\n                        payload: \"fsread1\",\n                        binary: \"raw\",\n                        path: archive,\n                        superuser: true,\n                        external: {\n                            \"content-disposition\": 'attachment; filename=\"' + basename + '\"',\n                            \"content-type\": \"application/x-xz, application/octet-stream\"\n                        }\n                    }));\n                    sos_archive_url = \"/cockpit/channel/\" + cockpit.transport.csrf_token + '?' + query;\n                    $(\"#sos-progress, #sos-error\").hide();\n                    $(\"#sos-alert, #sos-download\").show();\n                    $(\"#sos-cancel\").text(_(\"Close\"));\n                } else {\n                    sos_error(_(\"No archive has been created.\"), output);\n                }\n                sos_task = null;\n            }\n        });\n        task.fail(function (error) {\n            if (sos_task == task) {\n                sos_error(error.toString(), output);\n                sos_task = null;\n            }\n        });\n    }\n\n    function sos_cancel() {\n        if (sos_task) {\n            sos_task.close(\"cancelled\");\n            sos_task = null;\n        }\n        if (sos_archive_files.length > 0) {\n            cockpit.spawn([ \"rm\" ].concat(sos_archive_files), { superuser: true, err: \"message\" }).\n                fail(function (error) {\n                    console.log(\"failed to remove\", sos_archive_files, error);\n                });\n        }\n        sos_archive_url = null;\n        sos_archive_files =  [ ];\n        $(\"#sos\").modal('hide');\n    }\n\n    function sos_download() {\n        // We download via a hidden iframe to get better control over\n        // the error cases.\n        var iframe = $('<iframe>').attr('src', sos_archive_url).hide();\n        iframe.on('load', function (event) {\n            var title = iframe.get(0).contentDocument.title;\n            if (title)\n                sos_error(title);\n        });\n        $('body').append(iframe);\n    }\n\n    function init() {\n        $(function () {\n            $(\"#sos\").on(\"show.bs.modal\", sos_init);\n            $(\"#sos-cancel\").on(\"click\", sos_cancel);\n            $('#sos-download button').on('click', sos_download);\n\n            cockpit.translate();\n            $('body').show();\n\n            // Send a 'init' message.  This tells the tests that we\n            // are ready to go.\n            //\n            cockpit.transport.wait(function () { });\n        });\n    }\n\n    init();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/sosreport/index.js\n// module id = 1\n// module chunks = 0","module.exports = cockpit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cockpit\"\n// module id = 2\n// module chunks = 0","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 3\n// module chunks = 0","module.exports = \"#! /bin/bash\\n\\npresent () {\\n    which \\\"$1\\\" >/dev/null 2>/dev/null\\n}\\n\\nif present sosreport; then\\n    exec sosreport \\\"$@\\\"\\nelif present atomic; then\\n\\n    # HACK - sosreport inside the container does not behave as\\n    #        advertised, so we fix it via --sysroot and --tmp-dir.\\n    #\\n    # https://bugzilla.redhat.com/show_bug.cgi?id=1299794\\n    # https://bugzilla.redhat.com/show_bug.cgi?id=1277223\\n\\n    exec atomic run rhel7/rhel-tools -- sosreport --sysroot /host --tmp-dir /host/var/tmp \\\"$@\\\"\\nelse\\n    echo >&2 \\\"The sosreport utility is not installed.  This should not happen.  Please complain to your distribution vendor.\\\"\\n    exit 1\\nfi\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/sosreport/run-sosreport.sh\n// module id = 4\n// module chunks = 0"],"sourceRoot":""}