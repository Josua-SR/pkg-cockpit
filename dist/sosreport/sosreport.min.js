!function(o) {
    function e(t) {
        if (s[t]) return s[t].exports;
        var n = s[t] = {
            exports: {},
            id: t,
            loaded: !1
        };
        return o[t].call(n.exports, n, n.exports, e), n.loaded = !0, n.exports;
    }
    var s = {};
    return e.m = o, e.c = s, e.p = "", e(0);
}([ function(o, e, s) {
    s(1), o.exports = s(5);
}, function(o, e, s) {
    "use strict";
    !function() {
        function o() {
            t();
        }
        function e(o, e) {
            p("#sos-alert, #sos-progress, #sos-download").hide(), p("#sos-error .alert-message").text(o), 
            e ? (p("#sos-error-extra").text(e), p("#sos-error-extra").show()) : p("#sos-error-extra").hide(), 
            p("#sos-error").show(), p("#sos-cancel").text(u("Close"));
        }
        function t() {
            p("#sos-progress .progress-bar").css("width", "0%"), p("#sos-download, #sos-error").hide(), 
            p("#sos-cancel").text(u("Cancel")), c = null, l = [];
            var o = d.script(h, [ "--batch" ], {
                superuser: !0,
                err: "out",
                pty: !0
            });
            i = o;
            var s = "", t = /Running ([0-9]+)\/([0-9]+):/g, n = /Your sosreport has been generated and saved in:[ \r\n]+(\/[^\r\n]+)/;
            o.stream(function(e) {
                if (i == o) {
                    var n, r;
                    for (s += e, r = 0; n = t.exec(s); ) r = parseInt(n[1], 10) / parseInt(n[2], 10) * 100;
                    p("#sos-alert, #sos-progress").show(), p("#sos-progress .progress-bar").css("width", r.toString() + "%");
                }
            }), o.done(function() {
                if (i == o) {
                    var t = n.exec(s);
                    if (t) {
                        var r = t[1], a = r.replace(/.*\//, "");
                        0 === r.indexOf("/host") && (r = r.substr(5)), l = [ r, r + ".md5" ];
                        var h = window.btoa(JSON.stringify({
                            payload: "fsread1",
                            binary: "raw",
                            path: r,
                            superuser: !0,
                            external: {
                                "content-disposition": 'attachment; filename="' + a + '"',
                                "content-type": "application/x-xz, application/octet-stream"
                            }
                        }));
                        c = "/cockpit/channel/" + d.transport.csrf_token + "?" + h, p("#sos-progress, #sos-error").hide(), 
                        p("#sos-alert, #sos-download").show(), p("#sos-cancel").text(u("Close"));
                    } else e(u("No archive has been created."), s);
                    i = null;
                }
            }), o.fail(function(t) {
                i == o && (e(t.toString(), s), i = null);
            });
        }
        function n() {
            i && (i.close("cancelled"), i = null), l.length > 0 && d.spawn([ "rm" ].concat(l), {
                superuser: !0,
                err: "message"
            }).fail(function(o) {
                console.log("failed to remove", l, o);
            }), c = null, l = [], p("#sos").modal("hide");
        }
        function r() {
            var o = p("<iframe>").attr("src", c).hide();
            o.on("load", function(s) {
                var t = o.get(0).contentDocument.title;
                t && e(t);
            }), p("body").append(o);
        }
        function a() {
            p(function() {
                p("#sos").on("show.bs.modal", o), p("#sos-cancel").on("click", n), p("#sos-download button").on("click", r), 
                d.translate(), p("body").show(), d.transport.wait(function() {});
            });
        }
        var i, c, l, d = s(2), p = s(3), u = d.gettext, h = s(4);
        a();
    }();
}, function(o, e) {
    o.exports = cockpit;
}, function(o, e) {
    o.exports = jQuery;
}, function(o, e) {
    o.exports = '#! /bin/bash\n\npresent () {\n    which "$1" >/dev/null 2>/dev/null\n}\n\nif present sosreport; then\n    exec sosreport "$@"\nelif present atomic; then\n\n    # HACK - sosreport inside the container does not behave as\n    #        advertised, so we fix it via --sysroot and --tmp-dir.\n    #\n    # https://bugzilla.redhat.com/show_bug.cgi?id=1299794\n    # https://bugzilla.redhat.com/show_bug.cgi?id=1277223\n\n    exec atomic run rhel7/rhel-tools sosreport --sysroot /host --tmp-dir /host/var/tmp "$@"\nelse\n    echo >&2 "The sosreport utility is not installed.  This should not happen.  Please complain to your distribution vendor."\n    exit 1\nfi\n';
}, function(o, e) {} ]);
//# sourceMappingURL=sosreport.min.js.map