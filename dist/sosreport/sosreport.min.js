!function(o) {
    function e(t) {
        if (s[t]) return s[t].exports;
        var n = s[t] = {
            exports: {},
            id: t,
            loaded: !1
        };
        return o[t].call(n.exports, n, n.exports, e), n.loaded = !0, n.exports;
    }
    var s = {};
    return e.m = o, e.c = s, e.p = "", e(0);
}([ function(o, e, s) {
    s(1), o.exports = s(5);
}, function(o, e, s) {
    "use strict";
    function t() {
        r();
    }
    function n(o, e) {
        h("#sos-alert, #sos-progress, #sos-download").hide(), h("#sos-error .alert-message").text(o), 
        e ? (h("#sos-error-extra").text(e), h("#sos-error-extra").show()) : h("#sos-error-extra").hide(), 
        h("#sos-error").show(), h("#sos-cancel").text(f("Close"));
    }
    function r() {
        h("#sos-progress .progress-bar").css("width", "0%"), h("#sos-download, #sos-error").hide(), 
        h("#sos-cancel").text(f("Cancel")), d = null, p = [];
        var o = u.script(x, [ "--batch" ], {
            superuser: !0,
            err: "out",
            pty: !0
        });
        l = o;
        var e = "", s = /Running ([0-9]+)\/([0-9]+):/g, t = /Your sosreport has been generated and saved in:[ \r\n]+(\/[^\r\n]+)/;
        o.stream(function(t) {
            if (l == o) {
                var n, r;
                for (e += t, r = 0; n = s.exec(e); ) r = parseInt(n[1], 10) / parseInt(n[2], 10) * 100;
                h("#sos-alert, #sos-progress").show(), h("#sos-progress .progress-bar").css("width", r.toString() + "%");
            }
        }), o.done(function() {
            if (l == o) {
                var s = t.exec(e);
                if (s) {
                    var r = s[1], a = r.replace(/.*\//, "");
                    0 === r.indexOf("/host") && (r = r.substr(5)), p = [ r, r + ".md5" ];
                    var i = window.btoa(JSON.stringify({
                        payload: "fsread1",
                        binary: "raw",
                        path: r,
                        superuser: !0,
                        max_read_size: 157286400,
                        external: {
                            "content-disposition": 'attachment; filename="' + a + '"',
                            "content-type": "application/x-xz, application/octet-stream"
                        }
                    }));
                    d = "/cockpit/channel/" + u.transport.csrf_token + "?" + i, h("#sos-progress, #sos-error").hide(), 
                    h("#sos-alert, #sos-download").show(), h("#sos-cancel").text(f("Close"));
                } else n(f("No archive has been created."), e);
                l = null;
            }
        }), o.fail(function(s) {
            l == o && (n(s.toString(), e), l = null);
        });
    }
    function a() {
        l && (l.close("cancelled"), l = null), p.length > 0 && u.spawn([ "rm" ].concat(p), {
            superuser: !0,
            err: "message"
        }).fail(function(o) {
            console.log("failed to remove", p, o);
        }), d = null, p = [], h("#sos").modal("hide");
    }
    function i() {
        var o = h("<iframe>").attr("src", d).hide();
        o.on("load", function(e) {
            var s = o.get(0).contentDocument.title;
            s && n(s);
        }), h("body").append(o);
    }
    function c() {
        h(function() {
            h("#sos").on("show.bs.modal", t), h("#sos-cancel").on("click", a), h("#sos-download button").on("click", i), 
            u.translate(), h("body").show(), u.transport.wait(function() {});
        });
    }
    var l, d, p, u = s(2), h = s(3), f = u.gettext, x = s(4);
    c();
}, function(o, e) {
    o.exports = cockpit;
}, function(o, e) {
    o.exports = jQuery;
}, function(o, e) {
    o.exports = '#! /bin/bash\n\npresent () {\n    which "$1" >/dev/null 2>/dev/null\n}\n\nif present sosreport; then\n    exec sosreport "$@"\nelif present atomic; then\n\n    # HACK - sosreport inside the container does not behave as\n    #        advertised, so we fix it via --sysroot and --tmp-dir.\n    #\n    # https://bugzilla.redhat.com/show_bug.cgi?id=1299794\n    # https://bugzilla.redhat.com/show_bug.cgi?id=1277223\n\n    exec atomic run rhel7/rhel-tools -- sosreport --sysroot /host --tmp-dir /host/var/tmp "$@"\nelse\n    echo >&2 "The sosreport utility is not installed.  This should not happen.  Please complain to your distribution vendor."\n    exit 1\nfi\n';
}, function(o, e) {} ]);
//# sourceMappingURL=sosreport.min.js.map