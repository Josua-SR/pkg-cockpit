!function(t) {
    function e(o) {
        if (n[o]) return n[o].exports;
        var i = n[o] = {
            exports: {},
            id: o,
            loaded: !1
        };
        return t[o].call(i.exports, i, i.exports, e), i.loaded = !0, i.exports;
    }
    var n = {};
    return e.m = t, e.c = n, e.p = "", e(0);
}([ function(t, e, n) {
    t.exports = n(1);
}, function(t, e, n) {
    "use strict";
    function o(t) {
        if (t && t.__esModule) return t;
        var e = {};
        if (null != t) for (var n in t) Object.prototype.hasOwnProperty.call(t, n) && (e[n] = t[n]);
        return e.default = t, e;
    }
    function i(t) {
        return t && t.__esModule ? t : {
            default: t
        };
    }
    function a(t, e, n) {
        var o = t.lookup(n);
        if (o) {
            var i = "localhost" != o.address, a = (0, u.default)("#host-edit-dialog");
            (0, u.default)("#host-edit-fail").text("").hide(), (0, u.default)("#host-edit-name").val(o.label), 
            (0, u.default)("#host-edit-name").prop("disabled", "failed" == o.state), (0, u.default)("#host-edit-user-row").toggle(y.default.allow_connection_string), 
            y.default.allow_connection_string && (m.default.user().done(function(t) {
                (0, u.default)("#host-edit-user").attr("placeholder", t.name);
            }), (0, u.default)("#host-edit-user").prop("disabled", !i), (0, u.default)("#host-edit-user").val(o.user), 
            (0, u.default)("#host-edit-dialog a[data-content]").popover()), e.render_color_picker("#host-edit-colorpicker", o.address), 
            (0, u.default)("#host-edit-sync-users").off("click"), (0, u.default)("#host-edit-sync-users").on("click", function() {
                (0, u.default)("#host-edit-dialog").modal("hide"), e.render_dialog("sync-users", "dashboard_setup_server_dialog", o.address);
            }), (0, u.default)("#host-edit-apply").off("click"), (0, u.default)("#host-edit-apply").on("click", function() {
                a.dialog("failure", null);
                var e = {
                    avatar: T.changed ? T.get_data(128, 128, "image/png") : null,
                    color: y.default.colors.parse((0, u.default)("#host-edit-colorpicker #host-edit-color").css("background-color")),
                    label: (0, u.default)("#host-edit-name").val()
                };
                i && y.default.allow_connection_string && (e.user = (0, u.default)("#host-edit-user").val());
                var n = t.change(o.key, e);
                a.dialog("promise", n);
            }), (0, u.default)("#host-edit-avatar").off("click"), (0, u.default)("#host-edit-avatar").on("click", function() {
                (0, u.default)("#host-edit-fail").text("").hide(), T.select_file().done(function() {
                    (0, u.default)("#host-edit-avatar").off("click"), T.changed = !0, T.start_cropping();
                });
            }), a.modal("show"), T.stop_cropping(), T.load_data(o.avatar || "images/server-large.png").fail(function() {
                (0, u.default)("#host-edit-fail").text(C("Can't load image")).show();
            });
        }
    }
    function r() {
        (0, u.default)(".servers-privileged").update_privileged(O, m.default.format(C("The user <b>$0</b> is not permitted to manage servers"), O.user ? O.user.name : ""));
    }
    function s() {
        this._init();
    }
    function l(t, e) {
        t._entered_ && t.leave(), t.enter(e), t._entered_ = !0, (0, u.default)("#" + t.id).show(), 
        t.show();
    }
    function c() {
        function t() {
            var t = m.default.location.path;
            0 === t.length ? l(e) : (console.warn("not a dashboard location: " + t), m.default.location = ""), 
            (0, u.default)("body").removeAttr("hidden");
        }
        var e;
        m.default.translate(), e = new s(), e.setup(), (0, u.default)(m.default).on("locationchanged", t), 
        t();
    }
    var d = n(2), u = i(d), h = n(3), f = i(h), p = n(4), m = i(p), g = n(6), v = o(g), b = n(10), y = i(b), x = n(11), _ = o(x), k = n(26);
    n(16);
    var w = n(27), M = i(w), C = m.default.gettext;
    (0, u.default)(document).on("click", "a[data-address]", function(t) {
        return m.default.jump("/", (0, u.default)(this).attr("data-address")), t.preventDefault(), 
        !1;
    });
    var T, S = {
        legend: {
            show: !1
        },
        series: {
            shadowSize: 0
        },
        xaxis: {
            tickColor: "#d1d1d1",
            mode: "time",
            tickFormatter: v.format_date_tick,
            minTickSize: [ 1, "minute" ]
        },
        points: {
            radius: 0
        },
        grid: {
            borderWidth: 1,
            borderColor: "#e1e6ed",
            hoverable: !0,
            autoHighlight: !1
        }
    }, z = [ {
        selector: "#dashboard-plot-0",
        plot: function(t) {
            return {
                direct: [ "kernel.all.cpu.nice", "kernel.all.cpu.user", "kernel.all.cpu.sys" ],
                internal: [ "cpu.basic.nice", "cpu.basic.user", "cpu.basic.system" ],
                units: "millisec",
                derive: "rate",
                factor: .1 / t.cpus
            };
        },
        options: {
            yaxis: {
                tickColor: "#e1e6ed",
                tickFormatter: function(t) {
                    return t + "%";
                }
            }
        },
        ymax_min: 100
    }, {
        selector: "#dashboard-plot-1",
        plot: {
            direct: [ "mem.util.used" ],
            internal: [ "memory.used" ],
            units: "bytes"
        },
        options: {
            yaxis: {
                ticks: v.memory_ticks,
                tickColor: "#e1e6ed",
                tickFormatter: v.format_bytes_tick
            }
        },
        ymax_unit: 1e8
    }, {
        selector: "#dashboard-plot-2",
        plot: {
            direct: [ "network.interface.total.bytes" ],
            internal: [ "network.interface.rx", "network.interface.tx" ],
            units: "bytes",
            "omit-instances": [ "lo" ],
            derive: "rate"
        },
        options: {
            yaxis: {
                tickColor: "#e1e6ed",
                tickFormatter: v.format_bits_per_sec_tick
            }
        },
        ymax_min: 1e5
    }, {
        selector: "#dashboard-plot-3",
        plot: {
            direct: [ "disk.dev.total_bytes" ],
            internal: [ "block.device.read", "block.device.written" ],
            units: "bytes",
            derive: "rate"
        },
        options: {
            yaxis: {
                ticks: v.memory_ticks,
                tickColor: "#e1e6ed",
                tickFormatter: v.format_bytes_per_sec_tick
            }
        },
        ymax_min: 1e5
    } ];
    (0, u.default)(function() {
        T = (0, M.default)((0, u.default)("#host-edit-avatar"), 256, 256);
    });
    var O = m.default.permission({
        admin: !0
    });
    (0, u.default)(O).on("changed", r), s.prototype = {
        _init: function() {
            this.id = "dashboard", this.edit_enabled = !1;
        },
        getTitle: function() {
            return null;
        },
        toggle_edit: function(t) {
            var e = this;
            e.edit_enabled = t, (0, u.default)("#dashboard-enable-edit").toggleClass("active", e.edit_enabled), 
            (0, u.default)(".os").toggleClass("hidden", e.edit_enabled), (0, u.default)("#dashboard-hosts").toggleClass("editable", e.edit_enabled);
        },
        setup: function() {
            function t(t) {
                (0, u.default)("#dashboard .nav-tabs li").removeClass("active"), (0, u.default)("#dashboard .nav-tabs li[data-monitor-id=" + t + "]").addClass("active"), 
                d = t, (0, u.default)(".dashboard-plot").hide(), (0, u.default)(z[t].selector).show(), 
                i();
            }
            function e() {
                var t = !1, o = {};
                u.default.each(p, function(t) {
                    o[t] = !0;
                }), (0, u.default)("#dashboard-hosts .list-group-item").each(function() {
                    var i = (0, u.default)(this), a = i.attr("data-address"), r = c.machines.lookup(a), l = c.infos[a];
                    if (r && "connected" == r.state) return l ? void (l !== !0 && (delete o[a], p[a] || (p[a] = s(a, l)), 
                    p[a].forEach(function(e) {
                        (0, u.default)(e).off("hover").on("hover", function(t, e) {
                            n(i, e);
                        });
                        var o = r.color;
                        e.options.color != o && (t = !0, e.options.color = o);
                    }))) : (c.infos[a] = !0, void (0, k.cpu_ram_info)(r.connection_string).done(function(t) {
                        c.infos[a] = t, e();
                    }));
                }), u.default.each(o, function(t) {
                    p[t].forEach(function(t) {
                        t.remove();
                    }), delete p[t];
                }), t && i();
            }
            function n(t, e) {
                t.toggleClass("highlight-ct", e);
                var n = p[t.attr("data-address")];
                n && (n.forEach(function(t) {
                    t.options.lines.lineWidth = e ? 3 : 2, e && t.move_to_front();
                }), i());
            }
            function o(t) {
                function n() {
                    return "failed" == this.state ? "../shell/images/server-error.png" : this.avatar ? this.avatar : "../shell/images/server-small.png";
                }
                function o() {
                    return "failed" == this.state ? "alert" : "presentation";
                }
                function i() {
                    return "failed" == this.state ? C("Connection Error") : "";
                }
                function a() {
                    return this.restarting ? "hidden" : "";
                }
                function s() {
                    return this.restarting ? "" : "hidden";
                }
                function l() {
                    var l = f.default.render(h, {
                        machines: c.machines.list,
                        render_avatar: n,
                        aria_role: o,
                        alt_text: i,
                        avatar_display: a,
                        connecting_display: s
                    });
                    t.html(l), (0, u.default)("[data-color]", t).each(function() {
                        (0, u.default)(this).css("border-left-color", (0, u.default)(this).attr("data-color"));
                    }), (0, u.default)(".delete-localhost").tooltip({
                        title: C("You are currently connected directly to this server. You cannot delete it.")
                    }), (0, u.default)(".delete-localhost").toggleClass("disabled", !0), (0, u.default)(".delete-localhost").toggleClass("servers-privileged", !1), 
                    r(), e();
                }
                function d() {
                    var t = null;
                    return function() {
                        null === t && (t = window.setTimeout(function() {
                            t = null, l();
                        }, 500));
                    };
                }
                var h = (0, u.default)("#dashboard-hosts-tmpl").html();
                return f.default.parse(h), d();
            }
            function i() {
                c.plots.forEach(function(t) {
                    t.refresh();
                });
            }
            function s(t, e) {
                var n = c.machines.lookup(t);
                if (!n || "connected" != n.state) return null;
                var o = [], i = 0;
                return z.forEach(function(t) {
                    if (c.plots[i]) {
                        var a = t.plot;
                        t.plot.apply && (a = t.plot(e)), o.push(c.plots[i].add_metrics_sum_series(u.default.extend({
                            host: n.connection_string
                        }, a), {
                            color: n.color,
                            lines: {
                                lineWidth: 2
                            }
                        }));
                    }
                    i += 1;
                }), o;
            }
            function l() {
                c.plots = [], z.forEach(function(t) {
                    function e(e) {
                        var n = e.getAxes(), o = t;
                        t.ymax_unit && (n.yaxis.datamax ? n.yaxis.options.max = Math.ceil(n.yaxis.datamax / o.ymax_unit) * t.ymax_unit : n.yaxis.options.max = t.ymax_unit), 
                        t.ymax_min && (n.yaxis.datamax < t.ymax_min ? n.yaxis.options.max = t.ymax_min : n.yaxis.options.max = null), 
                        n.yaxis.options.min = 0;
                    }
                    if (t.selector) {
                        var n = u.default.extend({
                            setup_hook: e
                        }, S, t.options), o = new v.Plot((0, u.default)(t.selector));
                        o.set_options(n), c.plots.push(o);
                    }
                }), p = {}, e();
            }
            var c = this;
            c.machines = y.default.instance(), c.infos = {}, c.mdialogs = _.new_manager(c.machines);
            var d = 0;
            (0, u.default)("#dashboard-add").click(function() {
                c.mdialogs.render_dialog("add-machine", "dashboard_setup_server_dialog");
            }), (0, u.default)("#dashboard-enable-edit").click(function() {
                c.toggle_edit(!c.edit_enabled);
            }), (0, u.default)("#dashboard-enable-edit").tooltip({
                trigger: "hover"
            });
            var h = o((0, u.default)("#dashboard-hosts .list-group"));
            (0, u.default)(c.machines).on("added.dashboard", h), (0, u.default)(c.machines).on("removed.dashboard", h), 
            (0, u.default)(c.machines).on("updated.dashboard", h), (0, u.default)("#dashboard .nav-tabs li").click(function() {
                t(parseInt((0, u.default)(this).data("monitor-id"), 10));
            }), l(), t(d), v.setup_plot_controls((0, u.default)("#dashboard"), (0, u.default)("#dashboard-toolbar"), c.plots), 
            (0, u.default)("#dashboard-hosts").on("click", "a.list-group-item", function() {
                if (c.edit_enabled) return !1;
            }).on("click", "button.pficon-delete", function() {
                var t = (0, u.default)(this).parent(".list-group-item");
                c.toggle_edit(!1);
                var e = c.machines.lookup(t.attr("data-address"));
                return e && c.machines.change(e.key, {
                    visible: !1
                }), !1;
            }).on("click", "button.pficon-edit", function() {
                var t = (0, u.default)(this).parent(".list-group-item"), e = t.attr("data-address");
                return c.toggle_edit(!1), a(c.machines, c.mdialogs, e), !1;
            }).on("mouseenter", "a.list-group-item", function() {
                n((0, u.default)(this), !0);
            }).on("mouseleave", "a.list-group-item", function() {
                n((0, u.default)(this), !1);
            });
            var p = {};
            (0, u.default)(window).on("resize.dashboard", function() {
                c.plots.forEach(function(t) {
                    t.resize();
                });
            }), h();
        },
        show: function() {
            r(), this.plots[0].resize(), this.toggle_edit(!1);
        },
        enter: function() {},
        leave: function() {}
    }, (0, u.default)(c);
}, function(t, e) {
    t.exports = jQuery;
}, function(t, e, n) {
    "use strict";
    function o(t) {
        if (t in r) return r[t];
        var e = document.createElement("div");
        e.innerHTML = t, i.translate(e);
        var n = e.innerHTML;
        return r[t] = n, n;
    }
    var i = n(4), a = n(5), r = {};
    t.exports = i.extend({}, a, {
        render: function(t, e, n) {
            return e || (e = {}), o(a.render(t, e, n));
        },
        to_html: function(t, e, n, i) {
            return e || (e = {}), o(a.to_html(t, e, n, i));
        },
        clearCache: function() {
            return r = {}, a.clearCache();
        }
    });
}, function(t, e) {
    t.exports = cockpit;
}, function(t, e, n) {
    var o, i, a;
    /*!
	 * mustache.js - Logic-less {{mustache}} templates with JavaScript
	 * http://github.com/janl/mustache.js
	 */
    !function(n, r) {
        "object" == typeof e && e && "string" != typeof e.nodeName ? r(e) : (i = [ e ], 
        o = r, a = "function" == typeof o ? o.apply(e, i) : o, !(void 0 !== a && (t.exports = a)));
    }(this, function(t) {
        function e(t) {
            return "function" == typeof t;
        }
        function n(t) {
            return m(t) ? "array" : typeof t;
        }
        function o(t) {
            return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
        }
        function i(t, e) {
            return null != t && "object" == typeof t && e in t;
        }
        function a(t, e) {
            return g.call(t, e);
        }
        function r(t) {
            return !a(v, t);
        }
        function s(t) {
            return String(t).replace(/[&<>"'`=\/]/g, function(t) {
                return b[t];
            });
        }
        function l(e, n) {
            function i() {
                if (v && !b) for (;g.length; ) delete p[g.pop()]; else g = [];
                v = !1, b = !1;
            }
            function a(t) {
                if ("string" == typeof t && (t = t.split(x, 2)), !m(t) || 2 !== t.length) throw new Error("Invalid tags: " + t);
                s = new RegExp(o(t[0]) + "\\s*"), l = new RegExp("\\s*" + o(t[1])), h = new RegExp("\\s*" + o("}" + t[1]));
            }
            if (!e) return [];
            var s, l, h, f = [], p = [], g = [], v = !1, b = !1;
            a(n || t.tags);
            for (var M, C, T, S, z, O, A = new u(e); !A.eos(); ) {
                if (M = A.pos, T = A.scanUntil(s)) for (var P = 0, I = T.length; P < I; ++P) S = T.charAt(P), 
                r(S) ? g.push(p.length) : b = !0, p.push([ "text", S, M, M + 1 ]), M += 1, "\n" === S && i();
                if (!A.scan(s)) break;
                if (v = !0, C = A.scan(w) || "name", A.scan(y), "=" === C ? (T = A.scanUntil(_), 
                A.scan(_), A.scanUntil(l)) : "{" === C ? (T = A.scanUntil(h), A.scan(k), A.scanUntil(l), 
                C = "&") : T = A.scanUntil(l), !A.scan(l)) throw new Error("Unclosed tag at " + A.pos);
                if (z = [ C, T, M, A.pos ], p.push(z), "#" === C || "^" === C) f.push(z); else if ("/" === C) {
                    if (O = f.pop(), !O) throw new Error('Unopened section "' + T + '" at ' + M);
                    if (O[1] !== T) throw new Error('Unclosed section "' + O[1] + '" at ' + M);
                } else "name" === C || "{" === C || "&" === C ? b = !0 : "=" === C && a(T);
            }
            if (O = f.pop()) throw new Error('Unclosed section "' + O[1] + '" at ' + A.pos);
            return d(c(p));
        }
        function c(t) {
            for (var e, n, o = [], i = 0, a = t.length; i < a; ++i) e = t[i], e && ("text" === e[0] && n && "text" === n[0] ? (n[1] += e[1], 
            n[3] = e[3]) : (o.push(e), n = e));
            return o;
        }
        function d(t) {
            for (var e, n, o = [], i = o, a = [], r = 0, s = t.length; r < s; ++r) switch (e = t[r], 
            e[0]) {
              case "#":
              case "^":
                i.push(e), a.push(e), i = e[4] = [];
                break;

              case "/":
                n = a.pop(), n[5] = e[2], i = a.length > 0 ? a[a.length - 1][4] : o;
                break;

              default:
                i.push(e);
            }
            return o;
        }
        function u(t) {
            this.string = t, this.tail = t, this.pos = 0;
        }
        function h(t, e) {
            this.view = t, this.cache = {
                ".": this.view
            }, this.parent = e;
        }
        function f() {
            this.cache = {};
        }
        var p = Object.prototype.toString, m = Array.isArray || function(t) {
            return "[object Array]" === p.call(t);
        }, g = RegExp.prototype.test, v = /\S/, b = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;",
            "/": "&#x2F;",
            "`": "&#x60;",
            "=": "&#x3D;"
        }, y = /\s*/, x = /\s+/, _ = /\s*=/, k = /\s*\}/, w = /#|\^|\/|>|\{|&|=|!/;
        u.prototype.eos = function() {
            return "" === this.tail;
        }, u.prototype.scan = function(t) {
            var e = this.tail.match(t);
            if (!e || 0 !== e.index) return "";
            var n = e[0];
            return this.tail = this.tail.substring(n.length), this.pos += n.length, n;
        }, u.prototype.scanUntil = function(t) {
            var e, n = this.tail.search(t);
            switch (n) {
              case -1:
                e = this.tail, this.tail = "";
                break;

              case 0:
                e = "";
                break;

              default:
                e = this.tail.substring(0, n), this.tail = this.tail.substring(n);
            }
            return this.pos += e.length, e;
        }, h.prototype.push = function(t) {
            return new h(t, this);
        }, h.prototype.lookup = function(t) {
            var n, o = this.cache;
            if (o.hasOwnProperty(t)) n = o[t]; else {
                for (var a, r, s = this, l = !1; s; ) {
                    if (t.indexOf(".") > 0) for (n = s.view, a = t.split("."), r = 0; null != n && r < a.length; ) r === a.length - 1 && (l = i(n, a[r])), 
                    n = n[a[r++]]; else n = s.view[t], l = i(s.view, t);
                    if (l) break;
                    s = s.parent;
                }
                o[t] = n;
            }
            return e(n) && (n = n.call(this.view)), n;
        }, f.prototype.clearCache = function() {
            this.cache = {};
        }, f.prototype.parse = function(t, e) {
            var n = this.cache, o = n[t];
            return null == o && (o = n[t] = l(t, e)), o;
        }, f.prototype.render = function(t, e, n) {
            var o = this.parse(t), i = e instanceof h ? e : new h(e);
            return this.renderTokens(o, i, n, t);
        }, f.prototype.renderTokens = function(t, e, n, o) {
            for (var i, a, r, s = "", l = 0, c = t.length; l < c; ++l) r = void 0, i = t[l], 
            a = i[0], "#" === a ? r = this.renderSection(i, e, n, o) : "^" === a ? r = this.renderInverted(i, e, n, o) : ">" === a ? r = this.renderPartial(i, e, n, o) : "&" === a ? r = this.unescapedValue(i, e) : "name" === a ? r = this.escapedValue(i, e) : "text" === a && (r = this.rawValue(i)), 
            void 0 !== r && (s += r);
            return s;
        }, f.prototype.renderSection = function(t, n, o, i) {
            function a(t) {
                return r.render(t, n, o);
            }
            var r = this, s = "", l = n.lookup(t[1]);
            if (l) {
                if (m(l)) for (var c = 0, d = l.length; c < d; ++c) s += this.renderTokens(t[4], n.push(l[c]), o, i); else if ("object" == typeof l || "string" == typeof l || "number" == typeof l) s += this.renderTokens(t[4], n.push(l), o, i); else if (e(l)) {
                    if ("string" != typeof i) throw new Error("Cannot use higher-order sections without the original template");
                    l = l.call(n.view, i.slice(t[3], t[5]), a), null != l && (s += l);
                } else s += this.renderTokens(t[4], n, o, i);
                return s;
            }
        }, f.prototype.renderInverted = function(t, e, n, o) {
            var i = e.lookup(t[1]);
            if (!i || m(i) && 0 === i.length) return this.renderTokens(t[4], e, n, o);
        }, f.prototype.renderPartial = function(t, n, o) {
            if (o) {
                var i = e(o) ? o(t[1]) : o[t[1]];
                return null != i ? this.renderTokens(this.parse(i), n, o, i) : void 0;
            }
        }, f.prototype.unescapedValue = function(t, e) {
            var n = e.lookup(t[1]);
            if (null != n) return n;
        }, f.prototype.escapedValue = function(e, n) {
            var o = n.lookup(e[1]);
            if (null != o) return t.escape(o);
        }, f.prototype.rawValue = function(t) {
            return t[1];
        }, t.name = "mustache.js", t.version = "2.3.2", t.tags = [ "{{", "}}" ];
        var M = new f();
        return t.clearCache = function() {
            return M.clearCache();
        }, t.parse = function(t, e) {
            return M.parse(t, e);
        }, t.render = function(t, e, o) {
            if ("string" != typeof t) throw new TypeError('Invalid template! Template should be a "string" but "' + n(t) + '" was given as the first argument for mustache#render(template, view, partials)');
            return M.render(t, e, o);
        }, t.to_html = function(n, o, i, a) {
            var r = t.render(n, o, i);
            return e(a) ? void a(r) : r;
        }, t.escape = s, t.Scanner = u, t.Context = h, t.Writer = f, t;
    });
}, function(t, e, n) {
    "use strict";
    function o(t, e) {
        if (!t) throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
        return !e || "object" != typeof e && "function" != typeof e ? t : e;
    }
    function i(t, e) {
        if ("function" != typeof e && null !== e) throw new TypeError("Super expression must either be null or a function, not " + typeof e);
        t.prototype = Object.create(e && e.prototype, {
            constructor: {
                value: t,
                enumerable: !1,
                writable: !0,
                configurable: !0
            }
        }), e && (Object.setPrototypeOf ? Object.setPrototypeOf(t, e) : t.__proto__ = e);
    }
    function a(t, e) {
        if (!(t instanceof e)) throw new TypeError("Cannot call a class as a function");
    }
    function r() {
        var t = [ "#39a5dc", "#008ff0", "#2daaff", "#69c2ff", "#a5daff", "#e1f3ff", "#00243c", "#004778" ];
        return {
            colors: t,
            legend: {
                show: !1
            },
            series: {
                shadowSize: 0,
                lines: {
                    lineWidth: 2,
                    fill: 1
                }
            },
            xaxis: {
                tickLength: 0,
                mode: "time",
                tickFormatter: l,
                minTickSize: [ 1, "minute" ],
                reserveSpace: !1
            },
            yaxis: {
                tickColor: "#d1d1d1",
                min: 0
            },
            points: {
                radius: 0
            },
            grid: {
                borderWidth: 1,
                aboveData: !1,
                color: "black",
                borderColor: k.color.parse("black").scale("a", .22).toString(),
                labelMargin: 0
            }
        };
    }
    function s(t) {
        for (var e = Math.pow(2, Math.ceil(Math.log(t.max / 5) / Math.LN2)), n = [], o = 0; o < t.max; o += e) n.push(o);
        return n;
    }
    function l(t, e) {
        function n(t) {
            var e = t.toFixed();
            return 1 == e.length && (e = "0" + e), e;
        }
        var o, i, a = 0, r = 1, s = 2, l = 3, c = e.tickSize[1];
        i = "minute" == c || "hour" == c ? l : "day" == c ? s : "month" == c ? r : a;
        var d = new Date(), u = new Date(e.min);
        o = a, u.getFullYear() == d.getFullYear() && (o = r, u.getMonth() == d.getMonth() && (o = s, 
        u.getDate() == d.getDate() && (o = l))), o > i && (o = i), o == s && (o = r);
        var h = new Date(t), f = " ";
        return a >= o && a <= i && (f += h.getFullYear().toFixed() + " "), r >= o && r <= i && (f += O[h.getMonth()] + " "), 
        s >= o && s <= i && (f += h.getDate().toFixed() + " "), l >= o && l <= i && (f += n(h.getHours()) + ":" + n(h.getMinutes()) + " "), 
        f.substr(0, f.length - 1);
    }
    function c(t) {
        return w.format_bytes(t.max, 1024, !0)[1];
    }
    function d(t, e) {
        return w.format_bytes(t, c(e), !0)[0];
    }
    function u(t, e) {
        return w.format_bytes(t, 1024);
    }
    function h(t) {
        return w.format_bytes_per_sec(t.max, 1024, !0)[1];
    }
    function f(t, e) {
        return w.format_bytes_per_sec(t, h(e), !0)[0];
    }
    function p(t, e) {
        return w.format_bytes_per_sec(t, 1024);
    }
    function m(t) {
        return w.format_bits_per_sec(8 * t.max, 1e3, !0)[1];
    }
    function g(t, e) {
        return w.format_bits_per_sec(8 * t, m(e), !0)[0];
    }
    function v(t, e) {
        return w.format_bits_per_sec(8 * t, 1e3);
    }
    function b(t, e, n) {
        function o() {
            void 0 === u && (n.forEach(function(t) {
                t.stop_walking();
            }), u = new Date().getTime() / 1e3, s());
        }
        function i(t, e) {
            m.push(p), p = t, u = e, c();
        }
        function a() {
            var t = m.pop();
            if (void 0 === t) {
                var e;
                for (e = 0; e < f.length - 1 && !(f[e] > p); e++) ;
                t = f[e];
            }
            void 0 !== u && (u += (t - p) / 2), p = t, c();
        }
        function r(t) {
            var e;
            return t >= 31536e3 ? (e = Math.ceil(t / 31536e3), w.format(w.ngettext("$0 year", "$0 years", e), e)) : t >= 2592e3 ? (e = Math.ceil(t / 2592e3), 
            w.format(w.ngettext("$0 month", "$0 months", e), e)) : t >= 604800 ? (e = Math.ceil(t / 604800), 
            w.format(w.ngettext("$0 week", "$0 weeks", e), e)) : t >= 86400 ? (e = Math.ceil(t / 86400), 
            w.format(w.ngettext("$0 day", "$0 days", e), e)) : t >= 3600 ? (e = Math.ceil(t / 3600), 
            w.format(w.ngettext("$0 hour", "$0 hours", e), e)) : (e = Math.ceil(t / 60), w.format(w.ngettext("$0 minute", "$0 minutes", e), e));
        }
        function s() {
            e.find('[data-action="scroll-right"]').attr("disabled", void 0 === u), e.find('[data-action="zoom-out"]').attr("disabled", p >= f[f.length - 1]);
        }
        function l() {
            var e;
            t.hasClass("show-zoom-controls") && p > h ? (t.addClass("show-zoom-cursor"), e = "x") : (t.removeClass("show-zoom-cursor"), 
            e = null), n.forEach(function(t) {
                var n = t.get_options();
                n.selection && n.selection.mode == e || (n.selection = {
                    mode: e,
                    color: "#edf8ff"
                }, t.set_options(n), t.refresh());
            });
        }
        function c() {
            p < h && (u += (h - p) / 2, p = h), u >= new Date().getTime() / 1e3 - 10 && (u = void 0), 
            e.find(".dropdown-toggle span:first-child").text(r(p)), n.forEach(function(e) {
                function n() {
                    e.archives && (t.addClass("show-zoom-controls"), l());
                }
                e.stop_walking(), e.reset(p, u), e.refresh(), void 0 === u && e.start_walking(), 
                k(e).on("changed", n), n();
            }), s(), l();
        }
        function d(t) {
            void 0 === t && (t = []), n = t, n.forEach(function(t) {
                k(t).on("zoomstart", function(t) {
                    o();
                }), k(t).on("zoom", function(t, e, n) {
                    i(e, n);
                });
            }), c();
        }
        var u, h = 300, f = [ 300, 3600, 21600, 86400, 604800, 2592e3, 31536e3 ], p = 300, m = [];
        return e.find("[data-range]").click(function() {
            m = [], p = parseInt(k(this).attr("data-range"), 10), c();
        }), e.find('[data-action="goto-now"]').click(function() {
            u = void 0, c();
        }), e.find('[data-action="scroll-left"]').click(function() {
            var t = p / 10;
            void 0 === u && (u = new Date().getTime() / 1e3), u -= t, c();
        }), e.find('[data-action="scroll-right"]').click(function() {
            var t = p / 10;
            void 0 !== u && (u += t, c());
        }), e.find('[data-action="zoom-out"]').click(function() {
            a();
        }), d(n), {
            reset: d
        };
    }
    function y(t, e, n, o) {
        function i() {
            v.width(g.width()), v.height(g.height());
        }
        function a(t) {
            h ? (h.getAxes().yaxis.options.max = t, c()) : p.yaxis.max = t;
        }
        function r() {
            m = !0, s();
        }
        function s() {
            m && g.width() > 0 && g.height() > 0 ? (h ? d() : (i(), h = k.plot(v, n, p)), b && window.clearInterval(b)) : b || (b = window.setInterval(s, 500));
        }
        function l() {
            m = !1;
        }
        function c() {
            h && m && (h.setData(n), o.setup_hook && o.setup_hook(h), h.setupGrid(), h.draw(), 
            o.post_hook && o.post_hook(h));
        }
        function d() {
            h && m && (i(), v.width() > 0 && v.height() > 0 && h.resize(), c());
        }
        function u() {
            k(f).trigger("destroyed"), k(window).off("resize", d), k(g).empty(), h = null;
        }
        var h, f, p = {
            colors: [ "#0099d3" ],
            legend: {
                show: !1
            },
            series: {
                shadowSize: 0,
                lines: {
                    lineWidth: 0,
                    fill: 1
                }
            },
            xaxis: {
                tickFormatter: function() {
                    return "";
                }
            },
            yaxis: {
                tickFormatter: function() {
                    return "";
                }
            },
            points: {
                radius: 0
            },
            grid: {
                borderWidth: 1,
                aboveData: !0,
                color: "black",
                borderColor: k.color.parse("black").scale("a", .22).toString(),
                labelMargin: 0
            }
        }, m = !1;
        k.extend(!0, p, o);
        var g = k(t), v = k("<div/>"), b = null;
        return g.empty(), g.append(v), k(e).on("notify", c), k(window).on("resize", d), 
        s(), f = {
            start: r,
            stop: l,
            resize: d,
            element: v[0],
            set_yaxis_max: a,
            destroy: u
        };
    }
    function x(t, e, n, o) {
        function i(t, e) {
            return t.add(function(t, n, o) {
                for (var i = 0; i < o; i++) t[n + i] = [ i, e[n + i] || 0 ];
            });
        }
        function a(t, e, n) {
            return t.add(function(t, o, i) {
                var a, r, s, l;
                for (a = 0; a < i; a++) s = 0, n && (r = n[o + a], s = r ? r[1] : 0), l = e[o + a] || 0, 
                t[o + a] = [ a, l + s, s ];
            });
        }
        function r(t, e, n, o) {
            var i = o || 1;
            return t.add(function(t, o, a) {
                for (var r = 0; r < a; r++) t[o + r] = [ r, n + i * (e[o + r] || 0), n ];
            });
        }
        var s = null;
        return n.forEach(function(t, n) {
            t.offset ? t.data = r(e, t.row, t.offset, t.factor) : o.x_rh_stack_graphs ? t.data = a(e, t.row, s) : t.data = i(e, t.row), 
            s = t.data;
        }), y(t, e, n, o);
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    });
    var _ = function() {
        function t(t, e) {
            for (var n = 0; n < e.length; n++) {
                var o = e[n];
                o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), 
                Object.defineProperty(t, o.key, o);
            }
        }
        return function(e, n, o) {
            return n && t(e.prototype, n), o && t(e, o), e;
        };
    }();
    e.plot_simple_template = r, e.memory_ticks = s, e.format_date_tick = l, e.bytes_tick_unit = c, 
    e.format_bytes_tick_no_unit = d, e.format_bytes_tick = u, e.bytes_per_sec_tick_unit = h, 
    e.format_bytes_per_sec_tick_no_unit = f, e.format_bytes_per_sec_tick = p, e.bits_per_sec_tick_unit = m, 
    e.format_bits_per_sec_tick_no_unit = g, e.format_bits_per_sec_tick = v, e.setup_plot_controls = b, 
    e.setup_plot = y, e.setup_complicated_plot = x;
    var k = n(2), w = n(4);
    n(7), n(8), n(9);
    var M = w.gettext, C = function() {
        function t(e, n, o, i, r) {
            a(this, t), this.desc = e, this.options = n, this.grid = o, this.flot_data = i, 
            this.interval = r, this.channel = null, this.chanopts_list = [];
        }
        return _(t, [ {
            key: "stop",
            value: function() {
                this.channel && this.channel.close();
            }
        }, {
            key: "remove_series",
            value: function() {
                var t = this.flot_data.indexOf(this.options);
                t >= 0 && this.flot_data.splice(t, 1);
            }
        }, {
            key: "remove",
            value: function() {
                this.stop(), this.remove_series(), k(self).triggerHandler("removed");
            }
        }, {
            key: "build_metric",
            value: function(t) {
                return {
                    name: t,
                    units: this.desc.units,
                    derive: this.desc.derive
                };
            }
        }, {
            key: "hover_hit",
            value: function(t, e) {
                return !(!e || e.series.data != this.options.data);
            }
        }, {
            key: "hover",
            value: function(t) {
                k(this).triggerHandler("hover", [ t ]);
            }
        }, {
            key: "move_to_front",
            value: function() {
                var t = this.flot_data.indexOf(this.options);
                t >= 0 && (this.flot_data.splice(t, 1), this.flot_data.push(this.options));
            }
        }, {
            key: "check_archives",
            value: function() {
                this.channel.archives && k(this).triggerHandler("changed");
            }
        } ]), t;
    }(), T = function(t) {
        function e(t, n, i, r, s) {
            a(this, e);
            var l = o(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, t, n, i, r, s));
            return l.desc.direct && l.chanopts_list.push({
                source: "direct",
                archive_source: "pcp-archive",
                metrics: l.desc.direct.map(l.build_metric, l),
                instances: l.desc.instances,
                "omit-instances": l.desc["omit-instances"],
                host: l.desc.host
            }), l.desc.internal && l.chanopts_list.push({
                source: "internal",
                metrics: l.desc.internal.map(l.build_metric, l),
                instances: l.desc.instances,
                "omit-instances": l.desc["omit-instances"],
                host: l.desc.host
            }), l;
        }
        return i(e, t), _(e, [ {
            key: "flat_sum",
            value: function(t) {
                var e;
                if (!t) return 0;
                if (void 0 !== t.length) {
                    e = 0;
                    for (var n = 0; n < t.length; n++) e += this.flat_sum(t[n]);
                    return e;
                }
                return t;
            }
        }, {
            key: "reset_series",
            value: function() {
                var t = this;
                this.channel && this.channel.close(), this.channel = w.metrics(this.interval, this.chanopts_list);
                var e = this.grid.add(this.channel, []), n = this.desc.factor || 1, o = this.desc.threshold || null, i = this.desc.offset || 0;
                this.options.data = this.grid.add(function(a, r, s) {
                    for (var l = 0; l < s; l++) {
                        var c = i + t.flat_sum(e[r + l]) * n;
                        null !== o ? a[r + l] = [ (t.grid.beg + r + l) * t.interval, Math.abs(c) > o ? c : null, o ] : a[r + l] = [ (t.grid.beg + r + l) * t.interval, c ];
                    }
                }), k(this.channel).on("changed", this.check_archives.bind(this)), this.check_archives();
            }
        } ]), e;
    }(C), S = function(t) {
        function e(t, n, i, r, s) {
            a(this, e);
            var l = o(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, t, n, i, r, s));
            return l.desc.direct && l.chanopts_list.push({
                source: "direct",
                archive_source: "pcp-archive",
                metrics: l.desc.direct.map(l.build_metric, l),
                instances: l.desc.instances,
                "omit-instances": l.desc["omit-instances"],
                host: l.desc.host
            }), l.desc.internal && l.chanopts_list.push({
                source: "internal",
                metrics: l.desc.internal.map(l.build_metric, l),
                instances: l.desc.instances,
                "omit-instances": l.desc["omit-instances"],
                host: l.desc.host
            }), l;
        }
        return i(e, t), _(e, [ {
            key: "flat_difference",
            value: function(t) {
                var e;
                if (!t) return 0;
                if (void 0 !== t.length) {
                    e = t[0];
                    for (var n = 1; n < t.length; n++) e -= this.flat_difference(t[n]);
                    return e;
                }
                return t;
            }
        }, {
            key: "reset_series",
            value: function() {
                var t = this;
                this.channel && this.channel.close(), this.channel = w.metrics(this.interval, this.chanopts_list);
                var e = this.grid.add(this.channel, []), n = this.desc.factor || 1, o = this.desc.threshold || null, i = this.desc.offset || 0;
                this.options.data = this.grid.add(function(a, r, s) {
                    for (var l = 0; l < s; l++) {
                        var c = i + t.flat_difference(e[r + l]) * n;
                        null !== o ? a[r + l] = [ (t.grid.beg + r + l) * t.interval, Math.abs(c) > o ? c : null, o ] : a[r + l] = [ (t.grid.beg + r + l) * t.interval, c ];
                    }
                }), k(this.channel).on("changed", this.check_archives.bind(this)), this.check_archives();
            }
        } ]), e;
    }(C), z = function(t) {
        function e(t, n, i, r, s) {
            a(this, e);
            var l = o(this, (e.__proto__ || Object.getPrototypeOf(e)).call(this, t, n, i, r, s));
            return l.instances = {}, l.last_instance = null, l.desc.direct && l.chanopts_list.push({
                source: "direct",
                archive_source: "pcp-archive",
                metrics: [ l.build_metric(l.desc.direct) ],
                metrics_path_names: [ "a" ],
                instances: l.desc.instances,
                "omit-instances": l.desc["omit-instances"],
                host: l.desc.host
            }), l.desc.internal && l.chanopts_list.push({
                source: "internal",
                metrics: [ l.build_metric(l.desc.internal) ],
                metrics_path_names: [ "a" ],
                instances: l.desc.instances,
                "omit-instances": l.desc["omit-instances"],
                host: l.desc.host
            }), l;
        }
        return i(e, t), _(e, [ {
            key: "reset_series",
            value: function() {
                this.channel && this.channel.close(), this.channel = w.metrics(this.interval, this.chanopts_list), 
                k(this.channel).on("changed", this.check_archives.bind(this)), this.check_archives();
                for (var t in this.instances) this.instances[t].reset();
            }
        }, {
            key: "add_instance",
            value: function(t, e) {
                function n() {
                    var e = this;
                    i = this.grid.add(this.channel, [ "a", t ]), a.data = this.grid.add(function(t, n, o) {
                        for (var a = 0; a < o; a++) {
                            var c = (i[n + a] || 0) * r, d = (e.grid.beg + n + a) * e.interval, u = 0;
                            l && (u = l.data[n + a][1] ? l.data[n + a][1] : l.data[n + a][2]), Math.abs(c) > s ? (t[n + a] = [ d, u + c, u ], 
                            t[n + a - 1] && null === t[n + a - 1][1] && (t[n + a - 1][1] = t[n + a - 1][2])) : (t[n + a] = [ d, null, u ], 
                            t[n + a - 1] && null !== t[n + a - 1][1] && (t[n + a - 1][1] = t[n + a - 1][2]));
                        }
                    });
                }
                function o() {
                    this.grid.remove(i), this.grid.remove(a.data);
                    var t = this.flot_data.indexOf(a);
                    t >= 0 && this.flot_data.splice(t, 1);
                }
                if (!this.instances[t]) {
                    var i, a = k.extend({
                        selector: e
                    }, this.options), r = this.desc.factor || 1, s = this.desc.threshold || 0, l = this.last_instance;
                    a.reset = n.bind(this), a.remove = o.bind(this), this.last_instance = a, this.instances[t] = a, 
                    a.reset(), this.flot_data.push(a), this.grid.sync();
                }
            }
        }, {
            key: "clear_instances",
            value: function() {
                for (var t in this.instances) this.instances[t].remove();
                this.instances = {}, this.last_instance = null;
            }
        }, {
            key: "hover_hit",
            value: function(t, e) {
                var n;
                if (!this.grid) return !1;
                n = Math.round(t.x / this.interval) - this.grid.beg, n < 0 && (n = 0);
                for (var o in this.instances) {
                    var i = this.instances[o].data;
                    if (i[n] && i[n][1] && i[n][2] <= t.y && t.y <= i[n][1]) return this.instances[o].selector || o;
                }
                return !1;
            }
        } ]), e;
    }(C), O = (e.Plot = function() {
        function t(e, n, o) {
            a(this, t), this.element = e, this.options = {}, this.series = [], this.flot_data = [], 
            this.flot = null, this.interval = 1e3 * Math.ceil(n / 1e3), this.grid = null, this.refresh_pending = !1, 
            this.sync_suppressed = 0, this.archives = !1, this.cur_hover_series = null, this.cur_hover_val = !1, 
            k(this.element).on("plothover", null, this, this.hover_on), k(this.element).on("mouseleave", null, this, this.hover_off), 
            k(this.element).on("plotselecting", null, this, this.selecting), k(this.element).on("plotselected", null, this, this.selected), 
            k(this.element).data("flot_data", this.flot_data), this.reset(n, o);
        }
        return _(t, [ {
            key: "refresh_now",
            value: function() {
                if (0 !== this.element.height() && 0 !== this.element.width()) {
                    null === this.flot && (this.flot = k.plot(this.element, this.flot_data, this.options)), 
                    this.flot.setData(this.flot_data);
                    var t = this.flot.getAxes();
                    t.xaxis.options.min = this.grid.beg * this.interval, t.xaxis.options.max = (this.grid.end - 2) * this.interval, 
                    this.options.setup_hook && this.options.setup_hook(this.flot), t.xaxis.show = !0, 
                    t.xaxis.used = !0, t.yaxis.show = !0, t.yaxis.used = !0, this.flot.setupGrid(), 
                    this.flot.draw(), this.options.post_hook && this.options.post_hook(this.flot);
                }
            }
        }, {
            key: "refresh",
            value: function() {
                var t = this;
                this.refresh_pending || (this.refresh_pending = !0, window.setTimeout(function() {
                    t.refresh_pending = !1, t.refresh_now();
                }, 0));
            }
        }, {
            key: "start_walking",
            value: function() {
                this.grid.walk();
            }
        }, {
            key: "stop_walking",
            value: function() {
                this.grid.move(this.grid.beg, this.grid.end);
            }
        }, {
            key: "reset",
            value: function(t, e) {
                var n = this;
                this.flot && this.flot.clearSelection(!0), this.interval = 1e3 * Math.ceil(t / 1e3);
                var o;
                o = void 0 !== e ? new Date().getTime() - 1e3 * e : 0;
                var i = -Math.ceil((1e3 * t + o) / this.interval), a = -Math.floor(o / this.interval);
                if (this.grid && this.grid.interval == this.interval) this.grid.move(i, a); else {
                    this.grid && this.grid.close(), this.grid = w.grid(this.interval, i, a), this.sync_suppressed++;
                    for (var r = 0; r < this.series.length; r++) this.series[r].stop(), this.series[r].interval = this.interval, 
                    this.series[r].grid = this.grid, this.series[r].reset_series();
                    this.sync_suppressed--, this.sync(), k(this.grid).on("notify", function(t, e, o) {
                        n.refresh();
                    });
                }
            }
        }, {
            key: "sync",
            value: function() {
                0 === this.sync_suppressed && this.grid.sync();
            }
        }, {
            key: "destroy",
            value: function() {
                this.grid.close();
                for (var t = 0; t < this.series.length; t++) this.series[t].stop();
                this.options = {}, this.series = [], this.flot_data = [], this.flot = null, k(this.element).empty(), 
                k(this.element).data("flot_data", null);
            }
        }, {
            key: "resize",
            value: function() {
                0 !== this.element.height() && 0 !== this.element.width() && (this.flot && this.flot.resize(), 
                this.refresh());
            }
        }, {
            key: "set_options",
            value: function(t) {
                this.options = t, this.flot = null;
            }
        }, {
            key: "get_options",
            value: function() {
                return this.options;
            }
        }, {
            key: "check_archives",
            value: function() {
                this.archives || (this.archives = !0, k(this).triggerHandler("changed"));
            }
        }, {
            key: "add_metrics_sum_series",
            value: function(t, e) {
                var n = new T(t, e, this.grid, this.flot_data, this.interval);
                return k(n).on("removed", this.refresh.bind(this)), k(n).on("changed", this.check_archives.bind(this)), 
                n.reset_series(), n.check_archives(), this.series.push(n), this.sync(), this.flot_data.push(e), 
                n;
            }
        }, {
            key: "add_metrics_difference_series",
            value: function(t, e) {
                var n = new S(t, e, this.grid, this.flot_data, this.interval);
                return k(n).on("removed", this.refresh.bind(this)), k(n).on("changed", this.check_archives.bind(this)), 
                n.reset_series(), n.check_archives(), this.series.push(n), this.sync(), this.flot_data.push(e), 
                n;
            }
        }, {
            key: "add_metrics_stacked_instances_series",
            value: function(t, e) {
                var n = new z(t, e, this.grid, this.flot_data, this.interval);
                k(n).on("removed", this.refresh.bind(this)), k(n).on("changed", this.check_archives.bind(this)), 
                n.reset_series(), n.check_archives(), this.series.push(n), this.sync_suppressed++;
                for (var o in n.instances) n.instances[o].reset();
                return this.sync_suppressed--, this.sync(), n;
            }
        }, {
            key: "hover",
            value: function(t, e) {
                this.cur_hover_series != t ? (this.cur_hover_series && this.cur_hover_series.hover(!1), 
                this.cur_hover_series = t, this.cur_hover_val = e, this.cur_hover_series && this.cur_hover_series.hover(this.cur_hover_val)) : this.cur_hover_val != e && (this.cur_hover_val = e, 
                this.cur_hover_series && this.cur_hover_series.hover(this.cur_hover_val));
            }
        }, {
            key: "hover_on",
            value: function(t, e, n) {
                for (var o = null, i = !1, a = 0; a < t.data.series.length; a++) if (i = t.data.series[a].hover_hit(e, n)) {
                    o = t.data.series[a];
                    break;
                }
                t.data.hover(o, i);
            }
        }, {
            key: "hover_off",
            value: function(t) {
                t.data.hover(null, !1);
            }
        }, {
            key: "selecting",
            value: function(t, e) {
                e && k(t.data).triggerHandler("zoomstart", []);
            }
        }, {
            key: "selected",
            value: function(t, e) {
                t.data.flot.clearSelection(!0), k(t.data).triggerHandler("zoom", [ (e.xaxis.to - e.xaxis.from) / 1e3, e.xaxis.to / 1e3 ]);
            }
        } ]), t;
    }(), [ M("month-name", "Jan"), M("month-name", "Feb"), M("month-name", "Mar"), M("month-name", "Apr"), M("month-name", "May"), M("month-name", "Jun"), M("month-name", "Jul"), M("month-name", "Aug"), M("month-name", "Sep"), M("month-name", "Oct"), M("month-name", "Nov"), M("month-name", "Dec") ]);
}, function(t, e) {
    !function(t) {
        t.color = {}, t.color.make = function(e, n, o, i) {
            var a = {};
            return a.r = e || 0, a.g = n || 0, a.b = o || 0, a.a = null != i ? i : 1, a.add = function(t, e) {
                for (var n = 0; n < t.length; ++n) a[t.charAt(n)] += e;
                return a.normalize();
            }, a.scale = function(t, e) {
                for (var n = 0; n < t.length; ++n) a[t.charAt(n)] *= e;
                return a.normalize();
            }, a.toString = function() {
                return a.a >= 1 ? "rgb(" + [ a.r, a.g, a.b ].join(",") + ")" : "rgba(" + [ a.r, a.g, a.b, a.a ].join(",") + ")";
            }, a.normalize = function() {
                function t(t, e, n) {
                    return e < t ? t : e > n ? n : e;
                }
                return a.r = t(0, parseInt(a.r), 255), a.g = t(0, parseInt(a.g), 255), a.b = t(0, parseInt(a.b), 255), 
                a.a = t(0, a.a, 1), a;
            }, a.clone = function() {
                return t.color.make(a.r, a.b, a.g, a.a);
            }, a.normalize();
        }, t.color.extract = function(e, n) {
            var o;
            do {
                if (o = e.css(n).toLowerCase(), "" != o && "transparent" != o) break;
                e = e.parent();
            } while (e.length && !t.nodeName(e.get(0), "body"));
            return "rgba(0, 0, 0, 0)" == o && (o = "transparent"), t.color.parse(o);
        }, t.color.parse = function(n) {
            var o, i = t.color.make;
            if (o = /rgb\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*\)/.exec(n)) return i(parseInt(o[1], 10), parseInt(o[2], 10), parseInt(o[3], 10));
            if (o = /rgba\(\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]{1,3})\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(n)) return i(parseInt(o[1], 10), parseInt(o[2], 10), parseInt(o[3], 10), parseFloat(o[4]));
            if (o = /rgb\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*\)/.exec(n)) return i(2.55 * parseFloat(o[1]), 2.55 * parseFloat(o[2]), 2.55 * parseFloat(o[3]));
            if (o = /rgba\(\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\%\s*,\s*([0-9]+(?:\.[0-9]+)?)\s*\)/.exec(n)) return i(2.55 * parseFloat(o[1]), 2.55 * parseFloat(o[2]), 2.55 * parseFloat(o[3]), parseFloat(o[4]));
            if (o = /#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(n)) return i(parseInt(o[1], 16), parseInt(o[2], 16), parseInt(o[3], 16));
            if (o = /#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(n)) return i(parseInt(o[1] + o[1], 16), parseInt(o[2] + o[2], 16), parseInt(o[3] + o[3], 16));
            var a = t.trim(n).toLowerCase();
            return "transparent" == a ? i(255, 255, 255, 0) : (o = e[a] || [ 0, 0, 0 ], i(o[0], o[1], o[2]));
        };
        var e = {
            aqua: [ 0, 255, 255 ],
            azure: [ 240, 255, 255 ],
            beige: [ 245, 245, 220 ],
            black: [ 0, 0, 0 ],
            blue: [ 0, 0, 255 ],
            brown: [ 165, 42, 42 ],
            cyan: [ 0, 255, 255 ],
            darkblue: [ 0, 0, 139 ],
            darkcyan: [ 0, 139, 139 ],
            darkgrey: [ 169, 169, 169 ],
            darkgreen: [ 0, 100, 0 ],
            darkkhaki: [ 189, 183, 107 ],
            darkmagenta: [ 139, 0, 139 ],
            darkolivegreen: [ 85, 107, 47 ],
            darkorange: [ 255, 140, 0 ],
            darkorchid: [ 153, 50, 204 ],
            darkred: [ 139, 0, 0 ],
            darksalmon: [ 233, 150, 122 ],
            darkviolet: [ 148, 0, 211 ],
            fuchsia: [ 255, 0, 255 ],
            gold: [ 255, 215, 0 ],
            green: [ 0, 128, 0 ],
            indigo: [ 75, 0, 130 ],
            khaki: [ 240, 230, 140 ],
            lightblue: [ 173, 216, 230 ],
            lightcyan: [ 224, 255, 255 ],
            lightgreen: [ 144, 238, 144 ],
            lightgrey: [ 211, 211, 211 ],
            lightpink: [ 255, 182, 193 ],
            lightyellow: [ 255, 255, 224 ],
            lime: [ 0, 255, 0 ],
            magenta: [ 255, 0, 255 ],
            maroon: [ 128, 0, 0 ],
            navy: [ 0, 0, 128 ],
            olive: [ 128, 128, 0 ],
            orange: [ 255, 165, 0 ],
            pink: [ 255, 192, 203 ],
            purple: [ 128, 0, 128 ],
            violet: [ 128, 0, 128 ],
            red: [ 255, 0, 0 ],
            silver: [ 192, 192, 192 ],
            white: [ 255, 255, 255 ],
            yellow: [ 255, 255, 0 ]
        };
    }(jQuery), function(t) {
        function e(e, n) {
            var o = n.children("." + e)[0];
            if (null == o && (o = document.createElement("canvas"), o.className = e, t(o).css({
                direction: "ltr",
                position: "absolute",
                left: 0,
                top: 0
            }).appendTo(n), !o.getContext)) {
                if (!window.G_vmlCanvasManager) throw new Error("Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.");
                o = window.G_vmlCanvasManager.initElement(o);
            }
            this.element = o;
            var i = this.context = o.getContext("2d"), a = window.devicePixelRatio || 1, r = i.webkitBackingStorePixelRatio || i.mozBackingStorePixelRatio || i.msBackingStorePixelRatio || i.oBackingStorePixelRatio || i.backingStorePixelRatio || 1;
            this.pixelRatio = a / r, this.resize(n.width(), n.height()), this.textContainer = null, 
            this.text = {}, this._textCache = {};
        }
        function n(n, i, a, r) {
            function s(t, e) {
                e = [ gt ].concat(e);
                for (var n = 0; n < t.length; ++n) t[n].apply(this, e);
            }
            function l() {
                for (var n = {
                    Canvas: e
                }, o = 0; o < r.length; ++o) {
                    var i = r[o];
                    i.init(gt, n), i.options && t.extend(!0, it, i.options);
                }
            }
            function c(e) {
                t.extend(!0, it, e), e && e.colors && (it.colors = e.colors), null == it.xaxis.color && (it.xaxis.color = t.color.parse(it.grid.color).scale("a", .22).toString()), 
                null == it.yaxis.color && (it.yaxis.color = t.color.parse(it.grid.color).scale("a", .22).toString()), 
                null == it.xaxis.tickColor && (it.xaxis.tickColor = it.grid.tickColor || it.xaxis.color), 
                null == it.yaxis.tickColor && (it.yaxis.tickColor = it.grid.tickColor || it.yaxis.color), 
                null == it.grid.borderColor && (it.grid.borderColor = it.grid.color), null == it.grid.tickColor && (it.grid.tickColor = t.color.parse(it.grid.color).scale("a", .22).toString());
                var o, i, a, r = n.css("font-size"), l = r ? +r.replace("px", "") : 13, c = {
                    style: n.css("font-style"),
                    size: Math.round(.8 * l),
                    variant: n.css("font-variant"),
                    weight: n.css("font-weight"),
                    family: n.css("font-family")
                };
                for (a = it.xaxes.length || 1, o = 0; o < a; ++o) i = it.xaxes[o], i && !i.tickColor && (i.tickColor = i.color), 
                i = t.extend(!0, {}, it.xaxis, i), it.xaxes[o] = i, i.font && (i.font = t.extend({}, c, i.font), 
                i.font.color || (i.font.color = i.color), i.font.lineHeight || (i.font.lineHeight = Math.round(1.15 * i.font.size)));
                for (a = it.yaxes.length || 1, o = 0; o < a; ++o) i = it.yaxes[o], i && !i.tickColor && (i.tickColor = i.color), 
                i = t.extend(!0, {}, it.yaxis, i), it.yaxes[o] = i, i.font && (i.font = t.extend({}, c, i.font), 
                i.font.color || (i.font.color = i.color), i.font.lineHeight || (i.font.lineHeight = Math.round(1.15 * i.font.size)));
                for (it.xaxis.noTicks && null == it.xaxis.ticks && (it.xaxis.ticks = it.xaxis.noTicks), 
                it.yaxis.noTicks && null == it.yaxis.ticks && (it.yaxis.ticks = it.yaxis.noTicks), 
                it.x2axis && (it.xaxes[1] = t.extend(!0, {}, it.xaxis, it.x2axis), it.xaxes[1].position = "top", 
                null == it.x2axis.min && (it.xaxes[1].min = null), null == it.x2axis.max && (it.xaxes[1].max = null)), 
                it.y2axis && (it.yaxes[1] = t.extend(!0, {}, it.yaxis, it.y2axis), it.yaxes[1].position = "right", 
                null == it.y2axis.min && (it.yaxes[1].min = null), null == it.y2axis.max && (it.yaxes[1].max = null)), 
                it.grid.coloredAreas && (it.grid.markings = it.grid.coloredAreas), it.grid.coloredAreasColor && (it.grid.markingsColor = it.grid.coloredAreasColor), 
                it.lines && t.extend(!0, it.series.lines, it.lines), it.points && t.extend(!0, it.series.points, it.points), 
                it.bars && t.extend(!0, it.series.bars, it.bars), null != it.shadowSize && (it.series.shadowSize = it.shadowSize), 
                null != it.highlightColor && (it.series.highlightColor = it.highlightColor), o = 0; o < it.xaxes.length; ++o) g(dt, o + 1).options = it.xaxes[o];
                for (o = 0; o < it.yaxes.length; ++o) g(ut, o + 1).options = it.yaxes[o];
                for (var d in mt) it.hooks[d] && it.hooks[d].length && (mt[d] = mt[d].concat(it.hooks[d]));
                s(mt.processOptions, [ it ]);
            }
            function d(t) {
                ot = u(t), v(), b();
            }
            function u(e) {
                for (var n = [], o = 0; o < e.length; ++o) {
                    var i = t.extend(!0, {}, it.series);
                    null != e[o].data ? (i.data = e[o].data, delete e[o].data, t.extend(!0, i, e[o]), 
                    e[o].data = i.data) : i.data = e[o], n.push(i);
                }
                return n;
            }
            function h(t, e) {
                var n = t[e + "axis"];
                return "object" == typeof n && (n = n.n), "number" != typeof n && (n = 1), n;
            }
            function f() {
                return t.grep(dt.concat(ut), function(t) {
                    return t;
                });
            }
            function p(t) {
                var e, n, o = {};
                for (e = 0; e < dt.length; ++e) n = dt[e], n && n.used && (o["x" + n.n] = n.c2p(t.left));
                for (e = 0; e < ut.length; ++e) n = ut[e], n && n.used && (o["y" + n.n] = n.c2p(t.top));
                return void 0 !== o.x1 && (o.x = o.x1), void 0 !== o.y1 && (o.y = o.y1), o;
            }
            function m(t) {
                var e, n, o, i = {};
                for (e = 0; e < dt.length; ++e) if (n = dt[e], n && n.used && (o = "x" + n.n, null == t[o] && 1 == n.n && (o = "x"), 
                null != t[o])) {
                    i.left = n.p2c(t[o]);
                    break;
                }
                for (e = 0; e < ut.length; ++e) if (n = ut[e], n && n.used && (o = "y" + n.n, null == t[o] && 1 == n.n && (o = "y"), 
                null != t[o])) {
                    i.top = n.p2c(t[o]);
                    break;
                }
                return i;
            }
            function g(e, n) {
                return e[n - 1] || (e[n - 1] = {
                    n: n,
                    direction: e == dt ? "x" : "y",
                    options: t.extend(!0, {}, e == dt ? it.xaxis : it.yaxis)
                }), e[n - 1];
            }
            function v() {
                var e, n = ot.length, o = -1;
                for (e = 0; e < ot.length; ++e) {
                    var i = ot[e].color;
                    null != i && (n--, "number" == typeof i && i > o && (o = i));
                }
                n <= o && (n = o + 1);
                var a, r = [], s = it.colors, l = s.length, c = 0;
                for (e = 0; e < n; e++) a = t.color.parse(s[e % l] || "#666"), e % l == 0 && e && (c = c >= 0 ? c < .5 ? -c - .2 : 0 : -c), 
                r[e] = a.scale("rgb", 1 + c);
                var d, u = 0;
                for (e = 0; e < ot.length; ++e) {
                    if (d = ot[e], null == d.color ? (d.color = r[u].toString(), ++u) : "number" == typeof d.color && (d.color = r[d.color].toString()), 
                    null == d.lines.show) {
                        var f, p = !0;
                        for (f in d) if (d[f] && d[f].show) {
                            p = !1;
                            break;
                        }
                        p && (d.lines.show = !0);
                    }
                    null == d.lines.zero && (d.lines.zero = !!d.lines.fill), d.xaxis = g(dt, h(d, "x")), 
                    d.yaxis = g(ut, h(d, "y"));
                }
            }
            function b() {
                function e(t, e, n) {
                    e < t.datamin && e != -b && (t.datamin = e), n > t.datamax && n != b && (t.datamax = n);
                }
                var n, o, i, a, r, l, c, d, u, h, p, m, g = Number.POSITIVE_INFINITY, v = Number.NEGATIVE_INFINITY, b = Number.MAX_VALUE;
                for (t.each(f(), function(t, e) {
                    e.datamin = g, e.datamax = v, e.used = !1;
                }), n = 0; n < ot.length; ++n) r = ot[n], r.datapoints = {
                    points: []
                }, s(mt.processRawData, [ r, r.data, r.datapoints ]);
                for (n = 0; n < ot.length; ++n) {
                    if (r = ot[n], p = r.data, m = r.datapoints.format, !m) {
                        if (m = [], m.push({
                            x: !0,
                            number: !0,
                            required: !0
                        }), m.push({
                            y: !0,
                            number: !0,
                            required: !0
                        }), r.bars.show || r.lines.show && r.lines.fill) {
                            var y = !!(r.bars.show && r.bars.zero || r.lines.show && r.lines.zero);
                            m.push({
                                y: !0,
                                number: !0,
                                required: !1,
                                defaultValue: 0,
                                autoscale: y
                            }), r.bars.horizontal && (delete m[m.length - 1].y, m[m.length - 1].x = !0);
                        }
                        r.datapoints.format = m;
                    }
                    if (null == r.datapoints.pointsize) {
                        r.datapoints.pointsize = m.length, c = r.datapoints.pointsize, l = r.datapoints.points;
                        var x = r.lines.show && r.lines.steps;
                        for (r.xaxis.used = r.yaxis.used = !0, o = i = 0; o < p.length; ++o, i += c) {
                            h = p[o];
                            var _ = null == h;
                            if (!_) for (a = 0; a < c; ++a) d = h[a], u = m[a], u && (u.number && null != d && (d = +d, 
                            isNaN(d) ? d = null : d == 1 / 0 ? d = b : d == -(1 / 0) && (d = -b)), null == d && (u.required && (_ = !0), 
                            null != u.defaultValue && (d = u.defaultValue))), l[i + a] = d;
                            if (_) for (a = 0; a < c; ++a) d = l[i + a], null != d && (u = m[a], u.autoscale !== !1 && (u.x && e(r.xaxis, d, d), 
                            u.y && e(r.yaxis, d, d))), l[i + a] = null; else if (x && i > 0 && null != l[i - c] && l[i - c] != l[i] && l[i - c + 1] != l[i + 1]) {
                                for (a = 0; a < c; ++a) l[i + c + a] = l[i + a];
                                l[i + 1] = l[i - c + 1], i += c;
                            }
                        }
                    }
                }
                for (n = 0; n < ot.length; ++n) r = ot[n], s(mt.processDatapoints, [ r, r.datapoints ]);
                for (n = 0; n < ot.length; ++n) {
                    r = ot[n], l = r.datapoints.points, c = r.datapoints.pointsize, m = r.datapoints.format;
                    var k = g, w = g, M = v, C = v;
                    for (o = 0; o < l.length; o += c) if (null != l[o]) for (a = 0; a < c; ++a) d = l[o + a], 
                    u = m[a], u && u.autoscale !== !1 && d != b && d != -b && (u.x && (d < k && (k = d), 
                    d > M && (M = d)), u.y && (d < w && (w = d), d > C && (C = d)));
                    if (r.bars.show) {
                        var T;
                        switch (r.bars.align) {
                          case "left":
                            T = 0;
                            break;

                          case "right":
                            T = -r.bars.barWidth;
                            break;

                          default:
                            T = -r.bars.barWidth / 2;
                        }
                        r.bars.horizontal ? (w += T, C += T + r.bars.barWidth) : (k += T, M += T + r.bars.barWidth);
                    }
                    e(r.xaxis, k, M), e(r.yaxis, w, C);
                }
                t.each(f(), function(t, e) {
                    e.datamin == g && (e.datamin = null), e.datamax == v && (e.datamax = null);
                });
            }
            function y() {
                n.css("padding", 0).children().filter(function() {
                    return !t(this).hasClass("flot-overlay") && !t(this).hasClass("flot-base");
                }).remove(), "static" == n.css("position") && n.css("position", "relative"), at = new e("flot-base", n), 
                rt = new e("flot-overlay", n), lt = at.context, ct = rt.context, st = t(rt.element).unbind();
                var o = n.data("plot");
                o && (o.shutdown(), rt.clear()), n.data("plot", gt);
            }
            function x() {
                it.grid.hoverable && (st.mousemove(q), st.bind("mouseleave", B)), it.grid.clickable && st.click(G), 
                s(mt.bindEvents, [ st ]);
            }
            function _() {
                bt && clearTimeout(bt), st.unbind("mousemove", q), st.unbind("mouseleave", B), st.unbind("click", G), 
                s(mt.shutdown, [ st ]);
            }
            function k(t) {
                function e(t) {
                    return t;
                }
                var n, o, i = t.options.transform || e, a = t.options.inverseTransform;
                "x" == t.direction ? (n = t.scale = ft / Math.abs(i(t.max) - i(t.min)), o = Math.min(i(t.max), i(t.min))) : (n = t.scale = pt / Math.abs(i(t.max) - i(t.min)), 
                n = -n, o = Math.max(i(t.max), i(t.min))), i == e ? t.p2c = function(t) {
                    return (t - o) * n;
                } : t.p2c = function(t) {
                    return (i(t) - o) * n;
                }, a ? t.c2p = function(t) {
                    return a(o + t / n);
                } : t.c2p = function(t) {
                    return o + t / n;
                };
            }
            function w(t) {
                for (var e = t.options, n = t.ticks || [], o = e.labelWidth || 0, i = e.labelHeight || 0, a = o || ("x" == t.direction ? Math.floor(at.width / (n.length || 1)) : null), r = t.direction + "Axis " + t.direction + t.n + "Axis", s = "flot-" + t.direction + "-axis flot-" + t.direction + t.n + "-axis " + r, l = e.font || "flot-tick-label tickLabel", c = 0; c < n.length; ++c) {
                    var d = n[c];
                    if (d.label) {
                        var u = at.getTextInfo(s, d.label, l, null, a);
                        o = Math.max(o, u.width), i = Math.max(i, u.height);
                    }
                }
                t.labelWidth = e.labelWidth || o, t.labelHeight = e.labelHeight || i;
            }
            function M(e) {
                var n = e.labelWidth, o = e.labelHeight, i = e.options.position, a = "x" === e.direction, r = e.options.tickLength, s = it.grid.axisMargin, l = it.grid.labelMargin, c = !0, d = !0, u = !0, h = !1;
                t.each(a ? dt : ut, function(t, n) {
                    n && (n.show || n.reserveSpace) && (n === e ? h = !0 : n.options.position === i && (h ? d = !1 : c = !1), 
                    h || (u = !1));
                }), d && (s = 0), null == r && (r = u ? "full" : 5), isNaN(+r) || (l += +r), a ? (o += l, 
                "bottom" == i ? (ht.bottom += o + s, e.box = {
                    top: at.height - ht.bottom,
                    height: o
                }) : (e.box = {
                    top: ht.top + s,
                    height: o
                }, ht.top += o + s)) : (n += l, "left" == i ? (e.box = {
                    left: ht.left + s,
                    width: n
                }, ht.left += n + s) : (ht.right += n + s, e.box = {
                    left: at.width - ht.right,
                    width: n
                })), e.position = i, e.tickLength = r, e.box.padding = l, e.innermost = c;
            }
            function C(t) {
                "x" == t.direction ? (t.box.left = ht.left - t.labelWidth / 2, t.box.width = at.width - ht.left - ht.right + t.labelWidth) : (t.box.top = ht.top - t.labelHeight / 2, 
                t.box.height = at.height - ht.bottom - ht.top + t.labelHeight);
            }
            function T() {
                var e, n = it.grid.minBorderMargin;
                if (null == n) for (n = 0, e = 0; e < ot.length; ++e) n = Math.max(n, 2 * (ot[e].points.radius + ot[e].points.lineWidth / 2));
                var o = {
                    left: n,
                    right: n,
                    top: n,
                    bottom: n
                };
                t.each(f(), function(t, e) {
                    e.reserveSpace && e.ticks && e.ticks.length && ("x" === e.direction ? (o.left = Math.max(o.left, e.labelWidth / 2), 
                    o.right = Math.max(o.right, e.labelWidth / 2)) : (o.bottom = Math.max(o.bottom, e.labelHeight / 2), 
                    o.top = Math.max(o.top, e.labelHeight / 2)));
                }), ht.left = Math.ceil(Math.max(o.left, ht.left)), ht.right = Math.ceil(Math.max(o.right, ht.right)), 
                ht.top = Math.ceil(Math.max(o.top, ht.top)), ht.bottom = Math.ceil(Math.max(o.bottom, ht.bottom));
            }
            function S() {
                var e, n = f(), o = it.grid.show;
                for (var i in ht) {
                    var a = it.grid.margin || 0;
                    ht[i] = "number" == typeof a ? a : a[i] || 0;
                }
                s(mt.processOffset, [ ht ]);
                for (var i in ht) "object" == typeof it.grid.borderWidth ? ht[i] += o ? it.grid.borderWidth[i] : 0 : ht[i] += o ? it.grid.borderWidth : 0;
                if (t.each(n, function(t, e) {
                    var n = e.options;
                    e.show = null == n.show ? e.used : n.show, e.reserveSpace = null == n.reserveSpace ? e.show : n.reserveSpace, 
                    z(e);
                }), o) {
                    var r = t.grep(n, function(t) {
                        return t.show || t.reserveSpace;
                    });
                    for (t.each(r, function(t, e) {
                        O(e), A(e), P(e, e.ticks), w(e);
                    }), e = r.length - 1; e >= 0; --e) M(r[e]);
                    T(), t.each(r, function(t, e) {
                        C(e);
                    });
                }
                ft = at.width - ht.left - ht.right, pt = at.height - ht.bottom - ht.top, t.each(n, function(t, e) {
                    k(e);
                }), o && D(), Y();
            }
            function z(t) {
                var e = t.options, n = +(null != e.min ? e.min : t.datamin), o = +(null != e.max ? e.max : t.datamax), i = o - n;
                if (0 == i) {
                    var a = 0 == o ? 1 : .01;
                    null == e.min && (n -= a), null != e.max && null == e.min || (o += a);
                } else {
                    var r = e.autoscaleMargin;
                    null != r && (null == e.min && (n -= i * r, n < 0 && null != t.datamin && t.datamin >= 0 && (n = 0)), 
                    null == e.max && (o += i * r, o > 0 && null != t.datamax && t.datamax <= 0 && (o = 0)));
                }
                t.min = n, t.max = o;
            }
            function O(e) {
                var n, i = e.options;
                n = "number" == typeof i.ticks && i.ticks > 0 ? i.ticks : .3 * Math.sqrt("x" == e.direction ? at.width : at.height);
                var a = (e.max - e.min) / n, r = -Math.floor(Math.log(a) / Math.LN10), s = i.tickDecimals;
                null != s && r > s && (r = s);
                var l, c = Math.pow(10, -r), d = a / c;
                if (d < 1.5 ? l = 1 : d < 3 ? (l = 2, d > 2.25 && (null == s || r + 1 <= s) && (l = 2.5, 
                ++r)) : l = d < 7.5 ? 5 : 10, l *= c, null != i.minTickSize && l < i.minTickSize && (l = i.minTickSize), 
                e.delta = a, e.tickDecimals = Math.max(0, null != s ? s : r), e.tickSize = i.tickSize || l, 
                "time" == i.mode && !e.tickGenerator) throw new Error("Time mode requires the flot.time plugin.");
                if (e.tickGenerator || (e.tickGenerator = function(t) {
                    var e, n = [], i = o(t.min, t.tickSize), a = 0, r = Number.NaN;
                    do e = r, r = i + a * t.tickSize, n.push(r), ++a; while (r < t.max && r != e);
                    return n;
                }, e.tickFormatter = function(t, e) {
                    var n = e.tickDecimals ? Math.pow(10, e.tickDecimals) : 1, o = "" + Math.round(t * n) / n;
                    if (null != e.tickDecimals) {
                        var i = o.indexOf("."), a = i == -1 ? 0 : o.length - i - 1;
                        if (a < e.tickDecimals) return (a ? o : o + ".") + ("" + n).substr(1, e.tickDecimals - a);
                    }
                    return o;
                }), t.isFunction(i.tickFormatter) && (e.tickFormatter = function(t, e) {
                    return "" + i.tickFormatter(t, e);
                }), null != i.alignTicksWithAxis) {
                    var u = ("x" == e.direction ? dt : ut)[i.alignTicksWithAxis - 1];
                    if (u && u.used && u != e) {
                        var h = e.tickGenerator(e);
                        if (h.length > 0 && (null == i.min && (e.min = Math.min(e.min, h[0])), null == i.max && h.length > 1 && (e.max = Math.max(e.max, h[h.length - 1]))), 
                        e.tickGenerator = function(t) {
                            var e, n, o = [];
                            for (n = 0; n < u.ticks.length; ++n) e = (u.ticks[n].v - u.min) / (u.max - u.min), 
                            e = t.min + e * (t.max - t.min), o.push(e);
                            return o;
                        }, !e.mode && null == i.tickDecimals) {
                            var f = Math.max(0, -Math.floor(Math.log(e.delta) / Math.LN10) + 1), p = e.tickGenerator(e);
                            p.length > 1 && /\..*0$/.test((p[1] - p[0]).toFixed(f)) || (e.tickDecimals = f);
                        }
                    }
                }
            }
            function A(e) {
                var n = e.options.ticks, o = [];
                null == n || "number" == typeof n && n > 0 ? o = e.tickGenerator(e) : n && (o = t.isFunction(n) ? n(e) : n);
                var i, a;
                for (e.ticks = [], i = 0; i < o.length; ++i) {
                    var r = null, s = o[i];
                    "object" == typeof s ? (a = +s[0], s.length > 1 && (r = s[1])) : a = +s, null == r && (r = e.tickFormatter(a, e)), 
                    isNaN(a) || e.ticks.push({
                        v: a,
                        label: r
                    });
                }
            }
            function P(t, e) {
                t.options.autoscaleMargin && e.length > 0 && (null == t.options.min && (t.min = Math.min(t.min, e[0].v)), 
                null == t.options.max && e.length > 1 && (t.max = Math.max(t.max, e[e.length - 1].v)));
            }
            function I() {
                at.clear(), s(mt.drawBackground, [ lt ]);
                var t = it.grid;
                t.show && t.backgroundColor && j(), t.show && !t.aboveData && W();
                for (var e = 0; e < ot.length; ++e) s(mt.drawSeries, [ lt, ot[e] ]), N(ot[e]);
                s(mt.draw, [ lt ]), t.show && t.aboveData && W(), at.render(), V();
            }
            function E(t, e) {
                for (var n, o, i, a, r = f(), s = 0; s < r.length; ++s) if (n = r[s], n.direction == e && (a = e + n.n + "axis", 
                t[a] || 1 != n.n || (a = e + "axis"), t[a])) {
                    o = t[a].from, i = t[a].to;
                    break;
                }
                if (t[a] || (n = "x" == e ? dt[0] : ut[0], o = t[e + "1"], i = t[e + "2"]), null != o && null != i && o > i) {
                    var l = o;
                    o = i, i = l;
                }
                return {
                    from: o,
                    to: i,
                    axis: n
                };
            }
            function j() {
                lt.save(), lt.translate(ht.left, ht.top), lt.fillStyle = nt(it.grid.backgroundColor, pt, 0, "rgba(255, 255, 255, 0)"), 
                lt.fillRect(0, 0, ft, pt), lt.restore();
            }
            function W() {
                var e, n, o, i;
                lt.save(), lt.translate(ht.left, ht.top);
                var a = it.grid.markings;
                if (a) for (t.isFunction(a) && (n = gt.getAxes(), n.xmin = n.xaxis.min, n.xmax = n.xaxis.max, 
                n.ymin = n.yaxis.min, n.ymax = n.yaxis.max, a = a(n)), e = 0; e < a.length; ++e) {
                    var r = a[e], s = E(r, "x"), l = E(r, "y");
                    if (null == s.from && (s.from = s.axis.min), null == s.to && (s.to = s.axis.max), 
                    null == l.from && (l.from = l.axis.min), null == l.to && (l.to = l.axis.max), !(s.to < s.axis.min || s.from > s.axis.max || l.to < l.axis.min || l.from > l.axis.max)) {
                        s.from = Math.max(s.from, s.axis.min), s.to = Math.min(s.to, s.axis.max), l.from = Math.max(l.from, l.axis.min), 
                        l.to = Math.min(l.to, l.axis.max);
                        var c = s.from === s.to, d = l.from === l.to;
                        if (!c || !d) if (s.from = Math.floor(s.axis.p2c(s.from)), s.to = Math.floor(s.axis.p2c(s.to)), 
                        l.from = Math.floor(l.axis.p2c(l.from)), l.to = Math.floor(l.axis.p2c(l.to)), c || d) {
                            var u = r.lineWidth || it.grid.markingsLineWidth, h = u % 2 ? .5 : 0;
                            lt.beginPath(), lt.strokeStyle = r.color || it.grid.markingsColor, lt.lineWidth = u, 
                            c ? (lt.moveTo(s.to + h, l.from), lt.lineTo(s.to + h, l.to)) : (lt.moveTo(s.from, l.to + h), 
                            lt.lineTo(s.to, l.to + h)), lt.stroke();
                        } else lt.fillStyle = r.color || it.grid.markingsColor, lt.fillRect(s.from, l.to, s.to - s.from, l.from - l.to);
                    }
                }
                n = f(), o = it.grid.borderWidth;
                for (var p = 0; p < n.length; ++p) {
                    var m, g, v, b, y = n[p], x = y.box, _ = y.tickLength;
                    if (y.show && 0 != y.ticks.length) {
                        for (lt.lineWidth = 1, "x" == y.direction ? (m = 0, g = "full" == _ ? "top" == y.position ? 0 : pt : x.top - ht.top + ("top" == y.position ? x.height : 0)) : (g = 0, 
                        m = "full" == _ ? "left" == y.position ? 0 : ft : x.left - ht.left + ("left" == y.position ? x.width : 0)), 
                        y.innermost || (lt.strokeStyle = y.options.color, lt.beginPath(), v = b = 0, "x" == y.direction ? v = ft + 1 : b = pt + 1, 
                        1 == lt.lineWidth && ("x" == y.direction ? g = Math.floor(g) + .5 : m = Math.floor(m) + .5), 
                        lt.moveTo(m, g), lt.lineTo(m + v, g + b), lt.stroke()), lt.strokeStyle = y.options.tickColor, 
                        lt.beginPath(), e = 0; e < y.ticks.length; ++e) {
                            var k = y.ticks[e].v;
                            v = b = 0, isNaN(k) || k < y.min || k > y.max || "full" == _ && ("object" == typeof o && o[y.position] > 0 || o > 0) && (k == y.min || k == y.max) || ("x" == y.direction ? (m = y.p2c(k), 
                            b = "full" == _ ? -pt : _, "top" == y.position && (b = -b)) : (g = y.p2c(k), v = "full" == _ ? -ft : _, 
                            "left" == y.position && (v = -v)), 1 == lt.lineWidth && ("x" == y.direction ? m = Math.floor(m) + .5 : g = Math.floor(g) + .5), 
                            lt.moveTo(m, g), lt.lineTo(m + v, g + b));
                        }
                        lt.stroke();
                    }
                }
                o && (i = it.grid.borderColor, "object" == typeof o || "object" == typeof i ? ("object" != typeof o && (o = {
                    top: o,
                    right: o,
                    bottom: o,
                    left: o
                }), "object" != typeof i && (i = {
                    top: i,
                    right: i,
                    bottom: i,
                    left: i
                }), o.top > 0 && (lt.strokeStyle = i.top, lt.lineWidth = o.top, lt.beginPath(), 
                lt.moveTo(0 - o.left, 0 - o.top / 2), lt.lineTo(ft, 0 - o.top / 2), lt.stroke()), 
                o.right > 0 && (lt.strokeStyle = i.right, lt.lineWidth = o.right, lt.beginPath(), 
                lt.moveTo(ft + o.right / 2, 0 - o.top), lt.lineTo(ft + o.right / 2, pt), lt.stroke()), 
                o.bottom > 0 && (lt.strokeStyle = i.bottom, lt.lineWidth = o.bottom, lt.beginPath(), 
                lt.moveTo(ft + o.right, pt + o.bottom / 2), lt.lineTo(0, pt + o.bottom / 2), lt.stroke()), 
                o.left > 0 && (lt.strokeStyle = i.left, lt.lineWidth = o.left, lt.beginPath(), lt.moveTo(0 - o.left / 2, pt + o.bottom), 
                lt.lineTo(0 - o.left / 2, 0), lt.stroke())) : (lt.lineWidth = o, lt.strokeStyle = it.grid.borderColor, 
                lt.strokeRect(-o / 2, -o / 2, ft + o, pt + o))), lt.restore();
            }
            function D() {
                t.each(f(), function(t, e) {
                    var n, o, i, a, r, s = e.box, l = e.direction + "Axis " + e.direction + e.n + "Axis", c = "flot-" + e.direction + "-axis flot-" + e.direction + e.n + "-axis " + l, d = e.options.font || "flot-tick-label tickLabel";
                    if (at.removeText(c), e.show && 0 != e.ticks.length) for (var u = 0; u < e.ticks.length; ++u) n = e.ticks[u], 
                    !n.label || n.v < e.min || n.v > e.max || ("x" == e.direction ? (a = "center", o = ht.left + e.p2c(n.v), 
                    "bottom" == e.position ? i = s.top + s.padding : (i = s.top + s.height - s.padding, 
                    r = "bottom")) : (r = "middle", i = ht.top + e.p2c(n.v), "left" == e.position ? (o = s.left + s.width - s.padding, 
                    a = "right") : o = s.left + s.padding), at.addText(c, o, i, n.label, d, null, null, a, r));
                });
            }
            function N(t) {
                t.lines.show && F(t), t.bars.show && R(t), t.points.show && L(t);
            }
            function F(t) {
                function e(t, e, n, o, i) {
                    var a = t.points, r = t.pointsize, s = null, l = null;
                    lt.beginPath();
                    for (var c = r; c < a.length; c += r) {
                        var d = a[c - r], u = a[c - r + 1], h = a[c], f = a[c + 1];
                        if (null != d && null != h) {
                            if (u <= f && u < i.min) {
                                if (f < i.min) continue;
                                d = (i.min - u) / (f - u) * (h - d) + d, u = i.min;
                            } else if (f <= u && f < i.min) {
                                if (u < i.min) continue;
                                h = (i.min - u) / (f - u) * (h - d) + d, f = i.min;
                            }
                            if (u >= f && u > i.max) {
                                if (f > i.max) continue;
                                d = (i.max - u) / (f - u) * (h - d) + d, u = i.max;
                            } else if (f >= u && f > i.max) {
                                if (u > i.max) continue;
                                h = (i.max - u) / (f - u) * (h - d) + d, f = i.max;
                            }
                            if (d <= h && d < o.min) {
                                if (h < o.min) continue;
                                u = (o.min - d) / (h - d) * (f - u) + u, d = o.min;
                            } else if (h <= d && h < o.min) {
                                if (d < o.min) continue;
                                f = (o.min - d) / (h - d) * (f - u) + u, h = o.min;
                            }
                            if (d >= h && d > o.max) {
                                if (h > o.max) continue;
                                u = (o.max - d) / (h - d) * (f - u) + u, d = o.max;
                            } else if (h >= d && h > o.max) {
                                if (d > o.max) continue;
                                f = (o.max - d) / (h - d) * (f - u) + u, h = o.max;
                            }
                            d == s && u == l || lt.moveTo(o.p2c(d) + e, i.p2c(u) + n), s = h, l = f, lt.lineTo(o.p2c(h) + e, i.p2c(f) + n);
                        }
                    }
                    lt.stroke();
                }
                function n(t, e, n) {
                    for (var o = t.points, i = t.pointsize, a = Math.min(Math.max(0, n.min), n.max), r = 0, s = !1, l = 1, c = 0, d = 0; ;) {
                        if (i > 0 && r > o.length + i) break;
                        r += i;
                        var u = o[r - i], h = o[r - i + l], f = o[r], p = o[r + l];
                        if (s) {
                            if (i > 0 && null != u && null == f) {
                                d = r, i = -i, l = 2;
                                continue;
                            }
                            if (i < 0 && r == c + i) {
                                lt.fill(), s = !1, i = -i, l = 1, r = c = d + i;
                                continue;
                            }
                        }
                        if (null != u && null != f) {
                            if (u <= f && u < e.min) {
                                if (f < e.min) continue;
                                h = (e.min - u) / (f - u) * (p - h) + h, u = e.min;
                            } else if (f <= u && f < e.min) {
                                if (u < e.min) continue;
                                p = (e.min - u) / (f - u) * (p - h) + h, f = e.min;
                            }
                            if (u >= f && u > e.max) {
                                if (f > e.max) continue;
                                h = (e.max - u) / (f - u) * (p - h) + h, u = e.max;
                            } else if (f >= u && f > e.max) {
                                if (u > e.max) continue;
                                p = (e.max - u) / (f - u) * (p - h) + h, f = e.max;
                            }
                            if (s || (lt.beginPath(), lt.moveTo(e.p2c(u), n.p2c(a)), s = !0), h >= n.max && p >= n.max) lt.lineTo(e.p2c(u), n.p2c(n.max)), 
                            lt.lineTo(e.p2c(f), n.p2c(n.max)); else if (h <= n.min && p <= n.min) lt.lineTo(e.p2c(u), n.p2c(n.min)), 
                            lt.lineTo(e.p2c(f), n.p2c(n.min)); else {
                                var m = u, g = f;
                                h <= p && h < n.min && p >= n.min ? (u = (n.min - h) / (p - h) * (f - u) + u, h = n.min) : p <= h && p < n.min && h >= n.min && (f = (n.min - h) / (p - h) * (f - u) + u, 
                                p = n.min), h >= p && h > n.max && p <= n.max ? (u = (n.max - h) / (p - h) * (f - u) + u, 
                                h = n.max) : p >= h && p > n.max && h <= n.max && (f = (n.max - h) / (p - h) * (f - u) + u, 
                                p = n.max), u != m && lt.lineTo(e.p2c(m), n.p2c(h)), lt.lineTo(e.p2c(u), n.p2c(h)), 
                                lt.lineTo(e.p2c(f), n.p2c(p)), f != g && (lt.lineTo(e.p2c(f), n.p2c(p)), lt.lineTo(e.p2c(g), n.p2c(p)));
                            }
                        }
                    }
                }
                lt.save(), lt.translate(ht.left, ht.top), lt.lineJoin = "round";
                var o = t.lines.lineWidth, i = t.shadowSize;
                if (o > 0 && i > 0) {
                    lt.lineWidth = i, lt.strokeStyle = "rgba(0,0,0,0.1)";
                    var a = Math.PI / 18;
                    e(t.datapoints, Math.sin(a) * (o / 2 + i / 2), Math.cos(a) * (o / 2 + i / 2), t.xaxis, t.yaxis), 
                    lt.lineWidth = i / 2, e(t.datapoints, Math.sin(a) * (o / 2 + i / 4), Math.cos(a) * (o / 2 + i / 4), t.xaxis, t.yaxis);
                }
                lt.lineWidth = o, lt.strokeStyle = t.color;
                var r = $(t.lines, t.color, 0, pt);
                r && (lt.fillStyle = r, n(t.datapoints, t.xaxis, t.yaxis)), o > 0 && e(t.datapoints, 0, 0, t.xaxis, t.yaxis), 
                lt.restore();
            }
            function L(t) {
                function e(t, e, n, o, i, a, r, s) {
                    for (var l = t.points, c = t.pointsize, d = 0; d < l.length; d += c) {
                        var u = l[d], h = l[d + 1];
                        null == u || u < a.min || u > a.max || h < r.min || h > r.max || (lt.beginPath(), 
                        u = a.p2c(u), h = r.p2c(h) + o, "circle" == s ? lt.arc(u, h, e, 0, i ? Math.PI : 2 * Math.PI, !1) : s(lt, u, h, e, i), 
                        lt.closePath(), n && (lt.fillStyle = n, lt.fill()), lt.stroke());
                    }
                }
                lt.save(), lt.translate(ht.left, ht.top);
                var n = t.points.lineWidth, o = t.shadowSize, i = t.points.radius, a = t.points.symbol;
                if (0 == n && (n = 1e-4), n > 0 && o > 0) {
                    var r = o / 2;
                    lt.lineWidth = r, lt.strokeStyle = "rgba(0,0,0,0.1)", e(t.datapoints, i, null, r + r / 2, !0, t.xaxis, t.yaxis, a), 
                    lt.strokeStyle = "rgba(0,0,0,0.2)", e(t.datapoints, i, null, r / 2, !0, t.xaxis, t.yaxis, a);
                }
                lt.lineWidth = n, lt.strokeStyle = t.color, e(t.datapoints, i, $(t.points, t.color), 0, !1, t.xaxis, t.yaxis, a), 
                lt.restore();
            }
            function H(t, e, n, o, i, a, r, s, l, c, d) {
                var u, h, f, p, m, g, v, b, y;
                c ? (b = g = v = !0, m = !1, u = n, h = t, p = e + o, f = e + i, h < u && (y = h, 
                h = u, u = y, m = !0, g = !1)) : (m = g = v = !0, b = !1, u = t + o, h = t + i, 
                f = n, p = e, p < f && (y = p, p = f, f = y, b = !0, v = !1)), h < r.min || u > r.max || p < s.min || f > s.max || (u < r.min && (u = r.min, 
                m = !1), h > r.max && (h = r.max, g = !1), f < s.min && (f = s.min, b = !1), p > s.max && (p = s.max, 
                v = !1), u = r.p2c(u), f = s.p2c(f), h = r.p2c(h), p = s.p2c(p), a && (l.fillStyle = a(f, p), 
                l.fillRect(u, p, h - u, f - p)), d > 0 && (m || g || v || b) && (l.beginPath(), 
                l.moveTo(u, f), m ? l.lineTo(u, p) : l.moveTo(u, p), v ? l.lineTo(h, p) : l.moveTo(h, p), 
                g ? l.lineTo(h, f) : l.moveTo(h, f), b ? l.lineTo(u, f) : l.moveTo(u, f), l.stroke()));
            }
            function R(t) {
                function e(e, n, o, i, a, r) {
                    for (var s = e.points, l = e.pointsize, c = 0; c < s.length; c += l) null != s[c] && H(s[c], s[c + 1], s[c + 2], n, o, i, a, r, lt, t.bars.horizontal, t.bars.lineWidth);
                }
                lt.save(), lt.translate(ht.left, ht.top), lt.lineWidth = t.bars.lineWidth, lt.strokeStyle = t.color;
                var n;
                switch (t.bars.align) {
                  case "left":
                    n = 0;
                    break;

                  case "right":
                    n = -t.bars.barWidth;
                    break;

                  default:
                    n = -t.bars.barWidth / 2;
                }
                var o = t.bars.fill ? function(e, n) {
                    return $(t.bars, t.color, e, n);
                } : null;
                e(t.datapoints, n, n + t.bars.barWidth, o, t.xaxis, t.yaxis), lt.restore();
            }
            function $(e, n, o, i) {
                var a = e.fill;
                if (!a) return null;
                if (e.fillColor) return nt(e.fillColor, o, i, n);
                var r = t.color.parse(n);
                return r.a = "number" == typeof a ? a : .4, r.normalize(), r.toString();
            }
            function Y() {
                if (null != it.legend.container ? t(it.legend.container).html("") : n.find(".legend").remove(), 
                it.legend.show) {
                    for (var e, o, i = [], a = [], r = !1, s = it.legend.labelFormatter, l = 0; l < ot.length; ++l) e = ot[l], 
                    e.label && (o = s ? s(e.label, e) : e.label, o && a.push({
                        label: o,
                        color: e.color
                    }));
                    if (it.legend.sorted) if (t.isFunction(it.legend.sorted)) a.sort(it.legend.sorted); else if ("reverse" == it.legend.sorted) a.reverse(); else {
                        var c = "descending" != it.legend.sorted;
                        a.sort(function(t, e) {
                            return t.label == e.label ? 0 : t.label < e.label != c ? 1 : -1;
                        });
                    }
                    for (var l = 0; l < a.length; ++l) {
                        var d = a[l];
                        l % it.legend.noColumns == 0 && (r && i.push("</tr>"), i.push("<tr>"), r = !0), 
                        i.push('<td class="legendColorBox"><div style="border:1px solid ' + it.legend.labelBoxBorderColor + ';padding:1px"><div style="width:4px;height:0;border:5px solid ' + d.color + ';overflow:hidden"></div></div></td><td class="legendLabel">' + d.label + "</td>");
                    }
                    if (r && i.push("</tr>"), 0 != i.length) {
                        var u = '<table style="font-size:smaller;color:' + it.grid.color + '">' + i.join("") + "</table>";
                        if (null != it.legend.container) t(it.legend.container).html(u); else {
                            var h = "", f = it.legend.position, p = it.legend.margin;
                            null == p[0] && (p = [ p, p ]), "n" == f.charAt(0) ? h += "top:" + (p[1] + ht.top) + "px;" : "s" == f.charAt(0) && (h += "bottom:" + (p[1] + ht.bottom) + "px;"), 
                            "e" == f.charAt(1) ? h += "right:" + (p[0] + ht.right) + "px;" : "w" == f.charAt(1) && (h += "left:" + (p[0] + ht.left) + "px;");
                            var m = t('<div class="legend">' + u.replace('style="', 'style="position:absolute;' + h + ";") + "</div>").appendTo(n);
                            if (0 != it.legend.backgroundOpacity) {
                                var g = it.legend.backgroundColor;
                                null == g && (g = it.grid.backgroundColor, g = g && "string" == typeof g ? t.color.parse(g) : t.color.extract(m, "background-color"), 
                                g.a = 1, g = g.toString());
                                var v = m.children();
                                t('<div style="position:absolute;width:' + v.width() + "px;height:" + v.height() + "px;" + h + "background-color:" + g + ';"> </div>').prependTo(m).css("opacity", it.legend.backgroundOpacity);
                            }
                        }
                    }
                }
            }
            function U(t, e, n) {
                var o, i, a, r = it.grid.mouseActiveRadius, s = r * r + 1, l = null;
                for (o = ot.length - 1; o >= 0; --o) if (n(ot[o])) {
                    var c = ot[o], d = c.xaxis, u = c.yaxis, h = c.datapoints.points, f = d.c2p(t), p = u.c2p(e), m = r / d.scale, g = r / u.scale;
                    if (a = c.datapoints.pointsize, d.options.inverseTransform && (m = Number.MAX_VALUE), 
                    u.options.inverseTransform && (g = Number.MAX_VALUE), c.lines.show || c.points.show) for (i = 0; i < h.length; i += a) {
                        var v = h[i], b = h[i + 1];
                        if (null != v && !(v - f > m || v - f < -m || b - p > g || b - p < -g)) {
                            var y = Math.abs(d.p2c(v) - t), x = Math.abs(u.p2c(b) - e), _ = y * y + x * x;
                            _ < s && (s = _, l = [ o, i / a ]);
                        }
                    }
                    if (c.bars.show && !l) {
                        var k, w;
                        switch (c.bars.align) {
                          case "left":
                            k = 0;
                            break;

                          case "right":
                            k = -c.bars.barWidth;
                            break;

                          default:
                            k = -c.bars.barWidth / 2;
                        }
                        for (w = k + c.bars.barWidth, i = 0; i < h.length; i += a) {
                            var v = h[i], b = h[i + 1], M = h[i + 2];
                            null != v && (ot[o].bars.horizontal ? f <= Math.max(M, v) && f >= Math.min(M, v) && p >= b + k && p <= b + w : f >= v + k && f <= v + w && p >= Math.min(M, b) && p <= Math.max(M, b)) && (l = [ o, i / a ]);
                        }
                    }
                }
                return l ? (o = l[0], i = l[1], a = ot[o].datapoints.pointsize, {
                    datapoint: ot[o].datapoints.points.slice(i * a, (i + 1) * a),
                    dataIndex: i,
                    series: ot[o],
                    seriesIndex: o
                }) : null;
            }
            function q(t) {
                it.grid.hoverable && J("plothover", t, function(t) {
                    return 0 != t.hoverable;
                });
            }
            function B(t) {
                it.grid.hoverable && J("plothover", t, function(t) {
                    return !1;
                });
            }
            function G(t) {
                J("plotclick", t, function(t) {
                    return 0 != t.clickable;
                });
            }
            function J(t, e, o) {
                var i = st.offset(), a = e.pageX - i.left - ht.left, r = e.pageY - i.top - ht.top, s = p({
                    left: a,
                    top: r
                });
                s.pageX = e.pageX, s.pageY = e.pageY;
                var l = U(a, r, o);
                if (l && (l.pageX = parseInt(l.series.xaxis.p2c(l.datapoint[0]) + i.left + ht.left, 10), 
                l.pageY = parseInt(l.series.yaxis.p2c(l.datapoint[1]) + i.top + ht.top, 10)), it.grid.autoHighlight) {
                    for (var c = 0; c < vt.length; ++c) {
                        var d = vt[c];
                        d.auto != t || l && d.series == l.series && d.point[0] == l.datapoint[0] && d.point[1] == l.datapoint[1] || Q(d.series, d.point);
                    }
                    l && K(l.series, l.datapoint, t);
                }
                n.trigger(t, [ s, l ]);
            }
            function V() {
                var t = it.interaction.redrawOverlayInterval;
                return t == -1 ? void X() : void (bt || (bt = setTimeout(X, t)));
            }
            function X() {
                bt = null, ct.save(), rt.clear(), ct.translate(ht.left, ht.top);
                var t, e;
                for (t = 0; t < vt.length; ++t) e = vt[t], e.series.bars.show ? et(e.series, e.point) : tt(e.series, e.point);
                ct.restore(), s(mt.drawOverlay, [ ct ]);
            }
            function K(t, e, n) {
                if ("number" == typeof t && (t = ot[t]), "number" == typeof e) {
                    var o = t.datapoints.pointsize;
                    e = t.datapoints.points.slice(o * e, o * (e + 1));
                }
                var i = Z(t, e);
                i == -1 ? (vt.push({
                    series: t,
                    point: e,
                    auto: n
                }), V()) : n || (vt[i].auto = !1);
            }
            function Q(t, e) {
                if (null == t && null == e) return vt = [], void V();
                if ("number" == typeof t && (t = ot[t]), "number" == typeof e) {
                    var n = t.datapoints.pointsize;
                    e = t.datapoints.points.slice(n * e, n * (e + 1));
                }
                var o = Z(t, e);
                o != -1 && (vt.splice(o, 1), V());
            }
            function Z(t, e) {
                for (var n = 0; n < vt.length; ++n) {
                    var o = vt[n];
                    if (o.series == t && o.point[0] == e[0] && o.point[1] == e[1]) return n;
                }
                return -1;
            }
            function tt(e, n) {
                var o = n[0], i = n[1], a = e.xaxis, r = e.yaxis, s = "string" == typeof e.highlightColor ? e.highlightColor : t.color.parse(e.color).scale("a", .5).toString();
                if (!(o < a.min || o > a.max || i < r.min || i > r.max)) {
                    var l = e.points.radius + e.points.lineWidth / 2;
                    ct.lineWidth = l, ct.strokeStyle = s;
                    var c = 1.5 * l;
                    o = a.p2c(o), i = r.p2c(i), ct.beginPath(), "circle" == e.points.symbol ? ct.arc(o, i, c, 0, 2 * Math.PI, !1) : e.points.symbol(ct, o, i, c, !1), 
                    ct.closePath(), ct.stroke();
                }
            }
            function et(e, n) {
                var o, i = "string" == typeof e.highlightColor ? e.highlightColor : t.color.parse(e.color).scale("a", .5).toString(), a = i;
                switch (e.bars.align) {
                  case "left":
                    o = 0;
                    break;

                  case "right":
                    o = -e.bars.barWidth;
                    break;

                  default:
                    o = -e.bars.barWidth / 2;
                }
                ct.lineWidth = e.bars.lineWidth, ct.strokeStyle = i, H(n[0], n[1], n[2] || 0, o, o + e.bars.barWidth, function() {
                    return a;
                }, e.xaxis, e.yaxis, ct, e.bars.horizontal, e.bars.lineWidth);
            }
            function nt(e, n, o, i) {
                if ("string" == typeof e) return e;
                for (var a = lt.createLinearGradient(0, o, 0, n), r = 0, s = e.colors.length; r < s; ++r) {
                    var l = e.colors[r];
                    if ("string" != typeof l) {
                        var c = t.color.parse(i);
                        null != l.brightness && (c = c.scale("rgb", l.brightness)), null != l.opacity && (c.a *= l.opacity), 
                        l = c.toString();
                    }
                    a.addColorStop(r / (s - 1), l);
                }
                return a;
            }
            var ot = [], it = {
                colors: [ "#edc240", "#afd8f8", "#cb4b4b", "#4da74d", "#9440ed" ],
                legend: {
                    show: !0,
                    noColumns: 1,
                    labelFormatter: null,
                    labelBoxBorderColor: "#ccc",
                    container: null,
                    position: "ne",
                    margin: 5,
                    backgroundColor: null,
                    backgroundOpacity: .85,
                    sorted: null
                },
                xaxis: {
                    show: null,
                    position: "bottom",
                    mode: null,
                    font: null,
                    color: null,
                    tickColor: null,
                    transform: null,
                    inverseTransform: null,
                    min: null,
                    max: null,
                    autoscaleMargin: null,
                    ticks: null,
                    tickFormatter: null,
                    labelWidth: null,
                    labelHeight: null,
                    reserveSpace: null,
                    tickLength: null,
                    alignTicksWithAxis: null,
                    tickDecimals: null,
                    tickSize: null,
                    minTickSize: null
                },
                yaxis: {
                    autoscaleMargin: .02,
                    position: "left"
                },
                xaxes: [],
                yaxes: [],
                series: {
                    points: {
                        show: !1,
                        radius: 3,
                        lineWidth: 2,
                        fill: !0,
                        fillColor: "#ffffff",
                        symbol: "circle"
                    },
                    lines: {
                        lineWidth: 2,
                        fill: !1,
                        fillColor: null,
                        steps: !1
                    },
                    bars: {
                        show: !1,
                        lineWidth: 2,
                        barWidth: 1,
                        fill: !0,
                        fillColor: null,
                        align: "left",
                        horizontal: !1,
                        zero: !0
                    },
                    shadowSize: 3,
                    highlightColor: null
                },
                grid: {
                    show: !0,
                    aboveData: !1,
                    color: "#545454",
                    backgroundColor: null,
                    borderColor: null,
                    tickColor: null,
                    margin: 0,
                    labelMargin: 5,
                    axisMargin: 8,
                    borderWidth: 2,
                    minBorderMargin: null,
                    markings: null,
                    markingsColor: "#f4f4f4",
                    markingsLineWidth: 2,
                    clickable: !1,
                    hoverable: !1,
                    autoHighlight: !0,
                    mouseActiveRadius: 10
                },
                interaction: {
                    redrawOverlayInterval: 1e3 / 60
                },
                hooks: {}
            }, at = null, rt = null, st = null, lt = null, ct = null, dt = [], ut = [], ht = {
                left: 0,
                right: 0,
                top: 0,
                bottom: 0
            }, ft = 0, pt = 0, mt = {
                processOptions: [],
                processRawData: [],
                processDatapoints: [],
                processOffset: [],
                drawBackground: [],
                drawSeries: [],
                draw: [],
                bindEvents: [],
                drawOverlay: [],
                shutdown: []
            }, gt = this;
            gt.setData = d, gt.setupGrid = S, gt.draw = I, gt.getPlaceholder = function() {
                return n;
            }, gt.getCanvas = function() {
                return at.element;
            }, gt.getPlotOffset = function() {
                return ht;
            }, gt.width = function() {
                return ft;
            }, gt.height = function() {
                return pt;
            }, gt.offset = function() {
                var t = st.offset();
                return t.left += ht.left, t.top += ht.top, t;
            }, gt.getData = function() {
                return ot;
            }, gt.getAxes = function() {
                var e = {};
                return t.each(dt.concat(ut), function(t, n) {
                    n && (e[n.direction + (1 != n.n ? n.n : "") + "axis"] = n);
                }), e;
            }, gt.getXAxes = function() {
                return dt;
            }, gt.getYAxes = function() {
                return ut;
            }, gt.c2p = p, gt.p2c = m, gt.getOptions = function() {
                return it;
            }, gt.highlight = K, gt.unhighlight = Q, gt.triggerRedrawOverlay = V, gt.pointOffset = function(t) {
                return {
                    left: parseInt(dt[h(t, "x") - 1].p2c(+t.x) + ht.left, 10),
                    top: parseInt(ut[h(t, "y") - 1].p2c(+t.y) + ht.top, 10)
                };
            }, gt.shutdown = _, gt.destroy = function() {
                _(), n.removeData("plot").empty(), ot = [], it = null, at = null, rt = null, st = null, 
                lt = null, ct = null, dt = [], ut = [], mt = null, vt = [], gt = null;
            }, gt.resize = function() {
                var t = n.width(), e = n.height();
                at.resize(t, e), rt.resize(t, e);
            }, gt.hooks = mt, l(gt), c(a), y(), d(i), S(), I(), x();
            var vt = [], bt = null;
        }
        function o(t, e) {
            return e * Math.floor(t / e);
        }
        var i = Object.prototype.hasOwnProperty;
        t.fn.detach || (t.fn.detach = function() {
            return this.each(function() {
                this.parentNode && this.parentNode.removeChild(this);
            });
        }), e.prototype.resize = function(t, e) {
            if (t <= 0 || e <= 0) throw new Error("Invalid dimensions for plot, width = " + t + ", height = " + e);
            var n = this.element, o = this.context, i = this.pixelRatio;
            this.width != t && (n.width = t * i, n.style.width = t + "px", this.width = t), 
            this.height != e && (n.height = e * i, n.style.height = e + "px", this.height = e), 
            o.restore(), o.save(), o.scale(i, i);
        }, e.prototype.clear = function() {
            this.context.clearRect(0, 0, this.width, this.height);
        }, e.prototype.render = function() {
            var t = this._textCache;
            for (var e in t) if (i.call(t, e)) {
                var n = this.getTextLayer(e), o = t[e];
                n.hide();
                for (var a in o) if (i.call(o, a)) {
                    var r = o[a];
                    for (var s in r) if (i.call(r, s)) {
                        for (var l, c = r[s].positions, d = 0; l = c[d]; d++) l.active ? l.rendered || (n.append(l.element), 
                        l.rendered = !0) : (c.splice(d--, 1), l.rendered && l.element.detach());
                        0 == c.length && delete r[s];
                    }
                }
                n.show();
            }
        }, e.prototype.getTextLayer = function(e) {
            var n = this.text[e];
            return null == n && (null == this.textContainer && (this.textContainer = t("<div class='flot-text'></div>").css({
                position: "absolute",
                top: 0,
                left: 0,
                bottom: 0,
                right: 0,
                "font-size": "smaller",
                color: "#545454"
            }).insertAfter(this.element)), n = this.text[e] = t("<div></div>").addClass(e).css({
                position: "absolute",
                top: 0,
                left: 0,
                bottom: 0,
                right: 0
            }).appendTo(this.textContainer)), n;
        }, e.prototype.getTextInfo = function(e, n, o, i, a) {
            var r, s, l, c;
            if (n = "" + n, r = "object" == typeof o ? o.style + " " + o.variant + " " + o.weight + " " + o.size + "px/" + o.lineHeight + "px " + o.family : o, 
            s = this._textCache[e], null == s && (s = this._textCache[e] = {}), l = s[r], null == l && (l = s[r] = {}), 
            c = l[n], null == c) {
                var d = t("<div></div>").html(n).css({
                    position: "absolute",
                    "max-width": a,
                    top: -9999
                }).appendTo(this.getTextLayer(e));
                "object" == typeof o ? d.css({
                    font: r,
                    color: o.color
                }) : "string" == typeof o && d.addClass(o), c = l[n] = {
                    width: d.outerWidth(!0),
                    height: d.outerHeight(!0),
                    element: d,
                    positions: []
                }, d.detach();
            }
            return c;
        }, e.prototype.addText = function(t, e, n, o, i, a, r, s, l) {
            var c = this.getTextInfo(t, o, i, a, r), d = c.positions;
            "center" == s ? e -= c.width / 2 : "right" == s && (e -= c.width), "middle" == l ? n -= c.height / 2 : "bottom" == l && (n -= c.height);
            for (var u, h = 0; u = d[h]; h++) if (u.x == e && u.y == n) return void (u.active = !0);
            u = {
                active: !0,
                rendered: !1,
                element: d.length ? c.element.clone() : c.element,
                x: e,
                y: n
            }, d.push(u), u.element.css({
                top: Math.round(n),
                left: Math.round(e),
                "text-align": s
            });
        }, e.prototype.removeText = function(t, e, n, o, a, r) {
            if (null == o) {
                var s = this._textCache[t];
                if (null != s) for (var l in s) if (i.call(s, l)) {
                    var c = s[l];
                    for (var d in c) if (i.call(c, d)) for (var u, h = c[d].positions, f = 0; u = h[f]; f++) u.active = !1;
                }
            } else for (var u, h = this.getTextInfo(t, o, a, r).positions, f = 0; u = h[f]; f++) u.x == e && u.y == n && (u.active = !1);
        }, t.plot = function(e, o, i) {
            var a = new n(t(e), o, i, t.plot.plugins);
            return a;
        }, t.plot.version = "0.8.3", t.plot.plugins = [], t.fn.plot = function(e, n) {
            return this.each(function() {
                t.plot(this, e, n);
            });
        };
    }(jQuery);
}, function(t, e) {
    !function(t) {
        function e(e) {
            function n(t) {
                p.active && (c(t), e.getPlaceholder().trigger("plotselecting", [ a() ]));
            }
            function o(e) {
                1 == e.which && (document.body.focus(), void 0 !== document.onselectstart && null == m.onselectstart && (m.onselectstart = document.onselectstart, 
                document.onselectstart = function() {
                    return !1;
                }), void 0 !== document.ondrag && null == m.ondrag && (m.ondrag = document.ondrag, 
                document.ondrag = function() {
                    return !1;
                }), l(p.first, e), p.active = !0, g = function(t) {
                    i(t);
                }, t(document).one("mouseup", g));
            }
            function i(t) {
                return g = null, void 0 !== document.onselectstart && (document.onselectstart = m.onselectstart), 
                void 0 !== document.ondrag && (document.ondrag = m.ondrag), p.active = !1, c(t), 
                f() ? r() : (e.getPlaceholder().trigger("plotunselected", []), e.getPlaceholder().trigger("plotselecting", [ null ])), 
                !1;
            }
            function a() {
                if (!f()) return null;
                if (!p.show) return null;
                var n = {}, o = p.first, i = p.second;
                return t.each(e.getAxes(), function(t, e) {
                    if (e.used) {
                        var a = e.c2p(o[e.direction]), r = e.c2p(i[e.direction]);
                        n[t] = {
                            from: Math.min(a, r),
                            to: Math.max(a, r)
                        };
                    }
                }), n;
            }
            function r() {
                var t = a();
                e.getPlaceholder().trigger("plotselected", [ t ]), t.xaxis && t.yaxis && e.getPlaceholder().trigger("selected", [ {
                    x1: t.xaxis.from,
                    y1: t.yaxis.from,
                    x2: t.xaxis.to,
                    y2: t.yaxis.to
                } ]);
            }
            function s(t, e, n) {
                return e < t ? t : e > n ? n : e;
            }
            function l(t, n) {
                var o = e.getOptions(), i = e.getPlaceholder().offset(), a = e.getPlotOffset();
                t.x = s(0, n.pageX - i.left - a.left, e.width()), t.y = s(0, n.pageY - i.top - a.top, e.height()), 
                "y" == o.selection.mode && (t.x = t == p.first ? 0 : e.width()), "x" == o.selection.mode && (t.y = t == p.first ? 0 : e.height());
            }
            function c(t) {
                null != t.pageX && (l(p.second, t), f() ? (p.show = !0, e.triggerRedrawOverlay()) : d(!0));
            }
            function d(t) {
                p.show && (p.show = !1, e.triggerRedrawOverlay(), t || e.getPlaceholder().trigger("plotunselected", []));
            }
            function u(t, n) {
                var o, i, a, r, s = e.getAxes();
                for (var l in s) if (o = s[l], o.direction == n && (r = n + o.n + "axis", t[r] || 1 != o.n || (r = n + "axis"), 
                t[r])) {
                    i = t[r].from, a = t[r].to;
                    break;
                }
                if (t[r] || (o = "x" == n ? e.getXAxes()[0] : e.getYAxes()[0], i = t[n + "1"], a = t[n + "2"]), 
                null != i && null != a && i > a) {
                    var c = i;
                    i = a, a = c;
                }
                return {
                    from: i,
                    to: a,
                    axis: o
                };
            }
            function h(t, n) {
                var o, i = e.getOptions();
                "y" == i.selection.mode ? (p.first.x = 0, p.second.x = e.width()) : (o = u(t, "x"), 
                p.first.x = o.axis.p2c(o.from), p.second.x = o.axis.p2c(o.to)), "x" == i.selection.mode ? (p.first.y = 0, 
                p.second.y = e.height()) : (o = u(t, "y"), p.first.y = o.axis.p2c(o.from), p.second.y = o.axis.p2c(o.to)), 
                p.show = !0, e.triggerRedrawOverlay(), !n && f() && r();
            }
            function f() {
                var t = e.getOptions().selection.minSize;
                return Math.abs(p.second.x - p.first.x) >= t && Math.abs(p.second.y - p.first.y) >= t;
            }
            var p = {
                first: {
                    x: -1,
                    y: -1
                },
                second: {
                    x: -1,
                    y: -1
                },
                show: !1,
                active: !1
            }, m = {}, g = null;
            e.clearSelection = d, e.setSelection = h, e.getSelection = a, e.hooks.bindEvents.push(function(t, e) {
                var i = t.getOptions();
                null != i.selection.mode && (e.mousemove(n), e.mousedown(o));
            }), e.hooks.drawOverlay.push(function(e, n) {
                if (p.show && f()) {
                    var o = e.getPlotOffset(), i = e.getOptions();
                    n.save(), n.translate(o.left, o.top);
                    var a = t.color.parse(i.selection.color);
                    n.strokeStyle = a.scale("a", .8).toString(), n.lineWidth = 1, n.lineJoin = i.selection.shape, 
                    n.fillStyle = a.scale("a", .4).toString();
                    var r = Math.min(p.first.x, p.second.x) + .5, s = Math.min(p.first.y, p.second.y) + .5, l = Math.abs(p.second.x - p.first.x) - 1, c = Math.abs(p.second.y - p.first.y) - 1;
                    n.fillRect(r, s, l, c), n.strokeRect(r, s, l, c), n.restore();
                }
            }), e.hooks.shutdown.push(function(e, i) {
                i.unbind("mousemove", n), i.unbind("mousedown", o), g && t(document).unbind("mouseup", g);
            });
        }
        t.plot.plugins.push({
            init: e,
            options: {
                selection: {
                    mode: null,
                    color: "#e8cfac",
                    shape: "round",
                    minSize: 5
                }
            },
            name: "selection",
            version: "1.1"
        });
    }(jQuery);
}, function(t, e) {
    !function(t) {
        function e(t, e) {
            return e * Math.floor(t / e);
        }
        function n(t, e, n, o) {
            if ("function" == typeof t.strftime) return t.strftime(e);
            var i = function(t, e) {
                return t = "" + t, e = "" + (null == e ? "0" : e), 1 == t.length ? e + t : t;
            }, a = [], r = !1, s = t.getHours(), l = s < 12;
            null == n && (n = [ "Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec" ]), 
            null == o && (o = [ "Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat" ]);
            var c;
            c = s > 12 ? s - 12 : 0 == s ? 12 : s;
            for (var d = 0; d < e.length; ++d) {
                var u = e.charAt(d);
                if (r) {
                    switch (u) {
                      case "a":
                        u = "" + o[t.getDay()];
                        break;

                      case "b":
                        u = "" + n[t.getMonth()];
                        break;

                      case "d":
                        u = i(t.getDate());
                        break;

                      case "e":
                        u = i(t.getDate(), " ");
                        break;

                      case "h":
                      case "H":
                        u = i(s);
                        break;

                      case "I":
                        u = i(c);
                        break;

                      case "l":
                        u = i(c, " ");
                        break;

                      case "m":
                        u = i(t.getMonth() + 1);
                        break;

                      case "M":
                        u = i(t.getMinutes());
                        break;

                      case "q":
                        u = "" + (Math.floor(t.getMonth() / 3) + 1);
                        break;

                      case "S":
                        u = i(t.getSeconds());
                        break;

                      case "y":
                        u = i(t.getFullYear() % 100);
                        break;

                      case "Y":
                        u = "" + t.getFullYear();
                        break;

                      case "p":
                        u = l ? "am" : "pm";
                        break;

                      case "P":
                        u = l ? "AM" : "PM";
                        break;

                      case "w":
                        u = "" + t.getDay();
                    }
                    a.push(u), r = !1;
                } else "%" == u ? r = !0 : a.push(u);
            }
            return a.join("");
        }
        function o(t) {
            function e(t, e, n, o) {
                t[e] = function() {
                    return n[o].apply(n, arguments);
                };
            }
            var n = {
                date: t
            };
            void 0 != t.strftime && e(n, "strftime", t, "strftime"), e(n, "getTime", t, "getTime"), 
            e(n, "setTime", t, "setTime");
            for (var o = [ "Date", "Day", "FullYear", "Hours", "Milliseconds", "Minutes", "Month", "Seconds" ], i = 0; i < o.length; i++) e(n, "get" + o[i], t, "getUTC" + o[i]), 
            e(n, "set" + o[i], t, "setUTC" + o[i]);
            return n;
        }
        function i(t, e) {
            if ("browser" == e.timezone) return new Date(t);
            if (e.timezone && "utc" != e.timezone) {
                if ("undefined" != typeof timezoneJS && "undefined" != typeof timezoneJS.Date) {
                    var n = new timezoneJS.Date();
                    return n.setTimezone(e.timezone), n.setTime(t), n;
                }
                return o(new Date(t));
            }
            return o(new Date(t));
        }
        function a(o) {
            o.hooks.processOptions.push(function(o, a) {
                t.each(o.getAxes(), function(t, o) {
                    var a = o.options;
                    "time" == a.mode && (o.tickGenerator = function(t) {
                        var n = [], o = i(t.min, a), r = 0, l = a.tickSize && "quarter" === a.tickSize[1] || a.minTickSize && "quarter" === a.minTickSize[1] ? d : c;
                        null != a.minTickSize && (r = "number" == typeof a.tickSize ? a.tickSize : a.minTickSize[0] * s[a.minTickSize[1]]);
                        for (var u = 0; u < l.length - 1 && !(t.delta < (l[u][0] * s[l[u][1]] + l[u + 1][0] * s[l[u + 1][1]]) / 2 && l[u][0] * s[l[u][1]] >= r); ++u) ;
                        var h = l[u][0], f = l[u][1];
                        if ("year" == f) {
                            if (null != a.minTickSize && "year" == a.minTickSize[1]) h = Math.floor(a.minTickSize[0]); else {
                                var p = Math.pow(10, Math.floor(Math.log(t.delta / s.year) / Math.LN10)), m = t.delta / s.year / p;
                                h = m < 1.5 ? 1 : m < 3 ? 2 : m < 7.5 ? 5 : 10, h *= p;
                            }
                            h < 1 && (h = 1);
                        }
                        t.tickSize = a.tickSize || [ h, f ];
                        var g = t.tickSize[0];
                        f = t.tickSize[1];
                        var v = g * s[f];
                        "second" == f ? o.setSeconds(e(o.getSeconds(), g)) : "minute" == f ? o.setMinutes(e(o.getMinutes(), g)) : "hour" == f ? o.setHours(e(o.getHours(), g)) : "month" == f ? o.setMonth(e(o.getMonth(), g)) : "quarter" == f ? o.setMonth(3 * e(o.getMonth() / 3, g)) : "year" == f && o.setFullYear(e(o.getFullYear(), g)), 
                        o.setMilliseconds(0), v >= s.minute && o.setSeconds(0), v >= s.hour && o.setMinutes(0), 
                        v >= s.day && o.setHours(0), v >= 4 * s.day && o.setDate(1), v >= 2 * s.month && o.setMonth(e(o.getMonth(), 3)), 
                        v >= 2 * s.quarter && o.setMonth(e(o.getMonth(), 6)), v >= s.year && o.setMonth(0);
                        var b, y = 0, x = Number.NaN;
                        do if (b = x, x = o.getTime(), n.push(x), "month" == f || "quarter" == f) if (g < 1) {
                            o.setDate(1);
                            var _ = o.getTime();
                            o.setMonth(o.getMonth() + ("quarter" == f ? 3 : 1));
                            var k = o.getTime();
                            o.setTime(x + y * s.hour + (k - _) * g), y = o.getHours(), o.setHours(0);
                        } else o.setMonth(o.getMonth() + g * ("quarter" == f ? 3 : 1)); else "year" == f ? o.setFullYear(o.getFullYear() + g) : o.setTime(x + v); while (x < t.max && x != b);
                        return n;
                    }, o.tickFormatter = function(t, e) {
                        var o = i(t, e.options);
                        if (null != a.timeformat) return n(o, a.timeformat, a.monthNames, a.dayNames);
                        var r, l = e.options.tickSize && "quarter" == e.options.tickSize[1] || e.options.minTickSize && "quarter" == e.options.minTickSize[1], c = e.tickSize[0] * s[e.tickSize[1]], d = e.max - e.min, u = a.twelveHourClock ? " %p" : "", h = a.twelveHourClock ? "%I" : "%H";
                        r = c < s.minute ? h + ":%M:%S" + u : c < s.day ? d < 2 * s.day ? h + ":%M" + u : "%b %d " + h + ":%M" + u : c < s.month ? "%b %d" : l && c < s.quarter || !l && c < s.year ? d < s.year ? "%b" : "%b %Y" : l && c < s.year ? d < s.year ? "Q%q" : "Q%q %Y" : "%Y";
                        var f = n(o, r, a.monthNames, a.dayNames);
                        return f;
                    });
                });
            });
        }
        var r = {
            xaxis: {
                timezone: null,
                timeformat: null,
                twelveHourClock: !1,
                monthNames: null
            }
        }, s = {
            second: 1e3,
            minute: 6e4,
            hour: 36e5,
            day: 864e5,
            month: 2592e6,
            quarter: 7776e6,
            year: 525949.2 * 60 * 1e3
        }, l = [ [ 1, "second" ], [ 2, "second" ], [ 5, "second" ], [ 10, "second" ], [ 30, "second" ], [ 1, "minute" ], [ 2, "minute" ], [ 5, "minute" ], [ 10, "minute" ], [ 30, "minute" ], [ 1, "hour" ], [ 2, "hour" ], [ 4, "hour" ], [ 8, "hour" ], [ 12, "hour" ], [ 1, "day" ], [ 2, "day" ], [ 3, "day" ], [ .25, "month" ], [ .5, "month" ], [ 1, "month" ], [ 2, "month" ] ], c = l.concat([ [ 3, "month" ], [ 6, "month" ], [ 1, "year" ] ]), d = l.concat([ [ 1, "quarter" ], [ 2, "quarter" ], [ 1, "year" ] ]);
        t.plot.plugins.push({
            init: a,
            options: r,
            name: "time",
            version: "1.0"
        }), t.plot.formatDate = n, t.plot.dateGenerator = i;
    }(jQuery);
}, function(t, e, n) {
    "use strict";
    !function() {
        function e(t) {
            return d + "/" + t;
        }
        function o() {
            function t(t) {
                t.key === c && t.storageArea === window.sessionStorage && o(JSON.parse(t.newValue || "null"));
            }
            function n(t, e, n) {
                var o, i = a.extend({}, e || {}, n || {});
                for (o in i) t[o] !== i[o] && (t[o] = i[o]);
                for (o in t) t[o] !== i[o] && delete t[o];
                return t;
            }
            function o(t, e) {
                if (t) {
                    var o = !f.ready;
                    f.ready = !0, g = t, p = null, e && !v && (v = window.setTimeout(function() {
                        v = null, window.sessionStorage.setItem(c, JSON.stringify(g));
                    }, 10));
                    var i, s = {}, l = t.content || {}, d = t.overlay || {};
                    for (i in l) s[i] = !0;
                    for (i in d) s[i] = !0;
                    var u, h, b = [];
                    for (i in s) {
                        var y = m[i] || {}, x = y.connection_string;
                        l[i] && l[i].color && d[i] && delete d[i].color, u = n(y, l[i], d[i]), u.key = i, 
                        u.address || (u.address = i), u.connection_string = f.generate_connection_string(u.user, u.port, u.address), 
                        u.label || ("localhost" == i || "localhost.localdomain" == i ? (h = r.transport.application(), 
                        0 === h.indexOf("cockpit+=") ? u.label = h.replace("cockpit+=", "") : u.label = window.location.hostname) : u.label = i), 
                        u.avatar || (u.avatar = "../shell/images/server-small.png"), b.push([ i in m ? "updated" : "added", [ u, i, x ] ]), 
                        m[i] = u;
                    }
                    for (i in m) i in s || (u = m[i], delete m[i], delete d[i], b.push([ "removed", [ u, i ] ]));
                    var _, k = a(f), w = b.length;
                    for (_ = 0; _ < w; _++) k.triggerHandler(b[_][0], b[_][1]);
                    o && a(f).triggerHandler("ready");
                }
            }
            function i(t, n, o) {
                var i = e(n), s = a.extend({}, t, o);
                return window.sessionStorage.setItem(i, JSON.stringify(s)), f.overlay(n, o), r.when([]);
            }
            function d(t, e) {
                var n = {};
                for (var o in e) null !== e[o] && ("visible" == o ? n[o] = r.variant("b", e[o]) : n[o] = r.variant("s", e[o].toString()));
                var i = r.dbus(null, {
                    bus: "internal",
                    superuser: "try"
                }), a = i.call("/machines", "cockpit.Machines", "Update", [ "99-webui.json", t, n ]).fail(function(t) {
                    console.error("failed to call cockpit.Machines.Update(): ", t);
                });
                return a;
            }
            function u(t) {
                var e, n, o = s.colors.parse(t);
                for (e in m) if (n = m[e], n.color && s.colors.parse(n.color) == o) return !0;
                return !1;
            }
            function h(t, e) {
                for (var n in e) null === e[n] ? delete t[n] : t[n] = e[n];
            }
            var f = this, p = null;
            f.ready = !1;
            var m = {}, g = {
                content: null,
                overlay: {
                    localhost: {
                        visible: !0,
                        manifests: r.manifests
                    }
                }
            };
            window.addEventListener("storage", t), window.setTimeout(function() {
                var t = window.sessionStorage.getItem(c);
                !f.ready && t && o(JSON.parse(t));
            });
            var v = null;
            f.add_key = function(t) {
                var e = r.file(l, {
                    superuser: "try"
                });
                return e.modify(function(e) {
                    return e || (e = ""), e + "\n" + t;
                }).always(function() {
                    e.close();
                });
            }, f.add = function(t, e) {
                var n = f.split_connection_string(t), o = n.address;
                n = a.extend({
                    visible: !0,
                    color: e || f.unused_color()
                }, n);
                var i = f.lookup(o);
                return i && (i.on_disk = !0), f.change(n.address, n);
            }, f.unused_color = function() {
                var t, e = s.colors.length;
                for (t = 0; t < e; t++) if (!u(s.colors[t])) return s.colors[t];
                return "gray";
            }, f.change = function(t, e) {
                var n, o, a, s = f.lookup(t);
                if (e.label) {
                    var l = t;
                    s && (l = s.connection_string), s && s.label === e.label || (o = r.dbus("org.freedesktop.hostname1", {
                        host: l
                    }), a = o.call("/org/freedesktop/hostname1", "org.freedesktop.hostname1", "SetPrettyHostname", [ e.label, !0 ]).always(function() {
                        o.close();
                    }).fail(function(t) {
                        console.warn("couldn't set pretty host name: " + t);
                    }));
                }
                return n = s && !s.on_disk ? i(s, t, e) : d(t, e), a ? r.all(a, n) : n;
            }, f.data = function(t) {
                var e, n = {};
                for (e in t) n[e] = a.extend({}, g.overlay[e] || {}), h(n[e], {
                    on_disk: !0
                });
                for (e in m) t && !t[e] && (n[e] = a.extend({}, g.overlay[e] || {}), h(n[e], {
                    on_disk: null
                }));
                o({
                    content: t,
                    overlay: a.extend({}, g.overlay, n)
                }, !0);
            }, f.overlay = function(t, e) {
                var n = {};
                n[t] = a.extend({}, g.overlay[t] || {}), h(n[t], e), o({
                    content: g.content,
                    overlay: a.extend({}, g.overlay, n)
                }, !0);
            }, Object.defineProperty(f, "list", {
                enumerable: !0,
                get: function() {
                    var t;
                    if (!p) {
                        p = [];
                        for (t in m) m[t].visible && p.push(m[t]);
                        p.sort(function(t, e) {
                            return t.label.localeCompare(e.label);
                        });
                    }
                    return p;
                }
            }), Object.defineProperty(f, "addresses", {
                enumerable: !0,
                get: function() {
                    return Object.keys(m);
                }
            }), f.lookup = function(t) {
                var e = f.split_connection_string(t);
                return m[e.address || "localhost"] || null;
            }, f.generate_connection_string = function(t, e, n) {
                var o = n;
                return t && (o = t + "@" + o), e && (o = o + ":" + e), o;
            }, f.split_connection_string = function(t) {
                var e = {}, n = -1, o = -1;
                if (t && (n = t.lastIndexOf("@"), o = t.lastIndexOf(":")), n > 0 && (e.user = t.substring(0, n), 
                t = t.substring(n + 1), o = t.lastIndexOf(":")), o > -1) {
                    var i = parseInt(t.substring(o + 1), 10);
                    isNaN(i) || (e.port = i, t = t.substring(0, o));
                }
                return e.address = t, e;
            }, f.close = function() {
                window.removeEventListener("storage", t);
            };
        }
        function i(t, e) {
            function n(e, n) {
                var o, i, a, r = e.split("/");
                r[0] == d && 2 === r.length && (o = r[1], n && (i = JSON.parse(n), a = t.lookup(o), 
                a && a.on_disk ? a.visible || t.change(o, {
                    visible: !0
                }) : t.overlay(o, i), u.connect(o)));
            }
            function o() {
                var t;
                for (h = !0, t = 0; t < window.sessionStorage.length; t++) {
                    var e = window.sessionStorage.key(t);
                    n(e, window.sessionStorage.getItem(e));
                }
            }
            function i(t) {
                t.storageArea === window.sessionStorage && n(t.key || "", t.newValue);
            }
            function s(e, n, o) {
                var i = {
                    state: n,
                    problem: o
                };
                "connected" == n ? i.restarting = !1 : o && (i.manifests = null, i.checksum = null), 
                t.overlay(e, i);
            }
            function l(e, n, o, i) {
                if (n || (n = t.lookup(o))) {
                    var s = p[o];
                    s && s.valid || (s = {});
                    var l = {};
                    n.color || (l.color = t.unused_color());
                    var c = s.PrettyHostname || s.StaticHostname;
                    c && c !== n.label && (l.label = c);
                    var d = s.OperatingSystemPrettyName;
                    d && d != n.os && (l.os = s.OperatingSystemPrettyName), a.isEmptyObject(l) || t.overlay(o, l), 
                    n.visible ? i && n.connection_string != i ? (r.kill(i), u.disconnect(o), u.connect(o)) : n.problem || u.connect(o) : u.disconnect(o);
                }
            }
            function c(t, e, n) {
                u.disconnect(n);
            }
            var u = this, h = !1, f = {}, p = {}, m = {};
            if (window.addEventListener("storage", i), a(t).on("added", l), a(t).on("updated", l), 
            a(t).on("removed", c), u.connect = function(e) {
                function n() {
                    !y && x ? s(e, "connected", null) : _ || s(e, "connecting", null);
                }
                function o() {
                    y = a.ajax({
                        url: v,
                        dataType: "json",
                        cache: !0
                    }).done(function(n) {
                        var o = {
                            manifests: n
                        }, i = y.getResponseHeader("ETag");
                        i && (o.checksum = i.replace(/^"(.+)"$/, "$1")), t.overlay(e, o);
                    }).fail(function(t) {
                        console.warn("failed to load manifests from " + d.connection_string + ": " + t);
                    }).always(function() {
                        y = null, n();
                    });
                }
                function i() {
                    var n = r.dbus(null, {
                        bus: "internal",
                        host: d.connection_string
                    });
                    m[e] = n, n.subscribe({
                        path: "/packages",
                        interface: "org.freedesktop.DBus.Properties",
                        member: "PropertiesChanged"
                    }, function(n, o, i, a) {
                        if ("cockpit.Packages" == a[0] && a[1].Manifests) {
                            var r = JSON.parse(a[1].Manifests.v);
                            t.overlay(e, {
                                manifests: r
                            });
                        }
                    }), n.call("/packages", "cockpit.Packages", "ReloadHint", []);
                }
                function c() {
                    if (!d.static_hostname) {
                        var t = r.dbus("org.freedesktop.hostname1", {
                            host: d.connection_string
                        }).proxy();
                        p[e] = t, t.wait(function() {
                            a(t).on("changed", function() {
                                l(null, null, e);
                            }), l(null, null, e);
                        });
                    }
                }
                var d = t.lookup(e);
                if (d) {
                    var h = f[e];
                    if (!h) {
                        var g = {
                            host: d.connection_string,
                            payload: "echo"
                        };
                        !d.on_disk && d.host_key && (g["temp-session"] = !1, g.session = "shared", g["host-key"] = d.host_key), 
                        h = r.channel(g), f[e] = h;
                        var v, b = "localhost" === e, y = null, x = b, _ = null;
                        d.manifests || (v = d.checksum ? "../../" + d.checksum + "/manifests.json" : "../../@" + encodeURI(d.connection_string) + "/manifests.json"), 
                        b ? (v && o(), i(), c()) : (h.send("x"), a(h).on("message", function() {
                            x = !0, v && o(), i(), c(), n();
                        }).on("close", function(n, o) {
                            var i = t.lookup(e);
                            x = !1, o.problem || !i || i.visible ? s(e, "failed", o.problem || "disconnected") : s(e, null, null), 
                            i && i.restarting && window.setTimeout(function() {
                                u.connect(e);
                            }, 1e4), u.disconnect(e);
                        })), n();
                    }
                }
            }, u.disconnect = function(t) {
                if ("localhost" !== t) {
                    var e = f[t];
                    delete f[t], e && (e.close(), a(e).off());
                    var n = p[t];
                    delete p[t], n && (n.client.close(), a(n).off());
                    var o = m[t];
                    delete m[t], o && o.close();
                }
            }, u.expect_restart = function(e) {
                var n = t.split_connection_string(e);
                t.overlay(n.address, {
                    restarting: !0,
                    problem: null
                });
            }, u.close = function() {
                a(t).off("added", l), a(t).off("changed", l), a(t).off("removed", c), t = null, 
                window.removeEventListener("storage", i);
                var e = Object.keys(f);
                e.forEach(u.disconnect);
            }, e) o(), t.data({}); else {
                var g = r.dbus(null, {
                    bus: "internal"
                }).proxy("cockpit.Machines", "/machines");
                a(g).on("changed", function(e) {
                    var n, i = g.Machines, a = {};
                    for (var r in i) {
                        n = {};
                        for (var s in i[r]) n[s] = i[r][s].v;
                        a[r] = n;
                    }
                    t.data(a), h || o();
                });
            }
        }
        var a = n(2), r = n(4), s = {}, l = "/etc/ssh/ssh_known_hosts", c = r.sessionStorage.prefixedKey("v2-machines.json"), d = r.sessionStorage.prefixedKey("v1-session-machine");
        s.instance = function(t) {
            return new o();
        }, s.loader = function(t, e) {
            return new i(t, e);
        }, s.colors = [ "#0099d3", "#67d300", "#d39e00", "#d3007c", "#00d39f", "#00d1d3", "#00618a", "#4c8a00", "#8a6600", "#9b005b", "#008a55", "#008a8a", "#00b9ff", "#7dff00", "#ffbe00", "#ff0096", "#00ffc0", "#00fdff", "#023448", "#264802", "#483602", "#590034", "#024830", "#024848" ], 
        s.colors.parse = function(t) {
            var e = document.createElement("div");
            e.style.color = t;
            var n = window.getComputedStyle(e, null);
            return n.getPropertyValue("color") || e.style.color;
        }, s.known_hosts_path = l, r.transport.wait(function() {
            var t = r.transport.options.capabilities || [];
            a.inArray("ssh", t) > -1 ? (s.allow_connection_string = a.inArray("connection-string", t) != -1, 
            s.has_auth_results = a.inArray("auth-method-results", t) != -1, l = "/var/lib/cockpit/known_hosts", 
            s.known_hosts_path = l, console.debug("Running against legacy ws with ssh, using legacy file", l)) : (s.allow_connection_string = !0, 
            s.has_auth_results = !0);
        }), t.exports = s;
    }();
}, function(t, e, n) {
    "use strict";
    !function() {
        function e(t) {
            var e = p("<div>").append(t);
            return e.find('[translatable="yes"]').each(function(e, n) {
                var o = n.outerHTML, i = m.gettext(n.getAttribute("context"), p(n).text());
                p(n).removeAttr("translatable").text(i), t = t.replace(o, n.outerHTML);
            }), g.parse(t), t;
        }
        function o(t, e) {
            var n = t.lookup(e);
            return n && "localhost" != n.address ? n.connection_string : e;
        }
        function i(t, e, n, i) {
            function a() {
                var t = f.machines_ins.lookup(f.address), e = f.machines_ins.split_connection_string(f.address).address;
                return t && t.label && (e = t.label), e;
            }
            function r(t, e) {
                var n = x;
                y !== t && (x = "add-machine" == t ? new l(f) : "sync-users" == t ? new h(f) : "unknown-hostkey" == t || "unknown-host" == t ? new d(f, t) : "invalid-hostkey" == t ? new d(f, t) : "change-auth" == t ? new u(f) : "change-port" == t ? new c(f) : new s(f), 
                y = t, x.load(e), n && n.close && n.close(), n = null);
            }
            var f = this;
            f.machines_ins = n, f.codes = i, f.address = o(f.machines_ins, e);
            var v = null, b = null, y = null, x = null;
            f.try_to_connect = function(t, e) {
                var n = p.Deferred(), o = p.extend({
                    payload: "echo",
                    host: t
                }, e), i = f.machines_ins.lookup(t);
                i && i.host_key && !i.on_disk && (o["temp-session"] = !1, o.session = "shared", 
                o["host-key"] = i.host_key);
                var a = m.channel(o);
                return a.send("x"), p(a).on("message", function() {
                    p(a).off(), a.close(), n.resolve();
                }).on("close", function(t, e) {
                    n.reject(e);
                }), n.promise();
            }, f.get_sel = function(e) {
                var n = t;
                return e && (n = n + " " + e), p(n);
            }, f.set_on_success = function(t) {
                b = t;
            }, f.set_goal = function(t) {
                v = t;
            }, f.complete = function(e) {
                b ? b(e) : p(t).modal("hide");
            }, f.render = function(t, e) {
                e || (e = y);
                var n = f.machines_ins.split_connection_string(f.address), o = p.extend({
                    host: a(),
                    full_address: f.address,
                    context_title: f.context_title,
                    strong: function() {
                        return function(t, e) {
                            return "<strong>" + e(t) + "</strong>";
                        };
                    }
                }, t, n), i = p(g.render(A[e], o));
                m.translate(i), f.get_sel(".modal-content").html(i);
            }, f.render_error = function(e) {
                var n;
                e.problem && "close" == e.command && (n = f.codes[e.problem]), n && y !== n ? r(n, e) : p(t).dialog("failure", m.message(e));
            }, f.render_template = function(t) {
                r(t);
            }, f.show = function() {
                var t = f.get_sel();
                t.on("hide.bs.modal", function() {
                    f.get_sel(".model-content").empty();
                }), t.modal("show");
            }, f.run = function(t, e) {
                function n(t) {
                    i[t]().done(function(e) {
                        t += 1, t < i.length ? n(t) : (o.resolve(), f.complete(e));
                    }).fail(function(t) {
                        e ? e(t) : f.render_error(t), o.reject(t);
                    });
                }
                var o = p.Deferred(), i = [];
                i.push(function() {
                    return t;
                }), f.get_sel().dialog("wait", o.promise()), v && i.push(v), n(0);
            };
        }
        function a(t, e) {
            var n = t[e];
            return !!n && "no-server-support" != n;
        }
        function r(t) {
            var e = this;
            e.render = function(e, n, o) {
                var i;
                n && !o && (i = t.lookup(n), i && (o = i.color)), o || (o = t.unused_color());
                for (var a, r = [], s = 0; s < v.colors.length; s += 6) a = v.colors.slice(s, s + 6), 
                r.push({
                    list: a
                });
                var l = g.render(A["color-picker"], {
                    colors: r
                });
                p(e).html(l), p("#host-edit-color", e).css("background-color", o), p(".color-cell", e).each(function(t) {
                    p(this).css("background-color", v.colors[t]);
                }), p("#host-edit-color-popover .popover-content .color-cell", e).click(function() {
                    var t = p(this).css("background-color");
                    p("#host-edit-color", e).css("background-color", t);
                }), p("#host-edit-color", e).parent().on("show.bs.dropdown", function() {
                    var t = p("#host-edit-color", e), n = p("#host-edit-color-popover", e), o = t.position(), i = t.width(), a = t.height(), r = n.width(), s = n.height(), l = o.top - s + 10;
                    l < 0 ? (l = o.top + a + 10, n.addClass("bottom"), n.removeClass("top")) : (n.addClass("top"), 
                    n.removeClass("bottom")), n.css("left", o.left + (i - r) / 2), n.css("top", l), 
                    n.show();
                }).on("hide.bs.dropdown", function() {
                    p("#host-edit-color-popover", e).hide();
                });
            };
        }
        function s(t) {
            var e = this;
            e.load = function() {
                t.render();
            };
        }
        function l(t) {
            function e(e) {
                var n = null, o = t.machines_ins.lookup(e);
                return o && o.visible && o.on_disk && (n = new Error(z("This machine has already been added.")), 
                n.target = "#add-machine-address"), n;
            }
            function n(n) {
                var o = !0, i = null, a = p("#add-machine-address").val(), r = t.get_sel(".btn-primary");
                "" === a ? o = !0 : !v.allow_connection_string && (a.indexOf("@") > -1 || a.indexOf(":") > -1) ? i = new Error(z("This version of cockpit-ws does not support connecting to a host with an alternate user or port")) : a.search(/\s+/) === -1 ? (i = e(a), 
                i || (o = !1)) : i = new Error(z("The IP address or host name cannot contain whitespace.")), 
                i && (i.target = "#add-machine-address"), l ? s.dialog("failure", l, i) : s.dialog("failure", i), 
                r.prop("disabled", o);
            }
            function o() {
                l = null, t.address = p("#add-machine-address").val(), a = v.colors.parse(p("#add-machine-color-picker #host-edit-color").css("background-color")), 
                e(t.address) || (t.set_goal(function() {
                    var e = p.Deferred();
                    return t.machines_ins.add(t.address, a).done(e.resolve).fail(function(t) {
                        var n = m.format(z("Failed to add machine: $0"), m.message(t));
                        e.reject(n);
                    }), e.promise();
                }), t.run(t.try_to_connect(t.address), function(e) {
                    if ("no-host" == e.problem) {
                        var n = t.address, o = n.lastIndexOf(":"), i = "22";
                        o === -1 ? n = t.address + ":22" : i = n.substr(o + 1), e.message = m.format(z("Cockpit could not contact the given host $0. Make sure it has ssh running on port $1, or specify another port in the address."), n, i), 
                        e = m.message(e), l = e;
                    }
                    t.render_error(e);
                }));
            }
            var i = this, a = null, s = t.get_sel(), l = null, c = t.machines_ins.addresses.filter(function(e) {
                var n = t.machines_ins.lookup(e);
                return !n || !n.visible;
            });
            i.load = function() {
                var e = m.manifests.shell || {}, i = parseInt(e["machine-limit"], 10), s = new r(t.machines_ins);
                i && !isNaN(i) || (i = 20), t.render({
                    nearlimit: .75 * i <= t.machines_ins.list.length,
                    limit: i,
                    placeholder: z("Enter IP address or host name"),
                    options: c
                });
                var l = t.get_sel(".btn-primary");
                l.on("click", o), p("#add-machine-address").on("keyup", function(t) {
                    if (13 === t.which) {
                        var e = l.prop("disabled");
                        e || o();
                    }
                }), p("#add-machine-address").on("input focus", n), s.render("#add-machine-color-picker", t.address, a), 
                p("#add-machine-address").focus();
            };
        }
        function c(t) {
            function e() {
                function e(e) {
                    t.address = i, t.machines_ins.change(o.address, {
                        port: o.port
                    }).done(function() {
                        e ? t.try_to_connect(i).done(t.complete).fail(function(t) {
                            n.reject(t);
                        }) : n.resolve();
                    }).fail(function(t) {
                        var e = m.format(z("Failed to edit machine: $0"), m.message(t));
                        n.reject(e);
                    });
                }
                var n = p.Deferred(), o = t.machines_ins.split_connection_string(t.address);
                o.port = p("#edit-machine-port").val();
                var i = t.machines_ins.generate_connection_string(o.user, o.port, o.address);
                t.try_to_connect(i).done(function() {
                    e();
                }).fail(function(t) {
                    "no-host" != t.problem ? e(t) : n.reject(t);
                }), t.run(n.promise());
            }
            var n = this;
            n.load = function() {
                var n = t.machines_ins.lookup(t.address);
                return n ? (t.render({
                    port: n.port,
                    allow_connection_string: v.allow_connection_string
                }), void (v.allow_connection_string && t.get_sel(".btn-primary").on("click", e))) : void t.get_sel().modal("hide");
            };
        }
        function d(t, e) {
            function n() {
                var e, n = t.machines_ins.lookup(t.address);
                e = !n || n.on_disk ? t.machines_ins.add_key(r) : t.machines_ins.change(t.address, {
                    host_key: r
                });
                var o = e.then(function() {
                    var e = t.try_to_connect(t.address);
                    return e.fail(function(e) {
                        "invalid-hostkey" != e.problem && "unknown-hostkey" != e.problem || !n || n.on_disk || t.machines_ins.change(t.address, {
                            host_key: null
                        });
                    }), e;
                });
                t.run(o);
            }
            function o() {
                var i, l = null, c = {}, d = e;
                a && (r = a["host-key"], i = a["host-fingerprint"]), t.render({
                    context_title: t.context_title,
                    key: i
                }), r ? s && t.get_sel(".btn-primary").on("click", n) : ("unknown-host" == e && (c.session = "private", 
                d = "unknown-hostkey"), l = t.try_to_connect(t.address, c).fail(function(e) {
                    e.problem != d ? t.render_error(e) : (a = e, o());
                }).done(function(e) {
                    t.complete(e);
                }), t.get_sel().dialog("wait", l));
            }
            var i = this, a = null, r = null, s = "unknown-hostkey" == e || "unknown-host" == e;
            i.load = function(t) {
                a = t, o();
            };
        }
        function u(t) {
            function e() {
                var e = t.get_sel(".keys"), n = !1;
                if (e) {
                    e.empty();
                    for (var o in l.items) {
                        var i = l.items[o];
                        i.loaded && (n = !0, e.append(p("<div>").text(i.name || i.comment)));
                    }
                }
                var a = t.get_sel(".empty");
                a && a.toggleClass("hidden", n);
            }
            function n() {
                var e, n = {}, o = p.Deferred(), i = p("#login-custom-user").val(), a = t.machines_ins.split_connection_string(t.address);
                a.user = i, e = t.machines_ins.generate_connection_string(a.user, a.port, a.address), 
                "stored" != p("#login-type button").val() && (n.password = p("#login-custom-password").val(), 
                n.session = "shared", i || (r.user && r.user.name && (n.user = r.user.name), n["temp-session"] = !1)), 
                t.try_to_connect(e, n).done(function() {
                    t.address = e, d ? t.machines_ins.change(d.address, {
                        user: i
                    }).done(o.resolve).fail(o.reject) : o.resolve();
                }).fail(o.reject), t.run(o.promise());
            }
            function o(t) {
                var e = "password" != t, n = p("#login-type li[value=" + t + "]").text();
                p("#login-type button").val(t), p("#login-type button span").text(n), p("#login-available").toggle(e), 
                p("#login-diff-password").toggle(!e);
            }
            function i() {
                var l = null, u = "change-auth";
                v.allow_connection_string && v.has_auth_results || (u = "auth-failed");
                var h = !1, f = null, m = null, g = t.machines_ins.split_connection_string(t.address).user;
                if (!g && d && (g = d.user), s && v.has_auth_results) {
                    if (m = {}, f = s["auth-method-results"]) {
                        h = "not-provided" === f.password;
                        for (var b in f) a(f, b) && (m[b] = !0);
                    }
                    p.isEmptyObject(m) && (u = "auth-failed");
                }
                t.render({
                    supported: f,
                    available: m,
                    machine_user: g,
                    default_user: r.user ? r.user.name : "",
                    show_password: m && m.password && !h,
                    show_ticket: m && m["gssapi-mic"] && c,
                    can_sync: !!t.codes["sync-users"],
                    "machines.allow_connection_string": v.allow_connection_string,
                    sync_link: function() {
                        return function(t, e) {
                            return '<a id="do-sync-users">' + e(t) + "</a>";
                        };
                    }
                }, u), null === f && v.has_auth_results ? (l = t.try_to_connect(t.address).fail(function(t) {
                    s = t, i();
                }).done(function(e) {
                    t.complete(e);
                }), t.get_sel().dialog("wait", l)) : p.isEmptyObject(m) || (p("#login-type li").on("click", function() {
                    o(p(this).attr("value"));
                }), o(p("#login-type li:first-child").attr("value")), t.get_sel(".btn-primary").on("click", n), 
                t.get_sel("a[data-content]").popover(), e()), t.get_sel("#do-sync-users").on("click", function() {
                    t.render_template("sync-users");
                });
            }
            var r = this, s = null, l = null, c = null, d = t.machines_ins.lookup(t.address);
            r.user = {}, r.load = function(t) {
                s = t, b && (l = b.keys_instance(), p(l).on("changed", e)), m.spawn([ "klist", "-s" ]).fail(function(t) {
                    c = !1;
                }).done(function(t) {
                    c = !0;
                }).always(function() {
                    m.user().done(function(t) {
                        r.user = t;
                    }).always(function(t) {
                        i();
                    });
                });
            }, r.close = function(t) {
                l && (p(l).off(), l.close()), l = null;
            };
        }
        function h(t) {
            function e() {
                var t = m.dbus(null, {
                    bus: "internal",
                    host: "localhost",
                    superuser: !0
                });
                p(t).on("close", function(t, e) {
                    h = e, i();
                });
                var e = t.proxy("cockpit.Setup", "/setup");
                e.wait(function() {
                    if (e.valid) {
                        var n = {
                            t: "(asas)",
                            v: [ [], [] ]
                        };
                        e.Transfer("passwd1", n).done(function(t) {
                            var e, n, o, i = t.v[1];
                            for (e = 0; e < t.v[0].length; e++) {
                                var a = t.v[0][e];
                                n = a.split(":"), o = n[0], s[o] = {
                                    username: o,
                                    name: n[4] || o,
                                    raw: a,
                                    groups: []
                                };
                            }
                            for (e = 0; e < i.length; e++) {
                                n = i[e].split(":"), o = n[0];
                                for (var r = n[n.length - 1].split(","), l = 0; l < r.length; l++) {
                                    var c = r[l];
                                    s[c] && s[c].groups.push(o);
                                }
                            }
                        }).fail(function(t) {
                            t.message = m.gettext(t.message), h = t;
                        }).always(function(e) {
                            p(t).off(), t.close(), i();
                        });
                    }
                });
            }
            function n() {
                var e = null, n = p.Deferred(), o = n.promise();
                t.run(o), t.set_on_success(null), o.always(function() {
                    e && (p(e).off(), e.close());
                });
                var i = {
                    bus: "internal"
                };
                l && (i.user = p("#sync-username").val(), i.password = p("#sync-password").val()), 
                p.extend(i, u, {
                    host: t.address
                }), e = m.dbus(null, i), p(e).on("close", function(t, e) {
                    n.reject(m.message(e));
                });
                var a = {
                    t: "(asas)",
                    v: [ [] ]
                }, r = {};
                t.get_sel("input:checked").each(function() {
                    var t = s[p(this).attr("name")];
                    if (t) {
                        a.v[0].push(t.raw);
                        for (var e = 0; e < t.groups.length; e++) {
                            var n = t.groups[e];
                            r[n] || (r[n] = []), r[n].push(t.username);
                        }
                    }
                }), a.v.push(Object.keys(r).map(function(t) {
                    return t + ":::" + r[t].join();
                }));
                var c = e.proxy("cockpit.Setup", "/setup");
                c.wait(function() {
                    c.valid && c.Commit("passwd1", a).fail(function(t) {
                        t.message = m.gettext(t.message), n.reject(t);
                    }).done(n.resolve);
                });
            }
            function o() {
                var e = t.get_sel("input:checked").length > 0;
                t.get_sel(".btn-primary").toggleClass("disabled", !e);
            }
            function i() {
                function e() {
                    if (this.groups) return this.groups.join(", ");
                }
                var i = !0, r = Object.keys(s).sort().map(function(t) {
                    return s[t];
                });
                v.has_auth_results && d && (i = a(d, "password"));
                var u = t.render({
                    needs_auth: l,
                    needs_root: c,
                    users: r,
                    perm_failed: h ? m.message(h) : null,
                    allows_password: i,
                    formated_groups: e
                });
                t.get_sel(".modal-content").html(u), t.get_sel(".btn-primary").on("click", n), t.get_sel("input:checkbox").on("change", function() {
                    var t = p(this).attr("name");
                    s[t].checked = p(this).is(":checked"), o();
                }), o();
            }
            var r = this, s = {}, l = !1, c = !1, d = null, u = {
                superuser: !0
            }, h = null;
            r.load = function(n) {
                n && (d = n["auth-method-results"]), i(), t.try_to_connect(t.address, u).fail(function(e) {
                    l = !0, "access-denied" == e.problem ? (c = !0, !d && v.has_auth_results && t.try_to_connect(t.address, {
                        user: "1"
                    }).fail(function(t) {
                        d = t["auth-method-results"];
                    }).always(i)) : (d = e["auth-method-results"], i());
                }), e();
            };
        }
        function f(t, e) {
            var n = this;
            e || (e = O);
            var o = new r(t);
            n.troubleshoot = function(n, o) {
                var a = "#" + n;
                if (o && o.problem) {
                    var r = e[o.problem];
                    "no-host" == o.problem && (r = "change-port");
                    var s = new i(a, o.address, t, e);
                    s.render_template(r), s.show();
                }
            }, n.needs_troubleshoot = function(t) {
                return !(!t || !t.problem) && ("no-host" == t.problem || !!e[t.problem]);
            }, n.render_dialog = function(n, o, a) {
                var r = "#" + o, s = new i(r, a, t, e);
                s.render_template(n), s.show();
            }, n.render_color_picker = function(t, e) {
                o.render(t, e);
            };
        }
        var p = n(2), m = n(4), g = n(3), v = n(10), b = n(12);
        n(16);
        var y = n(17), x = n(18), _ = n(19), k = n(20), w = n(21), M = n(22), C = n(23), T = n(24), S = n(25), z = m.gettext, O = {
            "no-cockpit": "not-supported",
            "not-supported": "not-supported",
            "protocol-error": "not-supported",
            "authentication-not-supported": "change-auth",
            "authentication-failed": "change-auth",
            "no-forwarding": "change-auth",
            "unknown-hostkey": "unknown-hostkey",
            "invalid-hostkey": "invalid-hostkey",
            "not-found": "add-machine",
            "unknown-host": "unknown-host",
            "sync-users": "sync-users"
        }, A = {
            "add-machine": e(y),
            "auth-failed": e(x),
            "change-auth": e(_),
            "change-port": e(k),
            "color-picker": e(w),
            "invalid-hostkey": e(M),
            "not-supported": e(C),
            "sync-users": e(T),
            "unknown-hostkey": e(S),
            "unknown-host": e(S)
        };
        t.exports = {
            new_manager: function(t, e) {
                return new f(t, e);
            }
        };
    }();
}, function(t, e, n) {
    (function(e) {
        "use strict";
        !function() {
            function e() {
                function t() {
                    null === d && (d = i.channel({
                        payload: "fslist1",
                        path: c.path
                    }), o(d).on("close", function(t, e) {
                        o(d).off(), e.problem && "not-found" != e.problem ? (console.warn("couldn't watch " + c.path + ": " + (e.message || e.problem)), 
                        d = !1) : d = null;
                    }).on("message", function(e, n) {
                        var o = JSON.parse(n), i = o.path;
                        i && i.indexOf("/") === -1 && ".pub" === i.slice(-4) && ("present" !== o.event && "created" !== o.event && "changed" !== o.event && "deleted" !== o.event || (window.clearInterval(h), 
                        h = window.setTimeout(t, 100)));
                    })), u || (window.clearTimeout(h), h = null, u = i.script(a, [ c.path ], {
                        err: "message"
                    }).always(function() {
                        u = null, h || (h = window.setTimeout(t, 5e3));
                    }).done(function(t) {
                        e(t);
                    }).fail(function(t) {
                        console.warn("failed to list keys in home directory: " + t.message);
                    }));
                }
                function e(t) {
                    var e, i = t.split("\v"), a = {};
                    i[0].trim().split("\n").forEach(function(t) {
                        e = n(t, a), e && (e.loaded = !0);
                    }), i.slice(1).forEach(function(t, o) {
                        switch (o % 3) {
                          case 0:
                            e = n(t, a);
                            break;

                          case 1:
                            e && (t = t.trim(), ".pub" === t.slice(-4) ? e.name = t.slice(0, -4) : t ? e.name = t : e.agent_only = !0);
                            break;

                          case 2:
                            e && l(t, e);
                        }
                    }), c.items = a, o(c).triggerHandler("changed");
                }
                function n(t, e) {
                    var n, o, i, a = t.trim().split(" ");
                    if (isNaN(parseInt(a[0], 10))) if (0 === a[0].indexOf("ssh-")) n = a[1], o = a[0].substring(4).toUpperCase(), 
                    i = a.slice(2).join(" "); else {
                        if (0 !== a[0].indexOf("ecdsa-")) return;
                        n = a[1], o = "ECDSA", i = a.slice(2).join(" ");
                    } else n = a[2], o = "RSA1", i = a.slice(3).join(" ");
                    var r = e[n];
                    return r || (r = e[n] = {}), r.type = o, r.comment = i, r.data = t, r;
                }
                function l(t, e) {
                    var n = t.trim().split(" ");
                    n = n.filter(function(t) {
                        return !!t;
                    }), e.size = parseInt(n[0], 10), isNaN(e.size) && (e.size = null), e.fingerprint = n[1], 
                    n[2] && !e.name && n[2].indexOf("/") !== -1 && (e.name = n[2]);
                }
                var c = this;
                c.path = null, c.items = {};
                var d = null, u = null, h = null;
                i.user().done(function(e) {
                    c.path = e.home + "/.ssh", t();
                }), c.change = function(t, e, n, a) {
                    var r, l = [ /.*Enter old passphrase: $/ ], d = [ /.*Enter new passphrase.*/, /.*Enter same passphrase again: $/ ], u = [ /.*failed: passphrase is too short.*/ ], h = o.Deferred(), f = "", p = !1, m = s("No such file or directory");
                    if (n !== a) return h.reject(new Error(s("The passwords do not match."))), h.promise();
                    var g, v = window.setTimeout(function() {
                        m = s("Prompting via ssh-keygen timed out"), g.close("terminated");
                    }, 1e4);
                    return g = i.spawn([ "ssh-keygen", "-p", "-f", t ], {
                        pty: !0,
                        environ: [ "LC_ALL=C" ],
                        err: "out",
                        directory: c.path
                    }).always(function() {
                        window.clearInterval(v);
                    }).done(function() {
                        h.resolve();
                    }).fail(function(t) {
                        t.exit_status && (t = new Error(m)), h.reject(t);
                    }).stream(function(t) {
                        for (f += t, r = 0; r < l.length; r++) if (l[r].test(f)) return f = "", m = s("Old password not accepted"), 
                        void this.input(e + "\n", !0);
                        for (r = 0; r < d.length; r++) if (d[r].test(f)) return f = "", this.input(n + "\n", !0), 
                        m = s("Failed to change password"), void (p = !0);
                        if (p) for (r = 0; r < u.length; r++) if (u[r].test(f)) return void (m = s("New password was not accepted"));
                    }), h.promise();
                }, c.load = function(e, n) {
                    var a, r = /.*Enter passphrase for .*/, l = /.*UNPROTECTED PRIVATE KEY FILE.*/, d = /.*Bad passphrase.*/, u = o.Deferred(), h = "", f = "", p = s("Not a valid private key"), m = !1, g = window.setTimeout(function() {
                        p = s("Prompting via ssh-add timed out"), a.close("terminated");
                    }, 1e4);
                    return a = i.spawn([ "ssh-add", e ], {
                        pty: !0,
                        environ: [ "LC_ALL=C" ],
                        err: "out",
                        directory: c.path
                    }).always(function() {
                        window.clearInterval(g);
                    }).done(function() {
                        t(), u.resolve();
                    }).fail(function(t) {
                        console.log(f), t.exit_status && (t = new Error(p)), t.sent_password = m, u.reject(t);
                    }).stream(function(t) {
                        h += t, f += t, l.test(h) ? (p = s("Invalid file permissions"), h = "") : r.test(h) ? (h = "", 
                        p = s("Password not accepted"), this.input(n + "\n", !0), m = !0) : d.test(h) && (h = "", 
                        this.input("\n", !0));
                    }), u.promise();
                }, c.unload = function(e) {
                    var n, o = {
                        pty: !0,
                        err: "message",
                        directory: c.path
                    };
                    return n = e.name && !e.agent_only ? i.spawn([ "ssh-add", "-d", e.name ], o) : i.script(r, [ e.data ], o), 
                    n.done(t);
                }, c.close = function() {
                    d && d.close(), u && u.close(), window.clearTimeout(h), h = null;
                };
            }
            var o = n(2), i = n(4), a = n(14), r = n(15), s = i.gettext;
            t.exports = {
                keys_instance: function() {
                    return new e();
                }
            };
        }();
    }).call(e, n(13));
}, function(t, e) {
    function n() {
        throw new Error("setTimeout has not been defined");
    }
    function o() {
        throw new Error("clearTimeout has not been defined");
    }
    function i(t) {
        if (d === setTimeout) return setTimeout(t, 0);
        if ((d === n || !d) && setTimeout) return d = setTimeout, setTimeout(t, 0);
        try {
            return d(t, 0);
        } catch (e) {
            try {
                return d.call(null, t, 0);
            } catch (e) {
                return d.call(this, t, 0);
            }
        }
    }
    function a(t) {
        if (u === clearTimeout) return clearTimeout(t);
        if ((u === o || !u) && clearTimeout) return u = clearTimeout, clearTimeout(t);
        try {
            return u(t);
        } catch (e) {
            try {
                return u.call(null, t);
            } catch (e) {
                return u.call(this, t);
            }
        }
    }
    function r() {
        m && f && (m = !1, f.length ? p = f.concat(p) : g = -1, p.length && s());
    }
    function s() {
        if (!m) {
            var t = i(r);
            m = !0;
            for (var e = p.length; e; ) {
                for (f = p, p = []; ++g < e; ) f && f[g].run();
                g = -1, e = p.length;
            }
            f = null, m = !1, a(t);
        }
    }
    function l(t, e) {
        this.fun = t, this.array = e;
    }
    function c() {}
    var d, u, h = t.exports = {};
    !function() {
        try {
            d = "function" == typeof setTimeout ? setTimeout : n;
        } catch (t) {
            d = n;
        }
        try {
            u = "function" == typeof clearTimeout ? clearTimeout : o;
        } catch (t) {
            u = o;
        }
    }();
    var f, p = [], m = !1, g = -1;
    h.nextTick = function(t) {
        var e = new Array(arguments.length - 1);
        if (arguments.length > 1) for (var n = 1; n < arguments.length; n++) e[n - 1] = arguments[n];
        p.push(new l(t, e)), 1 !== p.length || m || i(s);
    }, l.prototype.run = function() {
        this.fun.apply(null, this.array);
    }, h.title = "browser", h.browser = !0, h.env = {}, h.argv = [], h.version = "", 
    h.versions = {}, h.on = c, h.addListener = c, h.once = c, h.off = c, h.removeListener = c, 
    h.removeAllListeners = c, h.emit = c, h.prependListener = c, h.prependOnceListener = c, 
    h.listeners = function(t) {
        return [];
    }, h.binding = function(t) {
        throw new Error("process.binding is not supported");
    }, h.cwd = function() {
        return "/";
    }, h.chdir = function(t) {
        throw new Error("process.chdir is not supported");
    }, h.umask = function() {
        return 0;
    };
}, function(t, e) {
    t.exports = '#!/bin/sh\nset -u\n\n# The first thing we do is list loaded keys\nloaded=$(ssh-add -L)\nresult="$?"\n\nset -e\n\nprintf "$loaded"\n\n# Get info for each loaded key\n# ssh-keygen -l -f - is not\n# supported everywhere so use tempfile\nif [ $result -eq 0 ]; then\n    tempfile=$(mktemp)\n    echo "$loaded" | while read line; do\n       echo "$line" > "$tempfile"\n       printf "\\v%s\\v\\v" "$line"\n       ssh-keygen -l -f "$tempfile" || true\n    done\n    rm $tempfile\nfi\n\n# Try to list keys in this directory\ncd "$1" || exit 0\n\n# After that each .pub file gets its on set of blocks\nfor file in *.pub; do\n    printf "\\v"\n    cat "$file"\n    printf "\\v%s\\v" "$file"\n    ssh-keygen -l -f "$file" || true\ndone\n';
}, function(t, e) {
    t.exports = '#!/bin/sh\n\nset -eu\n\ntempfile=$(mktemp)\necho "$1" > "$tempfile"\nret=0\nssh-add -d "$tempfile" || ret=1\nrm "$tempfile"\nexit $ret\n';
}, function(t, e, n) {
    "use strict";
    !function() {
        function t() {
            return y += 1, "unique" + -new Date() + -y;
        }
        function e(t) {
            t.find(".dialog-error").remove(), t.find(".has-error").removeClass("has-error"), 
            t.find(".dialog-wrapper").off(".dialog-error"), t.off(".dialog-error");
        }
        function o(t, e) {
            var n, o, i = t.parent();
            i.is(".dialog-wrapper") || (i = v("<div class='dialog-wrapper'>").insertBefore(t), 
            n = t.next(), n.is(".bootstrap-select") && n.selectpicker && (n.remove(), o = n.selectpicker), 
            t.remove().appendTo(i), o && o.call(t));
            var a;
            e.message && (a = v("<div class='dialog-error help-block'>").text(e.message)), i.addClass("has-error").append(a), 
            i.hasClass("error-keep") || i.on("keypress.dialog-error change.dialog-error", function() {
                i.removeClass("has-error").find(".dialog-error.help-block").css("visibility", "hidden");
            });
        }
        function i(t, e) {
            var n = v("<div class='alert alert-danger dialog-error'>"), o = e.message || e.toString();
            n.text(o), v("<span class='fa fa-exclamation-triangle'>").prependTo(n), console.warn(o);
            var i = t.find(".modal-footer");
            i.length ? n.prependTo(i) : n.appendTo(t);
        }
        function a(t, n) {
            e(t), 1 == n.length && v.isArray(n[0]) && (n = n[0]);
            var a = !1;
            n.forEach(function(e) {
                var n;
                e && (n = t.find(e.target), n && n.length ? o(n, e) : i(t, e), a = !0);
            }), a && t.on("show.bs.modal.dialog-error", function() {
                e(t);
            });
        }
        function r(t, e) {
            this.promise = t, this.disabled = [], this.handle = e;
        }
        function s(t) {
            var e = t.data("dialog-wait");
            t.data("dialog-wait", null), t.find(".dialog-wait-ct").remove(), t.find(".btn").off(".dialog-wait"), 
            t.off(".dialog-wait"), e && e.disabled.forEach(function(t) {
                t.removeAttr("disabled");
            });
        }
        function l(t, e, n) {
            function o() {
                var n, o = t.data("dialog-wait");
                o && o.promise === e && (s(t), n = e.state(), h || "resolved" == n && o.handle ? t.modal("hide") : "rejected" == n && o.handle && a(t, [ arguments[0] ]));
            }
            function i(n) {
                var o = t.data("dialog-wait");
                o && o.promise === e && ("string" != typeof n && (n = ""), c.text(n));
            }
            if (s(t), !e) return n && t.modal("hide"), t;
            n && a(t, []);
            var l = v("<div class='dialog-wait-ct pull-left'>");
            v("<div class='spinner spinner-sm'>").appendTo(l);
            var c = v("<span>").appendTo(l);
            t.find(".modal-footer button").first().before(l);
            var d = new r(e, n);
            t.data("dialog-wait", d);
            var u = e.cancel || e.close, h = !1, f = t.find(".form-control").add(".btn", t);
            return u && (f = f.not("[data-dismiss]").not(".btn-cancel")), f.each(function() {
                var t = v(this);
                t.attr("disabled") || (d.disabled.push(t), t.attr("disabled", "disabled"));
            }), t.find(".btn[data-dismiss], .btn-cancel").on("click.dialog-wait", function() {
                return h = !0, u && u.apply(e), !1;
            }), t.on("hide.bs.modal.dialog-wait", function() {
                s(t);
            }), e.always(o).progress(i), t;
        }
        function c(e) {
            var n = b.gettext || function(t) {
                return t;
            };
            return e = e.find(".btn-onoff-ct").addBack().filter(".btn-onoff-ct"), e.each(function(e, o) {
                var i, a, r, s = v(o).attr("data-toggle", "buttons").addClass("btn-group"), l = s.onoff("value"), c = s.find(".btn"), d = s.find("input").first().attr("name") || t();
                for (i = c.length; i < 2; i++) a = v('<input type="radio" autocomplete="off">'), 
                r = document.createTextNode(n(0 === i ? "On" : "Off")), s.append(v('<label class="btn">').append(a, r)), 
                c = null;
                c = c || s.find(".btn"), c.find("input").attr("name", d), u(s, !!l);
            }), e;
        }
        function d(t) {
            return t.find(".btn").first().hasClass("active");
        }
        function u(t, e) {
            return t.each(function(t, n) {
                var o = v(n).find(".btn");
                o.first().toggleClass("active", !!e).find("input").prop("checked", !!e), o.last().toggleClass("active", !e).find("input").prop("checked", !e);
            });
        }
        function h(t, e, n, o) {
            var i = 0;
            o > n ? i = 1 : o < 0 || isNaN(o) ? i = 0 : !isNaN(n) && n > 0 && o >= 0 && (i = o / n), 
            v(e).css("width", 100 * i + "%").next("div").css("margin-left", v(e).css("width")), 
            t.value = i;
        }
        function f(t) {
            h(t, v(t).children("div.slider-bar").first()[0], 1, t.value);
        }
        function p(t) {
            v(t).toggleClass("slider-warning", t.offsetWidth < t.scrollWidth);
        }
        function m(t) {
            v(t).attr("unselectable", "on"), Object.defineProperty(t, "value", {
                get: function() {
                    return parseFloat(this.getAttribute("value"));
                },
                set: function(e) {
                    var n = String(e);
                    n != this.getAttribute("value") && (this.setAttribute("value", e), f(t), p(t));
                }
            }), Object.defineProperty(t, "disabled", {
                get: function() {
                    return !!this.hasAttribute("disabled") && "false" != this.getAttribute("disabled").toLowerCase();
                },
                set: function(t) {
                    this.setAttribute("disabled", t ? "true" : "false");
                }
            }), f(t), p(t), v(t).on("change", function() {
                f(t), v(t).toggleClass("slider-disabled", t.disabled);
            }), t.disabled && v(t).addClass("slider-disabled"), v(t).on("mousedown", function(e) {
                if (t.disabled) return !0;
                var n, o = v(t).offset().left;
                if (v(e.target).hasClass("slider-thumb")) {
                    var i = e.offsetX || e.clientX - v(e.target).offset().left;
                    o += i - v(e.target).outerWidth() / 2, n = v(e.target).parent()[0];
                } else n = v(t).children("div.slider-bar").first()[0], h(t, n, v(t).width(), e.pageX - o), 
                v(t).trigger("change", [ t.value ]), p(t);
                return v(document).on("mousemove.slider", function(e) {
                    return h(t, n, v(t).width(), e.pageX - o), v(t).trigger("change", [ t.value ]), 
                    p(t), !1;
                }).on("mouseup.slider", function(t) {
                    return v(document).off("mousemove.slider").off("mouseup.slider"), !1;
                }), !1;
            });
        }
        function g() {
            v("div.slider").each(function() {
                m(this);
            });
        }
        var v = n(2), b = n(4), y = 0;
        v.fn.dialog = function(t) {
            return "failure" === t ? a(this, Array.prototype.slice.call(arguments, 1)) : "wait" === t ? l(this, arguments[1]) : "promise" === t ? l(this, arguments[1], !0) : void console.warn("unknown dialog action: " + t);
        }, window.addEventListener("hashchange", function() {
            v(".modal").modal("hide");
        }), v.fn.onoff = function(t) {
            return 0 === arguments.length || "refresh" == t ? c(this) : "value" === t ? 1 === arguments.length ? d(this) : u(this, arguments[1]) : "disabled" == t ? this.find(".btn").toggleClass("disabled", arguments[1]) : void console.warn("unknown switch action: " + t);
        }, v.fn.slider = function(t) {
            var e = this;
            return 0 === arguments.length || "refresh" == t ? (e.each(function() {
                m(this);
            }), e) : void console.warn("unknown slider action: " + t);
        }, v(document).ready(g), v.fn.update_privileged = function(t, e, n, o) {
            var i = t.allowed !== !1, a = this;
            return o || (o = v(this)), a.each(function() {
                var t = "allowed-title";
                "undefined" != typeof v(this).data(t) && v(this).data(t) !== !1 || v(this).data(t, v(this).attr("title") || "");
                var a = {
                    html: !0
                };
                n && (a.placement = n), o.tooltip(a), v(this).hasClass("disabled") === i && (v(this).toggleClass("disabled", !i), 
                o.attr("data-original-title", null), i ? o.attr("title", v(this).data(t)) : o.attr("title", e), 
                o.tooltip("fixTitle")), v(this).attr("data-stable", "yes");
            }), a;
        };
    }();
}, function(t, e) {
    t.exports = '<div class="modal-header">\n    <button type="button" class="close" data-dismiss="modal"\n        aria-hidden="true">&times;</button>\n    <h4 class="modal-title" translatable="yes">Add Machine to Dashboard</h4>\n</div>\n\n<div class="modal-body">\n    <div>\n        <table class="form-table-ct">\n            <tr>\n                <td class="top" translatable="yes">Address</td>\n                <td>\n                <div class="dialog-wrapper error-keep">\n                    <input class="form-control" id="add-machine-address"\n                       type="test" value="{{ full_address }}"\n                       list="options"\n                       placeholder="{{ placeholder }}"/>\n                    <datalist id="options">\n                        {{#options}}\n                        <option value="{{.}}">\n                        {{/options}}\n                    </datalist>\n                </div>\n                </td>\n            </tr>\n            <tr>\n                <td translatable="yes">Color</td>\n                <td id="add-machine-color-picker">\n                </td>\n            </tr>\n        </table>\n    </div>\n</div>\n\n<div class="modal-footer">\n    {{#nearlimit}}\n    <div class="alert alert-warning dialog-error dashboard-machine-warning">\n        <span class="pficon pficon-warning-triangle-o"></span>\n        <span translatable="yes">Connecting simultaneously to more than {{ limit }} machines is unsupported.</span>\n    </div>\n    {{/nearlimit}}\n    <button class="btn btn-default" data-dismiss="modal" translatable="yes">Cancel</button>\n    <button class="btn btn-primary" translatable="yes">Add</button>\n</div>\n';
}, function(t, e) {
    t.exports = '<div class="modal-header">\n    <h4 class="modal-title" translatable="yes">Authentication Failed</h4>\n</div>\n<div class="modal-body">\n    {{#supported}}\n    <p translatable="yes">Cockpit was unable to log into {{#strong}}{{host}}{{/strong}}. To use this machine with cockpit you will need to enable one of the following authentication methods in the sshd config on {{#strong}}{{host}}{{/strong}}:</p>\n    <ul>\n        {{#password}}<li translatable="yes">Password</li>{{/password}}\n        {{#public-key}}<li translatable="yes">Public Key</li>{{/public-key}}\n        {{#gssapi-mic}}<li translatable="yes">Kerberos Based SSO</li>{{/gssapi-mic}}\n    </ul>\n    {{/supported}}\n\n    {{^supported}}\n    <p translatable="yes">Cockpit was unable to log in to {{#strong}}{{host}}{{/strong}}. {{#can_sync}}You may want to try to {{#sync_link}}synchronize users{{/sync_link}}.{{/can_sync}} For more authentication options and troubleshooting support please upgrade cockpit-ws to a newer version.</p>\n    {{/supported}}\n\n</div>\n<div class="modal-footer">\n    <button class="btn btn-primary" data-dismiss="modal" translatable="yes">Close</button>\n</div>\n';
}, function(t, e) {
    t.exports = '<div class="modal-header">\n    <button type="button" class="close" data-dismiss="modal"\n        aria-hidden="true">&times;</button>\n    <h4 class="modal-title" translatable="yes">Log in to {{host}}</h4>\n</div>\n\n<div class="modal-body">\n    {{^available}}\n    <p translatable="yes">Cockpit was unable to log into {{#strong}}{{host}}{{/strong}}.</p>\n    {{/available}}\n\n    {{#available}}\n    <p translatable="yes">Cockpit was unable to log into {{#strong}}{{host}}{{/strong}}. You can change your authentication credentials below. {{#can_sync}}You may prefer to {{#sync_link}}synchronize accounts and passwords{{/sync_link}}.{{/can_sync}}</p>\n\n    <div>\n        <table class="form-table-ct">\n            <tr>\n                <td translatable="yes" class="top">User name</td>\n                <td>\n                    <input class="form-control" id="login-custom-user" type="text" value="{{machine_user}}" placeholder="{{ default_user }}"/>\n                </td>\n                <td>\n                    <a tabindex="0" role="button" data-toggle="popover"\n                        data-trigger="focus" data-placement="bottom" translate="data-content"\n                        data-content="Leave blank to connect to this machine as the currently logged in user{{#default_user}} ({{default_user}}){{/default_user}}. If you enter a different username, that user will always be used connecting to this machine.">\n                        <span class="fa fa-lg fa-info-circle"></span>\n                    </a>\n                </td>\n            </tr>\n\n            <tr>\n                <td translatable="yes">Authentication</td>\n                <td>\n                    <div class="btn-group bootstrap-select dropdown form-control" id="login-type">\n                        <button class="btn btn-default dropdown-toggle" type="button"\n                            data-toggle="dropdown">\n                            <span class="pull-left" translatable="yes"></span>\n                            <div class="caret"></div>\n                        </button>\n                        <ul class="dropdown-menu">\n                            {{#password}}\n                            <li value="password"><a translate>Type a password</a></li>\n                            {{/password}}\n                            <li value="stored"><a translate>Using available credentials</a></li>\n                        </ul>\n                    </div>\n                </td>\n            </tr>\n\n            {{#password}}\n            <tr id="login-diff-password">\n                <td translatable="yes" class="top">Password</td>\n                <td>\n                    <input class="form-control" id="login-custom-password" type="password" />\n                </td>\n                <td>\n                    <a tabindex="0" role="button" data-toggle="popover"\n                        data-trigger="focus" data-placement="bottom" translate="data-content"\n                        data-content="Entering a different password here means you will need to retype it every time you reconnect to this machine">\n                        <span class="fa fa-lg fa-info-circle"></span>\n                    </a>\n                </td>\n            </tr>\n            {{/password}}\n            <tr id="login-available">\n                <td translatable="yes" class="top">Available</td>\n                <td class="top">\n                        {{#show_password}}<div translate>Login Password</div>{{/show_password}}\n                        {{#show_ticket}}<div translate>Kerberos Ticket</div>{{/show_ticket}}\n                        {{^show_password}}{{^show_ticket}}<div class="empty hidden">No available credentials</div>{{/show_ticket}}{{/show_password}}\n                        {{#public-key}}<div class="keys"><div class=\'dialog-wait-ct pull-left\'><div class=\'spinner spinner-sm\'></div><span translatable="yes">Checking for public keys</span></div></div>{{/public-key}}\n                </td>\n            </tr>\n        </table>\n    </div>\n    {{/available}}\n</div>\n\n<div class="modal-footer">\n    <button class="btn btn-default" data-dismiss="modal" translatable="yes">Cancel</button>\n    <button class="btn btn-primary" translatable="yes">Log In</button>\n</div>\n';
}, function(t, e) {
    t.exports = '<div class="modal-header">\n    <button type="button" class="close" data-dismiss="modal"\n        aria-hidden="true">&times;</button>\n    <h4 class="modal-title" translatable="yes">Could not contact {{host}}</h4>\n</div>\n\n<div class="modal-body">\n    <p>\n        <span translatable="yes">Cockpit was unable to contact {{#strong}}{{host}}{{/strong}}.</span>\n        {{^allow_connection_string}}\n        <span translatable="yes">To try a different port you will need to upgrade cockpit-ws to a newer version.</span>\n        {{/allow_connection_string}}\n\n        {{#allow_connection_string}}\n        <span translatable="yes">Is sshd running on a different port?</span>\n        {{/allow_connection_string}}\n    </p>\n\n    {{#allow_connection_string}}\n    <div>\n        <table class="form-table-ct">\n            <tr>\n                <td class="top" translatable="yes">Port</td>\n                <td>\n                <div class="dialog-wrapper error-keep">\n                    <input id="edit-machine-port" class="form-control"\n                       type="test" value="{{ port }}"\n                       list="options"\n                       placeholder="22"/>\n                </div>\n                </td>\n            </tr>\n        </table>\n    </div>\n    {{/allow_connection_string}}\n</div>\n\n<div class="modal-footer">\n    {{#allow_connection_string}}\n    <button class="btn btn-default" data-dismiss="modal" translatable="yes">Cancel</button>\n    <button class="btn btn-primary" translatable="yes">Update</button>\n    {{/allow_connection_string}}\n\n    {{^allow_connection_string}}\n    <button class="btn btn-default" data-dismiss="modal" translatable="yes">Close</button>\n    {{/allow_connection_string}}\n</div>\n';
}, function(t, e) {
    t.exports = '<div>\n    <div id="host-edit-color" data-toggle="dropdown"></div>\n    <div id="host-edit-color-popover" class="popover in" tabindex="-1">\n        <div class="arrow"></div>\n        <div class="popover-content">\n            {{#colors}}\n            <div>\n                {{#list}}\n                <div class="color-cell"></div>\n                {{/list}}\n            </div>\n            {{/colors}}\n        </div>\n        <div class="arrow"></div>\n    </div>\n</div>\n';
}, function(t, e) {
    t.exports = '<div class="modal-header">\n    <h4 class="modal-title" translatable="yes">Incorrect Host Key</h4>\n</div>\n<div class="modal-body">\n    <div class="banned">\n        <i class="fa fa-ban"></i>\n    </div>\n    <p translatable="yes">The key of {{#strong}}{{host}}{{/strong}} does not match the key previously in use. Unless this machine was recently replaced, it is likely that someone is trying to attack your connection to this machine.</p>\n</div>\n\n<div class="modal-footer">\n    <button class="btn btn-default" data-dismiss="modal" translatable="yes">Close</button>\n</div>\n';
}, function(t, e) {
    t.exports = '<div class="modal-header">\n    <h4 class="modal-title" translatable="yes">Cockpit is not installed</h4>\n</div>\n<div class="modal-body">\n    <p translatable="yes">A compatible version of Cockpit is not installed on {{#strong}}{{host}}{{/strong}}.</p>\n</div>\n<div class="modal-footer">\n    <button class="btn btn-default" data-dismiss="modal" translatable="yes">Close</button>\n</div>\n';
}, function(t, e) {
    t.exports = '<div class="modal-header">\n    <button type="button" class="close" data-dismiss="modal"\n        aria-hidden="true">&times;</button>\n    <h4 class="modal-title" translatable="yes">Synchronize users</h4>\n</div>\n\n<div class="modal-body">\n    <p translatable="yes">Select the users that you would like to be synchronized with {{#strong}}{{host}}{{/strong}}</p>\n\n{{#perm_failed}}\n    <div class="alert alert-danger dialog-error">\n        <span class="fa fa-exclamation-triangle"></span>\n        <span translatable="yes">Error loading users: {{perm_failed}}</span>\n    </div>\n{{/perm_failed}}\n\n{{^perm_failed}}\n    <div id="sync-users">\n        <table class="table">\n        <tbody>\n        {{^users}}\n            <tr>\n                  <td>\n                    <div class="center-spinner">\n                        <div class="spinner spinner-lg"></div>\n                    </div>\n                  </td>\n            </tr>\n        {{/users}}\n\n        {{#users}}\n              <tr>\n                  <td><input type="checkbox" name="{{username}}" {{#checked}}checked=checked{{/checked}} /></td>\n                  <td>{{username}}</td>\n                  <td>{{name}}</td>\n                  <td>&#8226;&#8226;&#8226;&#8226;&#8226;</td>\n                  <td>{{formated_groups}}</td>\n              </tr>\n        {{/users}}\n        </tbody>\n        </table>\n    </div>\n\n    {{#needs_auth}}\n    <div>\n        {{#needs_root}}\n        <p translatable="yes">You are connected to {{#strong}}{{host}}{{/strong}}, however in order to synchronize users, a user with superuser privileges is required.</p>\n        {{/needs_root}}\n        {{^needs_root}}\n        <p translatable="yes">In order to synchronize users, you need to log in to {{#strong}}{{host}}{{/strong}}.</p>\n        {{/needs_root}}\n        <table class="form-table-ct">\n            <tr>\n                <td translatable="yes">User name</td>\n                <td>\n                    <input class="form-control" id="sync-username" type="text" />\n                </td>\n            </tr>\n            {{#allows_password}}\n            <tr>\n                <td translatable="yes">Password</td>\n                <td>\n                    <input class="form-control" id="sync-password" type="password" />\n                </td>\n            </tr>\n            {{/allows_password}}\n        </table>\n    </div>\n    {{/needs_auth}}\n{{/perm_failed}}\n</div>\n\n<div class="modal-footer">\n    <button class="btn btn-default" data-dismiss="modal" translatable="yes">Cancel</button>\n    <button class="btn btn-primary disabled" translatable="yes">Synchronize</button>\n</div>\n';
}, function(t, e) {
    t.exports = '<div class="modal-header">\n    <h4 class="modal-title" translatable="yes">Unknown Host Key</h4>\n</div>\n<div id="add-unknown-host" class="modal-body">\n    {{#key}}\n        <p translatable="yes">The authenticity of host {{#strong}}{{host}}{{/strong}} can\'t be established. Are you sure you want to continue connecting?</p>\n        <div>\n        <table class="form-table-ct">\n            <tr>\n                <td translatable="yes">Fingerprint</td>\n                <td><pre class="machine-key">{{key}} </pre></td>\n            </tr>\n        </table>\n        </div>\n    {{/key}}\n</div>\n\n<div class="modal-footer">\n    <button class="btn btn-default" data-dismiss="modal" translatable="yes">Close</button>\n\n    {{#key}}\n        <button class="btn btn-primary" translatable="yes">Connect</button>\n    {{/key}}\n</div>\n';
}, function(t, e, n) {
    "use strict";
    function o(t) {
        return t && t.__esModule ? t : {
            default: t
        };
    }
    function i(t) {
        var e, n = h[t];
        return n || (e = d.default.defer(), h[t] = n = e.promise(), d.default.spawn([ "cat", "/proc/meminfo", "/proc/cpuinfo" ], {
            host: t
        }).done(function(t) {
            var n = {}, o = t.match(/MemTotal:[^0-9]*([0-9]+) [kK]B/), i = o && parseInt(o[1], 10);
            i && (n.memory = 1024 * i);
            var a = t.match(/SwapTotal:[^0-9]*([0-9]+) [kK]B/), r = a && parseInt(a[1], 10);
            r && (n.swap = 1024 * r), o = t.match(/^model name\s*:\s*(.*)$/m), o && (n.cpu_model = o[1]), 
            n.cpus = 0;
            for (var s = /^processor/gm; s.test(t); ) n.cpus += 1;
            e.resolve(n);
        }).fail(function() {
            e.reject();
        })), n;
    }
    function a(t) {
        var e = {};
        return t.split("\n").map(function(t) {
            var n = t.indexOf(":");
            if (!(n <= 0)) {
                var o = t.slice(0, n), i = t.slice(n + 1);
                e[o] = i, "chassis_type" === o && (e[o + "_str"] = f[parseInt(i)] || f[2]);
            }
        }), e;
    }
    function r(t) {
        var e, n = p[t];
        return n || (e = d.default.defer(), p[t] = n = e.promise(), d.default.spawn([ "grep", "-r", "." ], {
            directory: "/sys/class/dmi/id",
            err: "ignore",
            superuser: "try"
        }).done(function(t) {
            return e.resolve(a(t));
        }).fail(function(t, n) {
            !t.problem && n ? e.resolve(a(n)) : e.reject(t.message);
        })), n;
    }
    function s(t) {
        var e = {};
        return t.split("\n\n").map(function(t) {
            var n = null, o = {};
            t = t.trim(), t && (t.split("\n").map(function(t) {
                var e = t.match(m);
                e ? n = e[1] : (e = t.match(g), e && (o[e[1]] = e[2]));
            }), n ? e[n] = o : console.log("udev database paragraph is missing P:", t));
        }), e;
    }
    function l(t) {
        var e, n = v[t];
        return n || (e = d.default.defer(), v[t] = n = e.promise(), d.default.spawn([ "udevadm", "info", "--export-db" ], {
            err: "message"
        }).done(function(t) {
            return e.resolve(s(t));
        }).fail(function(t) {
            return e.reject(t.message);
        })), n;
    }
    Object.defineProperty(e, "__esModule", {
        value: !0
    }), e.cpu_ram_info = i, e.dmi_info = r, e.udev_info = l;
    var c = n(4), d = o(c), u = d.default.gettext, h = {}, f = [ void 0, u("Other"), u("Unknown"), u("Desktop"), u("Low Profile Desktop"), u("Pizza Box"), u("Mini Tower"), u("Tower"), u("Portable"), u("Laptop"), u("Notebook"), u("Hand Held"), u("Docking Station"), u("All In One"), u("Sub Notebook"), u("Space-saving Computer"), u("Lunch Box"), u("Main Server Chassis"), u("Expansion Chassis"), u("Sub Chassis"), u("Bus Expansion Chassis"), u("Peripheral Chassis"), u("RAID Chassis"), u("Rack Mount Chassis"), u("Sealed-case PC"), u("Multi-system Chassis"), u("Compact PCI"), u("Advanced TCA"), u("Blade"), u("Blade enclosure"), u("Tablet"), u("Convertible"), u("Detachable"), u("IoT Gateway"), u("Embedded PC"), u("Mini PC"), u("Stick PC") ], p = {}, m = /^P: (.*)$/, g = /^E: (\w+)=(.*)$/, v = {};
}, function(t, e, n) {
    "use strict";
    function o(t) {
        return t && t.__esModule ? t : {
            default: t
        };
    }
    function i(t, e, n) {
        function o() {
            t.empty().css("width", e).css("height", n).css("position", "relative").append(p = (0, 
            r.default)("<canvas>"), m = (0, r.default)("<canvas>").css("position", "absolute").css("top", 0).css("left", 0).css("z-index", 10)), 
            (0, r.default)("body").append(g = (0, r.default)('<input data-role="none" type="file">').hide()), 
            v = p[0], y = v.getContext("2d"), b = m[0], x = b.getContext("2d"), v.width = b.width = e, 
            v.height = b.height = n, g.on("change", h);
        }
        function i() {
            O = !0, s((e - S) / 2, (n - S) / 2, S, !0), m.on("mousedown", c);
        }
        function a() {
            O = !1, x.clearRect(0, 0, e, n), m.off("mousedown", c);
        }
        function s(t, o, i, a) {
            function r(t, e, n) {
                return e < t ? t : e > n ? n : e;
            }
            t = Math.floor(t), o = Math.floor(o), i = Math.floor(i);
            var s = 2 * z;
            if (a) i = r(s, i, T), t = r(0, t, e - i), o = r(0, o, n - i); else if (t < 0 || o < 0 || t + i > e || o + i > n || i < s) return;
            _ = t, k = o, w = i, l(t, o, t + i, o + i);
        }
        function l(t, o, i, a) {
            function r(t, e, n, o) {
                s.strokeStyle = "black", s.strokeRect(t + .5, e + .5, n - t - 1, o - e - 1), s.strokeStyle = "white", 
                s.strokeRect(t + 1.5, e + 1.5, n - t - 3, o - e - 3);
            }
            var s = x;
            s.clearRect(0, 0, e, n), s.fillStyle = "rgba(0,0,0,0.8)", s.fillRect(0, 0, e, n), 
            s.clearRect(t, o, i - t, a - o);
            var l = z;
            r(t, o, t + l, o + l), r(i - l, o, i, o + l), r(t, a - l, t + l, a), r(i - l, a - l, i, a), 
            r(t, o, i, a);
        }
        function c(t) {
            function e(t) {
                var e = t.pageX - c.left - d, n = t.pageY - c.top - u;
                if (0 === o) s(e, n, p, !0); else {
                    var r = Math.floor((e - h + o * (n - f)) / 2);
                    s(h + i * r, f + a * r, p + l * r, !1);
                }
                C.changed = !0;
            }
            function n(t) {
                (0, r.default)("body").off("mousemove", e), (0, r.default)("body").off("mouseup", n);
            }
            var o, i, a, l, c = m.offset(), d = t.pageX - c.left - _, u = t.pageY - c.top - k, h = _, f = k, p = w, g = z;
            d > 0 && u > 0 && d < w && u < w && (d < g && u < g ? (o = 1, i = 1, a = 1, l = -1) : d > w - g && u < g ? (o = -1, 
            i = 0, a = -1, l = 1) : d < g && u > w - g ? (o = -1, i = 1, a = 0, l = -1) : d > w - g && u > w - g ? (o = 1, 
            i = 0, a = 0, l = 1) : o = 0, (0, r.default)("body").on("mousemove", e), (0, r.default)("body").on("mouseup", n));
        }
        function d(t) {
            var o = r.default.Deferred(), i = new window.Image();
            return i.onerror = function() {
                o.reject();
            }, i.onload = function() {
                var t, a;
                i.width > i.height ? (t = e, a = t * (i.height / i.width)) : (a = n, t = a * (i.width / i.height)), 
                y.fillStyle = "rgb(255,255,255)", y.fillRect(0, 0, e, n), y.drawImage(i, (e - t) / 2, (n - a) / 2, t, a), 
                S = Math.min(a, t), o.resolve();
            }, i.src = t, o.promise();
        }
        function u(t, e, n) {
            var o = (0, r.default)("<canvas/>")[0];
            o.width = t, o.height = e;
            var i = o.getContext("2d");
            return O ? i.drawImage(v, _, k, w, w, 0, 0, t, e) : i.drawImage(v, 0, 0, T, T, 0, 0, t, e), 
            o.toDataURL(n);
        }
        function h() {
            var t, e, n;
            return t = g[0].files, 1 != t.length ? void M.reject() : (e = t[0], e.type.match("image.*") ? (n = new window.FileReader(), 
            n.onerror = function() {
                M.reject();
            }, n.onload = function() {
                d(n.result).done(function() {
                    M.resolve();
                }).fail(function() {
                    M.reject();
                });
            }, void n.readAsDataURL(e)) : void M.reject());
        }
        function f() {
            return M = r.default.Deferred(), window.File && window.FileReader ? g.trigger("click") : M.reject(), 
            M.promise();
        }
        var p, m, g, v, b, y, x, _, k, w, M, C = {
            load_data: d,
            get_data: u,
            start_cropping: i,
            stop_cropping: a,
            select_file: f,
            changed: !1
        }, T = Math.min(e, n), S = T, z = 20, O = !1;
        return o(), C;
    }
    var a = n(2), r = o(a);
    t.exports = i;
} ]);
//# sourceMappingURL=dashboard.min.js.map