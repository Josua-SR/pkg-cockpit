!function(e) {
    function t(n) {
        if (s[n]) return s[n].exports;
        var a = s[n] = {
            exports: {},
            id: n,
            loaded: !1
        };
        return e[n].call(a.exports, a, a.exports, t), a.loaded = !0, a.exports;
    }
    var s = {};
    return t.m = e, t.c = s, t.p = "", t(0);
}([ function(e, t, s) {
    "use strict";
    !function() {
        var e = s(4), t = s(11), n = s(172), a = n;
        n.test("bytes_from_format", function() {
            var t, s = [ [ "999", 999 ], [ "1.9 kb", 1945.6 ], [ "2.0 KB", 2048 ], [ "1.0 MB", 1048576 ], [ "1 GB", 1073741824 ], [ "1 Unknown", 1 ] ];
            for (a.expect(s.length), t = 0; t < s.length; t++) a.strictEqual(e.bytes_from_format(s[t][0]), s[t][1], "bytes_from_format(" + s[t][0] + ") = " + s[t][1]);
        }), n.test("json_skip", function() {
            var t = [ [ "number", "0123456789", [ 10, 0 ] ], [ "number-fancy", "-0123456789.33E-5", [ 17, 0 ] ], [ "string", '"string"', [ 8, 0 ] ], [ "string-escaped", '"st\\"ring"', [ 10, 0 ] ], [ "string-truncated", '"string', [ 0 ] ], [ "boolean", "true", [ 4, 0 ] ], [ "null", "null", [ 4, 0 ] ], [ "string-number", '"string"0123456789', [ 8, 18, 0 ] ], [ "number-string", '0123456789"string"', [ 10, 18, 0 ] ], [ "number-number", "0123456789 123", [ 10, 14, 0 ] ], [ "string-string-string", '"string""two""three"', [ 8, 13, 20, 0 ] ], [ "string-string-truncated", '"string""tw', [ 8, 0 ] ], [ "array", '["string","two","three"]', [ 24, 0 ] ], [ "array-escaped", '["string","two","thr]e"]', [ 24, 0 ] ], [ "array-spaces", ' [ "string", "two" ,"thr]e" ]\t', [ 29, 0 ] ], [ "array-truncated", '["string","two","thr', [ 0 ] ], [ "object", '{"string":"two","number":222}', [ 29, 0 ] ], [ "object-escaped", '{"string":"two","num]}}ber":222}', [ 32, 0 ] ], [ "object-spaces", '{ "string": "two", "number": 222 }', [ 34, 0 ] ], [ "object-object", '{"string":"two","number":222}{"string":"two","number":222}', [ 29, 58, 0 ] ], [ "object-line-object", '{"string":"two","number":222}\n{"string":"two","number":222}', [ 29, 59, 0 ] ], [ "object-truncated", '{"stri}ng"', [ 0 ] ], [ "whitespace", "  \r\n\t \v", [ 0 ] ] ];
            a.expect(t.length);
            for (var s = 0; s < t.length; s++) {
                for (var n, i = [], r = void 0, o = 0; o < 16 && (n = e.json_skip(t[s][1], r), i.push(n), 
                0 !== n); o++) r = n;
                a.deepEqual(i, t[s][2], "json_skip(): " + t[s][0]);
            }
        }), n.test("quote_cmdline", function() {
            var t = [ [ [ "foo" ], "foo" ], [ [ "foo", "bar" ], "foo bar" ], [ [ "f o o" ], '"f o o"' ], [ [ "f\\o" ], "f\\\\o" ], [ [ 'f"o' ], "'f\"o'" ], [ [ "f\"'o" ], "'f\"\\'o'" ], [ [ 'f "o' ], '"f \\"o"' ] ];
            a.expect(t.length);
            for (var s = 0; s < t.length; s++) a.strictEqual(e.quote_cmdline(t[s][0]), t[s][1], "quote(" + String(t[s][0]) + ") = " + t[s][1]);
        }), n.test("unquote_cmdline", function() {
            var t = [ [ [ "foo" ], "  foo  " ], [ [ "foo", "bar" ], "foo    bar  " ], [ [ "f o o" ], '"f o o"' ], [ [ "f o o" ], "'f o o'" ], [ [ "f\\o" ], "f\\\\o" ], [ [ 'f"o' ], "'f\"o'" ], [ [ "f\"'o" ], "'f\"\\'o'" ], [ [ 'f "o' ], '"f \\"o"' ], [ [ "f o o" ], "f' 'o\" \"o" ], [ [ "f'", 'o" "o' ], "f\\' 'o\" \"o" ] ];
            a.expect(t.length);
            for (var s = 0; s < t.length; s++) a.deepEqual(e.unquote_cmdline(t[s][1]), t[s][0], "unquote(" + String(t[s][1]) + ") = " + t[s][0]);
        }), n.test("render_container_status", function() {
            var e = [ [ {
                Status: "blah",
                Running: !0
            }, "blah" ], [ {
                Running: !0,
                Paused: !1
            }, "running" ], [ {
                Running: !1,
                Paused: !0
            }, "paused" ], [ {
                Restarting: !0
            }, "restarting" ], [ {
                FinishedAt: "0001-01-01"
            }, "created" ], [ {
                FinishedAt: "2016-11-11"
            }, "exited" ], [ {}, "exited" ] ];
            a.expect(e.length), e.forEach(function(e) {
                a.equal(t.render_container_status(e[0]), e[1], "render_container_status = " + e[1]);
            });
        }), n.start();
    }();
}, , function(e, t) {
    e.exports = jQuery;
}, function(e, t) {
    e.exports = cockpit;
}, function(e, t, s) {
    "use strict";
    !function() {
        function t() {
            "all" != window.debugging && "docker" != window.debugging || console.debug.apply(console, arguments);
        }
        function n(e, t) {
            var s = this, n = new d({
                cols: 80,
                rows: 24,
                screenKeys: !0,
                inlineStyle: !1,
                useFocus: !1
            }), a = !0, i = o.utf8_decoder(), u = o.utf8_encoder();
            return e.empty(), n.open(e[0]), s.typeable = function(e) {
                n.cursorHidden = !e, n.refresh(n.y, n.y), a = e;
            }, s.focus = function() {
                n.focus();
            }, s.close = function() {
                n.destroy();
            }, "string" == typeof t ? (n.write("[31m" + t + "[m\r\n"), s.close = function() {}, 
            s.typeable(!1), s) : (r(t).on("close", function(e, a) {
                var i = a.problem || "disconnected";
                n.write("[31m" + i + "[m\r\n"), s.typeable(!1), r(t).off("message"), t = null;
            }), s.process = function(e) {
                return n.write(i.decode(e)), e.length;
            }, n.on("data", function(e) {
                a && t && t.send(u.encode(e));
            }), s);
        }
        function a(e, t) {
            function s(e) {
                d.push(e), i || (i = window.setTimeout(function() {
                    i = null;
                    var e = a[0].scrollHeight - a.scrollTop() <= a.outerHeight(), t = r("<span>").text(d.join(""));
                    d.length = 0, a.append(t), e && a.scrollTop(a.prop("scrollHeight"));
                }, 50));
            }
            var n = this, a = r("<pre>");
            e.empty(), e.append(a);
            var i, d = [];
            if ("string" == typeof t) return s(t), n.close = function() {}, n;
            t.control({
                batch: 16384,
                latency: 50
            });
            var u = o.utf8_decoder(!1);
            return n.process = function(e) {
                for (var t, n, a = 0, i = e.length; ;) {
                    if (i < a + 8) return a;
                    if (t = (255 & e[a + 4]) << 24 | (255 & e[a + 5]) << 16 | (255 & e[a + 6]) << 8 | 255 & e[a + 7], 
                    i < a + 8 + t) return a;
                    n = e.subarray ? e.subarray(a + 8, a + 8 + t) : e.slice(a + 8, a + 8 + t), s(u.decode(n, {
                        stream: !0
                    })), a += 8 + t;
                }
                return a;
            }, n.focus = function() {}, n.close = function() {}, r(t).on("close", function(e, n) {
                s(n.reason || "disconnected"), r(t).off(), t = null;
            }), n;
        }
        function i(e, t) {
            var s, n, a = t.length, i = e.length - a + 1;
            for (n = 0; n < i; n++) {
                for (s = 0; s < a && e[n + s] === t[s]; s++) ;
                if (s == a) return n;
            }
            return -1;
        }
        var r = s(2), o = s(3), d = s(5), u = {}, l = o.http("/var/run/docker.sock", {
            superuser: !0
        });
        u.pull = function(e, s, n) {
            var a = r.Deferred();
            s || (s = "latest"), n && (e = n + "/" + e), t("pulling: " + e + ":" + s);
            var i, o = {
                method: "POST",
                path: "/v1.12/images/create",
                body: "",
                params: {
                    fromImage: e,
                    tag: s
                }
            }, d = "", _ = l.request(o).stream(function(e) {
                d += e;
                var t = u.json_skip(d, 0);
                if (0 !== t) {
                    var s = JSON.parse(d.substring(0, t));
                    d = d.substring(t), s.error ? i = s.error : s.status && a.notify(s.status, s);
                }
            }).fail(function(e) {
                a.reject(e);
            }).done(function() {
                i ? a.reject(new Error(i)) : a.resolve();
            }), c = a.promise();
            return c.cancel = function() {
                return _.close("cancelled"), c;
            }, c;
        }, u.inspect_image = function(e) {
            var t = r.Deferred();
            l.get("/v1.12/images/" + encodeURIComponent(e) + "/json").done(function(e) {
                t.resolve(JSON.parse(e));
            }).fail(function(e) {
                t.reject(e);
            });
            var s = t.promise();
            return s.cancel = function() {
                return s;
            }, s;
        }, u.console = function(e, s, d) {
            function u(e) {
                g = p ? new n(m, e) : new a(m, e);
            }
            function _() {
                if (m.connected = !1, !f) return c(p === !1 ? "GET /v1.15/containers/" + encodeURIComponent(e) + "/logs?follow=1&stdout=1&stderr=1&tail=1000&timestamps=0 HTTP/1.0\r\nContent-Length: 0\r\n\r\n" : "POST /v1.15/containers/" + encodeURIComponent(e) + "/attach?logs=1&stream=1&stdin=1&stdout=1&stderr=1 HTTP/1.0\r\nContent-Length: 0\r\n\r\n");
                var t = l.request(r.extend({}, d, f)).always(function() {
                    t = null;
                }).done(function(e) {
                    var t = JSON.parse(e), s = JSON.stringify({
                        Detach: !1,
                        Tty: p
                    });
                    return c("POST /v1.15/exec/" + encodeURIComponent(t.Id) + "/start HTTP/1.0\r\nContent-Length: " + s.length + "\r\n\r\n" + s);
                }).fail(function(e) {
                    u(e.message);
                });
            }
            function c(s) {
                g && g.close(), g = null;
                var l = r.extend({}, d, {
                    payload: "stream",
                    unix: "/var/run/docker.sock",
                    superuser: !0,
                    binary: !0
                });
                L = o.channel(l), t(s), L.send(s), r(L).on("close.attach", function(n, a) {
                    t(e + ": console close: ", a), r(L).off(".attach"), L = null, m.connected && !a.problem && window.setTimeout(function() {
                        m.connected && !L && c(s);
                    }, 1e3);
                });
                var _ = null, h = L.buffer();
                h.callback = function(s) {
                    var r, d = 0, l = 0;
                    if (null === _) {
                        if (l = i(s, [ 13, 10, 13, 10 ]), l == -1) return d;
                        if (_ = s.subarray ? o.utf8_decoder().decode(s.subarray(0, l)) : o.utf8_decoder().decode(s.slice(0, l)), 
                        t(e + ": console headers: ", _), r = _.split("\r\n", 1)[0].split(" "), "200" != r[1]) return u(r.slice(2).join(" ")), 
                        void (h.callback = null);
                        s.subarray ? (s = s.subarray(l + 4), d += l + 4) : (s = s.slice(l + 4), d += l + 4);
                    }
                    if (void 0 === p || null === p) {
                        if (s.length < 2) return d;
                        p = !((0 === s[0] || 1 === s[0] || 2 === s[0]) && 0 === s[1]), t(e + ": mode tty: " + p);
                    }
                    g = p ? new n(m, L) : new a(m, L), m.typeable(M), m.connected = !0, h.callback = g.process;
                    var c = g.process(s);
                    return d + c;
                };
            }
            function h() {
                g && g.typeable && g.typeable(M && y);
            }
            var m = r("<div>").addClass("console-ct");
            m.connected = !1;
            var f, p, M = !1, y = !1, L = null, g = null;
            Array.isArray(s) ? (d || (d = {}), p = d.tty, void 0 !== p && null !== p || (p = !0), 
            f = {
                method: "POST",
                path: "/v1.15/containers/" + encodeURIComponent(e) + "/exec",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    AttachStdin: p,
                    AttachStdout: !0,
                    AttachStderr: !0,
                    Tty: p,
                    Cmd: s
                })
            }, t("preparing to exec:", s)) : (t("preparing to attach"), d = s || {}, p = d.tty), 
            delete d.tty;
            var Y = null;
            return m.close = function(e) {
                m.connected = !1, Y && Y.close(e), L && L.close(e), g && (g.close(), g = null);
            }, m.connect = function() {
                m.close("disconnected"), _();
            }, r(m).on("focusin", function() {
                y = !0, h(), g.focus();
            }).on("focusout", function() {
                y = !1, h();
            }), m.typeable = function(e) {
                M = e, h();
            }, m;
        }, u.json_skip = function(e, t) {
            var s, n = !1, a = e.length, i = 0, r = !1, o = !1, d = ' \t\n\r\v[{}]"', u = " \t\n\r\v";
            for (void 0 === t && (t = 0), a = e.length; t != a && !(n && i <= 0); t++) if (s = e[t], 
            r) d.indexOf(s) != -1 && (r = !1, i--, t--); else if (u.indexOf(s) == -1) if (o) switch (s) {
              case "\\":
                if (t + 1 == a) continue;
                t++;
                break;

              case '"':
                o = !1, i--;
            } else switch (n = !0, s) {
              case "[":
              case "{":
                i++;
                break;

              case "]":
              case "}":
                i--;
                break;

              case '"':
                o = !0, i++;
                break;

              default:
                r = !0, i++;
            }
            return r && 1 == i && (i = 0), !n || i > 0 ? 0 : t;
        }, u.quote_cmdline = function(e) {
            function t(e) {
                return " " == e;
            }
            function s(e) {
                var s, n = "", a = "";
                for (s = 0; s < e.length; s++) "\\" == e[s] || e[s] == a ? n += "\\" : "" === a && ("'" == e[s] || t(e[s]) ? a = '"' : '"' == e[s] && (a = "'")), 
                n += e[s];
                return a + n + a;
            }
            return e = e || [], e.map(s).join(" ");
        }, u.unquote_cmdline = function(e) {
            function t(e) {
                return " " == e;
            }
            function s() {
                for (;a < e.length && t(e[a]); ) a++;
            }
            function n() {
                for (var s = "", n = null; a < e.length; ) {
                    if ("\\" == e[a]) a++, a < e.length && (s += e[a]); else if (e[a] == n) n = null; else if (n) s += e[a]; else if ('"' == e[a] || "'" == e[a]) n = e[a]; else {
                        if (t(e[a])) break;
                        s += e[a];
                    }
                    a++;
                }
                return s;
            }
            var a, i = [];
            for (a = 0, s(); a < e.length; ) i.push(n()), s();
            return i;
        };
        var _ = [ null, "KB", "MB", "GB", "TB", "PB", "EB", "ZB" ];
        u.bytes_from_format = function(e, t) {
            var s = 1024;
            void 0 === t && (t = " ");
            var n = e.split(t).pop().toUpperCase(), a = _.indexOf(n), i = parseFloat(e);
            return a > 0 && !isNaN(i) ? i * Math.pow(s, a) : i;
        }, u.truncate_id = function(e) {
            var t = e.indexOf(":");
            return t >= 0 && (e = e.slice(t + 1)), e.substr(0, 12);
        }, e.exports = u;
    }();
}, function(e, t, s) {
    var n, a;
    (function(s) {
        (function() {
            "use strict";
            function s() {
                this._events = this._events || {};
            }
            function i() {
                s.call(this);
            }
            function r(e) {
                var t = this;
                if (!(this instanceof r)) return new r(arguments[0], arguments[1], arguments[2]);
                i.call(this), "number" == typeof e && (e = {
                    cols: arguments[0],
                    rows: arguments[1],
                    handler: arguments[2]
                }), e = e || {}, f(p(r.defaults), function(s) {
                    null == e[s] && (e[s] = r.options[s], r[s] !== r.defaults[s] && (e[s] = r[s])), 
                    t[s] = e[s];
                }), 8 === e.colors.length ? e.colors = e.colors.concat(r._colors.slice(8)) : 16 === e.colors.length ? e.colors = e.colors.concat(r._colors.slice(16)) : 10 === e.colors.length ? e.colors = e.colors.slice(0, -2).concat(r._colors.slice(8, -2), e.colors.slice(-2)) : 18 === e.colors.length && (e.colors = e.colors.slice(0, -2).concat(r._colors.slice(16, -2), e.colors.slice(-2))), 
                this.colors = e.colors, this.options = e, this.parent = e.body || e.parent || (M ? M.getElementsByTagName("body")[0] : null), 
                this.cols = e.cols || e.geometry[0], this.rows = e.rows || e.geometry[1], this.setRawMode, 
                this.isTTY = !0, this.isRaw = !0, this.columns = this.cols, this.rows = this.rows, 
                e.handler && this.on("data", e.handler), this.ybase = 0, this.ydisp = 0, this.x = 0, 
                this.y = 0, this.cursorHidden = !1, this.convertEol, this.state = 0, this.queue = "", 
                this.scrollTop = 0, this.scrollBottom = this.rows - 1, this.applicationKeypad = !1, 
                this.applicationCursor = !1, this.originMode = !1, this.insertMode = !1, this.wraparoundMode = !1, 
                this.normal = null, this.prefixMode = !1, this.selectMode = !1, this.visualMode = !1, 
                this.searchMode = !1, this.searchDown, this.entry = "", this.entryPrefix = "Search: ", 
                this._real, this._selected, this._textarea, this.charset = null, this.gcharset = null, 
                this.glevel = 0, this.charsets = [ null ], this.decLocator, this.x10Mouse, this.vt200Mouse, 
                this.vt300Mouse, this.normalMouse, this.mouseEvents, this.sendFocus, this.utfMouse, 
                this.sgrMouse, this.urxvtMouse, this.element, this.children, this.refreshStart, 
                this.refreshEnd, this.savedX, this.savedY, this.savedCols, this.readable = !0, this.writable = !0, 
                this.defAttr = 131840, this.curAttr = this.defAttr, this.params = [], this.currentParam = 0, 
                this.prefix = "", this.postfix = "", this.lines = [];
                for (var s = this.rows; s--; ) this.lines.push(this.blankLine());
                this.tabs, this.setupStops();
            }
            function o(e, t, s, n) {
                e.addEventListener(t, s, n || !1);
            }
            function d(e, t, s, n) {
                e.removeEventListener(t, s, n || !1);
            }
            function u(e) {
                return e.preventDefault && e.preventDefault(), e.returnValue = !1, e.stopPropagation && e.stopPropagation(), 
                e.cancelBubble = !0, !1;
            }
            function l(e, t) {
                function s() {
                    this.constructor = e;
                }
                s.prototype = t.prototype, e.prototype = new s();
            }
            function _(e) {
                var t = e.getElementsByTagName("body")[0], s = e.createElement("div");
                s.className = "terminal";
                var n = e.createElement("div"), a = e.createElement("span");
                a.innerHTML = "hello world", n.appendChild(a), s.appendChild(n), t.appendChild(s);
                var i = a.scrollWidth;
                a.style.fontWeight = "bold";
                var r = a.scrollWidth;
                return t.removeChild(s), i !== r;
            }
            function c(e, t) {
                for (var s = e.length; s--; ) if (e[s] === t) return s;
                return -1;
            }
            function h(e) {
                return !(e <= "＀") && (e >= "！" && e <= "ﾾ" || e >= "ￂ" && e <= "ￇ" || e >= "ￊ" && e <= "ￏ" || e >= "ￒ" && e <= "ￗ" || e >= "ￚ" && e <= "ￜ" || e >= "￠" && e <= "￦" || e >= "￨" && e <= "￮");
            }
            function m(e, t, s) {
                var n = e << 16 | t << 8 | s;
                if (null != m._cache[n]) return m._cache[n];
                for (var a, i, o, d, u, l = 1 / 0, _ = -1, c = 0; c < r.vcolors.length; c++) {
                    if (a = r.vcolors[c], i = a[0], o = a[1], d = a[2], u = m.distance(e, t, s, i, o, d), 
                    0 === u) {
                        _ = c;
                        break;
                    }
                    u < l && (l = u, _ = c);
                }
                return m._cache[n] = _;
            }
            function f(e, t, s) {
                if (e.forEach) return e.forEach(t, s);
                for (var n = 0; n < e.length; n++) t.call(s, e[n], n, e);
            }
            function p(e) {
                if (Object.keys) return Object.keys(e);
                var t, s = [];
                for (t in e) Object.prototype.hasOwnProperty.call(e, t) && s.push(t);
                return s;
            }
            var M = this.document;
            s.prototype.addListener = function(e, t) {
                this._events[e] = this._events[e] || [], this._events[e].push(t);
            }, s.prototype.on = s.prototype.addListener, s.prototype.removeListener = function(e, t) {
                if (this._events[e]) for (var s = this._events[e], n = s.length; n--; ) if (s[n] === t || s[n].listener === t) return void s.splice(n, 1);
            }, s.prototype.off = s.prototype.removeListener, s.prototype.removeAllListeners = function(e) {
                this._events[e] && delete this._events[e];
            }, s.prototype.once = function(e, t) {
                function s() {
                    var n = Array.prototype.slice.call(arguments);
                    return this.removeListener(e, s), t.apply(this, n);
                }
                return s.listener = t, this.on(e, s);
            }, s.prototype.emit = function(e) {
                if (this._events[e]) for (var t = Array.prototype.slice.call(arguments, 1), s = this._events[e], n = s.length, a = 0; a < n; a++) s[a].apply(this, t);
            }, s.prototype.listeners = function(e) {
                return this._events[e] = this._events[e] || [];
            }, l(i, s), i.prototype.pipe = function(e, t) {
                function s() {
                    r.removeListener("data", n), r.removeListener("error", a), r.removeListener("end", i), 
                    e.removeListener("error", a), e.removeListener("close", s);
                }
                var n, a, i, r = this;
                return r.on("data", n = function(t) {
                    e.write(t);
                }), r.on("error", a = function(e) {
                    if (s(), !this.listeners("error").length) throw e;
                }), r.on("end", i = function() {
                    e.end(), s();
                }), e.on("error", a), e.on("close", s), e.emit("pipe", r), e;
            };
            var y = 0, L = 1, g = 2, Y = 3, k = 4, v = 5, b = 6, w = {
                type: "udk"
            };
            l(r, i), r.tangoColors = [ "#2e3436", "#cc0000", "#4e9a06", "#c4a000", "#3465a4", "#75507b", "#06989a", "#d3d7cf", "#555753", "#ef2929", "#8ae234", "#fce94f", "#729fcf", "#ad7fa8", "#34e2e2", "#eeeeec" ], 
            r.xtermColors = [ "#000000", "#cd0000", "#00cd00", "#cdcd00", "#0000ee", "#cd00cd", "#00cdcd", "#e5e5e5", "#7f7f7f", "#ff0000", "#00ff00", "#ffff00", "#5c5cff", "#ff00ff", "#00ffff", "#ffffff" ], 
            r.colors = function() {
                function e(e, s, a) {
                    n.push("#" + t(e) + t(s) + t(a));
                }
                function t(e) {
                    return e = e.toString(16), e.length < 2 ? "0" + e : e;
                }
                var s, n = r.tangoColors.slice(), a = [ 0, 95, 135, 175, 215, 255 ];
                for (s = 0; s < 216; s++) e(a[s / 36 % 6 | 0], a[s / 6 % 6 | 0], a[s % 6]);
                for (s = 0; s < 24; s++) a = 8 + 10 * s, e(a, a, a);
                return n;
            }(), r.colors[256] = "#000000", r.colors[257] = "#f0f0f0", r._colors = r.colors.slice(), 
            r.vcolors = function() {
                for (var e, t = [], s = r.colors, n = 0; n < 256; n++) e = parseInt(s[n].substring(1), 16), 
                t.push([ e >> 16 & 255, e >> 8 & 255, 255 & e ]);
                return t;
            }(), r.defaults = {
                colors: r.colors,
                convertEol: !1,
                termName: "xterm",
                geometry: [ 80, 24 ],
                visualBell: !1,
                popOnBell: !1,
                scrollback: 1e3,
                screenKeys: !1,
                debug: !1
            }, r.options = {}, f(p(r.defaults), function(e) {
                r[e] = r.defaults[e], r.options[e] = r.defaults[e];
            }), r.focus = null, r.prototype.focus = function() {
                r.focus !== this && (r.focus && r.focus.blur(), this.sendFocus && this.send("[I"), 
                r.focus = this);
            }, r.prototype.blur = function() {
                r.focus === this && (this.sendFocus && this.send("[O"), r.focus = null);
            }, r.prototype.initGlobal = function() {
                var e = this.document;
                r._boundDocs = r._boundDocs || [], ~c(r._boundDocs, e) || (r._boundDocs.push(e), 
                r.bindPaste(e), r.bindKeys(e), r.bindCopy(e), this.isMobile && this.fixMobile(e));
            }, r.bindPaste = function(e) {
                var t = e.defaultView;
                o(t, "paste", function(e) {
                    var t = r.focus;
                    if (t) return e.clipboardData ? t.send(e.clipboardData.getData("text/plain")) : t.context.clipboardData && t.send(t.context.clipboardData.getData("Text")), 
                    t.element.contentEditable = "inherit", u(e);
                });
            }, r.bindKeys = function(e) {
                o(e, "keydown", function(e) {
                    if (r.focus) {
                        var t = e.target || e.srcElement;
                        if (t) return t === r.focus.element || t === r.focus.context || t === r.focus.document || t === r.focus.body || t === r._textarea || t === r.focus.parent ? r.focus.keyDown(e) : void 0;
                    }
                }, !0), o(e, "keypress", function(e) {
                    if (r.focus) {
                        var t = e.target || e.srcElement;
                        if (t) return t === r.focus.element || t === r.focus.context || t === r.focus.document || t === r.focus.body || t === r._textarea || t === r.focus.parent ? r.focus.keyPress(e) : void 0;
                    }
                }, !0), o(e, "mousedown", function(e) {
                    if (r.focus) {
                        var t = e.target || e.srcElement;
                        if (t) {
                            do if (t === r.focus.element) return; while (t = t.parentNode);
                            r.focus.blur();
                        }
                    }
                });
            }, r.bindCopy = function(e) {
                var t = e.defaultView;
                o(t, "copy", function(e) {
                    var t = r.focus;
                    if (t && t._selected) {
                        var s = t.getCopyTextarea(), n = t.grabText(t._selected.x1, t._selected.x2, t._selected.y1, t._selected.y2);
                        t.emit("copy", n), s.focus(), s.textContent = n, s.value = n, s.setSelectionRange(0, n.length), 
                        T(function() {
                            t.element.focus(), t.focus();
                        }, 1);
                    }
                });
            }, r.prototype.fixMobile = function(e) {
                var t = this, s = e.createElement("textarea");
                s.style.position = "absolute", s.style.left = "-32000px", s.style.top = "-32000px", 
                s.style.width = "0px", s.style.height = "0px", s.style.opacity = "0", s.style.backgroundColor = "transparent", 
                s.style.borderStyle = "none", s.style.outlineStyle = "none", s.autocapitalize = "none", 
                s.autocorrect = "off", e.getElementsByTagName("body")[0].appendChild(s), r._textarea = s, 
                T(function() {
                    s.focus();
                }, 1e3), this.isAndroid && o(s, "change", function() {
                    var e = s.textContent || s.value;
                    s.value = "", s.textContent = "", t.send(e + "\r");
                });
            }, r.prototype.open = function(e) {
                var t, s = this, n = 0;
                if (this.parent = e || this.parent, !this.parent) throw new Error("Terminal requires a parent element.");
                for (this.context = this.parent.ownerDocument.defaultView, this.document = this.parent.ownerDocument, 
                this.body = this.document.getElementsByTagName("body")[0], this.context.navigator && this.context.navigator.userAgent && (this.isMac = !!~this.context.navigator.userAgent.indexOf("Mac"), 
                this.isIpad = !!~this.context.navigator.userAgent.indexOf("iPad"), this.isIphone = !!~this.context.navigator.userAgent.indexOf("iPhone"), 
                this.isAndroid = !!~this.context.navigator.userAgent.indexOf("Android"), this.isMobile = this.isIpad || this.isIphone || this.isAndroid, 
                this.isMSIE = !!~this.context.navigator.userAgent.indexOf("MSIE")), this.element = this.document.createElement("div"), 
                this.element.className = "terminal", this.element.style.outline = "none", this.element.setAttribute("tabindex", 0), 
                this.element.setAttribute("spellcheck", "false"), this.element.style.backgroundColor = this.colors[256], 
                this.element.style.color = this.colors[257], this.children = []; n < this.rows; n++) t = this.document.createElement("div"), 
                this.element.appendChild(t), this.children.push(t);
                this.parent.appendChild(this.element), this.refresh(0, this.rows - 1), "useEvents" in this.options && !this.options.useEvents || this.initGlobal(), 
                "useFocus" in this.options && !this.options.useFocus || (this.focus(), o(this.element, "focus", function() {
                    s.focus(), s.isMobile && r._textarea.focus();
                }), o(this.element, "mousedown", function() {
                    s.focus();
                }), o(this.element, "mousedown", function(e) {
                    var t = null != e.button ? +e.button : null != e.which ? e.which - 1 : null;
                    s.isMSIE && (t = 1 === t ? 0 : 4 === t ? 1 : t), 2 === t && (s.element.contentEditable = "true", 
                    T(function() {
                        s.element.contentEditable = "inherit";
                    }, 1));
                }, !0)), "useMouse" in this.options && !this.options.useMouse || this.bindMouse(), 
                "useFocus" in this.options && !this.options.useFocus || T(function() {
                    s.element.focus();
                }, 100), null == r.brokenBold && (r.brokenBold = _(this.document)), this.emit("open");
            }, r.prototype.setRawMode = function(e) {
                this.isRaw = !!e;
            }, r.prototype.bindMouse = function() {
                function e(e) {
                    var t, s;
                    if (t = a(e), s = i(e)) switch (n(t, s), e.type) {
                      case "mousedown":
                        _ = t;
                        break;

                      case "mouseup":
                        _ = 32;
                        break;

                      case c:                    }
                }
                function t(e) {
                    var t, s = _;
                    t = i(e), t && (s += 32, n(s, t));
                }
                function s(e, t) {
                    if (l.utfMouse) {
                        if (2047 === t) return e.push(0);
                        t < 127 ? e.push(t) : (t > 2047 && (t = 2047), e.push(192 | t >> 6), e.push(128 | 63 & t));
                    } else {
                        if (255 === t) return e.push(0);
                        t > 127 && (t = 127), e.push(t);
                    }
                }
                function n(e, t) {
                    if (l.vt300Mouse) {
                        e &= 3, t.x -= 32, t.y -= 32;
                        var n = "[24";
                        if (0 === e) n += "1"; else if (1 === e) n += "3"; else if (2 === e) n += "5"; else {
                            if (3 === e) return;
                            n += "0";
                        }
                        return n += "~[" + t.x + "," + t.y + "]\r", void l.send(n);
                    }
                    if (l.decLocator) return e &= 3, t.x -= 32, t.y -= 32, 0 === e ? e = 2 : 1 === e ? e = 4 : 2 === e ? e = 6 : 3 === e && (e = 3), 
                    void l.send("[" + e + ";" + (3 === e ? 4 : 0) + ";" + t.y + ";" + t.x + ";" + (t.page || 0) + "&w");
                    if (l.urxvtMouse) return t.x -= 32, t.y -= 32, t.x++, t.y++, void l.send("[" + e + ";" + t.x + ";" + t.y + "M");
                    if (l.sgrMouse) return t.x -= 32, t.y -= 32, void l.send("[<" + (3 === (3 & e) ? e & -4 : e) + ";" + t.x + ";" + t.y + (3 === (3 & e) ? "m" : "M"));
                    var n = [];
                    s(n, e), s(n, t.x), s(n, t.y), l.send("[M" + D.fromCharCode.apply(D, n));
                }
                function a(e) {
                    var t, s, n, a, i;
                    switch (e.type) {
                      case "mousedown":
                        t = null != e.button ? +e.button : null != e.which ? e.which - 1 : null, l.isMSIE && (t = 1 === t ? 0 : 4 === t ? 1 : t);
                        break;

                      case "mouseup":
                        t = 3;
                        break;

                      case "DOMMouseScroll":
                        t = e.detail < 0 ? 64 : 65;
                        break;

                      case "mousewheel":
                        t = e.wheelDeltaY > 0 ? 64 : 65;
                    }
                    return s = e.shiftKey ? 4 : 0, n = e.metaKey ? 8 : 0, a = e.ctrlKey ? 16 : 0, i = s | n | a, 
                    l.vt200Mouse ? i &= a : l.normalMouse || (i = 0), t = 32 + (i << 2) + t;
                }
                function i(e) {
                    var t, s, n, a, i;
                    if (null != e.pageX) {
                        for (t = e.pageX, s = e.pageY, i = l.element; i && i !== l.document.documentElement; ) t -= i.offsetLeft, 
                        s -= i.offsetTop, i = "offsetParent" in i ? i.offsetParent : i.parentNode;
                        return n = l.element.clientWidth, a = l.element.clientHeight, t = Math.round(t / n * l.cols), 
                        s = Math.round(s / a * l.rows), t < 0 && (t = 0), t > l.cols && (t = l.cols), s < 0 && (s = 0), 
                        s > l.rows && (s = l.rows), t += 32, s += 32, {
                            x: t,
                            y: s,
                            type: e.type === c ? "mousewheel" : e.type
                        };
                    }
                }
                var r = this.element, l = this, _ = 32, c = "onmousewheel" in this.context ? "mousewheel" : "DOMMouseScroll";
                o(r, "mousedown", function(s) {
                    l.mouseEvents && (e(s), l.focus(), l.normalMouse && o(l.document, "mousemove", t), 
                    l.x10Mouse || o(l.document, "mouseup", function s(n) {
                        return e(n), l.normalMouse && d(l.document, "mousemove", t), d(l.document, "mouseup", s), 
                        u(n);
                    }));
                }), o(r, c, function(t) {
                    if (l.mouseEvents && !(l.x10Mouse || l.vt300Mouse || l.decLocator)) return e(t), 
                    u(t);
                }), o(r, c, function(e) {
                    if (!l.mouseEvents && !l.applicationKeypad) return "DOMMouseScroll" === e.type ? l.scrollDisp(e.detail < 0 ? -5 : 5) : l.scrollDisp(e.wheelDeltaY > 0 ? -5 : 5), 
                    u(e);
                });
            }, r.prototype.close = r.prototype.destroySoon = r.prototype.destroy = function() {
                this.destroyed || (this._blink && (clearInterval(this._blink), delete this._blink), 
                this.readable = !1, this.writable = !1, this.destroyed = !0, this._events = {}, 
                this.handler = function() {}, this.write = function() {}, this.end = function() {}, 
                this.element.parentNode && this.element.parentNode.removeChild(this.element), this.emit("end"), 
                this.emit("close"), this.emit("finish"), this.emit("destroy"));
            }, r.prototype.refresh = function(e, t) {
                var s, n, a, i, o, d, u, l, _, c, m, f, p;
                for (u = this.cols, n = e, t >= this.lines.length && (this.log("`end` is too large. Most likely a bad CSR."), 
                t = this.lines.length - 1); n <= t; n++) {
                    for (p = n + this.ydisp, i = this.lines[p], o = "", s = n !== this.y || this.ydisp !== this.ybase && !this.selectMode || this.cursorHidden ? -1 : this.x, 
                    _ = this.defAttr, a = 0; a < u; a++) {
                        switch (l = i[a][0], d = i[a][1], a === s && (l = -1), l !== _ && (_ !== this.defAttr && (o += "</span>"), 
                        l !== this.defAttr && (l === -1 ? o += '<span class="reverse-video terminal-cursor">' : (o += '<span class="', 
                        c = 511 & l, m = l >> 9 & 511, f = l >> 18, 1 & f && (r.brokenBold || (o += "term-bold "), 
                        m < 8 && (m += 8)), 2 & f && (o += "term-underline "), 4 & f && (o += "term-blink "), 
                        8 & f && (c = l >> 9 & 511, m = 511 & l, 1 & f && m < 8 && (m += 8)), 16 & f && (o += "term-hidden "), 
                        256 !== c && (o += "term-bg-color-" + c + " "), 257 !== m && (o += "term-fg-color-" + m + " "), 
                        o += '">'))), d) {
                          case "&":
                            o += "&amp;";
                            break;

                          case "<":
                            o += "&lt;";
                            break;

                          case ">":
                            o += "&gt;";
                            break;

                          default:
                            d <= " " ? o += "&nbsp;" : (h(d) && a++, o += d);
                        }
                        _ = l;
                    }
                    _ !== this.defAttr && (o += "</span>"), this.children[n].innerHTML = o;
                }
            }, r.prototype.showCursor = function() {
                this.cursorHidden = !1, this.refresh(this.y, this.y);
            }, r.prototype.scroll = function() {
                var e;
                ++this.ybase === this.scrollback && (this.ybase = this.ybase / 2 | 0, this.lines = this.lines.slice(-(this.ybase + this.rows) + 1)), 
                this.ydisp = this.ybase, e = this.ybase + this.rows - 1, e -= this.rows - 1 - this.scrollBottom, 
                e === this.lines.length ? this.lines.push(this.blankLine()) : this.lines.splice(e, 0, this.blankLine()), 
                0 !== this.scrollTop && (0 !== this.ybase && (this.ybase--, this.ydisp = this.ybase), 
                this.lines.splice(this.ybase + this.scrollTop, 1)), this.updateRange(this.scrollTop), 
                this.updateRange(this.scrollBottom);
            }, r.prototype.scrollDisp = function(e) {
                this.ydisp += e, this.ydisp > this.ybase ? this.ydisp = this.ybase : this.ydisp < 0 && (this.ydisp = 0), 
                this.refresh(0, this.rows - 1);
            }, r.prototype.write = function(e) {
                var t, s, n, a = e.length, i = 0;
                for (this.refreshStart = this.y, this.refreshEnd = this.y, this.ybase !== this.ydisp && (this.ydisp = this.ybase, 
                this.maxRange()); i < a; i++, this.lch = n) switch (n = e[i], this.state) {
                  case y:
                    switch (n) {
                      case "":
                        this.bell();
                        break;

                      case "\n":
                      case "\v":
                      case "\f":
                        this.convertEol && (this.x = 0), this.y++, this.y > this.scrollBottom && (this.y--, 
                        this.scroll());
                        break;

                      case "\r":
                        this.x = 0;
                        break;

                      case "\b":
                        this.x > 0 && this.x--;
                        break;

                      case "\t":
                        this.x = this.nextStop();
                        break;

                      case "":
                        this.setgLevel(1);
                        break;

                      case "":
                        this.setgLevel(0);
                        break;

                      case "":
                        this.state = L;
                        break;

                      default:
                        if (n >= " " && (this.charset && this.charset[n] && (n = this.charset[n]), this.x >= this.cols && (this.x = 0, 
                        this.y++, this.y > this.scrollBottom && (this.y--, this.scroll())), this.lines[this.y + this.ybase][this.x] = [ this.curAttr, n ], 
                        this.x++, this.updateRange(this.y), h(n))) {
                            if (t = this.y + this.ybase, this.cols < 2 || this.x >= this.cols) {
                                this.lines[t][this.x - 1] = [ this.curAttr, " " ];
                                break;
                            }
                            this.lines[t][this.x] = [ this.curAttr, " " ], this.x++;
                        }
                    }
                    break;

                  case L:
                    switch (n) {
                      case "[":
                        this.params = [], this.currentParam = 0, this.state = g;
                        break;

                      case "]":
                        this.params = [], this.currentParam = 0, this.state = Y;
                        break;

                      case "P":
                        this.params = [], this.prefix = "", this.currentParam = "", this.state = v;
                        break;

                      case "_":
                        this.state = b;
                        break;

                      case "^":
                        this.state = b;
                        break;

                      case "c":
                        this.reset();
                        break;

                      case "E":
                        this.x = 0;

                      case "D":
                        this.index();
                        break;

                      case "M":
                        this.reverseIndex();
                        break;

                      case "%":
                        this.setgLevel(0), this.setgCharset(0, r.charsets.US), this.state = y, i++;
                        break;

                      case "(":
                      case ")":
                      case "*":
                      case "+":
                      case "-":
                      case ".":
                        switch (n) {
                          case "(":
                            this.gcharset = 0;
                            break;

                          case ")":
                            this.gcharset = 1;
                            break;

                          case "*":
                            this.gcharset = 2;
                            break;

                          case "+":
                            this.gcharset = 3;
                            break;

                          case "-":
                            this.gcharset = 1;
                            break;

                          case ".":
                            this.gcharset = 2;
                        }
                        this.state = k;
                        break;

                      case "/":
                        this.gcharset = 3, this.state = k, i--;
                        break;

                      case "N":
                        break;

                      case "O":
                        break;

                      case "n":
                        this.setgLevel(2);
                        break;

                      case "o":
                        this.setgLevel(3);
                        break;

                      case "|":
                        this.setgLevel(3);
                        break;

                      case "}":
                        this.setgLevel(2);
                        break;

                      case "~":
                        this.setgLevel(1);
                        break;

                      case "7":
                        this.saveCursor(), this.state = y;
                        break;

                      case "8":
                        this.restoreCursor(), this.state = y;
                        break;

                      case "#":
                        this.state = y, i++;
                        break;

                      case "H":
                        this.tabSet();
                        break;

                      case "=":
                        this.log("Serial port requested application keypad."), this.applicationKeypad = !0, 
                        this.state = y;
                        break;

                      case ">":
                        this.log("Switching back to normal keypad."), this.applicationKeypad = !1, this.state = y;
                        break;

                      default:
                        this.state = y, this.error("Unknown ESC control: %s.", n);
                    }
                    break;

                  case k:
                    switch (n) {
                      case "0":
                        s = r.charsets.SCLD;
                        break;

                      case "A":
                        s = r.charsets.UK;
                        break;

                      case "B":
                        s = r.charsets.US;
                        break;

                      case "4":
                        s = r.charsets.Dutch;
                        break;

                      case "C":
                      case "5":
                        s = r.charsets.Finnish;
                        break;

                      case "R":
                        s = r.charsets.French;
                        break;

                      case "Q":
                        s = r.charsets.FrenchCanadian;
                        break;

                      case "K":
                        s = r.charsets.German;
                        break;

                      case "Y":
                        s = r.charsets.Italian;
                        break;

                      case "E":
                      case "6":
                        s = r.charsets.NorwegianDanish;
                        break;

                      case "Z":
                        s = r.charsets.Spanish;
                        break;

                      case "H":
                      case "7":
                        s = r.charsets.Swedish;
                        break;

                      case "=":
                        s = r.charsets.Swiss;
                        break;

                      case "/":
                        s = r.charsets.ISOLatin, i++;
                        break;

                      default:
                        s = r.charsets.US;
                    }
                    this.setgCharset(this.gcharset, s), this.gcharset = null, this.state = y;
                    break;

                  case Y:
                    if ("" === this.lch && "\\" === n || "" === n) {
                        switch ("" === this.lch && ("string" == typeof this.currentParam ? this.currentParam = this.currentParam.slice(0, -1) : "number" == typeof this.currentParam && (this.currentParam = (this.currentParam - ("".charCodeAt(0) - 48)) / 10)), 
                        this.params.push(this.currentParam), this.params[0]) {
                          case 0:
                          case 1:
                          case 2:
                            this.params[1] && (this.title = this.params[1], this.handleTitle(this.title));
                            break;

                          case 3:
                            break;

                          case 4:
                          case 5:
                            break;

                          case 10:
                          case 11:
                          case 12:
                          case 13:
                          case 14:
                          case 15:
                          case 16:
                          case 17:
                          case 18:
                          case 19:
                            break;

                          case 46:
                            break;

                          case 50:
                            break;

                          case 51:
                            break;

                          case 52:
                            break;

                          case 104:
                          case 105:
                          case 110:
                          case 111:
                          case 112:
                          case 113:
                          case 114:
                          case 115:
                          case 116:
                          case 117:
                          case 118:                        }
                        this.params = [], this.currentParam = 0, this.state = y;
                    } else this.params.length ? this.currentParam += n : n >= "0" && n <= "9" ? this.currentParam = 10 * this.currentParam + n.charCodeAt(0) - 48 : ";" === n && (this.params.push(this.currentParam), 
                    this.currentParam = "");
                    break;

                  case g:
                    if ("?" === n || ">" === n || "!" === n) {
                        this.prefix = n;
                        break;
                    }
                    if (n >= "0" && n <= "9") {
                        this.currentParam = 10 * this.currentParam + n.charCodeAt(0) - 48;
                        break;
                    }
                    if ("$" === n || '"' === n || " " === n || "'" === n) {
                        this.postfix = n;
                        break;
                    }
                    if (this.params.push(this.currentParam), this.currentParam = 0, ";" === n) break;
                    switch (this.state = y, n) {
                      case "A":
                        this.cursorUp(this.params);
                        break;

                      case "B":
                        this.cursorDown(this.params);
                        break;

                      case "C":
                        this.cursorForward(this.params);
                        break;

                      case "D":
                        this.cursorBackward(this.params);
                        break;

                      case "H":
                        this.cursorPos(this.params);
                        break;

                      case "J":
                        this.eraseInDisplay(this.params);
                        break;

                      case "K":
                        this.eraseInLine(this.params);
                        break;

                      case "m":
                        this.prefix || this.charAttributes(this.params);
                        break;

                      case "n":
                        this.prefix || this.deviceStatus(this.params);
                        break;

                      case "@":
                        this.insertChars(this.params);
                        break;

                      case "E":
                        this.cursorNextLine(this.params);
                        break;

                      case "F":
                        this.cursorPrecedingLine(this.params);
                        break;

                      case "G":
                        this.cursorCharAbsolute(this.params);
                        break;

                      case "L":
                        this.insertLines(this.params);
                        break;

                      case "M":
                        this.deleteLines(this.params);
                        break;

                      case "P":
                        this.deleteChars(this.params);
                        break;

                      case "X":
                        this.eraseChars(this.params);
                        break;

                      case "`":
                        this.charPosAbsolute(this.params);
                        break;

                      case "a":
                        this.HPositionRelative(this.params);
                        break;

                      case "c":
                        this.sendDeviceAttributes(this.params);
                        break;

                      case "d":
                        this.linePosAbsolute(this.params);
                        break;

                      case "e":
                        this.VPositionRelative(this.params);
                        break;

                      case "f":
                        this.HVPosition(this.params);
                        break;

                      case "h":
                        this.setMode(this.params);
                        break;

                      case "l":
                        this.resetMode(this.params);
                        break;

                      case "r":
                        this.setScrollRegion(this.params);
                        break;

                      case "s":
                        this.saveCursor(this.params);
                        break;

                      case "u":
                        this.restoreCursor(this.params);
                        break;

                      case "I":
                        this.cursorForwardTab(this.params);
                        break;

                      case "S":
                        this.scrollUp(this.params);
                        break;

                      case "T":
                        this.params.length < 2 && !this.prefix && this.scrollDown(this.params);
                        break;

                      case "Z":
                        this.cursorBackwardTab(this.params);
                        break;

                      case "b":
                        this.repeatPrecedingCharacter(this.params);
                        break;

                      case "g":
                        this.tabClear(this.params);
                        break;

                      case "p":
                        switch (this.prefix) {
                          case "!":
                            this.softReset(this.params);
                        }
                        break;

                      default:
                        this.error("Unknown CSI code: %s.", n);
                    }
                    this.prefix = "", this.postfix = "";
                    break;

                  case v:
                    if ("" === this.lch && "\\" === n || "" === n) {
                        if ("tmux;" === this.prefix && "" === n) {
                            this.currentParam += n;
                            continue;
                        }
                        "" === this.lch && ("string" == typeof this.currentParam ? this.currentParam = this.currentParam.slice(0, -1) : "number" == typeof this.currentParam && (this.currentParam = (this.currentParam - ("".charCodeAt(0) - 48)) / 10)), 
                        this.params.push(this.currentParam);
                        var o = this.params[this.params.length - 1];
                        switch (this.prefix) {
                          case w:
                            this.emit("udk", {
                                clearAll: 0 === this.params[0],
                                eraseBelow: 1 === this.params[0],
                                lockKeys: 0 === this.params[1],
                                dontLockKeys: 1 === this.params[1],
                                keyList: (this.params[2] + "").split(";").map(function(e) {
                                    return e = e.split("/"), {
                                        keyCode: e[0],
                                        hexKeyValue: e[1]
                                    };
                                })
                            });
                            break;

                          case "$q":
                            var d = 0;
                            switch (o) {
                              case '"q':
                                o = '0"q', d = 1;
                                break;

                              case '"p':
                                o = '61;0"p', d = 1;
                                break;

                              case "r":
                                o = "" + (this.scrollTop + 1) + ";" + (this.scrollBottom + 1) + "r", d = 1;
                                break;

                              case "m":
                                d = 0;
                                break;

                              default:
                                this.error("Unknown DCS Pt: %s.", o), d = 0;
                            }
                            this.send("P" + d + "$r" + o + "\\");
                            break;

                          case "+p":
                            this.emit("set terminfo", {
                                name: this.params[0]
                            });
                            break;

                          case "+q":
                            var d = !1;
                            this.send("P" + +d + "+r" + o + "\\");
                            break;

                          case "tmux;":
                            this.emit("passthrough", o);
                            break;

                          default:
                            this.error("Unknown DCS prefix: %s.", o);
                        }
                        this.currentParam = 0, this.prefix = "", this.state = y;
                    } else this.currentParam += n, this.prefix || (/^\d*;\d*\|/.test(this.currentParam) ? (this.prefix = w, 
                    this.params = this.currentParam.split(/[;|]/).map(function(e) {
                        return e.length ? +e : 0;
                    }).slice(0, -1), this.currentParam = "") : (/^[$+][a-zA-Z]/.test(this.currentParam) || /^\w+;\x1b/.test(this.currentParam)) && (this.prefix = this.currentParam, 
                    this.currentParam = ""));
                    break;

                  case b:
                    ("" === this.lch && "\\" === n || "" === n) && (this.state = y);
                }
                return this.updateRange(this.y), this.refresh(this.refreshStart, this.refreshEnd), 
                !0;
            }, r.prototype.writeln = function(e) {
                return this.write(e + "\r\n");
            }, r.prototype.end = function(e) {
                var t = !0;
                return e && (t = this.write(e)), this.destroySoon(), t;
            }, r.prototype.resume = function() {}, r.prototype.pause = function() {}, r.prototype.keyDown = function(e) {
                var t, s = this;
                switch (e.keyCode) {
                  case 8:
                    if (e.altKey) {
                        t = "";
                        break;
                    }
                    if (e.shiftKey) {
                        t = "\b";
                        break;
                    }
                    t = "";
                    break;

                  case 9:
                    if (e.shiftKey) {
                        t = "[Z";
                        break;
                    }
                    t = "\t";
                    break;

                  case 13:
                    t = "\r";
                    break;

                  case 27:
                    t = "";
                    break;

                  case 32:
                    t = " ";
                    break;

                  case 37:
                    if (this.applicationCursor) {
                        t = "OD";
                        break;
                    }
                    if (e.ctrlKey) {
                        t = "[5D";
                        break;
                    }
                    t = "[D";
                    break;

                  case 39:
                    if (this.applicationCursor) {
                        t = "OC";
                        break;
                    }
                    if (e.ctrlKey) {
                        t = "[5C";
                        break;
                    }
                    t = "[C";
                    break;

                  case 38:
                    if (this.applicationCursor) {
                        t = "OA";
                        break;
                    }
                    if (e.ctrlKey) return this.scrollDisp(-1), u(e);
                    t = "[A";
                    break;

                  case 40:
                    if (this.applicationCursor) {
                        t = "OB";
                        break;
                    }
                    if (e.ctrlKey) return this.scrollDisp(1), u(e);
                    t = "[B";
                    break;

                  case 46:
                    t = "[3~";
                    break;

                  case 45:
                    t = "[2~";
                    break;

                  case 36:
                    if (this.applicationKeypad) {
                        t = "OH";
                        break;
                    }
                    t = "OH";
                    break;

                  case 35:
                    if (this.applicationKeypad) {
                        t = "OF";
                        break;
                    }
                    t = "OF";
                    break;

                  case 33:
                    if (e.shiftKey) return this.scrollDisp(-(this.rows - 1)), u(e);
                    t = "[5~";
                    break;

                  case 34:
                    if (e.shiftKey) return this.scrollDisp(this.rows - 1), u(e);
                    t = "[6~";
                    break;

                  case 112:
                    t = "OP";
                    break;

                  case 113:
                    t = "OQ";
                    break;

                  case 114:
                    t = "OR";
                    break;

                  case 115:
                    t = "OS";
                    break;

                  case 116:
                    t = "[15~";
                    break;

                  case 117:
                    t = "[17~";
                    break;

                  case 118:
                    t = "[18~";
                    break;

                  case 119:
                    t = "[19~";
                    break;

                  case 120:
                    t = "[20~";
                    break;

                  case 121:
                    t = "[21~";
                    break;

                  case 122:
                    t = "[23~";
                    break;

                  case 123:
                    t = "[24~";
                    break;

                  default:
                    if (e.ctrlKey) if (e.keyCode >= 65 && e.keyCode <= 90) {
                        if (this.screenKeys && !this.prefixMode && !this.selectMode && 65 === e.keyCode) return this.enterPrefix(), 
                        u(e);
                        if (this.prefixMode && 86 === e.keyCode) return void this.leavePrefix();
                        if ((this.prefixMode || this.selectMode) && 67 === e.keyCode) return void (this.visualMode && T(function() {
                            s.leaveVisual();
                        }, 1));
                        t = D.fromCharCode(e.keyCode - 64);
                    } else 32 === e.keyCode ? t = D.fromCharCode(0) : e.keyCode >= 51 && e.keyCode <= 55 ? t = D.fromCharCode(e.keyCode - 51 + 27) : 56 === e.keyCode ? t = D.fromCharCode(127) : 219 === e.keyCode ? t = D.fromCharCode(27) : 221 === e.keyCode && (t = D.fromCharCode(29)); else e.altKey && (e.keyCode >= 65 && e.keyCode <= 90 ? t = "" + D.fromCharCode(e.keyCode + 32) : 192 === e.keyCode ? t = "`" : e.keyCode >= 48 && e.keyCode <= 57 && (t = "" + (e.keyCode - 48)));
                }
                return !t || (this.prefixMode ? (this.leavePrefix(), u(e)) : this.selectMode ? (this.keySelect(e, t), 
                u(e)) : (this.emit("keydown", e), this.emit("key", t, e), this.handler(t), u(e)));
            }, r.prototype.setgLevel = function(e) {
                this.glevel = e, this.charset = this.charsets[e];
            }, r.prototype.setgCharset = function(e, t) {
                this.charsets[e] = t, this.glevel === e && (this.charset = t);
            }, r.prototype.keyPress = function(e) {
                var t;
                if (u(e), e.charCode) t = e.charCode; else if (null == e.which) t = e.keyCode; else {
                    if (0 === e.which || 0 === e.charCode) return !1;
                    t = e.which;
                }
                return !(!t || e.ctrlKey || e.altKey || e.metaKey) && (t = D.fromCharCode(t), this.prefixMode ? (this.leavePrefix(), 
                this.keyPrefix(e, t), !1) : this.selectMode ? (this.keySelect(e, t), !1) : (this.emit("keypress", t, e), 
                this.emit("key", t, e), this.handler(t), !1));
            }, r.prototype.send = function(e) {
                var t = this;
                this.queue || T(function() {
                    t.handler(t.queue), t.queue = "";
                }, 1), this.queue += e;
            }, r.prototype.bell = function() {
                if (this.emit("bell"), this.visualBell) {
                    var e = this;
                    this.element.style.borderColor = "white", T(function() {
                        e.element.style.borderColor = "";
                    }, 10), this.popOnBell && this.focus();
                }
            }, r.prototype.log = function() {
                if (this.debug && this.context.console && this.context.console.log) {
                    var e = Array.prototype.slice.call(arguments);
                    this.context.console.log.apply(this.context.console, e);
                }
            }, r.prototype.error = function() {
                if (this.debug && this.context.console && this.context.console.error) {
                    var e = Array.prototype.slice.call(arguments);
                    this.context.console.error.apply(this.context.console, e);
                }
            }, r.prototype.resize = function(e, t) {
                var s, n, a, i, r;
                if (e < 1 && (e = 1), t < 1 && (t = 1), i = this.cols, i < e) for (r = [ this.defAttr, " " ], 
                a = this.lines.length; a--; ) for (;this.lines[a].length < e; ) this.lines[a].push(r); else if (i > e) for (a = this.lines.length; a--; ) for (;this.lines[a].length > e; ) this.lines[a].pop();
                if (this.setupStops(i), this.cols = e, this.columns = e, i = this.rows, i < t) for (n = this.element; i++ < t; ) this.lines.length < t + this.ybase && this.lines.push(this.blankLine()), 
                this.children.length < t && (s = this.document.createElement("div"), n.appendChild(s), 
                this.children.push(s)); else if (i > t) for (;i-- > t; ) if (this.lines.length > t + this.ybase && this.lines.pop(), 
                this.children.length > t) {
                    if (n = this.children.pop(), !n) continue;
                    n.parentNode.removeChild(n);
                }
                this.rows = t, this.y >= t && (this.y = t - 1), this.x >= e && (this.x = e - 1), 
                this.scrollTop = 0, this.scrollBottom = t - 1, this.refresh(0, this.rows - 1), this.normal = null, 
                this.emit("resize");
            }, r.prototype.updateRange = function(e) {
                e < this.refreshStart && (this.refreshStart = e), e > this.refreshEnd && (this.refreshEnd = e);
            }, r.prototype.maxRange = function() {
                this.refreshStart = 0, this.refreshEnd = this.rows - 1;
            }, r.prototype.setupStops = function(e) {
                for (null != e ? this.tabs[e] || (e = this.prevStop(e)) : (this.tabs = {}, e = 0); e < this.cols; e += 8) this.tabs[e] = !0;
            }, r.prototype.prevStop = function(e) {
                for (null == e && (e = this.x); !this.tabs[--e] && e > 0; ) ;
                return e >= this.cols ? this.cols - 1 : e < 0 ? 0 : e;
            }, r.prototype.nextStop = function(e) {
                for (null == e && (e = this.x); !this.tabs[++e] && e < this.cols; ) ;
                return e >= this.cols ? this.cols - 1 : e < 0 ? 0 : e;
            }, r.prototype.eraseAttr = function() {
                return this.defAttr & -512 | 511 & this.curAttr;
            }, r.prototype.eraseRight = function(e, t) {
                for (var s = this.lines[this.ybase + t], n = [ this.eraseAttr(), " " ]; e < this.cols; e++) s[e] = n;
                this.updateRange(t);
            }, r.prototype.eraseLeft = function(e, t) {
                var s = this.lines[this.ybase + t], n = [ this.eraseAttr(), " " ];
                for (e++; e--; ) s[e] = n;
                this.updateRange(t);
            }, r.prototype.eraseLine = function(e) {
                this.eraseRight(0, e);
            }, r.prototype.blankLine = function(e) {
                for (var t = e ? this.eraseAttr() : this.defAttr, s = [ t, " " ], n = [], a = 0; a < this.cols; a++) n[a] = s;
                return n;
            }, r.prototype.ch = function(e) {
                return e ? [ this.eraseAttr(), " " ] : [ this.defAttr, " " ];
            }, r.prototype.is = function(e) {
                var t = this.termName;
                return 0 === (t + "").indexOf(e);
            }, r.prototype.handler = function(e) {
                this.emit("data", e);
            }, r.prototype.handleTitle = function(e) {
                this.emit("title", e);
            }, r.prototype.index = function() {
                this.y++, this.y > this.scrollBottom && (this.y--, this.scroll()), this.state = y;
            }, r.prototype.reverseIndex = function() {
                var e;
                this.y--, this.y < this.scrollTop && (this.y++, this.lines.splice(this.y + this.ybase, 0, this.blankLine(!0)), 
                e = this.rows - 1 - this.scrollBottom, this.lines.splice(this.rows - 1 + this.ybase - e + 1, 1), 
                this.updateRange(this.scrollTop), this.updateRange(this.scrollBottom)), this.state = y;
            }, r.prototype.reset = function() {
                this.options.rows = this.rows, this.options.cols = this.cols, r.call(this, this.options), 
                this.refresh(0, this.rows - 1);
            }, r.prototype.tabSet = function() {
                this.tabs[this.x] = !0, this.state = y;
            }, r.prototype.cursorUp = function(e) {
                var t = e[0];
                t < 1 && (t = 1), this.y -= t, this.y < 0 && (this.y = 0);
            }, r.prototype.cursorDown = function(e) {
                var t = e[0];
                t < 1 && (t = 1), this.y += t, this.y >= this.rows && (this.y = this.rows - 1);
            }, r.prototype.cursorForward = function(e) {
                var t = e[0];
                t < 1 && (t = 1), this.x += t, this.x >= this.cols && (this.x = this.cols - 1);
            }, r.prototype.cursorBackward = function(e) {
                var t = e[0];
                t < 1 && (t = 1), this.x -= t, this.x < 0 && (this.x = 0);
            }, r.prototype.cursorPos = function(e) {
                var t, s;
                t = e[0] - 1, s = e.length >= 2 ? e[1] - 1 : 0, t < 0 ? t = 0 : t >= this.rows && (t = this.rows - 1), 
                s < 0 ? s = 0 : s >= this.cols && (s = this.cols - 1), this.x = s, this.y = t;
            }, r.prototype.eraseInDisplay = function(e) {
                var t;
                switch (e[0]) {
                  case 0:
                    for (this.eraseRight(this.x, this.y), t = this.y + 1; t < this.rows; t++) this.eraseLine(t);
                    break;

                  case 1:
                    for (this.eraseLeft(this.x, this.y), t = this.y; t--; ) this.eraseLine(t);
                    break;

                  case 2:
                    for (t = this.rows; t--; ) this.eraseLine(t);
                    break;

                  case 3:                }
            }, r.prototype.eraseInLine = function(e) {
                switch (e[0]) {
                  case 0:
                    this.eraseRight(this.x, this.y);
                    break;

                  case 1:
                    this.eraseLeft(this.x, this.y);
                    break;

                  case 2:
                    this.eraseLine(this.y);
                }
            }, r.prototype.charAttributes = function(e) {
                if (1 === e.length && 0 === e[0]) return void (this.curAttr = this.defAttr);
                for (var t, s = e.length, n = 0, a = this.curAttr >> 18, i = this.curAttr >> 9 & 511, r = 511 & this.curAttr; n < s; n++) t = e[n], 
                t >= 30 && t <= 37 ? i = t - 30 : t >= 40 && t <= 47 ? r = t - 40 : t >= 90 && t <= 97 ? (t += 8, 
                i = t - 90) : t >= 100 && t <= 107 ? (t += 8, r = t - 100) : 0 === t ? (a = this.defAttr >> 18, 
                i = this.defAttr >> 9 & 511, r = 511 & this.defAttr) : 1 === t ? a |= 1 : 4 === t ? a |= 2 : 5 === t ? a |= 4 : 7 === t ? a |= 8 : 8 === t ? a |= 16 : 22 === t ? a &= -2 : 24 === t ? a &= -3 : 25 === t ? a &= -5 : 27 === t ? a &= -9 : 28 === t ? a &= -17 : 39 === t ? i = this.defAttr >> 9 & 511 : 49 === t ? r = 511 & this.defAttr : 38 === t ? 2 === e[n + 1] ? (n += 2, 
                i = m(255 & e[n], 255 & e[n + 1], 255 & e[n + 2]), i === -1 && (i = 511), n += 2) : 5 === e[n + 1] && (n += 2, 
                t = 255 & e[n], i = t) : 48 === t ? 2 === e[n + 1] ? (n += 2, r = m(255 & e[n], 255 & e[n + 1], 255 & e[n + 2]), 
                r === -1 && (r = 511), n += 2) : 5 === e[n + 1] && (n += 2, t = 255 & e[n], r = t) : 100 === t ? (i = this.defAttr >> 9 & 511, 
                r = 511 & this.defAttr) : this.error("Unknown SGR attribute: %d.", t);
                this.curAttr = a << 18 | i << 9 | r;
            }, r.prototype.deviceStatus = function(e) {
                if (this.prefix) {
                    if ("?" === this.prefix) switch (e[0]) {
                      case 6:
                        this.send("[?" + (this.y + 1) + ";" + (this.x + 1) + "R");
                        break;

                      case 15:
                        break;

                      case 25:
                        break;

                      case 26:
                        break;

                      case 53:                    }
                } else switch (e[0]) {
                  case 5:
                    this.send("[0n");
                    break;

                  case 6:
                    this.send("[" + (this.y + 1) + ";" + (this.x + 1) + "R");
                }
            }, r.prototype.insertChars = function(e) {
                var t, s, n, a;
                for (t = e[0], t < 1 && (t = 1), s = this.y + this.ybase, n = this.x, a = [ this.eraseAttr(), " " ]; t-- && n < this.cols; ) this.lines[s].splice(n++, 0, a), 
                this.lines[s].pop();
            }, r.prototype.cursorNextLine = function(e) {
                var t = e[0];
                t < 1 && (t = 1), this.y += t, this.y >= this.rows && (this.y = this.rows - 1), 
                this.x = 0;
            }, r.prototype.cursorPrecedingLine = function(e) {
                var t = e[0];
                t < 1 && (t = 1), this.y -= t, this.y < 0 && (this.y = 0), this.x = 0;
            }, r.prototype.cursorCharAbsolute = function(e) {
                var t = e[0];
                t < 1 && (t = 1), this.x = t - 1;
            }, r.prototype.insertLines = function(e) {
                var t, s, n;
                for (t = e[0], t < 1 && (t = 1), s = this.y + this.ybase, n = this.rows - 1 - this.scrollBottom, 
                n = this.rows - 1 + this.ybase - n + 1; t--; ) this.lines.splice(s, 0, this.blankLine(!0)), 
                this.lines.splice(n, 1);
                this.updateRange(this.y), this.updateRange(this.scrollBottom);
            }, r.prototype.deleteLines = function(e) {
                var t, s, n;
                for (t = e[0], t < 1 && (t = 1), s = this.y + this.ybase, n = this.rows - 1 - this.scrollBottom, 
                n = this.rows - 1 + this.ybase - n; t--; ) this.lines.splice(n + 1, 0, this.blankLine(!0)), 
                this.lines.splice(s, 1);
                this.updateRange(this.y), this.updateRange(this.scrollBottom);
            }, r.prototype.deleteChars = function(e) {
                var t, s, n;
                for (t = e[0], t < 1 && (t = 1), s = this.y + this.ybase, n = [ this.eraseAttr(), " " ]; t--; ) this.lines[s].splice(this.x, 1), 
                this.lines[s].push(n);
            }, r.prototype.eraseChars = function(e) {
                var t, s, n, a;
                for (t = e[0], t < 1 && (t = 1), s = this.y + this.ybase, n = this.x, a = [ this.eraseAttr(), " " ]; t-- && n < this.cols; ) this.lines[s][n++] = a;
            }, r.prototype.charPosAbsolute = function(e) {
                var t = e[0];
                t < 1 && (t = 1), this.x = t - 1, this.x >= this.cols && (this.x = this.cols - 1);
            }, r.prototype.HPositionRelative = function(e) {
                var t = e[0];
                t < 1 && (t = 1), this.x += t, this.x >= this.cols && (this.x = this.cols - 1);
            }, r.prototype.sendDeviceAttributes = function(e) {
                e[0] > 0 || (this.prefix ? ">" === this.prefix && (this.is("xterm") ? this.send("[>0;276;0c") : this.is("rxvt-unicode") ? this.send("[>85;95;0c") : this.is("linux") ? this.send(e[0] + "c") : this.is("screen") && this.send("[>83;40003;0c")) : this.is("xterm") || this.is("rxvt-unicode") || this.is("screen") ? this.send("[?1;2c") : this.is("linux") && this.send("[?6c"));
            }, r.prototype.linePosAbsolute = function(e) {
                var t = e[0];
                t < 1 && (t = 1), this.y = t - 1, this.y >= this.rows && (this.y = this.rows - 1);
            }, r.prototype.VPositionRelative = function(e) {
                var t = e[0];
                t < 1 && (t = 1), this.y += t, this.y >= this.rows && (this.y = this.rows - 1);
            }, r.prototype.HVPosition = function(e) {
                e[0] < 1 && (e[0] = 1), e[1] < 1 && (e[1] = 1), this.y = e[0] - 1, this.y >= this.rows && (this.y = this.rows - 1), 
                this.x = e[1] - 1, this.x >= this.cols && (this.x = this.cols - 1);
            }, r.prototype.setMode = function(e) {
                if ("object" != typeof e) if (this.prefix) {
                    if ("?" === this.prefix) switch (e) {
                      case 1:
                        this.applicationCursor = !0;
                        break;

                      case 2:
                        this.setgCharset(0, r.charsets.US), this.setgCharset(1, r.charsets.US), this.setgCharset(2, r.charsets.US), 
                        this.setgCharset(3, r.charsets.US);
                        break;

                      case 3:
                        this.savedCols = this.cols, this.resize(132, this.rows);
                        break;

                      case 6:
                        this.originMode = !0;
                        break;

                      case 7:
                        this.wraparoundMode = !0;
                        break;

                      case 66:
                        this.log("Serial port requested application keypad."), this.applicationKeypad = !0;
                        break;

                      case 9:
                      case 1e3:
                      case 1002:
                      case 1003:
                        this.x10Mouse = 9 === e, this.vt200Mouse = 1e3 === e, this.normalMouse = e > 1e3, 
                        this.mouseEvents = !0, this.element.style.cursor = "default", this.log("Binding to mouse events.");
                        break;

                      case 1004:
                        this.sendFocus = !0;
                        break;

                      case 1005:
                        this.utfMouse = !0;
                        break;

                      case 1006:
                        this.sgrMouse = !0;
                        break;

                      case 1015:
                        this.urxvtMouse = !0;
                        break;

                      case 25:
                        this.cursorHidden = !1;
                        break;

                      case 1049:
                      case 47:
                      case 1047:
                        if (!this.normal) {
                            var t = {
                                lines: this.lines,
                                ybase: this.ybase,
                                ydisp: this.ydisp,
                                x: this.x,
                                y: this.y,
                                scrollTop: this.scrollTop,
                                scrollBottom: this.scrollBottom,
                                tabs: this.tabs
                            };
                            this.reset(), this.normal = t;
                        }
                    }
                } else switch (e) {
                  case 4:
                    this.insertMode = !0;
                    break;

                  case 20:                } else for (var s = e.length, n = 0; n < s; n++) this.setMode(e[n]);
            }, r.prototype.resetMode = function(e) {
                if ("object" != typeof e) if (this.prefix) {
                    if ("?" === this.prefix) switch (e) {
                      case 1:
                        this.applicationCursor = !1;
                        break;

                      case 3:
                        132 === this.cols && this.savedCols && this.resize(this.savedCols, this.rows), delete this.savedCols;
                        break;

                      case 6:
                        this.originMode = !1;
                        break;

                      case 7:
                        this.wraparoundMode = !1;
                        break;

                      case 66:
                        this.log("Switching back to normal keypad."), this.applicationKeypad = !1;
                        break;

                      case 9:
                      case 1e3:
                      case 1002:
                      case 1003:
                        this.x10Mouse = !1, this.vt200Mouse = !1, this.normalMouse = !1, this.mouseEvents = !1, 
                        this.element.style.cursor = "";
                        break;

                      case 1004:
                        this.sendFocus = !1;
                        break;

                      case 1005:
                        this.utfMouse = !1;
                        break;

                      case 1006:
                        this.sgrMouse = !1;
                        break;

                      case 1015:
                        this.urxvtMouse = !1;
                        break;

                      case 25:
                        this.cursorHidden = !0;
                        break;

                      case 1049:
                      case 47:
                      case 1047:
                        this.normal && (this.lines = this.normal.lines, this.ybase = this.normal.ybase, 
                        this.ydisp = this.normal.ydisp, this.x = this.normal.x, this.y = this.normal.y, 
                        this.scrollTop = this.normal.scrollTop, this.scrollBottom = this.normal.scrollBottom, 
                        this.tabs = this.normal.tabs, this.normal = null, this.refresh(0, this.rows - 1));
                    }
                } else switch (e) {
                  case 4:
                    this.insertMode = !1;
                    break;

                  case 20:                } else for (var t = e.length, s = 0; s < t; s++) this.resetMode(e[s]);
            }, r.prototype.setScrollRegion = function(e) {
                this.prefix || (this.scrollTop = (e[0] || 1) - 1, this.scrollBottom = (e[1] || this.rows) - 1, 
                this.x = 0, this.y = 0);
            }, r.prototype.saveCursor = function(e) {
                this.savedX = this.x, this.savedY = this.y;
            }, r.prototype.restoreCursor = function(e) {
                this.x = this.savedX || 0, this.y = this.savedY || 0;
            }, r.prototype.cursorForwardTab = function(e) {
                for (var t = e[0] || 1; t--; ) this.x = this.nextStop();
            }, r.prototype.scrollUp = function(e) {
                for (var t = e[0] || 1; t--; ) this.lines.splice(this.ybase + this.scrollTop, 1), 
                this.lines.splice(this.ybase + this.scrollBottom, 0, this.blankLine());
                this.updateRange(this.scrollTop), this.updateRange(this.scrollBottom);
            }, r.prototype.scrollDown = function(e) {
                for (var t = e[0] || 1; t--; ) this.lines.splice(this.ybase + this.scrollBottom, 1), 
                this.lines.splice(this.ybase + this.scrollTop, 0, this.blankLine());
                this.updateRange(this.scrollTop), this.updateRange(this.scrollBottom);
            }, r.prototype.initMouseTracking = function(e) {}, r.prototype.resetTitleModes = function(e) {}, 
            r.prototype.cursorBackwardTab = function(e) {
                for (var t = e[0] || 1; t--; ) this.x = this.prevStop();
            }, r.prototype.repeatPrecedingCharacter = function(e) {
                for (var t = e[0] || 1, s = this.lines[this.ybase + this.y], n = s[this.x - 1] || [ this.defAttr, " " ]; t--; ) s[this.x++] = n;
            }, r.prototype.tabClear = function(e) {
                var t = e[0];
                t <= 0 ? delete this.tabs[this.x] : 3 === t && (this.tabs = {});
            }, r.prototype.mediaCopy = function(e) {}, r.prototype.setResources = function(e) {}, 
            r.prototype.disableModifiers = function(e) {}, r.prototype.setPointerMode = function(e) {}, 
            r.prototype.softReset = function(e) {
                this.cursorHidden = !1, this.insertMode = !1, this.originMode = !1, this.wraparoundMode = !1, 
                this.applicationKeypad = !1, this.applicationCursor = !1, this.scrollTop = 0, this.scrollBottom = this.rows - 1, 
                this.curAttr = this.defAttr, this.x = this.y = 0, this.charset = null, this.glevel = 0, 
                this.charsets = [ null ];
            }, r.prototype.requestAnsiMode = function(e) {}, r.prototype.requestPrivateMode = function(e) {}, 
            r.prototype.setConformanceLevel = function(e) {}, r.prototype.loadLEDs = function(e) {}, 
            r.prototype.setCursorStyle = function(e) {}, r.prototype.setCharProtectionAttr = function(e) {}, 
            r.prototype.restorePrivateValues = function(e) {}, r.prototype.setAttrInRectangle = function(e) {
                for (var t, s, n = e[0], a = e[1], i = e[2], r = e[3], o = e[4]; n < i + 1; n++) for (t = this.lines[this.ybase + n], 
                s = a; s < r; s++) t[s] = [ o, t[s][1] ];
                this.updateRange(e[0]), this.updateRange(e[2]);
            }, r.prototype.savePrivateValues = function(e) {}, r.prototype.manipulateWindow = function(e) {}, 
            r.prototype.reverseAttrInRectangle = function(e) {}, r.prototype.setTitleModeFeature = function(e) {}, 
            r.prototype.setWarningBellVolume = function(e) {}, r.prototype.setMarginBellVolume = function(e) {}, 
            r.prototype.copyRectangle = function(e) {}, r.prototype.enableFilterRectangle = function(e) {}, 
            r.prototype.requestParameters = function(e) {}, r.prototype.selectChangeExtent = function(e) {}, 
            r.prototype.fillRectangle = function(e) {
                for (var t, s, n = e[0], a = e[1], i = e[2], r = e[3], o = e[4]; a < r + 1; a++) for (t = this.lines[this.ybase + a], 
                s = i; s < o; s++) t[s] = [ t[s][0], D.fromCharCode(n) ];
                this.updateRange(e[1]), this.updateRange(e[3]);
            }, r.prototype.enableLocatorReporting = function(e) {
                e[0] > 0;
            }, r.prototype.eraseRectangle = function(e) {
                var t, s, n, a = e[0], i = e[1], r = e[2], o = e[3];
                for (n = [ this.eraseAttr(), " " ]; a < r + 1; a++) for (t = this.lines[this.ybase + a], 
                s = i; s < o; s++) t[s] = n;
                this.updateRange(e[0]), this.updateRange(e[2]);
            }, r.prototype.setLocatorEvents = function(e) {}, r.prototype.selectiveEraseRectangle = function(e) {}, 
            r.prototype.requestLocatorPosition = function(e) {}, r.prototype.insertColumns = function() {
                for (var e, t = params[0], s = this.ybase + this.rows, n = [ this.eraseAttr(), " " ]; t--; ) for (e = this.ybase; e < s; e++) this.lines[e].splice(this.x + 1, 0, n), 
                this.lines[e].pop();
                this.maxRange();
            }, r.prototype.deleteColumns = function() {
                for (var e, t = params[0], s = this.ybase + this.rows, n = [ this.eraseAttr(), " " ]; t--; ) for (e = this.ybase; e < s; e++) this.lines[e].splice(this.x, 1), 
                this.lines[e].push(n);
                this.maxRange();
            }, r.prototype.enterPrefix = function() {
                this.prefixMode = !0;
            }, r.prototype.leavePrefix = function() {
                this.prefixMode = !1;
            }, r.prototype.enterSelect = function() {
                this._real = {
                    x: this.x,
                    y: this.y,
                    ydisp: this.ydisp,
                    ybase: this.ybase,
                    cursorHidden: this.cursorHidden,
                    lines: this.copyBuffer(this.lines),
                    write: this.write
                }, this.write = function() {}, this.selectMode = !0, this.visualMode = !1, this.cursorHidden = !1, 
                this.refresh(this.y, this.y);
            }, r.prototype.leaveSelect = function() {
                this.x = this._real.x, this.y = this._real.y, this.ydisp = this._real.ydisp, this.ybase = this._real.ybase, 
                this.cursorHidden = this._real.cursorHidden, this.lines = this._real.lines, this.write = this._real.write, 
                delete this._real, this.selectMode = !1, this.visualMode = !1, this.refresh(0, this.rows - 1);
            }, r.prototype.enterVisual = function() {
                this._real.preVisual = this.copyBuffer(this.lines), this.selectText(this.x, this.x, this.ydisp + this.y, this.ydisp + this.y), 
                this.visualMode = !0;
            }, r.prototype.leaveVisual = function() {
                this.lines = this._real.preVisual, delete this._real.preVisual, delete this._selected, 
                this.visualMode = !1, this.refresh(0, this.rows - 1);
            }, r.prototype.enterSearch = function(e) {
                this.entry = "", this.searchMode = !0, this.searchDown = e, this._real.preSearch = this.copyBuffer(this.lines), 
                this._real.preSearchX = this.x, this._real.preSearchY = this.y;
                for (var t = this.ydisp + this.rows - 1, s = 0; s < this.entryPrefix.length; s++) this.lines[t][s] = [ this.defAttr & -512 | 4, this.entryPrefix[s] ];
                this.y = this.rows - 1, this.x = this.entryPrefix.length, this.refresh(this.rows - 1, this.rows - 1);
            }, r.prototype.leaveSearch = function() {
                this.searchMode = !1, this._real.preSearch && (this.lines = this._real.preSearch, 
                this.x = this._real.preSearchX, this.y = this._real.preSearchY, delete this._real.preSearch, 
                delete this._real.preSearchX, delete this._real.preSearchY), this.refresh(this.rows - 1, this.rows - 1);
            }, r.prototype.copyBuffer = function(e) {
                for (var e = e || this.lines, t = [], s = 0; s < e.length; s++) {
                    t[s] = [];
                    for (var n = 0; n < e[s].length; n++) t[s][n] = [ e[s][n][0], e[s][n][1] ];
                }
                return t;
            }, r.prototype.getCopyTextarea = function(e) {
                var t = this._copyTextarea, s = this.document;
                return t || (t = s.createElement("textarea"), t.style.position = "absolute", t.style.left = "-32000px", 
                t.style.top = "-32000px", t.style.width = "0px", t.style.height = "0px", t.style.opacity = "0", 
                t.style.backgroundColor = "transparent", t.style.borderStyle = "none", t.style.outlineStyle = "none", 
                s.getElementsByTagName("body")[0].appendChild(t), this._copyTextarea = t), t;
            }, r.prototype.copyText = function(e) {
                var t = this, s = this.getCopyTextarea();
                this.emit("copy", e), s.focus(), s.textContent = e, s.value = e, s.setSelectionRange(0, e.length), 
                T(function() {
                    t.element.focus(), t.focus();
                }, 1);
            }, r.prototype.selectText = function(e, t, s, n) {
                var a, i, r, o, d, u, l, _, c;
                if (this._selected) {
                    for (a = this._selected.x1, i = this._selected.x2, r = this._selected.y1, o = this._selected.y2, 
                    o < r && (d = i, i = a, a = d, d = o, o = r, r = d), i < a && r === o && (d = i, 
                    i = a, a = d), l = r; l <= o; l++) for (u = 0, _ = this.cols - 1, l === r && (u = a), 
                    l === o && (_ = i); u <= _; u++) null != this.lines[l][u].old && (c = this.lines[l][u].old, 
                    delete this.lines[l][u].old, this.lines[l][u] = [ c, this.lines[l][u][1] ]);
                    s = this._selected.y1, e = this._selected.x1;
                }
                for (s = Math.max(s, 0), s = Math.min(s, this.ydisp + this.rows - 1), n = Math.max(n, 0), 
                n = Math.min(n, this.ydisp + this.rows - 1), this._selected = {
                    x1: e,
                    x2: t,
                    y1: s,
                    y2: n
                }, n < s && (d = t, t = e, e = d, d = n, n = s, s = d), t < e && s === n && (d = t, 
                t = e, e = d), l = s; l <= n; l++) for (u = 0, _ = this.cols - 1, l === s && (u = e), 
                l === n && (_ = t); u <= _; u++) c = this.lines[l][u][0], this.lines[l][u] = [ c & -512 | 261636, this.lines[l][u][1] ], 
                this.lines[l][u].old = c;
                s -= this.ydisp, n -= this.ydisp, s = Math.max(s, 0), s = Math.min(s, this.rows - 1), 
                n = Math.max(n, 0), n = Math.min(n, this.rows - 1), this.refresh(0, this.rows - 1);
            }, r.prototype.grabText = function(e, t, s, n) {
                var a, i, r, o, d, u = "", l = "";
                for (n < s && (d = t, t = e, e = d, d = n, n = s, s = d), t < e && s === n && (d = t, 
                t = e, e = d), r = s; r <= n; r++) {
                    for (i = 0, o = this.cols - 1, r === s && (i = e), r === n && (o = t); i <= o; i++) a = this.lines[r][i][1], 
                    " " !== a ? (l && (u += l, l = ""), u += a, h(a) && i++) : l += a;
                    l = "", u += "\n";
                }
                for (i = t, r = n; i < this.cols; i++) if (" " !== this.lines[r][i][1]) {
                    u = u.slice(0, -1);
                    break;
                }
                return u;
            }, r.prototype.keyPrefix = function(e, t) {
                "k" === t || "&" === t ? this.destroy() : "p" === t || "]" === t ? this.emit("request paste") : "c" === t ? this.emit("request create") : t >= "0" && t <= "9" ? (t = +t - 1, 
                ~t || (t = 9), this.emit("request term", t)) : "n" === t ? this.emit("request term next") : "P" === t ? this.emit("request term previous") : ":" === t ? this.emit("request command mode") : "[" === t && this.enterSelect();
            }, r.prototype.keySelect = function(e, t) {
                if (this.searchMode || "n" === t || "N" === t) return this.keySearch(e, t);
                if ("" === t) {
                    var s = this.ydisp + this.y;
                    return this.ydisp === this.ybase ? (this.y = Math.min(this.y + (this.rows - 1) / 2 | 0, this.rows - 1), 
                    this.refresh(0, this.rows - 1)) : this.scrollDisp((this.rows - 1) / 2 | 0), void (this.visualMode && this.selectText(this.x, this.x, s, this.ydisp + this.y));
                }
                if ("" === t) {
                    var s = this.ydisp + this.y;
                    return 0 === this.ydisp ? (this.y = Math.max(this.y - (this.rows - 1) / 2 | 0, 0), 
                    this.refresh(0, this.rows - 1)) : this.scrollDisp(-(this.rows - 1) / 2 | 0), void (this.visualMode && this.selectText(this.x, this.x, s, this.ydisp + this.y));
                }
                if ("" === t) {
                    var s = this.ydisp + this.y;
                    return this.scrollDisp(this.rows - 1), void (this.visualMode && this.selectText(this.x, this.x, s, this.ydisp + this.y));
                }
                if ("" === t) {
                    var s = this.ydisp + this.y;
                    return this.scrollDisp(-(this.rows - 1)), void (this.visualMode && this.selectText(this.x, this.x, s, this.ydisp + this.y));
                }
                if ("k" === t || "[A" === t) {
                    var s = this.ydisp + this.y;
                    return this.y--, this.y < 0 && (this.y = 0, this.scrollDisp(-1)), void (this.visualMode ? this.selectText(this.x, this.x, s, this.ydisp + this.y) : this.refresh(this.y, this.y + 1));
                }
                if ("j" === t || "[B" === t) {
                    var s = this.ydisp + this.y;
                    return this.y++, this.y >= this.rows && (this.y = this.rows - 1, this.scrollDisp(1)), 
                    void (this.visualMode ? this.selectText(this.x, this.x, s, this.ydisp + this.y) : this.refresh(this.y - 1, this.y));
                }
                if ("h" === t || "[D" === t) {
                    var n = this.x;
                    return this.x--, this.x < 0 && (this.x = 0), void (this.visualMode ? this.selectText(n, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                }
                if ("l" === t || "[C" === t) {
                    var n = this.x;
                    return this.x++, this.x >= this.cols && (this.x = this.cols - 1), void (this.visualMode ? this.selectText(n, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                }
                if ("v" === t || " " === t) return void (this.visualMode ? this.leaveVisual() : this.enterVisual());
                {
                    if ("y" !== t) {
                        if ("q" === t || "" === t) return void (this.visualMode ? this.leaveVisual() : this.leaveSelect());
                        if ("w" === t || "W" === t) {
                            for (var a = this.x, i = this.y, r = this.ydisp, n = this.x, s = this.y, o = this.ydisp, d = !1; ;) {
                                for (var u = this.lines[o + s]; n < this.cols; ) {
                                    if (u[n][1] <= " ") d = !0; else if (d) break;
                                    n++;
                                }
                                if (n >= this.cols && (n = this.cols - 1), !(n === this.cols - 1 && u[n][1] <= " ")) break;
                                if (n = 0, ++s >= this.rows && (s--, ++o > this.ybase)) {
                                    o = this.ybase, n = this.x;
                                    break;
                                }
                            }
                            return this.x = n, this.y = s, this.scrollDisp(-this.ydisp + o), void (this.visualMode && this.selectText(a, this.x, i + r, this.ydisp + this.y));
                        }
                        if ("b" === t || "B" === t) {
                            for (var a = this.x, i = this.y, r = this.ydisp, n = this.x, s = this.y, o = this.ydisp; ;) {
                                for (var u = this.lines[o + s], d = n > 0 && u[n][1] > " " && u[n - 1][1] > " "; n >= 0; ) {
                                    if (u[n][1] <= " ") {
                                        if (d && n + 1 < this.cols && u[n + 1][1] > " ") {
                                            n++;
                                            break;
                                        }
                                        d = !0;
                                    }
                                    n--;
                                }
                                if (n < 0 && (n = 0), 0 !== n || !(u[n][1] <= " ") && d) break;
                                if (n = this.cols - 1, --s < 0 && (s++, --o < 0)) {
                                    o++, n = 0;
                                    break;
                                }
                            }
                            return this.x = n, this.y = s, this.scrollDisp(-this.ydisp + o), void (this.visualMode && this.selectText(a, this.x, i + r, this.ydisp + this.y));
                        }
                        if ("e" === t || "E" === t) {
                            var n = this.x + 1, s = this.y, o = this.ydisp;
                            for (n >= this.cols && n--; ;) {
                                for (var u = this.lines[o + s]; n < this.cols && u[n][1] <= " "; ) n++;
                                for (;n < this.cols; ) {
                                    if (u[n][1] <= " " && n - 1 >= 0 && u[n - 1][1] > " ") {
                                        n--;
                                        break;
                                    }
                                    n++;
                                }
                                if (n >= this.cols && (n = this.cols - 1), !(n === this.cols - 1 && u[n][1] <= " ")) break;
                                if (n = 0, ++s >= this.rows && (s--, ++o > this.ybase)) {
                                    o = this.ybase;
                                    break;
                                }
                            }
                            return this.x = n, this.y = s, this.scrollDisp(-this.ydisp + o), void (this.visualMode && this.selectText(a, this.x, i + r, this.ydisp + this.y));
                        }
                        if ("^" === t || "0" === t) {
                            var a = this.x;
                            if ("0" === t) this.x = 0; else if ("^" === t) {
                                for (var u = this.lines[this.ydisp + this.y], n = 0; n < this.cols && !(u[n][1] > " "); ) n++;
                                n >= this.cols && (n = this.cols - 1), this.x = n;
                            }
                            return void (this.visualMode ? this.selectText(a, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                        }
                        if ("$" === t) {
                            for (var a = this.x, u = this.lines[this.ydisp + this.y], n = this.cols - 1; n >= 0; ) {
                                if (u[n][1] > " ") {
                                    this.visualMode && n < this.cols - 1 && n++;
                                    break;
                                }
                                n--;
                            }
                            return n < 0 && (n = 0), this.x = n, void (this.visualMode ? this.selectText(a, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                        }
                        if ("g" === t || "G" === t) {
                            var a = this.x, i = this.y, r = this.ydisp;
                            return "g" === t ? (this.x = 0, this.y = 0, this.scrollDisp(-this.ydisp)) : "G" === t && (this.x = 0, 
                            this.y = this.rows - 1, this.scrollDisp(this.ybase)), void (this.visualMode && this.selectText(a, this.x, i + r, this.ydisp + this.y));
                        }
                        if ("H" === t || "M" === t || "L" === t) {
                            var a = this.x, i = this.y;
                            return "H" === t ? (this.x = 0, this.y = 0) : "M" === t ? (this.x = 0, this.y = this.rows / 2 | 0) : "L" === t && (this.x = 0, 
                            this.y = this.rows - 1), void (this.visualMode ? this.selectText(a, this.x, this.ydisp + i, this.ydisp + this.y) : (this.refresh(i, i), 
                            this.refresh(this.y, this.y)));
                        }
                        if ("{" === t || "}" === t) {
                            var u, l, a = this.x, i = this.y, r = this.ydisp, _ = !1, c = !1, h = -1, s = this.y + ("{" === t ? -1 : 1), o = this.ydisp;
                            for ("{" === t ? s < 0 && (s++, o > 0 && o--) : "}" === t && s >= this.rows && (s--, 
                            o < this.ybase && o++); ;) {
                                for (u = this.lines[o + s], l = 0; l < this.cols; l++) {
                                    if (u[l][1] > " ") {
                                        h === -1 && (h = 0), _ = !0;
                                        break;
                                    }
                                    if (l === this.cols - 1) {
                                        h === -1 ? h = 1 : 0 === h ? c = !0 : 1 === h && _ && (c = !0);
                                        break;
                                    }
                                }
                                if (c) break;
                                if ("{" === t) {
                                    if (s--, s < 0) {
                                        if (s++, !(o > 0)) break;
                                        o--;
                                    }
                                } else if ("}" === t && (s++, s >= this.rows)) {
                                    if (s--, !(o < this.ybase)) break;
                                    o++;
                                }
                            }
                            return c || ("{" === t ? (s = 0, o = 0) : "}" === t && (s = this.rows - 1, o = this.ybase)), 
                            this.x = 0, this.y = s, this.scrollDisp(-this.ydisp + o), void (this.visualMode && this.selectText(a, this.x, i + r, this.ydisp + this.y));
                        }
                        return ("/" === t || "?" === t) && void (this.visualMode || this.enterSearch("/" === t));
                    }
                    if (this.visualMode) {
                        var m = this.grabText(this._selected.x1, this._selected.x2, this._selected.y1, this._selected.y2);
                        this.copyText(m), this.leaveVisual();
                    }
                }
            }, r.prototype.keySearch = function(e, t) {
                if ("" === t) return void this.leaveSearch();
                if ("\r" === t || !this.searchMode && ("n" === t || "N" === t)) {
                    this.leaveSearch();
                    var s = this.entry;
                    if (!s) return void this.refresh(0, this.rows - 1);
                    for (var n, a, i, r = this.x, o = this.y, d = this.ydisp, u = !1, l = !1, _ = this.x + 1, c = this.ydisp + this.y, h = "N" === t ? this.searchDown : !this.searchDown; ;) {
                        for (n = this.lines[c]; _ < this.cols; ) {
                            for (i = 0; i < s.length && !(_ + i >= this.cols) && n[_ + i][1] === s[i]; i++) if (n[_ + i][1] === s[i] && i === s.length - 1) {
                                u = !0;
                                break;
                            }
                            if (u) break;
                            _ += i + 1;
                        }
                        if (u) break;
                        if (_ = 0, h) {
                            if (c--, c < 0) {
                                if (l) break;
                                l = !0, c = this.ybase + this.rows - 1;
                            }
                        } else if (c++, c > this.ybase + this.rows - 1) {
                            if (l) break;
                            l = !0, c = 0;
                        }
                    }
                    return u ? (c - this.ybase < 0 ? (a = c, c = 0, a > this.ybase && (c = a - this.ybase, 
                    a = this.ybase)) : (a = this.ybase, c -= this.ybase), this.x = _, this.y = c, this.scrollDisp(-this.ydisp + a), 
                    void (this.visualMode && this.selectText(r, this.x, o + d, this.ydisp + this.y))) : void this.refresh(0, this.rows - 1);
                }
                if ("\b" === t || "" === t) {
                    if (0 === this.entry.length) return;
                    var m = this.ydisp + this.rows - 1;
                    this.entry = this.entry.slice(0, -1);
                    var i = this.entryPrefix.length + this.entry.length;
                    return this.lines[m][i] = [ this.lines[m][i][0], " " ], this.x--, this.refresh(this.rows - 1, this.rows - 1), 
                    void this.refresh(this.y, this.y);
                }
                if (1 === t.length && t >= " " && t <= "~") {
                    var m = this.ydisp + this.rows - 1;
                    this.entry += t;
                    var i = this.entryPrefix.length + this.entry.length - 1;
                    return this.lines[m][i] = [ this.defAttr & -512 | 4, t ], this.x++, this.refresh(this.rows - 1, this.rows - 1), 
                    void this.refresh(this.y, this.y);
                }
                return !1;
            }, r.charsets = {}, r.charsets.SCLD = {
                "`": "◆",
                a: "▒",
                b: "\t",
                c: "\f",
                d: "\r",
                e: "\n",
                f: "°",
                g: "±",
                h: "␤",
                i: "\v",
                j: "┘",
                k: "┐",
                l: "┌",
                m: "└",
                n: "┼",
                o: "⎺",
                p: "⎻",
                q: "─",
                r: "⎼",
                s: "⎽",
                t: "├",
                u: "┤",
                v: "┴",
                w: "┬",
                x: "│",
                y: "≤",
                z: "≥",
                "{": "π",
                "|": "≠",
                "}": "£",
                "~": "·"
            }, r.charsets.UK = null, r.charsets.US = null, r.charsets.Dutch = null, r.charsets.Finnish = null, 
            r.charsets.French = null, r.charsets.FrenchCanadian = null, r.charsets.German = null, 
            r.charsets.Italian = null, r.charsets.NorwegianDanish = null, r.charsets.Spanish = null, 
            r.charsets.Swedish = null, r.charsets.Swiss = null, r.charsets.ISOLatin = null;
            var D = this.String, T = this.setTimeout;
            this.setInterval;
            m._cache = {}, m.distance = function(e, t, s, n, a, i) {
                return Math.pow(30 * (e - n), 2) + Math.pow(59 * (t - a), 2) + Math.pow(11 * (s - i), 2);
            }, r.EventEmitter = s, r.Stream = i, r.inherits = l, r.on = o, r.off = d, r.cancel = u, 
            n = [], a = function() {
                return r;
            }.apply(t, n), !(void 0 !== a && (e.exports = a));
        }).call(function() {
            return this || ("undefined" != typeof window ? window : s);
        }());
    }).call(t, function() {
        return this;
    }());
}, , function(e, t, s) {
    "use strict";
    function n(e) {
        if (e in r) return r[e];
        var t = document.createElement("div");
        t.innerHTML = e, a.translate(t);
        var s = t.innerHTML;
        return r[e] = s, s;
    }
    var a = s(3), i = s(8), r = {};
    e.exports = a.extend({}, i, {
        render: function(e, t, s) {
            return t || (t = {}), n(i.render(e, t, s));
        },
        to_html: function(e, t, s, a) {
            return t || (t = {}), n(i.to_html(e, t, s, a));
        },
        clearCache: function() {
            return r = {}, i.clearCache();
        }
    });
}, function(e, t, s) {
    var n, a, i;
    /*!
	 * mustache.js - Logic-less {{mustache}} templates with JavaScript
	 * http://github.com/janl/mustache.js
	 */
    !function(s, r) {
        "object" == typeof t && t && "string" != typeof t.nodeName ? r(t) : (a = [ t ], 
        n = r, i = "function" == typeof n ? n.apply(t, a) : n, !(void 0 !== i && (e.exports = i)));
    }(this, function(e) {
        function t(e) {
            return "function" == typeof e;
        }
        function s(e) {
            return f(e) ? "array" : typeof e;
        }
        function n(e) {
            return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
        }
        function a(e, t) {
            return null != e && "object" == typeof e && t in e;
        }
        function i(e, t) {
            return p.call(e, t);
        }
        function r(e) {
            return !i(M, e);
        }
        function o(e) {
            return String(e).replace(/[&<>"'`=\/]/g, function(e) {
                return y[e];
            });
        }
        function d(t, s) {
            function a() {
                if (M && !y) for (;p.length; ) delete m[p.pop()]; else p = [];
                M = !1, y = !1;
            }
            function i(e) {
                if ("string" == typeof e && (e = e.split(g, 2)), !f(e) || 2 !== e.length) throw new Error("Invalid tags: " + e);
                o = new RegExp(n(e[0]) + "\\s*"), d = new RegExp("\\s*" + n(e[1])), c = new RegExp("\\s*" + n("}" + e[1]));
            }
            if (!t) return [];
            var o, d, c, h = [], m = [], p = [], M = !1, y = !1;
            i(s || e.tags);
            for (var b, w, D, T, S, x, H = new _(t); !H.eos(); ) {
                if (b = H.pos, D = H.scanUntil(o)) for (var j = 0, P = D.length; j < P; ++j) T = D.charAt(j), 
                r(T) ? p.push(m.length) : y = !0, m.push([ "text", T, b, b + 1 ]), b += 1, "\n" === T && a();
                if (!H.scan(o)) break;
                if (M = !0, w = H.scan(v) || "name", H.scan(L), "=" === w ? (D = H.scanUntil(Y), 
                H.scan(Y), H.scanUntil(d)) : "{" === w ? (D = H.scanUntil(c), H.scan(k), H.scanUntil(d), 
                w = "&") : D = H.scanUntil(d), !H.scan(d)) throw new Error("Unclosed tag at " + H.pos);
                if (S = [ w, D, b, H.pos ], m.push(S), "#" === w || "^" === w) h.push(S); else if ("/" === w) {
                    if (x = h.pop(), !x) throw new Error('Unopened section "' + D + '" at ' + b);
                    if (x[1] !== D) throw new Error('Unclosed section "' + x[1] + '" at ' + b);
                } else "name" === w || "{" === w || "&" === w ? y = !0 : "=" === w && i(D);
            }
            if (x = h.pop()) throw new Error('Unclosed section "' + x[1] + '" at ' + H.pos);
            return l(u(m));
        }
        function u(e) {
            for (var t, s, n = [], a = 0, i = e.length; a < i; ++a) t = e[a], t && ("text" === t[0] && s && "text" === s[0] ? (s[1] += t[1], 
            s[3] = t[3]) : (n.push(t), s = t));
            return n;
        }
        function l(e) {
            for (var t, s, n = [], a = n, i = [], r = 0, o = e.length; r < o; ++r) switch (t = e[r], 
            t[0]) {
              case "#":
              case "^":
                a.push(t), i.push(t), a = t[4] = [];
                break;

              case "/":
                s = i.pop(), s[5] = t[2], a = i.length > 0 ? i[i.length - 1][4] : n;
                break;

              default:
                a.push(t);
            }
            return n;
        }
        function _(e) {
            this.string = e, this.tail = e, this.pos = 0;
        }
        function c(e, t) {
            this.view = e, this.cache = {
                ".": this.view
            }, this.parent = t;
        }
        function h() {
            this.cache = {};
        }
        var m = Object.prototype.toString, f = Array.isArray || function(e) {
            return "[object Array]" === m.call(e);
        }, p = RegExp.prototype.test, M = /\S/, y = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;",
            "/": "&#x2F;",
            "`": "&#x60;",
            "=": "&#x3D;"
        }, L = /\s*/, g = /\s+/, Y = /\s*=/, k = /\s*\}/, v = /#|\^|\/|>|\{|&|=|!/;
        _.prototype.eos = function() {
            return "" === this.tail;
        }, _.prototype.scan = function(e) {
            var t = this.tail.match(e);
            if (!t || 0 !== t.index) return "";
            var s = t[0];
            return this.tail = this.tail.substring(s.length), this.pos += s.length, s;
        }, _.prototype.scanUntil = function(e) {
            var t, s = this.tail.search(e);
            switch (s) {
              case -1:
                t = this.tail, this.tail = "";
                break;

              case 0:
                t = "";
                break;

              default:
                t = this.tail.substring(0, s), this.tail = this.tail.substring(s);
            }
            return this.pos += t.length, t;
        }, c.prototype.push = function(e) {
            return new c(e, this);
        }, c.prototype.lookup = function(e) {
            var s, n = this.cache;
            if (n.hasOwnProperty(e)) s = n[e]; else {
                for (var i, r, o = this, d = !1; o; ) {
                    if (e.indexOf(".") > 0) for (s = o.view, i = e.split("."), r = 0; null != s && r < i.length; ) r === i.length - 1 && (d = a(s, i[r])), 
                    s = s[i[r++]]; else s = o.view[e], d = a(o.view, e);
                    if (d) break;
                    o = o.parent;
                }
                n[e] = s;
            }
            return t(s) && (s = s.call(this.view)), s;
        }, h.prototype.clearCache = function() {
            this.cache = {};
        }, h.prototype.parse = function(e, t) {
            var s = this.cache, n = s[e];
            return null == n && (n = s[e] = d(e, t)), n;
        }, h.prototype.render = function(e, t, s) {
            var n = this.parse(e), a = t instanceof c ? t : new c(t);
            return this.renderTokens(n, a, s, e);
        }, h.prototype.renderTokens = function(e, t, s, n) {
            for (var a, i, r, o = "", d = 0, u = e.length; d < u; ++d) r = void 0, a = e[d], 
            i = a[0], "#" === i ? r = this.renderSection(a, t, s, n) : "^" === i ? r = this.renderInverted(a, t, s, n) : ">" === i ? r = this.renderPartial(a, t, s, n) : "&" === i ? r = this.unescapedValue(a, t) : "name" === i ? r = this.escapedValue(a, t) : "text" === i && (r = this.rawValue(a)), 
            void 0 !== r && (o += r);
            return o;
        }, h.prototype.renderSection = function(e, s, n, a) {
            function i(e) {
                return r.render(e, s, n);
            }
            var r = this, o = "", d = s.lookup(e[1]);
            if (d) {
                if (f(d)) for (var u = 0, l = d.length; u < l; ++u) o += this.renderTokens(e[4], s.push(d[u]), n, a); else if ("object" == typeof d || "string" == typeof d || "number" == typeof d) o += this.renderTokens(e[4], s.push(d), n, a); else if (t(d)) {
                    if ("string" != typeof a) throw new Error("Cannot use higher-order sections without the original template");
                    d = d.call(s.view, a.slice(e[3], e[5]), i), null != d && (o += d);
                } else o += this.renderTokens(e[4], s, n, a);
                return o;
            }
        }, h.prototype.renderInverted = function(e, t, s, n) {
            var a = t.lookup(e[1]);
            if (!a || f(a) && 0 === a.length) return this.renderTokens(e[4], t, s, n);
        }, h.prototype.renderPartial = function(e, s, n) {
            if (n) {
                var a = t(n) ? n(e[1]) : n[e[1]];
                return null != a ? this.renderTokens(this.parse(a), s, n, a) : void 0;
            }
        }, h.prototype.unescapedValue = function(e, t) {
            var s = t.lookup(e[1]);
            if (null != s) return s;
        }, h.prototype.escapedValue = function(t, s) {
            var n = s.lookup(t[1]);
            if (null != n) return e.escape(n);
        }, h.prototype.rawValue = function(e) {
            return e[1];
        }, e.name = "mustache.js", e.version = "2.3.2", e.tags = [ "{{", "}}" ];
        var b = new h();
        return e.clearCache = function() {
            return b.clearCache();
        }, e.parse = function(e, t) {
            return b.parse(e, t);
        }, e.render = function(e, t, n) {
            if ("string" != typeof e) throw new TypeError('Invalid template! Template should be a "string" but "' + s(e) + '" was given as the first argument for mustache#render(template, view, partials)');
            return b.render(e, t, n);
        }, e.to_html = function(s, n, a, i) {
            var r = e.render(s, n, a);
            return t(i) ? void i(r) : r;
        }, e.escape = o, e.Scanner = _, e.Context = c, e.Writer = h, e;
    });
}, , , function(e, t, s) {
    "use strict";
    !function() {
        function t(e, t, s, a, i) {
            function r(e) {
                return e < t ? e = t : e > s && (e = s), e;
            }
            function o() {
                p = f.checked ? r(Math.round(Math.exp(L + Y * h.value))) : void 0;
            }
            function d() {
                y = !0, void 0 !== p && n(h).prop("value", (Math.log(p) - L) / Y), n(h).attr("disabled", !f.checked).trigger("change"), 
                y = !1;
            }
            function u() {
                var e;
                e = f.checked ? r(a(n(m).val())) : void 0, isNaN(e) && (e = void 0), p = e;
            }
            function l() {
                y = !0, void 0 !== p && n(m).val(i(p)), n(m).attr("disabled", void 0 === p), y = !1;
            }
            function _() {
                f.checked || (p = void 0);
            }
            function c() {
                y = !0, n(f).prop("checked", void 0 !== p), y = !1;
            }
            var h, m, f, p, M = this, y = !1;
            t < 0 && (t = 0), s < 0 && (s = 0);
            var L = Math.log(t), g = Math.log(s), Y = g - L;
            return h = e.find("div.slider").on("change", function() {
                y || (o(), l());
            })[0], m = e.find("input.size-text-ct").on("change", function() {
                y || (u(), d());
            })[0], f = e.find("input[type='checkbox']").on("change", function() {
                y || (_(), this.checked && u(), d(), l());
            })[0], Object.defineProperty(M, "value", {
                get: function() {
                    return p;
                },
                set: function(e) {
                    p = e, c(), d(), l();
                }
            }), Object.defineProperty(M, "max", {
                get: function() {
                    return s;
                },
                set: function(e) {
                    e < 0 && (e = 0), s = e, g = Math.log(s), Y = g - L, h && d();
                }
            }), M;
        }
        var n = s(2), a = s(3), i = s(7);
        s(12);
        var r = s(4), o = s(13), d = s(14), u = s(18);
        u.locale(a.language);
        var l = a.gettext, _ = {};
        _.resource_debug = function() {
            "all" != window.debugging && "resource" != window.debugging || console.debug.apply(console, arguments);
        }, _.docker_debug = function() {
            "all" != window.debugging && "docker" != window.debugging || console.debug.apply(console, arguments);
        }, _.quote_cmdline = function(e) {
            return r.quote_cmdline(e || []);
        }, _.unquote_cmdline = function(e) {
            return r.unquote_cmdline(e);
        }, _.render_container_cmdline = function(e) {
            return e.Config ? _.quote_cmdline((e.Config.Entrypoint || []).concat(e.Config.Cmd || [])) : e.Command;
        }, _.render_container_status = function(e) {
            return e.Status ? e.Status : e.Running ? "running" : e.Paused ? "paused" : e.Restarting ? "restarting" : e.FinishedAt && 0 === e.FinishedAt.indexOf("0001") ? "created" : "exited";
        }, _.render_container_name = function(e) {
            return e.length > 0 && "/" == e[0] ? e.slice(1) : e;
        }, _.render_container_state = function(e) {
            if (e.Running) {
                var t = u(e.StartedAt);
                return a.format(l("Up since $0"), t.isValid() ? t.calendar() : e.startedAt);
            }
            return a.format(l("Exited $ExitCode"), e);
        }, _.render_container_restart_policy = function(e) {
            switch (e.Name) {
              case "no":
                return l("No");

              case "on-failure":
                var t = a.ngettext("On failure, retry $0 time", "On failure, retry $0 times", e.MaximumRetryCount);
                return a.format(t, e.MaximumRetryCount);

              case "always":
                return l("Always");

              case "unless-stopped":
                return l("Unless Stopped");

              default:
                return e.Name.replace("-", " ").replace(/\w\S*/g, function(e) {
                    return e.charAt(0).toUpperCase() + e.substr(1).toLowerCase();
                });
            }
        }, _.multi_line = function(e) {
            return e.map(function(e) {
                return i.render("{{.}}", e);
            }).join("<br/>");
        }, _.format_cpu_shares = function(e) {
            return e ? a.format(l("$0 shares"), Math.round(e)) : l("default");
        }, _.format_cpu_usage = function(e) {
            return void 0 === e || isNaN(e) ? "" : Math.round(e) + "%";
        }, _.update_memory_bar = function(e, t, s) {
            var a = [ t ];
            s && a.push(s), n(e).attr("value", a.join("/")).toggleClass("bar-row-danger", !!(s && t > .9 * s));
        }, _.format_memory_and_limit = function(e, t) {
            if (void 0 === e || isNaN(e)) return "";
            var s, n = "", i = 1024;
            return t && (s = a.format_bytes(t, i, !0), n = " / " + s.join(" "), i = s[1]), e ? (s = a.format_bytes(e, i, !0), 
            n ? s[0] + n : s.join(" ")) : "?" + n;
        }, _.insert_table_sorted = function(e, t) {
            _.insert_table_sorted_generic(e, t, function(e, t) {
                return e.text().localeCompare(t.text());
            });
        }, _.insert_table_sorted_generic = function(e, t, s) {
            for (var a = n(e).find("tbody tr"), i = 0; i < a.length; i++) if (s(n(a[i]), t) > 0) {
                n(t).insertBefore(a[i]), t = null;
                break;
            }
            null !== t && n(e).find("tbody").append(t);
        }, _.setup_danger_button = function(e, t, s) {
            var a = n('<button class="btn btn-default btn-control-ct fa fa-check enable-danger">').toggle(!1).on("click", s);
            n(e + " th.container-column-actions").append(a), n(t)[0].addEventListener("click", function(t) {
                0 === n(t.target).parents(e).length && n(e + " button.enable-danger").hasClass("active") && s();
            }, !0);
        }, _.render_container = function(e, t, s, i, d, u) {
            var c = n(document.getElementById(s + i));
            if (!d) return c.remove(), void (t.find("table > tbody > tr").length || t.find("button.enable-danger").toggle(!1));
            var h, m, f, p, M, y;
            d.State && d.State.Running ? (h = _.format_cpu_usage(d.CpuUsage), m = d.MemoryUsage, 
            f = d.MemoryLimit, M = _.format_memory_and_limit(m, f), p = !0, y = {
                color: "inherit"
            }) : (h = "", p = !1, M = l("Stopped"), y = {
                color: "grey",
                "text-align": "right"
            });
            var L = !1;
            if (!c.length) {
                t.find("button.enable-danger").toggle(!0);
                var g = n('<div class="spinner">'), Y = n('<button class="btn btn-danger pficon pficon-delete btn-delete">').on("click", function() {
                    var t = this;
                    return n(t).hide().siblings("div.spinner").show(), _.docker_container_delete(e, i, function() {}, function() {
                        n(t).show().siblings("div.spinner").hide();
                    }), !1;
                }), k = n('<button class="btn btn-default btn-control-ct fa fa-play">').on("click", function() {
                    return n(this).hide().siblings("div.spinner").show(), e.start(i).fail(function(t) {
                        _.handle_scope_start_container(e, i, t.message);
                    }), !1;
                }), v = n('<button class="btn btn-default btn-control-ct fa fa-stop">').on("click", function() {
                    return n(this).hide().siblings("div.spinner").show(), e.stop(i).fail(function(e) {
                        _.show_unexpected_error(e);
                    }), !1;
                });
                c = n("<tr>", {
                    id: s + i
                }).append(n('<td class="container-column-name">'), n('<td class="container-column-image">'), n('<td class="container-column-command">'), n('<td class="container-column-cpu">'), n('<td class="container-column-memory-graph">').append(o.create("containers-containers")), n('<td class="container-column-memory-text">'), n('<td class="container-column-danger cell-buttons">').append(Y, g), n('<td class="container-column-actions cell-buttons">').append(k, v, g.clone())), 
                c.on("click", function(e) {
                    a.location.go([ i ]);
                }), L = !0;
            }
            var b = c.children("td");
            n(b[0]).text(_.render_container_name(d.Name));
            var w = d.Image;
            d.ImageID && w == d.ImageID && (w = r.truncate_id(w)), n(b[1]).text(w), n(b[2]).text(_.render_container_cmdline(d)), 
            n(b[3]).text(h), _.update_memory_bar(n(b[4]).children("div").toggle(p), m, f), n(b[5]).css(y).text(M);
            var D = i in e.waiting;
            n(b[6]).children("div.spinner").toggle(D), n(b[6]).children("button.btn-delete").toggle(!D).toggleClass("disabled", d.State.Running);
            var T = D || d.State.Running ? "You can only delete<br/> stopped containers" : "Delete immediately";
            n(b[6]).children("button.btn-delete").tooltip("destroy").attr("title", T).tooltip({
                html: !0
            }), n(b[7]).children("div.spinner").toggle(D), n(b[7]).children("button.fa-play").toggle(!D && !d.State.Running), 
            n(b[7]).children("button.fa-stop").toggle(!D && d.State.Running), n(b[6]).toggle(u), 
            n(b[7]).toggle(!u), c.toggleClass("unimportant", !d.State.Running), L && _.insert_table_sorted(t.find("table"), c), 
            o.update();
        }, _.MemorySlider = function(e, s, n) {
            function i(e) {
                return 1024 * parseInt(e, 10) * 1024;
            }
            function r(e) {
                return a.format_bytes(e, "MiB", !0)[0];
            }
            return new t(e, s, n, i, r);
        }, _.CpuSlider = function(e, s, n) {
            function a(e) {
                return parseInt(e, 10);
            }
            function i(e) {
                return String(e);
            }
            return new t(e, s, n, a, i);
        }, _.docker_container_delete = function(e, t, s, n) {
            e.rm(t).fail(function(i) {
                if (i.message.indexOf("remove a running container") > -1) {
                    var r, o = e.containers[t];
                    r = o.State.Running ? l("Container is currently running.") : l("Container is currently marked as not running, but regular stopping failed.") + " " + l("Error message from Docker:") + " '" + i.message + "'";
                    var d;
                    return d = o.Name ? o.Name : t, "/" === d.charAt(0) && (d = d.substring(1)), void _.confirm(a.format(l("Please confirm forced deletion of $0"), d), r, l("Force Delete")).done(function() {
                        e.rm(t, !0).fail(function(e) {
                            _.show_unexpected_error(e), n();
                        }).done(s);
                    }).fail(n);
                }
                _.show_unexpected_error(i), n();
            }).done(s);
        }, _.handle_scope_start_container = function(e, t, s, n, i) {
            var r = ".scope already exists", o = s.indexOf(r);
            if (o > -1) {
                var d = "Unit docker-", u = s.indexOf(d) + d.length, c = s.substring(u, o);
                return void a.spawn([ "systemctl", "stop", "docker-" + c + ".scope" ], {
                    superuser: "try"
                }).done(function() {
                    e.start(t).fail(function(e) {
                        i && i();
                    }).done(function() {
                        n && n();
                    });
                }).fail(function(e) {
                    _.show_unexpected_error(a.format(l("Failed to stop Docker scope: $0"), e)), i && i();
                });
            }
            _.show_unexpected_error(s), i && i();
        }, _.show_unexpected_error = function(e) {
            n("#error-popup-message").text(e.message || e || "???"), n('.modal[role="dialog"]').modal("hide"), 
            n("#error-popup").modal("show");
        }, _.confirm = function(e, t, s) {
            function a() {
                n("#confirmation-dialog button").off("click"), n("#confirmation-dialog").modal("hide");
            }
            var i = n.Deferred();
            return n("#confirmation-dialog-title").text(e), "string" == typeof t ? n("#confirmation-dialog-body").text(t) : n("#confirmation-dialog-body").html(t), 
            n("#confirmation-dialog-confirm").text(s), n("#confirmation-dialog-confirm").click(function() {
                a(), i.resolve();
            }), n("#confirmation-dialog-cancel").click(function() {
                a(), i.reject();
            }), n("#confirmation-dialog").modal("show"), i.promise();
        }, _.delete_image_confirm = function(e, t) {
            var s = n.Deferred(), i = t.image_id || t.Id, r = t.name || _.render_container_name(t.RepoTags[0]), o = n("#delete-image-confirmation-dialog");
            return o.find("#delete-image-confirmation-dialog-title").text(a.format(l("Please confirm deletion of $0"), r)), 
            o.find("#delete-image-confirmation-dialog-containers .listing-ct-body").empty(), 
            e.containers_for_image(i).then(function(t) {
                function a() {
                    o.find("button").off("click"), o.modal("hide");
                }
                var i = [];
                n(t).each(function(t, s) {
                    var a = e.containers[s.Id], r = n("<tr />", {
                        class: "listing-ct-item"
                    }).append(n("<td />").text(a.Name.startsWith("/") ? a.Name.substring(1) : a.Name)).append(n("<td />").text(_.render_container_status(a.State)));
                    o.find("#delete-image-confirmation-dialog-containers .listing-ct-body").append(r), 
                    a.State.Running && i.push(a.Id);
                }), t.length > 0 ? (o.find("#delete-image-confirmation-dialog-body").text(l("The following containers depend on this image and will become unusable.")), 
                o.find("#delete-image-confirmation-dialog-containers").show()) : (o.find("#delete-image-confirmation-dialog-body").empty(), 
                o.find("#delete-image-confirmation-dialog-containers").hide()), i.length > 0 ? o.find("#delete-image-confirmation-dialog-confirm").text(l("Stop and delete")) : o.find("#delete-image-confirmation-dialog-confirm").text(l("Delete")), 
                o.find("#delete-image-confirmation-dialog-confirm").click(function() {
                    a(), s.resolve(i, t.length > 0);
                }), o.find("#delete-image-confirmation-dialog-cancel").click(function() {
                    a(), s.reject();
                }), o.modal("show");
            }), s.promise();
        }, _.find_container_log = function(e, t, s) {
            e.call(t, "org.freedesktop.DBus.Properties", "GetAll", [ "org.freedesktop.Problems2.Entry" ]).fail(function(e) {
                console.log(e);
            }).done(function(n) {
                e.call(t, "org.freedesktop.Problems2.Entry", "ReadElements", [ [ "container_id" ], 4 ]).fail(function(e) {
                    console.log(e);
                }).done(function(e) {
                    if ("container_id" in e[0]) {
                        var t = n[0].ID.v;
                        window.setTimeout(_.problem_log, 2e3, 0, t, e[0].container_id.v, s);
                    }
                });
            });
        }, _.problem_log = function(e, t, s, n) {
            var i = null, r = "", o = [], u = !1;
            o.push("SYSLOG_IDENTIFIER=abrt-notification"), o.push("PROBLEM_DIR=" + t), d.journalctl(o, {
                follow: !1,
                reverse: !0,
                all: !0
            }).stream(function(e) {
                u = !0, i = a.location.encode(e[0].__CURSOR), i = "/system/logs#" + i, r = e[0].PROBLEM_REASON ? e[0].PROBLEM_REASON : e[0].MESSAGE, 
                n(s, i, r);
            }).done(function() {
                u || (e < 30 ? window.setTimeout(_.problem_log, 2e3, ++e, t, s, n) : console.warn("No journal log found for problem " + t));
            });
        }, _.find_all_problems = function(e, t, s, n) {
            e.wait(function() {
                try {
                    s.GetProblems(0, {}).done(function(e, s) {
                        for (var a in e) _.find_container_log(t, e[a], n);
                    });
                } catch (e) {}
            });
        }, e.exports = _;
    }();
}, function(e, t, s) {
    "use strict";
    !function() {
        function e() {
            return L += 1, "unique" + -new Date() + -L;
        }
        function t(e) {
            e.find(".dialog-error").remove(), e.find(".has-error").removeClass("has-error"), 
            e.find(".dialog-wrapper").off(".dialog-error"), e.off(".dialog-error");
        }
        function n(e, t) {
            var s, n, a = e.parent();
            a.is(".dialog-wrapper") || (a = M("<div class='dialog-wrapper'>").insertBefore(e), 
            s = e.next(), s.is(".bootstrap-select") && s.selectpicker && (s.remove(), n = s.selectpicker), 
            e.remove().appendTo(a), n && n.call(e));
            var i;
            t.message && (i = M("<div class='dialog-error help-block'>").text(t.message)), a.addClass("has-error").append(i), 
            a.hasClass("error-keep") || a.on("keypress.dialog-error change.dialog-error", function() {
                a.removeClass("has-error").find(".dialog-error.help-block").css("visibility", "hidden");
            });
        }
        function a(e, t) {
            var s = M("<div class='alert alert-danger dialog-error'>"), n = t.message || t.toString();
            s.text(n), M("<span class='fa fa-exclamation-triangle'>").prependTo(s), console.warn(n);
            var a = e.find(".modal-footer");
            a.length ? s.prependTo(a) : s.appendTo(e);
        }
        function i(e, s) {
            t(e), 1 == s.length && M.isArray(s[0]) && (s = s[0]);
            var i = !1;
            s.forEach(function(t) {
                var s;
                t && (s = e.find(t.target), s && s.length ? n(s, t) : a(e, t), i = !0);
            }), i && e.on("show.bs.modal.dialog-error", function() {
                t(e);
            });
        }
        function r(e, t) {
            this.promise = e, this.disabled = [], this.handle = t;
        }
        function o(e) {
            var t = e.data("dialog-wait");
            e.data("dialog-wait", null), e.find(".dialog-wait-ct").remove(), e.find(".btn").off(".dialog-wait"), 
            e.off(".dialog-wait"), t && t.disabled.forEach(function(e) {
                e.removeAttr("disabled");
            });
        }
        function d(e, t, s) {
            function n() {
                var s, n = e.data("dialog-wait");
                n && n.promise === t && (o(e), s = t.state(), c || "resolved" == s && n.handle ? e.modal("hide") : "rejected" == s && n.handle && i(e, [ arguments[0] ]));
            }
            function a(s) {
                var n = e.data("dialog-wait");
                n && n.promise === t && ("string" != typeof s && (s = ""), u.text(s));
            }
            if (o(e), !t) return s && e.modal("hide"), e;
            s && i(e, []);
            var d = M("<div class='dialog-wait-ct pull-left'>");
            M("<div class='spinner spinner-sm'>").appendTo(d);
            var u = M("<span>").appendTo(d);
            e.find(".modal-footer button").first().before(d);
            var l = new r(t, s);
            e.data("dialog-wait", l);
            var _ = t.cancel || t.close, c = !1, h = e.find(".form-control").add(".btn", e);
            return _ && (h = h.not("[data-dismiss]").not(".btn-cancel")), h.each(function() {
                var e = M(this);
                e.attr("disabled") || (l.disabled.push(e), e.attr("disabled", "disabled"));
            }), e.find(".btn[data-dismiss], .btn-cancel").on("click.dialog-wait", function() {
                return c = !0, _ && _.apply(t), !1;
            }), e.on("hide.bs.modal.dialog-wait", function() {
                o(e);
            }), t.always(n).progress(a), e;
        }
        function u(t) {
            var s = y.gettext || function(e) {
                return e;
            };
            return t = t.find(".btn-onoff-ct").addBack().filter(".btn-onoff-ct"), t.each(function(t, n) {
                var a, i, r, o = M(n).attr("data-toggle", "buttons").addClass("btn-group"), d = o.onoff("value"), u = o.find(".btn"), l = o.find("input").first().attr("name") || e();
                for (a = u.length; a < 2; a++) i = M('<input type="radio" autocomplete="off">'), 
                r = document.createTextNode(s(0 === a ? "On" : "Off")), o.append(M('<label class="btn">').append(i, r)), 
                u = null;
                u = u || o.find(".btn"), u.find("input").attr("name", l), _(o, !!d);
            }), t;
        }
        function l(e) {
            return e.find(".btn").first().hasClass("active");
        }
        function _(e, t) {
            return e.each(function(e, s) {
                var n = M(s).find(".btn");
                n.first().toggleClass("active", !!t).find("input").prop("checked", !!t), n.last().toggleClass("active", !t).find("input").prop("checked", !t);
            });
        }
        function c(e, t, s, n) {
            var a = 0;
            n > s ? a = 1 : n < 0 || isNaN(n) ? a = 0 : !isNaN(s) && s > 0 && n >= 0 && (a = n / s), 
            M(t).css("width", 100 * a + "%").next("div").css("margin-left", M(t).css("width")), 
            e.value = a;
        }
        function h(e) {
            c(e, M(e).children("div.slider-bar").first()[0], 1, e.value);
        }
        function m(e) {
            M(e).toggleClass("slider-warning", e.offsetWidth < e.scrollWidth);
        }
        function f(e) {
            M(e).attr("unselectable", "on"), Object.defineProperty(e, "value", {
                get: function() {
                    return parseFloat(this.getAttribute("value"));
                },
                set: function(t) {
                    var s = String(t);
                    s != this.getAttribute("value") && (this.setAttribute("value", t), h(e), m(e));
                }
            }), Object.defineProperty(e, "disabled", {
                get: function() {
                    return !!this.hasAttribute("disabled") && "false" != this.getAttribute("disabled").toLowerCase();
                },
                set: function(e) {
                    this.setAttribute("disabled", e ? "true" : "false");
                }
            }), h(e), m(e), M(e).on("change", function() {
                h(e), M(e).toggleClass("slider-disabled", e.disabled);
            }), e.disabled && M(e).addClass("slider-disabled"), M(e).on("mousedown", function(t) {
                if (e.disabled) return !0;
                var s, n = M(e).offset().left;
                if (M(t.target).hasClass("slider-thumb")) {
                    var a = t.offsetX || t.clientX - M(t.target).offset().left;
                    n += a - M(t.target).outerWidth() / 2, s = M(t.target).parent()[0];
                } else s = M(e).children("div.slider-bar").first()[0], c(e, s, M(e).width(), t.pageX - n), 
                M(e).trigger("change", [ e.value ]), m(e);
                return M(document).on("mousemove.slider", function(t) {
                    return c(e, s, M(e).width(), t.pageX - n), M(e).trigger("change", [ e.value ]), 
                    m(e), !1;
                }).on("mouseup.slider", function(e) {
                    return M(document).off("mousemove.slider").off("mouseup.slider"), !1;
                }), !1;
            });
        }
        function p() {
            M("div.slider").each(function() {
                f(this);
            });
        }
        var M = s(2), y = s(3), L = 0;
        M.fn.dialog = function(e) {
            return "failure" === e ? i(this, Array.prototype.slice.call(arguments, 1)) : "wait" === e ? d(this, arguments[1]) : "promise" === e ? d(this, arguments[1], !0) : void console.warn("unknown dialog action: " + e);
        }, window.addEventListener("hashchange", function() {
            M(".modal").modal("hide");
        }), M.fn.onoff = function(e) {
            return 0 === arguments.length || "refresh" == e ? u(this) : "value" === e ? 1 === arguments.length ? l(this) : _(this, arguments[1]) : "disabled" == e ? this.find(".btn").toggleClass("disabled", arguments[1]) : void console.warn("unknown switch action: " + e);
        }, M.fn.slider = function(e) {
            var t = this;
            return 0 === arguments.length || "refresh" == e ? (t.each(function() {
                f(this);
            }), t) : void console.warn("unknown slider action: " + e);
        }, M(document).ready(p), M.fn.update_privileged = function(e, t, s, n) {
            var a = e.allowed !== !1, i = this;
            return n || (n = M(this)), i.each(function() {
                var e = "allowed-title";
                "undefined" != typeof M(this).data(e) && M(this).data(e) !== !1 || M(this).data(e, M(this).attr("title") || "");
                var i = {
                    html: !0
                };
                s && (i.placement = s), n.tooltip(i), M(this).hasClass("disabled") === a && (M(this).toggleClass("disabled", !a), 
                n.attr("data-original-title", null), a ? n.attr("title", M(this).data(e)) : n.attr("title", t), 
                n.tooltip("fixTitle")), M(this).attr("data-stable", "yes");
            }), i;
        };
    }();
}, function(e, t, s) {
    "use strict";
    !function() {
        function t(e, t) {
            function s(e) {
                var t = r(e).attr("value");
                if (void 0 === t) return [ NaN ];
                var s = t.split("/", 2), n = parseInt(s[0], 10);
                if (1 == s.length) return [ n ];
                var a = parseInt(s[1], 10);
                return !isNaN(a) && n > a && (n = a), n < 0 && (n = 0), [ n, a ];
            }
            var n;
            if (e) {
                var a = "div.bar-row[graph='" + e + "']";
                n = r(a);
            } else n = r(t ? t : []);
            var i = 0;
            if (n.each(function() {
                var e = s(this).pop();
                !isNaN(e) && e > i && (i = e);
            }), e) {
                var o = 104857600;
                i = i - i % o + o;
            }
            n.each(function() {
                var e = s(this), t = e.shift(), n = e.pop();
                if (isNaN(t) || 0 === n) r(this).css("visibility", "hidden"); else {
                    var a = r(this).data("bar-progress");
                    isNaN(n) ? (a.addClass("progress-no-limit"), n = t) : a.removeClass("progress-no-limit"), 
                    r(this).css("visibility", "visible"), a.css("width", n / i * 100 + "%"), r(this).data("bar-progress-bar").css("width", t / n * 100 + "%").toggle(t > 0);
                }
            });
        }
        function n(e, s) {
            return void 0 === e && s && (e = r(s).attr("graph")), e ? ("undefined" !== o[e] && window.clearTimeout(o[e]), 
            void (o[e] = window.setTimeout(function() {
                delete o[e], t(e);
            }, 10))) : void t(void 0, s);
        }
        function a(e) {
            var s = r("<div>").addClass("progress-bar"), a = r("<div>").addClass("progress").append(s);
            r(e).addClass("bar-row").append(a).data("bar-progress", a).data("bar-progress-bar", s), 
            e.reflow = function() {
                t(this.getAttribute("graph"), this);
            }, n(void 0, e);
        }
        function i() {
            r("div.bar-row").each(function() {
                a(this, !1);
            });
        }
        var r = s(2), o = {};
        r(document).ready(i), e.exports = {
            create: function(e) {
                var t = r("<div>").addClass("bar-row").attr("graph", e);
                return a(t), t;
            },
            update: function() {
                r("div.bar-row").each(function() {
                    n(this.getAttribute("graph"), this);
                });
            }
        };
    }();
}, function(e, t, s) {
    "use strict";
    !function() {
        function t(e) {
            function t(e, t, s, n, i, o) {
                var d = {
                    cursor: o.__CURSOR,
                    time: i,
                    message: s,
                    service: e
                };
                return n > 1 && (d.count = n), "abrt-notification" === e ? (d.problem = !0, d.service = o.PROBLEM_BINARY) : t < 4 && (d.warning = !0), 
                a.render(r, d);
            }
            function s() {
                return _;
            }
            function n(e) {
                return a.render(i, {
                    day: e
                });
            }
            function u(e) {
                var t = document.createElement("div");
                return t.innerHTML = e.trim(), t.children[0];
            }
            e.jquery && (e = e[0]), a.parse(i), a.parse(r), a.parse(o);
            var l = d("Reboot"), _ = a.render(o, {
                message: l
            });
            return {
                render_line: t,
                render_day_header: n,
                render_reboot_separator: s,
                append: function(t) {
                    "string" == typeof t && (t = u(t)), e.appendChild(t);
                },
                prepend: function(t) {
                    "string" == typeof t && (t = u(t)), e.firstChild ? e.insertBefore(t, e.firstChild) : e.appendChild(t);
                },
                remove_last: function() {
                    e.lastChild && e.removeChild(e.lastChild);
                },
                remove_first: function() {
                    e.firstChild && e.removeChild(e.firstChild);
                }
            };
        }
        var n = s(3), a = s(7), i = s(15), r = s(16), o = s(17), d = n.gettext, u = n.gettext, l = {};
        l.journalctl = function() {
            function e() {
                var e, t;
                if (_.length && l.length > 0) for (e = l, l = [], t = 0; t < _.length; t++) _[t].apply(o, [ e ]); else window.clearInterval(c), 
                c = null;
            }
            var t, s, a = [], i = {
                follow: !0
            };
            for (t = 0; t < arguments.length; t++) if (s = arguments[t], "string" == typeof s) a.push(s); else if ("object" == typeof s) {
                if (!(s instanceof Array)) {
                    n.extend(i, s);
                    break;
                }
                a.push.apply(a, s);
            } else console.warn("journal.journalctl called with invalid argument:", s);
            void 0 === i.count && (i.follow ? i.count = 10 : i.count = null);
            var r = [ "journalctl", "-q", "--output=json" ];
            i.count ? r.push("--lines=" + i.count) : r.push("--no-tail"), i.directory && r.push("--directory=" + i.directory), 
            i.boot ? r.push("--boot=" + i.boot) : void 0 !== i.boot && r.push("--boot"), i.since && r.push("--since=" + i.since), 
            i.until && r.push("--until=" + i.until), i.cursor && r.push("--cursor=" + i.cursor), 
            i.after && r.push("--after=" + i.after), i.reverse ? r.push("--reverse") : i.follow && r.push("--follow"), 
            r.push("--"), r.push.apply(r, a);
            var o, d = new n.defer(), u = "", l = [], _ = [], c = null, h = n.spawn(r, {
                host: i.host,
                batch: 8192,
                latency: 300,
                superuser: "try"
            }).stream(function(t) {
                u && (t = u + t), u = "";
                var s = t.split("\n"), n = s.length - 1;
                s.forEach(function(e, t) {
                    if (t == n) u = e; else if (e && 0 !== e.indexOf("-- ")) try {
                        l.push(JSON.parse(e));
                    } catch (t) {
                        console.warn(t, e);
                    }
                }), _.length && null === c && (c = window.setInterval(e, 300));
            }).done(function() {
                e(), d.resolve(l);
            }).fail(function(t) {
                "cancelled" == t.problem || 1 === t.exit_status ? (e(), d.resolve(l)) : d.reject(t);
            }).always(function() {
                window.clearInterval(c);
            });
            return o = d.promise(), o.stream = function(e) {
                return _.push(e), this;
            }, o.stop = function() {
                h.close("cancelled");
            }, o;
        }, l.printable = function(e) {
            return void 0 === e || null === e ? d("[no data]") : "string" == typeof e ? e : void 0 !== e.length ? n.format(d("[$0 bytes of binary data]"), e.length) : d("[binary data]");
        };
        var _ = [ u("month-name", "January"), u("month-name", "February"), u("month-name", "March"), u("month-name", "April"), u("month-name", "May"), u("month-name", "June"), u("month-name", "July"), u("month-name", "August"), u("month-name", "September"), u("month-name", "October"), u("month-name", "November"), u("month-name", "December") ];
        l.renderer = function(e) {
            function s(e) {
                var t = {};
                for (var s in e) t[s] = e[s];
                return t;
            }
            function n(e) {
                function t(e) {
                    var t = e.toFixed();
                    return 1 == t.length && (t = "0" + t), t;
                }
                var s = new Date(e.__REALTIME_TIMESTAMP / 1e3);
                return {
                    cursor: e.__CURSOR,
                    full: e,
                    day: _[s.getMonth()] + " " + s.getDate().toFixed() + ", " + s.getFullYear().toFixed(),
                    time: t(s.getHours()) + ":" + t(s.getMinutes()),
                    bootid: e._BOOT_ID,
                    ident: e.SYSLOG_IDENTIFIER || e._COMM,
                    prio: e.PRIORITY,
                    message: l.printable(e.MESSAGE)
                };
            }
            function a(e, t) {
                return e && t && e.day == t.day && e.bootid == t.bootid && e.ident == t.ident && e.prio == t.prio && e.message == t.message;
            }
            function i(e) {
                return f.render_line(e.entry.ident, e.entry.prio, e.entry.message, e.count, e.last_time, e.entry.full);
            }
            function r() {
                p === M && p.entry && (p = s(M));
            }
            function o() {
                p.header_present && (f.remove_first(), p.header_present = !1), p.line_present && (f.remove_first(), 
                p.line_present = !1), p.entry && (f.prepend(i(p)), p.line_present = !0);
            }
            function d(e) {
                var t = n(e);
                a(p.entry, t) ? (p.count += 1, p.first_time = t.time) : (o(), p.entry && (t.bootid != p.entry.bootid && f.prepend(f.render_reboot_separator()), 
                t.day != p.entry.day && f.prepend(f.render_day_header(p.entry.day))), r(), p.entry = t, 
                p.count = 1, p.first_time = p.last_time = t.time, p.line_present = !1);
            }
            function u() {
                o(), p.entry && (f.prepend(f.render_day_header(p.entry.day)), p.header_present = !0);
            }
            function c() {
                M.line_present && (f.remove_last(), M.line_present = !1), M.entry && (f.append(i(M)), 
                M.line_present = !0);
            }
            function h(e) {
                var t = n(e);
                a(M.entry, t) ? (M.count += 1, M.last_time = t.time) : (c(), M.entry && t.day == M.entry.day || (f.append(f.render_day_header(t.day)), 
                M.header_present = !0), M.entry && t.bootid != M.entry.bootid && f.append(f.render_reboot_separator()), 
                r(), M.entry = t, M.count = 1, M.first_time = M.last_time = t.time, M.line_present = !1);
            }
            function m() {
                c();
            }
            var f;
            f = e.render_line ? e : t(e);
            var p, M;
            return p = M = {}, {
                prepend: d,
                prepend_flush: u,
                append: h,
                append_flush: m
            };
        }, l.logbox = function(e, t) {
            function s() {
                for (var e = l.renderer(a); a.firstChild; ) a.removeChild(a.firstChild);
                for (var t = 0; t < n.length; t++) e.prepend(n[t]);
                e.prepend_flush(), n.length > 0 ? a.removeAttribute("hidden") : a.setAttribute("hidden", "hidden");
            }
            var n = [], a = document.createElement("div");
            s();
            var i = l.journalctl(e, {
                count: t
            }).stream(function(e) {
                n = n.concat(e), n.length > t && (n = n.slice(-t)), s();
            }).fail(function(e) {
                a.appendChild(document.createTextNode(e.message)), a.removeAttribute("hidden");
            });
            return i.promise(a);
        }, e.exports = l;
    }();
}, function(e, t) {
    e.exports = '<div class="panel-heading">{{day}}</div>\n';
}, function(e, t) {
    e.exports = '<div class="cockpit-logline" data-cursor="{{cursor}}" role="row">\n  <div class="cockpit-log-warning" role="cell">{{#warning}}\n    <i class="fa fa-exclamation-triangle"></i>\n  {{/warning}}{{#problem}}\n    <i class="fa fa-times-circle-o"></i>\n  {{/problem}}\n  </div>\n  <div class="cockpit-log-time" role="cell">{{time}}</div>\n  <span class="cockpit-log-message" role="cell">{{message}}</span>\n  {{! if we have count (repeated messages), show service name and badge - otherwise just the service }}\n  {{#count}}\n  <div class="cockpit-log-service-container" role="cell">\n    <div class="cockpit-log-service-reduced">{{service}}</div>\n    <span class="badge">{{count}}&#160;<i class="fa fa-caret-right"></i></span>\n  </div>\n  {{/count}}{{^count}}\n  <div class="cockpit-log-service" role="cell">{{service}}</div>\n  {{/count}}\n</div>\n';
}, function(e, t) {
    e.exports = '<div class="cockpit-logline" role="row">\n  {{! placeholders for correct message alignment }}\n  <div class="cockpit-log-warning" role="cell"></div>\n  <span class="cockpit-log-message cockpit-logmsg-reboot" role="cell">{{message}}</span>\n</div>\n';
}, function(e, t, s) {
    (function(e) {
        !function(t, s) {
            e.exports = s();
        }(this, function() {
            "use strict";
            function t() {
                return xn.apply(null, arguments);
            }
            function n(e) {
                xn = e;
            }
            function a(e) {
                return e instanceof Array || "[object Array]" === Object.prototype.toString.call(e);
            }
            function i(e) {
                return null != e && "[object Object]" === Object.prototype.toString.call(e);
            }
            function r(e) {
                if (Object.getOwnPropertyNames) return 0 === Object.getOwnPropertyNames(e).length;
                var t;
                for (t in e) if (e.hasOwnProperty(t)) return !1;
                return !0;
            }
            function o(e) {
                return void 0 === e;
            }
            function d(e) {
                return "number" == typeof e || "[object Number]" === Object.prototype.toString.call(e);
            }
            function u(e) {
                return e instanceof Date || "[object Date]" === Object.prototype.toString.call(e);
            }
            function l(e, t) {
                var s, n = [];
                for (s = 0; s < e.length; ++s) n.push(t(e[s], s));
                return n;
            }
            function _(e, t) {
                return Object.prototype.hasOwnProperty.call(e, t);
            }
            function c(e, t) {
                for (var s in t) _(t, s) && (e[s] = t[s]);
                return _(t, "toString") && (e.toString = t.toString), _(t, "valueOf") && (e.valueOf = t.valueOf), 
                e;
            }
            function h(e, t, s, n) {
                return Dt(e, t, s, n, !0).utc();
            }
            function m() {
                return {
                    empty: !1,
                    unusedTokens: [],
                    unusedInput: [],
                    overflow: -2,
                    charsLeftOver: 0,
                    nullInput: !1,
                    invalidMonth: null,
                    invalidFormat: !1,
                    userInvalidated: !1,
                    iso: !1,
                    parsedDateParts: [],
                    meridiem: null,
                    rfc2822: !1,
                    weekdayMismatch: !1
                };
            }
            function f(e) {
                return null == e._pf && (e._pf = m()), e._pf;
            }
            function p(e) {
                if (null == e._isValid) {
                    var t = f(e), s = Hn.call(t.parsedDateParts, function(e) {
                        return null != e;
                    }), n = !isNaN(e._d.getTime()) && t.overflow < 0 && !t.empty && !t.invalidMonth && !t.invalidWeekday && !t.weekdayMismatch && !t.nullInput && !t.invalidFormat && !t.userInvalidated && (!t.meridiem || t.meridiem && s);
                    if (e._strict && (n = n && 0 === t.charsLeftOver && 0 === t.unusedTokens.length && void 0 === t.bigHour), 
                    null != Object.isFrozen && Object.isFrozen(e)) return n;
                    e._isValid = n;
                }
                return e._isValid;
            }
            function M(e) {
                var t = h(NaN);
                return null != e ? c(f(t), e) : f(t).userInvalidated = !0, t;
            }
            function y(e, t) {
                var s, n, a;
                if (o(t._isAMomentObject) || (e._isAMomentObject = t._isAMomentObject), o(t._i) || (e._i = t._i), 
                o(t._f) || (e._f = t._f), o(t._l) || (e._l = t._l), o(t._strict) || (e._strict = t._strict), 
                o(t._tzm) || (e._tzm = t._tzm), o(t._isUTC) || (e._isUTC = t._isUTC), o(t._offset) || (e._offset = t._offset), 
                o(t._pf) || (e._pf = f(t)), o(t._locale) || (e._locale = t._locale), jn.length > 0) for (s = 0; s < jn.length; s++) n = jn[s], 
                a = t[n], o(a) || (e[n] = a);
                return e;
            }
            function L(e) {
                y(this, e), this._d = new Date(null != e._d ? e._d.getTime() : NaN), this.isValid() || (this._d = new Date(NaN)), 
                Pn === !1 && (Pn = !0, t.updateOffset(this), Pn = !1);
            }
            function g(e) {
                return e instanceof L || null != e && null != e._isAMomentObject;
            }
            function Y(e) {
                return e < 0 ? Math.ceil(e) || 0 : Math.floor(e);
            }
            function k(e) {
                var t = +e, s = 0;
                return 0 !== t && isFinite(t) && (s = Y(t)), s;
            }
            function v(e, t, s) {
                var n, a = Math.min(e.length, t.length), i = Math.abs(e.length - t.length), r = 0;
                for (n = 0; n < a; n++) (s && e[n] !== t[n] || !s && k(e[n]) !== k(t[n])) && r++;
                return r + i;
            }
            function b(e) {
                t.suppressDeprecationWarnings === !1 && "undefined" != typeof console && console.warn && console.warn("Deprecation warning: " + e);
            }
            function w(e, s) {
                var n = !0;
                return c(function() {
                    if (null != t.deprecationHandler && t.deprecationHandler(null, e), n) {
                        for (var a, i = [], r = 0; r < arguments.length; r++) {
                            if (a = "", "object" == typeof arguments[r]) {
                                a += "\n[" + r + "] ";
                                for (var o in arguments[0]) a += o + ": " + arguments[0][o] + ", ";
                                a = a.slice(0, -2);
                            } else a = arguments[r];
                            i.push(a);
                        }
                        b(e + "\nArguments: " + Array.prototype.slice.call(i).join("") + "\n" + new Error().stack), 
                        n = !1;
                    }
                    return s.apply(this, arguments);
                }, s);
            }
            function D(e, s) {
                null != t.deprecationHandler && t.deprecationHandler(e, s), En[e] || (b(s), En[e] = !0);
            }
            function T(e) {
                return e instanceof Function || "[object Function]" === Object.prototype.toString.call(e);
            }
            function S(e) {
                var t, s;
                for (s in e) t = e[s], T(t) ? this[s] = t : this["_" + s] = t;
                this._config = e, this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + "|" + /\d{1,2}/.source);
            }
            function x(e, t) {
                var s, n = c({}, e);
                for (s in t) _(t, s) && (i(e[s]) && i(t[s]) ? (n[s] = {}, c(n[s], e[s]), c(n[s], t[s])) : null != t[s] ? n[s] = t[s] : delete n[s]);
                for (s in e) _(e, s) && !_(t, s) && i(e[s]) && (n[s] = c({}, n[s]));
                return n;
            }
            function H(e) {
                null != e && this.set(e);
            }
            function j(e, t, s) {
                var n = this._calendar[e] || this._calendar.sameElse;
                return T(n) ? n.call(t, s) : n;
            }
            function P(e) {
                var t = this._longDateFormat[e], s = this._longDateFormat[e.toUpperCase()];
                return t || !s ? t : (this._longDateFormat[e] = s.replace(/MMMM|MM|DD|dddd/g, function(e) {
                    return e.slice(1);
                }), this._longDateFormat[e]);
            }
            function E() {
                return this._invalidDate;
            }
            function O(e) {
                return this._ordinal.replace("%d", e);
            }
            function A(e, t, s, n) {
                var a = this._relativeTime[s];
                return T(a) ? a(e, t, s, n) : a.replace(/%d/i, e);
            }
            function C(e, t) {
                var s = this._relativeTime[e > 0 ? "future" : "past"];
                return T(s) ? s(t) : s.replace(/%s/i, t);
            }
            function W(e, t) {
                var s = e.toLowerCase();
                zn[s] = zn[s + "s"] = zn[t] = e;
            }
            function F(e) {
                return "string" == typeof e ? zn[e] || zn[e.toLowerCase()] : void 0;
            }
            function R(e) {
                var t, s, n = {};
                for (s in e) _(e, s) && (t = F(s), t && (n[t] = e[s]));
                return n;
            }
            function N(e, t) {
                In[e] = t;
            }
            function z(e) {
                var t = [];
                for (var s in e) t.push({
                    unit: s,
                    priority: In[s]
                });
                return t.sort(function(e, t) {
                    return e.priority - t.priority;
                }), t;
            }
            function I(e, t, s) {
                var n = "" + Math.abs(e), a = t - n.length, i = e >= 0;
                return (i ? s ? "+" : "" : "-") + Math.pow(10, Math.max(0, a)).toString().substr(1) + n;
            }
            function U(e, t, s, n) {
                var a = n;
                "string" == typeof n && (a = function() {
                    return this[n]();
                }), e && (Bn[e] = a), t && (Bn[t[0]] = function() {
                    return I(a.apply(this, arguments), t[1], t[2]);
                }), s && (Bn[s] = function() {
                    return this.localeData().ordinal(a.apply(this, arguments), e);
                });
            }
            function q(e) {
                return e.match(/\[[\s\S]/) ? e.replace(/^\[|\]$/g, "") : e.replace(/\\/g, "");
            }
            function J(e) {
                var t, s, n = e.match(Un);
                for (t = 0, s = n.length; t < s; t++) Bn[n[t]] ? n[t] = Bn[n[t]] : n[t] = q(n[t]);
                return function(t) {
                    var a, i = "";
                    for (a = 0; a < s; a++) i += T(n[a]) ? n[a].call(t, e) : n[a];
                    return i;
                };
            }
            function B(e, t) {
                return e.isValid() ? (t = G(t, e.localeData()), Jn[t] = Jn[t] || J(t), Jn[t](e)) : e.localeData().invalidDate();
            }
            function G(e, t) {
                function s(e) {
                    return t.longDateFormat(e) || e;
                }
                var n = 5;
                for (qn.lastIndex = 0; n >= 0 && qn.test(e); ) e = e.replace(qn, s), qn.lastIndex = 0, 
                n -= 1;
                return e;
            }
            function V(e, t, s) {
                la[e] = T(t) ? t : function(e, n) {
                    return e && s ? s : t;
                };
            }
            function Q(e, t) {
                return _(la, e) ? la[e](t._strict, t._locale) : new RegExp(K(e));
            }
            function K(e) {
                return $(e.replace("\\", "").replace(/\\(\[)|\\(\])|\[([^\]\[]*)\]|\\(.)/g, function(e, t, s, n, a) {
                    return t || s || n || a;
                }));
            }
            function $(e) {
                return e.replace(/[-\/\\^$*+?.()|[\]{}]/g, "\\$&");
            }
            function Z(e, t) {
                var s, n = t;
                for ("string" == typeof e && (e = [ e ]), d(t) && (n = function(e, s) {
                    s[t] = k(e);
                }), s = 0; s < e.length; s++) _a[e[s]] = n;
            }
            function X(e, t) {
                Z(e, function(e, s, n, a) {
                    n._w = n._w || {}, t(e, n._w, n, a);
                });
            }
            function ee(e, t, s) {
                null != t && _(_a, e) && _a[e](t, s._a, s, e);
            }
            function te(e) {
                return se(e) ? 366 : 365;
            }
            function se(e) {
                return e % 4 === 0 && e % 100 !== 0 || e % 400 === 0;
            }
            function ne() {
                return se(this.year());
            }
            function ae(e, s) {
                return function(n) {
                    return null != n ? (re(this, e, n), t.updateOffset(this, s), this) : ie(this, e);
                };
            }
            function ie(e, t) {
                return e.isValid() ? e._d["get" + (e._isUTC ? "UTC" : "") + t]() : NaN;
            }
            function re(e, t, s) {
                e.isValid() && !isNaN(s) && ("FullYear" === t && se(e.year()) && 1 === e.month() && 29 === e.date() ? e._d["set" + (e._isUTC ? "UTC" : "") + t](s, e.month(), le(s, e.month())) : e._d["set" + (e._isUTC ? "UTC" : "") + t](s));
            }
            function oe(e) {
                return e = F(e), T(this[e]) ? this[e]() : this;
            }
            function de(e, t) {
                if ("object" == typeof e) {
                    e = R(e);
                    for (var s = z(e), n = 0; n < s.length; n++) this[s[n].unit](e[s[n].unit]);
                } else if (e = F(e), T(this[e])) return this[e](t);
                return this;
            }
            function ue(e, t) {
                return (e % t + t) % t;
            }
            function le(e, t) {
                if (isNaN(e) || isNaN(t)) return NaN;
                var s = ue(t, 12);
                return e += (t - s) / 12, 1 === s ? se(e) ? 29 : 28 : 31 - s % 7 % 2;
            }
            function _e(e, t) {
                return e ? a(this._months) ? this._months[e.month()] : this._months[(this._months.isFormat || va).test(t) ? "format" : "standalone"][e.month()] : a(this._months) ? this._months : this._months.standalone;
            }
            function ce(e, t) {
                return e ? a(this._monthsShort) ? this._monthsShort[e.month()] : this._monthsShort[va.test(t) ? "format" : "standalone"][e.month()] : a(this._monthsShort) ? this._monthsShort : this._monthsShort.standalone;
            }
            function he(e, t, s) {
                var n, a, i, r = e.toLocaleLowerCase();
                if (!this._monthsParse) for (this._monthsParse = [], this._longMonthsParse = [], 
                this._shortMonthsParse = [], n = 0; n < 12; ++n) i = h([ 2e3, n ]), this._shortMonthsParse[n] = this.monthsShort(i, "").toLocaleLowerCase(), 
                this._longMonthsParse[n] = this.months(i, "").toLocaleLowerCase();
                return s ? "MMM" === t ? (a = Ya.call(this._shortMonthsParse, r), a !== -1 ? a : null) : (a = Ya.call(this._longMonthsParse, r), 
                a !== -1 ? a : null) : "MMM" === t ? (a = Ya.call(this._shortMonthsParse, r), a !== -1 ? a : (a = Ya.call(this._longMonthsParse, r), 
                a !== -1 ? a : null)) : (a = Ya.call(this._longMonthsParse, r), a !== -1 ? a : (a = Ya.call(this._shortMonthsParse, r), 
                a !== -1 ? a : null));
            }
            function me(e, t, s) {
                var n, a, i;
                if (this._monthsParseExact) return he.call(this, e, t, s);
                for (this._monthsParse || (this._monthsParse = [], this._longMonthsParse = [], this._shortMonthsParse = []), 
                n = 0; n < 12; n++) {
                    if (a = h([ 2e3, n ]), s && !this._longMonthsParse[n] && (this._longMonthsParse[n] = new RegExp("^" + this.months(a, "").replace(".", "") + "$", "i"), 
                    this._shortMonthsParse[n] = new RegExp("^" + this.monthsShort(a, "").replace(".", "") + "$", "i")), 
                    s || this._monthsParse[n] || (i = "^" + this.months(a, "") + "|^" + this.monthsShort(a, ""), 
                    this._monthsParse[n] = new RegExp(i.replace(".", ""), "i")), s && "MMMM" === t && this._longMonthsParse[n].test(e)) return n;
                    if (s && "MMM" === t && this._shortMonthsParse[n].test(e)) return n;
                    if (!s && this._monthsParse[n].test(e)) return n;
                }
            }
            function fe(e, t) {
                var s;
                if (!e.isValid()) return e;
                if ("string" == typeof t) if (/^\d+$/.test(t)) t = k(t); else if (t = e.localeData().monthsParse(t), 
                !d(t)) return e;
                return s = Math.min(e.date(), le(e.year(), t)), e._d["set" + (e._isUTC ? "UTC" : "") + "Month"](t, s), 
                e;
            }
            function pe(e) {
                return null != e ? (fe(this, e), t.updateOffset(this, !0), this) : ie(this, "Month");
            }
            function Me() {
                return le(this.year(), this.month());
            }
            function ye(e) {
                return this._monthsParseExact ? (_(this, "_monthsRegex") || ge.call(this), e ? this._monthsShortStrictRegex : this._monthsShortRegex) : (_(this, "_monthsShortRegex") || (this._monthsShortRegex = Da), 
                this._monthsShortStrictRegex && e ? this._monthsShortStrictRegex : this._monthsShortRegex);
            }
            function Le(e) {
                return this._monthsParseExact ? (_(this, "_monthsRegex") || ge.call(this), e ? this._monthsStrictRegex : this._monthsRegex) : (_(this, "_monthsRegex") || (this._monthsRegex = Ta), 
                this._monthsStrictRegex && e ? this._monthsStrictRegex : this._monthsRegex);
            }
            function ge() {
                function e(e, t) {
                    return t.length - e.length;
                }
                var t, s, n = [], a = [], i = [];
                for (t = 0; t < 12; t++) s = h([ 2e3, t ]), n.push(this.monthsShort(s, "")), a.push(this.months(s, "")), 
                i.push(this.months(s, "")), i.push(this.monthsShort(s, ""));
                for (n.sort(e), a.sort(e), i.sort(e), t = 0; t < 12; t++) n[t] = $(n[t]), a[t] = $(a[t]);
                for (t = 0; t < 24; t++) i[t] = $(i[t]);
                this._monthsRegex = new RegExp("^(" + i.join("|") + ")", "i"), this._monthsShortRegex = this._monthsRegex, 
                this._monthsStrictRegex = new RegExp("^(" + a.join("|") + ")", "i"), this._monthsShortStrictRegex = new RegExp("^(" + n.join("|") + ")", "i");
            }
            function Ye(e, t, s, n, a, i, r) {
                var o = new Date(e, t, s, n, a, i, r);
                return e < 100 && e >= 0 && isFinite(o.getFullYear()) && o.setFullYear(e), o;
            }
            function ke(e) {
                var t = new Date(Date.UTC.apply(null, arguments));
                return e < 100 && e >= 0 && isFinite(t.getUTCFullYear()) && t.setUTCFullYear(e), 
                t;
            }
            function ve(e, t, s) {
                var n = 7 + t - s, a = (7 + ke(e, 0, n).getUTCDay() - t) % 7;
                return -a + n - 1;
            }
            function be(e, t, s, n, a) {
                var i, r, o = (7 + s - n) % 7, d = ve(e, n, a), u = 1 + 7 * (t - 1) + o + d;
                return u <= 0 ? (i = e - 1, r = te(i) + u) : u > te(e) ? (i = e + 1, r = u - te(e)) : (i = e, 
                r = u), {
                    year: i,
                    dayOfYear: r
                };
            }
            function we(e, t, s) {
                var n, a, i = ve(e.year(), t, s), r = Math.floor((e.dayOfYear() - i - 1) / 7) + 1;
                return r < 1 ? (a = e.year() - 1, n = r + De(a, t, s)) : r > De(e.year(), t, s) ? (n = r - De(e.year(), t, s), 
                a = e.year() + 1) : (a = e.year(), n = r), {
                    week: n,
                    year: a
                };
            }
            function De(e, t, s) {
                var n = ve(e, t, s), a = ve(e + 1, t, s);
                return (te(e) - n + a) / 7;
            }
            function Te(e) {
                return we(e, this._week.dow, this._week.doy).week;
            }
            function Se() {
                return this._week.dow;
            }
            function xe() {
                return this._week.doy;
            }
            function He(e) {
                var t = this.localeData().week(this);
                return null == e ? t : this.add(7 * (e - t), "d");
            }
            function je(e) {
                var t = we(this, 1, 4).week;
                return null == e ? t : this.add(7 * (e - t), "d");
            }
            function Pe(e, t) {
                return "string" != typeof e ? e : isNaN(e) ? (e = t.weekdaysParse(e), "number" == typeof e ? e : null) : parseInt(e, 10);
            }
            function Ee(e, t) {
                return "string" == typeof e ? t.weekdaysParse(e) % 7 || 7 : isNaN(e) ? null : e;
            }
            function Oe(e, t) {
                return e ? a(this._weekdays) ? this._weekdays[e.day()] : this._weekdays[this._weekdays.isFormat.test(t) ? "format" : "standalone"][e.day()] : a(this._weekdays) ? this._weekdays : this._weekdays.standalone;
            }
            function Ae(e) {
                return e ? this._weekdaysShort[e.day()] : this._weekdaysShort;
            }
            function Ce(e) {
                return e ? this._weekdaysMin[e.day()] : this._weekdaysMin;
            }
            function We(e, t, s) {
                var n, a, i, r = e.toLocaleLowerCase();
                if (!this._weekdaysParse) for (this._weekdaysParse = [], this._shortWeekdaysParse = [], 
                this._minWeekdaysParse = [], n = 0; n < 7; ++n) i = h([ 2e3, 1 ]).day(n), this._minWeekdaysParse[n] = this.weekdaysMin(i, "").toLocaleLowerCase(), 
                this._shortWeekdaysParse[n] = this.weekdaysShort(i, "").toLocaleLowerCase(), this._weekdaysParse[n] = this.weekdays(i, "").toLocaleLowerCase();
                return s ? "dddd" === t ? (a = Ya.call(this._weekdaysParse, r), a !== -1 ? a : null) : "ddd" === t ? (a = Ya.call(this._shortWeekdaysParse, r), 
                a !== -1 ? a : null) : (a = Ya.call(this._minWeekdaysParse, r), a !== -1 ? a : null) : "dddd" === t ? (a = Ya.call(this._weekdaysParse, r), 
                a !== -1 ? a : (a = Ya.call(this._shortWeekdaysParse, r), a !== -1 ? a : (a = Ya.call(this._minWeekdaysParse, r), 
                a !== -1 ? a : null))) : "ddd" === t ? (a = Ya.call(this._shortWeekdaysParse, r), 
                a !== -1 ? a : (a = Ya.call(this._weekdaysParse, r), a !== -1 ? a : (a = Ya.call(this._minWeekdaysParse, r), 
                a !== -1 ? a : null))) : (a = Ya.call(this._minWeekdaysParse, r), a !== -1 ? a : (a = Ya.call(this._weekdaysParse, r), 
                a !== -1 ? a : (a = Ya.call(this._shortWeekdaysParse, r), a !== -1 ? a : null)));
            }
            function Fe(e, t, s) {
                var n, a, i;
                if (this._weekdaysParseExact) return We.call(this, e, t, s);
                for (this._weekdaysParse || (this._weekdaysParse = [], this._minWeekdaysParse = [], 
                this._shortWeekdaysParse = [], this._fullWeekdaysParse = []), n = 0; n < 7; n++) {
                    if (a = h([ 2e3, 1 ]).day(n), s && !this._fullWeekdaysParse[n] && (this._fullWeekdaysParse[n] = new RegExp("^" + this.weekdays(a, "").replace(".", "\\.?") + "$", "i"), 
                    this._shortWeekdaysParse[n] = new RegExp("^" + this.weekdaysShort(a, "").replace(".", "\\.?") + "$", "i"), 
                    this._minWeekdaysParse[n] = new RegExp("^" + this.weekdaysMin(a, "").replace(".", "\\.?") + "$", "i")), 
                    this._weekdaysParse[n] || (i = "^" + this.weekdays(a, "") + "|^" + this.weekdaysShort(a, "") + "|^" + this.weekdaysMin(a, ""), 
                    this._weekdaysParse[n] = new RegExp(i.replace(".", ""), "i")), s && "dddd" === t && this._fullWeekdaysParse[n].test(e)) return n;
                    if (s && "ddd" === t && this._shortWeekdaysParse[n].test(e)) return n;
                    if (s && "dd" === t && this._minWeekdaysParse[n].test(e)) return n;
                    if (!s && this._weekdaysParse[n].test(e)) return n;
                }
            }
            function Re(e) {
                if (!this.isValid()) return null != e ? this : NaN;
                var t = this._isUTC ? this._d.getUTCDay() : this._d.getDay();
                return null != e ? (e = Pe(e, this.localeData()), this.add(e - t, "d")) : t;
            }
            function Ne(e) {
                if (!this.isValid()) return null != e ? this : NaN;
                var t = (this.day() + 7 - this.localeData()._week.dow) % 7;
                return null == e ? t : this.add(e - t, "d");
            }
            function ze(e) {
                if (!this.isValid()) return null != e ? this : NaN;
                if (null != e) {
                    var t = Ee(e, this.localeData());
                    return this.day(this.day() % 7 ? t : t - 7);
                }
                return this.day() || 7;
            }
            function Ie(e) {
                return this._weekdaysParseExact ? (_(this, "_weekdaysRegex") || Je.call(this), e ? this._weekdaysStrictRegex : this._weekdaysRegex) : (_(this, "_weekdaysRegex") || (this._weekdaysRegex = Pa), 
                this._weekdaysStrictRegex && e ? this._weekdaysStrictRegex : this._weekdaysRegex);
            }
            function Ue(e) {
                return this._weekdaysParseExact ? (_(this, "_weekdaysRegex") || Je.call(this), e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex) : (_(this, "_weekdaysShortRegex") || (this._weekdaysShortRegex = Ea), 
                this._weekdaysShortStrictRegex && e ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex);
            }
            function qe(e) {
                return this._weekdaysParseExact ? (_(this, "_weekdaysRegex") || Je.call(this), e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex) : (_(this, "_weekdaysMinRegex") || (this._weekdaysMinRegex = Oa), 
                this._weekdaysMinStrictRegex && e ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex);
            }
            function Je() {
                function e(e, t) {
                    return t.length - e.length;
                }
                var t, s, n, a, i, r = [], o = [], d = [], u = [];
                for (t = 0; t < 7; t++) s = h([ 2e3, 1 ]).day(t), n = this.weekdaysMin(s, ""), a = this.weekdaysShort(s, ""), 
                i = this.weekdays(s, ""), r.push(n), o.push(a), d.push(i), u.push(n), u.push(a), 
                u.push(i);
                for (r.sort(e), o.sort(e), d.sort(e), u.sort(e), t = 0; t < 7; t++) o[t] = $(o[t]), 
                d[t] = $(d[t]), u[t] = $(u[t]);
                this._weekdaysRegex = new RegExp("^(" + u.join("|") + ")", "i"), this._weekdaysShortRegex = this._weekdaysRegex, 
                this._weekdaysMinRegex = this._weekdaysRegex, this._weekdaysStrictRegex = new RegExp("^(" + d.join("|") + ")", "i"), 
                this._weekdaysShortStrictRegex = new RegExp("^(" + o.join("|") + ")", "i"), this._weekdaysMinStrictRegex = new RegExp("^(" + r.join("|") + ")", "i");
            }
            function Be() {
                return this.hours() % 12 || 12;
            }
            function Ge() {
                return this.hours() || 24;
            }
            function Ve(e, t) {
                U(e, 0, 0, function() {
                    return this.localeData().meridiem(this.hours(), this.minutes(), t);
                });
            }
            function Qe(e, t) {
                return t._meridiemParse;
            }
            function Ke(e) {
                return "p" === (e + "").toLowerCase().charAt(0);
            }
            function $e(e, t, s) {
                return e > 11 ? s ? "pm" : "PM" : s ? "am" : "AM";
            }
            function Ze(e) {
                return e ? e.toLowerCase().replace("_", "-") : e;
            }
            function Xe(e) {
                for (var t, s, n, a, i = 0; i < e.length; ) {
                    for (a = Ze(e[i]).split("-"), t = a.length, s = Ze(e[i + 1]), s = s ? s.split("-") : null; t > 0; ) {
                        if (n = et(a.slice(0, t).join("-"))) return n;
                        if (s && s.length >= t && v(a, s, !0) >= t - 1) break;
                        t--;
                    }
                    i++;
                }
                return Aa;
            }
            function et(t) {
                var n = null;
                if (!Ra[t] && "undefined" != typeof e && e && e.exports) try {
                    n = Aa._abbr;
                    s(20)("./" + t), tt(n);
                } catch (e) {}
                return Ra[t];
            }
            function tt(e, t) {
                var s;
                return e && (s = o(t) ? at(e) : st(e, t), s ? Aa = s : "undefined" != typeof console && console.warn && console.warn("Locale " + e + " not found. Did you forget to load it?")), 
                Aa._abbr;
            }
            function st(e, t) {
                if (null !== t) {
                    var s, n = Fa;
                    if (t.abbr = e, null != Ra[e]) D("defineLocaleOverride", "use moment.updateLocale(localeName, config) to change an existing locale. moment.defineLocale(localeName, config) should only be used for creating a new locale See http://momentjs.com/guides/#/warnings/define-locale/ for more info."), 
                    n = Ra[e]._config; else if (null != t.parentLocale) if (null != Ra[t.parentLocale]) n = Ra[t.parentLocale]._config; else {
                        if (s = et(t.parentLocale), null == s) return Na[t.parentLocale] || (Na[t.parentLocale] = []), 
                        Na[t.parentLocale].push({
                            name: e,
                            config: t
                        }), null;
                        n = s._config;
                    }
                    return Ra[e] = new H(x(n, t)), Na[e] && Na[e].forEach(function(e) {
                        st(e.name, e.config);
                    }), tt(e), Ra[e];
                }
                return delete Ra[e], null;
            }
            function nt(e, t) {
                if (null != t) {
                    var s, n, a = Fa;
                    n = et(e), null != n && (a = n._config), t = x(a, t), s = new H(t), s.parentLocale = Ra[e], 
                    Ra[e] = s, tt(e);
                } else null != Ra[e] && (null != Ra[e].parentLocale ? Ra[e] = Ra[e].parentLocale : null != Ra[e] && delete Ra[e]);
                return Ra[e];
            }
            function at(e) {
                var t;
                if (e && e._locale && e._locale._abbr && (e = e._locale._abbr), !e) return Aa;
                if (!a(e)) {
                    if (t = et(e)) return t;
                    e = [ e ];
                }
                return Xe(e);
            }
            function it() {
                return On(Ra);
            }
            function rt(e) {
                var t, s = e._a;
                return s && f(e).overflow === -2 && (t = s[ha] < 0 || s[ha] > 11 ? ha : s[ma] < 1 || s[ma] > le(s[ca], s[ha]) ? ma : s[fa] < 0 || s[fa] > 24 || 24 === s[fa] && (0 !== s[pa] || 0 !== s[Ma] || 0 !== s[ya]) ? fa : s[pa] < 0 || s[pa] > 59 ? pa : s[Ma] < 0 || s[Ma] > 59 ? Ma : s[ya] < 0 || s[ya] > 999 ? ya : -1, 
                f(e)._overflowDayOfYear && (t < ca || t > ma) && (t = ma), f(e)._overflowWeeks && t === -1 && (t = La), 
                f(e)._overflowWeekday && t === -1 && (t = ga), f(e).overflow = t), e;
            }
            function ot(e, t, s) {
                return null != e ? e : null != t ? t : s;
            }
            function dt(e) {
                var s = new Date(t.now());
                return e._useUTC ? [ s.getUTCFullYear(), s.getUTCMonth(), s.getUTCDate() ] : [ s.getFullYear(), s.getMonth(), s.getDate() ];
            }
            function ut(e) {
                var t, s, n, a, i, r = [];
                if (!e._d) {
                    for (n = dt(e), e._w && null == e._a[ma] && null == e._a[ha] && lt(e), null != e._dayOfYear && (i = ot(e._a[ca], n[ca]), 
                    (e._dayOfYear > te(i) || 0 === e._dayOfYear) && (f(e)._overflowDayOfYear = !0), 
                    s = ke(i, 0, e._dayOfYear), e._a[ha] = s.getUTCMonth(), e._a[ma] = s.getUTCDate()), 
                    t = 0; t < 3 && null == e._a[t]; ++t) e._a[t] = r[t] = n[t];
                    for (;t < 7; t++) e._a[t] = r[t] = null == e._a[t] ? 2 === t ? 1 : 0 : e._a[t];
                    24 === e._a[fa] && 0 === e._a[pa] && 0 === e._a[Ma] && 0 === e._a[ya] && (e._nextDay = !0, 
                    e._a[fa] = 0), e._d = (e._useUTC ? ke : Ye).apply(null, r), a = e._useUTC ? e._d.getUTCDay() : e._d.getDay(), 
                    null != e._tzm && e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm), e._nextDay && (e._a[fa] = 24), 
                    e._w && "undefined" != typeof e._w.d && e._w.d !== a && (f(e).weekdayMismatch = !0);
                }
            }
            function lt(e) {
                var t, s, n, a, i, r, o, d;
                if (t = e._w, null != t.GG || null != t.W || null != t.E) i = 1, r = 4, s = ot(t.GG, e._a[ca], we(Tt(), 1, 4).year), 
                n = ot(t.W, 1), a = ot(t.E, 1), (a < 1 || a > 7) && (d = !0); else {
                    i = e._locale._week.dow, r = e._locale._week.doy;
                    var u = we(Tt(), i, r);
                    s = ot(t.gg, e._a[ca], u.year), n = ot(t.w, u.week), null != t.d ? (a = t.d, (a < 0 || a > 6) && (d = !0)) : null != t.e ? (a = t.e + i, 
                    (t.e < 0 || t.e > 6) && (d = !0)) : a = i;
                }
                n < 1 || n > De(s, i, r) ? f(e)._overflowWeeks = !0 : null != d ? f(e)._overflowWeekday = !0 : (o = be(s, n, a, i, r), 
                e._a[ca] = o.year, e._dayOfYear = o.dayOfYear);
            }
            function _t(e) {
                var t, s, n, a, i, r, o = e._i, d = za.exec(o) || Ia.exec(o);
                if (d) {
                    for (f(e).iso = !0, t = 0, s = qa.length; t < s; t++) if (qa[t][1].exec(d[1])) {
                        a = qa[t][0], n = qa[t][2] !== !1;
                        break;
                    }
                    if (null == a) return void (e._isValid = !1);
                    if (d[3]) {
                        for (t = 0, s = Ja.length; t < s; t++) if (Ja[t][1].exec(d[3])) {
                            i = (d[2] || " ") + Ja[t][0];
                            break;
                        }
                        if (null == i) return void (e._isValid = !1);
                    }
                    if (!n && null != i) return void (e._isValid = !1);
                    if (d[4]) {
                        if (!Ua.exec(d[4])) return void (e._isValid = !1);
                        r = "Z";
                    }
                    e._f = a + (i || "") + (r || ""), Lt(e);
                } else e._isValid = !1;
            }
            function ct(e, t, s, n, a, i) {
                var r = [ ht(e), wa.indexOf(t), parseInt(s, 10), parseInt(n, 10), parseInt(a, 10) ];
                return i && r.push(parseInt(i, 10)), r;
            }
            function ht(e) {
                var t = parseInt(e, 10);
                return t <= 49 ? 2e3 + t : t <= 999 ? 1900 + t : t;
            }
            function mt(e) {
                return e.replace(/\([^)]*\)|[\n\t]/g, " ").replace(/(\s\s+)/g, " ").replace(/^\s\s*/, "").replace(/\s\s*$/, "");
            }
            function ft(e, t, s) {
                if (e) {
                    var n = Ha.indexOf(e), a = new Date(t[0], t[1], t[2]).getDay();
                    if (n !== a) return f(s).weekdayMismatch = !0, s._isValid = !1, !1;
                }
                return !0;
            }
            function pt(e, t, s) {
                if (e) return Va[e];
                if (t) return 0;
                var n = parseInt(s, 10), a = n % 100, i = (n - a) / 100;
                return 60 * i + a;
            }
            function Mt(e) {
                var t = Ga.exec(mt(e._i));
                if (t) {
                    var s = ct(t[4], t[3], t[2], t[5], t[6], t[7]);
                    if (!ft(t[1], s, e)) return;
                    e._a = s, e._tzm = pt(t[8], t[9], t[10]), e._d = ke.apply(null, e._a), e._d.setUTCMinutes(e._d.getUTCMinutes() - e._tzm), 
                    f(e).rfc2822 = !0;
                } else e._isValid = !1;
            }
            function yt(e) {
                var s = Ba.exec(e._i);
                return null !== s ? void (e._d = new Date(+s[1])) : (_t(e), void (e._isValid === !1 && (delete e._isValid, 
                Mt(e), e._isValid === !1 && (delete e._isValid, t.createFromInputFallback(e)))));
            }
            function Lt(e) {
                if (e._f === t.ISO_8601) return void _t(e);
                if (e._f === t.RFC_2822) return void Mt(e);
                e._a = [], f(e).empty = !0;
                var s, n, a, i, r, o = "" + e._i, d = o.length, u = 0;
                for (a = G(e._f, e._locale).match(Un) || [], s = 0; s < a.length; s++) i = a[s], 
                n = (o.match(Q(i, e)) || [])[0], n && (r = o.substr(0, o.indexOf(n)), r.length > 0 && f(e).unusedInput.push(r), 
                o = o.slice(o.indexOf(n) + n.length), u += n.length), Bn[i] ? (n ? f(e).empty = !1 : f(e).unusedTokens.push(i), 
                ee(i, n, e)) : e._strict && !n && f(e).unusedTokens.push(i);
                f(e).charsLeftOver = d - u, o.length > 0 && f(e).unusedInput.push(o), e._a[fa] <= 12 && f(e).bigHour === !0 && e._a[fa] > 0 && (f(e).bigHour = void 0), 
                f(e).parsedDateParts = e._a.slice(0), f(e).meridiem = e._meridiem, e._a[fa] = gt(e._locale, e._a[fa], e._meridiem), 
                ut(e), rt(e);
            }
            function gt(e, t, s) {
                var n;
                return null == s ? t : null != e.meridiemHour ? e.meridiemHour(t, s) : null != e.isPM ? (n = e.isPM(s), 
                n && t < 12 && (t += 12), n || 12 !== t || (t = 0), t) : t;
            }
            function Yt(e) {
                var t, s, n, a, i;
                if (0 === e._f.length) return f(e).invalidFormat = !0, void (e._d = new Date(NaN));
                for (a = 0; a < e._f.length; a++) i = 0, t = y({}, e), null != e._useUTC && (t._useUTC = e._useUTC), 
                t._f = e._f[a], Lt(t), p(t) && (i += f(t).charsLeftOver, i += 10 * f(t).unusedTokens.length, 
                f(t).score = i, (null == n || i < n) && (n = i, s = t));
                c(e, s || t);
            }
            function kt(e) {
                if (!e._d) {
                    var t = R(e._i);
                    e._a = l([ t.year, t.month, t.day || t.date, t.hour, t.minute, t.second, t.millisecond ], function(e) {
                        return e && parseInt(e, 10);
                    }), ut(e);
                }
            }
            function vt(e) {
                var t = new L(rt(bt(e)));
                return t._nextDay && (t.add(1, "d"), t._nextDay = void 0), t;
            }
            function bt(e) {
                var t = e._i, s = e._f;
                return e._locale = e._locale || at(e._l), null === t || void 0 === s && "" === t ? M({
                    nullInput: !0
                }) : ("string" == typeof t && (e._i = t = e._locale.preparse(t)), g(t) ? new L(rt(t)) : (u(t) ? e._d = t : a(s) ? Yt(e) : s ? Lt(e) : wt(e), 
                p(e) || (e._d = null), e));
            }
            function wt(e) {
                var s = e._i;
                o(s) ? e._d = new Date(t.now()) : u(s) ? e._d = new Date(s.valueOf()) : "string" == typeof s ? yt(e) : a(s) ? (e._a = l(s.slice(0), function(e) {
                    return parseInt(e, 10);
                }), ut(e)) : i(s) ? kt(e) : d(s) ? e._d = new Date(s) : t.createFromInputFallback(e);
            }
            function Dt(e, t, s, n, o) {
                var d = {};
                return s !== !0 && s !== !1 || (n = s, s = void 0), (i(e) && r(e) || a(e) && 0 === e.length) && (e = void 0), 
                d._isAMomentObject = !0, d._useUTC = d._isUTC = o, d._l = s, d._i = e, d._f = t, 
                d._strict = n, vt(d);
            }
            function Tt(e, t, s, n) {
                return Dt(e, t, s, n, !1);
            }
            function St(e, t) {
                var s, n;
                if (1 === t.length && a(t[0]) && (t = t[0]), !t.length) return Tt();
                for (s = t[0], n = 1; n < t.length; ++n) t[n].isValid() && !t[n][e](s) || (s = t[n]);
                return s;
            }
            function xt() {
                var e = [].slice.call(arguments, 0);
                return St("isBefore", e);
            }
            function Ht() {
                var e = [].slice.call(arguments, 0);
                return St("isAfter", e);
            }
            function jt(e) {
                for (var t in e) if (Ya.call(Za, t) === -1 || null != e[t] && isNaN(e[t])) return !1;
                for (var s = !1, n = 0; n < Za.length; ++n) if (e[Za[n]]) {
                    if (s) return !1;
                    parseFloat(e[Za[n]]) !== k(e[Za[n]]) && (s = !0);
                }
                return !0;
            }
            function Pt() {
                return this._isValid;
            }
            function Et() {
                return Zt(NaN);
            }
            function Ot(e) {
                var t = R(e), s = t.year || 0, n = t.quarter || 0, a = t.month || 0, i = t.week || 0, r = t.day || 0, o = t.hour || 0, d = t.minute || 0, u = t.second || 0, l = t.millisecond || 0;
                this._isValid = jt(t), this._milliseconds = +l + 1e3 * u + 6e4 * d + 1e3 * o * 60 * 60, 
                this._days = +r + 7 * i, this._months = +a + 3 * n + 12 * s, this._data = {}, this._locale = at(), 
                this._bubble();
            }
            function At(e) {
                return e instanceof Ot;
            }
            function Ct(e) {
                return e < 0 ? Math.round(-1 * e) * -1 : Math.round(e);
            }
            function Wt(e, t) {
                U(e, 0, 0, function() {
                    var e = this.utcOffset(), s = "+";
                    return e < 0 && (e = -e, s = "-"), s + I(~~(e / 60), 2) + t + I(~~e % 60, 2);
                });
            }
            function Ft(e, t) {
                var s = (t || "").match(e);
                if (null === s) return null;
                var n = s[s.length - 1] || [], a = (n + "").match(Xa) || [ "-", 0, 0 ], i = +(60 * a[1]) + k(a[2]);
                return 0 === i ? 0 : "+" === a[0] ? i : -i;
            }
            function Rt(e, s) {
                var n, a;
                return s._isUTC ? (n = s.clone(), a = (g(e) || u(e) ? e.valueOf() : Tt(e).valueOf()) - n.valueOf(), 
                n._d.setTime(n._d.valueOf() + a), t.updateOffset(n, !1), n) : Tt(e).local();
            }
            function Nt(e) {
                return 15 * -Math.round(e._d.getTimezoneOffset() / 15);
            }
            function zt(e, s, n) {
                var a, i = this._offset || 0;
                if (!this.isValid()) return null != e ? this : NaN;
                if (null != e) {
                    if ("string" == typeof e) {
                        if (e = Ft(oa, e), null === e) return this;
                    } else Math.abs(e) < 16 && !n && (e *= 60);
                    return !this._isUTC && s && (a = Nt(this)), this._offset = e, this._isUTC = !0, 
                    null != a && this.add(a, "m"), i !== e && (!s || this._changeInProgress ? ns(this, Zt(e - i, "m"), 1, !1) : this._changeInProgress || (this._changeInProgress = !0, 
                    t.updateOffset(this, !0), this._changeInProgress = null)), this;
                }
                return this._isUTC ? i : Nt(this);
            }
            function It(e, t) {
                return null != e ? ("string" != typeof e && (e = -e), this.utcOffset(e, t), this) : -this.utcOffset();
            }
            function Ut(e) {
                return this.utcOffset(0, e);
            }
            function qt(e) {
                return this._isUTC && (this.utcOffset(0, e), this._isUTC = !1, e && this.subtract(Nt(this), "m")), 
                this;
            }
            function Jt() {
                if (null != this._tzm) this.utcOffset(this._tzm, !1, !0); else if ("string" == typeof this._i) {
                    var e = Ft(ra, this._i);
                    null != e ? this.utcOffset(e) : this.utcOffset(0, !0);
                }
                return this;
            }
            function Bt(e) {
                return !!this.isValid() && (e = e ? Tt(e).utcOffset() : 0, (this.utcOffset() - e) % 60 === 0);
            }
            function Gt() {
                return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();
            }
            function Vt() {
                if (!o(this._isDSTShifted)) return this._isDSTShifted;
                var e = {};
                if (y(e, this), e = bt(e), e._a) {
                    var t = e._isUTC ? h(e._a) : Tt(e._a);
                    this._isDSTShifted = this.isValid() && v(e._a, t.toArray()) > 0;
                } else this._isDSTShifted = !1;
                return this._isDSTShifted;
            }
            function Qt() {
                return !!this.isValid() && !this._isUTC;
            }
            function Kt() {
                return !!this.isValid() && this._isUTC;
            }
            function $t() {
                return !!this.isValid() && (this._isUTC && 0 === this._offset);
            }
            function Zt(e, t) {
                var s, n, a, i = e, r = null;
                return At(e) ? i = {
                    ms: e._milliseconds,
                    d: e._days,
                    M: e._months
                } : d(e) ? (i = {}, t ? i[t] = e : i.milliseconds = e) : (r = ei.exec(e)) ? (s = "-" === r[1] ? -1 : 1, 
                i = {
                    y: 0,
                    d: k(r[ma]) * s,
                    h: k(r[fa]) * s,
                    m: k(r[pa]) * s,
                    s: k(r[Ma]) * s,
                    ms: k(Ct(1e3 * r[ya])) * s
                }) : (r = ti.exec(e)) ? (s = "-" === r[1] ? -1 : ("+" === r[1], 1), i = {
                    y: Xt(r[2], s),
                    M: Xt(r[3], s),
                    w: Xt(r[4], s),
                    d: Xt(r[5], s),
                    h: Xt(r[6], s),
                    m: Xt(r[7], s),
                    s: Xt(r[8], s)
                }) : null == i ? i = {} : "object" == typeof i && ("from" in i || "to" in i) && (a = ts(Tt(i.from), Tt(i.to)), 
                i = {}, i.ms = a.milliseconds, i.M = a.months), n = new Ot(i), At(e) && _(e, "_locale") && (n._locale = e._locale), 
                n;
            }
            function Xt(e, t) {
                var s = e && parseFloat(e.replace(",", "."));
                return (isNaN(s) ? 0 : s) * t;
            }
            function es(e, t) {
                var s = {
                    milliseconds: 0,
                    months: 0
                };
                return s.months = t.month() - e.month() + 12 * (t.year() - e.year()), e.clone().add(s.months, "M").isAfter(t) && --s.months, 
                s.milliseconds = +t - +e.clone().add(s.months, "M"), s;
            }
            function ts(e, t) {
                var s;
                return e.isValid() && t.isValid() ? (t = Rt(t, e), e.isBefore(t) ? s = es(e, t) : (s = es(t, e), 
                s.milliseconds = -s.milliseconds, s.months = -s.months), s) : {
                    milliseconds: 0,
                    months: 0
                };
            }
            function ss(e, t) {
                return function(s, n) {
                    var a, i;
                    return null === n || isNaN(+n) || (D(t, "moment()." + t + "(period, number) is deprecated. Please use moment()." + t + "(number, period). See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info."), 
                    i = s, s = n, n = i), s = "string" == typeof s ? +s : s, a = Zt(s, n), ns(this, a, e), 
                    this;
                };
            }
            function ns(e, s, n, a) {
                var i = s._milliseconds, r = Ct(s._days), o = Ct(s._months);
                e.isValid() && (a = null == a || a, o && fe(e, ie(e, "Month") + o * n), r && re(e, "Date", ie(e, "Date") + r * n), 
                i && e._d.setTime(e._d.valueOf() + i * n), a && t.updateOffset(e, r || o));
            }
            function as(e, t) {
                var s = e.diff(t, "days", !0);
                return s < -6 ? "sameElse" : s < -1 ? "lastWeek" : s < 0 ? "lastDay" : s < 1 ? "sameDay" : s < 2 ? "nextDay" : s < 7 ? "nextWeek" : "sameElse";
            }
            function is(e, s) {
                var n = e || Tt(), a = Rt(n, this).startOf("day"), i = t.calendarFormat(this, a) || "sameElse", r = s && (T(s[i]) ? s[i].call(this, n) : s[i]);
                return this.format(r || this.localeData().calendar(i, this, Tt(n)));
            }
            function rs() {
                return new L(this);
            }
            function os(e, t) {
                var s = g(e) ? e : Tt(e);
                return !(!this.isValid() || !s.isValid()) && (t = F(o(t) ? "millisecond" : t), "millisecond" === t ? this.valueOf() > s.valueOf() : s.valueOf() < this.clone().startOf(t).valueOf());
            }
            function ds(e, t) {
                var s = g(e) ? e : Tt(e);
                return !(!this.isValid() || !s.isValid()) && (t = F(o(t) ? "millisecond" : t), "millisecond" === t ? this.valueOf() < s.valueOf() : this.clone().endOf(t).valueOf() < s.valueOf());
            }
            function us(e, t, s, n) {
                return n = n || "()", ("(" === n[0] ? this.isAfter(e, s) : !this.isBefore(e, s)) && (")" === n[1] ? this.isBefore(t, s) : !this.isAfter(t, s));
            }
            function ls(e, t) {
                var s, n = g(e) ? e : Tt(e);
                return !(!this.isValid() || !n.isValid()) && (t = F(t || "millisecond"), "millisecond" === t ? this.valueOf() === n.valueOf() : (s = n.valueOf(), 
                this.clone().startOf(t).valueOf() <= s && s <= this.clone().endOf(t).valueOf()));
            }
            function _s(e, t) {
                return this.isSame(e, t) || this.isAfter(e, t);
            }
            function cs(e, t) {
                return this.isSame(e, t) || this.isBefore(e, t);
            }
            function hs(e, t, s) {
                var n, a, i;
                if (!this.isValid()) return NaN;
                if (n = Rt(e, this), !n.isValid()) return NaN;
                switch (a = 6e4 * (n.utcOffset() - this.utcOffset()), t = F(t)) {
                  case "year":
                    i = ms(this, n) / 12;
                    break;

                  case "month":
                    i = ms(this, n);
                    break;

                  case "quarter":
                    i = ms(this, n) / 3;
                    break;

                  case "second":
                    i = (this - n) / 1e3;
                    break;

                  case "minute":
                    i = (this - n) / 6e4;
                    break;

                  case "hour":
                    i = (this - n) / 36e5;
                    break;

                  case "day":
                    i = (this - n - a) / 864e5;
                    break;

                  case "week":
                    i = (this - n - a) / 6048e5;
                    break;

                  default:
                    i = this - n;
                }
                return s ? i : Y(i);
            }
            function ms(e, t) {
                var s, n, a = 12 * (t.year() - e.year()) + (t.month() - e.month()), i = e.clone().add(a, "months");
                return t - i < 0 ? (s = e.clone().add(a - 1, "months"), n = (t - i) / (i - s)) : (s = e.clone().add(a + 1, "months"), 
                n = (t - i) / (s - i)), -(a + n) || 0;
            }
            function fs() {
                return this.clone().locale("en").format("ddd MMM DD YYYY HH:mm:ss [GMT]ZZ");
            }
            function ps(e) {
                if (!this.isValid()) return null;
                var t = e !== !0, s = t ? this.clone().utc() : this;
                return s.year() < 0 || s.year() > 9999 ? B(s, t ? "YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYYYY-MM-DD[T]HH:mm:ss.SSSZ") : T(Date.prototype.toISOString) ? t ? this.toDate().toISOString() : new Date(this.valueOf() + 60 * this.utcOffset() * 1e3).toISOString().replace("Z", B(s, "Z")) : B(s, t ? "YYYY-MM-DD[T]HH:mm:ss.SSS[Z]" : "YYYY-MM-DD[T]HH:mm:ss.SSSZ");
            }
            function Ms() {
                if (!this.isValid()) return "moment.invalid(/* " + this._i + " */)";
                var e = "moment", t = "";
                this.isLocal() || (e = 0 === this.utcOffset() ? "moment.utc" : "moment.parseZone", 
                t = "Z");
                var s = "[" + e + '("]', n = 0 <= this.year() && this.year() <= 9999 ? "YYYY" : "YYYYYY", a = "-MM-DD[T]HH:mm:ss.SSS", i = t + '[")]';
                return this.format(s + n + a + i);
            }
            function ys(e) {
                e || (e = this.isUtc() ? t.defaultFormatUtc : t.defaultFormat);
                var s = B(this, e);
                return this.localeData().postformat(s);
            }
            function Ls(e, t) {
                return this.isValid() && (g(e) && e.isValid() || Tt(e).isValid()) ? Zt({
                    to: this,
                    from: e
                }).locale(this.locale()).humanize(!t) : this.localeData().invalidDate();
            }
            function gs(e) {
                return this.from(Tt(), e);
            }
            function Ys(e, t) {
                return this.isValid() && (g(e) && e.isValid() || Tt(e).isValid()) ? Zt({
                    from: this,
                    to: e
                }).locale(this.locale()).humanize(!t) : this.localeData().invalidDate();
            }
            function ks(e) {
                return this.to(Tt(), e);
            }
            function vs(e) {
                var t;
                return void 0 === e ? this._locale._abbr : (t = at(e), null != t && (this._locale = t), 
                this);
            }
            function bs() {
                return this._locale;
            }
            function ws(e) {
                switch (e = F(e)) {
                  case "year":
                    this.month(0);

                  case "quarter":
                  case "month":
                    this.date(1);

                  case "week":
                  case "isoWeek":
                  case "day":
                  case "date":
                    this.hours(0);

                  case "hour":
                    this.minutes(0);

                  case "minute":
                    this.seconds(0);

                  case "second":
                    this.milliseconds(0);
                }
                return "week" === e && this.weekday(0), "isoWeek" === e && this.isoWeekday(1), "quarter" === e && this.month(3 * Math.floor(this.month() / 3)), 
                this;
            }
            function Ds(e) {
                return e = F(e), void 0 === e || "millisecond" === e ? this : ("date" === e && (e = "day"), 
                this.startOf(e).add(1, "isoWeek" === e ? "week" : e).subtract(1, "ms"));
            }
            function Ts() {
                return this._d.valueOf() - 6e4 * (this._offset || 0);
            }
            function Ss() {
                return Math.floor(this.valueOf() / 1e3);
            }
            function xs() {
                return new Date(this.valueOf());
            }
            function Hs() {
                var e = this;
                return [ e.year(), e.month(), e.date(), e.hour(), e.minute(), e.second(), e.millisecond() ];
            }
            function js() {
                var e = this;
                return {
                    years: e.year(),
                    months: e.month(),
                    date: e.date(),
                    hours: e.hours(),
                    minutes: e.minutes(),
                    seconds: e.seconds(),
                    milliseconds: e.milliseconds()
                };
            }
            function Ps() {
                return this.isValid() ? this.toISOString() : null;
            }
            function Es() {
                return p(this);
            }
            function Os() {
                return c({}, f(this));
            }
            function As() {
                return f(this).overflow;
            }
            function Cs() {
                return {
                    input: this._i,
                    format: this._f,
                    locale: this._locale,
                    isUTC: this._isUTC,
                    strict: this._strict
                };
            }
            function Ws(e, t) {
                U(0, [ e, e.length ], 0, t);
            }
            function Fs(e) {
                return Is.call(this, e, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);
            }
            function Rs(e) {
                return Is.call(this, e, this.isoWeek(), this.isoWeekday(), 1, 4);
            }
            function Ns() {
                return De(this.year(), 1, 4);
            }
            function zs() {
                var e = this.localeData()._week;
                return De(this.year(), e.dow, e.doy);
            }
            function Is(e, t, s, n, a) {
                var i;
                return null == e ? we(this, n, a).year : (i = De(e, n, a), t > i && (t = i), Us.call(this, e, t, s, n, a));
            }
            function Us(e, t, s, n, a) {
                var i = be(e, t, s, n, a), r = ke(i.year, 0, i.dayOfYear);
                return this.year(r.getUTCFullYear()), this.month(r.getUTCMonth()), this.date(r.getUTCDate()), 
                this;
            }
            function qs(e) {
                return null == e ? Math.ceil((this.month() + 1) / 3) : this.month(3 * (e - 1) + this.month() % 3);
            }
            function Js(e) {
                var t = Math.round((this.clone().startOf("day") - this.clone().startOf("year")) / 864e5) + 1;
                return null == e ? t : this.add(e - t, "d");
            }
            function Bs(e, t) {
                t[ya] = k(1e3 * ("0." + e));
            }
            function Gs() {
                return this._isUTC ? "UTC" : "";
            }
            function Vs() {
                return this._isUTC ? "Coordinated Universal Time" : "";
            }
            function Qs(e) {
                return Tt(1e3 * e);
            }
            function Ks() {
                return Tt.apply(null, arguments).parseZone();
            }
            function $s(e) {
                return e;
            }
            function Zs(e, t, s, n) {
                var a = at(), i = h().set(n, t);
                return a[s](i, e);
            }
            function Xs(e, t, s) {
                if (d(e) && (t = e, e = void 0), e = e || "", null != t) return Zs(e, t, s, "month");
                var n, a = [];
                for (n = 0; n < 12; n++) a[n] = Zs(e, n, s, "month");
                return a;
            }
            function en(e, t, s, n) {
                "boolean" == typeof e ? (d(t) && (s = t, t = void 0), t = t || "") : (t = e, s = t, 
                e = !1, d(t) && (s = t, t = void 0), t = t || "");
                var a = at(), i = e ? a._week.dow : 0;
                if (null != s) return Zs(t, (s + i) % 7, n, "day");
                var r, o = [];
                for (r = 0; r < 7; r++) o[r] = Zs(t, (r + i) % 7, n, "day");
                return o;
            }
            function tn(e, t) {
                return Xs(e, t, "months");
            }
            function sn(e, t) {
                return Xs(e, t, "monthsShort");
            }
            function nn(e, t, s) {
                return en(e, t, s, "weekdays");
            }
            function an(e, t, s) {
                return en(e, t, s, "weekdaysShort");
            }
            function rn(e, t, s) {
                return en(e, t, s, "weekdaysMin");
            }
            function on() {
                var e = this._data;
                return this._milliseconds = ci(this._milliseconds), this._days = ci(this._days), 
                this._months = ci(this._months), e.milliseconds = ci(e.milliseconds), e.seconds = ci(e.seconds), 
                e.minutes = ci(e.minutes), e.hours = ci(e.hours), e.months = ci(e.months), e.years = ci(e.years), 
                this;
            }
            function dn(e, t, s, n) {
                var a = Zt(t, s);
                return e._milliseconds += n * a._milliseconds, e._days += n * a._days, e._months += n * a._months, 
                e._bubble();
            }
            function un(e, t) {
                return dn(this, e, t, 1);
            }
            function ln(e, t) {
                return dn(this, e, t, -1);
            }
            function _n(e) {
                return e < 0 ? Math.floor(e) : Math.ceil(e);
            }
            function cn() {
                var e, t, s, n, a, i = this._milliseconds, r = this._days, o = this._months, d = this._data;
                return i >= 0 && r >= 0 && o >= 0 || i <= 0 && r <= 0 && o <= 0 || (i += 864e5 * _n(mn(o) + r), 
                r = 0, o = 0), d.milliseconds = i % 1e3, e = Y(i / 1e3), d.seconds = e % 60, t = Y(e / 60), 
                d.minutes = t % 60, s = Y(t / 60), d.hours = s % 24, r += Y(s / 24), a = Y(hn(r)), 
                o += a, r -= _n(mn(a)), n = Y(o / 12), o %= 12, d.days = r, d.months = o, d.years = n, 
                this;
            }
            function hn(e) {
                return 4800 * e / 146097;
            }
            function mn(e) {
                return 146097 * e / 4800;
            }
            function fn(e) {
                if (!this.isValid()) return NaN;
                var t, s, n = this._milliseconds;
                if (e = F(e), "month" === e || "year" === e) return t = this._days + n / 864e5, 
                s = this._months + hn(t), "month" === e ? s : s / 12;
                switch (t = this._days + Math.round(mn(this._months)), e) {
                  case "week":
                    return t / 7 + n / 6048e5;

                  case "day":
                    return t + n / 864e5;

                  case "hour":
                    return 24 * t + n / 36e5;

                  case "minute":
                    return 1440 * t + n / 6e4;

                  case "second":
                    return 86400 * t + n / 1e3;

                  case "millisecond":
                    return Math.floor(864e5 * t) + n;

                  default:
                    throw new Error("Unknown unit " + e);
                }
            }
            function pn() {
                return this.isValid() ? this._milliseconds + 864e5 * this._days + this._months % 12 * 2592e6 + 31536e6 * k(this._months / 12) : NaN;
            }
            function Mn(e) {
                return function() {
                    return this.as(e);
                };
            }
            function yn() {
                return Zt(this);
            }
            function Ln(e) {
                return e = F(e), this.isValid() ? this[e + "s"]() : NaN;
            }
            function gn(e) {
                return function() {
                    return this.isValid() ? this._data[e] : NaN;
                };
            }
            function Yn() {
                return Y(this.days() / 7);
            }
            function kn(e, t, s, n, a) {
                return a.relativeTime(t || 1, !!s, e, n);
            }
            function vn(e, t, s) {
                var n = Zt(e).abs(), a = Si(n.as("s")), i = Si(n.as("m")), r = Si(n.as("h")), o = Si(n.as("d")), d = Si(n.as("M")), u = Si(n.as("y")), l = a <= xi.ss && [ "s", a ] || a < xi.s && [ "ss", a ] || i <= 1 && [ "m" ] || i < xi.m && [ "mm", i ] || r <= 1 && [ "h" ] || r < xi.h && [ "hh", r ] || o <= 1 && [ "d" ] || o < xi.d && [ "dd", o ] || d <= 1 && [ "M" ] || d < xi.M && [ "MM", d ] || u <= 1 && [ "y" ] || [ "yy", u ];
                return l[2] = t, l[3] = +e > 0, l[4] = s, kn.apply(null, l);
            }
            function bn(e) {
                return void 0 === e ? Si : "function" == typeof e && (Si = e, !0);
            }
            function wn(e, t) {
                return void 0 !== xi[e] && (void 0 === t ? xi[e] : (xi[e] = t, "s" === e && (xi.ss = t - 1), 
                !0));
            }
            function Dn(e) {
                if (!this.isValid()) return this.localeData().invalidDate();
                var t = this.localeData(), s = vn(this, !e, t);
                return e && (s = t.pastFuture(+this, s)), t.postformat(s);
            }
            function Tn(e) {
                return (e > 0) - (e < 0) || +e;
            }
            function Sn() {
                if (!this.isValid()) return this.localeData().invalidDate();
                var e, t, s, n = Hi(this._milliseconds) / 1e3, a = Hi(this._days), i = Hi(this._months);
                e = Y(n / 60), t = Y(e / 60), n %= 60, e %= 60, s = Y(i / 12), i %= 12;
                var r = s, o = i, d = a, u = t, l = e, _ = n ? n.toFixed(3).replace(/\.?0+$/, "") : "", c = this.asSeconds();
                if (!c) return "P0D";
                var h = c < 0 ? "-" : "", m = Tn(this._months) !== Tn(c) ? "-" : "", f = Tn(this._days) !== Tn(c) ? "-" : "", p = Tn(this._milliseconds) !== Tn(c) ? "-" : "";
                return h + "P" + (r ? m + r + "Y" : "") + (o ? m + o + "M" : "") + (d ? f + d + "D" : "") + (u || l || _ ? "T" : "") + (u ? p + u + "H" : "") + (l ? p + l + "M" : "") + (_ ? p + _ + "S" : "");
            }
            var xn, Hn;
            Hn = Array.prototype.some ? Array.prototype.some : function(e) {
                for (var t = Object(this), s = t.length >>> 0, n = 0; n < s; n++) if (n in t && e.call(this, t[n], n, t)) return !0;
                return !1;
            };
            var jn = t.momentProperties = [], Pn = !1, En = {};
            t.suppressDeprecationWarnings = !1, t.deprecationHandler = null;
            var On;
            On = Object.keys ? Object.keys : function(e) {
                var t, s = [];
                for (t in e) _(e, t) && s.push(t);
                return s;
            };
            var An = {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
            }, Cn = {
                LTS: "h:mm:ss A",
                LT: "h:mm A",
                L: "MM/DD/YYYY",
                LL: "MMMM D, YYYY",
                LLL: "MMMM D, YYYY h:mm A",
                LLLL: "dddd, MMMM D, YYYY h:mm A"
            }, Wn = "Invalid date", Fn = "%d", Rn = /\d{1,2}/, Nn = {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                ss: "%d seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
            }, zn = {}, In = {}, Un = /(\[[^\[]*\])|(\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g, qn = /(\[[^\[]*\])|(\\)?(LTS|LT|LL?L?L?|l{1,4})/g, Jn = {}, Bn = {}, Gn = /\d/, Vn = /\d\d/, Qn = /\d{3}/, Kn = /\d{4}/, $n = /[+-]?\d{6}/, Zn = /\d\d?/, Xn = /\d\d\d\d?/, ea = /\d\d\d\d\d\d?/, ta = /\d{1,3}/, sa = /\d{1,4}/, na = /[+-]?\d{1,6}/, aa = /\d+/, ia = /[+-]?\d+/, ra = /Z|[+-]\d\d:?\d\d/gi, oa = /Z|[+-]\d\d(?::?\d\d)?/gi, da = /[+-]?\d+(\.\d{1,3})?/, ua = /[0-9]{0,256}['a-z\u00A0-\u05FF\u0700-\uD7FF\uF900-\uFDCF\uFDF0-\uFF07\uFF10-\uFFEF]{1,256}|[\u0600-\u06FF\/]{1,256}(\s*?[\u0600-\u06FF]{1,256}){1,2}/i, la = {}, _a = {}, ca = 0, ha = 1, ma = 2, fa = 3, pa = 4, Ma = 5, ya = 6, La = 7, ga = 8;
            U("Y", 0, 0, function() {
                var e = this.year();
                return e <= 9999 ? "" + e : "+" + e;
            }), U(0, [ "YY", 2 ], 0, function() {
                return this.year() % 100;
            }), U(0, [ "YYYY", 4 ], 0, "year"), U(0, [ "YYYYY", 5 ], 0, "year"), U(0, [ "YYYYYY", 6, !0 ], 0, "year"), 
            W("year", "y"), N("year", 1), V("Y", ia), V("YY", Zn, Vn), V("YYYY", sa, Kn), V("YYYYY", na, $n), 
            V("YYYYYY", na, $n), Z([ "YYYYY", "YYYYYY" ], ca), Z("YYYY", function(e, s) {
                s[ca] = 2 === e.length ? t.parseTwoDigitYear(e) : k(e);
            }), Z("YY", function(e, s) {
                s[ca] = t.parseTwoDigitYear(e);
            }), Z("Y", function(e, t) {
                t[ca] = parseInt(e, 10);
            }), t.parseTwoDigitYear = function(e) {
                return k(e) + (k(e) > 68 ? 1900 : 2e3);
            };
            var Ya, ka = ae("FullYear", !0);
            Ya = Array.prototype.indexOf ? Array.prototype.indexOf : function(e) {
                var t;
                for (t = 0; t < this.length; ++t) if (this[t] === e) return t;
                return -1;
            }, U("M", [ "MM", 2 ], "Mo", function() {
                return this.month() + 1;
            }), U("MMM", 0, 0, function(e) {
                return this.localeData().monthsShort(this, e);
            }), U("MMMM", 0, 0, function(e) {
                return this.localeData().months(this, e);
            }), W("month", "M"), N("month", 8), V("M", Zn), V("MM", Zn, Vn), V("MMM", function(e, t) {
                return t.monthsShortRegex(e);
            }), V("MMMM", function(e, t) {
                return t.monthsRegex(e);
            }), Z([ "M", "MM" ], function(e, t) {
                t[ha] = k(e) - 1;
            }), Z([ "MMM", "MMMM" ], function(e, t, s, n) {
                var a = s._locale.monthsParse(e, n, s._strict);
                null != a ? t[ha] = a : f(s).invalidMonth = e;
            });
            var va = /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?/, ba = "January_February_March_April_May_June_July_August_September_October_November_December".split("_"), wa = "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"), Da = ua, Ta = ua;
            U("w", [ "ww", 2 ], "wo", "week"), U("W", [ "WW", 2 ], "Wo", "isoWeek"), W("week", "w"), 
            W("isoWeek", "W"), N("week", 5), N("isoWeek", 5), V("w", Zn), V("ww", Zn, Vn), V("W", Zn), 
            V("WW", Zn, Vn), X([ "w", "ww", "W", "WW" ], function(e, t, s, n) {
                t[n.substr(0, 1)] = k(e);
            });
            var Sa = {
                dow: 0,
                doy: 6
            };
            U("d", 0, "do", "day"), U("dd", 0, 0, function(e) {
                return this.localeData().weekdaysMin(this, e);
            }), U("ddd", 0, 0, function(e) {
                return this.localeData().weekdaysShort(this, e);
            }), U("dddd", 0, 0, function(e) {
                return this.localeData().weekdays(this, e);
            }), U("e", 0, 0, "weekday"), U("E", 0, 0, "isoWeekday"), W("day", "d"), W("weekday", "e"), 
            W("isoWeekday", "E"), N("day", 11), N("weekday", 11), N("isoWeekday", 11), V("d", Zn), 
            V("e", Zn), V("E", Zn), V("dd", function(e, t) {
                return t.weekdaysMinRegex(e);
            }), V("ddd", function(e, t) {
                return t.weekdaysShortRegex(e);
            }), V("dddd", function(e, t) {
                return t.weekdaysRegex(e);
            }), X([ "dd", "ddd", "dddd" ], function(e, t, s, n) {
                var a = s._locale.weekdaysParse(e, n, s._strict);
                null != a ? t.d = a : f(s).invalidWeekday = e;
            }), X([ "d", "e", "E" ], function(e, t, s, n) {
                t[n] = k(e);
            });
            var xa = "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"), Ha = "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"), ja = "Su_Mo_Tu_We_Th_Fr_Sa".split("_"), Pa = ua, Ea = ua, Oa = ua;
            U("H", [ "HH", 2 ], 0, "hour"), U("h", [ "hh", 2 ], 0, Be), U("k", [ "kk", 2 ], 0, Ge), 
            U("hmm", 0, 0, function() {
                return "" + Be.apply(this) + I(this.minutes(), 2);
            }), U("hmmss", 0, 0, function() {
                return "" + Be.apply(this) + I(this.minutes(), 2) + I(this.seconds(), 2);
            }), U("Hmm", 0, 0, function() {
                return "" + this.hours() + I(this.minutes(), 2);
            }), U("Hmmss", 0, 0, function() {
                return "" + this.hours() + I(this.minutes(), 2) + I(this.seconds(), 2);
            }), Ve("a", !0), Ve("A", !1), W("hour", "h"), N("hour", 13), V("a", Qe), V("A", Qe), 
            V("H", Zn), V("h", Zn), V("k", Zn), V("HH", Zn, Vn), V("hh", Zn, Vn), V("kk", Zn, Vn), 
            V("hmm", Xn), V("hmmss", ea), V("Hmm", Xn), V("Hmmss", ea), Z([ "H", "HH" ], fa), 
            Z([ "k", "kk" ], function(e, t, s) {
                var n = k(e);
                t[fa] = 24 === n ? 0 : n;
            }), Z([ "a", "A" ], function(e, t, s) {
                s._isPm = s._locale.isPM(e), s._meridiem = e;
            }), Z([ "h", "hh" ], function(e, t, s) {
                t[fa] = k(e), f(s).bigHour = !0;
            }), Z("hmm", function(e, t, s) {
                var n = e.length - 2;
                t[fa] = k(e.substr(0, n)), t[pa] = k(e.substr(n)), f(s).bigHour = !0;
            }), Z("hmmss", function(e, t, s) {
                var n = e.length - 4, a = e.length - 2;
                t[fa] = k(e.substr(0, n)), t[pa] = k(e.substr(n, 2)), t[Ma] = k(e.substr(a)), f(s).bigHour = !0;
            }), Z("Hmm", function(e, t, s) {
                var n = e.length - 2;
                t[fa] = k(e.substr(0, n)), t[pa] = k(e.substr(n));
            }), Z("Hmmss", function(e, t, s) {
                var n = e.length - 4, a = e.length - 2;
                t[fa] = k(e.substr(0, n)), t[pa] = k(e.substr(n, 2)), t[Ma] = k(e.substr(a));
            });
            var Aa, Ca = /[ap]\.?m?\.?/i, Wa = ae("Hours", !0), Fa = {
                calendar: An,
                longDateFormat: Cn,
                invalidDate: Wn,
                ordinal: Fn,
                dayOfMonthOrdinalParse: Rn,
                relativeTime: Nn,
                months: ba,
                monthsShort: wa,
                week: Sa,
                weekdays: xa,
                weekdaysMin: ja,
                weekdaysShort: Ha,
                meridiemParse: Ca
            }, Ra = {}, Na = {}, za = /^\s*((?:[+-]\d{6}|\d{4})-(?:\d\d-\d\d|W\d\d-\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?::\d\d(?::\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/, Ia = /^\s*((?:[+-]\d{6}|\d{4})(?:\d\d\d\d|W\d\d\d|W\d\d|\d\d\d|\d\d))(?:(T| )(\d\d(?:\d\d(?:\d\d(?:[.,]\d+)?)?)?)([\+\-]\d\d(?::?\d\d)?|\s*Z)?)?$/, Ua = /Z|[+-]\d\d(?::?\d\d)?/, qa = [ [ "YYYYYY-MM-DD", /[+-]\d{6}-\d\d-\d\d/ ], [ "YYYY-MM-DD", /\d{4}-\d\d-\d\d/ ], [ "GGGG-[W]WW-E", /\d{4}-W\d\d-\d/ ], [ "GGGG-[W]WW", /\d{4}-W\d\d/, !1 ], [ "YYYY-DDD", /\d{4}-\d{3}/ ], [ "YYYY-MM", /\d{4}-\d\d/, !1 ], [ "YYYYYYMMDD", /[+-]\d{10}/ ], [ "YYYYMMDD", /\d{8}/ ], [ "GGGG[W]WWE", /\d{4}W\d{3}/ ], [ "GGGG[W]WW", /\d{4}W\d{2}/, !1 ], [ "YYYYDDD", /\d{7}/ ] ], Ja = [ [ "HH:mm:ss.SSSS", /\d\d:\d\d:\d\d\.\d+/ ], [ "HH:mm:ss,SSSS", /\d\d:\d\d:\d\d,\d+/ ], [ "HH:mm:ss", /\d\d:\d\d:\d\d/ ], [ "HH:mm", /\d\d:\d\d/ ], [ "HHmmss.SSSS", /\d\d\d\d\d\d\.\d+/ ], [ "HHmmss,SSSS", /\d\d\d\d\d\d,\d+/ ], [ "HHmmss", /\d\d\d\d\d\d/ ], [ "HHmm", /\d\d\d\d/ ], [ "HH", /\d\d/ ] ], Ba = /^\/?Date\((\-?\d+)/i, Ga = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\s)?(\d{1,2})\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\s(\d{2,4})\s(\d\d):(\d\d)(?::(\d\d))?\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\d{4}))$/, Va = {
                UT: 0,
                GMT: 0,
                EDT: -240,
                EST: -300,
                CDT: -300,
                CST: -360,
                MDT: -360,
                MST: -420,
                PDT: -420,
                PST: -480
            };
            t.createFromInputFallback = w("value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are discouraged and will be removed in an upcoming major release. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.", function(e) {
                e._d = new Date(e._i + (e._useUTC ? " UTC" : ""));
            }), t.ISO_8601 = function() {}, t.RFC_2822 = function() {};
            var Qa = w("moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
                var e = Tt.apply(null, arguments);
                return this.isValid() && e.isValid() ? e < this ? this : e : M();
            }), Ka = w("moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/", function() {
                var e = Tt.apply(null, arguments);
                return this.isValid() && e.isValid() ? e > this ? this : e : M();
            }), $a = function() {
                return Date.now ? Date.now() : +new Date();
            }, Za = [ "year", "quarter", "month", "week", "day", "hour", "minute", "second", "millisecond" ];
            Wt("Z", ":"), Wt("ZZ", ""), V("Z", oa), V("ZZ", oa), Z([ "Z", "ZZ" ], function(e, t, s) {
                s._useUTC = !0, s._tzm = Ft(oa, e);
            });
            var Xa = /([\+\-]|\d\d)/gi;
            t.updateOffset = function() {};
            var ei = /^(\-|\+)?(?:(\d*)[. ])?(\d+)\:(\d+)(?:\:(\d+)(\.\d*)?)?$/, ti = /^(-|\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;
            Zt.fn = Ot.prototype, Zt.invalid = Et;
            var si = ss(1, "add"), ni = ss(-1, "subtract");
            t.defaultFormat = "YYYY-MM-DDTHH:mm:ssZ", t.defaultFormatUtc = "YYYY-MM-DDTHH:mm:ss[Z]";
            var ai = w("moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.", function(e) {
                return void 0 === e ? this.localeData() : this.locale(e);
            });
            U(0, [ "gg", 2 ], 0, function() {
                return this.weekYear() % 100;
            }), U(0, [ "GG", 2 ], 0, function() {
                return this.isoWeekYear() % 100;
            }), Ws("gggg", "weekYear"), Ws("ggggg", "weekYear"), Ws("GGGG", "isoWeekYear"), 
            Ws("GGGGG", "isoWeekYear"), W("weekYear", "gg"), W("isoWeekYear", "GG"), N("weekYear", 1), 
            N("isoWeekYear", 1), V("G", ia), V("g", ia), V("GG", Zn, Vn), V("gg", Zn, Vn), V("GGGG", sa, Kn), 
            V("gggg", sa, Kn), V("GGGGG", na, $n), V("ggggg", na, $n), X([ "gggg", "ggggg", "GGGG", "GGGGG" ], function(e, t, s, n) {
                t[n.substr(0, 2)] = k(e);
            }), X([ "gg", "GG" ], function(e, s, n, a) {
                s[a] = t.parseTwoDigitYear(e);
            }), U("Q", 0, "Qo", "quarter"), W("quarter", "Q"), N("quarter", 7), V("Q", Gn), 
            Z("Q", function(e, t) {
                t[ha] = 3 * (k(e) - 1);
            }), U("D", [ "DD", 2 ], "Do", "date"), W("date", "D"), N("date", 9), V("D", Zn), 
            V("DD", Zn, Vn), V("Do", function(e, t) {
                return e ? t._dayOfMonthOrdinalParse || t._ordinalParse : t._dayOfMonthOrdinalParseLenient;
            }), Z([ "D", "DD" ], ma), Z("Do", function(e, t) {
                t[ma] = k(e.match(Zn)[0]);
            });
            var ii = ae("Date", !0);
            U("DDD", [ "DDDD", 3 ], "DDDo", "dayOfYear"), W("dayOfYear", "DDD"), N("dayOfYear", 4), 
            V("DDD", ta), V("DDDD", Qn), Z([ "DDD", "DDDD" ], function(e, t, s) {
                s._dayOfYear = k(e);
            }), U("m", [ "mm", 2 ], 0, "minute"), W("minute", "m"), N("minute", 14), V("m", Zn), 
            V("mm", Zn, Vn), Z([ "m", "mm" ], pa);
            var ri = ae("Minutes", !1);
            U("s", [ "ss", 2 ], 0, "second"), W("second", "s"), N("second", 15), V("s", Zn), 
            V("ss", Zn, Vn), Z([ "s", "ss" ], Ma);
            var oi = ae("Seconds", !1);
            U("S", 0, 0, function() {
                return ~~(this.millisecond() / 100);
            }), U(0, [ "SS", 2 ], 0, function() {
                return ~~(this.millisecond() / 10);
            }), U(0, [ "SSS", 3 ], 0, "millisecond"), U(0, [ "SSSS", 4 ], 0, function() {
                return 10 * this.millisecond();
            }), U(0, [ "SSSSS", 5 ], 0, function() {
                return 100 * this.millisecond();
            }), U(0, [ "SSSSSS", 6 ], 0, function() {
                return 1e3 * this.millisecond();
            }), U(0, [ "SSSSSSS", 7 ], 0, function() {
                return 1e4 * this.millisecond();
            }), U(0, [ "SSSSSSSS", 8 ], 0, function() {
                return 1e5 * this.millisecond();
            }), U(0, [ "SSSSSSSSS", 9 ], 0, function() {
                return 1e6 * this.millisecond();
            }), W("millisecond", "ms"), N("millisecond", 16), V("S", ta, Gn), V("SS", ta, Vn), 
            V("SSS", ta, Qn);
            var di;
            for (di = "SSSS"; di.length <= 9; di += "S") V(di, aa);
            for (di = "S"; di.length <= 9; di += "S") Z(di, Bs);
            var ui = ae("Milliseconds", !1);
            U("z", 0, 0, "zoneAbbr"), U("zz", 0, 0, "zoneName");
            var li = L.prototype;
            li.add = si, li.calendar = is, li.clone = rs, li.diff = hs, li.endOf = Ds, li.format = ys, 
            li.from = Ls, li.fromNow = gs, li.to = Ys, li.toNow = ks, li.get = oe, li.invalidAt = As, 
            li.isAfter = os, li.isBefore = ds, li.isBetween = us, li.isSame = ls, li.isSameOrAfter = _s, 
            li.isSameOrBefore = cs, li.isValid = Es, li.lang = ai, li.locale = vs, li.localeData = bs, 
            li.max = Ka, li.min = Qa, li.parsingFlags = Os, li.set = de, li.startOf = ws, li.subtract = ni, 
            li.toArray = Hs, li.toObject = js, li.toDate = xs, li.toISOString = ps, li.inspect = Ms, 
            li.toJSON = Ps, li.toString = fs, li.unix = Ss, li.valueOf = Ts, li.creationData = Cs, 
            li.year = ka, li.isLeapYear = ne, li.weekYear = Fs, li.isoWeekYear = Rs, li.quarter = li.quarters = qs, 
            li.month = pe, li.daysInMonth = Me, li.week = li.weeks = He, li.isoWeek = li.isoWeeks = je, 
            li.weeksInYear = zs, li.isoWeeksInYear = Ns, li.date = ii, li.day = li.days = Re, 
            li.weekday = Ne, li.isoWeekday = ze, li.dayOfYear = Js, li.hour = li.hours = Wa, 
            li.minute = li.minutes = ri, li.second = li.seconds = oi, li.millisecond = li.milliseconds = ui, 
            li.utcOffset = zt, li.utc = Ut, li.local = qt, li.parseZone = Jt, li.hasAlignedHourOffset = Bt, 
            li.isDST = Gt, li.isLocal = Qt, li.isUtcOffset = Kt, li.isUtc = $t, li.isUTC = $t, 
            li.zoneAbbr = Gs, li.zoneName = Vs, li.dates = w("dates accessor is deprecated. Use date instead.", ii), 
            li.months = w("months accessor is deprecated. Use month instead", pe), li.years = w("years accessor is deprecated. Use year instead", ka), 
            li.zone = w("moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/", It), 
            li.isDSTShifted = w("isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information", Vt);
            var _i = H.prototype;
            _i.calendar = j, _i.longDateFormat = P, _i.invalidDate = E, _i.ordinal = O, _i.preparse = $s, 
            _i.postformat = $s, _i.relativeTime = A, _i.pastFuture = C, _i.set = S, _i.months = _e, 
            _i.monthsShort = ce, _i.monthsParse = me, _i.monthsRegex = Le, _i.monthsShortRegex = ye, 
            _i.week = Te, _i.firstDayOfYear = xe, _i.firstDayOfWeek = Se, _i.weekdays = Oe, 
            _i.weekdaysMin = Ce, _i.weekdaysShort = Ae, _i.weekdaysParse = Fe, _i.weekdaysRegex = Ie, 
            _i.weekdaysShortRegex = Ue, _i.weekdaysMinRegex = qe, _i.isPM = Ke, _i.meridiem = $e, 
            tt("en", {
                dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
                ordinal: function(e) {
                    var t = e % 10, s = 1 === k(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th";
                    return e + s;
                }
            }), t.lang = w("moment.lang is deprecated. Use moment.locale instead.", tt), t.langData = w("moment.langData is deprecated. Use moment.localeData instead.", at);
            var ci = Math.abs, hi = Mn("ms"), mi = Mn("s"), fi = Mn("m"), pi = Mn("h"), Mi = Mn("d"), yi = Mn("w"), Li = Mn("M"), gi = Mn("y"), Yi = gn("milliseconds"), ki = gn("seconds"), vi = gn("minutes"), bi = gn("hours"), wi = gn("days"), Di = gn("months"), Ti = gn("years"), Si = Math.round, xi = {
                ss: 44,
                s: 45,
                m: 45,
                h: 22,
                d: 26,
                M: 11
            }, Hi = Math.abs, ji = Ot.prototype;
            return ji.isValid = Pt, ji.abs = on, ji.add = un, ji.subtract = ln, ji.as = fn, 
            ji.asMilliseconds = hi, ji.asSeconds = mi, ji.asMinutes = fi, ji.asHours = pi, ji.asDays = Mi, 
            ji.asWeeks = yi, ji.asMonths = Li, ji.asYears = gi, ji.valueOf = pn, ji._bubble = cn, 
            ji.clone = yn, ji.get = Ln, ji.milliseconds = Yi, ji.seconds = ki, ji.minutes = vi, 
            ji.hours = bi, ji.days = wi, ji.weeks = Yn, ji.months = Di, ji.years = Ti, ji.humanize = Dn, 
            ji.toISOString = Sn, ji.toString = Sn, ji.toJSON = Sn, ji.locale = vs, ji.localeData = bs, 
            ji.toIsoString = w("toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)", Sn), 
            ji.lang = ai, U("X", 0, 0, "unix"), U("x", 0, 0, "valueOf"), V("x", ia), V("X", da), 
            Z("X", function(e, t, s) {
                s._d = new Date(1e3 * parseFloat(e, 10));
            }), Z("x", function(e, t, s) {
                s._d = new Date(k(e));
            }), t.version = "2.22.2", n(Tt), t.fn = li, t.min = xt, t.max = Ht, t.now = $a, 
            t.utc = h, t.unix = Qs, t.months = tn, t.isDate = u, t.locale = tt, t.invalid = M, 
            t.duration = Zt, t.isMoment = g, t.weekdays = nn, t.parseZone = Ks, t.localeData = at, 
            t.isDuration = At, t.monthsShort = sn, t.weekdaysMin = rn, t.defineLocale = st, 
            t.updateLocale = nt, t.locales = it, t.weekdaysShort = an, t.normalizeUnits = F, 
            t.relativeTimeRounding = bn, t.relativeTimeThreshold = wn, t.calendarFormat = as, 
            t.prototype = li, t.HTML5_FMT = {
                DATETIME_LOCAL: "YYYY-MM-DDTHH:mm",
                DATETIME_LOCAL_SECONDS: "YYYY-MM-DDTHH:mm:ss",
                DATETIME_LOCAL_MS: "YYYY-MM-DDTHH:mm:ss.SSS",
                DATE: "YYYY-MM-DD",
                TIME: "HH:mm",
                TIME_SECONDS: "HH:mm:ss",
                TIME_MS: "HH:mm:ss.SSS",
                WEEK: "YYYY-[W]WW",
                MONTH: "YYYY-MM"
            }, t;
        });
    }).call(t, s(19)(e));
}, function(e, t) {
    e.exports = function(e) {
        return e.webpackPolyfill || (e.deprecate = function() {}, e.paths = [], e.children = [], 
        e.webpackPolyfill = 1), e;
    };
}, function(e, t, s) {
    function n(e) {
        return s(a(e));
    }
    function a(e) {
        return i[e] || function() {
            throw new Error("Cannot find module '" + e + "'.");
        }();
    }
    var i = {
        "./af": 21,
        "./af.js": 21,
        "./ar": 22,
        "./ar-dz": 23,
        "./ar-dz.js": 23,
        "./ar-kw": 24,
        "./ar-kw.js": 24,
        "./ar-ly": 25,
        "./ar-ly.js": 25,
        "./ar-ma": 26,
        "./ar-ma.js": 26,
        "./ar-sa": 27,
        "./ar-sa.js": 27,
        "./ar-tn": 28,
        "./ar-tn.js": 28,
        "./ar.js": 22,
        "./az": 29,
        "./az.js": 29,
        "./be": 30,
        "./be.js": 30,
        "./bg": 31,
        "./bg.js": 31,
        "./bm": 32,
        "./bm.js": 32,
        "./bn": 33,
        "./bn.js": 33,
        "./bo": 34,
        "./bo.js": 34,
        "./br": 35,
        "./br.js": 35,
        "./bs": 36,
        "./bs.js": 36,
        "./ca": 37,
        "./ca.js": 37,
        "./cs": 38,
        "./cs.js": 38,
        "./cv": 39,
        "./cv.js": 39,
        "./cy": 40,
        "./cy.js": 40,
        "./da": 41,
        "./da.js": 41,
        "./de": 42,
        "./de-at": 43,
        "./de-at.js": 43,
        "./de-ch": 44,
        "./de-ch.js": 44,
        "./de.js": 42,
        "./dv": 45,
        "./dv.js": 45,
        "./el": 46,
        "./el.js": 46,
        "./en-au": 47,
        "./en-au.js": 47,
        "./en-ca": 48,
        "./en-ca.js": 48,
        "./en-gb": 49,
        "./en-gb.js": 49,
        "./en-ie": 50,
        "./en-ie.js": 50,
        "./en-il": 51,
        "./en-il.js": 51,
        "./en-nz": 52,
        "./en-nz.js": 52,
        "./eo": 53,
        "./eo.js": 53,
        "./es": 54,
        "./es-do": 55,
        "./es-do.js": 55,
        "./es-us": 56,
        "./es-us.js": 56,
        "./es.js": 54,
        "./et": 57,
        "./et.js": 57,
        "./eu": 58,
        "./eu.js": 58,
        "./fa": 59,
        "./fa.js": 59,
        "./fi": 60,
        "./fi.js": 60,
        "./fo": 61,
        "./fo.js": 61,
        "./fr": 62,
        "./fr-ca": 63,
        "./fr-ca.js": 63,
        "./fr-ch": 64,
        "./fr-ch.js": 64,
        "./fr.js": 62,
        "./fy": 65,
        "./fy.js": 65,
        "./gd": 66,
        "./gd.js": 66,
        "./gl": 67,
        "./gl.js": 67,
        "./gom-latn": 68,
        "./gom-latn.js": 68,
        "./gu": 69,
        "./gu.js": 69,
        "./he": 70,
        "./he.js": 70,
        "./hi": 71,
        "./hi.js": 71,
        "./hr": 72,
        "./hr.js": 72,
        "./hu": 73,
        "./hu.js": 73,
        "./hy-am": 74,
        "./hy-am.js": 74,
        "./id": 75,
        "./id.js": 75,
        "./is": 76,
        "./is.js": 76,
        "./it": 77,
        "./it.js": 77,
        "./ja": 78,
        "./ja.js": 78,
        "./jv": 79,
        "./jv.js": 79,
        "./ka": 80,
        "./ka.js": 80,
        "./kk": 81,
        "./kk.js": 81,
        "./km": 82,
        "./km.js": 82,
        "./kn": 83,
        "./kn.js": 83,
        "./ko": 84,
        "./ko.js": 84,
        "./ky": 85,
        "./ky.js": 85,
        "./lb": 86,
        "./lb.js": 86,
        "./lo": 87,
        "./lo.js": 87,
        "./lt": 88,
        "./lt.js": 88,
        "./lv": 89,
        "./lv.js": 89,
        "./me": 90,
        "./me.js": 90,
        "./mi": 91,
        "./mi.js": 91,
        "./mk": 92,
        "./mk.js": 92,
        "./ml": 93,
        "./ml.js": 93,
        "./mn": 94,
        "./mn.js": 94,
        "./mr": 95,
        "./mr.js": 95,
        "./ms": 96,
        "./ms-my": 97,
        "./ms-my.js": 97,
        "./ms.js": 96,
        "./mt": 98,
        "./mt.js": 98,
        "./my": 99,
        "./my.js": 99,
        "./nb": 100,
        "./nb.js": 100,
        "./ne": 101,
        "./ne.js": 101,
        "./nl": 102,
        "./nl-be": 103,
        "./nl-be.js": 103,
        "./nl.js": 102,
        "./nn": 104,
        "./nn.js": 104,
        "./pa-in": 105,
        "./pa-in.js": 105,
        "./pl": 106,
        "./pl.js": 106,
        "./pt": 107,
        "./pt-br": 108,
        "./pt-br.js": 108,
        "./pt.js": 107,
        "./ro": 109,
        "./ro.js": 109,
        "./ru": 110,
        "./ru.js": 110,
        "./sd": 111,
        "./sd.js": 111,
        "./se": 112,
        "./se.js": 112,
        "./si": 113,
        "./si.js": 113,
        "./sk": 114,
        "./sk.js": 114,
        "./sl": 115,
        "./sl.js": 115,
        "./sq": 116,
        "./sq.js": 116,
        "./sr": 117,
        "./sr-cyrl": 118,
        "./sr-cyrl.js": 118,
        "./sr.js": 117,
        "./ss": 119,
        "./ss.js": 119,
        "./sv": 120,
        "./sv.js": 120,
        "./sw": 121,
        "./sw.js": 121,
        "./ta": 122,
        "./ta.js": 122,
        "./te": 123,
        "./te.js": 123,
        "./tet": 124,
        "./tet.js": 124,
        "./tg": 125,
        "./tg.js": 125,
        "./th": 126,
        "./th.js": 126,
        "./tl-ph": 127,
        "./tl-ph.js": 127,
        "./tlh": 128,
        "./tlh.js": 128,
        "./tr": 129,
        "./tr.js": 129,
        "./tzl": 130,
        "./tzl.js": 130,
        "./tzm": 131,
        "./tzm-latn": 132,
        "./tzm-latn.js": 132,
        "./tzm.js": 131,
        "./ug-cn": 133,
        "./ug-cn.js": 133,
        "./uk": 134,
        "./uk.js": 134,
        "./ur": 135,
        "./ur.js": 135,
        "./uz": 136,
        "./uz-latn": 137,
        "./uz-latn.js": 137,
        "./uz.js": 136,
        "./vi": 138,
        "./vi.js": 138,
        "./x-pseudo": 139,
        "./x-pseudo.js": 139,
        "./yo": 140,
        "./yo.js": 140,
        "./zh-cn": 141,
        "./zh-cn.js": 141,
        "./zh-hk": 142,
        "./zh-hk.js": 142,
        "./zh-tw": 143,
        "./zh-tw.js": 143
    };
    n.keys = function() {
        return Object.keys(i);
    }, n.resolve = a, e.exports = n, n.id = 20;
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("af", {
            months: "Januarie_Februarie_Maart_April_Mei_Junie_Julie_Augustus_September_Oktober_November_Desember".split("_"),
            monthsShort: "Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Des".split("_"),
            weekdays: "Sondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrydag_Saterdag".split("_"),
            weekdaysShort: "Son_Maa_Din_Woe_Don_Vry_Sat".split("_"),
            weekdaysMin: "So_Ma_Di_Wo_Do_Vr_Sa".split("_"),
            meridiemParse: /vm|nm/i,
            isPM: function(e) {
                return /^nm$/i.test(e);
            },
            meridiem: function(e, t, s) {
                return e < 12 ? s ? "vm" : "VM" : s ? "nm" : "NM";
            },
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Vandag om] LT",
                nextDay: "[Môre om] LT",
                nextWeek: "dddd [om] LT",
                lastDay: "[Gister om] LT",
                lastWeek: "[Laas] dddd [om] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "oor %s",
                past: "%s gelede",
                s: "'n paar sekondes",
                ss: "%d sekondes",
                m: "'n minuut",
                mm: "%d minute",
                h: "'n uur",
                hh: "%d ure",
                d: "'n dag",
                dd: "%d dae",
                M: "'n maand",
                MM: "%d maande",
                y: "'n jaar",
                yy: "%d jaar"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
            ordinal: function(e) {
                return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de");
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "١",
            "2": "٢",
            "3": "٣",
            "4": "٤",
            "5": "٥",
            "6": "٦",
            "7": "٧",
            "8": "٨",
            "9": "٩",
            "0": "٠"
        }, s = {
            "١": "1",
            "٢": "2",
            "٣": "3",
            "٤": "4",
            "٥": "5",
            "٦": "6",
            "٧": "7",
            "٨": "8",
            "٩": "9",
            "٠": "0"
        }, n = function(e) {
            return 0 === e ? 0 : 1 === e ? 1 : 2 === e ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5;
        }, a = {
            s: [ "أقل من ثانية", "ثانية واحدة", [ "ثانيتان", "ثانيتين" ], "%d ثوان", "%d ثانية", "%d ثانية" ],
            m: [ "أقل من دقيقة", "دقيقة واحدة", [ "دقيقتان", "دقيقتين" ], "%d دقائق", "%d دقيقة", "%d دقيقة" ],
            h: [ "أقل من ساعة", "ساعة واحدة", [ "ساعتان", "ساعتين" ], "%d ساعات", "%d ساعة", "%d ساعة" ],
            d: [ "أقل من يوم", "يوم واحد", [ "يومان", "يومين" ], "%d أيام", "%d يومًا", "%d يوم" ],
            M: [ "أقل من شهر", "شهر واحد", [ "شهران", "شهرين" ], "%d أشهر", "%d شهرا", "%d شهر" ],
            y: [ "أقل من عام", "عام واحد", [ "عامان", "عامين" ], "%d أعوام", "%d عامًا", "%d عام" ]
        }, i = function(e) {
            return function(t, s, i, r) {
                var o = n(t), d = a[e][n(t)];
                return 2 === o && (d = d[s ? 0 : 1]), d.replace(/%d/i, t);
            };
        }, r = [ "يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر" ], o = e.defineLocale("ar", {
            months: r,
            monthsShort: r,
            weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
            weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
            weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "D/‏M/‏YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            meridiemParse: /ص|م/,
            isPM: function(e) {
                return "م" === e;
            },
            meridiem: function(e, t, s) {
                return e < 12 ? "ص" : "م";
            },
            calendar: {
                sameDay: "[اليوم عند الساعة] LT",
                nextDay: "[غدًا عند الساعة] LT",
                nextWeek: "dddd [عند الساعة] LT",
                lastDay: "[أمس عند الساعة] LT",
                lastWeek: "dddd [عند الساعة] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "بعد %s",
                past: "منذ %s",
                s: i("s"),
                ss: i("s"),
                m: i("m"),
                mm: i("m"),
                h: i("h"),
                hh: i("h"),
                d: i("d"),
                dd: i("d"),
                M: i("M"),
                MM: i("M"),
                y: i("y"),
                yy: i("y")
            },
            preparse: function(e) {
                return e.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function(e) {
                    return s[e];
                }).replace(/،/g, ",");
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                }).replace(/,/g, "،");
            },
            week: {
                dow: 6,
                doy: 12
            }
        });
        return o;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ar-dz", {
            months: "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
            monthsShort: "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
            weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
            weekdaysShort: "احد_اثنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),
            weekdaysMin: "أح_إث_ثلا_أر_خم_جم_سب".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[اليوم على الساعة] LT",
                nextDay: "[غدا على الساعة] LT",
                nextWeek: "dddd [على الساعة] LT",
                lastDay: "[أمس على الساعة] LT",
                lastWeek: "dddd [على الساعة] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "في %s",
                past: "منذ %s",
                s: "ثوان",
                ss: "%d ثانية",
                m: "دقيقة",
                mm: "%d دقائق",
                h: "ساعة",
                hh: "%d ساعات",
                d: "يوم",
                dd: "%d أيام",
                M: "شهر",
                MM: "%d أشهر",
                y: "سنة",
                yy: "%d سنوات"
            },
            week: {
                dow: 0,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ar-kw", {
            months: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
            monthsShort: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
            weekdays: "الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
            weekdaysShort: "احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),
            weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[اليوم على الساعة] LT",
                nextDay: "[غدا على الساعة] LT",
                nextWeek: "dddd [على الساعة] LT",
                lastDay: "[أمس على الساعة] LT",
                lastWeek: "dddd [على الساعة] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "في %s",
                past: "منذ %s",
                s: "ثوان",
                ss: "%d ثانية",
                m: "دقيقة",
                mm: "%d دقائق",
                h: "ساعة",
                hh: "%d ساعات",
                d: "يوم",
                dd: "%d أيام",
                M: "شهر",
                MM: "%d أشهر",
                y: "سنة",
                yy: "%d سنوات"
            },
            week: {
                dow: 0,
                doy: 12
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "1",
            "2": "2",
            "3": "3",
            "4": "4",
            "5": "5",
            "6": "6",
            "7": "7",
            "8": "8",
            "9": "9",
            "0": "0"
        }, s = function(e) {
            return 0 === e ? 0 : 1 === e ? 1 : 2 === e ? 2 : e % 100 >= 3 && e % 100 <= 10 ? 3 : e % 100 >= 11 ? 4 : 5;
        }, n = {
            s: [ "أقل من ثانية", "ثانية واحدة", [ "ثانيتان", "ثانيتين" ], "%d ثوان", "%d ثانية", "%d ثانية" ],
            m: [ "أقل من دقيقة", "دقيقة واحدة", [ "دقيقتان", "دقيقتين" ], "%d دقائق", "%d دقيقة", "%d دقيقة" ],
            h: [ "أقل من ساعة", "ساعة واحدة", [ "ساعتان", "ساعتين" ], "%d ساعات", "%d ساعة", "%d ساعة" ],
            d: [ "أقل من يوم", "يوم واحد", [ "يومان", "يومين" ], "%d أيام", "%d يومًا", "%d يوم" ],
            M: [ "أقل من شهر", "شهر واحد", [ "شهران", "شهرين" ], "%d أشهر", "%d شهرا", "%d شهر" ],
            y: [ "أقل من عام", "عام واحد", [ "عامان", "عامين" ], "%d أعوام", "%d عامًا", "%d عام" ]
        }, a = function(e) {
            return function(t, a, i, r) {
                var o = s(t), d = n[e][s(t)];
                return 2 === o && (d = d[a ? 0 : 1]), d.replace(/%d/i, t);
            };
        }, i = [ "يناير", "فبراير", "مارس", "أبريل", "مايو", "يونيو", "يوليو", "أغسطس", "سبتمبر", "أكتوبر", "نوفمبر", "ديسمبر" ], r = e.defineLocale("ar-ly", {
            months: i,
            monthsShort: i,
            weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
            weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
            weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "D/‏M/‏YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            meridiemParse: /ص|م/,
            isPM: function(e) {
                return "م" === e;
            },
            meridiem: function(e, t, s) {
                return e < 12 ? "ص" : "م";
            },
            calendar: {
                sameDay: "[اليوم عند الساعة] LT",
                nextDay: "[غدًا عند الساعة] LT",
                nextWeek: "dddd [عند الساعة] LT",
                lastDay: "[أمس عند الساعة] LT",
                lastWeek: "dddd [عند الساعة] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "بعد %s",
                past: "منذ %s",
                s: a("s"),
                ss: a("s"),
                m: a("m"),
                mm: a("m"),
                h: a("h"),
                hh: a("h"),
                d: a("d"),
                dd: a("d"),
                M: a("M"),
                MM: a("M"),
                y: a("y"),
                yy: a("y")
            },
            preparse: function(e) {
                return e.replace(/،/g, ",");
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                }).replace(/,/g, "،");
            },
            week: {
                dow: 6,
                doy: 12
            }
        });
        return r;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ar-ma", {
            months: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
            monthsShort: "يناير_فبراير_مارس_أبريل_ماي_يونيو_يوليوز_غشت_شتنبر_أكتوبر_نونبر_دجنبر".split("_"),
            weekdays: "الأحد_الإتنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
            weekdaysShort: "احد_اتنين_ثلاثاء_اربعاء_خميس_جمعة_سبت".split("_"),
            weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[اليوم على الساعة] LT",
                nextDay: "[غدا على الساعة] LT",
                nextWeek: "dddd [على الساعة] LT",
                lastDay: "[أمس على الساعة] LT",
                lastWeek: "dddd [على الساعة] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "في %s",
                past: "منذ %s",
                s: "ثوان",
                ss: "%d ثانية",
                m: "دقيقة",
                mm: "%d دقائق",
                h: "ساعة",
                hh: "%d ساعات",
                d: "يوم",
                dd: "%d أيام",
                M: "شهر",
                MM: "%d أشهر",
                y: "سنة",
                yy: "%d سنوات"
            },
            week: {
                dow: 6,
                doy: 12
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "١",
            "2": "٢",
            "3": "٣",
            "4": "٤",
            "5": "٥",
            "6": "٦",
            "7": "٧",
            "8": "٨",
            "9": "٩",
            "0": "٠"
        }, s = {
            "١": "1",
            "٢": "2",
            "٣": "3",
            "٤": "4",
            "٥": "5",
            "٦": "6",
            "٧": "7",
            "٨": "8",
            "٩": "9",
            "٠": "0"
        }, n = e.defineLocale("ar-sa", {
            months: "يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
            monthsShort: "يناير_فبراير_مارس_أبريل_مايو_يونيو_يوليو_أغسطس_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
            weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
            weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
            weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            meridiemParse: /ص|م/,
            isPM: function(e) {
                return "م" === e;
            },
            meridiem: function(e, t, s) {
                return e < 12 ? "ص" : "م";
            },
            calendar: {
                sameDay: "[اليوم على الساعة] LT",
                nextDay: "[غدا على الساعة] LT",
                nextWeek: "dddd [على الساعة] LT",
                lastDay: "[أمس على الساعة] LT",
                lastWeek: "dddd [على الساعة] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "في %s",
                past: "منذ %s",
                s: "ثوان",
                ss: "%d ثانية",
                m: "دقيقة",
                mm: "%d دقائق",
                h: "ساعة",
                hh: "%d ساعات",
                d: "يوم",
                dd: "%d أيام",
                M: "شهر",
                MM: "%d أشهر",
                y: "سنة",
                yy: "%d سنوات"
            },
            preparse: function(e) {
                return e.replace(/[١٢٣٤٥٦٧٨٩٠]/g, function(e) {
                    return s[e];
                }).replace(/،/g, ",");
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                }).replace(/,/g, "،");
            },
            week: {
                dow: 0,
                doy: 6
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ar-tn", {
            months: "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
            monthsShort: "جانفي_فيفري_مارس_أفريل_ماي_جوان_جويلية_أوت_سبتمبر_أكتوبر_نوفمبر_ديسمبر".split("_"),
            weekdays: "الأحد_الإثنين_الثلاثاء_الأربعاء_الخميس_الجمعة_السبت".split("_"),
            weekdaysShort: "أحد_إثنين_ثلاثاء_أربعاء_خميس_جمعة_سبت".split("_"),
            weekdaysMin: "ح_ن_ث_ر_خ_ج_س".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[اليوم على الساعة] LT",
                nextDay: "[غدا على الساعة] LT",
                nextWeek: "dddd [على الساعة] LT",
                lastDay: "[أمس على الساعة] LT",
                lastWeek: "dddd [على الساعة] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "في %s",
                past: "منذ %s",
                s: "ثوان",
                ss: "%d ثانية",
                m: "دقيقة",
                mm: "%d دقائق",
                h: "ساعة",
                hh: "%d ساعات",
                d: "يوم",
                dd: "%d أيام",
                M: "شهر",
                MM: "%d أشهر",
                y: "سنة",
                yy: "%d سنوات"
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            1: "-inci",
            5: "-inci",
            8: "-inci",
            70: "-inci",
            80: "-inci",
            2: "-nci",
            7: "-nci",
            20: "-nci",
            50: "-nci",
            3: "-üncü",
            4: "-üncü",
            100: "-üncü",
            6: "-ncı",
            9: "-uncu",
            10: "-uncu",
            30: "-uncu",
            60: "-ıncı",
            90: "-ıncı"
        }, s = e.defineLocale("az", {
            months: "yanvar_fevral_mart_aprel_may_iyun_iyul_avqust_sentyabr_oktyabr_noyabr_dekabr".split("_"),
            monthsShort: "yan_fev_mar_apr_may_iyn_iyl_avq_sen_okt_noy_dek".split("_"),
            weekdays: "Bazar_Bazar ertəsi_Çərşənbə axşamı_Çərşənbə_Cümə axşamı_Cümə_Şənbə".split("_"),
            weekdaysShort: "Baz_BzE_ÇAx_Çər_CAx_Cüm_Şən".split("_"),
            weekdaysMin: "Bz_BE_ÇA_Çə_CA_Cü_Şə".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[bugün saat] LT",
                nextDay: "[sabah saat] LT",
                nextWeek: "[gələn həftə] dddd [saat] LT",
                lastDay: "[dünən] LT",
                lastWeek: "[keçən həftə] dddd [saat] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s sonra",
                past: "%s əvvəl",
                s: "birneçə saniyə",
                ss: "%d saniyə",
                m: "bir dəqiqə",
                mm: "%d dəqiqə",
                h: "bir saat",
                hh: "%d saat",
                d: "bir gün",
                dd: "%d gün",
                M: "bir ay",
                MM: "%d ay",
                y: "bir il",
                yy: "%d il"
            },
            meridiemParse: /gecə|səhər|gündüz|axşam/,
            isPM: function(e) {
                return /^(gündüz|axşam)$/.test(e);
            },
            meridiem: function(e, t, s) {
                return e < 4 ? "gecə" : e < 12 ? "səhər" : e < 17 ? "gündüz" : "axşam";
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(ıncı|inci|nci|üncü|ncı|uncu)/,
            ordinal: function(e) {
                if (0 === e) return e + "-ıncı";
                var s = e % 10, n = e % 100 - s, a = e >= 100 ? 100 : null;
                return e + (t[s] || t[n] || t[a]);
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t) {
            var s = e.split("_");
            return t % 10 === 1 && t % 100 !== 11 ? s[0] : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20) ? s[1] : s[2];
        }
        function s(e, s, n) {
            var a = {
                ss: s ? "секунда_секунды_секунд" : "секунду_секунды_секунд",
                mm: s ? "хвіліна_хвіліны_хвілін" : "хвіліну_хвіліны_хвілін",
                hh: s ? "гадзіна_гадзіны_гадзін" : "гадзіну_гадзіны_гадзін",
                dd: "дзень_дні_дзён",
                MM: "месяц_месяцы_месяцаў",
                yy: "год_гады_гадоў"
            };
            return "m" === n ? s ? "хвіліна" : "хвіліну" : "h" === n ? s ? "гадзіна" : "гадзіну" : e + " " + t(a[n], +e);
        }
        var n = e.defineLocale("be", {
            months: {
                format: "студзеня_лютага_сакавіка_красавіка_траўня_чэрвеня_ліпеня_жніўня_верасня_кастрычніка_лістапада_снежня".split("_"),
                standalone: "студзень_люты_сакавік_красавік_травень_чэрвень_ліпень_жнівень_верасень_кастрычнік_лістапад_снежань".split("_")
            },
            monthsShort: "студ_лют_сак_крас_трав_чэрв_ліп_жнів_вер_каст_ліст_снеж".split("_"),
            weekdays: {
                format: "нядзелю_панядзелак_аўторак_сераду_чацвер_пятніцу_суботу".split("_"),
                standalone: "нядзеля_панядзелак_аўторак_серада_чацвер_пятніца_субота".split("_"),
                isFormat: /\[ ?[Ууў] ?(?:мінулую|наступную)? ?\] ?dddd/
            },
            weekdaysShort: "нд_пн_ат_ср_чц_пт_сб".split("_"),
            weekdaysMin: "нд_пн_ат_ср_чц_пт_сб".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY г.",
                LLL: "D MMMM YYYY г., HH:mm",
                LLLL: "dddd, D MMMM YYYY г., HH:mm"
            },
            calendar: {
                sameDay: "[Сёння ў] LT",
                nextDay: "[Заўтра ў] LT",
                lastDay: "[Учора ў] LT",
                nextWeek: function() {
                    return "[У] dddd [ў] LT";
                },
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                      case 3:
                      case 5:
                      case 6:
                        return "[У мінулую] dddd [ў] LT";

                      case 1:
                      case 2:
                      case 4:
                        return "[У мінулы] dddd [ў] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "праз %s",
                past: "%s таму",
                s: "некалькі секунд",
                m: s,
                mm: s,
                h: s,
                hh: s,
                d: "дзень",
                dd: s,
                M: "месяц",
                MM: s,
                y: "год",
                yy: s
            },
            meridiemParse: /ночы|раніцы|дня|вечара/,
            isPM: function(e) {
                return /^(дня|вечара)$/.test(e);
            },
            meridiem: function(e, t, s) {
                return e < 4 ? "ночы" : e < 12 ? "раніцы" : e < 17 ? "дня" : "вечара";
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(і|ы|га)/,
            ordinal: function(e, t) {
                switch (t) {
                  case "M":
                  case "d":
                  case "DDD":
                  case "w":
                  case "W":
                    return e % 10 !== 2 && e % 10 !== 3 || e % 100 === 12 || e % 100 === 13 ? e + "-ы" : e + "-і";

                  case "D":
                    return e + "-га";

                  default:
                    return e;
                }
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("bg", {
            months: "януари_февруари_март_април_май_юни_юли_август_септември_октомври_ноември_декември".split("_"),
            monthsShort: "янр_фев_мар_апр_май_юни_юли_авг_сеп_окт_ное_дек".split("_"),
            weekdays: "неделя_понеделник_вторник_сряда_четвъртък_петък_събота".split("_"),
            weekdaysShort: "нед_пон_вто_сря_чет_пет_съб".split("_"),
            weekdaysMin: "нд_пн_вт_ср_чт_пт_сб".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "D.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY H:mm",
                LLLL: "dddd, D MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[Днес в] LT",
                nextDay: "[Утре в] LT",
                nextWeek: "dddd [в] LT",
                lastDay: "[Вчера в] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                      case 3:
                      case 6:
                        return "[В изминалата] dddd [в] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[В изминалия] dddd [в] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "след %s",
                past: "преди %s",
                s: "няколко секунди",
                ss: "%d секунди",
                m: "минута",
                mm: "%d минути",
                h: "час",
                hh: "%d часа",
                d: "ден",
                dd: "%d дни",
                M: "месец",
                MM: "%d месеца",
                y: "година",
                yy: "%d години"
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
            ordinal: function(e) {
                var t = e % 10, s = e % 100;
                return 0 === e ? e + "-ев" : 0 === s ? e + "-ен" : s > 10 && s < 20 ? e + "-ти" : 1 === t ? e + "-ви" : 2 === t ? e + "-ри" : 7 === t || 8 === t ? e + "-ми" : e + "-ти";
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("bm", {
            months: "Zanwuyekalo_Fewuruyekalo_Marisikalo_Awirilikalo_Mɛkalo_Zuwɛnkalo_Zuluyekalo_Utikalo_Sɛtanburukalo_ɔkutɔburukalo_Nowanburukalo_Desanburukalo".split("_"),
            monthsShort: "Zan_Few_Mar_Awi_Mɛ_Zuw_Zul_Uti_Sɛt_ɔku_Now_Des".split("_"),
            weekdays: "Kari_Ntɛnɛn_Tarata_Araba_Alamisa_Juma_Sibiri".split("_"),
            weekdaysShort: "Kar_Ntɛ_Tar_Ara_Ala_Jum_Sib".split("_"),
            weekdaysMin: "Ka_Nt_Ta_Ar_Al_Ju_Si".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "MMMM [tile] D [san] YYYY",
                LLL: "MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm",
                LLLL: "dddd MMMM [tile] D [san] YYYY [lɛrɛ] HH:mm"
            },
            calendar: {
                sameDay: "[Bi lɛrɛ] LT",
                nextDay: "[Sini lɛrɛ] LT",
                nextWeek: "dddd [don lɛrɛ] LT",
                lastDay: "[Kunu lɛrɛ] LT",
                lastWeek: "dddd [tɛmɛnen lɛrɛ] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s kɔnɔ",
                past: "a bɛ %s bɔ",
                s: "sanga dama dama",
                ss: "sekondi %d",
                m: "miniti kelen",
                mm: "miniti %d",
                h: "lɛrɛ kelen",
                hh: "lɛrɛ %d",
                d: "tile kelen",
                dd: "tile %d",
                M: "kalo kelen",
                MM: "kalo %d",
                y: "san kelen",
                yy: "san %d"
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "১",
            "2": "২",
            "3": "৩",
            "4": "৪",
            "5": "৫",
            "6": "৬",
            "7": "৭",
            "8": "৮",
            "9": "৯",
            "0": "০"
        }, s = {
            "১": "1",
            "২": "2",
            "৩": "3",
            "৪": "4",
            "৫": "5",
            "৬": "6",
            "৭": "7",
            "৮": "8",
            "৯": "9",
            "০": "0"
        }, n = e.defineLocale("bn", {
            months: "জানুয়ারী_ফেব্রুয়ারি_মার্চ_এপ্রিল_মে_জুন_জুলাই_আগস্ট_সেপ্টেম্বর_অক্টোবর_নভেম্বর_ডিসেম্বর".split("_"),
            monthsShort: "জানু_ফেব_মার্চ_এপ্র_মে_জুন_জুল_আগ_সেপ্ট_অক্টো_নভে_ডিসে".split("_"),
            weekdays: "রবিবার_সোমবার_মঙ্গলবার_বুধবার_বৃহস্পতিবার_শুক্রবার_শনিবার".split("_"),
            weekdaysShort: "রবি_সোম_মঙ্গল_বুধ_বৃহস্পতি_শুক্র_শনি".split("_"),
            weekdaysMin: "রবি_সোম_মঙ্গ_বুধ_বৃহঃ_শুক্র_শনি".split("_"),
            longDateFormat: {
                LT: "A h:mm সময়",
                LTS: "A h:mm:ss সময়",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm সময়",
                LLLL: "dddd, D MMMM YYYY, A h:mm সময়"
            },
            calendar: {
                sameDay: "[আজ] LT",
                nextDay: "[আগামীকাল] LT",
                nextWeek: "dddd, LT",
                lastDay: "[গতকাল] LT",
                lastWeek: "[গত] dddd, LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s পরে",
                past: "%s আগে",
                s: "কয়েক সেকেন্ড",
                ss: "%d সেকেন্ড",
                m: "এক মিনিট",
                mm: "%d মিনিট",
                h: "এক ঘন্টা",
                hh: "%d ঘন্টা",
                d: "এক দিন",
                dd: "%d দিন",
                M: "এক মাস",
                MM: "%d মাস",
                y: "এক বছর",
                yy: "%d বছর"
            },
            preparse: function(e) {
                return e.replace(/[১২৩৪৫৬৭৮৯০]/g, function(e) {
                    return s[e];
                });
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                });
            },
            meridiemParse: /রাত|সকাল|দুপুর|বিকাল|রাত/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "রাত" === t && e >= 4 || "দুপুর" === t && e < 5 || "বিকাল" === t ? e + 12 : e;
            },
            meridiem: function(e, t, s) {
                return e < 4 ? "রাত" : e < 10 ? "সকাল" : e < 17 ? "দুপুর" : e < 20 ? "বিকাল" : "রাত";
            },
            week: {
                dow: 0,
                doy: 6
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "༡",
            "2": "༢",
            "3": "༣",
            "4": "༤",
            "5": "༥",
            "6": "༦",
            "7": "༧",
            "8": "༨",
            "9": "༩",
            "0": "༠"
        }, s = {
            "༡": "1",
            "༢": "2",
            "༣": "3",
            "༤": "4",
            "༥": "5",
            "༦": "6",
            "༧": "7",
            "༨": "8",
            "༩": "9",
            "༠": "0"
        }, n = e.defineLocale("bo", {
            months: "ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ".split("_"),
            monthsShort: "ཟླ་བ་དང་པོ_ཟླ་བ་གཉིས་པ_ཟླ་བ་གསུམ་པ_ཟླ་བ་བཞི་པ_ཟླ་བ་ལྔ་པ_ཟླ་བ་དྲུག་པ_ཟླ་བ་བདུན་པ_ཟླ་བ་བརྒྱད་པ_ཟླ་བ་དགུ་པ_ཟླ་བ་བཅུ་པ_ཟླ་བ་བཅུ་གཅིག་པ_ཟླ་བ་བཅུ་གཉིས་པ".split("_"),
            weekdays: "གཟའ་ཉི་མ་_གཟའ་ཟླ་བ་_གཟའ་མིག་དམར་_གཟའ་ལྷག་པ་_གཟའ་ཕུར་བུ_གཟའ་པ་སངས་_གཟའ་སྤེན་པ་".split("_"),
            weekdaysShort: "ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་".split("_"),
            weekdaysMin: "ཉི་མ་_ཟླ་བ་_མིག་དམར་_ལྷག་པ་_ཕུར་བུ_པ་སངས་_སྤེན་པ་".split("_"),
            longDateFormat: {
                LT: "A h:mm",
                LTS: "A h:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm",
                LLLL: "dddd, D MMMM YYYY, A h:mm"
            },
            calendar: {
                sameDay: "[དི་རིང] LT",
                nextDay: "[སང་ཉིན] LT",
                nextWeek: "[བདུན་ཕྲག་རྗེས་མ], LT",
                lastDay: "[ཁ་སང] LT",
                lastWeek: "[བདུན་ཕྲག་མཐའ་མ] dddd, LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s ལ་",
                past: "%s སྔན་ལ",
                s: "ལམ་སང",
                ss: "%d སྐར་ཆ།",
                m: "སྐར་མ་གཅིག",
                mm: "%d སྐར་མ",
                h: "ཆུ་ཚོད་གཅིག",
                hh: "%d ཆུ་ཚོད",
                d: "ཉིན་གཅིག",
                dd: "%d ཉིན་",
                M: "ཟླ་བ་གཅིག",
                MM: "%d ཟླ་བ",
                y: "ལོ་གཅིག",
                yy: "%d ལོ"
            },
            preparse: function(e) {
                return e.replace(/[༡༢༣༤༥༦༧༨༩༠]/g, function(e) {
                    return s[e];
                });
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                });
            },
            meridiemParse: /མཚན་མོ|ཞོགས་ཀས|ཉིན་གུང|དགོང་དག|མཚན་མོ/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "མཚན་མོ" === t && e >= 4 || "ཉིན་གུང" === t && e < 5 || "དགོང་དག" === t ? e + 12 : e;
            },
            meridiem: function(e, t, s) {
                return e < 4 ? "མཚན་མོ" : e < 10 ? "ཞོགས་ཀས" : e < 17 ? "ཉིན་གུང" : e < 20 ? "དགོང་དག" : "མཚན་མོ";
            },
            week: {
                dow: 0,
                doy: 6
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t, s) {
            var n = {
                mm: "munutenn",
                MM: "miz",
                dd: "devezh"
            };
            return e + " " + a(n[s], e);
        }
        function s(e) {
            switch (n(e)) {
              case 1:
              case 3:
              case 4:
              case 5:
              case 9:
                return e + " bloaz";

              default:
                return e + " vloaz";
            }
        }
        function n(e) {
            return e > 9 ? n(e % 10) : e;
        }
        function a(e, t) {
            return 2 === t ? i(e) : e;
        }
        function i(e) {
            var t = {
                m: "v",
                b: "v",
                d: "z"
            };
            return void 0 === t[e.charAt(0)] ? e : t[e.charAt(0)] + e.substring(1);
        }
        var r = e.defineLocale("br", {
            months: "Genver_C'hwevrer_Meurzh_Ebrel_Mae_Mezheven_Gouere_Eost_Gwengolo_Here_Du_Kerzu".split("_"),
            monthsShort: "Gen_C'hwe_Meu_Ebr_Mae_Eve_Gou_Eos_Gwe_Her_Du_Ker".split("_"),
            weekdays: "Sul_Lun_Meurzh_Merc'her_Yaou_Gwener_Sadorn".split("_"),
            weekdaysShort: "Sul_Lun_Meu_Mer_Yao_Gwe_Sad".split("_"),
            weekdaysMin: "Su_Lu_Me_Mer_Ya_Gw_Sa".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "h[e]mm A",
                LTS: "h[e]mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D [a viz] MMMM YYYY",
                LLL: "D [a viz] MMMM YYYY h[e]mm A",
                LLLL: "dddd, D [a viz] MMMM YYYY h[e]mm A"
            },
            calendar: {
                sameDay: "[Hiziv da] LT",
                nextDay: "[Warc'hoazh da] LT",
                nextWeek: "dddd [da] LT",
                lastDay: "[Dec'h da] LT",
                lastWeek: "dddd [paset da] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "a-benn %s",
                past: "%s 'zo",
                s: "un nebeud segondennoù",
                ss: "%d eilenn",
                m: "ur vunutenn",
                mm: t,
                h: "un eur",
                hh: "%d eur",
                d: "un devezh",
                dd: t,
                M: "ur miz",
                MM: t,
                y: "ur bloaz",
                yy: s
            },
            dayOfMonthOrdinalParse: /\d{1,2}(añ|vet)/,
            ordinal: function(e) {
                var t = 1 === e ? "añ" : "vet";
                return e + t;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return r;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t, s) {
            var n = e + " ";
            switch (s) {
              case "ss":
                return n += 1 === e ? "sekunda" : 2 === e || 3 === e || 4 === e ? "sekunde" : "sekundi";

              case "m":
                return t ? "jedna minuta" : "jedne minute";

              case "mm":
                return n += 1 === e ? "minuta" : 2 === e || 3 === e || 4 === e ? "minute" : "minuta";

              case "h":
                return t ? "jedan sat" : "jednog sata";

              case "hh":
                return n += 1 === e ? "sat" : 2 === e || 3 === e || 4 === e ? "sata" : "sati";

              case "dd":
                return n += 1 === e ? "dan" : "dana";

              case "MM":
                return n += 1 === e ? "mjesec" : 2 === e || 3 === e || 4 === e ? "mjeseca" : "mjeseci";

              case "yy":
                return n += 1 === e ? "godina" : 2 === e || 3 === e || 4 === e ? "godine" : "godina";
            }
        }
        var s = e.defineLocale("bs", {
            months: "januar_februar_mart_april_maj_juni_juli_august_septembar_oktobar_novembar_decembar".split("_"),
            monthsShort: "jan._feb._mar._apr._maj._jun._jul._aug._sep._okt._nov._dec.".split("_"),
            monthsParseExact: !0,
            weekdays: "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),
            weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
            weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd, D. MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[danas u] LT",
                nextDay: "[sutra u] LT",
                nextWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[u] [nedjelju] [u] LT";

                      case 3:
                        return "[u] [srijedu] [u] LT";

                      case 6:
                        return "[u] [subotu] [u] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[u] dddd [u] LT";
                    }
                },
                lastDay: "[jučer u] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                      case 3:
                        return "[prošlu] dddd [u] LT";

                      case 6:
                        return "[prošle] [subote] [u] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[prošli] dddd [u] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "za %s",
                past: "prije %s",
                s: "par sekundi",
                ss: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: "dan",
                dd: t,
                M: "mjesec",
                MM: t,
                y: "godinu",
                yy: t
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ca", {
            months: {
                standalone: "gener_febrer_març_abril_maig_juny_juliol_agost_setembre_octubre_novembre_desembre".split("_"),
                format: "de gener_de febrer_de març_d'abril_de maig_de juny_de juliol_d'agost_de setembre_d'octubre_de novembre_de desembre".split("_"),
                isFormat: /D[oD]?(\s)+MMMM/
            },
            monthsShort: "gen._febr._març_abr._maig_juny_jul._ag._set._oct._nov._des.".split("_"),
            monthsParseExact: !0,
            weekdays: "diumenge_dilluns_dimarts_dimecres_dijous_divendres_dissabte".split("_"),
            weekdaysShort: "dg._dl._dt._dc._dj._dv._ds.".split("_"),
            weekdaysMin: "dg_dl_dt_dc_dj_dv_ds".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM [de] YYYY",
                ll: "D MMM YYYY",
                LLL: "D MMMM [de] YYYY [a les] H:mm",
                lll: "D MMM YYYY, H:mm",
                LLLL: "dddd D MMMM [de] YYYY [a les] H:mm",
                llll: "ddd D MMM YYYY, H:mm"
            },
            calendar: {
                sameDay: function() {
                    return "[avui a " + (1 !== this.hours() ? "les" : "la") + "] LT";
                },
                nextDay: function() {
                    return "[demà a " + (1 !== this.hours() ? "les" : "la") + "] LT";
                },
                nextWeek: function() {
                    return "dddd [a " + (1 !== this.hours() ? "les" : "la") + "] LT";
                },
                lastDay: function() {
                    return "[ahir a " + (1 !== this.hours() ? "les" : "la") + "] LT";
                },
                lastWeek: function() {
                    return "[el] dddd [passat a " + (1 !== this.hours() ? "les" : "la") + "] LT";
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "d'aquí %s",
                past: "fa %s",
                s: "uns segons",
                ss: "%d segons",
                m: "un minut",
                mm: "%d minuts",
                h: "una hora",
                hh: "%d hores",
                d: "un dia",
                dd: "%d dies",
                M: "un mes",
                MM: "%d mesos",
                y: "un any",
                yy: "%d anys"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(r|n|t|è|a)/,
            ordinal: function(e, t) {
                var s = 1 === e ? "r" : 2 === e ? "n" : 3 === e ? "r" : 4 === e ? "t" : "è";
                return "w" !== t && "W" !== t || (s = "a"), e + s;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e) {
            return e > 1 && e < 5 && 1 !== ~~(e / 10);
        }
        function s(e, s, n, a) {
            var i = e + " ";
            switch (n) {
              case "s":
                return s || a ? "pár sekund" : "pár sekundami";

              case "ss":
                return s || a ? i + (t(e) ? "sekundy" : "sekund") : i + "sekundami";

              case "m":
                return s ? "minuta" : a ? "minutu" : "minutou";

              case "mm":
                return s || a ? i + (t(e) ? "minuty" : "minut") : i + "minutami";

              case "h":
                return s ? "hodina" : a ? "hodinu" : "hodinou";

              case "hh":
                return s || a ? i + (t(e) ? "hodiny" : "hodin") : i + "hodinami";

              case "d":
                return s || a ? "den" : "dnem";

              case "dd":
                return s || a ? i + (t(e) ? "dny" : "dní") : i + "dny";

              case "M":
                return s || a ? "měsíc" : "měsícem";

              case "MM":
                return s || a ? i + (t(e) ? "měsíce" : "měsíců") : i + "měsíci";

              case "y":
                return s || a ? "rok" : "rokem";

              case "yy":
                return s || a ? i + (t(e) ? "roky" : "let") : i + "lety";
            }
        }
        var n = "leden_únor_březen_duben_květen_červen_červenec_srpen_září_říjen_listopad_prosinec".split("_"), a = "led_úno_bře_dub_kvě_čvn_čvc_srp_zář_říj_lis_pro".split("_"), i = e.defineLocale("cs", {
            months: n,
            monthsShort: a,
            monthsParse: function(e, t) {
                var s, n = [];
                for (s = 0; s < 12; s++) n[s] = new RegExp("^" + e[s] + "$|^" + t[s] + "$", "i");
                return n;
            }(n, a),
            shortMonthsParse: function(e) {
                var t, s = [];
                for (t = 0; t < 12; t++) s[t] = new RegExp("^" + e[t] + "$", "i");
                return s;
            }(a),
            longMonthsParse: function(e) {
                var t, s = [];
                for (t = 0; t < 12; t++) s[t] = new RegExp("^" + e[t] + "$", "i");
                return s;
            }(n),
            weekdays: "neděle_pondělí_úterý_středa_čtvrtek_pátek_sobota".split("_"),
            weekdaysShort: "ne_po_út_st_čt_pá_so".split("_"),
            weekdaysMin: "ne_po_út_st_čt_pá_so".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd D. MMMM YYYY H:mm",
                l: "D. M. YYYY"
            },
            calendar: {
                sameDay: "[dnes v] LT",
                nextDay: "[zítra v] LT",
                nextWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[v neděli v] LT";

                      case 1:
                      case 2:
                        return "[v] dddd [v] LT";

                      case 3:
                        return "[ve středu v] LT";

                      case 4:
                        return "[ve čtvrtek v] LT";

                      case 5:
                        return "[v pátek v] LT";

                      case 6:
                        return "[v sobotu v] LT";
                    }
                },
                lastDay: "[včera v] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[minulou neděli v] LT";

                      case 1:
                      case 2:
                        return "[minulé] dddd [v] LT";

                      case 3:
                        return "[minulou středu v] LT";

                      case 4:
                      case 5:
                        return "[minulý] dddd [v] LT";

                      case 6:
                        return "[minulou sobotu v] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "za %s",
                past: "před %s",
                s: s,
                ss: s,
                m: s,
                mm: s,
                h: s,
                hh: s,
                d: s,
                dd: s,
                M: s,
                MM: s,
                y: s,
                yy: s
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return i;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("cv", {
            months: "кӑрлач_нарӑс_пуш_ака_май_ҫӗртме_утӑ_ҫурла_авӑн_юпа_чӳк_раштав".split("_"),
            monthsShort: "кӑр_нар_пуш_ака_май_ҫӗр_утӑ_ҫур_авн_юпа_чӳк_раш".split("_"),
            weekdays: "вырсарникун_тунтикун_ытларикун_юнкун_кӗҫнерникун_эрнекун_шӑматкун".split("_"),
            weekdaysShort: "выр_тун_ытл_юн_кӗҫ_эрн_шӑм".split("_"),
            weekdaysMin: "вр_тн_ыт_юн_кҫ_эр_шм".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD-MM-YYYY",
                LL: "YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ]",
                LLL: "YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm",
                LLLL: "dddd, YYYY [ҫулхи] MMMM [уйӑхӗн] D[-мӗшӗ], HH:mm"
            },
            calendar: {
                sameDay: "[Паян] LT [сехетре]",
                nextDay: "[Ыран] LT [сехетре]",
                lastDay: "[Ӗнер] LT [сехетре]",
                nextWeek: "[Ҫитес] dddd LT [сехетре]",
                lastWeek: "[Иртнӗ] dddd LT [сехетре]",
                sameElse: "L"
            },
            relativeTime: {
                future: function(e) {
                    var t = /сехет$/i.exec(e) ? "рен" : /ҫул$/i.exec(e) ? "тан" : "ран";
                    return e + t;
                },
                past: "%s каялла",
                s: "пӗр-ик ҫеккунт",
                ss: "%d ҫеккунт",
                m: "пӗр минут",
                mm: "%d минут",
                h: "пӗр сехет",
                hh: "%d сехет",
                d: "пӗр кун",
                dd: "%d кун",
                M: "пӗр уйӑх",
                MM: "%d уйӑх",
                y: "пӗр ҫул",
                yy: "%d ҫул"
            },
            dayOfMonthOrdinalParse: /\d{1,2}-мӗш/,
            ordinal: "%d-мӗш",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("cy", {
            months: "Ionawr_Chwefror_Mawrth_Ebrill_Mai_Mehefin_Gorffennaf_Awst_Medi_Hydref_Tachwedd_Rhagfyr".split("_"),
            monthsShort: "Ion_Chwe_Maw_Ebr_Mai_Meh_Gor_Aws_Med_Hyd_Tach_Rhag".split("_"),
            weekdays: "Dydd Sul_Dydd Llun_Dydd Mawrth_Dydd Mercher_Dydd Iau_Dydd Gwener_Dydd Sadwrn".split("_"),
            weekdaysShort: "Sul_Llun_Maw_Mer_Iau_Gwe_Sad".split("_"),
            weekdaysMin: "Su_Ll_Ma_Me_Ia_Gw_Sa".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Heddiw am] LT",
                nextDay: "[Yfory am] LT",
                nextWeek: "dddd [am] LT",
                lastDay: "[Ddoe am] LT",
                lastWeek: "dddd [diwethaf am] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "mewn %s",
                past: "%s yn ôl",
                s: "ychydig eiliadau",
                ss: "%d eiliad",
                m: "munud",
                mm: "%d munud",
                h: "awr",
                hh: "%d awr",
                d: "diwrnod",
                dd: "%d diwrnod",
                M: "mis",
                MM: "%d mis",
                y: "blwyddyn",
                yy: "%d flynedd"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(fed|ain|af|il|ydd|ed|eg)/,
            ordinal: function(e) {
                var t = e, s = "", n = [ "", "af", "il", "ydd", "ydd", "ed", "ed", "ed", "fed", "fed", "fed", "eg", "fed", "eg", "eg", "fed", "eg", "eg", "fed", "eg", "fed" ];
                return t > 20 ? s = 40 === t || 50 === t || 60 === t || 80 === t || 100 === t ? "fed" : "ain" : t > 0 && (s = n[t]), 
                e + s;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("da", {
            months: "januar_februar_marts_april_maj_juni_juli_august_september_oktober_november_december".split("_"),
            monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
            weekdays: "søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split("_"),
            weekdaysShort: "søn_man_tir_ons_tor_fre_lør".split("_"),
            weekdaysMin: "sø_ma_ti_on_to_fr_lø".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY HH:mm",
                LLLL: "dddd [d.] D. MMMM YYYY [kl.] HH:mm"
            },
            calendar: {
                sameDay: "[i dag kl.] LT",
                nextDay: "[i morgen kl.] LT",
                nextWeek: "på dddd [kl.] LT",
                lastDay: "[i går kl.] LT",
                lastWeek: "[i] dddd[s kl.] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "om %s",
                past: "%s siden",
                s: "få sekunder",
                ss: "%d sekunder",
                m: "et minut",
                mm: "%d minutter",
                h: "en time",
                hh: "%d timer",
                d: "en dag",
                dd: "%d dage",
                M: "en måned",
                MM: "%d måneder",
                y: "et år",
                yy: "%d år"
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t, s, n) {
            var a = {
                m: [ "eine Minute", "einer Minute" ],
                h: [ "eine Stunde", "einer Stunde" ],
                d: [ "ein Tag", "einem Tag" ],
                dd: [ e + " Tage", e + " Tagen" ],
                M: [ "ein Monat", "einem Monat" ],
                MM: [ e + " Monate", e + " Monaten" ],
                y: [ "ein Jahr", "einem Jahr" ],
                yy: [ e + " Jahre", e + " Jahren" ]
            };
            return t ? a[s][0] : a[s][1];
        }
        var s = e.defineLocale("de", {
            months: "Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
            monthsShort: "Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"),
            monthsParseExact: !0,
            weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
            weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
            weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY HH:mm",
                LLLL: "dddd, D. MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[heute um] LT [Uhr]",
                sameElse: "L",
                nextDay: "[morgen um] LT [Uhr]",
                nextWeek: "dddd [um] LT [Uhr]",
                lastDay: "[gestern um] LT [Uhr]",
                lastWeek: "[letzten] dddd [um] LT [Uhr]"
            },
            relativeTime: {
                future: "in %s",
                past: "vor %s",
                s: "ein paar Sekunden",
                ss: "%d Sekunden",
                m: t,
                mm: "%d Minuten",
                h: t,
                hh: "%d Stunden",
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t, s, n) {
            var a = {
                m: [ "eine Minute", "einer Minute" ],
                h: [ "eine Stunde", "einer Stunde" ],
                d: [ "ein Tag", "einem Tag" ],
                dd: [ e + " Tage", e + " Tagen" ],
                M: [ "ein Monat", "einem Monat" ],
                MM: [ e + " Monate", e + " Monaten" ],
                y: [ "ein Jahr", "einem Jahr" ],
                yy: [ e + " Jahre", e + " Jahren" ]
            };
            return t ? a[s][0] : a[s][1];
        }
        var s = e.defineLocale("de-at", {
            months: "Jänner_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
            monthsShort: "Jän._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"),
            monthsParseExact: !0,
            weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
            weekdaysShort: "So._Mo._Di._Mi._Do._Fr._Sa.".split("_"),
            weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY HH:mm",
                LLLL: "dddd, D. MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[heute um] LT [Uhr]",
                sameElse: "L",
                nextDay: "[morgen um] LT [Uhr]",
                nextWeek: "dddd [um] LT [Uhr]",
                lastDay: "[gestern um] LT [Uhr]",
                lastWeek: "[letzten] dddd [um] LT [Uhr]"
            },
            relativeTime: {
                future: "in %s",
                past: "vor %s",
                s: "ein paar Sekunden",
                ss: "%d Sekunden",
                m: t,
                mm: "%d Minuten",
                h: t,
                hh: "%d Stunden",
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t, s, n) {
            var a = {
                m: [ "eine Minute", "einer Minute" ],
                h: [ "eine Stunde", "einer Stunde" ],
                d: [ "ein Tag", "einem Tag" ],
                dd: [ e + " Tage", e + " Tagen" ],
                M: [ "ein Monat", "einem Monat" ],
                MM: [ e + " Monate", e + " Monaten" ],
                y: [ "ein Jahr", "einem Jahr" ],
                yy: [ e + " Jahre", e + " Jahren" ]
            };
            return t ? a[s][0] : a[s][1];
        }
        var s = e.defineLocale("de-ch", {
            months: "Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
            monthsShort: "Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.".split("_"),
            monthsParseExact: !0,
            weekdays: "Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag".split("_"),
            weekdaysShort: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
            weekdaysMin: "So_Mo_Di_Mi_Do_Fr_Sa".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY HH:mm",
                LLLL: "dddd, D. MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[heute um] LT [Uhr]",
                sameElse: "L",
                nextDay: "[morgen um] LT [Uhr]",
                nextWeek: "dddd [um] LT [Uhr]",
                lastDay: "[gestern um] LT [Uhr]",
                lastWeek: "[letzten] dddd [um] LT [Uhr]"
            },
            relativeTime: {
                future: "in %s",
                past: "vor %s",
                s: "ein paar Sekunden",
                ss: "%d Sekunden",
                m: t,
                mm: "%d Minuten",
                h: t,
                hh: "%d Stunden",
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = [ "ޖެނުއަރީ", "ފެބްރުއަރީ", "މާރިޗު", "އޭޕްރީލު", "މޭ", "ޖޫން", "ޖުލައި", "އޯގަސްޓު", "ސެޕްޓެމްބަރު", "އޮކްޓޯބަރު", "ނޮވެމްބަރު", "ޑިސެމްބަރު" ], s = [ "އާދިއްތަ", "ހޯމަ", "އަންގާރަ", "ބުދަ", "ބުރާސްފަތި", "ހުކުރު", "ހޮނިހިރު" ], n = e.defineLocale("dv", {
            months: t,
            monthsShort: t,
            weekdays: s,
            weekdaysShort: s,
            weekdaysMin: "އާދި_ހޯމަ_އަން_ބުދަ_ބުރާ_ހުކު_ހޮނި".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "D/M/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            meridiemParse: /މކ|މފ/,
            isPM: function(e) {
                return "މފ" === e;
            },
            meridiem: function(e, t, s) {
                return e < 12 ? "މކ" : "މފ";
            },
            calendar: {
                sameDay: "[މިއަދު] LT",
                nextDay: "[މާދަމާ] LT",
                nextWeek: "dddd LT",
                lastDay: "[އިއްޔެ] LT",
                lastWeek: "[ފާއިތުވި] dddd LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "ތެރޭގައި %s",
                past: "ކުރިން %s",
                s: "ސިކުންތުކޮޅެއް",
                ss: "d% ސިކުންތު",
                m: "މިނިޓެއް",
                mm: "މިނިޓު %d",
                h: "ގަޑިއިރެއް",
                hh: "ގަޑިއިރު %d",
                d: "ދުވަހެއް",
                dd: "ދުވަސް %d",
                M: "މަހެއް",
                MM: "މަސް %d",
                y: "އަހަރެއް",
                yy: "އަހަރު %d"
            },
            preparse: function(e) {
                return e.replace(/،/g, ",");
            },
            postformat: function(e) {
                return e.replace(/,/g, "،");
            },
            week: {
                dow: 7,
                doy: 12
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e) {
            return e instanceof Function || "[object Function]" === Object.prototype.toString.call(e);
        }
        var s = e.defineLocale("el", {
            monthsNominativeEl: "Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος".split("_"),
            monthsGenitiveEl: "Ιανουαρίου_Φεβρουαρίου_Μαρτίου_Απριλίου_Μαΐου_Ιουνίου_Ιουλίου_Αυγούστου_Σεπτεμβρίου_Οκτωβρίου_Νοεμβρίου_Δεκεμβρίου".split("_"),
            months: function(e, t) {
                return e ? "string" == typeof t && /D/.test(t.substring(0, t.indexOf("MMMM"))) ? this._monthsGenitiveEl[e.month()] : this._monthsNominativeEl[e.month()] : this._monthsNominativeEl;
            },
            monthsShort: "Ιαν_Φεβ_Μαρ_Απρ_Μαϊ_Ιουν_Ιουλ_Αυγ_Σεπ_Οκτ_Νοε_Δεκ".split("_"),
            weekdays: "Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο".split("_"),
            weekdaysShort: "Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ".split("_"),
            weekdaysMin: "Κυ_Δε_Τρ_Τε_Πε_Πα_Σα".split("_"),
            meridiem: function(e, t, s) {
                return e > 11 ? s ? "μμ" : "ΜΜ" : s ? "πμ" : "ΠΜ";
            },
            isPM: function(e) {
                return "μ" === (e + "").toLowerCase()[0];
            },
            meridiemParse: /[ΠΜ]\.?Μ?\.?/i,
            longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY h:mm A",
                LLLL: "dddd, D MMMM YYYY h:mm A"
            },
            calendarEl: {
                sameDay: "[Σήμερα {}] LT",
                nextDay: "[Αύριο {}] LT",
                nextWeek: "dddd [{}] LT",
                lastDay: "[Χθες {}] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 6:
                        return "[το προηγούμενο] dddd [{}] LT";

                      default:
                        return "[την προηγούμενη] dddd [{}] LT";
                    }
                },
                sameElse: "L"
            },
            calendar: function(e, s) {
                var n = this._calendarEl[e], a = s && s.hours();
                return t(n) && (n = n.apply(s)), n.replace("{}", a % 12 === 1 ? "στη" : "στις");
            },
            relativeTime: {
                future: "σε %s",
                past: "%s πριν",
                s: "λίγα δευτερόλεπτα",
                ss: "%d δευτερόλεπτα",
                m: "ένα λεπτό",
                mm: "%d λεπτά",
                h: "μία ώρα",
                hh: "%d ώρες",
                d: "μία μέρα",
                dd: "%d μέρες",
                M: "ένας μήνας",
                MM: "%d μήνες",
                y: "ένας χρόνος",
                yy: "%d χρόνια"
            },
            dayOfMonthOrdinalParse: /\d{1,2}η/,
            ordinal: "%dη",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("en-au", {
            months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
            monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
            weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
            weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
            weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
            longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY h:mm A",
                LLLL: "dddd, D MMMM YYYY h:mm A"
            },
            calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                ss: "%d seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function(e) {
                var t = e % 10, s = 1 === ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th";
                return e + s;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("en-ca", {
            months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
            monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
            weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
            weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
            weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
            longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "YYYY-MM-DD",
                LL: "MMMM D, YYYY",
                LLL: "MMMM D, YYYY h:mm A",
                LLLL: "dddd, MMMM D, YYYY h:mm A"
            },
            calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                ss: "%d seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function(e) {
                var t = e % 10, s = 1 === ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th";
                return e + s;
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("en-gb", {
            months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
            monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
            weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
            weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
            weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                ss: "%d seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function(e) {
                var t = e % 10, s = 1 === ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th";
                return e + s;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("en-ie", {
            months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
            monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
            weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
            weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
            weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD-MM-YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                ss: "%d seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function(e) {
                var t = e % 10, s = 1 === ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th";
                return e + s;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("en-il", {
            months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
            monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
            weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
            weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
            weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function(e) {
                var t = e % 10, s = 1 === ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th";
                return e + s;
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("en-nz", {
            months: "January_February_March_April_May_June_July_August_September_October_November_December".split("_"),
            monthsShort: "Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec".split("_"),
            weekdays: "Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday".split("_"),
            weekdaysShort: "Sun_Mon_Tue_Wed_Thu_Fri_Sat".split("_"),
            weekdaysMin: "Su_Mo_Tu_We_Th_Fr_Sa".split("_"),
            longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY h:mm A",
                LLLL: "dddd, D MMMM YYYY h:mm A"
            },
            calendar: {
                sameDay: "[Today at] LT",
                nextDay: "[Tomorrow at] LT",
                nextWeek: "dddd [at] LT",
                lastDay: "[Yesterday at] LT",
                lastWeek: "[Last] dddd [at] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "in %s",
                past: "%s ago",
                s: "a few seconds",
                ss: "%d seconds",
                m: "a minute",
                mm: "%d minutes",
                h: "an hour",
                hh: "%d hours",
                d: "a day",
                dd: "%d days",
                M: "a month",
                MM: "%d months",
                y: "a year",
                yy: "%d years"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function(e) {
                var t = e % 10, s = 1 === ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th";
                return e + s;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("eo", {
            months: "januaro_februaro_marto_aprilo_majo_junio_julio_aŭgusto_septembro_oktobro_novembro_decembro".split("_"),
            monthsShort: "jan_feb_mar_apr_maj_jun_jul_aŭg_sep_okt_nov_dec".split("_"),
            weekdays: "dimanĉo_lundo_mardo_merkredo_ĵaŭdo_vendredo_sabato".split("_"),
            weekdaysShort: "dim_lun_mard_merk_ĵaŭ_ven_sab".split("_"),
            weekdaysMin: "di_lu_ma_me_ĵa_ve_sa".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "D[-a de] MMMM, YYYY",
                LLL: "D[-a de] MMMM, YYYY HH:mm",
                LLLL: "dddd, [la] D[-a de] MMMM, YYYY HH:mm"
            },
            meridiemParse: /[ap]\.t\.m/i,
            isPM: function(e) {
                return "p" === e.charAt(0).toLowerCase();
            },
            meridiem: function(e, t, s) {
                return e > 11 ? s ? "p.t.m." : "P.T.M." : s ? "a.t.m." : "A.T.M.";
            },
            calendar: {
                sameDay: "[Hodiaŭ je] LT",
                nextDay: "[Morgaŭ je] LT",
                nextWeek: "dddd [je] LT",
                lastDay: "[Hieraŭ je] LT",
                lastWeek: "[pasinta] dddd [je] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "post %s",
                past: "antaŭ %s",
                s: "sekundoj",
                ss: "%d sekundoj",
                m: "minuto",
                mm: "%d minutoj",
                h: "horo",
                hh: "%d horoj",
                d: "tago",
                dd: "%d tagoj",
                M: "monato",
                MM: "%d monatoj",
                y: "jaro",
                yy: "%d jaroj"
            },
            dayOfMonthOrdinalParse: /\d{1,2}a/,
            ordinal: "%da",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"), s = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"), n = [ /^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i ], a = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i, i = e.defineLocale("es", {
            months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),
            monthsShort: function(e, n) {
                return e ? /-MMM-/.test(n) ? s[e.month()] : t[e.month()] : t;
            },
            monthsRegex: a,
            monthsShortRegex: a,
            monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
            monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
            monthsParse: n,
            longMonthsParse: n,
            shortMonthsParse: n,
            weekdays: "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),
            weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
            weekdaysMin: "do_lu_ma_mi_ju_vi_sá".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D [de] MMMM [de] YYYY",
                LLL: "D [de] MMMM [de] YYYY H:mm",
                LLLL: "dddd, D [de] MMMM [de] YYYY H:mm"
            },
            calendar: {
                sameDay: function() {
                    return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                nextDay: function() {
                    return "[mañana a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                nextWeek: function() {
                    return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                lastDay: function() {
                    return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                lastWeek: function() {
                    return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "en %s",
                past: "hace %s",
                s: "unos segundos",
                ss: "%d segundos",
                m: "un minuto",
                mm: "%d minutos",
                h: "una hora",
                hh: "%d horas",
                d: "un día",
                dd: "%d días",
                M: "un mes",
                MM: "%d meses",
                y: "un año",
                yy: "%d años"
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: "%dº",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return i;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"), s = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"), n = [ /^ene/i, /^feb/i, /^mar/i, /^abr/i, /^may/i, /^jun/i, /^jul/i, /^ago/i, /^sep/i, /^oct/i, /^nov/i, /^dic/i ], a = /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i, i = e.defineLocale("es-do", {
            months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),
            monthsShort: function(e, n) {
                return e ? /-MMM-/.test(n) ? s[e.month()] : t[e.month()] : t;
            },
            monthsRegex: a,
            monthsShortRegex: a,
            monthsStrictRegex: /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,
            monthsShortStrictRegex: /^(ene\.?|feb\.?|mar\.?|abr\.?|may\.?|jun\.?|jul\.?|ago\.?|sep\.?|oct\.?|nov\.?|dic\.?)/i,
            monthsParse: n,
            longMonthsParse: n,
            shortMonthsParse: n,
            weekdays: "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),
            weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
            weekdaysMin: "do_lu_ma_mi_ju_vi_sá".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D [de] MMMM [de] YYYY",
                LLL: "D [de] MMMM [de] YYYY h:mm A",
                LLLL: "dddd, D [de] MMMM [de] YYYY h:mm A"
            },
            calendar: {
                sameDay: function() {
                    return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                nextDay: function() {
                    return "[mañana a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                nextWeek: function() {
                    return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                lastDay: function() {
                    return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                lastWeek: function() {
                    return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "en %s",
                past: "hace %s",
                s: "unos segundos",
                ss: "%d segundos",
                m: "un minuto",
                mm: "%d minutos",
                h: "una hora",
                hh: "%d horas",
                d: "un día",
                dd: "%d días",
                M: "un mes",
                MM: "%d meses",
                y: "un año",
                yy: "%d años"
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: "%dº",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return i;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = "ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.".split("_"), s = "ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic".split("_"), n = e.defineLocale("es-us", {
            months: "enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre".split("_"),
            monthsShort: function(e, n) {
                return e ? /-MMM-/.test(n) ? s[e.month()] : t[e.month()] : t;
            },
            monthsParseExact: !0,
            weekdays: "domingo_lunes_martes_miércoles_jueves_viernes_sábado".split("_"),
            weekdaysShort: "dom._lun._mar._mié._jue._vie._sáb.".split("_"),
            weekdaysMin: "do_lu_ma_mi_ju_vi_sá".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "MM/DD/YYYY",
                LL: "MMMM [de] D [de] YYYY",
                LLL: "MMMM [de] D [de] YYYY h:mm A",
                LLLL: "dddd, MMMM [de] D [de] YYYY h:mm A"
            },
            calendar: {
                sameDay: function() {
                    return "[hoy a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                nextDay: function() {
                    return "[mañana a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                nextWeek: function() {
                    return "dddd [a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                lastDay: function() {
                    return "[ayer a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                lastWeek: function() {
                    return "[el] dddd [pasado a la" + (1 !== this.hours() ? "s" : "") + "] LT";
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "en %s",
                past: "hace %s",
                s: "unos segundos",
                ss: "%d segundos",
                m: "un minuto",
                mm: "%d minutos",
                h: "una hora",
                hh: "%d horas",
                d: "un día",
                dd: "%d días",
                M: "un mes",
                MM: "%d meses",
                y: "un año",
                yy: "%d años"
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: "%dº",
            week: {
                dow: 0,
                doy: 6
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t, s, n) {
            var a = {
                s: [ "mõne sekundi", "mõni sekund", "paar sekundit" ],
                ss: [ e + "sekundi", e + "sekundit" ],
                m: [ "ühe minuti", "üks minut" ],
                mm: [ e + " minuti", e + " minutit" ],
                h: [ "ühe tunni", "tund aega", "üks tund" ],
                hh: [ e + " tunni", e + " tundi" ],
                d: [ "ühe päeva", "üks päev" ],
                M: [ "kuu aja", "kuu aega", "üks kuu" ],
                MM: [ e + " kuu", e + " kuud" ],
                y: [ "ühe aasta", "aasta", "üks aasta" ],
                yy: [ e + " aasta", e + " aastat" ]
            };
            return t ? a[s][2] ? a[s][2] : a[s][1] : n ? a[s][0] : a[s][1];
        }
        var s = e.defineLocale("et", {
            months: "jaanuar_veebruar_märts_aprill_mai_juuni_juuli_august_september_oktoober_november_detsember".split("_"),
            monthsShort: "jaan_veebr_märts_apr_mai_juuni_juuli_aug_sept_okt_nov_dets".split("_"),
            weekdays: "pühapäev_esmaspäev_teisipäev_kolmapäev_neljapäev_reede_laupäev".split("_"),
            weekdaysShort: "P_E_T_K_N_R_L".split("_"),
            weekdaysMin: "P_E_T_K_N_R_L".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd, D. MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[Täna,] LT",
                nextDay: "[Homme,] LT",
                nextWeek: "[Järgmine] dddd LT",
                lastDay: "[Eile,] LT",
                lastWeek: "[Eelmine] dddd LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s pärast",
                past: "%s tagasi",
                s: t,
                ss: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: "%d päeva",
                M: t,
                MM: t,
                y: t,
                yy: t
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("eu", {
            months: "urtarrila_otsaila_martxoa_apirila_maiatza_ekaina_uztaila_abuztua_iraila_urria_azaroa_abendua".split("_"),
            monthsShort: "urt._ots._mar._api._mai._eka._uzt._abu._ira._urr._aza._abe.".split("_"),
            monthsParseExact: !0,
            weekdays: "igandea_astelehena_asteartea_asteazkena_osteguna_ostirala_larunbata".split("_"),
            weekdaysShort: "ig._al._ar._az._og._ol._lr.".split("_"),
            weekdaysMin: "ig_al_ar_az_og_ol_lr".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "YYYY[ko] MMMM[ren] D[a]",
                LLL: "YYYY[ko] MMMM[ren] D[a] HH:mm",
                LLLL: "dddd, YYYY[ko] MMMM[ren] D[a] HH:mm",
                l: "YYYY-M-D",
                ll: "YYYY[ko] MMM D[a]",
                lll: "YYYY[ko] MMM D[a] HH:mm",
                llll: "ddd, YYYY[ko] MMM D[a] HH:mm"
            },
            calendar: {
                sameDay: "[gaur] LT[etan]",
                nextDay: "[bihar] LT[etan]",
                nextWeek: "dddd LT[etan]",
                lastDay: "[atzo] LT[etan]",
                lastWeek: "[aurreko] dddd LT[etan]",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s barru",
                past: "duela %s",
                s: "segundo batzuk",
                ss: "%d segundo",
                m: "minutu bat",
                mm: "%d minutu",
                h: "ordu bat",
                hh: "%d ordu",
                d: "egun bat",
                dd: "%d egun",
                M: "hilabete bat",
                MM: "%d hilabete",
                y: "urte bat",
                yy: "%d urte"
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "۱",
            "2": "۲",
            "3": "۳",
            "4": "۴",
            "5": "۵",
            "6": "۶",
            "7": "۷",
            "8": "۸",
            "9": "۹",
            "0": "۰"
        }, s = {
            "۱": "1",
            "۲": "2",
            "۳": "3",
            "۴": "4",
            "۵": "5",
            "۶": "6",
            "۷": "7",
            "۸": "8",
            "۹": "9",
            "۰": "0"
        }, n = e.defineLocale("fa", {
            months: "ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split("_"),
            monthsShort: "ژانویه_فوریه_مارس_آوریل_مه_ژوئن_ژوئیه_اوت_سپتامبر_اکتبر_نوامبر_دسامبر".split("_"),
            weekdays: "یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه".split("_"),
            weekdaysShort: "یک‌شنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه".split("_"),
            weekdaysMin: "ی_د_س_چ_پ_ج_ش".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            meridiemParse: /قبل از ظهر|بعد از ظهر/,
            isPM: function(e) {
                return /بعد از ظهر/.test(e);
            },
            meridiem: function(e, t, s) {
                return e < 12 ? "قبل از ظهر" : "بعد از ظهر";
            },
            calendar: {
                sameDay: "[امروز ساعت] LT",
                nextDay: "[فردا ساعت] LT",
                nextWeek: "dddd [ساعت] LT",
                lastDay: "[دیروز ساعت] LT",
                lastWeek: "dddd [پیش] [ساعت] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "در %s",
                past: "%s پیش",
                s: "چند ثانیه",
                ss: "ثانیه d%",
                m: "یک دقیقه",
                mm: "%d دقیقه",
                h: "یک ساعت",
                hh: "%d ساعت",
                d: "یک روز",
                dd: "%d روز",
                M: "یک ماه",
                MM: "%d ماه",
                y: "یک سال",
                yy: "%d سال"
            },
            preparse: function(e) {
                return e.replace(/[۰-۹]/g, function(e) {
                    return s[e];
                }).replace(/،/g, ",");
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                }).replace(/,/g, "،");
            },
            dayOfMonthOrdinalParse: /\d{1,2}م/,
            ordinal: "%dم",
            week: {
                dow: 6,
                doy: 12
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t, n, a) {
            var i = "";
            switch (n) {
              case "s":
                return a ? "muutaman sekunnin" : "muutama sekunti";

              case "ss":
                return a ? "sekunnin" : "sekuntia";

              case "m":
                return a ? "minuutin" : "minuutti";

              case "mm":
                i = a ? "minuutin" : "minuuttia";
                break;

              case "h":
                return a ? "tunnin" : "tunti";

              case "hh":
                i = a ? "tunnin" : "tuntia";
                break;

              case "d":
                return a ? "päivän" : "päivä";

              case "dd":
                i = a ? "päivän" : "päivää";
                break;

              case "M":
                return a ? "kuukauden" : "kuukausi";

              case "MM":
                i = a ? "kuukauden" : "kuukautta";
                break;

              case "y":
                return a ? "vuoden" : "vuosi";

              case "yy":
                i = a ? "vuoden" : "vuotta";
            }
            return i = s(e, a) + " " + i;
        }
        function s(e, t) {
            return e < 10 ? t ? a[e] : n[e] : e;
        }
        var n = "nolla yksi kaksi kolme neljä viisi kuusi seitsemän kahdeksan yhdeksän".split(" "), a = [ "nolla", "yhden", "kahden", "kolmen", "neljän", "viiden", "kuuden", n[7], n[8], n[9] ], i = e.defineLocale("fi", {
            months: "tammikuu_helmikuu_maaliskuu_huhtikuu_toukokuu_kesäkuu_heinäkuu_elokuu_syyskuu_lokakuu_marraskuu_joulukuu".split("_"),
            monthsShort: "tammi_helmi_maalis_huhti_touko_kesä_heinä_elo_syys_loka_marras_joulu".split("_"),
            weekdays: "sunnuntai_maanantai_tiistai_keskiviikko_torstai_perjantai_lauantai".split("_"),
            weekdaysShort: "su_ma_ti_ke_to_pe_la".split("_"),
            weekdaysMin: "su_ma_ti_ke_to_pe_la".split("_"),
            longDateFormat: {
                LT: "HH.mm",
                LTS: "HH.mm.ss",
                L: "DD.MM.YYYY",
                LL: "Do MMMM[ta] YYYY",
                LLL: "Do MMMM[ta] YYYY, [klo] HH.mm",
                LLLL: "dddd, Do MMMM[ta] YYYY, [klo] HH.mm",
                l: "D.M.YYYY",
                ll: "Do MMM YYYY",
                lll: "Do MMM YYYY, [klo] HH.mm",
                llll: "ddd, Do MMM YYYY, [klo] HH.mm"
            },
            calendar: {
                sameDay: "[tänään] [klo] LT",
                nextDay: "[huomenna] [klo] LT",
                nextWeek: "dddd [klo] LT",
                lastDay: "[eilen] [klo] LT",
                lastWeek: "[viime] dddd[na] [klo] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s päästä",
                past: "%s sitten",
                s: t,
                ss: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return i;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("fo", {
            months: "januar_februar_mars_apríl_mai_juni_juli_august_september_oktober_november_desember".split("_"),
            monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
            weekdays: "sunnudagur_mánadagur_týsdagur_mikudagur_hósdagur_fríggjadagur_leygardagur".split("_"),
            weekdaysShort: "sun_mán_týs_mik_hós_frí_ley".split("_"),
            weekdaysMin: "su_má_tý_mi_hó_fr_le".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D. MMMM, YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Í dag kl.] LT",
                nextDay: "[Í morgin kl.] LT",
                nextWeek: "dddd [kl.] LT",
                lastDay: "[Í gjár kl.] LT",
                lastWeek: "[síðstu] dddd [kl] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "um %s",
                past: "%s síðani",
                s: "fá sekund",
                ss: "%d sekundir",
                m: "ein minutt",
                mm: "%d minuttir",
                h: "ein tími",
                hh: "%d tímar",
                d: "ein dagur",
                dd: "%d dagar",
                M: "ein mánaði",
                MM: "%d mánaðir",
                y: "eitt ár",
                yy: "%d ár"
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("fr", {
            months: "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),
            monthsShort: "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),
            monthsParseExact: !0,
            weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
            weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
            weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Aujourd’hui à] LT",
                nextDay: "[Demain à] LT",
                nextWeek: "dddd [à] LT",
                lastDay: "[Hier à] LT",
                lastWeek: "dddd [dernier à] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "dans %s",
                past: "il y a %s",
                s: "quelques secondes",
                ss: "%d secondes",
                m: "une minute",
                mm: "%d minutes",
                h: "une heure",
                hh: "%d heures",
                d: "un jour",
                dd: "%d jours",
                M: "un mois",
                MM: "%d mois",
                y: "un an",
                yy: "%d ans"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(er|)/,
            ordinal: function(e, t) {
                switch (t) {
                  case "D":
                    return e + (1 === e ? "er" : "");

                  default:
                  case "M":
                  case "Q":
                  case "DDD":
                  case "d":
                    return e + (1 === e ? "er" : "e");

                  case "w":
                  case "W":
                    return e + (1 === e ? "re" : "e");
                }
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("fr-ca", {
            months: "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),
            monthsShort: "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),
            monthsParseExact: !0,
            weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
            weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
            weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Aujourd’hui à] LT",
                nextDay: "[Demain à] LT",
                nextWeek: "dddd [à] LT",
                lastDay: "[Hier à] LT",
                lastWeek: "dddd [dernier à] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "dans %s",
                past: "il y a %s",
                s: "quelques secondes",
                ss: "%d secondes",
                m: "une minute",
                mm: "%d minutes",
                h: "une heure",
                hh: "%d heures",
                d: "un jour",
                dd: "%d jours",
                M: "un mois",
                MM: "%d mois",
                y: "un an",
                yy: "%d ans"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
            ordinal: function(e, t) {
                switch (t) {
                  default:
                  case "M":
                  case "Q":
                  case "D":
                  case "DDD":
                  case "d":
                    return e + (1 === e ? "er" : "e");

                  case "w":
                  case "W":
                    return e + (1 === e ? "re" : "e");
                }
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("fr-ch", {
            months: "janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre".split("_"),
            monthsShort: "janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.".split("_"),
            monthsParseExact: !0,
            weekdays: "dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi".split("_"),
            weekdaysShort: "dim._lun._mar._mer._jeu._ven._sam.".split("_"),
            weekdaysMin: "di_lu_ma_me_je_ve_sa".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Aujourd’hui à] LT",
                nextDay: "[Demain à] LT",
                nextWeek: "dddd [à] LT",
                lastDay: "[Hier à] LT",
                lastWeek: "dddd [dernier à] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "dans %s",
                past: "il y a %s",
                s: "quelques secondes",
                ss: "%d secondes",
                m: "une minute",
                mm: "%d minutes",
                h: "une heure",
                hh: "%d heures",
                d: "un jour",
                dd: "%d jours",
                M: "un mois",
                MM: "%d mois",
                y: "un an",
                yy: "%d ans"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(er|e)/,
            ordinal: function(e, t) {
                switch (t) {
                  default:
                  case "M":
                  case "Q":
                  case "D":
                  case "DDD":
                  case "d":
                    return e + (1 === e ? "er" : "e");

                  case "w":
                  case "W":
                    return e + (1 === e ? "re" : "e");
                }
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = "jan._feb._mrt._apr._mai_jun._jul._aug._sep._okt._nov._des.".split("_"), s = "jan_feb_mrt_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"), n = e.defineLocale("fy", {
            months: "jannewaris_febrewaris_maart_april_maaie_juny_july_augustus_septimber_oktober_novimber_desimber".split("_"),
            monthsShort: function(e, n) {
                return e ? /-MMM-/.test(n) ? s[e.month()] : t[e.month()] : t;
            },
            monthsParseExact: !0,
            weekdays: "snein_moandei_tiisdei_woansdei_tongersdei_freed_sneon".split("_"),
            weekdaysShort: "si._mo._ti._wo._to._fr._so.".split("_"),
            weekdaysMin: "Si_Mo_Ti_Wo_To_Fr_So".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD-MM-YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[hjoed om] LT",
                nextDay: "[moarn om] LT",
                nextWeek: "dddd [om] LT",
                lastDay: "[juster om] LT",
                lastWeek: "[ôfrûne] dddd [om] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "oer %s",
                past: "%s lyn",
                s: "in pear sekonden",
                ss: "%d sekonden",
                m: "ien minút",
                mm: "%d minuten",
                h: "ien oere",
                hh: "%d oeren",
                d: "ien dei",
                dd: "%d dagen",
                M: "ien moanne",
                MM: "%d moannen",
                y: "ien jier",
                yy: "%d jierren"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
            ordinal: function(e) {
                return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de");
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = [ "Am Faoilleach", "An Gearran", "Am Màrt", "An Giblean", "An Cèitean", "An t-Ògmhios", "An t-Iuchar", "An Lùnastal", "An t-Sultain", "An Dàmhair", "An t-Samhain", "An Dùbhlachd" ], s = [ "Faoi", "Gear", "Màrt", "Gibl", "Cèit", "Ògmh", "Iuch", "Lùn", "Sult", "Dàmh", "Samh", "Dùbh" ], n = [ "Didòmhnaich", "Diluain", "Dimàirt", "Diciadain", "Diardaoin", "Dihaoine", "Disathairne" ], a = [ "Did", "Dil", "Dim", "Dic", "Dia", "Dih", "Dis" ], i = [ "Dò", "Lu", "Mà", "Ci", "Ar", "Ha", "Sa" ], r = e.defineLocale("gd", {
            months: t,
            monthsShort: s,
            monthsParseExact: !0,
            weekdays: n,
            weekdaysShort: a,
            weekdaysMin: i,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[An-diugh aig] LT",
                nextDay: "[A-màireach aig] LT",
                nextWeek: "dddd [aig] LT",
                lastDay: "[An-dè aig] LT",
                lastWeek: "dddd [seo chaidh] [aig] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "ann an %s",
                past: "bho chionn %s",
                s: "beagan diogan",
                ss: "%d diogan",
                m: "mionaid",
                mm: "%d mionaidean",
                h: "uair",
                hh: "%d uairean",
                d: "latha",
                dd: "%d latha",
                M: "mìos",
                MM: "%d mìosan",
                y: "bliadhna",
                yy: "%d bliadhna"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(d|na|mh)/,
            ordinal: function(e) {
                var t = 1 === e ? "d" : e % 10 === 2 ? "na" : "mh";
                return e + t;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return r;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("gl", {
            months: "xaneiro_febreiro_marzo_abril_maio_xuño_xullo_agosto_setembro_outubro_novembro_decembro".split("_"),
            monthsShort: "xan._feb._mar._abr._mai._xuñ._xul._ago._set._out._nov._dec.".split("_"),
            monthsParseExact: !0,
            weekdays: "domingo_luns_martes_mércores_xoves_venres_sábado".split("_"),
            weekdaysShort: "dom._lun._mar._mér._xov._ven._sáb.".split("_"),
            weekdaysMin: "do_lu_ma_mé_xo_ve_sá".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D [de] MMMM [de] YYYY",
                LLL: "D [de] MMMM [de] YYYY H:mm",
                LLLL: "dddd, D [de] MMMM [de] YYYY H:mm"
            },
            calendar: {
                sameDay: function() {
                    return "[hoxe " + (1 !== this.hours() ? "ás" : "á") + "] LT";
                },
                nextDay: function() {
                    return "[mañá " + (1 !== this.hours() ? "ás" : "á") + "] LT";
                },
                nextWeek: function() {
                    return "dddd [" + (1 !== this.hours() ? "ás" : "a") + "] LT";
                },
                lastDay: function() {
                    return "[onte " + (1 !== this.hours() ? "á" : "a") + "] LT";
                },
                lastWeek: function() {
                    return "[o] dddd [pasado " + (1 !== this.hours() ? "ás" : "a") + "] LT";
                },
                sameElse: "L"
            },
            relativeTime: {
                future: function(e) {
                    return 0 === e.indexOf("un") ? "n" + e : "en " + e;
                },
                past: "hai %s",
                s: "uns segundos",
                ss: "%d segundos",
                m: "un minuto",
                mm: "%d minutos",
                h: "unha hora",
                hh: "%d horas",
                d: "un día",
                dd: "%d días",
                M: "un mes",
                MM: "%d meses",
                y: "un ano",
                yy: "%d anos"
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: "%dº",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t, s, n) {
            var a = {
                s: [ "thodde secondanim", "thodde second" ],
                ss: [ e + " secondanim", e + " second" ],
                m: [ "eka mintan", "ek minute" ],
                mm: [ e + " mintanim", e + " mintam" ],
                h: [ "eka horan", "ek hor" ],
                hh: [ e + " horanim", e + " horam" ],
                d: [ "eka disan", "ek dis" ],
                dd: [ e + " disanim", e + " dis" ],
                M: [ "eka mhoinean", "ek mhoino" ],
                MM: [ e + " mhoineanim", e + " mhoine" ],
                y: [ "eka vorsan", "ek voros" ],
                yy: [ e + " vorsanim", e + " vorsam" ]
            };
            return t ? a[s][0] : a[s][1];
        }
        var s = e.defineLocale("gom-latn", {
            months: "Janer_Febrer_Mars_Abril_Mai_Jun_Julai_Agost_Setembr_Otubr_Novembr_Dezembr".split("_"),
            monthsShort: "Jan._Feb._Mars_Abr._Mai_Jun_Jul._Ago._Set._Otu._Nov._Dez.".split("_"),
            monthsParseExact: !0,
            weekdays: "Aitar_Somar_Mongllar_Budvar_Brestar_Sukrar_Son'var".split("_"),
            weekdaysShort: "Ait._Som._Mon._Bud._Bre._Suk._Son.".split("_"),
            weekdaysMin: "Ai_Sm_Mo_Bu_Br_Su_Sn".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "A h:mm [vazta]",
                LTS: "A h:mm:ss [vazta]",
                L: "DD-MM-YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY A h:mm [vazta]",
                LLLL: "dddd, MMMM[achea] Do, YYYY, A h:mm [vazta]",
                llll: "ddd, D MMM YYYY, A h:mm [vazta]"
            },
            calendar: {
                sameDay: "[Aiz] LT",
                nextDay: "[Faleam] LT",
                nextWeek: "[Ieta to] dddd[,] LT",
                lastDay: "[Kal] LT",
                lastWeek: "[Fatlo] dddd[,] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s",
                past: "%s adim",
                s: t,
                ss: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
            },
            dayOfMonthOrdinalParse: /\d{1,2}(er)/,
            ordinal: function(e, t) {
                switch (t) {
                  case "D":
                    return e + "er";

                  default:
                  case "M":
                  case "Q":
                  case "DDD":
                  case "d":
                  case "w":
                  case "W":
                    return e;
                }
            },
            week: {
                dow: 1,
                doy: 4
            },
            meridiemParse: /rati|sokalli|donparam|sanje/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "rati" === t ? e < 4 ? e : e + 12 : "sokalli" === t ? e : "donparam" === t ? e > 12 ? e : e + 12 : "sanje" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, s) {
                return e < 4 ? "rati" : e < 12 ? "sokalli" : e < 16 ? "donparam" : e < 20 ? "sanje" : "rati";
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "૧",
            "2": "૨",
            "3": "૩",
            "4": "૪",
            "5": "૫",
            "6": "૬",
            "7": "૭",
            "8": "૮",
            "9": "૯",
            "0": "૦"
        }, s = {
            "૧": "1",
            "૨": "2",
            "૩": "3",
            "૪": "4",
            "૫": "5",
            "૬": "6",
            "૭": "7",
            "૮": "8",
            "૯": "9",
            "૦": "0"
        }, n = e.defineLocale("gu", {
            months: "જાન્યુઆરી_ફેબ્રુઆરી_માર્ચ_એપ્રિલ_મે_જૂન_જુલાઈ_ઑગસ્ટ_સપ્ટેમ્બર_ઑક્ટ્બર_નવેમ્બર_ડિસેમ્બર".split("_"),
            monthsShort: "જાન્યુ._ફેબ્રુ._માર્ચ_એપ્રિ._મે_જૂન_જુલા._ઑગ._સપ્ટે._ઑક્ટ્._નવે._ડિસે.".split("_"),
            monthsParseExact: !0,
            weekdays: "રવિવાર_સોમવાર_મંગળવાર_બુધ્વાર_ગુરુવાર_શુક્રવાર_શનિવાર".split("_"),
            weekdaysShort: "રવિ_સોમ_મંગળ_બુધ્_ગુરુ_શુક્ર_શનિ".split("_"),
            weekdaysMin: "ર_સો_મં_બુ_ગુ_શુ_શ".split("_"),
            longDateFormat: {
                LT: "A h:mm વાગ્યે",
                LTS: "A h:mm:ss વાગ્યે",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm વાગ્યે",
                LLLL: "dddd, D MMMM YYYY, A h:mm વાગ્યે"
            },
            calendar: {
                sameDay: "[આજ] LT",
                nextDay: "[કાલે] LT",
                nextWeek: "dddd, LT",
                lastDay: "[ગઇકાલે] LT",
                lastWeek: "[પાછલા] dddd, LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s મા",
                past: "%s પેહલા",
                s: "અમુક પળો",
                ss: "%d સેકંડ",
                m: "એક મિનિટ",
                mm: "%d મિનિટ",
                h: "એક કલાક",
                hh: "%d કલાક",
                d: "એક દિવસ",
                dd: "%d દિવસ",
                M: "એક મહિનો",
                MM: "%d મહિનો",
                y: "એક વર્ષ",
                yy: "%d વર્ષ"
            },
            preparse: function(e) {
                return e.replace(/[૧૨૩૪૫૬૭૮૯૦]/g, function(e) {
                    return s[e];
                });
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                });
            },
            meridiemParse: /રાત|બપોર|સવાર|સાંજ/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "રાત" === t ? e < 4 ? e : e + 12 : "સવાર" === t ? e : "બપોર" === t ? e >= 10 ? e : e + 12 : "સાંજ" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, s) {
                return e < 4 ? "રાત" : e < 10 ? "સવાર" : e < 17 ? "બપોર" : e < 20 ? "સાંજ" : "રાત";
            },
            week: {
                dow: 0,
                doy: 6
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("he", {
            months: "ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר".split("_"),
            monthsShort: "ינו׳_פבר׳_מרץ_אפר׳_מאי_יוני_יולי_אוג׳_ספט׳_אוק׳_נוב׳_דצמ׳".split("_"),
            weekdays: "ראשון_שני_שלישי_רביעי_חמישי_שישי_שבת".split("_"),
            weekdaysShort: "א׳_ב׳_ג׳_ד׳_ה׳_ו׳_ש׳".split("_"),
            weekdaysMin: "א_ב_ג_ד_ה_ו_ש".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D [ב]MMMM YYYY",
                LLL: "D [ב]MMMM YYYY HH:mm",
                LLLL: "dddd, D [ב]MMMM YYYY HH:mm",
                l: "D/M/YYYY",
                ll: "D MMM YYYY",
                lll: "D MMM YYYY HH:mm",
                llll: "ddd, D MMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[היום ב־]LT",
                nextDay: "[מחר ב־]LT",
                nextWeek: "dddd [בשעה] LT",
                lastDay: "[אתמול ב־]LT",
                lastWeek: "[ביום] dddd [האחרון בשעה] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "בעוד %s",
                past: "לפני %s",
                s: "מספר שניות",
                ss: "%d שניות",
                m: "דקה",
                mm: "%d דקות",
                h: "שעה",
                hh: function(e) {
                    return 2 === e ? "שעתיים" : e + " שעות";
                },
                d: "יום",
                dd: function(e) {
                    return 2 === e ? "יומיים" : e + " ימים";
                },
                M: "חודש",
                MM: function(e) {
                    return 2 === e ? "חודשיים" : e + " חודשים";
                },
                y: "שנה",
                yy: function(e) {
                    return 2 === e ? "שנתיים" : e % 10 === 0 && 10 !== e ? e + " שנה" : e + " שנים";
                }
            },
            meridiemParse: /אחה"צ|לפנה"צ|אחרי הצהריים|לפני הצהריים|לפנות בוקר|בבוקר|בערב/i,
            isPM: function(e) {
                return /^(אחה"צ|אחרי הצהריים|בערב)$/.test(e);
            },
            meridiem: function(e, t, s) {
                return e < 5 ? "לפנות בוקר" : e < 10 ? "בבוקר" : e < 12 ? s ? 'לפנה"צ' : "לפני הצהריים" : e < 18 ? s ? 'אחה"צ' : "אחרי הצהריים" : "בערב";
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "१",
            "2": "२",
            "3": "३",
            "4": "४",
            "5": "५",
            "6": "६",
            "7": "७",
            "8": "८",
            "9": "९",
            "0": "०"
        }, s = {
            "१": "1",
            "२": "2",
            "३": "3",
            "४": "4",
            "५": "5",
            "६": "6",
            "७": "7",
            "८": "8",
            "९": "9",
            "०": "0"
        }, n = e.defineLocale("hi", {
            months: "जनवरी_फ़रवरी_मार्च_अप्रैल_मई_जून_जुलाई_अगस्त_सितम्बर_अक्टूबर_नवम्बर_दिसम्बर".split("_"),
            monthsShort: "जन._फ़र._मार्च_अप्रै._मई_जून_जुल._अग._सित._अक्टू._नव._दिस.".split("_"),
            monthsParseExact: !0,
            weekdays: "रविवार_सोमवार_मंगलवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),
            weekdaysShort: "रवि_सोम_मंगल_बुध_गुरू_शुक्र_शनि".split("_"),
            weekdaysMin: "र_सो_मं_बु_गु_शु_श".split("_"),
            longDateFormat: {
                LT: "A h:mm बजे",
                LTS: "A h:mm:ss बजे",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm बजे",
                LLLL: "dddd, D MMMM YYYY, A h:mm बजे"
            },
            calendar: {
                sameDay: "[आज] LT",
                nextDay: "[कल] LT",
                nextWeek: "dddd, LT",
                lastDay: "[कल] LT",
                lastWeek: "[पिछले] dddd, LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s में",
                past: "%s पहले",
                s: "कुछ ही क्षण",
                ss: "%d सेकंड",
                m: "एक मिनट",
                mm: "%d मिनट",
                h: "एक घंटा",
                hh: "%d घंटे",
                d: "एक दिन",
                dd: "%d दिन",
                M: "एक महीने",
                MM: "%d महीने",
                y: "एक वर्ष",
                yy: "%d वर्ष"
            },
            preparse: function(e) {
                return e.replace(/[१२३४५६७८९०]/g, function(e) {
                    return s[e];
                });
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                });
            },
            meridiemParse: /रात|सुबह|दोपहर|शाम/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "रात" === t ? e < 4 ? e : e + 12 : "सुबह" === t ? e : "दोपहर" === t ? e >= 10 ? e : e + 12 : "शाम" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, s) {
                return e < 4 ? "रात" : e < 10 ? "सुबह" : e < 17 ? "दोपहर" : e < 20 ? "शाम" : "रात";
            },
            week: {
                dow: 0,
                doy: 6
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t, s) {
            var n = e + " ";
            switch (s) {
              case "ss":
                return n += 1 === e ? "sekunda" : 2 === e || 3 === e || 4 === e ? "sekunde" : "sekundi";

              case "m":
                return t ? "jedna minuta" : "jedne minute";

              case "mm":
                return n += 1 === e ? "minuta" : 2 === e || 3 === e || 4 === e ? "minute" : "minuta";

              case "h":
                return t ? "jedan sat" : "jednog sata";

              case "hh":
                return n += 1 === e ? "sat" : 2 === e || 3 === e || 4 === e ? "sata" : "sati";

              case "dd":
                return n += 1 === e ? "dan" : "dana";

              case "MM":
                return n += 1 === e ? "mjesec" : 2 === e || 3 === e || 4 === e ? "mjeseca" : "mjeseci";

              case "yy":
                return n += 1 === e ? "godina" : 2 === e || 3 === e || 4 === e ? "godine" : "godina";
            }
        }
        var s = e.defineLocale("hr", {
            months: {
                format: "siječnja_veljače_ožujka_travnja_svibnja_lipnja_srpnja_kolovoza_rujna_listopada_studenoga_prosinca".split("_"),
                standalone: "siječanj_veljača_ožujak_travanj_svibanj_lipanj_srpanj_kolovoz_rujan_listopad_studeni_prosinac".split("_")
            },
            monthsShort: "sij._velj._ožu._tra._svi._lip._srp._kol._ruj._lis._stu._pro.".split("_"),
            monthsParseExact: !0,
            weekdays: "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),
            weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
            weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd, D. MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[danas u] LT",
                nextDay: "[sutra u] LT",
                nextWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[u] [nedjelju] [u] LT";

                      case 3:
                        return "[u] [srijedu] [u] LT";

                      case 6:
                        return "[u] [subotu] [u] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[u] dddd [u] LT";
                    }
                },
                lastDay: "[jučer u] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                      case 3:
                        return "[prošlu] dddd [u] LT";

                      case 6:
                        return "[prošle] [subote] [u] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[prošli] dddd [u] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "za %s",
                past: "prije %s",
                s: "par sekundi",
                ss: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: "dan",
                dd: t,
                M: "mjesec",
                MM: t,
                y: "godinu",
                yy: t
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t, s, n) {
            var a = e;
            switch (s) {
              case "s":
                return n || t ? "néhány másodperc" : "néhány másodperce";

              case "ss":
                return a + (n || t) ? " másodperc" : " másodperce";

              case "m":
                return "egy" + (n || t ? " perc" : " perce");

              case "mm":
                return a + (n || t ? " perc" : " perce");

              case "h":
                return "egy" + (n || t ? " óra" : " órája");

              case "hh":
                return a + (n || t ? " óra" : " órája");

              case "d":
                return "egy" + (n || t ? " nap" : " napja");

              case "dd":
                return a + (n || t ? " nap" : " napja");

              case "M":
                return "egy" + (n || t ? " hónap" : " hónapja");

              case "MM":
                return a + (n || t ? " hónap" : " hónapja");

              case "y":
                return "egy" + (n || t ? " év" : " éve");

              case "yy":
                return a + (n || t ? " év" : " éve");
            }
            return "";
        }
        function s(e) {
            return (e ? "" : "[múlt] ") + "[" + n[this.day()] + "] LT[-kor]";
        }
        var n = "vasárnap hétfőn kedden szerdán csütörtökön pénteken szombaton".split(" "), a = e.defineLocale("hu", {
            months: "január_február_március_április_május_június_július_augusztus_szeptember_október_november_december".split("_"),
            monthsShort: "jan_feb_márc_ápr_máj_jún_júl_aug_szept_okt_nov_dec".split("_"),
            weekdays: "vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat".split("_"),
            weekdaysShort: "vas_hét_kedd_sze_csüt_pén_szo".split("_"),
            weekdaysMin: "v_h_k_sze_cs_p_szo".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "YYYY.MM.DD.",
                LL: "YYYY. MMMM D.",
                LLL: "YYYY. MMMM D. H:mm",
                LLLL: "YYYY. MMMM D., dddd H:mm"
            },
            meridiemParse: /de|du/i,
            isPM: function(e) {
                return "u" === e.charAt(1).toLowerCase();
            },
            meridiem: function(e, t, s) {
                return e < 12 ? s === !0 ? "de" : "DE" : s === !0 ? "du" : "DU";
            },
            calendar: {
                sameDay: "[ma] LT[-kor]",
                nextDay: "[holnap] LT[-kor]",
                nextWeek: function() {
                    return s.call(this, !0);
                },
                lastDay: "[tegnap] LT[-kor]",
                lastWeek: function() {
                    return s.call(this, !1);
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "%s múlva",
                past: "%s",
                s: t,
                ss: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return a;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("hy-am", {
            months: {
                format: "հունվարի_փետրվարի_մարտի_ապրիլի_մայիսի_հունիսի_հուլիսի_օգոստոսի_սեպտեմբերի_հոկտեմբերի_նոյեմբերի_դեկտեմբերի".split("_"),
                standalone: "հունվար_փետրվար_մարտ_ապրիլ_մայիս_հունիս_հուլիս_օգոստոս_սեպտեմբեր_հոկտեմբեր_նոյեմբեր_դեկտեմբեր".split("_")
            },
            monthsShort: "հնվ_փտր_մրտ_ապր_մյս_հնս_հլս_օգս_սպտ_հկտ_նմբ_դկտ".split("_"),
            weekdays: "կիրակի_երկուշաբթի_երեքշաբթի_չորեքշաբթի_հինգշաբթի_ուրբաթ_շաբաթ".split("_"),
            weekdaysShort: "կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),
            weekdaysMin: "կրկ_երկ_երք_չրք_հնգ_ուրբ_շբթ".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY թ.",
                LLL: "D MMMM YYYY թ., HH:mm",
                LLLL: "dddd, D MMMM YYYY թ., HH:mm"
            },
            calendar: {
                sameDay: "[այսօր] LT",
                nextDay: "[վաղը] LT",
                lastDay: "[երեկ] LT",
                nextWeek: function() {
                    return "dddd [օրը ժամը] LT";
                },
                lastWeek: function() {
                    return "[անցած] dddd [օրը ժամը] LT";
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "%s հետո",
                past: "%s առաջ",
                s: "մի քանի վայրկյան",
                ss: "%d վայրկյան",
                m: "րոպե",
                mm: "%d րոպե",
                h: "ժամ",
                hh: "%d ժամ",
                d: "օր",
                dd: "%d օր",
                M: "ամիս",
                MM: "%d ամիս",
                y: "տարի",
                yy: "%d տարի"
            },
            meridiemParse: /գիշերվա|առավոտվա|ցերեկվա|երեկոյան/,
            isPM: function(e) {
                return /^(ցերեկվա|երեկոյան)$/.test(e);
            },
            meridiem: function(e) {
                return e < 4 ? "գիշերվա" : e < 12 ? "առավոտվա" : e < 17 ? "ցերեկվա" : "երեկոյան";
            },
            dayOfMonthOrdinalParse: /\d{1,2}|\d{1,2}-(ին|րդ)/,
            ordinal: function(e, t) {
                switch (t) {
                  case "DDD":
                  case "w":
                  case "W":
                  case "DDDo":
                    return 1 === e ? e + "-ին" : e + "-րդ";

                  default:
                    return e;
                }
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("id", {
            months: "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_November_Desember".split("_"),
            monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Agt_Sep_Okt_Nov_Des".split("_"),
            weekdays: "Minggu_Senin_Selasa_Rabu_Kamis_Jumat_Sabtu".split("_"),
            weekdaysShort: "Min_Sen_Sel_Rab_Kam_Jum_Sab".split("_"),
            weekdaysMin: "Mg_Sn_Sl_Rb_Km_Jm_Sb".split("_"),
            longDateFormat: {
                LT: "HH.mm",
                LTS: "HH.mm.ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY [pukul] HH.mm",
                LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
            },
            meridiemParse: /pagi|siang|sore|malam/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "pagi" === t ? e : "siang" === t ? e >= 11 ? e : e + 12 : "sore" === t || "malam" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, s) {
                return e < 11 ? "pagi" : e < 15 ? "siang" : e < 19 ? "sore" : "malam";
            },
            calendar: {
                sameDay: "[Hari ini pukul] LT",
                nextDay: "[Besok pukul] LT",
                nextWeek: "dddd [pukul] LT",
                lastDay: "[Kemarin pukul] LT",
                lastWeek: "dddd [lalu pukul] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "dalam %s",
                past: "%s yang lalu",
                s: "beberapa detik",
                ss: "%d detik",
                m: "semenit",
                mm: "%d menit",
                h: "sejam",
                hh: "%d jam",
                d: "sehari",
                dd: "%d hari",
                M: "sebulan",
                MM: "%d bulan",
                y: "setahun",
                yy: "%d tahun"
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e) {
            return e % 100 === 11 || e % 10 !== 1;
        }
        function s(e, s, n, a) {
            var i = e + " ";
            switch (n) {
              case "s":
                return s || a ? "nokkrar sekúndur" : "nokkrum sekúndum";

              case "ss":
                return t(e) ? i + (s || a ? "sekúndur" : "sekúndum") : i + "sekúnda";

              case "m":
                return s ? "mínúta" : "mínútu";

              case "mm":
                return t(e) ? i + (s || a ? "mínútur" : "mínútum") : s ? i + "mínúta" : i + "mínútu";

              case "hh":
                return t(e) ? i + (s || a ? "klukkustundir" : "klukkustundum") : i + "klukkustund";

              case "d":
                return s ? "dagur" : a ? "dag" : "degi";

              case "dd":
                return t(e) ? s ? i + "dagar" : i + (a ? "daga" : "dögum") : s ? i + "dagur" : i + (a ? "dag" : "degi");

              case "M":
                return s ? "mánuður" : a ? "mánuð" : "mánuði";

              case "MM":
                return t(e) ? s ? i + "mánuðir" : i + (a ? "mánuði" : "mánuðum") : s ? i + "mánuður" : i + (a ? "mánuð" : "mánuði");

              case "y":
                return s || a ? "ár" : "ári";

              case "yy":
                return t(e) ? i + (s || a ? "ár" : "árum") : i + (s || a ? "ár" : "ári");
            }
        }
        var n = e.defineLocale("is", {
            months: "janúar_febrúar_mars_apríl_maí_júní_júlí_ágúst_september_október_nóvember_desember".split("_"),
            monthsShort: "jan_feb_mar_apr_maí_jún_júl_ágú_sep_okt_nóv_des".split("_"),
            weekdays: "sunnudagur_mánudagur_þriðjudagur_miðvikudagur_fimmtudagur_föstudagur_laugardagur".split("_"),
            weekdaysShort: "sun_mán_þri_mið_fim_fös_lau".split("_"),
            weekdaysMin: "Su_Má_Þr_Mi_Fi_Fö_La".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY [kl.] H:mm",
                LLLL: "dddd, D. MMMM YYYY [kl.] H:mm"
            },
            calendar: {
                sameDay: "[í dag kl.] LT",
                nextDay: "[á morgun kl.] LT",
                nextWeek: "dddd [kl.] LT",
                lastDay: "[í gær kl.] LT",
                lastWeek: "[síðasta] dddd [kl.] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "eftir %s",
                past: "fyrir %s síðan",
                s: s,
                ss: s,
                m: s,
                mm: s,
                h: "klukkustund",
                hh: s,
                d: s,
                dd: s,
                M: s,
                MM: s,
                y: s,
                yy: s
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("it", {
            months: "gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre".split("_"),
            monthsShort: "gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic".split("_"),
            weekdays: "domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato".split("_"),
            weekdaysShort: "dom_lun_mar_mer_gio_ven_sab".split("_"),
            weekdaysMin: "do_lu_ma_me_gi_ve_sa".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Oggi alle] LT",
                nextDay: "[Domani alle] LT",
                nextWeek: "dddd [alle] LT",
                lastDay: "[Ieri alle] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[la scorsa] dddd [alle] LT";

                      default:
                        return "[lo scorso] dddd [alle] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: function(e) {
                    return (/^[0-9].+$/.test(e) ? "tra" : "in") + " " + e;
                },
                past: "%s fa",
                s: "alcuni secondi",
                ss: "%d secondi",
                m: "un minuto",
                mm: "%d minuti",
                h: "un'ora",
                hh: "%d ore",
                d: "un giorno",
                dd: "%d giorni",
                M: "un mese",
                MM: "%d mesi",
                y: "un anno",
                yy: "%d anni"
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: "%dº",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ja", {
            months: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
            monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
            weekdays: "日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日".split("_"),
            weekdaysShort: "日_月_火_水_木_金_土".split("_"),
            weekdaysMin: "日_月_火_水_木_金_土".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY/MM/DD",
                LL: "YYYY年M月D日",
                LLL: "YYYY年M月D日 HH:mm",
                LLLL: "YYYY年M月D日 dddd HH:mm",
                l: "YYYY/MM/DD",
                ll: "YYYY年M月D日",
                lll: "YYYY年M月D日 HH:mm",
                llll: "YYYY年M月D日(ddd) HH:mm"
            },
            meridiemParse: /午前|午後/i,
            isPM: function(e) {
                return "午後" === e;
            },
            meridiem: function(e, t, s) {
                return e < 12 ? "午前" : "午後";
            },
            calendar: {
                sameDay: "[今日] LT",
                nextDay: "[明日] LT",
                nextWeek: function(e) {
                    return e.week() < this.week() ? "[来週]dddd LT" : "dddd LT";
                },
                lastDay: "[昨日] LT",
                lastWeek: function(e) {
                    return this.week() < e.week() ? "[先週]dddd LT" : "dddd LT";
                },
                sameElse: "L"
            },
            dayOfMonthOrdinalParse: /\d{1,2}日/,
            ordinal: function(e, t) {
                switch (t) {
                  case "d":
                  case "D":
                  case "DDD":
                    return e + "日";

                  default:
                    return e;
                }
            },
            relativeTime: {
                future: "%s後",
                past: "%s前",
                s: "数秒",
                ss: "%d秒",
                m: "1分",
                mm: "%d分",
                h: "1時間",
                hh: "%d時間",
                d: "1日",
                dd: "%d日",
                M: "1ヶ月",
                MM: "%dヶ月",
                y: "1年",
                yy: "%d年"
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("jv", {
            months: "Januari_Februari_Maret_April_Mei_Juni_Juli_Agustus_September_Oktober_Nopember_Desember".split("_"),
            monthsShort: "Jan_Feb_Mar_Apr_Mei_Jun_Jul_Ags_Sep_Okt_Nop_Des".split("_"),
            weekdays: "Minggu_Senen_Seloso_Rebu_Kemis_Jemuwah_Septu".split("_"),
            weekdaysShort: "Min_Sen_Sel_Reb_Kem_Jem_Sep".split("_"),
            weekdaysMin: "Mg_Sn_Sl_Rb_Km_Jm_Sp".split("_"),
            longDateFormat: {
                LT: "HH.mm",
                LTS: "HH.mm.ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY [pukul] HH.mm",
                LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
            },
            meridiemParse: /enjing|siyang|sonten|ndalu/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "enjing" === t ? e : "siyang" === t ? e >= 11 ? e : e + 12 : "sonten" === t || "ndalu" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, s) {
                return e < 11 ? "enjing" : e < 15 ? "siyang" : e < 19 ? "sonten" : "ndalu";
            },
            calendar: {
                sameDay: "[Dinten puniko pukul] LT",
                nextDay: "[Mbenjang pukul] LT",
                nextWeek: "dddd [pukul] LT",
                lastDay: "[Kala wingi pukul] LT",
                lastWeek: "dddd [kepengker pukul] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "wonten ing %s",
                past: "%s ingkang kepengker",
                s: "sawetawis detik",
                ss: "%d detik",
                m: "setunggal menit",
                mm: "%d menit",
                h: "setunggal jam",
                hh: "%d jam",
                d: "sedinten",
                dd: "%d dinten",
                M: "sewulan",
                MM: "%d wulan",
                y: "setaun",
                yy: "%d taun"
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ka", {
            months: {
                standalone: "იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი".split("_"),
                format: "იანვარს_თებერვალს_მარტს_აპრილის_მაისს_ივნისს_ივლისს_აგვისტს_სექტემბერს_ოქტომბერს_ნოემბერს_დეკემბერს".split("_")
            },
            monthsShort: "იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ".split("_"),
            weekdays: {
                standalone: "კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი".split("_"),
                format: "კვირას_ორშაბათს_სამშაბათს_ოთხშაბათს_ხუთშაბათს_პარასკევს_შაბათს".split("_"),
                isFormat: /(წინა|შემდეგ)/
            },
            weekdaysShort: "კვი_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ".split("_"),
            weekdaysMin: "კვ_ორ_სა_ოთ_ხუ_პა_შა".split("_"),
            longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY h:mm A",
                LLLL: "dddd, D MMMM YYYY h:mm A"
            },
            calendar: {
                sameDay: "[დღეს] LT[-ზე]",
                nextDay: "[ხვალ] LT[-ზე]",
                lastDay: "[გუშინ] LT[-ზე]",
                nextWeek: "[შემდეგ] dddd LT[-ზე]",
                lastWeek: "[წინა] dddd LT-ზე",
                sameElse: "L"
            },
            relativeTime: {
                future: function(e) {
                    return /(წამი|წუთი|საათი|წელი)/.test(e) ? e.replace(/ი$/, "ში") : e + "ში";
                },
                past: function(e) {
                    return /(წამი|წუთი|საათი|დღე|თვე)/.test(e) ? e.replace(/(ი|ე)$/, "ის წინ") : /წელი/.test(e) ? e.replace(/წელი$/, "წლის წინ") : void 0;
                },
                s: "რამდენიმე წამი",
                ss: "%d წამი",
                m: "წუთი",
                mm: "%d წუთი",
                h: "საათი",
                hh: "%d საათი",
                d: "დღე",
                dd: "%d დღე",
                M: "თვე",
                MM: "%d თვე",
                y: "წელი",
                yy: "%d წელი"
            },
            dayOfMonthOrdinalParse: /0|1-ლი|მე-\d{1,2}|\d{1,2}-ე/,
            ordinal: function(e) {
                return 0 === e ? e : 1 === e ? e + "-ლი" : e < 20 || e <= 100 && e % 20 === 0 || e % 100 === 0 ? "მე-" + e : e + "-ე";
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            0: "-ші",
            1: "-ші",
            2: "-ші",
            3: "-ші",
            4: "-ші",
            5: "-ші",
            6: "-шы",
            7: "-ші",
            8: "-ші",
            9: "-шы",
            10: "-шы",
            20: "-шы",
            30: "-шы",
            40: "-шы",
            50: "-ші",
            60: "-шы",
            70: "-ші",
            80: "-ші",
            90: "-шы",
            100: "-ші"
        }, s = e.defineLocale("kk", {
            months: "қаңтар_ақпан_наурыз_сәуір_мамыр_маусым_шілде_тамыз_қыркүйек_қазан_қараша_желтоқсан".split("_"),
            monthsShort: "қаң_ақп_нау_сәу_мам_мау_шіл_там_қыр_қаз_қар_жел".split("_"),
            weekdays: "жексенбі_дүйсенбі_сейсенбі_сәрсенбі_бейсенбі_жұма_сенбі".split("_"),
            weekdaysShort: "жек_дүй_сей_сәр_бей_жұм_сен".split("_"),
            weekdaysMin: "жк_дй_сй_ср_бй_жм_сн".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Бүгін сағат] LT",
                nextDay: "[Ертең сағат] LT",
                nextWeek: "dddd [сағат] LT",
                lastDay: "[Кеше сағат] LT",
                lastWeek: "[Өткен аптаның] dddd [сағат] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s ішінде",
                past: "%s бұрын",
                s: "бірнеше секунд",
                ss: "%d секунд",
                m: "бір минут",
                mm: "%d минут",
                h: "бір сағат",
                hh: "%d сағат",
                d: "бір күн",
                dd: "%d күн",
                M: "бір ай",
                MM: "%d ай",
                y: "бір жыл",
                yy: "%d жыл"
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(ші|шы)/,
            ordinal: function(e) {
                var s = e % 10, n = e >= 100 ? 100 : null;
                return e + (t[e] || t[s] || t[n]);
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "១",
            "2": "២",
            "3": "៣",
            "4": "៤",
            "5": "៥",
            "6": "៦",
            "7": "៧",
            "8": "៨",
            "9": "៩",
            "0": "០"
        }, s = {
            "១": "1",
            "២": "2",
            "៣": "3",
            "៤": "4",
            "៥": "5",
            "៦": "6",
            "៧": "7",
            "៨": "8",
            "៩": "9",
            "០": "0"
        }, n = e.defineLocale("km", {
            months: "មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split("_"),
            monthsShort: "មករា_កុម្ភៈ_មីនា_មេសា_ឧសភា_មិថុនា_កក្កដា_សីហា_កញ្ញា_តុលា_វិច្ឆិកា_ធ្នូ".split("_"),
            weekdays: "អាទិត្យ_ច័ន្ទ_អង្គារ_ពុធ_ព្រហស្បតិ៍_សុក្រ_សៅរ៍".split("_"),
            weekdaysShort: "អា_ច_អ_ព_ព្រ_សុ_ស".split("_"),
            weekdaysMin: "អា_ច_អ_ព_ព្រ_សុ_ស".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            meridiemParse: /ព្រឹក|ល្ងាច/,
            isPM: function(e) {
                return "ល្ងាច" === e;
            },
            meridiem: function(e, t, s) {
                return e < 12 ? "ព្រឹក" : "ល្ងាច";
            },
            calendar: {
                sameDay: "[ថ្ងៃនេះ ម៉ោង] LT",
                nextDay: "[ស្អែក ម៉ោង] LT",
                nextWeek: "dddd [ម៉ោង] LT",
                lastDay: "[ម្សិលមិញ ម៉ោង] LT",
                lastWeek: "dddd [សប្តាហ៍មុន] [ម៉ោង] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%sទៀត",
                past: "%sមុន",
                s: "ប៉ុន្មានវិនាទី",
                ss: "%d វិនាទី",
                m: "មួយនាទី",
                mm: "%d នាទី",
                h: "មួយម៉ោង",
                hh: "%d ម៉ោង",
                d: "មួយថ្ងៃ",
                dd: "%d ថ្ងៃ",
                M: "មួយខែ",
                MM: "%d ខែ",
                y: "មួយឆ្នាំ",
                yy: "%d ឆ្នាំ"
            },
            dayOfMonthOrdinalParse: /ទី\d{1,2}/,
            ordinal: "ទី%d",
            preparse: function(e) {
                return e.replace(/[១២៣៤៥៦៧៨៩០]/g, function(e) {
                    return s[e];
                });
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                });
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "೧",
            "2": "೨",
            "3": "೩",
            "4": "೪",
            "5": "೫",
            "6": "೬",
            "7": "೭",
            "8": "೮",
            "9": "೯",
            "0": "೦"
        }, s = {
            "೧": "1",
            "೨": "2",
            "೩": "3",
            "೪": "4",
            "೫": "5",
            "೬": "6",
            "೭": "7",
            "೮": "8",
            "೯": "9",
            "೦": "0"
        }, n = e.defineLocale("kn", {
            months: "ಜನವರಿ_ಫೆಬ್ರವರಿ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂಬರ್_ಅಕ್ಟೋಬರ್_ನವೆಂಬರ್_ಡಿಸೆಂಬರ್".split("_"),
            monthsShort: "ಜನ_ಫೆಬ್ರ_ಮಾರ್ಚ್_ಏಪ್ರಿಲ್_ಮೇ_ಜೂನ್_ಜುಲೈ_ಆಗಸ್ಟ್_ಸೆಪ್ಟೆಂ_ಅಕ್ಟೋ_ನವೆಂ_ಡಿಸೆಂ".split("_"),
            monthsParseExact: !0,
            weekdays: "ಭಾನುವಾರ_ಸೋಮವಾರ_ಮಂಗಳವಾರ_ಬುಧವಾರ_ಗುರುವಾರ_ಶುಕ್ರವಾರ_ಶನಿವಾರ".split("_"),
            weekdaysShort: "ಭಾನು_ಸೋಮ_ಮಂಗಳ_ಬುಧ_ಗುರು_ಶುಕ್ರ_ಶನಿ".split("_"),
            weekdaysMin: "ಭಾ_ಸೋ_ಮಂ_ಬು_ಗು_ಶು_ಶ".split("_"),
            longDateFormat: {
                LT: "A h:mm",
                LTS: "A h:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm",
                LLLL: "dddd, D MMMM YYYY, A h:mm"
            },
            calendar: {
                sameDay: "[ಇಂದು] LT",
                nextDay: "[ನಾಳೆ] LT",
                nextWeek: "dddd, LT",
                lastDay: "[ನಿನ್ನೆ] LT",
                lastWeek: "[ಕೊನೆಯ] dddd, LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s ನಂತರ",
                past: "%s ಹಿಂದೆ",
                s: "ಕೆಲವು ಕ್ಷಣಗಳು",
                ss: "%d ಸೆಕೆಂಡುಗಳು",
                m: "ಒಂದು ನಿಮಿಷ",
                mm: "%d ನಿಮಿಷ",
                h: "ಒಂದು ಗಂಟೆ",
                hh: "%d ಗಂಟೆ",
                d: "ಒಂದು ದಿನ",
                dd: "%d ದಿನ",
                M: "ಒಂದು ತಿಂಗಳು",
                MM: "%d ತಿಂಗಳು",
                y: "ಒಂದು ವರ್ಷ",
                yy: "%d ವರ್ಷ"
            },
            preparse: function(e) {
                return e.replace(/[೧೨೩೪೫೬೭೮೯೦]/g, function(e) {
                    return s[e];
                });
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                });
            },
            meridiemParse: /ರಾತ್ರಿ|ಬೆಳಿಗ್ಗೆ|ಮಧ್ಯಾಹ್ನ|ಸಂಜೆ/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "ರಾತ್ರಿ" === t ? e < 4 ? e : e + 12 : "ಬೆಳಿಗ್ಗೆ" === t ? e : "ಮಧ್ಯಾಹ್ನ" === t ? e >= 10 ? e : e + 12 : "ಸಂಜೆ" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, s) {
                return e < 4 ? "ರಾತ್ರಿ" : e < 10 ? "ಬೆಳಿಗ್ಗೆ" : e < 17 ? "ಮಧ್ಯಾಹ್ನ" : e < 20 ? "ಸಂಜೆ" : "ರಾತ್ರಿ";
            },
            dayOfMonthOrdinalParse: /\d{1,2}(ನೇ)/,
            ordinal: function(e) {
                return e + "ನೇ";
            },
            week: {
                dow: 0,
                doy: 6
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ko", {
            months: "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),
            monthsShort: "1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월".split("_"),
            weekdays: "일요일_월요일_화요일_수요일_목요일_금요일_토요일".split("_"),
            weekdaysShort: "일_월_화_수_목_금_토".split("_"),
            weekdaysMin: "일_월_화_수_목_금_토".split("_"),
            longDateFormat: {
                LT: "A h:mm",
                LTS: "A h:mm:ss",
                L: "YYYY.MM.DD.",
                LL: "YYYY년 MMMM D일",
                LLL: "YYYY년 MMMM D일 A h:mm",
                LLLL: "YYYY년 MMMM D일 dddd A h:mm",
                l: "YYYY.MM.DD.",
                ll: "YYYY년 MMMM D일",
                lll: "YYYY년 MMMM D일 A h:mm",
                llll: "YYYY년 MMMM D일 dddd A h:mm"
            },
            calendar: {
                sameDay: "오늘 LT",
                nextDay: "내일 LT",
                nextWeek: "dddd LT",
                lastDay: "어제 LT",
                lastWeek: "지난주 dddd LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s 후",
                past: "%s 전",
                s: "몇 초",
                ss: "%d초",
                m: "1분",
                mm: "%d분",
                h: "한 시간",
                hh: "%d시간",
                d: "하루",
                dd: "%d일",
                M: "한 달",
                MM: "%d달",
                y: "일 년",
                yy: "%d년"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(일|월|주)/,
            ordinal: function(e, t) {
                switch (t) {
                  case "d":
                  case "D":
                  case "DDD":
                    return e + "일";

                  case "M":
                    return e + "월";

                  case "w":
                  case "W":
                    return e + "주";

                  default:
                    return e;
                }
            },
            meridiemParse: /오전|오후/,
            isPM: function(e) {
                return "오후" === e;
            },
            meridiem: function(e, t, s) {
                return e < 12 ? "오전" : "오후";
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            0: "-чү",
            1: "-чи",
            2: "-чи",
            3: "-чү",
            4: "-чү",
            5: "-чи",
            6: "-чы",
            7: "-чи",
            8: "-чи",
            9: "-чу",
            10: "-чу",
            20: "-чы",
            30: "-чу",
            40: "-чы",
            50: "-чү",
            60: "-чы",
            70: "-чи",
            80: "-чи",
            90: "-чу",
            100: "-чү"
        }, s = e.defineLocale("ky", {
            months: "январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_"),
            monthsShort: "янв_фев_март_апр_май_июнь_июль_авг_сен_окт_ноя_дек".split("_"),
            weekdays: "Жекшемби_Дүйшөмбү_Шейшемби_Шаршемби_Бейшемби_Жума_Ишемби".split("_"),
            weekdaysShort: "Жек_Дүй_Шей_Шар_Бей_Жум_Ише".split("_"),
            weekdaysMin: "Жк_Дй_Шй_Шр_Бй_Жм_Иш".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Бүгүн саат] LT",
                nextDay: "[Эртең саат] LT",
                nextWeek: "dddd [саат] LT",
                lastDay: "[Кече саат] LT",
                lastWeek: "[Өткен аптанын] dddd [күнү] [саат] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s ичинде",
                past: "%s мурун",
                s: "бирнече секунд",
                ss: "%d секунд",
                m: "бир мүнөт",
                mm: "%d мүнөт",
                h: "бир саат",
                hh: "%d саат",
                d: "бир күн",
                dd: "%d күн",
                M: "бир ай",
                MM: "%d ай",
                y: "бир жыл",
                yy: "%d жыл"
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(чи|чы|чү|чу)/,
            ordinal: function(e) {
                var s = e % 10, n = e >= 100 ? 100 : null;
                return e + (t[e] || t[s] || t[n]);
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t, s, n) {
            var a = {
                m: [ "eng Minutt", "enger Minutt" ],
                h: [ "eng Stonn", "enger Stonn" ],
                d: [ "een Dag", "engem Dag" ],
                M: [ "ee Mount", "engem Mount" ],
                y: [ "ee Joer", "engem Joer" ]
            };
            return t ? a[s][0] : a[s][1];
        }
        function s(e) {
            var t = e.substr(0, e.indexOf(" "));
            return a(t) ? "a " + e : "an " + e;
        }
        function n(e) {
            var t = e.substr(0, e.indexOf(" "));
            return a(t) ? "viru " + e : "virun " + e;
        }
        function a(e) {
            if (e = parseInt(e, 10), isNaN(e)) return !1;
            if (e < 0) return !0;
            if (e < 10) return 4 <= e && e <= 7;
            if (e < 100) {
                var t = e % 10, s = e / 10;
                return a(0 === t ? s : t);
            }
            if (e < 1e4) {
                for (;e >= 10; ) e /= 10;
                return a(e);
            }
            return e /= 1e3, a(e);
        }
        var i = e.defineLocale("lb", {
            months: "Januar_Februar_Mäerz_Abrëll_Mee_Juni_Juli_August_September_Oktober_November_Dezember".split("_"),
            monthsShort: "Jan._Febr._Mrz._Abr._Mee_Jun._Jul._Aug._Sept._Okt._Nov._Dez.".split("_"),
            monthsParseExact: !0,
            weekdays: "Sonndeg_Méindeg_Dënschdeg_Mëttwoch_Donneschdeg_Freideg_Samschdeg".split("_"),
            weekdaysShort: "So._Mé._Dë._Më._Do._Fr._Sa.".split("_"),
            weekdaysMin: "So_Mé_Dë_Më_Do_Fr_Sa".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "H:mm [Auer]",
                LTS: "H:mm:ss [Auer]",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm [Auer]",
                LLLL: "dddd, D. MMMM YYYY H:mm [Auer]"
            },
            calendar: {
                sameDay: "[Haut um] LT",
                sameElse: "L",
                nextDay: "[Muer um] LT",
                nextWeek: "dddd [um] LT",
                lastDay: "[Gëschter um] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 2:
                      case 4:
                        return "[Leschten] dddd [um] LT";

                      default:
                        return "[Leschte] dddd [um] LT";
                    }
                }
            },
            relativeTime: {
                future: s,
                past: n,
                s: "e puer Sekonnen",
                ss: "%d Sekonnen",
                m: t,
                mm: "%d Minutten",
                h: t,
                hh: "%d Stonnen",
                d: t,
                dd: "%d Deeg",
                M: t,
                MM: "%d Méint",
                y: t,
                yy: "%d Joer"
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return i;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("lo", {
            months: "ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ".split("_"),
            monthsShort: "ມັງກອນ_ກຸມພາ_ມີນາ_ເມສາ_ພຶດສະພາ_ມິຖຸນາ_ກໍລະກົດ_ສິງຫາ_ກັນຍາ_ຕຸລາ_ພະຈິກ_ທັນວາ".split("_"),
            weekdays: "ອາທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ".split("_"),
            weekdaysShort: "ທິດ_ຈັນ_ອັງຄານ_ພຸດ_ພະຫັດ_ສຸກ_ເສົາ".split("_"),
            weekdaysMin: "ທ_ຈ_ອຄ_ພ_ພຫ_ສກ_ສ".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "ວັນdddd D MMMM YYYY HH:mm"
            },
            meridiemParse: /ຕອນເຊົ້າ|ຕອນແລງ/,
            isPM: function(e) {
                return "ຕອນແລງ" === e;
            },
            meridiem: function(e, t, s) {
                return e < 12 ? "ຕອນເຊົ້າ" : "ຕອນແລງ";
            },
            calendar: {
                sameDay: "[ມື້ນີ້ເວລາ] LT",
                nextDay: "[ມື້ອື່ນເວລາ] LT",
                nextWeek: "[ວັນ]dddd[ໜ້າເວລາ] LT",
                lastDay: "[ມື້ວານນີ້ເວລາ] LT",
                lastWeek: "[ວັນ]dddd[ແລ້ວນີ້ເວລາ] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "ອີກ %s",
                past: "%sຜ່ານມາ",
                s: "ບໍ່ເທົ່າໃດວິນາທີ",
                ss: "%d ວິນາທີ",
                m: "1 ນາທີ",
                mm: "%d ນາທີ",
                h: "1 ຊົ່ວໂມງ",
                hh: "%d ຊົ່ວໂມງ",
                d: "1 ມື້",
                dd: "%d ມື້",
                M: "1 ເດືອນ",
                MM: "%d ເດືອນ",
                y: "1 ປີ",
                yy: "%d ປີ"
            },
            dayOfMonthOrdinalParse: /(ທີ່)\d{1,2}/,
            ordinal: function(e) {
                return "ທີ່" + e;
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t, s, n) {
            return t ? "kelios sekundės" : n ? "kelių sekundžių" : "kelias sekundes";
        }
        function s(e, t, s, n) {
            return t ? a(s)[0] : n ? a(s)[1] : a(s)[2];
        }
        function n(e) {
            return e % 10 === 0 || e > 10 && e < 20;
        }
        function a(e) {
            return r[e].split("_");
        }
        function i(e, t, i, r) {
            var o = e + " ";
            return 1 === e ? o + s(e, t, i[0], r) : t ? o + (n(e) ? a(i)[1] : a(i)[0]) : r ? o + a(i)[1] : o + (n(e) ? a(i)[1] : a(i)[2]);
        }
        var r = {
            ss: "sekundė_sekundžių_sekundes",
            m: "minutė_minutės_minutę",
            mm: "minutės_minučių_minutes",
            h: "valanda_valandos_valandą",
            hh: "valandos_valandų_valandas",
            d: "diena_dienos_dieną",
            dd: "dienos_dienų_dienas",
            M: "mėnuo_mėnesio_mėnesį",
            MM: "mėnesiai_mėnesių_mėnesius",
            y: "metai_metų_metus",
            yy: "metai_metų_metus"
        }, o = e.defineLocale("lt", {
            months: {
                format: "sausio_vasario_kovo_balandžio_gegužės_birželio_liepos_rugpjūčio_rugsėjo_spalio_lapkričio_gruodžio".split("_"),
                standalone: "sausis_vasaris_kovas_balandis_gegužė_birželis_liepa_rugpjūtis_rugsėjis_spalis_lapkritis_gruodis".split("_"),
                isFormat: /D[oD]?(\[[^\[\]]*\]|\s)+MMMM?|MMMM?(\[[^\[\]]*\]|\s)+D[oD]?/
            },
            monthsShort: "sau_vas_kov_bal_geg_bir_lie_rgp_rgs_spa_lap_grd".split("_"),
            weekdays: {
                format: "sekmadienį_pirmadienį_antradienį_trečiadienį_ketvirtadienį_penktadienį_šeštadienį".split("_"),
                standalone: "sekmadienis_pirmadienis_antradienis_trečiadienis_ketvirtadienis_penktadienis_šeštadienis".split("_"),
                isFormat: /dddd HH:mm/
            },
            weekdaysShort: "Sek_Pir_Ant_Tre_Ket_Pen_Šeš".split("_"),
            weekdaysMin: "S_P_A_T_K_Pn_Š".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "YYYY [m.] MMMM D [d.]",
                LLL: "YYYY [m.] MMMM D [d.], HH:mm [val.]",
                LLLL: "YYYY [m.] MMMM D [d.], dddd, HH:mm [val.]",
                l: "YYYY-MM-DD",
                ll: "YYYY [m.] MMMM D [d.]",
                lll: "YYYY [m.] MMMM D [d.], HH:mm [val.]",
                llll: "YYYY [m.] MMMM D [d.], ddd, HH:mm [val.]"
            },
            calendar: {
                sameDay: "[Šiandien] LT",
                nextDay: "[Rytoj] LT",
                nextWeek: "dddd LT",
                lastDay: "[Vakar] LT",
                lastWeek: "[Praėjusį] dddd LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "po %s",
                past: "prieš %s",
                s: t,
                ss: i,
                m: s,
                mm: i,
                h: s,
                hh: i,
                d: s,
                dd: i,
                M: s,
                MM: i,
                y: s,
                yy: i
            },
            dayOfMonthOrdinalParse: /\d{1,2}-oji/,
            ordinal: function(e) {
                return e + "-oji";
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return o;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t, s) {
            return s ? t % 10 === 1 && t % 100 !== 11 ? e[2] : e[3] : t % 10 === 1 && t % 100 !== 11 ? e[0] : e[1];
        }
        function s(e, s, n) {
            return e + " " + t(i[n], e, s);
        }
        function n(e, s, n) {
            return t(i[n], e, s);
        }
        function a(e, t) {
            return t ? "dažas sekundes" : "dažām sekundēm";
        }
        var i = {
            ss: "sekundes_sekundēm_sekunde_sekundes".split("_"),
            m: "minūtes_minūtēm_minūte_minūtes".split("_"),
            mm: "minūtes_minūtēm_minūte_minūtes".split("_"),
            h: "stundas_stundām_stunda_stundas".split("_"),
            hh: "stundas_stundām_stunda_stundas".split("_"),
            d: "dienas_dienām_diena_dienas".split("_"),
            dd: "dienas_dienām_diena_dienas".split("_"),
            M: "mēneša_mēnešiem_mēnesis_mēneši".split("_"),
            MM: "mēneša_mēnešiem_mēnesis_mēneši".split("_"),
            y: "gada_gadiem_gads_gadi".split("_"),
            yy: "gada_gadiem_gads_gadi".split("_")
        }, r = e.defineLocale("lv", {
            months: "janvāris_februāris_marts_aprīlis_maijs_jūnijs_jūlijs_augusts_septembris_oktobris_novembris_decembris".split("_"),
            monthsShort: "jan_feb_mar_apr_mai_jūn_jūl_aug_sep_okt_nov_dec".split("_"),
            weekdays: "svētdiena_pirmdiena_otrdiena_trešdiena_ceturtdiena_piektdiena_sestdiena".split("_"),
            weekdaysShort: "Sv_P_O_T_C_Pk_S".split("_"),
            weekdaysMin: "Sv_P_O_T_C_Pk_S".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY.",
                LL: "YYYY. [gada] D. MMMM",
                LLL: "YYYY. [gada] D. MMMM, HH:mm",
                LLLL: "YYYY. [gada] D. MMMM, dddd, HH:mm"
            },
            calendar: {
                sameDay: "[Šodien pulksten] LT",
                nextDay: "[Rīt pulksten] LT",
                nextWeek: "dddd [pulksten] LT",
                lastDay: "[Vakar pulksten] LT",
                lastWeek: "[Pagājušā] dddd [pulksten] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "pēc %s",
                past: "pirms %s",
                s: a,
                ss: s,
                m: n,
                mm: s,
                h: n,
                hh: s,
                d: n,
                dd: s,
                M: n,
                MM: s,
                y: n,
                yy: s
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return r;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            words: {
                ss: [ "sekund", "sekunda", "sekundi" ],
                m: [ "jedan minut", "jednog minuta" ],
                mm: [ "minut", "minuta", "minuta" ],
                h: [ "jedan sat", "jednog sata" ],
                hh: [ "sat", "sata", "sati" ],
                dd: [ "dan", "dana", "dana" ],
                MM: [ "mjesec", "mjeseca", "mjeseci" ],
                yy: [ "godina", "godine", "godina" ]
            },
            correctGrammaticalCase: function(e, t) {
                return 1 === e ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2];
            },
            translate: function(e, s, n) {
                var a = t.words[n];
                return 1 === n.length ? s ? a[0] : a[1] : e + " " + t.correctGrammaticalCase(e, a);
            }
        }, s = e.defineLocale("me", {
            months: "januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split("_"),
            monthsShort: "jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split("_"),
            monthsParseExact: !0,
            weekdays: "nedjelja_ponedjeljak_utorak_srijeda_četvrtak_petak_subota".split("_"),
            weekdaysShort: "ned._pon._uto._sri._čet._pet._sub.".split("_"),
            weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd, D. MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[danas u] LT",
                nextDay: "[sjutra u] LT",
                nextWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[u] [nedjelju] [u] LT";

                      case 3:
                        return "[u] [srijedu] [u] LT";

                      case 6:
                        return "[u] [subotu] [u] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[u] dddd [u] LT";
                    }
                },
                lastDay: "[juče u] LT",
                lastWeek: function() {
                    var e = [ "[prošle] [nedjelje] [u] LT", "[prošlog] [ponedjeljka] [u] LT", "[prošlog] [utorka] [u] LT", "[prošle] [srijede] [u] LT", "[prošlog] [četvrtka] [u] LT", "[prošlog] [petka] [u] LT", "[prošle] [subote] [u] LT" ];
                    return e[this.day()];
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "za %s",
                past: "prije %s",
                s: "nekoliko sekundi",
                ss: t.translate,
                m: t.translate,
                mm: t.translate,
                h: t.translate,
                hh: t.translate,
                d: "dan",
                dd: t.translate,
                M: "mjesec",
                MM: t.translate,
                y: "godinu",
                yy: t.translate
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("mi", {
            months: "Kohi-tāte_Hui-tanguru_Poutū-te-rangi_Paenga-whāwhā_Haratua_Pipiri_Hōngoingoi_Here-turi-kōkā_Mahuru_Whiringa-ā-nuku_Whiringa-ā-rangi_Hakihea".split("_"),
            monthsShort: "Kohi_Hui_Pou_Pae_Hara_Pipi_Hōngoi_Here_Mahu_Whi-nu_Whi-ra_Haki".split("_"),
            monthsRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
            monthsStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
            monthsShortRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,3}/i,
            monthsShortStrictRegex: /(?:['a-z\u0101\u014D\u016B]+\-?){1,2}/i,
            weekdays: "Rātapu_Mane_Tūrei_Wenerei_Tāite_Paraire_Hātarei".split("_"),
            weekdaysShort: "Ta_Ma_Tū_We_Tāi_Pa_Hā".split("_"),
            weekdaysMin: "Ta_Ma_Tū_We_Tāi_Pa_Hā".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY [i] HH:mm",
                LLLL: "dddd, D MMMM YYYY [i] HH:mm"
            },
            calendar: {
                sameDay: "[i teie mahana, i] LT",
                nextDay: "[apopo i] LT",
                nextWeek: "dddd [i] LT",
                lastDay: "[inanahi i] LT",
                lastWeek: "dddd [whakamutunga i] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "i roto i %s",
                past: "%s i mua",
                s: "te hēkona ruarua",
                ss: "%d hēkona",
                m: "he meneti",
                mm: "%d meneti",
                h: "te haora",
                hh: "%d haora",
                d: "he ra",
                dd: "%d ra",
                M: "he marama",
                MM: "%d marama",
                y: "he tau",
                yy: "%d tau"
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: "%dº",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("mk", {
            months: "јануари_февруари_март_април_мај_јуни_јули_август_септември_октомври_ноември_декември".split("_"),
            monthsShort: "јан_фев_мар_апр_мај_јун_јул_авг_сеп_окт_ное_дек".split("_"),
            weekdays: "недела_понеделник_вторник_среда_четврток_петок_сабота".split("_"),
            weekdaysShort: "нед_пон_вто_сре_чет_пет_саб".split("_"),
            weekdaysMin: "нe_пo_вт_ср_че_пе_сa".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "D.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY H:mm",
                LLLL: "dddd, D MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[Денес во] LT",
                nextDay: "[Утре во] LT",
                nextWeek: "[Во] dddd [во] LT",
                lastDay: "[Вчера во] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                      case 3:
                      case 6:
                        return "[Изминатата] dddd [во] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[Изминатиот] dddd [во] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "после %s",
                past: "пред %s",
                s: "неколку секунди",
                ss: "%d секунди",
                m: "минута",
                mm: "%d минути",
                h: "час",
                hh: "%d часа",
                d: "ден",
                dd: "%d дена",
                M: "месец",
                MM: "%d месеци",
                y: "година",
                yy: "%d години"
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(ев|ен|ти|ви|ри|ми)/,
            ordinal: function(e) {
                var t = e % 10, s = e % 100;
                return 0 === e ? e + "-ев" : 0 === s ? e + "-ен" : s > 10 && s < 20 ? e + "-ти" : 1 === t ? e + "-ви" : 2 === t ? e + "-ри" : 7 === t || 8 === t ? e + "-ми" : e + "-ти";
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ml", {
            months: "ജനുവരി_ഫെബ്രുവരി_മാർച്ച്_ഏപ്രിൽ_മേയ്_ജൂൺ_ജൂലൈ_ഓഗസ്റ്റ്_സെപ്റ്റംബർ_ഒക്ടോബർ_നവംബർ_ഡിസംബർ".split("_"),
            monthsShort: "ജനു._ഫെബ്രു._മാർ._ഏപ്രി._മേയ്_ജൂൺ_ജൂലൈ._ഓഗ._സെപ്റ്റ._ഒക്ടോ._നവം._ഡിസം.".split("_"),
            monthsParseExact: !0,
            weekdays: "ഞായറാഴ്ച_തിങ്കളാഴ്ച_ചൊവ്വാഴ്ച_ബുധനാഴ്ച_വ്യാഴാഴ്ച_വെള്ളിയാഴ്ച_ശനിയാഴ്ച".split("_"),
            weekdaysShort: "ഞായർ_തിങ്കൾ_ചൊവ്വ_ബുധൻ_വ്യാഴം_വെള്ളി_ശനി".split("_"),
            weekdaysMin: "ഞാ_തി_ചൊ_ബു_വ്യാ_വെ_ശ".split("_"),
            longDateFormat: {
                LT: "A h:mm -നു",
                LTS: "A h:mm:ss -നു",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm -നു",
                LLLL: "dddd, D MMMM YYYY, A h:mm -നു"
            },
            calendar: {
                sameDay: "[ഇന്ന്] LT",
                nextDay: "[നാളെ] LT",
                nextWeek: "dddd, LT",
                lastDay: "[ഇന്നലെ] LT",
                lastWeek: "[കഴിഞ്ഞ] dddd, LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s കഴിഞ്ഞ്",
                past: "%s മുൻപ്",
                s: "അൽപ നിമിഷങ്ങൾ",
                ss: "%d സെക്കൻഡ്",
                m: "ഒരു മിനിറ്റ്",
                mm: "%d മിനിറ്റ്",
                h: "ഒരു മണിക്കൂർ",
                hh: "%d മണിക്കൂർ",
                d: "ഒരു ദിവസം",
                dd: "%d ദിവസം",
                M: "ഒരു മാസം",
                MM: "%d മാസം",
                y: "ഒരു വർഷം",
                yy: "%d വർഷം"
            },
            meridiemParse: /രാത്രി|രാവിലെ|ഉച്ച കഴിഞ്ഞ്|വൈകുന്നേരം|രാത്രി/i,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "രാത്രി" === t && e >= 4 || "ഉച്ച കഴിഞ്ഞ്" === t || "വൈകുന്നേരം" === t ? e + 12 : e;
            },
            meridiem: function(e, t, s) {
                return e < 4 ? "രാത്രി" : e < 12 ? "രാവിലെ" : e < 17 ? "ഉച്ച കഴിഞ്ഞ്" : e < 20 ? "വൈകുന്നേരം" : "രാത്രി";
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t, s, n) {
            switch (s) {
              case "s":
                return t ? "хэдхэн секунд" : "хэдхэн секундын";

              case "ss":
                return e + (t ? " секунд" : " секундын");

              case "m":
              case "mm":
                return e + (t ? " минут" : " минутын");

              case "h":
              case "hh":
                return e + (t ? " цаг" : " цагийн");

              case "d":
              case "dd":
                return e + (t ? " өдөр" : " өдрийн");

              case "M":
              case "MM":
                return e + (t ? " сар" : " сарын");

              case "y":
              case "yy":
                return e + (t ? " жил" : " жилийн");

              default:
                return e;
            }
        }
        var s = e.defineLocale("mn", {
            months: "Нэгдүгээр сар_Хоёрдугаар сар_Гуравдугаар сар_Дөрөвдүгээр сар_Тавдугаар сар_Зургадугаар сар_Долдугаар сар_Наймдугаар сар_Есдүгээр сар_Аравдугаар сар_Арван нэгдүгээр сар_Арван хоёрдугаар сар".split("_"),
            monthsShort: "1 сар_2 сар_3 сар_4 сар_5 сар_6 сар_7 сар_8 сар_9 сар_10 сар_11 сар_12 сар".split("_"),
            monthsParseExact: !0,
            weekdays: "Ням_Даваа_Мягмар_Лхагва_Пүрэв_Баасан_Бямба".split("_"),
            weekdaysShort: "Ням_Дав_Мяг_Лха_Пүр_Баа_Бям".split("_"),
            weekdaysMin: "Ня_Да_Мя_Лх_Пү_Ба_Бя".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "YYYY оны MMMMын D",
                LLL: "YYYY оны MMMMын D HH:mm",
                LLLL: "dddd, YYYY оны MMMMын D HH:mm"
            },
            meridiemParse: /ҮӨ|ҮХ/i,
            isPM: function(e) {
                return "ҮХ" === e;
            },
            meridiem: function(e, t, s) {
                return e < 12 ? "ҮӨ" : "ҮХ";
            },
            calendar: {
                sameDay: "[Өнөөдөр] LT",
                nextDay: "[Маргааш] LT",
                nextWeek: "[Ирэх] dddd LT",
                lastDay: "[Өчигдөр] LT",
                lastWeek: "[Өнгөрсөн] dddd LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s дараа",
                past: "%s өмнө",
                s: t,
                ss: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
            },
            dayOfMonthOrdinalParse: /\d{1,2} өдөр/,
            ordinal: function(e, t) {
                switch (t) {
                  case "d":
                  case "D":
                  case "DDD":
                    return e + " өдөр";

                  default:
                    return e;
                }
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t, s, n) {
            var a = "";
            if (t) switch (s) {
              case "s":
                a = "काही सेकंद";
                break;

              case "ss":
                a = "%d सेकंद";
                break;

              case "m":
                a = "एक मिनिट";
                break;

              case "mm":
                a = "%d मिनिटे";
                break;

              case "h":
                a = "एक तास";
                break;

              case "hh":
                a = "%d तास";
                break;

              case "d":
                a = "एक दिवस";
                break;

              case "dd":
                a = "%d दिवस";
                break;

              case "M":
                a = "एक महिना";
                break;

              case "MM":
                a = "%d महिने";
                break;

              case "y":
                a = "एक वर्ष";
                break;

              case "yy":
                a = "%d वर्षे";
            } else switch (s) {
              case "s":
                a = "काही सेकंदां";
                break;

              case "ss":
                a = "%d सेकंदां";
                break;

              case "m":
                a = "एका मिनिटा";
                break;

              case "mm":
                a = "%d मिनिटां";
                break;

              case "h":
                a = "एका तासा";
                break;

              case "hh":
                a = "%d तासां";
                break;

              case "d":
                a = "एका दिवसा";
                break;

              case "dd":
                a = "%d दिवसां";
                break;

              case "M":
                a = "एका महिन्या";
                break;

              case "MM":
                a = "%d महिन्यां";
                break;

              case "y":
                a = "एका वर्षा";
                break;

              case "yy":
                a = "%d वर्षां";
            }
            return a.replace(/%d/i, e);
        }
        var s = {
            "1": "१",
            "2": "२",
            "3": "३",
            "4": "४",
            "5": "५",
            "6": "६",
            "7": "७",
            "8": "८",
            "9": "९",
            "0": "०"
        }, n = {
            "१": "1",
            "२": "2",
            "३": "3",
            "४": "4",
            "५": "5",
            "६": "6",
            "७": "7",
            "८": "8",
            "९": "9",
            "०": "0"
        }, a = e.defineLocale("mr", {
            months: "जानेवारी_फेब्रुवारी_मार्च_एप्रिल_मे_जून_जुलै_ऑगस्ट_सप्टेंबर_ऑक्टोबर_नोव्हेंबर_डिसेंबर".split("_"),
            monthsShort: "जाने._फेब्रु._मार्च._एप्रि._मे._जून._जुलै._ऑग._सप्टें._ऑक्टो._नोव्हें._डिसें.".split("_"),
            monthsParseExact: !0,
            weekdays: "रविवार_सोमवार_मंगळवार_बुधवार_गुरूवार_शुक्रवार_शनिवार".split("_"),
            weekdaysShort: "रवि_सोम_मंगळ_बुध_गुरू_शुक्र_शनि".split("_"),
            weekdaysMin: "र_सो_मं_बु_गु_शु_श".split("_"),
            longDateFormat: {
                LT: "A h:mm वाजता",
                LTS: "A h:mm:ss वाजता",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm वाजता",
                LLLL: "dddd, D MMMM YYYY, A h:mm वाजता"
            },
            calendar: {
                sameDay: "[आज] LT",
                nextDay: "[उद्या] LT",
                nextWeek: "dddd, LT",
                lastDay: "[काल] LT",
                lastWeek: "[मागील] dddd, LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%sमध्ये",
                past: "%sपूर्वी",
                s: t,
                ss: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
            },
            preparse: function(e) {
                return e.replace(/[१२३४५६७८९०]/g, function(e) {
                    return n[e];
                });
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return s[e];
                });
            },
            meridiemParse: /रात्री|सकाळी|दुपारी|सायंकाळी/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "रात्री" === t ? e < 4 ? e : e + 12 : "सकाळी" === t ? e : "दुपारी" === t ? e >= 10 ? e : e + 12 : "सायंकाळी" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, s) {
                return e < 4 ? "रात्री" : e < 10 ? "सकाळी" : e < 17 ? "दुपारी" : e < 20 ? "सायंकाळी" : "रात्री";
            },
            week: {
                dow: 0,
                doy: 6
            }
        });
        return a;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ms", {
            months: "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),
            monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),
            weekdays: "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
            weekdaysShort: "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
            weekdaysMin: "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
            longDateFormat: {
                LT: "HH.mm",
                LTS: "HH.mm.ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY [pukul] HH.mm",
                LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
            },
            meridiemParse: /pagi|tengahari|petang|malam/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "pagi" === t ? e : "tengahari" === t ? e >= 11 ? e : e + 12 : "petang" === t || "malam" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, s) {
                return e < 11 ? "pagi" : e < 15 ? "tengahari" : e < 19 ? "petang" : "malam";
            },
            calendar: {
                sameDay: "[Hari ini pukul] LT",
                nextDay: "[Esok pukul] LT",
                nextWeek: "dddd [pukul] LT",
                lastDay: "[Kelmarin pukul] LT",
                lastWeek: "dddd [lepas pukul] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "dalam %s",
                past: "%s yang lepas",
                s: "beberapa saat",
                ss: "%d saat",
                m: "seminit",
                mm: "%d minit",
                h: "sejam",
                hh: "%d jam",
                d: "sehari",
                dd: "%d hari",
                M: "sebulan",
                MM: "%d bulan",
                y: "setahun",
                yy: "%d tahun"
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ms-my", {
            months: "Januari_Februari_Mac_April_Mei_Jun_Julai_Ogos_September_Oktober_November_Disember".split("_"),
            monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ogs_Sep_Okt_Nov_Dis".split("_"),
            weekdays: "Ahad_Isnin_Selasa_Rabu_Khamis_Jumaat_Sabtu".split("_"),
            weekdaysShort: "Ahd_Isn_Sel_Rab_Kha_Jum_Sab".split("_"),
            weekdaysMin: "Ah_Is_Sl_Rb_Km_Jm_Sb".split("_"),
            longDateFormat: {
                LT: "HH.mm",
                LTS: "HH.mm.ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY [pukul] HH.mm",
                LLLL: "dddd, D MMMM YYYY [pukul] HH.mm"
            },
            meridiemParse: /pagi|tengahari|petang|malam/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "pagi" === t ? e : "tengahari" === t ? e >= 11 ? e : e + 12 : "petang" === t || "malam" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, s) {
                return e < 11 ? "pagi" : e < 15 ? "tengahari" : e < 19 ? "petang" : "malam";
            },
            calendar: {
                sameDay: "[Hari ini pukul] LT",
                nextDay: "[Esok pukul] LT",
                nextWeek: "dddd [pukul] LT",
                lastDay: "[Kelmarin pukul] LT",
                lastWeek: "dddd [lepas pukul] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "dalam %s",
                past: "%s yang lepas",
                s: "beberapa saat",
                ss: "%d saat",
                m: "seminit",
                mm: "%d minit",
                h: "sejam",
                hh: "%d jam",
                d: "sehari",
                dd: "%d hari",
                M: "sebulan",
                MM: "%d bulan",
                y: "setahun",
                yy: "%d tahun"
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("mt", {
            months: "Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awwissu_Settembru_Ottubru_Novembru_Diċembru".split("_"),
            monthsShort: "Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Aww_Set_Ott_Nov_Diċ".split("_"),
            weekdays: "Il-Ħadd_It-Tnejn_It-Tlieta_L-Erbgħa_Il-Ħamis_Il-Ġimgħa_Is-Sibt".split("_"),
            weekdaysShort: "Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib".split("_"),
            weekdaysMin: "Ħa_Tn_Tl_Er_Ħa_Ġi_Si".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Illum fil-]LT",
                nextDay: "[Għada fil-]LT",
                nextWeek: "dddd [fil-]LT",
                lastDay: "[Il-bieraħ fil-]LT",
                lastWeek: "dddd [li għadda] [fil-]LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "f’ %s",
                past: "%s ilu",
                s: "ftit sekondi",
                ss: "%d sekondi",
                m: "minuta",
                mm: "%d minuti",
                h: "siegħa",
                hh: "%d siegħat",
                d: "ġurnata",
                dd: "%d ġranet",
                M: "xahar",
                MM: "%d xhur",
                y: "sena",
                yy: "%d sni"
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: "%dº",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "၁",
            "2": "၂",
            "3": "၃",
            "4": "၄",
            "5": "၅",
            "6": "၆",
            "7": "၇",
            "8": "၈",
            "9": "၉",
            "0": "၀"
        }, s = {
            "၁": "1",
            "၂": "2",
            "၃": "3",
            "၄": "4",
            "၅": "5",
            "၆": "6",
            "၇": "7",
            "၈": "8",
            "၉": "9",
            "၀": "0"
        }, n = e.defineLocale("my", {
            months: "ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_သြဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ".split("_"),
            monthsShort: "ဇန်_ဖေ_မတ်_ပြီ_မေ_ဇွန်_လိုင်_သြ_စက်_အောက်_နို_ဒီ".split("_"),
            weekdays: "တနင်္ဂနွေ_တနင်္လာ_အင်္ဂါ_ဗုဒ္ဓဟူး_ကြာသပတေး_သောကြာ_စနေ".split("_"),
            weekdaysShort: "နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),
            weekdaysMin: "နွေ_လာ_ဂါ_ဟူး_ကြာ_သော_နေ".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[ယနေ.] LT [မှာ]",
                nextDay: "[မနက်ဖြန်] LT [မှာ]",
                nextWeek: "dddd LT [မှာ]",
                lastDay: "[မနေ.က] LT [မှာ]",
                lastWeek: "[ပြီးခဲ့သော] dddd LT [မှာ]",
                sameElse: "L"
            },
            relativeTime: {
                future: "လာမည့် %s မှာ",
                past: "လွန်ခဲ့သော %s က",
                s: "စက္ကန်.အနည်းငယ်",
                ss: "%d စက္ကန့်",
                m: "တစ်မိနစ်",
                mm: "%d မိနစ်",
                h: "တစ်နာရီ",
                hh: "%d နာရီ",
                d: "တစ်ရက်",
                dd: "%d ရက်",
                M: "တစ်လ",
                MM: "%d လ",
                y: "တစ်နှစ်",
                yy: "%d နှစ်"
            },
            preparse: function(e) {
                return e.replace(/[၁၂၃၄၅၆၇၈၉၀]/g, function(e) {
                    return s[e];
                });
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                });
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("nb", {
            months: "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),
            monthsShort: "jan._feb._mars_april_mai_juni_juli_aug._sep._okt._nov._des.".split("_"),
            monthsParseExact: !0,
            weekdays: "søndag_mandag_tirsdag_onsdag_torsdag_fredag_lørdag".split("_"),
            weekdaysShort: "sø._ma._ti._on._to._fr._lø.".split("_"),
            weekdaysMin: "sø_ma_ti_on_to_fr_lø".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY [kl.] HH:mm",
                LLLL: "dddd D. MMMM YYYY [kl.] HH:mm"
            },
            calendar: {
                sameDay: "[i dag kl.] LT",
                nextDay: "[i morgen kl.] LT",
                nextWeek: "dddd [kl.] LT",
                lastDay: "[i går kl.] LT",
                lastWeek: "[forrige] dddd [kl.] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "om %s",
                past: "%s siden",
                s: "noen sekunder",
                ss: "%d sekunder",
                m: "ett minutt",
                mm: "%d minutter",
                h: "en time",
                hh: "%d timer",
                d: "en dag",
                dd: "%d dager",
                M: "en måned",
                MM: "%d måneder",
                y: "ett år",
                yy: "%d år"
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "१",
            "2": "२",
            "3": "३",
            "4": "४",
            "5": "५",
            "6": "६",
            "7": "७",
            "8": "८",
            "9": "९",
            "0": "०"
        }, s = {
            "१": "1",
            "२": "2",
            "३": "3",
            "४": "4",
            "५": "5",
            "६": "6",
            "७": "7",
            "८": "8",
            "९": "9",
            "०": "0"
        }, n = e.defineLocale("ne", {
            months: "जनवरी_फेब्रुवरी_मार्च_अप्रिल_मई_जुन_जुलाई_अगष्ट_सेप्टेम्बर_अक्टोबर_नोभेम्बर_डिसेम्बर".split("_"),
            monthsShort: "जन._फेब्रु._मार्च_अप्रि._मई_जुन_जुलाई._अग._सेप्ट._अक्टो._नोभे._डिसे.".split("_"),
            monthsParseExact: !0,
            weekdays: "आइतबार_सोमबार_मङ्गलबार_बुधबार_बिहिबार_शुक्रबार_शनिबार".split("_"),
            weekdaysShort: "आइत._सोम._मङ्गल._बुध._बिहि._शुक्र._शनि.".split("_"),
            weekdaysMin: "आ._सो._मं._बु._बि._शु._श.".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "Aको h:mm बजे",
                LTS: "Aको h:mm:ss बजे",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, Aको h:mm बजे",
                LLLL: "dddd, D MMMM YYYY, Aको h:mm बजे"
            },
            preparse: function(e) {
                return e.replace(/[१२३४५६७८९०]/g, function(e) {
                    return s[e];
                });
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                });
            },
            meridiemParse: /राति|बिहान|दिउँसो|साँझ/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "राति" === t ? e < 4 ? e : e + 12 : "बिहान" === t ? e : "दिउँसो" === t ? e >= 10 ? e : e + 12 : "साँझ" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, s) {
                return e < 3 ? "राति" : e < 12 ? "बिहान" : e < 16 ? "दिउँसो" : e < 20 ? "साँझ" : "राति";
            },
            calendar: {
                sameDay: "[आज] LT",
                nextDay: "[भोलि] LT",
                nextWeek: "[आउँदो] dddd[,] LT",
                lastDay: "[हिजो] LT",
                lastWeek: "[गएको] dddd[,] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%sमा",
                past: "%s अगाडि",
                s: "केही क्षण",
                ss: "%d सेकेण्ड",
                m: "एक मिनेट",
                mm: "%d मिनेट",
                h: "एक घण्टा",
                hh: "%d घण्टा",
                d: "एक दिन",
                dd: "%d दिन",
                M: "एक महिना",
                MM: "%d महिना",
                y: "एक बर्ष",
                yy: "%d बर्ष"
            },
            week: {
                dow: 0,
                doy: 6
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split("_"), s = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_"), n = [ /^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i ], a = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i, i = e.defineLocale("nl", {
            months: "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split("_"),
            monthsShort: function(e, n) {
                return e ? /-MMM-/.test(n) ? s[e.month()] : t[e.month()] : t;
            },
            monthsRegex: a,
            monthsShortRegex: a,
            monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
            monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
            monthsParse: n,
            longMonthsParse: n,
            shortMonthsParse: n,
            weekdays: "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),
            weekdaysShort: "zo._ma._di._wo._do._vr._za.".split("_"),
            weekdaysMin: "zo_ma_di_wo_do_vr_za".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD-MM-YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[vandaag om] LT",
                nextDay: "[morgen om] LT",
                nextWeek: "dddd [om] LT",
                lastDay: "[gisteren om] LT",
                lastWeek: "[afgelopen] dddd [om] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "over %s",
                past: "%s geleden",
                s: "een paar seconden",
                ss: "%d seconden",
                m: "één minuut",
                mm: "%d minuten",
                h: "één uur",
                hh: "%d uur",
                d: "één dag",
                dd: "%d dagen",
                M: "één maand",
                MM: "%d maanden",
                y: "één jaar",
                yy: "%d jaar"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
            ordinal: function(e) {
                return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de");
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return i;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = "jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.".split("_"), s = "jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec".split("_"), n = [ /^jan/i, /^feb/i, /^maart|mrt.?$/i, /^apr/i, /^mei$/i, /^jun[i.]?$/i, /^jul[i.]?$/i, /^aug/i, /^sep/i, /^okt/i, /^nov/i, /^dec/i ], a = /^(januari|februari|maart|april|mei|april|ju[nl]i|augustus|september|oktober|november|december|jan\.?|feb\.?|mrt\.?|apr\.?|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i, i = e.defineLocale("nl-be", {
            months: "januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december".split("_"),
            monthsShort: function(e, n) {
                return e ? /-MMM-/.test(n) ? s[e.month()] : t[e.month()] : t;
            },
            monthsRegex: a,
            monthsShortRegex: a,
            monthsStrictRegex: /^(januari|februari|maart|mei|ju[nl]i|april|augustus|september|oktober|november|december)/i,
            monthsShortStrictRegex: /^(jan\.?|feb\.?|mrt\.?|apr\.?|mei|ju[nl]\.?|aug\.?|sep\.?|okt\.?|nov\.?|dec\.?)/i,
            monthsParse: n,
            longMonthsParse: n,
            shortMonthsParse: n,
            weekdays: "zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag".split("_"),
            weekdaysShort: "zo._ma._di._wo._do._vr._za.".split("_"),
            weekdaysMin: "zo_ma_di_wo_do_vr_za".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[vandaag om] LT",
                nextDay: "[morgen om] LT",
                nextWeek: "dddd [om] LT",
                lastDay: "[gisteren om] LT",
                lastWeek: "[afgelopen] dddd [om] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "over %s",
                past: "%s geleden",
                s: "een paar seconden",
                ss: "%d seconden",
                m: "één minuut",
                mm: "%d minuten",
                h: "één uur",
                hh: "%d uur",
                d: "één dag",
                dd: "%d dagen",
                M: "één maand",
                MM: "%d maanden",
                y: "één jaar",
                yy: "%d jaar"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(ste|de)/,
            ordinal: function(e) {
                return e + (1 === e || 8 === e || e >= 20 ? "ste" : "de");
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return i;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("nn", {
            months: "januar_februar_mars_april_mai_juni_juli_august_september_oktober_november_desember".split("_"),
            monthsShort: "jan_feb_mar_apr_mai_jun_jul_aug_sep_okt_nov_des".split("_"),
            weekdays: "sundag_måndag_tysdag_onsdag_torsdag_fredag_laurdag".split("_"),
            weekdaysShort: "sun_mån_tys_ons_tor_fre_lau".split("_"),
            weekdaysMin: "su_må_ty_on_to_fr_lø".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY [kl.] H:mm",
                LLLL: "dddd D. MMMM YYYY [kl.] HH:mm"
            },
            calendar: {
                sameDay: "[I dag klokka] LT",
                nextDay: "[I morgon klokka] LT",
                nextWeek: "dddd [klokka] LT",
                lastDay: "[I går klokka] LT",
                lastWeek: "[Føregåande] dddd [klokka] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "om %s",
                past: "%s sidan",
                s: "nokre sekund",
                ss: "%d sekund",
                m: "eit minutt",
                mm: "%d minutt",
                h: "ein time",
                hh: "%d timar",
                d: "ein dag",
                dd: "%d dagar",
                M: "ein månad",
                MM: "%d månader",
                y: "eit år",
                yy: "%d år"
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "੧",
            "2": "੨",
            "3": "੩",
            "4": "੪",
            "5": "੫",
            "6": "੬",
            "7": "੭",
            "8": "੮",
            "9": "੯",
            "0": "੦"
        }, s = {
            "੧": "1",
            "੨": "2",
            "੩": "3",
            "੪": "4",
            "੫": "5",
            "੬": "6",
            "੭": "7",
            "੮": "8",
            "੯": "9",
            "੦": "0"
        }, n = e.defineLocale("pa-in", {
            months: "ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ".split("_"),
            monthsShort: "ਜਨਵਰੀ_ਫ਼ਰਵਰੀ_ਮਾਰਚ_ਅਪ੍ਰੈਲ_ਮਈ_ਜੂਨ_ਜੁਲਾਈ_ਅਗਸਤ_ਸਤੰਬਰ_ਅਕਤੂਬਰ_ਨਵੰਬਰ_ਦਸੰਬਰ".split("_"),
            weekdays: "ਐਤਵਾਰ_ਸੋਮਵਾਰ_ਮੰਗਲਵਾਰ_ਬੁਧਵਾਰ_ਵੀਰਵਾਰ_ਸ਼ੁੱਕਰਵਾਰ_ਸ਼ਨੀਚਰਵਾਰ".split("_"),
            weekdaysShort: "ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ".split("_"),
            weekdaysMin: "ਐਤ_ਸੋਮ_ਮੰਗਲ_ਬੁਧ_ਵੀਰ_ਸ਼ੁਕਰ_ਸ਼ਨੀ".split("_"),
            longDateFormat: {
                LT: "A h:mm ਵਜੇ",
                LTS: "A h:mm:ss ਵਜੇ",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm ਵਜੇ",
                LLLL: "dddd, D MMMM YYYY, A h:mm ਵਜੇ"
            },
            calendar: {
                sameDay: "[ਅਜ] LT",
                nextDay: "[ਕਲ] LT",
                nextWeek: "[ਅਗਲਾ] dddd, LT",
                lastDay: "[ਕਲ] LT",
                lastWeek: "[ਪਿਛਲੇ] dddd, LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s ਵਿੱਚ",
                past: "%s ਪਿਛਲੇ",
                s: "ਕੁਝ ਸਕਿੰਟ",
                ss: "%d ਸਕਿੰਟ",
                m: "ਇਕ ਮਿੰਟ",
                mm: "%d ਮਿੰਟ",
                h: "ਇੱਕ ਘੰਟਾ",
                hh: "%d ਘੰਟੇ",
                d: "ਇੱਕ ਦਿਨ",
                dd: "%d ਦਿਨ",
                M: "ਇੱਕ ਮਹੀਨਾ",
                MM: "%d ਮਹੀਨੇ",
                y: "ਇੱਕ ਸਾਲ",
                yy: "%d ਸਾਲ"
            },
            preparse: function(e) {
                return e.replace(/[੧੨੩੪੫੬੭੮੯੦]/g, function(e) {
                    return s[e];
                });
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                });
            },
            meridiemParse: /ਰਾਤ|ਸਵੇਰ|ਦੁਪਹਿਰ|ਸ਼ਾਮ/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "ਰਾਤ" === t ? e < 4 ? e : e + 12 : "ਸਵੇਰ" === t ? e : "ਦੁਪਹਿਰ" === t ? e >= 10 ? e : e + 12 : "ਸ਼ਾਮ" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, s) {
                return e < 4 ? "ਰਾਤ" : e < 10 ? "ਸਵੇਰ" : e < 17 ? "ਦੁਪਹਿਰ" : e < 20 ? "ਸ਼ਾਮ" : "ਰਾਤ";
            },
            week: {
                dow: 0,
                doy: 6
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e) {
            return e % 10 < 5 && e % 10 > 1 && ~~(e / 10) % 10 !== 1;
        }
        function s(e, s, n) {
            var a = e + " ";
            switch (n) {
              case "ss":
                return a + (t(e) ? "sekundy" : "sekund");

              case "m":
                return s ? "minuta" : "minutę";

              case "mm":
                return a + (t(e) ? "minuty" : "minut");

              case "h":
                return s ? "godzina" : "godzinę";

              case "hh":
                return a + (t(e) ? "godziny" : "godzin");

              case "MM":
                return a + (t(e) ? "miesiące" : "miesięcy");

              case "yy":
                return a + (t(e) ? "lata" : "lat");
            }
        }
        var n = "styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień".split("_"), a = "stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia".split("_"), i = e.defineLocale("pl", {
            months: function(e, t) {
                return e ? "" === t ? "(" + a[e.month()] + "|" + n[e.month()] + ")" : /D MMMM/.test(t) ? a[e.month()] : n[e.month()] : n;
            },
            monthsShort: "sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru".split("_"),
            weekdays: "niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota".split("_"),
            weekdaysShort: "ndz_pon_wt_śr_czw_pt_sob".split("_"),
            weekdaysMin: "Nd_Pn_Wt_Śr_Cz_Pt_So".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Dziś o] LT",
                nextDay: "[Jutro o] LT",
                nextWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[W niedzielę o] LT";

                      case 2:
                        return "[We wtorek o] LT";

                      case 3:
                        return "[W środę o] LT";

                      case 6:
                        return "[W sobotę o] LT";

                      default:
                        return "[W] dddd [o] LT";
                    }
                },
                lastDay: "[Wczoraj o] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[W zeszłą niedzielę o] LT";

                      case 3:
                        return "[W zeszłą środę o] LT";

                      case 6:
                        return "[W zeszłą sobotę o] LT";

                      default:
                        return "[W zeszły] dddd [o] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "za %s",
                past: "%s temu",
                s: "kilka sekund",
                ss: s,
                m: s,
                mm: s,
                h: s,
                hh: s,
                d: "1 dzień",
                dd: "%d dni",
                M: "miesiąc",
                MM: s,
                y: "rok",
                yy: s
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return i;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("pt", {
            months: "janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"),
            monthsShort: "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"),
            weekdays: "Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado".split("_"),
            weekdaysShort: "Dom_Seg_Ter_Qua_Qui_Sex_Sáb".split("_"),
            weekdaysMin: "Do_2ª_3ª_4ª_5ª_6ª_Sá".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D [de] MMMM [de] YYYY",
                LLL: "D [de] MMMM [de] YYYY HH:mm",
                LLLL: "dddd, D [de] MMMM [de] YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Hoje às] LT",
                nextDay: "[Amanhã às] LT",
                nextWeek: "dddd [às] LT",
                lastDay: "[Ontem às] LT",
                lastWeek: function() {
                    return 0 === this.day() || 6 === this.day() ? "[Último] dddd [às] LT" : "[Última] dddd [às] LT";
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "em %s",
                past: "há %s",
                s: "segundos",
                ss: "%d segundos",
                m: "um minuto",
                mm: "%d minutos",
                h: "uma hora",
                hh: "%d horas",
                d: "um dia",
                dd: "%d dias",
                M: "um mês",
                MM: "%d meses",
                y: "um ano",
                yy: "%d anos"
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: "%dº",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("pt-br", {
            months: "janeiro_fevereiro_março_abril_maio_junho_julho_agosto_setembro_outubro_novembro_dezembro".split("_"),
            monthsShort: "jan_fev_mar_abr_mai_jun_jul_ago_set_out_nov_dez".split("_"),
            weekdays: "Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado".split("_"),
            weekdaysShort: "Dom_Seg_Ter_Qua_Qui_Sex_Sáb".split("_"),
            weekdaysMin: "Do_2ª_3ª_4ª_5ª_6ª_Sá".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D [de] MMMM [de] YYYY",
                LLL: "D [de] MMMM [de] YYYY [às] HH:mm",
                LLLL: "dddd, D [de] MMMM [de] YYYY [às] HH:mm"
            },
            calendar: {
                sameDay: "[Hoje às] LT",
                nextDay: "[Amanhã às] LT",
                nextWeek: "dddd [às] LT",
                lastDay: "[Ontem às] LT",
                lastWeek: function() {
                    return 0 === this.day() || 6 === this.day() ? "[Último] dddd [às] LT" : "[Última] dddd [às] LT";
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "em %s",
                past: "há %s",
                s: "poucos segundos",
                ss: "%d segundos",
                m: "um minuto",
                mm: "%d minutos",
                h: "uma hora",
                hh: "%d horas",
                d: "um dia",
                dd: "%d dias",
                M: "um mês",
                MM: "%d meses",
                y: "um ano",
                yy: "%d anos"
            },
            dayOfMonthOrdinalParse: /\d{1,2}º/,
            ordinal: "%dº"
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t, s) {
            var n = {
                ss: "secunde",
                mm: "minute",
                hh: "ore",
                dd: "zile",
                MM: "luni",
                yy: "ani"
            }, a = " ";
            return (e % 100 >= 20 || e >= 100 && e % 100 === 0) && (a = " de "), e + a + n[s];
        }
        var s = e.defineLocale("ro", {
            months: "ianuarie_februarie_martie_aprilie_mai_iunie_iulie_august_septembrie_octombrie_noiembrie_decembrie".split("_"),
            monthsShort: "ian._febr._mart._apr._mai_iun._iul._aug._sept._oct._nov._dec.".split("_"),
            monthsParseExact: !0,
            weekdays: "duminică_luni_marți_miercuri_joi_vineri_sâmbătă".split("_"),
            weekdaysShort: "Dum_Lun_Mar_Mie_Joi_Vin_Sâm".split("_"),
            weekdaysMin: "Du_Lu_Ma_Mi_Jo_Vi_Sâ".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY H:mm",
                LLLL: "dddd, D MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[azi la] LT",
                nextDay: "[mâine la] LT",
                nextWeek: "dddd [la] LT",
                lastDay: "[ieri la] LT",
                lastWeek: "[fosta] dddd [la] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "peste %s",
                past: "%s în urmă",
                s: "câteva secunde",
                ss: t,
                m: "un minut",
                mm: t,
                h: "o oră",
                hh: t,
                d: "o zi",
                dd: t,
                M: "o lună",
                MM: t,
                y: "un an",
                yy: t
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t) {
            var s = e.split("_");
            return t % 10 === 1 && t % 100 !== 11 ? s[0] : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20) ? s[1] : s[2];
        }
        function s(e, s, n) {
            var a = {
                ss: s ? "секунда_секунды_секунд" : "секунду_секунды_секунд",
                mm: s ? "минута_минуты_минут" : "минуту_минуты_минут",
                hh: "час_часа_часов",
                dd: "день_дня_дней",
                MM: "месяц_месяца_месяцев",
                yy: "год_года_лет"
            };
            return "m" === n ? s ? "минута" : "минуту" : e + " " + t(a[n], +e);
        }
        var n = [ /^янв/i, /^фев/i, /^мар/i, /^апр/i, /^ма[йя]/i, /^июн/i, /^июл/i, /^авг/i, /^сен/i, /^окт/i, /^ноя/i, /^дек/i ], a = e.defineLocale("ru", {
            months: {
                format: "января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря".split("_"),
                standalone: "январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь".split("_")
            },
            monthsShort: {
                format: "янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.".split("_"),
                standalone: "янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.".split("_")
            },
            weekdays: {
                standalone: "воскресенье_понедельник_вторник_среда_четверг_пятница_суббота".split("_"),
                format: "воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу".split("_"),
                isFormat: /\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?\] ?dddd/
            },
            weekdaysShort: "вс_пн_вт_ср_чт_пт_сб".split("_"),
            weekdaysMin: "вс_пн_вт_ср_чт_пт_сб".split("_"),
            monthsParse: n,
            longMonthsParse: n,
            shortMonthsParse: n,
            monthsRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
            monthsShortRegex: /^(январ[ья]|янв\.?|феврал[ья]|февр?\.?|марта?|мар\.?|апрел[ья]|апр\.?|ма[йя]|июн[ья]|июн\.?|июл[ья]|июл\.?|августа?|авг\.?|сентябр[ья]|сент?\.?|октябр[ья]|окт\.?|ноябр[ья]|нояб?\.?|декабр[ья]|дек\.?)/i,
            monthsStrictRegex: /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,
            monthsShortStrictRegex: /^(янв\.|февр?\.|мар[т.]|апр\.|ма[яй]|июн[ья.]|июл[ья.]|авг\.|сент?\.|окт\.|нояб?\.|дек\.)/i,
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY г.",
                LLL: "D MMMM YYYY г., H:mm",
                LLLL: "dddd, D MMMM YYYY г., H:mm"
            },
            calendar: {
                sameDay: "[Сегодня, в] LT",
                nextDay: "[Завтра, в] LT",
                lastDay: "[Вчера, в] LT",
                nextWeek: function(e) {
                    if (e.week() === this.week()) return 2 === this.day() ? "[Во] dddd, [в] LT" : "[В] dddd, [в] LT";
                    switch (this.day()) {
                      case 0:
                        return "[В следующее] dddd, [в] LT";

                      case 1:
                      case 2:
                      case 4:
                        return "[В следующий] dddd, [в] LT";

                      case 3:
                      case 5:
                      case 6:
                        return "[В следующую] dddd, [в] LT";
                    }
                },
                lastWeek: function(e) {
                    if (e.week() === this.week()) return 2 === this.day() ? "[Во] dddd, [в] LT" : "[В] dddd, [в] LT";
                    switch (this.day()) {
                      case 0:
                        return "[В прошлое] dddd, [в] LT";

                      case 1:
                      case 2:
                      case 4:
                        return "[В прошлый] dddd, [в] LT";

                      case 3:
                      case 5:
                      case 6:
                        return "[В прошлую] dddd, [в] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "через %s",
                past: "%s назад",
                s: "несколько секунд",
                ss: s,
                m: s,
                mm: s,
                h: "час",
                hh: s,
                d: "день",
                dd: s,
                M: "месяц",
                MM: s,
                y: "год",
                yy: s
            },
            meridiemParse: /ночи|утра|дня|вечера/i,
            isPM: function(e) {
                return /^(дня|вечера)$/.test(e);
            },
            meridiem: function(e, t, s) {
                return e < 4 ? "ночи" : e < 12 ? "утра" : e < 17 ? "дня" : "вечера";
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(й|го|я)/,
            ordinal: function(e, t) {
                switch (t) {
                  case "M":
                  case "d":
                  case "DDD":
                    return e + "-й";

                  case "D":
                    return e + "-го";

                  case "w":
                  case "W":
                    return e + "-я";

                  default:
                    return e;
                }
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return a;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = [ "جنوري", "فيبروري", "مارچ", "اپريل", "مئي", "جون", "جولاءِ", "آگسٽ", "سيپٽمبر", "آڪٽوبر", "نومبر", "ڊسمبر" ], s = [ "آچر", "سومر", "اڱارو", "اربع", "خميس", "جمع", "ڇنڇر" ], n = e.defineLocale("sd", {
            months: t,
            monthsShort: t,
            weekdays: s,
            weekdaysShort: s,
            weekdaysMin: s,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd، D MMMM YYYY HH:mm"
            },
            meridiemParse: /صبح|شام/,
            isPM: function(e) {
                return "شام" === e;
            },
            meridiem: function(e, t, s) {
                return e < 12 ? "صبح" : "شام";
            },
            calendar: {
                sameDay: "[اڄ] LT",
                nextDay: "[سڀاڻي] LT",
                nextWeek: "dddd [اڳين هفتي تي] LT",
                lastDay: "[ڪالهه] LT",
                lastWeek: "[گزريل هفتي] dddd [تي] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s پوء",
                past: "%s اڳ",
                s: "چند سيڪنڊ",
                ss: "%d سيڪنڊ",
                m: "هڪ منٽ",
                mm: "%d منٽ",
                h: "هڪ ڪلاڪ",
                hh: "%d ڪلاڪ",
                d: "هڪ ڏينهن",
                dd: "%d ڏينهن",
                M: "هڪ مهينو",
                MM: "%d مهينا",
                y: "هڪ سال",
                yy: "%d سال"
            },
            preparse: function(e) {
                return e.replace(/،/g, ",");
            },
            postformat: function(e) {
                return e.replace(/,/g, "،");
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("se", {
            months: "ođđajagemánnu_guovvamánnu_njukčamánnu_cuoŋománnu_miessemánnu_geassemánnu_suoidnemánnu_borgemánnu_čakčamánnu_golggotmánnu_skábmamánnu_juovlamánnu".split("_"),
            monthsShort: "ođđj_guov_njuk_cuo_mies_geas_suoi_borg_čakč_golg_skáb_juov".split("_"),
            weekdays: "sotnabeaivi_vuossárga_maŋŋebárga_gaskavahkku_duorastat_bearjadat_lávvardat".split("_"),
            weekdaysShort: "sotn_vuos_maŋ_gask_duor_bear_láv".split("_"),
            weekdaysMin: "s_v_m_g_d_b_L".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "MMMM D. [b.] YYYY",
                LLL: "MMMM D. [b.] YYYY [ti.] HH:mm",
                LLLL: "dddd, MMMM D. [b.] YYYY [ti.] HH:mm"
            },
            calendar: {
                sameDay: "[otne ti] LT",
                nextDay: "[ihttin ti] LT",
                nextWeek: "dddd [ti] LT",
                lastDay: "[ikte ti] LT",
                lastWeek: "[ovddit] dddd [ti] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s geažes",
                past: "maŋit %s",
                s: "moadde sekunddat",
                ss: "%d sekunddat",
                m: "okta minuhta",
                mm: "%d minuhtat",
                h: "okta diimmu",
                hh: "%d diimmut",
                d: "okta beaivi",
                dd: "%d beaivvit",
                M: "okta mánnu",
                MM: "%d mánut",
                y: "okta jahki",
                yy: "%d jagit"
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("si", {
            months: "ජනවාරි_පෙබරවාරි_මාර්තු_අප්‍රේල්_මැයි_ජූනි_ජූලි_අගෝස්තු_සැප්තැම්බර්_ඔක්තෝබර්_නොවැම්බර්_දෙසැම්බර්".split("_"),
            monthsShort: "ජන_පෙබ_මාර්_අප්_මැයි_ජූනි_ජූලි_අගෝ_සැප්_ඔක්_නොවැ_දෙසැ".split("_"),
            weekdays: "ඉරිදා_සඳුදා_අඟහරුවාදා_බදාදා_බ්‍රහස්පතින්දා_සිකුරාදා_සෙනසුරාදා".split("_"),
            weekdaysShort: "ඉරි_සඳු_අඟ_බදා_බ්‍රහ_සිකු_සෙන".split("_"),
            weekdaysMin: "ඉ_ස_අ_බ_බ්‍ර_සි_සෙ".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "a h:mm",
                LTS: "a h:mm:ss",
                L: "YYYY/MM/DD",
                LL: "YYYY MMMM D",
                LLL: "YYYY MMMM D, a h:mm",
                LLLL: "YYYY MMMM D [වැනි] dddd, a h:mm:ss"
            },
            calendar: {
                sameDay: "[අද] LT[ට]",
                nextDay: "[හෙට] LT[ට]",
                nextWeek: "dddd LT[ට]",
                lastDay: "[ඊයේ] LT[ට]",
                lastWeek: "[පසුගිය] dddd LT[ට]",
                sameElse: "L"
            },
            relativeTime: {
                future: "%sකින්",
                past: "%sකට පෙර",
                s: "තත්පර කිහිපය",
                ss: "තත්පර %d",
                m: "මිනිත්තුව",
                mm: "මිනිත්තු %d",
                h: "පැය",
                hh: "පැය %d",
                d: "දිනය",
                dd: "දින %d",
                M: "මාසය",
                MM: "මාස %d",
                y: "වසර",
                yy: "වසර %d"
            },
            dayOfMonthOrdinalParse: /\d{1,2} වැනි/,
            ordinal: function(e) {
                return e + " වැනි";
            },
            meridiemParse: /පෙර වරු|පස් වරු|පෙ.ව|ප.ව./,
            isPM: function(e) {
                return "ප.ව." === e || "පස් වරු" === e;
            },
            meridiem: function(e, t, s) {
                return e > 11 ? s ? "ප.ව." : "පස් වරු" : s ? "පෙ.ව." : "පෙර වරු";
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e) {
            return e > 1 && e < 5;
        }
        function s(e, s, n, a) {
            var i = e + " ";
            switch (n) {
              case "s":
                return s || a ? "pár sekúnd" : "pár sekundami";

              case "ss":
                return s || a ? i + (t(e) ? "sekundy" : "sekúnd") : i + "sekundami";

              case "m":
                return s ? "minúta" : a ? "minútu" : "minútou";

              case "mm":
                return s || a ? i + (t(e) ? "minúty" : "minút") : i + "minútami";

              case "h":
                return s ? "hodina" : a ? "hodinu" : "hodinou";

              case "hh":
                return s || a ? i + (t(e) ? "hodiny" : "hodín") : i + "hodinami";

              case "d":
                return s || a ? "deň" : "dňom";

              case "dd":
                return s || a ? i + (t(e) ? "dni" : "dní") : i + "dňami";

              case "M":
                return s || a ? "mesiac" : "mesiacom";

              case "MM":
                return s || a ? i + (t(e) ? "mesiace" : "mesiacov") : i + "mesiacmi";

              case "y":
                return s || a ? "rok" : "rokom";

              case "yy":
                return s || a ? i + (t(e) ? "roky" : "rokov") : i + "rokmi";
            }
        }
        var n = "január_február_marec_apríl_máj_jún_júl_august_september_október_november_december".split("_"), a = "jan_feb_mar_apr_máj_jún_júl_aug_sep_okt_nov_dec".split("_"), i = e.defineLocale("sk", {
            months: n,
            monthsShort: a,
            weekdays: "nedeľa_pondelok_utorok_streda_štvrtok_piatok_sobota".split("_"),
            weekdaysShort: "ne_po_ut_st_št_pi_so".split("_"),
            weekdaysMin: "ne_po_ut_st_št_pi_so".split("_"),
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd D. MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[dnes o] LT",
                nextDay: "[zajtra o] LT",
                nextWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[v nedeľu o] LT";

                      case 1:
                      case 2:
                        return "[v] dddd [o] LT";

                      case 3:
                        return "[v stredu o] LT";

                      case 4:
                        return "[vo štvrtok o] LT";

                      case 5:
                        return "[v piatok o] LT";

                      case 6:
                        return "[v sobotu o] LT";
                    }
                },
                lastDay: "[včera o] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[minulú nedeľu o] LT";

                      case 1:
                      case 2:
                        return "[minulý] dddd [o] LT";

                      case 3:
                        return "[minulú stredu o] LT";

                      case 4:
                      case 5:
                        return "[minulý] dddd [o] LT";

                      case 6:
                        return "[minulú sobotu o] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "za %s",
                past: "pred %s",
                s: s,
                ss: s,
                m: s,
                mm: s,
                h: s,
                hh: s,
                d: s,
                dd: s,
                M: s,
                MM: s,
                y: s,
                yy: s
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return i;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t, s, n) {
            var a = e + " ";
            switch (s) {
              case "s":
                return t || n ? "nekaj sekund" : "nekaj sekundami";

              case "ss":
                return a += 1 === e ? t ? "sekundo" : "sekundi" : 2 === e ? t || n ? "sekundi" : "sekundah" : e < 5 ? t || n ? "sekunde" : "sekundah" : "sekund";

              case "m":
                return t ? "ena minuta" : "eno minuto";

              case "mm":
                return a += 1 === e ? t ? "minuta" : "minuto" : 2 === e ? t || n ? "minuti" : "minutama" : e < 5 ? t || n ? "minute" : "minutami" : t || n ? "minut" : "minutami";

              case "h":
                return t ? "ena ura" : "eno uro";

              case "hh":
                return a += 1 === e ? t ? "ura" : "uro" : 2 === e ? t || n ? "uri" : "urama" : e < 5 ? t || n ? "ure" : "urami" : t || n ? "ur" : "urami";

              case "d":
                return t || n ? "en dan" : "enim dnem";

              case "dd":
                return a += 1 === e ? t || n ? "dan" : "dnem" : 2 === e ? t || n ? "dni" : "dnevoma" : t || n ? "dni" : "dnevi";

              case "M":
                return t || n ? "en mesec" : "enim mesecem";

              case "MM":
                return a += 1 === e ? t || n ? "mesec" : "mesecem" : 2 === e ? t || n ? "meseca" : "mesecema" : e < 5 ? t || n ? "mesece" : "meseci" : t || n ? "mesecev" : "meseci";

              case "y":
                return t || n ? "eno leto" : "enim letom";

              case "yy":
                return a += 1 === e ? t || n ? "leto" : "letom" : 2 === e ? t || n ? "leti" : "letoma" : e < 5 ? t || n ? "leta" : "leti" : t || n ? "let" : "leti";
            }
        }
        var s = e.defineLocale("sl", {
            months: "januar_februar_marec_april_maj_junij_julij_avgust_september_oktober_november_december".split("_"),
            monthsShort: "jan._feb._mar._apr._maj._jun._jul._avg._sep._okt._nov._dec.".split("_"),
            monthsParseExact: !0,
            weekdays: "nedelja_ponedeljek_torek_sreda_četrtek_petek_sobota".split("_"),
            weekdaysShort: "ned._pon._tor._sre._čet._pet._sob.".split("_"),
            weekdaysMin: "ne_po_to_sr_če_pe_so".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd, D. MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[danes ob] LT",
                nextDay: "[jutri ob] LT",
                nextWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[v] [nedeljo] [ob] LT";

                      case 3:
                        return "[v] [sredo] [ob] LT";

                      case 6:
                        return "[v] [soboto] [ob] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[v] dddd [ob] LT";
                    }
                },
                lastDay: "[včeraj ob] LT",
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[prejšnjo] [nedeljo] [ob] LT";

                      case 3:
                        return "[prejšnjo] [sredo] [ob] LT";

                      case 6:
                        return "[prejšnjo] [soboto] [ob] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[prejšnji] dddd [ob] LT";
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "čez %s",
                past: "pred %s",
                s: t,
                ss: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("sq", {
            months: "Janar_Shkurt_Mars_Prill_Maj_Qershor_Korrik_Gusht_Shtator_Tetor_Nëntor_Dhjetor".split("_"),
            monthsShort: "Jan_Shk_Mar_Pri_Maj_Qer_Kor_Gus_Sht_Tet_Nën_Dhj".split("_"),
            weekdays: "E Diel_E Hënë_E Martë_E Mërkurë_E Enjte_E Premte_E Shtunë".split("_"),
            weekdaysShort: "Die_Hën_Mar_Mër_Enj_Pre_Sht".split("_"),
            weekdaysMin: "D_H_Ma_Më_E_P_Sh".split("_"),
            weekdaysParseExact: !0,
            meridiemParse: /PD|MD/,
            isPM: function(e) {
                return "M" === e.charAt(0);
            },
            meridiem: function(e, t, s) {
                return e < 12 ? "PD" : "MD";
            },
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Sot në] LT",
                nextDay: "[Nesër në] LT",
                nextWeek: "dddd [në] LT",
                lastDay: "[Dje në] LT",
                lastWeek: "dddd [e kaluar në] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "në %s",
                past: "%s më parë",
                s: "disa sekonda",
                ss: "%d sekonda",
                m: "një minutë",
                mm: "%d minuta",
                h: "një orë",
                hh: "%d orë",
                d: "një ditë",
                dd: "%d ditë",
                M: "një muaj",
                MM: "%d muaj",
                y: "një vit",
                yy: "%d vite"
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            words: {
                ss: [ "sekunda", "sekunde", "sekundi" ],
                m: [ "jedan minut", "jedne minute" ],
                mm: [ "minut", "minute", "minuta" ],
                h: [ "jedan sat", "jednog sata" ],
                hh: [ "sat", "sata", "sati" ],
                dd: [ "dan", "dana", "dana" ],
                MM: [ "mesec", "meseca", "meseci" ],
                yy: [ "godina", "godine", "godina" ]
            },
            correctGrammaticalCase: function(e, t) {
                return 1 === e ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2];
            },
            translate: function(e, s, n) {
                var a = t.words[n];
                return 1 === n.length ? s ? a[0] : a[1] : e + " " + t.correctGrammaticalCase(e, a);
            }
        }, s = e.defineLocale("sr", {
            months: "januar_februar_mart_april_maj_jun_jul_avgust_septembar_oktobar_novembar_decembar".split("_"),
            monthsShort: "jan._feb._mar._apr._maj_jun_jul_avg._sep._okt._nov._dec.".split("_"),
            monthsParseExact: !0,
            weekdays: "nedelja_ponedeljak_utorak_sreda_četvrtak_petak_subota".split("_"),
            weekdaysShort: "ned._pon._uto._sre._čet._pet._sub.".split("_"),
            weekdaysMin: "ne_po_ut_sr_če_pe_su".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd, D. MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[danas u] LT",
                nextDay: "[sutra u] LT",
                nextWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[u] [nedelju] [u] LT";

                      case 3:
                        return "[u] [sredu] [u] LT";

                      case 6:
                        return "[u] [subotu] [u] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[u] dddd [u] LT";
                    }
                },
                lastDay: "[juče u] LT",
                lastWeek: function() {
                    var e = [ "[prošle] [nedelje] [u] LT", "[prošlog] [ponedeljka] [u] LT", "[prošlog] [utorka] [u] LT", "[prošle] [srede] [u] LT", "[prošlog] [četvrtka] [u] LT", "[prošlog] [petka] [u] LT", "[prošle] [subote] [u] LT" ];
                    return e[this.day()];
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "za %s",
                past: "pre %s",
                s: "nekoliko sekundi",
                ss: t.translate,
                m: t.translate,
                mm: t.translate,
                h: t.translate,
                hh: t.translate,
                d: "dan",
                dd: t.translate,
                M: "mesec",
                MM: t.translate,
                y: "godinu",
                yy: t.translate
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            words: {
                ss: [ "секунда", "секунде", "секунди" ],
                m: [ "један минут", "једне минуте" ],
                mm: [ "минут", "минуте", "минута" ],
                h: [ "један сат", "једног сата" ],
                hh: [ "сат", "сата", "сати" ],
                dd: [ "дан", "дана", "дана" ],
                MM: [ "месец", "месеца", "месеци" ],
                yy: [ "година", "године", "година" ]
            },
            correctGrammaticalCase: function(e, t) {
                return 1 === e ? t[0] : e >= 2 && e <= 4 ? t[1] : t[2];
            },
            translate: function(e, s, n) {
                var a = t.words[n];
                return 1 === n.length ? s ? a[0] : a[1] : e + " " + t.correctGrammaticalCase(e, a);
            }
        }, s = e.defineLocale("sr-cyrl", {
            months: "јануар_фебруар_март_април_мај_јун_јул_август_септембар_октобар_новембар_децембар".split("_"),
            monthsShort: "јан._феб._мар._апр._мај_јун_јул_авг._сеп._окт._нов._дец.".split("_"),
            monthsParseExact: !0,
            weekdays: "недеља_понедељак_уторак_среда_четвртак_петак_субота".split("_"),
            weekdaysShort: "нед._пон._уто._сре._чет._пет._суб.".split("_"),
            weekdaysMin: "не_по_ут_ср_че_пе_су".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM YYYY",
                LLL: "D. MMMM YYYY H:mm",
                LLLL: "dddd, D. MMMM YYYY H:mm"
            },
            calendar: {
                sameDay: "[данас у] LT",
                nextDay: "[сутра у] LT",
                nextWeek: function() {
                    switch (this.day()) {
                      case 0:
                        return "[у] [недељу] [у] LT";

                      case 3:
                        return "[у] [среду] [у] LT";

                      case 6:
                        return "[у] [суботу] [у] LT";

                      case 1:
                      case 2:
                      case 4:
                      case 5:
                        return "[у] dddd [у] LT";
                    }
                },
                lastDay: "[јуче у] LT",
                lastWeek: function() {
                    var e = [ "[прошле] [недеље] [у] LT", "[прошлог] [понедељка] [у] LT", "[прошлог] [уторка] [у] LT", "[прошле] [среде] [у] LT", "[прошлог] [четвртка] [у] LT", "[прошлог] [петка] [у] LT", "[прошле] [суботе] [у] LT" ];
                    return e[this.day()];
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "за %s",
                past: "пре %s",
                s: "неколико секунди",
                ss: t.translate,
                m: t.translate,
                mm: t.translate,
                h: t.translate,
                hh: t.translate,
                d: "дан",
                dd: t.translate,
                M: "месец",
                MM: t.translate,
                y: "годину",
                yy: t.translate
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 7
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ss", {
            months: "Bhimbidvwane_Indlovana_Indlov'lenkhulu_Mabasa_Inkhwekhweti_Inhlaba_Kholwane_Ingci_Inyoni_Imphala_Lweti_Ingongoni".split("_"),
            monthsShort: "Bhi_Ina_Inu_Mab_Ink_Inh_Kho_Igc_Iny_Imp_Lwe_Igo".split("_"),
            weekdays: "Lisontfo_Umsombuluko_Lesibili_Lesitsatfu_Lesine_Lesihlanu_Umgcibelo".split("_"),
            weekdaysShort: "Lis_Umb_Lsb_Les_Lsi_Lsh_Umg".split("_"),
            weekdaysMin: "Li_Us_Lb_Lt_Ls_Lh_Ug".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY h:mm A",
                LLLL: "dddd, D MMMM YYYY h:mm A"
            },
            calendar: {
                sameDay: "[Namuhla nga] LT",
                nextDay: "[Kusasa nga] LT",
                nextWeek: "dddd [nga] LT",
                lastDay: "[Itolo nga] LT",
                lastWeek: "dddd [leliphelile] [nga] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "nga %s",
                past: "wenteka nga %s",
                s: "emizuzwana lomcane",
                ss: "%d mzuzwana",
                m: "umzuzu",
                mm: "%d emizuzu",
                h: "lihora",
                hh: "%d emahora",
                d: "lilanga",
                dd: "%d emalanga",
                M: "inyanga",
                MM: "%d tinyanga",
                y: "umnyaka",
                yy: "%d iminyaka"
            },
            meridiemParse: /ekuseni|emini|entsambama|ebusuku/,
            meridiem: function(e, t, s) {
                return e < 11 ? "ekuseni" : e < 15 ? "emini" : e < 19 ? "entsambama" : "ebusuku";
            },
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "ekuseni" === t ? e : "emini" === t ? e >= 11 ? e : e + 12 : "entsambama" === t || "ebusuku" === t ? 0 === e ? 0 : e + 12 : void 0;
            },
            dayOfMonthOrdinalParse: /\d{1,2}/,
            ordinal: "%d",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("sv", {
            months: "januari_februari_mars_april_maj_juni_juli_augusti_september_oktober_november_december".split("_"),
            monthsShort: "jan_feb_mar_apr_maj_jun_jul_aug_sep_okt_nov_dec".split("_"),
            weekdays: "söndag_måndag_tisdag_onsdag_torsdag_fredag_lördag".split("_"),
            weekdaysShort: "sön_mån_tis_ons_tor_fre_lör".split("_"),
            weekdaysMin: "sö_må_ti_on_to_fr_lö".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY [kl.] HH:mm",
                LLLL: "dddd D MMMM YYYY [kl.] HH:mm",
                lll: "D MMM YYYY HH:mm",
                llll: "ddd D MMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Idag] LT",
                nextDay: "[Imorgon] LT",
                lastDay: "[Igår] LT",
                nextWeek: "[På] dddd LT",
                lastWeek: "[I] dddd[s] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "om %s",
                past: "för %s sedan",
                s: "några sekunder",
                ss: "%d sekunder",
                m: "en minut",
                mm: "%d minuter",
                h: "en timme",
                hh: "%d timmar",
                d: "en dag",
                dd: "%d dagar",
                M: "en månad",
                MM: "%d månader",
                y: "ett år",
                yy: "%d år"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(e|a)/,
            ordinal: function(e) {
                var t = e % 10, s = 1 === ~~(e % 100 / 10) ? "e" : 1 === t ? "a" : 2 === t ? "a" : "e";
                return e + s;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("sw", {
            months: "Januari_Februari_Machi_Aprili_Mei_Juni_Julai_Agosti_Septemba_Oktoba_Novemba_Desemba".split("_"),
            monthsShort: "Jan_Feb_Mac_Apr_Mei_Jun_Jul_Ago_Sep_Okt_Nov_Des".split("_"),
            weekdays: "Jumapili_Jumatatu_Jumanne_Jumatano_Alhamisi_Ijumaa_Jumamosi".split("_"),
            weekdaysShort: "Jpl_Jtat_Jnne_Jtan_Alh_Ijm_Jmos".split("_"),
            weekdaysMin: "J2_J3_J4_J5_Al_Ij_J1".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[leo saa] LT",
                nextDay: "[kesho saa] LT",
                nextWeek: "[wiki ijayo] dddd [saat] LT",
                lastDay: "[jana] LT",
                lastWeek: "[wiki iliyopita] dddd [saat] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s baadaye",
                past: "tokea %s",
                s: "hivi punde",
                ss: "sekunde %d",
                m: "dakika moja",
                mm: "dakika %d",
                h: "saa limoja",
                hh: "masaa %d",
                d: "siku moja",
                dd: "masiku %d",
                M: "mwezi mmoja",
                MM: "miezi %d",
                y: "mwaka mmoja",
                yy: "miaka %d"
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            "1": "௧",
            "2": "௨",
            "3": "௩",
            "4": "௪",
            "5": "௫",
            "6": "௬",
            "7": "௭",
            "8": "௮",
            "9": "௯",
            "0": "௦"
        }, s = {
            "௧": "1",
            "௨": "2",
            "௩": "3",
            "௪": "4",
            "௫": "5",
            "௬": "6",
            "௭": "7",
            "௮": "8",
            "௯": "9",
            "௦": "0"
        }, n = e.defineLocale("ta", {
            months: "ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split("_"),
            monthsShort: "ஜனவரி_பிப்ரவரி_மார்ச்_ஏப்ரல்_மே_ஜூன்_ஜூலை_ஆகஸ்ட்_செப்டெம்பர்_அக்டோபர்_நவம்பர்_டிசம்பர்".split("_"),
            weekdays: "ஞாயிற்றுக்கிழமை_திங்கட்கிழமை_செவ்வாய்கிழமை_புதன்கிழமை_வியாழக்கிழமை_வெள்ளிக்கிழமை_சனிக்கிழமை".split("_"),
            weekdaysShort: "ஞாயிறு_திங்கள்_செவ்வாய்_புதன்_வியாழன்_வெள்ளி_சனி".split("_"),
            weekdaysMin: "ஞா_தி_செ_பு_வி_வெ_ச".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, HH:mm",
                LLLL: "dddd, D MMMM YYYY, HH:mm"
            },
            calendar: {
                sameDay: "[இன்று] LT",
                nextDay: "[நாளை] LT",
                nextWeek: "dddd, LT",
                lastDay: "[நேற்று] LT",
                lastWeek: "[கடந்த வாரம்] dddd, LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s இல்",
                past: "%s முன்",
                s: "ஒரு சில விநாடிகள்",
                ss: "%d விநாடிகள்",
                m: "ஒரு நிமிடம்",
                mm: "%d நிமிடங்கள்",
                h: "ஒரு மணி நேரம்",
                hh: "%d மணி நேரம்",
                d: "ஒரு நாள்",
                dd: "%d நாட்கள்",
                M: "ஒரு மாதம்",
                MM: "%d மாதங்கள்",
                y: "ஒரு வருடம்",
                yy: "%d ஆண்டுகள்"
            },
            dayOfMonthOrdinalParse: /\d{1,2}வது/,
            ordinal: function(e) {
                return e + "வது";
            },
            preparse: function(e) {
                return e.replace(/[௧௨௩௪௫௬௭௮௯௦]/g, function(e) {
                    return s[e];
                });
            },
            postformat: function(e) {
                return e.replace(/\d/g, function(e) {
                    return t[e];
                });
            },
            meridiemParse: /யாமம்|வைகறை|காலை|நண்பகல்|எற்பாடு|மாலை/,
            meridiem: function(e, t, s) {
                return e < 2 ? " யாமம்" : e < 6 ? " வைகறை" : e < 10 ? " காலை" : e < 14 ? " நண்பகல்" : e < 18 ? " எற்பாடு" : e < 22 ? " மாலை" : " யாமம்";
            },
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "யாமம்" === t ? e < 2 ? e : e + 12 : "வைகறை" === t || "காலை" === t ? e : "நண்பகல்" === t && e >= 10 ? e : e + 12;
            },
            week: {
                dow: 0,
                doy: 6
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("te", {
            months: "జనవరి_ఫిబ్రవరి_మార్చి_ఏప్రిల్_మే_జూన్_జూలై_ఆగస్టు_సెప్టెంబర్_అక్టోబర్_నవంబర్_డిసెంబర్".split("_"),
            monthsShort: "జన._ఫిబ్ర._మార్చి_ఏప్రి._మే_జూన్_జూలై_ఆగ._సెప్._అక్టో._నవ._డిసె.".split("_"),
            monthsParseExact: !0,
            weekdays: "ఆదివారం_సోమవారం_మంగళవారం_బుధవారం_గురువారం_శుక్రవారం_శనివారం".split("_"),
            weekdaysShort: "ఆది_సోమ_మంగళ_బుధ_గురు_శుక్ర_శని".split("_"),
            weekdaysMin: "ఆ_సో_మం_బు_గు_శు_శ".split("_"),
            longDateFormat: {
                LT: "A h:mm",
                LTS: "A h:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY, A h:mm",
                LLLL: "dddd, D MMMM YYYY, A h:mm"
            },
            calendar: {
                sameDay: "[నేడు] LT",
                nextDay: "[రేపు] LT",
                nextWeek: "dddd, LT",
                lastDay: "[నిన్న] LT",
                lastWeek: "[గత] dddd, LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s లో",
                past: "%s క్రితం",
                s: "కొన్ని క్షణాలు",
                ss: "%d సెకన్లు",
                m: "ఒక నిమిషం",
                mm: "%d నిమిషాలు",
                h: "ఒక గంట",
                hh: "%d గంటలు",
                d: "ఒక రోజు",
                dd: "%d రోజులు",
                M: "ఒక నెల",
                MM: "%d నెలలు",
                y: "ఒక సంవత్సరం",
                yy: "%d సంవత్సరాలు"
            },
            dayOfMonthOrdinalParse: /\d{1,2}వ/,
            ordinal: "%dవ",
            meridiemParse: /రాత్రి|ఉదయం|మధ్యాహ్నం|సాయంత్రం/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "రాత్రి" === t ? e < 4 ? e : e + 12 : "ఉదయం" === t ? e : "మధ్యాహ్నం" === t ? e >= 10 ? e : e + 12 : "సాయంత్రం" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, s) {
                return e < 4 ? "రాత్రి" : e < 10 ? "ఉదయం" : e < 17 ? "మధ్యాహ్నం" : e < 20 ? "సాయంత్రం" : "రాత్రి";
            },
            week: {
                dow: 0,
                doy: 6
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("tet", {
            months: "Janeiru_Fevereiru_Marsu_Abril_Maiu_Juñu_Jullu_Agustu_Setembru_Outubru_Novembru_Dezembru".split("_"),
            monthsShort: "Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez".split("_"),
            weekdays: "Domingu_Segunda_Tersa_Kuarta_Kinta_Sesta_Sabadu".split("_"),
            weekdaysShort: "Dom_Seg_Ters_Kua_Kint_Sest_Sab".split("_"),
            weekdaysMin: "Do_Seg_Te_Ku_Ki_Ses_Sa".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Ohin iha] LT",
                nextDay: "[Aban iha] LT",
                nextWeek: "dddd [iha] LT",
                lastDay: "[Horiseik iha] LT",
                lastWeek: "dddd [semana kotuk] [iha] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "iha %s",
                past: "%s liuba",
                s: "minutu balun",
                ss: "minutu %d",
                m: "minutu ida",
                mm: "minutu %d",
                h: "oras ida",
                hh: "oras %d",
                d: "loron ida",
                dd: "loron %d",
                M: "fulan ida",
                MM: "fulan %d",
                y: "tinan ida",
                yy: "tinan %d"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(st|nd|rd|th)/,
            ordinal: function(e) {
                var t = e % 10, s = 1 === ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th";
                return e + s;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            0: "-ум",
            1: "-ум",
            2: "-юм",
            3: "-юм",
            4: "-ум",
            5: "-ум",
            6: "-ум",
            7: "-ум",
            8: "-ум",
            9: "-ум",
            10: "-ум",
            12: "-ум",
            13: "-ум",
            20: "-ум",
            30: "-юм",
            40: "-ум",
            50: "-ум",
            60: "-ум",
            70: "-ум",
            80: "-ум",
            90: "-ум",
            100: "-ум"
        }, s = e.defineLocale("tg", {
            months: "январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр".split("_"),
            monthsShort: "янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек".split("_"),
            weekdays: "якшанбе_душанбе_сешанбе_чоршанбе_панҷшанбе_ҷумъа_шанбе".split("_"),
            weekdaysShort: "яшб_дшб_сшб_чшб_пшб_ҷум_шнб".split("_"),
            weekdaysMin: "яш_дш_сш_чш_пш_ҷм_шб".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Имрӯз соати] LT",
                nextDay: "[Пагоҳ соати] LT",
                lastDay: "[Дирӯз соати] LT",
                nextWeek: "dddd[и] [ҳафтаи оянда соати] LT",
                lastWeek: "dddd[и] [ҳафтаи гузашта соати] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "баъди %s",
                past: "%s пеш",
                s: "якчанд сония",
                m: "як дақиқа",
                mm: "%d дақиқа",
                h: "як соат",
                hh: "%d соат",
                d: "як рӯз",
                dd: "%d рӯз",
                M: "як моҳ",
                MM: "%d моҳ",
                y: "як сол",
                yy: "%d сол"
            },
            meridiemParse: /шаб|субҳ|рӯз|бегоҳ/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "шаб" === t ? e < 4 ? e : e + 12 : "субҳ" === t ? e : "рӯз" === t ? e >= 11 ? e : e + 12 : "бегоҳ" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, s) {
                return e < 4 ? "шаб" : e < 11 ? "субҳ" : e < 16 ? "рӯз" : e < 19 ? "бегоҳ" : "шаб";
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(ум|юм)/,
            ordinal: function(e) {
                var s = e % 10, n = e >= 100 ? 100 : null;
                return e + (t[e] || t[s] || t[n]);
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("th", {
            months: "มกราคม_กุมภาพันธ์_มีนาคม_เมษายน_พฤษภาคม_มิถุนายน_กรกฎาคม_สิงหาคม_กันยายน_ตุลาคม_พฤศจิกายน_ธันวาคม".split("_"),
            monthsShort: "ม.ค._ก.พ._มี.ค._เม.ย._พ.ค._มิ.ย._ก.ค._ส.ค._ก.ย._ต.ค._พ.ย._ธ.ค.".split("_"),
            monthsParseExact: !0,
            weekdays: "อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัสบดี_ศุกร์_เสาร์".split("_"),
            weekdaysShort: "อาทิตย์_จันทร์_อังคาร_พุธ_พฤหัส_ศุกร์_เสาร์".split("_"),
            weekdaysMin: "อา._จ._อ._พ._พฤ._ศ._ส.".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "H:mm",
                LTS: "H:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY เวลา H:mm",
                LLLL: "วันddddที่ D MMMM YYYY เวลา H:mm"
            },
            meridiemParse: /ก่อนเที่ยง|หลังเที่ยง/,
            isPM: function(e) {
                return "หลังเที่ยง" === e;
            },
            meridiem: function(e, t, s) {
                return e < 12 ? "ก่อนเที่ยง" : "หลังเที่ยง";
            },
            calendar: {
                sameDay: "[วันนี้ เวลา] LT",
                nextDay: "[พรุ่งนี้ เวลา] LT",
                nextWeek: "dddd[หน้า เวลา] LT",
                lastDay: "[เมื่อวานนี้ เวลา] LT",
                lastWeek: "[วัน]dddd[ที่แล้ว เวลา] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "อีก %s",
                past: "%sที่แล้ว",
                s: "ไม่กี่วินาที",
                ss: "%d วินาที",
                m: "1 นาที",
                mm: "%d นาที",
                h: "1 ชั่วโมง",
                hh: "%d ชั่วโมง",
                d: "1 วัน",
                dd: "%d วัน",
                M: "1 เดือน",
                MM: "%d เดือน",
                y: "1 ปี",
                yy: "%d ปี"
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("tl-ph", {
            months: "Enero_Pebrero_Marso_Abril_Mayo_Hunyo_Hulyo_Agosto_Setyembre_Oktubre_Nobyembre_Disyembre".split("_"),
            monthsShort: "Ene_Peb_Mar_Abr_May_Hun_Hul_Ago_Set_Okt_Nob_Dis".split("_"),
            weekdays: "Linggo_Lunes_Martes_Miyerkules_Huwebes_Biyernes_Sabado".split("_"),
            weekdaysShort: "Lin_Lun_Mar_Miy_Huw_Biy_Sab".split("_"),
            weekdaysMin: "Li_Lu_Ma_Mi_Hu_Bi_Sab".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "MM/D/YYYY",
                LL: "MMMM D, YYYY",
                LLL: "MMMM D, YYYY HH:mm",
                LLLL: "dddd, MMMM DD, YYYY HH:mm"
            },
            calendar: {
                sameDay: "LT [ngayong araw]",
                nextDay: "[Bukas ng] LT",
                nextWeek: "LT [sa susunod na] dddd",
                lastDay: "LT [kahapon]",
                lastWeek: "LT [noong nakaraang] dddd",
                sameElse: "L"
            },
            relativeTime: {
                future: "sa loob ng %s",
                past: "%s ang nakalipas",
                s: "ilang segundo",
                ss: "%d segundo",
                m: "isang minuto",
                mm: "%d minuto",
                h: "isang oras",
                hh: "%d oras",
                d: "isang araw",
                dd: "%d araw",
                M: "isang buwan",
                MM: "%d buwan",
                y: "isang taon",
                yy: "%d taon"
            },
            dayOfMonthOrdinalParse: /\d{1,2}/,
            ordinal: function(e) {
                return e;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e) {
            var t = e;
            return t = e.indexOf("jaj") !== -1 ? t.slice(0, -3) + "leS" : e.indexOf("jar") !== -1 ? t.slice(0, -3) + "waQ" : e.indexOf("DIS") !== -1 ? t.slice(0, -3) + "nem" : t + " pIq";
        }
        function s(e) {
            var t = e;
            return t = e.indexOf("jaj") !== -1 ? t.slice(0, -3) + "Hu’" : e.indexOf("jar") !== -1 ? t.slice(0, -3) + "wen" : e.indexOf("DIS") !== -1 ? t.slice(0, -3) + "ben" : t + " ret";
        }
        function n(e, t, s, n) {
            var i = a(e);
            switch (s) {
              case "ss":
                return i + " lup";

              case "mm":
                return i + " tup";

              case "hh":
                return i + " rep";

              case "dd":
                return i + " jaj";

              case "MM":
                return i + " jar";

              case "yy":
                return i + " DIS";
            }
        }
        function a(e) {
            var t = Math.floor(e % 1e3 / 100), s = Math.floor(e % 100 / 10), n = e % 10, a = "";
            return t > 0 && (a += i[t] + "vatlh"), s > 0 && (a += ("" !== a ? " " : "") + i[s] + "maH"), 
            n > 0 && (a += ("" !== a ? " " : "") + i[n]), "" === a ? "pagh" : a;
        }
        var i = "pagh_wa’_cha’_wej_loS_vagh_jav_Soch_chorgh_Hut".split("_"), r = e.defineLocale("tlh", {
            months: "tera’ jar wa’_tera’ jar cha’_tera’ jar wej_tera’ jar loS_tera’ jar vagh_tera’ jar jav_tera’ jar Soch_tera’ jar chorgh_tera’ jar Hut_tera’ jar wa’maH_tera’ jar wa’maH wa’_tera’ jar wa’maH cha’".split("_"),
            monthsShort: "jar wa’_jar cha’_jar wej_jar loS_jar vagh_jar jav_jar Soch_jar chorgh_jar Hut_jar wa’maH_jar wa’maH wa’_jar wa’maH cha’".split("_"),
            monthsParseExact: !0,
            weekdays: "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),
            weekdaysShort: "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),
            weekdaysMin: "lojmItjaj_DaSjaj_povjaj_ghItlhjaj_loghjaj_buqjaj_ghInjaj".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[DaHjaj] LT",
                nextDay: "[wa’leS] LT",
                nextWeek: "LLL",
                lastDay: "[wa’Hu’] LT",
                lastWeek: "LLL",
                sameElse: "L"
            },
            relativeTime: {
                future: t,
                past: s,
                s: "puS lup",
                ss: n,
                m: "wa’ tup",
                mm: n,
                h: "wa’ rep",
                hh: n,
                d: "wa’ jaj",
                dd: n,
                M: "wa’ jar",
                MM: n,
                y: "wa’ DIS",
                yy: n
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return r;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = {
            1: "'inci",
            5: "'inci",
            8: "'inci",
            70: "'inci",
            80: "'inci",
            2: "'nci",
            7: "'nci",
            20: "'nci",
            50: "'nci",
            3: "'üncü",
            4: "'üncü",
            100: "'üncü",
            6: "'ncı",
            9: "'uncu",
            10: "'uncu",
            30: "'uncu",
            60: "'ıncı",
            90: "'ıncı"
        }, s = e.defineLocale("tr", {
            months: "Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık".split("_"),
            monthsShort: "Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara".split("_"),
            weekdays: "Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi".split("_"),
            weekdaysShort: "Paz_Pts_Sal_Çar_Per_Cum_Cts".split("_"),
            weekdaysMin: "Pz_Pt_Sa_Ça_Pe_Cu_Ct".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[bugün saat] LT",
                nextDay: "[yarın saat] LT",
                nextWeek: "[gelecek] dddd [saat] LT",
                lastDay: "[dün] LT",
                lastWeek: "[geçen] dddd [saat] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s sonra",
                past: "%s önce",
                s: "birkaç saniye",
                ss: "%d saniye",
                m: "bir dakika",
                mm: "%d dakika",
                h: "bir saat",
                hh: "%d saat",
                d: "bir gün",
                dd: "%d gün",
                M: "bir ay",
                MM: "%d ay",
                y: "bir yıl",
                yy: "%d yıl"
            },
            ordinal: function(e, s) {
                switch (s) {
                  case "d":
                  case "D":
                  case "Do":
                  case "DD":
                    return e;

                  default:
                    if (0 === e) return e + "'ıncı";
                    var n = e % 10, a = e % 100 - n, i = e >= 100 ? 100 : null;
                    return e + (t[n] || t[a] || t[i]);
                }
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t, s, n) {
            var a = {
                s: [ "viensas secunds", "'iensas secunds" ],
                ss: [ e + " secunds", "" + e + " secunds" ],
                m: [ "'n míut", "'iens míut" ],
                mm: [ e + " míuts", "" + e + " míuts" ],
                h: [ "'n þora", "'iensa þora" ],
                hh: [ e + " þoras", "" + e + " þoras" ],
                d: [ "'n ziua", "'iensa ziua" ],
                dd: [ e + " ziuas", "" + e + " ziuas" ],
                M: [ "'n mes", "'iens mes" ],
                MM: [ e + " mesen", "" + e + " mesen" ],
                y: [ "'n ar", "'iens ar" ],
                yy: [ e + " ars", "" + e + " ars" ]
            };
            return n ? a[s][0] : t ? a[s][0] : a[s][1];
        }
        var s = e.defineLocale("tzl", {
            months: "Januar_Fevraglh_Març_Avrïu_Mai_Gün_Julia_Guscht_Setemvar_Listopäts_Noemvar_Zecemvar".split("_"),
            monthsShort: "Jan_Fev_Mar_Avr_Mai_Gün_Jul_Gus_Set_Lis_Noe_Zec".split("_"),
            weekdays: "Súladi_Lúneçi_Maitzi_Márcuri_Xhúadi_Viénerçi_Sáturi".split("_"),
            weekdaysShort: "Súl_Lún_Mai_Már_Xhú_Vié_Sát".split("_"),
            weekdaysMin: "Sú_Lú_Ma_Má_Xh_Vi_Sá".split("_"),
            longDateFormat: {
                LT: "HH.mm",
                LTS: "HH.mm.ss",
                L: "DD.MM.YYYY",
                LL: "D. MMMM [dallas] YYYY",
                LLL: "D. MMMM [dallas] YYYY HH.mm",
                LLLL: "dddd, [li] D. MMMM [dallas] YYYY HH.mm"
            },
            meridiemParse: /d\'o|d\'a/i,
            isPM: function(e) {
                return "d'o" === e.toLowerCase();
            },
            meridiem: function(e, t, s) {
                return e > 11 ? s ? "d'o" : "D'O" : s ? "d'a" : "D'A";
            },
            calendar: {
                sameDay: "[oxhi à] LT",
                nextDay: "[demà à] LT",
                nextWeek: "dddd [à] LT",
                lastDay: "[ieiri à] LT",
                lastWeek: "[sür el] dddd [lasteu à] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "osprei %s",
                past: "ja%s",
                s: t,
                ss: t,
                m: t,
                mm: t,
                h: t,
                hh: t,
                d: t,
                dd: t,
                M: t,
                MM: t,
                y: t,
                yy: t
            },
            dayOfMonthOrdinalParse: /\d{1,2}\./,
            ordinal: "%d.",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return s;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("tzm", {
            months: "ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split("_"),
            monthsShort: "ⵉⵏⵏⴰⵢⵔ_ⴱⵕⴰⵢⵕ_ⵎⴰⵕⵚ_ⵉⴱⵔⵉⵔ_ⵎⴰⵢⵢⵓ_ⵢⵓⵏⵢⵓ_ⵢⵓⵍⵢⵓⵣ_ⵖⵓⵛⵜ_ⵛⵓⵜⴰⵏⴱⵉⵔ_ⴽⵟⵓⴱⵕ_ⵏⵓⵡⴰⵏⴱⵉⵔ_ⴷⵓⵊⵏⴱⵉⵔ".split("_"),
            weekdays: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
            weekdaysShort: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
            weekdaysMin: "ⴰⵙⴰⵎⴰⵙ_ⴰⵢⵏⴰⵙ_ⴰⵙⵉⵏⴰⵙ_ⴰⴽⵔⴰⵙ_ⴰⴽⵡⴰⵙ_ⴰⵙⵉⵎⵡⴰⵙ_ⴰⵙⵉⴹⵢⴰⵙ".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[ⴰⵙⴷⵅ ⴴ] LT",
                nextDay: "[ⴰⵙⴽⴰ ⴴ] LT",
                nextWeek: "dddd [ⴴ] LT",
                lastDay: "[ⴰⵚⴰⵏⵜ ⴴ] LT",
                lastWeek: "dddd [ⴴ] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "ⴷⴰⴷⵅ ⵙ ⵢⴰⵏ %s",
                past: "ⵢⴰⵏ %s",
                s: "ⵉⵎⵉⴽ",
                ss: "%d ⵉⵎⵉⴽ",
                m: "ⵎⵉⵏⵓⴺ",
                mm: "%d ⵎⵉⵏⵓⴺ",
                h: "ⵙⴰⵄⴰ",
                hh: "%d ⵜⴰⵙⵙⴰⵄⵉⵏ",
                d: "ⴰⵙⵙ",
                dd: "%d oⵙⵙⴰⵏ",
                M: "ⴰⵢoⵓⵔ",
                MM: "%d ⵉⵢⵢⵉⵔⵏ",
                y: "ⴰⵙⴳⴰⵙ",
                yy: "%d ⵉⵙⴳⴰⵙⵏ"
            },
            week: {
                dow: 6,
                doy: 12
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("tzm-latn", {
            months: "innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split("_"),
            monthsShort: "innayr_brˤayrˤ_marˤsˤ_ibrir_mayyw_ywnyw_ywlywz_ɣwšt_šwtanbir_ktˤwbrˤ_nwwanbir_dwjnbir".split("_"),
            weekdays: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
            weekdaysShort: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
            weekdaysMin: "asamas_aynas_asinas_akras_akwas_asimwas_asiḍyas".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[asdkh g] LT",
                nextDay: "[aska g] LT",
                nextWeek: "dddd [g] LT",
                lastDay: "[assant g] LT",
                lastWeek: "dddd [g] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "dadkh s yan %s",
                past: "yan %s",
                s: "imik",
                ss: "%d imik",
                m: "minuḍ",
                mm: "%d minuḍ",
                h: "saɛa",
                hh: "%d tassaɛin",
                d: "ass",
                dd: "%d ossan",
                M: "ayowr",
                MM: "%d iyyirn",
                y: "asgas",
                yy: "%d isgasn"
            },
            week: {
                dow: 6,
                doy: 12
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("ug-cn", {
            months: "يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر".split("_"),
            monthsShort: "يانۋار_فېۋرال_مارت_ئاپرېل_ماي_ئىيۇن_ئىيۇل_ئاۋغۇست_سېنتەبىر_ئۆكتەبىر_نويابىر_دېكابىر".split("_"),
            weekdays: "يەكشەنبە_دۈشەنبە_سەيشەنبە_چارشەنبە_پەيشەنبە_جۈمە_شەنبە".split("_"),
            weekdaysShort: "يە_دۈ_سە_چا_پە_جۈ_شە".split("_"),
            weekdaysMin: "يە_دۈ_سە_چا_پە_جۈ_شە".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY-MM-DD",
                LL: "YYYY-يىلىM-ئاينىڭD-كۈنى",
                LLL: "YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm",
                LLLL: "dddd، YYYY-يىلىM-ئاينىڭD-كۈنى، HH:mm"
            },
            meridiemParse: /يېرىم كېچە|سەھەر|چۈشتىن بۇرۇن|چۈش|چۈشتىن كېيىن|كەچ/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "يېرىم كېچە" === t || "سەھەر" === t || "چۈشتىن بۇرۇن" === t ? e : "چۈشتىن كېيىن" === t || "كەچ" === t ? e + 12 : e >= 11 ? e : e + 12;
            },
            meridiem: function(e, t, s) {
                var n = 100 * e + t;
                return n < 600 ? "يېرىم كېچە" : n < 900 ? "سەھەر" : n < 1130 ? "چۈشتىن بۇرۇن" : n < 1230 ? "چۈش" : n < 1800 ? "چۈشتىن كېيىن" : "كەچ";
            },
            calendar: {
                sameDay: "[بۈگۈن سائەت] LT",
                nextDay: "[ئەتە سائەت] LT",
                nextWeek: "[كېلەركى] dddd [سائەت] LT",
                lastDay: "[تۆنۈگۈن] LT",
                lastWeek: "[ئالدىنقى] dddd [سائەت] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s كېيىن",
                past: "%s بۇرۇن",
                s: "نەچچە سېكونت",
                ss: "%d سېكونت",
                m: "بىر مىنۇت",
                mm: "%d مىنۇت",
                h: "بىر سائەت",
                hh: "%d سائەت",
                d: "بىر كۈن",
                dd: "%d كۈن",
                M: "بىر ئاي",
                MM: "%d ئاي",
                y: "بىر يىل",
                yy: "%d يىل"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(-كۈنى|-ئاي|-ھەپتە)/,
            ordinal: function(e, t) {
                switch (t) {
                  case "d":
                  case "D":
                  case "DDD":
                    return e + "-كۈنى";

                  case "w":
                  case "W":
                    return e + "-ھەپتە";

                  default:
                    return e;
                }
            },
            preparse: function(e) {
                return e.replace(/،/g, ",");
            },
            postformat: function(e) {
                return e.replace(/,/g, "،");
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        function t(e, t) {
            var s = e.split("_");
            return t % 10 === 1 && t % 100 !== 11 ? s[0] : t % 10 >= 2 && t % 10 <= 4 && (t % 100 < 10 || t % 100 >= 20) ? s[1] : s[2];
        }
        function s(e, s, n) {
            var a = {
                ss: s ? "секунда_секунди_секунд" : "секунду_секунди_секунд",
                mm: s ? "хвилина_хвилини_хвилин" : "хвилину_хвилини_хвилин",
                hh: s ? "година_години_годин" : "годину_години_годин",
                dd: "день_дні_днів",
                MM: "місяць_місяці_місяців",
                yy: "рік_роки_років"
            };
            return "m" === n ? s ? "хвилина" : "хвилину" : "h" === n ? s ? "година" : "годину" : e + " " + t(a[n], +e);
        }
        function n(e, t) {
            var s = {
                nominative: "неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота".split("_"),
                accusative: "неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу".split("_"),
                genitive: "неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи".split("_")
            };
            if (!e) return s.nominative;
            var n = /(\[[ВвУу]\]) ?dddd/.test(t) ? "accusative" : /\[?(?:минулої|наступної)? ?\] ?dddd/.test(t) ? "genitive" : "nominative";
            return s[n][e.day()];
        }
        function a(e) {
            return function() {
                return e + "о" + (11 === this.hours() ? "б" : "") + "] LT";
            };
        }
        var i = e.defineLocale("uk", {
            months: {
                format: "січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня".split("_"),
                standalone: "січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень".split("_")
            },
            monthsShort: "січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд".split("_"),
            weekdays: n,
            weekdaysShort: "нд_пн_вт_ср_чт_пт_сб".split("_"),
            weekdaysMin: "нд_пн_вт_ср_чт_пт_сб".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD.MM.YYYY",
                LL: "D MMMM YYYY р.",
                LLL: "D MMMM YYYY р., HH:mm",
                LLLL: "dddd, D MMMM YYYY р., HH:mm"
            },
            calendar: {
                sameDay: a("[Сьогодні "),
                nextDay: a("[Завтра "),
                lastDay: a("[Вчора "),
                nextWeek: a("[У] dddd ["),
                lastWeek: function() {
                    switch (this.day()) {
                      case 0:
                      case 3:
                      case 5:
                      case 6:
                        return a("[Минулої] dddd [").call(this);

                      case 1:
                      case 2:
                      case 4:
                        return a("[Минулого] dddd [").call(this);
                    }
                },
                sameElse: "L"
            },
            relativeTime: {
                future: "за %s",
                past: "%s тому",
                s: "декілька секунд",
                ss: s,
                m: s,
                mm: s,
                h: "годину",
                hh: s,
                d: "день",
                dd: s,
                M: "місяць",
                MM: s,
                y: "рік",
                yy: s
            },
            meridiemParse: /ночі|ранку|дня|вечора/,
            isPM: function(e) {
                return /^(дня|вечора)$/.test(e);
            },
            meridiem: function(e, t, s) {
                return e < 4 ? "ночі" : e < 12 ? "ранку" : e < 17 ? "дня" : "вечора";
            },
            dayOfMonthOrdinalParse: /\d{1,2}-(й|го)/,
            ordinal: function(e, t) {
                switch (t) {
                  case "M":
                  case "d":
                  case "DDD":
                  case "w":
                  case "W":
                    return e + "-й";

                  case "D":
                    return e + "-го";

                  default:
                    return e;
                }
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return i;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = [ "جنوری", "فروری", "مارچ", "اپریل", "مئی", "جون", "جولائی", "اگست", "ستمبر", "اکتوبر", "نومبر", "دسمبر" ], s = [ "اتوار", "پیر", "منگل", "بدھ", "جمعرات", "جمعہ", "ہفتہ" ], n = e.defineLocale("ur", {
            months: t,
            monthsShort: t,
            weekdays: s,
            weekdaysShort: s,
            weekdaysMin: s,
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd، D MMMM YYYY HH:mm"
            },
            meridiemParse: /صبح|شام/,
            isPM: function(e) {
                return "شام" === e;
            },
            meridiem: function(e, t, s) {
                return e < 12 ? "صبح" : "شام";
            },
            calendar: {
                sameDay: "[آج بوقت] LT",
                nextDay: "[کل بوقت] LT",
                nextWeek: "dddd [بوقت] LT",
                lastDay: "[گذشتہ روز بوقت] LT",
                lastWeek: "[گذشتہ] dddd [بوقت] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s بعد",
                past: "%s قبل",
                s: "چند سیکنڈ",
                ss: "%d سیکنڈ",
                m: "ایک منٹ",
                mm: "%d منٹ",
                h: "ایک گھنٹہ",
                hh: "%d گھنٹے",
                d: "ایک دن",
                dd: "%d دن",
                M: "ایک ماہ",
                MM: "%d ماہ",
                y: "ایک سال",
                yy: "%d سال"
            },
            preparse: function(e) {
                return e.replace(/،/g, ",");
            },
            postformat: function(e) {
                return e.replace(/,/g, "،");
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return n;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("uz", {
            months: "январ_феврал_март_апрел_май_июн_июл_август_сентябр_октябр_ноябр_декабр".split("_"),
            monthsShort: "янв_фев_мар_апр_май_июн_июл_авг_сен_окт_ноя_дек".split("_"),
            weekdays: "Якшанба_Душанба_Сешанба_Чоршанба_Пайшанба_Жума_Шанба".split("_"),
            weekdaysShort: "Якш_Душ_Сеш_Чор_Пай_Жум_Шан".split("_"),
            weekdaysMin: "Як_Ду_Се_Чо_Па_Жу_Ша".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "D MMMM YYYY, dddd HH:mm"
            },
            calendar: {
                sameDay: "[Бугун соат] LT [да]",
                nextDay: "[Эртага] LT [да]",
                nextWeek: "dddd [куни соат] LT [да]",
                lastDay: "[Кеча соат] LT [да]",
                lastWeek: "[Утган] dddd [куни соат] LT [да]",
                sameElse: "L"
            },
            relativeTime: {
                future: "Якин %s ичида",
                past: "Бир неча %s олдин",
                s: "фурсат",
                ss: "%d фурсат",
                m: "бир дакика",
                mm: "%d дакика",
                h: "бир соат",
                hh: "%d соат",
                d: "бир кун",
                dd: "%d кун",
                M: "бир ой",
                MM: "%d ой",
                y: "бир йил",
                yy: "%d йил"
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("uz-latn", {
            months: "Yanvar_Fevral_Mart_Aprel_May_Iyun_Iyul_Avgust_Sentabr_Oktabr_Noyabr_Dekabr".split("_"),
            monthsShort: "Yan_Fev_Mar_Apr_May_Iyun_Iyul_Avg_Sen_Okt_Noy_Dek".split("_"),
            weekdays: "Yakshanba_Dushanba_Seshanba_Chorshanba_Payshanba_Juma_Shanba".split("_"),
            weekdaysShort: "Yak_Dush_Sesh_Chor_Pay_Jum_Shan".split("_"),
            weekdaysMin: "Ya_Du_Se_Cho_Pa_Ju_Sha".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "D MMMM YYYY, dddd HH:mm"
            },
            calendar: {
                sameDay: "[Bugun soat] LT [da]",
                nextDay: "[Ertaga] LT [da]",
                nextWeek: "dddd [kuni soat] LT [da]",
                lastDay: "[Kecha soat] LT [da]",
                lastWeek: "[O'tgan] dddd [kuni soat] LT [da]",
                sameElse: "L"
            },
            relativeTime: {
                future: "Yaqin %s ichida",
                past: "Bir necha %s oldin",
                s: "soniya",
                ss: "%d soniya",
                m: "bir daqiqa",
                mm: "%d daqiqa",
                h: "bir soat",
                hh: "%d soat",
                d: "bir kun",
                dd: "%d kun",
                M: "bir oy",
                MM: "%d oy",
                y: "bir yil",
                yy: "%d yil"
            },
            week: {
                dow: 1,
                doy: 7
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("vi", {
            months: "tháng 1_tháng 2_tháng 3_tháng 4_tháng 5_tháng 6_tháng 7_tháng 8_tháng 9_tháng 10_tháng 11_tháng 12".split("_"),
            monthsShort: "Th01_Th02_Th03_Th04_Th05_Th06_Th07_Th08_Th09_Th10_Th11_Th12".split("_"),
            monthsParseExact: !0,
            weekdays: "chủ nhật_thứ hai_thứ ba_thứ tư_thứ năm_thứ sáu_thứ bảy".split("_"),
            weekdaysShort: "CN_T2_T3_T4_T5_T6_T7".split("_"),
            weekdaysMin: "CN_T2_T3_T4_T5_T6_T7".split("_"),
            weekdaysParseExact: !0,
            meridiemParse: /sa|ch/i,
            isPM: function(e) {
                return /^ch$/i.test(e);
            },
            meridiem: function(e, t, s) {
                return e < 12 ? s ? "sa" : "SA" : s ? "ch" : "CH";
            },
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "DD/MM/YYYY",
                LL: "D MMMM [năm] YYYY",
                LLL: "D MMMM [năm] YYYY HH:mm",
                LLLL: "dddd, D MMMM [năm] YYYY HH:mm",
                l: "DD/M/YYYY",
                ll: "D MMM YYYY",
                lll: "D MMM YYYY HH:mm",
                llll: "ddd, D MMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[Hôm nay lúc] LT",
                nextDay: "[Ngày mai lúc] LT",
                nextWeek: "dddd [tuần tới lúc] LT",
                lastDay: "[Hôm qua lúc] LT",
                lastWeek: "dddd [tuần rồi lúc] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "%s tới",
                past: "%s trước",
                s: "vài giây",
                ss: "%d giây",
                m: "một phút",
                mm: "%d phút",
                h: "một giờ",
                hh: "%d giờ",
                d: "một ngày",
                dd: "%d ngày",
                M: "một tháng",
                MM: "%d tháng",
                y: "một năm",
                yy: "%d năm"
            },
            dayOfMonthOrdinalParse: /\d{1,2}/,
            ordinal: function(e) {
                return e;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("x-pseudo", {
            months: "J~áñúá~rý_F~ébrú~árý_~Márc~h_Áp~ríl_~Máý_~Júñé~_Júl~ý_Áú~gúst~_Sép~témb~ér_Ó~ctób~ér_Ñ~óvém~bér_~Décé~mbér".split("_"),
            monthsShort: "J~áñ_~Féb_~Már_~Ápr_~Máý_~Júñ_~Júl_~Áúg_~Sép_~Óct_~Ñóv_~Déc".split("_"),
            monthsParseExact: !0,
            weekdays: "S~úñdá~ý_Mó~ñdáý~_Túé~sdáý~_Wéd~ñésd~áý_T~húrs~dáý_~Fríd~áý_S~átúr~dáý".split("_"),
            weekdaysShort: "S~úñ_~Móñ_~Túé_~Wéd_~Thú_~Frí_~Sát".split("_"),
            weekdaysMin: "S~ú_Mó~_Tú_~Wé_T~h_Fr~_Sá".split("_"),
            weekdaysParseExact: !0,
            longDateFormat: {
                LT: "HH:mm",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY HH:mm",
                LLLL: "dddd, D MMMM YYYY HH:mm"
            },
            calendar: {
                sameDay: "[T~ódá~ý át] LT",
                nextDay: "[T~ómó~rró~w át] LT",
                nextWeek: "dddd [át] LT",
                lastDay: "[Ý~ést~érdá~ý át] LT",
                lastWeek: "[L~ást] dddd [át] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "í~ñ %s",
                past: "%s á~gó",
                s: "á ~féw ~sécó~ñds",
                ss: "%d s~écóñ~ds",
                m: "á ~míñ~úté",
                mm: "%d m~íñú~tés",
                h: "á~ñ hó~úr",
                hh: "%d h~óúrs",
                d: "á ~dáý",
                dd: "%d d~áýs",
                M: "á ~móñ~th",
                MM: "%d m~óñt~hs",
                y: "á ~ýéár",
                yy: "%d ý~éárs"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(th|st|nd|rd)/,
            ordinal: function(e) {
                var t = e % 10, s = 1 === ~~(e % 100 / 10) ? "th" : 1 === t ? "st" : 2 === t ? "nd" : 3 === t ? "rd" : "th";
                return e + s;
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("yo", {
            months: "Sẹ́rẹ́_Èrèlè_Ẹrẹ̀nà_Ìgbé_Èbibi_Òkùdu_Agẹmo_Ògún_Owewe_Ọ̀wàrà_Bélú_Ọ̀pẹ̀̀".split("_"),
            monthsShort: "Sẹ́r_Èrl_Ẹrn_Ìgb_Èbi_Òkù_Agẹ_Ògú_Owe_Ọ̀wà_Bél_Ọ̀pẹ̀̀".split("_"),
            weekdays: "Àìkú_Ajé_Ìsẹ́gun_Ọjọ́rú_Ọjọ́bọ_Ẹtì_Àbámẹ́ta".split("_"),
            weekdaysShort: "Àìk_Ajé_Ìsẹ́_Ọjr_Ọjb_Ẹtì_Àbá".split("_"),
            weekdaysMin: "Àì_Aj_Ìs_Ọr_Ọb_Ẹt_Àb".split("_"),
            longDateFormat: {
                LT: "h:mm A",
                LTS: "h:mm:ss A",
                L: "DD/MM/YYYY",
                LL: "D MMMM YYYY",
                LLL: "D MMMM YYYY h:mm A",
                LLLL: "dddd, D MMMM YYYY h:mm A"
            },
            calendar: {
                sameDay: "[Ònì ni] LT",
                nextDay: "[Ọ̀la ni] LT",
                nextWeek: "dddd [Ọsẹ̀ tón'bọ] [ni] LT",
                lastDay: "[Àna ni] LT",
                lastWeek: "dddd [Ọsẹ̀ tólọ́] [ni] LT",
                sameElse: "L"
            },
            relativeTime: {
                future: "ní %s",
                past: "%s kọjá",
                s: "ìsẹjú aayá die",
                ss: "aayá %d",
                m: "ìsẹjú kan",
                mm: "ìsẹjú %d",
                h: "wákati kan",
                hh: "wákati %d",
                d: "ọjọ́ kan",
                dd: "ọjọ́ %d",
                M: "osù kan",
                MM: "osù %d",
                y: "ọdún kan",
                yy: "ọdún %d"
            },
            dayOfMonthOrdinalParse: /ọjọ́\s\d{1,2}/,
            ordinal: "ọjọ́ %d",
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("zh-cn", {
            months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
            monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
            weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
            weekdaysShort: "周日_周一_周二_周三_周四_周五_周六".split("_"),
            weekdaysMin: "日_一_二_三_四_五_六".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY/MM/DD",
                LL: "YYYY年M月D日",
                LLL: "YYYY年M月D日Ah点mm分",
                LLLL: "YYYY年M月D日ddddAh点mm分",
                l: "YYYY/M/D",
                ll: "YYYY年M月D日",
                lll: "YYYY年M月D日 HH:mm",
                llll: "YYYY年M月D日dddd HH:mm"
            },
            meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "凌晨" === t || "早上" === t || "上午" === t ? e : "下午" === t || "晚上" === t ? e + 12 : e >= 11 ? e : e + 12;
            },
            meridiem: function(e, t, s) {
                var n = 100 * e + t;
                return n < 600 ? "凌晨" : n < 900 ? "早上" : n < 1130 ? "上午" : n < 1230 ? "中午" : n < 1800 ? "下午" : "晚上";
            },
            calendar: {
                sameDay: "[今天]LT",
                nextDay: "[明天]LT",
                nextWeek: "[下]ddddLT",
                lastDay: "[昨天]LT",
                lastWeek: "[上]ddddLT",
                sameElse: "L"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(日|月|周)/,
            ordinal: function(e, t) {
                switch (t) {
                  case "d":
                  case "D":
                  case "DDD":
                    return e + "日";

                  case "M":
                    return e + "月";

                  case "w":
                  case "W":
                    return e + "周";

                  default:
                    return e;
                }
            },
            relativeTime: {
                future: "%s内",
                past: "%s前",
                s: "几秒",
                ss: "%d 秒",
                m: "1 分钟",
                mm: "%d 分钟",
                h: "1 小时",
                hh: "%d 小时",
                d: "1 天",
                dd: "%d 天",
                M: "1 个月",
                MM: "%d 个月",
                y: "1 年",
                yy: "%d 年"
            },
            week: {
                dow: 1,
                doy: 4
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("zh-hk", {
            months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
            monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
            weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
            weekdaysShort: "週日_週一_週二_週三_週四_週五_週六".split("_"),
            weekdaysMin: "日_一_二_三_四_五_六".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY/MM/DD",
                LL: "YYYY年M月D日",
                LLL: "YYYY年M月D日 HH:mm",
                LLLL: "YYYY年M月D日dddd HH:mm",
                l: "YYYY/M/D",
                ll: "YYYY年M月D日",
                lll: "YYYY年M月D日 HH:mm",
                llll: "YYYY年M月D日dddd HH:mm"
            },
            meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "凌晨" === t || "早上" === t || "上午" === t ? e : "中午" === t ? e >= 11 ? e : e + 12 : "下午" === t || "晚上" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, s) {
                var n = 100 * e + t;
                return n < 600 ? "凌晨" : n < 900 ? "早上" : n < 1130 ? "上午" : n < 1230 ? "中午" : n < 1800 ? "下午" : "晚上";
            },
            calendar: {
                sameDay: "[今天]LT",
                nextDay: "[明天]LT",
                nextWeek: "[下]ddddLT",
                lastDay: "[昨天]LT",
                lastWeek: "[上]ddddLT",
                sameElse: "L"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
            ordinal: function(e, t) {
                switch (t) {
                  case "d":
                  case "D":
                  case "DDD":
                    return e + "日";

                  case "M":
                    return e + "月";

                  case "w":
                  case "W":
                    return e + "週";

                  default:
                    return e;
                }
            },
            relativeTime: {
                future: "%s內",
                past: "%s前",
                s: "幾秒",
                ss: "%d 秒",
                m: "1 分鐘",
                mm: "%d 分鐘",
                h: "1 小時",
                hh: "%d 小時",
                d: "1 天",
                dd: "%d 天",
                M: "1 個月",
                MM: "%d 個月",
                y: "1 年",
                yy: "%d 年"
            }
        });
        return t;
    });
}, function(e, t, s) {
    !function(e, t) {
        t(s(18));
    }(this, function(e) {
        "use strict";
        var t = e.defineLocale("zh-tw", {
            months: "一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月".split("_"),
            monthsShort: "1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月".split("_"),
            weekdays: "星期日_星期一_星期二_星期三_星期四_星期五_星期六".split("_"),
            weekdaysShort: "週日_週一_週二_週三_週四_週五_週六".split("_"),
            weekdaysMin: "日_一_二_三_四_五_六".split("_"),
            longDateFormat: {
                LT: "HH:mm",
                LTS: "HH:mm:ss",
                L: "YYYY/MM/DD",
                LL: "YYYY年M月D日",
                LLL: "YYYY年M月D日 HH:mm",
                LLLL: "YYYY年M月D日dddd HH:mm",
                l: "YYYY/M/D",
                ll: "YYYY年M月D日",
                lll: "YYYY年M月D日 HH:mm",
                llll: "YYYY年M月D日dddd HH:mm"
            },
            meridiemParse: /凌晨|早上|上午|中午|下午|晚上/,
            meridiemHour: function(e, t) {
                return 12 === e && (e = 0), "凌晨" === t || "早上" === t || "上午" === t ? e : "中午" === t ? e >= 11 ? e : e + 12 : "下午" === t || "晚上" === t ? e + 12 : void 0;
            },
            meridiem: function(e, t, s) {
                var n = 100 * e + t;
                return n < 600 ? "凌晨" : n < 900 ? "早上" : n < 1130 ? "上午" : n < 1230 ? "中午" : n < 1800 ? "下午" : "晚上";
            },
            calendar: {
                sameDay: "[今天] LT",
                nextDay: "[明天] LT",
                nextWeek: "[下]dddd LT",
                lastDay: "[昨天] LT",
                lastWeek: "[上]dddd LT",
                sameElse: "L"
            },
            dayOfMonthOrdinalParse: /\d{1,2}(日|月|週)/,
            ordinal: function(e, t) {
                switch (t) {
                  case "d":
                  case "D":
                  case "DDD":
                    return e + "日";

                  case "M":
                    return e + "月";

                  case "w":
                  case "W":
                    return e + "週";

                  default:
                    return e;
                }
            },
            relativeTime: {
                future: "%s內",
                past: "%s前",
                s: "幾秒",
                ss: "%d 秒",
                m: "1 分鐘",
                mm: "%d 分鐘",
                h: "1 小時",
                hh: "%d 小時",
                d: "1 天",
                dd: "%d 天",
                M: "1 個月",
                MM: "%d 個月",
                y: "1 年",
                yy: "%d 年"
            }
        });
        return t;
    });
}, , , , , , , , , , , , , , , , , , , , , , , , , , , , , function(e, t, s) {
    "use strict";
    !function() {
        window.QUnit = s(173), window.qunitTap = s(175), s(176), s(177), e.exports = window.QUnit;
    }();
}, function(e, t, s) {
    var n;
    (function(e, a) {
        /*!
	 * QUnit 1.23.1
	 * https://qunitjs.com/
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license
	 * https://jquery.org/license
	 *
	 * Date: 2016-04-12T17:29Z
	 */
        !function(e) {
            function i(e, t) {
                var s, n, a = e.slice();
                for (s = 0; s < a.length; s++) for (n = 0; n < t.length; n++) if (a[s] === t[n]) {
                    a.splice(s, 1), s--;
                    break;
                }
                return a;
            }
            function r(e, t) {
                if (t.indexOf) return t.indexOf(e);
                for (var s = 0, n = t.length; s < n; s++) if (t[s] === e) return s;
                return -1;
            }
            function o(e) {
                var t, s, n = O.is("array", e) ? [] : {};
                for (t in e) J.call(e, t) && (s = e[t], n[t] = s === Object(s) ? o(s) : s);
                return n;
            }
            function d(t, s, n) {
                for (var a in s) J.call(s, a) && ("constructor" === a && t === e || (void 0 === s[a] ? delete t[a] : n && "undefined" != typeof t[a] || (t[a] = s[a])));
                return t;
            }
            function u(e) {
                if ("undefined" == typeof e) return "undefined";
                if (null === e) return "null";
                var t = q.call(e).match(/^\[object\s(.*)\]$/), s = t && t[1];
                switch (s) {
                  case "Number":
                    return isNaN(e) ? "nan" : "number";

                  case "String":
                  case "Boolean":
                  case "Array":
                  case "Set":
                  case "Map":
                  case "Date":
                  case "RegExp":
                  case "Function":
                  case "Symbol":
                    return s.toLowerCase();
                }
                return "object" == typeof e ? "object" : void 0;
            }
            function l(e, t) {
                return O.objectType(t) === e;
            }
            function _(e, t) {
                t = void 0 === t ? 4 : t;
                var s, n, a;
                if (e.stack) {
                    if (s = e.stack.split("\n"), /^error$/i.test(s[0]) && s.shift(), z) {
                        for (n = [], a = t; a < s.length && s[a].indexOf(z) === -1; a++) n.push(s[a]);
                        if (n.length) return n.join("\n");
                    }
                    return s[t];
                }
                if (e.sourceURL) {
                    if (/qunit.js$/.test(e.sourceURL)) return;
                    return e.sourceURL + ":" + e.line;
                }
            }
            function c(e) {
                var t = new Error();
                if (!t.stack) try {
                    throw t;
                } catch (e) {
                    t = e;
                }
                return _(t, e);
            }
            function h(e) {
                function t(e) {
                    var t = function(t) {
                        if ("function" !== u(t)) throw new Error("QUnit logging methods require a callback function as their first parameters.");
                        B.callbacks[e].push(t);
                    };
                    return G[e] = t, t;
                }
                var s, n, a, i = [ "begin", "done", "log", "testStart", "testDone", "moduleStart", "moduleDone" ];
                for (s = 0, n = i.length; s < n; s++) a = i[s], "undefined" === u(B.callbacks[a]) && (B.callbacks[a] = []), 
                e[a] = t(a);
            }
            function m(e, t) {
                var s, n, a;
                for (a = B.callbacks[e], s = 0, n = a.length; s < n; s++) a[s](t);
            }
            function f() {
                var t, s;
                for (t in G) O[t] !== G[t] && (s = O[t], O[t] = G[t], O[t](s), e.console && e.console.warn && e.console.warn("QUnit." + t + " was replaced with a new value.\nPlease, check out the documentation on how to apply logging callbacks.\nReference: https://api.qunitjs.com/category/callbacks/"));
            }
            function p() {
                var e, t, s = [];
                if (!B.started) {
                    for (B.started = C(), f(), "" === B.modules[0].name && 0 === B.modules[0].tests.length && B.modules.shift(), 
                    e = 0, t = B.modules.length; e < t; e++) s.push({
                        name: B.modules[e].name,
                        tests: B.modules[e].tests
                    });
                    m("begin", {
                        totalTests: k.count,
                        modules: s
                    });
                }
                B.blocking = !1, M(!0);
            }
            function M(e) {
                function t() {
                    M(e);
                }
                var s = C();
                for (B.depth = (B.depth || 0) + 1; B.queue.length && !B.blocking; ) {
                    if (!(!N.setTimeout || B.updateRate <= 0 || C() - s < B.updateRate)) {
                        W(t, 13);
                        break;
                    }
                    B.current && (B.current.usedAsync = !1), B.queue.shift()();
                }
                B.depth--, !e || B.blocking || B.queue.length || 0 !== B.depth || g();
            }
            function y() {
                B.blocking = !0, B.testTimeout && N.setTimeout && (F(B.timeout), B.timeout = W(function() {
                    if (!B.current) throw new Error("Test timed out");
                    B.current.semaphore = 0, O.pushFailure("Test timed out", c(2)), L();
                }, B.testTimeout));
            }
            function L() {
                U = !0, N.setTimeout ? W(function() {
                    B.current && B.current.semaphore > 0 || (B.timeout && F(B.timeout), p());
                }, 13) : p();
            }
            function g() {
                var e, t;
                B.autorun = !0, B.previousModule && m("moduleDone", {
                    name: B.previousModule.name,
                    tests: B.previousModule.tests,
                    failed: B.moduleStats.bad,
                    passed: B.moduleStats.all - B.moduleStats.bad,
                    total: B.moduleStats.all,
                    runtime: C() - B.moduleStats.started
                }), delete B.previousModule, e = C() - B.started, t = B.stats.all - B.stats.bad, 
                m("done", {
                    failed: B.stats.bad,
                    passed: t,
                    total: B.stats.all,
                    runtime: e
                });
            }
            function Y(e, t) {
                return void 0 === e.testEnvironment && (e.testEnvironment = {}), function(s) {
                    e.testEnvironment[t] = s;
                };
            }
            function k(e) {
                var t, s;
                for (++k.count, d(this, e), this.assertions = [], this.semaphore = 0, this.usedAsync = !1, 
                this.module = B.currentModule, this.stack = c(3), t = 0, s = this.module.tests; t < s.length; t++) this.module.tests[t].name === this.testName && (this.testName += " ");
                this.testId = v(this.module.name, this.testName), this.module.tests.push({
                    name: this.testName,
                    testId: this.testId
                }), e.skip ? (this.callback = function() {}, this.async = !1, this.expected = 0) : this.assert = new P(this);
            }
            function v(e, t) {
                for (var s, n = 0, a = 0, i = e + "" + t, r = i.length; n < r; n++) a = (a << 5) - a + i.charCodeAt(n), 
                a |= 0;
                return s = (4294967296 + a).toString(16), s.length < 8 && (s = "0000000" + s), s.slice(-8);
            }
            function b(e, t, s) {
                var n, a = !t;
                if ("array" !== O.objectType(e)) t ? B.queue.splice(K++, 0, e) : s ? (V || (V = w(s)), 
                n = Math.floor(V() * (B.queue.length - K + 1)), B.queue.splice(K + n, 0, e)) : B.queue.push(e), 
                B.autorun && !B.blocking && M(a); else for (;e.length; ) b(e.shift());
            }
            function w(e) {
                var t = parseInt(v(e), 16) || -1;
                return function() {
                    return t ^= t << 13, t ^= t >>> 17, t ^= t << 5, t < 0 && (t += 4294967296), t / 4294967296;
                };
            }
            function D() {
                if (B.pollution = [], B.noglobals) for (var t in e) if (J.call(e, t)) {
                    if (/^qunit-test-output/.test(t)) continue;
                    B.pollution.push(t);
                }
            }
            function T() {
                var e, t, s = B.pollution;
                D(), e = i(B.pollution, s), e.length > 0 && O.pushFailure("Introduced global variable(s): " + e.join(", ")), 
                t = i(s, B.pollution), t.length > 0 && O.pushFailure("Deleted global variable(s): " + t.join(", "));
            }
            function S(e, t, s) {
                2 === arguments.length && (s = t, t = null), O.test(e, t, s, !0);
            }
            function x(e, t, s, n) {
                if (!Q) {
                    var a;
                    2 === arguments.length && (s = t, t = null), a = new k({
                        testName: e,
                        expected: t,
                        async: n,
                        callback: s
                    }), a.queue();
                }
            }
            function H(e) {
                if (!Q) {
                    var t = new k({
                        testName: e,
                        skip: !0
                    });
                    t.queue();
                }
            }
            function j(e, t, s, n) {
                var a;
                Q || (O.config.queue.length = 0, Q = !0, 2 === arguments.length && (s = t, t = null), 
                a = new k({
                    testName: e,
                    expected: t,
                    async: n,
                    callback: s
                }), a.queue());
            }
            function P(e) {
                this.test = e;
            }
            function E(e) {
                var t, s, n = e.toString();
                return "[object" === n.substring(0, 7) ? (t = e.name ? e.name.toString() : "Error", 
                s = e.message ? e.message.toString() : "", t && s ? t + ": " + s : t ? t : s ? s : "Error") : n;
            }
            var O = {}, A = e.Date, C = A.now || function() {
                return new A().getTime();
            }, W = e.setTimeout, F = e.clearTimeout, R = e.window, N = {
                document: R && void 0 !== R.document,
                setTimeout: void 0 !== W,
                sessionStorage: function() {
                    var e = "qunit-test-string";
                    try {
                        return sessionStorage.setItem(e, e), sessionStorage.removeItem(e), !0;
                    } catch (e) {
                        return !1;
                    }
                }()
            }, z = (c(0) || "").replace(/(:\d+)+\)?/, "").replace(/.+\//, ""), I = !1, U = !1, q = Object.prototype.toString, J = Object.prototype.hasOwnProperty, B = {
                queue: [],
                blocking: !0,
                reorder: !0,
                altertitle: !0,
                collapse: !0,
                scrolltop: !0,
                maxDepth: 5,
                requireExpects: !1,
                urlConfig: [],
                modules: [],
                moduleStack: [],
                currentModule: {
                    name: "",
                    tests: []
                },
                callbacks: {}
            };
            B.modules.push(B.currentModule);
            var G = {};
            !function() {
                if (N.document) {
                    var e = R.onerror;
                    R.onerror = function(t, s, n) {
                        var a = !1;
                        if (e && (a = e(t, s, n)), a !== !0) {
                            if (O.config.current) {
                                if (O.config.current.ignoreGlobalErrors) return !0;
                                O.pushFailure(t, s + ":" + n);
                            } else O.test("global failure", d(function() {
                                O.pushFailure(t, s + ":" + n);
                            }, {
                                validTest: !0
                            }));
                            return !1;
                        }
                        return a;
                    };
                }
            }(), O.isLocal = !(N.document && "file:" !== R.location.protocol), O.version = "1.23.1", 
            d(O, {
                module: function(e, t, s) {
                    function n() {
                        var s = B.moduleStack.length ? B.moduleStack.slice(-1)[0] : null, n = null !== s ? [ s.name, e ].join(" > ") : e, a = {
                            name: n,
                            parentModule: s,
                            tests: [],
                            moduleId: v(n)
                        }, i = {};
                        return s && (d(i, s.testEnvironment), delete i.beforeEach, delete i.afterEach), 
                        d(i, t), a.testEnvironment = i, B.modules.push(a), a;
                    }
                    function a(e) {
                        B.currentModule = e;
                    }
                    var i, r, o = B.currentModule;
                    2 === arguments.length && "function" === u(t) && (s = t, t = void 0), t && t.setup && (t.beforeEach = t.setup, 
                    delete t.setup), t && t.teardown && (t.afterEach = t.teardown, delete t.teardown), 
                    i = n(), r = {
                        beforeEach: Y(i, "beforeEach"),
                        afterEach: Y(i, "afterEach")
                    }, "function" === u(s) && (B.moduleStack.push(i), a(i), s.call(i.testEnvironment, r), 
                    B.moduleStack.pop(), i = i.parentModule || o), a(i);
                },
                asyncTest: S,
                test: x,
                skip: H,
                only: j,
                start: function(e) {
                    var t = I;
                    if (B.current) {
                        if (B.current.semaphore -= e || 1, isNaN(B.current.semaphore)) return B.current.semaphore = 0, 
                        void O.pushFailure("Called start() with a non-numeric decrement.", c(2));
                        if (B.current.semaphore > 0) return;
                        if (B.current.semaphore < 0) return B.current.semaphore = 0, void O.pushFailure("Called start() while already started (test's semaphore was 0 already)", c(2));
                    } else {
                        if (I = !0, U) throw new Error("Called start() outside of a test context while already started");
                        if (t || e > 1) throw new Error("Called start() outside of a test context too many times");
                        if (B.autostart) throw new Error("Called start() outside of a test context when QUnit.config.autostart was true");
                        if (!B.pageLoaded) return void (B.autostart = !0);
                    }
                    L();
                },
                stop: function(e) {
                    if (!B.current) throw new Error("Called stop() outside of a test context");
                    B.current.semaphore += e || 1, y();
                },
                config: B,
                is: l,
                objectType: u,
                extend: d,
                load: function() {
                    B.pageLoaded = !0, d(B, {
                        stats: {
                            all: 0,
                            bad: 0
                        },
                        moduleStats: {
                            all: 0,
                            bad: 0
                        },
                        started: 0,
                        updateRate: 1e3,
                        autostart: !0,
                        filter: ""
                    }, !0), B.blocking = !1, B.autostart && L();
                },
                stack: function(e) {
                    return e = (e || 0) + 2, c(e);
                }
            }), h(O);
            var V, Q = !1, K = 0;
            k.count = 0, k.prototype = {
                before: function() {
                    this.module === B.previousModule && J.call(B, "previousModule") || (J.call(B, "previousModule") && m("moduleDone", {
                        name: B.previousModule.name,
                        tests: B.previousModule.tests,
                        failed: B.moduleStats.bad,
                        passed: B.moduleStats.all - B.moduleStats.bad,
                        total: B.moduleStats.all,
                        runtime: C() - B.moduleStats.started
                    }), B.previousModule = this.module, B.moduleStats = {
                        all: 0,
                        bad: 0,
                        started: C()
                    }, m("moduleStart", {
                        name: this.module.name,
                        tests: this.module.tests
                    })), B.current = this, this.module.testEnvironment && (delete this.module.testEnvironment.beforeEach, 
                    delete this.module.testEnvironment.afterEach), this.testEnvironment = d({}, this.module.testEnvironment), 
                    this.started = C(), m("testStart", {
                        name: this.testName,
                        module: this.module.name,
                        testId: this.testId
                    }), B.pollution || D();
                },
                run: function() {
                    function e(e) {
                        t = e.callback.call(e.testEnvironment, e.assert), e.resolvePromise(t);
                    }
                    var t;
                    if (B.current = this, this.async && O.stop(), this.callbackStarted = C(), B.notrycatch) return void e(this);
                    try {
                        e(this);
                    } catch (e) {
                        this.pushFailure("Died on test #" + (this.assertions.length + 1) + " " + this.stack + ": " + (e.message || e), _(e, 0)), 
                        D(), B.blocking && O.start();
                    }
                },
                after: function() {
                    T();
                },
                queueHook: function(e, t) {
                    var s, n = this;
                    return function() {
                        function a() {
                            s = e.call(n.testEnvironment, n.assert), n.resolvePromise(s, t);
                        }
                        if (B.current = n, B.notrycatch) return void a();
                        try {
                            a();
                        } catch (e) {
                            n.pushFailure(t + " failed on " + n.testName + ": " + (e.message || e), _(e, 0));
                        }
                    };
                },
                hooks: function(e) {
                    function t(n, a) {
                        a.parentModule && t(n, a.parentModule), a.testEnvironment && "function" === O.objectType(a.testEnvironment[e]) && s.push(n.queueHook(a.testEnvironment[e], e));
                    }
                    var s = [];
                    return this.skip || t(this, this.module), s;
                },
                finish: function() {
                    B.current = this, B.requireExpects && null === this.expected ? this.pushFailure("Expected number of assertions to be defined, but expect() was not called.", this.stack) : null !== this.expected && this.expected !== this.assertions.length ? this.pushFailure("Expected " + this.expected + " assertions, but " + this.assertions.length + " were run", this.stack) : null !== this.expected || this.assertions.length || this.pushFailure("Expected at least one assertion, but none were run - call expect(0) to accept zero assertions.", this.stack);
                    var e, t = 0;
                    for (this.runtime = C() - this.started, B.stats.all += this.assertions.length, B.moduleStats.all += this.assertions.length, 
                    e = 0; e < this.assertions.length; e++) this.assertions[e].result || (t++, B.stats.bad++, 
                    B.moduleStats.bad++);
                    m("testDone", {
                        name: this.testName,
                        module: this.module.name,
                        skipped: !!this.skip,
                        failed: t,
                        passed: this.assertions.length - t,
                        total: this.assertions.length,
                        runtime: this.runtime,
                        assertions: this.assertions,
                        testId: this.testId,
                        source: this.stack,
                        duration: this.runtime
                    }), O.reset(), B.current = void 0;
                },
                queue: function() {
                    function e() {
                        b([ function() {
                            s.before();
                        }, s.hooks("beforeEach"), function() {
                            s.run();
                        }, s.hooks("afterEach").reverse(), function() {
                            s.after();
                        }, function() {
                            s.finish();
                        } ]);
                    }
                    var t, s = this;
                    if (this.valid()) return t = O.config.reorder && N.sessionStorage && +sessionStorage.getItem("qunit-test-" + this.module.name + "-" + this.testName), 
                    b(e, t, B.seed);
                },
                pushResult: function(e) {
                    var t, s = {
                        module: this.module.name,
                        name: this.testName,
                        result: e.result,
                        message: e.message,
                        actual: e.actual,
                        expected: e.expected,
                        testId: this.testId,
                        negative: e.negative || !1,
                        runtime: C() - this.started
                    };
                    e.result || (t = c(), t && (s.source = t)), m("log", s), this.assertions.push({
                        result: !!e.result,
                        message: e.message
                    });
                },
                pushFailure: function(e, t, s) {
                    if (!(this instanceof k)) throw new Error("pushFailure() assertion outside test context, was " + c(2));
                    var n = {
                        module: this.module.name,
                        name: this.testName,
                        result: !1,
                        message: e || "error",
                        actual: s || null,
                        testId: this.testId,
                        runtime: C() - this.started
                    };
                    t && (n.source = t), m("log", n), this.assertions.push({
                        result: !1,
                        message: e
                    });
                },
                resolvePromise: function(e, t) {
                    var s, n, a = this;
                    null != e && (s = e.then, "function" === O.objectType(s) && (O.stop(), s.call(e, function() {
                        O.start();
                    }, function(e) {
                        n = "Promise rejected " + (t ? t.replace(/Each$/, "") : "during") + " " + a.testName + ": " + (e.message || e), 
                        a.pushFailure(n, _(e, 0)), D(), O.start();
                    })));
                },
                valid: function() {
                    function e(t) {
                        var s = t.name ? t.name.toLowerCase() : null;
                        return s === a || !!t.parentModule && e(t.parentModule);
                    }
                    function t(e) {
                        return r(e.moduleId, B.moduleId) > -1 || e.parentModule && t(e.parentModule);
                    }
                    var s = B.filter, n = /^(!?)\/([\w\W]*)\/(i?$)/.exec(s), a = B.module && B.module.toLowerCase(), i = this.module.name + ": " + this.testName;
                    return !(!this.callback || !this.callback.validTest) || !(B.moduleId && B.moduleId.length > 0 && !t(this.module)) && (!(B.testId && B.testId.length > 0 && r(this.testId, B.testId) < 0) && (!(a && !e(this.module)) && (!s || (n ? this.regexFilter(!!n[1], n[2], n[3], i) : this.stringFilter(s, i)))));
                },
                regexFilter: function(e, t, s, n) {
                    var a = new RegExp(t, s), i = a.test(n);
                    return i !== e;
                },
                stringFilter: function(e, t) {
                    e = e.toLowerCase(), t = t.toLowerCase();
                    var s = "!" !== e.charAt(0);
                    return s || (e = e.slice(1)), t.indexOf(e) !== -1 ? s : !s;
                }
            }, O.reset = function() {
                if (N.document) {
                    var e = N.document && document.getElementById && document.getElementById("qunit-fixture");
                    e && (e.innerHTML = B.fixture);
                }
            }, O.pushFailure = function() {
                if (!O.config.current) throw new Error("pushFailure() assertion outside test context, in " + c(2));
                var e = O.config.current;
                return e.pushFailure.apply(e, arguments);
            }, O.assert = P.prototype = {
                expect: function(e) {
                    return 1 !== arguments.length ? this.test.expected : void (this.test.expected = e);
                },
                async: function(e) {
                    var t = this.test, s = !1, n = e;
                    return "undefined" == typeof n && (n = 1), t.semaphore += 1, t.usedAsync = !0, y(), 
                    function() {
                        return s ? void t.pushFailure("Too many calls to the `assert.async` callback", c(2)) : (n -= 1, 
                        void (n > 0 || (t.semaphore -= 1, s = !0, L())));
                    };
                },
                push: function(e, t, s, n, a) {
                    var i = this instanceof P ? this : O.config.current.assert;
                    return i.pushResult({
                        result: e,
                        actual: t,
                        expected: s,
                        message: n,
                        negative: a
                    });
                },
                pushResult: function(e) {
                    var t = this, s = t instanceof P && t.test || O.config.current;
                    if (!s) throw new Error("assertion outside test context, in " + c(2));
                    return s.usedAsync === !0 && 0 === s.semaphore && s.pushFailure("Assertion after the final `assert.async` was resolved", c(2)), 
                    t instanceof P || (t = s.assert), t.test.pushResult(e);
                },
                ok: function(e, t) {
                    t = t || (e ? "okay" : "failed, expected argument to be truthy, was: " + O.dump.parse(e)), 
                    this.pushResult({
                        result: !!e,
                        actual: e,
                        expected: !0,
                        message: t
                    });
                },
                notOk: function(e, t) {
                    t = t || (e ? "failed, expected argument to be falsy, was: " + O.dump.parse(e) : "okay"), 
                    this.pushResult({
                        result: !e,
                        actual: e,
                        expected: !1,
                        message: t
                    });
                },
                equal: function(e, t, s) {
                    this.pushResult({
                        result: t == e,
                        actual: e,
                        expected: t,
                        message: s
                    });
                },
                notEqual: function(e, t, s) {
                    this.pushResult({
                        result: t != e,
                        actual: e,
                        expected: t,
                        message: s,
                        negative: !0
                    });
                },
                propEqual: function(e, t, s) {
                    e = o(e), t = o(t), this.pushResult({
                        result: O.equiv(e, t),
                        actual: e,
                        expected: t,
                        message: s
                    });
                },
                notPropEqual: function(e, t, s) {
                    e = o(e), t = o(t), this.pushResult({
                        result: !O.equiv(e, t),
                        actual: e,
                        expected: t,
                        message: s,
                        negative: !0
                    });
                },
                deepEqual: function(e, t, s) {
                    this.pushResult({
                        result: O.equiv(e, t),
                        actual: e,
                        expected: t,
                        message: s
                    });
                },
                notDeepEqual: function(e, t, s) {
                    this.pushResult({
                        result: !O.equiv(e, t),
                        actual: e,
                        expected: t,
                        message: s,
                        negative: !0
                    });
                },
                strictEqual: function(e, t, s) {
                    this.pushResult({
                        result: t === e,
                        actual: e,
                        expected: t,
                        message: s
                    });
                },
                notStrictEqual: function(e, t, s) {
                    this.pushResult({
                        result: t !== e,
                        actual: e,
                        expected: t,
                        message: s,
                        negative: !0
                    });
                },
                throws: function(e, t, s) {
                    var n, a, i = t, r = !1, o = this instanceof P && this.test || O.config.current;
                    null == s && "string" == typeof t && (s = t, t = null), o.ignoreGlobalErrors = !0;
                    try {
                        e.call(o.testEnvironment);
                    } catch (e) {
                        n = e;
                    }
                    o.ignoreGlobalErrors = !1, n && (a = O.objectType(t), t ? "regexp" === a ? r = t.test(E(n)) : "string" === a ? r = t === E(n) : "function" === a && n instanceof t ? r = !0 : "object" === a ? r = n instanceof t.constructor && n.name === t.name && n.message === t.message : "function" === a && t.call({}, n) === !0 && (i = null, 
                    r = !0) : (r = !0, i = null)), o.assert.pushResult({
                        result: r,
                        actual: n,
                        expected: i,
                        message: s
                    });
                }
            }, function() {
                P.prototype.raises = P.prototype.throws;
            }(), O.equiv = function() {
                function e(e, t) {
                    return "object" == typeof t && (t = t.valueOf()), "object" == typeof e && (e = e.valueOf()), 
                    t === e;
                }
                function t(e, t) {
                    var s = d(e), n = d(t);
                    return e.constructor === t.constructor || (s && null === s.constructor && (s = null), 
                    n && null === n.constructor && (n = null), null === s && n === Object.prototype || null === n && s === Object.prototype);
                }
                function s(e) {
                    return "flags" in e ? e.flags : e.toString().match(/[gimuy]*$/)[0];
                }
                function n(e, t) {
                    var s = O.objectType(e);
                    return O.objectType(t) === s && u[s](t, e);
                }
                function a(e, t) {
                    return arguments.length < 2 || (e === t || n(e, t)) && (2 === arguments.length || a.apply(this, [].slice.call(arguments, 1)));
                }
                var i = [], r = [], o = [], d = Object.getPrototypeOf || function(e) {
                    return e.__proto__;
                }, u = {
                    string: e,
                    boolean: e,
                    number: e,
                    null: e,
                    undefined: e,
                    symbol: e,
                    date: e,
                    nan: function() {
                        return !0;
                    },
                    regexp: function(e, t) {
                        return t.source === e.source && s(t) === s(e);
                    },
                    function: function() {
                        var e = i[i.length - 1];
                        return e !== Object && "undefined" != typeof e;
                    },
                    array: function(e, t) {
                        var s, n, i, d, u, l;
                        if (i = t.length, i !== e.length) return !1;
                        for (r.push(t), o.push(e), s = 0; s < i; s++) {
                            for (d = !1, n = 0; n < r.length; n++) if (u = r[n] === t[s], l = o[n] === e[s], 
                            u || l) {
                                if (!(t[s] === e[s] || u && l)) return r.pop(), o.pop(), !1;
                                d = !0;
                            }
                            if (!d && !a(t[s], e[s])) return r.pop(), o.pop(), !1;
                        }
                        return r.pop(), o.pop(), !0;
                    },
                    set: function(e, t) {
                        var s, n = !0;
                        return t.size === e.size && (t.forEach(function(t) {
                            s = !1, e.forEach(function(e) {
                                a(e, t) && (s = !0);
                            }), s || (n = !1);
                        }), n);
                    },
                    map: function(e, t) {
                        var s, n = !0;
                        return t.size === e.size && (t.forEach(function(t, i) {
                            s = !1, e.forEach(function(e, n) {
                                a([ e, n ], [ t, i ]) && (s = !0);
                            }), s || (n = !1);
                        }), n);
                    },
                    object: function(e, s) {
                        var n, d, u, l, _, c = !0, h = [], m = [];
                        if (t(s, e) === !1) return !1;
                        i.push(s.constructor), r.push(s), o.push(e);
                        for (n in s) {
                            for (u = !1, d = 0; d < r.length; d++) if (l = r[d] === s[n], _ = o[d] === e[n], 
                            l || _) {
                                if (!(s[n] === e[n] || l && _)) {
                                    c = !1;
                                    break;
                                }
                                u = !0;
                            }
                            if (h.push(n), !u && !a(s[n], e[n])) {
                                c = !1;
                                break;
                            }
                        }
                        r.pop(), o.pop(), i.pop();
                        for (n in e) m.push(n);
                        return c && a(h.sort(), m.sort());
                    }
                };
                return a;
            }(), O.dump = function() {
                function e(e) {
                    return '"' + e.toString().replace(/\\/g, "\\\\").replace(/"/g, '\\"') + '"';
                }
                function t(e) {
                    return e + "";
                }
                function s(e, t, s) {
                    var n = i.separator(), a = i.indent(), r = i.indent(1);
                    return t.join && (t = t.join("," + n + r)), t ? [ e, r + t, a + s ].join(n) : e + s;
                }
                function n(e, t) {
                    var n = e.length, a = new Array(n);
                    if (i.maxDepth && i.depth > i.maxDepth) return "[object Array]";
                    for (this.up(); n--; ) a[n] = this.parse(e[n], void 0, t);
                    return this.down(), s("[", a, "]");
                }
                var a = /^function (\w+)/, i = {
                    parse: function(e, t, s) {
                        s = s || [];
                        var n, a, i, o = r(e, s);
                        return o !== -1 ? "recursion(" + (o - s.length) + ")" : (t = t || this.typeOf(e), 
                        a = this.parsers[t], i = typeof a, "function" === i ? (s.push(e), n = a.call(this, e, s), 
                        s.pop(), n) : "string" === i ? a : this.parsers.error);
                    },
                    typeOf: function(e) {
                        var t;
                        return t = null === e ? "null" : "undefined" == typeof e ? "undefined" : O.is("regexp", e) ? "regexp" : O.is("date", e) ? "date" : O.is("function", e) ? "function" : void 0 !== e.setInterval && void 0 !== e.document && void 0 === e.nodeType ? "window" : 9 === e.nodeType ? "document" : e.nodeType ? "node" : "[object Array]" === q.call(e) || "number" == typeof e.length && void 0 !== e.item && (e.length ? e.item(0) === e[0] : null === e.item(0) && void 0 === e[0]) ? "array" : e.constructor === Error.prototype.constructor ? "error" : typeof e;
                    },
                    separator: function() {
                        return this.multiline ? this.HTML ? "<br />" : "\n" : this.HTML ? "&#160;" : " ";
                    },
                    indent: function(e) {
                        if (!this.multiline) return "";
                        var t = this.indentChar;
                        return this.HTML && (t = t.replace(/\t/g, "   ").replace(/ /g, "&#160;")), new Array(this.depth + (e || 0)).join(t);
                    },
                    up: function(e) {
                        this.depth += e || 1;
                    },
                    down: function(e) {
                        this.depth -= e || 1;
                    },
                    setParser: function(e, t) {
                        this.parsers[e] = t;
                    },
                    quote: e,
                    literal: t,
                    join: s,
                    depth: 1,
                    maxDepth: O.config.maxDepth,
                    parsers: {
                        window: "[Window]",
                        document: "[Document]",
                        error: function(e) {
                            return 'Error("' + e.message + '")';
                        },
                        unknown: "[Unknown]",
                        null: "null",
                        undefined: "undefined",
                        function: function(e) {
                            var t = "function", n = "name" in e ? e.name : (a.exec(e) || [])[1];
                            return n && (t += " " + n), t += "(", t = [ t, i.parse(e, "functionArgs"), "){" ].join(""), 
                            s(t, i.parse(e, "functionCode"), "}");
                        },
                        array: n,
                        nodelist: n,
                        arguments: n,
                        object: function(e, t) {
                            var n, a, o, d, u, l = [];
                            if (i.maxDepth && i.depth > i.maxDepth) return "[object Object]";
                            i.up(), n = [];
                            for (a in e) n.push(a);
                            u = [ "message", "name" ];
                            for (d in u) a = u[d], a in e && r(a, n) < 0 && n.push(a);
                            for (n.sort(), d = 0; d < n.length; d++) a = n[d], o = e[a], l.push(i.parse(a, "key") + ": " + i.parse(o, void 0, t));
                            return i.down(), s("{", l, "}");
                        },
                        node: function(e) {
                            var t, s, n, a = i.HTML ? "&lt;" : "<", r = i.HTML ? "&gt;" : ">", o = e.nodeName.toLowerCase(), d = a + o, u = e.attributes;
                            if (u) for (s = 0, t = u.length; s < t; s++) n = u[s].nodeValue, n && "inherit" !== n && (d += " " + u[s].nodeName + "=" + i.parse(n, "attribute"));
                            return d += r, 3 !== e.nodeType && 4 !== e.nodeType || (d += e.nodeValue), d + a + "/" + o + r;
                        },
                        functionArgs: function(e) {
                            var t, s = e.length;
                            if (!s) return "";
                            for (t = new Array(s); s--; ) t[s] = String.fromCharCode(97 + s);
                            return " " + t.join(", ") + " ";
                        },
                        key: e,
                        functionCode: "[code]",
                        attribute: e,
                        string: e,
                        date: e,
                        regexp: t,
                        number: t,
                        boolean: t
                    },
                    HTML: !1,
                    indentChar: "  ",
                    multiline: !0
                };
                return i;
            }(), O.jsDump = O.dump, function() {
                function e(e) {
                    return function() {
                        var t = new P(O.config.current);
                        e.apply(t, arguments);
                    };
                }
                var t, s = P.prototype;
                for (t in s) O[t] = e(s[t]);
            }(), N.document && (!function() {
                var e, t, s = [ "test", "module", "expect", "asyncTest", "start", "stop", "ok", "notOk", "equal", "notEqual", "propEqual", "notPropEqual", "deepEqual", "notDeepEqual", "strictEqual", "notStrictEqual", "throws", "raises" ];
                for (e = 0, t = s.length; e < t; e++) R[s[e]] = O[s[e]];
            }(), R.QUnit = O), "undefined" != typeof a && a && a.exports && (a.exports = O, 
            a.exports.QUnit = O), "undefined" != typeof t && t && (t.QUnit = O), n = function() {
                return O;
            }.call(t, s, t, a), !(void 0 !== n && (a.exports = n)), O.config.autostart = !1;
        }(function() {
            return this;
        }()), function() {
            function e() {
                var e, t, s, n, a = {}, i = x.search.slice(1).split("&"), r = i.length;
                for (e = 0; e < r; e++) i[e] && (t = i[e].split("="), s = decodeURIComponent(t[0]), 
                n = 1 === t.length || decodeURIComponent(t.slice(1).join("=")), a[s] ? a[s] = [].concat(a[s], n) : a[s] = n);
                return a;
            }
            function t(e) {
                return e ? (e += "", e.replace(/['"<>&]/g, function(e) {
                    switch (e) {
                      case "'":
                        return "&#039;";

                      case '"':
                        return "&quot;";

                      case "<":
                        return "&lt;";

                      case ">":
                        return "&gt;";

                      case "&":
                        return "&amp;";
                    }
                })) : "";
            }
            function s(e, t, s) {
                e.addEventListener ? e.addEventListener(t, s, !1) : e.attachEvent && e.attachEvent("on" + t, function() {
                    var t = window.event;
                    t.target || (t.target = t.srcElement || P), s.call(e, t);
                });
            }
            function n(e, t, n) {
                for (var a = e.length; a--; ) s(e[a], t, n);
            }
            function a(e, t) {
                return (" " + e.className + " ").indexOf(" " + t + " ") >= 0;
            }
            function i(e, t) {
                a(e, t) || (e.className += (e.className ? " " : "") + t);
            }
            function r(e, t, s) {
                s || "undefined" == typeof s && !a(e, t) ? i(e, t) : o(e, t);
            }
            function o(e, t) {
                for (var s = " " + e.className + " "; s.indexOf(" " + t + " ") >= 0; ) s = s.replace(" " + t + " ", " ");
                e.className = "function" == typeof s.trim ? s.trim() : s.replace(/^\s+|\s+$/g, "");
            }
            function d(e) {
                return P.getElementById && P.getElementById(e);
            }
            function u() {
                var e, s, n, a, i, r = !1, o = j.urlConfig, d = "";
                for (e = 0; e < o.length; e++) if (n = j.urlConfig[e], "string" == typeof n && (n = {
                    id: n,
                    label: n
                }), a = t(n.id), i = t(n.tooltip), n.value && "string" != typeof n.value) {
                    if (d += "<label for='qunit-urlconfig-" + a + "' title='" + i + "'>" + n.label + ": </label><select id='qunit-urlconfig-" + a + "' name='" + a + "' title='" + i + "'><option></option>", 
                    QUnit.is("array", n.value)) for (s = 0; s < n.value.length; s++) a = t(n.value[s]), 
                    d += "<option value='" + a + "'" + (j[n.id] === n.value[s] ? (r = !0) && " selected='selected'" : "") + ">" + a + "</option>"; else for (s in n.value) O.call(n.value, s) && (d += "<option value='" + t(s) + "'" + (j[n.id] === s ? (r = !0) && " selected='selected'" : "") + ">" + t(n.value[s]) + "</option>");
                    j[n.id] && !r && (a = t(j[n.id]), d += "<option value='" + a + "' selected='selected' disabled='disabled'>" + a + "</option>"), 
                    d += "</select>";
                } else d += "<input id='qunit-urlconfig-" + a + "' name='" + a + "' type='checkbox'" + (n.value ? " value='" + t(n.value) + "'" : "") + (j[n.id] ? " checked='checked'" : "") + " title='" + i + "' /><label for='qunit-urlconfig-" + a + "' title='" + i + "'>" + n.label + "</label>";
                return d;
            }
            function l() {
                var e, t, s, n = this, a = {};
                t = "selectedIndex" in n ? n.options[n.selectedIndex].value || void 0 : n.checked ? n.defaultValue || !0 : void 0, 
                a[n.name] = t, e = _(a), "hidepassed" === n.name && "replaceState" in window.history ? (QUnit.urlParams[n.name] = t, 
                j[n.name] = t || !1, s = d("qunit-tests"), s && r(s, "hidepass", t || !1), window.history.replaceState(null, "", e)) : window.location = e;
            }
            function _(e) {
                var t, s, n, a = "?", i = window.location;
                e = QUnit.extend(QUnit.extend({}, QUnit.urlParams), e);
                for (t in e) if (O.call(e, t) && void 0 !== e[t]) for (s = [].concat(e[t]), n = 0; n < s.length; n++) a += encodeURIComponent(t), 
                s[n] !== !0 && (a += "=" + encodeURIComponent(s[n])), a += "&";
                return i.protocol + "//" + i.host + i.pathname + a.slice(0, -1);
            }
            function c() {
                var e, t = d("qunit-modulefilter"), s = d("qunit-filter-input").value;
                e = t ? decodeURIComponent(t.options[t.selectedIndex].value) : void 0, window.location = _({
                    module: "" === e ? void 0 : e,
                    filter: "" === s ? void 0 : s,
                    moduleId: void 0,
                    testId: void 0
                });
            }
            function h() {
                var e = P.createElement("span");
                return e.innerHTML = u(), i(e, "qunit-url-config"), n(e.getElementsByTagName("input"), "click", l), 
                n(e.getElementsByTagName("select"), "change", l), e;
            }
            function m() {
                var e = P.createElement("form"), t = P.createElement("label"), n = P.createElement("input"), a = P.createElement("button");
                return i(e, "qunit-filter"), t.innerHTML = "Filter: ", n.type = "text", n.value = j.filter || "", 
                n.name = "filter", n.id = "qunit-filter-input", a.innerHTML = "Go", t.appendChild(n), 
                e.appendChild(t), e.appendChild(a), s(e, "submit", function(e) {
                    return c(), e && e.preventDefault && e.preventDefault(), !1;
                }), e;
            }
            function f() {
                var e, s = "";
                if (!W.length) return !1;
                for (s += "<label for='qunit-modulefilter'>Module: </label><select id='qunit-modulefilter' name='modulefilter'><option value='' " + (void 0 === QUnit.urlParams.module ? "selected='selected'" : "") + ">< All Modules ></option>", 
                e = 0; e < W.length; e++) s += "<option value='" + t(encodeURIComponent(W[e])) + "' " + (QUnit.urlParams.module === W[e] ? "selected='selected'" : "") + ">" + t(W[e]) + "</option>";
                return s += "</select>";
            }
            function p() {
                var e = d("qunit-testrunner-toolbar"), t = P.createElement("span"), n = f();
                return !(!e || !n) && (t.setAttribute("id", "qunit-modulefilter-container"), t.innerHTML = n, 
                s(t.lastChild, "change", c), void e.appendChild(t));
            }
            function M() {
                var e = d("qunit-testrunner-toolbar");
                e && (e.appendChild(h()), e.appendChild(m()), p());
            }
            function y() {
                var e = d("qunit-header");
                e && (e.innerHTML = "<a href='" + t(A) + "'>" + e.innerHTML + "</a> ");
            }
            function L() {
                var e = d("qunit-banner");
                e && (e.className = "");
            }
            function g() {
                var e = d("qunit-tests"), t = d("qunit-testresult");
                t && t.parentNode.removeChild(t), e && (e.innerHTML = "", t = P.createElement("p"), 
                t.id = "qunit-testresult", t.className = "result", e.parentNode.insertBefore(t, e), 
                t.innerHTML = "Running...<br />&#160;");
            }
            function Y() {
                var e = d("qunit-fixture");
                e && (j.fixture = e.innerHTML);
            }
            function k() {
                var e = QUnit.config.testId;
                return !e || e.length <= 0 ? "" : "<div id='qunit-filteredTest'>Rerunning selected tests: " + t(e.join(", ")) + " <a id='qunit-clearFilter' href='" + t(A) + "'>Run all tests</a></div>";
            }
            function v() {
                var e = d("qunit-userAgent");
                e && (e.innerHTML = "", e.appendChild(P.createTextNode("QUnit " + QUnit.version + "; " + navigator.userAgent)));
            }
            function b() {
                var e = d("qunit");
                e && (e.innerHTML = "<h1 id='qunit-header'>" + t(P.title) + "</h1><h2 id='qunit-banner'></h2><div id='qunit-testrunner-toolbar'></div>" + k() + "<h2 id='qunit-userAgent'></h2><ol id='qunit-tests'></ol>"), 
                y(), L(), g(), v(), M();
            }
            function w(e) {
                var t, s, n, a, i, r;
                for (t = 0, s = e.length; t < s; t++) for (r = e[t], n = 0, a = r.tests.length; n < a; n++) i = r.tests[n], 
                D(i.name, i.testId, r.name);
            }
            function D(e, t, s) {
                var n, a, i, r, o = d("qunit-tests");
                o && (n = P.createElement("strong"), n.innerHTML = T(e, s), a = P.createElement("a"), 
                a.innerHTML = "Rerun", a.href = _({
                    testId: t
                }), i = P.createElement("li"), i.appendChild(n), i.appendChild(a), i.id = "qunit-test-output-" + t, 
                r = P.createElement("ol"), r.className = "qunit-assert-list", i.appendChild(r), 
                o.appendChild(i));
            }
            function T(e, s) {
                var n = "";
                return s && (n = "<span class='module-name'>" + t(s) + "</span>: "), n += "<span class='test-name'>" + t(e) + "</span>";
            }
            function S(e) {
                return e.replace(/<\/?[^>]+(>|$)/g, "").replace(/\&quot;/g, "").replace(/\s+/g, "");
            }
            var x = "undefined" != typeof window && window.location;
            if (x) {
                var H = e();
                if (QUnit.urlParams = H, QUnit.config.moduleId = [].concat(H.moduleId || []), QUnit.config.testId = [].concat(H.testId || []), 
                QUnit.config.module = H.module, QUnit.config.filter = H.filter, H.seed === !0 ? QUnit.config.seed = Math.random().toString(36).slice(2) : H.seed && (QUnit.config.seed = H.seed), 
                QUnit.config.urlConfig.push({
                    id: "hidepassed",
                    label: "Hide passed tests",
                    tooltip: "Only show tests and assertions that fail. Stored as query-strings."
                }, {
                    id: "noglobals",
                    label: "Check for Globals",
                    tooltip: "Enabling this will test if any test introduces new properties on the global object (`window` in Browsers). Stored as query-strings."
                }, {
                    id: "notrycatch",
                    label: "No try-catch",
                    tooltip: "Enabling this will run tests outside of a try-catch block. Makes debugging exceptions in IE reasonable. Stored as query-strings."
                }), QUnit.begin(function() {
                    var e, t, s = QUnit.config.urlConfig;
                    for (e = 0; e < s.length; e++) t = QUnit.config.urlConfig[e], "string" != typeof t && (t = t.id), 
                    void 0 === QUnit.config[t] && (QUnit.config[t] = H[t]);
                }), "undefined" != typeof window && window.document) {
                    QUnit.init = function() {
                        var e = QUnit.config;
                        e.stats = {
                            all: 0,
                            bad: 0
                        }, e.moduleStats = {
                            all: 0,
                            bad: 0
                        }, e.started = 0, e.updateRate = 1e3, e.blocking = !1, e.autostart = !0, e.autorun = !1, 
                        e.filter = "", e.queue = [], b();
                    };
                    var j = QUnit.config, P = window.document, E = !1, O = Object.prototype.hasOwnProperty, A = _({
                        filter: void 0,
                        module: void 0,
                        moduleId: void 0,
                        testId: void 0
                    }), C = {
                        sessionStorage: function() {
                            var e = "qunit-test-string";
                            try {
                                return sessionStorage.setItem(e, e), sessionStorage.removeItem(e), !0;
                            } catch (e) {
                                return !1;
                            }
                        }()
                    }, W = [];
                    QUnit.begin(function(e) {
                        var t, s, n;
                        for (t = 0; t < e.modules.length; t++) s = e.modules[t], s.name && W.push(s.name);
                        W.sort(function(e, t) {
                            return e.localeCompare(t);
                        }), Y(), b(), w(e.modules), n = d("qunit-tests"), n && j.hidepassed && i(n, "hidepass");
                    }), QUnit.done(function(e) {
                        var t, s, n = d("qunit-banner"), a = d("qunit-tests"), i = [ "Tests completed in ", e.runtime, " milliseconds.<br />", "<span class='passed'>", e.passed, "</span> assertions of <span class='total'>", e.total, "</span> passed, <span class='failed'>", e.failed, "</span> failed." ].join("");
                        if (n && (n.className = e.failed ? "qunit-fail" : "qunit-pass"), a && (d("qunit-testresult").innerHTML = i), 
                        j.altertitle && P.title && (P.title = [ e.failed ? "✖" : "✔", P.title.replace(/^[\u2714\u2716] /i, "") ].join(" ")), 
                        j.reorder && C.sessionStorage && 0 === e.failed) for (t = 0; t < sessionStorage.length; t++) s = sessionStorage.key(t++), 
                        0 === s.indexOf("qunit-test-") && sessionStorage.removeItem(s);
                        j.scrolltop && window.scrollTo && window.scrollTo(0, 0);
                    }), QUnit.testStart(function(e) {
                        var t, s, n;
                        s = d("qunit-test-output-" + e.testId), s ? s.className = "running" : D(e.name, e.testId, e.module), 
                        t = d("qunit-testresult"), t && (n = QUnit.config.reorder && C.sessionStorage && +sessionStorage.getItem("qunit-test-" + e.module + "-" + e.name), 
                        t.innerHTML = (n ? "Rerunning previously failed test: <br />" : "Running: <br />") + T(e.name, e.module));
                    }), QUnit.log(function(e) {
                        var s, n, a, i, r, o, u = !1, l = d("qunit-test-output-" + e.testId);
                        l && (a = t(e.message) || (e.result ? "okay" : "failed"), a = "<span class='test-message'>" + a + "</span>", 
                        a += "<span class='runtime'>@ " + e.runtime + " ms</span>", !e.result && O.call(e, "expected") ? (i = e.negative ? "NOT " + QUnit.dump.parse(e.expected) : QUnit.dump.parse(e.expected), 
                        r = QUnit.dump.parse(e.actual), a += "<table><tr class='test-expected'><th>Expected: </th><td><pre>" + t(i) + "</pre></td></tr>", 
                        r !== i ? (a += "<tr class='test-actual'><th>Result: </th><td><pre>" + t(r) + "</pre></td></tr>", 
                        /^(true|false)$/.test(r) || /^(true|false)$/.test(i) || (o = QUnit.diff(i, r), u = S(o).length !== S(i).length + S(r).length), 
                        u && (a += "<tr class='test-diff'><th>Diff: </th><td><pre>" + o + "</pre></td></tr>")) : a += i.indexOf("[object Array]") !== -1 || i.indexOf("[object Object]") !== -1 ? "<tr class='test-message'><th>Message: </th><td>Diff suppressed as the depth of object is more than current max depth (" + QUnit.config.maxDepth + ").<p>Hint: Use <code>QUnit.dump.maxDepth</code> to  run with a higher max depth or <a href='" + t(_({
                            maxDepth: -1
                        })) + "'>Rerun</a> without max depth.</p></td></tr>" : "<tr class='test-message'><th>Message: </th><td>Diff suppressed as the expected and actual results have an equivalent serialization</td></tr>", 
                        e.source && (a += "<tr class='test-source'><th>Source: </th><td><pre>" + t(e.source) + "</pre></td></tr>"), 
                        a += "</table>") : !e.result && e.source && (a += "<table><tr class='test-source'><th>Source: </th><td><pre>" + t(e.source) + "</pre></td></tr></table>"), 
                        s = l.getElementsByTagName("ol")[0], n = P.createElement("li"), n.className = e.result ? "pass" : "fail", 
                        n.innerHTML = a, s.appendChild(n));
                    }), QUnit.testDone(function(e) {
                        var t, n, a, o, u, l, _, c, h, m = d("qunit-tests");
                        m && (a = d("qunit-test-output-" + e.testId), o = a.getElementsByTagName("ol")[0], 
                        u = e.passed, l = e.failed, j.reorder && C.sessionStorage && (l ? sessionStorage.setItem("qunit-test-" + e.module + "-" + e.name, l) : sessionStorage.removeItem("qunit-test-" + e.module + "-" + e.name)), 
                        0 === l ? i(o, "qunit-collapsed") : l && j.collapse && !E ? E = !0 : i(o, "qunit-collapsed"), 
                        t = a.firstChild, _ = l ? "<b class='failed'>" + l + "</b>, <b class='passed'>" + u + "</b>, " : "", 
                        t.innerHTML += " <b class='counts'>(" + _ + e.assertions.length + ")</b>", e.skipped ? (a.className = "skipped", 
                        c = P.createElement("em"), c.className = "qunit-skipped-label", c.innerHTML = "skipped", 
                        a.insertBefore(c, t)) : (s(t, "click", function() {
                            r(o, "qunit-collapsed");
                        }), a.className = l ? "fail" : "pass", n = P.createElement("span"), n.className = "runtime", 
                        n.innerHTML = e.runtime + " ms", a.insertBefore(n, o)), e.source && (h = P.createElement("p"), 
                        h.innerHTML = "<strong>Source: </strong>" + e.source, i(h, "qunit-source"), 0 === l && i(h, "qunit-collapsed"), 
                        s(t, "click", function() {
                            r(h, "qunit-collapsed");
                        }), a.appendChild(h)));
                    });
                    var F = function(e) {
                        return !(e && e.version && e.version.major > 0);
                    }(window.phantom);
                    F && "complete" === P.readyState ? QUnit.load() : s(window, "load", QUnit.load), 
                    QUnit.diff = function() {
                        function e() {}
                        var s = -1, n = 1, a = 0;
                        return e.prototype.DiffMain = function(e, t, s) {
                            var n, i, r, o, d, u;
                            if (n = new Date().getTime() + 1e3, null === e || null === t) throw new Error("Null input. (DiffMain)");
                            return e === t ? e ? [ [ a, e ] ] : [] : ("undefined" == typeof s && (s = !0), i = s, 
                            r = this.diffCommonPrefix(e, t), o = e.substring(0, r), e = e.substring(r), t = t.substring(r), 
                            r = this.diffCommonSuffix(e, t), d = e.substring(e.length - r), e = e.substring(0, e.length - r), 
                            t = t.substring(0, t.length - r), u = this.diffCompute(e, t, i, n), o && u.unshift([ a, o ]), 
                            d && u.push([ a, d ]), this.diffCleanupMerge(u), u);
                        }, e.prototype.diffCleanupEfficiency = function(e) {
                            var t, i, r, o, d, u, l, _, c;
                            for (t = !1, i = [], r = 0, o = null, d = 0, u = !1, l = !1, _ = !1, c = !1; d < e.length; ) e[d][0] === a ? (e[d][1].length < 4 && (_ || c) ? (i[r++] = d, 
                            u = _, l = c, o = e[d][1]) : (r = 0, o = null), _ = c = !1) : (e[d][0] === s ? c = !0 : _ = !0, 
                            o && (u && l && _ && c || o.length < 2 && u + l + _ + c === 3) && (e.splice(i[r - 1], 0, [ s, o ]), 
                            e[i[r - 1] + 1][0] = n, r--, o = null, u && l ? (_ = c = !0, r = 0) : (r--, d = r > 0 ? i[r - 1] : -1, 
                            _ = c = !1), t = !0)), d++;
                            t && this.diffCleanupMerge(e);
                        }, e.prototype.diffPrettyHtml = function(e) {
                            var i, r, o, d = [];
                            for (o = 0; o < e.length; o++) switch (i = e[o][0], r = e[o][1], i) {
                              case n:
                                d[o] = "<ins>" + t(r) + "</ins>";
                                break;

                              case s:
                                d[o] = "<del>" + t(r) + "</del>";
                                break;

                              case a:
                                d[o] = "<span>" + t(r) + "</span>";
                            }
                            return d.join("");
                        }, e.prototype.diffCommonPrefix = function(e, t) {
                            var s, n, a, i;
                            if (!e || !t || e.charAt(0) !== t.charAt(0)) return 0;
                            for (a = 0, n = Math.min(e.length, t.length), s = n, i = 0; a < s; ) e.substring(i, s) === t.substring(i, s) ? (a = s, 
                            i = a) : n = s, s = Math.floor((n - a) / 2 + a);
                            return s;
                        }, e.prototype.diffCommonSuffix = function(e, t) {
                            var s, n, a, i;
                            if (!e || !t || e.charAt(e.length - 1) !== t.charAt(t.length - 1)) return 0;
                            for (a = 0, n = Math.min(e.length, t.length), s = n, i = 0; a < s; ) e.substring(e.length - s, e.length - i) === t.substring(t.length - s, t.length - i) ? (a = s, 
                            i = a) : n = s, s = Math.floor((n - a) / 2 + a);
                            return s;
                        }, e.prototype.diffCompute = function(e, t, i, r) {
                            var o, d, u, l, _, c, h, m, f, p, M, y;
                            return e ? t ? (d = e.length > t.length ? e : t, u = e.length > t.length ? t : e, 
                            l = d.indexOf(u), l !== -1 ? (o = [ [ n, d.substring(0, l) ], [ a, u ], [ n, d.substring(l + u.length) ] ], 
                            e.length > t.length && (o[0][0] = o[2][0] = s), o) : 1 === u.length ? [ [ s, e ], [ n, t ] ] : (_ = this.diffHalfMatch(e, t), 
                            _ ? (c = _[0], m = _[1], h = _[2], f = _[3], p = _[4], M = this.DiffMain(c, h, i, r), 
                            y = this.DiffMain(m, f, i, r), M.concat([ [ a, p ] ], y)) : i && e.length > 100 && t.length > 100 ? this.diffLineMode(e, t, r) : this.diffBisect(e, t, r))) : [ [ s, e ] ] : [ [ n, t ] ];
                        }, e.prototype.diffHalfMatch = function(e, t) {
                            function s(e, t, s) {
                                var n, a, r, o, d, u, l, _, c;
                                for (n = e.substring(s, s + Math.floor(e.length / 4)), a = -1, r = ""; (a = t.indexOf(n, a + 1)) !== -1; ) o = i.diffCommonPrefix(e.substring(s), t.substring(a)), 
                                d = i.diffCommonSuffix(e.substring(0, s), t.substring(0, a)), r.length < d + o && (r = t.substring(a - d, a) + t.substring(a, a + o), 
                                u = e.substring(0, s - d), l = e.substring(s + o), _ = t.substring(0, a - d), c = t.substring(a + o));
                                return 2 * r.length >= e.length ? [ u, l, _, c, r ] : null;
                            }
                            var n, a, i, r, o, d, u, l, _, c, h;
                            return n = e.length > t.length ? e : t, a = e.length > t.length ? t : e, n.length < 4 || 2 * a.length < n.length ? null : (i = this, 
                            _ = s(n, a, Math.ceil(n.length / 4)), c = s(n, a, Math.ceil(n.length / 2)), _ || c ? (h = c ? _ && _[4].length > c[4].length ? _ : c : _, 
                            e.length > t.length ? (r = h[0], u = h[1], d = h[2], o = h[3]) : (d = h[0], o = h[1], 
                            r = h[2], u = h[3]), l = h[4], [ r, u, d, o, l ]) : null);
                        }, e.prototype.diffLineMode = function(e, t, i) {
                            var r, o, d, u, l, _, c, h, m;
                            for (r = this.diffLinesToChars(e, t), e = r.chars1, t = r.chars2, d = r.lineArray, 
                            o = this.DiffMain(e, t, !1, i), this.diffCharsToLines(o, d), this.diffCleanupSemantic(o), 
                            o.push([ a, "" ]), u = 0, _ = 0, l = 0, h = "", c = ""; u < o.length; ) {
                                switch (o[u][0]) {
                                  case n:
                                    l++, c += o[u][1];
                                    break;

                                  case s:
                                    _++, h += o[u][1];
                                    break;

                                  case a:
                                    if (_ >= 1 && l >= 1) {
                                        for (o.splice(u - _ - l, _ + l), u = u - _ - l, r = this.DiffMain(h, c, !1, i), 
                                        m = r.length - 1; m >= 0; m--) o.splice(u, 0, r[m]);
                                        u += r.length;
                                    }
                                    l = 0, _ = 0, h = "", c = "";
                                }
                                u++;
                            }
                            return o.pop(), o;
                        }, e.prototype.diffBisect = function(e, t, a) {
                            var i, r, o, d, u, l, _, c, h, m, f, p, M, y, L, g, Y, k, v, b, w, D, T;
                            for (i = e.length, r = t.length, o = Math.ceil((i + r) / 2), d = o, u = 2 * o, l = new Array(u), 
                            _ = new Array(u), c = 0; c < u; c++) l[c] = -1, _[c] = -1;
                            for (l[d + 1] = 0, _[d + 1] = 0, h = i - r, m = h % 2 !== 0, f = 0, p = 0, M = 0, 
                            y = 0, w = 0; w < o && !(new Date().getTime() > a); w++) {
                                for (D = -w + f; D <= w - p; D += 2) {
                                    for (g = d + D, Y = D === -w || D !== w && l[g - 1] < l[g + 1] ? l[g + 1] : l[g - 1] + 1, 
                                    v = Y - D; Y < i && v < r && e.charAt(Y) === t.charAt(v); ) Y++, v++;
                                    if (l[g] = Y, Y > i) p += 2; else if (v > r) f += 2; else if (m && (L = d + h - D, 
                                    L >= 0 && L < u && _[L] !== -1 && (k = i - _[L], Y >= k))) return this.diffBisectSplit(e, t, Y, v, a);
                                }
                                for (T = -w + M; T <= w - y; T += 2) {
                                    for (L = d + T, k = T === -w || T !== w && _[L - 1] < _[L + 1] ? _[L + 1] : _[L - 1] + 1, 
                                    b = k - T; k < i && b < r && e.charAt(i - k - 1) === t.charAt(r - b - 1); ) k++, 
                                    b++;
                                    if (_[L] = k, k > i) y += 2; else if (b > r) M += 2; else if (!m && (g = d + h - T, 
                                    g >= 0 && g < u && l[g] !== -1 && (Y = l[g], v = d + Y - g, k = i - k, Y >= k))) return this.diffBisectSplit(e, t, Y, v, a);
                                }
                            }
                            return [ [ s, e ], [ n, t ] ];
                        }, e.prototype.diffBisectSplit = function(e, t, s, n, a) {
                            var i, r, o, d, u, l;
                            return i = e.substring(0, s), o = t.substring(0, n), r = e.substring(s), d = t.substring(n), 
                            u = this.DiffMain(i, o, !1, a), l = this.DiffMain(r, d, !1, a), u.concat(l);
                        }, e.prototype.diffCleanupSemantic = function(e) {
                            var t, i, r, o, d, u, l, _, c, h, m, f, p;
                            for (t = !1, i = [], r = 0, o = null, d = 0, _ = 0, c = 0, u = 0, l = 0; d < e.length; ) e[d][0] === a ? (i[r++] = d, 
                            _ = u, c = l, u = 0, l = 0, o = e[d][1]) : (e[d][0] === n ? u += e[d][1].length : l += e[d][1].length, 
                            o && o.length <= Math.max(_, c) && o.length <= Math.max(u, l) && (e.splice(i[r - 1], 0, [ s, o ]), 
                            e[i[r - 1] + 1][0] = n, r--, r--, d = r > 0 ? i[r - 1] : -1, _ = 0, c = 0, u = 0, 
                            l = 0, o = null, t = !0)), d++;
                            for (t && this.diffCleanupMerge(e), d = 1; d < e.length; ) e[d - 1][0] === s && e[d][0] === n && (h = e[d - 1][1], 
                            m = e[d][1], f = this.diffCommonOverlap(h, m), p = this.diffCommonOverlap(m, h), 
                            f >= p ? (f >= h.length / 2 || f >= m.length / 2) && (e.splice(d, 0, [ a, m.substring(0, f) ]), 
                            e[d - 1][1] = h.substring(0, h.length - f), e[d + 1][1] = m.substring(f), d++) : (p >= h.length / 2 || p >= m.length / 2) && (e.splice(d, 0, [ a, h.substring(0, p) ]), 
                            e[d - 1][0] = n, e[d - 1][1] = m.substring(0, m.length - p), e[d + 1][0] = s, e[d + 1][1] = h.substring(p), 
                            d++), d++), d++;
                        }, e.prototype.diffCommonOverlap = function(e, t) {
                            var s, n, a, i, r, o, d;
                            if (s = e.length, n = t.length, 0 === s || 0 === n) return 0;
                            if (s > n ? e = e.substring(s - n) : s < n && (t = t.substring(0, s)), a = Math.min(s, n), 
                            e === t) return a;
                            for (i = 0, r = 1; ;) {
                                if (o = e.substring(a - r), d = t.indexOf(o), d === -1) return i;
                                r += d, 0 !== d && e.substring(a - r) !== t.substring(0, r) || (i = r, r++);
                            }
                        }, e.prototype.diffLinesToChars = function(e, t) {
                            function s(e) {
                                var t, s, i, r, o;
                                for (t = "", s = 0, i = -1, r = n.length; i < e.length - 1; ) i = e.indexOf("\n", s), 
                                i === -1 && (i = e.length - 1), o = e.substring(s, i + 1), s = i + 1, (a.hasOwnProperty ? a.hasOwnProperty(o) : void 0 !== a[o]) ? t += String.fromCharCode(a[o]) : (t += String.fromCharCode(r), 
                                a[o] = r, n[r++] = o);
                                return t;
                            }
                            var n, a, i, r;
                            return n = [], a = {}, n[0] = "", i = s(e), r = s(t), {
                                chars1: i,
                                chars2: r,
                                lineArray: n
                            };
                        }, e.prototype.diffCharsToLines = function(e, t) {
                            var s, n, a, i;
                            for (s = 0; s < e.length; s++) {
                                for (n = e[s][1], a = [], i = 0; i < n.length; i++) a[i] = t[n.charCodeAt(i)];
                                e[s][1] = a.join("");
                            }
                        }, e.prototype.diffCleanupMerge = function(e) {
                            var t, i, r, o, d, u, l, _, c;
                            for (e.push([ a, "" ]), t = 0, i = 0, r = 0, d = "", o = ""; t < e.length; ) switch (e[t][0]) {
                              case n:
                                r++, o += e[t][1], t++;
                                break;

                              case s:
                                i++, d += e[t][1], t++;
                                break;

                              case a:
                                i + r > 1 ? (0 !== i && 0 !== r && (u = this.diffCommonPrefix(o, d), 0 !== u && (t - i - r > 0 && e[t - i - r - 1][0] === a ? e[t - i - r - 1][1] += o.substring(0, u) : (e.splice(0, 0, [ a, o.substring(0, u) ]), 
                                t++), o = o.substring(u), d = d.substring(u)), u = this.diffCommonSuffix(o, d), 
                                0 !== u && (e[t][1] = o.substring(o.length - u) + e[t][1], o = o.substring(0, o.length - u), 
                                d = d.substring(0, d.length - u))), 0 === i ? e.splice(t - r, i + r, [ n, o ]) : 0 === r ? e.splice(t - i, i + r, [ s, d ]) : e.splice(t - i - r, i + r, [ s, d ], [ n, o ]), 
                                t = t - i - r + (i ? 1 : 0) + (r ? 1 : 0) + 1) : 0 !== t && e[t - 1][0] === a ? (e[t - 1][1] += e[t][1], 
                                e.splice(t, 1)) : t++, r = 0, i = 0, d = "", o = "";
                            }
                            for ("" === e[e.length - 1][1] && e.pop(), l = !1, t = 1; t < e.length - 1; ) e[t - 1][0] === a && e[t + 1][0] === a && (_ = e[t][1], 
                            c = _.substring(_.length - e[t - 1][1].length), c === e[t - 1][1] ? (e[t][1] = e[t - 1][1] + e[t][1].substring(0, e[t][1].length - e[t - 1][1].length), 
                            e[t + 1][1] = e[t - 1][1] + e[t + 1][1], e.splice(t - 1, 1), l = !0) : _.substring(0, e[t + 1][1].length) === e[t + 1][1] && (e[t - 1][1] += e[t + 1][1], 
                            e[t][1] = e[t][1].substring(e[t + 1][1].length) + e[t + 1][1], e.splice(t + 1, 1), 
                            l = !0)), t++;
                            l && this.diffCleanupMerge(e);
                        }, function(t, s) {
                            var n, a, i;
                            return n = new e(), a = n.DiffMain(t, s), n.diffCleanupEfficiency(a), i = n.diffPrettyHtml(a);
                        };
                    }();
                }
            }
        }();
    }).call(t, s(174), s(19)(e));
}, function(e, t) {
    function s() {
        throw new Error("setTimeout has not been defined");
    }
    function n() {
        throw new Error("clearTimeout has not been defined");
    }
    function a(e) {
        if (l === setTimeout) return setTimeout(e, 0);
        if ((l === s || !l) && setTimeout) return l = setTimeout, setTimeout(e, 0);
        try {
            return l(e, 0);
        } catch (t) {
            try {
                return l.call(null, e, 0);
            } catch (t) {
                return l.call(this, e, 0);
            }
        }
    }
    function i(e) {
        if (_ === clearTimeout) return clearTimeout(e);
        if ((_ === n || !_) && clearTimeout) return _ = clearTimeout, clearTimeout(e);
        try {
            return _(e);
        } catch (t) {
            try {
                return _.call(null, e);
            } catch (t) {
                return _.call(this, e);
            }
        }
    }
    function r() {
        f && h && (f = !1, h.length ? m = h.concat(m) : p = -1, m.length && o());
    }
    function o() {
        if (!f) {
            var e = a(r);
            f = !0;
            for (var t = m.length; t; ) {
                for (h = m, m = []; ++p < t; ) h && h[p].run();
                p = -1, t = m.length;
            }
            h = null, f = !1, i(e);
        }
    }
    function d(e, t) {
        this.fun = e, this.array = t;
    }
    function u() {}
    var l, _, c = e.exports = {};
    !function() {
        try {
            l = "function" == typeof setTimeout ? setTimeout : s;
        } catch (e) {
            l = s;
        }
        try {
            _ = "function" == typeof clearTimeout ? clearTimeout : n;
        } catch (e) {
            _ = n;
        }
    }();
    var h, m = [], f = !1, p = -1;
    c.nextTick = function(e) {
        var t = new Array(arguments.length - 1);
        if (arguments.length > 1) for (var s = 1; s < arguments.length; s++) t[s - 1] = arguments[s];
        m.push(new d(e, t)), 1 !== m.length || f || a(o);
    }, d.prototype.run = function() {
        this.fun.apply(null, this.array);
    }, c.title = "browser", c.browser = !0, c.env = {}, c.argv = [], c.version = "", 
    c.versions = {}, c.on = u, c.addListener = u, c.once = u, c.off = u, c.removeListener = u, 
    c.removeAllListeners = u, c.emit = u, c.prependListener = u, c.prependOnceListener = u, 
    c.listeners = function(e) {
        return [];
    }, c.binding = function(e) {
        throw new Error("process.binding is not supported");
    }, c.cwd = function() {
        return "/";
    }, c.chdir = function(e) {
        throw new Error("process.chdir is not supported");
    }, c.umask = function() {
        return 0;
    };
}, function(e, t, s) {
    var n, a;
    !function(i, r) {
        "use strict";
        n = r, a = "function" == typeof n ? n.call(t, s, t, e) : n, !(void 0 !== a && (e.exports = a));
    }(this, function() {
        "use strict";
        function e(e, t) {
            var s;
            for (s in t) t.hasOwnProperty(s) && ("undefined" == typeof t[s] ? delete e[s] : e[s] = t[s]);
            return e;
        }
        function t(e, t) {
            var s;
            for (s = 0; s < e.length; s += 1) if (e[s] === t) return s;
            return -1;
        }
        function s(e, s) {
            var n = t(e, s);
            return n !== -1 ? e.splice(n, 1) : [];
        }
        function n(e) {
            return "undefined" != typeof e && "undefined" != typeof e.requireExpects && e.requireExpects;
        }
        function a(e) {
            return !!e.result;
        }
        function i(e) {
            return !a(e);
        }
        function r(e) {
            return i(e) && "undefined" == typeof e.expected && "undefined" == typeof e.actual;
        }
        function o(e) {
            return e.replace(/(\r?\n)/g, "$&# ");
        }
        function d(e) {
            return e.replace(/^\s+/, "");
        }
        function u(e) {
            return e;
        }
        function l(e, t, s, n) {
            e.push(t + ": " + n(s));
        }
        function _(e, t, s, n, a) {
            e && "undefined" != typeof n && l(t, s, n, a);
        }
        function c(e, t) {
            return t ? e + " - " + o(t) : e;
        }
        function h(h, M, y) {
            function L(e) {
                return w.config[e];
            }
            function g(e) {
                if (a(e)) return e.message;
                var t = [];
                return e.message && t.push(e.message), L("showExpectationOnFailure") && !r(e) && (l(t, "expected", e.expected, x), 
                l(t, "got", e.actual, x)), _(L("showTestNameOnFailure"), t, "test", e.name, u), 
                _(L("showModuleNameOnFailure"), t, "module", e.module, u), _(L("showSourceOnFailure"), t, "source", e.source, d), 
                t.join(", ");
            }
            function Y(e) {
                w.puts(w.config.initialCount + ".." + e);
            }
            function k(e) {
                var n;
                t(T, e) !== -1 && (n = b.config[e], "undefined" != typeof n && s(n, S[e]));
            }
            function v(e) {
                var t;
                for (t = 0; t < e.length; t += 1) k(e[t]);
            }
            if (!h) throw new Error('should pass QUnit object reference. Please check QUnit\'s "require" path if you are using Node.js (or any CommonJS env).');
            if ("function" != typeof M) throw new Error("should pass print-like function");
            var b = h, w = {}, D = function(e, t) {
                y && "object" == typeof y && "undefined" != typeof y[e] && (M('# WARNING: Option "' + e + '" is deprecated and will be removed in future version.'), 
                t(y[e]));
            }, T = [ "moduleStart", "testStart", "log", "testDone", "done" ], S = {}, x = function() {
                return "undefined" != typeof b.dump && "function" == typeof b.dump.parse ? function(e) {
                    return b.dump.parse(e);
                } : "undefined" != typeof b.jsDump && "function" == typeof b.jsDump.parse ? function(e) {
                    return b.jsDump.parse(e);
                } : u;
            }();
            return w.config = e({
                initialCount: 1,
                showModuleNameOnFailure: !0,
                showTestNameOnFailure: !0,
                showExpectationOnFailure: !0,
                showSourceOnFailure: !0
            }, y), D("noPlan", function(e) {
                M('# Now QUnit-TAP works as with "noPlan: true" by default. If you want to delare plan explicitly, please use "QUnit.config.requireExpects" option instead.'), 
                w.config.noPlan = e;
            }), D("count", function(e) {
                w.config.initialCount = e + 1;
            }), D("showDetailsOnFailure", function(e) {
                w.config.showModuleNameOnFailure = e, w.config.showTestNameOnFailure = e, w.config.showExpectationOnFailure = e, 
                w.config.showSourceOnFailure = e;
            }), w.VERSION = m, w.puts = M, w.count = w.config.initialCount - 1, w.expectedCount = w.config.initialCount - 1, 
            w.explain = x, w.note = function(e) {
                w.puts(o("# " + e));
            }, w.diag = function(e) {
                return w.note(e), !1;
            }, w.moduleStart = function(e) {
                var t = "string" == typeof e ? e : e.name;
                w.note("module: " + t);
            }, w.testStart = function(e) {
                var t = "string" == typeof e ? e : e.name;
                w.note("test: " + t);
            }, w.log = function(e) {
                var t = "";
                w.count += 1, i(e) && (t += "not "), t += "ok " + w.count, w.puts(c(t, g(e)));
            }, w.testDone = function() {
                n(b.config) && (w.expectedCount += b.config.current.expected);
            }, w.done = function() {
                ("undefined" == typeof w.config.noPlan || w.config.noPlan) && Y(n(b.config) ? w.expectedCount : w.count);
            }, w.unsubscribe = function() {
                "undefined" != typeof b.config && v(0 === arguments.length ? T : f.apply(arguments));
            }, function() {
                var e, t, s, n = p(b);
                for (t = 0; t < T.length; t += 1) e = T[t], s = n(b, w, e), S[e] = s;
            }(), w;
        }
        var m = "1.5.1", f = Array.prototype.slice, p = function(e) {
            return function(e, t, s) {
                var n = e[s], a = function() {
                    t[s].apply(t, f.apply(arguments));
                };
                return n(a), a;
            };
        };
        return h.qunitTap = function() {
            throw new Error('[BC BREAK] Since 1.4.0, QUnit-TAP exports single qunitTap function as module.exports. Therefore, require("qunit-tap") returns qunitTap function itself. Please fix your code if you are using Node.js (or any CommonJS env).');
        }, h;
    });
}, function(e, t, s) {
    (function(e) {
        "use strict";
        var t = !1;
        QUnit.config.autostart = !1;
        var s = window.onerror;
        window.onerror = null, QUnit.begin(function() {
            window.onerror = function(e, t, n) {
                var a = !1;
                return s && (a = s(e, t, n)), QUnit.config.current && QUnit.config.current.async && QUnit.start(), 
                a;
            };
        }), QUnit.moduleStart(function() {
            t = !0;
        }), QUnit.done(function() {
            window.setTimeout(function() {
                console.log("cockpittest-tap-done");
            }, 0), window.onerror = null;
        });
        var n = /^((not )?ok [0-9]+ (- )?)(.*)$/;
        qunitTap(QUnit, function() {
            if (1 == arguments.length && QUnit.config.current) {
                var e = n.exec(arguments[0]);
                if (e) return void console.log(e[1] + QUnit.config.current.testName + ": " + e[4]);
            }
            console.log.apply(console, arguments);
        }), window.setTimeout(function() {
            t || (console.log("QUnit not started by test"), console.log("cockpittest-tap-error"));
        }, 2e4), window.tests_included = !0, e && e.exports && (e.exports = QUnit);
    }).call(t, s(19)(e));
}, function(e, t) {} ]);
//# sourceMappingURL=test-docker.min.js.map