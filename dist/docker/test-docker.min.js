!function(t) {
    function e(i) {
        if (s[i]) return s[i].exports;
        var r = s[i] = {
            exports: {},
            id: i,
            loaded: !1
        };
        return t[i].call(r.exports, r, r.exports, e), r.loaded = !0, r.exports;
    }
    var s = {};
    return e.m = t, e.c = s, e.p = "", e(0);
}({
    0: function(t, e, s) {
        "use strict";
        !function() {
            var t = s(4), e = s(10), i = s(132), r = i;
            i.test("bytes_from_format", function() {
                var e, s = [ [ "999", 999 ], [ "1.9 kb", 1945.6 ], [ "2.0 KB", 2048 ], [ "1.0 MB", 1048576 ], [ "1 GB", 1073741824 ], [ "1 Unknown", 1 ] ];
                for (r.expect(s.length), e = 0; e < s.length; e++) r.strictEqual(t.bytes_from_format(s[e][0]), s[e][1], "bytes_from_format(" + s[e][0] + ") = " + s[e][1]);
            }), i.test("json_skip", function() {
                var e = [ [ "number", "0123456789", [ 10, 0 ] ], [ "number-fancy", "-0123456789.33E-5", [ 17, 0 ] ], [ "string", '"string"', [ 8, 0 ] ], [ "string-escaped", '"st\\"ring"', [ 10, 0 ] ], [ "string-truncated", '"string', [ 0 ] ], [ "boolean", "true", [ 4, 0 ] ], [ "null", "null", [ 4, 0 ] ], [ "string-number", '"string"0123456789', [ 8, 18, 0 ] ], [ "number-string", '0123456789"string"', [ 10, 18, 0 ] ], [ "number-number", "0123456789 123", [ 10, 14, 0 ] ], [ "string-string-string", '"string""two""three"', [ 8, 13, 20, 0 ] ], [ "string-string-truncated", '"string""tw', [ 8, 0 ] ], [ "array", '["string","two","three"]', [ 24, 0 ] ], [ "array-escaped", '["string","two","thr]e"]', [ 24, 0 ] ], [ "array-spaces", ' [ "string", "two" ,"thr]e" ]\t', [ 29, 0 ] ], [ "array-truncated", '["string","two","thr', [ 0 ] ], [ "object", '{"string":"two","number":222}', [ 29, 0 ] ], [ "object-escaped", '{"string":"two","num]}}ber":222}', [ 32, 0 ] ], [ "object-spaces", '{ "string": "two", "number": 222 }', [ 34, 0 ] ], [ "object-object", '{"string":"two","number":222}{"string":"two","number":222}', [ 29, 58, 0 ] ], [ "object-line-object", '{"string":"two","number":222}\n{"string":"two","number":222}', [ 29, 59, 0 ] ], [ "object-truncated", '{"stri}ng"', [ 0 ] ], [ "whitespace", "  \r\n\t \v", [ 0 ] ] ];
                r.expect(e.length);
                for (var s = 0; s < e.length; s++) {
                    for (var i, n = [], o = void 0, a = 0; a < 16 && (i = t.json_skip(e[s][1], o), n.push(i), 
                    0 !== i); a++) o = i;
                    r.deepEqual(n, e[s][2], "json_skip(): " + e[s][0]);
                }
            }), i.test("quote_cmdline", function() {
                var e = [ [ [ "foo" ], "foo" ], [ [ "foo", "bar" ], "foo bar" ], [ [ "f o o" ], '"f o o"' ], [ [ "f\\o" ], "f\\\\o" ], [ [ 'f"o' ], "'f\"o'" ], [ [ "f\"'o" ], "'f\"\\'o'" ], [ [ 'f "o' ], '"f \\"o"' ] ];
                r.expect(e.length);
                for (var s = 0; s < e.length; s++) r.strictEqual(t.quote_cmdline(e[s][0]), e[s][1], "quote(" + String(e[s][0]) + ") = " + e[s][1]);
            }), i.test("unquote_cmdline", function() {
                var e = [ [ [ "foo" ], "  foo  " ], [ [ "foo", "bar" ], "foo    bar  " ], [ [ "f o o" ], '"f o o"' ], [ [ "f o o" ], "'f o o'" ], [ [ "f\\o" ], "f\\\\o" ], [ [ 'f"o' ], "'f\"o'" ], [ [ "f\"'o" ], "'f\"\\'o'" ], [ [ 'f "o' ], '"f \\"o"' ], [ [ "f o o" ], "f' 'o\" \"o" ], [ [ "f'", 'o" "o' ], "f\\' 'o\" \"o" ] ];
                r.expect(e.length);
                for (var s = 0; s < e.length; s++) r.deepEqual(t.unquote_cmdline(e[s][1]), e[s][0], "unquote(" + String(e[s][1]) + ") = " + e[s][0]);
            }), i.test("render_container_status", function() {
                var t = [ [ {
                    Status: "blah",
                    Running: !0
                }, "blah" ], [ {
                    Running: !0,
                    Paused: !1
                }, "running" ], [ {
                    Running: !1,
                    Paused: !0
                }, "paused" ], [ {
                    Restarting: !0
                }, "restarting" ], [ {
                    FinishedAt: "0001-01-01"
                }, "created" ], [ {
                    FinishedAt: "2016-11-11"
                }, "exited" ], [ {}, "exited" ] ];
                r.expect(t.length), t.forEach(function(t) {
                    r.equal(e.render_container_status(t[0]), t[1], "render_container_status = " + t[1]);
                });
            }), i.start();
        }();
    },
    2: function(t, e) {
        t.exports = jQuery;
    },
    3: function(t, e) {
        t.exports = cockpit;
    },
    4: function(t, e, s) {
        "use strict";
        !function() {
            function e() {
                "all" != window.debugging && "docker" != window.debugging || console.debug.apply(console, arguments);
            }
            function i(t, e) {
                var s = this, i = new c({
                    cols: 80,
                    rows: 24,
                    screenKeys: !0,
                    useStyle: !0,
                    inlineStyle: !1,
                    useFocus: !1
                }), r = !0, n = a.utf8_decoder(), l = a.utf8_encoder();
                return t.empty(), i.open(t[0]), s.typeable = function(t) {
                    i.cursorHidden = !t, t && i.showCursor(), i.refresh(i.y, i.y), r = t;
                }, s.focus = function() {
                    i.focus();
                }, s.close = function() {
                    i.destroy();
                }, "string" == typeof e ? (i.write("[31m" + e + "[m\r\n"), s.close = function() {}, 
                s.typeable(!1), s) : (o(e).on("close", function(t, r) {
                    var n = r.problem || "disconnected";
                    i.write("[31m" + n + "[m\r\n"), s.typeable(!1), o(e).off("message"), e = null;
                }), s.process = function(t) {
                    return i.write(n.decode(t)), t.length;
                }, i.on("data", function(t) {
                    r && e && e.send(l.encode(t));
                }), s);
            }
            function r(t, e) {
                function s(t) {
                    c.push(t), n || (n = window.setTimeout(function() {
                        n = null;
                        var t = r[0].scrollHeight - r.scrollTop() <= r.outerHeight(), e = o("<span>").text(c.join(""));
                        c.length = 0, r.append(e), t && r.scrollTop(r.prop("scrollHeight"));
                    }, 50));
                }
                var i = this, r = o("<pre>");
                t.empty(), t.append(r);
                var n, c = [];
                if ("string" == typeof e) return s(e), i.close = function() {}, i;
                e.control({
                    batch: 16384,
                    latency: 50
                });
                var l = a.utf8_decoder(!1);
                return i.process = function(t) {
                    for (var e, i, r = 0, n = t.length; ;) {
                        if (n < r + 8) return r;
                        if (e = (255 & t[r + 4]) << 24 | (255 & t[r + 5]) << 16 | (255 & t[r + 6]) << 8 | 255 & t[r + 7], 
                        n < r + 8 + e) return r;
                        i = t.subarray ? t.subarray(r + 8, r + 8 + e) : t.slice(r + 8, r + 8 + e), s(l.decode(i, {
                            stream: !0
                        })), r += 8 + e;
                    }
                    return r;
                }, i.focus = function() {}, i.close = function() {}, o(e).on("close", function(t, i) {
                    s(i.reason || "disconnected"), o(e).off(), e = null;
                }), i;
            }
            function n(t, e) {
                var s, i, r = e.length, n = t.length - r + 1;
                for (i = 0; i < n; i++) {
                    for (s = 0; s < r && t[i + s] === e[s]; s++) ;
                    if (s == r) return i;
                }
                return -1;
            }
            var o = s(2), a = s(3), c = s(5), l = {}, h = a.http("/var/run/docker.sock", {
                superuser: !0
            });
            l.pull = function(t, s, i) {
                var r = o.Deferred();
                s || (s = "latest"), i && (t = i + "/" + t), e("pulling: " + t + ":" + s);
                var n, a = {
                    method: "POST",
                    path: "/v1.12/images/create",
                    body: "",
                    params: {
                        fromImage: t,
                        tag: s
                    }
                }, c = "", u = h.request(a).stream(function(t) {
                    c += t;
                    var e = l.json_skip(c, 0);
                    if (0 !== e) {
                        var s = JSON.parse(c.substring(0, e));
                        c = c.substring(e), s.error ? n = s.error : s.status && r.notify(s.status, s);
                    }
                }).fail(function(t) {
                    r.reject(t);
                }).done(function() {
                    n ? r.reject(new Error(n)) : r.resolve();
                }), d = r.promise();
                return d.cancel = function() {
                    return u.close("cancelled"), d;
                }, d;
            }, l.inspect_image = function(t) {
                var e = o.Deferred();
                h.get("/v1.12/images/" + encodeURIComponent(t) + "/json").done(function(t) {
                    e.resolve(JSON.parse(t));
                }).fail(function(t) {
                    e.reject(t);
                });
                var s = e.promise();
                return s.cancel = function() {
                    return s;
                }, s;
            }, l.console = function(t, s, c) {
                function l(t) {
                    w = y ? new i(p, t) : new r(p, t);
                }
                function u() {
                    if (p.connected = !1, !m) return d(y === !1 ? "GET /v1.15/containers/" + encodeURIComponent(t) + "/logs?follow=1&stdout=1&stderr=1&tail=1000&timestamps=0 HTTP/1.0\r\nContent-Length: 0\r\n\r\n" : "POST /v1.15/containers/" + encodeURIComponent(t) + "/attach?logs=1&stream=1&stdin=1&stdout=1&stderr=1 HTTP/1.0\r\nContent-Length: 0\r\n\r\n");
                    var e = h.request(o.extend({}, c, m)).always(function() {
                        e = null;
                    }).done(function(t) {
                        var e = JSON.parse(t), s = JSON.stringify({
                            Detach: !1,
                            Tty: y
                        });
                        return d("POST /v1.15/exec/" + encodeURIComponent(e.Id) + "/start HTTP/1.0\r\nContent-Length: " + s.length + "\r\n\r\n" + s);
                    }).fail(function(t) {
                        l(t.message);
                    });
                }
                function d(s) {
                    w && w.close(), w = null;
                    var h = o.extend({}, c, {
                        payload: "stream",
                        unix: "/var/run/docker.sock",
                        superuser: !0,
                        binary: !0
                    });
                    v = a.channel(h), e(s), v.send(s), o(v).on("close.attach", function(i, r) {
                        e(t + ": console close: ", r), o(v).off(".attach"), v = null, p.connected && !r.problem && window.setTimeout(function() {
                            p.connected && !v && d(s);
                        }, 1e3);
                    });
                    var u = null, f = v.buffer();
                    f.callback = function(s) {
                        var o, c = 0, h = 0;
                        if (null === u) {
                            if (h = n(s, [ 13, 10, 13, 10 ]), h == -1) return c;
                            if (u = s.subarray ? a.utf8_decoder().decode(s.subarray(0, h)) : a.utf8_decoder().decode(s.slice(0, h)), 
                            e(t + ": console headers: ", u), o = u.split("\r\n", 1)[0].split(" "), "200" != o[1]) return l(o.slice(2).join(" ")), 
                            void (f.callback = null);
                            s.subarray ? (s = s.subarray(h + 4), c += h + 4) : (s = s.slice(h + 4), c += h + 4);
                        }
                        if (void 0 === y || null === y) {
                            if (s.length < 2) return c;
                            y = !((0 === s[0] || 1 === s[0] || 2 === s[0]) && 0 === s[1]), e(t + ": mode tty: " + y);
                        }
                        w = y ? new i(p, v) : new r(p, v), p.typeable(b), p.connected = !0, f.callback = w.process;
                        var d = w.process(s);
                        return c + d;
                    };
                }
                function f() {
                    w && w.typeable && w.typeable(b && g);
                }
                var p = o("<div>").addClass("console-ct");
                p.connected = !1;
                var m, y, b = !1, g = !1, v = null, w = null;
                Array.isArray(s) ? (c || (c = {}), y = c.tty, void 0 !== y && null !== y || (y = !0), 
                m = {
                    method: "POST",
                    path: "/v1.15/containers/" + encodeURIComponent(t) + "/exec",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        AttachStdin: y,
                        AttachStdout: !0,
                        AttachStderr: !0,
                        Tty: y,
                        Cmd: s
                    })
                }, e("preparing to exec:", s)) : (e("preparing to attach"), c = s || {}, y = c.tty), 
                delete c.tty;
                var x = null;
                return p.close = function(t) {
                    p.connected = !1, x && x.close(t), v && v.close(t), w && (w.close(), w = null);
                }, p.connect = function() {
                    p.close("disconnected"), u();
                }, o(p).on("focusin", function() {
                    g = !0, f(), w.focus();
                }).on("focusout", function() {
                    g = !1, f();
                }), p.typeable = function(t) {
                    b = t, f();
                }, p;
            }, l.json_skip = function(t, e) {
                var s, i = !1, r = t.length, n = 0, o = !1, a = !1, c = ' \t\n\r\v[{}]"', l = " \t\n\r\v";
                for (void 0 === e && (e = 0), r = t.length; e != r && !(i && n <= 0); e++) if (s = t[e], 
                o) c.indexOf(s) != -1 && (o = !1, n--, e--); else if (l.indexOf(s) == -1) if (a) switch (s) {
                  case "\\":
                    if (e + 1 == r) continue;
                    e++;
                    break;

                  case '"':
                    a = !1, n--;
                } else switch (i = !0, s) {
                  case "[":
                  case "{":
                    n++;
                    break;

                  case "]":
                  case "}":
                    n--;
                    break;

                  case '"':
                    a = !0, n++;
                    break;

                  default:
                    o = !0, n++;
                }
                return o && 1 == n && (n = 0), !i || n > 0 ? 0 : e;
            }, l.quote_cmdline = function(t) {
                function e(t) {
                    return " " == t;
                }
                function s(t) {
                    var s, i = "", r = "";
                    for (s = 0; s < t.length; s++) "\\" == t[s] || t[s] == r ? i += "\\" : "" === r && ("'" == t[s] || e(t[s]) ? r = '"' : '"' == t[s] && (r = "'")), 
                    i += t[s];
                    return r + i + r;
                }
                return t = t || [], t.map(s).join(" ");
            }, l.unquote_cmdline = function(t) {
                function e(t) {
                    return " " == t;
                }
                function s() {
                    for (;r < t.length && e(t[r]); ) r++;
                }
                function i() {
                    for (var s = "", i = null; r < t.length; ) {
                        if ("\\" == t[r]) r++, r < t.length && (s += t[r]); else if (t[r] == i) i = null; else if (i) s += t[r]; else if ('"' == t[r] || "'" == t[r]) i = t[r]; else {
                            if (e(t[r])) break;
                            s += t[r];
                        }
                        r++;
                    }
                    return s;
                }
                var r, n = [];
                for (r = 0, s(); r < t.length; ) n.push(i()), s();
                return n;
            };
            var u = [ null, "KB", "MB", "GB", "TB", "PB", "EB", "ZB" ];
            l.bytes_from_format = function(t, e) {
                var s = 1024;
                void 0 === e && (e = " ");
                var i = t.split(e).pop().toUpperCase(), r = u.indexOf(i), n = parseFloat(t);
                return r > 0 && !isNaN(n) ? n * Math.pow(s, r) : n;
            }, l.truncate_id = function(t) {
                var e = t.indexOf(":");
                return e >= 0 && (t = t.slice(e + 1)), t.substr(0, 12);
            }, t.exports = l;
        }();
    },
    5: function(t, e, s) {
        var i, r;
        (function(s) {
            (function() {
                "use strict";
                function s() {
                    this._events = this._events || {};
                }
                function n() {
                    s.call(this);
                }
                function o(t) {
                    var e = this;
                    if (!(this instanceof o)) return new o(arguments[0], arguments[1], arguments[2]);
                    n.call(this), "number" == typeof t && (t = {
                        cols: arguments[0],
                        rows: arguments[1],
                        handler: arguments[2]
                    }), t = t || {}, m(y(o.defaults), function(s) {
                        null == t[s] && (t[s] = o.options[s], o[s] !== o.defaults[s] && (t[s] = o[s])), 
                        e[s] = t[s];
                    }), 8 === t.colors.length ? t.colors = t.colors.concat(o._colors.slice(8)) : 16 === t.colors.length ? t.colors = t.colors.concat(o._colors.slice(16)) : 10 === t.colors.length ? t.colors = t.colors.slice(0, -2).concat(o._colors.slice(8, -2), t.colors.slice(-2)) : 18 === t.colors.length && (t.colors = t.colors.slice(0, -2).concat(o._colors.slice(16, -2), t.colors.slice(-2))), 
                    this.colors = t.colors, this.options = t, this.parent = t.body || t.parent || (b ? b.getElementsByTagName("body")[0] : null), 
                    this.cols = t.cols || t.geometry[0], this.rows = t.rows || t.geometry[1], this.setRawMode, 
                    this.isTTY = !0, this.isRaw = !0, this.columns = this.cols, this.rows = this.rows, 
                    t.handler && this.on("data", t.handler), this.ybase = 0, this.ydisp = 0, this.x = 0, 
                    this.y = 0, this.cursorState = 0, this.cursorHidden = !1, this.convertEol, this.state = 0, 
                    this.queue = "", this.scrollTop = 0, this.scrollBottom = this.rows - 1, this.applicationKeypad = !1, 
                    this.applicationCursor = !1, this.originMode = !1, this.insertMode = !1, this.wraparoundMode = !1, 
                    this.normal = null, this.prefixMode = !1, this.selectMode = !1, this.visualMode = !1, 
                    this.searchMode = !1, this.searchDown, this.entry = "", this.entryPrefix = "Search: ", 
                    this._real, this._selected, this._textarea, this.charset = null, this.gcharset = null, 
                    this.glevel = 0, this.charsets = [ null ], this.decLocator, this.x10Mouse, this.vt200Mouse, 
                    this.vt300Mouse, this.normalMouse, this.mouseEvents, this.sendFocus, this.utfMouse, 
                    this.sgrMouse, this.urxvtMouse, this.element, this.children, this.refreshStart, 
                    this.refreshEnd, this.savedX, this.savedY, this.savedCols, this.readable = !0, this.writable = !0, 
                    this.defAttr = 131840, this.curAttr = this.defAttr, this.params = [], this.currentParam = 0, 
                    this.prefix = "", this.postfix = "", this.lines = [];
                    for (var s = this.rows; s--; ) this.lines.push(this.blankLine());
                    this.tabs, this.setupStops();
                }
                function a(t, e, s, i) {
                    t.addEventListener(e, s, i || !1);
                }
                function c(t, e, s, i) {
                    t.removeEventListener(e, s, i || !1);
                }
                function l(t) {
                    return t.preventDefault && t.preventDefault(), t.returnValue = !1, t.stopPropagation && t.stopPropagation(), 
                    t.cancelBubble = !0, !1;
                }
                function h(t, e) {
                    function s() {
                        this.constructor = t;
                    }
                    s.prototype = e.prototype, t.prototype = new s();
                }
                function u(t) {
                    var e = t.getElementsByTagName("body")[0], s = t.createElement("div");
                    s.className = "terminal";
                    var i = t.createElement("div"), r = t.createElement("span");
                    r.innerHTML = "hello world", i.appendChild(r), s.appendChild(i), e.appendChild(s);
                    var n = r.scrollWidth;
                    r.style.fontWeight = "bold";
                    var o = r.scrollWidth;
                    return e.removeChild(s), n !== o;
                }
                function d(t, e) {
                    for (var s = t.length; s--; ) if (t[s] === e) return s;
                    return -1;
                }
                function f(t) {
                    return !(t <= "＀") && (t >= "！" && t <= "ﾾ" || t >= "ￂ" && t <= "ￇ" || t >= "ￊ" && t <= "ￏ" || t >= "ￒ" && t <= "ￗ" || t >= "ￚ" && t <= "ￜ" || t >= "￠" && t <= "￦" || t >= "￨" && t <= "￮");
                }
                function p(t, e, s) {
                    var i = t << 16 | e << 8 | s;
                    if (null != p._cache[i]) return p._cache[i];
                    for (var r, n, a, c, l, h = 1 / 0, u = -1, d = 0; d < o.vcolors.length; d++) {
                        if (r = o.vcolors[d], n = r[0], a = r[1], c = r[2], l = p.distance(t, e, s, n, a, c), 
                        0 === l) {
                            u = d;
                            break;
                        }
                        l < h && (h = l, u = d);
                    }
                    return p._cache[i] = u;
                }
                function m(t, e, s) {
                    if (t.forEach) return t.forEach(e, s);
                    for (var i = 0; i < t.length; i++) e.call(s, t[i], i, t);
                }
                function y(t) {
                    if (Object.keys) return Object.keys(t);
                    var e, s = [];
                    for (e in t) Object.prototype.hasOwnProperty.call(t, e) && s.push(e);
                    return s;
                }
                var b = this.document;
                s.prototype.addListener = function(t, e) {
                    this._events[t] = this._events[t] || [], this._events[t].push(e);
                }, s.prototype.on = s.prototype.addListener, s.prototype.removeListener = function(t, e) {
                    if (this._events[t]) for (var s = this._events[t], i = s.length; i--; ) if (s[i] === e || s[i].listener === e) return void s.splice(i, 1);
                }, s.prototype.off = s.prototype.removeListener, s.prototype.removeAllListeners = function(t) {
                    this._events[t] && delete this._events[t];
                }, s.prototype.once = function(t, e) {
                    function s() {
                        var i = Array.prototype.slice.call(arguments);
                        return this.removeListener(t, s), e.apply(this, i);
                    }
                    return s.listener = e, this.on(t, s);
                }, s.prototype.emit = function(t) {
                    if (this._events[t]) for (var e = Array.prototype.slice.call(arguments, 1), s = this._events[t], i = s.length, r = 0; r < i; r++) s[r].apply(this, e);
                }, s.prototype.listeners = function(t) {
                    return this._events[t] = this._events[t] || [];
                }, h(n, s), n.prototype.pipe = function(t, e) {
                    function s() {
                        o.removeListener("data", i), o.removeListener("error", r), o.removeListener("end", n), 
                        t.removeListener("error", r), t.removeListener("close", s);
                    }
                    var i, r, n, o = this;
                    return o.on("data", i = function(e) {
                        t.write(e);
                    }), o.on("error", r = function(t) {
                        if (s(), !this.listeners("error").length) throw t;
                    }), o.on("end", n = function() {
                        t.end(), s();
                    }), t.on("error", r), t.on("close", s), t.emit("pipe", o), t;
                };
                var g = 0, v = 1, w = 2, x = 3, k = 4, C = 5, S = 6, M = {
                    type: "udk"
                };
                h(o, n), o.tangoColors = [ "#2e3436", "#cc0000", "#4e9a06", "#c4a000", "#3465a4", "#75507b", "#06989a", "#d3d7cf", "#555753", "#ef2929", "#8ae234", "#fce94f", "#729fcf", "#ad7fa8", "#34e2e2", "#eeeeec" ], 
                o.xtermColors = [ "#000000", "#cd0000", "#00cd00", "#cdcd00", "#0000ee", "#cd00cd", "#00cdcd", "#e5e5e5", "#7f7f7f", "#ff0000", "#00ff00", "#ffff00", "#5c5cff", "#ff00ff", "#00ffff", "#ffffff" ], 
                o.colors = function() {
                    function t(t, s, r) {
                        i.push("#" + e(t) + e(s) + e(r));
                    }
                    function e(t) {
                        return t = t.toString(16), t.length < 2 ? "0" + t : t;
                    }
                    var s, i = o.tangoColors.slice(), r = [ 0, 95, 135, 175, 215, 255 ];
                    for (s = 0; s < 216; s++) t(r[s / 36 % 6 | 0], r[s / 6 % 6 | 0], r[s % 6]);
                    for (s = 0; s < 24; s++) r = 8 + 10 * s, t(r, r, r);
                    return i;
                }(), o.colors[256] = "#000000", o.colors[257] = "#f0f0f0", o._colors = o.colors.slice(), 
                o.vcolors = function() {
                    for (var t, e = [], s = o.colors, i = 0; i < 256; i++) t = parseInt(s[i].substring(1), 16), 
                    e.push([ t >> 16 & 255, t >> 8 & 255, 255 & t ]);
                    return e;
                }(), o.defaults = {
                    colors: o.colors,
                    convertEol: !1,
                    termName: "xterm",
                    geometry: [ 80, 24 ],
                    cursorBlink: !0,
                    visualBell: !1,
                    popOnBell: !1,
                    scrollback: 1e3,
                    screenKeys: !1,
                    debug: !1,
                    useStyle: !1
                }, o.options = {}, m(y(o.defaults), function(t) {
                    o[t] = o.defaults[t], o.options[t] = o.defaults[t];
                }), o.focus = null, o.prototype.focus = function() {
                    o.focus !== this && (o.focus && o.focus.blur(), this.sendFocus && this.send("[I"), 
                    this.showCursor(), o.focus = this);
                }, o.prototype.blur = function() {
                    o.focus === this && (this.cursorState = 0, this.refresh(this.y, this.y), this.sendFocus && this.send("[O"), 
                    o.focus = null);
                }, o.prototype.initGlobal = function() {
                    var t = this.document;
                    o._boundDocs = o._boundDocs || [], ~d(o._boundDocs, t) || (o._boundDocs.push(t), 
                    o.bindPaste(t), o.bindKeys(t), o.bindCopy(t), this.isMobile && this.fixMobile(t), 
                    this.useStyle && o.insertStyle(t, this.colors[256], this.colors[257]));
                }, o.bindPaste = function(t) {
                    var e = t.defaultView;
                    a(e, "paste", function(t) {
                        var e = o.focus;
                        if (e) return t.clipboardData ? e.send(t.clipboardData.getData("text/plain")) : e.context.clipboardData && e.send(e.context.clipboardData.getData("Text")), 
                        e.element.contentEditable = "inherit", l(t);
                    });
                }, o.bindKeys = function(t) {
                    a(t, "keydown", function(t) {
                        if (o.focus) {
                            var e = t.target || t.srcElement;
                            if (e) return e === o.focus.element || e === o.focus.context || e === o.focus.document || e === o.focus.body || e === o._textarea || e === o.focus.parent ? o.focus.keyDown(t) : void 0;
                        }
                    }, !0), a(t, "keypress", function(t) {
                        if (o.focus) {
                            var e = t.target || t.srcElement;
                            if (e) return e === o.focus.element || e === o.focus.context || e === o.focus.document || e === o.focus.body || e === o._textarea || e === o.focus.parent ? o.focus.keyPress(t) : void 0;
                        }
                    }, !0), a(t, "mousedown", function(t) {
                        if (o.focus) {
                            var e = t.target || t.srcElement;
                            if (e) {
                                do if (e === o.focus.element) return; while (e = e.parentNode);
                                o.focus.blur();
                            }
                        }
                    });
                }, o.bindCopy = function(t) {
                    var e = t.defaultView;
                    a(e, "copy", function(t) {
                        var e = o.focus;
                        if (e && e._selected) {
                            var s = e.getCopyTextarea(), i = e.grabText(e._selected.x1, e._selected.x2, e._selected.y1, e._selected.y2);
                            e.emit("copy", i), s.focus(), s.textContent = i, s.value = i, s.setSelectionRange(0, i.length), 
                            T(function() {
                                e.element.focus(), e.focus();
                            }, 1);
                        }
                    });
                }, o.prototype.fixMobile = function(t) {
                    var e = this, s = t.createElement("textarea");
                    s.style.position = "absolute", s.style.left = "-32000px", s.style.top = "-32000px", 
                    s.style.width = "0px", s.style.height = "0px", s.style.opacity = "0", s.style.backgroundColor = "transparent", 
                    s.style.borderStyle = "none", s.style.outlineStyle = "none", s.autocapitalize = "none", 
                    s.autocorrect = "off", t.getElementsByTagName("body")[0].appendChild(s), o._textarea = s, 
                    T(function() {
                        s.focus();
                    }, 1e3), this.isAndroid && a(s, "change", function() {
                        var t = s.textContent || s.value;
                        s.value = "", s.textContent = "", e.send(t + "\r");
                    });
                }, o.insertStyle = function(t, e, s) {
                    var i = t.getElementById("term-style");
                    if (!i) {
                        var r = t.getElementsByTagName("head")[0];
                        if (r) {
                            var i = t.createElement("style");
                            i.id = "term-style", i.innerHTML = ".terminal {\n  float: left;\n  border: " + e + ' solid 5px;\n  font-family: "DejaVu Sans Mono", "Liberation Mono", monospace;\n  font-size: 11px;\n  color: ' + s + ";\n  background: " + e + ";\n}\n\n.terminal-cursor {\n  color: " + e + ";\n  background: " + s + ";\n}\n";
                            var n = "";
                            m(o.colors, function(t, e) {
                                256 === e && (n += "\n.term-bg-color-default { background-color: " + t + "; }"), 
                                257 === e && (n += "\n.term-fg-color-default { color: " + t + "; }"), n += "\n.term-bg-color-" + e + " { background-color: " + t + "; }", 
                                n += "\n.term-fg-color-" + e + " { color: " + t + "; }";
                            }), n += "\n.term-bold { font-weight: bold; }", n += "\n.term-underline { text-decoration: underline; }", 
                            n += "\n.term-blink { text-decoration: blink; }", n += "\n.term-hidden { visibility: hidden; }", 
                            i.innerHTML += n + "\n", r.insertBefore(i, r.firstChild);
                        }
                    }
                }, o.prototype.open = function(t) {
                    var e, s = this, i = 0;
                    if (this.parent = t || this.parent, !this.parent) throw new Error("Terminal requires a parent element.");
                    for (this.context = this.parent.ownerDocument.defaultView, this.document = this.parent.ownerDocument, 
                    this.body = this.document.getElementsByTagName("body")[0], this.context.navigator && this.context.navigator.userAgent && (this.isMac = !!~this.context.navigator.userAgent.indexOf("Mac"), 
                    this.isIpad = !!~this.context.navigator.userAgent.indexOf("iPad"), this.isIphone = !!~this.context.navigator.userAgent.indexOf("iPhone"), 
                    this.isAndroid = !!~this.context.navigator.userAgent.indexOf("Android"), this.isMobile = this.isIpad || this.isIphone || this.isAndroid, 
                    this.isMSIE = !!~this.context.navigator.userAgent.indexOf("MSIE")), this.element = this.document.createElement("div"), 
                    this.element.className = "terminal", this.element.style.outline = "none", this.element.setAttribute("tabindex", 0), 
                    this.element.setAttribute("spellcheck", "false"), this.element.style.backgroundColor = this.colors[256], 
                    this.element.style.color = this.colors[257], this.children = []; i < this.rows; i++) e = this.document.createElement("div"), 
                    this.element.appendChild(e), this.children.push(e);
                    this.parent.appendChild(this.element), this.refresh(0, this.rows - 1), "useEvents" in this.options && !this.options.useEvents || this.initGlobal(), 
                    "useFocus" in this.options && !this.options.useFocus || (this.focus(), this.startBlink(), 
                    a(this.element, "focus", function() {
                        s.focus(), s.isMobile && o._textarea.focus();
                    }), a(this.element, "mousedown", function() {
                        s.focus();
                    }), a(this.element, "mousedown", function(t) {
                        var e = null != t.button ? +t.button : null != t.which ? t.which - 1 : null;
                        s.isMSIE && (e = 1 === e ? 0 : 4 === e ? 1 : e), 2 === e && (s.element.contentEditable = "true", 
                        T(function() {
                            s.element.contentEditable = "inherit";
                        }, 1));
                    }, !0)), "useMouse" in this.options && !this.options.useMouse || this.bindMouse(), 
                    "useFocus" in this.options && !this.options.useFocus || T(function() {
                        s.element.focus();
                    }, 100), null == o.brokenBold && (o.brokenBold = u(this.document)), this.emit("open");
                }, o.prototype.setRawMode = function(t) {
                    this.isRaw = !!t;
                }, o.prototype.bindMouse = function() {
                    function t(t) {
                        var e, s;
                        if (e = r(t), s = n(t)) switch (i(e, s), t.type) {
                          case "mousedown":
                            u = e;
                            break;

                          case "mouseup":
                            u = 32;
                            break;

                          case d:                        }
                    }
                    function e(t) {
                        var e, s = u;
                        e = n(t), e && (s += 32, i(s, e));
                    }
                    function s(t, e) {
                        if (h.utfMouse) {
                            if (2047 === e) return t.push(0);
                            e < 127 ? t.push(e) : (e > 2047 && (e = 2047), t.push(192 | e >> 6), t.push(128 | 63 & e));
                        } else {
                            if (255 === e) return t.push(0);
                            e > 127 && (e = 127), t.push(e);
                        }
                    }
                    function i(t, e) {
                        if (h.vt300Mouse) {
                            t &= 3, e.x -= 32, e.y -= 32;
                            var i = "[24";
                            if (0 === t) i += "1"; else if (1 === t) i += "3"; else if (2 === t) i += "5"; else {
                                if (3 === t) return;
                                i += "0";
                            }
                            return i += "~[" + e.x + "," + e.y + "]\r", void h.send(i);
                        }
                        if (h.decLocator) return t &= 3, e.x -= 32, e.y -= 32, 0 === t ? t = 2 : 1 === t ? t = 4 : 2 === t ? t = 6 : 3 === t && (t = 3), 
                        void h.send("[" + t + ";" + (3 === t ? 4 : 0) + ";" + e.y + ";" + e.x + ";" + (e.page || 0) + "&w");
                        if (h.urxvtMouse) return e.x -= 32, e.y -= 32, e.x++, e.y++, void h.send("[" + t + ";" + e.x + ";" + e.y + "M");
                        if (h.sgrMouse) return e.x -= 32, e.y -= 32, void h.send("[<" + (3 === (3 & t) ? t & -4 : t) + ";" + e.x + ";" + e.y + (3 === (3 & t) ? "m" : "M"));
                        var i = [];
                        s(i, t), s(i, e.x), s(i, e.y), h.send("[M" + _.fromCharCode.apply(_, i));
                    }
                    function r(t) {
                        var e, s, i, r, n;
                        switch (t.type) {
                          case "mousedown":
                            e = null != t.button ? +t.button : null != t.which ? t.which - 1 : null, h.isMSIE && (e = 1 === e ? 0 : 4 === e ? 1 : e);
                            break;

                          case "mouseup":
                            e = 3;
                            break;

                          case "DOMMouseScroll":
                            e = t.detail < 0 ? 64 : 65;
                            break;

                          case "mousewheel":
                            e = t.wheelDeltaY > 0 ? 64 : 65;
                        }
                        return s = t.shiftKey ? 4 : 0, i = t.metaKey ? 8 : 0, r = t.ctrlKey ? 16 : 0, n = s | i | r, 
                        h.vt200Mouse ? n &= r : h.normalMouse || (n = 0), e = 32 + (n << 2) + e;
                    }
                    function n(t) {
                        var e, s, i, r, n;
                        if (null != t.pageX) {
                            for (e = t.pageX, s = t.pageY, n = h.element; n && n !== h.document.documentElement; ) e -= n.offsetLeft, 
                            s -= n.offsetTop, n = "offsetParent" in n ? n.offsetParent : n.parentNode;
                            return i = h.element.clientWidth, r = h.element.clientHeight, e = Math.round(e / i * h.cols), 
                            s = Math.round(s / r * h.rows), e < 0 && (e = 0), e > h.cols && (e = h.cols), s < 0 && (s = 0), 
                            s > h.rows && (s = h.rows), e += 32, s += 32, {
                                x: e,
                                y: s,
                                type: t.type === d ? "mousewheel" : t.type
                            };
                        }
                    }
                    var o = this.element, h = this, u = 32, d = "onmousewheel" in this.context ? "mousewheel" : "DOMMouseScroll";
                    a(o, "mousedown", function(s) {
                        if (h.mouseEvents) return t(s), h.focus(), h.normalMouse && a(h.document, "mousemove", e), 
                        h.x10Mouse || a(h.document, "mouseup", function s(i) {
                            return t(i), h.normalMouse && c(h.document, "mousemove", e), c(h.document, "mouseup", s), 
                            l(i);
                        }), l(s);
                    }), a(o, d, function(e) {
                        if (h.mouseEvents && !(h.x10Mouse || h.vt300Mouse || h.decLocator)) return t(e), 
                        l(e);
                    }), a(o, d, function(t) {
                        if (!h.mouseEvents && !h.applicationKeypad) return "DOMMouseScroll" === t.type ? h.scrollDisp(t.detail < 0 ? -5 : 5) : h.scrollDisp(t.wheelDeltaY > 0 ? -5 : 5), 
                        l(t);
                    });
                }, o.prototype.close = o.prototype.destroySoon = o.prototype.destroy = function() {
                    this.destroyed || (this._blink && (clearInterval(this._blink), delete this._blink), 
                    this.readable = !1, this.writable = !1, this.destroyed = !0, this._events = {}, 
                    this.handler = function() {}, this.write = function() {}, this.end = function() {}, 
                    this.element.parentNode && this.element.parentNode.removeChild(this.element), this.emit("end"), 
                    this.emit("close"), this.emit("finish"), this.emit("destroy"));
                }, o.prototype.refresh = function(t, e) {
                    var s, i, r, n, a, c, l, h, u, d, p, m, y, b;
                    for (e - t >= this.rows / 2 && (b = this.element.parentNode, b && b.removeChild(this.element)), 
                    l = this.cols, i = t, e >= this.lines.length && (this.log("`end` is too large. Most likely a bad CSR."), 
                    e = this.lines.length - 1); i <= e; i++) {
                        for (y = i + this.ydisp, n = this.lines[y], a = "", s = i !== this.y || !this.cursorState || this.ydisp !== this.ybase && !this.selectMode || this.cursorHidden ? -1 : this.x, 
                        u = this.defAttr, r = 0; r < l; r++) {
                            switch (h = n[r][0], c = n[r][1], r === s && (h = -1), h !== u && (u !== this.defAttr && (a += "</span>"), 
                            h !== this.defAttr && (h === -1 ? a += '<span class="reverse-video terminal-cursor">' : (a += this.useStyle ? '<span class="' : '<span style="', 
                            d = 511 & h, p = h >> 9 & 511, m = h >> 18, 1 & m && (o.brokenBold || (a += this.useStyle ? "term-bold " : "font-weight:bold;"), 
                            p < 8 && (p += 8)), 2 & m && (a += this.useStyle ? "term-underline " : "text-decoration:underline;"), 
                            4 & m && (this.useStyle ? a += "term-blink " : 2 & m ? (a = a.slice(0, -1), a += " blink;") : a += "text-decoration:blink;"), 
                            8 & m && (d = h >> 9 & 511, p = 511 & h, 1 & m && p < 8 && (p += 8)), 16 & m && (a += this.useStyle ? "term-hidden " : "visibility:hidden;"), 
                            256 !== d && (a += this.useStyle ? "term-bg-color-" + d + " " : "background-color:" + this.colors[d] + ";"), 
                            257 !== p && (a += this.useStyle ? "term-fg-color-" + p + " " : "color:" + this.colors[p] + ";"), 
                            a += '">'))), c) {
                              case "&":
                                a += "&amp;";
                                break;

                              case "<":
                                a += "&lt;";
                                break;

                              case ">":
                                a += "&gt;";
                                break;

                              default:
                                c <= " " ? a += "&nbsp;" : (f(c) && r++, a += c);
                            }
                            u = h;
                        }
                        u !== this.defAttr && (a += "</span>"), this.children[i].innerHTML = a;
                    }
                    b && b.appendChild(this.element);
                }, o.prototype._cursorBlink = function() {
                    o.focus === this && (this.cursorState ^= 1, this.refresh(this.y, this.y));
                }, o.prototype.showCursor = function() {
                    this.cursorState || (this.cursorState = 1, this.refresh(this.y, this.y));
                }, o.prototype.startBlink = function() {
                    if (this.cursorBlink) {
                        var t = this;
                        this._blinker = function() {
                            t._cursorBlink();
                        }, this._blink = E(this._blinker, 500);
                    }
                }, o.prototype.refreshBlink = function() {
                    this.cursorBlink && this._blink && (clearInterval(this._blink), this._blink = E(this._blinker, 500));
                }, o.prototype.scroll = function() {
                    var t;
                    ++this.ybase === this.scrollback && (this.ybase = this.ybase / 2 | 0, this.lines = this.lines.slice(-(this.ybase + this.rows) + 1)), 
                    this.ydisp = this.ybase, t = this.ybase + this.rows - 1, t -= this.rows - 1 - this.scrollBottom, 
                    t === this.lines.length ? this.lines.push(this.blankLine()) : this.lines.splice(t, 0, this.blankLine()), 
                    0 !== this.scrollTop && (0 !== this.ybase && (this.ybase--, this.ydisp = this.ybase), 
                    this.lines.splice(this.ybase + this.scrollTop, 1)), this.updateRange(this.scrollTop), 
                    this.updateRange(this.scrollBottom);
                }, o.prototype.scrollDisp = function(t) {
                    this.ydisp += t, this.ydisp > this.ybase ? this.ydisp = this.ybase : this.ydisp < 0 && (this.ydisp = 0), 
                    this.refresh(0, this.rows - 1);
                }, o.prototype.write = function(t) {
                    var e, s, i, r = t.length, n = 0;
                    for (this.refreshStart = this.y, this.refreshEnd = this.y, this.ybase !== this.ydisp && (this.ydisp = this.ybase, 
                    this.maxRange()); n < r; n++, this.lch = i) switch (i = t[n], this.state) {
                      case g:
                        switch (i) {
                          case "":
                            this.bell();
                            break;

                          case "\n":
                          case "\v":
                          case "\f":
                            this.convertEol && (this.x = 0), this.y++, this.y > this.scrollBottom && (this.y--, 
                            this.scroll());
                            break;

                          case "\r":
                            this.x = 0;
                            break;

                          case "\b":
                            this.x > 0 && this.x--;
                            break;

                          case "\t":
                            this.x = this.nextStop();
                            break;

                          case "":
                            this.setgLevel(1);
                            break;

                          case "":
                            this.setgLevel(0);
                            break;

                          case "":
                            this.state = v;
                            break;

                          default:
                            if (i >= " " && (this.charset && this.charset[i] && (i = this.charset[i]), this.x >= this.cols && (this.x = 0, 
                            this.y++, this.y > this.scrollBottom && (this.y--, this.scroll())), this.lines[this.y + this.ybase][this.x] = [ this.curAttr, i ], 
                            this.x++, this.updateRange(this.y), f(i))) {
                                if (e = this.y + this.ybase, this.cols < 2 || this.x >= this.cols) {
                                    this.lines[e][this.x - 1] = [ this.curAttr, " " ];
                                    break;
                                }
                                this.lines[e][this.x] = [ this.curAttr, " " ], this.x++;
                            }
                        }
                        break;

                      case v:
                        switch (i) {
                          case "[":
                            this.params = [], this.currentParam = 0, this.state = w;
                            break;

                          case "]":
                            this.params = [], this.currentParam = 0, this.state = x;
                            break;

                          case "P":
                            this.params = [], this.prefix = "", this.currentParam = "", this.state = C;
                            break;

                          case "_":
                            this.state = S;
                            break;

                          case "^":
                            this.state = S;
                            break;

                          case "c":
                            this.reset();
                            break;

                          case "E":
                            this.x = 0;

                          case "D":
                            this.index();
                            break;

                          case "M":
                            this.reverseIndex();
                            break;

                          case "%":
                            this.setgLevel(0), this.setgCharset(0, o.charsets.US), this.state = g, n++;
                            break;

                          case "(":
                          case ")":
                          case "*":
                          case "+":
                          case "-":
                          case ".":
                            switch (i) {
                              case "(":
                                this.gcharset = 0;
                                break;

                              case ")":
                                this.gcharset = 1;
                                break;

                              case "*":
                                this.gcharset = 2;
                                break;

                              case "+":
                                this.gcharset = 3;
                                break;

                              case "-":
                                this.gcharset = 1;
                                break;

                              case ".":
                                this.gcharset = 2;
                            }
                            this.state = k;
                            break;

                          case "/":
                            this.gcharset = 3, this.state = k, n--;
                            break;

                          case "N":
                            break;

                          case "O":
                            break;

                          case "n":
                            this.setgLevel(2);
                            break;

                          case "o":
                            this.setgLevel(3);
                            break;

                          case "|":
                            this.setgLevel(3);
                            break;

                          case "}":
                            this.setgLevel(2);
                            break;

                          case "~":
                            this.setgLevel(1);
                            break;

                          case "7":
                            this.saveCursor(), this.state = g;
                            break;

                          case "8":
                            this.restoreCursor(), this.state = g;
                            break;

                          case "#":
                            this.state = g, n++;
                            break;

                          case "H":
                            this.tabSet();
                            break;

                          case "=":
                            this.log("Serial port requested application keypad."), this.applicationKeypad = !0, 
                            this.state = g;
                            break;

                          case ">":
                            this.log("Switching back to normal keypad."), this.applicationKeypad = !1, this.state = g;
                            break;

                          default:
                            this.state = g, this.error("Unknown ESC control: %s.", i);
                        }
                        break;

                      case k:
                        switch (i) {
                          case "0":
                            s = o.charsets.SCLD;
                            break;

                          case "A":
                            s = o.charsets.UK;
                            break;

                          case "B":
                            s = o.charsets.US;
                            break;

                          case "4":
                            s = o.charsets.Dutch;
                            break;

                          case "C":
                          case "5":
                            s = o.charsets.Finnish;
                            break;

                          case "R":
                            s = o.charsets.French;
                            break;

                          case "Q":
                            s = o.charsets.FrenchCanadian;
                            break;

                          case "K":
                            s = o.charsets.German;
                            break;

                          case "Y":
                            s = o.charsets.Italian;
                            break;

                          case "E":
                          case "6":
                            s = o.charsets.NorwegianDanish;
                            break;

                          case "Z":
                            s = o.charsets.Spanish;
                            break;

                          case "H":
                          case "7":
                            s = o.charsets.Swedish;
                            break;

                          case "=":
                            s = o.charsets.Swiss;
                            break;

                          case "/":
                            s = o.charsets.ISOLatin, n++;
                            break;

                          default:
                            s = o.charsets.US;
                        }
                        this.setgCharset(this.gcharset, s), this.gcharset = null, this.state = g;
                        break;

                      case x:
                        if ("" === this.lch && "\\" === i || "" === i) {
                            switch ("" === this.lch && ("string" == typeof this.currentParam ? this.currentParam = this.currentParam.slice(0, -1) : "number" == typeof this.currentParam && (this.currentParam = (this.currentParam - ("".charCodeAt(0) - 48)) / 10)), 
                            this.params.push(this.currentParam), this.params[0]) {
                              case 0:
                              case 1:
                              case 2:
                                this.params[1] && (this.title = this.params[1], this.handleTitle(this.title));
                                break;

                              case 3:
                                break;

                              case 4:
                              case 5:
                                break;

                              case 10:
                              case 11:
                              case 12:
                              case 13:
                              case 14:
                              case 15:
                              case 16:
                              case 17:
                              case 18:
                              case 19:
                                break;

                              case 46:
                                break;

                              case 50:
                                break;

                              case 51:
                                break;

                              case 52:
                                break;

                              case 104:
                              case 105:
                              case 110:
                              case 111:
                              case 112:
                              case 113:
                              case 114:
                              case 115:
                              case 116:
                              case 117:
                              case 118:                            }
                            this.params = [], this.currentParam = 0, this.state = g;
                        } else this.params.length ? this.currentParam += i : i >= "0" && i <= "9" ? this.currentParam = 10 * this.currentParam + i.charCodeAt(0) - 48 : ";" === i && (this.params.push(this.currentParam), 
                        this.currentParam = "");
                        break;

                      case w:
                        if ("?" === i || ">" === i || "!" === i) {
                            this.prefix = i;
                            break;
                        }
                        if (i >= "0" && i <= "9") {
                            this.currentParam = 10 * this.currentParam + i.charCodeAt(0) - 48;
                            break;
                        }
                        if ("$" === i || '"' === i || " " === i || "'" === i) {
                            this.postfix = i;
                            break;
                        }
                        if (this.params.push(this.currentParam), this.currentParam = 0, ";" === i) break;
                        switch (this.state = g, i) {
                          case "A":
                            this.cursorUp(this.params);
                            break;

                          case "B":
                            this.cursorDown(this.params);
                            break;

                          case "C":
                            this.cursorForward(this.params);
                            break;

                          case "D":
                            this.cursorBackward(this.params);
                            break;

                          case "H":
                            this.cursorPos(this.params);
                            break;

                          case "J":
                            this.eraseInDisplay(this.params);
                            break;

                          case "K":
                            this.eraseInLine(this.params);
                            break;

                          case "m":
                            this.prefix || this.charAttributes(this.params);
                            break;

                          case "n":
                            this.prefix || this.deviceStatus(this.params);
                            break;

                          case "@":
                            this.insertChars(this.params);
                            break;

                          case "E":
                            this.cursorNextLine(this.params);
                            break;

                          case "F":
                            this.cursorPrecedingLine(this.params);
                            break;

                          case "G":
                            this.cursorCharAbsolute(this.params);
                            break;

                          case "L":
                            this.insertLines(this.params);
                            break;

                          case "M":
                            this.deleteLines(this.params);
                            break;

                          case "P":
                            this.deleteChars(this.params);
                            break;

                          case "X":
                            this.eraseChars(this.params);
                            break;

                          case "`":
                            this.charPosAbsolute(this.params);
                            break;

                          case "a":
                            this.HPositionRelative(this.params);
                            break;

                          case "c":
                            this.sendDeviceAttributes(this.params);
                            break;

                          case "d":
                            this.linePosAbsolute(this.params);
                            break;

                          case "e":
                            this.VPositionRelative(this.params);
                            break;

                          case "f":
                            this.HVPosition(this.params);
                            break;

                          case "h":
                            this.setMode(this.params);
                            break;

                          case "l":
                            this.resetMode(this.params);
                            break;

                          case "r":
                            this.setScrollRegion(this.params);
                            break;

                          case "s":
                            this.saveCursor(this.params);
                            break;

                          case "u":
                            this.restoreCursor(this.params);
                            break;

                          case "I":
                            this.cursorForwardTab(this.params);
                            break;

                          case "S":
                            this.scrollUp(this.params);
                            break;

                          case "T":
                            this.params.length < 2 && !this.prefix && this.scrollDown(this.params);
                            break;

                          case "Z":
                            this.cursorBackwardTab(this.params);
                            break;

                          case "b":
                            this.repeatPrecedingCharacter(this.params);
                            break;

                          case "g":
                            this.tabClear(this.params);
                            break;

                          case "p":
                            switch (this.prefix) {
                              case "!":
                                this.softReset(this.params);
                            }
                            break;

                          default:
                            this.error("Unknown CSI code: %s.", i);
                        }
                        this.prefix = "", this.postfix = "";
                        break;

                      case C:
                        if ("" === this.lch && "\\" === i || "" === i) {
                            if ("tmux;" === this.prefix && "" === i) {
                                this.currentParam += i;
                                continue;
                            }
                            "" === this.lch && ("string" == typeof this.currentParam ? this.currentParam = this.currentParam.slice(0, -1) : "number" == typeof this.currentParam && (this.currentParam = (this.currentParam - ("".charCodeAt(0) - 48)) / 10)), 
                            this.params.push(this.currentParam);
                            var a = this.params[this.params.length - 1];
                            switch (this.prefix) {
                              case M:
                                this.emit("udk", {
                                    clearAll: 0 === this.params[0],
                                    eraseBelow: 1 === this.params[0],
                                    lockKeys: 0 === this.params[1],
                                    dontLockKeys: 1 === this.params[1],
                                    keyList: (this.params[2] + "").split(";").map(function(t) {
                                        return t = t.split("/"), {
                                            keyCode: t[0],
                                            hexKeyValue: t[1]
                                        };
                                    })
                                });
                                break;

                              case "$q":
                                var c = 0;
                                switch (a) {
                                  case '"q':
                                    a = '0"q', c = 1;
                                    break;

                                  case '"p':
                                    a = '61;0"p', c = 1;
                                    break;

                                  case "r":
                                    a = "" + (this.scrollTop + 1) + ";" + (this.scrollBottom + 1) + "r", c = 1;
                                    break;

                                  case "m":
                                    c = 0;
                                    break;

                                  default:
                                    this.error("Unknown DCS Pt: %s.", a), c = 0;
                                }
                                this.send("P" + c + "$r" + a + "\\");
                                break;

                              case "+p":
                                this.emit("set terminfo", {
                                    name: this.params[0]
                                });
                                break;

                              case "+q":
                                var c = !1;
                                this.send("P" + +c + "+r" + a + "\\");
                                break;

                              case "tmux;":
                                this.emit("passthrough", a);
                                break;

                              default:
                                this.error("Unknown DCS prefix: %s.", a);
                            }
                            this.currentParam = 0, this.prefix = "", this.state = g;
                        } else this.currentParam += i, this.prefix || (/^\d*;\d*\|/.test(this.currentParam) ? (this.prefix = M, 
                        this.params = this.currentParam.split(/[;|]/).map(function(t) {
                            return t.length ? +t : 0;
                        }).slice(0, -1), this.currentParam = "") : (/^[$+][a-zA-Z]/.test(this.currentParam) || /^\w+;\x1b/.test(this.currentParam)) && (this.prefix = this.currentParam, 
                        this.currentParam = ""));
                        break;

                      case S:
                        ("" === this.lch && "\\" === i || "" === i) && (this.state = g);
                    }
                    return this.updateRange(this.y), this.refresh(this.refreshStart, this.refreshEnd), 
                    !0;
                }, o.prototype.writeln = function(t) {
                    return this.write(t + "\r\n");
                }, o.prototype.end = function(t) {
                    var e = !0;
                    return t && (e = this.write(t)), this.destroySoon(), e;
                }, o.prototype.resume = function() {}, o.prototype.pause = function() {}, o.prototype.keyDown = function(t) {
                    var e, s = this;
                    switch (t.keyCode) {
                      case 8:
                        if (t.altKey) {
                            e = "";
                            break;
                        }
                        if (t.shiftKey) {
                            e = "\b";
                            break;
                        }
                        e = "";
                        break;

                      case 9:
                        if (t.shiftKey) {
                            e = "[Z";
                            break;
                        }
                        e = "\t";
                        break;

                      case 13:
                        e = "\r";
                        break;

                      case 27:
                        e = "";
                        break;

                      case 32:
                        e = " ";
                        break;

                      case 37:
                        if (this.applicationCursor) {
                            e = "OD";
                            break;
                        }
                        if (t.ctrlKey) {
                            e = "[5D";
                            break;
                        }
                        e = "[D";
                        break;

                      case 39:
                        if (this.applicationCursor) {
                            e = "OC";
                            break;
                        }
                        if (t.ctrlKey) {
                            e = "[5C";
                            break;
                        }
                        e = "[C";
                        break;

                      case 38:
                        if (this.applicationCursor) {
                            e = "OA";
                            break;
                        }
                        if (t.ctrlKey) return this.scrollDisp(-1), l(t);
                        e = "[A";
                        break;

                      case 40:
                        if (this.applicationCursor) {
                            e = "OB";
                            break;
                        }
                        if (t.ctrlKey) return this.scrollDisp(1), l(t);
                        e = "[B";
                        break;

                      case 46:
                        e = "[3~";
                        break;

                      case 45:
                        e = "[2~";
                        break;

                      case 36:
                        if (this.applicationKeypad) {
                            e = "OH";
                            break;
                        }
                        e = "OH";
                        break;

                      case 35:
                        if (this.applicationKeypad) {
                            e = "OF";
                            break;
                        }
                        e = "OF";
                        break;

                      case 33:
                        if (t.shiftKey) return this.scrollDisp(-(this.rows - 1)), l(t);
                        e = "[5~";
                        break;

                      case 34:
                        if (t.shiftKey) return this.scrollDisp(this.rows - 1), l(t);
                        e = "[6~";
                        break;

                      case 112:
                        e = "OP";
                        break;

                      case 113:
                        e = "OQ";
                        break;

                      case 114:
                        e = "OR";
                        break;

                      case 115:
                        e = "OS";
                        break;

                      case 116:
                        e = "[15~";
                        break;

                      case 117:
                        e = "[17~";
                        break;

                      case 118:
                        e = "[18~";
                        break;

                      case 119:
                        e = "[19~";
                        break;

                      case 120:
                        e = "[20~";
                        break;

                      case 121:
                        e = "[21~";
                        break;

                      case 122:
                        e = "[23~";
                        break;

                      case 123:
                        e = "[24~";
                        break;

                      default:
                        if (t.ctrlKey) if (t.keyCode >= 65 && t.keyCode <= 90) {
                            if (this.screenKeys && !this.prefixMode && !this.selectMode && 65 === t.keyCode) return this.enterPrefix(), 
                            l(t);
                            if (this.prefixMode && 86 === t.keyCode) return void this.leavePrefix();
                            if ((this.prefixMode || this.selectMode) && 67 === t.keyCode) return void (this.visualMode && T(function() {
                                s.leaveVisual();
                            }, 1));
                            e = _.fromCharCode(t.keyCode - 64);
                        } else 32 === t.keyCode ? e = _.fromCharCode(0) : t.keyCode >= 51 && t.keyCode <= 55 ? e = _.fromCharCode(t.keyCode - 51 + 27) : 56 === t.keyCode ? e = _.fromCharCode(127) : 219 === t.keyCode ? e = _.fromCharCode(27) : 221 === t.keyCode && (e = _.fromCharCode(29)); else t.altKey && (t.keyCode >= 65 && t.keyCode <= 90 ? e = "" + _.fromCharCode(t.keyCode + 32) : 192 === t.keyCode ? e = "`" : t.keyCode >= 48 && t.keyCode <= 57 && (e = "" + (t.keyCode - 48)));
                    }
                    return !e || (this.prefixMode ? (this.leavePrefix(), l(t)) : this.selectMode ? (this.keySelect(t, e), 
                    l(t)) : (this.emit("keydown", t), this.emit("key", e, t), this.showCursor(), this.handler(e), 
                    l(t)));
                }, o.prototype.setgLevel = function(t) {
                    this.glevel = t, this.charset = this.charsets[t];
                }, o.prototype.setgCharset = function(t, e) {
                    this.charsets[t] = e, this.glevel === t && (this.charset = e);
                }, o.prototype.keyPress = function(t) {
                    var e;
                    if (l(t), t.charCode) e = t.charCode; else if (null == t.which) e = t.keyCode; else {
                        if (0 === t.which || 0 === t.charCode) return !1;
                        e = t.which;
                    }
                    return !(!e || t.ctrlKey || t.altKey || t.metaKey) && (e = _.fromCharCode(e), this.prefixMode ? (this.leavePrefix(), 
                    this.keyPrefix(t, e), !1) : this.selectMode ? (this.keySelect(t, e), !1) : (this.emit("keypress", e, t), 
                    this.emit("key", e, t), this.showCursor(), this.handler(e), !1));
                }, o.prototype.send = function(t) {
                    var e = this;
                    this.queue || T(function() {
                        e.handler(e.queue), e.queue = "";
                    }, 1), this.queue += t;
                }, o.prototype.bell = function() {
                    if (this.emit("bell"), this.visualBell) {
                        var t = this;
                        this.element.style.borderColor = "white", T(function() {
                            t.element.style.borderColor = "";
                        }, 10), this.popOnBell && this.focus();
                    }
                }, o.prototype.log = function() {
                    if (this.debug && this.context.console && this.context.console.log) {
                        var t = Array.prototype.slice.call(arguments);
                        this.context.console.log.apply(this.context.console, t);
                    }
                }, o.prototype.error = function() {
                    if (this.debug && this.context.console && this.context.console.error) {
                        var t = Array.prototype.slice.call(arguments);
                        this.context.console.error.apply(this.context.console, t);
                    }
                }, o.prototype.resize = function(t, e) {
                    var s, i, r, n, o;
                    if (t < 1 && (t = 1), e < 1 && (e = 1), n = this.cols, n < t) for (o = [ this.defAttr, " " ], 
                    r = this.lines.length; r--; ) for (;this.lines[r].length < t; ) this.lines[r].push(o); else if (n > t) for (r = this.lines.length; r--; ) for (;this.lines[r].length > t; ) this.lines[r].pop();
                    if (this.setupStops(n), this.cols = t, this.columns = t, n = this.rows, n < e) for (i = this.element; n++ < e; ) this.lines.length < e + this.ybase && this.lines.push(this.blankLine()), 
                    this.children.length < e && (s = this.document.createElement("div"), i.appendChild(s), 
                    this.children.push(s)); else if (n > e) for (;n-- > e; ) if (this.lines.length > e + this.ybase && this.lines.pop(), 
                    this.children.length > e) {
                        if (i = this.children.pop(), !i) continue;
                        i.parentNode.removeChild(i);
                    }
                    this.rows = e, this.y >= e && (this.y = e - 1), this.x >= t && (this.x = t - 1), 
                    this.scrollTop = 0, this.scrollBottom = e - 1, this.refresh(0, this.rows - 1), this.normal = null, 
                    this.emit("resize");
                }, o.prototype.updateRange = function(t) {
                    t < this.refreshStart && (this.refreshStart = t), t > this.refreshEnd && (this.refreshEnd = t);
                }, o.prototype.maxRange = function() {
                    this.refreshStart = 0, this.refreshEnd = this.rows - 1;
                }, o.prototype.setupStops = function(t) {
                    for (null != t ? this.tabs[t] || (t = this.prevStop(t)) : (this.tabs = {}, t = 0); t < this.cols; t += 8) this.tabs[t] = !0;
                }, o.prototype.prevStop = function(t) {
                    for (null == t && (t = this.x); !this.tabs[--t] && t > 0; ) ;
                    return t >= this.cols ? this.cols - 1 : t < 0 ? 0 : t;
                }, o.prototype.nextStop = function(t) {
                    for (null == t && (t = this.x); !this.tabs[++t] && t < this.cols; ) ;
                    return t >= this.cols ? this.cols - 1 : t < 0 ? 0 : t;
                }, o.prototype.eraseAttr = function() {
                    return this.defAttr & -512 | 511 & this.curAttr;
                }, o.prototype.eraseRight = function(t, e) {
                    for (var s = this.lines[this.ybase + e], i = [ this.eraseAttr(), " " ]; t < this.cols; t++) s[t] = i;
                    this.updateRange(e);
                }, o.prototype.eraseLeft = function(t, e) {
                    var s = this.lines[this.ybase + e], i = [ this.eraseAttr(), " " ];
                    for (t++; t--; ) s[t] = i;
                    this.updateRange(e);
                }, o.prototype.eraseLine = function(t) {
                    this.eraseRight(0, t);
                }, o.prototype.blankLine = function(t) {
                    for (var e = t ? this.eraseAttr() : this.defAttr, s = [ e, " " ], i = [], r = 0; r < this.cols; r++) i[r] = s;
                    return i;
                }, o.prototype.ch = function(t) {
                    return t ? [ this.eraseAttr(), " " ] : [ this.defAttr, " " ];
                }, o.prototype.is = function(t) {
                    var e = this.termName;
                    return 0 === (e + "").indexOf(t);
                }, o.prototype.handler = function(t) {
                    this.emit("data", t);
                }, o.prototype.handleTitle = function(t) {
                    this.emit("title", t);
                }, o.prototype.index = function() {
                    this.y++, this.y > this.scrollBottom && (this.y--, this.scroll()), this.state = g;
                }, o.prototype.reverseIndex = function() {
                    var t;
                    this.y--, this.y < this.scrollTop && (this.y++, this.lines.splice(this.y + this.ybase, 0, this.blankLine(!0)), 
                    t = this.rows - 1 - this.scrollBottom, this.lines.splice(this.rows - 1 + this.ybase - t + 1, 1), 
                    this.updateRange(this.scrollTop), this.updateRange(this.scrollBottom)), this.state = g;
                }, o.prototype.reset = function() {
                    this.options.rows = this.rows, this.options.cols = this.cols, o.call(this, this.options), 
                    this.refresh(0, this.rows - 1);
                }, o.prototype.tabSet = function() {
                    this.tabs[this.x] = !0, this.state = g;
                }, o.prototype.cursorUp = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.y -= e, this.y < 0 && (this.y = 0);
                }, o.prototype.cursorDown = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.y += e, this.y >= this.rows && (this.y = this.rows - 1);
                }, o.prototype.cursorForward = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.x += e, this.x >= this.cols && (this.x = this.cols - 1);
                }, o.prototype.cursorBackward = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.x -= e, this.x < 0 && (this.x = 0);
                }, o.prototype.cursorPos = function(t) {
                    var e, s;
                    e = t[0] - 1, s = t.length >= 2 ? t[1] - 1 : 0, e < 0 ? e = 0 : e >= this.rows && (e = this.rows - 1), 
                    s < 0 ? s = 0 : s >= this.cols && (s = this.cols - 1), this.x = s, this.y = e;
                }, o.prototype.eraseInDisplay = function(t) {
                    var e;
                    switch (t[0]) {
                      case 0:
                        for (this.eraseRight(this.x, this.y), e = this.y + 1; e < this.rows; e++) this.eraseLine(e);
                        break;

                      case 1:
                        for (this.eraseLeft(this.x, this.y), e = this.y; e--; ) this.eraseLine(e);
                        break;

                      case 2:
                        for (e = this.rows; e--; ) this.eraseLine(e);
                        break;

                      case 3:                    }
                }, o.prototype.eraseInLine = function(t) {
                    switch (t[0]) {
                      case 0:
                        this.eraseRight(this.x, this.y);
                        break;

                      case 1:
                        this.eraseLeft(this.x, this.y);
                        break;

                      case 2:
                        this.eraseLine(this.y);
                    }
                }, o.prototype.charAttributes = function(t) {
                    if (1 === t.length && 0 === t[0]) return void (this.curAttr = this.defAttr);
                    for (var e, s = t.length, i = 0, r = this.curAttr >> 18, n = this.curAttr >> 9 & 511, o = 511 & this.curAttr; i < s; i++) e = t[i], 
                    e >= 30 && e <= 37 ? n = e - 30 : e >= 40 && e <= 47 ? o = e - 40 : e >= 90 && e <= 97 ? (e += 8, 
                    n = e - 90) : e >= 100 && e <= 107 ? (e += 8, o = e - 100) : 0 === e ? (r = this.defAttr >> 18, 
                    n = this.defAttr >> 9 & 511, o = 511 & this.defAttr) : 1 === e ? r |= 1 : 4 === e ? r |= 2 : 5 === e ? r |= 4 : 7 === e ? r |= 8 : 8 === e ? r |= 16 : 22 === e ? r &= -2 : 24 === e ? r &= -3 : 25 === e ? r &= -5 : 27 === e ? r &= -9 : 28 === e ? r &= -17 : 39 === e ? n = this.defAttr >> 9 & 511 : 49 === e ? o = 511 & this.defAttr : 38 === e ? 2 === t[i + 1] ? (i += 2, 
                    n = p(255 & t[i], 255 & t[i + 1], 255 & t[i + 2]), n === -1 && (n = 511), i += 2) : 5 === t[i + 1] && (i += 2, 
                    e = 255 & t[i], n = e) : 48 === e ? 2 === t[i + 1] ? (i += 2, o = p(255 & t[i], 255 & t[i + 1], 255 & t[i + 2]), 
                    o === -1 && (o = 511), i += 2) : 5 === t[i + 1] && (i += 2, e = 255 & t[i], o = e) : 100 === e ? (n = this.defAttr >> 9 & 511, 
                    o = 511 & this.defAttr) : this.error("Unknown SGR attribute: %d.", e);
                    this.curAttr = r << 18 | n << 9 | o;
                }, o.prototype.deviceStatus = function(t) {
                    if (this.prefix) {
                        if ("?" === this.prefix) switch (t[0]) {
                          case 6:
                            this.send("[?" + (this.y + 1) + ";" + (this.x + 1) + "R");
                            break;

                          case 15:
                            break;

                          case 25:
                            break;

                          case 26:
                            break;

                          case 53:                        }
                    } else switch (t[0]) {
                      case 5:
                        this.send("[0n");
                        break;

                      case 6:
                        this.send("[" + (this.y + 1) + ";" + (this.x + 1) + "R");
                    }
                }, o.prototype.insertChars = function(t) {
                    var e, s, i, r;
                    for (e = t[0], e < 1 && (e = 1), s = this.y + this.ybase, i = this.x, r = [ this.eraseAttr(), " " ]; e-- && i < this.cols; ) this.lines[s].splice(i++, 0, r), 
                    this.lines[s].pop();
                }, o.prototype.cursorNextLine = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.y += e, this.y >= this.rows && (this.y = this.rows - 1), 
                    this.x = 0;
                }, o.prototype.cursorPrecedingLine = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.y -= e, this.y < 0 && (this.y = 0), this.x = 0;
                }, o.prototype.cursorCharAbsolute = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.x = e - 1;
                }, o.prototype.insertLines = function(t) {
                    var e, s, i;
                    for (e = t[0], e < 1 && (e = 1), s = this.y + this.ybase, i = this.rows - 1 - this.scrollBottom, 
                    i = this.rows - 1 + this.ybase - i + 1; e--; ) this.lines.splice(s, 0, this.blankLine(!0)), 
                    this.lines.splice(i, 1);
                    this.updateRange(this.y), this.updateRange(this.scrollBottom);
                }, o.prototype.deleteLines = function(t) {
                    var e, s, i;
                    for (e = t[0], e < 1 && (e = 1), s = this.y + this.ybase, i = this.rows - 1 - this.scrollBottom, 
                    i = this.rows - 1 + this.ybase - i; e--; ) this.lines.splice(i + 1, 0, this.blankLine(!0)), 
                    this.lines.splice(s, 1);
                    this.updateRange(this.y), this.updateRange(this.scrollBottom);
                }, o.prototype.deleteChars = function(t) {
                    var e, s, i;
                    for (e = t[0], e < 1 && (e = 1), s = this.y + this.ybase, i = [ this.eraseAttr(), " " ]; e--; ) this.lines[s].splice(this.x, 1), 
                    this.lines[s].push(i);
                }, o.prototype.eraseChars = function(t) {
                    var e, s, i, r;
                    for (e = t[0], e < 1 && (e = 1), s = this.y + this.ybase, i = this.x, r = [ this.eraseAttr(), " " ]; e-- && i < this.cols; ) this.lines[s][i++] = r;
                }, o.prototype.charPosAbsolute = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.x = e - 1, this.x >= this.cols && (this.x = this.cols - 1);
                }, o.prototype.HPositionRelative = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.x += e, this.x >= this.cols && (this.x = this.cols - 1);
                }, o.prototype.sendDeviceAttributes = function(t) {
                    t[0] > 0 || (this.prefix ? ">" === this.prefix && (this.is("xterm") ? this.send("[>0;276;0c") : this.is("rxvt-unicode") ? this.send("[>85;95;0c") : this.is("linux") ? this.send(t[0] + "c") : this.is("screen") && this.send("[>83;40003;0c")) : this.is("xterm") || this.is("rxvt-unicode") || this.is("screen") ? this.send("[?1;2c") : this.is("linux") && this.send("[?6c"));
                }, o.prototype.linePosAbsolute = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.y = e - 1, this.y >= this.rows && (this.y = this.rows - 1);
                }, o.prototype.VPositionRelative = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.y += e, this.y >= this.rows && (this.y = this.rows - 1);
                }, o.prototype.HVPosition = function(t) {
                    t[0] < 1 && (t[0] = 1), t[1] < 1 && (t[1] = 1), this.y = t[0] - 1, this.y >= this.rows && (this.y = this.rows - 1), 
                    this.x = t[1] - 1, this.x >= this.cols && (this.x = this.cols - 1);
                }, o.prototype.setMode = function(t) {
                    if ("object" != typeof t) if (this.prefix) {
                        if ("?" === this.prefix) switch (t) {
                          case 1:
                            this.applicationCursor = !0;
                            break;

                          case 2:
                            this.setgCharset(0, o.charsets.US), this.setgCharset(1, o.charsets.US), this.setgCharset(2, o.charsets.US), 
                            this.setgCharset(3, o.charsets.US);
                            break;

                          case 3:
                            this.savedCols = this.cols, this.resize(132, this.rows);
                            break;

                          case 6:
                            this.originMode = !0;
                            break;

                          case 7:
                            this.wraparoundMode = !0;
                            break;

                          case 12:
                            break;

                          case 66:
                            this.log("Serial port requested application keypad."), this.applicationKeypad = !0;
                            break;

                          case 9:
                          case 1e3:
                          case 1002:
                          case 1003:
                            this.x10Mouse = 9 === t, this.vt200Mouse = 1e3 === t, this.normalMouse = t > 1e3, 
                            this.mouseEvents = !0, this.element.style.cursor = "default", this.log("Binding to mouse events.");
                            break;

                          case 1004:
                            this.sendFocus = !0;
                            break;

                          case 1005:
                            this.utfMouse = !0;
                            break;

                          case 1006:
                            this.sgrMouse = !0;
                            break;

                          case 1015:
                            this.urxvtMouse = !0;
                            break;

                          case 25:
                            this.cursorHidden = !1;
                            break;

                          case 1049:
                          case 47:
                          case 1047:
                            if (!this.normal) {
                                var e = {
                                    lines: this.lines,
                                    ybase: this.ybase,
                                    ydisp: this.ydisp,
                                    x: this.x,
                                    y: this.y,
                                    scrollTop: this.scrollTop,
                                    scrollBottom: this.scrollBottom,
                                    tabs: this.tabs
                                };
                                this.reset(), this.normal = e, this.showCursor();
                            }
                        }
                    } else switch (t) {
                      case 4:
                        this.insertMode = !0;
                        break;

                      case 20:                    } else for (var s = t.length, i = 0; i < s; i++) this.setMode(t[i]);
                }, o.prototype.resetMode = function(t) {
                    if ("object" != typeof t) if (this.prefix) {
                        if ("?" === this.prefix) switch (t) {
                          case 1:
                            this.applicationCursor = !1;
                            break;

                          case 3:
                            132 === this.cols && this.savedCols && this.resize(this.savedCols, this.rows), delete this.savedCols;
                            break;

                          case 6:
                            this.originMode = !1;
                            break;

                          case 7:
                            this.wraparoundMode = !1;
                            break;

                          case 12:
                            break;

                          case 66:
                            this.log("Switching back to normal keypad."), this.applicationKeypad = !1;
                            break;

                          case 9:
                          case 1e3:
                          case 1002:
                          case 1003:
                            this.x10Mouse = !1, this.vt200Mouse = !1, this.normalMouse = !1, this.mouseEvents = !1, 
                            this.element.style.cursor = "";
                            break;

                          case 1004:
                            this.sendFocus = !1;
                            break;

                          case 1005:
                            this.utfMouse = !1;
                            break;

                          case 1006:
                            this.sgrMouse = !1;
                            break;

                          case 1015:
                            this.urxvtMouse = !1;
                            break;

                          case 25:
                            this.cursorHidden = !0;
                            break;

                          case 1049:
                          case 47:
                          case 1047:
                            this.normal && (this.lines = this.normal.lines, this.ybase = this.normal.ybase, 
                            this.ydisp = this.normal.ydisp, this.x = this.normal.x, this.y = this.normal.y, 
                            this.scrollTop = this.normal.scrollTop, this.scrollBottom = this.normal.scrollBottom, 
                            this.tabs = this.normal.tabs, this.normal = null, this.refresh(0, this.rows - 1), 
                            this.showCursor());
                        }
                    } else switch (t) {
                      case 4:
                        this.insertMode = !1;
                        break;

                      case 20:                    } else for (var e = t.length, s = 0; s < e; s++) this.resetMode(t[s]);
                }, o.prototype.setScrollRegion = function(t) {
                    this.prefix || (this.scrollTop = (t[0] || 1) - 1, this.scrollBottom = (t[1] || this.rows) - 1, 
                    this.x = 0, this.y = 0);
                }, o.prototype.saveCursor = function(t) {
                    this.savedX = this.x, this.savedY = this.y;
                }, o.prototype.restoreCursor = function(t) {
                    this.x = this.savedX || 0, this.y = this.savedY || 0;
                }, o.prototype.cursorForwardTab = function(t) {
                    for (var e = t[0] || 1; e--; ) this.x = this.nextStop();
                }, o.prototype.scrollUp = function(t) {
                    for (var e = t[0] || 1; e--; ) this.lines.splice(this.ybase + this.scrollTop, 1), 
                    this.lines.splice(this.ybase + this.scrollBottom, 0, this.blankLine());
                    this.updateRange(this.scrollTop), this.updateRange(this.scrollBottom);
                }, o.prototype.scrollDown = function(t) {
                    for (var e = t[0] || 1; e--; ) this.lines.splice(this.ybase + this.scrollBottom, 1), 
                    this.lines.splice(this.ybase + this.scrollTop, 0, this.blankLine());
                    this.updateRange(this.scrollTop), this.updateRange(this.scrollBottom);
                }, o.prototype.initMouseTracking = function(t) {}, o.prototype.resetTitleModes = function(t) {}, 
                o.prototype.cursorBackwardTab = function(t) {
                    for (var e = t[0] || 1; e--; ) this.x = this.prevStop();
                }, o.prototype.repeatPrecedingCharacter = function(t) {
                    for (var e = t[0] || 1, s = this.lines[this.ybase + this.y], i = s[this.x - 1] || [ this.defAttr, " " ]; e--; ) s[this.x++] = i;
                }, o.prototype.tabClear = function(t) {
                    var e = t[0];
                    e <= 0 ? delete this.tabs[this.x] : 3 === e && (this.tabs = {});
                }, o.prototype.mediaCopy = function(t) {}, o.prototype.setResources = function(t) {}, 
                o.prototype.disableModifiers = function(t) {}, o.prototype.setPointerMode = function(t) {}, 
                o.prototype.softReset = function(t) {
                    this.cursorHidden = !1, this.insertMode = !1, this.originMode = !1, this.wraparoundMode = !1, 
                    this.applicationKeypad = !1, this.applicationCursor = !1, this.scrollTop = 0, this.scrollBottom = this.rows - 1, 
                    this.curAttr = this.defAttr, this.x = this.y = 0, this.charset = null, this.glevel = 0, 
                    this.charsets = [ null ];
                }, o.prototype.requestAnsiMode = function(t) {}, o.prototype.requestPrivateMode = function(t) {}, 
                o.prototype.setConformanceLevel = function(t) {}, o.prototype.loadLEDs = function(t) {}, 
                o.prototype.setCursorStyle = function(t) {}, o.prototype.setCharProtectionAttr = function(t) {}, 
                o.prototype.restorePrivateValues = function(t) {}, o.prototype.setAttrInRectangle = function(t) {
                    for (var e, s, i = t[0], r = t[1], n = t[2], o = t[3], a = t[4]; i < n + 1; i++) for (e = this.lines[this.ybase + i], 
                    s = r; s < o; s++) e[s] = [ a, e[s][1] ];
                    this.updateRange(t[0]), this.updateRange(t[2]);
                }, o.prototype.savePrivateValues = function(t) {}, o.prototype.manipulateWindow = function(t) {}, 
                o.prototype.reverseAttrInRectangle = function(t) {}, o.prototype.setTitleModeFeature = function(t) {}, 
                o.prototype.setWarningBellVolume = function(t) {}, o.prototype.setMarginBellVolume = function(t) {}, 
                o.prototype.copyRectangle = function(t) {}, o.prototype.enableFilterRectangle = function(t) {}, 
                o.prototype.requestParameters = function(t) {}, o.prototype.selectChangeExtent = function(t) {}, 
                o.prototype.fillRectangle = function(t) {
                    for (var e, s, i = t[0], r = t[1], n = t[2], o = t[3], a = t[4]; r < o + 1; r++) for (e = this.lines[this.ybase + r], 
                    s = n; s < a; s++) e[s] = [ e[s][0], _.fromCharCode(i) ];
                    this.updateRange(t[1]), this.updateRange(t[3]);
                }, o.prototype.enableLocatorReporting = function(t) {
                    t[0] > 0;
                }, o.prototype.eraseRectangle = function(t) {
                    var e, s, i, r = t[0], n = t[1], o = t[2], a = t[3];
                    for (i = [ this.eraseAttr(), " " ]; r < o + 1; r++) for (e = this.lines[this.ybase + r], 
                    s = n; s < a; s++) e[s] = i;
                    this.updateRange(t[0]), this.updateRange(t[2]);
                }, o.prototype.setLocatorEvents = function(t) {}, o.prototype.selectiveEraseRectangle = function(t) {}, 
                o.prototype.requestLocatorPosition = function(t) {}, o.prototype.insertColumns = function() {
                    for (var t, e = params[0], s = this.ybase + this.rows, i = [ this.eraseAttr(), " " ]; e--; ) for (t = this.ybase; t < s; t++) this.lines[t].splice(this.x + 1, 0, i), 
                    this.lines[t].pop();
                    this.maxRange();
                }, o.prototype.deleteColumns = function() {
                    for (var t, e = params[0], s = this.ybase + this.rows, i = [ this.eraseAttr(), " " ]; e--; ) for (t = this.ybase; t < s; t++) this.lines[t].splice(this.x, 1), 
                    this.lines[t].push(i);
                    this.maxRange();
                }, o.prototype.enterPrefix = function() {
                    this.prefixMode = !0;
                }, o.prototype.leavePrefix = function() {
                    this.prefixMode = !1;
                }, o.prototype.enterSelect = function() {
                    this._real = {
                        x: this.x,
                        y: this.y,
                        ydisp: this.ydisp,
                        ybase: this.ybase,
                        cursorHidden: this.cursorHidden,
                        lines: this.copyBuffer(this.lines),
                        write: this.write
                    }, this.write = function() {}, this.selectMode = !0, this.visualMode = !1, this.cursorHidden = !1, 
                    this.refresh(this.y, this.y);
                }, o.prototype.leaveSelect = function() {
                    this.x = this._real.x, this.y = this._real.y, this.ydisp = this._real.ydisp, this.ybase = this._real.ybase, 
                    this.cursorHidden = this._real.cursorHidden, this.lines = this._real.lines, this.write = this._real.write, 
                    delete this._real, this.selectMode = !1, this.visualMode = !1, this.refresh(0, this.rows - 1);
                }, o.prototype.enterVisual = function() {
                    this._real.preVisual = this.copyBuffer(this.lines), this.selectText(this.x, this.x, this.ydisp + this.y, this.ydisp + this.y), 
                    this.visualMode = !0;
                }, o.prototype.leaveVisual = function() {
                    this.lines = this._real.preVisual, delete this._real.preVisual, delete this._selected, 
                    this.visualMode = !1, this.refresh(0, this.rows - 1);
                }, o.prototype.enterSearch = function(t) {
                    this.entry = "", this.searchMode = !0, this.searchDown = t, this._real.preSearch = this.copyBuffer(this.lines), 
                    this._real.preSearchX = this.x, this._real.preSearchY = this.y;
                    for (var e = this.ydisp + this.rows - 1, s = 0; s < this.entryPrefix.length; s++) this.lines[e][s] = [ this.defAttr & -512 | 4, this.entryPrefix[s] ];
                    this.y = this.rows - 1, this.x = this.entryPrefix.length, this.refresh(this.rows - 1, this.rows - 1);
                }, o.prototype.leaveSearch = function() {
                    this.searchMode = !1, this._real.preSearch && (this.lines = this._real.preSearch, 
                    this.x = this._real.preSearchX, this.y = this._real.preSearchY, delete this._real.preSearch, 
                    delete this._real.preSearchX, delete this._real.preSearchY), this.refresh(this.rows - 1, this.rows - 1);
                }, o.prototype.copyBuffer = function(t) {
                    for (var t = t || this.lines, e = [], s = 0; s < t.length; s++) {
                        e[s] = [];
                        for (var i = 0; i < t[s].length; i++) e[s][i] = [ t[s][i][0], t[s][i][1] ];
                    }
                    return e;
                }, o.prototype.getCopyTextarea = function(t) {
                    var e = this._copyTextarea, s = this.document;
                    return e || (e = s.createElement("textarea"), e.style.position = "absolute", e.style.left = "-32000px", 
                    e.style.top = "-32000px", e.style.width = "0px", e.style.height = "0px", e.style.opacity = "0", 
                    e.style.backgroundColor = "transparent", e.style.borderStyle = "none", e.style.outlineStyle = "none", 
                    s.getElementsByTagName("body")[0].appendChild(e), this._copyTextarea = e), e;
                }, o.prototype.copyText = function(t) {
                    var e = this, s = this.getCopyTextarea();
                    this.emit("copy", t), s.focus(), s.textContent = t, s.value = t, s.setSelectionRange(0, t.length), 
                    T(function() {
                        e.element.focus(), e.focus();
                    }, 1);
                }, o.prototype.selectText = function(t, e, s, i) {
                    var r, n, o, a, c, l, h, u, d;
                    if (this._selected) {
                        for (r = this._selected.x1, n = this._selected.x2, o = this._selected.y1, a = this._selected.y2, 
                        a < o && (c = n, n = r, r = c, c = a, a = o, o = c), n < r && o === a && (c = n, 
                        n = r, r = c), h = o; h <= a; h++) for (l = 0, u = this.cols - 1, h === o && (l = r), 
                        h === a && (u = n); l <= u; l++) null != this.lines[h][l].old && (d = this.lines[h][l].old, 
                        delete this.lines[h][l].old, this.lines[h][l] = [ d, this.lines[h][l][1] ]);
                        s = this._selected.y1, t = this._selected.x1;
                    }
                    for (s = Math.max(s, 0), s = Math.min(s, this.ydisp + this.rows - 1), i = Math.max(i, 0), 
                    i = Math.min(i, this.ydisp + this.rows - 1), this._selected = {
                        x1: t,
                        x2: e,
                        y1: s,
                        y2: i
                    }, i < s && (c = e, e = t, t = c, c = i, i = s, s = c), e < t && s === i && (c = e, 
                    e = t, t = c), h = s; h <= i; h++) for (l = 0, u = this.cols - 1, h === s && (l = t), 
                    h === i && (u = e); l <= u; l++) d = this.lines[h][l][0], this.lines[h][l] = [ d & -512 | 261636, this.lines[h][l][1] ], 
                    this.lines[h][l].old = d;
                    s -= this.ydisp, i -= this.ydisp, s = Math.max(s, 0), s = Math.min(s, this.rows - 1), 
                    i = Math.max(i, 0), i = Math.min(i, this.rows - 1), this.refresh(0, this.rows - 1);
                }, o.prototype.grabText = function(t, e, s, i) {
                    var r, n, o, a, c, l = "", h = "";
                    for (i < s && (c = e, e = t, t = c, c = i, i = s, s = c), e < t && s === i && (c = e, 
                    e = t, t = c), o = s; o <= i; o++) {
                        for (n = 0, a = this.cols - 1, o === s && (n = t), o === i && (a = e); n <= a; n++) r = this.lines[o][n][1], 
                        " " !== r ? (h && (l += h, h = ""), l += r, f(r) && n++) : h += r;
                        h = "", l += "\n";
                    }
                    for (n = e, o = i; n < this.cols; n++) if (" " !== this.lines[o][n][1]) {
                        l = l.slice(0, -1);
                        break;
                    }
                    return l;
                }, o.prototype.keyPrefix = function(t, e) {
                    "k" === e || "&" === e ? this.destroy() : "p" === e || "]" === e ? this.emit("request paste") : "c" === e ? this.emit("request create") : e >= "0" && e <= "9" ? (e = +e - 1, 
                    ~e || (e = 9), this.emit("request term", e)) : "n" === e ? this.emit("request term next") : "P" === e ? this.emit("request term previous") : ":" === e ? this.emit("request command mode") : "[" === e && this.enterSelect();
                }, o.prototype.keySelect = function(t, e) {
                    if (this.showCursor(), this.searchMode || "n" === e || "N" === e) return this.keySearch(t, e);
                    if ("" === e) {
                        var s = this.ydisp + this.y;
                        return this.ydisp === this.ybase ? (this.y = Math.min(this.y + (this.rows - 1) / 2 | 0, this.rows - 1), 
                        this.refresh(0, this.rows - 1)) : this.scrollDisp((this.rows - 1) / 2 | 0), void (this.visualMode && this.selectText(this.x, this.x, s, this.ydisp + this.y));
                    }
                    if ("" === e) {
                        var s = this.ydisp + this.y;
                        return 0 === this.ydisp ? (this.y = Math.max(this.y - (this.rows - 1) / 2 | 0, 0), 
                        this.refresh(0, this.rows - 1)) : this.scrollDisp(-(this.rows - 1) / 2 | 0), void (this.visualMode && this.selectText(this.x, this.x, s, this.ydisp + this.y));
                    }
                    if ("" === e) {
                        var s = this.ydisp + this.y;
                        return this.scrollDisp(this.rows - 1), void (this.visualMode && this.selectText(this.x, this.x, s, this.ydisp + this.y));
                    }
                    if ("" === e) {
                        var s = this.ydisp + this.y;
                        return this.scrollDisp(-(this.rows - 1)), void (this.visualMode && this.selectText(this.x, this.x, s, this.ydisp + this.y));
                    }
                    if ("k" === e || "[A" === e) {
                        var s = this.ydisp + this.y;
                        return this.y--, this.y < 0 && (this.y = 0, this.scrollDisp(-1)), void (this.visualMode ? this.selectText(this.x, this.x, s, this.ydisp + this.y) : this.refresh(this.y, this.y + 1));
                    }
                    if ("j" === e || "[B" === e) {
                        var s = this.ydisp + this.y;
                        return this.y++, this.y >= this.rows && (this.y = this.rows - 1, this.scrollDisp(1)), 
                        void (this.visualMode ? this.selectText(this.x, this.x, s, this.ydisp + this.y) : this.refresh(this.y - 1, this.y));
                    }
                    if ("h" === e || "[D" === e) {
                        var i = this.x;
                        return this.x--, this.x < 0 && (this.x = 0), void (this.visualMode ? this.selectText(i, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                    }
                    if ("l" === e || "[C" === e) {
                        var i = this.x;
                        return this.x++, this.x >= this.cols && (this.x = this.cols - 1), void (this.visualMode ? this.selectText(i, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                    }
                    if ("v" === e || " " === e) return void (this.visualMode ? this.leaveVisual() : this.enterVisual());
                    if ("y" !== e) {
                        if ("q" === e || "" === e) return void (this.visualMode ? this.leaveVisual() : this.leaveSelect());
                        if ("w" === e || "W" === e) {
                            for (var r = this.x, n = this.y, o = this.ydisp, i = this.x, s = this.y, a = this.ydisp, c = !1; ;) {
                                for (var l = this.lines[a + s]; i < this.cols; ) {
                                    if (l[i][1] <= " ") c = !0; else if (c) break;
                                    i++;
                                }
                                if (i >= this.cols && (i = this.cols - 1), !(i === this.cols - 1 && l[i][1] <= " ")) break;
                                if (i = 0, ++s >= this.rows && (s--, ++a > this.ybase)) {
                                    a = this.ybase, i = this.x;
                                    break;
                                }
                            }
                            return this.x = i, this.y = s, this.scrollDisp(-this.ydisp + a), void (this.visualMode && this.selectText(r, this.x, n + o, this.ydisp + this.y));
                        }
                        if ("b" === e || "B" === e) {
                            for (var r = this.x, n = this.y, o = this.ydisp, i = this.x, s = this.y, a = this.ydisp; ;) {
                                for (var l = this.lines[a + s], c = i > 0 && l[i][1] > " " && l[i - 1][1] > " "; i >= 0; ) {
                                    if (l[i][1] <= " ") {
                                        if (c && i + 1 < this.cols && l[i + 1][1] > " ") {
                                            i++;
                                            break;
                                        }
                                        c = !0;
                                    }
                                    i--;
                                }
                                if (i < 0 && (i = 0), 0 !== i || !(l[i][1] <= " ") && c) break;
                                if (i = this.cols - 1, --s < 0 && (s++, --a < 0)) {
                                    a++, i = 0;
                                    break;
                                }
                            }
                            return this.x = i, this.y = s, this.scrollDisp(-this.ydisp + a), void (this.visualMode && this.selectText(r, this.x, n + o, this.ydisp + this.y));
                        }
                        if ("e" === e || "E" === e) {
                            var i = this.x + 1, s = this.y, a = this.ydisp;
                            for (i >= this.cols && i--; ;) {
                                for (var l = this.lines[a + s]; i < this.cols && l[i][1] <= " "; ) i++;
                                for (;i < this.cols; ) {
                                    if (l[i][1] <= " " && i - 1 >= 0 && l[i - 1][1] > " ") {
                                        i--;
                                        break;
                                    }
                                    i++;
                                }
                                if (i >= this.cols && (i = this.cols - 1), !(i === this.cols - 1 && l[i][1] <= " ")) break;
                                if (i = 0, ++s >= this.rows && (s--, ++a > this.ybase)) {
                                    a = this.ybase;
                                    break;
                                }
                            }
                            return this.x = i, this.y = s, this.scrollDisp(-this.ydisp + a), void (this.visualMode && this.selectText(r, this.x, n + o, this.ydisp + this.y));
                        }
                        if ("^" === e || "0" === e) {
                            var r = this.x;
                            if ("0" === e) this.x = 0; else if ("^" === e) {
                                for (var l = this.lines[this.ydisp + this.y], i = 0; i < this.cols && !(l[i][1] > " "); ) i++;
                                i >= this.cols && (i = this.cols - 1), this.x = i;
                            }
                            return void (this.visualMode ? this.selectText(r, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                        }
                        if ("$" === e) {
                            for (var r = this.x, l = this.lines[this.ydisp + this.y], i = this.cols - 1; i >= 0; ) {
                                if (l[i][1] > " ") {
                                    this.visualMode && i < this.cols - 1 && i++;
                                    break;
                                }
                                i--;
                            }
                            return i < 0 && (i = 0), this.x = i, void (this.visualMode ? this.selectText(r, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                        }
                        if ("g" === e || "G" === e) {
                            var r = this.x, n = this.y, o = this.ydisp;
                            return "g" === e ? (this.x = 0, this.y = 0, this.scrollDisp(-this.ydisp)) : "G" === e && (this.x = 0, 
                            this.y = this.rows - 1, this.scrollDisp(this.ybase)), void (this.visualMode && this.selectText(r, this.x, n + o, this.ydisp + this.y));
                        }
                        if ("H" === e || "M" === e || "L" === e) {
                            var r = this.x, n = this.y;
                            return "H" === e ? (this.x = 0, this.y = 0) : "M" === e ? (this.x = 0, this.y = this.rows / 2 | 0) : "L" === e && (this.x = 0, 
                            this.y = this.rows - 1), void (this.visualMode ? this.selectText(r, this.x, this.ydisp + n, this.ydisp + this.y) : (this.refresh(n, n), 
                            this.refresh(this.y, this.y)));
                        }
                        if ("{" === e || "}" === e) {
                            var l, h, r = this.x, n = this.y, o = this.ydisp, u = !1, d = !1, f = -1, s = this.y + ("{" === e ? -1 : 1), a = this.ydisp;
                            for ("{" === e ? s < 0 && (s++, a > 0 && a--) : "}" === e && s >= this.rows && (s--, 
                            a < this.ybase && a++); ;) {
                                for (l = this.lines[a + s], h = 0; h < this.cols; h++) {
                                    if (l[h][1] > " ") {
                                        f === -1 && (f = 0), u = !0;
                                        break;
                                    }
                                    if (h === this.cols - 1) {
                                        f === -1 ? f = 1 : 0 === f ? d = !0 : 1 === f && u && (d = !0);
                                        break;
                                    }
                                }
                                if (d) break;
                                if ("{" === e) {
                                    if (s--, s < 0) {
                                        if (s++, !(a > 0)) break;
                                        a--;
                                    }
                                } else if ("}" === e && (s++, s >= this.rows)) {
                                    if (s--, !(a < this.ybase)) break;
                                    a++;
                                }
                            }
                            return d || ("{" === e ? (s = 0, a = 0) : "}" === e && (s = this.rows - 1, a = this.ybase)), 
                            this.x = 0, this.y = s, this.scrollDisp(-this.ydisp + a), void (this.visualMode && this.selectText(r, this.x, n + o, this.ydisp + this.y));
                        }
                        return ("/" === e || "?" === e) && void (this.visualMode || this.enterSearch("/" === e));
                    }
                    if (this.visualMode) {
                        var p = this.grabText(this._selected.x1, this._selected.x2, this._selected.y1, this._selected.y2);
                        this.copyText(p), this.leaveVisual();
                    }
                }, o.prototype.keySearch = function(t, e) {
                    if ("" === e) return void this.leaveSearch();
                    if ("\r" === e || !this.searchMode && ("n" === e || "N" === e)) {
                        this.leaveSearch();
                        var s = this.entry;
                        if (!s) return void this.refresh(0, this.rows - 1);
                        for (var i, r, n, o = this.x, a = this.y, c = this.ydisp, l = !1, h = !1, u = this.x + 1, d = this.ydisp + this.y, f = "N" === e ? this.searchDown : !this.searchDown; ;) {
                            for (i = this.lines[d]; u < this.cols; ) {
                                for (n = 0; n < s.length && !(u + n >= this.cols) && i[u + n][1] === s[n]; n++) if (i[u + n][1] === s[n] && n === s.length - 1) {
                                    l = !0;
                                    break;
                                }
                                if (l) break;
                                u += n + 1;
                            }
                            if (l) break;
                            if (u = 0, f) {
                                if (d--, d < 0) {
                                    if (h) break;
                                    h = !0, d = this.ybase + this.rows - 1;
                                }
                            } else if (d++, d > this.ybase + this.rows - 1) {
                                if (h) break;
                                h = !0, d = 0;
                            }
                        }
                        return l ? (d - this.ybase < 0 ? (r = d, d = 0, r > this.ybase && (d = r - this.ybase, 
                        r = this.ybase)) : (r = this.ybase, d -= this.ybase), this.x = u, this.y = d, this.scrollDisp(-this.ydisp + r), 
                        void (this.visualMode && this.selectText(o, this.x, a + c, this.ydisp + this.y))) : void this.refresh(0, this.rows - 1);
                    }
                    if ("\b" === e || "" === e) {
                        if (0 === this.entry.length) return;
                        var p = this.ydisp + this.rows - 1;
                        this.entry = this.entry.slice(0, -1);
                        var n = this.entryPrefix.length + this.entry.length;
                        return this.lines[p][n] = [ this.lines[p][n][0], " " ], this.x--, this.refresh(this.rows - 1, this.rows - 1), 
                        void this.refresh(this.y, this.y);
                    }
                    if (1 === e.length && e >= " " && e <= "~") {
                        var p = this.ydisp + this.rows - 1;
                        this.entry += e;
                        var n = this.entryPrefix.length + this.entry.length - 1;
                        return this.lines[p][n] = [ this.defAttr & -512 | 4, e ], this.x++, this.refresh(this.rows - 1, this.rows - 1), 
                        void this.refresh(this.y, this.y);
                    }
                    return !1;
                }, o.charsets = {}, o.charsets.SCLD = {
                    "`": "◆",
                    a: "▒",
                    b: "\t",
                    c: "\f",
                    d: "\r",
                    e: "\n",
                    f: "°",
                    g: "±",
                    h: "␤",
                    i: "\v",
                    j: "┘",
                    k: "┐",
                    l: "┌",
                    m: "└",
                    n: "┼",
                    o: "⎺",
                    p: "⎻",
                    q: "─",
                    r: "⎼",
                    s: "⎽",
                    t: "├",
                    u: "┤",
                    v: "┴",
                    w: "┬",
                    x: "│",
                    y: "≤",
                    z: "≥",
                    "{": "π",
                    "|": "≠",
                    "}": "£",
                    "~": "·"
                }, o.charsets.UK = null, o.charsets.US = null, o.charsets.Dutch = null, o.charsets.Finnish = null, 
                o.charsets.French = null, o.charsets.FrenchCanadian = null, o.charsets.German = null, 
                o.charsets.Italian = null, o.charsets.NorwegianDanish = null, o.charsets.Spanish = null, 
                o.charsets.Swedish = null, o.charsets.Swiss = null, o.charsets.ISOLatin = null;
                var _ = this.String, T = this.setTimeout, E = this.setInterval;
                p._cache = {}, p.distance = function(t, e, s, i, r, n) {
                    return Math.pow(30 * (t - i), 2) + Math.pow(59 * (e - r), 2) + Math.pow(11 * (s - n), 2);
                }, o.EventEmitter = s, o.Stream = n, o.inherits = h, o.on = a, o.off = c, o.cancel = l, 
                i = [], r = function() {
                    return o;
                }.apply(e, i), !(void 0 !== r && (t.exports = r));
            }).call(function() {
                return this || ("undefined" != typeof window ? window : s);
            }());
        }).call(e, function() {
            return this;
        }());
    },
    7: function(t, e, s) {
        var i, r;
        /*!
	 * mustache.js - Logic-less {{mustache}} templates with JavaScript
	 * http://github.com/janl/mustache.js
	 */
        !function(n, o) {
            if ("object" == typeof e && e) o(e); else {
                var a = {};
                o(a), i = a, r = "function" == typeof i ? i.call(e, s, e, t) : i, !(void 0 !== r && (t.exports = r));
            }
        }(this, function(t) {
            function e(t, e) {
                return v.call(t, e);
            }
            function s(t) {
                return !e(m, t);
            }
            function i(t) {
                return "function" == typeof t;
            }
            function r(t) {
                return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
            }
            function n(t) {
                return String(t).replace(/[&<>"'\/]/g, function(t) {
                    return k[t];
                });
            }
            function o(t) {
                if (!x(t) || 2 !== t.length) throw new Error("Invalid tags: " + t);
                return [ new RegExp(r(t[0]) + "\\s*"), new RegExp("\\s*" + r(t[1])) ];
            }
            function a(e, i) {
                function n() {
                    if (_ && !T) for (;M.length; ) delete S[M.pop()]; else M = [];
                    _ = !1, T = !1;
                }
                i = i || t.tags, e = e || "", "string" == typeof i && (i = i.split(p));
                for (var a, u, d, m, v, w, x = o(i), k = new h(e), C = [], S = [], M = [], _ = !1, T = !1; !k.eos(); ) {
                    if (a = k.pos, d = k.scanUntil(x[0])) for (var E = 0, N = d.length; E < N; ++E) m = d.charAt(E), 
                    s(m) ? M.push(S.length) : T = !0, S.push([ "text", m, a, a + 1 ]), a += 1, "\n" === m && n();
                    if (!k.scan(x[0])) break;
                    if (_ = !0, u = k.scan(g) || "name", k.scan(f), "=" === u ? (d = k.scanUntil(y), 
                    k.scan(y), k.scanUntil(x[1])) : "{" === u ? (d = k.scanUntil(new RegExp("\\s*" + r("}" + i[1]))), 
                    k.scan(b), k.scanUntil(x[1]), u = "&") : d = k.scanUntil(x[1]), !k.scan(x[1])) throw new Error("Unclosed tag at " + k.pos);
                    if (v = [ u, d, a, k.pos ], S.push(v), "#" === u || "^" === u) C.push(v); else if ("/" === u) {
                        if (w = C.pop(), !w) throw new Error('Unopened section "' + d + '" at ' + a);
                        if (w[1] !== d) throw new Error('Unclosed section "' + w[1] + '" at ' + a);
                    } else "name" === u || "{" === u || "&" === u ? T = !0 : "=" === u && (x = o(i = d.split(p)));
                }
                if (w = C.pop()) throw new Error('Unclosed section "' + w[1] + '" at ' + k.pos);
                return l(c(S));
            }
            function c(t) {
                for (var e, s, i = [], r = 0, n = t.length; r < n; ++r) e = t[r], e && ("text" === e[0] && s && "text" === s[0] ? (s[1] += e[1], 
                s[3] = e[3]) : (i.push(e), s = e));
                return i;
            }
            function l(t) {
                for (var e, s, i = [], r = i, n = [], o = 0, a = t.length; o < a; ++o) switch (e = t[o], 
                e[0]) {
                  case "#":
                  case "^":
                    r.push(e), n.push(e), r = e[4] = [];
                    break;

                  case "/":
                    s = n.pop(), s[5] = e[2], r = n.length > 0 ? n[n.length - 1][4] : i;
                    break;

                  default:
                    r.push(e);
                }
                return i;
            }
            function h(t) {
                this.string = t, this.tail = t, this.pos = 0;
            }
            function u(t, e) {
                this.view = null == t ? {} : t, this.cache = {
                    ".": this.view
                }, this.parent = e;
            }
            function d() {
                this.cache = {};
            }
            var f = /\s*/, p = /\s+/, m = /\S/, y = /\s*=/, b = /\s*\}/, g = /#|\^|\/|>|\{|&|=|!/, v = RegExp.prototype.test, w = Object.prototype.toString, x = Array.isArray || function(t) {
                return "[object Array]" === w.call(t);
            }, k = {
                "&": "&amp;",
                "<": "&lt;",
                ">": "&gt;",
                '"': "&quot;",
                "'": "&#39;",
                "/": "&#x2F;"
            };
            h.prototype.eos = function() {
                return "" === this.tail;
            }, h.prototype.scan = function(t) {
                var e = this.tail.match(t);
                if (e && 0 === e.index) {
                    var s = e[0];
                    return this.tail = this.tail.substring(s.length), this.pos += s.length, s;
                }
                return "";
            }, h.prototype.scanUntil = function(t) {
                var e, s = this.tail.search(t);
                switch (s) {
                  case -1:
                    e = this.tail, this.tail = "";
                    break;

                  case 0:
                    e = "";
                    break;

                  default:
                    e = this.tail.substring(0, s), this.tail = this.tail.substring(s);
                }
                return this.pos += e.length, e;
            }, u.prototype.push = function(t) {
                return new u(t, this);
            }, u.prototype.lookup = function(t) {
                var e;
                if (t in this.cache) e = this.cache[t]; else {
                    for (var s = this; s; ) {
                        if (t.indexOf(".") > 0) {
                            e = s.view;
                            for (var r = t.split("."), n = 0; null != e && n < r.length; ) e = e[r[n++]];
                        } else e = s.view[t];
                        if (null != e) break;
                        s = s.parent;
                    }
                    this.cache[t] = e;
                }
                return i(e) && (e = e.call(this.view)), e;
            }, d.prototype.clearCache = function() {
                this.cache = {};
            }, d.prototype.parse = function(t, e) {
                var s = this.cache, i = s[t];
                return null == i && (i = s[t] = a(t, e)), i;
            }, d.prototype.render = function(t, e, s) {
                var i = this.parse(t), r = e instanceof u ? e : new u(e);
                return this.renderTokens(i, r, s, t);
            }, d.prototype.renderTokens = function(e, s, r, n) {
                function o(t) {
                    return h.render(t, s, r);
                }
                for (var a, c, l = "", h = this, u = 0, d = e.length; u < d; ++u) switch (a = e[u], 
                a[0]) {
                  case "#":
                    if (c = s.lookup(a[1]), !c) continue;
                    if (x(c)) for (var f = 0, p = c.length; f < p; ++f) l += this.renderTokens(a[4], s.push(c[f]), r, n); else if ("object" == typeof c || "string" == typeof c) l += this.renderTokens(a[4], s.push(c), r, n); else if (i(c)) {
                        if ("string" != typeof n) throw new Error("Cannot use higher-order sections without the original template");
                        c = c.call(s.view, n.slice(a[3], a[5]), o), null != c && (l += c);
                    } else l += this.renderTokens(a[4], s, r, n);
                    break;

                  case "^":
                    c = s.lookup(a[1]), (!c || x(c) && 0 === c.length) && (l += this.renderTokens(a[4], s, r, n));
                    break;

                  case ">":
                    if (!r) continue;
                    c = i(r) ? r(a[1]) : r[a[1]], null != c && (l += this.renderTokens(this.parse(c), s, r, c));
                    break;

                  case "&":
                    c = s.lookup(a[1]), null != c && (l += c);
                    break;

                  case "name":
                    c = s.lookup(a[1]), null != c && (l += t.escape(c));
                    break;

                  case "text":
                    l += a[1];
                }
                return l;
            }, t.name = "mustache.js", t.version = "0.8.1", t.tags = [ "{{", "}}" ];
            var C = new d();
            t.clearCache = function() {
                return C.clearCache();
            }, t.parse = function(t, e) {
                return C.parse(t, e);
            }, t.render = function(t, e, s) {
                return C.render(t, e, s);
            }, t.to_html = function(e, s, r, n) {
                var o = t.render(e, s, r);
                return i(n) ? void n(o) : o;
            }, t.escape = n, t.Scanner = h, t.Context = u, t.Writer = d;
        });
    },
    10: function(t, e, s) {
        "use strict";
        !function() {
            function e(t, e, s, r, n) {
                function o(t) {
                    return t < e ? t = e : t > s && (t = s), t;
                }
                function a() {
                    y = m.checked ? o(Math.round(Math.exp(v + x * f.value))) : void 0;
                }
                function c() {
                    g = !0, void 0 !== y && i(f).prop("value", (Math.log(y) - v) / x), i(f).attr("disabled", void 0 === y).trigger("change"), 
                    g = !1;
                }
                function l() {
                    var t;
                    t = m.checked ? o(r(i(p).val())) : void 0, isNaN(t) && (t = void 0), y = t;
                }
                function h() {
                    g = !0, void 0 !== y && i(p).val(n(y)), i(p).attr("disabled", void 0 === y), g = !1;
                }
                function u() {
                    m.checked || (y = void 0);
                }
                function d() {
                    g = !0, i(m).prop("checked", void 0 !== y), g = !1;
                }
                var f, p, m, y, b = this, g = !1;
                e < 0 && (e = 0), s < 0 && (s = 0);
                var v = Math.log(e), w = Math.log(s), x = w - v;
                return f = t.find("div.slider").on("change", function() {
                    g || (a(), h());
                })[0], p = t.find("input.size-text-ct").on("change", function() {
                    g || (l(), c());
                })[0], m = t.find("input[type='checkbox']").on("change", function() {
                    g || (u(), this.checked && l(), c(), h());
                })[0], Object.defineProperty(b, "value", {
                    get: function() {
                        return y;
                    },
                    set: function(t) {
                        y = t, d(), c(), h();
                    }
                }), Object.defineProperty(b, "max", {
                    get: function() {
                        return s;
                    },
                    set: function(t) {
                        t < 0 && (t = 0), s = t, w = Math.log(s), x = w - v, f && c();
                    }
                }), b;
            }
            var i = s(2), r = s(3), n = s(7);
            s(11);
            var o = s(4), a = s(12), c = r.gettext, l = (r.gettext, {});
            l.resource_debug = function() {
                "all" != window.debugging && "resource" != window.debugging || console.debug.apply(console, arguments);
            }, l.docker_debug = function() {
                "all" != window.debugging && "docker" != window.debugging || console.debug.apply(console, arguments);
            }, l.quote_cmdline = function(t) {
                return o.quote_cmdline(t || []);
            }, l.unquote_cmdline = function(t) {
                return o.unquote_cmdline(t);
            }, l.render_container_cmdline = function(t) {
                return t.Config ? l.quote_cmdline((t.Config.Entrypoint || []).concat(t.Config.Cmd || [])) : t.Command;
            }, l.render_container_status = function(t) {
                return t.Status ? t.Status : t.Running ? "running" : t.Paused ? "paused" : t.Restarting ? "restarting" : t.FinishedAt && 0 === t.FinishedAt.indexOf("0001") ? "created" : "exited";
            }, l.render_container_name = function(t) {
                return t.length > 0 && "/" == t[0] ? t.slice(1) : t;
            }, l.render_container_state = function(t) {
                return t.Running ? r.format(c("Up since $StartedAt"), t) : r.format(c("Exited $ExitCode"), t);
            }, l.render_container_restart_policy = function(t) {
                switch (t.Name) {
                  case "no":
                    return c("No");

                  case "on-failure":
                    var e = r.ngettext("On failure, retry $0 time", "On failure, retry $0 times", t.MaximumRetryCount);
                    return r.format(e, t.MaximumRetryCount);

                  case "always":
                    return c("Always");

                  case "unless-stopped":
                    return c("Unless Stopped");

                  default:
                    return t.Name.replace("-", " ").replace(/\w\S*/g, function(t) {
                        return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase();
                    });
                }
            }, l.multi_line = function(t) {
                return t.map(function(t) {
                    return n.render("{{.}}", t);
                }).join("<br/>");
            }, l.format_cpu_shares = function(t) {
                return t ? r.format(c("$0 shares"), Math.round(t)) : c("default");
            }, l.format_cpu_usage = function(t) {
                return void 0 === t || isNaN(t) ? "" : Math.round(t) + "%";
            }, l.update_memory_bar = function(t, e, s) {
                var r = [ e ];
                s && r.push(s), i(t).attr("value", r.join("/")).toggleClass("bar-row-danger", !!(s && e > .9 * s));
            }, l.format_memory_and_limit = function(t, e) {
                if (void 0 === t || isNaN(t)) return "";
                var s, i = "", n = 1024;
                return e && (s = r.format_bytes(e, n, !0), i = " / " + s.join(" "), n = s[1]), t ? (s = r.format_bytes(t, n, !0), 
                i ? s[0] + i : s.join(" ")) : "?" + i;
            }, l.insert_table_sorted = function(t, e) {
                l.insert_table_sorted_generic(t, e, function(t, e) {
                    return t.text().localeCompare(e.text());
                });
            }, l.insert_table_sorted_generic = function(t, e, s) {
                for (var r = i(t).find("tbody tr"), n = 0; n < r.length; n++) if (s(i(r[n]), e) > 0) {
                    i(e).insertBefore(r[n]), e = null;
                    break;
                }
                null !== e && i(t).find("tbody").append(e);
            }, l.setup_danger_button = function(t, e, s) {
                var r = i('<button class="btn btn-default btn-control-ct fa fa-check enable-danger">').toggle(!1).on("click", s);
                i(t + " th.container-column-actions").append(r), i(e)[0].addEventListener("click", function(e) {
                    0 === i(e.target).parents(t).length && i(t + " button.enable-danger").hasClass("active") && s();
                }, !0);
            }, l.render_container = function(t, e, s, n, o, h) {
                var u = i(document.getElementById(s + n));
                if (!o) return u.remove(), void (e.find("table > tbody > tr").length || e.find("button.enable-danger").toggle(!1));
                var d, f, p, m, y, b;
                o.State && o.State.Running ? (d = l.format_cpu_usage(o.CpuUsage), f = o.MemoryUsage, 
                p = o.MemoryLimit, y = l.format_memory_and_limit(f, p), m = !0, b = {
                    color: "inherit"
                }) : (d = "", m = !1, y = c("Stopped"), b = {
                    color: "grey",
                    "text-align": "right"
                });
                var g = !1;
                if (!u.length) {
                    e.find("button.enable-danger").toggle(!0);
                    var v = i('<div class="spinner">'), w = i('<button class="btn btn-danger pficon pficon-delete btn-delete">').on("click", function() {
                        var e = this;
                        return i(e).hide().siblings("div.spinner").show(), l.docker_container_delete(t, n, function() {}, function() {
                            i(e).show().siblings("div.spinner").hide();
                        }), !1;
                    }), x = i('<button class="btn btn-default btn-control-ct fa fa-play">').on("click", function() {
                        return i(this).hide().siblings("div.spinner").show(), t.start(n).fail(function(e) {
                            l.handle_scope_start_container(t, n, e.message);
                        }), !1;
                    }), k = i('<button class="btn btn-default btn-control-ct fa fa-stop">').on("click", function() {
                        return i(this).hide().siblings("div.spinner").show(), t.stop(n).fail(function(t) {
                            l.show_unexpected_error(t);
                        }), !1;
                    });
                    u = i("<tr>", {
                        id: s + n
                    }).append(i('<td class="container-column-name">'), i('<td class="container-column-image">'), i('<td class="container-column-command">'), i('<td class="container-column-cpu">'), i('<td class="container-column-memory-graph">').append(a.create("containers-containers")), i('<td class="container-column-memory-text">'), i('<td class="container-column-danger cell-buttons">').append(w, v), i('<td class="container-column-actions cell-buttons">').append(x, k, v.clone())), 
                    u.on("click", function(t) {
                        r.location.go([ n ]);
                    }), g = !0;
                }
                var C = u.children("td");
                i(C[0]).text(l.render_container_name(o.Name)), i(C[1]).text(o.Image), i(C[2]).text(l.render_container_cmdline(o)), 
                i(C[3]).text(d), l.update_memory_bar(i(C[4]).children("div").toggle(m), f, p), i(C[5]).css(b).text(y);
                var S = n in t.waiting;
                i(C[6]).children("div.spinner").toggle(S), i(C[6]).children("button.btn-delete").toggle(!S).toggleClass("disabled", o.State.Running);
                var M = S || o.State.Running ? "You can only delete<br/> stopped containers" : "Delete immediately";
                i(C[6]).children("button.btn-delete").tooltip("destroy").attr("title", M).tooltip({
                    html: !0
                }), i(C[7]).children("div.spinner").toggle(S), i(C[7]).children("button.fa-play").toggle(!S && !o.State.Running), 
                i(C[7]).children("button.fa-stop").toggle(!S && o.State.Running), i(C[6]).toggle(h), 
                i(C[7]).toggle(!h), u.toggleClass("unimportant", !o.State.Running), g && l.insert_table_sorted(e.find("table"), u), 
                a.update();
            }, l.MemorySlider = function(t, s, i) {
                function n(t) {
                    return 1024 * parseInt(t, 10) * 1024;
                }
                function o(t) {
                    return r.format_bytes(t, "MiB", !0)[0];
                }
                return new e(t, s, i, n, o);
            }, l.CpuSlider = function(t, s, i) {
                function r(t) {
                    return parseInt(t, 10);
                }
                function n(t) {
                    return String(t);
                }
                return new e(t, s, i, r, n);
            }, l.docker_container_delete = function(t, e, s, i) {
                t.rm(e).fail(function(n) {
                    if (n.message.indexOf("remove a running container") > -1) {
                        var o, a = t.containers[e];
                        o = a.State.Running ? c("Container is currently running.") : c("Container is currently marked as not running, but regular stopping failed.") + " " + c("Error message from Docker:") + " '" + n.message + "'";
                        var h;
                        return h = a.Name ? a.Name : e, "/" === h.charAt(0) && (h = h.substring(1)), void l.confirm(r.format(c("Please confirm forced deletion of $0"), h), o, c("Force Delete")).done(function() {
                            t.rm(e, !0).fail(function(t) {
                                l.show_unexpected_error(t), i();
                            }).done(s);
                        }).fail(i);
                    }
                    l.show_unexpected_error(n), i();
                }).done(s);
            }, l.handle_scope_start_container = function(t, e, s, i, n) {
                var o = ".scope already exists", a = s.indexOf(o);
                if (a > -1) {
                    var h = "Unit docker-", u = s.indexOf(h) + h.length, d = s.substring(u, a);
                    return void r.spawn([ "systemctl", "stop", "docker-" + d + ".scope" ], {
                        superuser: "try"
                    }).done(function() {
                        t.start(e).fail(function(t) {
                            n && n();
                        }).done(function() {
                            i && i();
                        });
                    }).fail(function(t) {
                        l.show_unexpected_error(r.format(c("Failed to stop Docker scope: $0"), t)), n && n();
                    });
                }
                l.show_unexpected_error(s), n && n();
            }, l.show_unexpected_error = function(t) {
                i("#error-popup-message").text(t.message || t || "???"), i('.modal[role="dialog"]').modal("hide"), 
                i("#error-popup").modal("show");
            }, l.confirm = function(t, e, s) {
                function r() {
                    i("#confirmation-dialog button").off("click"), i("#confirmation-dialog").modal("hide");
                }
                var n = i.Deferred();
                return i("#confirmation-dialog-title").text(t), "string" == typeof e ? i("#confirmation-dialog-body").text(e) : i("#confirmation-dialog-body").html(e), 
                i("#confirmation-dialog-confirm").text(s), i("#confirmation-dialog-confirm").click(function() {
                    r(), n.resolve();
                }), i("#confirmation-dialog-cancel").click(function() {
                    r(), n.reject();
                }), i("#confirmation-dialog").modal("show"), n.promise();
            }, t.exports = l;
        }();
    },
    11: function(t, e, s) {
        "use strict";
        !function() {
            function t() {
                return v += 1, "unique" + -new Date() + -v;
            }
            function e(t) {
                t.find(".dialog-error").remove(), t.find(".has-error").removeClass("has-error"), 
                t.find(".dialog-wrapper").off(".dialog-error"), t.off(".dialog-error");
            }
            function i(t, e) {
                var s, i, r = t.parent();
                r.is(".dialog-wrapper") || (r = b("<div class='dialog-wrapper'>").insertBefore(t), 
                s = t.next(), s.is(".bootstrap-select") && s.selectpicker && (s.remove(), i = s.selectpicker), 
                t.remove().appendTo(r), i && i.call(t));
                var n;
                e.message && (n = b("<div class='dialog-error help-block'>").text(e.message)), r.addClass("has-error").append(n), 
                r.hasClass("error-keep") || r.on("keypress.dialog-error change.dialog-error", function() {
                    r.removeClass("has-error").find(".dialog-error.help-block").css("visibility", "hidden");
                });
            }
            function r(t, e) {
                var s = b("<div class='alert alert-danger dialog-error'>"), i = e.message || e.toString();
                s.text(i), b("<span class='fa fa-exclamation-triangle'>").prependTo(s), console.warn(i);
                var r = t.find(".modal-footer");
                r.length ? s.prependTo(r) : s.appendTo(t);
            }
            function n(t, s) {
                e(t), 1 == s.length && b.isArray(s[0]) && (s = s[0]);
                var n = !1;
                s.forEach(function(e) {
                    var s;
                    e && (s = t.find(e.target), s && s.length ? i(s, e) : r(t, e), n = !0);
                }), n && t.on("show.bs.modal.dialog-error", function() {
                    e(t);
                });
            }
            function o(t, e) {
                this.promise = t, this.disabled = [], this.handle = e;
            }
            function a(t) {
                var e = t.data("dialog-wait");
                t.data("dialog-wait", null), t.find(".dialog-wait-ct").remove(), t.find(".btn").off(".dialog-wait"), 
                t.off(".dialog-wait"), e && e.disabled.forEach(function(t) {
                    t.removeAttr("disabled");
                });
            }
            function c(t, e, s) {
                function i() {
                    var s, i = t.data("dialog-wait");
                    i && i.promise === e && (a(t), s = e.state(), d || "resolved" == s && i.handle ? t.modal("hide") : "rejected" == s && i.handle && n(t, [ arguments[0] ]));
                }
                function r(s) {
                    var i = t.data("dialog-wait");
                    i && i.promise === e && ("string" != typeof s && (s = ""), l.text(s));
                }
                if (a(t), !e) return s && t.modal("hide"), t;
                s && n(t, []);
                var c = b("<div class='dialog-wait-ct pull-left'>");
                b("<div class='spinner spinner-sm'>").appendTo(c);
                var l = b("<span>").appendTo(c);
                t.find(".modal-footer button").first().before(c);
                var h = new o(e, s);
                t.data("dialog-wait", h);
                var u = e.cancel || e.close, d = !1, f = t.find(".form-control").add(".btn", t);
                return u && (f = f.not("[data-dismiss]").not(".btn-cancel")), f.each(function() {
                    var t = b(this);
                    t.attr("disabled") || (h.disabled.push(t), t.attr("disabled", "disabled"));
                }), t.find(".btn[data-dismiss], .btn-cancel").on("click.dialog-wait", function() {
                    return d = !0, u && u.apply(e), !1;
                }), t.on("hide.bs.modal.dialog-wait", function() {
                    a(t);
                }), e.always(i).progress(r), t;
            }
            function l(e) {
                var s = g.gettext || function(t) {
                    return t;
                };
                return e = e.find(".btn-onoff-ct").andSelf().filter(".btn-onoff-ct"), e.each(function(e, i) {
                    var r, n, o, a = b(i).attr("data-toggle", "buttons").addClass("btn-group"), c = a.onoff("value"), l = a.find(".btn"), h = a.find("input").first().attr("name") || t();
                    for (r = l.length; r < 2; r++) n = b('<input type="radio" autocomplete="off">'), 
                    o = document.createTextNode(s(0 === r ? "On" : "Off")), a.append(b('<label class="btn">').append(n, o)), 
                    l = null;
                    l = l || a.find(".btn"), l.find("input").attr("name", h), u(a, !!c);
                }), e;
            }
            function h(t) {
                return t.find(".btn").first().hasClass("active");
            }
            function u(t, e) {
                return t.each(function(t, s) {
                    var i = b(s).find(".btn");
                    i.first().toggleClass("active", !!e).find("input").prop("checked", !!e), i.last().toggleClass("active", !e).find("input").prop("checked", !e);
                });
            }
            function d(t, e, s, i) {
                var r = 0;
                i > s ? r = 1 : i < 0 || isNaN(i) ? r = 0 : !isNaN(s) && s > 0 && i >= 0 && (r = i / s), 
                b(e).css("width", 100 * r + "%").next("div").css("margin-left", b(e).css("width")), 
                t.value = r;
            }
            function f(t) {
                d(t, b(t).children("div.slider-bar").first()[0], 1, t.value);
            }
            function p(t) {
                b(t).toggleClass("slider-warning", t.offsetWidth < t.scrollWidth);
            }
            function m(t) {
                b(t).attr("unselectable", "on"), Object.defineProperty(t, "value", {
                    get: function() {
                        return parseFloat(this.getAttribute("value"));
                    },
                    set: function(t) {
                        var e = String(t);
                        e != this.getAttribute("value") && this.setAttribute("value", t);
                    }
                }), Object.defineProperty(t, "disabled", {
                    get: function() {
                        return !!this.hasAttribute("disabled") && "false" != this.getAttribute("disabled").toLowerCase();
                    },
                    set: function(t) {
                        this.setAttribute("disabled", t ? "true" : "false");
                    }
                }), f(t), p(t), b(t).on("change", function() {
                    f(t), b(t).toggleClass("slider-disabled", t.disabled);
                }), t.disabled && b(t).addClass("slider-disabled"), b(t).on("mousedown", function(e) {
                    if (t.disabled) return !0;
                    var s, i = b(t).offset().left;
                    if (b(e.target).hasClass("slider-thumb")) {
                        var r = e.offsetX || e.clientX - b(e.target).offset().left;
                        i += r - b(e.target).outerWidth() / 2, s = b(e.target).parent()[0];
                    } else s = b(t).children("div.slider-bar").first()[0], d(t, s, b(t).width(), e.pageX - i), 
                    b(t).trigger("change", [ t.value ]), p(t);
                    return b(document).on("mousemove.slider", function(e) {
                        return d(t, s, b(t).width(), e.pageX - i), b(t).trigger("change", [ t.value ]), 
                        p(t), !1;
                    }).on("mouseup.slider", function(t) {
                        return b(document).off("mousemove.slider").off("mouseup.slider"), !1;
                    }), !1;
                });
            }
            function y() {
                b("div.slider").each(function() {
                    m(this);
                });
            }
            var b = s(2), g = s(3), v = 0;
            b.fn.dialog = function(t) {
                return "failure" === t ? n(this, Array.prototype.slice.call(arguments, 1)) : "wait" === t ? c(this, arguments[1]) : "promise" === t ? c(this, arguments[1], !0) : void console.warn("unknown dialog action: " + t);
            }, window.addEventListener("hashchange", function() {
                b(".modal").modal("hide");
            }), b.fn.onoff = function(t) {
                return 0 === arguments.length || "refresh" == t ? l(this) : "value" === t ? 1 === arguments.length ? h(this) : u(this, arguments[1]) : "disabled" == t ? this.find(".btn").toggleClass("disabled", arguments[1]) : void console.warn("unknown switch action: " + t);
            }, b.fn.slider = function(t) {
                var e = this;
                return 0 === arguments.length || "refresh" == t ? (e.each(function() {
                    m(this);
                }), e) : void console.warn("unknown slider action: " + t);
            }, b(document).ready(y), b.fn.update_privileged = function(t, e, s) {
                var i = t.allowed !== !1, r = this;
                return r.each(function() {
                    var t = "allowed-title";
                    "undefined" != typeof b(this).data(t) && b(this).data(t) !== !1 || b(this).data(t, b(this).attr("title") || "");
                    var r = {
                        html: !0
                    };
                    s && (r.placement = s), b(this).tooltip(r), b(this).hasClass("disabled") === i && (b(this).toggleClass("disabled", !i).attr("data-original-title", null), 
                    i ? b(this).attr("title", b(this).data(t)) : b(this).attr("title", e), b(this).tooltip("fixTitle"));
                }), r;
            };
        }();
    },
    12: function(t, e, s) {
        "use strict";
        !function() {
            function e(t, e) {
                function s(t) {
                    var e = o(t).attr("value");
                    if (void 0 === e) return [ NaN ];
                    var s = e.split("/", 2), i = parseInt(s[0], 10);
                    if (1 == s.length) return [ i ];
                    var r = parseInt(s[1], 10);
                    return !isNaN(r) && i > r && (i = r), i < 0 && (i = 0), [ i, r ];
                }
                var i;
                if (t) {
                    var r = "div.bar-row[graph='" + t + "']";
                    i = o(r);
                } else i = o(e ? e : []);
                var n = 0;
                if (i.each(function() {
                    var t = s(this).pop();
                    !isNaN(t) && t > n && (n = t);
                }), t) {
                    var a = 104857600;
                    n = n - n % a + a;
                }
                i.each(function() {
                    var t = s(this), e = t.shift(), i = t.pop();
                    if (isNaN(e) || 0 === i) o(this).css("visibility", "hidden"); else {
                        var r = o(this).data("bar-progress");
                        isNaN(i) ? (r.addClass("progress-no-limit"), i = e) : r.removeClass("progress-no-limit"), 
                        o(this).css("visibility", "visible"), r.css("width", i / n * 100 + "%"), o(this).data("bar-progress-bar").css("width", e / i * 100 + "%").toggle(e > 0);
                    }
                });
            }
            function i(t, s) {
                return void 0 === t && s && (t = o(s).attr("graph")), t ? ("undefined" !== a[t] && window.clearTimeout(a[t]), 
                void (a[t] = window.setTimeout(function() {
                    delete a[t], e(t);
                }, 10))) : void e(void 0, s);
            }
            function r(t) {
                var s = o("<div>").addClass("progress-bar"), r = o("<div>").addClass("progress").append(s);
                o(t).addClass("bar-row").append(r).data("bar-progress", r).data("bar-progress-bar", s), 
                t.reflow = function() {
                    e(this.getAttribute("graph"), this);
                }, i(void 0, t);
            }
            function n() {
                o("div.bar-row").each(function() {
                    r(this, !1);
                });
            }
            var o = s(2), a = {};
            o(document).ready(n), t.exports = {
                create: function(t) {
                    var e = o("<div>").addClass("bar-row").attr("graph", t);
                    return r(e), e;
                },
                update: function() {
                    o("div.bar-row").each(function() {
                        i(this.getAttribute("graph"), this);
                    });
                }
            };
        }();
    },
    33: function(t, e) {
        "use strict";
        t.exports = function(t) {
            return t.webpackPolyfill || (t.deprecate = function() {}, t.paths = [], t.children = [], 
            t.webpackPolyfill = 1), t;
        };
    },
    132: function(t, e, s) {
        "use strict";
        !function() {
            window.QUnit = s(133), window.qunitTap = s(135), s(136), s(137), t.exports = window.QUnit;
        }();
    },
    133: function(t, e, s) {
        (function(e) {
            /*!
	 * QUnit 1.14.0
	 * http://qunitjs.com/
	 *
	 * Copyright 2013 jQuery Foundation and other contributors
	 * Released under the MIT license
	 * http://jquery.org/license
	 *
	 * Date: 2014-01-31T16:40Z
	 */
            !function(e) {
                function s() {
                    M.autorun = !0, M.previousModule && w("moduleDone", C, {
                        name: M.previousModule,
                        failed: M.moduleStats.bad,
                        passed: M.moduleStats.all - M.moduleStats.bad,
                        total: M.moduleStats.all
                    }), delete M.previousModule;
                    var t, s, i = g("qunit-banner"), r = g("qunit-tests"), n = +new A() - M.started, o = M.stats.all - M.stats.bad, a = [ "Tests completed in ", n, " milliseconds.<br/>", "<span class='passed'>", o, "</span> assertions of <span class='total'>", M.stats.all, "</span> passed, <span class='failed'>", M.stats.bad, "</span> failed." ].join("");
                    if (i && (i.className = M.stats.bad ? "qunit-fail" : "qunit-pass"), r && (g("qunit-testresult").innerHTML = a), 
                    M.altertitle && D.document && document.title && (document.title = [ M.stats.bad ? "✖" : "✔", document.title.replace(/^[\u2714\u2716] /i, "") ].join(" ")), 
                    M.reorder && D.sessionStorage && 0 === M.stats.bad) for (t = 0; t < sessionStorage.length; t++) s = sessionStorage.key(t++), 
                    0 === s.indexOf("qunit-test-") && sessionStorage.removeItem(s);
                    M.scrolltop && e.scrollTo && e.scrollTo(0, 0), w("done", C, {
                        failed: M.stats.bad,
                        passed: o,
                        total: M.stats.all,
                        runtime: n
                    });
                }
                function i(t) {
                    var e, s = M.filter && M.filter.toLowerCase(), r = M.module && M.module.toLowerCase(), n = (t.module + ": " + t.testName).toLowerCase();
                    return t.callback && t.callback.validTest === i ? (delete t.callback.validTest, 
                    !0) : !(M.testNumber.length > 0 && x(t.testNumber, M.testNumber) < 0) && (!(r && (!t.module || t.module.toLowerCase() !== r)) && (!s || (e = "!" !== s.charAt(0), 
                    e || (s = s.slice(1)), n.indexOf(s) !== -1 ? e : !e)));
                }
                function r(t, e) {
                    e = void 0 === e ? 3 : e;
                    var s, i, r;
                    if (t.stacktrace) return t.stacktrace.split("\n")[e + 3];
                    if (t.stack) {
                        if (s = t.stack.split("\n"), /^error$/i.test(s[0]) && s.shift(), E) {
                            for (i = [], r = e; r < s.length && s[r].indexOf(E) === -1; r++) i.push(s[r]);
                            if (i.length) return i.join("\n");
                        }
                        return s[e];
                    }
                    if (t.sourceURL) {
                        if (/qunit.js$/.test(t.sourceURL)) return;
                        return t.sourceURL + ":" + t.line;
                    }
                }
                function n(t) {
                    try {
                        throw new Error();
                    } catch (e) {
                        return r(e, t);
                    }
                }
                function o(t) {
                    return t ? (t += "", t.replace(/['"<>&]/g, function(t) {
                        switch (t) {
                          case "'":
                            return "&#039;";

                          case '"':
                            return "&quot;";

                          case "<":
                            return "&lt;";

                          case ">":
                            return "&gt;";

                          case "&":
                            return "&amp;";
                        }
                    })) : "";
                }
                function a(t, e) {
                    M.queue.push(t), M.autorun && !M.blocking && c(e);
                }
                function c(t) {
                    function e() {
                        c(t);
                    }
                    var i = new A().getTime();
                    for (M.depth = M.depth ? M.depth + 1 : 1; M.queue.length && !M.blocking; ) {
                        if (!(!D.setTimeout || M.updateRate <= 0 || new A().getTime() - i < M.updateRate)) {
                            P(e, 13);
                            break;
                        }
                        M.queue.shift()();
                    }
                    M.depth--, !t || M.blocking || M.queue.length || 0 !== M.depth || s();
                }
                function l() {
                    if (M.pollution = [], M.noglobals) for (var t in e) if (q.call(e, t)) {
                        if (/^qunit-test-output/.test(t)) continue;
                        M.pollution.push(t);
                    }
                }
                function h() {
                    var t, e, s = M.pollution;
                    l(), t = u(M.pollution, s), t.length > 0 && C.pushFailure("Introduced global variable(s): " + t.join(", ")), 
                    e = u(s, M.pollution), e.length > 0 && C.pushFailure("Deleted global variable(s): " + e.join(", "));
                }
                function u(t, e) {
                    var s, i, r = t.slice();
                    for (s = 0; s < r.length; s++) for (i = 0; i < e.length; i++) if (r[s] === e[i]) {
                        r.splice(s, 1), s--;
                        break;
                    }
                    return r;
                }
                function d(t, s) {
                    for (var i in s) q.call(s, i) && ("constructor" === i && t === e || (void 0 === s[i] ? delete t[i] : t[i] = s[i]));
                    return t;
                }
                function f(t, e, s) {
                    if (t.addEventListener) t.addEventListener(e, s, !1); else {
                        if (!t.attachEvent) throw new Error("addEvent() was called in a context without event listener support");
                        t.attachEvent("on" + e, s);
                    }
                }
                function p(t, e, s) {
                    for (var i = t.length; i--; ) f(t[i], e, s);
                }
                function m(t, e) {
                    return (" " + t.className + " ").indexOf(" " + e + " ") > -1;
                }
                function y(t, e) {
                    m(t, e) || (t.className += (t.className ? " " : "") + e);
                }
                function b(t, e) {
                    for (var s = " " + t.className + " "; s.indexOf(" " + e + " ") > -1; ) s = s.replace(" " + e + " ", " ");
                    t.className = "function" == typeof s.trim ? s.trim() : s.replace(/^\s+|\s+$/g, "");
                }
                function g(t) {
                    return D.document && document.getElementById && document.getElementById(t);
                }
                function v(t) {
                    return function(e) {
                        M[t].push(e);
                    };
                }
                function w(t, e, s) {
                    var i, r;
                    if (C.hasOwnProperty(t)) C[t].call(e, s); else for (r = M[t], i = 0; i < r.length; i++) r[i].call(e, s);
                }
                function x(t, e) {
                    if (e.indexOf) return e.indexOf(t);
                    for (var s = 0, i = e.length; s < i; s++) if (e[s] === t) return s;
                    return -1;
                }
                function k(t) {
                    d(this, t), this.assertions = [], this.testNumber = ++k.count;
                }
                var C, S, M, _, T = 0, E = (n(0) || "").replace(/(:\d+)+\)?/, "").replace(/.+\//, ""), N = Object.prototype.toString, q = Object.prototype.hasOwnProperty, A = e.Date, P = e.setTimeout, L = e.clearTimeout, D = {
                    document: "undefined" != typeof e.document,
                    setTimeout: "undefined" != typeof e.setTimeout,
                    sessionStorage: function() {
                        var t = "qunit-test-string";
                        try {
                            return sessionStorage.setItem(t, t), sessionStorage.removeItem(t), !0;
                        } catch (t) {
                            return !1;
                        }
                    }()
                }, R = function(t) {
                    var e, s, i = t.toString();
                    return "[object" === i.substring(0, 7) ? (e = t.name ? t.name.toString() : "Error", 
                    s = t.message ? t.message.toString() : "", e && s ? e + ": " + s : e ? e : s ? s : "Error") : i;
                }, j = function(t) {
                    var e, s, i = C.is("array", t) ? [] : {};
                    for (e in t) q.call(t, e) && (s = t[e], i[e] = s === Object(s) ? j(s) : s);
                    return i;
                };
                C = {
                    module: function(t, e) {
                        M.currentModule = t, M.currentModuleTestEnvironment = e, M.modules[t] = !0;
                    },
                    asyncTest: function(t, e, s) {
                        2 === arguments.length && (s = e, e = null), C.test(t, e, s, !0);
                    },
                    test: function(t, e, s, r) {
                        var a, c = "<span class='test-name'>" + o(t) + "</span>";
                        2 === arguments.length && (s = e, e = null), M.currentModule && (c = "<span class='module-name'>" + o(M.currentModule) + "</span>: " + c), 
                        a = new k({
                            nameHtml: c,
                            testName: t,
                            expected: e,
                            async: r,
                            callback: s,
                            module: M.currentModule,
                            moduleTestEnvironment: M.currentModuleTestEnvironment,
                            stack: n(2)
                        }), i(a) && a.queue();
                    },
                    expect: function(t) {
                        return 1 !== arguments.length ? M.current.expected : void (M.current.expected = t);
                    },
                    start: function(t) {
                        return void 0 === M.semaphore ? void C.begin(function() {
                            P(function() {
                                C.start(t);
                            });
                        }) : (M.semaphore -= t || 1, M.semaphore > 0 ? void 0 : M.semaphore < 0 ? (M.semaphore = 0, 
                        void C.pushFailure("Called start() while already started (QUnit.config.semaphore was 0 already)", null, n(2))) : void (D.setTimeout ? P(function() {
                            M.semaphore > 0 || (M.timeout && L(M.timeout), M.blocking = !1, c(!0));
                        }, 13) : (M.blocking = !1, c(!0))));
                    },
                    stop: function(t) {
                        M.semaphore += t || 1, M.blocking = !0, M.testTimeout && D.setTimeout && (L(M.timeout), 
                        M.timeout = P(function() {
                            C.ok(!1, "Test timed out"), M.semaphore = 1, C.start();
                        }, M.testTimeout));
                    }
                }, function() {
                    function t() {}
                    t.prototype = C, C = new t(), C.constructor = t;
                }(), M = {
                    queue: [],
                    blocking: !0,
                    hidepassed: !1,
                    reorder: !0,
                    altertitle: !0,
                    scrolltop: !0,
                    requireExpects: !1,
                    urlConfig: [ {
                        id: "noglobals",
                        label: "Check for Globals",
                        tooltip: "Enabling this will test if any test introduces new properties on the `window` object. Stored as query-strings."
                    }, {
                        id: "notrycatch",
                        label: "No try-catch",
                        tooltip: "Enabling this will run tests outside of a try-catch block. Makes debugging exceptions in IE reasonable. Stored as query-strings."
                    } ],
                    modules: {},
                    begin: [],
                    done: [],
                    log: [],
                    testStart: [],
                    testDone: [],
                    moduleStart: [],
                    moduleDone: []
                }, function() {
                    var t, s, i = e.location || {
                        search: "",
                        protocol: "file:"
                    }, r = i.search.slice(1).split("&"), n = r.length, o = {};
                    if (r[0]) for (t = 0; t < n; t++) s = r[t].split("="), s[0] = decodeURIComponent(s[0]), 
                    s[1] = !s[1] || decodeURIComponent(s[1]), o[s[0]] ? o[s[0]] = [].concat(o[s[0]], s[1]) : o[s[0]] = s[1];
                    if (C.urlParams = o, M.filter = o.filter, M.module = o.module, M.testNumber = [], 
                    o.testNumber) for (o.testNumber = [].concat(o.testNumber), t = 0; t < o.testNumber.length; t++) s = o.testNumber[t], 
                    M.testNumber.push(parseInt(s, 10));
                    C.isLocal = "file:" === i.protocol;
                }(), d(C, {
                    config: M,
                    init: function() {
                        d(M, {
                            stats: {
                                all: 0,
                                bad: 0
                            },
                            moduleStats: {
                                all: 0,
                                bad: 0
                            },
                            started: +new A(),
                            updateRate: 1e3,
                            blocking: !1,
                            autostart: !0,
                            autorun: !1,
                            filter: "",
                            queue: [],
                            semaphore: 1
                        });
                        var t, e, s, i = g("qunit");
                        i && (i.innerHTML = "<h1 id='qunit-header'>" + o(document.title) + "</h1><h2 id='qunit-banner'></h2><div id='qunit-testrunner-toolbar'></div><h2 id='qunit-userAgent'></h2><ol id='qunit-tests'></ol>"), 
                        t = g("qunit-tests"), e = g("qunit-banner"), s = g("qunit-testresult"), t && (t.innerHTML = ""), 
                        e && (e.className = ""), s && s.parentNode.removeChild(s), t && (s = document.createElement("p"), 
                        s.id = "qunit-testresult", s.className = "result", t.parentNode.insertBefore(s, t), 
                        s.innerHTML = "Running...<br/>&nbsp;");
                    },
                    reset: function() {
                        var t = g("qunit-fixture");
                        t && (t.innerHTML = M.fixture);
                    },
                    is: function(t, e) {
                        return C.objectType(e) === t;
                    },
                    objectType: function(t) {
                        if ("undefined" == typeof t) return "undefined";
                        if (null === t) return "null";
                        var e = N.call(t).match(/^\[object\s(.*)\]$/), s = e && e[1] || "";
                        switch (s) {
                          case "Number":
                            return isNaN(t) ? "nan" : "number";

                          case "String":
                          case "Boolean":
                          case "Array":
                          case "Date":
                          case "RegExp":
                          case "Function":
                            return s.toLowerCase();
                        }
                        return "object" == typeof t ? "object" : void 0;
                    },
                    push: function(t, e, s, i) {
                        if (!M.current) throw new Error("assertion outside test context, was " + n());
                        var r, a, c = {
                            module: M.current.module,
                            name: M.current.testName,
                            result: t,
                            message: i,
                            actual: e,
                            expected: s
                        };
                        i = o(i) || (t ? "okay" : "failed"), i = "<span class='test-message'>" + i + "</span>", 
                        r = i, t || (s = o(C.jsDump.parse(s)), e = o(C.jsDump.parse(e)), r += "<table><tr class='test-expected'><th>Expected: </th><td><pre>" + s + "</pre></td></tr>", 
                        e !== s && (r += "<tr class='test-actual'><th>Result: </th><td><pre>" + e + "</pre></td></tr>", 
                        r += "<tr class='test-diff'><th>Diff: </th><td><pre>" + C.diff(s, e) + "</pre></td></tr>"), 
                        a = n(), a && (c.source = a, r += "<tr class='test-source'><th>Source: </th><td><pre>" + o(a) + "</pre></td></tr>"), 
                        r += "</table>"), w("log", C, c), M.current.assertions.push({
                            result: !!t,
                            message: r
                        });
                    },
                    pushFailure: function(t, e, s) {
                        if (!M.current) throw new Error("pushFailure() assertion outside test context, was " + n(2));
                        var i, r = {
                            module: M.current.module,
                            name: M.current.testName,
                            result: !1,
                            message: t
                        };
                        t = o(t) || "error", t = "<span class='test-message'>" + t + "</span>", i = t, i += "<table>", 
                        s && (i += "<tr class='test-actual'><th>Result: </th><td><pre>" + o(s) + "</pre></td></tr>"), 
                        e && (r.source = e, i += "<tr class='test-source'><th>Source: </th><td><pre>" + o(e) + "</pre></td></tr>"), 
                        i += "</table>", w("log", C, r), M.current.assertions.push({
                            result: !1,
                            message: i
                        });
                    },
                    url: function(t) {
                        t = d(d({}, C.urlParams), t);
                        var s, i = "?";
                        for (s in t) q.call(t, s) && (i += encodeURIComponent(s) + "=" + encodeURIComponent(t[s]) + "&");
                        return e.location.protocol + "//" + e.location.host + e.location.pathname + i.slice(0, -1);
                    },
                    extend: d,
                    id: g,
                    addEvent: f,
                    addClass: y,
                    hasClass: m,
                    removeClass: b
                }), d(C.constructor.prototype, {
                    begin: v("begin"),
                    done: v("done"),
                    log: v("log"),
                    testStart: v("testStart"),
                    testDone: v("testDone"),
                    moduleStart: v("moduleStart"),
                    moduleDone: v("moduleDone")
                }), D.document && "complete" !== document.readyState || (M.autorun = !0), C.load = function() {
                    w("begin", C, {});
                    var t, s, i, r, n, a, c, l, h, u, m, y, b, v, x = 0, k = [], S = "", _ = "", T = d({}, M);
                    for (C.init(), d(M, T), M.blocking = !1, a = M.urlConfig.length, i = 0; i < a; i++) if (u = M.urlConfig[i], 
                    "string" == typeof u && (u = {
                        id: u,
                        label: u
                    }), M[u.id] = C.urlParams[u.id], u.value && "string" != typeof u.value) {
                        if (_ += "<label for='qunit-urlconfig-" + o(u.id) + "' title='" + o(u.tooltip) + "'>" + u.label + ": </label><select id='qunit-urlconfig-" + o(u.id) + "' name='" + o(u.id) + "' title='" + o(u.tooltip) + "'><option></option>", 
                        m = !1, C.is("array", u.value)) for (r = 0; r < u.value.length; r++) _ += "<option value='" + o(u.value[r]) + "'" + (M[u.id] === u.value[r] ? (m = !0) && " selected='selected'" : "") + ">" + o(u.value[r]) + "</option>"; else for (r in u.value) q.call(u.value, r) && (_ += "<option value='" + o(r) + "'" + (M[u.id] === r ? (m = !0) && " selected='selected'" : "") + ">" + o(u.value[r]) + "</option>");
                        M[u.id] && !m && (_ += "<option value='" + o(M[u.id]) + "' selected='selected' disabled='disabled'>" + o(M[u.id]) + "</option>"), 
                        _ += "</select>";
                    } else _ += "<input id='qunit-urlconfig-" + o(u.id) + "' name='" + o(u.id) + "' type='checkbox'" + (u.value ? " value='" + o(u.value) + "'" : "") + (M[u.id] ? " checked='checked'" : "") + " title='" + o(u.tooltip) + "'><label for='qunit-urlconfig-" + o(u.id) + "' title='" + o(u.tooltip) + "'>" + u.label + "</label>";
                    for (i in M.modules) M.modules.hasOwnProperty(i) && k.push(i);
                    for (x = k.length, k.sort(function(t, e) {
                        return t.localeCompare(e);
                    }), S += "<label for='qunit-modulefilter'>Module: </label><select id='qunit-modulefilter' name='modulefilter'><option value='' " + (void 0 === M.module ? "selected='selected'" : "") + ">< All Modules ></option>", 
                    i = 0; i < x; i++) S += "<option value='" + o(encodeURIComponent(k[i])) + "' " + (M.module === k[i] ? "selected='selected'" : "") + ">" + o(k[i]) + "</option>";
                    S += "</select>", v = g("qunit-userAgent"), v && (v.innerHTML = navigator.userAgent), 
                    t = g("qunit-header"), t && (t.innerHTML = "<a href='" + C.url({
                        filter: void 0,
                        module: void 0,
                        testNumber: void 0
                    }) + "'>" + t.innerHTML + "</a> "), h = g("qunit-testrunner-toolbar"), h && (s = document.createElement("input"), 
                    s.type = "checkbox", s.id = "qunit-filter-pass", f(s, "click", function() {
                        var t, e = g("qunit-tests");
                        s.checked ? e.className = e.className + " hidepass" : (t = " " + e.className.replace(/[\n\t\r]/g, " ") + " ", 
                        e.className = t.replace(/ hidepass /, " ")), D.sessionStorage && (s.checked ? sessionStorage.setItem("qunit-filter-passed-tests", "true") : sessionStorage.removeItem("qunit-filter-passed-tests"));
                    }), (M.hidepassed || D.sessionStorage && sessionStorage.getItem("qunit-filter-passed-tests")) && (s.checked = !0, 
                    l = g("qunit-tests"), l.className = l.className + " hidepass"), h.appendChild(s), 
                    n = document.createElement("label"), n.setAttribute("for", "qunit-filter-pass"), 
                    n.setAttribute("title", "Only show tests and assertions that fail. Stored in sessionStorage."), 
                    n.innerHTML = "Hide passed tests", h.appendChild(n), y = document.createElement("span"), 
                    y.innerHTML = _, p(y.getElementsByTagName("input"), "click", function(t) {
                        var s = {}, i = t.target || t.srcElement;
                        s[i.name] = i.checked ? i.defaultValue || !0 : void 0, e.location = C.url(s);
                    }), p(y.getElementsByTagName("select"), "change", function(t) {
                        var s = {}, i = t.target || t.srcElement;
                        s[i.name] = i.options[i.selectedIndex].value || void 0, e.location = C.url(s);
                    }), h.appendChild(y), x > 1 && (b = document.createElement("span"), b.setAttribute("id", "qunit-modulefilter-container"), 
                    b.innerHTML = S, f(b.lastChild, "change", function() {
                        var t = b.getElementsByTagName("select")[0], s = decodeURIComponent(t.options[t.selectedIndex].value);
                        e.location = C.url({
                            module: "" === s ? void 0 : s,
                            filter: void 0,
                            testNumber: void 0
                        });
                    }), h.appendChild(b))), c = g("qunit-fixture"), c && (M.fixture = c.innerHTML), 
                    M.autostart && C.start();
                }, D.document && f(e, "load", C.load), _ = e.onerror, e.onerror = function(t, e, s) {
                    var r = !1;
                    if (_ && (r = _(t, e, s)), r !== !0) {
                        if (C.config.current) {
                            if (C.config.current.ignoreGlobalErrors) return !0;
                            C.pushFailure(t, e + ":" + s);
                        } else C.test("global failure", d(function() {
                            C.pushFailure(t, e + ":" + s);
                        }, {
                            validTest: i
                        }));
                        return !1;
                    }
                    return r;
                }, k.count = 0, k.prototype = {
                    init: function() {
                        var t, e, s, i = g("qunit-tests");
                        i && (e = document.createElement("strong"), e.innerHTML = this.nameHtml, t = document.createElement("a"), 
                        t.innerHTML = "Rerun", t.href = C.url({
                            testNumber: this.testNumber
                        }), s = document.createElement("li"), s.appendChild(e), s.appendChild(t), s.className = "running", 
                        s.id = this.id = "qunit-test-output" + T++, i.appendChild(s));
                    },
                    setup: function() {
                        if (this.module === M.previousModule && q.call(M, "previousModule") || (q.call(M, "previousModule") && w("moduleDone", C, {
                            name: M.previousModule,
                            failed: M.moduleStats.bad,
                            passed: M.moduleStats.all - M.moduleStats.bad,
                            total: M.moduleStats.all
                        }), M.previousModule = this.module, M.moduleStats = {
                            all: 0,
                            bad: 0
                        }, w("moduleStart", C, {
                            name: this.module
                        })), M.current = this, this.testEnvironment = d({
                            setup: function() {},
                            teardown: function() {}
                        }, this.moduleTestEnvironment), this.started = +new A(), w("testStart", C, {
                            name: this.testName,
                            module: this.module
                        }), C.current_testEnvironment = this.testEnvironment, M.pollution || l(), M.notrycatch) return void this.testEnvironment.setup.call(this.testEnvironment, C.assert);
                        try {
                            this.testEnvironment.setup.call(this.testEnvironment, C.assert);
                        } catch (t) {
                            C.pushFailure("Setup failed on " + this.testName + ": " + (t.message || t), r(t, 1));
                        }
                    },
                    run: function() {
                        M.current = this;
                        var t = g("qunit-testresult");
                        if (t && (t.innerHTML = "Running: <br/>" + this.nameHtml), this.async && C.stop(), 
                        this.callbackStarted = +new A(), M.notrycatch) return this.callback.call(this.testEnvironment, C.assert), 
                        void (this.callbackRuntime = +new A() - this.callbackStarted);
                        try {
                            this.callback.call(this.testEnvironment, C.assert), this.callbackRuntime = +new A() - this.callbackStarted;
                        } catch (t) {
                            this.callbackRuntime = +new A() - this.callbackStarted, C.pushFailure("Died on test #" + (this.assertions.length + 1) + " " + this.stack + ": " + (t.message || t), r(t, 0)), 
                            l(), M.blocking && C.start();
                        }
                    },
                    teardown: function() {
                        if (M.current = this, M.notrycatch) return "undefined" == typeof this.callbackRuntime && (this.callbackRuntime = +new A() - this.callbackStarted), 
                        void this.testEnvironment.teardown.call(this.testEnvironment, C.assert);
                        try {
                            this.testEnvironment.teardown.call(this.testEnvironment, C.assert);
                        } catch (t) {
                            C.pushFailure("Teardown failed on " + this.testName + ": " + (t.message || t), r(t, 1));
                        }
                        h();
                    },
                    finish: function() {
                        M.current = this, M.requireExpects && null === this.expected ? C.pushFailure("Expected number of assertions to be defined, but expect() was not called.", this.stack) : null !== this.expected && this.expected !== this.assertions.length ? C.pushFailure("Expected " + this.expected + " assertions, but " + this.assertions.length + " were run", this.stack) : null !== this.expected || this.assertions.length || C.pushFailure("Expected at least one assertion, but none were run - call expect(0) to accept zero assertions.", this.stack);
                        var t, s, i, r, n, o, a, c = this, l = 0, h = 0, u = g("qunit-tests");
                        if (this.runtime = +new A() - this.started, M.stats.all += this.assertions.length, 
                        M.moduleStats.all += this.assertions.length, u) {
                            for (a = document.createElement("ol"), a.className = "qunit-assert-list", t = 0; t < this.assertions.length; t++) s = this.assertions[t], 
                            o = document.createElement("li"), o.className = s.result ? "pass" : "fail", o.innerHTML = s.message || (s.result ? "okay" : "failed"), 
                            a.appendChild(o), s.result ? l++ : (h++, M.stats.bad++, M.moduleStats.bad++);
                            C.config.reorder && D.sessionStorage && (h ? sessionStorage.setItem("qunit-test-" + this.module + "-" + this.testName, h) : sessionStorage.removeItem("qunit-test-" + this.module + "-" + this.testName)), 
                            0 === h && y(a, "qunit-collapsed"), r = document.createElement("strong"), r.innerHTML = this.nameHtml + " <b class='counts'>(<b class='failed'>" + h + "</b>, <b class='passed'>" + l + "</b>, " + this.assertions.length + ")</b>", 
                            f(r, "click", function() {
                                var t = r.parentNode.lastChild, e = m(t, "qunit-collapsed");
                                (e ? b : y)(t, "qunit-collapsed");
                            }), f(r, "dblclick", function(t) {
                                var s = t && t.target ? t.target : e.event.srcElement;
                                "span" !== s.nodeName.toLowerCase() && "b" !== s.nodeName.toLowerCase() || (s = s.parentNode), 
                                e.location && "strong" === s.nodeName.toLowerCase() && (e.location = C.url({
                                    testNumber: c.testNumber
                                }));
                            }), n = document.createElement("span"), n.className = "runtime", n.innerHTML = this.runtime + " ms", 
                            o = g(this.id), o.className = h ? "fail" : "pass", o.removeChild(o.firstChild), 
                            i = o.firstChild, o.appendChild(r), o.appendChild(i), o.appendChild(n), o.appendChild(a);
                        } else for (t = 0; t < this.assertions.length; t++) this.assertions[t].result || (h++, 
                        M.stats.bad++, M.moduleStats.bad++);
                        w("testDone", C, {
                            name: this.testName,
                            module: this.module,
                            failed: h,
                            passed: this.assertions.length - h,
                            total: this.assertions.length,
                            runtime: this.runtime,
                            duration: this.runtime
                        }), C.reset(), M.current = void 0;
                    },
                    queue: function() {
                        function t() {
                            a(function() {
                                s.setup();
                            }), a(function() {
                                s.run();
                            }), a(function() {
                                s.teardown();
                            }), a(function() {
                                s.finish();
                            });
                        }
                        var e, s = this;
                        a(function() {
                            s.init();
                        }), e = C.config.reorder && D.sessionStorage && +sessionStorage.getItem("qunit-test-" + this.module + "-" + this.testName), 
                        e ? t() : a(t, !0);
                    }
                }, S = C.assert = {
                    ok: function(t, e) {
                        if (!M.current) throw new Error("ok() assertion outside test context, was " + n(2));
                        t = !!t, e = e || (t ? "okay" : "failed");
                        var s, i = {
                            module: M.current.module,
                            name: M.current.testName,
                            result: t,
                            message: e
                        };
                        e = "<span class='test-message'>" + o(e) + "</span>", t || (s = n(2), s && (i.source = s, 
                        e += "<table><tr class='test-source'><th>Source: </th><td><pre>" + o(s) + "</pre></td></tr></table>")), 
                        w("log", C, i), M.current.assertions.push({
                            result: t,
                            message: e
                        });
                    },
                    equal: function(t, e, s) {
                        C.push(e == t, t, e, s);
                    },
                    notEqual: function(t, e, s) {
                        C.push(e != t, t, e, s);
                    },
                    propEqual: function(t, e, s) {
                        t = j(t), e = j(e), C.push(C.equiv(t, e), t, e, s);
                    },
                    notPropEqual: function(t, e, s) {
                        t = j(t), e = j(e), C.push(!C.equiv(t, e), t, e, s);
                    },
                    deepEqual: function(t, e, s) {
                        C.push(C.equiv(t, e), t, e, s);
                    },
                    notDeepEqual: function(t, e, s) {
                        C.push(!C.equiv(t, e), t, e, s);
                    },
                    strictEqual: function(t, e, s) {
                        C.push(e === t, t, e, s);
                    },
                    notStrictEqual: function(t, e, s) {
                        C.push(e !== t, t, e, s);
                    },
                    throws: function(t, e, s) {
                        var i, r = e, n = !1;
                        s || "string" != typeof e || (s = e, e = null), M.current.ignoreGlobalErrors = !0;
                        try {
                            t.call(M.current.testEnvironment);
                        } catch (t) {
                            i = t;
                        }
                        M.current.ignoreGlobalErrors = !1, i ? (e ? e instanceof Error ? n = i instanceof Error && i.name === e.name && i.message === e.message : "regexp" === C.objectType(e) ? n = e.test(R(i)) : "string" === C.objectType(e) ? n = e === R(i) : i instanceof e ? n = !0 : e.call({}, i) === !0 && (r = null, 
                        n = !0) : (n = !0, r = null), C.push(n, i, r, s)) : C.pushFailure(s, null, "No exception was thrown.");
                    }
                }, d(C.constructor.prototype, S), C.constructor.prototype.raises = function() {
                    C.push(!1, !1, !1, "QUnit.raises has been deprecated since 2012 (fad3c1ea), use QUnit.throws instead");
                }, C.constructor.prototype.equals = function() {
                    C.push(!1, !1, !1, "QUnit.equals has been deprecated since 2009 (e88049a0), use QUnit.equal instead");
                }, C.constructor.prototype.same = function() {
                    C.push(!1, !1, !1, "QUnit.same has been deprecated since 2009 (e88049a0), use QUnit.deepEqual instead");
                }, C.equiv = function() {
                    function t(t, e, s) {
                        var i = C.objectType(t);
                        if (i) return "function" === C.objectType(e[i]) ? e[i].apply(e, s) : e[i];
                    }
                    var e, s = [], i = [], r = [], n = Object.getPrototypeOf || function(t) {
                        return t.__proto__;
                    }, o = function() {
                        function t(t, e) {
                            return t instanceof e.constructor || e instanceof t.constructor ? e == t : e === t;
                        }
                        return {
                            string: t,
                            boolean: t,
                            number: t,
                            null: t,
                            undefined: t,
                            nan: function(t) {
                                return isNaN(t);
                            },
                            date: function(t, e) {
                                return "date" === C.objectType(t) && e.valueOf() === t.valueOf();
                            },
                            regexp: function(t, e) {
                                return "regexp" === C.objectType(t) && e.source === t.source && e.global === t.global && e.ignoreCase === t.ignoreCase && e.multiline === t.multiline && e.sticky === t.sticky;
                            },
                            function: function() {
                                var t = s[s.length - 1];
                                return t !== Object && "undefined" != typeof t;
                            },
                            array: function(t, s) {
                                var n, o, a, c, l, h;
                                if ("array" !== C.objectType(t)) return !1;
                                if (a = s.length, a !== t.length) return !1;
                                for (i.push(s), r.push(t), n = 0; n < a; n++) {
                                    for (c = !1, o = 0; o < i.length; o++) if (l = i[o] === s[n], h = r[o] === t[n], 
                                    l || h) {
                                        if (!(s[n] === t[n] || l && h)) return i.pop(), r.pop(), !1;
                                        c = !0;
                                    }
                                    if (!c && !e(s[n], t[n])) return i.pop(), r.pop(), !1;
                                }
                                return i.pop(), r.pop(), !0;
                            },
                            object: function(t, o) {
                                var a, c, l, h, u, d = !0, f = [], p = [];
                                if (o.constructor !== t.constructor && !(null === n(o) && n(t) === Object.prototype || null === n(t) && n(o) === Object.prototype)) return !1;
                                s.push(o.constructor), i.push(o), r.push(t);
                                for (a in o) {
                                    for (l = !1, c = 0; c < i.length; c++) if (h = i[c] === o[a], u = r[c] === t[a], 
                                    h || u) {
                                        if (!(o[a] === t[a] || h && u)) {
                                            d = !1;
                                            break;
                                        }
                                        l = !0;
                                    }
                                    if (f.push(a), !l && !e(o[a], t[a])) {
                                        d = !1;
                                        break;
                                    }
                                }
                                i.pop(), r.pop(), s.pop();
                                for (a in t) p.push(a);
                                return d && e(f.sort(), p.sort());
                            }
                        };
                    }();
                    return e = function() {
                        var s = [].slice.apply(arguments);
                        return s.length < 2 || function(e, s) {
                            return e === s || null !== e && null !== s && "undefined" != typeof e && "undefined" != typeof s && C.objectType(e) === C.objectType(s) && t(e, o, [ s, e ]);
                        }(s[0], s[1]) && e.apply(this, s.splice(1, s.length - 1));
                    };
                }(), C.jsDump = function() {
                    function t(t) {
                        return '"' + t.toString().replace(/"/g, '\\"') + '"';
                    }
                    function e(t) {
                        return t + "";
                    }
                    function s(t, e, s) {
                        var i = n.separator(), r = n.indent(), o = n.indent(1);
                        return e.join && (e = e.join("," + i + o)), e ? [ t, o + e, r + s ].join(i) : t + s;
                    }
                    function i(t, e) {
                        var i = t.length, r = new Array(i);
                        for (this.up(); i--; ) r[i] = this.parse(t[i], void 0, e);
                        return this.down(), s("[", r, "]");
                    }
                    var r = /^function (\w+)/, n = {
                        parse: function(t, e, s) {
                            s = s || [];
                            var i, r, n = this.parsers[e || this.typeOf(t)];
                            return e = typeof n, i = x(t, s), i !== -1 ? "recursion(" + (i - s.length) + ")" : "function" === e ? (s.push(t), 
                            r = n.call(this, t, s), s.pop(), r) : "string" === e ? n : this.parsers.error;
                        },
                        typeOf: function(t) {
                            var e;
                            return e = null === t ? "null" : "undefined" == typeof t ? "undefined" : C.is("regexp", t) ? "regexp" : C.is("date", t) ? "date" : C.is("function", t) ? "function" : void 0 !== typeof t.setInterval && "undefined" != typeof t.document && "undefined" == typeof t.nodeType ? "window" : 9 === t.nodeType ? "document" : t.nodeType ? "node" : "[object Array]" === N.call(t) || "number" == typeof t.length && "undefined" != typeof t.item && (t.length ? t.item(0) === t[0] : null === t.item(0) && "undefined" == typeof t[0]) ? "array" : t.constructor === Error.prototype.constructor ? "error" : typeof t;
                        },
                        separator: function() {
                            return this.multiline ? this.HTML ? "<br />" : "\n" : this.HTML ? "&nbsp;" : " ";
                        },
                        indent: function(t) {
                            if (!this.multiline) return "";
                            var e = this.indentChar;
                            return this.HTML && (e = e.replace(/\t/g, "   ").replace(/ /g, "&nbsp;")), new Array(this.depth + (t || 0)).join(e);
                        },
                        up: function(t) {
                            this.depth += t || 1;
                        },
                        down: function(t) {
                            this.depth -= t || 1;
                        },
                        setParser: function(t, e) {
                            this.parsers[t] = e;
                        },
                        quote: t,
                        literal: e,
                        join: s,
                        depth: 1,
                        parsers: {
                            window: "[Window]",
                            document: "[Document]",
                            error: function(t) {
                                return 'Error("' + t.message + '")';
                            },
                            unknown: "[Unknown]",
                            null: "null",
                            undefined: "undefined",
                            function: function(t) {
                                var e = "function", i = "name" in t ? t.name : (r.exec(t) || [])[1];
                                return i && (e += " " + i), e += "( ", e = [ e, C.jsDump.parse(t, "functionArgs"), "){" ].join(""), 
                                s(e, C.jsDump.parse(t, "functionCode"), "}");
                            },
                            array: i,
                            nodelist: i,
                            arguments: i,
                            object: function(t, e) {
                                var i, r, n, o, a = [];
                                C.jsDump.up(), i = [];
                                for (r in t) i.push(r);
                                for (i.sort(), o = 0; o < i.length; o++) r = i[o], n = t[r], a.push(C.jsDump.parse(r, "key") + ": " + C.jsDump.parse(n, void 0, e));
                                return C.jsDump.down(), s("{", a, "}");
                            },
                            node: function(t) {
                                var e, s, i, r = C.jsDump.HTML ? "&lt;" : "<", n = C.jsDump.HTML ? "&gt;" : ">", o = t.nodeName.toLowerCase(), a = r + o, c = t.attributes;
                                if (c) for (s = 0, e = c.length; s < e; s++) i = c[s].nodeValue, i && "inherit" !== i && (a += " " + c[s].nodeName + "=" + C.jsDump.parse(i, "attribute"));
                                return a += n, 3 !== t.nodeType && 4 !== t.nodeType || (a += t.nodeValue), a + r + "/" + o + n;
                            },
                            functionArgs: function(t) {
                                var e, s = t.length;
                                if (!s) return "";
                                for (e = new Array(s); s--; ) e[s] = String.fromCharCode(97 + s);
                                return " " + e.join(", ") + " ";
                            },
                            key: t,
                            functionCode: "[code]",
                            attribute: t,
                            string: t,
                            date: t,
                            regexp: e,
                            number: e,
                            boolean: e
                        },
                        HTML: !1,
                        indentChar: "  ",
                        multiline: !0
                    };
                    return n;
                }(), C.diff = function() {
                    function t(t, e) {
                        var s, i = {}, r = {};
                        for (s = 0; s < e.length; s++) q.call(i, e[s]) || (i[e[s]] = {
                            rows: [],
                            o: null
                        }), i[e[s]].rows.push(s);
                        for (s = 0; s < t.length; s++) q.call(r, t[s]) || (r[t[s]] = {
                            rows: [],
                            n: null
                        }), r[t[s]].rows.push(s);
                        for (s in i) q.call(i, s) && 1 === i[s].rows.length && q.call(r, s) && 1 === r[s].rows.length && (e[i[s].rows[0]] = {
                            text: e[i[s].rows[0]],
                            row: r[s].rows[0]
                        }, t[r[s].rows[0]] = {
                            text: t[r[s].rows[0]],
                            row: i[s].rows[0]
                        });
                        for (s = 0; s < e.length - 1; s++) null != e[s].text && null == e[s + 1].text && e[s].row + 1 < t.length && null == t[e[s].row + 1].text && e[s + 1] == t[e[s].row + 1] && (e[s + 1] = {
                            text: e[s + 1],
                            row: e[s].row + 1
                        }, t[e[s].row + 1] = {
                            text: t[e[s].row + 1],
                            row: s + 1
                        });
                        for (s = e.length - 1; s > 0; s--) null != e[s].text && null == e[s - 1].text && e[s].row > 0 && null == t[e[s].row - 1].text && e[s - 1] == t[e[s].row - 1] && (e[s - 1] = {
                            text: e[s - 1],
                            row: e[s].row - 1
                        }, t[e[s].row - 1] = {
                            text: t[e[s].row - 1],
                            row: s - 1
                        });
                        return {
                            o: t,
                            n: e
                        };
                    }
                    return function(e, s) {
                        e = e.replace(/\s+$/, ""), s = s.replace(/\s+$/, "");
                        var i, r, n = "", o = t("" === e ? [] : e.split(/\s+/), "" === s ? [] : s.split(/\s+/)), a = e.match(/\s+/g), c = s.match(/\s+/g);
                        if (null == a ? a = [ " " ] : a.push(" "), null == c ? c = [ " " ] : c.push(" "), 
                        0 === o.n.length) for (i = 0; i < o.o.length; i++) n += "<del>" + o.o[i] + a[i] + "</del>"; else {
                            if (null == o.n[0].text) for (s = 0; s < o.o.length && null == o.o[s].text; s++) n += "<del>" + o.o[s] + a[s] + "</del>";
                            for (i = 0; i < o.n.length; i++) if (null == o.n[i].text) n += "<ins>" + o.n[i] + c[i] + "</ins>"; else {
                                for (r = "", s = o.n[i].row + 1; s < o.o.length && null == o.o[s].text; s++) r += "<del>" + o.o[s] + a[s] + "</del>";
                                n += " " + o.n[i].text + c[i] + r;
                            }
                        }
                        return n;
                    };
                }(), "undefined" != typeof e && (d(e, C.constructor.prototype), e.QUnit = C), "undefined" != typeof t && t.exports && (t.exports = C);
            }(function() {
                return this;
            }());
        }).call(e, s(134));
    },
    134: function(t, e) {
        "use strict";
        function s() {
            throw new Error("setTimeout has not been defined");
        }
        function i() {
            throw new Error("clearTimeout has not been defined");
        }
        function r(t) {
            if (h === setTimeout) return setTimeout(t, 0);
            if ((h === s || !h) && setTimeout) return h = setTimeout, setTimeout(t, 0);
            try {
                return h(t, 0);
            } catch (e) {
                try {
                    return h.call(null, t, 0);
                } catch (e) {
                    return h.call(this, t, 0);
                }
            }
        }
        function n(t) {
            if (u === clearTimeout) return clearTimeout(t);
            if ((u === i || !u) && clearTimeout) return u = clearTimeout, clearTimeout(t);
            try {
                return u(t);
            } catch (e) {
                try {
                    return u.call(null, t);
                } catch (e) {
                    return u.call(this, t);
                }
            }
        }
        function o() {
            m && f && (m = !1, f.length ? p = f.concat(p) : y = -1, p.length && a());
        }
        function a() {
            if (!m) {
                var t = r(o);
                m = !0;
                for (var e = p.length; e; ) {
                    for (f = p, p = []; ++y < e; ) f && f[y].run();
                    y = -1, e = p.length;
                }
                f = null, m = !1, n(t);
            }
        }
        function c(t, e) {
            this.fun = t, this.array = e;
        }
        function l() {}
        var h, u, d = t.exports = {};
        !function() {
            try {
                h = "function" == typeof setTimeout ? setTimeout : s;
            } catch (t) {
                h = s;
            }
            try {
                u = "function" == typeof clearTimeout ? clearTimeout : i;
            } catch (t) {
                u = i;
            }
        }();
        var f, p = [], m = !1, y = -1;
        d.nextTick = function(t) {
            var e = new Array(arguments.length - 1);
            if (arguments.length > 1) for (var s = 1; s < arguments.length; s++) e[s - 1] = arguments[s];
            p.push(new c(t, e)), 1 !== p.length || m || r(a);
        }, c.prototype.run = function() {
            this.fun.apply(null, this.array);
        }, d.title = "browser", d.browser = !0, d.env = {}, d.argv = [], d.version = "", 
        d.versions = {}, d.on = l, d.addListener = l, d.once = l, d.off = l, d.removeListener = l, 
        d.removeAllListeners = l, d.emit = l, d.binding = function(t) {
            throw new Error("process.binding is not supported");
        }, d.cwd = function() {
            return "/";
        }, d.chdir = function(t) {
            throw new Error("process.chdir is not supported");
        }, d.umask = function() {
            return 0;
        };
    },
    135: function(t, e, s) {
        var i, r;
        !function(n, o) {
            "use strict";
            i = o, r = "function" == typeof i ? i.call(e, s, e, t) : i, !(void 0 !== r && (t.exports = r));
        }(this, function() {
            "use strict";
            function t(t, e) {
                var s;
                for (s in e) e.hasOwnProperty(s) && ("undefined" == typeof e[s] ? delete t[s] : t[s] = e[s]);
                return t;
            }
            function e(t, e) {
                var s;
                for (s = 0; s < t.length; s += 1) if (t[s] === e) return s;
                return -1;
            }
            function s(t, s) {
                var i = e(t, s);
                return i !== -1 ? t.splice(i, 1) : [];
            }
            function i(t) {
                return "undefined" != typeof t && "undefined" != typeof t.requireExpects && t.requireExpects;
            }
            function r(t) {
                return !!t.result;
            }
            function n(t) {
                return !r(t);
            }
            function o(t) {
                return n(t) && "undefined" == typeof t.expected && "undefined" == typeof t.actual;
            }
            function a(t) {
                return t.replace(/(\r?\n)/g, "$&# ");
            }
            function c(t) {
                return t.replace(/^\s+/, "");
            }
            function l(t) {
                return t;
            }
            function h(t, e, s, i) {
                t.push(e + ": " + i(s));
            }
            function u(t, e, s, i, r) {
                t && "undefined" != typeof i && h(e, s, i, r);
            }
            function d(t, e) {
                return e ? t + " - " + a(e) : t;
            }
            function f(f, b, g) {
                function v(t) {
                    return M.config[t];
                }
                function w(t) {
                    if (r(t)) return t.message;
                    var e = [];
                    return t.message && e.push(t.message), v("showExpectationOnFailure") && !o(t) && (h(e, "expected", t.expected, T), 
                    h(e, "got", t.actual, T)), u(v("showTestNameOnFailure"), e, "test", t.name, l), 
                    u(v("showModuleNameOnFailure"), e, "module", t.module, l), u(v("showSourceOnFailure"), e, "source", t.source, c), 
                    e.join(", ");
                }
                function x(t) {
                    M.puts(M.config.initialCount + ".." + t);
                }
                function k(t) {
                    var i;
                    e(N, t) !== -1 && (i = S.config[t], "undefined" != typeof i && s(i, q[t]));
                }
                function C(t) {
                    var e;
                    for (e = 0; e < t.length; e += 1) k(t[e]);
                }
                if (!f) throw new Error('should pass QUnit object reference. Please check QUnit\'s "require" path if you are using Node.js (or any CommonJS env).');
                if ("function" != typeof b) throw new Error("should pass print-like function");
                var S = f, M = {}, _ = "undefined" != typeof S.jsDump && "function" == typeof S.jsDump.parse, T = _ ? function(t) {
                    return S.jsDump.parse(t);
                } : l, E = function(t, e) {
                    g && "object" == typeof g && "undefined" != typeof g[t] && (b('# WARNING: Option "' + t + '" is deprecated and will be removed in future version.'), 
                    e(g[t]));
                }, N = [ "moduleStart", "testStart", "log", "testDone", "done" ], q = {};
                return M.config = t({
                    initialCount: 1,
                    showModuleNameOnFailure: !0,
                    showTestNameOnFailure: !0,
                    showExpectationOnFailure: !0,
                    showSourceOnFailure: !0
                }, g), E("noPlan", function(t) {
                    b('# Now QUnit-TAP works as with "noPlan: true" by default. If you want to delare plan explicitly, please use "QUnit.config.requireExpects" option instead.'), 
                    M.config.noPlan = t;
                }), E("count", function(t) {
                    M.config.initialCount = t + 1;
                }), E("showDetailsOnFailure", function(t) {
                    M.config.showModuleNameOnFailure = t, M.config.showTestNameOnFailure = t, M.config.showExpectationOnFailure = t, 
                    M.config.showSourceOnFailure = t;
                }), M.VERSION = p, M.puts = b, M.count = M.config.initialCount - 1, M.expectedCount = M.config.initialCount - 1, 
                M.explain = T, M.note = function(t) {
                    M.puts(a("# " + t));
                }, M.diag = function(t) {
                    return M.note(t), !1;
                }, M.moduleStart = function(t) {
                    var e = "string" == typeof t ? t : t.name;
                    M.note("module: " + e);
                }, M.testStart = function(t) {
                    var e = "string" == typeof t ? t : t.name;
                    M.note("test: " + e);
                }, M.log = function(t) {
                    var e = "";
                    M.count += 1, n(t) && (e += "not "), e += "ok " + M.count, M.puts(d(e, w(t)));
                }, M.testDone = function() {
                    i(S.config) && (M.expectedCount += S.config.current.expected);
                }, M.done = function() {
                    ("undefined" == typeof M.config.noPlan || M.config.noPlan) && x(i(S.config) ? M.expectedCount : M.count);
                }, M.unsubscribe = function() {
                    "undefined" != typeof S.config && C(0 === arguments.length ? N : m.apply(arguments));
                }, function() {
                    var t, e, s, i = y(S);
                    for (e = 0; e < N.length; e += 1) t = N[e], s = i(S, M, t), q[t] = s;
                }(), M;
            }
            var p = "1.5.0", m = Array.prototype.slice, y = function(t) {
                return function(t, e, s) {
                    var i = t[s], r = function() {
                        e[s].apply(e, m.apply(arguments));
                    };
                    return i(r), r;
                };
            };
            return f.qunitTap = function() {
                throw new Error('[BC BREAK] Since 1.4.0, QUnit-TAP exports single qunitTap function as module.exports. Therefore, require("qunit-tap") returns qunitTap function itself. Please fix your code if you are using Node.js (or any CommonJS env).');
            }, f;
        });
    },
    136: function(t, e, s) {
        (function(t) {
            "use strict";
            var e = !1;
            QUnit.config.autostart = !1;
            var s = window.onerror;
            window.onerror = null, QUnit.begin(function() {
                window.onerror = function(t, e, i) {
                    var r = !1;
                    return s && (r = s(t, e, i)), QUnit.config.current && QUnit.config.current.async && QUnit.start(), 
                    r;
                };
            }), QUnit.moduleStart(function() {
                e = !0;
            }), QUnit.done(function() {
                console.log("phantom-tap-done"), window.onerror = null;
            });
            var i = /^((not )?ok [0-9]+ (- )?)(.*)$/;
            qunitTap(QUnit, function() {
                if (1 == arguments.length && QUnit.config.current) {
                    var t = i.exec(arguments[0]);
                    if (t) return void console.log(t[1] + QUnit.config.current.testName + ": " + t[4]);
                }
                console.log.apply(console, arguments);
            }), window.setTimeout(function() {
                e || (console.log("QUnit not started by test"), console.log("phantom-tap-error"));
            }, 2e4), window.tests_included = !0, t && t.exports && (t.exports = QUnit);
        }).call(e, s(33)(t));
    },
    137: function(t, e) {}
});
//# sourceMappingURL=test-docker.min.js.map