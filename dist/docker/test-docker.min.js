!function(t) {
    function e(i) {
        if (s[i]) return s[i].exports;
        var n = s[i] = {
            exports: {},
            id: i,
            loaded: !1
        };
        return t[i].call(n.exports, n, n.exports, e), n.loaded = !0, n.exports;
    }
    var s = {};
    return e.m = t, e.c = s, e.p = "", e(0);
}({
    0: function(t, e, s) {
        "use strict";
        !function() {
            var t = s(4), e = s(11), i = s(171), n = i;
            i.test("bytes_from_format", function() {
                var e, s = [ [ "999", 999 ], [ "1.9 kb", 1945.6 ], [ "2.0 KB", 2048 ], [ "1.0 MB", 1048576 ], [ "1 GB", 1073741824 ], [ "1 Unknown", 1 ] ];
                for (n.expect(s.length), e = 0; e < s.length; e++) n.strictEqual(t.bytes_from_format(s[e][0]), s[e][1], "bytes_from_format(" + s[e][0] + ") = " + s[e][1]);
            }), i.test("json_skip", function() {
                var e = [ [ "number", "0123456789", [ 10, 0 ] ], [ "number-fancy", "-0123456789.33E-5", [ 17, 0 ] ], [ "string", '"string"', [ 8, 0 ] ], [ "string-escaped", '"st\\"ring"', [ 10, 0 ] ], [ "string-truncated", '"string', [ 0 ] ], [ "boolean", "true", [ 4, 0 ] ], [ "null", "null", [ 4, 0 ] ], [ "string-number", '"string"0123456789', [ 8, 18, 0 ] ], [ "number-string", '0123456789"string"', [ 10, 18, 0 ] ], [ "number-number", "0123456789 123", [ 10, 14, 0 ] ], [ "string-string-string", '"string""two""three"', [ 8, 13, 20, 0 ] ], [ "string-string-truncated", '"string""tw', [ 8, 0 ] ], [ "array", '["string","two","three"]', [ 24, 0 ] ], [ "array-escaped", '["string","two","thr]e"]', [ 24, 0 ] ], [ "array-spaces", ' [ "string", "two" ,"thr]e" ]\t', [ 29, 0 ] ], [ "array-truncated", '["string","two","thr', [ 0 ] ], [ "object", '{"string":"two","number":222}', [ 29, 0 ] ], [ "object-escaped", '{"string":"two","num]}}ber":222}', [ 32, 0 ] ], [ "object-spaces", '{ "string": "two", "number": 222 }', [ 34, 0 ] ], [ "object-object", '{"string":"two","number":222}{"string":"two","number":222}', [ 29, 58, 0 ] ], [ "object-line-object", '{"string":"two","number":222}\n{"string":"two","number":222}', [ 29, 59, 0 ] ], [ "object-truncated", '{"stri}ng"', [ 0 ] ], [ "whitespace", "  \r\n\t \v", [ 0 ] ] ];
                n.expect(e.length);
                for (var s = 0; s < e.length; s++) {
                    for (var i, r = [], o = void 0, a = 0; a < 16 && (i = t.json_skip(e[s][1], o), r.push(i), 
                    0 !== i); a++) o = i;
                    n.deepEqual(r, e[s][2], "json_skip(): " + e[s][0]);
                }
            }), i.test("quote_cmdline", function() {
                var e = [ [ [ "foo" ], "foo" ], [ [ "foo", "bar" ], "foo bar" ], [ [ "f o o" ], '"f o o"' ], [ [ "f\\o" ], "f\\\\o" ], [ [ 'f"o' ], "'f\"o'" ], [ [ "f\"'o" ], "'f\"\\'o'" ], [ [ 'f "o' ], '"f \\"o"' ] ];
                n.expect(e.length);
                for (var s = 0; s < e.length; s++) n.strictEqual(t.quote_cmdline(e[s][0]), e[s][1], "quote(" + String(e[s][0]) + ") = " + e[s][1]);
            }), i.test("unquote_cmdline", function() {
                var e = [ [ [ "foo" ], "  foo  " ], [ [ "foo", "bar" ], "foo    bar  " ], [ [ "f o o" ], '"f o o"' ], [ [ "f o o" ], "'f o o'" ], [ [ "f\\o" ], "f\\\\o" ], [ [ 'f"o' ], "'f\"o'" ], [ [ "f\"'o" ], "'f\"\\'o'" ], [ [ 'f "o' ], '"f \\"o"' ], [ [ "f o o" ], "f' 'o\" \"o" ], [ [ "f'", 'o" "o' ], "f\\' 'o\" \"o" ] ];
                n.expect(e.length);
                for (var s = 0; s < e.length; s++) n.deepEqual(t.unquote_cmdline(e[s][1]), e[s][0], "unquote(" + String(e[s][1]) + ") = " + e[s][0]);
            }), i.test("render_container_status", function() {
                var t = [ [ {
                    Status: "blah",
                    Running: !0
                }, "blah" ], [ {
                    Running: !0,
                    Paused: !1
                }, "running" ], [ {
                    Running: !1,
                    Paused: !0
                }, "paused" ], [ {
                    Restarting: !0
                }, "restarting" ], [ {
                    FinishedAt: "0001-01-01"
                }, "created" ], [ {
                    FinishedAt: "2016-11-11"
                }, "exited" ], [ {}, "exited" ] ];
                n.expect(t.length), t.forEach(function(t) {
                    n.equal(e.render_container_status(t[0]), t[1], "render_container_status = " + t[1]);
                });
            }), i.start();
        }();
    },
    2: function(t, e) {
        t.exports = jQuery;
    },
    3: function(t, e) {
        t.exports = cockpit;
    },
    4: function(t, e, s) {
        "use strict";
        !function() {
            function e() {
                "all" != window.debugging && "docker" != window.debugging || console.debug.apply(console, arguments);
            }
            function i(t, e) {
                var s = this, i = new c({
                    cols: 80,
                    rows: 24,
                    screenKeys: !0,
                    inlineStyle: !1,
                    useFocus: !1
                }), n = !0, r = a.utf8_decoder(), l = a.utf8_encoder();
                return t.empty(), i.open(t[0]), s.typeable = function(t) {
                    i.cursorHidden = !t, i.refresh(i.y, i.y), n = t;
                }, s.focus = function() {
                    i.focus();
                }, s.close = function() {
                    i.destroy();
                }, "string" == typeof e ? (i.write("[31m" + e + "[m\r\n"), s.close = function() {}, 
                s.typeable(!1), s) : (o(e).on("close", function(t, n) {
                    var r = n.problem || "disconnected";
                    i.write("[31m" + r + "[m\r\n"), s.typeable(!1), o(e).off("message"), e = null;
                }), s.process = function(t) {
                    return i.write(r.decode(t)), t.length;
                }, i.on("data", function(t) {
                    n && e && e.send(l.encode(t));
                }), s);
            }
            function n(t, e) {
                function s(t) {
                    c.push(t), r || (r = window.setTimeout(function() {
                        r = null;
                        var t = n[0].scrollHeight - n.scrollTop() <= n.outerHeight(), e = o("<span>").text(c.join(""));
                        c.length = 0, n.append(e), t && n.scrollTop(n.prop("scrollHeight"));
                    }, 50));
                }
                var i = this, n = o("<pre>");
                t.empty(), t.append(n);
                var r, c = [];
                if ("string" == typeof e) return s(e), i.close = function() {}, i;
                e.control({
                    batch: 16384,
                    latency: 50
                });
                var l = a.utf8_decoder(!1);
                return i.process = function(t) {
                    for (var e, i, n = 0, r = t.length; ;) {
                        if (r < n + 8) return n;
                        if (e = (255 & t[n + 4]) << 24 | (255 & t[n + 5]) << 16 | (255 & t[n + 6]) << 8 | 255 & t[n + 7], 
                        r < n + 8 + e) return n;
                        i = t.subarray ? t.subarray(n + 8, n + 8 + e) : t.slice(n + 8, n + 8 + e), s(l.decode(i, {
                            stream: !0
                        })), n += 8 + e;
                    }
                    return n;
                }, i.focus = function() {}, i.close = function() {}, o(e).on("close", function(t, i) {
                    s(i.reason || "disconnected"), o(e).off(), e = null;
                }), i;
            }
            function r(t, e) {
                var s, i, n = e.length, r = t.length - n + 1;
                for (i = 0; i < r; i++) {
                    for (s = 0; s < n && t[i + s] === e[s]; s++) ;
                    if (s == n) return i;
                }
                return -1;
            }
            var o = s(2), a = s(3), c = s(5), l = {}, u = a.http("/var/run/docker.sock", {
                superuser: !0
            });
            l.pull = function(t, s, i) {
                var n = o.Deferred();
                s || (s = "latest"), i && (t = i + "/" + t), e("pulling: " + t + ":" + s);
                var r, a = {
                    method: "POST",
                    path: "/v1.12/images/create",
                    body: "",
                    params: {
                        fromImage: t,
                        tag: s
                    }
                }, c = "", h = u.request(a).stream(function(t) {
                    c += t;
                    var e = l.json_skip(c, 0);
                    if (0 !== e) {
                        var s = JSON.parse(c.substring(0, e));
                        c = c.substring(e), s.error ? r = s.error : s.status && n.notify(s.status, s);
                    }
                }).fail(function(t) {
                    n.reject(t);
                }).done(function() {
                    r ? n.reject(new Error(r)) : n.resolve();
                }), f = n.promise();
                return f.cancel = function() {
                    return h.close("cancelled"), f;
                }, f;
            }, l.inspect_image = function(t) {
                var e = o.Deferred();
                u.get("/v1.12/images/" + encodeURIComponent(t) + "/json").done(function(t) {
                    e.resolve(JSON.parse(t));
                }).fail(function(t) {
                    e.reject(t);
                });
                var s = e.promise();
                return s.cancel = function() {
                    return s;
                }, s;
            }, l.console = function(t, s, c) {
                function l(t) {
                    w = g ? new i(p, t) : new n(p, t);
                }
                function h() {
                    if (p.connected = !1, !m) return f(g === !1 ? "GET /v1.15/containers/" + encodeURIComponent(t) + "/logs?follow=1&stdout=1&stderr=1&tail=1000&timestamps=0 HTTP/1.0\r\nContent-Length: 0\r\n\r\n" : "POST /v1.15/containers/" + encodeURIComponent(t) + "/attach?logs=1&stream=1&stdin=1&stdout=1&stderr=1 HTTP/1.0\r\nContent-Length: 0\r\n\r\n");
                    var e = u.request(o.extend({}, c, m)).always(function() {
                        e = null;
                    }).done(function(t) {
                        var e = JSON.parse(t), s = JSON.stringify({
                            Detach: !1,
                            Tty: g
                        });
                        return f("POST /v1.15/exec/" + encodeURIComponent(e.Id) + "/start HTTP/1.0\r\nContent-Length: " + s.length + "\r\n\r\n" + s);
                    }).fail(function(t) {
                        l(t.message);
                    });
                }
                function f(s) {
                    w && w.close(), w = null;
                    var u = o.extend({}, c, {
                        payload: "stream",
                        unix: "/var/run/docker.sock",
                        superuser: !0,
                        binary: !0
                    });
                    b = a.channel(u), e(s), b.send(s), o(b).on("close.attach", function(i, n) {
                        e(t + ": console close: ", n), o(b).off(".attach"), b = null, p.connected && !n.problem && window.setTimeout(function() {
                            p.connected && !b && f(s);
                        }, 1e3);
                    });
                    var h = null, d = b.buffer();
                    d.callback = function(s) {
                        var o, c = 0, u = 0;
                        if (null === h) {
                            if (u = r(s, [ 13, 10, 13, 10 ]), u == -1) return c;
                            if (h = s.subarray ? a.utf8_decoder().decode(s.subarray(0, u)) : a.utf8_decoder().decode(s.slice(0, u)), 
                            e(t + ": console headers: ", h), o = h.split("\r\n", 1)[0].split(" "), "200" != o[1]) return l(o.slice(2).join(" ")), 
                            void (d.callback = null);
                            s.subarray ? (s = s.subarray(u + 4), c += u + 4) : (s = s.slice(u + 4), c += u + 4);
                        }
                        if (void 0 === g || null === g) {
                            if (s.length < 2) return c;
                            g = !((0 === s[0] || 1 === s[0] || 2 === s[0]) && 0 === s[1]), e(t + ": mode tty: " + g);
                        }
                        w = g ? new i(p, b) : new n(p, b), p.typeable(y), p.connected = !0, d.callback = w.process;
                        var f = w.process(s);
                        return c + f;
                    };
                }
                function d() {
                    w && w.typeable && w.typeable(y && v);
                }
                var p = o("<div>").addClass("console-ct");
                p.connected = !1;
                var m, g, y = !1, v = !1, b = null, w = null;
                Array.isArray(s) ? (c || (c = {}), g = c.tty, void 0 !== g && null !== g || (g = !0), 
                m = {
                    method: "POST",
                    path: "/v1.15/containers/" + encodeURIComponent(t) + "/exec",
                    headers: {
                        "Content-Type": "application/json"
                    },
                    body: JSON.stringify({
                        AttachStdin: g,
                        AttachStdout: !0,
                        AttachStderr: !0,
                        Tty: g,
                        Cmd: s
                    })
                }, e("preparing to exec:", s)) : (e("preparing to attach"), c = s || {}, g = c.tty), 
                delete c.tty;
                var x = null;
                return p.close = function(t) {
                    p.connected = !1, x && x.close(t), b && b.close(t), w && (w.close(), w = null);
                }, p.connect = function() {
                    p.close("disconnected"), h();
                }, o(p).on("focusin", function() {
                    v = !0, d(), w.focus();
                }).on("focusout", function() {
                    v = !1, d();
                }), p.typeable = function(t) {
                    y = t, d();
                }, p;
            }, l.json_skip = function(t, e) {
                var s, i = !1, n = t.length, r = 0, o = !1, a = !1, c = ' \t\n\r\v[{}]"', l = " \t\n\r\v";
                for (void 0 === e && (e = 0), n = t.length; e != n && !(i && r <= 0); e++) if (s = t[e], 
                o) c.indexOf(s) != -1 && (o = !1, r--, e--); else if (l.indexOf(s) == -1) if (a) switch (s) {
                  case "\\":
                    if (e + 1 == n) continue;
                    e++;
                    break;

                  case '"':
                    a = !1, r--;
                } else switch (i = !0, s) {
                  case "[":
                  case "{":
                    r++;
                    break;

                  case "]":
                  case "}":
                    r--;
                    break;

                  case '"':
                    a = !0, r++;
                    break;

                  default:
                    o = !0, r++;
                }
                return o && 1 == r && (r = 0), !i || r > 0 ? 0 : e;
            }, l.quote_cmdline = function(t) {
                function e(t) {
                    return " " == t;
                }
                function s(t) {
                    var s, i = "", n = "";
                    for (s = 0; s < t.length; s++) "\\" == t[s] || t[s] == n ? i += "\\" : "" === n && ("'" == t[s] || e(t[s]) ? n = '"' : '"' == t[s] && (n = "'")), 
                    i += t[s];
                    return n + i + n;
                }
                return t = t || [], t.map(s).join(" ");
            }, l.unquote_cmdline = function(t) {
                function e(t) {
                    return " " == t;
                }
                function s() {
                    for (;n < t.length && e(t[n]); ) n++;
                }
                function i() {
                    for (var s = "", i = null; n < t.length; ) {
                        if ("\\" == t[n]) n++, n < t.length && (s += t[n]); else if (t[n] == i) i = null; else if (i) s += t[n]; else if ('"' == t[n] || "'" == t[n]) i = t[n]; else {
                            if (e(t[n])) break;
                            s += t[n];
                        }
                        n++;
                    }
                    return s;
                }
                var n, r = [];
                for (n = 0, s(); n < t.length; ) r.push(i()), s();
                return r;
            };
            var h = [ null, "KB", "MB", "GB", "TB", "PB", "EB", "ZB" ];
            l.bytes_from_format = function(t, e) {
                var s = 1024;
                void 0 === e && (e = " ");
                var i = t.split(e).pop().toUpperCase(), n = h.indexOf(i), r = parseFloat(t);
                return n > 0 && !isNaN(r) ? r * Math.pow(s, n) : r;
            }, l.truncate_id = function(t) {
                var e = t.indexOf(":");
                return e >= 0 && (t = t.slice(e + 1)), t.substr(0, 12);
            }, t.exports = l;
        }();
    },
    5: function(t, e, s) {
        var i, n;
        (function(s) {
            (function() {
                "use strict";
                function s() {
                    this._events = this._events || {};
                }
                function r() {
                    s.call(this);
                }
                function o(t) {
                    var e = this;
                    if (!(this instanceof o)) return new o(arguments[0], arguments[1], arguments[2]);
                    r.call(this), "number" == typeof t && (t = {
                        cols: arguments[0],
                        rows: arguments[1],
                        handler: arguments[2]
                    }), t = t || {}, m(g(o.defaults), function(s) {
                        null == t[s] && (t[s] = o.options[s], o[s] !== o.defaults[s] && (t[s] = o[s])), 
                        e[s] = t[s];
                    }), 8 === t.colors.length ? t.colors = t.colors.concat(o._colors.slice(8)) : 16 === t.colors.length ? t.colors = t.colors.concat(o._colors.slice(16)) : 10 === t.colors.length ? t.colors = t.colors.slice(0, -2).concat(o._colors.slice(8, -2), t.colors.slice(-2)) : 18 === t.colors.length && (t.colors = t.colors.slice(0, -2).concat(o._colors.slice(16, -2), t.colors.slice(-2))), 
                    this.colors = t.colors, this.options = t, this.parent = t.body || t.parent || (y ? y.getElementsByTagName("body")[0] : null), 
                    this.cols = t.cols || t.geometry[0], this.rows = t.rows || t.geometry[1], this.setRawMode, 
                    this.isTTY = !0, this.isRaw = !0, this.columns = this.cols, this.rows = this.rows, 
                    t.handler && this.on("data", t.handler), this.ybase = 0, this.ydisp = 0, this.x = 0, 
                    this.y = 0, this.cursorHidden = !1, this.convertEol, this.state = 0, this.queue = "", 
                    this.scrollTop = 0, this.scrollBottom = this.rows - 1, this.applicationKeypad = !1, 
                    this.applicationCursor = !1, this.originMode = !1, this.insertMode = !1, this.wraparoundMode = !1, 
                    this.normal = null, this.prefixMode = !1, this.selectMode = !1, this.visualMode = !1, 
                    this.searchMode = !1, this.searchDown, this.entry = "", this.entryPrefix = "Search: ", 
                    this._real, this._selected, this._textarea, this.charset = null, this.gcharset = null, 
                    this.glevel = 0, this.charsets = [ null ], this.decLocator, this.x10Mouse, this.vt200Mouse, 
                    this.vt300Mouse, this.normalMouse, this.mouseEvents, this.sendFocus, this.utfMouse, 
                    this.sgrMouse, this.urxvtMouse, this.element, this.children, this.refreshStart, 
                    this.refreshEnd, this.savedX, this.savedY, this.savedCols, this.readable = !0, this.writable = !0, 
                    this.defAttr = 131840, this.curAttr = this.defAttr, this.params = [], this.currentParam = 0, 
                    this.prefix = "", this.postfix = "", this.lines = [];
                    for (var s = this.rows; s--; ) this.lines.push(this.blankLine());
                    this.tabs, this.setupStops();
                }
                function a(t, e, s, i) {
                    t.addEventListener(e, s, i || !1);
                }
                function c(t, e, s, i) {
                    t.removeEventListener(e, s, i || !1);
                }
                function l(t) {
                    return t.preventDefault && t.preventDefault(), t.returnValue = !1, t.stopPropagation && t.stopPropagation(), 
                    t.cancelBubble = !0, !1;
                }
                function u(t, e) {
                    function s() {
                        this.constructor = t;
                    }
                    s.prototype = e.prototype, t.prototype = new s();
                }
                function h(t) {
                    var e = t.getElementsByTagName("body")[0], s = t.createElement("div");
                    s.className = "terminal";
                    var i = t.createElement("div"), n = t.createElement("span");
                    n.innerHTML = "hello world", i.appendChild(n), s.appendChild(i), e.appendChild(s);
                    var r = n.scrollWidth;
                    n.style.fontWeight = "bold";
                    var o = n.scrollWidth;
                    return e.removeChild(s), r !== o;
                }
                function f(t, e) {
                    for (var s = t.length; s--; ) if (t[s] === e) return s;
                    return -1;
                }
                function d(t) {
                    return !(t <= "＀") && (t >= "！" && t <= "ﾾ" || t >= "ￂ" && t <= "ￇ" || t >= "ￊ" && t <= "ￏ" || t >= "ￒ" && t <= "ￗ" || t >= "ￚ" && t <= "ￜ" || t >= "￠" && t <= "￦" || t >= "￨" && t <= "￮");
                }
                function p(t, e, s) {
                    var i = t << 16 | e << 8 | s;
                    if (null != p._cache[i]) return p._cache[i];
                    for (var n, r, a, c, l, u = 1 / 0, h = -1, f = 0; f < o.vcolors.length; f++) {
                        if (n = o.vcolors[f], r = n[0], a = n[1], c = n[2], l = p.distance(t, e, s, r, a, c), 
                        0 === l) {
                            h = f;
                            break;
                        }
                        l < u && (u = l, h = f);
                    }
                    return p._cache[i] = h;
                }
                function m(t, e, s) {
                    if (t.forEach) return t.forEach(e, s);
                    for (var i = 0; i < t.length; i++) e.call(s, t[i], i, t);
                }
                function g(t) {
                    if (Object.keys) return Object.keys(t);
                    var e, s = [];
                    for (e in t) Object.prototype.hasOwnProperty.call(t, e) && s.push(e);
                    return s;
                }
                var y = this.document;
                s.prototype.addListener = function(t, e) {
                    this._events[t] = this._events[t] || [], this._events[t].push(e);
                }, s.prototype.on = s.prototype.addListener, s.prototype.removeListener = function(t, e) {
                    if (this._events[t]) for (var s = this._events[t], i = s.length; i--; ) if (s[i] === e || s[i].listener === e) return void s.splice(i, 1);
                }, s.prototype.off = s.prototype.removeListener, s.prototype.removeAllListeners = function(t) {
                    this._events[t] && delete this._events[t];
                }, s.prototype.once = function(t, e) {
                    function s() {
                        var i = Array.prototype.slice.call(arguments);
                        return this.removeListener(t, s), e.apply(this, i);
                    }
                    return s.listener = e, this.on(t, s);
                }, s.prototype.emit = function(t) {
                    if (this._events[t]) for (var e = Array.prototype.slice.call(arguments, 1), s = this._events[t], i = s.length, n = 0; n < i; n++) s[n].apply(this, e);
                }, s.prototype.listeners = function(t) {
                    return this._events[t] = this._events[t] || [];
                }, u(r, s), r.prototype.pipe = function(t, e) {
                    function s() {
                        o.removeListener("data", i), o.removeListener("error", n), o.removeListener("end", r), 
                        t.removeListener("error", n), t.removeListener("close", s);
                    }
                    var i, n, r, o = this;
                    return o.on("data", i = function(e) {
                        t.write(e);
                    }), o.on("error", n = function(t) {
                        if (s(), !this.listeners("error").length) throw t;
                    }), o.on("end", r = function() {
                        t.end(), s();
                    }), t.on("error", n), t.on("close", s), t.emit("pipe", o), t;
                };
                var v = 0, b = 1, w = 2, x = 3, k = 4, C = 5, M = 6, _ = {
                    type: "udk"
                };
                u(o, r), o.tangoColors = [ "#2e3436", "#cc0000", "#4e9a06", "#c4a000", "#3465a4", "#75507b", "#06989a", "#d3d7cf", "#555753", "#ef2929", "#8ae234", "#fce94f", "#729fcf", "#ad7fa8", "#34e2e2", "#eeeeec" ], 
                o.xtermColors = [ "#000000", "#cd0000", "#00cd00", "#cdcd00", "#0000ee", "#cd00cd", "#00cdcd", "#e5e5e5", "#7f7f7f", "#ff0000", "#00ff00", "#ffff00", "#5c5cff", "#ff00ff", "#00ffff", "#ffffff" ], 
                o.colors = function() {
                    function t(t, s, n) {
                        i.push("#" + e(t) + e(s) + e(n));
                    }
                    function e(t) {
                        return t = t.toString(16), t.length < 2 ? "0" + t : t;
                    }
                    var s, i = o.tangoColors.slice(), n = [ 0, 95, 135, 175, 215, 255 ];
                    for (s = 0; s < 216; s++) t(n[s / 36 % 6 | 0], n[s / 6 % 6 | 0], n[s % 6]);
                    for (s = 0; s < 24; s++) n = 8 + 10 * s, t(n, n, n);
                    return i;
                }(), o.colors[256] = "#000000", o.colors[257] = "#f0f0f0", o._colors = o.colors.slice(), 
                o.vcolors = function() {
                    for (var t, e = [], s = o.colors, i = 0; i < 256; i++) t = parseInt(s[i].substring(1), 16), 
                    e.push([ t >> 16 & 255, t >> 8 & 255, 255 & t ]);
                    return e;
                }(), o.defaults = {
                    colors: o.colors,
                    convertEol: !1,
                    termName: "xterm",
                    geometry: [ 80, 24 ],
                    visualBell: !1,
                    popOnBell: !1,
                    scrollback: 1e3,
                    screenKeys: !1,
                    debug: !1
                }, o.options = {}, m(g(o.defaults), function(t) {
                    o[t] = o.defaults[t], o.options[t] = o.defaults[t];
                }), o.focus = null, o.prototype.focus = function() {
                    o.focus !== this && (o.focus && o.focus.blur(), this.sendFocus && this.send("[I"), 
                    o.focus = this);
                }, o.prototype.blur = function() {
                    o.focus === this && (this.sendFocus && this.send("[O"), o.focus = null);
                }, o.prototype.initGlobal = function() {
                    var t = this.document;
                    o._boundDocs = o._boundDocs || [], ~f(o._boundDocs, t) || (o._boundDocs.push(t), 
                    o.bindPaste(t), o.bindKeys(t), o.bindCopy(t), this.isMobile && this.fixMobile(t));
                }, o.bindPaste = function(t) {
                    var e = t.defaultView;
                    a(e, "paste", function(t) {
                        var e = o.focus;
                        if (e) return t.clipboardData ? e.send(t.clipboardData.getData("text/plain")) : e.context.clipboardData && e.send(e.context.clipboardData.getData("Text")), 
                        e.element.contentEditable = "inherit", l(t);
                    });
                }, o.bindKeys = function(t) {
                    a(t, "keydown", function(t) {
                        if (o.focus) {
                            var e = t.target || t.srcElement;
                            if (e) return e === o.focus.element || e === o.focus.context || e === o.focus.document || e === o.focus.body || e === o._textarea || e === o.focus.parent ? o.focus.keyDown(t) : void 0;
                        }
                    }, !0), a(t, "keypress", function(t) {
                        if (o.focus) {
                            var e = t.target || t.srcElement;
                            if (e) return e === o.focus.element || e === o.focus.context || e === o.focus.document || e === o.focus.body || e === o._textarea || e === o.focus.parent ? o.focus.keyPress(t) : void 0;
                        }
                    }, !0), a(t, "mousedown", function(t) {
                        if (o.focus) {
                            var e = t.target || t.srcElement;
                            if (e) {
                                do if (e === o.focus.element) return; while (e = e.parentNode);
                                o.focus.blur();
                            }
                        }
                    });
                }, o.bindCopy = function(t) {
                    var e = t.defaultView;
                    a(e, "copy", function(t) {
                        var e = o.focus;
                        if (e && e._selected) {
                            var s = e.getCopyTextarea(), i = e.grabText(e._selected.x1, e._selected.x2, e._selected.y1, e._selected.y2);
                            e.emit("copy", i), s.focus(), s.textContent = i, s.value = i, s.setSelectionRange(0, i.length), 
                            E(function() {
                                e.element.focus(), e.focus();
                            }, 1);
                        }
                    });
                }, o.prototype.fixMobile = function(t) {
                    var e = this, s = t.createElement("textarea");
                    s.style.position = "absolute", s.style.left = "-32000px", s.style.top = "-32000px", 
                    s.style.width = "0px", s.style.height = "0px", s.style.opacity = "0", s.style.backgroundColor = "transparent", 
                    s.style.borderStyle = "none", s.style.outlineStyle = "none", s.autocapitalize = "none", 
                    s.autocorrect = "off", t.getElementsByTagName("body")[0].appendChild(s), o._textarea = s, 
                    E(function() {
                        s.focus();
                    }, 1e3), this.isAndroid && a(s, "change", function() {
                        var t = s.textContent || s.value;
                        s.value = "", s.textContent = "", e.send(t + "\r");
                    });
                }, o.prototype.open = function(t) {
                    var e, s = this, i = 0;
                    if (this.parent = t || this.parent, !this.parent) throw new Error("Terminal requires a parent element.");
                    for (this.context = this.parent.ownerDocument.defaultView, this.document = this.parent.ownerDocument, 
                    this.body = this.document.getElementsByTagName("body")[0], this.context.navigator && this.context.navigator.userAgent && (this.isMac = !!~this.context.navigator.userAgent.indexOf("Mac"), 
                    this.isIpad = !!~this.context.navigator.userAgent.indexOf("iPad"), this.isIphone = !!~this.context.navigator.userAgent.indexOf("iPhone"), 
                    this.isAndroid = !!~this.context.navigator.userAgent.indexOf("Android"), this.isMobile = this.isIpad || this.isIphone || this.isAndroid, 
                    this.isMSIE = !!~this.context.navigator.userAgent.indexOf("MSIE")), this.element = this.document.createElement("div"), 
                    this.element.className = "terminal", this.element.style.outline = "none", this.element.setAttribute("tabindex", 0), 
                    this.element.setAttribute("spellcheck", "false"), this.element.style.backgroundColor = this.colors[256], 
                    this.element.style.color = this.colors[257], this.children = []; i < this.rows; i++) e = this.document.createElement("div"), 
                    this.element.appendChild(e), this.children.push(e);
                    this.parent.appendChild(this.element), this.refresh(0, this.rows - 1), "useEvents" in this.options && !this.options.useEvents || this.initGlobal(), 
                    "useFocus" in this.options && !this.options.useFocus || (this.focus(), a(this.element, "focus", function() {
                        s.focus(), s.isMobile && o._textarea.focus();
                    }), a(this.element, "mousedown", function() {
                        s.focus();
                    }), a(this.element, "mousedown", function(t) {
                        var e = null != t.button ? +t.button : null != t.which ? t.which - 1 : null;
                        s.isMSIE && (e = 1 === e ? 0 : 4 === e ? 1 : e), 2 === e && (s.element.contentEditable = "true", 
                        E(function() {
                            s.element.contentEditable = "inherit";
                        }, 1));
                    }, !0)), "useMouse" in this.options && !this.options.useMouse || this.bindMouse(), 
                    "useFocus" in this.options && !this.options.useFocus || E(function() {
                        s.element.focus();
                    }, 100), null == o.brokenBold && (o.brokenBold = h(this.document)), this.emit("open");
                }, o.prototype.setRawMode = function(t) {
                    this.isRaw = !!t;
                }, o.prototype.bindMouse = function() {
                    function t(t) {
                        var e, s;
                        if (e = n(t), s = r(t)) switch (i(e, s), t.type) {
                          case "mousedown":
                            h = e;
                            break;

                          case "mouseup":
                            h = 32;
                            break;

                          case f:                        }
                    }
                    function e(t) {
                        var e, s = h;
                        e = r(t), e && (s += 32, i(s, e));
                    }
                    function s(t, e) {
                        if (u.utfMouse) {
                            if (2047 === e) return t.push(0);
                            e < 127 ? t.push(e) : (e > 2047 && (e = 2047), t.push(192 | e >> 6), t.push(128 | 63 & e));
                        } else {
                            if (255 === e) return t.push(0);
                            e > 127 && (e = 127), t.push(e);
                        }
                    }
                    function i(t, e) {
                        if (u.vt300Mouse) {
                            t &= 3, e.x -= 32, e.y -= 32;
                            var i = "[24";
                            if (0 === t) i += "1"; else if (1 === t) i += "3"; else if (2 === t) i += "5"; else {
                                if (3 === t) return;
                                i += "0";
                            }
                            return i += "~[" + e.x + "," + e.y + "]\r", void u.send(i);
                        }
                        if (u.decLocator) return t &= 3, e.x -= 32, e.y -= 32, 0 === t ? t = 2 : 1 === t ? t = 4 : 2 === t ? t = 6 : 3 === t && (t = 3), 
                        void u.send("[" + t + ";" + (3 === t ? 4 : 0) + ";" + e.y + ";" + e.x + ";" + (e.page || 0) + "&w");
                        if (u.urxvtMouse) return e.x -= 32, e.y -= 32, e.x++, e.y++, void u.send("[" + t + ";" + e.x + ";" + e.y + "M");
                        if (u.sgrMouse) return e.x -= 32, e.y -= 32, void u.send("[<" + (3 === (3 & t) ? t & -4 : t) + ";" + e.x + ";" + e.y + (3 === (3 & t) ? "m" : "M"));
                        var i = [];
                        s(i, t), s(i, e.x), s(i, e.y), u.send("[M" + S.fromCharCode.apply(S, i));
                    }
                    function n(t) {
                        var e, s, i, n, r;
                        switch (t.type) {
                          case "mousedown":
                            e = null != t.button ? +t.button : null != t.which ? t.which - 1 : null, u.isMSIE && (e = 1 === e ? 0 : 4 === e ? 1 : e);
                            break;

                          case "mouseup":
                            e = 3;
                            break;

                          case "DOMMouseScroll":
                            e = t.detail < 0 ? 64 : 65;
                            break;

                          case "mousewheel":
                            e = t.wheelDeltaY > 0 ? 64 : 65;
                        }
                        return s = t.shiftKey ? 4 : 0, i = t.metaKey ? 8 : 0, n = t.ctrlKey ? 16 : 0, r = s | i | n, 
                        u.vt200Mouse ? r &= n : u.normalMouse || (r = 0), e = 32 + (r << 2) + e;
                    }
                    function r(t) {
                        var e, s, i, n, r;
                        if (null != t.pageX) {
                            for (e = t.pageX, s = t.pageY, r = u.element; r && r !== u.document.documentElement; ) e -= r.offsetLeft, 
                            s -= r.offsetTop, r = "offsetParent" in r ? r.offsetParent : r.parentNode;
                            return i = u.element.clientWidth, n = u.element.clientHeight, e = Math.round(e / i * u.cols), 
                            s = Math.round(s / n * u.rows), e < 0 && (e = 0), e > u.cols && (e = u.cols), s < 0 && (s = 0), 
                            s > u.rows && (s = u.rows), e += 32, s += 32, {
                                x: e,
                                y: s,
                                type: t.type === f ? "mousewheel" : t.type
                            };
                        }
                    }
                    var o = this.element, u = this, h = 32, f = "onmousewheel" in this.context ? "mousewheel" : "DOMMouseScroll";
                    a(o, "mousedown", function(s) {
                        u.mouseEvents && (t(s), u.focus(), u.normalMouse && a(u.document, "mousemove", e), 
                        u.x10Mouse || a(u.document, "mouseup", function s(i) {
                            return t(i), u.normalMouse && c(u.document, "mousemove", e), c(u.document, "mouseup", s), 
                            l(i);
                        }));
                    }), a(o, f, function(e) {
                        if (u.mouseEvents && !(u.x10Mouse || u.vt300Mouse || u.decLocator)) return t(e), 
                        l(e);
                    }), a(o, f, function(t) {
                        if (!u.mouseEvents && !u.applicationKeypad) return "DOMMouseScroll" === t.type ? u.scrollDisp(t.detail < 0 ? -5 : 5) : u.scrollDisp(t.wheelDeltaY > 0 ? -5 : 5), 
                        l(t);
                    });
                }, o.prototype.close = o.prototype.destroySoon = o.prototype.destroy = function() {
                    this.destroyed || (this._blink && (clearInterval(this._blink), delete this._blink), 
                    this.readable = !1, this.writable = !1, this.destroyed = !0, this._events = {}, 
                    this.handler = function() {}, this.write = function() {}, this.end = function() {}, 
                    this.element.parentNode && this.element.parentNode.removeChild(this.element), this.emit("end"), 
                    this.emit("close"), this.emit("finish"), this.emit("destroy"));
                }, o.prototype.refresh = function(t, e) {
                    var s, i, n, r, a, c, l, u, h, f, p, m, g;
                    for (l = this.cols, i = t, e >= this.lines.length && (this.log("`end` is too large. Most likely a bad CSR."), 
                    e = this.lines.length - 1); i <= e; i++) {
                        for (g = i + this.ydisp, r = this.lines[g], a = "", s = i !== this.y || this.ydisp !== this.ybase && !this.selectMode || this.cursorHidden ? -1 : this.x, 
                        h = this.defAttr, n = 0; n < l; n++) {
                            switch (u = r[n][0], c = r[n][1], n === s && (u = -1), u !== h && (h !== this.defAttr && (a += "</span>"), 
                            u !== this.defAttr && (u === -1 ? a += '<span class="reverse-video terminal-cursor">' : (a += '<span class="', 
                            f = 511 & u, p = u >> 9 & 511, m = u >> 18, 1 & m && (o.brokenBold || (a += "term-bold "), 
                            p < 8 && (p += 8)), 2 & m && (a += "term-underline "), 4 & m && (a += "term-blink "), 
                            8 & m && (f = u >> 9 & 511, p = 511 & u, 1 & m && p < 8 && (p += 8)), 16 & m && (a += "term-hidden "), 
                            256 !== f && (a += "term-bg-color-" + f + " "), 257 !== p && (a += "term-fg-color-" + p + " "), 
                            a += '">'))), c) {
                              case "&":
                                a += "&amp;";
                                break;

                              case "<":
                                a += "&lt;";
                                break;

                              case ">":
                                a += "&gt;";
                                break;

                              default:
                                c <= " " ? a += "&nbsp;" : (d(c) && n++, a += c);
                            }
                            h = u;
                        }
                        h !== this.defAttr && (a += "</span>"), this.children[i].innerHTML = a;
                    }
                }, o.prototype.showCursor = function() {
                    this.cursorHidden = !1, this.refresh(this.y, this.y);
                }, o.prototype.scroll = function() {
                    var t;
                    ++this.ybase === this.scrollback && (this.ybase = this.ybase / 2 | 0, this.lines = this.lines.slice(-(this.ybase + this.rows) + 1)), 
                    this.ydisp = this.ybase, t = this.ybase + this.rows - 1, t -= this.rows - 1 - this.scrollBottom, 
                    t === this.lines.length ? this.lines.push(this.blankLine()) : this.lines.splice(t, 0, this.blankLine()), 
                    0 !== this.scrollTop && (0 !== this.ybase && (this.ybase--, this.ydisp = this.ybase), 
                    this.lines.splice(this.ybase + this.scrollTop, 1)), this.updateRange(this.scrollTop), 
                    this.updateRange(this.scrollBottom);
                }, o.prototype.scrollDisp = function(t) {
                    this.ydisp += t, this.ydisp > this.ybase ? this.ydisp = this.ybase : this.ydisp < 0 && (this.ydisp = 0), 
                    this.refresh(0, this.rows - 1);
                }, o.prototype.write = function(t) {
                    var e, s, i, n = t.length, r = 0;
                    for (this.refreshStart = this.y, this.refreshEnd = this.y, this.ybase !== this.ydisp && (this.ydisp = this.ybase, 
                    this.maxRange()); r < n; r++, this.lch = i) switch (i = t[r], this.state) {
                      case v:
                        switch (i) {
                          case "":
                            this.bell();
                            break;

                          case "\n":
                          case "\v":
                          case "\f":
                            this.convertEol && (this.x = 0), this.y++, this.y > this.scrollBottom && (this.y--, 
                            this.scroll());
                            break;

                          case "\r":
                            this.x = 0;
                            break;

                          case "\b":
                            this.x > 0 && this.x--;
                            break;

                          case "\t":
                            this.x = this.nextStop();
                            break;

                          case "":
                            this.setgLevel(1);
                            break;

                          case "":
                            this.setgLevel(0);
                            break;

                          case "":
                            this.state = b;
                            break;

                          default:
                            if (i >= " " && (this.charset && this.charset[i] && (i = this.charset[i]), this.x >= this.cols && (this.x = 0, 
                            this.y++, this.y > this.scrollBottom && (this.y--, this.scroll())), this.lines[this.y + this.ybase][this.x] = [ this.curAttr, i ], 
                            this.x++, this.updateRange(this.y), d(i))) {
                                if (e = this.y + this.ybase, this.cols < 2 || this.x >= this.cols) {
                                    this.lines[e][this.x - 1] = [ this.curAttr, " " ];
                                    break;
                                }
                                this.lines[e][this.x] = [ this.curAttr, " " ], this.x++;
                            }
                        }
                        break;

                      case b:
                        switch (i) {
                          case "[":
                            this.params = [], this.currentParam = 0, this.state = w;
                            break;

                          case "]":
                            this.params = [], this.currentParam = 0, this.state = x;
                            break;

                          case "P":
                            this.params = [], this.prefix = "", this.currentParam = "", this.state = C;
                            break;

                          case "_":
                            this.state = M;
                            break;

                          case "^":
                            this.state = M;
                            break;

                          case "c":
                            this.reset();
                            break;

                          case "E":
                            this.x = 0;

                          case "D":
                            this.index();
                            break;

                          case "M":
                            this.reverseIndex();
                            break;

                          case "%":
                            this.setgLevel(0), this.setgCharset(0, o.charsets.US), this.state = v, r++;
                            break;

                          case "(":
                          case ")":
                          case "*":
                          case "+":
                          case "-":
                          case ".":
                            switch (i) {
                              case "(":
                                this.gcharset = 0;
                                break;

                              case ")":
                                this.gcharset = 1;
                                break;

                              case "*":
                                this.gcharset = 2;
                                break;

                              case "+":
                                this.gcharset = 3;
                                break;

                              case "-":
                                this.gcharset = 1;
                                break;

                              case ".":
                                this.gcharset = 2;
                            }
                            this.state = k;
                            break;

                          case "/":
                            this.gcharset = 3, this.state = k, r--;
                            break;

                          case "N":
                            break;

                          case "O":
                            break;

                          case "n":
                            this.setgLevel(2);
                            break;

                          case "o":
                            this.setgLevel(3);
                            break;

                          case "|":
                            this.setgLevel(3);
                            break;

                          case "}":
                            this.setgLevel(2);
                            break;

                          case "~":
                            this.setgLevel(1);
                            break;

                          case "7":
                            this.saveCursor(), this.state = v;
                            break;

                          case "8":
                            this.restoreCursor(), this.state = v;
                            break;

                          case "#":
                            this.state = v, r++;
                            break;

                          case "H":
                            this.tabSet();
                            break;

                          case "=":
                            this.log("Serial port requested application keypad."), this.applicationKeypad = !0, 
                            this.state = v;
                            break;

                          case ">":
                            this.log("Switching back to normal keypad."), this.applicationKeypad = !1, this.state = v;
                            break;

                          default:
                            this.state = v, this.error("Unknown ESC control: %s.", i);
                        }
                        break;

                      case k:
                        switch (i) {
                          case "0":
                            s = o.charsets.SCLD;
                            break;

                          case "A":
                            s = o.charsets.UK;
                            break;

                          case "B":
                            s = o.charsets.US;
                            break;

                          case "4":
                            s = o.charsets.Dutch;
                            break;

                          case "C":
                          case "5":
                            s = o.charsets.Finnish;
                            break;

                          case "R":
                            s = o.charsets.French;
                            break;

                          case "Q":
                            s = o.charsets.FrenchCanadian;
                            break;

                          case "K":
                            s = o.charsets.German;
                            break;

                          case "Y":
                            s = o.charsets.Italian;
                            break;

                          case "E":
                          case "6":
                            s = o.charsets.NorwegianDanish;
                            break;

                          case "Z":
                            s = o.charsets.Spanish;
                            break;

                          case "H":
                          case "7":
                            s = o.charsets.Swedish;
                            break;

                          case "=":
                            s = o.charsets.Swiss;
                            break;

                          case "/":
                            s = o.charsets.ISOLatin, r++;
                            break;

                          default:
                            s = o.charsets.US;
                        }
                        this.setgCharset(this.gcharset, s), this.gcharset = null, this.state = v;
                        break;

                      case x:
                        if ("" === this.lch && "\\" === i || "" === i) {
                            switch ("" === this.lch && ("string" == typeof this.currentParam ? this.currentParam = this.currentParam.slice(0, -1) : "number" == typeof this.currentParam && (this.currentParam = (this.currentParam - ("".charCodeAt(0) - 48)) / 10)), 
                            this.params.push(this.currentParam), this.params[0]) {
                              case 0:
                              case 1:
                              case 2:
                                this.params[1] && (this.title = this.params[1], this.handleTitle(this.title));
                                break;

                              case 3:
                                break;

                              case 4:
                              case 5:
                                break;

                              case 10:
                              case 11:
                              case 12:
                              case 13:
                              case 14:
                              case 15:
                              case 16:
                              case 17:
                              case 18:
                              case 19:
                                break;

                              case 46:
                                break;

                              case 50:
                                break;

                              case 51:
                                break;

                              case 52:
                                break;

                              case 104:
                              case 105:
                              case 110:
                              case 111:
                              case 112:
                              case 113:
                              case 114:
                              case 115:
                              case 116:
                              case 117:
                              case 118:                            }
                            this.params = [], this.currentParam = 0, this.state = v;
                        } else this.params.length ? this.currentParam += i : i >= "0" && i <= "9" ? this.currentParam = 10 * this.currentParam + i.charCodeAt(0) - 48 : ";" === i && (this.params.push(this.currentParam), 
                        this.currentParam = "");
                        break;

                      case w:
                        if ("?" === i || ">" === i || "!" === i) {
                            this.prefix = i;
                            break;
                        }
                        if (i >= "0" && i <= "9") {
                            this.currentParam = 10 * this.currentParam + i.charCodeAt(0) - 48;
                            break;
                        }
                        if ("$" === i || '"' === i || " " === i || "'" === i) {
                            this.postfix = i;
                            break;
                        }
                        if (this.params.push(this.currentParam), this.currentParam = 0, ";" === i) break;
                        switch (this.state = v, i) {
                          case "A":
                            this.cursorUp(this.params);
                            break;

                          case "B":
                            this.cursorDown(this.params);
                            break;

                          case "C":
                            this.cursorForward(this.params);
                            break;

                          case "D":
                            this.cursorBackward(this.params);
                            break;

                          case "H":
                            this.cursorPos(this.params);
                            break;

                          case "J":
                            this.eraseInDisplay(this.params);
                            break;

                          case "K":
                            this.eraseInLine(this.params);
                            break;

                          case "m":
                            this.prefix || this.charAttributes(this.params);
                            break;

                          case "n":
                            this.prefix || this.deviceStatus(this.params);
                            break;

                          case "@":
                            this.insertChars(this.params);
                            break;

                          case "E":
                            this.cursorNextLine(this.params);
                            break;

                          case "F":
                            this.cursorPrecedingLine(this.params);
                            break;

                          case "G":
                            this.cursorCharAbsolute(this.params);
                            break;

                          case "L":
                            this.insertLines(this.params);
                            break;

                          case "M":
                            this.deleteLines(this.params);
                            break;

                          case "P":
                            this.deleteChars(this.params);
                            break;

                          case "X":
                            this.eraseChars(this.params);
                            break;

                          case "`":
                            this.charPosAbsolute(this.params);
                            break;

                          case "a":
                            this.HPositionRelative(this.params);
                            break;

                          case "c":
                            this.sendDeviceAttributes(this.params);
                            break;

                          case "d":
                            this.linePosAbsolute(this.params);
                            break;

                          case "e":
                            this.VPositionRelative(this.params);
                            break;

                          case "f":
                            this.HVPosition(this.params);
                            break;

                          case "h":
                            this.setMode(this.params);
                            break;

                          case "l":
                            this.resetMode(this.params);
                            break;

                          case "r":
                            this.setScrollRegion(this.params);
                            break;

                          case "s":
                            this.saveCursor(this.params);
                            break;

                          case "u":
                            this.restoreCursor(this.params);
                            break;

                          case "I":
                            this.cursorForwardTab(this.params);
                            break;

                          case "S":
                            this.scrollUp(this.params);
                            break;

                          case "T":
                            this.params.length < 2 && !this.prefix && this.scrollDown(this.params);
                            break;

                          case "Z":
                            this.cursorBackwardTab(this.params);
                            break;

                          case "b":
                            this.repeatPrecedingCharacter(this.params);
                            break;

                          case "g":
                            this.tabClear(this.params);
                            break;

                          case "p":
                            switch (this.prefix) {
                              case "!":
                                this.softReset(this.params);
                            }
                            break;

                          default:
                            this.error("Unknown CSI code: %s.", i);
                        }
                        this.prefix = "", this.postfix = "";
                        break;

                      case C:
                        if ("" === this.lch && "\\" === i || "" === i) {
                            if ("tmux;" === this.prefix && "" === i) {
                                this.currentParam += i;
                                continue;
                            }
                            "" === this.lch && ("string" == typeof this.currentParam ? this.currentParam = this.currentParam.slice(0, -1) : "number" == typeof this.currentParam && (this.currentParam = (this.currentParam - ("".charCodeAt(0) - 48)) / 10)), 
                            this.params.push(this.currentParam);
                            var a = this.params[this.params.length - 1];
                            switch (this.prefix) {
                              case _:
                                this.emit("udk", {
                                    clearAll: 0 === this.params[0],
                                    eraseBelow: 1 === this.params[0],
                                    lockKeys: 0 === this.params[1],
                                    dontLockKeys: 1 === this.params[1],
                                    keyList: (this.params[2] + "").split(";").map(function(t) {
                                        return t = t.split("/"), {
                                            keyCode: t[0],
                                            hexKeyValue: t[1]
                                        };
                                    })
                                });
                                break;

                              case "$q":
                                var c = 0;
                                switch (a) {
                                  case '"q':
                                    a = '0"q', c = 1;
                                    break;

                                  case '"p':
                                    a = '61;0"p', c = 1;
                                    break;

                                  case "r":
                                    a = "" + (this.scrollTop + 1) + ";" + (this.scrollBottom + 1) + "r", c = 1;
                                    break;

                                  case "m":
                                    c = 0;
                                    break;

                                  default:
                                    this.error("Unknown DCS Pt: %s.", a), c = 0;
                                }
                                this.send("P" + c + "$r" + a + "\\");
                                break;

                              case "+p":
                                this.emit("set terminfo", {
                                    name: this.params[0]
                                });
                                break;

                              case "+q":
                                var c = !1;
                                this.send("P" + +c + "+r" + a + "\\");
                                break;

                              case "tmux;":
                                this.emit("passthrough", a);
                                break;

                              default:
                                this.error("Unknown DCS prefix: %s.", a);
                            }
                            this.currentParam = 0, this.prefix = "", this.state = v;
                        } else this.currentParam += i, this.prefix || (/^\d*;\d*\|/.test(this.currentParam) ? (this.prefix = _, 
                        this.params = this.currentParam.split(/[;|]/).map(function(t) {
                            return t.length ? +t : 0;
                        }).slice(0, -1), this.currentParam = "") : (/^[$+][a-zA-Z]/.test(this.currentParam) || /^\w+;\x1b/.test(this.currentParam)) && (this.prefix = this.currentParam, 
                        this.currentParam = ""));
                        break;

                      case M:
                        ("" === this.lch && "\\" === i || "" === i) && (this.state = v);
                    }
                    return this.updateRange(this.y), this.refresh(this.refreshStart, this.refreshEnd), 
                    !0;
                }, o.prototype.writeln = function(t) {
                    return this.write(t + "\r\n");
                }, o.prototype.end = function(t) {
                    var e = !0;
                    return t && (e = this.write(t)), this.destroySoon(), e;
                }, o.prototype.resume = function() {}, o.prototype.pause = function() {}, o.prototype.keyDown = function(t) {
                    var e, s = this;
                    switch (t.keyCode) {
                      case 8:
                        if (t.altKey) {
                            e = "";
                            break;
                        }
                        if (t.shiftKey) {
                            e = "\b";
                            break;
                        }
                        e = "";
                        break;

                      case 9:
                        if (t.shiftKey) {
                            e = "[Z";
                            break;
                        }
                        e = "\t";
                        break;

                      case 13:
                        e = "\r";
                        break;

                      case 27:
                        e = "";
                        break;

                      case 32:
                        e = " ";
                        break;

                      case 37:
                        if (this.applicationCursor) {
                            e = "OD";
                            break;
                        }
                        if (t.ctrlKey) {
                            e = "[5D";
                            break;
                        }
                        e = "[D";
                        break;

                      case 39:
                        if (this.applicationCursor) {
                            e = "OC";
                            break;
                        }
                        if (t.ctrlKey) {
                            e = "[5C";
                            break;
                        }
                        e = "[C";
                        break;

                      case 38:
                        if (this.applicationCursor) {
                            e = "OA";
                            break;
                        }
                        if (t.ctrlKey) return this.scrollDisp(-1), l(t);
                        e = "[A";
                        break;

                      case 40:
                        if (this.applicationCursor) {
                            e = "OB";
                            break;
                        }
                        if (t.ctrlKey) return this.scrollDisp(1), l(t);
                        e = "[B";
                        break;

                      case 46:
                        e = "[3~";
                        break;

                      case 45:
                        e = "[2~";
                        break;

                      case 36:
                        if (this.applicationKeypad) {
                            e = "OH";
                            break;
                        }
                        e = "OH";
                        break;

                      case 35:
                        if (this.applicationKeypad) {
                            e = "OF";
                            break;
                        }
                        e = "OF";
                        break;

                      case 33:
                        if (t.shiftKey) return this.scrollDisp(-(this.rows - 1)), l(t);
                        e = "[5~";
                        break;

                      case 34:
                        if (t.shiftKey) return this.scrollDisp(this.rows - 1), l(t);
                        e = "[6~";
                        break;

                      case 112:
                        e = "OP";
                        break;

                      case 113:
                        e = "OQ";
                        break;

                      case 114:
                        e = "OR";
                        break;

                      case 115:
                        e = "OS";
                        break;

                      case 116:
                        e = "[15~";
                        break;

                      case 117:
                        e = "[17~";
                        break;

                      case 118:
                        e = "[18~";
                        break;

                      case 119:
                        e = "[19~";
                        break;

                      case 120:
                        e = "[20~";
                        break;

                      case 121:
                        e = "[21~";
                        break;

                      case 122:
                        e = "[23~";
                        break;

                      case 123:
                        e = "[24~";
                        break;

                      default:
                        if (t.ctrlKey) if (t.keyCode >= 65 && t.keyCode <= 90) {
                            if (this.screenKeys && !this.prefixMode && !this.selectMode && 65 === t.keyCode) return this.enterPrefix(), 
                            l(t);
                            if (this.prefixMode && 86 === t.keyCode) return void this.leavePrefix();
                            if ((this.prefixMode || this.selectMode) && 67 === t.keyCode) return void (this.visualMode && E(function() {
                                s.leaveVisual();
                            }, 1));
                            e = S.fromCharCode(t.keyCode - 64);
                        } else 32 === t.keyCode ? e = S.fromCharCode(0) : t.keyCode >= 51 && t.keyCode <= 55 ? e = S.fromCharCode(t.keyCode - 51 + 27) : 56 === t.keyCode ? e = S.fromCharCode(127) : 219 === t.keyCode ? e = S.fromCharCode(27) : 221 === t.keyCode && (e = S.fromCharCode(29)); else t.altKey && (t.keyCode >= 65 && t.keyCode <= 90 ? e = "" + S.fromCharCode(t.keyCode + 32) : 192 === t.keyCode ? e = "`" : t.keyCode >= 48 && t.keyCode <= 57 && (e = "" + (t.keyCode - 48)));
                    }
                    return !e || (this.prefixMode ? (this.leavePrefix(), l(t)) : this.selectMode ? (this.keySelect(t, e), 
                    l(t)) : (this.emit("keydown", t), this.emit("key", e, t), this.handler(e), l(t)));
                }, o.prototype.setgLevel = function(t) {
                    this.glevel = t, this.charset = this.charsets[t];
                }, o.prototype.setgCharset = function(t, e) {
                    this.charsets[t] = e, this.glevel === t && (this.charset = e);
                }, o.prototype.keyPress = function(t) {
                    var e;
                    if (l(t), t.charCode) e = t.charCode; else if (null == t.which) e = t.keyCode; else {
                        if (0 === t.which || 0 === t.charCode) return !1;
                        e = t.which;
                    }
                    return !(!e || t.ctrlKey || t.altKey || t.metaKey) && (e = S.fromCharCode(e), this.prefixMode ? (this.leavePrefix(), 
                    this.keyPrefix(t, e), !1) : this.selectMode ? (this.keySelect(t, e), !1) : (this.emit("keypress", e, t), 
                    this.emit("key", e, t), this.handler(e), !1));
                }, o.prototype.send = function(t) {
                    var e = this;
                    this.queue || E(function() {
                        e.handler(e.queue), e.queue = "";
                    }, 1), this.queue += t;
                }, o.prototype.bell = function() {
                    if (this.emit("bell"), this.visualBell) {
                        var t = this;
                        this.element.style.borderColor = "white", E(function() {
                            t.element.style.borderColor = "";
                        }, 10), this.popOnBell && this.focus();
                    }
                }, o.prototype.log = function() {
                    if (this.debug && this.context.console && this.context.console.log) {
                        var t = Array.prototype.slice.call(arguments);
                        this.context.console.log.apply(this.context.console, t);
                    }
                }, o.prototype.error = function() {
                    if (this.debug && this.context.console && this.context.console.error) {
                        var t = Array.prototype.slice.call(arguments);
                        this.context.console.error.apply(this.context.console, t);
                    }
                }, o.prototype.resize = function(t, e) {
                    var s, i, n, r, o;
                    if (t < 1 && (t = 1), e < 1 && (e = 1), r = this.cols, r < t) for (o = [ this.defAttr, " " ], 
                    n = this.lines.length; n--; ) for (;this.lines[n].length < t; ) this.lines[n].push(o); else if (r > t) for (n = this.lines.length; n--; ) for (;this.lines[n].length > t; ) this.lines[n].pop();
                    if (this.setupStops(r), this.cols = t, this.columns = t, r = this.rows, r < e) for (i = this.element; r++ < e; ) this.lines.length < e + this.ybase && this.lines.push(this.blankLine()), 
                    this.children.length < e && (s = this.document.createElement("div"), i.appendChild(s), 
                    this.children.push(s)); else if (r > e) for (;r-- > e; ) if (this.lines.length > e + this.ybase && this.lines.pop(), 
                    this.children.length > e) {
                        if (i = this.children.pop(), !i) continue;
                        i.parentNode.removeChild(i);
                    }
                    this.rows = e, this.y >= e && (this.y = e - 1), this.x >= t && (this.x = t - 1), 
                    this.scrollTop = 0, this.scrollBottom = e - 1, this.refresh(0, this.rows - 1), this.normal = null, 
                    this.emit("resize");
                }, o.prototype.updateRange = function(t) {
                    t < this.refreshStart && (this.refreshStart = t), t > this.refreshEnd && (this.refreshEnd = t);
                }, o.prototype.maxRange = function() {
                    this.refreshStart = 0, this.refreshEnd = this.rows - 1;
                }, o.prototype.setupStops = function(t) {
                    for (null != t ? this.tabs[t] || (t = this.prevStop(t)) : (this.tabs = {}, t = 0); t < this.cols; t += 8) this.tabs[t] = !0;
                }, o.prototype.prevStop = function(t) {
                    for (null == t && (t = this.x); !this.tabs[--t] && t > 0; ) ;
                    return t >= this.cols ? this.cols - 1 : t < 0 ? 0 : t;
                }, o.prototype.nextStop = function(t) {
                    for (null == t && (t = this.x); !this.tabs[++t] && t < this.cols; ) ;
                    return t >= this.cols ? this.cols - 1 : t < 0 ? 0 : t;
                }, o.prototype.eraseAttr = function() {
                    return this.defAttr & -512 | 511 & this.curAttr;
                }, o.prototype.eraseRight = function(t, e) {
                    for (var s = this.lines[this.ybase + e], i = [ this.eraseAttr(), " " ]; t < this.cols; t++) s[t] = i;
                    this.updateRange(e);
                }, o.prototype.eraseLeft = function(t, e) {
                    var s = this.lines[this.ybase + e], i = [ this.eraseAttr(), " " ];
                    for (t++; t--; ) s[t] = i;
                    this.updateRange(e);
                }, o.prototype.eraseLine = function(t) {
                    this.eraseRight(0, t);
                }, o.prototype.blankLine = function(t) {
                    for (var e = t ? this.eraseAttr() : this.defAttr, s = [ e, " " ], i = [], n = 0; n < this.cols; n++) i[n] = s;
                    return i;
                }, o.prototype.ch = function(t) {
                    return t ? [ this.eraseAttr(), " " ] : [ this.defAttr, " " ];
                }, o.prototype.is = function(t) {
                    var e = this.termName;
                    return 0 === (e + "").indexOf(t);
                }, o.prototype.handler = function(t) {
                    this.emit("data", t);
                }, o.prototype.handleTitle = function(t) {
                    this.emit("title", t);
                }, o.prototype.index = function() {
                    this.y++, this.y > this.scrollBottom && (this.y--, this.scroll()), this.state = v;
                }, o.prototype.reverseIndex = function() {
                    var t;
                    this.y--, this.y < this.scrollTop && (this.y++, this.lines.splice(this.y + this.ybase, 0, this.blankLine(!0)), 
                    t = this.rows - 1 - this.scrollBottom, this.lines.splice(this.rows - 1 + this.ybase - t + 1, 1), 
                    this.updateRange(this.scrollTop), this.updateRange(this.scrollBottom)), this.state = v;
                }, o.prototype.reset = function() {
                    this.options.rows = this.rows, this.options.cols = this.cols, o.call(this, this.options), 
                    this.refresh(0, this.rows - 1);
                }, o.prototype.tabSet = function() {
                    this.tabs[this.x] = !0, this.state = v;
                }, o.prototype.cursorUp = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.y -= e, this.y < 0 && (this.y = 0);
                }, o.prototype.cursorDown = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.y += e, this.y >= this.rows && (this.y = this.rows - 1);
                }, o.prototype.cursorForward = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.x += e, this.x >= this.cols && (this.x = this.cols - 1);
                }, o.prototype.cursorBackward = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.x -= e, this.x < 0 && (this.x = 0);
                }, o.prototype.cursorPos = function(t) {
                    var e, s;
                    e = t[0] - 1, s = t.length >= 2 ? t[1] - 1 : 0, e < 0 ? e = 0 : e >= this.rows && (e = this.rows - 1), 
                    s < 0 ? s = 0 : s >= this.cols && (s = this.cols - 1), this.x = s, this.y = e;
                }, o.prototype.eraseInDisplay = function(t) {
                    var e;
                    switch (t[0]) {
                      case 0:
                        for (this.eraseRight(this.x, this.y), e = this.y + 1; e < this.rows; e++) this.eraseLine(e);
                        break;

                      case 1:
                        for (this.eraseLeft(this.x, this.y), e = this.y; e--; ) this.eraseLine(e);
                        break;

                      case 2:
                        for (e = this.rows; e--; ) this.eraseLine(e);
                        break;

                      case 3:                    }
                }, o.prototype.eraseInLine = function(t) {
                    switch (t[0]) {
                      case 0:
                        this.eraseRight(this.x, this.y);
                        break;

                      case 1:
                        this.eraseLeft(this.x, this.y);
                        break;

                      case 2:
                        this.eraseLine(this.y);
                    }
                }, o.prototype.charAttributes = function(t) {
                    if (1 === t.length && 0 === t[0]) return void (this.curAttr = this.defAttr);
                    for (var e, s = t.length, i = 0, n = this.curAttr >> 18, r = this.curAttr >> 9 & 511, o = 511 & this.curAttr; i < s; i++) e = t[i], 
                    e >= 30 && e <= 37 ? r = e - 30 : e >= 40 && e <= 47 ? o = e - 40 : e >= 90 && e <= 97 ? (e += 8, 
                    r = e - 90) : e >= 100 && e <= 107 ? (e += 8, o = e - 100) : 0 === e ? (n = this.defAttr >> 18, 
                    r = this.defAttr >> 9 & 511, o = 511 & this.defAttr) : 1 === e ? n |= 1 : 4 === e ? n |= 2 : 5 === e ? n |= 4 : 7 === e ? n |= 8 : 8 === e ? n |= 16 : 22 === e ? n &= -2 : 24 === e ? n &= -3 : 25 === e ? n &= -5 : 27 === e ? n &= -9 : 28 === e ? n &= -17 : 39 === e ? r = this.defAttr >> 9 & 511 : 49 === e ? o = 511 & this.defAttr : 38 === e ? 2 === t[i + 1] ? (i += 2, 
                    r = p(255 & t[i], 255 & t[i + 1], 255 & t[i + 2]), r === -1 && (r = 511), i += 2) : 5 === t[i + 1] && (i += 2, 
                    e = 255 & t[i], r = e) : 48 === e ? 2 === t[i + 1] ? (i += 2, o = p(255 & t[i], 255 & t[i + 1], 255 & t[i + 2]), 
                    o === -1 && (o = 511), i += 2) : 5 === t[i + 1] && (i += 2, e = 255 & t[i], o = e) : 100 === e ? (r = this.defAttr >> 9 & 511, 
                    o = 511 & this.defAttr) : this.error("Unknown SGR attribute: %d.", e);
                    this.curAttr = n << 18 | r << 9 | o;
                }, o.prototype.deviceStatus = function(t) {
                    if (this.prefix) {
                        if ("?" === this.prefix) switch (t[0]) {
                          case 6:
                            this.send("[?" + (this.y + 1) + ";" + (this.x + 1) + "R");
                            break;

                          case 15:
                            break;

                          case 25:
                            break;

                          case 26:
                            break;

                          case 53:                        }
                    } else switch (t[0]) {
                      case 5:
                        this.send("[0n");
                        break;

                      case 6:
                        this.send("[" + (this.y + 1) + ";" + (this.x + 1) + "R");
                    }
                }, o.prototype.insertChars = function(t) {
                    var e, s, i, n;
                    for (e = t[0], e < 1 && (e = 1), s = this.y + this.ybase, i = this.x, n = [ this.eraseAttr(), " " ]; e-- && i < this.cols; ) this.lines[s].splice(i++, 0, n), 
                    this.lines[s].pop();
                }, o.prototype.cursorNextLine = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.y += e, this.y >= this.rows && (this.y = this.rows - 1), 
                    this.x = 0;
                }, o.prototype.cursorPrecedingLine = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.y -= e, this.y < 0 && (this.y = 0), this.x = 0;
                }, o.prototype.cursorCharAbsolute = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.x = e - 1;
                }, o.prototype.insertLines = function(t) {
                    var e, s, i;
                    for (e = t[0], e < 1 && (e = 1), s = this.y + this.ybase, i = this.rows - 1 - this.scrollBottom, 
                    i = this.rows - 1 + this.ybase - i + 1; e--; ) this.lines.splice(s, 0, this.blankLine(!0)), 
                    this.lines.splice(i, 1);
                    this.updateRange(this.y), this.updateRange(this.scrollBottom);
                }, o.prototype.deleteLines = function(t) {
                    var e, s, i;
                    for (e = t[0], e < 1 && (e = 1), s = this.y + this.ybase, i = this.rows - 1 - this.scrollBottom, 
                    i = this.rows - 1 + this.ybase - i; e--; ) this.lines.splice(i + 1, 0, this.blankLine(!0)), 
                    this.lines.splice(s, 1);
                    this.updateRange(this.y), this.updateRange(this.scrollBottom);
                }, o.prototype.deleteChars = function(t) {
                    var e, s, i;
                    for (e = t[0], e < 1 && (e = 1), s = this.y + this.ybase, i = [ this.eraseAttr(), " " ]; e--; ) this.lines[s].splice(this.x, 1), 
                    this.lines[s].push(i);
                }, o.prototype.eraseChars = function(t) {
                    var e, s, i, n;
                    for (e = t[0], e < 1 && (e = 1), s = this.y + this.ybase, i = this.x, n = [ this.eraseAttr(), " " ]; e-- && i < this.cols; ) this.lines[s][i++] = n;
                }, o.prototype.charPosAbsolute = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.x = e - 1, this.x >= this.cols && (this.x = this.cols - 1);
                }, o.prototype.HPositionRelative = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.x += e, this.x >= this.cols && (this.x = this.cols - 1);
                }, o.prototype.sendDeviceAttributes = function(t) {
                    t[0] > 0 || (this.prefix ? ">" === this.prefix && (this.is("xterm") ? this.send("[>0;276;0c") : this.is("rxvt-unicode") ? this.send("[>85;95;0c") : this.is("linux") ? this.send(t[0] + "c") : this.is("screen") && this.send("[>83;40003;0c")) : this.is("xterm") || this.is("rxvt-unicode") || this.is("screen") ? this.send("[?1;2c") : this.is("linux") && this.send("[?6c"));
                }, o.prototype.linePosAbsolute = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.y = e - 1, this.y >= this.rows && (this.y = this.rows - 1);
                }, o.prototype.VPositionRelative = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.y += e, this.y >= this.rows && (this.y = this.rows - 1);
                }, o.prototype.HVPosition = function(t) {
                    t[0] < 1 && (t[0] = 1), t[1] < 1 && (t[1] = 1), this.y = t[0] - 1, this.y >= this.rows && (this.y = this.rows - 1), 
                    this.x = t[1] - 1, this.x >= this.cols && (this.x = this.cols - 1);
                }, o.prototype.setMode = function(t) {
                    if ("object" != typeof t) if (this.prefix) {
                        if ("?" === this.prefix) switch (t) {
                          case 1:
                            this.applicationCursor = !0;
                            break;

                          case 2:
                            this.setgCharset(0, o.charsets.US), this.setgCharset(1, o.charsets.US), this.setgCharset(2, o.charsets.US), 
                            this.setgCharset(3, o.charsets.US);
                            break;

                          case 3:
                            this.savedCols = this.cols, this.resize(132, this.rows);
                            break;

                          case 6:
                            this.originMode = !0;
                            break;

                          case 7:
                            this.wraparoundMode = !0;
                            break;

                          case 66:
                            this.log("Serial port requested application keypad."), this.applicationKeypad = !0;
                            break;

                          case 9:
                          case 1e3:
                          case 1002:
                          case 1003:
                            this.x10Mouse = 9 === t, this.vt200Mouse = 1e3 === t, this.normalMouse = t > 1e3, 
                            this.mouseEvents = !0, this.element.style.cursor = "default", this.log("Binding to mouse events.");
                            break;

                          case 1004:
                            this.sendFocus = !0;
                            break;

                          case 1005:
                            this.utfMouse = !0;
                            break;

                          case 1006:
                            this.sgrMouse = !0;
                            break;

                          case 1015:
                            this.urxvtMouse = !0;
                            break;

                          case 25:
                            this.cursorHidden = !1;
                            break;

                          case 1049:
                          case 47:
                          case 1047:
                            if (!this.normal) {
                                var e = {
                                    lines: this.lines,
                                    ybase: this.ybase,
                                    ydisp: this.ydisp,
                                    x: this.x,
                                    y: this.y,
                                    scrollTop: this.scrollTop,
                                    scrollBottom: this.scrollBottom,
                                    tabs: this.tabs
                                };
                                this.reset(), this.normal = e;
                            }
                        }
                    } else switch (t) {
                      case 4:
                        this.insertMode = !0;
                        break;

                      case 20:                    } else for (var s = t.length, i = 0; i < s; i++) this.setMode(t[i]);
                }, o.prototype.resetMode = function(t) {
                    if ("object" != typeof t) if (this.prefix) {
                        if ("?" === this.prefix) switch (t) {
                          case 1:
                            this.applicationCursor = !1;
                            break;

                          case 3:
                            132 === this.cols && this.savedCols && this.resize(this.savedCols, this.rows), delete this.savedCols;
                            break;

                          case 6:
                            this.originMode = !1;
                            break;

                          case 7:
                            this.wraparoundMode = !1;
                            break;

                          case 66:
                            this.log("Switching back to normal keypad."), this.applicationKeypad = !1;
                            break;

                          case 9:
                          case 1e3:
                          case 1002:
                          case 1003:
                            this.x10Mouse = !1, this.vt200Mouse = !1, this.normalMouse = !1, this.mouseEvents = !1, 
                            this.element.style.cursor = "";
                            break;

                          case 1004:
                            this.sendFocus = !1;
                            break;

                          case 1005:
                            this.utfMouse = !1;
                            break;

                          case 1006:
                            this.sgrMouse = !1;
                            break;

                          case 1015:
                            this.urxvtMouse = !1;
                            break;

                          case 25:
                            this.cursorHidden = !0;
                            break;

                          case 1049:
                          case 47:
                          case 1047:
                            this.normal && (this.lines = this.normal.lines, this.ybase = this.normal.ybase, 
                            this.ydisp = this.normal.ydisp, this.x = this.normal.x, this.y = this.normal.y, 
                            this.scrollTop = this.normal.scrollTop, this.scrollBottom = this.normal.scrollBottom, 
                            this.tabs = this.normal.tabs, this.normal = null, this.refresh(0, this.rows - 1));
                        }
                    } else switch (t) {
                      case 4:
                        this.insertMode = !1;
                        break;

                      case 20:                    } else for (var e = t.length, s = 0; s < e; s++) this.resetMode(t[s]);
                }, o.prototype.setScrollRegion = function(t) {
                    this.prefix || (this.scrollTop = (t[0] || 1) - 1, this.scrollBottom = (t[1] || this.rows) - 1, 
                    this.x = 0, this.y = 0);
                }, o.prototype.saveCursor = function(t) {
                    this.savedX = this.x, this.savedY = this.y;
                }, o.prototype.restoreCursor = function(t) {
                    this.x = this.savedX || 0, this.y = this.savedY || 0;
                }, o.prototype.cursorForwardTab = function(t) {
                    for (var e = t[0] || 1; e--; ) this.x = this.nextStop();
                }, o.prototype.scrollUp = function(t) {
                    for (var e = t[0] || 1; e--; ) this.lines.splice(this.ybase + this.scrollTop, 1), 
                    this.lines.splice(this.ybase + this.scrollBottom, 0, this.blankLine());
                    this.updateRange(this.scrollTop), this.updateRange(this.scrollBottom);
                }, o.prototype.scrollDown = function(t) {
                    for (var e = t[0] || 1; e--; ) this.lines.splice(this.ybase + this.scrollBottom, 1), 
                    this.lines.splice(this.ybase + this.scrollTop, 0, this.blankLine());
                    this.updateRange(this.scrollTop), this.updateRange(this.scrollBottom);
                }, o.prototype.initMouseTracking = function(t) {}, o.prototype.resetTitleModes = function(t) {}, 
                o.prototype.cursorBackwardTab = function(t) {
                    for (var e = t[0] || 1; e--; ) this.x = this.prevStop();
                }, o.prototype.repeatPrecedingCharacter = function(t) {
                    for (var e = t[0] || 1, s = this.lines[this.ybase + this.y], i = s[this.x - 1] || [ this.defAttr, " " ]; e--; ) s[this.x++] = i;
                }, o.prototype.tabClear = function(t) {
                    var e = t[0];
                    e <= 0 ? delete this.tabs[this.x] : 3 === e && (this.tabs = {});
                }, o.prototype.mediaCopy = function(t) {}, o.prototype.setResources = function(t) {}, 
                o.prototype.disableModifiers = function(t) {}, o.prototype.setPointerMode = function(t) {}, 
                o.prototype.softReset = function(t) {
                    this.cursorHidden = !1, this.insertMode = !1, this.originMode = !1, this.wraparoundMode = !1, 
                    this.applicationKeypad = !1, this.applicationCursor = !1, this.scrollTop = 0, this.scrollBottom = this.rows - 1, 
                    this.curAttr = this.defAttr, this.x = this.y = 0, this.charset = null, this.glevel = 0, 
                    this.charsets = [ null ];
                }, o.prototype.requestAnsiMode = function(t) {}, o.prototype.requestPrivateMode = function(t) {}, 
                o.prototype.setConformanceLevel = function(t) {}, o.prototype.loadLEDs = function(t) {}, 
                o.prototype.setCursorStyle = function(t) {}, o.prototype.setCharProtectionAttr = function(t) {}, 
                o.prototype.restorePrivateValues = function(t) {}, o.prototype.setAttrInRectangle = function(t) {
                    for (var e, s, i = t[0], n = t[1], r = t[2], o = t[3], a = t[4]; i < r + 1; i++) for (e = this.lines[this.ybase + i], 
                    s = n; s < o; s++) e[s] = [ a, e[s][1] ];
                    this.updateRange(t[0]), this.updateRange(t[2]);
                }, o.prototype.savePrivateValues = function(t) {}, o.prototype.manipulateWindow = function(t) {}, 
                o.prototype.reverseAttrInRectangle = function(t) {}, o.prototype.setTitleModeFeature = function(t) {}, 
                o.prototype.setWarningBellVolume = function(t) {}, o.prototype.setMarginBellVolume = function(t) {}, 
                o.prototype.copyRectangle = function(t) {}, o.prototype.enableFilterRectangle = function(t) {}, 
                o.prototype.requestParameters = function(t) {}, o.prototype.selectChangeExtent = function(t) {}, 
                o.prototype.fillRectangle = function(t) {
                    for (var e, s, i = t[0], n = t[1], r = t[2], o = t[3], a = t[4]; n < o + 1; n++) for (e = this.lines[this.ybase + n], 
                    s = r; s < a; s++) e[s] = [ e[s][0], S.fromCharCode(i) ];
                    this.updateRange(t[1]), this.updateRange(t[3]);
                }, o.prototype.enableLocatorReporting = function(t) {
                    t[0] > 0;
                }, o.prototype.eraseRectangle = function(t) {
                    var e, s, i, n = t[0], r = t[1], o = t[2], a = t[3];
                    for (i = [ this.eraseAttr(), " " ]; n < o + 1; n++) for (e = this.lines[this.ybase + n], 
                    s = r; s < a; s++) e[s] = i;
                    this.updateRange(t[0]), this.updateRange(t[2]);
                }, o.prototype.setLocatorEvents = function(t) {}, o.prototype.selectiveEraseRectangle = function(t) {}, 
                o.prototype.requestLocatorPosition = function(t) {}, o.prototype.insertColumns = function() {
                    for (var t, e = params[0], s = this.ybase + this.rows, i = [ this.eraseAttr(), " " ]; e--; ) for (t = this.ybase; t < s; t++) this.lines[t].splice(this.x + 1, 0, i), 
                    this.lines[t].pop();
                    this.maxRange();
                }, o.prototype.deleteColumns = function() {
                    for (var t, e = params[0], s = this.ybase + this.rows, i = [ this.eraseAttr(), " " ]; e--; ) for (t = this.ybase; t < s; t++) this.lines[t].splice(this.x, 1), 
                    this.lines[t].push(i);
                    this.maxRange();
                }, o.prototype.enterPrefix = function() {
                    this.prefixMode = !0;
                }, o.prototype.leavePrefix = function() {
                    this.prefixMode = !1;
                }, o.prototype.enterSelect = function() {
                    this._real = {
                        x: this.x,
                        y: this.y,
                        ydisp: this.ydisp,
                        ybase: this.ybase,
                        cursorHidden: this.cursorHidden,
                        lines: this.copyBuffer(this.lines),
                        write: this.write
                    }, this.write = function() {}, this.selectMode = !0, this.visualMode = !1, this.cursorHidden = !1, 
                    this.refresh(this.y, this.y);
                }, o.prototype.leaveSelect = function() {
                    this.x = this._real.x, this.y = this._real.y, this.ydisp = this._real.ydisp, this.ybase = this._real.ybase, 
                    this.cursorHidden = this._real.cursorHidden, this.lines = this._real.lines, this.write = this._real.write, 
                    delete this._real, this.selectMode = !1, this.visualMode = !1, this.refresh(0, this.rows - 1);
                }, o.prototype.enterVisual = function() {
                    this._real.preVisual = this.copyBuffer(this.lines), this.selectText(this.x, this.x, this.ydisp + this.y, this.ydisp + this.y), 
                    this.visualMode = !0;
                }, o.prototype.leaveVisual = function() {
                    this.lines = this._real.preVisual, delete this._real.preVisual, delete this._selected, 
                    this.visualMode = !1, this.refresh(0, this.rows - 1);
                }, o.prototype.enterSearch = function(t) {
                    this.entry = "", this.searchMode = !0, this.searchDown = t, this._real.preSearch = this.copyBuffer(this.lines), 
                    this._real.preSearchX = this.x, this._real.preSearchY = this.y;
                    for (var e = this.ydisp + this.rows - 1, s = 0; s < this.entryPrefix.length; s++) this.lines[e][s] = [ this.defAttr & -512 | 4, this.entryPrefix[s] ];
                    this.y = this.rows - 1, this.x = this.entryPrefix.length, this.refresh(this.rows - 1, this.rows - 1);
                }, o.prototype.leaveSearch = function() {
                    this.searchMode = !1, this._real.preSearch && (this.lines = this._real.preSearch, 
                    this.x = this._real.preSearchX, this.y = this._real.preSearchY, delete this._real.preSearch, 
                    delete this._real.preSearchX, delete this._real.preSearchY), this.refresh(this.rows - 1, this.rows - 1);
                }, o.prototype.copyBuffer = function(t) {
                    for (var t = t || this.lines, e = [], s = 0; s < t.length; s++) {
                        e[s] = [];
                        for (var i = 0; i < t[s].length; i++) e[s][i] = [ t[s][i][0], t[s][i][1] ];
                    }
                    return e;
                }, o.prototype.getCopyTextarea = function(t) {
                    var e = this._copyTextarea, s = this.document;
                    return e || (e = s.createElement("textarea"), e.style.position = "absolute", e.style.left = "-32000px", 
                    e.style.top = "-32000px", e.style.width = "0px", e.style.height = "0px", e.style.opacity = "0", 
                    e.style.backgroundColor = "transparent", e.style.borderStyle = "none", e.style.outlineStyle = "none", 
                    s.getElementsByTagName("body")[0].appendChild(e), this._copyTextarea = e), e;
                }, o.prototype.copyText = function(t) {
                    var e = this, s = this.getCopyTextarea();
                    this.emit("copy", t), s.focus(), s.textContent = t, s.value = t, s.setSelectionRange(0, t.length), 
                    E(function() {
                        e.element.focus(), e.focus();
                    }, 1);
                }, o.prototype.selectText = function(t, e, s, i) {
                    var n, r, o, a, c, l, u, h, f;
                    if (this._selected) {
                        for (n = this._selected.x1, r = this._selected.x2, o = this._selected.y1, a = this._selected.y2, 
                        a < o && (c = r, r = n, n = c, c = a, a = o, o = c), r < n && o === a && (c = r, 
                        r = n, n = c), u = o; u <= a; u++) for (l = 0, h = this.cols - 1, u === o && (l = n), 
                        u === a && (h = r); l <= h; l++) null != this.lines[u][l].old && (f = this.lines[u][l].old, 
                        delete this.lines[u][l].old, this.lines[u][l] = [ f, this.lines[u][l][1] ]);
                        s = this._selected.y1, t = this._selected.x1;
                    }
                    for (s = Math.max(s, 0), s = Math.min(s, this.ydisp + this.rows - 1), i = Math.max(i, 0), 
                    i = Math.min(i, this.ydisp + this.rows - 1), this._selected = {
                        x1: t,
                        x2: e,
                        y1: s,
                        y2: i
                    }, i < s && (c = e, e = t, t = c, c = i, i = s, s = c), e < t && s === i && (c = e, 
                    e = t, t = c), u = s; u <= i; u++) for (l = 0, h = this.cols - 1, u === s && (l = t), 
                    u === i && (h = e); l <= h; l++) f = this.lines[u][l][0], this.lines[u][l] = [ f & -512 | 261636, this.lines[u][l][1] ], 
                    this.lines[u][l].old = f;
                    s -= this.ydisp, i -= this.ydisp, s = Math.max(s, 0), s = Math.min(s, this.rows - 1), 
                    i = Math.max(i, 0), i = Math.min(i, this.rows - 1), this.refresh(0, this.rows - 1);
                }, o.prototype.grabText = function(t, e, s, i) {
                    var n, r, o, a, c, l = "", u = "";
                    for (i < s && (c = e, e = t, t = c, c = i, i = s, s = c), e < t && s === i && (c = e, 
                    e = t, t = c), o = s; o <= i; o++) {
                        for (r = 0, a = this.cols - 1, o === s && (r = t), o === i && (a = e); r <= a; r++) n = this.lines[o][r][1], 
                        " " !== n ? (u && (l += u, u = ""), l += n, d(n) && r++) : u += n;
                        u = "", l += "\n";
                    }
                    for (r = e, o = i; r < this.cols; r++) if (" " !== this.lines[o][r][1]) {
                        l = l.slice(0, -1);
                        break;
                    }
                    return l;
                }, o.prototype.keyPrefix = function(t, e) {
                    "k" === e || "&" === e ? this.destroy() : "p" === e || "]" === e ? this.emit("request paste") : "c" === e ? this.emit("request create") : e >= "0" && e <= "9" ? (e = +e - 1, 
                    ~e || (e = 9), this.emit("request term", e)) : "n" === e ? this.emit("request term next") : "P" === e ? this.emit("request term previous") : ":" === e ? this.emit("request command mode") : "[" === e && this.enterSelect();
                }, o.prototype.keySelect = function(t, e) {
                    if (this.searchMode || "n" === e || "N" === e) return this.keySearch(t, e);
                    if ("" === e) {
                        var s = this.ydisp + this.y;
                        return this.ydisp === this.ybase ? (this.y = Math.min(this.y + (this.rows - 1) / 2 | 0, this.rows - 1), 
                        this.refresh(0, this.rows - 1)) : this.scrollDisp((this.rows - 1) / 2 | 0), void (this.visualMode && this.selectText(this.x, this.x, s, this.ydisp + this.y));
                    }
                    if ("" === e) {
                        var s = this.ydisp + this.y;
                        return 0 === this.ydisp ? (this.y = Math.max(this.y - (this.rows - 1) / 2 | 0, 0), 
                        this.refresh(0, this.rows - 1)) : this.scrollDisp(-(this.rows - 1) / 2 | 0), void (this.visualMode && this.selectText(this.x, this.x, s, this.ydisp + this.y));
                    }
                    if ("" === e) {
                        var s = this.ydisp + this.y;
                        return this.scrollDisp(this.rows - 1), void (this.visualMode && this.selectText(this.x, this.x, s, this.ydisp + this.y));
                    }
                    if ("" === e) {
                        var s = this.ydisp + this.y;
                        return this.scrollDisp(-(this.rows - 1)), void (this.visualMode && this.selectText(this.x, this.x, s, this.ydisp + this.y));
                    }
                    if ("k" === e || "[A" === e) {
                        var s = this.ydisp + this.y;
                        return this.y--, this.y < 0 && (this.y = 0, this.scrollDisp(-1)), void (this.visualMode ? this.selectText(this.x, this.x, s, this.ydisp + this.y) : this.refresh(this.y, this.y + 1));
                    }
                    if ("j" === e || "[B" === e) {
                        var s = this.ydisp + this.y;
                        return this.y++, this.y >= this.rows && (this.y = this.rows - 1, this.scrollDisp(1)), 
                        void (this.visualMode ? this.selectText(this.x, this.x, s, this.ydisp + this.y) : this.refresh(this.y - 1, this.y));
                    }
                    if ("h" === e || "[D" === e) {
                        var i = this.x;
                        return this.x--, this.x < 0 && (this.x = 0), void (this.visualMode ? this.selectText(i, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                    }
                    if ("l" === e || "[C" === e) {
                        var i = this.x;
                        return this.x++, this.x >= this.cols && (this.x = this.cols - 1), void (this.visualMode ? this.selectText(i, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                    }
                    if ("v" === e || " " === e) return void (this.visualMode ? this.leaveVisual() : this.enterVisual());
                    {
                        if ("y" !== e) {
                            if ("q" === e || "" === e) return void (this.visualMode ? this.leaveVisual() : this.leaveSelect());
                            if ("w" === e || "W" === e) {
                                for (var n = this.x, r = this.y, o = this.ydisp, i = this.x, s = this.y, a = this.ydisp, c = !1; ;) {
                                    for (var l = this.lines[a + s]; i < this.cols; ) {
                                        if (l[i][1] <= " ") c = !0; else if (c) break;
                                        i++;
                                    }
                                    if (i >= this.cols && (i = this.cols - 1), !(i === this.cols - 1 && l[i][1] <= " ")) break;
                                    if (i = 0, ++s >= this.rows && (s--, ++a > this.ybase)) {
                                        a = this.ybase, i = this.x;
                                        break;
                                    }
                                }
                                return this.x = i, this.y = s, this.scrollDisp(-this.ydisp + a), void (this.visualMode && this.selectText(n, this.x, r + o, this.ydisp + this.y));
                            }
                            if ("b" === e || "B" === e) {
                                for (var n = this.x, r = this.y, o = this.ydisp, i = this.x, s = this.y, a = this.ydisp; ;) {
                                    for (var l = this.lines[a + s], c = i > 0 && l[i][1] > " " && l[i - 1][1] > " "; i >= 0; ) {
                                        if (l[i][1] <= " ") {
                                            if (c && i + 1 < this.cols && l[i + 1][1] > " ") {
                                                i++;
                                                break;
                                            }
                                            c = !0;
                                        }
                                        i--;
                                    }
                                    if (i < 0 && (i = 0), 0 !== i || !(l[i][1] <= " ") && c) break;
                                    if (i = this.cols - 1, --s < 0 && (s++, --a < 0)) {
                                        a++, i = 0;
                                        break;
                                    }
                                }
                                return this.x = i, this.y = s, this.scrollDisp(-this.ydisp + a), void (this.visualMode && this.selectText(n, this.x, r + o, this.ydisp + this.y));
                            }
                            if ("e" === e || "E" === e) {
                                var i = this.x + 1, s = this.y, a = this.ydisp;
                                for (i >= this.cols && i--; ;) {
                                    for (var l = this.lines[a + s]; i < this.cols && l[i][1] <= " "; ) i++;
                                    for (;i < this.cols; ) {
                                        if (l[i][1] <= " " && i - 1 >= 0 && l[i - 1][1] > " ") {
                                            i--;
                                            break;
                                        }
                                        i++;
                                    }
                                    if (i >= this.cols && (i = this.cols - 1), !(i === this.cols - 1 && l[i][1] <= " ")) break;
                                    if (i = 0, ++s >= this.rows && (s--, ++a > this.ybase)) {
                                        a = this.ybase;
                                        break;
                                    }
                                }
                                return this.x = i, this.y = s, this.scrollDisp(-this.ydisp + a), void (this.visualMode && this.selectText(n, this.x, r + o, this.ydisp + this.y));
                            }
                            if ("^" === e || "0" === e) {
                                var n = this.x;
                                if ("0" === e) this.x = 0; else if ("^" === e) {
                                    for (var l = this.lines[this.ydisp + this.y], i = 0; i < this.cols && !(l[i][1] > " "); ) i++;
                                    i >= this.cols && (i = this.cols - 1), this.x = i;
                                }
                                return void (this.visualMode ? this.selectText(n, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                            }
                            if ("$" === e) {
                                for (var n = this.x, l = this.lines[this.ydisp + this.y], i = this.cols - 1; i >= 0; ) {
                                    if (l[i][1] > " ") {
                                        this.visualMode && i < this.cols - 1 && i++;
                                        break;
                                    }
                                    i--;
                                }
                                return i < 0 && (i = 0), this.x = i, void (this.visualMode ? this.selectText(n, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                            }
                            if ("g" === e || "G" === e) {
                                var n = this.x, r = this.y, o = this.ydisp;
                                return "g" === e ? (this.x = 0, this.y = 0, this.scrollDisp(-this.ydisp)) : "G" === e && (this.x = 0, 
                                this.y = this.rows - 1, this.scrollDisp(this.ybase)), void (this.visualMode && this.selectText(n, this.x, r + o, this.ydisp + this.y));
                            }
                            if ("H" === e || "M" === e || "L" === e) {
                                var n = this.x, r = this.y;
                                return "H" === e ? (this.x = 0, this.y = 0) : "M" === e ? (this.x = 0, this.y = this.rows / 2 | 0) : "L" === e && (this.x = 0, 
                                this.y = this.rows - 1), void (this.visualMode ? this.selectText(n, this.x, this.ydisp + r, this.ydisp + this.y) : (this.refresh(r, r), 
                                this.refresh(this.y, this.y)));
                            }
                            if ("{" === e || "}" === e) {
                                var l, u, n = this.x, r = this.y, o = this.ydisp, h = !1, f = !1, d = -1, s = this.y + ("{" === e ? -1 : 1), a = this.ydisp;
                                for ("{" === e ? s < 0 && (s++, a > 0 && a--) : "}" === e && s >= this.rows && (s--, 
                                a < this.ybase && a++); ;) {
                                    for (l = this.lines[a + s], u = 0; u < this.cols; u++) {
                                        if (l[u][1] > " ") {
                                            d === -1 && (d = 0), h = !0;
                                            break;
                                        }
                                        if (u === this.cols - 1) {
                                            d === -1 ? d = 1 : 0 === d ? f = !0 : 1 === d && h && (f = !0);
                                            break;
                                        }
                                    }
                                    if (f) break;
                                    if ("{" === e) {
                                        if (s--, s < 0) {
                                            if (s++, !(a > 0)) break;
                                            a--;
                                        }
                                    } else if ("}" === e && (s++, s >= this.rows)) {
                                        if (s--, !(a < this.ybase)) break;
                                        a++;
                                    }
                                }
                                return f || ("{" === e ? (s = 0, a = 0) : "}" === e && (s = this.rows - 1, a = this.ybase)), 
                                this.x = 0, this.y = s, this.scrollDisp(-this.ydisp + a), void (this.visualMode && this.selectText(n, this.x, r + o, this.ydisp + this.y));
                            }
                            return ("/" === e || "?" === e) && void (this.visualMode || this.enterSearch("/" === e));
                        }
                        if (this.visualMode) {
                            var p = this.grabText(this._selected.x1, this._selected.x2, this._selected.y1, this._selected.y2);
                            this.copyText(p), this.leaveVisual();
                        }
                    }
                }, o.prototype.keySearch = function(t, e) {
                    if ("" === e) return void this.leaveSearch();
                    if ("\r" === e || !this.searchMode && ("n" === e || "N" === e)) {
                        this.leaveSearch();
                        var s = this.entry;
                        if (!s) return void this.refresh(0, this.rows - 1);
                        for (var i, n, r, o = this.x, a = this.y, c = this.ydisp, l = !1, u = !1, h = this.x + 1, f = this.ydisp + this.y, d = "N" === e ? this.searchDown : !this.searchDown; ;) {
                            for (i = this.lines[f]; h < this.cols; ) {
                                for (r = 0; r < s.length && !(h + r >= this.cols) && i[h + r][1] === s[r]; r++) if (i[h + r][1] === s[r] && r === s.length - 1) {
                                    l = !0;
                                    break;
                                }
                                if (l) break;
                                h += r + 1;
                            }
                            if (l) break;
                            if (h = 0, d) {
                                if (f--, f < 0) {
                                    if (u) break;
                                    u = !0, f = this.ybase + this.rows - 1;
                                }
                            } else if (f++, f > this.ybase + this.rows - 1) {
                                if (u) break;
                                u = !0, f = 0;
                            }
                        }
                        return l ? (f - this.ybase < 0 ? (n = f, f = 0, n > this.ybase && (f = n - this.ybase, 
                        n = this.ybase)) : (n = this.ybase, f -= this.ybase), this.x = h, this.y = f, this.scrollDisp(-this.ydisp + n), 
                        void (this.visualMode && this.selectText(o, this.x, a + c, this.ydisp + this.y))) : void this.refresh(0, this.rows - 1);
                    }
                    if ("\b" === e || "" === e) {
                        if (0 === this.entry.length) return;
                        var p = this.ydisp + this.rows - 1;
                        this.entry = this.entry.slice(0, -1);
                        var r = this.entryPrefix.length + this.entry.length;
                        return this.lines[p][r] = [ this.lines[p][r][0], " " ], this.x--, this.refresh(this.rows - 1, this.rows - 1), 
                        void this.refresh(this.y, this.y);
                    }
                    if (1 === e.length && e >= " " && e <= "~") {
                        var p = this.ydisp + this.rows - 1;
                        this.entry += e;
                        var r = this.entryPrefix.length + this.entry.length - 1;
                        return this.lines[p][r] = [ this.defAttr & -512 | 4, e ], this.x++, this.refresh(this.rows - 1, this.rows - 1), 
                        void this.refresh(this.y, this.y);
                    }
                    return !1;
                }, o.charsets = {}, o.charsets.SCLD = {
                    "`": "◆",
                    a: "▒",
                    b: "\t",
                    c: "\f",
                    d: "\r",
                    e: "\n",
                    f: "°",
                    g: "±",
                    h: "␤",
                    i: "\v",
                    j: "┘",
                    k: "┐",
                    l: "┌",
                    m: "└",
                    n: "┼",
                    o: "⎺",
                    p: "⎻",
                    q: "─",
                    r: "⎼",
                    s: "⎽",
                    t: "├",
                    u: "┤",
                    v: "┴",
                    w: "┬",
                    x: "│",
                    y: "≤",
                    z: "≥",
                    "{": "π",
                    "|": "≠",
                    "}": "£",
                    "~": "·"
                }, o.charsets.UK = null, o.charsets.US = null, o.charsets.Dutch = null, o.charsets.Finnish = null, 
                o.charsets.French = null, o.charsets.FrenchCanadian = null, o.charsets.German = null, 
                o.charsets.Italian = null, o.charsets.NorwegianDanish = null, o.charsets.Spanish = null, 
                o.charsets.Swedish = null, o.charsets.Swiss = null, o.charsets.ISOLatin = null;
                var S = this.String, E = this.setTimeout;
                this.setInterval;
                p._cache = {}, p.distance = function(t, e, s, i, n, r) {
                    return Math.pow(30 * (t - i), 2) + Math.pow(59 * (e - n), 2) + Math.pow(11 * (s - r), 2);
                }, o.EventEmitter = s, o.Stream = r, o.inherits = u, o.on = a, o.off = c, o.cancel = l, 
                i = [], n = function() {
                    return o;
                }.apply(e, i), !(void 0 !== n && (t.exports = n));
            }).call(function() {
                return this || ("undefined" != typeof window ? window : s);
            }());
        }).call(e, function() {
            return this;
        }());
    },
    7: function(t, e, s) {
        "use strict";
        function i(t) {
            if (t in o) return o[t];
            var e = document.createElement("div");
            e.innerHTML = t, n.translate(e);
            var s = e.innerHTML;
            return o[t] = s, s;
        }
        var n = s(3), r = s(8), o = {};
        t.exports = n.extend({}, r, {
            render: function(t, e, s) {
                return e || (e = {}), i(r.render(t, e, s));
            },
            to_html: function(t, e, s, n) {
                return e || (e = {}), i(r.to_html(t, e, s, n));
            },
            clearCache: function() {
                return o = {}, r.clearCache();
            }
        });
    },
    8: function(t, e, s) {
        var i, n, r;
        /*!
	 * mustache.js - Logic-less {{mustache}} templates with JavaScript
	 * http://github.com/janl/mustache.js
	 */
        !function(s, o) {
            "object" == typeof e && e && "string" != typeof e.nodeName ? o(e) : (n = [ e ], 
            i = o, r = "function" == typeof i ? i.apply(e, n) : i, !(void 0 !== r && (t.exports = r)));
        }(this, function(t) {
            function e(t) {
                return "function" == typeof t;
            }
            function s(t) {
                return m(t) ? "array" : typeof t;
            }
            function i(t) {
                return t.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
            }
            function n(t, e) {
                return null != t && "object" == typeof t && e in t;
            }
            function r(t, e) {
                return g.call(t, e);
            }
            function o(t) {
                return !r(y, t);
            }
            function a(t) {
                return String(t).replace(/[&<>"'`=\/]/g, function(t) {
                    return v[t];
                });
            }
            function c(e, s) {
                function n() {
                    if (y && !v) for (;g.length; ) delete p[g.pop()]; else g = [];
                    y = !1, v = !1;
                }
                function r(t) {
                    if ("string" == typeof t && (t = t.split(w, 2)), !m(t) || 2 !== t.length) throw new Error("Invalid tags: " + t);
                    a = new RegExp(i(t[0]) + "\\s*"), c = new RegExp("\\s*" + i(t[1])), f = new RegExp("\\s*" + i("}" + t[1]));
                }
                if (!e) return [];
                var a, c, f, d = [], p = [], g = [], y = !1, v = !1;
                r(s || t.tags);
                for (var M, _, S, E, T, A, q = new h(e); !q.eos(); ) {
                    if (M = q.pos, S = q.scanUntil(a)) for (var P = 0, R = S.length; P < R; ++P) E = S.charAt(P), 
                    o(E) ? g.push(p.length) : v = !0, p.push([ "text", E, M, M + 1 ]), M += 1, "\n" === E && n();
                    if (!q.scan(a)) break;
                    if (y = !0, _ = q.scan(C) || "name", q.scan(b), "=" === _ ? (S = q.scanUntil(x), 
                    q.scan(x), q.scanUntil(c)) : "{" === _ ? (S = q.scanUntil(f), q.scan(k), q.scanUntil(c), 
                    _ = "&") : S = q.scanUntil(c), !q.scan(c)) throw new Error("Unclosed tag at " + q.pos);
                    if (T = [ _, S, M, q.pos ], p.push(T), "#" === _ || "^" === _) d.push(T); else if ("/" === _) {
                        if (A = d.pop(), !A) throw new Error('Unopened section "' + S + '" at ' + M);
                        if (A[1] !== S) throw new Error('Unclosed section "' + A[1] + '" at ' + M);
                    } else "name" === _ || "{" === _ || "&" === _ ? v = !0 : "=" === _ && r(S);
                }
                if (A = d.pop()) throw new Error('Unclosed section "' + A[1] + '" at ' + q.pos);
                return u(l(p));
            }
            function l(t) {
                for (var e, s, i = [], n = 0, r = t.length; n < r; ++n) e = t[n], e && ("text" === e[0] && s && "text" === s[0] ? (s[1] += e[1], 
                s[3] = e[3]) : (i.push(e), s = e));
                return i;
            }
            function u(t) {
                for (var e, s, i = [], n = i, r = [], o = 0, a = t.length; o < a; ++o) switch (e = t[o], 
                e[0]) {
                  case "#":
                  case "^":
                    n.push(e), r.push(e), n = e[4] = [];
                    break;

                  case "/":
                    s = r.pop(), s[5] = e[2], n = r.length > 0 ? r[r.length - 1][4] : i;
                    break;

                  default:
                    n.push(e);
                }
                return i;
            }
            function h(t) {
                this.string = t, this.tail = t, this.pos = 0;
            }
            function f(t, e) {
                this.view = t, this.cache = {
                    ".": this.view
                }, this.parent = e;
            }
            function d() {
                this.cache = {};
            }
            var p = Object.prototype.toString, m = Array.isArray || function(t) {
                return "[object Array]" === p.call(t);
            }, g = RegExp.prototype.test, y = /\S/, v = {
                "&": "&amp;",
                "<": "&lt;",
                ">": "&gt;",
                '"': "&quot;",
                "'": "&#39;",
                "/": "&#x2F;",
                "`": "&#x60;",
                "=": "&#x3D;"
            }, b = /\s*/, w = /\s+/, x = /\s*=/, k = /\s*\}/, C = /#|\^|\/|>|\{|&|=|!/;
            h.prototype.eos = function() {
                return "" === this.tail;
            }, h.prototype.scan = function(t) {
                var e = this.tail.match(t);
                if (!e || 0 !== e.index) return "";
                var s = e[0];
                return this.tail = this.tail.substring(s.length), this.pos += s.length, s;
            }, h.prototype.scanUntil = function(t) {
                var e, s = this.tail.search(t);
                switch (s) {
                  case -1:
                    e = this.tail, this.tail = "";
                    break;

                  case 0:
                    e = "";
                    break;

                  default:
                    e = this.tail.substring(0, s), this.tail = this.tail.substring(s);
                }
                return this.pos += e.length, e;
            }, f.prototype.push = function(t) {
                return new f(t, this);
            }, f.prototype.lookup = function(t) {
                var s, i = this.cache;
                if (i.hasOwnProperty(t)) s = i[t]; else {
                    for (var r, o, a = this, c = !1; a; ) {
                        if (t.indexOf(".") > 0) for (s = a.view, r = t.split("."), o = 0; null != s && o < r.length; ) o === r.length - 1 && (c = n(s, r[o])), 
                        s = s[r[o++]]; else s = a.view[t], c = n(a.view, t);
                        if (c) break;
                        a = a.parent;
                    }
                    i[t] = s;
                }
                return e(s) && (s = s.call(this.view)), s;
            }, d.prototype.clearCache = function() {
                this.cache = {};
            }, d.prototype.parse = function(t, e) {
                var s = this.cache, i = s[t];
                return null == i && (i = s[t] = c(t, e)), i;
            }, d.prototype.render = function(t, e, s) {
                var i = this.parse(t), n = e instanceof f ? e : new f(e);
                return this.renderTokens(i, n, s, t);
            }, d.prototype.renderTokens = function(t, e, s, i) {
                for (var n, r, o, a = "", c = 0, l = t.length; c < l; ++c) o = void 0, n = t[c], 
                r = n[0], "#" === r ? o = this.renderSection(n, e, s, i) : "^" === r ? o = this.renderInverted(n, e, s, i) : ">" === r ? o = this.renderPartial(n, e, s, i) : "&" === r ? o = this.unescapedValue(n, e) : "name" === r ? o = this.escapedValue(n, e) : "text" === r && (o = this.rawValue(n)), 
                void 0 !== o && (a += o);
                return a;
            }, d.prototype.renderSection = function(t, s, i, n) {
                function r(t) {
                    return o.render(t, s, i);
                }
                var o = this, a = "", c = s.lookup(t[1]);
                if (c) {
                    if (m(c)) for (var l = 0, u = c.length; l < u; ++l) a += this.renderTokens(t[4], s.push(c[l]), i, n); else if ("object" == typeof c || "string" == typeof c || "number" == typeof c) a += this.renderTokens(t[4], s.push(c), i, n); else if (e(c)) {
                        if ("string" != typeof n) throw new Error("Cannot use higher-order sections without the original template");
                        c = c.call(s.view, n.slice(t[3], t[5]), r), null != c && (a += c);
                    } else a += this.renderTokens(t[4], s, i, n);
                    return a;
                }
            }, d.prototype.renderInverted = function(t, e, s, i) {
                var n = e.lookup(t[1]);
                if (!n || m(n) && 0 === n.length) return this.renderTokens(t[4], e, s, i);
            }, d.prototype.renderPartial = function(t, s, i) {
                if (i) {
                    var n = e(i) ? i(t[1]) : i[t[1]];
                    return null != n ? this.renderTokens(this.parse(n), s, i, n) : void 0;
                }
            }, d.prototype.unescapedValue = function(t, e) {
                var s = e.lookup(t[1]);
                if (null != s) return s;
            }, d.prototype.escapedValue = function(e, s) {
                var i = s.lookup(e[1]);
                if (null != i) return t.escape(i);
            }, d.prototype.rawValue = function(t) {
                return t[1];
            }, t.name = "mustache.js", t.version = "2.3.0", t.tags = [ "{{", "}}" ];
            var M = new d();
            return t.clearCache = function() {
                return M.clearCache();
            }, t.parse = function(t, e) {
                return M.parse(t, e);
            }, t.render = function(t, e, i) {
                if ("string" != typeof t) throw new TypeError('Invalid template! Template should be a "string" but "' + s(t) + '" was given as the first argument for mustache#render(template, view, partials)');
                return M.render(t, e, i);
            }, t.to_html = function(s, i, n, r) {
                var o = t.render(s, i, n);
                return e(r) ? void r(o) : o;
            }, t.escape = a, t.Scanner = h, t.Context = f, t.Writer = d, t;
        });
    },
    11: function(t, e, s) {
        "use strict";
        !function() {
            function e(t, e, s, n, r) {
                function o(t) {
                    return t < e ? t = e : t > s && (t = s), t;
                }
                function a() {
                    g = m.checked ? o(Math.round(Math.exp(b + x * d.value))) : void 0;
                }
                function c() {
                    v = !0, void 0 !== g && i(d).prop("value", (Math.log(g) - b) / x), i(d).attr("disabled", void 0 === g).trigger("change"), 
                    v = !1;
                }
                function l() {
                    var t;
                    t = m.checked ? o(n(i(p).val())) : void 0, isNaN(t) && (t = void 0), g = t;
                }
                function u() {
                    v = !0, void 0 !== g && i(p).val(r(g)), i(p).attr("disabled", void 0 === g), v = !1;
                }
                function h() {
                    m.checked || (g = void 0);
                }
                function f() {
                    v = !0, i(m).prop("checked", void 0 !== g), v = !1;
                }
                var d, p, m, g, y = this, v = !1;
                e < 0 && (e = 0), s < 0 && (s = 0);
                var b = Math.log(e), w = Math.log(s), x = w - b;
                return d = t.find("div.slider").on("change", function() {
                    v || (a(), u());
                })[0], p = t.find("input.size-text-ct").on("change", function() {
                    v || (l(), c());
                })[0], m = t.find("input[type='checkbox']").on("change", function() {
                    v || (h(), this.checked && l(), c(), u());
                })[0], Object.defineProperty(y, "value", {
                    get: function() {
                        return g;
                    },
                    set: function(t) {
                        g = t, f(), c(), u();
                    }
                }), Object.defineProperty(y, "max", {
                    get: function() {
                        return s;
                    },
                    set: function(t) {
                        t < 0 && (t = 0), s = t, w = Math.log(s), x = w - b, d && c();
                    }
                }), y;
            }
            var i = s(2), n = s(3), r = s(7);
            s(12);
            var o = s(4), a = s(13), c = s(14), l = n.gettext, u = {};
            u.resource_debug = function() {
                "all" != window.debugging && "resource" != window.debugging || console.debug.apply(console, arguments);
            }, u.docker_debug = function() {
                "all" != window.debugging && "docker" != window.debugging || console.debug.apply(console, arguments);
            }, u.quote_cmdline = function(t) {
                return o.quote_cmdline(t || []);
            }, u.unquote_cmdline = function(t) {
                return o.unquote_cmdline(t);
            }, u.render_container_cmdline = function(t) {
                return t.Config ? u.quote_cmdline((t.Config.Entrypoint || []).concat(t.Config.Cmd || [])) : t.Command;
            }, u.render_container_status = function(t) {
                return t.Status ? t.Status : t.Running ? "running" : t.Paused ? "paused" : t.Restarting ? "restarting" : t.FinishedAt && 0 === t.FinishedAt.indexOf("0001") ? "created" : "exited";
            }, u.render_container_name = function(t) {
                return t.length > 0 && "/" == t[0] ? t.slice(1) : t;
            }, u.render_container_state = function(t) {
                return t.Running ? n.format(l("Up since $StartedAt"), t) : n.format(l("Exited $ExitCode"), t);
            }, u.render_container_restart_policy = function(t) {
                switch (t.Name) {
                  case "no":
                    return l("No");

                  case "on-failure":
                    var e = n.ngettext("On failure, retry $0 time", "On failure, retry $0 times", t.MaximumRetryCount);
                    return n.format(e, t.MaximumRetryCount);

                  case "always":
                    return l("Always");

                  case "unless-stopped":
                    return l("Unless Stopped");

                  default:
                    return t.Name.replace("-", " ").replace(/\w\S*/g, function(t) {
                        return t.charAt(0).toUpperCase() + t.substr(1).toLowerCase();
                    });
                }
            }, u.multi_line = function(t) {
                return t.map(function(t) {
                    return r.render("{{.}}", t);
                }).join("<br/>");
            }, u.format_cpu_shares = function(t) {
                return t ? n.format(l("$0 shares"), Math.round(t)) : l("default");
            }, u.format_cpu_usage = function(t) {
                return void 0 === t || isNaN(t) ? "" : Math.round(t) + "%";
            }, u.update_memory_bar = function(t, e, s) {
                var n = [ e ];
                s && n.push(s), i(t).attr("value", n.join("/")).toggleClass("bar-row-danger", !!(s && e > .9 * s));
            }, u.format_memory_and_limit = function(t, e) {
                if (void 0 === t || isNaN(t)) return "";
                var s, i = "", r = 1024;
                return e && (s = n.format_bytes(e, r, !0), i = " / " + s.join(" "), r = s[1]), t ? (s = n.format_bytes(t, r, !0), 
                i ? s[0] + i : s.join(" ")) : "?" + i;
            }, u.insert_table_sorted = function(t, e) {
                u.insert_table_sorted_generic(t, e, function(t, e) {
                    return t.text().localeCompare(e.text());
                });
            }, u.insert_table_sorted_generic = function(t, e, s) {
                for (var n = i(t).find("tbody tr"), r = 0; r < n.length; r++) if (s(i(n[r]), e) > 0) {
                    i(e).insertBefore(n[r]), e = null;
                    break;
                }
                null !== e && i(t).find("tbody").append(e);
            }, u.setup_danger_button = function(t, e, s) {
                var n = i('<button class="btn btn-default btn-control-ct fa fa-check enable-danger">').toggle(!1).on("click", s);
                i(t + " th.container-column-actions").append(n), i(e)[0].addEventListener("click", function(e) {
                    0 === i(e.target).parents(t).length && i(t + " button.enable-danger").hasClass("active") && s();
                }, !0);
            }, u.render_container = function(t, e, s, r, c, h) {
                var f = i(document.getElementById(s + r));
                if (!c) return f.remove(), void (e.find("table > tbody > tr").length || e.find("button.enable-danger").toggle(!1));
                var d, p, m, g, y, v;
                c.State && c.State.Running ? (d = u.format_cpu_usage(c.CpuUsage), p = c.MemoryUsage, 
                m = c.MemoryLimit, y = u.format_memory_and_limit(p, m), g = !0, v = {
                    color: "inherit"
                }) : (d = "", g = !1, y = l("Stopped"), v = {
                    color: "grey",
                    "text-align": "right"
                });
                var b = !1;
                if (!f.length) {
                    e.find("button.enable-danger").toggle(!0);
                    var w = i('<div class="spinner">'), x = i('<button class="btn btn-danger pficon pficon-delete btn-delete">').on("click", function() {
                        var e = this;
                        return i(e).hide().siblings("div.spinner").show(), u.docker_container_delete(t, r, function() {}, function() {
                            i(e).show().siblings("div.spinner").hide();
                        }), !1;
                    }), k = i('<button class="btn btn-default btn-control-ct fa fa-play">').on("click", function() {
                        return i(this).hide().siblings("div.spinner").show(), t.start(r).fail(function(e) {
                            u.handle_scope_start_container(t, r, e.message);
                        }), !1;
                    }), C = i('<button class="btn btn-default btn-control-ct fa fa-stop">').on("click", function() {
                        return i(this).hide().siblings("div.spinner").show(), t.stop(r).fail(function(t) {
                            u.show_unexpected_error(t);
                        }), !1;
                    });
                    f = i("<tr>", {
                        id: s + r
                    }).append(i('<td class="container-column-name">'), i('<td class="container-column-image">'), i('<td class="container-column-command">'), i('<td class="container-column-cpu">'), i('<td class="container-column-memory-graph">').append(a.create("containers-containers")), i('<td class="container-column-memory-text">'), i('<td class="container-column-danger cell-buttons">').append(x, w), i('<td class="container-column-actions cell-buttons">').append(k, C, w.clone())), 
                    f.on("click", function(t) {
                        n.location.go([ r ]);
                    }), b = !0;
                }
                var M = f.children("td");
                i(M[0]).text(u.render_container_name(c.Name));
                var _ = c.Image;
                c.ImageID && _ == c.ImageID && (_ = o.truncate_id(_)), i(M[1]).text(_), i(M[2]).text(u.render_container_cmdline(c)), 
                i(M[3]).text(d), u.update_memory_bar(i(M[4]).children("div").toggle(g), p, m), i(M[5]).css(v).text(y);
                var S = r in t.waiting;
                i(M[6]).children("div.spinner").toggle(S), i(M[6]).children("button.btn-delete").toggle(!S).toggleClass("disabled", c.State.Running);
                var E = S || c.State.Running ? "You can only delete<br/> stopped containers" : "Delete immediately";
                i(M[6]).children("button.btn-delete").tooltip("destroy").attr("title", E).tooltip({
                    html: !0
                }), i(M[7]).children("div.spinner").toggle(S), i(M[7]).children("button.fa-play").toggle(!S && !c.State.Running), 
                i(M[7]).children("button.fa-stop").toggle(!S && c.State.Running), i(M[6]).toggle(h), 
                i(M[7]).toggle(!h), f.toggleClass("unimportant", !c.State.Running), b && u.insert_table_sorted(e.find("table"), f), 
                a.update();
            }, u.MemorySlider = function(t, s, i) {
                function r(t) {
                    return 1024 * parseInt(t, 10) * 1024;
                }
                function o(t) {
                    return n.format_bytes(t, "MiB", !0)[0];
                }
                return new e(t, s, i, r, o);
            }, u.CpuSlider = function(t, s, i) {
                function n(t) {
                    return parseInt(t, 10);
                }
                function r(t) {
                    return String(t);
                }
                return new e(t, s, i, n, r);
            }, u.docker_container_delete = function(t, e, s, i) {
                t.rm(e).fail(function(r) {
                    if (r.message.indexOf("remove a running container") > -1) {
                        var o, a = t.containers[e];
                        o = a.State.Running ? l("Container is currently running.") : l("Container is currently marked as not running, but regular stopping failed.") + " " + l("Error message from Docker:") + " '" + r.message + "'";
                        var c;
                        return c = a.Name ? a.Name : e, "/" === c.charAt(0) && (c = c.substring(1)), void u.confirm(n.format(l("Please confirm forced deletion of $0"), c), o, l("Force Delete")).done(function() {
                            t.rm(e, !0).fail(function(t) {
                                u.show_unexpected_error(t), i();
                            }).done(s);
                        }).fail(i);
                    }
                    u.show_unexpected_error(r), i();
                }).done(s);
            }, u.handle_scope_start_container = function(t, e, s, i, r) {
                var o = ".scope already exists", a = s.indexOf(o);
                if (a > -1) {
                    var c = "Unit docker-", h = s.indexOf(c) + c.length, f = s.substring(h, a);
                    return void n.spawn([ "systemctl", "stop", "docker-" + f + ".scope" ], {
                        superuser: "try"
                    }).done(function() {
                        t.start(e).fail(function(t) {
                            r && r();
                        }).done(function() {
                            i && i();
                        });
                    }).fail(function(t) {
                        u.show_unexpected_error(n.format(l("Failed to stop Docker scope: $0"), t)), r && r();
                    });
                }
                u.show_unexpected_error(s), r && r();
            }, u.show_unexpected_error = function(t) {
                i("#error-popup-message").text(t.message || t || "???"), i('.modal[role="dialog"]').modal("hide"), 
                i("#error-popup").modal("show");
            }, u.confirm = function(t, e, s) {
                function n() {
                    i("#confirmation-dialog button").off("click"), i("#confirmation-dialog").modal("hide");
                }
                var r = i.Deferred();
                return i("#confirmation-dialog-title").text(t), "string" == typeof e ? i("#confirmation-dialog-body").text(e) : i("#confirmation-dialog-body").html(e), 
                i("#confirmation-dialog-confirm").text(s), i("#confirmation-dialog-confirm").click(function() {
                    n(), r.resolve();
                }), i("#confirmation-dialog-cancel").click(function() {
                    n(), r.reject();
                }), i("#confirmation-dialog").modal("show"), r.promise();
            }, u.find_container_log = function(t, e, s) {
                t.call(e, "org.freedesktop.DBus.Properties", "GetAll", [ "org.freedesktop.Problems2.Entry" ]).fail(function(t) {
                    console.log(t);
                }).done(function(i) {
                    t.call(e, "org.freedesktop.Problems2.Entry", "ReadElements", [ [ "container_id" ], 4 ]).fail(function(t) {
                        console.log(t);
                    }).done(function(t) {
                        if ("container_id" in t[0]) {
                            var e = i[0].ID.v;
                            window.setTimeout(u.problem_log, 2e3, 0, e, t[0].container_id.v, s);
                        }
                    });
                });
            }, u.problem_log = function(t, e, s, i) {
                var r = null, o = "", a = [], l = !1;
                a.push("SYSLOG_IDENTIFIER=abrt-notification"), a.push("PROBLEM_DIR=" + e), c.journalctl(a, {
                    follow: !1,
                    reverse: !0,
                    all: !0
                }).stream(function(t) {
                    l = !0, r = n.location.encode(t[0].__CURSOR), r = "/system/logs#" + r, o = t[0].PROBLEM_REASON ? t[0].PROBLEM_REASON : t[0].MESSAGE, 
                    i(s, r, o);
                }).done(function() {
                    l || (t < 30 ? window.setTimeout(u.problem_log, 2e3, ++t, e, s, i) : console.warn("No journal log found for problem " + e));
                });
            }, u.find_all_problems = function(t, e, s, i) {
                t.wait(function() {
                    try {
                        s.GetProblems(0, {}).done(function(t, s) {
                            for (var n in t) u.find_container_log(e, t[n], i);
                        });
                    } catch (t) {}
                });
            }, t.exports = u;
        }();
    },
    12: function(t, e, s) {
        "use strict";
        !function() {
            function t() {
                return b += 1, "unique" + -new Date() + -b;
            }
            function e(t) {
                t.find(".dialog-error").remove(), t.find(".has-error").removeClass("has-error"), 
                t.find(".dialog-wrapper").off(".dialog-error"), t.off(".dialog-error");
            }
            function i(t, e) {
                var s, i, n = t.parent();
                n.is(".dialog-wrapper") || (n = y("<div class='dialog-wrapper'>").insertBefore(t), 
                s = t.next(), s.is(".bootstrap-select") && s.selectpicker && (s.remove(), i = s.selectpicker), 
                t.remove().appendTo(n), i && i.call(t));
                var r;
                e.message && (r = y("<div class='dialog-error help-block'>").text(e.message)), n.addClass("has-error").append(r), 
                n.hasClass("error-keep") || n.on("keypress.dialog-error change.dialog-error", function() {
                    n.removeClass("has-error").find(".dialog-error.help-block").css("visibility", "hidden");
                });
            }
            function n(t, e) {
                var s = y("<div class='alert alert-danger dialog-error'>"), i = e.message || e.toString();
                s.text(i), y("<span class='fa fa-exclamation-triangle'>").prependTo(s), console.warn(i);
                var n = t.find(".modal-footer");
                n.length ? s.prependTo(n) : s.appendTo(t);
            }
            function r(t, s) {
                e(t), 1 == s.length && y.isArray(s[0]) && (s = s[0]);
                var r = !1;
                s.forEach(function(e) {
                    var s;
                    e && (s = t.find(e.target), s && s.length ? i(s, e) : n(t, e), r = !0);
                }), r && t.on("show.bs.modal.dialog-error", function() {
                    e(t);
                });
            }
            function o(t, e) {
                this.promise = t, this.disabled = [], this.handle = e;
            }
            function a(t) {
                var e = t.data("dialog-wait");
                t.data("dialog-wait", null), t.find(".dialog-wait-ct").remove(), t.find(".btn").off(".dialog-wait"), 
                t.off(".dialog-wait"), e && e.disabled.forEach(function(t) {
                    t.removeAttr("disabled");
                });
            }
            function c(t, e, s) {
                function i() {
                    var s, i = t.data("dialog-wait");
                    i && i.promise === e && (a(t), s = e.state(), f || "resolved" == s && i.handle ? t.modal("hide") : "rejected" == s && i.handle && r(t, [ arguments[0] ]));
                }
                function n(s) {
                    var i = t.data("dialog-wait");
                    i && i.promise === e && ("string" != typeof s && (s = ""), l.text(s));
                }
                if (a(t), !e) return s && t.modal("hide"), t;
                s && r(t, []);
                var c = y("<div class='dialog-wait-ct pull-left'>");
                y("<div class='spinner spinner-sm'>").appendTo(c);
                var l = y("<span>").appendTo(c);
                t.find(".modal-footer button").first().before(c);
                var u = new o(e, s);
                t.data("dialog-wait", u);
                var h = e.cancel || e.close, f = !1, d = t.find(".form-control").add(".btn", t);
                return h && (d = d.not("[data-dismiss]").not(".btn-cancel")), d.each(function() {
                    var t = y(this);
                    t.attr("disabled") || (u.disabled.push(t), t.attr("disabled", "disabled"));
                }), t.find(".btn[data-dismiss], .btn-cancel").on("click.dialog-wait", function() {
                    return f = !0, h && h.apply(e), !1;
                }), t.on("hide.bs.modal.dialog-wait", function() {
                    a(t);
                }), e.always(i).progress(n), t;
            }
            function l(e) {
                var s = v.gettext || function(t) {
                    return t;
                };
                return e = e.find(".btn-onoff-ct").addBack().filter(".btn-onoff-ct"), e.each(function(e, i) {
                    var n, r, o, a = y(i).attr("data-toggle", "buttons").addClass("btn-group"), c = a.onoff("value"), l = a.find(".btn"), u = a.find("input").first().attr("name") || t();
                    for (n = l.length; n < 2; n++) r = y('<input type="radio" autocomplete="off">'), 
                    o = document.createTextNode(s(0 === n ? "On" : "Off")), a.append(y('<label class="btn">').append(r, o)), 
                    l = null;
                    l = l || a.find(".btn"), l.find("input").attr("name", u), h(a, !!c);
                }), e;
            }
            function u(t) {
                return t.find(".btn").first().hasClass("active");
            }
            function h(t, e) {
                return t.each(function(t, s) {
                    var i = y(s).find(".btn");
                    i.first().toggleClass("active", !!e).find("input").prop("checked", !!e), i.last().toggleClass("active", !e).find("input").prop("checked", !e);
                });
            }
            function f(t, e, s, i) {
                var n = 0;
                i > s ? n = 1 : i < 0 || isNaN(i) ? n = 0 : !isNaN(s) && s > 0 && i >= 0 && (n = i / s), 
                y(e).css("width", 100 * n + "%").next("div").css("margin-left", y(e).css("width")), 
                t.value = n;
            }
            function d(t) {
                f(t, y(t).children("div.slider-bar").first()[0], 1, t.value);
            }
            function p(t) {
                y(t).toggleClass("slider-warning", t.offsetWidth < t.scrollWidth);
            }
            function m(t) {
                y(t).attr("unselectable", "on"), Object.defineProperty(t, "value", {
                    get: function() {
                        return parseFloat(this.getAttribute("value"));
                    },
                    set: function(e) {
                        var s = String(e);
                        s != this.getAttribute("value") && (this.setAttribute("value", e), d(t), p(t));
                    }
                }), Object.defineProperty(t, "disabled", {
                    get: function() {
                        return !!this.hasAttribute("disabled") && "false" != this.getAttribute("disabled").toLowerCase();
                    },
                    set: function(t) {
                        this.setAttribute("disabled", t ? "true" : "false");
                    }
                }), d(t), p(t), y(t).on("change", function() {
                    d(t), y(t).toggleClass("slider-disabled", t.disabled);
                }), t.disabled && y(t).addClass("slider-disabled"), y(t).on("mousedown", function(e) {
                    if (t.disabled) return !0;
                    var s, i = y(t).offset().left;
                    if (y(e.target).hasClass("slider-thumb")) {
                        var n = e.offsetX || e.clientX - y(e.target).offset().left;
                        i += n - y(e.target).outerWidth() / 2, s = y(e.target).parent()[0];
                    } else s = y(t).children("div.slider-bar").first()[0], f(t, s, y(t).width(), e.pageX - i), 
                    y(t).trigger("change", [ t.value ]), p(t);
                    return y(document).on("mousemove.slider", function(e) {
                        return f(t, s, y(t).width(), e.pageX - i), y(t).trigger("change", [ t.value ]), 
                        p(t), !1;
                    }).on("mouseup.slider", function(t) {
                        return y(document).off("mousemove.slider").off("mouseup.slider"), !1;
                    }), !1;
                });
            }
            function g() {
                y("div.slider").each(function() {
                    m(this);
                });
            }
            var y = s(2), v = s(3), b = 0;
            y.fn.dialog = function(t) {
                return "failure" === t ? r(this, Array.prototype.slice.call(arguments, 1)) : "wait" === t ? c(this, arguments[1]) : "promise" === t ? c(this, arguments[1], !0) : void console.warn("unknown dialog action: " + t);
            }, window.addEventListener("hashchange", function() {
                y(".modal").modal("hide");
            }), y.fn.onoff = function(t) {
                return 0 === arguments.length || "refresh" == t ? l(this) : "value" === t ? 1 === arguments.length ? u(this) : h(this, arguments[1]) : "disabled" == t ? this.find(".btn").toggleClass("disabled", arguments[1]) : void console.warn("unknown switch action: " + t);
            }, y.fn.slider = function(t) {
                var e = this;
                return 0 === arguments.length || "refresh" == t ? (e.each(function() {
                    m(this);
                }), e) : void console.warn("unknown slider action: " + t);
            }, y(document).ready(g), y.fn.update_privileged = function(t, e, s, i) {
                var n = t.allowed !== !1, r = this;
                return i || (i = y(this)), r.each(function() {
                    var t = "allowed-title";
                    "undefined" != typeof y(this).data(t) && y(this).data(t) !== !1 || y(this).data(t, y(this).attr("title") || "");
                    var r = {
                        html: !0
                    };
                    s && (r.placement = s), i.tooltip(r), y(this).hasClass("disabled") === n && (y(this).toggleClass("disabled", !n), 
                    i.attr("data-original-title", null), n ? i.attr("title", y(this).data(t)) : i.attr("title", e), 
                    i.tooltip("fixTitle")), y(this).attr("data-stable", "yes");
                }), r;
            };
        }();
    },
    13: function(t, e, s) {
        "use strict";
        !function() {
            function e(t, e) {
                function s(t) {
                    var e = o(t).attr("value");
                    if (void 0 === e) return [ NaN ];
                    var s = e.split("/", 2), i = parseInt(s[0], 10);
                    if (1 == s.length) return [ i ];
                    var n = parseInt(s[1], 10);
                    return !isNaN(n) && i > n && (i = n), i < 0 && (i = 0), [ i, n ];
                }
                var i;
                if (t) {
                    var n = "div.bar-row[graph='" + t + "']";
                    i = o(n);
                } else i = o(e ? e : []);
                var r = 0;
                if (i.each(function() {
                    var t = s(this).pop();
                    !isNaN(t) && t > r && (r = t);
                }), t) {
                    var a = 104857600;
                    r = r - r % a + a;
                }
                i.each(function() {
                    var t = s(this), e = t.shift(), i = t.pop();
                    if (isNaN(e) || 0 === i) o(this).css("visibility", "hidden"); else {
                        var n = o(this).data("bar-progress");
                        isNaN(i) ? (n.addClass("progress-no-limit"), i = e) : n.removeClass("progress-no-limit"), 
                        o(this).css("visibility", "visible"), n.css("width", i / r * 100 + "%"), o(this).data("bar-progress-bar").css("width", e / i * 100 + "%").toggle(e > 0);
                    }
                });
            }
            function i(t, s) {
                return void 0 === t && s && (t = o(s).attr("graph")), t ? ("undefined" !== a[t] && window.clearTimeout(a[t]), 
                void (a[t] = window.setTimeout(function() {
                    delete a[t], e(t);
                }, 10))) : void e(void 0, s);
            }
            function n(t) {
                var s = o("<div>").addClass("progress-bar"), n = o("<div>").addClass("progress").append(s);
                o(t).addClass("bar-row").append(n).data("bar-progress", n).data("bar-progress-bar", s), 
                t.reflow = function() {
                    e(this.getAttribute("graph"), this);
                }, i(void 0, t);
            }
            function r() {
                o("div.bar-row").each(function() {
                    n(this, !1);
                });
            }
            var o = s(2), a = {};
            o(document).ready(r), t.exports = {
                create: function(t) {
                    var e = o("<div>").addClass("bar-row").attr("graph", t);
                    return n(e), e;
                },
                update: function() {
                    o("div.bar-row").each(function() {
                        i(this.getAttribute("graph"), this);
                    });
                }
            };
        }();
    },
    14: function(t, e, s) {
        "use strict";
        !function() {
            function e(t) {
                function e(t, e, s, i, r, a) {
                    var c = {
                        cursor: a.__CURSOR,
                        time: r,
                        message: s,
                        service: t
                    };
                    return i > 1 && (c.count = i), "abrt-notification" === t ? (c.problem = !0, c.service = a.PROBLEM_BINARY) : e < 4 && (c.warning = !0), 
                    n.render(o, c);
                }
                function s() {
                    return h;
                }
                function i(t) {
                    return n.render(r, {
                        day: t
                    });
                }
                function l(t) {
                    var e = document.createElement("div");
                    return e.innerHTML = t.trim(), e.children[0];
                }
                t.jquery && (t = t[0]), n.parse(r), n.parse(o), n.parse(a);
                var u = c("Reboot"), h = n.render(a, {
                    message: u
                });
                return {
                    render_line: e,
                    render_day_header: i,
                    render_reboot_separator: s,
                    append: function(e) {
                        "string" == typeof e && (e = l(e)), t.appendChild(e);
                    },
                    prepend: function(e) {
                        "string" == typeof e && (e = l(e)), t.firstChild ? t.insertBefore(e, t.firstChild) : t.appendChild(e);
                    },
                    remove_last: function() {
                        t.lastChild && t.removeChild(t.lastChild);
                    },
                    remove_first: function() {
                        t.firstChild && t.removeChild(t.firstChild);
                    }
                };
            }
            var i = s(3), n = s(7), r = s(15), o = s(16), a = s(17), c = i.gettext, l = i.gettext, u = {};
            u.journalctl = function() {
                function t() {
                    var t, e;
                    if (h.length && u.length > 0) for (t = u, u = [], e = 0; e < h.length; e++) h[e].apply(a, [ t ]); else window.clearInterval(f), 
                    f = null;
                }
                var e, s, n = [], r = {
                    follow: !0
                };
                for (e = 0; e < arguments.length; e++) if (s = arguments[e], "string" == typeof s) n.push(s); else if ("object" == typeof s) {
                    if (!(s instanceof Array)) {
                        i.extend(r, s);
                        break;
                    }
                    n.push.apply(n, s);
                } else console.warn("journal.journalctl called with invalid argument:", s);
                void 0 === r.count && (r.follow ? r.count = 10 : r.count = null);
                var o = [ "journalctl", "-q", "--output=json" ];
                r.count ? o.push("--lines=" + r.count) : o.push("--no-tail"), r.directory && o.push("--directory=" + r.directory), 
                r.boot ? o.push("--boot=" + r.boot) : void 0 !== r.boot && o.push("--boot"), r.since && o.push("--since=" + r.since), 
                r.until && o.push("--until=" + r.until), r.cursor && o.push("--cursor=" + r.cursor), 
                r.after && o.push("--after=" + r.after), r.reverse ? o.push("--reverse") : r.follow && o.push("--follow"), 
                o.push("--"), o.push.apply(o, n);
                var a, c = new i.defer(), l = "", u = [], h = [], f = null, d = i.spawn(o, {
                    host: r.host,
                    batch: 8192,
                    latency: 300,
                    superuser: "try"
                }).stream(function(e) {
                    l && (e = l + e), l = "";
                    var s = e.split("\n"), i = s.length - 1;
                    s.forEach(function(t, e) {
                        if (e == i) l = t; else if (t && 0 !== t.indexOf("-- ")) try {
                            u.push(JSON.parse(t));
                        } catch (e) {
                            console.warn(e, t);
                        }
                    }), h.length && null === f && (f = window.setInterval(t, 300));
                }).done(function() {
                    t(), c.resolve(u);
                }).fail(function(e) {
                    "cancelled" == e.problem || 1 === e.exit_status ? (t(), c.resolve(u)) : c.reject(e);
                }).always(function() {
                    window.clearInterval(f);
                });
                return a = c.promise(), a.stream = function(t) {
                    return h.push(t), this;
                }, a.stop = function() {
                    d.close("cancelled");
                }, a;
            }, u.printable = function(t) {
                return void 0 === t || null === t ? c("[no data]") : "string" == typeof t ? t : void 0 !== t.length ? i.format(c("[$0 bytes of binary data]"), t.length) : c("[binary data]");
            };
            var h = [ l("month-name", "January"), l("month-name", "February"), l("month-name", "March"), l("month-name", "April"), l("month-name", "May"), l("month-name", "June"), l("month-name", "July"), l("month-name", "August"), l("month-name", "September"), l("month-name", "October"), l("month-name", "November"), l("month-name", "December") ];
            u.renderer = function(t) {
                function s(t) {
                    var e = {};
                    for (var s in t) e[s] = t[s];
                    return e;
                }
                function i(t) {
                    function e(t) {
                        var e = t.toFixed();
                        return 1 == e.length && (e = "0" + e), e;
                    }
                    var s = new Date(t.__REALTIME_TIMESTAMP / 1e3);
                    return {
                        cursor: t.__CURSOR,
                        full: t,
                        day: h[s.getMonth()] + " " + s.getDate().toFixed() + ", " + s.getFullYear().toFixed(),
                        time: e(s.getHours()) + ":" + e(s.getMinutes()),
                        bootid: t._BOOT_ID,
                        ident: t.SYSLOG_IDENTIFIER || t._COMM,
                        prio: t.PRIORITY,
                        message: u.printable(t.MESSAGE)
                    };
                }
                function n(t, e) {
                    return t && e && t.day == e.day && t.bootid == e.bootid && t.ident == e.ident && t.prio == e.prio && t.message == e.message;
                }
                function r(t) {
                    return m.render_line(t.entry.ident, t.entry.prio, t.entry.message, t.count, t.last_time, t.entry.full);
                }
                function o() {
                    g === y && g.entry && (g = s(y));
                }
                function a() {
                    g.header_present && (m.remove_first(), g.header_present = !1), g.line_present && (m.remove_first(), 
                    g.line_present = !1), g.entry && (m.prepend(r(g)), g.line_present = !0);
                }
                function c(t) {
                    var e = i(t);
                    n(g.entry, e) ? (g.count += 1, g.first_time = e.time) : (a(), g.entry && (e.bootid != g.entry.bootid && m.prepend(m.render_reboot_separator()), 
                    e.day != g.entry.day && m.prepend(m.render_day_header(g.entry.day))), o(), g.entry = e, 
                    g.count = 1, g.first_time = g.last_time = e.time, g.line_present = !1);
                }
                function l() {
                    a(), g.entry && (m.prepend(m.render_day_header(g.entry.day)), g.header_present = !0);
                }
                function f() {
                    y.line_present && (m.remove_last(), y.line_present = !1), y.entry && (m.append(r(y)), 
                    y.line_present = !0);
                }
                function d(t) {
                    var e = i(t);
                    n(y.entry, e) ? (y.count += 1, y.last_time = e.time) : (f(), y.entry && e.day == y.entry.day || (m.append(m.render_day_header(e.day)), 
                    y.header_present = !0), y.entry && e.bootid != y.entry.bootid && m.append(m.render_reboot_separator()), 
                    o(), y.entry = e, y.count = 1, y.first_time = y.last_time = e.time, y.line_present = !1);
                }
                function p() {
                    f();
                }
                var m;
                m = t.render_line ? t : e(t);
                var g, y;
                return g = y = {}, {
                    prepend: c,
                    prepend_flush: l,
                    append: d,
                    append_flush: p
                };
            }, u.logbox = function(t, e) {
                function s() {
                    for (var t = u.renderer(n); n.firstChild; ) n.removeChild(n.firstChild);
                    for (var e = 0; e < i.length; e++) t.prepend(i[e]);
                    t.prepend_flush(), i.length > 0 ? n.removeAttribute("hidden") : n.setAttribute("hidden", "hidden");
                }
                var i = [], n = document.createElement("div");
                s();
                var r = u.journalctl(t, {
                    count: e
                }).stream(function(t) {
                    i = i.concat(t), i.length > e && (i = i.slice(-e)), s();
                }).fail(function(t) {
                    n.appendChild(document.createTextNode(t.message)), n.removeAttribute("hidden");
                });
                return r.promise(n);
            }, t.exports = u;
        }();
    },
    15: function(t, e) {
        t.exports = '<div class="panel-heading">{{day}}</div>\n';
    },
    16: function(t, e) {
        t.exports = '<div class="cockpit-logline" data-cursor="{{cursor}}">\n  <div class="cockpit-log-warning">{{#warning}}\n    <i class="fa fa-exclamation-triangle"></i>\n  {{/warning}}{{#problem}}\n    <i class="fa fa-times-circle-o"></i>\n  {{/problem}}\n  </div>\n  <div class="cockpit-log-time">{{time}}</div>\n  <span class="cockpit-log-message">{{message}}</span>\n  {{! if we have count (repeated messages), show service name and badge - otherwise just the service }}\n  {{#count}}\n  <div class="cockpit-log-service-container">\n    <div class="cockpit-log-service-reduced">{{service}}</div>\n    <span class="badge">{{count}}&#160;<i class="fa fa-caret-right"></i></span>\n  </div>\n  {{/count}}{{^count}}\n  <div class="cockpit-log-service">{{service}}</div>\n  {{/count}}\n</div>\n';
    },
    17: function(t, e) {
        t.exports = '<div class="cockpit-logline">\n  {{! placeholders for correct message alignment }}\n  <div class="cockpit-log-warning"></div>\n  <span class="cockpit-log-message cockpit-logmsg-reboot">{{message}}</span>\n</div>\n';
    },
    34: function(t, e) {
        t.exports = function(t) {
            return t.webpackPolyfill || (t.deprecate = function() {}, t.paths = [], t.children = [], 
            t.webpackPolyfill = 1), t;
        };
    },
    171: function(t, e, s) {
        "use strict";
        !function() {
            window.QUnit = s(172), window.qunitTap = s(174), s(175), s(176), t.exports = window.QUnit;
        }();
    },
    172: function(t, e, s) {
        var i;
        (function(t, n) {
            /*!
	 * QUnit 1.23.1
	 * https://qunitjs.com/
	 *
	 * Copyright jQuery Foundation and other contributors
	 * Released under the MIT license
	 * https://jquery.org/license
	 *
	 * Date: 2016-04-12T17:29Z
	 */
            !function(t) {
                function r(t, e) {
                    var s, i, n = t.slice();
                    for (s = 0; s < n.length; s++) for (i = 0; i < e.length; i++) if (n[s] === e[i]) {
                        n.splice(s, 1), s--;
                        break;
                    }
                    return n;
                }
                function o(t, e) {
                    if (e.indexOf) return e.indexOf(t);
                    for (var s = 0, i = e.length; s < i; s++) if (e[s] === t) return s;
                    return -1;
                }
                function a(t) {
                    var e, s, i = D.is("array", t) ? [] : {};
                    for (e in t) V.call(t, e) && (s = t[e], i[e] = s === Object(s) ? a(s) : s);
                    return i;
                }
                function c(e, s, i) {
                    for (var n in s) V.call(s, n) && ("constructor" === n && e === t || (void 0 === s[n] ? delete e[n] : i && "undefined" != typeof e[n] || (e[n] = s[n])));
                    return e;
                }
                function l(t) {
                    if ("undefined" == typeof t) return "undefined";
                    if (null === t) return "null";
                    var e = K.call(t).match(/^\[object\s(.*)\]$/), s = e && e[1];
                    switch (s) {
                      case "Number":
                        return isNaN(t) ? "nan" : "number";

                      case "String":
                      case "Boolean":
                      case "Array":
                      case "Set":
                      case "Map":
                      case "Date":
                      case "RegExp":
                      case "Function":
                      case "Symbol":
                        return s.toLowerCase();
                    }
                    return "object" == typeof t ? "object" : void 0;
                }
                function u(t, e) {
                    return D.objectType(e) === t;
                }
                function h(t, e) {
                    e = void 0 === e ? 4 : e;
                    var s, i, n;
                    if (t.stack) {
                        if (s = t.stack.split("\n"), /^error$/i.test(s[0]) && s.shift(), F) {
                            for (i = [], n = e; n < s.length && s[n].indexOf(F) === -1; n++) i.push(s[n]);
                            if (i.length) return i.join("\n");
                        }
                        return s[e];
                    }
                    if (t.sourceURL) {
                        if (/qunit.js$/.test(t.sourceURL)) return;
                        return t.sourceURL + ":" + t.line;
                    }
                }
                function f(t) {
                    var e = new Error();
                    if (!e.stack) try {
                        throw e;
                    } catch (t) {
                        e = t;
                    }
                    return h(e, t);
                }
                function d(t) {
                    function e(t) {
                        var e = function(e) {
                            if ("function" !== l(e)) throw new Error("QUnit logging methods require a callback function as their first parameters.");
                            $.callbacks[t].push(e);
                        };
                        return G[t] = e, e;
                    }
                    var s, i, n, r = [ "begin", "done", "log", "testStart", "testDone", "moduleStart", "moduleDone" ];
                    for (s = 0, i = r.length; s < i; s++) n = r[s], "undefined" === l($.callbacks[n]) && ($.callbacks[n] = []), 
                    t[n] = e(n);
                }
                function p(t, e) {
                    var s, i, n;
                    for (n = $.callbacks[t], s = 0, i = n.length; s < i; s++) n[s](e);
                }
                function m() {
                    var e, s;
                    for (e in G) D[e] !== G[e] && (s = D[e], D[e] = G[e], D[e](s), t.console && t.console.warn && t.console.warn("QUnit." + e + " was replaced with a new value.\nPlease, check out the documentation on how to apply logging callbacks.\nReference: https://api.qunitjs.com/category/callbacks/"));
                }
                function g() {
                    var t, e, s = [];
                    if (!$.started) {
                        for ($.started = I(), m(), "" === $.modules[0].name && 0 === $.modules[0].tests.length && $.modules.shift(), 
                        t = 0, e = $.modules.length; t < e; t++) s.push({
                            name: $.modules[t].name,
                            tests: $.modules[t].tests
                        });
                        p("begin", {
                            totalTests: k.count,
                            modules: s
                        });
                    }
                    $.blocking = !1, y(!0);
                }
                function y(t) {
                    function e() {
                        y(t);
                    }
                    var s = I();
                    for ($.depth = ($.depth || 0) + 1; $.queue.length && !$.blocking; ) {
                        if (!(!B.setTimeout || $.updateRate <= 0 || I() - s < $.updateRate)) {
                            N(e, 13);
                            break;
                        }
                        $.current && ($.current.usedAsync = !1), $.queue.shift()();
                    }
                    $.depth--, !t || $.blocking || $.queue.length || 0 !== $.depth || w();
                }
                function v() {
                    $.blocking = !0, $.testTimeout && B.setTimeout && (U($.timeout), $.timeout = N(function() {
                        if (!$.current) throw new Error("Test timed out");
                        $.current.semaphore = 0, D.pushFailure("Test timed out", f(2)), b();
                    }, $.testTimeout));
                }
                function b() {
                    Q = !0, B.setTimeout ? N(function() {
                        $.current && $.current.semaphore > 0 || ($.timeout && U($.timeout), g());
                    }, 13) : g();
                }
                function w() {
                    var t, e;
                    $.autorun = !0, $.previousModule && p("moduleDone", {
                        name: $.previousModule.name,
                        tests: $.previousModule.tests,
                        failed: $.moduleStats.bad,
                        passed: $.moduleStats.all - $.moduleStats.bad,
                        total: $.moduleStats.all,
                        runtime: I() - $.moduleStats.started
                    }), delete $.previousModule, t = I() - $.started, e = $.stats.all - $.stats.bad, 
                    p("done", {
                        failed: $.stats.bad,
                        passed: e,
                        total: $.stats.all,
                        runtime: t
                    });
                }
                function x(t, e) {
                    return void 0 === t.testEnvironment && (t.testEnvironment = {}), function(s) {
                        t.testEnvironment[e] = s;
                    };
                }
                function k(t) {
                    var e, s;
                    for (++k.count, c(this, t), this.assertions = [], this.semaphore = 0, this.usedAsync = !1, 
                    this.module = $.currentModule, this.stack = f(3), e = 0, s = this.module.tests; e < s.length; e++) this.module.tests[e].name === this.testName && (this.testName += " ");
                    this.testId = C(this.module.name, this.testName), this.module.tests.push({
                        name: this.testName,
                        testId: this.testId
                    }), t.skip ? (this.callback = function() {}, this.async = !1, this.expected = 0) : this.assert = new R(this);
                }
                function C(t, e) {
                    for (var s, i = 0, n = 0, r = t + "" + e, o = r.length; i < o; i++) n = (n << 5) - n + r.charCodeAt(i), 
                    n |= 0;
                    return s = (4294967296 + n).toString(16), s.length < 8 && (s = "0000000" + s), s.slice(-8);
                }
                function M(t, e, s) {
                    var i, n = !e;
                    if ("array" !== D.objectType(t)) e ? $.queue.splice(W++, 0, t) : s ? (Y || (Y = _(s)), 
                    i = Math.floor(Y() * ($.queue.length - W + 1)), $.queue.splice(W + i, 0, t)) : $.queue.push(t), 
                    $.autorun && !$.blocking && y(n); else for (;t.length; ) M(t.shift());
                }
                function _(t) {
                    var e = parseInt(C(t), 16) || -1;
                    return function() {
                        return e ^= e << 13, e ^= e >>> 17, e ^= e << 5, e < 0 && (e += 4294967296), e / 4294967296;
                    };
                }
                function S() {
                    if ($.pollution = [], $.noglobals) for (var e in t) if (V.call(t, e)) {
                        if (/^qunit-test-output/.test(e)) continue;
                        $.pollution.push(e);
                    }
                }
                function E() {
                    var t, e, s = $.pollution;
                    S(), t = r($.pollution, s), t.length > 0 && D.pushFailure("Introduced global variable(s): " + t.join(", ")), 
                    e = r(s, $.pollution), e.length > 0 && D.pushFailure("Deleted global variable(s): " + e.join(", "));
                }
                function T(t, e, s) {
                    2 === arguments.length && (s = e, e = null), D.test(t, e, s, !0);
                }
                function A(t, e, s, i) {
                    if (!z) {
                        var n;
                        2 === arguments.length && (s = e, e = null), n = new k({
                            testName: t,
                            expected: e,
                            async: i,
                            callback: s
                        }), n.queue();
                    }
                }
                function q(t) {
                    if (!z) {
                        var e = new k({
                            testName: t,
                            skip: !0
                        });
                        e.queue();
                    }
                }
                function P(t, e, s, i) {
                    var n;
                    z || (D.config.queue.length = 0, z = !0, 2 === arguments.length && (s = e, e = null), 
                    n = new k({
                        testName: t,
                        expected: e,
                        async: i,
                        callback: s
                    }), n.queue());
                }
                function R(t) {
                    this.test = t;
                }
                function L(t) {
                    var e, s, i = t.toString();
                    return "[object" === i.substring(0, 7) ? (e = t.name ? t.name.toString() : "Error", 
                    s = t.message ? t.message.toString() : "", e && s ? e + ": " + s : e ? e : s ? s : "Error") : i;
                }
                var D = {}, O = t.Date, I = O.now || function() {
                    return new O().getTime();
                }, N = t.setTimeout, U = t.clearTimeout, j = t.window, B = {
                    document: j && void 0 !== j.document,
                    setTimeout: void 0 !== N,
                    sessionStorage: function() {
                        var t = "qunit-test-string";
                        try {
                            return sessionStorage.setItem(t, t), sessionStorage.removeItem(t), !0;
                        } catch (t) {
                            return !1;
                        }
                    }()
                }, F = (f(0) || "").replace(/(:\d+)+\)?/, "").replace(/.+\//, ""), H = !1, Q = !1, K = Object.prototype.toString, V = Object.prototype.hasOwnProperty, $ = {
                    queue: [],
                    blocking: !0,
                    reorder: !0,
                    altertitle: !0,
                    collapse: !0,
                    scrolltop: !0,
                    maxDepth: 5,
                    requireExpects: !1,
                    urlConfig: [],
                    modules: [],
                    moduleStack: [],
                    currentModule: {
                        name: "",
                        tests: []
                    },
                    callbacks: {}
                };
                $.modules.push($.currentModule);
                var G = {};
                !function() {
                    if (B.document) {
                        var t = j.onerror;
                        j.onerror = function(e, s, i) {
                            var n = !1;
                            if (t && (n = t(e, s, i)), n !== !0) {
                                if (D.config.current) {
                                    if (D.config.current.ignoreGlobalErrors) return !0;
                                    D.pushFailure(e, s + ":" + i);
                                } else D.test("global failure", c(function() {
                                    D.pushFailure(e, s + ":" + i);
                                }, {
                                    validTest: !0
                                }));
                                return !1;
                            }
                            return n;
                        };
                    }
                }(), D.isLocal = !(B.document && "file:" !== j.location.protocol), D.version = "1.23.1", 
                c(D, {
                    module: function(t, e, s) {
                        function i() {
                            var s = $.moduleStack.length ? $.moduleStack.slice(-1)[0] : null, i = null !== s ? [ s.name, t ].join(" > ") : t, n = {
                                name: i,
                                parentModule: s,
                                tests: [],
                                moduleId: C(i)
                            }, r = {};
                            return s && (c(r, s.testEnvironment), delete r.beforeEach, delete r.afterEach), 
                            c(r, e), n.testEnvironment = r, $.modules.push(n), n;
                        }
                        function n(t) {
                            $.currentModule = t;
                        }
                        var r, o, a = $.currentModule;
                        2 === arguments.length && "function" === l(e) && (s = e, e = void 0), e && e.setup && (e.beforeEach = e.setup, 
                        delete e.setup), e && e.teardown && (e.afterEach = e.teardown, delete e.teardown), 
                        r = i(), o = {
                            beforeEach: x(r, "beforeEach"),
                            afterEach: x(r, "afterEach")
                        }, "function" === l(s) && ($.moduleStack.push(r), n(r), s.call(r.testEnvironment, o), 
                        $.moduleStack.pop(), r = r.parentModule || a), n(r);
                    },
                    asyncTest: T,
                    test: A,
                    skip: q,
                    only: P,
                    start: function(t) {
                        var e = H;
                        if ($.current) {
                            if ($.current.semaphore -= t || 1, isNaN($.current.semaphore)) return $.current.semaphore = 0, 
                            void D.pushFailure("Called start() with a non-numeric decrement.", f(2));
                            if ($.current.semaphore > 0) return;
                            if ($.current.semaphore < 0) return $.current.semaphore = 0, void D.pushFailure("Called start() while already started (test's semaphore was 0 already)", f(2));
                        } else {
                            if (H = !0, Q) throw new Error("Called start() outside of a test context while already started");
                            if (e || t > 1) throw new Error("Called start() outside of a test context too many times");
                            if ($.autostart) throw new Error("Called start() outside of a test context when QUnit.config.autostart was true");
                            if (!$.pageLoaded) return void ($.autostart = !0);
                        }
                        b();
                    },
                    stop: function(t) {
                        if (!$.current) throw new Error("Called stop() outside of a test context");
                        $.current.semaphore += t || 1, v();
                    },
                    config: $,
                    is: u,
                    objectType: l,
                    extend: c,
                    load: function() {
                        $.pageLoaded = !0, c($, {
                            stats: {
                                all: 0,
                                bad: 0
                            },
                            moduleStats: {
                                all: 0,
                                bad: 0
                            },
                            started: 0,
                            updateRate: 1e3,
                            autostart: !0,
                            filter: ""
                        }, !0), $.blocking = !1, $.autostart && b();
                    },
                    stack: function(t) {
                        return t = (t || 0) + 2, f(t);
                    }
                }), d(D);
                var Y, z = !1, W = 0;
                k.count = 0, k.prototype = {
                    before: function() {
                        this.module === $.previousModule && V.call($, "previousModule") || (V.call($, "previousModule") && p("moduleDone", {
                            name: $.previousModule.name,
                            tests: $.previousModule.tests,
                            failed: $.moduleStats.bad,
                            passed: $.moduleStats.all - $.moduleStats.bad,
                            total: $.moduleStats.all,
                            runtime: I() - $.moduleStats.started
                        }), $.previousModule = this.module, $.moduleStats = {
                            all: 0,
                            bad: 0,
                            started: I()
                        }, p("moduleStart", {
                            name: this.module.name,
                            tests: this.module.tests
                        })), $.current = this, this.module.testEnvironment && (delete this.module.testEnvironment.beforeEach, 
                        delete this.module.testEnvironment.afterEach), this.testEnvironment = c({}, this.module.testEnvironment), 
                        this.started = I(), p("testStart", {
                            name: this.testName,
                            module: this.module.name,
                            testId: this.testId
                        }), $.pollution || S();
                    },
                    run: function() {
                        function t(t) {
                            e = t.callback.call(t.testEnvironment, t.assert), t.resolvePromise(e);
                        }
                        var e;
                        if ($.current = this, this.async && D.stop(), this.callbackStarted = I(), $.notrycatch) return void t(this);
                        try {
                            t(this);
                        } catch (t) {
                            this.pushFailure("Died on test #" + (this.assertions.length + 1) + " " + this.stack + ": " + (t.message || t), h(t, 0)), 
                            S(), $.blocking && D.start();
                        }
                    },
                    after: function() {
                        E();
                    },
                    queueHook: function(t, e) {
                        var s, i = this;
                        return function() {
                            function n() {
                                s = t.call(i.testEnvironment, i.assert), i.resolvePromise(s, e);
                            }
                            if ($.current = i, $.notrycatch) return void n();
                            try {
                                n();
                            } catch (t) {
                                i.pushFailure(e + " failed on " + i.testName + ": " + (t.message || t), h(t, 0));
                            }
                        };
                    },
                    hooks: function(t) {
                        function e(i, n) {
                            n.parentModule && e(i, n.parentModule), n.testEnvironment && "function" === D.objectType(n.testEnvironment[t]) && s.push(i.queueHook(n.testEnvironment[t], t));
                        }
                        var s = [];
                        return this.skip || e(this, this.module), s;
                    },
                    finish: function() {
                        $.current = this, $.requireExpects && null === this.expected ? this.pushFailure("Expected number of assertions to be defined, but expect() was not called.", this.stack) : null !== this.expected && this.expected !== this.assertions.length ? this.pushFailure("Expected " + this.expected + " assertions, but " + this.assertions.length + " were run", this.stack) : null !== this.expected || this.assertions.length || this.pushFailure("Expected at least one assertion, but none were run - call expect(0) to accept zero assertions.", this.stack);
                        var t, e = 0;
                        for (this.runtime = I() - this.started, $.stats.all += this.assertions.length, $.moduleStats.all += this.assertions.length, 
                        t = 0; t < this.assertions.length; t++) this.assertions[t].result || (e++, $.stats.bad++, 
                        $.moduleStats.bad++);
                        p("testDone", {
                            name: this.testName,
                            module: this.module.name,
                            skipped: !!this.skip,
                            failed: e,
                            passed: this.assertions.length - e,
                            total: this.assertions.length,
                            runtime: this.runtime,
                            assertions: this.assertions,
                            testId: this.testId,
                            source: this.stack,
                            duration: this.runtime
                        }), D.reset(), $.current = void 0;
                    },
                    queue: function() {
                        function t() {
                            M([ function() {
                                s.before();
                            }, s.hooks("beforeEach"), function() {
                                s.run();
                            }, s.hooks("afterEach").reverse(), function() {
                                s.after();
                            }, function() {
                                s.finish();
                            } ]);
                        }
                        var e, s = this;
                        if (this.valid()) return e = D.config.reorder && B.sessionStorage && +sessionStorage.getItem("qunit-test-" + this.module.name + "-" + this.testName), 
                        M(t, e, $.seed);
                    },
                    pushResult: function(t) {
                        var e, s = {
                            module: this.module.name,
                            name: this.testName,
                            result: t.result,
                            message: t.message,
                            actual: t.actual,
                            expected: t.expected,
                            testId: this.testId,
                            negative: t.negative || !1,
                            runtime: I() - this.started
                        };
                        t.result || (e = f(), e && (s.source = e)), p("log", s), this.assertions.push({
                            result: !!t.result,
                            message: t.message
                        });
                    },
                    pushFailure: function(t, e, s) {
                        if (!(this instanceof k)) throw new Error("pushFailure() assertion outside test context, was " + f(2));
                        var i = {
                            module: this.module.name,
                            name: this.testName,
                            result: !1,
                            message: t || "error",
                            actual: s || null,
                            testId: this.testId,
                            runtime: I() - this.started
                        };
                        e && (i.source = e), p("log", i), this.assertions.push({
                            result: !1,
                            message: t
                        });
                    },
                    resolvePromise: function(t, e) {
                        var s, i, n = this;
                        null != t && (s = t.then, "function" === D.objectType(s) && (D.stop(), s.call(t, function() {
                            D.start();
                        }, function(t) {
                            i = "Promise rejected " + (e ? e.replace(/Each$/, "") : "during") + " " + n.testName + ": " + (t.message || t), 
                            n.pushFailure(i, h(t, 0)), S(), D.start();
                        })));
                    },
                    valid: function() {
                        function t(e) {
                            var s = e.name ? e.name.toLowerCase() : null;
                            return s === n || !!e.parentModule && t(e.parentModule);
                        }
                        function e(t) {
                            return o(t.moduleId, $.moduleId) > -1 || t.parentModule && e(t.parentModule);
                        }
                        var s = $.filter, i = /^(!?)\/([\w\W]*)\/(i?$)/.exec(s), n = $.module && $.module.toLowerCase(), r = this.module.name + ": " + this.testName;
                        return !(!this.callback || !this.callback.validTest) || !($.moduleId && $.moduleId.length > 0 && !e(this.module)) && (!($.testId && $.testId.length > 0 && o(this.testId, $.testId) < 0) && (!(n && !t(this.module)) && (!s || (i ? this.regexFilter(!!i[1], i[2], i[3], r) : this.stringFilter(s, r)))));
                    },
                    regexFilter: function(t, e, s, i) {
                        var n = new RegExp(e, s), r = n.test(i);
                        return r !== t;
                    },
                    stringFilter: function(t, e) {
                        t = t.toLowerCase(), e = e.toLowerCase();
                        var s = "!" !== t.charAt(0);
                        return s || (t = t.slice(1)), e.indexOf(t) !== -1 ? s : !s;
                    }
                }, D.reset = function() {
                    if (B.document) {
                        var t = B.document && document.getElementById && document.getElementById("qunit-fixture");
                        t && (t.innerHTML = $.fixture);
                    }
                }, D.pushFailure = function() {
                    if (!D.config.current) throw new Error("pushFailure() assertion outside test context, in " + f(2));
                    var t = D.config.current;
                    return t.pushFailure.apply(t, arguments);
                }, D.assert = R.prototype = {
                    expect: function(t) {
                        return 1 !== arguments.length ? this.test.expected : void (this.test.expected = t);
                    },
                    async: function(t) {
                        var e = this.test, s = !1, i = t;
                        return "undefined" == typeof i && (i = 1), e.semaphore += 1, e.usedAsync = !0, v(), 
                        function() {
                            return s ? void e.pushFailure("Too many calls to the `assert.async` callback", f(2)) : (i -= 1, 
                            void (i > 0 || (e.semaphore -= 1, s = !0, b())));
                        };
                    },
                    push: function(t, e, s, i, n) {
                        var r = this instanceof R ? this : D.config.current.assert;
                        return r.pushResult({
                            result: t,
                            actual: e,
                            expected: s,
                            message: i,
                            negative: n
                        });
                    },
                    pushResult: function(t) {
                        var e = this, s = e instanceof R && e.test || D.config.current;
                        if (!s) throw new Error("assertion outside test context, in " + f(2));
                        return s.usedAsync === !0 && 0 === s.semaphore && s.pushFailure("Assertion after the final `assert.async` was resolved", f(2)), 
                        e instanceof R || (e = s.assert), e.test.pushResult(t);
                    },
                    ok: function(t, e) {
                        e = e || (t ? "okay" : "failed, expected argument to be truthy, was: " + D.dump.parse(t)), 
                        this.pushResult({
                            result: !!t,
                            actual: t,
                            expected: !0,
                            message: e
                        });
                    },
                    notOk: function(t, e) {
                        e = e || (t ? "failed, expected argument to be falsy, was: " + D.dump.parse(t) : "okay"), 
                        this.pushResult({
                            result: !t,
                            actual: t,
                            expected: !1,
                            message: e
                        });
                    },
                    equal: function(t, e, s) {
                        this.pushResult({
                            result: e == t,
                            actual: t,
                            expected: e,
                            message: s
                        });
                    },
                    notEqual: function(t, e, s) {
                        this.pushResult({
                            result: e != t,
                            actual: t,
                            expected: e,
                            message: s,
                            negative: !0
                        });
                    },
                    propEqual: function(t, e, s) {
                        t = a(t), e = a(e), this.pushResult({
                            result: D.equiv(t, e),
                            actual: t,
                            expected: e,
                            message: s
                        });
                    },
                    notPropEqual: function(t, e, s) {
                        t = a(t), e = a(e), this.pushResult({
                            result: !D.equiv(t, e),
                            actual: t,
                            expected: e,
                            message: s,
                            negative: !0
                        });
                    },
                    deepEqual: function(t, e, s) {
                        this.pushResult({
                            result: D.equiv(t, e),
                            actual: t,
                            expected: e,
                            message: s
                        });
                    },
                    notDeepEqual: function(t, e, s) {
                        this.pushResult({
                            result: !D.equiv(t, e),
                            actual: t,
                            expected: e,
                            message: s,
                            negative: !0
                        });
                    },
                    strictEqual: function(t, e, s) {
                        this.pushResult({
                            result: e === t,
                            actual: t,
                            expected: e,
                            message: s
                        });
                    },
                    notStrictEqual: function(t, e, s) {
                        this.pushResult({
                            result: e !== t,
                            actual: t,
                            expected: e,
                            message: s,
                            negative: !0
                        });
                    },
                    throws: function(t, e, s) {
                        var i, n, r = e, o = !1, a = this instanceof R && this.test || D.config.current;
                        null == s && "string" == typeof e && (s = e, e = null), a.ignoreGlobalErrors = !0;
                        try {
                            t.call(a.testEnvironment);
                        } catch (t) {
                            i = t;
                        }
                        a.ignoreGlobalErrors = !1, i && (n = D.objectType(e), e ? "regexp" === n ? o = e.test(L(i)) : "string" === n ? o = e === L(i) : "function" === n && i instanceof e ? o = !0 : "object" === n ? o = i instanceof e.constructor && i.name === e.name && i.message === e.message : "function" === n && e.call({}, i) === !0 && (r = null, 
                        o = !0) : (o = !0, r = null)), a.assert.pushResult({
                            result: o,
                            actual: i,
                            expected: r,
                            message: s
                        });
                    }
                }, function() {
                    R.prototype.raises = R.prototype.throws;
                }(), D.equiv = function() {
                    function t(t, e) {
                        return "object" == typeof e && (e = e.valueOf()), "object" == typeof t && (t = t.valueOf()), 
                        e === t;
                    }
                    function e(t, e) {
                        var s = c(t), i = c(e);
                        return t.constructor === e.constructor || (s && null === s.constructor && (s = null), 
                        i && null === i.constructor && (i = null), null === s && i === Object.prototype || null === i && s === Object.prototype);
                    }
                    function s(t) {
                        return "flags" in t ? t.flags : t.toString().match(/[gimuy]*$/)[0];
                    }
                    function i(t, e) {
                        var s = D.objectType(t);
                        return D.objectType(e) === s && l[s](e, t);
                    }
                    function n(t, e) {
                        return arguments.length < 2 || (t === e || i(t, e)) && (2 === arguments.length || n.apply(this, [].slice.call(arguments, 1)));
                    }
                    var r = [], o = [], a = [], c = Object.getPrototypeOf || function(t) {
                        return t.__proto__;
                    }, l = {
                        string: t,
                        boolean: t,
                        number: t,
                        null: t,
                        undefined: t,
                        symbol: t,
                        date: t,
                        nan: function() {
                            return !0;
                        },
                        regexp: function(t, e) {
                            return e.source === t.source && s(e) === s(t);
                        },
                        function: function() {
                            var t = r[r.length - 1];
                            return t !== Object && "undefined" != typeof t;
                        },
                        array: function(t, e) {
                            var s, i, r, c, l, u;
                            if (r = e.length, r !== t.length) return !1;
                            for (o.push(e), a.push(t), s = 0; s < r; s++) {
                                for (c = !1, i = 0; i < o.length; i++) if (l = o[i] === e[s], u = a[i] === t[s], 
                                l || u) {
                                    if (!(e[s] === t[s] || l && u)) return o.pop(), a.pop(), !1;
                                    c = !0;
                                }
                                if (!c && !n(e[s], t[s])) return o.pop(), a.pop(), !1;
                            }
                            return o.pop(), a.pop(), !0;
                        },
                        set: function(t, e) {
                            var s, i = !0;
                            return e.size === t.size && (e.forEach(function(e) {
                                s = !1, t.forEach(function(t) {
                                    n(t, e) && (s = !0);
                                }), s || (i = !1);
                            }), i);
                        },
                        map: function(t, e) {
                            var s, i = !0;
                            return e.size === t.size && (e.forEach(function(e, r) {
                                s = !1, t.forEach(function(t, i) {
                                    n([ t, i ], [ e, r ]) && (s = !0);
                                }), s || (i = !1);
                            }), i);
                        },
                        object: function(t, s) {
                            var i, c, l, u, h, f = !0, d = [], p = [];
                            if (e(s, t) === !1) return !1;
                            r.push(s.constructor), o.push(s), a.push(t);
                            for (i in s) {
                                for (l = !1, c = 0; c < o.length; c++) if (u = o[c] === s[i], h = a[c] === t[i], 
                                u || h) {
                                    if (!(s[i] === t[i] || u && h)) {
                                        f = !1;
                                        break;
                                    }
                                    l = !0;
                                }
                                if (d.push(i), !l && !n(s[i], t[i])) {
                                    f = !1;
                                    break;
                                }
                            }
                            o.pop(), a.pop(), r.pop();
                            for (i in t) p.push(i);
                            return f && n(d.sort(), p.sort());
                        }
                    };
                    return n;
                }(), D.dump = function() {
                    function t(t) {
                        return '"' + t.toString().replace(/\\/g, "\\\\").replace(/"/g, '\\"') + '"';
                    }
                    function e(t) {
                        return t + "";
                    }
                    function s(t, e, s) {
                        var i = r.separator(), n = r.indent(), o = r.indent(1);
                        return e.join && (e = e.join("," + i + o)), e ? [ t, o + e, n + s ].join(i) : t + s;
                    }
                    function i(t, e) {
                        var i = t.length, n = new Array(i);
                        if (r.maxDepth && r.depth > r.maxDepth) return "[object Array]";
                        for (this.up(); i--; ) n[i] = this.parse(t[i], void 0, e);
                        return this.down(), s("[", n, "]");
                    }
                    var n = /^function (\w+)/, r = {
                        parse: function(t, e, s) {
                            s = s || [];
                            var i, n, r, a = o(t, s);
                            return a !== -1 ? "recursion(" + (a - s.length) + ")" : (e = e || this.typeOf(t), 
                            n = this.parsers[e], r = typeof n, "function" === r ? (s.push(t), i = n.call(this, t, s), 
                            s.pop(), i) : "string" === r ? n : this.parsers.error);
                        },
                        typeOf: function(t) {
                            var e;
                            return e = null === t ? "null" : "undefined" == typeof t ? "undefined" : D.is("regexp", t) ? "regexp" : D.is("date", t) ? "date" : D.is("function", t) ? "function" : void 0 !== t.setInterval && void 0 !== t.document && void 0 === t.nodeType ? "window" : 9 === t.nodeType ? "document" : t.nodeType ? "node" : "[object Array]" === K.call(t) || "number" == typeof t.length && void 0 !== t.item && (t.length ? t.item(0) === t[0] : null === t.item(0) && void 0 === t[0]) ? "array" : t.constructor === Error.prototype.constructor ? "error" : typeof t;
                        },
                        separator: function() {
                            return this.multiline ? this.HTML ? "<br />" : "\n" : this.HTML ? "&#160;" : " ";
                        },
                        indent: function(t) {
                            if (!this.multiline) return "";
                            var e = this.indentChar;
                            return this.HTML && (e = e.replace(/\t/g, "   ").replace(/ /g, "&#160;")), new Array(this.depth + (t || 0)).join(e);
                        },
                        up: function(t) {
                            this.depth += t || 1;
                        },
                        down: function(t) {
                            this.depth -= t || 1;
                        },
                        setParser: function(t, e) {
                            this.parsers[t] = e;
                        },
                        quote: t,
                        literal: e,
                        join: s,
                        depth: 1,
                        maxDepth: D.config.maxDepth,
                        parsers: {
                            window: "[Window]",
                            document: "[Document]",
                            error: function(t) {
                                return 'Error("' + t.message + '")';
                            },
                            unknown: "[Unknown]",
                            null: "null",
                            undefined: "undefined",
                            function: function(t) {
                                var e = "function", i = "name" in t ? t.name : (n.exec(t) || [])[1];
                                return i && (e += " " + i), e += "(", e = [ e, r.parse(t, "functionArgs"), "){" ].join(""), 
                                s(e, r.parse(t, "functionCode"), "}");
                            },
                            array: i,
                            nodelist: i,
                            arguments: i,
                            object: function(t, e) {
                                var i, n, a, c, l, u = [];
                                if (r.maxDepth && r.depth > r.maxDepth) return "[object Object]";
                                r.up(), i = [];
                                for (n in t) i.push(n);
                                l = [ "message", "name" ];
                                for (c in l) n = l[c], n in t && o(n, i) < 0 && i.push(n);
                                for (i.sort(), c = 0; c < i.length; c++) n = i[c], a = t[n], u.push(r.parse(n, "key") + ": " + r.parse(a, void 0, e));
                                return r.down(), s("{", u, "}");
                            },
                            node: function(t) {
                                var e, s, i, n = r.HTML ? "&lt;" : "<", o = r.HTML ? "&gt;" : ">", a = t.nodeName.toLowerCase(), c = n + a, l = t.attributes;
                                if (l) for (s = 0, e = l.length; s < e; s++) i = l[s].nodeValue, i && "inherit" !== i && (c += " " + l[s].nodeName + "=" + r.parse(i, "attribute"));
                                return c += o, 3 !== t.nodeType && 4 !== t.nodeType || (c += t.nodeValue), c + n + "/" + a + o;
                            },
                            functionArgs: function(t) {
                                var e, s = t.length;
                                if (!s) return "";
                                for (e = new Array(s); s--; ) e[s] = String.fromCharCode(97 + s);
                                return " " + e.join(", ") + " ";
                            },
                            key: t,
                            functionCode: "[code]",
                            attribute: t,
                            string: t,
                            date: t,
                            regexp: e,
                            number: e,
                            boolean: e
                        },
                        HTML: !1,
                        indentChar: "  ",
                        multiline: !0
                    };
                    return r;
                }(), D.jsDump = D.dump, function() {
                    function t(t) {
                        return function() {
                            var e = new R(D.config.current);
                            t.apply(e, arguments);
                        };
                    }
                    var e, s = R.prototype;
                    for (e in s) D[e] = t(s[e]);
                }(), B.document && (!function() {
                    var t, e, s = [ "test", "module", "expect", "asyncTest", "start", "stop", "ok", "notOk", "equal", "notEqual", "propEqual", "notPropEqual", "deepEqual", "notDeepEqual", "strictEqual", "notStrictEqual", "throws", "raises" ];
                    for (t = 0, e = s.length; t < e; t++) j[s[t]] = D[s[t]];
                }(), j.QUnit = D), "undefined" != typeof n && n && n.exports && (n.exports = D, 
                n.exports.QUnit = D), "undefined" != typeof e && e && (e.QUnit = D), i = function() {
                    return D;
                }.call(e, s, e, n), !(void 0 !== i && (n.exports = i)), D.config.autostart = !1;
            }(function() {
                return this;
            }()), function() {
                function t() {
                    var t, e, s, i, n = {}, r = A.search.slice(1).split("&"), o = r.length;
                    for (t = 0; t < o; t++) r[t] && (e = r[t].split("="), s = decodeURIComponent(e[0]), 
                    i = 1 === e.length || decodeURIComponent(e.slice(1).join("=")), n[s] ? n[s] = [].concat(n[s], i) : n[s] = i);
                    return n;
                }
                function e(t) {
                    return t ? (t += "", t.replace(/['"<>&]/g, function(t) {
                        switch (t) {
                          case "'":
                            return "&#039;";

                          case '"':
                            return "&quot;";

                          case "<":
                            return "&lt;";

                          case ">":
                            return "&gt;";

                          case "&":
                            return "&amp;";
                        }
                    })) : "";
                }
                function s(t, e, s) {
                    t.addEventListener ? t.addEventListener(e, s, !1) : t.attachEvent && t.attachEvent("on" + e, function() {
                        var e = window.event;
                        e.target || (e.target = e.srcElement || R), s.call(t, e);
                    });
                }
                function i(t, e, i) {
                    for (var n = t.length; n--; ) s(t[n], e, i);
                }
                function n(t, e) {
                    return (" " + t.className + " ").indexOf(" " + e + " ") >= 0;
                }
                function r(t, e) {
                    n(t, e) || (t.className += (t.className ? " " : "") + e);
                }
                function o(t, e, s) {
                    s || "undefined" == typeof s && !n(t, e) ? r(t, e) : a(t, e);
                }
                function a(t, e) {
                    for (var s = " " + t.className + " "; s.indexOf(" " + e + " ") >= 0; ) s = s.replace(" " + e + " ", " ");
                    t.className = "function" == typeof s.trim ? s.trim() : s.replace(/^\s+|\s+$/g, "");
                }
                function c(t) {
                    return R.getElementById && R.getElementById(t);
                }
                function l() {
                    var t, s, i, n, r, o = !1, a = P.urlConfig, c = "";
                    for (t = 0; t < a.length; t++) if (i = P.urlConfig[t], "string" == typeof i && (i = {
                        id: i,
                        label: i
                    }), n = e(i.id), r = e(i.tooltip), i.value && "string" != typeof i.value) {
                        if (c += "<label for='qunit-urlconfig-" + n + "' title='" + r + "'>" + i.label + ": </label><select id='qunit-urlconfig-" + n + "' name='" + n + "' title='" + r + "'><option></option>", 
                        QUnit.is("array", i.value)) for (s = 0; s < i.value.length; s++) n = e(i.value[s]), 
                        c += "<option value='" + n + "'" + (P[i.id] === i.value[s] ? (o = !0) && " selected='selected'" : "") + ">" + n + "</option>"; else for (s in i.value) D.call(i.value, s) && (c += "<option value='" + e(s) + "'" + (P[i.id] === s ? (o = !0) && " selected='selected'" : "") + ">" + e(i.value[s]) + "</option>");
                        P[i.id] && !o && (n = e(P[i.id]), c += "<option value='" + n + "' selected='selected' disabled='disabled'>" + n + "</option>"), 
                        c += "</select>";
                    } else c += "<input id='qunit-urlconfig-" + n + "' name='" + n + "' type='checkbox'" + (i.value ? " value='" + e(i.value) + "'" : "") + (P[i.id] ? " checked='checked'" : "") + " title='" + r + "' /><label for='qunit-urlconfig-" + n + "' title='" + r + "'>" + i.label + "</label>";
                    return c;
                }
                function u() {
                    var t, e, s, i = this, n = {};
                    e = "selectedIndex" in i ? i.options[i.selectedIndex].value || void 0 : i.checked ? i.defaultValue || !0 : void 0, 
                    n[i.name] = e, t = h(n), "hidepassed" === i.name && "replaceState" in window.history ? (QUnit.urlParams[i.name] = e, 
                    P[i.name] = e || !1, s = c("qunit-tests"), s && o(s, "hidepass", e || !1), window.history.replaceState(null, "", t)) : window.location = t;
                }
                function h(t) {
                    var e, s, i, n = "?", r = window.location;
                    t = QUnit.extend(QUnit.extend({}, QUnit.urlParams), t);
                    for (e in t) if (D.call(t, e) && void 0 !== t[e]) for (s = [].concat(t[e]), i = 0; i < s.length; i++) n += encodeURIComponent(e), 
                    s[i] !== !0 && (n += "=" + encodeURIComponent(s[i])), n += "&";
                    return r.protocol + "//" + r.host + r.pathname + n.slice(0, -1);
                }
                function f() {
                    var t, e = c("qunit-modulefilter"), s = c("qunit-filter-input").value;
                    t = e ? decodeURIComponent(e.options[e.selectedIndex].value) : void 0, window.location = h({
                        module: "" === t ? void 0 : t,
                        filter: "" === s ? void 0 : s,
                        moduleId: void 0,
                        testId: void 0
                    });
                }
                function d() {
                    var t = R.createElement("span");
                    return t.innerHTML = l(), r(t, "qunit-url-config"), i(t.getElementsByTagName("input"), "click", u), 
                    i(t.getElementsByTagName("select"), "change", u), t;
                }
                function p() {
                    var t = R.createElement("form"), e = R.createElement("label"), i = R.createElement("input"), n = R.createElement("button");
                    return r(t, "qunit-filter"), e.innerHTML = "Filter: ", i.type = "text", i.value = P.filter || "", 
                    i.name = "filter", i.id = "qunit-filter-input", n.innerHTML = "Go", e.appendChild(i), 
                    t.appendChild(e), t.appendChild(n), s(t, "submit", function(t) {
                        return f(), t && t.preventDefault && t.preventDefault(), !1;
                    }), t;
                }
                function m() {
                    var t, s = "";
                    if (!N.length) return !1;
                    for (s += "<label for='qunit-modulefilter'>Module: </label><select id='qunit-modulefilter' name='modulefilter'><option value='' " + (void 0 === QUnit.urlParams.module ? "selected='selected'" : "") + ">< All Modules ></option>", 
                    t = 0; t < N.length; t++) s += "<option value='" + e(encodeURIComponent(N[t])) + "' " + (QUnit.urlParams.module === N[t] ? "selected='selected'" : "") + ">" + e(N[t]) + "</option>";
                    return s += "</select>";
                }
                function g() {
                    var t = c("qunit-testrunner-toolbar"), e = R.createElement("span"), i = m();
                    return !(!t || !i) && (e.setAttribute("id", "qunit-modulefilter-container"), e.innerHTML = i, 
                    s(e.lastChild, "change", f), void t.appendChild(e));
                }
                function y() {
                    var t = c("qunit-testrunner-toolbar");
                    t && (t.appendChild(d()), t.appendChild(p()), g());
                }
                function v() {
                    var t = c("qunit-header");
                    t && (t.innerHTML = "<a href='" + e(O) + "'>" + t.innerHTML + "</a> ");
                }
                function b() {
                    var t = c("qunit-banner");
                    t && (t.className = "");
                }
                function w() {
                    var t = c("qunit-tests"), e = c("qunit-testresult");
                    e && e.parentNode.removeChild(e), t && (t.innerHTML = "", e = R.createElement("p"), 
                    e.id = "qunit-testresult", e.className = "result", t.parentNode.insertBefore(e, t), 
                    e.innerHTML = "Running...<br />&#160;");
                }
                function x() {
                    var t = c("qunit-fixture");
                    t && (P.fixture = t.innerHTML);
                }
                function k() {
                    var t = QUnit.config.testId;
                    return !t || t.length <= 0 ? "" : "<div id='qunit-filteredTest'>Rerunning selected tests: " + e(t.join(", ")) + " <a id='qunit-clearFilter' href='" + e(O) + "'>Run all tests</a></div>";
                }
                function C() {
                    var t = c("qunit-userAgent");
                    t && (t.innerHTML = "", t.appendChild(R.createTextNode("QUnit " + QUnit.version + "; " + navigator.userAgent)));
                }
                function M() {
                    var t = c("qunit");
                    t && (t.innerHTML = "<h1 id='qunit-header'>" + e(R.title) + "</h1><h2 id='qunit-banner'></h2><div id='qunit-testrunner-toolbar'></div>" + k() + "<h2 id='qunit-userAgent'></h2><ol id='qunit-tests'></ol>"), 
                    v(), b(), w(), C(), y();
                }
                function _(t) {
                    var e, s, i, n, r, o;
                    for (e = 0, s = t.length; e < s; e++) for (o = t[e], i = 0, n = o.tests.length; i < n; i++) r = o.tests[i], 
                    S(r.name, r.testId, o.name);
                }
                function S(t, e, s) {
                    var i, n, r, o, a = c("qunit-tests");
                    a && (i = R.createElement("strong"), i.innerHTML = E(t, s), n = R.createElement("a"), 
                    n.innerHTML = "Rerun", n.href = h({
                        testId: e
                    }), r = R.createElement("li"), r.appendChild(i), r.appendChild(n), r.id = "qunit-test-output-" + e, 
                    o = R.createElement("ol"), o.className = "qunit-assert-list", r.appendChild(o), 
                    a.appendChild(r));
                }
                function E(t, s) {
                    var i = "";
                    return s && (i = "<span class='module-name'>" + e(s) + "</span>: "), i += "<span class='test-name'>" + e(t) + "</span>";
                }
                function T(t) {
                    return t.replace(/<\/?[^>]+(>|$)/g, "").replace(/\&quot;/g, "").replace(/\s+/g, "");
                }
                var A = "undefined" != typeof window && window.location;
                if (A) {
                    var q = t();
                    if (QUnit.urlParams = q, QUnit.config.moduleId = [].concat(q.moduleId || []), QUnit.config.testId = [].concat(q.testId || []), 
                    QUnit.config.module = q.module, QUnit.config.filter = q.filter, q.seed === !0 ? QUnit.config.seed = Math.random().toString(36).slice(2) : q.seed && (QUnit.config.seed = q.seed), 
                    QUnit.config.urlConfig.push({
                        id: "hidepassed",
                        label: "Hide passed tests",
                        tooltip: "Only show tests and assertions that fail. Stored as query-strings."
                    }, {
                        id: "noglobals",
                        label: "Check for Globals",
                        tooltip: "Enabling this will test if any test introduces new properties on the global object (`window` in Browsers). Stored as query-strings."
                    }, {
                        id: "notrycatch",
                        label: "No try-catch",
                        tooltip: "Enabling this will run tests outside of a try-catch block. Makes debugging exceptions in IE reasonable. Stored as query-strings."
                    }), QUnit.begin(function() {
                        var t, e, s = QUnit.config.urlConfig;
                        for (t = 0; t < s.length; t++) e = QUnit.config.urlConfig[t], "string" != typeof e && (e = e.id), 
                        void 0 === QUnit.config[e] && (QUnit.config[e] = q[e]);
                    }), "undefined" != typeof window && window.document) {
                        QUnit.init = function() {
                            var t = QUnit.config;
                            t.stats = {
                                all: 0,
                                bad: 0
                            }, t.moduleStats = {
                                all: 0,
                                bad: 0
                            }, t.started = 0, t.updateRate = 1e3, t.blocking = !1, t.autostart = !0, t.autorun = !1, 
                            t.filter = "", t.queue = [], M();
                        };
                        var P = QUnit.config, R = window.document, L = !1, D = Object.prototype.hasOwnProperty, O = h({
                            filter: void 0,
                            module: void 0,
                            moduleId: void 0,
                            testId: void 0
                        }), I = {
                            sessionStorage: function() {
                                var t = "qunit-test-string";
                                try {
                                    return sessionStorage.setItem(t, t), sessionStorage.removeItem(t), !0;
                                } catch (t) {
                                    return !1;
                                }
                            }()
                        }, N = [];
                        QUnit.begin(function(t) {
                            var e, s, i;
                            for (e = 0; e < t.modules.length; e++) s = t.modules[e], s.name && N.push(s.name);
                            N.sort(function(t, e) {
                                return t.localeCompare(e);
                            }), x(), M(), _(t.modules), i = c("qunit-tests"), i && P.hidepassed && r(i, "hidepass");
                        }), QUnit.done(function(t) {
                            var e, s, i = c("qunit-banner"), n = c("qunit-tests"), r = [ "Tests completed in ", t.runtime, " milliseconds.<br />", "<span class='passed'>", t.passed, "</span> assertions of <span class='total'>", t.total, "</span> passed, <span class='failed'>", t.failed, "</span> failed." ].join("");
                            if (i && (i.className = t.failed ? "qunit-fail" : "qunit-pass"), n && (c("qunit-testresult").innerHTML = r), 
                            P.altertitle && R.title && (R.title = [ t.failed ? "✖" : "✔", R.title.replace(/^[\u2714\u2716] /i, "") ].join(" ")), 
                            P.reorder && I.sessionStorage && 0 === t.failed) for (e = 0; e < sessionStorage.length; e++) s = sessionStorage.key(e++), 
                            0 === s.indexOf("qunit-test-") && sessionStorage.removeItem(s);
                            P.scrolltop && window.scrollTo && window.scrollTo(0, 0);
                        }), QUnit.testStart(function(t) {
                            var e, s, i;
                            s = c("qunit-test-output-" + t.testId), s ? s.className = "running" : S(t.name, t.testId, t.module), 
                            e = c("qunit-testresult"), e && (i = QUnit.config.reorder && I.sessionStorage && +sessionStorage.getItem("qunit-test-" + t.module + "-" + t.name), 
                            e.innerHTML = (i ? "Rerunning previously failed test: <br />" : "Running: <br />") + E(t.name, t.module));
                        }), QUnit.log(function(t) {
                            var s, i, n, r, o, a, l = !1, u = c("qunit-test-output-" + t.testId);
                            u && (n = e(t.message) || (t.result ? "okay" : "failed"), n = "<span class='test-message'>" + n + "</span>", 
                            n += "<span class='runtime'>@ " + t.runtime + " ms</span>", !t.result && D.call(t, "expected") ? (r = t.negative ? "NOT " + QUnit.dump.parse(t.expected) : QUnit.dump.parse(t.expected), 
                            o = QUnit.dump.parse(t.actual), n += "<table><tr class='test-expected'><th>Expected: </th><td><pre>" + e(r) + "</pre></td></tr>", 
                            o !== r ? (n += "<tr class='test-actual'><th>Result: </th><td><pre>" + e(o) + "</pre></td></tr>", 
                            /^(true|false)$/.test(o) || /^(true|false)$/.test(r) || (a = QUnit.diff(r, o), l = T(a).length !== T(r).length + T(o).length), 
                            l && (n += "<tr class='test-diff'><th>Diff: </th><td><pre>" + a + "</pre></td></tr>")) : n += r.indexOf("[object Array]") !== -1 || r.indexOf("[object Object]") !== -1 ? "<tr class='test-message'><th>Message: </th><td>Diff suppressed as the depth of object is more than current max depth (" + QUnit.config.maxDepth + ").<p>Hint: Use <code>QUnit.dump.maxDepth</code> to  run with a higher max depth or <a href='" + e(h({
                                maxDepth: -1
                            })) + "'>Rerun</a> without max depth.</p></td></tr>" : "<tr class='test-message'><th>Message: </th><td>Diff suppressed as the expected and actual results have an equivalent serialization</td></tr>", 
                            t.source && (n += "<tr class='test-source'><th>Source: </th><td><pre>" + e(t.source) + "</pre></td></tr>"), 
                            n += "</table>") : !t.result && t.source && (n += "<table><tr class='test-source'><th>Source: </th><td><pre>" + e(t.source) + "</pre></td></tr></table>"), 
                            s = u.getElementsByTagName("ol")[0], i = R.createElement("li"), i.className = t.result ? "pass" : "fail", 
                            i.innerHTML = n, s.appendChild(i));
                        }), QUnit.testDone(function(t) {
                            var e, i, n, a, l, u, h, f, d, p = c("qunit-tests");
                            p && (n = c("qunit-test-output-" + t.testId), a = n.getElementsByTagName("ol")[0], 
                            l = t.passed, u = t.failed, P.reorder && I.sessionStorage && (u ? sessionStorage.setItem("qunit-test-" + t.module + "-" + t.name, u) : sessionStorage.removeItem("qunit-test-" + t.module + "-" + t.name)), 
                            0 === u ? r(a, "qunit-collapsed") : u && P.collapse && !L ? L = !0 : r(a, "qunit-collapsed"), 
                            e = n.firstChild, h = u ? "<b class='failed'>" + u + "</b>, <b class='passed'>" + l + "</b>, " : "", 
                            e.innerHTML += " <b class='counts'>(" + h + t.assertions.length + ")</b>", t.skipped ? (n.className = "skipped", 
                            f = R.createElement("em"), f.className = "qunit-skipped-label", f.innerHTML = "skipped", 
                            n.insertBefore(f, e)) : (s(e, "click", function() {
                                o(a, "qunit-collapsed");
                            }), n.className = u ? "fail" : "pass", i = R.createElement("span"), i.className = "runtime", 
                            i.innerHTML = t.runtime + " ms", n.insertBefore(i, a)), t.source && (d = R.createElement("p"), 
                            d.innerHTML = "<strong>Source: </strong>" + t.source, r(d, "qunit-source"), 0 === u && r(d, "qunit-collapsed"), 
                            s(e, "click", function() {
                                o(d, "qunit-collapsed");
                            }), n.appendChild(d)));
                        });
                        var U = function(t) {
                            return !(t && t.version && t.version.major > 0);
                        }(window.phantom);
                        U && "complete" === R.readyState ? QUnit.load() : s(window, "load", QUnit.load), 
                        QUnit.diff = function() {
                            function t() {}
                            var s = -1, i = 1, n = 0;
                            return t.prototype.DiffMain = function(t, e, s) {
                                var i, r, o, a, c, l;
                                if (i = new Date().getTime() + 1e3, null === t || null === e) throw new Error("Null input. (DiffMain)");
                                return t === e ? t ? [ [ n, t ] ] : [] : ("undefined" == typeof s && (s = !0), r = s, 
                                o = this.diffCommonPrefix(t, e), a = t.substring(0, o), t = t.substring(o), e = e.substring(o), 
                                o = this.diffCommonSuffix(t, e), c = t.substring(t.length - o), t = t.substring(0, t.length - o), 
                                e = e.substring(0, e.length - o), l = this.diffCompute(t, e, r, i), a && l.unshift([ n, a ]), 
                                c && l.push([ n, c ]), this.diffCleanupMerge(l), l);
                            }, t.prototype.diffCleanupEfficiency = function(t) {
                                var e, r, o, a, c, l, u, h, f;
                                for (e = !1, r = [], o = 0, a = null, c = 0, l = !1, u = !1, h = !1, f = !1; c < t.length; ) t[c][0] === n ? (t[c][1].length < 4 && (h || f) ? (r[o++] = c, 
                                l = h, u = f, a = t[c][1]) : (o = 0, a = null), h = f = !1) : (t[c][0] === s ? f = !0 : h = !0, 
                                a && (l && u && h && f || a.length < 2 && l + u + h + f === 3) && (t.splice(r[o - 1], 0, [ s, a ]), 
                                t[r[o - 1] + 1][0] = i, o--, a = null, l && u ? (h = f = !0, o = 0) : (o--, c = o > 0 ? r[o - 1] : -1, 
                                h = f = !1), e = !0)), c++;
                                e && this.diffCleanupMerge(t);
                            }, t.prototype.diffPrettyHtml = function(t) {
                                var r, o, a, c = [];
                                for (a = 0; a < t.length; a++) switch (r = t[a][0], o = t[a][1], r) {
                                  case i:
                                    c[a] = "<ins>" + e(o) + "</ins>";
                                    break;

                                  case s:
                                    c[a] = "<del>" + e(o) + "</del>";
                                    break;

                                  case n:
                                    c[a] = "<span>" + e(o) + "</span>";
                                }
                                return c.join("");
                            }, t.prototype.diffCommonPrefix = function(t, e) {
                                var s, i, n, r;
                                if (!t || !e || t.charAt(0) !== e.charAt(0)) return 0;
                                for (n = 0, i = Math.min(t.length, e.length), s = i, r = 0; n < s; ) t.substring(r, s) === e.substring(r, s) ? (n = s, 
                                r = n) : i = s, s = Math.floor((i - n) / 2 + n);
                                return s;
                            }, t.prototype.diffCommonSuffix = function(t, e) {
                                var s, i, n, r;
                                if (!t || !e || t.charAt(t.length - 1) !== e.charAt(e.length - 1)) return 0;
                                for (n = 0, i = Math.min(t.length, e.length), s = i, r = 0; n < s; ) t.substring(t.length - s, t.length - r) === e.substring(e.length - s, e.length - r) ? (n = s, 
                                r = n) : i = s, s = Math.floor((i - n) / 2 + n);
                                return s;
                            }, t.prototype.diffCompute = function(t, e, r, o) {
                                var a, c, l, u, h, f, d, p, m, g, y, v;
                                return t ? e ? (c = t.length > e.length ? t : e, l = t.length > e.length ? e : t, 
                                u = c.indexOf(l), u !== -1 ? (a = [ [ i, c.substring(0, u) ], [ n, l ], [ i, c.substring(u + l.length) ] ], 
                                t.length > e.length && (a[0][0] = a[2][0] = s), a) : 1 === l.length ? [ [ s, t ], [ i, e ] ] : (h = this.diffHalfMatch(t, e), 
                                h ? (f = h[0], p = h[1], d = h[2], m = h[3], g = h[4], y = this.DiffMain(f, d, r, o), 
                                v = this.DiffMain(p, m, r, o), y.concat([ [ n, g ] ], v)) : r && t.length > 100 && e.length > 100 ? this.diffLineMode(t, e, o) : this.diffBisect(t, e, o))) : [ [ s, t ] ] : [ [ i, e ] ];
                            }, t.prototype.diffHalfMatch = function(t, e) {
                                function s(t, e, s) {
                                    var i, n, o, a, c, l, u, h, f;
                                    for (i = t.substring(s, s + Math.floor(t.length / 4)), n = -1, o = ""; (n = e.indexOf(i, n + 1)) !== -1; ) a = r.diffCommonPrefix(t.substring(s), e.substring(n)), 
                                    c = r.diffCommonSuffix(t.substring(0, s), e.substring(0, n)), o.length < c + a && (o = e.substring(n - c, n) + e.substring(n, n + a), 
                                    l = t.substring(0, s - c), u = t.substring(s + a), h = e.substring(0, n - c), f = e.substring(n + a));
                                    return 2 * o.length >= t.length ? [ l, u, h, f, o ] : null;
                                }
                                var i, n, r, o, a, c, l, u, h, f, d;
                                return i = t.length > e.length ? t : e, n = t.length > e.length ? e : t, i.length < 4 || 2 * n.length < i.length ? null : (r = this, 
                                h = s(i, n, Math.ceil(i.length / 4)), f = s(i, n, Math.ceil(i.length / 2)), h || f ? (d = f ? h && h[4].length > f[4].length ? h : f : h, 
                                t.length > e.length ? (o = d[0], l = d[1], c = d[2], a = d[3]) : (c = d[0], a = d[1], 
                                o = d[2], l = d[3]), u = d[4], [ o, l, c, a, u ]) : null);
                            }, t.prototype.diffLineMode = function(t, e, r) {
                                var o, a, c, l, u, h, f, d, p;
                                for (o = this.diffLinesToChars(t, e), t = o.chars1, e = o.chars2, c = o.lineArray, 
                                a = this.DiffMain(t, e, !1, r), this.diffCharsToLines(a, c), this.diffCleanupSemantic(a), 
                                a.push([ n, "" ]), l = 0, h = 0, u = 0, d = "", f = ""; l < a.length; ) {
                                    switch (a[l][0]) {
                                      case i:
                                        u++, f += a[l][1];
                                        break;

                                      case s:
                                        h++, d += a[l][1];
                                        break;

                                      case n:
                                        if (h >= 1 && u >= 1) {
                                            for (a.splice(l - h - u, h + u), l = l - h - u, o = this.DiffMain(d, f, !1, r), 
                                            p = o.length - 1; p >= 0; p--) a.splice(l, 0, o[p]);
                                            l += o.length;
                                        }
                                        u = 0, h = 0, d = "", f = "";
                                    }
                                    l++;
                                }
                                return a.pop(), a;
                            }, t.prototype.diffBisect = function(t, e, n) {
                                var r, o, a, c, l, u, h, f, d, p, m, g, y, v, b, w, x, k, C, M, _, S, E;
                                for (r = t.length, o = e.length, a = Math.ceil((r + o) / 2), c = a, l = 2 * a, u = new Array(l), 
                                h = new Array(l), f = 0; f < l; f++) u[f] = -1, h[f] = -1;
                                for (u[c + 1] = 0, h[c + 1] = 0, d = r - o, p = d % 2 !== 0, m = 0, g = 0, y = 0, 
                                v = 0, _ = 0; _ < a && !(new Date().getTime() > n); _++) {
                                    for (S = -_ + m; S <= _ - g; S += 2) {
                                        for (w = c + S, x = S === -_ || S !== _ && u[w - 1] < u[w + 1] ? u[w + 1] : u[w - 1] + 1, 
                                        C = x - S; x < r && C < o && t.charAt(x) === e.charAt(C); ) x++, C++;
                                        if (u[w] = x, x > r) g += 2; else if (C > o) m += 2; else if (p && (b = c + d - S, 
                                        b >= 0 && b < l && h[b] !== -1 && (k = r - h[b], x >= k))) return this.diffBisectSplit(t, e, x, C, n);
                                    }
                                    for (E = -_ + y; E <= _ - v; E += 2) {
                                        for (b = c + E, k = E === -_ || E !== _ && h[b - 1] < h[b + 1] ? h[b + 1] : h[b - 1] + 1, 
                                        M = k - E; k < r && M < o && t.charAt(r - k - 1) === e.charAt(o - M - 1); ) k++, 
                                        M++;
                                        if (h[b] = k, k > r) v += 2; else if (M > o) y += 2; else if (!p && (w = c + d - E, 
                                        w >= 0 && w < l && u[w] !== -1 && (x = u[w], C = c + x - w, k = r - k, x >= k))) return this.diffBisectSplit(t, e, x, C, n);
                                    }
                                }
                                return [ [ s, t ], [ i, e ] ];
                            }, t.prototype.diffBisectSplit = function(t, e, s, i, n) {
                                var r, o, a, c, l, u;
                                return r = t.substring(0, s), a = e.substring(0, i), o = t.substring(s), c = e.substring(i), 
                                l = this.DiffMain(r, a, !1, n), u = this.DiffMain(o, c, !1, n), l.concat(u);
                            }, t.prototype.diffCleanupSemantic = function(t) {
                                var e, r, o, a, c, l, u, h, f, d, p, m, g;
                                for (e = !1, r = [], o = 0, a = null, c = 0, h = 0, f = 0, l = 0, u = 0; c < t.length; ) t[c][0] === n ? (r[o++] = c, 
                                h = l, f = u, l = 0, u = 0, a = t[c][1]) : (t[c][0] === i ? l += t[c][1].length : u += t[c][1].length, 
                                a && a.length <= Math.max(h, f) && a.length <= Math.max(l, u) && (t.splice(r[o - 1], 0, [ s, a ]), 
                                t[r[o - 1] + 1][0] = i, o--, o--, c = o > 0 ? r[o - 1] : -1, h = 0, f = 0, l = 0, 
                                u = 0, a = null, e = !0)), c++;
                                for (e && this.diffCleanupMerge(t), c = 1; c < t.length; ) t[c - 1][0] === s && t[c][0] === i && (d = t[c - 1][1], 
                                p = t[c][1], m = this.diffCommonOverlap(d, p), g = this.diffCommonOverlap(p, d), 
                                m >= g ? (m >= d.length / 2 || m >= p.length / 2) && (t.splice(c, 0, [ n, p.substring(0, m) ]), 
                                t[c - 1][1] = d.substring(0, d.length - m), t[c + 1][1] = p.substring(m), c++) : (g >= d.length / 2 || g >= p.length / 2) && (t.splice(c, 0, [ n, d.substring(0, g) ]), 
                                t[c - 1][0] = i, t[c - 1][1] = p.substring(0, p.length - g), t[c + 1][0] = s, t[c + 1][1] = d.substring(g), 
                                c++), c++), c++;
                            }, t.prototype.diffCommonOverlap = function(t, e) {
                                var s, i, n, r, o, a, c;
                                if (s = t.length, i = e.length, 0 === s || 0 === i) return 0;
                                if (s > i ? t = t.substring(s - i) : s < i && (e = e.substring(0, s)), n = Math.min(s, i), 
                                t === e) return n;
                                for (r = 0, o = 1; ;) {
                                    if (a = t.substring(n - o), c = e.indexOf(a), c === -1) return r;
                                    o += c, 0 !== c && t.substring(n - o) !== e.substring(0, o) || (r = o, o++);
                                }
                            }, t.prototype.diffLinesToChars = function(t, e) {
                                function s(t) {
                                    var e, s, r, o, a;
                                    for (e = "", s = 0, r = -1, o = i.length; r < t.length - 1; ) r = t.indexOf("\n", s), 
                                    r === -1 && (r = t.length - 1), a = t.substring(s, r + 1), s = r + 1, (n.hasOwnProperty ? n.hasOwnProperty(a) : void 0 !== n[a]) ? e += String.fromCharCode(n[a]) : (e += String.fromCharCode(o), 
                                    n[a] = o, i[o++] = a);
                                    return e;
                                }
                                var i, n, r, o;
                                return i = [], n = {}, i[0] = "", r = s(t), o = s(e), {
                                    chars1: r,
                                    chars2: o,
                                    lineArray: i
                                };
                            }, t.prototype.diffCharsToLines = function(t, e) {
                                var s, i, n, r;
                                for (s = 0; s < t.length; s++) {
                                    for (i = t[s][1], n = [], r = 0; r < i.length; r++) n[r] = e[i.charCodeAt(r)];
                                    t[s][1] = n.join("");
                                }
                            }, t.prototype.diffCleanupMerge = function(t) {
                                var e, r, o, a, c, l, u, h, f;
                                for (t.push([ n, "" ]), e = 0, r = 0, o = 0, c = "", a = ""; e < t.length; ) switch (t[e][0]) {
                                  case i:
                                    o++, a += t[e][1], e++;
                                    break;

                                  case s:
                                    r++, c += t[e][1], e++;
                                    break;

                                  case n:
                                    r + o > 1 ? (0 !== r && 0 !== o && (l = this.diffCommonPrefix(a, c), 0 !== l && (e - r - o > 0 && t[e - r - o - 1][0] === n ? t[e - r - o - 1][1] += a.substring(0, l) : (t.splice(0, 0, [ n, a.substring(0, l) ]), 
                                    e++), a = a.substring(l), c = c.substring(l)), l = this.diffCommonSuffix(a, c), 
                                    0 !== l && (t[e][1] = a.substring(a.length - l) + t[e][1], a = a.substring(0, a.length - l), 
                                    c = c.substring(0, c.length - l))), 0 === r ? t.splice(e - o, r + o, [ i, a ]) : 0 === o ? t.splice(e - r, r + o, [ s, c ]) : t.splice(e - r - o, r + o, [ s, c ], [ i, a ]), 
                                    e = e - r - o + (r ? 1 : 0) + (o ? 1 : 0) + 1) : 0 !== e && t[e - 1][0] === n ? (t[e - 1][1] += t[e][1], 
                                    t.splice(e, 1)) : e++, o = 0, r = 0, c = "", a = "";
                                }
                                for ("" === t[t.length - 1][1] && t.pop(), u = !1, e = 1; e < t.length - 1; ) t[e - 1][0] === n && t[e + 1][0] === n && (h = t[e][1], 
                                f = h.substring(h.length - t[e - 1][1].length), f === t[e - 1][1] ? (t[e][1] = t[e - 1][1] + t[e][1].substring(0, t[e][1].length - t[e - 1][1].length), 
                                t[e + 1][1] = t[e - 1][1] + t[e + 1][1], t.splice(e - 1, 1), u = !0) : h.substring(0, t[e + 1][1].length) === t[e + 1][1] && (t[e - 1][1] += t[e + 1][1], 
                                t[e][1] = t[e][1].substring(t[e + 1][1].length) + t[e + 1][1], t.splice(e + 1, 1), 
                                u = !0)), e++;
                                u && this.diffCleanupMerge(t);
                            }, function(e, s) {
                                var i, n, r;
                                return i = new t(), n = i.DiffMain(e, s), i.diffCleanupEfficiency(n), r = i.diffPrettyHtml(n);
                            };
                        }();
                    }
                }
            }();
        }).call(e, s(173), s(34)(t));
    },
    173: function(t, e) {
        function s() {
            throw new Error("setTimeout has not been defined");
        }
        function i() {
            throw new Error("clearTimeout has not been defined");
        }
        function n(t) {
            if (u === setTimeout) return setTimeout(t, 0);
            if ((u === s || !u) && setTimeout) return u = setTimeout, setTimeout(t, 0);
            try {
                return u(t, 0);
            } catch (e) {
                try {
                    return u.call(null, t, 0);
                } catch (e) {
                    return u.call(this, t, 0);
                }
            }
        }
        function r(t) {
            if (h === clearTimeout) return clearTimeout(t);
            if ((h === i || !h) && clearTimeout) return h = clearTimeout, clearTimeout(t);
            try {
                return h(t);
            } catch (e) {
                try {
                    return h.call(null, t);
                } catch (e) {
                    return h.call(this, t);
                }
            }
        }
        function o() {
            m && d && (m = !1, d.length ? p = d.concat(p) : g = -1, p.length && a());
        }
        function a() {
            if (!m) {
                var t = n(o);
                m = !0;
                for (var e = p.length; e; ) {
                    for (d = p, p = []; ++g < e; ) d && d[g].run();
                    g = -1, e = p.length;
                }
                d = null, m = !1, r(t);
            }
        }
        function c(t, e) {
            this.fun = t, this.array = e;
        }
        function l() {}
        var u, h, f = t.exports = {};
        !function() {
            try {
                u = "function" == typeof setTimeout ? setTimeout : s;
            } catch (t) {
                u = s;
            }
            try {
                h = "function" == typeof clearTimeout ? clearTimeout : i;
            } catch (t) {
                h = i;
            }
        }();
        var d, p = [], m = !1, g = -1;
        f.nextTick = function(t) {
            var e = new Array(arguments.length - 1);
            if (arguments.length > 1) for (var s = 1; s < arguments.length; s++) e[s - 1] = arguments[s];
            p.push(new c(t, e)), 1 !== p.length || m || n(a);
        }, c.prototype.run = function() {
            this.fun.apply(null, this.array);
        }, f.title = "browser", f.browser = !0, f.env = {}, f.argv = [], f.version = "", 
        f.versions = {}, f.on = l, f.addListener = l, f.once = l, f.off = l, f.removeListener = l, 
        f.removeAllListeners = l, f.emit = l, f.prependListener = l, f.prependOnceListener = l, 
        f.listeners = function(t) {
            return [];
        }, f.binding = function(t) {
            throw new Error("process.binding is not supported");
        }, f.cwd = function() {
            return "/";
        }, f.chdir = function(t) {
            throw new Error("process.chdir is not supported");
        }, f.umask = function() {
            return 0;
        };
    },
    174: function(t, e, s) {
        var i, n;
        !function(r, o) {
            "use strict";
            i = o, n = "function" == typeof i ? i.call(e, s, e, t) : i, !(void 0 !== n && (t.exports = n));
        }(this, function() {
            "use strict";
            function t(t, e) {
                var s;
                for (s in e) e.hasOwnProperty(s) && ("undefined" == typeof e[s] ? delete t[s] : t[s] = e[s]);
                return t;
            }
            function e(t, e) {
                var s;
                for (s = 0; s < t.length; s += 1) if (t[s] === e) return s;
                return -1;
            }
            function s(t, s) {
                var i = e(t, s);
                return i !== -1 ? t.splice(i, 1) : [];
            }
            function i(t) {
                return "undefined" != typeof t && "undefined" != typeof t.requireExpects && t.requireExpects;
            }
            function n(t) {
                return !!t.result;
            }
            function r(t) {
                return !n(t);
            }
            function o(t) {
                return r(t) && "undefined" == typeof t.expected && "undefined" == typeof t.actual;
            }
            function a(t) {
                return t.replace(/(\r?\n)/g, "$&# ");
            }
            function c(t) {
                return t.replace(/^\s+/, "");
            }
            function l(t) {
                return t;
            }
            function u(t, e, s, i) {
                t.push(e + ": " + i(s));
            }
            function h(t, e, s, i, n) {
                t && "undefined" != typeof i && u(e, s, i, n);
            }
            function f(t, e) {
                return e ? t + " - " + a(e) : t;
            }
            function d(d, y, v) {
                function b(t) {
                    return _.config[t];
                }
                function w(t) {
                    if (n(t)) return t.message;
                    var e = [];
                    return t.message && e.push(t.message), b("showExpectationOnFailure") && !o(t) && (u(e, "expected", t.expected, A), 
                    u(e, "got", t.actual, A)), h(b("showTestNameOnFailure"), e, "test", t.name, l), 
                    h(b("showModuleNameOnFailure"), e, "module", t.module, l), h(b("showSourceOnFailure"), e, "source", t.source, c), 
                    e.join(", ");
                }
                function x(t) {
                    _.puts(_.config.initialCount + ".." + t);
                }
                function k(t) {
                    var i;
                    e(E, t) !== -1 && (i = M.config[t], "undefined" != typeof i && s(i, T[t]));
                }
                function C(t) {
                    var e;
                    for (e = 0; e < t.length; e += 1) k(t[e]);
                }
                if (!d) throw new Error('should pass QUnit object reference. Please check QUnit\'s "require" path if you are using Node.js (or any CommonJS env).');
                if ("function" != typeof y) throw new Error("should pass print-like function");
                var M = d, _ = {}, S = function(t, e) {
                    v && "object" == typeof v && "undefined" != typeof v[t] && (y('# WARNING: Option "' + t + '" is deprecated and will be removed in future version.'), 
                    e(v[t]));
                }, E = [ "moduleStart", "testStart", "log", "testDone", "done" ], T = {}, A = function() {
                    return "undefined" != typeof M.dump && "function" == typeof M.dump.parse ? function(t) {
                        return M.dump.parse(t);
                    } : "undefined" != typeof M.jsDump && "function" == typeof M.jsDump.parse ? function(t) {
                        return M.jsDump.parse(t);
                    } : l;
                }();
                return _.config = t({
                    initialCount: 1,
                    showModuleNameOnFailure: !0,
                    showTestNameOnFailure: !0,
                    showExpectationOnFailure: !0,
                    showSourceOnFailure: !0
                }, v), S("noPlan", function(t) {
                    y('# Now QUnit-TAP works as with "noPlan: true" by default. If you want to delare plan explicitly, please use "QUnit.config.requireExpects" option instead.'), 
                    _.config.noPlan = t;
                }), S("count", function(t) {
                    _.config.initialCount = t + 1;
                }), S("showDetailsOnFailure", function(t) {
                    _.config.showModuleNameOnFailure = t, _.config.showTestNameOnFailure = t, _.config.showExpectationOnFailure = t, 
                    _.config.showSourceOnFailure = t;
                }), _.VERSION = p, _.puts = y, _.count = _.config.initialCount - 1, _.expectedCount = _.config.initialCount - 1, 
                _.explain = A, _.note = function(t) {
                    _.puts(a("# " + t));
                }, _.diag = function(t) {
                    return _.note(t), !1;
                }, _.moduleStart = function(t) {
                    var e = "string" == typeof t ? t : t.name;
                    _.note("module: " + e);
                }, _.testStart = function(t) {
                    var e = "string" == typeof t ? t : t.name;
                    _.note("test: " + e);
                }, _.log = function(t) {
                    var e = "";
                    _.count += 1, r(t) && (e += "not "), e += "ok " + _.count, _.puts(f(e, w(t)));
                }, _.testDone = function() {
                    i(M.config) && (_.expectedCount += M.config.current.expected);
                }, _.done = function() {
                    ("undefined" == typeof _.config.noPlan || _.config.noPlan) && x(i(M.config) ? _.expectedCount : _.count);
                }, _.unsubscribe = function() {
                    "undefined" != typeof M.config && C(0 === arguments.length ? E : m.apply(arguments));
                }, function() {
                    var t, e, s, i = g(M);
                    for (e = 0; e < E.length; e += 1) t = E[e], s = i(M, _, t), T[t] = s;
                }(), _;
            }
            var p = "1.5.1", m = Array.prototype.slice, g = function(t) {
                return function(t, e, s) {
                    var i = t[s], n = function() {
                        e[s].apply(e, m.apply(arguments));
                    };
                    return i(n), n;
                };
            };
            return d.qunitTap = function() {
                throw new Error('[BC BREAK] Since 1.4.0, QUnit-TAP exports single qunitTap function as module.exports. Therefore, require("qunit-tap") returns qunitTap function itself. Please fix your code if you are using Node.js (or any CommonJS env).');
            }, d;
        });
    },
    175: function(t, e, s) {
        (function(t) {
            "use strict";
            var e = !1;
            QUnit.config.autostart = !1;
            var s = window.onerror;
            window.onerror = null, QUnit.begin(function() {
                window.onerror = function(t, e, i) {
                    var n = !1;
                    return s && (n = s(t, e, i)), QUnit.config.current && QUnit.config.current.async && QUnit.start(), 
                    n;
                };
            }), QUnit.moduleStart(function() {
                e = !0;
            }), QUnit.done(function() {
                window.setTimeout(function() {
                    console.log("cockpittest-tap-done");
                }, 0), window.onerror = null;
            });
            var i = /^((not )?ok [0-9]+ (- )?)(.*)$/;
            qunitTap(QUnit, function() {
                if (1 == arguments.length && QUnit.config.current) {
                    var t = i.exec(arguments[0]);
                    if (t) return void console.log(t[1] + QUnit.config.current.testName + ": " + t[4]);
                }
                console.log.apply(console, arguments);
            }), window.setTimeout(function() {
                e || (console.log("QUnit not started by test"), console.log("cockpittest-tap-error"));
            }, 2e4), window.tests_included = !0, t && t.exports && (t.exports = QUnit);
        }).call(e, s(34)(t));
    },
    176: function(t, e) {}
});
//# sourceMappingURL=test-docker.min.js.map