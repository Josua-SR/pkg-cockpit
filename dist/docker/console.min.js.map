{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///external \"jQuery\"","webpack:///../node_modules/term.js-cockpit/src/term.js","webpack:///../node_modules/webpack/buildin/global.js","webpack:///../pkg/docker/console.js","webpack:///external \"cockpit\"","webpack:///../pkg/docker/docker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","jQuery","global","__WEBPACK_AMD_DEFINE_RESULT__","document","this","EventEmitter","_events","Stream","addListener","type","listener","push","on","removeListener","obj","length","splice","off","removeAllListeners","once","args","Array","slice","arguments","apply","emit","listeners","inherits","pipe","dest","options","ondata","onerror","onend","src","unbind","data","write","err","end","UDK","Terminal","self","cols","rows","handler","each","keys","defaults","colors","concat","_colors","parent","body","getElementsByTagName","geometry","setRawMode","isTTY","isRaw","columns","ybase","ydisp","x","y","cursorHidden","convertEol","state","queue","scrollTop","scrollBottom","applicationKeypad","applicationCursor","originMode","insertMode","wraparoundMode","normal","prefixMode","selectMode","visualMode","searchMode","searchDown","entry","entryPrefix","_real","_selected","_textarea","charset","gcharset","glevel","charsets","decLocator","x10Mouse","vt200Mouse","vt300Mouse","normalMouse","mouseEvents","sendFocus","utfMouse","sgrMouse","urxvtMouse","element","children","refreshStart","refreshEnd","savedX","savedY","savedCols","readable","writable","defAttr","curAttr","params","currentParam","prefix","postfix","lines","blankLine","tabs","setupStops","el","capture","addEventListener","removeEventListener","cancel","ev","preventDefault","returnValue","stopPropagation","cancelBubble","child","f","constructor","tangoColors","xtermColors","out","g","b","hex","toString","vcolors","color","parseInt","substring","termName","visualBell","popOnBell","scrollback","screenKeys","debug","focus","blur","send","initGlobal","_boundDocs","indexOf","bindPaste","bindKeys","bindCopy","isMobile","fixMobile","defaultView","term","clipboardData","getData","context","contentEditable","target","srcElement","keyDown","keyPress","parentNode","textarea","getCopyTextarea","text","grabText","x1","x2","y1","y2","textContent","setSelectionRange","setTimeout","createElement","style","position","left","top","width","height","opacity","backgroundColor","borderStyle","outlineStyle","autocapitalize","autocorrect","appendChild","isAndroid","open","div","Error","ownerDocument","navigator","userAgent","isMac","isIpad","isIphone","isMSIE","className","outline","setAttribute","refresh","useEvents","useFocus","button","which","useMouse","bindMouse","brokenBold","terminal","line","innerHTML","w1","scrollWidth","fontWeight","w2","removeChild","isBoldBroken","pressed","wheelEvent","sendButton","pos","shift","meta","ctrl","mod","detail","wheelDeltaY","shiftKey","metaKey","ctrlKey","getButton","getCoords","sendEvent","sendMove","encode","ch","page","String","fromCharCode","w","h","pageX","pageY","documentElement","offsetLeft","offsetTop","offsetParent","clientWidth","clientHeight","Math","round","up","scrollDisp","close","destroySoon","destroy","destroyed","_blink","clearInterval","start","attr","bg","fg","flags","row","log","isWide","showCursor","scroll","updateRange","disp","j","cs","maxRange","lch","bell","nextStop","setgLevel","reset","index","reverseIndex","setgCharset","US","saveCursor","restoreCursor","tabSet","error","SCLD","UK","Dutch","Finnish","French","FrenchCanadian","German","Italian","NorwegianDanish","Spanish","Swedish","Swiss","ISOLatin","charCodeAt","title","handleTitle","cursorUp","cursorDown","cursorForward","cursorBackward","cursorPos","eraseInDisplay","eraseInLine","charAttributes","deviceStatus","insertChars","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","insertLines","deleteLines","deleteChars","eraseChars","charPosAbsolute","HPositionRelative","sendDeviceAttributes","linePosAbsolute","VPositionRelative","HVPosition","setMode","resetMode","setScrollRegion","cursorForwardTab","scrollUp","scrollDown","cursorBackwardTab","repeatPrecedingCharacter","tabClear","softReset","pt","clearAll","eraseBelow","lockKeys","dontLockKeys","keyList","split","map","part","keyCode","hexKeyValue","valid","test","writeln","ret","resume","pause","altKey","enterPrefix","leavePrefix","leaveVisual","keySelect","charCode","keyPrefix","borderColor","console","resize","pop","prevStop","eraseAttr","eraseRight","eraseLeft","eraseLine","cur","is","param","col","matchColor","cursor","initMouseTracking","resetTitleModes","mediaCopy","setResources","disableModifiers","setPointerMode","requestAnsiMode","requestPrivateMode","setConformanceLevel","loadLEDs","setCursorStyle","setCharProtectionAttr","restorePrivateValues","setAttrInRectangle","savePrivateValues","manipulateWindow","reverseAttrInRectangle","setTitleModeFeature","setWarningBellVolume","setMarginBellVolume","copyRectangle","enableFilterRectangle","requestParameters","selectChangeExtent","fillRectangle","enableLocatorReporting","eraseRectangle","setLocatorEvents","selectiveEraseRectangle","requestLocatorPosition","insertColumns","deleteColumns","enterSelect","copyBuffer","leaveSelect","enterVisual","preVisual","selectText","enterSearch","down","preSearch","preSearchX","preSearchY","bottom","leaveSearch","_copyTextarea","copyText","ox1","ox2","oy1","oy2","tmp","xl","old","max","min","buf","keySearch","ox","oy","oyd","yb","saw_space","saw_full","found","first_is_space","wrapped","`","a","e","k","q","u","v","z","{","|","}","~","setInterval","r1","g1","b1","hash","_cache","r2","g2","b2","diff","ldiff","Infinity","li","distance","iter","con","forEach","pow","undefined","window","Function","box","update","path","cockpit","location","$","warn","docker","typeable","connect","empty","append","show","docker_debug","debugging","http","superuser","DockerTerminal","channel","inlineStyle","enable_input","decoder","utf8_decoder","encoder","utf8_encoder","yes","problem","process","buffer","decode","DockerLogs","wait","pre","writing","at_bottom","scrollHeight","outerHeight","span","join","prop","control","batch","latency","size","block","at","subarray","stream","reason","pull","repo","tag","registry","dfd","Deferred","method","fromImage","req","request","next","json_skip","progress","JSON","parse","status","notify","fail","ex","reject","done","resolve","promise","inspect_image","image","encodeURIComponent","container_id","command","addClass","connected","exec","tty","want_typeable","focused","view","isArray","headers","Content-Type","stringify","AttachStdin","AttachStdout","AttachStderr","Tty","Cmd","prep","failure","message","attach","opts","extend","payload","unix","binary","callback","parts","seq","find","fl","sl","sequence_find","update_typeable","always","resp","Detach","Id","prepare","string","any","depth","inword","instr","quote_cmdline","words","word","quote_char","unquote_cmdline","is_whitespace","skip_whitespace","parse_word","byte_suffixes","bytes_from_format","formatted","separate","format","toUpperCase","spot","num","parseFloat","isNaN","truncate_id","id","substr"],"mappings":"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","file":"docker/console.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 159);\n","module.exports = jQuery;","/**\n * term.js - an xterm emulator\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * https://github.com/chjj/term.js\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n */\n\n;(function() {\n\n/**\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\n'use strict';\n\n/**\n * Shared\n */\n\nvar window = this\n  , document = this.document;\n\n/**\n * EventEmitter\n */\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n}\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  this._events[type] = this._events[type] || [];\n  this._events[type].push(listener);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.removeListener = function(type, listener) {\n  if (!this._events[type]) return;\n\n  var obj = this._events[type]\n    , i = obj.length;\n\n  while (i--) {\n    if (obj[i] === listener || obj[i].listener === listener) {\n      obj.splice(i, 1);\n      return;\n    }\n  }\n};\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  if (this._events[type]) delete this._events[type];\n};\n\nEventEmitter.prototype.once = function(type, listener) {\n  function on() {\n    var args = Array.prototype.slice.call(arguments);\n    this.removeListener(type, on);\n    return listener.apply(this, args);\n  }\n  on.listener = listener;\n  return this.on(type, on);\n};\n\nEventEmitter.prototype.emit = function(type) {\n  if (!this._events[type]) return;\n\n  var args = Array.prototype.slice.call(arguments, 1)\n    , obj = this._events[type]\n    , l = obj.length\n    , i = 0;\n\n  for (; i < l; i++) {\n    obj[i].apply(this, args);\n  }\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  return this._events[type] = this._events[type] || [];\n};\n\n/**\n * Stream\n */\n\nfunction Stream() {\n  EventEmitter.call(this);\n}\n\ninherits(Stream, EventEmitter);\n\nStream.prototype.pipe = function(dest, options) {\n  var src = this\n    , ondata\n    , onerror\n    , onend;\n\n  function unbind() {\n    src.removeListener('data', ondata);\n    src.removeListener('error', onerror);\n    src.removeListener('end', onend);\n    dest.removeListener('error', onerror);\n    dest.removeListener('close', unbind);\n  }\n\n  src.on('data', ondata = function(data) {\n    dest.write(data);\n  });\n\n  src.on('error', onerror = function(err) {\n    unbind();\n    if (!this.listeners('error').length) {\n      throw err;\n    }\n  });\n\n  src.on('end', onend = function() {\n    dest.end();\n    unbind();\n  });\n\n  dest.on('error', onerror);\n  dest.on('close', unbind);\n\n  dest.emit('pipe', src);\n\n  return dest;\n};\n\n/**\n * States\n */\n\nvar normal = 0\n  , escaped = 1\n  , csi = 2\n  , osc = 3\n  , charset = 4\n  , dcs = 5\n  , ignore = 6\n  , UDK = { type: 'udk' };\n\n/**\n * Terminal\n */\n\nfunction Terminal(options) {\n  var self = this;\n\n  if (!(this instanceof Terminal)) {\n    return new Terminal(arguments[0], arguments[1], arguments[2]);\n  }\n\n  Stream.call(this);\n\n  if (typeof options === 'number') {\n    options = {\n      cols: arguments[0],\n      rows: arguments[1],\n      handler: arguments[2]\n    };\n  }\n\n  options = options || {};\n\n  each(keys(Terminal.defaults), function(key) {\n    if (options[key] == null) {\n      options[key] = Terminal.options[key];\n      // Legacy:\n      if (Terminal[key] !== Terminal.defaults[key]) {\n        options[key] = Terminal[key];\n      }\n    }\n    self[key] = options[key];\n  });\n\n  if (options.colors.length === 8) {\n    options.colors = options.colors.concat(Terminal._colors.slice(8));\n  } else if (options.colors.length === 16) {\n    options.colors = options.colors.concat(Terminal._colors.slice(16));\n  } else if (options.colors.length === 10) {\n    options.colors = options.colors.slice(0, -2).concat(\n      Terminal._colors.slice(8, -2), options.colors.slice(-2));\n  } else if (options.colors.length === 18) {\n    options.colors = options.colors.slice(0, -2).concat(\n      Terminal._colors.slice(16, -2), options.colors.slice(-2));\n  }\n  this.colors = options.colors;\n\n  this.options = options;\n\n  // this.context = options.context || window;\n  // this.document = options.document || document;\n  this.parent = options.body || options.parent\n    || (document ? document.getElementsByTagName('body')[0] : null);\n\n  this.cols = options.cols || options.geometry[0];\n  this.rows = options.rows || options.geometry[1];\n\n  // Act as though we are a node TTY stream:\n  this.setRawMode;\n  this.isTTY = true;\n  this.isRaw = true;\n  this.columns = this.cols;\n  this.rows = this.rows;\n\n  if (options.handler) {\n    this.on('data', options.handler);\n  }\n\n  this.ybase = 0;\n  this.ydisp = 0;\n  this.x = 0;\n  this.y = 0;\n  this.cursorHidden = false;\n  this.convertEol;\n  this.state = 0;\n  this.queue = '';\n  this.scrollTop = 0;\n  this.scrollBottom = this.rows - 1;\n\n  // modes\n  this.applicationKeypad = false;\n  this.applicationCursor = false;\n  this.originMode = false;\n  this.insertMode = false;\n  this.wraparoundMode = false;\n  this.normal = null;\n\n  // select modes\n  this.prefixMode = false;\n  this.selectMode = false;\n  this.visualMode = false;\n  this.searchMode = false;\n  this.searchDown;\n  this.entry = '';\n  this.entryPrefix = 'Search: ';\n  this._real;\n  this._selected;\n  this._textarea;\n\n  // charset\n  this.charset = null;\n  this.gcharset = null;\n  this.glevel = 0;\n  this.charsets = [null];\n\n  // mouse properties\n  this.decLocator;\n  this.x10Mouse;\n  this.vt200Mouse;\n  this.vt300Mouse;\n  this.normalMouse;\n  this.mouseEvents;\n  this.sendFocus;\n  this.utfMouse;\n  this.sgrMouse;\n  this.urxvtMouse;\n\n  // misc\n  this.element;\n  this.children;\n  this.refreshStart;\n  this.refreshEnd;\n  this.savedX;\n  this.savedY;\n  this.savedCols;\n\n  // stream\n  this.readable = true;\n  this.writable = true;\n\n  this.defAttr = (0 << 18) | (257 << 9) | (256 << 0);\n  this.curAttr = this.defAttr;\n\n  this.params = [];\n  this.currentParam = 0;\n  this.prefix = '';\n  this.postfix = '';\n\n  this.lines = [];\n  var i = this.rows;\n  while (i--) {\n    this.lines.push(this.blankLine());\n  }\n\n  this.tabs;\n  this.setupStops();\n}\n\ninherits(Terminal, Stream);\n\n/**\n * Colors\n */\n\n// Colors 0-15\nTerminal.tangoColors = [\n  // dark:\n  '#2e3436',\n  '#cc0000',\n  '#4e9a06',\n  '#c4a000',\n  '#3465a4',\n  '#75507b',\n  '#06989a',\n  '#d3d7cf',\n  // bright:\n  '#555753',\n  '#ef2929',\n  '#8ae234',\n  '#fce94f',\n  '#729fcf',\n  '#ad7fa8',\n  '#34e2e2',\n  '#eeeeec'\n];\n\nTerminal.xtermColors = [\n  // dark:\n  '#000000', // black\n  '#cd0000', // red3\n  '#00cd00', // green3\n  '#cdcd00', // yellow3\n  '#0000ee', // blue2\n  '#cd00cd', // magenta3\n  '#00cdcd', // cyan3\n  '#e5e5e5', // gray90\n  // bright:\n  '#7f7f7f', // gray50\n  '#ff0000', // red\n  '#00ff00', // green\n  '#ffff00', // yellow\n  '#5c5cff', // rgb:5c/5c/ff\n  '#ff00ff', // magenta\n  '#00ffff', // cyan\n  '#ffffff'  // white\n];\n\n// Colors 0-15 + 16-255\n// Much thanks to TooTallNate for writing this.\nTerminal.colors = (function() {\n  var colors = Terminal.tangoColors.slice()\n    , r = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff]\n    , i;\n\n  // 16-231\n  i = 0;\n  for (; i < 216; i++) {\n    out(r[(i / 36) % 6 | 0], r[(i / 6) % 6 | 0], r[i % 6]);\n  }\n\n  // 232-255 (grey)\n  i = 0;\n  for (; i < 24; i++) {\n    r = 8 + i * 10;\n    out(r, r, r);\n  }\n\n  function out(r, g, b) {\n    colors.push('#' + hex(r) + hex(g) + hex(b));\n  }\n\n  function hex(c) {\n    c = c.toString(16);\n    return c.length < 2 ? '0' + c : c;\n  }\n\n  return colors;\n})();\n\n// Default BG/FG\nTerminal.colors[256] = '#000000';\nTerminal.colors[257] = '#f0f0f0';\n\nTerminal._colors = Terminal.colors.slice();\n\nTerminal.vcolors = (function() {\n  var out = []\n    , colors = Terminal.colors\n    , i = 0\n    , color;\n\n  for (; i < 256; i++) {\n    color = parseInt(colors[i].substring(1), 16);\n    out.push([\n      (color >> 16) & 0xff,\n      (color >> 8) & 0xff,\n      color & 0xff\n    ]);\n  }\n\n  return out;\n})();\n\n/**\n * Options\n */\n\nTerminal.defaults = {\n  colors: Terminal.colors,\n  convertEol: false,\n  termName: 'xterm',\n  geometry: [80, 24],\n  visualBell: false,\n  popOnBell: false,\n  scrollback: 1000,\n  screenKeys: false,\n  debug: false,\n  // programFeatures: false,\n  // focusKeys: false,\n};\n\nTerminal.options = {};\n\neach(keys(Terminal.defaults), function(key) {\n  Terminal[key] = Terminal.defaults[key];\n  Terminal.options[key] = Terminal.defaults[key];\n});\n\n/**\n * Focused Terminal\n */\n\nTerminal.focus = null;\n\nTerminal.prototype.focus = function() {\n  if (Terminal.focus === this) return;\n\n  if (Terminal.focus) {\n    Terminal.focus.blur();\n  }\n\n  if (this.sendFocus) this.send('\\x1b[I');\n\n  // try {\n  //   this.element.focus();\n  // } catch (e) {\n  //   ;\n  // }\n\n  // this.emit('focus');\n\n  Terminal.focus = this;\n};\n\nTerminal.prototype.blur = function() {\n  if (Terminal.focus !== this) return;\n\n  if (this.sendFocus) this.send('\\x1b[O');\n\n  // try {\n  //   this.element.blur();\n  // } catch (e) {\n  //   ;\n  // }\n\n  // this.emit('blur');\n\n  Terminal.focus = null;\n};\n\n/**\n * Initialize global behavior\n */\n\nTerminal.prototype.initGlobal = function() {\n  var document = this.document;\n\n  Terminal._boundDocs = Terminal._boundDocs || [];\n  if (~indexOf(Terminal._boundDocs, document)) {\n    return;\n  }\n  Terminal._boundDocs.push(document);\n\n  Terminal.bindPaste(document);\n\n  Terminal.bindKeys(document);\n\n  Terminal.bindCopy(document);\n\n  if (this.isMobile) {\n    this.fixMobile(document);\n  }\n};\n\n/**\n * Bind to paste event\n */\n\nTerminal.bindPaste = function(document) {\n  // This seems to work well for ctrl-V and middle-click,\n  // even without the contentEditable workaround.\n  var window = document.defaultView;\n  on(window, 'paste', function(ev) {\n    var term = Terminal.focus;\n    if (!term) return;\n    if (ev.clipboardData) {\n      term.send(ev.clipboardData.getData('text/plain'));\n    } else if (term.context.clipboardData) {\n      term.send(term.context.clipboardData.getData('Text'));\n    }\n    // Not necessary. Do it anyway for good measure.\n    term.element.contentEditable = 'inherit';\n    return cancel(ev);\n  });\n};\n\n/**\n * Global Events for key handling\n */\n\nTerminal.bindKeys = function(document) {\n  // We should only need to check `target === body` below,\n  // but we can check everything for good measure.\n  on(document, 'keydown', function(ev) {\n    if (!Terminal.focus) return;\n    var target = ev.target || ev.srcElement;\n    if (!target) return;\n    if (target === Terminal.focus.element\n        || target === Terminal.focus.context\n        || target === Terminal.focus.document\n        || target === Terminal.focus.body\n        || target === Terminal._textarea\n        || target === Terminal.focus.parent) {\n      return Terminal.focus.keyDown(ev);\n    }\n  }, true);\n\n  on(document, 'keypress', function(ev) {\n    if (!Terminal.focus) return;\n    var target = ev.target || ev.srcElement;\n    if (!target) return;\n    if (target === Terminal.focus.element\n        || target === Terminal.focus.context\n        || target === Terminal.focus.document\n        || target === Terminal.focus.body\n        || target === Terminal._textarea\n        || target === Terminal.focus.parent) {\n      return Terminal.focus.keyPress(ev);\n    }\n  }, true);\n\n  // If we click somewhere other than a\n  // terminal, unfocus the terminal.\n  on(document, 'mousedown', function(ev) {\n    if (!Terminal.focus) return;\n\n    var el = ev.target || ev.srcElement;\n    if (!el) return;\n\n    do {\n      if (el === Terminal.focus.element) return;\n    } while (el = el.parentNode);\n\n    Terminal.focus.blur();\n  });\n};\n\n/**\n * Copy Selection w/ Ctrl-C (Select Mode)\n */\n\nTerminal.bindCopy = function(document) {\n  var window = document.defaultView;\n\n  // if (!('onbeforecopy' in document)) {\n  //   // Copies to *only* the clipboard.\n  //   on(window, 'copy', function fn(ev) {\n  //     var term = Terminal.focus;\n  //     if (!term) return;\n  //     if (!term._selected) return;\n  //     var text = term.grabText(\n  //       term._selected.x1, term._selected.x2,\n  //       term._selected.y1, term._selected.y2);\n  //     term.emit('copy', text);\n  //     ev.clipboardData.setData('text/plain', text);\n  //   });\n  //   return;\n  // }\n\n  // Copies to primary selection *and* clipboard.\n  // NOTE: This may work better on capture phase,\n  // or using the `beforecopy` event.\n  on(window, 'copy', function(ev) {\n    var term = Terminal.focus;\n    if (!term) return;\n    if (!term._selected) return;\n    var textarea = term.getCopyTextarea();\n    var text = term.grabText(\n      term._selected.x1, term._selected.x2,\n      term._selected.y1, term._selected.y2);\n    term.emit('copy', text);\n    textarea.focus();\n    textarea.textContent = text;\n    textarea.value = text;\n    textarea.setSelectionRange(0, text.length);\n    setTimeout(function() {\n      term.element.focus();\n      term.focus();\n    }, 1);\n  });\n};\n\n/**\n * Fix Mobile\n */\n\nTerminal.prototype.fixMobile = function(document) {\n  var self = this;\n\n  var textarea = document.createElement('textarea');\n  textarea.style.position = 'absolute';\n  textarea.style.left = '-32000px';\n  textarea.style.top = '-32000px';\n  textarea.style.width = '0px';\n  textarea.style.height = '0px';\n  textarea.style.opacity = '0';\n  textarea.style.backgroundColor = 'transparent';\n  textarea.style.borderStyle = 'none';\n  textarea.style.outlineStyle = 'none';\n  textarea.autocapitalize = 'none';\n  textarea.autocorrect = 'off';\n\n  document.getElementsByTagName('body')[0].appendChild(textarea);\n\n  Terminal._textarea = textarea;\n\n  setTimeout(function() {\n    textarea.focus();\n  }, 1000);\n\n  if (this.isAndroid) {\n    on(textarea, 'change', function() {\n      var value = textarea.textContent || textarea.value;\n      textarea.value = '';\n      textarea.textContent = '';\n      self.send(value + '\\r');\n    });\n  }\n};\n\n/**\n * Open Terminal\n */\n\nTerminal.prototype.open = function(parent) {\n  var self = this\n    , i = 0\n    , div;\n\n  this.parent = parent || this.parent;\n\n  if (!this.parent) {\n    throw new Error('Terminal requires a parent element.');\n  }\n\n  // Grab global elements.\n  this.context = this.parent.ownerDocument.defaultView;\n  this.document = this.parent.ownerDocument;\n  this.body = this.document.getElementsByTagName('body')[0];\n\n  // Parse user-agent strings.\n  if (this.context.navigator && this.context.navigator.userAgent) {\n    this.isMac = !!~this.context.navigator.userAgent.indexOf('Mac');\n    this.isIpad = !!~this.context.navigator.userAgent.indexOf('iPad');\n    this.isIphone = !!~this.context.navigator.userAgent.indexOf('iPhone');\n    this.isAndroid = !!~this.context.navigator.userAgent.indexOf('Android');\n    this.isMobile = this.isIpad || this.isIphone || this.isAndroid;\n    this.isMSIE = !!~this.context.navigator.userAgent.indexOf('MSIE');\n  }\n\n  // Create our main terminal element.\n  this.element = this.document.createElement('div');\n  this.element.className = 'terminal';\n  this.element.style.outline = 'none';\n  this.element.setAttribute('tabindex', 0);\n  this.element.setAttribute('spellcheck', 'false');\n  this.element.style.backgroundColor = this.colors[256];\n  this.element.style.color = this.colors[257];\n\n  // Create the lines for our terminal.\n  this.children = [];\n  for (; i < this.rows; i++) {\n    div = this.document.createElement('div');\n    this.element.appendChild(div);\n    this.children.push(div);\n  }\n  this.parent.appendChild(this.element);\n\n  // Draw the screen.\n  this.refresh(0, this.rows - 1);\n\n  if (!('useEvents' in this.options) || this.options.useEvents) {\n    // Initialize global actions that\n    // need to be taken on the document.\n    this.initGlobal();\n  }\n\n  if (!('useFocus' in this.options) || this.options.useFocus) {\n    // Ensure there is a Terminal.focus.\n    this.focus();\n\n    // Bind to DOM events related\n    // to focus and paste behavior.\n    on(this.element, 'focus', function() {\n      self.focus();\n      if (self.isMobile) {\n        Terminal._textarea.focus();\n      }\n    });\n\n    // This causes slightly funky behavior.\n    // on(this.element, 'blur', function() {\n    //   self.blur();\n    // });\n\n    on(this.element, 'mousedown', function() {\n      self.focus();\n    });\n\n    // Clickable paste workaround, using contentEditable.\n    // This probably shouldn't work,\n    // ... but it does. Firefox's paste\n    // event seems to only work for textareas?\n    on(this.element, 'mousedown', function(ev) {\n      var button = ev.button != null\n        ? +ev.button\n        : ev.which != null\n          ? ev.which - 1\n          : null;\n\n      // Does IE9 do this?\n      if (self.isMSIE) {\n        button = button === 1 ? 0 : button === 4 ? 1 : button;\n      }\n\n      if (button !== 2) return;\n\n      self.element.contentEditable = 'true';\n      setTimeout(function() {\n        self.element.contentEditable = 'inherit'; // 'false';\n      }, 1);\n    }, true);\n  }\n\n  if (!('useMouse' in this.options) || this.options.useMouse) {\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  // this.emit('open');\n\n  if (!('useFocus' in this.options) || this.options.useFocus) {\n      // This can be useful for pasting,\n      // as well as the iPad fix.\n      setTimeout(function() {\n        self.element.focus();\n      }, 100);\n  }\n\n  // Figure out whether boldness affects\n  // the character width of monospace fonts.\n  if (Terminal.brokenBold == null) {\n    Terminal.brokenBold = isBoldBroken(this.document);\n  }\n\n  this.emit('open');\n};\n\nTerminal.prototype.setRawMode = function(value) {\n  this.isRaw = !!value;\n};\n\n// XTerm mouse events\n// http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#Mouse%20Tracking\n// To better understand these\n// the xterm code is very helpful:\n// Relevant files:\n//   button.c, charproc.c, misc.c\n// Relevant functions in xterm/button.c:\n//   BtnCode, EmitButtonCode, EditorButton, SendMousePosition\nTerminal.prototype.bindMouse = function() {\n  var el = this.element\n    , self = this\n    , pressed = 32;\n\n  var wheelEvent = 'onmousewheel' in this.context\n    ? 'mousewheel'\n    : 'DOMMouseScroll';\n\n  // mouseup, mousedown, mousewheel\n  // left click: ^[[M 3<^[[M#3<\n  // mousewheel up: ^[[M`3>\n  function sendButton(ev) {\n    var button\n      , pos;\n\n    // get the xterm-style button\n    button = getButton(ev);\n\n    // get mouse coordinates\n    pos = getCoords(ev);\n    if (!pos) return;\n\n    sendEvent(button, pos);\n\n    switch (ev.type) {\n      case 'mousedown':\n        pressed = button;\n        break;\n      case 'mouseup':\n        // keep it at the left\n        // button, just in case.\n        pressed = 32;\n        break;\n      case wheelEvent:\n        // nothing. don't\n        // interfere with\n        // `pressed`.\n        break;\n    }\n  }\n\n  // motion example of a left click:\n  // ^[[M 3<^[[M@4<^[[M@5<^[[M@6<^[[M@7<^[[M#7<\n  function sendMove(ev) {\n    var button = pressed\n      , pos;\n\n    pos = getCoords(ev);\n    if (!pos) return;\n\n    // buttons marked as motions\n    // are incremented by 32\n    button += 32;\n\n    sendEvent(button, pos);\n  }\n\n  // encode button and\n  // position to characters\n  function encode(data, ch) {\n    if (!self.utfMouse) {\n      if (ch === 255) return data.push(0);\n      if (ch > 127) ch = 127;\n      data.push(ch);\n    } else {\n      if (ch === 2047) return data.push(0);\n      if (ch < 127) {\n        data.push(ch);\n      } else {\n        if (ch > 2047) ch = 2047;\n        data.push(0xC0 | (ch >> 6));\n        data.push(0x80 | (ch & 0x3F));\n      }\n    }\n  }\n\n  // send a mouse event:\n  // regular/utf8: ^[[M Cb Cx Cy\n  // urxvt: ^[[ Cb ; Cx ; Cy M\n  // sgr: ^[[ Cb ; Cx ; Cy M/m\n  // vt300: ^[[ 24(1/3/5)~ [ Cx , Cy ] \\r\n  // locator: CSI P e ; P b ; P r ; P c ; P p & w\n  function sendEvent(button, pos) {\n    // self.emit('mouse', {\n    //   x: pos.x - 32,\n    //   y: pos.x - 32,\n    //   button: button\n    // });\n\n    if (self.vt300Mouse) {\n      // NOTE: Unstable.\n      // http://www.vt100.net/docs/vt3xx-gp/chapter15.html\n      button &= 3;\n      pos.x -= 32;\n      pos.y -= 32;\n      var data = '\\x1b[24';\n      if (button === 0) data += '1';\n      else if (button === 1) data += '3';\n      else if (button === 2) data += '5';\n      else if (button === 3) return;\n      else data += '0';\n      data += '~[' + pos.x + ',' + pos.y + ']\\r';\n      self.send(data);\n      return;\n    }\n\n    if (self.decLocator) {\n      // NOTE: Unstable.\n      button &= 3;\n      pos.x -= 32;\n      pos.y -= 32;\n      if (button === 0) button = 2;\n      else if (button === 1) button = 4;\n      else if (button === 2) button = 6;\n      else if (button === 3) button = 3;\n      self.send('\\x1b['\n        + button\n        + ';'\n        + (button === 3 ? 4 : 0)\n        + ';'\n        + pos.y\n        + ';'\n        + pos.x\n        + ';'\n        + (pos.page || 0)\n        + '&w');\n      return;\n    }\n\n    if (self.urxvtMouse) {\n      pos.x -= 32;\n      pos.y -= 32;\n      pos.x++;\n      pos.y++;\n      self.send('\\x1b[' + button + ';' + pos.x + ';' + pos.y + 'M');\n      return;\n    }\n\n    if (self.sgrMouse) {\n      pos.x -= 32;\n      pos.y -= 32;\n      self.send('\\x1b[<'\n        + ((button & 3) === 3 ? button & ~3 : button)\n        + ';'\n        + pos.x\n        + ';'\n        + pos.y\n        + ((button & 3) === 3 ? 'm' : 'M'));\n      return;\n    }\n\n    var data = [];\n\n    encode(data, button);\n    encode(data, pos.x);\n    encode(data, pos.y);\n\n    self.send('\\x1b[M' + String.fromCharCode.apply(String, data));\n  }\n\n  function getButton(ev) {\n    var button\n      , shift\n      , meta\n      , ctrl\n      , mod;\n\n    // two low bits:\n    // 0 = left\n    // 1 = middle\n    // 2 = right\n    // 3 = release\n    // wheel up/down:\n    // 1, and 2 - with 64 added\n    switch (ev.type) {\n      case 'mousedown':\n        button = ev.button != null\n          ? +ev.button\n          : ev.which != null\n            ? ev.which - 1\n            : null;\n\n        if (self.isMSIE) {\n          button = button === 1 ? 0 : button === 4 ? 1 : button;\n        }\n        break;\n      case 'mouseup':\n        button = 3;\n        break;\n      case 'DOMMouseScroll':\n        button = ev.detail < 0\n          ? 64\n          : 65;\n        break;\n      case 'mousewheel':\n        button = ev.wheelDeltaY > 0\n          ? 64\n          : 65;\n        break;\n    }\n\n    // next three bits are the modifiers:\n    // 4 = shift, 8 = meta, 16 = control\n    shift = ev.shiftKey ? 4 : 0;\n    meta = ev.metaKey ? 8 : 0;\n    ctrl = ev.ctrlKey ? 16 : 0;\n    mod = shift | meta | ctrl;\n\n    // no mods\n    if (self.vt200Mouse) {\n      // ctrl only\n      mod &= ctrl;\n    } else if (!self.normalMouse) {\n      mod = 0;\n    }\n\n    // increment to SP\n    button = (32 + (mod << 2)) + button;\n\n    return button;\n  }\n\n  // mouse coordinates measured in cols/rows\n  function getCoords(ev) {\n    var x, y, w, h, el;\n\n    // ignore browsers without pageX for now\n    if (ev.pageX == null) return;\n\n    x = ev.pageX;\n    y = ev.pageY;\n    el = self.element;\n\n    // should probably check offsetParent\n    // but this is more portable\n    while (el && el !== self.document.documentElement) {\n      x -= el.offsetLeft;\n      y -= el.offsetTop;\n      el = 'offsetParent' in el\n        ? el.offsetParent\n        : el.parentNode;\n    }\n\n    // convert to cols/rows\n    w = self.element.clientWidth;\n    h = self.element.clientHeight;\n    x = Math.round((x / w) * self.cols);\n    y = Math.round((y / h) * self.rows);\n\n    // be sure to avoid sending\n    // bad positions to the program\n    if (x < 0) x = 0;\n    if (x > self.cols) x = self.cols;\n    if (y < 0) y = 0;\n    if (y > self.rows) y = self.rows;\n\n    // xterm sends raw bytes and\n    // starts at 32 (SP) for each.\n    x += 32;\n    y += 32;\n\n    return {\n      x: x,\n      y: y,\n      type: ev.type === wheelEvent\n        ? 'mousewheel'\n        : ev.type\n    };\n  }\n\n  on(el, 'mousedown', function(ev) {\n    if (!self.mouseEvents) return;\n\n    // send the button\n    sendButton(ev);\n\n    // ensure focus\n    self.focus();\n\n    // fix for odd bug\n    //if (self.vt200Mouse && !self.normalMouse) {\n    // XXX This seems to break certain programs.\n    // if (self.vt200Mouse) {\n    //   sendButton({ __proto__: ev, type: 'mouseup' });\n    //   return cancel(ev);\n    // }\n\n    // bind events\n    if (self.normalMouse) on(self.document, 'mousemove', sendMove);\n\n    // x10 compatibility mode can't send button releases\n    if (!self.x10Mouse) {\n      on(self.document, 'mouseup', function up(ev) {\n        sendButton(ev);\n        if (self.normalMouse) off(self.document, 'mousemove', sendMove);\n        off(self.document, 'mouseup', up);\n        return cancel(ev);\n      });\n    }\n  });\n\n  //if (self.normalMouse) {\n  //  on(self.document, 'mousemove', sendMove);\n  //}\n\n  on(el, wheelEvent, function(ev) {\n    if (!self.mouseEvents) return;\n    if (self.x10Mouse\n        || self.vt300Mouse\n        || self.decLocator) return;\n    sendButton(ev);\n    return cancel(ev);\n  });\n\n  // allow mousewheel scrolling in\n  // the shell for example\n  on(el, wheelEvent, function(ev) {\n    if (self.mouseEvents) return;\n    if (self.applicationKeypad) return;\n    if (ev.type === 'DOMMouseScroll') {\n      self.scrollDisp(ev.detail < 0 ? -5 : 5);\n    } else {\n      self.scrollDisp(ev.wheelDeltaY > 0 ? -5 : 5);\n    }\n    return cancel(ev);\n  });\n};\n\n/**\n * Destroy Terminal\n */\n\nTerminal.prototype.close =\nTerminal.prototype.destroySoon =\nTerminal.prototype.destroy = function() {\n  if (this.destroyed) {\n    return;\n  }\n\n  if (this._blink) {\n    clearInterval(this._blink);\n    delete this._blink;\n  }\n\n  this.readable = false;\n  this.writable = false;\n  this.destroyed = true;\n  this._events = {};\n\n  this.handler = function() {};\n  this.write = function() {};\n  this.end = function() {};\n\n  if (this.element.parentNode) {\n    this.element.parentNode.removeChild(this.element);\n  }\n\n  this.emit('end');\n  this.emit('close');\n  this.emit('finish');\n  this.emit('destroy');\n};\n\n/**\n * Rendering Engine\n */\n\n// In the screen buffer, each character\n// is stored as a an array with a character\n// and a 32-bit integer.\n// First value: a utf-16 character.\n// Second value:\n// Next 9 bits: background color (0-511).\n// Next 9 bits: foreground color (0-511).\n// Next 14 bits: a mask for misc. flags:\n//   1=bold, 2=underline, 4=blink, 8=inverse, 16=invisible\n\nTerminal.prototype.refresh = function(start, end) {\n  var x\n    , y\n    , i\n    , line\n    , out\n    , ch\n    , width\n    , data\n    , attr\n    , bg\n    , fg\n    , flags\n    , row\n    , parent;\n\n  width = this.cols;\n  y = start;\n\n  if (end >= this.lines.length) {\n    this.log('`end` is too large. Most likely a bad CSR.');\n    end = this.lines.length - 1;\n  }\n\n  for (; y <= end; y++) {\n    row = y + this.ydisp;\n\n    line = this.lines[row];\n    out = '';\n\n    if (y === this.y\n        && (this.ydisp === this.ybase || this.selectMode)\n        && !this.cursorHidden) {\n      x = this.x;\n    } else {\n      x = -1;\n    }\n\n    attr = this.defAttr;\n    i = 0;\n\n    for (; i < width; i++) {\n      data = line[i][0];\n      ch = line[i][1];\n\n      if (i === x) data = -1;\n\n      if (data !== attr) {\n        if (attr !== this.defAttr) {\n          out += '</span>';\n        }\n        if (data !== this.defAttr) {\n          if (data === -1) {\n            out += '<span class=\"reverse-video terminal-cursor\">';\n          } else {\n            out += '<span class=\"';\n\n            bg = data & 0x1ff;\n            fg = (data >> 9) & 0x1ff;\n            flags = data >> 18;\n\n            // bold\n            if (flags & 1) {\n              if (!Terminal.brokenBold) {\n                out += 'term-bold '\n              }\n              // See: XTerm*boldColors\n              if (fg < 8) fg += 8;\n            }\n\n            // underline\n            if (flags & 2) {\n              out += 'term-underline ';\n            }\n\n            // blink\n            if (flags & 4) {\n              out += 'term-blink ';\n            }\n\n            // inverse\n            if (flags & 8) {\n              bg = (data >> 9) & 0x1ff;\n              fg = data & 0x1ff;\n              // Should inverse just be before the\n              // above boldColors effect instead?\n              if ((flags & 1) && fg < 8) fg += 8;\n            }\n\n            // invisible\n            if (flags & 16) {\n              out += 'term-hidden ';\n            }\n\n            if (bg !== 256) {\n              out += 'term-bg-color-' + bg + ' ';\n            }\n\n            if (fg !== 257) {\n              out += 'term-fg-color-' + fg + ' ';\n            }\n\n            out += '\">';\n          }\n        }\n      }\n\n      switch (ch) {\n        case '&':\n          out += '&amp;';\n          break;\n        case '<':\n          out += '&lt;';\n          break;\n        case '>':\n          out += '&gt;';\n          break;\n        default:\n          if (ch <= ' ') {\n            out += '&nbsp;';\n          } else {\n            if (isWide(ch)) i++;\n            out += ch;\n          }\n          break;\n      }\n\n      attr = data;\n    }\n\n    if (attr !== this.defAttr) {\n      out += '</span>';\n    }\n\n    this.children[y].innerHTML = out;\n  }\n};\n\nTerminal.prototype.showCursor = function() {\n  this.cursorHidden = false;\n  this.refresh(this.y, this.y);\n};\n\nTerminal.prototype.scroll = function() {\n  var row;\n\n  if (++this.ybase === this.scrollback) {\n    this.ybase = this.ybase / 2 | 0;\n    this.lines = this.lines.slice(-(this.ybase + this.rows) + 1);\n  }\n\n  this.ydisp = this.ybase;\n\n  // last line\n  row = this.ybase + this.rows - 1;\n\n  // subtract the bottom scroll region\n  row -= this.rows - 1 - this.scrollBottom;\n\n  if (row === this.lines.length) {\n    // potential optimization:\n    // pushing is faster than splicing\n    // when they amount to the same\n    // behavior.\n    this.lines.push(this.blankLine());\n  } else {\n    // add our new line\n    this.lines.splice(row, 0, this.blankLine());\n  }\n\n  if (this.scrollTop !== 0) {\n    if (this.ybase !== 0) {\n      this.ybase--;\n      this.ydisp = this.ybase;\n    }\n    this.lines.splice(this.ybase + this.scrollTop, 1);\n  }\n\n  // this.maxRange();\n  this.updateRange(this.scrollTop);\n  this.updateRange(this.scrollBottom);\n};\n\nTerminal.prototype.scrollDisp = function(disp) {\n  this.ydisp += disp;\n\n  if (this.ydisp > this.ybase) {\n    this.ydisp = this.ybase;\n  } else if (this.ydisp < 0) {\n    this.ydisp = 0;\n  }\n\n  this.refresh(0, this.rows - 1);\n};\n\nTerminal.prototype.write = function(data) {\n  var l = data.length\n    , i = 0\n    , j\n    , cs\n    , ch;\n\n  this.refreshStart = this.y;\n  this.refreshEnd = this.y;\n\n  if (this.ybase !== this.ydisp) {\n    this.ydisp = this.ybase;\n    this.maxRange();\n  }\n\n  // this.log(JSON.stringify(data.replace(/\\x1b/g, '^[')));\n\n  for (; i < l; i++, this.lch = ch) {\n    ch = data[i];\n    switch (this.state) {\n      case normal:\n        switch (ch) {\n          // '\\0'\n          // case '\\0':\n          // case '\\200':\n          //   break;\n\n          // '\\a'\n          case '\\x07':\n            this.bell();\n            break;\n\n          // '\\n', '\\v', '\\f'\n          case '\\n':\n          case '\\x0b':\n          case '\\x0c':\n            if (this.convertEol) {\n              this.x = 0;\n            }\n            // TODO: Implement eat_newline_glitch.\n            // if (this.realX >= this.cols) break;\n            // this.realX = 0;\n            this.y++;\n            if (this.y > this.scrollBottom) {\n              this.y--;\n              this.scroll();\n            }\n            break;\n\n          // '\\r'\n          case '\\r':\n            this.x = 0;\n            break;\n\n          // '\\b'\n          case '\\x08':\n            if (this.x > 0) {\n              this.x--;\n            }\n            break;\n\n          // '\\t'\n          case '\\t':\n            this.x = this.nextStop();\n            break;\n\n          // shift out\n          case '\\x0e':\n            this.setgLevel(1);\n            break;\n\n          // shift in\n          case '\\x0f':\n            this.setgLevel(0);\n            break;\n\n          // '\\e'\n          case '\\x1b':\n            this.state = escaped;\n            break;\n\n          default:\n            // ' '\n            if (ch >= ' ') {\n              if (this.charset && this.charset[ch]) {\n                ch = this.charset[ch];\n              }\n\n              if (this.x >= this.cols) {\n                this.x = 0;\n                this.y++;\n                if (this.y > this.scrollBottom) {\n                  this.y--;\n                  this.scroll();\n                }\n              }\n\n              this.lines[this.y + this.ybase][this.x] = [this.curAttr, ch];\n              this.x++;\n              this.updateRange(this.y);\n\n              if (isWide(ch)) {\n                j = this.y + this.ybase;\n                if (this.cols < 2 || this.x >= this.cols) {\n                  this.lines[j][this.x - 1] = [this.curAttr, ' '];\n                  break;\n                }\n                this.lines[j][this.x] = [this.curAttr, ' '];\n                this.x++;\n              }\n            }\n            break;\n        }\n        break;\n      case escaped:\n        switch (ch) {\n          // ESC [ Control Sequence Introducer ( CSI is 0x9b).\n          case '[':\n            this.params = [];\n            this.currentParam = 0;\n            this.state = csi;\n            break;\n\n          // ESC ] Operating System Command ( OSC is 0x9d).\n          case ']':\n            this.params = [];\n            this.currentParam = 0;\n            this.state = osc;\n            break;\n\n          // ESC P Device Control String ( DCS is 0x90).\n          case 'P':\n            this.params = [];\n            this.prefix = '';\n            this.currentParam = '';\n            this.state = dcs;\n            break;\n\n          // ESC _ Application Program Command ( APC is 0x9f).\n          case '_':\n            this.state = ignore;\n            break;\n\n          // ESC ^ Privacy Message ( PM is 0x9e).\n          case '^':\n            this.state = ignore;\n            break;\n\n          // ESC c Full Reset (RIS).\n          case 'c':\n            this.reset();\n            break;\n\n          // ESC E Next Line ( NEL is 0x85).\n          // ESC D Index ( IND is 0x84).\n          case 'E':\n            this.x = 0;\n            ;\n          case 'D':\n            this.index();\n            break;\n\n          // ESC M Reverse Index ( RI is 0x8d).\n          case 'M':\n            this.reverseIndex();\n            break;\n\n          // ESC % Select default/utf-8 character set.\n          // @ = default, G = utf-8\n          case '%':\n            //this.charset = null;\n            this.setgLevel(0);\n            this.setgCharset(0, Terminal.charsets.US);\n            this.state = normal;\n            i++;\n            break;\n\n          // ESC (,),*,+,-,. Designate G0-G2 Character Set.\n          case '(': // <-- this seems to get all the attention\n          case ')':\n          case '*':\n          case '+':\n          case '-':\n          case '.':\n            switch (ch) {\n              case '(':\n                this.gcharset = 0;\n                break;\n              case ')':\n                this.gcharset = 1;\n                break;\n              case '*':\n                this.gcharset = 2;\n                break;\n              case '+':\n                this.gcharset = 3;\n                break;\n              case '-':\n                this.gcharset = 1;\n                break;\n              case '.':\n                this.gcharset = 2;\n                break;\n            }\n            this.state = charset;\n            break;\n\n          // Designate G3 Character Set (VT300).\n          // A = ISO Latin-1 Supplemental.\n          // Not implemented.\n          case '/':\n            this.gcharset = 3;\n            this.state = charset;\n            i--;\n            break;\n\n          // ESC N\n          // Single Shift Select of G2 Character Set\n          // ( SS2 is 0x8e). This affects next character only.\n          case 'N':\n            break;\n          // ESC O\n          // Single Shift Select of G3 Character Set\n          // ( SS3 is 0x8f). This affects next character only.\n          case 'O':\n            break;\n          // ESC n\n          // Invoke the G2 Character Set as GL (LS2).\n          case 'n':\n            this.setgLevel(2);\n            break;\n          // ESC o\n          // Invoke the G3 Character Set as GL (LS3).\n          case 'o':\n            this.setgLevel(3);\n            break;\n          // ESC |\n          // Invoke the G3 Character Set as GR (LS3R).\n          case '|':\n            this.setgLevel(3);\n            break;\n          // ESC }\n          // Invoke the G2 Character Set as GR (LS2R).\n          case '}':\n            this.setgLevel(2);\n            break;\n          // ESC ~\n          // Invoke the G1 Character Set as GR (LS1R).\n          case '~':\n            this.setgLevel(1);\n            break;\n\n          // ESC 7 Save Cursor (DECSC).\n          case '7':\n            this.saveCursor();\n            this.state = normal;\n            break;\n\n          // ESC 8 Restore Cursor (DECRC).\n          case '8':\n            this.restoreCursor();\n            this.state = normal;\n            break;\n\n          // ESC # 3 DEC line height/width\n          case '#':\n            this.state = normal;\n            i++;\n            break;\n\n          // ESC H Tab Set (HTS is 0x88).\n          case 'H':\n            this.tabSet();\n            break;\n\n          // ESC = Application Keypad (DECPAM).\n          case '=':\n            this.log('Serial port requested application keypad.');\n            this.applicationKeypad = true;\n            this.state = normal;\n            break;\n\n          // ESC > Normal Keypad (DECPNM).\n          case '>':\n            this.log('Switching back to normal keypad.');\n            this.applicationKeypad = false;\n            this.state = normal;\n            break;\n\n          default:\n            this.state = normal;\n            this.error('Unknown ESC control: %s.', ch);\n            break;\n        }\n        break;\n\n      case charset:\n        switch (ch) {\n          case '0': // DEC Special Character and Line Drawing Set.\n            cs = Terminal.charsets.SCLD;\n            break;\n          case 'A': // UK\n            cs = Terminal.charsets.UK;\n            break;\n          case 'B': // United States (USASCII).\n            cs = Terminal.charsets.US;\n            break;\n          case '4': // Dutch\n            cs = Terminal.charsets.Dutch;\n            break;\n          case 'C': // Finnish\n          case '5':\n            cs = Terminal.charsets.Finnish;\n            break;\n          case 'R': // French\n            cs = Terminal.charsets.French;\n            break;\n          case 'Q': // FrenchCanadian\n            cs = Terminal.charsets.FrenchCanadian;\n            break;\n          case 'K': // German\n            cs = Terminal.charsets.German;\n            break;\n          case 'Y': // Italian\n            cs = Terminal.charsets.Italian;\n            break;\n          case 'E': // NorwegianDanish\n          case '6':\n            cs = Terminal.charsets.NorwegianDanish;\n            break;\n          case 'Z': // Spanish\n            cs = Terminal.charsets.Spanish;\n            break;\n          case 'H': // Swedish\n          case '7':\n            cs = Terminal.charsets.Swedish;\n            break;\n          case '=': // Swiss\n            cs = Terminal.charsets.Swiss;\n            break;\n          case '/': // ISOLatin (actually /A)\n            cs = Terminal.charsets.ISOLatin;\n            i++;\n            break;\n          default: // Default\n            cs = Terminal.charsets.US;\n            break;\n        }\n        this.setgCharset(this.gcharset, cs);\n        this.gcharset = null;\n        this.state = normal;\n        break;\n\n      case osc:\n        // OSC Ps ; Pt ST\n        // OSC Ps ; Pt BEL\n        //   Set Text Parameters.\n        if ((this.lch === '\\x1b' && ch === '\\\\') || ch === '\\x07') {\n          if (this.lch === '\\x1b') {\n            if (typeof this.currentParam === 'string') {\n              this.currentParam = this.currentParam.slice(0, -1);\n            } else if (typeof this.currentParam == 'number') {\n              this.currentParam = (this.currentParam - ('\\x1b'.charCodeAt(0) - 48)) / 10;\n            }\n          }\n\n          this.params.push(this.currentParam);\n\n          switch (this.params[0]) {\n            case 0:\n            case 1:\n            case 2:\n              if (this.params[1]) {\n                this.title = this.params[1];\n                this.handleTitle(this.title);\n              }\n              break;\n            case 3:\n              // set X property\n              break;\n            case 4:\n            case 5:\n              // change dynamic colors\n              break;\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n            case 19:\n              // change dynamic ui colors\n              break;\n            case 46:\n              // change log file\n              break;\n            case 50:\n              // dynamic font\n              break;\n            case 51:\n              // emacs shell\n              break;\n            case 52:\n              // manipulate selection data\n              break;\n            case 104:\n            case 105:\n            case 110:\n            case 111:\n            case 112:\n            case 113:\n            case 114:\n            case 115:\n            case 116:\n            case 117:\n            case 118:\n              // reset colors\n              break;\n          }\n\n          this.params = [];\n          this.currentParam = 0;\n          this.state = normal;\n        } else {\n          if (!this.params.length) {\n            if (ch >= '0' && ch <= '9') {\n              this.currentParam =\n                this.currentParam * 10 + ch.charCodeAt(0) - 48;\n            } else if (ch === ';') {\n              this.params.push(this.currentParam);\n              this.currentParam = '';\n            }\n          } else {\n            this.currentParam += ch;\n          }\n        }\n        break;\n\n      case csi:\n        // '?', '>', '!'\n        if (ch === '?' || ch === '>' || ch === '!') {\n          this.prefix = ch;\n          break;\n        }\n\n        // 0 - 9\n        if (ch >= '0' && ch <= '9') {\n          this.currentParam = this.currentParam * 10 + ch.charCodeAt(0) - 48;\n          break;\n        }\n\n        // '$', '\"', ' ', '\\''\n        if (ch === '$' || ch === '\"' || ch === ' ' || ch === '\\'') {\n          this.postfix = ch;\n          break;\n        }\n\n        this.params.push(this.currentParam);\n        this.currentParam = 0;\n\n        // ';'\n        if (ch === ';') break;\n\n        this.state = normal;\n\n        switch (ch) {\n          // CSI Ps A\n          // Cursor Up Ps Times (default = 1) (CUU).\n          case 'A':\n            this.cursorUp(this.params);\n            break;\n\n          // CSI Ps B\n          // Cursor Down Ps Times (default = 1) (CUD).\n          case 'B':\n            this.cursorDown(this.params);\n            break;\n\n          // CSI Ps C\n          // Cursor Forward Ps Times (default = 1) (CUF).\n          case 'C':\n            this.cursorForward(this.params);\n            break;\n\n          // CSI Ps D\n          // Cursor Backward Ps Times (default = 1) (CUB).\n          case 'D':\n            this.cursorBackward(this.params);\n            break;\n\n          // CSI Ps ; Ps H\n          // Cursor Position [row;column] (default = [1,1]) (CUP).\n          case 'H':\n            this.cursorPos(this.params);\n            break;\n\n          // CSI Ps J  Erase in Display (ED).\n          case 'J':\n            this.eraseInDisplay(this.params);\n            break;\n\n          // CSI Ps K  Erase in Line (EL).\n          case 'K':\n            this.eraseInLine(this.params);\n            break;\n\n          // CSI Pm m  Character Attributes (SGR).\n          case 'm':\n            if (!this.prefix) {\n              this.charAttributes(this.params);\n            }\n            break;\n\n          // CSI Ps n  Device Status Report (DSR).\n          case 'n':\n            if (!this.prefix) {\n              this.deviceStatus(this.params);\n            }\n            break;\n\n          /**\n           * Additions\n           */\n\n          // CSI Ps @\n          // Insert Ps (Blank) Character(s) (default = 1) (ICH).\n          case '@':\n            this.insertChars(this.params);\n            break;\n\n          // CSI Ps E\n          // Cursor Next Line Ps Times (default = 1) (CNL).\n          case 'E':\n            this.cursorNextLine(this.params);\n            break;\n\n          // CSI Ps F\n          // Cursor Preceding Line Ps Times (default = 1) (CNL).\n          case 'F':\n            this.cursorPrecedingLine(this.params);\n            break;\n\n          // CSI Ps G\n          // Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n          case 'G':\n            this.cursorCharAbsolute(this.params);\n            break;\n\n          // CSI Ps L\n          // Insert Ps Line(s) (default = 1) (IL).\n          case 'L':\n            this.insertLines(this.params);\n            break;\n\n          // CSI Ps M\n          // Delete Ps Line(s) (default = 1) (DL).\n          case 'M':\n            this.deleteLines(this.params);\n            break;\n\n          // CSI Ps P\n          // Delete Ps Character(s) (default = 1) (DCH).\n          case 'P':\n            this.deleteChars(this.params);\n            break;\n\n          // CSI Ps X\n          // Erase Ps Character(s) (default = 1) (ECH).\n          case 'X':\n            this.eraseChars(this.params);\n            break;\n\n          // CSI Pm `  Character Position Absolute\n          //   [column] (default = [row,1]) (HPA).\n          case '`':\n            this.charPosAbsolute(this.params);\n            break;\n\n          // 141 61 a * HPR -\n          // Horizontal Position Relative\n          case 'a':\n            this.HPositionRelative(this.params);\n            break;\n\n          // CSI P s c\n          // Send Device Attributes (Primary DA).\n          // CSI > P s c\n          // Send Device Attributes (Secondary DA)\n          case 'c':\n            this.sendDeviceAttributes(this.params);\n            break;\n\n          // CSI Pm d\n          // Line Position Absolute  [row] (default = [1,column]) (VPA).\n          case 'd':\n            this.linePosAbsolute(this.params);\n            break;\n\n          // 145 65 e * VPR - Vertical Position Relative\n          case 'e':\n            this.VPositionRelative(this.params);\n            break;\n\n          // CSI Ps ; Ps f\n          //   Horizontal and Vertical Position [row;column] (default =\n          //   [1,1]) (HVP).\n          case 'f':\n            this.HVPosition(this.params);\n            break;\n\n          // CSI Pm h  Set Mode (SM).\n          // CSI ? Pm h - mouse escape codes, cursor escape codes\n          case 'h':\n            this.setMode(this.params);\n            break;\n\n          // CSI Pm l  Reset Mode (RM).\n          // CSI ? Pm l\n          case 'l':\n            this.resetMode(this.params);\n            break;\n\n          // CSI Ps ; Ps r\n          //   Set Scrolling Region [top;bottom] (default = full size of win-\n          //   dow) (DECSTBM).\n          // CSI ? Pm r\n          case 'r':\n            this.setScrollRegion(this.params);\n            break;\n\n          // CSI s\n          //   Save cursor (ANSI.SYS).\n          case 's':\n            this.saveCursor(this.params);\n            break;\n\n          // CSI u\n          //   Restore cursor (ANSI.SYS).\n          case 'u':\n            this.restoreCursor(this.params);\n            break;\n\n          /**\n           * Lesser Used\n           */\n\n          // CSI Ps I\n          // Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n          case 'I':\n            this.cursorForwardTab(this.params);\n            break;\n\n          // CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n          case 'S':\n            this.scrollUp(this.params);\n            break;\n\n          // CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n          // CSI Ps ; Ps ; Ps ; Ps ; Ps T\n          // CSI > Ps; Ps T\n          case 'T':\n            // if (this.prefix === '>') {\n            //   this.resetTitleModes(this.params);\n            //   break;\n            // }\n            // if (this.params.length > 2) {\n            //   this.initMouseTracking(this.params);\n            //   break;\n            // }\n            if (this.params.length < 2 && !this.prefix) {\n              this.scrollDown(this.params);\n            }\n            break;\n\n          // CSI Ps Z\n          // Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n          case 'Z':\n            this.cursorBackwardTab(this.params);\n            break;\n\n          // CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n          case 'b':\n            this.repeatPrecedingCharacter(this.params);\n            break;\n\n          // CSI Ps g  Tab Clear (TBC).\n          case 'g':\n            this.tabClear(this.params);\n            break;\n\n          // CSI Pm i  Media Copy (MC).\n          // CSI ? Pm i\n          // case 'i':\n          //   this.mediaCopy(this.params);\n          //   break;\n\n          // CSI Pm m  Character Attributes (SGR).\n          // CSI > Ps; Ps m\n          // case 'm': // duplicate\n          //   if (this.prefix === '>') {\n          //     this.setResources(this.params);\n          //   } else {\n          //     this.charAttributes(this.params);\n          //   }\n          //   break;\n\n          // CSI Ps n  Device Status Report (DSR).\n          // CSI > Ps n\n          // case 'n': // duplicate\n          //   if (this.prefix === '>') {\n          //     this.disableModifiers(this.params);\n          //   } else {\n          //     this.deviceStatus(this.params);\n          //   }\n          //   break;\n\n          // CSI > Ps p  Set pointer mode.\n          // CSI ! p   Soft terminal reset (DECSTR).\n          // CSI Ps$ p\n          //   Request ANSI mode (DECRQM).\n          // CSI ? Ps$ p\n          //   Request DEC private mode (DECRQM).\n          // CSI Ps ; Ps \" p\n          case 'p':\n            switch (this.prefix) {\n              // case '>':\n              //   this.setPointerMode(this.params);\n              //   break;\n              case '!':\n                this.softReset(this.params);\n                break;\n              // case '?':\n              //   if (this.postfix === '$') {\n              //     this.requestPrivateMode(this.params);\n              //   }\n              //   break;\n              // default:\n              //   if (this.postfix === '\"') {\n              //     this.setConformanceLevel(this.params);\n              //   } else if (this.postfix === '$') {\n              //     this.requestAnsiMode(this.params);\n              //   }\n              //   break;\n            }\n            break;\n\n          // CSI Ps q  Load LEDs (DECLL).\n          // CSI Ps SP q\n          // CSI Ps \" q\n          // case 'q':\n          //   if (this.postfix === ' ') {\n          //     this.setCursorStyle(this.params);\n          //     break;\n          //   }\n          //   if (this.postfix === '\"') {\n          //     this.setCharProtectionAttr(this.params);\n          //     break;\n          //   }\n          //   this.loadLEDs(this.params);\n          //   break;\n\n          // CSI Ps ; Ps r\n          //   Set Scrolling Region [top;bottom] (default = full size of win-\n          //   dow) (DECSTBM).\n          // CSI ? Pm r\n          // CSI Pt; Pl; Pb; Pr; Ps$ r\n          // case 'r': // duplicate\n          //   if (this.prefix === '?') {\n          //     this.restorePrivateValues(this.params);\n          //   } else if (this.postfix === '$') {\n          //     this.setAttrInRectangle(this.params);\n          //   } else {\n          //     this.setScrollRegion(this.params);\n          //   }\n          //   break;\n\n          // CSI s     Save cursor (ANSI.SYS).\n          // CSI ? Pm s\n          // case 's': // duplicate\n          //   if (this.prefix === '?') {\n          //     this.savePrivateValues(this.params);\n          //   } else {\n          //     this.saveCursor(this.params);\n          //   }\n          //   break;\n\n          // CSI Ps ; Ps ; Ps t\n          // CSI Pt; Pl; Pb; Pr; Ps$ t\n          // CSI > Ps; Ps t\n          // CSI Ps SP t\n          // case 't':\n          //   if (this.postfix === '$') {\n          //     this.reverseAttrInRectangle(this.params);\n          //   } else if (this.postfix === ' ') {\n          //     this.setWarningBellVolume(this.params);\n          //   } else {\n          //     if (this.prefix === '>') {\n          //       this.setTitleModeFeature(this.params);\n          //     } else {\n          //       this.manipulateWindow(this.params);\n          //     }\n          //   }\n          //   break;\n\n          // CSI u     Restore cursor (ANSI.SYS).\n          // CSI Ps SP u\n          // case 'u': // duplicate\n          //   if (this.postfix === ' ') {\n          //     this.setMarginBellVolume(this.params);\n          //   } else {\n          //     this.restoreCursor(this.params);\n          //   }\n          //   break;\n\n          // CSI Pt; Pl; Pb; Pr; Pp; Pt; Pl; Pp$ v\n          // case 'v':\n          //   if (this.postfix === '$') {\n          //     this.copyRectagle(this.params);\n          //   }\n          //   break;\n\n          // CSI Pt ; Pl ; Pb ; Pr ' w\n          // case 'w':\n          //   if (this.postfix === '\\'') {\n          //     this.enableFilterRectangle(this.params);\n          //   }\n          //   break;\n\n          // CSI Ps x  Request Terminal Parameters (DECREQTPARM).\n          // CSI Ps x  Select Attribute Change Extent (DECSACE).\n          // CSI Pc; Pt; Pl; Pb; Pr$ x\n          // case 'x':\n          //   if (this.postfix === '$') {\n          //     this.fillRectangle(this.params);\n          //   } else {\n          //     this.requestParameters(this.params);\n          //     //this.__(this.params);\n          //   }\n          //   break;\n\n          // CSI Ps ; Pu ' z\n          // CSI Pt; Pl; Pb; Pr$ z\n          // case 'z':\n          //   if (this.postfix === '\\'') {\n          //     this.enableLocatorReporting(this.params);\n          //   } else if (this.postfix === '$') {\n          //     this.eraseRectangle(this.params);\n          //   }\n          //   break;\n\n          // CSI Pm ' {\n          // CSI Pt; Pl; Pb; Pr$ {\n          // case '{':\n          //   if (this.postfix === '\\'') {\n          //     this.setLocatorEvents(this.params);\n          //   } else if (this.postfix === '$') {\n          //     this.selectiveEraseRectangle(this.params);\n          //   }\n          //   break;\n\n          // CSI Ps ' |\n          // case '|':\n          //   if (this.postfix === '\\'') {\n          //     this.requestLocatorPosition(this.params);\n          //   }\n          //   break;\n\n          // CSI P m SP }\n          // Insert P s Column(s) (default = 1) (DECIC), VT420 and up.\n          // case '}':\n          //   if (this.postfix === ' ') {\n          //     this.insertColumns(this.params);\n          //   }\n          //   break;\n\n          // CSI P m SP ~\n          // Delete P s Column(s) (default = 1) (DECDC), VT420 and up\n          // case '~':\n          //   if (this.postfix === ' ') {\n          //     this.deleteColumns(this.params);\n          //   }\n          //   break;\n\n          default:\n            this.error('Unknown CSI code: %s.', ch);\n            break;\n        }\n\n        this.prefix = '';\n        this.postfix = '';\n        break;\n\n      case dcs:\n        if ((this.lch === '\\x1b' && ch === '\\\\') || ch === '\\x07') {\n          // Workarounds:\n          if (this.prefix === 'tmux;\\x1b') {\n            // `DCS tmux; Pt ST` may contain a Pt with an ST\n            // XXX Does tmux work this way?\n            // if (this.lch === '\\x1b' & data[i + 1] === '\\x1b' && data[i + 2] === '\\\\') {\n            //   this.currentParam += ch;\n            //   continue;\n            // }\n            // Tmux only accepts ST, not BEL:\n            if (ch === '\\x07') {\n              this.currentParam += ch;\n              continue;\n            }\n          }\n\n          if (this.lch === '\\x1b') {\n            if (typeof this.currentParam === 'string') {\n              this.currentParam = this.currentParam.slice(0, -1);\n            } else if (typeof this.currentParam == 'number') {\n              this.currentParam = (this.currentParam - ('\\x1b'.charCodeAt(0) - 48)) / 10;\n            }\n          }\n\n          this.params.push(this.currentParam);\n\n          var pt = this.params[this.params.length - 1];\n\n          switch (this.prefix) {\n            // User-Defined Keys (DECUDK).\n            // DCS Ps; Ps| Pt ST\n            case UDK:\n              this.emit('udk', {\n                clearAll: this.params[0] === 0,\n                eraseBelow: this.params[0] === 1,\n                lockKeys: this.params[1] === 0,\n                dontLockKeys: this.params[1] === 1,\n                keyList: (this.params[2] + '').split(';').map(function(part) {\n                  part = part.split('/');\n                  return {\n                    keyCode: part[0],\n                    hexKeyValue: part[1]\n                  };\n                })\n              });\n              break;\n\n            // Request Status String (DECRQSS).\n            // DCS $ q Pt ST\n            // test: echo -e '\\eP$q\"p\\e\\\\'\n            case '$q':\n              var valid = 0;\n\n              switch (pt) {\n                // DECSCA\n                // CSI Ps \" q\n                case '\"q':\n                  pt = '0\"q';\n                  valid = 1;\n                  break;\n\n                // DECSCL\n                // CSI Ps ; Ps \" p\n                case '\"p':\n                  pt = '61;0\"p';\n                  valid = 1;\n                  break;\n\n                // DECSTBM\n                // CSI Ps ; Ps r\n                case 'r':\n                  pt = ''\n                    + (this.scrollTop + 1)\n                    + ';'\n                    + (this.scrollBottom + 1)\n                    + 'r';\n                  valid = 1;\n                  break;\n\n                // SGR\n                // CSI Pm m\n                case 'm':\n                  // TODO: Parse this.curAttr here.\n                  // pt = '0m';\n                  // valid = 1;\n                  valid = 0; // Not implemented.\n                  break;\n\n                default:\n                  this.error('Unknown DCS Pt: %s.', pt);\n                  valid = 0; // unimplemented\n                  break;\n              }\n\n              this.send('\\x1bP' + valid + '$r' + pt + '\\x1b\\\\');\n              break;\n\n            // Set Termcap/Terminfo Data (xterm, experimental).\n            // DCS + p Pt ST\n            case '+p':\n              this.emit('set terminfo', {\n                name: this.params[0]\n              });\n              break;\n\n            // Request Termcap/Terminfo String (xterm, experimental)\n            // Regular xterm does not even respond to this sequence.\n            // This can cause a small glitch in vim.\n            // DCS + q Pt ST\n            // test: echo -ne '\\eP+q6b64\\e\\\\'\n            case '+q':\n              var valid = false;\n              this.send('\\x1bP' + +valid + '+r' + pt + '\\x1b\\\\');\n              break;\n\n            // Implement tmux sequence forwarding is\n            // someone uses term.js for a multiplexer.\n            // DCS tmux; ESC Pt ST\n            case 'tmux;\\x1b':\n              this.emit('passthrough', pt);\n              break;\n\n            default:\n              this.error('Unknown DCS prefix: %s.', pt);\n              break;\n          }\n\n          this.currentParam = 0;\n          this.prefix = '';\n          this.state = normal;\n        } else {\n          this.currentParam += ch;\n          if (!this.prefix) {\n            if (/^\\d*;\\d*\\|/.test(this.currentParam)) {\n              this.prefix = UDK;\n              this.params = this.currentParam.split(/[;|]/).map(function(n) {\n                if (!n.length) return 0;\n                return +n;\n              }).slice(0, -1);\n              this.currentParam = '';\n            } else if (/^[$+][a-zA-Z]/.test(this.currentParam)\n                || /^\\w+;\\x1b/.test(this.currentParam)) {\n              this.prefix = this.currentParam;\n              this.currentParam = '';\n            }\n          }\n        }\n        break;\n\n      case ignore:\n        // For PM and APC.\n        if ((this.lch === '\\x1b' && ch === '\\\\') || ch === '\\x07') {\n          this.state = normal;\n        }\n        break;\n    }\n  }\n\n  this.updateRange(this.y);\n  this.refresh(this.refreshStart, this.refreshEnd);\n\n  return true;\n};\n\nTerminal.prototype.writeln = function(data) {\n  return this.write(data + '\\r\\n');\n};\n\nTerminal.prototype.end = function(data) {\n  var ret = true;\n  if (data) {\n    ret = this.write(data);\n  }\n  this.destroySoon();\n  return ret;\n};\n\nTerminal.prototype.resume = function() {\n  ;\n};\n\nTerminal.prototype.pause = function() {\n  ;\n};\n\n// Key Resources:\n// https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\nTerminal.prototype.keyDown = function(ev) {\n  var self = this\n    , key;\n\n  switch (ev.keyCode) {\n    // backspace\n    case 8:\n      if (ev.altKey) {\n        key = '\\x17';\n        break;\n      }\n      if (ev.shiftKey) {\n        key = '\\x08'; // ^H\n        break;\n      }\n      key = '\\x7f'; // ^?\n      break;\n    // tab\n    case 9:\n      if (ev.shiftKey) {\n        key = '\\x1b[Z';\n        break;\n      }\n      key = '\\t';\n      break;\n    // return/enter\n    case 13:\n      key = '\\r';\n      break;\n    // escape\n    case 27:\n      key = '\\x1b';\n      break;\n    // space\n    case 32:\n      key = '\\x20';\n      break;\n    // left-arrow\n    case 37:\n      if (this.applicationCursor) {\n        key = '\\x1bOD'; // SS3 as ^[O for 7-bit\n        //key = '\\x8fD'; // SS3 as 0x8f for 8-bit\n        break;\n      }\n      if (ev.ctrlKey) {\n        key = '\\x1b[5D';\n        break;\n      }\n      key = '\\x1b[D';\n      break;\n    // right-arrow\n    case 39:\n      if (this.applicationCursor) {\n        key = '\\x1bOC';\n        break;\n      }\n      if (ev.ctrlKey) {\n        key = '\\x1b[5C';\n        break;\n      }\n      key = '\\x1b[C';\n      break;\n    // up-arrow\n    case 38:\n      if (this.applicationCursor) {\n        key = '\\x1bOA';\n        break;\n      }\n      if (ev.ctrlKey) {\n        this.scrollDisp(-1);\n        return cancel(ev);\n      } else {\n        key = '\\x1b[A';\n      }\n      break;\n    // down-arrow\n    case 40:\n      if (this.applicationCursor) {\n        key = '\\x1bOB';\n        break;\n      }\n      if (ev.ctrlKey) {\n        this.scrollDisp(1);\n        return cancel(ev);\n      } else {\n        key = '\\x1b[B';\n      }\n      break;\n    // delete\n    case 46:\n      key = '\\x1b[3~';\n      break;\n    // insert\n    case 45:\n      key = '\\x1b[2~';\n      break;\n    // home\n    case 36:\n      if (this.applicationKeypad) {\n        key = '\\x1bOH';\n        break;\n      }\n      key = '\\x1bOH';\n      break;\n    // end\n    case 35:\n      if (this.applicationKeypad) {\n        key = '\\x1bOF';\n        break;\n      }\n      key = '\\x1bOF';\n      break;\n    // page up\n    case 33:\n      if (ev.shiftKey) {\n        this.scrollDisp(-(this.rows - 1));\n        return cancel(ev);\n      } else {\n        key = '\\x1b[5~';\n      }\n      break;\n    // page down\n    case 34:\n      if (ev.shiftKey) {\n        this.scrollDisp(this.rows - 1);\n        return cancel(ev);\n      } else {\n        key = '\\x1b[6~';\n      }\n      break;\n    // F1\n    case 112:\n      key = '\\x1bOP';\n      break;\n    // F2\n    case 113:\n      key = '\\x1bOQ';\n      break;\n    // F3\n    case 114:\n      key = '\\x1bOR';\n      break;\n    // F4\n    case 115:\n      key = '\\x1bOS';\n      break;\n    // F5\n    case 116:\n      key = '\\x1b[15~';\n      break;\n    // F6\n    case 117:\n      key = '\\x1b[17~';\n      break;\n    // F7\n    case 118:\n      key = '\\x1b[18~';\n      break;\n    // F8\n    case 119:\n      key = '\\x1b[19~';\n      break;\n    // F9\n    case 120:\n      key = '\\x1b[20~';\n      break;\n    // F10\n    case 121:\n      key = '\\x1b[21~';\n      break;\n    // F11\n    case 122:\n      key = '\\x1b[23~';\n      break;\n    // F12\n    case 123:\n      key = '\\x1b[24~';\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          // Ctrl-A\n          if (this.screenKeys) {\n            if (!this.prefixMode && !this.selectMode && ev.keyCode === 65) {\n              this.enterPrefix();\n              return cancel(ev);\n            }\n          }\n          // Ctrl-V\n          if (this.prefixMode && ev.keyCode === 86) {\n            this.leavePrefix();\n            return;\n          }\n          // Ctrl-C\n          if ((this.prefixMode || this.selectMode) && ev.keyCode === 67) {\n            if (this.visualMode) {\n              setTimeout(function() {\n                self.leaveVisual();\n              }, 1);\n            }\n            return;\n          }\n          key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          // NUL\n          key = String.fromCharCode(0);\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          // delete\n          key = String.fromCharCode(127);\n        } else if (ev.keyCode === 219) {\n          // ^[ - escape\n          key = String.fromCharCode(27);\n        } else if (ev.keyCode === 221) {\n          // ^] - group sep\n          key = String.fromCharCode(29);\n        }\n      } else if (ev.altKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          key = '\\x1b' + String.fromCharCode(ev.keyCode + 32);\n        } else if (ev.keyCode === 192) {\n          key = '\\x1b`';\n        } else if (ev.keyCode >= 48 && ev.keyCode <= 57) {\n          key = '\\x1b' + (ev.keyCode - 48);\n        }\n      }\n      break;\n  }\n\n  if (!key) return true;\n\n  if (this.prefixMode) {\n    this.leavePrefix();\n    return cancel(ev);\n  }\n\n  if (this.selectMode) {\n    this.keySelect(ev, key);\n    return cancel(ev);\n  }\n\n  this.emit('keydown', ev);\n  this.emit('key', key, ev);\n\n  this.handler(key);\n\n  return cancel(ev);\n};\n\nTerminal.prototype.setgLevel = function(g) {\n  this.glevel = g;\n  this.charset = this.charsets[g];\n};\n\nTerminal.prototype.setgCharset = function(g, charset) {\n  this.charsets[g] = charset;\n  if (this.glevel === g) {\n    this.charset = charset;\n  }\n};\n\nTerminal.prototype.keyPress = function(ev) {\n  var key;\n\n  cancel(ev);\n\n  if (ev.charCode) {\n    key = ev.charCode;\n  } else if (ev.which == null) {\n    key = ev.keyCode;\n  } else if (ev.which !== 0 && ev.charCode !== 0) {\n    key = ev.which;\n  } else {\n    return false;\n  }\n\n  if (!key || ev.ctrlKey || ev.altKey || ev.metaKey) return false;\n\n  key = String.fromCharCode(key);\n\n  if (this.prefixMode) {\n    this.leavePrefix();\n    this.keyPrefix(ev, key);\n    return false;\n  }\n\n  if (this.selectMode) {\n    this.keySelect(ev, key);\n    return false;\n  }\n\n  this.emit('keypress', key, ev);\n  this.emit('key', key, ev);\n\n  this.handler(key);\n\n  return false;\n};\n\nTerminal.prototype.send = function(data) {\n  var self = this;\n\n  if (!this.queue) {\n    setTimeout(function() {\n      self.handler(self.queue);\n      self.queue = '';\n    }, 1);\n  }\n\n  this.queue += data;\n};\n\nTerminal.prototype.bell = function() {\n  this.emit('bell');\n  if (!this.visualBell) return;\n  var self = this;\n  this.element.style.borderColor = 'white';\n  setTimeout(function() {\n    self.element.style.borderColor = '';\n  }, 10);\n  if (this.popOnBell) this.focus();\n};\n\nTerminal.prototype.log = function() {\n  if (!this.debug) return;\n  if (!this.context.console || !this.context.console.log) return;\n  var args = Array.prototype.slice.call(arguments);\n  this.context.console.log.apply(this.context.console, args);\n};\n\nTerminal.prototype.error = function() {\n  if (!this.debug) return;\n  if (!this.context.console || !this.context.console.error) return;\n  var args = Array.prototype.slice.call(arguments);\n  this.context.console.error.apply(this.context.console, args);\n};\n\nTerminal.prototype.resize = function(x, y) {\n  var line\n    , el\n    , i\n    , j\n    , ch;\n\n  if (x < 1) x = 1;\n  if (y < 1) y = 1;\n\n  // resize cols\n  j = this.cols;\n  if (j < x) {\n    ch = [this.defAttr, ' ']; // does xterm use the default attr?\n    i = this.lines.length;\n    while (i--) {\n      while (this.lines[i].length < x) {\n        this.lines[i].push(ch);\n      }\n    }\n  } else if (j > x) {\n    i = this.lines.length;\n    while (i--) {\n      while (this.lines[i].length > x) {\n        this.lines[i].pop();\n      }\n    }\n  }\n  this.setupStops(j);\n  this.cols = x;\n  this.columns = x;\n\n  // resize rows\n  j = this.rows;\n  if (j < y) {\n    el = this.element;\n    while (j++ < y) {\n      if (this.lines.length < y + this.ybase) {\n        this.lines.push(this.blankLine());\n      }\n      if (this.children.length < y) {\n        line = this.document.createElement('div');\n        el.appendChild(line);\n        this.children.push(line);\n      }\n    }\n  } else if (j > y) {\n    while (j-- > y) {\n      if (this.lines.length > y + this.ybase) {\n        this.lines.pop();\n      }\n      if (this.children.length > y) {\n        el = this.children.pop();\n        if (!el) continue;\n        el.parentNode.removeChild(el);\n      }\n    }\n  }\n  this.rows = y;\n\n  // make sure the cursor stays on screen\n  if (this.y >= y) this.y = y - 1;\n  if (this.x >= x) this.x = x - 1;\n\n  this.scrollTop = 0;\n  this.scrollBottom = y - 1;\n\n  this.refresh(0, this.rows - 1);\n\n  // it's a real nightmare trying\n  // to resize the original\n  // screen buffer. just set it\n  // to null for now.\n  this.normal = null;\n\n  // Act as though we are a node TTY stream:\n  this.emit('resize');\n};\n\nTerminal.prototype.updateRange = function(y) {\n  if (y < this.refreshStart) this.refreshStart = y;\n  if (y > this.refreshEnd) this.refreshEnd = y;\n  // if (y > this.refreshEnd) {\n  //   this.refreshEnd = y;\n  //   if (y > this.rows - 1) {\n  //     this.refreshEnd = this.rows - 1;\n  //   }\n  // }\n};\n\nTerminal.prototype.maxRange = function() {\n  this.refreshStart = 0;\n  this.refreshEnd = this.rows - 1;\n};\n\nTerminal.prototype.setupStops = function(i) {\n  if (i != null) {\n    if (!this.tabs[i]) {\n      i = this.prevStop(i);\n    }\n  } else {\n    this.tabs = {};\n    i = 0;\n  }\n\n  for (; i < this.cols; i += 8) {\n    this.tabs[i] = true;\n  }\n};\n\nTerminal.prototype.prevStop = function(x) {\n  if (x == null) x = this.x;\n  while (!this.tabs[--x] && x > 0);\n  return x >= this.cols\n    ? this.cols - 1\n    : x < 0 ? 0 : x;\n};\n\nTerminal.prototype.nextStop = function(x) {\n  if (x == null) x = this.x;\n  while (!this.tabs[++x] && x < this.cols);\n  return x >= this.cols\n    ? this.cols - 1\n    : x < 0 ? 0 : x;\n};\n\n// back_color_erase feature for xterm.\nTerminal.prototype.eraseAttr = function() {\n  // if (this.is('screen')) return this.defAttr;\n  return (this.defAttr & ~0x1ff) | (this.curAttr & 0x1ff);\n};\n\nTerminal.prototype.eraseRight = function(x, y) {\n  var line = this.lines[this.ybase + y]\n    , ch = [this.eraseAttr(), ' ']; // xterm\n\n\n  for (; x < this.cols; x++) {\n    line[x] = ch;\n  }\n\n  this.updateRange(y);\n};\n\nTerminal.prototype.eraseLeft = function(x, y) {\n  var line = this.lines[this.ybase + y]\n    , ch = [this.eraseAttr(), ' ']; // xterm\n\n  x++;\n  while (x--) line[x] = ch;\n\n  this.updateRange(y);\n};\n\nTerminal.prototype.eraseLine = function(y) {\n  this.eraseRight(0, y);\n};\n\nTerminal.prototype.blankLine = function(cur) {\n  var attr = cur\n    ? this.eraseAttr()\n    : this.defAttr;\n\n  var ch = [attr, ' ']\n    , line = []\n    , i = 0;\n\n  for (; i < this.cols; i++) {\n    line[i] = ch;\n  }\n\n  return line;\n};\n\nTerminal.prototype.ch = function(cur) {\n  return cur\n    ? [this.eraseAttr(), ' ']\n    : [this.defAttr, ' '];\n};\n\nTerminal.prototype.is = function(term) {\n  var name = this.termName;\n  return (name + '').indexOf(term) === 0;\n};\n\nTerminal.prototype.handler = function(data) {\n  this.emit('data', data);\n};\n\nTerminal.prototype.handleTitle = function(title) {\n  this.emit('title', title);\n};\n\n/**\n * ESC\n */\n\n// ESC D Index (IND is 0x84).\nTerminal.prototype.index = function() {\n  this.y++;\n  if (this.y > this.scrollBottom) {\n    this.y--;\n    this.scroll();\n  }\n  this.state = normal;\n};\n\n// ESC M Reverse Index (RI is 0x8d).\nTerminal.prototype.reverseIndex = function() {\n  var j;\n  this.y--;\n  if (this.y < this.scrollTop) {\n    this.y++;\n    // possibly move the code below to term.reverseScroll();\n    // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n    // blankLine(true) is xterm/linux behavior\n    this.lines.splice(this.y + this.ybase, 0, this.blankLine(true));\n    j = this.rows - 1 - this.scrollBottom;\n    this.lines.splice(this.rows - 1 + this.ybase - j + 1, 1);\n    // this.maxRange();\n    this.updateRange(this.scrollTop);\n    this.updateRange(this.scrollBottom);\n  }\n  this.state = normal;\n};\n\n// ESC c Full Reset (RIS).\nTerminal.prototype.reset = function() {\n  this.options.rows = this.rows;\n  this.options.cols = this.cols;\n  Terminal.call(this, this.options);\n  this.refresh(0, this.rows - 1);\n};\n\n// ESC H Tab Set (HTS is 0x88).\nTerminal.prototype.tabSet = function() {\n  this.tabs[this.x] = true;\n  this.state = normal;\n};\n\n/**\n * CSI\n */\n\n// CSI Ps A\n// Cursor Up Ps Times (default = 1) (CUU).\nTerminal.prototype.cursorUp = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.y -= param;\n  if (this.y < 0) this.y = 0;\n};\n\n// CSI Ps B\n// Cursor Down Ps Times (default = 1) (CUD).\nTerminal.prototype.cursorDown = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.y += param;\n  if (this.y >= this.rows) {\n    this.y = this.rows - 1;\n  }\n};\n\n// CSI Ps C\n// Cursor Forward Ps Times (default = 1) (CUF).\nTerminal.prototype.cursorForward = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.x += param;\n  if (this.x >= this.cols) {\n    this.x = this.cols - 1;\n  }\n};\n\n// CSI Ps D\n// Cursor Backward Ps Times (default = 1) (CUB).\nTerminal.prototype.cursorBackward = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.x -= param;\n  if (this.x < 0) this.x = 0;\n};\n\n// CSI Ps ; Ps H\n// Cursor Position [row;column] (default = [1,1]) (CUP).\nTerminal.prototype.cursorPos = function(params) {\n  var row, col;\n\n  row = params[0] - 1;\n\n  if (params.length >= 2) {\n    col = params[1] - 1;\n  } else {\n    col = 0;\n  }\n\n  if (row < 0) {\n    row = 0;\n  } else if (row >= this.rows) {\n    row = this.rows - 1;\n  }\n\n  if (col < 0) {\n    col = 0;\n  } else if (col >= this.cols) {\n    col = this.cols - 1;\n  }\n\n  this.x = col;\n  this.y = row;\n};\n\n// CSI Ps J  Erase in Display (ED).\n//     Ps = 0  -> Erase Below (default).\n//     Ps = 1  -> Erase Above.\n//     Ps = 2  -> Erase All.\n//     Ps = 3  -> Erase Saved Lines (xterm).\n// CSI ? Ps J\n//   Erase in Display (DECSED).\n//     Ps = 0  -> Selective Erase Below (default).\n//     Ps = 1  -> Selective Erase Above.\n//     Ps = 2  -> Selective Erase All.\nTerminal.prototype.eraseInDisplay = function(params) {\n  var j;\n  switch (params[0]) {\n    case 0:\n      this.eraseRight(this.x, this.y);\n      j = this.y + 1;\n      for (; j < this.rows; j++) {\n        this.eraseLine(j);\n      }\n      break;\n    case 1:\n      this.eraseLeft(this.x, this.y);\n      j = this.y;\n      while (j--) {\n        this.eraseLine(j);\n      }\n      break;\n    case 2:\n      j = this.rows;\n      while (j--) this.eraseLine(j);\n      break;\n    case 3:\n      ; // no saved lines\n      break;\n  }\n};\n\n// CSI Ps K  Erase in Line (EL).\n//     Ps = 0  -> Erase to Right (default).\n//     Ps = 1  -> Erase to Left.\n//     Ps = 2  -> Erase All.\n// CSI ? Ps K\n//   Erase in Line (DECSEL).\n//     Ps = 0  -> Selective Erase to Right (default).\n//     Ps = 1  -> Selective Erase to Left.\n//     Ps = 2  -> Selective Erase All.\nTerminal.prototype.eraseInLine = function(params) {\n  switch (params[0]) {\n    case 0:\n      this.eraseRight(this.x, this.y);\n      break;\n    case 1:\n      this.eraseLeft(this.x, this.y);\n      break;\n    case 2:\n      this.eraseLine(this.y);\n      break;\n  }\n};\n\n// CSI Pm m  Character Attributes (SGR).\n//     Ps = 0  -> Normal (default).\n//     Ps = 1  -> Bold.\n//     Ps = 4  -> Underlined.\n//     Ps = 5  -> Blink (appears as Bold).\n//     Ps = 7  -> Inverse.\n//     Ps = 8  -> Invisible, i.e., hidden (VT300).\n//     Ps = 2 2  -> Normal (neither bold nor faint).\n//     Ps = 2 4  -> Not underlined.\n//     Ps = 2 5  -> Steady (not blinking).\n//     Ps = 2 7  -> Positive (not inverse).\n//     Ps = 2 8  -> Visible, i.e., not hidden (VT300).\n//     Ps = 3 0  -> Set foreground color to Black.\n//     Ps = 3 1  -> Set foreground color to Red.\n//     Ps = 3 2  -> Set foreground color to Green.\n//     Ps = 3 3  -> Set foreground color to Yellow.\n//     Ps = 3 4  -> Set foreground color to Blue.\n//     Ps = 3 5  -> Set foreground color to Magenta.\n//     Ps = 3 6  -> Set foreground color to Cyan.\n//     Ps = 3 7  -> Set foreground color to White.\n//     Ps = 3 9  -> Set foreground color to default (original).\n//     Ps = 4 0  -> Set background color to Black.\n//     Ps = 4 1  -> Set background color to Red.\n//     Ps = 4 2  -> Set background color to Green.\n//     Ps = 4 3  -> Set background color to Yellow.\n//     Ps = 4 4  -> Set background color to Blue.\n//     Ps = 4 5  -> Set background color to Magenta.\n//     Ps = 4 6  -> Set background color to Cyan.\n//     Ps = 4 7  -> Set background color to White.\n//     Ps = 4 9  -> Set background color to default (original).\n\n//   If 16-color support is compiled, the following apply.  Assume\n//   that xterm's resources are set so that the ISO color codes are\n//   the first 8 of a set of 16.  Then the aixterm colors are the\n//   bright versions of the ISO colors:\n//     Ps = 9 0  -> Set foreground color to Black.\n//     Ps = 9 1  -> Set foreground color to Red.\n//     Ps = 9 2  -> Set foreground color to Green.\n//     Ps = 9 3  -> Set foreground color to Yellow.\n//     Ps = 9 4  -> Set foreground color to Blue.\n//     Ps = 9 5  -> Set foreground color to Magenta.\n//     Ps = 9 6  -> Set foreground color to Cyan.\n//     Ps = 9 7  -> Set foreground color to White.\n//     Ps = 1 0 0  -> Set background color to Black.\n//     Ps = 1 0 1  -> Set background color to Red.\n//     Ps = 1 0 2  -> Set background color to Green.\n//     Ps = 1 0 3  -> Set background color to Yellow.\n//     Ps = 1 0 4  -> Set background color to Blue.\n//     Ps = 1 0 5  -> Set background color to Magenta.\n//     Ps = 1 0 6  -> Set background color to Cyan.\n//     Ps = 1 0 7  -> Set background color to White.\n\n//   If xterm is compiled with the 16-color support disabled, it\n//   supports the following, from rxvt:\n//     Ps = 1 0 0  -> Set foreground and background color to\n//     default.\n\n//   If 88- or 256-color support is compiled, the following apply.\n//     Ps = 3 8  ; 5  ; Ps -> Set foreground color to the second\n//     Ps.\n//     Ps = 4 8  ; 5  ; Ps -> Set background color to the second\n//     Ps.\nTerminal.prototype.charAttributes = function(params) {\n  // Optimize a single SGR0.\n  if (params.length === 1 && params[0] === 0) {\n    this.curAttr = this.defAttr;\n    return;\n  }\n\n  var l = params.length\n    , i = 0\n    , flags = this.curAttr >> 18\n    , fg = (this.curAttr >> 9) & 0x1ff\n    , bg = this.curAttr & 0x1ff\n    , p;\n\n  for (; i < l; i++) {\n    p = params[i];\n    if (p >= 30 && p <= 37) {\n      // fg color 8\n      fg = p - 30;\n    } else if (p >= 40 && p <= 47) {\n      // bg color 8\n      bg = p - 40;\n    } else if (p >= 90 && p <= 97) {\n      // fg color 16\n      p += 8;\n      fg = p - 90;\n    } else if (p >= 100 && p <= 107) {\n      // bg color 16\n      p += 8;\n      bg = p - 100;\n    } else if (p === 0) {\n      // default\n      flags = this.defAttr >> 18;\n      fg = (this.defAttr >> 9) & 0x1ff;\n      bg = this.defAttr & 0x1ff;\n      // flags = 0;\n      // fg = 0x1ff;\n      // bg = 0x1ff;\n    } else if (p === 1) {\n      // bold text\n      flags |= 1;\n    } else if (p === 4) {\n      // underlined text\n      flags |= 2;\n    } else if (p === 5) {\n      // blink\n      flags |= 4;\n    } else if (p === 7) {\n      // inverse and positive\n      // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n      flags |= 8;\n    } else if (p === 8) {\n      // invisible\n      flags |= 16;\n    } else if (p === 22) {\n      // not bold\n      flags &= ~1;\n    } else if (p === 24) {\n      // not underlined\n      flags &= ~2;\n    } else if (p === 25) {\n      // not blink\n      flags &= ~4;\n    } else if (p === 27) {\n      // not inverse\n      flags &= ~8;\n    } else if (p === 28) {\n      // not invisible\n      flags &= ~16;\n    } else if (p === 39) {\n      // reset fg\n      fg = (this.defAttr >> 9) & 0x1ff;\n    } else if (p === 49) {\n      // reset bg\n      bg = this.defAttr & 0x1ff;\n    } else if (p === 38) {\n      // fg color 256\n      if (params[i + 1] === 2) {\n        i += 2;\n        fg = matchColor(\n          params[i] & 0xff,\n          params[i + 1] & 0xff,\n          params[i + 2] & 0xff);\n        if (fg === -1) fg = 0x1ff;\n        i += 2;\n      } else if (params[i + 1] === 5) {\n        i += 2;\n        p = params[i] & 0xff;\n        fg = p;\n      }\n    } else if (p === 48) {\n      // bg color 256\n      if (params[i + 1] === 2) {\n        i += 2;\n        bg = matchColor(\n          params[i] & 0xff,\n          params[i + 1] & 0xff,\n          params[i + 2] & 0xff);\n        if (bg === -1) bg = 0x1ff;\n        i += 2;\n      } else if (params[i + 1] === 5) {\n        i += 2;\n        p = params[i] & 0xff;\n        bg = p;\n      }\n    } else if (p === 100) {\n      // reset fg/bg\n      fg = (this.defAttr >> 9) & 0x1ff;\n      bg = this.defAttr & 0x1ff;\n    } else {\n      this.error('Unknown SGR attribute: %d.', p);\n    }\n  }\n\n  this.curAttr = (flags << 18) | (fg << 9) | bg;\n};\n\n// CSI Ps n  Device Status Report (DSR).\n//     Ps = 5  -> Status Report.  Result (``OK'') is\n//   CSI 0 n\n//     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n//   Result is\n//   CSI r ; c R\n// CSI ? Ps n\n//   Device Status Report (DSR, DEC-specific).\n//     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n//     ? r ; c R (assumes page is zero).\n//     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n//     or CSI ? 1 1  n  (not ready).\n//     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n//     or CSI ? 2 1  n  (locked).\n//     Ps = 2 6  -> Report Keyboard status as\n//   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n//   The last two parameters apply to VT400 & up, and denote key-\n//   board ready and LK01 respectively.\n//     Ps = 5 3  -> Report Locator status as\n//   CSI ? 5 3  n  Locator available, if compiled-in, or\n//   CSI ? 5 0  n  No Locator, if not.\nTerminal.prototype.deviceStatus = function(params) {\n  if (!this.prefix) {\n    switch (params[0]) {\n      case 5:\n        // status report\n        this.send('\\x1b[0n');\n        break;\n      case 6:\n        // cursor position\n        this.send('\\x1b['\n          + (this.y + 1)\n          + ';'\n          + (this.x + 1)\n          + 'R');\n        break;\n    }\n  } else if (this.prefix === '?') {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params[0]) {\n      case 6:\n        // cursor position\n        this.send('\\x1b[?'\n          + (this.y + 1)\n          + ';'\n          + (this.x + 1)\n          + 'R');\n        break;\n      case 15:\n        // no printer\n        // this.send('\\x1b[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.send('\\x1b[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.send('\\x1b[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.send('\\x1b[?50n');\n        break;\n    }\n  }\n};\n\n/**\n * Additions\n */\n\n// CSI Ps @\n// Insert Ps (Blank) Character(s) (default = 1) (ICH).\nTerminal.prototype.insertChars = function(params) {\n  var param, row, j, ch;\n\n  param = params[0];\n  if (param < 1) param = 1;\n\n  row = this.y + this.ybase;\n  j = this.x;\n  ch = [this.eraseAttr(), ' ']; // xterm\n\n  while (param-- && j < this.cols) {\n    this.lines[row].splice(j++, 0, ch);\n    this.lines[row].pop();\n  }\n};\n\n// CSI Ps E\n// Cursor Next Line Ps Times (default = 1) (CNL).\n// same as CSI Ps B ?\nTerminal.prototype.cursorNextLine = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.y += param;\n  if (this.y >= this.rows) {\n    this.y = this.rows - 1;\n  }\n  this.x = 0;\n};\n\n// CSI Ps F\n// Cursor Preceding Line Ps Times (default = 1) (CNL).\n// reuse CSI Ps A ?\nTerminal.prototype.cursorPrecedingLine = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.y -= param;\n  if (this.y < 0) this.y = 0;\n  this.x = 0;\n};\n\n// CSI Ps G\n// Cursor Character Absolute  [column] (default = [row,1]) (CHA).\nTerminal.prototype.cursorCharAbsolute = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.x = param - 1;\n};\n\n// CSI Ps L\n// Insert Ps Line(s) (default = 1) (IL).\nTerminal.prototype.insertLines = function(params) {\n  var param, row, j;\n\n  param = params[0];\n  if (param < 1) param = 1;\n  row = this.y + this.ybase;\n\n  j = this.rows - 1 - this.scrollBottom;\n  j = this.rows - 1 + this.ybase - j + 1;\n\n  while (param--) {\n    // test: echo -e '\\e[44m\\e[1L\\e[0m'\n    // blankLine(true) - xterm/linux behavior\n    this.lines.splice(row, 0, this.blankLine(true));\n    this.lines.splice(j, 1);\n  }\n\n  // this.maxRange();\n  this.updateRange(this.y);\n  this.updateRange(this.scrollBottom);\n};\n\n// CSI Ps M\n// Delete Ps Line(s) (default = 1) (DL).\nTerminal.prototype.deleteLines = function(params) {\n  var param, row, j;\n\n  param = params[0];\n  if (param < 1) param = 1;\n  row = this.y + this.ybase;\n\n  j = this.rows - 1 - this.scrollBottom;\n  j = this.rows - 1 + this.ybase - j;\n\n  while (param--) {\n    // test: echo -e '\\e[44m\\e[1M\\e[0m'\n    // blankLine(true) - xterm/linux behavior\n    this.lines.splice(j + 1, 0, this.blankLine(true));\n    this.lines.splice(row, 1);\n  }\n\n  // this.maxRange();\n  this.updateRange(this.y);\n  this.updateRange(this.scrollBottom);\n};\n\n// CSI Ps P\n// Delete Ps Character(s) (default = 1) (DCH).\nTerminal.prototype.deleteChars = function(params) {\n  var param, row, ch;\n\n  param = params[0];\n  if (param < 1) param = 1;\n\n  row = this.y + this.ybase;\n  ch = [this.eraseAttr(), ' ']; // xterm\n\n  while (param--) {\n    this.lines[row].splice(this.x, 1);\n    this.lines[row].push(ch);\n  }\n};\n\n// CSI Ps X\n// Erase Ps Character(s) (default = 1) (ECH).\nTerminal.prototype.eraseChars = function(params) {\n  var param, row, j, ch;\n\n  param = params[0];\n  if (param < 1) param = 1;\n\n  row = this.y + this.ybase;\n  j = this.x;\n  ch = [this.eraseAttr(), ' ']; // xterm\n\n  while (param-- && j < this.cols) {\n    this.lines[row][j++] = ch;\n  }\n};\n\n// CSI Pm `  Character Position Absolute\n//   [column] (default = [row,1]) (HPA).\nTerminal.prototype.charPosAbsolute = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.x = param - 1;\n  if (this.x >= this.cols) {\n    this.x = this.cols - 1;\n  }\n};\n\n// 141 61 a * HPR -\n// Horizontal Position Relative\n// reuse CSI Ps C ?\nTerminal.prototype.HPositionRelative = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.x += param;\n  if (this.x >= this.cols) {\n    this.x = this.cols - 1;\n  }\n};\n\n// CSI Ps c  Send Device Attributes (Primary DA).\n//     Ps = 0  or omitted -> request attributes from terminal.  The\n//     response depends on the decTerminalID resource setting.\n//     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n//     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n//     -> CSI ? 6 c  (``VT102'')\n//     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n//   The VT100-style response parameters do not mean anything by\n//   themselves.  VT220 parameters do, telling the host what fea-\n//   tures the terminal supports:\n//     Ps = 1  -> 132-columns.\n//     Ps = 2  -> Printer.\n//     Ps = 6  -> Selective erase.\n//     Ps = 8  -> User-defined keys.\n//     Ps = 9  -> National replacement character sets.\n//     Ps = 1 5  -> Technical characters.\n//     Ps = 2 2  -> ANSI color, e.g., VT525.\n//     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n// CSI > Ps c\n//   Send Device Attributes (Secondary DA).\n//     Ps = 0  or omitted -> request the terminal's identification\n//     code.  The response depends on the decTerminalID resource set-\n//     ting.  It should apply only to VT220 and up, but xterm extends\n//     this to VT100.\n//     -> CSI  > Pp ; Pv ; Pc c\n//   where Pp denotes the terminal type\n//     Pp = 0  -> ``VT100''.\n//     Pp = 1  -> ``VT220''.\n//   and Pv is the firmware version (for xterm, this was originally\n//   the XFree86 patch number, starting with 95).  In a DEC termi-\n//   nal, Pc indicates the ROM cartridge registration number and is\n//   always zero.\n// More information:\n//   xterm/charproc.c - line 2012, for more information.\n//   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\nTerminal.prototype.sendDeviceAttributes = function(params) {\n  if (params[0] > 0) return;\n\n  if (!this.prefix) {\n    if (this.is('xterm')\n        || this.is('rxvt-unicode')\n        || this.is('screen')) {\n      this.send('\\x1b[?1;2c');\n    } else if (this.is('linux')) {\n      this.send('\\x1b[?6c');\n    }\n  } else if (this.prefix === '>') {\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this.is('xterm')) {\n      this.send('\\x1b[>0;276;0c');\n    } else if (this.is('rxvt-unicode')) {\n      this.send('\\x1b[>85;95;0c');\n    } else if (this.is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this.send(params[0] + 'c');\n    } else if (this.is('screen')) {\n      this.send('\\x1b[>83;40003;0c');\n    }\n  }\n};\n\n// CSI Pm d\n// Line Position Absolute  [row] (default = [1,column]) (VPA).\nTerminal.prototype.linePosAbsolute = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.y = param - 1;\n  if (this.y >= this.rows) {\n    this.y = this.rows - 1;\n  }\n};\n\n// 145 65 e * VPR - Vertical Position Relative\n// reuse CSI Ps B ?\nTerminal.prototype.VPositionRelative = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.y += param;\n  if (this.y >= this.rows) {\n    this.y = this.rows - 1;\n  }\n};\n\n// CSI Ps ; Ps f\n//   Horizontal and Vertical Position [row;column] (default =\n//   [1,1]) (HVP).\nTerminal.prototype.HVPosition = function(params) {\n  if (params[0] < 1) params[0] = 1;\n  if (params[1] < 1) params[1] = 1;\n\n  this.y = params[0] - 1;\n  if (this.y >= this.rows) {\n    this.y = this.rows - 1;\n  }\n\n  this.x = params[1] - 1;\n  if (this.x >= this.cols) {\n    this.x = this.cols - 1;\n  }\n};\n\n// CSI Pm h  Set Mode (SM).\n//     Ps = 2  -> Keyboard Action Mode (AM).\n//     Ps = 4  -> Insert Mode (IRM).\n//     Ps = 1 2  -> Send/receive (SRM).\n//     Ps = 2 0  -> Automatic Newline (LNM).\n// CSI ? Pm h\n//   DEC Private Mode Set (DECSET).\n//     Ps = 1  -> Application Cursor Keys (DECCKM).\n//     Ps = 2  -> Designate USASCII for character sets G0-G3\n//     (DECANM), and set VT100 mode.\n//     Ps = 3  -> 132 Column Mode (DECCOLM).\n//     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n//     Ps = 5  -> Reverse Video (DECSCNM).\n//     Ps = 6  -> Origin Mode (DECOM).\n//     Ps = 7  -> Wraparound Mode (DECAWM).\n//     Ps = 8  -> Auto-repeat Keys (DECARM).\n//     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n//     tion Mouse Tracking.\n//     Ps = 1 0  -> Show toolbar (rxvt).\n//     Ps = 1 2  -> Start Blinking Cursor (att610).\n//     Ps = 1 8  -> Print form feed (DECPFF).\n//     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n//     Ps = 2 5  -> Show Cursor (DECTCEM).\n//     Ps = 3 0  -> Show scrollbar (rxvt).\n//     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n//     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n//     Ps = 4 0  -> Allow 80 -> 132 Mode.\n//     Ps = 4 1  -> more(1) fix (see curses resource).\n//     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n//     RCM).\n//     Ps = 4 4  -> Turn On Margin Bell.\n//     Ps = 4 5  -> Reverse-wraparound Mode.\n//     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n//     compile-time option.\n//     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n//     abled by the titeInhibit resource).\n//     Ps = 6 6  -> Application keypad (DECNKM).\n//     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n//     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n//     release.  See the section Mouse Tracking.\n//     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n//     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n//     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n//     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n//     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n//     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n//     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n//     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n//     (enables the eightBitInput resource).\n//     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n//     Lock keys.  (This enables the numLock resource).\n//     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n//     enables the metaSendsEscape resource).\n//     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n//     key.\n//     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n//     enables the altSendsEscape resource).\n//     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n//     (This enables the keepSelection resource).\n//     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n//     the selectToClipboard resource).\n//     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n//     Control-G is received.  (This enables the bellIsUrgent\n//     resource).\n//     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n//     is received.  (enables the popOnBell resource).\n//     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n//     disabled by the titeInhibit resource).\n//     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n//     abled by the titeInhibit resource).\n//     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n//     Screen Buffer, clearing it first.  (This may be disabled by\n//     the titeInhibit resource).  This combines the effects of the 1\n//     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n//     applications rather than the 4 7  mode.\n//     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n//     Ps = 1 0 5 1  -> Set Sun function-key mode.\n//     Ps = 1 0 5 2  -> Set HP function-key mode.\n//     Ps = 1 0 5 3  -> Set SCO function-key mode.\n//     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n//     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n//     Ps = 2 0 0 4  -> Set bracketed paste mode.\n// Modes:\n//   http://vt100.net/docs/vt220-rm/chapter4.html\nTerminal.prototype.setMode = function(params) {\n  if (typeof params === 'object') {\n    var l = params.length\n      , i = 0;\n\n    for (; i < l; i++) {\n      this.setMode(params[i]);\n    }\n\n    return;\n  }\n\n  if (!this.prefix) {\n    switch (params) {\n      case 4:\n        this.insertMode = true;\n        break;\n      case 20:\n        //this.convertEol = true;\n        break;\n    }\n  } else if (this.prefix === '?') {\n    switch (params) {\n      case 1:\n        this.applicationCursor = true;\n        break;\n      case 2:\n        this.setgCharset(0, Terminal.charsets.US);\n        this.setgCharset(1, Terminal.charsets.US);\n        this.setgCharset(2, Terminal.charsets.US);\n        this.setgCharset(3, Terminal.charsets.US);\n        // set VT100 mode here\n        break;\n      case 3: // 132 col mode\n        this.savedCols = this.cols;\n        this.resize(132, this.rows);\n        break;\n      case 6:\n        this.originMode = true;\n        break;\n      case 7:\n        this.wraparoundMode = true;\n        break;\n      case 66:\n        this.log('Serial port requested application keypad.');\n        this.applicationKeypad = true;\n        break;\n      case 9: // X10 Mouse\n        // no release, no motion, no wheel, no modifiers.\n      case 1000: // vt200 mouse\n        // no motion.\n        // no modifiers, except control on the wheel.\n      case 1002: // button event mouse\n      case 1003: // any event mouse\n        // any event - sends motion events,\n        // even if there is no button held down.\n        this.x10Mouse = params === 9;\n        this.vt200Mouse = params === 1000;\n        this.normalMouse = params > 1000;\n        this.mouseEvents = true;\n        this.element.style.cursor = 'default';\n        this.log('Binding to mouse events.');\n        break;\n      case 1004: // send focusin/focusout events\n        // focusin: ^[[I\n        // focusout: ^[[O\n        this.sendFocus = true;\n        break;\n      case 1005: // utf8 ext mode mouse\n        this.utfMouse = true;\n        // for wide terminals\n        // simply encodes large values as utf8 characters\n        break;\n      case 1006: // sgr ext mode mouse\n        this.sgrMouse = true;\n        // for wide terminals\n        // does not add 32 to fields\n        // press: ^[[<b;x;yM\n        // release: ^[[<b;x;ym\n        break;\n      case 1015: // urxvt ext mode mouse\n        this.urxvtMouse = true;\n        // for wide terminals\n        // numbers for fields\n        // press: ^[[b;x;yM\n        // motion: ^[[b;x;yT\n        break;\n      case 25: // show cursor\n        this.cursorHidden = false;\n        break;\n      case 1049: // alt screen buffer cursor\n        //this.saveCursor();\n        ; // FALL-THROUGH\n      case 47: // alt screen buffer\n      case 1047: // alt screen buffer\n        if (!this.normal) {\n          var normal = {\n            lines: this.lines,\n            ybase: this.ybase,\n            ydisp: this.ydisp,\n            x: this.x,\n            y: this.y,\n            scrollTop: this.scrollTop,\n            scrollBottom: this.scrollBottom,\n            tabs: this.tabs\n            // XXX save charset(s) here?\n            // charset: this.charset,\n            // glevel: this.glevel,\n            // charsets: this.charsets\n          };\n          this.reset();\n          this.normal = normal;\n        }\n        break;\n    }\n  }\n};\n\n// CSI Pm l  Reset Mode (RM).\n//     Ps = 2  -> Keyboard Action Mode (AM).\n//     Ps = 4  -> Replace Mode (IRM).\n//     Ps = 1 2  -> Send/receive (SRM).\n//     Ps = 2 0  -> Normal Linefeed (LNM).\n// CSI ? Pm l\n//   DEC Private Mode Reset (DECRST).\n//     Ps = 1  -> Normal Cursor Keys (DECCKM).\n//     Ps = 2  -> Designate VT52 mode (DECANM).\n//     Ps = 3  -> 80 Column Mode (DECCOLM).\n//     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n//     Ps = 5  -> Normal Video (DECSCNM).\n//     Ps = 6  -> Normal Cursor Mode (DECOM).\n//     Ps = 7  -> No Wraparound Mode (DECAWM).\n//     Ps = 8  -> No Auto-repeat Keys (DECARM).\n//     Ps = 9  -> Don't send Mouse X & Y on button press.\n//     Ps = 1 0  -> Hide toolbar (rxvt).\n//     Ps = 1 2  -> Stop Blinking Cursor (att610).\n//     Ps = 1 8  -> Don't print form feed (DECPFF).\n//     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n//     Ps = 2 5  -> Hide Cursor (DECTCEM).\n//     Ps = 3 0  -> Don't show scrollbar (rxvt).\n//     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n//     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n//     Ps = 4 1  -> No more(1) fix (see curses resource).\n//     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n//     NRCM).\n//     Ps = 4 4  -> Turn Off Margin Bell.\n//     Ps = 4 5  -> No Reverse-wraparound Mode.\n//     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n//     compile-time option).\n//     Ps = 4 7  -> Use Normal Screen Buffer.\n//     Ps = 6 6  -> Numeric keypad (DECNKM).\n//     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n//     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n//     release.  See the section Mouse Tracking.\n//     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n//     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n//     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n//     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n//     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n//     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n//     (rxvt).\n//     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n//     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n//     the eightBitInput resource).\n//     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n//     Lock keys.  (This disables the numLock resource).\n//     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n//     (This disables the metaSendsEscape resource).\n//     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n//     Delete key.\n//     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n//     (This disables the altSendsEscape resource).\n//     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n//     (This disables the keepSelection resource).\n//     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n//     the selectToClipboard resource).\n//     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n//     Control-G is received.  (This disables the bellIsUrgent\n//     resource).\n//     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n//     G is received.  (This disables the popOnBell resource).\n//     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n//     first if in the Alternate Screen.  (This may be disabled by\n//     the titeInhibit resource).\n//     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n//     disabled by the titeInhibit resource).\n//     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n//     as in DECRC.  (This may be disabled by the titeInhibit\n//     resource).  This combines the effects of the 1 0 4 7  and 1 0\n//     4 8  modes.  Use this with terminfo-based applications rather\n//     than the 4 7  mode.\n//     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n//     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n//     Ps = 1 0 5 2  -> Reset HP function-key mode.\n//     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n//     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n//     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n//     Ps = 2 0 0 4  -> Reset bracketed paste mode.\nTerminal.prototype.resetMode = function(params) {\n  if (typeof params === 'object') {\n    var l = params.length\n      , i = 0;\n\n    for (; i < l; i++) {\n      this.resetMode(params[i]);\n    }\n\n    return;\n  }\n\n  if (!this.prefix) {\n    switch (params) {\n      case 4:\n        this.insertMode = false;\n        break;\n      case 20:\n        //this.convertEol = false;\n        break;\n    }\n  } else if (this.prefix === '?') {\n    switch (params) {\n      case 1:\n        this.applicationCursor = false;\n        break;\n      case 3:\n        if (this.cols === 132 && this.savedCols) {\n          this.resize(this.savedCols, this.rows);\n        }\n        delete this.savedCols;\n        break;\n      case 6:\n        this.originMode = false;\n        break;\n      case 7:\n        this.wraparoundMode = false;\n        break;\n      case 66:\n        this.log('Switching back to normal keypad.');\n        this.applicationKeypad = false;\n        break;\n      case 9: // X10 Mouse\n      case 1000: // vt200 mouse\n      case 1002: // button event mouse\n      case 1003: // any event mouse\n        this.x10Mouse = false;\n        this.vt200Mouse = false;\n        this.normalMouse = false;\n        this.mouseEvents = false;\n        this.element.style.cursor = '';\n        break;\n      case 1004: // send focusin/focusout events\n        this.sendFocus = false;\n        break;\n      case 1005: // utf8 ext mode mouse\n        this.utfMouse = false;\n        break;\n      case 1006: // sgr ext mode mouse\n        this.sgrMouse = false;\n        break;\n      case 1015: // urxvt ext mode mouse\n        this.urxvtMouse = false;\n        break;\n      case 25: // hide cursor\n        this.cursorHidden = true;\n        break;\n      case 1049: // alt screen buffer cursor\n        ; // FALL-THROUGH\n      case 47: // normal screen buffer\n      case 1047: // normal screen buffer - clearing it first\n        if (this.normal) {\n          this.lines = this.normal.lines;\n          this.ybase = this.normal.ybase;\n          this.ydisp = this.normal.ydisp;\n          this.x = this.normal.x;\n          this.y = this.normal.y;\n          this.scrollTop = this.normal.scrollTop;\n          this.scrollBottom = this.normal.scrollBottom;\n          this.tabs = this.normal.tabs;\n          this.normal = null;\n          // if (params === 1049) {\n          //   this.x = this.savedX;\n          //   this.y = this.savedY;\n          // }\n          this.refresh(0, this.rows - 1);\n        }\n        break;\n    }\n  }\n};\n\n// CSI Ps ; Ps r\n//   Set Scrolling Region [top;bottom] (default = full size of win-\n//   dow) (DECSTBM).\n// CSI ? Pm r\nTerminal.prototype.setScrollRegion = function(params) {\n  if (this.prefix) return;\n  this.scrollTop = (params[0] || 1) - 1;\n  this.scrollBottom = (params[1] || this.rows) - 1;\n  this.x = 0;\n  this.y = 0;\n};\n\n// CSI s\n//   Save cursor (ANSI.SYS).\nTerminal.prototype.saveCursor = function(params) {\n  this.savedX = this.x;\n  this.savedY = this.y;\n};\n\n// CSI u\n//   Restore cursor (ANSI.SYS).\nTerminal.prototype.restoreCursor = function(params) {\n  this.x = this.savedX || 0;\n  this.y = this.savedY || 0;\n};\n\n/**\n * Lesser Used\n */\n\n// CSI Ps I\n//   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\nTerminal.prototype.cursorForwardTab = function(params) {\n  var param = params[0] || 1;\n  while (param--) {\n    this.x = this.nextStop();\n  }\n};\n\n// CSI Ps S  Scroll up Ps lines (default = 1) (SU).\nTerminal.prototype.scrollUp = function(params) {\n  var param = params[0] || 1;\n  while (param--) {\n    this.lines.splice(this.ybase + this.scrollTop, 1);\n    this.lines.splice(this.ybase + this.scrollBottom, 0, this.blankLine());\n  }\n  // this.maxRange();\n  this.updateRange(this.scrollTop);\n  this.updateRange(this.scrollBottom);\n};\n\n// CSI Ps T  Scroll down Ps lines (default = 1) (SD).\nTerminal.prototype.scrollDown = function(params) {\n  var param = params[0] || 1;\n  while (param--) {\n    this.lines.splice(this.ybase + this.scrollBottom, 1);\n    this.lines.splice(this.ybase + this.scrollTop, 0, this.blankLine());\n  }\n  // this.maxRange();\n  this.updateRange(this.scrollTop);\n  this.updateRange(this.scrollBottom);\n};\n\n// CSI Ps ; Ps ; Ps ; Ps ; Ps T\n//   Initiate highlight mouse tracking.  Parameters are\n//   [func;startx;starty;firstrow;lastrow].  See the section Mouse\n//   Tracking.\nTerminal.prototype.initMouseTracking = function(params) {\n  // Relevant: DECSET 1001\n};\n\n// CSI > Ps; Ps T\n//   Reset one or more features of the title modes to the default\n//   value.  Normally, \"reset\" disables the feature.  It is possi-\n//   ble to disable the ability to reset features by compiling a\n//   different default for the title modes into xterm.\n//     Ps = 0  -> Do not set window/icon labels using hexadecimal.\n//     Ps = 1  -> Do not query window/icon labels using hexadeci-\n//     mal.\n//     Ps = 2  -> Do not set window/icon labels using UTF-8.\n//     Ps = 3  -> Do not query window/icon labels using UTF-8.\n//   (See discussion of \"Title Modes\").\nTerminal.prototype.resetTitleModes = function(params) {\n  ;\n};\n\n// CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\nTerminal.prototype.cursorBackwardTab = function(params) {\n  var param = params[0] || 1;\n  while (param--) {\n    this.x = this.prevStop();\n  }\n};\n\n// CSI Ps b  Repeat the preceding graphic character Ps times (REP).\nTerminal.prototype.repeatPrecedingCharacter = function(params) {\n  var param = params[0] || 1\n    , line = this.lines[this.ybase + this.y]\n    , ch = line[this.x - 1] || [this.defAttr, ' '];\n\n  while (param--) line[this.x++] = ch;\n};\n\n// CSI Ps g  Tab Clear (TBC).\n//     Ps = 0  -> Clear Current Column (default).\n//     Ps = 3  -> Clear All.\n// Potentially:\n//   Ps = 2  -> Clear Stops on Line.\n//   http://vt100.net/annarbor/aaa-ug/section6.html\nTerminal.prototype.tabClear = function(params) {\n  var param = params[0];\n  if (param <= 0) {\n    delete this.tabs[this.x];\n  } else if (param === 3) {\n    this.tabs = {};\n  }\n};\n\n// CSI Pm i  Media Copy (MC).\n//     Ps = 0  -> Print screen (default).\n//     Ps = 4  -> Turn off printer controller mode.\n//     Ps = 5  -> Turn on printer controller mode.\n// CSI ? Pm i\n//   Media Copy (MC, DEC-specific).\n//     Ps = 1  -> Print line containing cursor.\n//     Ps = 4  -> Turn off autoprint mode.\n//     Ps = 5  -> Turn on autoprint mode.\n//     Ps = 1  0  -> Print composed display, ignores DECPEX.\n//     Ps = 1  1  -> Print all pages.\nTerminal.prototype.mediaCopy = function(params) {\n  ;\n};\n\n// CSI > Ps; Ps m\n//   Set or reset resource-values used by xterm to decide whether\n//   to construct escape sequences holding information about the\n//   modifiers pressed with a given key.  The first parameter iden-\n//   tifies the resource to set/reset.  The second parameter is the\n//   value to assign to the resource.  If the second parameter is\n//   omitted, the resource is reset to its initial value.\n//     Ps = 1  -> modifyCursorKeys.\n//     Ps = 2  -> modifyFunctionKeys.\n//     Ps = 4  -> modifyOtherKeys.\n//   If no parameters are given, all resources are reset to their\n//   initial values.\nTerminal.prototype.setResources = function(params) {\n  ;\n};\n\n// CSI > Ps n\n//   Disable modifiers which may be enabled via the CSI > Ps; Ps m\n//   sequence.  This corresponds to a resource value of \"-1\", which\n//   cannot be set with the other sequence.  The parameter identi-\n//   fies the resource to be disabled:\n//     Ps = 1  -> modifyCursorKeys.\n//     Ps = 2  -> modifyFunctionKeys.\n//     Ps = 4  -> modifyOtherKeys.\n//   If the parameter is omitted, modifyFunctionKeys is disabled.\n//   When modifyFunctionKeys is disabled, xterm uses the modifier\n//   keys to make an extended sequence of functions rather than\n//   adding a parameter to each function key to denote the modi-\n//   fiers.\nTerminal.prototype.disableModifiers = function(params) {\n  ;\n};\n\n// CSI > Ps p\n//   Set resource value pointerMode.  This is used by xterm to\n//   decide whether to hide the pointer cursor as the user types.\n//   Valid values for the parameter:\n//     Ps = 0  -> never hide the pointer.\n//     Ps = 1  -> hide if the mouse tracking mode is not enabled.\n//     Ps = 2  -> always hide the pointer.  If no parameter is\n//     given, xterm uses the default, which is 1 .\nTerminal.prototype.setPointerMode = function(params) {\n  ;\n};\n\n// CSI ! p   Soft terminal reset (DECSTR).\n// http://vt100.net/docs/vt220-rm/table4-10.html\nTerminal.prototype.softReset = function(params) {\n  this.cursorHidden = false;\n  this.insertMode = false;\n  this.originMode = false;\n  this.wraparoundMode = false; // autowrap\n  this.applicationKeypad = false; // ?\n  this.applicationCursor = false;\n  this.scrollTop = 0;\n  this.scrollBottom = this.rows - 1;\n  this.curAttr = this.defAttr;\n  this.x = this.y = 0; // ?\n  this.charset = null;\n  this.glevel = 0; // ??\n  this.charsets = [null]; // ??\n};\n\n// CSI Ps$ p\n//   Request ANSI mode (DECRQM).  For VT300 and up, reply is\n//     CSI Ps; Pm$ y\n//   where Ps is the mode number as in RM, and Pm is the mode\n//   value:\n//     0 - not recognized\n//     1 - set\n//     2 - reset\n//     3 - permanently set\n//     4 - permanently reset\nTerminal.prototype.requestAnsiMode = function(params) {\n  ;\n};\n\n// CSI ? Ps$ p\n//   Request DEC private mode (DECRQM).  For VT300 and up, reply is\n//     CSI ? Ps; Pm$ p\n//   where Ps is the mode number as in DECSET, Pm is the mode value\n//   as in the ANSI DECRQM.\nTerminal.prototype.requestPrivateMode = function(params) {\n  ;\n};\n\n// CSI Ps ; Ps \" p\n//   Set conformance level (DECSCL).  Valid values for the first\n//   parameter:\n//     Ps = 6 1  -> VT100.\n//     Ps = 6 2  -> VT200.\n//     Ps = 6 3  -> VT300.\n//   Valid values for the second parameter:\n//     Ps = 0  -> 8-bit controls.\n//     Ps = 1  -> 7-bit controls (always set for VT100).\n//     Ps = 2  -> 8-bit controls.\nTerminal.prototype.setConformanceLevel = function(params) {\n  ;\n};\n\n// CSI Ps q  Load LEDs (DECLL).\n//     Ps = 0  -> Clear all LEDS (default).\n//     Ps = 1  -> Light Num Lock.\n//     Ps = 2  -> Light Caps Lock.\n//     Ps = 3  -> Light Scroll Lock.\n//     Ps = 2  1  -> Extinguish Num Lock.\n//     Ps = 2  2  -> Extinguish Caps Lock.\n//     Ps = 2  3  -> Extinguish Scroll Lock.\nTerminal.prototype.loadLEDs = function(params) {\n  ;\n};\n\n// CSI Ps SP q\n//   Set cursor style (DECSCUSR, VT520).\n//     Ps = 0  -> blinking block.\n//     Ps = 1  -> blinking block (default).\n//     Ps = 2  -> steady block.\n//     Ps = 3  -> blinking underline.\n//     Ps = 4  -> steady underline.\nTerminal.prototype.setCursorStyle = function(params) {\n  ;\n};\n\n// CSI Ps \" q\n//   Select character protection attribute (DECSCA).  Valid values\n//   for the parameter:\n//     Ps = 0  -> DECSED and DECSEL can erase (default).\n//     Ps = 1  -> DECSED and DECSEL cannot erase.\n//     Ps = 2  -> DECSED and DECSEL can erase.\nTerminal.prototype.setCharProtectionAttr = function(params) {\n  ;\n};\n\n// CSI ? Pm r\n//   Restore DEC Private Mode Values.  The value of Ps previously\n//   saved is restored.  Ps values are the same as for DECSET.\nTerminal.prototype.restorePrivateValues = function(params) {\n  ;\n};\n\n// CSI Pt; Pl; Pb; Pr; Ps$ r\n//   Change Attributes in Rectangular Area (DECCARA), VT400 and up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n//     Ps denotes the SGR attributes to change: 0, 1, 4, 5, 7.\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.setAttrInRectangle = function(params) {\n  var t = params[0]\n    , l = params[1]\n    , b = params[2]\n    , r = params[3]\n    , attr = params[4];\n\n  var line\n    , i;\n\n  for (; t < b + 1; t++) {\n    line = this.lines[this.ybase + t];\n    for (i = l; i < r; i++) {\n      line[i] = [attr, line[i][1]];\n    }\n  }\n\n  // this.maxRange();\n  this.updateRange(params[0]);\n  this.updateRange(params[2]);\n};\n\n// CSI ? Pm s\n//   Save DEC Private Mode Values.  Ps values are the same as for\n//   DECSET.\nTerminal.prototype.savePrivateValues = function(params) {\n  ;\n};\n\n// CSI Ps ; Ps ; Ps t\n//   Window manipulation (from dtterm, as well as extensions).\n//   These controls may be disabled using the allowWindowOps\n//   resource.  Valid values for the first (and any additional\n//   parameters) are:\n//     Ps = 1  -> De-iconify window.\n//     Ps = 2  -> Iconify window.\n//     Ps = 3  ;  x ;  y -> Move window to [x, y].\n//     Ps = 4  ;  height ;  width -> Resize the xterm window to\n//     height and width in pixels.\n//     Ps = 5  -> Raise the xterm window to the front of the stack-\n//     ing order.\n//     Ps = 6  -> Lower the xterm window to the bottom of the\n//     stacking order.\n//     Ps = 7  -> Refresh the xterm window.\n//     Ps = 8  ;  height ;  width -> Resize the text area to\n//     [height;width] in characters.\n//     Ps = 9  ;  0  -> Restore maximized window.\n//     Ps = 9  ;  1  -> Maximize window (i.e., resize to screen\n//     size).\n//     Ps = 1 0  ;  0  -> Undo full-screen mode.\n//     Ps = 1 0  ;  1  -> Change to full-screen.\n//     Ps = 1 1  -> Report xterm window state.  If the xterm window\n//     is open (non-iconified), it returns CSI 1 t .  If the xterm\n//     window is iconified, it returns CSI 2 t .\n//     Ps = 1 3  -> Report xterm window position.  Result is CSI 3\n//     ; x ; y t\n//     Ps = 1 4  -> Report xterm window in pixels.  Result is CSI\n//     4  ;  height ;  width t\n//     Ps = 1 8  -> Report the size of the text area in characters.\n//     Result is CSI  8  ;  height ;  width t\n//     Ps = 1 9  -> Report the size of the screen in characters.\n//     Result is CSI  9  ;  height ;  width t\n//     Ps = 2 0  -> Report xterm window's icon label.  Result is\n//     OSC  L  label ST\n//     Ps = 2 1  -> Report xterm window's title.  Result is OSC  l\n//     label ST\n//     Ps = 2 2  ;  0  -> Save xterm icon and window title on\n//     stack.\n//     Ps = 2 2  ;  1  -> Save xterm icon title on stack.\n//     Ps = 2 2  ;  2  -> Save xterm window title on stack.\n//     Ps = 2 3  ;  0  -> Restore xterm icon and window title from\n//     stack.\n//     Ps = 2 3  ;  1  -> Restore xterm icon title from stack.\n//     Ps = 2 3  ;  2  -> Restore xterm window title from stack.\n//     Ps >= 2 4  -> Resize to Ps lines (DECSLPP).\nTerminal.prototype.manipulateWindow = function(params) {\n  ;\n};\n\n// CSI Pt; Pl; Pb; Pr; Ps$ t\n//   Reverse Attributes in Rectangular Area (DECRARA), VT400 and\n//   up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n//     Ps denotes the attributes to reverse, i.e.,  1, 4, 5, 7.\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.reverseAttrInRectangle = function(params) {\n  ;\n};\n\n// CSI > Ps; Ps t\n//   Set one or more features of the title modes.  Each parameter\n//   enables a single feature.\n//     Ps = 0  -> Set window/icon labels using hexadecimal.\n//     Ps = 1  -> Query window/icon labels using hexadecimal.\n//     Ps = 2  -> Set window/icon labels using UTF-8.\n//     Ps = 3  -> Query window/icon labels using UTF-8.  (See dis-\n//     cussion of \"Title Modes\")\nTerminal.prototype.setTitleModeFeature = function(params) {\n  ;\n};\n\n// CSI Ps SP t\n//   Set warning-bell volume (DECSWBV, VT520).\n//     Ps = 0  or 1  -> off.\n//     Ps = 2 , 3  or 4  -> low.\n//     Ps = 5 , 6 , 7 , or 8  -> high.\nTerminal.prototype.setWarningBellVolume = function(params) {\n  ;\n};\n\n// CSI Ps SP u\n//   Set margin-bell volume (DECSMBV, VT520).\n//     Ps = 1  -> off.\n//     Ps = 2 , 3  or 4  -> low.\n//     Ps = 0 , 5 , 6 , 7 , or 8  -> high.\nTerminal.prototype.setMarginBellVolume = function(params) {\n  ;\n};\n\n// CSI Pt; Pl; Pb; Pr; Pp; Pt; Pl; Pp$ v\n//   Copy Rectangular Area (DECCRA, VT400 and up).\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n//     Pp denotes the source page.\n//     Pt; Pl denotes the target location.\n//     Pp denotes the target page.\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.copyRectangle = function(params) {\n  ;\n};\n\n// CSI Pt ; Pl ; Pb ; Pr ' w\n//   Enable Filter Rectangle (DECEFR), VT420 and up.\n//   Parameters are [top;left;bottom;right].\n//   Defines the coordinates of a filter rectangle and activates\n//   it.  Anytime the locator is detected outside of the filter\n//   rectangle, an outside rectangle event is generated and the\n//   rectangle is disabled.  Filter rectangles are always treated\n//   as \"one-shot\" events.  Any parameters that are omitted default\n//   to the current locator position.  If all parameters are omit-\n//   ted, any locator motion will be reported.  DECELR always can-\n//   cels any prevous rectangle definition.\nTerminal.prototype.enableFilterRectangle = function(params) {\n  ;\n};\n\n// CSI Ps x  Request Terminal Parameters (DECREQTPARM).\n//   if Ps is a \"0\" (default) or \"1\", and xterm is emulating VT100,\n//   the control sequence elicits a response of the same form whose\n//   parameters describe the terminal:\n//     Ps -> the given Ps incremented by 2.\n//     Pn = 1  <- no parity.\n//     Pn = 1  <- eight bits.\n//     Pn = 1  <- 2  8  transmit 38.4k baud.\n//     Pn = 1  <- 2  8  receive 38.4k baud.\n//     Pn = 1  <- clock multiplier.\n//     Pn = 0  <- STP flags.\nTerminal.prototype.requestParameters = function(params) {\n  ;\n};\n\n// CSI Ps x  Select Attribute Change Extent (DECSACE).\n//     Ps = 0  -> from start to end position, wrapped.\n//     Ps = 1  -> from start to end position, wrapped.\n//     Ps = 2  -> rectangle (exact).\nTerminal.prototype.selectChangeExtent = function(params) {\n  ;\n};\n\n// CSI Pc; Pt; Pl; Pb; Pr$ x\n//   Fill Rectangular Area (DECFRA), VT420 and up.\n//     Pc is the character to use.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.fillRectangle = function(params) {\n  var ch = params[0]\n    , t = params[1]\n    , l = params[2]\n    , b = params[3]\n    , r = params[4];\n\n  var line\n    , i;\n\n  for (; t < b + 1; t++) {\n    line = this.lines[this.ybase + t];\n    for (i = l; i < r; i++) {\n      line[i] = [line[i][0], String.fromCharCode(ch)];\n    }\n  }\n\n  // this.maxRange();\n  this.updateRange(params[1]);\n  this.updateRange(params[3]);\n};\n\n// CSI Ps ; Pu ' z\n//   Enable Locator Reporting (DECELR).\n//   Valid values for the first parameter:\n//     Ps = 0  -> Locator disabled (default).\n//     Ps = 1  -> Locator enabled.\n//     Ps = 2  -> Locator enabled for one report, then disabled.\n//   The second parameter specifies the coordinate unit for locator\n//   reports.\n//   Valid values for the second parameter:\n//     Pu = 0  <- or omitted -> default to character cells.\n//     Pu = 1  <- device physical pixels.\n//     Pu = 2  <- character cells.\nTerminal.prototype.enableLocatorReporting = function(params) {\n  var val = params[0] > 0;\n  //this.mouseEvents = val;\n  //this.decLocator = val;\n};\n\n// CSI Pt; Pl; Pb; Pr$ z\n//   Erase Rectangular Area (DECERA), VT400 and up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.eraseRectangle = function(params) {\n  var t = params[0]\n    , l = params[1]\n    , b = params[2]\n    , r = params[3];\n\n  var line\n    , i\n    , ch;\n\n  ch = [this.eraseAttr(), ' ']; // xterm?\n\n  for (; t < b + 1; t++) {\n    line = this.lines[this.ybase + t];\n    for (i = l; i < r; i++) {\n      line[i] = ch;\n    }\n  }\n\n  // this.maxRange();\n  this.updateRange(params[0]);\n  this.updateRange(params[2]);\n};\n\n// CSI Pm ' {\n//   Select Locator Events (DECSLE).\n//   Valid values for the first (and any additional parameters)\n//   are:\n//     Ps = 0  -> only respond to explicit host requests (DECRQLP).\n//                (This is default).  It also cancels any filter\n//   rectangle.\n//     Ps = 1  -> report button down transitions.\n//     Ps = 2  -> do not report button down transitions.\n//     Ps = 3  -> report button up transitions.\n//     Ps = 4  -> do not report button up transitions.\nTerminal.prototype.setLocatorEvents = function(params) {\n  ;\n};\n\n// CSI Pt; Pl; Pb; Pr$ {\n//   Selective Erase Rectangular Area (DECSERA), VT400 and up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\nTerminal.prototype.selectiveEraseRectangle = function(params) {\n  ;\n};\n\n// CSI Ps ' |\n//   Request Locator Position (DECRQLP).\n//   Valid values for the parameter are:\n//     Ps = 0 , 1 or omitted -> transmit a single DECLRP locator\n//     report.\n\n//   If Locator Reporting has been enabled by a DECELR, xterm will\n//   respond with a DECLRP Locator Report.  This report is also\n//   generated on button up and down events if they have been\n//   enabled with a DECSLE, or when the locator is detected outside\n//   of a filter rectangle, if filter rectangles have been enabled\n//   with a DECEFR.\n\n//     -> CSI Pe ; Pb ; Pr ; Pc ; Pp &  w\n\n//   Parameters are [event;button;row;column;page].\n//   Valid values for the event:\n//     Pe = 0  -> locator unavailable - no other parameters sent.\n//     Pe = 1  -> request - xterm received a DECRQLP.\n//     Pe = 2  -> left button down.\n//     Pe = 3  -> left button up.\n//     Pe = 4  -> middle button down.\n//     Pe = 5  -> middle button up.\n//     Pe = 6  -> right button down.\n//     Pe = 7  -> right button up.\n//     Pe = 8  -> M4 button down.\n//     Pe = 9  -> M4 button up.\n//     Pe = 1 0  -> locator outside filter rectangle.\n//   ``button'' parameter is a bitmask indicating which buttons are\n//     pressed:\n//     Pb = 0  <- no buttons down.\n//     Pb & 1  <- right button down.\n//     Pb & 2  <- middle button down.\n//     Pb & 4  <- left button down.\n//     Pb & 8  <- M4 button down.\n//   ``row'' and ``column'' parameters are the coordinates of the\n//     locator position in the xterm window, encoded as ASCII deci-\n//     mal.\n//   The ``page'' parameter is not used by xterm, and will be omit-\n//   ted.\nTerminal.prototype.requestLocatorPosition = function(params) {\n  ;\n};\n\n// CSI P m SP }\n// Insert P s Column(s) (default = 1) (DECIC), VT420 and up.\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.insertColumns = function() {\n  var param = params[0]\n    , l = this.ybase + this.rows\n    , ch = [this.eraseAttr(), ' '] // xterm?\n    , i;\n\n  while (param--) {\n    for (i = this.ybase; i < l; i++) {\n      this.lines[i].splice(this.x + 1, 0, ch);\n      this.lines[i].pop();\n    }\n  }\n\n  this.maxRange();\n};\n\n// CSI P m SP ~\n// Delete P s Column(s) (default = 1) (DECDC), VT420 and up\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.deleteColumns = function() {\n  var param = params[0]\n    , l = this.ybase + this.rows\n    , ch = [this.eraseAttr(), ' '] // xterm?\n    , i;\n\n  while (param--) {\n    for (i = this.ybase; i < l; i++) {\n      this.lines[i].splice(this.x, 1);\n      this.lines[i].push(ch);\n    }\n  }\n\n  this.maxRange();\n};\n\n/**\n * Prefix/Select/Visual/Search Modes\n */\n\nTerminal.prototype.enterPrefix = function() {\n  this.prefixMode = true;\n};\n\nTerminal.prototype.leavePrefix = function() {\n  this.prefixMode = false;\n};\n\nTerminal.prototype.enterSelect = function() {\n  this._real = {\n    x: this.x,\n    y: this.y,\n    ydisp: this.ydisp,\n    ybase: this.ybase,\n    cursorHidden: this.cursorHidden,\n    lines: this.copyBuffer(this.lines),\n    write: this.write\n  };\n  this.write = function() {};\n  this.selectMode = true;\n  this.visualMode = false;\n  this.cursorHidden = false;\n  this.refresh(this.y, this.y);\n};\n\nTerminal.prototype.leaveSelect = function() {\n  this.x = this._real.x;\n  this.y = this._real.y;\n  this.ydisp = this._real.ydisp;\n  this.ybase = this._real.ybase;\n  this.cursorHidden = this._real.cursorHidden;\n  this.lines = this._real.lines;\n  this.write = this._real.write;\n  delete this._real;\n  this.selectMode = false;\n  this.visualMode = false;\n  this.refresh(0, this.rows - 1);\n};\n\nTerminal.prototype.enterVisual = function() {\n  this._real.preVisual = this.copyBuffer(this.lines);\n  this.selectText(this.x, this.x, this.ydisp + this.y, this.ydisp + this.y);\n  this.visualMode = true;\n};\n\nTerminal.prototype.leaveVisual = function() {\n  this.lines = this._real.preVisual;\n  delete this._real.preVisual;\n  delete this._selected;\n  this.visualMode = false;\n  this.refresh(0, this.rows - 1);\n};\n\nTerminal.prototype.enterSearch = function(down) {\n  this.entry = '';\n  this.searchMode = true;\n  this.searchDown = down;\n  this._real.preSearch = this.copyBuffer(this.lines);\n  this._real.preSearchX = this.x;\n  this._real.preSearchY = this.y;\n\n  var bottom = this.ydisp + this.rows - 1;\n  for (var i = 0; i < this.entryPrefix.length; i++) {\n    //this.lines[bottom][i][0] = (this.defAttr & ~0x1ff) | 4;\n    //this.lines[bottom][i][1] = this.entryPrefix[i];\n    this.lines[bottom][i] = [\n      (this.defAttr & ~0x1ff) | 4,\n      this.entryPrefix[i]\n    ];\n  }\n\n  this.y = this.rows - 1;\n  this.x = this.entryPrefix.length;\n\n  this.refresh(this.rows - 1, this.rows - 1);\n};\n\nTerminal.prototype.leaveSearch = function() {\n  this.searchMode = false;\n\n  if (this._real.preSearch) {\n    this.lines = this._real.preSearch;\n    this.x = this._real.preSearchX;\n    this.y = this._real.preSearchY;\n    delete this._real.preSearch;\n    delete this._real.preSearchX;\n    delete this._real.preSearchY;\n  }\n\n  this.refresh(this.rows - 1, this.rows - 1);\n};\n\nTerminal.prototype.copyBuffer = function(lines) {\n  var lines = lines || this.lines\n    , out = [];\n\n  for (var y = 0; y < lines.length; y++) {\n    out[y] = [];\n    for (var x = 0; x < lines[y].length; x++) {\n      out[y][x] = [lines[y][x][0], lines[y][x][1]];\n    }\n  }\n\n  return out;\n};\n\nTerminal.prototype.getCopyTextarea = function(text) {\n  var textarea = this._copyTextarea\n    , document = this.document;\n\n  if (!textarea) {\n    textarea = document.createElement('textarea');\n    textarea.style.position = 'absolute';\n    textarea.style.left = '-32000px';\n    textarea.style.top = '-32000px';\n    textarea.style.width = '0px';\n    textarea.style.height = '0px';\n    textarea.style.opacity = '0';\n    textarea.style.backgroundColor = 'transparent';\n    textarea.style.borderStyle = 'none';\n    textarea.style.outlineStyle = 'none';\n\n    document.getElementsByTagName('body')[0].appendChild(textarea);\n\n    this._copyTextarea = textarea;\n  }\n\n  return textarea;\n};\n\n// NOTE: Only works for primary selection on X11.\n// Non-X11 users should use Ctrl-C instead.\nTerminal.prototype.copyText = function(text) {\n  var self = this\n    , textarea = this.getCopyTextarea();\n\n  this.emit('copy', text);\n\n  textarea.focus();\n  textarea.textContent = text;\n  textarea.value = text;\n  textarea.setSelectionRange(0, text.length);\n\n  setTimeout(function() {\n    self.element.focus();\n    self.focus();\n  }, 1);\n};\n\nTerminal.prototype.selectText = function(x1, x2, y1, y2) {\n  var ox1\n    , ox2\n    , oy1\n    , oy2\n    , tmp\n    , x\n    , y\n    , xl\n    , attr;\n\n  if (this._selected) {\n    ox1 = this._selected.x1;\n    ox2 = this._selected.x2;\n    oy1 = this._selected.y1;\n    oy2 = this._selected.y2;\n\n    if (oy2 < oy1) {\n      tmp = ox2;\n      ox2 = ox1;\n      ox1 = tmp;\n      tmp = oy2;\n      oy2 = oy1;\n      oy1 = tmp;\n    }\n\n    if (ox2 < ox1 && oy1 === oy2) {\n      tmp = ox2;\n      ox2 = ox1;\n      ox1 = tmp;\n    }\n\n    for (y = oy1; y <= oy2; y++) {\n      x = 0;\n      xl = this.cols - 1;\n      if (y === oy1) {\n        x = ox1;\n      }\n      if (y === oy2) {\n        xl = ox2;\n      }\n      for (; x <= xl; x++) {\n        if (this.lines[y][x].old != null) {\n          //this.lines[y][x][0] = this.lines[y][x].old;\n          //delete this.lines[y][x].old;\n          attr = this.lines[y][x].old;\n          delete this.lines[y][x].old;\n          this.lines[y][x] = [attr, this.lines[y][x][1]];\n        }\n      }\n    }\n\n    y1 = this._selected.y1;\n    x1 = this._selected.x1;\n  }\n\n  y1 = Math.max(y1, 0);\n  y1 = Math.min(y1, this.ydisp + this.rows - 1);\n\n  y2 = Math.max(y2, 0);\n  y2 = Math.min(y2, this.ydisp + this.rows - 1);\n\n  this._selected = { x1: x1, x2: x2, y1: y1, y2: y2 };\n\n  if (y2 < y1) {\n    tmp = x2;\n    x2 = x1;\n    x1 = tmp;\n    tmp = y2;\n    y2 = y1;\n    y1 = tmp;\n  }\n\n  if (x2 < x1 && y1 === y2) {\n    tmp = x2;\n    x2 = x1;\n    x1 = tmp;\n  }\n\n  for (y = y1; y <= y2; y++) {\n    x = 0;\n    xl = this.cols - 1;\n    if (y === y1) {\n      x = x1;\n    }\n    if (y === y2) {\n      xl = x2;\n    }\n    for (; x <= xl; x++) {\n      //this.lines[y][x].old = this.lines[y][x][0];\n      //this.lines[y][x][0] &= ~0x1ff;\n      //this.lines[y][x][0] |= (0x1ff << 9) | 4;\n      attr = this.lines[y][x][0];\n      this.lines[y][x] = [\n        (attr & ~0x1ff) | ((0x1ff << 9) | 4),\n        this.lines[y][x][1]\n      ];\n      this.lines[y][x].old = attr;\n    }\n  }\n\n  y1 = y1 - this.ydisp;\n  y2 = y2 - this.ydisp;\n\n  y1 = Math.max(y1, 0);\n  y1 = Math.min(y1, this.rows - 1);\n\n  y2 = Math.max(y2, 0);\n  y2 = Math.min(y2, this.rows - 1);\n\n  //this.refresh(y1, y2);\n  this.refresh(0, this.rows - 1);\n};\n\nTerminal.prototype.grabText = function(x1, x2, y1, y2) {\n  var out = ''\n    , buf = ''\n    , ch\n    , x\n    , y\n    , xl\n    , tmp;\n\n  if (y2 < y1) {\n    tmp = x2;\n    x2 = x1;\n    x1 = tmp;\n    tmp = y2;\n    y2 = y1;\n    y1 = tmp;\n  }\n\n  if (x2 < x1 && y1 === y2) {\n    tmp = x2;\n    x2 = x1;\n    x1 = tmp;\n  }\n\n  for (y = y1; y <= y2; y++) {\n    x = 0;\n    xl = this.cols - 1;\n    if (y === y1) {\n      x = x1;\n    }\n    if (y === y2) {\n      xl = x2;\n    }\n    for (; x <= xl; x++) {\n      ch = this.lines[y][x][1];\n      if (ch === ' ') {\n        buf += ch;\n        continue;\n      }\n      if (buf) {\n        out += buf;\n        buf = '';\n      }\n      out += ch;\n      if (isWide(ch)) x++;\n    }\n    buf = '';\n    out += '\\n';\n  }\n\n  // If we're not at the end of the\n  // line, don't add a newline.\n  for (x = x2, y = y2; x < this.cols; x++) {\n    if (this.lines[y][x][1] !== ' ') {\n      out = out.slice(0, -1);\n      break;\n    }\n  }\n\n  return out;\n};\n\nTerminal.prototype.keyPrefix = function(ev, key) {\n  if (key === 'k' || key === '&') {\n    this.destroy();\n  } else if (key === 'p' || key === ']') {\n    this.emit('request paste');\n  } else if (key === 'c') {\n    this.emit('request create');\n  } else if (key >= '0' && key <= '9') {\n    key = +key - 1;\n    if (!~key) key = 9;\n    this.emit('request term', key);\n  } else if (key === 'n') {\n    this.emit('request term next');\n  } else if (key === 'P') {\n    this.emit('request term previous');\n  } else if (key === ':') {\n    this.emit('request command mode');\n  } else if (key === '[') {\n    this.enterSelect();\n  }\n};\n\nTerminal.prototype.keySelect = function(ev, key) {\n  if (this.searchMode || key === 'n' || key === 'N') {\n    return this.keySearch(ev, key);\n  }\n\n  if (key === '\\x04') { // ctrl-d\n    var y = this.ydisp + this.y;\n    if (this.ydisp === this.ybase) {\n      // Mimic vim behavior\n      this.y = Math.min(this.y + (this.rows - 1) / 2 | 0, this.rows - 1);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.scrollDisp((this.rows - 1) / 2 | 0);\n    }\n    if (this.visualMode) {\n      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === '\\x15') { // ctrl-u\n    var y = this.ydisp + this.y;\n    if (this.ydisp === 0) {\n      // Mimic vim behavior\n      this.y = Math.max(this.y - (this.rows - 1) / 2 | 0, 0);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.scrollDisp(-(this.rows - 1) / 2 | 0);\n    }\n    if (this.visualMode) {\n      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === '\\x06') { // ctrl-f\n    var y = this.ydisp + this.y;\n    this.scrollDisp(this.rows - 1);\n    if (this.visualMode) {\n      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === '\\x02') { // ctrl-b\n    var y = this.ydisp + this.y;\n    this.scrollDisp(-(this.rows - 1));\n    if (this.visualMode) {\n      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === 'k' || key === '\\x1b[A') {\n    var y = this.ydisp + this.y;\n    this.y--;\n    if (this.y < 0) {\n      this.y = 0;\n      this.scrollDisp(-1);\n    }\n    if (this.visualMode) {\n      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n    } else {\n      this.refresh(this.y, this.y + 1);\n    }\n    return;\n  }\n\n  if (key === 'j' || key === '\\x1b[B') {\n    var y = this.ydisp + this.y;\n    this.y++;\n    if (this.y >= this.rows) {\n      this.y = this.rows - 1;\n      this.scrollDisp(1);\n    }\n    if (this.visualMode) {\n      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n    } else {\n      this.refresh(this.y - 1, this.y);\n    }\n    return;\n  }\n\n  if (key === 'h' || key === '\\x1b[D') {\n    var x = this.x;\n    this.x--;\n    if (this.x < 0) {\n      this.x = 0;\n    }\n    if (this.visualMode) {\n      this.selectText(x, this.x, this.ydisp + this.y, this.ydisp + this.y);\n    } else {\n      this.refresh(this.y, this.y);\n    }\n    return;\n  }\n\n  if (key === 'l' || key === '\\x1b[C') {\n    var x = this.x;\n    this.x++;\n    if (this.x >= this.cols) {\n      this.x = this.cols - 1;\n    }\n    if (this.visualMode) {\n      this.selectText(x, this.x, this.ydisp + this.y, this.ydisp + this.y);\n    } else {\n      this.refresh(this.y, this.y);\n    }\n    return;\n  }\n\n  if (key === 'v' || key === ' ') {\n    if (!this.visualMode) {\n      this.enterVisual();\n    } else {\n      this.leaveVisual();\n    }\n    return;\n  }\n\n  if (key === 'y') {\n    if (this.visualMode) {\n      var text = this.grabText(\n        this._selected.x1, this._selected.x2,\n        this._selected.y1, this._selected.y2);\n      this.copyText(text);\n      this.leaveVisual();\n      // this.leaveSelect();\n    }\n    return;\n  }\n\n  if (key === 'q' || key === '\\x1b') {\n    if (this.visualMode) {\n      this.leaveVisual();\n    } else {\n      this.leaveSelect();\n    }\n    return;\n  }\n\n  if (key === 'w' || key === 'W') {\n    var ox = this.x;\n    var oy = this.y;\n    var oyd = this.ydisp;\n\n    var x = this.x;\n    var y = this.y;\n    var yb = this.ydisp;\n    var saw_space = false;\n\n    for (;;) {\n      var line = this.lines[yb + y];\n      while (x < this.cols) {\n        if (line[x][1] <= ' ') {\n          saw_space = true;\n        } else if (saw_space) {\n          break;\n        }\n        x++;\n      }\n      if (x >= this.cols) x = this.cols - 1;\n      if (x === this.cols - 1 && line[x][1] <= ' ') {\n        x = 0;\n        if (++y >= this.rows) {\n          y--;\n          if (++yb > this.ybase) {\n            yb = this.ybase;\n            x = this.x;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    this.x = x, this.y = y;\n    this.scrollDisp(-this.ydisp + yb);\n\n    if (this.visualMode) {\n      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === 'b' || key === 'B') {\n    var ox = this.x;\n    var oy = this.y;\n    var oyd = this.ydisp;\n\n    var x = this.x;\n    var y = this.y;\n    var yb = this.ydisp;\n\n    for (;;) {\n      var line = this.lines[yb + y];\n      var saw_space = x > 0 && line[x][1] > ' ' && line[x - 1][1] > ' ';\n      while (x >= 0) {\n        if (line[x][1] <= ' ') {\n          if (saw_space && (x + 1 < this.cols && line[x + 1][1] > ' ')) {\n            x++;\n            break;\n          } else {\n            saw_space = true;\n          }\n        }\n        x--;\n      }\n      if (x < 0) x = 0;\n      if (x === 0 && (line[x][1] <= ' ' || !saw_space)) {\n        x = this.cols - 1;\n        if (--y < 0) {\n          y++;\n          if (--yb < 0) {\n            yb++;\n            x = 0;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    this.x = x, this.y = y;\n    this.scrollDisp(-this.ydisp + yb);\n\n    if (this.visualMode) {\n      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === 'e' || key === 'E') {\n    var x = this.x + 1;\n    var y = this.y;\n    var yb = this.ydisp;\n    if (x >= this.cols) x--;\n\n    for (;;) {\n      var line = this.lines[yb + y];\n      while (x < this.cols) {\n        if (line[x][1] <= ' ') {\n          x++;\n        } else {\n          break;\n        }\n      }\n      while (x < this.cols) {\n        if (line[x][1] <= ' ') {\n          if (x - 1 >= 0 && line[x - 1][1] > ' ') {\n            x--;\n            break;\n          }\n        }\n        x++;\n      }\n      if (x >= this.cols) x = this.cols - 1;\n      if (x === this.cols - 1 && line[x][1] <= ' ') {\n        x = 0;\n        if (++y >= this.rows) {\n          y--;\n          if (++yb > this.ybase) {\n            yb = this.ybase;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    this.x = x, this.y = y;\n    this.scrollDisp(-this.ydisp + yb);\n\n    if (this.visualMode) {\n      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === '^' || key === '0') {\n    var ox = this.x;\n\n    if (key === '0') {\n      this.x = 0;\n    } else if (key === '^') {\n      var line = this.lines[this.ydisp + this.y];\n      var x = 0;\n      while (x < this.cols) {\n        if (line[x][1] > ' ') {\n          break;\n        }\n        x++;\n      }\n      if (x >= this.cols) x = this.cols - 1;\n      this.x = x;\n    }\n\n    if (this.visualMode) {\n      this.selectText(ox, this.x, this.ydisp + this.y, this.ydisp + this.y);\n    } else {\n      this.refresh(this.y, this.y);\n    }\n    return;\n  }\n\n  if (key === '$') {\n    var ox = this.x;\n    var line = this.lines[this.ydisp + this.y];\n    var x = this.cols - 1;\n    while (x >= 0) {\n      if (line[x][1] > ' ') {\n        if (this.visualMode && x < this.cols - 1) x++;\n        break;\n      }\n      x--;\n    }\n    if (x < 0) x = 0;\n    this.x = x;\n    if (this.visualMode) {\n      this.selectText(ox, this.x, this.ydisp + this.y, this.ydisp + this.y);\n    } else {\n      this.refresh(this.y, this.y);\n    }\n    return;\n  }\n\n  if (key === 'g' || key === 'G') {\n    var ox = this.x;\n    var oy = this.y;\n    var oyd = this.ydisp;\n    if (key === 'g') {\n      this.x = 0, this.y = 0;\n      this.scrollDisp(-this.ydisp);\n    } else if (key === 'G') {\n      this.x = 0, this.y = this.rows - 1;\n      this.scrollDisp(this.ybase);\n    }\n    if (this.visualMode) {\n      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === 'H' || key === 'M' || key === 'L') {\n    var ox = this.x;\n    var oy = this.y;\n    if (key === 'H') {\n      this.x = 0, this.y = 0;\n    } else if (key === 'M') {\n      this.x = 0, this.y = this.rows / 2 | 0;\n    } else if (key === 'L') {\n      this.x = 0, this.y = this.rows - 1;\n    }\n    if (this.visualMode) {\n      this.selectText(ox, this.x, this.ydisp + oy, this.ydisp + this.y);\n    } else {\n      this.refresh(oy, oy);\n      this.refresh(this.y, this.y);\n    }\n    return;\n  }\n\n  if (key === '{' || key === '}') {\n    var ox = this.x;\n    var oy = this.y;\n    var oyd = this.ydisp;\n\n    var line;\n    var saw_full = false;\n    var found = false;\n    var first_is_space = -1;\n    var y = this.y + (key === '{' ? -1 : 1);\n    var yb = this.ydisp;\n    var i;\n\n    if (key === '{') {\n      if (y < 0) {\n        y++;\n        if (yb > 0) yb--;\n      }\n    } else if (key === '}') {\n      if (y >= this.rows) {\n        y--;\n        if (yb < this.ybase) yb++;\n      }\n    }\n\n    for (;;) {\n      line = this.lines[yb + y];\n\n      for (i = 0; i < this.cols; i++) {\n        if (line[i][1] > ' ') {\n          if (first_is_space === -1) {\n            first_is_space = 0;\n          }\n          saw_full = true;\n          break;\n        } else if (i === this.cols - 1) {\n          if (first_is_space === -1) {\n            first_is_space = 1;\n          } else if (first_is_space === 0) {\n            found = true;\n          } else if (first_is_space === 1) {\n            if (saw_full) found = true;\n          }\n          break;\n        }\n      }\n\n      if (found) break;\n\n      if (key === '{') {\n        y--;\n        if (y < 0) {\n          y++;\n          if (yb > 0) yb--;\n          else break;\n        }\n      } else if (key === '}') {\n        y++;\n        if (y >= this.rows) {\n          y--;\n          if (yb < this.ybase) yb++;\n          else break;\n        }\n      }\n    }\n\n    if (!found) {\n      if (key === '{') {\n        y = 0;\n        yb = 0;\n      } else if (key === '}') {\n        y = this.rows - 1;\n        yb = this.ybase;\n      }\n    }\n\n    this.x = 0, this.y = y;\n    this.scrollDisp(-this.ydisp + yb);\n\n    if (this.visualMode) {\n      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === '/' || key === '?') {\n    if (!this.visualMode) {\n      this.enterSearch(key === '/');\n    }\n    return;\n  }\n\n  return false;\n};\n\nTerminal.prototype.keySearch = function(ev, key) {\n  if (key === '\\x1b') {\n    this.leaveSearch();\n    return;\n  }\n\n  if (key === '\\r' || (!this.searchMode && (key === 'n' || key === 'N'))) {\n    this.leaveSearch();\n\n    var entry = this.entry;\n\n    if (!entry) {\n      this.refresh(0, this.rows - 1);\n      return;\n    }\n\n    var ox = this.x;\n    var oy = this.y;\n    var oyd = this.ydisp;\n\n    var line;\n    var found = false;\n    var wrapped = false;\n    var x = this.x + 1;\n    var y = this.ydisp + this.y;\n    var yb, i;\n    var up = key === 'N'\n      ? this.searchDown\n      : !this.searchDown;\n\n    for (;;) {\n      line = this.lines[y];\n\n      while (x < this.cols) {\n        for (i = 0; i < entry.length; i++) {\n          if (x + i >= this.cols) break;\n          if (line[x + i][1] !== entry[i]) {\n            break;\n          } else if (line[x + i][1] === entry[i] && i === entry.length - 1) {\n            found = true;\n            break;\n          }\n        }\n        if (found) break;\n        x += i + 1;\n      }\n      if (found) break;\n\n      x = 0;\n\n      if (!up) {\n        y++;\n        if (y > this.ybase + this.rows - 1) {\n          if (wrapped) break;\n          // this.setMessage('Search wrapped. Continuing at TOP.');\n          wrapped = true;\n          y = 0;\n        }\n      } else {\n        y--;\n        if (y < 0) {\n          if (wrapped) break;\n          // this.setMessage('Search wrapped. Continuing at BOTTOM.');\n          wrapped = true;\n          y = this.ybase + this.rows - 1;\n        }\n      }\n    }\n\n    if (found) {\n      if (y - this.ybase < 0) {\n        yb = y;\n        y = 0;\n        if (yb > this.ybase) {\n          y = yb - this.ybase;\n          yb = this.ybase;\n        }\n      } else {\n        yb = this.ybase;\n        y -= this.ybase;\n      }\n\n      this.x = x, this.y = y;\n      this.scrollDisp(-this.ydisp + yb);\n\n      if (this.visualMode) {\n        this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n      }\n      return;\n    }\n\n    // this.setMessage(\"No matches found.\");\n    this.refresh(0, this.rows - 1);\n\n    return;\n  }\n\n  if (key === '\\b' || key === '\\x7f') {\n    if (this.entry.length === 0) return;\n    var bottom = this.ydisp + this.rows - 1;\n    this.entry = this.entry.slice(0, -1);\n    var i = this.entryPrefix.length + this.entry.length;\n    //this.lines[bottom][i][1] = ' ';\n    this.lines[bottom][i] = [\n      this.lines[bottom][i][0],\n      ' '\n    ];\n    this.x--;\n    this.refresh(this.rows - 1, this.rows - 1);\n    this.refresh(this.y, this.y);\n    return;\n  }\n\n  if (key.length === 1 && key >= ' ' && key <= '~') {\n    var bottom = this.ydisp + this.rows - 1;\n    this.entry += key;\n    var i = this.entryPrefix.length + this.entry.length - 1;\n    //this.lines[bottom][i][0] = (this.defAttr & ~0x1ff) | 4;\n    //this.lines[bottom][i][1] = key;\n    this.lines[bottom][i] = [\n      (this.defAttr & ~0x1ff) | 4,\n      key\n    ];\n    this.x++;\n    this.refresh(this.rows - 1, this.rows - 1);\n    this.refresh(this.y, this.y);\n    return;\n  }\n\n  return false;\n};\n\n/**\n * Character Sets\n */\n\nTerminal.charsets = {};\n\n// DEC Special Character and Line Drawing Set.\n// http://vt100.net/docs/vt102-ug/table5-13.html\n// A lot of curses apps use this if they see TERM=xterm.\n// testing: echo -e '\\e(0a\\e(B'\n// The xterm output sometimes seems to conflict with the\n// reference above. xterm seems in line with the reference\n// when running vttest however.\n// The table below now uses xterm's output from vttest.\nTerminal.charsets.SCLD = { // (0\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u0009', // '\\t'\n  'c': '\\u000c', // '\\f'\n  'd': '\\u000d', // '\\r'\n  'e': '\\u000a', // '\\n'\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '\\u2424' (NL)\n  'i': '\\u000b', // '\\v'\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\nTerminal.charsets.UK = null; // (A\nTerminal.charsets.US = null; // (B (USASCII)\nTerminal.charsets.Dutch = null; // (4\nTerminal.charsets.Finnish = null; // (C or (5\nTerminal.charsets.French = null; // (R\nTerminal.charsets.FrenchCanadian = null; // (Q\nTerminal.charsets.German = null; // (K\nTerminal.charsets.Italian = null; // (Y\nTerminal.charsets.NorwegianDanish = null; // (E or (6\nTerminal.charsets.Spanish = null; // (Z\nTerminal.charsets.Swedish = null; // (H or (7\nTerminal.charsets.Swiss = null; // (=\nTerminal.charsets.ISOLatin = null; // /A\n\n/**\n * Helpers\n */\n\nfunction on(el, type, handler, capture) {\n  el.addEventListener(type, handler, capture || false);\n}\n\nfunction off(el, type, handler, capture) {\n  el.removeEventListener(type, handler, capture || false);\n}\n\nfunction cancel(ev) {\n  if (ev.preventDefault) ev.preventDefault();\n  ev.returnValue = false;\n  if (ev.stopPropagation) ev.stopPropagation();\n  ev.cancelBubble = true;\n  return false;\n}\n\nfunction inherits(child, parent) {\n  function f() {\n    this.constructor = child;\n  }\n  f.prototype = parent.prototype;\n  child.prototype = new f;\n}\n\n// if bold is broken, we can't\n// use it in the terminal.\nfunction isBoldBroken(document) {\n  var body = document.getElementsByTagName('body')[0];\n  var terminal = document.createElement('div');\n  terminal.className = 'terminal';\n  var line = document.createElement('div');\n  var el = document.createElement('span');\n  el.innerHTML = 'hello world';\n  line.appendChild(el);\n  terminal.appendChild(line);\n  body.appendChild(terminal);\n  var w1 = el.scrollWidth;\n  el.style.fontWeight = 'bold';\n  var w2 = el.scrollWidth;\n  body.removeChild(terminal);\n  return w1 !== w2;\n}\n\nvar String = this.String;\nvar setTimeout = this.setTimeout;\nvar setInterval = this.setInterval;\n\nfunction indexOf(obj, el) {\n  var i = obj.length;\n  while (i--) {\n    if (obj[i] === el) return i;\n  }\n  return -1;\n}\n\nfunction isWide(ch) {\n  if (ch <= '\\uff00') return false;\n  return (ch >= '\\uff01' && ch <= '\\uffbe')\n      || (ch >= '\\uffc2' && ch <= '\\uffc7')\n      || (ch >= '\\uffca' && ch <= '\\uffcf')\n      || (ch >= '\\uffd2' && ch <= '\\uffd7')\n      || (ch >= '\\uffda' && ch <= '\\uffdc')\n      || (ch >= '\\uffe0' && ch <= '\\uffe6')\n      || (ch >= '\\uffe8' && ch <= '\\uffee');\n}\n\nfunction matchColor(r1, g1, b1) {\n  var hash = (r1 << 16) | (g1 << 8) | b1;\n\n  if (matchColor._cache[hash] != null) {\n    return matchColor._cache[hash];\n  }\n\n  var ldiff = Infinity\n    , li = -1\n    , i = 0\n    , c\n    , r2\n    , g2\n    , b2\n    , diff;\n\n  for (; i < Terminal.vcolors.length; i++) {\n    c = Terminal.vcolors[i];\n    r2 = c[0];\n    g2 = c[1];\n    b2 = c[2];\n\n    diff = matchColor.distance(r1, g1, b1, r2, g2, b2);\n\n    if (diff === 0) {\n      li = i;\n      break;\n    }\n\n    if (diff < ldiff) {\n      ldiff = diff;\n      li = i;\n    }\n  }\n\n  return matchColor._cache[hash] = li;\n}\n\nmatchColor._cache = {};\n\n// http://stackoverflow.com/questions/1633828\nmatchColor.distance = function(r1, g1, b1, r2, g2, b2) {\n  return Math.pow(30 * (r1 - r2), 2)\n    + Math.pow(59 * (g1 - g2), 2)\n    + Math.pow(11 * (b1 - b2), 2);\n};\n\nfunction each(obj, iter, con) {\n  if (obj.forEach) return obj.forEach(iter, con);\n  for (var i = 0; i < obj.length; i++) {\n    iter.call(con, obj[i], i, obj);\n  }\n}\n\nfunction keys(obj) {\n  if (Object.keys) return Object.keys(obj);\n  var key, keys = [];\n  for (key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      keys.push(key);\n    }\n  }\n  return keys;\n}\n\n/**\n * Expose\n */\n\nTerminal.EventEmitter = EventEmitter;\nTerminal.Stream = Stream;\nTerminal.inherits = inherits;\nTerminal.on = on;\nTerminal.off = off;\nTerminal.cancel = cancel;\n\nif (typeof define === 'function' && define.amd) {\n  define([], function() { return Terminal; });\n} else if (typeof module !== 'undefined') {\n  module.exports = Terminal;\n} else {\n  this.Terminal = Terminal;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","import $ from \"jquery\";\nimport cockpit from \"cockpit\";\nimport { docker } from \"./docker\";\n\nvar box;\n\nfunction update() {\n    if (box && box.close)\n        box.close();\n\n    var path = cockpit.location.path;\n    if (path.length === 0) {\n        box = $(\"<pre>\").text(\"usage: console.html#/container_id\");\n    } else if (path.length !== 1) {\n        console.warn(\"not a container id: \" + path);\n        cockpit.location = '';\n    } else {\n        box = docker.console(path[0]);\n        $(\"title\").text(path[0]);\n\n        /*\n         * TODO: Once we get more code into the docker module this\n         * should reflect the actual docker container state and\n         * become typable when the container is running.\n         */\n        box.typeable(true);\n        box.connect();\n    }\n\n    $(\"#container\").empty()\n            .append(box);\n    $(\"body\").show();\n}\n\n$(cockpit).on(\"locationchanged\", update);\n$(update);\n","module.exports = cockpit;","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2014 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport $ from \"jquery\";\nimport cockpit from \"cockpit\";\n\nimport Terminal from \"term\";\n\nexport var docker = { };\n\nfunction docker_debug() {\n    if (window.debugging == \"all\" || window.debugging == \"docker\")\n        console.debug.apply(console, arguments);\n}\n\n/* This doesn't create a channel until a request */\nvar http = cockpit.http(\"/var/run/docker.sock\", { superuser: true });\n\n/**\n * pull:\n * @repo: the image repository\n * @tag: the tag to pull\n *\n * Pull an image from the registry. If no @tag is specified\n * then the \"latest\" tag will be used.\n *\n * A Promise is returned. It completes when the image has\n * been downloaded, or fails with an error. The progress callbacks\n * on the download are called with status updates from docker.\n */\ndocker.pull = function pull(repo, tag, registry) {\n    var dfd = $.Deferred();\n\n    if (!tag)\n        tag = \"latest\";\n\n    /*\n     * Although in theory the docker images/create API has\n     * a registry parameter, when you use it the resulting\n     * image is labeled completely wrong.\n     */\n\n    if (registry)\n        repo = registry + \"/\" + repo;\n\n    docker_debug(\"pulling: \" + repo + \":\" + tag);\n\n    var options = {\n        method: \"POST\",\n        path: \"/v1.12/images/create\",\n        body: \"\",\n        params: {\n            fromImage: repo,\n            tag: tag\n        }\n    };\n\n    var error;\n\n    var buffer = \"\";\n    var req = http.request(options)\n            .stream(function(data) {\n                buffer += data;\n                var next = docker.json_skip(buffer, 0);\n                if (next === 0)\n                    return; /* not enough data yet */\n                var progress = JSON.parse(buffer.substring(0, next));\n                buffer = buffer.substring(next);\n                if (progress.error)\n                    error = progress.error;\n                else if (progress.status)\n                    dfd.notify(progress.status, progress);\n            })\n            .fail(function(ex) {\n                dfd.reject(ex);\n            })\n            .done(function() {\n                if (error)\n                    dfd.reject(new Error(error));\n                else\n                    dfd.resolve();\n            });\n\n    var promise = dfd.promise();\n    promise.cancel = function cancel() {\n        req.close(\"cancelled\");\n        return promise;\n    };\n\n    return promise;\n};\n\n/* Gets image info locally */\ndocker.inspect_image = function inspect_image(image) {\n    var dfd = $.Deferred();\n    http.get(\"/v1.12/images/\" + encodeURIComponent(image) + \"/json\")\n            .done(function(data) {\n                dfd.resolve(JSON.parse(data));\n            })\n            .fail(function(ex) {\n                dfd.reject(ex);\n            });\n    var promise = dfd.promise();\n    promise.cancel = function cancel() {\n        return promise;\n    };\n    return promise;\n};\n\nfunction DockerTerminal(parent, channel) {\n    var self = this;\n\n    var term = new Terminal({\n        cols: 80,\n        rows: 24,\n        screenKeys: true,\n        inlineStyle: false,\n        useFocus: false,\n    });\n\n    var enable_input = true;\n    var decoder = cockpit.utf8_decoder();\n    var encoder = cockpit.utf8_encoder();\n\n    /* term.js wants the parent element to build its terminal inside of */\n    parent.empty();\n    term.open(parent[0]);\n\n    /* Shows and hides the cursor */\n    self.typeable = function typeable(yes) {\n        term.cursorHidden = !yes;\n        term.refresh(term.y, term.y);\n        enable_input = yes;\n    };\n\n    self.focus = function focus() {\n        term.focus();\n    };\n\n    /* Allows caller to cleanup nicely */\n    self.close = function close() {\n        term.destroy();\n    };\n\n    if (typeof channel == \"string\") {\n        term.write('\\x1b[31m' + channel + '\\x1b[m\\r\\n');\n        self.close = function() { };\n        self.typeable(false);\n        return self;\n    }\n\n    $(channel)\n            .on(\"close\", function(ev, options) {\n                var problem = options.problem || \"disconnected\";\n                term.write('\\x1b[31m' + problem + '\\x1b[m\\r\\n');\n                self.typeable(false);\n                $(channel).off(\"message\");\n                channel = null;\n            });\n\n    self.process = function process(buffer) {\n        term.write(decoder.decode(buffer));\n        return buffer.length;\n    };\n\n    term.on('data', function(data) {\n        /* Send typed input back through channel */\n        if (enable_input && channel)\n            channel.send(encoder.encode(data));\n    });\n\n    return self;\n}\n\nfunction DockerLogs(parent, channel) {\n    var self = this;\n\n    var pre = $(\"<pre>\");\n    parent.empty();\n    parent.append(pre);\n\n    var wait;\n    var writing = [];\n    function write(data) {\n        writing.push(data);\n        if (!wait) {\n            wait = window.setTimeout(function() {\n                wait = null;\n                var at_bottom = pre[0].scrollHeight - pre.scrollTop() <= pre.outerHeight();\n                var span = $(\"<span>\").text(writing.join(\"\"));\n                writing.length = 0;\n                pre.append(span);\n                if (at_bottom)\n                    pre.scrollTop(pre.prop(\"scrollHeight\"));\n            }, 50);\n        }\n    }\n\n    /* Just display the failure */\n    if (typeof channel == \"string\") {\n        write(channel);\n        self.close = function() { };\n        return self;\n    }\n\n    channel.control({ batch: 16384, latency: 50 });\n\n    var decoder = cockpit.utf8_decoder(false);\n\n    self.process = function process(buffer) {\n        var at = 0;\n        var size, block;\n        var length = buffer.length;\n        while (true) {\n            if (length < at + 8)\n                return at; /* more data */\n\n            size = ((buffer[at + 4] & 0xFF) << 24) | ((buffer[at + 5] & 0xFF) << 16) |\n                   ((buffer[at + 6] & 0xFF) << 8) | (buffer[at + 7] & 0xFF);\n\n            if (length < at + 8 + size)\n                return at; /* more data */\n\n            /* Output the data */\n            if (buffer.subarray)\n                block = buffer.subarray(at + 8, at + 8 + size);\n            else\n                block = buffer.slice(at + 8, at + 8 + size);\n            write(decoder.decode(block, { stream: true }));\n            at += 8 + size;\n        }\n    };\n\n    self.focus = function() {\n        /* Nothing to do */\n    };\n\n    self.close = function() {\n        /* Nothing to do */\n    };\n\n    /*\n     * A raw channel over which we speak Docker's even stranger /logs\n     * protocol. It starts with a HTTP GET, and then quickly\n     * degenerates into a stream with framing.\n     */\n    $(channel)\n            .on(\"close\", function(ev, options) {\n                write(options.reason || \"disconnected\");\n                $(channel).off();\n                channel = null;\n            });\n\n    return self;\n}\n\nfunction sequence_find(seq, find) {\n    var f;\n    var fl = find.length;\n    var s;\n    var sl = (seq.length - fl) + 1;\n    for (s = 0; s < sl; s++) {\n        for (f = 0; f < fl; f++) {\n            if (seq[s + f] !== find[f])\n                break;\n        }\n        if (f == fl)\n            return s;\n    }\n\n    return -1;\n}\n\n/**\n * docker.console(container_id, options)\n * docker.console(container_id, command, options):\n *\n * @container_id: full docker container id\n * @command: optional array of command argv to exec\n * @options: other options, including 'tty' true/false\n *\n * Creates a docker console/logs element and returns it. If options.tty is true\n * then creates a full term.js terminal. Otherwise creates a logs output\n * area. If options.tty is null/undefined autodetect whether to use tty or not.\n *\n * The returned element needs to have its .connect() method called to start the\n * connection process.\n *\n * The returned value is an HTMLElement with the following extra methods/properties:\n *\n * cons.connected: true/false if connected or not\n * cons.connect(): connect or reconnect\n * cons.typeable(true/false): set typeable state or not, only applies to console\n * cons.close(): disconnect and close\n */\ndocker.console = function console_(container_id, command, options) {\n    var self = $(\"<div>\").addClass(\"console-ct\");\n    self.connected = false;\n    var want_typeable = false;\n    var focused = false;\n    var channel = null;\n    var view = null;\n    var exec;\n    var tty;\n\n    /* If there's a command, then we have to exec it in the container */\n    if (Array.isArray(command)) {\n        if (!options)\n            options = { };\n\n        /* When executing default to having a tty */\n        tty = options.tty;\n        if (tty === undefined || tty === null)\n            tty = true;\n\n        exec = {\n            method: \"POST\",\n            path: \"/v1.15/containers/\" + encodeURIComponent(container_id) + \"/exec\",\n            headers: { \"Content-Type\": \"application/json\" },\n            body: JSON.stringify({\n                \"AttachStdin\": tty,\n                \"AttachStdout\": true,\n                \"AttachStderr\": true,\n                \"Tty\": tty,\n                \"Cmd\": command\n            })\n        };\n\n        docker_debug(\"preparing to exec:\", command);\n\n    /* Just connect to the main container console */\n    } else {\n        docker_debug(\"preparing to attach\");\n        options = command || { };\n        tty = options.tty;\n    }\n\n    delete options.tty;\n\n    /* A promise being prepared */\n    var prep = null;\n\n    function failure(message) {\n        if (tty)\n            view = new DockerTerminal(self, message);\n        else\n            view = new DockerLogs(self, message);\n    }\n\n    function prepare() {\n        self.connected = false;\n\n        /* Nothing to prepare? Connect diretly to container? */\n        if (!exec) {\n            if (tty === false) {\n                return attach(\"GET /v1.15/containers/\" + encodeURIComponent(container_id) +\n                              \"/logs?follow=1&stdout=1&stderr=1&tail=1000&timestamps=0 HTTP/1.0\\r\\n\" +\n                              \"Content-Length: 0\\r\\n\\r\\n\");\n            } else {\n                return attach(\"POST /v1.15/containers/\" + encodeURIComponent(container_id) +\n                              \"/attach?logs=1&stream=1&stdin=1&stdout=1&stderr=1 HTTP/1.0\\r\\n\" +\n                              \"Content-Length: 0\\r\\n\\r\\n\");\n            }\n        }\n\n        /* Prepare the command to be executed */\n        prep = http.request($.extend({ }, options, exec))\n                .always(function() {\n                    prep = null;\n                })\n                .done(function(data) {\n                    var resp = JSON.parse(data);\n                    var body = JSON.stringify({ Detach: false, Tty: tty });\n                    return attach(\"POST /v1.15/exec/\" + encodeURIComponent(resp.Id) +\n                              \"/start HTTP/1.0\\r\\n\" +\n                              \"Content-Length: \" + body.length + \"\\r\\n\\r\\n\" + body);\n                })\n                .fail(function(ex) {\n                    failure(ex.message);\n                });\n    }\n\n    /*\n     * A raw channel over which we speak Docker's strange /attach\n     * protocol. It starts with a HTTP POST, and then quickly\n     * degenerates into a stream sometimes binary.\n     *\n     * See: http://docs.docker.io/en/latest/reference/api/docker_remote_api_v1.8/#attach-to-a-container\n     */\n    function attach(request) {\n        if (view)\n            view.close();\n        view = null;\n\n        var opts = $.extend({ }, options, {\n            \"payload\": \"stream\",\n            \"unix\": \"/var/run/docker.sock\",\n            \"superuser\": true,\n            \"binary\": true\n        });\n\n        channel = cockpit.channel(opts);\n\n        docker_debug(request);\n        channel.send(request);\n\n        $(channel)\n                .on(\"close.attach\", function(ev, options) {\n                    docker_debug(container_id + \": console close: \", options);\n                    $(channel).off(\".attach\");\n                    channel = null;\n\n                    /*\n                 * HACK: If we're disconnected unceremoniously, try\n                 * and reconnect. Certain versions of docker do this\n                 * during container startup.\n                 */\n                    if (self.connected && !options.problem) {\n                        window.setTimeout(function() {\n                            if (self.connected && !channel)\n                                attach(request);\n                        }, 1000);\n                    }\n                });\n\n        var headers = null;\n        var buffer = channel.buffer();\n        buffer.callback = function(data) {\n            var ret = 0;\n            var pos = 0;\n            var parts;\n\n            /* Look for end of headers first */\n            if (headers === null) {\n                pos = sequence_find(data, [ 13, 10, 13, 10 ]);\n                if (pos == -1)\n                    return ret;\n\n                if (data.subarray)\n                    headers = cockpit.utf8_decoder().decode(data.subarray(0, pos));\n                else\n                    headers = cockpit.utf8_decoder().decode(data.slice(0, pos));\n                docker_debug(container_id + \": console headers: \", headers);\n\n                parts = headers.split(\"\\r\\n\", 1)[0].split(\" \");\n                if (parts[1] != \"200\") {\n                    failure(parts.slice(2).join(\" \"));\n                    buffer.callback = null;\n                    return;\n                } else if (data.subarray) {\n                    data = data.subarray(pos + 4);\n                    ret += pos + 4;\n                } else {\n                    data = data.slice(pos + 4);\n                    ret += pos + 4;\n                }\n            }\n\n            /* We need at least two bytes to determine stream type */\n            if (tty === undefined || tty === null) {\n                if (data.length < 2)\n                    return ret;\n                tty = !((data[0] === 0 || data[0] === 1 || data[0] === 2) && data[1] === 0);\n                docker_debug(container_id + \": mode tty: \" + tty);\n            }\n\n            if (tty)\n                view = new DockerTerminal(self, channel);\n            else\n                view = new DockerLogs(self, channel);\n            self.typeable(want_typeable);\n            self.connected = true;\n\n            buffer.callback = view.process;\n            var consumed = view.process(data);\n            return ret + consumed;\n        };\n    }\n\n    /* Allows caller to cleanup nicely */\n    self.close = function close(problem) {\n        self.connected = false;\n        if (prep)\n            prep.close(problem);\n        if (channel)\n            channel.close(problem);\n        if (view) {\n            view.close();\n            view = null;\n        }\n    };\n\n    /* Allows the curser to restart the attach request */\n    self.connect = function connect() {\n        self.close(\"disconnected\");\n        prepare();\n    };\n\n    function update_typeable() {\n        if (view && view.typeable)\n            view.typeable(want_typeable && focused);\n    }\n\n    $(self)\n            .on(\"focusin\", function() {\n                focused = true;\n                update_typeable();\n                view.focus();\n            })\n            .on(\"focusout\", function() {\n                focused = false;\n                update_typeable();\n            });\n\n    self.typeable = function typeable(yes) {\n        want_typeable = yes;\n        update_typeable();\n    };\n\n    return self;\n};\n\n/*\n * docker.json_skip(string, pos = 0)\n * @string: the JSON string\n * @pos: optionally, the starting position in string, or zero\n *\n * Sometimes docker returns multiple JSON strings concatenated.\n *\n * Skip over one item in a stream of JSON things, like objects,\n * numbers, strings, etc... The things can be separated by whitespace\n * or in some cases (strings, objects, arrays) be right next to\n * each other.\n *\n * We do not validate the JSON. It's assumed that a later parse\n * will check for validity.\n *\n * Returns: the number of characters to skip over next json block\n * or zero if no complete json block found.\n */\n\ndocker.json_skip = function(string, pos) {\n    var any = false;\n    var end = string.length;\n    var depth = 0;\n    var inword = false;\n    var instr = false;\n    var endword = \" \\t\\n\\r\\v[{}]\\\"\";\n    var spaces = \" \\t\\n\\r\\v\";\n    var ch;\n\n    if (pos === undefined)\n        pos = 0;\n\n    for (end = string.length; pos != end; pos++) {\n        if (any && depth <= 0)\n            break; /* skipped over one thing */\n\n        ch = string[pos];\n        if (inword) {\n            if (endword.indexOf(ch) != -1) {\n                inword = false;\n                depth--;\n                pos--;\n            }\n            continue;\n        }\n\n        if (spaces.indexOf(ch) != -1)\n            continue;\n\n        if (instr) {\n            switch (ch) {\n            case '\\\\':\n                if (pos + 1 == end)\n                    continue;\n                pos++; /* skip char after bs */\n                break;\n            case '\"':\n                instr = false;\n                depth--;\n                break;\n            default:\n                break;\n            }\n            continue;\n        }\n\n        any = true;\n        switch (ch) {\n        case '[':\n        case '{':\n            depth++;\n            break;\n        case ']':\n        case '}':\n            depth--;\n            break;\n        case '\"':\n            instr = true;\n            depth++;\n            break;\n        default:\n            inword = true;\n            depth++;\n            break;\n        }\n    }\n\n    if (inword && depth == 1)\n        depth = 0;\n\n    /* No complete JSON blocks found */\n    if (!any || depth > 0)\n        return 0;\n\n    /* The position at which we found th eend */\n    return pos;\n};\n\n/*\n * The functions docker.quote_cmdline and docker.unquote_cmdline implement\n * a simple shell-like quoting syntax.  They are used when letting the\n * user edit a sequence of words as a single string.\n *\n * When parsing, words are separated by whitespace.  Single and double\n * quotes can be used to protect a sequence of characters that\n * contains whitespace or the other quote character.  A backslash can\n * be used to protect any character.  Quotes can appear in the middle\n * of a word.\n */\n\ndocker.quote_cmdline = function quote_cmdline(words) {\n    words = words || [];\n\n    function is_whitespace(c) {\n        return c == ' ';\n    }\n\n    function quote(word) {\n        var text = \"\";\n        var quote_char = \"\";\n        var i;\n        for (i = 0; i < word.length; i++) {\n            if (word[i] == '\\\\' || word[i] == quote_char)\n                text += '\\\\';\n            else if (quote_char === \"\") {\n                if (word[i] == \"'\" || is_whitespace(word[i]))\n                    quote_char = '\"';\n                else if (word[i] == '\"')\n                    quote_char = \"'\";\n            }\n            text += word[i];\n        }\n\n        return quote_char + text + quote_char;\n    }\n\n    return words.map(quote).join(' ');\n};\n\ndocker.unquote_cmdline = function unquote_cmdline(text) {\n    var words = [ ];\n    var next;\n\n    function is_whitespace(c) {\n        return c == ' ';\n    }\n\n    function skip_whitespace() {\n        while (next < text.length && is_whitespace(text[next]))\n            next++;\n    }\n\n    function parse_word() {\n        var word = \"\";\n        var quote_char = null;\n\n        while (next < text.length) {\n            if (text[next] == '\\\\') {\n                next++;\n                if (next < text.length) {\n                    word += text[next];\n                }\n            } else if (text[next] == quote_char) {\n                quote_char = null;\n            } else if (quote_char) {\n                word += text[next];\n            } else if (text[next] == '\"' || text[next] == \"'\") {\n                quote_char = text[next];\n            } else if (is_whitespace(text[next])) {\n                break;\n            } else\n                word += text[next];\n            next++;\n        }\n        return word;\n    }\n\n    next = 0;\n    skip_whitespace();\n    while (next < text.length) {\n        words.push(parse_word());\n        skip_whitespace();\n    }\n\n    return words;\n};\n\nvar byte_suffixes = [ null, \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\" ];\n\ndocker.bytes_from_format = function bytes_from_format(formatted, separate) {\n    var factor = 1024;\n\n    if (separate === undefined)\n        separate = \" \";\n\n    var format = formatted.split(separate).pop()\n            .toUpperCase();\n    var spot = byte_suffixes.indexOf(format);\n\n    /* TODO: Make the decimal separator translatable */\n    var num = parseFloat(formatted);\n\n    if (spot > 0 && !isNaN(num))\n        return num * Math.pow(factor, spot);\n    return num;\n};\n\n/*\n * Returns the short id of a docker container or image id.\n */\ndocker.truncate_id = function (id) {\n    var c = id.indexOf(':');\n    if (c >= 0)\n        id = id.slice(c + 1);\n    return id.substr(0, 12);\n};\n"],"sourceRoot":""}