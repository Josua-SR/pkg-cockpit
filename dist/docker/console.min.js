!function(t) {
    function s(i) {
        if (e[i]) return e[i].exports;
        var r = e[i] = {
            exports: {},
            id: i,
            loaded: !1
        };
        return t[i].call(r.exports, r, r.exports, s), r.loaded = !0, r.exports;
    }
    var e = {};
    return s.m = t, s.c = e, s.p = "", s(0);
}([ function(t, s, e) {
    t.exports = e(1);
}, function(t, s, e) {
    "use strict";
    !function() {
        function t() {
            s && s.close && s.close();
            var t = r.location.path;
            0 === t.length ? s = i("<pre>").text("usage: console.html#/container_id") : 1 !== t.length ? (console.warn("not a container id: " + t), 
            r.location = "") : (s = o.console(t[0]), i("title").text(t[0]), s.typeable(!0), 
            s.connect()), i("#container").empty().append(s), i("body").show();
        }
        var s, i = e(2), r = e(3), o = e(4);
        i(r).on("locationchanged", t), i(t);
    }();
}, function(t, s) {
    t.exports = jQuery;
}, function(t, s) {
    t.exports = cockpit;
}, function(t, s, e) {
    "use strict";
    !function() {
        function s() {
            "all" != window.debugging && "docker" != window.debugging || console.debug.apply(console, arguments);
        }
        function i(t, s) {
            var e = this, i = new n({
                cols: 80,
                rows: 24,
                screenKeys: !0,
                useStyle: !0,
                inlineStyle: !1,
                useFocus: !1
            }), r = !0, o = a.utf8_decoder(), c = a.utf8_encoder();
            return t.empty(), i.open(t[0]), e.typeable = function(t) {
                i.cursorHidden = !t, t && i.showCursor(), i.refresh(i.y, i.y), r = t;
            }, e.focus = function() {
                i.focus();
            }, e.close = function() {
                i.destroy();
            }, "string" == typeof s ? (i.write("[31m" + s + "[m\r\n"), e.close = function() {}, 
            e.typeable(!1), e) : (h(s).on("close", function(t, r) {
                var o = r.problem || "disconnected";
                i.write("[31m" + o + "[m\r\n"), e.typeable(!1), h(s).off("message"), s = null;
            }), e.process = function(t) {
                return i.write(o.decode(t)), t.length;
            }, i.on("data", function(t) {
                r && s && s.send(c.encode(t));
            }), e);
        }
        function r(t, s) {
            function e(t) {
                n.push(t), o || (o = window.setTimeout(function() {
                    o = null;
                    var t = r[0].scrollHeight - r.scrollTop() <= r.outerHeight(), s = h("<span>").text(n.join(""));
                    n.length = 0, r.append(s), t && r.scrollTop(r.prop("scrollHeight"));
                }, 50));
            }
            var i = this, r = h("<pre>");
            t.empty(), t.append(r);
            var o, n = [];
            if ("string" == typeof s) return e(s), i.close = function() {}, i;
            s.control({
                batch: 16384,
                latency: 50
            });
            var c = a.utf8_decoder(!1);
            return i.process = function(t) {
                for (var s, i, r = 0, o = t.length; ;) {
                    if (o < r + 8) return r;
                    if (s = (255 & t[r + 4]) << 24 | (255 & t[r + 5]) << 16 | (255 & t[r + 6]) << 8 | 255 & t[r + 7], 
                    o < r + 8 + s) return r;
                    i = t.subarray ? t.subarray(r + 8, r + 8 + s) : t.slice(r + 8, r + 8 + s), e(c.decode(i, {
                        stream: !0
                    })), r += 8 + s;
                }
                return r;
            }, i.focus = function() {}, i.close = function() {}, h(s).on("close", function(t, i) {
                e(i.reason || "disconnected"), h(s).off(), s = null;
            }), i;
        }
        function o(t, s) {
            var e, i, r = s.length, o = t.length - r + 1;
            for (i = 0; i < o; i++) {
                for (e = 0; e < r && t[i + e] === s[e]; e++) ;
                if (e == r) return i;
            }
            return -1;
        }
        var h = e(2), a = e(3), n = e(5), c = {}, l = a.http("/var/run/docker.sock", {
            superuser: !0
        });
        c.pull = function(t, e, i) {
            var r = h.Deferred();
            e || (e = "latest"), i && (t = i + "/" + t), s("pulling: " + t + ":" + e);
            var o, a = {
                method: "POST",
                path: "/v1.12/images/create",
                body: "",
                params: {
                    fromImage: t,
                    tag: e
                }
            }, n = "", u = l.request(a).stream(function(t) {
                n += t;
                var s = c.json_skip(n, 0);
                if (0 !== s) {
                    var e = JSON.parse(n.substring(0, s));
                    n = n.substring(s), e.error ? o = e.error : e.status && r.notify(e.status, e);
                }
            }).fail(function(t) {
                r.reject(t);
            }).done(function() {
                o ? r.reject(new Error(o)) : r.resolve();
            }), p = r.promise();
            return p.cancel = function() {
                return u.close("cancelled"), p;
            }, p;
        }, c.inspect_image = function(t) {
            var s = h.Deferred();
            l.get("/v1.12/images/" + encodeURIComponent(t) + "/json").done(function(t) {
                s.resolve(JSON.parse(t));
            }).fail(function(t) {
                s.reject(t);
            });
            var e = s.promise();
            return e.cancel = function() {
                return e;
            }, e;
        }, c.console = function(t, e, n) {
            function c(t) {
                k = b ? new i(d, t) : new r(d, t);
            }
            function u() {
                if (d.connected = !1, !y) return p(b === !1 ? "GET /v1.15/containers/" + encodeURIComponent(t) + "/logs?follow=1&stdout=1&stderr=1&tail=1000&timestamps=0 HTTP/1.0\r\nContent-Length: 0\r\n\r\n" : "POST /v1.15/containers/" + encodeURIComponent(t) + "/attach?logs=1&stream=1&stdin=1&stdout=1&stderr=1 HTTP/1.0\r\nContent-Length: 0\r\n\r\n");
                var s = l.request(h.extend({}, n, y)).always(function() {
                    s = null;
                }).done(function(t) {
                    var s = JSON.parse(t), e = JSON.stringify({
                        Detach: !1,
                        Tty: b
                    });
                    return p("POST /v1.15/exec/" + encodeURIComponent(s.Id) + "/start HTTP/1.0\r\nContent-Length: " + e.length + "\r\n\r\n" + e);
                }).fail(function(t) {
                    c(t.message);
                });
            }
            function p(e) {
                k && k.close(), k = null;
                var l = h.extend({}, n, {
                    payload: "stream",
                    unix: "/var/run/docker.sock",
                    superuser: !0,
                    binary: !0
                });
                x = a.channel(l), s(e), x.send(e), h(x).on("close.attach", function(i, r) {
                    s(t + ": console close: ", r), h(x).off(".attach"), x = null, d.connected && !r.problem && window.setTimeout(function() {
                        d.connected && !x && p(e);
                    }, 1e3);
                });
                var u = null, f = x.buffer();
                f.callback = function(e) {
                    var h, n = 0, l = 0;
                    if (null === u) {
                        if (l = o(e, [ 13, 10, 13, 10 ]), l == -1) return n;
                        if (u = e.subarray ? a.utf8_decoder().decode(e.subarray(0, l)) : a.utf8_decoder().decode(e.slice(0, l)), 
                        s(t + ": console headers: ", u), h = u.split("\r\n", 1)[0].split(" "), "200" != h[1]) return c(h.slice(2).join(" ")), 
                        void (f.callback = null);
                        e.subarray ? (e = e.subarray(l + 4), n += l + 4) : (e = e.slice(l + 4), n += l + 4);
                    }
                    if (void 0 === b || null === b) {
                        if (e.length < 2) return n;
                        b = !((0 === e[0] || 1 === e[0] || 2 === e[0]) && 0 === e[1]), s(t + ": mode tty: " + b);
                    }
                    k = b ? new i(d, x) : new r(d, x), d.typeable(m), d.connected = !0, f.callback = k.process;
                    var p = k.process(e);
                    return n + p;
                };
            }
            function f() {
                k && k.typeable && k.typeable(m && v);
            }
            var d = h("<div>").addClass("console-ct");
            d.connected = !1;
            var y, b, m = !1, v = !1, x = null, k = null;
            Array.isArray(e) ? (n || (n = {}), b = n.tty, void 0 !== b && null !== b || (b = !0), 
            y = {
                method: "POST",
                path: "/v1.15/containers/" + encodeURIComponent(t) + "/exec",
                headers: {
                    "Content-Type": "application/json"
                },
                body: JSON.stringify({
                    AttachStdin: b,
                    AttachStdout: !0,
                    AttachStderr: !0,
                    Tty: b,
                    Cmd: e
                })
            }, s("preparing to exec:", e)) : (s("preparing to attach"), n = e || {}, b = n.tty), 
            delete n.tty;
            var g = null;
            return d.close = function(t) {
                d.connected = !1, g && g.close(t), x && x.close(t), k && (k.close(), k = null);
            }, d.connect = function() {
                d.close("disconnected"), u();
            }, h(d).on("focusin", function() {
                v = !0, f(), k.focus();
            }).on("focusout", function() {
                v = !1, f();
            }), d.typeable = function(t) {
                m = t, f();
            }, d;
        }, c.json_skip = function(t, s) {
            var e, i = !1, r = t.length, o = 0, h = !1, a = !1, n = ' \t\n\r\v[{}]"', c = " \t\n\r\v";
            for (void 0 === s && (s = 0), r = t.length; s != r && !(i && o <= 0); s++) if (e = t[s], 
            h) n.indexOf(e) != -1 && (h = !1, o--, s--); else if (c.indexOf(e) == -1) if (a) switch (e) {
              case "\\":
                if (s + 1 == r) continue;
                s++;
                break;

              case '"':
                a = !1, o--;
            } else switch (i = !0, e) {
              case "[":
              case "{":
                o++;
                break;

              case "]":
              case "}":
                o--;
                break;

              case '"':
                a = !0, o++;
                break;

              default:
                h = !0, o++;
            }
            return h && 1 == o && (o = 0), !i || o > 0 ? 0 : s;
        }, c.quote_cmdline = function(t) {
            function s(t) {
                return " " == t;
            }
            function e(t) {
                var e, i = "", r = "";
                for (e = 0; e < t.length; e++) "\\" == t[e] || t[e] == r ? i += "\\" : "" === r && ("'" == t[e] || s(t[e]) ? r = '"' : '"' == t[e] && (r = "'")), 
                i += t[e];
                return r + i + r;
            }
            return t = t || [], t.map(e).join(" ");
        }, c.unquote_cmdline = function(t) {
            function s(t) {
                return " " == t;
            }
            function e() {
                for (;r < t.length && s(t[r]); ) r++;
            }
            function i() {
                for (var e = "", i = null; r < t.length; ) {
                    if ("\\" == t[r]) r++, r < t.length && (e += t[r]); else if (t[r] == i) i = null; else if (i) e += t[r]; else if ('"' == t[r] || "'" == t[r]) i = t[r]; else {
                        if (s(t[r])) break;
                        e += t[r];
                    }
                    r++;
                }
                return e;
            }
            var r, o = [];
            for (r = 0, e(); r < t.length; ) o.push(i()), e();
            return o;
        };
        var u = [ null, "KB", "MB", "GB", "TB", "PB", "EB", "ZB" ];
        c.bytes_from_format = function(t, s) {
            var e = 1024;
            void 0 === s && (s = " ");
            var i = t.split(s).pop().toUpperCase(), r = u.indexOf(i), o = parseFloat(t);
            return r > 0 && !isNaN(o) ? o * Math.pow(e, r) : o;
        }, c.truncate_id = function(t) {
            var s = t.indexOf(":");
            return s >= 0 && (t = t.slice(s + 1)), t.substr(0, 12);
        }, t.exports = c;
    }();
}, function(t, s, e) {
    var i, r;
    (function(e) {
        (function() {
            "use strict";
            function e() {
                this._events = this._events || {};
            }
            function o() {
                e.call(this);
            }
            function h(t) {
                var s = this;
                if (!(this instanceof h)) return new h(arguments[0], arguments[1], arguments[2]);
                o.call(this), "number" == typeof t && (t = {
                    cols: arguments[0],
                    rows: arguments[1],
                    handler: arguments[2]
                }), t = t || {}, y(b(h.defaults), function(e) {
                    null == t[e] && (t[e] = h.options[e], h[e] !== h.defaults[e] && (t[e] = h[e])), 
                    s[e] = t[e];
                }), 8 === t.colors.length ? t.colors = t.colors.concat(h._colors.slice(8)) : 16 === t.colors.length ? t.colors = t.colors.concat(h._colors.slice(16)) : 10 === t.colors.length ? t.colors = t.colors.slice(0, -2).concat(h._colors.slice(8, -2), t.colors.slice(-2)) : 18 === t.colors.length && (t.colors = t.colors.slice(0, -2).concat(h._colors.slice(16, -2), t.colors.slice(-2))), 
                this.colors = t.colors, this.options = t, this.parent = t.body || t.parent || (m ? m.getElementsByTagName("body")[0] : null), 
                this.cols = t.cols || t.geometry[0], this.rows = t.rows || t.geometry[1], this.setRawMode, 
                this.isTTY = !0, this.isRaw = !0, this.columns = this.cols, this.rows = this.rows, 
                t.handler && this.on("data", t.handler), this.ybase = 0, this.ydisp = 0, this.x = 0, 
                this.y = 0, this.cursorState = 0, this.cursorHidden = !1, this.convertEol, this.state = 0, 
                this.queue = "", this.scrollTop = 0, this.scrollBottom = this.rows - 1, this.applicationKeypad = !1, 
                this.applicationCursor = !1, this.originMode = !1, this.insertMode = !1, this.wraparoundMode = !1, 
                this.normal = null, this.prefixMode = !1, this.selectMode = !1, this.visualMode = !1, 
                this.searchMode = !1, this.searchDown, this.entry = "", this.entryPrefix = "Search: ", 
                this._real, this._selected, this._textarea, this.charset = null, this.gcharset = null, 
                this.glevel = 0, this.charsets = [ null ], this.decLocator, this.x10Mouse, this.vt200Mouse, 
                this.vt300Mouse, this.normalMouse, this.mouseEvents, this.sendFocus, this.utfMouse, 
                this.sgrMouse, this.urxvtMouse, this.element, this.children, this.refreshStart, 
                this.refreshEnd, this.savedX, this.savedY, this.savedCols, this.readable = !0, this.writable = !0, 
                this.defAttr = 131840, this.curAttr = this.defAttr, this.params = [], this.currentParam = 0, 
                this.prefix = "", this.postfix = "", this.lines = [];
                for (var e = this.rows; e--; ) this.lines.push(this.blankLine());
                this.tabs, this.setupStops();
            }
            function a(t, s, e, i) {
                t.addEventListener(s, e, i || !1);
            }
            function n(t, s, e, i) {
                t.removeEventListener(s, e, i || !1);
            }
            function c(t) {
                return t.preventDefault && t.preventDefault(), t.returnValue = !1, t.stopPropagation && t.stopPropagation(), 
                t.cancelBubble = !0, !1;
            }
            function l(t, s) {
                function e() {
                    this.constructor = t;
                }
                e.prototype = s.prototype, t.prototype = new e();
            }
            function u(t) {
                var s = t.getElementsByTagName("body")[0], e = t.createElement("div");
                e.className = "terminal";
                var i = t.createElement("div"), r = t.createElement("span");
                r.innerHTML = "hello world", i.appendChild(r), e.appendChild(i), s.appendChild(e);
                var o = r.scrollWidth;
                r.style.fontWeight = "bold";
                var h = r.scrollWidth;
                return s.removeChild(e), o !== h;
            }
            function p(t, s) {
                for (var e = t.length; e--; ) if (t[e] === s) return e;
                return -1;
            }
            function f(t) {
                return !(t <= "＀") && (t >= "！" && t <= "ﾾ" || t >= "ￂ" && t <= "ￇ" || t >= "ￊ" && t <= "ￏ" || t >= "ￒ" && t <= "ￗ" || t >= "ￚ" && t <= "ￜ" || t >= "￠" && t <= "￦" || t >= "￨" && t <= "￮");
            }
            function d(t, s, e) {
                var i = t << 16 | s << 8 | e;
                if (null != d._cache[i]) return d._cache[i];
                for (var r, o, a, n, c, l = 1 / 0, u = -1, p = 0; p < h.vcolors.length; p++) {
                    if (r = h.vcolors[p], o = r[0], a = r[1], n = r[2], c = d.distance(t, s, e, o, a, n), 
                    0 === c) {
                        u = p;
                        break;
                    }
                    c < l && (l = c, u = p);
                }
                return d._cache[i] = u;
            }
            function y(t, s, e) {
                if (t.forEach) return t.forEach(s, e);
                for (var i = 0; i < t.length; i++) s.call(e, t[i], i, t);
            }
            function b(t) {
                if (Object.keys) return Object.keys(t);
                var s, e = [];
                for (s in t) Object.prototype.hasOwnProperty.call(t, s) && e.push(s);
                return e;
            }
            var m = this.document;
            e.prototype.addListener = function(t, s) {
                this._events[t] = this._events[t] || [], this._events[t].push(s);
            }, e.prototype.on = e.prototype.addListener, e.prototype.removeListener = function(t, s) {
                if (this._events[t]) for (var e = this._events[t], i = e.length; i--; ) if (e[i] === s || e[i].listener === s) return void e.splice(i, 1);
            }, e.prototype.off = e.prototype.removeListener, e.prototype.removeAllListeners = function(t) {
                this._events[t] && delete this._events[t];
            }, e.prototype.once = function(t, s) {
                function e() {
                    var i = Array.prototype.slice.call(arguments);
                    return this.removeListener(t, e), s.apply(this, i);
                }
                return e.listener = s, this.on(t, e);
            }, e.prototype.emit = function(t) {
                if (this._events[t]) for (var s = Array.prototype.slice.call(arguments, 1), e = this._events[t], i = e.length, r = 0; r < i; r++) e[r].apply(this, s);
            }, e.prototype.listeners = function(t) {
                return this._events[t] = this._events[t] || [];
            }, l(o, e), o.prototype.pipe = function(t, s) {
                function e() {
                    h.removeListener("data", i), h.removeListener("error", r), h.removeListener("end", o), 
                    t.removeListener("error", r), t.removeListener("close", e);
                }
                var i, r, o, h = this;
                return h.on("data", i = function(s) {
                    t.write(s);
                }), h.on("error", r = function(t) {
                    if (e(), !this.listeners("error").length) throw t;
                }), h.on("end", o = function() {
                    t.end(), e();
                }), t.on("error", r), t.on("close", e), t.emit("pipe", h), t;
            };
            var v = 0, x = 1, k = 2, g = 3, w = 4, C = 5, M = 6, S = {
                type: "udk"
            };
            l(h, o), h.tangoColors = [ "#2e3436", "#cc0000", "#4e9a06", "#c4a000", "#3465a4", "#75507b", "#06989a", "#d3d7cf", "#555753", "#ef2929", "#8ae234", "#fce94f", "#729fcf", "#ad7fa8", "#34e2e2", "#eeeeec" ], 
            h.xtermColors = [ "#000000", "#cd0000", "#00cd00", "#cdcd00", "#0000ee", "#cd00cd", "#00cdcd", "#e5e5e5", "#7f7f7f", "#ff0000", "#00ff00", "#ffff00", "#5c5cff", "#ff00ff", "#00ffff", "#ffffff" ], 
            h.colors = function() {
                function t(t, e, r) {
                    i.push("#" + s(t) + s(e) + s(r));
                }
                function s(t) {
                    return t = t.toString(16), t.length < 2 ? "0" + t : t;
                }
                var e, i = h.tangoColors.slice(), r = [ 0, 95, 135, 175, 215, 255 ];
                for (e = 0; e < 216; e++) t(r[e / 36 % 6 | 0], r[e / 6 % 6 | 0], r[e % 6]);
                for (e = 0; e < 24; e++) r = 8 + 10 * e, t(r, r, r);
                return i;
            }(), h.colors[256] = "#000000", h.colors[257] = "#f0f0f0", h._colors = h.colors.slice(), 
            h.vcolors = function() {
                for (var t, s = [], e = h.colors, i = 0; i < 256; i++) t = parseInt(e[i].substring(1), 16), 
                s.push([ t >> 16 & 255, t >> 8 & 255, 255 & t ]);
                return s;
            }(), h.defaults = {
                colors: h.colors,
                convertEol: !1,
                termName: "xterm",
                geometry: [ 80, 24 ],
                cursorBlink: !0,
                visualBell: !1,
                popOnBell: !1,
                scrollback: 1e3,
                screenKeys: !1,
                debug: !1,
                useStyle: !1
            }, h.options = {}, y(b(h.defaults), function(t) {
                h[t] = h.defaults[t], h.options[t] = h.defaults[t];
            }), h.focus = null, h.prototype.focus = function() {
                h.focus !== this && (h.focus && h.focus.blur(), this.sendFocus && this.send("[I"), 
                this.showCursor(), h.focus = this);
            }, h.prototype.blur = function() {
                h.focus === this && (this.cursorState = 0, this.refresh(this.y, this.y), this.sendFocus && this.send("[O"), 
                h.focus = null);
            }, h.prototype.initGlobal = function() {
                var t = this.document;
                h._boundDocs = h._boundDocs || [], ~p(h._boundDocs, t) || (h._boundDocs.push(t), 
                h.bindPaste(t), h.bindKeys(t), h.bindCopy(t), this.isMobile && this.fixMobile(t), 
                this.useStyle && h.insertStyle(t, this.colors[256], this.colors[257]));
            }, h.bindPaste = function(t) {
                var s = t.defaultView;
                a(s, "paste", function(t) {
                    var s = h.focus;
                    if (s) return t.clipboardData ? s.send(t.clipboardData.getData("text/plain")) : s.context.clipboardData && s.send(s.context.clipboardData.getData("Text")), 
                    s.element.contentEditable = "inherit", c(t);
                });
            }, h.bindKeys = function(t) {
                a(t, "keydown", function(t) {
                    if (h.focus) {
                        var s = t.target || t.srcElement;
                        if (s) return s === h.focus.element || s === h.focus.context || s === h.focus.document || s === h.focus.body || s === h._textarea || s === h.focus.parent ? h.focus.keyDown(t) : void 0;
                    }
                }, !0), a(t, "keypress", function(t) {
                    if (h.focus) {
                        var s = t.target || t.srcElement;
                        if (s) return s === h.focus.element || s === h.focus.context || s === h.focus.document || s === h.focus.body || s === h._textarea || s === h.focus.parent ? h.focus.keyPress(t) : void 0;
                    }
                }, !0), a(t, "mousedown", function(t) {
                    if (h.focus) {
                        var s = t.target || t.srcElement;
                        if (s) {
                            do if (s === h.focus.element) return; while (s = s.parentNode);
                            h.focus.blur();
                        }
                    }
                });
            }, h.bindCopy = function(t) {
                var s = t.defaultView;
                a(s, "copy", function(t) {
                    var s = h.focus;
                    if (s && s._selected) {
                        var e = s.getCopyTextarea(), i = s.grabText(s._selected.x1, s._selected.x2, s._selected.y1, s._selected.y2);
                        s.emit("copy", i), e.focus(), e.textContent = i, e.value = i, e.setSelectionRange(0, i.length), 
                        P(function() {
                            s.element.focus(), s.focus();
                        }, 1);
                    }
                });
            }, h.prototype.fixMobile = function(t) {
                var s = this, e = t.createElement("textarea");
                e.style.position = "absolute", e.style.left = "-32000px", e.style.top = "-32000px", 
                e.style.width = "0px", e.style.height = "0px", e.style.opacity = "0", e.style.backgroundColor = "transparent", 
                e.style.borderStyle = "none", e.style.outlineStyle = "none", e.autocapitalize = "none", 
                e.autocorrect = "off", t.getElementsByTagName("body")[0].appendChild(e), h._textarea = e, 
                P(function() {
                    e.focus();
                }, 1e3), this.isAndroid && a(e, "change", function() {
                    var t = e.textContent || e.value;
                    e.value = "", e.textContent = "", s.send(t + "\r");
                });
            }, h.insertStyle = function(t, s, e) {
                var i = t.getElementById("term-style");
                if (!i) {
                    var r = t.getElementsByTagName("head")[0];
                    if (r) {
                        var i = t.createElement("style");
                        i.id = "term-style", i.innerHTML = ".terminal {\n  float: left;\n  border: " + s + ' solid 5px;\n  font-family: "DejaVu Sans Mono", "Liberation Mono", monospace;\n  font-size: 11px;\n  color: ' + e + ";\n  background: " + s + ";\n}\n\n.terminal-cursor {\n  color: " + s + ";\n  background: " + e + ";\n}\n";
                        var o = "";
                        y(h.colors, function(t, s) {
                            256 === s && (o += "\n.term-bg-color-default { background-color: " + t + "; }"), 
                            257 === s && (o += "\n.term-fg-color-default { color: " + t + "; }"), o += "\n.term-bg-color-" + s + " { background-color: " + t + "; }", 
                            o += "\n.term-fg-color-" + s + " { color: " + t + "; }";
                        }), o += "\n.term-bold { font-weight: bold; }", o += "\n.term-underline { text-decoration: underline; }", 
                        o += "\n.term-blink { text-decoration: blink; }", o += "\n.term-hidden { visibility: hidden; }", 
                        i.innerHTML += o + "\n", r.insertBefore(i, r.firstChild);
                    }
                }
            }, h.prototype.open = function(t) {
                var s, e = this, i = 0;
                if (this.parent = t || this.parent, !this.parent) throw new Error("Terminal requires a parent element.");
                for (this.context = this.parent.ownerDocument.defaultView, this.document = this.parent.ownerDocument, 
                this.body = this.document.getElementsByTagName("body")[0], this.context.navigator && this.context.navigator.userAgent && (this.isMac = !!~this.context.navigator.userAgent.indexOf("Mac"), 
                this.isIpad = !!~this.context.navigator.userAgent.indexOf("iPad"), this.isIphone = !!~this.context.navigator.userAgent.indexOf("iPhone"), 
                this.isAndroid = !!~this.context.navigator.userAgent.indexOf("Android"), this.isMobile = this.isIpad || this.isIphone || this.isAndroid, 
                this.isMSIE = !!~this.context.navigator.userAgent.indexOf("MSIE")), this.element = this.document.createElement("div"), 
                this.element.className = "terminal", this.element.style.outline = "none", this.element.setAttribute("tabindex", 0), 
                this.element.setAttribute("spellcheck", "false"), this.element.style.backgroundColor = this.colors[256], 
                this.element.style.color = this.colors[257], this.children = []; i < this.rows; i++) s = this.document.createElement("div"), 
                this.element.appendChild(s), this.children.push(s);
                this.parent.appendChild(this.element), this.refresh(0, this.rows - 1), "useEvents" in this.options && !this.options.useEvents || this.initGlobal(), 
                "useFocus" in this.options && !this.options.useFocus || (this.focus(), this.startBlink(), 
                a(this.element, "focus", function() {
                    e.focus(), e.isMobile && h._textarea.focus();
                }), a(this.element, "mousedown", function() {
                    e.focus();
                }), a(this.element, "mousedown", function(t) {
                    var s = null != t.button ? +t.button : null != t.which ? t.which - 1 : null;
                    e.isMSIE && (s = 1 === s ? 0 : 4 === s ? 1 : s), 2 === s && (e.element.contentEditable = "true", 
                    P(function() {
                        e.element.contentEditable = "inherit";
                    }, 1));
                }, !0)), "useMouse" in this.options && !this.options.useMouse || this.bindMouse(), 
                "useFocus" in this.options && !this.options.useFocus || P(function() {
                    e.element.focus();
                }, 100), null == h.brokenBold && (h.brokenBold = u(this.document)), this.emit("open");
            }, h.prototype.setRawMode = function(t) {
                this.isRaw = !!t;
            }, h.prototype.bindMouse = function() {
                function t(t) {
                    var s, e;
                    if (s = r(t), e = o(t)) switch (i(s, e), t.type) {
                      case "mousedown":
                        u = s;
                        break;

                      case "mouseup":
                        u = 32;
                        break;

                      case p:                    }
                }
                function s(t) {
                    var s, e = u;
                    s = o(t), s && (e += 32, i(e, s));
                }
                function e(t, s) {
                    if (l.utfMouse) {
                        if (2047 === s) return t.push(0);
                        s < 127 ? t.push(s) : (s > 2047 && (s = 2047), t.push(192 | s >> 6), t.push(128 | 63 & s));
                    } else {
                        if (255 === s) return t.push(0);
                        s > 127 && (s = 127), t.push(s);
                    }
                }
                function i(t, s) {
                    if (l.vt300Mouse) {
                        t &= 3, s.x -= 32, s.y -= 32;
                        var i = "[24";
                        if (0 === t) i += "1"; else if (1 === t) i += "3"; else if (2 === t) i += "5"; else {
                            if (3 === t) return;
                            i += "0";
                        }
                        return i += "~[" + s.x + "," + s.y + "]\r", void l.send(i);
                    }
                    if (l.decLocator) return t &= 3, s.x -= 32, s.y -= 32, 0 === t ? t = 2 : 1 === t ? t = 4 : 2 === t ? t = 6 : 3 === t && (t = 3), 
                    void l.send("[" + t + ";" + (3 === t ? 4 : 0) + ";" + s.y + ";" + s.x + ";" + (s.page || 0) + "&w");
                    if (l.urxvtMouse) return s.x -= 32, s.y -= 32, s.x++, s.y++, void l.send("[" + t + ";" + s.x + ";" + s.y + "M");
                    if (l.sgrMouse) return s.x -= 32, s.y -= 32, void l.send("[<" + (3 === (3 & t) ? t & -4 : t) + ";" + s.x + ";" + s.y + (3 === (3 & t) ? "m" : "M"));
                    var i = [];
                    e(i, t), e(i, s.x), e(i, s.y), l.send("[M" + _.fromCharCode.apply(_, i));
                }
                function r(t) {
                    var s, e, i, r, o;
                    switch (t.type) {
                      case "mousedown":
                        s = null != t.button ? +t.button : null != t.which ? t.which - 1 : null, l.isMSIE && (s = 1 === s ? 0 : 4 === s ? 1 : s);
                        break;

                      case "mouseup":
                        s = 3;
                        break;

                      case "DOMMouseScroll":
                        s = t.detail < 0 ? 64 : 65;
                        break;

                      case "mousewheel":
                        s = t.wheelDeltaY > 0 ? 64 : 65;
                    }
                    return e = t.shiftKey ? 4 : 0, i = t.metaKey ? 8 : 0, r = t.ctrlKey ? 16 : 0, o = e | i | r, 
                    l.vt200Mouse ? o &= r : l.normalMouse || (o = 0), s = 32 + (o << 2) + s;
                }
                function o(t) {
                    var s, e, i, r, o;
                    if (null != t.pageX) {
                        for (s = t.pageX, e = t.pageY, o = l.element; o && o !== l.document.documentElement; ) s -= o.offsetLeft, 
                        e -= o.offsetTop, o = "offsetParent" in o ? o.offsetParent : o.parentNode;
                        return i = l.element.clientWidth, r = l.element.clientHeight, s = Math.round(s / i * l.cols), 
                        e = Math.round(e / r * l.rows), s < 0 && (s = 0), s > l.cols && (s = l.cols), e < 0 && (e = 0), 
                        e > l.rows && (e = l.rows), s += 32, e += 32, {
                            x: s,
                            y: e,
                            type: t.type === p ? "mousewheel" : t.type
                        };
                    }
                }
                var h = this.element, l = this, u = 32, p = "onmousewheel" in this.context ? "mousewheel" : "DOMMouseScroll";
                a(h, "mousedown", function(e) {
                    if (l.mouseEvents) return t(e), l.focus(), l.normalMouse && a(l.document, "mousemove", s), 
                    l.x10Mouse || a(l.document, "mouseup", function e(i) {
                        return t(i), l.normalMouse && n(l.document, "mousemove", s), n(l.document, "mouseup", e), 
                        c(i);
                    }), c(e);
                }), a(h, p, function(s) {
                    if (l.mouseEvents && !(l.x10Mouse || l.vt300Mouse || l.decLocator)) return t(s), 
                    c(s);
                }), a(h, p, function(t) {
                    if (!l.mouseEvents && !l.applicationKeypad) return "DOMMouseScroll" === t.type ? l.scrollDisp(t.detail < 0 ? -5 : 5) : l.scrollDisp(t.wheelDeltaY > 0 ? -5 : 5), 
                    c(t);
                });
            }, h.prototype.close = h.prototype.destroySoon = h.prototype.destroy = function() {
                this.destroyed || (this._blink && (clearInterval(this._blink), delete this._blink), 
                this.readable = !1, this.writable = !1, this.destroyed = !0, this._events = {}, 
                this.handler = function() {}, this.write = function() {}, this.end = function() {}, 
                this.element.parentNode && this.element.parentNode.removeChild(this.element), this.emit("end"), 
                this.emit("close"), this.emit("finish"), this.emit("destroy"));
            }, h.prototype.refresh = function(t, s) {
                var e, i, r, o, a, n, c, l, u, p, d, y, b, m;
                for (s - t >= this.rows / 2 && (m = this.element.parentNode, m && m.removeChild(this.element)), 
                c = this.cols, i = t, s >= this.lines.length && (this.log("`end` is too large. Most likely a bad CSR."), 
                s = this.lines.length - 1); i <= s; i++) {
                    for (b = i + this.ydisp, o = this.lines[b], a = "", e = i !== this.y || !this.cursorState || this.ydisp !== this.ybase && !this.selectMode || this.cursorHidden ? -1 : this.x, 
                    u = this.defAttr, r = 0; r < c; r++) {
                        switch (l = o[r][0], n = o[r][1], r === e && (l = -1), l !== u && (u !== this.defAttr && (a += "</span>"), 
                        l !== this.defAttr && (l === -1 ? a += '<span class="reverse-video terminal-cursor">' : (a += this.useStyle ? '<span class="' : '<span style="', 
                        p = 511 & l, d = l >> 9 & 511, y = l >> 18, 1 & y && (h.brokenBold || (a += this.useStyle ? "term-bold " : "font-weight:bold;"), 
                        d < 8 && (d += 8)), 2 & y && (a += this.useStyle ? "term-underline " : "text-decoration:underline;"), 
                        4 & y && (this.useStyle ? a += "term-blink " : 2 & y ? (a = a.slice(0, -1), a += " blink;") : a += "text-decoration:blink;"), 
                        8 & y && (p = l >> 9 & 511, d = 511 & l, 1 & y && d < 8 && (d += 8)), 16 & y && (a += this.useStyle ? "term-hidden " : "visibility:hidden;"), 
                        256 !== p && (a += this.useStyle ? "term-bg-color-" + p + " " : "background-color:" + this.colors[p] + ";"), 
                        257 !== d && (a += this.useStyle ? "term-fg-color-" + d + " " : "color:" + this.colors[d] + ";"), 
                        a += '">'))), n) {
                          case "&":
                            a += "&amp;";
                            break;

                          case "<":
                            a += "&lt;";
                            break;

                          case ">":
                            a += "&gt;";
                            break;

                          default:
                            n <= " " ? a += "&nbsp;" : (f(n) && r++, a += n);
                        }
                        u = l;
                    }
                    u !== this.defAttr && (a += "</span>"), this.children[i].innerHTML = a;
                }
                m && m.appendChild(this.element);
            }, h.prototype._cursorBlink = function() {
                h.focus === this && (this.cursorState ^= 1, this.refresh(this.y, this.y));
            }, h.prototype.showCursor = function() {
                this.cursorState || (this.cursorState = 1, this.refresh(this.y, this.y));
            }, h.prototype.startBlink = function() {
                if (this.cursorBlink) {
                    var t = this;
                    this._blinker = function() {
                        t._cursorBlink();
                    }, this._blink = T(this._blinker, 500);
                }
            }, h.prototype.refreshBlink = function() {
                this.cursorBlink && this._blink && (clearInterval(this._blink), this._blink = T(this._blinker, 500));
            }, h.prototype.scroll = function() {
                var t;
                ++this.ybase === this.scrollback && (this.ybase = this.ybase / 2 | 0, this.lines = this.lines.slice(-(this.ybase + this.rows) + 1)), 
                this.ydisp = this.ybase, t = this.ybase + this.rows - 1, t -= this.rows - 1 - this.scrollBottom, 
                t === this.lines.length ? this.lines.push(this.blankLine()) : this.lines.splice(t, 0, this.blankLine()), 
                0 !== this.scrollTop && (0 !== this.ybase && (this.ybase--, this.ydisp = this.ybase), 
                this.lines.splice(this.ybase + this.scrollTop, 1)), this.updateRange(this.scrollTop), 
                this.updateRange(this.scrollBottom);
            }, h.prototype.scrollDisp = function(t) {
                this.ydisp += t, this.ydisp > this.ybase ? this.ydisp = this.ybase : this.ydisp < 0 && (this.ydisp = 0), 
                this.refresh(0, this.rows - 1);
            }, h.prototype.write = function(t) {
                var s, e, i, r = t.length, o = 0;
                for (this.refreshStart = this.y, this.refreshEnd = this.y, this.ybase !== this.ydisp && (this.ydisp = this.ybase, 
                this.maxRange()); o < r; o++, this.lch = i) switch (i = t[o], this.state) {
                  case v:
                    switch (i) {
                      case "":
                        this.bell();
                        break;

                      case "\n":
                      case "\v":
                      case "\f":
                        this.convertEol && (this.x = 0), this.y++, this.y > this.scrollBottom && (this.y--, 
                        this.scroll());
                        break;

                      case "\r":
                        this.x = 0;
                        break;

                      case "\b":
                        this.x > 0 && this.x--;
                        break;

                      case "\t":
                        this.x = this.nextStop();
                        break;

                      case "":
                        this.setgLevel(1);
                        break;

                      case "":
                        this.setgLevel(0);
                        break;

                      case "":
                        this.state = x;
                        break;

                      default:
                        if (i >= " " && (this.charset && this.charset[i] && (i = this.charset[i]), this.x >= this.cols && (this.x = 0, 
                        this.y++, this.y > this.scrollBottom && (this.y--, this.scroll())), this.lines[this.y + this.ybase][this.x] = [ this.curAttr, i ], 
                        this.x++, this.updateRange(this.y), f(i))) {
                            if (s = this.y + this.ybase, this.cols < 2 || this.x >= this.cols) {
                                this.lines[s][this.x - 1] = [ this.curAttr, " " ];
                                break;
                            }
                            this.lines[s][this.x] = [ this.curAttr, " " ], this.x++;
                        }
                    }
                    break;

                  case x:
                    switch (i) {
                      case "[":
                        this.params = [], this.currentParam = 0, this.state = k;
                        break;

                      case "]":
                        this.params = [], this.currentParam = 0, this.state = g;
                        break;

                      case "P":
                        this.params = [], this.prefix = "", this.currentParam = "", this.state = C;
                        break;

                      case "_":
                        this.state = M;
                        break;

                      case "^":
                        this.state = M;
                        break;

                      case "c":
                        this.reset();
                        break;

                      case "E":
                        this.x = 0;

                      case "D":
                        this.index();
                        break;

                      case "M":
                        this.reverseIndex();
                        break;

                      case "%":
                        this.setgLevel(0), this.setgCharset(0, h.charsets.US), this.state = v, o++;
                        break;

                      case "(":
                      case ")":
                      case "*":
                      case "+":
                      case "-":
                      case ".":
                        switch (i) {
                          case "(":
                            this.gcharset = 0;
                            break;

                          case ")":
                            this.gcharset = 1;
                            break;

                          case "*":
                            this.gcharset = 2;
                            break;

                          case "+":
                            this.gcharset = 3;
                            break;

                          case "-":
                            this.gcharset = 1;
                            break;

                          case ".":
                            this.gcharset = 2;
                        }
                        this.state = w;
                        break;

                      case "/":
                        this.gcharset = 3, this.state = w, o--;
                        break;

                      case "N":
                        break;

                      case "O":
                        break;

                      case "n":
                        this.setgLevel(2);
                        break;

                      case "o":
                        this.setgLevel(3);
                        break;

                      case "|":
                        this.setgLevel(3);
                        break;

                      case "}":
                        this.setgLevel(2);
                        break;

                      case "~":
                        this.setgLevel(1);
                        break;

                      case "7":
                        this.saveCursor(), this.state = v;
                        break;

                      case "8":
                        this.restoreCursor(), this.state = v;
                        break;

                      case "#":
                        this.state = v, o++;
                        break;

                      case "H":
                        this.tabSet();
                        break;

                      case "=":
                        this.log("Serial port requested application keypad."), this.applicationKeypad = !0, 
                        this.state = v;
                        break;

                      case ">":
                        this.log("Switching back to normal keypad."), this.applicationKeypad = !1, this.state = v;
                        break;

                      default:
                        this.state = v, this.error("Unknown ESC control: %s.", i);
                    }
                    break;

                  case w:
                    switch (i) {
                      case "0":
                        e = h.charsets.SCLD;
                        break;

                      case "A":
                        e = h.charsets.UK;
                        break;

                      case "B":
                        e = h.charsets.US;
                        break;

                      case "4":
                        e = h.charsets.Dutch;
                        break;

                      case "C":
                      case "5":
                        e = h.charsets.Finnish;
                        break;

                      case "R":
                        e = h.charsets.French;
                        break;

                      case "Q":
                        e = h.charsets.FrenchCanadian;
                        break;

                      case "K":
                        e = h.charsets.German;
                        break;

                      case "Y":
                        e = h.charsets.Italian;
                        break;

                      case "E":
                      case "6":
                        e = h.charsets.NorwegianDanish;
                        break;

                      case "Z":
                        e = h.charsets.Spanish;
                        break;

                      case "H":
                      case "7":
                        e = h.charsets.Swedish;
                        break;

                      case "=":
                        e = h.charsets.Swiss;
                        break;

                      case "/":
                        e = h.charsets.ISOLatin, o++;
                        break;

                      default:
                        e = h.charsets.US;
                    }
                    this.setgCharset(this.gcharset, e), this.gcharset = null, this.state = v;
                    break;

                  case g:
                    if ("" === this.lch && "\\" === i || "" === i) {
                        switch ("" === this.lch && ("string" == typeof this.currentParam ? this.currentParam = this.currentParam.slice(0, -1) : "number" == typeof this.currentParam && (this.currentParam = (this.currentParam - ("".charCodeAt(0) - 48)) / 10)), 
                        this.params.push(this.currentParam), this.params[0]) {
                          case 0:
                          case 1:
                          case 2:
                            this.params[1] && (this.title = this.params[1], this.handleTitle(this.title));
                            break;

                          case 3:
                            break;

                          case 4:
                          case 5:
                            break;

                          case 10:
                          case 11:
                          case 12:
                          case 13:
                          case 14:
                          case 15:
                          case 16:
                          case 17:
                          case 18:
                          case 19:
                            break;

                          case 46:
                            break;

                          case 50:
                            break;

                          case 51:
                            break;

                          case 52:
                            break;

                          case 104:
                          case 105:
                          case 110:
                          case 111:
                          case 112:
                          case 113:
                          case 114:
                          case 115:
                          case 116:
                          case 117:
                          case 118:                        }
                        this.params = [], this.currentParam = 0, this.state = v;
                    } else this.params.length ? this.currentParam += i : i >= "0" && i <= "9" ? this.currentParam = 10 * this.currentParam + i.charCodeAt(0) - 48 : ";" === i && (this.params.push(this.currentParam), 
                    this.currentParam = "");
                    break;

                  case k:
                    if ("?" === i || ">" === i || "!" === i) {
                        this.prefix = i;
                        break;
                    }
                    if (i >= "0" && i <= "9") {
                        this.currentParam = 10 * this.currentParam + i.charCodeAt(0) - 48;
                        break;
                    }
                    if ("$" === i || '"' === i || " " === i || "'" === i) {
                        this.postfix = i;
                        break;
                    }
                    if (this.params.push(this.currentParam), this.currentParam = 0, ";" === i) break;
                    switch (this.state = v, i) {
                      case "A":
                        this.cursorUp(this.params);
                        break;

                      case "B":
                        this.cursorDown(this.params);
                        break;

                      case "C":
                        this.cursorForward(this.params);
                        break;

                      case "D":
                        this.cursorBackward(this.params);
                        break;

                      case "H":
                        this.cursorPos(this.params);
                        break;

                      case "J":
                        this.eraseInDisplay(this.params);
                        break;

                      case "K":
                        this.eraseInLine(this.params);
                        break;

                      case "m":
                        this.prefix || this.charAttributes(this.params);
                        break;

                      case "n":
                        this.prefix || this.deviceStatus(this.params);
                        break;

                      case "@":
                        this.insertChars(this.params);
                        break;

                      case "E":
                        this.cursorNextLine(this.params);
                        break;

                      case "F":
                        this.cursorPrecedingLine(this.params);
                        break;

                      case "G":
                        this.cursorCharAbsolute(this.params);
                        break;

                      case "L":
                        this.insertLines(this.params);
                        break;

                      case "M":
                        this.deleteLines(this.params);
                        break;

                      case "P":
                        this.deleteChars(this.params);
                        break;

                      case "X":
                        this.eraseChars(this.params);
                        break;

                      case "`":
                        this.charPosAbsolute(this.params);
                        break;

                      case "a":
                        this.HPositionRelative(this.params);
                        break;

                      case "c":
                        this.sendDeviceAttributes(this.params);
                        break;

                      case "d":
                        this.linePosAbsolute(this.params);
                        break;

                      case "e":
                        this.VPositionRelative(this.params);
                        break;

                      case "f":
                        this.HVPosition(this.params);
                        break;

                      case "h":
                        this.setMode(this.params);
                        break;

                      case "l":
                        this.resetMode(this.params);
                        break;

                      case "r":
                        this.setScrollRegion(this.params);
                        break;

                      case "s":
                        this.saveCursor(this.params);
                        break;

                      case "u":
                        this.restoreCursor(this.params);
                        break;

                      case "I":
                        this.cursorForwardTab(this.params);
                        break;

                      case "S":
                        this.scrollUp(this.params);
                        break;

                      case "T":
                        this.params.length < 2 && !this.prefix && this.scrollDown(this.params);
                        break;

                      case "Z":
                        this.cursorBackwardTab(this.params);
                        break;

                      case "b":
                        this.repeatPrecedingCharacter(this.params);
                        break;

                      case "g":
                        this.tabClear(this.params);
                        break;

                      case "p":
                        switch (this.prefix) {
                          case "!":
                            this.softReset(this.params);
                        }
                        break;

                      default:
                        this.error("Unknown CSI code: %s.", i);
                    }
                    this.prefix = "", this.postfix = "";
                    break;

                  case C:
                    if ("" === this.lch && "\\" === i || "" === i) {
                        if ("tmux;" === this.prefix && "" === i) {
                            this.currentParam += i;
                            continue;
                        }
                        "" === this.lch && ("string" == typeof this.currentParam ? this.currentParam = this.currentParam.slice(0, -1) : "number" == typeof this.currentParam && (this.currentParam = (this.currentParam - ("".charCodeAt(0) - 48)) / 10)), 
                        this.params.push(this.currentParam);
                        var a = this.params[this.params.length - 1];
                        switch (this.prefix) {
                          case S:
                            this.emit("udk", {
                                clearAll: 0 === this.params[0],
                                eraseBelow: 1 === this.params[0],
                                lockKeys: 0 === this.params[1],
                                dontLockKeys: 1 === this.params[1],
                                keyList: (this.params[2] + "").split(";").map(function(t) {
                                    return t = t.split("/"), {
                                        keyCode: t[0],
                                        hexKeyValue: t[1]
                                    };
                                })
                            });
                            break;

                          case "$q":
                            var n = 0;
                            switch (a) {
                              case '"q':
                                a = '0"q', n = 1;
                                break;

                              case '"p':
                                a = '61;0"p', n = 1;
                                break;

                              case "r":
                                a = "" + (this.scrollTop + 1) + ";" + (this.scrollBottom + 1) + "r", n = 1;
                                break;

                              case "m":
                                n = 0;
                                break;

                              default:
                                this.error("Unknown DCS Pt: %s.", a), n = 0;
                            }
                            this.send("P" + n + "$r" + a + "\\");
                            break;

                          case "+p":
                            this.emit("set terminfo", {
                                name: this.params[0]
                            });
                            break;

                          case "+q":
                            var n = !1;
                            this.send("P" + +n + "+r" + a + "\\");
                            break;

                          case "tmux;":
                            this.emit("passthrough", a);
                            break;

                          default:
                            this.error("Unknown DCS prefix: %s.", a);
                        }
                        this.currentParam = 0, this.prefix = "", this.state = v;
                    } else this.currentParam += i, this.prefix || (/^\d*;\d*\|/.test(this.currentParam) ? (this.prefix = S, 
                    this.params = this.currentParam.split(/[;|]/).map(function(t) {
                        return t.length ? +t : 0;
                    }).slice(0, -1), this.currentParam = "") : (/^[$+][a-zA-Z]/.test(this.currentParam) || /^\w+;\x1b/.test(this.currentParam)) && (this.prefix = this.currentParam, 
                    this.currentParam = ""));
                    break;

                  case M:
                    ("" === this.lch && "\\" === i || "" === i) && (this.state = v);
                }
                return this.updateRange(this.y), this.refresh(this.refreshStart, this.refreshEnd), 
                !0;
            }, h.prototype.writeln = function(t) {
                return this.write(t + "\r\n");
            }, h.prototype.end = function(t) {
                var s = !0;
                return t && (s = this.write(t)), this.destroySoon(), s;
            }, h.prototype.resume = function() {}, h.prototype.pause = function() {}, h.prototype.keyDown = function(t) {
                var s, e = this;
                switch (t.keyCode) {
                  case 8:
                    if (t.altKey) {
                        s = "";
                        break;
                    }
                    if (t.shiftKey) {
                        s = "\b";
                        break;
                    }
                    s = "";
                    break;

                  case 9:
                    if (t.shiftKey) {
                        s = "[Z";
                        break;
                    }
                    s = "\t";
                    break;

                  case 13:
                    s = "\r";
                    break;

                  case 27:
                    s = "";
                    break;

                  case 32:
                    s = " ";
                    break;

                  case 37:
                    if (this.applicationCursor) {
                        s = "OD";
                        break;
                    }
                    if (t.ctrlKey) {
                        s = "[5D";
                        break;
                    }
                    s = "[D";
                    break;

                  case 39:
                    if (this.applicationCursor) {
                        s = "OC";
                        break;
                    }
                    if (t.ctrlKey) {
                        s = "[5C";
                        break;
                    }
                    s = "[C";
                    break;

                  case 38:
                    if (this.applicationCursor) {
                        s = "OA";
                        break;
                    }
                    if (t.ctrlKey) return this.scrollDisp(-1), c(t);
                    s = "[A";
                    break;

                  case 40:
                    if (this.applicationCursor) {
                        s = "OB";
                        break;
                    }
                    if (t.ctrlKey) return this.scrollDisp(1), c(t);
                    s = "[B";
                    break;

                  case 46:
                    s = "[3~";
                    break;

                  case 45:
                    s = "[2~";
                    break;

                  case 36:
                    if (this.applicationKeypad) {
                        s = "OH";
                        break;
                    }
                    s = "OH";
                    break;

                  case 35:
                    if (this.applicationKeypad) {
                        s = "OF";
                        break;
                    }
                    s = "OF";
                    break;

                  case 33:
                    if (t.shiftKey) return this.scrollDisp(-(this.rows - 1)), c(t);
                    s = "[5~";
                    break;

                  case 34:
                    if (t.shiftKey) return this.scrollDisp(this.rows - 1), c(t);
                    s = "[6~";
                    break;

                  case 112:
                    s = "OP";
                    break;

                  case 113:
                    s = "OQ";
                    break;

                  case 114:
                    s = "OR";
                    break;

                  case 115:
                    s = "OS";
                    break;

                  case 116:
                    s = "[15~";
                    break;

                  case 117:
                    s = "[17~";
                    break;

                  case 118:
                    s = "[18~";
                    break;

                  case 119:
                    s = "[19~";
                    break;

                  case 120:
                    s = "[20~";
                    break;

                  case 121:
                    s = "[21~";
                    break;

                  case 122:
                    s = "[23~";
                    break;

                  case 123:
                    s = "[24~";
                    break;

                  default:
                    if (t.ctrlKey) if (t.keyCode >= 65 && t.keyCode <= 90) {
                        if (this.screenKeys && !this.prefixMode && !this.selectMode && 65 === t.keyCode) return this.enterPrefix(), 
                        c(t);
                        if (this.prefixMode && 86 === t.keyCode) return void this.leavePrefix();
                        if ((this.prefixMode || this.selectMode) && 67 === t.keyCode) return void (this.visualMode && P(function() {
                            e.leaveVisual();
                        }, 1));
                        s = _.fromCharCode(t.keyCode - 64);
                    } else 32 === t.keyCode ? s = _.fromCharCode(0) : t.keyCode >= 51 && t.keyCode <= 55 ? s = _.fromCharCode(t.keyCode - 51 + 27) : 56 === t.keyCode ? s = _.fromCharCode(127) : 219 === t.keyCode ? s = _.fromCharCode(27) : 221 === t.keyCode && (s = _.fromCharCode(29)); else t.altKey && (t.keyCode >= 65 && t.keyCode <= 90 ? s = "" + _.fromCharCode(t.keyCode + 32) : 192 === t.keyCode ? s = "`" : t.keyCode >= 48 && t.keyCode <= 57 && (s = "" + (t.keyCode - 48)));
                }
                return !s || (this.prefixMode ? (this.leavePrefix(), c(t)) : this.selectMode ? (this.keySelect(t, s), 
                c(t)) : (this.emit("keydown", t), this.emit("key", s, t), this.showCursor(), this.handler(s), 
                c(t)));
            }, h.prototype.setgLevel = function(t) {
                this.glevel = t, this.charset = this.charsets[t];
            }, h.prototype.setgCharset = function(t, s) {
                this.charsets[t] = s, this.glevel === t && (this.charset = s);
            }, h.prototype.keyPress = function(t) {
                var s;
                if (c(t), t.charCode) s = t.charCode; else if (null == t.which) s = t.keyCode; else {
                    if (0 === t.which || 0 === t.charCode) return !1;
                    s = t.which;
                }
                return !(!s || t.ctrlKey || t.altKey || t.metaKey) && (s = _.fromCharCode(s), this.prefixMode ? (this.leavePrefix(), 
                this.keyPrefix(t, s), !1) : this.selectMode ? (this.keySelect(t, s), !1) : (this.emit("keypress", s, t), 
                this.emit("key", s, t), this.showCursor(), this.handler(s), !1));
            }, h.prototype.send = function(t) {
                var s = this;
                this.queue || P(function() {
                    s.handler(s.queue), s.queue = "";
                }, 1), this.queue += t;
            }, h.prototype.bell = function() {
                if (this.emit("bell"), this.visualBell) {
                    var t = this;
                    this.element.style.borderColor = "white", P(function() {
                        t.element.style.borderColor = "";
                    }, 10), this.popOnBell && this.focus();
                }
            }, h.prototype.log = function() {
                if (this.debug && this.context.console && this.context.console.log) {
                    var t = Array.prototype.slice.call(arguments);
                    this.context.console.log.apply(this.context.console, t);
                }
            }, h.prototype.error = function() {
                if (this.debug && this.context.console && this.context.console.error) {
                    var t = Array.prototype.slice.call(arguments);
                    this.context.console.error.apply(this.context.console, t);
                }
            }, h.prototype.resize = function(t, s) {
                var e, i, r, o, h;
                if (t < 1 && (t = 1), s < 1 && (s = 1), o = this.cols, o < t) for (h = [ this.defAttr, " " ], 
                r = this.lines.length; r--; ) for (;this.lines[r].length < t; ) this.lines[r].push(h); else if (o > t) for (r = this.lines.length; r--; ) for (;this.lines[r].length > t; ) this.lines[r].pop();
                if (this.setupStops(o), this.cols = t, this.columns = t, o = this.rows, o < s) for (i = this.element; o++ < s; ) this.lines.length < s + this.ybase && this.lines.push(this.blankLine()), 
                this.children.length < s && (e = this.document.createElement("div"), i.appendChild(e), 
                this.children.push(e)); else if (o > s) for (;o-- > s; ) if (this.lines.length > s + this.ybase && this.lines.pop(), 
                this.children.length > s) {
                    if (i = this.children.pop(), !i) continue;
                    i.parentNode.removeChild(i);
                }
                this.rows = s, this.y >= s && (this.y = s - 1), this.x >= t && (this.x = t - 1), 
                this.scrollTop = 0, this.scrollBottom = s - 1, this.refresh(0, this.rows - 1), this.normal = null, 
                this.emit("resize");
            }, h.prototype.updateRange = function(t) {
                t < this.refreshStart && (this.refreshStart = t), t > this.refreshEnd && (this.refreshEnd = t);
            }, h.prototype.maxRange = function() {
                this.refreshStart = 0, this.refreshEnd = this.rows - 1;
            }, h.prototype.setupStops = function(t) {
                for (null != t ? this.tabs[t] || (t = this.prevStop(t)) : (this.tabs = {}, t = 0); t < this.cols; t += 8) this.tabs[t] = !0;
            }, h.prototype.prevStop = function(t) {
                for (null == t && (t = this.x); !this.tabs[--t] && t > 0; ) ;
                return t >= this.cols ? this.cols - 1 : t < 0 ? 0 : t;
            }, h.prototype.nextStop = function(t) {
                for (null == t && (t = this.x); !this.tabs[++t] && t < this.cols; ) ;
                return t >= this.cols ? this.cols - 1 : t < 0 ? 0 : t;
            }, h.prototype.eraseAttr = function() {
                return this.defAttr & -512 | 511 & this.curAttr;
            }, h.prototype.eraseRight = function(t, s) {
                for (var e = this.lines[this.ybase + s], i = [ this.eraseAttr(), " " ]; t < this.cols; t++) e[t] = i;
                this.updateRange(s);
            }, h.prototype.eraseLeft = function(t, s) {
                var e = this.lines[this.ybase + s], i = [ this.eraseAttr(), " " ];
                for (t++; t--; ) e[t] = i;
                this.updateRange(s);
            }, h.prototype.eraseLine = function(t) {
                this.eraseRight(0, t);
            }, h.prototype.blankLine = function(t) {
                for (var s = t ? this.eraseAttr() : this.defAttr, e = [ s, " " ], i = [], r = 0; r < this.cols; r++) i[r] = e;
                return i;
            }, h.prototype.ch = function(t) {
                return t ? [ this.eraseAttr(), " " ] : [ this.defAttr, " " ];
            }, h.prototype.is = function(t) {
                var s = this.termName;
                return 0 === (s + "").indexOf(t);
            }, h.prototype.handler = function(t) {
                this.emit("data", t);
            }, h.prototype.handleTitle = function(t) {
                this.emit("title", t);
            }, h.prototype.index = function() {
                this.y++, this.y > this.scrollBottom && (this.y--, this.scroll()), this.state = v;
            }, h.prototype.reverseIndex = function() {
                var t;
                this.y--, this.y < this.scrollTop && (this.y++, this.lines.splice(this.y + this.ybase, 0, this.blankLine(!0)), 
                t = this.rows - 1 - this.scrollBottom, this.lines.splice(this.rows - 1 + this.ybase - t + 1, 1), 
                this.updateRange(this.scrollTop), this.updateRange(this.scrollBottom)), this.state = v;
            }, h.prototype.reset = function() {
                this.options.rows = this.rows, this.options.cols = this.cols, h.call(this, this.options), 
                this.refresh(0, this.rows - 1);
            }, h.prototype.tabSet = function() {
                this.tabs[this.x] = !0, this.state = v;
            }, h.prototype.cursorUp = function(t) {
                var s = t[0];
                s < 1 && (s = 1), this.y -= s, this.y < 0 && (this.y = 0);
            }, h.prototype.cursorDown = function(t) {
                var s = t[0];
                s < 1 && (s = 1), this.y += s, this.y >= this.rows && (this.y = this.rows - 1);
            }, h.prototype.cursorForward = function(t) {
                var s = t[0];
                s < 1 && (s = 1), this.x += s, this.x >= this.cols && (this.x = this.cols - 1);
            }, h.prototype.cursorBackward = function(t) {
                var s = t[0];
                s < 1 && (s = 1), this.x -= s, this.x < 0 && (this.x = 0);
            }, h.prototype.cursorPos = function(t) {
                var s, e;
                s = t[0] - 1, e = t.length >= 2 ? t[1] - 1 : 0, s < 0 ? s = 0 : s >= this.rows && (s = this.rows - 1), 
                e < 0 ? e = 0 : e >= this.cols && (e = this.cols - 1), this.x = e, this.y = s;
            }, h.prototype.eraseInDisplay = function(t) {
                var s;
                switch (t[0]) {
                  case 0:
                    for (this.eraseRight(this.x, this.y), s = this.y + 1; s < this.rows; s++) this.eraseLine(s);
                    break;

                  case 1:
                    for (this.eraseLeft(this.x, this.y), s = this.y; s--; ) this.eraseLine(s);
                    break;

                  case 2:
                    for (s = this.rows; s--; ) this.eraseLine(s);
                    break;

                  case 3:                }
            }, h.prototype.eraseInLine = function(t) {
                switch (t[0]) {
                  case 0:
                    this.eraseRight(this.x, this.y);
                    break;

                  case 1:
                    this.eraseLeft(this.x, this.y);
                    break;

                  case 2:
                    this.eraseLine(this.y);
                }
            }, h.prototype.charAttributes = function(t) {
                if (1 === t.length && 0 === t[0]) return void (this.curAttr = this.defAttr);
                for (var s, e = t.length, i = 0, r = this.curAttr >> 18, o = this.curAttr >> 9 & 511, h = 511 & this.curAttr; i < e; i++) s = t[i], 
                s >= 30 && s <= 37 ? o = s - 30 : s >= 40 && s <= 47 ? h = s - 40 : s >= 90 && s <= 97 ? (s += 8, 
                o = s - 90) : s >= 100 && s <= 107 ? (s += 8, h = s - 100) : 0 === s ? (r = this.defAttr >> 18, 
                o = this.defAttr >> 9 & 511, h = 511 & this.defAttr) : 1 === s ? r |= 1 : 4 === s ? r |= 2 : 5 === s ? r |= 4 : 7 === s ? r |= 8 : 8 === s ? r |= 16 : 22 === s ? r &= -2 : 24 === s ? r &= -3 : 25 === s ? r &= -5 : 27 === s ? r &= -9 : 28 === s ? r &= -17 : 39 === s ? o = this.defAttr >> 9 & 511 : 49 === s ? h = 511 & this.defAttr : 38 === s ? 2 === t[i + 1] ? (i += 2, 
                o = d(255 & t[i], 255 & t[i + 1], 255 & t[i + 2]), o === -1 && (o = 511), i += 2) : 5 === t[i + 1] && (i += 2, 
                s = 255 & t[i], o = s) : 48 === s ? 2 === t[i + 1] ? (i += 2, h = d(255 & t[i], 255 & t[i + 1], 255 & t[i + 2]), 
                h === -1 && (h = 511), i += 2) : 5 === t[i + 1] && (i += 2, s = 255 & t[i], h = s) : 100 === s ? (o = this.defAttr >> 9 & 511, 
                h = 511 & this.defAttr) : this.error("Unknown SGR attribute: %d.", s);
                this.curAttr = r << 18 | o << 9 | h;
            }, h.prototype.deviceStatus = function(t) {
                if (this.prefix) {
                    if ("?" === this.prefix) switch (t[0]) {
                      case 6:
                        this.send("[?" + (this.y + 1) + ";" + (this.x + 1) + "R");
                        break;

                      case 15:
                        break;

                      case 25:
                        break;

                      case 26:
                        break;

                      case 53:                    }
                } else switch (t[0]) {
                  case 5:
                    this.send("[0n");
                    break;

                  case 6:
                    this.send("[" + (this.y + 1) + ";" + (this.x + 1) + "R");
                }
            }, h.prototype.insertChars = function(t) {
                var s, e, i, r;
                for (s = t[0], s < 1 && (s = 1), e = this.y + this.ybase, i = this.x, r = [ this.eraseAttr(), " " ]; s-- && i < this.cols; ) this.lines[e].splice(i++, 0, r), 
                this.lines[e].pop();
            }, h.prototype.cursorNextLine = function(t) {
                var s = t[0];
                s < 1 && (s = 1), this.y += s, this.y >= this.rows && (this.y = this.rows - 1), 
                this.x = 0;
            }, h.prototype.cursorPrecedingLine = function(t) {
                var s = t[0];
                s < 1 && (s = 1), this.y -= s, this.y < 0 && (this.y = 0), this.x = 0;
            }, h.prototype.cursorCharAbsolute = function(t) {
                var s = t[0];
                s < 1 && (s = 1), this.x = s - 1;
            }, h.prototype.insertLines = function(t) {
                var s, e, i;
                for (s = t[0], s < 1 && (s = 1), e = this.y + this.ybase, i = this.rows - 1 - this.scrollBottom, 
                i = this.rows - 1 + this.ybase - i + 1; s--; ) this.lines.splice(e, 0, this.blankLine(!0)), 
                this.lines.splice(i, 1);
                this.updateRange(this.y), this.updateRange(this.scrollBottom);
            }, h.prototype.deleteLines = function(t) {
                var s, e, i;
                for (s = t[0], s < 1 && (s = 1), e = this.y + this.ybase, i = this.rows - 1 - this.scrollBottom, 
                i = this.rows - 1 + this.ybase - i; s--; ) this.lines.splice(i + 1, 0, this.blankLine(!0)), 
                this.lines.splice(e, 1);
                this.updateRange(this.y), this.updateRange(this.scrollBottom);
            }, h.prototype.deleteChars = function(t) {
                var s, e, i;
                for (s = t[0], s < 1 && (s = 1), e = this.y + this.ybase, i = [ this.eraseAttr(), " " ]; s--; ) this.lines[e].splice(this.x, 1), 
                this.lines[e].push(i);
            }, h.prototype.eraseChars = function(t) {
                var s, e, i, r;
                for (s = t[0], s < 1 && (s = 1), e = this.y + this.ybase, i = this.x, r = [ this.eraseAttr(), " " ]; s-- && i < this.cols; ) this.lines[e][i++] = r;
            }, h.prototype.charPosAbsolute = function(t) {
                var s = t[0];
                s < 1 && (s = 1), this.x = s - 1, this.x >= this.cols && (this.x = this.cols - 1);
            }, h.prototype.HPositionRelative = function(t) {
                var s = t[0];
                s < 1 && (s = 1), this.x += s, this.x >= this.cols && (this.x = this.cols - 1);
            }, h.prototype.sendDeviceAttributes = function(t) {
                t[0] > 0 || (this.prefix ? ">" === this.prefix && (this.is("xterm") ? this.send("[>0;276;0c") : this.is("rxvt-unicode") ? this.send("[>85;95;0c") : this.is("linux") ? this.send(t[0] + "c") : this.is("screen") && this.send("[>83;40003;0c")) : this.is("xterm") || this.is("rxvt-unicode") || this.is("screen") ? this.send("[?1;2c") : this.is("linux") && this.send("[?6c"));
            }, h.prototype.linePosAbsolute = function(t) {
                var s = t[0];
                s < 1 && (s = 1), this.y = s - 1, this.y >= this.rows && (this.y = this.rows - 1);
            }, h.prototype.VPositionRelative = function(t) {
                var s = t[0];
                s < 1 && (s = 1), this.y += s, this.y >= this.rows && (this.y = this.rows - 1);
            }, h.prototype.HVPosition = function(t) {
                t[0] < 1 && (t[0] = 1), t[1] < 1 && (t[1] = 1), this.y = t[0] - 1, this.y >= this.rows && (this.y = this.rows - 1), 
                this.x = t[1] - 1, this.x >= this.cols && (this.x = this.cols - 1);
            }, h.prototype.setMode = function(t) {
                if ("object" != typeof t) if (this.prefix) {
                    if ("?" === this.prefix) switch (t) {
                      case 1:
                        this.applicationCursor = !0;
                        break;

                      case 2:
                        this.setgCharset(0, h.charsets.US), this.setgCharset(1, h.charsets.US), this.setgCharset(2, h.charsets.US), 
                        this.setgCharset(3, h.charsets.US);
                        break;

                      case 3:
                        this.savedCols = this.cols, this.resize(132, this.rows);
                        break;

                      case 6:
                        this.originMode = !0;
                        break;

                      case 7:
                        this.wraparoundMode = !0;
                        break;

                      case 12:
                        break;

                      case 66:
                        this.log("Serial port requested application keypad."), this.applicationKeypad = !0;
                        break;

                      case 9:
                      case 1e3:
                      case 1002:
                      case 1003:
                        this.x10Mouse = 9 === t, this.vt200Mouse = 1e3 === t, this.normalMouse = t > 1e3, 
                        this.mouseEvents = !0, this.element.style.cursor = "default", this.log("Binding to mouse events.");
                        break;

                      case 1004:
                        this.sendFocus = !0;
                        break;

                      case 1005:
                        this.utfMouse = !0;
                        break;

                      case 1006:
                        this.sgrMouse = !0;
                        break;

                      case 1015:
                        this.urxvtMouse = !0;
                        break;

                      case 25:
                        this.cursorHidden = !1;
                        break;

                      case 1049:
                      case 47:
                      case 1047:
                        if (!this.normal) {
                            var s = {
                                lines: this.lines,
                                ybase: this.ybase,
                                ydisp: this.ydisp,
                                x: this.x,
                                y: this.y,
                                scrollTop: this.scrollTop,
                                scrollBottom: this.scrollBottom,
                                tabs: this.tabs
                            };
                            this.reset(), this.normal = s, this.showCursor();
                        }
                    }
                } else switch (t) {
                  case 4:
                    this.insertMode = !0;
                    break;

                  case 20:                } else for (var e = t.length, i = 0; i < e; i++) this.setMode(t[i]);
            }, h.prototype.resetMode = function(t) {
                if ("object" != typeof t) if (this.prefix) {
                    if ("?" === this.prefix) switch (t) {
                      case 1:
                        this.applicationCursor = !1;
                        break;

                      case 3:
                        132 === this.cols && this.savedCols && this.resize(this.savedCols, this.rows), delete this.savedCols;
                        break;

                      case 6:
                        this.originMode = !1;
                        break;

                      case 7:
                        this.wraparoundMode = !1;
                        break;

                      case 12:
                        break;

                      case 66:
                        this.log("Switching back to normal keypad."), this.applicationKeypad = !1;
                        break;

                      case 9:
                      case 1e3:
                      case 1002:
                      case 1003:
                        this.x10Mouse = !1, this.vt200Mouse = !1, this.normalMouse = !1, this.mouseEvents = !1, 
                        this.element.style.cursor = "";
                        break;

                      case 1004:
                        this.sendFocus = !1;
                        break;

                      case 1005:
                        this.utfMouse = !1;
                        break;

                      case 1006:
                        this.sgrMouse = !1;
                        break;

                      case 1015:
                        this.urxvtMouse = !1;
                        break;

                      case 25:
                        this.cursorHidden = !0;
                        break;

                      case 1049:
                      case 47:
                      case 1047:
                        this.normal && (this.lines = this.normal.lines, this.ybase = this.normal.ybase, 
                        this.ydisp = this.normal.ydisp, this.x = this.normal.x, this.y = this.normal.y, 
                        this.scrollTop = this.normal.scrollTop, this.scrollBottom = this.normal.scrollBottom, 
                        this.tabs = this.normal.tabs, this.normal = null, this.refresh(0, this.rows - 1), 
                        this.showCursor());
                    }
                } else switch (t) {
                  case 4:
                    this.insertMode = !1;
                    break;

                  case 20:                } else for (var s = t.length, e = 0; e < s; e++) this.resetMode(t[e]);
            }, h.prototype.setScrollRegion = function(t) {
                this.prefix || (this.scrollTop = (t[0] || 1) - 1, this.scrollBottom = (t[1] || this.rows) - 1, 
                this.x = 0, this.y = 0);
            }, h.prototype.saveCursor = function(t) {
                this.savedX = this.x, this.savedY = this.y;
            }, h.prototype.restoreCursor = function(t) {
                this.x = this.savedX || 0, this.y = this.savedY || 0;
            }, h.prototype.cursorForwardTab = function(t) {
                for (var s = t[0] || 1; s--; ) this.x = this.nextStop();
            }, h.prototype.scrollUp = function(t) {
                for (var s = t[0] || 1; s--; ) this.lines.splice(this.ybase + this.scrollTop, 1), 
                this.lines.splice(this.ybase + this.scrollBottom, 0, this.blankLine());
                this.updateRange(this.scrollTop), this.updateRange(this.scrollBottom);
            }, h.prototype.scrollDown = function(t) {
                for (var s = t[0] || 1; s--; ) this.lines.splice(this.ybase + this.scrollBottom, 1), 
                this.lines.splice(this.ybase + this.scrollTop, 0, this.blankLine());
                this.updateRange(this.scrollTop), this.updateRange(this.scrollBottom);
            }, h.prototype.initMouseTracking = function(t) {}, h.prototype.resetTitleModes = function(t) {}, 
            h.prototype.cursorBackwardTab = function(t) {
                for (var s = t[0] || 1; s--; ) this.x = this.prevStop();
            }, h.prototype.repeatPrecedingCharacter = function(t) {
                for (var s = t[0] || 1, e = this.lines[this.ybase + this.y], i = e[this.x - 1] || [ this.defAttr, " " ]; s--; ) e[this.x++] = i;
            }, h.prototype.tabClear = function(t) {
                var s = t[0];
                s <= 0 ? delete this.tabs[this.x] : 3 === s && (this.tabs = {});
            }, h.prototype.mediaCopy = function(t) {}, h.prototype.setResources = function(t) {}, 
            h.prototype.disableModifiers = function(t) {}, h.prototype.setPointerMode = function(t) {}, 
            h.prototype.softReset = function(t) {
                this.cursorHidden = !1, this.insertMode = !1, this.originMode = !1, this.wraparoundMode = !1, 
                this.applicationKeypad = !1, this.applicationCursor = !1, this.scrollTop = 0, this.scrollBottom = this.rows - 1, 
                this.curAttr = this.defAttr, this.x = this.y = 0, this.charset = null, this.glevel = 0, 
                this.charsets = [ null ];
            }, h.prototype.requestAnsiMode = function(t) {}, h.prototype.requestPrivateMode = function(t) {}, 
            h.prototype.setConformanceLevel = function(t) {}, h.prototype.loadLEDs = function(t) {}, 
            h.prototype.setCursorStyle = function(t) {}, h.prototype.setCharProtectionAttr = function(t) {}, 
            h.prototype.restorePrivateValues = function(t) {}, h.prototype.setAttrInRectangle = function(t) {
                for (var s, e, i = t[0], r = t[1], o = t[2], h = t[3], a = t[4]; i < o + 1; i++) for (s = this.lines[this.ybase + i], 
                e = r; e < h; e++) s[e] = [ a, s[e][1] ];
                this.updateRange(t[0]), this.updateRange(t[2]);
            }, h.prototype.savePrivateValues = function(t) {}, h.prototype.manipulateWindow = function(t) {}, 
            h.prototype.reverseAttrInRectangle = function(t) {}, h.prototype.setTitleModeFeature = function(t) {}, 
            h.prototype.setWarningBellVolume = function(t) {}, h.prototype.setMarginBellVolume = function(t) {}, 
            h.prototype.copyRectangle = function(t) {}, h.prototype.enableFilterRectangle = function(t) {}, 
            h.prototype.requestParameters = function(t) {}, h.prototype.selectChangeExtent = function(t) {}, 
            h.prototype.fillRectangle = function(t) {
                for (var s, e, i = t[0], r = t[1], o = t[2], h = t[3], a = t[4]; r < h + 1; r++) for (s = this.lines[this.ybase + r], 
                e = o; e < a; e++) s[e] = [ s[e][0], _.fromCharCode(i) ];
                this.updateRange(t[1]), this.updateRange(t[3]);
            }, h.prototype.enableLocatorReporting = function(t) {
                t[0] > 0;
            }, h.prototype.eraseRectangle = function(t) {
                var s, e, i, r = t[0], o = t[1], h = t[2], a = t[3];
                for (i = [ this.eraseAttr(), " " ]; r < h + 1; r++) for (s = this.lines[this.ybase + r], 
                e = o; e < a; e++) s[e] = i;
                this.updateRange(t[0]), this.updateRange(t[2]);
            }, h.prototype.setLocatorEvents = function(t) {}, h.prototype.selectiveEraseRectangle = function(t) {}, 
            h.prototype.requestLocatorPosition = function(t) {}, h.prototype.insertColumns = function() {
                for (var t, s = params[0], e = this.ybase + this.rows, i = [ this.eraseAttr(), " " ]; s--; ) for (t = this.ybase; t < e; t++) this.lines[t].splice(this.x + 1, 0, i), 
                this.lines[t].pop();
                this.maxRange();
            }, h.prototype.deleteColumns = function() {
                for (var t, s = params[0], e = this.ybase + this.rows, i = [ this.eraseAttr(), " " ]; s--; ) for (t = this.ybase; t < e; t++) this.lines[t].splice(this.x, 1), 
                this.lines[t].push(i);
                this.maxRange();
            }, h.prototype.enterPrefix = function() {
                this.prefixMode = !0;
            }, h.prototype.leavePrefix = function() {
                this.prefixMode = !1;
            }, h.prototype.enterSelect = function() {
                this._real = {
                    x: this.x,
                    y: this.y,
                    ydisp: this.ydisp,
                    ybase: this.ybase,
                    cursorHidden: this.cursorHidden,
                    lines: this.copyBuffer(this.lines),
                    write: this.write
                }, this.write = function() {}, this.selectMode = !0, this.visualMode = !1, this.cursorHidden = !1, 
                this.refresh(this.y, this.y);
            }, h.prototype.leaveSelect = function() {
                this.x = this._real.x, this.y = this._real.y, this.ydisp = this._real.ydisp, this.ybase = this._real.ybase, 
                this.cursorHidden = this._real.cursorHidden, this.lines = this._real.lines, this.write = this._real.write, 
                delete this._real, this.selectMode = !1, this.visualMode = !1, this.refresh(0, this.rows - 1);
            }, h.prototype.enterVisual = function() {
                this._real.preVisual = this.copyBuffer(this.lines), this.selectText(this.x, this.x, this.ydisp + this.y, this.ydisp + this.y), 
                this.visualMode = !0;
            }, h.prototype.leaveVisual = function() {
                this.lines = this._real.preVisual, delete this._real.preVisual, delete this._selected, 
                this.visualMode = !1, this.refresh(0, this.rows - 1);
            }, h.prototype.enterSearch = function(t) {
                this.entry = "", this.searchMode = !0, this.searchDown = t, this._real.preSearch = this.copyBuffer(this.lines), 
                this._real.preSearchX = this.x, this._real.preSearchY = this.y;
                for (var s = this.ydisp + this.rows - 1, e = 0; e < this.entryPrefix.length; e++) this.lines[s][e] = [ this.defAttr & -512 | 4, this.entryPrefix[e] ];
                this.y = this.rows - 1, this.x = this.entryPrefix.length, this.refresh(this.rows - 1, this.rows - 1);
            }, h.prototype.leaveSearch = function() {
                this.searchMode = !1, this._real.preSearch && (this.lines = this._real.preSearch, 
                this.x = this._real.preSearchX, this.y = this._real.preSearchY, delete this._real.preSearch, 
                delete this._real.preSearchX, delete this._real.preSearchY), this.refresh(this.rows - 1, this.rows - 1);
            }, h.prototype.copyBuffer = function(t) {
                for (var t = t || this.lines, s = [], e = 0; e < t.length; e++) {
                    s[e] = [];
                    for (var i = 0; i < t[e].length; i++) s[e][i] = [ t[e][i][0], t[e][i][1] ];
                }
                return s;
            }, h.prototype.getCopyTextarea = function(t) {
                var s = this._copyTextarea, e = this.document;
                return s || (s = e.createElement("textarea"), s.style.position = "absolute", s.style.left = "-32000px", 
                s.style.top = "-32000px", s.style.width = "0px", s.style.height = "0px", s.style.opacity = "0", 
                s.style.backgroundColor = "transparent", s.style.borderStyle = "none", s.style.outlineStyle = "none", 
                e.getElementsByTagName("body")[0].appendChild(s), this._copyTextarea = s), s;
            }, h.prototype.copyText = function(t) {
                var s = this, e = this.getCopyTextarea();
                this.emit("copy", t), e.focus(), e.textContent = t, e.value = t, e.setSelectionRange(0, t.length), 
                P(function() {
                    s.element.focus(), s.focus();
                }, 1);
            }, h.prototype.selectText = function(t, s, e, i) {
                var r, o, h, a, n, c, l, u, p;
                if (this._selected) {
                    for (r = this._selected.x1, o = this._selected.x2, h = this._selected.y1, a = this._selected.y2, 
                    a < h && (n = o, o = r, r = n, n = a, a = h, h = n), o < r && h === a && (n = o, 
                    o = r, r = n), l = h; l <= a; l++) for (c = 0, u = this.cols - 1, l === h && (c = r), 
                    l === a && (u = o); c <= u; c++) null != this.lines[l][c].old && (p = this.lines[l][c].old, 
                    delete this.lines[l][c].old, this.lines[l][c] = [ p, this.lines[l][c][1] ]);
                    e = this._selected.y1, t = this._selected.x1;
                }
                for (e = Math.max(e, 0), e = Math.min(e, this.ydisp + this.rows - 1), i = Math.max(i, 0), 
                i = Math.min(i, this.ydisp + this.rows - 1), this._selected = {
                    x1: t,
                    x2: s,
                    y1: e,
                    y2: i
                }, i < e && (n = s, s = t, t = n, n = i, i = e, e = n), s < t && e === i && (n = s, 
                s = t, t = n), l = e; l <= i; l++) for (c = 0, u = this.cols - 1, l === e && (c = t), 
                l === i && (u = s); c <= u; c++) p = this.lines[l][c][0], this.lines[l][c] = [ p & -512 | 261636, this.lines[l][c][1] ], 
                this.lines[l][c].old = p;
                e -= this.ydisp, i -= this.ydisp, e = Math.max(e, 0), e = Math.min(e, this.rows - 1), 
                i = Math.max(i, 0), i = Math.min(i, this.rows - 1), this.refresh(0, this.rows - 1);
            }, h.prototype.grabText = function(t, s, e, i) {
                var r, o, h, a, n, c = "", l = "";
                for (i < e && (n = s, s = t, t = n, n = i, i = e, e = n), s < t && e === i && (n = s, 
                s = t, t = n), h = e; h <= i; h++) {
                    for (o = 0, a = this.cols - 1, h === e && (o = t), h === i && (a = s); o <= a; o++) r = this.lines[h][o][1], 
                    " " !== r ? (l && (c += l, l = ""), c += r, f(r) && o++) : l += r;
                    l = "", c += "\n";
                }
                for (o = s, h = i; o < this.cols; o++) if (" " !== this.lines[h][o][1]) {
                    c = c.slice(0, -1);
                    break;
                }
                return c;
            }, h.prototype.keyPrefix = function(t, s) {
                "k" === s || "&" === s ? this.destroy() : "p" === s || "]" === s ? this.emit("request paste") : "c" === s ? this.emit("request create") : s >= "0" && s <= "9" ? (s = +s - 1, 
                ~s || (s = 9), this.emit("request term", s)) : "n" === s ? this.emit("request term next") : "P" === s ? this.emit("request term previous") : ":" === s ? this.emit("request command mode") : "[" === s && this.enterSelect();
            }, h.prototype.keySelect = function(t, s) {
                if (this.showCursor(), this.searchMode || "n" === s || "N" === s) return this.keySearch(t, s);
                if ("" === s) {
                    var e = this.ydisp + this.y;
                    return this.ydisp === this.ybase ? (this.y = Math.min(this.y + (this.rows - 1) / 2 | 0, this.rows - 1), 
                    this.refresh(0, this.rows - 1)) : this.scrollDisp((this.rows - 1) / 2 | 0), void (this.visualMode && this.selectText(this.x, this.x, e, this.ydisp + this.y));
                }
                if ("" === s) {
                    var e = this.ydisp + this.y;
                    return 0 === this.ydisp ? (this.y = Math.max(this.y - (this.rows - 1) / 2 | 0, 0), 
                    this.refresh(0, this.rows - 1)) : this.scrollDisp(-(this.rows - 1) / 2 | 0), void (this.visualMode && this.selectText(this.x, this.x, e, this.ydisp + this.y));
                }
                if ("" === s) {
                    var e = this.ydisp + this.y;
                    return this.scrollDisp(this.rows - 1), void (this.visualMode && this.selectText(this.x, this.x, e, this.ydisp + this.y));
                }
                if ("" === s) {
                    var e = this.ydisp + this.y;
                    return this.scrollDisp(-(this.rows - 1)), void (this.visualMode && this.selectText(this.x, this.x, e, this.ydisp + this.y));
                }
                if ("k" === s || "[A" === s) {
                    var e = this.ydisp + this.y;
                    return this.y--, this.y < 0 && (this.y = 0, this.scrollDisp(-1)), void (this.visualMode ? this.selectText(this.x, this.x, e, this.ydisp + this.y) : this.refresh(this.y, this.y + 1));
                }
                if ("j" === s || "[B" === s) {
                    var e = this.ydisp + this.y;
                    return this.y++, this.y >= this.rows && (this.y = this.rows - 1, this.scrollDisp(1)), 
                    void (this.visualMode ? this.selectText(this.x, this.x, e, this.ydisp + this.y) : this.refresh(this.y - 1, this.y));
                }
                if ("h" === s || "[D" === s) {
                    var i = this.x;
                    return this.x--, this.x < 0 && (this.x = 0), void (this.visualMode ? this.selectText(i, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                }
                if ("l" === s || "[C" === s) {
                    var i = this.x;
                    return this.x++, this.x >= this.cols && (this.x = this.cols - 1), void (this.visualMode ? this.selectText(i, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                }
                if ("v" === s || " " === s) return void (this.visualMode ? this.leaveVisual() : this.enterVisual());
                if ("y" !== s) {
                    if ("q" === s || "" === s) return void (this.visualMode ? this.leaveVisual() : this.leaveSelect());
                    if ("w" === s || "W" === s) {
                        for (var r = this.x, o = this.y, h = this.ydisp, i = this.x, e = this.y, a = this.ydisp, n = !1; ;) {
                            for (var c = this.lines[a + e]; i < this.cols; ) {
                                if (c[i][1] <= " ") n = !0; else if (n) break;
                                i++;
                            }
                            if (i >= this.cols && (i = this.cols - 1), !(i === this.cols - 1 && c[i][1] <= " ")) break;
                            if (i = 0, ++e >= this.rows && (e--, ++a > this.ybase)) {
                                a = this.ybase, i = this.x;
                                break;
                            }
                        }
                        return this.x = i, this.y = e, this.scrollDisp(-this.ydisp + a), void (this.visualMode && this.selectText(r, this.x, o + h, this.ydisp + this.y));
                    }
                    if ("b" === s || "B" === s) {
                        for (var r = this.x, o = this.y, h = this.ydisp, i = this.x, e = this.y, a = this.ydisp; ;) {
                            for (var c = this.lines[a + e], n = i > 0 && c[i][1] > " " && c[i - 1][1] > " "; i >= 0; ) {
                                if (c[i][1] <= " ") {
                                    if (n && i + 1 < this.cols && c[i + 1][1] > " ") {
                                        i++;
                                        break;
                                    }
                                    n = !0;
                                }
                                i--;
                            }
                            if (i < 0 && (i = 0), 0 !== i || !(c[i][1] <= " ") && n) break;
                            if (i = this.cols - 1, --e < 0 && (e++, --a < 0)) {
                                a++, i = 0;
                                break;
                            }
                        }
                        return this.x = i, this.y = e, this.scrollDisp(-this.ydisp + a), void (this.visualMode && this.selectText(r, this.x, o + h, this.ydisp + this.y));
                    }
                    if ("e" === s || "E" === s) {
                        var i = this.x + 1, e = this.y, a = this.ydisp;
                        for (i >= this.cols && i--; ;) {
                            for (var c = this.lines[a + e]; i < this.cols && c[i][1] <= " "; ) i++;
                            for (;i < this.cols; ) {
                                if (c[i][1] <= " " && i - 1 >= 0 && c[i - 1][1] > " ") {
                                    i--;
                                    break;
                                }
                                i++;
                            }
                            if (i >= this.cols && (i = this.cols - 1), !(i === this.cols - 1 && c[i][1] <= " ")) break;
                            if (i = 0, ++e >= this.rows && (e--, ++a > this.ybase)) {
                                a = this.ybase;
                                break;
                            }
                        }
                        return this.x = i, this.y = e, this.scrollDisp(-this.ydisp + a), void (this.visualMode && this.selectText(r, this.x, o + h, this.ydisp + this.y));
                    }
                    if ("^" === s || "0" === s) {
                        var r = this.x;
                        if ("0" === s) this.x = 0; else if ("^" === s) {
                            for (var c = this.lines[this.ydisp + this.y], i = 0; i < this.cols && !(c[i][1] > " "); ) i++;
                            i >= this.cols && (i = this.cols - 1), this.x = i;
                        }
                        return void (this.visualMode ? this.selectText(r, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                    }
                    if ("$" === s) {
                        for (var r = this.x, c = this.lines[this.ydisp + this.y], i = this.cols - 1; i >= 0; ) {
                            if (c[i][1] > " ") {
                                this.visualMode && i < this.cols - 1 && i++;
                                break;
                            }
                            i--;
                        }
                        return i < 0 && (i = 0), this.x = i, void (this.visualMode ? this.selectText(r, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                    }
                    if ("g" === s || "G" === s) {
                        var r = this.x, o = this.y, h = this.ydisp;
                        return "g" === s ? (this.x = 0, this.y = 0, this.scrollDisp(-this.ydisp)) : "G" === s && (this.x = 0, 
                        this.y = this.rows - 1, this.scrollDisp(this.ybase)), void (this.visualMode && this.selectText(r, this.x, o + h, this.ydisp + this.y));
                    }
                    if ("H" === s || "M" === s || "L" === s) {
                        var r = this.x, o = this.y;
                        return "H" === s ? (this.x = 0, this.y = 0) : "M" === s ? (this.x = 0, this.y = this.rows / 2 | 0) : "L" === s && (this.x = 0, 
                        this.y = this.rows - 1), void (this.visualMode ? this.selectText(r, this.x, this.ydisp + o, this.ydisp + this.y) : (this.refresh(o, o), 
                        this.refresh(this.y, this.y)));
                    }
                    if ("{" === s || "}" === s) {
                        var c, l, r = this.x, o = this.y, h = this.ydisp, u = !1, p = !1, f = -1, e = this.y + ("{" === s ? -1 : 1), a = this.ydisp;
                        for ("{" === s ? e < 0 && (e++, a > 0 && a--) : "}" === s && e >= this.rows && (e--, 
                        a < this.ybase && a++); ;) {
                            for (c = this.lines[a + e], l = 0; l < this.cols; l++) {
                                if (c[l][1] > " ") {
                                    f === -1 && (f = 0), u = !0;
                                    break;
                                }
                                if (l === this.cols - 1) {
                                    f === -1 ? f = 1 : 0 === f ? p = !0 : 1 === f && u && (p = !0);
                                    break;
                                }
                            }
                            if (p) break;
                            if ("{" === s) {
                                if (e--, e < 0) {
                                    if (e++, !(a > 0)) break;
                                    a--;
                                }
                            } else if ("}" === s && (e++, e >= this.rows)) {
                                if (e--, !(a < this.ybase)) break;
                                a++;
                            }
                        }
                        return p || ("{" === s ? (e = 0, a = 0) : "}" === s && (e = this.rows - 1, a = this.ybase)), 
                        this.x = 0, this.y = e, this.scrollDisp(-this.ydisp + a), void (this.visualMode && this.selectText(r, this.x, o + h, this.ydisp + this.y));
                    }
                    return ("/" === s || "?" === s) && void (this.visualMode || this.enterSearch("/" === s));
                }
                if (this.visualMode) {
                    var d = this.grabText(this._selected.x1, this._selected.x2, this._selected.y1, this._selected.y2);
                    this.copyText(d), this.leaveVisual();
                }
            }, h.prototype.keySearch = function(t, s) {
                if ("" === s) return void this.leaveSearch();
                if ("\r" === s || !this.searchMode && ("n" === s || "N" === s)) {
                    this.leaveSearch();
                    var e = this.entry;
                    if (!e) return void this.refresh(0, this.rows - 1);
                    for (var i, r, o, h = this.x, a = this.y, n = this.ydisp, c = !1, l = !1, u = this.x + 1, p = this.ydisp + this.y, f = "N" === s ? this.searchDown : !this.searchDown; ;) {
                        for (i = this.lines[p]; u < this.cols; ) {
                            for (o = 0; o < e.length && !(u + o >= this.cols) && i[u + o][1] === e[o]; o++) if (i[u + o][1] === e[o] && o === e.length - 1) {
                                c = !0;
                                break;
                            }
                            if (c) break;
                            u += o + 1;
                        }
                        if (c) break;
                        if (u = 0, f) {
                            if (p--, p < 0) {
                                if (l) break;
                                l = !0, p = this.ybase + this.rows - 1;
                            }
                        } else if (p++, p > this.ybase + this.rows - 1) {
                            if (l) break;
                            l = !0, p = 0;
                        }
                    }
                    return c ? (p - this.ybase < 0 ? (r = p, p = 0, r > this.ybase && (p = r - this.ybase, 
                    r = this.ybase)) : (r = this.ybase, p -= this.ybase), this.x = u, this.y = p, this.scrollDisp(-this.ydisp + r), 
                    void (this.visualMode && this.selectText(h, this.x, a + n, this.ydisp + this.y))) : void this.refresh(0, this.rows - 1);
                }
                if ("\b" === s || "" === s) {
                    if (0 === this.entry.length) return;
                    var d = this.ydisp + this.rows - 1;
                    this.entry = this.entry.slice(0, -1);
                    var o = this.entryPrefix.length + this.entry.length;
                    return this.lines[d][o] = [ this.lines[d][o][0], " " ], this.x--, this.refresh(this.rows - 1, this.rows - 1), 
                    void this.refresh(this.y, this.y);
                }
                if (1 === s.length && s >= " " && s <= "~") {
                    var d = this.ydisp + this.rows - 1;
                    this.entry += s;
                    var o = this.entryPrefix.length + this.entry.length - 1;
                    return this.lines[d][o] = [ this.defAttr & -512 | 4, s ], this.x++, this.refresh(this.rows - 1, this.rows - 1), 
                    void this.refresh(this.y, this.y);
                }
                return !1;
            }, h.charsets = {}, h.charsets.SCLD = {
                "`": "◆",
                a: "▒",
                b: "\t",
                c: "\f",
                d: "\r",
                e: "\n",
                f: "°",
                g: "±",
                h: "␤",
                i: "\v",
                j: "┘",
                k: "┐",
                l: "┌",
                m: "└",
                n: "┼",
                o: "⎺",
                p: "⎻",
                q: "─",
                r: "⎼",
                s: "⎽",
                t: "├",
                u: "┤",
                v: "┴",
                w: "┬",
                x: "│",
                y: "≤",
                z: "≥",
                "{": "π",
                "|": "≠",
                "}": "£",
                "~": "·"
            }, h.charsets.UK = null, h.charsets.US = null, h.charsets.Dutch = null, h.charsets.Finnish = null, 
            h.charsets.French = null, h.charsets.FrenchCanadian = null, h.charsets.German = null, 
            h.charsets.Italian = null, h.charsets.NorwegianDanish = null, h.charsets.Spanish = null, 
            h.charsets.Swedish = null, h.charsets.Swiss = null, h.charsets.ISOLatin = null;
            var _ = this.String, P = this.setTimeout, T = this.setInterval;
            d._cache = {}, d.distance = function(t, s, e, i, r, o) {
                return Math.pow(30 * (t - i), 2) + Math.pow(59 * (s - r), 2) + Math.pow(11 * (e - o), 2);
            }, h.EventEmitter = e, h.Stream = o, h.inherits = l, h.on = a, h.off = n, h.cancel = c, 
            i = [], r = function() {
                return h;
            }.apply(s, i), !(void 0 !== r && (t.exports = r));
        }).call(function() {
            return this || ("undefined" != typeof window ? window : e);
        }());
    }).call(s, function() {
        return this;
    }());
} ]);
//# sourceMappingURL=console.min.js.map