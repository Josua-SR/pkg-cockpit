{"version":3,"sources":["webpack:///docker/test-docker.min.js","webpack:///webpack/bootstrap 28ecd0523993068a7bc9?ffb7*","webpack:///../pkg/docker/test-docker.js","webpack:///external \"jQuery\"?0cb8*","webpack:///external \"cockpit\"?478e*","webpack:///../pkg/docker/docker.js?24c7*","webpack:///../~/term.js-cockpit/src/term.js?866e*","webpack:///../pkg/lib/mustache.js?4126","webpack:///../~/mustache/mustache.js?0da5","webpack:///../pkg/docker/util.js?b5d0","webpack:///../pkg/lib/patterns.js?8c25","webpack:///../pkg/docker/bar.js?e17d","webpack:///../~/webpack/buildin/module.js?17a8","webpack:///../pkg/lib/qunit-tests.js","webpack:///../~/qunitjs/qunit/qunit.js","webpack:///../~/process/browser.js","webpack:///../~/qunit-tap/lib/qunit-tap.js","webpack:///../pkg/lib/qunit-config.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","docker","util","QUnit","assert","test","i","checks","expect","length","strictEqual","bytes_from_format","next","res","pos","undefined","j","json_skip","push","deepEqual","quote_cmdline","String","unquote_cmdline","Status","Running","Paused","Restarting","FinishedAt","forEach","check","equal","render_container_status","start","6","jQuery","7","cockpit","8","docker_debug","window","debugging","console","debug","apply","arguments","DockerTerminal","parent","channel","self","this","term","Terminal","cols","rows","screenKeys","useStyle","inlineStyle","useFocus","enable_input","decoder","utf8_decoder","encoder","utf8_encoder","empty","open","typeable","yes","cursorHidden","showCursor","refresh","y","focus","close","destroy","write","$","on","ev","options","problem","off","process","buffer","decode","data","send","encode","DockerLogs","writing","wait","setTimeout","at_bottom","pre","scrollHeight","scrollTop","outerHeight","span","text","join","append","prop","control","batch","latency","size","block","at","subarray","slice","stream","reason","sequence_find","seq","find","f","s","fl","sl","http","superuser","pull","repo","tag","registry","dfd","Deferred","error","method","path","body","params","fromImage","req","request","progress","JSON","parse","substring","status","notify","fail","ex","reject","done","Error","resolve","promise","cancel","inspect_image","image","get","encodeURIComponent","container_id","command","failure","message","view","tty","prepare","connected","exec","attach","prep","extend","always","resp","stringify","Detach","Tty","Id","opts","payload","unix","binary","headers","callback","parts","ret","split","want_typeable","consumed","update_typeable","focused","addClass","Array","isArray","Content-Type","AttachStdin","AttachStdout","AttachStderr","Cmd","connect","string","ch","any","end","depth","inword","instr","endword","spaces","indexOf","words","is_whitespace","quote","word","quote_char","map","skip_whitespace","parse_word","byte_suffixes","formatted","separate","factor","format","pop","toUpperCase","spot","num","parseFloat","isNaN","Math","pow","truncate_id","substr","9","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","EventEmitter","_events","Stream","handler","each","keys","defaults","key","colors","concat","_colors","document","getElementsByTagName","geometry","setRawMode","isTTY","isRaw","columns","ybase","ydisp","x","cursorState","convertEol","state","queue","scrollBottom","applicationKeypad","applicationCursor","originMode","insertMode","wraparoundMode","normal","prefixMode","selectMode","visualMode","searchMode","searchDown","entry","entryPrefix","_real","_selected","_textarea","charset","gcharset","glevel","charsets","decLocator","x10Mouse","vt200Mouse","vt300Mouse","normalMouse","mouseEvents","sendFocus","utfMouse","sgrMouse","urxvtMouse","element","children","refreshStart","refreshEnd","savedX","savedY","savedCols","readable","writable","defAttr","curAttr","currentParam","prefix","postfix","lines","blankLine","tabs","setupStops","el","type","capture","addEventListener","removeEventListener","preventDefault","returnValue","stopPropagation","cancelBubble","inherits","child","constructor","prototype","isBoldBroken","terminal","createElement","className","line","innerHTML","appendChild","w1","scrollWidth","style","fontWeight","w2","removeChild","obj","isWide","matchColor","r1","g1","b1","hash","_cache","r2","g2","b2","diff","ldiff","Infinity","li","vcolors","distance","iter","con","Object","hasOwnProperty","addListener","listener","removeListener","splice","removeAllListeners","once","args","emit","l","listeners","pipe","dest","unbind","src","ondata","onerror","onend","err","escaped","csi","osc","dcs","ignore","UDK","tangoColors","xtermColors","out","r","g","b","hex","toString","color","parseInt","termName","cursorBlink","visualBell","popOnBell","scrollback","blur","initGlobal","_boundDocs","bindPaste","bindKeys","bindCopy","isMobile","fixMobile","insertStyle","defaultView","clipboardData","getData","context","contentEditable","target","srcElement","keyDown","keyPress","parentNode","textarea","getCopyTextarea","grabText","x1","x2","y1","y2","textContent","value","setSelectionRange","position","left","top","width","height","opacity","backgroundColor","borderStyle","outlineStyle","autocapitalize","autocorrect","isAndroid","bg","fg","getElementById","head","insertBefore","firstChild","div","ownerDocument","navigator","userAgent","isMac","isIpad","isIphone","isMSIE","outline","setAttribute","useEvents","startBlink","button","which","useMouse","bindMouse","brokenBold","sendButton","getButton","getCoords","sendEvent","pressed","wheelEvent","sendMove","page","fromCharCode","shift","meta","ctrl","mod","detail","wheelDeltaY","shiftKey","metaKey","ctrlKey","w","h","pageX","pageY","documentElement","offsetLeft","offsetTop","offsetParent","clientWidth","clientHeight","round","up","scrollDisp","destroySoon","destroyed","_blink","clearInterval","attr","flags","row","log","_cursorBlink","_blinker","setInterval","refreshBlink","scroll","updateRange","disp","cs","maxRange","lch","bell","nextStop","setgLevel","reset","index","reverseIndex","setgCharset","US","saveCursor","restoreCursor","tabSet","SCLD","UK","Dutch","Finnish","French","FrenchCanadian","German","Italian","NorwegianDanish","Spanish","Swedish","Swiss","ISOLatin","charCodeAt","title","handleTitle","cursorUp","cursorDown","cursorForward","cursorBackward","cursorPos","eraseInDisplay","eraseInLine","charAttributes","deviceStatus","insertChars","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","insertLines","deleteLines","deleteChars","eraseChars","charPosAbsolute","HPositionRelative","sendDeviceAttributes","linePosAbsolute","VPositionRelative","HVPosition","setMode","resetMode","setScrollRegion","cursorForwardTab","scrollUp","scrollDown","cursorBackwardTab","repeatPrecedingCharacter","tabClear","softReset","pt","clearAll","eraseBelow","lockKeys","dontLockKeys","keyList","part","keyCode","hexKeyValue","valid","name","n","writeln","resume","pause","altKey","enterPrefix","leavePrefix","leaveVisual","keySelect","charCode","keyPrefix","borderColor","resize","prevStop","eraseAttr","eraseRight","eraseLeft","eraseLine","cur","is","param","col","cursor","initMouseTracking","resetTitleModes","mediaCopy","setResources","disableModifiers","setPointerMode","requestAnsiMode","requestPrivateMode","setConformanceLevel","loadLEDs","setCursorStyle","setCharProtectionAttr","restorePrivateValues","setAttrInRectangle","t","savePrivateValues","manipulateWindow","reverseAttrInRectangle","setTitleModeFeature","setWarningBellVolume","setMarginBellVolume","copyRectangle","enableFilterRectangle","requestParameters","selectChangeExtent","fillRectangle","enableLocatorReporting","eraseRectangle","setLocatorEvents","selectiveEraseRectangle","requestLocatorPosition","insertColumns","deleteColumns","enterSelect","copyBuffer","leaveSelect","enterVisual","preVisual","selectText","enterSearch","down","preSearch","preSearchX","preSearchY","bottom","leaveSearch","_copyTextarea","copyText","ox1","ox2","oy1","oy2","tmp","xl","old","max","min","buf","keySearch","ox","oy","oyd","yb","saw_space","saw_full","found","first_is_space","wrapped","`","a","d","e","k","o","q","u","v","z","{","|","}","~","11","translate","template","cache","result","mustache","render","partials","to_html","clearCache","12","__WEBPACK_AMD_DEFINE_FACTORY__","root","factory","testRegExp","re","RegExp_test","isWhitespace","nonSpaceRe","isFunction","object","escapeRegExp","replace","escapeHtml","entityMap","escapeTags","tags","RegExp","parseTemplate","stripSpace","hasTag","nonSpace","tokens","spaceRe","chr","token","openSection","tagRes","scanner","Scanner","sections","eos","scanUntil","len","charAt","scan","tagRe","whiteRe","equalsRe","curlyRe","nestTokens","squashTokens","lastToken","squashedTokens","section","nestedTokens","collector","tail","Context","parentContext",".","Writer","Object_toString","&","<",">","\"","'","/","match","search","lookup","names","renderTokens","originalTemplate","subRender","jlen","escape","version","defaultWriter","15","Slider","sel","limit","val","slider_load","checked","exp","minv","scale","slider","slider_update","updating","trigger","text_load","input","text_update","check_load","check_update","maxv","defineProperty","set","Mustache","bar","_","gettext","resource_debug","cmds","render_container_cmdline","container","Config","Entrypoint","Command","render_container_name","render_container_state","render_container_restart_policy","policy","Name","ngettext","MaximumRetryCount","txt","toLowerCase","multi_line","strings","str","format_cpu_shares","priority","format_cpu_usage","usage","update_memory_bar","toggleClass","format_memory_and_limit","mtext","units","format_bytes","insert_table_sorted","table","insert_table_sorted_generic","row1","row2","localeCompare","cmp","setup_danger_button","parent_id","danger_button","toggle","parents","hasClass","render_container","client","$panel","danger_mode","tr","remove","cputext","memuse","memlimit","membar","memtext","memtextstyle","State","CpuUsage","MemoryUsage","MemoryLimit","text-align","added","img_waiting","btn_delete","hide","siblings","show","docker_container_delete","btn_play","handle_scope_start_container","btn_stop","stop","show_unexpected_error","create","clone","event","location","go","Image","ImageID","css","waiting","tooltip","html","update","MemorySlider","CpuSlider","docker_client","on_success","on_failure","rm","msg","container_info","containers","confirm","error_message","end_phrase","idx_end","start_phrase","idx_start","docker_container","spawn","modal","action_text","deferred","click","16","unique","unique_number","Date","clear_errors","removeClass","field_error","wrapper","selectpicker","appendTo","global_error","alert","prependTo","warn","footer","display_errors","errors","DialogWait","handle","disabled","clear_wait","ctl","removeAttr","display_wait","restore","cancelled","arg","first","before","cancellation","controls","add","not","onoff_refresh","andSelf","filter","onoff","buttons","createTextNode","onoff_change","onoff_value","last","resize_flex","flex","total","update_value","check_overflow","offsetWidth","setup_slider","getAttribute","hasAttribute","offset","hitx","offsetX","clientX","outerWidth","setup_sliders","fn","dialog","action","ready","update_privileged","perm","denied_message","placement","allowed","selector","allowed_key","17","reflow_bar_graph","graph","value_parts","NaN","values","portion","bound","bits","bar_progress","reflow_bar_graph_soon","reflow_timeouts","clearTimeout","setup_bar_graph","progress_bar","reflow","setup_bar_graphs","32","webpackPolyfill","deprecate","paths","131","qunitTap","132","inArray","elem","array","objectValues","vals","hasOwn","undefOnly","objectType","extractStacktrace","stack","include","fileName","sourceURL","sourceFromStacktrace","registerLoggingCallbacks","registerLoggingCallback","loggingCallback","config","callbacks","loggingCallbacks","callbackNames","runLoggingCallbacks","verifyLoggingCallbacks","userCallback","begin","modulesLog","started","now","tests","totalTests","Test","count","blocking","defined","updateRate","current","usedAsync","pauseProcessing","testTimeout","timeout","semaphore","pushFailure","resumeProcessing","runStarted","runtime","passed","autorun","previousModule","failed","moduleStats","bad","all","stats","setHook","hookName","testEnvironment","settings","assertions","currentModule","testName","testId","generateHash","skip","async","expected","Assert","synchronize","seed","priorityCount","unitSampler","unitSamplerGenerator","floor","sample","saveGlobal","pollution","noglobals","checkPollution","newGlobals","deletedGlobals","asyncTest","newTest","only","testContext","errorString","resultErrorString","getTime","sessionStorage","setItem","removeItem","globalStartCalled","reorder","altertitle","collapse","scrolltop","maxDepth","requireExpects","urlConfig","moduleStack","onErrorFnPrev","filePath","linerNr","ignoreGlobalErrors","validTest","isLocal","protocol","executeNow","createModule","parentModule","moduleName","env","beforeEach","afterEach","setCurrentModule","moduleFns","setup","teardown","globalStartAlreadyCalled","autostart","pageLoaded","load","run","runTest","resolvePromise","callbackStarted","notrycatch","after","queueHook","hook","callHook","hooks","processHooks","finish","skipped","source","duration","reverse","getItem","pushResult","resultInfo","details","actual","negative","phase","then","moduleChainNameMatch","testModule","testModuleName","moduleChainIdMatch","regexFilter","fullName","stringFilter","exclude","pattern","regex","fixture","currentTest","asserts","popped","acceptCallCount","currentAssert","ok","dump","notOk","notEqual","propEqual","equiv","notPropEqual","notDeepEqual","notStrictEqual","throws","expectedType","expectedOutput","raises","useStrictEquality","valueOf","compareConstructors","protoA","getProto","protoB","getRegExpFlags","regexp","typeEquiv","innerEquiv","callers","parentsB","getPrototypeOf","__proto__","boolean","number","null","symbol","date","nan","function","caller","loop","aCircular","bCircular","innerEq","outerEq","aVal","bVal","aKey","bKey","eq","aProperties","bProperties","sort","literal","arr","post","separator","base","indent","inner","reName","objType","parser","parserType","inStack","typeOf","parsers","nodeType","item","multiline","HTML","extra","indentChar","setParser","unknown","nodelist","nonEnumerableProperties","node","nodeName","attrs","attributes","nodeValue","functionArgs","functionCode","attribute","jsDump","applyCurrent","getUrlParams","urlParams","decodeURIComponent","escapeText","addEvent","attachEvent","addEvents","elems","force","trim","getUrlConfigHtml","escapedTooltip","selection","urlConfigHtml","label","toolbarChanged","updatedUrl","field","selectedIndex","defaultValue","setUrl","history","replaceState","arrValue","querystring","host","pathname","applyUrlParams","selectedModule","modulesList","toolbarUrlConfigContainer","urlConfigContainer","toolbarLooseFilter","toolbarModuleFilterHtml","moduleFilterHtml","toolbarModuleFilter","toolbar","moduleFilter","lastChild","appendToolbar","appendHeader","header","unfilteredUrl","appendBanner","banner","appendTestResults","storeFixture","appendFilteredTest","appendUserAgent","appendInterface","qunit","appendTestsList","moduleObj","appendTest","rerunTrigger","testBlock","assertList","getNameHtml","href","nameHtml","stripHtml","random","option","init","collapseNext","hidepassed","scrollTo","testStart","running","assertLi","showDiff","testItem","testDone","testTitle","time","good","testCounts","sourceName","notPhantom","major","phantom","readyState","DiffMatchPatch","DIFF_DELETE","DIFF_INSERT","DIFF_EQUAL","DiffMain","text1","text2","optChecklines","deadline","checklines","commonlength","commonprefix","commonsuffix","diffs","diffCommonPrefix","diffCommonSuffix","diffCompute","unshift","diffCleanupMerge","diffCleanupEfficiency","changes","equalities","equalitiesLength","lastequality","pointer","preIns","preDel","postIns","postDel","diffPrettyHtml","op","pointermid","pointermax","pointermin","pointerstart","pointerend","longtext","shorttext","hm","text1A","text2A","text1B","text2B","midCommon","diffsA","diffsB","diffHalfMatch","diffLineMode","diffBisect","diffHalfMatchI","bestCommon","prefixLength","suffixLength","bestLongtextA","bestLongtextB","bestShorttextA","bestShorttextB","dmp","hm1","hm2","ceil","linearray","countInsert","countDelete","textInsert","textDelete","diffLinesToChars","chars1","chars2","lineArray","diffCharsToLines","diffCleanupSemantic","text1Length","text2Length","maxD","vOffset","vLength","v1","v2","delta","front","k1start","k1end","k2start","k2end","k2Offset","k1Offset","k1","k2","diffBisectSplit","text1a","text1b","text2a","text2b","diffsb","lengthInsertions2","lengthDeletions2","lengthInsertions1","lengthDeletions1","deletion","insertion","overlapLength1","overlapLength2","diffCommonOverlap","textLength","best","diffLinesToCharsMunge","chars","lineStart","lineEnd","lineArrayLength","lineHash","diffPointer","output","133","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","Item","noop","nextTick","browser","argv","versions","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","134","ary","removeElement","isPlanRequired","conf","isPassed","isFailed","isAssertOkFailed","escapeLineEndings","ltrim","desc","fieldName","fieldValue","formatter","renderIf","shouldRender","formatTestLine","testLine","rest","qunitObject","printLikeFunction","isEnabled","configName","tap","formatDetails","explain","printPlanLine","toCount","puts","initialCount","unsubscribeEvent","eventName","targetEvents","qu","registeredCallbacks","unsubscribeEvents","eventNames","deprecateOption","optionName","fallback","showModuleNameOnFailure","showTestNameOnFailure","showExpectationOnFailure","showSourceOnFailure","flag","noPlan","VERSION","qunitTapVersion","expectedCount","note","diag","moduleStart","unsubscribe","appendCallback","createCallbackAppenderFor","subject","observer","originalLoggingCallback","135","qunit_started","qunit_onerror","file","tap_regex","tests_included","136"],"mappings":"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","file":"docker/test-docker.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2014 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var docker = __webpack_require__(8);\n\t    var util = __webpack_require__(15);\n\t    var QUnit = __webpack_require__(131);\n\t    var assert = QUnit;\n\t\n\t    QUnit.test(\"bytes_from_format\", function() {\n\t        var checks = [\n\t            [ \"999\", 999 ],\n\t            [ \"1.9 kb\", 1945.6],\n\t            [ \"2.0 KB\", 2048 ],\n\t            [ \"1.0 MB\", 1048576 ],\n\t            [ \"1 GB\", 1073741824 ],\n\t            [ \"1 Unknown\", 1 ],\n\t        ];\n\t\n\t        var i;\n\t\n\t        assert.expect(checks.length);\n\t        for (i = 0; i < checks.length; i++) {\n\t            assert.strictEqual(docker.bytes_from_format(checks[i][0]), checks[i][1],\n\t                               \"bytes_from_format(\" + checks[i][0] + \") = \" + checks[i][1]);\n\t        }\n\t    });\n\t\n\t    QUnit.test(\"json_skip\", function() {\n\t        var checks = [\n\t            [ \"number\", \"0123456789\",\n\t                [ 10, 0 ] ],\n\t            [ \"number-fancy\", \"-0123456789.33E-5\",\n\t                [ 17, 0 ] ],\n\t            [ \"string\", \"\\\"string\\\"\",\n\t                [ 8, 0 ] ],\n\t            [ \"string-escaped\", \"\\\"st\\\\\\\"ring\\\"\",\n\t                [ 10, 0 ] ],\n\t            [ \"string-truncated\", \"\\\"string\",\n\t                [ 0 ] ],\n\t            [ \"boolean\", \"true\",\n\t                [ 4, 0 ] ],\n\t            [ \"null\", \"null\",\n\t                [ 4, 0 ] ],\n\t            [ \"string-number\", \"\\\"string\\\"0123456789\",\n\t                [ 8, 18, 0 ] ],\n\t            [ \"number-string\", \"0123456789\\\"string\\\"\",\n\t                [ 10, 18, 0 ] ],\n\t            [ \"number-number\", \"0123456789 123\",\n\t                [ 10, 14, 0 ] ],\n\t            [ \"string-string-string\", \"\\\"string\\\"\\\"two\\\"\\\"three\\\"\",\n\t                [ 8, 13, 20, 0 ] ],\n\t            [ \"string-string-truncated\", \"\\\"string\\\"\\\"tw\",\n\t                [ 8, 0 ] ],\n\t            [ \"array\", \"[\\\"string\\\",\\\"two\\\",\\\"three\\\"]\",\n\t                [ 24, 0 ] ],\n\t            [ \"array-escaped\", \"[\\\"string\\\",\\\"two\\\",\\\"thr]e\\\"]\",\n\t                [ 24, 0 ] ],\n\t            [ \"array-spaces\", \" [ \\\"string\\\", \\\"two\\\" ,\\\"thr]e\\\" ]\\t\",\n\t                [ 29, 0 ] ],\n\t            [ \"array-truncated\", \"[\\\"string\\\",\\\"two\\\",\\\"thr\",\n\t                [ 0 ] ],\n\t            [ \"object\", \"{\\\"string\\\":\\\"two\\\",\\\"number\\\":222}\",\n\t                [ 29, 0 ] ],\n\t            [ \"object-escaped\", \"{\\\"string\\\":\\\"two\\\",\\\"num]}}ber\\\":222}\",\n\t                [ 32, 0 ] ],\n\t            [ \"object-spaces\", \"{ \\\"string\\\": \\\"two\\\", \\\"number\\\": 222 }\",\n\t                [ 34, 0 ] ],\n\t            [ \"object-object\", \"{\\\"string\\\":\\\"two\\\",\\\"number\\\":222}{\\\"string\\\":\\\"two\\\",\\\"number\\\":222}\",\n\t                [ 29, 58, 0 ] ],\n\t            [ \"object-line-object\", \"{\\\"string\\\":\\\"two\\\",\\\"number\\\":222}\\n{\\\"string\\\":\\\"two\\\",\\\"number\\\":222}\",\n\t                [ 29, 59, 0 ] ],\n\t            [ \"object-truncated\", \"{\\\"stri}ng\\\"\",\n\t                [ 0 ] ],\n\t            [ \"whitespace\", \"  \\r\\n\\t \\v\",\n\t                [ 0 ] ],\n\t        ];\n\t\n\t        assert.expect(checks.length);\n\t        for (var i = 0; i < checks.length; i++) {\n\t            var res = [];\n\t            var pos = undefined;\n\t            var next;\n\t            for (var j = 0; j < 16; j++) {\n\t                next = docker.json_skip(checks[i][1], pos);\n\t                res.push(next);\n\t                if (next === 0)\n\t                    break;\n\t                pos = next;\n\t            }\n\t            assert.deepEqual(res, checks[i][2], \"json_skip(): \" + checks[i][0]);\n\t        }\n\t    });\n\t\n\t    QUnit.test(\"quote_cmdline\", function() {\n\t        var checks = [\n\t            [ [ \"foo\" ],          \"foo\" ],\n\t            [ [ \"foo\", \"bar\" ],   \"foo bar\" ],\n\t            [ [ \"f o o\" ],        \"\\\"f o o\\\"\" ],\n\t            [ [ \"f\\\\o\" ],         \"f\\\\\\\\o\" ],\n\t            [ [ \"f\\\"o\" ],         \"'f\\\"o'\" ],\n\t            [ [ \"f\\\"\\'o\" ],       \"'f\\\"\\\\'o'\" ],\n\t            [ [ \"f \\\"o\" ],        \"\\\"f \\\\\\\"o\\\"\" ]\n\t        ];\n\t\n\t        assert.expect(checks.length);\n\t        for (var i = 0; i < checks.length; i++)\n\t            assert.strictEqual(docker.quote_cmdline(checks[i][0]), checks[i][1],\n\t                               \"quote(\" + String(checks[i][0]) + \") = \" + checks[i][1]);\n\t\n\t    });\n\t\n\t    QUnit.test(\"unquote_cmdline\", function() {\n\t        var checks = [\n\t            [ [ \"foo\" ],            \"  foo  \" ],\n\t            [ [ \"foo\", \"bar\" ],     \"foo    bar  \" ],\n\t            [ [ \"f o o\" ],          \"\\\"f o o\\\"\" ],\n\t            [ [ \"f o o\" ],          \"'f o o'\" ],\n\t            [ [ \"f\\\\o\" ],           \"f\\\\\\\\o\" ],\n\t            [ [ \"f\\\"o\" ],           \"'f\\\"o'\" ],\n\t            [ [ \"f\\\"\\'o\" ],         \"'f\\\"\\\\'o'\" ],\n\t            [ [ \"f \\\"o\" ],          \"\\\"f \\\\\\\"o\\\"\" ],\n\t            [ [ \"f o o\" ],          \"f' 'o\\\" \\\"o\" ],\n\t            [ [ \"f'\" , \"o\\\" \\\"o\" ], \"f\\\\' 'o\\\" \\\"o\" ]\n\t        ];\n\t\n\t        assert.expect(checks.length);\n\t        for (var i = 0; i < checks.length; i++)\n\t            assert.deepEqual(docker.unquote_cmdline(checks[i][1]), checks[i][0],\n\t                             \"unquote(\" + String(checks[i][1]) + \") = \" + checks[i][0]);\n\t\n\t    });\n\t\n\t    QUnit.test(\"render_container_status\", function() {\n\t        var checks = [\n\t            [ { Status: \"blah\", Running: true }, \"blah\" ],\n\t            [ { Running: true, Paused: false }, \"running\" ],\n\t            [ { Running: false, Paused: true }, \"paused\" ],\n\t            [ { Restarting: true }, \"restarting\" ],\n\t            [ { FinishedAt: \"0001-01-01\" }, \"created\" ],\n\t            [ { FinishedAt: \"2016-11-11\" }, \"exited\" ],\n\t            [ {  }, \"exited\" ],\n\t        ];\n\t\n\t        assert.expect(checks.length);\n\t        checks.forEach(function(check) {\n\t            assert.equal(util.render_container_status(check[0]), check[1],\n\t                    \"render_container_status = \" + check[1]);\n\t        });\n\t    });\n\t\n\t    QUnit.start();\n\t}());\n\n\n/***/ },\n\n/***/ 6:\n/***/ function(module, exports) {\n\n\tmodule.exports = jQuery;\n\n/***/ },\n\n/***/ 7:\n/***/ function(module, exports) {\n\n\tmodule.exports = cockpit;\n\n/***/ },\n\n/***/ 8:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2014 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(6);\n\t    var cockpit = __webpack_require__(7);\n\t\n\t    var Terminal = __webpack_require__(9);\n\t\n\t    var docker = { };\n\t\n\t    function docker_debug() {\n\t        if (window.debugging == \"all\" || window.debugging == \"docker\")\n\t            console.debug.apply(console, arguments);\n\t    }\n\t\n\t    /* This doesn't create a channel until a request */\n\t    var http = cockpit.http(\"/var/run/docker.sock\", { superuser: true });\n\t\n\t    /**\n\t     * pull:\n\t     * @repo: the image repository\n\t     * @tag: the tag to pull\n\t     *\n\t     * Pull an image from the registry. If no @tag is specified\n\t     * then the \"latest\" tag will be used.\n\t     *\n\t     * A Promise is returned. It completes when the image has\n\t     * been downloaded, or fails with an error. The progress callbacks\n\t     * on the download are called with status updates from docker.\n\t     */\n\t    docker.pull = function pull(repo, tag, registry) {\n\t        var dfd = $.Deferred();\n\t\n\t        if (!tag)\n\t            tag = \"latest\";\n\t\n\t        /*\n\t         * Although in theory the docker images/create API has\n\t         * a registry parameter, when you use it the resulting\n\t         * image is labeled completely wrong.\n\t         */\n\t\n\t        if (registry)\n\t            repo = registry + \"/\" + repo;\n\t\n\t        docker_debug(\"pulling: \" + repo + \":\" + tag);\n\t\n\t        var options = {\n\t            method: \"POST\",\n\t            path: \"/v1.12/images/create\",\n\t            body: \"\",\n\t            params: {\n\t                fromImage: repo,\n\t                tag: tag\n\t            }\n\t        };\n\t\n\t        var error;\n\t\n\t        var buffer = \"\";\n\t        var req = http.request(options)\n\t            .stream(function(data) {\n\t                buffer += data;\n\t                var next = docker.json_skip(buffer, 0);\n\t                if (next === 0)\n\t                    return; /* not enough data yet */\n\t                var progress = JSON.parse(buffer.substring(0, next));\n\t                buffer = buffer.substring(next);\n\t                if (progress.error)\n\t                    error = progress.error;\n\t                else if (progress.status)\n\t                    dfd.notify(progress.status, progress);\n\t            })\n\t            .fail(function(ex) {\n\t                dfd.reject(ex);\n\t            })\n\t            .done(function() {\n\t                if (error)\n\t                    dfd.reject(new Error(error));\n\t                else\n\t                    dfd.resolve();\n\t            });\n\t\n\t        var promise = dfd.promise();\n\t        promise.cancel = function cancel() {\n\t            req.close(\"cancelled\");\n\t            return promise;\n\t        };\n\t\n\t        return promise;\n\t    };\n\t\n\t    /* Gets image info locally */\n\t    docker.inspect_image = function inspect_image(image) {\n\t        var dfd = $.Deferred();\n\t        http.get(\"/v1.12/images/\" + encodeURIComponent(image) + \"/json\")\n\t            .done(function(data) {\n\t                dfd.resolve(JSON.parse(data));\n\t            })\n\t            .fail(function(ex) {\n\t                dfd.reject(ex);\n\t            });\n\t        var promise = dfd.promise();\n\t        promise.cancel = function cancel() {\n\t            return promise;\n\t        };\n\t        return promise;\n\t    };\n\t\n\t    function DockerTerminal(parent, channel) {\n\t        var self = this;\n\t\n\t        var term = new Terminal({\n\t            cols: 80,\n\t            rows: 24,\n\t            screenKeys: true,\n\t            useStyle: true,\n\t            inlineStyle: false,\n\t            useFocus: false,\n\t        });\n\t\n\t        var enable_input = true;\n\t        var decoder = cockpit.utf8_decoder();\n\t        var encoder = cockpit.utf8_encoder();\n\t\n\t        /* term.js wants the parent element to build its terminal inside of */\n\t        parent.empty();\n\t        term.open(parent[0]);\n\t\n\t        /* Shows and hides the cursor */\n\t        self.typeable = function typeable(yes) {\n\t            term.cursorHidden = !yes;\n\t            if (yes)\n\t                term.showCursor();\n\t            term.refresh(term.y, term.y);\n\t            enable_input = yes;\n\t        };\n\t\n\t        self.focus = function focus() {\n\t            term.focus();\n\t        };\n\t\n\t        /* Allows caller to cleanup nicely */\n\t        self.close = function close() {\n\t            term.destroy();\n\t        };\n\t\n\t        if (typeof channel == \"string\") {\n\t            term.write('\\x1b[31m' + channel + '\\x1b[m\\r\\n');\n\t            self.close = function() { };\n\t            self.typeable(false);\n\t            return self;\n\t        }\n\t\n\t        $(channel).\n\t            on(\"close\", function(ev, options) {\n\t                var problem = options.problem || \"disconnected\";\n\t                term.write('\\x1b[31m' + problem + '\\x1b[m\\r\\n');\n\t                self.typeable(false);\n\t                $(channel).off(\"message\");\n\t                channel = null;\n\t            });\n\t\n\t        self.process = function process(buffer) {\n\t            term.write(decoder.decode(buffer));\n\t            return buffer.length;\n\t        };\n\t\n\t        term.on('data', function(data) {\n\t            /* Send typed input back through channel */\n\t            if (enable_input && channel)\n\t                channel.send(encoder.encode(data));\n\t        });\n\t\n\t        return self;\n\t    }\n\t\n\t    function DockerLogs(parent, channel) {\n\t        var self = this;\n\t\n\t        var pre = $(\"<pre>\");\n\t        parent.empty();\n\t        parent.append(pre);\n\t\n\t        var wait;\n\t        var writing = [];\n\t        function write(data) {\n\t            writing.push(data);\n\t            if (!wait) {\n\t                wait = window.setTimeout(function() {\n\t                    wait = null;\n\t                    var at_bottom = pre[0].scrollHeight - pre.scrollTop() <= pre.outerHeight();\n\t                    var span = $(\"<span>\").text(writing.join(\"\"));\n\t                    writing.length = 0;\n\t                    pre.append(span);\n\t                    if (at_bottom)\n\t                        pre.scrollTop(pre.prop(\"scrollHeight\"));\n\t                }, 50);\n\t            }\n\t        }\n\t\n\t        /* Just display the failure */\n\t        if (typeof channel == \"string\") {\n\t            write(channel);\n\t            self.close = function() { };\n\t            return self;\n\t        }\n\t\n\t        channel.control({ batch: 16384, latency: 50 });\n\t\n\t        var decoder = cockpit.utf8_decoder(false);\n\t\n\t        self.process = function process(buffer) {\n\t            var at = 0;\n\t            var size, block;\n\t            var length = buffer.length;\n\t            while (true) {\n\t                if (length < at + 8)\n\t                    return at; /* more data */\n\t\n\t                size = ((buffer[at + 4] & 0xFF) << 24) | ((buffer[at + 5] & 0xFF) << 16) |\n\t                       ((buffer[at + 6] & 0xFF) << 8) | (buffer[at + 7] & 0xFF);\n\t\n\t                if (length < at + 8 + size)\n\t                    return at; /* more data */\n\t\n\t                /* Output the data */\n\t                if (buffer.subarray)\n\t                    block = buffer.subarray(at + 8, at + 8 + size);\n\t                else\n\t                    block = buffer.slice(at + 8, at + 8 + size);\n\t                write(decoder.decode(block, { stream: true }));\n\t                at += 8 + size;\n\t            }\n\t\n\t            return at;\n\t        };\n\t\n\t        self.focus = function() {\n\t            /* Nothing to do */\n\t        };\n\t\n\t        self.close = function() {\n\t            /* Nothing to do */\n\t        };\n\t\n\t        /*\n\t         * A raw channel over which we speak Docker's even stranger /logs\n\t         * protocol. It starts with a HTTP GET, and then quickly\n\t         * degenerates into a stream with framing.\n\t         */\n\t        $(channel).\n\t            on(\"close\", function(ev, options) {\n\t                write(options.reason || \"disconnected\");\n\t                $(channel).off();\n\t                channel = null;\n\t            });\n\t\n\t        return self;\n\t    }\n\t\n\t    function sequence_find(seq, find) {\n\t        var f, fl = find.length;\n\t        var s, sl = (seq.length - fl) + 1;\n\t        for (s = 0; s < sl; s++) {\n\t            for (f = 0; f < fl; f++) {\n\t                if (seq[s + f] !== find[f])\n\t                    break;\n\t            }\n\t            if (f == fl)\n\t                return s;\n\t        }\n\t\n\t        return -1;\n\t    }\n\t\n\t    /**\n\t     * docker.console(container_id, options)\n\t     * docker.console(container_id, command, options):\n\t     *\n\t     * @container_id: full docker container id\n\t     * @command: optional array of command argv to exec\n\t     * @options: other options, including 'tty' true/false\n\t     *\n\t     * Creates a docker console/logs element and returns it. If options.tty is true\n\t     * then creates a full term.js terminal. Otherwise creates a logs output\n\t     * area. If options.tty is null/undefined autodetect whether to use tty or not.\n\t     *\n\t     * The returned element needs to have its .connect() method called to start the\n\t     * connection process.\n\t     *\n\t     * The returned value is an HTMLElement with the following extra methods/properties:\n\t     *\n\t     * cons.connected: true/false if connected or not\n\t     * cons.connect(): connect or reconnect\n\t     * cons.typeable(true/false): set typeable state or not, only applies to console\n\t     * cons.close(): disconnect and close\n\t     */\n\t    docker.console = function console_(container_id, command, options) {\n\t        var self = $(\"<div>\").addClass(\"console-ct\");\n\t        self.connected = false;\n\t        var want_typeable = false;\n\t        var focused = false;\n\t        var channel = null;\n\t        var view = null;\n\t        var exec;\n\t        var tty;\n\t\n\t        /* If there's a command, then we have to exec it in the container */\n\t        if (Array.isArray(command)) {\n\t            if (!options)\n\t                options = { };\n\t\n\t            /* When executing default to having a tty */\n\t            tty = options.tty;\n\t            if (tty === undefined || tty === null)\n\t                tty = true;\n\t\n\t            exec = {\n\t                method: \"POST\",\n\t                path: \"/v1.15/containers/\" + encodeURIComponent(container_id) + \"/exec\",\n\t                headers: { \"Content-Type\": \"application/json\" },\n\t                body: JSON.stringify({\n\t                    \"AttachStdin\": tty,\n\t                    \"AttachStdout\": true,\n\t                    \"AttachStderr\": true,\n\t                    \"Tty\": tty,\n\t                    \"Cmd\": command\n\t                })\n\t            };\n\t\n\t            docker_debug(\"preparing to exec:\", command);\n\t\n\t        /* Just connect to the main container console */\n\t        } else {\n\t            docker_debug(\"preparing to attach\");\n\t            options = command || { };\n\t            tty = options.tty;\n\t        }\n\t\n\t        delete options.tty;\n\t\n\t        /* A promise being prepared */\n\t        var prep = null;\n\t\n\t        function failure(message) {\n\t            if (tty)\n\t                view = new DockerTerminal(self, message);\n\t            else\n\t                view = new DockerLogs(self, message);\n\t        }\n\t\n\t        function prepare() {\n\t            self.connected = false;\n\t\n\t            /* Nothing to prepare? Connect diretly to container? */\n\t            if (!exec) {\n\t                if (tty === false) {\n\t                    return attach(\"GET /v1.15/containers/\" + encodeURIComponent(container_id) +\n\t                                  \"/logs?follow=1&stdout=1&stderr=1&tail=1000&timestamps=0 HTTP/1.0\\r\\n\" +\n\t                                  \"Content-Length: 0\\r\\n\\r\\n\");\n\t                } else {\n\t                    return attach(\"POST /v1.15/containers/\" + encodeURIComponent(container_id) +\n\t                                  \"/attach?logs=1&stream=1&stdin=1&stdout=1&stderr=1 HTTP/1.0\\r\\n\" +\n\t                                  \"Content-Length: 0\\r\\n\\r\\n\");\n\t                }\n\t            }\n\t\n\t            /* Prepare the command to be executed */\n\t            var prep = http.request($.extend({ }, options, exec))\n\t                .always(function() {\n\t                    prep = null;\n\t                })\n\t                .done(function(data) {\n\t                    var resp = JSON.parse(data);\n\t                    var body = JSON.stringify({ Detach: false, Tty: tty });\n\t                    return attach(\"POST /v1.15/exec/\" + encodeURIComponent(resp.Id) +\n\t                                  \"/start HTTP/1.0\\r\\n\" +\n\t                                  \"Content-Length: \" + body.length +\"\\r\\n\\r\\n\" + body);\n\t                })\n\t                .fail(function(ex) {\n\t                    failure(ex.message);\n\t                });\n\t        }\n\t\n\t        /*\n\t         * A raw channel over which we speak Docker's strange /attach\n\t         * protocol. It starts with a HTTP POST, and then quickly\n\t         * degenerates into a stream sometimes binary.\n\t         *\n\t         * See: http://docs.docker.io/en/latest/reference/api/docker_remote_api_v1.8/#attach-to-a-container\n\t         */\n\t        function attach(request) {\n\t            if (view)\n\t                view.close();\n\t            view = null;\n\t\n\t            var opts = $.extend({ }, options, {\n\t                \"payload\": \"stream\",\n\t                \"unix\": \"/var/run/docker.sock\",\n\t                \"superuser\": true,\n\t                \"binary\": true\n\t            });\n\t\n\t            channel = cockpit.channel(opts);\n\t\n\t            docker_debug(request);\n\t            channel.send(request);\n\t\n\t            $(channel).\n\t                on(\"close.attach\", function(ev, options) {\n\t                    docker_debug(container_id + \": console close: \", options);\n\t                    $(channel).off(\".attach\");\n\t                    channel = null;\n\t\n\t                    /*\n\t                     * HACK: If we're disconnected unceremoniously, try\n\t                     * and reconnect. Certain versions of docker do this\n\t                     * during container startup.\n\t                     */\n\t                    if (self.connected && !options.problem) {\n\t                        window.setTimeout(function() {\n\t                            if (self.connected && !channel)\n\t                                attach(request);\n\t                        }, 1000);\n\t                    }\n\t                });\n\t\n\t            var headers = null;\n\t            var buffer = channel.buffer();\n\t            buffer.callback = function(data) {\n\t                var ret = 0;\n\t                var pos = 0;\n\t                var parts;\n\t\n\t                /* Look for end of headers first */\n\t                if (headers === null) {\n\t                    pos = sequence_find(data, [ 13, 10, 13, 10 ]);\n\t                    if (pos == -1)\n\t                        return ret;\n\t\n\t                    if (data.subarray)\n\t                        headers = cockpit.utf8_decoder().decode(data.subarray(0, pos));\n\t                    else\n\t                        headers = cockpit.utf8_decoder().decode(data.slice(0, pos));\n\t                    docker_debug(container_id + \": console headers: \", headers);\n\t\n\t                    parts = headers.split(\"\\r\\n\", 1)[0].split(\" \");\n\t                    if (parts[1] != \"200\") {\n\t                        failure(parts.slice(2).join(\" \"));\n\t                        buffer.callback = null;\n\t                        return;\n\t                    } else if (data.subarray) {\n\t                        data = data.subarray(pos + 4);\n\t                        ret += pos + 4;\n\t                    } else {\n\t                        data = data.slice(pos + 4);\n\t                        ret += pos + 4;\n\t                    }\n\t                }\n\t\n\t                /* We need at least two bytes to determine stream type */\n\t                if (tty === undefined || tty === null) {\n\t                    if (data.length < 2)\n\t                        return ret;\n\t                    tty = !((data[0] === 0 || data[0] === 1 || data[0] === 2) && data[1] === 0);\n\t                    docker_debug(container_id + \": mode tty: \" + tty);\n\t                }\n\t\n\t                if (tty)\n\t                    view = new DockerTerminal(self, channel);\n\t                else\n\t                    view = new DockerLogs(self, channel);\n\t                self.typeable(want_typeable);\n\t                self.connected = true;\n\t\n\t                buffer.callback = view.process;\n\t                var consumed = view.process(data);\n\t                return ret + consumed;\n\t            };\n\t        }\n\t\n\t        /* Allows caller to cleanup nicely */\n\t        self.close = function close(problem) {\n\t            self.connected = false;\n\t            if (prep)\n\t                prep.close(problem);\n\t            if (channel)\n\t                channel.close(problem);\n\t            if (view) {\n\t                view.close();\n\t                view = null;\n\t            }\n\t        };\n\t\n\t        /* Allows the curser to restart the attach request */\n\t        self.connect = function connect() {\n\t            self.close(\"disconnected\");\n\t            prepare();\n\t        };\n\t\n\t        function update_typeable() {\n\t            if (view && view.typeable)\n\t                view.typeable(want_typeable && focused);\n\t        }\n\t\n\t        $(self)\n\t            .on(\"focusin\", function() {\n\t                focused = true;\n\t                update_typeable();\n\t                view.focus();\n\t            })\n\t            .on(\"focusout\", function() {\n\t                focused = false;\n\t                update_typeable();\n\t            });\n\t\n\t        self.typeable = function typeable(yes) {\n\t            want_typeable = yes;\n\t            update_typeable();\n\t        };\n\t\n\t        return self;\n\t    };\n\t\n\t    /*\n\t     * docker.json_skip(string, pos = 0)\n\t     * @string: the JSON string\n\t     * @pos: optionally, the starting position in string, or zero\n\t     *\n\t     * Sometimes docker returns multiple JSON strings concatenated.\n\t     *\n\t     * Skip over one item in a stream of JSON things, like objects,\n\t     * numbers, strings, etc... The things can be separated by whitespace\n\t     * or in some cases (strings, objects, arrays) be right next to\n\t     * each other.\n\t     *\n\t     * We do not validate the JSON. It's assumed that a later parse\n\t     * will check for validity.\n\t     *\n\t     * Returns: the number of characters to skip over next json block\n\t     * or zero if no complete json block found.\n\t     */\n\t\n\t    docker.json_skip = function(string, pos) {\n\t        var any = false;\n\t        var end = string.length;\n\t        var depth = 0;\n\t        var inword = false;\n\t        var instr = false;\n\t        var endword = \" \\t\\n\\r\\v[{}]\\\"\";\n\t        var spaces = \" \\t\\n\\r\\v\";\n\t        var ch;\n\t\n\t        if (pos === undefined)\n\t            pos = 0;\n\t\n\t        for (end = string.length; pos != end; pos++) {\n\t            if (any && depth <= 0)\n\t                break; /* skipped over one thing */\n\t\n\t            ch = string[pos];\n\t            if (inword) {\n\t                if (endword.indexOf(ch) != -1) {\n\t                    inword = false;\n\t                    depth--;\n\t                    pos--;\n\t                }\n\t                continue;\n\t            }\n\t\n\t            if (spaces.indexOf(ch) != -1)\n\t                continue;\n\t\n\t            if (instr) {\n\t                switch (ch) {\n\t                case '\\\\':\n\t                    if (pos + 1 == end)\n\t                        continue;\n\t                    pos++; /* skip char after bs */\n\t                    break;\n\t                case '\"':\n\t                    instr = false;\n\t                    depth--;\n\t                    break;\n\t                default:\n\t                    break;\n\t                }\n\t                continue;\n\t            }\n\t\n\t            any = true;\n\t            switch(ch) {\n\t            case '[':\n\t            case '{':\n\t                depth++;\n\t                break;\n\t            case ']':\n\t            case '}':\n\t                depth--;\n\t                break;\n\t            case '\"':\n\t                instr = true;\n\t                depth++;\n\t                break;\n\t            default:\n\t                inword = true;\n\t                depth++;\n\t                break;\n\t            }\n\t        }\n\t\n\t        if (inword && depth == 1)\n\t            depth = 0;\n\t\n\t        /* No complete JSON blocks found */\n\t        if (!any || depth > 0)\n\t            return 0;\n\t\n\t        /* The position at which we found th eend */\n\t        return pos;\n\t    };\n\t\n\t    /*\n\t     * The functions docker.quote_cmdline and docker.unquote_cmdline implement\n\t     * a simple shell-like quoting syntax.  They are used when letting the\n\t     * user edit a sequence of words as a single string.\n\t     *\n\t     * When parsing, words are separated by whitespace.  Single and double\n\t     * quotes can be used to protect a sequence of characters that\n\t     * contains whitespace or the other quote character.  A backslash can\n\t     * be used to protect any character.  Quotes can appear in the middle\n\t     * of a word.\n\t     */\n\t\n\t    docker.quote_cmdline = function quote_cmdline(words) {\n\t        words = words || [];\n\t\n\t        function is_whitespace(c) {\n\t            return c == ' ';\n\t        }\n\t\n\t        function quote(word) {\n\t            var text = \"\";\n\t            var quote_char = \"\";\n\t            var i;\n\t            for (i = 0; i < word.length; i++) {\n\t                if (word[i] == '\\\\' || word[i] == quote_char)\n\t                    text += '\\\\';\n\t                else if (quote_char === \"\") {\n\t                    if (word[i] == \"'\" || is_whitespace(word[i]))\n\t                        quote_char = '\"';\n\t                    else if (word[i] == '\"')\n\t                        quote_char = \"'\";\n\t                }\n\t                text += word[i];\n\t            }\n\t\n\t            return quote_char + text + quote_char;\n\t        }\n\t\n\t        return words.map(quote).join(' ');\n\t    };\n\t\n\t    docker.unquote_cmdline = function unquote_cmdline(text) {\n\t        var words = [ ];\n\t        var next;\n\t\n\t        function is_whitespace(c) {\n\t            return c == ' ';\n\t        }\n\t\n\t        function skip_whitespace() {\n\t            while (next < text.length && is_whitespace(text[next]))\n\t                next++;\n\t        }\n\t\n\t        function parse_word() {\n\t            var word = \"\";\n\t            var quote_char = null;\n\t\n\t            while (next < text.length) {\n\t                if (text[next] == '\\\\') {\n\t                    next++;\n\t                    if (next < text.length) {\n\t                        word += text[next];\n\t                    }\n\t                } else if (text[next] == quote_char) {\n\t                    quote_char = null;\n\t                } else if (quote_char) {\n\t                    word += text[next];\n\t                } else if (text[next] == '\"' || text[next] == \"'\") {\n\t                    quote_char = text[next];\n\t                } else if (is_whitespace(text[next])) {\n\t                    break;\n\t                } else\n\t                    word += text[next];\n\t                next++;\n\t            }\n\t            return word;\n\t        }\n\t\n\t        next = 0;\n\t        skip_whitespace();\n\t        while (next < text.length) {\n\t            words.push(parse_word());\n\t            skip_whitespace();\n\t        }\n\t\n\t        return words;\n\t    };\n\t\n\t    var byte_suffixes = [ null, \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\" ];\n\t\n\t    docker.bytes_from_format = function bytes_from_format(formatted, separate) {\n\t        var factor = 1024;\n\t\n\t        if (separate === undefined)\n\t            separate = \" \";\n\t\n\t        var format = formatted.split(separate).pop().toUpperCase();\n\t        var spot = byte_suffixes.indexOf(format);\n\t\n\t        /* TODO: Make the decimal separator translatable */\n\t        var num = parseFloat(formatted);\n\t\n\t        if (spot > 0 && !isNaN(num))\n\t            return num * Math.pow(factor, spot);\n\t        return num;\n\t    };\n\t\n\t    /*\n\t     * Returns the short id of a docker container or image id.\n\t     */\n\t    docker.truncate_id = function (id) {\n\t        var c = id.indexOf(':');\n\t        if (c >= 0)\n\t            id = id.slice(c + 1);\n\t        return id.substr(0, 12);\n\t    };\n\t\n\t    module.exports = docker;\n\t}());\n\n\n/***/ },\n\n/***/ 9:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * term.js - an xterm emulator\n\t * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n\t * https://github.com/chjj/term.js\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t *\n\t * Originally forked from (with the author's permission):\n\t *   Fabrice Bellard's javascript vt100 for jslinux:\n\t *   http://bellard.org/jslinux/\n\t *   Copyright (c) 2011 Fabrice Bellard\n\t *   The original design remains. The terminal itself\n\t *   has been extended to include xterm CSI codes, among\n\t *   other features.\n\t */\n\t\n\t;(function() {\n\t\n\t/**\n\t * Terminal Emulation References:\n\t *   http://vt100.net/\n\t *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n\t *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n\t *   http://invisible-island.net/vttest/\n\t *   http://www.inwap.com/pdp10/ansicode.txt\n\t *   http://linux.die.net/man/4/console_codes\n\t *   http://linux.die.net/man/7/urxvt\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Shared\n\t */\n\t\n\tvar window = this\n\t  , document = this.document;\n\t\n\t/**\n\t * EventEmitter\n\t */\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t}\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  this._events[type] = this._events[type] || [];\n\t  this._events[type].push(listener);\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  if (!this._events[type]) return;\n\t\n\t  var obj = this._events[type]\n\t    , i = obj.length;\n\t\n\t  while (i--) {\n\t    if (obj[i] === listener || obj[i].listener === listener) {\n\t      obj.splice(i, 1);\n\t      return;\n\t    }\n\t  }\n\t};\n\t\n\tEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  if (this._events[type]) delete this._events[type];\n\t};\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  function on() {\n\t    var args = Array.prototype.slice.call(arguments);\n\t    this.removeListener(type, on);\n\t    return listener.apply(this, args);\n\t  }\n\t  on.listener = listener;\n\t  return this.on(type, on);\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  if (!this._events[type]) return;\n\t\n\t  var args = Array.prototype.slice.call(arguments, 1)\n\t    , obj = this._events[type]\n\t    , l = obj.length\n\t    , i = 0;\n\t\n\t  for (; i < l; i++) {\n\t    obj[i].apply(this, args);\n\t  }\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  return this._events[type] = this._events[type] || [];\n\t};\n\t\n\t/**\n\t * Stream\n\t */\n\t\n\tfunction Stream() {\n\t  EventEmitter.call(this);\n\t}\n\t\n\tinherits(Stream, EventEmitter);\n\t\n\tStream.prototype.pipe = function(dest, options) {\n\t  var src = this\n\t    , ondata\n\t    , onerror\n\t    , onend;\n\t\n\t  function unbind() {\n\t    src.removeListener('data', ondata);\n\t    src.removeListener('error', onerror);\n\t    src.removeListener('end', onend);\n\t    dest.removeListener('error', onerror);\n\t    dest.removeListener('close', unbind);\n\t  }\n\t\n\t  src.on('data', ondata = function(data) {\n\t    dest.write(data);\n\t  });\n\t\n\t  src.on('error', onerror = function(err) {\n\t    unbind();\n\t    if (!this.listeners('error').length) {\n\t      throw err;\n\t    }\n\t  });\n\t\n\t  src.on('end', onend = function() {\n\t    dest.end();\n\t    unbind();\n\t  });\n\t\n\t  dest.on('error', onerror);\n\t  dest.on('close', unbind);\n\t\n\t  dest.emit('pipe', src);\n\t\n\t  return dest;\n\t};\n\t\n\t/**\n\t * States\n\t */\n\t\n\tvar normal = 0\n\t  , escaped = 1\n\t  , csi = 2\n\t  , osc = 3\n\t  , charset = 4\n\t  , dcs = 5\n\t  , ignore = 6\n\t  , UDK = { type: 'udk' };\n\t\n\t/**\n\t * Terminal\n\t */\n\t\n\tfunction Terminal(options) {\n\t  var self = this;\n\t\n\t  if (!(this instanceof Terminal)) {\n\t    return new Terminal(arguments[0], arguments[1], arguments[2]);\n\t  }\n\t\n\t  Stream.call(this);\n\t\n\t  if (typeof options === 'number') {\n\t    options = {\n\t      cols: arguments[0],\n\t      rows: arguments[1],\n\t      handler: arguments[2]\n\t    };\n\t  }\n\t\n\t  options = options || {};\n\t\n\t  each(keys(Terminal.defaults), function(key) {\n\t    if (options[key] == null) {\n\t      options[key] = Terminal.options[key];\n\t      // Legacy:\n\t      if (Terminal[key] !== Terminal.defaults[key]) {\n\t        options[key] = Terminal[key];\n\t      }\n\t    }\n\t    self[key] = options[key];\n\t  });\n\t\n\t  if (options.colors.length === 8) {\n\t    options.colors = options.colors.concat(Terminal._colors.slice(8));\n\t  } else if (options.colors.length === 16) {\n\t    options.colors = options.colors.concat(Terminal._colors.slice(16));\n\t  } else if (options.colors.length === 10) {\n\t    options.colors = options.colors.slice(0, -2).concat(\n\t      Terminal._colors.slice(8, -2), options.colors.slice(-2));\n\t  } else if (options.colors.length === 18) {\n\t    options.colors = options.colors.slice(0, -2).concat(\n\t      Terminal._colors.slice(16, -2), options.colors.slice(-2));\n\t  }\n\t  this.colors = options.colors;\n\t\n\t  this.options = options;\n\t\n\t  // this.context = options.context || window;\n\t  // this.document = options.document || document;\n\t  this.parent = options.body || options.parent\n\t    || (document ? document.getElementsByTagName('body')[0] : null);\n\t\n\t  this.cols = options.cols || options.geometry[0];\n\t  this.rows = options.rows || options.geometry[1];\n\t\n\t  // Act as though we are a node TTY stream:\n\t  this.setRawMode;\n\t  this.isTTY = true;\n\t  this.isRaw = true;\n\t  this.columns = this.cols;\n\t  this.rows = this.rows;\n\t\n\t  if (options.handler) {\n\t    this.on('data', options.handler);\n\t  }\n\t\n\t  this.ybase = 0;\n\t  this.ydisp = 0;\n\t  this.x = 0;\n\t  this.y = 0;\n\t  this.cursorState = 0;\n\t  this.cursorHidden = false;\n\t  this.convertEol;\n\t  this.state = 0;\n\t  this.queue = '';\n\t  this.scrollTop = 0;\n\t  this.scrollBottom = this.rows - 1;\n\t\n\t  // modes\n\t  this.applicationKeypad = false;\n\t  this.applicationCursor = false;\n\t  this.originMode = false;\n\t  this.insertMode = false;\n\t  this.wraparoundMode = false;\n\t  this.normal = null;\n\t\n\t  // select modes\n\t  this.prefixMode = false;\n\t  this.selectMode = false;\n\t  this.visualMode = false;\n\t  this.searchMode = false;\n\t  this.searchDown;\n\t  this.entry = '';\n\t  this.entryPrefix = 'Search: ';\n\t  this._real;\n\t  this._selected;\n\t  this._textarea;\n\t\n\t  // charset\n\t  this.charset = null;\n\t  this.gcharset = null;\n\t  this.glevel = 0;\n\t  this.charsets = [null];\n\t\n\t  // mouse properties\n\t  this.decLocator;\n\t  this.x10Mouse;\n\t  this.vt200Mouse;\n\t  this.vt300Mouse;\n\t  this.normalMouse;\n\t  this.mouseEvents;\n\t  this.sendFocus;\n\t  this.utfMouse;\n\t  this.sgrMouse;\n\t  this.urxvtMouse;\n\t\n\t  // misc\n\t  this.element;\n\t  this.children;\n\t  this.refreshStart;\n\t  this.refreshEnd;\n\t  this.savedX;\n\t  this.savedY;\n\t  this.savedCols;\n\t\n\t  // stream\n\t  this.readable = true;\n\t  this.writable = true;\n\t\n\t  this.defAttr = (0 << 18) | (257 << 9) | (256 << 0);\n\t  this.curAttr = this.defAttr;\n\t\n\t  this.params = [];\n\t  this.currentParam = 0;\n\t  this.prefix = '';\n\t  this.postfix = '';\n\t\n\t  this.lines = [];\n\t  var i = this.rows;\n\t  while (i--) {\n\t    this.lines.push(this.blankLine());\n\t  }\n\t\n\t  this.tabs;\n\t  this.setupStops();\n\t}\n\t\n\tinherits(Terminal, Stream);\n\t\n\t/**\n\t * Colors\n\t */\n\t\n\t// Colors 0-15\n\tTerminal.tangoColors = [\n\t  // dark:\n\t  '#2e3436',\n\t  '#cc0000',\n\t  '#4e9a06',\n\t  '#c4a000',\n\t  '#3465a4',\n\t  '#75507b',\n\t  '#06989a',\n\t  '#d3d7cf',\n\t  // bright:\n\t  '#555753',\n\t  '#ef2929',\n\t  '#8ae234',\n\t  '#fce94f',\n\t  '#729fcf',\n\t  '#ad7fa8',\n\t  '#34e2e2',\n\t  '#eeeeec'\n\t];\n\t\n\tTerminal.xtermColors = [\n\t  // dark:\n\t  '#000000', // black\n\t  '#cd0000', // red3\n\t  '#00cd00', // green3\n\t  '#cdcd00', // yellow3\n\t  '#0000ee', // blue2\n\t  '#cd00cd', // magenta3\n\t  '#00cdcd', // cyan3\n\t  '#e5e5e5', // gray90\n\t  // bright:\n\t  '#7f7f7f', // gray50\n\t  '#ff0000', // red\n\t  '#00ff00', // green\n\t  '#ffff00', // yellow\n\t  '#5c5cff', // rgb:5c/5c/ff\n\t  '#ff00ff', // magenta\n\t  '#00ffff', // cyan\n\t  '#ffffff'  // white\n\t];\n\t\n\t// Colors 0-15 + 16-255\n\t// Much thanks to TooTallNate for writing this.\n\tTerminal.colors = (function() {\n\t  var colors = Terminal.tangoColors.slice()\n\t    , r = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff]\n\t    , i;\n\t\n\t  // 16-231\n\t  i = 0;\n\t  for (; i < 216; i++) {\n\t    out(r[(i / 36) % 6 | 0], r[(i / 6) % 6 | 0], r[i % 6]);\n\t  }\n\t\n\t  // 232-255 (grey)\n\t  i = 0;\n\t  for (; i < 24; i++) {\n\t    r = 8 + i * 10;\n\t    out(r, r, r);\n\t  }\n\t\n\t  function out(r, g, b) {\n\t    colors.push('#' + hex(r) + hex(g) + hex(b));\n\t  }\n\t\n\t  function hex(c) {\n\t    c = c.toString(16);\n\t    return c.length < 2 ? '0' + c : c;\n\t  }\n\t\n\t  return colors;\n\t})();\n\t\n\t// Default BG/FG\n\tTerminal.colors[256] = '#000000';\n\tTerminal.colors[257] = '#f0f0f0';\n\t\n\tTerminal._colors = Terminal.colors.slice();\n\t\n\tTerminal.vcolors = (function() {\n\t  var out = []\n\t    , colors = Terminal.colors\n\t    , i = 0\n\t    , color;\n\t\n\t  for (; i < 256; i++) {\n\t    color = parseInt(colors[i].substring(1), 16);\n\t    out.push([\n\t      (color >> 16) & 0xff,\n\t      (color >> 8) & 0xff,\n\t      color & 0xff\n\t    ]);\n\t  }\n\t\n\t  return out;\n\t})();\n\t\n\t/**\n\t * Options\n\t */\n\t\n\tTerminal.defaults = {\n\t  colors: Terminal.colors,\n\t  convertEol: false,\n\t  termName: 'xterm',\n\t  geometry: [80, 24],\n\t  cursorBlink: true,\n\t  visualBell: false,\n\t  popOnBell: false,\n\t  scrollback: 1000,\n\t  screenKeys: false,\n\t  debug: false,\n\t  useStyle: false\n\t  // programFeatures: false,\n\t  // focusKeys: false,\n\t};\n\t\n\tTerminal.options = {};\n\t\n\teach(keys(Terminal.defaults), function(key) {\n\t  Terminal[key] = Terminal.defaults[key];\n\t  Terminal.options[key] = Terminal.defaults[key];\n\t});\n\t\n\t/**\n\t * Focused Terminal\n\t */\n\t\n\tTerminal.focus = null;\n\t\n\tTerminal.prototype.focus = function() {\n\t  if (Terminal.focus === this) return;\n\t\n\t  if (Terminal.focus) {\n\t    Terminal.focus.blur();\n\t  }\n\t\n\t  if (this.sendFocus) this.send('\\x1b[I');\n\t  this.showCursor();\n\t\n\t  // try {\n\t  //   this.element.focus();\n\t  // } catch (e) {\n\t  //   ;\n\t  // }\n\t\n\t  // this.emit('focus');\n\t\n\t  Terminal.focus = this;\n\t};\n\t\n\tTerminal.prototype.blur = function() {\n\t  if (Terminal.focus !== this) return;\n\t\n\t  this.cursorState = 0;\n\t  this.refresh(this.y, this.y);\n\t  if (this.sendFocus) this.send('\\x1b[O');\n\t\n\t  // try {\n\t  //   this.element.blur();\n\t  // } catch (e) {\n\t  //   ;\n\t  // }\n\t\n\t  // this.emit('blur');\n\t\n\t  Terminal.focus = null;\n\t};\n\t\n\t/**\n\t * Initialize global behavior\n\t */\n\t\n\tTerminal.prototype.initGlobal = function() {\n\t  var document = this.document;\n\t\n\t  Terminal._boundDocs = Terminal._boundDocs || [];\n\t  if (~indexOf(Terminal._boundDocs, document)) {\n\t    return;\n\t  }\n\t  Terminal._boundDocs.push(document);\n\t\n\t  Terminal.bindPaste(document);\n\t\n\t  Terminal.bindKeys(document);\n\t\n\t  Terminal.bindCopy(document);\n\t\n\t  if (this.isMobile) {\n\t    this.fixMobile(document);\n\t  }\n\t\n\t  if (this.useStyle) {\n\t    Terminal.insertStyle(document, this.colors[256], this.colors[257]);\n\t  }\n\t};\n\t\n\t/**\n\t * Bind to paste event\n\t */\n\t\n\tTerminal.bindPaste = function(document) {\n\t  // This seems to work well for ctrl-V and middle-click,\n\t  // even without the contentEditable workaround.\n\t  var window = document.defaultView;\n\t  on(window, 'paste', function(ev) {\n\t    var term = Terminal.focus;\n\t    if (!term) return;\n\t    if (ev.clipboardData) {\n\t      term.send(ev.clipboardData.getData('text/plain'));\n\t    } else if (term.context.clipboardData) {\n\t      term.send(term.context.clipboardData.getData('Text'));\n\t    }\n\t    // Not necessary. Do it anyway for good measure.\n\t    term.element.contentEditable = 'inherit';\n\t    return cancel(ev);\n\t  });\n\t};\n\t\n\t/**\n\t * Global Events for key handling\n\t */\n\t\n\tTerminal.bindKeys = function(document) {\n\t  // We should only need to check `target === body` below,\n\t  // but we can check everything for good measure.\n\t  on(document, 'keydown', function(ev) {\n\t    if (!Terminal.focus) return;\n\t    var target = ev.target || ev.srcElement;\n\t    if (!target) return;\n\t    if (target === Terminal.focus.element\n\t        || target === Terminal.focus.context\n\t        || target === Terminal.focus.document\n\t        || target === Terminal.focus.body\n\t        || target === Terminal._textarea\n\t        || target === Terminal.focus.parent) {\n\t      return Terminal.focus.keyDown(ev);\n\t    }\n\t  }, true);\n\t\n\t  on(document, 'keypress', function(ev) {\n\t    if (!Terminal.focus) return;\n\t    var target = ev.target || ev.srcElement;\n\t    if (!target) return;\n\t    if (target === Terminal.focus.element\n\t        || target === Terminal.focus.context\n\t        || target === Terminal.focus.document\n\t        || target === Terminal.focus.body\n\t        || target === Terminal._textarea\n\t        || target === Terminal.focus.parent) {\n\t      return Terminal.focus.keyPress(ev);\n\t    }\n\t  }, true);\n\t\n\t  // If we click somewhere other than a\n\t  // terminal, unfocus the terminal.\n\t  on(document, 'mousedown', function(ev) {\n\t    if (!Terminal.focus) return;\n\t\n\t    var el = ev.target || ev.srcElement;\n\t    if (!el) return;\n\t\n\t    do {\n\t      if (el === Terminal.focus.element) return;\n\t    } while (el = el.parentNode);\n\t\n\t    Terminal.focus.blur();\n\t  });\n\t};\n\t\n\t/**\n\t * Copy Selection w/ Ctrl-C (Select Mode)\n\t */\n\t\n\tTerminal.bindCopy = function(document) {\n\t  var window = document.defaultView;\n\t\n\t  // if (!('onbeforecopy' in document)) {\n\t  //   // Copies to *only* the clipboard.\n\t  //   on(window, 'copy', function fn(ev) {\n\t  //     var term = Terminal.focus;\n\t  //     if (!term) return;\n\t  //     if (!term._selected) return;\n\t  //     var text = term.grabText(\n\t  //       term._selected.x1, term._selected.x2,\n\t  //       term._selected.y1, term._selected.y2);\n\t  //     term.emit('copy', text);\n\t  //     ev.clipboardData.setData('text/plain', text);\n\t  //   });\n\t  //   return;\n\t  // }\n\t\n\t  // Copies to primary selection *and* clipboard.\n\t  // NOTE: This may work better on capture phase,\n\t  // or using the `beforecopy` event.\n\t  on(window, 'copy', function(ev) {\n\t    var term = Terminal.focus;\n\t    if (!term) return;\n\t    if (!term._selected) return;\n\t    var textarea = term.getCopyTextarea();\n\t    var text = term.grabText(\n\t      term._selected.x1, term._selected.x2,\n\t      term._selected.y1, term._selected.y2);\n\t    term.emit('copy', text);\n\t    textarea.focus();\n\t    textarea.textContent = text;\n\t    textarea.value = text;\n\t    textarea.setSelectionRange(0, text.length);\n\t    setTimeout(function() {\n\t      term.element.focus();\n\t      term.focus();\n\t    }, 1);\n\t  });\n\t};\n\t\n\t/**\n\t * Fix Mobile\n\t */\n\t\n\tTerminal.prototype.fixMobile = function(document) {\n\t  var self = this;\n\t\n\t  var textarea = document.createElement('textarea');\n\t  textarea.style.position = 'absolute';\n\t  textarea.style.left = '-32000px';\n\t  textarea.style.top = '-32000px';\n\t  textarea.style.width = '0px';\n\t  textarea.style.height = '0px';\n\t  textarea.style.opacity = '0';\n\t  textarea.style.backgroundColor = 'transparent';\n\t  textarea.style.borderStyle = 'none';\n\t  textarea.style.outlineStyle = 'none';\n\t  textarea.autocapitalize = 'none';\n\t  textarea.autocorrect = 'off';\n\t\n\t  document.getElementsByTagName('body')[0].appendChild(textarea);\n\t\n\t  Terminal._textarea = textarea;\n\t\n\t  setTimeout(function() {\n\t    textarea.focus();\n\t  }, 1000);\n\t\n\t  if (this.isAndroid) {\n\t    on(textarea, 'change', function() {\n\t      var value = textarea.textContent || textarea.value;\n\t      textarea.value = '';\n\t      textarea.textContent = '';\n\t      self.send(value + '\\r');\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Insert a default style\n\t */\n\t\n\tTerminal.insertStyle = function(document, bg, fg) {\n\t  var style = document.getElementById('term-style');\n\t  if (style) return;\n\t\n\t  var head = document.getElementsByTagName('head')[0];\n\t  if (!head) return;\n\t\n\t  var style = document.createElement('style');\n\t  style.id = 'term-style';\n\t\n\t  // textContent doesn't work well with IE for <style> elements.\n\t  style.innerHTML = ''\n\t    + '.terminal {\\n'\n\t    + '  float: left;\\n'\n\t    + '  border: ' + bg + ' solid 5px;\\n'\n\t    + '  font-family: \"DejaVu Sans Mono\", \"Liberation Mono\", monospace;\\n'\n\t    + '  font-size: 11px;\\n'\n\t    + '  color: ' + fg + ';\\n'\n\t    + '  background: ' + bg + ';\\n'\n\t    + '}\\n'\n\t    + '\\n'\n\t    + '.terminal-cursor {\\n'\n\t    + '  color: ' + bg + ';\\n'\n\t    + '  background: ' + fg + ';\\n'\n\t    + '}\\n';\n\t\n\t  var out = '';\n\t  each(Terminal.colors, function(color, i) {\n\t    if (i === 256) {\n\t      out += '\\n.term-bg-color-default { background-color: ' + color + '; }';\n\t    }\n\t    if (i === 257) {\n\t      out += '\\n.term-fg-color-default { color: ' + color + '; }';\n\t    }\n\t    out += '\\n.term-bg-color-' + i + ' { background-color: ' + color + '; }';\n\t    out += '\\n.term-fg-color-' + i + ' { color: ' + color + '; }';\n\t  });\n\t  out += '\\n.term-bold { font-weight: bold; }'\n\t  out += '\\n.term-underline { text-decoration: underline; }'\n\t  out += '\\n.term-blink { text-decoration: blink; }'\n\t  out += '\\n.term-hidden { visibility: hidden; }'\n\t  style.innerHTML += out + '\\n';\n\t\n\t  head.insertBefore(style, head.firstChild);\n\t};\n\t\n\t/**\n\t * Open Terminal\n\t */\n\t\n\tTerminal.prototype.open = function(parent) {\n\t  var self = this\n\t    , i = 0\n\t    , div;\n\t\n\t  this.parent = parent || this.parent;\n\t\n\t  if (!this.parent) {\n\t    throw new Error('Terminal requires a parent element.');\n\t  }\n\t\n\t  // Grab global elements.\n\t  this.context = this.parent.ownerDocument.defaultView;\n\t  this.document = this.parent.ownerDocument;\n\t  this.body = this.document.getElementsByTagName('body')[0];\n\t\n\t  // Parse user-agent strings.\n\t  if (this.context.navigator && this.context.navigator.userAgent) {\n\t    this.isMac = !!~this.context.navigator.userAgent.indexOf('Mac');\n\t    this.isIpad = !!~this.context.navigator.userAgent.indexOf('iPad');\n\t    this.isIphone = !!~this.context.navigator.userAgent.indexOf('iPhone');\n\t    this.isAndroid = !!~this.context.navigator.userAgent.indexOf('Android');\n\t    this.isMobile = this.isIpad || this.isIphone || this.isAndroid;\n\t    this.isMSIE = !!~this.context.navigator.userAgent.indexOf('MSIE');\n\t  }\n\t\n\t  // Create our main terminal element.\n\t  this.element = this.document.createElement('div');\n\t  this.element.className = 'terminal';\n\t  this.element.style.outline = 'none';\n\t  this.element.setAttribute('tabindex', 0);\n\t  this.element.setAttribute('spellcheck', 'false');\n\t  this.element.style.backgroundColor = this.colors[256];\n\t  this.element.style.color = this.colors[257];\n\t\n\t  // Create the lines for our terminal.\n\t  this.children = [];\n\t  for (; i < this.rows; i++) {\n\t    div = this.document.createElement('div');\n\t    this.element.appendChild(div);\n\t    this.children.push(div);\n\t  }\n\t  this.parent.appendChild(this.element);\n\t\n\t  // Draw the screen.\n\t  this.refresh(0, this.rows - 1);\n\t\n\t  if (!('useEvents' in this.options) || this.options.useEvents) {\n\t    // Initialize global actions that\n\t    // need to be taken on the document.\n\t    this.initGlobal();\n\t  }\n\t\n\t  if (!('useFocus' in this.options) || this.options.useFocus) {\n\t    // Ensure there is a Terminal.focus.\n\t    this.focus();\n\t\n\t    // Start blinking the cursor.\n\t    this.startBlink();\n\t\n\t    // Bind to DOM events related\n\t    // to focus and paste behavior.\n\t    on(this.element, 'focus', function() {\n\t      self.focus();\n\t      if (self.isMobile) {\n\t        Terminal._textarea.focus();\n\t      }\n\t    });\n\t\n\t    // This causes slightly funky behavior.\n\t    // on(this.element, 'blur', function() {\n\t    //   self.blur();\n\t    // });\n\t\n\t    on(this.element, 'mousedown', function() {\n\t      self.focus();\n\t    });\n\t\n\t    // Clickable paste workaround, using contentEditable.\n\t    // This probably shouldn't work,\n\t    // ... but it does. Firefox's paste\n\t    // event seems to only work for textareas?\n\t    on(this.element, 'mousedown', function(ev) {\n\t      var button = ev.button != null\n\t        ? +ev.button\n\t        : ev.which != null\n\t          ? ev.which - 1\n\t          : null;\n\t\n\t      // Does IE9 do this?\n\t      if (self.isMSIE) {\n\t        button = button === 1 ? 0 : button === 4 ? 1 : button;\n\t      }\n\t\n\t      if (button !== 2) return;\n\t\n\t      self.element.contentEditable = 'true';\n\t      setTimeout(function() {\n\t        self.element.contentEditable = 'inherit'; // 'false';\n\t      }, 1);\n\t    }, true);\n\t  }\n\t\n\t  if (!('useMouse' in this.options) || this.options.useMouse) {\n\t    // Listen for mouse events and translate\n\t    // them into terminal mouse protocols.\n\t    this.bindMouse();\n\t  }\n\t\n\t  // this.emit('open');\n\t\n\t  if (!('useFocus' in this.options) || this.options.useFocus) {\n\t      // This can be useful for pasting,\n\t      // as well as the iPad fix.\n\t      setTimeout(function() {\n\t        self.element.focus();\n\t      }, 100);\n\t  }\n\t\n\t  // Figure out whether boldness affects\n\t  // the character width of monospace fonts.\n\t  if (Terminal.brokenBold == null) {\n\t    Terminal.brokenBold = isBoldBroken(this.document);\n\t  }\n\t\n\t  this.emit('open');\n\t};\n\t\n\tTerminal.prototype.setRawMode = function(value) {\n\t  this.isRaw = !!value;\n\t};\n\t\n\t// XTerm mouse events\n\t// http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#Mouse%20Tracking\n\t// To better understand these\n\t// the xterm code is very helpful:\n\t// Relevant files:\n\t//   button.c, charproc.c, misc.c\n\t// Relevant functions in xterm/button.c:\n\t//   BtnCode, EmitButtonCode, EditorButton, SendMousePosition\n\tTerminal.prototype.bindMouse = function() {\n\t  var el = this.element\n\t    , self = this\n\t    , pressed = 32;\n\t\n\t  var wheelEvent = 'onmousewheel' in this.context\n\t    ? 'mousewheel'\n\t    : 'DOMMouseScroll';\n\t\n\t  // mouseup, mousedown, mousewheel\n\t  // left click: ^[[M 3<^[[M#3<\n\t  // mousewheel up: ^[[M`3>\n\t  function sendButton(ev) {\n\t    var button\n\t      , pos;\n\t\n\t    // get the xterm-style button\n\t    button = getButton(ev);\n\t\n\t    // get mouse coordinates\n\t    pos = getCoords(ev);\n\t    if (!pos) return;\n\t\n\t    sendEvent(button, pos);\n\t\n\t    switch (ev.type) {\n\t      case 'mousedown':\n\t        pressed = button;\n\t        break;\n\t      case 'mouseup':\n\t        // keep it at the left\n\t        // button, just in case.\n\t        pressed = 32;\n\t        break;\n\t      case wheelEvent:\n\t        // nothing. don't\n\t        // interfere with\n\t        // `pressed`.\n\t        break;\n\t    }\n\t  }\n\t\n\t  // motion example of a left click:\n\t  // ^[[M 3<^[[M@4<^[[M@5<^[[M@6<^[[M@7<^[[M#7<\n\t  function sendMove(ev) {\n\t    var button = pressed\n\t      , pos;\n\t\n\t    pos = getCoords(ev);\n\t    if (!pos) return;\n\t\n\t    // buttons marked as motions\n\t    // are incremented by 32\n\t    button += 32;\n\t\n\t    sendEvent(button, pos);\n\t  }\n\t\n\t  // encode button and\n\t  // position to characters\n\t  function encode(data, ch) {\n\t    if (!self.utfMouse) {\n\t      if (ch === 255) return data.push(0);\n\t      if (ch > 127) ch = 127;\n\t      data.push(ch);\n\t    } else {\n\t      if (ch === 2047) return data.push(0);\n\t      if (ch < 127) {\n\t        data.push(ch);\n\t      } else {\n\t        if (ch > 2047) ch = 2047;\n\t        data.push(0xC0 | (ch >> 6));\n\t        data.push(0x80 | (ch & 0x3F));\n\t      }\n\t    }\n\t  }\n\t\n\t  // send a mouse event:\n\t  // regular/utf8: ^[[M Cb Cx Cy\n\t  // urxvt: ^[[ Cb ; Cx ; Cy M\n\t  // sgr: ^[[ Cb ; Cx ; Cy M/m\n\t  // vt300: ^[[ 24(1/3/5)~ [ Cx , Cy ] \\r\n\t  // locator: CSI P e ; P b ; P r ; P c ; P p & w\n\t  function sendEvent(button, pos) {\n\t    // self.emit('mouse', {\n\t    //   x: pos.x - 32,\n\t    //   y: pos.x - 32,\n\t    //   button: button\n\t    // });\n\t\n\t    if (self.vt300Mouse) {\n\t      // NOTE: Unstable.\n\t      // http://www.vt100.net/docs/vt3xx-gp/chapter15.html\n\t      button &= 3;\n\t      pos.x -= 32;\n\t      pos.y -= 32;\n\t      var data = '\\x1b[24';\n\t      if (button === 0) data += '1';\n\t      else if (button === 1) data += '3';\n\t      else if (button === 2) data += '5';\n\t      else if (button === 3) return;\n\t      else data += '0';\n\t      data += '~[' + pos.x + ',' + pos.y + ']\\r';\n\t      self.send(data);\n\t      return;\n\t    }\n\t\n\t    if (self.decLocator) {\n\t      // NOTE: Unstable.\n\t      button &= 3;\n\t      pos.x -= 32;\n\t      pos.y -= 32;\n\t      if (button === 0) button = 2;\n\t      else if (button === 1) button = 4;\n\t      else if (button === 2) button = 6;\n\t      else if (button === 3) button = 3;\n\t      self.send('\\x1b['\n\t        + button\n\t        + ';'\n\t        + (button === 3 ? 4 : 0)\n\t        + ';'\n\t        + pos.y\n\t        + ';'\n\t        + pos.x\n\t        + ';'\n\t        + (pos.page || 0)\n\t        + '&w');\n\t      return;\n\t    }\n\t\n\t    if (self.urxvtMouse) {\n\t      pos.x -= 32;\n\t      pos.y -= 32;\n\t      pos.x++;\n\t      pos.y++;\n\t      self.send('\\x1b[' + button + ';' + pos.x + ';' + pos.y + 'M');\n\t      return;\n\t    }\n\t\n\t    if (self.sgrMouse) {\n\t      pos.x -= 32;\n\t      pos.y -= 32;\n\t      self.send('\\x1b[<'\n\t        + ((button & 3) === 3 ? button & ~3 : button)\n\t        + ';'\n\t        + pos.x\n\t        + ';'\n\t        + pos.y\n\t        + ((button & 3) === 3 ? 'm' : 'M'));\n\t      return;\n\t    }\n\t\n\t    var data = [];\n\t\n\t    encode(data, button);\n\t    encode(data, pos.x);\n\t    encode(data, pos.y);\n\t\n\t    self.send('\\x1b[M' + String.fromCharCode.apply(String, data));\n\t  }\n\t\n\t  function getButton(ev) {\n\t    var button\n\t      , shift\n\t      , meta\n\t      , ctrl\n\t      , mod;\n\t\n\t    // two low bits:\n\t    // 0 = left\n\t    // 1 = middle\n\t    // 2 = right\n\t    // 3 = release\n\t    // wheel up/down:\n\t    // 1, and 2 - with 64 added\n\t    switch (ev.type) {\n\t      case 'mousedown':\n\t        button = ev.button != null\n\t          ? +ev.button\n\t          : ev.which != null\n\t            ? ev.which - 1\n\t            : null;\n\t\n\t        if (self.isMSIE) {\n\t          button = button === 1 ? 0 : button === 4 ? 1 : button;\n\t        }\n\t        break;\n\t      case 'mouseup':\n\t        button = 3;\n\t        break;\n\t      case 'DOMMouseScroll':\n\t        button = ev.detail < 0\n\t          ? 64\n\t          : 65;\n\t        break;\n\t      case 'mousewheel':\n\t        button = ev.wheelDeltaY > 0\n\t          ? 64\n\t          : 65;\n\t        break;\n\t    }\n\t\n\t    // next three bits are the modifiers:\n\t    // 4 = shift, 8 = meta, 16 = control\n\t    shift = ev.shiftKey ? 4 : 0;\n\t    meta = ev.metaKey ? 8 : 0;\n\t    ctrl = ev.ctrlKey ? 16 : 0;\n\t    mod = shift | meta | ctrl;\n\t\n\t    // no mods\n\t    if (self.vt200Mouse) {\n\t      // ctrl only\n\t      mod &= ctrl;\n\t    } else if (!self.normalMouse) {\n\t      mod = 0;\n\t    }\n\t\n\t    // increment to SP\n\t    button = (32 + (mod << 2)) + button;\n\t\n\t    return button;\n\t  }\n\t\n\t  // mouse coordinates measured in cols/rows\n\t  function getCoords(ev) {\n\t    var x, y, w, h, el;\n\t\n\t    // ignore browsers without pageX for now\n\t    if (ev.pageX == null) return;\n\t\n\t    x = ev.pageX;\n\t    y = ev.pageY;\n\t    el = self.element;\n\t\n\t    // should probably check offsetParent\n\t    // but this is more portable\n\t    while (el && el !== self.document.documentElement) {\n\t      x -= el.offsetLeft;\n\t      y -= el.offsetTop;\n\t      el = 'offsetParent' in el\n\t        ? el.offsetParent\n\t        : el.parentNode;\n\t    }\n\t\n\t    // convert to cols/rows\n\t    w = self.element.clientWidth;\n\t    h = self.element.clientHeight;\n\t    x = Math.round((x / w) * self.cols);\n\t    y = Math.round((y / h) * self.rows);\n\t\n\t    // be sure to avoid sending\n\t    // bad positions to the program\n\t    if (x < 0) x = 0;\n\t    if (x > self.cols) x = self.cols;\n\t    if (y < 0) y = 0;\n\t    if (y > self.rows) y = self.rows;\n\t\n\t    // xterm sends raw bytes and\n\t    // starts at 32 (SP) for each.\n\t    x += 32;\n\t    y += 32;\n\t\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      type: ev.type === wheelEvent\n\t        ? 'mousewheel'\n\t        : ev.type\n\t    };\n\t  }\n\t\n\t  on(el, 'mousedown', function(ev) {\n\t    if (!self.mouseEvents) return;\n\t\n\t    // send the button\n\t    sendButton(ev);\n\t\n\t    // ensure focus\n\t    self.focus();\n\t\n\t    // fix for odd bug\n\t    //if (self.vt200Mouse && !self.normalMouse) {\n\t    // XXX This seems to break certain programs.\n\t    // if (self.vt200Mouse) {\n\t    //   sendButton({ __proto__: ev, type: 'mouseup' });\n\t    //   return cancel(ev);\n\t    // }\n\t\n\t    // bind events\n\t    if (self.normalMouse) on(self.document, 'mousemove', sendMove);\n\t\n\t    // x10 compatibility mode can't send button releases\n\t    if (!self.x10Mouse) {\n\t      on(self.document, 'mouseup', function up(ev) {\n\t        sendButton(ev);\n\t        if (self.normalMouse) off(self.document, 'mousemove', sendMove);\n\t        off(self.document, 'mouseup', up);\n\t        return cancel(ev);\n\t      });\n\t    }\n\t\n\t    return cancel(ev);\n\t  });\n\t\n\t  //if (self.normalMouse) {\n\t  //  on(self.document, 'mousemove', sendMove);\n\t  //}\n\t\n\t  on(el, wheelEvent, function(ev) {\n\t    if (!self.mouseEvents) return;\n\t    if (self.x10Mouse\n\t        || self.vt300Mouse\n\t        || self.decLocator) return;\n\t    sendButton(ev);\n\t    return cancel(ev);\n\t  });\n\t\n\t  // allow mousewheel scrolling in\n\t  // the shell for example\n\t  on(el, wheelEvent, function(ev) {\n\t    if (self.mouseEvents) return;\n\t    if (self.applicationKeypad) return;\n\t    if (ev.type === 'DOMMouseScroll') {\n\t      self.scrollDisp(ev.detail < 0 ? -5 : 5);\n\t    } else {\n\t      self.scrollDisp(ev.wheelDeltaY > 0 ? -5 : 5);\n\t    }\n\t    return cancel(ev);\n\t  });\n\t};\n\t\n\t/**\n\t * Destroy Terminal\n\t */\n\t\n\tTerminal.prototype.close =\n\tTerminal.prototype.destroySoon =\n\tTerminal.prototype.destroy = function() {\n\t  if (this.destroyed) {\n\t    return;\n\t  }\n\t\n\t  if (this._blink) {\n\t    clearInterval(this._blink);\n\t    delete this._blink;\n\t  }\n\t\n\t  this.readable = false;\n\t  this.writable = false;\n\t  this.destroyed = true;\n\t  this._events = {};\n\t\n\t  this.handler = function() {};\n\t  this.write = function() {};\n\t  this.end = function() {};\n\t\n\t  if (this.element.parentNode) {\n\t    this.element.parentNode.removeChild(this.element);\n\t  }\n\t\n\t  this.emit('end');\n\t  this.emit('close');\n\t  this.emit('finish');\n\t  this.emit('destroy');\n\t};\n\t\n\t/**\n\t * Rendering Engine\n\t */\n\t\n\t// In the screen buffer, each character\n\t// is stored as a an array with a character\n\t// and a 32-bit integer.\n\t// First value: a utf-16 character.\n\t// Second value:\n\t// Next 9 bits: background color (0-511).\n\t// Next 9 bits: foreground color (0-511).\n\t// Next 14 bits: a mask for misc. flags:\n\t//   1=bold, 2=underline, 4=blink, 8=inverse, 16=invisible\n\t\n\tTerminal.prototype.refresh = function(start, end) {\n\t  var x\n\t    , y\n\t    , i\n\t    , line\n\t    , out\n\t    , ch\n\t    , width\n\t    , data\n\t    , attr\n\t    , bg\n\t    , fg\n\t    , flags\n\t    , row\n\t    , parent;\n\t\n\t  if (end - start >= this.rows / 2) {\n\t    parent = this.element.parentNode;\n\t    if (parent) parent.removeChild(this.element);\n\t  }\n\t\n\t  width = this.cols;\n\t  y = start;\n\t\n\t  if (end >= this.lines.length) {\n\t    this.log('`end` is too large. Most likely a bad CSR.');\n\t    end = this.lines.length - 1;\n\t  }\n\t\n\t  for (; y <= end; y++) {\n\t    row = y + this.ydisp;\n\t\n\t    line = this.lines[row];\n\t    out = '';\n\t\n\t    if (y === this.y\n\t        && this.cursorState\n\t        && (this.ydisp === this.ybase || this.selectMode)\n\t        && !this.cursorHidden) {\n\t      x = this.x;\n\t    } else {\n\t      x = -1;\n\t    }\n\t\n\t    attr = this.defAttr;\n\t    i = 0;\n\t\n\t    for (; i < width; i++) {\n\t      data = line[i][0];\n\t      ch = line[i][1];\n\t\n\t      if (i === x) data = -1;\n\t\n\t      if (data !== attr) {\n\t        if (attr !== this.defAttr) {\n\t          out += '</span>';\n\t        }\n\t        if (data !== this.defAttr) {\n\t          if (data === -1) {\n\t            out += '<span class=\"reverse-video terminal-cursor\">';\n\t\t  } else {\n\t            if (this.useStyle) {\n\t\t      out += '<span class=\"';\n\t\t    } else {\n\t              out += '<span style=\"';\n\t            }\n\t\n\t            bg = data & 0x1ff;\n\t            fg = (data >> 9) & 0x1ff;\n\t            flags = data >> 18;\n\t\n\t            // bold\n\t            if (flags & 1) {\n\t              if (!Terminal.brokenBold) {\n\t\t        if (this.useStyle) {\n\t\t\t  out += 'term-bold '\n\t                } else {\n\t                  out += 'font-weight:bold;';\n\t                }\n\t              }\n\t              // See: XTerm*boldColors\n\t              if (fg < 8) fg += 8;\n\t            }\n\t\n\t            // underline\n\t            if (flags & 2) {\n\t              if (this.useStyle) {\n\t                out += 'term-underline ';\n\t\t      } else {\n\t                out += 'text-decoration:underline;';\n\t              }\n\t            }\n\t\n\t            // blink\n\t            if (flags & 4) {\n\t              if (this.useStyle) {\n\t                out += 'term-blink ';\n\t              } else {\n\t                if (flags & 2) {\n\t                  out = out.slice(0, -1);\n\t                  out += ' blink;';\n\t                } else {\n\t                  out += 'text-decoration:blink;';\n\t                }\n\t              }\n\t            }\n\t\n\t            // inverse\n\t            if (flags & 8) {\n\t              bg = (data >> 9) & 0x1ff;\n\t              fg = data & 0x1ff;\n\t              // Should inverse just be before the\n\t              // above boldColors effect instead?\n\t              if ((flags & 1) && fg < 8) fg += 8;\n\t            }\n\t\n\t            // invisible\n\t            if (flags & 16) {\n\t              if (this.useStyle) {\n\t                out += 'term-hidden ';\n\t              } else {\n\t                out += 'visibility:hidden;';\n\t              }\n\t            }\n\t\n\t            if (bg !== 256) {\n\t              if (this.useStyle) {\n\t                out += 'term-bg-color-' + bg + ' ';\n\t              } else {\n\t                out += 'background-color:' + this.colors[bg] + ';';\n\t              }\n\t            }\n\t\n\t            if (fg !== 257) {\n\t              if (this.useStyle) {\n\t                out += 'term-fg-color-' + fg + ' ';\n\t              } else {\n\t                out += 'color:' + this.colors[fg] + ';';\n\t              }\n\t            }\n\t\n\t            out += '\">';\n\t          }\n\t        }\n\t      }\n\t\n\t      switch (ch) {\n\t        case '&':\n\t          out += '&amp;';\n\t          break;\n\t        case '<':\n\t          out += '&lt;';\n\t          break;\n\t        case '>':\n\t          out += '&gt;';\n\t          break;\n\t        default:\n\t          if (ch <= ' ') {\n\t            out += '&nbsp;';\n\t          } else {\n\t            if (isWide(ch)) i++;\n\t            out += ch;\n\t          }\n\t          break;\n\t      }\n\t\n\t      attr = data;\n\t    }\n\t\n\t    if (attr !== this.defAttr) {\n\t      out += '</span>';\n\t    }\n\t\n\t    this.children[y].innerHTML = out;\n\t  }\n\t\n\t  if (parent) parent.appendChild(this.element);\n\t};\n\t\n\tTerminal.prototype._cursorBlink = function() {\n\t  if (Terminal.focus !== this) return;\n\t  this.cursorState ^= 1;\n\t  this.refresh(this.y, this.y);\n\t};\n\t\n\tTerminal.prototype.showCursor = function() {\n\t  if (!this.cursorState) {\n\t    this.cursorState = 1;\n\t    this.refresh(this.y, this.y);\n\t  } else {\n\t    // Temporarily disabled:\n\t    // this.refreshBlink();\n\t  }\n\t};\n\t\n\tTerminal.prototype.startBlink = function() {\n\t  if (!this.cursorBlink) return;\n\t  var self = this;\n\t  this._blinker = function() {\n\t    self._cursorBlink();\n\t  };\n\t  this._blink = setInterval(this._blinker, 500);\n\t};\n\t\n\tTerminal.prototype.refreshBlink = function() {\n\t  if (!this.cursorBlink || !this._blink) return;\n\t  clearInterval(this._blink);\n\t  this._blink = setInterval(this._blinker, 500);\n\t};\n\t\n\tTerminal.prototype.scroll = function() {\n\t  var row;\n\t\n\t  if (++this.ybase === this.scrollback) {\n\t    this.ybase = this.ybase / 2 | 0;\n\t    this.lines = this.lines.slice(-(this.ybase + this.rows) + 1);\n\t  }\n\t\n\t  this.ydisp = this.ybase;\n\t\n\t  // last line\n\t  row = this.ybase + this.rows - 1;\n\t\n\t  // subtract the bottom scroll region\n\t  row -= this.rows - 1 - this.scrollBottom;\n\t\n\t  if (row === this.lines.length) {\n\t    // potential optimization:\n\t    // pushing is faster than splicing\n\t    // when they amount to the same\n\t    // behavior.\n\t    this.lines.push(this.blankLine());\n\t  } else {\n\t    // add our new line\n\t    this.lines.splice(row, 0, this.blankLine());\n\t  }\n\t\n\t  if (this.scrollTop !== 0) {\n\t    if (this.ybase !== 0) {\n\t      this.ybase--;\n\t      this.ydisp = this.ybase;\n\t    }\n\t    this.lines.splice(this.ybase + this.scrollTop, 1);\n\t  }\n\t\n\t  // this.maxRange();\n\t  this.updateRange(this.scrollTop);\n\t  this.updateRange(this.scrollBottom);\n\t};\n\t\n\tTerminal.prototype.scrollDisp = function(disp) {\n\t  this.ydisp += disp;\n\t\n\t  if (this.ydisp > this.ybase) {\n\t    this.ydisp = this.ybase;\n\t  } else if (this.ydisp < 0) {\n\t    this.ydisp = 0;\n\t  }\n\t\n\t  this.refresh(0, this.rows - 1);\n\t};\n\t\n\tTerminal.prototype.write = function(data) {\n\t  var l = data.length\n\t    , i = 0\n\t    , j\n\t    , cs\n\t    , ch;\n\t\n\t  this.refreshStart = this.y;\n\t  this.refreshEnd = this.y;\n\t\n\t  if (this.ybase !== this.ydisp) {\n\t    this.ydisp = this.ybase;\n\t    this.maxRange();\n\t  }\n\t\n\t  // this.log(JSON.stringify(data.replace(/\\x1b/g, '^[')));\n\t\n\t  for (; i < l; i++, this.lch = ch) {\n\t    ch = data[i];\n\t    switch (this.state) {\n\t      case normal:\n\t        switch (ch) {\n\t          // '\\0'\n\t          // case '\\0':\n\t          // case '\\200':\n\t          //   break;\n\t\n\t          // '\\a'\n\t          case '\\x07':\n\t            this.bell();\n\t            break;\n\t\n\t          // '\\n', '\\v', '\\f'\n\t          case '\\n':\n\t          case '\\x0b':\n\t          case '\\x0c':\n\t            if (this.convertEol) {\n\t              this.x = 0;\n\t            }\n\t            // TODO: Implement eat_newline_glitch.\n\t            // if (this.realX >= this.cols) break;\n\t            // this.realX = 0;\n\t            this.y++;\n\t            if (this.y > this.scrollBottom) {\n\t              this.y--;\n\t              this.scroll();\n\t            }\n\t            break;\n\t\n\t          // '\\r'\n\t          case '\\r':\n\t            this.x = 0;\n\t            break;\n\t\n\t          // '\\b'\n\t          case '\\x08':\n\t            if (this.x > 0) {\n\t              this.x--;\n\t            }\n\t            break;\n\t\n\t          // '\\t'\n\t          case '\\t':\n\t            this.x = this.nextStop();\n\t            break;\n\t\n\t          // shift out\n\t          case '\\x0e':\n\t            this.setgLevel(1);\n\t            break;\n\t\n\t          // shift in\n\t          case '\\x0f':\n\t            this.setgLevel(0);\n\t            break;\n\t\n\t          // '\\e'\n\t          case '\\x1b':\n\t            this.state = escaped;\n\t            break;\n\t\n\t          default:\n\t            // ' '\n\t            if (ch >= ' ') {\n\t              if (this.charset && this.charset[ch]) {\n\t                ch = this.charset[ch];\n\t              }\n\t\n\t              if (this.x >= this.cols) {\n\t                this.x = 0;\n\t                this.y++;\n\t                if (this.y > this.scrollBottom) {\n\t                  this.y--;\n\t                  this.scroll();\n\t                }\n\t              }\n\t\n\t              this.lines[this.y + this.ybase][this.x] = [this.curAttr, ch];\n\t              this.x++;\n\t              this.updateRange(this.y);\n\t\n\t              if (isWide(ch)) {\n\t                j = this.y + this.ybase;\n\t                if (this.cols < 2 || this.x >= this.cols) {\n\t                  this.lines[j][this.x - 1] = [this.curAttr, ' '];\n\t                  break;\n\t                }\n\t                this.lines[j][this.x] = [this.curAttr, ' '];\n\t                this.x++;\n\t              }\n\t            }\n\t            break;\n\t        }\n\t        break;\n\t      case escaped:\n\t        switch (ch) {\n\t          // ESC [ Control Sequence Introducer ( CSI is 0x9b).\n\t          case '[':\n\t            this.params = [];\n\t            this.currentParam = 0;\n\t            this.state = csi;\n\t            break;\n\t\n\t          // ESC ] Operating System Command ( OSC is 0x9d).\n\t          case ']':\n\t            this.params = [];\n\t            this.currentParam = 0;\n\t            this.state = osc;\n\t            break;\n\t\n\t          // ESC P Device Control String ( DCS is 0x90).\n\t          case 'P':\n\t            this.params = [];\n\t            this.prefix = '';\n\t            this.currentParam = '';\n\t            this.state = dcs;\n\t            break;\n\t\n\t          // ESC _ Application Program Command ( APC is 0x9f).\n\t          case '_':\n\t            this.state = ignore;\n\t            break;\n\t\n\t          // ESC ^ Privacy Message ( PM is 0x9e).\n\t          case '^':\n\t            this.state = ignore;\n\t            break;\n\t\n\t          // ESC c Full Reset (RIS).\n\t          case 'c':\n\t            this.reset();\n\t            break;\n\t\n\t          // ESC E Next Line ( NEL is 0x85).\n\t          // ESC D Index ( IND is 0x84).\n\t          case 'E':\n\t            this.x = 0;\n\t            ;\n\t          case 'D':\n\t            this.index();\n\t            break;\n\t\n\t          // ESC M Reverse Index ( RI is 0x8d).\n\t          case 'M':\n\t            this.reverseIndex();\n\t            break;\n\t\n\t          // ESC % Select default/utf-8 character set.\n\t          // @ = default, G = utf-8\n\t          case '%':\n\t            //this.charset = null;\n\t            this.setgLevel(0);\n\t            this.setgCharset(0, Terminal.charsets.US);\n\t            this.state = normal;\n\t            i++;\n\t            break;\n\t\n\t          // ESC (,),*,+,-,. Designate G0-G2 Character Set.\n\t          case '(': // <-- this seems to get all the attention\n\t          case ')':\n\t          case '*':\n\t          case '+':\n\t          case '-':\n\t          case '.':\n\t            switch (ch) {\n\t              case '(':\n\t                this.gcharset = 0;\n\t                break;\n\t              case ')':\n\t                this.gcharset = 1;\n\t                break;\n\t              case '*':\n\t                this.gcharset = 2;\n\t                break;\n\t              case '+':\n\t                this.gcharset = 3;\n\t                break;\n\t              case '-':\n\t                this.gcharset = 1;\n\t                break;\n\t              case '.':\n\t                this.gcharset = 2;\n\t                break;\n\t            }\n\t            this.state = charset;\n\t            break;\n\t\n\t          // Designate G3 Character Set (VT300).\n\t          // A = ISO Latin-1 Supplemental.\n\t          // Not implemented.\n\t          case '/':\n\t            this.gcharset = 3;\n\t            this.state = charset;\n\t            i--;\n\t            break;\n\t\n\t          // ESC N\n\t          // Single Shift Select of G2 Character Set\n\t          // ( SS2 is 0x8e). This affects next character only.\n\t          case 'N':\n\t            break;\n\t          // ESC O\n\t          // Single Shift Select of G3 Character Set\n\t          // ( SS3 is 0x8f). This affects next character only.\n\t          case 'O':\n\t            break;\n\t          // ESC n\n\t          // Invoke the G2 Character Set as GL (LS2).\n\t          case 'n':\n\t            this.setgLevel(2);\n\t            break;\n\t          // ESC o\n\t          // Invoke the G3 Character Set as GL (LS3).\n\t          case 'o':\n\t            this.setgLevel(3);\n\t            break;\n\t          // ESC |\n\t          // Invoke the G3 Character Set as GR (LS3R).\n\t          case '|':\n\t            this.setgLevel(3);\n\t            break;\n\t          // ESC }\n\t          // Invoke the G2 Character Set as GR (LS2R).\n\t          case '}':\n\t            this.setgLevel(2);\n\t            break;\n\t          // ESC ~\n\t          // Invoke the G1 Character Set as GR (LS1R).\n\t          case '~':\n\t            this.setgLevel(1);\n\t            break;\n\t\n\t          // ESC 7 Save Cursor (DECSC).\n\t          case '7':\n\t            this.saveCursor();\n\t            this.state = normal;\n\t            break;\n\t\n\t          // ESC 8 Restore Cursor (DECRC).\n\t          case '8':\n\t            this.restoreCursor();\n\t            this.state = normal;\n\t            break;\n\t\n\t          // ESC # 3 DEC line height/width\n\t          case '#':\n\t            this.state = normal;\n\t            i++;\n\t            break;\n\t\n\t          // ESC H Tab Set (HTS is 0x88).\n\t          case 'H':\n\t            this.tabSet();\n\t            break;\n\t\n\t          // ESC = Application Keypad (DECPAM).\n\t          case '=':\n\t            this.log('Serial port requested application keypad.');\n\t            this.applicationKeypad = true;\n\t            this.state = normal;\n\t            break;\n\t\n\t          // ESC > Normal Keypad (DECPNM).\n\t          case '>':\n\t            this.log('Switching back to normal keypad.');\n\t            this.applicationKeypad = false;\n\t            this.state = normal;\n\t            break;\n\t\n\t          default:\n\t            this.state = normal;\n\t            this.error('Unknown ESC control: %s.', ch);\n\t            break;\n\t        }\n\t        break;\n\t\n\t      case charset:\n\t        switch (ch) {\n\t          case '0': // DEC Special Character and Line Drawing Set.\n\t            cs = Terminal.charsets.SCLD;\n\t            break;\n\t          case 'A': // UK\n\t            cs = Terminal.charsets.UK;\n\t            break;\n\t          case 'B': // United States (USASCII).\n\t            cs = Terminal.charsets.US;\n\t            break;\n\t          case '4': // Dutch\n\t            cs = Terminal.charsets.Dutch;\n\t            break;\n\t          case 'C': // Finnish\n\t          case '5':\n\t            cs = Terminal.charsets.Finnish;\n\t            break;\n\t          case 'R': // French\n\t            cs = Terminal.charsets.French;\n\t            break;\n\t          case 'Q': // FrenchCanadian\n\t            cs = Terminal.charsets.FrenchCanadian;\n\t            break;\n\t          case 'K': // German\n\t            cs = Terminal.charsets.German;\n\t            break;\n\t          case 'Y': // Italian\n\t            cs = Terminal.charsets.Italian;\n\t            break;\n\t          case 'E': // NorwegianDanish\n\t          case '6':\n\t            cs = Terminal.charsets.NorwegianDanish;\n\t            break;\n\t          case 'Z': // Spanish\n\t            cs = Terminal.charsets.Spanish;\n\t            break;\n\t          case 'H': // Swedish\n\t          case '7':\n\t            cs = Terminal.charsets.Swedish;\n\t            break;\n\t          case '=': // Swiss\n\t            cs = Terminal.charsets.Swiss;\n\t            break;\n\t          case '/': // ISOLatin (actually /A)\n\t            cs = Terminal.charsets.ISOLatin;\n\t            i++;\n\t            break;\n\t          default: // Default\n\t            cs = Terminal.charsets.US;\n\t            break;\n\t        }\n\t        this.setgCharset(this.gcharset, cs);\n\t        this.gcharset = null;\n\t        this.state = normal;\n\t        break;\n\t\n\t      case osc:\n\t        // OSC Ps ; Pt ST\n\t        // OSC Ps ; Pt BEL\n\t        //   Set Text Parameters.\n\t        if ((this.lch === '\\x1b' && ch === '\\\\') || ch === '\\x07') {\n\t          if (this.lch === '\\x1b') {\n\t            if (typeof this.currentParam === 'string') {\n\t              this.currentParam = this.currentParam.slice(0, -1);\n\t            } else if (typeof this.currentParam == 'number') {\n\t              this.currentParam = (this.currentParam - ('\\x1b'.charCodeAt(0) - 48)) / 10;\n\t            }\n\t          }\n\t\n\t          this.params.push(this.currentParam);\n\t\n\t          switch (this.params[0]) {\n\t            case 0:\n\t            case 1:\n\t            case 2:\n\t              if (this.params[1]) {\n\t                this.title = this.params[1];\n\t                this.handleTitle(this.title);\n\t              }\n\t              break;\n\t            case 3:\n\t              // set X property\n\t              break;\n\t            case 4:\n\t            case 5:\n\t              // change dynamic colors\n\t              break;\n\t            case 10:\n\t            case 11:\n\t            case 12:\n\t            case 13:\n\t            case 14:\n\t            case 15:\n\t            case 16:\n\t            case 17:\n\t            case 18:\n\t            case 19:\n\t              // change dynamic ui colors\n\t              break;\n\t            case 46:\n\t              // change log file\n\t              break;\n\t            case 50:\n\t              // dynamic font\n\t              break;\n\t            case 51:\n\t              // emacs shell\n\t              break;\n\t            case 52:\n\t              // manipulate selection data\n\t              break;\n\t            case 104:\n\t            case 105:\n\t            case 110:\n\t            case 111:\n\t            case 112:\n\t            case 113:\n\t            case 114:\n\t            case 115:\n\t            case 116:\n\t            case 117:\n\t            case 118:\n\t              // reset colors\n\t              break;\n\t          }\n\t\n\t          this.params = [];\n\t          this.currentParam = 0;\n\t          this.state = normal;\n\t        } else {\n\t          if (!this.params.length) {\n\t            if (ch >= '0' && ch <= '9') {\n\t              this.currentParam =\n\t                this.currentParam * 10 + ch.charCodeAt(0) - 48;\n\t            } else if (ch === ';') {\n\t              this.params.push(this.currentParam);\n\t              this.currentParam = '';\n\t            }\n\t          } else {\n\t            this.currentParam += ch;\n\t          }\n\t        }\n\t        break;\n\t\n\t      case csi:\n\t        // '?', '>', '!'\n\t        if (ch === '?' || ch === '>' || ch === '!') {\n\t          this.prefix = ch;\n\t          break;\n\t        }\n\t\n\t        // 0 - 9\n\t        if (ch >= '0' && ch <= '9') {\n\t          this.currentParam = this.currentParam * 10 + ch.charCodeAt(0) - 48;\n\t          break;\n\t        }\n\t\n\t        // '$', '\"', ' ', '\\''\n\t        if (ch === '$' || ch === '\"' || ch === ' ' || ch === '\\'') {\n\t          this.postfix = ch;\n\t          break;\n\t        }\n\t\n\t        this.params.push(this.currentParam);\n\t        this.currentParam = 0;\n\t\n\t        // ';'\n\t        if (ch === ';') break;\n\t\n\t        this.state = normal;\n\t\n\t        switch (ch) {\n\t          // CSI Ps A\n\t          // Cursor Up Ps Times (default = 1) (CUU).\n\t          case 'A':\n\t            this.cursorUp(this.params);\n\t            break;\n\t\n\t          // CSI Ps B\n\t          // Cursor Down Ps Times (default = 1) (CUD).\n\t          case 'B':\n\t            this.cursorDown(this.params);\n\t            break;\n\t\n\t          // CSI Ps C\n\t          // Cursor Forward Ps Times (default = 1) (CUF).\n\t          case 'C':\n\t            this.cursorForward(this.params);\n\t            break;\n\t\n\t          // CSI Ps D\n\t          // Cursor Backward Ps Times (default = 1) (CUB).\n\t          case 'D':\n\t            this.cursorBackward(this.params);\n\t            break;\n\t\n\t          // CSI Ps ; Ps H\n\t          // Cursor Position [row;column] (default = [1,1]) (CUP).\n\t          case 'H':\n\t            this.cursorPos(this.params);\n\t            break;\n\t\n\t          // CSI Ps J  Erase in Display (ED).\n\t          case 'J':\n\t            this.eraseInDisplay(this.params);\n\t            break;\n\t\n\t          // CSI Ps K  Erase in Line (EL).\n\t          case 'K':\n\t            this.eraseInLine(this.params);\n\t            break;\n\t\n\t          // CSI Pm m  Character Attributes (SGR).\n\t          case 'm':\n\t            if (!this.prefix) {\n\t              this.charAttributes(this.params);\n\t            }\n\t            break;\n\t\n\t          // CSI Ps n  Device Status Report (DSR).\n\t          case 'n':\n\t            if (!this.prefix) {\n\t              this.deviceStatus(this.params);\n\t            }\n\t            break;\n\t\n\t          /**\n\t           * Additions\n\t           */\n\t\n\t          // CSI Ps @\n\t          // Insert Ps (Blank) Character(s) (default = 1) (ICH).\n\t          case '@':\n\t            this.insertChars(this.params);\n\t            break;\n\t\n\t          // CSI Ps E\n\t          // Cursor Next Line Ps Times (default = 1) (CNL).\n\t          case 'E':\n\t            this.cursorNextLine(this.params);\n\t            break;\n\t\n\t          // CSI Ps F\n\t          // Cursor Preceding Line Ps Times (default = 1) (CNL).\n\t          case 'F':\n\t            this.cursorPrecedingLine(this.params);\n\t            break;\n\t\n\t          // CSI Ps G\n\t          // Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n\t          case 'G':\n\t            this.cursorCharAbsolute(this.params);\n\t            break;\n\t\n\t          // CSI Ps L\n\t          // Insert Ps Line(s) (default = 1) (IL).\n\t          case 'L':\n\t            this.insertLines(this.params);\n\t            break;\n\t\n\t          // CSI Ps M\n\t          // Delete Ps Line(s) (default = 1) (DL).\n\t          case 'M':\n\t            this.deleteLines(this.params);\n\t            break;\n\t\n\t          // CSI Ps P\n\t          // Delete Ps Character(s) (default = 1) (DCH).\n\t          case 'P':\n\t            this.deleteChars(this.params);\n\t            break;\n\t\n\t          // CSI Ps X\n\t          // Erase Ps Character(s) (default = 1) (ECH).\n\t          case 'X':\n\t            this.eraseChars(this.params);\n\t            break;\n\t\n\t          // CSI Pm `  Character Position Absolute\n\t          //   [column] (default = [row,1]) (HPA).\n\t          case '`':\n\t            this.charPosAbsolute(this.params);\n\t            break;\n\t\n\t          // 141 61 a * HPR -\n\t          // Horizontal Position Relative\n\t          case 'a':\n\t            this.HPositionRelative(this.params);\n\t            break;\n\t\n\t          // CSI P s c\n\t          // Send Device Attributes (Primary DA).\n\t          // CSI > P s c\n\t          // Send Device Attributes (Secondary DA)\n\t          case 'c':\n\t            this.sendDeviceAttributes(this.params);\n\t            break;\n\t\n\t          // CSI Pm d\n\t          // Line Position Absolute  [row] (default = [1,column]) (VPA).\n\t          case 'd':\n\t            this.linePosAbsolute(this.params);\n\t            break;\n\t\n\t          // 145 65 e * VPR - Vertical Position Relative\n\t          case 'e':\n\t            this.VPositionRelative(this.params);\n\t            break;\n\t\n\t          // CSI Ps ; Ps f\n\t          //   Horizontal and Vertical Position [row;column] (default =\n\t          //   [1,1]) (HVP).\n\t          case 'f':\n\t            this.HVPosition(this.params);\n\t            break;\n\t\n\t          // CSI Pm h  Set Mode (SM).\n\t          // CSI ? Pm h - mouse escape codes, cursor escape codes\n\t          case 'h':\n\t            this.setMode(this.params);\n\t            break;\n\t\n\t          // CSI Pm l  Reset Mode (RM).\n\t          // CSI ? Pm l\n\t          case 'l':\n\t            this.resetMode(this.params);\n\t            break;\n\t\n\t          // CSI Ps ; Ps r\n\t          //   Set Scrolling Region [top;bottom] (default = full size of win-\n\t          //   dow) (DECSTBM).\n\t          // CSI ? Pm r\n\t          case 'r':\n\t            this.setScrollRegion(this.params);\n\t            break;\n\t\n\t          // CSI s\n\t          //   Save cursor (ANSI.SYS).\n\t          case 's':\n\t            this.saveCursor(this.params);\n\t            break;\n\t\n\t          // CSI u\n\t          //   Restore cursor (ANSI.SYS).\n\t          case 'u':\n\t            this.restoreCursor(this.params);\n\t            break;\n\t\n\t          /**\n\t           * Lesser Used\n\t           */\n\t\n\t          // CSI Ps I\n\t          // Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n\t          case 'I':\n\t            this.cursorForwardTab(this.params);\n\t            break;\n\t\n\t          // CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n\t          case 'S':\n\t            this.scrollUp(this.params);\n\t            break;\n\t\n\t          // CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n\t          // CSI Ps ; Ps ; Ps ; Ps ; Ps T\n\t          // CSI > Ps; Ps T\n\t          case 'T':\n\t            // if (this.prefix === '>') {\n\t            //   this.resetTitleModes(this.params);\n\t            //   break;\n\t            // }\n\t            // if (this.params.length > 2) {\n\t            //   this.initMouseTracking(this.params);\n\t            //   break;\n\t            // }\n\t            if (this.params.length < 2 && !this.prefix) {\n\t              this.scrollDown(this.params);\n\t            }\n\t            break;\n\t\n\t          // CSI Ps Z\n\t          // Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n\t          case 'Z':\n\t            this.cursorBackwardTab(this.params);\n\t            break;\n\t\n\t          // CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n\t          case 'b':\n\t            this.repeatPrecedingCharacter(this.params);\n\t            break;\n\t\n\t          // CSI Ps g  Tab Clear (TBC).\n\t          case 'g':\n\t            this.tabClear(this.params);\n\t            break;\n\t\n\t          // CSI Pm i  Media Copy (MC).\n\t          // CSI ? Pm i\n\t          // case 'i':\n\t          //   this.mediaCopy(this.params);\n\t          //   break;\n\t\n\t          // CSI Pm m  Character Attributes (SGR).\n\t          // CSI > Ps; Ps m\n\t          // case 'm': // duplicate\n\t          //   if (this.prefix === '>') {\n\t          //     this.setResources(this.params);\n\t          //   } else {\n\t          //     this.charAttributes(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI Ps n  Device Status Report (DSR).\n\t          // CSI > Ps n\n\t          // case 'n': // duplicate\n\t          //   if (this.prefix === '>') {\n\t          //     this.disableModifiers(this.params);\n\t          //   } else {\n\t          //     this.deviceStatus(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI > Ps p  Set pointer mode.\n\t          // CSI ! p   Soft terminal reset (DECSTR).\n\t          // CSI Ps$ p\n\t          //   Request ANSI mode (DECRQM).\n\t          // CSI ? Ps$ p\n\t          //   Request DEC private mode (DECRQM).\n\t          // CSI Ps ; Ps \" p\n\t          case 'p':\n\t            switch (this.prefix) {\n\t              // case '>':\n\t              //   this.setPointerMode(this.params);\n\t              //   break;\n\t              case '!':\n\t                this.softReset(this.params);\n\t                break;\n\t              // case '?':\n\t              //   if (this.postfix === '$') {\n\t              //     this.requestPrivateMode(this.params);\n\t              //   }\n\t              //   break;\n\t              // default:\n\t              //   if (this.postfix === '\"') {\n\t              //     this.setConformanceLevel(this.params);\n\t              //   } else if (this.postfix === '$') {\n\t              //     this.requestAnsiMode(this.params);\n\t              //   }\n\t              //   break;\n\t            }\n\t            break;\n\t\n\t          // CSI Ps q  Load LEDs (DECLL).\n\t          // CSI Ps SP q\n\t          // CSI Ps \" q\n\t          // case 'q':\n\t          //   if (this.postfix === ' ') {\n\t          //     this.setCursorStyle(this.params);\n\t          //     break;\n\t          //   }\n\t          //   if (this.postfix === '\"') {\n\t          //     this.setCharProtectionAttr(this.params);\n\t          //     break;\n\t          //   }\n\t          //   this.loadLEDs(this.params);\n\t          //   break;\n\t\n\t          // CSI Ps ; Ps r\n\t          //   Set Scrolling Region [top;bottom] (default = full size of win-\n\t          //   dow) (DECSTBM).\n\t          // CSI ? Pm r\n\t          // CSI Pt; Pl; Pb; Pr; Ps$ r\n\t          // case 'r': // duplicate\n\t          //   if (this.prefix === '?') {\n\t          //     this.restorePrivateValues(this.params);\n\t          //   } else if (this.postfix === '$') {\n\t          //     this.setAttrInRectangle(this.params);\n\t          //   } else {\n\t          //     this.setScrollRegion(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI s     Save cursor (ANSI.SYS).\n\t          // CSI ? Pm s\n\t          // case 's': // duplicate\n\t          //   if (this.prefix === '?') {\n\t          //     this.savePrivateValues(this.params);\n\t          //   } else {\n\t          //     this.saveCursor(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI Ps ; Ps ; Ps t\n\t          // CSI Pt; Pl; Pb; Pr; Ps$ t\n\t          // CSI > Ps; Ps t\n\t          // CSI Ps SP t\n\t          // case 't':\n\t          //   if (this.postfix === '$') {\n\t          //     this.reverseAttrInRectangle(this.params);\n\t          //   } else if (this.postfix === ' ') {\n\t          //     this.setWarningBellVolume(this.params);\n\t          //   } else {\n\t          //     if (this.prefix === '>') {\n\t          //       this.setTitleModeFeature(this.params);\n\t          //     } else {\n\t          //       this.manipulateWindow(this.params);\n\t          //     }\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI u     Restore cursor (ANSI.SYS).\n\t          // CSI Ps SP u\n\t          // case 'u': // duplicate\n\t          //   if (this.postfix === ' ') {\n\t          //     this.setMarginBellVolume(this.params);\n\t          //   } else {\n\t          //     this.restoreCursor(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI Pt; Pl; Pb; Pr; Pp; Pt; Pl; Pp$ v\n\t          // case 'v':\n\t          //   if (this.postfix === '$') {\n\t          //     this.copyRectagle(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI Pt ; Pl ; Pb ; Pr ' w\n\t          // case 'w':\n\t          //   if (this.postfix === '\\'') {\n\t          //     this.enableFilterRectangle(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI Ps x  Request Terminal Parameters (DECREQTPARM).\n\t          // CSI Ps x  Select Attribute Change Extent (DECSACE).\n\t          // CSI Pc; Pt; Pl; Pb; Pr$ x\n\t          // case 'x':\n\t          //   if (this.postfix === '$') {\n\t          //     this.fillRectangle(this.params);\n\t          //   } else {\n\t          //     this.requestParameters(this.params);\n\t          //     //this.__(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI Ps ; Pu ' z\n\t          // CSI Pt; Pl; Pb; Pr$ z\n\t          // case 'z':\n\t          //   if (this.postfix === '\\'') {\n\t          //     this.enableLocatorReporting(this.params);\n\t          //   } else if (this.postfix === '$') {\n\t          //     this.eraseRectangle(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI Pm ' {\n\t          // CSI Pt; Pl; Pb; Pr$ {\n\t          // case '{':\n\t          //   if (this.postfix === '\\'') {\n\t          //     this.setLocatorEvents(this.params);\n\t          //   } else if (this.postfix === '$') {\n\t          //     this.selectiveEraseRectangle(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI Ps ' |\n\t          // case '|':\n\t          //   if (this.postfix === '\\'') {\n\t          //     this.requestLocatorPosition(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI P m SP }\n\t          // Insert P s Column(s) (default = 1) (DECIC), VT420 and up.\n\t          // case '}':\n\t          //   if (this.postfix === ' ') {\n\t          //     this.insertColumns(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI P m SP ~\n\t          // Delete P s Column(s) (default = 1) (DECDC), VT420 and up\n\t          // case '~':\n\t          //   if (this.postfix === ' ') {\n\t          //     this.deleteColumns(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          default:\n\t            this.error('Unknown CSI code: %s.', ch);\n\t            break;\n\t        }\n\t\n\t        this.prefix = '';\n\t        this.postfix = '';\n\t        break;\n\t\n\t      case dcs:\n\t        if ((this.lch === '\\x1b' && ch === '\\\\') || ch === '\\x07') {\n\t          // Workarounds:\n\t          if (this.prefix === 'tmux;\\x1b') {\n\t            // `DCS tmux; Pt ST` may contain a Pt with an ST\n\t            // XXX Does tmux work this way?\n\t            // if (this.lch === '\\x1b' & data[i + 1] === '\\x1b' && data[i + 2] === '\\\\') {\n\t            //   this.currentParam += ch;\n\t            //   continue;\n\t            // }\n\t            // Tmux only accepts ST, not BEL:\n\t            if (ch === '\\x07') {\n\t              this.currentParam += ch;\n\t              continue;\n\t            }\n\t          }\n\t\n\t          if (this.lch === '\\x1b') {\n\t            if (typeof this.currentParam === 'string') {\n\t              this.currentParam = this.currentParam.slice(0, -1);\n\t            } else if (typeof this.currentParam == 'number') {\n\t              this.currentParam = (this.currentParam - ('\\x1b'.charCodeAt(0) - 48)) / 10;\n\t            }\n\t          }\n\t\n\t          this.params.push(this.currentParam);\n\t\n\t          var pt = this.params[this.params.length - 1];\n\t\n\t          switch (this.prefix) {\n\t            // User-Defined Keys (DECUDK).\n\t            // DCS Ps; Ps| Pt ST\n\t            case UDK:\n\t              this.emit('udk', {\n\t                clearAll: this.params[0] === 0,\n\t                eraseBelow: this.params[0] === 1,\n\t                lockKeys: this.params[1] === 0,\n\t                dontLockKeys: this.params[1] === 1,\n\t                keyList: (this.params[2] + '').split(';').map(function(part) {\n\t                  part = part.split('/');\n\t                  return {\n\t                    keyCode: part[0],\n\t                    hexKeyValue: part[1]\n\t                  };\n\t                })\n\t              });\n\t              break;\n\t\n\t            // Request Status String (DECRQSS).\n\t            // DCS $ q Pt ST\n\t            // test: echo -e '\\eP$q\"p\\e\\\\'\n\t            case '$q':\n\t              var valid = 0;\n\t\n\t              switch (pt) {\n\t                // DECSCA\n\t                // CSI Ps \" q\n\t                case '\"q':\n\t                  pt = '0\"q';\n\t                  valid = 1;\n\t                  break;\n\t\n\t                // DECSCL\n\t                // CSI Ps ; Ps \" p\n\t                case '\"p':\n\t                  pt = '61;0\"p';\n\t                  valid = 1;\n\t                  break;\n\t\n\t                // DECSTBM\n\t                // CSI Ps ; Ps r\n\t                case 'r':\n\t                  pt = ''\n\t                    + (this.scrollTop + 1)\n\t                    + ';'\n\t                    + (this.scrollBottom + 1)\n\t                    + 'r';\n\t                  valid = 1;\n\t                  break;\n\t\n\t                // SGR\n\t                // CSI Pm m\n\t                case 'm':\n\t                  // TODO: Parse this.curAttr here.\n\t                  // pt = '0m';\n\t                  // valid = 1;\n\t                  valid = 0; // Not implemented.\n\t                  break;\n\t\n\t                default:\n\t                  this.error('Unknown DCS Pt: %s.', pt);\n\t                  valid = 0; // unimplemented\n\t                  break;\n\t              }\n\t\n\t              this.send('\\x1bP' + valid + '$r' + pt + '\\x1b\\\\');\n\t              break;\n\t\n\t            // Set Termcap/Terminfo Data (xterm, experimental).\n\t            // DCS + p Pt ST\n\t            case '+p':\n\t              this.emit('set terminfo', {\n\t                name: this.params[0]\n\t              });\n\t              break;\n\t\n\t            // Request Termcap/Terminfo String (xterm, experimental)\n\t            // Regular xterm does not even respond to this sequence.\n\t            // This can cause a small glitch in vim.\n\t            // DCS + q Pt ST\n\t            // test: echo -ne '\\eP+q6b64\\e\\\\'\n\t            case '+q':\n\t              var valid = false;\n\t              this.send('\\x1bP' + +valid + '+r' + pt + '\\x1b\\\\');\n\t              break;\n\t\n\t            // Implement tmux sequence forwarding is\n\t            // someone uses term.js for a multiplexer.\n\t            // DCS tmux; ESC Pt ST\n\t            case 'tmux;\\x1b':\n\t              this.emit('passthrough', pt);\n\t              break;\n\t\n\t            default:\n\t              this.error('Unknown DCS prefix: %s.', pt);\n\t              break;\n\t          }\n\t\n\t          this.currentParam = 0;\n\t          this.prefix = '';\n\t          this.state = normal;\n\t        } else {\n\t          this.currentParam += ch;\n\t          if (!this.prefix) {\n\t            if (/^\\d*;\\d*\\|/.test(this.currentParam)) {\n\t              this.prefix = UDK;\n\t              this.params = this.currentParam.split(/[;|]/).map(function(n) {\n\t                if (!n.length) return 0;\n\t                return +n;\n\t              }).slice(0, -1);\n\t              this.currentParam = '';\n\t            } else if (/^[$+][a-zA-Z]/.test(this.currentParam)\n\t                || /^\\w+;\\x1b/.test(this.currentParam)) {\n\t              this.prefix = this.currentParam;\n\t              this.currentParam = '';\n\t            }\n\t          }\n\t        }\n\t        break;\n\t\n\t      case ignore:\n\t        // For PM and APC.\n\t        if ((this.lch === '\\x1b' && ch === '\\\\') || ch === '\\x07') {\n\t          this.state = normal;\n\t        }\n\t        break;\n\t    }\n\t  }\n\t\n\t  this.updateRange(this.y);\n\t  this.refresh(this.refreshStart, this.refreshEnd);\n\t\n\t  return true;\n\t};\n\t\n\tTerminal.prototype.writeln = function(data) {\n\t  return this.write(data + '\\r\\n');\n\t};\n\t\n\tTerminal.prototype.end = function(data) {\n\t  var ret = true;\n\t  if (data) {\n\t    ret = this.write(data);\n\t  }\n\t  this.destroySoon();\n\t  return ret;\n\t};\n\t\n\tTerminal.prototype.resume = function() {\n\t  ;\n\t};\n\t\n\tTerminal.prototype.pause = function() {\n\t  ;\n\t};\n\t\n\t// Key Resources:\n\t// https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n\tTerminal.prototype.keyDown = function(ev) {\n\t  var self = this\n\t    , key;\n\t\n\t  switch (ev.keyCode) {\n\t    // backspace\n\t    case 8:\n\t      if (ev.altKey) {\n\t        key = '\\x17';\n\t        break;\n\t      }\n\t      if (ev.shiftKey) {\n\t        key = '\\x08'; // ^H\n\t        break;\n\t      }\n\t      key = '\\x7f'; // ^?\n\t      break;\n\t    // tab\n\t    case 9:\n\t      if (ev.shiftKey) {\n\t        key = '\\x1b[Z';\n\t        break;\n\t      }\n\t      key = '\\t';\n\t      break;\n\t    // return/enter\n\t    case 13:\n\t      key = '\\r';\n\t      break;\n\t    // escape\n\t    case 27:\n\t      key = '\\x1b';\n\t      break;\n\t    // space\n\t    case 32:\n\t      key = '\\x20';\n\t      break;\n\t    // left-arrow\n\t    case 37:\n\t      if (this.applicationCursor) {\n\t        key = '\\x1bOD'; // SS3 as ^[O for 7-bit\n\t        //key = '\\x8fD'; // SS3 as 0x8f for 8-bit\n\t        break;\n\t      }\n\t      if (ev.ctrlKey) {\n\t        key = '\\x1b[5D';\n\t        break;\n\t      }\n\t      key = '\\x1b[D';\n\t      break;\n\t    // right-arrow\n\t    case 39:\n\t      if (this.applicationCursor) {\n\t        key = '\\x1bOC';\n\t        break;\n\t      }\n\t      if (ev.ctrlKey) {\n\t        key = '\\x1b[5C';\n\t        break;\n\t      }\n\t      key = '\\x1b[C';\n\t      break;\n\t    // up-arrow\n\t    case 38:\n\t      if (this.applicationCursor) {\n\t        key = '\\x1bOA';\n\t        break;\n\t      }\n\t      if (ev.ctrlKey) {\n\t        this.scrollDisp(-1);\n\t        return cancel(ev);\n\t      } else {\n\t        key = '\\x1b[A';\n\t      }\n\t      break;\n\t    // down-arrow\n\t    case 40:\n\t      if (this.applicationCursor) {\n\t        key = '\\x1bOB';\n\t        break;\n\t      }\n\t      if (ev.ctrlKey) {\n\t        this.scrollDisp(1);\n\t        return cancel(ev);\n\t      } else {\n\t        key = '\\x1b[B';\n\t      }\n\t      break;\n\t    // delete\n\t    case 46:\n\t      key = '\\x1b[3~';\n\t      break;\n\t    // insert\n\t    case 45:\n\t      key = '\\x1b[2~';\n\t      break;\n\t    // home\n\t    case 36:\n\t      if (this.applicationKeypad) {\n\t        key = '\\x1bOH';\n\t        break;\n\t      }\n\t      key = '\\x1bOH';\n\t      break;\n\t    // end\n\t    case 35:\n\t      if (this.applicationKeypad) {\n\t        key = '\\x1bOF';\n\t        break;\n\t      }\n\t      key = '\\x1bOF';\n\t      break;\n\t    // page up\n\t    case 33:\n\t      if (ev.shiftKey) {\n\t        this.scrollDisp(-(this.rows - 1));\n\t        return cancel(ev);\n\t      } else {\n\t        key = '\\x1b[5~';\n\t      }\n\t      break;\n\t    // page down\n\t    case 34:\n\t      if (ev.shiftKey) {\n\t        this.scrollDisp(this.rows - 1);\n\t        return cancel(ev);\n\t      } else {\n\t        key = '\\x1b[6~';\n\t      }\n\t      break;\n\t    // F1\n\t    case 112:\n\t      key = '\\x1bOP';\n\t      break;\n\t    // F2\n\t    case 113:\n\t      key = '\\x1bOQ';\n\t      break;\n\t    // F3\n\t    case 114:\n\t      key = '\\x1bOR';\n\t      break;\n\t    // F4\n\t    case 115:\n\t      key = '\\x1bOS';\n\t      break;\n\t    // F5\n\t    case 116:\n\t      key = '\\x1b[15~';\n\t      break;\n\t    // F6\n\t    case 117:\n\t      key = '\\x1b[17~';\n\t      break;\n\t    // F7\n\t    case 118:\n\t      key = '\\x1b[18~';\n\t      break;\n\t    // F8\n\t    case 119:\n\t      key = '\\x1b[19~';\n\t      break;\n\t    // F9\n\t    case 120:\n\t      key = '\\x1b[20~';\n\t      break;\n\t    // F10\n\t    case 121:\n\t      key = '\\x1b[21~';\n\t      break;\n\t    // F11\n\t    case 122:\n\t      key = '\\x1b[23~';\n\t      break;\n\t    // F12\n\t    case 123:\n\t      key = '\\x1b[24~';\n\t      break;\n\t    default:\n\t      // a-z and space\n\t      if (ev.ctrlKey) {\n\t        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n\t          // Ctrl-A\n\t          if (this.screenKeys) {\n\t            if (!this.prefixMode && !this.selectMode && ev.keyCode === 65) {\n\t              this.enterPrefix();\n\t              return cancel(ev);\n\t            }\n\t          }\n\t          // Ctrl-V\n\t          if (this.prefixMode && ev.keyCode === 86) {\n\t            this.leavePrefix();\n\t            return;\n\t          }\n\t          // Ctrl-C\n\t          if ((this.prefixMode || this.selectMode) && ev.keyCode === 67) {\n\t            if (this.visualMode) {\n\t              setTimeout(function() {\n\t                self.leaveVisual();\n\t              }, 1);\n\t            }\n\t            return;\n\t          }\n\t          key = String.fromCharCode(ev.keyCode - 64);\n\t        } else if (ev.keyCode === 32) {\n\t          // NUL\n\t          key = String.fromCharCode(0);\n\t        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n\t          // escape, file sep, group sep, record sep, unit sep\n\t          key = String.fromCharCode(ev.keyCode - 51 + 27);\n\t        } else if (ev.keyCode === 56) {\n\t          // delete\n\t          key = String.fromCharCode(127);\n\t        } else if (ev.keyCode === 219) {\n\t          // ^[ - escape\n\t          key = String.fromCharCode(27);\n\t        } else if (ev.keyCode === 221) {\n\t          // ^] - group sep\n\t          key = String.fromCharCode(29);\n\t        }\n\t      } else if (ev.altKey) {\n\t        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n\t          key = '\\x1b' + String.fromCharCode(ev.keyCode + 32);\n\t        } else if (ev.keyCode === 192) {\n\t          key = '\\x1b`';\n\t        } else if (ev.keyCode >= 48 && ev.keyCode <= 57) {\n\t          key = '\\x1b' + (ev.keyCode - 48);\n\t        }\n\t      }\n\t      break;\n\t  }\n\t\n\t  if (!key) return true;\n\t\n\t  if (this.prefixMode) {\n\t    this.leavePrefix();\n\t    return cancel(ev);\n\t  }\n\t\n\t  if (this.selectMode) {\n\t    this.keySelect(ev, key);\n\t    return cancel(ev);\n\t  }\n\t\n\t  this.emit('keydown', ev);\n\t  this.emit('key', key, ev);\n\t\n\t  this.showCursor();\n\t  this.handler(key);\n\t\n\t  return cancel(ev);\n\t};\n\t\n\tTerminal.prototype.setgLevel = function(g) {\n\t  this.glevel = g;\n\t  this.charset = this.charsets[g];\n\t};\n\t\n\tTerminal.prototype.setgCharset = function(g, charset) {\n\t  this.charsets[g] = charset;\n\t  if (this.glevel === g) {\n\t    this.charset = charset;\n\t  }\n\t};\n\t\n\tTerminal.prototype.keyPress = function(ev) {\n\t  var key;\n\t\n\t  cancel(ev);\n\t\n\t  if (ev.charCode) {\n\t    key = ev.charCode;\n\t  } else if (ev.which == null) {\n\t    key = ev.keyCode;\n\t  } else if (ev.which !== 0 && ev.charCode !== 0) {\n\t    key = ev.which;\n\t  } else {\n\t    return false;\n\t  }\n\t\n\t  if (!key || ev.ctrlKey || ev.altKey || ev.metaKey) return false;\n\t\n\t  key = String.fromCharCode(key);\n\t\n\t  if (this.prefixMode) {\n\t    this.leavePrefix();\n\t    this.keyPrefix(ev, key);\n\t    return false;\n\t  }\n\t\n\t  if (this.selectMode) {\n\t    this.keySelect(ev, key);\n\t    return false;\n\t  }\n\t\n\t  this.emit('keypress', key, ev);\n\t  this.emit('key', key, ev);\n\t\n\t  this.showCursor();\n\t  this.handler(key);\n\t\n\t  return false;\n\t};\n\t\n\tTerminal.prototype.send = function(data) {\n\t  var self = this;\n\t\n\t  if (!this.queue) {\n\t    setTimeout(function() {\n\t      self.handler(self.queue);\n\t      self.queue = '';\n\t    }, 1);\n\t  }\n\t\n\t  this.queue += data;\n\t};\n\t\n\tTerminal.prototype.bell = function() {\n\t  this.emit('bell');\n\t  if (!this.visualBell) return;\n\t  var self = this;\n\t  this.element.style.borderColor = 'white';\n\t  setTimeout(function() {\n\t    self.element.style.borderColor = '';\n\t  }, 10);\n\t  if (this.popOnBell) this.focus();\n\t};\n\t\n\tTerminal.prototype.log = function() {\n\t  if (!this.debug) return;\n\t  if (!this.context.console || !this.context.console.log) return;\n\t  var args = Array.prototype.slice.call(arguments);\n\t  this.context.console.log.apply(this.context.console, args);\n\t};\n\t\n\tTerminal.prototype.error = function() {\n\t  if (!this.debug) return;\n\t  if (!this.context.console || !this.context.console.error) return;\n\t  var args = Array.prototype.slice.call(arguments);\n\t  this.context.console.error.apply(this.context.console, args);\n\t};\n\t\n\tTerminal.prototype.resize = function(x, y) {\n\t  var line\n\t    , el\n\t    , i\n\t    , j\n\t    , ch;\n\t\n\t  if (x < 1) x = 1;\n\t  if (y < 1) y = 1;\n\t\n\t  // resize cols\n\t  j = this.cols;\n\t  if (j < x) {\n\t    ch = [this.defAttr, ' ']; // does xterm use the default attr?\n\t    i = this.lines.length;\n\t    while (i--) {\n\t      while (this.lines[i].length < x) {\n\t        this.lines[i].push(ch);\n\t      }\n\t    }\n\t  } else if (j > x) {\n\t    i = this.lines.length;\n\t    while (i--) {\n\t      while (this.lines[i].length > x) {\n\t        this.lines[i].pop();\n\t      }\n\t    }\n\t  }\n\t  this.setupStops(j);\n\t  this.cols = x;\n\t  this.columns = x;\n\t\n\t  // resize rows\n\t  j = this.rows;\n\t  if (j < y) {\n\t    el = this.element;\n\t    while (j++ < y) {\n\t      if (this.lines.length < y + this.ybase) {\n\t        this.lines.push(this.blankLine());\n\t      }\n\t      if (this.children.length < y) {\n\t        line = this.document.createElement('div');\n\t        el.appendChild(line);\n\t        this.children.push(line);\n\t      }\n\t    }\n\t  } else if (j > y) {\n\t    while (j-- > y) {\n\t      if (this.lines.length > y + this.ybase) {\n\t        this.lines.pop();\n\t      }\n\t      if (this.children.length > y) {\n\t        el = this.children.pop();\n\t        if (!el) continue;\n\t        el.parentNode.removeChild(el);\n\t      }\n\t    }\n\t  }\n\t  this.rows = y;\n\t\n\t  // make sure the cursor stays on screen\n\t  if (this.y >= y) this.y = y - 1;\n\t  if (this.x >= x) this.x = x - 1;\n\t\n\t  this.scrollTop = 0;\n\t  this.scrollBottom = y - 1;\n\t\n\t  this.refresh(0, this.rows - 1);\n\t\n\t  // it's a real nightmare trying\n\t  // to resize the original\n\t  // screen buffer. just set it\n\t  // to null for now.\n\t  this.normal = null;\n\t\n\t  // Act as though we are a node TTY stream:\n\t  this.emit('resize');\n\t};\n\t\n\tTerminal.prototype.updateRange = function(y) {\n\t  if (y < this.refreshStart) this.refreshStart = y;\n\t  if (y > this.refreshEnd) this.refreshEnd = y;\n\t  // if (y > this.refreshEnd) {\n\t  //   this.refreshEnd = y;\n\t  //   if (y > this.rows - 1) {\n\t  //     this.refreshEnd = this.rows - 1;\n\t  //   }\n\t  // }\n\t};\n\t\n\tTerminal.prototype.maxRange = function() {\n\t  this.refreshStart = 0;\n\t  this.refreshEnd = this.rows - 1;\n\t};\n\t\n\tTerminal.prototype.setupStops = function(i) {\n\t  if (i != null) {\n\t    if (!this.tabs[i]) {\n\t      i = this.prevStop(i);\n\t    }\n\t  } else {\n\t    this.tabs = {};\n\t    i = 0;\n\t  }\n\t\n\t  for (; i < this.cols; i += 8) {\n\t    this.tabs[i] = true;\n\t  }\n\t};\n\t\n\tTerminal.prototype.prevStop = function(x) {\n\t  if (x == null) x = this.x;\n\t  while (!this.tabs[--x] && x > 0);\n\t  return x >= this.cols\n\t    ? this.cols - 1\n\t    : x < 0 ? 0 : x;\n\t};\n\t\n\tTerminal.prototype.nextStop = function(x) {\n\t  if (x == null) x = this.x;\n\t  while (!this.tabs[++x] && x < this.cols);\n\t  return x >= this.cols\n\t    ? this.cols - 1\n\t    : x < 0 ? 0 : x;\n\t};\n\t\n\t// back_color_erase feature for xterm.\n\tTerminal.prototype.eraseAttr = function() {\n\t  // if (this.is('screen')) return this.defAttr;\n\t  return (this.defAttr & ~0x1ff) | (this.curAttr & 0x1ff);\n\t};\n\t\n\tTerminal.prototype.eraseRight = function(x, y) {\n\t  var line = this.lines[this.ybase + y]\n\t    , ch = [this.eraseAttr(), ' ']; // xterm\n\t\n\t\n\t  for (; x < this.cols; x++) {\n\t    line[x] = ch;\n\t  }\n\t\n\t  this.updateRange(y);\n\t};\n\t\n\tTerminal.prototype.eraseLeft = function(x, y) {\n\t  var line = this.lines[this.ybase + y]\n\t    , ch = [this.eraseAttr(), ' ']; // xterm\n\t\n\t  x++;\n\t  while (x--) line[x] = ch;\n\t\n\t  this.updateRange(y);\n\t};\n\t\n\tTerminal.prototype.eraseLine = function(y) {\n\t  this.eraseRight(0, y);\n\t};\n\t\n\tTerminal.prototype.blankLine = function(cur) {\n\t  var attr = cur\n\t    ? this.eraseAttr()\n\t    : this.defAttr;\n\t\n\t  var ch = [attr, ' ']\n\t    , line = []\n\t    , i = 0;\n\t\n\t  for (; i < this.cols; i++) {\n\t    line[i] = ch;\n\t  }\n\t\n\t  return line;\n\t};\n\t\n\tTerminal.prototype.ch = function(cur) {\n\t  return cur\n\t    ? [this.eraseAttr(), ' ']\n\t    : [this.defAttr, ' '];\n\t};\n\t\n\tTerminal.prototype.is = function(term) {\n\t  var name = this.termName;\n\t  return (name + '').indexOf(term) === 0;\n\t};\n\t\n\tTerminal.prototype.handler = function(data) {\n\t  this.emit('data', data);\n\t};\n\t\n\tTerminal.prototype.handleTitle = function(title) {\n\t  this.emit('title', title);\n\t};\n\t\n\t/**\n\t * ESC\n\t */\n\t\n\t// ESC D Index (IND is 0x84).\n\tTerminal.prototype.index = function() {\n\t  this.y++;\n\t  if (this.y > this.scrollBottom) {\n\t    this.y--;\n\t    this.scroll();\n\t  }\n\t  this.state = normal;\n\t};\n\t\n\t// ESC M Reverse Index (RI is 0x8d).\n\tTerminal.prototype.reverseIndex = function() {\n\t  var j;\n\t  this.y--;\n\t  if (this.y < this.scrollTop) {\n\t    this.y++;\n\t    // possibly move the code below to term.reverseScroll();\n\t    // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n\t    // blankLine(true) is xterm/linux behavior\n\t    this.lines.splice(this.y + this.ybase, 0, this.blankLine(true));\n\t    j = this.rows - 1 - this.scrollBottom;\n\t    this.lines.splice(this.rows - 1 + this.ybase - j + 1, 1);\n\t    // this.maxRange();\n\t    this.updateRange(this.scrollTop);\n\t    this.updateRange(this.scrollBottom);\n\t  }\n\t  this.state = normal;\n\t};\n\t\n\t// ESC c Full Reset (RIS).\n\tTerminal.prototype.reset = function() {\n\t  this.options.rows = this.rows;\n\t  this.options.cols = this.cols;\n\t  Terminal.call(this, this.options);\n\t  this.refresh(0, this.rows - 1);\n\t};\n\t\n\t// ESC H Tab Set (HTS is 0x88).\n\tTerminal.prototype.tabSet = function() {\n\t  this.tabs[this.x] = true;\n\t  this.state = normal;\n\t};\n\t\n\t/**\n\t * CSI\n\t */\n\t\n\t// CSI Ps A\n\t// Cursor Up Ps Times (default = 1) (CUU).\n\tTerminal.prototype.cursorUp = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.y -= param;\n\t  if (this.y < 0) this.y = 0;\n\t};\n\t\n\t// CSI Ps B\n\t// Cursor Down Ps Times (default = 1) (CUD).\n\tTerminal.prototype.cursorDown = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.y += param;\n\t  if (this.y >= this.rows) {\n\t    this.y = this.rows - 1;\n\t  }\n\t};\n\t\n\t// CSI Ps C\n\t// Cursor Forward Ps Times (default = 1) (CUF).\n\tTerminal.prototype.cursorForward = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.x += param;\n\t  if (this.x >= this.cols) {\n\t    this.x = this.cols - 1;\n\t  }\n\t};\n\t\n\t// CSI Ps D\n\t// Cursor Backward Ps Times (default = 1) (CUB).\n\tTerminal.prototype.cursorBackward = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.x -= param;\n\t  if (this.x < 0) this.x = 0;\n\t};\n\t\n\t// CSI Ps ; Ps H\n\t// Cursor Position [row;column] (default = [1,1]) (CUP).\n\tTerminal.prototype.cursorPos = function(params) {\n\t  var row, col;\n\t\n\t  row = params[0] - 1;\n\t\n\t  if (params.length >= 2) {\n\t    col = params[1] - 1;\n\t  } else {\n\t    col = 0;\n\t  }\n\t\n\t  if (row < 0) {\n\t    row = 0;\n\t  } else if (row >= this.rows) {\n\t    row = this.rows - 1;\n\t  }\n\t\n\t  if (col < 0) {\n\t    col = 0;\n\t  } else if (col >= this.cols) {\n\t    col = this.cols - 1;\n\t  }\n\t\n\t  this.x = col;\n\t  this.y = row;\n\t};\n\t\n\t// CSI Ps J  Erase in Display (ED).\n\t//     Ps = 0  -> Erase Below (default).\n\t//     Ps = 1  -> Erase Above.\n\t//     Ps = 2  -> Erase All.\n\t//     Ps = 3  -> Erase Saved Lines (xterm).\n\t// CSI ? Ps J\n\t//   Erase in Display (DECSED).\n\t//     Ps = 0  -> Selective Erase Below (default).\n\t//     Ps = 1  -> Selective Erase Above.\n\t//     Ps = 2  -> Selective Erase All.\n\tTerminal.prototype.eraseInDisplay = function(params) {\n\t  var j;\n\t  switch (params[0]) {\n\t    case 0:\n\t      this.eraseRight(this.x, this.y);\n\t      j = this.y + 1;\n\t      for (; j < this.rows; j++) {\n\t        this.eraseLine(j);\n\t      }\n\t      break;\n\t    case 1:\n\t      this.eraseLeft(this.x, this.y);\n\t      j = this.y;\n\t      while (j--) {\n\t        this.eraseLine(j);\n\t      }\n\t      break;\n\t    case 2:\n\t      j = this.rows;\n\t      while (j--) this.eraseLine(j);\n\t      break;\n\t    case 3:\n\t      ; // no saved lines\n\t      break;\n\t  }\n\t};\n\t\n\t// CSI Ps K  Erase in Line (EL).\n\t//     Ps = 0  -> Erase to Right (default).\n\t//     Ps = 1  -> Erase to Left.\n\t//     Ps = 2  -> Erase All.\n\t// CSI ? Ps K\n\t//   Erase in Line (DECSEL).\n\t//     Ps = 0  -> Selective Erase to Right (default).\n\t//     Ps = 1  -> Selective Erase to Left.\n\t//     Ps = 2  -> Selective Erase All.\n\tTerminal.prototype.eraseInLine = function(params) {\n\t  switch (params[0]) {\n\t    case 0:\n\t      this.eraseRight(this.x, this.y);\n\t      break;\n\t    case 1:\n\t      this.eraseLeft(this.x, this.y);\n\t      break;\n\t    case 2:\n\t      this.eraseLine(this.y);\n\t      break;\n\t  }\n\t};\n\t\n\t// CSI Pm m  Character Attributes (SGR).\n\t//     Ps = 0  -> Normal (default).\n\t//     Ps = 1  -> Bold.\n\t//     Ps = 4  -> Underlined.\n\t//     Ps = 5  -> Blink (appears as Bold).\n\t//     Ps = 7  -> Inverse.\n\t//     Ps = 8  -> Invisible, i.e., hidden (VT300).\n\t//     Ps = 2 2  -> Normal (neither bold nor faint).\n\t//     Ps = 2 4  -> Not underlined.\n\t//     Ps = 2 5  -> Steady (not blinking).\n\t//     Ps = 2 7  -> Positive (not inverse).\n\t//     Ps = 2 8  -> Visible, i.e., not hidden (VT300).\n\t//     Ps = 3 0  -> Set foreground color to Black.\n\t//     Ps = 3 1  -> Set foreground color to Red.\n\t//     Ps = 3 2  -> Set foreground color to Green.\n\t//     Ps = 3 3  -> Set foreground color to Yellow.\n\t//     Ps = 3 4  -> Set foreground color to Blue.\n\t//     Ps = 3 5  -> Set foreground color to Magenta.\n\t//     Ps = 3 6  -> Set foreground color to Cyan.\n\t//     Ps = 3 7  -> Set foreground color to White.\n\t//     Ps = 3 9  -> Set foreground color to default (original).\n\t//     Ps = 4 0  -> Set background color to Black.\n\t//     Ps = 4 1  -> Set background color to Red.\n\t//     Ps = 4 2  -> Set background color to Green.\n\t//     Ps = 4 3  -> Set background color to Yellow.\n\t//     Ps = 4 4  -> Set background color to Blue.\n\t//     Ps = 4 5  -> Set background color to Magenta.\n\t//     Ps = 4 6  -> Set background color to Cyan.\n\t//     Ps = 4 7  -> Set background color to White.\n\t//     Ps = 4 9  -> Set background color to default (original).\n\t\n\t//   If 16-color support is compiled, the following apply.  Assume\n\t//   that xterm's resources are set so that the ISO color codes are\n\t//   the first 8 of a set of 16.  Then the aixterm colors are the\n\t//   bright versions of the ISO colors:\n\t//     Ps = 9 0  -> Set foreground color to Black.\n\t//     Ps = 9 1  -> Set foreground color to Red.\n\t//     Ps = 9 2  -> Set foreground color to Green.\n\t//     Ps = 9 3  -> Set foreground color to Yellow.\n\t//     Ps = 9 4  -> Set foreground color to Blue.\n\t//     Ps = 9 5  -> Set foreground color to Magenta.\n\t//     Ps = 9 6  -> Set foreground color to Cyan.\n\t//     Ps = 9 7  -> Set foreground color to White.\n\t//     Ps = 1 0 0  -> Set background color to Black.\n\t//     Ps = 1 0 1  -> Set background color to Red.\n\t//     Ps = 1 0 2  -> Set background color to Green.\n\t//     Ps = 1 0 3  -> Set background color to Yellow.\n\t//     Ps = 1 0 4  -> Set background color to Blue.\n\t//     Ps = 1 0 5  -> Set background color to Magenta.\n\t//     Ps = 1 0 6  -> Set background color to Cyan.\n\t//     Ps = 1 0 7  -> Set background color to White.\n\t\n\t//   If xterm is compiled with the 16-color support disabled, it\n\t//   supports the following, from rxvt:\n\t//     Ps = 1 0 0  -> Set foreground and background color to\n\t//     default.\n\t\n\t//   If 88- or 256-color support is compiled, the following apply.\n\t//     Ps = 3 8  ; 5  ; Ps -> Set foreground color to the second\n\t//     Ps.\n\t//     Ps = 4 8  ; 5  ; Ps -> Set background color to the second\n\t//     Ps.\n\tTerminal.prototype.charAttributes = function(params) {\n\t  // Optimize a single SGR0.\n\t  if (params.length === 1 && params[0] === 0) {\n\t    this.curAttr = this.defAttr;\n\t    return;\n\t  }\n\t\n\t  var l = params.length\n\t    , i = 0\n\t    , flags = this.curAttr >> 18\n\t    , fg = (this.curAttr >> 9) & 0x1ff\n\t    , bg = this.curAttr & 0x1ff\n\t    , p;\n\t\n\t  for (; i < l; i++) {\n\t    p = params[i];\n\t    if (p >= 30 && p <= 37) {\n\t      // fg color 8\n\t      fg = p - 30;\n\t    } else if (p >= 40 && p <= 47) {\n\t      // bg color 8\n\t      bg = p - 40;\n\t    } else if (p >= 90 && p <= 97) {\n\t      // fg color 16\n\t      p += 8;\n\t      fg = p - 90;\n\t    } else if (p >= 100 && p <= 107) {\n\t      // bg color 16\n\t      p += 8;\n\t      bg = p - 100;\n\t    } else if (p === 0) {\n\t      // default\n\t      flags = this.defAttr >> 18;\n\t      fg = (this.defAttr >> 9) & 0x1ff;\n\t      bg = this.defAttr & 0x1ff;\n\t      // flags = 0;\n\t      // fg = 0x1ff;\n\t      // bg = 0x1ff;\n\t    } else if (p === 1) {\n\t      // bold text\n\t      flags |= 1;\n\t    } else if (p === 4) {\n\t      // underlined text\n\t      flags |= 2;\n\t    } else if (p === 5) {\n\t      // blink\n\t      flags |= 4;\n\t    } else if (p === 7) {\n\t      // inverse and positive\n\t      // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n\t      flags |= 8;\n\t    } else if (p === 8) {\n\t      // invisible\n\t      flags |= 16;\n\t    } else if (p === 22) {\n\t      // not bold\n\t      flags &= ~1;\n\t    } else if (p === 24) {\n\t      // not underlined\n\t      flags &= ~2;\n\t    } else if (p === 25) {\n\t      // not blink\n\t      flags &= ~4;\n\t    } else if (p === 27) {\n\t      // not inverse\n\t      flags &= ~8;\n\t    } else if (p === 28) {\n\t      // not invisible\n\t      flags &= ~16;\n\t    } else if (p === 39) {\n\t      // reset fg\n\t      fg = (this.defAttr >> 9) & 0x1ff;\n\t    } else if (p === 49) {\n\t      // reset bg\n\t      bg = this.defAttr & 0x1ff;\n\t    } else if (p === 38) {\n\t      // fg color 256\n\t      if (params[i + 1] === 2) {\n\t        i += 2;\n\t        fg = matchColor(\n\t          params[i] & 0xff,\n\t          params[i + 1] & 0xff,\n\t          params[i + 2] & 0xff);\n\t        if (fg === -1) fg = 0x1ff;\n\t        i += 2;\n\t      } else if (params[i + 1] === 5) {\n\t        i += 2;\n\t        p = params[i] & 0xff;\n\t        fg = p;\n\t      }\n\t    } else if (p === 48) {\n\t      // bg color 256\n\t      if (params[i + 1] === 2) {\n\t        i += 2;\n\t        bg = matchColor(\n\t          params[i] & 0xff,\n\t          params[i + 1] & 0xff,\n\t          params[i + 2] & 0xff);\n\t        if (bg === -1) bg = 0x1ff;\n\t        i += 2;\n\t      } else if (params[i + 1] === 5) {\n\t        i += 2;\n\t        p = params[i] & 0xff;\n\t        bg = p;\n\t      }\n\t    } else if (p === 100) {\n\t      // reset fg/bg\n\t      fg = (this.defAttr >> 9) & 0x1ff;\n\t      bg = this.defAttr & 0x1ff;\n\t    } else {\n\t      this.error('Unknown SGR attribute: %d.', p);\n\t    }\n\t  }\n\t\n\t  this.curAttr = (flags << 18) | (fg << 9) | bg;\n\t};\n\t\n\t// CSI Ps n  Device Status Report (DSR).\n\t//     Ps = 5  -> Status Report.  Result (``OK'') is\n\t//   CSI 0 n\n\t//     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n\t//   Result is\n\t//   CSI r ; c R\n\t// CSI ? Ps n\n\t//   Device Status Report (DSR, DEC-specific).\n\t//     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n\t//     ? r ; c R (assumes page is zero).\n\t//     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n\t//     or CSI ? 1 1  n  (not ready).\n\t//     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n\t//     or CSI ? 2 1  n  (locked).\n\t//     Ps = 2 6  -> Report Keyboard status as\n\t//   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n\t//   The last two parameters apply to VT400 & up, and denote key-\n\t//   board ready and LK01 respectively.\n\t//     Ps = 5 3  -> Report Locator status as\n\t//   CSI ? 5 3  n  Locator available, if compiled-in, or\n\t//   CSI ? 5 0  n  No Locator, if not.\n\tTerminal.prototype.deviceStatus = function(params) {\n\t  if (!this.prefix) {\n\t    switch (params[0]) {\n\t      case 5:\n\t        // status report\n\t        this.send('\\x1b[0n');\n\t        break;\n\t      case 6:\n\t        // cursor position\n\t        this.send('\\x1b['\n\t          + (this.y + 1)\n\t          + ';'\n\t          + (this.x + 1)\n\t          + 'R');\n\t        break;\n\t    }\n\t  } else if (this.prefix === '?') {\n\t    // modern xterm doesnt seem to\n\t    // respond to any of these except ?6, 6, and 5\n\t    switch (params[0]) {\n\t      case 6:\n\t        // cursor position\n\t        this.send('\\x1b[?'\n\t          + (this.y + 1)\n\t          + ';'\n\t          + (this.x + 1)\n\t          + 'R');\n\t        break;\n\t      case 15:\n\t        // no printer\n\t        // this.send('\\x1b[?11n');\n\t        break;\n\t      case 25:\n\t        // dont support user defined keys\n\t        // this.send('\\x1b[?21n');\n\t        break;\n\t      case 26:\n\t        // north american keyboard\n\t        // this.send('\\x1b[?27;1;0;0n');\n\t        break;\n\t      case 53:\n\t        // no dec locator/mouse\n\t        // this.send('\\x1b[?50n');\n\t        break;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Additions\n\t */\n\t\n\t// CSI Ps @\n\t// Insert Ps (Blank) Character(s) (default = 1) (ICH).\n\tTerminal.prototype.insertChars = function(params) {\n\t  var param, row, j, ch;\n\t\n\t  param = params[0];\n\t  if (param < 1) param = 1;\n\t\n\t  row = this.y + this.ybase;\n\t  j = this.x;\n\t  ch = [this.eraseAttr(), ' ']; // xterm\n\t\n\t  while (param-- && j < this.cols) {\n\t    this.lines[row].splice(j++, 0, ch);\n\t    this.lines[row].pop();\n\t  }\n\t};\n\t\n\t// CSI Ps E\n\t// Cursor Next Line Ps Times (default = 1) (CNL).\n\t// same as CSI Ps B ?\n\tTerminal.prototype.cursorNextLine = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.y += param;\n\t  if (this.y >= this.rows) {\n\t    this.y = this.rows - 1;\n\t  }\n\t  this.x = 0;\n\t};\n\t\n\t// CSI Ps F\n\t// Cursor Preceding Line Ps Times (default = 1) (CNL).\n\t// reuse CSI Ps A ?\n\tTerminal.prototype.cursorPrecedingLine = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.y -= param;\n\t  if (this.y < 0) this.y = 0;\n\t  this.x = 0;\n\t};\n\t\n\t// CSI Ps G\n\t// Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n\tTerminal.prototype.cursorCharAbsolute = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.x = param - 1;\n\t};\n\t\n\t// CSI Ps L\n\t// Insert Ps Line(s) (default = 1) (IL).\n\tTerminal.prototype.insertLines = function(params) {\n\t  var param, row, j;\n\t\n\t  param = params[0];\n\t  if (param < 1) param = 1;\n\t  row = this.y + this.ybase;\n\t\n\t  j = this.rows - 1 - this.scrollBottom;\n\t  j = this.rows - 1 + this.ybase - j + 1;\n\t\n\t  while (param--) {\n\t    // test: echo -e '\\e[44m\\e[1L\\e[0m'\n\t    // blankLine(true) - xterm/linux behavior\n\t    this.lines.splice(row, 0, this.blankLine(true));\n\t    this.lines.splice(j, 1);\n\t  }\n\t\n\t  // this.maxRange();\n\t  this.updateRange(this.y);\n\t  this.updateRange(this.scrollBottom);\n\t};\n\t\n\t// CSI Ps M\n\t// Delete Ps Line(s) (default = 1) (DL).\n\tTerminal.prototype.deleteLines = function(params) {\n\t  var param, row, j;\n\t\n\t  param = params[0];\n\t  if (param < 1) param = 1;\n\t  row = this.y + this.ybase;\n\t\n\t  j = this.rows - 1 - this.scrollBottom;\n\t  j = this.rows - 1 + this.ybase - j;\n\t\n\t  while (param--) {\n\t    // test: echo -e '\\e[44m\\e[1M\\e[0m'\n\t    // blankLine(true) - xterm/linux behavior\n\t    this.lines.splice(j + 1, 0, this.blankLine(true));\n\t    this.lines.splice(row, 1);\n\t  }\n\t\n\t  // this.maxRange();\n\t  this.updateRange(this.y);\n\t  this.updateRange(this.scrollBottom);\n\t};\n\t\n\t// CSI Ps P\n\t// Delete Ps Character(s) (default = 1) (DCH).\n\tTerminal.prototype.deleteChars = function(params) {\n\t  var param, row, ch;\n\t\n\t  param = params[0];\n\t  if (param < 1) param = 1;\n\t\n\t  row = this.y + this.ybase;\n\t  ch = [this.eraseAttr(), ' ']; // xterm\n\t\n\t  while (param--) {\n\t    this.lines[row].splice(this.x, 1);\n\t    this.lines[row].push(ch);\n\t  }\n\t};\n\t\n\t// CSI Ps X\n\t// Erase Ps Character(s) (default = 1) (ECH).\n\tTerminal.prototype.eraseChars = function(params) {\n\t  var param, row, j, ch;\n\t\n\t  param = params[0];\n\t  if (param < 1) param = 1;\n\t\n\t  row = this.y + this.ybase;\n\t  j = this.x;\n\t  ch = [this.eraseAttr(), ' ']; // xterm\n\t\n\t  while (param-- && j < this.cols) {\n\t    this.lines[row][j++] = ch;\n\t  }\n\t};\n\t\n\t// CSI Pm `  Character Position Absolute\n\t//   [column] (default = [row,1]) (HPA).\n\tTerminal.prototype.charPosAbsolute = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.x = param - 1;\n\t  if (this.x >= this.cols) {\n\t    this.x = this.cols - 1;\n\t  }\n\t};\n\t\n\t// 141 61 a * HPR -\n\t// Horizontal Position Relative\n\t// reuse CSI Ps C ?\n\tTerminal.prototype.HPositionRelative = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.x += param;\n\t  if (this.x >= this.cols) {\n\t    this.x = this.cols - 1;\n\t  }\n\t};\n\t\n\t// CSI Ps c  Send Device Attributes (Primary DA).\n\t//     Ps = 0  or omitted -> request attributes from terminal.  The\n\t//     response depends on the decTerminalID resource setting.\n\t//     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n\t//     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n\t//     -> CSI ? 6 c  (``VT102'')\n\t//     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n\t//   The VT100-style response parameters do not mean anything by\n\t//   themselves.  VT220 parameters do, telling the host what fea-\n\t//   tures the terminal supports:\n\t//     Ps = 1  -> 132-columns.\n\t//     Ps = 2  -> Printer.\n\t//     Ps = 6  -> Selective erase.\n\t//     Ps = 8  -> User-defined keys.\n\t//     Ps = 9  -> National replacement character sets.\n\t//     Ps = 1 5  -> Technical characters.\n\t//     Ps = 2 2  -> ANSI color, e.g., VT525.\n\t//     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n\t// CSI > Ps c\n\t//   Send Device Attributes (Secondary DA).\n\t//     Ps = 0  or omitted -> request the terminal's identification\n\t//     code.  The response depends on the decTerminalID resource set-\n\t//     ting.  It should apply only to VT220 and up, but xterm extends\n\t//     this to VT100.\n\t//     -> CSI  > Pp ; Pv ; Pc c\n\t//   where Pp denotes the terminal type\n\t//     Pp = 0  -> ``VT100''.\n\t//     Pp = 1  -> ``VT220''.\n\t//   and Pv is the firmware version (for xterm, this was originally\n\t//   the XFree86 patch number, starting with 95).  In a DEC termi-\n\t//   nal, Pc indicates the ROM cartridge registration number and is\n\t//   always zero.\n\t// More information:\n\t//   xterm/charproc.c - line 2012, for more information.\n\t//   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n\tTerminal.prototype.sendDeviceAttributes = function(params) {\n\t  if (params[0] > 0) return;\n\t\n\t  if (!this.prefix) {\n\t    if (this.is('xterm')\n\t        || this.is('rxvt-unicode')\n\t        || this.is('screen')) {\n\t      this.send('\\x1b[?1;2c');\n\t    } else if (this.is('linux')) {\n\t      this.send('\\x1b[?6c');\n\t    }\n\t  } else if (this.prefix === '>') {\n\t    // xterm and urxvt\n\t    // seem to spit this\n\t    // out around ~370 times (?).\n\t    if (this.is('xterm')) {\n\t      this.send('\\x1b[>0;276;0c');\n\t    } else if (this.is('rxvt-unicode')) {\n\t      this.send('\\x1b[>85;95;0c');\n\t    } else if (this.is('linux')) {\n\t      // not supported by linux console.\n\t      // linux console echoes parameters.\n\t      this.send(params[0] + 'c');\n\t    } else if (this.is('screen')) {\n\t      this.send('\\x1b[>83;40003;0c');\n\t    }\n\t  }\n\t};\n\t\n\t// CSI Pm d\n\t// Line Position Absolute  [row] (default = [1,column]) (VPA).\n\tTerminal.prototype.linePosAbsolute = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.y = param - 1;\n\t  if (this.y >= this.rows) {\n\t    this.y = this.rows - 1;\n\t  }\n\t};\n\t\n\t// 145 65 e * VPR - Vertical Position Relative\n\t// reuse CSI Ps B ?\n\tTerminal.prototype.VPositionRelative = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.y += param;\n\t  if (this.y >= this.rows) {\n\t    this.y = this.rows - 1;\n\t  }\n\t};\n\t\n\t// CSI Ps ; Ps f\n\t//   Horizontal and Vertical Position [row;column] (default =\n\t//   [1,1]) (HVP).\n\tTerminal.prototype.HVPosition = function(params) {\n\t  if (params[0] < 1) params[0] = 1;\n\t  if (params[1] < 1) params[1] = 1;\n\t\n\t  this.y = params[0] - 1;\n\t  if (this.y >= this.rows) {\n\t    this.y = this.rows - 1;\n\t  }\n\t\n\t  this.x = params[1] - 1;\n\t  if (this.x >= this.cols) {\n\t    this.x = this.cols - 1;\n\t  }\n\t};\n\t\n\t// CSI Pm h  Set Mode (SM).\n\t//     Ps = 2  -> Keyboard Action Mode (AM).\n\t//     Ps = 4  -> Insert Mode (IRM).\n\t//     Ps = 1 2  -> Send/receive (SRM).\n\t//     Ps = 2 0  -> Automatic Newline (LNM).\n\t// CSI ? Pm h\n\t//   DEC Private Mode Set (DECSET).\n\t//     Ps = 1  -> Application Cursor Keys (DECCKM).\n\t//     Ps = 2  -> Designate USASCII for character sets G0-G3\n\t//     (DECANM), and set VT100 mode.\n\t//     Ps = 3  -> 132 Column Mode (DECCOLM).\n\t//     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n\t//     Ps = 5  -> Reverse Video (DECSCNM).\n\t//     Ps = 6  -> Origin Mode (DECOM).\n\t//     Ps = 7  -> Wraparound Mode (DECAWM).\n\t//     Ps = 8  -> Auto-repeat Keys (DECARM).\n\t//     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n\t//     tion Mouse Tracking.\n\t//     Ps = 1 0  -> Show toolbar (rxvt).\n\t//     Ps = 1 2  -> Start Blinking Cursor (att610).\n\t//     Ps = 1 8  -> Print form feed (DECPFF).\n\t//     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n\t//     Ps = 2 5  -> Show Cursor (DECTCEM).\n\t//     Ps = 3 0  -> Show scrollbar (rxvt).\n\t//     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n\t//     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n\t//     Ps = 4 0  -> Allow 80 -> 132 Mode.\n\t//     Ps = 4 1  -> more(1) fix (see curses resource).\n\t//     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n\t//     RCM).\n\t//     Ps = 4 4  -> Turn On Margin Bell.\n\t//     Ps = 4 5  -> Reverse-wraparound Mode.\n\t//     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n\t//     compile-time option.\n\t//     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n\t//     abled by the titeInhibit resource).\n\t//     Ps = 6 6  -> Application keypad (DECNKM).\n\t//     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n\t//     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n\t//     release.  See the section Mouse Tracking.\n\t//     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n\t//     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n\t//     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n\t//     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n\t//     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n\t//     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n\t//     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n\t//     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n\t//     (enables the eightBitInput resource).\n\t//     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n\t//     Lock keys.  (This enables the numLock resource).\n\t//     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n\t//     enables the metaSendsEscape resource).\n\t//     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n\t//     key.\n\t//     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n\t//     enables the altSendsEscape resource).\n\t//     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n\t//     (This enables the keepSelection resource).\n\t//     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n\t//     the selectToClipboard resource).\n\t//     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n\t//     Control-G is received.  (This enables the bellIsUrgent\n\t//     resource).\n\t//     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n\t//     is received.  (enables the popOnBell resource).\n\t//     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n\t//     disabled by the titeInhibit resource).\n\t//     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n\t//     abled by the titeInhibit resource).\n\t//     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n\t//     Screen Buffer, clearing it first.  (This may be disabled by\n\t//     the titeInhibit resource).  This combines the effects of the 1\n\t//     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n\t//     applications rather than the 4 7  mode.\n\t//     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n\t//     Ps = 1 0 5 1  -> Set Sun function-key mode.\n\t//     Ps = 1 0 5 2  -> Set HP function-key mode.\n\t//     Ps = 1 0 5 3  -> Set SCO function-key mode.\n\t//     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n\t//     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n\t//     Ps = 2 0 0 4  -> Set bracketed paste mode.\n\t// Modes:\n\t//   http://vt100.net/docs/vt220-rm/chapter4.html\n\tTerminal.prototype.setMode = function(params) {\n\t  if (typeof params === 'object') {\n\t    var l = params.length\n\t      , i = 0;\n\t\n\t    for (; i < l; i++) {\n\t      this.setMode(params[i]);\n\t    }\n\t\n\t    return;\n\t  }\n\t\n\t  if (!this.prefix) {\n\t    switch (params) {\n\t      case 4:\n\t        this.insertMode = true;\n\t        break;\n\t      case 20:\n\t        //this.convertEol = true;\n\t        break;\n\t    }\n\t  } else if (this.prefix === '?') {\n\t    switch (params) {\n\t      case 1:\n\t        this.applicationCursor = true;\n\t        break;\n\t      case 2:\n\t        this.setgCharset(0, Terminal.charsets.US);\n\t        this.setgCharset(1, Terminal.charsets.US);\n\t        this.setgCharset(2, Terminal.charsets.US);\n\t        this.setgCharset(3, Terminal.charsets.US);\n\t        // set VT100 mode here\n\t        break;\n\t      case 3: // 132 col mode\n\t        this.savedCols = this.cols;\n\t        this.resize(132, this.rows);\n\t        break;\n\t      case 6:\n\t        this.originMode = true;\n\t        break;\n\t      case 7:\n\t        this.wraparoundMode = true;\n\t        break;\n\t      case 12:\n\t        // this.cursorBlink = true;\n\t        break;\n\t      case 66:\n\t        this.log('Serial port requested application keypad.');\n\t        this.applicationKeypad = true;\n\t        break;\n\t      case 9: // X10 Mouse\n\t        // no release, no motion, no wheel, no modifiers.\n\t      case 1000: // vt200 mouse\n\t        // no motion.\n\t        // no modifiers, except control on the wheel.\n\t      case 1002: // button event mouse\n\t      case 1003: // any event mouse\n\t        // any event - sends motion events,\n\t        // even if there is no button held down.\n\t        this.x10Mouse = params === 9;\n\t        this.vt200Mouse = params === 1000;\n\t        this.normalMouse = params > 1000;\n\t        this.mouseEvents = true;\n\t        this.element.style.cursor = 'default';\n\t        this.log('Binding to mouse events.');\n\t        break;\n\t      case 1004: // send focusin/focusout events\n\t        // focusin: ^[[I\n\t        // focusout: ^[[O\n\t        this.sendFocus = true;\n\t        break;\n\t      case 1005: // utf8 ext mode mouse\n\t        this.utfMouse = true;\n\t        // for wide terminals\n\t        // simply encodes large values as utf8 characters\n\t        break;\n\t      case 1006: // sgr ext mode mouse\n\t        this.sgrMouse = true;\n\t        // for wide terminals\n\t        // does not add 32 to fields\n\t        // press: ^[[<b;x;yM\n\t        // release: ^[[<b;x;ym\n\t        break;\n\t      case 1015: // urxvt ext mode mouse\n\t        this.urxvtMouse = true;\n\t        // for wide terminals\n\t        // numbers for fields\n\t        // press: ^[[b;x;yM\n\t        // motion: ^[[b;x;yT\n\t        break;\n\t      case 25: // show cursor\n\t        this.cursorHidden = false;\n\t        break;\n\t      case 1049: // alt screen buffer cursor\n\t        //this.saveCursor();\n\t        ; // FALL-THROUGH\n\t      case 47: // alt screen buffer\n\t      case 1047: // alt screen buffer\n\t        if (!this.normal) {\n\t          var normal = {\n\t            lines: this.lines,\n\t            ybase: this.ybase,\n\t            ydisp: this.ydisp,\n\t            x: this.x,\n\t            y: this.y,\n\t            scrollTop: this.scrollTop,\n\t            scrollBottom: this.scrollBottom,\n\t            tabs: this.tabs\n\t            // XXX save charset(s) here?\n\t            // charset: this.charset,\n\t            // glevel: this.glevel,\n\t            // charsets: this.charsets\n\t          };\n\t          this.reset();\n\t          this.normal = normal;\n\t          this.showCursor();\n\t        }\n\t        break;\n\t    }\n\t  }\n\t};\n\t\n\t// CSI Pm l  Reset Mode (RM).\n\t//     Ps = 2  -> Keyboard Action Mode (AM).\n\t//     Ps = 4  -> Replace Mode (IRM).\n\t//     Ps = 1 2  -> Send/receive (SRM).\n\t//     Ps = 2 0  -> Normal Linefeed (LNM).\n\t// CSI ? Pm l\n\t//   DEC Private Mode Reset (DECRST).\n\t//     Ps = 1  -> Normal Cursor Keys (DECCKM).\n\t//     Ps = 2  -> Designate VT52 mode (DECANM).\n\t//     Ps = 3  -> 80 Column Mode (DECCOLM).\n\t//     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n\t//     Ps = 5  -> Normal Video (DECSCNM).\n\t//     Ps = 6  -> Normal Cursor Mode (DECOM).\n\t//     Ps = 7  -> No Wraparound Mode (DECAWM).\n\t//     Ps = 8  -> No Auto-repeat Keys (DECARM).\n\t//     Ps = 9  -> Don't send Mouse X & Y on button press.\n\t//     Ps = 1 0  -> Hide toolbar (rxvt).\n\t//     Ps = 1 2  -> Stop Blinking Cursor (att610).\n\t//     Ps = 1 8  -> Don't print form feed (DECPFF).\n\t//     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n\t//     Ps = 2 5  -> Hide Cursor (DECTCEM).\n\t//     Ps = 3 0  -> Don't show scrollbar (rxvt).\n\t//     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n\t//     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n\t//     Ps = 4 1  -> No more(1) fix (see curses resource).\n\t//     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n\t//     NRCM).\n\t//     Ps = 4 4  -> Turn Off Margin Bell.\n\t//     Ps = 4 5  -> No Reverse-wraparound Mode.\n\t//     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n\t//     compile-time option).\n\t//     Ps = 4 7  -> Use Normal Screen Buffer.\n\t//     Ps = 6 6  -> Numeric keypad (DECNKM).\n\t//     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n\t//     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n\t//     release.  See the section Mouse Tracking.\n\t//     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n\t//     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n\t//     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n\t//     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n\t//     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n\t//     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n\t//     (rxvt).\n\t//     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n\t//     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n\t//     the eightBitInput resource).\n\t//     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n\t//     Lock keys.  (This disables the numLock resource).\n\t//     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n\t//     (This disables the metaSendsEscape resource).\n\t//     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n\t//     Delete key.\n\t//     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n\t//     (This disables the altSendsEscape resource).\n\t//     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n\t//     (This disables the keepSelection resource).\n\t//     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n\t//     the selectToClipboard resource).\n\t//     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n\t//     Control-G is received.  (This disables the bellIsUrgent\n\t//     resource).\n\t//     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n\t//     G is received.  (This disables the popOnBell resource).\n\t//     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n\t//     first if in the Alternate Screen.  (This may be disabled by\n\t//     the titeInhibit resource).\n\t//     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n\t//     disabled by the titeInhibit resource).\n\t//     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n\t//     as in DECRC.  (This may be disabled by the titeInhibit\n\t//     resource).  This combines the effects of the 1 0 4 7  and 1 0\n\t//     4 8  modes.  Use this with terminfo-based applications rather\n\t//     than the 4 7  mode.\n\t//     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n\t//     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n\t//     Ps = 1 0 5 2  -> Reset HP function-key mode.\n\t//     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n\t//     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n\t//     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n\t//     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n\tTerminal.prototype.resetMode = function(params) {\n\t  if (typeof params === 'object') {\n\t    var l = params.length\n\t      , i = 0;\n\t\n\t    for (; i < l; i++) {\n\t      this.resetMode(params[i]);\n\t    }\n\t\n\t    return;\n\t  }\n\t\n\t  if (!this.prefix) {\n\t    switch (params) {\n\t      case 4:\n\t        this.insertMode = false;\n\t        break;\n\t      case 20:\n\t        //this.convertEol = false;\n\t        break;\n\t    }\n\t  } else if (this.prefix === '?') {\n\t    switch (params) {\n\t      case 1:\n\t        this.applicationCursor = false;\n\t        break;\n\t      case 3:\n\t        if (this.cols === 132 && this.savedCols) {\n\t          this.resize(this.savedCols, this.rows);\n\t        }\n\t        delete this.savedCols;\n\t        break;\n\t      case 6:\n\t        this.originMode = false;\n\t        break;\n\t      case 7:\n\t        this.wraparoundMode = false;\n\t        break;\n\t      case 12:\n\t        // this.cursorBlink = false;\n\t        break;\n\t      case 66:\n\t        this.log('Switching back to normal keypad.');\n\t        this.applicationKeypad = false;\n\t        break;\n\t      case 9: // X10 Mouse\n\t      case 1000: // vt200 mouse\n\t      case 1002: // button event mouse\n\t      case 1003: // any event mouse\n\t        this.x10Mouse = false;\n\t        this.vt200Mouse = false;\n\t        this.normalMouse = false;\n\t        this.mouseEvents = false;\n\t        this.element.style.cursor = '';\n\t        break;\n\t      case 1004: // send focusin/focusout events\n\t        this.sendFocus = false;\n\t        break;\n\t      case 1005: // utf8 ext mode mouse\n\t        this.utfMouse = false;\n\t        break;\n\t      case 1006: // sgr ext mode mouse\n\t        this.sgrMouse = false;\n\t        break;\n\t      case 1015: // urxvt ext mode mouse\n\t        this.urxvtMouse = false;\n\t        break;\n\t      case 25: // hide cursor\n\t        this.cursorHidden = true;\n\t        break;\n\t      case 1049: // alt screen buffer cursor\n\t        ; // FALL-THROUGH\n\t      case 47: // normal screen buffer\n\t      case 1047: // normal screen buffer - clearing it first\n\t        if (this.normal) {\n\t          this.lines = this.normal.lines;\n\t          this.ybase = this.normal.ybase;\n\t          this.ydisp = this.normal.ydisp;\n\t          this.x = this.normal.x;\n\t          this.y = this.normal.y;\n\t          this.scrollTop = this.normal.scrollTop;\n\t          this.scrollBottom = this.normal.scrollBottom;\n\t          this.tabs = this.normal.tabs;\n\t          this.normal = null;\n\t          // if (params === 1049) {\n\t          //   this.x = this.savedX;\n\t          //   this.y = this.savedY;\n\t          // }\n\t          this.refresh(0, this.rows - 1);\n\t          this.showCursor();\n\t        }\n\t        break;\n\t    }\n\t  }\n\t};\n\t\n\t// CSI Ps ; Ps r\n\t//   Set Scrolling Region [top;bottom] (default = full size of win-\n\t//   dow) (DECSTBM).\n\t// CSI ? Pm r\n\tTerminal.prototype.setScrollRegion = function(params) {\n\t  if (this.prefix) return;\n\t  this.scrollTop = (params[0] || 1) - 1;\n\t  this.scrollBottom = (params[1] || this.rows) - 1;\n\t  this.x = 0;\n\t  this.y = 0;\n\t};\n\t\n\t// CSI s\n\t//   Save cursor (ANSI.SYS).\n\tTerminal.prototype.saveCursor = function(params) {\n\t  this.savedX = this.x;\n\t  this.savedY = this.y;\n\t};\n\t\n\t// CSI u\n\t//   Restore cursor (ANSI.SYS).\n\tTerminal.prototype.restoreCursor = function(params) {\n\t  this.x = this.savedX || 0;\n\t  this.y = this.savedY || 0;\n\t};\n\t\n\t/**\n\t * Lesser Used\n\t */\n\t\n\t// CSI Ps I\n\t//   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n\tTerminal.prototype.cursorForwardTab = function(params) {\n\t  var param = params[0] || 1;\n\t  while (param--) {\n\t    this.x = this.nextStop();\n\t  }\n\t};\n\t\n\t// CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n\tTerminal.prototype.scrollUp = function(params) {\n\t  var param = params[0] || 1;\n\t  while (param--) {\n\t    this.lines.splice(this.ybase + this.scrollTop, 1);\n\t    this.lines.splice(this.ybase + this.scrollBottom, 0, this.blankLine());\n\t  }\n\t  // this.maxRange();\n\t  this.updateRange(this.scrollTop);\n\t  this.updateRange(this.scrollBottom);\n\t};\n\t\n\t// CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n\tTerminal.prototype.scrollDown = function(params) {\n\t  var param = params[0] || 1;\n\t  while (param--) {\n\t    this.lines.splice(this.ybase + this.scrollBottom, 1);\n\t    this.lines.splice(this.ybase + this.scrollTop, 0, this.blankLine());\n\t  }\n\t  // this.maxRange();\n\t  this.updateRange(this.scrollTop);\n\t  this.updateRange(this.scrollBottom);\n\t};\n\t\n\t// CSI Ps ; Ps ; Ps ; Ps ; Ps T\n\t//   Initiate highlight mouse tracking.  Parameters are\n\t//   [func;startx;starty;firstrow;lastrow].  See the section Mouse\n\t//   Tracking.\n\tTerminal.prototype.initMouseTracking = function(params) {\n\t  // Relevant: DECSET 1001\n\t};\n\t\n\t// CSI > Ps; Ps T\n\t//   Reset one or more features of the title modes to the default\n\t//   value.  Normally, \"reset\" disables the feature.  It is possi-\n\t//   ble to disable the ability to reset features by compiling a\n\t//   different default for the title modes into xterm.\n\t//     Ps = 0  -> Do not set window/icon labels using hexadecimal.\n\t//     Ps = 1  -> Do not query window/icon labels using hexadeci-\n\t//     mal.\n\t//     Ps = 2  -> Do not set window/icon labels using UTF-8.\n\t//     Ps = 3  -> Do not query window/icon labels using UTF-8.\n\t//   (See discussion of \"Title Modes\").\n\tTerminal.prototype.resetTitleModes = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n\tTerminal.prototype.cursorBackwardTab = function(params) {\n\t  var param = params[0] || 1;\n\t  while (param--) {\n\t    this.x = this.prevStop();\n\t  }\n\t};\n\t\n\t// CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n\tTerminal.prototype.repeatPrecedingCharacter = function(params) {\n\t  var param = params[0] || 1\n\t    , line = this.lines[this.ybase + this.y]\n\t    , ch = line[this.x - 1] || [this.defAttr, ' '];\n\t\n\t  while (param--) line[this.x++] = ch;\n\t};\n\t\n\t// CSI Ps g  Tab Clear (TBC).\n\t//     Ps = 0  -> Clear Current Column (default).\n\t//     Ps = 3  -> Clear All.\n\t// Potentially:\n\t//   Ps = 2  -> Clear Stops on Line.\n\t//   http://vt100.net/annarbor/aaa-ug/section6.html\n\tTerminal.prototype.tabClear = function(params) {\n\t  var param = params[0];\n\t  if (param <= 0) {\n\t    delete this.tabs[this.x];\n\t  } else if (param === 3) {\n\t    this.tabs = {};\n\t  }\n\t};\n\t\n\t// CSI Pm i  Media Copy (MC).\n\t//     Ps = 0  -> Print screen (default).\n\t//     Ps = 4  -> Turn off printer controller mode.\n\t//     Ps = 5  -> Turn on printer controller mode.\n\t// CSI ? Pm i\n\t//   Media Copy (MC, DEC-specific).\n\t//     Ps = 1  -> Print line containing cursor.\n\t//     Ps = 4  -> Turn off autoprint mode.\n\t//     Ps = 5  -> Turn on autoprint mode.\n\t//     Ps = 1  0  -> Print composed display, ignores DECPEX.\n\t//     Ps = 1  1  -> Print all pages.\n\tTerminal.prototype.mediaCopy = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI > Ps; Ps m\n\t//   Set or reset resource-values used by xterm to decide whether\n\t//   to construct escape sequences holding information about the\n\t//   modifiers pressed with a given key.  The first parameter iden-\n\t//   tifies the resource to set/reset.  The second parameter is the\n\t//   value to assign to the resource.  If the second parameter is\n\t//   omitted, the resource is reset to its initial value.\n\t//     Ps = 1  -> modifyCursorKeys.\n\t//     Ps = 2  -> modifyFunctionKeys.\n\t//     Ps = 4  -> modifyOtherKeys.\n\t//   If no parameters are given, all resources are reset to their\n\t//   initial values.\n\tTerminal.prototype.setResources = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI > Ps n\n\t//   Disable modifiers which may be enabled via the CSI > Ps; Ps m\n\t//   sequence.  This corresponds to a resource value of \"-1\", which\n\t//   cannot be set with the other sequence.  The parameter identi-\n\t//   fies the resource to be disabled:\n\t//     Ps = 1  -> modifyCursorKeys.\n\t//     Ps = 2  -> modifyFunctionKeys.\n\t//     Ps = 4  -> modifyOtherKeys.\n\t//   If the parameter is omitted, modifyFunctionKeys is disabled.\n\t//   When modifyFunctionKeys is disabled, xterm uses the modifier\n\t//   keys to make an extended sequence of functions rather than\n\t//   adding a parameter to each function key to denote the modi-\n\t//   fiers.\n\tTerminal.prototype.disableModifiers = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI > Ps p\n\t//   Set resource value pointerMode.  This is used by xterm to\n\t//   decide whether to hide the pointer cursor as the user types.\n\t//   Valid values for the parameter:\n\t//     Ps = 0  -> never hide the pointer.\n\t//     Ps = 1  -> hide if the mouse tracking mode is not enabled.\n\t//     Ps = 2  -> always hide the pointer.  If no parameter is\n\t//     given, xterm uses the default, which is 1 .\n\tTerminal.prototype.setPointerMode = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI ! p   Soft terminal reset (DECSTR).\n\t// http://vt100.net/docs/vt220-rm/table4-10.html\n\tTerminal.prototype.softReset = function(params) {\n\t  this.cursorHidden = false;\n\t  this.insertMode = false;\n\t  this.originMode = false;\n\t  this.wraparoundMode = false; // autowrap\n\t  this.applicationKeypad = false; // ?\n\t  this.applicationCursor = false;\n\t  this.scrollTop = 0;\n\t  this.scrollBottom = this.rows - 1;\n\t  this.curAttr = this.defAttr;\n\t  this.x = this.y = 0; // ?\n\t  this.charset = null;\n\t  this.glevel = 0; // ??\n\t  this.charsets = [null]; // ??\n\t};\n\t\n\t// CSI Ps$ p\n\t//   Request ANSI mode (DECRQM).  For VT300 and up, reply is\n\t//     CSI Ps; Pm$ y\n\t//   where Ps is the mode number as in RM, and Pm is the mode\n\t//   value:\n\t//     0 - not recognized\n\t//     1 - set\n\t//     2 - reset\n\t//     3 - permanently set\n\t//     4 - permanently reset\n\tTerminal.prototype.requestAnsiMode = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI ? Ps$ p\n\t//   Request DEC private mode (DECRQM).  For VT300 and up, reply is\n\t//     CSI ? Ps; Pm$ p\n\t//   where Ps is the mode number as in DECSET, Pm is the mode value\n\t//   as in the ANSI DECRQM.\n\tTerminal.prototype.requestPrivateMode = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps ; Ps \" p\n\t//   Set conformance level (DECSCL).  Valid values for the first\n\t//   parameter:\n\t//     Ps = 6 1  -> VT100.\n\t//     Ps = 6 2  -> VT200.\n\t//     Ps = 6 3  -> VT300.\n\t//   Valid values for the second parameter:\n\t//     Ps = 0  -> 8-bit controls.\n\t//     Ps = 1  -> 7-bit controls (always set for VT100).\n\t//     Ps = 2  -> 8-bit controls.\n\tTerminal.prototype.setConformanceLevel = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps q  Load LEDs (DECLL).\n\t//     Ps = 0  -> Clear all LEDS (default).\n\t//     Ps = 1  -> Light Num Lock.\n\t//     Ps = 2  -> Light Caps Lock.\n\t//     Ps = 3  -> Light Scroll Lock.\n\t//     Ps = 2  1  -> Extinguish Num Lock.\n\t//     Ps = 2  2  -> Extinguish Caps Lock.\n\t//     Ps = 2  3  -> Extinguish Scroll Lock.\n\tTerminal.prototype.loadLEDs = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps SP q\n\t//   Set cursor style (DECSCUSR, VT520).\n\t//     Ps = 0  -> blinking block.\n\t//     Ps = 1  -> blinking block (default).\n\t//     Ps = 2  -> steady block.\n\t//     Ps = 3  -> blinking underline.\n\t//     Ps = 4  -> steady underline.\n\tTerminal.prototype.setCursorStyle = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps \" q\n\t//   Select character protection attribute (DECSCA).  Valid values\n\t//   for the parameter:\n\t//     Ps = 0  -> DECSED and DECSEL can erase (default).\n\t//     Ps = 1  -> DECSED and DECSEL cannot erase.\n\t//     Ps = 2  -> DECSED and DECSEL can erase.\n\tTerminal.prototype.setCharProtectionAttr = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI ? Pm r\n\t//   Restore DEC Private Mode Values.  The value of Ps previously\n\t//   saved is restored.  Ps values are the same as for DECSET.\n\tTerminal.prototype.restorePrivateValues = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Pt; Pl; Pb; Pr; Ps$ r\n\t//   Change Attributes in Rectangular Area (DECCARA), VT400 and up.\n\t//     Pt; Pl; Pb; Pr denotes the rectangle.\n\t//     Ps denotes the SGR attributes to change: 0, 1, 4, 5, 7.\n\t// NOTE: xterm doesn't enable this code by default.\n\tTerminal.prototype.setAttrInRectangle = function(params) {\n\t  var t = params[0]\n\t    , l = params[1]\n\t    , b = params[2]\n\t    , r = params[3]\n\t    , attr = params[4];\n\t\n\t  var line\n\t    , i;\n\t\n\t  for (; t < b + 1; t++) {\n\t    line = this.lines[this.ybase + t];\n\t    for (i = l; i < r; i++) {\n\t      line[i] = [attr, line[i][1]];\n\t    }\n\t  }\n\t\n\t  // this.maxRange();\n\t  this.updateRange(params[0]);\n\t  this.updateRange(params[2]);\n\t};\n\t\n\t// CSI ? Pm s\n\t//   Save DEC Private Mode Values.  Ps values are the same as for\n\t//   DECSET.\n\tTerminal.prototype.savePrivateValues = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps ; Ps ; Ps t\n\t//   Window manipulation (from dtterm, as well as extensions).\n\t//   These controls may be disabled using the allowWindowOps\n\t//   resource.  Valid values for the first (and any additional\n\t//   parameters) are:\n\t//     Ps = 1  -> De-iconify window.\n\t//     Ps = 2  -> Iconify window.\n\t//     Ps = 3  ;  x ;  y -> Move window to [x, y].\n\t//     Ps = 4  ;  height ;  width -> Resize the xterm window to\n\t//     height and width in pixels.\n\t//     Ps = 5  -> Raise the xterm window to the front of the stack-\n\t//     ing order.\n\t//     Ps = 6  -> Lower the xterm window to the bottom of the\n\t//     stacking order.\n\t//     Ps = 7  -> Refresh the xterm window.\n\t//     Ps = 8  ;  height ;  width -> Resize the text area to\n\t//     [height;width] in characters.\n\t//     Ps = 9  ;  0  -> Restore maximized window.\n\t//     Ps = 9  ;  1  -> Maximize window (i.e., resize to screen\n\t//     size).\n\t//     Ps = 1 0  ;  0  -> Undo full-screen mode.\n\t//     Ps = 1 0  ;  1  -> Change to full-screen.\n\t//     Ps = 1 1  -> Report xterm window state.  If the xterm window\n\t//     is open (non-iconified), it returns CSI 1 t .  If the xterm\n\t//     window is iconified, it returns CSI 2 t .\n\t//     Ps = 1 3  -> Report xterm window position.  Result is CSI 3\n\t//     ; x ; y t\n\t//     Ps = 1 4  -> Report xterm window in pixels.  Result is CSI\n\t//     4  ;  height ;  width t\n\t//     Ps = 1 8  -> Report the size of the text area in characters.\n\t//     Result is CSI  8  ;  height ;  width t\n\t//     Ps = 1 9  -> Report the size of the screen in characters.\n\t//     Result is CSI  9  ;  height ;  width t\n\t//     Ps = 2 0  -> Report xterm window's icon label.  Result is\n\t//     OSC  L  label ST\n\t//     Ps = 2 1  -> Report xterm window's title.  Result is OSC  l\n\t//     label ST\n\t//     Ps = 2 2  ;  0  -> Save xterm icon and window title on\n\t//     stack.\n\t//     Ps = 2 2  ;  1  -> Save xterm icon title on stack.\n\t//     Ps = 2 2  ;  2  -> Save xterm window title on stack.\n\t//     Ps = 2 3  ;  0  -> Restore xterm icon and window title from\n\t//     stack.\n\t//     Ps = 2 3  ;  1  -> Restore xterm icon title from stack.\n\t//     Ps = 2 3  ;  2  -> Restore xterm window title from stack.\n\t//     Ps >= 2 4  -> Resize to Ps lines (DECSLPP).\n\tTerminal.prototype.manipulateWindow = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Pt; Pl; Pb; Pr; Ps$ t\n\t//   Reverse Attributes in Rectangular Area (DECRARA), VT400 and\n\t//   up.\n\t//     Pt; Pl; Pb; Pr denotes the rectangle.\n\t//     Ps denotes the attributes to reverse, i.e.,  1, 4, 5, 7.\n\t// NOTE: xterm doesn't enable this code by default.\n\tTerminal.prototype.reverseAttrInRectangle = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI > Ps; Ps t\n\t//   Set one or more features of the title modes.  Each parameter\n\t//   enables a single feature.\n\t//     Ps = 0  -> Set window/icon labels using hexadecimal.\n\t//     Ps = 1  -> Query window/icon labels using hexadecimal.\n\t//     Ps = 2  -> Set window/icon labels using UTF-8.\n\t//     Ps = 3  -> Query window/icon labels using UTF-8.  (See dis-\n\t//     cussion of \"Title Modes\")\n\tTerminal.prototype.setTitleModeFeature = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps SP t\n\t//   Set warning-bell volume (DECSWBV, VT520).\n\t//     Ps = 0  or 1  -> off.\n\t//     Ps = 2 , 3  or 4  -> low.\n\t//     Ps = 5 , 6 , 7 , or 8  -> high.\n\tTerminal.prototype.setWarningBellVolume = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps SP u\n\t//   Set margin-bell volume (DECSMBV, VT520).\n\t//     Ps = 1  -> off.\n\t//     Ps = 2 , 3  or 4  -> low.\n\t//     Ps = 0 , 5 , 6 , 7 , or 8  -> high.\n\tTerminal.prototype.setMarginBellVolume = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Pt; Pl; Pb; Pr; Pp; Pt; Pl; Pp$ v\n\t//   Copy Rectangular Area (DECCRA, VT400 and up).\n\t//     Pt; Pl; Pb; Pr denotes the rectangle.\n\t//     Pp denotes the source page.\n\t//     Pt; Pl denotes the target location.\n\t//     Pp denotes the target page.\n\t// NOTE: xterm doesn't enable this code by default.\n\tTerminal.prototype.copyRectangle = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Pt ; Pl ; Pb ; Pr ' w\n\t//   Enable Filter Rectangle (DECEFR), VT420 and up.\n\t//   Parameters are [top;left;bottom;right].\n\t//   Defines the coordinates of a filter rectangle and activates\n\t//   it.  Anytime the locator is detected outside of the filter\n\t//   rectangle, an outside rectangle event is generated and the\n\t//   rectangle is disabled.  Filter rectangles are always treated\n\t//   as \"one-shot\" events.  Any parameters that are omitted default\n\t//   to the current locator position.  If all parameters are omit-\n\t//   ted, any locator motion will be reported.  DECELR always can-\n\t//   cels any prevous rectangle definition.\n\tTerminal.prototype.enableFilterRectangle = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps x  Request Terminal Parameters (DECREQTPARM).\n\t//   if Ps is a \"0\" (default) or \"1\", and xterm is emulating VT100,\n\t//   the control sequence elicits a response of the same form whose\n\t//   parameters describe the terminal:\n\t//     Ps -> the given Ps incremented by 2.\n\t//     Pn = 1  <- no parity.\n\t//     Pn = 1  <- eight bits.\n\t//     Pn = 1  <- 2  8  transmit 38.4k baud.\n\t//     Pn = 1  <- 2  8  receive 38.4k baud.\n\t//     Pn = 1  <- clock multiplier.\n\t//     Pn = 0  <- STP flags.\n\tTerminal.prototype.requestParameters = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps x  Select Attribute Change Extent (DECSACE).\n\t//     Ps = 0  -> from start to end position, wrapped.\n\t//     Ps = 1  -> from start to end position, wrapped.\n\t//     Ps = 2  -> rectangle (exact).\n\tTerminal.prototype.selectChangeExtent = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Pc; Pt; Pl; Pb; Pr$ x\n\t//   Fill Rectangular Area (DECFRA), VT420 and up.\n\t//     Pc is the character to use.\n\t//     Pt; Pl; Pb; Pr denotes the rectangle.\n\t// NOTE: xterm doesn't enable this code by default.\n\tTerminal.prototype.fillRectangle = function(params) {\n\t  var ch = params[0]\n\t    , t = params[1]\n\t    , l = params[2]\n\t    , b = params[3]\n\t    , r = params[4];\n\t\n\t  var line\n\t    , i;\n\t\n\t  for (; t < b + 1; t++) {\n\t    line = this.lines[this.ybase + t];\n\t    for (i = l; i < r; i++) {\n\t      line[i] = [line[i][0], String.fromCharCode(ch)];\n\t    }\n\t  }\n\t\n\t  // this.maxRange();\n\t  this.updateRange(params[1]);\n\t  this.updateRange(params[3]);\n\t};\n\t\n\t// CSI Ps ; Pu ' z\n\t//   Enable Locator Reporting (DECELR).\n\t//   Valid values for the first parameter:\n\t//     Ps = 0  -> Locator disabled (default).\n\t//     Ps = 1  -> Locator enabled.\n\t//     Ps = 2  -> Locator enabled for one report, then disabled.\n\t//   The second parameter specifies the coordinate unit for locator\n\t//   reports.\n\t//   Valid values for the second parameter:\n\t//     Pu = 0  <- or omitted -> default to character cells.\n\t//     Pu = 1  <- device physical pixels.\n\t//     Pu = 2  <- character cells.\n\tTerminal.prototype.enableLocatorReporting = function(params) {\n\t  var val = params[0] > 0;\n\t  //this.mouseEvents = val;\n\t  //this.decLocator = val;\n\t};\n\t\n\t// CSI Pt; Pl; Pb; Pr$ z\n\t//   Erase Rectangular Area (DECERA), VT400 and up.\n\t//     Pt; Pl; Pb; Pr denotes the rectangle.\n\t// NOTE: xterm doesn't enable this code by default.\n\tTerminal.prototype.eraseRectangle = function(params) {\n\t  var t = params[0]\n\t    , l = params[1]\n\t    , b = params[2]\n\t    , r = params[3];\n\t\n\t  var line\n\t    , i\n\t    , ch;\n\t\n\t  ch = [this.eraseAttr(), ' ']; // xterm?\n\t\n\t  for (; t < b + 1; t++) {\n\t    line = this.lines[this.ybase + t];\n\t    for (i = l; i < r; i++) {\n\t      line[i] = ch;\n\t    }\n\t  }\n\t\n\t  // this.maxRange();\n\t  this.updateRange(params[0]);\n\t  this.updateRange(params[2]);\n\t};\n\t\n\t// CSI Pm ' {\n\t//   Select Locator Events (DECSLE).\n\t//   Valid values for the first (and any additional parameters)\n\t//   are:\n\t//     Ps = 0  -> only respond to explicit host requests (DECRQLP).\n\t//                (This is default).  It also cancels any filter\n\t//   rectangle.\n\t//     Ps = 1  -> report button down transitions.\n\t//     Ps = 2  -> do not report button down transitions.\n\t//     Ps = 3  -> report button up transitions.\n\t//     Ps = 4  -> do not report button up transitions.\n\tTerminal.prototype.setLocatorEvents = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Pt; Pl; Pb; Pr$ {\n\t//   Selective Erase Rectangular Area (DECSERA), VT400 and up.\n\t//     Pt; Pl; Pb; Pr denotes the rectangle.\n\tTerminal.prototype.selectiveEraseRectangle = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps ' |\n\t//   Request Locator Position (DECRQLP).\n\t//   Valid values for the parameter are:\n\t//     Ps = 0 , 1 or omitted -> transmit a single DECLRP locator\n\t//     report.\n\t\n\t//   If Locator Reporting has been enabled by a DECELR, xterm will\n\t//   respond with a DECLRP Locator Report.  This report is also\n\t//   generated on button up and down events if they have been\n\t//   enabled with a DECSLE, or when the locator is detected outside\n\t//   of a filter rectangle, if filter rectangles have been enabled\n\t//   with a DECEFR.\n\t\n\t//     -> CSI Pe ; Pb ; Pr ; Pc ; Pp &  w\n\t\n\t//   Parameters are [event;button;row;column;page].\n\t//   Valid values for the event:\n\t//     Pe = 0  -> locator unavailable - no other parameters sent.\n\t//     Pe = 1  -> request - xterm received a DECRQLP.\n\t//     Pe = 2  -> left button down.\n\t//     Pe = 3  -> left button up.\n\t//     Pe = 4  -> middle button down.\n\t//     Pe = 5  -> middle button up.\n\t//     Pe = 6  -> right button down.\n\t//     Pe = 7  -> right button up.\n\t//     Pe = 8  -> M4 button down.\n\t//     Pe = 9  -> M4 button up.\n\t//     Pe = 1 0  -> locator outside filter rectangle.\n\t//   ``button'' parameter is a bitmask indicating which buttons are\n\t//     pressed:\n\t//     Pb = 0  <- no buttons down.\n\t//     Pb & 1  <- right button down.\n\t//     Pb & 2  <- middle button down.\n\t//     Pb & 4  <- left button down.\n\t//     Pb & 8  <- M4 button down.\n\t//   ``row'' and ``column'' parameters are the coordinates of the\n\t//     locator position in the xterm window, encoded as ASCII deci-\n\t//     mal.\n\t//   The ``page'' parameter is not used by xterm, and will be omit-\n\t//   ted.\n\tTerminal.prototype.requestLocatorPosition = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI P m SP }\n\t// Insert P s Column(s) (default = 1) (DECIC), VT420 and up.\n\t// NOTE: xterm doesn't enable this code by default.\n\tTerminal.prototype.insertColumns = function() {\n\t  var param = params[0]\n\t    , l = this.ybase + this.rows\n\t    , ch = [this.eraseAttr(), ' '] // xterm?\n\t    , i;\n\t\n\t  while (param--) {\n\t    for (i = this.ybase; i < l; i++) {\n\t      this.lines[i].splice(this.x + 1, 0, ch);\n\t      this.lines[i].pop();\n\t    }\n\t  }\n\t\n\t  this.maxRange();\n\t};\n\t\n\t// CSI P m SP ~\n\t// Delete P s Column(s) (default = 1) (DECDC), VT420 and up\n\t// NOTE: xterm doesn't enable this code by default.\n\tTerminal.prototype.deleteColumns = function() {\n\t  var param = params[0]\n\t    , l = this.ybase + this.rows\n\t    , ch = [this.eraseAttr(), ' '] // xterm?\n\t    , i;\n\t\n\t  while (param--) {\n\t    for (i = this.ybase; i < l; i++) {\n\t      this.lines[i].splice(this.x, 1);\n\t      this.lines[i].push(ch);\n\t    }\n\t  }\n\t\n\t  this.maxRange();\n\t};\n\t\n\t/**\n\t * Prefix/Select/Visual/Search Modes\n\t */\n\t\n\tTerminal.prototype.enterPrefix = function() {\n\t  this.prefixMode = true;\n\t};\n\t\n\tTerminal.prototype.leavePrefix = function() {\n\t  this.prefixMode = false;\n\t};\n\t\n\tTerminal.prototype.enterSelect = function() {\n\t  this._real = {\n\t    x: this.x,\n\t    y: this.y,\n\t    ydisp: this.ydisp,\n\t    ybase: this.ybase,\n\t    cursorHidden: this.cursorHidden,\n\t    lines: this.copyBuffer(this.lines),\n\t    write: this.write\n\t  };\n\t  this.write = function() {};\n\t  this.selectMode = true;\n\t  this.visualMode = false;\n\t  this.cursorHidden = false;\n\t  this.refresh(this.y, this.y);\n\t};\n\t\n\tTerminal.prototype.leaveSelect = function() {\n\t  this.x = this._real.x;\n\t  this.y = this._real.y;\n\t  this.ydisp = this._real.ydisp;\n\t  this.ybase = this._real.ybase;\n\t  this.cursorHidden = this._real.cursorHidden;\n\t  this.lines = this._real.lines;\n\t  this.write = this._real.write;\n\t  delete this._real;\n\t  this.selectMode = false;\n\t  this.visualMode = false;\n\t  this.refresh(0, this.rows - 1);\n\t};\n\t\n\tTerminal.prototype.enterVisual = function() {\n\t  this._real.preVisual = this.copyBuffer(this.lines);\n\t  this.selectText(this.x, this.x, this.ydisp + this.y, this.ydisp + this.y);\n\t  this.visualMode = true;\n\t};\n\t\n\tTerminal.prototype.leaveVisual = function() {\n\t  this.lines = this._real.preVisual;\n\t  delete this._real.preVisual;\n\t  delete this._selected;\n\t  this.visualMode = false;\n\t  this.refresh(0, this.rows - 1);\n\t};\n\t\n\tTerminal.prototype.enterSearch = function(down) {\n\t  this.entry = '';\n\t  this.searchMode = true;\n\t  this.searchDown = down;\n\t  this._real.preSearch = this.copyBuffer(this.lines);\n\t  this._real.preSearchX = this.x;\n\t  this._real.preSearchY = this.y;\n\t\n\t  var bottom = this.ydisp + this.rows - 1;\n\t  for (var i = 0; i < this.entryPrefix.length; i++) {\n\t    //this.lines[bottom][i][0] = (this.defAttr & ~0x1ff) | 4;\n\t    //this.lines[bottom][i][1] = this.entryPrefix[i];\n\t    this.lines[bottom][i] = [\n\t      (this.defAttr & ~0x1ff) | 4,\n\t      this.entryPrefix[i]\n\t    ];\n\t  }\n\t\n\t  this.y = this.rows - 1;\n\t  this.x = this.entryPrefix.length;\n\t\n\t  this.refresh(this.rows - 1, this.rows - 1);\n\t};\n\t\n\tTerminal.prototype.leaveSearch = function() {\n\t  this.searchMode = false;\n\t\n\t  if (this._real.preSearch) {\n\t    this.lines = this._real.preSearch;\n\t    this.x = this._real.preSearchX;\n\t    this.y = this._real.preSearchY;\n\t    delete this._real.preSearch;\n\t    delete this._real.preSearchX;\n\t    delete this._real.preSearchY;\n\t  }\n\t\n\t  this.refresh(this.rows - 1, this.rows - 1);\n\t};\n\t\n\tTerminal.prototype.copyBuffer = function(lines) {\n\t  var lines = lines || this.lines\n\t    , out = [];\n\t\n\t  for (var y = 0; y < lines.length; y++) {\n\t    out[y] = [];\n\t    for (var x = 0; x < lines[y].length; x++) {\n\t      out[y][x] = [lines[y][x][0], lines[y][x][1]];\n\t    }\n\t  }\n\t\n\t  return out;\n\t};\n\t\n\tTerminal.prototype.getCopyTextarea = function(text) {\n\t  var textarea = this._copyTextarea\n\t    , document = this.document;\n\t\n\t  if (!textarea) {\n\t    textarea = document.createElement('textarea');\n\t    textarea.style.position = 'absolute';\n\t    textarea.style.left = '-32000px';\n\t    textarea.style.top = '-32000px';\n\t    textarea.style.width = '0px';\n\t    textarea.style.height = '0px';\n\t    textarea.style.opacity = '0';\n\t    textarea.style.backgroundColor = 'transparent';\n\t    textarea.style.borderStyle = 'none';\n\t    textarea.style.outlineStyle = 'none';\n\t\n\t    document.getElementsByTagName('body')[0].appendChild(textarea);\n\t\n\t    this._copyTextarea = textarea;\n\t  }\n\t\n\t  return textarea;\n\t};\n\t\n\t// NOTE: Only works for primary selection on X11.\n\t// Non-X11 users should use Ctrl-C instead.\n\tTerminal.prototype.copyText = function(text) {\n\t  var self = this\n\t    , textarea = this.getCopyTextarea();\n\t\n\t  this.emit('copy', text);\n\t\n\t  textarea.focus();\n\t  textarea.textContent = text;\n\t  textarea.value = text;\n\t  textarea.setSelectionRange(0, text.length);\n\t\n\t  setTimeout(function() {\n\t    self.element.focus();\n\t    self.focus();\n\t  }, 1);\n\t};\n\t\n\tTerminal.prototype.selectText = function(x1, x2, y1, y2) {\n\t  var ox1\n\t    , ox2\n\t    , oy1\n\t    , oy2\n\t    , tmp\n\t    , x\n\t    , y\n\t    , xl\n\t    , attr;\n\t\n\t  if (this._selected) {\n\t    ox1 = this._selected.x1;\n\t    ox2 = this._selected.x2;\n\t    oy1 = this._selected.y1;\n\t    oy2 = this._selected.y2;\n\t\n\t    if (oy2 < oy1) {\n\t      tmp = ox2;\n\t      ox2 = ox1;\n\t      ox1 = tmp;\n\t      tmp = oy2;\n\t      oy2 = oy1;\n\t      oy1 = tmp;\n\t    }\n\t\n\t    if (ox2 < ox1 && oy1 === oy2) {\n\t      tmp = ox2;\n\t      ox2 = ox1;\n\t      ox1 = tmp;\n\t    }\n\t\n\t    for (y = oy1; y <= oy2; y++) {\n\t      x = 0;\n\t      xl = this.cols - 1;\n\t      if (y === oy1) {\n\t        x = ox1;\n\t      }\n\t      if (y === oy2) {\n\t        xl = ox2;\n\t      }\n\t      for (; x <= xl; x++) {\n\t        if (this.lines[y][x].old != null) {\n\t          //this.lines[y][x][0] = this.lines[y][x].old;\n\t          //delete this.lines[y][x].old;\n\t          attr = this.lines[y][x].old;\n\t          delete this.lines[y][x].old;\n\t          this.lines[y][x] = [attr, this.lines[y][x][1]];\n\t        }\n\t      }\n\t    }\n\t\n\t    y1 = this._selected.y1;\n\t    x1 = this._selected.x1;\n\t  }\n\t\n\t  y1 = Math.max(y1, 0);\n\t  y1 = Math.min(y1, this.ydisp + this.rows - 1);\n\t\n\t  y2 = Math.max(y2, 0);\n\t  y2 = Math.min(y2, this.ydisp + this.rows - 1);\n\t\n\t  this._selected = { x1: x1, x2: x2, y1: y1, y2: y2 };\n\t\n\t  if (y2 < y1) {\n\t    tmp = x2;\n\t    x2 = x1;\n\t    x1 = tmp;\n\t    tmp = y2;\n\t    y2 = y1;\n\t    y1 = tmp;\n\t  }\n\t\n\t  if (x2 < x1 && y1 === y2) {\n\t    tmp = x2;\n\t    x2 = x1;\n\t    x1 = tmp;\n\t  }\n\t\n\t  for (y = y1; y <= y2; y++) {\n\t    x = 0;\n\t    xl = this.cols - 1;\n\t    if (y === y1) {\n\t      x = x1;\n\t    }\n\t    if (y === y2) {\n\t      xl = x2;\n\t    }\n\t    for (; x <= xl; x++) {\n\t      //this.lines[y][x].old = this.lines[y][x][0];\n\t      //this.lines[y][x][0] &= ~0x1ff;\n\t      //this.lines[y][x][0] |= (0x1ff << 9) | 4;\n\t      attr = this.lines[y][x][0];\n\t      this.lines[y][x] = [\n\t        (attr & ~0x1ff) | ((0x1ff << 9) | 4),\n\t        this.lines[y][x][1]\n\t      ];\n\t      this.lines[y][x].old = attr;\n\t    }\n\t  }\n\t\n\t  y1 = y1 - this.ydisp;\n\t  y2 = y2 - this.ydisp;\n\t\n\t  y1 = Math.max(y1, 0);\n\t  y1 = Math.min(y1, this.rows - 1);\n\t\n\t  y2 = Math.max(y2, 0);\n\t  y2 = Math.min(y2, this.rows - 1);\n\t\n\t  //this.refresh(y1, y2);\n\t  this.refresh(0, this.rows - 1);\n\t};\n\t\n\tTerminal.prototype.grabText = function(x1, x2, y1, y2) {\n\t  var out = ''\n\t    , buf = ''\n\t    , ch\n\t    , x\n\t    , y\n\t    , xl\n\t    , tmp;\n\t\n\t  if (y2 < y1) {\n\t    tmp = x2;\n\t    x2 = x1;\n\t    x1 = tmp;\n\t    tmp = y2;\n\t    y2 = y1;\n\t    y1 = tmp;\n\t  }\n\t\n\t  if (x2 < x1 && y1 === y2) {\n\t    tmp = x2;\n\t    x2 = x1;\n\t    x1 = tmp;\n\t  }\n\t\n\t  for (y = y1; y <= y2; y++) {\n\t    x = 0;\n\t    xl = this.cols - 1;\n\t    if (y === y1) {\n\t      x = x1;\n\t    }\n\t    if (y === y2) {\n\t      xl = x2;\n\t    }\n\t    for (; x <= xl; x++) {\n\t      ch = this.lines[y][x][1];\n\t      if (ch === ' ') {\n\t        buf += ch;\n\t        continue;\n\t      }\n\t      if (buf) {\n\t        out += buf;\n\t        buf = '';\n\t      }\n\t      out += ch;\n\t      if (isWide(ch)) x++;\n\t    }\n\t    buf = '';\n\t    out += '\\n';\n\t  }\n\t\n\t  // If we're not at the end of the\n\t  // line, don't add a newline.\n\t  for (x = x2, y = y2; x < this.cols; x++) {\n\t    if (this.lines[y][x][1] !== ' ') {\n\t      out = out.slice(0, -1);\n\t      break;\n\t    }\n\t  }\n\t\n\t  return out;\n\t};\n\t\n\tTerminal.prototype.keyPrefix = function(ev, key) {\n\t  if (key === 'k' || key === '&') {\n\t    this.destroy();\n\t  } else if (key === 'p' || key === ']') {\n\t    this.emit('request paste');\n\t  } else if (key === 'c') {\n\t    this.emit('request create');\n\t  } else if (key >= '0' && key <= '9') {\n\t    key = +key - 1;\n\t    if (!~key) key = 9;\n\t    this.emit('request term', key);\n\t  } else if (key === 'n') {\n\t    this.emit('request term next');\n\t  } else if (key === 'P') {\n\t    this.emit('request term previous');\n\t  } else if (key === ':') {\n\t    this.emit('request command mode');\n\t  } else if (key === '[') {\n\t    this.enterSelect();\n\t  }\n\t};\n\t\n\tTerminal.prototype.keySelect = function(ev, key) {\n\t  this.showCursor();\n\t\n\t  if (this.searchMode || key === 'n' || key === 'N') {\n\t    return this.keySearch(ev, key);\n\t  }\n\t\n\t  if (key === '\\x04') { // ctrl-d\n\t    var y = this.ydisp + this.y;\n\t    if (this.ydisp === this.ybase) {\n\t      // Mimic vim behavior\n\t      this.y = Math.min(this.y + (this.rows - 1) / 2 | 0, this.rows - 1);\n\t      this.refresh(0, this.rows - 1);\n\t    } else {\n\t      this.scrollDisp((this.rows - 1) / 2 | 0);\n\t    }\n\t    if (this.visualMode) {\n\t      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === '\\x15') { // ctrl-u\n\t    var y = this.ydisp + this.y;\n\t    if (this.ydisp === 0) {\n\t      // Mimic vim behavior\n\t      this.y = Math.max(this.y - (this.rows - 1) / 2 | 0, 0);\n\t      this.refresh(0, this.rows - 1);\n\t    } else {\n\t      this.scrollDisp(-(this.rows - 1) / 2 | 0);\n\t    }\n\t    if (this.visualMode) {\n\t      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === '\\x06') { // ctrl-f\n\t    var y = this.ydisp + this.y;\n\t    this.scrollDisp(this.rows - 1);\n\t    if (this.visualMode) {\n\t      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === '\\x02') { // ctrl-b\n\t    var y = this.ydisp + this.y;\n\t    this.scrollDisp(-(this.rows - 1));\n\t    if (this.visualMode) {\n\t      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'k' || key === '\\x1b[A') {\n\t    var y = this.ydisp + this.y;\n\t    this.y--;\n\t    if (this.y < 0) {\n\t      this.y = 0;\n\t      this.scrollDisp(-1);\n\t    }\n\t    if (this.visualMode) {\n\t      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n\t    } else {\n\t      this.refresh(this.y, this.y + 1);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'j' || key === '\\x1b[B') {\n\t    var y = this.ydisp + this.y;\n\t    this.y++;\n\t    if (this.y >= this.rows) {\n\t      this.y = this.rows - 1;\n\t      this.scrollDisp(1);\n\t    }\n\t    if (this.visualMode) {\n\t      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n\t    } else {\n\t      this.refresh(this.y - 1, this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'h' || key === '\\x1b[D') {\n\t    var x = this.x;\n\t    this.x--;\n\t    if (this.x < 0) {\n\t      this.x = 0;\n\t    }\n\t    if (this.visualMode) {\n\t      this.selectText(x, this.x, this.ydisp + this.y, this.ydisp + this.y);\n\t    } else {\n\t      this.refresh(this.y, this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'l' || key === '\\x1b[C') {\n\t    var x = this.x;\n\t    this.x++;\n\t    if (this.x >= this.cols) {\n\t      this.x = this.cols - 1;\n\t    }\n\t    if (this.visualMode) {\n\t      this.selectText(x, this.x, this.ydisp + this.y, this.ydisp + this.y);\n\t    } else {\n\t      this.refresh(this.y, this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'v' || key === ' ') {\n\t    if (!this.visualMode) {\n\t      this.enterVisual();\n\t    } else {\n\t      this.leaveVisual();\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'y') {\n\t    if (this.visualMode) {\n\t      var text = this.grabText(\n\t        this._selected.x1, this._selected.x2,\n\t        this._selected.y1, this._selected.y2);\n\t      this.copyText(text);\n\t      this.leaveVisual();\n\t      // this.leaveSelect();\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'q' || key === '\\x1b') {\n\t    if (this.visualMode) {\n\t      this.leaveVisual();\n\t    } else {\n\t      this.leaveSelect();\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'w' || key === 'W') {\n\t    var ox = this.x;\n\t    var oy = this.y;\n\t    var oyd = this.ydisp;\n\t\n\t    var x = this.x;\n\t    var y = this.y;\n\t    var yb = this.ydisp;\n\t    var saw_space = false;\n\t\n\t    for (;;) {\n\t      var line = this.lines[yb + y];\n\t      while (x < this.cols) {\n\t        if (line[x][1] <= ' ') {\n\t          saw_space = true;\n\t        } else if (saw_space) {\n\t          break;\n\t        }\n\t        x++;\n\t      }\n\t      if (x >= this.cols) x = this.cols - 1;\n\t      if (x === this.cols - 1 && line[x][1] <= ' ') {\n\t        x = 0;\n\t        if (++y >= this.rows) {\n\t          y--;\n\t          if (++yb > this.ybase) {\n\t            yb = this.ybase;\n\t            x = this.x;\n\t            break;\n\t          }\n\t        }\n\t        continue;\n\t      }\n\t      break;\n\t    }\n\t\n\t    this.x = x, this.y = y;\n\t    this.scrollDisp(-this.ydisp + yb);\n\t\n\t    if (this.visualMode) {\n\t      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'b' || key === 'B') {\n\t    var ox = this.x;\n\t    var oy = this.y;\n\t    var oyd = this.ydisp;\n\t\n\t    var x = this.x;\n\t    var y = this.y;\n\t    var yb = this.ydisp;\n\t\n\t    for (;;) {\n\t      var line = this.lines[yb + y];\n\t      var saw_space = x > 0 && line[x][1] > ' ' && line[x - 1][1] > ' ';\n\t      while (x >= 0) {\n\t        if (line[x][1] <= ' ') {\n\t          if (saw_space && (x + 1 < this.cols && line[x + 1][1] > ' ')) {\n\t            x++;\n\t            break;\n\t          } else {\n\t            saw_space = true;\n\t          }\n\t        }\n\t        x--;\n\t      }\n\t      if (x < 0) x = 0;\n\t      if (x === 0 && (line[x][1] <= ' ' || !saw_space)) {\n\t        x = this.cols - 1;\n\t        if (--y < 0) {\n\t          y++;\n\t          if (--yb < 0) {\n\t            yb++;\n\t            x = 0;\n\t            break;\n\t          }\n\t        }\n\t        continue;\n\t      }\n\t      break;\n\t    }\n\t\n\t    this.x = x, this.y = y;\n\t    this.scrollDisp(-this.ydisp + yb);\n\t\n\t    if (this.visualMode) {\n\t      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'e' || key === 'E') {\n\t    var x = this.x + 1;\n\t    var y = this.y;\n\t    var yb = this.ydisp;\n\t    if (x >= this.cols) x--;\n\t\n\t    for (;;) {\n\t      var line = this.lines[yb + y];\n\t      while (x < this.cols) {\n\t        if (line[x][1] <= ' ') {\n\t          x++;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      while (x < this.cols) {\n\t        if (line[x][1] <= ' ') {\n\t          if (x - 1 >= 0 && line[x - 1][1] > ' ') {\n\t            x--;\n\t            break;\n\t          }\n\t        }\n\t        x++;\n\t      }\n\t      if (x >= this.cols) x = this.cols - 1;\n\t      if (x === this.cols - 1 && line[x][1] <= ' ') {\n\t        x = 0;\n\t        if (++y >= this.rows) {\n\t          y--;\n\t          if (++yb > this.ybase) {\n\t            yb = this.ybase;\n\t            break;\n\t          }\n\t        }\n\t        continue;\n\t      }\n\t      break;\n\t    }\n\t\n\t    this.x = x, this.y = y;\n\t    this.scrollDisp(-this.ydisp + yb);\n\t\n\t    if (this.visualMode) {\n\t      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === '^' || key === '0') {\n\t    var ox = this.x;\n\t\n\t    if (key === '0') {\n\t      this.x = 0;\n\t    } else if (key === '^') {\n\t      var line = this.lines[this.ydisp + this.y];\n\t      var x = 0;\n\t      while (x < this.cols) {\n\t        if (line[x][1] > ' ') {\n\t          break;\n\t        }\n\t        x++;\n\t      }\n\t      if (x >= this.cols) x = this.cols - 1;\n\t      this.x = x;\n\t    }\n\t\n\t    if (this.visualMode) {\n\t      this.selectText(ox, this.x, this.ydisp + this.y, this.ydisp + this.y);\n\t    } else {\n\t      this.refresh(this.y, this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === '$') {\n\t    var ox = this.x;\n\t    var line = this.lines[this.ydisp + this.y];\n\t    var x = this.cols - 1;\n\t    while (x >= 0) {\n\t      if (line[x][1] > ' ') {\n\t        if (this.visualMode && x < this.cols - 1) x++;\n\t        break;\n\t      }\n\t      x--;\n\t    }\n\t    if (x < 0) x = 0;\n\t    this.x = x;\n\t    if (this.visualMode) {\n\t      this.selectText(ox, this.x, this.ydisp + this.y, this.ydisp + this.y);\n\t    } else {\n\t      this.refresh(this.y, this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'g' || key === 'G') {\n\t    var ox = this.x;\n\t    var oy = this.y;\n\t    var oyd = this.ydisp;\n\t    if (key === 'g') {\n\t      this.x = 0, this.y = 0;\n\t      this.scrollDisp(-this.ydisp);\n\t    } else if (key === 'G') {\n\t      this.x = 0, this.y = this.rows - 1;\n\t      this.scrollDisp(this.ybase);\n\t    }\n\t    if (this.visualMode) {\n\t      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'H' || key === 'M' || key === 'L') {\n\t    var ox = this.x;\n\t    var oy = this.y;\n\t    if (key === 'H') {\n\t      this.x = 0, this.y = 0;\n\t    } else if (key === 'M') {\n\t      this.x = 0, this.y = this.rows / 2 | 0;\n\t    } else if (key === 'L') {\n\t      this.x = 0, this.y = this.rows - 1;\n\t    }\n\t    if (this.visualMode) {\n\t      this.selectText(ox, this.x, this.ydisp + oy, this.ydisp + this.y);\n\t    } else {\n\t      this.refresh(oy, oy);\n\t      this.refresh(this.y, this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === '{' || key === '}') {\n\t    var ox = this.x;\n\t    var oy = this.y;\n\t    var oyd = this.ydisp;\n\t\n\t    var line;\n\t    var saw_full = false;\n\t    var found = false;\n\t    var first_is_space = -1;\n\t    var y = this.y + (key === '{' ? -1 : 1);\n\t    var yb = this.ydisp;\n\t    var i;\n\t\n\t    if (key === '{') {\n\t      if (y < 0) {\n\t        y++;\n\t        if (yb > 0) yb--;\n\t      }\n\t    } else if (key === '}') {\n\t      if (y >= this.rows) {\n\t        y--;\n\t        if (yb < this.ybase) yb++;\n\t      }\n\t    }\n\t\n\t    for (;;) {\n\t      line = this.lines[yb + y];\n\t\n\t      for (i = 0; i < this.cols; i++) {\n\t        if (line[i][1] > ' ') {\n\t          if (first_is_space === -1) {\n\t            first_is_space = 0;\n\t          }\n\t          saw_full = true;\n\t          break;\n\t        } else if (i === this.cols - 1) {\n\t          if (first_is_space === -1) {\n\t            first_is_space = 1;\n\t          } else if (first_is_space === 0) {\n\t            found = true;\n\t          } else if (first_is_space === 1) {\n\t            if (saw_full) found = true;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (found) break;\n\t\n\t      if (key === '{') {\n\t        y--;\n\t        if (y < 0) {\n\t          y++;\n\t          if (yb > 0) yb--;\n\t          else break;\n\t        }\n\t      } else if (key === '}') {\n\t        y++;\n\t        if (y >= this.rows) {\n\t          y--;\n\t          if (yb < this.ybase) yb++;\n\t          else break;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (!found) {\n\t      if (key === '{') {\n\t        y = 0;\n\t        yb = 0;\n\t      } else if (key === '}') {\n\t        y = this.rows - 1;\n\t        yb = this.ybase;\n\t      }\n\t    }\n\t\n\t    this.x = 0, this.y = y;\n\t    this.scrollDisp(-this.ydisp + yb);\n\t\n\t    if (this.visualMode) {\n\t      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === '/' || key === '?') {\n\t    if (!this.visualMode) {\n\t      this.enterSearch(key === '/');\n\t    }\n\t    return;\n\t  }\n\t\n\t  return false;\n\t};\n\t\n\tTerminal.prototype.keySearch = function(ev, key) {\n\t  if (key === '\\x1b') {\n\t    this.leaveSearch();\n\t    return;\n\t  }\n\t\n\t  if (key === '\\r' || (!this.searchMode && (key === 'n' || key === 'N'))) {\n\t    this.leaveSearch();\n\t\n\t    var entry = this.entry;\n\t\n\t    if (!entry) {\n\t      this.refresh(0, this.rows - 1);\n\t      return;\n\t    }\n\t\n\t    var ox = this.x;\n\t    var oy = this.y;\n\t    var oyd = this.ydisp;\n\t\n\t    var line;\n\t    var found = false;\n\t    var wrapped = false;\n\t    var x = this.x + 1;\n\t    var y = this.ydisp + this.y;\n\t    var yb, i;\n\t    var up = key === 'N'\n\t      ? this.searchDown\n\t      : !this.searchDown;\n\t\n\t    for (;;) {\n\t      line = this.lines[y];\n\t\n\t      while (x < this.cols) {\n\t        for (i = 0; i < entry.length; i++) {\n\t          if (x + i >= this.cols) break;\n\t          if (line[x + i][1] !== entry[i]) {\n\t            break;\n\t          } else if (line[x + i][1] === entry[i] && i === entry.length - 1) {\n\t            found = true;\n\t            break;\n\t          }\n\t        }\n\t        if (found) break;\n\t        x += i + 1;\n\t      }\n\t      if (found) break;\n\t\n\t      x = 0;\n\t\n\t      if (!up) {\n\t        y++;\n\t        if (y > this.ybase + this.rows - 1) {\n\t          if (wrapped) break;\n\t          // this.setMessage('Search wrapped. Continuing at TOP.');\n\t          wrapped = true;\n\t          y = 0;\n\t        }\n\t      } else {\n\t        y--;\n\t        if (y < 0) {\n\t          if (wrapped) break;\n\t          // this.setMessage('Search wrapped. Continuing at BOTTOM.');\n\t          wrapped = true;\n\t          y = this.ybase + this.rows - 1;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (found) {\n\t      if (y - this.ybase < 0) {\n\t        yb = y;\n\t        y = 0;\n\t        if (yb > this.ybase) {\n\t          y = yb - this.ybase;\n\t          yb = this.ybase;\n\t        }\n\t      } else {\n\t        yb = this.ybase;\n\t        y -= this.ybase;\n\t      }\n\t\n\t      this.x = x, this.y = y;\n\t      this.scrollDisp(-this.ydisp + yb);\n\t\n\t      if (this.visualMode) {\n\t        this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n\t      }\n\t      return;\n\t    }\n\t\n\t    // this.setMessage(\"No matches found.\");\n\t    this.refresh(0, this.rows - 1);\n\t\n\t    return;\n\t  }\n\t\n\t  if (key === '\\b' || key === '\\x7f') {\n\t    if (this.entry.length === 0) return;\n\t    var bottom = this.ydisp + this.rows - 1;\n\t    this.entry = this.entry.slice(0, -1);\n\t    var i = this.entryPrefix.length + this.entry.length;\n\t    //this.lines[bottom][i][1] = ' ';\n\t    this.lines[bottom][i] = [\n\t      this.lines[bottom][i][0],\n\t      ' '\n\t    ];\n\t    this.x--;\n\t    this.refresh(this.rows - 1, this.rows - 1);\n\t    this.refresh(this.y, this.y);\n\t    return;\n\t  }\n\t\n\t  if (key.length === 1 && key >= ' ' && key <= '~') {\n\t    var bottom = this.ydisp + this.rows - 1;\n\t    this.entry += key;\n\t    var i = this.entryPrefix.length + this.entry.length - 1;\n\t    //this.lines[bottom][i][0] = (this.defAttr & ~0x1ff) | 4;\n\t    //this.lines[bottom][i][1] = key;\n\t    this.lines[bottom][i] = [\n\t      (this.defAttr & ~0x1ff) | 4,\n\t      key\n\t    ];\n\t    this.x++;\n\t    this.refresh(this.rows - 1, this.rows - 1);\n\t    this.refresh(this.y, this.y);\n\t    return;\n\t  }\n\t\n\t  return false;\n\t};\n\t\n\t/**\n\t * Character Sets\n\t */\n\t\n\tTerminal.charsets = {};\n\t\n\t// DEC Special Character and Line Drawing Set.\n\t// http://vt100.net/docs/vt102-ug/table5-13.html\n\t// A lot of curses apps use this if they see TERM=xterm.\n\t// testing: echo -e '\\e(0a\\e(B'\n\t// The xterm output sometimes seems to conflict with the\n\t// reference above. xterm seems in line with the reference\n\t// when running vttest however.\n\t// The table below now uses xterm's output from vttest.\n\tTerminal.charsets.SCLD = { // (0\n\t  '`': '\\u25c6', // '◆'\n\t  'a': '\\u2592', // '▒'\n\t  'b': '\\u0009', // '\\t'\n\t  'c': '\\u000c', // '\\f'\n\t  'd': '\\u000d', // '\\r'\n\t  'e': '\\u000a', // '\\n'\n\t  'f': '\\u00b0', // '°'\n\t  'g': '\\u00b1', // '±'\n\t  'h': '\\u2424', // '\\u2424' (NL)\n\t  'i': '\\u000b', // '\\v'\n\t  'j': '\\u2518', // '┘'\n\t  'k': '\\u2510', // '┐'\n\t  'l': '\\u250c', // '┌'\n\t  'm': '\\u2514', // '└'\n\t  'n': '\\u253c', // '┼'\n\t  'o': '\\u23ba', // '⎺'\n\t  'p': '\\u23bb', // '⎻'\n\t  'q': '\\u2500', // '─'\n\t  'r': '\\u23bc', // '⎼'\n\t  's': '\\u23bd', // '⎽'\n\t  't': '\\u251c', // '├'\n\t  'u': '\\u2524', // '┤'\n\t  'v': '\\u2534', // '┴'\n\t  'w': '\\u252c', // '┬'\n\t  'x': '\\u2502', // '│'\n\t  'y': '\\u2264', // '≤'\n\t  'z': '\\u2265', // '≥'\n\t  '{': '\\u03c0', // 'π'\n\t  '|': '\\u2260', // '≠'\n\t  '}': '\\u00a3', // '£'\n\t  '~': '\\u00b7'  // '·'\n\t};\n\t\n\tTerminal.charsets.UK = null; // (A\n\tTerminal.charsets.US = null; // (B (USASCII)\n\tTerminal.charsets.Dutch = null; // (4\n\tTerminal.charsets.Finnish = null; // (C or (5\n\tTerminal.charsets.French = null; // (R\n\tTerminal.charsets.FrenchCanadian = null; // (Q\n\tTerminal.charsets.German = null; // (K\n\tTerminal.charsets.Italian = null; // (Y\n\tTerminal.charsets.NorwegianDanish = null; // (E or (6\n\tTerminal.charsets.Spanish = null; // (Z\n\tTerminal.charsets.Swedish = null; // (H or (7\n\tTerminal.charsets.Swiss = null; // (=\n\tTerminal.charsets.ISOLatin = null; // /A\n\t\n\t/**\n\t * Helpers\n\t */\n\t\n\tfunction on(el, type, handler, capture) {\n\t  el.addEventListener(type, handler, capture || false);\n\t}\n\t\n\tfunction off(el, type, handler, capture) {\n\t  el.removeEventListener(type, handler, capture || false);\n\t}\n\t\n\tfunction cancel(ev) {\n\t  if (ev.preventDefault) ev.preventDefault();\n\t  ev.returnValue = false;\n\t  if (ev.stopPropagation) ev.stopPropagation();\n\t  ev.cancelBubble = true;\n\t  return false;\n\t}\n\t\n\tfunction inherits(child, parent) {\n\t  function f() {\n\t    this.constructor = child;\n\t  }\n\t  f.prototype = parent.prototype;\n\t  child.prototype = new f;\n\t}\n\t\n\t// if bold is broken, we can't\n\t// use it in the terminal.\n\tfunction isBoldBroken(document) {\n\t  var body = document.getElementsByTagName('body')[0];\n\t  var terminal = document.createElement('div');\n\t  terminal.className = 'terminal';\n\t  var line = document.createElement('div');\n\t  var el = document.createElement('span');\n\t  el.innerHTML = 'hello world';\n\t  line.appendChild(el);\n\t  terminal.appendChild(line);\n\t  body.appendChild(terminal);\n\t  var w1 = el.scrollWidth;\n\t  el.style.fontWeight = 'bold';\n\t  var w2 = el.scrollWidth;\n\t  body.removeChild(terminal);\n\t  return w1 !== w2;\n\t}\n\t\n\tvar String = this.String;\n\tvar setTimeout = this.setTimeout;\n\tvar setInterval = this.setInterval;\n\t\n\tfunction indexOf(obj, el) {\n\t  var i = obj.length;\n\t  while (i--) {\n\t    if (obj[i] === el) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\tfunction isWide(ch) {\n\t  if (ch <= '\\uff00') return false;\n\t  return (ch >= '\\uff01' && ch <= '\\uffbe')\n\t      || (ch >= '\\uffc2' && ch <= '\\uffc7')\n\t      || (ch >= '\\uffca' && ch <= '\\uffcf')\n\t      || (ch >= '\\uffd2' && ch <= '\\uffd7')\n\t      || (ch >= '\\uffda' && ch <= '\\uffdc')\n\t      || (ch >= '\\uffe0' && ch <= '\\uffe6')\n\t      || (ch >= '\\uffe8' && ch <= '\\uffee');\n\t}\n\t\n\tfunction matchColor(r1, g1, b1) {\n\t  var hash = (r1 << 16) | (g1 << 8) | b1;\n\t\n\t  if (matchColor._cache[hash] != null) {\n\t    return matchColor._cache[hash];\n\t  }\n\t\n\t  var ldiff = Infinity\n\t    , li = -1\n\t    , i = 0\n\t    , c\n\t    , r2\n\t    , g2\n\t    , b2\n\t    , diff;\n\t\n\t  for (; i < Terminal.vcolors.length; i++) {\n\t    c = Terminal.vcolors[i];\n\t    r2 = c[0];\n\t    g2 = c[1];\n\t    b2 = c[2];\n\t\n\t    diff = matchColor.distance(r1, g1, b1, r2, g2, b2);\n\t\n\t    if (diff === 0) {\n\t      li = i;\n\t      break;\n\t    }\n\t\n\t    if (diff < ldiff) {\n\t      ldiff = diff;\n\t      li = i;\n\t    }\n\t  }\n\t\n\t  return matchColor._cache[hash] = li;\n\t}\n\t\n\tmatchColor._cache = {};\n\t\n\t// http://stackoverflow.com/questions/1633828\n\tmatchColor.distance = function(r1, g1, b1, r2, g2, b2) {\n\t  return Math.pow(30 * (r1 - r2), 2)\n\t    + Math.pow(59 * (g1 - g2), 2)\n\t    + Math.pow(11 * (b1 - b2), 2);\n\t};\n\t\n\tfunction each(obj, iter, con) {\n\t  if (obj.forEach) return obj.forEach(iter, con);\n\t  for (var i = 0; i < obj.length; i++) {\n\t    iter.call(con, obj[i], i, obj);\n\t  }\n\t}\n\t\n\tfunction keys(obj) {\n\t  if (Object.keys) return Object.keys(obj);\n\t  var key, keys = [];\n\t  for (key in obj) {\n\t    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t      keys.push(key);\n\t    }\n\t  }\n\t  return keys;\n\t}\n\t\n\t/**\n\t * Expose\n\t */\n\t\n\tTerminal.EventEmitter = EventEmitter;\n\tTerminal.Stream = Stream;\n\tTerminal.inherits = inherits;\n\tTerminal.on = on;\n\tTerminal.off = off;\n\tTerminal.cancel = cancel;\n\t\n\tif (true) {\n\t  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() { return Terminal; }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof module !== 'undefined') {\n\t  module.exports = Terminal;\n\t} else {\n\t  this.Terminal = Terminal;\n\t}\n\t\n\t}).call(function() {\n\t  return this || (typeof window !== 'undefined' ? window : global);\n\t}());\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 11:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\tvar cockpit = __webpack_require__(7);\n\tvar mustache = __webpack_require__(12);\n\t\n\t/*\n\t * Turns a mustache template into a translated mustache template\n\t * by preparsing it and translating it.\n\t */\n\tvar cache = { };\n\t\n\tfunction translate(template) {\n\t    if (template in cache)\n\t        return cache[template];\n\t    var div = document.createElement(\"div\");\n\t    div.innerHTML = template;\n\t    cockpit.translate(div);\n\t    var result = div.innerHTML;\n\t    cache[template] = result;\n\t    return result;\n\t}\n\t\n\t/* Just like the mustache object, except for translated */\n\tmodule.exports = cockpit.extend({ }, mustache, {\n\t    render: function render(template, view, partials) {\n\t        return translate(mustache.render(template, view, partials));\n\t    },\n\t    to_html: function to_html(template, view, partials, send) {\n\t        return translate(mustache.to_html(template, view, partials, send));\n\t    },\n\t    clearCache: function clearCache() {\n\t        cache = { };\n\t        return mustache.clearCache();\n\t    }\n\t});\n\n\n/***/ },\n\n/***/ 12:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * mustache.js - Logic-less {{mustache}} templates with JavaScript\n\t * http://github.com/janl/mustache.js\n\t */\n\t\n\t/*global define: false*/\n\t\n\t(function (root, factory) {\n\t  if (typeof exports === \"object\" && exports) {\n\t    factory(exports); // CommonJS\n\t  } else {\n\t    var mustache = {};\n\t    factory(mustache);\n\t    if (true) {\n\t      !(__WEBPACK_AMD_DEFINE_FACTORY__ = (mustache), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD\n\t    } else {\n\t      root.Mustache = mustache; // <script>\n\t    }\n\t  }\n\t}(this, function (mustache) {\n\t\n\t  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n\t  // See https://github.com/janl/mustache.js/issues/189\n\t  var RegExp_test = RegExp.prototype.test;\n\t  function testRegExp(re, string) {\n\t    return RegExp_test.call(re, string);\n\t  }\n\t\n\t  var nonSpaceRe = /\\S/;\n\t  function isWhitespace(string) {\n\t    return !testRegExp(nonSpaceRe, string);\n\t  }\n\t\n\t  var Object_toString = Object.prototype.toString;\n\t  var isArray = Array.isArray || function (object) {\n\t    return Object_toString.call(object) === '[object Array]';\n\t  };\n\t\n\t  function isFunction(object) {\n\t    return typeof object === 'function';\n\t  }\n\t\n\t  function escapeRegExp(string) {\n\t    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n\t  }\n\t\n\t  var entityMap = {\n\t    \"&\": \"&amp;\",\n\t    \"<\": \"&lt;\",\n\t    \">\": \"&gt;\",\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    \"/\": '&#x2F;'\n\t  };\n\t\n\t  function escapeHtml(string) {\n\t    return String(string).replace(/[&<>\"'\\/]/g, function (s) {\n\t      return entityMap[s];\n\t    });\n\t  }\n\t\n\t  function escapeTags(tags) {\n\t    if (!isArray(tags) || tags.length !== 2) {\n\t      throw new Error('Invalid tags: ' + tags);\n\t    }\n\t\n\t    return [\n\t      new RegExp(escapeRegExp(tags[0]) + \"\\\\s*\"),\n\t      new RegExp(\"\\\\s*\" + escapeRegExp(tags[1]))\n\t    ];\n\t  }\n\t\n\t  var whiteRe = /\\s*/;\n\t  var spaceRe = /\\s+/;\n\t  var equalsRe = /\\s*=/;\n\t  var curlyRe = /\\s*\\}/;\n\t  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\t\n\t  /**\n\t   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n\t   * argument is given here it must be an array with two string values: the\n\t   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n\t   * course, the default is to use mustaches (i.e. mustache.tags).\n\t   *\n\t   * A token is an array with at least 4 elements. The first element is the\n\t   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n\t   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n\t   * all text that appears outside a symbol this element is \"text\".\n\t   *\n\t   * The second element of a token is its \"value\". For mustache tags this is\n\t   * whatever else was inside the tag besides the opening symbol. For text tokens\n\t   * this is the text itself.\n\t   *\n\t   * The third and fourth elements of the token are the start and end indices,\n\t   * respectively, of the token in the original template.\n\t   *\n\t   * Tokens that are the root node of a subtree contain two more elements: 1) an\n\t   * array of tokens in the subtree and 2) the index in the original template at\n\t   * which the closing tag for that section begins.\n\t   */\n\t  function parseTemplate(template, tags) {\n\t    tags = tags || mustache.tags;\n\t    template = template || '';\n\t\n\t    if (typeof tags === 'string') {\n\t      tags = tags.split(spaceRe);\n\t    }\n\t\n\t    var tagRes = escapeTags(tags);\n\t    var scanner = new Scanner(template);\n\t\n\t    var sections = [];     // Stack to hold section tokens\n\t    var tokens = [];       // Buffer to hold the tokens\n\t    var spaces = [];       // Indices of whitespace tokens on the current line\n\t    var hasTag = false;    // Is there a {{tag}} on the current line?\n\t    var nonSpace = false;  // Is there a non-space char on the current line?\n\t\n\t    // Strips all whitespace tokens array for the current line\n\t    // if there was a {{#tag}} on it and otherwise only space.\n\t    function stripSpace() {\n\t      if (hasTag && !nonSpace) {\n\t        while (spaces.length) {\n\t          delete tokens[spaces.pop()];\n\t        }\n\t      } else {\n\t        spaces = [];\n\t      }\n\t\n\t      hasTag = false;\n\t      nonSpace = false;\n\t    }\n\t\n\t    var start, type, value, chr, token, openSection;\n\t    while (!scanner.eos()) {\n\t      start = scanner.pos;\n\t\n\t      // Match any text between tags.\n\t      value = scanner.scanUntil(tagRes[0]);\n\t      if (value) {\n\t        for (var i = 0, len = value.length; i < len; ++i) {\n\t          chr = value.charAt(i);\n\t\n\t          if (isWhitespace(chr)) {\n\t            spaces.push(tokens.length);\n\t          } else {\n\t            nonSpace = true;\n\t          }\n\t\n\t          tokens.push(['text', chr, start, start + 1]);\n\t          start += 1;\n\t\n\t          // Check for whitespace on the current line.\n\t          if (chr === '\\n') {\n\t            stripSpace();\n\t          }\n\t        }\n\t      }\n\t\n\t      // Match the opening tag.\n\t      if (!scanner.scan(tagRes[0])) break;\n\t      hasTag = true;\n\t\n\t      // Get the tag type.\n\t      type = scanner.scan(tagRe) || 'name';\n\t      scanner.scan(whiteRe);\n\t\n\t      // Get the tag value.\n\t      if (type === '=') {\n\t        value = scanner.scanUntil(equalsRe);\n\t        scanner.scan(equalsRe);\n\t        scanner.scanUntil(tagRes[1]);\n\t      } else if (type === '{') {\n\t        value = scanner.scanUntil(new RegExp('\\\\s*' + escapeRegExp('}' + tags[1])));\n\t        scanner.scan(curlyRe);\n\t        scanner.scanUntil(tagRes[1]);\n\t        type = '&';\n\t      } else {\n\t        value = scanner.scanUntil(tagRes[1]);\n\t      }\n\t\n\t      // Match the closing tag.\n\t      if (!scanner.scan(tagRes[1])) {\n\t        throw new Error('Unclosed tag at ' + scanner.pos);\n\t      }\n\t\n\t      token = [ type, value, start, scanner.pos ];\n\t      tokens.push(token);\n\t\n\t      if (type === '#' || type === '^') {\n\t        sections.push(token);\n\t      } else if (type === '/') {\n\t        // Check section nesting.\n\t        openSection = sections.pop();\n\t\n\t        if (!openSection) {\n\t          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\t        }\n\t        if (openSection[1] !== value) {\n\t          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n\t        }\n\t      } else if (type === 'name' || type === '{' || type === '&') {\n\t        nonSpace = true;\n\t      } else if (type === '=') {\n\t        // Set the tags for the next time around.\n\t        tagRes = escapeTags(tags = value.split(spaceRe));\n\t      }\n\t    }\n\t\n\t    // Make sure there are no open sections when we're done.\n\t    openSection = sections.pop();\n\t    if (openSection) {\n\t      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\t    }\n\t\n\t    return nestTokens(squashTokens(tokens));\n\t  }\n\t\n\t  /**\n\t   * Combines the values of consecutive text tokens in the given `tokens` array\n\t   * to a single token.\n\t   */\n\t  function squashTokens(tokens) {\n\t    var squashedTokens = [];\n\t\n\t    var token, lastToken;\n\t    for (var i = 0, len = tokens.length; i < len; ++i) {\n\t      token = tokens[i];\n\t\n\t      if (token) {\n\t        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n\t          lastToken[1] += token[1];\n\t          lastToken[3] = token[3];\n\t        } else {\n\t          squashedTokens.push(token);\n\t          lastToken = token;\n\t        }\n\t      }\n\t    }\n\t\n\t    return squashedTokens;\n\t  }\n\t\n\t  /**\n\t   * Forms the given array of `tokens` into a nested tree structure where\n\t   * tokens that represent a section have two additional items: 1) an array of\n\t   * all tokens that appear in that section and 2) the index in the original\n\t   * template that represents the end of that section.\n\t   */\n\t  function nestTokens(tokens) {\n\t    var nestedTokens = [];\n\t    var collector = nestedTokens;\n\t    var sections = [];\n\t\n\t    var token, section;\n\t    for (var i = 0, len = tokens.length; i < len; ++i) {\n\t      token = tokens[i];\n\t\n\t      switch (token[0]) {\n\t      case '#':\n\t      case '^':\n\t        collector.push(token);\n\t        sections.push(token);\n\t        collector = token[4] = [];\n\t        break;\n\t      case '/':\n\t        section = sections.pop();\n\t        section[5] = token[2];\n\t        collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n\t        break;\n\t      default:\n\t        collector.push(token);\n\t      }\n\t    }\n\t\n\t    return nestedTokens;\n\t  }\n\t\n\t  /**\n\t   * A simple string scanner that is used by the template parser to find\n\t   * tokens in template strings.\n\t   */\n\t  function Scanner(string) {\n\t    this.string = string;\n\t    this.tail = string;\n\t    this.pos = 0;\n\t  }\n\t\n\t  /**\n\t   * Returns `true` if the tail is empty (end of string).\n\t   */\n\t  Scanner.prototype.eos = function () {\n\t    return this.tail === \"\";\n\t  };\n\t\n\t  /**\n\t   * Tries to match the given regular expression at the current position.\n\t   * Returns the matched text if it can match, the empty string otherwise.\n\t   */\n\t  Scanner.prototype.scan = function (re) {\n\t    var match = this.tail.match(re);\n\t\n\t    if (match && match.index === 0) {\n\t      var string = match[0];\n\t      this.tail = this.tail.substring(string.length);\n\t      this.pos += string.length;\n\t      return string;\n\t    }\n\t\n\t    return \"\";\n\t  };\n\t\n\t  /**\n\t   * Skips all text until the given regular expression can be matched. Returns\n\t   * the skipped string, which is the entire tail if no match can be made.\n\t   */\n\t  Scanner.prototype.scanUntil = function (re) {\n\t    var index = this.tail.search(re), match;\n\t\n\t    switch (index) {\n\t    case -1:\n\t      match = this.tail;\n\t      this.tail = \"\";\n\t      break;\n\t    case 0:\n\t      match = \"\";\n\t      break;\n\t    default:\n\t      match = this.tail.substring(0, index);\n\t      this.tail = this.tail.substring(index);\n\t    }\n\t\n\t    this.pos += match.length;\n\t\n\t    return match;\n\t  };\n\t\n\t  /**\n\t   * Represents a rendering context by wrapping a view object and\n\t   * maintaining a reference to the parent context.\n\t   */\n\t  function Context(view, parentContext) {\n\t    this.view = view == null ? {} : view;\n\t    this.cache = { '.': this.view };\n\t    this.parent = parentContext;\n\t  }\n\t\n\t  /**\n\t   * Creates a new context using the given view with this context\n\t   * as the parent.\n\t   */\n\t  Context.prototype.push = function (view) {\n\t    return new Context(view, this);\n\t  };\n\t\n\t  /**\n\t   * Returns the value of the given name in this context, traversing\n\t   * up the context hierarchy if the value is absent in this context's view.\n\t   */\n\t  Context.prototype.lookup = function (name) {\n\t    var value;\n\t    if (name in this.cache) {\n\t      value = this.cache[name];\n\t    } else {\n\t      var context = this;\n\t\n\t      while (context) {\n\t        if (name.indexOf('.') > 0) {\n\t          value = context.view;\n\t\n\t          var names = name.split('.'), i = 0;\n\t          while (value != null && i < names.length) {\n\t            value = value[names[i++]];\n\t          }\n\t        } else {\n\t          value = context.view[name];\n\t        }\n\t\n\t        if (value != null) break;\n\t\n\t        context = context.parent;\n\t      }\n\t\n\t      this.cache[name] = value;\n\t    }\n\t\n\t    if (isFunction(value)) {\n\t      value = value.call(this.view);\n\t    }\n\t\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * A Writer knows how to take a stream of tokens and render them to a\n\t   * string, given a context. It also maintains a cache of templates to\n\t   * avoid the need to parse the same template twice.\n\t   */\n\t  function Writer() {\n\t    this.cache = {};\n\t  }\n\t\n\t  /**\n\t   * Clears all cached templates in this writer.\n\t   */\n\t  Writer.prototype.clearCache = function () {\n\t    this.cache = {};\n\t  };\n\t\n\t  /**\n\t   * Parses and caches the given `template` and returns the array of tokens\n\t   * that is generated from the parse.\n\t   */\n\t  Writer.prototype.parse = function (template, tags) {\n\t    var cache = this.cache;\n\t    var tokens = cache[template];\n\t\n\t    if (tokens == null) {\n\t      tokens = cache[template] = parseTemplate(template, tags);\n\t    }\n\t\n\t    return tokens;\n\t  };\n\t\n\t  /**\n\t   * High-level method that is used to render the given `template` with\n\t   * the given `view`.\n\t   *\n\t   * The optional `partials` argument may be an object that contains the\n\t   * names and templates of partials that are used in the template. It may\n\t   * also be a function that is used to load partial templates on the fly\n\t   * that takes a single argument: the name of the partial.\n\t   */\n\t  Writer.prototype.render = function (template, view, partials) {\n\t    var tokens = this.parse(template);\n\t    var context = (view instanceof Context) ? view : new Context(view);\n\t    return this.renderTokens(tokens, context, partials, template);\n\t  };\n\t\n\t  /**\n\t   * Low-level method that renders the given array of `tokens` using\n\t   * the given `context` and `partials`.\n\t   *\n\t   * Note: The `originalTemplate` is only ever used to extract the portion\n\t   * of the original template that was contained in a higher-order section.\n\t   * If the template doesn't use higher-order sections, this argument may\n\t   * be omitted.\n\t   */\n\t  Writer.prototype.renderTokens = function (tokens, context, partials, originalTemplate) {\n\t    var buffer = '';\n\t\n\t    // This function is used to render an arbitrary template\n\t    // in the current context by higher-order sections.\n\t    var self = this;\n\t    function subRender(template) {\n\t      return self.render(template, context, partials);\n\t    }\n\t\n\t    var token, value;\n\t    for (var i = 0, len = tokens.length; i < len; ++i) {\n\t      token = tokens[i];\n\t\n\t      switch (token[0]) {\n\t      case '#':\n\t        value = context.lookup(token[1]);\n\t        if (!value) continue;\n\t\n\t        if (isArray(value)) {\n\t          for (var j = 0, jlen = value.length; j < jlen; ++j) {\n\t            buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n\t          }\n\t        } else if (typeof value === 'object' || typeof value === 'string') {\n\t          buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n\t        } else if (isFunction(value)) {\n\t          if (typeof originalTemplate !== 'string') {\n\t            throw new Error('Cannot use higher-order sections without the original template');\n\t          }\n\t\n\t          // Extract the portion of the original template that the section contains.\n\t          value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\t\n\t          if (value != null) buffer += value;\n\t        } else {\n\t          buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n\t        }\n\t\n\t        break;\n\t      case '^':\n\t        value = context.lookup(token[1]);\n\t\n\t        // Use JavaScript's definition of falsy. Include empty arrays.\n\t        // See https://github.com/janl/mustache.js/issues/186\n\t        if (!value || (isArray(value) && value.length === 0)) {\n\t          buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n\t        }\n\t\n\t        break;\n\t      case '>':\n\t        if (!partials) continue;\n\t        value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n\t        if (value != null) buffer += this.renderTokens(this.parse(value), context, partials, value);\n\t        break;\n\t      case '&':\n\t        value = context.lookup(token[1]);\n\t        if (value != null) buffer += value;\n\t        break;\n\t      case 'name':\n\t        value = context.lookup(token[1]);\n\t        if (value != null) buffer += mustache.escape(value);\n\t        break;\n\t      case 'text':\n\t        buffer += token[1];\n\t        break;\n\t      }\n\t    }\n\t\n\t    return buffer;\n\t  };\n\t\n\t  mustache.name = \"mustache.js\";\n\t  mustache.version = \"0.8.1\";\n\t  mustache.tags = [ \"{{\", \"}}\" ];\n\t\n\t  // All high-level mustache.* functions use this writer.\n\t  var defaultWriter = new Writer();\n\t\n\t  /**\n\t   * Clears all cached templates in the default writer.\n\t   */\n\t  mustache.clearCache = function () {\n\t    return defaultWriter.clearCache();\n\t  };\n\t\n\t  /**\n\t   * Parses and caches the given template in the default writer and returns the\n\t   * array of tokens it contains. Doing this ahead of time avoids the need to\n\t   * parse templates on the fly as they are rendered.\n\t   */\n\t  mustache.parse = function (template, tags) {\n\t    return defaultWriter.parse(template, tags);\n\t  };\n\t\n\t  /**\n\t   * Renders the `template` with the given `view` and `partials` using the\n\t   * default writer.\n\t   */\n\t  mustache.render = function (template, view, partials) {\n\t    return defaultWriter.render(template, view, partials);\n\t  };\n\t\n\t  // This is here for backwards compatibility with 0.4.x.\n\t  mustache.to_html = function (template, view, partials, send) {\n\t    var result = mustache.render(template, view, partials);\n\t\n\t    if (isFunction(send)) {\n\t      send(result);\n\t    } else {\n\t      return result;\n\t    }\n\t  };\n\t\n\t  // Export the escaping function so that the user may override it.\n\t  // See https://github.com/janl/mustache.js/issues/244\n\t  mustache.escape = escapeHtml;\n\t\n\t  // Export these mainly for testing, but also for advanced usage.\n\t  mustache.Scanner = Scanner;\n\t  mustache.Context = Context;\n\t  mustache.Writer = Writer;\n\t\n\t}));\n\n\n/***/ },\n\n/***/ 15:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2015 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(6);\n\t    var cockpit = __webpack_require__(7);\n\t\n\t    var Mustache = __webpack_require__(11);\n\t    __webpack_require__(16);\n\t\n\t    var docker = __webpack_require__(8);\n\t    var bar = __webpack_require__(17);\n\t\n\t    var _ = cockpit.gettext;\n\t\n\t    var util = { };\n\t\n\t    util.resource_debug = function resource_debug() {\n\t        if (window.debugging == \"all\" || window.debugging == \"resource\")\n\t            console.debug.apply(console, arguments);\n\t    };\n\t\n\t    util.docker_debug = function docker_debug() {\n\t        if (window.debugging == \"all\" || window.debugging == \"docker\")\n\t            console.debug.apply(console, arguments);\n\t    };\n\t\n\t    util.quote_cmdline = function quote_cmdline(cmds) {\n\t        return docker.quote_cmdline(cmds || []);\n\t    };\n\t\n\t    util.unquote_cmdline = function unquote_cmdline(string) {\n\t        return docker.unquote_cmdline(string);\n\t    };\n\t\n\t    util.render_container_cmdline = function render_container_cmdline (container) {\n\t        // We do our own quoting in preference to using container.Command.\n\t        // We do this for consistency, and also to avoid bugs in how\n\t        // Docker creates container.Command.  Docker doesn't escape quote\n\t        // characters, for example.\n\t\n\t        if (container.Config)\n\t            return util.quote_cmdline ((container.Config.Entrypoint || []).concat(container.Config.Cmd || []));\n\t        else\n\t            return container.Command;\n\t    };\n\t\n\t    /*\n\t     * Recent versions of docker have a 'Status' field in the state,\n\t     * but earlier versions have distinct fields which we need to combine.\n\t     */\n\t    util.render_container_status = function render_container_status(state) {\n\t        if (state.Status)\n\t            return state.Status;\n\t        if (state.Running)\n\t            return \"running\";\n\t        if (state.Paused)\n\t            return \"paused\";\n\t        if (state.Restarting)\n\t            return \"restarting\";\n\t        if (state.FinishedAt && state.FinishedAt.indexOf(\"0001\") === 0)\n\t            return \"created\";\n\t        return \"exited\";\n\t    };\n\t\n\t    util.render_container_name = function render_container_name (name) {\n\t        if (name.length > 0 && name[0] == \"/\")\n\t            return name.slice(1);\n\t        else\n\t            return name;\n\t    };\n\t\n\t    util.render_container_state = function render_container_state (state) {\n\t        if (state.Running)\n\t            return cockpit.format(_(\"Up since $StartedAt\"), state);\n\t        else\n\t            return cockpit.format(_(\"Exited $ExitCode\"), state);\n\t    };\n\t\n\t    util.render_container_restart_policy = function render_restart_policy(policy) {\n\t        switch (policy.Name) {\n\t            case \"no\":\n\t                return _(\"No\");\n\t            case \"on-failure\":\n\t                var text = cockpit.ngettext(\"On failure, retry $0 time\", \"On failure, retry $0 times\", policy.MaximumRetryCount);\n\t                return cockpit.format(text, policy.MaximumRetryCount);\n\t            case \"always\":\n\t                return _(\"Always\");\n\t            case \"unless-stopped\":\n\t                return _(\"Unless Stopped\");\n\t            default: /* Keeping this here just in case. http://stackoverflow.com/a/4878800 */\n\t                return policy.Name.replace('-', ' ').replace(/\\w\\S*/g, function(txt) {\n\t                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n\t                });\n\t        }\n\t    };\n\t\n\t    util.multi_line = function multi_line(strings) {\n\t        return strings.map(function (str) { return Mustache.render(\"{{.}}\", str); }).join('<br/>');\n\t    };\n\t\n\t    util.format_cpu_shares = function format_cpu_shares(priority) {\n\t        if (!priority)\n\t            return _(\"default\");\n\t        return cockpit.format(_(\"$0 shares\"), Math.round(priority));\n\t    };\n\t\n\t    util.format_cpu_usage = function format_cpu_usage(usage) {\n\t        if (usage === undefined || isNaN(usage))\n\t            return \"\";\n\t        return Math.round(usage) + \"%\";\n\t    };\n\t\n\t    util.update_memory_bar = function update_memory_bar(bar, usage, limit) {\n\t        var parts = [ usage ];\n\t        if (limit)\n\t            parts.push(limit);\n\t        $(bar).\n\t            attr(\"value\", parts.join(\"/\")).\n\t            toggleClass(\"bar-row-danger\", !!(limit && usage > 0.9 * limit));\n\t    };\n\t\n\t    util.format_memory_and_limit = function format_memory_and_limit(usage, limit) {\n\t        if (usage === undefined || isNaN(usage))\n\t            return \"\";\n\t\n\t        var mtext = \"\";\n\t        var units = 1024;\n\t        var parts;\n\t        if (limit) {\n\t            parts = cockpit.format_bytes(limit, units, true);\n\t            mtext = \" / \" + parts.join(\" \");\n\t            units = parts[1];\n\t        }\n\t\n\t        if (usage) {\n\t            parts = cockpit.format_bytes(usage, units, true);\n\t            if (mtext)\n\t                return parts[0] + mtext;\n\t            else\n\t                return parts.join(\" \");\n\t        } else {\n\t            return \"?\" + mtext;\n\t        }\n\t    };\n\t\n\t    util.insert_table_sorted = function insert_table_sorted(table, row) {\n\t        util.insert_table_sorted_generic(table, row, function(row1, row2) {\n\t            return row1.text().localeCompare(row2.text());\n\t        });\n\t    };\n\t\n\t    util.insert_table_sorted_generic = function insert_table_sorted_generic(table, row, cmp) {\n\t        var rows = $(table).find(\"tbody tr\");\n\t        for (var j = 0; j < rows.length; j++) {\n\t            if (cmp($(rows[j]), row) > 0) {\n\t                $(row).insertBefore(rows[j]);\n\t                row = null;\n\t                break;\n\t            }\n\t        }\n\t        if (row !== null)\n\t            $(table).find(\"tbody\").append(row);\n\t    };\n\t\n\t    util.setup_danger_button = function setup_danger_button(id, parent_id, callback) {\n\t        var danger_button = $('<button class=\"btn btn-default btn-control-ct fa fa-check enable-danger\">')\n\t            .toggle(false)\n\t            .on(\"click\", callback);\n\t        $(id + ' th.container-column-actions').append(danger_button);\n\t        $(parent_id)[0].addEventListener(\"click\", function(ev) {\n\t            if ($(ev.target).parents(id).length === 0 &&\n\t                $(id + ' button.enable-danger').hasClass('active'))\n\t                callback();\n\t        }, true);\n\t    };\n\t\n\t    util.render_container = function render_container(client, $panel,\n\t                                                      prefix, id, container, danger_mode) {\n\t\n\t        // Docker ID can contain funny characters such as \":\" so\n\t        // we take care not to embed them into jQuery query\n\t        // strings or HTML.\n\t\n\t        var tr = $(document.getElementById(prefix + id));\n\t\n\t        if (!container) {\n\t            tr.remove();\n\t            if (!$panel.find('table > tbody > tr').length) {\n\t                $panel.find('button.enable-danger').toggle(false);\n\t            }\n\t            return;\n\t        }\n\t\n\t        var cputext;\n\t        var memuse, memlimit;\n\t        var membar, memtext, memtextstyle;\n\t\n\t        if (container.State && container.State.Running) {\n\t            cputext = util.format_cpu_usage(container.CpuUsage);\n\t\n\t            memuse = container.MemoryUsage;\n\t            memlimit = container.MemoryLimit;\n\t            memtext = util.format_memory_and_limit(memuse, memlimit);\n\t\n\t            membar = true;\n\t            memtextstyle = { 'color': 'inherit' };\n\t        } else {\n\t            cputext = \"\";\n\t            membar = false;\n\t            memtext = _(\"Stopped\");\n\t            memtextstyle = { 'color': 'grey', 'text-align': 'right' };\n\t        }\n\t\n\t        var added = false;\n\t        if (!tr.length) {\n\t            $panel.find('button.enable-danger').toggle(true);\n\t            var img_waiting = $('<div class=\"spinner\">');\n\t            var btn_delete = $('<button class=\"btn btn-danger pficon pficon-delete btn-delete\">').\n\t                on(\"click\", function() {\n\t                    var self = this;\n\t                    $(self).hide().\n\t                        siblings(\"div.spinner\").show();\n\t                    util.docker_container_delete(client, id, function() { }, function () { $(self).show().siblings(\"div.spinner\").hide(); });\n\t                    return false;\n\t                });\n\t            var btn_play = $('<button class=\"btn btn-default btn-control-ct fa fa-play\">').\n\t                on(\"click\", function() {\n\t                    $(this).hide().\n\t                        siblings(\"div.spinner\").show();\n\t                    client.start(id).\n\t                        fail(function(ex) {\n\t                            util.handle_scope_start_container(client, id, ex.message);\n\t                        });\n\t                    return false;\n\t                });\n\t            var btn_stop = $('<button class=\"btn btn-default btn-control-ct fa fa-stop\">').\n\t                on(\"click\", function() {\n\t                    $(this).hide().\n\t                        siblings(\"div.spinner\").show();\n\t                    client.stop(id).\n\t                        fail(function(ex) {\n\t                            util.show_unexpected_error(ex);\n\t                        });\n\t                    return false;\n\t                });\n\t            tr = $('<tr>', { 'id': prefix + id }).append(\n\t                $('<td class=\"container-column-name\">'),\n\t                $('<td class=\"container-column-image\">'),\n\t                $('<td class=\"container-column-command\">'),\n\t                $('<td class=\"container-column-cpu\">'),\n\t                $('<td class=\"container-column-memory-graph\">').append(bar.create(\"containers-containers\")),\n\t                $('<td class=\"container-column-memory-text\">'),\n\t                $('<td class=\"container-column-danger cell-buttons\">').append(btn_delete, img_waiting),\n\t                $('<td class=\"container-column-actions cell-buttons\">').append(btn_play, btn_stop, img_waiting.clone()));\n\t\n\t            tr.on('click', function(event) {\n\t                cockpit.location.go([ id ]);\n\t            });\n\t\n\t            added = true;\n\t        }\n\t\n\t        var row = tr.children(\"td\");\n\t        $(row[0]).text(util.render_container_name(container.Name));\n\t\n\t        var image = container.Image;\n\t        if (container.ImageID && image == container.ImageID)\n\t            image = docker.truncate_id(image);\n\t        $(row[1]).text(image);\n\t\n\t        $(row[2]).text(util.render_container_cmdline(container));\n\t        $(row[3]).text(cputext);\n\t        util.update_memory_bar($(row[4]).children(\"div\").toggle(membar), memuse, memlimit);\n\t        $(row[5]).\n\t            css(memtextstyle).\n\t            text(memtext);\n\t\n\t        var waiting = id in client.waiting;\n\t        $(row[6]).children(\"div.spinner\").toggle(waiting);\n\t        $(row[6]).children(\"button.btn-delete\")\n\t            .toggle(!waiting)\n\t            .toggleClass('disabled', container.State.Running);\n\t\n\t        var title = (waiting || container.State.Running) ? \"You can only delete<br/> stopped containers\" : \"Delete immediately\";\n\t\n\t        $(row[6]).children(\"button.btn-delete\")\n\t            .tooltip('destroy')\n\t            .attr(\"title\", title)\n\t            .tooltip({html: true});\n\t\n\t\n\t        $(row[7]).children(\"div.spinner\").toggle(waiting);\n\t        $(row[7]).children(\"button.fa-play\").toggle(!waiting && !container.State.Running);\n\t        $(row[7]).children(\"button.fa-stop\").toggle(!waiting && container.State.Running);\n\t\n\t        $(row[6]).toggle(danger_mode);\n\t        $(row[7]).toggle(!danger_mode);\n\t\n\t        tr.toggleClass(\"unimportant\", !container.State.Running);\n\t\n\t        if (added)\n\t            util.insert_table_sorted($panel.find('table'), tr);\n\t\n\t        bar.update();\n\t    };\n\t\n\t    /* Slider/text/checkbox interaction happens here */\n\t    function Slider(sel, min, max, parse, format) {\n\t        var self = this;\n\t        var slider, input, check;\n\t        var updating = false;\n\t        var data;\n\t\n\t        /* Logarithmic scale */\n\t        if (min < 0)\n\t            min = 0;\n\t        if (max < 0)\n\t            max = 0;\n\t        var minv = Math.log(min);\n\t        var maxv = Math.log(max);\n\t        var scale = (maxv - minv);\n\t\n\t        function limit(val) {\n\t            if (val < min)\n\t                val = min;\n\t            else if (val > max)\n\t                val = max;\n\t            return val;\n\t        }\n\t\n\t        function slider_load() {\n\t            if (check.checked)\n\t                data = limit(Math.round(Math.exp(minv + scale * slider.value)));\n\t            else\n\t                data = undefined;\n\t        }\n\t\n\t        function slider_update() {\n\t            updating = true;\n\t            if (data !== undefined)\n\t                $(slider).prop(\"value\", (Math.log(data) - minv) / scale);\n\t            $(slider)\n\t                .attr(\"disabled\", data === undefined)\n\t                .trigger(\"change\");\n\t            updating = false;\n\t        }\n\t\n\t        function text_load() {\n\t            var val;\n\t            if (check.checked)\n\t                val = limit(parse($(input).val()));\n\t            else\n\t                val = undefined;\n\t            if (isNaN(val))\n\t                val = undefined;\n\t            data = val;\n\t        }\n\t\n\t        function text_update() {\n\t            updating = true;\n\t            if (data !== undefined)\n\t                $(input).val(format(data));\n\t            $(input).attr(\"disabled\", data === undefined);\n\t            updating = false;\n\t        }\n\t\n\t        function check_load() {\n\t            if (!check.checked)\n\t                data = undefined;\n\t        }\n\t\n\t        function check_update() {\n\t            updating = true;\n\t            $(check).prop(\"checked\", data !== undefined);\n\t            updating = false;\n\t        }\n\t\n\t        /* Slider to change CPU priority */\n\t        slider = sel.find(\"div.slider\").\n\t            on('change', function() {\n\t                if (updating)\n\t                    return;\n\t                slider_load();\n\t                text_update();\n\t            })[0];\n\t\n\t        /* Number value of CPU priority */\n\t        input = sel.find(\"input.size-text-ct\").\n\t            on('change', function() {\n\t                if (updating)\n\t                    return;\n\t                text_load();\n\t                slider_update();\n\t            })[0];\n\t\n\t        /* Default checkbox */\n\t        check = sel.find(\"input[type='checkbox']\").\n\t            on('change', function() {\n\t                if (updating)\n\t                    return;\n\t                check_load();\n\t                if (this.checked)\n\t                    text_load();\n\t                slider_update();\n\t                text_update();\n\t            })[0];\n\t\n\t        Object.defineProperty(self, \"value\", {\n\t            get: function() {\n\t                return data;\n\t            },\n\t            set: function(v) {\n\t                data = v;\n\t                check_update();\n\t                slider_update();\n\t                text_update();\n\t            }\n\t        });\n\t\n\t        Object.defineProperty(self, \"max\", {\n\t            get: function() {\n\t                return max;\n\t            },\n\t            set: function(v) {\n\t                if (v < 0)\n\t                    v = 0;\n\t                max = v;\n\t                maxv = Math.log(max);\n\t                scale = (maxv - minv);\n\t                if (slider)\n\t                    slider_update();\n\t            }\n\t        });\n\t\n\t        return self;\n\t    }\n\t\n\t    /* Memory limit slider/checkbox interaction happens here */\n\t    util.MemorySlider = function MemorySlider(sel, min, max) {\n\t        function parse(val) {\n\t            return parseInt(val, 10) * 1024 * 1024;\n\t        }\n\t\n\t        function format(val) {\n\t            return cockpit.format_bytes(val, \"MiB\", true)[0];\n\t        }\n\t\n\t        return new Slider(sel, min, max, parse, format);\n\t    };\n\t\n\t    /* CPU priority slider/checkbox interaction happens here */\n\t    util.CpuSlider = function CpuSlider(sel, min, max) {\n\t        function parse(val) {\n\t            return parseInt(val, 10);\n\t        }\n\t\n\t        function format(val) {\n\t            return String(val);\n\t        }\n\t\n\t        return new Slider(sel, min, max, parse, format);\n\t    };\n\t\n\t    util.docker_container_delete = function docker_container_delete(docker_client, container_id, on_success, on_failure) {\n\t        docker_client.rm(container_id).\n\t            fail(function(ex) {\n\t                /* if container is still running, ask user to force delete */\n\t                if (ex.message.indexOf('remove a running container') > -1) {\n\t                    var container_info = docker_client.containers[container_id];\n\t                    var msg;\n\t                    if (container_info.State.Running) {\n\t                        msg = _(\"Container is currently running.\");\n\t                    } else {\n\t                        msg = _(\"Container is currently marked as not running, but regular stopping failed.\") +\n\t                            \" \" + _(\"Error message from Docker:\") +\n\t                            \" '\" + ex.message + \"'\";\n\t                    }\n\t                    var name;\n\t                    if (container_info.Name)\n\t                        name = container_info.Name;\n\t                    else\n\t                        name = container_id;\n\t                    if (name.charAt(0) === '/')\n\t                        name = name.substring(1);\n\t                    util.confirm(cockpit.format(_(\"Please confirm forced deletion of $0\"), name),\n\t                                 msg,\n\t                                 _(\"Force Delete\")).\n\t                        done(function () {\n\t                            docker_client.rm(container_id, true).\n\t                                fail(function(ex) {\n\t                                    util.show_unexpected_error(ex);\n\t                                    on_failure();\n\t                                }).\n\t                                done(on_success);\n\t                        }).\n\t                        fail(on_failure);\n\t                    return;\n\t                }\n\t                util.show_unexpected_error(ex);\n\t                on_failure();\n\t            }).\n\t            done(on_success);\n\t    };\n\t\n\t    /* if error message points to leftover scope, try to resolve the issue */\n\t    util.handle_scope_start_container = function handle_scope_start_container(docker_client, container_id, error_message, on_success, on_failure) {\n\t        var end_phrase = '.scope already exists';\n\t        var idx_end = error_message.indexOf(end_phrase);\n\t        /* HACK: workaround for https://github.com/docker/docker/issues/7015 */\n\t        if (idx_end > -1) {\n\t            var start_phrase = 'Unit docker-';\n\t            var idx_start = error_message.indexOf(start_phrase) + start_phrase.length;\n\t            var docker_container = error_message.substring(idx_start, idx_end);\n\t            cockpit.spawn([ \"systemctl\", \"stop\", \"docker-\" + docker_container + \".scope\" ], { \"superuser\": \"try\" }).\n\t                done(function () {\n\t                    docker_client.start(container_id).\n\t                        fail(function(ex) {\n\t                            if (on_failure)\n\t                                on_failure();\n\t                        }).\n\t                        done(function() {\n\t                            if (on_success)\n\t                                on_success();\n\t                        });\n\t                    return;\n\t                }).\n\t                fail(function (error) {\n\t                    util.show_unexpected_error(cockpit.format(_(\"Failed to stop Docker scope: $0\"), error));\n\t                    if (on_failure)\n\t                        on_failure();\n\t                });\n\t            return;\n\t        }\n\t        util.show_unexpected_error(error_message);\n\t        if (on_failure)\n\t            on_failure();\n\t    };\n\t\n\t    util.show_unexpected_error = function show_unexpected_error(error) {\n\t        $(\"#error-popup-message\").text(error.message || error || \"???\");\n\t        $('.modal[role=\"dialog\"]').modal('hide');\n\t        $('#error-popup').modal('show');\n\t    };\n\t\n\t    util.confirm = function confirm(title, body, action_text) {\n\t        var deferred = $.Deferred();\n\t\n\t        $('#confirmation-dialog-title').text(title);\n\t        if (typeof body == \"string\")\n\t            $('#confirmation-dialog-body').text(body);\n\t        else\n\t            $('#confirmation-dialog-body').html(body);\n\t        $('#confirmation-dialog-confirm').text(action_text);\n\t\n\t        function close() {\n\t            $('#confirmation-dialog button').off('click');\n\t            $('#confirmation-dialog').modal('hide');\n\t        }\n\t\n\t        $('#confirmation-dialog-confirm').click(function () {\n\t            close();\n\t            deferred.resolve();\n\t        });\n\t\n\t        $('#confirmation-dialog-cancel').click(function () {\n\t            close();\n\t            deferred.reject();\n\t        });\n\t\n\t        $('#confirmation-dialog').modal('show');\n\t        return deferred.promise();\n\t    };\n\t\n\t    module.exports = util;\n\t}());\n\n\n/***/ },\n\n/***/ 16:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(6);\n\t    var cockpit = __webpack_require__(7);\n\t\n\t    var unique_number = 0;\n\t    function unique() {\n\t        unique_number += 1;\n\t        return \"unique\" + -(new Date()) + -unique_number;\n\t    }\n\t\n\t    /* Dialog Patterns */\n\t\n\t    function clear_errors(sel) {\n\t        sel.find(\".dialog-error\").remove();\n\t        sel.find(\".has-error\").removeClass(\"has-error\");\n\t        sel.find(\".dialog-wrapper\").off(\".dialog-error\");\n\t        sel.off(\".dialog-error\");\n\t    }\n\t\n\t    function field_error(target, error) {\n\t        var wrapper = target.parent();\n\t        var next, refresh;\n\t\n\t        if (!wrapper.is(\".dialog-wrapper\")) {\n\t            wrapper = $(\"<div class='dialog-wrapper'>\").insertBefore(target);\n\t\n\t            /*\n\t             * Some bootstrap plugins replace html controls with their own\n\t             * stuff, so we have to account for that here.\n\t             */\n\t\n\t            next = target.next();\n\t            if (next.is(\".bootstrap-select\") && next.selectpicker) {\n\t                next.remove();\n\t                refresh = next.selectpicker;\n\t            }\n\t\n\t            target.remove().appendTo(wrapper);\n\t\n\t            if (refresh)\n\t                refresh.call(target);\n\t        }\n\t\n\t        var message;\n\t        if (error.message)\n\t            message = $(\"<div class='dialog-error help-block'>\").text(error.message);\n\t        wrapper.addClass(\"has-error\").append(message);\n\t\n\t        if (!wrapper.hasClass(\"error-keep\")) {\n\t            wrapper.on(\"keypress.dialog-error change.dialog-error\", function() {\n\t                wrapper.removeClass(\"has-error\")\n\t                    .find(\".dialog-error.help-block\").css(\"visibility\", \"hidden\");\n\t            });\n\t        }\n\t    }\n\t\n\t    function global_error(sel, error) {\n\t        var alert = $(\"<div class='alert alert-danger dialog-error'>\");\n\t        var text = error.message || error.toString();\n\t        alert.text(text);\n\t        $(\"<span class='fa fa-exclamation-triangle'>\").prependTo(alert);\n\t\n\t        /* Always log global dialog errors for easier debugging */\n\t        console.warn(text);\n\t\n\t        var footer = sel.find(\".modal-footer\");\n\t        if (footer.length)\n\t            alert.prependTo(footer);\n\t        else\n\t            alert.appendTo(sel);\n\t    }\n\t\n\t    function display_errors(sel, errors) {\n\t        clear_errors(sel);\n\t\n\t        /* The list of errors can also be passed as an array */\n\t        if (errors.length == 1 && $.isArray(errors[0]))\n\t            errors = errors[0];\n\t\n\t        var any = false;\n\t        errors.forEach(function(error) {\n\t            var target;\n\t            if (error) {\n\t                target = sel.find(error.target);\n\t\n\t                /* Errors for a specific field added below that field */\n\t                if (target && target.length)\n\t                    field_error(target, error);\n\t                else\n\t                    global_error(sel, error);\n\t\n\t                any = true;\n\t            }\n\t        });\n\t\n\t        if (!any)\n\t            return;\n\t\n\t        /* When dialog is shown again, remove all mods */\n\t        sel.on(\"show.bs.modal.dialog-error\", function() {\n\t            clear_errors(sel);\n\t        });\n\t    }\n\t\n\t    function DialogWait(promise, handle) {\n\t        this.promise = promise;\n\t        this.disabled = [];\n\t        this.handle = handle;\n\t    }\n\t\n\t    function clear_wait(sel) {\n\t        var data = sel.data(\"dialog-wait\");\n\t        sel.data(\"dialog-wait\", null);\n\t\n\t        sel.find(\".dialog-wait-ct\").remove();\n\t        sel.find(\".btn\").off(\".dialog-wait\");\n\t        sel.off(\".dialog-wait\");\n\t\n\t        if (data) {\n\t            data.disabled.forEach(function(ctl) {\n\t                ctl.removeAttr(\"disabled\");\n\t            });\n\t        }\n\t    }\n\t\n\t    function display_wait(sel, promise, handle) {\n\t        clear_wait(sel);\n\t\n\t        if (!promise) {\n\t            if (handle)\n\t                sel.modal(\"hide\");\n\t            return sel;\n\t        }\n\t\n\t        /* Clear all errors in the dialog */\n\t        if (handle)\n\t            display_errors(sel, []);\n\t\n\t        var wait = $(\"<div class='dialog-wait-ct pull-left'>\");\n\t        $(\"<div class='spinner spinner-sm'>\").appendTo(wait);\n\t        var message = $(\"<span>\").appendTo(wait);\n\t\n\t        sel.find(\".modal-footer button\").first().before(wait);\n\t\n\t        var data = new DialogWait(promise, handle);\n\t        sel.data(\"dialog-wait\", data);\n\t\n\t        var cancellation = promise.cancel || promise.close;\n\t        var cancelled = false;\n\t\n\t        /* Disable everything and stash previous disabled state */\n\t        var controls = sel.find(\".form-control\").add(\".btn\", sel);\n\t        if (cancellation)\n\t            controls = controls.not(\"[data-dismiss]\").not(\".btn-cancel\");\n\t        controls.each(function() {\n\t            var ctl = $(this);\n\t            if (!ctl.attr(\"disabled\")) {\n\t                data.disabled.push(ctl);\n\t                ctl.attr(\"disabled\", \"disabled\");\n\t            }\n\t        });\n\t\n\t        sel.find(\".btn[data-dismiss], .btn-cancel\").on(\"click.dialog-wait\", function() {\n\t            cancelled = true;\n\t            if (cancellation)\n\t                cancellation.apply(promise);\n\t            return false;\n\t        });\n\t\n\t        /* When dialog is shown again, remove all mods */\n\t        sel.on(\"hide.bs.modal.dialog-wait\", function() {\n\t            clear_wait(sel);\n\t        });\n\t\n\t        /*\n\t         * There is no way to remove a callback from a promise\n\t         * so we have to be careful to only react if still\n\t         * processing the same promise.\n\t         */\n\t        function restore() {\n\t            var state, data = sel.data(\"dialog-wait\");\n\t            if (data && data.promise === promise) {\n\t                clear_wait(sel);\n\t                state = promise.state();\n\t                if (cancelled || (state == \"resolved\" && data.handle))\n\t                    sel.modal('hide');\n\t                else if (state == \"rejected\" && data.handle)\n\t                    display_errors(sel, [ arguments[0] ]);\n\t            }\n\t        }\n\t\n\t        function update(arg) {\n\t            var data = sel.data(\"dialog-wait\");\n\t            if (data && data.promise === promise) {\n\t                if (typeof arg !== \"string\")\n\t                    arg = \"\";\n\t                message.text(arg);\n\t            }\n\t        }\n\t\n\t        promise\n\t            .always(restore)\n\t            .progress(update);\n\t\n\t        return sel;\n\t    }\n\t\n\t    $.fn.dialog = function dialog(action /* ... */) {\n\t        if (action === \"failure\")\n\t            return display_errors(this, Array.prototype.slice.call(arguments, 1));\n\t        else if (action === \"wait\")\n\t            return display_wait(this, arguments[1]);\n\t        else if (action === \"promise\")\n\t            return display_wait(this, arguments[1], true);\n\t        else\n\t            console.warn(\"unknown dialog action: \" + action);\n\t    };\n\t\n\t    window.addEventListener(\"hashchange\", function() {\n\t        $(\".modal\").modal(\"hide\");\n\t    });\n\t\n\t    /*\n\t     * OnOff switch pattern\n\t     */\n\t\n\t    function onoff_refresh(sel) {\n\t        /* During testing, no Cockpit dependency */\n\t        var _ = cockpit.gettext || function(x) { return x; };\n\t\n\t        sel = sel.find(\".btn-onoff-ct\").andSelf().filter(\".btn-onoff-ct\");\n\t        sel.each(function(x, el) {\n\t            var self = $(el)\n\t                .attr(\"data-toggle\", \"buttons\")\n\t                .addClass(\"btn-group\");\n\t            var value = self.onoff(\"value\");\n\t            var buttons = self.find(\".btn\");\n\t            var name = self.find(\"input\").first().attr(\"name\") || unique();\n\t            var i, input, text;\n\t            for (i = buttons.length; i < 2; i++) {\n\t                input = $('<input type=\"radio\" autocomplete=\"off\">');\n\t                text = document.createTextNode(i === 0 ? _(\"On\") : _(\"Off\"));\n\t                self.append($('<label class=\"btn\">').append(input, text));\n\t                buttons = null;\n\t            }\n\t            buttons = buttons || self.find(\".btn\");\n\t            buttons.find(\"input\").attr(\"name\", name);\n\t            onoff_change(self, !!value);\n\t        });\n\t        return sel;\n\t    }\n\t\n\t    function onoff_value(sel) {\n\t        return sel.find(\".btn\").first().hasClass(\"active\");\n\t    }\n\t\n\t    function onoff_change(sel, value) {\n\t        return sel.each(function(i, el) {\n\t            var buttons = $(el).find(\".btn\");\n\t            buttons.first().toggleClass(\"active\", !!value).find(\"input\").prop(\"checked\", !!value);\n\t            buttons.last().toggleClass(\"active\", !value).find(\"input\").prop(\"checked\", !value);\n\t        });\n\t    }\n\t\n\t    $.fn.onoff = function onoff(action /* ... */) {\n\t        if (arguments.length === 0 || action == \"refresh\") {\n\t            return onoff_refresh(this);\n\t        } else if (action === \"value\") {\n\t            if (arguments.length === 1)\n\t                return onoff_value(this);\n\t            else\n\t                return onoff_change(this, arguments[1]);\n\t        } else if (action == \"disabled\") {\n\t            return this.find(\".btn\").toggleClass(\"disabled\", arguments[1]);\n\t        } else {\n\t            console.warn(\"unknown switch action: \" + action);\n\t        }\n\t    };\n\t\n\t    /* ----------------------------------------------------------------------------\n\t     * Sliders\n\t     *\n\t     * <div class=\"slider\" value=\"0.5\">\n\t     *    <div class=\"slider-bar\">\n\t     *        <div class=\"slider-thumb\"></div>\n\t     *    </div>\n\t     *    <div class=\"slider-bar\">\n\t     *        <!-- optional left overs -->\n\t     *    </div>\n\t     * </div>\n\t     *\n\t     * A slider control. The first div.slider-bar is the one that is resized.\n\t     * The value will be bounded between 0 and 1 as a floating point number.\n\t     *\n\t     * The following div.slider-bar if present is resized to fill the remainder\n\t     * of the slider if not given a specific size. You can put more div.slider-bar\n\t     * inside it to reflect squashing other prevous allocations.\n\t     *\n\t     * If the following div.slider-bar have a width specified, then the\n\t     * slider supports the concept of overflowing. If the slider overflows\n\t     * it will get the .slider-warning class and go a bit red.\n\t     *\n\t     * On document creation any div.slider are automatically turned into\n\t     * Bar graphs.\n\t     *\n\t     * Slider has the following extra read/write properties:\n\t     *\n\t     * .value: the floating point value the slider is set to.\n\t     * .disabled: whether to display slider as disabled and refuse interacton.\n\t     *\n\t     * Slider has this event:\n\t     *\n\t     * on('change'): fired when the slider changes, passes value as additional arg.\n\t     */\n\t\n\t    function resize_flex(slider, flex, total, part) {\n\t        var value = 0;\n\t        if (part > total)\n\t            value = 1;\n\t        else if (part < 0 || isNaN(part))\n\t            value = 0;\n\t        else if (!isNaN(total) && total > 0 && part >= 0)\n\t            value = (part / total);\n\t        $(flex).css('width', (value * 100) + \"%\").\n\t            next(\"div\").css('margin-left', $(flex).css('width'));\n\t\n\t        /* Set the property and the attribute */\n\t        slider.value = value;\n\t    }\n\t\n\t    function update_value(slider) {\n\t        resize_flex(slider, $(slider).children(\"div.slider-bar\").first()[0], 1, slider.value);\n\t    }\n\t\n\t    function check_overflow(slider) {\n\t        $(slider).toggleClass(\"slider-warning\",\n\t                              slider.offsetWidth < slider.scrollWidth);\n\t    }\n\t\n\t    function setup_slider(slider) {\n\t        $(slider).attr('unselectable', 'on');\n\t\n\t        Object.defineProperty(slider, \"value\", {\n\t            get: function() {\n\t                return parseFloat(this.getAttribute(\"value\"));\n\t            },\n\t            set: function(v) {\n\t                var s = String(v);\n\t                if (s != this.getAttribute(\"value\"))\n\t                    this.setAttribute(\"value\", v);\n\t            }\n\t        });\n\t\n\t        Object.defineProperty(slider, \"disabled\", {\n\t            get: function() {\n\t                if (!this.hasAttribute(\"disabled\"))\n\t                    return false;\n\t                return this.getAttribute(\"disabled\").toLowerCase() != \"false\";\n\t            },\n\t            set: function(v) {\n\t                this.setAttribute(\"disabled\", v ? \"true\" : \"false\");\n\t            }\n\t        });\n\t\n\t        update_value(slider);\n\t        check_overflow(slider);\n\t\n\t        $(slider).on(\"change\", function() {\n\t            update_value(slider);\n\t            $(slider).toggleClass(\"slider-disabled\", slider.disabled);\n\t        });\n\t\n\t        if (slider.disabled)\n\t            $(slider).addClass(\"slider-disabled\");\n\t\n\t        $(slider).on(\"mousedown\", function(ev) {\n\t            if (slider.disabled)\n\t                return true; /* default action */\n\t            var flex;\n\t            var offset = $(slider).offset().left;\n\t            if ($(ev.target).hasClass(\"slider-thumb\")) {\n\t                var hitx  = (ev.offsetX || ev.clientX - $(ev.target).offset().left);\n\t                offset += (hitx - $(ev.target).outerWidth() / 2);\n\t                flex = $(ev.target).parent()[0];\n\t            } else {\n\t                flex = $(slider).children(\"div.slider-bar\").first()[0];\n\t                resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n\t                $(slider).trigger(\"change\", [slider.value]);\n\t                check_overflow(slider);\n\t            }\n\t\n\t            $(document).\n\t                on(\"mousemove.slider\", function(ev) {\n\t                    resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n\t                    $(slider).trigger(\"change\", [slider.value]);\n\t                    check_overflow(slider);\n\t                    return false;\n\t                }).\n\t                on(\"mouseup.slider\", function(ev) {\n\t                    $(document).\n\t                        off(\"mousemove.slider\").\n\t                        off(\"mouseup.slider\");\n\t                    return false;\n\t                });\n\t            return false; /* no default action */\n\t        });\n\t    }\n\t\n\t    function setup_sliders() {\n\t        $(\"div.slider\").each(function() {\n\t            setup_slider(this);\n\t        });\n\t    }\n\t\n\t    $.fn.slider = function Slider(action) {\n\t        var sel = this;\n\t        if (arguments.length === 0 || action == \"refresh\") {\n\t            sel.each(function() {\n\t                setup_slider(this);\n\t            });\n\t            return sel;\n\t        } else {\n\t            console.warn(\"unknown slider action: \" + action);\n\t        }\n\t    };\n\t\n\t    $(document).ready(setup_sliders);\n\t\n\t    /* -----------------------------------------------------------------------------\n\t     * Privileged UI actions.\n\t     */\n\t\n\t    // placement is optional, \"top\", \"left\", \"bottom\", \"right\"\n\t    $.fn.update_privileged = function update_privileged(perm, denied_message, placement) {\n\t        var allowed = (perm.allowed !== false);\n\t        var selector = this;\n\t\n\t        selector.each(function() {\n\t            // preserve old title first time to use when allowed\n\t            // activate tooltip\n\t            var allowed_key = 'allowed-title';\n\t            if (typeof $(this).data(allowed_key) === 'undefined' ||\n\t                   $(this).data(allowed_key) === false)\n\t                $(this).data(allowed_key, $(this).attr('title') || \"\");\n\t\n\t            var options = { html: true };\n\t            if (placement)\n\t                options['placement'] = placement;\n\t\n\t            $(this).tooltip(options);\n\t\n\t            if ($(this).hasClass(\"disabled\") === allowed) {\n\t              $(this).toggleClass(\"disabled\", !allowed)\n\t                   .attr('data-original-title', null);\n\t\n\t              if (allowed)\n\t                  $(this).attr('title', $(this).data(allowed_key));\n\t              else\n\t                  $(this).attr('title', denied_message);\n\t              $(this).tooltip('fixTitle');\n\t            }\n\t        });\n\t\n\t        return selector;\n\t    };\n\t}());\n\n\n/***/ },\n\n/***/ 17:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2015 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(6);\n\t\n\t    /* ----------------------------------------------------------------------------\n\t     * Bar Graphs (in table rows)\n\t     *\n\t     * <td>\n\t     *    <div class=\"bar-row\" graph=\"name\" value=\"50/100\"/>\n\t     * </td>\n\t     * <td>\n\t     *    <div class=\"bar-row\" graph=\"name\" value=\"80\"/>\n\t     * </td>\n\t     *\n\t     * The various rows must have class=\"bar-row\". Add the \"bar-row-danger\"\n\t     * class if you want the bar to show up as a warning (ie: red)\n\t     *\n\t     * The graph=\"xxx\" attribute must for all the bars that are part of the\n\t     * same graph, in order for the rows lengths to be coordinated with one\n\t     * another. Length are based on percentage, so the parent of each\n\t     * div.bar-row must be the same size.\n\t     *\n\t     * value=\"x\" can either be a number, or two numbers separated by a slash\n\t     * the latter one is the limit. Change the attribute on the DOM and the\n\t     * graph should update a short while later.\n\t     *\n\t     * On document creation any div.bar-row are automatically turned into\n\t     * Bar graphs. Or use controls.BarRow('name') constructor.\n\t     *\n\t     * You can also use the el.reflow() function on the element to reflow\n\t     * the corresponding graph.\n\t     */\n\t\n\t    function reflow_bar_graph(graph, div) {\n\t        var parts;\n\t        if (graph) {\n\t            var selector = \"div.bar-row[graph='\" + graph + \"']\";\n\t            parts = $(selector);\n\t        } else if (div) {\n\t            parts = $(div);\n\t        } else {\n\t            parts = $([]);\n\t        }\n\t\n\t        function value_parts(el) {\n\t            var value = $(el).attr('value');\n\t            if (value === undefined)\n\t                return [NaN];\n\t            var values = value.split(\"/\", 2);\n\t            var portion = parseInt(values[0], 10);\n\t            if (values.length == 1)\n\t                return [portion];\n\t            var limit = parseInt(values[1], 10);\n\t            if (!isNaN(limit) && portion > limit)\n\t                portion = limit;\n\t            if (portion < 0)\n\t                portion = 0;\n\t            return [portion, limit];\n\t        }\n\t\n\t        /* One pass to calculate the absolute maximum */\n\t        var max = 0;\n\t        parts.each(function() {\n\t            var limit = value_parts(this).pop();\n\t            if (!isNaN(limit) && limit > max)\n\t                max = limit;\n\t        });\n\t\n\t        /* Max gets rounded up to the nearest 100 MiB for sets of bar rows\n\t         */\n\t        if (graph) {\n\t            var bound = 100*1024*1024;\n\t            max = max - (max % bound) + bound;\n\t        }\n\t\n\t        /* Now resize everything to the right aspect */\n\t        parts.each(function() {\n\t            var bits = value_parts(this);\n\t            var portion = bits.shift();\n\t            var limit = bits.pop();\n\t            if (isNaN(portion) || limit === 0) {\n\t                $(this).css(\"visibility\", \"hidden\");\n\t            } else {\n\t                var bar_progress = $(this).data('bar-progress');\n\t                if (isNaN(limit)) {\n\t                    bar_progress.addClass(\"progress-no-limit\");\n\t                    limit = portion;\n\t                } else {\n\t                    bar_progress.removeClass(\"progress-no-limit\");\n\t                }\n\t                $(this).css('visibility', 'visible');\n\t                bar_progress.css(\"width\", ((limit / max) * 100) + \"%\");\n\t                $(this).data('bar-progress-bar').\n\t                    css('width', ((portion / limit) * 100) + \"%\").\n\t                    toggle(portion > 0);\n\t            }\n\t        });\n\t    }\n\t\n\t    var reflow_timeouts = { };\n\t    function reflow_bar_graph_soon(graph, div) {\n\t        if (graph === undefined) {\n\t            if (div)\n\t                graph = $(div).attr(\"graph\");\n\t        }\n\t\n\t        /* If no other parts to this bar, no sense in waiting */\n\t        if (!graph) {\n\t            reflow_bar_graph(undefined, div);\n\t            return;\n\t        }\n\t\n\t        /* Wait until later in case other updates come in to other bits */\n\t        if (reflow_timeouts[graph] !== \"undefined\")\n\t            window.clearTimeout(reflow_timeouts[graph]);\n\t        reflow_timeouts[graph] = window.setTimeout(function() {\n\t            delete reflow_timeouts[graph];\n\t            reflow_bar_graph(graph);\n\t        }, 10);\n\t    }\n\t\n\t    function setup_bar_graph(div) {\n\t\n\t        /*\n\t         * We consume <div class=\"bar-row\"> elements and turn them into:\n\t         *\n\t         * <div class=\"bar-row\">\n\t         *    <div class=\"progress\">\n\t         *      <div class=\"progress-bar\">\n\t         *    </div>\n\t         * </div>\n\t         */\n\t        var progress_bar = $(\"<div>\").addClass(\"progress-bar\");\n\t        var progress = $(\"<div>\").addClass(\"progress\").append(progress_bar);\n\t        $(div).\n\t            addClass('bar-row').\n\t            append(progress).\n\t            data('bar-progress', progress).\n\t            data('bar-progress-bar', progress_bar);\n\t\n\t        /* Public API */\n\t        div.reflow = function() {\n\t            reflow_bar_graph(this.getAttribute(\"graph\"), this);\n\t        };\n\t\n\t        reflow_bar_graph_soon(undefined, div);\n\t    }\n\t\n\t    function setup_bar_graphs() {\n\t        $(\"div.bar-row\").each(function() {\n\t            setup_bar_graph(this, false);\n\t        });\n\t    }\n\t\n\t    $(document).ready(setup_bar_graphs);\n\t\n\t    /* Public API */\n\t    module.exports = {\n\t        create: function create(graph) {\n\t            var div = $(\"<div>\").addClass('bar-row').attr('graph', graph);\n\t            setup_bar_graph(div);\n\t            return div;\n\t        },\n\t        update: function update() {\n\t            $(\"div.bar-row\").each(function() {\n\t                reflow_bar_graph_soon(this.getAttribute(\"graph\"), this);\n\t            });\n\t        }\n\t    };\n\t\n\t}());\n\n\n/***/ },\n\n/***/ 32:\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ },\n\n/***/ 131:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2014 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    /* QUnit needs to have 'window' as 'this' in order to load */\n\t    window.QUnit = __webpack_require__(132);\n\t    window.qunitTap = __webpack_require__(134);\n\t\n\t    __webpack_require__(135);\n\t\n\t    __webpack_require__(136);\n\t\n\t    module.exports = window.QUnit;\n\t\n\t}());\n\n\n/***/ },\n\n/***/ 132:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(process, module) {/*!\n\t * QUnit 1.23.1\n\t * https://qunitjs.com/\n\t *\n\t * Copyright jQuery Foundation and other contributors\n\t * Released under the MIT license\n\t * https://jquery.org/license\n\t *\n\t * Date: 2016-04-12T17:29Z\n\t */\n\t\n\t( function( global ) {\n\t\n\tvar QUnit = {};\n\t\n\tvar Date = global.Date;\n\tvar now = Date.now || function() {\n\t\treturn new Date().getTime();\n\t};\n\t\n\tvar setTimeout = global.setTimeout;\n\tvar clearTimeout = global.clearTimeout;\n\t\n\t// Store a local window from the global to allow direct references.\n\tvar window = global.window;\n\t\n\tvar defined = {\n\t\tdocument: window && window.document !== undefined,\n\t\tsetTimeout: setTimeout !== undefined,\n\t\tsessionStorage: ( function() {\n\t\t\tvar x = \"qunit-test-string\";\n\t\t\ttry {\n\t\t\t\tsessionStorage.setItem( x, x );\n\t\t\t\tsessionStorage.removeItem( x );\n\t\t\t\treturn true;\n\t\t\t} catch ( e ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}() )\n\t};\n\t\n\tvar fileName = ( sourceFromStacktrace( 0 ) || \"\" ).replace( /(:\\d+)+\\)?/, \"\" ).replace( /.+\\//, \"\" );\n\tvar globalStartCalled = false;\n\tvar runStarted = false;\n\t\n\tvar toString = Object.prototype.toString,\n\t\thasOwn = Object.prototype.hasOwnProperty;\n\t\n\t// Returns a new Array with the elements that are in a but not in b\n\tfunction diff( a, b ) {\n\t\tvar i, j,\n\t\t\tresult = a.slice();\n\t\n\t\tfor ( i = 0; i < result.length; i++ ) {\n\t\t\tfor ( j = 0; j < b.length; j++ ) {\n\t\t\t\tif ( result[ i ] === b[ j ] ) {\n\t\t\t\t\tresult.splice( i, 1 );\n\t\t\t\t\ti--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\t\n\t// From jquery.js\n\tfunction inArray( elem, array ) {\n\t\tif ( array.indexOf ) {\n\t\t\treturn array.indexOf( elem );\n\t\t}\n\t\n\t\tfor ( var i = 0, length = array.length; i < length; i++ ) {\n\t\t\tif ( array[ i ] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\n\t\treturn -1;\n\t}\n\t\n\t/**\n\t * Makes a clone of an object using only Array or Object as base,\n\t * and copies over the own enumerable properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object} New object with only the own properties (recursively).\n\t */\n\tfunction objectValues ( obj ) {\n\t\tvar key, val,\n\t\t\tvals = QUnit.is( \"array\", obj ) ? [] : {};\n\t\tfor ( key in obj ) {\n\t\t\tif ( hasOwn.call( obj, key ) ) {\n\t\t\t\tval = obj[ key ];\n\t\t\t\tvals[ key ] = val === Object( val ) ? objectValues( val ) : val;\n\t\t\t}\n\t\t}\n\t\treturn vals;\n\t}\n\t\n\tfunction extend( a, b, undefOnly ) {\n\t\tfor ( var prop in b ) {\n\t\t\tif ( hasOwn.call( b, prop ) ) {\n\t\n\t\t\t\t// Avoid \"Member not found\" error in IE8 caused by messing with window.constructor\n\t\t\t\t// This block runs on every environment, so `global` is being used instead of `window`\n\t\t\t\t// to avoid errors on node.\n\t\t\t\tif ( prop !== \"constructor\" || a !== global ) {\n\t\t\t\t\tif ( b[ prop ] === undefined ) {\n\t\t\t\t\t\tdelete a[ prop ];\n\t\t\t\t\t} else if ( !( undefOnly && typeof a[ prop ] !== \"undefined\" ) ) {\n\t\t\t\t\t\ta[ prop ] = b[ prop ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn a;\n\t}\n\t\n\tfunction objectType( obj ) {\n\t\tif ( typeof obj === \"undefined\" ) {\n\t\t\treturn \"undefined\";\n\t\t}\n\t\n\t\t// Consider: typeof null === object\n\t\tif ( obj === null ) {\n\t\t\treturn \"null\";\n\t\t}\n\t\n\t\tvar match = toString.call( obj ).match( /^\\[object\\s(.*)\\]$/ ),\n\t\t\ttype = match && match[ 1 ];\n\t\n\t\tswitch ( type ) {\n\t\t\tcase \"Number\":\n\t\t\t\tif ( isNaN( obj ) ) {\n\t\t\t\t\treturn \"nan\";\n\t\t\t\t}\n\t\t\t\treturn \"number\";\n\t\t\tcase \"String\":\n\t\t\tcase \"Boolean\":\n\t\t\tcase \"Array\":\n\t\t\tcase \"Set\":\n\t\t\tcase \"Map\":\n\t\t\tcase \"Date\":\n\t\t\tcase \"RegExp\":\n\t\t\tcase \"Function\":\n\t\t\tcase \"Symbol\":\n\t\t\t\treturn type.toLowerCase();\n\t\t}\n\t\tif ( typeof obj === \"object\" ) {\n\t\t\treturn \"object\";\n\t\t}\n\t}\n\t\n\t// Safe object type checking\n\tfunction is( type, obj ) {\n\t\treturn QUnit.objectType( obj ) === type;\n\t}\n\t\n\t// Doesn't support IE6 to IE9, it will return undefined on these browsers\n\t// See also https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error/Stack\n\tfunction extractStacktrace( e, offset ) {\n\t\toffset = offset === undefined ? 4 : offset;\n\t\n\t\tvar stack, include, i;\n\t\n\t\tif ( e.stack ) {\n\t\t\tstack = e.stack.split( \"\\n\" );\n\t\t\tif ( /^error$/i.test( stack[ 0 ] ) ) {\n\t\t\t\tstack.shift();\n\t\t\t}\n\t\t\tif ( fileName ) {\n\t\t\t\tinclude = [];\n\t\t\t\tfor ( i = offset; i < stack.length; i++ ) {\n\t\t\t\t\tif ( stack[ i ].indexOf( fileName ) !== -1 ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tinclude.push( stack[ i ] );\n\t\t\t\t}\n\t\t\t\tif ( include.length ) {\n\t\t\t\t\treturn include.join( \"\\n\" );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn stack[ offset ];\n\t\n\t\t// Support: Safari <=6 only\n\t\t} else if ( e.sourceURL ) {\n\t\n\t\t\t// Exclude useless self-reference for generated Error objects\n\t\t\tif ( /qunit.js$/.test( e.sourceURL ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\t// For actual exceptions, this is useful\n\t\t\treturn e.sourceURL + \":\" + e.line;\n\t\t}\n\t}\n\t\n\tfunction sourceFromStacktrace( offset ) {\n\t\tvar error = new Error();\n\t\n\t\t// Support: Safari <=7 only, IE <=10 - 11 only\n\t\t// Not all browsers generate the `stack` property for `new Error()`, see also #636\n\t\tif ( !error.stack ) {\n\t\t\ttry {\n\t\t\t\tthrow error;\n\t\t\t} catch ( err ) {\n\t\t\t\terror = err;\n\t\t\t}\n\t\t}\n\t\n\t\treturn extractStacktrace( error, offset );\n\t}\n\t\n\t/**\n\t * Config object: Maintain internal state\n\t * Later exposed as QUnit.config\n\t * `config` initialized at top of scope\n\t */\n\tvar config = {\n\t\n\t\t// The queue of tests to run\n\t\tqueue: [],\n\t\n\t\t// Block until document ready\n\t\tblocking: true,\n\t\n\t\t// By default, run previously failed tests first\n\t\t// very useful in combination with \"Hide passed tests\" checked\n\t\treorder: true,\n\t\n\t\t// By default, modify document.title when suite is done\n\t\taltertitle: true,\n\t\n\t\t// HTML Reporter: collapse every test except the first failing test\n\t\t// If false, all failing tests will be expanded\n\t\tcollapse: true,\n\t\n\t\t// By default, scroll to top of the page when suite is done\n\t\tscrolltop: true,\n\t\n\t\t// Depth up-to which object will be dumped\n\t\tmaxDepth: 5,\n\t\n\t\t// When enabled, all tests must call expect()\n\t\trequireExpects: false,\n\t\n\t\t// Placeholder for user-configurable form-exposed URL parameters\n\t\turlConfig: [],\n\t\n\t\t// Set of all modules.\n\t\tmodules: [],\n\t\n\t\t// Stack of nested modules\n\t\tmoduleStack: [],\n\t\n\t\t// The first unnamed module\n\t\tcurrentModule: {\n\t\t\tname: \"\",\n\t\t\ttests: []\n\t\t},\n\t\n\t\tcallbacks: {}\n\t};\n\t\n\t// Push a loose unnamed module to the modules collection\n\tconfig.modules.push( config.currentModule );\n\t\n\tvar loggingCallbacks = {};\n\t\n\t// Register logging callbacks\n\tfunction registerLoggingCallbacks( obj ) {\n\t\tvar i, l, key,\n\t\t\tcallbackNames = [ \"begin\", \"done\", \"log\", \"testStart\", \"testDone\",\n\t\t\t\t\"moduleStart\", \"moduleDone\" ];\n\t\n\t\tfunction registerLoggingCallback( key ) {\n\t\t\tvar loggingCallback = function( callback ) {\n\t\t\t\tif ( objectType( callback ) !== \"function\" ) {\n\t\t\t\t\tthrow new Error(\n\t\t\t\t\t\t\"QUnit logging methods require a callback function as their first parameters.\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\n\t\t\t\tconfig.callbacks[ key ].push( callback );\n\t\t\t};\n\t\n\t\t\t// DEPRECATED: This will be removed on QUnit 2.0.0+\n\t\t\t// Stores the registered functions allowing restoring\n\t\t\t// at verifyLoggingCallbacks() if modified\n\t\t\tloggingCallbacks[ key ] = loggingCallback;\n\t\n\t\t\treturn loggingCallback;\n\t\t}\n\t\n\t\tfor ( i = 0, l = callbackNames.length; i < l; i++ ) {\n\t\t\tkey = callbackNames[ i ];\n\t\n\t\t\t// Initialize key collection of logging callback\n\t\t\tif ( objectType( config.callbacks[ key ] ) === \"undefined\" ) {\n\t\t\t\tconfig.callbacks[ key ] = [];\n\t\t\t}\n\t\n\t\t\tobj[ key ] = registerLoggingCallback( key );\n\t\t}\n\t}\n\t\n\tfunction runLoggingCallbacks( key, args ) {\n\t\tvar i, l, callbacks;\n\t\n\t\tcallbacks = config.callbacks[ key ];\n\t\tfor ( i = 0, l = callbacks.length; i < l; i++ ) {\n\t\t\tcallbacks[ i ]( args );\n\t\t}\n\t}\n\t\n\t// DEPRECATED: This will be removed on 2.0.0+\n\t// This function verifies if the loggingCallbacks were modified by the user\n\t// If so, it will restore it, assign the given callback and print a console warning\n\tfunction verifyLoggingCallbacks() {\n\t\tvar loggingCallback, userCallback;\n\t\n\t\tfor ( loggingCallback in loggingCallbacks ) {\n\t\t\tif ( QUnit[ loggingCallback ] !== loggingCallbacks[ loggingCallback ] ) {\n\t\n\t\t\t\tuserCallback = QUnit[ loggingCallback ];\n\t\n\t\t\t\t// Restore the callback function\n\t\t\t\tQUnit[ loggingCallback ] = loggingCallbacks[ loggingCallback ];\n\t\n\t\t\t\t// Assign the deprecated given callback\n\t\t\t\tQUnit[ loggingCallback ]( userCallback );\n\t\n\t\t\t\tif ( global.console && global.console.warn ) {\n\t\t\t\t\tglobal.console.warn(\n\t\t\t\t\t\t\"QUnit.\" + loggingCallback + \" was replaced with a new value.\\n\" +\n\t\t\t\t\t\t\"Please, check out the documentation on how to apply logging callbacks.\\n\" +\n\t\t\t\t\t\t\"Reference: https://api.qunitjs.com/category/callbacks/\"\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\t( function() {\n\t\tif ( !defined.document ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\t// `onErrorFnPrev` initialized at top of scope\n\t\t// Preserve other handlers\n\t\tvar onErrorFnPrev = window.onerror;\n\t\n\t\t// Cover uncaught exceptions\n\t\t// Returning true will suppress the default browser handler,\n\t\t// returning false will let it run.\n\t\twindow.onerror = function( error, filePath, linerNr ) {\n\t\t\tvar ret = false;\n\t\t\tif ( onErrorFnPrev ) {\n\t\t\t\tret = onErrorFnPrev( error, filePath, linerNr );\n\t\t\t}\n\t\n\t\t\t// Treat return value as window.onerror itself does,\n\t\t\t// Only do our handling if not suppressed.\n\t\t\tif ( ret !== true ) {\n\t\t\t\tif ( QUnit.config.current ) {\n\t\t\t\t\tif ( QUnit.config.current.ignoreGlobalErrors ) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\tQUnit.pushFailure( error, filePath + \":\" + linerNr );\n\t\t\t\t} else {\n\t\t\t\t\tQUnit.test( \"global failure\", extend( function() {\n\t\t\t\t\t\tQUnit.pushFailure( error, filePath + \":\" + linerNr );\n\t\t\t\t\t}, { validTest: true } ) );\n\t\t\t\t}\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn ret;\n\t\t};\n\t}() );\n\t\n\t// Figure out if we're running the tests from a server or not\n\tQUnit.isLocal = !( defined.document && window.location.protocol !== \"file:\" );\n\t\n\t// Expose the current QUnit version\n\tQUnit.version = \"1.23.1\";\n\t\n\textend( QUnit, {\n\t\n\t\t// Call on start of module test to prepend name to all tests\n\t\tmodule: function( name, testEnvironment, executeNow ) {\n\t\t\tvar module, moduleFns;\n\t\t\tvar currentModule = config.currentModule;\n\t\n\t\t\tif ( arguments.length === 2 ) {\n\t\t\t\tif ( objectType( testEnvironment ) === \"function\" ) {\n\t\t\t\t\texecuteNow = testEnvironment;\n\t\t\t\t\ttestEnvironment = undefined;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// DEPRECATED: handles setup/teardown functions,\n\t\t\t// beforeEach and afterEach should be used instead\n\t\t\tif ( testEnvironment && testEnvironment.setup ) {\n\t\t\t\ttestEnvironment.beforeEach = testEnvironment.setup;\n\t\t\t\tdelete testEnvironment.setup;\n\t\t\t}\n\t\t\tif ( testEnvironment && testEnvironment.teardown ) {\n\t\t\t\ttestEnvironment.afterEach = testEnvironment.teardown;\n\t\t\t\tdelete testEnvironment.teardown;\n\t\t\t}\n\t\n\t\t\tmodule = createModule();\n\t\n\t\t\tmoduleFns = {\n\t\t\t\tbeforeEach: setHook( module, \"beforeEach\" ),\n\t\t\t\tafterEach: setHook( module, \"afterEach\" )\n\t\t\t};\n\t\n\t\t\tif ( objectType( executeNow ) === \"function\" ) {\n\t\t\t\tconfig.moduleStack.push( module );\n\t\t\t\tsetCurrentModule( module );\n\t\t\t\texecuteNow.call( module.testEnvironment, moduleFns );\n\t\t\t\tconfig.moduleStack.pop();\n\t\t\t\tmodule = module.parentModule || currentModule;\n\t\t\t}\n\t\n\t\t\tsetCurrentModule( module );\n\t\n\t\t\tfunction createModule() {\n\t\t\t\tvar parentModule = config.moduleStack.length ?\n\t\t\t\t\tconfig.moduleStack.slice( -1 )[ 0 ] : null;\n\t\t\t\tvar moduleName = parentModule !== null ?\n\t\t\t\t\t[ parentModule.name, name ].join( \" > \" ) : name;\n\t\t\t\tvar module = {\n\t\t\t\t\tname: moduleName,\n\t\t\t\t\tparentModule: parentModule,\n\t\t\t\t\ttests: [],\n\t\t\t\t\tmoduleId: generateHash( moduleName )\n\t\t\t\t};\n\t\n\t\t\t\tvar env = {};\n\t\t\t\tif ( parentModule ) {\n\t\t\t\t\textend( env, parentModule.testEnvironment );\n\t\t\t\t\tdelete env.beforeEach;\n\t\t\t\t\tdelete env.afterEach;\n\t\t\t\t}\n\t\t\t\textend( env, testEnvironment );\n\t\t\t\tmodule.testEnvironment = env;\n\t\n\t\t\t\tconfig.modules.push( module );\n\t\t\t\treturn module;\n\t\t\t}\n\t\n\t\t\tfunction setCurrentModule( module ) {\n\t\t\t\tconfig.currentModule = module;\n\t\t\t}\n\t\n\t\t},\n\t\n\t\t// DEPRECATED: QUnit.asyncTest() will be removed in QUnit 2.0.\n\t\tasyncTest: asyncTest,\n\t\n\t\ttest: test,\n\t\n\t\tskip: skip,\n\t\n\t\tonly: only,\n\t\n\t\t// DEPRECATED: The functionality of QUnit.start() will be altered in QUnit 2.0.\n\t\t// In QUnit 2.0, invoking it will ONLY affect the `QUnit.config.autostart` blocking behavior.\n\t\tstart: function( count ) {\n\t\t\tvar globalStartAlreadyCalled = globalStartCalled;\n\t\n\t\t\tif ( !config.current ) {\n\t\t\t\tglobalStartCalled = true;\n\t\n\t\t\t\tif ( runStarted ) {\n\t\t\t\t\tthrow new Error( \"Called start() outside of a test context while already started\" );\n\t\t\t\t} else if ( globalStartAlreadyCalled || count > 1 ) {\n\t\t\t\t\tthrow new Error( \"Called start() outside of a test context too many times\" );\n\t\t\t\t} else if ( config.autostart ) {\n\t\t\t\t\tthrow new Error( \"Called start() outside of a test context when \" +\n\t\t\t\t\t\t\"QUnit.config.autostart was true\" );\n\t\t\t\t} else if ( !config.pageLoaded ) {\n\t\n\t\t\t\t\t// The page isn't completely loaded yet, so bail out and let `QUnit.load` handle it\n\t\t\t\t\tconfig.autostart = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\n\t\t\t\t// If a test is running, adjust its semaphore\n\t\t\t\tconfig.current.semaphore -= count || 1;\n\t\n\t\t\t\t// If semaphore is non-numeric, throw error\n\t\t\t\tif ( isNaN( config.current.semaphore ) ) {\n\t\t\t\t\tconfig.current.semaphore = 0;\n\t\n\t\t\t\t\tQUnit.pushFailure(\n\t\t\t\t\t\t\"Called start() with a non-numeric decrement.\",\n\t\t\t\t\t\tsourceFromStacktrace( 2 )\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Don't start until equal number of stop-calls\n\t\t\t\tif ( config.current.semaphore > 0 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\t// Throw an Error if start is called more often than stop\n\t\t\t\tif ( config.current.semaphore < 0 ) {\n\t\t\t\t\tconfig.current.semaphore = 0;\n\t\n\t\t\t\t\tQUnit.pushFailure(\n\t\t\t\t\t\t\"Called start() while already started (test's semaphore was 0 already)\",\n\t\t\t\t\t\tsourceFromStacktrace( 2 )\n\t\t\t\t\t);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tresumeProcessing();\n\t\t},\n\t\n\t\t// DEPRECATED: QUnit.stop() will be removed in QUnit 2.0.\n\t\tstop: function( count ) {\n\t\n\t\t\t// If there isn't a test running, don't allow QUnit.stop() to be called\n\t\t\tif ( !config.current ) {\n\t\t\t\tthrow new Error( \"Called stop() outside of a test context\" );\n\t\t\t}\n\t\n\t\t\t// If a test is running, adjust its semaphore\n\t\t\tconfig.current.semaphore += count || 1;\n\t\n\t\t\tpauseProcessing();\n\t\t},\n\t\n\t\tconfig: config,\n\t\n\t\tis: is,\n\t\n\t\tobjectType: objectType,\n\t\n\t\textend: extend,\n\t\n\t\tload: function() {\n\t\t\tconfig.pageLoaded = true;\n\t\n\t\t\t// Initialize the configuration options\n\t\t\textend( config, {\n\t\t\t\tstats: { all: 0, bad: 0 },\n\t\t\t\tmoduleStats: { all: 0, bad: 0 },\n\t\t\t\tstarted: 0,\n\t\t\t\tupdateRate: 1000,\n\t\t\t\tautostart: true,\n\t\t\t\tfilter: \"\"\n\t\t\t}, true );\n\t\n\t\t\tconfig.blocking = false;\n\t\n\t\t\tif ( config.autostart ) {\n\t\t\t\tresumeProcessing();\n\t\t\t}\n\t\t},\n\t\n\t\tstack: function( offset ) {\n\t\t\toffset = ( offset || 0 ) + 2;\n\t\t\treturn sourceFromStacktrace( offset );\n\t\t}\n\t} );\n\t\n\tregisterLoggingCallbacks( QUnit );\n\t\n\tfunction begin() {\n\t\tvar i, l,\n\t\t\tmodulesLog = [];\n\t\n\t\t// If the test run hasn't officially begun yet\n\t\tif ( !config.started ) {\n\t\n\t\t\t// Record the time of the test run's beginning\n\t\t\tconfig.started = now();\n\t\n\t\t\tverifyLoggingCallbacks();\n\t\n\t\t\t// Delete the loose unnamed module if unused.\n\t\t\tif ( config.modules[ 0 ].name === \"\" && config.modules[ 0 ].tests.length === 0 ) {\n\t\t\t\tconfig.modules.shift();\n\t\t\t}\n\t\n\t\t\t// Avoid unnecessary information by not logging modules' test environments\n\t\t\tfor ( i = 0, l = config.modules.length; i < l; i++ ) {\n\t\t\t\tmodulesLog.push( {\n\t\t\t\t\tname: config.modules[ i ].name,\n\t\t\t\t\ttests: config.modules[ i ].tests\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\t// The test run is officially beginning now\n\t\t\trunLoggingCallbacks( \"begin\", {\n\t\t\t\ttotalTests: Test.count,\n\t\t\t\tmodules: modulesLog\n\t\t\t} );\n\t\t}\n\t\n\t\tconfig.blocking = false;\n\t\tprocess( true );\n\t}\n\t\n\tfunction process( last ) {\n\t\tfunction next() {\n\t\t\tprocess( last );\n\t\t}\n\t\tvar start = now();\n\t\tconfig.depth = ( config.depth || 0 ) + 1;\n\t\n\t\twhile ( config.queue.length && !config.blocking ) {\n\t\t\tif ( !defined.setTimeout || config.updateRate <= 0 ||\n\t\t\t\t\t( ( now() - start ) < config.updateRate ) ) {\n\t\t\t\tif ( config.current ) {\n\t\n\t\t\t\t\t// Reset async tracking for each phase of the Test lifecycle\n\t\t\t\t\tconfig.current.usedAsync = false;\n\t\t\t\t}\n\t\t\t\tconfig.queue.shift()();\n\t\t\t} else {\n\t\t\t\tsetTimeout( next, 13 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconfig.depth--;\n\t\tif ( last && !config.blocking && !config.queue.length && config.depth === 0 ) {\n\t\t\tdone();\n\t\t}\n\t}\n\t\n\tfunction pauseProcessing() {\n\t\tconfig.blocking = true;\n\t\n\t\tif ( config.testTimeout && defined.setTimeout ) {\n\t\t\tclearTimeout( config.timeout );\n\t\t\tconfig.timeout = setTimeout( function() {\n\t\t\t\tif ( config.current ) {\n\t\t\t\t\tconfig.current.semaphore = 0;\n\t\t\t\t\tQUnit.pushFailure( \"Test timed out\", sourceFromStacktrace( 2 ) );\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error( \"Test timed out\" );\n\t\t\t\t}\n\t\t\t\tresumeProcessing();\n\t\t\t}, config.testTimeout );\n\t\t}\n\t}\n\t\n\tfunction resumeProcessing() {\n\t\trunStarted = true;\n\t\n\t\t// A slight delay to allow this iteration of the event loop to finish (more assertions, etc.)\n\t\tif ( defined.setTimeout ) {\n\t\t\tsetTimeout( function() {\n\t\t\t\tif ( config.current && config.current.semaphore > 0 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ( config.timeout ) {\n\t\t\t\t\tclearTimeout( config.timeout );\n\t\t\t\t}\n\t\n\t\t\t\tbegin();\n\t\t\t}, 13 );\n\t\t} else {\n\t\t\tbegin();\n\t\t}\n\t}\n\t\n\tfunction done() {\n\t\tvar runtime, passed;\n\t\n\t\tconfig.autorun = true;\n\t\n\t\t// Log the last module results\n\t\tif ( config.previousModule ) {\n\t\t\trunLoggingCallbacks( \"moduleDone\", {\n\t\t\t\tname: config.previousModule.name,\n\t\t\t\ttests: config.previousModule.tests,\n\t\t\t\tfailed: config.moduleStats.bad,\n\t\t\t\tpassed: config.moduleStats.all - config.moduleStats.bad,\n\t\t\t\ttotal: config.moduleStats.all,\n\t\t\t\truntime: now() - config.moduleStats.started\n\t\t\t} );\n\t\t}\n\t\tdelete config.previousModule;\n\t\n\t\truntime = now() - config.started;\n\t\tpassed = config.stats.all - config.stats.bad;\n\t\n\t\trunLoggingCallbacks( \"done\", {\n\t\t\tfailed: config.stats.bad,\n\t\t\tpassed: passed,\n\t\t\ttotal: config.stats.all,\n\t\t\truntime: runtime\n\t\t} );\n\t}\n\t\n\tfunction setHook( module, hookName ) {\n\t\tif ( module.testEnvironment === undefined ) {\n\t\t\tmodule.testEnvironment = {};\n\t\t}\n\t\n\t\treturn function( callback ) {\n\t\t\tmodule.testEnvironment[ hookName ] = callback;\n\t\t};\n\t}\n\t\n\tvar focused = false;\n\tvar priorityCount = 0;\n\tvar unitSampler;\n\t\n\tfunction Test( settings ) {\n\t\tvar i, l;\n\t\n\t\t++Test.count;\n\t\n\t\textend( this, settings );\n\t\tthis.assertions = [];\n\t\tthis.semaphore = 0;\n\t\tthis.usedAsync = false;\n\t\tthis.module = config.currentModule;\n\t\tthis.stack = sourceFromStacktrace( 3 );\n\t\n\t\t// Register unique strings\n\t\tfor ( i = 0, l = this.module.tests; i < l.length; i++ ) {\n\t\t\tif ( this.module.tests[ i ].name === this.testName ) {\n\t\t\t\tthis.testName += \" \";\n\t\t\t}\n\t\t}\n\t\n\t\tthis.testId = generateHash( this.module.name, this.testName );\n\t\n\t\tthis.module.tests.push( {\n\t\t\tname: this.testName,\n\t\t\ttestId: this.testId\n\t\t} );\n\t\n\t\tif ( settings.skip ) {\n\t\n\t\t\t// Skipped tests will fully ignore any sent callback\n\t\t\tthis.callback = function() {};\n\t\t\tthis.async = false;\n\t\t\tthis.expected = 0;\n\t\t} else {\n\t\t\tthis.assert = new Assert( this );\n\t\t}\n\t}\n\t\n\tTest.count = 0;\n\t\n\tTest.prototype = {\n\t\tbefore: function() {\n\t\t\tif (\n\t\n\t\t\t\t// Emit moduleStart when we're switching from one module to another\n\t\t\t\tthis.module !== config.previousModule ||\n\t\n\t\t\t\t\t// They could be equal (both undefined) but if the previousModule property doesn't\n\t\t\t\t\t// yet exist it means this is the first test in a suite that isn't wrapped in a\n\t\t\t\t\t// module, in which case we'll just emit a moduleStart event for 'undefined'.\n\t\t\t\t\t// Without this, reporters can get testStart before moduleStart  which is a problem.\n\t\t\t\t\t!hasOwn.call( config, \"previousModule\" )\n\t\t\t) {\n\t\t\t\tif ( hasOwn.call( config, \"previousModule\" ) ) {\n\t\t\t\t\trunLoggingCallbacks( \"moduleDone\", {\n\t\t\t\t\t\tname: config.previousModule.name,\n\t\t\t\t\t\ttests: config.previousModule.tests,\n\t\t\t\t\t\tfailed: config.moduleStats.bad,\n\t\t\t\t\t\tpassed: config.moduleStats.all - config.moduleStats.bad,\n\t\t\t\t\t\ttotal: config.moduleStats.all,\n\t\t\t\t\t\truntime: now() - config.moduleStats.started\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t\tconfig.previousModule = this.module;\n\t\t\t\tconfig.moduleStats = { all: 0, bad: 0, started: now() };\n\t\t\t\trunLoggingCallbacks( \"moduleStart\", {\n\t\t\t\t\tname: this.module.name,\n\t\t\t\t\ttests: this.module.tests\n\t\t\t\t} );\n\t\t\t}\n\t\n\t\t\tconfig.current = this;\n\t\n\t\t\tif ( this.module.testEnvironment ) {\n\t\t\t\tdelete this.module.testEnvironment.beforeEach;\n\t\t\t\tdelete this.module.testEnvironment.afterEach;\n\t\t\t}\n\t\t\tthis.testEnvironment = extend( {}, this.module.testEnvironment );\n\t\n\t\t\tthis.started = now();\n\t\t\trunLoggingCallbacks( \"testStart\", {\n\t\t\t\tname: this.testName,\n\t\t\t\tmodule: this.module.name,\n\t\t\t\ttestId: this.testId\n\t\t\t} );\n\t\n\t\t\tif ( !config.pollution ) {\n\t\t\t\tsaveGlobal();\n\t\t\t}\n\t\t},\n\t\n\t\trun: function() {\n\t\t\tvar promise;\n\t\n\t\t\tconfig.current = this;\n\t\n\t\t\tif ( this.async ) {\n\t\t\t\tQUnit.stop();\n\t\t\t}\n\t\n\t\t\tthis.callbackStarted = now();\n\t\n\t\t\tif ( config.notrycatch ) {\n\t\t\t\trunTest( this );\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\ttry {\n\t\t\t\trunTest( this );\n\t\t\t} catch ( e ) {\n\t\t\t\tthis.pushFailure( \"Died on test #\" + ( this.assertions.length + 1 ) + \" \" +\n\t\t\t\t\tthis.stack + \": \" + ( e.message || e ), extractStacktrace( e, 0 ) );\n\t\n\t\t\t\t// Else next test will carry the responsibility\n\t\t\t\tsaveGlobal();\n\t\n\t\t\t\t// Restart the tests if they're blocking\n\t\t\t\tif ( config.blocking ) {\n\t\t\t\t\tQUnit.start();\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfunction runTest( test ) {\n\t\t\t\tpromise = test.callback.call( test.testEnvironment, test.assert );\n\t\t\t\ttest.resolvePromise( promise );\n\t\t\t}\n\t\t},\n\t\n\t\tafter: function() {\n\t\t\tcheckPollution();\n\t\t},\n\t\n\t\tqueueHook: function( hook, hookName ) {\n\t\t\tvar promise,\n\t\t\t\ttest = this;\n\t\t\treturn function runHook() {\n\t\t\t\tconfig.current = test;\n\t\t\t\tif ( config.notrycatch ) {\n\t\t\t\t\tcallHook();\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\ttry {\n\t\t\t\t\tcallHook();\n\t\t\t\t} catch ( error ) {\n\t\t\t\t\ttest.pushFailure( hookName + \" failed on \" + test.testName + \": \" +\n\t\t\t\t\t( error.message || error ), extractStacktrace( error, 0 ) );\n\t\t\t\t}\n\t\n\t\t\t\tfunction callHook() {\n\t\t\t\t\tpromise = hook.call( test.testEnvironment, test.assert );\n\t\t\t\t\ttest.resolvePromise( promise, hookName );\n\t\t\t\t}\n\t\t\t};\n\t\t},\n\t\n\t\t// Currently only used for module level hooks, can be used to add global level ones\n\t\thooks: function( handler ) {\n\t\t\tvar hooks = [];\n\t\n\t\t\tfunction processHooks( test, module ) {\n\t\t\t\tif ( module.parentModule ) {\n\t\t\t\t\tprocessHooks( test, module.parentModule );\n\t\t\t\t}\n\t\t\t\tif ( module.testEnvironment &&\n\t\t\t\t\tQUnit.objectType( module.testEnvironment[ handler ] ) === \"function\" ) {\n\t\t\t\t\thooks.push( test.queueHook( module.testEnvironment[ handler ], handler ) );\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Hooks are ignored on skipped tests\n\t\t\tif ( !this.skip ) {\n\t\t\t\tprocessHooks( this, this.module );\n\t\t\t}\n\t\t\treturn hooks;\n\t\t},\n\t\n\t\tfinish: function() {\n\t\t\tconfig.current = this;\n\t\t\tif ( config.requireExpects && this.expected === null ) {\n\t\t\t\tthis.pushFailure( \"Expected number of assertions to be defined, but expect() was \" +\n\t\t\t\t\t\"not called.\", this.stack );\n\t\t\t} else if ( this.expected !== null && this.expected !== this.assertions.length ) {\n\t\t\t\tthis.pushFailure( \"Expected \" + this.expected + \" assertions, but \" +\n\t\t\t\t\tthis.assertions.length + \" were run\", this.stack );\n\t\t\t} else if ( this.expected === null && !this.assertions.length ) {\n\t\t\t\tthis.pushFailure( \"Expected at least one assertion, but none were run - call \" +\n\t\t\t\t\t\"expect(0) to accept zero assertions.\", this.stack );\n\t\t\t}\n\t\n\t\t\tvar i,\n\t\t\t\tbad = 0;\n\t\n\t\t\tthis.runtime = now() - this.started;\n\t\t\tconfig.stats.all += this.assertions.length;\n\t\t\tconfig.moduleStats.all += this.assertions.length;\n\t\n\t\t\tfor ( i = 0; i < this.assertions.length; i++ ) {\n\t\t\t\tif ( !this.assertions[ i ].result ) {\n\t\t\t\t\tbad++;\n\t\t\t\t\tconfig.stats.bad++;\n\t\t\t\t\tconfig.moduleStats.bad++;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\trunLoggingCallbacks( \"testDone\", {\n\t\t\t\tname: this.testName,\n\t\t\t\tmodule: this.module.name,\n\t\t\t\tskipped: !!this.skip,\n\t\t\t\tfailed: bad,\n\t\t\t\tpassed: this.assertions.length - bad,\n\t\t\t\ttotal: this.assertions.length,\n\t\t\t\truntime: this.runtime,\n\t\n\t\t\t\t// HTML Reporter use\n\t\t\t\tassertions: this.assertions,\n\t\t\t\ttestId: this.testId,\n\t\n\t\t\t\t// Source of Test\n\t\t\t\tsource: this.stack,\n\t\n\t\t\t\t// DEPRECATED: this property will be removed in 2.0.0, use runtime instead\n\t\t\t\tduration: this.runtime\n\t\t\t} );\n\t\n\t\t\t// QUnit.reset() is deprecated and will be replaced for a new\n\t\t\t// fixture reset function on QUnit 2.0/2.1.\n\t\t\t// It's still called here for backwards compatibility handling\n\t\t\tQUnit.reset();\n\t\n\t\t\tconfig.current = undefined;\n\t\t},\n\t\n\t\tqueue: function() {\n\t\t\tvar priority,\n\t\t\t\ttest = this;\n\t\n\t\t\tif ( !this.valid() ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tfunction run() {\n\t\n\t\t\t\t// Each of these can by async\n\t\t\t\tsynchronize( [\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\ttest.before();\n\t\t\t\t\t},\n\t\n\t\t\t\t\ttest.hooks( \"beforeEach\" ),\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\ttest.run();\n\t\t\t\t\t},\n\t\n\t\t\t\t\ttest.hooks( \"afterEach\" ).reverse(),\n\t\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\ttest.after();\n\t\t\t\t\t},\n\t\t\t\t\tfunction() {\n\t\t\t\t\t\ttest.finish();\n\t\t\t\t\t}\n\t\t\t\t] );\n\t\t\t}\n\t\n\t\t\t// Prioritize previously failed tests, detected from sessionStorage\n\t\t\tpriority = QUnit.config.reorder && defined.sessionStorage &&\n\t\t\t\t\t+sessionStorage.getItem( \"qunit-test-\" + this.module.name + \"-\" + this.testName );\n\t\n\t\t\treturn synchronize( run, priority, config.seed );\n\t\t},\n\t\n\t\tpushResult: function( resultInfo ) {\n\t\n\t\t\t// Destructure of resultInfo = { result, actual, expected, message, negative }\n\t\t\tvar source,\n\t\t\t\tdetails = {\n\t\t\t\t\tmodule: this.module.name,\n\t\t\t\t\tname: this.testName,\n\t\t\t\t\tresult: resultInfo.result,\n\t\t\t\t\tmessage: resultInfo.message,\n\t\t\t\t\tactual: resultInfo.actual,\n\t\t\t\t\texpected: resultInfo.expected,\n\t\t\t\t\ttestId: this.testId,\n\t\t\t\t\tnegative: resultInfo.negative || false,\n\t\t\t\t\truntime: now() - this.started\n\t\t\t\t};\n\t\n\t\t\tif ( !resultInfo.result ) {\n\t\t\t\tsource = sourceFromStacktrace();\n\t\n\t\t\t\tif ( source ) {\n\t\t\t\t\tdetails.source = source;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\trunLoggingCallbacks( \"log\", details );\n\t\n\t\t\tthis.assertions.push( {\n\t\t\t\tresult: !!resultInfo.result,\n\t\t\t\tmessage: resultInfo.message\n\t\t\t} );\n\t\t},\n\t\n\t\tpushFailure: function( message, source, actual ) {\n\t\t\tif ( !( this instanceof Test ) ) {\n\t\t\t\tthrow new Error( \"pushFailure() assertion outside test context, was \" +\n\t\t\t\t\tsourceFromStacktrace( 2 ) );\n\t\t\t}\n\t\n\t\t\tvar details = {\n\t\t\t\t\tmodule: this.module.name,\n\t\t\t\t\tname: this.testName,\n\t\t\t\t\tresult: false,\n\t\t\t\t\tmessage: message || \"error\",\n\t\t\t\t\tactual: actual || null,\n\t\t\t\t\ttestId: this.testId,\n\t\t\t\t\truntime: now() - this.started\n\t\t\t\t};\n\t\n\t\t\tif ( source ) {\n\t\t\t\tdetails.source = source;\n\t\t\t}\n\t\n\t\t\trunLoggingCallbacks( \"log\", details );\n\t\n\t\t\tthis.assertions.push( {\n\t\t\t\tresult: false,\n\t\t\t\tmessage: message\n\t\t\t} );\n\t\t},\n\t\n\t\tresolvePromise: function( promise, phase ) {\n\t\t\tvar then, message,\n\t\t\t\ttest = this;\n\t\t\tif ( promise != null ) {\n\t\t\t\tthen = promise.then;\n\t\t\t\tif ( QUnit.objectType( then ) === \"function\" ) {\n\t\t\t\t\tQUnit.stop();\n\t\t\t\t\tthen.call(\n\t\t\t\t\t\tpromise,\n\t\t\t\t\t\tfunction() { QUnit.start(); },\n\t\t\t\t\t\tfunction( error ) {\n\t\t\t\t\t\t\tmessage = \"Promise rejected \" +\n\t\t\t\t\t\t\t\t( !phase ? \"during\" : phase.replace( /Each$/, \"\" ) ) +\n\t\t\t\t\t\t\t\t\" \" + test.testName + \": \" + ( error.message || error );\n\t\t\t\t\t\t\ttest.pushFailure( message, extractStacktrace( error, 0 ) );\n\t\n\t\t\t\t\t\t\t// Else next test will carry the responsibility\n\t\t\t\t\t\t\tsaveGlobal();\n\t\n\t\t\t\t\t\t\t// Unblock\n\t\t\t\t\t\t\tQUnit.start();\n\t\t\t\t\t\t}\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\n\t\tvalid: function() {\n\t\t\tvar filter = config.filter,\n\t\t\t\tregexFilter = /^(!?)\\/([\\w\\W]*)\\/(i?$)/.exec( filter ),\n\t\t\t\tmodule = config.module && config.module.toLowerCase(),\n\t\t\t\tfullName = ( this.module.name + \": \" + this.testName );\n\t\n\t\t\tfunction moduleChainNameMatch( testModule ) {\n\t\t\t\tvar testModuleName = testModule.name ? testModule.name.toLowerCase() : null;\n\t\t\t\tif ( testModuleName === module ) {\n\t\t\t\t\treturn true;\n\t\t\t\t} else if ( testModule.parentModule ) {\n\t\t\t\t\treturn moduleChainNameMatch( testModule.parentModule );\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfunction moduleChainIdMatch( testModule ) {\n\t\t\t\treturn inArray( testModule.moduleId, config.moduleId ) > -1 ||\n\t\t\t\t\ttestModule.parentModule && moduleChainIdMatch( testModule.parentModule );\n\t\t\t}\n\t\n\t\t\t// Internally-generated tests are always valid\n\t\t\tif ( this.callback && this.callback.validTest ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\n\t\t\tif ( config.moduleId && config.moduleId.length > 0 &&\n\t\t\t\t!moduleChainIdMatch( this.module ) ) {\n\t\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tif ( config.testId && config.testId.length > 0 &&\n\t\t\t\tinArray( this.testId, config.testId ) < 0 ) {\n\t\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tif ( module && !moduleChainNameMatch( this.module ) ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\tif ( !filter ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\n\t\t\treturn regexFilter ?\n\t\t\t\tthis.regexFilter( !!regexFilter[ 1 ], regexFilter[ 2 ], regexFilter[ 3 ], fullName ) :\n\t\t\t\tthis.stringFilter( filter, fullName );\n\t\t},\n\t\n\t\tregexFilter: function( exclude, pattern, flags, fullName ) {\n\t\t\tvar regex = new RegExp( pattern, flags );\n\t\t\tvar match = regex.test( fullName );\n\t\n\t\t\treturn match !== exclude;\n\t\t},\n\t\n\t\tstringFilter: function( filter, fullName ) {\n\t\t\tfilter = filter.toLowerCase();\n\t\t\tfullName = fullName.toLowerCase();\n\t\n\t\t\tvar include = filter.charAt( 0 ) !== \"!\";\n\t\t\tif ( !include ) {\n\t\t\t\tfilter = filter.slice( 1 );\n\t\t\t}\n\t\n\t\t\t// If the filter matches, we need to honour include\n\t\t\tif ( fullName.indexOf( filter ) !== -1 ) {\n\t\t\t\treturn include;\n\t\t\t}\n\t\n\t\t\t// Otherwise, do the opposite\n\t\t\treturn !include;\n\t\t}\n\t};\n\t\n\t// Resets the test setup. Useful for tests that modify the DOM.\n\t/*\n\tDEPRECATED: Use multiple tests instead of resetting inside a test.\n\tUse testStart or testDone for custom cleanup.\n\tThis method will throw an error in 2.0, and will be removed in 2.1\n\t*/\n\tQUnit.reset = function() {\n\t\n\t\t// Return on non-browser environments\n\t\t// This is necessary to not break on node tests\n\t\tif ( !defined.document ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tvar fixture = defined.document && document.getElementById &&\n\t\t\t\tdocument.getElementById( \"qunit-fixture\" );\n\t\n\t\tif ( fixture ) {\n\t\t\tfixture.innerHTML = config.fixture;\n\t\t}\n\t};\n\t\n\tQUnit.pushFailure = function() {\n\t\tif ( !QUnit.config.current ) {\n\t\t\tthrow new Error( \"pushFailure() assertion outside test context, in \" +\n\t\t\t\tsourceFromStacktrace( 2 ) );\n\t\t}\n\t\n\t\t// Gets current test obj\n\t\tvar currentTest = QUnit.config.current;\n\t\n\t\treturn currentTest.pushFailure.apply( currentTest, arguments );\n\t};\n\t\n\t// Based on Java's String.hashCode, a simple but not\n\t// rigorously collision resistant hashing function\n\tfunction generateHash( module, testName ) {\n\t\tvar hex,\n\t\t\ti = 0,\n\t\t\thash = 0,\n\t\t\tstr = module + \"\\x1C\" + testName,\n\t\t\tlen = str.length;\n\t\n\t\tfor ( ; i < len; i++ ) {\n\t\t\thash  = ( ( hash << 5 ) - hash ) + str.charCodeAt( i );\n\t\t\thash |= 0;\n\t\t}\n\t\n\t\t// Convert the possibly negative integer hash code into an 8 character hex string, which isn't\n\t\t// strictly necessary but increases user understanding that the id is a SHA-like hash\n\t\thex = ( 0x100000000 + hash ).toString( 16 );\n\t\tif ( hex.length < 8 ) {\n\t\t\thex = \"0000000\" + hex;\n\t\t}\n\t\n\t\treturn hex.slice( -8 );\n\t}\n\t\n\tfunction synchronize( callback, priority, seed ) {\n\t\tvar last = !priority,\n\t\t\tindex;\n\t\n\t\tif ( QUnit.objectType( callback ) === \"array\" ) {\n\t\t\twhile ( callback.length ) {\n\t\t\t\tsynchronize( callback.shift() );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\t\n\t\tif ( priority ) {\n\t\t\tconfig.queue.splice( priorityCount++, 0, callback );\n\t\t} else if ( seed ) {\n\t\t\tif ( !unitSampler ) {\n\t\t\t\tunitSampler = unitSamplerGenerator( seed );\n\t\t\t}\n\t\n\t\t\t// Insert into a random position after all priority items\n\t\t\tindex = Math.floor( unitSampler() * ( config.queue.length - priorityCount + 1 ) );\n\t\t\tconfig.queue.splice( priorityCount + index, 0, callback );\n\t\t} else {\n\t\t\tconfig.queue.push( callback );\n\t\t}\n\t\n\t\tif ( config.autorun && !config.blocking ) {\n\t\t\tprocess( last );\n\t\t}\n\t}\n\t\n\tfunction unitSamplerGenerator( seed ) {\n\t\n\t\t// 32-bit xorshift, requires only a nonzero seed\n\t\t// http://excamera.com/sphinx/article-xorshift.html\n\t\tvar sample = parseInt( generateHash( seed ), 16 ) || -1;\n\t\treturn function() {\n\t\t\tsample ^= sample << 13;\n\t\t\tsample ^= sample >>> 17;\n\t\t\tsample ^= sample << 5;\n\t\n\t\t\t// ECMAScript has no unsigned number type\n\t\t\tif ( sample < 0 ) {\n\t\t\t\tsample += 0x100000000;\n\t\t\t}\n\t\n\t\t\treturn sample / 0x100000000;\n\t\t};\n\t}\n\t\n\tfunction saveGlobal() {\n\t\tconfig.pollution = [];\n\t\n\t\tif ( config.noglobals ) {\n\t\t\tfor ( var key in global ) {\n\t\t\t\tif ( hasOwn.call( global, key ) ) {\n\t\n\t\t\t\t\t// In Opera sometimes DOM element ids show up here, ignore them\n\t\t\t\t\tif ( /^qunit-test-output/.test( key ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconfig.pollution.push( key );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction checkPollution() {\n\t\tvar newGlobals,\n\t\t\tdeletedGlobals,\n\t\t\told = config.pollution;\n\t\n\t\tsaveGlobal();\n\t\n\t\tnewGlobals = diff( config.pollution, old );\n\t\tif ( newGlobals.length > 0 ) {\n\t\t\tQUnit.pushFailure( \"Introduced global variable(s): \" + newGlobals.join( \", \" ) );\n\t\t}\n\t\n\t\tdeletedGlobals = diff( old, config.pollution );\n\t\tif ( deletedGlobals.length > 0 ) {\n\t\t\tQUnit.pushFailure( \"Deleted global variable(s): \" + deletedGlobals.join( \", \" ) );\n\t\t}\n\t}\n\t\n\t// Will be exposed as QUnit.asyncTest\n\tfunction asyncTest( testName, expected, callback ) {\n\t\tif ( arguments.length === 2 ) {\n\t\t\tcallback = expected;\n\t\t\texpected = null;\n\t\t}\n\t\n\t\tQUnit.test( testName, expected, callback, true );\n\t}\n\t\n\t// Will be exposed as QUnit.test\n\tfunction test( testName, expected, callback, async ) {\n\t\tif ( focused )  { return; }\n\t\n\t\tvar newTest;\n\t\n\t\tif ( arguments.length === 2 ) {\n\t\t\tcallback = expected;\n\t\t\texpected = null;\n\t\t}\n\t\n\t\tnewTest = new Test( {\n\t\t\ttestName: testName,\n\t\t\texpected: expected,\n\t\t\tasync: async,\n\t\t\tcallback: callback\n\t\t} );\n\t\n\t\tnewTest.queue();\n\t}\n\t\n\t// Will be exposed as QUnit.skip\n\tfunction skip( testName ) {\n\t\tif ( focused )  { return; }\n\t\n\t\tvar test = new Test( {\n\t\t\ttestName: testName,\n\t\t\tskip: true\n\t\t} );\n\t\n\t\ttest.queue();\n\t}\n\t\n\t// Will be exposed as QUnit.only\n\tfunction only( testName, expected, callback, async ) {\n\t\tvar newTest;\n\t\n\t\tif ( focused )  { return; }\n\t\n\t\tQUnit.config.queue.length = 0;\n\t\tfocused = true;\n\t\n\t\tif ( arguments.length === 2 ) {\n\t\t\tcallback = expected;\n\t\t\texpected = null;\n\t\t}\n\t\n\t\tnewTest = new Test( {\n\t\t\ttestName: testName,\n\t\t\texpected: expected,\n\t\t\tasync: async,\n\t\t\tcallback: callback\n\t\t} );\n\t\n\t\tnewTest.queue();\n\t}\n\t\n\tfunction Assert( testContext ) {\n\t\tthis.test = testContext;\n\t}\n\t\n\t// Assert helpers\n\tQUnit.assert = Assert.prototype = {\n\t\n\t\t// Specify the number of expected assertions to guarantee that failed test\n\t\t// (no assertions are run at all) don't slip through.\n\t\texpect: function( asserts ) {\n\t\t\tif ( arguments.length === 1 ) {\n\t\t\t\tthis.test.expected = asserts;\n\t\t\t} else {\n\t\t\t\treturn this.test.expected;\n\t\t\t}\n\t\t},\n\t\n\t\t// Increment this Test's semaphore counter, then return a function that\n\t\t// decrements that counter a maximum of once.\n\t\tasync: function( count ) {\n\t\t\tvar test = this.test,\n\t\t\t\tpopped = false,\n\t\t\t\tacceptCallCount = count;\n\t\n\t\t\tif ( typeof acceptCallCount === \"undefined\" ) {\n\t\t\t\tacceptCallCount = 1;\n\t\t\t}\n\t\n\t\t\ttest.semaphore += 1;\n\t\t\ttest.usedAsync = true;\n\t\t\tpauseProcessing();\n\t\n\t\t\treturn function done() {\n\t\n\t\t\t\tif ( popped ) {\n\t\t\t\t\ttest.pushFailure( \"Too many calls to the `assert.async` callback\",\n\t\t\t\t\t\tsourceFromStacktrace( 2 ) );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tacceptCallCount -= 1;\n\t\t\t\tif ( acceptCallCount > 0 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\ttest.semaphore -= 1;\n\t\t\t\tpopped = true;\n\t\t\t\tresumeProcessing();\n\t\t\t};\n\t\t},\n\t\n\t\t// Exports test.push() to the user API\n\t\t// Alias of pushResult.\n\t\tpush: function( result, actual, expected, message, negative ) {\n\t\t\tvar currentAssert = this instanceof Assert ? this : QUnit.config.current.assert;\n\t\t\treturn currentAssert.pushResult( {\n\t\t\t\tresult: result,\n\t\t\t\tactual: actual,\n\t\t\t\texpected: expected,\n\t\t\t\tmessage: message,\n\t\t\t\tnegative: negative\n\t\t\t} );\n\t\t},\n\t\n\t\tpushResult: function( resultInfo ) {\n\t\n\t\t\t// Destructure of resultInfo = { result, actual, expected, message, negative }\n\t\t\tvar assert = this,\n\t\t\t\tcurrentTest = ( assert instanceof Assert && assert.test ) || QUnit.config.current;\n\t\n\t\t\t// Backwards compatibility fix.\n\t\t\t// Allows the direct use of global exported assertions and QUnit.assert.*\n\t\t\t// Although, it's use is not recommended as it can leak assertions\n\t\t\t// to other tests from async tests, because we only get a reference to the current test,\n\t\t\t// not exactly the test where assertion were intended to be called.\n\t\t\tif ( !currentTest ) {\n\t\t\t\tthrow new Error( \"assertion outside test context, in \" + sourceFromStacktrace( 2 ) );\n\t\t\t}\n\t\n\t\t\tif ( currentTest.usedAsync === true && currentTest.semaphore === 0 ) {\n\t\t\t\tcurrentTest.pushFailure( \"Assertion after the final `assert.async` was resolved\",\n\t\t\t\t\tsourceFromStacktrace( 2 ) );\n\t\n\t\t\t\t// Allow this assertion to continue running anyway...\n\t\t\t}\n\t\n\t\t\tif ( !( assert instanceof Assert ) ) {\n\t\t\t\tassert = currentTest.assert;\n\t\t\t}\n\t\n\t\t\treturn assert.test.pushResult( resultInfo );\n\t\t},\n\t\n\t\tok: function( result, message ) {\n\t\t\tmessage = message || ( result ? \"okay\" : \"failed, expected argument to be truthy, was: \" +\n\t\t\t\tQUnit.dump.parse( result ) );\n\t\t\tthis.pushResult( {\n\t\t\t\tresult: !!result,\n\t\t\t\tactual: result,\n\t\t\t\texpected: true,\n\t\t\t\tmessage: message\n\t\t\t} );\n\t\t},\n\t\n\t\tnotOk: function( result, message ) {\n\t\t\tmessage = message || ( !result ? \"okay\" : \"failed, expected argument to be falsy, was: \" +\n\t\t\t\tQUnit.dump.parse( result ) );\n\t\t\tthis.pushResult( {\n\t\t\t\tresult: !result,\n\t\t\t\tactual: result,\n\t\t\t\texpected: false,\n\t\t\t\tmessage: message\n\t\t\t} );\n\t\t},\n\t\n\t\tequal: function( actual, expected, message ) {\n\t\t\t/*jshint eqeqeq:false */\n\t\t\tthis.pushResult( {\n\t\t\t\tresult: expected == actual,\n\t\t\t\tactual: actual,\n\t\t\t\texpected: expected,\n\t\t\t\tmessage: message\n\t\t\t} );\n\t\t},\n\t\n\t\tnotEqual: function( actual, expected, message ) {\n\t\t\t/*jshint eqeqeq:false */\n\t\t\tthis.pushResult( {\n\t\t\t\tresult: expected != actual,\n\t\t\t\tactual: actual,\n\t\t\t\texpected: expected,\n\t\t\t\tmessage: message,\n\t\t\t\tnegative: true\n\t\t\t} );\n\t\t},\n\t\n\t\tpropEqual: function( actual, expected, message ) {\n\t\t\tactual = objectValues( actual );\n\t\t\texpected = objectValues( expected );\n\t\t\tthis.pushResult( {\n\t\t\t\tresult: QUnit.equiv( actual, expected ),\n\t\t\t\tactual: actual,\n\t\t\t\texpected: expected,\n\t\t\t\tmessage: message\n\t\t\t} );\n\t\t},\n\t\n\t\tnotPropEqual: function( actual, expected, message ) {\n\t\t\tactual = objectValues( actual );\n\t\t\texpected = objectValues( expected );\n\t\t\tthis.pushResult( {\n\t\t\t\tresult: !QUnit.equiv( actual, expected ),\n\t\t\t\tactual: actual,\n\t\t\t\texpected: expected,\n\t\t\t\tmessage: message,\n\t\t\t\tnegative: true\n\t\t\t} );\n\t\t},\n\t\n\t\tdeepEqual: function( actual, expected, message ) {\n\t\t\tthis.pushResult( {\n\t\t\t\tresult: QUnit.equiv( actual, expected ),\n\t\t\t\tactual: actual,\n\t\t\t\texpected: expected,\n\t\t\t\tmessage: message\n\t\t\t} );\n\t\t},\n\t\n\t\tnotDeepEqual: function( actual, expected, message ) {\n\t\t\tthis.pushResult( {\n\t\t\t\tresult: !QUnit.equiv( actual, expected ),\n\t\t\t\tactual: actual,\n\t\t\t\texpected: expected,\n\t\t\t\tmessage: message,\n\t\t\t\tnegative: true\n\t\t\t} );\n\t\t},\n\t\n\t\tstrictEqual: function( actual, expected, message ) {\n\t\t\tthis.pushResult( {\n\t\t\t\tresult: expected === actual,\n\t\t\t\tactual: actual,\n\t\t\t\texpected: expected,\n\t\t\t\tmessage: message\n\t\t\t} );\n\t\t},\n\t\n\t\tnotStrictEqual: function( actual, expected, message ) {\n\t\t\tthis.pushResult( {\n\t\t\t\tresult: expected !== actual,\n\t\t\t\tactual: actual,\n\t\t\t\texpected: expected,\n\t\t\t\tmessage: message,\n\t\t\t\tnegative: true\n\t\t\t} );\n\t\t},\n\t\n\t\t\"throws\": function( block, expected, message ) {\n\t\t\tvar actual, expectedType,\n\t\t\t\texpectedOutput = expected,\n\t\t\t\tok = false,\n\t\t\t\tcurrentTest = ( this instanceof Assert && this.test ) || QUnit.config.current;\n\t\n\t\t\t// 'expected' is optional unless doing string comparison\n\t\t\tif ( message == null && typeof expected === \"string\" ) {\n\t\t\t\tmessage = expected;\n\t\t\t\texpected = null;\n\t\t\t}\n\t\n\t\t\tcurrentTest.ignoreGlobalErrors = true;\n\t\t\ttry {\n\t\t\t\tblock.call( currentTest.testEnvironment );\n\t\t\t} catch ( e ) {\n\t\t\t\tactual = e;\n\t\t\t}\n\t\t\tcurrentTest.ignoreGlobalErrors = false;\n\t\n\t\t\tif ( actual ) {\n\t\t\t\texpectedType = QUnit.objectType( expected );\n\t\n\t\t\t\t// We don't want to validate thrown error\n\t\t\t\tif ( !expected ) {\n\t\t\t\t\tok = true;\n\t\t\t\t\texpectedOutput = null;\n\t\n\t\t\t\t// Expected is a regexp\n\t\t\t\t} else if ( expectedType === \"regexp\" ) {\n\t\t\t\t\tok = expected.test( errorString( actual ) );\n\t\n\t\t\t\t// Expected is a string\n\t\t\t\t} else if ( expectedType === \"string\" ) {\n\t\t\t\t\tok = expected === errorString( actual );\n\t\n\t\t\t\t// Expected is a constructor, maybe an Error constructor\n\t\t\t\t} else if ( expectedType === \"function\" && actual instanceof expected ) {\n\t\t\t\t\tok = true;\n\t\n\t\t\t\t// Expected is an Error object\n\t\t\t\t} else if ( expectedType === \"object\" ) {\n\t\t\t\t\tok = actual instanceof expected.constructor &&\n\t\t\t\t\t\tactual.name === expected.name &&\n\t\t\t\t\t\tactual.message === expected.message;\n\t\n\t\t\t\t// Expected is a validation function which returns true if validation passed\n\t\t\t\t} else if ( expectedType === \"function\" && expected.call( {}, actual ) === true ) {\n\t\t\t\t\texpectedOutput = null;\n\t\t\t\t\tok = true;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tcurrentTest.assert.pushResult( {\n\t\t\t\tresult: ok,\n\t\t\t\tactual: actual,\n\t\t\t\texpected: expectedOutput,\n\t\t\t\tmessage: message\n\t\t\t} );\n\t\t}\n\t};\n\t\n\t// Provide an alternative to assert.throws(), for environments that consider throws a reserved word\n\t// Known to us are: Closure Compiler, Narwhal\n\t( function() {\n\t\t/*jshint sub:true */\n\t\tAssert.prototype.raises = Assert.prototype [ \"throws\" ]; //jscs:ignore requireDotNotation\n\t}() );\n\t\n\tfunction errorString( error ) {\n\t\tvar name, message,\n\t\t\tresultErrorString = error.toString();\n\t\tif ( resultErrorString.substring( 0, 7 ) === \"[object\" ) {\n\t\t\tname = error.name ? error.name.toString() : \"Error\";\n\t\t\tmessage = error.message ? error.message.toString() : \"\";\n\t\t\tif ( name && message ) {\n\t\t\t\treturn name + \": \" + message;\n\t\t\t} else if ( name ) {\n\t\t\t\treturn name;\n\t\t\t} else if ( message ) {\n\t\t\t\treturn message;\n\t\t\t} else {\n\t\t\t\treturn \"Error\";\n\t\t\t}\n\t\t} else {\n\t\t\treturn resultErrorString;\n\t\t}\n\t}\n\t\n\t// Test for equality any JavaScript type.\n\t// Author: Philippe Rathé <prathe@gmail.com>\n\tQUnit.equiv = ( function() {\n\t\n\t\t// Stack to decide between skip/abort functions\n\t\tvar callers = [];\n\t\n\t\t// Stack to avoiding loops from circular referencing\n\t\tvar parents = [];\n\t\tvar parentsB = [];\n\t\n\t\tvar getProto = Object.getPrototypeOf || function( obj ) {\n\t\n\t\t\t/*jshint proto: true */\n\t\t\treturn obj.__proto__;\n\t\t};\n\t\n\t\tfunction useStrictEquality( b, a ) {\n\t\n\t\t\t// To catch short annotation VS 'new' annotation of a declaration. e.g.:\n\t\t\t// `var i = 1;`\n\t\t\t// `var j = new Number(1);`\n\t\t\tif ( typeof a === \"object\" ) {\n\t\t\t\ta = a.valueOf();\n\t\t\t}\n\t\t\tif ( typeof b === \"object\" ) {\n\t\t\t\tb = b.valueOf();\n\t\t\t}\n\t\n\t\t\treturn a === b;\n\t\t}\n\t\n\t\tfunction compareConstructors( a, b ) {\n\t\t\tvar protoA = getProto( a );\n\t\t\tvar protoB = getProto( b );\n\t\n\t\t\t// Comparing constructors is more strict than using `instanceof`\n\t\t\tif ( a.constructor === b.constructor ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\n\t\t\t// Ref #851\n\t\t\t// If the obj prototype descends from a null constructor, treat it\n\t\t\t// as a null prototype.\n\t\t\tif ( protoA && protoA.constructor === null ) {\n\t\t\t\tprotoA = null;\n\t\t\t}\n\t\t\tif ( protoB && protoB.constructor === null ) {\n\t\t\t\tprotoB = null;\n\t\t\t}\n\t\n\t\t\t// Allow objects with no prototype to be equivalent to\n\t\t\t// objects with Object as their constructor.\n\t\t\tif ( ( protoA === null && protoB === Object.prototype ) ||\n\t\t\t\t\t( protoB === null && protoA === Object.prototype ) ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\n\t\t\treturn false;\n\t\t}\n\t\n\t\tfunction getRegExpFlags( regexp ) {\n\t\t\treturn \"flags\" in regexp ? regexp.flags : regexp.toString().match( /[gimuy]*$/ )[ 0 ];\n\t\t}\n\t\n\t\tvar callbacks = {\n\t\t\t\"string\": useStrictEquality,\n\t\t\t\"boolean\": useStrictEquality,\n\t\t\t\"number\": useStrictEquality,\n\t\t\t\"null\": useStrictEquality,\n\t\t\t\"undefined\": useStrictEquality,\n\t\t\t\"symbol\": useStrictEquality,\n\t\t\t\"date\": useStrictEquality,\n\t\n\t\t\t\"nan\": function() {\n\t\t\t\treturn true;\n\t\t\t},\n\t\n\t\t\t\"regexp\": function( b, a ) {\n\t\t\t\treturn a.source === b.source &&\n\t\n\t\t\t\t\t// Include flags in the comparison\n\t\t\t\t\tgetRegExpFlags( a ) === getRegExpFlags( b );\n\t\t\t},\n\t\n\t\t\t// - skip when the property is a method of an instance (OOP)\n\t\t\t// - abort otherwise,\n\t\t\t// initial === would have catch identical references anyway\n\t\t\t\"function\": function() {\n\t\t\t\tvar caller = callers[ callers.length - 1 ];\n\t\t\t\treturn caller !== Object && typeof caller !== \"undefined\";\n\t\t\t},\n\t\n\t\t\t\"array\": function( b, a ) {\n\t\t\t\tvar i, j, len, loop, aCircular, bCircular;\n\t\n\t\t\t\tlen = a.length;\n\t\t\t\tif ( len !== b.length ) {\n\t\n\t\t\t\t\t// Safe and faster\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\n\t\t\t\t// Track reference to avoid circular references\n\t\t\t\tparents.push( a );\n\t\t\t\tparentsB.push( b );\n\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\tloop = false;\n\t\t\t\t\tfor ( j = 0; j < parents.length; j++ ) {\n\t\t\t\t\t\taCircular = parents[ j ] === a[ i ];\n\t\t\t\t\t\tbCircular = parentsB[ j ] === b[ i ];\n\t\t\t\t\t\tif ( aCircular || bCircular ) {\n\t\t\t\t\t\t\tif ( a[ i ] === b[ i ] || aCircular && bCircular ) {\n\t\t\t\t\t\t\t\tloop = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\t\t\tparentsB.pop();\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tif ( !loop && !innerEquiv( a[ i ], b[ i ] ) ) {\n\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\tparentsB.pop();\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tparents.pop();\n\t\t\t\tparentsB.pop();\n\t\t\t\treturn true;\n\t\t\t},\n\t\n\t\t\t\"set\": function( b, a ) {\n\t\t\t\tvar innerEq,\n\t\t\t\t\touterEq = true;\n\t\n\t\t\t\tif ( a.size !== b.size ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\n\t\t\t\ta.forEach( function( aVal ) {\n\t\t\t\t\tinnerEq = false;\n\t\n\t\t\t\t\tb.forEach( function( bVal ) {\n\t\t\t\t\t\tif ( innerEquiv( bVal, aVal ) ) {\n\t\t\t\t\t\t\tinnerEq = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\n\t\t\t\t\tif ( !innerEq ) {\n\t\t\t\t\t\touterEq = false;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\n\t\t\t\treturn outerEq;\n\t\t\t},\n\t\n\t\t\t\"map\": function( b, a ) {\n\t\t\t\tvar innerEq,\n\t\t\t\t\touterEq = true;\n\t\n\t\t\t\tif ( a.size !== b.size ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\n\t\t\t\ta.forEach( function( aVal, aKey ) {\n\t\t\t\t\tinnerEq = false;\n\t\n\t\t\t\t\tb.forEach( function( bVal, bKey ) {\n\t\t\t\t\t\tif ( innerEquiv( [ bVal, bKey ], [ aVal, aKey ] ) ) {\n\t\t\t\t\t\t\tinnerEq = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\n\t\t\t\t\tif ( !innerEq ) {\n\t\t\t\t\t\touterEq = false;\n\t\t\t\t\t}\n\t\t\t\t} );\n\t\n\t\t\t\treturn outerEq;\n\t\t\t},\n\t\n\t\t\t\"object\": function( b, a ) {\n\t\t\t\tvar i, j, loop, aCircular, bCircular;\n\t\n\t\t\t\t// Default to true\n\t\t\t\tvar eq = true;\n\t\t\t\tvar aProperties = [];\n\t\t\t\tvar bProperties = [];\n\t\n\t\t\t\tif ( compareConstructors( a, b ) === false ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\n\t\t\t\t// Stack constructor before traversing properties\n\t\t\t\tcallers.push( a.constructor );\n\t\n\t\t\t\t// Track reference to avoid circular references\n\t\t\t\tparents.push( a );\n\t\t\t\tparentsB.push( b );\n\t\n\t\t\t\t// Be strict: don't ensure hasOwnProperty and go deep\n\t\t\t\tfor ( i in a ) {\n\t\t\t\t\tloop = false;\n\t\t\t\t\tfor ( j = 0; j < parents.length; j++ ) {\n\t\t\t\t\t\taCircular = parents[ j ] === a[ i ];\n\t\t\t\t\t\tbCircular = parentsB[ j ] === b[ i ];\n\t\t\t\t\t\tif ( aCircular || bCircular ) {\n\t\t\t\t\t\t\tif ( a[ i ] === b[ i ] || aCircular && bCircular ) {\n\t\t\t\t\t\t\t\tloop = true;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\teq = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\taProperties.push( i );\n\t\t\t\t\tif ( !loop && !innerEquiv( a[ i ], b[ i ] ) ) {\n\t\t\t\t\t\teq = false;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tparents.pop();\n\t\t\t\tparentsB.pop();\n\t\n\t\t\t\t// Unstack, we are done\n\t\t\t\tcallers.pop();\n\t\n\t\t\t\tfor ( i in b ) {\n\t\n\t\t\t\t\t// Collect b's properties\n\t\t\t\t\tbProperties.push( i );\n\t\t\t\t}\n\t\n\t\t\t\t// Ensures identical properties name\n\t\t\t\treturn eq && innerEquiv( aProperties.sort(), bProperties.sort() );\n\t\t\t}\n\t\t};\n\t\n\t\tfunction typeEquiv( a, b ) {\n\t\t\tvar type = QUnit.objectType( a );\n\t\t\treturn QUnit.objectType( b ) === type && callbacks[ type ]( b, a );\n\t\t}\n\t\n\t\t// The real equiv function\n\t\tfunction innerEquiv( a, b ) {\n\t\n\t\t\t// We're done when there's nothing more to compare\n\t\t\tif ( arguments.length < 2 ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\n\t\t\t// Require type-specific equality\n\t\t\treturn ( a === b || typeEquiv( a, b ) ) &&\n\t\n\t\t\t\t// ...across all consecutive argument pairs\n\t\t\t\t( arguments.length === 2 || innerEquiv.apply( this, [].slice.call( arguments, 1 ) ) );\n\t\t}\n\t\n\t\treturn innerEquiv;\n\t}() );\n\t\n\t// Based on jsDump by Ariel Flesler\n\t// http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html\n\tQUnit.dump = ( function() {\n\t\tfunction quote( str ) {\n\t\t\treturn \"\\\"\" + str.toString().replace( /\\\\/g, \"\\\\\\\\\" ).replace( /\"/g, \"\\\\\\\"\" ) + \"\\\"\";\n\t\t}\n\t\tfunction literal( o ) {\n\t\t\treturn o + \"\";\n\t\t}\n\t\tfunction join( pre, arr, post ) {\n\t\t\tvar s = dump.separator(),\n\t\t\t\tbase = dump.indent(),\n\t\t\t\tinner = dump.indent( 1 );\n\t\t\tif ( arr.join ) {\n\t\t\t\tarr = arr.join( \",\" + s + inner );\n\t\t\t}\n\t\t\tif ( !arr ) {\n\t\t\t\treturn pre + post;\n\t\t\t}\n\t\t\treturn [ pre, inner + arr, base + post ].join( s );\n\t\t}\n\t\tfunction array( arr, stack ) {\n\t\t\tvar i = arr.length,\n\t\t\t\tret = new Array( i );\n\t\n\t\t\tif ( dump.maxDepth && dump.depth > dump.maxDepth ) {\n\t\t\t\treturn \"[object Array]\";\n\t\t\t}\n\t\n\t\t\tthis.up();\n\t\t\twhile ( i-- ) {\n\t\t\t\tret[ i ] = this.parse( arr[ i ], undefined, stack );\n\t\t\t}\n\t\t\tthis.down();\n\t\t\treturn join( \"[\", ret, \"]\" );\n\t\t}\n\t\n\t\tvar reName = /^function (\\w+)/,\n\t\t\tdump = {\n\t\n\t\t\t\t// The objType is used mostly internally, you can fix a (custom) type in advance\n\t\t\t\tparse: function( obj, objType, stack ) {\n\t\t\t\t\tstack = stack || [];\n\t\t\t\t\tvar res, parser, parserType,\n\t\t\t\t\t\tinStack = inArray( obj, stack );\n\t\n\t\t\t\t\tif ( inStack !== -1 ) {\n\t\t\t\t\t\treturn \"recursion(\" + ( inStack - stack.length ) + \")\";\n\t\t\t\t\t}\n\t\n\t\t\t\t\tobjType = objType || this.typeOf( obj  );\n\t\t\t\t\tparser = this.parsers[ objType ];\n\t\t\t\t\tparserType = typeof parser;\n\t\n\t\t\t\t\tif ( parserType === \"function\" ) {\n\t\t\t\t\t\tstack.push( obj );\n\t\t\t\t\t\tres = parser.call( this, obj, stack );\n\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t}\n\t\t\t\t\treturn ( parserType === \"string\" ) ? parser : this.parsers.error;\n\t\t\t\t},\n\t\t\t\ttypeOf: function( obj ) {\n\t\t\t\t\tvar type;\n\t\t\t\t\tif ( obj === null ) {\n\t\t\t\t\t\ttype = \"null\";\n\t\t\t\t\t} else if ( typeof obj === \"undefined\" ) {\n\t\t\t\t\t\ttype = \"undefined\";\n\t\t\t\t\t} else if ( QUnit.is( \"regexp\", obj ) ) {\n\t\t\t\t\t\ttype = \"regexp\";\n\t\t\t\t\t} else if ( QUnit.is( \"date\", obj ) ) {\n\t\t\t\t\t\ttype = \"date\";\n\t\t\t\t\t} else if ( QUnit.is( \"function\", obj ) ) {\n\t\t\t\t\t\ttype = \"function\";\n\t\t\t\t\t} else if ( obj.setInterval !== undefined &&\n\t\t\t\t\t\t\tobj.document !== undefined &&\n\t\t\t\t\t\t\tobj.nodeType === undefined ) {\n\t\t\t\t\t\ttype = \"window\";\n\t\t\t\t\t} else if ( obj.nodeType === 9 ) {\n\t\t\t\t\t\ttype = \"document\";\n\t\t\t\t\t} else if ( obj.nodeType ) {\n\t\t\t\t\t\ttype = \"node\";\n\t\t\t\t\t} else if (\n\t\n\t\t\t\t\t\t// Native arrays\n\t\t\t\t\t\ttoString.call( obj ) === \"[object Array]\" ||\n\t\n\t\t\t\t\t\t// NodeList objects\n\t\t\t\t\t\t( typeof obj.length === \"number\" && obj.item !== undefined &&\n\t\t\t\t\t\t( obj.length ? obj.item( 0 ) === obj[ 0 ] : ( obj.item( 0 ) === null &&\n\t\t\t\t\t\tobj[ 0 ] === undefined ) ) )\n\t\t\t\t\t) {\n\t\t\t\t\t\ttype = \"array\";\n\t\t\t\t\t} else if ( obj.constructor === Error.prototype.constructor ) {\n\t\t\t\t\t\ttype = \"error\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = typeof obj;\n\t\t\t\t\t}\n\t\t\t\t\treturn type;\n\t\t\t\t},\n\t\n\t\t\t\tseparator: function() {\n\t\t\t\t\treturn this.multiline ? this.HTML ? \"<br />\" : \"\\n\" : this.HTML ? \"&#160;\" : \" \";\n\t\t\t\t},\n\t\n\t\t\t\t// Extra can be a number, shortcut for increasing-calling-decreasing\n\t\t\t\tindent: function( extra ) {\n\t\t\t\t\tif ( !this.multiline ) {\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t}\n\t\t\t\t\tvar chr = this.indentChar;\n\t\t\t\t\tif ( this.HTML ) {\n\t\t\t\t\t\tchr = chr.replace( /\\t/g, \"   \" ).replace( / /g, \"&#160;\" );\n\t\t\t\t\t}\n\t\t\t\t\treturn new Array( this.depth + ( extra || 0 ) ).join( chr );\n\t\t\t\t},\n\t\t\t\tup: function( a ) {\n\t\t\t\t\tthis.depth += a || 1;\n\t\t\t\t},\n\t\t\t\tdown: function( a ) {\n\t\t\t\t\tthis.depth -= a || 1;\n\t\t\t\t},\n\t\t\t\tsetParser: function( name, parser ) {\n\t\t\t\t\tthis.parsers[ name ] = parser;\n\t\t\t\t},\n\t\n\t\t\t\t// The next 3 are exposed so you can use them\n\t\t\t\tquote: quote,\n\t\t\t\tliteral: literal,\n\t\t\t\tjoin: join,\n\t\t\t\tdepth: 1,\n\t\t\t\tmaxDepth: QUnit.config.maxDepth,\n\t\n\t\t\t\t// This is the list of parsers, to modify them, use dump.setParser\n\t\t\t\tparsers: {\n\t\t\t\t\twindow: \"[Window]\",\n\t\t\t\t\tdocument: \"[Document]\",\n\t\t\t\t\terror: function( error ) {\n\t\t\t\t\t\treturn \"Error(\\\"\" + error.message + \"\\\")\";\n\t\t\t\t\t},\n\t\t\t\t\tunknown: \"[Unknown]\",\n\t\t\t\t\t\"null\": \"null\",\n\t\t\t\t\t\"undefined\": \"undefined\",\n\t\t\t\t\t\"function\": function( fn ) {\n\t\t\t\t\t\tvar ret = \"function\",\n\t\n\t\t\t\t\t\t\t// Functions never have name in IE\n\t\t\t\t\t\t\tname = \"name\" in fn ? fn.name : ( reName.exec( fn ) || [] )[ 1 ];\n\t\n\t\t\t\t\t\tif ( name ) {\n\t\t\t\t\t\t\tret += \" \" + name;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tret += \"(\";\n\t\n\t\t\t\t\t\tret = [ ret, dump.parse( fn, \"functionArgs\" ), \"){\" ].join( \"\" );\n\t\t\t\t\t\treturn join( ret, dump.parse( fn, \"functionCode\" ), \"}\" );\n\t\t\t\t\t},\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnodelist: array,\n\t\t\t\t\t\"arguments\": array,\n\t\t\t\t\tobject: function( map, stack ) {\n\t\t\t\t\t\tvar keys, key, val, i, nonEnumerableProperties,\n\t\t\t\t\t\t\tret = [];\n\t\n\t\t\t\t\t\tif ( dump.maxDepth && dump.depth > dump.maxDepth ) {\n\t\t\t\t\t\t\treturn \"[object Object]\";\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tdump.up();\n\t\t\t\t\t\tkeys = [];\n\t\t\t\t\t\tfor ( key in map ) {\n\t\t\t\t\t\t\tkeys.push( key );\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Some properties are not always enumerable on Error objects.\n\t\t\t\t\t\tnonEnumerableProperties = [ \"message\", \"name\" ];\n\t\t\t\t\t\tfor ( i in nonEnumerableProperties ) {\n\t\t\t\t\t\t\tkey = nonEnumerableProperties[ i ];\n\t\t\t\t\t\t\tif ( key in map && inArray( key, keys ) < 0 ) {\n\t\t\t\t\t\t\t\tkeys.push( key );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tkeys.sort();\n\t\t\t\t\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t\t\t\t\tkey = keys[ i ];\n\t\t\t\t\t\t\tval = map[ key ];\n\t\t\t\t\t\t\tret.push( dump.parse( key, \"key\" ) + \": \" +\n\t\t\t\t\t\t\t\tdump.parse( val, undefined, stack ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tdump.down();\n\t\t\t\t\t\treturn join( \"{\", ret, \"}\" );\n\t\t\t\t\t},\n\t\t\t\t\tnode: function( node ) {\n\t\t\t\t\t\tvar len, i, val,\n\t\t\t\t\t\t\topen = dump.HTML ? \"&lt;\" : \"<\",\n\t\t\t\t\t\t\tclose = dump.HTML ? \"&gt;\" : \">\",\n\t\t\t\t\t\t\ttag = node.nodeName.toLowerCase(),\n\t\t\t\t\t\t\tret = open + tag,\n\t\t\t\t\t\t\tattrs = node.attributes;\n\t\n\t\t\t\t\t\tif ( attrs ) {\n\t\t\t\t\t\t\tfor ( i = 0, len = attrs.length; i < len; i++ ) {\n\t\t\t\t\t\t\t\tval = attrs[ i ].nodeValue;\n\t\n\t\t\t\t\t\t\t\t// IE6 includes all attributes in .attributes, even ones not explicitly\n\t\t\t\t\t\t\t\t// set. Those have values like undefined, null, 0, false, \"\" or\n\t\t\t\t\t\t\t\t// \"inherit\".\n\t\t\t\t\t\t\t\tif ( val && val !== \"inherit\" ) {\n\t\t\t\t\t\t\t\t\tret += \" \" + attrs[ i ].nodeName + \"=\" +\n\t\t\t\t\t\t\t\t\t\tdump.parse( val, \"attribute\" );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tret += close;\n\t\n\t\t\t\t\t\t// Show content of TextNode or CDATASection\n\t\t\t\t\t\tif ( node.nodeType === 3 || node.nodeType === 4 ) {\n\t\t\t\t\t\t\tret += node.nodeValue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn ret + open + \"/\" + tag + close;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Function calls it internally, it's the arguments part of the function\n\t\t\t\t\tfunctionArgs: function( fn ) {\n\t\t\t\t\t\tvar args,\n\t\t\t\t\t\t\tl = fn.length;\n\t\n\t\t\t\t\t\tif ( !l ) {\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\targs = new Array( l );\n\t\t\t\t\t\twhile ( l-- ) {\n\t\n\t\t\t\t\t\t\t// 97 is 'a'\n\t\t\t\t\t\t\targs[ l ] = String.fromCharCode( 97 + l );\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn \" \" + args.join( \", \" ) + \" \";\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// Object calls it internally, the key part of an item in a map\n\t\t\t\t\tkey: quote,\n\t\n\t\t\t\t\t// Function calls it internally, it's the content of the function\n\t\t\t\t\tfunctionCode: \"[code]\",\n\t\n\t\t\t\t\t// Node calls it internally, it's a html attribute value\n\t\t\t\t\tattribute: quote,\n\t\t\t\t\tstring: quote,\n\t\t\t\t\tdate: quote,\n\t\t\t\t\tregexp: literal,\n\t\t\t\t\tnumber: literal,\n\t\t\t\t\t\"boolean\": literal\n\t\t\t\t},\n\t\n\t\t\t\t// If true, entities are escaped ( <, >, \\t, space and \\n )\n\t\t\t\tHTML: false,\n\t\n\t\t\t\t// Indentation unit\n\t\t\t\tindentChar: \"  \",\n\t\n\t\t\t\t// If true, items in a collection, are separated by a \\n, else just a space.\n\t\t\t\tmultiline: true\n\t\t\t};\n\t\n\t\treturn dump;\n\t}() );\n\t\n\t// Back compat\n\tQUnit.jsDump = QUnit.dump;\n\t\n\t// Deprecated\n\t// Extend assert methods to QUnit for Backwards compatibility\n\t( function() {\n\t\tvar i,\n\t\t\tassertions = Assert.prototype;\n\t\n\t\tfunction applyCurrent( current ) {\n\t\t\treturn function() {\n\t\t\t\tvar assert = new Assert( QUnit.config.current );\n\t\t\t\tcurrent.apply( assert, arguments );\n\t\t\t};\n\t\t}\n\t\n\t\tfor ( i in assertions ) {\n\t\t\tQUnit[ i ] = applyCurrent( assertions[ i ] );\n\t\t}\n\t}() );\n\t\n\t// For browser, export only select globals\n\tif ( defined.document ) {\n\t\n\t\t( function() {\n\t\t\tvar i, l,\n\t\t\t\tkeys = [\n\t\t\t\t\t\"test\",\n\t\t\t\t\t\"module\",\n\t\t\t\t\t\"expect\",\n\t\t\t\t\t\"asyncTest\",\n\t\t\t\t\t\"start\",\n\t\t\t\t\t\"stop\",\n\t\t\t\t\t\"ok\",\n\t\t\t\t\t\"notOk\",\n\t\t\t\t\t\"equal\",\n\t\t\t\t\t\"notEqual\",\n\t\t\t\t\t\"propEqual\",\n\t\t\t\t\t\"notPropEqual\",\n\t\t\t\t\t\"deepEqual\",\n\t\t\t\t\t\"notDeepEqual\",\n\t\t\t\t\t\"strictEqual\",\n\t\t\t\t\t\"notStrictEqual\",\n\t\t\t\t\t\"throws\",\n\t\t\t\t\t\"raises\"\n\t\t\t\t];\n\t\n\t\t\tfor ( i = 0, l = keys.length; i < l; i++ ) {\n\t\t\t\twindow[ keys[ i ] ] = QUnit[ keys[ i ] ];\n\t\t\t}\n\t\t}() );\n\t\n\t\twindow.QUnit = QUnit;\n\t}\n\t\n\t// For nodejs\n\tif ( typeof module !== \"undefined\" && module && module.exports ) {\n\t\tmodule.exports = QUnit;\n\t\n\t\t// For consistency with CommonJS environments' exports\n\t\tmodule.exports.QUnit = QUnit;\n\t}\n\t\n\t// For CommonJS with exports, but without module.exports, like Rhino\n\tif ( typeof exports !== \"undefined\" && exports ) {\n\t\texports.QUnit = QUnit;\n\t}\n\t\n\tif ( true ) {\n\t\t!(__WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t\t\treturn QUnit;\n\t\t}.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\tQUnit.config.autostart = false;\n\t}\n\t\n\t// Get a reference to the global object, like window in browsers\n\t}( ( function() {\n\t\treturn this;\n\t}() ) ) );\n\t\n\t( function() {\n\t\n\t// Only interact with URLs via window.location\n\tvar location = typeof window !== \"undefined\" && window.location;\n\tif ( !location ) {\n\t\treturn;\n\t}\n\t\n\tvar urlParams = getUrlParams();\n\t\n\tQUnit.urlParams = urlParams;\n\t\n\t// Match module/test by inclusion in an array\n\tQUnit.config.moduleId = [].concat( urlParams.moduleId || [] );\n\tQUnit.config.testId = [].concat( urlParams.testId || [] );\n\t\n\t// Exact case-insensitive match of the module name\n\tQUnit.config.module = urlParams.module;\n\t\n\t// Regular expression or case-insenstive substring match against \"moduleName: testName\"\n\tQUnit.config.filter = urlParams.filter;\n\t\n\t// Test order randomization\n\tif ( urlParams.seed === true ) {\n\t\n\t\t// Generate a random seed if the option is specified without a value\n\t\tQUnit.config.seed = Math.random().toString( 36 ).slice( 2 );\n\t} else if ( urlParams.seed ) {\n\t\tQUnit.config.seed = urlParams.seed;\n\t}\n\t\n\t// Add URL-parameter-mapped config values with UI form rendering data\n\tQUnit.config.urlConfig.push(\n\t\t{\n\t\t\tid: \"hidepassed\",\n\t\t\tlabel: \"Hide passed tests\",\n\t\t\ttooltip: \"Only show tests and assertions that fail. Stored as query-strings.\"\n\t\t},\n\t\t{\n\t\t\tid: \"noglobals\",\n\t\t\tlabel: \"Check for Globals\",\n\t\t\ttooltip: \"Enabling this will test if any test introduces new properties on the \" +\n\t\t\t\t\"global object (`window` in Browsers). Stored as query-strings.\"\n\t\t},\n\t\t{\n\t\t\tid: \"notrycatch\",\n\t\t\tlabel: \"No try-catch\",\n\t\t\ttooltip: \"Enabling this will run tests outside of a try-catch block. Makes debugging \" +\n\t\t\t\t\"exceptions in IE reasonable. Stored as query-strings.\"\n\t\t}\n\t);\n\t\n\tQUnit.begin( function() {\n\t\tvar i, option,\n\t\t\turlConfig = QUnit.config.urlConfig;\n\t\n\t\tfor ( i = 0; i < urlConfig.length; i++ ) {\n\t\n\t\t\t// Options can be either strings or objects with nonempty \"id\" properties\n\t\t\toption = QUnit.config.urlConfig[ i ];\n\t\t\tif ( typeof option !== \"string\" ) {\n\t\t\t\toption = option.id;\n\t\t\t}\n\t\n\t\t\tif ( QUnit.config[ option ] === undefined ) {\n\t\t\t\tQUnit.config[ option ] = urlParams[ option ];\n\t\t\t}\n\t\t}\n\t} );\n\t\n\tfunction getUrlParams() {\n\t\tvar i, param, name, value;\n\t\tvar urlParams = {};\n\t\tvar params = location.search.slice( 1 ).split( \"&\" );\n\t\tvar length = params.length;\n\t\n\t\tfor ( i = 0; i < length; i++ ) {\n\t\t\tif ( params[ i ] ) {\n\t\t\t\tparam = params[ i ].split( \"=\" );\n\t\t\t\tname = decodeURIComponent( param[ 0 ] );\n\t\n\t\t\t\t// Allow just a key to turn on a flag, e.g., test.html?noglobals\n\t\t\t\tvalue = param.length === 1 ||\n\t\t\t\t\tdecodeURIComponent( param.slice( 1 ).join( \"=\" ) ) ;\n\t\t\t\tif ( urlParams[ name ] ) {\n\t\t\t\t\turlParams[ name ] = [].concat( urlParams[ name ], value );\n\t\t\t\t} else {\n\t\t\t\t\turlParams[ name ] = value;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn urlParams;\n\t}\n\t\n\t// Don't load the HTML Reporter on non-browser environments\n\tif ( typeof window === \"undefined\" || !window.document ) {\n\t\treturn;\n\t}\n\t\n\t// Deprecated QUnit.init - Ref #530\n\t// Re-initialize the configuration options\n\tQUnit.init = function() {\n\t\tvar config = QUnit.config;\n\t\n\t\tconfig.stats = { all: 0, bad: 0 };\n\t\tconfig.moduleStats = { all: 0, bad: 0 };\n\t\tconfig.started = 0;\n\t\tconfig.updateRate = 1000;\n\t\tconfig.blocking = false;\n\t\tconfig.autostart = true;\n\t\tconfig.autorun = false;\n\t\tconfig.filter = \"\";\n\t\tconfig.queue = [];\n\t\n\t\tappendInterface();\n\t};\n\t\n\tvar config = QUnit.config,\n\t\tdocument = window.document,\n\t\tcollapseNext = false,\n\t\thasOwn = Object.prototype.hasOwnProperty,\n\t\tunfilteredUrl = setUrl( { filter: undefined, module: undefined,\n\t\t\tmoduleId: undefined, testId: undefined } ),\n\t\tdefined = {\n\t\t\tsessionStorage: ( function() {\n\t\t\t\tvar x = \"qunit-test-string\";\n\t\t\t\ttry {\n\t\t\t\t\tsessionStorage.setItem( x, x );\n\t\t\t\t\tsessionStorage.removeItem( x );\n\t\t\t\t\treturn true;\n\t\t\t\t} catch ( e ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}() )\n\t\t},\n\t\tmodulesList = [];\n\t\n\t/**\n\t* Escape text for attribute or text content.\n\t*/\n\tfunction escapeText( s ) {\n\t\tif ( !s ) {\n\t\t\treturn \"\";\n\t\t}\n\t\ts = s + \"\";\n\t\n\t\t// Both single quotes and double quotes (for attributes)\n\t\treturn s.replace( /['\"<>&]/g, function( s ) {\n\t\t\tswitch ( s ) {\n\t\t\tcase \"'\":\n\t\t\t\treturn \"&#039;\";\n\t\t\tcase \"\\\"\":\n\t\t\t\treturn \"&quot;\";\n\t\t\tcase \"<\":\n\t\t\t\treturn \"&lt;\";\n\t\t\tcase \">\":\n\t\t\t\treturn \"&gt;\";\n\t\t\tcase \"&\":\n\t\t\t\treturn \"&amp;\";\n\t\t\t}\n\t\t} );\n\t}\n\t\n\t/**\n\t * @param {HTMLElement} elem\n\t * @param {string} type\n\t * @param {Function} fn\n\t */\n\tfunction addEvent( elem, type, fn ) {\n\t\tif ( elem.addEventListener ) {\n\t\n\t\t\t// Standards-based browsers\n\t\t\telem.addEventListener( type, fn, false );\n\t\t} else if ( elem.attachEvent ) {\n\t\n\t\t\t// Support: IE <9\n\t\t\telem.attachEvent( \"on\" + type, function() {\n\t\t\t\tvar event = window.event;\n\t\t\t\tif ( !event.target ) {\n\t\t\t\t\tevent.target = event.srcElement || document;\n\t\t\t\t}\n\t\n\t\t\t\tfn.call( elem, event );\n\t\t\t} );\n\t\t}\n\t}\n\t\n\t/**\n\t * @param {Array|NodeList} elems\n\t * @param {string} type\n\t * @param {Function} fn\n\t */\n\tfunction addEvents( elems, type, fn ) {\n\t\tvar i = elems.length;\n\t\twhile ( i-- ) {\n\t\t\taddEvent( elems[ i ], type, fn );\n\t\t}\n\t}\n\t\n\tfunction hasClass( elem, name ) {\n\t\treturn ( \" \" + elem.className + \" \" ).indexOf( \" \" + name + \" \" ) >= 0;\n\t}\n\t\n\tfunction addClass( elem, name ) {\n\t\tif ( !hasClass( elem, name ) ) {\n\t\t\telem.className += ( elem.className ? \" \" : \"\" ) + name;\n\t\t}\n\t}\n\t\n\tfunction toggleClass( elem, name, force ) {\n\t\tif ( force || typeof force === \"undefined\" && !hasClass( elem, name ) ) {\n\t\t\taddClass( elem, name );\n\t\t} else {\n\t\t\tremoveClass( elem, name );\n\t\t}\n\t}\n\t\n\tfunction removeClass( elem, name ) {\n\t\tvar set = \" \" + elem.className + \" \";\n\t\n\t\t// Class name may appear multiple times\n\t\twhile ( set.indexOf( \" \" + name + \" \" ) >= 0 ) {\n\t\t\tset = set.replace( \" \" + name + \" \", \" \" );\n\t\t}\n\t\n\t\t// Trim for prettiness\n\t\telem.className = typeof set.trim === \"function\" ? set.trim() : set.replace( /^\\s+|\\s+$/g, \"\" );\n\t}\n\t\n\tfunction id( name ) {\n\t\treturn document.getElementById && document.getElementById( name );\n\t}\n\t\n\tfunction getUrlConfigHtml() {\n\t\tvar i, j, val,\n\t\t\tescaped, escapedTooltip,\n\t\t\tselection = false,\n\t\t\turlConfig = config.urlConfig,\n\t\t\turlConfigHtml = \"\";\n\t\n\t\tfor ( i = 0; i < urlConfig.length; i++ ) {\n\t\n\t\t\t// Options can be either strings or objects with nonempty \"id\" properties\n\t\t\tval = config.urlConfig[ i ];\n\t\t\tif ( typeof val === \"string\" ) {\n\t\t\t\tval = {\n\t\t\t\t\tid: val,\n\t\t\t\t\tlabel: val\n\t\t\t\t};\n\t\t\t}\n\t\n\t\t\tescaped = escapeText( val.id );\n\t\t\tescapedTooltip = escapeText( val.tooltip );\n\t\n\t\t\tif ( !val.value || typeof val.value === \"string\" ) {\n\t\t\t\turlConfigHtml += \"<input id='qunit-urlconfig-\" + escaped +\n\t\t\t\t\t\"' name='\" + escaped + \"' type='checkbox'\" +\n\t\t\t\t\t( val.value ? \" value='\" + escapeText( val.value ) + \"'\" : \"\" ) +\n\t\t\t\t\t( config[ val.id ] ? \" checked='checked'\" : \"\" ) +\n\t\t\t\t\t\" title='\" + escapedTooltip + \"' /><label for='qunit-urlconfig-\" + escaped +\n\t\t\t\t\t\"' title='\" + escapedTooltip + \"'>\" + val.label + \"</label>\";\n\t\t\t} else {\n\t\t\t\turlConfigHtml += \"<label for='qunit-urlconfig-\" + escaped +\n\t\t\t\t\t\"' title='\" + escapedTooltip + \"'>\" + val.label +\n\t\t\t\t\t\": </label><select id='qunit-urlconfig-\" + escaped +\n\t\t\t\t\t\"' name='\" + escaped + \"' title='\" + escapedTooltip + \"'><option></option>\";\n\t\n\t\t\t\tif ( QUnit.is( \"array\", val.value ) ) {\n\t\t\t\t\tfor ( j = 0; j < val.value.length; j++ ) {\n\t\t\t\t\t\tescaped = escapeText( val.value[ j ] );\n\t\t\t\t\t\turlConfigHtml += \"<option value='\" + escaped + \"'\" +\n\t\t\t\t\t\t\t( config[ val.id ] === val.value[ j ] ?\n\t\t\t\t\t\t\t\t( selection = true ) && \" selected='selected'\" : \"\" ) +\n\t\t\t\t\t\t\t\">\" + escaped + \"</option>\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor ( j in val.value ) {\n\t\t\t\t\t\tif ( hasOwn.call( val.value, j ) ) {\n\t\t\t\t\t\t\turlConfigHtml += \"<option value='\" + escapeText( j ) + \"'\" +\n\t\t\t\t\t\t\t\t( config[ val.id ] === j ?\n\t\t\t\t\t\t\t\t\t( selection = true ) && \" selected='selected'\" : \"\" ) +\n\t\t\t\t\t\t\t\t\">\" + escapeText( val.value[ j ] ) + \"</option>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( config[ val.id ] && !selection ) {\n\t\t\t\t\tescaped = escapeText( config[ val.id ] );\n\t\t\t\t\turlConfigHtml += \"<option value='\" + escaped +\n\t\t\t\t\t\t\"' selected='selected' disabled='disabled'>\" + escaped + \"</option>\";\n\t\t\t\t}\n\t\t\t\turlConfigHtml += \"</select>\";\n\t\t\t}\n\t\t}\n\t\n\t\treturn urlConfigHtml;\n\t}\n\t\n\t// Handle \"click\" events on toolbar checkboxes and \"change\" for select menus.\n\t// Updates the URL with the new state of `config.urlConfig` values.\n\tfunction toolbarChanged() {\n\t\tvar updatedUrl, value, tests,\n\t\t\tfield = this,\n\t\t\tparams = {};\n\t\n\t\t// Detect if field is a select menu or a checkbox\n\t\tif ( \"selectedIndex\" in field ) {\n\t\t\tvalue = field.options[ field.selectedIndex ].value || undefined;\n\t\t} else {\n\t\t\tvalue = field.checked ? ( field.defaultValue || true ) : undefined;\n\t\t}\n\t\n\t\tparams[ field.name ] = value;\n\t\tupdatedUrl = setUrl( params );\n\t\n\t\t// Check if we can apply the change without a page refresh\n\t\tif ( \"hidepassed\" === field.name && \"replaceState\" in window.history ) {\n\t\t\tQUnit.urlParams[ field.name ] = value;\n\t\t\tconfig[ field.name ] = value || false;\n\t\t\ttests = id( \"qunit-tests\" );\n\t\t\tif ( tests ) {\n\t\t\t\ttoggleClass( tests, \"hidepass\", value || false );\n\t\t\t}\n\t\t\twindow.history.replaceState( null, \"\", updatedUrl );\n\t\t} else {\n\t\t\twindow.location = updatedUrl;\n\t\t}\n\t}\n\t\n\tfunction setUrl( params ) {\n\t\tvar key, arrValue, i,\n\t\t\tquerystring = \"?\",\n\t\t\tlocation = window.location;\n\t\n\t\tparams = QUnit.extend( QUnit.extend( {}, QUnit.urlParams ), params );\n\t\n\t\tfor ( key in params ) {\n\t\n\t\t\t// Skip inherited or undefined properties\n\t\t\tif ( hasOwn.call( params, key ) && params[ key ] !== undefined ) {\n\t\n\t\t\t\t// Output a parameter for each value of this key (but usually just one)\n\t\t\t\tarrValue = [].concat( params[ key ] );\n\t\t\t\tfor ( i = 0; i < arrValue.length; i++ ) {\n\t\t\t\t\tquerystring += encodeURIComponent( key );\n\t\t\t\t\tif ( arrValue[ i ] !== true ) {\n\t\t\t\t\t\tquerystring += \"=\" + encodeURIComponent( arrValue[ i ] );\n\t\t\t\t\t}\n\t\t\t\t\tquerystring += \"&\";\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn location.protocol + \"//\" + location.host +\n\t\t\tlocation.pathname + querystring.slice( 0, -1 );\n\t}\n\t\n\tfunction applyUrlParams() {\n\t\tvar selectedModule,\n\t\t\tmodulesList = id( \"qunit-modulefilter\" ),\n\t\t\tfilter = id( \"qunit-filter-input\" ).value;\n\t\n\t\tselectedModule = modulesList ?\n\t\t\tdecodeURIComponent( modulesList.options[ modulesList.selectedIndex ].value ) :\n\t\t\tundefined;\n\t\n\t\twindow.location = setUrl( {\n\t\t\tmodule: ( selectedModule === \"\" ) ? undefined : selectedModule,\n\t\t\tfilter: ( filter === \"\" ) ? undefined : filter,\n\t\n\t\t\t// Remove moduleId and testId filters\n\t\t\tmoduleId: undefined,\n\t\t\ttestId: undefined\n\t\t} );\n\t}\n\t\n\tfunction toolbarUrlConfigContainer() {\n\t\tvar urlConfigContainer = document.createElement( \"span\" );\n\t\n\t\turlConfigContainer.innerHTML = getUrlConfigHtml();\n\t\taddClass( urlConfigContainer, \"qunit-url-config\" );\n\t\n\t\t// For oldIE support:\n\t\t// * Add handlers to the individual elements instead of the container\n\t\t// * Use \"click\" instead of \"change\" for checkboxes\n\t\taddEvents( urlConfigContainer.getElementsByTagName( \"input\" ), \"click\", toolbarChanged );\n\t\taddEvents( urlConfigContainer.getElementsByTagName( \"select\" ), \"change\", toolbarChanged );\n\t\n\t\treturn urlConfigContainer;\n\t}\n\t\n\tfunction toolbarLooseFilter() {\n\t\tvar filter = document.createElement( \"form\" ),\n\t\t\tlabel = document.createElement( \"label\" ),\n\t\t\tinput = document.createElement( \"input\" ),\n\t\t\tbutton = document.createElement( \"button\" );\n\t\n\t\taddClass( filter, \"qunit-filter\" );\n\t\n\t\tlabel.innerHTML = \"Filter: \";\n\t\n\t\tinput.type = \"text\";\n\t\tinput.value = config.filter || \"\";\n\t\tinput.name = \"filter\";\n\t\tinput.id = \"qunit-filter-input\";\n\t\n\t\tbutton.innerHTML = \"Go\";\n\t\n\t\tlabel.appendChild( input );\n\t\n\t\tfilter.appendChild( label );\n\t\tfilter.appendChild( button );\n\t\taddEvent( filter, \"submit\", function( ev ) {\n\t\t\tapplyUrlParams();\n\t\n\t\t\tif ( ev && ev.preventDefault ) {\n\t\t\t\tev.preventDefault();\n\t\t\t}\n\t\n\t\t\treturn false;\n\t\t} );\n\t\n\t\treturn filter;\n\t}\n\t\n\tfunction toolbarModuleFilterHtml() {\n\t\tvar i,\n\t\t\tmoduleFilterHtml = \"\";\n\t\n\t\tif ( !modulesList.length ) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tmoduleFilterHtml += \"<label for='qunit-modulefilter'>Module: </label>\" +\n\t\t\t\"<select id='qunit-modulefilter' name='modulefilter'><option value='' \" +\n\t\t\t( QUnit.urlParams.module === undefined ? \"selected='selected'\" : \"\" ) +\n\t\t\t\">< All Modules ></option>\";\n\t\n\t\tfor ( i = 0; i < modulesList.length; i++ ) {\n\t\t\tmoduleFilterHtml += \"<option value='\" +\n\t\t\t\tescapeText( encodeURIComponent( modulesList[ i ] ) ) + \"' \" +\n\t\t\t\t( QUnit.urlParams.module === modulesList[ i ] ? \"selected='selected'\" : \"\" ) +\n\t\t\t\t\">\" + escapeText( modulesList[ i ] ) + \"</option>\";\n\t\t}\n\t\tmoduleFilterHtml += \"</select>\";\n\t\n\t\treturn moduleFilterHtml;\n\t}\n\t\n\tfunction toolbarModuleFilter() {\n\t\tvar toolbar = id( \"qunit-testrunner-toolbar\" ),\n\t\t\tmoduleFilter = document.createElement( \"span\" ),\n\t\t\tmoduleFilterHtml = toolbarModuleFilterHtml();\n\t\n\t\tif ( !toolbar || !moduleFilterHtml ) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tmoduleFilter.setAttribute( \"id\", \"qunit-modulefilter-container\" );\n\t\tmoduleFilter.innerHTML = moduleFilterHtml;\n\t\n\t\taddEvent( moduleFilter.lastChild, \"change\", applyUrlParams );\n\t\n\t\ttoolbar.appendChild( moduleFilter );\n\t}\n\t\n\tfunction appendToolbar() {\n\t\tvar toolbar = id( \"qunit-testrunner-toolbar\" );\n\t\n\t\tif ( toolbar ) {\n\t\t\ttoolbar.appendChild( toolbarUrlConfigContainer() );\n\t\t\ttoolbar.appendChild( toolbarLooseFilter() );\n\t\t\ttoolbarModuleFilter();\n\t\t}\n\t}\n\t\n\tfunction appendHeader() {\n\t\tvar header = id( \"qunit-header\" );\n\t\n\t\tif ( header ) {\n\t\t\theader.innerHTML = \"<a href='\" + escapeText( unfilteredUrl ) + \"'>\" + header.innerHTML +\n\t\t\t\t\"</a> \";\n\t\t}\n\t}\n\t\n\tfunction appendBanner() {\n\t\tvar banner = id( \"qunit-banner\" );\n\t\n\t\tif ( banner ) {\n\t\t\tbanner.className = \"\";\n\t\t}\n\t}\n\t\n\tfunction appendTestResults() {\n\t\tvar tests = id( \"qunit-tests\" ),\n\t\t\tresult = id( \"qunit-testresult\" );\n\t\n\t\tif ( result ) {\n\t\t\tresult.parentNode.removeChild( result );\n\t\t}\n\t\n\t\tif ( tests ) {\n\t\t\ttests.innerHTML = \"\";\n\t\t\tresult = document.createElement( \"p\" );\n\t\t\tresult.id = \"qunit-testresult\";\n\t\t\tresult.className = \"result\";\n\t\t\ttests.parentNode.insertBefore( result, tests );\n\t\t\tresult.innerHTML = \"Running...<br />&#160;\";\n\t\t}\n\t}\n\t\n\tfunction storeFixture() {\n\t\tvar fixture = id( \"qunit-fixture\" );\n\t\tif ( fixture ) {\n\t\t\tconfig.fixture = fixture.innerHTML;\n\t\t}\n\t}\n\t\n\tfunction appendFilteredTest() {\n\t\tvar testId = QUnit.config.testId;\n\t\tif ( !testId || testId.length <= 0 ) {\n\t\t\treturn \"\";\n\t\t}\n\t\treturn \"<div id='qunit-filteredTest'>Rerunning selected tests: \" +\n\t\t\tescapeText( testId.join( \", \" ) ) +\n\t\t\t\" <a id='qunit-clearFilter' href='\" +\n\t\t\tescapeText( unfilteredUrl ) +\n\t\t\t\"'>Run all tests</a></div>\";\n\t}\n\t\n\tfunction appendUserAgent() {\n\t\tvar userAgent = id( \"qunit-userAgent\" );\n\t\n\t\tif ( userAgent ) {\n\t\t\tuserAgent.innerHTML = \"\";\n\t\t\tuserAgent.appendChild(\n\t\t\t\tdocument.createTextNode(\n\t\t\t\t\t\"QUnit \" + QUnit.version + \"; \" + navigator.userAgent\n\t\t\t\t)\n\t\t\t);\n\t\t}\n\t}\n\t\n\tfunction appendInterface() {\n\t\tvar qunit = id( \"qunit\" );\n\t\n\t\tif ( qunit ) {\n\t\t\tqunit.innerHTML =\n\t\t\t\t\"<h1 id='qunit-header'>\" + escapeText( document.title ) + \"</h1>\" +\n\t\t\t\t\"<h2 id='qunit-banner'></h2>\" +\n\t\t\t\t\"<div id='qunit-testrunner-toolbar'></div>\" +\n\t\t\t\tappendFilteredTest() +\n\t\t\t\t\"<h2 id='qunit-userAgent'></h2>\" +\n\t\t\t\t\"<ol id='qunit-tests'></ol>\";\n\t\t}\n\t\n\t\tappendHeader();\n\t\tappendBanner();\n\t\tappendTestResults();\n\t\tappendUserAgent();\n\t\tappendToolbar();\n\t}\n\t\n\tfunction appendTestsList( modules ) {\n\t\tvar i, l, x, z, test, moduleObj;\n\t\n\t\tfor ( i = 0, l = modules.length; i < l; i++ ) {\n\t\t\tmoduleObj = modules[ i ];\n\t\n\t\t\tfor ( x = 0, z = moduleObj.tests.length; x < z; x++ ) {\n\t\t\t\ttest = moduleObj.tests[ x ];\n\t\n\t\t\t\tappendTest( test.name, test.testId, moduleObj.name );\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction appendTest( name, testId, moduleName ) {\n\t\tvar title, rerunTrigger, testBlock, assertList,\n\t\t\ttests = id( \"qunit-tests\" );\n\t\n\t\tif ( !tests ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\ttitle = document.createElement( \"strong\" );\n\t\ttitle.innerHTML = getNameHtml( name, moduleName );\n\t\n\t\trerunTrigger = document.createElement( \"a\" );\n\t\trerunTrigger.innerHTML = \"Rerun\";\n\t\trerunTrigger.href = setUrl( { testId: testId } );\n\t\n\t\ttestBlock = document.createElement( \"li\" );\n\t\ttestBlock.appendChild( title );\n\t\ttestBlock.appendChild( rerunTrigger );\n\t\ttestBlock.id = \"qunit-test-output-\" + testId;\n\t\n\t\tassertList = document.createElement( \"ol\" );\n\t\tassertList.className = \"qunit-assert-list\";\n\t\n\t\ttestBlock.appendChild( assertList );\n\t\n\t\ttests.appendChild( testBlock );\n\t}\n\t\n\t// HTML Reporter initialization and load\n\tQUnit.begin( function( details ) {\n\t\tvar i, moduleObj, tests;\n\t\n\t\t// Sort modules by name for the picker\n\t\tfor ( i = 0; i < details.modules.length; i++ ) {\n\t\t\tmoduleObj = details.modules[ i ];\n\t\t\tif ( moduleObj.name ) {\n\t\t\t\tmodulesList.push( moduleObj.name );\n\t\t\t}\n\t\t}\n\t\tmodulesList.sort( function( a, b ) {\n\t\t\treturn a.localeCompare( b );\n\t\t} );\n\t\n\t\t// Capture fixture HTML from the page\n\t\tstoreFixture();\n\t\n\t\t// Initialize QUnit elements\n\t\tappendInterface();\n\t\tappendTestsList( details.modules );\n\t\ttests = id( \"qunit-tests\" );\n\t\tif ( tests && config.hidepassed ) {\n\t\t\taddClass( tests, \"hidepass\" );\n\t\t}\n\t} );\n\t\n\tQUnit.done( function( details ) {\n\t\tvar i, key,\n\t\t\tbanner = id( \"qunit-banner\" ),\n\t\t\ttests = id( \"qunit-tests\" ),\n\t\t\thtml = [\n\t\t\t\t\"Tests completed in \",\n\t\t\t\tdetails.runtime,\n\t\t\t\t\" milliseconds.<br />\",\n\t\t\t\t\"<span class='passed'>\",\n\t\t\t\tdetails.passed,\n\t\t\t\t\"</span> assertions of <span class='total'>\",\n\t\t\t\tdetails.total,\n\t\t\t\t\"</span> passed, <span class='failed'>\",\n\t\t\t\tdetails.failed,\n\t\t\t\t\"</span> failed.\"\n\t\t\t].join( \"\" );\n\t\n\t\tif ( banner ) {\n\t\t\tbanner.className = details.failed ? \"qunit-fail\" : \"qunit-pass\";\n\t\t}\n\t\n\t\tif ( tests ) {\n\t\t\tid( \"qunit-testresult\" ).innerHTML = html;\n\t\t}\n\t\n\t\tif ( config.altertitle && document.title ) {\n\t\n\t\t\t// Show ✖ for good, ✔ for bad suite result in title\n\t\t\t// use escape sequences in case file gets loaded with non-utf-8-charset\n\t\t\tdocument.title = [\n\t\t\t\t( details.failed ? \"\\u2716\" : \"\\u2714\" ),\n\t\t\t\tdocument.title.replace( /^[\\u2714\\u2716] /i, \"\" )\n\t\t\t].join( \" \" );\n\t\t}\n\t\n\t\t// Clear own sessionStorage items if all tests passed\n\t\tif ( config.reorder && defined.sessionStorage && details.failed === 0 ) {\n\t\t\tfor ( i = 0; i < sessionStorage.length; i++ ) {\n\t\t\t\tkey = sessionStorage.key( i++ );\n\t\t\t\tif ( key.indexOf( \"qunit-test-\" ) === 0 ) {\n\t\t\t\t\tsessionStorage.removeItem( key );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// Scroll back to top to show results\n\t\tif ( config.scrolltop && window.scrollTo ) {\n\t\t\twindow.scrollTo( 0, 0 );\n\t\t}\n\t} );\n\t\n\tfunction getNameHtml( name, module ) {\n\t\tvar nameHtml = \"\";\n\t\n\t\tif ( module ) {\n\t\t\tnameHtml = \"<span class='module-name'>\" + escapeText( module ) + \"</span>: \";\n\t\t}\n\t\n\t\tnameHtml += \"<span class='test-name'>\" + escapeText( name ) + \"</span>\";\n\t\n\t\treturn nameHtml;\n\t}\n\t\n\tQUnit.testStart( function( details ) {\n\t\tvar running, testBlock, bad;\n\t\n\t\ttestBlock = id( \"qunit-test-output-\" + details.testId );\n\t\tif ( testBlock ) {\n\t\t\ttestBlock.className = \"running\";\n\t\t} else {\n\t\n\t\t\t// Report later registered tests\n\t\t\tappendTest( details.name, details.testId, details.module );\n\t\t}\n\t\n\t\trunning = id( \"qunit-testresult\" );\n\t\tif ( running ) {\n\t\t\tbad = QUnit.config.reorder && defined.sessionStorage &&\n\t\t\t\t+sessionStorage.getItem( \"qunit-test-\" + details.module + \"-\" + details.name );\n\t\n\t\t\trunning.innerHTML = ( bad ?\n\t\t\t\t\"Rerunning previously failed test: <br />\" :\n\t\t\t\t\"Running: <br />\" ) +\n\t\t\t\tgetNameHtml( details.name, details.module );\n\t\t}\n\t\n\t} );\n\t\n\tfunction stripHtml( string ) {\n\t\n\t\t// Strip tags, html entity and whitespaces\n\t\treturn string.replace( /<\\/?[^>]+(>|$)/g, \"\" ).replace( /\\&quot;/g, \"\" ).replace( /\\s+/g, \"\" );\n\t}\n\t\n\tQUnit.log( function( details ) {\n\t\tvar assertList, assertLi,\n\t\t\tmessage, expected, actual, diff,\n\t\t\tshowDiff = false,\n\t\t\ttestItem = id( \"qunit-test-output-\" + details.testId );\n\t\n\t\tif ( !testItem ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\tmessage = escapeText( details.message ) || ( details.result ? \"okay\" : \"failed\" );\n\t\tmessage = \"<span class='test-message'>\" + message + \"</span>\";\n\t\tmessage += \"<span class='runtime'>@ \" + details.runtime + \" ms</span>\";\n\t\n\t\t// The pushFailure doesn't provide details.expected\n\t\t// when it calls, it's implicit to also not show expected and diff stuff\n\t\t// Also, we need to check details.expected existence, as it can exist and be undefined\n\t\tif ( !details.result && hasOwn.call( details, \"expected\" ) ) {\n\t\t\tif ( details.negative ) {\n\t\t\t\texpected = \"NOT \" + QUnit.dump.parse( details.expected );\n\t\t\t} else {\n\t\t\t\texpected = QUnit.dump.parse( details.expected );\n\t\t\t}\n\t\n\t\t\tactual = QUnit.dump.parse( details.actual );\n\t\t\tmessage += \"<table><tr class='test-expected'><th>Expected: </th><td><pre>\" +\n\t\t\t\tescapeText( expected ) +\n\t\t\t\t\"</pre></td></tr>\";\n\t\n\t\t\tif ( actual !== expected ) {\n\t\n\t\t\t\tmessage += \"<tr class='test-actual'><th>Result: </th><td><pre>\" +\n\t\t\t\t\tescapeText( actual ) + \"</pre></td></tr>\";\n\t\n\t\t\t\t// Don't show diff if actual or expected are booleans\n\t\t\t\tif ( !( /^(true|false)$/.test( actual ) ) &&\n\t\t\t\t\t\t!( /^(true|false)$/.test( expected ) ) ) {\n\t\t\t\t\tdiff = QUnit.diff( expected, actual );\n\t\t\t\t\tshowDiff = stripHtml( diff ).length !==\n\t\t\t\t\t\tstripHtml( expected ).length +\n\t\t\t\t\t\tstripHtml( actual ).length;\n\t\t\t\t}\n\t\n\t\t\t\t// Don't show diff if expected and actual are totally different\n\t\t\t\tif ( showDiff ) {\n\t\t\t\t\tmessage += \"<tr class='test-diff'><th>Diff: </th><td><pre>\" +\n\t\t\t\t\t\tdiff + \"</pre></td></tr>\";\n\t\t\t\t}\n\t\t\t} else if ( expected.indexOf( \"[object Array]\" ) !== -1 ||\n\t\t\t\t\texpected.indexOf( \"[object Object]\" ) !== -1 ) {\n\t\t\t\tmessage += \"<tr class='test-message'><th>Message: </th><td>\" +\n\t\t\t\t\t\"Diff suppressed as the depth of object is more than current max depth (\" +\n\t\t\t\t\tQUnit.config.maxDepth + \").<p>Hint: Use <code>QUnit.dump.maxDepth</code> to \" +\n\t\t\t\t\t\" run with a higher max depth or <a href='\" +\n\t\t\t\t\tescapeText( setUrl( { maxDepth: -1 } ) ) + \"'>\" +\n\t\t\t\t\t\"Rerun</a> without max depth.</p></td></tr>\";\n\t\t\t} else {\n\t\t\t\tmessage += \"<tr class='test-message'><th>Message: </th><td>\" +\n\t\t\t\t\t\"Diff suppressed as the expected and actual results have an equivalent\" +\n\t\t\t\t\t\" serialization</td></tr>\";\n\t\t\t}\n\t\n\t\t\tif ( details.source ) {\n\t\t\t\tmessage += \"<tr class='test-source'><th>Source: </th><td><pre>\" +\n\t\t\t\t\tescapeText( details.source ) + \"</pre></td></tr>\";\n\t\t\t}\n\t\n\t\t\tmessage += \"</table>\";\n\t\n\t\t// This occurs when pushFailure is set and we have an extracted stack trace\n\t\t} else if ( !details.result && details.source ) {\n\t\t\tmessage += \"<table>\" +\n\t\t\t\t\"<tr class='test-source'><th>Source: </th><td><pre>\" +\n\t\t\t\tescapeText( details.source ) + \"</pre></td></tr>\" +\n\t\t\t\t\"</table>\";\n\t\t}\n\t\n\t\tassertList = testItem.getElementsByTagName( \"ol\" )[ 0 ];\n\t\n\t\tassertLi = document.createElement( \"li\" );\n\t\tassertLi.className = details.result ? \"pass\" : \"fail\";\n\t\tassertLi.innerHTML = message;\n\t\tassertList.appendChild( assertLi );\n\t} );\n\t\n\tQUnit.testDone( function( details ) {\n\t\tvar testTitle, time, testItem, assertList,\n\t\t\tgood, bad, testCounts, skipped, sourceName,\n\t\t\ttests = id( \"qunit-tests\" );\n\t\n\t\tif ( !tests ) {\n\t\t\treturn;\n\t\t}\n\t\n\t\ttestItem = id( \"qunit-test-output-\" + details.testId );\n\t\n\t\tassertList = testItem.getElementsByTagName( \"ol\" )[ 0 ];\n\t\n\t\tgood = details.passed;\n\t\tbad = details.failed;\n\t\n\t\t// Store result when possible\n\t\tif ( config.reorder && defined.sessionStorage ) {\n\t\t\tif ( bad ) {\n\t\t\t\tsessionStorage.setItem( \"qunit-test-\" + details.module + \"-\" + details.name, bad );\n\t\t\t} else {\n\t\t\t\tsessionStorage.removeItem( \"qunit-test-\" + details.module + \"-\" + details.name );\n\t\t\t}\n\t\t}\n\t\n\t\tif ( bad === 0 ) {\n\t\n\t\t\t// Collapse the passing tests\n\t\t\taddClass( assertList, \"qunit-collapsed\" );\n\t\t} else if ( bad && config.collapse && !collapseNext ) {\n\t\n\t\t\t// Skip collapsing the first failing test\n\t\t\tcollapseNext = true;\n\t\t} else {\n\t\n\t\t\t// Collapse remaining tests\n\t\t\taddClass( assertList, \"qunit-collapsed\" );\n\t\t}\n\t\n\t\t// The testItem.firstChild is the test name\n\t\ttestTitle = testItem.firstChild;\n\t\n\t\ttestCounts = bad ?\n\t\t\t\"<b class='failed'>\" + bad + \"</b>, \" + \"<b class='passed'>\" + good + \"</b>, \" :\n\t\t\t\"\";\n\t\n\t\ttestTitle.innerHTML += \" <b class='counts'>(\" + testCounts +\n\t\t\tdetails.assertions.length + \")</b>\";\n\t\n\t\tif ( details.skipped ) {\n\t\t\ttestItem.className = \"skipped\";\n\t\t\tskipped = document.createElement( \"em\" );\n\t\t\tskipped.className = \"qunit-skipped-label\";\n\t\t\tskipped.innerHTML = \"skipped\";\n\t\t\ttestItem.insertBefore( skipped, testTitle );\n\t\t} else {\n\t\t\taddEvent( testTitle, \"click\", function() {\n\t\t\t\ttoggleClass( assertList, \"qunit-collapsed\" );\n\t\t\t} );\n\t\n\t\t\ttestItem.className = bad ? \"fail\" : \"pass\";\n\t\n\t\t\ttime = document.createElement( \"span\" );\n\t\t\ttime.className = \"runtime\";\n\t\t\ttime.innerHTML = details.runtime + \" ms\";\n\t\t\ttestItem.insertBefore( time, assertList );\n\t\t}\n\t\n\t\t// Show the source of the test when showing assertions\n\t\tif ( details.source ) {\n\t\t\tsourceName = document.createElement( \"p\" );\n\t\t\tsourceName.innerHTML = \"<strong>Source: </strong>\" + details.source;\n\t\t\taddClass( sourceName, \"qunit-source\" );\n\t\t\tif ( bad === 0 ) {\n\t\t\t\taddClass( sourceName, \"qunit-collapsed\" );\n\t\t\t}\n\t\t\taddEvent( testTitle, \"click\", function() {\n\t\t\t\ttoggleClass( sourceName, \"qunit-collapsed\" );\n\t\t\t} );\n\t\t\ttestItem.appendChild( sourceName );\n\t\t}\n\t} );\n\t\n\t// Avoid readyState issue with phantomjs\n\t// Ref: #818\n\tvar notPhantom = ( function( p ) {\n\t\treturn !( p && p.version && p.version.major > 0 );\n\t} )( window.phantom );\n\t\n\tif ( notPhantom && document.readyState === \"complete\" ) {\n\t\tQUnit.load();\n\t} else {\n\t\taddEvent( window, \"load\", QUnit.load );\n\t}\n\t\n\t/*\n\t * This file is a modified version of google-diff-match-patch's JavaScript implementation\n\t * (https://code.google.com/p/google-diff-match-patch/source/browse/trunk/javascript/diff_match_patch_uncompressed.js),\n\t * modifications are licensed as more fully set forth in LICENSE.txt.\n\t *\n\t * The original source of google-diff-match-patch is attributable and licensed as follows:\n\t *\n\t * Copyright 2006 Google Inc.\n\t * https://code.google.com/p/google-diff-match-patch/\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t * https://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t *\n\t * More Info:\n\t *  https://code.google.com/p/google-diff-match-patch/\n\t *\n\t * Usage: QUnit.diff(expected, actual)\n\t *\n\t */\n\tQUnit.diff = ( function() {\n\t\tfunction DiffMatchPatch() {\n\t\t}\n\t\n\t\t//  DIFF FUNCTIONS\n\t\n\t\t/**\n\t\t * The data structure representing a diff is an array of tuples:\n\t\t * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n\t\t * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n\t\t */\n\t\tvar DIFF_DELETE = -1,\n\t\t\tDIFF_INSERT = 1,\n\t\t\tDIFF_EQUAL = 0;\n\t\n\t\t/**\n\t\t * Find the differences between two texts.  Simplifies the problem by stripping\n\t\t * any common prefix or suffix off the texts before diffing.\n\t\t * @param {string} text1 Old string to be diffed.\n\t\t * @param {string} text2 New string to be diffed.\n\t\t * @param {boolean=} optChecklines Optional speedup flag. If present and false,\n\t\t *     then don't run a line-level diff first to identify the changed areas.\n\t\t *     Defaults to true, which does a faster, slightly less optimal diff.\n\t\t * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n\t\t */\n\t\tDiffMatchPatch.prototype.DiffMain = function( text1, text2, optChecklines ) {\n\t\t\tvar deadline, checklines, commonlength,\n\t\t\t\tcommonprefix, commonsuffix, diffs;\n\t\n\t\t\t// The diff must be complete in up to 1 second.\n\t\t\tdeadline = ( new Date() ).getTime() + 1000;\n\t\n\t\t\t// Check for null inputs.\n\t\t\tif ( text1 === null || text2 === null ) {\n\t\t\t\tthrow new Error( \"Null input. (DiffMain)\" );\n\t\t\t}\n\t\n\t\t\t// Check for equality (speedup).\n\t\t\tif ( text1 === text2 ) {\n\t\t\t\tif ( text1 ) {\n\t\t\t\t\treturn [\n\t\t\t\t\t\t[ DIFF_EQUAL, text1 ]\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\treturn [];\n\t\t\t}\n\t\n\t\t\tif ( typeof optChecklines === \"undefined\" ) {\n\t\t\t\toptChecklines = true;\n\t\t\t}\n\t\n\t\t\tchecklines = optChecklines;\n\t\n\t\t\t// Trim off common prefix (speedup).\n\t\t\tcommonlength = this.diffCommonPrefix( text1, text2 );\n\t\t\tcommonprefix = text1.substring( 0, commonlength );\n\t\t\ttext1 = text1.substring( commonlength );\n\t\t\ttext2 = text2.substring( commonlength );\n\t\n\t\t\t// Trim off common suffix (speedup).\n\t\t\tcommonlength = this.diffCommonSuffix( text1, text2 );\n\t\t\tcommonsuffix = text1.substring( text1.length - commonlength );\n\t\t\ttext1 = text1.substring( 0, text1.length - commonlength );\n\t\t\ttext2 = text2.substring( 0, text2.length - commonlength );\n\t\n\t\t\t// Compute the diff on the middle block.\n\t\t\tdiffs = this.diffCompute( text1, text2, checklines, deadline );\n\t\n\t\t\t// Restore the prefix and suffix.\n\t\t\tif ( commonprefix ) {\n\t\t\t\tdiffs.unshift( [ DIFF_EQUAL, commonprefix ] );\n\t\t\t}\n\t\t\tif ( commonsuffix ) {\n\t\t\t\tdiffs.push( [ DIFF_EQUAL, commonsuffix ] );\n\t\t\t}\n\t\t\tthis.diffCleanupMerge( diffs );\n\t\t\treturn diffs;\n\t\t};\n\t\n\t\t/**\n\t\t * Reduce the number of edits by eliminating operationally trivial equalities.\n\t\t * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n\t\t */\n\t\tDiffMatchPatch.prototype.diffCleanupEfficiency = function( diffs ) {\n\t\t\tvar changes, equalities, equalitiesLength, lastequality,\n\t\t\t\tpointer, preIns, preDel, postIns, postDel;\n\t\t\tchanges = false;\n\t\t\tequalities = []; // Stack of indices where equalities are found.\n\t\t\tequalitiesLength = 0; // Keeping our own length var is faster in JS.\n\t\t\t/** @type {?string} */\n\t\t\tlastequality = null;\n\t\n\t\t\t// Always equal to diffs[equalities[equalitiesLength - 1]][1]\n\t\t\tpointer = 0; // Index of current position.\n\t\n\t\t\t// Is there an insertion operation before the last equality.\n\t\t\tpreIns = false;\n\t\n\t\t\t// Is there a deletion operation before the last equality.\n\t\t\tpreDel = false;\n\t\n\t\t\t// Is there an insertion operation after the last equality.\n\t\t\tpostIns = false;\n\t\n\t\t\t// Is there a deletion operation after the last equality.\n\t\t\tpostDel = false;\n\t\t\twhile ( pointer < diffs.length ) {\n\t\n\t\t\t\t// Equality found.\n\t\t\t\tif ( diffs[ pointer ][ 0 ] === DIFF_EQUAL ) {\n\t\t\t\t\tif ( diffs[ pointer ][ 1 ].length < 4 && ( postIns || postDel ) ) {\n\t\n\t\t\t\t\t\t// Candidate found.\n\t\t\t\t\t\tequalities[ equalitiesLength++ ] = pointer;\n\t\t\t\t\t\tpreIns = postIns;\n\t\t\t\t\t\tpreDel = postDel;\n\t\t\t\t\t\tlastequality = diffs[ pointer ][ 1 ];\n\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t// Not a candidate, and can never become one.\n\t\t\t\t\t\tequalitiesLength = 0;\n\t\t\t\t\t\tlastequality = null;\n\t\t\t\t\t}\n\t\t\t\t\tpostIns = postDel = false;\n\t\n\t\t\t\t// An insertion or deletion.\n\t\t\t\t} else {\n\t\n\t\t\t\t\tif ( diffs[ pointer ][ 0 ] === DIFF_DELETE ) {\n\t\t\t\t\t\tpostDel = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpostIns = true;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t/*\n\t\t\t\t\t * Five types to be split:\n\t\t\t\t\t * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n\t\t\t\t\t * <ins>A</ins>X<ins>C</ins><del>D</del>\n\t\t\t\t\t * <ins>A</ins><del>B</del>X<ins>C</ins>\n\t\t\t\t\t * <ins>A</del>X<ins>C</ins><del>D</del>\n\t\t\t\t\t * <ins>A</ins><del>B</del>X<del>C</del>\n\t\t\t\t\t */\n\t\t\t\t\tif ( lastequality && ( ( preIns && preDel && postIns && postDel ) ||\n\t\t\t\t\t\t\t( ( lastequality.length < 2 ) &&\n\t\t\t\t\t\t\t( preIns + preDel + postIns + postDel ) === 3 ) ) ) {\n\t\n\t\t\t\t\t\t// Duplicate record.\n\t\t\t\t\t\tdiffs.splice(\n\t\t\t\t\t\t\tequalities[ equalitiesLength - 1 ],\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t[ DIFF_DELETE, lastequality ]\n\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t// Change second copy to insert.\n\t\t\t\t\t\tdiffs[ equalities[ equalitiesLength - 1 ] + 1 ][ 0 ] = DIFF_INSERT;\n\t\t\t\t\t\tequalitiesLength--; // Throw away the equality we just deleted;\n\t\t\t\t\t\tlastequality = null;\n\t\t\t\t\t\tif ( preIns && preDel ) {\n\t\n\t\t\t\t\t\t\t// No changes made which could affect previous entry, keep going.\n\t\t\t\t\t\t\tpostIns = postDel = true;\n\t\t\t\t\t\t\tequalitiesLength = 0;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tequalitiesLength--; // Throw away the previous equality.\n\t\t\t\t\t\t\tpointer = equalitiesLength > 0 ? equalities[ equalitiesLength - 1 ] : -1;\n\t\t\t\t\t\t\tpostIns = postDel = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tchanges = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpointer++;\n\t\t\t}\n\t\n\t\t\tif ( changes ) {\n\t\t\t\tthis.diffCleanupMerge( diffs );\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Convert a diff array into a pretty HTML report.\n\t\t * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n\t\t * @param {integer} string to be beautified.\n\t\t * @return {string} HTML representation.\n\t\t */\n\t\tDiffMatchPatch.prototype.diffPrettyHtml = function( diffs ) {\n\t\t\tvar op, data, x,\n\t\t\t\thtml = [];\n\t\t\tfor ( x = 0; x < diffs.length; x++ ) {\n\t\t\t\top = diffs[ x ][ 0 ]; // Operation (insert, delete, equal)\n\t\t\t\tdata = diffs[ x ][ 1 ]; // Text of change.\n\t\t\t\tswitch ( op ) {\n\t\t\t\tcase DIFF_INSERT:\n\t\t\t\t\thtml[ x ] = \"<ins>\" + escapeText( data ) + \"</ins>\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase DIFF_DELETE:\n\t\t\t\t\thtml[ x ] = \"<del>\" + escapeText( data ) + \"</del>\";\n\t\t\t\t\tbreak;\n\t\t\t\tcase DIFF_EQUAL:\n\t\t\t\t\thtml[ x ] = \"<span>\" + escapeText( data ) + \"</span>\";\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn html.join( \"\" );\n\t\t};\n\t\n\t\t/**\n\t\t * Determine the common prefix of two strings.\n\t\t * @param {string} text1 First string.\n\t\t * @param {string} text2 Second string.\n\t\t * @return {number} The number of characters common to the start of each\n\t\t *     string.\n\t\t */\n\t\tDiffMatchPatch.prototype.diffCommonPrefix = function( text1, text2 ) {\n\t\t\tvar pointermid, pointermax, pointermin, pointerstart;\n\t\n\t\t\t// Quick check for common null cases.\n\t\t\tif ( !text1 || !text2 || text1.charAt( 0 ) !== text2.charAt( 0 ) ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\n\t\t\t// Binary search.\n\t\t\t// Performance analysis: https://neil.fraser.name/news/2007/10/09/\n\t\t\tpointermin = 0;\n\t\t\tpointermax = Math.min( text1.length, text2.length );\n\t\t\tpointermid = pointermax;\n\t\t\tpointerstart = 0;\n\t\t\twhile ( pointermin < pointermid ) {\n\t\t\t\tif ( text1.substring( pointerstart, pointermid ) ===\n\t\t\t\t\t\ttext2.substring( pointerstart, pointermid ) ) {\n\t\t\t\t\tpointermin = pointermid;\n\t\t\t\t\tpointerstart = pointermin;\n\t\t\t\t} else {\n\t\t\t\t\tpointermax = pointermid;\n\t\t\t\t}\n\t\t\t\tpointermid = Math.floor( ( pointermax - pointermin ) / 2 + pointermin );\n\t\t\t}\n\t\t\treturn pointermid;\n\t\t};\n\t\n\t\t/**\n\t\t * Determine the common suffix of two strings.\n\t\t * @param {string} text1 First string.\n\t\t * @param {string} text2 Second string.\n\t\t * @return {number} The number of characters common to the end of each string.\n\t\t */\n\t\tDiffMatchPatch.prototype.diffCommonSuffix = function( text1, text2 ) {\n\t\t\tvar pointermid, pointermax, pointermin, pointerend;\n\t\n\t\t\t// Quick check for common null cases.\n\t\t\tif ( !text1 ||\n\t\t\t\t\t!text2 ||\n\t\t\t\t\ttext1.charAt( text1.length - 1 ) !== text2.charAt( text2.length - 1 ) ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\n\t\t\t// Binary search.\n\t\t\t// Performance analysis: https://neil.fraser.name/news/2007/10/09/\n\t\t\tpointermin = 0;\n\t\t\tpointermax = Math.min( text1.length, text2.length );\n\t\t\tpointermid = pointermax;\n\t\t\tpointerend = 0;\n\t\t\twhile ( pointermin < pointermid ) {\n\t\t\t\tif ( text1.substring( text1.length - pointermid, text1.length - pointerend ) ===\n\t\t\t\t\t\ttext2.substring( text2.length - pointermid, text2.length - pointerend ) ) {\n\t\t\t\t\tpointermin = pointermid;\n\t\t\t\t\tpointerend = pointermin;\n\t\t\t\t} else {\n\t\t\t\t\tpointermax = pointermid;\n\t\t\t\t}\n\t\t\t\tpointermid = Math.floor( ( pointermax - pointermin ) / 2 + pointermin );\n\t\t\t}\n\t\t\treturn pointermid;\n\t\t};\n\t\n\t\t/**\n\t\t * Find the differences between two texts.  Assumes that the texts do not\n\t\t * have any common prefix or suffix.\n\t\t * @param {string} text1 Old string to be diffed.\n\t\t * @param {string} text2 New string to be diffed.\n\t\t * @param {boolean} checklines Speedup flag.  If false, then don't run a\n\t\t *     line-level diff first to identify the changed areas.\n\t\t *     If true, then run a faster, slightly less optimal diff.\n\t\t * @param {number} deadline Time when the diff should be complete by.\n\t\t * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n\t\t * @private\n\t\t */\n\t\tDiffMatchPatch.prototype.diffCompute = function( text1, text2, checklines, deadline ) {\n\t\t\tvar diffs, longtext, shorttext, i, hm,\n\t\t\t\ttext1A, text2A, text1B, text2B,\n\t\t\t\tmidCommon, diffsA, diffsB;\n\t\n\t\t\tif ( !text1 ) {\n\t\n\t\t\t\t// Just add some text (speedup).\n\t\t\t\treturn [\n\t\t\t\t\t[ DIFF_INSERT, text2 ]\n\t\t\t\t];\n\t\t\t}\n\t\n\t\t\tif ( !text2 ) {\n\t\n\t\t\t\t// Just delete some text (speedup).\n\t\t\t\treturn [\n\t\t\t\t\t[ DIFF_DELETE, text1 ]\n\t\t\t\t];\n\t\t\t}\n\t\n\t\t\tlongtext = text1.length > text2.length ? text1 : text2;\n\t\t\tshorttext = text1.length > text2.length ? text2 : text1;\n\t\t\ti = longtext.indexOf( shorttext );\n\t\t\tif ( i !== -1 ) {\n\t\n\t\t\t\t// Shorter text is inside the longer text (speedup).\n\t\t\t\tdiffs = [\n\t\t\t\t\t[ DIFF_INSERT, longtext.substring( 0, i ) ],\n\t\t\t\t\t[ DIFF_EQUAL, shorttext ],\n\t\t\t\t\t[ DIFF_INSERT, longtext.substring( i + shorttext.length ) ]\n\t\t\t\t];\n\t\n\t\t\t\t// Swap insertions for deletions if diff is reversed.\n\t\t\t\tif ( text1.length > text2.length ) {\n\t\t\t\t\tdiffs[ 0 ][ 0 ] = diffs[ 2 ][ 0 ] = DIFF_DELETE;\n\t\t\t\t}\n\t\t\t\treturn diffs;\n\t\t\t}\n\t\n\t\t\tif ( shorttext.length === 1 ) {\n\t\n\t\t\t\t// Single character string.\n\t\t\t\t// After the previous speedup, the character can't be an equality.\n\t\t\t\treturn [\n\t\t\t\t\t[ DIFF_DELETE, text1 ],\n\t\t\t\t\t[ DIFF_INSERT, text2 ]\n\t\t\t\t];\n\t\t\t}\n\t\n\t\t\t// Check to see if the problem can be split in two.\n\t\t\thm = this.diffHalfMatch( text1, text2 );\n\t\t\tif ( hm ) {\n\t\n\t\t\t\t// A half-match was found, sort out the return data.\n\t\t\t\ttext1A = hm[ 0 ];\n\t\t\t\ttext1B = hm[ 1 ];\n\t\t\t\ttext2A = hm[ 2 ];\n\t\t\t\ttext2B = hm[ 3 ];\n\t\t\t\tmidCommon = hm[ 4 ];\n\t\n\t\t\t\t// Send both pairs off for separate processing.\n\t\t\t\tdiffsA = this.DiffMain( text1A, text2A, checklines, deadline );\n\t\t\t\tdiffsB = this.DiffMain( text1B, text2B, checklines, deadline );\n\t\n\t\t\t\t// Merge the results.\n\t\t\t\treturn diffsA.concat( [\n\t\t\t\t\t[ DIFF_EQUAL, midCommon ]\n\t\t\t\t], diffsB );\n\t\t\t}\n\t\n\t\t\tif ( checklines && text1.length > 100 && text2.length > 100 ) {\n\t\t\t\treturn this.diffLineMode( text1, text2, deadline );\n\t\t\t}\n\t\n\t\t\treturn this.diffBisect( text1, text2, deadline );\n\t\t};\n\t\n\t\t/**\n\t\t * Do the two texts share a substring which is at least half the length of the\n\t\t * longer text?\n\t\t * This speedup can produce non-minimal diffs.\n\t\t * @param {string} text1 First string.\n\t\t * @param {string} text2 Second string.\n\t\t * @return {Array.<string>} Five element Array, containing the prefix of\n\t\t *     text1, the suffix of text1, the prefix of text2, the suffix of\n\t\t *     text2 and the common middle.  Or null if there was no match.\n\t\t * @private\n\t\t */\n\t\tDiffMatchPatch.prototype.diffHalfMatch = function( text1, text2 ) {\n\t\t\tvar longtext, shorttext, dmp,\n\t\t\t\ttext1A, text2B, text2A, text1B, midCommon,\n\t\t\t\thm1, hm2, hm;\n\t\n\t\t\tlongtext = text1.length > text2.length ? text1 : text2;\n\t\t\tshorttext = text1.length > text2.length ? text2 : text1;\n\t\t\tif ( longtext.length < 4 || shorttext.length * 2 < longtext.length ) {\n\t\t\t\treturn null; // Pointless.\n\t\t\t}\n\t\t\tdmp = this; // 'this' becomes 'window' in a closure.\n\t\n\t\t\t/**\n\t\t\t * Does a substring of shorttext exist within longtext such that the substring\n\t\t\t * is at least half the length of longtext?\n\t\t\t * Closure, but does not reference any external variables.\n\t\t\t * @param {string} longtext Longer string.\n\t\t\t * @param {string} shorttext Shorter string.\n\t\t\t * @param {number} i Start index of quarter length substring within longtext.\n\t\t\t * @return {Array.<string>} Five element Array, containing the prefix of\n\t\t\t *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n\t\t\t *     of shorttext and the common middle.  Or null if there was no match.\n\t\t\t * @private\n\t\t\t */\n\t\t\tfunction diffHalfMatchI( longtext, shorttext, i ) {\n\t\t\t\tvar seed, j, bestCommon, prefixLength, suffixLength,\n\t\t\t\t\tbestLongtextA, bestLongtextB, bestShorttextA, bestShorttextB;\n\t\n\t\t\t\t// Start with a 1/4 length substring at position i as a seed.\n\t\t\t\tseed = longtext.substring( i, i + Math.floor( longtext.length / 4 ) );\n\t\t\t\tj = -1;\n\t\t\t\tbestCommon = \"\";\n\t\t\t\twhile ( ( j = shorttext.indexOf( seed, j + 1 ) ) !== -1 ) {\n\t\t\t\t\tprefixLength = dmp.diffCommonPrefix( longtext.substring( i ),\n\t\t\t\t\t\tshorttext.substring( j ) );\n\t\t\t\t\tsuffixLength = dmp.diffCommonSuffix( longtext.substring( 0, i ),\n\t\t\t\t\t\tshorttext.substring( 0, j ) );\n\t\t\t\t\tif ( bestCommon.length < suffixLength + prefixLength ) {\n\t\t\t\t\t\tbestCommon = shorttext.substring( j - suffixLength, j ) +\n\t\t\t\t\t\t\tshorttext.substring( j, j + prefixLength );\n\t\t\t\t\t\tbestLongtextA = longtext.substring( 0, i - suffixLength );\n\t\t\t\t\t\tbestLongtextB = longtext.substring( i + prefixLength );\n\t\t\t\t\t\tbestShorttextA = shorttext.substring( 0, j - suffixLength );\n\t\t\t\t\t\tbestShorttextB = shorttext.substring( j + prefixLength );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( bestCommon.length * 2 >= longtext.length ) {\n\t\t\t\t\treturn [ bestLongtextA, bestLongtextB,\n\t\t\t\t\t\tbestShorttextA, bestShorttextB, bestCommon\n\t\t\t\t\t];\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// First check if the second quarter is the seed for a half-match.\n\t\t\thm1 = diffHalfMatchI( longtext, shorttext,\n\t\t\t\tMath.ceil( longtext.length / 4 ) );\n\t\n\t\t\t// Check again based on the third quarter.\n\t\t\thm2 = diffHalfMatchI( longtext, shorttext,\n\t\t\t\tMath.ceil( longtext.length / 2 ) );\n\t\t\tif ( !hm1 && !hm2 ) {\n\t\t\t\treturn null;\n\t\t\t} else if ( !hm2 ) {\n\t\t\t\thm = hm1;\n\t\t\t} else if ( !hm1 ) {\n\t\t\t\thm = hm2;\n\t\t\t} else {\n\t\n\t\t\t\t// Both matched.  Select the longest.\n\t\t\t\thm = hm1[ 4 ].length > hm2[ 4 ].length ? hm1 : hm2;\n\t\t\t}\n\t\n\t\t\t// A half-match was found, sort out the return data.\n\t\t\ttext1A, text1B, text2A, text2B;\n\t\t\tif ( text1.length > text2.length ) {\n\t\t\t\ttext1A = hm[ 0 ];\n\t\t\t\ttext1B = hm[ 1 ];\n\t\t\t\ttext2A = hm[ 2 ];\n\t\t\t\ttext2B = hm[ 3 ];\n\t\t\t} else {\n\t\t\t\ttext2A = hm[ 0 ];\n\t\t\t\ttext2B = hm[ 1 ];\n\t\t\t\ttext1A = hm[ 2 ];\n\t\t\t\ttext1B = hm[ 3 ];\n\t\t\t}\n\t\t\tmidCommon = hm[ 4 ];\n\t\t\treturn [ text1A, text1B, text2A, text2B, midCommon ];\n\t\t};\n\t\n\t\t/**\n\t\t * Do a quick line-level diff on both strings, then rediff the parts for\n\t\t * greater accuracy.\n\t\t * This speedup can produce non-minimal diffs.\n\t\t * @param {string} text1 Old string to be diffed.\n\t\t * @param {string} text2 New string to be diffed.\n\t\t * @param {number} deadline Time when the diff should be complete by.\n\t\t * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n\t\t * @private\n\t\t */\n\t\tDiffMatchPatch.prototype.diffLineMode = function( text1, text2, deadline ) {\n\t\t\tvar a, diffs, linearray, pointer, countInsert,\n\t\t\t\tcountDelete, textInsert, textDelete, j;\n\t\n\t\t\t// Scan the text on a line-by-line basis first.\n\t\t\ta = this.diffLinesToChars( text1, text2 );\n\t\t\ttext1 = a.chars1;\n\t\t\ttext2 = a.chars2;\n\t\t\tlinearray = a.lineArray;\n\t\n\t\t\tdiffs = this.DiffMain( text1, text2, false, deadline );\n\t\n\t\t\t// Convert the diff back to original text.\n\t\t\tthis.diffCharsToLines( diffs, linearray );\n\t\n\t\t\t// Eliminate freak matches (e.g. blank lines)\n\t\t\tthis.diffCleanupSemantic( diffs );\n\t\n\t\t\t// Rediff any replacement blocks, this time character-by-character.\n\t\t\t// Add a dummy entry at the end.\n\t\t\tdiffs.push( [ DIFF_EQUAL, \"\" ] );\n\t\t\tpointer = 0;\n\t\t\tcountDelete = 0;\n\t\t\tcountInsert = 0;\n\t\t\ttextDelete = \"\";\n\t\t\ttextInsert = \"\";\n\t\t\twhile ( pointer < diffs.length ) {\n\t\t\t\tswitch ( diffs[ pointer ][ 0 ] ) {\n\t\t\t\tcase DIFF_INSERT:\n\t\t\t\t\tcountInsert++;\n\t\t\t\t\ttextInsert += diffs[ pointer ][ 1 ];\n\t\t\t\t\tbreak;\n\t\t\t\tcase DIFF_DELETE:\n\t\t\t\t\tcountDelete++;\n\t\t\t\t\ttextDelete += diffs[ pointer ][ 1 ];\n\t\t\t\t\tbreak;\n\t\t\t\tcase DIFF_EQUAL:\n\t\n\t\t\t\t\t// Upon reaching an equality, check for prior redundancies.\n\t\t\t\t\tif ( countDelete >= 1 && countInsert >= 1 ) {\n\t\n\t\t\t\t\t\t// Delete the offending records and add the merged ones.\n\t\t\t\t\t\tdiffs.splice( pointer - countDelete - countInsert,\n\t\t\t\t\t\t\tcountDelete + countInsert );\n\t\t\t\t\t\tpointer = pointer - countDelete - countInsert;\n\t\t\t\t\t\ta = this.DiffMain( textDelete, textInsert, false, deadline );\n\t\t\t\t\t\tfor ( j = a.length - 1; j >= 0; j-- ) {\n\t\t\t\t\t\t\tdiffs.splice( pointer, 0, a[ j ] );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpointer = pointer + a.length;\n\t\t\t\t\t}\n\t\t\t\t\tcountInsert = 0;\n\t\t\t\t\tcountDelete = 0;\n\t\t\t\t\ttextDelete = \"\";\n\t\t\t\t\ttextInsert = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tpointer++;\n\t\t\t}\n\t\t\tdiffs.pop(); // Remove the dummy entry at the end.\n\t\n\t\t\treturn diffs;\n\t\t};\n\t\n\t\t/**\n\t\t * Find the 'middle snake' of a diff, split the problem in two\n\t\t * and return the recursively constructed diff.\n\t\t * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n\t\t * @param {string} text1 Old string to be diffed.\n\t\t * @param {string} text2 New string to be diffed.\n\t\t * @param {number} deadline Time at which to bail if not yet complete.\n\t\t * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n\t\t * @private\n\t\t */\n\t\tDiffMatchPatch.prototype.diffBisect = function( text1, text2, deadline ) {\n\t\t\tvar text1Length, text2Length, maxD, vOffset, vLength,\n\t\t\t\tv1, v2, x, delta, front, k1start, k1end, k2start,\n\t\t\t\tk2end, k2Offset, k1Offset, x1, x2, y1, y2, d, k1, k2;\n\t\n\t\t\t// Cache the text lengths to prevent multiple calls.\n\t\t\ttext1Length = text1.length;\n\t\t\ttext2Length = text2.length;\n\t\t\tmaxD = Math.ceil( ( text1Length + text2Length ) / 2 );\n\t\t\tvOffset = maxD;\n\t\t\tvLength = 2 * maxD;\n\t\t\tv1 = new Array( vLength );\n\t\t\tv2 = new Array( vLength );\n\t\n\t\t\t// Setting all elements to -1 is faster in Chrome & Firefox than mixing\n\t\t\t// integers and undefined.\n\t\t\tfor ( x = 0; x < vLength; x++ ) {\n\t\t\t\tv1[ x ] = -1;\n\t\t\t\tv2[ x ] = -1;\n\t\t\t}\n\t\t\tv1[ vOffset + 1 ] = 0;\n\t\t\tv2[ vOffset + 1 ] = 0;\n\t\t\tdelta = text1Length - text2Length;\n\t\n\t\t\t// If the total number of characters is odd, then the front path will collide\n\t\t\t// with the reverse path.\n\t\t\tfront = ( delta % 2 !== 0 );\n\t\n\t\t\t// Offsets for start and end of k loop.\n\t\t\t// Prevents mapping of space beyond the grid.\n\t\t\tk1start = 0;\n\t\t\tk1end = 0;\n\t\t\tk2start = 0;\n\t\t\tk2end = 0;\n\t\t\tfor ( d = 0; d < maxD; d++ ) {\n\t\n\t\t\t\t// Bail out if deadline is reached.\n\t\t\t\tif ( ( new Date() ).getTime() > deadline ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\n\t\t\t\t// Walk the front path one step.\n\t\t\t\tfor ( k1 = -d + k1start; k1 <= d - k1end; k1 += 2 ) {\n\t\t\t\t\tk1Offset = vOffset + k1;\n\t\t\t\t\tif ( k1 === -d || ( k1 !== d && v1[ k1Offset - 1 ] < v1[ k1Offset + 1 ] ) ) {\n\t\t\t\t\t\tx1 = v1[ k1Offset + 1 ];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx1 = v1[ k1Offset - 1 ] + 1;\n\t\t\t\t\t}\n\t\t\t\t\ty1 = x1 - k1;\n\t\t\t\t\twhile ( x1 < text1Length && y1 < text2Length &&\n\t\t\t\t\t\ttext1.charAt( x1 ) === text2.charAt( y1 ) ) {\n\t\t\t\t\t\tx1++;\n\t\t\t\t\t\ty1++;\n\t\t\t\t\t}\n\t\t\t\t\tv1[ k1Offset ] = x1;\n\t\t\t\t\tif ( x1 > text1Length ) {\n\t\n\t\t\t\t\t\t// Ran off the right of the graph.\n\t\t\t\t\t\tk1end += 2;\n\t\t\t\t\t} else if ( y1 > text2Length ) {\n\t\n\t\t\t\t\t\t// Ran off the bottom of the graph.\n\t\t\t\t\t\tk1start += 2;\n\t\t\t\t\t} else if ( front ) {\n\t\t\t\t\t\tk2Offset = vOffset + delta - k1;\n\t\t\t\t\t\tif ( k2Offset >= 0 && k2Offset < vLength && v2[ k2Offset ] !== -1 ) {\n\t\n\t\t\t\t\t\t\t// Mirror x2 onto top-left coordinate system.\n\t\t\t\t\t\t\tx2 = text1Length - v2[ k2Offset ];\n\t\t\t\t\t\t\tif ( x1 >= x2 ) {\n\t\n\t\t\t\t\t\t\t\t// Overlap detected.\n\t\t\t\t\t\t\t\treturn this.diffBisectSplit( text1, text2, x1, y1, deadline );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// Walk the reverse path one step.\n\t\t\t\tfor ( k2 = -d + k2start; k2 <= d - k2end; k2 += 2 ) {\n\t\t\t\t\tk2Offset = vOffset + k2;\n\t\t\t\t\tif ( k2 === -d || ( k2 !== d && v2[ k2Offset - 1 ] < v2[ k2Offset + 1 ] ) ) {\n\t\t\t\t\t\tx2 = v2[ k2Offset + 1 ];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx2 = v2[ k2Offset - 1 ] + 1;\n\t\t\t\t\t}\n\t\t\t\t\ty2 = x2 - k2;\n\t\t\t\t\twhile ( x2 < text1Length && y2 < text2Length &&\n\t\t\t\t\t\ttext1.charAt( text1Length - x2 - 1 ) ===\n\t\t\t\t\t\ttext2.charAt( text2Length - y2 - 1 ) ) {\n\t\t\t\t\t\tx2++;\n\t\t\t\t\t\ty2++;\n\t\t\t\t\t}\n\t\t\t\t\tv2[ k2Offset ] = x2;\n\t\t\t\t\tif ( x2 > text1Length ) {\n\t\n\t\t\t\t\t\t// Ran off the left of the graph.\n\t\t\t\t\t\tk2end += 2;\n\t\t\t\t\t} else if ( y2 > text2Length ) {\n\t\n\t\t\t\t\t\t// Ran off the top of the graph.\n\t\t\t\t\t\tk2start += 2;\n\t\t\t\t\t} else if ( !front ) {\n\t\t\t\t\t\tk1Offset = vOffset + delta - k2;\n\t\t\t\t\t\tif ( k1Offset >= 0 && k1Offset < vLength && v1[ k1Offset ] !== -1 ) {\n\t\t\t\t\t\t\tx1 = v1[ k1Offset ];\n\t\t\t\t\t\t\ty1 = vOffset + x1 - k1Offset;\n\t\n\t\t\t\t\t\t\t// Mirror x2 onto top-left coordinate system.\n\t\t\t\t\t\t\tx2 = text1Length - x2;\n\t\t\t\t\t\t\tif ( x1 >= x2 ) {\n\t\n\t\t\t\t\t\t\t\t// Overlap detected.\n\t\t\t\t\t\t\t\treturn this.diffBisectSplit( text1, text2, x1, y1, deadline );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// Diff took too long and hit the deadline or\n\t\t\t// number of diffs equals number of characters, no commonality at all.\n\t\t\treturn [\n\t\t\t\t[ DIFF_DELETE, text1 ],\n\t\t\t\t[ DIFF_INSERT, text2 ]\n\t\t\t];\n\t\t};\n\t\n\t\t/**\n\t\t * Given the location of the 'middle snake', split the diff in two parts\n\t\t * and recurse.\n\t\t * @param {string} text1 Old string to be diffed.\n\t\t * @param {string} text2 New string to be diffed.\n\t\t * @param {number} x Index of split point in text1.\n\t\t * @param {number} y Index of split point in text2.\n\t\t * @param {number} deadline Time at which to bail if not yet complete.\n\t\t * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n\t\t * @private\n\t\t */\n\t\tDiffMatchPatch.prototype.diffBisectSplit = function( text1, text2, x, y, deadline ) {\n\t\t\tvar text1a, text1b, text2a, text2b, diffs, diffsb;\n\t\t\ttext1a = text1.substring( 0, x );\n\t\t\ttext2a = text2.substring( 0, y );\n\t\t\ttext1b = text1.substring( x );\n\t\t\ttext2b = text2.substring( y );\n\t\n\t\t\t// Compute both diffs serially.\n\t\t\tdiffs = this.DiffMain( text1a, text2a, false, deadline );\n\t\t\tdiffsb = this.DiffMain( text1b, text2b, false, deadline );\n\t\n\t\t\treturn diffs.concat( diffsb );\n\t\t};\n\t\n\t\t/**\n\t\t * Reduce the number of edits by eliminating semantically trivial equalities.\n\t\t * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n\t\t */\n\t\tDiffMatchPatch.prototype.diffCleanupSemantic = function( diffs ) {\n\t\t\tvar changes, equalities, equalitiesLength, lastequality,\n\t\t\t\tpointer, lengthInsertions2, lengthDeletions2, lengthInsertions1,\n\t\t\t\tlengthDeletions1, deletion, insertion, overlapLength1, overlapLength2;\n\t\t\tchanges = false;\n\t\t\tequalities = []; // Stack of indices where equalities are found.\n\t\t\tequalitiesLength = 0; // Keeping our own length var is faster in JS.\n\t\t\t/** @type {?string} */\n\t\t\tlastequality = null;\n\t\n\t\t\t// Always equal to diffs[equalities[equalitiesLength - 1]][1]\n\t\t\tpointer = 0; // Index of current position.\n\t\n\t\t\t// Number of characters that changed prior to the equality.\n\t\t\tlengthInsertions1 = 0;\n\t\t\tlengthDeletions1 = 0;\n\t\n\t\t\t// Number of characters that changed after the equality.\n\t\t\tlengthInsertions2 = 0;\n\t\t\tlengthDeletions2 = 0;\n\t\t\twhile ( pointer < diffs.length ) {\n\t\t\t\tif ( diffs[ pointer ][ 0 ] === DIFF_EQUAL ) { // Equality found.\n\t\t\t\t\tequalities[ equalitiesLength++ ] = pointer;\n\t\t\t\t\tlengthInsertions1 = lengthInsertions2;\n\t\t\t\t\tlengthDeletions1 = lengthDeletions2;\n\t\t\t\t\tlengthInsertions2 = 0;\n\t\t\t\t\tlengthDeletions2 = 0;\n\t\t\t\t\tlastequality = diffs[ pointer ][ 1 ];\n\t\t\t\t} else { // An insertion or deletion.\n\t\t\t\t\tif ( diffs[ pointer ][ 0 ] === DIFF_INSERT ) {\n\t\t\t\t\t\tlengthInsertions2 += diffs[ pointer ][ 1 ].length;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlengthDeletions2 += diffs[ pointer ][ 1 ].length;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Eliminate an equality that is smaller or equal to the edits on both\n\t\t\t\t\t// sides of it.\n\t\t\t\t\tif ( lastequality && ( lastequality.length <=\n\t\t\t\t\t\t\tMath.max( lengthInsertions1, lengthDeletions1 ) ) &&\n\t\t\t\t\t\t\t( lastequality.length <= Math.max( lengthInsertions2,\n\t\t\t\t\t\t\t\tlengthDeletions2 ) ) ) {\n\t\n\t\t\t\t\t\t// Duplicate record.\n\t\t\t\t\t\tdiffs.splice(\n\t\t\t\t\t\t\tequalities[ equalitiesLength - 1 ],\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t[ DIFF_DELETE, lastequality ]\n\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t// Change second copy to insert.\n\t\t\t\t\t\tdiffs[ equalities[ equalitiesLength - 1 ] + 1 ][ 0 ] = DIFF_INSERT;\n\t\n\t\t\t\t\t\t// Throw away the equality we just deleted.\n\t\t\t\t\t\tequalitiesLength--;\n\t\n\t\t\t\t\t\t// Throw away the previous equality (it needs to be reevaluated).\n\t\t\t\t\t\tequalitiesLength--;\n\t\t\t\t\t\tpointer = equalitiesLength > 0 ? equalities[ equalitiesLength - 1 ] : -1;\n\t\n\t\t\t\t\t\t// Reset the counters.\n\t\t\t\t\t\tlengthInsertions1 = 0;\n\t\t\t\t\t\tlengthDeletions1 = 0;\n\t\t\t\t\t\tlengthInsertions2 = 0;\n\t\t\t\t\t\tlengthDeletions2 = 0;\n\t\t\t\t\t\tlastequality = null;\n\t\t\t\t\t\tchanges = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpointer++;\n\t\t\t}\n\t\n\t\t\t// Normalize the diff.\n\t\t\tif ( changes ) {\n\t\t\t\tthis.diffCleanupMerge( diffs );\n\t\t\t}\n\t\n\t\t\t// Find any overlaps between deletions and insertions.\n\t\t\t// e.g: <del>abcxxx</del><ins>xxxdef</ins>\n\t\t\t//   -> <del>abc</del>xxx<ins>def</ins>\n\t\t\t// e.g: <del>xxxabc</del><ins>defxxx</ins>\n\t\t\t//   -> <ins>def</ins>xxx<del>abc</del>\n\t\t\t// Only extract an overlap if it is as big as the edit ahead or behind it.\n\t\t\tpointer = 1;\n\t\t\twhile ( pointer < diffs.length ) {\n\t\t\t\tif ( diffs[ pointer - 1 ][ 0 ] === DIFF_DELETE &&\n\t\t\t\t\t\tdiffs[ pointer ][ 0 ] === DIFF_INSERT ) {\n\t\t\t\t\tdeletion = diffs[ pointer - 1 ][ 1 ];\n\t\t\t\t\tinsertion = diffs[ pointer ][ 1 ];\n\t\t\t\t\toverlapLength1 = this.diffCommonOverlap( deletion, insertion );\n\t\t\t\t\toverlapLength2 = this.diffCommonOverlap( insertion, deletion );\n\t\t\t\t\tif ( overlapLength1 >= overlapLength2 ) {\n\t\t\t\t\t\tif ( overlapLength1 >= deletion.length / 2 ||\n\t\t\t\t\t\t\t\toverlapLength1 >= insertion.length / 2 ) {\n\t\n\t\t\t\t\t\t\t// Overlap found.  Insert an equality and trim the surrounding edits.\n\t\t\t\t\t\t\tdiffs.splice(\n\t\t\t\t\t\t\t\tpointer,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t[ DIFF_EQUAL, insertion.substring( 0, overlapLength1 ) ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tdiffs[ pointer - 1 ][ 1 ] =\n\t\t\t\t\t\t\t\tdeletion.substring( 0, deletion.length - overlapLength1 );\n\t\t\t\t\t\t\tdiffs[ pointer + 1 ][ 1 ] = insertion.substring( overlapLength1 );\n\t\t\t\t\t\t\tpointer++;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif ( overlapLength2 >= deletion.length / 2 ||\n\t\t\t\t\t\t\t\toverlapLength2 >= insertion.length / 2 ) {\n\t\n\t\t\t\t\t\t\t// Reverse overlap found.\n\t\t\t\t\t\t\t// Insert an equality and swap and trim the surrounding edits.\n\t\t\t\t\t\t\tdiffs.splice(\n\t\t\t\t\t\t\t\tpointer,\n\t\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t\t[ DIFF_EQUAL, deletion.substring( 0, overlapLength2 ) ]\n\t\t\t\t\t\t\t);\n\t\n\t\t\t\t\t\t\tdiffs[ pointer - 1 ][ 0 ] = DIFF_INSERT;\n\t\t\t\t\t\t\tdiffs[ pointer - 1 ][ 1 ] =\n\t\t\t\t\t\t\t\tinsertion.substring( 0, insertion.length - overlapLength2 );\n\t\t\t\t\t\t\tdiffs[ pointer + 1 ][ 0 ] = DIFF_DELETE;\n\t\t\t\t\t\t\tdiffs[ pointer + 1 ][ 1 ] =\n\t\t\t\t\t\t\t\tdeletion.substring( overlapLength2 );\n\t\t\t\t\t\t\tpointer++;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tpointer++;\n\t\t\t\t}\n\t\t\t\tpointer++;\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Determine if the suffix of one string is the prefix of another.\n\t\t * @param {string} text1 First string.\n\t\t * @param {string} text2 Second string.\n\t\t * @return {number} The number of characters common to the end of the first\n\t\t *     string and the start of the second string.\n\t\t * @private\n\t\t */\n\t\tDiffMatchPatch.prototype.diffCommonOverlap = function( text1, text2 ) {\n\t\t\tvar text1Length, text2Length, textLength,\n\t\t\t\tbest, length, pattern, found;\n\t\n\t\t\t// Cache the text lengths to prevent multiple calls.\n\t\t\ttext1Length = text1.length;\n\t\t\ttext2Length = text2.length;\n\t\n\t\t\t// Eliminate the null case.\n\t\t\tif ( text1Length === 0 || text2Length === 0 ) {\n\t\t\t\treturn 0;\n\t\t\t}\n\t\n\t\t\t// Truncate the longer string.\n\t\t\tif ( text1Length > text2Length ) {\n\t\t\t\ttext1 = text1.substring( text1Length - text2Length );\n\t\t\t} else if ( text1Length < text2Length ) {\n\t\t\t\ttext2 = text2.substring( 0, text1Length );\n\t\t\t}\n\t\t\ttextLength = Math.min( text1Length, text2Length );\n\t\n\t\t\t// Quick check for the worst case.\n\t\t\tif ( text1 === text2 ) {\n\t\t\t\treturn textLength;\n\t\t\t}\n\t\n\t\t\t// Start by looking for a single character match\n\t\t\t// and increase length until no match is found.\n\t\t\t// Performance analysis: https://neil.fraser.name/news/2010/11/04/\n\t\t\tbest = 0;\n\t\t\tlength = 1;\n\t\t\twhile ( true ) {\n\t\t\t\tpattern = text1.substring( textLength - length );\n\t\t\t\tfound = text2.indexOf( pattern );\n\t\t\t\tif ( found === -1 ) {\n\t\t\t\t\treturn best;\n\t\t\t\t}\n\t\t\t\tlength += found;\n\t\t\t\tif ( found === 0 || text1.substring( textLength - length ) ===\n\t\t\t\t\t\ttext2.substring( 0, length ) ) {\n\t\t\t\t\tbest = length;\n\t\t\t\t\tlength++;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Split two texts into an array of strings.  Reduce the texts to a string of\n\t\t * hashes where each Unicode character represents one line.\n\t\t * @param {string} text1 First string.\n\t\t * @param {string} text2 Second string.\n\t\t * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n\t\t *     An object containing the encoded text1, the encoded text2 and\n\t\t *     the array of unique strings.\n\t\t *     The zeroth element of the array of unique strings is intentionally blank.\n\t\t * @private\n\t\t */\n\t\tDiffMatchPatch.prototype.diffLinesToChars = function( text1, text2 ) {\n\t\t\tvar lineArray, lineHash, chars1, chars2;\n\t\t\tlineArray = []; // E.g. lineArray[4] === 'Hello\\n'\n\t\t\tlineHash = {};  // E.g. lineHash['Hello\\n'] === 4\n\t\n\t\t\t// '\\x00' is a valid character, but various debuggers don't like it.\n\t\t\t// So we'll insert a junk entry to avoid generating a null character.\n\t\t\tlineArray[ 0 ] = \"\";\n\t\n\t\t\t/**\n\t\t\t * Split a text into an array of strings.  Reduce the texts to a string of\n\t\t\t * hashes where each Unicode character represents one line.\n\t\t\t * Modifies linearray and linehash through being a closure.\n\t\t\t * @param {string} text String to encode.\n\t\t\t * @return {string} Encoded string.\n\t\t\t * @private\n\t\t\t */\n\t\t\tfunction diffLinesToCharsMunge( text ) {\n\t\t\t\tvar chars, lineStart, lineEnd, lineArrayLength, line;\n\t\t\t\tchars = \"\";\n\t\n\t\t\t\t// Walk the text, pulling out a substring for each line.\n\t\t\t\t// text.split('\\n') would would temporarily double our memory footprint.\n\t\t\t\t// Modifying text would create many large strings to garbage collect.\n\t\t\t\tlineStart = 0;\n\t\t\t\tlineEnd = -1;\n\t\n\t\t\t\t// Keeping our own length variable is faster than looking it up.\n\t\t\t\tlineArrayLength = lineArray.length;\n\t\t\t\twhile ( lineEnd < text.length - 1 ) {\n\t\t\t\t\tlineEnd = text.indexOf( \"\\n\", lineStart );\n\t\t\t\t\tif ( lineEnd === -1 ) {\n\t\t\t\t\t\tlineEnd = text.length - 1;\n\t\t\t\t\t}\n\t\t\t\t\tline = text.substring( lineStart, lineEnd + 1 );\n\t\t\t\t\tlineStart = lineEnd + 1;\n\t\n\t\t\t\t\tif ( lineHash.hasOwnProperty ? lineHash.hasOwnProperty( line ) :\n\t\t\t\t\t\t\t\t( lineHash[ line ] !== undefined ) ) {\n\t\t\t\t\t\tchars += String.fromCharCode( lineHash[ line ] );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchars += String.fromCharCode( lineArrayLength );\n\t\t\t\t\t\tlineHash[ line ] = lineArrayLength;\n\t\t\t\t\t\tlineArray[ lineArrayLength++ ] = line;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn chars;\n\t\t\t}\n\t\n\t\t\tchars1 = diffLinesToCharsMunge( text1 );\n\t\t\tchars2 = diffLinesToCharsMunge( text2 );\n\t\t\treturn {\n\t\t\t\tchars1: chars1,\n\t\t\t\tchars2: chars2,\n\t\t\t\tlineArray: lineArray\n\t\t\t};\n\t\t};\n\t\n\t\t/**\n\t\t * Rehydrate the text in a diff from a string of line hashes to real lines of\n\t\t * text.\n\t\t * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n\t\t * @param {!Array.<string>} lineArray Array of unique strings.\n\t\t * @private\n\t\t */\n\t\tDiffMatchPatch.prototype.diffCharsToLines = function( diffs, lineArray ) {\n\t\t\tvar x, chars, text, y;\n\t\t\tfor ( x = 0; x < diffs.length; x++ ) {\n\t\t\t\tchars = diffs[ x ][ 1 ];\n\t\t\t\ttext = [];\n\t\t\t\tfor ( y = 0; y < chars.length; y++ ) {\n\t\t\t\t\ttext[ y ] = lineArray[ chars.charCodeAt( y ) ];\n\t\t\t\t}\n\t\t\t\tdiffs[ x ][ 1 ] = text.join( \"\" );\n\t\t\t}\n\t\t};\n\t\n\t\t/**\n\t\t * Reorder and merge like edit sections.  Merge equalities.\n\t\t * Any edit section can move as long as it doesn't cross an equality.\n\t\t * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n\t\t */\n\t\tDiffMatchPatch.prototype.diffCleanupMerge = function( diffs ) {\n\t\t\tvar pointer, countDelete, countInsert, textInsert, textDelete,\n\t\t\t\tcommonlength, changes, diffPointer, position;\n\t\t\tdiffs.push( [ DIFF_EQUAL, \"\" ] ); // Add a dummy entry at the end.\n\t\t\tpointer = 0;\n\t\t\tcountDelete = 0;\n\t\t\tcountInsert = 0;\n\t\t\ttextDelete = \"\";\n\t\t\ttextInsert = \"\";\n\t\t\tcommonlength;\n\t\t\twhile ( pointer < diffs.length ) {\n\t\t\t\tswitch ( diffs[ pointer ][ 0 ] ) {\n\t\t\t\tcase DIFF_INSERT:\n\t\t\t\t\tcountInsert++;\n\t\t\t\t\ttextInsert += diffs[ pointer ][ 1 ];\n\t\t\t\t\tpointer++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase DIFF_DELETE:\n\t\t\t\t\tcountDelete++;\n\t\t\t\t\ttextDelete += diffs[ pointer ][ 1 ];\n\t\t\t\t\tpointer++;\n\t\t\t\t\tbreak;\n\t\t\t\tcase DIFF_EQUAL:\n\t\n\t\t\t\t\t// Upon reaching an equality, check for prior redundancies.\n\t\t\t\t\tif ( countDelete + countInsert > 1 ) {\n\t\t\t\t\t\tif ( countDelete !== 0 && countInsert !== 0 ) {\n\t\n\t\t\t\t\t\t\t// Factor out any common prefixes.\n\t\t\t\t\t\t\tcommonlength = this.diffCommonPrefix( textInsert, textDelete );\n\t\t\t\t\t\t\tif ( commonlength !== 0 ) {\n\t\t\t\t\t\t\t\tif ( ( pointer - countDelete - countInsert ) > 0 &&\n\t\t\t\t\t\t\t\t\t\tdiffs[ pointer - countDelete - countInsert - 1 ][ 0 ] ===\n\t\t\t\t\t\t\t\t\t\tDIFF_EQUAL ) {\n\t\t\t\t\t\t\t\t\tdiffs[ pointer - countDelete - countInsert - 1 ][ 1 ] +=\n\t\t\t\t\t\t\t\t\t\ttextInsert.substring( 0, commonlength );\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tdiffs.splice( 0, 0, [ DIFF_EQUAL,\n\t\t\t\t\t\t\t\t\t\ttextInsert.substring( 0, commonlength )\n\t\t\t\t\t\t\t\t\t] );\n\t\t\t\t\t\t\t\t\tpointer++;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\ttextInsert = textInsert.substring( commonlength );\n\t\t\t\t\t\t\t\ttextDelete = textDelete.substring( commonlength );\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// Factor out any common suffixies.\n\t\t\t\t\t\t\tcommonlength = this.diffCommonSuffix( textInsert, textDelete );\n\t\t\t\t\t\t\tif ( commonlength !== 0 ) {\n\t\t\t\t\t\t\t\tdiffs[ pointer ][ 1 ] = textInsert.substring( textInsert.length -\n\t\t\t\t\t\t\t\t\t\tcommonlength ) + diffs[ pointer ][ 1 ];\n\t\t\t\t\t\t\t\ttextInsert = textInsert.substring( 0, textInsert.length -\n\t\t\t\t\t\t\t\t\tcommonlength );\n\t\t\t\t\t\t\t\ttextDelete = textDelete.substring( 0, textDelete.length -\n\t\t\t\t\t\t\t\t\tcommonlength );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Delete the offending records and add the merged ones.\n\t\t\t\t\t\tif ( countDelete === 0 ) {\n\t\t\t\t\t\t\tdiffs.splice( pointer - countInsert,\n\t\t\t\t\t\t\t\tcountDelete + countInsert, [ DIFF_INSERT, textInsert ] );\n\t\t\t\t\t\t} else if ( countInsert === 0 ) {\n\t\t\t\t\t\t\tdiffs.splice( pointer - countDelete,\n\t\t\t\t\t\t\t\tcountDelete + countInsert, [ DIFF_DELETE, textDelete ] );\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdiffs.splice(\n\t\t\t\t\t\t\t\tpointer - countDelete - countInsert,\n\t\t\t\t\t\t\t\tcountDelete + countInsert,\n\t\t\t\t\t\t\t\t[ DIFF_DELETE, textDelete ], [ DIFF_INSERT, textInsert ]\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tpointer = pointer - countDelete - countInsert +\n\t\t\t\t\t\t\t( countDelete ? 1 : 0 ) + ( countInsert ? 1 : 0 ) + 1;\n\t\t\t\t\t} else if ( pointer !== 0 && diffs[ pointer - 1 ][ 0 ] === DIFF_EQUAL ) {\n\t\n\t\t\t\t\t\t// Merge this equality with the previous one.\n\t\t\t\t\t\tdiffs[ pointer - 1 ][ 1 ] += diffs[ pointer ][ 1 ];\n\t\t\t\t\t\tdiffs.splice( pointer, 1 );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tpointer++;\n\t\t\t\t\t}\n\t\t\t\t\tcountInsert = 0;\n\t\t\t\t\tcountDelete = 0;\n\t\t\t\t\ttextDelete = \"\";\n\t\t\t\t\ttextInsert = \"\";\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( diffs[ diffs.length - 1 ][ 1 ] === \"\" ) {\n\t\t\t\tdiffs.pop(); // Remove the dummy entry at the end.\n\t\t\t}\n\t\n\t\t\t// Second pass: look for single edits surrounded on both sides by equalities\n\t\t\t// which can be shifted sideways to eliminate an equality.\n\t\t\t// e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n\t\t\tchanges = false;\n\t\t\tpointer = 1;\n\t\n\t\t\t// Intentionally ignore the first and last element (don't need checking).\n\t\t\twhile ( pointer < diffs.length - 1 ) {\n\t\t\t\tif ( diffs[ pointer - 1 ][ 0 ] === DIFF_EQUAL &&\n\t\t\t\t\t\tdiffs[ pointer + 1 ][ 0 ] === DIFF_EQUAL ) {\n\t\n\t\t\t\t\tdiffPointer = diffs[ pointer ][ 1 ];\n\t\t\t\t\tposition = diffPointer.substring(\n\t\t\t\t\t\tdiffPointer.length - diffs[ pointer - 1 ][ 1 ].length\n\t\t\t\t\t);\n\t\n\t\t\t\t\t// This is a single edit surrounded by equalities.\n\t\t\t\t\tif ( position === diffs[ pointer - 1 ][ 1 ] ) {\n\t\n\t\t\t\t\t\t// Shift the edit over the previous equality.\n\t\t\t\t\t\tdiffs[ pointer ][ 1 ] = diffs[ pointer - 1 ][ 1 ] +\n\t\t\t\t\t\t\tdiffs[ pointer ][ 1 ].substring( 0, diffs[ pointer ][ 1 ].length -\n\t\t\t\t\t\t\t\tdiffs[ pointer - 1 ][ 1 ].length );\n\t\t\t\t\t\tdiffs[ pointer + 1 ][ 1 ] =\n\t\t\t\t\t\t\tdiffs[ pointer - 1 ][ 1 ] + diffs[ pointer + 1 ][ 1 ];\n\t\t\t\t\t\tdiffs.splice( pointer - 1, 1 );\n\t\t\t\t\t\tchanges = true;\n\t\t\t\t\t} else if ( diffPointer.substring( 0, diffs[ pointer + 1 ][ 1 ].length ) ===\n\t\t\t\t\t\t\tdiffs[ pointer + 1 ][ 1 ] ) {\n\t\n\t\t\t\t\t\t// Shift the edit over the next equality.\n\t\t\t\t\t\tdiffs[ pointer - 1 ][ 1 ] += diffs[ pointer + 1 ][ 1 ];\n\t\t\t\t\t\tdiffs[ pointer ][ 1 ] =\n\t\t\t\t\t\t\tdiffs[ pointer ][ 1 ].substring( diffs[ pointer + 1 ][ 1 ].length ) +\n\t\t\t\t\t\t\tdiffs[ pointer + 1 ][ 1 ];\n\t\t\t\t\t\tdiffs.splice( pointer + 1, 1 );\n\t\t\t\t\t\tchanges = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpointer++;\n\t\t\t}\n\t\n\t\t\t// If shifts were made, the diff needs reordering and another shift sweep.\n\t\t\tif ( changes ) {\n\t\t\t\tthis.diffCleanupMerge( diffs );\n\t\t\t}\n\t\t};\n\t\n\t\treturn function( o, n ) {\n\t\t\tvar diff, output, text;\n\t\t\tdiff = new DiffMatchPatch();\n\t\t\toutput = diff.DiffMain( o, n );\n\t\t\tdiff.diffCleanupEfficiency( output );\n\t\t\ttext = diff.diffPrettyHtml( output );\n\t\n\t\t\treturn text;\n\t\t};\n\t}() );\n\t\n\t}() );\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(133), __webpack_require__(32)(module)))\n\n/***/ },\n\n/***/ 133:\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\tprocess.prependListener = noop;\n\tprocess.prependOnceListener = noop;\n\t\n\tprocess.listeners = function (name) { return [] }\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n\n/***/ 134:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * QUnit-TAP - A TAP Output Producer Plugin for QUnit\n\t *\n\t * https://github.com/twada/qunit-tap\n\t * version: 1.5.1\n\t *\n\t * Copyright (c) 2010-2016 Takuto Wada\n\t * Dual licensed under the MIT and GPLv2 licenses.\n\t *   https://raw.github.com/twada/qunit-tap/master/MIT-LICENSE.txt\n\t *   https://raw.github.com/twada/qunit-tap/master/GPL-LICENSE.txt\n\t *\n\t * A part of extend function is:\n\t *   Copyright 2012 jQuery Foundation and other contributors\n\t *   Released under the MIT license.\n\t *   http://jquery.org/license\n\t */\n\t(function (root, factory) {\n\t    'use strict';\n\t\n\t    // using returnExports UMD pattern\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports === 'object') {\n\t        module.exports = factory();\n\t    } else {\n\t        root.qunitTap = factory();\n\t    }\n\t}(this, function () {\n\t    'use strict';\n\t\n\t    var qunitTapVersion = '1.5.1',\n\t        slice = Array.prototype.slice;\n\t\n\t    // borrowed from qunit.js\n\t    function extend (a, b) {\n\t        var prop;\n\t        for (prop in b) {\n\t            if (b.hasOwnProperty(prop)) {\n\t                if (typeof b[prop] === 'undefined') {\n\t                    delete a[prop];\n\t                } else {\n\t                    a[prop] = b[prop];\n\t                }\n\t            }\n\t        }\n\t        return a;\n\t    }\n\t\n\t    function indexOf (ary, element) {\n\t        var i;\n\t        for (i = 0; i < ary.length; i += 1) {\n\t            if (ary[i] === element) {\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    }\n\t\n\t    function removeElement (ary, element) {\n\t        var index = indexOf(ary, element);\n\t        if (index !== -1) {\n\t            return ary.splice(index, 1);\n\t        } else {\n\t            return [];\n\t        }\n\t    }\n\t\n\t    function isPlanRequired (conf) {\n\t        return (typeof conf !== 'undefined' && typeof conf.requireExpects !== 'undefined' && conf.requireExpects);\n\t    }\n\t\n\t    function isPassed (details) {\n\t        return !!(details.result);\n\t    }\n\t\n\t    function isFailed (details) {\n\t        return !(isPassed(details));\n\t    }\n\t\n\t    function isAssertOkFailed (details) {\n\t        return isFailed(details) && typeof details.expected === 'undefined' && typeof details.actual === 'undefined';\n\t    }\n\t\n\t    function escapeLineEndings (str) {\n\t        return str.replace(/(\\r?\\n)/g, '$&# ');\n\t    }\n\t\n\t    function ltrim (str) {\n\t        return str.replace(/^\\s+/, '');\n\t    }\n\t\n\t    function noop (obj) {\n\t        return obj;\n\t    }\n\t\n\t    function render (desc, fieldName, fieldValue, formatter) {\n\t        desc.push(fieldName + ': ' + formatter(fieldValue));\n\t    }\n\t\n\t    function renderIf (shouldRender, desc, fieldName, fieldValue, formatter) {\n\t        if (!shouldRender || typeof fieldValue === 'undefined') {\n\t            return;\n\t        }\n\t        render(desc, fieldName, fieldValue, formatter);\n\t    }\n\t\n\t    function formatTestLine (testLine, rest) {\n\t        if (!rest) {\n\t            return testLine;\n\t        }\n\t        return testLine + ' - ' + escapeLineEndings(rest);\n\t    }\n\t\n\t    var createCallbackAppenderFor = function (qu) {\n\t        return function (subject, observer, event) {\n\t            var originalLoggingCallback = subject[event],\n\t                callback = function () {\n\t                    // make listener methods (moduleStart,testStart,log, ...) overridable.\n\t                    observer[event].apply(observer, slice.apply(arguments));\n\t                };\n\t            originalLoggingCallback(callback);\n\t            return callback;\n\t        };\n\t    };\n\t\n\t\n\t    /**\n\t     * QUnit-TAP - A TAP Output Producer Plugin for QUnit\n\t     * @param qunitObject QUnit object reference.\n\t     * @param printLikeFunction print-like function for TAP output (assumes line-separator is added by this function for each call).\n\t     * @param options configuration options to customize default behavior.\n\t     * @return object to provide QUnit-TAP API and customization subject.\n\t     */\n\t    function qunitTap(qunitObject, printLikeFunction, options) {\n\t        if (!qunitObject) {\n\t            throw new Error('should pass QUnit object reference. Please check QUnit\\'s \"require\" path if you are using Node.js (or any CommonJS env).');\n\t        } else if (typeof printLikeFunction !== 'function') {\n\t            throw new Error('should pass print-like function');\n\t        }\n\t\n\t        var qu = qunitObject,\n\t            tap = {},\n\t            deprecateOption = function deprecateOption (optionName, fallback) {\n\t                // option deprecation and fallback function\n\t                if (!options || typeof options !== 'object') {\n\t                    return;\n\t                }\n\t                if (typeof options[optionName] === 'undefined') {\n\t                    return;\n\t                }\n\t                printLikeFunction('# WARNING: Option \"' + optionName + '\" is deprecated and will be removed in future version.');\n\t                fallback(options[optionName]);\n\t            },\n\t            targetEvents = [\n\t                'moduleStart',\n\t                'testStart',\n\t                'log',\n\t                'testDone',\n\t                'done'\n\t            ],\n\t            registeredCallbacks = {},\n\t            explain = (function () {\n\t                if (typeof qu.dump !== 'undefined' && typeof qu.dump.parse === 'function') {\n\t                    return function explain (obj) {\n\t                        return qu.dump.parse(obj);\n\t                    };\n\t                }\n\t                if (typeof qu.jsDump !== 'undefined' && typeof qu.jsDump.parse === 'function') {\n\t                    return function explain (obj) {\n\t                        return qu.jsDump.parse(obj);\n\t                    };\n\t                }\n\t                return noop;\n\t            })();\n\t\n\t        tap.config = extend(\n\t            {\n\t                initialCount: 1,\n\t                showModuleNameOnFailure: true,\n\t                showTestNameOnFailure: true,\n\t                showExpectationOnFailure: true,\n\t                showSourceOnFailure: true\n\t            },\n\t            options\n\t        );\n\t        deprecateOption('noPlan', function (flag) {\n\t            printLikeFunction('# Now QUnit-TAP works as with \"noPlan: true\" by default. If you want to delare plan explicitly, please use \"QUnit.config.requireExpects\" option instead.');\n\t            tap.config.noPlan = flag;\n\t        });\n\t        deprecateOption('count', function (count) {\n\t            tap.config.initialCount = (count + 1);\n\t        });\n\t        deprecateOption('showDetailsOnFailure', function (flag) {\n\t            tap.config.showModuleNameOnFailure = flag;\n\t            tap.config.showTestNameOnFailure = flag;\n\t            tap.config.showExpectationOnFailure = flag;\n\t            tap.config.showSourceOnFailure = flag;\n\t        });\n\t        tap.VERSION = qunitTapVersion;\n\t        tap.puts = printLikeFunction;\n\t        tap.count = tap.config.initialCount - 1;\n\t        tap.expectedCount = tap.config.initialCount - 1;\n\t\n\t        function isEnabled (configName) {\n\t            return tap.config[configName];\n\t        }\n\t\n\t        function formatDetails (details) {\n\t            if (isPassed(details)) {\n\t                return details.message;\n\t            }\n\t            var desc = [];\n\t            if (details.message) {\n\t                desc.push(details.message);\n\t            }\n\t            if (isEnabled('showExpectationOnFailure') && !(isAssertOkFailed(details))) {\n\t                render(desc, 'expected', details.expected, explain);\n\t                render(desc, 'got', details.actual, explain);\n\t            }\n\t            renderIf(isEnabled('showTestNameOnFailure'), desc, 'test', details.name, noop);\n\t            renderIf(isEnabled('showModuleNameOnFailure'), desc, 'module', details.module, noop);\n\t            renderIf(isEnabled('showSourceOnFailure'), desc, 'source', details.source, ltrim);\n\t            return desc.join(', ');\n\t        }\n\t\n\t        function printPlanLine (toCount) {\n\t            tap.puts(tap.config.initialCount + '..' + toCount);\n\t        }\n\t\n\t        function unsubscribeEvent (eventName) {\n\t            var listeners;\n\t            if (indexOf(targetEvents, eventName) === -1) {\n\t                return;\n\t            }\n\t            listeners = qu.config[eventName];\n\t            if (typeof listeners === 'undefined') {\n\t                return;\n\t            }\n\t            removeElement(listeners, registeredCallbacks[eventName]);\n\t        }\n\t\n\t        function unsubscribeEvents (eventNames) {\n\t            var i;\n\t            for (i = 0; i < eventNames.length; i += 1) {\n\t                unsubscribeEvent(eventNames[i]);\n\t            }\n\t        }\n\t\n\t        tap.explain = explain;\n\t\n\t        tap.note = function note (obj) {\n\t            tap.puts(escapeLineEndings('# ' + obj));\n\t        };\n\t\n\t        tap.diag = function diag (obj) {\n\t            tap.note(obj);\n\t            return false;\n\t        };\n\t\n\t        tap.moduleStart = function moduleStart (arg) {\n\t            var name = (typeof arg === 'string') ? arg : arg.name;\n\t            tap.note('module: ' + name);\n\t        };\n\t\n\t        tap.testStart = function testStart (arg) {\n\t            var name = (typeof arg === 'string') ? arg : arg.name;\n\t            tap.note('test: ' + name);\n\t        };\n\t\n\t        tap.log = function log (details) {\n\t            var testLine = '';\n\t            tap.count += 1;\n\t            if (isFailed(details)) {\n\t                testLine += 'not ';\n\t            }\n\t            testLine += ('ok ' + tap.count);\n\t            tap.puts(formatTestLine(testLine, formatDetails(details)));\n\t        };\n\t\n\t        tap.testDone = function testDone () {\n\t            if (isPlanRequired(qu.config)) {\n\t                tap.expectedCount += qu.config.current.expected;\n\t            }\n\t        };\n\t\n\t        tap.done = function done () {\n\t            if (typeof tap.config.noPlan !== 'undefined' && !(tap.config.noPlan)) {\n\t                // Do nothing until removal of 'noPlan' option.\n\t            } else if (isPlanRequired(qu.config)) {\n\t                printPlanLine(tap.expectedCount);\n\t            } else {\n\t                printPlanLine(tap.count);\n\t            }\n\t        };\n\t\n\t        tap.unsubscribe = function unsubscribe () {\n\t            if (typeof qu.config === 'undefined') {\n\t                return;\n\t            }\n\t            if (arguments.length === 0) {\n\t                unsubscribeEvents(targetEvents);\n\t            } else {\n\t                unsubscribeEvents(slice.apply(arguments));\n\t            }\n\t        };\n\t\n\t        (function () {\n\t            var appendCallback = createCallbackAppenderFor(qu),\n\t                eventName, i, callback;\n\t            for (i = 0; i < targetEvents.length; i += 1) {\n\t                eventName = targetEvents[i];\n\t                callback = appendCallback(qu, tap, eventName);\n\t                registeredCallbacks[eventName] = callback;\n\t            }\n\t        })();\n\t\n\t        return tap;\n\t    }\n\t\n\t    qunitTap.qunitTap = function () {\n\t        throw new Error('[BC BREAK] Since 1.4.0, QUnit-TAP exports single qunitTap function as module.exports. Therefore, require(\"qunit-tap\") returns qunitTap function itself. Please fix your code if you are using Node.js (or any CommonJS env).');\n\t    };\n\t\n\t    // using substack pattern (export single function)\n\t    return qunitTap;\n\t}));\n\n\n/***/ },\n\n/***/ 135:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\t/* global QUnit, qunitTap */\n\t\n\tvar qunit_started = false;\n\t\n\t/* Always use explicit start */\n\tQUnit.config.autostart = false;\n\t\n\t/*\n\t * HACK: phantomjs doesn't handle uncaught exceptions as it should if\n\t * window.onerror is non-null, even when that handler returns false\n\t * (expecting that the browser default behavior will occur).\n\t *\n\t * So remove the qunit window.onerror handler until the tests actually\n\t * start, and any errors become part of the test suite results.\n\t */\n\tvar qunit_onerror = window.onerror;\n\twindow.onerror = null;\n\tQUnit.begin(function() {\n\t    window.onerror = function(error, file, line) {\n\t        var ret = false;\n\t        if (qunit_onerror)\n\t            ret = qunit_onerror(error, file, line);\n\t\n\t        /*\n\t         * If a global exception happens during an async test\n\t         * then that test won't be able to call the start() function\n\t         * to move to the next test, so call it here.\n\t         */\n\t        if (QUnit.config.current && QUnit.config.current.async)\n\t            QUnit.start();\n\t\n\t        return ret;\n\t    };\n\t});\n\t\n\tQUnit.moduleStart(function() {\n\t    qunit_started = true;\n\t});\n\t\n\tQUnit.done(function() {\n\t    console.log(\"phantom-tap-done\");\n\t    window.onerror = null;\n\t});\n\t/*\n\t * Now initialize qunit-tap\n\t *\n\t * When not running under tap-phantom this stuff will just show up in\n\t * the console. We print out a special canary at the end of the tests\n\t * so that tap-phantom can know when the testing is done.\n\t *\n\t * In addition double check for a test file that doesn't properly call\n\t * QUnit.start() after its done setting up its tests.\n\t *\n\t * We also want to insert the current test name into all tap lines.\n\t */\n\tvar tap_regex = /^((not )?ok [0-9]+ (- )?)(.*)$/;\n\tqunitTap(QUnit, function() {\n\t    if (arguments.length == 1 && QUnit.config.current) {\n\t        var match = tap_regex.exec(arguments[0]);\n\t        if (match) {\n\t            console.log(match[1] + QUnit.config.current.testName + \": \" + match[4]);\n\t            return;\n\t        }\n\t    }\n\t    console.log.apply(console, arguments);\n\t});\n\t\n\twindow.setTimeout(function() {\n\t    if (!qunit_started) {\n\t        console.log(\"QUnit not started by test\");\n\t        console.log(\"phantom-tap-error\");\n\t    }\n\t}, 20000);\n\t\n\twindow.tests_included = true;\n\t\n\tif (module && module.exports)\n\t    module.exports = QUnit;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(32)(module)))\n\n/***/ },\n\n/***/ 136:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// docker/test-docker.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 28ecd0523993068a7bc9","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2014 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    var docker = require(\"./docker\");\n    var util = require(\"./util\");\n    var QUnit = require(\"qunit-tests\");\n    var assert = QUnit;\n\n    QUnit.test(\"bytes_from_format\", function() {\n        var checks = [\n            [ \"999\", 999 ],\n            [ \"1.9 kb\", 1945.6],\n            [ \"2.0 KB\", 2048 ],\n            [ \"1.0 MB\", 1048576 ],\n            [ \"1 GB\", 1073741824 ],\n            [ \"1 Unknown\", 1 ],\n        ];\n\n        var i;\n\n        assert.expect(checks.length);\n        for (i = 0; i < checks.length; i++) {\n            assert.strictEqual(docker.bytes_from_format(checks[i][0]), checks[i][1],\n                               \"bytes_from_format(\" + checks[i][0] + \") = \" + checks[i][1]);\n        }\n    });\n\n    QUnit.test(\"json_skip\", function() {\n        var checks = [\n            [ \"number\", \"0123456789\",\n                [ 10, 0 ] ],\n            [ \"number-fancy\", \"-0123456789.33E-5\",\n                [ 17, 0 ] ],\n            [ \"string\", \"\\\"string\\\"\",\n                [ 8, 0 ] ],\n            [ \"string-escaped\", \"\\\"st\\\\\\\"ring\\\"\",\n                [ 10, 0 ] ],\n            [ \"string-truncated\", \"\\\"string\",\n                [ 0 ] ],\n            [ \"boolean\", \"true\",\n                [ 4, 0 ] ],\n            [ \"null\", \"null\",\n                [ 4, 0 ] ],\n            [ \"string-number\", \"\\\"string\\\"0123456789\",\n                [ 8, 18, 0 ] ],\n            [ \"number-string\", \"0123456789\\\"string\\\"\",\n                [ 10, 18, 0 ] ],\n            [ \"number-number\", \"0123456789 123\",\n                [ 10, 14, 0 ] ],\n            [ \"string-string-string\", \"\\\"string\\\"\\\"two\\\"\\\"three\\\"\",\n                [ 8, 13, 20, 0 ] ],\n            [ \"string-string-truncated\", \"\\\"string\\\"\\\"tw\",\n                [ 8, 0 ] ],\n            [ \"array\", \"[\\\"string\\\",\\\"two\\\",\\\"three\\\"]\",\n                [ 24, 0 ] ],\n            [ \"array-escaped\", \"[\\\"string\\\",\\\"two\\\",\\\"thr]e\\\"]\",\n                [ 24, 0 ] ],\n            [ \"array-spaces\", \" [ \\\"string\\\", \\\"two\\\" ,\\\"thr]e\\\" ]\\t\",\n                [ 29, 0 ] ],\n            [ \"array-truncated\", \"[\\\"string\\\",\\\"two\\\",\\\"thr\",\n                [ 0 ] ],\n            [ \"object\", \"{\\\"string\\\":\\\"two\\\",\\\"number\\\":222}\",\n                [ 29, 0 ] ],\n            [ \"object-escaped\", \"{\\\"string\\\":\\\"two\\\",\\\"num]}}ber\\\":222}\",\n                [ 32, 0 ] ],\n            [ \"object-spaces\", \"{ \\\"string\\\": \\\"two\\\", \\\"number\\\": 222 }\",\n                [ 34, 0 ] ],\n            [ \"object-object\", \"{\\\"string\\\":\\\"two\\\",\\\"number\\\":222}{\\\"string\\\":\\\"two\\\",\\\"number\\\":222}\",\n                [ 29, 58, 0 ] ],\n            [ \"object-line-object\", \"{\\\"string\\\":\\\"two\\\",\\\"number\\\":222}\\n{\\\"string\\\":\\\"two\\\",\\\"number\\\":222}\",\n                [ 29, 59, 0 ] ],\n            [ \"object-truncated\", \"{\\\"stri}ng\\\"\",\n                [ 0 ] ],\n            [ \"whitespace\", \"  \\r\\n\\t \\v\",\n                [ 0 ] ],\n        ];\n\n        assert.expect(checks.length);\n        for (var i = 0; i < checks.length; i++) {\n            var res = [];\n            var pos = undefined;\n            var next;\n            for (var j = 0; j < 16; j++) {\n                next = docker.json_skip(checks[i][1], pos);\n                res.push(next);\n                if (next === 0)\n                    break;\n                pos = next;\n            }\n            assert.deepEqual(res, checks[i][2], \"json_skip(): \" + checks[i][0]);\n        }\n    });\n\n    QUnit.test(\"quote_cmdline\", function() {\n        var checks = [\n            [ [ \"foo\" ],          \"foo\" ],\n            [ [ \"foo\", \"bar\" ],   \"foo bar\" ],\n            [ [ \"f o o\" ],        \"\\\"f o o\\\"\" ],\n            [ [ \"f\\\\o\" ],         \"f\\\\\\\\o\" ],\n            [ [ \"f\\\"o\" ],         \"'f\\\"o'\" ],\n            [ [ \"f\\\"\\'o\" ],       \"'f\\\"\\\\'o'\" ],\n            [ [ \"f \\\"o\" ],        \"\\\"f \\\\\\\"o\\\"\" ]\n        ];\n\n        assert.expect(checks.length);\n        for (var i = 0; i < checks.length; i++)\n            assert.strictEqual(docker.quote_cmdline(checks[i][0]), checks[i][1],\n                               \"quote(\" + String(checks[i][0]) + \") = \" + checks[i][1]);\n\n    });\n\n    QUnit.test(\"unquote_cmdline\", function() {\n        var checks = [\n            [ [ \"foo\" ],            \"  foo  \" ],\n            [ [ \"foo\", \"bar\" ],     \"foo    bar  \" ],\n            [ [ \"f o o\" ],          \"\\\"f o o\\\"\" ],\n            [ [ \"f o o\" ],          \"'f o o'\" ],\n            [ [ \"f\\\\o\" ],           \"f\\\\\\\\o\" ],\n            [ [ \"f\\\"o\" ],           \"'f\\\"o'\" ],\n            [ [ \"f\\\"\\'o\" ],         \"'f\\\"\\\\'o'\" ],\n            [ [ \"f \\\"o\" ],          \"\\\"f \\\\\\\"o\\\"\" ],\n            [ [ \"f o o\" ],          \"f' 'o\\\" \\\"o\" ],\n            [ [ \"f'\" , \"o\\\" \\\"o\" ], \"f\\\\' 'o\\\" \\\"o\" ]\n        ];\n\n        assert.expect(checks.length);\n        for (var i = 0; i < checks.length; i++)\n            assert.deepEqual(docker.unquote_cmdline(checks[i][1]), checks[i][0],\n                             \"unquote(\" + String(checks[i][1]) + \") = \" + checks[i][0]);\n\n    });\n\n    QUnit.test(\"render_container_status\", function() {\n        var checks = [\n            [ { Status: \"blah\", Running: true }, \"blah\" ],\n            [ { Running: true, Paused: false }, \"running\" ],\n            [ { Running: false, Paused: true }, \"paused\" ],\n            [ { Restarting: true }, \"restarting\" ],\n            [ { FinishedAt: \"0001-01-01\" }, \"created\" ],\n            [ { FinishedAt: \"2016-11-11\" }, \"exited\" ],\n            [ {  }, \"exited\" ],\n        ];\n\n        assert.expect(checks.length);\n        checks.forEach(function(check) {\n            assert.equal(util.render_container_status(check[0]), check[1],\n                    \"render_container_status = \" + check[1]);\n        });\n    });\n\n    QUnit.start();\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/docker/test-docker.js\n// module id = 0\n// module chunks = 2","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 6\n// module chunks = 0 1 2","module.exports = cockpit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cockpit\"\n// module id = 7\n// module chunks = 0 1 2","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2014 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    var $ = require(\"jquery\");\n    var cockpit = require(\"cockpit\");\n\n    var Terminal = require(\"term\");\n\n    var docker = { };\n\n    function docker_debug() {\n        if (window.debugging == \"all\" || window.debugging == \"docker\")\n            console.debug.apply(console, arguments);\n    }\n\n    /* This doesn't create a channel until a request */\n    var http = cockpit.http(\"/var/run/docker.sock\", { superuser: true });\n\n    /**\n     * pull:\n     * @repo: the image repository\n     * @tag: the tag to pull\n     *\n     * Pull an image from the registry. If no @tag is specified\n     * then the \"latest\" tag will be used.\n     *\n     * A Promise is returned. It completes when the image has\n     * been downloaded, or fails with an error. The progress callbacks\n     * on the download are called with status updates from docker.\n     */\n    docker.pull = function pull(repo, tag, registry) {\n        var dfd = $.Deferred();\n\n        if (!tag)\n            tag = \"latest\";\n\n        /*\n         * Although in theory the docker images/create API has\n         * a registry parameter, when you use it the resulting\n         * image is labeled completely wrong.\n         */\n\n        if (registry)\n            repo = registry + \"/\" + repo;\n\n        docker_debug(\"pulling: \" + repo + \":\" + tag);\n\n        var options = {\n            method: \"POST\",\n            path: \"/v1.12/images/create\",\n            body: \"\",\n            params: {\n                fromImage: repo,\n                tag: tag\n            }\n        };\n\n        var error;\n\n        var buffer = \"\";\n        var req = http.request(options)\n            .stream(function(data) {\n                buffer += data;\n                var next = docker.json_skip(buffer, 0);\n                if (next === 0)\n                    return; /* not enough data yet */\n                var progress = JSON.parse(buffer.substring(0, next));\n                buffer = buffer.substring(next);\n                if (progress.error)\n                    error = progress.error;\n                else if (progress.status)\n                    dfd.notify(progress.status, progress);\n            })\n            .fail(function(ex) {\n                dfd.reject(ex);\n            })\n            .done(function() {\n                if (error)\n                    dfd.reject(new Error(error));\n                else\n                    dfd.resolve();\n            });\n\n        var promise = dfd.promise();\n        promise.cancel = function cancel() {\n            req.close(\"cancelled\");\n            return promise;\n        };\n\n        return promise;\n    };\n\n    /* Gets image info locally */\n    docker.inspect_image = function inspect_image(image) {\n        var dfd = $.Deferred();\n        http.get(\"/v1.12/images/\" + encodeURIComponent(image) + \"/json\")\n            .done(function(data) {\n                dfd.resolve(JSON.parse(data));\n            })\n            .fail(function(ex) {\n                dfd.reject(ex);\n            });\n        var promise = dfd.promise();\n        promise.cancel = function cancel() {\n            return promise;\n        };\n        return promise;\n    };\n\n    function DockerTerminal(parent, channel) {\n        var self = this;\n\n        var term = new Terminal({\n            cols: 80,\n            rows: 24,\n            screenKeys: true,\n            useStyle: true,\n            inlineStyle: false,\n            useFocus: false,\n        });\n\n        var enable_input = true;\n        var decoder = cockpit.utf8_decoder();\n        var encoder = cockpit.utf8_encoder();\n\n        /* term.js wants the parent element to build its terminal inside of */\n        parent.empty();\n        term.open(parent[0]);\n\n        /* Shows and hides the cursor */\n        self.typeable = function typeable(yes) {\n            term.cursorHidden = !yes;\n            if (yes)\n                term.showCursor();\n            term.refresh(term.y, term.y);\n            enable_input = yes;\n        };\n\n        self.focus = function focus() {\n            term.focus();\n        };\n\n        /* Allows caller to cleanup nicely */\n        self.close = function close() {\n            term.destroy();\n        };\n\n        if (typeof channel == \"string\") {\n            term.write('\\x1b[31m' + channel + '\\x1b[m\\r\\n');\n            self.close = function() { };\n            self.typeable(false);\n            return self;\n        }\n\n        $(channel).\n            on(\"close\", function(ev, options) {\n                var problem = options.problem || \"disconnected\";\n                term.write('\\x1b[31m' + problem + '\\x1b[m\\r\\n');\n                self.typeable(false);\n                $(channel).off(\"message\");\n                channel = null;\n            });\n\n        self.process = function process(buffer) {\n            term.write(decoder.decode(buffer));\n            return buffer.length;\n        };\n\n        term.on('data', function(data) {\n            /* Send typed input back through channel */\n            if (enable_input && channel)\n                channel.send(encoder.encode(data));\n        });\n\n        return self;\n    }\n\n    function DockerLogs(parent, channel) {\n        var self = this;\n\n        var pre = $(\"<pre>\");\n        parent.empty();\n        parent.append(pre);\n\n        var wait;\n        var writing = [];\n        function write(data) {\n            writing.push(data);\n            if (!wait) {\n                wait = window.setTimeout(function() {\n                    wait = null;\n                    var at_bottom = pre[0].scrollHeight - pre.scrollTop() <= pre.outerHeight();\n                    var span = $(\"<span>\").text(writing.join(\"\"));\n                    writing.length = 0;\n                    pre.append(span);\n                    if (at_bottom)\n                        pre.scrollTop(pre.prop(\"scrollHeight\"));\n                }, 50);\n            }\n        }\n\n        /* Just display the failure */\n        if (typeof channel == \"string\") {\n            write(channel);\n            self.close = function() { };\n            return self;\n        }\n\n        channel.control({ batch: 16384, latency: 50 });\n\n        var decoder = cockpit.utf8_decoder(false);\n\n        self.process = function process(buffer) {\n            var at = 0;\n            var size, block;\n            var length = buffer.length;\n            while (true) {\n                if (length < at + 8)\n                    return at; /* more data */\n\n                size = ((buffer[at + 4] & 0xFF) << 24) | ((buffer[at + 5] & 0xFF) << 16) |\n                       ((buffer[at + 6] & 0xFF) << 8) | (buffer[at + 7] & 0xFF);\n\n                if (length < at + 8 + size)\n                    return at; /* more data */\n\n                /* Output the data */\n                if (buffer.subarray)\n                    block = buffer.subarray(at + 8, at + 8 + size);\n                else\n                    block = buffer.slice(at + 8, at + 8 + size);\n                write(decoder.decode(block, { stream: true }));\n                at += 8 + size;\n            }\n\n            return at;\n        };\n\n        self.focus = function() {\n            /* Nothing to do */\n        };\n\n        self.close = function() {\n            /* Nothing to do */\n        };\n\n        /*\n         * A raw channel over which we speak Docker's even stranger /logs\n         * protocol. It starts with a HTTP GET, and then quickly\n         * degenerates into a stream with framing.\n         */\n        $(channel).\n            on(\"close\", function(ev, options) {\n                write(options.reason || \"disconnected\");\n                $(channel).off();\n                channel = null;\n            });\n\n        return self;\n    }\n\n    function sequence_find(seq, find) {\n        var f, fl = find.length;\n        var s, sl = (seq.length - fl) + 1;\n        for (s = 0; s < sl; s++) {\n            for (f = 0; f < fl; f++) {\n                if (seq[s + f] !== find[f])\n                    break;\n            }\n            if (f == fl)\n                return s;\n        }\n\n        return -1;\n    }\n\n    /**\n     * docker.console(container_id, options)\n     * docker.console(container_id, command, options):\n     *\n     * @container_id: full docker container id\n     * @command: optional array of command argv to exec\n     * @options: other options, including 'tty' true/false\n     *\n     * Creates a docker console/logs element and returns it. If options.tty is true\n     * then creates a full term.js terminal. Otherwise creates a logs output\n     * area. If options.tty is null/undefined autodetect whether to use tty or not.\n     *\n     * The returned element needs to have its .connect() method called to start the\n     * connection process.\n     *\n     * The returned value is an HTMLElement with the following extra methods/properties:\n     *\n     * cons.connected: true/false if connected or not\n     * cons.connect(): connect or reconnect\n     * cons.typeable(true/false): set typeable state or not, only applies to console\n     * cons.close(): disconnect and close\n     */\n    docker.console = function console_(container_id, command, options) {\n        var self = $(\"<div>\").addClass(\"console-ct\");\n        self.connected = false;\n        var want_typeable = false;\n        var focused = false;\n        var channel = null;\n        var view = null;\n        var exec;\n        var tty;\n\n        /* If there's a command, then we have to exec it in the container */\n        if (Array.isArray(command)) {\n            if (!options)\n                options = { };\n\n            /* When executing default to having a tty */\n            tty = options.tty;\n            if (tty === undefined || tty === null)\n                tty = true;\n\n            exec = {\n                method: \"POST\",\n                path: \"/v1.15/containers/\" + encodeURIComponent(container_id) + \"/exec\",\n                headers: { \"Content-Type\": \"application/json\" },\n                body: JSON.stringify({\n                    \"AttachStdin\": tty,\n                    \"AttachStdout\": true,\n                    \"AttachStderr\": true,\n                    \"Tty\": tty,\n                    \"Cmd\": command\n                })\n            };\n\n            docker_debug(\"preparing to exec:\", command);\n\n        /* Just connect to the main container console */\n        } else {\n            docker_debug(\"preparing to attach\");\n            options = command || { };\n            tty = options.tty;\n        }\n\n        delete options.tty;\n\n        /* A promise being prepared */\n        var prep = null;\n\n        function failure(message) {\n            if (tty)\n                view = new DockerTerminal(self, message);\n            else\n                view = new DockerLogs(self, message);\n        }\n\n        function prepare() {\n            self.connected = false;\n\n            /* Nothing to prepare? Connect diretly to container? */\n            if (!exec) {\n                if (tty === false) {\n                    return attach(\"GET /v1.15/containers/\" + encodeURIComponent(container_id) +\n                                  \"/logs?follow=1&stdout=1&stderr=1&tail=1000&timestamps=0 HTTP/1.0\\r\\n\" +\n                                  \"Content-Length: 0\\r\\n\\r\\n\");\n                } else {\n                    return attach(\"POST /v1.15/containers/\" + encodeURIComponent(container_id) +\n                                  \"/attach?logs=1&stream=1&stdin=1&stdout=1&stderr=1 HTTP/1.0\\r\\n\" +\n                                  \"Content-Length: 0\\r\\n\\r\\n\");\n                }\n            }\n\n            /* Prepare the command to be executed */\n            var prep = http.request($.extend({ }, options, exec))\n                .always(function() {\n                    prep = null;\n                })\n                .done(function(data) {\n                    var resp = JSON.parse(data);\n                    var body = JSON.stringify({ Detach: false, Tty: tty });\n                    return attach(\"POST /v1.15/exec/\" + encodeURIComponent(resp.Id) +\n                                  \"/start HTTP/1.0\\r\\n\" +\n                                  \"Content-Length: \" + body.length +\"\\r\\n\\r\\n\" + body);\n                })\n                .fail(function(ex) {\n                    failure(ex.message);\n                });\n        }\n\n        /*\n         * A raw channel over which we speak Docker's strange /attach\n         * protocol. It starts with a HTTP POST, and then quickly\n         * degenerates into a stream sometimes binary.\n         *\n         * See: http://docs.docker.io/en/latest/reference/api/docker_remote_api_v1.8/#attach-to-a-container\n         */\n        function attach(request) {\n            if (view)\n                view.close();\n            view = null;\n\n            var opts = $.extend({ }, options, {\n                \"payload\": \"stream\",\n                \"unix\": \"/var/run/docker.sock\",\n                \"superuser\": true,\n                \"binary\": true\n            });\n\n            channel = cockpit.channel(opts);\n\n            docker_debug(request);\n            channel.send(request);\n\n            $(channel).\n                on(\"close.attach\", function(ev, options) {\n                    docker_debug(container_id + \": console close: \", options);\n                    $(channel).off(\".attach\");\n                    channel = null;\n\n                    /*\n                     * HACK: If we're disconnected unceremoniously, try\n                     * and reconnect. Certain versions of docker do this\n                     * during container startup.\n                     */\n                    if (self.connected && !options.problem) {\n                        window.setTimeout(function() {\n                            if (self.connected && !channel)\n                                attach(request);\n                        }, 1000);\n                    }\n                });\n\n            var headers = null;\n            var buffer = channel.buffer();\n            buffer.callback = function(data) {\n                var ret = 0;\n                var pos = 0;\n                var parts;\n\n                /* Look for end of headers first */\n                if (headers === null) {\n                    pos = sequence_find(data, [ 13, 10, 13, 10 ]);\n                    if (pos == -1)\n                        return ret;\n\n                    if (data.subarray)\n                        headers = cockpit.utf8_decoder().decode(data.subarray(0, pos));\n                    else\n                        headers = cockpit.utf8_decoder().decode(data.slice(0, pos));\n                    docker_debug(container_id + \": console headers: \", headers);\n\n                    parts = headers.split(\"\\r\\n\", 1)[0].split(\" \");\n                    if (parts[1] != \"200\") {\n                        failure(parts.slice(2).join(\" \"));\n                        buffer.callback = null;\n                        return;\n                    } else if (data.subarray) {\n                        data = data.subarray(pos + 4);\n                        ret += pos + 4;\n                    } else {\n                        data = data.slice(pos + 4);\n                        ret += pos + 4;\n                    }\n                }\n\n                /* We need at least two bytes to determine stream type */\n                if (tty === undefined || tty === null) {\n                    if (data.length < 2)\n                        return ret;\n                    tty = !((data[0] === 0 || data[0] === 1 || data[0] === 2) && data[1] === 0);\n                    docker_debug(container_id + \": mode tty: \" + tty);\n                }\n\n                if (tty)\n                    view = new DockerTerminal(self, channel);\n                else\n                    view = new DockerLogs(self, channel);\n                self.typeable(want_typeable);\n                self.connected = true;\n\n                buffer.callback = view.process;\n                var consumed = view.process(data);\n                return ret + consumed;\n            };\n        }\n\n        /* Allows caller to cleanup nicely */\n        self.close = function close(problem) {\n            self.connected = false;\n            if (prep)\n                prep.close(problem);\n            if (channel)\n                channel.close(problem);\n            if (view) {\n                view.close();\n                view = null;\n            }\n        };\n\n        /* Allows the curser to restart the attach request */\n        self.connect = function connect() {\n            self.close(\"disconnected\");\n            prepare();\n        };\n\n        function update_typeable() {\n            if (view && view.typeable)\n                view.typeable(want_typeable && focused);\n        }\n\n        $(self)\n            .on(\"focusin\", function() {\n                focused = true;\n                update_typeable();\n                view.focus();\n            })\n            .on(\"focusout\", function() {\n                focused = false;\n                update_typeable();\n            });\n\n        self.typeable = function typeable(yes) {\n            want_typeable = yes;\n            update_typeable();\n        };\n\n        return self;\n    };\n\n    /*\n     * docker.json_skip(string, pos = 0)\n     * @string: the JSON string\n     * @pos: optionally, the starting position in string, or zero\n     *\n     * Sometimes docker returns multiple JSON strings concatenated.\n     *\n     * Skip over one item in a stream of JSON things, like objects,\n     * numbers, strings, etc... The things can be separated by whitespace\n     * or in some cases (strings, objects, arrays) be right next to\n     * each other.\n     *\n     * We do not validate the JSON. It's assumed that a later parse\n     * will check for validity.\n     *\n     * Returns: the number of characters to skip over next json block\n     * or zero if no complete json block found.\n     */\n\n    docker.json_skip = function(string, pos) {\n        var any = false;\n        var end = string.length;\n        var depth = 0;\n        var inword = false;\n        var instr = false;\n        var endword = \" \\t\\n\\r\\v[{}]\\\"\";\n        var spaces = \" \\t\\n\\r\\v\";\n        var ch;\n\n        if (pos === undefined)\n            pos = 0;\n\n        for (end = string.length; pos != end; pos++) {\n            if (any && depth <= 0)\n                break; /* skipped over one thing */\n\n            ch = string[pos];\n            if (inword) {\n                if (endword.indexOf(ch) != -1) {\n                    inword = false;\n                    depth--;\n                    pos--;\n                }\n                continue;\n            }\n\n            if (spaces.indexOf(ch) != -1)\n                continue;\n\n            if (instr) {\n                switch (ch) {\n                case '\\\\':\n                    if (pos + 1 == end)\n                        continue;\n                    pos++; /* skip char after bs */\n                    break;\n                case '\"':\n                    instr = false;\n                    depth--;\n                    break;\n                default:\n                    break;\n                }\n                continue;\n            }\n\n            any = true;\n            switch(ch) {\n            case '[':\n            case '{':\n                depth++;\n                break;\n            case ']':\n            case '}':\n                depth--;\n                break;\n            case '\"':\n                instr = true;\n                depth++;\n                break;\n            default:\n                inword = true;\n                depth++;\n                break;\n            }\n        }\n\n        if (inword && depth == 1)\n            depth = 0;\n\n        /* No complete JSON blocks found */\n        if (!any || depth > 0)\n            return 0;\n\n        /* The position at which we found th eend */\n        return pos;\n    };\n\n    /*\n     * The functions docker.quote_cmdline and docker.unquote_cmdline implement\n     * a simple shell-like quoting syntax.  They are used when letting the\n     * user edit a sequence of words as a single string.\n     *\n     * When parsing, words are separated by whitespace.  Single and double\n     * quotes can be used to protect a sequence of characters that\n     * contains whitespace or the other quote character.  A backslash can\n     * be used to protect any character.  Quotes can appear in the middle\n     * of a word.\n     */\n\n    docker.quote_cmdline = function quote_cmdline(words) {\n        words = words || [];\n\n        function is_whitespace(c) {\n            return c == ' ';\n        }\n\n        function quote(word) {\n            var text = \"\";\n            var quote_char = \"\";\n            var i;\n            for (i = 0; i < word.length; i++) {\n                if (word[i] == '\\\\' || word[i] == quote_char)\n                    text += '\\\\';\n                else if (quote_char === \"\") {\n                    if (word[i] == \"'\" || is_whitespace(word[i]))\n                        quote_char = '\"';\n                    else if (word[i] == '\"')\n                        quote_char = \"'\";\n                }\n                text += word[i];\n            }\n\n            return quote_char + text + quote_char;\n        }\n\n        return words.map(quote).join(' ');\n    };\n\n    docker.unquote_cmdline = function unquote_cmdline(text) {\n        var words = [ ];\n        var next;\n\n        function is_whitespace(c) {\n            return c == ' ';\n        }\n\n        function skip_whitespace() {\n            while (next < text.length && is_whitespace(text[next]))\n                next++;\n        }\n\n        function parse_word() {\n            var word = \"\";\n            var quote_char = null;\n\n            while (next < text.length) {\n                if (text[next] == '\\\\') {\n                    next++;\n                    if (next < text.length) {\n                        word += text[next];\n                    }\n                } else if (text[next] == quote_char) {\n                    quote_char = null;\n                } else if (quote_char) {\n                    word += text[next];\n                } else if (text[next] == '\"' || text[next] == \"'\") {\n                    quote_char = text[next];\n                } else if (is_whitespace(text[next])) {\n                    break;\n                } else\n                    word += text[next];\n                next++;\n            }\n            return word;\n        }\n\n        next = 0;\n        skip_whitespace();\n        while (next < text.length) {\n            words.push(parse_word());\n            skip_whitespace();\n        }\n\n        return words;\n    };\n\n    var byte_suffixes = [ null, \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\" ];\n\n    docker.bytes_from_format = function bytes_from_format(formatted, separate) {\n        var factor = 1024;\n\n        if (separate === undefined)\n            separate = \" \";\n\n        var format = formatted.split(separate).pop().toUpperCase();\n        var spot = byte_suffixes.indexOf(format);\n\n        /* TODO: Make the decimal separator translatable */\n        var num = parseFloat(formatted);\n\n        if (spot > 0 && !isNaN(num))\n            return num * Math.pow(factor, spot);\n        return num;\n    };\n\n    /*\n     * Returns the short id of a docker container or image id.\n     */\n    docker.truncate_id = function (id) {\n        var c = id.indexOf(':');\n        if (c >= 0)\n            id = id.slice(c + 1);\n        return id.substr(0, 12);\n    };\n\n    module.exports = docker;\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/docker/docker.js\n// module id = 8\n// module chunks = 0 1 2","/**\n * term.js - an xterm emulator\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * https://github.com/chjj/term.js\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n */\n\n;(function() {\n\n/**\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\n'use strict';\n\n/**\n * Shared\n */\n\nvar window = this\n  , document = this.document;\n\n/**\n * EventEmitter\n */\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n}\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  this._events[type] = this._events[type] || [];\n  this._events[type].push(listener);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.removeListener = function(type, listener) {\n  if (!this._events[type]) return;\n\n  var obj = this._events[type]\n    , i = obj.length;\n\n  while (i--) {\n    if (obj[i] === listener || obj[i].listener === listener) {\n      obj.splice(i, 1);\n      return;\n    }\n  }\n};\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  if (this._events[type]) delete this._events[type];\n};\n\nEventEmitter.prototype.once = function(type, listener) {\n  function on() {\n    var args = Array.prototype.slice.call(arguments);\n    this.removeListener(type, on);\n    return listener.apply(this, args);\n  }\n  on.listener = listener;\n  return this.on(type, on);\n};\n\nEventEmitter.prototype.emit = function(type) {\n  if (!this._events[type]) return;\n\n  var args = Array.prototype.slice.call(arguments, 1)\n    , obj = this._events[type]\n    , l = obj.length\n    , i = 0;\n\n  for (; i < l; i++) {\n    obj[i].apply(this, args);\n  }\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  return this._events[type] = this._events[type] || [];\n};\n\n/**\n * Stream\n */\n\nfunction Stream() {\n  EventEmitter.call(this);\n}\n\ninherits(Stream, EventEmitter);\n\nStream.prototype.pipe = function(dest, options) {\n  var src = this\n    , ondata\n    , onerror\n    , onend;\n\n  function unbind() {\n    src.removeListener('data', ondata);\n    src.removeListener('error', onerror);\n    src.removeListener('end', onend);\n    dest.removeListener('error', onerror);\n    dest.removeListener('close', unbind);\n  }\n\n  src.on('data', ondata = function(data) {\n    dest.write(data);\n  });\n\n  src.on('error', onerror = function(err) {\n    unbind();\n    if (!this.listeners('error').length) {\n      throw err;\n    }\n  });\n\n  src.on('end', onend = function() {\n    dest.end();\n    unbind();\n  });\n\n  dest.on('error', onerror);\n  dest.on('close', unbind);\n\n  dest.emit('pipe', src);\n\n  return dest;\n};\n\n/**\n * States\n */\n\nvar normal = 0\n  , escaped = 1\n  , csi = 2\n  , osc = 3\n  , charset = 4\n  , dcs = 5\n  , ignore = 6\n  , UDK = { type: 'udk' };\n\n/**\n * Terminal\n */\n\nfunction Terminal(options) {\n  var self = this;\n\n  if (!(this instanceof Terminal)) {\n    return new Terminal(arguments[0], arguments[1], arguments[2]);\n  }\n\n  Stream.call(this);\n\n  if (typeof options === 'number') {\n    options = {\n      cols: arguments[0],\n      rows: arguments[1],\n      handler: arguments[2]\n    };\n  }\n\n  options = options || {};\n\n  each(keys(Terminal.defaults), function(key) {\n    if (options[key] == null) {\n      options[key] = Terminal.options[key];\n      // Legacy:\n      if (Terminal[key] !== Terminal.defaults[key]) {\n        options[key] = Terminal[key];\n      }\n    }\n    self[key] = options[key];\n  });\n\n  if (options.colors.length === 8) {\n    options.colors = options.colors.concat(Terminal._colors.slice(8));\n  } else if (options.colors.length === 16) {\n    options.colors = options.colors.concat(Terminal._colors.slice(16));\n  } else if (options.colors.length === 10) {\n    options.colors = options.colors.slice(0, -2).concat(\n      Terminal._colors.slice(8, -2), options.colors.slice(-2));\n  } else if (options.colors.length === 18) {\n    options.colors = options.colors.slice(0, -2).concat(\n      Terminal._colors.slice(16, -2), options.colors.slice(-2));\n  }\n  this.colors = options.colors;\n\n  this.options = options;\n\n  // this.context = options.context || window;\n  // this.document = options.document || document;\n  this.parent = options.body || options.parent\n    || (document ? document.getElementsByTagName('body')[0] : null);\n\n  this.cols = options.cols || options.geometry[0];\n  this.rows = options.rows || options.geometry[1];\n\n  // Act as though we are a node TTY stream:\n  this.setRawMode;\n  this.isTTY = true;\n  this.isRaw = true;\n  this.columns = this.cols;\n  this.rows = this.rows;\n\n  if (options.handler) {\n    this.on('data', options.handler);\n  }\n\n  this.ybase = 0;\n  this.ydisp = 0;\n  this.x = 0;\n  this.y = 0;\n  this.cursorState = 0;\n  this.cursorHidden = false;\n  this.convertEol;\n  this.state = 0;\n  this.queue = '';\n  this.scrollTop = 0;\n  this.scrollBottom = this.rows - 1;\n\n  // modes\n  this.applicationKeypad = false;\n  this.applicationCursor = false;\n  this.originMode = false;\n  this.insertMode = false;\n  this.wraparoundMode = false;\n  this.normal = null;\n\n  // select modes\n  this.prefixMode = false;\n  this.selectMode = false;\n  this.visualMode = false;\n  this.searchMode = false;\n  this.searchDown;\n  this.entry = '';\n  this.entryPrefix = 'Search: ';\n  this._real;\n  this._selected;\n  this._textarea;\n\n  // charset\n  this.charset = null;\n  this.gcharset = null;\n  this.glevel = 0;\n  this.charsets = [null];\n\n  // mouse properties\n  this.decLocator;\n  this.x10Mouse;\n  this.vt200Mouse;\n  this.vt300Mouse;\n  this.normalMouse;\n  this.mouseEvents;\n  this.sendFocus;\n  this.utfMouse;\n  this.sgrMouse;\n  this.urxvtMouse;\n\n  // misc\n  this.element;\n  this.children;\n  this.refreshStart;\n  this.refreshEnd;\n  this.savedX;\n  this.savedY;\n  this.savedCols;\n\n  // stream\n  this.readable = true;\n  this.writable = true;\n\n  this.defAttr = (0 << 18) | (257 << 9) | (256 << 0);\n  this.curAttr = this.defAttr;\n\n  this.params = [];\n  this.currentParam = 0;\n  this.prefix = '';\n  this.postfix = '';\n\n  this.lines = [];\n  var i = this.rows;\n  while (i--) {\n    this.lines.push(this.blankLine());\n  }\n\n  this.tabs;\n  this.setupStops();\n}\n\ninherits(Terminal, Stream);\n\n/**\n * Colors\n */\n\n// Colors 0-15\nTerminal.tangoColors = [\n  // dark:\n  '#2e3436',\n  '#cc0000',\n  '#4e9a06',\n  '#c4a000',\n  '#3465a4',\n  '#75507b',\n  '#06989a',\n  '#d3d7cf',\n  // bright:\n  '#555753',\n  '#ef2929',\n  '#8ae234',\n  '#fce94f',\n  '#729fcf',\n  '#ad7fa8',\n  '#34e2e2',\n  '#eeeeec'\n];\n\nTerminal.xtermColors = [\n  // dark:\n  '#000000', // black\n  '#cd0000', // red3\n  '#00cd00', // green3\n  '#cdcd00', // yellow3\n  '#0000ee', // blue2\n  '#cd00cd', // magenta3\n  '#00cdcd', // cyan3\n  '#e5e5e5', // gray90\n  // bright:\n  '#7f7f7f', // gray50\n  '#ff0000', // red\n  '#00ff00', // green\n  '#ffff00', // yellow\n  '#5c5cff', // rgb:5c/5c/ff\n  '#ff00ff', // magenta\n  '#00ffff', // cyan\n  '#ffffff'  // white\n];\n\n// Colors 0-15 + 16-255\n// Much thanks to TooTallNate for writing this.\nTerminal.colors = (function() {\n  var colors = Terminal.tangoColors.slice()\n    , r = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff]\n    , i;\n\n  // 16-231\n  i = 0;\n  for (; i < 216; i++) {\n    out(r[(i / 36) % 6 | 0], r[(i / 6) % 6 | 0], r[i % 6]);\n  }\n\n  // 232-255 (grey)\n  i = 0;\n  for (; i < 24; i++) {\n    r = 8 + i * 10;\n    out(r, r, r);\n  }\n\n  function out(r, g, b) {\n    colors.push('#' + hex(r) + hex(g) + hex(b));\n  }\n\n  function hex(c) {\n    c = c.toString(16);\n    return c.length < 2 ? '0' + c : c;\n  }\n\n  return colors;\n})();\n\n// Default BG/FG\nTerminal.colors[256] = '#000000';\nTerminal.colors[257] = '#f0f0f0';\n\nTerminal._colors = Terminal.colors.slice();\n\nTerminal.vcolors = (function() {\n  var out = []\n    , colors = Terminal.colors\n    , i = 0\n    , color;\n\n  for (; i < 256; i++) {\n    color = parseInt(colors[i].substring(1), 16);\n    out.push([\n      (color >> 16) & 0xff,\n      (color >> 8) & 0xff,\n      color & 0xff\n    ]);\n  }\n\n  return out;\n})();\n\n/**\n * Options\n */\n\nTerminal.defaults = {\n  colors: Terminal.colors,\n  convertEol: false,\n  termName: 'xterm',\n  geometry: [80, 24],\n  cursorBlink: true,\n  visualBell: false,\n  popOnBell: false,\n  scrollback: 1000,\n  screenKeys: false,\n  debug: false,\n  useStyle: false\n  // programFeatures: false,\n  // focusKeys: false,\n};\n\nTerminal.options = {};\n\neach(keys(Terminal.defaults), function(key) {\n  Terminal[key] = Terminal.defaults[key];\n  Terminal.options[key] = Terminal.defaults[key];\n});\n\n/**\n * Focused Terminal\n */\n\nTerminal.focus = null;\n\nTerminal.prototype.focus = function() {\n  if (Terminal.focus === this) return;\n\n  if (Terminal.focus) {\n    Terminal.focus.blur();\n  }\n\n  if (this.sendFocus) this.send('\\x1b[I');\n  this.showCursor();\n\n  // try {\n  //   this.element.focus();\n  // } catch (e) {\n  //   ;\n  // }\n\n  // this.emit('focus');\n\n  Terminal.focus = this;\n};\n\nTerminal.prototype.blur = function() {\n  if (Terminal.focus !== this) return;\n\n  this.cursorState = 0;\n  this.refresh(this.y, this.y);\n  if (this.sendFocus) this.send('\\x1b[O');\n\n  // try {\n  //   this.element.blur();\n  // } catch (e) {\n  //   ;\n  // }\n\n  // this.emit('blur');\n\n  Terminal.focus = null;\n};\n\n/**\n * Initialize global behavior\n */\n\nTerminal.prototype.initGlobal = function() {\n  var document = this.document;\n\n  Terminal._boundDocs = Terminal._boundDocs || [];\n  if (~indexOf(Terminal._boundDocs, document)) {\n    return;\n  }\n  Terminal._boundDocs.push(document);\n\n  Terminal.bindPaste(document);\n\n  Terminal.bindKeys(document);\n\n  Terminal.bindCopy(document);\n\n  if (this.isMobile) {\n    this.fixMobile(document);\n  }\n\n  if (this.useStyle) {\n    Terminal.insertStyle(document, this.colors[256], this.colors[257]);\n  }\n};\n\n/**\n * Bind to paste event\n */\n\nTerminal.bindPaste = function(document) {\n  // This seems to work well for ctrl-V and middle-click,\n  // even without the contentEditable workaround.\n  var window = document.defaultView;\n  on(window, 'paste', function(ev) {\n    var term = Terminal.focus;\n    if (!term) return;\n    if (ev.clipboardData) {\n      term.send(ev.clipboardData.getData('text/plain'));\n    } else if (term.context.clipboardData) {\n      term.send(term.context.clipboardData.getData('Text'));\n    }\n    // Not necessary. Do it anyway for good measure.\n    term.element.contentEditable = 'inherit';\n    return cancel(ev);\n  });\n};\n\n/**\n * Global Events for key handling\n */\n\nTerminal.bindKeys = function(document) {\n  // We should only need to check `target === body` below,\n  // but we can check everything for good measure.\n  on(document, 'keydown', function(ev) {\n    if (!Terminal.focus) return;\n    var target = ev.target || ev.srcElement;\n    if (!target) return;\n    if (target === Terminal.focus.element\n        || target === Terminal.focus.context\n        || target === Terminal.focus.document\n        || target === Terminal.focus.body\n        || target === Terminal._textarea\n        || target === Terminal.focus.parent) {\n      return Terminal.focus.keyDown(ev);\n    }\n  }, true);\n\n  on(document, 'keypress', function(ev) {\n    if (!Terminal.focus) return;\n    var target = ev.target || ev.srcElement;\n    if (!target) return;\n    if (target === Terminal.focus.element\n        || target === Terminal.focus.context\n        || target === Terminal.focus.document\n        || target === Terminal.focus.body\n        || target === Terminal._textarea\n        || target === Terminal.focus.parent) {\n      return Terminal.focus.keyPress(ev);\n    }\n  }, true);\n\n  // If we click somewhere other than a\n  // terminal, unfocus the terminal.\n  on(document, 'mousedown', function(ev) {\n    if (!Terminal.focus) return;\n\n    var el = ev.target || ev.srcElement;\n    if (!el) return;\n\n    do {\n      if (el === Terminal.focus.element) return;\n    } while (el = el.parentNode);\n\n    Terminal.focus.blur();\n  });\n};\n\n/**\n * Copy Selection w/ Ctrl-C (Select Mode)\n */\n\nTerminal.bindCopy = function(document) {\n  var window = document.defaultView;\n\n  // if (!('onbeforecopy' in document)) {\n  //   // Copies to *only* the clipboard.\n  //   on(window, 'copy', function fn(ev) {\n  //     var term = Terminal.focus;\n  //     if (!term) return;\n  //     if (!term._selected) return;\n  //     var text = term.grabText(\n  //       term._selected.x1, term._selected.x2,\n  //       term._selected.y1, term._selected.y2);\n  //     term.emit('copy', text);\n  //     ev.clipboardData.setData('text/plain', text);\n  //   });\n  //   return;\n  // }\n\n  // Copies to primary selection *and* clipboard.\n  // NOTE: This may work better on capture phase,\n  // or using the `beforecopy` event.\n  on(window, 'copy', function(ev) {\n    var term = Terminal.focus;\n    if (!term) return;\n    if (!term._selected) return;\n    var textarea = term.getCopyTextarea();\n    var text = term.grabText(\n      term._selected.x1, term._selected.x2,\n      term._selected.y1, term._selected.y2);\n    term.emit('copy', text);\n    textarea.focus();\n    textarea.textContent = text;\n    textarea.value = text;\n    textarea.setSelectionRange(0, text.length);\n    setTimeout(function() {\n      term.element.focus();\n      term.focus();\n    }, 1);\n  });\n};\n\n/**\n * Fix Mobile\n */\n\nTerminal.prototype.fixMobile = function(document) {\n  var self = this;\n\n  var textarea = document.createElement('textarea');\n  textarea.style.position = 'absolute';\n  textarea.style.left = '-32000px';\n  textarea.style.top = '-32000px';\n  textarea.style.width = '0px';\n  textarea.style.height = '0px';\n  textarea.style.opacity = '0';\n  textarea.style.backgroundColor = 'transparent';\n  textarea.style.borderStyle = 'none';\n  textarea.style.outlineStyle = 'none';\n  textarea.autocapitalize = 'none';\n  textarea.autocorrect = 'off';\n\n  document.getElementsByTagName('body')[0].appendChild(textarea);\n\n  Terminal._textarea = textarea;\n\n  setTimeout(function() {\n    textarea.focus();\n  }, 1000);\n\n  if (this.isAndroid) {\n    on(textarea, 'change', function() {\n      var value = textarea.textContent || textarea.value;\n      textarea.value = '';\n      textarea.textContent = '';\n      self.send(value + '\\r');\n    });\n  }\n};\n\n/**\n * Insert a default style\n */\n\nTerminal.insertStyle = function(document, bg, fg) {\n  var style = document.getElementById('term-style');\n  if (style) return;\n\n  var head = document.getElementsByTagName('head')[0];\n  if (!head) return;\n\n  var style = document.createElement('style');\n  style.id = 'term-style';\n\n  // textContent doesn't work well with IE for <style> elements.\n  style.innerHTML = ''\n    + '.terminal {\\n'\n    + '  float: left;\\n'\n    + '  border: ' + bg + ' solid 5px;\\n'\n    + '  font-family: \"DejaVu Sans Mono\", \"Liberation Mono\", monospace;\\n'\n    + '  font-size: 11px;\\n'\n    + '  color: ' + fg + ';\\n'\n    + '  background: ' + bg + ';\\n'\n    + '}\\n'\n    + '\\n'\n    + '.terminal-cursor {\\n'\n    + '  color: ' + bg + ';\\n'\n    + '  background: ' + fg + ';\\n'\n    + '}\\n';\n\n  var out = '';\n  each(Terminal.colors, function(color, i) {\n    if (i === 256) {\n      out += '\\n.term-bg-color-default { background-color: ' + color + '; }';\n    }\n    if (i === 257) {\n      out += '\\n.term-fg-color-default { color: ' + color + '; }';\n    }\n    out += '\\n.term-bg-color-' + i + ' { background-color: ' + color + '; }';\n    out += '\\n.term-fg-color-' + i + ' { color: ' + color + '; }';\n  });\n  out += '\\n.term-bold { font-weight: bold; }'\n  out += '\\n.term-underline { text-decoration: underline; }'\n  out += '\\n.term-blink { text-decoration: blink; }'\n  out += '\\n.term-hidden { visibility: hidden; }'\n  style.innerHTML += out + '\\n';\n\n  head.insertBefore(style, head.firstChild);\n};\n\n/**\n * Open Terminal\n */\n\nTerminal.prototype.open = function(parent) {\n  var self = this\n    , i = 0\n    , div;\n\n  this.parent = parent || this.parent;\n\n  if (!this.parent) {\n    throw new Error('Terminal requires a parent element.');\n  }\n\n  // Grab global elements.\n  this.context = this.parent.ownerDocument.defaultView;\n  this.document = this.parent.ownerDocument;\n  this.body = this.document.getElementsByTagName('body')[0];\n\n  // Parse user-agent strings.\n  if (this.context.navigator && this.context.navigator.userAgent) {\n    this.isMac = !!~this.context.navigator.userAgent.indexOf('Mac');\n    this.isIpad = !!~this.context.navigator.userAgent.indexOf('iPad');\n    this.isIphone = !!~this.context.navigator.userAgent.indexOf('iPhone');\n    this.isAndroid = !!~this.context.navigator.userAgent.indexOf('Android');\n    this.isMobile = this.isIpad || this.isIphone || this.isAndroid;\n    this.isMSIE = !!~this.context.navigator.userAgent.indexOf('MSIE');\n  }\n\n  // Create our main terminal element.\n  this.element = this.document.createElement('div');\n  this.element.className = 'terminal';\n  this.element.style.outline = 'none';\n  this.element.setAttribute('tabindex', 0);\n  this.element.setAttribute('spellcheck', 'false');\n  this.element.style.backgroundColor = this.colors[256];\n  this.element.style.color = this.colors[257];\n\n  // Create the lines for our terminal.\n  this.children = [];\n  for (; i < this.rows; i++) {\n    div = this.document.createElement('div');\n    this.element.appendChild(div);\n    this.children.push(div);\n  }\n  this.parent.appendChild(this.element);\n\n  // Draw the screen.\n  this.refresh(0, this.rows - 1);\n\n  if (!('useEvents' in this.options) || this.options.useEvents) {\n    // Initialize global actions that\n    // need to be taken on the document.\n    this.initGlobal();\n  }\n\n  if (!('useFocus' in this.options) || this.options.useFocus) {\n    // Ensure there is a Terminal.focus.\n    this.focus();\n\n    // Start blinking the cursor.\n    this.startBlink();\n\n    // Bind to DOM events related\n    // to focus and paste behavior.\n    on(this.element, 'focus', function() {\n      self.focus();\n      if (self.isMobile) {\n        Terminal._textarea.focus();\n      }\n    });\n\n    // This causes slightly funky behavior.\n    // on(this.element, 'blur', function() {\n    //   self.blur();\n    // });\n\n    on(this.element, 'mousedown', function() {\n      self.focus();\n    });\n\n    // Clickable paste workaround, using contentEditable.\n    // This probably shouldn't work,\n    // ... but it does. Firefox's paste\n    // event seems to only work for textareas?\n    on(this.element, 'mousedown', function(ev) {\n      var button = ev.button != null\n        ? +ev.button\n        : ev.which != null\n          ? ev.which - 1\n          : null;\n\n      // Does IE9 do this?\n      if (self.isMSIE) {\n        button = button === 1 ? 0 : button === 4 ? 1 : button;\n      }\n\n      if (button !== 2) return;\n\n      self.element.contentEditable = 'true';\n      setTimeout(function() {\n        self.element.contentEditable = 'inherit'; // 'false';\n      }, 1);\n    }, true);\n  }\n\n  if (!('useMouse' in this.options) || this.options.useMouse) {\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  // this.emit('open');\n\n  if (!('useFocus' in this.options) || this.options.useFocus) {\n      // This can be useful for pasting,\n      // as well as the iPad fix.\n      setTimeout(function() {\n        self.element.focus();\n      }, 100);\n  }\n\n  // Figure out whether boldness affects\n  // the character width of monospace fonts.\n  if (Terminal.brokenBold == null) {\n    Terminal.brokenBold = isBoldBroken(this.document);\n  }\n\n  this.emit('open');\n};\n\nTerminal.prototype.setRawMode = function(value) {\n  this.isRaw = !!value;\n};\n\n// XTerm mouse events\n// http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#Mouse%20Tracking\n// To better understand these\n// the xterm code is very helpful:\n// Relevant files:\n//   button.c, charproc.c, misc.c\n// Relevant functions in xterm/button.c:\n//   BtnCode, EmitButtonCode, EditorButton, SendMousePosition\nTerminal.prototype.bindMouse = function() {\n  var el = this.element\n    , self = this\n    , pressed = 32;\n\n  var wheelEvent = 'onmousewheel' in this.context\n    ? 'mousewheel'\n    : 'DOMMouseScroll';\n\n  // mouseup, mousedown, mousewheel\n  // left click: ^[[M 3<^[[M#3<\n  // mousewheel up: ^[[M`3>\n  function sendButton(ev) {\n    var button\n      , pos;\n\n    // get the xterm-style button\n    button = getButton(ev);\n\n    // get mouse coordinates\n    pos = getCoords(ev);\n    if (!pos) return;\n\n    sendEvent(button, pos);\n\n    switch (ev.type) {\n      case 'mousedown':\n        pressed = button;\n        break;\n      case 'mouseup':\n        // keep it at the left\n        // button, just in case.\n        pressed = 32;\n        break;\n      case wheelEvent:\n        // nothing. don't\n        // interfere with\n        // `pressed`.\n        break;\n    }\n  }\n\n  // motion example of a left click:\n  // ^[[M 3<^[[M@4<^[[M@5<^[[M@6<^[[M@7<^[[M#7<\n  function sendMove(ev) {\n    var button = pressed\n      , pos;\n\n    pos = getCoords(ev);\n    if (!pos) return;\n\n    // buttons marked as motions\n    // are incremented by 32\n    button += 32;\n\n    sendEvent(button, pos);\n  }\n\n  // encode button and\n  // position to characters\n  function encode(data, ch) {\n    if (!self.utfMouse) {\n      if (ch === 255) return data.push(0);\n      if (ch > 127) ch = 127;\n      data.push(ch);\n    } else {\n      if (ch === 2047) return data.push(0);\n      if (ch < 127) {\n        data.push(ch);\n      } else {\n        if (ch > 2047) ch = 2047;\n        data.push(0xC0 | (ch >> 6));\n        data.push(0x80 | (ch & 0x3F));\n      }\n    }\n  }\n\n  // send a mouse event:\n  // regular/utf8: ^[[M Cb Cx Cy\n  // urxvt: ^[[ Cb ; Cx ; Cy M\n  // sgr: ^[[ Cb ; Cx ; Cy M/m\n  // vt300: ^[[ 24(1/3/5)~ [ Cx , Cy ] \\r\n  // locator: CSI P e ; P b ; P r ; P c ; P p & w\n  function sendEvent(button, pos) {\n    // self.emit('mouse', {\n    //   x: pos.x - 32,\n    //   y: pos.x - 32,\n    //   button: button\n    // });\n\n    if (self.vt300Mouse) {\n      // NOTE: Unstable.\n      // http://www.vt100.net/docs/vt3xx-gp/chapter15.html\n      button &= 3;\n      pos.x -= 32;\n      pos.y -= 32;\n      var data = '\\x1b[24';\n      if (button === 0) data += '1';\n      else if (button === 1) data += '3';\n      else if (button === 2) data += '5';\n      else if (button === 3) return;\n      else data += '0';\n      data += '~[' + pos.x + ',' + pos.y + ']\\r';\n      self.send(data);\n      return;\n    }\n\n    if (self.decLocator) {\n      // NOTE: Unstable.\n      button &= 3;\n      pos.x -= 32;\n      pos.y -= 32;\n      if (button === 0) button = 2;\n      else if (button === 1) button = 4;\n      else if (button === 2) button = 6;\n      else if (button === 3) button = 3;\n      self.send('\\x1b['\n        + button\n        + ';'\n        + (button === 3 ? 4 : 0)\n        + ';'\n        + pos.y\n        + ';'\n        + pos.x\n        + ';'\n        + (pos.page || 0)\n        + '&w');\n      return;\n    }\n\n    if (self.urxvtMouse) {\n      pos.x -= 32;\n      pos.y -= 32;\n      pos.x++;\n      pos.y++;\n      self.send('\\x1b[' + button + ';' + pos.x + ';' + pos.y + 'M');\n      return;\n    }\n\n    if (self.sgrMouse) {\n      pos.x -= 32;\n      pos.y -= 32;\n      self.send('\\x1b[<'\n        + ((button & 3) === 3 ? button & ~3 : button)\n        + ';'\n        + pos.x\n        + ';'\n        + pos.y\n        + ((button & 3) === 3 ? 'm' : 'M'));\n      return;\n    }\n\n    var data = [];\n\n    encode(data, button);\n    encode(data, pos.x);\n    encode(data, pos.y);\n\n    self.send('\\x1b[M' + String.fromCharCode.apply(String, data));\n  }\n\n  function getButton(ev) {\n    var button\n      , shift\n      , meta\n      , ctrl\n      , mod;\n\n    // two low bits:\n    // 0 = left\n    // 1 = middle\n    // 2 = right\n    // 3 = release\n    // wheel up/down:\n    // 1, and 2 - with 64 added\n    switch (ev.type) {\n      case 'mousedown':\n        button = ev.button != null\n          ? +ev.button\n          : ev.which != null\n            ? ev.which - 1\n            : null;\n\n        if (self.isMSIE) {\n          button = button === 1 ? 0 : button === 4 ? 1 : button;\n        }\n        break;\n      case 'mouseup':\n        button = 3;\n        break;\n      case 'DOMMouseScroll':\n        button = ev.detail < 0\n          ? 64\n          : 65;\n        break;\n      case 'mousewheel':\n        button = ev.wheelDeltaY > 0\n          ? 64\n          : 65;\n        break;\n    }\n\n    // next three bits are the modifiers:\n    // 4 = shift, 8 = meta, 16 = control\n    shift = ev.shiftKey ? 4 : 0;\n    meta = ev.metaKey ? 8 : 0;\n    ctrl = ev.ctrlKey ? 16 : 0;\n    mod = shift | meta | ctrl;\n\n    // no mods\n    if (self.vt200Mouse) {\n      // ctrl only\n      mod &= ctrl;\n    } else if (!self.normalMouse) {\n      mod = 0;\n    }\n\n    // increment to SP\n    button = (32 + (mod << 2)) + button;\n\n    return button;\n  }\n\n  // mouse coordinates measured in cols/rows\n  function getCoords(ev) {\n    var x, y, w, h, el;\n\n    // ignore browsers without pageX for now\n    if (ev.pageX == null) return;\n\n    x = ev.pageX;\n    y = ev.pageY;\n    el = self.element;\n\n    // should probably check offsetParent\n    // but this is more portable\n    while (el && el !== self.document.documentElement) {\n      x -= el.offsetLeft;\n      y -= el.offsetTop;\n      el = 'offsetParent' in el\n        ? el.offsetParent\n        : el.parentNode;\n    }\n\n    // convert to cols/rows\n    w = self.element.clientWidth;\n    h = self.element.clientHeight;\n    x = Math.round((x / w) * self.cols);\n    y = Math.round((y / h) * self.rows);\n\n    // be sure to avoid sending\n    // bad positions to the program\n    if (x < 0) x = 0;\n    if (x > self.cols) x = self.cols;\n    if (y < 0) y = 0;\n    if (y > self.rows) y = self.rows;\n\n    // xterm sends raw bytes and\n    // starts at 32 (SP) for each.\n    x += 32;\n    y += 32;\n\n    return {\n      x: x,\n      y: y,\n      type: ev.type === wheelEvent\n        ? 'mousewheel'\n        : ev.type\n    };\n  }\n\n  on(el, 'mousedown', function(ev) {\n    if (!self.mouseEvents) return;\n\n    // send the button\n    sendButton(ev);\n\n    // ensure focus\n    self.focus();\n\n    // fix for odd bug\n    //if (self.vt200Mouse && !self.normalMouse) {\n    // XXX This seems to break certain programs.\n    // if (self.vt200Mouse) {\n    //   sendButton({ __proto__: ev, type: 'mouseup' });\n    //   return cancel(ev);\n    // }\n\n    // bind events\n    if (self.normalMouse) on(self.document, 'mousemove', sendMove);\n\n    // x10 compatibility mode can't send button releases\n    if (!self.x10Mouse) {\n      on(self.document, 'mouseup', function up(ev) {\n        sendButton(ev);\n        if (self.normalMouse) off(self.document, 'mousemove', sendMove);\n        off(self.document, 'mouseup', up);\n        return cancel(ev);\n      });\n    }\n\n    return cancel(ev);\n  });\n\n  //if (self.normalMouse) {\n  //  on(self.document, 'mousemove', sendMove);\n  //}\n\n  on(el, wheelEvent, function(ev) {\n    if (!self.mouseEvents) return;\n    if (self.x10Mouse\n        || self.vt300Mouse\n        || self.decLocator) return;\n    sendButton(ev);\n    return cancel(ev);\n  });\n\n  // allow mousewheel scrolling in\n  // the shell for example\n  on(el, wheelEvent, function(ev) {\n    if (self.mouseEvents) return;\n    if (self.applicationKeypad) return;\n    if (ev.type === 'DOMMouseScroll') {\n      self.scrollDisp(ev.detail < 0 ? -5 : 5);\n    } else {\n      self.scrollDisp(ev.wheelDeltaY > 0 ? -5 : 5);\n    }\n    return cancel(ev);\n  });\n};\n\n/**\n * Destroy Terminal\n */\n\nTerminal.prototype.close =\nTerminal.prototype.destroySoon =\nTerminal.prototype.destroy = function() {\n  if (this.destroyed) {\n    return;\n  }\n\n  if (this._blink) {\n    clearInterval(this._blink);\n    delete this._blink;\n  }\n\n  this.readable = false;\n  this.writable = false;\n  this.destroyed = true;\n  this._events = {};\n\n  this.handler = function() {};\n  this.write = function() {};\n  this.end = function() {};\n\n  if (this.element.parentNode) {\n    this.element.parentNode.removeChild(this.element);\n  }\n\n  this.emit('end');\n  this.emit('close');\n  this.emit('finish');\n  this.emit('destroy');\n};\n\n/**\n * Rendering Engine\n */\n\n// In the screen buffer, each character\n// is stored as a an array with a character\n// and a 32-bit integer.\n// First value: a utf-16 character.\n// Second value:\n// Next 9 bits: background color (0-511).\n// Next 9 bits: foreground color (0-511).\n// Next 14 bits: a mask for misc. flags:\n//   1=bold, 2=underline, 4=blink, 8=inverse, 16=invisible\n\nTerminal.prototype.refresh = function(start, end) {\n  var x\n    , y\n    , i\n    , line\n    , out\n    , ch\n    , width\n    , data\n    , attr\n    , bg\n    , fg\n    , flags\n    , row\n    , parent;\n\n  if (end - start >= this.rows / 2) {\n    parent = this.element.parentNode;\n    if (parent) parent.removeChild(this.element);\n  }\n\n  width = this.cols;\n  y = start;\n\n  if (end >= this.lines.length) {\n    this.log('`end` is too large. Most likely a bad CSR.');\n    end = this.lines.length - 1;\n  }\n\n  for (; y <= end; y++) {\n    row = y + this.ydisp;\n\n    line = this.lines[row];\n    out = '';\n\n    if (y === this.y\n        && this.cursorState\n        && (this.ydisp === this.ybase || this.selectMode)\n        && !this.cursorHidden) {\n      x = this.x;\n    } else {\n      x = -1;\n    }\n\n    attr = this.defAttr;\n    i = 0;\n\n    for (; i < width; i++) {\n      data = line[i][0];\n      ch = line[i][1];\n\n      if (i === x) data = -1;\n\n      if (data !== attr) {\n        if (attr !== this.defAttr) {\n          out += '</span>';\n        }\n        if (data !== this.defAttr) {\n          if (data === -1) {\n            out += '<span class=\"reverse-video terminal-cursor\">';\n\t  } else {\n            if (this.useStyle) {\n\t      out += '<span class=\"';\n\t    } else {\n              out += '<span style=\"';\n            }\n\n            bg = data & 0x1ff;\n            fg = (data >> 9) & 0x1ff;\n            flags = data >> 18;\n\n            // bold\n            if (flags & 1) {\n              if (!Terminal.brokenBold) {\n\t        if (this.useStyle) {\n\t\t  out += 'term-bold '\n                } else {\n                  out += 'font-weight:bold;';\n                }\n              }\n              // See: XTerm*boldColors\n              if (fg < 8) fg += 8;\n            }\n\n            // underline\n            if (flags & 2) {\n              if (this.useStyle) {\n                out += 'term-underline ';\n\t      } else {\n                out += 'text-decoration:underline;';\n              }\n            }\n\n            // blink\n            if (flags & 4) {\n              if (this.useStyle) {\n                out += 'term-blink ';\n              } else {\n                if (flags & 2) {\n                  out = out.slice(0, -1);\n                  out += ' blink;';\n                } else {\n                  out += 'text-decoration:blink;';\n                }\n              }\n            }\n\n            // inverse\n            if (flags & 8) {\n              bg = (data >> 9) & 0x1ff;\n              fg = data & 0x1ff;\n              // Should inverse just be before the\n              // above boldColors effect instead?\n              if ((flags & 1) && fg < 8) fg += 8;\n            }\n\n            // invisible\n            if (flags & 16) {\n              if (this.useStyle) {\n                out += 'term-hidden ';\n              } else {\n                out += 'visibility:hidden;';\n              }\n            }\n\n            if (bg !== 256) {\n              if (this.useStyle) {\n                out += 'term-bg-color-' + bg + ' ';\n              } else {\n                out += 'background-color:' + this.colors[bg] + ';';\n              }\n            }\n\n            if (fg !== 257) {\n              if (this.useStyle) {\n                out += 'term-fg-color-' + fg + ' ';\n              } else {\n                out += 'color:' + this.colors[fg] + ';';\n              }\n            }\n\n            out += '\">';\n          }\n        }\n      }\n\n      switch (ch) {\n        case '&':\n          out += '&amp;';\n          break;\n        case '<':\n          out += '&lt;';\n          break;\n        case '>':\n          out += '&gt;';\n          break;\n        default:\n          if (ch <= ' ') {\n            out += '&nbsp;';\n          } else {\n            if (isWide(ch)) i++;\n            out += ch;\n          }\n          break;\n      }\n\n      attr = data;\n    }\n\n    if (attr !== this.defAttr) {\n      out += '</span>';\n    }\n\n    this.children[y].innerHTML = out;\n  }\n\n  if (parent) parent.appendChild(this.element);\n};\n\nTerminal.prototype._cursorBlink = function() {\n  if (Terminal.focus !== this) return;\n  this.cursorState ^= 1;\n  this.refresh(this.y, this.y);\n};\n\nTerminal.prototype.showCursor = function() {\n  if (!this.cursorState) {\n    this.cursorState = 1;\n    this.refresh(this.y, this.y);\n  } else {\n    // Temporarily disabled:\n    // this.refreshBlink();\n  }\n};\n\nTerminal.prototype.startBlink = function() {\n  if (!this.cursorBlink) return;\n  var self = this;\n  this._blinker = function() {\n    self._cursorBlink();\n  };\n  this._blink = setInterval(this._blinker, 500);\n};\n\nTerminal.prototype.refreshBlink = function() {\n  if (!this.cursorBlink || !this._blink) return;\n  clearInterval(this._blink);\n  this._blink = setInterval(this._blinker, 500);\n};\n\nTerminal.prototype.scroll = function() {\n  var row;\n\n  if (++this.ybase === this.scrollback) {\n    this.ybase = this.ybase / 2 | 0;\n    this.lines = this.lines.slice(-(this.ybase + this.rows) + 1);\n  }\n\n  this.ydisp = this.ybase;\n\n  // last line\n  row = this.ybase + this.rows - 1;\n\n  // subtract the bottom scroll region\n  row -= this.rows - 1 - this.scrollBottom;\n\n  if (row === this.lines.length) {\n    // potential optimization:\n    // pushing is faster than splicing\n    // when they amount to the same\n    // behavior.\n    this.lines.push(this.blankLine());\n  } else {\n    // add our new line\n    this.lines.splice(row, 0, this.blankLine());\n  }\n\n  if (this.scrollTop !== 0) {\n    if (this.ybase !== 0) {\n      this.ybase--;\n      this.ydisp = this.ybase;\n    }\n    this.lines.splice(this.ybase + this.scrollTop, 1);\n  }\n\n  // this.maxRange();\n  this.updateRange(this.scrollTop);\n  this.updateRange(this.scrollBottom);\n};\n\nTerminal.prototype.scrollDisp = function(disp) {\n  this.ydisp += disp;\n\n  if (this.ydisp > this.ybase) {\n    this.ydisp = this.ybase;\n  } else if (this.ydisp < 0) {\n    this.ydisp = 0;\n  }\n\n  this.refresh(0, this.rows - 1);\n};\n\nTerminal.prototype.write = function(data) {\n  var l = data.length\n    , i = 0\n    , j\n    , cs\n    , ch;\n\n  this.refreshStart = this.y;\n  this.refreshEnd = this.y;\n\n  if (this.ybase !== this.ydisp) {\n    this.ydisp = this.ybase;\n    this.maxRange();\n  }\n\n  // this.log(JSON.stringify(data.replace(/\\x1b/g, '^[')));\n\n  for (; i < l; i++, this.lch = ch) {\n    ch = data[i];\n    switch (this.state) {\n      case normal:\n        switch (ch) {\n          // '\\0'\n          // case '\\0':\n          // case '\\200':\n          //   break;\n\n          // '\\a'\n          case '\\x07':\n            this.bell();\n            break;\n\n          // '\\n', '\\v', '\\f'\n          case '\\n':\n          case '\\x0b':\n          case '\\x0c':\n            if (this.convertEol) {\n              this.x = 0;\n            }\n            // TODO: Implement eat_newline_glitch.\n            // if (this.realX >= this.cols) break;\n            // this.realX = 0;\n            this.y++;\n            if (this.y > this.scrollBottom) {\n              this.y--;\n              this.scroll();\n            }\n            break;\n\n          // '\\r'\n          case '\\r':\n            this.x = 0;\n            break;\n\n          // '\\b'\n          case '\\x08':\n            if (this.x > 0) {\n              this.x--;\n            }\n            break;\n\n          // '\\t'\n          case '\\t':\n            this.x = this.nextStop();\n            break;\n\n          // shift out\n          case '\\x0e':\n            this.setgLevel(1);\n            break;\n\n          // shift in\n          case '\\x0f':\n            this.setgLevel(0);\n            break;\n\n          // '\\e'\n          case '\\x1b':\n            this.state = escaped;\n            break;\n\n          default:\n            // ' '\n            if (ch >= ' ') {\n              if (this.charset && this.charset[ch]) {\n                ch = this.charset[ch];\n              }\n\n              if (this.x >= this.cols) {\n                this.x = 0;\n                this.y++;\n                if (this.y > this.scrollBottom) {\n                  this.y--;\n                  this.scroll();\n                }\n              }\n\n              this.lines[this.y + this.ybase][this.x] = [this.curAttr, ch];\n              this.x++;\n              this.updateRange(this.y);\n\n              if (isWide(ch)) {\n                j = this.y + this.ybase;\n                if (this.cols < 2 || this.x >= this.cols) {\n                  this.lines[j][this.x - 1] = [this.curAttr, ' '];\n                  break;\n                }\n                this.lines[j][this.x] = [this.curAttr, ' '];\n                this.x++;\n              }\n            }\n            break;\n        }\n        break;\n      case escaped:\n        switch (ch) {\n          // ESC [ Control Sequence Introducer ( CSI is 0x9b).\n          case '[':\n            this.params = [];\n            this.currentParam = 0;\n            this.state = csi;\n            break;\n\n          // ESC ] Operating System Command ( OSC is 0x9d).\n          case ']':\n            this.params = [];\n            this.currentParam = 0;\n            this.state = osc;\n            break;\n\n          // ESC P Device Control String ( DCS is 0x90).\n          case 'P':\n            this.params = [];\n            this.prefix = '';\n            this.currentParam = '';\n            this.state = dcs;\n            break;\n\n          // ESC _ Application Program Command ( APC is 0x9f).\n          case '_':\n            this.state = ignore;\n            break;\n\n          // ESC ^ Privacy Message ( PM is 0x9e).\n          case '^':\n            this.state = ignore;\n            break;\n\n          // ESC c Full Reset (RIS).\n          case 'c':\n            this.reset();\n            break;\n\n          // ESC E Next Line ( NEL is 0x85).\n          // ESC D Index ( IND is 0x84).\n          case 'E':\n            this.x = 0;\n            ;\n          case 'D':\n            this.index();\n            break;\n\n          // ESC M Reverse Index ( RI is 0x8d).\n          case 'M':\n            this.reverseIndex();\n            break;\n\n          // ESC % Select default/utf-8 character set.\n          // @ = default, G = utf-8\n          case '%':\n            //this.charset = null;\n            this.setgLevel(0);\n            this.setgCharset(0, Terminal.charsets.US);\n            this.state = normal;\n            i++;\n            break;\n\n          // ESC (,),*,+,-,. Designate G0-G2 Character Set.\n          case '(': // <-- this seems to get all the attention\n          case ')':\n          case '*':\n          case '+':\n          case '-':\n          case '.':\n            switch (ch) {\n              case '(':\n                this.gcharset = 0;\n                break;\n              case ')':\n                this.gcharset = 1;\n                break;\n              case '*':\n                this.gcharset = 2;\n                break;\n              case '+':\n                this.gcharset = 3;\n                break;\n              case '-':\n                this.gcharset = 1;\n                break;\n              case '.':\n                this.gcharset = 2;\n                break;\n            }\n            this.state = charset;\n            break;\n\n          // Designate G3 Character Set (VT300).\n          // A = ISO Latin-1 Supplemental.\n          // Not implemented.\n          case '/':\n            this.gcharset = 3;\n            this.state = charset;\n            i--;\n            break;\n\n          // ESC N\n          // Single Shift Select of G2 Character Set\n          // ( SS2 is 0x8e). This affects next character only.\n          case 'N':\n            break;\n          // ESC O\n          // Single Shift Select of G3 Character Set\n          // ( SS3 is 0x8f). This affects next character only.\n          case 'O':\n            break;\n          // ESC n\n          // Invoke the G2 Character Set as GL (LS2).\n          case 'n':\n            this.setgLevel(2);\n            break;\n          // ESC o\n          // Invoke the G3 Character Set as GL (LS3).\n          case 'o':\n            this.setgLevel(3);\n            break;\n          // ESC |\n          // Invoke the G3 Character Set as GR (LS3R).\n          case '|':\n            this.setgLevel(3);\n            break;\n          // ESC }\n          // Invoke the G2 Character Set as GR (LS2R).\n          case '}':\n            this.setgLevel(2);\n            break;\n          // ESC ~\n          // Invoke the G1 Character Set as GR (LS1R).\n          case '~':\n            this.setgLevel(1);\n            break;\n\n          // ESC 7 Save Cursor (DECSC).\n          case '7':\n            this.saveCursor();\n            this.state = normal;\n            break;\n\n          // ESC 8 Restore Cursor (DECRC).\n          case '8':\n            this.restoreCursor();\n            this.state = normal;\n            break;\n\n          // ESC # 3 DEC line height/width\n          case '#':\n            this.state = normal;\n            i++;\n            break;\n\n          // ESC H Tab Set (HTS is 0x88).\n          case 'H':\n            this.tabSet();\n            break;\n\n          // ESC = Application Keypad (DECPAM).\n          case '=':\n            this.log('Serial port requested application keypad.');\n            this.applicationKeypad = true;\n            this.state = normal;\n            break;\n\n          // ESC > Normal Keypad (DECPNM).\n          case '>':\n            this.log('Switching back to normal keypad.');\n            this.applicationKeypad = false;\n            this.state = normal;\n            break;\n\n          default:\n            this.state = normal;\n            this.error('Unknown ESC control: %s.', ch);\n            break;\n        }\n        break;\n\n      case charset:\n        switch (ch) {\n          case '0': // DEC Special Character and Line Drawing Set.\n            cs = Terminal.charsets.SCLD;\n            break;\n          case 'A': // UK\n            cs = Terminal.charsets.UK;\n            break;\n          case 'B': // United States (USASCII).\n            cs = Terminal.charsets.US;\n            break;\n          case '4': // Dutch\n            cs = Terminal.charsets.Dutch;\n            break;\n          case 'C': // Finnish\n          case '5':\n            cs = Terminal.charsets.Finnish;\n            break;\n          case 'R': // French\n            cs = Terminal.charsets.French;\n            break;\n          case 'Q': // FrenchCanadian\n            cs = Terminal.charsets.FrenchCanadian;\n            break;\n          case 'K': // German\n            cs = Terminal.charsets.German;\n            break;\n          case 'Y': // Italian\n            cs = Terminal.charsets.Italian;\n            break;\n          case 'E': // NorwegianDanish\n          case '6':\n            cs = Terminal.charsets.NorwegianDanish;\n            break;\n          case 'Z': // Spanish\n            cs = Terminal.charsets.Spanish;\n            break;\n          case 'H': // Swedish\n          case '7':\n            cs = Terminal.charsets.Swedish;\n            break;\n          case '=': // Swiss\n            cs = Terminal.charsets.Swiss;\n            break;\n          case '/': // ISOLatin (actually /A)\n            cs = Terminal.charsets.ISOLatin;\n            i++;\n            break;\n          default: // Default\n            cs = Terminal.charsets.US;\n            break;\n        }\n        this.setgCharset(this.gcharset, cs);\n        this.gcharset = null;\n        this.state = normal;\n        break;\n\n      case osc:\n        // OSC Ps ; Pt ST\n        // OSC Ps ; Pt BEL\n        //   Set Text Parameters.\n        if ((this.lch === '\\x1b' && ch === '\\\\') || ch === '\\x07') {\n          if (this.lch === '\\x1b') {\n            if (typeof this.currentParam === 'string') {\n              this.currentParam = this.currentParam.slice(0, -1);\n            } else if (typeof this.currentParam == 'number') {\n              this.currentParam = (this.currentParam - ('\\x1b'.charCodeAt(0) - 48)) / 10;\n            }\n          }\n\n          this.params.push(this.currentParam);\n\n          switch (this.params[0]) {\n            case 0:\n            case 1:\n            case 2:\n              if (this.params[1]) {\n                this.title = this.params[1];\n                this.handleTitle(this.title);\n              }\n              break;\n            case 3:\n              // set X property\n              break;\n            case 4:\n            case 5:\n              // change dynamic colors\n              break;\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n            case 19:\n              // change dynamic ui colors\n              break;\n            case 46:\n              // change log file\n              break;\n            case 50:\n              // dynamic font\n              break;\n            case 51:\n              // emacs shell\n              break;\n            case 52:\n              // manipulate selection data\n              break;\n            case 104:\n            case 105:\n            case 110:\n            case 111:\n            case 112:\n            case 113:\n            case 114:\n            case 115:\n            case 116:\n            case 117:\n            case 118:\n              // reset colors\n              break;\n          }\n\n          this.params = [];\n          this.currentParam = 0;\n          this.state = normal;\n        } else {\n          if (!this.params.length) {\n            if (ch >= '0' && ch <= '9') {\n              this.currentParam =\n                this.currentParam * 10 + ch.charCodeAt(0) - 48;\n            } else if (ch === ';') {\n              this.params.push(this.currentParam);\n              this.currentParam = '';\n            }\n          } else {\n            this.currentParam += ch;\n          }\n        }\n        break;\n\n      case csi:\n        // '?', '>', '!'\n        if (ch === '?' || ch === '>' || ch === '!') {\n          this.prefix = ch;\n          break;\n        }\n\n        // 0 - 9\n        if (ch >= '0' && ch <= '9') {\n          this.currentParam = this.currentParam * 10 + ch.charCodeAt(0) - 48;\n          break;\n        }\n\n        // '$', '\"', ' ', '\\''\n        if (ch === '$' || ch === '\"' || ch === ' ' || ch === '\\'') {\n          this.postfix = ch;\n          break;\n        }\n\n        this.params.push(this.currentParam);\n        this.currentParam = 0;\n\n        // ';'\n        if (ch === ';') break;\n\n        this.state = normal;\n\n        switch (ch) {\n          // CSI Ps A\n          // Cursor Up Ps Times (default = 1) (CUU).\n          case 'A':\n            this.cursorUp(this.params);\n            break;\n\n          // CSI Ps B\n          // Cursor Down Ps Times (default = 1) (CUD).\n          case 'B':\n            this.cursorDown(this.params);\n            break;\n\n          // CSI Ps C\n          // Cursor Forward Ps Times (default = 1) (CUF).\n          case 'C':\n            this.cursorForward(this.params);\n            break;\n\n          // CSI Ps D\n          // Cursor Backward Ps Times (default = 1) (CUB).\n          case 'D':\n            this.cursorBackward(this.params);\n            break;\n\n          // CSI Ps ; Ps H\n          // Cursor Position [row;column] (default = [1,1]) (CUP).\n          case 'H':\n            this.cursorPos(this.params);\n            break;\n\n          // CSI Ps J  Erase in Display (ED).\n          case 'J':\n            this.eraseInDisplay(this.params);\n            break;\n\n          // CSI Ps K  Erase in Line (EL).\n          case 'K':\n            this.eraseInLine(this.params);\n            break;\n\n          // CSI Pm m  Character Attributes (SGR).\n          case 'm':\n            if (!this.prefix) {\n              this.charAttributes(this.params);\n            }\n            break;\n\n          // CSI Ps n  Device Status Report (DSR).\n          case 'n':\n            if (!this.prefix) {\n              this.deviceStatus(this.params);\n            }\n            break;\n\n          /**\n           * Additions\n           */\n\n          // CSI Ps @\n          // Insert Ps (Blank) Character(s) (default = 1) (ICH).\n          case '@':\n            this.insertChars(this.params);\n            break;\n\n          // CSI Ps E\n          // Cursor Next Line Ps Times (default = 1) (CNL).\n          case 'E':\n            this.cursorNextLine(this.params);\n            break;\n\n          // CSI Ps F\n          // Cursor Preceding Line Ps Times (default = 1) (CNL).\n          case 'F':\n            this.cursorPrecedingLine(this.params);\n            break;\n\n          // CSI Ps G\n          // Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n          case 'G':\n            this.cursorCharAbsolute(this.params);\n            break;\n\n          // CSI Ps L\n          // Insert Ps Line(s) (default = 1) (IL).\n          case 'L':\n            this.insertLines(this.params);\n            break;\n\n          // CSI Ps M\n          // Delete Ps Line(s) (default = 1) (DL).\n          case 'M':\n            this.deleteLines(this.params);\n            break;\n\n          // CSI Ps P\n          // Delete Ps Character(s) (default = 1) (DCH).\n          case 'P':\n            this.deleteChars(this.params);\n            break;\n\n          // CSI Ps X\n          // Erase Ps Character(s) (default = 1) (ECH).\n          case 'X':\n            this.eraseChars(this.params);\n            break;\n\n          // CSI Pm `  Character Position Absolute\n          //   [column] (default = [row,1]) (HPA).\n          case '`':\n            this.charPosAbsolute(this.params);\n            break;\n\n          // 141 61 a * HPR -\n          // Horizontal Position Relative\n          case 'a':\n            this.HPositionRelative(this.params);\n            break;\n\n          // CSI P s c\n          // Send Device Attributes (Primary DA).\n          // CSI > P s c\n          // Send Device Attributes (Secondary DA)\n          case 'c':\n            this.sendDeviceAttributes(this.params);\n            break;\n\n          // CSI Pm d\n          // Line Position Absolute  [row] (default = [1,column]) (VPA).\n          case 'd':\n            this.linePosAbsolute(this.params);\n            break;\n\n          // 145 65 e * VPR - Vertical Position Relative\n          case 'e':\n            this.VPositionRelative(this.params);\n            break;\n\n          // CSI Ps ; Ps f\n          //   Horizontal and Vertical Position [row;column] (default =\n          //   [1,1]) (HVP).\n          case 'f':\n            this.HVPosition(this.params);\n            break;\n\n          // CSI Pm h  Set Mode (SM).\n          // CSI ? Pm h - mouse escape codes, cursor escape codes\n          case 'h':\n            this.setMode(this.params);\n            break;\n\n          // CSI Pm l  Reset Mode (RM).\n          // CSI ? Pm l\n          case 'l':\n            this.resetMode(this.params);\n            break;\n\n          // CSI Ps ; Ps r\n          //   Set Scrolling Region [top;bottom] (default = full size of win-\n          //   dow) (DECSTBM).\n          // CSI ? Pm r\n          case 'r':\n            this.setScrollRegion(this.params);\n            break;\n\n          // CSI s\n          //   Save cursor (ANSI.SYS).\n          case 's':\n            this.saveCursor(this.params);\n            break;\n\n          // CSI u\n          //   Restore cursor (ANSI.SYS).\n          case 'u':\n            this.restoreCursor(this.params);\n            break;\n\n          /**\n           * Lesser Used\n           */\n\n          // CSI Ps I\n          // Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n          case 'I':\n            this.cursorForwardTab(this.params);\n            break;\n\n          // CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n          case 'S':\n            this.scrollUp(this.params);\n            break;\n\n          // CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n          // CSI Ps ; Ps ; Ps ; Ps ; Ps T\n          // CSI > Ps; Ps T\n          case 'T':\n            // if (this.prefix === '>') {\n            //   this.resetTitleModes(this.params);\n            //   break;\n            // }\n            // if (this.params.length > 2) {\n            //   this.initMouseTracking(this.params);\n            //   break;\n            // }\n            if (this.params.length < 2 && !this.prefix) {\n              this.scrollDown(this.params);\n            }\n            break;\n\n          // CSI Ps Z\n          // Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n          case 'Z':\n            this.cursorBackwardTab(this.params);\n            break;\n\n          // CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n          case 'b':\n            this.repeatPrecedingCharacter(this.params);\n            break;\n\n          // CSI Ps g  Tab Clear (TBC).\n          case 'g':\n            this.tabClear(this.params);\n            break;\n\n          // CSI Pm i  Media Copy (MC).\n          // CSI ? Pm i\n          // case 'i':\n          //   this.mediaCopy(this.params);\n          //   break;\n\n          // CSI Pm m  Character Attributes (SGR).\n          // CSI > Ps; Ps m\n          // case 'm': // duplicate\n          //   if (this.prefix === '>') {\n          //     this.setResources(this.params);\n          //   } else {\n          //     this.charAttributes(this.params);\n          //   }\n          //   break;\n\n          // CSI Ps n  Device Status Report (DSR).\n          // CSI > Ps n\n          // case 'n': // duplicate\n          //   if (this.prefix === '>') {\n          //     this.disableModifiers(this.params);\n          //   } else {\n          //     this.deviceStatus(this.params);\n          //   }\n          //   break;\n\n          // CSI > Ps p  Set pointer mode.\n          // CSI ! p   Soft terminal reset (DECSTR).\n          // CSI Ps$ p\n          //   Request ANSI mode (DECRQM).\n          // CSI ? Ps$ p\n          //   Request DEC private mode (DECRQM).\n          // CSI Ps ; Ps \" p\n          case 'p':\n            switch (this.prefix) {\n              // case '>':\n              //   this.setPointerMode(this.params);\n              //   break;\n              case '!':\n                this.softReset(this.params);\n                break;\n              // case '?':\n              //   if (this.postfix === '$') {\n              //     this.requestPrivateMode(this.params);\n              //   }\n              //   break;\n              // default:\n              //   if (this.postfix === '\"') {\n              //     this.setConformanceLevel(this.params);\n              //   } else if (this.postfix === '$') {\n              //     this.requestAnsiMode(this.params);\n              //   }\n              //   break;\n            }\n            break;\n\n          // CSI Ps q  Load LEDs (DECLL).\n          // CSI Ps SP q\n          // CSI Ps \" q\n          // case 'q':\n          //   if (this.postfix === ' ') {\n          //     this.setCursorStyle(this.params);\n          //     break;\n          //   }\n          //   if (this.postfix === '\"') {\n          //     this.setCharProtectionAttr(this.params);\n          //     break;\n          //   }\n          //   this.loadLEDs(this.params);\n          //   break;\n\n          // CSI Ps ; Ps r\n          //   Set Scrolling Region [top;bottom] (default = full size of win-\n          //   dow) (DECSTBM).\n          // CSI ? Pm r\n          // CSI Pt; Pl; Pb; Pr; Ps$ r\n          // case 'r': // duplicate\n          //   if (this.prefix === '?') {\n          //     this.restorePrivateValues(this.params);\n          //   } else if (this.postfix === '$') {\n          //     this.setAttrInRectangle(this.params);\n          //   } else {\n          //     this.setScrollRegion(this.params);\n          //   }\n          //   break;\n\n          // CSI s     Save cursor (ANSI.SYS).\n          // CSI ? Pm s\n          // case 's': // duplicate\n          //   if (this.prefix === '?') {\n          //     this.savePrivateValues(this.params);\n          //   } else {\n          //     this.saveCursor(this.params);\n          //   }\n          //   break;\n\n          // CSI Ps ; Ps ; Ps t\n          // CSI Pt; Pl; Pb; Pr; Ps$ t\n          // CSI > Ps; Ps t\n          // CSI Ps SP t\n          // case 't':\n          //   if (this.postfix === '$') {\n          //     this.reverseAttrInRectangle(this.params);\n          //   } else if (this.postfix === ' ') {\n          //     this.setWarningBellVolume(this.params);\n          //   } else {\n          //     if (this.prefix === '>') {\n          //       this.setTitleModeFeature(this.params);\n          //     } else {\n          //       this.manipulateWindow(this.params);\n          //     }\n          //   }\n          //   break;\n\n          // CSI u     Restore cursor (ANSI.SYS).\n          // CSI Ps SP u\n          // case 'u': // duplicate\n          //   if (this.postfix === ' ') {\n          //     this.setMarginBellVolume(this.params);\n          //   } else {\n          //     this.restoreCursor(this.params);\n          //   }\n          //   break;\n\n          // CSI Pt; Pl; Pb; Pr; Pp; Pt; Pl; Pp$ v\n          // case 'v':\n          //   if (this.postfix === '$') {\n          //     this.copyRectagle(this.params);\n          //   }\n          //   break;\n\n          // CSI Pt ; Pl ; Pb ; Pr ' w\n          // case 'w':\n          //   if (this.postfix === '\\'') {\n          //     this.enableFilterRectangle(this.params);\n          //   }\n          //   break;\n\n          // CSI Ps x  Request Terminal Parameters (DECREQTPARM).\n          // CSI Ps x  Select Attribute Change Extent (DECSACE).\n          // CSI Pc; Pt; Pl; Pb; Pr$ x\n          // case 'x':\n          //   if (this.postfix === '$') {\n          //     this.fillRectangle(this.params);\n          //   } else {\n          //     this.requestParameters(this.params);\n          //     //this.__(this.params);\n          //   }\n          //   break;\n\n          // CSI Ps ; Pu ' z\n          // CSI Pt; Pl; Pb; Pr$ z\n          // case 'z':\n          //   if (this.postfix === '\\'') {\n          //     this.enableLocatorReporting(this.params);\n          //   } else if (this.postfix === '$') {\n          //     this.eraseRectangle(this.params);\n          //   }\n          //   break;\n\n          // CSI Pm ' {\n          // CSI Pt; Pl; Pb; Pr$ {\n          // case '{':\n          //   if (this.postfix === '\\'') {\n          //     this.setLocatorEvents(this.params);\n          //   } else if (this.postfix === '$') {\n          //     this.selectiveEraseRectangle(this.params);\n          //   }\n          //   break;\n\n          // CSI Ps ' |\n          // case '|':\n          //   if (this.postfix === '\\'') {\n          //     this.requestLocatorPosition(this.params);\n          //   }\n          //   break;\n\n          // CSI P m SP }\n          // Insert P s Column(s) (default = 1) (DECIC), VT420 and up.\n          // case '}':\n          //   if (this.postfix === ' ') {\n          //     this.insertColumns(this.params);\n          //   }\n          //   break;\n\n          // CSI P m SP ~\n          // Delete P s Column(s) (default = 1) (DECDC), VT420 and up\n          // case '~':\n          //   if (this.postfix === ' ') {\n          //     this.deleteColumns(this.params);\n          //   }\n          //   break;\n\n          default:\n            this.error('Unknown CSI code: %s.', ch);\n            break;\n        }\n\n        this.prefix = '';\n        this.postfix = '';\n        break;\n\n      case dcs:\n        if ((this.lch === '\\x1b' && ch === '\\\\') || ch === '\\x07') {\n          // Workarounds:\n          if (this.prefix === 'tmux;\\x1b') {\n            // `DCS tmux; Pt ST` may contain a Pt with an ST\n            // XXX Does tmux work this way?\n            // if (this.lch === '\\x1b' & data[i + 1] === '\\x1b' && data[i + 2] === '\\\\') {\n            //   this.currentParam += ch;\n            //   continue;\n            // }\n            // Tmux only accepts ST, not BEL:\n            if (ch === '\\x07') {\n              this.currentParam += ch;\n              continue;\n            }\n          }\n\n          if (this.lch === '\\x1b') {\n            if (typeof this.currentParam === 'string') {\n              this.currentParam = this.currentParam.slice(0, -1);\n            } else if (typeof this.currentParam == 'number') {\n              this.currentParam = (this.currentParam - ('\\x1b'.charCodeAt(0) - 48)) / 10;\n            }\n          }\n\n          this.params.push(this.currentParam);\n\n          var pt = this.params[this.params.length - 1];\n\n          switch (this.prefix) {\n            // User-Defined Keys (DECUDK).\n            // DCS Ps; Ps| Pt ST\n            case UDK:\n              this.emit('udk', {\n                clearAll: this.params[0] === 0,\n                eraseBelow: this.params[0] === 1,\n                lockKeys: this.params[1] === 0,\n                dontLockKeys: this.params[1] === 1,\n                keyList: (this.params[2] + '').split(';').map(function(part) {\n                  part = part.split('/');\n                  return {\n                    keyCode: part[0],\n                    hexKeyValue: part[1]\n                  };\n                })\n              });\n              break;\n\n            // Request Status String (DECRQSS).\n            // DCS $ q Pt ST\n            // test: echo -e '\\eP$q\"p\\e\\\\'\n            case '$q':\n              var valid = 0;\n\n              switch (pt) {\n                // DECSCA\n                // CSI Ps \" q\n                case '\"q':\n                  pt = '0\"q';\n                  valid = 1;\n                  break;\n\n                // DECSCL\n                // CSI Ps ; Ps \" p\n                case '\"p':\n                  pt = '61;0\"p';\n                  valid = 1;\n                  break;\n\n                // DECSTBM\n                // CSI Ps ; Ps r\n                case 'r':\n                  pt = ''\n                    + (this.scrollTop + 1)\n                    + ';'\n                    + (this.scrollBottom + 1)\n                    + 'r';\n                  valid = 1;\n                  break;\n\n                // SGR\n                // CSI Pm m\n                case 'm':\n                  // TODO: Parse this.curAttr here.\n                  // pt = '0m';\n                  // valid = 1;\n                  valid = 0; // Not implemented.\n                  break;\n\n                default:\n                  this.error('Unknown DCS Pt: %s.', pt);\n                  valid = 0; // unimplemented\n                  break;\n              }\n\n              this.send('\\x1bP' + valid + '$r' + pt + '\\x1b\\\\');\n              break;\n\n            // Set Termcap/Terminfo Data (xterm, experimental).\n            // DCS + p Pt ST\n            case '+p':\n              this.emit('set terminfo', {\n                name: this.params[0]\n              });\n              break;\n\n            // Request Termcap/Terminfo String (xterm, experimental)\n            // Regular xterm does not even respond to this sequence.\n            // This can cause a small glitch in vim.\n            // DCS + q Pt ST\n            // test: echo -ne '\\eP+q6b64\\e\\\\'\n            case '+q':\n              var valid = false;\n              this.send('\\x1bP' + +valid + '+r' + pt + '\\x1b\\\\');\n              break;\n\n            // Implement tmux sequence forwarding is\n            // someone uses term.js for a multiplexer.\n            // DCS tmux; ESC Pt ST\n            case 'tmux;\\x1b':\n              this.emit('passthrough', pt);\n              break;\n\n            default:\n              this.error('Unknown DCS prefix: %s.', pt);\n              break;\n          }\n\n          this.currentParam = 0;\n          this.prefix = '';\n          this.state = normal;\n        } else {\n          this.currentParam += ch;\n          if (!this.prefix) {\n            if (/^\\d*;\\d*\\|/.test(this.currentParam)) {\n              this.prefix = UDK;\n              this.params = this.currentParam.split(/[;|]/).map(function(n) {\n                if (!n.length) return 0;\n                return +n;\n              }).slice(0, -1);\n              this.currentParam = '';\n            } else if (/^[$+][a-zA-Z]/.test(this.currentParam)\n                || /^\\w+;\\x1b/.test(this.currentParam)) {\n              this.prefix = this.currentParam;\n              this.currentParam = '';\n            }\n          }\n        }\n        break;\n\n      case ignore:\n        // For PM and APC.\n        if ((this.lch === '\\x1b' && ch === '\\\\') || ch === '\\x07') {\n          this.state = normal;\n        }\n        break;\n    }\n  }\n\n  this.updateRange(this.y);\n  this.refresh(this.refreshStart, this.refreshEnd);\n\n  return true;\n};\n\nTerminal.prototype.writeln = function(data) {\n  return this.write(data + '\\r\\n');\n};\n\nTerminal.prototype.end = function(data) {\n  var ret = true;\n  if (data) {\n    ret = this.write(data);\n  }\n  this.destroySoon();\n  return ret;\n};\n\nTerminal.prototype.resume = function() {\n  ;\n};\n\nTerminal.prototype.pause = function() {\n  ;\n};\n\n// Key Resources:\n// https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\nTerminal.prototype.keyDown = function(ev) {\n  var self = this\n    , key;\n\n  switch (ev.keyCode) {\n    // backspace\n    case 8:\n      if (ev.altKey) {\n        key = '\\x17';\n        break;\n      }\n      if (ev.shiftKey) {\n        key = '\\x08'; // ^H\n        break;\n      }\n      key = '\\x7f'; // ^?\n      break;\n    // tab\n    case 9:\n      if (ev.shiftKey) {\n        key = '\\x1b[Z';\n        break;\n      }\n      key = '\\t';\n      break;\n    // return/enter\n    case 13:\n      key = '\\r';\n      break;\n    // escape\n    case 27:\n      key = '\\x1b';\n      break;\n    // space\n    case 32:\n      key = '\\x20';\n      break;\n    // left-arrow\n    case 37:\n      if (this.applicationCursor) {\n        key = '\\x1bOD'; // SS3 as ^[O for 7-bit\n        //key = '\\x8fD'; // SS3 as 0x8f for 8-bit\n        break;\n      }\n      if (ev.ctrlKey) {\n        key = '\\x1b[5D';\n        break;\n      }\n      key = '\\x1b[D';\n      break;\n    // right-arrow\n    case 39:\n      if (this.applicationCursor) {\n        key = '\\x1bOC';\n        break;\n      }\n      if (ev.ctrlKey) {\n        key = '\\x1b[5C';\n        break;\n      }\n      key = '\\x1b[C';\n      break;\n    // up-arrow\n    case 38:\n      if (this.applicationCursor) {\n        key = '\\x1bOA';\n        break;\n      }\n      if (ev.ctrlKey) {\n        this.scrollDisp(-1);\n        return cancel(ev);\n      } else {\n        key = '\\x1b[A';\n      }\n      break;\n    // down-arrow\n    case 40:\n      if (this.applicationCursor) {\n        key = '\\x1bOB';\n        break;\n      }\n      if (ev.ctrlKey) {\n        this.scrollDisp(1);\n        return cancel(ev);\n      } else {\n        key = '\\x1b[B';\n      }\n      break;\n    // delete\n    case 46:\n      key = '\\x1b[3~';\n      break;\n    // insert\n    case 45:\n      key = '\\x1b[2~';\n      break;\n    // home\n    case 36:\n      if (this.applicationKeypad) {\n        key = '\\x1bOH';\n        break;\n      }\n      key = '\\x1bOH';\n      break;\n    // end\n    case 35:\n      if (this.applicationKeypad) {\n        key = '\\x1bOF';\n        break;\n      }\n      key = '\\x1bOF';\n      break;\n    // page up\n    case 33:\n      if (ev.shiftKey) {\n        this.scrollDisp(-(this.rows - 1));\n        return cancel(ev);\n      } else {\n        key = '\\x1b[5~';\n      }\n      break;\n    // page down\n    case 34:\n      if (ev.shiftKey) {\n        this.scrollDisp(this.rows - 1);\n        return cancel(ev);\n      } else {\n        key = '\\x1b[6~';\n      }\n      break;\n    // F1\n    case 112:\n      key = '\\x1bOP';\n      break;\n    // F2\n    case 113:\n      key = '\\x1bOQ';\n      break;\n    // F3\n    case 114:\n      key = '\\x1bOR';\n      break;\n    // F4\n    case 115:\n      key = '\\x1bOS';\n      break;\n    // F5\n    case 116:\n      key = '\\x1b[15~';\n      break;\n    // F6\n    case 117:\n      key = '\\x1b[17~';\n      break;\n    // F7\n    case 118:\n      key = '\\x1b[18~';\n      break;\n    // F8\n    case 119:\n      key = '\\x1b[19~';\n      break;\n    // F9\n    case 120:\n      key = '\\x1b[20~';\n      break;\n    // F10\n    case 121:\n      key = '\\x1b[21~';\n      break;\n    // F11\n    case 122:\n      key = '\\x1b[23~';\n      break;\n    // F12\n    case 123:\n      key = '\\x1b[24~';\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          // Ctrl-A\n          if (this.screenKeys) {\n            if (!this.prefixMode && !this.selectMode && ev.keyCode === 65) {\n              this.enterPrefix();\n              return cancel(ev);\n            }\n          }\n          // Ctrl-V\n          if (this.prefixMode && ev.keyCode === 86) {\n            this.leavePrefix();\n            return;\n          }\n          // Ctrl-C\n          if ((this.prefixMode || this.selectMode) && ev.keyCode === 67) {\n            if (this.visualMode) {\n              setTimeout(function() {\n                self.leaveVisual();\n              }, 1);\n            }\n            return;\n          }\n          key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          // NUL\n          key = String.fromCharCode(0);\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          // delete\n          key = String.fromCharCode(127);\n        } else if (ev.keyCode === 219) {\n          // ^[ - escape\n          key = String.fromCharCode(27);\n        } else if (ev.keyCode === 221) {\n          // ^] - group sep\n          key = String.fromCharCode(29);\n        }\n      } else if (ev.altKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          key = '\\x1b' + String.fromCharCode(ev.keyCode + 32);\n        } else if (ev.keyCode === 192) {\n          key = '\\x1b`';\n        } else if (ev.keyCode >= 48 && ev.keyCode <= 57) {\n          key = '\\x1b' + (ev.keyCode - 48);\n        }\n      }\n      break;\n  }\n\n  if (!key) return true;\n\n  if (this.prefixMode) {\n    this.leavePrefix();\n    return cancel(ev);\n  }\n\n  if (this.selectMode) {\n    this.keySelect(ev, key);\n    return cancel(ev);\n  }\n\n  this.emit('keydown', ev);\n  this.emit('key', key, ev);\n\n  this.showCursor();\n  this.handler(key);\n\n  return cancel(ev);\n};\n\nTerminal.prototype.setgLevel = function(g) {\n  this.glevel = g;\n  this.charset = this.charsets[g];\n};\n\nTerminal.prototype.setgCharset = function(g, charset) {\n  this.charsets[g] = charset;\n  if (this.glevel === g) {\n    this.charset = charset;\n  }\n};\n\nTerminal.prototype.keyPress = function(ev) {\n  var key;\n\n  cancel(ev);\n\n  if (ev.charCode) {\n    key = ev.charCode;\n  } else if (ev.which == null) {\n    key = ev.keyCode;\n  } else if (ev.which !== 0 && ev.charCode !== 0) {\n    key = ev.which;\n  } else {\n    return false;\n  }\n\n  if (!key || ev.ctrlKey || ev.altKey || ev.metaKey) return false;\n\n  key = String.fromCharCode(key);\n\n  if (this.prefixMode) {\n    this.leavePrefix();\n    this.keyPrefix(ev, key);\n    return false;\n  }\n\n  if (this.selectMode) {\n    this.keySelect(ev, key);\n    return false;\n  }\n\n  this.emit('keypress', key, ev);\n  this.emit('key', key, ev);\n\n  this.showCursor();\n  this.handler(key);\n\n  return false;\n};\n\nTerminal.prototype.send = function(data) {\n  var self = this;\n\n  if (!this.queue) {\n    setTimeout(function() {\n      self.handler(self.queue);\n      self.queue = '';\n    }, 1);\n  }\n\n  this.queue += data;\n};\n\nTerminal.prototype.bell = function() {\n  this.emit('bell');\n  if (!this.visualBell) return;\n  var self = this;\n  this.element.style.borderColor = 'white';\n  setTimeout(function() {\n    self.element.style.borderColor = '';\n  }, 10);\n  if (this.popOnBell) this.focus();\n};\n\nTerminal.prototype.log = function() {\n  if (!this.debug) return;\n  if (!this.context.console || !this.context.console.log) return;\n  var args = Array.prototype.slice.call(arguments);\n  this.context.console.log.apply(this.context.console, args);\n};\n\nTerminal.prototype.error = function() {\n  if (!this.debug) return;\n  if (!this.context.console || !this.context.console.error) return;\n  var args = Array.prototype.slice.call(arguments);\n  this.context.console.error.apply(this.context.console, args);\n};\n\nTerminal.prototype.resize = function(x, y) {\n  var line\n    , el\n    , i\n    , j\n    , ch;\n\n  if (x < 1) x = 1;\n  if (y < 1) y = 1;\n\n  // resize cols\n  j = this.cols;\n  if (j < x) {\n    ch = [this.defAttr, ' ']; // does xterm use the default attr?\n    i = this.lines.length;\n    while (i--) {\n      while (this.lines[i].length < x) {\n        this.lines[i].push(ch);\n      }\n    }\n  } else if (j > x) {\n    i = this.lines.length;\n    while (i--) {\n      while (this.lines[i].length > x) {\n        this.lines[i].pop();\n      }\n    }\n  }\n  this.setupStops(j);\n  this.cols = x;\n  this.columns = x;\n\n  // resize rows\n  j = this.rows;\n  if (j < y) {\n    el = this.element;\n    while (j++ < y) {\n      if (this.lines.length < y + this.ybase) {\n        this.lines.push(this.blankLine());\n      }\n      if (this.children.length < y) {\n        line = this.document.createElement('div');\n        el.appendChild(line);\n        this.children.push(line);\n      }\n    }\n  } else if (j > y) {\n    while (j-- > y) {\n      if (this.lines.length > y + this.ybase) {\n        this.lines.pop();\n      }\n      if (this.children.length > y) {\n        el = this.children.pop();\n        if (!el) continue;\n        el.parentNode.removeChild(el);\n      }\n    }\n  }\n  this.rows = y;\n\n  // make sure the cursor stays on screen\n  if (this.y >= y) this.y = y - 1;\n  if (this.x >= x) this.x = x - 1;\n\n  this.scrollTop = 0;\n  this.scrollBottom = y - 1;\n\n  this.refresh(0, this.rows - 1);\n\n  // it's a real nightmare trying\n  // to resize the original\n  // screen buffer. just set it\n  // to null for now.\n  this.normal = null;\n\n  // Act as though we are a node TTY stream:\n  this.emit('resize');\n};\n\nTerminal.prototype.updateRange = function(y) {\n  if (y < this.refreshStart) this.refreshStart = y;\n  if (y > this.refreshEnd) this.refreshEnd = y;\n  // if (y > this.refreshEnd) {\n  //   this.refreshEnd = y;\n  //   if (y > this.rows - 1) {\n  //     this.refreshEnd = this.rows - 1;\n  //   }\n  // }\n};\n\nTerminal.prototype.maxRange = function() {\n  this.refreshStart = 0;\n  this.refreshEnd = this.rows - 1;\n};\n\nTerminal.prototype.setupStops = function(i) {\n  if (i != null) {\n    if (!this.tabs[i]) {\n      i = this.prevStop(i);\n    }\n  } else {\n    this.tabs = {};\n    i = 0;\n  }\n\n  for (; i < this.cols; i += 8) {\n    this.tabs[i] = true;\n  }\n};\n\nTerminal.prototype.prevStop = function(x) {\n  if (x == null) x = this.x;\n  while (!this.tabs[--x] && x > 0);\n  return x >= this.cols\n    ? this.cols - 1\n    : x < 0 ? 0 : x;\n};\n\nTerminal.prototype.nextStop = function(x) {\n  if (x == null) x = this.x;\n  while (!this.tabs[++x] && x < this.cols);\n  return x >= this.cols\n    ? this.cols - 1\n    : x < 0 ? 0 : x;\n};\n\n// back_color_erase feature for xterm.\nTerminal.prototype.eraseAttr = function() {\n  // if (this.is('screen')) return this.defAttr;\n  return (this.defAttr & ~0x1ff) | (this.curAttr & 0x1ff);\n};\n\nTerminal.prototype.eraseRight = function(x, y) {\n  var line = this.lines[this.ybase + y]\n    , ch = [this.eraseAttr(), ' ']; // xterm\n\n\n  for (; x < this.cols; x++) {\n    line[x] = ch;\n  }\n\n  this.updateRange(y);\n};\n\nTerminal.prototype.eraseLeft = function(x, y) {\n  var line = this.lines[this.ybase + y]\n    , ch = [this.eraseAttr(), ' ']; // xterm\n\n  x++;\n  while (x--) line[x] = ch;\n\n  this.updateRange(y);\n};\n\nTerminal.prototype.eraseLine = function(y) {\n  this.eraseRight(0, y);\n};\n\nTerminal.prototype.blankLine = function(cur) {\n  var attr = cur\n    ? this.eraseAttr()\n    : this.defAttr;\n\n  var ch = [attr, ' ']\n    , line = []\n    , i = 0;\n\n  for (; i < this.cols; i++) {\n    line[i] = ch;\n  }\n\n  return line;\n};\n\nTerminal.prototype.ch = function(cur) {\n  return cur\n    ? [this.eraseAttr(), ' ']\n    : [this.defAttr, ' '];\n};\n\nTerminal.prototype.is = function(term) {\n  var name = this.termName;\n  return (name + '').indexOf(term) === 0;\n};\n\nTerminal.prototype.handler = function(data) {\n  this.emit('data', data);\n};\n\nTerminal.prototype.handleTitle = function(title) {\n  this.emit('title', title);\n};\n\n/**\n * ESC\n */\n\n// ESC D Index (IND is 0x84).\nTerminal.prototype.index = function() {\n  this.y++;\n  if (this.y > this.scrollBottom) {\n    this.y--;\n    this.scroll();\n  }\n  this.state = normal;\n};\n\n// ESC M Reverse Index (RI is 0x8d).\nTerminal.prototype.reverseIndex = function() {\n  var j;\n  this.y--;\n  if (this.y < this.scrollTop) {\n    this.y++;\n    // possibly move the code below to term.reverseScroll();\n    // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n    // blankLine(true) is xterm/linux behavior\n    this.lines.splice(this.y + this.ybase, 0, this.blankLine(true));\n    j = this.rows - 1 - this.scrollBottom;\n    this.lines.splice(this.rows - 1 + this.ybase - j + 1, 1);\n    // this.maxRange();\n    this.updateRange(this.scrollTop);\n    this.updateRange(this.scrollBottom);\n  }\n  this.state = normal;\n};\n\n// ESC c Full Reset (RIS).\nTerminal.prototype.reset = function() {\n  this.options.rows = this.rows;\n  this.options.cols = this.cols;\n  Terminal.call(this, this.options);\n  this.refresh(0, this.rows - 1);\n};\n\n// ESC H Tab Set (HTS is 0x88).\nTerminal.prototype.tabSet = function() {\n  this.tabs[this.x] = true;\n  this.state = normal;\n};\n\n/**\n * CSI\n */\n\n// CSI Ps A\n// Cursor Up Ps Times (default = 1) (CUU).\nTerminal.prototype.cursorUp = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.y -= param;\n  if (this.y < 0) this.y = 0;\n};\n\n// CSI Ps B\n// Cursor Down Ps Times (default = 1) (CUD).\nTerminal.prototype.cursorDown = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.y += param;\n  if (this.y >= this.rows) {\n    this.y = this.rows - 1;\n  }\n};\n\n// CSI Ps C\n// Cursor Forward Ps Times (default = 1) (CUF).\nTerminal.prototype.cursorForward = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.x += param;\n  if (this.x >= this.cols) {\n    this.x = this.cols - 1;\n  }\n};\n\n// CSI Ps D\n// Cursor Backward Ps Times (default = 1) (CUB).\nTerminal.prototype.cursorBackward = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.x -= param;\n  if (this.x < 0) this.x = 0;\n};\n\n// CSI Ps ; Ps H\n// Cursor Position [row;column] (default = [1,1]) (CUP).\nTerminal.prototype.cursorPos = function(params) {\n  var row, col;\n\n  row = params[0] - 1;\n\n  if (params.length >= 2) {\n    col = params[1] - 1;\n  } else {\n    col = 0;\n  }\n\n  if (row < 0) {\n    row = 0;\n  } else if (row >= this.rows) {\n    row = this.rows - 1;\n  }\n\n  if (col < 0) {\n    col = 0;\n  } else if (col >= this.cols) {\n    col = this.cols - 1;\n  }\n\n  this.x = col;\n  this.y = row;\n};\n\n// CSI Ps J  Erase in Display (ED).\n//     Ps = 0  -> Erase Below (default).\n//     Ps = 1  -> Erase Above.\n//     Ps = 2  -> Erase All.\n//     Ps = 3  -> Erase Saved Lines (xterm).\n// CSI ? Ps J\n//   Erase in Display (DECSED).\n//     Ps = 0  -> Selective Erase Below (default).\n//     Ps = 1  -> Selective Erase Above.\n//     Ps = 2  -> Selective Erase All.\nTerminal.prototype.eraseInDisplay = function(params) {\n  var j;\n  switch (params[0]) {\n    case 0:\n      this.eraseRight(this.x, this.y);\n      j = this.y + 1;\n      for (; j < this.rows; j++) {\n        this.eraseLine(j);\n      }\n      break;\n    case 1:\n      this.eraseLeft(this.x, this.y);\n      j = this.y;\n      while (j--) {\n        this.eraseLine(j);\n      }\n      break;\n    case 2:\n      j = this.rows;\n      while (j--) this.eraseLine(j);\n      break;\n    case 3:\n      ; // no saved lines\n      break;\n  }\n};\n\n// CSI Ps K  Erase in Line (EL).\n//     Ps = 0  -> Erase to Right (default).\n//     Ps = 1  -> Erase to Left.\n//     Ps = 2  -> Erase All.\n// CSI ? Ps K\n//   Erase in Line (DECSEL).\n//     Ps = 0  -> Selective Erase to Right (default).\n//     Ps = 1  -> Selective Erase to Left.\n//     Ps = 2  -> Selective Erase All.\nTerminal.prototype.eraseInLine = function(params) {\n  switch (params[0]) {\n    case 0:\n      this.eraseRight(this.x, this.y);\n      break;\n    case 1:\n      this.eraseLeft(this.x, this.y);\n      break;\n    case 2:\n      this.eraseLine(this.y);\n      break;\n  }\n};\n\n// CSI Pm m  Character Attributes (SGR).\n//     Ps = 0  -> Normal (default).\n//     Ps = 1  -> Bold.\n//     Ps = 4  -> Underlined.\n//     Ps = 5  -> Blink (appears as Bold).\n//     Ps = 7  -> Inverse.\n//     Ps = 8  -> Invisible, i.e., hidden (VT300).\n//     Ps = 2 2  -> Normal (neither bold nor faint).\n//     Ps = 2 4  -> Not underlined.\n//     Ps = 2 5  -> Steady (not blinking).\n//     Ps = 2 7  -> Positive (not inverse).\n//     Ps = 2 8  -> Visible, i.e., not hidden (VT300).\n//     Ps = 3 0  -> Set foreground color to Black.\n//     Ps = 3 1  -> Set foreground color to Red.\n//     Ps = 3 2  -> Set foreground color to Green.\n//     Ps = 3 3  -> Set foreground color to Yellow.\n//     Ps = 3 4  -> Set foreground color to Blue.\n//     Ps = 3 5  -> Set foreground color to Magenta.\n//     Ps = 3 6  -> Set foreground color to Cyan.\n//     Ps = 3 7  -> Set foreground color to White.\n//     Ps = 3 9  -> Set foreground color to default (original).\n//     Ps = 4 0  -> Set background color to Black.\n//     Ps = 4 1  -> Set background color to Red.\n//     Ps = 4 2  -> Set background color to Green.\n//     Ps = 4 3  -> Set background color to Yellow.\n//     Ps = 4 4  -> Set background color to Blue.\n//     Ps = 4 5  -> Set background color to Magenta.\n//     Ps = 4 6  -> Set background color to Cyan.\n//     Ps = 4 7  -> Set background color to White.\n//     Ps = 4 9  -> Set background color to default (original).\n\n//   If 16-color support is compiled, the following apply.  Assume\n//   that xterm's resources are set so that the ISO color codes are\n//   the first 8 of a set of 16.  Then the aixterm colors are the\n//   bright versions of the ISO colors:\n//     Ps = 9 0  -> Set foreground color to Black.\n//     Ps = 9 1  -> Set foreground color to Red.\n//     Ps = 9 2  -> Set foreground color to Green.\n//     Ps = 9 3  -> Set foreground color to Yellow.\n//     Ps = 9 4  -> Set foreground color to Blue.\n//     Ps = 9 5  -> Set foreground color to Magenta.\n//     Ps = 9 6  -> Set foreground color to Cyan.\n//     Ps = 9 7  -> Set foreground color to White.\n//     Ps = 1 0 0  -> Set background color to Black.\n//     Ps = 1 0 1  -> Set background color to Red.\n//     Ps = 1 0 2  -> Set background color to Green.\n//     Ps = 1 0 3  -> Set background color to Yellow.\n//     Ps = 1 0 4  -> Set background color to Blue.\n//     Ps = 1 0 5  -> Set background color to Magenta.\n//     Ps = 1 0 6  -> Set background color to Cyan.\n//     Ps = 1 0 7  -> Set background color to White.\n\n//   If xterm is compiled with the 16-color support disabled, it\n//   supports the following, from rxvt:\n//     Ps = 1 0 0  -> Set foreground and background color to\n//     default.\n\n//   If 88- or 256-color support is compiled, the following apply.\n//     Ps = 3 8  ; 5  ; Ps -> Set foreground color to the second\n//     Ps.\n//     Ps = 4 8  ; 5  ; Ps -> Set background color to the second\n//     Ps.\nTerminal.prototype.charAttributes = function(params) {\n  // Optimize a single SGR0.\n  if (params.length === 1 && params[0] === 0) {\n    this.curAttr = this.defAttr;\n    return;\n  }\n\n  var l = params.length\n    , i = 0\n    , flags = this.curAttr >> 18\n    , fg = (this.curAttr >> 9) & 0x1ff\n    , bg = this.curAttr & 0x1ff\n    , p;\n\n  for (; i < l; i++) {\n    p = params[i];\n    if (p >= 30 && p <= 37) {\n      // fg color 8\n      fg = p - 30;\n    } else if (p >= 40 && p <= 47) {\n      // bg color 8\n      bg = p - 40;\n    } else if (p >= 90 && p <= 97) {\n      // fg color 16\n      p += 8;\n      fg = p - 90;\n    } else if (p >= 100 && p <= 107) {\n      // bg color 16\n      p += 8;\n      bg = p - 100;\n    } else if (p === 0) {\n      // default\n      flags = this.defAttr >> 18;\n      fg = (this.defAttr >> 9) & 0x1ff;\n      bg = this.defAttr & 0x1ff;\n      // flags = 0;\n      // fg = 0x1ff;\n      // bg = 0x1ff;\n    } else if (p === 1) {\n      // bold text\n      flags |= 1;\n    } else if (p === 4) {\n      // underlined text\n      flags |= 2;\n    } else if (p === 5) {\n      // blink\n      flags |= 4;\n    } else if (p === 7) {\n      // inverse and positive\n      // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n      flags |= 8;\n    } else if (p === 8) {\n      // invisible\n      flags |= 16;\n    } else if (p === 22) {\n      // not bold\n      flags &= ~1;\n    } else if (p === 24) {\n      // not underlined\n      flags &= ~2;\n    } else if (p === 25) {\n      // not blink\n      flags &= ~4;\n    } else if (p === 27) {\n      // not inverse\n      flags &= ~8;\n    } else if (p === 28) {\n      // not invisible\n      flags &= ~16;\n    } else if (p === 39) {\n      // reset fg\n      fg = (this.defAttr >> 9) & 0x1ff;\n    } else if (p === 49) {\n      // reset bg\n      bg = this.defAttr & 0x1ff;\n    } else if (p === 38) {\n      // fg color 256\n      if (params[i + 1] === 2) {\n        i += 2;\n        fg = matchColor(\n          params[i] & 0xff,\n          params[i + 1] & 0xff,\n          params[i + 2] & 0xff);\n        if (fg === -1) fg = 0x1ff;\n        i += 2;\n      } else if (params[i + 1] === 5) {\n        i += 2;\n        p = params[i] & 0xff;\n        fg = p;\n      }\n    } else if (p === 48) {\n      // bg color 256\n      if (params[i + 1] === 2) {\n        i += 2;\n        bg = matchColor(\n          params[i] & 0xff,\n          params[i + 1] & 0xff,\n          params[i + 2] & 0xff);\n        if (bg === -1) bg = 0x1ff;\n        i += 2;\n      } else if (params[i + 1] === 5) {\n        i += 2;\n        p = params[i] & 0xff;\n        bg = p;\n      }\n    } else if (p === 100) {\n      // reset fg/bg\n      fg = (this.defAttr >> 9) & 0x1ff;\n      bg = this.defAttr & 0x1ff;\n    } else {\n      this.error('Unknown SGR attribute: %d.', p);\n    }\n  }\n\n  this.curAttr = (flags << 18) | (fg << 9) | bg;\n};\n\n// CSI Ps n  Device Status Report (DSR).\n//     Ps = 5  -> Status Report.  Result (``OK'') is\n//   CSI 0 n\n//     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n//   Result is\n//   CSI r ; c R\n// CSI ? Ps n\n//   Device Status Report (DSR, DEC-specific).\n//     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n//     ? r ; c R (assumes page is zero).\n//     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n//     or CSI ? 1 1  n  (not ready).\n//     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n//     or CSI ? 2 1  n  (locked).\n//     Ps = 2 6  -> Report Keyboard status as\n//   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n//   The last two parameters apply to VT400 & up, and denote key-\n//   board ready and LK01 respectively.\n//     Ps = 5 3  -> Report Locator status as\n//   CSI ? 5 3  n  Locator available, if compiled-in, or\n//   CSI ? 5 0  n  No Locator, if not.\nTerminal.prototype.deviceStatus = function(params) {\n  if (!this.prefix) {\n    switch (params[0]) {\n      case 5:\n        // status report\n        this.send('\\x1b[0n');\n        break;\n      case 6:\n        // cursor position\n        this.send('\\x1b['\n          + (this.y + 1)\n          + ';'\n          + (this.x + 1)\n          + 'R');\n        break;\n    }\n  } else if (this.prefix === '?') {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params[0]) {\n      case 6:\n        // cursor position\n        this.send('\\x1b[?'\n          + (this.y + 1)\n          + ';'\n          + (this.x + 1)\n          + 'R');\n        break;\n      case 15:\n        // no printer\n        // this.send('\\x1b[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.send('\\x1b[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.send('\\x1b[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.send('\\x1b[?50n');\n        break;\n    }\n  }\n};\n\n/**\n * Additions\n */\n\n// CSI Ps @\n// Insert Ps (Blank) Character(s) (default = 1) (ICH).\nTerminal.prototype.insertChars = function(params) {\n  var param, row, j, ch;\n\n  param = params[0];\n  if (param < 1) param = 1;\n\n  row = this.y + this.ybase;\n  j = this.x;\n  ch = [this.eraseAttr(), ' ']; // xterm\n\n  while (param-- && j < this.cols) {\n    this.lines[row].splice(j++, 0, ch);\n    this.lines[row].pop();\n  }\n};\n\n// CSI Ps E\n// Cursor Next Line Ps Times (default = 1) (CNL).\n// same as CSI Ps B ?\nTerminal.prototype.cursorNextLine = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.y += param;\n  if (this.y >= this.rows) {\n    this.y = this.rows - 1;\n  }\n  this.x = 0;\n};\n\n// CSI Ps F\n// Cursor Preceding Line Ps Times (default = 1) (CNL).\n// reuse CSI Ps A ?\nTerminal.prototype.cursorPrecedingLine = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.y -= param;\n  if (this.y < 0) this.y = 0;\n  this.x = 0;\n};\n\n// CSI Ps G\n// Cursor Character Absolute  [column] (default = [row,1]) (CHA).\nTerminal.prototype.cursorCharAbsolute = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.x = param - 1;\n};\n\n// CSI Ps L\n// Insert Ps Line(s) (default = 1) (IL).\nTerminal.prototype.insertLines = function(params) {\n  var param, row, j;\n\n  param = params[0];\n  if (param < 1) param = 1;\n  row = this.y + this.ybase;\n\n  j = this.rows - 1 - this.scrollBottom;\n  j = this.rows - 1 + this.ybase - j + 1;\n\n  while (param--) {\n    // test: echo -e '\\e[44m\\e[1L\\e[0m'\n    // blankLine(true) - xterm/linux behavior\n    this.lines.splice(row, 0, this.blankLine(true));\n    this.lines.splice(j, 1);\n  }\n\n  // this.maxRange();\n  this.updateRange(this.y);\n  this.updateRange(this.scrollBottom);\n};\n\n// CSI Ps M\n// Delete Ps Line(s) (default = 1) (DL).\nTerminal.prototype.deleteLines = function(params) {\n  var param, row, j;\n\n  param = params[0];\n  if (param < 1) param = 1;\n  row = this.y + this.ybase;\n\n  j = this.rows - 1 - this.scrollBottom;\n  j = this.rows - 1 + this.ybase - j;\n\n  while (param--) {\n    // test: echo -e '\\e[44m\\e[1M\\e[0m'\n    // blankLine(true) - xterm/linux behavior\n    this.lines.splice(j + 1, 0, this.blankLine(true));\n    this.lines.splice(row, 1);\n  }\n\n  // this.maxRange();\n  this.updateRange(this.y);\n  this.updateRange(this.scrollBottom);\n};\n\n// CSI Ps P\n// Delete Ps Character(s) (default = 1) (DCH).\nTerminal.prototype.deleteChars = function(params) {\n  var param, row, ch;\n\n  param = params[0];\n  if (param < 1) param = 1;\n\n  row = this.y + this.ybase;\n  ch = [this.eraseAttr(), ' ']; // xterm\n\n  while (param--) {\n    this.lines[row].splice(this.x, 1);\n    this.lines[row].push(ch);\n  }\n};\n\n// CSI Ps X\n// Erase Ps Character(s) (default = 1) (ECH).\nTerminal.prototype.eraseChars = function(params) {\n  var param, row, j, ch;\n\n  param = params[0];\n  if (param < 1) param = 1;\n\n  row = this.y + this.ybase;\n  j = this.x;\n  ch = [this.eraseAttr(), ' ']; // xterm\n\n  while (param-- && j < this.cols) {\n    this.lines[row][j++] = ch;\n  }\n};\n\n// CSI Pm `  Character Position Absolute\n//   [column] (default = [row,1]) (HPA).\nTerminal.prototype.charPosAbsolute = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.x = param - 1;\n  if (this.x >= this.cols) {\n    this.x = this.cols - 1;\n  }\n};\n\n// 141 61 a * HPR -\n// Horizontal Position Relative\n// reuse CSI Ps C ?\nTerminal.prototype.HPositionRelative = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.x += param;\n  if (this.x >= this.cols) {\n    this.x = this.cols - 1;\n  }\n};\n\n// CSI Ps c  Send Device Attributes (Primary DA).\n//     Ps = 0  or omitted -> request attributes from terminal.  The\n//     response depends on the decTerminalID resource setting.\n//     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n//     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n//     -> CSI ? 6 c  (``VT102'')\n//     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n//   The VT100-style response parameters do not mean anything by\n//   themselves.  VT220 parameters do, telling the host what fea-\n//   tures the terminal supports:\n//     Ps = 1  -> 132-columns.\n//     Ps = 2  -> Printer.\n//     Ps = 6  -> Selective erase.\n//     Ps = 8  -> User-defined keys.\n//     Ps = 9  -> National replacement character sets.\n//     Ps = 1 5  -> Technical characters.\n//     Ps = 2 2  -> ANSI color, e.g., VT525.\n//     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n// CSI > Ps c\n//   Send Device Attributes (Secondary DA).\n//     Ps = 0  or omitted -> request the terminal's identification\n//     code.  The response depends on the decTerminalID resource set-\n//     ting.  It should apply only to VT220 and up, but xterm extends\n//     this to VT100.\n//     -> CSI  > Pp ; Pv ; Pc c\n//   where Pp denotes the terminal type\n//     Pp = 0  -> ``VT100''.\n//     Pp = 1  -> ``VT220''.\n//   and Pv is the firmware version (for xterm, this was originally\n//   the XFree86 patch number, starting with 95).  In a DEC termi-\n//   nal, Pc indicates the ROM cartridge registration number and is\n//   always zero.\n// More information:\n//   xterm/charproc.c - line 2012, for more information.\n//   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\nTerminal.prototype.sendDeviceAttributes = function(params) {\n  if (params[0] > 0) return;\n\n  if (!this.prefix) {\n    if (this.is('xterm')\n        || this.is('rxvt-unicode')\n        || this.is('screen')) {\n      this.send('\\x1b[?1;2c');\n    } else if (this.is('linux')) {\n      this.send('\\x1b[?6c');\n    }\n  } else if (this.prefix === '>') {\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this.is('xterm')) {\n      this.send('\\x1b[>0;276;0c');\n    } else if (this.is('rxvt-unicode')) {\n      this.send('\\x1b[>85;95;0c');\n    } else if (this.is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this.send(params[0] + 'c');\n    } else if (this.is('screen')) {\n      this.send('\\x1b[>83;40003;0c');\n    }\n  }\n};\n\n// CSI Pm d\n// Line Position Absolute  [row] (default = [1,column]) (VPA).\nTerminal.prototype.linePosAbsolute = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.y = param - 1;\n  if (this.y >= this.rows) {\n    this.y = this.rows - 1;\n  }\n};\n\n// 145 65 e * VPR - Vertical Position Relative\n// reuse CSI Ps B ?\nTerminal.prototype.VPositionRelative = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.y += param;\n  if (this.y >= this.rows) {\n    this.y = this.rows - 1;\n  }\n};\n\n// CSI Ps ; Ps f\n//   Horizontal and Vertical Position [row;column] (default =\n//   [1,1]) (HVP).\nTerminal.prototype.HVPosition = function(params) {\n  if (params[0] < 1) params[0] = 1;\n  if (params[1] < 1) params[1] = 1;\n\n  this.y = params[0] - 1;\n  if (this.y >= this.rows) {\n    this.y = this.rows - 1;\n  }\n\n  this.x = params[1] - 1;\n  if (this.x >= this.cols) {\n    this.x = this.cols - 1;\n  }\n};\n\n// CSI Pm h  Set Mode (SM).\n//     Ps = 2  -> Keyboard Action Mode (AM).\n//     Ps = 4  -> Insert Mode (IRM).\n//     Ps = 1 2  -> Send/receive (SRM).\n//     Ps = 2 0  -> Automatic Newline (LNM).\n// CSI ? Pm h\n//   DEC Private Mode Set (DECSET).\n//     Ps = 1  -> Application Cursor Keys (DECCKM).\n//     Ps = 2  -> Designate USASCII for character sets G0-G3\n//     (DECANM), and set VT100 mode.\n//     Ps = 3  -> 132 Column Mode (DECCOLM).\n//     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n//     Ps = 5  -> Reverse Video (DECSCNM).\n//     Ps = 6  -> Origin Mode (DECOM).\n//     Ps = 7  -> Wraparound Mode (DECAWM).\n//     Ps = 8  -> Auto-repeat Keys (DECARM).\n//     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n//     tion Mouse Tracking.\n//     Ps = 1 0  -> Show toolbar (rxvt).\n//     Ps = 1 2  -> Start Blinking Cursor (att610).\n//     Ps = 1 8  -> Print form feed (DECPFF).\n//     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n//     Ps = 2 5  -> Show Cursor (DECTCEM).\n//     Ps = 3 0  -> Show scrollbar (rxvt).\n//     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n//     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n//     Ps = 4 0  -> Allow 80 -> 132 Mode.\n//     Ps = 4 1  -> more(1) fix (see curses resource).\n//     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n//     RCM).\n//     Ps = 4 4  -> Turn On Margin Bell.\n//     Ps = 4 5  -> Reverse-wraparound Mode.\n//     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n//     compile-time option.\n//     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n//     abled by the titeInhibit resource).\n//     Ps = 6 6  -> Application keypad (DECNKM).\n//     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n//     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n//     release.  See the section Mouse Tracking.\n//     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n//     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n//     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n//     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n//     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n//     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n//     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n//     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n//     (enables the eightBitInput resource).\n//     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n//     Lock keys.  (This enables the numLock resource).\n//     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n//     enables the metaSendsEscape resource).\n//     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n//     key.\n//     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n//     enables the altSendsEscape resource).\n//     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n//     (This enables the keepSelection resource).\n//     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n//     the selectToClipboard resource).\n//     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n//     Control-G is received.  (This enables the bellIsUrgent\n//     resource).\n//     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n//     is received.  (enables the popOnBell resource).\n//     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n//     disabled by the titeInhibit resource).\n//     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n//     abled by the titeInhibit resource).\n//     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n//     Screen Buffer, clearing it first.  (This may be disabled by\n//     the titeInhibit resource).  This combines the effects of the 1\n//     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n//     applications rather than the 4 7  mode.\n//     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n//     Ps = 1 0 5 1  -> Set Sun function-key mode.\n//     Ps = 1 0 5 2  -> Set HP function-key mode.\n//     Ps = 1 0 5 3  -> Set SCO function-key mode.\n//     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n//     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n//     Ps = 2 0 0 4  -> Set bracketed paste mode.\n// Modes:\n//   http://vt100.net/docs/vt220-rm/chapter4.html\nTerminal.prototype.setMode = function(params) {\n  if (typeof params === 'object') {\n    var l = params.length\n      , i = 0;\n\n    for (; i < l; i++) {\n      this.setMode(params[i]);\n    }\n\n    return;\n  }\n\n  if (!this.prefix) {\n    switch (params) {\n      case 4:\n        this.insertMode = true;\n        break;\n      case 20:\n        //this.convertEol = true;\n        break;\n    }\n  } else if (this.prefix === '?') {\n    switch (params) {\n      case 1:\n        this.applicationCursor = true;\n        break;\n      case 2:\n        this.setgCharset(0, Terminal.charsets.US);\n        this.setgCharset(1, Terminal.charsets.US);\n        this.setgCharset(2, Terminal.charsets.US);\n        this.setgCharset(3, Terminal.charsets.US);\n        // set VT100 mode here\n        break;\n      case 3: // 132 col mode\n        this.savedCols = this.cols;\n        this.resize(132, this.rows);\n        break;\n      case 6:\n        this.originMode = true;\n        break;\n      case 7:\n        this.wraparoundMode = true;\n        break;\n      case 12:\n        // this.cursorBlink = true;\n        break;\n      case 66:\n        this.log('Serial port requested application keypad.');\n        this.applicationKeypad = true;\n        break;\n      case 9: // X10 Mouse\n        // no release, no motion, no wheel, no modifiers.\n      case 1000: // vt200 mouse\n        // no motion.\n        // no modifiers, except control on the wheel.\n      case 1002: // button event mouse\n      case 1003: // any event mouse\n        // any event - sends motion events,\n        // even if there is no button held down.\n        this.x10Mouse = params === 9;\n        this.vt200Mouse = params === 1000;\n        this.normalMouse = params > 1000;\n        this.mouseEvents = true;\n        this.element.style.cursor = 'default';\n        this.log('Binding to mouse events.');\n        break;\n      case 1004: // send focusin/focusout events\n        // focusin: ^[[I\n        // focusout: ^[[O\n        this.sendFocus = true;\n        break;\n      case 1005: // utf8 ext mode mouse\n        this.utfMouse = true;\n        // for wide terminals\n        // simply encodes large values as utf8 characters\n        break;\n      case 1006: // sgr ext mode mouse\n        this.sgrMouse = true;\n        // for wide terminals\n        // does not add 32 to fields\n        // press: ^[[<b;x;yM\n        // release: ^[[<b;x;ym\n        break;\n      case 1015: // urxvt ext mode mouse\n        this.urxvtMouse = true;\n        // for wide terminals\n        // numbers for fields\n        // press: ^[[b;x;yM\n        // motion: ^[[b;x;yT\n        break;\n      case 25: // show cursor\n        this.cursorHidden = false;\n        break;\n      case 1049: // alt screen buffer cursor\n        //this.saveCursor();\n        ; // FALL-THROUGH\n      case 47: // alt screen buffer\n      case 1047: // alt screen buffer\n        if (!this.normal) {\n          var normal = {\n            lines: this.lines,\n            ybase: this.ybase,\n            ydisp: this.ydisp,\n            x: this.x,\n            y: this.y,\n            scrollTop: this.scrollTop,\n            scrollBottom: this.scrollBottom,\n            tabs: this.tabs\n            // XXX save charset(s) here?\n            // charset: this.charset,\n            // glevel: this.glevel,\n            // charsets: this.charsets\n          };\n          this.reset();\n          this.normal = normal;\n          this.showCursor();\n        }\n        break;\n    }\n  }\n};\n\n// CSI Pm l  Reset Mode (RM).\n//     Ps = 2  -> Keyboard Action Mode (AM).\n//     Ps = 4  -> Replace Mode (IRM).\n//     Ps = 1 2  -> Send/receive (SRM).\n//     Ps = 2 0  -> Normal Linefeed (LNM).\n// CSI ? Pm l\n//   DEC Private Mode Reset (DECRST).\n//     Ps = 1  -> Normal Cursor Keys (DECCKM).\n//     Ps = 2  -> Designate VT52 mode (DECANM).\n//     Ps = 3  -> 80 Column Mode (DECCOLM).\n//     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n//     Ps = 5  -> Normal Video (DECSCNM).\n//     Ps = 6  -> Normal Cursor Mode (DECOM).\n//     Ps = 7  -> No Wraparound Mode (DECAWM).\n//     Ps = 8  -> No Auto-repeat Keys (DECARM).\n//     Ps = 9  -> Don't send Mouse X & Y on button press.\n//     Ps = 1 0  -> Hide toolbar (rxvt).\n//     Ps = 1 2  -> Stop Blinking Cursor (att610).\n//     Ps = 1 8  -> Don't print form feed (DECPFF).\n//     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n//     Ps = 2 5  -> Hide Cursor (DECTCEM).\n//     Ps = 3 0  -> Don't show scrollbar (rxvt).\n//     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n//     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n//     Ps = 4 1  -> No more(1) fix (see curses resource).\n//     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n//     NRCM).\n//     Ps = 4 4  -> Turn Off Margin Bell.\n//     Ps = 4 5  -> No Reverse-wraparound Mode.\n//     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n//     compile-time option).\n//     Ps = 4 7  -> Use Normal Screen Buffer.\n//     Ps = 6 6  -> Numeric keypad (DECNKM).\n//     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n//     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n//     release.  See the section Mouse Tracking.\n//     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n//     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n//     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n//     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n//     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n//     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n//     (rxvt).\n//     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n//     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n//     the eightBitInput resource).\n//     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n//     Lock keys.  (This disables the numLock resource).\n//     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n//     (This disables the metaSendsEscape resource).\n//     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n//     Delete key.\n//     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n//     (This disables the altSendsEscape resource).\n//     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n//     (This disables the keepSelection resource).\n//     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n//     the selectToClipboard resource).\n//     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n//     Control-G is received.  (This disables the bellIsUrgent\n//     resource).\n//     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n//     G is received.  (This disables the popOnBell resource).\n//     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n//     first if in the Alternate Screen.  (This may be disabled by\n//     the titeInhibit resource).\n//     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n//     disabled by the titeInhibit resource).\n//     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n//     as in DECRC.  (This may be disabled by the titeInhibit\n//     resource).  This combines the effects of the 1 0 4 7  and 1 0\n//     4 8  modes.  Use this with terminfo-based applications rather\n//     than the 4 7  mode.\n//     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n//     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n//     Ps = 1 0 5 2  -> Reset HP function-key mode.\n//     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n//     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n//     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n//     Ps = 2 0 0 4  -> Reset bracketed paste mode.\nTerminal.prototype.resetMode = function(params) {\n  if (typeof params === 'object') {\n    var l = params.length\n      , i = 0;\n\n    for (; i < l; i++) {\n      this.resetMode(params[i]);\n    }\n\n    return;\n  }\n\n  if (!this.prefix) {\n    switch (params) {\n      case 4:\n        this.insertMode = false;\n        break;\n      case 20:\n        //this.convertEol = false;\n        break;\n    }\n  } else if (this.prefix === '?') {\n    switch (params) {\n      case 1:\n        this.applicationCursor = false;\n        break;\n      case 3:\n        if (this.cols === 132 && this.savedCols) {\n          this.resize(this.savedCols, this.rows);\n        }\n        delete this.savedCols;\n        break;\n      case 6:\n        this.originMode = false;\n        break;\n      case 7:\n        this.wraparoundMode = false;\n        break;\n      case 12:\n        // this.cursorBlink = false;\n        break;\n      case 66:\n        this.log('Switching back to normal keypad.');\n        this.applicationKeypad = false;\n        break;\n      case 9: // X10 Mouse\n      case 1000: // vt200 mouse\n      case 1002: // button event mouse\n      case 1003: // any event mouse\n        this.x10Mouse = false;\n        this.vt200Mouse = false;\n        this.normalMouse = false;\n        this.mouseEvents = false;\n        this.element.style.cursor = '';\n        break;\n      case 1004: // send focusin/focusout events\n        this.sendFocus = false;\n        break;\n      case 1005: // utf8 ext mode mouse\n        this.utfMouse = false;\n        break;\n      case 1006: // sgr ext mode mouse\n        this.sgrMouse = false;\n        break;\n      case 1015: // urxvt ext mode mouse\n        this.urxvtMouse = false;\n        break;\n      case 25: // hide cursor\n        this.cursorHidden = true;\n        break;\n      case 1049: // alt screen buffer cursor\n        ; // FALL-THROUGH\n      case 47: // normal screen buffer\n      case 1047: // normal screen buffer - clearing it first\n        if (this.normal) {\n          this.lines = this.normal.lines;\n          this.ybase = this.normal.ybase;\n          this.ydisp = this.normal.ydisp;\n          this.x = this.normal.x;\n          this.y = this.normal.y;\n          this.scrollTop = this.normal.scrollTop;\n          this.scrollBottom = this.normal.scrollBottom;\n          this.tabs = this.normal.tabs;\n          this.normal = null;\n          // if (params === 1049) {\n          //   this.x = this.savedX;\n          //   this.y = this.savedY;\n          // }\n          this.refresh(0, this.rows - 1);\n          this.showCursor();\n        }\n        break;\n    }\n  }\n};\n\n// CSI Ps ; Ps r\n//   Set Scrolling Region [top;bottom] (default = full size of win-\n//   dow) (DECSTBM).\n// CSI ? Pm r\nTerminal.prototype.setScrollRegion = function(params) {\n  if (this.prefix) return;\n  this.scrollTop = (params[0] || 1) - 1;\n  this.scrollBottom = (params[1] || this.rows) - 1;\n  this.x = 0;\n  this.y = 0;\n};\n\n// CSI s\n//   Save cursor (ANSI.SYS).\nTerminal.prototype.saveCursor = function(params) {\n  this.savedX = this.x;\n  this.savedY = this.y;\n};\n\n// CSI u\n//   Restore cursor (ANSI.SYS).\nTerminal.prototype.restoreCursor = function(params) {\n  this.x = this.savedX || 0;\n  this.y = this.savedY || 0;\n};\n\n/**\n * Lesser Used\n */\n\n// CSI Ps I\n//   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\nTerminal.prototype.cursorForwardTab = function(params) {\n  var param = params[0] || 1;\n  while (param--) {\n    this.x = this.nextStop();\n  }\n};\n\n// CSI Ps S  Scroll up Ps lines (default = 1) (SU).\nTerminal.prototype.scrollUp = function(params) {\n  var param = params[0] || 1;\n  while (param--) {\n    this.lines.splice(this.ybase + this.scrollTop, 1);\n    this.lines.splice(this.ybase + this.scrollBottom, 0, this.blankLine());\n  }\n  // this.maxRange();\n  this.updateRange(this.scrollTop);\n  this.updateRange(this.scrollBottom);\n};\n\n// CSI Ps T  Scroll down Ps lines (default = 1) (SD).\nTerminal.prototype.scrollDown = function(params) {\n  var param = params[0] || 1;\n  while (param--) {\n    this.lines.splice(this.ybase + this.scrollBottom, 1);\n    this.lines.splice(this.ybase + this.scrollTop, 0, this.blankLine());\n  }\n  // this.maxRange();\n  this.updateRange(this.scrollTop);\n  this.updateRange(this.scrollBottom);\n};\n\n// CSI Ps ; Ps ; Ps ; Ps ; Ps T\n//   Initiate highlight mouse tracking.  Parameters are\n//   [func;startx;starty;firstrow;lastrow].  See the section Mouse\n//   Tracking.\nTerminal.prototype.initMouseTracking = function(params) {\n  // Relevant: DECSET 1001\n};\n\n// CSI > Ps; Ps T\n//   Reset one or more features of the title modes to the default\n//   value.  Normally, \"reset\" disables the feature.  It is possi-\n//   ble to disable the ability to reset features by compiling a\n//   different default for the title modes into xterm.\n//     Ps = 0  -> Do not set window/icon labels using hexadecimal.\n//     Ps = 1  -> Do not query window/icon labels using hexadeci-\n//     mal.\n//     Ps = 2  -> Do not set window/icon labels using UTF-8.\n//     Ps = 3  -> Do not query window/icon labels using UTF-8.\n//   (See discussion of \"Title Modes\").\nTerminal.prototype.resetTitleModes = function(params) {\n  ;\n};\n\n// CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\nTerminal.prototype.cursorBackwardTab = function(params) {\n  var param = params[0] || 1;\n  while (param--) {\n    this.x = this.prevStop();\n  }\n};\n\n// CSI Ps b  Repeat the preceding graphic character Ps times (REP).\nTerminal.prototype.repeatPrecedingCharacter = function(params) {\n  var param = params[0] || 1\n    , line = this.lines[this.ybase + this.y]\n    , ch = line[this.x - 1] || [this.defAttr, ' '];\n\n  while (param--) line[this.x++] = ch;\n};\n\n// CSI Ps g  Tab Clear (TBC).\n//     Ps = 0  -> Clear Current Column (default).\n//     Ps = 3  -> Clear All.\n// Potentially:\n//   Ps = 2  -> Clear Stops on Line.\n//   http://vt100.net/annarbor/aaa-ug/section6.html\nTerminal.prototype.tabClear = function(params) {\n  var param = params[0];\n  if (param <= 0) {\n    delete this.tabs[this.x];\n  } else if (param === 3) {\n    this.tabs = {};\n  }\n};\n\n// CSI Pm i  Media Copy (MC).\n//     Ps = 0  -> Print screen (default).\n//     Ps = 4  -> Turn off printer controller mode.\n//     Ps = 5  -> Turn on printer controller mode.\n// CSI ? Pm i\n//   Media Copy (MC, DEC-specific).\n//     Ps = 1  -> Print line containing cursor.\n//     Ps = 4  -> Turn off autoprint mode.\n//     Ps = 5  -> Turn on autoprint mode.\n//     Ps = 1  0  -> Print composed display, ignores DECPEX.\n//     Ps = 1  1  -> Print all pages.\nTerminal.prototype.mediaCopy = function(params) {\n  ;\n};\n\n// CSI > Ps; Ps m\n//   Set or reset resource-values used by xterm to decide whether\n//   to construct escape sequences holding information about the\n//   modifiers pressed with a given key.  The first parameter iden-\n//   tifies the resource to set/reset.  The second parameter is the\n//   value to assign to the resource.  If the second parameter is\n//   omitted, the resource is reset to its initial value.\n//     Ps = 1  -> modifyCursorKeys.\n//     Ps = 2  -> modifyFunctionKeys.\n//     Ps = 4  -> modifyOtherKeys.\n//   If no parameters are given, all resources are reset to their\n//   initial values.\nTerminal.prototype.setResources = function(params) {\n  ;\n};\n\n// CSI > Ps n\n//   Disable modifiers which may be enabled via the CSI > Ps; Ps m\n//   sequence.  This corresponds to a resource value of \"-1\", which\n//   cannot be set with the other sequence.  The parameter identi-\n//   fies the resource to be disabled:\n//     Ps = 1  -> modifyCursorKeys.\n//     Ps = 2  -> modifyFunctionKeys.\n//     Ps = 4  -> modifyOtherKeys.\n//   If the parameter is omitted, modifyFunctionKeys is disabled.\n//   When modifyFunctionKeys is disabled, xterm uses the modifier\n//   keys to make an extended sequence of functions rather than\n//   adding a parameter to each function key to denote the modi-\n//   fiers.\nTerminal.prototype.disableModifiers = function(params) {\n  ;\n};\n\n// CSI > Ps p\n//   Set resource value pointerMode.  This is used by xterm to\n//   decide whether to hide the pointer cursor as the user types.\n//   Valid values for the parameter:\n//     Ps = 0  -> never hide the pointer.\n//     Ps = 1  -> hide if the mouse tracking mode is not enabled.\n//     Ps = 2  -> always hide the pointer.  If no parameter is\n//     given, xterm uses the default, which is 1 .\nTerminal.prototype.setPointerMode = function(params) {\n  ;\n};\n\n// CSI ! p   Soft terminal reset (DECSTR).\n// http://vt100.net/docs/vt220-rm/table4-10.html\nTerminal.prototype.softReset = function(params) {\n  this.cursorHidden = false;\n  this.insertMode = false;\n  this.originMode = false;\n  this.wraparoundMode = false; // autowrap\n  this.applicationKeypad = false; // ?\n  this.applicationCursor = false;\n  this.scrollTop = 0;\n  this.scrollBottom = this.rows - 1;\n  this.curAttr = this.defAttr;\n  this.x = this.y = 0; // ?\n  this.charset = null;\n  this.glevel = 0; // ??\n  this.charsets = [null]; // ??\n};\n\n// CSI Ps$ p\n//   Request ANSI mode (DECRQM).  For VT300 and up, reply is\n//     CSI Ps; Pm$ y\n//   where Ps is the mode number as in RM, and Pm is the mode\n//   value:\n//     0 - not recognized\n//     1 - set\n//     2 - reset\n//     3 - permanently set\n//     4 - permanently reset\nTerminal.prototype.requestAnsiMode = function(params) {\n  ;\n};\n\n// CSI ? Ps$ p\n//   Request DEC private mode (DECRQM).  For VT300 and up, reply is\n//     CSI ? Ps; Pm$ p\n//   where Ps is the mode number as in DECSET, Pm is the mode value\n//   as in the ANSI DECRQM.\nTerminal.prototype.requestPrivateMode = function(params) {\n  ;\n};\n\n// CSI Ps ; Ps \" p\n//   Set conformance level (DECSCL).  Valid values for the first\n//   parameter:\n//     Ps = 6 1  -> VT100.\n//     Ps = 6 2  -> VT200.\n//     Ps = 6 3  -> VT300.\n//   Valid values for the second parameter:\n//     Ps = 0  -> 8-bit controls.\n//     Ps = 1  -> 7-bit controls (always set for VT100).\n//     Ps = 2  -> 8-bit controls.\nTerminal.prototype.setConformanceLevel = function(params) {\n  ;\n};\n\n// CSI Ps q  Load LEDs (DECLL).\n//     Ps = 0  -> Clear all LEDS (default).\n//     Ps = 1  -> Light Num Lock.\n//     Ps = 2  -> Light Caps Lock.\n//     Ps = 3  -> Light Scroll Lock.\n//     Ps = 2  1  -> Extinguish Num Lock.\n//     Ps = 2  2  -> Extinguish Caps Lock.\n//     Ps = 2  3  -> Extinguish Scroll Lock.\nTerminal.prototype.loadLEDs = function(params) {\n  ;\n};\n\n// CSI Ps SP q\n//   Set cursor style (DECSCUSR, VT520).\n//     Ps = 0  -> blinking block.\n//     Ps = 1  -> blinking block (default).\n//     Ps = 2  -> steady block.\n//     Ps = 3  -> blinking underline.\n//     Ps = 4  -> steady underline.\nTerminal.prototype.setCursorStyle = function(params) {\n  ;\n};\n\n// CSI Ps \" q\n//   Select character protection attribute (DECSCA).  Valid values\n//   for the parameter:\n//     Ps = 0  -> DECSED and DECSEL can erase (default).\n//     Ps = 1  -> DECSED and DECSEL cannot erase.\n//     Ps = 2  -> DECSED and DECSEL can erase.\nTerminal.prototype.setCharProtectionAttr = function(params) {\n  ;\n};\n\n// CSI ? Pm r\n//   Restore DEC Private Mode Values.  The value of Ps previously\n//   saved is restored.  Ps values are the same as for DECSET.\nTerminal.prototype.restorePrivateValues = function(params) {\n  ;\n};\n\n// CSI Pt; Pl; Pb; Pr; Ps$ r\n//   Change Attributes in Rectangular Area (DECCARA), VT400 and up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n//     Ps denotes the SGR attributes to change: 0, 1, 4, 5, 7.\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.setAttrInRectangle = function(params) {\n  var t = params[0]\n    , l = params[1]\n    , b = params[2]\n    , r = params[3]\n    , attr = params[4];\n\n  var line\n    , i;\n\n  for (; t < b + 1; t++) {\n    line = this.lines[this.ybase + t];\n    for (i = l; i < r; i++) {\n      line[i] = [attr, line[i][1]];\n    }\n  }\n\n  // this.maxRange();\n  this.updateRange(params[0]);\n  this.updateRange(params[2]);\n};\n\n// CSI ? Pm s\n//   Save DEC Private Mode Values.  Ps values are the same as for\n//   DECSET.\nTerminal.prototype.savePrivateValues = function(params) {\n  ;\n};\n\n// CSI Ps ; Ps ; Ps t\n//   Window manipulation (from dtterm, as well as extensions).\n//   These controls may be disabled using the allowWindowOps\n//   resource.  Valid values for the first (and any additional\n//   parameters) are:\n//     Ps = 1  -> De-iconify window.\n//     Ps = 2  -> Iconify window.\n//     Ps = 3  ;  x ;  y -> Move window to [x, y].\n//     Ps = 4  ;  height ;  width -> Resize the xterm window to\n//     height and width in pixels.\n//     Ps = 5  -> Raise the xterm window to the front of the stack-\n//     ing order.\n//     Ps = 6  -> Lower the xterm window to the bottom of the\n//     stacking order.\n//     Ps = 7  -> Refresh the xterm window.\n//     Ps = 8  ;  height ;  width -> Resize the text area to\n//     [height;width] in characters.\n//     Ps = 9  ;  0  -> Restore maximized window.\n//     Ps = 9  ;  1  -> Maximize window (i.e., resize to screen\n//     size).\n//     Ps = 1 0  ;  0  -> Undo full-screen mode.\n//     Ps = 1 0  ;  1  -> Change to full-screen.\n//     Ps = 1 1  -> Report xterm window state.  If the xterm window\n//     is open (non-iconified), it returns CSI 1 t .  If the xterm\n//     window is iconified, it returns CSI 2 t .\n//     Ps = 1 3  -> Report xterm window position.  Result is CSI 3\n//     ; x ; y t\n//     Ps = 1 4  -> Report xterm window in pixels.  Result is CSI\n//     4  ;  height ;  width t\n//     Ps = 1 8  -> Report the size of the text area in characters.\n//     Result is CSI  8  ;  height ;  width t\n//     Ps = 1 9  -> Report the size of the screen in characters.\n//     Result is CSI  9  ;  height ;  width t\n//     Ps = 2 0  -> Report xterm window's icon label.  Result is\n//     OSC  L  label ST\n//     Ps = 2 1  -> Report xterm window's title.  Result is OSC  l\n//     label ST\n//     Ps = 2 2  ;  0  -> Save xterm icon and window title on\n//     stack.\n//     Ps = 2 2  ;  1  -> Save xterm icon title on stack.\n//     Ps = 2 2  ;  2  -> Save xterm window title on stack.\n//     Ps = 2 3  ;  0  -> Restore xterm icon and window title from\n//     stack.\n//     Ps = 2 3  ;  1  -> Restore xterm icon title from stack.\n//     Ps = 2 3  ;  2  -> Restore xterm window title from stack.\n//     Ps >= 2 4  -> Resize to Ps lines (DECSLPP).\nTerminal.prototype.manipulateWindow = function(params) {\n  ;\n};\n\n// CSI Pt; Pl; Pb; Pr; Ps$ t\n//   Reverse Attributes in Rectangular Area (DECRARA), VT400 and\n//   up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n//     Ps denotes the attributes to reverse, i.e.,  1, 4, 5, 7.\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.reverseAttrInRectangle = function(params) {\n  ;\n};\n\n// CSI > Ps; Ps t\n//   Set one or more features of the title modes.  Each parameter\n//   enables a single feature.\n//     Ps = 0  -> Set window/icon labels using hexadecimal.\n//     Ps = 1  -> Query window/icon labels using hexadecimal.\n//     Ps = 2  -> Set window/icon labels using UTF-8.\n//     Ps = 3  -> Query window/icon labels using UTF-8.  (See dis-\n//     cussion of \"Title Modes\")\nTerminal.prototype.setTitleModeFeature = function(params) {\n  ;\n};\n\n// CSI Ps SP t\n//   Set warning-bell volume (DECSWBV, VT520).\n//     Ps = 0  or 1  -> off.\n//     Ps = 2 , 3  or 4  -> low.\n//     Ps = 5 , 6 , 7 , or 8  -> high.\nTerminal.prototype.setWarningBellVolume = function(params) {\n  ;\n};\n\n// CSI Ps SP u\n//   Set margin-bell volume (DECSMBV, VT520).\n//     Ps = 1  -> off.\n//     Ps = 2 , 3  or 4  -> low.\n//     Ps = 0 , 5 , 6 , 7 , or 8  -> high.\nTerminal.prototype.setMarginBellVolume = function(params) {\n  ;\n};\n\n// CSI Pt; Pl; Pb; Pr; Pp; Pt; Pl; Pp$ v\n//   Copy Rectangular Area (DECCRA, VT400 and up).\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n//     Pp denotes the source page.\n//     Pt; Pl denotes the target location.\n//     Pp denotes the target page.\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.copyRectangle = function(params) {\n  ;\n};\n\n// CSI Pt ; Pl ; Pb ; Pr ' w\n//   Enable Filter Rectangle (DECEFR), VT420 and up.\n//   Parameters are [top;left;bottom;right].\n//   Defines the coordinates of a filter rectangle and activates\n//   it.  Anytime the locator is detected outside of the filter\n//   rectangle, an outside rectangle event is generated and the\n//   rectangle is disabled.  Filter rectangles are always treated\n//   as \"one-shot\" events.  Any parameters that are omitted default\n//   to the current locator position.  If all parameters are omit-\n//   ted, any locator motion will be reported.  DECELR always can-\n//   cels any prevous rectangle definition.\nTerminal.prototype.enableFilterRectangle = function(params) {\n  ;\n};\n\n// CSI Ps x  Request Terminal Parameters (DECREQTPARM).\n//   if Ps is a \"0\" (default) or \"1\", and xterm is emulating VT100,\n//   the control sequence elicits a response of the same form whose\n//   parameters describe the terminal:\n//     Ps -> the given Ps incremented by 2.\n//     Pn = 1  <- no parity.\n//     Pn = 1  <- eight bits.\n//     Pn = 1  <- 2  8  transmit 38.4k baud.\n//     Pn = 1  <- 2  8  receive 38.4k baud.\n//     Pn = 1  <- clock multiplier.\n//     Pn = 0  <- STP flags.\nTerminal.prototype.requestParameters = function(params) {\n  ;\n};\n\n// CSI Ps x  Select Attribute Change Extent (DECSACE).\n//     Ps = 0  -> from start to end position, wrapped.\n//     Ps = 1  -> from start to end position, wrapped.\n//     Ps = 2  -> rectangle (exact).\nTerminal.prototype.selectChangeExtent = function(params) {\n  ;\n};\n\n// CSI Pc; Pt; Pl; Pb; Pr$ x\n//   Fill Rectangular Area (DECFRA), VT420 and up.\n//     Pc is the character to use.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.fillRectangle = function(params) {\n  var ch = params[0]\n    , t = params[1]\n    , l = params[2]\n    , b = params[3]\n    , r = params[4];\n\n  var line\n    , i;\n\n  for (; t < b + 1; t++) {\n    line = this.lines[this.ybase + t];\n    for (i = l; i < r; i++) {\n      line[i] = [line[i][0], String.fromCharCode(ch)];\n    }\n  }\n\n  // this.maxRange();\n  this.updateRange(params[1]);\n  this.updateRange(params[3]);\n};\n\n// CSI Ps ; Pu ' z\n//   Enable Locator Reporting (DECELR).\n//   Valid values for the first parameter:\n//     Ps = 0  -> Locator disabled (default).\n//     Ps = 1  -> Locator enabled.\n//     Ps = 2  -> Locator enabled for one report, then disabled.\n//   The second parameter specifies the coordinate unit for locator\n//   reports.\n//   Valid values for the second parameter:\n//     Pu = 0  <- or omitted -> default to character cells.\n//     Pu = 1  <- device physical pixels.\n//     Pu = 2  <- character cells.\nTerminal.prototype.enableLocatorReporting = function(params) {\n  var val = params[0] > 0;\n  //this.mouseEvents = val;\n  //this.decLocator = val;\n};\n\n// CSI Pt; Pl; Pb; Pr$ z\n//   Erase Rectangular Area (DECERA), VT400 and up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.eraseRectangle = function(params) {\n  var t = params[0]\n    , l = params[1]\n    , b = params[2]\n    , r = params[3];\n\n  var line\n    , i\n    , ch;\n\n  ch = [this.eraseAttr(), ' ']; // xterm?\n\n  for (; t < b + 1; t++) {\n    line = this.lines[this.ybase + t];\n    for (i = l; i < r; i++) {\n      line[i] = ch;\n    }\n  }\n\n  // this.maxRange();\n  this.updateRange(params[0]);\n  this.updateRange(params[2]);\n};\n\n// CSI Pm ' {\n//   Select Locator Events (DECSLE).\n//   Valid values for the first (and any additional parameters)\n//   are:\n//     Ps = 0  -> only respond to explicit host requests (DECRQLP).\n//                (This is default).  It also cancels any filter\n//   rectangle.\n//     Ps = 1  -> report button down transitions.\n//     Ps = 2  -> do not report button down transitions.\n//     Ps = 3  -> report button up transitions.\n//     Ps = 4  -> do not report button up transitions.\nTerminal.prototype.setLocatorEvents = function(params) {\n  ;\n};\n\n// CSI Pt; Pl; Pb; Pr$ {\n//   Selective Erase Rectangular Area (DECSERA), VT400 and up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\nTerminal.prototype.selectiveEraseRectangle = function(params) {\n  ;\n};\n\n// CSI Ps ' |\n//   Request Locator Position (DECRQLP).\n//   Valid values for the parameter are:\n//     Ps = 0 , 1 or omitted -> transmit a single DECLRP locator\n//     report.\n\n//   If Locator Reporting has been enabled by a DECELR, xterm will\n//   respond with a DECLRP Locator Report.  This report is also\n//   generated on button up and down events if they have been\n//   enabled with a DECSLE, or when the locator is detected outside\n//   of a filter rectangle, if filter rectangles have been enabled\n//   with a DECEFR.\n\n//     -> CSI Pe ; Pb ; Pr ; Pc ; Pp &  w\n\n//   Parameters are [event;button;row;column;page].\n//   Valid values for the event:\n//     Pe = 0  -> locator unavailable - no other parameters sent.\n//     Pe = 1  -> request - xterm received a DECRQLP.\n//     Pe = 2  -> left button down.\n//     Pe = 3  -> left button up.\n//     Pe = 4  -> middle button down.\n//     Pe = 5  -> middle button up.\n//     Pe = 6  -> right button down.\n//     Pe = 7  -> right button up.\n//     Pe = 8  -> M4 button down.\n//     Pe = 9  -> M4 button up.\n//     Pe = 1 0  -> locator outside filter rectangle.\n//   ``button'' parameter is a bitmask indicating which buttons are\n//     pressed:\n//     Pb = 0  <- no buttons down.\n//     Pb & 1  <- right button down.\n//     Pb & 2  <- middle button down.\n//     Pb & 4  <- left button down.\n//     Pb & 8  <- M4 button down.\n//   ``row'' and ``column'' parameters are the coordinates of the\n//     locator position in the xterm window, encoded as ASCII deci-\n//     mal.\n//   The ``page'' parameter is not used by xterm, and will be omit-\n//   ted.\nTerminal.prototype.requestLocatorPosition = function(params) {\n  ;\n};\n\n// CSI P m SP }\n// Insert P s Column(s) (default = 1) (DECIC), VT420 and up.\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.insertColumns = function() {\n  var param = params[0]\n    , l = this.ybase + this.rows\n    , ch = [this.eraseAttr(), ' '] // xterm?\n    , i;\n\n  while (param--) {\n    for (i = this.ybase; i < l; i++) {\n      this.lines[i].splice(this.x + 1, 0, ch);\n      this.lines[i].pop();\n    }\n  }\n\n  this.maxRange();\n};\n\n// CSI P m SP ~\n// Delete P s Column(s) (default = 1) (DECDC), VT420 and up\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.deleteColumns = function() {\n  var param = params[0]\n    , l = this.ybase + this.rows\n    , ch = [this.eraseAttr(), ' '] // xterm?\n    , i;\n\n  while (param--) {\n    for (i = this.ybase; i < l; i++) {\n      this.lines[i].splice(this.x, 1);\n      this.lines[i].push(ch);\n    }\n  }\n\n  this.maxRange();\n};\n\n/**\n * Prefix/Select/Visual/Search Modes\n */\n\nTerminal.prototype.enterPrefix = function() {\n  this.prefixMode = true;\n};\n\nTerminal.prototype.leavePrefix = function() {\n  this.prefixMode = false;\n};\n\nTerminal.prototype.enterSelect = function() {\n  this._real = {\n    x: this.x,\n    y: this.y,\n    ydisp: this.ydisp,\n    ybase: this.ybase,\n    cursorHidden: this.cursorHidden,\n    lines: this.copyBuffer(this.lines),\n    write: this.write\n  };\n  this.write = function() {};\n  this.selectMode = true;\n  this.visualMode = false;\n  this.cursorHidden = false;\n  this.refresh(this.y, this.y);\n};\n\nTerminal.prototype.leaveSelect = function() {\n  this.x = this._real.x;\n  this.y = this._real.y;\n  this.ydisp = this._real.ydisp;\n  this.ybase = this._real.ybase;\n  this.cursorHidden = this._real.cursorHidden;\n  this.lines = this._real.lines;\n  this.write = this._real.write;\n  delete this._real;\n  this.selectMode = false;\n  this.visualMode = false;\n  this.refresh(0, this.rows - 1);\n};\n\nTerminal.prototype.enterVisual = function() {\n  this._real.preVisual = this.copyBuffer(this.lines);\n  this.selectText(this.x, this.x, this.ydisp + this.y, this.ydisp + this.y);\n  this.visualMode = true;\n};\n\nTerminal.prototype.leaveVisual = function() {\n  this.lines = this._real.preVisual;\n  delete this._real.preVisual;\n  delete this._selected;\n  this.visualMode = false;\n  this.refresh(0, this.rows - 1);\n};\n\nTerminal.prototype.enterSearch = function(down) {\n  this.entry = '';\n  this.searchMode = true;\n  this.searchDown = down;\n  this._real.preSearch = this.copyBuffer(this.lines);\n  this._real.preSearchX = this.x;\n  this._real.preSearchY = this.y;\n\n  var bottom = this.ydisp + this.rows - 1;\n  for (var i = 0; i < this.entryPrefix.length; i++) {\n    //this.lines[bottom][i][0] = (this.defAttr & ~0x1ff) | 4;\n    //this.lines[bottom][i][1] = this.entryPrefix[i];\n    this.lines[bottom][i] = [\n      (this.defAttr & ~0x1ff) | 4,\n      this.entryPrefix[i]\n    ];\n  }\n\n  this.y = this.rows - 1;\n  this.x = this.entryPrefix.length;\n\n  this.refresh(this.rows - 1, this.rows - 1);\n};\n\nTerminal.prototype.leaveSearch = function() {\n  this.searchMode = false;\n\n  if (this._real.preSearch) {\n    this.lines = this._real.preSearch;\n    this.x = this._real.preSearchX;\n    this.y = this._real.preSearchY;\n    delete this._real.preSearch;\n    delete this._real.preSearchX;\n    delete this._real.preSearchY;\n  }\n\n  this.refresh(this.rows - 1, this.rows - 1);\n};\n\nTerminal.prototype.copyBuffer = function(lines) {\n  var lines = lines || this.lines\n    , out = [];\n\n  for (var y = 0; y < lines.length; y++) {\n    out[y] = [];\n    for (var x = 0; x < lines[y].length; x++) {\n      out[y][x] = [lines[y][x][0], lines[y][x][1]];\n    }\n  }\n\n  return out;\n};\n\nTerminal.prototype.getCopyTextarea = function(text) {\n  var textarea = this._copyTextarea\n    , document = this.document;\n\n  if (!textarea) {\n    textarea = document.createElement('textarea');\n    textarea.style.position = 'absolute';\n    textarea.style.left = '-32000px';\n    textarea.style.top = '-32000px';\n    textarea.style.width = '0px';\n    textarea.style.height = '0px';\n    textarea.style.opacity = '0';\n    textarea.style.backgroundColor = 'transparent';\n    textarea.style.borderStyle = 'none';\n    textarea.style.outlineStyle = 'none';\n\n    document.getElementsByTagName('body')[0].appendChild(textarea);\n\n    this._copyTextarea = textarea;\n  }\n\n  return textarea;\n};\n\n// NOTE: Only works for primary selection on X11.\n// Non-X11 users should use Ctrl-C instead.\nTerminal.prototype.copyText = function(text) {\n  var self = this\n    , textarea = this.getCopyTextarea();\n\n  this.emit('copy', text);\n\n  textarea.focus();\n  textarea.textContent = text;\n  textarea.value = text;\n  textarea.setSelectionRange(0, text.length);\n\n  setTimeout(function() {\n    self.element.focus();\n    self.focus();\n  }, 1);\n};\n\nTerminal.prototype.selectText = function(x1, x2, y1, y2) {\n  var ox1\n    , ox2\n    , oy1\n    , oy2\n    , tmp\n    , x\n    , y\n    , xl\n    , attr;\n\n  if (this._selected) {\n    ox1 = this._selected.x1;\n    ox2 = this._selected.x2;\n    oy1 = this._selected.y1;\n    oy2 = this._selected.y2;\n\n    if (oy2 < oy1) {\n      tmp = ox2;\n      ox2 = ox1;\n      ox1 = tmp;\n      tmp = oy2;\n      oy2 = oy1;\n      oy1 = tmp;\n    }\n\n    if (ox2 < ox1 && oy1 === oy2) {\n      tmp = ox2;\n      ox2 = ox1;\n      ox1 = tmp;\n    }\n\n    for (y = oy1; y <= oy2; y++) {\n      x = 0;\n      xl = this.cols - 1;\n      if (y === oy1) {\n        x = ox1;\n      }\n      if (y === oy2) {\n        xl = ox2;\n      }\n      for (; x <= xl; x++) {\n        if (this.lines[y][x].old != null) {\n          //this.lines[y][x][0] = this.lines[y][x].old;\n          //delete this.lines[y][x].old;\n          attr = this.lines[y][x].old;\n          delete this.lines[y][x].old;\n          this.lines[y][x] = [attr, this.lines[y][x][1]];\n        }\n      }\n    }\n\n    y1 = this._selected.y1;\n    x1 = this._selected.x1;\n  }\n\n  y1 = Math.max(y1, 0);\n  y1 = Math.min(y1, this.ydisp + this.rows - 1);\n\n  y2 = Math.max(y2, 0);\n  y2 = Math.min(y2, this.ydisp + this.rows - 1);\n\n  this._selected = { x1: x1, x2: x2, y1: y1, y2: y2 };\n\n  if (y2 < y1) {\n    tmp = x2;\n    x2 = x1;\n    x1 = tmp;\n    tmp = y2;\n    y2 = y1;\n    y1 = tmp;\n  }\n\n  if (x2 < x1 && y1 === y2) {\n    tmp = x2;\n    x2 = x1;\n    x1 = tmp;\n  }\n\n  for (y = y1; y <= y2; y++) {\n    x = 0;\n    xl = this.cols - 1;\n    if (y === y1) {\n      x = x1;\n    }\n    if (y === y2) {\n      xl = x2;\n    }\n    for (; x <= xl; x++) {\n      //this.lines[y][x].old = this.lines[y][x][0];\n      //this.lines[y][x][0] &= ~0x1ff;\n      //this.lines[y][x][0] |= (0x1ff << 9) | 4;\n      attr = this.lines[y][x][0];\n      this.lines[y][x] = [\n        (attr & ~0x1ff) | ((0x1ff << 9) | 4),\n        this.lines[y][x][1]\n      ];\n      this.lines[y][x].old = attr;\n    }\n  }\n\n  y1 = y1 - this.ydisp;\n  y2 = y2 - this.ydisp;\n\n  y1 = Math.max(y1, 0);\n  y1 = Math.min(y1, this.rows - 1);\n\n  y2 = Math.max(y2, 0);\n  y2 = Math.min(y2, this.rows - 1);\n\n  //this.refresh(y1, y2);\n  this.refresh(0, this.rows - 1);\n};\n\nTerminal.prototype.grabText = function(x1, x2, y1, y2) {\n  var out = ''\n    , buf = ''\n    , ch\n    , x\n    , y\n    , xl\n    , tmp;\n\n  if (y2 < y1) {\n    tmp = x2;\n    x2 = x1;\n    x1 = tmp;\n    tmp = y2;\n    y2 = y1;\n    y1 = tmp;\n  }\n\n  if (x2 < x1 && y1 === y2) {\n    tmp = x2;\n    x2 = x1;\n    x1 = tmp;\n  }\n\n  for (y = y1; y <= y2; y++) {\n    x = 0;\n    xl = this.cols - 1;\n    if (y === y1) {\n      x = x1;\n    }\n    if (y === y2) {\n      xl = x2;\n    }\n    for (; x <= xl; x++) {\n      ch = this.lines[y][x][1];\n      if (ch === ' ') {\n        buf += ch;\n        continue;\n      }\n      if (buf) {\n        out += buf;\n        buf = '';\n      }\n      out += ch;\n      if (isWide(ch)) x++;\n    }\n    buf = '';\n    out += '\\n';\n  }\n\n  // If we're not at the end of the\n  // line, don't add a newline.\n  for (x = x2, y = y2; x < this.cols; x++) {\n    if (this.lines[y][x][1] !== ' ') {\n      out = out.slice(0, -1);\n      break;\n    }\n  }\n\n  return out;\n};\n\nTerminal.prototype.keyPrefix = function(ev, key) {\n  if (key === 'k' || key === '&') {\n    this.destroy();\n  } else if (key === 'p' || key === ']') {\n    this.emit('request paste');\n  } else if (key === 'c') {\n    this.emit('request create');\n  } else if (key >= '0' && key <= '9') {\n    key = +key - 1;\n    if (!~key) key = 9;\n    this.emit('request term', key);\n  } else if (key === 'n') {\n    this.emit('request term next');\n  } else if (key === 'P') {\n    this.emit('request term previous');\n  } else if (key === ':') {\n    this.emit('request command mode');\n  } else if (key === '[') {\n    this.enterSelect();\n  }\n};\n\nTerminal.prototype.keySelect = function(ev, key) {\n  this.showCursor();\n\n  if (this.searchMode || key === 'n' || key === 'N') {\n    return this.keySearch(ev, key);\n  }\n\n  if (key === '\\x04') { // ctrl-d\n    var y = this.ydisp + this.y;\n    if (this.ydisp === this.ybase) {\n      // Mimic vim behavior\n      this.y = Math.min(this.y + (this.rows - 1) / 2 | 0, this.rows - 1);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.scrollDisp((this.rows - 1) / 2 | 0);\n    }\n    if (this.visualMode) {\n      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === '\\x15') { // ctrl-u\n    var y = this.ydisp + this.y;\n    if (this.ydisp === 0) {\n      // Mimic vim behavior\n      this.y = Math.max(this.y - (this.rows - 1) / 2 | 0, 0);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.scrollDisp(-(this.rows - 1) / 2 | 0);\n    }\n    if (this.visualMode) {\n      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === '\\x06') { // ctrl-f\n    var y = this.ydisp + this.y;\n    this.scrollDisp(this.rows - 1);\n    if (this.visualMode) {\n      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === '\\x02') { // ctrl-b\n    var y = this.ydisp + this.y;\n    this.scrollDisp(-(this.rows - 1));\n    if (this.visualMode) {\n      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === 'k' || key === '\\x1b[A') {\n    var y = this.ydisp + this.y;\n    this.y--;\n    if (this.y < 0) {\n      this.y = 0;\n      this.scrollDisp(-1);\n    }\n    if (this.visualMode) {\n      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n    } else {\n      this.refresh(this.y, this.y + 1);\n    }\n    return;\n  }\n\n  if (key === 'j' || key === '\\x1b[B') {\n    var y = this.ydisp + this.y;\n    this.y++;\n    if (this.y >= this.rows) {\n      this.y = this.rows - 1;\n      this.scrollDisp(1);\n    }\n    if (this.visualMode) {\n      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n    } else {\n      this.refresh(this.y - 1, this.y);\n    }\n    return;\n  }\n\n  if (key === 'h' || key === '\\x1b[D') {\n    var x = this.x;\n    this.x--;\n    if (this.x < 0) {\n      this.x = 0;\n    }\n    if (this.visualMode) {\n      this.selectText(x, this.x, this.ydisp + this.y, this.ydisp + this.y);\n    } else {\n      this.refresh(this.y, this.y);\n    }\n    return;\n  }\n\n  if (key === 'l' || key === '\\x1b[C') {\n    var x = this.x;\n    this.x++;\n    if (this.x >= this.cols) {\n      this.x = this.cols - 1;\n    }\n    if (this.visualMode) {\n      this.selectText(x, this.x, this.ydisp + this.y, this.ydisp + this.y);\n    } else {\n      this.refresh(this.y, this.y);\n    }\n    return;\n  }\n\n  if (key === 'v' || key === ' ') {\n    if (!this.visualMode) {\n      this.enterVisual();\n    } else {\n      this.leaveVisual();\n    }\n    return;\n  }\n\n  if (key === 'y') {\n    if (this.visualMode) {\n      var text = this.grabText(\n        this._selected.x1, this._selected.x2,\n        this._selected.y1, this._selected.y2);\n      this.copyText(text);\n      this.leaveVisual();\n      // this.leaveSelect();\n    }\n    return;\n  }\n\n  if (key === 'q' || key === '\\x1b') {\n    if (this.visualMode) {\n      this.leaveVisual();\n    } else {\n      this.leaveSelect();\n    }\n    return;\n  }\n\n  if (key === 'w' || key === 'W') {\n    var ox = this.x;\n    var oy = this.y;\n    var oyd = this.ydisp;\n\n    var x = this.x;\n    var y = this.y;\n    var yb = this.ydisp;\n    var saw_space = false;\n\n    for (;;) {\n      var line = this.lines[yb + y];\n      while (x < this.cols) {\n        if (line[x][1] <= ' ') {\n          saw_space = true;\n        } else if (saw_space) {\n          break;\n        }\n        x++;\n      }\n      if (x >= this.cols) x = this.cols - 1;\n      if (x === this.cols - 1 && line[x][1] <= ' ') {\n        x = 0;\n        if (++y >= this.rows) {\n          y--;\n          if (++yb > this.ybase) {\n            yb = this.ybase;\n            x = this.x;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    this.x = x, this.y = y;\n    this.scrollDisp(-this.ydisp + yb);\n\n    if (this.visualMode) {\n      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === 'b' || key === 'B') {\n    var ox = this.x;\n    var oy = this.y;\n    var oyd = this.ydisp;\n\n    var x = this.x;\n    var y = this.y;\n    var yb = this.ydisp;\n\n    for (;;) {\n      var line = this.lines[yb + y];\n      var saw_space = x > 0 && line[x][1] > ' ' && line[x - 1][1] > ' ';\n      while (x >= 0) {\n        if (line[x][1] <= ' ') {\n          if (saw_space && (x + 1 < this.cols && line[x + 1][1] > ' ')) {\n            x++;\n            break;\n          } else {\n            saw_space = true;\n          }\n        }\n        x--;\n      }\n      if (x < 0) x = 0;\n      if (x === 0 && (line[x][1] <= ' ' || !saw_space)) {\n        x = this.cols - 1;\n        if (--y < 0) {\n          y++;\n          if (--yb < 0) {\n            yb++;\n            x = 0;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    this.x = x, this.y = y;\n    this.scrollDisp(-this.ydisp + yb);\n\n    if (this.visualMode) {\n      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === 'e' || key === 'E') {\n    var x = this.x + 1;\n    var y = this.y;\n    var yb = this.ydisp;\n    if (x >= this.cols) x--;\n\n    for (;;) {\n      var line = this.lines[yb + y];\n      while (x < this.cols) {\n        if (line[x][1] <= ' ') {\n          x++;\n        } else {\n          break;\n        }\n      }\n      while (x < this.cols) {\n        if (line[x][1] <= ' ') {\n          if (x - 1 >= 0 && line[x - 1][1] > ' ') {\n            x--;\n            break;\n          }\n        }\n        x++;\n      }\n      if (x >= this.cols) x = this.cols - 1;\n      if (x === this.cols - 1 && line[x][1] <= ' ') {\n        x = 0;\n        if (++y >= this.rows) {\n          y--;\n          if (++yb > this.ybase) {\n            yb = this.ybase;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    this.x = x, this.y = y;\n    this.scrollDisp(-this.ydisp + yb);\n\n    if (this.visualMode) {\n      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === '^' || key === '0') {\n    var ox = this.x;\n\n    if (key === '0') {\n      this.x = 0;\n    } else if (key === '^') {\n      var line = this.lines[this.ydisp + this.y];\n      var x = 0;\n      while (x < this.cols) {\n        if (line[x][1] > ' ') {\n          break;\n        }\n        x++;\n      }\n      if (x >= this.cols) x = this.cols - 1;\n      this.x = x;\n    }\n\n    if (this.visualMode) {\n      this.selectText(ox, this.x, this.ydisp + this.y, this.ydisp + this.y);\n    } else {\n      this.refresh(this.y, this.y);\n    }\n    return;\n  }\n\n  if (key === '$') {\n    var ox = this.x;\n    var line = this.lines[this.ydisp + this.y];\n    var x = this.cols - 1;\n    while (x >= 0) {\n      if (line[x][1] > ' ') {\n        if (this.visualMode && x < this.cols - 1) x++;\n        break;\n      }\n      x--;\n    }\n    if (x < 0) x = 0;\n    this.x = x;\n    if (this.visualMode) {\n      this.selectText(ox, this.x, this.ydisp + this.y, this.ydisp + this.y);\n    } else {\n      this.refresh(this.y, this.y);\n    }\n    return;\n  }\n\n  if (key === 'g' || key === 'G') {\n    var ox = this.x;\n    var oy = this.y;\n    var oyd = this.ydisp;\n    if (key === 'g') {\n      this.x = 0, this.y = 0;\n      this.scrollDisp(-this.ydisp);\n    } else if (key === 'G') {\n      this.x = 0, this.y = this.rows - 1;\n      this.scrollDisp(this.ybase);\n    }\n    if (this.visualMode) {\n      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === 'H' || key === 'M' || key === 'L') {\n    var ox = this.x;\n    var oy = this.y;\n    if (key === 'H') {\n      this.x = 0, this.y = 0;\n    } else if (key === 'M') {\n      this.x = 0, this.y = this.rows / 2 | 0;\n    } else if (key === 'L') {\n      this.x = 0, this.y = this.rows - 1;\n    }\n    if (this.visualMode) {\n      this.selectText(ox, this.x, this.ydisp + oy, this.ydisp + this.y);\n    } else {\n      this.refresh(oy, oy);\n      this.refresh(this.y, this.y);\n    }\n    return;\n  }\n\n  if (key === '{' || key === '}') {\n    var ox = this.x;\n    var oy = this.y;\n    var oyd = this.ydisp;\n\n    var line;\n    var saw_full = false;\n    var found = false;\n    var first_is_space = -1;\n    var y = this.y + (key === '{' ? -1 : 1);\n    var yb = this.ydisp;\n    var i;\n\n    if (key === '{') {\n      if (y < 0) {\n        y++;\n        if (yb > 0) yb--;\n      }\n    } else if (key === '}') {\n      if (y >= this.rows) {\n        y--;\n        if (yb < this.ybase) yb++;\n      }\n    }\n\n    for (;;) {\n      line = this.lines[yb + y];\n\n      for (i = 0; i < this.cols; i++) {\n        if (line[i][1] > ' ') {\n          if (first_is_space === -1) {\n            first_is_space = 0;\n          }\n          saw_full = true;\n          break;\n        } else if (i === this.cols - 1) {\n          if (first_is_space === -1) {\n            first_is_space = 1;\n          } else if (first_is_space === 0) {\n            found = true;\n          } else if (first_is_space === 1) {\n            if (saw_full) found = true;\n          }\n          break;\n        }\n      }\n\n      if (found) break;\n\n      if (key === '{') {\n        y--;\n        if (y < 0) {\n          y++;\n          if (yb > 0) yb--;\n          else break;\n        }\n      } else if (key === '}') {\n        y++;\n        if (y >= this.rows) {\n          y--;\n          if (yb < this.ybase) yb++;\n          else break;\n        }\n      }\n    }\n\n    if (!found) {\n      if (key === '{') {\n        y = 0;\n        yb = 0;\n      } else if (key === '}') {\n        y = this.rows - 1;\n        yb = this.ybase;\n      }\n    }\n\n    this.x = 0, this.y = y;\n    this.scrollDisp(-this.ydisp + yb);\n\n    if (this.visualMode) {\n      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === '/' || key === '?') {\n    if (!this.visualMode) {\n      this.enterSearch(key === '/');\n    }\n    return;\n  }\n\n  return false;\n};\n\nTerminal.prototype.keySearch = function(ev, key) {\n  if (key === '\\x1b') {\n    this.leaveSearch();\n    return;\n  }\n\n  if (key === '\\r' || (!this.searchMode && (key === 'n' || key === 'N'))) {\n    this.leaveSearch();\n\n    var entry = this.entry;\n\n    if (!entry) {\n      this.refresh(0, this.rows - 1);\n      return;\n    }\n\n    var ox = this.x;\n    var oy = this.y;\n    var oyd = this.ydisp;\n\n    var line;\n    var found = false;\n    var wrapped = false;\n    var x = this.x + 1;\n    var y = this.ydisp + this.y;\n    var yb, i;\n    var up = key === 'N'\n      ? this.searchDown\n      : !this.searchDown;\n\n    for (;;) {\n      line = this.lines[y];\n\n      while (x < this.cols) {\n        for (i = 0; i < entry.length; i++) {\n          if (x + i >= this.cols) break;\n          if (line[x + i][1] !== entry[i]) {\n            break;\n          } else if (line[x + i][1] === entry[i] && i === entry.length - 1) {\n            found = true;\n            break;\n          }\n        }\n        if (found) break;\n        x += i + 1;\n      }\n      if (found) break;\n\n      x = 0;\n\n      if (!up) {\n        y++;\n        if (y > this.ybase + this.rows - 1) {\n          if (wrapped) break;\n          // this.setMessage('Search wrapped. Continuing at TOP.');\n          wrapped = true;\n          y = 0;\n        }\n      } else {\n        y--;\n        if (y < 0) {\n          if (wrapped) break;\n          // this.setMessage('Search wrapped. Continuing at BOTTOM.');\n          wrapped = true;\n          y = this.ybase + this.rows - 1;\n        }\n      }\n    }\n\n    if (found) {\n      if (y - this.ybase < 0) {\n        yb = y;\n        y = 0;\n        if (yb > this.ybase) {\n          y = yb - this.ybase;\n          yb = this.ybase;\n        }\n      } else {\n        yb = this.ybase;\n        y -= this.ybase;\n      }\n\n      this.x = x, this.y = y;\n      this.scrollDisp(-this.ydisp + yb);\n\n      if (this.visualMode) {\n        this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n      }\n      return;\n    }\n\n    // this.setMessage(\"No matches found.\");\n    this.refresh(0, this.rows - 1);\n\n    return;\n  }\n\n  if (key === '\\b' || key === '\\x7f') {\n    if (this.entry.length === 0) return;\n    var bottom = this.ydisp + this.rows - 1;\n    this.entry = this.entry.slice(0, -1);\n    var i = this.entryPrefix.length + this.entry.length;\n    //this.lines[bottom][i][1] = ' ';\n    this.lines[bottom][i] = [\n      this.lines[bottom][i][0],\n      ' '\n    ];\n    this.x--;\n    this.refresh(this.rows - 1, this.rows - 1);\n    this.refresh(this.y, this.y);\n    return;\n  }\n\n  if (key.length === 1 && key >= ' ' && key <= '~') {\n    var bottom = this.ydisp + this.rows - 1;\n    this.entry += key;\n    var i = this.entryPrefix.length + this.entry.length - 1;\n    //this.lines[bottom][i][0] = (this.defAttr & ~0x1ff) | 4;\n    //this.lines[bottom][i][1] = key;\n    this.lines[bottom][i] = [\n      (this.defAttr & ~0x1ff) | 4,\n      key\n    ];\n    this.x++;\n    this.refresh(this.rows - 1, this.rows - 1);\n    this.refresh(this.y, this.y);\n    return;\n  }\n\n  return false;\n};\n\n/**\n * Character Sets\n */\n\nTerminal.charsets = {};\n\n// DEC Special Character and Line Drawing Set.\n// http://vt100.net/docs/vt102-ug/table5-13.html\n// A lot of curses apps use this if they see TERM=xterm.\n// testing: echo -e '\\e(0a\\e(B'\n// The xterm output sometimes seems to conflict with the\n// reference above. xterm seems in line with the reference\n// when running vttest however.\n// The table below now uses xterm's output from vttest.\nTerminal.charsets.SCLD = { // (0\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u0009', // '\\t'\n  'c': '\\u000c', // '\\f'\n  'd': '\\u000d', // '\\r'\n  'e': '\\u000a', // '\\n'\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '\\u2424' (NL)\n  'i': '\\u000b', // '\\v'\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\nTerminal.charsets.UK = null; // (A\nTerminal.charsets.US = null; // (B (USASCII)\nTerminal.charsets.Dutch = null; // (4\nTerminal.charsets.Finnish = null; // (C or (5\nTerminal.charsets.French = null; // (R\nTerminal.charsets.FrenchCanadian = null; // (Q\nTerminal.charsets.German = null; // (K\nTerminal.charsets.Italian = null; // (Y\nTerminal.charsets.NorwegianDanish = null; // (E or (6\nTerminal.charsets.Spanish = null; // (Z\nTerminal.charsets.Swedish = null; // (H or (7\nTerminal.charsets.Swiss = null; // (=\nTerminal.charsets.ISOLatin = null; // /A\n\n/**\n * Helpers\n */\n\nfunction on(el, type, handler, capture) {\n  el.addEventListener(type, handler, capture || false);\n}\n\nfunction off(el, type, handler, capture) {\n  el.removeEventListener(type, handler, capture || false);\n}\n\nfunction cancel(ev) {\n  if (ev.preventDefault) ev.preventDefault();\n  ev.returnValue = false;\n  if (ev.stopPropagation) ev.stopPropagation();\n  ev.cancelBubble = true;\n  return false;\n}\n\nfunction inherits(child, parent) {\n  function f() {\n    this.constructor = child;\n  }\n  f.prototype = parent.prototype;\n  child.prototype = new f;\n}\n\n// if bold is broken, we can't\n// use it in the terminal.\nfunction isBoldBroken(document) {\n  var body = document.getElementsByTagName('body')[0];\n  var terminal = document.createElement('div');\n  terminal.className = 'terminal';\n  var line = document.createElement('div');\n  var el = document.createElement('span');\n  el.innerHTML = 'hello world';\n  line.appendChild(el);\n  terminal.appendChild(line);\n  body.appendChild(terminal);\n  var w1 = el.scrollWidth;\n  el.style.fontWeight = 'bold';\n  var w2 = el.scrollWidth;\n  body.removeChild(terminal);\n  return w1 !== w2;\n}\n\nvar String = this.String;\nvar setTimeout = this.setTimeout;\nvar setInterval = this.setInterval;\n\nfunction indexOf(obj, el) {\n  var i = obj.length;\n  while (i--) {\n    if (obj[i] === el) return i;\n  }\n  return -1;\n}\n\nfunction isWide(ch) {\n  if (ch <= '\\uff00') return false;\n  return (ch >= '\\uff01' && ch <= '\\uffbe')\n      || (ch >= '\\uffc2' && ch <= '\\uffc7')\n      || (ch >= '\\uffca' && ch <= '\\uffcf')\n      || (ch >= '\\uffd2' && ch <= '\\uffd7')\n      || (ch >= '\\uffda' && ch <= '\\uffdc')\n      || (ch >= '\\uffe0' && ch <= '\\uffe6')\n      || (ch >= '\\uffe8' && ch <= '\\uffee');\n}\n\nfunction matchColor(r1, g1, b1) {\n  var hash = (r1 << 16) | (g1 << 8) | b1;\n\n  if (matchColor._cache[hash] != null) {\n    return matchColor._cache[hash];\n  }\n\n  var ldiff = Infinity\n    , li = -1\n    , i = 0\n    , c\n    , r2\n    , g2\n    , b2\n    , diff;\n\n  for (; i < Terminal.vcolors.length; i++) {\n    c = Terminal.vcolors[i];\n    r2 = c[0];\n    g2 = c[1];\n    b2 = c[2];\n\n    diff = matchColor.distance(r1, g1, b1, r2, g2, b2);\n\n    if (diff === 0) {\n      li = i;\n      break;\n    }\n\n    if (diff < ldiff) {\n      ldiff = diff;\n      li = i;\n    }\n  }\n\n  return matchColor._cache[hash] = li;\n}\n\nmatchColor._cache = {};\n\n// http://stackoverflow.com/questions/1633828\nmatchColor.distance = function(r1, g1, b1, r2, g2, b2) {\n  return Math.pow(30 * (r1 - r2), 2)\n    + Math.pow(59 * (g1 - g2), 2)\n    + Math.pow(11 * (b1 - b2), 2);\n};\n\nfunction each(obj, iter, con) {\n  if (obj.forEach) return obj.forEach(iter, con);\n  for (var i = 0; i < obj.length; i++) {\n    iter.call(con, obj[i], i, obj);\n  }\n}\n\nfunction keys(obj) {\n  if (Object.keys) return Object.keys(obj);\n  var key, keys = [];\n  for (key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      keys.push(key);\n    }\n  }\n  return keys;\n}\n\n/**\n * Expose\n */\n\nTerminal.EventEmitter = EventEmitter;\nTerminal.Stream = Stream;\nTerminal.inherits = inherits;\nTerminal.on = on;\nTerminal.off = off;\nTerminal.cancel = cancel;\n\nif (typeof define === 'function' && define.amd) {\n  define([], function() { return Terminal; });\n} else if (typeof module !== 'undefined') {\n  module.exports = Terminal;\n} else {\n  this.Terminal = Terminal;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/term.js-cockpit/src/term.js\n// module id = 9\n// module chunks = 0 1 2","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar cockpit = require(\"cockpit\");\nvar mustache = require(\"mustache/mustache\");\n\n/*\n * Turns a mustache template into a translated mustache template\n * by preparsing it and translating it.\n */\nvar cache = { };\n\nfunction translate(template) {\n    if (template in cache)\n        return cache[template];\n    var div = document.createElement(\"div\");\n    div.innerHTML = template;\n    cockpit.translate(div);\n    var result = div.innerHTML;\n    cache[template] = result;\n    return result;\n}\n\n/* Just like the mustache object, except for translated */\nmodule.exports = cockpit.extend({ }, mustache, {\n    render: function render(template, view, partials) {\n        return translate(mustache.render(template, view, partials));\n    },\n    to_html: function to_html(template, view, partials, send) {\n        return translate(mustache.to_html(template, view, partials, send));\n    },\n    clearCache: function clearCache() {\n        cache = { };\n        return mustache.clearCache();\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/mustache.js\n// module id = 11\n// module chunks = 1 2","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false*/\n\n(function (root, factory) {\n  if (typeof exports === \"object\" && exports) {\n    factory(exports); // CommonJS\n  } else {\n    var mustache = {};\n    factory(mustache);\n    if (typeof define === \"function\" && define.amd) {\n      define(mustache); // AMD\n    } else {\n      root.Mustache = mustache; // <script>\n    }\n  }\n}(this, function (mustache) {\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var RegExp_test = RegExp.prototype.test;\n  function testRegExp(re, string) {\n    return RegExp_test.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace(string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var Object_toString = Object.prototype.toString;\n  var isArray = Array.isArray || function (object) {\n    return Object_toString.call(object) === '[object Array]';\n  };\n\n  function isFunction(object) {\n    return typeof object === 'function';\n  }\n\n  function escapeRegExp(string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n  }\n\n  var entityMap = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    \"/\": '&#x2F;'\n  };\n\n  function escapeHtml(string) {\n    return String(string).replace(/[&<>\"'\\/]/g, function (s) {\n      return entityMap[s];\n    });\n  }\n\n  function escapeTags(tags) {\n    if (!isArray(tags) || tags.length !== 2) {\n      throw new Error('Invalid tags: ' + tags);\n    }\n\n    return [\n      new RegExp(escapeRegExp(tags[0]) + \"\\\\s*\"),\n      new RegExp(\"\\\\s*\" + escapeRegExp(tags[1]))\n    ];\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate(template, tags) {\n    tags = tags || mustache.tags;\n    template = template || '';\n\n    if (typeof tags === 'string') {\n      tags = tags.split(spaceRe);\n    }\n\n    var tagRes = escapeTags(tags);\n    var scanner = new Scanner(template);\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace() {\n      if (hasTag && !nonSpace) {\n        while (spaces.length) {\n          delete tokens[spaces.pop()];\n        }\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(tagRes[0]);\n      if (value) {\n        for (var i = 0, len = value.length; i < len; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push(['text', chr, start, start + 1]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') {\n            stripSpace();\n          }\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(tagRes[0])) break;\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(tagRes[1]);\n      } else if (type === '{') {\n        value = scanner.scanUntil(new RegExp('\\\\s*' + escapeRegExp('}' + tags[1])));\n        scanner.scan(curlyRe);\n        scanner.scanUntil(tagRes[1]);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(tagRes[1]);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(tagRes[1])) {\n        throw new Error('Unclosed tag at ' + scanner.pos);\n      }\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection) {\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n        }\n        if (openSection[1] !== value) {\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n        }\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        tagRes = escapeTags(tags = value.split(spaceRe));\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n    if (openSection) {\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n    }\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens(tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, len = tokens.length; i < len; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens(tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, len = tokens.length; i < len; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n      case '#':\n      case '^':\n        collector.push(token);\n        sections.push(token);\n        collector = token[4] = [];\n        break;\n      case '/':\n        section = sections.pop();\n        section[5] = token[2];\n        collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n        break;\n      default:\n        collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner(string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function () {\n    return this.tail === \"\";\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function (re) {\n    var match = this.tail.match(re);\n\n    if (match && match.index === 0) {\n      var string = match[0];\n      this.tail = this.tail.substring(string.length);\n      this.pos += string.length;\n      return string;\n    }\n\n    return \"\";\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n    case -1:\n      match = this.tail;\n      this.tail = \"\";\n      break;\n    case 0:\n      match = \"\";\n      break;\n    default:\n      match = this.tail.substring(0, index);\n      this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context(view, parentContext) {\n    this.view = view == null ? {} : view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function (name) {\n    var value;\n    if (name in this.cache) {\n      value = this.cache[name];\n    } else {\n      var context = this;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n\n          var names = name.split('.'), i = 0;\n          while (value != null && i < names.length) {\n            value = value[names[i++]];\n          }\n        } else {\n          value = context.view[name];\n        }\n\n        if (value != null) break;\n\n        context = context.parent;\n      }\n\n      this.cache[name] = value;\n    }\n\n    if (isFunction(value)) {\n      value = value.call(this.view);\n    }\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer() {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null) {\n      tokens = cache[template] = parseTemplate(template, tags);\n    }\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    var self = this;\n    function subRender(template) {\n      return self.render(template, context, partials);\n    }\n\n    var token, value;\n    for (var i = 0, len = tokens.length; i < len; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n      case '#':\n        value = context.lookup(token[1]);\n        if (!value) continue;\n\n        if (isArray(value)) {\n          for (var j = 0, jlen = value.length; j < jlen; ++j) {\n            buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n          }\n        } else if (typeof value === 'object' || typeof value === 'string') {\n          buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n        } else if (isFunction(value)) {\n          if (typeof originalTemplate !== 'string') {\n            throw new Error('Cannot use higher-order sections without the original template');\n          }\n\n          // Extract the portion of the original template that the section contains.\n          value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n          if (value != null) buffer += value;\n        } else {\n          buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n        }\n\n        break;\n      case '^':\n        value = context.lookup(token[1]);\n\n        // Use JavaScript's definition of falsy. Include empty arrays.\n        // See https://github.com/janl/mustache.js/issues/186\n        if (!value || (isArray(value) && value.length === 0)) {\n          buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n        }\n\n        break;\n      case '>':\n        if (!partials) continue;\n        value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n        if (value != null) buffer += this.renderTokens(this.parse(value), context, partials, value);\n        break;\n      case '&':\n        value = context.lookup(token[1]);\n        if (value != null) buffer += value;\n        break;\n      case 'name':\n        value = context.lookup(token[1]);\n        if (value != null) buffer += mustache.escape(value);\n        break;\n      case 'text':\n        buffer += token[1];\n        break;\n      }\n    }\n\n    return buffer;\n  };\n\n  mustache.name = \"mustache.js\";\n  mustache.version = \"0.8.1\";\n  mustache.tags = [ \"{{\", \"}}\" ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function (template, view, partials) {\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.\n  mustache.to_html = function (template, view, partials, send) {\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/mustache/mustache.js\n// module id = 12\n// module chunks = 1 2","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2015 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    var $ = require(\"jquery\");\n    var cockpit = require(\"cockpit\");\n\n    var Mustache = require(\"mustache\");\n    require(\"patterns\");\n\n    var docker = require(\"./docker\");\n    var bar = require(\"./bar\");\n\n    var _ = cockpit.gettext;\n\n    var util = { };\n\n    util.resource_debug = function resource_debug() {\n        if (window.debugging == \"all\" || window.debugging == \"resource\")\n            console.debug.apply(console, arguments);\n    };\n\n    util.docker_debug = function docker_debug() {\n        if (window.debugging == \"all\" || window.debugging == \"docker\")\n            console.debug.apply(console, arguments);\n    };\n\n    util.quote_cmdline = function quote_cmdline(cmds) {\n        return docker.quote_cmdline(cmds || []);\n    };\n\n    util.unquote_cmdline = function unquote_cmdline(string) {\n        return docker.unquote_cmdline(string);\n    };\n\n    util.render_container_cmdline = function render_container_cmdline (container) {\n        // We do our own quoting in preference to using container.Command.\n        // We do this for consistency, and also to avoid bugs in how\n        // Docker creates container.Command.  Docker doesn't escape quote\n        // characters, for example.\n\n        if (container.Config)\n            return util.quote_cmdline ((container.Config.Entrypoint || []).concat(container.Config.Cmd || []));\n        else\n            return container.Command;\n    };\n\n    /*\n     * Recent versions of docker have a 'Status' field in the state,\n     * but earlier versions have distinct fields which we need to combine.\n     */\n    util.render_container_status = function render_container_status(state) {\n        if (state.Status)\n            return state.Status;\n        if (state.Running)\n            return \"running\";\n        if (state.Paused)\n            return \"paused\";\n        if (state.Restarting)\n            return \"restarting\";\n        if (state.FinishedAt && state.FinishedAt.indexOf(\"0001\") === 0)\n            return \"created\";\n        return \"exited\";\n    };\n\n    util.render_container_name = function render_container_name (name) {\n        if (name.length > 0 && name[0] == \"/\")\n            return name.slice(1);\n        else\n            return name;\n    };\n\n    util.render_container_state = function render_container_state (state) {\n        if (state.Running)\n            return cockpit.format(_(\"Up since $StartedAt\"), state);\n        else\n            return cockpit.format(_(\"Exited $ExitCode\"), state);\n    };\n\n    util.render_container_restart_policy = function render_restart_policy(policy) {\n        switch (policy.Name) {\n            case \"no\":\n                return _(\"No\");\n            case \"on-failure\":\n                var text = cockpit.ngettext(\"On failure, retry $0 time\", \"On failure, retry $0 times\", policy.MaximumRetryCount);\n                return cockpit.format(text, policy.MaximumRetryCount);\n            case \"always\":\n                return _(\"Always\");\n            case \"unless-stopped\":\n                return _(\"Unless Stopped\");\n            default: /* Keeping this here just in case. http://stackoverflow.com/a/4878800 */\n                return policy.Name.replace('-', ' ').replace(/\\w\\S*/g, function(txt) {\n                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n                });\n        }\n    };\n\n    util.multi_line = function multi_line(strings) {\n        return strings.map(function (str) { return Mustache.render(\"{{.}}\", str); }).join('<br/>');\n    };\n\n    util.format_cpu_shares = function format_cpu_shares(priority) {\n        if (!priority)\n            return _(\"default\");\n        return cockpit.format(_(\"$0 shares\"), Math.round(priority));\n    };\n\n    util.format_cpu_usage = function format_cpu_usage(usage) {\n        if (usage === undefined || isNaN(usage))\n            return \"\";\n        return Math.round(usage) + \"%\";\n    };\n\n    util.update_memory_bar = function update_memory_bar(bar, usage, limit) {\n        var parts = [ usage ];\n        if (limit)\n            parts.push(limit);\n        $(bar).\n            attr(\"value\", parts.join(\"/\")).\n            toggleClass(\"bar-row-danger\", !!(limit && usage > 0.9 * limit));\n    };\n\n    util.format_memory_and_limit = function format_memory_and_limit(usage, limit) {\n        if (usage === undefined || isNaN(usage))\n            return \"\";\n\n        var mtext = \"\";\n        var units = 1024;\n        var parts;\n        if (limit) {\n            parts = cockpit.format_bytes(limit, units, true);\n            mtext = \" / \" + parts.join(\" \");\n            units = parts[1];\n        }\n\n        if (usage) {\n            parts = cockpit.format_bytes(usage, units, true);\n            if (mtext)\n                return parts[0] + mtext;\n            else\n                return parts.join(\" \");\n        } else {\n            return \"?\" + mtext;\n        }\n    };\n\n    util.insert_table_sorted = function insert_table_sorted(table, row) {\n        util.insert_table_sorted_generic(table, row, function(row1, row2) {\n            return row1.text().localeCompare(row2.text());\n        });\n    };\n\n    util.insert_table_sorted_generic = function insert_table_sorted_generic(table, row, cmp) {\n        var rows = $(table).find(\"tbody tr\");\n        for (var j = 0; j < rows.length; j++) {\n            if (cmp($(rows[j]), row) > 0) {\n                $(row).insertBefore(rows[j]);\n                row = null;\n                break;\n            }\n        }\n        if (row !== null)\n            $(table).find(\"tbody\").append(row);\n    };\n\n    util.setup_danger_button = function setup_danger_button(id, parent_id, callback) {\n        var danger_button = $('<button class=\"btn btn-default btn-control-ct fa fa-check enable-danger\">')\n            .toggle(false)\n            .on(\"click\", callback);\n        $(id + ' th.container-column-actions').append(danger_button);\n        $(parent_id)[0].addEventListener(\"click\", function(ev) {\n            if ($(ev.target).parents(id).length === 0 &&\n                $(id + ' button.enable-danger').hasClass('active'))\n                callback();\n        }, true);\n    };\n\n    util.render_container = function render_container(client, $panel,\n                                                      prefix, id, container, danger_mode) {\n\n        // Docker ID can contain funny characters such as \":\" so\n        // we take care not to embed them into jQuery query\n        // strings or HTML.\n\n        var tr = $(document.getElementById(prefix + id));\n\n        if (!container) {\n            tr.remove();\n            if (!$panel.find('table > tbody > tr').length) {\n                $panel.find('button.enable-danger').toggle(false);\n            }\n            return;\n        }\n\n        var cputext;\n        var memuse, memlimit;\n        var membar, memtext, memtextstyle;\n\n        if (container.State && container.State.Running) {\n            cputext = util.format_cpu_usage(container.CpuUsage);\n\n            memuse = container.MemoryUsage;\n            memlimit = container.MemoryLimit;\n            memtext = util.format_memory_and_limit(memuse, memlimit);\n\n            membar = true;\n            memtextstyle = { 'color': 'inherit' };\n        } else {\n            cputext = \"\";\n            membar = false;\n            memtext = _(\"Stopped\");\n            memtextstyle = { 'color': 'grey', 'text-align': 'right' };\n        }\n\n        var added = false;\n        if (!tr.length) {\n            $panel.find('button.enable-danger').toggle(true);\n            var img_waiting = $('<div class=\"spinner\">');\n            var btn_delete = $('<button class=\"btn btn-danger pficon pficon-delete btn-delete\">').\n                on(\"click\", function() {\n                    var self = this;\n                    $(self).hide().\n                        siblings(\"div.spinner\").show();\n                    util.docker_container_delete(client, id, function() { }, function () { $(self).show().siblings(\"div.spinner\").hide(); });\n                    return false;\n                });\n            var btn_play = $('<button class=\"btn btn-default btn-control-ct fa fa-play\">').\n                on(\"click\", function() {\n                    $(this).hide().\n                        siblings(\"div.spinner\").show();\n                    client.start(id).\n                        fail(function(ex) {\n                            util.handle_scope_start_container(client, id, ex.message);\n                        });\n                    return false;\n                });\n            var btn_stop = $('<button class=\"btn btn-default btn-control-ct fa fa-stop\">').\n                on(\"click\", function() {\n                    $(this).hide().\n                        siblings(\"div.spinner\").show();\n                    client.stop(id).\n                        fail(function(ex) {\n                            util.show_unexpected_error(ex);\n                        });\n                    return false;\n                });\n            tr = $('<tr>', { 'id': prefix + id }).append(\n                $('<td class=\"container-column-name\">'),\n                $('<td class=\"container-column-image\">'),\n                $('<td class=\"container-column-command\">'),\n                $('<td class=\"container-column-cpu\">'),\n                $('<td class=\"container-column-memory-graph\">').append(bar.create(\"containers-containers\")),\n                $('<td class=\"container-column-memory-text\">'),\n                $('<td class=\"container-column-danger cell-buttons\">').append(btn_delete, img_waiting),\n                $('<td class=\"container-column-actions cell-buttons\">').append(btn_play, btn_stop, img_waiting.clone()));\n\n            tr.on('click', function(event) {\n                cockpit.location.go([ id ]);\n            });\n\n            added = true;\n        }\n\n        var row = tr.children(\"td\");\n        $(row[0]).text(util.render_container_name(container.Name));\n\n        var image = container.Image;\n        if (container.ImageID && image == container.ImageID)\n            image = docker.truncate_id(image);\n        $(row[1]).text(image);\n\n        $(row[2]).text(util.render_container_cmdline(container));\n        $(row[3]).text(cputext);\n        util.update_memory_bar($(row[4]).children(\"div\").toggle(membar), memuse, memlimit);\n        $(row[5]).\n            css(memtextstyle).\n            text(memtext);\n\n        var waiting = id in client.waiting;\n        $(row[6]).children(\"div.spinner\").toggle(waiting);\n        $(row[6]).children(\"button.btn-delete\")\n            .toggle(!waiting)\n            .toggleClass('disabled', container.State.Running);\n\n        var title = (waiting || container.State.Running) ? \"You can only delete<br/> stopped containers\" : \"Delete immediately\";\n\n        $(row[6]).children(\"button.btn-delete\")\n            .tooltip('destroy')\n            .attr(\"title\", title)\n            .tooltip({html: true});\n\n\n        $(row[7]).children(\"div.spinner\").toggle(waiting);\n        $(row[7]).children(\"button.fa-play\").toggle(!waiting && !container.State.Running);\n        $(row[7]).children(\"button.fa-stop\").toggle(!waiting && container.State.Running);\n\n        $(row[6]).toggle(danger_mode);\n        $(row[7]).toggle(!danger_mode);\n\n        tr.toggleClass(\"unimportant\", !container.State.Running);\n\n        if (added)\n            util.insert_table_sorted($panel.find('table'), tr);\n\n        bar.update();\n    };\n\n    /* Slider/text/checkbox interaction happens here */\n    function Slider(sel, min, max, parse, format) {\n        var self = this;\n        var slider, input, check;\n        var updating = false;\n        var data;\n\n        /* Logarithmic scale */\n        if (min < 0)\n            min = 0;\n        if (max < 0)\n            max = 0;\n        var minv = Math.log(min);\n        var maxv = Math.log(max);\n        var scale = (maxv - minv);\n\n        function limit(val) {\n            if (val < min)\n                val = min;\n            else if (val > max)\n                val = max;\n            return val;\n        }\n\n        function slider_load() {\n            if (check.checked)\n                data = limit(Math.round(Math.exp(minv + scale * slider.value)));\n            else\n                data = undefined;\n        }\n\n        function slider_update() {\n            updating = true;\n            if (data !== undefined)\n                $(slider).prop(\"value\", (Math.log(data) - minv) / scale);\n            $(slider)\n                .attr(\"disabled\", data === undefined)\n                .trigger(\"change\");\n            updating = false;\n        }\n\n        function text_load() {\n            var val;\n            if (check.checked)\n                val = limit(parse($(input).val()));\n            else\n                val = undefined;\n            if (isNaN(val))\n                val = undefined;\n            data = val;\n        }\n\n        function text_update() {\n            updating = true;\n            if (data !== undefined)\n                $(input).val(format(data));\n            $(input).attr(\"disabled\", data === undefined);\n            updating = false;\n        }\n\n        function check_load() {\n            if (!check.checked)\n                data = undefined;\n        }\n\n        function check_update() {\n            updating = true;\n            $(check).prop(\"checked\", data !== undefined);\n            updating = false;\n        }\n\n        /* Slider to change CPU priority */\n        slider = sel.find(\"div.slider\").\n            on('change', function() {\n                if (updating)\n                    return;\n                slider_load();\n                text_update();\n            })[0];\n\n        /* Number value of CPU priority */\n        input = sel.find(\"input.size-text-ct\").\n            on('change', function() {\n                if (updating)\n                    return;\n                text_load();\n                slider_update();\n            })[0];\n\n        /* Default checkbox */\n        check = sel.find(\"input[type='checkbox']\").\n            on('change', function() {\n                if (updating)\n                    return;\n                check_load();\n                if (this.checked)\n                    text_load();\n                slider_update();\n                text_update();\n            })[0];\n\n        Object.defineProperty(self, \"value\", {\n            get: function() {\n                return data;\n            },\n            set: function(v) {\n                data = v;\n                check_update();\n                slider_update();\n                text_update();\n            }\n        });\n\n        Object.defineProperty(self, \"max\", {\n            get: function() {\n                return max;\n            },\n            set: function(v) {\n                if (v < 0)\n                    v = 0;\n                max = v;\n                maxv = Math.log(max);\n                scale = (maxv - minv);\n                if (slider)\n                    slider_update();\n            }\n        });\n\n        return self;\n    }\n\n    /* Memory limit slider/checkbox interaction happens here */\n    util.MemorySlider = function MemorySlider(sel, min, max) {\n        function parse(val) {\n            return parseInt(val, 10) * 1024 * 1024;\n        }\n\n        function format(val) {\n            return cockpit.format_bytes(val, \"MiB\", true)[0];\n        }\n\n        return new Slider(sel, min, max, parse, format);\n    };\n\n    /* CPU priority slider/checkbox interaction happens here */\n    util.CpuSlider = function CpuSlider(sel, min, max) {\n        function parse(val) {\n            return parseInt(val, 10);\n        }\n\n        function format(val) {\n            return String(val);\n        }\n\n        return new Slider(sel, min, max, parse, format);\n    };\n\n    util.docker_container_delete = function docker_container_delete(docker_client, container_id, on_success, on_failure) {\n        docker_client.rm(container_id).\n            fail(function(ex) {\n                /* if container is still running, ask user to force delete */\n                if (ex.message.indexOf('remove a running container') > -1) {\n                    var container_info = docker_client.containers[container_id];\n                    var msg;\n                    if (container_info.State.Running) {\n                        msg = _(\"Container is currently running.\");\n                    } else {\n                        msg = _(\"Container is currently marked as not running, but regular stopping failed.\") +\n                            \" \" + _(\"Error message from Docker:\") +\n                            \" '\" + ex.message + \"'\";\n                    }\n                    var name;\n                    if (container_info.Name)\n                        name = container_info.Name;\n                    else\n                        name = container_id;\n                    if (name.charAt(0) === '/')\n                        name = name.substring(1);\n                    util.confirm(cockpit.format(_(\"Please confirm forced deletion of $0\"), name),\n                                 msg,\n                                 _(\"Force Delete\")).\n                        done(function () {\n                            docker_client.rm(container_id, true).\n                                fail(function(ex) {\n                                    util.show_unexpected_error(ex);\n                                    on_failure();\n                                }).\n                                done(on_success);\n                        }).\n                        fail(on_failure);\n                    return;\n                }\n                util.show_unexpected_error(ex);\n                on_failure();\n            }).\n            done(on_success);\n    };\n\n    /* if error message points to leftover scope, try to resolve the issue */\n    util.handle_scope_start_container = function handle_scope_start_container(docker_client, container_id, error_message, on_success, on_failure) {\n        var end_phrase = '.scope already exists';\n        var idx_end = error_message.indexOf(end_phrase);\n        /* HACK: workaround for https://github.com/docker/docker/issues/7015 */\n        if (idx_end > -1) {\n            var start_phrase = 'Unit docker-';\n            var idx_start = error_message.indexOf(start_phrase) + start_phrase.length;\n            var docker_container = error_message.substring(idx_start, idx_end);\n            cockpit.spawn([ \"systemctl\", \"stop\", \"docker-\" + docker_container + \".scope\" ], { \"superuser\": \"try\" }).\n                done(function () {\n                    docker_client.start(container_id).\n                        fail(function(ex) {\n                            if (on_failure)\n                                on_failure();\n                        }).\n                        done(function() {\n                            if (on_success)\n                                on_success();\n                        });\n                    return;\n                }).\n                fail(function (error) {\n                    util.show_unexpected_error(cockpit.format(_(\"Failed to stop Docker scope: $0\"), error));\n                    if (on_failure)\n                        on_failure();\n                });\n            return;\n        }\n        util.show_unexpected_error(error_message);\n        if (on_failure)\n            on_failure();\n    };\n\n    util.show_unexpected_error = function show_unexpected_error(error) {\n        $(\"#error-popup-message\").text(error.message || error || \"???\");\n        $('.modal[role=\"dialog\"]').modal('hide');\n        $('#error-popup').modal('show');\n    };\n\n    util.confirm = function confirm(title, body, action_text) {\n        var deferred = $.Deferred();\n\n        $('#confirmation-dialog-title').text(title);\n        if (typeof body == \"string\")\n            $('#confirmation-dialog-body').text(body);\n        else\n            $('#confirmation-dialog-body').html(body);\n        $('#confirmation-dialog-confirm').text(action_text);\n\n        function close() {\n            $('#confirmation-dialog button').off('click');\n            $('#confirmation-dialog').modal('hide');\n        }\n\n        $('#confirmation-dialog-confirm').click(function () {\n            close();\n            deferred.resolve();\n        });\n\n        $('#confirmation-dialog-cancel').click(function () {\n            close();\n            deferred.reject();\n        });\n\n        $('#confirmation-dialog').modal('show');\n        return deferred.promise();\n    };\n\n    module.exports = util;\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/docker/util.js\n// module id = 15\n// module chunks = 1 2","'use strict';\n\n(function() {\n    \"use strict\";\n\n    var $ = require('jquery');\n    var cockpit = require('cockpit');\n\n    var unique_number = 0;\n    function unique() {\n        unique_number += 1;\n        return \"unique\" + -(new Date()) + -unique_number;\n    }\n\n    /* Dialog Patterns */\n\n    function clear_errors(sel) {\n        sel.find(\".dialog-error\").remove();\n        sel.find(\".has-error\").removeClass(\"has-error\");\n        sel.find(\".dialog-wrapper\").off(\".dialog-error\");\n        sel.off(\".dialog-error\");\n    }\n\n    function field_error(target, error) {\n        var wrapper = target.parent();\n        var next, refresh;\n\n        if (!wrapper.is(\".dialog-wrapper\")) {\n            wrapper = $(\"<div class='dialog-wrapper'>\").insertBefore(target);\n\n            /*\n             * Some bootstrap plugins replace html controls with their own\n             * stuff, so we have to account for that here.\n             */\n\n            next = target.next();\n            if (next.is(\".bootstrap-select\") && next.selectpicker) {\n                next.remove();\n                refresh = next.selectpicker;\n            }\n\n            target.remove().appendTo(wrapper);\n\n            if (refresh)\n                refresh.call(target);\n        }\n\n        var message;\n        if (error.message)\n            message = $(\"<div class='dialog-error help-block'>\").text(error.message);\n        wrapper.addClass(\"has-error\").append(message);\n\n        if (!wrapper.hasClass(\"error-keep\")) {\n            wrapper.on(\"keypress.dialog-error change.dialog-error\", function() {\n                wrapper.removeClass(\"has-error\")\n                    .find(\".dialog-error.help-block\").css(\"visibility\", \"hidden\");\n            });\n        }\n    }\n\n    function global_error(sel, error) {\n        var alert = $(\"<div class='alert alert-danger dialog-error'>\");\n        var text = error.message || error.toString();\n        alert.text(text);\n        $(\"<span class='fa fa-exclamation-triangle'>\").prependTo(alert);\n\n        /* Always log global dialog errors for easier debugging */\n        console.warn(text);\n\n        var footer = sel.find(\".modal-footer\");\n        if (footer.length)\n            alert.prependTo(footer);\n        else\n            alert.appendTo(sel);\n    }\n\n    function display_errors(sel, errors) {\n        clear_errors(sel);\n\n        /* The list of errors can also be passed as an array */\n        if (errors.length == 1 && $.isArray(errors[0]))\n            errors = errors[0];\n\n        var any = false;\n        errors.forEach(function(error) {\n            var target;\n            if (error) {\n                target = sel.find(error.target);\n\n                /* Errors for a specific field added below that field */\n                if (target && target.length)\n                    field_error(target, error);\n                else\n                    global_error(sel, error);\n\n                any = true;\n            }\n        });\n\n        if (!any)\n            return;\n\n        /* When dialog is shown again, remove all mods */\n        sel.on(\"show.bs.modal.dialog-error\", function() {\n            clear_errors(sel);\n        });\n    }\n\n    function DialogWait(promise, handle) {\n        this.promise = promise;\n        this.disabled = [];\n        this.handle = handle;\n    }\n\n    function clear_wait(sel) {\n        var data = sel.data(\"dialog-wait\");\n        sel.data(\"dialog-wait\", null);\n\n        sel.find(\".dialog-wait-ct\").remove();\n        sel.find(\".btn\").off(\".dialog-wait\");\n        sel.off(\".dialog-wait\");\n\n        if (data) {\n            data.disabled.forEach(function(ctl) {\n                ctl.removeAttr(\"disabled\");\n            });\n        }\n    }\n\n    function display_wait(sel, promise, handle) {\n        clear_wait(sel);\n\n        if (!promise) {\n            if (handle)\n                sel.modal(\"hide\");\n            return sel;\n        }\n\n        /* Clear all errors in the dialog */\n        if (handle)\n            display_errors(sel, []);\n\n        var wait = $(\"<div class='dialog-wait-ct pull-left'>\");\n        $(\"<div class='spinner spinner-sm'>\").appendTo(wait);\n        var message = $(\"<span>\").appendTo(wait);\n\n        sel.find(\".modal-footer button\").first().before(wait);\n\n        var data = new DialogWait(promise, handle);\n        sel.data(\"dialog-wait\", data);\n\n        var cancellation = promise.cancel || promise.close;\n        var cancelled = false;\n\n        /* Disable everything and stash previous disabled state */\n        var controls = sel.find(\".form-control\").add(\".btn\", sel);\n        if (cancellation)\n            controls = controls.not(\"[data-dismiss]\").not(\".btn-cancel\");\n        controls.each(function() {\n            var ctl = $(this);\n            if (!ctl.attr(\"disabled\")) {\n                data.disabled.push(ctl);\n                ctl.attr(\"disabled\", \"disabled\");\n            }\n        });\n\n        sel.find(\".btn[data-dismiss], .btn-cancel\").on(\"click.dialog-wait\", function() {\n            cancelled = true;\n            if (cancellation)\n                cancellation.apply(promise);\n            return false;\n        });\n\n        /* When dialog is shown again, remove all mods */\n        sel.on(\"hide.bs.modal.dialog-wait\", function() {\n            clear_wait(sel);\n        });\n\n        /*\n         * There is no way to remove a callback from a promise\n         * so we have to be careful to only react if still\n         * processing the same promise.\n         */\n        function restore() {\n            var state, data = sel.data(\"dialog-wait\");\n            if (data && data.promise === promise) {\n                clear_wait(sel);\n                state = promise.state();\n                if (cancelled || (state == \"resolved\" && data.handle))\n                    sel.modal('hide');\n                else if (state == \"rejected\" && data.handle)\n                    display_errors(sel, [ arguments[0] ]);\n            }\n        }\n\n        function update(arg) {\n            var data = sel.data(\"dialog-wait\");\n            if (data && data.promise === promise) {\n                if (typeof arg !== \"string\")\n                    arg = \"\";\n                message.text(arg);\n            }\n        }\n\n        promise\n            .always(restore)\n            .progress(update);\n\n        return sel;\n    }\n\n    $.fn.dialog = function dialog(action /* ... */) {\n        if (action === \"failure\")\n            return display_errors(this, Array.prototype.slice.call(arguments, 1));\n        else if (action === \"wait\")\n            return display_wait(this, arguments[1]);\n        else if (action === \"promise\")\n            return display_wait(this, arguments[1], true);\n        else\n            console.warn(\"unknown dialog action: \" + action);\n    };\n\n    window.addEventListener(\"hashchange\", function() {\n        $(\".modal\").modal(\"hide\");\n    });\n\n    /*\n     * OnOff switch pattern\n     */\n\n    function onoff_refresh(sel) {\n        /* During testing, no Cockpit dependency */\n        var _ = cockpit.gettext || function(x) { return x; };\n\n        sel = sel.find(\".btn-onoff-ct\").andSelf().filter(\".btn-onoff-ct\");\n        sel.each(function(x, el) {\n            var self = $(el)\n                .attr(\"data-toggle\", \"buttons\")\n                .addClass(\"btn-group\");\n            var value = self.onoff(\"value\");\n            var buttons = self.find(\".btn\");\n            var name = self.find(\"input\").first().attr(\"name\") || unique();\n            var i, input, text;\n            for (i = buttons.length; i < 2; i++) {\n                input = $('<input type=\"radio\" autocomplete=\"off\">');\n                text = document.createTextNode(i === 0 ? _(\"On\") : _(\"Off\"));\n                self.append($('<label class=\"btn\">').append(input, text));\n                buttons = null;\n            }\n            buttons = buttons || self.find(\".btn\");\n            buttons.find(\"input\").attr(\"name\", name);\n            onoff_change(self, !!value);\n        });\n        return sel;\n    }\n\n    function onoff_value(sel) {\n        return sel.find(\".btn\").first().hasClass(\"active\");\n    }\n\n    function onoff_change(sel, value) {\n        return sel.each(function(i, el) {\n            var buttons = $(el).find(\".btn\");\n            buttons.first().toggleClass(\"active\", !!value).find(\"input\").prop(\"checked\", !!value);\n            buttons.last().toggleClass(\"active\", !value).find(\"input\").prop(\"checked\", !value);\n        });\n    }\n\n    $.fn.onoff = function onoff(action /* ... */) {\n        if (arguments.length === 0 || action == \"refresh\") {\n            return onoff_refresh(this);\n        } else if (action === \"value\") {\n            if (arguments.length === 1)\n                return onoff_value(this);\n            else\n                return onoff_change(this, arguments[1]);\n        } else if (action == \"disabled\") {\n            return this.find(\".btn\").toggleClass(\"disabled\", arguments[1]);\n        } else {\n            console.warn(\"unknown switch action: \" + action);\n        }\n    };\n\n    /* ----------------------------------------------------------------------------\n     * Sliders\n     *\n     * <div class=\"slider\" value=\"0.5\">\n     *    <div class=\"slider-bar\">\n     *        <div class=\"slider-thumb\"></div>\n     *    </div>\n     *    <div class=\"slider-bar\">\n     *        <!-- optional left overs -->\n     *    </div>\n     * </div>\n     *\n     * A slider control. The first div.slider-bar is the one that is resized.\n     * The value will be bounded between 0 and 1 as a floating point number.\n     *\n     * The following div.slider-bar if present is resized to fill the remainder\n     * of the slider if not given a specific size. You can put more div.slider-bar\n     * inside it to reflect squashing other prevous allocations.\n     *\n     * If the following div.slider-bar have a width specified, then the\n     * slider supports the concept of overflowing. If the slider overflows\n     * it will get the .slider-warning class and go a bit red.\n     *\n     * On document creation any div.slider are automatically turned into\n     * Bar graphs.\n     *\n     * Slider has the following extra read/write properties:\n     *\n     * .value: the floating point value the slider is set to.\n     * .disabled: whether to display slider as disabled and refuse interacton.\n     *\n     * Slider has this event:\n     *\n     * on('change'): fired when the slider changes, passes value as additional arg.\n     */\n\n    function resize_flex(slider, flex, total, part) {\n        var value = 0;\n        if (part > total)\n            value = 1;\n        else if (part < 0 || isNaN(part))\n            value = 0;\n        else if (!isNaN(total) && total > 0 && part >= 0)\n            value = (part / total);\n        $(flex).css('width', (value * 100) + \"%\").\n            next(\"div\").css('margin-left', $(flex).css('width'));\n\n        /* Set the property and the attribute */\n        slider.value = value;\n    }\n\n    function update_value(slider) {\n        resize_flex(slider, $(slider).children(\"div.slider-bar\").first()[0], 1, slider.value);\n    }\n\n    function check_overflow(slider) {\n        $(slider).toggleClass(\"slider-warning\",\n                              slider.offsetWidth < slider.scrollWidth);\n    }\n\n    function setup_slider(slider) {\n        $(slider).attr('unselectable', 'on');\n\n        Object.defineProperty(slider, \"value\", {\n            get: function() {\n                return parseFloat(this.getAttribute(\"value\"));\n            },\n            set: function(v) {\n                var s = String(v);\n                if (s != this.getAttribute(\"value\"))\n                    this.setAttribute(\"value\", v);\n            }\n        });\n\n        Object.defineProperty(slider, \"disabled\", {\n            get: function() {\n                if (!this.hasAttribute(\"disabled\"))\n                    return false;\n                return this.getAttribute(\"disabled\").toLowerCase() != \"false\";\n            },\n            set: function(v) {\n                this.setAttribute(\"disabled\", v ? \"true\" : \"false\");\n            }\n        });\n\n        update_value(slider);\n        check_overflow(slider);\n\n        $(slider).on(\"change\", function() {\n            update_value(slider);\n            $(slider).toggleClass(\"slider-disabled\", slider.disabled);\n        });\n\n        if (slider.disabled)\n            $(slider).addClass(\"slider-disabled\");\n\n        $(slider).on(\"mousedown\", function(ev) {\n            if (slider.disabled)\n                return true; /* default action */\n            var flex;\n            var offset = $(slider).offset().left;\n            if ($(ev.target).hasClass(\"slider-thumb\")) {\n                var hitx  = (ev.offsetX || ev.clientX - $(ev.target).offset().left);\n                offset += (hitx - $(ev.target).outerWidth() / 2);\n                flex = $(ev.target).parent()[0];\n            } else {\n                flex = $(slider).children(\"div.slider-bar\").first()[0];\n                resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n                $(slider).trigger(\"change\", [slider.value]);\n                check_overflow(slider);\n            }\n\n            $(document).\n                on(\"mousemove.slider\", function(ev) {\n                    resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n                    $(slider).trigger(\"change\", [slider.value]);\n                    check_overflow(slider);\n                    return false;\n                }).\n                on(\"mouseup.slider\", function(ev) {\n                    $(document).\n                        off(\"mousemove.slider\").\n                        off(\"mouseup.slider\");\n                    return false;\n                });\n            return false; /* no default action */\n        });\n    }\n\n    function setup_sliders() {\n        $(\"div.slider\").each(function() {\n            setup_slider(this);\n        });\n    }\n\n    $.fn.slider = function Slider(action) {\n        var sel = this;\n        if (arguments.length === 0 || action == \"refresh\") {\n            sel.each(function() {\n                setup_slider(this);\n            });\n            return sel;\n        } else {\n            console.warn(\"unknown slider action: \" + action);\n        }\n    };\n\n    $(document).ready(setup_sliders);\n\n    /* -----------------------------------------------------------------------------\n     * Privileged UI actions.\n     */\n\n    // placement is optional, \"top\", \"left\", \"bottom\", \"right\"\n    $.fn.update_privileged = function update_privileged(perm, denied_message, placement) {\n        var allowed = (perm.allowed !== false);\n        var selector = this;\n\n        selector.each(function() {\n            // preserve old title first time to use when allowed\n            // activate tooltip\n            var allowed_key = 'allowed-title';\n            if (typeof $(this).data(allowed_key) === 'undefined' ||\n                   $(this).data(allowed_key) === false)\n                $(this).data(allowed_key, $(this).attr('title') || \"\");\n\n            var options = { html: true };\n            if (placement)\n                options['placement'] = placement;\n\n            $(this).tooltip(options);\n\n            if ($(this).hasClass(\"disabled\") === allowed) {\n              $(this).toggleClass(\"disabled\", !allowed)\n                   .attr('data-original-title', null);\n\n              if (allowed)\n                  $(this).attr('title', $(this).data(allowed_key));\n              else\n                  $(this).attr('title', denied_message);\n              $(this).tooltip('fixTitle');\n            }\n        });\n\n        return selector;\n    };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/patterns.js\n// module id = 16\n// module chunks = 1 2","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2015 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    var $ = require(\"jquery\");\n\n    /* ----------------------------------------------------------------------------\n     * Bar Graphs (in table rows)\n     *\n     * <td>\n     *    <div class=\"bar-row\" graph=\"name\" value=\"50/100\"/>\n     * </td>\n     * <td>\n     *    <div class=\"bar-row\" graph=\"name\" value=\"80\"/>\n     * </td>\n     *\n     * The various rows must have class=\"bar-row\". Add the \"bar-row-danger\"\n     * class if you want the bar to show up as a warning (ie: red)\n     *\n     * The graph=\"xxx\" attribute must for all the bars that are part of the\n     * same graph, in order for the rows lengths to be coordinated with one\n     * another. Length are based on percentage, so the parent of each\n     * div.bar-row must be the same size.\n     *\n     * value=\"x\" can either be a number, or two numbers separated by a slash\n     * the latter one is the limit. Change the attribute on the DOM and the\n     * graph should update a short while later.\n     *\n     * On document creation any div.bar-row are automatically turned into\n     * Bar graphs. Or use controls.BarRow('name') constructor.\n     *\n     * You can also use the el.reflow() function on the element to reflow\n     * the corresponding graph.\n     */\n\n    function reflow_bar_graph(graph, div) {\n        var parts;\n        if (graph) {\n            var selector = \"div.bar-row[graph='\" + graph + \"']\";\n            parts = $(selector);\n        } else if (div) {\n            parts = $(div);\n        } else {\n            parts = $([]);\n        }\n\n        function value_parts(el) {\n            var value = $(el).attr('value');\n            if (value === undefined)\n                return [NaN];\n            var values = value.split(\"/\", 2);\n            var portion = parseInt(values[0], 10);\n            if (values.length == 1)\n                return [portion];\n            var limit = parseInt(values[1], 10);\n            if (!isNaN(limit) && portion > limit)\n                portion = limit;\n            if (portion < 0)\n                portion = 0;\n            return [portion, limit];\n        }\n\n        /* One pass to calculate the absolute maximum */\n        var max = 0;\n        parts.each(function() {\n            var limit = value_parts(this).pop();\n            if (!isNaN(limit) && limit > max)\n                max = limit;\n        });\n\n        /* Max gets rounded up to the nearest 100 MiB for sets of bar rows\n         */\n        if (graph) {\n            var bound = 100*1024*1024;\n            max = max - (max % bound) + bound;\n        }\n\n        /* Now resize everything to the right aspect */\n        parts.each(function() {\n            var bits = value_parts(this);\n            var portion = bits.shift();\n            var limit = bits.pop();\n            if (isNaN(portion) || limit === 0) {\n                $(this).css(\"visibility\", \"hidden\");\n            } else {\n                var bar_progress = $(this).data('bar-progress');\n                if (isNaN(limit)) {\n                    bar_progress.addClass(\"progress-no-limit\");\n                    limit = portion;\n                } else {\n                    bar_progress.removeClass(\"progress-no-limit\");\n                }\n                $(this).css('visibility', 'visible');\n                bar_progress.css(\"width\", ((limit / max) * 100) + \"%\");\n                $(this).data('bar-progress-bar').\n                    css('width', ((portion / limit) * 100) + \"%\").\n                    toggle(portion > 0);\n            }\n        });\n    }\n\n    var reflow_timeouts = { };\n    function reflow_bar_graph_soon(graph, div) {\n        if (graph === undefined) {\n            if (div)\n                graph = $(div).attr(\"graph\");\n        }\n\n        /* If no other parts to this bar, no sense in waiting */\n        if (!graph) {\n            reflow_bar_graph(undefined, div);\n            return;\n        }\n\n        /* Wait until later in case other updates come in to other bits */\n        if (reflow_timeouts[graph] !== \"undefined\")\n            window.clearTimeout(reflow_timeouts[graph]);\n        reflow_timeouts[graph] = window.setTimeout(function() {\n            delete reflow_timeouts[graph];\n            reflow_bar_graph(graph);\n        }, 10);\n    }\n\n    function setup_bar_graph(div) {\n\n        /*\n         * We consume <div class=\"bar-row\"> elements and turn them into:\n         *\n         * <div class=\"bar-row\">\n         *    <div class=\"progress\">\n         *      <div class=\"progress-bar\">\n         *    </div>\n         * </div>\n         */\n        var progress_bar = $(\"<div>\").addClass(\"progress-bar\");\n        var progress = $(\"<div>\").addClass(\"progress\").append(progress_bar);\n        $(div).\n            addClass('bar-row').\n            append(progress).\n            data('bar-progress', progress).\n            data('bar-progress-bar', progress_bar);\n\n        /* Public API */\n        div.reflow = function() {\n            reflow_bar_graph(this.getAttribute(\"graph\"), this);\n        };\n\n        reflow_bar_graph_soon(undefined, div);\n    }\n\n    function setup_bar_graphs() {\n        $(\"div.bar-row\").each(function() {\n            setup_bar_graph(this, false);\n        });\n    }\n\n    $(document).ready(setup_bar_graphs);\n\n    /* Public API */\n    module.exports = {\n        create: function create(graph) {\n            var div = $(\"<div>\").addClass('bar-row').attr('graph', graph);\n            setup_bar_graph(div);\n            return div;\n        },\n        update: function update() {\n            $(\"div.bar-row\").each(function() {\n                reflow_bar_graph_soon(this.getAttribute(\"graph\"), this);\n            });\n        }\n    };\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/docker/bar.js\n// module id = 17\n// module chunks = 1 2","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/webpack/buildin/module.js\n// module id = 32\n// module chunks = 1 2","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2014 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    /* QUnit needs to have 'window' as 'this' in order to load */\n    window.QUnit = require(\"qunitjs/qunit/qunit.js\");\n    window.qunitTap = require(\"qunit-tap/lib/qunit-tap.js\");\n\n    require(\"./qunit-config.js\");\n\n    require(\"qunitjs/qunit/qunit.css\");\n\n    module.exports = window.QUnit;\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/qunit-tests.js\n// module id = 131\n// module chunks = 2","/*!\n * QUnit 1.23.1\n * https://qunitjs.com/\n *\n * Copyright jQuery Foundation and other contributors\n * Released under the MIT license\n * https://jquery.org/license\n *\n * Date: 2016-04-12T17:29Z\n */\n\n( function( global ) {\n\nvar QUnit = {};\n\nvar Date = global.Date;\nvar now = Date.now || function() {\n\treturn new Date().getTime();\n};\n\nvar setTimeout = global.setTimeout;\nvar clearTimeout = global.clearTimeout;\n\n// Store a local window from the global to allow direct references.\nvar window = global.window;\n\nvar defined = {\n\tdocument: window && window.document !== undefined,\n\tsetTimeout: setTimeout !== undefined,\n\tsessionStorage: ( function() {\n\t\tvar x = \"qunit-test-string\";\n\t\ttry {\n\t\t\tsessionStorage.setItem( x, x );\n\t\t\tsessionStorage.removeItem( x );\n\t\t\treturn true;\n\t\t} catch ( e ) {\n\t\t\treturn false;\n\t\t}\n\t}() )\n};\n\nvar fileName = ( sourceFromStacktrace( 0 ) || \"\" ).replace( /(:\\d+)+\\)?/, \"\" ).replace( /.+\\//, \"\" );\nvar globalStartCalled = false;\nvar runStarted = false;\n\nvar toString = Object.prototype.toString,\n\thasOwn = Object.prototype.hasOwnProperty;\n\n// Returns a new Array with the elements that are in a but not in b\nfunction diff( a, b ) {\n\tvar i, j,\n\t\tresult = a.slice();\n\n\tfor ( i = 0; i < result.length; i++ ) {\n\t\tfor ( j = 0; j < b.length; j++ ) {\n\t\t\tif ( result[ i ] === b[ j ] ) {\n\t\t\t\tresult.splice( i, 1 );\n\t\t\t\ti--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\n// From jquery.js\nfunction inArray( elem, array ) {\n\tif ( array.indexOf ) {\n\t\treturn array.indexOf( elem );\n\t}\n\n\tfor ( var i = 0, length = array.length; i < length; i++ ) {\n\t\tif ( array[ i ] === elem ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\n/**\n * Makes a clone of an object using only Array or Object as base,\n * and copies over the own enumerable properties.\n *\n * @param {Object} obj\n * @return {Object} New object with only the own properties (recursively).\n */\nfunction objectValues ( obj ) {\n\tvar key, val,\n\t\tvals = QUnit.is( \"array\", obj ) ? [] : {};\n\tfor ( key in obj ) {\n\t\tif ( hasOwn.call( obj, key ) ) {\n\t\t\tval = obj[ key ];\n\t\t\tvals[ key ] = val === Object( val ) ? objectValues( val ) : val;\n\t\t}\n\t}\n\treturn vals;\n}\n\nfunction extend( a, b, undefOnly ) {\n\tfor ( var prop in b ) {\n\t\tif ( hasOwn.call( b, prop ) ) {\n\n\t\t\t// Avoid \"Member not found\" error in IE8 caused by messing with window.constructor\n\t\t\t// This block runs on every environment, so `global` is being used instead of `window`\n\t\t\t// to avoid errors on node.\n\t\t\tif ( prop !== \"constructor\" || a !== global ) {\n\t\t\t\tif ( b[ prop ] === undefined ) {\n\t\t\t\t\tdelete a[ prop ];\n\t\t\t\t} else if ( !( undefOnly && typeof a[ prop ] !== \"undefined\" ) ) {\n\t\t\t\t\ta[ prop ] = b[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a;\n}\n\nfunction objectType( obj ) {\n\tif ( typeof obj === \"undefined\" ) {\n\t\treturn \"undefined\";\n\t}\n\n\t// Consider: typeof null === object\n\tif ( obj === null ) {\n\t\treturn \"null\";\n\t}\n\n\tvar match = toString.call( obj ).match( /^\\[object\\s(.*)\\]$/ ),\n\t\ttype = match && match[ 1 ];\n\n\tswitch ( type ) {\n\t\tcase \"Number\":\n\t\t\tif ( isNaN( obj ) ) {\n\t\t\t\treturn \"nan\";\n\t\t\t}\n\t\t\treturn \"number\";\n\t\tcase \"String\":\n\t\tcase \"Boolean\":\n\t\tcase \"Array\":\n\t\tcase \"Set\":\n\t\tcase \"Map\":\n\t\tcase \"Date\":\n\t\tcase \"RegExp\":\n\t\tcase \"Function\":\n\t\tcase \"Symbol\":\n\t\t\treturn type.toLowerCase();\n\t}\n\tif ( typeof obj === \"object\" ) {\n\t\treturn \"object\";\n\t}\n}\n\n// Safe object type checking\nfunction is( type, obj ) {\n\treturn QUnit.objectType( obj ) === type;\n}\n\n// Doesn't support IE6 to IE9, it will return undefined on these browsers\n// See also https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error/Stack\nfunction extractStacktrace( e, offset ) {\n\toffset = offset === undefined ? 4 : offset;\n\n\tvar stack, include, i;\n\n\tif ( e.stack ) {\n\t\tstack = e.stack.split( \"\\n\" );\n\t\tif ( /^error$/i.test( stack[ 0 ] ) ) {\n\t\t\tstack.shift();\n\t\t}\n\t\tif ( fileName ) {\n\t\t\tinclude = [];\n\t\t\tfor ( i = offset; i < stack.length; i++ ) {\n\t\t\t\tif ( stack[ i ].indexOf( fileName ) !== -1 ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tinclude.push( stack[ i ] );\n\t\t\t}\n\t\t\tif ( include.length ) {\n\t\t\t\treturn include.join( \"\\n\" );\n\t\t\t}\n\t\t}\n\t\treturn stack[ offset ];\n\n\t// Support: Safari <=6 only\n\t} else if ( e.sourceURL ) {\n\n\t\t// Exclude useless self-reference for generated Error objects\n\t\tif ( /qunit.js$/.test( e.sourceURL ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\t// For actual exceptions, this is useful\n\t\treturn e.sourceURL + \":\" + e.line;\n\t}\n}\n\nfunction sourceFromStacktrace( offset ) {\n\tvar error = new Error();\n\n\t// Support: Safari <=7 only, IE <=10 - 11 only\n\t// Not all browsers generate the `stack` property for `new Error()`, see also #636\n\tif ( !error.stack ) {\n\t\ttry {\n\t\t\tthrow error;\n\t\t} catch ( err ) {\n\t\t\terror = err;\n\t\t}\n\t}\n\n\treturn extractStacktrace( error, offset );\n}\n\n/**\n * Config object: Maintain internal state\n * Later exposed as QUnit.config\n * `config` initialized at top of scope\n */\nvar config = {\n\n\t// The queue of tests to run\n\tqueue: [],\n\n\t// Block until document ready\n\tblocking: true,\n\n\t// By default, run previously failed tests first\n\t// very useful in combination with \"Hide passed tests\" checked\n\treorder: true,\n\n\t// By default, modify document.title when suite is done\n\taltertitle: true,\n\n\t// HTML Reporter: collapse every test except the first failing test\n\t// If false, all failing tests will be expanded\n\tcollapse: true,\n\n\t// By default, scroll to top of the page when suite is done\n\tscrolltop: true,\n\n\t// Depth up-to which object will be dumped\n\tmaxDepth: 5,\n\n\t// When enabled, all tests must call expect()\n\trequireExpects: false,\n\n\t// Placeholder for user-configurable form-exposed URL parameters\n\turlConfig: [],\n\n\t// Set of all modules.\n\tmodules: [],\n\n\t// Stack of nested modules\n\tmoduleStack: [],\n\n\t// The first unnamed module\n\tcurrentModule: {\n\t\tname: \"\",\n\t\ttests: []\n\t},\n\n\tcallbacks: {}\n};\n\n// Push a loose unnamed module to the modules collection\nconfig.modules.push( config.currentModule );\n\nvar loggingCallbacks = {};\n\n// Register logging callbacks\nfunction registerLoggingCallbacks( obj ) {\n\tvar i, l, key,\n\t\tcallbackNames = [ \"begin\", \"done\", \"log\", \"testStart\", \"testDone\",\n\t\t\t\"moduleStart\", \"moduleDone\" ];\n\n\tfunction registerLoggingCallback( key ) {\n\t\tvar loggingCallback = function( callback ) {\n\t\t\tif ( objectType( callback ) !== \"function\" ) {\n\t\t\t\tthrow new Error(\n\t\t\t\t\t\"QUnit logging methods require a callback function as their first parameters.\"\n\t\t\t\t);\n\t\t\t}\n\n\t\t\tconfig.callbacks[ key ].push( callback );\n\t\t};\n\n\t\t// DEPRECATED: This will be removed on QUnit 2.0.0+\n\t\t// Stores the registered functions allowing restoring\n\t\t// at verifyLoggingCallbacks() if modified\n\t\tloggingCallbacks[ key ] = loggingCallback;\n\n\t\treturn loggingCallback;\n\t}\n\n\tfor ( i = 0, l = callbackNames.length; i < l; i++ ) {\n\t\tkey = callbackNames[ i ];\n\n\t\t// Initialize key collection of logging callback\n\t\tif ( objectType( config.callbacks[ key ] ) === \"undefined\" ) {\n\t\t\tconfig.callbacks[ key ] = [];\n\t\t}\n\n\t\tobj[ key ] = registerLoggingCallback( key );\n\t}\n}\n\nfunction runLoggingCallbacks( key, args ) {\n\tvar i, l, callbacks;\n\n\tcallbacks = config.callbacks[ key ];\n\tfor ( i = 0, l = callbacks.length; i < l; i++ ) {\n\t\tcallbacks[ i ]( args );\n\t}\n}\n\n// DEPRECATED: This will be removed on 2.0.0+\n// This function verifies if the loggingCallbacks were modified by the user\n// If so, it will restore it, assign the given callback and print a console warning\nfunction verifyLoggingCallbacks() {\n\tvar loggingCallback, userCallback;\n\n\tfor ( loggingCallback in loggingCallbacks ) {\n\t\tif ( QUnit[ loggingCallback ] !== loggingCallbacks[ loggingCallback ] ) {\n\n\t\t\tuserCallback = QUnit[ loggingCallback ];\n\n\t\t\t// Restore the callback function\n\t\t\tQUnit[ loggingCallback ] = loggingCallbacks[ loggingCallback ];\n\n\t\t\t// Assign the deprecated given callback\n\t\t\tQUnit[ loggingCallback ]( userCallback );\n\n\t\t\tif ( global.console && global.console.warn ) {\n\t\t\t\tglobal.console.warn(\n\t\t\t\t\t\"QUnit.\" + loggingCallback + \" was replaced with a new value.\\n\" +\n\t\t\t\t\t\"Please, check out the documentation on how to apply logging callbacks.\\n\" +\n\t\t\t\t\t\"Reference: https://api.qunitjs.com/category/callbacks/\"\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t}\n}\n\n( function() {\n\tif ( !defined.document ) {\n\t\treturn;\n\t}\n\n\t// `onErrorFnPrev` initialized at top of scope\n\t// Preserve other handlers\n\tvar onErrorFnPrev = window.onerror;\n\n\t// Cover uncaught exceptions\n\t// Returning true will suppress the default browser handler,\n\t// returning false will let it run.\n\twindow.onerror = function( error, filePath, linerNr ) {\n\t\tvar ret = false;\n\t\tif ( onErrorFnPrev ) {\n\t\t\tret = onErrorFnPrev( error, filePath, linerNr );\n\t\t}\n\n\t\t// Treat return value as window.onerror itself does,\n\t\t// Only do our handling if not suppressed.\n\t\tif ( ret !== true ) {\n\t\t\tif ( QUnit.config.current ) {\n\t\t\t\tif ( QUnit.config.current.ignoreGlobalErrors ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tQUnit.pushFailure( error, filePath + \":\" + linerNr );\n\t\t\t} else {\n\t\t\t\tQUnit.test( \"global failure\", extend( function() {\n\t\t\t\t\tQUnit.pushFailure( error, filePath + \":\" + linerNr );\n\t\t\t\t}, { validTest: true } ) );\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\treturn ret;\n\t};\n}() );\n\n// Figure out if we're running the tests from a server or not\nQUnit.isLocal = !( defined.document && window.location.protocol !== \"file:\" );\n\n// Expose the current QUnit version\nQUnit.version = \"1.23.1\";\n\nextend( QUnit, {\n\n\t// Call on start of module test to prepend name to all tests\n\tmodule: function( name, testEnvironment, executeNow ) {\n\t\tvar module, moduleFns;\n\t\tvar currentModule = config.currentModule;\n\n\t\tif ( arguments.length === 2 ) {\n\t\t\tif ( objectType( testEnvironment ) === \"function\" ) {\n\t\t\t\texecuteNow = testEnvironment;\n\t\t\t\ttestEnvironment = undefined;\n\t\t\t}\n\t\t}\n\n\t\t// DEPRECATED: handles setup/teardown functions,\n\t\t// beforeEach and afterEach should be used instead\n\t\tif ( testEnvironment && testEnvironment.setup ) {\n\t\t\ttestEnvironment.beforeEach = testEnvironment.setup;\n\t\t\tdelete testEnvironment.setup;\n\t\t}\n\t\tif ( testEnvironment && testEnvironment.teardown ) {\n\t\t\ttestEnvironment.afterEach = testEnvironment.teardown;\n\t\t\tdelete testEnvironment.teardown;\n\t\t}\n\n\t\tmodule = createModule();\n\n\t\tmoduleFns = {\n\t\t\tbeforeEach: setHook( module, \"beforeEach\" ),\n\t\t\tafterEach: setHook( module, \"afterEach\" )\n\t\t};\n\n\t\tif ( objectType( executeNow ) === \"function\" ) {\n\t\t\tconfig.moduleStack.push( module );\n\t\t\tsetCurrentModule( module );\n\t\t\texecuteNow.call( module.testEnvironment, moduleFns );\n\t\t\tconfig.moduleStack.pop();\n\t\t\tmodule = module.parentModule || currentModule;\n\t\t}\n\n\t\tsetCurrentModule( module );\n\n\t\tfunction createModule() {\n\t\t\tvar parentModule = config.moduleStack.length ?\n\t\t\t\tconfig.moduleStack.slice( -1 )[ 0 ] : null;\n\t\t\tvar moduleName = parentModule !== null ?\n\t\t\t\t[ parentModule.name, name ].join( \" > \" ) : name;\n\t\t\tvar module = {\n\t\t\t\tname: moduleName,\n\t\t\t\tparentModule: parentModule,\n\t\t\t\ttests: [],\n\t\t\t\tmoduleId: generateHash( moduleName )\n\t\t\t};\n\n\t\t\tvar env = {};\n\t\t\tif ( parentModule ) {\n\t\t\t\textend( env, parentModule.testEnvironment );\n\t\t\t\tdelete env.beforeEach;\n\t\t\t\tdelete env.afterEach;\n\t\t\t}\n\t\t\textend( env, testEnvironment );\n\t\t\tmodule.testEnvironment = env;\n\n\t\t\tconfig.modules.push( module );\n\t\t\treturn module;\n\t\t}\n\n\t\tfunction setCurrentModule( module ) {\n\t\t\tconfig.currentModule = module;\n\t\t}\n\n\t},\n\n\t// DEPRECATED: QUnit.asyncTest() will be removed in QUnit 2.0.\n\tasyncTest: asyncTest,\n\n\ttest: test,\n\n\tskip: skip,\n\n\tonly: only,\n\n\t// DEPRECATED: The functionality of QUnit.start() will be altered in QUnit 2.0.\n\t// In QUnit 2.0, invoking it will ONLY affect the `QUnit.config.autostart` blocking behavior.\n\tstart: function( count ) {\n\t\tvar globalStartAlreadyCalled = globalStartCalled;\n\n\t\tif ( !config.current ) {\n\t\t\tglobalStartCalled = true;\n\n\t\t\tif ( runStarted ) {\n\t\t\t\tthrow new Error( \"Called start() outside of a test context while already started\" );\n\t\t\t} else if ( globalStartAlreadyCalled || count > 1 ) {\n\t\t\t\tthrow new Error( \"Called start() outside of a test context too many times\" );\n\t\t\t} else if ( config.autostart ) {\n\t\t\t\tthrow new Error( \"Called start() outside of a test context when \" +\n\t\t\t\t\t\"QUnit.config.autostart was true\" );\n\t\t\t} else if ( !config.pageLoaded ) {\n\n\t\t\t\t// The page isn't completely loaded yet, so bail out and let `QUnit.load` handle it\n\t\t\t\tconfig.autostart = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\n\t\t\t// If a test is running, adjust its semaphore\n\t\t\tconfig.current.semaphore -= count || 1;\n\n\t\t\t// If semaphore is non-numeric, throw error\n\t\t\tif ( isNaN( config.current.semaphore ) ) {\n\t\t\t\tconfig.current.semaphore = 0;\n\n\t\t\t\tQUnit.pushFailure(\n\t\t\t\t\t\"Called start() with a non-numeric decrement.\",\n\t\t\t\t\tsourceFromStacktrace( 2 )\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Don't start until equal number of stop-calls\n\t\t\tif ( config.current.semaphore > 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Throw an Error if start is called more often than stop\n\t\t\tif ( config.current.semaphore < 0 ) {\n\t\t\t\tconfig.current.semaphore = 0;\n\n\t\t\t\tQUnit.pushFailure(\n\t\t\t\t\t\"Called start() while already started (test's semaphore was 0 already)\",\n\t\t\t\t\tsourceFromStacktrace( 2 )\n\t\t\t\t);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tresumeProcessing();\n\t},\n\n\t// DEPRECATED: QUnit.stop() will be removed in QUnit 2.0.\n\tstop: function( count ) {\n\n\t\t// If there isn't a test running, don't allow QUnit.stop() to be called\n\t\tif ( !config.current ) {\n\t\t\tthrow new Error( \"Called stop() outside of a test context\" );\n\t\t}\n\n\t\t// If a test is running, adjust its semaphore\n\t\tconfig.current.semaphore += count || 1;\n\n\t\tpauseProcessing();\n\t},\n\n\tconfig: config,\n\n\tis: is,\n\n\tobjectType: objectType,\n\n\textend: extend,\n\n\tload: function() {\n\t\tconfig.pageLoaded = true;\n\n\t\t// Initialize the configuration options\n\t\textend( config, {\n\t\t\tstats: { all: 0, bad: 0 },\n\t\t\tmoduleStats: { all: 0, bad: 0 },\n\t\t\tstarted: 0,\n\t\t\tupdateRate: 1000,\n\t\t\tautostart: true,\n\t\t\tfilter: \"\"\n\t\t}, true );\n\n\t\tconfig.blocking = false;\n\n\t\tif ( config.autostart ) {\n\t\t\tresumeProcessing();\n\t\t}\n\t},\n\n\tstack: function( offset ) {\n\t\toffset = ( offset || 0 ) + 2;\n\t\treturn sourceFromStacktrace( offset );\n\t}\n} );\n\nregisterLoggingCallbacks( QUnit );\n\nfunction begin() {\n\tvar i, l,\n\t\tmodulesLog = [];\n\n\t// If the test run hasn't officially begun yet\n\tif ( !config.started ) {\n\n\t\t// Record the time of the test run's beginning\n\t\tconfig.started = now();\n\n\t\tverifyLoggingCallbacks();\n\n\t\t// Delete the loose unnamed module if unused.\n\t\tif ( config.modules[ 0 ].name === \"\" && config.modules[ 0 ].tests.length === 0 ) {\n\t\t\tconfig.modules.shift();\n\t\t}\n\n\t\t// Avoid unnecessary information by not logging modules' test environments\n\t\tfor ( i = 0, l = config.modules.length; i < l; i++ ) {\n\t\t\tmodulesLog.push( {\n\t\t\t\tname: config.modules[ i ].name,\n\t\t\t\ttests: config.modules[ i ].tests\n\t\t\t} );\n\t\t}\n\n\t\t// The test run is officially beginning now\n\t\trunLoggingCallbacks( \"begin\", {\n\t\t\ttotalTests: Test.count,\n\t\t\tmodules: modulesLog\n\t\t} );\n\t}\n\n\tconfig.blocking = false;\n\tprocess( true );\n}\n\nfunction process( last ) {\n\tfunction next() {\n\t\tprocess( last );\n\t}\n\tvar start = now();\n\tconfig.depth = ( config.depth || 0 ) + 1;\n\n\twhile ( config.queue.length && !config.blocking ) {\n\t\tif ( !defined.setTimeout || config.updateRate <= 0 ||\n\t\t\t\t( ( now() - start ) < config.updateRate ) ) {\n\t\t\tif ( config.current ) {\n\n\t\t\t\t// Reset async tracking for each phase of the Test lifecycle\n\t\t\t\tconfig.current.usedAsync = false;\n\t\t\t}\n\t\t\tconfig.queue.shift()();\n\t\t} else {\n\t\t\tsetTimeout( next, 13 );\n\t\t\tbreak;\n\t\t}\n\t}\n\tconfig.depth--;\n\tif ( last && !config.blocking && !config.queue.length && config.depth === 0 ) {\n\t\tdone();\n\t}\n}\n\nfunction pauseProcessing() {\n\tconfig.blocking = true;\n\n\tif ( config.testTimeout && defined.setTimeout ) {\n\t\tclearTimeout( config.timeout );\n\t\tconfig.timeout = setTimeout( function() {\n\t\t\tif ( config.current ) {\n\t\t\t\tconfig.current.semaphore = 0;\n\t\t\t\tQUnit.pushFailure( \"Test timed out\", sourceFromStacktrace( 2 ) );\n\t\t\t} else {\n\t\t\t\tthrow new Error( \"Test timed out\" );\n\t\t\t}\n\t\t\tresumeProcessing();\n\t\t}, config.testTimeout );\n\t}\n}\n\nfunction resumeProcessing() {\n\trunStarted = true;\n\n\t// A slight delay to allow this iteration of the event loop to finish (more assertions, etc.)\n\tif ( defined.setTimeout ) {\n\t\tsetTimeout( function() {\n\t\t\tif ( config.current && config.current.semaphore > 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif ( config.timeout ) {\n\t\t\t\tclearTimeout( config.timeout );\n\t\t\t}\n\n\t\t\tbegin();\n\t\t}, 13 );\n\t} else {\n\t\tbegin();\n\t}\n}\n\nfunction done() {\n\tvar runtime, passed;\n\n\tconfig.autorun = true;\n\n\t// Log the last module results\n\tif ( config.previousModule ) {\n\t\trunLoggingCallbacks( \"moduleDone\", {\n\t\t\tname: config.previousModule.name,\n\t\t\ttests: config.previousModule.tests,\n\t\t\tfailed: config.moduleStats.bad,\n\t\t\tpassed: config.moduleStats.all - config.moduleStats.bad,\n\t\t\ttotal: config.moduleStats.all,\n\t\t\truntime: now() - config.moduleStats.started\n\t\t} );\n\t}\n\tdelete config.previousModule;\n\n\truntime = now() - config.started;\n\tpassed = config.stats.all - config.stats.bad;\n\n\trunLoggingCallbacks( \"done\", {\n\t\tfailed: config.stats.bad,\n\t\tpassed: passed,\n\t\ttotal: config.stats.all,\n\t\truntime: runtime\n\t} );\n}\n\nfunction setHook( module, hookName ) {\n\tif ( module.testEnvironment === undefined ) {\n\t\tmodule.testEnvironment = {};\n\t}\n\n\treturn function( callback ) {\n\t\tmodule.testEnvironment[ hookName ] = callback;\n\t};\n}\n\nvar focused = false;\nvar priorityCount = 0;\nvar unitSampler;\n\nfunction Test( settings ) {\n\tvar i, l;\n\n\t++Test.count;\n\n\textend( this, settings );\n\tthis.assertions = [];\n\tthis.semaphore = 0;\n\tthis.usedAsync = false;\n\tthis.module = config.currentModule;\n\tthis.stack = sourceFromStacktrace( 3 );\n\n\t// Register unique strings\n\tfor ( i = 0, l = this.module.tests; i < l.length; i++ ) {\n\t\tif ( this.module.tests[ i ].name === this.testName ) {\n\t\t\tthis.testName += \" \";\n\t\t}\n\t}\n\n\tthis.testId = generateHash( this.module.name, this.testName );\n\n\tthis.module.tests.push( {\n\t\tname: this.testName,\n\t\ttestId: this.testId\n\t} );\n\n\tif ( settings.skip ) {\n\n\t\t// Skipped tests will fully ignore any sent callback\n\t\tthis.callback = function() {};\n\t\tthis.async = false;\n\t\tthis.expected = 0;\n\t} else {\n\t\tthis.assert = new Assert( this );\n\t}\n}\n\nTest.count = 0;\n\nTest.prototype = {\n\tbefore: function() {\n\t\tif (\n\n\t\t\t// Emit moduleStart when we're switching from one module to another\n\t\t\tthis.module !== config.previousModule ||\n\n\t\t\t\t// They could be equal (both undefined) but if the previousModule property doesn't\n\t\t\t\t// yet exist it means this is the first test in a suite that isn't wrapped in a\n\t\t\t\t// module, in which case we'll just emit a moduleStart event for 'undefined'.\n\t\t\t\t// Without this, reporters can get testStart before moduleStart  which is a problem.\n\t\t\t\t!hasOwn.call( config, \"previousModule\" )\n\t\t) {\n\t\t\tif ( hasOwn.call( config, \"previousModule\" ) ) {\n\t\t\t\trunLoggingCallbacks( \"moduleDone\", {\n\t\t\t\t\tname: config.previousModule.name,\n\t\t\t\t\ttests: config.previousModule.tests,\n\t\t\t\t\tfailed: config.moduleStats.bad,\n\t\t\t\t\tpassed: config.moduleStats.all - config.moduleStats.bad,\n\t\t\t\t\ttotal: config.moduleStats.all,\n\t\t\t\t\truntime: now() - config.moduleStats.started\n\t\t\t\t} );\n\t\t\t}\n\t\t\tconfig.previousModule = this.module;\n\t\t\tconfig.moduleStats = { all: 0, bad: 0, started: now() };\n\t\t\trunLoggingCallbacks( \"moduleStart\", {\n\t\t\t\tname: this.module.name,\n\t\t\t\ttests: this.module.tests\n\t\t\t} );\n\t\t}\n\n\t\tconfig.current = this;\n\n\t\tif ( this.module.testEnvironment ) {\n\t\t\tdelete this.module.testEnvironment.beforeEach;\n\t\t\tdelete this.module.testEnvironment.afterEach;\n\t\t}\n\t\tthis.testEnvironment = extend( {}, this.module.testEnvironment );\n\n\t\tthis.started = now();\n\t\trunLoggingCallbacks( \"testStart\", {\n\t\t\tname: this.testName,\n\t\t\tmodule: this.module.name,\n\t\t\ttestId: this.testId\n\t\t} );\n\n\t\tif ( !config.pollution ) {\n\t\t\tsaveGlobal();\n\t\t}\n\t},\n\n\trun: function() {\n\t\tvar promise;\n\n\t\tconfig.current = this;\n\n\t\tif ( this.async ) {\n\t\t\tQUnit.stop();\n\t\t}\n\n\t\tthis.callbackStarted = now();\n\n\t\tif ( config.notrycatch ) {\n\t\t\trunTest( this );\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\trunTest( this );\n\t\t} catch ( e ) {\n\t\t\tthis.pushFailure( \"Died on test #\" + ( this.assertions.length + 1 ) + \" \" +\n\t\t\t\tthis.stack + \": \" + ( e.message || e ), extractStacktrace( e, 0 ) );\n\n\t\t\t// Else next test will carry the responsibility\n\t\t\tsaveGlobal();\n\n\t\t\t// Restart the tests if they're blocking\n\t\t\tif ( config.blocking ) {\n\t\t\t\tQUnit.start();\n\t\t\t}\n\t\t}\n\n\t\tfunction runTest( test ) {\n\t\t\tpromise = test.callback.call( test.testEnvironment, test.assert );\n\t\t\ttest.resolvePromise( promise );\n\t\t}\n\t},\n\n\tafter: function() {\n\t\tcheckPollution();\n\t},\n\n\tqueueHook: function( hook, hookName ) {\n\t\tvar promise,\n\t\t\ttest = this;\n\t\treturn function runHook() {\n\t\t\tconfig.current = test;\n\t\t\tif ( config.notrycatch ) {\n\t\t\t\tcallHook();\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tcallHook();\n\t\t\t} catch ( error ) {\n\t\t\t\ttest.pushFailure( hookName + \" failed on \" + test.testName + \": \" +\n\t\t\t\t( error.message || error ), extractStacktrace( error, 0 ) );\n\t\t\t}\n\n\t\t\tfunction callHook() {\n\t\t\t\tpromise = hook.call( test.testEnvironment, test.assert );\n\t\t\t\ttest.resolvePromise( promise, hookName );\n\t\t\t}\n\t\t};\n\t},\n\n\t// Currently only used for module level hooks, can be used to add global level ones\n\thooks: function( handler ) {\n\t\tvar hooks = [];\n\n\t\tfunction processHooks( test, module ) {\n\t\t\tif ( module.parentModule ) {\n\t\t\t\tprocessHooks( test, module.parentModule );\n\t\t\t}\n\t\t\tif ( module.testEnvironment &&\n\t\t\t\tQUnit.objectType( module.testEnvironment[ handler ] ) === \"function\" ) {\n\t\t\t\thooks.push( test.queueHook( module.testEnvironment[ handler ], handler ) );\n\t\t\t}\n\t\t}\n\n\t\t// Hooks are ignored on skipped tests\n\t\tif ( !this.skip ) {\n\t\t\tprocessHooks( this, this.module );\n\t\t}\n\t\treturn hooks;\n\t},\n\n\tfinish: function() {\n\t\tconfig.current = this;\n\t\tif ( config.requireExpects && this.expected === null ) {\n\t\t\tthis.pushFailure( \"Expected number of assertions to be defined, but expect() was \" +\n\t\t\t\t\"not called.\", this.stack );\n\t\t} else if ( this.expected !== null && this.expected !== this.assertions.length ) {\n\t\t\tthis.pushFailure( \"Expected \" + this.expected + \" assertions, but \" +\n\t\t\t\tthis.assertions.length + \" were run\", this.stack );\n\t\t} else if ( this.expected === null && !this.assertions.length ) {\n\t\t\tthis.pushFailure( \"Expected at least one assertion, but none were run - call \" +\n\t\t\t\t\"expect(0) to accept zero assertions.\", this.stack );\n\t\t}\n\n\t\tvar i,\n\t\t\tbad = 0;\n\n\t\tthis.runtime = now() - this.started;\n\t\tconfig.stats.all += this.assertions.length;\n\t\tconfig.moduleStats.all += this.assertions.length;\n\n\t\tfor ( i = 0; i < this.assertions.length; i++ ) {\n\t\t\tif ( !this.assertions[ i ].result ) {\n\t\t\t\tbad++;\n\t\t\t\tconfig.stats.bad++;\n\t\t\t\tconfig.moduleStats.bad++;\n\t\t\t}\n\t\t}\n\n\t\trunLoggingCallbacks( \"testDone\", {\n\t\t\tname: this.testName,\n\t\t\tmodule: this.module.name,\n\t\t\tskipped: !!this.skip,\n\t\t\tfailed: bad,\n\t\t\tpassed: this.assertions.length - bad,\n\t\t\ttotal: this.assertions.length,\n\t\t\truntime: this.runtime,\n\n\t\t\t// HTML Reporter use\n\t\t\tassertions: this.assertions,\n\t\t\ttestId: this.testId,\n\n\t\t\t// Source of Test\n\t\t\tsource: this.stack,\n\n\t\t\t// DEPRECATED: this property will be removed in 2.0.0, use runtime instead\n\t\t\tduration: this.runtime\n\t\t} );\n\n\t\t// QUnit.reset() is deprecated and will be replaced for a new\n\t\t// fixture reset function on QUnit 2.0/2.1.\n\t\t// It's still called here for backwards compatibility handling\n\t\tQUnit.reset();\n\n\t\tconfig.current = undefined;\n\t},\n\n\tqueue: function() {\n\t\tvar priority,\n\t\t\ttest = this;\n\n\t\tif ( !this.valid() ) {\n\t\t\treturn;\n\t\t}\n\n\t\tfunction run() {\n\n\t\t\t// Each of these can by async\n\t\t\tsynchronize( [\n\t\t\t\tfunction() {\n\t\t\t\t\ttest.before();\n\t\t\t\t},\n\n\t\t\t\ttest.hooks( \"beforeEach\" ),\n\t\t\t\tfunction() {\n\t\t\t\t\ttest.run();\n\t\t\t\t},\n\n\t\t\t\ttest.hooks( \"afterEach\" ).reverse(),\n\n\t\t\t\tfunction() {\n\t\t\t\t\ttest.after();\n\t\t\t\t},\n\t\t\t\tfunction() {\n\t\t\t\t\ttest.finish();\n\t\t\t\t}\n\t\t\t] );\n\t\t}\n\n\t\t// Prioritize previously failed tests, detected from sessionStorage\n\t\tpriority = QUnit.config.reorder && defined.sessionStorage &&\n\t\t\t\t+sessionStorage.getItem( \"qunit-test-\" + this.module.name + \"-\" + this.testName );\n\n\t\treturn synchronize( run, priority, config.seed );\n\t},\n\n\tpushResult: function( resultInfo ) {\n\n\t\t// Destructure of resultInfo = { result, actual, expected, message, negative }\n\t\tvar source,\n\t\t\tdetails = {\n\t\t\t\tmodule: this.module.name,\n\t\t\t\tname: this.testName,\n\t\t\t\tresult: resultInfo.result,\n\t\t\t\tmessage: resultInfo.message,\n\t\t\t\tactual: resultInfo.actual,\n\t\t\t\texpected: resultInfo.expected,\n\t\t\t\ttestId: this.testId,\n\t\t\t\tnegative: resultInfo.negative || false,\n\t\t\t\truntime: now() - this.started\n\t\t\t};\n\n\t\tif ( !resultInfo.result ) {\n\t\t\tsource = sourceFromStacktrace();\n\n\t\t\tif ( source ) {\n\t\t\t\tdetails.source = source;\n\t\t\t}\n\t\t}\n\n\t\trunLoggingCallbacks( \"log\", details );\n\n\t\tthis.assertions.push( {\n\t\t\tresult: !!resultInfo.result,\n\t\t\tmessage: resultInfo.message\n\t\t} );\n\t},\n\n\tpushFailure: function( message, source, actual ) {\n\t\tif ( !( this instanceof Test ) ) {\n\t\t\tthrow new Error( \"pushFailure() assertion outside test context, was \" +\n\t\t\t\tsourceFromStacktrace( 2 ) );\n\t\t}\n\n\t\tvar details = {\n\t\t\t\tmodule: this.module.name,\n\t\t\t\tname: this.testName,\n\t\t\t\tresult: false,\n\t\t\t\tmessage: message || \"error\",\n\t\t\t\tactual: actual || null,\n\t\t\t\ttestId: this.testId,\n\t\t\t\truntime: now() - this.started\n\t\t\t};\n\n\t\tif ( source ) {\n\t\t\tdetails.source = source;\n\t\t}\n\n\t\trunLoggingCallbacks( \"log\", details );\n\n\t\tthis.assertions.push( {\n\t\t\tresult: false,\n\t\t\tmessage: message\n\t\t} );\n\t},\n\n\tresolvePromise: function( promise, phase ) {\n\t\tvar then, message,\n\t\t\ttest = this;\n\t\tif ( promise != null ) {\n\t\t\tthen = promise.then;\n\t\t\tif ( QUnit.objectType( then ) === \"function\" ) {\n\t\t\t\tQUnit.stop();\n\t\t\t\tthen.call(\n\t\t\t\t\tpromise,\n\t\t\t\t\tfunction() { QUnit.start(); },\n\t\t\t\t\tfunction( error ) {\n\t\t\t\t\t\tmessage = \"Promise rejected \" +\n\t\t\t\t\t\t\t( !phase ? \"during\" : phase.replace( /Each$/, \"\" ) ) +\n\t\t\t\t\t\t\t\" \" + test.testName + \": \" + ( error.message || error );\n\t\t\t\t\t\ttest.pushFailure( message, extractStacktrace( error, 0 ) );\n\n\t\t\t\t\t\t// Else next test will carry the responsibility\n\t\t\t\t\t\tsaveGlobal();\n\n\t\t\t\t\t\t// Unblock\n\t\t\t\t\t\tQUnit.start();\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\t},\n\n\tvalid: function() {\n\t\tvar filter = config.filter,\n\t\t\tregexFilter = /^(!?)\\/([\\w\\W]*)\\/(i?$)/.exec( filter ),\n\t\t\tmodule = config.module && config.module.toLowerCase(),\n\t\t\tfullName = ( this.module.name + \": \" + this.testName );\n\n\t\tfunction moduleChainNameMatch( testModule ) {\n\t\t\tvar testModuleName = testModule.name ? testModule.name.toLowerCase() : null;\n\t\t\tif ( testModuleName === module ) {\n\t\t\t\treturn true;\n\t\t\t} else if ( testModule.parentModule ) {\n\t\t\t\treturn moduleChainNameMatch( testModule.parentModule );\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfunction moduleChainIdMatch( testModule ) {\n\t\t\treturn inArray( testModule.moduleId, config.moduleId ) > -1 ||\n\t\t\t\ttestModule.parentModule && moduleChainIdMatch( testModule.parentModule );\n\t\t}\n\n\t\t// Internally-generated tests are always valid\n\t\tif ( this.callback && this.callback.validTest ) {\n\t\t\treturn true;\n\t\t}\n\n\t\tif ( config.moduleId && config.moduleId.length > 0 &&\n\t\t\t!moduleChainIdMatch( this.module ) ) {\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( config.testId && config.testId.length > 0 &&\n\t\t\tinArray( this.testId, config.testId ) < 0 ) {\n\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( module && !moduleChainNameMatch( this.module ) ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tif ( !filter ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn regexFilter ?\n\t\t\tthis.regexFilter( !!regexFilter[ 1 ], regexFilter[ 2 ], regexFilter[ 3 ], fullName ) :\n\t\t\tthis.stringFilter( filter, fullName );\n\t},\n\n\tregexFilter: function( exclude, pattern, flags, fullName ) {\n\t\tvar regex = new RegExp( pattern, flags );\n\t\tvar match = regex.test( fullName );\n\n\t\treturn match !== exclude;\n\t},\n\n\tstringFilter: function( filter, fullName ) {\n\t\tfilter = filter.toLowerCase();\n\t\tfullName = fullName.toLowerCase();\n\n\t\tvar include = filter.charAt( 0 ) !== \"!\";\n\t\tif ( !include ) {\n\t\t\tfilter = filter.slice( 1 );\n\t\t}\n\n\t\t// If the filter matches, we need to honour include\n\t\tif ( fullName.indexOf( filter ) !== -1 ) {\n\t\t\treturn include;\n\t\t}\n\n\t\t// Otherwise, do the opposite\n\t\treturn !include;\n\t}\n};\n\n// Resets the test setup. Useful for tests that modify the DOM.\n/*\nDEPRECATED: Use multiple tests instead of resetting inside a test.\nUse testStart or testDone for custom cleanup.\nThis method will throw an error in 2.0, and will be removed in 2.1\n*/\nQUnit.reset = function() {\n\n\t// Return on non-browser environments\n\t// This is necessary to not break on node tests\n\tif ( !defined.document ) {\n\t\treturn;\n\t}\n\n\tvar fixture = defined.document && document.getElementById &&\n\t\t\tdocument.getElementById( \"qunit-fixture\" );\n\n\tif ( fixture ) {\n\t\tfixture.innerHTML = config.fixture;\n\t}\n};\n\nQUnit.pushFailure = function() {\n\tif ( !QUnit.config.current ) {\n\t\tthrow new Error( \"pushFailure() assertion outside test context, in \" +\n\t\t\tsourceFromStacktrace( 2 ) );\n\t}\n\n\t// Gets current test obj\n\tvar currentTest = QUnit.config.current;\n\n\treturn currentTest.pushFailure.apply( currentTest, arguments );\n};\n\n// Based on Java's String.hashCode, a simple but not\n// rigorously collision resistant hashing function\nfunction generateHash( module, testName ) {\n\tvar hex,\n\t\ti = 0,\n\t\thash = 0,\n\t\tstr = module + \"\\x1C\" + testName,\n\t\tlen = str.length;\n\n\tfor ( ; i < len; i++ ) {\n\t\thash  = ( ( hash << 5 ) - hash ) + str.charCodeAt( i );\n\t\thash |= 0;\n\t}\n\n\t// Convert the possibly negative integer hash code into an 8 character hex string, which isn't\n\t// strictly necessary but increases user understanding that the id is a SHA-like hash\n\thex = ( 0x100000000 + hash ).toString( 16 );\n\tif ( hex.length < 8 ) {\n\t\thex = \"0000000\" + hex;\n\t}\n\n\treturn hex.slice( -8 );\n}\n\nfunction synchronize( callback, priority, seed ) {\n\tvar last = !priority,\n\t\tindex;\n\n\tif ( QUnit.objectType( callback ) === \"array\" ) {\n\t\twhile ( callback.length ) {\n\t\t\tsynchronize( callback.shift() );\n\t\t}\n\t\treturn;\n\t}\n\n\tif ( priority ) {\n\t\tconfig.queue.splice( priorityCount++, 0, callback );\n\t} else if ( seed ) {\n\t\tif ( !unitSampler ) {\n\t\t\tunitSampler = unitSamplerGenerator( seed );\n\t\t}\n\n\t\t// Insert into a random position after all priority items\n\t\tindex = Math.floor( unitSampler() * ( config.queue.length - priorityCount + 1 ) );\n\t\tconfig.queue.splice( priorityCount + index, 0, callback );\n\t} else {\n\t\tconfig.queue.push( callback );\n\t}\n\n\tif ( config.autorun && !config.blocking ) {\n\t\tprocess( last );\n\t}\n}\n\nfunction unitSamplerGenerator( seed ) {\n\n\t// 32-bit xorshift, requires only a nonzero seed\n\t// http://excamera.com/sphinx/article-xorshift.html\n\tvar sample = parseInt( generateHash( seed ), 16 ) || -1;\n\treturn function() {\n\t\tsample ^= sample << 13;\n\t\tsample ^= sample >>> 17;\n\t\tsample ^= sample << 5;\n\n\t\t// ECMAScript has no unsigned number type\n\t\tif ( sample < 0 ) {\n\t\t\tsample += 0x100000000;\n\t\t}\n\n\t\treturn sample / 0x100000000;\n\t};\n}\n\nfunction saveGlobal() {\n\tconfig.pollution = [];\n\n\tif ( config.noglobals ) {\n\t\tfor ( var key in global ) {\n\t\t\tif ( hasOwn.call( global, key ) ) {\n\n\t\t\t\t// In Opera sometimes DOM element ids show up here, ignore them\n\t\t\t\tif ( /^qunit-test-output/.test( key ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconfig.pollution.push( key );\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction checkPollution() {\n\tvar newGlobals,\n\t\tdeletedGlobals,\n\t\told = config.pollution;\n\n\tsaveGlobal();\n\n\tnewGlobals = diff( config.pollution, old );\n\tif ( newGlobals.length > 0 ) {\n\t\tQUnit.pushFailure( \"Introduced global variable(s): \" + newGlobals.join( \", \" ) );\n\t}\n\n\tdeletedGlobals = diff( old, config.pollution );\n\tif ( deletedGlobals.length > 0 ) {\n\t\tQUnit.pushFailure( \"Deleted global variable(s): \" + deletedGlobals.join( \", \" ) );\n\t}\n}\n\n// Will be exposed as QUnit.asyncTest\nfunction asyncTest( testName, expected, callback ) {\n\tif ( arguments.length === 2 ) {\n\t\tcallback = expected;\n\t\texpected = null;\n\t}\n\n\tQUnit.test( testName, expected, callback, true );\n}\n\n// Will be exposed as QUnit.test\nfunction test( testName, expected, callback, async ) {\n\tif ( focused )  { return; }\n\n\tvar newTest;\n\n\tif ( arguments.length === 2 ) {\n\t\tcallback = expected;\n\t\texpected = null;\n\t}\n\n\tnewTest = new Test( {\n\t\ttestName: testName,\n\t\texpected: expected,\n\t\tasync: async,\n\t\tcallback: callback\n\t} );\n\n\tnewTest.queue();\n}\n\n// Will be exposed as QUnit.skip\nfunction skip( testName ) {\n\tif ( focused )  { return; }\n\n\tvar test = new Test( {\n\t\ttestName: testName,\n\t\tskip: true\n\t} );\n\n\ttest.queue();\n}\n\n// Will be exposed as QUnit.only\nfunction only( testName, expected, callback, async ) {\n\tvar newTest;\n\n\tif ( focused )  { return; }\n\n\tQUnit.config.queue.length = 0;\n\tfocused = true;\n\n\tif ( arguments.length === 2 ) {\n\t\tcallback = expected;\n\t\texpected = null;\n\t}\n\n\tnewTest = new Test( {\n\t\ttestName: testName,\n\t\texpected: expected,\n\t\tasync: async,\n\t\tcallback: callback\n\t} );\n\n\tnewTest.queue();\n}\n\nfunction Assert( testContext ) {\n\tthis.test = testContext;\n}\n\n// Assert helpers\nQUnit.assert = Assert.prototype = {\n\n\t// Specify the number of expected assertions to guarantee that failed test\n\t// (no assertions are run at all) don't slip through.\n\texpect: function( asserts ) {\n\t\tif ( arguments.length === 1 ) {\n\t\t\tthis.test.expected = asserts;\n\t\t} else {\n\t\t\treturn this.test.expected;\n\t\t}\n\t},\n\n\t// Increment this Test's semaphore counter, then return a function that\n\t// decrements that counter a maximum of once.\n\tasync: function( count ) {\n\t\tvar test = this.test,\n\t\t\tpopped = false,\n\t\t\tacceptCallCount = count;\n\n\t\tif ( typeof acceptCallCount === \"undefined\" ) {\n\t\t\tacceptCallCount = 1;\n\t\t}\n\n\t\ttest.semaphore += 1;\n\t\ttest.usedAsync = true;\n\t\tpauseProcessing();\n\n\t\treturn function done() {\n\n\t\t\tif ( popped ) {\n\t\t\t\ttest.pushFailure( \"Too many calls to the `assert.async` callback\",\n\t\t\t\t\tsourceFromStacktrace( 2 ) );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tacceptCallCount -= 1;\n\t\t\tif ( acceptCallCount > 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\ttest.semaphore -= 1;\n\t\t\tpopped = true;\n\t\t\tresumeProcessing();\n\t\t};\n\t},\n\n\t// Exports test.push() to the user API\n\t// Alias of pushResult.\n\tpush: function( result, actual, expected, message, negative ) {\n\t\tvar currentAssert = this instanceof Assert ? this : QUnit.config.current.assert;\n\t\treturn currentAssert.pushResult( {\n\t\t\tresult: result,\n\t\t\tactual: actual,\n\t\t\texpected: expected,\n\t\t\tmessage: message,\n\t\t\tnegative: negative\n\t\t} );\n\t},\n\n\tpushResult: function( resultInfo ) {\n\n\t\t// Destructure of resultInfo = { result, actual, expected, message, negative }\n\t\tvar assert = this,\n\t\t\tcurrentTest = ( assert instanceof Assert && assert.test ) || QUnit.config.current;\n\n\t\t// Backwards compatibility fix.\n\t\t// Allows the direct use of global exported assertions and QUnit.assert.*\n\t\t// Although, it's use is not recommended as it can leak assertions\n\t\t// to other tests from async tests, because we only get a reference to the current test,\n\t\t// not exactly the test where assertion were intended to be called.\n\t\tif ( !currentTest ) {\n\t\t\tthrow new Error( \"assertion outside test context, in \" + sourceFromStacktrace( 2 ) );\n\t\t}\n\n\t\tif ( currentTest.usedAsync === true && currentTest.semaphore === 0 ) {\n\t\t\tcurrentTest.pushFailure( \"Assertion after the final `assert.async` was resolved\",\n\t\t\t\tsourceFromStacktrace( 2 ) );\n\n\t\t\t// Allow this assertion to continue running anyway...\n\t\t}\n\n\t\tif ( !( assert instanceof Assert ) ) {\n\t\t\tassert = currentTest.assert;\n\t\t}\n\n\t\treturn assert.test.pushResult( resultInfo );\n\t},\n\n\tok: function( result, message ) {\n\t\tmessage = message || ( result ? \"okay\" : \"failed, expected argument to be truthy, was: \" +\n\t\t\tQUnit.dump.parse( result ) );\n\t\tthis.pushResult( {\n\t\t\tresult: !!result,\n\t\t\tactual: result,\n\t\t\texpected: true,\n\t\t\tmessage: message\n\t\t} );\n\t},\n\n\tnotOk: function( result, message ) {\n\t\tmessage = message || ( !result ? \"okay\" : \"failed, expected argument to be falsy, was: \" +\n\t\t\tQUnit.dump.parse( result ) );\n\t\tthis.pushResult( {\n\t\t\tresult: !result,\n\t\t\tactual: result,\n\t\t\texpected: false,\n\t\t\tmessage: message\n\t\t} );\n\t},\n\n\tequal: function( actual, expected, message ) {\n\t\t/*jshint eqeqeq:false */\n\t\tthis.pushResult( {\n\t\t\tresult: expected == actual,\n\t\t\tactual: actual,\n\t\t\texpected: expected,\n\t\t\tmessage: message\n\t\t} );\n\t},\n\n\tnotEqual: function( actual, expected, message ) {\n\t\t/*jshint eqeqeq:false */\n\t\tthis.pushResult( {\n\t\t\tresult: expected != actual,\n\t\t\tactual: actual,\n\t\t\texpected: expected,\n\t\t\tmessage: message,\n\t\t\tnegative: true\n\t\t} );\n\t},\n\n\tpropEqual: function( actual, expected, message ) {\n\t\tactual = objectValues( actual );\n\t\texpected = objectValues( expected );\n\t\tthis.pushResult( {\n\t\t\tresult: QUnit.equiv( actual, expected ),\n\t\t\tactual: actual,\n\t\t\texpected: expected,\n\t\t\tmessage: message\n\t\t} );\n\t},\n\n\tnotPropEqual: function( actual, expected, message ) {\n\t\tactual = objectValues( actual );\n\t\texpected = objectValues( expected );\n\t\tthis.pushResult( {\n\t\t\tresult: !QUnit.equiv( actual, expected ),\n\t\t\tactual: actual,\n\t\t\texpected: expected,\n\t\t\tmessage: message,\n\t\t\tnegative: true\n\t\t} );\n\t},\n\n\tdeepEqual: function( actual, expected, message ) {\n\t\tthis.pushResult( {\n\t\t\tresult: QUnit.equiv( actual, expected ),\n\t\t\tactual: actual,\n\t\t\texpected: expected,\n\t\t\tmessage: message\n\t\t} );\n\t},\n\n\tnotDeepEqual: function( actual, expected, message ) {\n\t\tthis.pushResult( {\n\t\t\tresult: !QUnit.equiv( actual, expected ),\n\t\t\tactual: actual,\n\t\t\texpected: expected,\n\t\t\tmessage: message,\n\t\t\tnegative: true\n\t\t} );\n\t},\n\n\tstrictEqual: function( actual, expected, message ) {\n\t\tthis.pushResult( {\n\t\t\tresult: expected === actual,\n\t\t\tactual: actual,\n\t\t\texpected: expected,\n\t\t\tmessage: message\n\t\t} );\n\t},\n\n\tnotStrictEqual: function( actual, expected, message ) {\n\t\tthis.pushResult( {\n\t\t\tresult: expected !== actual,\n\t\t\tactual: actual,\n\t\t\texpected: expected,\n\t\t\tmessage: message,\n\t\t\tnegative: true\n\t\t} );\n\t},\n\n\t\"throws\": function( block, expected, message ) {\n\t\tvar actual, expectedType,\n\t\t\texpectedOutput = expected,\n\t\t\tok = false,\n\t\t\tcurrentTest = ( this instanceof Assert && this.test ) || QUnit.config.current;\n\n\t\t// 'expected' is optional unless doing string comparison\n\t\tif ( message == null && typeof expected === \"string\" ) {\n\t\t\tmessage = expected;\n\t\t\texpected = null;\n\t\t}\n\n\t\tcurrentTest.ignoreGlobalErrors = true;\n\t\ttry {\n\t\t\tblock.call( currentTest.testEnvironment );\n\t\t} catch ( e ) {\n\t\t\tactual = e;\n\t\t}\n\t\tcurrentTest.ignoreGlobalErrors = false;\n\n\t\tif ( actual ) {\n\t\t\texpectedType = QUnit.objectType( expected );\n\n\t\t\t// We don't want to validate thrown error\n\t\t\tif ( !expected ) {\n\t\t\t\tok = true;\n\t\t\t\texpectedOutput = null;\n\n\t\t\t// Expected is a regexp\n\t\t\t} else if ( expectedType === \"regexp\" ) {\n\t\t\t\tok = expected.test( errorString( actual ) );\n\n\t\t\t// Expected is a string\n\t\t\t} else if ( expectedType === \"string\" ) {\n\t\t\t\tok = expected === errorString( actual );\n\n\t\t\t// Expected is a constructor, maybe an Error constructor\n\t\t\t} else if ( expectedType === \"function\" && actual instanceof expected ) {\n\t\t\t\tok = true;\n\n\t\t\t// Expected is an Error object\n\t\t\t} else if ( expectedType === \"object\" ) {\n\t\t\t\tok = actual instanceof expected.constructor &&\n\t\t\t\t\tactual.name === expected.name &&\n\t\t\t\t\tactual.message === expected.message;\n\n\t\t\t// Expected is a validation function which returns true if validation passed\n\t\t\t} else if ( expectedType === \"function\" && expected.call( {}, actual ) === true ) {\n\t\t\t\texpectedOutput = null;\n\t\t\t\tok = true;\n\t\t\t}\n\t\t}\n\n\t\tcurrentTest.assert.pushResult( {\n\t\t\tresult: ok,\n\t\t\tactual: actual,\n\t\t\texpected: expectedOutput,\n\t\t\tmessage: message\n\t\t} );\n\t}\n};\n\n// Provide an alternative to assert.throws(), for environments that consider throws a reserved word\n// Known to us are: Closure Compiler, Narwhal\n( function() {\n\t/*jshint sub:true */\n\tAssert.prototype.raises = Assert.prototype [ \"throws\" ]; //jscs:ignore requireDotNotation\n}() );\n\nfunction errorString( error ) {\n\tvar name, message,\n\t\tresultErrorString = error.toString();\n\tif ( resultErrorString.substring( 0, 7 ) === \"[object\" ) {\n\t\tname = error.name ? error.name.toString() : \"Error\";\n\t\tmessage = error.message ? error.message.toString() : \"\";\n\t\tif ( name && message ) {\n\t\t\treturn name + \": \" + message;\n\t\t} else if ( name ) {\n\t\t\treturn name;\n\t\t} else if ( message ) {\n\t\t\treturn message;\n\t\t} else {\n\t\t\treturn \"Error\";\n\t\t}\n\t} else {\n\t\treturn resultErrorString;\n\t}\n}\n\n// Test for equality any JavaScript type.\n// Author: Philippe Rathé <prathe@gmail.com>\nQUnit.equiv = ( function() {\n\n\t// Stack to decide between skip/abort functions\n\tvar callers = [];\n\n\t// Stack to avoiding loops from circular referencing\n\tvar parents = [];\n\tvar parentsB = [];\n\n\tvar getProto = Object.getPrototypeOf || function( obj ) {\n\n\t\t/*jshint proto: true */\n\t\treturn obj.__proto__;\n\t};\n\n\tfunction useStrictEquality( b, a ) {\n\n\t\t// To catch short annotation VS 'new' annotation of a declaration. e.g.:\n\t\t// `var i = 1;`\n\t\t// `var j = new Number(1);`\n\t\tif ( typeof a === \"object\" ) {\n\t\t\ta = a.valueOf();\n\t\t}\n\t\tif ( typeof b === \"object\" ) {\n\t\t\tb = b.valueOf();\n\t\t}\n\n\t\treturn a === b;\n\t}\n\n\tfunction compareConstructors( a, b ) {\n\t\tvar protoA = getProto( a );\n\t\tvar protoB = getProto( b );\n\n\t\t// Comparing constructors is more strict than using `instanceof`\n\t\tif ( a.constructor === b.constructor ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Ref #851\n\t\t// If the obj prototype descends from a null constructor, treat it\n\t\t// as a null prototype.\n\t\tif ( protoA && protoA.constructor === null ) {\n\t\t\tprotoA = null;\n\t\t}\n\t\tif ( protoB && protoB.constructor === null ) {\n\t\t\tprotoB = null;\n\t\t}\n\n\t\t// Allow objects with no prototype to be equivalent to\n\t\t// objects with Object as their constructor.\n\t\tif ( ( protoA === null && protoB === Object.prototype ) ||\n\t\t\t\t( protoB === null && protoA === Object.prototype ) ) {\n\t\t\treturn true;\n\t\t}\n\n\t\treturn false;\n\t}\n\n\tfunction getRegExpFlags( regexp ) {\n\t\treturn \"flags\" in regexp ? regexp.flags : regexp.toString().match( /[gimuy]*$/ )[ 0 ];\n\t}\n\n\tvar callbacks = {\n\t\t\"string\": useStrictEquality,\n\t\t\"boolean\": useStrictEquality,\n\t\t\"number\": useStrictEquality,\n\t\t\"null\": useStrictEquality,\n\t\t\"undefined\": useStrictEquality,\n\t\t\"symbol\": useStrictEquality,\n\t\t\"date\": useStrictEquality,\n\n\t\t\"nan\": function() {\n\t\t\treturn true;\n\t\t},\n\n\t\t\"regexp\": function( b, a ) {\n\t\t\treturn a.source === b.source &&\n\n\t\t\t\t// Include flags in the comparison\n\t\t\t\tgetRegExpFlags( a ) === getRegExpFlags( b );\n\t\t},\n\n\t\t// - skip when the property is a method of an instance (OOP)\n\t\t// - abort otherwise,\n\t\t// initial === would have catch identical references anyway\n\t\t\"function\": function() {\n\t\t\tvar caller = callers[ callers.length - 1 ];\n\t\t\treturn caller !== Object && typeof caller !== \"undefined\";\n\t\t},\n\n\t\t\"array\": function( b, a ) {\n\t\t\tvar i, j, len, loop, aCircular, bCircular;\n\n\t\t\tlen = a.length;\n\t\t\tif ( len !== b.length ) {\n\n\t\t\t\t// Safe and faster\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Track reference to avoid circular references\n\t\t\tparents.push( a );\n\t\t\tparentsB.push( b );\n\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\tloop = false;\n\t\t\t\tfor ( j = 0; j < parents.length; j++ ) {\n\t\t\t\t\taCircular = parents[ j ] === a[ i ];\n\t\t\t\t\tbCircular = parentsB[ j ] === b[ i ];\n\t\t\t\t\tif ( aCircular || bCircular ) {\n\t\t\t\t\t\tif ( a[ i ] === b[ i ] || aCircular && bCircular ) {\n\t\t\t\t\t\t\tloop = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\t\tparentsB.pop();\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( !loop && !innerEquiv( a[ i ], b[ i ] ) ) {\n\t\t\t\t\tparents.pop();\n\t\t\t\t\tparentsB.pop();\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tparents.pop();\n\t\t\tparentsB.pop();\n\t\t\treturn true;\n\t\t},\n\n\t\t\"set\": function( b, a ) {\n\t\t\tvar innerEq,\n\t\t\t\touterEq = true;\n\n\t\t\tif ( a.size !== b.size ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\ta.forEach( function( aVal ) {\n\t\t\t\tinnerEq = false;\n\n\t\t\t\tb.forEach( function( bVal ) {\n\t\t\t\t\tif ( innerEquiv( bVal, aVal ) ) {\n\t\t\t\t\t\tinnerEq = true;\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tif ( !innerEq ) {\n\t\t\t\t\touterEq = false;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn outerEq;\n\t\t},\n\n\t\t\"map\": function( b, a ) {\n\t\t\tvar innerEq,\n\t\t\t\touterEq = true;\n\n\t\t\tif ( a.size !== b.size ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\ta.forEach( function( aVal, aKey ) {\n\t\t\t\tinnerEq = false;\n\n\t\t\t\tb.forEach( function( bVal, bKey ) {\n\t\t\t\t\tif ( innerEquiv( [ bVal, bKey ], [ aVal, aKey ] ) ) {\n\t\t\t\t\t\tinnerEq = true;\n\t\t\t\t\t}\n\t\t\t\t} );\n\n\t\t\t\tif ( !innerEq ) {\n\t\t\t\t\touterEq = false;\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\treturn outerEq;\n\t\t},\n\n\t\t\"object\": function( b, a ) {\n\t\t\tvar i, j, loop, aCircular, bCircular;\n\n\t\t\t// Default to true\n\t\t\tvar eq = true;\n\t\t\tvar aProperties = [];\n\t\t\tvar bProperties = [];\n\n\t\t\tif ( compareConstructors( a, b ) === false ) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\t// Stack constructor before traversing properties\n\t\t\tcallers.push( a.constructor );\n\n\t\t\t// Track reference to avoid circular references\n\t\t\tparents.push( a );\n\t\t\tparentsB.push( b );\n\n\t\t\t// Be strict: don't ensure hasOwnProperty and go deep\n\t\t\tfor ( i in a ) {\n\t\t\t\tloop = false;\n\t\t\t\tfor ( j = 0; j < parents.length; j++ ) {\n\t\t\t\t\taCircular = parents[ j ] === a[ i ];\n\t\t\t\t\tbCircular = parentsB[ j ] === b[ i ];\n\t\t\t\t\tif ( aCircular || bCircular ) {\n\t\t\t\t\t\tif ( a[ i ] === b[ i ] || aCircular && bCircular ) {\n\t\t\t\t\t\t\tloop = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\teq = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\taProperties.push( i );\n\t\t\t\tif ( !loop && !innerEquiv( a[ i ], b[ i ] ) ) {\n\t\t\t\t\teq = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tparents.pop();\n\t\t\tparentsB.pop();\n\n\t\t\t// Unstack, we are done\n\t\t\tcallers.pop();\n\n\t\t\tfor ( i in b ) {\n\n\t\t\t\t// Collect b's properties\n\t\t\t\tbProperties.push( i );\n\t\t\t}\n\n\t\t\t// Ensures identical properties name\n\t\t\treturn eq && innerEquiv( aProperties.sort(), bProperties.sort() );\n\t\t}\n\t};\n\n\tfunction typeEquiv( a, b ) {\n\t\tvar type = QUnit.objectType( a );\n\t\treturn QUnit.objectType( b ) === type && callbacks[ type ]( b, a );\n\t}\n\n\t// The real equiv function\n\tfunction innerEquiv( a, b ) {\n\n\t\t// We're done when there's nothing more to compare\n\t\tif ( arguments.length < 2 ) {\n\t\t\treturn true;\n\t\t}\n\n\t\t// Require type-specific equality\n\t\treturn ( a === b || typeEquiv( a, b ) ) &&\n\n\t\t\t// ...across all consecutive argument pairs\n\t\t\t( arguments.length === 2 || innerEquiv.apply( this, [].slice.call( arguments, 1 ) ) );\n\t}\n\n\treturn innerEquiv;\n}() );\n\n// Based on jsDump by Ariel Flesler\n// http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html\nQUnit.dump = ( function() {\n\tfunction quote( str ) {\n\t\treturn \"\\\"\" + str.toString().replace( /\\\\/g, \"\\\\\\\\\" ).replace( /\"/g, \"\\\\\\\"\" ) + \"\\\"\";\n\t}\n\tfunction literal( o ) {\n\t\treturn o + \"\";\n\t}\n\tfunction join( pre, arr, post ) {\n\t\tvar s = dump.separator(),\n\t\t\tbase = dump.indent(),\n\t\t\tinner = dump.indent( 1 );\n\t\tif ( arr.join ) {\n\t\t\tarr = arr.join( \",\" + s + inner );\n\t\t}\n\t\tif ( !arr ) {\n\t\t\treturn pre + post;\n\t\t}\n\t\treturn [ pre, inner + arr, base + post ].join( s );\n\t}\n\tfunction array( arr, stack ) {\n\t\tvar i = arr.length,\n\t\t\tret = new Array( i );\n\n\t\tif ( dump.maxDepth && dump.depth > dump.maxDepth ) {\n\t\t\treturn \"[object Array]\";\n\t\t}\n\n\t\tthis.up();\n\t\twhile ( i-- ) {\n\t\t\tret[ i ] = this.parse( arr[ i ], undefined, stack );\n\t\t}\n\t\tthis.down();\n\t\treturn join( \"[\", ret, \"]\" );\n\t}\n\n\tvar reName = /^function (\\w+)/,\n\t\tdump = {\n\n\t\t\t// The objType is used mostly internally, you can fix a (custom) type in advance\n\t\t\tparse: function( obj, objType, stack ) {\n\t\t\t\tstack = stack || [];\n\t\t\t\tvar res, parser, parserType,\n\t\t\t\t\tinStack = inArray( obj, stack );\n\n\t\t\t\tif ( inStack !== -1 ) {\n\t\t\t\t\treturn \"recursion(\" + ( inStack - stack.length ) + \")\";\n\t\t\t\t}\n\n\t\t\t\tobjType = objType || this.typeOf( obj  );\n\t\t\t\tparser = this.parsers[ objType ];\n\t\t\t\tparserType = typeof parser;\n\n\t\t\t\tif ( parserType === \"function\" ) {\n\t\t\t\t\tstack.push( obj );\n\t\t\t\t\tres = parser.call( this, obj, stack );\n\t\t\t\t\tstack.pop();\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t\treturn ( parserType === \"string\" ) ? parser : this.parsers.error;\n\t\t\t},\n\t\t\ttypeOf: function( obj ) {\n\t\t\t\tvar type;\n\t\t\t\tif ( obj === null ) {\n\t\t\t\t\ttype = \"null\";\n\t\t\t\t} else if ( typeof obj === \"undefined\" ) {\n\t\t\t\t\ttype = \"undefined\";\n\t\t\t\t} else if ( QUnit.is( \"regexp\", obj ) ) {\n\t\t\t\t\ttype = \"regexp\";\n\t\t\t\t} else if ( QUnit.is( \"date\", obj ) ) {\n\t\t\t\t\ttype = \"date\";\n\t\t\t\t} else if ( QUnit.is( \"function\", obj ) ) {\n\t\t\t\t\ttype = \"function\";\n\t\t\t\t} else if ( obj.setInterval !== undefined &&\n\t\t\t\t\t\tobj.document !== undefined &&\n\t\t\t\t\t\tobj.nodeType === undefined ) {\n\t\t\t\t\ttype = \"window\";\n\t\t\t\t} else if ( obj.nodeType === 9 ) {\n\t\t\t\t\ttype = \"document\";\n\t\t\t\t} else if ( obj.nodeType ) {\n\t\t\t\t\ttype = \"node\";\n\t\t\t\t} else if (\n\n\t\t\t\t\t// Native arrays\n\t\t\t\t\ttoString.call( obj ) === \"[object Array]\" ||\n\n\t\t\t\t\t// NodeList objects\n\t\t\t\t\t( typeof obj.length === \"number\" && obj.item !== undefined &&\n\t\t\t\t\t( obj.length ? obj.item( 0 ) === obj[ 0 ] : ( obj.item( 0 ) === null &&\n\t\t\t\t\tobj[ 0 ] === undefined ) ) )\n\t\t\t\t) {\n\t\t\t\t\ttype = \"array\";\n\t\t\t\t} else if ( obj.constructor === Error.prototype.constructor ) {\n\t\t\t\t\ttype = \"error\";\n\t\t\t\t} else {\n\t\t\t\t\ttype = typeof obj;\n\t\t\t\t}\n\t\t\t\treturn type;\n\t\t\t},\n\n\t\t\tseparator: function() {\n\t\t\t\treturn this.multiline ? this.HTML ? \"<br />\" : \"\\n\" : this.HTML ? \"&#160;\" : \" \";\n\t\t\t},\n\n\t\t\t// Extra can be a number, shortcut for increasing-calling-decreasing\n\t\t\tindent: function( extra ) {\n\t\t\t\tif ( !this.multiline ) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t\tvar chr = this.indentChar;\n\t\t\t\tif ( this.HTML ) {\n\t\t\t\t\tchr = chr.replace( /\\t/g, \"   \" ).replace( / /g, \"&#160;\" );\n\t\t\t\t}\n\t\t\t\treturn new Array( this.depth + ( extra || 0 ) ).join( chr );\n\t\t\t},\n\t\t\tup: function( a ) {\n\t\t\t\tthis.depth += a || 1;\n\t\t\t},\n\t\t\tdown: function( a ) {\n\t\t\t\tthis.depth -= a || 1;\n\t\t\t},\n\t\t\tsetParser: function( name, parser ) {\n\t\t\t\tthis.parsers[ name ] = parser;\n\t\t\t},\n\n\t\t\t// The next 3 are exposed so you can use them\n\t\t\tquote: quote,\n\t\t\tliteral: literal,\n\t\t\tjoin: join,\n\t\t\tdepth: 1,\n\t\t\tmaxDepth: QUnit.config.maxDepth,\n\n\t\t\t// This is the list of parsers, to modify them, use dump.setParser\n\t\t\tparsers: {\n\t\t\t\twindow: \"[Window]\",\n\t\t\t\tdocument: \"[Document]\",\n\t\t\t\terror: function( error ) {\n\t\t\t\t\treturn \"Error(\\\"\" + error.message + \"\\\")\";\n\t\t\t\t},\n\t\t\t\tunknown: \"[Unknown]\",\n\t\t\t\t\"null\": \"null\",\n\t\t\t\t\"undefined\": \"undefined\",\n\t\t\t\t\"function\": function( fn ) {\n\t\t\t\t\tvar ret = \"function\",\n\n\t\t\t\t\t\t// Functions never have name in IE\n\t\t\t\t\t\tname = \"name\" in fn ? fn.name : ( reName.exec( fn ) || [] )[ 1 ];\n\n\t\t\t\t\tif ( name ) {\n\t\t\t\t\t\tret += \" \" + name;\n\t\t\t\t\t}\n\t\t\t\t\tret += \"(\";\n\n\t\t\t\t\tret = [ ret, dump.parse( fn, \"functionArgs\" ), \"){\" ].join( \"\" );\n\t\t\t\t\treturn join( ret, dump.parse( fn, \"functionCode\" ), \"}\" );\n\t\t\t\t},\n\t\t\t\tarray: array,\n\t\t\t\tnodelist: array,\n\t\t\t\t\"arguments\": array,\n\t\t\t\tobject: function( map, stack ) {\n\t\t\t\t\tvar keys, key, val, i, nonEnumerableProperties,\n\t\t\t\t\t\tret = [];\n\n\t\t\t\t\tif ( dump.maxDepth && dump.depth > dump.maxDepth ) {\n\t\t\t\t\t\treturn \"[object Object]\";\n\t\t\t\t\t}\n\n\t\t\t\t\tdump.up();\n\t\t\t\t\tkeys = [];\n\t\t\t\t\tfor ( key in map ) {\n\t\t\t\t\t\tkeys.push( key );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Some properties are not always enumerable on Error objects.\n\t\t\t\t\tnonEnumerableProperties = [ \"message\", \"name\" ];\n\t\t\t\t\tfor ( i in nonEnumerableProperties ) {\n\t\t\t\t\t\tkey = nonEnumerableProperties[ i ];\n\t\t\t\t\t\tif ( key in map && inArray( key, keys ) < 0 ) {\n\t\t\t\t\t\t\tkeys.push( key );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tkeys.sort();\n\t\t\t\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t\t\t\tkey = keys[ i ];\n\t\t\t\t\t\tval = map[ key ];\n\t\t\t\t\t\tret.push( dump.parse( key, \"key\" ) + \": \" +\n\t\t\t\t\t\t\tdump.parse( val, undefined, stack ) );\n\t\t\t\t\t}\n\t\t\t\t\tdump.down();\n\t\t\t\t\treturn join( \"{\", ret, \"}\" );\n\t\t\t\t},\n\t\t\t\tnode: function( node ) {\n\t\t\t\t\tvar len, i, val,\n\t\t\t\t\t\topen = dump.HTML ? \"&lt;\" : \"<\",\n\t\t\t\t\t\tclose = dump.HTML ? \"&gt;\" : \">\",\n\t\t\t\t\t\ttag = node.nodeName.toLowerCase(),\n\t\t\t\t\t\tret = open + tag,\n\t\t\t\t\t\tattrs = node.attributes;\n\n\t\t\t\t\tif ( attrs ) {\n\t\t\t\t\t\tfor ( i = 0, len = attrs.length; i < len; i++ ) {\n\t\t\t\t\t\t\tval = attrs[ i ].nodeValue;\n\n\t\t\t\t\t\t\t// IE6 includes all attributes in .attributes, even ones not explicitly\n\t\t\t\t\t\t\t// set. Those have values like undefined, null, 0, false, \"\" or\n\t\t\t\t\t\t\t// \"inherit\".\n\t\t\t\t\t\t\tif ( val && val !== \"inherit\" ) {\n\t\t\t\t\t\t\t\tret += \" \" + attrs[ i ].nodeName + \"=\" +\n\t\t\t\t\t\t\t\t\tdump.parse( val, \"attribute\" );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tret += close;\n\n\t\t\t\t\t// Show content of TextNode or CDATASection\n\t\t\t\t\tif ( node.nodeType === 3 || node.nodeType === 4 ) {\n\t\t\t\t\t\tret += node.nodeValue;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret + open + \"/\" + tag + close;\n\t\t\t\t},\n\n\t\t\t\t// Function calls it internally, it's the arguments part of the function\n\t\t\t\tfunctionArgs: function( fn ) {\n\t\t\t\t\tvar args,\n\t\t\t\t\t\tl = fn.length;\n\n\t\t\t\t\tif ( !l ) {\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t}\n\n\t\t\t\t\targs = new Array( l );\n\t\t\t\t\twhile ( l-- ) {\n\n\t\t\t\t\t\t// 97 is 'a'\n\t\t\t\t\t\targs[ l ] = String.fromCharCode( 97 + l );\n\t\t\t\t\t}\n\t\t\t\t\treturn \" \" + args.join( \", \" ) + \" \";\n\t\t\t\t},\n\n\t\t\t\t// Object calls it internally, the key part of an item in a map\n\t\t\t\tkey: quote,\n\n\t\t\t\t// Function calls it internally, it's the content of the function\n\t\t\t\tfunctionCode: \"[code]\",\n\n\t\t\t\t// Node calls it internally, it's a html attribute value\n\t\t\t\tattribute: quote,\n\t\t\t\tstring: quote,\n\t\t\t\tdate: quote,\n\t\t\t\tregexp: literal,\n\t\t\t\tnumber: literal,\n\t\t\t\t\"boolean\": literal\n\t\t\t},\n\n\t\t\t// If true, entities are escaped ( <, >, \\t, space and \\n )\n\t\t\tHTML: false,\n\n\t\t\t// Indentation unit\n\t\t\tindentChar: \"  \",\n\n\t\t\t// If true, items in a collection, are separated by a \\n, else just a space.\n\t\t\tmultiline: true\n\t\t};\n\n\treturn dump;\n}() );\n\n// Back compat\nQUnit.jsDump = QUnit.dump;\n\n// Deprecated\n// Extend assert methods to QUnit for Backwards compatibility\n( function() {\n\tvar i,\n\t\tassertions = Assert.prototype;\n\n\tfunction applyCurrent( current ) {\n\t\treturn function() {\n\t\t\tvar assert = new Assert( QUnit.config.current );\n\t\t\tcurrent.apply( assert, arguments );\n\t\t};\n\t}\n\n\tfor ( i in assertions ) {\n\t\tQUnit[ i ] = applyCurrent( assertions[ i ] );\n\t}\n}() );\n\n// For browser, export only select globals\nif ( defined.document ) {\n\n\t( function() {\n\t\tvar i, l,\n\t\t\tkeys = [\n\t\t\t\t\"test\",\n\t\t\t\t\"module\",\n\t\t\t\t\"expect\",\n\t\t\t\t\"asyncTest\",\n\t\t\t\t\"start\",\n\t\t\t\t\"stop\",\n\t\t\t\t\"ok\",\n\t\t\t\t\"notOk\",\n\t\t\t\t\"equal\",\n\t\t\t\t\"notEqual\",\n\t\t\t\t\"propEqual\",\n\t\t\t\t\"notPropEqual\",\n\t\t\t\t\"deepEqual\",\n\t\t\t\t\"notDeepEqual\",\n\t\t\t\t\"strictEqual\",\n\t\t\t\t\"notStrictEqual\",\n\t\t\t\t\"throws\",\n\t\t\t\t\"raises\"\n\t\t\t];\n\n\t\tfor ( i = 0, l = keys.length; i < l; i++ ) {\n\t\t\twindow[ keys[ i ] ] = QUnit[ keys[ i ] ];\n\t\t}\n\t}() );\n\n\twindow.QUnit = QUnit;\n}\n\n// For nodejs\nif ( typeof module !== \"undefined\" && module && module.exports ) {\n\tmodule.exports = QUnit;\n\n\t// For consistency with CommonJS environments' exports\n\tmodule.exports.QUnit = QUnit;\n}\n\n// For CommonJS with exports, but without module.exports, like Rhino\nif ( typeof exports !== \"undefined\" && exports ) {\n\texports.QUnit = QUnit;\n}\n\nif ( typeof define === \"function\" && define.amd ) {\n\tdefine( function() {\n\t\treturn QUnit;\n\t} );\n\tQUnit.config.autostart = false;\n}\n\n// Get a reference to the global object, like window in browsers\n}( ( function() {\n\treturn this;\n}() ) ) );\n\n( function() {\n\n// Only interact with URLs via window.location\nvar location = typeof window !== \"undefined\" && window.location;\nif ( !location ) {\n\treturn;\n}\n\nvar urlParams = getUrlParams();\n\nQUnit.urlParams = urlParams;\n\n// Match module/test by inclusion in an array\nQUnit.config.moduleId = [].concat( urlParams.moduleId || [] );\nQUnit.config.testId = [].concat( urlParams.testId || [] );\n\n// Exact case-insensitive match of the module name\nQUnit.config.module = urlParams.module;\n\n// Regular expression or case-insenstive substring match against \"moduleName: testName\"\nQUnit.config.filter = urlParams.filter;\n\n// Test order randomization\nif ( urlParams.seed === true ) {\n\n\t// Generate a random seed if the option is specified without a value\n\tQUnit.config.seed = Math.random().toString( 36 ).slice( 2 );\n} else if ( urlParams.seed ) {\n\tQUnit.config.seed = urlParams.seed;\n}\n\n// Add URL-parameter-mapped config values with UI form rendering data\nQUnit.config.urlConfig.push(\n\t{\n\t\tid: \"hidepassed\",\n\t\tlabel: \"Hide passed tests\",\n\t\ttooltip: \"Only show tests and assertions that fail. Stored as query-strings.\"\n\t},\n\t{\n\t\tid: \"noglobals\",\n\t\tlabel: \"Check for Globals\",\n\t\ttooltip: \"Enabling this will test if any test introduces new properties on the \" +\n\t\t\t\"global object (`window` in Browsers). Stored as query-strings.\"\n\t},\n\t{\n\t\tid: \"notrycatch\",\n\t\tlabel: \"No try-catch\",\n\t\ttooltip: \"Enabling this will run tests outside of a try-catch block. Makes debugging \" +\n\t\t\t\"exceptions in IE reasonable. Stored as query-strings.\"\n\t}\n);\n\nQUnit.begin( function() {\n\tvar i, option,\n\t\turlConfig = QUnit.config.urlConfig;\n\n\tfor ( i = 0; i < urlConfig.length; i++ ) {\n\n\t\t// Options can be either strings or objects with nonempty \"id\" properties\n\t\toption = QUnit.config.urlConfig[ i ];\n\t\tif ( typeof option !== \"string\" ) {\n\t\t\toption = option.id;\n\t\t}\n\n\t\tif ( QUnit.config[ option ] === undefined ) {\n\t\t\tQUnit.config[ option ] = urlParams[ option ];\n\t\t}\n\t}\n} );\n\nfunction getUrlParams() {\n\tvar i, param, name, value;\n\tvar urlParams = {};\n\tvar params = location.search.slice( 1 ).split( \"&\" );\n\tvar length = params.length;\n\n\tfor ( i = 0; i < length; i++ ) {\n\t\tif ( params[ i ] ) {\n\t\t\tparam = params[ i ].split( \"=\" );\n\t\t\tname = decodeURIComponent( param[ 0 ] );\n\n\t\t\t// Allow just a key to turn on a flag, e.g., test.html?noglobals\n\t\t\tvalue = param.length === 1 ||\n\t\t\t\tdecodeURIComponent( param.slice( 1 ).join( \"=\" ) ) ;\n\t\t\tif ( urlParams[ name ] ) {\n\t\t\t\turlParams[ name ] = [].concat( urlParams[ name ], value );\n\t\t\t} else {\n\t\t\t\turlParams[ name ] = value;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn urlParams;\n}\n\n// Don't load the HTML Reporter on non-browser environments\nif ( typeof window === \"undefined\" || !window.document ) {\n\treturn;\n}\n\n// Deprecated QUnit.init - Ref #530\n// Re-initialize the configuration options\nQUnit.init = function() {\n\tvar config = QUnit.config;\n\n\tconfig.stats = { all: 0, bad: 0 };\n\tconfig.moduleStats = { all: 0, bad: 0 };\n\tconfig.started = 0;\n\tconfig.updateRate = 1000;\n\tconfig.blocking = false;\n\tconfig.autostart = true;\n\tconfig.autorun = false;\n\tconfig.filter = \"\";\n\tconfig.queue = [];\n\n\tappendInterface();\n};\n\nvar config = QUnit.config,\n\tdocument = window.document,\n\tcollapseNext = false,\n\thasOwn = Object.prototype.hasOwnProperty,\n\tunfilteredUrl = setUrl( { filter: undefined, module: undefined,\n\t\tmoduleId: undefined, testId: undefined } ),\n\tdefined = {\n\t\tsessionStorage: ( function() {\n\t\t\tvar x = \"qunit-test-string\";\n\t\t\ttry {\n\t\t\t\tsessionStorage.setItem( x, x );\n\t\t\t\tsessionStorage.removeItem( x );\n\t\t\t\treturn true;\n\t\t\t} catch ( e ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}() )\n\t},\n\tmodulesList = [];\n\n/**\n* Escape text for attribute or text content.\n*/\nfunction escapeText( s ) {\n\tif ( !s ) {\n\t\treturn \"\";\n\t}\n\ts = s + \"\";\n\n\t// Both single quotes and double quotes (for attributes)\n\treturn s.replace( /['\"<>&]/g, function( s ) {\n\t\tswitch ( s ) {\n\t\tcase \"'\":\n\t\t\treturn \"&#039;\";\n\t\tcase \"\\\"\":\n\t\t\treturn \"&quot;\";\n\t\tcase \"<\":\n\t\t\treturn \"&lt;\";\n\t\tcase \">\":\n\t\t\treturn \"&gt;\";\n\t\tcase \"&\":\n\t\t\treturn \"&amp;\";\n\t\t}\n\t} );\n}\n\n/**\n * @param {HTMLElement} elem\n * @param {string} type\n * @param {Function} fn\n */\nfunction addEvent( elem, type, fn ) {\n\tif ( elem.addEventListener ) {\n\n\t\t// Standards-based browsers\n\t\telem.addEventListener( type, fn, false );\n\t} else if ( elem.attachEvent ) {\n\n\t\t// Support: IE <9\n\t\telem.attachEvent( \"on\" + type, function() {\n\t\t\tvar event = window.event;\n\t\t\tif ( !event.target ) {\n\t\t\t\tevent.target = event.srcElement || document;\n\t\t\t}\n\n\t\t\tfn.call( elem, event );\n\t\t} );\n\t}\n}\n\n/**\n * @param {Array|NodeList} elems\n * @param {string} type\n * @param {Function} fn\n */\nfunction addEvents( elems, type, fn ) {\n\tvar i = elems.length;\n\twhile ( i-- ) {\n\t\taddEvent( elems[ i ], type, fn );\n\t}\n}\n\nfunction hasClass( elem, name ) {\n\treturn ( \" \" + elem.className + \" \" ).indexOf( \" \" + name + \" \" ) >= 0;\n}\n\nfunction addClass( elem, name ) {\n\tif ( !hasClass( elem, name ) ) {\n\t\telem.className += ( elem.className ? \" \" : \"\" ) + name;\n\t}\n}\n\nfunction toggleClass( elem, name, force ) {\n\tif ( force || typeof force === \"undefined\" && !hasClass( elem, name ) ) {\n\t\taddClass( elem, name );\n\t} else {\n\t\tremoveClass( elem, name );\n\t}\n}\n\nfunction removeClass( elem, name ) {\n\tvar set = \" \" + elem.className + \" \";\n\n\t// Class name may appear multiple times\n\twhile ( set.indexOf( \" \" + name + \" \" ) >= 0 ) {\n\t\tset = set.replace( \" \" + name + \" \", \" \" );\n\t}\n\n\t// Trim for prettiness\n\telem.className = typeof set.trim === \"function\" ? set.trim() : set.replace( /^\\s+|\\s+$/g, \"\" );\n}\n\nfunction id( name ) {\n\treturn document.getElementById && document.getElementById( name );\n}\n\nfunction getUrlConfigHtml() {\n\tvar i, j, val,\n\t\tescaped, escapedTooltip,\n\t\tselection = false,\n\t\turlConfig = config.urlConfig,\n\t\turlConfigHtml = \"\";\n\n\tfor ( i = 0; i < urlConfig.length; i++ ) {\n\n\t\t// Options can be either strings or objects with nonempty \"id\" properties\n\t\tval = config.urlConfig[ i ];\n\t\tif ( typeof val === \"string\" ) {\n\t\t\tval = {\n\t\t\t\tid: val,\n\t\t\t\tlabel: val\n\t\t\t};\n\t\t}\n\n\t\tescaped = escapeText( val.id );\n\t\tescapedTooltip = escapeText( val.tooltip );\n\n\t\tif ( !val.value || typeof val.value === \"string\" ) {\n\t\t\turlConfigHtml += \"<input id='qunit-urlconfig-\" + escaped +\n\t\t\t\t\"' name='\" + escaped + \"' type='checkbox'\" +\n\t\t\t\t( val.value ? \" value='\" + escapeText( val.value ) + \"'\" : \"\" ) +\n\t\t\t\t( config[ val.id ] ? \" checked='checked'\" : \"\" ) +\n\t\t\t\t\" title='\" + escapedTooltip + \"' /><label for='qunit-urlconfig-\" + escaped +\n\t\t\t\t\"' title='\" + escapedTooltip + \"'>\" + val.label + \"</label>\";\n\t\t} else {\n\t\t\turlConfigHtml += \"<label for='qunit-urlconfig-\" + escaped +\n\t\t\t\t\"' title='\" + escapedTooltip + \"'>\" + val.label +\n\t\t\t\t\": </label><select id='qunit-urlconfig-\" + escaped +\n\t\t\t\t\"' name='\" + escaped + \"' title='\" + escapedTooltip + \"'><option></option>\";\n\n\t\t\tif ( QUnit.is( \"array\", val.value ) ) {\n\t\t\t\tfor ( j = 0; j < val.value.length; j++ ) {\n\t\t\t\t\tescaped = escapeText( val.value[ j ] );\n\t\t\t\t\turlConfigHtml += \"<option value='\" + escaped + \"'\" +\n\t\t\t\t\t\t( config[ val.id ] === val.value[ j ] ?\n\t\t\t\t\t\t\t( selection = true ) && \" selected='selected'\" : \"\" ) +\n\t\t\t\t\t\t\">\" + escaped + \"</option>\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( j in val.value ) {\n\t\t\t\t\tif ( hasOwn.call( val.value, j ) ) {\n\t\t\t\t\t\turlConfigHtml += \"<option value='\" + escapeText( j ) + \"'\" +\n\t\t\t\t\t\t\t( config[ val.id ] === j ?\n\t\t\t\t\t\t\t\t( selection = true ) && \" selected='selected'\" : \"\" ) +\n\t\t\t\t\t\t\t\">\" + escapeText( val.value[ j ] ) + \"</option>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( config[ val.id ] && !selection ) {\n\t\t\t\tescaped = escapeText( config[ val.id ] );\n\t\t\t\turlConfigHtml += \"<option value='\" + escaped +\n\t\t\t\t\t\"' selected='selected' disabled='disabled'>\" + escaped + \"</option>\";\n\t\t\t}\n\t\t\turlConfigHtml += \"</select>\";\n\t\t}\n\t}\n\n\treturn urlConfigHtml;\n}\n\n// Handle \"click\" events on toolbar checkboxes and \"change\" for select menus.\n// Updates the URL with the new state of `config.urlConfig` values.\nfunction toolbarChanged() {\n\tvar updatedUrl, value, tests,\n\t\tfield = this,\n\t\tparams = {};\n\n\t// Detect if field is a select menu or a checkbox\n\tif ( \"selectedIndex\" in field ) {\n\t\tvalue = field.options[ field.selectedIndex ].value || undefined;\n\t} else {\n\t\tvalue = field.checked ? ( field.defaultValue || true ) : undefined;\n\t}\n\n\tparams[ field.name ] = value;\n\tupdatedUrl = setUrl( params );\n\n\t// Check if we can apply the change without a page refresh\n\tif ( \"hidepassed\" === field.name && \"replaceState\" in window.history ) {\n\t\tQUnit.urlParams[ field.name ] = value;\n\t\tconfig[ field.name ] = value || false;\n\t\ttests = id( \"qunit-tests\" );\n\t\tif ( tests ) {\n\t\t\ttoggleClass( tests, \"hidepass\", value || false );\n\t\t}\n\t\twindow.history.replaceState( null, \"\", updatedUrl );\n\t} else {\n\t\twindow.location = updatedUrl;\n\t}\n}\n\nfunction setUrl( params ) {\n\tvar key, arrValue, i,\n\t\tquerystring = \"?\",\n\t\tlocation = window.location;\n\n\tparams = QUnit.extend( QUnit.extend( {}, QUnit.urlParams ), params );\n\n\tfor ( key in params ) {\n\n\t\t// Skip inherited or undefined properties\n\t\tif ( hasOwn.call( params, key ) && params[ key ] !== undefined ) {\n\n\t\t\t// Output a parameter for each value of this key (but usually just one)\n\t\t\tarrValue = [].concat( params[ key ] );\n\t\t\tfor ( i = 0; i < arrValue.length; i++ ) {\n\t\t\t\tquerystring += encodeURIComponent( key );\n\t\t\t\tif ( arrValue[ i ] !== true ) {\n\t\t\t\t\tquerystring += \"=\" + encodeURIComponent( arrValue[ i ] );\n\t\t\t\t}\n\t\t\t\tquerystring += \"&\";\n\t\t\t}\n\t\t}\n\t}\n\treturn location.protocol + \"//\" + location.host +\n\t\tlocation.pathname + querystring.slice( 0, -1 );\n}\n\nfunction applyUrlParams() {\n\tvar selectedModule,\n\t\tmodulesList = id( \"qunit-modulefilter\" ),\n\t\tfilter = id( \"qunit-filter-input\" ).value;\n\n\tselectedModule = modulesList ?\n\t\tdecodeURIComponent( modulesList.options[ modulesList.selectedIndex ].value ) :\n\t\tundefined;\n\n\twindow.location = setUrl( {\n\t\tmodule: ( selectedModule === \"\" ) ? undefined : selectedModule,\n\t\tfilter: ( filter === \"\" ) ? undefined : filter,\n\n\t\t// Remove moduleId and testId filters\n\t\tmoduleId: undefined,\n\t\ttestId: undefined\n\t} );\n}\n\nfunction toolbarUrlConfigContainer() {\n\tvar urlConfigContainer = document.createElement( \"span\" );\n\n\turlConfigContainer.innerHTML = getUrlConfigHtml();\n\taddClass( urlConfigContainer, \"qunit-url-config\" );\n\n\t// For oldIE support:\n\t// * Add handlers to the individual elements instead of the container\n\t// * Use \"click\" instead of \"change\" for checkboxes\n\taddEvents( urlConfigContainer.getElementsByTagName( \"input\" ), \"click\", toolbarChanged );\n\taddEvents( urlConfigContainer.getElementsByTagName( \"select\" ), \"change\", toolbarChanged );\n\n\treturn urlConfigContainer;\n}\n\nfunction toolbarLooseFilter() {\n\tvar filter = document.createElement( \"form\" ),\n\t\tlabel = document.createElement( \"label\" ),\n\t\tinput = document.createElement( \"input\" ),\n\t\tbutton = document.createElement( \"button\" );\n\n\taddClass( filter, \"qunit-filter\" );\n\n\tlabel.innerHTML = \"Filter: \";\n\n\tinput.type = \"text\";\n\tinput.value = config.filter || \"\";\n\tinput.name = \"filter\";\n\tinput.id = \"qunit-filter-input\";\n\n\tbutton.innerHTML = \"Go\";\n\n\tlabel.appendChild( input );\n\n\tfilter.appendChild( label );\n\tfilter.appendChild( button );\n\taddEvent( filter, \"submit\", function( ev ) {\n\t\tapplyUrlParams();\n\n\t\tif ( ev && ev.preventDefault ) {\n\t\t\tev.preventDefault();\n\t\t}\n\n\t\treturn false;\n\t} );\n\n\treturn filter;\n}\n\nfunction toolbarModuleFilterHtml() {\n\tvar i,\n\t\tmoduleFilterHtml = \"\";\n\n\tif ( !modulesList.length ) {\n\t\treturn false;\n\t}\n\n\tmoduleFilterHtml += \"<label for='qunit-modulefilter'>Module: </label>\" +\n\t\t\"<select id='qunit-modulefilter' name='modulefilter'><option value='' \" +\n\t\t( QUnit.urlParams.module === undefined ? \"selected='selected'\" : \"\" ) +\n\t\t\">< All Modules ></option>\";\n\n\tfor ( i = 0; i < modulesList.length; i++ ) {\n\t\tmoduleFilterHtml += \"<option value='\" +\n\t\t\tescapeText( encodeURIComponent( modulesList[ i ] ) ) + \"' \" +\n\t\t\t( QUnit.urlParams.module === modulesList[ i ] ? \"selected='selected'\" : \"\" ) +\n\t\t\t\">\" + escapeText( modulesList[ i ] ) + \"</option>\";\n\t}\n\tmoduleFilterHtml += \"</select>\";\n\n\treturn moduleFilterHtml;\n}\n\nfunction toolbarModuleFilter() {\n\tvar toolbar = id( \"qunit-testrunner-toolbar\" ),\n\t\tmoduleFilter = document.createElement( \"span\" ),\n\t\tmoduleFilterHtml = toolbarModuleFilterHtml();\n\n\tif ( !toolbar || !moduleFilterHtml ) {\n\t\treturn false;\n\t}\n\n\tmoduleFilter.setAttribute( \"id\", \"qunit-modulefilter-container\" );\n\tmoduleFilter.innerHTML = moduleFilterHtml;\n\n\taddEvent( moduleFilter.lastChild, \"change\", applyUrlParams );\n\n\ttoolbar.appendChild( moduleFilter );\n}\n\nfunction appendToolbar() {\n\tvar toolbar = id( \"qunit-testrunner-toolbar\" );\n\n\tif ( toolbar ) {\n\t\ttoolbar.appendChild( toolbarUrlConfigContainer() );\n\t\ttoolbar.appendChild( toolbarLooseFilter() );\n\t\ttoolbarModuleFilter();\n\t}\n}\n\nfunction appendHeader() {\n\tvar header = id( \"qunit-header\" );\n\n\tif ( header ) {\n\t\theader.innerHTML = \"<a href='\" + escapeText( unfilteredUrl ) + \"'>\" + header.innerHTML +\n\t\t\t\"</a> \";\n\t}\n}\n\nfunction appendBanner() {\n\tvar banner = id( \"qunit-banner\" );\n\n\tif ( banner ) {\n\t\tbanner.className = \"\";\n\t}\n}\n\nfunction appendTestResults() {\n\tvar tests = id( \"qunit-tests\" ),\n\t\tresult = id( \"qunit-testresult\" );\n\n\tif ( result ) {\n\t\tresult.parentNode.removeChild( result );\n\t}\n\n\tif ( tests ) {\n\t\ttests.innerHTML = \"\";\n\t\tresult = document.createElement( \"p\" );\n\t\tresult.id = \"qunit-testresult\";\n\t\tresult.className = \"result\";\n\t\ttests.parentNode.insertBefore( result, tests );\n\t\tresult.innerHTML = \"Running...<br />&#160;\";\n\t}\n}\n\nfunction storeFixture() {\n\tvar fixture = id( \"qunit-fixture\" );\n\tif ( fixture ) {\n\t\tconfig.fixture = fixture.innerHTML;\n\t}\n}\n\nfunction appendFilteredTest() {\n\tvar testId = QUnit.config.testId;\n\tif ( !testId || testId.length <= 0 ) {\n\t\treturn \"\";\n\t}\n\treturn \"<div id='qunit-filteredTest'>Rerunning selected tests: \" +\n\t\tescapeText( testId.join( \", \" ) ) +\n\t\t\" <a id='qunit-clearFilter' href='\" +\n\t\tescapeText( unfilteredUrl ) +\n\t\t\"'>Run all tests</a></div>\";\n}\n\nfunction appendUserAgent() {\n\tvar userAgent = id( \"qunit-userAgent\" );\n\n\tif ( userAgent ) {\n\t\tuserAgent.innerHTML = \"\";\n\t\tuserAgent.appendChild(\n\t\t\tdocument.createTextNode(\n\t\t\t\t\"QUnit \" + QUnit.version + \"; \" + navigator.userAgent\n\t\t\t)\n\t\t);\n\t}\n}\n\nfunction appendInterface() {\n\tvar qunit = id( \"qunit\" );\n\n\tif ( qunit ) {\n\t\tqunit.innerHTML =\n\t\t\t\"<h1 id='qunit-header'>\" + escapeText( document.title ) + \"</h1>\" +\n\t\t\t\"<h2 id='qunit-banner'></h2>\" +\n\t\t\t\"<div id='qunit-testrunner-toolbar'></div>\" +\n\t\t\tappendFilteredTest() +\n\t\t\t\"<h2 id='qunit-userAgent'></h2>\" +\n\t\t\t\"<ol id='qunit-tests'></ol>\";\n\t}\n\n\tappendHeader();\n\tappendBanner();\n\tappendTestResults();\n\tappendUserAgent();\n\tappendToolbar();\n}\n\nfunction appendTestsList( modules ) {\n\tvar i, l, x, z, test, moduleObj;\n\n\tfor ( i = 0, l = modules.length; i < l; i++ ) {\n\t\tmoduleObj = modules[ i ];\n\n\t\tfor ( x = 0, z = moduleObj.tests.length; x < z; x++ ) {\n\t\t\ttest = moduleObj.tests[ x ];\n\n\t\t\tappendTest( test.name, test.testId, moduleObj.name );\n\t\t}\n\t}\n}\n\nfunction appendTest( name, testId, moduleName ) {\n\tvar title, rerunTrigger, testBlock, assertList,\n\t\ttests = id( \"qunit-tests\" );\n\n\tif ( !tests ) {\n\t\treturn;\n\t}\n\n\ttitle = document.createElement( \"strong\" );\n\ttitle.innerHTML = getNameHtml( name, moduleName );\n\n\trerunTrigger = document.createElement( \"a\" );\n\trerunTrigger.innerHTML = \"Rerun\";\n\trerunTrigger.href = setUrl( { testId: testId } );\n\n\ttestBlock = document.createElement( \"li\" );\n\ttestBlock.appendChild( title );\n\ttestBlock.appendChild( rerunTrigger );\n\ttestBlock.id = \"qunit-test-output-\" + testId;\n\n\tassertList = document.createElement( \"ol\" );\n\tassertList.className = \"qunit-assert-list\";\n\n\ttestBlock.appendChild( assertList );\n\n\ttests.appendChild( testBlock );\n}\n\n// HTML Reporter initialization and load\nQUnit.begin( function( details ) {\n\tvar i, moduleObj, tests;\n\n\t// Sort modules by name for the picker\n\tfor ( i = 0; i < details.modules.length; i++ ) {\n\t\tmoduleObj = details.modules[ i ];\n\t\tif ( moduleObj.name ) {\n\t\t\tmodulesList.push( moduleObj.name );\n\t\t}\n\t}\n\tmodulesList.sort( function( a, b ) {\n\t\treturn a.localeCompare( b );\n\t} );\n\n\t// Capture fixture HTML from the page\n\tstoreFixture();\n\n\t// Initialize QUnit elements\n\tappendInterface();\n\tappendTestsList( details.modules );\n\ttests = id( \"qunit-tests\" );\n\tif ( tests && config.hidepassed ) {\n\t\taddClass( tests, \"hidepass\" );\n\t}\n} );\n\nQUnit.done( function( details ) {\n\tvar i, key,\n\t\tbanner = id( \"qunit-banner\" ),\n\t\ttests = id( \"qunit-tests\" ),\n\t\thtml = [\n\t\t\t\"Tests completed in \",\n\t\t\tdetails.runtime,\n\t\t\t\" milliseconds.<br />\",\n\t\t\t\"<span class='passed'>\",\n\t\t\tdetails.passed,\n\t\t\t\"</span> assertions of <span class='total'>\",\n\t\t\tdetails.total,\n\t\t\t\"</span> passed, <span class='failed'>\",\n\t\t\tdetails.failed,\n\t\t\t\"</span> failed.\"\n\t\t].join( \"\" );\n\n\tif ( banner ) {\n\t\tbanner.className = details.failed ? \"qunit-fail\" : \"qunit-pass\";\n\t}\n\n\tif ( tests ) {\n\t\tid( \"qunit-testresult\" ).innerHTML = html;\n\t}\n\n\tif ( config.altertitle && document.title ) {\n\n\t\t// Show ✖ for good, ✔ for bad suite result in title\n\t\t// use escape sequences in case file gets loaded with non-utf-8-charset\n\t\tdocument.title = [\n\t\t\t( details.failed ? \"\\u2716\" : \"\\u2714\" ),\n\t\t\tdocument.title.replace( /^[\\u2714\\u2716] /i, \"\" )\n\t\t].join( \" \" );\n\t}\n\n\t// Clear own sessionStorage items if all tests passed\n\tif ( config.reorder && defined.sessionStorage && details.failed === 0 ) {\n\t\tfor ( i = 0; i < sessionStorage.length; i++ ) {\n\t\t\tkey = sessionStorage.key( i++ );\n\t\t\tif ( key.indexOf( \"qunit-test-\" ) === 0 ) {\n\t\t\t\tsessionStorage.removeItem( key );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Scroll back to top to show results\n\tif ( config.scrolltop && window.scrollTo ) {\n\t\twindow.scrollTo( 0, 0 );\n\t}\n} );\n\nfunction getNameHtml( name, module ) {\n\tvar nameHtml = \"\";\n\n\tif ( module ) {\n\t\tnameHtml = \"<span class='module-name'>\" + escapeText( module ) + \"</span>: \";\n\t}\n\n\tnameHtml += \"<span class='test-name'>\" + escapeText( name ) + \"</span>\";\n\n\treturn nameHtml;\n}\n\nQUnit.testStart( function( details ) {\n\tvar running, testBlock, bad;\n\n\ttestBlock = id( \"qunit-test-output-\" + details.testId );\n\tif ( testBlock ) {\n\t\ttestBlock.className = \"running\";\n\t} else {\n\n\t\t// Report later registered tests\n\t\tappendTest( details.name, details.testId, details.module );\n\t}\n\n\trunning = id( \"qunit-testresult\" );\n\tif ( running ) {\n\t\tbad = QUnit.config.reorder && defined.sessionStorage &&\n\t\t\t+sessionStorage.getItem( \"qunit-test-\" + details.module + \"-\" + details.name );\n\n\t\trunning.innerHTML = ( bad ?\n\t\t\t\"Rerunning previously failed test: <br />\" :\n\t\t\t\"Running: <br />\" ) +\n\t\t\tgetNameHtml( details.name, details.module );\n\t}\n\n} );\n\nfunction stripHtml( string ) {\n\n\t// Strip tags, html entity and whitespaces\n\treturn string.replace( /<\\/?[^>]+(>|$)/g, \"\" ).replace( /\\&quot;/g, \"\" ).replace( /\\s+/g, \"\" );\n}\n\nQUnit.log( function( details ) {\n\tvar assertList, assertLi,\n\t\tmessage, expected, actual, diff,\n\t\tshowDiff = false,\n\t\ttestItem = id( \"qunit-test-output-\" + details.testId );\n\n\tif ( !testItem ) {\n\t\treturn;\n\t}\n\n\tmessage = escapeText( details.message ) || ( details.result ? \"okay\" : \"failed\" );\n\tmessage = \"<span class='test-message'>\" + message + \"</span>\";\n\tmessage += \"<span class='runtime'>@ \" + details.runtime + \" ms</span>\";\n\n\t// The pushFailure doesn't provide details.expected\n\t// when it calls, it's implicit to also not show expected and diff stuff\n\t// Also, we need to check details.expected existence, as it can exist and be undefined\n\tif ( !details.result && hasOwn.call( details, \"expected\" ) ) {\n\t\tif ( details.negative ) {\n\t\t\texpected = \"NOT \" + QUnit.dump.parse( details.expected );\n\t\t} else {\n\t\t\texpected = QUnit.dump.parse( details.expected );\n\t\t}\n\n\t\tactual = QUnit.dump.parse( details.actual );\n\t\tmessage += \"<table><tr class='test-expected'><th>Expected: </th><td><pre>\" +\n\t\t\tescapeText( expected ) +\n\t\t\t\"</pre></td></tr>\";\n\n\t\tif ( actual !== expected ) {\n\n\t\t\tmessage += \"<tr class='test-actual'><th>Result: </th><td><pre>\" +\n\t\t\t\tescapeText( actual ) + \"</pre></td></tr>\";\n\n\t\t\t// Don't show diff if actual or expected are booleans\n\t\t\tif ( !( /^(true|false)$/.test( actual ) ) &&\n\t\t\t\t\t!( /^(true|false)$/.test( expected ) ) ) {\n\t\t\t\tdiff = QUnit.diff( expected, actual );\n\t\t\t\tshowDiff = stripHtml( diff ).length !==\n\t\t\t\t\tstripHtml( expected ).length +\n\t\t\t\t\tstripHtml( actual ).length;\n\t\t\t}\n\n\t\t\t// Don't show diff if expected and actual are totally different\n\t\t\tif ( showDiff ) {\n\t\t\t\tmessage += \"<tr class='test-diff'><th>Diff: </th><td><pre>\" +\n\t\t\t\t\tdiff + \"</pre></td></tr>\";\n\t\t\t}\n\t\t} else if ( expected.indexOf( \"[object Array]\" ) !== -1 ||\n\t\t\t\texpected.indexOf( \"[object Object]\" ) !== -1 ) {\n\t\t\tmessage += \"<tr class='test-message'><th>Message: </th><td>\" +\n\t\t\t\t\"Diff suppressed as the depth of object is more than current max depth (\" +\n\t\t\t\tQUnit.config.maxDepth + \").<p>Hint: Use <code>QUnit.dump.maxDepth</code> to \" +\n\t\t\t\t\" run with a higher max depth or <a href='\" +\n\t\t\t\tescapeText( setUrl( { maxDepth: -1 } ) ) + \"'>\" +\n\t\t\t\t\"Rerun</a> without max depth.</p></td></tr>\";\n\t\t} else {\n\t\t\tmessage += \"<tr class='test-message'><th>Message: </th><td>\" +\n\t\t\t\t\"Diff suppressed as the expected and actual results have an equivalent\" +\n\t\t\t\t\" serialization</td></tr>\";\n\t\t}\n\n\t\tif ( details.source ) {\n\t\t\tmessage += \"<tr class='test-source'><th>Source: </th><td><pre>\" +\n\t\t\t\tescapeText( details.source ) + \"</pre></td></tr>\";\n\t\t}\n\n\t\tmessage += \"</table>\";\n\n\t// This occurs when pushFailure is set and we have an extracted stack trace\n\t} else if ( !details.result && details.source ) {\n\t\tmessage += \"<table>\" +\n\t\t\t\"<tr class='test-source'><th>Source: </th><td><pre>\" +\n\t\t\tescapeText( details.source ) + \"</pre></td></tr>\" +\n\t\t\t\"</table>\";\n\t}\n\n\tassertList = testItem.getElementsByTagName( \"ol\" )[ 0 ];\n\n\tassertLi = document.createElement( \"li\" );\n\tassertLi.className = details.result ? \"pass\" : \"fail\";\n\tassertLi.innerHTML = message;\n\tassertList.appendChild( assertLi );\n} );\n\nQUnit.testDone( function( details ) {\n\tvar testTitle, time, testItem, assertList,\n\t\tgood, bad, testCounts, skipped, sourceName,\n\t\ttests = id( \"qunit-tests\" );\n\n\tif ( !tests ) {\n\t\treturn;\n\t}\n\n\ttestItem = id( \"qunit-test-output-\" + details.testId );\n\n\tassertList = testItem.getElementsByTagName( \"ol\" )[ 0 ];\n\n\tgood = details.passed;\n\tbad = details.failed;\n\n\t// Store result when possible\n\tif ( config.reorder && defined.sessionStorage ) {\n\t\tif ( bad ) {\n\t\t\tsessionStorage.setItem( \"qunit-test-\" + details.module + \"-\" + details.name, bad );\n\t\t} else {\n\t\t\tsessionStorage.removeItem( \"qunit-test-\" + details.module + \"-\" + details.name );\n\t\t}\n\t}\n\n\tif ( bad === 0 ) {\n\n\t\t// Collapse the passing tests\n\t\taddClass( assertList, \"qunit-collapsed\" );\n\t} else if ( bad && config.collapse && !collapseNext ) {\n\n\t\t// Skip collapsing the first failing test\n\t\tcollapseNext = true;\n\t} else {\n\n\t\t// Collapse remaining tests\n\t\taddClass( assertList, \"qunit-collapsed\" );\n\t}\n\n\t// The testItem.firstChild is the test name\n\ttestTitle = testItem.firstChild;\n\n\ttestCounts = bad ?\n\t\t\"<b class='failed'>\" + bad + \"</b>, \" + \"<b class='passed'>\" + good + \"</b>, \" :\n\t\t\"\";\n\n\ttestTitle.innerHTML += \" <b class='counts'>(\" + testCounts +\n\t\tdetails.assertions.length + \")</b>\";\n\n\tif ( details.skipped ) {\n\t\ttestItem.className = \"skipped\";\n\t\tskipped = document.createElement( \"em\" );\n\t\tskipped.className = \"qunit-skipped-label\";\n\t\tskipped.innerHTML = \"skipped\";\n\t\ttestItem.insertBefore( skipped, testTitle );\n\t} else {\n\t\taddEvent( testTitle, \"click\", function() {\n\t\t\ttoggleClass( assertList, \"qunit-collapsed\" );\n\t\t} );\n\n\t\ttestItem.className = bad ? \"fail\" : \"pass\";\n\n\t\ttime = document.createElement( \"span\" );\n\t\ttime.className = \"runtime\";\n\t\ttime.innerHTML = details.runtime + \" ms\";\n\t\ttestItem.insertBefore( time, assertList );\n\t}\n\n\t// Show the source of the test when showing assertions\n\tif ( details.source ) {\n\t\tsourceName = document.createElement( \"p\" );\n\t\tsourceName.innerHTML = \"<strong>Source: </strong>\" + details.source;\n\t\taddClass( sourceName, \"qunit-source\" );\n\t\tif ( bad === 0 ) {\n\t\t\taddClass( sourceName, \"qunit-collapsed\" );\n\t\t}\n\t\taddEvent( testTitle, \"click\", function() {\n\t\t\ttoggleClass( sourceName, \"qunit-collapsed\" );\n\t\t} );\n\t\ttestItem.appendChild( sourceName );\n\t}\n} );\n\n// Avoid readyState issue with phantomjs\n// Ref: #818\nvar notPhantom = ( function( p ) {\n\treturn !( p && p.version && p.version.major > 0 );\n} )( window.phantom );\n\nif ( notPhantom && document.readyState === \"complete\" ) {\n\tQUnit.load();\n} else {\n\taddEvent( window, \"load\", QUnit.load );\n}\n\n/*\n * This file is a modified version of google-diff-match-patch's JavaScript implementation\n * (https://code.google.com/p/google-diff-match-patch/source/browse/trunk/javascript/diff_match_patch_uncompressed.js),\n * modifications are licensed as more fully set forth in LICENSE.txt.\n *\n * The original source of google-diff-match-patch is attributable and licensed as follows:\n *\n * Copyright 2006 Google Inc.\n * https://code.google.com/p/google-diff-match-patch/\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * More Info:\n *  https://code.google.com/p/google-diff-match-patch/\n *\n * Usage: QUnit.diff(expected, actual)\n *\n */\nQUnit.diff = ( function() {\n\tfunction DiffMatchPatch() {\n\t}\n\n\t//  DIFF FUNCTIONS\n\n\t/**\n\t * The data structure representing a diff is an array of tuples:\n\t * [[DIFF_DELETE, 'Hello'], [DIFF_INSERT, 'Goodbye'], [DIFF_EQUAL, ' world.']]\n\t * which means: delete 'Hello', add 'Goodbye' and keep ' world.'\n\t */\n\tvar DIFF_DELETE = -1,\n\t\tDIFF_INSERT = 1,\n\t\tDIFF_EQUAL = 0;\n\n\t/**\n\t * Find the differences between two texts.  Simplifies the problem by stripping\n\t * any common prefix or suffix off the texts before diffing.\n\t * @param {string} text1 Old string to be diffed.\n\t * @param {string} text2 New string to be diffed.\n\t * @param {boolean=} optChecklines Optional speedup flag. If present and false,\n\t *     then don't run a line-level diff first to identify the changed areas.\n\t *     Defaults to true, which does a faster, slightly less optimal diff.\n\t * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n\t */\n\tDiffMatchPatch.prototype.DiffMain = function( text1, text2, optChecklines ) {\n\t\tvar deadline, checklines, commonlength,\n\t\t\tcommonprefix, commonsuffix, diffs;\n\n\t\t// The diff must be complete in up to 1 second.\n\t\tdeadline = ( new Date() ).getTime() + 1000;\n\n\t\t// Check for null inputs.\n\t\tif ( text1 === null || text2 === null ) {\n\t\t\tthrow new Error( \"Null input. (DiffMain)\" );\n\t\t}\n\n\t\t// Check for equality (speedup).\n\t\tif ( text1 === text2 ) {\n\t\t\tif ( text1 ) {\n\t\t\t\treturn [\n\t\t\t\t\t[ DIFF_EQUAL, text1 ]\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn [];\n\t\t}\n\n\t\tif ( typeof optChecklines === \"undefined\" ) {\n\t\t\toptChecklines = true;\n\t\t}\n\n\t\tchecklines = optChecklines;\n\n\t\t// Trim off common prefix (speedup).\n\t\tcommonlength = this.diffCommonPrefix( text1, text2 );\n\t\tcommonprefix = text1.substring( 0, commonlength );\n\t\ttext1 = text1.substring( commonlength );\n\t\ttext2 = text2.substring( commonlength );\n\n\t\t// Trim off common suffix (speedup).\n\t\tcommonlength = this.diffCommonSuffix( text1, text2 );\n\t\tcommonsuffix = text1.substring( text1.length - commonlength );\n\t\ttext1 = text1.substring( 0, text1.length - commonlength );\n\t\ttext2 = text2.substring( 0, text2.length - commonlength );\n\n\t\t// Compute the diff on the middle block.\n\t\tdiffs = this.diffCompute( text1, text2, checklines, deadline );\n\n\t\t// Restore the prefix and suffix.\n\t\tif ( commonprefix ) {\n\t\t\tdiffs.unshift( [ DIFF_EQUAL, commonprefix ] );\n\t\t}\n\t\tif ( commonsuffix ) {\n\t\t\tdiffs.push( [ DIFF_EQUAL, commonsuffix ] );\n\t\t}\n\t\tthis.diffCleanupMerge( diffs );\n\t\treturn diffs;\n\t};\n\n\t/**\n\t * Reduce the number of edits by eliminating operationally trivial equalities.\n\t * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n\t */\n\tDiffMatchPatch.prototype.diffCleanupEfficiency = function( diffs ) {\n\t\tvar changes, equalities, equalitiesLength, lastequality,\n\t\t\tpointer, preIns, preDel, postIns, postDel;\n\t\tchanges = false;\n\t\tequalities = []; // Stack of indices where equalities are found.\n\t\tequalitiesLength = 0; // Keeping our own length var is faster in JS.\n\t\t/** @type {?string} */\n\t\tlastequality = null;\n\n\t\t// Always equal to diffs[equalities[equalitiesLength - 1]][1]\n\t\tpointer = 0; // Index of current position.\n\n\t\t// Is there an insertion operation before the last equality.\n\t\tpreIns = false;\n\n\t\t// Is there a deletion operation before the last equality.\n\t\tpreDel = false;\n\n\t\t// Is there an insertion operation after the last equality.\n\t\tpostIns = false;\n\n\t\t// Is there a deletion operation after the last equality.\n\t\tpostDel = false;\n\t\twhile ( pointer < diffs.length ) {\n\n\t\t\t// Equality found.\n\t\t\tif ( diffs[ pointer ][ 0 ] === DIFF_EQUAL ) {\n\t\t\t\tif ( diffs[ pointer ][ 1 ].length < 4 && ( postIns || postDel ) ) {\n\n\t\t\t\t\t// Candidate found.\n\t\t\t\t\tequalities[ equalitiesLength++ ] = pointer;\n\t\t\t\t\tpreIns = postIns;\n\t\t\t\t\tpreDel = postDel;\n\t\t\t\t\tlastequality = diffs[ pointer ][ 1 ];\n\t\t\t\t} else {\n\n\t\t\t\t\t// Not a candidate, and can never become one.\n\t\t\t\t\tequalitiesLength = 0;\n\t\t\t\t\tlastequality = null;\n\t\t\t\t}\n\t\t\t\tpostIns = postDel = false;\n\n\t\t\t// An insertion or deletion.\n\t\t\t} else {\n\n\t\t\t\tif ( diffs[ pointer ][ 0 ] === DIFF_DELETE ) {\n\t\t\t\t\tpostDel = true;\n\t\t\t\t} else {\n\t\t\t\t\tpostIns = true;\n\t\t\t\t}\n\n\t\t\t\t/*\n\t\t\t\t * Five types to be split:\n\t\t\t\t * <ins>A</ins><del>B</del>XY<ins>C</ins><del>D</del>\n\t\t\t\t * <ins>A</ins>X<ins>C</ins><del>D</del>\n\t\t\t\t * <ins>A</ins><del>B</del>X<ins>C</ins>\n\t\t\t\t * <ins>A</del>X<ins>C</ins><del>D</del>\n\t\t\t\t * <ins>A</ins><del>B</del>X<del>C</del>\n\t\t\t\t */\n\t\t\t\tif ( lastequality && ( ( preIns && preDel && postIns && postDel ) ||\n\t\t\t\t\t\t( ( lastequality.length < 2 ) &&\n\t\t\t\t\t\t( preIns + preDel + postIns + postDel ) === 3 ) ) ) {\n\n\t\t\t\t\t// Duplicate record.\n\t\t\t\t\tdiffs.splice(\n\t\t\t\t\t\tequalities[ equalitiesLength - 1 ],\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t[ DIFF_DELETE, lastequality ]\n\t\t\t\t\t);\n\n\t\t\t\t\t// Change second copy to insert.\n\t\t\t\t\tdiffs[ equalities[ equalitiesLength - 1 ] + 1 ][ 0 ] = DIFF_INSERT;\n\t\t\t\t\tequalitiesLength--; // Throw away the equality we just deleted;\n\t\t\t\t\tlastequality = null;\n\t\t\t\t\tif ( preIns && preDel ) {\n\n\t\t\t\t\t\t// No changes made which could affect previous entry, keep going.\n\t\t\t\t\t\tpostIns = postDel = true;\n\t\t\t\t\t\tequalitiesLength = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tequalitiesLength--; // Throw away the previous equality.\n\t\t\t\t\t\tpointer = equalitiesLength > 0 ? equalities[ equalitiesLength - 1 ] : -1;\n\t\t\t\t\t\tpostIns = postDel = false;\n\t\t\t\t\t}\n\t\t\t\t\tchanges = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpointer++;\n\t\t}\n\n\t\tif ( changes ) {\n\t\t\tthis.diffCleanupMerge( diffs );\n\t\t}\n\t};\n\n\t/**\n\t * Convert a diff array into a pretty HTML report.\n\t * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n\t * @param {integer} string to be beautified.\n\t * @return {string} HTML representation.\n\t */\n\tDiffMatchPatch.prototype.diffPrettyHtml = function( diffs ) {\n\t\tvar op, data, x,\n\t\t\thtml = [];\n\t\tfor ( x = 0; x < diffs.length; x++ ) {\n\t\t\top = diffs[ x ][ 0 ]; // Operation (insert, delete, equal)\n\t\t\tdata = diffs[ x ][ 1 ]; // Text of change.\n\t\t\tswitch ( op ) {\n\t\t\tcase DIFF_INSERT:\n\t\t\t\thtml[ x ] = \"<ins>\" + escapeText( data ) + \"</ins>\";\n\t\t\t\tbreak;\n\t\t\tcase DIFF_DELETE:\n\t\t\t\thtml[ x ] = \"<del>\" + escapeText( data ) + \"</del>\";\n\t\t\t\tbreak;\n\t\t\tcase DIFF_EQUAL:\n\t\t\t\thtml[ x ] = \"<span>\" + escapeText( data ) + \"</span>\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\treturn html.join( \"\" );\n\t};\n\n\t/**\n\t * Determine the common prefix of two strings.\n\t * @param {string} text1 First string.\n\t * @param {string} text2 Second string.\n\t * @return {number} The number of characters common to the start of each\n\t *     string.\n\t */\n\tDiffMatchPatch.prototype.diffCommonPrefix = function( text1, text2 ) {\n\t\tvar pointermid, pointermax, pointermin, pointerstart;\n\n\t\t// Quick check for common null cases.\n\t\tif ( !text1 || !text2 || text1.charAt( 0 ) !== text2.charAt( 0 ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Binary search.\n\t\t// Performance analysis: https://neil.fraser.name/news/2007/10/09/\n\t\tpointermin = 0;\n\t\tpointermax = Math.min( text1.length, text2.length );\n\t\tpointermid = pointermax;\n\t\tpointerstart = 0;\n\t\twhile ( pointermin < pointermid ) {\n\t\t\tif ( text1.substring( pointerstart, pointermid ) ===\n\t\t\t\t\ttext2.substring( pointerstart, pointermid ) ) {\n\t\t\t\tpointermin = pointermid;\n\t\t\t\tpointerstart = pointermin;\n\t\t\t} else {\n\t\t\t\tpointermax = pointermid;\n\t\t\t}\n\t\t\tpointermid = Math.floor( ( pointermax - pointermin ) / 2 + pointermin );\n\t\t}\n\t\treturn pointermid;\n\t};\n\n\t/**\n\t * Determine the common suffix of two strings.\n\t * @param {string} text1 First string.\n\t * @param {string} text2 Second string.\n\t * @return {number} The number of characters common to the end of each string.\n\t */\n\tDiffMatchPatch.prototype.diffCommonSuffix = function( text1, text2 ) {\n\t\tvar pointermid, pointermax, pointermin, pointerend;\n\n\t\t// Quick check for common null cases.\n\t\tif ( !text1 ||\n\t\t\t\t!text2 ||\n\t\t\t\ttext1.charAt( text1.length - 1 ) !== text2.charAt( text2.length - 1 ) ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Binary search.\n\t\t// Performance analysis: https://neil.fraser.name/news/2007/10/09/\n\t\tpointermin = 0;\n\t\tpointermax = Math.min( text1.length, text2.length );\n\t\tpointermid = pointermax;\n\t\tpointerend = 0;\n\t\twhile ( pointermin < pointermid ) {\n\t\t\tif ( text1.substring( text1.length - pointermid, text1.length - pointerend ) ===\n\t\t\t\t\ttext2.substring( text2.length - pointermid, text2.length - pointerend ) ) {\n\t\t\t\tpointermin = pointermid;\n\t\t\t\tpointerend = pointermin;\n\t\t\t} else {\n\t\t\t\tpointermax = pointermid;\n\t\t\t}\n\t\t\tpointermid = Math.floor( ( pointermax - pointermin ) / 2 + pointermin );\n\t\t}\n\t\treturn pointermid;\n\t};\n\n\t/**\n\t * Find the differences between two texts.  Assumes that the texts do not\n\t * have any common prefix or suffix.\n\t * @param {string} text1 Old string to be diffed.\n\t * @param {string} text2 New string to be diffed.\n\t * @param {boolean} checklines Speedup flag.  If false, then don't run a\n\t *     line-level diff first to identify the changed areas.\n\t *     If true, then run a faster, slightly less optimal diff.\n\t * @param {number} deadline Time when the diff should be complete by.\n\t * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n\t * @private\n\t */\n\tDiffMatchPatch.prototype.diffCompute = function( text1, text2, checklines, deadline ) {\n\t\tvar diffs, longtext, shorttext, i, hm,\n\t\t\ttext1A, text2A, text1B, text2B,\n\t\t\tmidCommon, diffsA, diffsB;\n\n\t\tif ( !text1 ) {\n\n\t\t\t// Just add some text (speedup).\n\t\t\treturn [\n\t\t\t\t[ DIFF_INSERT, text2 ]\n\t\t\t];\n\t\t}\n\n\t\tif ( !text2 ) {\n\n\t\t\t// Just delete some text (speedup).\n\t\t\treturn [\n\t\t\t\t[ DIFF_DELETE, text1 ]\n\t\t\t];\n\t\t}\n\n\t\tlongtext = text1.length > text2.length ? text1 : text2;\n\t\tshorttext = text1.length > text2.length ? text2 : text1;\n\t\ti = longtext.indexOf( shorttext );\n\t\tif ( i !== -1 ) {\n\n\t\t\t// Shorter text is inside the longer text (speedup).\n\t\t\tdiffs = [\n\t\t\t\t[ DIFF_INSERT, longtext.substring( 0, i ) ],\n\t\t\t\t[ DIFF_EQUAL, shorttext ],\n\t\t\t\t[ DIFF_INSERT, longtext.substring( i + shorttext.length ) ]\n\t\t\t];\n\n\t\t\t// Swap insertions for deletions if diff is reversed.\n\t\t\tif ( text1.length > text2.length ) {\n\t\t\t\tdiffs[ 0 ][ 0 ] = diffs[ 2 ][ 0 ] = DIFF_DELETE;\n\t\t\t}\n\t\t\treturn diffs;\n\t\t}\n\n\t\tif ( shorttext.length === 1 ) {\n\n\t\t\t// Single character string.\n\t\t\t// After the previous speedup, the character can't be an equality.\n\t\t\treturn [\n\t\t\t\t[ DIFF_DELETE, text1 ],\n\t\t\t\t[ DIFF_INSERT, text2 ]\n\t\t\t];\n\t\t}\n\n\t\t// Check to see if the problem can be split in two.\n\t\thm = this.diffHalfMatch( text1, text2 );\n\t\tif ( hm ) {\n\n\t\t\t// A half-match was found, sort out the return data.\n\t\t\ttext1A = hm[ 0 ];\n\t\t\ttext1B = hm[ 1 ];\n\t\t\ttext2A = hm[ 2 ];\n\t\t\ttext2B = hm[ 3 ];\n\t\t\tmidCommon = hm[ 4 ];\n\n\t\t\t// Send both pairs off for separate processing.\n\t\t\tdiffsA = this.DiffMain( text1A, text2A, checklines, deadline );\n\t\t\tdiffsB = this.DiffMain( text1B, text2B, checklines, deadline );\n\n\t\t\t// Merge the results.\n\t\t\treturn diffsA.concat( [\n\t\t\t\t[ DIFF_EQUAL, midCommon ]\n\t\t\t], diffsB );\n\t\t}\n\n\t\tif ( checklines && text1.length > 100 && text2.length > 100 ) {\n\t\t\treturn this.diffLineMode( text1, text2, deadline );\n\t\t}\n\n\t\treturn this.diffBisect( text1, text2, deadline );\n\t};\n\n\t/**\n\t * Do the two texts share a substring which is at least half the length of the\n\t * longer text?\n\t * This speedup can produce non-minimal diffs.\n\t * @param {string} text1 First string.\n\t * @param {string} text2 Second string.\n\t * @return {Array.<string>} Five element Array, containing the prefix of\n\t *     text1, the suffix of text1, the prefix of text2, the suffix of\n\t *     text2 and the common middle.  Or null if there was no match.\n\t * @private\n\t */\n\tDiffMatchPatch.prototype.diffHalfMatch = function( text1, text2 ) {\n\t\tvar longtext, shorttext, dmp,\n\t\t\ttext1A, text2B, text2A, text1B, midCommon,\n\t\t\thm1, hm2, hm;\n\n\t\tlongtext = text1.length > text2.length ? text1 : text2;\n\t\tshorttext = text1.length > text2.length ? text2 : text1;\n\t\tif ( longtext.length < 4 || shorttext.length * 2 < longtext.length ) {\n\t\t\treturn null; // Pointless.\n\t\t}\n\t\tdmp = this; // 'this' becomes 'window' in a closure.\n\n\t\t/**\n\t\t * Does a substring of shorttext exist within longtext such that the substring\n\t\t * is at least half the length of longtext?\n\t\t * Closure, but does not reference any external variables.\n\t\t * @param {string} longtext Longer string.\n\t\t * @param {string} shorttext Shorter string.\n\t\t * @param {number} i Start index of quarter length substring within longtext.\n\t\t * @return {Array.<string>} Five element Array, containing the prefix of\n\t\t *     longtext, the suffix of longtext, the prefix of shorttext, the suffix\n\t\t *     of shorttext and the common middle.  Or null if there was no match.\n\t\t * @private\n\t\t */\n\t\tfunction diffHalfMatchI( longtext, shorttext, i ) {\n\t\t\tvar seed, j, bestCommon, prefixLength, suffixLength,\n\t\t\t\tbestLongtextA, bestLongtextB, bestShorttextA, bestShorttextB;\n\n\t\t\t// Start with a 1/4 length substring at position i as a seed.\n\t\t\tseed = longtext.substring( i, i + Math.floor( longtext.length / 4 ) );\n\t\t\tj = -1;\n\t\t\tbestCommon = \"\";\n\t\t\twhile ( ( j = shorttext.indexOf( seed, j + 1 ) ) !== -1 ) {\n\t\t\t\tprefixLength = dmp.diffCommonPrefix( longtext.substring( i ),\n\t\t\t\t\tshorttext.substring( j ) );\n\t\t\t\tsuffixLength = dmp.diffCommonSuffix( longtext.substring( 0, i ),\n\t\t\t\t\tshorttext.substring( 0, j ) );\n\t\t\t\tif ( bestCommon.length < suffixLength + prefixLength ) {\n\t\t\t\t\tbestCommon = shorttext.substring( j - suffixLength, j ) +\n\t\t\t\t\t\tshorttext.substring( j, j + prefixLength );\n\t\t\t\t\tbestLongtextA = longtext.substring( 0, i - suffixLength );\n\t\t\t\t\tbestLongtextB = longtext.substring( i + prefixLength );\n\t\t\t\t\tbestShorttextA = shorttext.substring( 0, j - suffixLength );\n\t\t\t\t\tbestShorttextB = shorttext.substring( j + prefixLength );\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( bestCommon.length * 2 >= longtext.length ) {\n\t\t\t\treturn [ bestLongtextA, bestLongtextB,\n\t\t\t\t\tbestShorttextA, bestShorttextB, bestCommon\n\t\t\t\t];\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\t// First check if the second quarter is the seed for a half-match.\n\t\thm1 = diffHalfMatchI( longtext, shorttext,\n\t\t\tMath.ceil( longtext.length / 4 ) );\n\n\t\t// Check again based on the third quarter.\n\t\thm2 = diffHalfMatchI( longtext, shorttext,\n\t\t\tMath.ceil( longtext.length / 2 ) );\n\t\tif ( !hm1 && !hm2 ) {\n\t\t\treturn null;\n\t\t} else if ( !hm2 ) {\n\t\t\thm = hm1;\n\t\t} else if ( !hm1 ) {\n\t\t\thm = hm2;\n\t\t} else {\n\n\t\t\t// Both matched.  Select the longest.\n\t\t\thm = hm1[ 4 ].length > hm2[ 4 ].length ? hm1 : hm2;\n\t\t}\n\n\t\t// A half-match was found, sort out the return data.\n\t\ttext1A, text1B, text2A, text2B;\n\t\tif ( text1.length > text2.length ) {\n\t\t\ttext1A = hm[ 0 ];\n\t\t\ttext1B = hm[ 1 ];\n\t\t\ttext2A = hm[ 2 ];\n\t\t\ttext2B = hm[ 3 ];\n\t\t} else {\n\t\t\ttext2A = hm[ 0 ];\n\t\t\ttext2B = hm[ 1 ];\n\t\t\ttext1A = hm[ 2 ];\n\t\t\ttext1B = hm[ 3 ];\n\t\t}\n\t\tmidCommon = hm[ 4 ];\n\t\treturn [ text1A, text1B, text2A, text2B, midCommon ];\n\t};\n\n\t/**\n\t * Do a quick line-level diff on both strings, then rediff the parts for\n\t * greater accuracy.\n\t * This speedup can produce non-minimal diffs.\n\t * @param {string} text1 Old string to be diffed.\n\t * @param {string} text2 New string to be diffed.\n\t * @param {number} deadline Time when the diff should be complete by.\n\t * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n\t * @private\n\t */\n\tDiffMatchPatch.prototype.diffLineMode = function( text1, text2, deadline ) {\n\t\tvar a, diffs, linearray, pointer, countInsert,\n\t\t\tcountDelete, textInsert, textDelete, j;\n\n\t\t// Scan the text on a line-by-line basis first.\n\t\ta = this.diffLinesToChars( text1, text2 );\n\t\ttext1 = a.chars1;\n\t\ttext2 = a.chars2;\n\t\tlinearray = a.lineArray;\n\n\t\tdiffs = this.DiffMain( text1, text2, false, deadline );\n\n\t\t// Convert the diff back to original text.\n\t\tthis.diffCharsToLines( diffs, linearray );\n\n\t\t// Eliminate freak matches (e.g. blank lines)\n\t\tthis.diffCleanupSemantic( diffs );\n\n\t\t// Rediff any replacement blocks, this time character-by-character.\n\t\t// Add a dummy entry at the end.\n\t\tdiffs.push( [ DIFF_EQUAL, \"\" ] );\n\t\tpointer = 0;\n\t\tcountDelete = 0;\n\t\tcountInsert = 0;\n\t\ttextDelete = \"\";\n\t\ttextInsert = \"\";\n\t\twhile ( pointer < diffs.length ) {\n\t\t\tswitch ( diffs[ pointer ][ 0 ] ) {\n\t\t\tcase DIFF_INSERT:\n\t\t\t\tcountInsert++;\n\t\t\t\ttextInsert += diffs[ pointer ][ 1 ];\n\t\t\t\tbreak;\n\t\t\tcase DIFF_DELETE:\n\t\t\t\tcountDelete++;\n\t\t\t\ttextDelete += diffs[ pointer ][ 1 ];\n\t\t\t\tbreak;\n\t\t\tcase DIFF_EQUAL:\n\n\t\t\t\t// Upon reaching an equality, check for prior redundancies.\n\t\t\t\tif ( countDelete >= 1 && countInsert >= 1 ) {\n\n\t\t\t\t\t// Delete the offending records and add the merged ones.\n\t\t\t\t\tdiffs.splice( pointer - countDelete - countInsert,\n\t\t\t\t\t\tcountDelete + countInsert );\n\t\t\t\t\tpointer = pointer - countDelete - countInsert;\n\t\t\t\t\ta = this.DiffMain( textDelete, textInsert, false, deadline );\n\t\t\t\t\tfor ( j = a.length - 1; j >= 0; j-- ) {\n\t\t\t\t\t\tdiffs.splice( pointer, 0, a[ j ] );\n\t\t\t\t\t}\n\t\t\t\t\tpointer = pointer + a.length;\n\t\t\t\t}\n\t\t\t\tcountInsert = 0;\n\t\t\t\tcountDelete = 0;\n\t\t\t\ttextDelete = \"\";\n\t\t\t\ttextInsert = \"\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tpointer++;\n\t\t}\n\t\tdiffs.pop(); // Remove the dummy entry at the end.\n\n\t\treturn diffs;\n\t};\n\n\t/**\n\t * Find the 'middle snake' of a diff, split the problem in two\n\t * and return the recursively constructed diff.\n\t * See Myers 1986 paper: An O(ND) Difference Algorithm and Its Variations.\n\t * @param {string} text1 Old string to be diffed.\n\t * @param {string} text2 New string to be diffed.\n\t * @param {number} deadline Time at which to bail if not yet complete.\n\t * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n\t * @private\n\t */\n\tDiffMatchPatch.prototype.diffBisect = function( text1, text2, deadline ) {\n\t\tvar text1Length, text2Length, maxD, vOffset, vLength,\n\t\t\tv1, v2, x, delta, front, k1start, k1end, k2start,\n\t\t\tk2end, k2Offset, k1Offset, x1, x2, y1, y2, d, k1, k2;\n\n\t\t// Cache the text lengths to prevent multiple calls.\n\t\ttext1Length = text1.length;\n\t\ttext2Length = text2.length;\n\t\tmaxD = Math.ceil( ( text1Length + text2Length ) / 2 );\n\t\tvOffset = maxD;\n\t\tvLength = 2 * maxD;\n\t\tv1 = new Array( vLength );\n\t\tv2 = new Array( vLength );\n\n\t\t// Setting all elements to -1 is faster in Chrome & Firefox than mixing\n\t\t// integers and undefined.\n\t\tfor ( x = 0; x < vLength; x++ ) {\n\t\t\tv1[ x ] = -1;\n\t\t\tv2[ x ] = -1;\n\t\t}\n\t\tv1[ vOffset + 1 ] = 0;\n\t\tv2[ vOffset + 1 ] = 0;\n\t\tdelta = text1Length - text2Length;\n\n\t\t// If the total number of characters is odd, then the front path will collide\n\t\t// with the reverse path.\n\t\tfront = ( delta % 2 !== 0 );\n\n\t\t// Offsets for start and end of k loop.\n\t\t// Prevents mapping of space beyond the grid.\n\t\tk1start = 0;\n\t\tk1end = 0;\n\t\tk2start = 0;\n\t\tk2end = 0;\n\t\tfor ( d = 0; d < maxD; d++ ) {\n\n\t\t\t// Bail out if deadline is reached.\n\t\t\tif ( ( new Date() ).getTime() > deadline ) {\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\t// Walk the front path one step.\n\t\t\tfor ( k1 = -d + k1start; k1 <= d - k1end; k1 += 2 ) {\n\t\t\t\tk1Offset = vOffset + k1;\n\t\t\t\tif ( k1 === -d || ( k1 !== d && v1[ k1Offset - 1 ] < v1[ k1Offset + 1 ] ) ) {\n\t\t\t\t\tx1 = v1[ k1Offset + 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tx1 = v1[ k1Offset - 1 ] + 1;\n\t\t\t\t}\n\t\t\t\ty1 = x1 - k1;\n\t\t\t\twhile ( x1 < text1Length && y1 < text2Length &&\n\t\t\t\t\ttext1.charAt( x1 ) === text2.charAt( y1 ) ) {\n\t\t\t\t\tx1++;\n\t\t\t\t\ty1++;\n\t\t\t\t}\n\t\t\t\tv1[ k1Offset ] = x1;\n\t\t\t\tif ( x1 > text1Length ) {\n\n\t\t\t\t\t// Ran off the right of the graph.\n\t\t\t\t\tk1end += 2;\n\t\t\t\t} else if ( y1 > text2Length ) {\n\n\t\t\t\t\t// Ran off the bottom of the graph.\n\t\t\t\t\tk1start += 2;\n\t\t\t\t} else if ( front ) {\n\t\t\t\t\tk2Offset = vOffset + delta - k1;\n\t\t\t\t\tif ( k2Offset >= 0 && k2Offset < vLength && v2[ k2Offset ] !== -1 ) {\n\n\t\t\t\t\t\t// Mirror x2 onto top-left coordinate system.\n\t\t\t\t\t\tx2 = text1Length - v2[ k2Offset ];\n\t\t\t\t\t\tif ( x1 >= x2 ) {\n\n\t\t\t\t\t\t\t// Overlap detected.\n\t\t\t\t\t\t\treturn this.diffBisectSplit( text1, text2, x1, y1, deadline );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Walk the reverse path one step.\n\t\t\tfor ( k2 = -d + k2start; k2 <= d - k2end; k2 += 2 ) {\n\t\t\t\tk2Offset = vOffset + k2;\n\t\t\t\tif ( k2 === -d || ( k2 !== d && v2[ k2Offset - 1 ] < v2[ k2Offset + 1 ] ) ) {\n\t\t\t\t\tx2 = v2[ k2Offset + 1 ];\n\t\t\t\t} else {\n\t\t\t\t\tx2 = v2[ k2Offset - 1 ] + 1;\n\t\t\t\t}\n\t\t\t\ty2 = x2 - k2;\n\t\t\t\twhile ( x2 < text1Length && y2 < text2Length &&\n\t\t\t\t\ttext1.charAt( text1Length - x2 - 1 ) ===\n\t\t\t\t\ttext2.charAt( text2Length - y2 - 1 ) ) {\n\t\t\t\t\tx2++;\n\t\t\t\t\ty2++;\n\t\t\t\t}\n\t\t\t\tv2[ k2Offset ] = x2;\n\t\t\t\tif ( x2 > text1Length ) {\n\n\t\t\t\t\t// Ran off the left of the graph.\n\t\t\t\t\tk2end += 2;\n\t\t\t\t} else if ( y2 > text2Length ) {\n\n\t\t\t\t\t// Ran off the top of the graph.\n\t\t\t\t\tk2start += 2;\n\t\t\t\t} else if ( !front ) {\n\t\t\t\t\tk1Offset = vOffset + delta - k2;\n\t\t\t\t\tif ( k1Offset >= 0 && k1Offset < vLength && v1[ k1Offset ] !== -1 ) {\n\t\t\t\t\t\tx1 = v1[ k1Offset ];\n\t\t\t\t\t\ty1 = vOffset + x1 - k1Offset;\n\n\t\t\t\t\t\t// Mirror x2 onto top-left coordinate system.\n\t\t\t\t\t\tx2 = text1Length - x2;\n\t\t\t\t\t\tif ( x1 >= x2 ) {\n\n\t\t\t\t\t\t\t// Overlap detected.\n\t\t\t\t\t\t\treturn this.diffBisectSplit( text1, text2, x1, y1, deadline );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// Diff took too long and hit the deadline or\n\t\t// number of diffs equals number of characters, no commonality at all.\n\t\treturn [\n\t\t\t[ DIFF_DELETE, text1 ],\n\t\t\t[ DIFF_INSERT, text2 ]\n\t\t];\n\t};\n\n\t/**\n\t * Given the location of the 'middle snake', split the diff in two parts\n\t * and recurse.\n\t * @param {string} text1 Old string to be diffed.\n\t * @param {string} text2 New string to be diffed.\n\t * @param {number} x Index of split point in text1.\n\t * @param {number} y Index of split point in text2.\n\t * @param {number} deadline Time at which to bail if not yet complete.\n\t * @return {!Array.<!DiffMatchPatch.Diff>} Array of diff tuples.\n\t * @private\n\t */\n\tDiffMatchPatch.prototype.diffBisectSplit = function( text1, text2, x, y, deadline ) {\n\t\tvar text1a, text1b, text2a, text2b, diffs, diffsb;\n\t\ttext1a = text1.substring( 0, x );\n\t\ttext2a = text2.substring( 0, y );\n\t\ttext1b = text1.substring( x );\n\t\ttext2b = text2.substring( y );\n\n\t\t// Compute both diffs serially.\n\t\tdiffs = this.DiffMain( text1a, text2a, false, deadline );\n\t\tdiffsb = this.DiffMain( text1b, text2b, false, deadline );\n\n\t\treturn diffs.concat( diffsb );\n\t};\n\n\t/**\n\t * Reduce the number of edits by eliminating semantically trivial equalities.\n\t * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n\t */\n\tDiffMatchPatch.prototype.diffCleanupSemantic = function( diffs ) {\n\t\tvar changes, equalities, equalitiesLength, lastequality,\n\t\t\tpointer, lengthInsertions2, lengthDeletions2, lengthInsertions1,\n\t\t\tlengthDeletions1, deletion, insertion, overlapLength1, overlapLength2;\n\t\tchanges = false;\n\t\tequalities = []; // Stack of indices where equalities are found.\n\t\tequalitiesLength = 0; // Keeping our own length var is faster in JS.\n\t\t/** @type {?string} */\n\t\tlastequality = null;\n\n\t\t// Always equal to diffs[equalities[equalitiesLength - 1]][1]\n\t\tpointer = 0; // Index of current position.\n\n\t\t// Number of characters that changed prior to the equality.\n\t\tlengthInsertions1 = 0;\n\t\tlengthDeletions1 = 0;\n\n\t\t// Number of characters that changed after the equality.\n\t\tlengthInsertions2 = 0;\n\t\tlengthDeletions2 = 0;\n\t\twhile ( pointer < diffs.length ) {\n\t\t\tif ( diffs[ pointer ][ 0 ] === DIFF_EQUAL ) { // Equality found.\n\t\t\t\tequalities[ equalitiesLength++ ] = pointer;\n\t\t\t\tlengthInsertions1 = lengthInsertions2;\n\t\t\t\tlengthDeletions1 = lengthDeletions2;\n\t\t\t\tlengthInsertions2 = 0;\n\t\t\t\tlengthDeletions2 = 0;\n\t\t\t\tlastequality = diffs[ pointer ][ 1 ];\n\t\t\t} else { // An insertion or deletion.\n\t\t\t\tif ( diffs[ pointer ][ 0 ] === DIFF_INSERT ) {\n\t\t\t\t\tlengthInsertions2 += diffs[ pointer ][ 1 ].length;\n\t\t\t\t} else {\n\t\t\t\t\tlengthDeletions2 += diffs[ pointer ][ 1 ].length;\n\t\t\t\t}\n\n\t\t\t\t// Eliminate an equality that is smaller or equal to the edits on both\n\t\t\t\t// sides of it.\n\t\t\t\tif ( lastequality && ( lastequality.length <=\n\t\t\t\t\t\tMath.max( lengthInsertions1, lengthDeletions1 ) ) &&\n\t\t\t\t\t\t( lastequality.length <= Math.max( lengthInsertions2,\n\t\t\t\t\t\t\tlengthDeletions2 ) ) ) {\n\n\t\t\t\t\t// Duplicate record.\n\t\t\t\t\tdiffs.splice(\n\t\t\t\t\t\tequalities[ equalitiesLength - 1 ],\n\t\t\t\t\t\t0,\n\t\t\t\t\t\t[ DIFF_DELETE, lastequality ]\n\t\t\t\t\t);\n\n\t\t\t\t\t// Change second copy to insert.\n\t\t\t\t\tdiffs[ equalities[ equalitiesLength - 1 ] + 1 ][ 0 ] = DIFF_INSERT;\n\n\t\t\t\t\t// Throw away the equality we just deleted.\n\t\t\t\t\tequalitiesLength--;\n\n\t\t\t\t\t// Throw away the previous equality (it needs to be reevaluated).\n\t\t\t\t\tequalitiesLength--;\n\t\t\t\t\tpointer = equalitiesLength > 0 ? equalities[ equalitiesLength - 1 ] : -1;\n\n\t\t\t\t\t// Reset the counters.\n\t\t\t\t\tlengthInsertions1 = 0;\n\t\t\t\t\tlengthDeletions1 = 0;\n\t\t\t\t\tlengthInsertions2 = 0;\n\t\t\t\t\tlengthDeletions2 = 0;\n\t\t\t\t\tlastequality = null;\n\t\t\t\t\tchanges = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpointer++;\n\t\t}\n\n\t\t// Normalize the diff.\n\t\tif ( changes ) {\n\t\t\tthis.diffCleanupMerge( diffs );\n\t\t}\n\n\t\t// Find any overlaps between deletions and insertions.\n\t\t// e.g: <del>abcxxx</del><ins>xxxdef</ins>\n\t\t//   -> <del>abc</del>xxx<ins>def</ins>\n\t\t// e.g: <del>xxxabc</del><ins>defxxx</ins>\n\t\t//   -> <ins>def</ins>xxx<del>abc</del>\n\t\t// Only extract an overlap if it is as big as the edit ahead or behind it.\n\t\tpointer = 1;\n\t\twhile ( pointer < diffs.length ) {\n\t\t\tif ( diffs[ pointer - 1 ][ 0 ] === DIFF_DELETE &&\n\t\t\t\t\tdiffs[ pointer ][ 0 ] === DIFF_INSERT ) {\n\t\t\t\tdeletion = diffs[ pointer - 1 ][ 1 ];\n\t\t\t\tinsertion = diffs[ pointer ][ 1 ];\n\t\t\t\toverlapLength1 = this.diffCommonOverlap( deletion, insertion );\n\t\t\t\toverlapLength2 = this.diffCommonOverlap( insertion, deletion );\n\t\t\t\tif ( overlapLength1 >= overlapLength2 ) {\n\t\t\t\t\tif ( overlapLength1 >= deletion.length / 2 ||\n\t\t\t\t\t\t\toverlapLength1 >= insertion.length / 2 ) {\n\n\t\t\t\t\t\t// Overlap found.  Insert an equality and trim the surrounding edits.\n\t\t\t\t\t\tdiffs.splice(\n\t\t\t\t\t\t\tpointer,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t[ DIFF_EQUAL, insertion.substring( 0, overlapLength1 ) ]\n\t\t\t\t\t\t);\n\t\t\t\t\t\tdiffs[ pointer - 1 ][ 1 ] =\n\t\t\t\t\t\t\tdeletion.substring( 0, deletion.length - overlapLength1 );\n\t\t\t\t\t\tdiffs[ pointer + 1 ][ 1 ] = insertion.substring( overlapLength1 );\n\t\t\t\t\t\tpointer++;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif ( overlapLength2 >= deletion.length / 2 ||\n\t\t\t\t\t\t\toverlapLength2 >= insertion.length / 2 ) {\n\n\t\t\t\t\t\t// Reverse overlap found.\n\t\t\t\t\t\t// Insert an equality and swap and trim the surrounding edits.\n\t\t\t\t\t\tdiffs.splice(\n\t\t\t\t\t\t\tpointer,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\t[ DIFF_EQUAL, deletion.substring( 0, overlapLength2 ) ]\n\t\t\t\t\t\t);\n\n\t\t\t\t\t\tdiffs[ pointer - 1 ][ 0 ] = DIFF_INSERT;\n\t\t\t\t\t\tdiffs[ pointer - 1 ][ 1 ] =\n\t\t\t\t\t\t\tinsertion.substring( 0, insertion.length - overlapLength2 );\n\t\t\t\t\t\tdiffs[ pointer + 1 ][ 0 ] = DIFF_DELETE;\n\t\t\t\t\t\tdiffs[ pointer + 1 ][ 1 ] =\n\t\t\t\t\t\t\tdeletion.substring( overlapLength2 );\n\t\t\t\t\t\tpointer++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tpointer++;\n\t\t\t}\n\t\t\tpointer++;\n\t\t}\n\t};\n\n\t/**\n\t * Determine if the suffix of one string is the prefix of another.\n\t * @param {string} text1 First string.\n\t * @param {string} text2 Second string.\n\t * @return {number} The number of characters common to the end of the first\n\t *     string and the start of the second string.\n\t * @private\n\t */\n\tDiffMatchPatch.prototype.diffCommonOverlap = function( text1, text2 ) {\n\t\tvar text1Length, text2Length, textLength,\n\t\t\tbest, length, pattern, found;\n\n\t\t// Cache the text lengths to prevent multiple calls.\n\t\ttext1Length = text1.length;\n\t\ttext2Length = text2.length;\n\n\t\t// Eliminate the null case.\n\t\tif ( text1Length === 0 || text2Length === 0 ) {\n\t\t\treturn 0;\n\t\t}\n\n\t\t// Truncate the longer string.\n\t\tif ( text1Length > text2Length ) {\n\t\t\ttext1 = text1.substring( text1Length - text2Length );\n\t\t} else if ( text1Length < text2Length ) {\n\t\t\ttext2 = text2.substring( 0, text1Length );\n\t\t}\n\t\ttextLength = Math.min( text1Length, text2Length );\n\n\t\t// Quick check for the worst case.\n\t\tif ( text1 === text2 ) {\n\t\t\treturn textLength;\n\t\t}\n\n\t\t// Start by looking for a single character match\n\t\t// and increase length until no match is found.\n\t\t// Performance analysis: https://neil.fraser.name/news/2010/11/04/\n\t\tbest = 0;\n\t\tlength = 1;\n\t\twhile ( true ) {\n\t\t\tpattern = text1.substring( textLength - length );\n\t\t\tfound = text2.indexOf( pattern );\n\t\t\tif ( found === -1 ) {\n\t\t\t\treturn best;\n\t\t\t}\n\t\t\tlength += found;\n\t\t\tif ( found === 0 || text1.substring( textLength - length ) ===\n\t\t\t\t\ttext2.substring( 0, length ) ) {\n\t\t\t\tbest = length;\n\t\t\t\tlength++;\n\t\t\t}\n\t\t}\n\t};\n\n\t/**\n\t * Split two texts into an array of strings.  Reduce the texts to a string of\n\t * hashes where each Unicode character represents one line.\n\t * @param {string} text1 First string.\n\t * @param {string} text2 Second string.\n\t * @return {{chars1: string, chars2: string, lineArray: !Array.<string>}}\n\t *     An object containing the encoded text1, the encoded text2 and\n\t *     the array of unique strings.\n\t *     The zeroth element of the array of unique strings is intentionally blank.\n\t * @private\n\t */\n\tDiffMatchPatch.prototype.diffLinesToChars = function( text1, text2 ) {\n\t\tvar lineArray, lineHash, chars1, chars2;\n\t\tlineArray = []; // E.g. lineArray[4] === 'Hello\\n'\n\t\tlineHash = {};  // E.g. lineHash['Hello\\n'] === 4\n\n\t\t// '\\x00' is a valid character, but various debuggers don't like it.\n\t\t// So we'll insert a junk entry to avoid generating a null character.\n\t\tlineArray[ 0 ] = \"\";\n\n\t\t/**\n\t\t * Split a text into an array of strings.  Reduce the texts to a string of\n\t\t * hashes where each Unicode character represents one line.\n\t\t * Modifies linearray and linehash through being a closure.\n\t\t * @param {string} text String to encode.\n\t\t * @return {string} Encoded string.\n\t\t * @private\n\t\t */\n\t\tfunction diffLinesToCharsMunge( text ) {\n\t\t\tvar chars, lineStart, lineEnd, lineArrayLength, line;\n\t\t\tchars = \"\";\n\n\t\t\t// Walk the text, pulling out a substring for each line.\n\t\t\t// text.split('\\n') would would temporarily double our memory footprint.\n\t\t\t// Modifying text would create many large strings to garbage collect.\n\t\t\tlineStart = 0;\n\t\t\tlineEnd = -1;\n\n\t\t\t// Keeping our own length variable is faster than looking it up.\n\t\t\tlineArrayLength = lineArray.length;\n\t\t\twhile ( lineEnd < text.length - 1 ) {\n\t\t\t\tlineEnd = text.indexOf( \"\\n\", lineStart );\n\t\t\t\tif ( lineEnd === -1 ) {\n\t\t\t\t\tlineEnd = text.length - 1;\n\t\t\t\t}\n\t\t\t\tline = text.substring( lineStart, lineEnd + 1 );\n\t\t\t\tlineStart = lineEnd + 1;\n\n\t\t\t\tif ( lineHash.hasOwnProperty ? lineHash.hasOwnProperty( line ) :\n\t\t\t\t\t\t\t( lineHash[ line ] !== undefined ) ) {\n\t\t\t\t\tchars += String.fromCharCode( lineHash[ line ] );\n\t\t\t\t} else {\n\t\t\t\t\tchars += String.fromCharCode( lineArrayLength );\n\t\t\t\t\tlineHash[ line ] = lineArrayLength;\n\t\t\t\t\tlineArray[ lineArrayLength++ ] = line;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn chars;\n\t\t}\n\n\t\tchars1 = diffLinesToCharsMunge( text1 );\n\t\tchars2 = diffLinesToCharsMunge( text2 );\n\t\treturn {\n\t\t\tchars1: chars1,\n\t\t\tchars2: chars2,\n\t\t\tlineArray: lineArray\n\t\t};\n\t};\n\n\t/**\n\t * Rehydrate the text in a diff from a string of line hashes to real lines of\n\t * text.\n\t * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n\t * @param {!Array.<string>} lineArray Array of unique strings.\n\t * @private\n\t */\n\tDiffMatchPatch.prototype.diffCharsToLines = function( diffs, lineArray ) {\n\t\tvar x, chars, text, y;\n\t\tfor ( x = 0; x < diffs.length; x++ ) {\n\t\t\tchars = diffs[ x ][ 1 ];\n\t\t\ttext = [];\n\t\t\tfor ( y = 0; y < chars.length; y++ ) {\n\t\t\t\ttext[ y ] = lineArray[ chars.charCodeAt( y ) ];\n\t\t\t}\n\t\t\tdiffs[ x ][ 1 ] = text.join( \"\" );\n\t\t}\n\t};\n\n\t/**\n\t * Reorder and merge like edit sections.  Merge equalities.\n\t * Any edit section can move as long as it doesn't cross an equality.\n\t * @param {!Array.<!DiffMatchPatch.Diff>} diffs Array of diff tuples.\n\t */\n\tDiffMatchPatch.prototype.diffCleanupMerge = function( diffs ) {\n\t\tvar pointer, countDelete, countInsert, textInsert, textDelete,\n\t\t\tcommonlength, changes, diffPointer, position;\n\t\tdiffs.push( [ DIFF_EQUAL, \"\" ] ); // Add a dummy entry at the end.\n\t\tpointer = 0;\n\t\tcountDelete = 0;\n\t\tcountInsert = 0;\n\t\ttextDelete = \"\";\n\t\ttextInsert = \"\";\n\t\tcommonlength;\n\t\twhile ( pointer < diffs.length ) {\n\t\t\tswitch ( diffs[ pointer ][ 0 ] ) {\n\t\t\tcase DIFF_INSERT:\n\t\t\t\tcountInsert++;\n\t\t\t\ttextInsert += diffs[ pointer ][ 1 ];\n\t\t\t\tpointer++;\n\t\t\t\tbreak;\n\t\t\tcase DIFF_DELETE:\n\t\t\t\tcountDelete++;\n\t\t\t\ttextDelete += diffs[ pointer ][ 1 ];\n\t\t\t\tpointer++;\n\t\t\t\tbreak;\n\t\t\tcase DIFF_EQUAL:\n\n\t\t\t\t// Upon reaching an equality, check for prior redundancies.\n\t\t\t\tif ( countDelete + countInsert > 1 ) {\n\t\t\t\t\tif ( countDelete !== 0 && countInsert !== 0 ) {\n\n\t\t\t\t\t\t// Factor out any common prefixes.\n\t\t\t\t\t\tcommonlength = this.diffCommonPrefix( textInsert, textDelete );\n\t\t\t\t\t\tif ( commonlength !== 0 ) {\n\t\t\t\t\t\t\tif ( ( pointer - countDelete - countInsert ) > 0 &&\n\t\t\t\t\t\t\t\t\tdiffs[ pointer - countDelete - countInsert - 1 ][ 0 ] ===\n\t\t\t\t\t\t\t\t\tDIFF_EQUAL ) {\n\t\t\t\t\t\t\t\tdiffs[ pointer - countDelete - countInsert - 1 ][ 1 ] +=\n\t\t\t\t\t\t\t\t\ttextInsert.substring( 0, commonlength );\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tdiffs.splice( 0, 0, [ DIFF_EQUAL,\n\t\t\t\t\t\t\t\t\ttextInsert.substring( 0, commonlength )\n\t\t\t\t\t\t\t\t] );\n\t\t\t\t\t\t\t\tpointer++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttextInsert = textInsert.substring( commonlength );\n\t\t\t\t\t\t\ttextDelete = textDelete.substring( commonlength );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Factor out any common suffixies.\n\t\t\t\t\t\tcommonlength = this.diffCommonSuffix( textInsert, textDelete );\n\t\t\t\t\t\tif ( commonlength !== 0 ) {\n\t\t\t\t\t\t\tdiffs[ pointer ][ 1 ] = textInsert.substring( textInsert.length -\n\t\t\t\t\t\t\t\t\tcommonlength ) + diffs[ pointer ][ 1 ];\n\t\t\t\t\t\t\ttextInsert = textInsert.substring( 0, textInsert.length -\n\t\t\t\t\t\t\t\tcommonlength );\n\t\t\t\t\t\t\ttextDelete = textDelete.substring( 0, textDelete.length -\n\t\t\t\t\t\t\t\tcommonlength );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Delete the offending records and add the merged ones.\n\t\t\t\t\tif ( countDelete === 0 ) {\n\t\t\t\t\t\tdiffs.splice( pointer - countInsert,\n\t\t\t\t\t\t\tcountDelete + countInsert, [ DIFF_INSERT, textInsert ] );\n\t\t\t\t\t} else if ( countInsert === 0 ) {\n\t\t\t\t\t\tdiffs.splice( pointer - countDelete,\n\t\t\t\t\t\t\tcountDelete + countInsert, [ DIFF_DELETE, textDelete ] );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdiffs.splice(\n\t\t\t\t\t\t\tpointer - countDelete - countInsert,\n\t\t\t\t\t\t\tcountDelete + countInsert,\n\t\t\t\t\t\t\t[ DIFF_DELETE, textDelete ], [ DIFF_INSERT, textInsert ]\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t\tpointer = pointer - countDelete - countInsert +\n\t\t\t\t\t\t( countDelete ? 1 : 0 ) + ( countInsert ? 1 : 0 ) + 1;\n\t\t\t\t} else if ( pointer !== 0 && diffs[ pointer - 1 ][ 0 ] === DIFF_EQUAL ) {\n\n\t\t\t\t\t// Merge this equality with the previous one.\n\t\t\t\t\tdiffs[ pointer - 1 ][ 1 ] += diffs[ pointer ][ 1 ];\n\t\t\t\t\tdiffs.splice( pointer, 1 );\n\t\t\t\t} else {\n\t\t\t\t\tpointer++;\n\t\t\t\t}\n\t\t\t\tcountInsert = 0;\n\t\t\t\tcountDelete = 0;\n\t\t\t\ttextDelete = \"\";\n\t\t\t\ttextInsert = \"\";\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif ( diffs[ diffs.length - 1 ][ 1 ] === \"\" ) {\n\t\t\tdiffs.pop(); // Remove the dummy entry at the end.\n\t\t}\n\n\t\t// Second pass: look for single edits surrounded on both sides by equalities\n\t\t// which can be shifted sideways to eliminate an equality.\n\t\t// e.g: A<ins>BA</ins>C -> <ins>AB</ins>AC\n\t\tchanges = false;\n\t\tpointer = 1;\n\n\t\t// Intentionally ignore the first and last element (don't need checking).\n\t\twhile ( pointer < diffs.length - 1 ) {\n\t\t\tif ( diffs[ pointer - 1 ][ 0 ] === DIFF_EQUAL &&\n\t\t\t\t\tdiffs[ pointer + 1 ][ 0 ] === DIFF_EQUAL ) {\n\n\t\t\t\tdiffPointer = diffs[ pointer ][ 1 ];\n\t\t\t\tposition = diffPointer.substring(\n\t\t\t\t\tdiffPointer.length - diffs[ pointer - 1 ][ 1 ].length\n\t\t\t\t);\n\n\t\t\t\t// This is a single edit surrounded by equalities.\n\t\t\t\tif ( position === diffs[ pointer - 1 ][ 1 ] ) {\n\n\t\t\t\t\t// Shift the edit over the previous equality.\n\t\t\t\t\tdiffs[ pointer ][ 1 ] = diffs[ pointer - 1 ][ 1 ] +\n\t\t\t\t\t\tdiffs[ pointer ][ 1 ].substring( 0, diffs[ pointer ][ 1 ].length -\n\t\t\t\t\t\t\tdiffs[ pointer - 1 ][ 1 ].length );\n\t\t\t\t\tdiffs[ pointer + 1 ][ 1 ] =\n\t\t\t\t\t\tdiffs[ pointer - 1 ][ 1 ] + diffs[ pointer + 1 ][ 1 ];\n\t\t\t\t\tdiffs.splice( pointer - 1, 1 );\n\t\t\t\t\tchanges = true;\n\t\t\t\t} else if ( diffPointer.substring( 0, diffs[ pointer + 1 ][ 1 ].length ) ===\n\t\t\t\t\t\tdiffs[ pointer + 1 ][ 1 ] ) {\n\n\t\t\t\t\t// Shift the edit over the next equality.\n\t\t\t\t\tdiffs[ pointer - 1 ][ 1 ] += diffs[ pointer + 1 ][ 1 ];\n\t\t\t\t\tdiffs[ pointer ][ 1 ] =\n\t\t\t\t\t\tdiffs[ pointer ][ 1 ].substring( diffs[ pointer + 1 ][ 1 ].length ) +\n\t\t\t\t\t\tdiffs[ pointer + 1 ][ 1 ];\n\t\t\t\t\tdiffs.splice( pointer + 1, 1 );\n\t\t\t\t\tchanges = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tpointer++;\n\t\t}\n\n\t\t// If shifts were made, the diff needs reordering and another shift sweep.\n\t\tif ( changes ) {\n\t\t\tthis.diffCleanupMerge( diffs );\n\t\t}\n\t};\n\n\treturn function( o, n ) {\n\t\tvar diff, output, text;\n\t\tdiff = new DiffMatchPatch();\n\t\toutput = diff.DiffMain( o, n );\n\t\tdiff.diffCleanupEfficiency( output );\n\t\ttext = diff.diffPrettyHtml( output );\n\n\t\treturn text;\n\t};\n}() );\n\n}() );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/qunitjs/qunit/qunit.js\n// module id = 132\n// module chunks = 2","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/process/browser.js\n// module id = 133\n// module chunks = 2","/**\n * QUnit-TAP - A TAP Output Producer Plugin for QUnit\n *\n * https://github.com/twada/qunit-tap\n * version: 1.5.1\n *\n * Copyright (c) 2010-2016 Takuto Wada\n * Dual licensed under the MIT and GPLv2 licenses.\n *   https://raw.github.com/twada/qunit-tap/master/MIT-LICENSE.txt\n *   https://raw.github.com/twada/qunit-tap/master/GPL-LICENSE.txt\n *\n * A part of extend function is:\n *   Copyright 2012 jQuery Foundation and other contributors\n *   Released under the MIT license.\n *   http://jquery.org/license\n */\n(function (root, factory) {\n    'use strict';\n\n    // using returnExports UMD pattern\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.qunitTap = factory();\n    }\n}(this, function () {\n    'use strict';\n\n    var qunitTapVersion = '1.5.1',\n        slice = Array.prototype.slice;\n\n    // borrowed from qunit.js\n    function extend (a, b) {\n        var prop;\n        for (prop in b) {\n            if (b.hasOwnProperty(prop)) {\n                if (typeof b[prop] === 'undefined') {\n                    delete a[prop];\n                } else {\n                    a[prop] = b[prop];\n                }\n            }\n        }\n        return a;\n    }\n\n    function indexOf (ary, element) {\n        var i;\n        for (i = 0; i < ary.length; i += 1) {\n            if (ary[i] === element) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    function removeElement (ary, element) {\n        var index = indexOf(ary, element);\n        if (index !== -1) {\n            return ary.splice(index, 1);\n        } else {\n            return [];\n        }\n    }\n\n    function isPlanRequired (conf) {\n        return (typeof conf !== 'undefined' && typeof conf.requireExpects !== 'undefined' && conf.requireExpects);\n    }\n\n    function isPassed (details) {\n        return !!(details.result);\n    }\n\n    function isFailed (details) {\n        return !(isPassed(details));\n    }\n\n    function isAssertOkFailed (details) {\n        return isFailed(details) && typeof details.expected === 'undefined' && typeof details.actual === 'undefined';\n    }\n\n    function escapeLineEndings (str) {\n        return str.replace(/(\\r?\\n)/g, '$&# ');\n    }\n\n    function ltrim (str) {\n        return str.replace(/^\\s+/, '');\n    }\n\n    function noop (obj) {\n        return obj;\n    }\n\n    function render (desc, fieldName, fieldValue, formatter) {\n        desc.push(fieldName + ': ' + formatter(fieldValue));\n    }\n\n    function renderIf (shouldRender, desc, fieldName, fieldValue, formatter) {\n        if (!shouldRender || typeof fieldValue === 'undefined') {\n            return;\n        }\n        render(desc, fieldName, fieldValue, formatter);\n    }\n\n    function formatTestLine (testLine, rest) {\n        if (!rest) {\n            return testLine;\n        }\n        return testLine + ' - ' + escapeLineEndings(rest);\n    }\n\n    var createCallbackAppenderFor = function (qu) {\n        return function (subject, observer, event) {\n            var originalLoggingCallback = subject[event],\n                callback = function () {\n                    // make listener methods (moduleStart,testStart,log, ...) overridable.\n                    observer[event].apply(observer, slice.apply(arguments));\n                };\n            originalLoggingCallback(callback);\n            return callback;\n        };\n    };\n\n\n    /**\n     * QUnit-TAP - A TAP Output Producer Plugin for QUnit\n     * @param qunitObject QUnit object reference.\n     * @param printLikeFunction print-like function for TAP output (assumes line-separator is added by this function for each call).\n     * @param options configuration options to customize default behavior.\n     * @return object to provide QUnit-TAP API and customization subject.\n     */\n    function qunitTap(qunitObject, printLikeFunction, options) {\n        if (!qunitObject) {\n            throw new Error('should pass QUnit object reference. Please check QUnit\\'s \"require\" path if you are using Node.js (or any CommonJS env).');\n        } else if (typeof printLikeFunction !== 'function') {\n            throw new Error('should pass print-like function');\n        }\n\n        var qu = qunitObject,\n            tap = {},\n            deprecateOption = function deprecateOption (optionName, fallback) {\n                // option deprecation and fallback function\n                if (!options || typeof options !== 'object') {\n                    return;\n                }\n                if (typeof options[optionName] === 'undefined') {\n                    return;\n                }\n                printLikeFunction('# WARNING: Option \"' + optionName + '\" is deprecated and will be removed in future version.');\n                fallback(options[optionName]);\n            },\n            targetEvents = [\n                'moduleStart',\n                'testStart',\n                'log',\n                'testDone',\n                'done'\n            ],\n            registeredCallbacks = {},\n            explain = (function () {\n                if (typeof qu.dump !== 'undefined' && typeof qu.dump.parse === 'function') {\n                    return function explain (obj) {\n                        return qu.dump.parse(obj);\n                    };\n                }\n                if (typeof qu.jsDump !== 'undefined' && typeof qu.jsDump.parse === 'function') {\n                    return function explain (obj) {\n                        return qu.jsDump.parse(obj);\n                    };\n                }\n                return noop;\n            })();\n\n        tap.config = extend(\n            {\n                initialCount: 1,\n                showModuleNameOnFailure: true,\n                showTestNameOnFailure: true,\n                showExpectationOnFailure: true,\n                showSourceOnFailure: true\n            },\n            options\n        );\n        deprecateOption('noPlan', function (flag) {\n            printLikeFunction('# Now QUnit-TAP works as with \"noPlan: true\" by default. If you want to delare plan explicitly, please use \"QUnit.config.requireExpects\" option instead.');\n            tap.config.noPlan = flag;\n        });\n        deprecateOption('count', function (count) {\n            tap.config.initialCount = (count + 1);\n        });\n        deprecateOption('showDetailsOnFailure', function (flag) {\n            tap.config.showModuleNameOnFailure = flag;\n            tap.config.showTestNameOnFailure = flag;\n            tap.config.showExpectationOnFailure = flag;\n            tap.config.showSourceOnFailure = flag;\n        });\n        tap.VERSION = qunitTapVersion;\n        tap.puts = printLikeFunction;\n        tap.count = tap.config.initialCount - 1;\n        tap.expectedCount = tap.config.initialCount - 1;\n\n        function isEnabled (configName) {\n            return tap.config[configName];\n        }\n\n        function formatDetails (details) {\n            if (isPassed(details)) {\n                return details.message;\n            }\n            var desc = [];\n            if (details.message) {\n                desc.push(details.message);\n            }\n            if (isEnabled('showExpectationOnFailure') && !(isAssertOkFailed(details))) {\n                render(desc, 'expected', details.expected, explain);\n                render(desc, 'got', details.actual, explain);\n            }\n            renderIf(isEnabled('showTestNameOnFailure'), desc, 'test', details.name, noop);\n            renderIf(isEnabled('showModuleNameOnFailure'), desc, 'module', details.module, noop);\n            renderIf(isEnabled('showSourceOnFailure'), desc, 'source', details.source, ltrim);\n            return desc.join(', ');\n        }\n\n        function printPlanLine (toCount) {\n            tap.puts(tap.config.initialCount + '..' + toCount);\n        }\n\n        function unsubscribeEvent (eventName) {\n            var listeners;\n            if (indexOf(targetEvents, eventName) === -1) {\n                return;\n            }\n            listeners = qu.config[eventName];\n            if (typeof listeners === 'undefined') {\n                return;\n            }\n            removeElement(listeners, registeredCallbacks[eventName]);\n        }\n\n        function unsubscribeEvents (eventNames) {\n            var i;\n            for (i = 0; i < eventNames.length; i += 1) {\n                unsubscribeEvent(eventNames[i]);\n            }\n        }\n\n        tap.explain = explain;\n\n        tap.note = function note (obj) {\n            tap.puts(escapeLineEndings('# ' + obj));\n        };\n\n        tap.diag = function diag (obj) {\n            tap.note(obj);\n            return false;\n        };\n\n        tap.moduleStart = function moduleStart (arg) {\n            var name = (typeof arg === 'string') ? arg : arg.name;\n            tap.note('module: ' + name);\n        };\n\n        tap.testStart = function testStart (arg) {\n            var name = (typeof arg === 'string') ? arg : arg.name;\n            tap.note('test: ' + name);\n        };\n\n        tap.log = function log (details) {\n            var testLine = '';\n            tap.count += 1;\n            if (isFailed(details)) {\n                testLine += 'not ';\n            }\n            testLine += ('ok ' + tap.count);\n            tap.puts(formatTestLine(testLine, formatDetails(details)));\n        };\n\n        tap.testDone = function testDone () {\n            if (isPlanRequired(qu.config)) {\n                tap.expectedCount += qu.config.current.expected;\n            }\n        };\n\n        tap.done = function done () {\n            if (typeof tap.config.noPlan !== 'undefined' && !(tap.config.noPlan)) {\n                // Do nothing until removal of 'noPlan' option.\n            } else if (isPlanRequired(qu.config)) {\n                printPlanLine(tap.expectedCount);\n            } else {\n                printPlanLine(tap.count);\n            }\n        };\n\n        tap.unsubscribe = function unsubscribe () {\n            if (typeof qu.config === 'undefined') {\n                return;\n            }\n            if (arguments.length === 0) {\n                unsubscribeEvents(targetEvents);\n            } else {\n                unsubscribeEvents(slice.apply(arguments));\n            }\n        };\n\n        (function () {\n            var appendCallback = createCallbackAppenderFor(qu),\n                eventName, i, callback;\n            for (i = 0; i < targetEvents.length; i += 1) {\n                eventName = targetEvents[i];\n                callback = appendCallback(qu, tap, eventName);\n                registeredCallbacks[eventName] = callback;\n            }\n        })();\n\n        return tap;\n    }\n\n    qunitTap.qunitTap = function () {\n        throw new Error('[BC BREAK] Since 1.4.0, QUnit-TAP exports single qunitTap function as module.exports. Therefore, require(\"qunit-tap\") returns qunitTap function itself. Please fix your code if you are using Node.js (or any CommonJS env).');\n    };\n\n    // using substack pattern (export single function)\n    return qunitTap;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/qunit-tap/lib/qunit-tap.js\n// module id = 134\n// module chunks = 2","'use strict';\n\n/* global QUnit, qunitTap */\n\nvar qunit_started = false;\n\n/* Always use explicit start */\nQUnit.config.autostart = false;\n\n/*\n * HACK: phantomjs doesn't handle uncaught exceptions as it should if\n * window.onerror is non-null, even when that handler returns false\n * (expecting that the browser default behavior will occur).\n *\n * So remove the qunit window.onerror handler until the tests actually\n * start, and any errors become part of the test suite results.\n */\nvar qunit_onerror = window.onerror;\nwindow.onerror = null;\nQUnit.begin(function() {\n    window.onerror = function(error, file, line) {\n        var ret = false;\n        if (qunit_onerror)\n            ret = qunit_onerror(error, file, line);\n\n        /*\n         * If a global exception happens during an async test\n         * then that test won't be able to call the start() function\n         * to move to the next test, so call it here.\n         */\n        if (QUnit.config.current && QUnit.config.current.async)\n            QUnit.start();\n\n        return ret;\n    };\n});\n\nQUnit.moduleStart(function() {\n    qunit_started = true;\n});\n\nQUnit.done(function() {\n    console.log(\"phantom-tap-done\");\n    window.onerror = null;\n});\n/*\n * Now initialize qunit-tap\n *\n * When not running under tap-phantom this stuff will just show up in\n * the console. We print out a special canary at the end of the tests\n * so that tap-phantom can know when the testing is done.\n *\n * In addition double check for a test file that doesn't properly call\n * QUnit.start() after its done setting up its tests.\n *\n * We also want to insert the current test name into all tap lines.\n */\nvar tap_regex = /^((not )?ok [0-9]+ (- )?)(.*)$/;\nqunitTap(QUnit, function() {\n    if (arguments.length == 1 && QUnit.config.current) {\n        var match = tap_regex.exec(arguments[0]);\n        if (match) {\n            console.log(match[1] + QUnit.config.current.testName + \": \" + match[4]);\n            return;\n        }\n    }\n    console.log.apply(console, arguments);\n});\n\nwindow.setTimeout(function() {\n    if (!qunit_started) {\n        console.log(\"QUnit not started by test\");\n        console.log(\"phantom-tap-error\");\n    }\n}, 20000);\n\nwindow.tests_included = true;\n\nif (module && module.exports)\n    module.exports = QUnit;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/qunit-config.js\n// module id = 135\n// module chunks = 2"],"sourceRoot":""}