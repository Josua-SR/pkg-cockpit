!function(e) {
    function t(a) {
        if (n[a]) return n[a].exports;
        var o = n[a] = {
            exports: {},
            id: a,
            loaded: !1
        };
        return e[a].call(o.exports, o, o.exports, t), o.loaded = !0, o.exports;
    }
    var n = {};
    return t.m = e, t.c = n, t.p = "", t(0);
}([ function(e, t, n) {
    n(1), e.exports = n(9);
}, function(e, t, n) {
    "use strict";
    function a() {
        x(".accounts-self-privileged").addClass("accounts-privileged"), x(".accounts-privileged:not('.accounts-current-account')").update_privileged(L, C.format(A("The user <b>$0</b> is not permitted to modify accounts"), L.user ? L.user.name : ""), "right"), 
        x(".accounts-privileged").find("input").attr("disabled", L.allowed === !1 || "root" === x("#account-user-name").text()), 
        x(".accounts-current-account").update_privileged({
            allowed: !0
        }, ""), x(".accounts-current-account").find("input").attr("disabled", !1), "root" === x("#account-user-name").text() && L.allowed && (x("#account-delete").update_privileged({
            allowed: !1
        }, A("Unable to delete root account")), x("#account-real-name-wrapper").update_privileged({
            allowed: !1
        }, A("Unable to rename root account")));
    }
    function o(e, t) {
        var n, a = [ /.*\(current\) UNIX password: $/ ], o = [ /.*New password: $/, /.*Retype new password: $/ ], r = [ /.*BAD PASSWORD:.*/ ], s = x.Deferred(), i = "", c = !1, u = A("Old password not accepted"), l = window.setTimeout(function() {
            u = A("Prompting via passwd timed out"), d.close("terminated");
        }, 1e4), d = C.spawn([ "/usr/bin/passwd" ], {
            pty: !0,
            environ: [ "LC_ALL=C" ],
            err: "out"
        }).always(function() {
            window.clearInterval(l);
        }).done(function() {
            s.resolve();
        }).fail(function(e) {
            "ProcessError" == e.constructor.name && (e = new Error(u)), s.reject(e);
        }).stream(function(s) {
            for (i += s, n = 0; n < a.length; n++) if (a[n].test(i)) return i = "", void d.input(e + "\n", !0);
            for (n = 0; n < o.length; n++) if (o[n].test(i)) return i = "", d.input(t + "\n", !0), 
            u = A("Failed to change password"), void (c = !0);
            for (n = 0; c && n < r.length; n++) if (r[n].test(i)) return void (u = A("New password was not accepted"));
        });
        return s.promise();
    }
    function r(e, t) {
        var n = x.Deferred();
        return C.spawn([ "chpasswd" ], {
            superuser: "require",
            err: "out"
        }).input(e + ":" + t).done(function() {
            n.resolve();
        }).fail(function(e, t) {
            "ProcessError" == e.constructor.name && (console.log(e), e = t ? new Error(t) : new Error(A("Failed to change password"))), 
            n.reject(e);
        }), n.promise();
    }
    function s(e) {
        function t() {
            return a == e.length ? void n.resolve() : (e[a]().done(function() {
                t();
            }).fail(function(e) {
                n.reject(e);
            }), void (a += 1));
        }
        var n = x.Deferred(), a = 0;
        return "function" == typeof e && (e = arguments), t(), n.promise();
    }
    function i(e) {
        if (!e) return console.warn("Couldn't read /etc/passwd"), [];
        for (var t, n = [], a = e.split("\n"), o = 0; o < a.length; o++) a[o] && (t = a[o].split(":"), 
        n.push({
            name: t[0],
            password: t[1],
            uid: parseInt(t[2], 10),
            gid: parseInt(t[3], 10),
            gecos: t[4].replace(/,*$/, ""),
            home: t[5],
            shell: t[6]
        }));
        return n;
    }
    function c(e) {
        if (e = (e || "").trim(), !e) return console.warn("Couldn't read /etc/group"), [];
        for (var t, n = [], a = e.split("\n"), o = 0; o < a.length; o++) a[o] && (t = a[o].split(":"), 
        n.push({
            name: t[0],
            password: t[1],
            gid: parseInt(t[2], 10),
            userlist: t[3].split(",")
        }));
        return n;
    }
    function u(e) {
        var t = x.Deferred();
        return C.spawn("/usr/bin/pwscore", {
            err: "message"
        }).input(e).done(function(e) {
            var n = parseInt(e, 10);
            0 === n ? t.reject(new Error(A("Password is too weak"))) : n <= 33 ? t.resolve("weak") : n <= 66 ? t.resolve("okay") : n <= 99 ? t.resolve("good") : t.resolve("excellent");
        }).fail(function(e) {
            t.reject(new Error(e.message || A("Password is not acceptable")));
        }), t.promise();
    }
    function l(e, t) {
        for (var n = 0; t.userlist && n < t.userlist.length; n++) if (t.userlist[n] === e) return !0;
        return !1;
    }
    function d(e) {
        console.warn("Unexpected error", e);
    }
    function h() {
        this._init();
    }
    function p() {
        this._init();
    }
    function f(e) {
        this._init(e);
    }
    function g() {
        this._init();
    }
    function m(e) {
        this._init(e);
    }
    function v(e, t) {
        t ? (x("#error-popup-title").text(e), x("#error-popup-message").text(t)) : (x("#error-popup-title").text(A("Error")), 
        x("#error-popup-message").text(e)), x('.modal[role="dialog"]').modal("hide"), x("#error-popup").modal("show");
    }
    function w(e) {
        v(A("Unexpected error"), e.message || e);
    }
    function y(e) {
        e.setup(), x("#" + e.id).on("show.bs.modal", function() {
            e.enter();
        }).on("shown.bs.modal", function() {
            e.show();
        }).on("hidden.bs.modal", function() {
            e.leave();
        });
    }
    function k(e, t) {
        e._entered_ && e.leave(), e.enter(t), e._entered_ = !0, x("#" + e.id).show(), e.show();
    }
    function _(e) {
        x("#" + e.id).hide(), e._entered_ && (e.leave(), e._entered_ = !1);
    }
    function b() {
        var e, t;
        C.user().done(function(n) {
            function a() {
                var n = C.location.path;
                0 === n.length ? (_(t), k(e)) : 1 === n.length ? (_(e), k(t, n[0])) : (console.warn("not a users location: " + n), 
                C.location = ""), x("body").show();
            }
            C.translate(), e = new h(), e.setup(), t = new f(n), t.setup(), y(new p()), y(new g()), 
            y(new m(n)), x(C).on("locationchanged", a), a();
        });
    }
    var x = n(2), C = n(3), z = n(4), E = n(5);
    n(8), C.translate();
    var A = C.gettext, $ = C.gettext, L = C.permission({
        admin: !0
    });
    x(L).on("changed", a), h.prototype = {
        _init: function() {
            this.id = "accounts";
        },
        getTitle: function() {
            return $("page-title", "Accounts");
        },
        show: function() {},
        setup: function() {
            x("#accounts-create").on("click", x.proxy(this, "create"));
        },
        enter: function() {
            function e(e) {
                t.accounts = i(e), t.update();
            }
            var t = this;
            this.handle_passwd = C.file("/etc/passwd"), this.handle_passwd.read().done(e).fail(d), 
            this.handle_passwd.watch(e);
        },
        leave: function() {
            this.handle_passwd && (this.handle_passwd.close(), this.handle_passwd = null);
        },
        update: function() {
            var e = x("#accounts-list");
            this.accounts.sort(function(e, t) {
                return e.gecos ? t.gecos ? e.gecos.localeCompare(t.gecos) : 1 : -1;
            }), e.empty();
            for (var t = 0; t < this.accounts.length; t++) if (!(this.accounts[t].uid < 1e3 && 0 !== this.accounts[t].uid || this.accounts[t].shell.match(/^(\/usr)?\/sbin\/nologin/) || "/bin/false" === this.accounts[t].shell)) {
                var n = x("<div/>", {
                    class: "cockpit-account-pic pficon pficon-user"
                }), a = x("<div/>", {
                    class: "cockpit-account"
                }).append(n, x("<div/>", {
                    class: "cockpit-account-real-name"
                }).text(this.accounts[t].gecos), x("<div/>", {
                    class: "cockpit-account-user-name"
                }).text(this.accounts[t].name));
                a.on("click", x.proxy(this, "go", this.accounts[t].name)), e.append(a);
            }
        },
        create: function() {
            p.accounts = this.accounts, x("#accounts-create-dialog").modal("show");
        },
        go: function(e) {
            C.location.go([ e ]);
        }
    }, p.prototype = {
        _init: function() {
            this.id = "accounts-create-dialog", this.username_dirty = !1;
        },
        show: function() {},
        setup: function() {
            var e = this;
            x("#accounts-create-cancel").on("click", x.proxy(this, "cancel")), x("#accounts-create-create").on("click", x.proxy(this, "create")), 
            x("#accounts-create-dialog .check-passwords").on("keydown change", x.proxy(this, "validate")), 
            x("#accounts-create-real-name").on("input", x.proxy(this, "suggest_username")), 
            x("#accounts-create-user-name").on("input", function() {
                e.username_dirty = !0;
            });
        },
        enter: function() {
            x("#accounts-create-user-name").val(""), x("#accounts-create-real-name").val(""), 
            x("#accounts-create-pw1").val(""), x("#accounts-create-pw2").val(""), x("#accounts-create-locked").prop("checked", !1), 
            x("#accounts-create-password-meter").removeClass("weak okay good excellent"), x("#accounts-create-dialog").dialog("failure", null), 
            this.username_dirty = !1;
        },
        leave: function() {},
        validate: function() {
            var e, t = [], n = x("#accounts-create-pw1").val();
            x("#accounts-create-pw2").val() != n && (e = new Error(A("The passwords do not match")), 
            e.target = "#accounts-create-pw2", t.push(e)), x("#accounts-create-user-name").val() || (e = new Error(A("No user name specified")), 
            e.target = "#accounts-create-user-name", t.push(e)), x("#accounts-create-real-name").val() || (e = new Error(A("No real name specified")), 
            e.target = "#accounts-create-real-name", t.push(e));
            var a = x.Deferred();
            t.length ? a.reject(t) : a.resolve();
            var o = u(n).fail(function(e) {
                e.target = "#accounts-create-pw2";
            }).always(function(e) {
                var t = "resolved" == this.state() ? e : "weak", a = x("#accounts-create-password-meter").removeClass("weak okay good excellent");
                n && a.addClass(t);
                var o = x("#accounts-create-password-meter-message");
                "excellent" == t ? o.text(A("Excellent password")) : o.text("");
            }), r = this.check_username().fail(function(e) {
                e.target = "#accounts-create-user-name";
            });
            return C.all(a, o, r);
        },
        cancel: function() {
            x("#accounts-create-dialog").modal("hide");
        },
        create: function() {
            var e = [ function() {
                var e = [ "/usr/sbin/useradd" ];
                return x("#accounts-create-real-name").val() && (e.push("-c"), e.push(x("#accounts-create-real-name").val())), 
                e.push(x("#accounts-create-user-name").val()), C.spawn(e, {
                    superuser: "require",
                    err: "message"
                });
            } ];
            x("#accounts-create-locked").prop("checked") && e.push(function() {
                return C.spawn([ "/usr/sbin/usermod", x("#accounts-create-user-name").val(), "--lock" ], {
                    superuser: "require",
                    err: "message"
                });
            }), e.push(function() {
                return r(x("#accounts-create-user-name").val(), x("#accounts-create-pw1").val());
            });
            var t = this.validate().fail(function(e) {
                x("#accounts-create-password-meter-message").hide(), x("#accounts-create-dialog").dialog("failure", e);
            }).done(function() {
                t = s(e), x("#accounts-create-dialog").dialog("promise", t);
            });
            x("#accounts-create-dialog").dialog("wait", t);
        },
        is_valid_char_username: function(e) {
            return e >= "a" && e <= "z" || e >= "A" && e <= "Z" || e >= "0" && e <= "9" || "." == e || "_" == e || "-" == e;
        },
        check_username: function() {
            for (var e = x.Deferred(), t = x("#accounts-create-user-name").val(), n = 0; n < t.length; n++) if (!this.is_valid_char_username(t[n])) return e.reject(new Error(A("The user name can only consist of letters from a-z, digits, dots, dashes and underscores."))), 
            e.promise();
            for (var a = 0; a < p.accounts.length; a++) if (p.accounts[a].name == t) return e.reject(new Error(A("This user name already exists"))), 
            e.promise();
            return e.resolve(), e.promise();
        },
        suggest_username: function() {
            function e(e) {
                var t = {
                    a: "[àáâãäå]",
                    ae: "æ",
                    c: "čç",
                    d: "ď",
                    e: "[èéêë]",
                    i: "[íìïî]",
                    l: "[ĺľ]",
                    n: "[ňñ]",
                    o: "[òóôõö]",
                    oe: "œ",
                    r: "[ŕř]",
                    s: "š",
                    t: "ť",
                    u: "[ùúůûűü]",
                    y: "[ýÿ]",
                    z: "ž"
                };
                for (var a in t) e = e.replace(new RegExp(t[a], "g"), a);
                for (var o = 0; o < e.length; ) n.is_valid_char_username(e[o]) ? o++ : e = e.substr(0, o) + e.substr(o + 1);
                return e;
            }
            function t(t) {
                var n = "", a = t.split(" ");
                return 1 === a.length ? n = a[0].toLowerCase() : a.length > 1 && (n = a[0][0].toLowerCase() + a[a.length - 1].toLowerCase()), 
                e(n);
            }
            var n = this;
            if (!this.username_dirty) {
                var a = t(x("#accounts-create-real-name").val());
                x("#accounts-create-user-name").val(a);
            }
        }
    }, f.prototype = {
        _init: function(e) {
            this.id = "account", this.section_id = "accounts", this.roles = [], this.role_template = x("#role-entry-tmpl").html(), 
            z.parse(this.role_template), this.keys_template = x("#authorized-keys-tmpl").html(), 
            z.parse(this.keys_template), this.authorized_keys = null, this.user = e;
        },
        getTitle: function() {
            return $("page-title", "Accounts");
        },
        show: function() {
            var e = this;
            x("#account").toggle(!!e.account_id), x("#account-failure").toggle(!e.account_id);
        },
        setup: function() {
            x("#account .breadcrumb a").on("click", function() {
                C.location.go("/");
            }), x("#account-real-name").on("change", x.proxy(this, "change_real_name")), x("#account-real-name").on("keydown", x.proxy(this, "real_name_edited")), 
            x("#account-set-password").on("click", x.proxy(this, "set_password")), x("#account-delete").on("click", x.proxy(this, "delete_account")), 
            x("#account-logout").on("click", x.proxy(this, "logout_account")), x("#account-locked").on("change", x.proxy(this, "change_locked", !0, null)), 
            x("#add-authorized-key").on("click", x.proxy(this, "add_key")), x("#add-authorized-key-dialog").on("hidden.bs.modal", function() {
                x("#authorized-keys-text").val("");
            });
        },
        setup_keys: function(e, t) {
            var n = this;
            n.authorized_keys || (n.authorized_keys = E.instance(e, t), x(n.authorized_keys).on("changed", function() {
                n.update();
            }));
        },
        remove_key: function(e) {
            if (this.authorized_keys) {
                var t = x(e.target).data("raw");
                x(".account-remove-key").prop("disabled", !0), this.authorized_keys.remove_key(t).fail(w).always(function() {
                    x(".account-remove-key").prop("disabled", !1);
                });
            }
        },
        add_key: function() {
            if (!this.authorized_keys) return void x("#add-authorized-key-dialog").modal("hide");
            var e = x("#authorized-keys-text").val(), t = this.authorized_keys.add_key(e);
            x("#add-authorized-key-dialog").dialog("promise", t);
        },
        get_user: function() {
            function e(e) {
                for (var n = i(e), a = 0; a < n.length; a++) n[a].name === t.account_id && (t.account = n[a], 
                t.setup_keys(t.account.name, t.account.home), t.update());
            }
            var t = this;
            this.handle_passwd = C.file("/etc/passwd"), this.handle_passwd.read().done(e).fail(d), 
            this.handle_passwd.watch(e);
        },
        get_roles: function() {
            function e(e) {
                for (var a = c(e); t.roles.length > 0; ) t.roles.pop();
                for (var o = 0; o < a.length; o++) {
                    var r = a[o].name;
                    n[r] && t.roles.push({
                        name: r,
                        desc: n[r],
                        id: a[o].gid,
                        member: l(t.account_id, a[o])
                    });
                }
                x(t).triggerHandler("roles"), t.update();
            }
            var t = this, n = {
                wheel: A("Server Administrator"),
                sudo: A("Server Administrator"),
                docker: A("Container Administrator")
            };
            this.handle_groups = C.file("/etc/group"), this.handle_groups.read().done(e).fail(d), 
            this.handle_groups.watch(e);
        },
        get_last_login: function() {
            function e(e) {
                return e = e.split("\n")[1], 0 === e.length ? null : (e = e.split("   "), e[e.length - 1].indexOf("**Never logged in**") > -1 ? null : new Date(e[e.length - 1]));
            }
            var t = this;
            C.spawn([ "/usr/bin/lastlog", "-u", t.account_id ], {
                environ: [ "LC_ALL=C" ]
            }).done(function(n) {
                t.lastLogin = e(n), t.update();
            }).fail(function() {
                t.lastLogin = null, t.update();
            });
        },
        get_locked: function(e) {
            function t(e) {
                var t = e.split(" ")[1];
                return t && ("LK" == t || "L" == t);
            }
            e = "undefined" == typeof e || e;
            var n = x.Deferred(), a = this;
            return C.spawn([ "/usr/bin/passwd", "-S", a.account_id ], {
                environ: [ "LC_ALL=C" ],
                superuser: "require"
            }).done(function(o) {
                a.locked = t(o), e && a.update(), n.resolve(a.locked);
            }).fail(function(e) {
                n.reject(e);
            }), n.promise();
        },
        get_logged: function() {
            function e(e) {
                t.logged = e.length > 0, t.logged ? t.update() : t.get_last_login();
            }
            var t = this;
            return t.account_id ? void C.spawn([ "/usr/bin/w", "-sh", t.account_id ]).done(e).fail(d) : (t.logged = !1, 
            void t.update());
        },
        enter: function(e) {
            this.account_id = e, x("#account-real-name").removeAttr("data-dirty"), this.get_user(), 
            this.get_roles(), this.get_locked(), this.get_logged();
        },
        leave: function() {
            this.handle_passwd && (this.handle_passwd.close(), this.handle_passwd = null), this.handle_groups && (this.handle_groups.close(), 
            this.handle_groups = null), this.authorized_keys && (x(this.authorized_keys).off(), 
            this.authorized_keys.close(), this.authorized_keys = null), x("#account-failure").hide();
        },
        update: function() {
            if (this.account) {
                x("#account").show(), x("#account-failure").hide();
                var e = x("#account-real-name"), t = this.account.gecos;
                if (t || (t = this.account.name), x("#account-logout").attr("disabled", !this.logged), 
                x("#account-title").text(t), e.attr("data-dirty") || x("#account-real-name").val(this.account.gecos), 
                x("#account-user-name").text(this.account.name), this.logged ? x("#account-last-login").text(A("Logged In")) : this.lastLogin ? x("#account-last-login").text(this.lastLogin.toLocaleString()) : x("#account-last-login").text(A("Never")), 
                "undefined" != typeof this.locked && 0 !== this.account.uid ? (x("#account-locked").prop("checked", this.locked), 
                x("#account-locked").parents("tr").show()) : x("#account-locked").parents("tr").hide(), 
                this.authorized_keys) {
                    var n = this.authorized_keys.keys, o = this.authorized_keys.state, r = z.render(this.keys_template, {
                        keys: n,
                        empty: 0 === n.length && "ready" == o,
                        denied: "access-denied" == o,
                        failed: "failed" == o
                    });
                    x("#account-authorized-keys-list").html(r), x(".account-remove-key").on("click", x.proxy(this, "remove_key")), 
                    x("#account-authorized-keys").show();
                } else x("#account-authorized-keys").hide();
                if (0 !== this.account.uid) {
                    var s = z.render(this.role_template, {
                        roles: this.roles
                    });
                    x("#account-change-roles-roles").html(s), x("#account-roles").parents("tr").show(), 
                    x("#account-change-roles-roles :input").on("change", x.proxy(this, "change_role"));
                } else x("#account-roles").parents("tr").hide();
                x("#account .breadcrumb .active").text(t), x(".accounts-self-privileged").toggleClass("accounts-current-account", this.user.id == this.account.uid);
            } else x("#account").hide(), x("#account-failure").show(), x("#account-real-name").val(""), 
            x("#account-user-name").text(""), x("#account-last-login").text(""), x("#account-locked").prop("checked", !1), 
            x("#account-roles").text(""), x("#account .breadcrumb .active").text("?");
            a();
        },
        change_role: function(e) {
            var t = x(e.target).data("name"), n = x(e.target).data("gid");
            t && n && this.account.name && (x(e.target).prop("checked") ? C.spawn([ "/usr/sbin/usermod", this.account.name, "-G", n, "-a" ], {
                superuser: "require",
                err: "message"
            }).fail(w) : C.spawn([ "/usr/bin/gpasswd", "-d", this.account.name, t ], {
                superuser: "require",
                err: "message"
            }).fail(w));
        },
        real_name_edited: function() {
            x("#account-real-name").attr("data-dirty", "true");
        },
        check_role_for_self_mod: function() {
            return this.account.name == this.user.name || L.allowed !== !1;
        },
        change_real_name: function() {
            var e = this, t = x("#account-real-name");
            if (t.attr("data-dirty", "true"), !e.check_role_for_self_mod()) return void e.update();
            var n = t.val();
            C.spawn([ "/usr/sbin/usermod", e.account.name, "--comment", n ], {
                superuser: "try",
                err: "message"
            }).done(function(a) {
                e.account.gecos = n, e.update(), t.removeAttr("data-dirty");
            }).fail(w);
        },
        change_locked: function(e, t) {
            t = null !== t ? t : x("#account-locked").prop("checked");
            var n = this;
            C.spawn([ "/usr/sbin/usermod", this.account.name, t ? "--lock" : "--unlock" ], {
                superuser: "require",
                err: "message"
            }).done(function() {
                n.get_locked(!1).done(function(a) {
                    e && t !== a ? (console.log("Account locked state doesn't match desired value, trying again."), 
                    n.change_locked(!1, t)) : n.update();
                });
            }).fail(w);
        },
        set_password: function() {
            this.check_role_for_self_mod() && (m.user_name = this.account.name, x("#account-set-password-dialog").modal("show"));
        },
        delete_account: function() {
            g.user_name = this.account.name, x("#account-confirm-delete-dialog").modal("show");
        },
        logout_account: function() {
            C.spawn([ "/usr/bin/loginctl", "terminate-user", this.account.name ], {
                superuser: "try",
                err: "message"
            }).done(x.proxy(this, "get_logged")).fail(w);
        }
    };
    g.prototype = {
        _init: function() {
            this.id = "account-confirm-delete-dialog";
        },
        show: function() {},
        setup: function() {
            x("#account-confirm-delete-apply").on("click", x.proxy(this, "apply"));
        },
        enter: function() {
            x("#account-confirm-delete-files").prop("checked", !1), x("#account-confirm-delete-title").text(C.format(A("Delete $0"), g.user_name));
        },
        leave: function() {},
        apply: function() {
            var e = [ "/usr/sbin/userdel" ];
            x("#account-confirm-delete-files").prop("checked") && e.push("-r"), e.push(g.user_name), 
            C.spawn(e, {
                superuser: "require",
                err: "message"
            }).done(function() {
                x("#account-confirm-delete-dialog").modal("hide"), C.location.go("/");
            }).fail(w);
        }
    }, m.prototype = {
        _init: function(e) {
            this.id = "account-set-password-dialog", this.user = e;
        },
        show: function() {
            this.user.name !== m.user_name ? (x("#account-set-password-old").parents("tr").toggle(!1), 
            x("#account-set-password-pw1").focus()) : (x("#account-set-password-old").parents("tr").toggle(!0), 
            x("#account-set-password-old").focus());
        },
        setup: function() {
            x("#account-set-password-apply").on("click", x.proxy(this, "apply")), x("#account-set-password-dialog .check-passwords").on("keydown change", x.proxy(this, "validate"));
        },
        enter: function() {
            x("#account-set-password-old").val(""), x("#account-set-password-pw1").val(""), 
            x("#account-set-password-pw2").val(""), x("#account-set-password-meter").removeClass("weak okay good excellent"), 
            x("#account-set-password-dialog").dialog("failure", null);
        },
        leave: function() {},
        validate: function() {
            var e, t = x("#account-set-password-pw1").val();
            x("#account-set-password-pw2").val() != t && (e = new Error(A("The passwords do not match")), 
            e.target = "#account-set-password-pw2");
            var n = x.Deferred();
            e ? n.reject(e) : n.resolve();
            var a = u(t).fail(function(e) {
                e.target = "#account-set-password-pw2";
            }).always(function(e) {
                var n = "resolved" == this.state() ? e : "weak", a = x("#account-set-password-meter").removeClass("weak okay good excellent");
                t && a.addClass(n);
                var o = x("#account-set-password-meter-message");
                "excellent" == n ? o.text(A("Excellent password")) : o.text("");
            });
            return C.all(n, a);
        },
        apply: function() {
            var e = this, t = this.validate().done(function() {
                var n = m.user_name, a = x("#account-set-password-pw1").val();
                t = e.user.name === n ? o(x("#account-set-password-old").val(), a) : r(n, a), x("#account-set-password-dialog").dialog("promise", t);
            }).fail(function(e) {
                x("#account-set-password-meter-message").hide(), x("#account-set-password-dialog").dialog("failure", e);
            });
            x("#account-set-password-dialog").dialog("wait", t);
        }
    }, x(b);
}, function(e, t) {
    e.exports = jQuery;
}, function(e, t) {
    e.exports = cockpit;
}, function(e, t, n) {
    var a, o;
    /*!
	 * mustache.js - Logic-less {{mustache}} templates with JavaScript
	 * http://github.com/janl/mustache.js
	 */
    !function(r, s) {
        if ("object" == typeof t && t) s(t); else {
            var i = {};
            s(i), a = i, o = "function" == typeof a ? a.call(t, n, t, e) : a, !(void 0 !== o && (e.exports = o));
        }
    }(this, function(e) {
        function t(e, t) {
            return y.call(e, t);
        }
        function n(e) {
            return !t(g, e);
        }
        function a(e) {
            return "function" == typeof e;
        }
        function o(e) {
            return e.replace(/[\-\[\]{}()*+?.,\\\^$|#\s]/g, "\\$&");
        }
        function r(e) {
            return String(e).replace(/[&<>"'\/]/g, function(e) {
                return b[e];
            });
        }
        function s(e) {
            if (!_(e) || 2 !== e.length) throw new Error("Invalid tags: " + e);
            return [ new RegExp(o(e[0]) + "\\s*"), new RegExp("\\s*" + o(e[1])) ];
        }
        function i(t, a) {
            function r() {
                if (E && !A) for (;z.length; ) delete C[z.pop()]; else z = [];
                E = !1, A = !1;
            }
            a = a || e.tags, t = t || "", "string" == typeof a && (a = a.split(f));
            for (var i, d, h, g, y, k, _ = s(a), b = new l(t), x = [], C = [], z = [], E = !1, A = !1; !b.eos(); ) {
                if (i = b.pos, h = b.scanUntil(_[0])) for (var $ = 0, L = h.length; $ < L; ++$) g = h.charAt($), 
                n(g) ? z.push(C.length) : A = !0, C.push([ "text", g, i, i + 1 ]), i += 1, "\n" === g && r();
                if (!b.scan(_[0])) break;
                if (E = !0, d = b.scan(w) || "name", b.scan(p), "=" === d ? (h = b.scanUntil(m), 
                b.scan(m), b.scanUntil(_[1])) : "{" === d ? (h = b.scanUntil(new RegExp("\\s*" + o("}" + a[1]))), 
                b.scan(v), b.scanUntil(_[1]), d = "&") : h = b.scanUntil(_[1]), !b.scan(_[1])) throw new Error("Unclosed tag at " + b.pos);
                if (y = [ d, h, i, b.pos ], C.push(y), "#" === d || "^" === d) x.push(y); else if ("/" === d) {
                    if (k = x.pop(), !k) throw new Error('Unopened section "' + h + '" at ' + i);
                    if (k[1] !== h) throw new Error('Unclosed section "' + k[1] + '" at ' + i);
                } else "name" === d || "{" === d || "&" === d ? A = !0 : "=" === d && (_ = s(a = h.split(f)));
            }
            if (k = x.pop()) throw new Error('Unclosed section "' + k[1] + '" at ' + b.pos);
            return u(c(C));
        }
        function c(e) {
            for (var t, n, a = [], o = 0, r = e.length; o < r; ++o) t = e[o], t && ("text" === t[0] && n && "text" === n[0] ? (n[1] += t[1], 
            n[3] = t[3]) : (a.push(t), n = t));
            return a;
        }
        function u(e) {
            for (var t, n, a = [], o = a, r = [], s = 0, i = e.length; s < i; ++s) switch (t = e[s], 
            t[0]) {
              case "#":
              case "^":
                o.push(t), r.push(t), o = t[4] = [];
                break;

              case "/":
                n = r.pop(), n[5] = t[2], o = r.length > 0 ? r[r.length - 1][4] : a;
                break;

              default:
                o.push(t);
            }
            return a;
        }
        function l(e) {
            this.string = e, this.tail = e, this.pos = 0;
        }
        function d(e, t) {
            this.view = null == e ? {} : e, this.cache = {
                ".": this.view
            }, this.parent = t;
        }
        function h() {
            this.cache = {};
        }
        var p = /\s*/, f = /\s+/, g = /\S/, m = /\s*=/, v = /\s*\}/, w = /#|\^|\/|>|\{|&|=|!/, y = RegExp.prototype.test, k = Object.prototype.toString, _ = Array.isArray || function(e) {
            return "[object Array]" === k.call(e);
        }, b = {
            "&": "&amp;",
            "<": "&lt;",
            ">": "&gt;",
            '"': "&quot;",
            "'": "&#39;",
            "/": "&#x2F;"
        };
        l.prototype.eos = function() {
            return "" === this.tail;
        }, l.prototype.scan = function(e) {
            var t = this.tail.match(e);
            if (t && 0 === t.index) {
                var n = t[0];
                return this.tail = this.tail.substring(n.length), this.pos += n.length, n;
            }
            return "";
        }, l.prototype.scanUntil = function(e) {
            var t, n = this.tail.search(e);
            switch (n) {
              case -1:
                t = this.tail, this.tail = "";
                break;

              case 0:
                t = "";
                break;

              default:
                t = this.tail.substring(0, n), this.tail = this.tail.substring(n);
            }
            return this.pos += t.length, t;
        }, d.prototype.push = function(e) {
            return new d(e, this);
        }, d.prototype.lookup = function(e) {
            var t;
            if (e in this.cache) t = this.cache[e]; else {
                for (var n = this; n; ) {
                    if (e.indexOf(".") > 0) {
                        t = n.view;
                        for (var o = e.split("."), r = 0; null != t && r < o.length; ) t = t[o[r++]];
                    } else t = n.view[e];
                    if (null != t) break;
                    n = n.parent;
                }
                this.cache[e] = t;
            }
            return a(t) && (t = t.call(this.view)), t;
        }, h.prototype.clearCache = function() {
            this.cache = {};
        }, h.prototype.parse = function(e, t) {
            var n = this.cache, a = n[e];
            return null == a && (a = n[e] = i(e, t)), a;
        }, h.prototype.render = function(e, t, n) {
            var a = this.parse(e), o = t instanceof d ? t : new d(t);
            return this.renderTokens(a, o, n, e);
        }, h.prototype.renderTokens = function(t, n, o, r) {
            function s(e) {
                return l.render(e, n, o);
            }
            for (var i, c, u = "", l = this, d = 0, h = t.length; d < h; ++d) switch (i = t[d], 
            i[0]) {
              case "#":
                if (c = n.lookup(i[1]), !c) continue;
                if (_(c)) for (var p = 0, f = c.length; p < f; ++p) u += this.renderTokens(i[4], n.push(c[p]), o, r); else if ("object" == typeof c || "string" == typeof c) u += this.renderTokens(i[4], n.push(c), o, r); else if (a(c)) {
                    if ("string" != typeof r) throw new Error("Cannot use higher-order sections without the original template");
                    c = c.call(n.view, r.slice(i[3], i[5]), s), null != c && (u += c);
                } else u += this.renderTokens(i[4], n, o, r);
                break;

              case "^":
                c = n.lookup(i[1]), (!c || _(c) && 0 === c.length) && (u += this.renderTokens(i[4], n, o, r));
                break;

              case ">":
                if (!o) continue;
                c = a(o) ? o(i[1]) : o[i[1]], null != c && (u += this.renderTokens(this.parse(c), n, o, c));
                break;

              case "&":
                c = n.lookup(i[1]), null != c && (u += c);
                break;

              case "name":
                c = n.lookup(i[1]), null != c && (u += e.escape(c));
                break;

              case "text":
                u += i[1];
            }
            return u;
        }, e.name = "mustache.js", e.version = "0.8.1", e.tags = [ "{{", "}}" ];
        var x = new h();
        e.clearCache = function() {
            return x.clearCache();
        }, e.parse = function(e, t) {
            return x.parse(e, t);
        }, e.render = function(e, t, n) {
            return x.render(e, t, n);
        }, e.to_html = function(t, n, o, r) {
            var s = e.render(t, n, o);
            return a(r) ? void r(s) : s;
        }, e.escape = r, e.Scanner = l, e.Context = d, e.Writer = h;
    });
}, function(e, t, n) {
    "use strict";
    !function() {
        function t(e, t) {
            function n(e) {
                d.keys = [], "access-denied" == e.problem ? d.state = e.problem : "not-found" == e.problem ? d.state = "ready" : (d.state = "failed", 
                console.warn("Error proccessing authentication keys: " + e)), a(d).triggerHandler("changed");
            }
            function c(e, t) {
                t === m && (d.keys = e, d.state = "ready", a(d).triggerHandler("changed"));
            }
            function u(e) {
                var t = a.Deferred(), n = [];
                return o.script(r).input(e + "\n").done(function(e) {
                    var t, a, o, r, s = e.split("\n");
                    for (o = 0; o + 1 < s.length; o += 2) r = s[o], a = {
                        raw: s[o + 1]
                    }, n.push(a), t = s[o].trim().match(v), a.valid = !!t && !!a.raw, t && (a.size = t[1], 
                    a.fp = t[2], a.comment = t[3].trim(), "authorized_keys" != a.comment && "no comment" != a.comment || (a.comment = null), 
                    a.algorithm = t[4], !a.comment && a.raw && (a.comment = a.raw.split(" ").splice(0, 2).join(" ") || null));
                }).always(function() {
                    t.resolve(n);
                }), t.promise();
            }
            function l(e, t, a) {
                return m = t, a ? n(a) : e ? void u(e).done(function(e) {
                    c(e, t);
                }) : c([], t);
            }
            var d = this, h = t + "/.ssh", p = h + "/authorized_keys", f = null, g = null, m = null;
            d.keys = [], d.state = "loading";
            var v = /^(\S+)\s+(\S+)\s+(.*)\((\S+)\)$/;
            d.add_key = function(n) {
                var r = a.Deferred();
                return r.notify(i("Validating key")), u(n).done(function(n) {
                    var a = n[0];
                    a && a.valid ? (r.notify(i("Adding key")), o.script(s, [ e, t ], {
                        superuser: "try",
                        err: "message"
                    }).input(a.raw + "\n").done(function() {
                        r.resolve();
                    }).fail(function(e) {
                        r.reject(i("Error saving authorized keys: ") + e);
                    })) : r.reject(i("The key you provided was not valid."));
                }), r.promise();
            }, d.remove_key = function(e) {
                return f.modify(function(t) {
                    var n, a = null, o = [];
                    if (!t) return "";
                    for (o = [], a = t.trim().split("\n"), n = 0; n < a.length; n++) a[n] === e ? e = void 0 : o.push(a[n]);
                    return o.join("\n");
                });
            }, d.close = function() {
                g && g.remove(), f && f.close();
            }, f = o.file(p, {
                superuser: "try"
            }), g = f.watch(l);
        }
        var a = n(2), o = n(3), r = n(6), s = n(7), i = o.gettext;
        e.exports = {
            instance: function(e, n) {
                return new t(e, n);
            }
        };
    }();
}, function(e, t) {
    e.exports = '#!/bin/sh\n\ndir=$(mktemp -d)\ncd "$dir"\n\nprocess()\n{\n    if [ -z "$1" ]; then\n        return\n    fi\n    case "$1" in\n    \\#*)\n        ;;\n    *)\n        echo "$1"> authorized_keys\n        echo "$(LC_ALL=C ssh-keygen -l -f authorized_keys)"\n        echo "$1"\n        ;;\n    esac\n}\n\nsed -e \'$a\\\' | while read -r line; do\n    process "$line"\ndone\n\nrm -f "$dir/authorized_keys"\nrmdir "$dir"\n';
}, function(e, t) {
    e.exports = '#!/bin/sh\n\nset -euf\nmkdir -p "$2/.ssh"\ncd "$2/.ssh"\n\nchown $1 .\n\ntouch authorized_keys 2> /dev/null || true\nchown $1 authorized_keys 2> /dev/null || true\n\nsed -i -e \'$a\\\' authorized_keys\ncat >> authorized_keys\n\nchown $1 authorized_keys 2> /dev/null || true\nchmod 600 authorized_keys\n';
}, function(e, t, n) {
    "use strict";
    !function() {
        function e() {
            return y += 1, "unique" + -new Date() + -y;
        }
        function t(e) {
            e.find(".dialog-error").remove(), e.find(".has-error").removeClass("has-error"), 
            e.find(".dialog-wrapper").off(".dialog-error"), e.off(".dialog-error");
        }
        function a(e, t) {
            var n, a, o = e.parent();
            o.is(".dialog-wrapper") || (o = v("<div class='dialog-wrapper'>").insertBefore(e), 
            n = e.next(), n.is(".bootstrap-select") && n.selectpicker && (n.remove(), a = n.selectpicker), 
            e.remove().appendTo(o), a && a.call(e));
            var r;
            t.message && (r = v("<div class='dialog-error help-block'>").text(t.message)), o.addClass("has-error").append(r), 
            o.hasClass("error-keep") || o.on("keypress.dialog-error change.dialog-error", function() {
                o.removeClass("has-error").find(".dialog-error.help-block").css("visibility", "hidden");
            });
        }
        function o(e, t) {
            var n = v("<div class='alert alert-danger dialog-error'>"), a = t.message || t.toString();
            n.text(a), v("<span class='fa fa-exclamation-triangle'>").prependTo(n), console.warn(a);
            var o = e.find(".modal-footer");
            o.length ? n.prependTo(o) : n.appendTo(e);
        }
        function r(e, n) {
            t(e), 1 == n.length && v.isArray(n[0]) && (n = n[0]);
            var r = !1;
            n.forEach(function(t) {
                var n;
                t && (n = e.find(t.target), n && n.length ? a(n, t) : o(e, t), r = !0);
            }), r && e.on("show.bs.modal.dialog-error", function() {
                t(e);
            });
        }
        function s(e, t) {
            this.promise = e, this.disabled = [], this.handle = t;
        }
        function i(e) {
            var t = e.data("dialog-wait");
            e.data("dialog-wait", null), e.find(".dialog-wait-ct").remove(), e.find(".btn").off(".dialog-wait"), 
            e.off(".dialog-wait"), t && t.disabled.forEach(function(e) {
                e.removeAttr("disabled");
            });
        }
        function c(e, t, n) {
            function a() {
                var n, a = e.data("dialog-wait");
                a && a.promise === t && (i(e), n = t.state(), h || "resolved" == n && a.handle ? e.modal("hide") : "rejected" == n && a.handle && r(e, [ arguments[0] ]));
            }
            function o(n) {
                var a = e.data("dialog-wait");
                a && a.promise === t && ("string" != typeof n && (n = ""), u.text(n));
            }
            if (i(e), !t) return n && e.modal("hide"), e;
            n && r(e, []);
            var c = v("<div class='dialog-wait-ct pull-left'>");
            v("<div class='spinner spinner-sm'>").appendTo(c);
            var u = v("<span>").appendTo(c);
            e.find(".modal-footer button").first().before(c);
            var l = new s(t, n);
            e.data("dialog-wait", l);
            var d = t.cancel || t.close, h = !1, p = e.find(".form-control").add(".btn", e);
            return d && (p = p.not("[data-dismiss]").not(".btn-cancel")), p.each(function() {
                var e = v(this);
                e.attr("disabled") || (l.disabled.push(e), e.attr("disabled", "disabled"));
            }), e.find(".btn[data-dismiss], .btn-cancel").on("click.dialog-wait", function() {
                return h = !0, d && d.apply(t), !1;
            }), e.on("hide.bs.modal.dialog-wait", function() {
                i(e);
            }), t.always(a).progress(o), e;
        }
        function u(t) {
            var n = w.gettext || function(e) {
                return e;
            };
            return t = t.find(".btn-onoff-ct").andSelf().filter(".btn-onoff-ct"), t.each(function(t, a) {
                var o, r, s, i = v(a).attr("data-toggle", "buttons").addClass("btn-group"), c = i.onoff("value"), u = i.find(".btn"), l = i.find("input").first().attr("name") || e();
                for (o = u.length; o < 2; o++) r = v('<input type="radio" autocomplete="off">'), 
                s = document.createTextNode(n(0 === o ? "On" : "Off")), i.append(v('<label class="btn">').append(r, s)), 
                u = null;
                u = u || i.find(".btn"), u.find("input").attr("name", l), d(i, !!c);
            }), t;
        }
        function l(e) {
            return e.find(".btn").first().hasClass("active");
        }
        function d(e, t) {
            return e.each(function(e, n) {
                var a = v(n).find(".btn");
                a.first().toggleClass("active", !!t).find("input").prop("checked", !!t), a.last().toggleClass("active", !t).find("input").prop("checked", !t);
            });
        }
        function h(e, t, n, a) {
            var o = 0;
            a > n ? o = 1 : a < 0 || isNaN(a) ? o = 0 : !isNaN(n) && n > 0 && a >= 0 && (o = a / n), 
            v(t).css("width", 100 * o + "%").next("div").css("margin-left", v(t).css("width")), 
            e.value = o;
        }
        function p(e) {
            h(e, v(e).children("div.slider-bar").first()[0], 1, e.value);
        }
        function f(e) {
            v(e).toggleClass("slider-warning", e.offsetWidth < e.scrollWidth);
        }
        function g(e) {
            v(e).attr("unselectable", "on"), Object.defineProperty(e, "value", {
                get: function() {
                    return parseFloat(this.getAttribute("value"));
                },
                set: function(e) {
                    var t = String(e);
                    t != this.getAttribute("value") && this.setAttribute("value", e);
                }
            }), Object.defineProperty(e, "disabled", {
                get: function() {
                    return !!this.hasAttribute("disabled") && "false" != this.getAttribute("disabled").toLowerCase();
                },
                set: function(e) {
                    this.setAttribute("disabled", e ? "true" : "false");
                }
            }), p(e), f(e), v(e).on("change", function() {
                p(e), v(e).toggleClass("slider-disabled", e.disabled);
            }), e.disabled && v(e).addClass("slider-disabled"), v(e).on("mousedown", function(t) {
                if (e.disabled) return !0;
                var n, a = v(e).offset().left;
                if (v(t.target).hasClass("slider-thumb")) {
                    var o = t.offsetX || t.clientX - v(t.target).offset().left;
                    a += o - v(t.target).outerWidth() / 2, n = v(t.target).parent()[0];
                } else n = v(e).children("div.slider-bar").first()[0], h(e, n, v(e).width(), t.pageX - a), 
                v(e).trigger("change", [ e.value ]), f(e);
                return v(document).on("mousemove.slider", function(t) {
                    return h(e, n, v(e).width(), t.pageX - a), v(e).trigger("change", [ e.value ]), 
                    f(e), !1;
                }).on("mouseup.slider", function(e) {
                    return v(document).off("mousemove.slider").off("mouseup.slider"), !1;
                }), !1;
            });
        }
        function m() {
            v("div.slider").each(function() {
                g(this);
            });
        }
        var v = n(2), w = n(3), y = 0;
        v.fn.dialog = function(e) {
            return "failure" === e ? r(this, Array.prototype.slice.call(arguments, 1)) : "wait" === e ? c(this, arguments[1]) : "promise" === e ? c(this, arguments[1], !0) : void console.warn("unknown dialog action: " + e);
        }, window.addEventListener("hashchange", function() {
            v(".modal").modal("hide");
        }), v.fn.onoff = function(e) {
            return 0 === arguments.length || "refresh" == e ? u(this) : "value" === e ? 1 === arguments.length ? l(this) : d(this, arguments[1]) : "disabled" == e ? this.find(".btn").toggleClass("disabled", arguments[1]) : void console.warn("unknown switch action: " + e);
        }, v.fn.slider = function(e) {
            var t = this;
            return 0 === arguments.length || "refresh" == e ? (t.each(function() {
                g(this);
            }), t) : void console.warn("unknown slider action: " + e);
        }, v(document).ready(m), v.fn.update_privileged = function(e, t, n) {
            var a = e.allowed !== !1, o = this;
            return o.each(function() {
                var e = "allowed-title";
                "undefined" != typeof v(this).data(e) && v(this).data(e) !== !1 || v(this).data(e, v(this).attr("title") || "");
                var o = {
                    html: !0
                };
                n && (o.placement = n), v(this).tooltip(o), v(this).hasClass("disabled") === a && (v(this).toggleClass("disabled", !a).attr("data-original-title", null), 
                a ? v(this).attr("title", v(this).data(e)) : v(this).attr("title", t), v(this).tooltip("fixTitle"));
            }), o;
        };
    }();
}, function(e, t) {} ]);
//# sourceMappingURL=users.min.js.map