{"version":3,"sources":["webpack:///shell/index-stub.min.js","webpack:///webpack/bootstrap 3ffe142167c0147a4006?e633*","webpack:///../pkg/lib/machines.js?2eba","webpack:///external \"jQuery\"?0cb8*","webpack:///external \"cockpit\"?478e*","webpack:///../pkg/lib/credentials.js?db9d","webpack:///../~/process/browser.js?1bd0","webpack:///../pkg/lib/patterns.js?8c25","webpack:///../pkg/lib/credentials-ssh-private-keys.sh?97e5","webpack:///../pkg/lib/machine-dialogs.js?15c5","webpack:///../pkg/lib/mustache.js?4126","webpack:///../bower_components/mustache/mustache.js?5583","webpack:///../pkg/lib/machine-add.html?c661","webpack:///../pkg/lib/machine-auth-failed.html?7e51","webpack:///../pkg/lib/machine-change-auth.html?2d6d","webpack:///../pkg/lib/machine-change-port.html?e6b9","webpack:///../pkg/lib/machine-color-picker.html?5898","webpack:///../pkg/lib/machine-invalid-hostkey.html?4967","webpack:///../pkg/lib/machine-not-supported.html?7405","webpack:///../pkg/lib/machine-sync-users.html?bab6","webpack:///../pkg/lib/machine-unknown-hostkey.html?7149","webpack:///../pkg/shell/indexes.js?a9ea*","webpack:///../pkg/shell/base_index.js?107d*","webpack:///../pkg/shell/index-stub.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","generate_session_key","host","session_prefix","Machines","storage","ev","key","storageArea","window","sessionStorage","refresh","JSON","parse","newValue","sync","machine","values","overlay","prop","desired","$","extend","shared","push","emit_ready","self","ready","last","flat","timeout","setTimeout","setItem","stringify","hosts","content","application","events","old_machine","machines","old_conns","connection_string","color","address","generate_connection_string","user","port","label","cockpit","transport","indexOf","replace","location","hostname","avatar","i","sel","len","length","triggerHandler","update_session_machine","skey","data","when","update_saved_machine","mutate","item","merge","local","file","path","syntax","superuser","mod","modify","tag","done","over","always","close","color_in_use","norm","colors","this","localhost","visible","manifests","addEventListener","value","getItem","add_key","host_key","known_hosts","known_hosts_path","add","split_connection_string","unused_color","lookup","on_disk","change","hostnamed","conn_to","dbus","fail","ex","console","warn","all","changes","Object","defineProperty","enumerable","get","sort","m1","m2","localeCompare","keys","parts","addr","user_spot","port_spot","lastIndexOf","substring","parseInt","isNaN","removeEventListener","Loader","session_only","process_session_key","split","connect","load_from_session_storage","session_loaded","k","process_session_machines","state","problem","restarting","checksum","updated","props","proxies","valid","PrettyHostname","StaticHostname","os","OperatingSystemPrettyName","isEmptyObject","kill","disconnect","removed","channels","on","whirl","request","open","request_manifest","ajax","url","dataType","cache","etag","getResponseHeader","request_hostname","static_hostname","proxy","wait","channel","options","payload","encodeURI","send","off","client","expect_restart","forEach","watch","prefixedKey","instance","loader","input","div","document","createElement","style","getComputedStyle","getPropertyValue","caps","capabilities","allow_connection_string","inArray","has_auth_results","jQuery","process","Keys","message","name","slice","event","clearInterval","proc","clearTimeout","script","lister","err","blocks","items","trim","line","parse_key","block","parse_info","type","comment","toUpperCase","join","size","fingerprint","home","old_pass","new_pass","two_pass","old_exps","new_exps","bad_exps","dfd","Deferred","buffer","sent_new","failure","_","reject","Error","promise","spawn","pty","environ","directory","resolve","constructor","stream","test","load","password","ask_exp","perm_exp","bad_exp","output","log","unload","setup","drop_privileges","preventDefault","body","target","parents","toggleClass","removeClass","find","hide","addClass","attr","onoff","show","text","val","undefined","first","click","keyCode","li","parent","index","children","eq","popover","row","field","string","rows","table","each","el","clone","append","hasClass","remove","gettext","keys_instance","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","e","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","run","Item","array","noop","nextTick","args","Array","arguments","prototype","apply","title","browser","env","argv","version","versions","addListener","once","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","unique","unique_number","Date","clear_errors","field_error","error","next","wrapper","is","insertBefore","selectpicker","appendTo","css","global_error","alert","toString","prependTo","footer","display_errors","errors","isArray","any","DialogWait","handle","disabled","clear_wait","ctl","removeAttr","display_wait","restore","cancelled","modal","update","arg","before","cancellation","cancel","controls","not","progress","onoff_refresh","x","andSelf","filter","buttons","createTextNode","onoff_change","onoff_value","resize_flex","slider","flex","total","part","update_value","check_overflow","offsetWidth","scrollWidth","setup_slider","parseFloat","getAttribute","set","v","s","String","setAttribute","hasAttribute","toLowerCase","offset","left","hitx","offsetX","clientX","outerWidth","width","pageX","trigger","setup_sliders","fn","dialog","action","update_privileged","perm","denied_message","placement","allowed","selector","allowed_key","html","tooltip","translate_and_init","tmpl","tmp","old","outerHTML","translated","mustache","full_address","machines_ins","Dialog","codes","address_or_label","change_content","template","error_options","old_instance","current_instance","current_template","AddMachine","SyncUsers","HostKey","ChangeAuth","MachinePort","Simple","promise_callback","success_callback","try_to_connect","conn_options","get_sel","child_selector","ret_txt","set_on_success","callback","set_goal","complete","render","address_data","context","context_title","strong","templates","translate","render_error","command","render_template","empty","failure_callback","promise_funcs","dialog_dfd","is_method_supported","methods","method","result","can_try_method","MachineColorPicker","selected_color","list","$div","$pop","div_pos","position","div_width","div_height","height","pop_width","pop_height","top","existing_error","check_address","evt","button","search","run_error","add_machine","dfp","msg","format","host_id_port","port_index","substr","invisible","addresses","manifest","limit","color_picker","nearlimit","placeholder","which","focus","change_port","update_host","q","then","inner","fp","key_host","allow_change","update_keys","key_div","login","change_login_type","stored","toggle","available","supported","machine_user","allows_password","can_sync","machines.allow_connection_string","sync_link","credentials","load_users","bus","perm_failed","blank","t","Transfer","prepared","groups","raw","users","username","members","j","u","sync_users","needs_auth","remote_options","variant","group","map","Commit","toggle_button","formated_groups","user_list","needs_root","checked","MachineDialogManager","default_codes","troubleshoot","target_id","needs_troubleshoot","render_dialog","render_color_picker","add_tmpl","auth_failed_tmpl","change_auth_tmpl","change_port_tmpl","color_picker_tmpl","invalid_hostkey_tmpl","not_supported_tmpl","sync_users_tmpl","unknown_hosts_tmpl","no-cockpit","not-supported","protocol-error","authentication-not-supported","authentication-failed","no-forwarding","unknown-hostkey","invalid-hostkey","not-found","sync-users","add-machine","auth-failed","change-auth","change-port","color-picker","new_manager","innerHTML","view","partials","to_html","clearCache","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","testRegExp","re","RegExp_test","isWhitespace","nonSpaceRe","isFunction","object","escapeRegExp","escapeHtml","entityMap","escapeTags","tags","RegExp","parseTemplate","stripSpace","hasTag","nonSpace","spaces","tokens","pop","spaceRe","start","chr","token","openSection","tagRes","scanner","Scanner","sections","eos","pos","scanUntil","charAt","scan","tagRe","whiteRe","eqRe","curlyRe","nestTokens","squashTokens","lastToken","squashedTokens","section","nestedTokens","collector","tail","Context","parentContext",".","Writer","Object_toString","&","<",">","\"","'","/","match","names","renderTokens","originalTemplate","subRender","jlen","escape","defaultWriter","phantom_checkpoint","MachinesIndex","index_options","mdialogs","on_ready","show_disconnected","current_frame","watchdog_problem","navigate","reconnect","troubleshooting","retrieve_state","compiled","compile","component","choose_component","update_navbar","update_sidebar","update_frame","recalculate_layout","jump","menu_items","single_host","dashboards","ordered","shell_embedded","sidebar","wants","links","href","menu","tools","collapse","update_title","suffix","default_title","connecting","compat","hash","frame","frames","update_machines","machine_link","compatibility","shell","mapping","base_index","new_compiled","new_index_from_proto","clear","reload","SimpleIndex","message_queue","messages","pathname","simple_index","machines_index","documentElement","sink","protocol","Frames","remove_frame","contentWindow","frame_ready","count","timer","iframes","lookup_component_hash","src","new_frame","wind","frameElement","display","base","Router","perform_jump","child","control","str","encodeURIComponent","perform_track","on_unload","source","source_by_name","defaultView","unregister","on_hashchange","on_load","source_by_seed","channel_seed","register","unique_id","seed","default_host","inited","message_handler","origin","reply","channel-seed","postMessage","hint","hidden","show_oops","inject","credential","authorize_changed","Index","encode","with_root","decode","shift","build_navbar","a","navbar","local_compiled","CompiledComponants","setup_oops","oops","details","setup_brand","os_release","localStorage","elt","setup_logout","logout","setup_language","locales","language","cookie","code","code_to_select","setup_about","info","setup_account","setup_user","full_name","is_root","is_not_root","router","watchdog","navigator","userAgent","old_onerror","onerror","topnav","window_height","topnav_height","y","Math","floor","sidebar_width","history","current","frame_change","replaceState","pushState","oops_sel","credential_sel","logout_sel","language_sel","cal_title","brand_sel","about_sel","user_sel","account_sel","order","b","follow","zz_value","defineProperties","zz","proto","o","machis","indexes","dialogs","no-host","login_data"],"mappings":"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","file":"shell/index-stub.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(32);\n\n\n/***/ },\n/* 1 */,\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(3);\n\t    var cockpit = __webpack_require__(4);\n\t\n\t    var mod = { };\n\t\n\t    /* machines.json path */\n\t    var path = \"/var/lib/cockpit/machines.json\";\n\t    var known_hosts_path = \"/var/lib/cockpit/known_hosts\";\n\t    /*\n\t     * We share the Machines state between multiple frames. Only\n\t     * one frame has the job of loading the state, usually index.js\n\t     * The Loader code below does all the loading.\n\t     *\n\t     * The data is stored in sessionStorage in a JSON object, like this\n\t     * {\n\t     *    content: parsed contents of machines.json\n\t     *    tag: the cockpit.file() tag\n\t     *    overlay: extra data to augment and override on top of content\n\t     * }\n\t     *\n\t     * This uses sessionStorage rather than cockpit.sessionStorage\n\t     * because we don't ever want to write unprefixed keys.\n\t     */\n\t\n\t    var key = cockpit.sessionStorage.prefixedKey(\"v2-machines.json\");\n\t    var session_prefix = cockpit.sessionStorage.prefixedKey(\"v1-session-machine\");\n\t\n\t    function generate_session_key(host) {\n\t        return session_prefix + \"/\" + host;\n\t    }\n\t\n\t    function Machines() {\n\t        var self = this;\n\t\n\t        var flat = null;\n\t        self.ready = false;\n\t\n\t        /* parsed machine data */\n\t        var machines = { };\n\t\n\t        /* Data shared between Machines() instances */\n\t        var last = {\n\t            content: null,\n\t            tag: null,\n\t            overlay: {\n\t                localhost: {\n\t                    visible: true,\n\t                    manifests: cockpit.manifests\n\t                }\n\t            }\n\t        };\n\t\n\t        function storage(ev) {\n\t            if (ev.key === key && ev.storageArea === window.sessionStorage)\n\t                refresh(JSON.parse(ev.newValue));\n\t        }\n\t\n\t        window.addEventListener(\"storage\", storage);\n\t\n\t        window.setTimeout(function() {\n\t            var value = window.sessionStorage.getItem(key);\n\t            if (!self.ready && value)\n\t                refresh(JSON.parse(value));\n\t        });\n\t\n\t        var timeout = null;\n\t\n\t        function sync(machine, values, overlay) {\n\t            var desired = $.extend({ }, values || { }, overlay || { });\n\t            var prop;\n\t            for (prop in desired) {\n\t                if (machine[prop] !== desired[prop])\n\t                    machine[prop] = desired[prop];\n\t            }\n\t            for (prop in machine) {\n\t                if (machine[prop] !== desired[prop])\n\t                    delete machine[prop];\n\t            }\n\t            return machine;\n\t        }\n\t\n\t        function refresh(shared, push) {\n\t            if (!shared)\n\t                return;\n\t\n\t            var emit_ready = !self.ready;\n\t\n\t            self.ready = true;\n\t            last = shared;\n\t            flat = null;\n\t\n\t            if (push && !timeout) {\n\t                timeout = window.setTimeout(function() {\n\t                    timeout = null;\n\t                    window.sessionStorage.setItem(key, JSON.stringify(last));\n\t                }, 10);\n\t            }\n\t\n\t            var host, hosts = { };\n\t            var content = shared.content || { };\n\t            var overlay = shared.overlay || { };\n\t            for (host in content)\n\t                hosts[host] = true;\n\t            for (host in overlay)\n\t                hosts[host] = true;\n\t\n\t            var events = [];\n\t\n\t            var machine, application;\n\t            for (host in hosts) {\n\t                var old_machine = machines[host] || { };\n\t                var old_conns = old_machine.connection_string;\n\t\n\t                /* Invert logic for color, always respect what's on disk */\n\t                if (content[host] && content[host].color && overlay[host])\n\t                    delete overlay[host].color;\n\t\n\t                machine = sync(old_machine, content[host], overlay[host]);\n\t\n\t                /* Fill in defaults */\n\t                machine.key = host;\n\t                if (!machine.address)\n\t                    machine.address = host;\n\t\n\t                machine.connection_string = self.generate_connection_string(machine.user,\n\t                                                                            machine.port,\n\t                                                                            machine.address);\n\t\n\t                if (!machine.label) {\n\t                    if (host == \"localhost\" || host == \"localhost.localdomain\") {\n\t                        application = cockpit.transport.application();\n\t                        if (application.indexOf('cockpit+=') === 0)\n\t                            machine.label = application.replace('cockpit+=', '');\n\t                        else\n\t                            machine.label = window.location.hostname;\n\t                    } else {\n\t                        machine.label = host;\n\t                    }\n\t                }\n\t                if (!machine.avatar)\n\t                    machine.avatar = \"../shell/images/server-small.png\";\n\t\n\t                events.push([host in machines ? \"updated\" : \"added\",\n\t                            [machine, host, old_conns]]);\n\t                machines[host] = machine;\n\t            }\n\t\n\t            /* Remove any lost hosts */\n\t            for (host in machines) {\n\t                if (!(host in hosts)) {\n\t                    machine = machines[host];\n\t                    delete machines[host];\n\t                    delete overlay[host];\n\t                    events.push([\"removed\", [machine, host]]);\n\t                }\n\t            }\n\t\n\t            /* Fire off all events */\n\t            var i, sel = $(self), len = events.length;\n\t            for (i = 0; i < len; i++)\n\t                sel.triggerHandler(events[i][0], events[i][1]);\n\t            if (emit_ready)\n\t                $(self).triggerHandler(\"ready\");\n\t        }\n\t\n\t        function update_session_machine(machine, host, values) {\n\t            /* We don't save the whole machine object */\n\t            var skey = generate_session_key(host);\n\t            var data = $.extend({}, machine, values);\n\t            window.sessionStorage.setItem(skey, JSON.stringify(data));\n\t            self.overlay(host, values);\n\t            return cockpit.when([]);\n\t        }\n\t\n\t        function update_saved_machine(host, values) {\n\t            function mutate(data) {\n\t                if (!data)\n\t                    data = { };\n\t                var item = data[host];\n\t                if (!item)\n\t                    item = data[host] = { };\n\t                merge(item, values);\n\t                return data;\n\t            }\n\t\n\t            /* Update the JSON file */\n\t            var local = cockpit.file(path, { syntax: JSON, superuser: \"try\" });\n\t            var mod = local.modify(mutate, last.content, last.tag)\n\t                .done(function(data, tag) {\n\t                    var prop, over = { };\n\t                    for (prop in values)\n\t                        over[prop] = null;\n\t                    self.data(data, tag); /* an optimization */\n\t                    self.overlay(host, over);\n\t                })\n\t                .always(function() {\n\t                    local.close();\n\t                });\n\t\n\t            return mod;\n\t        }\n\t\n\t        self.add_key = function(host_key) {\n\t            var known_hosts = cockpit.file(known_hosts_path, { superuser: \"try\" });\n\t            return known_hosts\n\t                .modify(function(data) {\n\t                    if (!data)\n\t                        data = \"\";\n\t\n\t                    return data + \"\\n\" + host_key;\n\t                })\n\t                .always(function() {\n\t                    known_hosts.close();\n\t                });\n\t        };\n\t\n\t        self.add = function add(connection_string, color) {\n\t            var values = self.split_connection_string(connection_string);\n\t            var host = values['address'];\n\t\n\t            values = $.extend({\n\t                        visible: true,\n\t                        color: color || self.unused_color(),\n\t                    }, values);\n\t\n\t            var machine = self.lookup(host);\n\t            if (machine)\n\t                machine.on_disk = true;\n\t\n\t            return self.change(values['address'], values);\n\t        };\n\t\n\t        self.unused_color = function unused_color() {\n\t            var i, len = mod.colors.length;\n\t            for (i = 0; i < len; i++) {\n\t                if (!color_in_use(mod.colors[i]))\n\t                    return mod.colors[i];\n\t            }\n\t            return \"gray\";\n\t        };\n\t\n\t        function color_in_use(color) {\n\t            var key, machine, norm = mod.colors.parse(color);\n\t            for (key in machines) {\n\t                machine = machines[key];\n\t                if (machine.color && mod.colors.parse(machine.color) == norm)\n\t                    return true;\n\t            }\n\t            return false;\n\t        }\n\t\n\t        function merge(item, values) {\n\t            for (var prop in values) {\n\t                if (values[prop] === null)\n\t                    delete item[prop];\n\t                else\n\t                    item[prop] = values[prop];\n\t            }\n\t        }\n\t\n\t        self.change = function change(host, values) {\n\t            var mod, hostnamed, call;\n\t            var machine = self.lookup(host);\n\t\n\t            if (values.label) {\n\t\n\t                var conn_to = host;\n\t                if (machine)\n\t                    conn_to = machine.connection_string;\n\t\n\t                if (!machine || machine.label !== values.label) {\n\t                    hostnamed = cockpit.dbus(\"org.freedesktop.hostname1\", { host: conn_to });\n\t                    call = hostnamed.call(\"/org/freedesktop/hostname1\", \"org.freedesktop.hostname1\",\n\t                                          \"SetPrettyHostname\", [ values.label, true ])\n\t                        .always(function() {\n\t                            hostnamed.close();\n\t                        })\n\t                        .fail(function(ex) {\n\t                            console.warn(\"couldn't set pretty host name: \" + ex);\n\t                        });\n\t                }\n\t            }\n\t\n\t            if (machine && !machine.on_disk)\n\t                mod = update_session_machine(machine, host, values);\n\t            else\n\t                mod = update_saved_machine(host, values);\n\t\n\t            if (call)\n\t                return cockpit.all(call, mod);\n\t\n\t            return mod;\n\t        };\n\t\n\t        self.data = function data(content, tag) {\n\t            var host, changes = {};\n\t\n\t            for (host in content) {\n\t                changes[host] = $.extend({ }, last.overlay[host] || { });\n\t                merge(changes[host], { on_disk: true });\n\t            }\n\t\n\t            /* It's a full reload, so data not\n\t             * present is no longer from disk\n\t             */\n\t            for (host in machines) {\n\t                if (content && !content[host]) {\n\t                    changes[host] = $.extend({ }, last.overlay[host] || { });\n\t                    merge(changes[host], { on_disk: null });\n\t                }\n\t            }\n\t\n\t            refresh({ content: content, tag: tag,\n\t                      overlay: $.extend({ }, last.overlay, changes) }, true);\n\t        };\n\t\n\t        self.overlay = function overlay(host, values) {\n\t            var changes = { };\n\t            changes[host] = $.extend({ }, last.overlay[host] || { });\n\t            merge(changes[host], values);\n\t            refresh({\n\t                content: last.content,\n\t                tag: last.tag,\n\t                overlay: $.extend({ }, last.overlay, changes)\n\t            }, true);\n\t        };\n\t\n\t        Object.defineProperty(self, \"list\", {\n\t            enumerable: true,\n\t            get: function get() {\n\t                var key;\n\t                if (!flat) {\n\t                    flat = [];\n\t                    for (key in machines) {\n\t                        if (machines[key].visible)\n\t                            flat.push(machines[key]);\n\t                    }\n\t                    flat.sort(function(m1, m2) {\n\t                        return m1.label.localeCompare(m2.label);\n\t                    });\n\t                }\n\t                return flat;\n\t            }\n\t        });\n\t\n\t        Object.defineProperty(self, \"addresses\", {\n\t            enumerable: true,\n\t            get: function get() {\n\t                return Object.keys(machines);\n\t            }\n\t        });\n\t\n\t        self.lookup = function lookup(address) {\n\t            var parts = self.split_connection_string(address);\n\t            return machines[parts.address || \"localhost\"] || null;\n\t        };\n\t\n\t        self.generate_connection_string = function (user, port, addr) {\n\t            var address = addr;\n\t            if (user)\n\t                address = user + \"@\" + address;\n\t\n\t            if (port)\n\t                address = address + \":\" + port;\n\t\n\t            return address;\n\t        };\n\t\n\t        self.split_connection_string = function(conn_to) {\n\t            var parts = {};\n\t            var user_spot = -1;\n\t            var port_spot = -1;\n\t\n\t            if (conn_to) {\n\t                user_spot = conn_to.lastIndexOf('@');\n\t                port_spot = conn_to.lastIndexOf(':');\n\t            }\n\t\n\t            if (user_spot > 0) {\n\t                parts.user = conn_to.substring(0, user_spot);\n\t                conn_to = conn_to.substring(user_spot+1);\n\t                port_spot = conn_to.lastIndexOf(':');\n\t            }\n\t\n\t            if (port_spot > -1) {\n\t                var port = parseInt(conn_to.substring(port_spot+1), 10);\n\t                if (!isNaN(port)) {\n\t                    parts.port = port;\n\t                    conn_to = conn_to.substring(0, port_spot);\n\t                }\n\t            }\n\t\n\t            parts.address = conn_to;\n\t            return parts;\n\t        };\n\t\n\t        self.close = function close() {\n\t            window.removeEventListener(\"storage\", storage);\n\t        };\n\t    }\n\t\n\t    function Loader(machines, session_only) {\n\t        var self = this;\n\t\n\t        /* Have we loaded from cockpit session */\n\t        var session_loaded = false;\n\t\n\t        /* File we are watching */\n\t        var file;\n\t\n\t        /* echo channels to each machine */\n\t        var channels = { };\n\t\n\t        /* hostnamed proxies to each machine, if hostnamed available */\n\t        var proxies = { };\n\t\n\t        function process_session_key(key, value) {\n\t            var host, values, machine;\n\t            var parts = key.split(\"/\");\n\t            if (parts[0] == session_prefix &&\n\t                parts.length === 2) {\n\t                    host = parts[1];\n\t                    if (value) {\n\t                        values = JSON.parse(value);\n\t                        machine = machines.lookup(host);\n\t                        if (!machine || !machine.on_disk)\n\t                            machines.overlay(host, values);\n\t                        else if (!machine.visible)\n\t                            machines.change(host, { visible: true });\n\t                        self.connect(host);\n\t                    }\n\t            }\n\t        }\n\t\n\t        function load_from_session_storage() {\n\t            var i;\n\t            session_loaded = true;\n\t            for (i = 0; i < window.sessionStorage.length; i++) {\n\t                var k = window.sessionStorage.key(i);\n\t                process_session_key(k, window.sessionStorage.getItem(k));\n\t            }\n\t        }\n\t\n\t        function process_session_machines(ev) {\n\t            if (ev.storageArea === window.sessionStorage)\n\t                process_session_key(ev.key || \"\", ev.newValue);\n\t        }\n\t        window.addEventListener(\"storage\", process_session_machines);\n\t\n\t        function state(host, value, problem) {\n\t            var values = { state: value, problem: problem };\n\t            if (value == \"connected\") {\n\t                values.restarting = false;\n\t            } else if (problem) {\n\t                values.manifests = null;\n\t                values.checksum = null;\n\t            }\n\t            machines.overlay(host, values);\n\t        }\n\t\n\t        $(machines).on(\"added\", updated);\n\t        $(machines).on(\"updated\", updated);\n\t        $(machines).on(\"removed\", removed);\n\t\n\t        function updated(ev, machine, host, old_conns) {\n\t            if (!machine) {\n\t                machine = machines.lookup(host);\n\t                if (!machine)\n\t                    return;\n\t            }\n\t\n\t            var props = proxies[host];\n\t            if (!props || !props.valid)\n\t                props = { };\n\t\n\t            var overlay = { };\n\t\n\t            if (!machine.color)\n\t                overlay.color = machines.unused_color();\n\t\n\t            var label = props.PrettyHostname || props.StaticHostname;\n\t            if (label && label !== machine.label)\n\t                overlay.label = label;\n\t\n\t            var os = props.OperatingSystemPrettyName;\n\t            if (os && os != machine.os)\n\t                overlay.os = props.OperatingSystemPrettyName;\n\t\n\t            if (!$.isEmptyObject(overlay))\n\t                machines.overlay(host, overlay);\n\t\n\t            /* Don't automatically reconnect failed machines */\n\t            if (machine.visible) {\n\t                if (old_conns && machine.connection_string != old_conns) {\n\t                    cockpit.kill(old_conns);\n\t                    self.disconnect(host);\n\t                    self.connect(host);\n\t                } else if (!machine.problem) {\n\t                    self.connect(host);\n\t                }\n\t            } else {\n\t                self.disconnect(host);\n\t            }\n\t        }\n\t\n\t        function removed(ev, machine, host) {\n\t            self.disconnect(host);\n\t        }\n\t\n\t        self.connect = function connect(host) {\n\t            var machine = machines.lookup(host);\n\t            if (!machine)\n\t                return;\n\t\n\t            var channel = channels[host];\n\t            if (channel)\n\t                return;\n\t\n\t            var options = {\n\t                host: machine.connection_string,\n\t                payload: \"echo\"\n\t            };\n\t\n\t            if (!machine.on_disk && machine.host_key) {\n\t                options['temp-session'] = false; /* Compatibility option */\n\t                options['session'] = 'shared';\n\t                options['host-key'] = machine.host_key;\n\t            }\n\t\n\t            channel = cockpit.channel(options);\n\t            channels[host] = channel;\n\t\n\t            var local = host === \"localhost\";\n\t\n\t            /* Request is null, and message is true when connected */\n\t            var request = null;\n\t            var open = local;\n\t            var problem = null;\n\t\n\t            var url;\n\t            if (!machine.manifests) {\n\t                if (machine.checksum)\n\t                    url = \"../../\" + machine.checksum + \"/manifests.json\";\n\t                else\n\t                    url = \"../../@\" + encodeURI(machine.connection_string) + \"/manifests.json\";\n\t            }\n\t\n\t            function whirl() {\n\t                if (!request && open)\n\t                    state(host, \"connected\", null);\n\t                else if (!problem)\n\t                    state(host, \"connecting\", null);\n\t            }\n\t\n\t            /* Here we load the machine manifests, and expect them before going to \"connected\" */\n\t            function request_manifest() {\n\t                request = $.ajax({ url: url, dataType: \"json\", cache: true})\n\t                    .done(function(manifests) {\n\t                        var overlay = { manifests: manifests };\n\t                        var etag = request.getResponseHeader(\"ETag\");\n\t                        if (etag) /* and remove quotes */\n\t                            overlay.checksum = etag.replace(/^\"(.+)\"$/, '$1');\n\t                        machines.overlay(host, overlay);\n\t                    })\n\t                    .fail(function(ex) {\n\t                        console.warn(\"failed to load manifests from \" + machine.connection_string + \": \" + ex);\n\t                    })\n\t                    .always(function() {\n\t                        request = null;\n\t                        whirl();\n\t                    });\n\t            }\n\t\n\t            function request_hostname() {\n\t                if (!machine.static_hostname) {\n\t                    var proxy = cockpit.dbus(\"org.freedesktop.hostname1\",\n\t                                             { host: machine.connection_string }).proxy();\n\t                    proxies[host] = proxy;\n\t                    proxy.wait(function() {\n\t                        $(proxy).on(\"changed\", function() {\n\t                            updated(null, null, host);\n\t                        });\n\t                        updated(null, null, host);\n\t                    });\n\t                }\n\t            }\n\t\n\t            /* Send a message to the server and get back a message once connected */\n\t            if (!local) {\n\t                channel.send(\"x\");\n\t\n\t                $(channel)\n\t                    .on(\"message\", function() {\n\t                        open = true;\n\t                        if (url)\n\t                            request_manifest();\n\t                        request_hostname();\n\t                        whirl();\n\t                    })\n\t                .on(\"close\", function(ev, options) {\n\t                    problem = options.problem || \"disconnected\";\n\t                    open = false;\n\t                    state(host, \"failed\", problem);\n\t                    var m = machines.lookup(host);\n\t                    if (m && m.restarting) {\n\t                        window.setTimeout(function() {\n\t                            self.connect(host);\n\t                        }, 10000);\n\t                    }\n\t                    self.disconnect(host);\n\t                });\n\t            } else if (url) {\n\t                request_manifest();\n\t                request_hostname();\n\t            }\n\t\n\t            /* In case already ready, for example when local */\n\t            whirl();\n\t        };\n\t\n\t        self.disconnect = function disconnect(host) {\n\t            if (host === \"localhost\")\n\t                return;\n\t\n\t            var channel = channels[host];\n\t            delete channels[host];\n\t            if (channel) {\n\t                channel.close();\n\t                $(channel).off();\n\t            }\n\t\n\t            var proxy = proxies[host];\n\t            delete proxies[host];\n\t            if (proxy) {\n\t                proxy.client.close();\n\t                $(proxy).off();\n\t            }\n\t        };\n\t\n\t        self.expect_restart = function expect_restart(host) {\n\t            var parts = machines.split_connection_string(host);\n\t            machines.overlay(parts.address, { restarting: true,\n\t                                              problem: null });\n\t        };\n\t\n\t        self.close = function close() {\n\t            $(machines).off(\"added\", updated);\n\t            $(machines).off(\"changed\", updated);\n\t            $(machines).off(\"removed\", removed);\n\t            machines = null;\n\t\n\t            if (file)\n\t                file.close();\n\t            file = null;\n\t\n\t            window.removeEventListener(\"storage\", process_session_machines);\n\t            var hosts = Object.keys(channels);\n\t            hosts.forEach(self.disconnect);\n\t        };\n\t\n\t        if (!session_only) {\n\t            file = cockpit.file(path, { syntax: JSON });\n\t            file.watch(function(data, tag, ex) {\n\t                if (ex)\n\t                    console.warn(\"couldn't load machines data: \" + ex);\n\t                machines.data(data, tag);\n\t                if (!session_loaded)\n\t                    load_from_session_storage();\n\t            });\n\t        } else {\n\t            load_from_session_storage();\n\t            machines.data({});\n\t        }\n\t    }\n\t\n\t    mod.instance = function instance(loader) {\n\t        return new Machines();\n\t    };\n\t\n\t    mod.loader = function loader(machines, session_only) {\n\t        return new Loader(machines, session_only);\n\t    };\n\t\n\t    mod.colors = [\n\t        \"#0099d3\",\n\t        \"#67d300\",\n\t        \"#d39e00\",\n\t        \"#d3007c\",\n\t        \"#00d39f\",\n\t        \"#00d1d3\",\n\t        \"#00618a\",\n\t        \"#4c8a00\",\n\t        \"#8a6600\",\n\t        \"#9b005b\",\n\t        \"#008a55\",\n\t        \"#008a8a\",\n\t        \"#00b9ff\",\n\t        \"#7dff00\",\n\t        \"#ffbe00\",\n\t        \"#ff0096\",\n\t        \"#00ffc0\",\n\t        \"#00fdff\",\n\t        \"#023448\",\n\t        \"#264802\",\n\t        \"#483602\",\n\t        \"#590034\",\n\t        \"#024830\",\n\t        \"#024848\"\n\t    ];\n\t\n\t    mod.colors.parse = function parse_color(input) {\n\t        var div = document.createElement('div');\n\t        div.style.color = input;\n\t        var style = window.getComputedStyle(div, null);\n\t        return style.getPropertyValue(\"color\") || div.style.color;\n\t    };\n\t\n\t    mod.known_hosts_path = known_hosts_path;\n\t\n\t    cockpit.transport.wait(function() {\n\t        var caps = cockpit.transport.options.capabilities || [];\n\t        mod.allow_connection_string = $.inArray(\"connection-string\", caps) != -1;\n\t        mod.has_auth_results = $.inArray(\"auth-method-results\", caps) != -1;\n\t    });\n\t\n\t    module.exports = mod;\n\t}());\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = jQuery;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = cockpit;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2015 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(3);\n\t    var cockpit = __webpack_require__(4);\n\t\n\t    __webpack_require__(7);\n\t    __webpack_require__(11);\n\t\n\t    var lister = __webpack_require__(12);\n\t\n\t    var _ = cockpit.gettext;\n\t\n\t    function Keys() {\n\t        var self = this;\n\t\n\t        self.path = null;\n\t        self.items = { };\n\t\n\t        var watch = null;\n\t        var proc = null;\n\t        var timeout = null;\n\t\n\t        cockpit.user().done(function (user) {\n\t            self.path = user.home + '/.ssh';\n\t            refresh();\n\t        });\n\t\n\t        function refresh() {\n\t            if (watch === null) {\n\t                watch = cockpit.channel({ payload: \"fslist1\", path: self.path });\n\t                $(watch)\n\t                    .on(\"close\", function(ev, data) {\n\t                        $(watch).off();\n\t                        if (!data.problem || data.problem == \"not-found\") {\n\t                            watch = null; /* Watch again */\n\t                        } else {\n\t                            console.warn(\"couldn't watch \" + self.path + \": \" + (data.message || data.problem));\n\t                            watch = false; /* Don't watch again */\n\t                        }\n\t                    })\n\t                    .on(\"message\", function(ev, payload) {\n\t                        var item = JSON.parse(payload);\n\t                        var name = item.path;\n\t                        if (name && name.indexOf(\"/\") === -1 && name.slice(-4) === \".pub\") {\n\t                            if (item.event === \"present\" ||item.event === \"created\" ||\n\t                                item.event === \"changed\" || item.event === \"deleted\") {\n\t                                window.clearInterval(timeout);\n\t                                timeout = window.setTimeout(refresh, 100);\n\t                            }\n\t                        }\n\t                    });\n\t            }\n\t\n\t            if (proc)\n\t                return;\n\t\n\t            window.clearTimeout(timeout);\n\t            timeout = null;\n\t\n\t            proc = cockpit.script(lister, [ self.path ], { err: \"message\" })\n\t                .always(function() {\n\t                    proc = null;\n\t\n\t                    if (!timeout)\n\t                        timeout = window.setTimeout(refresh, 5000);\n\t                })\n\t                .done(function(data) {\n\t                    process(data);\n\t                })\n\t                .fail(function(ex) {\n\t                    console.warn(\"failed to list keys in home directory: \" + ex.message);\n\t                });\n\t        }\n\t\n\t        function process(data) {\n\t            var blocks = data.split('\\v');\n\t            var key, items = { };\n\t\n\t            /* First block is the data from ssh agent */\n\t            blocks[0].trim().split(\"\\n\").forEach(function(line) {\n\t                key = parse_key(line, items);\n\t                if (key)\n\t                    key.loaded = true;\n\t            });\n\t\n\t            /* Next come individual triples of blocks */\n\t            blocks.slice(1).forEach(function(block, i) {\n\t                switch(i % 3) {\n\t                case 0:\n\t                    key = parse_key(block, items);\n\t                    break;\n\t                case 1:\n\t                    if (key) {\n\t                        block = block.trim();\n\t                        if (block.slice(-4) === \".pub\")\n\t                            key.name = block.slice(0, -4);\n\t                        else\n\t                            key.name = block;\n\t                    }\n\t                    break;\n\t                case 2:\n\t                    if (key)\n\t                        parse_info(block, key);\n\t                    break;\n\t                }\n\t            });\n\t\n\t            self.items = items;\n\t            $(self).triggerHandler(\"changed\");\n\t        }\n\t\n\t        function parse_key(line, items) {\n\t            var parts = line.trim().split(\" \");\n\t            var id, type, comment;\n\t\n\t            /* SSHv1 keys */\n\t            if (!isNaN(parseInt(parts[0], 10))) {\n\t                id = parts[2];\n\t                type = \"RSA1\";\n\t                comment = parts.slice(3).join(\" \");\n\t\n\t            } else if (parts[0].indexOf(\"ssh-\") === 0) {\n\t                id = parts[1];\n\t                type = parts[0].substring(4).toUpperCase();\n\t                comment = parts.slice(2).join(\" \");\n\t            } else if (parts[0].indexOf(\"ecdsa-\") === 0) {\n\t                id = parts[1];\n\t                type = \"ECDSA\";\n\t                comment = parts.slice(2).join(\" \");\n\t            } else {\n\t                return;\n\t            }\n\t\n\t            var key = items[id];\n\t            if (!key)\n\t                key = items[id] = { };\n\t\n\t            key.type = type;\n\t            key.comment = comment;\n\t            key.data = line;\n\t            return key;\n\t        }\n\t\n\t        function parse_info(line, key) {\n\t            var parts = line.trim().split(\" \");\n\t\n\t            key.size = parseInt(parts[0], 10);\n\t            if (isNaN(key.size))\n\t                key.size = null;\n\t\n\t            key.fingerprint = parts[1];\n\t        }\n\t\n\t        self.change = function change(name, old_pass, new_pass, two_pass) {\n\t            var old_exps = [ /.*Enter old passphrase: $/ ];\n\t            var new_exps = [ /.*Enter new passphrase.*/, /.*Enter same passphrase again: $/ ];\n\t            var bad_exps = [ /.*failed: passphrase is too short.*/ ];\n\t\n\t            var dfd = $.Deferred();\n\t            var buffer = \"\";\n\t            var sent_new = false;\n\t            var failure = _(\"No such file or directory\");\n\t            var i;\n\t\n\t            if (new_pass !== two_pass) {\n\t                dfd.reject(new Error(_(\"The passwords do not match.\")));\n\t                return dfd.promise();\n\t            }\n\t\n\t            var proc;\n\t            var timeout = window.setTimeout(function() {\n\t                failure = _(\"Prompting via ssh-keygen timed out\");\n\t                proc.close(\"terminated\");\n\t            }, 10 * 1000);\n\t\n\t            proc = cockpit.spawn([\"ssh-keygen\", \"-p\", \"-f\", name],\n\t                    { pty: true, environ: [ \"LC_ALL=C\" ], err: \"out\", directory: self.path })\n\t                .always(function() {\n\t                    window.clearInterval(timeout);\n\t                })\n\t                .done(function() {\n\t                    dfd.resolve();\n\t                })\n\t                .fail(function(ex) {\n\t                    if (ex.constructor.name == \"ProcessError\")\n\t                        ex = new Error(failure);\n\t                    dfd.reject(ex);\n\t                })\n\t                .stream(function(data) {\n\t                    buffer += data;\n\t                    for (i = 0; i < old_exps.length; i++) {\n\t                        if (old_exps[i].test(buffer)) {\n\t                            buffer = \"\";\n\t                            failure = _(\"Old password not accepted\");\n\t                            this.input(old_pass + \"\\n\", true);\n\t                            return;\n\t                        }\n\t                    }\n\t\n\t                    for (i = 0; i < new_exps.length; i++) {\n\t                        if (new_exps[i].test(buffer)) {\n\t                            buffer = \"\";\n\t                            this.input(new_pass + \"\\n\", true);\n\t                            failure = _(\"Failed to change password\");\n\t                            sent_new = true;\n\t                            return;\n\t                        }\n\t                    }\n\t\n\t                    for (i = 0; sent_new && i < bad_exps.length; i++) {\n\t                        if (bad_exps[i].test(buffer)) {\n\t                            failure = _(\"New password was not accepted\");\n\t                            return;\n\t                        }\n\t                    }\n\t                });\n\t\n\t            return dfd.promise();\n\t        };\n\t\n\t        self.load = function(name, password) {\n\t            var ask_exp =  /.*Enter passphrase for .*/;\n\t            var perm_exp = /.*UNPROTECTED PRIVATE KEY FILE.*/;\n\t            var bad_exp = /.*Bad passphrase.*/;\n\t\n\t            var dfd = $.Deferred();\n\t            var buffer = \"\";\n\t            var output = \"\";\n\t            var failure = _(\"Not a valid private key\");\n\t\n\t            var proc;\n\t            var timeout = window.setTimeout(function() {\n\t                failure = _(\"Prompting via ssh-add timed out\");\n\t                proc.close(\"terminated\");\n\t            }, 10 * 1000);\n\t\n\t            proc = cockpit.spawn([\"ssh-add\", name],\n\t                    { pty: true, environ: [ \"LC_ALL=C\" ], err: \"out\", directory: self.path })\n\t                .always(function() {\n\t                    window.clearInterval(timeout);\n\t                })\n\t                .done(function() {\n\t                    refresh();\n\t                    dfd.resolve();\n\t                })\n\t                .fail(function(ex) {\n\t                    console.log(output);\n\t                    if (ex.constructor.name == \"ProcessError\")\n\t                        ex = new Error(failure);\n\t                    dfd.reject(ex);\n\t                })\n\t                .stream(function(data) {\n\t                    buffer += data;\n\t                    output += data;\n\t                    if (perm_exp.test(buffer)) {\n\t                        failure = _(\"Invalid file permissions\");\n\t                        buffer = \"\";\n\t                    } else if (ask_exp.test(buffer)) {\n\t                        buffer = \"\";\n\t                        failure = _(\"Password not accepted\");\n\t                        this.input(password + \"\\n\", true);\n\t                    } else if (bad_exp.test(buffer)) {\n\t                        buffer = \"\";\n\t                        this.input(\"\\n\", true);\n\t                    }\n\t                });\n\t\n\t            return dfd.promise();\n\t        };\n\t\n\t        self.unload = function unload(name) {\n\t            return cockpit.spawn([\"ssh-add\", \"-d\", name],\n\t                    { pty: true, err: \"message\", directory: self.path })\n\t                .done(refresh);\n\t        };\n\t\n\t        self.close = function close() {\n\t            if (watch)\n\t                watch.close();\n\t            if (proc)\n\t                proc.close();\n\t            window.clearTimeout(timeout);\n\t            timeout = null;\n\t        };\n\t    }\n\t\n\t    function setup() {\n\t        var keys;\n\t\n\t        /* The button to deauthorize cockpit */\n\t        $(\"#credential-authorize button\").on(\"click\", function(ev) {\n\t            cockpit.drop_privileges(false);\n\t            ev.preventDefault();\n\t        });\n\t\n\t        $(\"#credentials-dialog\")\n\t\n\t            /* Show and hide panels */\n\t            .on(\"click\", \"tr.listing-ct-item\", function(ev) {\n\t                var body;\n\t                if ($(ev.target).parents(\".listing-ct-actions, ul\").length === 0) {\n\t                    body = $(ev.target).parents(\"tbody\");\n\t                    body.toggleClass(\"open\").removeClass(\"unlock\");\n\t                    body.find(\".alert\").hide();\n\t                }\n\t            })\n\t\n\t            /* Highlighting */\n\t            .on(\"mouseenter\", \".listing-ct-item\", function(ev) {\n\t                $(ev.target).parents(\"tbody\").find(\".listing-ct-item\").addClass(\"highlight-ct\");\n\t            })\n\t            .on(\"mouseleave\", \".listing-ct-item\", function(ev) {\n\t                $(ev.target).parents(\"tbody\").find(\".listing-ct-item\").removeClass(\"highlight-ct\");\n\t            })\n\t\n\t            /* Load and unload keys */\n\t            .on(\"change\", \".btn-group\", function(ev) {\n\t                var body = $(this).parents(\"tbody\");\n\t                var id = body.attr(\"data-id\");\n\t                var key = keys.items[id];\n\t                if (!key || !key.name)\n\t                    return;\n\t\n\t                var value = $(this).onoff(\"value\");\n\t\n\t                /* Key needs to be loaded, show load UI */\n\t                if (value && !key.loaded) {\n\t                    body.addClass(\"open\").addClass(\"unlock\");\n\t\n\t                /* Key needs to be unloaded, do that directly */\n\t                } else if (!value && key.loaded) {\n\t                    keys.unload(key.name)\n\t                        .done(function(ex) {\n\t                            body.removeClass(\"open\");\n\t                        })\n\t                        .fail(function(ex) {\n\t                            body.addClass(\"open\").removeClass(\"unlock\");\n\t                            body.find(\".alert\").show().find(\".credential-alert\").text(ex.message);\n\t                        });\n\t                }\n\t            })\n\t\n\t            /* Load key */\n\t            .on(\"click\", \".credential-unlock button\", function(ev) {\n\t                var body = $(this).parents(\"tbody\");\n\t                var id = body.attr(\"data-id\");\n\t                var key = keys.items[id];\n\t                if (!key || !key.name)\n\t                    return;\n\t\n\t                body.find(\"input button\").prop(\"disabled\", true);\n\t\n\t                var password = body.find(\".credential-password\").val();\n\t                keys.load(key.name, password)\n\t                    .always(function(ex) {\n\t                        body.find(\"input button\").prop(\"disabled\", false);\n\t                    })\n\t                    .done(function(ex) {\n\t                        body.find(\".credential-password\").val(\"\");\n\t                        body.removeClass(\"unlock\");\n\t                        body.find(\".alert\").hide();\n\t                    })\n\t                    .fail(function(ex) {\n\t                        body.find(\".alert\").show().find(\"span\").text(ex.message);\n\t                        console.warn(\"loading key failed: \", ex.message);\n\t                    });\n\t            })\n\t\n\t            /* Change key */\n\t            .on(\"click\", \".credential-change\", function(ev) {\n\t                var body = $(this).parents(\"tbody\");\n\t                var id = body.attr(\"data-id\");\n\t                var key = keys.items[id];\n\t                if (!key || !key.name)\n\t                    return;\n\t\n\t                body.find(\"input button\").prop(\"disabled\", true);\n\t\n\t                var old_pass = body.find(\".credential-old\").val();\n\t                var new_pass = body.find(\".credential-new\").val();\n\t                var two_pass = body.find(\".credential-two\").val();\n\t                if (old_pass === undefined || new_pass === undefined || two_pass === undefined)\n\t                    throw \"invalid password fields\";\n\t\n\t                keys.change(key.name, old_pass, new_pass, two_pass)\n\t                    .always(function(ex) {\n\t                        body.find(\"input button\").prop(\"disabled\", false);\n\t                    })\n\t                    .done(function() {\n\t                        body.find(\".credential-old\").val(\"\");\n\t                        body.find(\".credential-new\").val(\"\");\n\t                        body.find(\".credential-two\").val(\"\");\n\t                        body.find(\"li a\").first().click();\n\t                    })\n\t                    .fail(function(ex) {\n\t                        body.find(\".alert\").show().find(\"span\").text(ex.message);\n\t                    });\n\t            })\n\t\n\t            .on(\"change keypress\", \"input\", function(ev) {\n\t                var body = $(this).parents(\"tbody\");\n\t                if (ev.type == \"keypress\" && ev.keyCode == 13)\n\t                    $(this).parents(\"dl\").find(\".btn-primary\").click();\n\t                body.find(\".alert\").hide();\n\t            })\n\t\n\t            /* Change tabs */\n\t            .on(\"click\", \"tr.credential-panel ul > li > a\", function() {\n\t                var li = $(this).parent();\n\t                var index = li.index();\n\t                li.parent().children().removeClass(\"active\");\n\t                li.addClass(\"active\");\n\t                var body = $(this).parents(\"tbody\");\n\t                body.find(\".credential-tab\").hide().eq(index).show();\n\t                body.find(\".alert\").hide();\n\t            })\n\t\n\t            /* Popover help */\n\t            .on(\"click\", \"[data-toggle='popover']\", function() {\n\t                $(this).popover('toggle');\n\t            })\n\t\n\t            /* Dialog is hidden */\n\t            .on(\"hide.bs.modal\", function() {\n\t                if (keys) {\n\t                    $(keys).off();\n\t                    keys.close();\n\t                    keys = null;\n\t                }\n\t            })\n\t\n\t            /* Dialog is shown */\n\t            .on(\"show.bs.modal\", function() {\n\t                keys = new Keys();\n\t                $(\"#credential-keys\").toggleClass(\"hidden\",\n\t                                                  $.isEmptyObject(keys.items));\n\t\n\t                $(keys).on(\"changed\", function() {\n\t                    var key, id, row, rows = { };\n\t                    var table = $(\"#credentials-dialog table.credential-listing\");\n\t\n\t                    table.find(\"tbody[data-id]\").each(function(i, el) {\n\t                        row = $(el);\n\t                        rows[row.attr(\"data-id\")] = row;\n\t                    });\n\t\n\t                    var body = table.find(\"tbody\").first();\n\t                    for (id in keys.items) {\n\t                        if (!(id in rows)) {\n\t                            row = rows[id] = body.clone();\n\t                            row.attr(\"data-id\", id)\n\t                                .show()\n\t                                .onoff();\n\t                            table.append(row);\n\t                        }\n\t                    }\n\t\n\t                    function text(row, field, string) {\n\t                        var sel = row.find(field);\n\t                        string = string || \"\";\n\t                        if (sel.text() !== string)\n\t                            sel.text(string);\n\t                    }\n\t\n\t                    for (id in rows) {\n\t                        row = rows[id];\n\t                        key = keys.items[id];\n\t                        if (key) {\n\t                            text(row, \".credential-label\", key.name || key.comment);\n\t                            text(row, \".credential-type\", key.type);\n\t                            text(row, \".credential-fingerprint\", key.fingerprint);\n\t                            text(row, \".credential-comment\", key.comment);\n\t                            text(row, \".credential-data\", key.data);\n\t                            row.attr(\"data-name\", key.name)\n\t                                .attr(\"data-loaded\", key.loaded ? \"1\" : \"0\")\n\t                                .find(\".btn-onoff-ct\")\n\t                                    .onoff(\"value\", key.loaded || row.hasClass(\"unlock\"))\n\t                                    .onoff(\"disabled\", !key.name);\n\t                        } else {\n\t                            row.remove();\n\t                        }\n\t                        $(\"#credential-keys\").toggleClass(\"hidden\",\n\t                                                          $.isEmptyObject(keys.items));\n\t                    }\n\t                });\n\t            });\n\t        }\n\t\n\t    module.exports = {\n\t        keys_instance: function () {\n\t            return new Keys();\n\t        },\n\t        setup: setup\n\t    };\n\t}());\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(6)))\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(3);\n\t    var cockpit = __webpack_require__(4);\n\t\n\t    var unique_number = 0;\n\t    function unique() {\n\t        unique_number += 1;\n\t        return \"unique\" + -(new Date()) + -unique_number;\n\t    }\n\t\n\t    /* Dialog Patterns */\n\t\n\t    function clear_errors(sel) {\n\t        sel.find(\".dialog-error\").remove();\n\t        sel.find(\".has-error\").removeClass(\"has-error\");\n\t        sel.find(\".dialog-wrapper\").off(\".dialog-error\");\n\t        sel.off(\".dialog-error\");\n\t    }\n\t\n\t    function field_error(target, error) {\n\t        var wrapper = target.parent();\n\t        var next, refresh;\n\t\n\t        if (!wrapper.is(\".dialog-wrapper\")) {\n\t            wrapper = $(\"<div class='dialog-wrapper'>\").insertBefore(target);\n\t\n\t            /*\n\t             * Some bootstrap plugins replace html controls with their own\n\t             * stuff, so we have to account for that here.\n\t             */\n\t\n\t            next = target.next();\n\t            if (next.is(\".bootstrap-select\") && next.selectpicker) {\n\t                next.remove();\n\t                refresh = next.selectpicker;\n\t            }\n\t\n\t            target.remove().appendTo(wrapper);\n\t\n\t            if (refresh)\n\t                refresh.call(target);\n\t        }\n\t\n\t        var message;\n\t        if (error.message)\n\t            message = $(\"<div class='dialog-error help-block'>\").text(error.message);\n\t        wrapper.addClass(\"has-error\").append(message);\n\t\n\t        if (!wrapper.hasClass(\"error-keep\")) {\n\t            wrapper.on(\"keypress.dialog-error change.dialog-error\", function() {\n\t                wrapper.removeClass(\"has-error\")\n\t                    .find(\".dialog-error.help-block\").css(\"visibility\", \"hidden\");\n\t            });\n\t        }\n\t    }\n\t\n\t    function global_error(sel, error) {\n\t        var alert = $(\"<div class='alert alert-danger dialog-error'>\");\n\t        var text = error.message || error.toString();\n\t        alert.text(text);\n\t        $(\"<span class='fa fa-exclamation-triangle'>\").prependTo(alert);\n\t\n\t        /* Always log global dialog errors for easier debugging */\n\t        console.warn(text);\n\t\n\t        var footer = sel.find(\".modal-footer\");\n\t        if (footer.length)\n\t            alert.prependTo(footer);\n\t        else\n\t            alert.appendTo(sel);\n\t    }\n\t\n\t    function display_errors(sel, errors) {\n\t        clear_errors(sel);\n\t\n\t        /* The list of errors can also be passed as an array */\n\t        if (errors.length == 1 && $.isArray(errors[0]))\n\t            errors = errors[0];\n\t\n\t        var any = false;\n\t        errors.forEach(function(error) {\n\t            var target;\n\t            if (error) {\n\t                target = sel.find(error.target);\n\t\n\t                /* Errors for a specific field added below that field */\n\t                if (target && target.length)\n\t                    field_error(target, error);\n\t                else\n\t                    global_error(sel, error);\n\t\n\t                any = true;\n\t            }\n\t        });\n\t\n\t        if (!any)\n\t            return;\n\t\n\t        /* When dialog is shown again, remove all mods */\n\t        sel.on(\"show.bs.modal.dialog-error\", function() {\n\t            clear_errors(sel);\n\t        });\n\t    }\n\t\n\t    function DialogWait(promise, handle) {\n\t        this.promise = promise;\n\t        this.disabled = [];\n\t        this.handle = handle;\n\t    }\n\t\n\t    function clear_wait(sel) {\n\t        var data = sel.data(\"dialog-wait\");\n\t        sel.data(\"dialog-wait\", null);\n\t\n\t        sel.find(\".dialog-wait-ct\").remove();\n\t        sel.find(\".btn\").off(\".dialog-wait\");\n\t        sel.off(\".dialog-wait\");\n\t\n\t        if (data) {\n\t            data.disabled.forEach(function(ctl) {\n\t                ctl.removeAttr(\"disabled\");\n\t            });\n\t        }\n\t    }\n\t\n\t    function display_wait(sel, promise, handle) {\n\t        clear_wait(sel);\n\t\n\t        if (!promise) {\n\t            if (handle)\n\t                sel.modal(\"hide\");\n\t            return sel;\n\t        }\n\t\n\t        /* Clear all errors in the dialog */\n\t        if (handle)\n\t            display_errors(sel, []);\n\t\n\t        var wait = $(\"<div class='dialog-wait-ct pull-left'>\");\n\t        $(\"<div class='spinner spinner-sm'>\").appendTo(wait);\n\t        var message = $(\"<span>\").appendTo(wait);\n\t\n\t        sel.find(\".modal-footer button\").first().before(wait);\n\t\n\t        var data = new DialogWait(promise, handle);\n\t        sel.data(\"dialog-wait\", data);\n\t\n\t        var cancellation = promise.cancel || promise.close;\n\t        var cancelled = false;\n\t\n\t        /* Disable everything and stash previous disabled state */\n\t        var controls = sel.find(\".form-control\").add(\".btn\", sel);\n\t        if (cancellation)\n\t            controls = controls.not(\"[data-dismiss]\").not(\".btn-cancel\");\n\t        controls.each(function() {\n\t            var ctl = $(this);\n\t            if (!ctl.attr(\"disabled\")) {\n\t                data.disabled.push(ctl);\n\t                ctl.attr(\"disabled\", \"disabled\");\n\t            }\n\t        });\n\t\n\t        sel.find(\".btn[data-dismiss], .btn-cancel\").on(\"click.dialog-wait\", function() {\n\t            cancelled = true;\n\t            if (cancellation)\n\t                cancellation.apply(promise);\n\t            return false;\n\t        });\n\t\n\t        /* When dialog is shown again, remove all mods */\n\t        sel.on(\"hide.bs.modal.dialog-wait\", function() {\n\t            clear_wait(sel);\n\t        });\n\t\n\t        /*\n\t         * There is no way to remove a callback from a promise\n\t         * so we have to be careful to only react if still\n\t         * processing the same promise.\n\t         */\n\t        function restore() {\n\t            var state, data = sel.data(\"dialog-wait\");\n\t            if (data && data.promise === promise) {\n\t                clear_wait(sel);\n\t                state = promise.state();\n\t                if (cancelled || (state == \"resolved\" && data.handle))\n\t                    sel.modal('hide');\n\t                else if (state == \"rejected\" && data.handle)\n\t                    display_errors(sel, [ arguments[0] ]);\n\t            }\n\t        }\n\t\n\t        function update(arg) {\n\t            var data = sel.data(\"dialog-wait\");\n\t            if (data && data.promise === promise) {\n\t                if (typeof arg !== \"string\")\n\t                    arg = \"\";\n\t                message.text(arg);\n\t            }\n\t        }\n\t\n\t        promise\n\t            .always(restore)\n\t            .progress(update);\n\t\n\t        return sel;\n\t    }\n\t\n\t    $.fn.dialog = function dialog(action /* ... */) {\n\t        if (action === \"failure\")\n\t            return display_errors(this, Array.prototype.slice.call(arguments, 1));\n\t        else if (action === \"wait\")\n\t            return display_wait(this, arguments[1]);\n\t        else if (action === \"promise\")\n\t            return display_wait(this, arguments[1], true);\n\t        else\n\t            console.warn(\"unknown dialog action: \" + action);\n\t    };\n\t\n\t    window.addEventListener(\"hashchange\", function() {\n\t        $(\".modal\").modal(\"hide\");\n\t    });\n\t\n\t    /*\n\t     * OnOff switch pattern\n\t     */\n\t\n\t    function onoff_refresh(sel) {\n\t        /* During testing, no Cockpit dependency */\n\t        var _ = cockpit.gettext || function(x) { return x; };\n\t\n\t        sel = sel.find(\".btn-onoff-ct\").andSelf().filter(\".btn-onoff-ct\");\n\t        sel.each(function(x, el) {\n\t            var self = $(el)\n\t                .attr(\"data-toggle\", \"buttons\")\n\t                .addClass(\"btn-group\");\n\t            var value = self.onoff(\"value\");\n\t            var buttons = self.find(\".btn\");\n\t            var name = self.find(\"input\").first().attr(\"name\") || unique();\n\t            var i, input, text;\n\t            for (i = buttons.length; i < 2; i++) {\n\t                input = $('<input type=\"radio\" autocomplete=\"off\">');\n\t                text = document.createTextNode(i === 0 ? _(\"On\") : _(\"Off\"));\n\t                self.append($('<label class=\"btn\">').append(input, text));\n\t                buttons = null;\n\t            }\n\t            buttons = buttons || self.find(\".btn\");\n\t            buttons.find(\"input\").attr(\"name\", name);\n\t            onoff_change(self, !!value);\n\t        });\n\t        return sel;\n\t    }\n\t\n\t    function onoff_value(sel) {\n\t        return sel.find(\".btn\").first().hasClass(\"active\");\n\t    }\n\t\n\t    function onoff_change(sel, value) {\n\t        return sel.each(function(i, el) {\n\t            var buttons = $(el).find(\".btn\");\n\t            buttons.first().toggleClass(\"active\", !!value).find(\"input\").prop(\"checked\", !!value);\n\t            buttons.last().toggleClass(\"active\", !value).find(\"input\").prop(\"checked\", !value);\n\t        });\n\t    }\n\t\n\t    $.fn.onoff = function onoff(action /* ... */) {\n\t        if (arguments.length === 0 || action == \"refresh\") {\n\t            return onoff_refresh(this);\n\t        } else if (action === \"value\") {\n\t            if (arguments.length === 1)\n\t                return onoff_value(this);\n\t            else\n\t                return onoff_change(this, arguments[1]);\n\t        } else if (action == \"disabled\") {\n\t            return this.find(\".btn\").toggleClass(\"disabled\", arguments[1]);\n\t        } else {\n\t            console.warn(\"unknown switch action: \" + action);\n\t        }\n\t    };\n\t\n\t    /* ----------------------------------------------------------------------------\n\t     * Sliders\n\t     *\n\t     * <div class=\"slider\" value=\"0.5\">\n\t     *    <div class=\"slider-bar\">\n\t     *        <div class=\"slider-thumb\"></div>\n\t     *    </div>\n\t     *    <div class=\"slider-bar\">\n\t     *        <!-- optional left overs -->\n\t     *    </div>\n\t     * </div>\n\t     *\n\t     * A slider control. The first div.slider-bar is the one that is resized.\n\t     * The value will be bounded between 0 and 1 as a floating point number.\n\t     *\n\t     * The following div.slider-bar if present is resized to fill the remainder\n\t     * of the slider if not given a specific size. You can put more div.slider-bar\n\t     * inside it to reflect squashing other prevous allocations.\n\t     *\n\t     * If the following div.slider-bar have a width specified, then the\n\t     * slider supports the concept of overflowing. If the slider overflows\n\t     * it will get the .slider-warning class and go a bit red.\n\t     *\n\t     * On document creation any div.slider are automatically turned into\n\t     * Bar graphs.\n\t     *\n\t     * Slider has the following extra read/write properties:\n\t     *\n\t     * .value: the floating point value the slider is set to.\n\t     * .disabled: whether to display slider as disabled and refuse interacton.\n\t     *\n\t     * Slider has this event:\n\t     *\n\t     * on('change'): fired when the slider changes, passes value as additional arg.\n\t     */\n\t\n\t    function resize_flex(slider, flex, total, part) {\n\t        var value = 0;\n\t        if (part > total)\n\t            value = 1;\n\t        else if (part < 0 || isNaN(part))\n\t            value = 0;\n\t        else if (!isNaN(total) && total > 0 && part >= 0)\n\t            value = (part / total);\n\t        $(flex).css('width', (value * 100) + \"%\").\n\t            next(\"div\").css('margin-left', $(flex).css('width'));\n\t\n\t        /* Set the property and the attribute */\n\t        slider.value = value;\n\t    }\n\t\n\t    function update_value(slider) {\n\t        resize_flex(slider, $(slider).children(\"div.slider-bar\").first()[0], 1, slider.value);\n\t    }\n\t\n\t    function check_overflow(slider) {\n\t        $(slider).toggleClass(\"slider-warning\",\n\t                              slider.offsetWidth < slider.scrollWidth);\n\t    }\n\t\n\t    function setup_slider(slider) {\n\t        $(slider).attr('unselectable', 'on');\n\t\n\t        Object.defineProperty(slider, \"value\", {\n\t            get: function() {\n\t                return parseFloat(this.getAttribute(\"value\"));\n\t            },\n\t            set: function(v) {\n\t                var s = String(v);\n\t                if (s != this.getAttribute(\"value\"))\n\t                    this.setAttribute(\"value\", v);\n\t            }\n\t        });\n\t\n\t        Object.defineProperty(slider, \"disabled\", {\n\t            get: function() {\n\t                if (!this.hasAttribute(\"disabled\"))\n\t                    return false;\n\t                return this.getAttribute(\"disabled\").toLowerCase() != \"false\";\n\t            },\n\t            set: function(v) {\n\t                this.setAttribute(\"disabled\", v ? \"true\" : \"false\");\n\t            }\n\t        });\n\t\n\t        update_value(slider);\n\t        check_overflow(slider);\n\t\n\t        $(slider).on(\"change\", function() {\n\t            update_value(slider);\n\t            $(slider).toggleClass(\"slider-disabled\", slider.disabled);\n\t        });\n\t\n\t        if (slider.disabled)\n\t            $(slider).addClass(\"slider-disabled\");\n\t\n\t        $(slider).on(\"mousedown\", function(ev) {\n\t            if (slider.disabled)\n\t                return true; /* default action */\n\t            var flex;\n\t            var offset = $(slider).offset().left;\n\t            if ($(ev.target).hasClass(\"slider-thumb\")) {\n\t                var hitx  = (ev.offsetX || ev.clientX - $(ev.target).offset().left);\n\t                offset += (hitx - $(ev.target).outerWidth() / 2);\n\t                flex = $(ev.target).parent()[0];\n\t            } else {\n\t                flex = $(slider).children(\"div.slider-bar\").first()[0];\n\t                resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n\t                $(slider).trigger(\"change\", [slider.value]);\n\t                check_overflow(slider);\n\t            }\n\t\n\t            $(document).\n\t                on(\"mousemove.slider\", function(ev) {\n\t                    resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n\t                    $(slider).trigger(\"change\", [slider.value]);\n\t                    check_overflow(slider);\n\t                    return false;\n\t                }).\n\t                on(\"mouseup.slider\", function(ev) {\n\t                    $(document).\n\t                        off(\"mousemove.slider\").\n\t                        off(\"mouseup.slider\");\n\t                    return false;\n\t                });\n\t            return false; /* no default action */\n\t        });\n\t    }\n\t\n\t    function setup_sliders() {\n\t        $(\"div.slider\").each(function() {\n\t            setup_slider(this);\n\t        });\n\t    }\n\t\n\t    $.fn.slider = function Slider(action) {\n\t        var sel = this;\n\t        if (arguments.length === 0 || action == \"refresh\") {\n\t            sel.each(function() {\n\t                setup_slider(this);\n\t            });\n\t            return sel;\n\t        } else {\n\t            console.warn(\"unknown slider action: \" + action);\n\t        }\n\t    };\n\t\n\t    $(document).ready(setup_sliders);\n\t\n\t    /* -----------------------------------------------------------------------------\n\t     * Privileged UI actions.\n\t     */\n\t\n\t    // placement is optional, \"top\", \"left\", \"bottom\", \"right\"\n\t    $.fn.update_privileged = function update_privileged(perm, denied_message, placement) {\n\t        var allowed = (perm.allowed !== false);\n\t        var selector = this;\n\t\n\t        selector.each(function() {\n\t            // preserve old title first time to use when allowed\n\t            // activate tooltip\n\t            var allowed_key = 'allowed-title';\n\t            if (typeof $(this).data(allowed_key) === 'undefined' ||\n\t                   $(this).data(allowed_key) === false)\n\t                $(this).data(allowed_key, $(this).attr('title') || \"\");\n\t\n\t            var options = { html: true };\n\t            if (placement)\n\t                options['placement'] = placement;\n\t\n\t            $(this).tooltip(options);\n\t\n\t            if ($(this).hasClass(\"disabled\") === allowed) {\n\t              $(this).toggleClass(\"disabled\", !allowed)\n\t                   .attr('data-original-title', null);\n\t\n\t              if (allowed)\n\t                  $(this).attr('title', $(this).data(allowed_key));\n\t              else\n\t                  $(this).attr('title', denied_message);\n\t              $(this).tooltip('fixTitle');\n\t            }\n\t        });\n\t\n\t        return selector;\n\t    };\n\t}());\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"#!/bin/sh\\n\\nset -eu\\n\\n# The first thing we do is list loaded keys\\nssh-add -L || true\\n\\n# Try to list keys in this directory\\ncd \\\"$1\\\" || exit 0\\n\\n# After that each .pub file gets its on set of blocks\\nfor file in *.pub; do\\n    printf \\\"\\\\v\\\"\\n    cat \\\"$file\\\"\\n    printf \\\"\\\\v%s\\\\v\\\" \\\"$file\\\"\\n    ssh-keygen -l -f \\\"$file\\\" || true\\ndone\\n\"\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2015 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(3);\n\t    var cockpit = __webpack_require__(4);\n\t\n\t    var mustache = __webpack_require__(14);\n\t\n\t    var machines = __webpack_require__(2);\n\t    var credentials = __webpack_require__(5);\n\t\n\t    var add_tmpl = __webpack_require__(16);\n\t    var auth_failed_tmpl = __webpack_require__(17);\n\t    var change_auth_tmpl = __webpack_require__(18);\n\t    var change_port_tmpl = __webpack_require__(19);\n\t    var color_picker_tmpl = __webpack_require__(20);\n\t    var invalid_hostkey_tmpl = __webpack_require__(21);\n\t    var not_supported_tmpl = __webpack_require__(22);\n\t    var sync_users_tmpl = __webpack_require__(23);\n\t    var unknown_hosts_tmpl = __webpack_require__(24);\n\t\n\t    var _ = cockpit.gettext;\n\t\n\t    var default_codes = {\n\t        \"no-cockpit\": \"not-supported\",\n\t        \"not-supported\": \"not-supported\",\n\t        \"protocol-error\": \"not-supported\",\n\t        \"authentication-not-supported\": \"change-auth\",\n\t        \"authentication-failed\": \"change-auth\",\n\t        \"no-forwarding\": \"change-auth\",\n\t        \"unknown-hostkey\": \"unknown-hostkey\",\n\t        \"invalid-hostkey\": \"invalid-hostkey\",\n\t        \"not-found\": \"add-machine\",\n\t        \"sync-users\": \"sync-users\"\n\t    };\n\t\n\t    function translate_and_init(tmpl) {\n\t        var tmp = $(\"<div>\").append(tmpl);\n\t        tmp.find(\"[translatable=\\\"yes\\\"]\").each(function(i, e) {\n\t            var old = e.outerHTML;\n\t            var translated = cockpit.gettext(e.getAttribute(\"context\"), $(e).text());\n\t            $(e).removeAttr(\"translatable\").text(translated);\n\t            tmpl = tmpl.replace(old, e.outerHTML);\n\t        });\n\t        mustache.parse(tmpl);\n\t        return tmpl;\n\t    }\n\t\n\t    var templates = {\n\t        \"add-machine\" : translate_and_init(add_tmpl),\n\t        \"auth-failed\" : translate_and_init(auth_failed_tmpl),\n\t        \"change-auth\" : translate_and_init(change_auth_tmpl),\n\t        \"change-port\" : translate_and_init(change_port_tmpl),\n\t        \"color-picker\" : translate_and_init(color_picker_tmpl),\n\t        \"invalid-hostkey\" : translate_and_init(invalid_hostkey_tmpl),\n\t        \"not-supported\" : translate_and_init(not_supported_tmpl),\n\t        \"sync-users\" : translate_and_init(sync_users_tmpl),\n\t        \"unknown-hostkey\" : translate_and_init(unknown_hosts_tmpl)\n\t    };\n\t\n\t    function full_address(machines_ins, address) {\n\t        var machine = machines_ins.lookup(address);\n\t        if (machine && machine.address != \"localhost\")\n\t            return machine.connection_string;\n\t\n\t        return address;\n\t    }\n\t\n\t    function Dialog(selector, address, machines_ins, codes) {\n\t        var self = this;\n\t\n\t        self.machines_ins = machines_ins;\n\t        self.codes = codes;\n\t        self.address = full_address(self.machines_ins, address);\n\t\n\t        var promise_callback = null;\n\t\n\t        var success_callback = null;\n\t\n\t        var current_template = null;\n\t        var current_instance = null;\n\t\n\t        function address_or_label() {\n\t            var machine = self.machines_ins.lookup(self.address);\n\t            var host = self.machines_ins.split_connection_string(self.address).address;\n\t            if (machine && machine.label)\n\t                host = machine.label;\n\t            return host;\n\t        }\n\t\n\t        function change_content(template, error_options) {\n\t            var old_instance = current_instance;\n\t\n\t            if (current_template === template)\n\t                return;\n\t\n\t            if (template == \"add-machine\")\n\t                current_instance = new AddMachine(self);\n\t            else if (template == \"sync-users\")\n\t                current_instance = new SyncUsers(self);\n\t            else if (template == \"unknown-hostkey\")\n\t                current_instance = new HostKey(self, template);\n\t            else if (template == \"invalid-hostkey\")\n\t                current_instance = new HostKey(self, template);\n\t            else if (template == \"change-auth\")\n\t                current_instance = new ChangeAuth(self);\n\t            else if (template == \"change-port\")\n\t                current_instance = new MachinePort(self);\n\t            else\n\t                current_instance = new Simple(self);\n\t\n\t            current_template = template;\n\t            current_instance.load(error_options);\n\t\n\t            if (old_instance && old_instance.close)\n\t                old_instance.close();\n\t            old_instance = null;\n\t        }\n\t\n\t        self.try_to_connect = function(address, options) {\n\t            var dfd = $.Deferred();\n\t            var conn_options = $.extend({ \"payload\": \"echo\",\n\t                                          \"host\": address },\n\t                                        options);\n\t\n\t            var machine = self.machines_ins.lookup(address);\n\t            if (machine && machine.host_key && !machine.on_disk) {\n\t                conn_options['temp-session'] = false; /* Compatiblity option */\n\t                conn_options['session'] = 'shared';\n\t                conn_options['host-key'] = machine.host_key;\n\t            }\n\t            var client = cockpit.channel(conn_options);\n\t            client.send(\"x\");\n\t            $(client)\n\t               .on(\"message\", function() {\n\t                    $(client).off();\n\t                    client.close();\n\t                    dfd.resolve();\n\t                })\n\t                .on(\"close\", function(event, options) {\n\t                    dfd.reject(options);\n\t                });\n\t\n\t            return dfd.promise();\n\t        };\n\t\n\t        self.get_sel = function(child_selector) {\n\t            var ret_txt = selector;\n\t            if (child_selector)\n\t                ret_txt = ret_txt + \" \" + child_selector;\n\t            return $(ret_txt);\n\t        };\n\t\n\t        self.set_on_success = function (callback) {\n\t            success_callback = callback;\n\t        };\n\t\n\t        self.set_goal = function (callback) {\n\t            promise_callback = callback;\n\t        };\n\t\n\t        self.complete = function(val) {\n\t            if (success_callback)\n\t                success_callback(val);\n\t            else\n\t                $(selector).modal('hide');\n\t        };\n\t\n\t        self.render = function render(data, template) {\n\t            if (!template)\n\t                template = current_template;\n\t\n\t            var address_data = self.machines_ins.split_connection_string(self.address);\n\t            var context = $.extend({\n\t                'host' : address_or_label(),\n\t                'full_address' : self.address,\n\t                'context_title' : self.context_title,\n\t                'strong' : function() {\n\t                    return function(text, render) {\n\t                        return \"<strong>\" + render(text) + \"</strong>\";\n\t                    };\n\t                }\n\t            }, data, address_data);\n\t\n\t            var output = $(mustache.render(templates[template], context));\n\t            cockpit.translate(output);\n\t            self.get_sel(\".modal-content\").html(output);\n\t        };\n\t\n\t        self.render_error = function render_error(error) {\n\t            var template;\n\t            if (error.problem && error.command == \"close\")\n\t                template = self.codes[error.problem];\n\t\n\t            if (template && current_template !== template)\n\t                change_content(template, error);\n\t            else\n\t                $(selector).dialog(\"failure\", cockpit.message(error));\n\t        };\n\t\n\t        self.render_template = function render_template(template) {\n\t            change_content(template);\n\t        };\n\t\n\t        self.show = function () {\n\t            var sel = self.get_sel();\n\t            sel.on('hide.bs.modal', function () {\n\t                self.get_sel(\".model-content\").empty();\n\t            });\n\t            sel.modal('show');\n\t        };\n\t\n\t        self.run = function (promise, failure_callback) {\n\t            var dialog_dfd = $.Deferred();\n\t            var promise_funcs = [];\n\t\n\t            function next(i) {\n\t                promise_funcs[i]()\n\t                    .done(function(val) {\n\t                        i = i + 1;\n\t                        if (i < promise_funcs.length) {\n\t                            next(i);\n\t                        } else {\n\t                            dialog_dfd.resolve();\n\t                            self.complete(val);\n\t                        }\n\t                    })\n\t                    .fail(function(ex) {\n\t                        if (failure_callback)\n\t                            failure_callback(ex);\n\t                        else\n\t                            self.render_error(ex);\n\t                        dialog_dfd.reject(ex);\n\t                    });\n\t            }\n\t\n\t            promise_funcs.push(function() {\n\t                return promise;\n\t            });\n\t\n\t            self.get_sel().dialog(\"wait\", dialog_dfd.promise());\n\t            if (promise_callback)\n\t                promise_funcs.push(promise_callback);\n\t\n\t            next(0);\n\t        };\n\t    }\n\t\n\t    function is_method_supported(methods, method) {\n\t        var result = methods[method];\n\t        return result ? result != \"no-server-support\" : false;\n\t    }\n\t\n\t    function can_try_method(methods, method) {\n\t        if (is_method_supported(methods, method))\n\t            return method == 'password' || methods[method] != \"not-provided\";\n\t        return false;\n\t    }\n\t\n\t    function MachineColorPicker(machines_ins) {\n\t        var self = this;\n\t\n\t        self.render = function(selector, address, selected_color) {\n\t            var machine;\n\t\n\t            if (address && !selected_color) {\n\t                machine = machines_ins.lookup(address);\n\t                if (machine)\n\t                    selected_color = machine.color;\n\t            }\n\t\n\t            if (!selected_color)\n\t                selected_color = machines_ins.unused_color();\n\t\n\t            var part, colors = [];\n\t            for (var i = 0; i < machines.colors.length; i += 6) {\n\t                part = machines.colors.slice(i, i+6);\n\t                colors.push({\"list\" : part});\n\t            }\n\t\n\t            var text = mustache.render(templates[\"color-picker\"], { 'colors' : colors, });\n\t            $(selector).html(text);\n\t\n\t            $(\"#host-edit-color\", selector).css(\"background-color\", selected_color);\n\t            $(\".color-cell\", selector).each(function(index) {\n\t                $(this).css(\"background-color\", machines.colors[index]);\n\t            });\n\t\n\t            $('#host-edit-color-popover .popover-content .color-cell', selector)\n\t                .click(function() {\n\t                    var color = $(this).css('background-color');\n\t                    $('#host-edit-color', selector).css('background-color', color);\n\t                });\n\t\n\t            $(\"#host-edit-color\", selector).parent().\n\t                on('show.bs.dropdown', function () {\n\t                    var $div = $('#host-edit-color', selector);\n\t                    var $pop = $('#host-edit-color-popover', selector);\n\t                    var div_pos = $div.position();\n\t                    var div_width = $div.width();\n\t                    var div_height = $div.height();\n\t                    var pop_width = $pop.width();\n\t                    var pop_height = $pop.height();\n\t\n\t                    var top = div_pos.top - pop_height + 10;\n\t                    if (top < 0) {\n\t                        top = div_pos.top + div_height + 10;\n\t                        $pop.addClass(\"bottom\");\n\t                        $pop.removeClass(\"top\");\n\t                    } else {\n\t                        $pop.addClass(\"top\");\n\t                        $pop.removeClass(\"bottom\");\n\t                    }\n\t                    $pop.css('left', div_pos.left + (div_width - pop_width) / 2);\n\t                    $pop.css('top', top);\n\t                    $pop.show();\n\t                }).\n\t                on('hide.bs.dropdown', function () {\n\t                    $('#host-edit-color-popover', selector).hide();\n\t                });\n\t        };\n\t    }\n\t\n\t    function Simple(dialog) {\n\t        var self = this;\n\t\n\t        self.load = function() {\n\t            dialog.render();\n\t        };\n\t    }\n\t\n\t    function AddMachine(dialog) {\n\t        var self = this;\n\t        var color = null;\n\t        var selector = dialog.get_sel();\n\t        var run_error = null;\n\t\n\t        var invisible = dialog.machines_ins.addresses.filter(function(addr) {\n\t            var m = dialog.machines_ins.lookup(addr);\n\t            return !m || !m.visible;\n\t        });\n\t\n\t        function existing_error(address) {\n\t            var ex = null;\n\t            var machine = dialog.machines_ins.lookup(address);\n\t            if (machine && machine.visible && machine.on_disk) {\n\t                ex = new Error(_(\"This machine has already been added.\"));\n\t                ex.target = \"#add-machine-address\";\n\t            }\n\t            return ex;\n\t        }\n\t\n\t        function check_address(evt) {\n\t            var disabled = true;\n\t            var ex = null;\n\t\n\t            var addr = $('#add-machine-address').val();\n\t            var button = dialog.get_sel(\".btn-primary\");\n\t            if (addr === \"\") {\n\t                disabled = true;\n\t            } else if (!machines.allow_connection_string &&\n\t                       (addr.indexOf('@') > -1 || addr.indexOf(':') > -1)) {\n\t                ex = new Error(_(\"This version of cockpit-ws does not support connecting to a host with an alternate user or port\"));\n\t            } else if (addr.search(/\\s+/) === -1) {\n\t                ex = existing_error(addr);\n\t                if (!ex)\n\t                    disabled = false;\n\t            } else {\n\t                ex = new Error(_(\"The IP address or host name cannot contain whitespace.\"));\n\t            }\n\t\n\t            if (ex)\n\t                ex.target = \"#add-machine-address\";\n\t\n\t            if (run_error)\n\t                selector.dialog(\"failure\", run_error, ex);\n\t            else\n\t                selector.dialog(\"failure\", ex);\n\t\n\t            button.prop(\"disabled\", disabled);\n\t        }\n\t\n\t        function add_machine() {\n\t            run_error = null;\n\t            dialog.address = $('#add-machine-address').val();\n\t            color = machines.colors.parse($('#add-machine-color-picker #host-edit-color').css('background-color'));\n\t            if (existing_error(dialog.address))\n\t                return;\n\t\n\t            dialog.set_goal(function() {\n\t                var dfp = $.Deferred();\n\t                dialog.machines_ins.add(dialog.address, color)\n\t                    .done(dfp.resolve)\n\t                    .fail(function (ex) {\n\t                        var msg = cockpit.format(_(\"Failed to add machine: $0\"),\n\t                                                 cockpit.message(ex));\n\t                        dfp.reject(msg);\n\t                    });\n\t\n\t                return dfp.promise();\n\t            });\n\t\n\t            dialog.run(dialog.try_to_connect(dialog.address), function (ex) {\n\t                if (ex.problem == \"no-host\") {\n\t                    var host_id_port = dialog.address;\n\t                    var port_index = host_id_port.lastIndexOf(\":\");\n\t                    var port = \"22\";\n\t                    if (port_index === -1)\n\t                        host_id_port = dialog.address + \":22\";\n\t                    else\n\t                        port = host_id_port.substr(port_index + 1);\n\t                    ex.message = cockpit.format(_(\"Cockpit could not contact the given host $0. Make sure it has ssh running on port $1, or specify another port in the address.\"), host_id_port, port);\n\t                    ex = cockpit.message(ex);\n\t                    run_error = ex;\n\t                }\n\t                dialog.render_error(ex);\n\t            });\n\t        }\n\t\n\t        self.load = function() {\n\t            var manifest = cockpit.manifests[\"shell\"] || {};\n\t            var limit = parseInt(manifest[\"machine-limit\"], 10);\n\t            var color_picker = new MachineColorPicker(dialog.machines_ins);\n\t            if (!limit || isNaN(limit))\n\t                limit = 20;\n\t\n\t            dialog.render({\n\t                'nearlimit' : limit * 0.75 <= dialog.machines_ins.list.length,\n\t                'limit' : limit,\n\t                'placeholder' : _(\"Enter IP address or host name\"),\n\t                'options' : invisible,\n\t            });\n\t\n\t            var button = dialog.get_sel(\".btn-primary\");\n\t            button.on(\"click\", add_machine);\n\t\n\t            $(\"#add-machine-address\").on(\"keyup\", function (ev) {\n\t                if (ev.which === 13) {\n\t                    var disabled = button.prop('disabled');\n\t                    if (!disabled)\n\t                        add_machine();\n\t                }\n\t            });\n\t            $(\"#add-machine-address\").on(\"input focus\", check_address);\n\t            color_picker.render(\"#add-machine-color-picker\", dialog.address, color);\n\t            $(\"#add-machine-address\").focus();\n\t        };\n\t    }\n\t\n\t    function MachinePort(dialog) {\n\t        var self = this;\n\t\n\t        function change_port() {\n\t            var dfp = $.Deferred();\n\t            var parts = dialog.machines_ins.split_connection_string(dialog.address);\n\t            parts.port = $(\"#edit-machine-port\").val();\n\t            var address = dialog.machines_ins.generate_connection_string(parts.user,\n\t                                                                  parts.port,\n\t                                                                  parts.address);\n\t            function update_host(ex) {\n\t                dialog.address = address;\n\t                dialog.machines_ins.change(parts.address, { \"port\": parts.port })\n\t                    .done(function () {\n\t                        // We failed before so try to connect again\n\t                        // now that the machine is saved.\n\t                        if (ex) {\n\t                            dialog.try_to_connect(address)\n\t                                .done(dialog.complete)\n\t                                .fail(function (e) {\n\t                                    dfp.reject(e);\n\t                                });\n\t                        } else {\n\t                            dfp.resolve();\n\t                        }\n\t                    })\n\t                    .fail(function (ex) {\n\t                        var msg = cockpit.format(_(\"Failed to edit machine: $0\"),\n\t                                                 cockpit.message(ex));\n\t                        dfp.reject(msg);\n\t                    });\n\t            }\n\t\n\t            dialog.try_to_connect(address)\n\t                .done(function () {\n\t                    update_host();\n\t                })\n\t                .fail(function (ex) {\n\t                    /* any other error means progress, so save */\n\t                    if (ex.problem != 'no-host')\n\t                        update_host(ex);\n\t                    else\n\t                        dfp.reject(ex);\n\t                });\n\t\n\t            dialog.run(dfp.promise());\n\t        }\n\t\n\t        self.load = function() {\n\t            var machine = dialog.machines_ins.lookup(dialog.address);\n\t            if (!machine) {\n\t                dialog.get_sel().modal('hide');\n\t                return;\n\t            }\n\t\n\t            dialog.render({ 'port' : machine.port,\n\t                            'allow_connection_string' : machines.allow_connection_string });\n\t            if (machines.allow_connection_string)\n\t                dialog.get_sel(\".btn-primary\").on(\"click\", change_port);\n\t        };\n\t    }\n\t\n\t    function HostKey(dialog, problem) {\n\t        var self = this;\n\t        var error_options = null;\n\t        var key = null;\n\t        var allow_change = problem == \"unknown-hostkey\";\n\t\n\t        function add_key() {\n\t            var q;\n\t            var machine = dialog.machines_ins.lookup(dialog.address);\n\t            if (!machine || machine.on_disk) {\n\t                q = dialog.machines_ins.add_key(key);\n\t            } else {\n\t                /* When machine isn't saved to disk\n\t                   don't save the key either */\n\t                q = dialog.machines_ins.change(dialog.address, {\n\t                    'host_key': key\n\t                });\n\t            }\n\t\n\t            var promise = q.then(function () {\n\t                var inner = dialog.try_to_connect(dialog.address);\n\t\n\t                inner.fail(function(ex) {\n\t                    if ((ex.problem == \"invalid-hostkey\" ||\n\t                        ex.problem == \"unknown-hostkey\") &&\n\t                        machine && !machine.on_disk) {\n\t                            dialog.machines_ins.change(dialog.address, {\n\t                                'host_key': null\n\t                            });\n\t                        }\n\t                    });\n\t\n\t                return inner;\n\t            });\n\t\n\t            dialog.run(promise);\n\t        }\n\t\n\t        function render() {\n\t            var promise = null;\n\t            var fp;\n\t\n\t            if (error_options) {\n\t                key = error_options[\"host-key\"];\n\t                fp = error_options[\"host-fingerprint\"];\n\t            }\n\t\n\t            dialog.render({\n\t                'context_title' : dialog.context_title,\n\t                'path' : machines.known_hosts_path,\n\t                'key' : fp,\n\t                'key_host' : key ? key.split(' ')[0] : null,\n\t            });\n\t\n\t            if (!key) {\n\t                promise = dialog.try_to_connect(dialog.address)\n\t                    .fail(function(ex) {\n\t                        if (ex.problem != problem) {\n\t                            dialog.render_error(ex);\n\t                        } else {\n\t                            error_options = ex;\n\t                            render();\n\t                        }\n\t                    })\n\t\n\t                    // Fixed already, just close\n\t                    .done(function (v) {\n\t                        dialog.complete(v);\n\t                    });\n\t\n\t                dialog.get_sel().dialog(\"wait\", promise);\n\t            } else if (allow_change) {\n\t                dialog.get_sel(\".btn-primary\").on(\"click\", add_key);\n\t            }\n\t        }\n\t\n\t        self.load = function(ex) {\n\t            error_options = ex;\n\t            render();\n\t        };\n\t    }\n\t\n\t    function ChangeAuth(dialog) {\n\t        var self = this;\n\t        var error_options = null;\n\t        var allows_password = false;\n\t        var keys = null;\n\t        var machine = dialog.machines_ins.lookup(dialog.address);\n\t\n\t        self.user = { };\n\t\n\t        function update_keys() {\n\t            var key_div = dialog.get_sel('.keys');\n\t\n\t            if (key_div) {\n\t                key_div.empty();\n\t                for (var id in keys.items) {\n\t                    var key = keys.items[id];\n\t                    if (key.loaded)\n\t                        key_div.append($(\"<div>\").text(key.name));\n\t                }\n\t            }\n\t        }\n\t\n\t        function login() {\n\t            var address;\n\t            var options = {};\n\t            var dfp = $.Deferred();\n\t            var user = $(\"#login-custom-user\").val();\n\t\n\t            var parts = dialog.machines_ins.split_connection_string(dialog.address);\n\t            parts.user = user;\n\t\n\t            address = dialog.machines_ins.generate_connection_string(parts.user,\n\t                                                              parts.port,\n\t                                                              parts.address);\n\t\n\t            if ($(\"#login-type\").val() != 'stored') {\n\t                options['password'] = $(\"#login-custom-password\").val();\n\t                options[\"session\"] = 'shared';\n\t                if (!user) {\n\t                    /* we don't want to save the default user for everyone\n\t                     * so we pass current user as an option, but make sure the\n\t                     * session isn't private\n\t                     */\n\t                    if (self.user && self.user.name)\n\t                        options[\"user\"] = self.user.name;\n\t                    options[\"temp-session\"] = false; /* Compatibility option */\n\t                }\n\t            }\n\t\n\t            dialog.try_to_connect(address, options)\n\t                .done(function () {\n\t                    dialog.address = address;\n\t                    if (machine) {\n\t                        dialog.machines_ins.change(machine.address, { \"user\" : user })\n\t                            .done(dfp.resolve)\n\t                            .fail(dfp.reject);\n\t                    } else {\n\t                        dfp.resolve();\n\t                    }\n\t                })\n\t                .fail(dfp.reject);\n\t\n\t            dialog.run(dfp.promise());\n\t        }\n\t\n\t        function change_login_type(value) {\n\t            var stored = value != 'password';\n\t            var text = $(\"#login-type li[value=\" + value + \"]\").text();\n\t            $(\"#login-type button span\").text(text);\n\t            $(\"#login-available\").toggle(stored);\n\t            $(\"#login-diff-password\").toggle(!stored);\n\t        }\n\t\n\t        function render() {\n\t            var promise = null;\n\t            var template = \"change-auth\";\n\t            if (!machines.allow_connection_string || !machines.has_auth_results)\n\t                template = \"auth-failed\";\n\t\n\t            var methods = null;\n\t            var available = null;\n\t            var supported = null;\n\t\n\t            var machine_user = dialog.machines_ins.split_connection_string(dialog.address).user;\n\t            if (!machine_user && machine)\n\t                machine_user = machine.user;\n\t\n\t            if (error_options && machines.has_auth_results) {\n\t                supported = {};\n\t                available = {};\n\t\n\t                methods = error_options[\"auth-method-results\"];\n\t                if (methods) {\n\t                    allows_password = is_method_supported(methods, 'password');\n\t                    for (var method in methods) {\n\t                        if (can_try_method(methods, method)) {\n\t                            available[method] = true;\n\t                        }\n\t                    }\n\t                }\n\t\n\t                if ($.isEmptyObject(available))\n\t                    template = \"auth-failed\";\n\t            }\n\t\n\t            dialog.render({\n\t                'supported' : methods,\n\t                'available' : available,\n\t                'machine_user' : machine_user,\n\t                'user' : self.user ? self.user.name : \"\",\n\t                'allows_password' : allows_password,\n\t                'can_sync': !!dialog.codes['sync-users'],\n\t                'machines.allow_connection_string' : machines.allow_connection_string,\n\t                'sync_link' : function() {\n\t                    return function(text, render) {\n\t                        return '<a id=\"do-sync-users\">' + render(text) + \"</a>\";\n\t                    };\n\t                }\n\t            }, template);\n\t\n\t            if (methods === null && machines.has_auth_results) {\n\t                promise = dialog.try_to_connect(dialog.address)\n\t                    .fail(function(ex) {\n\t                        error_options = ex;\n\t                        render();\n\t                    })\n\t\n\t                    // Fixed already, just close\n\t                    .done(function (v) {\n\t                        dialog.complete(v);\n\t                    });\n\t\n\t                dialog.get_sel().dialog(\"wait\", promise);\n\t            } else if (!$.isEmptyObject(available)) {\n\t                $(\"#login-type li\").on('click', function() {\n\t                    change_login_type($(this).attr(\"value\"));\n\t                });\n\t                change_login_type($(\"#login-type li:first-child\").attr(\"value\"));\n\t                dialog.get_sel(\".btn-primary\").on(\"click\", login);\n\t                dialog.get_sel(\"a[data-content]\").popover();\n\t\n\t                update_keys();\n\t            }\n\t\n\t            dialog.get_sel(\"#do-sync-users\").on(\"click\", function () {\n\t                dialog.render_template(\"sync-users\");\n\t            });\n\t        }\n\t\n\t        self.load = function(ex) {\n\t            error_options = ex;\n\t            if (credentials) {\n\t                keys = credentials.keys_instance();\n\t                $(keys).on(\"changed\", update_keys);\n\t            }\n\t            cockpit.user()\n\t                .done(function (user) {\n\t                    self.user = user;\n\t                })\n\t                .always(function (user) {\n\t                    render();\n\t                });\n\t        };\n\t\n\t        self.close = function(ex) {\n\t            if (keys) {\n\t                $(keys).off();\n\t                keys.close();\n\t            }\n\t            keys = null;\n\t        };\n\t    }\n\t\n\t    function SyncUsers(dialog) {\n\t        var self = this;\n\t        var users = {};\n\t\n\t        var needs_auth = false;\n\t        var needs_root = false;\n\t        var methods = null;\n\t        var remote_options = { \"superuser\": true };\n\t\n\t        var perm_failed = null;\n\t\n\t        function load_users() {\n\t            var local = cockpit.dbus(null, { bus: \"internal\",\n\t                                             host: \"localhost\",\n\t                                             superuser: true });\n\t            $(local).on(\"close\", function(event, options) {\n\t                perm_failed = options;\n\t                render();\n\t            });\n\t\n\t            var proxy = local.proxy(\"cockpit.Setup\", \"/setup\");\n\t            proxy.wait(function () {\n\t                if (proxy.valid) {\n\t                    var blank = {\n\t                        \"t\" : \"(asas)\",\n\t                        \"v\" : [[], []]\n\t                    };\n\t\n\t                    proxy.Transfer(\"passwd1\", blank)\n\t                        .done(function(prepared) {\n\t                            var i, parts, name;\n\t                            var groups = prepared.v[1];\n\t\n\t                            for (i = 0; i < prepared.v[0].length; i++) {\n\t                                var raw = prepared.v[0][i];\n\t\n\t                                parts = raw.split(\":\");\n\t                                name = parts[0];\n\t\n\t                                users[name] = {\n\t                                    \"username\" : name,\n\t                                    \"name\" : parts[4] || name,\n\t                                    \"raw\" : raw,\n\t                                    \"groups\" : [],\n\t                                };\n\t                            }\n\t\n\t                            for (i = 0; i < groups.length; i++) {\n\t                                parts = groups[i].split(\":\");\n\t                                name = parts[0];\n\t                                var members = parts[parts.length - 1].split(\",\");\n\t                                for (var j = 0; j < members.length; j++) {\n\t                                    var u = members[j];\n\t                                    if (users[u])\n\t                                        users[u].groups.push(name);\n\t                                }\n\t                            }\n\t                        })\n\t                        .fail(function(ex) {\n\t                            ex.message = cockpit.gettext(ex.message);\n\t                            perm_failed = ex;\n\t                        })\n\t                        .always(function(ex) {\n\t                            $(local).off();\n\t                            local.close();\n\t                            render();\n\t                        });\n\t                }\n\t            });\n\t        }\n\t\n\t        function sync_users() {\n\t            var client = null;\n\t\n\t            var dfd = $.Deferred();\n\t            var promise = dfd.promise();\n\t\n\t            dialog.run(promise);\n\t\n\t            /* A successfull sync should close the dialog */\n\t            dialog.set_on_success(null);\n\t\n\t            promise.always(function () {\n\t                if (client) {\n\t                    $(client).off();\n\t                    client.close();\n\t                }\n\t            });\n\t\n\t            var options = { bus: \"internal\" };\n\t            if (needs_auth) {\n\t                options.user = $(\"#sync-username\").val();\n\t                options.password = $(\"#sync-password\").val();\n\t            }\n\t            $.extend(options, remote_options, { host: dialog.address });\n\t            client = cockpit.dbus(null, options);\n\t            $(client).on(\"close\", function(event, ex) {\n\t                dfd.reject(cockpit.message(ex));\n\t            });\n\t\n\t            var variant = {\n\t                \"t\" : \"(asas)\",\n\t                \"v\" : [[]],\n\t            };\n\t\n\t            var groups = {};\n\t            dialog.get_sel(\"input:checked\").each( function() {\n\t                var u = users[$(this).attr(\"name\")];\n\t                if (u) {\n\t                    variant.v[0].push(u.raw);\n\t                    for (var i = 0; i < u.groups.length; i++) {\n\t                        var group = u.groups[i];\n\t                        if (!groups[group])\n\t                            groups[group] = [];\n\t\n\t                        groups[group].push(u.username);\n\t                    }\n\t                }\n\t            });\n\t            variant.v.push(Object.keys(groups).map(function(k) {\n\t                return k + \":::\" + groups[k].join();\n\t            }));\n\t\n\t            /* We assume all cockpits support the 'passwd1' mechanism */\n\t            var proxy = client.proxy(\"cockpit.Setup\", \"/setup\");\n\t            proxy.wait(function() {\n\t                if (proxy.valid) {\n\t                    proxy.Commit(\"passwd1\", variant)\n\t                        .fail(function(ex) {\n\t                            ex.message = cockpit.gettext(ex.message);\n\t                            dfd.reject(ex);\n\t                        })\n\t                        .done(dfd.resolve);\n\t                }\n\t            });\n\t        }\n\t\n\t        function toggle_button() {\n\t            var any = dialog.get_sel(\"input:checked\").length > 0;\n\t            dialog.get_sel(\".btn-primary\").toggleClass(\"disabled\", !any);\n\t        }\n\t\n\t        function render() {\n\t            function formated_groups() {\n\t                /*jshint validthis:true */\n\t                if (this.groups)\n\t                    return this.groups.join(\", \");\n\t            }\n\t\n\t            /* assume password is allowed for backwards compatibility */\n\t            var allows_password = true;\n\t            var user_list = Object.keys(users).sort().map(function(v) {\n\t                return users[v];\n\t            });\n\t\n\t            if (machines.has_auth_results && methods)\n\t                allows_password = is_method_supported(methods, 'password');\n\t\n\t            var text = dialog.render({\n\t                'needs_auth' : needs_auth,\n\t                'needs_root' : needs_root,\n\t                'users' : user_list,\n\t                'perm_failed' : perm_failed ? cockpit.message(perm_failed) : null,\n\t                'allows_password' : allows_password,\n\t                'formated_groups': formated_groups,\n\t            });\n\t\n\t            dialog.get_sel(\".modal-content\").html(text);\n\t            dialog.get_sel(\".btn-primary\").on(\"click\", sync_users);\n\t            dialog.get_sel(\"input:checkbox\").on(\"change\", function() {\n\t                var name = $(this).attr(\"name\");\n\t                users[name].checked = $(this).is(':checked');\n\t                toggle_button();\n\t            });\n\t            toggle_button();\n\t        }\n\t\n\t        self.load = function(error_options) {\n\t            if (error_options)\n\t                methods = error_options['auth-method-results'];\n\t\n\t            render();\n\t            dialog.try_to_connect(dialog.address, remote_options).fail(function(ex) {\n\t                needs_auth = true;\n\t                if (ex.problem == \"access-denied\") {\n\t                    needs_root = true;\n\t                    if (!methods && machines.has_auth_results)\n\t                        /* TODO: We need to know if password auth is\n\t                         * supported but we only get that when the transport\n\t                         * closes. Passing an invalid username should\n\t                         * open new transport that fails.\n\t                         */\n\t                        dialog.try_to_connect(dialog.address, { \"user\" : \"1\" })\n\t                            .fail(function(ex) {\n\t                                methods = ex['auth-method-results'];\n\t                            })\n\t                            .always(render);\n\t                } else {\n\t                    methods = ex['auth-method-results'];\n\t                    render();\n\t                }\n\t            });\n\t            load_users();\n\t        };\n\t    }\n\t\n\t    function MachineDialogManager(machines_ins, codes) {\n\t        var self = this;\n\t\n\t        if (!codes)\n\t            codes = default_codes;\n\t\n\t        var color_picker = new MachineColorPicker(machines_ins);\n\t\n\t        self.troubleshoot = function(target_id, machine) {\n\t            var selector = \"#\" + target_id;\n\t            if (!machine || !machine.problem)\n\t                return;\n\t\n\t            var template = codes[machine.problem];\n\t            if (machine.problem == \"no-host\")\n\t                template = \"change-port\";\n\t\n\t            var dialog = new Dialog(selector, machine.address, machines_ins, codes);\n\t            dialog.render_template(template);\n\t            dialog.show();\n\t        };\n\t\n\t        self.needs_troubleshoot = function (machine) {\n\t            if (!machine || !machine.problem)\n\t                return false;\n\t\n\t            if (machine.problem == \"no-host\")\n\t                return true;\n\t\n\t            return codes[machine.problem] ? true : false;\n\t        };\n\t\n\t        self.render_dialog = function (template, target_id, address) {\n\t            var selector = \"#\" + target_id;\n\t            var dialog = new Dialog(selector, address, machines_ins, codes);\n\t            dialog.render_template(template);\n\t            dialog.show();\n\t        };\n\t\n\t        self.render_color_picker = function (selector, address) {\n\t            color_picker.render(selector, address);\n\t        };\n\t    }\n\t\n\t    module.exports = {\n\t        new_manager: function (machines_ins, codes) {\n\t            return new MachineDialogManager(machines_ins, codes);\n\t        }\n\t    };\n\t}());\n\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\tvar cockpit = __webpack_require__(4);\n\tvar mustache = __webpack_require__(15);\n\t\n\t/*\n\t * Turns a mustache template into a translated mustache template\n\t * by preparsing it and translating it.\n\t */\n\tvar cache = { };\n\t\n\tfunction translate(template) {\n\t    if (template in cache)\n\t        return cache[template];\n\t    var div = document.createElement(\"div\");\n\t    div.innerHTML = template;\n\t    cockpit.translate(div);\n\t    var result = div.innerHTML;\n\t    cache[template] = result;\n\t    return result;\n\t}\n\t\n\t/* Just like the mustache object, except for translated */\n\tmodule.exports = cockpit.extend({ }, mustache, {\n\t    render: function render(template, view, partials) {\n\t        return translate(mustache.render(template, view, partials));\n\t    },\n\t    to_html: function to_html(template, view, partials, send) {\n\t        return translate(mustache.to_html(template, view, partials, send));\n\t    },\n\t    clearCache: function clearCache() {\n\t        cache = { };\n\t        return mustache.clearCache();\n\t    }\n\t});\n\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * mustache.js - Logic-less {{mustache}} templates with JavaScript\n\t * http://github.com/janl/mustache.js\n\t */\n\t\n\t/*global define: false*/\n\t\n\t(function (root, factory) {\n\t  if (typeof exports === \"object\" && exports) {\n\t    factory(exports); // CommonJS\n\t  } else {\n\t    var mustache = {};\n\t    factory(mustache);\n\t    if (true) {\n\t      !(__WEBPACK_AMD_DEFINE_FACTORY__ = (mustache), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD\n\t    } else {\n\t      root.Mustache = mustache; // <script>\n\t    }\n\t  }\n\t}(this, function (mustache) {\n\t\n\t  var whiteRe = /\\s*/;\n\t  var spaceRe = /\\s+/;\n\t  var nonSpaceRe = /\\S/;\n\t  var eqRe = /\\s*=/;\n\t  var curlyRe = /\\s*\\}/;\n\t  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\t\n\t  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n\t  // See https://github.com/janl/mustache.js/issues/189\n\t  var RegExp_test = RegExp.prototype.test;\n\t  function testRegExp(re, string) {\n\t    return RegExp_test.call(re, string);\n\t  }\n\t\n\t  function isWhitespace(string) {\n\t    return !testRegExp(nonSpaceRe, string);\n\t  }\n\t\n\t  var Object_toString = Object.prototype.toString;\n\t  var isArray = Array.isArray || function (object) {\n\t    return Object_toString.call(object) === '[object Array]';\n\t  };\n\t\n\t  function isFunction(object) {\n\t    return typeof object === 'function';\n\t  }\n\t\n\t  function escapeRegExp(string) {\n\t    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n\t  }\n\t\n\t  var entityMap = {\n\t    \"&\": \"&amp;\",\n\t    \"<\": \"&lt;\",\n\t    \">\": \"&gt;\",\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    \"/\": '&#x2F;'\n\t  };\n\t\n\t  function escapeHtml(string) {\n\t    return String(string).replace(/[&<>\"'\\/]/g, function (s) {\n\t      return entityMap[s];\n\t    });\n\t  }\n\t\n\t  function escapeTags(tags) {\n\t    if (!isArray(tags) || tags.length !== 2) {\n\t      throw new Error('Invalid tags: ' + tags);\n\t    }\n\t\n\t    return [\n\t      new RegExp(escapeRegExp(tags[0]) + \"\\\\s*\"),\n\t      new RegExp(\"\\\\s*\" + escapeRegExp(tags[1]))\n\t    ];\n\t  }\n\t\n\t  /**\n\t   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n\t   * argument is given here it must be an array with two string values: the\n\t   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n\t   * course, the default is to use mustaches (i.e. mustache.tags).\n\t   *\n\t   * A token is an array with at least 4 elements. The first element is the\n\t   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n\t   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n\t   * all template text that appears outside a symbol this element is \"text\".\n\t   *\n\t   * The second element of a token is its \"value\". For mustache tags this is\n\t   * whatever else was inside the tag besides the opening symbol. For text tokens\n\t   * this is the text itself.\n\t   *\n\t   * The third and fourth elements of the token are the start and end indices\n\t   * in the original template of the token, respectively.\n\t   *\n\t   * Tokens that are the root node of a subtree contain two more elements: an\n\t   * array of tokens in the subtree and the index in the original template at which\n\t   * the closing tag for that section begins.\n\t   */\n\t  function parseTemplate(template, tags) {\n\t    tags = tags || mustache.tags;\n\t    template = template || '';\n\t\n\t    if (typeof tags === 'string') {\n\t      tags = tags.split(spaceRe);\n\t    }\n\t\n\t    var tagRes = escapeTags(tags);\n\t    var scanner = new Scanner(template);\n\t\n\t    var sections = [];     // Stack to hold section tokens\n\t    var tokens = [];       // Buffer to hold the tokens\n\t    var spaces = [];       // Indices of whitespace tokens on the current line\n\t    var hasTag = false;    // Is there a {{tag}} on the current line?\n\t    var nonSpace = false;  // Is there a non-space char on the current line?\n\t\n\t    // Strips all whitespace tokens array for the current line\n\t    // if there was a {{#tag}} on it and otherwise only space.\n\t    function stripSpace() {\n\t      if (hasTag && !nonSpace) {\n\t        while (spaces.length) {\n\t          delete tokens[spaces.pop()];\n\t        }\n\t      } else {\n\t        spaces = [];\n\t      }\n\t\n\t      hasTag = false;\n\t      nonSpace = false;\n\t    }\n\t\n\t    var start, type, value, chr, token, openSection;\n\t    while (!scanner.eos()) {\n\t      start = scanner.pos;\n\t\n\t      // Match any text between tags.\n\t      value = scanner.scanUntil(tagRes[0]);\n\t      if (value) {\n\t        for (var i = 0, len = value.length; i < len; ++i) {\n\t          chr = value.charAt(i);\n\t\n\t          if (isWhitespace(chr)) {\n\t            spaces.push(tokens.length);\n\t          } else {\n\t            nonSpace = true;\n\t          }\n\t\n\t          tokens.push(['text', chr, start, start + 1]);\n\t          start += 1;\n\t\n\t          // Check for whitespace on the current line.\n\t          if (chr === '\\n') {\n\t            stripSpace();\n\t          }\n\t        }\n\t      }\n\t\n\t      // Match the opening tag.\n\t      if (!scanner.scan(tagRes[0])) break;\n\t      hasTag = true;\n\t\n\t      // Get the tag type.\n\t      type = scanner.scan(tagRe) || 'name';\n\t      scanner.scan(whiteRe);\n\t\n\t      // Get the tag value.\n\t      if (type === '=') {\n\t        value = scanner.scanUntil(eqRe);\n\t        scanner.scan(eqRe);\n\t        scanner.scanUntil(tagRes[1]);\n\t      } else if (type === '{') {\n\t        value = scanner.scanUntil(new RegExp('\\\\s*' + escapeRegExp('}' + tags[1])));\n\t        scanner.scan(curlyRe);\n\t        scanner.scanUntil(tagRes[1]);\n\t        type = '&';\n\t      } else {\n\t        value = scanner.scanUntil(tagRes[1]);\n\t      }\n\t\n\t      // Match the closing tag.\n\t      if (!scanner.scan(tagRes[1])) {\n\t        throw new Error('Unclosed tag at ' + scanner.pos);\n\t      }\n\t\n\t      token = [ type, value, start, scanner.pos ];\n\t      tokens.push(token);\n\t\n\t      if (type === '#' || type === '^') {\n\t        sections.push(token);\n\t      } else if (type === '/') {\n\t        // Check section nesting.\n\t        openSection = sections.pop();\n\t\n\t        if (!openSection) {\n\t          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\t        }\n\t        if (openSection[1] !== value) {\n\t          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n\t        }\n\t      } else if (type === 'name' || type === '{' || type === '&') {\n\t        nonSpace = true;\n\t      } else if (type === '=') {\n\t        // Set the tags for the next time around.\n\t        tagRes = escapeTags(tags = value.split(spaceRe));\n\t      }\n\t    }\n\t\n\t    // Make sure there are no open sections when we're done.\n\t    openSection = sections.pop();\n\t    if (openSection) {\n\t      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\t    }\n\t\n\t    return nestTokens(squashTokens(tokens));\n\t  }\n\t\n\t  /**\n\t   * Combines the values of consecutive text tokens in the given `tokens` array\n\t   * to a single token.\n\t   */\n\t  function squashTokens(tokens) {\n\t    var squashedTokens = [];\n\t\n\t    var token, lastToken;\n\t    for (var i = 0, len = tokens.length; i < len; ++i) {\n\t      token = tokens[i];\n\t\n\t      if (token) {\n\t        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n\t          lastToken[1] += token[1];\n\t          lastToken[3] = token[3];\n\t        } else {\n\t          squashedTokens.push(token);\n\t          lastToken = token;\n\t        }\n\t      }\n\t    }\n\t\n\t    return squashedTokens;\n\t  }\n\t\n\t  /**\n\t   * Forms the given array of `tokens` into a nested tree structure where\n\t   * tokens that represent a section have two additional items: 1) an array of\n\t   * all tokens that appear in that section and 2) the index in the original\n\t   * template that represents the end of that section.\n\t   */\n\t  function nestTokens(tokens) {\n\t    var nestedTokens = [];\n\t    var collector = nestedTokens;\n\t    var sections = [];\n\t\n\t    var token, section;\n\t    for (var i = 0, len = tokens.length; i < len; ++i) {\n\t      token = tokens[i];\n\t\n\t      switch (token[0]) {\n\t      case '#':\n\t      case '^':\n\t        collector.push(token);\n\t        sections.push(token);\n\t        collector = token[4] = [];\n\t        break;\n\t      case '/':\n\t        section = sections.pop();\n\t        section[5] = token[2];\n\t        collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n\t        break;\n\t      default:\n\t        collector.push(token);\n\t      }\n\t    }\n\t\n\t    return nestedTokens;\n\t  }\n\t\n\t  /**\n\t   * A simple string scanner that is used by the template parser to find\n\t   * tokens in template strings.\n\t   */\n\t  function Scanner(string) {\n\t    this.string = string;\n\t    this.tail = string;\n\t    this.pos = 0;\n\t  }\n\t\n\t  /**\n\t   * Returns `true` if the tail is empty (end of string).\n\t   */\n\t  Scanner.prototype.eos = function () {\n\t    return this.tail === \"\";\n\t  };\n\t\n\t  /**\n\t   * Tries to match the given regular expression at the current position.\n\t   * Returns the matched text if it can match, the empty string otherwise.\n\t   */\n\t  Scanner.prototype.scan = function (re) {\n\t    var match = this.tail.match(re);\n\t\n\t    if (match && match.index === 0) {\n\t      var string = match[0];\n\t      this.tail = this.tail.substring(string.length);\n\t      this.pos += string.length;\n\t      return string;\n\t    }\n\t\n\t    return \"\";\n\t  };\n\t\n\t  /**\n\t   * Skips all text until the given regular expression can be matched. Returns\n\t   * the skipped string, which is the entire tail if no match can be made.\n\t   */\n\t  Scanner.prototype.scanUntil = function (re) {\n\t    var index = this.tail.search(re), match;\n\t\n\t    switch (index) {\n\t    case -1:\n\t      match = this.tail;\n\t      this.tail = \"\";\n\t      break;\n\t    case 0:\n\t      match = \"\";\n\t      break;\n\t    default:\n\t      match = this.tail.substring(0, index);\n\t      this.tail = this.tail.substring(index);\n\t    }\n\t\n\t    this.pos += match.length;\n\t\n\t    return match;\n\t  };\n\t\n\t  /**\n\t   * Represents a rendering context by wrapping a view object and\n\t   * maintaining a reference to the parent context.\n\t   */\n\t  function Context(view, parentContext) {\n\t    this.view = view == null ? {} : view;\n\t    this.cache = { '.': this.view };\n\t    this.parent = parentContext;\n\t  }\n\t\n\t  /**\n\t   * Creates a new context using the given view with this context\n\t   * as the parent.\n\t   */\n\t  Context.prototype.push = function (view) {\n\t    return new Context(view, this);\n\t  };\n\t\n\t  /**\n\t   * Returns the value of the given name in this context, traversing\n\t   * up the context hierarchy if the value is absent in this context's view.\n\t   */\n\t  Context.prototype.lookup = function (name) {\n\t    var value;\n\t    if (name in this.cache) {\n\t      value = this.cache[name];\n\t    } else {\n\t      var context = this;\n\t\n\t      while (context) {\n\t        if (name.indexOf('.') > 0) {\n\t          value = context.view;\n\t\n\t          var names = name.split('.'), i = 0;\n\t          while (value != null && i < names.length) {\n\t            value = value[names[i++]];\n\t          }\n\t        } else {\n\t          value = context.view[name];\n\t        }\n\t\n\t        if (value != null) break;\n\t\n\t        context = context.parent;\n\t      }\n\t\n\t      this.cache[name] = value;\n\t    }\n\t\n\t    if (isFunction(value)) {\n\t      value = value.call(this.view);\n\t    }\n\t\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * A Writer knows how to take a stream of tokens and render them to a\n\t   * string, given a context. It also maintains a cache of templates to\n\t   * avoid the need to parse the same template twice.\n\t   */\n\t  function Writer() {\n\t    this.cache = {};\n\t  }\n\t\n\t  /**\n\t   * Clears all cached templates in this writer.\n\t   */\n\t  Writer.prototype.clearCache = function () {\n\t    this.cache = {};\n\t  };\n\t\n\t  /**\n\t   * Parses and caches the given `template` and returns the array of tokens\n\t   * that is generated from the parse.\n\t   */\n\t  Writer.prototype.parse = function (template, tags) {\n\t    var cache = this.cache;\n\t    var tokens = cache[template];\n\t\n\t    if (tokens == null) {\n\t      tokens = cache[template] = parseTemplate(template, tags);\n\t    }\n\t\n\t    return tokens;\n\t  };\n\t\n\t  /**\n\t   * High-level method that is used to render the given `template` with\n\t   * the given `view`.\n\t   *\n\t   * The optional `partials` argument may be an object that contains the\n\t   * names and templates of partials that are used in the template. It may\n\t   * also be a function that is used to load partial templates on the fly\n\t   * that takes a single argument: the name of the partial.\n\t   */\n\t  Writer.prototype.render = function (template, view, partials) {\n\t    var tokens = this.parse(template);\n\t    var context = (view instanceof Context) ? view : new Context(view);\n\t    return this.renderTokens(tokens, context, partials, template);\n\t  };\n\t\n\t  /**\n\t   * Low-level method that renders the given array of `tokens` using\n\t   * the given `context` and `partials`.\n\t   *\n\t   * Note: The `originalTemplate` is only ever used to extract the portion\n\t   * of the original template that was contained in a higher-order section.\n\t   * If the template doesn't use higher-order sections, this argument may\n\t   * be omitted.\n\t   */\n\t  Writer.prototype.renderTokens = function (tokens, context, partials, originalTemplate) {\n\t    var buffer = '';\n\t\n\t    // This function is used to render an arbitrary template\n\t    // in the current context by higher-order sections.\n\t    var self = this;\n\t    function subRender(template) {\n\t      return self.render(template, context, partials);\n\t    }\n\t\n\t    var token, value;\n\t    for (var i = 0, len = tokens.length; i < len; ++i) {\n\t      token = tokens[i];\n\t\n\t      switch (token[0]) {\n\t      case '#':\n\t        value = context.lookup(token[1]);\n\t        if (!value) continue;\n\t\n\t        if (isArray(value)) {\n\t          for (var j = 0, jlen = value.length; j < jlen; ++j) {\n\t            buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n\t          }\n\t        } else if (typeof value === 'object' || typeof value === 'string') {\n\t          buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n\t        } else if (isFunction(value)) {\n\t          if (typeof originalTemplate !== 'string') {\n\t            throw new Error('Cannot use higher-order sections without the original template');\n\t          }\n\t\n\t          // Extract the portion of the original template that the section contains.\n\t          value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\t\n\t          if (value != null) buffer += value;\n\t        } else {\n\t          buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n\t        }\n\t\n\t        break;\n\t      case '^':\n\t        value = context.lookup(token[1]);\n\t\n\t        // Use JavaScript's definition of falsy. Include empty arrays.\n\t        // See https://github.com/janl/mustache.js/issues/186\n\t        if (!value || (isArray(value) && value.length === 0)) {\n\t          buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n\t        }\n\t\n\t        break;\n\t      case '>':\n\t        if (!partials) continue;\n\t        value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n\t        if (value != null) buffer += this.renderTokens(this.parse(value), context, partials, value);\n\t        break;\n\t      case '&':\n\t        value = context.lookup(token[1]);\n\t        if (value != null) buffer += value;\n\t        break;\n\t      case 'name':\n\t        value = context.lookup(token[1]);\n\t        if (value != null) buffer += mustache.escape(value);\n\t        break;\n\t      case 'text':\n\t        buffer += token[1];\n\t        break;\n\t      }\n\t    }\n\t\n\t    return buffer;\n\t  };\n\t\n\t  mustache.name = \"mustache.js\";\n\t  mustache.version = \"0.8.1\";\n\t  mustache.tags = [ \"{{\", \"}}\" ];\n\t\n\t  // All high-level mustache.* functions use this writer.\n\t  var defaultWriter = new Writer();\n\t\n\t  /**\n\t   * Clears all cached templates in the default writer.\n\t   */\n\t  mustache.clearCache = function () {\n\t    return defaultWriter.clearCache();\n\t  };\n\t\n\t  /**\n\t   * Parses and caches the given template in the default writer and returns the\n\t   * array of tokens it contains. Doing this ahead of time avoids the need to\n\t   * parse templates on the fly as they are rendered.\n\t   */\n\t  mustache.parse = function (template, tags) {\n\t    return defaultWriter.parse(template, tags);\n\t  };\n\t\n\t  /**\n\t   * Renders the `template` with the given `view` and `partials` using the\n\t   * default writer.\n\t   */\n\t  mustache.render = function (template, view, partials) {\n\t    return defaultWriter.render(template, view, partials);\n\t  };\n\t\n\t  // This is here for backwards compatibility with 0.4.x.\n\t  mustache.to_html = function (template, view, partials, send) {\n\t    var result = mustache.render(template, view, partials);\n\t\n\t    if (isFunction(send)) {\n\t      send(result);\n\t    } else {\n\t      return result;\n\t    }\n\t  };\n\t\n\t  // Export the escaping function so that the user may override it.\n\t  // See https://github.com/janl/mustache.js/issues/244\n\t  mustache.escape = escapeHtml;\n\t\n\t  // Export these mainly for testing, but also for advanced usage.\n\t  mustache.Scanner = Scanner;\n\t  mustache.Context = Context;\n\t  mustache.Writer = Writer;\n\t\n\t}));\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"modal-header\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\n        aria-hidden=\\\"true\\\">&times;</button>\\n    <h4 class=\\\"modal-title\\\" translatable=\\\"yes\\\">Add Machine to Dashboard</h4>\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n    <div>\\n        <table class=\\\"form-table-ct\\\">\\n            <tr>\\n                <td class=\\\"top\\\" translatable=\\\"yes\\\">Address</td>\\n                <td>\\n                <div class=\\\"dialog-wrapper error-keep\\\">\\n                    <input class=\\\"form-control\\\" id=\\\"add-machine-address\\\"\\n                       type=\\\"test\\\" value=\\\"{{ full_address }}\\\"\\n                       list=\\\"options\\\"\\n                       placeholder=\\\"{{ placeholder }}\\\"/>\\n                    <datalist id=\\\"options\\\">\\n                        {{#options}}\\n                        <option value=\\\"{{.}}\\\">\\n                        {{/options}}\\n                    </datalist>\\n                </div>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td translatable=\\\"yes\\\">Color</td>\\n                <td id=\\\"add-machine-color-picker\\\">\\n                </td>\\n            </tr>\\n        </table>\\n    </div>\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n    {{#nearlimit}}\\n    <div class=\\\"alert alert-warning dialog-error dashboard-machine-warning\\\">\\n        <span class=\\\"pficon pficon-warning-triangle-o\\\"></span>\\n        <span translatable=\\\"yes\\\">Connecting simultaneously to more than {{ limit }} machines is unsupported.</span>\\n    </div>\\n    {{/nearlimit}}\\n    <button class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" translatable=\\\"yes\\\">Cancel</button>\\n    <button class=\\\"btn btn-primary\\\" translatable=\\\"yes\\\">Add</button>\\n</div>\\n\"\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" translatable=\\\"yes\\\">Authentication Failed</h4>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    {{#supported}}\\n    <p translatable=\\\"yes\\\">Cockpit was unable to log into {{#strong}}{{host}}{{/strong}}. To use this machine with cockpit you will need to enable one of the following authentication methods in the sshd config on {{#strong}}{{host}}{{/strong}}:</p>\\n    <ul>\\n        {{#password}}<li translatable=\\\"yes\\\">Password</li>{{/password}}\\n        {{#public-key}}<li translatable=\\\"yes\\\">Public Key</li>{{/public-key}}\\n        {{#gssapi-mic}}<li translatable=\\\"yes\\\">Kerberos Based SSO</li>{{/gssapi-mic}}\\n    </ul>\\n    {{/supported}}\\n\\n    {{^supported}}\\n    <p translatable=\\\"yes\\\">Cockpit was unable to log in to {{#strong}}{{host}}{{/strong}}. {{#can_sync}}You may want to try to {{#sync_link}}synchronize users{{/sync_link}}.{{/can_sync}} For more authentication options and troubleshooting support please upgrade cockpit-ws to a newer version.</p>\\n    {{/supported}}\\n\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" translatable=\\\"yes\\\">Close</button>\\n</div>\\n\"\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"modal-header\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\n        aria-hidden=\\\"true\\\">&times;</button>\\n    <h4 class=\\\"modal-title\\\" translatable=\\\"yes\\\">Log in to {{host}}</h4>\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n    {{^available}}\\n    <p translatable=\\\"yes\\\">Cockpit was unable to log into {{#strong}}{{host}}{{/strong}}.</p>\\n    {{/available}}\\n\\n    {{#available}}\\n    <p translatable=\\\"yes\\\">Cockpit was unable to log into {{#strong}}{{host}}{{/strong}}. You can change your authentication credentials below. {{#can_sync}}You may prefer to {{#sync_link}}synchronize accounts and passwords{{/sync_link}}.{{/can_sync}}</p>\\n\\n    <div>\\n        <table class=\\\"form-table-ct\\\">\\n            <tr>\\n                <td translatable=\\\"yes\\\" class=\\\"top\\\">User name</td>\\n                <td>\\n                    <input class=\\\"form-control\\\" id=\\\"login-custom-user\\\" type=\\\"text\\\" value=\\\"{{machine_user}}\\\" placeholder=\\\"{{ user }}\\\"/>\\n                </td>\\n                <td>\\n                    <a tabindex=\\\"0\\\" role=\\\"button\\\" data-toggle=\\\"popover\\\"\\n                        data-trigger=\\\"focus\\\" data-placement=\\\"bottom\\\" translate=\\\"data-content\\\"\\n                        data-content=\\\"Leave blank to connect to this machine as the currently logged in user{{#user}} ({{user}}){{/user}}. If you enter a different username, that user will always be used connecting to this machine.\\\">\\n                        <span class=\\\"fa fa-lg fa-info-circle\\\"></span>\\n                    </a>\\n                </td>\\n            </tr>\\n\\n            <tr>\\n                <td translatable=\\\"yes\\\">Authentication</td>\\n                <td>\\n                    <div class=\\\"btn-group bootstrap-select dropdown form-control\\\" id=\\\"login-type\\\">\\n                        <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\"\\n                            data-toggle=\\\"dropdown\\\">\\n                            <span class=\\\"pull-left\\\" translatable=\\\"yes\\\"></span>\\n                            <div class=\\\"caret\\\"></div>\\n                        </button>\\n                        <ul class=\\\"dropdown-menu\\\">\\n                            {{#allows_password}}\\n                            <li value=\\\"password\\\"><a translate>Type a password</a></li>\\n                            {{/allows_password}}\\n                            <li value=\\\"stored\\\"><a translate>Using available credentials</a></li>\\n                        </ul>\\n                    </div>\\n                </td>\\n            </tr>\\n\\n            {{#allows_password}}\\n            <tr id=\\\"login-diff-password\\\">\\n                <td translatable=\\\"yes\\\" class=\\\"top\\\">Password</td>\\n                <td>\\n                    <input class=\\\"form-control\\\" id=\\\"login-custom-password\\\" type=\\\"password\\\" />\\n                </td>\\n                <td>\\n                    <a tabindex=\\\"0\\\" role=\\\"button\\\" data-toggle=\\\"popover\\\"\\n                        data-trigger=\\\"focus\\\" data-placement=\\\"bottom\\\" translate=\\\"data-content\\\"\\n                        data-content=\\\"Entering a different password here means you will need to retype it every time you reconnect to this machine\\\">\\n                        <span class=\\\"fa fa-lg fa-info-circle\\\"></span>\\n                    </a>\\n                </td>\\n            </tr>\\n            {{/allows_password}}\\n            <tr id=\\\"login-available\\\">\\n                <td translatable=\\\"yes\\\" class=\\\"top\\\">Available</td>\\n                <td class=\\\"top\\\">\\n                        {{#password}}<div translatable=\\\"yes\\\">Login Password</div>{{/password}}\\n                        {{#gssapi-mic}}<div translatable=\\\"yes\\\">Kerberos Ticket</div>{{/gssapi-mic}}\\n                        {{#public-key}}<div class=\\\"keys\\\"><div class='dialog-wait-ct pull-left'><div class='spinner spinner-sm'></div><span translatable=\\\"yes\\\">Checking for public keys</span></div></div>{{/public-key}}\\n                </td>\\n            </tr>\\n        </table>\\n    </div>\\n    {{/available}}\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" translatable=\\\"yes\\\">Cancel</button>\\n    <button class=\\\"btn btn-primary\\\" translatable=\\\"yes\\\">Log In</button>\\n</div>\\n\"\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"modal-header\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\n        aria-hidden=\\\"true\\\">&times;</button>\\n    <h4 class=\\\"modal-title\\\" translatable=\\\"yes\\\">Could not contact {{host}}</h4>\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n    <p>\\n        <span translatable=\\\"yes\\\">Cockpit was unable to contact {{#strong}}{{host}}{{/strong}}.</span>\\n        {{^allow_connection_string}}\\n        <span translatable=\\\"yes\\\">To try a different port you will need to upgrade cockpit-ws to a newer version.</span>\\n        {{/allow_connection_string}}\\n\\n        {{#allow_connection_string}}\\n        <span translatable=\\\"yes\\\">Is sshd running on a different port?</span>\\n        {{/allow_connection_string}}\\n    </p>\\n\\n    {{#allow_connection_string}}\\n    <div>\\n        <table class=\\\"form-table-ct\\\">\\n            <tr>\\n                <td class=\\\"top\\\" translatable=\\\"yes\\\">Port</td>\\n                <td>\\n                <div class=\\\"dialog-wrapper error-keep\\\">\\n                    <input id=\\\"edit-machine-port\\\" class=\\\"form-control\\\"\\n                       type=\\\"test\\\" value=\\\"{{ port }}\\\"\\n                       list=\\\"options\\\"\\n                       placeholder=\\\"22\\\"/>\\n                </div>\\n                </td>\\n            </tr>\\n        </table>\\n    </div>\\n    {{/allow_connection_string}}\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n    {{#allow_connection_string}}\\n    <button class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" translatable=\\\"yes\\\">Cancel</button>\\n    <button class=\\\"btn btn-primary\\\" translatable=\\\"yes\\\">Update</button>\\n    {{/allow_connection_string}}\\n\\n    {{^allow_connection_string}}\\n    <button class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" translatable=\\\"yes\\\">Close</button>\\n    {{/allow_connection_string}}\\n</div>\\n\"\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div>\\n    <div id=\\\"host-edit-color\\\" data-toggle=\\\"dropdown\\\"></div>\\n    <div id=\\\"host-edit-color-popover\\\" class=\\\"popover in\\\" tabindex=\\\"-1\\\">\\n        <div class=\\\"arrow\\\"></div>\\n        <div class=\\\"popover-content\\\">\\n            {{#colors}}\\n            <div>\\n                {{#list}}\\n                <div class=\\\"color-cell\\\"></div>\\n                {{/list}}\\n            </div>\\n            {{/colors}}\\n        </div>\\n        <div class=\\\"arrow\\\"></div>\\n    </div>\\n</div>\\n\"\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" translatable=\\\"yes\\\">Incorrect Host Key</h4>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"banned\\\">\\n        <i class=\\\"fa fa-ban\\\"></i>\\n    </div>\\n    <p translatable=\\\"yes\\\">The key of {{#strong}}{{host}}{{/strong}} does not match the key previously in use. Unless this machine was recently replaced, it is likely that someone is trying to attack your connection to this machine.</p>\\n\\n    {{#key_host}}\\n    <p translatable=\\\"yes\\\">You can remove the previously stored key by running the following command</p>\\n\\n    <pre class=\\\"center\\\">ssh-keygen -R {{ key_host }} -f {{ path }}</pre>\\n    {{/key_host}}\\n\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" translatable=\\\"yes\\\">Close</button>\\n</div>\\n\"\n\n/***/ },\n/* 22 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" translatable=\\\"yes\\\">Cockpit is not installed</h4>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <p translatable=\\\"yes\\\">A compatible version of Cockpit is not installed on {{#strong}}{{host}}{{/strong}}.</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" translatable=\\\"yes\\\">Close</button>\\n</div>\\n\"\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"modal-header\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\n        aria-hidden=\\\"true\\\">&times;</button>\\n    <h4 class=\\\"modal-title\\\" translatable=\\\"yes\\\">Synchronize users</h4>\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n    <p translatable=\\\"yes\\\">Select the users that you would like to be synchronized with {{#strong}}{{host}}{{/strong}}</p>\\n\\n{{#perm_failed}}\\n    <div class=\\\"alert alert-danger dialog-error\\\">\\n        <span class=\\\"fa fa-exclamation-triangle\\\"></span>\\n        <span translatable=\\\"yes\\\">Error loading users: {{perm_failed}}</span>\\n    </div>\\n{{/perm_failed}}\\n\\n{{^perm_failed}}\\n    <div id=\\\"sync-users\\\">\\n        <table class=\\\"table\\\">\\n        <tbody>\\n        {{^users}}\\n            <tr>\\n                  <td>\\n                    <div class=\\\"center-spinner\\\">\\n                        <div class=\\\"spinner spinner-lg\\\"></div>\\n                    </div>\\n                  </td>\\n            </tr>\\n        {{/users}}\\n\\n        {{#users}}\\n              <tr>\\n                  <td><input type=\\\"checkbox\\\" name=\\\"{{username}}\\\" {{#checked}}checked=checked{{/checked}} /></td>\\n                  <td>{{username}}</td>\\n                  <td>{{name}}</td>\\n                  <td>&#8226;&#8226;&#8226;&#8226;&#8226;</td>\\n                  <td>{{formated_groups}}</td>\\n              </tr>\\n        {{/users}}\\n        </tbody>\\n        </table>\\n    </div>\\n\\n    {{#needs_auth}}\\n    <div>\\n        {{#needs_root}}\\n        <p translatable=\\\"yes\\\">You are connected to {{#strong}}{{host}}{{/strong}}, however in order to synchronize users, a user with superuser privileges is required.</p>\\n        {{/needs_root}}\\n        {{^needs_root}}\\n        <p translatable=\\\"yes\\\">In order to synchronize users, you need to log in to {{#strong}}{{host}}{{/strong}}.</p>\\n        {{/needs_root}}\\n        <table class=\\\"form-table-ct\\\">\\n            <tr>\\n                <td translatable=\\\"yes\\\">User name</td>\\n                <td>\\n                    <input class=\\\"form-control\\\" id=\\\"sync-username\\\" type=\\\"text\\\" />\\n                </td>\\n            </tr>\\n            {{#allows_password}}\\n            <tr>\\n                <td translatable=\\\"yes\\\">Password</td>\\n                <td>\\n                    <input class=\\\"form-control\\\" id=\\\"sync-password\\\" type=\\\"password\\\" />\\n                </td>\\n            </tr>\\n            {{/allows_password}}\\n        </table>\\n    </div>\\n    {{/needs_auth}}\\n{{/perm_failed}}\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" translatable=\\\"yes\\\">Cancel</button>\\n    <button class=\\\"btn btn-primary disabled\\\" translatable=\\\"yes\\\">Synchronize</button>\\n</div>\\n\"\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" translatable=\\\"yes\\\">Unknown Host Key</h4>\\n</div>\\n<div id=\\\"add-unknown-host\\\" class=\\\"modal-body\\\">\\n    {{#key}}\\n        <p translatable=\\\"yes\\\">The authenticity of host {{#strong}}{{host}}{{/strong}} can't be established. Are you sure you want to continue connecting?</p>\\n        <div>\\n        <table class=\\\"form-table-ct\\\">\\n            <tr>\\n                <td translatable=\\\"yes\\\">Fingerprint</td>\\n                <td><pre class=\\\"machine-key\\\">{{key}} </pre></td>\\n            </tr>\\n        </table>\\n        </div>\\n    {{/key}}\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" translatable=\\\"yes\\\">Close</button>\\n\\n    {{#key}}\\n        <button class=\\\"btn btn-primary\\\" translatable=\\\"yes\\\">Connect</button>\\n    {{/key}}\\n</div>\\n\"\n\n/***/ },\n/* 25 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\tvar phantom_checkpoint = phantom_checkpoint || function () { };\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(3);\n\t    var cockpit = __webpack_require__(4);\n\t\n\t    var base_index = __webpack_require__(26);\n\t\n\t    var _ = cockpit.gettext;\n\t\n\t    var shell_embedded = window.location.pathname.indexOf(\".html\") !== -1;\n\t\n\t    function MachinesIndex(index_options, machines, loader, mdialogs) {\n\t\n\t        if (!index_options)\n\t            index_options = {};\n\t\n\t        index_options.navigate = function (state, sidebar) {\n\t            return navigate(state, sidebar);\n\t        };\n\t        var index = base_index.new_index_from_proto(index_options);\n\t\n\t        /* Restarts */\n\t        $(index).on(\"expect_restart\", function (ev, host) {\n\t            loader.expect_restart(host);\n\t        });\n\t\n\t        /* Disconnection Dialog */\n\t        var watchdog_problem = null;\n\t        $(index).on(\"disconnect\", function (ev, problem) {\n\t            watchdog_problem = problem;\n\t            show_disconnected();\n\t        });\n\t\n\t        /* Is troubleshooting dialog open */\n\t        var troubleshooting = false;\n\t\n\t        /* Reconnect button */\n\t        $(\"#machine-reconnect\").on(\"click\", function(ev) {\n\t            if (watchdog_problem) {\n\t                cockpit.sessionStorage.clear();\n\t                window.location.reload(true);\n\t            } else {\n\t                navigate(null, true);\n\t            }\n\t        });\n\t\n\t        /* Troubleshoot pause navigation */\n\t        $(\"#troubleshoot-dialog\").on(\"show.bs.modal\", function(ev) {\n\t            troubleshooting = true;\n\t        });\n\t\n\t        /* Troubleshoot dialog close */\n\t        $(\"#troubleshoot-dialog\").on(\"hide.bs.modal\", function(ev) {\n\t            troubleshooting = false;\n\t            navigate(null, true);\n\t        });\n\t\n\t        /* Navigation */\n\t        var ready = false;\n\t        function on_ready() {\n\t            ready = true;\n\t            index.ready();\n\t        }\n\t\n\t        /* When the machine list is ready we start processing navigation */\n\t        $(machines)\n\t            .on(\"ready\", on_ready)\n\t            .on(\"added updated\", function(ev, machine) {\n\t                if (!machine.visible)\n\t                    index.frames.remove(machine);\n\t                else if (machine.problem)\n\t                    index.frames.remove(machine);\n\t\n\t                update_machines();\n\t                if (ready)\n\t                    navigate();\n\t            })\n\t            .on(\"removed\", function(ev, machine) {\n\t                index.frames.remove(machine);\n\t                update_machines();\n\t            });\n\t\n\t        if (machines.ready)\n\t            on_ready();\n\t\n\t        /* When only one machine this operates as a link */\n\t        $(\"#machine-link\").on(\"click\", function(ev) {\n\t            if (machines.list.length == 1) {\n\t                index.jump({ host: machines.list[0].address, sidebar: true, component: \"\" });\n\t                return false;\n\t            }\n\t        });\n\t\n\t        function show_disconnected() {\n\t            var current_frame = index.current_frame();\n\t\n\t            if (current_frame)\n\t                $(current_frame).hide();\n\t\n\t            $(\".curtains-ct .spinner\").toggle(false);\n\t            $(\"#machine-reconnect\").toggle(true);\n\t            $(\"#machine-troubleshoot\").toggle(false);\n\t            $(\".curtains-ct i\").toggle(true);\n\t            $(\".curtains-ct h1\").text(_(\"Disconnected\"));\n\t            $(\".curtains-ct p\").text(cockpit.message(watchdog_problem));\n\t            $(\".curtains-ct\").show();\n\t            $(\"#navbar-dropdown\").addClass(\"disabled\");\n\t            phantom_checkpoint();\n\t        }\n\t\n\t        /* Handles navigation */\n\t        function navigate(state, reconnect) {\n\t            var machine;\n\t\n\t            /* If this is a watchdog problem or we are troubleshooting\n\t             * let the dialog handle it */\n\t            if (watchdog_problem || troubleshooting)\n\t                return;\n\t\n\t            /* phantomjs has a problem retrieving state, so we allow it to be passed in */\n\t            if (!state)\n\t                state = index.retrieve_state();\n\t            machine = machines.lookup(state.host);\n\t\n\t            /* No such machine */\n\t            if (!machine) {\n\t                machine = {\n\t                    key: state.host,\n\t                    address: state.host,\n\t                    label: state.host,\n\t                    state: \"failed\",\n\t                    problem: \"not-found\",\n\t                };\n\t\n\t            /* Asked to reconnect to the machine */\n\t            } else if (!machine.visible) {\n\t                machine.state = \"failed\";\n\t                machine.problem = \"not-found\";\n\t            } else if (reconnect && machine.state !== \"connected\") {\n\t                loader.connect(state.host);\n\t            }\n\t\n\t            var compiled = compile(machine);\n\t            if (machine.manifests && !state.component)\n\t                state.component = choose_component(state, compiled);\n\t\n\t            update_navbar(machine, state, compiled);\n\t            update_sidebar(machine, state, compiled);\n\t            update_frame(machine, state, compiled);\n\t\n\t            index.recalculate_layout();\n\t\n\t            /* Just replace the state, and URL */\n\t            index.jump(state, true);\n\t        }\n\t\n\t        function choose_component(state, compiled) {\n\t            var item, menu_items;\n\t            var single_host = machines.list.length <= 1;\n\t            var dashboards = compiled.ordered(\"dashboard\");\n\t\n\t            if (shell_embedded)\n\t                state.sidebar = true;\n\t\n\t            /* See if we should show a dashboard */\n\t            if (!state.sidebar && dashboards.length > 0) {\n\t                item = dashboards[0];\n\t                /* Don't chose a dashboard as a single host unless\n\t                 * it specifically supports that.\n\t                 */\n\t                if (item && (!single_host || item.wants !== \"multiple-machines\"))\n\t                    return item.path;\n\t                else\n\t                    item = null;\n\t            }\n\t\n\t            /* See if we can find something with currently selected label */\n\t            var label = $(\"#sidebar li.active a\").text();\n\t            if (label) {\n\t                item = compiled.search(\"label\", label);\n\t                if (item)\n\t                    return item.path;\n\t            }\n\t\n\t            /* Go for the first item */\n\t            menu_items = compiled.ordered(\"menu\");\n\t            if (menu_items.length > 0 && menu_items[0]) {\n\t                return menu_items[0].path;\n\t\n\t            /* If there is no menu items use a dashboard */\n\t            } else if (dashboards.length > 0) {\n\t                item = dashboards[0];\n\t                if (item) {\n\t                    state.sidebar = false;\n\t                    return item.path;\n\t                }\n\t            }\n\t\n\t            return \"system\";\n\t        }\n\t\n\t        function update_navbar(machine, state, compiled) {\n\t            $(\".dashboard-link\").each(function() {\n\t                var el = $(this);\n\t                el.toggleClass(\"active\", el.attr(\"data-component\") === state.component);\n\t            });\n\t\n\t            var hide;\n\t            if (machine && machine.static_hostname) {\n\t                hide = $(\".dashboard-link\").length < 2 && machines.list.length < 2;\n\t                $('#content-navbar').toggleClass(\"hidden\", hide);\n\t            } else {\n\t                $('#content-navbar').toggleClass(\"hidden\", false);\n\t            }\n\t\n\t            var item = compiled.items[state.component];\n\t            if (item && item.section == \"dashboard\") {\n\t                delete state.sidebar;\n\t                machine = null;\n\t            }\n\t\n\t            $(\"#machine-avatar\").attr(\"src\", machine && machine.avatar ? encodeURI(machine.avatar) :\n\t                                                \"../shell/images/server-small.png\");\n\t\n\t            var label;\n\t            if (machine) {\n\t                label = machine.label;\n\t            } else if (machines.list.length == 1) {\n\t                label = machines.list[0].label;\n\t            } else {\n\t                label = _(\"Machines\");\n\t            }\n\t            $(\"#machine-link span\").text(label);\n\t\n\t            var color;\n\t            if (machines.list.length == 1 || !machine)\n\t                color = \"transparent\";\n\t            else\n\t                color = machine.color || \"\";\n\t            $(\"#machine-color\").css(\"border-left-color\", color);\n\t\n\t            $(\"#machine-dropdown\").toggleClass(\"active\", !!machine);\n\t\n\t            /* Decide when to show the sidebar */\n\t            var sidebar = $(\"#sidebar\");\n\t\n\t            if (machine && machine.state == \"connected\")\n\t                sidebar.show();\n\t            else\n\t                sidebar.hide();\n\t        }\n\t\n\t        function update_sidebar(machine, state, compiled) {\n\t            function links(component) {\n\t                return $(\"<li>\")\n\t                    .toggleClass(\"active\", state.component === component.path)\n\t                    .append($(\"<a>\")\n\t                        .attr(\"href\", index.href({ host: machine.address, component: component.path }))\n\t                        .text(component.label));\n\t            }\n\t\n\t            var menu = compiled.ordered(\"menu\").map(links);\n\t            $(\"#sidebar-menu\").empty().append(menu);\n\t\n\t            var tools = compiled.ordered(\"tools\").map(links);\n\t            $(\"#sidebar-tools\").empty().append(tools);\n\t            $('#tools-panel li.active').parents('#tools-panel').collapse('show');\n\t        }\n\t\n\t        function update_title(label, machine) {\n\t            if (label)\n\t                label += \" - \";\n\t            else\n\t                label = \"\";\n\t            var suffix = index.default_title;\n\t            if (machine && machine.label)\n\t                suffix = machine.label;\n\t            document.title = label + suffix;\n\t        }\n\t\n\t        function update_frame(machine, state, compiled) {\n\t            var title, message, connecting, restarting;\n\t            var current_frame = index.current_frame();\n\t\n\t            if (machine.state != \"connected\") {\n\t                $(current_frame).hide();\n\t                current_frame = null;\n\t                index.current_frame(current_frame);\n\t\n\t                connecting = (machine.state == \"connecting\");\n\t                if (machine.restarting) {\n\t                    title = _(\"The machine is restarting\");\n\t                    message = \"\";\n\t                } else if (connecting) {\n\t                    title = _(\"Connecting to the machine\");\n\t                    message = \"\";\n\t                } else {\n\t                    title = _(\"Couldn't connect to the machine\");\n\t                    if (machine.problem == \"not-found\") {\n\t                        message = _(\"Cannot connect to an unknown machine\");\n\t                    } else {\n\t                        var error = machine.problem || machine.state;\n\t                        if (error)\n\t                            message = cockpit.message(error);\n\t                        else\n\t                            message = \"\";\n\t                    }\n\t                }\n\t\n\t                if (!machine.restarting && mdialogs.needs_troubleshoot(machine)) {\n\t                    $(\"#machine-troubleshoot\").off()\n\t                        .on(\"click\", function () {\n\t                            mdialogs.troubleshoot(\"troubleshoot-dialog\", machine);\n\t                        });\n\t                    $(\"#machine-troubleshoot\").show();\n\t                } else {\n\t                    $(\"#machine-troubleshoot\").hide();\n\t                }\n\t\n\t                restarting = !!machine.restarting;\n\t                $(\".curtains-ct\").show();\n\t                $(\".curtains-ct .spinner\").toggle(connecting || restarting);\n\t                $(\"#machine-reconnect\").toggle(!connecting && machine.problem != \"not-found\");\n\t                $(\".curtains-ct i\").toggle(!connecting && !restarting);\n\t                $(\".curtains-ct h1\").text(title);\n\t                $(\".curtains-ct p\").text(message);\n\t\n\t                $(\"#machine-spinner\").hide();\n\t\n\t                update_title(null, machine);\n\t\n\t                /* Fall through when connecting, and allow frame to load at same time*/\n\t                if (!connecting)\n\t                    return;\n\t            }\n\t\n\t            var hash = state.hash;\n\t            var component = state.component;\n\t\n\t            /* Old cockpit packages, used to be in shell/shell.html */\n\t            var compat;\n\t            if (machine && compiled.compat) {\n\t                compat = compiled.compat[component];\n\t                if (compat) {\n\t                    component = \"shell/shell\";\n\t                    hash = compat;\n\t                }\n\t            }\n\t\n\t            var frame;\n\t            if (component)\n\t                frame = index.frames.lookup(machine, component, hash);\n\t            if (frame != current_frame) {\n\t                $(current_frame).css('display', 'none');\n\t                index.current_frame(frame);\n\t            }\n\t\n\t            var label, item;\n\t            if (machine.state == \"connected\") {\n\t                $(\".curtains-ct\").hide();\n\t                $(\"#machine-spinner\").toggle(frame && !$(frame).attr(\"data-ready\"));\n\t                $(frame).css('display', 'block');\n\t                item = compiled.items[state.component];\n\t                label = item ? item.label : \"\";\n\t                update_title(label, machine);\n\t            }\n\t\n\t            phantom_checkpoint();\n\t        }\n\t\n\t        function update_machines() {\n\t            $(\"#machine-dropdown .caret\")\n\t                .toggle(machines.list.length > 1);\n\t\n\t            var machine_link = $(\"machine-link\");\n\t            if (machines.list.length > 1)\n\t                machine_link.attr(\"data-toggle\", \"dropdown\");\n\t            else\n\t                machine_link.removeAttr(\"data-toggle\");\n\t\n\t            var list = $(\"#machine-dropdown ul\");\n\t            var links = machines.list.map(function(machine) {\n\t                var avatar = $(\"<img>\").addClass(\"machine-avatar\")\n\t                            .attr(\"src\", encodeURI(machine.avatar));\n\t                var text = $(\"<span>\").text(machine.label);\n\t                return $(\"<li role='presentation'>\")\n\t                    .css(\"border-left-color\", machine.color || \"\")\n\t                    .append($(\"<a>\")\n\t                        .attr(\"role\", \"menuitem\")\n\t                        .attr(\"tabindex\", \"-1\")\n\t                        .attr(\"data-address\", machine.address)\n\t                        .attr(\"href\", index.href({ host: machine.address }, true))\n\t                        .append(avatar, text));\n\t                });\n\t            list.empty().append(links);\n\t        }\n\t\n\t        function compatibility(machine) {\n\t            if (!machine.manifests || machine.address === \"localhost\")\n\t                return null;\n\t\n\t            var shell = machine.manifests[\"shell\"] || { };\n\t            var menu = shell[\"menu\"] || { };\n\t            var tools = shell[\"tools\"] || { };\n\t\n\t            var mapping = { };\n\t\n\t            /* The following were included in shell/shell.html in old versions */\n\t            if (\"_host_\" in menu)\n\t                mapping[\"system/host\"] = \"/server\";\n\t            if (\"_init_\" in menu)\n\t                mapping[\"system/init\"] = \"/services\";\n\t            if (\"_network_\" in menu)\n\t                mapping[\"network/interfaces\"] = \"/networking\";\n\t            if (\"_storage_\" in menu)\n\t                mapping[\"storage/devices\"] = \"/storage\";\n\t            if (\"_users_\" in tools)\n\t                mapping[\"users/local\"] = \"/accounts\";\n\t\n\t            /* For Docker we have to guess ... some heuristics */\n\t            if (\"_storage_\" in menu || \"_init_\" in menu)\n\t                mapping[\"docker/containers\"] = \"/containers\";\n\t\n\t            return mapping;\n\t        }\n\t\n\t        function compile(machine) {\n\t            var compiled = base_index.new_compiled();\n\t            compiled.load(machine.manifests, \"tools\");\n\t            compiled.load(machine.manifests, \"dashboard\");\n\t            compiled.load(machine.manifests, \"menu\");\n\t            compiled.compat = compatibility(machine);\n\t            return compiled;\n\t        }\n\t\n\t        cockpit.transport.wait(function() {\n\t            index.start();\n\t        });\n\t    }\n\t\n\t    function SimpleIndex(index_options) {\n\t        if (!index_options)\n\t            index_options = {};\n\t\n\t        index_options.navigate = function (state, sidebar) {\n\t            return navigate(state, sidebar);\n\t        };\n\t        var default_title = index_options.default_title || \"Cockpit\";\n\t        var index = base_index.new_index_from_proto(index_options);\n\t        var compiled = base_index.new_compiled();\n\t\n\t        compiled.load(cockpit.manifests, \"dashboard\");\n\t\n\t        /* Disconnection Dialog */\n\t        var watchdog_problem = null;\n\t        $(index).on(\"disconnect\", function (ev, problem) {\n\t            watchdog_problem = problem;\n\t            show_disconnected();\n\t        });\n\t\n\t        /* Reconnect button */\n\t        $(\"#machine-reconnect\").on(\"click\", function(ev) {\n\t            cockpit.sessionStorage.clear();\n\t            window.location.reload(true);\n\t        });\n\t\n\t        function show_disconnected() {\n\t            var current_frame = index.current_frame();\n\t            if (current_frame)\n\t                $(current_frame).hide();\n\t\n\t            $(\".curtains-ct .spinner\").toggle(false);\n\t            $(\"#machine-reconnect\").toggle(true);\n\t            $(\".curtains-ct i\").toggle(true);\n\t            $(\".curtains-ct h1\").text(_(\"Disconnected\"));\n\t            $(\".curtains-ct p\").text(cockpit.message(watchdog_problem));\n\t            $(\".curtains-ct\").show();\n\t            $(\"#navbar-dropdown\").addClass(\"disabled\");\n\t            phantom_checkpoint();\n\t        }\n\t\n\t        index.ready();\n\t\n\t        /* Handles navigation */\n\t        function navigate(state, reconnect) {\n\t            var dashboards = compiled.ordered(\"dashboard\");\n\t\n\t            /* If this is a watchdog problem or we are troubleshooting\n\t             * let the dialog handle it */\n\t            if (watchdog_problem)\n\t                return;\n\t\n\t            /* phantomjs has a problem retrieving state, so we allow it to be passed in */\n\t            if (!state)\n\t                state = index.retrieve_state();\n\t\n\t            if (!state.component && dashboards.length > 0) {\n\t                state.component = dashboards[0].path;\n\t            }\n\t            update_navbar(state);\n\t            update_frame(state);\n\t\n\t            index.recalculate_layout();\n\t\n\t            /* Just replace the state, and URL */\n\t            index.jump(state, true);\n\t        }\n\t\n\t        function update_navbar(state) {\n\t            $(\".dashboard-link\").each(function() {\n\t                var el = $(this);\n\t                el.toggleClass(\"active\", el.attr(\"data-component\") === state.component);\n\t            });\n\t\n\t            var item = compiled.items[state.component];\n\t            if (item && item.section == \"dashboard\")\n\t                delete state.sidebar;\n\t\n\t            $(\"#machine-link span\").text(default_title);\n\t            if ($(\".dashboard-link\").length < 2)\n\t                $('#content-navbar').toggleClass(\"hidden\", true);\n\t        }\n\t\n\t        function update_title(label) {\n\t            if (label)\n\t                label += \" - \";\n\t            else\n\t                label = \"\";\n\t            document.title = label + default_title;\n\t        }\n\t\n\t        function update_frame(state) {\n\t            var current_frame = index.current_frame();\n\t\n\t            var hash = state.hash;\n\t            var component = state.component;\n\t\n\t            var frame;\n\t            if (component)\n\t                frame = index.frames.lookup(null, component, hash);\n\t            if (frame != current_frame) {\n\t                $(current_frame).css('display', 'none');\n\t                index.current_frame(frame);\n\t            }\n\t\n\t            var label, item;\n\t            $(frame).css('display', 'block');\n\t            item = compiled.items[state.component];\n\t            label = item ? item.label : \"\";\n\t            update_title(label);\n\t\n\t            phantom_checkpoint();\n\t        }\n\t\n\t        cockpit.transport.wait(function() {\n\t            index.start();\n\t        });\n\t    }\n\t\n\t    module.exports = {\n\t        simple_index: function (options) {\n\t            return new SimpleIndex(options);\n\t        },\n\t        machines_index: function (options, machines_ins, loader, mdialogs) {\n\t            return new MachinesIndex(options, machines_ins, loader, mdialogs);\n\t        }\n\t    };\n\t\n\t    function message_queue(event) {\n\t        window.messages.push(event);\n\t    }\n\t\n\t    /* When we're being loaded into the index window we have additional duties */\n\t    if (document.documentElement.getAttribute(\"class\") === \"index-page\") {\n\t        /* Indicates to child frames that we are a cockpit1 router frame */\n\t        window.name = \"cockpit1\";\n\t\n\t        /* The same thing as above, but compatibility with old cockpit */\n\t        window.options = { sink: true, protocol: \"cockpit1\" };\n\t\n\t        /* While the index is initializing, snag any messages we receive from frames */\n\t        window.messages = [ ];\n\t\n\t        window.messages.cancel = function() {\n\t            window.removeEventListener(\"message\", message_queue, false);\n\t            window.messages = null;\n\t        };\n\t\n\t        window.addEventListener(\"message\", message_queue, false);\n\t    }\n\t\n\t}());\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2015 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\tvar phantom_checkpoint = phantom_checkpoint || function () { };\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(3);\n\t    var cockpit = __webpack_require__(4);\n\t\n\t    var shell_embedded = window.location.pathname.indexOf(\".html\") !== -1;\n\t    var _ = cockpit.gettext;\n\t\n\t    function Frames(index) {\n\t        var self = this;\n\t\n\t        /* Lists of frames, by host */\n\t        var iframes = { };\n\t\n\t        function remove_frame(frame) {\n\t            $(frame.contentWindow).off();\n\t            $(frame).remove();\n\t        }\n\t        self.remove = function remove(machine) {\n\t            var address = machine.address;\n\t            if (!address)\n\t                address = \"localhost\";\n\t            var list = iframes[address];\n\t            if (list) {\n\t                delete iframes[address];\n\t                $.each(list, function(i, frame) {\n\t                    remove_frame(frame);\n\t                });\n\t            }\n\t        };\n\t\n\t        function frame_ready(frame, count) {\n\t            var ready = false;\n\t\n\t            window.clearTimeout(frame.timer);\n\t            frame.timer = null;\n\t\n\t            try {\n\t                ready = $(\"body\", frame.contentWindow.document).is(\":visible\");\n\t            } catch(ex) {\n\t                ready = true;\n\t            }\n\t\n\t            if (!count)\n\t                count = 0;\n\t            count += 1;\n\t            if (count > 50)\n\t                ready = true;\n\t\n\t            if (ready) {\n\t                if (frame.getAttribute(\"data-ready\") != \"1\") {\n\t                    frame.setAttribute(\"data-ready\", \"1\");\n\t                    if (count > 0)\n\t                        index.navigate();\n\t                }\n\t            } else {\n\t                frame.timer = window.setTimeout(function() {\n\t                    frame_ready(frame, count + 1);\n\t                }, 100);\n\t            }\n\t        }\n\t\n\t        self.lookup_component_hash = function(machine, component) {\n\t            var address, list, frame, src;\n\t\n\t            if (machine)\n\t                address = machine.address;\n\t\n\t            if (!address)\n\t                address = \"localhost\";\n\t\n\t            list = iframes[address];\n\t            if (list)\n\t                frame = list[component];\n\t\n\t            if (frame) {\n\t                src = frame.getAttribute('src');\n\t                if (src)\n\t                    return src.split(\"#\")[1];\n\t            }\n\t        };\n\t\n\t        self.lookup = function lookup(machine, component, hash) {\n\t            var host;\n\t            var address;\n\t            var new_frame = false;\n\t\n\t            if (machine) {\n\t                host = machine.connection_string;\n\t                address = machine.address;\n\t            }\n\t\n\t            if (!host)\n\t                host = \"localhost\";\n\t\n\t            if (!address)\n\t                address = host;\n\t\n\t            var list = iframes[address];\n\t            if (!list)\n\t                iframes[address] = list = { };\n\t\n\t            var name = \"cockpit1:\" + host + \"/\" + component;\n\t            var frame = list[component];\n\t            if (frame && frame.getAttribute(\"name\") != name) {\n\t                remove_frame(frame);\n\t                frame = null;\n\t            }\n\t\n\t            var wind, src;\n\t\n\t            /* A preloaded frame */\n\t            if (!frame) {\n\t                wind = window.frames[name];\n\t                if (wind)\n\t                    frame = wind.frameElement;\n\t                if (frame) {\n\t                    src = frame.getAttribute('src');\n\t                    frame.url = src.split(\"#\")[0];\n\t                    list[component] = frame;\n\t                }\n\t            }\n\t\n\t            /* Need to create a new frame */\n\t            if (!frame) {\n\t                new_frame = true;\n\t                frame = document.createElement(\"iframe\");\n\t                frame.setAttribute(\"class\", \"container-frame\");\n\t                frame.setAttribute(\"name\", name);\n\t                frame.style.display = \"none\";\n\t\n\t                var base, checksum;\n\t                if (machine)\n\t                    checksum = machine.checksum;\n\t                if (host === \"localhost\")\n\t                    base = \"..\";\n\t                else if (checksum)\n\t                    base = \"../../\" + checksum;\n\t                else\n\t                    base = \"../../@\" + host;\n\t\n\t                frame.url = base + \"/\" + component;\n\t                if (component.indexOf(\"/\") === -1)\n\t                    frame.url += \"/index\";\n\t                frame.url += \".html\";\n\t            }\n\t\n\t            if (!hash)\n\t                hash = \"/\";\n\t            src = frame.url + \"#\" + hash;\n\t            if (frame.getAttribute('src') != src)\n\t                frame.setAttribute('src', src);\n\t\n\t            /* Store frame only when fully setup */\n\t            if (new_frame) {\n\t                list[component] = frame;\n\t                $(\"#content\").append(frame);\n\t            }\n\t            frame_ready(frame);\n\t            return frame;\n\t        };\n\t    }\n\t\n\t    function Router(index) {\n\t        var self = this;\n\t\n\t        var unique_id = 0;\n\t        var origin = cockpit.transport.origin;\n\t        var source_by_seed = { };\n\t        var source_by_name = { };\n\t\n\t        cockpit.transport.filter(function(message, channel, control) {\n\t            var seed, source, pos;\n\t\n\t            /* Only control messages with a channel are forwardable */\n\t            if (control) {\n\t                if (control.channel !== undefined) {\n\t                    for (seed in source_by_seed)\n\t                        source_by_seed[seed].window.postMessage(message, origin);\n\t                } else if (control.command == \"hint\") {\n\t                    if (control.credential)\n\t                        index.authorize_changed(control.credential);\n\t                }\n\t\n\t            /* Forward message to relevant frame */\n\t            } else if (channel) {\n\t                pos = channel.indexOf('!');\n\t                if (pos !== -1) {\n\t                    seed = channel.substring(0, pos + 1);\n\t                    source = source_by_seed[seed];\n\t                    if (source) {\n\t                        source.window.postMessage(message, origin);\n\t                        return false; /* Stop delivery */\n\t                    }\n\t                }\n\t            }\n\t\n\t            /* Still deliver the message locally */\n\t            return true;\n\t        }, false);\n\t\n\t        function perform_jump(child, control) {\n\t            var current_frame = index.current_frame();\n\t            if (child !== window) {\n\t                if (!current_frame || current_frame.contentWindow != child)\n\t                    return;\n\t            }\n\t            var str = control.location || \"\";\n\t            if (str[0] != \"/\")\n\t                str = \"/\" + str;\n\t            if (control.host)\n\t                str = \"/@\" + encodeURIComponent(control.host) + str;\n\t            index.jump(str);\n\t        }\n\t\n\t        function perform_track(child) {\n\t            var hash;\n\t            var current_frame = index.current_frame();\n\t            /* Note that we ignore tracknig for old shell code */\n\t            if (current_frame && current_frame.contentWindow === child &&\n\t                child.name && child.name.indexOf(\"/shell/shell\") === -1) {\n\t                hash = child.location.hash;\n\t                if (hash.indexOf(\"#\") === 0)\n\t                    hash = hash.substring(1);\n\t                if (hash === \"/\")\n\t                    hash = \"\";\n\t                index.jump({ hash: hash });\n\t            }\n\t        }\n\t\n\t        function on_unload(ev) {\n\t            var source = source_by_name[ev.target.defaultView.name];\n\t            if (source)\n\t                unregister(source);\n\t        }\n\t\n\t        function on_hashchange(ev) {\n\t            var source = source_by_name[ev.target.name];\n\t            if (source)\n\t                perform_track(source.window);\n\t        }\n\t\n\t        function on_load(ev) {\n\t            var source = source_by_name[ev.target.contentWindow.name];\n\t            if (source)\n\t                perform_track(source.window);\n\t        }\n\t\n\t        function unregister(source) {\n\t            var child = source.window;\n\t            cockpit.kill(null, child.name);\n\t            var frame = child.frameElement;\n\t            if (frame)\n\t                frame.removeEventListener(\"load\", on_load);\n\t            child.removeEventListener(\"unload\", on_unload);\n\t            child.removeEventListener(\"hashchange\", on_hashchange);\n\t            delete source_by_seed[source.channel_seed];\n\t            delete source_by_name[source.name];\n\t        }\n\t\n\t        function register(child) {\n\t            var host, name = child.name || \"\";\n\t            if (name.indexOf(\"cockpit1:\") === 0)\n\t                host = name.substring(9).split(\"/\")[0];\n\t            if (!name || !host) {\n\t                console.warn(\"invalid child window name\", child, name);\n\t                return;\n\t            }\n\t\n\t            unique_id += 1;\n\t            var seed = (cockpit.transport.options[\"channel-seed\"] || \"undefined:\") + unique_id + \"!\";\n\t            var source = {\n\t                name: name,\n\t                window: child,\n\t                channel_seed: seed,\n\t                default_host: host,\n\t                inited: false,\n\t            };\n\t            source_by_seed[seed] = source;\n\t            source_by_name[name] = source;\n\t\n\t            var frame = child.frameElement;\n\t            frame.addEventListener(\"load\", on_load);\n\t            child.addEventListener(\"unload\", on_unload);\n\t            child.addEventListener(\"hashchange\", on_hashchange);\n\t\n\t            /*\n\t             * Setting the \"data-loaded\" attribute helps the testsuite\n\t             * know when it can switch into the frame and inject its\n\t             * own additions.\n\t             */\n\t            frame.setAttribute('data-loaded', '1');\n\t\n\t            perform_track(child);\n\t            phantom_checkpoint();\n\t\n\t            index.navigate();\n\t            return source;\n\t        }\n\t\n\t        function message_handler(event) {\n\t            if (event.origin !== origin)\n\t                return;\n\t\n\t            var data = event.data;\n\t            var child = event.source;\n\t            if (!child || typeof data !== \"string\")\n\t                return;\n\t\n\t            var source = source_by_name[child.name];\n\t            var control;\n\t\n\t            /* Closing the transport */\n\t            if (data.length === 0) {\n\t                if (source)\n\t                    unregister(source);\n\t                return;\n\t            }\n\t\n\t            /* A control message */\n\t            if (data[0] == '\\n') {\n\t                control = JSON.parse(data.substring(1));\n\t                if (control.command === \"init\") {\n\t                    if (source)\n\t                        unregister(source);\n\t                    source = register(child);\n\t                    if (source) {\n\t                        var reply = $.extend({ }, cockpit.transport.options,\n\t                            { command: \"init\", \"host\": source.default_host, \"channel-seed\": source.channel_seed }\n\t                        );\n\t                        child.postMessage(\"\\n\" + JSON.stringify(reply), origin);\n\t                        source.inited = true;\n\t\n\t                        /* If this new frame is not the current one, tell it */\n\t                        if (child.frameElement != index.current_frame())\n\t                            self.hint(child.frameElement.contentWindow, { \"hidden\": true });\n\t                    }\n\t\n\t                } else if (control.command === \"jump\") {\n\t                    perform_jump(child, control);\n\t                    return;\n\t\n\t                } else if (control.command === \"hint\") {\n\t                    if (control.hint == \"restart\") {\n\t                        /* watchdog handles current host for now */\n\t                        if (control.host != cockpit.transport.host)\n\t                            index.expect_restart(control.host);\n\t                    } else\n\t                        cockpit.hint(control.hint, control);\n\t                    return;\n\t                } else if (control.command == \"oops\") {\n\t                    index.show_oops();\n\t                    return;\n\t\n\t                /* Only control messages with a channel are forwardable */\n\t                } else if (control.channel === undefined) {\n\t                    return;\n\t\n\t                /* Add the child's group to all open channel messages */\n\t                } else if (control.command == \"open\") {\n\t                    control.group = child.name;\n\t                    data = \"\\n\" + JSON.stringify(control);\n\t                }\n\t            }\n\t\n\t            if (!source) {\n\t                console.warn(\"child frame \" + child.name + \" sending data without init\");\n\t                return;\n\t            }\n\t\n\t            /* Everything else gets forwarded */\n\t            cockpit.transport.inject(data, true);\n\t        }\n\t\n\t\n\t        self.start = function start(messages) {\n\t            window.addEventListener(\"message\", message_handler, false);\n\t            for (var i = 0, len = messages.length; i < len; i++)\n\t                message_handler(messages[i]);\n\t        };\n\t\n\t        self.hint = function hint(child, data) {\n\t            var message, source = source_by_name[child.name];\n\t            if (source && source.inited) {\n\t                data.command = \"hint\";\n\t                message = \"\\n\" + JSON.stringify(data);\n\t                source.window.postMessage(message, origin);\n\t            }\n\t        };\n\t    }\n\t\n\t    /*\n\t     * New instances of Index must be created by new_index_from_proto\n\t     * and the caller must include a navigation function in the given\n\t     * prototype. That function will be called by by Frames and\n\t     * Router to actually perform any navigation action.\n\t     *\n\t     * As a convenience, common menu items can be setup by adding the\n\t     * selector to be used to hook them up. The accepted selectors\n\t     * are.\n\t     * oops_sel, logout_sel, language_sel, brand_sel, about_sel,\n\t     * user_sel, account_sel\n\t     *\n\t     * Emits \"disconnect\" and \"expect_restart\" signals, that should be\n\t     * handled by the caller.\n\t     */\n\t    function Index() {\n\t        var self = this;\n\t        var current_frame;\n\t\n\t        if (typeof self.navigate !== \"function\")\n\t            throw \"Index requires a prototype with a navigate function\";\n\t\n\t        self.frames = new Frames(self);\n\t        self.router = new Router(self);\n\t\n\t        /* Watchdog for disconnect */\n\t        var watchdog = cockpit.channel({ \"payload\": \"null\" });\n\t        $(watchdog).on(\"close\", function(event, options) {\n\t            var watchdog_problem = options.problem || \"disconnected\";\n\t            console.warn(\"transport closed: \" + watchdog_problem);\n\t            $(self).triggerHandler(\"disconnect\", watchdog_problem);\n\t        });\n\t\n\t        /* Handles an href link as seen below */\n\t        $(document).on(\"click\", \"a[href]\", function(ev) {\n\t            var a = this;\n\t            if (window.location.host === a.host) {\n\t                self.jump(a.getAttribute('href'));\n\t                ev.preventDefault();\n\t                phantom_checkpoint();\n\t            }\n\t        });\n\t\n\t        if (window.navigator.userAgent.indexOf(\"PhantomJS\") == -1) {\n\t            var old_onerror = window.onerror;\n\t            window.onerror = function cockpit_error_handler(msg, url, line) {\n\t                self.show_oops();\n\t                phantom_checkpoint();\n\t                if (old_onerror)\n\t                    return old_onerror(msg, url, line);\n\t                return false;\n\t            };\n\t        }\n\t\n\t        /*\n\t         * Navigation is driven by state objects, which are used with pushState()\n\t         * and friends. The state is the canonical navigation location, and not\n\t         * the URL. Only when no state has been pushed or we are arriving from\n\t         * a link, do we parse the state from the URL.\n\t         *\n\t         * Each state object has:\n\t         *   host: a machine host\n\t         *   component: the stripped component to load\n\t         *   hash: the hash to pass to the component\n\t         *   sidebar: set to true to hint that we want a component with a sidebar\n\t         *\n\t         * If state.sidebar is set, and no component has yet been chosen for the\n\t         * given state, then we try to find one that would show a sidebar.\n\t         */\n\t\n\t        /* Encode navigate state into a string\n\t         * If with_root is true the configured\n\t         * url root will be added to the generated\n\t         * url. with_root should be used when\n\t         * navigating to a new url or updating\n\t         * history, but is not needed when simply\n\t         * generating a string for a link.\n\t         */\n\t        function encode(state, sidebar, with_root) {\n\t            var path = [];\n\t            if (state.host && (sidebar || state.host !== \"localhost\"))\n\t                path.push(\"@\" + state.host);\n\t            if (state.component)\n\t                path.push.apply(path, state.component.split(\"/\"));\n\t            var string = cockpit.location.encode(path, null, with_root);\n\t            if (state.hash && state.hash !== \"/\")\n\t                string += \"#\" + state.hash;\n\t            return string;\n\t        }\n\t\n\t        /* Decodes navigate state from a string */\n\t        function decode(string) {\n\t            var state = { version: \"v1\", hash: \"\" };\n\t            var pos = string.indexOf(\"#\");\n\t            if (pos !== -1) {\n\t                state.hash = string.substring(pos + 1);\n\t                string = string.substring(0, pos);\n\t            }\n\t            if (string[0] != '/')\n\t                string = \"/\" + string;\n\t            var path = cockpit.location.decode(string);\n\t            if (path[0] && path[0][0] == \"@\") {\n\t                state.host = path.shift().substring(1);\n\t                state.sidebar = true;\n\t            } else {\n\t                state.host = \"localhost\";\n\t            }\n\t            if (path.length && path[path.length - 1] == \"index\")\n\t                path.pop();\n\t            state.component = path.join(\"/\");\n\t            return state;\n\t        }\n\t\n\t        function build_navbar() {\n\t            var navbar = $(\"#content-navbar\");\n\t\n\t            function links(component) {\n\t                var a = $(\"<a>\")\n\t                    .attr(\"href\", self.href({ host: \"localhost\", component: component.path }))\n\t                    .text(component.label);\n\t                return $(\"<li class='dashboard-link'>\")\n\t                    .attr(\"data-component\", component.path)\n\t                    .append(a);\n\t            }\n\t\n\t            if (shell_embedded) {\n\t                navbar.hide();\n\t            } else {\n\t                var local_compiled = new CompiledComponants();\n\t                local_compiled.load(cockpit.manifests, \"dashboard\");\n\t                navbar.append(local_compiled.ordered(\"dashboard\").map(links));\n\t            }\n\t        }\n\t\n\t        self.recalculate_layout = function() {\n\t            var topnav = $('#topnav');\n\t            var sidebar = $('#sidebar');\n\t            var content = $('#content');\n\t\n\t            var window_height = $(window).height();\n\t            var topnav_height = topnav.height();\n\t\n\t            var y = window_height - topnav_height;\n\t            $(current_frame).height(Math.floor(y));\n\t            sidebar.height(y);\n\t\n\t            var sidebar_width = sidebar.is(':visible') ? sidebar.outerWidth() : 0;\n\t            content.css(\"margin-left\", sidebar_width + \"px\");\n\t        };\n\t\n\t        self.retrieve_state = function() {\n\t            var state = window.history.state;\n\t            if (!state || state.version !== \"v1\") {\n\t                if (shell_embedded)\n\t                    state = decode(\"/\" + window.location.hash);\n\t                else\n\t                    state = decode(window.location.pathname + window.location.hash);\n\t            }\n\t            return state;\n\t        };\n\t\n\t        /* Jumps to a given navigate state */\n\t        self.jump = function (state, replace) {\n\t            if (typeof (state) === \"string\")\n\t                state = decode(state);\n\t\n\t            var current = self.retrieve_state();\n\t\n\t            /* Make sure we have the data we need */\n\t            if (!state.host)\n\t                state.host = current.host || \"localhost\";\n\t            if (!(\"component\" in state))\n\t                state.component = current.component || \"\";\n\t\n\t            var target;\n\t            var history = window.history;\n\t            var frame_change = (state.host !== current.host ||\n\t                                state.component !== current.component);\n\t\n\t            if (frame_change && !state.hash) {\n\t                state.hash = self.frames.lookup_component_hash(state.host,\n\t                                                               state.component);\n\t            }\n\t\n\t            if (shell_embedded)\n\t                target = window.location;\n\t            else\n\t                target = encode(state, null, true);\n\t\n\t            if (replace) {\n\t                history.replaceState(state, \"\", target);\n\t                return false;\n\t            }\n\t\n\t\n\t            if (frame_change || state.hash !== current.hash) {\n\t                history.pushState(state, \"\", target);\n\t                self.navigate(state, true);\n\t                return true;\n\t            }\n\t\n\t            return false;\n\t        };\n\t\n\t        /* Build an href for use in an <a> */\n\t        self.href = function (state, sidebar) {\n\t            return encode(state, sidebar);\n\t        };\n\t\n\t        self.show_oops = function () {\n\t            if (self.oops_sel)\n\t                $(self.oops_sel).show();\n\t        };\n\t\n\t        self.current_frame = function (frame) {\n\t            if (frame !== undefined) {\n\t                if (current_frame !== frame) {\n\t                    if (current_frame && current_frame.contentWindow)\n\t                        self.router.hint(current_frame.contentWindow, { \"hidden\": true });\n\t                    if (frame && frame.contentWindow)\n\t                        self.router.hint(frame.contentWindow, { \"hidden\": false });\n\t                }\n\t                current_frame = frame;\n\t            }\n\t            return current_frame;\n\t        };\n\t\n\t        self.start = function() {\n\t            /* window.messages is initialized in shell/bundle.js */\n\t            var messages = window.messages;\n\t            if (messages)\n\t                messages.cancel();\n\t            self.router.start(messages || []);\n\t        };\n\t\n\t        self.ready = function () {\n\t            $(window).on(\"popstate\", function(ev) {\n\t                self.navigate(ev.state, true);\n\t            });\n\t\n\t            $(window).on('resize', function () {\n\t                self.recalculate_layout();\n\t            });\n\t\n\t            build_navbar();\n\t            self.navigate();\n\t            cockpit.translate();\n\t            $(\"body\").show();\n\t        };\n\t\n\t        self.expect_restart = function (host) {\n\t            $(self).triggerHandler(\"expect_restart\", host);\n\t        };\n\t\n\t        self.authorize_changed = function(value) {\n\t            $(self.credential_sel).toggle(value != \"clear\");\n\t        };\n\t\n\t        /* Menu items */\n\t        /* The oops bar */\n\t        function setup_oops(id) {\n\t            var oops = $(id);\n\t            if (!oops)\n\t                return;\n\t            oops.children(\"a\").on(\"click\", function() {\n\t                $(\"#error-popup-title\").text(_(\"Unexpected error\"));\n\t                var details = _(\"Cockpit had an unexpected internal error. <br/><br/>You can try restarting Cockpit by pressing refresh in your browser. The javascript console contains details about this error (<b>Ctrl-Shift-J</b> in most browsers).\");\n\t                $(\"#error-popup-message\").html(details);\n\t                $('#error-popup').modal('show');\n\t            });\n\t        }\n\t\n\t        /* Branding */\n\t        function setup_brand(id, default_title) {\n\t            var os_release = JSON.parse(window.localStorage['os-release'] || \"{}\");\n\t\n\t            var style, elt = $(id)[0];\n\t            if (elt)\n\t                style = window.getComputedStyle(elt);\n\t            if (!style)\n\t                return;\n\t\n\t            var len, content = style.content;\n\t            if (content && content != \"none\" && content != \"normal\") {\n\t                len = content.length;\n\t                if ((content[0] === '\"' || content[0] === '\\'') &&\n\t                    len > 2 && content[len - 1] === content[0])\n\t                    content = content.substr(1, len - 2);\n\t                elt.innerHTML = cockpit.format(content, os_release) || default_title;\n\t                return $(elt).text();\n\t            }\n\t        }\n\t\n\t        /* Logout link */\n\t        function setup_logout(id) {\n\t            $(id).on(\"click\", function() {\n\t                cockpit.logout();\n\t            });\n\t        }\n\t\n\t        /* Display language dialog */\n\t        function setup_language(id) {\n\t            /*\n\t             * Note that we don't go ahead and load all the po files in order\n\t             * to produce this list. Perhaps we would include it somewhere in a\n\t             * separate automatically generated file. Need to see.\n\t             */\n\t            var manifest = cockpit.manifests[\"shell\"] || { };\n\t            $(\".display-language-menu\").toggle(!!manifest.locales);\n\t            var language = document.cookie.replace(/(?:(?:^|.*;\\s*)CockpitLang\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\n\t            if (!language)\n\t                language = \"en-us\";\n\t            $.each(manifest.locales || { }, function(code, name) {\n\t                var el = $(\"<option>\").text(name).val(code);\n\t                if (code == language)\n\t                    el.attr(\"selected\", \"true\");\n\t                $(\"#display-language-list\").append(el);\n\t            });\n\t\n\t            $(\"#display-language-select-button\").on(\"click\", function(event) {\n\t                var code_to_select = $(\"#display-language-list\").val();\n\t                var cookie = \"CockpitLang=\" + encodeURIComponent(code_to_select) +\n\t                             \"; path=/; expires=Sun, 16 Jul 3567 06:23:41 GMT\";\n\t                document.cookie = cookie;\n\t                window.localStorage.setItem(\"cockpit.lang\", code_to_select);\n\t                window.location.reload(true);\n\t                return false;\n\t            });\n\t\n\t            $(id).on(\"shown.bs.modal\", function() {\n\t                $(\"display-language-list\").focus();\n\t                phantom_checkpoint();\n\t            });\n\t        }\n\t\n\t        /* About dialog */\n\t        function setup_about(id) {\n\t            $(cockpit.info).on(\"changed\", function() {\n\t                $(id).text(cockpit.info.version);\n\t                phantom_checkpoint();\n\t            });\n\t        }\n\t\n\t        /* Account link */\n\t        function setup_account(id, user) {\n\t            $(id).on(\"click\", function() {\n\t                self.jump({ host: \"localhost\", component: \"users\", hash: \"/\" + user.name });\n\t            }).show();\n\t        }\n\t\n\t        /* User information */\n\t        function setup_user(id, user) {\n\t            $(id).text(user.full_name || user.name || '???');\n\t\n\t            var is_root = (user.name == \"root\");\n\t            var is_not_root = (user.name && !is_root);\n\t            $('#deauthorize-item').toggle(is_not_root);\n\t        }\n\t\n\t        if (self.oops_sel)\n\t            setup_oops(self.oops_sel);\n\t\n\t        if (self.logout_sel)\n\t            setup_logout(self.logout_sel);\n\t\n\t        if (self.language_sel)\n\t            setup_language(self.language_sel);\n\t\n\t        var cal_title;\n\t        if (self.brand_sel) {\n\t            cal_title = setup_brand(self.brand_sel, self.default_title);\n\t            if (cal_title)\n\t                self.default_title = cal_title;\n\t        }\n\t\n\t        if (self.about_sel)\n\t            setup_about(self.about_sel);\n\t\n\t        if (self.user_sel || self.account_sel) {\n\t            cockpit.user().done(function (user) {\n\t                if (self.user_sel)\n\t                    setup_user(self.user_sel, user);\n\t                if (self.account_sel)\n\t                    setup_account(self.account_sel, user);\n\t            });\n\t        }\n\t    }\n\t\n\t    function CompiledComponants() {\n\t        var self = this;\n\t        self.items = {};\n\t\n\t        self.load = function(manifests, section) {\n\t            $.each(manifests || { }, function(name, manifest) {\n\t                $.each(manifest[section] || { }, function(prop, info) {\n\t                    var item = {\n\t                        section: section,\n\t                        label: cockpit.gettext(info.label) || prop,\n\t                        order: info.order === undefined ? 1000 : info.order,\n\t                        wants: info.wants\n\t                    };\n\t                    if (info.path)\n\t                        item.path = info.path.replace(/\\.html$/, \"\");\n\t                    else\n\t                        item.path = name + \"/\" + prop;\n\t                    if (item.path.indexOf(\"/\") === -1)\n\t                        item.path = name + \"/\" + item.path;\n\t                    if (item.path.slice(-6) == \"/index\")\n\t                        item.path = item.path.slice(0, -6);\n\t                    self.items[item.path] = item;\n\t                });\n\t            });\n\t        };\n\t\n\t\n\t        self.ordered = function(section) {\n\t            var x, list = [];\n\t            for (x in self.items) {\n\t                if (!section || self.items[x].section === section)\n\t                    list.push(self.items[x]);\n\t            }\n\t            list.sort(function(a, b) { return a.order - b.order; });\n\t            return list;\n\t        };\n\t\n\t        self.search = function(prop, value) {\n\t            var x;\n\t            for (x in self.items) {\n\t                if (self.items[x][prop] === value)\n\t                    return self.items[x];\n\t            }\n\t        };\n\t    }\n\t\n\t    function follow(arg) {\n\t        /* A promise of some sort */\n\t        if (arguments.length == 1 && typeof arg.then == \"function\") {\n\t            arg.then(function() { console.log.apply(console, arguments); },\n\t                     function() { console.error.apply(console, arguments); });\n\t            if (typeof arg.stream == \"function\")\n\t                arg.stream(function() { console.log.apply(console,arguments); });\n\t        }\n\t    }\n\t\n\t    var zz_value;\n\t\n\t    /* For debugging utility in the index window */\n\t    Object.defineProperties(window, {\n\t        cockpit: { value: cockpit },\n\t        zz: {\n\t            get: function() { return zz_value; },\n\t            set: function(val) { zz_value = val; follow(val); }\n\t        }\n\t    });\n\t\n\t    module.exports = {\n\t        new_index_from_proto: function (proto) {\n\t            var o = new Object(proto);\n\t            Index.call(o);\n\t            return o;\n\t        },\n\t\n\t        new_compiled: function () {\n\t            return new CompiledComponants();\n\t        },\n\t    };\n\t}());\n\n\n/***/ },\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(3);\n\t    var cockpit = __webpack_require__(4);\n\t\n\t    var machis = __webpack_require__(2);\n\t    var mdialogs = __webpack_require__(13);\n\t\n\t    var indexes = __webpack_require__(25);\n\t\n\t    var default_title = \"Cockpit\";\n\t    var manifest = cockpit.manifests[\"shell\"] || { };\n\t    if (manifest.title)\n\t        default_title = manifest.title;\n\t\n\t    var options = {\n\t        brand_sel: \"#index-brand\",\n\t        logout_sel: \"#go-logout\",\n\t        oops_sel: \"#navbar-oops\",\n\t        language_sel: \"#display-language\",\n\t        about_sel: \"#about-version\",\n\t        default_title: default_title\n\t    };\n\t    var machines = machis.instance();\n\t    machines.overlay(\"localhost\", { \"label\": default_title,\n\t                                    \"static_hostname\": true });\n\t\n\t    var loader = machis.loader(machines, true);\n\t    var dialogs = mdialogs.new_manager(machines, {\n\t        \"no-cockpit\": \"not-supported\",\n\t        \"not-supported\": \"not-supported\",\n\t        \"protocol-error\": \"not-supported\",\n\t        \"authentication-not-supported\": \"change-auth\",\n\t        \"authentication-failed\": \"change-auth\",\n\t        \"no-forwarding\": \"change-auth\",\n\t        \"unknown-hostkey\": \"unknown-hostkey\",\n\t        \"invalid-hostkey\": \"invalid-hostkey\",\n\t        \"no-host\": \"change-port\",\n\t    });\n\t\n\t    indexes.machines_index(options, machines, loader, dialogs);\n\t\n\t    var login_data = cockpit.localStorage.getItem('login-data', true);\n\t    if (login_data) {\n\t        var data = JSON.parse(login_data);\n\t        $(\"#content-user-name\").text(data[\"displayName\"]);\n\t    }\n\t}());\n\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// shell/index-stub.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 3ffe142167c0147a4006","'use strict';\n\n(function() {\n    \"use strict\";\n\n    var $ = require(\"jquery\");\n    var cockpit = require(\"cockpit\");\n\n    var mod = { };\n\n    /* machines.json path */\n    var path = \"/var/lib/cockpit/machines.json\";\n    var known_hosts_path = \"/var/lib/cockpit/known_hosts\";\n    /*\n     * We share the Machines state between multiple frames. Only\n     * one frame has the job of loading the state, usually index.js\n     * The Loader code below does all the loading.\n     *\n     * The data is stored in sessionStorage in a JSON object, like this\n     * {\n     *    content: parsed contents of machines.json\n     *    tag: the cockpit.file() tag\n     *    overlay: extra data to augment and override on top of content\n     * }\n     *\n     * This uses sessionStorage rather than cockpit.sessionStorage\n     * because we don't ever want to write unprefixed keys.\n     */\n\n    var key = cockpit.sessionStorage.prefixedKey(\"v2-machines.json\");\n    var session_prefix = cockpit.sessionStorage.prefixedKey(\"v1-session-machine\");\n\n    function generate_session_key(host) {\n        return session_prefix + \"/\" + host;\n    }\n\n    function Machines() {\n        var self = this;\n\n        var flat = null;\n        self.ready = false;\n\n        /* parsed machine data */\n        var machines = { };\n\n        /* Data shared between Machines() instances */\n        var last = {\n            content: null,\n            tag: null,\n            overlay: {\n                localhost: {\n                    visible: true,\n                    manifests: cockpit.manifests\n                }\n            }\n        };\n\n        function storage(ev) {\n            if (ev.key === key && ev.storageArea === window.sessionStorage)\n                refresh(JSON.parse(ev.newValue));\n        }\n\n        window.addEventListener(\"storage\", storage);\n\n        window.setTimeout(function() {\n            var value = window.sessionStorage.getItem(key);\n            if (!self.ready && value)\n                refresh(JSON.parse(value));\n        });\n\n        var timeout = null;\n\n        function sync(machine, values, overlay) {\n            var desired = $.extend({ }, values || { }, overlay || { });\n            var prop;\n            for (prop in desired) {\n                if (machine[prop] !== desired[prop])\n                    machine[prop] = desired[prop];\n            }\n            for (prop in machine) {\n                if (machine[prop] !== desired[prop])\n                    delete machine[prop];\n            }\n            return machine;\n        }\n\n        function refresh(shared, push) {\n            if (!shared)\n                return;\n\n            var emit_ready = !self.ready;\n\n            self.ready = true;\n            last = shared;\n            flat = null;\n\n            if (push && !timeout) {\n                timeout = window.setTimeout(function() {\n                    timeout = null;\n                    window.sessionStorage.setItem(key, JSON.stringify(last));\n                }, 10);\n            }\n\n            var host, hosts = { };\n            var content = shared.content || { };\n            var overlay = shared.overlay || { };\n            for (host in content)\n                hosts[host] = true;\n            for (host in overlay)\n                hosts[host] = true;\n\n            var events = [];\n\n            var machine, application;\n            for (host in hosts) {\n                var old_machine = machines[host] || { };\n                var old_conns = old_machine.connection_string;\n\n                /* Invert logic for color, always respect what's on disk */\n                if (content[host] && content[host].color && overlay[host])\n                    delete overlay[host].color;\n\n                machine = sync(old_machine, content[host], overlay[host]);\n\n                /* Fill in defaults */\n                machine.key = host;\n                if (!machine.address)\n                    machine.address = host;\n\n                machine.connection_string = self.generate_connection_string(machine.user,\n                                                                            machine.port,\n                                                                            machine.address);\n\n                if (!machine.label) {\n                    if (host == \"localhost\" || host == \"localhost.localdomain\") {\n                        application = cockpit.transport.application();\n                        if (application.indexOf('cockpit+=') === 0)\n                            machine.label = application.replace('cockpit+=', '');\n                        else\n                            machine.label = window.location.hostname;\n                    } else {\n                        machine.label = host;\n                    }\n                }\n                if (!machine.avatar)\n                    machine.avatar = \"../shell/images/server-small.png\";\n\n                events.push([host in machines ? \"updated\" : \"added\",\n                            [machine, host, old_conns]]);\n                machines[host] = machine;\n            }\n\n            /* Remove any lost hosts */\n            for (host in machines) {\n                if (!(host in hosts)) {\n                    machine = machines[host];\n                    delete machines[host];\n                    delete overlay[host];\n                    events.push([\"removed\", [machine, host]]);\n                }\n            }\n\n            /* Fire off all events */\n            var i, sel = $(self), len = events.length;\n            for (i = 0; i < len; i++)\n                sel.triggerHandler(events[i][0], events[i][1]);\n            if (emit_ready)\n                $(self).triggerHandler(\"ready\");\n        }\n\n        function update_session_machine(machine, host, values) {\n            /* We don't save the whole machine object */\n            var skey = generate_session_key(host);\n            var data = $.extend({}, machine, values);\n            window.sessionStorage.setItem(skey, JSON.stringify(data));\n            self.overlay(host, values);\n            return cockpit.when([]);\n        }\n\n        function update_saved_machine(host, values) {\n            function mutate(data) {\n                if (!data)\n                    data = { };\n                var item = data[host];\n                if (!item)\n                    item = data[host] = { };\n                merge(item, values);\n                return data;\n            }\n\n            /* Update the JSON file */\n            var local = cockpit.file(path, { syntax: JSON, superuser: \"try\" });\n            var mod = local.modify(mutate, last.content, last.tag)\n                .done(function(data, tag) {\n                    var prop, over = { };\n                    for (prop in values)\n                        over[prop] = null;\n                    self.data(data, tag); /* an optimization */\n                    self.overlay(host, over);\n                })\n                .always(function() {\n                    local.close();\n                });\n\n            return mod;\n        }\n\n        self.add_key = function(host_key) {\n            var known_hosts = cockpit.file(known_hosts_path, { superuser: \"try\" });\n            return known_hosts\n                .modify(function(data) {\n                    if (!data)\n                        data = \"\";\n\n                    return data + \"\\n\" + host_key;\n                })\n                .always(function() {\n                    known_hosts.close();\n                });\n        };\n\n        self.add = function add(connection_string, color) {\n            var values = self.split_connection_string(connection_string);\n            var host = values['address'];\n\n            values = $.extend({\n                        visible: true,\n                        color: color || self.unused_color(),\n                    }, values);\n\n            var machine = self.lookup(host);\n            if (machine)\n                machine.on_disk = true;\n\n            return self.change(values['address'], values);\n        };\n\n        self.unused_color = function unused_color() {\n            var i, len = mod.colors.length;\n            for (i = 0; i < len; i++) {\n                if (!color_in_use(mod.colors[i]))\n                    return mod.colors[i];\n            }\n            return \"gray\";\n        };\n\n        function color_in_use(color) {\n            var key, machine, norm = mod.colors.parse(color);\n            for (key in machines) {\n                machine = machines[key];\n                if (machine.color && mod.colors.parse(machine.color) == norm)\n                    return true;\n            }\n            return false;\n        }\n\n        function merge(item, values) {\n            for (var prop in values) {\n                if (values[prop] === null)\n                    delete item[prop];\n                else\n                    item[prop] = values[prop];\n            }\n        }\n\n        self.change = function change(host, values) {\n            var mod, hostnamed, call;\n            var machine = self.lookup(host);\n\n            if (values.label) {\n\n                var conn_to = host;\n                if (machine)\n                    conn_to = machine.connection_string;\n\n                if (!machine || machine.label !== values.label) {\n                    hostnamed = cockpit.dbus(\"org.freedesktop.hostname1\", { host: conn_to });\n                    call = hostnamed.call(\"/org/freedesktop/hostname1\", \"org.freedesktop.hostname1\",\n                                          \"SetPrettyHostname\", [ values.label, true ])\n                        .always(function() {\n                            hostnamed.close();\n                        })\n                        .fail(function(ex) {\n                            console.warn(\"couldn't set pretty host name: \" + ex);\n                        });\n                }\n            }\n\n            if (machine && !machine.on_disk)\n                mod = update_session_machine(machine, host, values);\n            else\n                mod = update_saved_machine(host, values);\n\n            if (call)\n                return cockpit.all(call, mod);\n\n            return mod;\n        };\n\n        self.data = function data(content, tag) {\n            var host, changes = {};\n\n            for (host in content) {\n                changes[host] = $.extend({ }, last.overlay[host] || { });\n                merge(changes[host], { on_disk: true });\n            }\n\n            /* It's a full reload, so data not\n             * present is no longer from disk\n             */\n            for (host in machines) {\n                if (content && !content[host]) {\n                    changes[host] = $.extend({ }, last.overlay[host] || { });\n                    merge(changes[host], { on_disk: null });\n                }\n            }\n\n            refresh({ content: content, tag: tag,\n                      overlay: $.extend({ }, last.overlay, changes) }, true);\n        };\n\n        self.overlay = function overlay(host, values) {\n            var changes = { };\n            changes[host] = $.extend({ }, last.overlay[host] || { });\n            merge(changes[host], values);\n            refresh({\n                content: last.content,\n                tag: last.tag,\n                overlay: $.extend({ }, last.overlay, changes)\n            }, true);\n        };\n\n        Object.defineProperty(self, \"list\", {\n            enumerable: true,\n            get: function get() {\n                var key;\n                if (!flat) {\n                    flat = [];\n                    for (key in machines) {\n                        if (machines[key].visible)\n                            flat.push(machines[key]);\n                    }\n                    flat.sort(function(m1, m2) {\n                        return m1.label.localeCompare(m2.label);\n                    });\n                }\n                return flat;\n            }\n        });\n\n        Object.defineProperty(self, \"addresses\", {\n            enumerable: true,\n            get: function get() {\n                return Object.keys(machines);\n            }\n        });\n\n        self.lookup = function lookup(address) {\n            var parts = self.split_connection_string(address);\n            return machines[parts.address || \"localhost\"] || null;\n        };\n\n        self.generate_connection_string = function (user, port, addr) {\n            var address = addr;\n            if (user)\n                address = user + \"@\" + address;\n\n            if (port)\n                address = address + \":\" + port;\n\n            return address;\n        };\n\n        self.split_connection_string = function(conn_to) {\n            var parts = {};\n            var user_spot = -1;\n            var port_spot = -1;\n\n            if (conn_to) {\n                user_spot = conn_to.lastIndexOf('@');\n                port_spot = conn_to.lastIndexOf(':');\n            }\n\n            if (user_spot > 0) {\n                parts.user = conn_to.substring(0, user_spot);\n                conn_to = conn_to.substring(user_spot+1);\n                port_spot = conn_to.lastIndexOf(':');\n            }\n\n            if (port_spot > -1) {\n                var port = parseInt(conn_to.substring(port_spot+1), 10);\n                if (!isNaN(port)) {\n                    parts.port = port;\n                    conn_to = conn_to.substring(0, port_spot);\n                }\n            }\n\n            parts.address = conn_to;\n            return parts;\n        };\n\n        self.close = function close() {\n            window.removeEventListener(\"storage\", storage);\n        };\n    }\n\n    function Loader(machines, session_only) {\n        var self = this;\n\n        /* Have we loaded from cockpit session */\n        var session_loaded = false;\n\n        /* File we are watching */\n        var file;\n\n        /* echo channels to each machine */\n        var channels = { };\n\n        /* hostnamed proxies to each machine, if hostnamed available */\n        var proxies = { };\n\n        function process_session_key(key, value) {\n            var host, values, machine;\n            var parts = key.split(\"/\");\n            if (parts[0] == session_prefix &&\n                parts.length === 2) {\n                    host = parts[1];\n                    if (value) {\n                        values = JSON.parse(value);\n                        machine = machines.lookup(host);\n                        if (!machine || !machine.on_disk)\n                            machines.overlay(host, values);\n                        else if (!machine.visible)\n                            machines.change(host, { visible: true });\n                        self.connect(host);\n                    }\n            }\n        }\n\n        function load_from_session_storage() {\n            var i;\n            session_loaded = true;\n            for (i = 0; i < window.sessionStorage.length; i++) {\n                var k = window.sessionStorage.key(i);\n                process_session_key(k, window.sessionStorage.getItem(k));\n            }\n        }\n\n        function process_session_machines(ev) {\n            if (ev.storageArea === window.sessionStorage)\n                process_session_key(ev.key || \"\", ev.newValue);\n        }\n        window.addEventListener(\"storage\", process_session_machines);\n\n        function state(host, value, problem) {\n            var values = { state: value, problem: problem };\n            if (value == \"connected\") {\n                values.restarting = false;\n            } else if (problem) {\n                values.manifests = null;\n                values.checksum = null;\n            }\n            machines.overlay(host, values);\n        }\n\n        $(machines).on(\"added\", updated);\n        $(machines).on(\"updated\", updated);\n        $(machines).on(\"removed\", removed);\n\n        function updated(ev, machine, host, old_conns) {\n            if (!machine) {\n                machine = machines.lookup(host);\n                if (!machine)\n                    return;\n            }\n\n            var props = proxies[host];\n            if (!props || !props.valid)\n                props = { };\n\n            var overlay = { };\n\n            if (!machine.color)\n                overlay.color = machines.unused_color();\n\n            var label = props.PrettyHostname || props.StaticHostname;\n            if (label && label !== machine.label)\n                overlay.label = label;\n\n            var os = props.OperatingSystemPrettyName;\n            if (os && os != machine.os)\n                overlay.os = props.OperatingSystemPrettyName;\n\n            if (!$.isEmptyObject(overlay))\n                machines.overlay(host, overlay);\n\n            /* Don't automatically reconnect failed machines */\n            if (machine.visible) {\n                if (old_conns && machine.connection_string != old_conns) {\n                    cockpit.kill(old_conns);\n                    self.disconnect(host);\n                    self.connect(host);\n                } else if (!machine.problem) {\n                    self.connect(host);\n                }\n            } else {\n                self.disconnect(host);\n            }\n        }\n\n        function removed(ev, machine, host) {\n            self.disconnect(host);\n        }\n\n        self.connect = function connect(host) {\n            var machine = machines.lookup(host);\n            if (!machine)\n                return;\n\n            var channel = channels[host];\n            if (channel)\n                return;\n\n            var options = {\n                host: machine.connection_string,\n                payload: \"echo\"\n            };\n\n            if (!machine.on_disk && machine.host_key) {\n                options['temp-session'] = false; /* Compatibility option */\n                options['session'] = 'shared';\n                options['host-key'] = machine.host_key;\n            }\n\n            channel = cockpit.channel(options);\n            channels[host] = channel;\n\n            var local = host === \"localhost\";\n\n            /* Request is null, and message is true when connected */\n            var request = null;\n            var open = local;\n            var problem = null;\n\n            var url;\n            if (!machine.manifests) {\n                if (machine.checksum)\n                    url = \"../../\" + machine.checksum + \"/manifests.json\";\n                else\n                    url = \"../../@\" + encodeURI(machine.connection_string) + \"/manifests.json\";\n            }\n\n            function whirl() {\n                if (!request && open)\n                    state(host, \"connected\", null);\n                else if (!problem)\n                    state(host, \"connecting\", null);\n            }\n\n            /* Here we load the machine manifests, and expect them before going to \"connected\" */\n            function request_manifest() {\n                request = $.ajax({ url: url, dataType: \"json\", cache: true})\n                    .done(function(manifests) {\n                        var overlay = { manifests: manifests };\n                        var etag = request.getResponseHeader(\"ETag\");\n                        if (etag) /* and remove quotes */\n                            overlay.checksum = etag.replace(/^\"(.+)\"$/, '$1');\n                        machines.overlay(host, overlay);\n                    })\n                    .fail(function(ex) {\n                        console.warn(\"failed to load manifests from \" + machine.connection_string + \": \" + ex);\n                    })\n                    .always(function() {\n                        request = null;\n                        whirl();\n                    });\n            }\n\n            function request_hostname() {\n                if (!machine.static_hostname) {\n                    var proxy = cockpit.dbus(\"org.freedesktop.hostname1\",\n                                             { host: machine.connection_string }).proxy();\n                    proxies[host] = proxy;\n                    proxy.wait(function() {\n                        $(proxy).on(\"changed\", function() {\n                            updated(null, null, host);\n                        });\n                        updated(null, null, host);\n                    });\n                }\n            }\n\n            /* Send a message to the server and get back a message once connected */\n            if (!local) {\n                channel.send(\"x\");\n\n                $(channel)\n                    .on(\"message\", function() {\n                        open = true;\n                        if (url)\n                            request_manifest();\n                        request_hostname();\n                        whirl();\n                    })\n                .on(\"close\", function(ev, options) {\n                    problem = options.problem || \"disconnected\";\n                    open = false;\n                    state(host, \"failed\", problem);\n                    var m = machines.lookup(host);\n                    if (m && m.restarting) {\n                        window.setTimeout(function() {\n                            self.connect(host);\n                        }, 10000);\n                    }\n                    self.disconnect(host);\n                });\n            } else if (url) {\n                request_manifest();\n                request_hostname();\n            }\n\n            /* In case already ready, for example when local */\n            whirl();\n        };\n\n        self.disconnect = function disconnect(host) {\n            if (host === \"localhost\")\n                return;\n\n            var channel = channels[host];\n            delete channels[host];\n            if (channel) {\n                channel.close();\n                $(channel).off();\n            }\n\n            var proxy = proxies[host];\n            delete proxies[host];\n            if (proxy) {\n                proxy.client.close();\n                $(proxy).off();\n            }\n        };\n\n        self.expect_restart = function expect_restart(host) {\n            var parts = machines.split_connection_string(host);\n            machines.overlay(parts.address, { restarting: true,\n                                              problem: null });\n        };\n\n        self.close = function close() {\n            $(machines).off(\"added\", updated);\n            $(machines).off(\"changed\", updated);\n            $(machines).off(\"removed\", removed);\n            machines = null;\n\n            if (file)\n                file.close();\n            file = null;\n\n            window.removeEventListener(\"storage\", process_session_machines);\n            var hosts = Object.keys(channels);\n            hosts.forEach(self.disconnect);\n        };\n\n        if (!session_only) {\n            file = cockpit.file(path, { syntax: JSON });\n            file.watch(function(data, tag, ex) {\n                if (ex)\n                    console.warn(\"couldn't load machines data: \" + ex);\n                machines.data(data, tag);\n                if (!session_loaded)\n                    load_from_session_storage();\n            });\n        } else {\n            load_from_session_storage();\n            machines.data({});\n        }\n    }\n\n    mod.instance = function instance(loader) {\n        return new Machines();\n    };\n\n    mod.loader = function loader(machines, session_only) {\n        return new Loader(machines, session_only);\n    };\n\n    mod.colors = [\n        \"#0099d3\",\n        \"#67d300\",\n        \"#d39e00\",\n        \"#d3007c\",\n        \"#00d39f\",\n        \"#00d1d3\",\n        \"#00618a\",\n        \"#4c8a00\",\n        \"#8a6600\",\n        \"#9b005b\",\n        \"#008a55\",\n        \"#008a8a\",\n        \"#00b9ff\",\n        \"#7dff00\",\n        \"#ffbe00\",\n        \"#ff0096\",\n        \"#00ffc0\",\n        \"#00fdff\",\n        \"#023448\",\n        \"#264802\",\n        \"#483602\",\n        \"#590034\",\n        \"#024830\",\n        \"#024848\"\n    ];\n\n    mod.colors.parse = function parse_color(input) {\n        var div = document.createElement('div');\n        div.style.color = input;\n        var style = window.getComputedStyle(div, null);\n        return style.getPropertyValue(\"color\") || div.style.color;\n    };\n\n    mod.known_hosts_path = known_hosts_path;\n\n    cockpit.transport.wait(function() {\n        var caps = cockpit.transport.options.capabilities || [];\n        mod.allow_connection_string = $.inArray(\"connection-string\", caps) != -1;\n        mod.has_auth_results = $.inArray(\"auth-method-results\", caps) != -1;\n    });\n\n    module.exports = mod;\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/machines.js\n// module id = 2\n// module chunks = 0 2","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 3\n// module chunks = 0 1 2","module.exports = cockpit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cockpit\"\n// module id = 4\n// module chunks = 0 1 2","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2015 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    var $ = require(\"jquery\");\n    var cockpit = require(\"cockpit\");\n\n    require(\"listing.css\");\n    require(\"patterns\");\n\n    var lister = require(\"raw!credentials-ssh-private-keys.sh\");\n\n    var _ = cockpit.gettext;\n\n    function Keys() {\n        var self = this;\n\n        self.path = null;\n        self.items = { };\n\n        var watch = null;\n        var proc = null;\n        var timeout = null;\n\n        cockpit.user().done(function (user) {\n            self.path = user.home + '/.ssh';\n            refresh();\n        });\n\n        function refresh() {\n            if (watch === null) {\n                watch = cockpit.channel({ payload: \"fslist1\", path: self.path });\n                $(watch)\n                    .on(\"close\", function(ev, data) {\n                        $(watch).off();\n                        if (!data.problem || data.problem == \"not-found\") {\n                            watch = null; /* Watch again */\n                        } else {\n                            console.warn(\"couldn't watch \" + self.path + \": \" + (data.message || data.problem));\n                            watch = false; /* Don't watch again */\n                        }\n                    })\n                    .on(\"message\", function(ev, payload) {\n                        var item = JSON.parse(payload);\n                        var name = item.path;\n                        if (name && name.indexOf(\"/\") === -1 && name.slice(-4) === \".pub\") {\n                            if (item.event === \"present\" ||item.event === \"created\" ||\n                                item.event === \"changed\" || item.event === \"deleted\") {\n                                window.clearInterval(timeout);\n                                timeout = window.setTimeout(refresh, 100);\n                            }\n                        }\n                    });\n            }\n\n            if (proc)\n                return;\n\n            window.clearTimeout(timeout);\n            timeout = null;\n\n            proc = cockpit.script(lister, [ self.path ], { err: \"message\" })\n                .always(function() {\n                    proc = null;\n\n                    if (!timeout)\n                        timeout = window.setTimeout(refresh, 5000);\n                })\n                .done(function(data) {\n                    process(data);\n                })\n                .fail(function(ex) {\n                    console.warn(\"failed to list keys in home directory: \" + ex.message);\n                });\n        }\n\n        function process(data) {\n            var blocks = data.split('\\v');\n            var key, items = { };\n\n            /* First block is the data from ssh agent */\n            blocks[0].trim().split(\"\\n\").forEach(function(line) {\n                key = parse_key(line, items);\n                if (key)\n                    key.loaded = true;\n            });\n\n            /* Next come individual triples of blocks */\n            blocks.slice(1).forEach(function(block, i) {\n                switch(i % 3) {\n                case 0:\n                    key = parse_key(block, items);\n                    break;\n                case 1:\n                    if (key) {\n                        block = block.trim();\n                        if (block.slice(-4) === \".pub\")\n                            key.name = block.slice(0, -4);\n                        else\n                            key.name = block;\n                    }\n                    break;\n                case 2:\n                    if (key)\n                        parse_info(block, key);\n                    break;\n                }\n            });\n\n            self.items = items;\n            $(self).triggerHandler(\"changed\");\n        }\n\n        function parse_key(line, items) {\n            var parts = line.trim().split(\" \");\n            var id, type, comment;\n\n            /* SSHv1 keys */\n            if (!isNaN(parseInt(parts[0], 10))) {\n                id = parts[2];\n                type = \"RSA1\";\n                comment = parts.slice(3).join(\" \");\n\n            } else if (parts[0].indexOf(\"ssh-\") === 0) {\n                id = parts[1];\n                type = parts[0].substring(4).toUpperCase();\n                comment = parts.slice(2).join(\" \");\n            } else if (parts[0].indexOf(\"ecdsa-\") === 0) {\n                id = parts[1];\n                type = \"ECDSA\";\n                comment = parts.slice(2).join(\" \");\n            } else {\n                return;\n            }\n\n            var key = items[id];\n            if (!key)\n                key = items[id] = { };\n\n            key.type = type;\n            key.comment = comment;\n            key.data = line;\n            return key;\n        }\n\n        function parse_info(line, key) {\n            var parts = line.trim().split(\" \");\n\n            key.size = parseInt(parts[0], 10);\n            if (isNaN(key.size))\n                key.size = null;\n\n            key.fingerprint = parts[1];\n        }\n\n        self.change = function change(name, old_pass, new_pass, two_pass) {\n            var old_exps = [ /.*Enter old passphrase: $/ ];\n            var new_exps = [ /.*Enter new passphrase.*/, /.*Enter same passphrase again: $/ ];\n            var bad_exps = [ /.*failed: passphrase is too short.*/ ];\n\n            var dfd = $.Deferred();\n            var buffer = \"\";\n            var sent_new = false;\n            var failure = _(\"No such file or directory\");\n            var i;\n\n            if (new_pass !== two_pass) {\n                dfd.reject(new Error(_(\"The passwords do not match.\")));\n                return dfd.promise();\n            }\n\n            var proc;\n            var timeout = window.setTimeout(function() {\n                failure = _(\"Prompting via ssh-keygen timed out\");\n                proc.close(\"terminated\");\n            }, 10 * 1000);\n\n            proc = cockpit.spawn([\"ssh-keygen\", \"-p\", \"-f\", name],\n                    { pty: true, environ: [ \"LC_ALL=C\" ], err: \"out\", directory: self.path })\n                .always(function() {\n                    window.clearInterval(timeout);\n                })\n                .done(function() {\n                    dfd.resolve();\n                })\n                .fail(function(ex) {\n                    if (ex.constructor.name == \"ProcessError\")\n                        ex = new Error(failure);\n                    dfd.reject(ex);\n                })\n                .stream(function(data) {\n                    buffer += data;\n                    for (i = 0; i < old_exps.length; i++) {\n                        if (old_exps[i].test(buffer)) {\n                            buffer = \"\";\n                            failure = _(\"Old password not accepted\");\n                            this.input(old_pass + \"\\n\", true);\n                            return;\n                        }\n                    }\n\n                    for (i = 0; i < new_exps.length; i++) {\n                        if (new_exps[i].test(buffer)) {\n                            buffer = \"\";\n                            this.input(new_pass + \"\\n\", true);\n                            failure = _(\"Failed to change password\");\n                            sent_new = true;\n                            return;\n                        }\n                    }\n\n                    for (i = 0; sent_new && i < bad_exps.length; i++) {\n                        if (bad_exps[i].test(buffer)) {\n                            failure = _(\"New password was not accepted\");\n                            return;\n                        }\n                    }\n                });\n\n            return dfd.promise();\n        };\n\n        self.load = function(name, password) {\n            var ask_exp =  /.*Enter passphrase for .*/;\n            var perm_exp = /.*UNPROTECTED PRIVATE KEY FILE.*/;\n            var bad_exp = /.*Bad passphrase.*/;\n\n            var dfd = $.Deferred();\n            var buffer = \"\";\n            var output = \"\";\n            var failure = _(\"Not a valid private key\");\n\n            var proc;\n            var timeout = window.setTimeout(function() {\n                failure = _(\"Prompting via ssh-add timed out\");\n                proc.close(\"terminated\");\n            }, 10 * 1000);\n\n            proc = cockpit.spawn([\"ssh-add\", name],\n                    { pty: true, environ: [ \"LC_ALL=C\" ], err: \"out\", directory: self.path })\n                .always(function() {\n                    window.clearInterval(timeout);\n                })\n                .done(function() {\n                    refresh();\n                    dfd.resolve();\n                })\n                .fail(function(ex) {\n                    console.log(output);\n                    if (ex.constructor.name == \"ProcessError\")\n                        ex = new Error(failure);\n                    dfd.reject(ex);\n                })\n                .stream(function(data) {\n                    buffer += data;\n                    output += data;\n                    if (perm_exp.test(buffer)) {\n                        failure = _(\"Invalid file permissions\");\n                        buffer = \"\";\n                    } else if (ask_exp.test(buffer)) {\n                        buffer = \"\";\n                        failure = _(\"Password not accepted\");\n                        this.input(password + \"\\n\", true);\n                    } else if (bad_exp.test(buffer)) {\n                        buffer = \"\";\n                        this.input(\"\\n\", true);\n                    }\n                });\n\n            return dfd.promise();\n        };\n\n        self.unload = function unload(name) {\n            return cockpit.spawn([\"ssh-add\", \"-d\", name],\n                    { pty: true, err: \"message\", directory: self.path })\n                .done(refresh);\n        };\n\n        self.close = function close() {\n            if (watch)\n                watch.close();\n            if (proc)\n                proc.close();\n            window.clearTimeout(timeout);\n            timeout = null;\n        };\n    }\n\n    function setup() {\n        var keys;\n\n        /* The button to deauthorize cockpit */\n        $(\"#credential-authorize button\").on(\"click\", function(ev) {\n            cockpit.drop_privileges(false);\n            ev.preventDefault();\n        });\n\n        $(\"#credentials-dialog\")\n\n            /* Show and hide panels */\n            .on(\"click\", \"tr.listing-ct-item\", function(ev) {\n                var body;\n                if ($(ev.target).parents(\".listing-ct-actions, ul\").length === 0) {\n                    body = $(ev.target).parents(\"tbody\");\n                    body.toggleClass(\"open\").removeClass(\"unlock\");\n                    body.find(\".alert\").hide();\n                }\n            })\n\n            /* Highlighting */\n            .on(\"mouseenter\", \".listing-ct-item\", function(ev) {\n                $(ev.target).parents(\"tbody\").find(\".listing-ct-item\").addClass(\"highlight-ct\");\n            })\n            .on(\"mouseleave\", \".listing-ct-item\", function(ev) {\n                $(ev.target).parents(\"tbody\").find(\".listing-ct-item\").removeClass(\"highlight-ct\");\n            })\n\n            /* Load and unload keys */\n            .on(\"change\", \".btn-group\", function(ev) {\n                var body = $(this).parents(\"tbody\");\n                var id = body.attr(\"data-id\");\n                var key = keys.items[id];\n                if (!key || !key.name)\n                    return;\n\n                var value = $(this).onoff(\"value\");\n\n                /* Key needs to be loaded, show load UI */\n                if (value && !key.loaded) {\n                    body.addClass(\"open\").addClass(\"unlock\");\n\n                /* Key needs to be unloaded, do that directly */\n                } else if (!value && key.loaded) {\n                    keys.unload(key.name)\n                        .done(function(ex) {\n                            body.removeClass(\"open\");\n                        })\n                        .fail(function(ex) {\n                            body.addClass(\"open\").removeClass(\"unlock\");\n                            body.find(\".alert\").show().find(\".credential-alert\").text(ex.message);\n                        });\n                }\n            })\n\n            /* Load key */\n            .on(\"click\", \".credential-unlock button\", function(ev) {\n                var body = $(this).parents(\"tbody\");\n                var id = body.attr(\"data-id\");\n                var key = keys.items[id];\n                if (!key || !key.name)\n                    return;\n\n                body.find(\"input button\").prop(\"disabled\", true);\n\n                var password = body.find(\".credential-password\").val();\n                keys.load(key.name, password)\n                    .always(function(ex) {\n                        body.find(\"input button\").prop(\"disabled\", false);\n                    })\n                    .done(function(ex) {\n                        body.find(\".credential-password\").val(\"\");\n                        body.removeClass(\"unlock\");\n                        body.find(\".alert\").hide();\n                    })\n                    .fail(function(ex) {\n                        body.find(\".alert\").show().find(\"span\").text(ex.message);\n                        console.warn(\"loading key failed: \", ex.message);\n                    });\n            })\n\n            /* Change key */\n            .on(\"click\", \".credential-change\", function(ev) {\n                var body = $(this).parents(\"tbody\");\n                var id = body.attr(\"data-id\");\n                var key = keys.items[id];\n                if (!key || !key.name)\n                    return;\n\n                body.find(\"input button\").prop(\"disabled\", true);\n\n                var old_pass = body.find(\".credential-old\").val();\n                var new_pass = body.find(\".credential-new\").val();\n                var two_pass = body.find(\".credential-two\").val();\n                if (old_pass === undefined || new_pass === undefined || two_pass === undefined)\n                    throw \"invalid password fields\";\n\n                keys.change(key.name, old_pass, new_pass, two_pass)\n                    .always(function(ex) {\n                        body.find(\"input button\").prop(\"disabled\", false);\n                    })\n                    .done(function() {\n                        body.find(\".credential-old\").val(\"\");\n                        body.find(\".credential-new\").val(\"\");\n                        body.find(\".credential-two\").val(\"\");\n                        body.find(\"li a\").first().click();\n                    })\n                    .fail(function(ex) {\n                        body.find(\".alert\").show().find(\"span\").text(ex.message);\n                    });\n            })\n\n            .on(\"change keypress\", \"input\", function(ev) {\n                var body = $(this).parents(\"tbody\");\n                if (ev.type == \"keypress\" && ev.keyCode == 13)\n                    $(this).parents(\"dl\").find(\".btn-primary\").click();\n                body.find(\".alert\").hide();\n            })\n\n            /* Change tabs */\n            .on(\"click\", \"tr.credential-panel ul > li > a\", function() {\n                var li = $(this).parent();\n                var index = li.index();\n                li.parent().children().removeClass(\"active\");\n                li.addClass(\"active\");\n                var body = $(this).parents(\"tbody\");\n                body.find(\".credential-tab\").hide().eq(index).show();\n                body.find(\".alert\").hide();\n            })\n\n            /* Popover help */\n            .on(\"click\", \"[data-toggle='popover']\", function() {\n                $(this).popover('toggle');\n            })\n\n            /* Dialog is hidden */\n            .on(\"hide.bs.modal\", function() {\n                if (keys) {\n                    $(keys).off();\n                    keys.close();\n                    keys = null;\n                }\n            })\n\n            /* Dialog is shown */\n            .on(\"show.bs.modal\", function() {\n                keys = new Keys();\n                $(\"#credential-keys\").toggleClass(\"hidden\",\n                                                  $.isEmptyObject(keys.items));\n\n                $(keys).on(\"changed\", function() {\n                    var key, id, row, rows = { };\n                    var table = $(\"#credentials-dialog table.credential-listing\");\n\n                    table.find(\"tbody[data-id]\").each(function(i, el) {\n                        row = $(el);\n                        rows[row.attr(\"data-id\")] = row;\n                    });\n\n                    var body = table.find(\"tbody\").first();\n                    for (id in keys.items) {\n                        if (!(id in rows)) {\n                            row = rows[id] = body.clone();\n                            row.attr(\"data-id\", id)\n                                .show()\n                                .onoff();\n                            table.append(row);\n                        }\n                    }\n\n                    function text(row, field, string) {\n                        var sel = row.find(field);\n                        string = string || \"\";\n                        if (sel.text() !== string)\n                            sel.text(string);\n                    }\n\n                    for (id in rows) {\n                        row = rows[id];\n                        key = keys.items[id];\n                        if (key) {\n                            text(row, \".credential-label\", key.name || key.comment);\n                            text(row, \".credential-type\", key.type);\n                            text(row, \".credential-fingerprint\", key.fingerprint);\n                            text(row, \".credential-comment\", key.comment);\n                            text(row, \".credential-data\", key.data);\n                            row.attr(\"data-name\", key.name)\n                                .attr(\"data-loaded\", key.loaded ? \"1\" : \"0\")\n                                .find(\".btn-onoff-ct\")\n                                    .onoff(\"value\", key.loaded || row.hasClass(\"unlock\"))\n                                    .onoff(\"disabled\", !key.name);\n                        } else {\n                            row.remove();\n                        }\n                        $(\"#credential-keys\").toggleClass(\"hidden\",\n                                                          $.isEmptyObject(keys.items));\n                    }\n                });\n            });\n        }\n\n    module.exports = {\n        keys_instance: function () {\n            return new Keys();\n        },\n        setup: setup\n    };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/credentials.js\n// module id = 5\n// module chunks = 0 2","'use strict';\n\n// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/process/browser.js\n// module id = 6\n// module chunks = 0 2","'use strict';\n\n(function() {\n    \"use strict\";\n\n    var $ = require('jquery');\n    var cockpit = require('cockpit');\n\n    var unique_number = 0;\n    function unique() {\n        unique_number += 1;\n        return \"unique\" + -(new Date()) + -unique_number;\n    }\n\n    /* Dialog Patterns */\n\n    function clear_errors(sel) {\n        sel.find(\".dialog-error\").remove();\n        sel.find(\".has-error\").removeClass(\"has-error\");\n        sel.find(\".dialog-wrapper\").off(\".dialog-error\");\n        sel.off(\".dialog-error\");\n    }\n\n    function field_error(target, error) {\n        var wrapper = target.parent();\n        var next, refresh;\n\n        if (!wrapper.is(\".dialog-wrapper\")) {\n            wrapper = $(\"<div class='dialog-wrapper'>\").insertBefore(target);\n\n            /*\n             * Some bootstrap plugins replace html controls with their own\n             * stuff, so we have to account for that here.\n             */\n\n            next = target.next();\n            if (next.is(\".bootstrap-select\") && next.selectpicker) {\n                next.remove();\n                refresh = next.selectpicker;\n            }\n\n            target.remove().appendTo(wrapper);\n\n            if (refresh)\n                refresh.call(target);\n        }\n\n        var message;\n        if (error.message)\n            message = $(\"<div class='dialog-error help-block'>\").text(error.message);\n        wrapper.addClass(\"has-error\").append(message);\n\n        if (!wrapper.hasClass(\"error-keep\")) {\n            wrapper.on(\"keypress.dialog-error change.dialog-error\", function() {\n                wrapper.removeClass(\"has-error\")\n                    .find(\".dialog-error.help-block\").css(\"visibility\", \"hidden\");\n            });\n        }\n    }\n\n    function global_error(sel, error) {\n        var alert = $(\"<div class='alert alert-danger dialog-error'>\");\n        var text = error.message || error.toString();\n        alert.text(text);\n        $(\"<span class='fa fa-exclamation-triangle'>\").prependTo(alert);\n\n        /* Always log global dialog errors for easier debugging */\n        console.warn(text);\n\n        var footer = sel.find(\".modal-footer\");\n        if (footer.length)\n            alert.prependTo(footer);\n        else\n            alert.appendTo(sel);\n    }\n\n    function display_errors(sel, errors) {\n        clear_errors(sel);\n\n        /* The list of errors can also be passed as an array */\n        if (errors.length == 1 && $.isArray(errors[0]))\n            errors = errors[0];\n\n        var any = false;\n        errors.forEach(function(error) {\n            var target;\n            if (error) {\n                target = sel.find(error.target);\n\n                /* Errors for a specific field added below that field */\n                if (target && target.length)\n                    field_error(target, error);\n                else\n                    global_error(sel, error);\n\n                any = true;\n            }\n        });\n\n        if (!any)\n            return;\n\n        /* When dialog is shown again, remove all mods */\n        sel.on(\"show.bs.modal.dialog-error\", function() {\n            clear_errors(sel);\n        });\n    }\n\n    function DialogWait(promise, handle) {\n        this.promise = promise;\n        this.disabled = [];\n        this.handle = handle;\n    }\n\n    function clear_wait(sel) {\n        var data = sel.data(\"dialog-wait\");\n        sel.data(\"dialog-wait\", null);\n\n        sel.find(\".dialog-wait-ct\").remove();\n        sel.find(\".btn\").off(\".dialog-wait\");\n        sel.off(\".dialog-wait\");\n\n        if (data) {\n            data.disabled.forEach(function(ctl) {\n                ctl.removeAttr(\"disabled\");\n            });\n        }\n    }\n\n    function display_wait(sel, promise, handle) {\n        clear_wait(sel);\n\n        if (!promise) {\n            if (handle)\n                sel.modal(\"hide\");\n            return sel;\n        }\n\n        /* Clear all errors in the dialog */\n        if (handle)\n            display_errors(sel, []);\n\n        var wait = $(\"<div class='dialog-wait-ct pull-left'>\");\n        $(\"<div class='spinner spinner-sm'>\").appendTo(wait);\n        var message = $(\"<span>\").appendTo(wait);\n\n        sel.find(\".modal-footer button\").first().before(wait);\n\n        var data = new DialogWait(promise, handle);\n        sel.data(\"dialog-wait\", data);\n\n        var cancellation = promise.cancel || promise.close;\n        var cancelled = false;\n\n        /* Disable everything and stash previous disabled state */\n        var controls = sel.find(\".form-control\").add(\".btn\", sel);\n        if (cancellation)\n            controls = controls.not(\"[data-dismiss]\").not(\".btn-cancel\");\n        controls.each(function() {\n            var ctl = $(this);\n            if (!ctl.attr(\"disabled\")) {\n                data.disabled.push(ctl);\n                ctl.attr(\"disabled\", \"disabled\");\n            }\n        });\n\n        sel.find(\".btn[data-dismiss], .btn-cancel\").on(\"click.dialog-wait\", function() {\n            cancelled = true;\n            if (cancellation)\n                cancellation.apply(promise);\n            return false;\n        });\n\n        /* When dialog is shown again, remove all mods */\n        sel.on(\"hide.bs.modal.dialog-wait\", function() {\n            clear_wait(sel);\n        });\n\n        /*\n         * There is no way to remove a callback from a promise\n         * so we have to be careful to only react if still\n         * processing the same promise.\n         */\n        function restore() {\n            var state, data = sel.data(\"dialog-wait\");\n            if (data && data.promise === promise) {\n                clear_wait(sel);\n                state = promise.state();\n                if (cancelled || (state == \"resolved\" && data.handle))\n                    sel.modal('hide');\n                else if (state == \"rejected\" && data.handle)\n                    display_errors(sel, [ arguments[0] ]);\n            }\n        }\n\n        function update(arg) {\n            var data = sel.data(\"dialog-wait\");\n            if (data && data.promise === promise) {\n                if (typeof arg !== \"string\")\n                    arg = \"\";\n                message.text(arg);\n            }\n        }\n\n        promise\n            .always(restore)\n            .progress(update);\n\n        return sel;\n    }\n\n    $.fn.dialog = function dialog(action /* ... */) {\n        if (action === \"failure\")\n            return display_errors(this, Array.prototype.slice.call(arguments, 1));\n        else if (action === \"wait\")\n            return display_wait(this, arguments[1]);\n        else if (action === \"promise\")\n            return display_wait(this, arguments[1], true);\n        else\n            console.warn(\"unknown dialog action: \" + action);\n    };\n\n    window.addEventListener(\"hashchange\", function() {\n        $(\".modal\").modal(\"hide\");\n    });\n\n    /*\n     * OnOff switch pattern\n     */\n\n    function onoff_refresh(sel) {\n        /* During testing, no Cockpit dependency */\n        var _ = cockpit.gettext || function(x) { return x; };\n\n        sel = sel.find(\".btn-onoff-ct\").andSelf().filter(\".btn-onoff-ct\");\n        sel.each(function(x, el) {\n            var self = $(el)\n                .attr(\"data-toggle\", \"buttons\")\n                .addClass(\"btn-group\");\n            var value = self.onoff(\"value\");\n            var buttons = self.find(\".btn\");\n            var name = self.find(\"input\").first().attr(\"name\") || unique();\n            var i, input, text;\n            for (i = buttons.length; i < 2; i++) {\n                input = $('<input type=\"radio\" autocomplete=\"off\">');\n                text = document.createTextNode(i === 0 ? _(\"On\") : _(\"Off\"));\n                self.append($('<label class=\"btn\">').append(input, text));\n                buttons = null;\n            }\n            buttons = buttons || self.find(\".btn\");\n            buttons.find(\"input\").attr(\"name\", name);\n            onoff_change(self, !!value);\n        });\n        return sel;\n    }\n\n    function onoff_value(sel) {\n        return sel.find(\".btn\").first().hasClass(\"active\");\n    }\n\n    function onoff_change(sel, value) {\n        return sel.each(function(i, el) {\n            var buttons = $(el).find(\".btn\");\n            buttons.first().toggleClass(\"active\", !!value).find(\"input\").prop(\"checked\", !!value);\n            buttons.last().toggleClass(\"active\", !value).find(\"input\").prop(\"checked\", !value);\n        });\n    }\n\n    $.fn.onoff = function onoff(action /* ... */) {\n        if (arguments.length === 0 || action == \"refresh\") {\n            return onoff_refresh(this);\n        } else if (action === \"value\") {\n            if (arguments.length === 1)\n                return onoff_value(this);\n            else\n                return onoff_change(this, arguments[1]);\n        } else if (action == \"disabled\") {\n            return this.find(\".btn\").toggleClass(\"disabled\", arguments[1]);\n        } else {\n            console.warn(\"unknown switch action: \" + action);\n        }\n    };\n\n    /* ----------------------------------------------------------------------------\n     * Sliders\n     *\n     * <div class=\"slider\" value=\"0.5\">\n     *    <div class=\"slider-bar\">\n     *        <div class=\"slider-thumb\"></div>\n     *    </div>\n     *    <div class=\"slider-bar\">\n     *        <!-- optional left overs -->\n     *    </div>\n     * </div>\n     *\n     * A slider control. The first div.slider-bar is the one that is resized.\n     * The value will be bounded between 0 and 1 as a floating point number.\n     *\n     * The following div.slider-bar if present is resized to fill the remainder\n     * of the slider if not given a specific size. You can put more div.slider-bar\n     * inside it to reflect squashing other prevous allocations.\n     *\n     * If the following div.slider-bar have a width specified, then the\n     * slider supports the concept of overflowing. If the slider overflows\n     * it will get the .slider-warning class and go a bit red.\n     *\n     * On document creation any div.slider are automatically turned into\n     * Bar graphs.\n     *\n     * Slider has the following extra read/write properties:\n     *\n     * .value: the floating point value the slider is set to.\n     * .disabled: whether to display slider as disabled and refuse interacton.\n     *\n     * Slider has this event:\n     *\n     * on('change'): fired when the slider changes, passes value as additional arg.\n     */\n\n    function resize_flex(slider, flex, total, part) {\n        var value = 0;\n        if (part > total)\n            value = 1;\n        else if (part < 0 || isNaN(part))\n            value = 0;\n        else if (!isNaN(total) && total > 0 && part >= 0)\n            value = (part / total);\n        $(flex).css('width', (value * 100) + \"%\").\n            next(\"div\").css('margin-left', $(flex).css('width'));\n\n        /* Set the property and the attribute */\n        slider.value = value;\n    }\n\n    function update_value(slider) {\n        resize_flex(slider, $(slider).children(\"div.slider-bar\").first()[0], 1, slider.value);\n    }\n\n    function check_overflow(slider) {\n        $(slider).toggleClass(\"slider-warning\",\n                              slider.offsetWidth < slider.scrollWidth);\n    }\n\n    function setup_slider(slider) {\n        $(slider).attr('unselectable', 'on');\n\n        Object.defineProperty(slider, \"value\", {\n            get: function() {\n                return parseFloat(this.getAttribute(\"value\"));\n            },\n            set: function(v) {\n                var s = String(v);\n                if (s != this.getAttribute(\"value\"))\n                    this.setAttribute(\"value\", v);\n            }\n        });\n\n        Object.defineProperty(slider, \"disabled\", {\n            get: function() {\n                if (!this.hasAttribute(\"disabled\"))\n                    return false;\n                return this.getAttribute(\"disabled\").toLowerCase() != \"false\";\n            },\n            set: function(v) {\n                this.setAttribute(\"disabled\", v ? \"true\" : \"false\");\n            }\n        });\n\n        update_value(slider);\n        check_overflow(slider);\n\n        $(slider).on(\"change\", function() {\n            update_value(slider);\n            $(slider).toggleClass(\"slider-disabled\", slider.disabled);\n        });\n\n        if (slider.disabled)\n            $(slider).addClass(\"slider-disabled\");\n\n        $(slider).on(\"mousedown\", function(ev) {\n            if (slider.disabled)\n                return true; /* default action */\n            var flex;\n            var offset = $(slider).offset().left;\n            if ($(ev.target).hasClass(\"slider-thumb\")) {\n                var hitx  = (ev.offsetX || ev.clientX - $(ev.target).offset().left);\n                offset += (hitx - $(ev.target).outerWidth() / 2);\n                flex = $(ev.target).parent()[0];\n            } else {\n                flex = $(slider).children(\"div.slider-bar\").first()[0];\n                resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n                $(slider).trigger(\"change\", [slider.value]);\n                check_overflow(slider);\n            }\n\n            $(document).\n                on(\"mousemove.slider\", function(ev) {\n                    resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n                    $(slider).trigger(\"change\", [slider.value]);\n                    check_overflow(slider);\n                    return false;\n                }).\n                on(\"mouseup.slider\", function(ev) {\n                    $(document).\n                        off(\"mousemove.slider\").\n                        off(\"mouseup.slider\");\n                    return false;\n                });\n            return false; /* no default action */\n        });\n    }\n\n    function setup_sliders() {\n        $(\"div.slider\").each(function() {\n            setup_slider(this);\n        });\n    }\n\n    $.fn.slider = function Slider(action) {\n        var sel = this;\n        if (arguments.length === 0 || action == \"refresh\") {\n            sel.each(function() {\n                setup_slider(this);\n            });\n            return sel;\n        } else {\n            console.warn(\"unknown slider action: \" + action);\n        }\n    };\n\n    $(document).ready(setup_sliders);\n\n    /* -----------------------------------------------------------------------------\n     * Privileged UI actions.\n     */\n\n    // placement is optional, \"top\", \"left\", \"bottom\", \"right\"\n    $.fn.update_privileged = function update_privileged(perm, denied_message, placement) {\n        var allowed = (perm.allowed !== false);\n        var selector = this;\n\n        selector.each(function() {\n            // preserve old title first time to use when allowed\n            // activate tooltip\n            var allowed_key = 'allowed-title';\n            if (typeof $(this).data(allowed_key) === 'undefined' ||\n                   $(this).data(allowed_key) === false)\n                $(this).data(allowed_key, $(this).attr('title') || \"\");\n\n            var options = { html: true };\n            if (placement)\n                options['placement'] = placement;\n\n            $(this).tooltip(options);\n\n            if ($(this).hasClass(\"disabled\") === allowed) {\n              $(this).toggleClass(\"disabled\", !allowed)\n                   .attr('data-original-title', null);\n\n              if (allowed)\n                  $(this).attr('title', $(this).data(allowed_key));\n              else\n                  $(this).attr('title', denied_message);\n              $(this).tooltip('fixTitle');\n            }\n        });\n\n        return selector;\n    };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/patterns.js\n// module id = 11\n// module chunks = 0 2","module.exports = \"#!/bin/sh\\n\\nset -eu\\n\\n# The first thing we do is list loaded keys\\nssh-add -L || true\\n\\n# Try to list keys in this directory\\ncd \\\"$1\\\" || exit 0\\n\\n# After that each .pub file gets its on set of blocks\\nfor file in *.pub; do\\n    printf \\\"\\\\v\\\"\\n    cat \\\"$file\\\"\\n    printf \\\"\\\\v%s\\\\v\\\" \\\"$file\\\"\\n    ssh-keygen -l -f \\\"$file\\\" || true\\ndone\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/lib/credentials-ssh-private-keys.sh\n// module id = 12\n// module chunks = 0 2","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2015 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    var $ = require(\"jquery\");\n    var cockpit = require(\"cockpit\");\n\n    var mustache = require(\"mustache\");\n\n    var machines = require(\"machines\");\n    var credentials = require(\"credentials\");\n\n    var add_tmpl = require(\"raw!machine-add.html\");\n    var auth_failed_tmpl = require(\"raw!machine-auth-failed.html\");\n    var change_auth_tmpl = require(\"raw!machine-change-auth.html\");\n    var change_port_tmpl = require(\"raw!machine-change-port.html\");\n    var color_picker_tmpl = require(\"raw!machine-color-picker.html\");\n    var invalid_hostkey_tmpl = require(\"raw!machine-invalid-hostkey.html\");\n    var not_supported_tmpl = require(\"raw!machine-not-supported.html\");\n    var sync_users_tmpl = require(\"raw!machine-sync-users.html\");\n    var unknown_hosts_tmpl = require(\"raw!machine-unknown-hostkey.html\");\n\n    var _ = cockpit.gettext;\n\n    var default_codes = {\n        \"no-cockpit\": \"not-supported\",\n        \"not-supported\": \"not-supported\",\n        \"protocol-error\": \"not-supported\",\n        \"authentication-not-supported\": \"change-auth\",\n        \"authentication-failed\": \"change-auth\",\n        \"no-forwarding\": \"change-auth\",\n        \"unknown-hostkey\": \"unknown-hostkey\",\n        \"invalid-hostkey\": \"invalid-hostkey\",\n        \"not-found\": \"add-machine\",\n        \"sync-users\": \"sync-users\"\n    };\n\n    function translate_and_init(tmpl) {\n        var tmp = $(\"<div>\").append(tmpl);\n        tmp.find(\"[translatable=\\\"yes\\\"]\").each(function(i, e) {\n            var old = e.outerHTML;\n            var translated = cockpit.gettext(e.getAttribute(\"context\"), $(e).text());\n            $(e).removeAttr(\"translatable\").text(translated);\n            tmpl = tmpl.replace(old, e.outerHTML);\n        });\n        mustache.parse(tmpl);\n        return tmpl;\n    }\n\n    var templates = {\n        \"add-machine\" : translate_and_init(add_tmpl),\n        \"auth-failed\" : translate_and_init(auth_failed_tmpl),\n        \"change-auth\" : translate_and_init(change_auth_tmpl),\n        \"change-port\" : translate_and_init(change_port_tmpl),\n        \"color-picker\" : translate_and_init(color_picker_tmpl),\n        \"invalid-hostkey\" : translate_and_init(invalid_hostkey_tmpl),\n        \"not-supported\" : translate_and_init(not_supported_tmpl),\n        \"sync-users\" : translate_and_init(sync_users_tmpl),\n        \"unknown-hostkey\" : translate_and_init(unknown_hosts_tmpl)\n    };\n\n    function full_address(machines_ins, address) {\n        var machine = machines_ins.lookup(address);\n        if (machine && machine.address != \"localhost\")\n            return machine.connection_string;\n\n        return address;\n    }\n\n    function Dialog(selector, address, machines_ins, codes) {\n        var self = this;\n\n        self.machines_ins = machines_ins;\n        self.codes = codes;\n        self.address = full_address(self.machines_ins, address);\n\n        var promise_callback = null;\n\n        var success_callback = null;\n\n        var current_template = null;\n        var current_instance = null;\n\n        function address_or_label() {\n            var machine = self.machines_ins.lookup(self.address);\n            var host = self.machines_ins.split_connection_string(self.address).address;\n            if (machine && machine.label)\n                host = machine.label;\n            return host;\n        }\n\n        function change_content(template, error_options) {\n            var old_instance = current_instance;\n\n            if (current_template === template)\n                return;\n\n            if (template == \"add-machine\")\n                current_instance = new AddMachine(self);\n            else if (template == \"sync-users\")\n                current_instance = new SyncUsers(self);\n            else if (template == \"unknown-hostkey\")\n                current_instance = new HostKey(self, template);\n            else if (template == \"invalid-hostkey\")\n                current_instance = new HostKey(self, template);\n            else if (template == \"change-auth\")\n                current_instance = new ChangeAuth(self);\n            else if (template == \"change-port\")\n                current_instance = new MachinePort(self);\n            else\n                current_instance = new Simple(self);\n\n            current_template = template;\n            current_instance.load(error_options);\n\n            if (old_instance && old_instance.close)\n                old_instance.close();\n            old_instance = null;\n        }\n\n        self.try_to_connect = function(address, options) {\n            var dfd = $.Deferred();\n            var conn_options = $.extend({ \"payload\": \"echo\",\n                                          \"host\": address },\n                                        options);\n\n            var machine = self.machines_ins.lookup(address);\n            if (machine && machine.host_key && !machine.on_disk) {\n                conn_options['temp-session'] = false; /* Compatiblity option */\n                conn_options['session'] = 'shared';\n                conn_options['host-key'] = machine.host_key;\n            }\n            var client = cockpit.channel(conn_options);\n            client.send(\"x\");\n            $(client)\n               .on(\"message\", function() {\n                    $(client).off();\n                    client.close();\n                    dfd.resolve();\n                })\n                .on(\"close\", function(event, options) {\n                    dfd.reject(options);\n                });\n\n            return dfd.promise();\n        };\n\n        self.get_sel = function(child_selector) {\n            var ret_txt = selector;\n            if (child_selector)\n                ret_txt = ret_txt + \" \" + child_selector;\n            return $(ret_txt);\n        };\n\n        self.set_on_success = function (callback) {\n            success_callback = callback;\n        };\n\n        self.set_goal = function (callback) {\n            promise_callback = callback;\n        };\n\n        self.complete = function(val) {\n            if (success_callback)\n                success_callback(val);\n            else\n                $(selector).modal('hide');\n        };\n\n        self.render = function render(data, template) {\n            if (!template)\n                template = current_template;\n\n            var address_data = self.machines_ins.split_connection_string(self.address);\n            var context = $.extend({\n                'host' : address_or_label(),\n                'full_address' : self.address,\n                'context_title' : self.context_title,\n                'strong' : function() {\n                    return function(text, render) {\n                        return \"<strong>\" + render(text) + \"</strong>\";\n                    };\n                }\n            }, data, address_data);\n\n            var output = $(mustache.render(templates[template], context));\n            cockpit.translate(output);\n            self.get_sel(\".modal-content\").html(output);\n        };\n\n        self.render_error = function render_error(error) {\n            var template;\n            if (error.problem && error.command == \"close\")\n                template = self.codes[error.problem];\n\n            if (template && current_template !== template)\n                change_content(template, error);\n            else\n                $(selector).dialog(\"failure\", cockpit.message(error));\n        };\n\n        self.render_template = function render_template(template) {\n            change_content(template);\n        };\n\n        self.show = function () {\n            var sel = self.get_sel();\n            sel.on('hide.bs.modal', function () {\n                self.get_sel(\".model-content\").empty();\n            });\n            sel.modal('show');\n        };\n\n        self.run = function (promise, failure_callback) {\n            var dialog_dfd = $.Deferred();\n            var promise_funcs = [];\n\n            function next(i) {\n                promise_funcs[i]()\n                    .done(function(val) {\n                        i = i + 1;\n                        if (i < promise_funcs.length) {\n                            next(i);\n                        } else {\n                            dialog_dfd.resolve();\n                            self.complete(val);\n                        }\n                    })\n                    .fail(function(ex) {\n                        if (failure_callback)\n                            failure_callback(ex);\n                        else\n                            self.render_error(ex);\n                        dialog_dfd.reject(ex);\n                    });\n            }\n\n            promise_funcs.push(function() {\n                return promise;\n            });\n\n            self.get_sel().dialog(\"wait\", dialog_dfd.promise());\n            if (promise_callback)\n                promise_funcs.push(promise_callback);\n\n            next(0);\n        };\n    }\n\n    function is_method_supported(methods, method) {\n        var result = methods[method];\n        return result ? result != \"no-server-support\" : false;\n    }\n\n    function can_try_method(methods, method) {\n        if (is_method_supported(methods, method))\n            return method == 'password' || methods[method] != \"not-provided\";\n        return false;\n    }\n\n    function MachineColorPicker(machines_ins) {\n        var self = this;\n\n        self.render = function(selector, address, selected_color) {\n            var machine;\n\n            if (address && !selected_color) {\n                machine = machines_ins.lookup(address);\n                if (machine)\n                    selected_color = machine.color;\n            }\n\n            if (!selected_color)\n                selected_color = machines_ins.unused_color();\n\n            var part, colors = [];\n            for (var i = 0; i < machines.colors.length; i += 6) {\n                part = machines.colors.slice(i, i+6);\n                colors.push({\"list\" : part});\n            }\n\n            var text = mustache.render(templates[\"color-picker\"], { 'colors' : colors, });\n            $(selector).html(text);\n\n            $(\"#host-edit-color\", selector).css(\"background-color\", selected_color);\n            $(\".color-cell\", selector).each(function(index) {\n                $(this).css(\"background-color\", machines.colors[index]);\n            });\n\n            $('#host-edit-color-popover .popover-content .color-cell', selector)\n                .click(function() {\n                    var color = $(this).css('background-color');\n                    $('#host-edit-color', selector).css('background-color', color);\n                });\n\n            $(\"#host-edit-color\", selector).parent().\n                on('show.bs.dropdown', function () {\n                    var $div = $('#host-edit-color', selector);\n                    var $pop = $('#host-edit-color-popover', selector);\n                    var div_pos = $div.position();\n                    var div_width = $div.width();\n                    var div_height = $div.height();\n                    var pop_width = $pop.width();\n                    var pop_height = $pop.height();\n\n                    var top = div_pos.top - pop_height + 10;\n                    if (top < 0) {\n                        top = div_pos.top + div_height + 10;\n                        $pop.addClass(\"bottom\");\n                        $pop.removeClass(\"top\");\n                    } else {\n                        $pop.addClass(\"top\");\n                        $pop.removeClass(\"bottom\");\n                    }\n                    $pop.css('left', div_pos.left + (div_width - pop_width) / 2);\n                    $pop.css('top', top);\n                    $pop.show();\n                }).\n                on('hide.bs.dropdown', function () {\n                    $('#host-edit-color-popover', selector).hide();\n                });\n        };\n    }\n\n    function Simple(dialog) {\n        var self = this;\n\n        self.load = function() {\n            dialog.render();\n        };\n    }\n\n    function AddMachine(dialog) {\n        var self = this;\n        var color = null;\n        var selector = dialog.get_sel();\n        var run_error = null;\n\n        var invisible = dialog.machines_ins.addresses.filter(function(addr) {\n            var m = dialog.machines_ins.lookup(addr);\n            return !m || !m.visible;\n        });\n\n        function existing_error(address) {\n            var ex = null;\n            var machine = dialog.machines_ins.lookup(address);\n            if (machine && machine.visible && machine.on_disk) {\n                ex = new Error(_(\"This machine has already been added.\"));\n                ex.target = \"#add-machine-address\";\n            }\n            return ex;\n        }\n\n        function check_address(evt) {\n            var disabled = true;\n            var ex = null;\n\n            var addr = $('#add-machine-address').val();\n            var button = dialog.get_sel(\".btn-primary\");\n            if (addr === \"\") {\n                disabled = true;\n            } else if (!machines.allow_connection_string &&\n                       (addr.indexOf('@') > -1 || addr.indexOf(':') > -1)) {\n                ex = new Error(_(\"This version of cockpit-ws does not support connecting to a host with an alternate user or port\"));\n            } else if (addr.search(/\\s+/) === -1) {\n                ex = existing_error(addr);\n                if (!ex)\n                    disabled = false;\n            } else {\n                ex = new Error(_(\"The IP address or host name cannot contain whitespace.\"));\n            }\n\n            if (ex)\n                ex.target = \"#add-machine-address\";\n\n            if (run_error)\n                selector.dialog(\"failure\", run_error, ex);\n            else\n                selector.dialog(\"failure\", ex);\n\n            button.prop(\"disabled\", disabled);\n        }\n\n        function add_machine() {\n            run_error = null;\n            dialog.address = $('#add-machine-address').val();\n            color = machines.colors.parse($('#add-machine-color-picker #host-edit-color').css('background-color'));\n            if (existing_error(dialog.address))\n                return;\n\n            dialog.set_goal(function() {\n                var dfp = $.Deferred();\n                dialog.machines_ins.add(dialog.address, color)\n                    .done(dfp.resolve)\n                    .fail(function (ex) {\n                        var msg = cockpit.format(_(\"Failed to add machine: $0\"),\n                                                 cockpit.message(ex));\n                        dfp.reject(msg);\n                    });\n\n                return dfp.promise();\n            });\n\n            dialog.run(dialog.try_to_connect(dialog.address), function (ex) {\n                if (ex.problem == \"no-host\") {\n                    var host_id_port = dialog.address;\n                    var port_index = host_id_port.lastIndexOf(\":\");\n                    var port = \"22\";\n                    if (port_index === -1)\n                        host_id_port = dialog.address + \":22\";\n                    else\n                        port = host_id_port.substr(port_index + 1);\n                    ex.message = cockpit.format(_(\"Cockpit could not contact the given host $0. Make sure it has ssh running on port $1, or specify another port in the address.\"), host_id_port, port);\n                    ex = cockpit.message(ex);\n                    run_error = ex;\n                }\n                dialog.render_error(ex);\n            });\n        }\n\n        self.load = function() {\n            var manifest = cockpit.manifests[\"shell\"] || {};\n            var limit = parseInt(manifest[\"machine-limit\"], 10);\n            var color_picker = new MachineColorPicker(dialog.machines_ins);\n            if (!limit || isNaN(limit))\n                limit = 20;\n\n            dialog.render({\n                'nearlimit' : limit * 0.75 <= dialog.machines_ins.list.length,\n                'limit' : limit,\n                'placeholder' : _(\"Enter IP address or host name\"),\n                'options' : invisible,\n            });\n\n            var button = dialog.get_sel(\".btn-primary\");\n            button.on(\"click\", add_machine);\n\n            $(\"#add-machine-address\").on(\"keyup\", function (ev) {\n                if (ev.which === 13) {\n                    var disabled = button.prop('disabled');\n                    if (!disabled)\n                        add_machine();\n                }\n            });\n            $(\"#add-machine-address\").on(\"input focus\", check_address);\n            color_picker.render(\"#add-machine-color-picker\", dialog.address, color);\n            $(\"#add-machine-address\").focus();\n        };\n    }\n\n    function MachinePort(dialog) {\n        var self = this;\n\n        function change_port() {\n            var dfp = $.Deferred();\n            var parts = dialog.machines_ins.split_connection_string(dialog.address);\n            parts.port = $(\"#edit-machine-port\").val();\n            var address = dialog.machines_ins.generate_connection_string(parts.user,\n                                                                  parts.port,\n                                                                  parts.address);\n            function update_host(ex) {\n                dialog.address = address;\n                dialog.machines_ins.change(parts.address, { \"port\": parts.port })\n                    .done(function () {\n                        // We failed before so try to connect again\n                        // now that the machine is saved.\n                        if (ex) {\n                            dialog.try_to_connect(address)\n                                .done(dialog.complete)\n                                .fail(function (e) {\n                                    dfp.reject(e);\n                                });\n                        } else {\n                            dfp.resolve();\n                        }\n                    })\n                    .fail(function (ex) {\n                        var msg = cockpit.format(_(\"Failed to edit machine: $0\"),\n                                                 cockpit.message(ex));\n                        dfp.reject(msg);\n                    });\n            }\n\n            dialog.try_to_connect(address)\n                .done(function () {\n                    update_host();\n                })\n                .fail(function (ex) {\n                    /* any other error means progress, so save */\n                    if (ex.problem != 'no-host')\n                        update_host(ex);\n                    else\n                        dfp.reject(ex);\n                });\n\n            dialog.run(dfp.promise());\n        }\n\n        self.load = function() {\n            var machine = dialog.machines_ins.lookup(dialog.address);\n            if (!machine) {\n                dialog.get_sel().modal('hide');\n                return;\n            }\n\n            dialog.render({ 'port' : machine.port,\n                            'allow_connection_string' : machines.allow_connection_string });\n            if (machines.allow_connection_string)\n                dialog.get_sel(\".btn-primary\").on(\"click\", change_port);\n        };\n    }\n\n    function HostKey(dialog, problem) {\n        var self = this;\n        var error_options = null;\n        var key = null;\n        var allow_change = problem == \"unknown-hostkey\";\n\n        function add_key() {\n            var q;\n            var machine = dialog.machines_ins.lookup(dialog.address);\n            if (!machine || machine.on_disk) {\n                q = dialog.machines_ins.add_key(key);\n            } else {\n                /* When machine isn't saved to disk\n                   don't save the key either */\n                q = dialog.machines_ins.change(dialog.address, {\n                    'host_key': key\n                });\n            }\n\n            var promise = q.then(function () {\n                var inner = dialog.try_to_connect(dialog.address);\n\n                inner.fail(function(ex) {\n                    if ((ex.problem == \"invalid-hostkey\" ||\n                        ex.problem == \"unknown-hostkey\") &&\n                        machine && !machine.on_disk) {\n                            dialog.machines_ins.change(dialog.address, {\n                                'host_key': null\n                            });\n                        }\n                    });\n\n                return inner;\n            });\n\n            dialog.run(promise);\n        }\n\n        function render() {\n            var promise = null;\n            var fp;\n\n            if (error_options) {\n                key = error_options[\"host-key\"];\n                fp = error_options[\"host-fingerprint\"];\n            }\n\n            dialog.render({\n                'context_title' : dialog.context_title,\n                'path' : machines.known_hosts_path,\n                'key' : fp,\n                'key_host' : key ? key.split(' ')[0] : null,\n            });\n\n            if (!key) {\n                promise = dialog.try_to_connect(dialog.address)\n                    .fail(function(ex) {\n                        if (ex.problem != problem) {\n                            dialog.render_error(ex);\n                        } else {\n                            error_options = ex;\n                            render();\n                        }\n                    })\n\n                    // Fixed already, just close\n                    .done(function (v) {\n                        dialog.complete(v);\n                    });\n\n                dialog.get_sel().dialog(\"wait\", promise);\n            } else if (allow_change) {\n                dialog.get_sel(\".btn-primary\").on(\"click\", add_key);\n            }\n        }\n\n        self.load = function(ex) {\n            error_options = ex;\n            render();\n        };\n    }\n\n    function ChangeAuth(dialog) {\n        var self = this;\n        var error_options = null;\n        var allows_password = false;\n        var keys = null;\n        var machine = dialog.machines_ins.lookup(dialog.address);\n\n        self.user = { };\n\n        function update_keys() {\n            var key_div = dialog.get_sel('.keys');\n\n            if (key_div) {\n                key_div.empty();\n                for (var id in keys.items) {\n                    var key = keys.items[id];\n                    if (key.loaded)\n                        key_div.append($(\"<div>\").text(key.name));\n                }\n            }\n        }\n\n        function login() {\n            var address;\n            var options = {};\n            var dfp = $.Deferred();\n            var user = $(\"#login-custom-user\").val();\n\n            var parts = dialog.machines_ins.split_connection_string(dialog.address);\n            parts.user = user;\n\n            address = dialog.machines_ins.generate_connection_string(parts.user,\n                                                              parts.port,\n                                                              parts.address);\n\n            if ($(\"#login-type\").val() != 'stored') {\n                options['password'] = $(\"#login-custom-password\").val();\n                options[\"session\"] = 'shared';\n                if (!user) {\n                    /* we don't want to save the default user for everyone\n                     * so we pass current user as an option, but make sure the\n                     * session isn't private\n                     */\n                    if (self.user && self.user.name)\n                        options[\"user\"] = self.user.name;\n                    options[\"temp-session\"] = false; /* Compatibility option */\n                }\n            }\n\n            dialog.try_to_connect(address, options)\n                .done(function () {\n                    dialog.address = address;\n                    if (machine) {\n                        dialog.machines_ins.change(machine.address, { \"user\" : user })\n                            .done(dfp.resolve)\n                            .fail(dfp.reject);\n                    } else {\n                        dfp.resolve();\n                    }\n                })\n                .fail(dfp.reject);\n\n            dialog.run(dfp.promise());\n        }\n\n        function change_login_type(value) {\n            var stored = value != 'password';\n            var text = $(\"#login-type li[value=\" + value + \"]\").text();\n            $(\"#login-type button span\").text(text);\n            $(\"#login-available\").toggle(stored);\n            $(\"#login-diff-password\").toggle(!stored);\n        }\n\n        function render() {\n            var promise = null;\n            var template = \"change-auth\";\n            if (!machines.allow_connection_string || !machines.has_auth_results)\n                template = \"auth-failed\";\n\n            var methods = null;\n            var available = null;\n            var supported = null;\n\n            var machine_user = dialog.machines_ins.split_connection_string(dialog.address).user;\n            if (!machine_user && machine)\n                machine_user = machine.user;\n\n            if (error_options && machines.has_auth_results) {\n                supported = {};\n                available = {};\n\n                methods = error_options[\"auth-method-results\"];\n                if (methods) {\n                    allows_password = is_method_supported(methods, 'password');\n                    for (var method in methods) {\n                        if (can_try_method(methods, method)) {\n                            available[method] = true;\n                        }\n                    }\n                }\n\n                if ($.isEmptyObject(available))\n                    template = \"auth-failed\";\n            }\n\n            dialog.render({\n                'supported' : methods,\n                'available' : available,\n                'machine_user' : machine_user,\n                'user' : self.user ? self.user.name : \"\",\n                'allows_password' : allows_password,\n                'can_sync': !!dialog.codes['sync-users'],\n                'machines.allow_connection_string' : machines.allow_connection_string,\n                'sync_link' : function() {\n                    return function(text, render) {\n                        return '<a id=\"do-sync-users\">' + render(text) + \"</a>\";\n                    };\n                }\n            }, template);\n\n            if (methods === null && machines.has_auth_results) {\n                promise = dialog.try_to_connect(dialog.address)\n                    .fail(function(ex) {\n                        error_options = ex;\n                        render();\n                    })\n\n                    // Fixed already, just close\n                    .done(function (v) {\n                        dialog.complete(v);\n                    });\n\n                dialog.get_sel().dialog(\"wait\", promise);\n            } else if (!$.isEmptyObject(available)) {\n                $(\"#login-type li\").on('click', function() {\n                    change_login_type($(this).attr(\"value\"));\n                });\n                change_login_type($(\"#login-type li:first-child\").attr(\"value\"));\n                dialog.get_sel(\".btn-primary\").on(\"click\", login);\n                dialog.get_sel(\"a[data-content]\").popover();\n\n                update_keys();\n            }\n\n            dialog.get_sel(\"#do-sync-users\").on(\"click\", function () {\n                dialog.render_template(\"sync-users\");\n            });\n        }\n\n        self.load = function(ex) {\n            error_options = ex;\n            if (credentials) {\n                keys = credentials.keys_instance();\n                $(keys).on(\"changed\", update_keys);\n            }\n            cockpit.user()\n                .done(function (user) {\n                    self.user = user;\n                })\n                .always(function (user) {\n                    render();\n                });\n        };\n\n        self.close = function(ex) {\n            if (keys) {\n                $(keys).off();\n                keys.close();\n            }\n            keys = null;\n        };\n    }\n\n    function SyncUsers(dialog) {\n        var self = this;\n        var users = {};\n\n        var needs_auth = false;\n        var needs_root = false;\n        var methods = null;\n        var remote_options = { \"superuser\": true };\n\n        var perm_failed = null;\n\n        function load_users() {\n            var local = cockpit.dbus(null, { bus: \"internal\",\n                                             host: \"localhost\",\n                                             superuser: true });\n            $(local).on(\"close\", function(event, options) {\n                perm_failed = options;\n                render();\n            });\n\n            var proxy = local.proxy(\"cockpit.Setup\", \"/setup\");\n            proxy.wait(function () {\n                if (proxy.valid) {\n                    var blank = {\n                        \"t\" : \"(asas)\",\n                        \"v\" : [[], []]\n                    };\n\n                    proxy.Transfer(\"passwd1\", blank)\n                        .done(function(prepared) {\n                            var i, parts, name;\n                            var groups = prepared.v[1];\n\n                            for (i = 0; i < prepared.v[0].length; i++) {\n                                var raw = prepared.v[0][i];\n\n                                parts = raw.split(\":\");\n                                name = parts[0];\n\n                                users[name] = {\n                                    \"username\" : name,\n                                    \"name\" : parts[4] || name,\n                                    \"raw\" : raw,\n                                    \"groups\" : [],\n                                };\n                            }\n\n                            for (i = 0; i < groups.length; i++) {\n                                parts = groups[i].split(\":\");\n                                name = parts[0];\n                                var members = parts[parts.length - 1].split(\",\");\n                                for (var j = 0; j < members.length; j++) {\n                                    var u = members[j];\n                                    if (users[u])\n                                        users[u].groups.push(name);\n                                }\n                            }\n                        })\n                        .fail(function(ex) {\n                            ex.message = cockpit.gettext(ex.message);\n                            perm_failed = ex;\n                        })\n                        .always(function(ex) {\n                            $(local).off();\n                            local.close();\n                            render();\n                        });\n                }\n            });\n        }\n\n        function sync_users() {\n            var client = null;\n\n            var dfd = $.Deferred();\n            var promise = dfd.promise();\n\n            dialog.run(promise);\n\n            /* A successfull sync should close the dialog */\n            dialog.set_on_success(null);\n\n            promise.always(function () {\n                if (client) {\n                    $(client).off();\n                    client.close();\n                }\n            });\n\n            var options = { bus: \"internal\" };\n            if (needs_auth) {\n                options.user = $(\"#sync-username\").val();\n                options.password = $(\"#sync-password\").val();\n            }\n            $.extend(options, remote_options, { host: dialog.address });\n            client = cockpit.dbus(null, options);\n            $(client).on(\"close\", function(event, ex) {\n                dfd.reject(cockpit.message(ex));\n            });\n\n            var variant = {\n                \"t\" : \"(asas)\",\n                \"v\" : [[]],\n            };\n\n            var groups = {};\n            dialog.get_sel(\"input:checked\").each( function() {\n                var u = users[$(this).attr(\"name\")];\n                if (u) {\n                    variant.v[0].push(u.raw);\n                    for (var i = 0; i < u.groups.length; i++) {\n                        var group = u.groups[i];\n                        if (!groups[group])\n                            groups[group] = [];\n\n                        groups[group].push(u.username);\n                    }\n                }\n            });\n            variant.v.push(Object.keys(groups).map(function(k) {\n                return k + \":::\" + groups[k].join();\n            }));\n\n            /* We assume all cockpits support the 'passwd1' mechanism */\n            var proxy = client.proxy(\"cockpit.Setup\", \"/setup\");\n            proxy.wait(function() {\n                if (proxy.valid) {\n                    proxy.Commit(\"passwd1\", variant)\n                        .fail(function(ex) {\n                            ex.message = cockpit.gettext(ex.message);\n                            dfd.reject(ex);\n                        })\n                        .done(dfd.resolve);\n                }\n            });\n        }\n\n        function toggle_button() {\n            var any = dialog.get_sel(\"input:checked\").length > 0;\n            dialog.get_sel(\".btn-primary\").toggleClass(\"disabled\", !any);\n        }\n\n        function render() {\n            function formated_groups() {\n                /*jshint validthis:true */\n                if (this.groups)\n                    return this.groups.join(\", \");\n            }\n\n            /* assume password is allowed for backwards compatibility */\n            var allows_password = true;\n            var user_list = Object.keys(users).sort().map(function(v) {\n                return users[v];\n            });\n\n            if (machines.has_auth_results && methods)\n                allows_password = is_method_supported(methods, 'password');\n\n            var text = dialog.render({\n                'needs_auth' : needs_auth,\n                'needs_root' : needs_root,\n                'users' : user_list,\n                'perm_failed' : perm_failed ? cockpit.message(perm_failed) : null,\n                'allows_password' : allows_password,\n                'formated_groups': formated_groups,\n            });\n\n            dialog.get_sel(\".modal-content\").html(text);\n            dialog.get_sel(\".btn-primary\").on(\"click\", sync_users);\n            dialog.get_sel(\"input:checkbox\").on(\"change\", function() {\n                var name = $(this).attr(\"name\");\n                users[name].checked = $(this).is(':checked');\n                toggle_button();\n            });\n            toggle_button();\n        }\n\n        self.load = function(error_options) {\n            if (error_options)\n                methods = error_options['auth-method-results'];\n\n            render();\n            dialog.try_to_connect(dialog.address, remote_options).fail(function(ex) {\n                needs_auth = true;\n                if (ex.problem == \"access-denied\") {\n                    needs_root = true;\n                    if (!methods && machines.has_auth_results)\n                        /* TODO: We need to know if password auth is\n                         * supported but we only get that when the transport\n                         * closes. Passing an invalid username should\n                         * open new transport that fails.\n                         */\n                        dialog.try_to_connect(dialog.address, { \"user\" : \"1\" })\n                            .fail(function(ex) {\n                                methods = ex['auth-method-results'];\n                            })\n                            .always(render);\n                } else {\n                    methods = ex['auth-method-results'];\n                    render();\n                }\n            });\n            load_users();\n        };\n    }\n\n    function MachineDialogManager(machines_ins, codes) {\n        var self = this;\n\n        if (!codes)\n            codes = default_codes;\n\n        var color_picker = new MachineColorPicker(machines_ins);\n\n        self.troubleshoot = function(target_id, machine) {\n            var selector = \"#\" + target_id;\n            if (!machine || !machine.problem)\n                return;\n\n            var template = codes[machine.problem];\n            if (machine.problem == \"no-host\")\n                template = \"change-port\";\n\n            var dialog = new Dialog(selector, machine.address, machines_ins, codes);\n            dialog.render_template(template);\n            dialog.show();\n        };\n\n        self.needs_troubleshoot = function (machine) {\n            if (!machine || !machine.problem)\n                return false;\n\n            if (machine.problem == \"no-host\")\n                return true;\n\n            return codes[machine.problem] ? true : false;\n        };\n\n        self.render_dialog = function (template, target_id, address) {\n            var selector = \"#\" + target_id;\n            var dialog = new Dialog(selector, address, machines_ins, codes);\n            dialog.render_template(template);\n            dialog.show();\n        };\n\n        self.render_color_picker = function (selector, address) {\n            color_picker.render(selector, address);\n        };\n    }\n\n    module.exports = {\n        new_manager: function (machines_ins, codes) {\n            return new MachineDialogManager(machines_ins, codes);\n        }\n    };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/machine-dialogs.js\n// module id = 13\n// module chunks = 0 2","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar cockpit = require(\"cockpit\");\nvar mustache = require(\"mustache/mustache\");\n\n/*\n * Turns a mustache template into a translated mustache template\n * by preparsing it and translating it.\n */\nvar cache = { };\n\nfunction translate(template) {\n    if (template in cache)\n        return cache[template];\n    var div = document.createElement(\"div\");\n    div.innerHTML = template;\n    cockpit.translate(div);\n    var result = div.innerHTML;\n    cache[template] = result;\n    return result;\n}\n\n/* Just like the mustache object, except for translated */\nmodule.exports = cockpit.extend({ }, mustache, {\n    render: function render(template, view, partials) {\n        return translate(mustache.render(template, view, partials));\n    },\n    to_html: function to_html(template, view, partials, send) {\n        return translate(mustache.to_html(template, view, partials, send));\n    },\n    clearCache: function clearCache() {\n        cache = { };\n        return mustache.clearCache();\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/mustache.js\n// module id = 14\n// module chunks = 0 2","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false*/\n\n(function (root, factory) {\n  if (typeof exports === \"object\" && exports) {\n    factory(exports); // CommonJS\n  } else {\n    var mustache = {};\n    factory(mustache);\n    if (typeof define === \"function\" && define.amd) {\n      define(mustache); // AMD\n    } else {\n      root.Mustache = mustache; // <script>\n    }\n  }\n}(this, function (mustache) {\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var nonSpaceRe = /\\S/;\n  var eqRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var RegExp_test = RegExp.prototype.test;\n  function testRegExp(re, string) {\n    return RegExp_test.call(re, string);\n  }\n\n  function isWhitespace(string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var Object_toString = Object.prototype.toString;\n  var isArray = Array.isArray || function (object) {\n    return Object_toString.call(object) === '[object Array]';\n  };\n\n  function isFunction(object) {\n    return typeof object === 'function';\n  }\n\n  function escapeRegExp(string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n  }\n\n  var entityMap = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    \"/\": '&#x2F;'\n  };\n\n  function escapeHtml(string) {\n    return String(string).replace(/[&<>\"'\\/]/g, function (s) {\n      return entityMap[s];\n    });\n  }\n\n  function escapeTags(tags) {\n    if (!isArray(tags) || tags.length !== 2) {\n      throw new Error('Invalid tags: ' + tags);\n    }\n\n    return [\n      new RegExp(escapeRegExp(tags[0]) + \"\\\\s*\"),\n      new RegExp(\"\\\\s*\" + escapeRegExp(tags[1]))\n    ];\n  }\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all template text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices\n   * in the original template of the token, respectively.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: an\n   * array of tokens in the subtree and the index in the original template at which\n   * the closing tag for that section begins.\n   */\n  function parseTemplate(template, tags) {\n    tags = tags || mustache.tags;\n    template = template || '';\n\n    if (typeof tags === 'string') {\n      tags = tags.split(spaceRe);\n    }\n\n    var tagRes = escapeTags(tags);\n    var scanner = new Scanner(template);\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace() {\n      if (hasTag && !nonSpace) {\n        while (spaces.length) {\n          delete tokens[spaces.pop()];\n        }\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(tagRes[0]);\n      if (value) {\n        for (var i = 0, len = value.length; i < len; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push(['text', chr, start, start + 1]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') {\n            stripSpace();\n          }\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(tagRes[0])) break;\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(eqRe);\n        scanner.scan(eqRe);\n        scanner.scanUntil(tagRes[1]);\n      } else if (type === '{') {\n        value = scanner.scanUntil(new RegExp('\\\\s*' + escapeRegExp('}' + tags[1])));\n        scanner.scan(curlyRe);\n        scanner.scanUntil(tagRes[1]);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(tagRes[1]);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(tagRes[1])) {\n        throw new Error('Unclosed tag at ' + scanner.pos);\n      }\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection) {\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n        }\n        if (openSection[1] !== value) {\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n        }\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        tagRes = escapeTags(tags = value.split(spaceRe));\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n    if (openSection) {\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n    }\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens(tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, len = tokens.length; i < len; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens(tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, len = tokens.length; i < len; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n      case '#':\n      case '^':\n        collector.push(token);\n        sections.push(token);\n        collector = token[4] = [];\n        break;\n      case '/':\n        section = sections.pop();\n        section[5] = token[2];\n        collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n        break;\n      default:\n        collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner(string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function () {\n    return this.tail === \"\";\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function (re) {\n    var match = this.tail.match(re);\n\n    if (match && match.index === 0) {\n      var string = match[0];\n      this.tail = this.tail.substring(string.length);\n      this.pos += string.length;\n      return string;\n    }\n\n    return \"\";\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n    case -1:\n      match = this.tail;\n      this.tail = \"\";\n      break;\n    case 0:\n      match = \"\";\n      break;\n    default:\n      match = this.tail.substring(0, index);\n      this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context(view, parentContext) {\n    this.view = view == null ? {} : view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function (name) {\n    var value;\n    if (name in this.cache) {\n      value = this.cache[name];\n    } else {\n      var context = this;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n\n          var names = name.split('.'), i = 0;\n          while (value != null && i < names.length) {\n            value = value[names[i++]];\n          }\n        } else {\n          value = context.view[name];\n        }\n\n        if (value != null) break;\n\n        context = context.parent;\n      }\n\n      this.cache[name] = value;\n    }\n\n    if (isFunction(value)) {\n      value = value.call(this.view);\n    }\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer() {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null) {\n      tokens = cache[template] = parseTemplate(template, tags);\n    }\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    var self = this;\n    function subRender(template) {\n      return self.render(template, context, partials);\n    }\n\n    var token, value;\n    for (var i = 0, len = tokens.length; i < len; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n      case '#':\n        value = context.lookup(token[1]);\n        if (!value) continue;\n\n        if (isArray(value)) {\n          for (var j = 0, jlen = value.length; j < jlen; ++j) {\n            buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n          }\n        } else if (typeof value === 'object' || typeof value === 'string') {\n          buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n        } else if (isFunction(value)) {\n          if (typeof originalTemplate !== 'string') {\n            throw new Error('Cannot use higher-order sections without the original template');\n          }\n\n          // Extract the portion of the original template that the section contains.\n          value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n          if (value != null) buffer += value;\n        } else {\n          buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n        }\n\n        break;\n      case '^':\n        value = context.lookup(token[1]);\n\n        // Use JavaScript's definition of falsy. Include empty arrays.\n        // See https://github.com/janl/mustache.js/issues/186\n        if (!value || (isArray(value) && value.length === 0)) {\n          buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n        }\n\n        break;\n      case '>':\n        if (!partials) continue;\n        value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n        if (value != null) buffer += this.renderTokens(this.parse(value), context, partials, value);\n        break;\n      case '&':\n        value = context.lookup(token[1]);\n        if (value != null) buffer += value;\n        break;\n      case 'name':\n        value = context.lookup(token[1]);\n        if (value != null) buffer += mustache.escape(value);\n        break;\n      case 'text':\n        buffer += token[1];\n        break;\n      }\n    }\n\n    return buffer;\n  };\n\n  mustache.name = \"mustache.js\";\n  mustache.version = \"0.8.1\";\n  mustache.tags = [ \"{{\", \"}}\" ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function (template, view, partials) {\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.\n  mustache.to_html = function (template, view, partials, send) {\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bower_components/mustache/mustache.js\n// module id = 15\n// module chunks = 0 2","module.exports = \"<div class=\\\"modal-header\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\n        aria-hidden=\\\"true\\\">&times;</button>\\n    <h4 class=\\\"modal-title\\\" translatable=\\\"yes\\\">Add Machine to Dashboard</h4>\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n    <div>\\n        <table class=\\\"form-table-ct\\\">\\n            <tr>\\n                <td class=\\\"top\\\" translatable=\\\"yes\\\">Address</td>\\n                <td>\\n                <div class=\\\"dialog-wrapper error-keep\\\">\\n                    <input class=\\\"form-control\\\" id=\\\"add-machine-address\\\"\\n                       type=\\\"test\\\" value=\\\"{{ full_address }}\\\"\\n                       list=\\\"options\\\"\\n                       placeholder=\\\"{{ placeholder }}\\\"/>\\n                    <datalist id=\\\"options\\\">\\n                        {{#options}}\\n                        <option value=\\\"{{.}}\\\">\\n                        {{/options}}\\n                    </datalist>\\n                </div>\\n                </td>\\n            </tr>\\n            <tr>\\n                <td translatable=\\\"yes\\\">Color</td>\\n                <td id=\\\"add-machine-color-picker\\\">\\n                </td>\\n            </tr>\\n        </table>\\n    </div>\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n    {{#nearlimit}}\\n    <div class=\\\"alert alert-warning dialog-error dashboard-machine-warning\\\">\\n        <span class=\\\"pficon pficon-warning-triangle-o\\\"></span>\\n        <span translatable=\\\"yes\\\">Connecting simultaneously to more than {{ limit }} machines is unsupported.</span>\\n    </div>\\n    {{/nearlimit}}\\n    <button class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" translatable=\\\"yes\\\">Cancel</button>\\n    <button class=\\\"btn btn-primary\\\" translatable=\\\"yes\\\">Add</button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/lib/machine-add.html\n// module id = 16\n// module chunks = 0 2","module.exports = \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" translatable=\\\"yes\\\">Authentication Failed</h4>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    {{#supported}}\\n    <p translatable=\\\"yes\\\">Cockpit was unable to log into {{#strong}}{{host}}{{/strong}}. To use this machine with cockpit you will need to enable one of the following authentication methods in the sshd config on {{#strong}}{{host}}{{/strong}}:</p>\\n    <ul>\\n        {{#password}}<li translatable=\\\"yes\\\">Password</li>{{/password}}\\n        {{#public-key}}<li translatable=\\\"yes\\\">Public Key</li>{{/public-key}}\\n        {{#gssapi-mic}}<li translatable=\\\"yes\\\">Kerberos Based SSO</li>{{/gssapi-mic}}\\n    </ul>\\n    {{/supported}}\\n\\n    {{^supported}}\\n    <p translatable=\\\"yes\\\">Cockpit was unable to log in to {{#strong}}{{host}}{{/strong}}. {{#can_sync}}You may want to try to {{#sync_link}}synchronize users{{/sync_link}}.{{/can_sync}} For more authentication options and troubleshooting support please upgrade cockpit-ws to a newer version.</p>\\n    {{/supported}}\\n\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-primary\\\" data-dismiss=\\\"modal\\\" translatable=\\\"yes\\\">Close</button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/lib/machine-auth-failed.html\n// module id = 17\n// module chunks = 0 2","module.exports = \"<div class=\\\"modal-header\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\n        aria-hidden=\\\"true\\\">&times;</button>\\n    <h4 class=\\\"modal-title\\\" translatable=\\\"yes\\\">Log in to {{host}}</h4>\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n    {{^available}}\\n    <p translatable=\\\"yes\\\">Cockpit was unable to log into {{#strong}}{{host}}{{/strong}}.</p>\\n    {{/available}}\\n\\n    {{#available}}\\n    <p translatable=\\\"yes\\\">Cockpit was unable to log into {{#strong}}{{host}}{{/strong}}. You can change your authentication credentials below. {{#can_sync}}You may prefer to {{#sync_link}}synchronize accounts and passwords{{/sync_link}}.{{/can_sync}}</p>\\n\\n    <div>\\n        <table class=\\\"form-table-ct\\\">\\n            <tr>\\n                <td translatable=\\\"yes\\\" class=\\\"top\\\">User name</td>\\n                <td>\\n                    <input class=\\\"form-control\\\" id=\\\"login-custom-user\\\" type=\\\"text\\\" value=\\\"{{machine_user}}\\\" placeholder=\\\"{{ user }}\\\"/>\\n                </td>\\n                <td>\\n                    <a tabindex=\\\"0\\\" role=\\\"button\\\" data-toggle=\\\"popover\\\"\\n                        data-trigger=\\\"focus\\\" data-placement=\\\"bottom\\\" translate=\\\"data-content\\\"\\n                        data-content=\\\"Leave blank to connect to this machine as the currently logged in user{{#user}} ({{user}}){{/user}}. If you enter a different username, that user will always be used connecting to this machine.\\\">\\n                        <span class=\\\"fa fa-lg fa-info-circle\\\"></span>\\n                    </a>\\n                </td>\\n            </tr>\\n\\n            <tr>\\n                <td translatable=\\\"yes\\\">Authentication</td>\\n                <td>\\n                    <div class=\\\"btn-group bootstrap-select dropdown form-control\\\" id=\\\"login-type\\\">\\n                        <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\"\\n                            data-toggle=\\\"dropdown\\\">\\n                            <span class=\\\"pull-left\\\" translatable=\\\"yes\\\"></span>\\n                            <div class=\\\"caret\\\"></div>\\n                        </button>\\n                        <ul class=\\\"dropdown-menu\\\">\\n                            {{#allows_password}}\\n                            <li value=\\\"password\\\"><a translate>Type a password</a></li>\\n                            {{/allows_password}}\\n                            <li value=\\\"stored\\\"><a translate>Using available credentials</a></li>\\n                        </ul>\\n                    </div>\\n                </td>\\n            </tr>\\n\\n            {{#allows_password}}\\n            <tr id=\\\"login-diff-password\\\">\\n                <td translatable=\\\"yes\\\" class=\\\"top\\\">Password</td>\\n                <td>\\n                    <input class=\\\"form-control\\\" id=\\\"login-custom-password\\\" type=\\\"password\\\" />\\n                </td>\\n                <td>\\n                    <a tabindex=\\\"0\\\" role=\\\"button\\\" data-toggle=\\\"popover\\\"\\n                        data-trigger=\\\"focus\\\" data-placement=\\\"bottom\\\" translate=\\\"data-content\\\"\\n                        data-content=\\\"Entering a different password here means you will need to retype it every time you reconnect to this machine\\\">\\n                        <span class=\\\"fa fa-lg fa-info-circle\\\"></span>\\n                    </a>\\n                </td>\\n            </tr>\\n            {{/allows_password}}\\n            <tr id=\\\"login-available\\\">\\n                <td translatable=\\\"yes\\\" class=\\\"top\\\">Available</td>\\n                <td class=\\\"top\\\">\\n                        {{#password}}<div translatable=\\\"yes\\\">Login Password</div>{{/password}}\\n                        {{#gssapi-mic}}<div translatable=\\\"yes\\\">Kerberos Ticket</div>{{/gssapi-mic}}\\n                        {{#public-key}}<div class=\\\"keys\\\"><div class='dialog-wait-ct pull-left'><div class='spinner spinner-sm'></div><span translatable=\\\"yes\\\">Checking for public keys</span></div></div>{{/public-key}}\\n                </td>\\n            </tr>\\n        </table>\\n    </div>\\n    {{/available}}\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" translatable=\\\"yes\\\">Cancel</button>\\n    <button class=\\\"btn btn-primary\\\" translatable=\\\"yes\\\">Log In</button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/lib/machine-change-auth.html\n// module id = 18\n// module chunks = 0 2","module.exports = \"<div class=\\\"modal-header\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\n        aria-hidden=\\\"true\\\">&times;</button>\\n    <h4 class=\\\"modal-title\\\" translatable=\\\"yes\\\">Could not contact {{host}}</h4>\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n    <p>\\n        <span translatable=\\\"yes\\\">Cockpit was unable to contact {{#strong}}{{host}}{{/strong}}.</span>\\n        {{^allow_connection_string}}\\n        <span translatable=\\\"yes\\\">To try a different port you will need to upgrade cockpit-ws to a newer version.</span>\\n        {{/allow_connection_string}}\\n\\n        {{#allow_connection_string}}\\n        <span translatable=\\\"yes\\\">Is sshd running on a different port?</span>\\n        {{/allow_connection_string}}\\n    </p>\\n\\n    {{#allow_connection_string}}\\n    <div>\\n        <table class=\\\"form-table-ct\\\">\\n            <tr>\\n                <td class=\\\"top\\\" translatable=\\\"yes\\\">Port</td>\\n                <td>\\n                <div class=\\\"dialog-wrapper error-keep\\\">\\n                    <input id=\\\"edit-machine-port\\\" class=\\\"form-control\\\"\\n                       type=\\\"test\\\" value=\\\"{{ port }}\\\"\\n                       list=\\\"options\\\"\\n                       placeholder=\\\"22\\\"/>\\n                </div>\\n                </td>\\n            </tr>\\n        </table>\\n    </div>\\n    {{/allow_connection_string}}\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n    {{#allow_connection_string}}\\n    <button class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" translatable=\\\"yes\\\">Cancel</button>\\n    <button class=\\\"btn btn-primary\\\" translatable=\\\"yes\\\">Update</button>\\n    {{/allow_connection_string}}\\n\\n    {{^allow_connection_string}}\\n    <button class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" translatable=\\\"yes\\\">Close</button>\\n    {{/allow_connection_string}}\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/lib/machine-change-port.html\n// module id = 19\n// module chunks = 0 2","module.exports = \"<div>\\n    <div id=\\\"host-edit-color\\\" data-toggle=\\\"dropdown\\\"></div>\\n    <div id=\\\"host-edit-color-popover\\\" class=\\\"popover in\\\" tabindex=\\\"-1\\\">\\n        <div class=\\\"arrow\\\"></div>\\n        <div class=\\\"popover-content\\\">\\n            {{#colors}}\\n            <div>\\n                {{#list}}\\n                <div class=\\\"color-cell\\\"></div>\\n                {{/list}}\\n            </div>\\n            {{/colors}}\\n        </div>\\n        <div class=\\\"arrow\\\"></div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/lib/machine-color-picker.html\n// module id = 20\n// module chunks = 0 2","module.exports = \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" translatable=\\\"yes\\\">Incorrect Host Key</h4>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <div class=\\\"banned\\\">\\n        <i class=\\\"fa fa-ban\\\"></i>\\n    </div>\\n    <p translatable=\\\"yes\\\">The key of {{#strong}}{{host}}{{/strong}} does not match the key previously in use. Unless this machine was recently replaced, it is likely that someone is trying to attack your connection to this machine.</p>\\n\\n    {{#key_host}}\\n    <p translatable=\\\"yes\\\">You can remove the previously stored key by running the following command</p>\\n\\n    <pre class=\\\"center\\\">ssh-keygen -R {{ key_host }} -f {{ path }}</pre>\\n    {{/key_host}}\\n\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" translatable=\\\"yes\\\">Close</button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/lib/machine-invalid-hostkey.html\n// module id = 21\n// module chunks = 0 2","module.exports = \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" translatable=\\\"yes\\\">Cockpit is not installed</h4>\\n</div>\\n<div class=\\\"modal-body\\\">\\n    <p translatable=\\\"yes\\\">A compatible version of Cockpit is not installed on {{#strong}}{{host}}{{/strong}}.</p>\\n</div>\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" translatable=\\\"yes\\\">Close</button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/lib/machine-not-supported.html\n// module id = 22\n// module chunks = 0 2","module.exports = \"<div class=\\\"modal-header\\\">\\n    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\"\\n        aria-hidden=\\\"true\\\">&times;</button>\\n    <h4 class=\\\"modal-title\\\" translatable=\\\"yes\\\">Synchronize users</h4>\\n</div>\\n\\n<div class=\\\"modal-body\\\">\\n    <p translatable=\\\"yes\\\">Select the users that you would like to be synchronized with {{#strong}}{{host}}{{/strong}}</p>\\n\\n{{#perm_failed}}\\n    <div class=\\\"alert alert-danger dialog-error\\\">\\n        <span class=\\\"fa fa-exclamation-triangle\\\"></span>\\n        <span translatable=\\\"yes\\\">Error loading users: {{perm_failed}}</span>\\n    </div>\\n{{/perm_failed}}\\n\\n{{^perm_failed}}\\n    <div id=\\\"sync-users\\\">\\n        <table class=\\\"table\\\">\\n        <tbody>\\n        {{^users}}\\n            <tr>\\n                  <td>\\n                    <div class=\\\"center-spinner\\\">\\n                        <div class=\\\"spinner spinner-lg\\\"></div>\\n                    </div>\\n                  </td>\\n            </tr>\\n        {{/users}}\\n\\n        {{#users}}\\n              <tr>\\n                  <td><input type=\\\"checkbox\\\" name=\\\"{{username}}\\\" {{#checked}}checked=checked{{/checked}} /></td>\\n                  <td>{{username}}</td>\\n                  <td>{{name}}</td>\\n                  <td>&#8226;&#8226;&#8226;&#8226;&#8226;</td>\\n                  <td>{{formated_groups}}</td>\\n              </tr>\\n        {{/users}}\\n        </tbody>\\n        </table>\\n    </div>\\n\\n    {{#needs_auth}}\\n    <div>\\n        {{#needs_root}}\\n        <p translatable=\\\"yes\\\">You are connected to {{#strong}}{{host}}{{/strong}}, however in order to synchronize users, a user with superuser privileges is required.</p>\\n        {{/needs_root}}\\n        {{^needs_root}}\\n        <p translatable=\\\"yes\\\">In order to synchronize users, you need to log in to {{#strong}}{{host}}{{/strong}}.</p>\\n        {{/needs_root}}\\n        <table class=\\\"form-table-ct\\\">\\n            <tr>\\n                <td translatable=\\\"yes\\\">User name</td>\\n                <td>\\n                    <input class=\\\"form-control\\\" id=\\\"sync-username\\\" type=\\\"text\\\" />\\n                </td>\\n            </tr>\\n            {{#allows_password}}\\n            <tr>\\n                <td translatable=\\\"yes\\\">Password</td>\\n                <td>\\n                    <input class=\\\"form-control\\\" id=\\\"sync-password\\\" type=\\\"password\\\" />\\n                </td>\\n            </tr>\\n            {{/allows_password}}\\n        </table>\\n    </div>\\n    {{/needs_auth}}\\n{{/perm_failed}}\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" translatable=\\\"yes\\\">Cancel</button>\\n    <button class=\\\"btn btn-primary disabled\\\" translatable=\\\"yes\\\">Synchronize</button>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/lib/machine-sync-users.html\n// module id = 23\n// module chunks = 0 2","module.exports = \"<div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" translatable=\\\"yes\\\">Unknown Host Key</h4>\\n</div>\\n<div id=\\\"add-unknown-host\\\" class=\\\"modal-body\\\">\\n    {{#key}}\\n        <p translatable=\\\"yes\\\">The authenticity of host {{#strong}}{{host}}{{/strong}} can't be established. Are you sure you want to continue connecting?</p>\\n        <div>\\n        <table class=\\\"form-table-ct\\\">\\n            <tr>\\n                <td translatable=\\\"yes\\\">Fingerprint</td>\\n                <td><pre class=\\\"machine-key\\\">{{key}} </pre></td>\\n            </tr>\\n        </table>\\n        </div>\\n    {{/key}}\\n</div>\\n\\n<div class=\\\"modal-footer\\\">\\n    <button class=\\\"btn btn-default\\\" data-dismiss=\\\"modal\\\" translatable=\\\"yes\\\">Close</button>\\n\\n    {{#key}}\\n        <button class=\\\"btn btn-primary\\\" translatable=\\\"yes\\\">Connect</button>\\n    {{/key}}\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/lib/machine-unknown-hostkey.html\n// module id = 24\n// module chunks = 0 2","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar phantom_checkpoint = phantom_checkpoint || function () { };\n\n(function() {\n    \"use strict\";\n\n    var $ = require(\"jquery\");\n    var cockpit = require(\"cockpit\");\n\n    var base_index = require(\"./base_index\");\n\n    var _ = cockpit.gettext;\n\n    var shell_embedded = window.location.pathname.indexOf(\".html\") !== -1;\n\n    function MachinesIndex(index_options, machines, loader, mdialogs) {\n\n        if (!index_options)\n            index_options = {};\n\n        index_options.navigate = function (state, sidebar) {\n            return navigate(state, sidebar);\n        };\n        var index = base_index.new_index_from_proto(index_options);\n\n        /* Restarts */\n        $(index).on(\"expect_restart\", function (ev, host) {\n            loader.expect_restart(host);\n        });\n\n        /* Disconnection Dialog */\n        var watchdog_problem = null;\n        $(index).on(\"disconnect\", function (ev, problem) {\n            watchdog_problem = problem;\n            show_disconnected();\n        });\n\n        /* Is troubleshooting dialog open */\n        var troubleshooting = false;\n\n        /* Reconnect button */\n        $(\"#machine-reconnect\").on(\"click\", function(ev) {\n            if (watchdog_problem) {\n                cockpit.sessionStorage.clear();\n                window.location.reload(true);\n            } else {\n                navigate(null, true);\n            }\n        });\n\n        /* Troubleshoot pause navigation */\n        $(\"#troubleshoot-dialog\").on(\"show.bs.modal\", function(ev) {\n            troubleshooting = true;\n        });\n\n        /* Troubleshoot dialog close */\n        $(\"#troubleshoot-dialog\").on(\"hide.bs.modal\", function(ev) {\n            troubleshooting = false;\n            navigate(null, true);\n        });\n\n        /* Navigation */\n        var ready = false;\n        function on_ready() {\n            ready = true;\n            index.ready();\n        }\n\n        /* When the machine list is ready we start processing navigation */\n        $(machines)\n            .on(\"ready\", on_ready)\n            .on(\"added updated\", function(ev, machine) {\n                if (!machine.visible)\n                    index.frames.remove(machine);\n                else if (machine.problem)\n                    index.frames.remove(machine);\n\n                update_machines();\n                if (ready)\n                    navigate();\n            })\n            .on(\"removed\", function(ev, machine) {\n                index.frames.remove(machine);\n                update_machines();\n            });\n\n        if (machines.ready)\n            on_ready();\n\n        /* When only one machine this operates as a link */\n        $(\"#machine-link\").on(\"click\", function(ev) {\n            if (machines.list.length == 1) {\n                index.jump({ host: machines.list[0].address, sidebar: true, component: \"\" });\n                return false;\n            }\n        });\n\n        function show_disconnected() {\n            var current_frame = index.current_frame();\n\n            if (current_frame)\n                $(current_frame).hide();\n\n            $(\".curtains-ct .spinner\").toggle(false);\n            $(\"#machine-reconnect\").toggle(true);\n            $(\"#machine-troubleshoot\").toggle(false);\n            $(\".curtains-ct i\").toggle(true);\n            $(\".curtains-ct h1\").text(_(\"Disconnected\"));\n            $(\".curtains-ct p\").text(cockpit.message(watchdog_problem));\n            $(\".curtains-ct\").show();\n            $(\"#navbar-dropdown\").addClass(\"disabled\");\n            phantom_checkpoint();\n        }\n\n        /* Handles navigation */\n        function navigate(state, reconnect) {\n            var machine;\n\n            /* If this is a watchdog problem or we are troubleshooting\n             * let the dialog handle it */\n            if (watchdog_problem || troubleshooting)\n                return;\n\n            /* phantomjs has a problem retrieving state, so we allow it to be passed in */\n            if (!state)\n                state = index.retrieve_state();\n            machine = machines.lookup(state.host);\n\n            /* No such machine */\n            if (!machine) {\n                machine = {\n                    key: state.host,\n                    address: state.host,\n                    label: state.host,\n                    state: \"failed\",\n                    problem: \"not-found\",\n                };\n\n            /* Asked to reconnect to the machine */\n            } else if (!machine.visible) {\n                machine.state = \"failed\";\n                machine.problem = \"not-found\";\n            } else if (reconnect && machine.state !== \"connected\") {\n                loader.connect(state.host);\n            }\n\n            var compiled = compile(machine);\n            if (machine.manifests && !state.component)\n                state.component = choose_component(state, compiled);\n\n            update_navbar(machine, state, compiled);\n            update_sidebar(machine, state, compiled);\n            update_frame(machine, state, compiled);\n\n            index.recalculate_layout();\n\n            /* Just replace the state, and URL */\n            index.jump(state, true);\n        }\n\n        function choose_component(state, compiled) {\n            var item, menu_items;\n            var single_host = machines.list.length <= 1;\n            var dashboards = compiled.ordered(\"dashboard\");\n\n            if (shell_embedded)\n                state.sidebar = true;\n\n            /* See if we should show a dashboard */\n            if (!state.sidebar && dashboards.length > 0) {\n                item = dashboards[0];\n                /* Don't chose a dashboard as a single host unless\n                 * it specifically supports that.\n                 */\n                if (item && (!single_host || item.wants !== \"multiple-machines\"))\n                    return item.path;\n                else\n                    item = null;\n            }\n\n            /* See if we can find something with currently selected label */\n            var label = $(\"#sidebar li.active a\").text();\n            if (label) {\n                item = compiled.search(\"label\", label);\n                if (item)\n                    return item.path;\n            }\n\n            /* Go for the first item */\n            menu_items = compiled.ordered(\"menu\");\n            if (menu_items.length > 0 && menu_items[0]) {\n                return menu_items[0].path;\n\n            /* If there is no menu items use a dashboard */\n            } else if (dashboards.length > 0) {\n                item = dashboards[0];\n                if (item) {\n                    state.sidebar = false;\n                    return item.path;\n                }\n            }\n\n            return \"system\";\n        }\n\n        function update_navbar(machine, state, compiled) {\n            $(\".dashboard-link\").each(function() {\n                var el = $(this);\n                el.toggleClass(\"active\", el.attr(\"data-component\") === state.component);\n            });\n\n            var hide;\n            if (machine && machine.static_hostname) {\n                hide = $(\".dashboard-link\").length < 2 && machines.list.length < 2;\n                $('#content-navbar').toggleClass(\"hidden\", hide);\n            } else {\n                $('#content-navbar').toggleClass(\"hidden\", false);\n            }\n\n            var item = compiled.items[state.component];\n            if (item && item.section == \"dashboard\") {\n                delete state.sidebar;\n                machine = null;\n            }\n\n            $(\"#machine-avatar\").attr(\"src\", machine && machine.avatar ? encodeURI(machine.avatar) :\n                                                \"../shell/images/server-small.png\");\n\n            var label;\n            if (machine) {\n                label = machine.label;\n            } else if (machines.list.length == 1) {\n                label = machines.list[0].label;\n            } else {\n                label = _(\"Machines\");\n            }\n            $(\"#machine-link span\").text(label);\n\n            var color;\n            if (machines.list.length == 1 || !machine)\n                color = \"transparent\";\n            else\n                color = machine.color || \"\";\n            $(\"#machine-color\").css(\"border-left-color\", color);\n\n            $(\"#machine-dropdown\").toggleClass(\"active\", !!machine);\n\n            /* Decide when to show the sidebar */\n            var sidebar = $(\"#sidebar\");\n\n            if (machine && machine.state == \"connected\")\n                sidebar.show();\n            else\n                sidebar.hide();\n        }\n\n        function update_sidebar(machine, state, compiled) {\n            function links(component) {\n                return $(\"<li>\")\n                    .toggleClass(\"active\", state.component === component.path)\n                    .append($(\"<a>\")\n                        .attr(\"href\", index.href({ host: machine.address, component: component.path }))\n                        .text(component.label));\n            }\n\n            var menu = compiled.ordered(\"menu\").map(links);\n            $(\"#sidebar-menu\").empty().append(menu);\n\n            var tools = compiled.ordered(\"tools\").map(links);\n            $(\"#sidebar-tools\").empty().append(tools);\n            $('#tools-panel li.active').parents('#tools-panel').collapse('show');\n        }\n\n        function update_title(label, machine) {\n            if (label)\n                label += \" - \";\n            else\n                label = \"\";\n            var suffix = index.default_title;\n            if (machine && machine.label)\n                suffix = machine.label;\n            document.title = label + suffix;\n        }\n\n        function update_frame(machine, state, compiled) {\n            var title, message, connecting, restarting;\n            var current_frame = index.current_frame();\n\n            if (machine.state != \"connected\") {\n                $(current_frame).hide();\n                current_frame = null;\n                index.current_frame(current_frame);\n\n                connecting = (machine.state == \"connecting\");\n                if (machine.restarting) {\n                    title = _(\"The machine is restarting\");\n                    message = \"\";\n                } else if (connecting) {\n                    title = _(\"Connecting to the machine\");\n                    message = \"\";\n                } else {\n                    title = _(\"Couldn't connect to the machine\");\n                    if (machine.problem == \"not-found\") {\n                        message = _(\"Cannot connect to an unknown machine\");\n                    } else {\n                        var error = machine.problem || machine.state;\n                        if (error)\n                            message = cockpit.message(error);\n                        else\n                            message = \"\";\n                    }\n                }\n\n                if (!machine.restarting && mdialogs.needs_troubleshoot(machine)) {\n                    $(\"#machine-troubleshoot\").off()\n                        .on(\"click\", function () {\n                            mdialogs.troubleshoot(\"troubleshoot-dialog\", machine);\n                        });\n                    $(\"#machine-troubleshoot\").show();\n                } else {\n                    $(\"#machine-troubleshoot\").hide();\n                }\n\n                restarting = !!machine.restarting;\n                $(\".curtains-ct\").show();\n                $(\".curtains-ct .spinner\").toggle(connecting || restarting);\n                $(\"#machine-reconnect\").toggle(!connecting && machine.problem != \"not-found\");\n                $(\".curtains-ct i\").toggle(!connecting && !restarting);\n                $(\".curtains-ct h1\").text(title);\n                $(\".curtains-ct p\").text(message);\n\n                $(\"#machine-spinner\").hide();\n\n                update_title(null, machine);\n\n                /* Fall through when connecting, and allow frame to load at same time*/\n                if (!connecting)\n                    return;\n            }\n\n            var hash = state.hash;\n            var component = state.component;\n\n            /* Old cockpit packages, used to be in shell/shell.html */\n            var compat;\n            if (machine && compiled.compat) {\n                compat = compiled.compat[component];\n                if (compat) {\n                    component = \"shell/shell\";\n                    hash = compat;\n                }\n            }\n\n            var frame;\n            if (component)\n                frame = index.frames.lookup(machine, component, hash);\n            if (frame != current_frame) {\n                $(current_frame).css('display', 'none');\n                index.current_frame(frame);\n            }\n\n            var label, item;\n            if (machine.state == \"connected\") {\n                $(\".curtains-ct\").hide();\n                $(\"#machine-spinner\").toggle(frame && !$(frame).attr(\"data-ready\"));\n                $(frame).css('display', 'block');\n                item = compiled.items[state.component];\n                label = item ? item.label : \"\";\n                update_title(label, machine);\n            }\n\n            phantom_checkpoint();\n        }\n\n        function update_machines() {\n            $(\"#machine-dropdown .caret\")\n                .toggle(machines.list.length > 1);\n\n            var machine_link = $(\"machine-link\");\n            if (machines.list.length > 1)\n                machine_link.attr(\"data-toggle\", \"dropdown\");\n            else\n                machine_link.removeAttr(\"data-toggle\");\n\n            var list = $(\"#machine-dropdown ul\");\n            var links = machines.list.map(function(machine) {\n                var avatar = $(\"<img>\").addClass(\"machine-avatar\")\n                            .attr(\"src\", encodeURI(machine.avatar));\n                var text = $(\"<span>\").text(machine.label);\n                return $(\"<li role='presentation'>\")\n                    .css(\"border-left-color\", machine.color || \"\")\n                    .append($(\"<a>\")\n                        .attr(\"role\", \"menuitem\")\n                        .attr(\"tabindex\", \"-1\")\n                        .attr(\"data-address\", machine.address)\n                        .attr(\"href\", index.href({ host: machine.address }, true))\n                        .append(avatar, text));\n                });\n            list.empty().append(links);\n        }\n\n        function compatibility(machine) {\n            if (!machine.manifests || machine.address === \"localhost\")\n                return null;\n\n            var shell = machine.manifests[\"shell\"] || { };\n            var menu = shell[\"menu\"] || { };\n            var tools = shell[\"tools\"] || { };\n\n            var mapping = { };\n\n            /* The following were included in shell/shell.html in old versions */\n            if (\"_host_\" in menu)\n                mapping[\"system/host\"] = \"/server\";\n            if (\"_init_\" in menu)\n                mapping[\"system/init\"] = \"/services\";\n            if (\"_network_\" in menu)\n                mapping[\"network/interfaces\"] = \"/networking\";\n            if (\"_storage_\" in menu)\n                mapping[\"storage/devices\"] = \"/storage\";\n            if (\"_users_\" in tools)\n                mapping[\"users/local\"] = \"/accounts\";\n\n            /* For Docker we have to guess ... some heuristics */\n            if (\"_storage_\" in menu || \"_init_\" in menu)\n                mapping[\"docker/containers\"] = \"/containers\";\n\n            return mapping;\n        }\n\n        function compile(machine) {\n            var compiled = base_index.new_compiled();\n            compiled.load(machine.manifests, \"tools\");\n            compiled.load(machine.manifests, \"dashboard\");\n            compiled.load(machine.manifests, \"menu\");\n            compiled.compat = compatibility(machine);\n            return compiled;\n        }\n\n        cockpit.transport.wait(function() {\n            index.start();\n        });\n    }\n\n    function SimpleIndex(index_options) {\n        if (!index_options)\n            index_options = {};\n\n        index_options.navigate = function (state, sidebar) {\n            return navigate(state, sidebar);\n        };\n        var default_title = index_options.default_title || \"Cockpit\";\n        var index = base_index.new_index_from_proto(index_options);\n        var compiled = base_index.new_compiled();\n\n        compiled.load(cockpit.manifests, \"dashboard\");\n\n        /* Disconnection Dialog */\n        var watchdog_problem = null;\n        $(index).on(\"disconnect\", function (ev, problem) {\n            watchdog_problem = problem;\n            show_disconnected();\n        });\n\n        /* Reconnect button */\n        $(\"#machine-reconnect\").on(\"click\", function(ev) {\n            cockpit.sessionStorage.clear();\n            window.location.reload(true);\n        });\n\n        function show_disconnected() {\n            var current_frame = index.current_frame();\n            if (current_frame)\n                $(current_frame).hide();\n\n            $(\".curtains-ct .spinner\").toggle(false);\n            $(\"#machine-reconnect\").toggle(true);\n            $(\".curtains-ct i\").toggle(true);\n            $(\".curtains-ct h1\").text(_(\"Disconnected\"));\n            $(\".curtains-ct p\").text(cockpit.message(watchdog_problem));\n            $(\".curtains-ct\").show();\n            $(\"#navbar-dropdown\").addClass(\"disabled\");\n            phantom_checkpoint();\n        }\n\n        index.ready();\n\n        /* Handles navigation */\n        function navigate(state, reconnect) {\n            var dashboards = compiled.ordered(\"dashboard\");\n\n            /* If this is a watchdog problem or we are troubleshooting\n             * let the dialog handle it */\n            if (watchdog_problem)\n                return;\n\n            /* phantomjs has a problem retrieving state, so we allow it to be passed in */\n            if (!state)\n                state = index.retrieve_state();\n\n            if (!state.component && dashboards.length > 0) {\n                state.component = dashboards[0].path;\n            }\n            update_navbar(state);\n            update_frame(state);\n\n            index.recalculate_layout();\n\n            /* Just replace the state, and URL */\n            index.jump(state, true);\n        }\n\n        function update_navbar(state) {\n            $(\".dashboard-link\").each(function() {\n                var el = $(this);\n                el.toggleClass(\"active\", el.attr(\"data-component\") === state.component);\n            });\n\n            var item = compiled.items[state.component];\n            if (item && item.section == \"dashboard\")\n                delete state.sidebar;\n\n            $(\"#machine-link span\").text(default_title);\n            if ($(\".dashboard-link\").length < 2)\n                $('#content-navbar').toggleClass(\"hidden\", true);\n        }\n\n        function update_title(label) {\n            if (label)\n                label += \" - \";\n            else\n                label = \"\";\n            document.title = label + default_title;\n        }\n\n        function update_frame(state) {\n            var current_frame = index.current_frame();\n\n            var hash = state.hash;\n            var component = state.component;\n\n            var frame;\n            if (component)\n                frame = index.frames.lookup(null, component, hash);\n            if (frame != current_frame) {\n                $(current_frame).css('display', 'none');\n                index.current_frame(frame);\n            }\n\n            var label, item;\n            $(frame).css('display', 'block');\n            item = compiled.items[state.component];\n            label = item ? item.label : \"\";\n            update_title(label);\n\n            phantom_checkpoint();\n        }\n\n        cockpit.transport.wait(function() {\n            index.start();\n        });\n    }\n\n    module.exports = {\n        simple_index: function (options) {\n            return new SimpleIndex(options);\n        },\n        machines_index: function (options, machines_ins, loader, mdialogs) {\n            return new MachinesIndex(options, machines_ins, loader, mdialogs);\n        }\n    };\n\n    function message_queue(event) {\n        window.messages.push(event);\n    }\n\n    /* When we're being loaded into the index window we have additional duties */\n    if (document.documentElement.getAttribute(\"class\") === \"index-page\") {\n        /* Indicates to child frames that we are a cockpit1 router frame */\n        window.name = \"cockpit1\";\n\n        /* The same thing as above, but compatibility with old cockpit */\n        window.options = { sink: true, protocol: \"cockpit1\" };\n\n        /* While the index is initializing, snag any messages we receive from frames */\n        window.messages = [ ];\n\n        window.messages.cancel = function() {\n            window.removeEventListener(\"message\", message_queue, false);\n            window.messages = null;\n        };\n\n        window.addEventListener(\"message\", message_queue, false);\n    }\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/shell/indexes.js\n// module id = 25\n// module chunks = 0 1 2","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2015 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar phantom_checkpoint = phantom_checkpoint || function () { };\n\n(function() {\n    \"use strict\";\n\n    var $ = require(\"jquery\");\n    var cockpit = require(\"cockpit\");\n\n    var shell_embedded = window.location.pathname.indexOf(\".html\") !== -1;\n    var _ = cockpit.gettext;\n\n    function Frames(index) {\n        var self = this;\n\n        /* Lists of frames, by host */\n        var iframes = { };\n\n        function remove_frame(frame) {\n            $(frame.contentWindow).off();\n            $(frame).remove();\n        }\n        self.remove = function remove(machine) {\n            var address = machine.address;\n            if (!address)\n                address = \"localhost\";\n            var list = iframes[address];\n            if (list) {\n                delete iframes[address];\n                $.each(list, function(i, frame) {\n                    remove_frame(frame);\n                });\n            }\n        };\n\n        function frame_ready(frame, count) {\n            var ready = false;\n\n            window.clearTimeout(frame.timer);\n            frame.timer = null;\n\n            try {\n                ready = $(\"body\", frame.contentWindow.document).is(\":visible\");\n            } catch(ex) {\n                ready = true;\n            }\n\n            if (!count)\n                count = 0;\n            count += 1;\n            if (count > 50)\n                ready = true;\n\n            if (ready) {\n                if (frame.getAttribute(\"data-ready\") != \"1\") {\n                    frame.setAttribute(\"data-ready\", \"1\");\n                    if (count > 0)\n                        index.navigate();\n                }\n            } else {\n                frame.timer = window.setTimeout(function() {\n                    frame_ready(frame, count + 1);\n                }, 100);\n            }\n        }\n\n        self.lookup_component_hash = function(machine, component) {\n            var address, list, frame, src;\n\n            if (machine)\n                address = machine.address;\n\n            if (!address)\n                address = \"localhost\";\n\n            list = iframes[address];\n            if (list)\n                frame = list[component];\n\n            if (frame) {\n                src = frame.getAttribute('src');\n                if (src)\n                    return src.split(\"#\")[1];\n            }\n        };\n\n        self.lookup = function lookup(machine, component, hash) {\n            var host;\n            var address;\n            var new_frame = false;\n\n            if (machine) {\n                host = machine.connection_string;\n                address = machine.address;\n            }\n\n            if (!host)\n                host = \"localhost\";\n\n            if (!address)\n                address = host;\n\n            var list = iframes[address];\n            if (!list)\n                iframes[address] = list = { };\n\n            var name = \"cockpit1:\" + host + \"/\" + component;\n            var frame = list[component];\n            if (frame && frame.getAttribute(\"name\") != name) {\n                remove_frame(frame);\n                frame = null;\n            }\n\n            var wind, src;\n\n            /* A preloaded frame */\n            if (!frame) {\n                wind = window.frames[name];\n                if (wind)\n                    frame = wind.frameElement;\n                if (frame) {\n                    src = frame.getAttribute('src');\n                    frame.url = src.split(\"#\")[0];\n                    list[component] = frame;\n                }\n            }\n\n            /* Need to create a new frame */\n            if (!frame) {\n                new_frame = true;\n                frame = document.createElement(\"iframe\");\n                frame.setAttribute(\"class\", \"container-frame\");\n                frame.setAttribute(\"name\", name);\n                frame.style.display = \"none\";\n\n                var base, checksum;\n                if (machine)\n                    checksum = machine.checksum;\n                if (host === \"localhost\")\n                    base = \"..\";\n                else if (checksum)\n                    base = \"../../\" + checksum;\n                else\n                    base = \"../../@\" + host;\n\n                frame.url = base + \"/\" + component;\n                if (component.indexOf(\"/\") === -1)\n                    frame.url += \"/index\";\n                frame.url += \".html\";\n            }\n\n            if (!hash)\n                hash = \"/\";\n            src = frame.url + \"#\" + hash;\n            if (frame.getAttribute('src') != src)\n                frame.setAttribute('src', src);\n\n            /* Store frame only when fully setup */\n            if (new_frame) {\n                list[component] = frame;\n                $(\"#content\").append(frame);\n            }\n            frame_ready(frame);\n            return frame;\n        };\n    }\n\n    function Router(index) {\n        var self = this;\n\n        var unique_id = 0;\n        var origin = cockpit.transport.origin;\n        var source_by_seed = { };\n        var source_by_name = { };\n\n        cockpit.transport.filter(function(message, channel, control) {\n            var seed, source, pos;\n\n            /* Only control messages with a channel are forwardable */\n            if (control) {\n                if (control.channel !== undefined) {\n                    for (seed in source_by_seed)\n                        source_by_seed[seed].window.postMessage(message, origin);\n                } else if (control.command == \"hint\") {\n                    if (control.credential)\n                        index.authorize_changed(control.credential);\n                }\n\n            /* Forward message to relevant frame */\n            } else if (channel) {\n                pos = channel.indexOf('!');\n                if (pos !== -1) {\n                    seed = channel.substring(0, pos + 1);\n                    source = source_by_seed[seed];\n                    if (source) {\n                        source.window.postMessage(message, origin);\n                        return false; /* Stop delivery */\n                    }\n                }\n            }\n\n            /* Still deliver the message locally */\n            return true;\n        }, false);\n\n        function perform_jump(child, control) {\n            var current_frame = index.current_frame();\n            if (child !== window) {\n                if (!current_frame || current_frame.contentWindow != child)\n                    return;\n            }\n            var str = control.location || \"\";\n            if (str[0] != \"/\")\n                str = \"/\" + str;\n            if (control.host)\n                str = \"/@\" + encodeURIComponent(control.host) + str;\n            index.jump(str);\n        }\n\n        function perform_track(child) {\n            var hash;\n            var current_frame = index.current_frame();\n            /* Note that we ignore tracknig for old shell code */\n            if (current_frame && current_frame.contentWindow === child &&\n                child.name && child.name.indexOf(\"/shell/shell\") === -1) {\n                hash = child.location.hash;\n                if (hash.indexOf(\"#\") === 0)\n                    hash = hash.substring(1);\n                if (hash === \"/\")\n                    hash = \"\";\n                index.jump({ hash: hash });\n            }\n        }\n\n        function on_unload(ev) {\n            var source = source_by_name[ev.target.defaultView.name];\n            if (source)\n                unregister(source);\n        }\n\n        function on_hashchange(ev) {\n            var source = source_by_name[ev.target.name];\n            if (source)\n                perform_track(source.window);\n        }\n\n        function on_load(ev) {\n            var source = source_by_name[ev.target.contentWindow.name];\n            if (source)\n                perform_track(source.window);\n        }\n\n        function unregister(source) {\n            var child = source.window;\n            cockpit.kill(null, child.name);\n            var frame = child.frameElement;\n            if (frame)\n                frame.removeEventListener(\"load\", on_load);\n            child.removeEventListener(\"unload\", on_unload);\n            child.removeEventListener(\"hashchange\", on_hashchange);\n            delete source_by_seed[source.channel_seed];\n            delete source_by_name[source.name];\n        }\n\n        function register(child) {\n            var host, name = child.name || \"\";\n            if (name.indexOf(\"cockpit1:\") === 0)\n                host = name.substring(9).split(\"/\")[0];\n            if (!name || !host) {\n                console.warn(\"invalid child window name\", child, name);\n                return;\n            }\n\n            unique_id += 1;\n            var seed = (cockpit.transport.options[\"channel-seed\"] || \"undefined:\") + unique_id + \"!\";\n            var source = {\n                name: name,\n                window: child,\n                channel_seed: seed,\n                default_host: host,\n                inited: false,\n            };\n            source_by_seed[seed] = source;\n            source_by_name[name] = source;\n\n            var frame = child.frameElement;\n            frame.addEventListener(\"load\", on_load);\n            child.addEventListener(\"unload\", on_unload);\n            child.addEventListener(\"hashchange\", on_hashchange);\n\n            /*\n             * Setting the \"data-loaded\" attribute helps the testsuite\n             * know when it can switch into the frame and inject its\n             * own additions.\n             */\n            frame.setAttribute('data-loaded', '1');\n\n            perform_track(child);\n            phantom_checkpoint();\n\n            index.navigate();\n            return source;\n        }\n\n        function message_handler(event) {\n            if (event.origin !== origin)\n                return;\n\n            var data = event.data;\n            var child = event.source;\n            if (!child || typeof data !== \"string\")\n                return;\n\n            var source = source_by_name[child.name];\n            var control;\n\n            /* Closing the transport */\n            if (data.length === 0) {\n                if (source)\n                    unregister(source);\n                return;\n            }\n\n            /* A control message */\n            if (data[0] == '\\n') {\n                control = JSON.parse(data.substring(1));\n                if (control.command === \"init\") {\n                    if (source)\n                        unregister(source);\n                    source = register(child);\n                    if (source) {\n                        var reply = $.extend({ }, cockpit.transport.options,\n                            { command: \"init\", \"host\": source.default_host, \"channel-seed\": source.channel_seed }\n                        );\n                        child.postMessage(\"\\n\" + JSON.stringify(reply), origin);\n                        source.inited = true;\n\n                        /* If this new frame is not the current one, tell it */\n                        if (child.frameElement != index.current_frame())\n                            self.hint(child.frameElement.contentWindow, { \"hidden\": true });\n                    }\n\n                } else if (control.command === \"jump\") {\n                    perform_jump(child, control);\n                    return;\n\n                } else if (control.command === \"hint\") {\n                    if (control.hint == \"restart\") {\n                        /* watchdog handles current host for now */\n                        if (control.host != cockpit.transport.host)\n                            index.expect_restart(control.host);\n                    } else\n                        cockpit.hint(control.hint, control);\n                    return;\n                } else if (control.command == \"oops\") {\n                    index.show_oops();\n                    return;\n\n                /* Only control messages with a channel are forwardable */\n                } else if (control.channel === undefined) {\n                    return;\n\n                /* Add the child's group to all open channel messages */\n                } else if (control.command == \"open\") {\n                    control.group = child.name;\n                    data = \"\\n\" + JSON.stringify(control);\n                }\n            }\n\n            if (!source) {\n                console.warn(\"child frame \" + child.name + \" sending data without init\");\n                return;\n            }\n\n            /* Everything else gets forwarded */\n            cockpit.transport.inject(data, true);\n        }\n\n\n        self.start = function start(messages) {\n            window.addEventListener(\"message\", message_handler, false);\n            for (var i = 0, len = messages.length; i < len; i++)\n                message_handler(messages[i]);\n        };\n\n        self.hint = function hint(child, data) {\n            var message, source = source_by_name[child.name];\n            if (source && source.inited) {\n                data.command = \"hint\";\n                message = \"\\n\" + JSON.stringify(data);\n                source.window.postMessage(message, origin);\n            }\n        };\n    }\n\n    /*\n     * New instances of Index must be created by new_index_from_proto\n     * and the caller must include a navigation function in the given\n     * prototype. That function will be called by by Frames and\n     * Router to actually perform any navigation action.\n     *\n     * As a convenience, common menu items can be setup by adding the\n     * selector to be used to hook them up. The accepted selectors\n     * are.\n     * oops_sel, logout_sel, language_sel, brand_sel, about_sel,\n     * user_sel, account_sel\n     *\n     * Emits \"disconnect\" and \"expect_restart\" signals, that should be\n     * handled by the caller.\n     */\n    function Index() {\n        var self = this;\n        var current_frame;\n\n        if (typeof self.navigate !== \"function\")\n            throw \"Index requires a prototype with a navigate function\";\n\n        self.frames = new Frames(self);\n        self.router = new Router(self);\n\n        /* Watchdog for disconnect */\n        var watchdog = cockpit.channel({ \"payload\": \"null\" });\n        $(watchdog).on(\"close\", function(event, options) {\n            var watchdog_problem = options.problem || \"disconnected\";\n            console.warn(\"transport closed: \" + watchdog_problem);\n            $(self).triggerHandler(\"disconnect\", watchdog_problem);\n        });\n\n        /* Handles an href link as seen below */\n        $(document).on(\"click\", \"a[href]\", function(ev) {\n            var a = this;\n            if (window.location.host === a.host) {\n                self.jump(a.getAttribute('href'));\n                ev.preventDefault();\n                phantom_checkpoint();\n            }\n        });\n\n        if (window.navigator.userAgent.indexOf(\"PhantomJS\") == -1) {\n            var old_onerror = window.onerror;\n            window.onerror = function cockpit_error_handler(msg, url, line) {\n                self.show_oops();\n                phantom_checkpoint();\n                if (old_onerror)\n                    return old_onerror(msg, url, line);\n                return false;\n            };\n        }\n\n        /*\n         * Navigation is driven by state objects, which are used with pushState()\n         * and friends. The state is the canonical navigation location, and not\n         * the URL. Only when no state has been pushed or we are arriving from\n         * a link, do we parse the state from the URL.\n         *\n         * Each state object has:\n         *   host: a machine host\n         *   component: the stripped component to load\n         *   hash: the hash to pass to the component\n         *   sidebar: set to true to hint that we want a component with a sidebar\n         *\n         * If state.sidebar is set, and no component has yet been chosen for the\n         * given state, then we try to find one that would show a sidebar.\n         */\n\n        /* Encode navigate state into a string\n         * If with_root is true the configured\n         * url root will be added to the generated\n         * url. with_root should be used when\n         * navigating to a new url or updating\n         * history, but is not needed when simply\n         * generating a string for a link.\n         */\n        function encode(state, sidebar, with_root) {\n            var path = [];\n            if (state.host && (sidebar || state.host !== \"localhost\"))\n                path.push(\"@\" + state.host);\n            if (state.component)\n                path.push.apply(path, state.component.split(\"/\"));\n            var string = cockpit.location.encode(path, null, with_root);\n            if (state.hash && state.hash !== \"/\")\n                string += \"#\" + state.hash;\n            return string;\n        }\n\n        /* Decodes navigate state from a string */\n        function decode(string) {\n            var state = { version: \"v1\", hash: \"\" };\n            var pos = string.indexOf(\"#\");\n            if (pos !== -1) {\n                state.hash = string.substring(pos + 1);\n                string = string.substring(0, pos);\n            }\n            if (string[0] != '/')\n                string = \"/\" + string;\n            var path = cockpit.location.decode(string);\n            if (path[0] && path[0][0] == \"@\") {\n                state.host = path.shift().substring(1);\n                state.sidebar = true;\n            } else {\n                state.host = \"localhost\";\n            }\n            if (path.length && path[path.length - 1] == \"index\")\n                path.pop();\n            state.component = path.join(\"/\");\n            return state;\n        }\n\n        function build_navbar() {\n            var navbar = $(\"#content-navbar\");\n\n            function links(component) {\n                var a = $(\"<a>\")\n                    .attr(\"href\", self.href({ host: \"localhost\", component: component.path }))\n                    .text(component.label);\n                return $(\"<li class='dashboard-link'>\")\n                    .attr(\"data-component\", component.path)\n                    .append(a);\n            }\n\n            if (shell_embedded) {\n                navbar.hide();\n            } else {\n                var local_compiled = new CompiledComponants();\n                local_compiled.load(cockpit.manifests, \"dashboard\");\n                navbar.append(local_compiled.ordered(\"dashboard\").map(links));\n            }\n        }\n\n        self.recalculate_layout = function() {\n            var topnav = $('#topnav');\n            var sidebar = $('#sidebar');\n            var content = $('#content');\n\n            var window_height = $(window).height();\n            var topnav_height = topnav.height();\n\n            var y = window_height - topnav_height;\n            $(current_frame).height(Math.floor(y));\n            sidebar.height(y);\n\n            var sidebar_width = sidebar.is(':visible') ? sidebar.outerWidth() : 0;\n            content.css(\"margin-left\", sidebar_width + \"px\");\n        };\n\n        self.retrieve_state = function() {\n            var state = window.history.state;\n            if (!state || state.version !== \"v1\") {\n                if (shell_embedded)\n                    state = decode(\"/\" + window.location.hash);\n                else\n                    state = decode(window.location.pathname + window.location.hash);\n            }\n            return state;\n        };\n\n        /* Jumps to a given navigate state */\n        self.jump = function (state, replace) {\n            if (typeof (state) === \"string\")\n                state = decode(state);\n\n            var current = self.retrieve_state();\n\n            /* Make sure we have the data we need */\n            if (!state.host)\n                state.host = current.host || \"localhost\";\n            if (!(\"component\" in state))\n                state.component = current.component || \"\";\n\n            var target;\n            var history = window.history;\n            var frame_change = (state.host !== current.host ||\n                                state.component !== current.component);\n\n            if (frame_change && !state.hash) {\n                state.hash = self.frames.lookup_component_hash(state.host,\n                                                               state.component);\n            }\n\n            if (shell_embedded)\n                target = window.location;\n            else\n                target = encode(state, null, true);\n\n            if (replace) {\n                history.replaceState(state, \"\", target);\n                return false;\n            }\n\n\n            if (frame_change || state.hash !== current.hash) {\n                history.pushState(state, \"\", target);\n                self.navigate(state, true);\n                return true;\n            }\n\n            return false;\n        };\n\n        /* Build an href for use in an <a> */\n        self.href = function (state, sidebar) {\n            return encode(state, sidebar);\n        };\n\n        self.show_oops = function () {\n            if (self.oops_sel)\n                $(self.oops_sel).show();\n        };\n\n        self.current_frame = function (frame) {\n            if (frame !== undefined) {\n                if (current_frame !== frame) {\n                    if (current_frame && current_frame.contentWindow)\n                        self.router.hint(current_frame.contentWindow, { \"hidden\": true });\n                    if (frame && frame.contentWindow)\n                        self.router.hint(frame.contentWindow, { \"hidden\": false });\n                }\n                current_frame = frame;\n            }\n            return current_frame;\n        };\n\n        self.start = function() {\n            /* window.messages is initialized in shell/bundle.js */\n            var messages = window.messages;\n            if (messages)\n                messages.cancel();\n            self.router.start(messages || []);\n        };\n\n        self.ready = function () {\n            $(window).on(\"popstate\", function(ev) {\n                self.navigate(ev.state, true);\n            });\n\n            $(window).on('resize', function () {\n                self.recalculate_layout();\n            });\n\n            build_navbar();\n            self.navigate();\n            cockpit.translate();\n            $(\"body\").show();\n        };\n\n        self.expect_restart = function (host) {\n            $(self).triggerHandler(\"expect_restart\", host);\n        };\n\n        self.authorize_changed = function(value) {\n            $(self.credential_sel).toggle(value != \"clear\");\n        };\n\n        /* Menu items */\n        /* The oops bar */\n        function setup_oops(id) {\n            var oops = $(id);\n            if (!oops)\n                return;\n            oops.children(\"a\").on(\"click\", function() {\n                $(\"#error-popup-title\").text(_(\"Unexpected error\"));\n                var details = _(\"Cockpit had an unexpected internal error. <br/><br/>You can try restarting Cockpit by pressing refresh in your browser. The javascript console contains details about this error (<b>Ctrl-Shift-J</b> in most browsers).\");\n                $(\"#error-popup-message\").html(details);\n                $('#error-popup').modal('show');\n            });\n        }\n\n        /* Branding */\n        function setup_brand(id, default_title) {\n            var os_release = JSON.parse(window.localStorage['os-release'] || \"{}\");\n\n            var style, elt = $(id)[0];\n            if (elt)\n                style = window.getComputedStyle(elt);\n            if (!style)\n                return;\n\n            var len, content = style.content;\n            if (content && content != \"none\" && content != \"normal\") {\n                len = content.length;\n                if ((content[0] === '\"' || content[0] === '\\'') &&\n                    len > 2 && content[len - 1] === content[0])\n                    content = content.substr(1, len - 2);\n                elt.innerHTML = cockpit.format(content, os_release) || default_title;\n                return $(elt).text();\n            }\n        }\n\n        /* Logout link */\n        function setup_logout(id) {\n            $(id).on(\"click\", function() {\n                cockpit.logout();\n            });\n        }\n\n        /* Display language dialog */\n        function setup_language(id) {\n            /*\n             * Note that we don't go ahead and load all the po files in order\n             * to produce this list. Perhaps we would include it somewhere in a\n             * separate automatically generated file. Need to see.\n             */\n            var manifest = cockpit.manifests[\"shell\"] || { };\n            $(\".display-language-menu\").toggle(!!manifest.locales);\n            var language = document.cookie.replace(/(?:(?:^|.*;\\s*)CockpitLang\\s*\\=\\s*([^;]*).*$)|^.*$/, \"$1\");\n            if (!language)\n                language = \"en-us\";\n            $.each(manifest.locales || { }, function(code, name) {\n                var el = $(\"<option>\").text(name).val(code);\n                if (code == language)\n                    el.attr(\"selected\", \"true\");\n                $(\"#display-language-list\").append(el);\n            });\n\n            $(\"#display-language-select-button\").on(\"click\", function(event) {\n                var code_to_select = $(\"#display-language-list\").val();\n                var cookie = \"CockpitLang=\" + encodeURIComponent(code_to_select) +\n                             \"; path=/; expires=Sun, 16 Jul 3567 06:23:41 GMT\";\n                document.cookie = cookie;\n                window.localStorage.setItem(\"cockpit.lang\", code_to_select);\n                window.location.reload(true);\n                return false;\n            });\n\n            $(id).on(\"shown.bs.modal\", function() {\n                $(\"display-language-list\").focus();\n                phantom_checkpoint();\n            });\n        }\n\n        /* About dialog */\n        function setup_about(id) {\n            $(cockpit.info).on(\"changed\", function() {\n                $(id).text(cockpit.info.version);\n                phantom_checkpoint();\n            });\n        }\n\n        /* Account link */\n        function setup_account(id, user) {\n            $(id).on(\"click\", function() {\n                self.jump({ host: \"localhost\", component: \"users\", hash: \"/\" + user.name });\n            }).show();\n        }\n\n        /* User information */\n        function setup_user(id, user) {\n            $(id).text(user.full_name || user.name || '???');\n\n            var is_root = (user.name == \"root\");\n            var is_not_root = (user.name && !is_root);\n            $('#deauthorize-item').toggle(is_not_root);\n        }\n\n        if (self.oops_sel)\n            setup_oops(self.oops_sel);\n\n        if (self.logout_sel)\n            setup_logout(self.logout_sel);\n\n        if (self.language_sel)\n            setup_language(self.language_sel);\n\n        var cal_title;\n        if (self.brand_sel) {\n            cal_title = setup_brand(self.brand_sel, self.default_title);\n            if (cal_title)\n                self.default_title = cal_title;\n        }\n\n        if (self.about_sel)\n            setup_about(self.about_sel);\n\n        if (self.user_sel || self.account_sel) {\n            cockpit.user().done(function (user) {\n                if (self.user_sel)\n                    setup_user(self.user_sel, user);\n                if (self.account_sel)\n                    setup_account(self.account_sel, user);\n            });\n        }\n    }\n\n    function CompiledComponants() {\n        var self = this;\n        self.items = {};\n\n        self.load = function(manifests, section) {\n            $.each(manifests || { }, function(name, manifest) {\n                $.each(manifest[section] || { }, function(prop, info) {\n                    var item = {\n                        section: section,\n                        label: cockpit.gettext(info.label) || prop,\n                        order: info.order === undefined ? 1000 : info.order,\n                        wants: info.wants\n                    };\n                    if (info.path)\n                        item.path = info.path.replace(/\\.html$/, \"\");\n                    else\n                        item.path = name + \"/\" + prop;\n                    if (item.path.indexOf(\"/\") === -1)\n                        item.path = name + \"/\" + item.path;\n                    if (item.path.slice(-6) == \"/index\")\n                        item.path = item.path.slice(0, -6);\n                    self.items[item.path] = item;\n                });\n            });\n        };\n\n\n        self.ordered = function(section) {\n            var x, list = [];\n            for (x in self.items) {\n                if (!section || self.items[x].section === section)\n                    list.push(self.items[x]);\n            }\n            list.sort(function(a, b) { return a.order - b.order; });\n            return list;\n        };\n\n        self.search = function(prop, value) {\n            var x;\n            for (x in self.items) {\n                if (self.items[x][prop] === value)\n                    return self.items[x];\n            }\n        };\n    }\n\n    function follow(arg) {\n        /* A promise of some sort */\n        if (arguments.length == 1 && typeof arg.then == \"function\") {\n            arg.then(function() { console.log.apply(console, arguments); },\n                     function() { console.error.apply(console, arguments); });\n            if (typeof arg.stream == \"function\")\n                arg.stream(function() { console.log.apply(console,arguments); });\n        }\n    }\n\n    var zz_value;\n\n    /* For debugging utility in the index window */\n    Object.defineProperties(window, {\n        cockpit: { value: cockpit },\n        zz: {\n            get: function() { return zz_value; },\n            set: function(val) { zz_value = val; follow(val); }\n        }\n    });\n\n    module.exports = {\n        new_index_from_proto: function (proto) {\n            var o = new Object(proto);\n            Index.call(o);\n            return o;\n        },\n\n        new_compiled: function () {\n            return new CompiledComponants();\n        },\n    };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/shell/base_index.js\n// module id = 26\n// module chunks = 0 1 2","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    var $ = require(\"jquery\");\n    var cockpit = require(\"cockpit\");\n\n    var machis = require(\"machines\");\n    var mdialogs = require(\"machine-dialogs\");\n\n    var indexes = require(\"./indexes\");\n\n    var default_title = \"Cockpit\";\n    var manifest = cockpit.manifests[\"shell\"] || { };\n    if (manifest.title)\n        default_title = manifest.title;\n\n    var options = {\n        brand_sel: \"#index-brand\",\n        logout_sel: \"#go-logout\",\n        oops_sel: \"#navbar-oops\",\n        language_sel: \"#display-language\",\n        about_sel: \"#about-version\",\n        default_title: default_title\n    };\n    var machines = machis.instance();\n    machines.overlay(\"localhost\", { \"label\": default_title,\n                                    \"static_hostname\": true });\n\n    var loader = machis.loader(machines, true);\n    var dialogs = mdialogs.new_manager(machines, {\n        \"no-cockpit\": \"not-supported\",\n        \"not-supported\": \"not-supported\",\n        \"protocol-error\": \"not-supported\",\n        \"authentication-not-supported\": \"change-auth\",\n        \"authentication-failed\": \"change-auth\",\n        \"no-forwarding\": \"change-auth\",\n        \"unknown-hostkey\": \"unknown-hostkey\",\n        \"invalid-hostkey\": \"invalid-hostkey\",\n        \"no-host\": \"change-port\",\n    });\n\n    indexes.machines_index(options, machines, loader, dialogs);\n\n    var login_data = cockpit.localStorage.getItem('login-data', true);\n    if (login_data) {\n        var data = JSON.parse(login_data);\n        $(\"#content-user-name\").text(data[\"displayName\"]);\n    }\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/shell/index-stub.js\n// module id = 32\n// module chunks = 2"],"sourceRoot":""}