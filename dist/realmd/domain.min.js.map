{"version":3,"sources":["webpack:///realmd/domain.min.js","webpack:///webpack/bootstrap 1d34af46bb55a736c33c","webpack:///../pkg/realmd/operation.js","webpack:///../~/webpack/buildin/module.js","webpack:///external \"jQuery\"","webpack:///external \"cockpit\"","webpack:///../pkg/lib/patterns.js","webpack:///../pkg/realmd/operation.html"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","instance","realmd","mode","realm","button","auth_changed","item","auth","attr","$","text","parts","split","type","owner","hide","show","check","name","dfd","Deferred","undefined","val","always","MANAGER","PROVIDER","reject","error","path","result","this","state","arguments","empty","message","kerberos","proxy","KERBEROS","on","update","REALM","wait","resolve","cockpit","format","_","Error","checking","promise","checked","ensure","find_detail","field","Details","forEach","value","add_choice","choice","i","length","supported","append","list","first","count","toggle","operation","prop","server","valid","Name","removeAttr","placeholder","SuggestedAdministrator","SupportedJoinCredentials","push","credentials","creds","secret","variant","utf8_encoder","encode","perform","unique","busy","fail","done","options","computer_ou","diagnostics","sub","subscribe","member","iface","signal","args","Deconfigure","ex","console","log","dialog","modal","remove","cancel","SERVICE","jQuery","parseHTML","selector","context","fn","init","prototype","extend","ev","which","timeout","window","clearTimeout","setTimeout","title","label","setup","update_realms","joined","realms","Configured","map","x","join","element","dbus","watch","proxies","permission","problem","addClass","tooltip","container","update_realm_privileged","update_privileged","user","admin","appendTo","close","gettext","find","webpackPolyfill","deprecate","paths","children","unique_number","Date","clear_errors","sel","removeClass","off","field_error","target","next","refresh","wrapper","parent","is","insertBefore","selectpicker","hasClass","css","global_error","alert","toString","prependTo","warn","footer","display_errors","errors","isArray","any","DialogWait","handle","disabled","clear_wait","data","ctl","display_wait","restore","cancelled","arg","before","cancellation","controls","add","not","each","apply","progress","onoff_refresh","andSelf","filter","el","input","self","onoff","buttons","document","createTextNode","onoff_change","onoff_value","toggleClass","last","resize_flex","slider","flex","total","part","isNaN","update_value","check_overflow","offsetWidth","scrollWidth","setup_slider","Object","defineProperty","get","parseFloat","getAttribute","set","v","s","String","setAttribute","hasAttribute","toLowerCase","offset","left","hitx","offsetX","clientX","outerWidth","width","pageX","trigger","setup_sliders","action","Array","slice","addEventListener","ready","perm","denied_message","placement","allowed","allowed_key","html"],"mappings":"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","file":"realmd/domain.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var jQuery = __webpack_require__(3);\n\t    var cockpit = __webpack_require__(4);\n\t    __webpack_require__(5);\n\t\n\t    var _ = cockpit.gettext;\n\t\n\t    var MANAGER = \"/org/freedesktop/realmd\";\n\t\n\t    var SERVICE = \"org.freedesktop.realmd.Service\";\n\t    var PROVIDER = \"org.freedesktop.realmd.Provider\";\n\t    var KERBEROS = \"org.freedesktop.realmd.KerberosMembership\";\n\t    var REALM = \"org.freedesktop.realmd.Realm\";\n\t\n\t    function instance(realmd, mode, realm, button) {\n\t        var dialog = jQuery.parseHTML(__webpack_require__(6))[0];\n\t\n\t        /* Scope the jQuery selector to our dialog */\n\t        var $ = function(selector, context) {\n\t            return new jQuery.fn.init(selector, context || dialog);\n\t        };\n\t        $.fn = $.prototype = jQuery.fn;\n\t        jQuery.extend($, jQuery);\n\t\n\t        var operation = null;\n\t        var checking = null;\n\t        var checked = null;\n\t        var kerberos = null;\n\t\n\t        /* If in an operation first time cancel is clicked, cancel operation */\n\t        $(\".realms-op-cancel\").on(\"click\", function() {\n\t            if (!cancel())\n\t                $(dialog).modal('hide');\n\t        });\n\t\n\t        /* When we're hidden some other way, cancel any operations */\n\t        $(dialog).on(\"hide.bs.modal\", function() {\n\t            cancel();\n\t        });\n\t\n\t        $(\".realms-op-apply\").on(\"click\", perform);\n\t        $(\".realms-op-field\")\n\t            .on(\"keydown\", function(ev) {\n\t                if (ev.which == 13)\n\t                    perform();\n\t            });\n\t\n\t        $(dialog).on(\"click\", \".realms-op-more-diagnostics\", function() {\n\t            $(\".realms-op-error\").hide();\n\t            $(\".realms-op-diagnostics\").show();\n\t        });\n\t\n\t        var timeout = null;\n\t        $(\".realms-op-address\").on(\"keyup change\", function() {\n\t            if ($(\".realms-op-address\").val() != checked) {\n\t                $(\".realms-op-address-error\").hide();\n\t                window.clearTimeout(timeout);\n\t                timeout = window.setTimeout(check, 1000);\n\t            }\n\t        });\n\t\n\t        var auth = null;\n\t        function auth_changed(item) {\n\t            auth = item.attr('data-value');\n\t            $(\".realms-op-auth span\").text(item.text());\n\t            var parts = (auth || \"\").split(\"/\");\n\t            var type = parts[0];\n\t            var owner = parts[1];\n\t\n\t            $(\".realms-op-admin-row\").hide();\n\t            $(\".realms-op-admin-password-row\").hide();\n\t            $(\".realms-op-user-row\").hide();\n\t            $(\".realms-op-user-password-row\").hide();\n\t            $(\".realms-op-otp-row\").hide();\n\t\n\t            if (type == \"password\" && owner == \"administrator\") {\n\t                $(\".realms-op-admin-row\").show();\n\t                $(\".realms-op-admin-password-row\").show();\n\t            } else if (type == \"password\" && owner == \"user\") {\n\t                $(\".realms-op-user-row\").show();\n\t                $(\".realms-op-user-password-row\").show();\n\t            } else if (type == \"secret\") {\n\t                $(\".realms-op-otp-row\").show();\n\t            }\n\t        }\n\t\n\t        $(\".realms-op-auth\").on('click', 'li', function() {\n\t            auth_changed($(this));\n\t        });\n\t\n\t        var title, label;\n\t        if (mode == 'join') {\n\t            title = _(\"page-title\", \"Join a Domain\");\n\t            label = _(\"Join\");\n\t            $(\".realms-op-join-only-row\").show();\n\t            check(\"\");\n\t        } else {\n\t            title = _(\"page-title\", \"Leave Domain\");\n\t            label = _(\"Leave\");\n\t            $(\".realms-op-join-only-row\").hide();\n\t        }\n\t\n\t        $(\".realms-op-title\").text(title);\n\t        $(\".realms-op-apply\").text(label);\n\t        $(\".realms-op-field\").val(\"\");\n\t\n\t        function check(name) {\n\t            var dfd = $.Deferred();\n\t\n\t            if (name === undefined)\n\t                name = $(\".realms-op-address\").val();\n\t\n\t            if (name)\n\t                $(\".realms-op-address-spinner\").show();\n\t\n\t            dfd.always(function() {\n\t                if (name)\n\t                    $(\".realms-op-address-spinner\").hide();\n\t            });\n\t\n\t            realmd.call(MANAGER, PROVIDER, \"Discover\", [ name, { } ])\n\t                .always(function() {\n\t\n\t                    if ($(\".realms-op-address\").val() != name) {\n\t                        dfd.reject();\n\t                        check();\n\t                        return;\n\t                    }\n\t\n\t                    var error, result = [], path;\n\t                    if (this.state() == \"rejected\") {\n\t                        error = arguments[0];\n\t                        $(\".realms-op-error\")\n\t                            .empty()\n\t                            .text(error.message);\n\t                        dfd.reject(error);\n\t                    }\n\t\n\t                    var message;\n\t                    if (arguments[0][1])\n\t                        result = arguments[0][1];\n\t                    path = result[0]; /* the first realm */\n\t\n\t                    if (!path) {\n\t                        if (name) {\n\t                            message = cockpit.format(_(\"Domain $0 could not be contacted\"), name);\n\t                            $(\".realms-op-address-error\").show().attr('title', message);\n\t                        }\n\t\n\t                        realm = null;\n\t                        kerberos = null;\n\t\n\t                        dfd.reject(new Error(message));\n\t                    } else {\n\t                        kerberos = realmd.proxy(KERBEROS, path);\n\t                        $(kerberos).on(\"changed\", update);\n\t\n\t                        realm = realmd.proxy(REALM, path);\n\t                        $(realm).on(\"changed\", update);\n\t                        realm.wait(function() {\n\t                            dfd.resolve(realm);\n\t                        });\n\t                    }\n\t\n\t                    update();\n\t                });\n\t\n\t            checking = dfd.promise();\n\t            checked = name;\n\t            return checking;\n\t        }\n\t\n\t        function ensure() {\n\t            if (mode != 'join') {\n\t                var dfd = $.Deferred();\n\t                dfd.resolve(realm);\n\t                return dfd.promise();\n\t            }\n\t\n\t            if ($(\".realms-op-address\").val() === checked) {\n\t                if (checking)\n\t                    return checking;\n\t            }\n\t\n\t            return check();\n\t        }\n\t\n\t        /*\n\t         * The realmd dbus interface has an a(ss) Details\n\t         * property. Lookup the right value for the given\n\t         * field key.\n\t         */\n\t        function find_detail(realm, field) {\n\t            var result = null;\n\t            if (realm && realm.Details) {\n\t                realm.Details.forEach(function(value) {\n\t                    if (value[0] === field)\n\t                        result = value[1];\n\t                });\n\t            }\n\t            return result;\n\t        }\n\t\n\t\n\t        function update() {\n\t            var have_one = 0;\n\t            var message;\n\t\n\t            $(\".realms-op-spinner\").toggle(!!operation);\n\t            $(\".realms-op-wait-message\").toggle(!!operation);\n\t            $(\".realms-op-field\").prop('disabled', !!operation);\n\t            $(\".realms-op-apply\").prop('disabled', !!operation);\n\t            $(\".realm-active-directory-only\").hide();\n\t\n\t            var server = find_detail(realm, \"server-software\");\n\t\n\t            if (realm && kerberos && !kerberos.valid) {\n\t                message = cockpit.format(_(\"Domain $0 is not supported\"), realm.Name);\n\t                $(\".realms-op-address-spinner\").hide();\n\t                $(\".realms-op-address-error\").show().attr('title', message);\n\t            } else {\n\t                $(\".realms-op-address-error\").hide();\n\t            }\n\t\n\t            if (operation)\n\t                button.attr('disabled', 'disabled');\n\t            else\n\t                button.removeAttr('disabled');\n\t\n\t            if (mode != 'join')\n\t                return;\n\t\n\t            $(\".realm-active-directory-only\").toggle(!server || server == \"active-directory\");\n\t\n\t            if (realm && realm.Name && !$(\".realms-op-address\")[0].placeholder) {\n\t                $(\".realms-op-address\")[0].placeholder = cockpit.format(_(\"e.g. \\\"$0\\\"\"), realm.Name);\n\t            }\n\t\n\t            var placeholder = \"\";\n\t            if (kerberos) {\n\t                if (kerberos.SuggestedAdministrator)\n\t                    placeholder = cockpit.format(_(\"e.g. \\\"$0\\\"\"), kerberos.SuggestedAdministrator);\n\t            }\n\t            $(\".realms-op-admin\")[0].placeholder = placeholder;\n\t\n\t            var list = $(\".realms-op-auth .dropdown-menu\");\n\t            var supported = (kerberos && kerberos.SupportedJoinCredentials) || [ ];\n\t            supported.push([\"password\", \"administrator\"]);\n\t\n\t            var first = true;\n\t            var count = 0;\n\t\n\t            function add_choice(owner, type, text) {\n\t                var item, choice, i, length = supported.length;\n\t                for (i = 0; i < length; i++) {\n\t                    if ((!owner || owner == supported[i][1]) && type == supported[i][0]) {\n\t                        choice = type + \"/\" + supported[i][1];\n\t                        item = $(\"<li>\").attr(\"data-value\", choice).append($(\"<a>\").text(text));\n\t                        list.append(item);\n\t                        if (first) {\n\t                            auth_changed(item);\n\t                            first = false;\n\t                        }\n\t                        count += 1;\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t\n\t            list.empty();\n\t            add_choice('administrator', \"password\", _(\"Administrator Password\"));\n\t            add_choice('user', \"password\", _(\"User Password\"));\n\t            add_choice(null, \"secret\", _(\"One Time Password\"));\n\t            add_choice(null, \"automatic\", _(\"Automatic\"));\n\t            $(\".realms-authentification-row\").toggle(count > 1);\n\t            list.prop('disabled', !!operation).val(!first);\n\t        }\n\t\n\t        function credentials() {\n\t            var creds, secret;\n\t\n\t            var parts = (auth || \"\").split(\"/\");\n\t            var type = parts[0];\n\t            var owner = parts[1];\n\t\n\t            if (owner == \"user\" && type == \"password\") {\n\t                creds = [\n\t                    type, owner,\n\t                    cockpit.variant('(ss)', [ $(\".realms-op-user\").val(), $(\".realms-op-user-password\").val() ])\n\t                ];\n\t            } else if (owner == \"administrator\" && type == \"password\") {\n\t                creds = [\n\t                    type, owner,\n\t                    cockpit.variant('(ss)', [ $(\".realms-op-admin\").val(), $(\".realms-op-admin-password\").val() ])\n\t                ];\n\t            } else if (type == \"secret\") {\n\t                secret = $(\".realms-op-ot-password\").val();\n\t                creds = [\n\t                    type, owner,\n\t                    cockpit.variant('ay', cockpit.utf8_encoder().encode(secret))\n\t                ];\n\t            } else {\n\t                creds = [\n\t                    \"automatic\", owner,\n\t                    cockpit.variant('s', \"\")\n\t                ];\n\t            }\n\t\n\t            return creds;\n\t        }\n\t\n\t        var unique = 1;\n\t\n\t        function perform() {\n\t            var id = \"cockpit-\" + unique;\n\t            unique += 1;\n\t            busy(id);\n\t\n\t            ensure()\n\t                .fail(function() {\n\t                    busy(null);\n\t                })\n\t                .done(function(realm) {\n\t                    var options = { operation: cockpit.variant('s', id) };\n\t\n\t                    $(\".realms-op-error\").empty().show();\n\t                    $(\".realms-op-diagnostics\").empty().hide();\n\t\n\t                    var diagnostics = \"\";\n\t                    var sub = realmd.subscribe({ member: \"Diagnostics\" }, function(path, iface, signal, args) {\n\t                        if (args[1] === id) {\n\t                            diagnostics += args[0];\n\t                        }\n\t                    });\n\t\n\t                    var call, computer_ou;\n\t                    if (mode == 'join') {\n\t                        computer_ou = $(\".realms-join-computer-ou\").val();\n\t                        if (computer_ou)\n\t                            options[\"computer-ou\"] = cockpit.variant('s', computer_ou);\n\t                        if (kerberos.valid) {\n\t                            call = kerberos.call(\"Join\", [ credentials(), options ]);\n\t                        } else {\n\t                            busy(null);\n\t                            $(\".realms-op-error\").empty().text(_(\"Joining this domain is not supported\")).show();\n\t                        }\n\t                    } else if (mode == 'leave') {\n\t                        call = realm.Deconfigure(options);\n\t                    }\n\t\n\t                    if (!call) {\n\t                        sub.remove();\n\t                        return;\n\t                    }\n\t\n\t                    call\n\t                        .fail(function(ex) {\n\t                            busy(null);\n\t                            if (ex.name != \"com.redhat.Cockpit.Error.Cancelled\") {\n\t                                console.log(\"Failed to join domain: \" + realm.Name + \": \" + ex);\n\t                                $(\".realms-op-error\").empty().text(ex + \" \").show();\n\t                                if (diagnostics) {\n\t                                    $(\".realms-op-error\")\n\t                                        .append('<a class=\"realms-op-more-diagnostics\">' + _(\"More\") + '</a>');\n\t                                    $(\".realms-op-diagnostics\").text(diagnostics);\n\t                                }\n\t                            }\n\t                        })\n\t                        .done(function() {\n\t                            busy(null);\n\t                            $(dialog).modal(\"hide\");\n\t                        })\n\t                        .always(function() {\n\t                            sub.remove();\n\t                        });\n\t                });\n\t        }\n\t\n\t        function busy(id) {\n\t            operation = id;\n\t            update();\n\t        }\n\t\n\t        function cancel() {\n\t            if (operation) {\n\t                realmd.call(SERVICE, MANAGER, \"Cancel\", [ operation ]);\n\t                busy(null);\n\t                return true;\n\t            }\n\t            return false;\n\t        }\n\t\n\t        update();\n\t        return dialog;\n\t    }\n\t\n\t    function setup() {\n\t        var $ = jQuery;\n\t\n\t        var element = $(\"<a>\");\n\t\n\t        var realmd = cockpit.dbus(\"org.freedesktop.realmd\");\n\t        realmd.watch(MANAGER);\n\t\n\t        var realms = realmd.proxies(\"org.freedesktop.realmd.Realm\");\n\t\n\t        /* The realm we are joined to */\n\t        var joined = null;\n\t\n\t        var permission = null;\n\t\n\t        $(realmd).on(\"close\", function(ev, options) {\n\t            var message;\n\t            if (options.problem == \"not-found\")\n\t                message = _(\"Cannot join a domain because realmd is not available on this system\");\n\t            else\n\t                message = cockpit.message(options);\n\t            element\n\t                .addClass(\"disabled\")\n\t                .attr('title', message)\n\t                .tooltip({ container: 'body'})\n\t                .tooltip('fixTitle');\n\t            realmd = null;\n\t        });\n\t\n\t        realms.wait(function() {\n\t            if (!realmd)\n\t                return;\n\t\n\t            permission = cockpit.permission({ admin: true });\n\t\n\t            function update_realm_privileged() {\n\t                $(element).update_privileged(permission,\n\t                        cockpit.format(_(\"The user <b>$0</b> is not permitted to modify realms\"),\n\t                            permission.user ? permission.user.name : ''));\n\t            }\n\t\n\t            $(permission).on(\"changed\", update_realm_privileged);\n\t        });\n\t\n\t        function update_realms() {\n\t            var text, path, realm;\n\t            joined = [];\n\t            for (path in realms) {\n\t                realm = realms[path];\n\t                if (realm.Configured)\n\t                    joined.push(realm);\n\t            }\n\t\n\t            if (!joined || !joined.length)\n\t                text = _(\"Join Domain\");\n\t            else\n\t                text = joined.map(function(x) { return x.Name; }).join(\", \");\n\t            element.text(text);\n\t        }\n\t\n\t        $(realms).on(\"changed\", update_realms);\n\t        update_realms();\n\t\n\t        var dialog = null;\n\t        element.on(\"click\", function() {\n\t            if (dialog)\n\t                $(dialog).remove();\n\t\n\t            if (joined && joined.length)\n\t                dialog = instance(realmd, 'leave', joined[0], element);\n\t            else\n\t                dialog = instance(realmd, 'join', null, element);\n\t\n\t            $(dialog)\n\t                .attr(\"id\", \"realms-op\")\n\t                .appendTo(\"body\")\n\t                .modal('show');\n\t        });\n\t\n\t        element.close = function close() {\n\t            if (dialog)\n\t                dialog.cancel();\n\t            element.remove();\n\t            if (realmd)\n\t                realmd.close();\n\t            if (permission)\n\t                permission.close();\n\t        };\n\t\n\t        return element;\n\t    }\n\t\n\t    /* Hook this in when loaded */\n\t    jQuery(function() {\n\t        var placeholder = jQuery(\"#system-info-domain\");\n\t        if (placeholder.length) {\n\t            placeholder.find(\".button-location\").append(setup());\n\t            placeholder.removeAttr('hidden');\n\t        }\n\t    });\n\t\n\t    return module;\n\t}());\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(2)(module)))\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = jQuery;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\tmodule.exports = cockpit;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(3);\n\t    var cockpit = __webpack_require__(4);\n\t\n\t    var unique_number = 0;\n\t    function unique() {\n\t        unique_number += 1;\n\t        return \"unique\" + -(new Date()) + -unique_number;\n\t    }\n\t\n\t    /* Dialog Patterns */\n\t\n\t    function clear_errors(sel) {\n\t        sel.find(\".dialog-error\").remove();\n\t        sel.find(\".has-error\").removeClass(\"has-error\");\n\t        sel.find(\".dialog-wrapper\").off(\".dialog-error\");\n\t        sel.off(\".dialog-error\");\n\t    }\n\t\n\t    function field_error(target, error) {\n\t        var wrapper = target.parent();\n\t        var next, refresh;\n\t\n\t        if (!wrapper.is(\".dialog-wrapper\")) {\n\t            wrapper = $(\"<div class='dialog-wrapper'>\").insertBefore(target);\n\t\n\t            /*\n\t             * Some bootstrap plugins replace html controls with their own\n\t             * stuff, so we have to account for that here.\n\t             */\n\t\n\t            next = target.next();\n\t            if (next.is(\".bootstrap-select\") && next.selectpicker) {\n\t                next.remove();\n\t                refresh = next.selectpicker;\n\t            }\n\t\n\t            target.remove().appendTo(wrapper);\n\t\n\t            if (refresh)\n\t                refresh.call(target);\n\t        }\n\t\n\t        var message;\n\t        if (error.message)\n\t            message = $(\"<div class='dialog-error help-block'>\").text(error.message);\n\t        wrapper.addClass(\"has-error\").append(message);\n\t\n\t        if (!wrapper.hasClass(\"error-keep\")) {\n\t            wrapper.on(\"keypress.dialog-error change.dialog-error\", function() {\n\t                wrapper.removeClass(\"has-error\")\n\t                    .find(\".dialog-error.help-block\").css(\"visibility\", \"hidden\");\n\t            });\n\t        }\n\t    }\n\t\n\t    function global_error(sel, error) {\n\t        var alert = $(\"<div class='alert alert-danger dialog-error'>\");\n\t        var text = error.message || error.toString();\n\t        alert.text(text);\n\t        $(\"<span class='fa fa-exclamation-triangle'>\").prependTo(alert);\n\t\n\t        /* Always log global dialog errors for easier debugging */\n\t        console.warn(text);\n\t\n\t        var footer = sel.find(\".modal-footer\");\n\t        if (footer.length)\n\t            alert.prependTo(footer);\n\t        else\n\t            alert.appendTo(sel);\n\t    }\n\t\n\t    function display_errors(sel, errors) {\n\t        clear_errors(sel);\n\t\n\t        /* The list of errors can also be passed as an array */\n\t        if (errors.length == 1 && $.isArray(errors[0]))\n\t            errors = errors[0];\n\t\n\t        var any = false;\n\t        errors.forEach(function(error) {\n\t            var target;\n\t            if (error) {\n\t                target = sel.find(error.target);\n\t\n\t                /* Errors for a specific field added below that field */\n\t                if (target && target.length)\n\t                    field_error(target, error);\n\t                else\n\t                    global_error(sel, error);\n\t\n\t                any = true;\n\t            }\n\t        });\n\t\n\t        if (!any)\n\t            return;\n\t\n\t        /* When dialog is shown again, remove all mods */\n\t        sel.on(\"show.bs.modal.dialog-error\", function() {\n\t            clear_errors(sel);\n\t        });\n\t    }\n\t\n\t    function DialogWait(promise, handle) {\n\t        this.promise = promise;\n\t        this.disabled = [];\n\t        this.handle = handle;\n\t    }\n\t\n\t    function clear_wait(sel) {\n\t        var data = sel.data(\"dialog-wait\");\n\t        sel.data(\"dialog-wait\", null);\n\t\n\t        sel.find(\".dialog-wait-ct\").remove();\n\t        sel.find(\".btn\").off(\".dialog-wait\");\n\t        sel.off(\".dialog-wait\");\n\t\n\t        if (data) {\n\t            data.disabled.forEach(function(ctl) {\n\t                ctl.removeAttr(\"disabled\");\n\t            });\n\t        }\n\t    }\n\t\n\t    function display_wait(sel, promise, handle) {\n\t        clear_wait(sel);\n\t\n\t        if (!promise) {\n\t            if (handle)\n\t                sel.modal(\"hide\");\n\t            return sel;\n\t        }\n\t\n\t        /* Clear all errors in the dialog */\n\t        if (handle)\n\t            display_errors(sel, []);\n\t\n\t        var wait = $(\"<div class='dialog-wait-ct pull-left'>\");\n\t        $(\"<div class='spinner spinner-sm'>\").appendTo(wait);\n\t        var message = $(\"<span>\").appendTo(wait);\n\t\n\t        sel.find(\".modal-footer button\").first().before(wait);\n\t\n\t        var data = new DialogWait(promise, handle);\n\t        sel.data(\"dialog-wait\", data);\n\t\n\t        var cancellation = promise.cancel || promise.close;\n\t        var cancelled = false;\n\t\n\t        /* Disable everything and stash previous disabled state */\n\t        var controls = sel.find(\".form-control\").add(\".btn\", sel);\n\t        if (cancellation)\n\t            controls = controls.not(\"[data-dismiss]\").not(\".btn-cancel\");\n\t        controls.each(function() {\n\t            var ctl = $(this);\n\t            if (!ctl.attr(\"disabled\")) {\n\t                data.disabled.push(ctl);\n\t                ctl.attr(\"disabled\", \"disabled\");\n\t            }\n\t        });\n\t\n\t        sel.find(\".btn[data-dismiss], .btn-cancel\").on(\"click.dialog-wait\", function() {\n\t            cancelled = true;\n\t            if (cancellation)\n\t                cancellation.apply(promise);\n\t            return false;\n\t        });\n\t\n\t        /* When dialog is shown again, remove all mods */\n\t        sel.on(\"hide.bs.modal.dialog-wait\", function() {\n\t            clear_wait(sel);\n\t        });\n\t\n\t        /*\n\t         * There is no way to remove a callback from a promise\n\t         * so we have to be careful to only react if still\n\t         * processing the same promise.\n\t         */\n\t        function restore() {\n\t            var state, data = sel.data(\"dialog-wait\");\n\t            if (data && data.promise === promise) {\n\t                clear_wait(sel);\n\t                state = promise.state();\n\t                if (cancelled || (state == \"resolved\" && data.handle))\n\t                    sel.modal('hide');\n\t                else if (state == \"rejected\" && data.handle)\n\t                    display_errors(sel, [ arguments[0] ]);\n\t            }\n\t        }\n\t\n\t        function update(arg) {\n\t            var data = sel.data(\"dialog-wait\");\n\t            if (data && data.promise === promise) {\n\t                if (typeof arg !== \"string\")\n\t                    arg = \"\";\n\t                message.text(arg);\n\t            }\n\t        }\n\t\n\t        promise\n\t            .always(restore)\n\t            .progress(update);\n\t\n\t        return sel;\n\t    }\n\t\n\t    $.fn.dialog = function dialog(action /* ... */) {\n\t        if (action === \"failure\")\n\t            return display_errors(this, Array.prototype.slice.call(arguments, 1));\n\t        else if (action === \"wait\")\n\t            return display_wait(this, arguments[1]);\n\t        else if (action === \"promise\")\n\t            return display_wait(this, arguments[1], true);\n\t        else\n\t            console.warn(\"unknown dialog action: \" + action);\n\t    };\n\t\n\t    window.addEventListener(\"hashchange\", function() {\n\t        $(\".modal\").modal(\"hide\");\n\t    });\n\t\n\t    /*\n\t     * OnOff switch pattern\n\t     */\n\t\n\t    function onoff_refresh(sel) {\n\t        /* During testing, no Cockpit dependency */\n\t        var _ = cockpit.gettext || function(x) { return x; };\n\t\n\t        sel = sel.find(\".btn-onoff-ct\").andSelf().filter(\".btn-onoff-ct\");\n\t        sel.each(function(x, el) {\n\t            var self = $(el)\n\t                .attr(\"data-toggle\", \"buttons\")\n\t                .addClass(\"btn-group\");\n\t            var value = self.onoff(\"value\");\n\t            var buttons = self.find(\".btn\");\n\t            var name = self.find(\"input\").first().attr(\"name\") || unique();\n\t            var i, input, text;\n\t            for (i = buttons.length; i < 2; i++) {\n\t                input = $('<input type=\"radio\" autocomplete=\"off\">');\n\t                text = document.createTextNode(i === 0 ? _(\"On\") : _(\"Off\"));\n\t                self.append($('<label class=\"btn\">').append(input, text));\n\t                buttons = null;\n\t            }\n\t            buttons = buttons || self.find(\".btn\");\n\t            buttons.find(\"input\").attr(\"name\", name);\n\t            onoff_change(self, !!value);\n\t        });\n\t        return sel;\n\t    }\n\t\n\t    function onoff_value(sel) {\n\t        return sel.find(\".btn\").first().hasClass(\"active\");\n\t    }\n\t\n\t    function onoff_change(sel, value) {\n\t        return sel.each(function(i, el) {\n\t            var buttons = $(el).find(\".btn\");\n\t            buttons.first().toggleClass(\"active\", !!value).find(\"input\").prop(\"checked\", !!value);\n\t            buttons.last().toggleClass(\"active\", !value).find(\"input\").prop(\"checked\", !value);\n\t        });\n\t    }\n\t\n\t    $.fn.onoff = function onoff(action /* ... */) {\n\t        if (arguments.length === 0 || action == \"refresh\") {\n\t            return onoff_refresh(this);\n\t        } else if (action === \"value\") {\n\t            if (arguments.length === 1)\n\t                return onoff_value(this);\n\t            else\n\t                return onoff_change(this, arguments[1]);\n\t        } else if (action == \"disabled\") {\n\t            return this.find(\".btn\").toggleClass(\"disabled\", arguments[1]);\n\t        } else {\n\t            console.warn(\"unknown switch action: \" + action);\n\t        }\n\t    };\n\t\n\t    /* ----------------------------------------------------------------------------\n\t     * Sliders\n\t     *\n\t     * <div class=\"slider\" value=\"0.5\">\n\t     *    <div class=\"slider-bar\">\n\t     *        <div class=\"slider-thumb\"></div>\n\t     *    </div>\n\t     *    <div class=\"slider-bar\">\n\t     *        <!-- optional left overs -->\n\t     *    </div>\n\t     * </div>\n\t     *\n\t     * A slider control. The first div.slider-bar is the one that is resized.\n\t     * The value will be bounded between 0 and 1 as a floating point number.\n\t     *\n\t     * The following div.slider-bar if present is resized to fill the remainder\n\t     * of the slider if not given a specific size. You can put more div.slider-bar\n\t     * inside it to reflect squashing other prevous allocations.\n\t     *\n\t     * If the following div.slider-bar have a width specified, then the\n\t     * slider supports the concept of overflowing. If the slider overflows\n\t     * it will get the .slider-warning class and go a bit red.\n\t     *\n\t     * On document creation any div.slider are automatically turned into\n\t     * Bar graphs.\n\t     *\n\t     * Slider has the following extra read/write properties:\n\t     *\n\t     * .value: the floating point value the slider is set to.\n\t     * .disabled: whether to display slider as disabled and refuse interacton.\n\t     *\n\t     * Slider has this event:\n\t     *\n\t     * on('change'): fired when the slider changes, passes value as additional arg.\n\t     */\n\t\n\t    function resize_flex(slider, flex, total, part) {\n\t        var value = 0;\n\t        if (part > total)\n\t            value = 1;\n\t        else if (part < 0 || isNaN(part))\n\t            value = 0;\n\t        else if (!isNaN(total) && total > 0 && part >= 0)\n\t            value = (part / total);\n\t        $(flex).css('width', (value * 100) + \"%\").\n\t            next(\"div\").css('margin-left', $(flex).css('width'));\n\t\n\t        /* Set the property and the attribute */\n\t        slider.value = value;\n\t    }\n\t\n\t    function update_value(slider) {\n\t        resize_flex(slider, $(slider).children(\"div.slider-bar\").first()[0], 1, slider.value);\n\t    }\n\t\n\t    function check_overflow(slider) {\n\t        $(slider).toggleClass(\"slider-warning\",\n\t                              slider.offsetWidth < slider.scrollWidth);\n\t    }\n\t\n\t    function setup_slider(slider) {\n\t        $(slider).attr('unselectable', 'on');\n\t\n\t        Object.defineProperty(slider, \"value\", {\n\t            get: function() {\n\t                return parseFloat(this.getAttribute(\"value\"));\n\t            },\n\t            set: function(v) {\n\t                var s = String(v);\n\t                if (s != this.getAttribute(\"value\"))\n\t                    this.setAttribute(\"value\", v);\n\t            }\n\t        });\n\t\n\t        Object.defineProperty(slider, \"disabled\", {\n\t            get: function() {\n\t                if (!this.hasAttribute(\"disabled\"))\n\t                    return false;\n\t                return this.getAttribute(\"disabled\").toLowerCase() != \"false\";\n\t            },\n\t            set: function(v) {\n\t                this.setAttribute(\"disabled\", v ? \"true\" : \"false\");\n\t            }\n\t        });\n\t\n\t        update_value(slider);\n\t        check_overflow(slider);\n\t\n\t        $(slider).on(\"change\", function() {\n\t            update_value(slider);\n\t            $(slider).toggleClass(\"slider-disabled\", slider.disabled);\n\t        });\n\t\n\t        if (slider.disabled)\n\t            $(slider).addClass(\"slider-disabled\");\n\t\n\t        $(slider).on(\"mousedown\", function(ev) {\n\t            if (slider.disabled)\n\t                return true; /* default action */\n\t            var flex;\n\t            var offset = $(slider).offset().left;\n\t            if ($(ev.target).hasClass(\"slider-thumb\")) {\n\t                var hitx  = (ev.offsetX || ev.clientX - $(ev.target).offset().left);\n\t                offset += (hitx - $(ev.target).outerWidth() / 2);\n\t                flex = $(ev.target).parent()[0];\n\t            } else {\n\t                flex = $(slider).children(\"div.slider-bar\").first()[0];\n\t                resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n\t                $(slider).trigger(\"change\", [slider.value]);\n\t                check_overflow(slider);\n\t            }\n\t\n\t            $(document).\n\t                on(\"mousemove.slider\", function(ev) {\n\t                    resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n\t                    $(slider).trigger(\"change\", [slider.value]);\n\t                    check_overflow(slider);\n\t                    return false;\n\t                }).\n\t                on(\"mouseup.slider\", function(ev) {\n\t                    $(document).\n\t                        off(\"mousemove.slider\").\n\t                        off(\"mouseup.slider\");\n\t                    return false;\n\t                });\n\t            return false; /* no default action */\n\t        });\n\t    }\n\t\n\t    function setup_sliders() {\n\t        $(\"div.slider\").each(function() {\n\t            setup_slider(this);\n\t        });\n\t    }\n\t\n\t    $.fn.slider = function Slider(action) {\n\t        var sel = this;\n\t        var div;\n\t        if (arguments.length === 0 || action == \"refresh\") {\n\t            sel.each(function() {\n\t                setup_slider(this);\n\t            });\n\t            return sel;\n\t        } else {\n\t            console.warn(\"unknown slider action: \" + action);\n\t        }\n\t    };\n\t\n\t    $(document).ready(setup_sliders);\n\t\n\t    /* -----------------------------------------------------------------------------\n\t     * Privileged UI actions.\n\t     */\n\t\n\t    // placement is optional, \"top\", \"left\", \"bottom\", \"right\"\n\t    $.fn.update_privileged = function update_privileged(perm, denied_message, placement) {\n\t        var allowed = (perm.allowed !== false);\n\t        var selector = this;\n\t\n\t        selector.each(function() {\n\t            // preserve old title first time to use when allowed\n\t            // activate tooltip\n\t            var allowed_key = 'allowed-title';\n\t            if (typeof $(this).data(allowed_key) === 'undefined' ||\n\t                   $(this).data(allowed_key) === false)\n\t                $(this).data(allowed_key, $(this).attr('title') || \"\");\n\t\n\t            var options = { html: true };\n\t            if (placement)\n\t                options['placement'] = placement;\n\t\n\t            $(this).tooltip(options);\n\t\n\t            if ($(this).hasClass(\"disabled\") === allowed) {\n\t              $(this).toggleClass(\"disabled\", !allowed)\n\t                   .attr('data-original-title', null);\n\t\n\t              if (allowed)\n\t                  $(this).attr('title', $(this).data(allowed_key));\n\t              else\n\t                  $(this).attr('title', denied_message);\n\t              $(this).tooltip('fixTitle');\n\t            }\n\t        });\n\t\n\t        return selector;\n\t    };\n\t}());\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" data-backdrop=\\\"static\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title realms-op-title\\\"></h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"realms-op-fields\\\">\\n          <table class=\\\"form-table-ct realms-op-form\\\">\\n            <tr class=\\\"realms-op-join-only-row\\\">\\n              <td><label class=\\\"control-label\\\" translatable=\\\"yes\\\">Domain Address</label></td>\\n              <td>\\n                <input class=\\\"realms-op-field form-control realms-op-address\\\" type=\\\"text\\\" value=\\\"\\\"/>\\n              </td>\\n              <td class=\\\"realms-op-zero-width\\\">\\n                <div class=\\\"realms-op-address-spinner\\\" hidden>\\n                  <span class=\\\"spinner spinner-xs spinner-inline\\\"></span>\\n                </div>\\n                <div class=\\\"realms-op-address-error\\\" hidden>\\n                  <span class=\\\"fa fa-lg fa-exclamation\\\"></span>\\n                </div>\\n              </td>\\n            </tr>\\n            <tr class=\\\"realms-op-join-only-row\\\">\\n              <td class=\\\"header\\\"></td>\\n            </tr>\\n            <tr class=\\\"realms-op-join-only-row realm-active-directory-only\\\">\\n              <td><label class=\\\"control-label\\\" translatable=\\\"yes\\\">Computer OU</label></td>\\n              <td>\\n                <input class=\\\"realms-op-field form-control realms-op-computer-ou\\\" type=\\\"text\\\" value=\\\"\\\"/>\\n              </td>\\n            </tr>\\n            <tr class=\\\"realms-op-join-only-row realms-authentification-row\\\">\\n              <td><label class=\\\"control-label\\\" translatable=\\\"yes\\\">Authentication</label></td>\\n              <td>\\n                  <div class=\\\"btn-group bootstrap-select dropdown form-control realms-op-auth\\\">\\n                      <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">\\n                          <span class=\\\"pull-left\\\"></span>\\n                          <div class=\\\"caret\\\"></div>\\n                      </button>\\n                      <ul class=\\\"dropdown-menu\\\">\\n                      </ul>\\n                  </div>\\n              </td>\\n            </tr>\\n            <tr class=\\\"realms-op-join-only-row realms-op-user-row\\\">\\n              <td><label class=\\\"control-label\\\" translatable=\\\"yes\\\">User Name</label></td>\\n              <td>\\n                <input class=\\\"realms-op-field form-control realms-op-user\\\" type=\\\"text\\\" value=\\\"\\\"/>\\n              </td>\\n            </tr>\\n            <tr class=\\\"realms-op-join-only-row realms-op-user-password-row\\\">\\n              <td><label class=\\\"control-label\\\" translatable=\\\"yes\\\">User Password</label></td>\\n              <td>\\n                <input class=\\\"realms-op-field form-control realms-op-user-password\\\" type=\\\"password\\\" value=\\\"\\\"/>\\n              </td>\\n            </tr>\\n            <tr class=\\\"realms-op-join-only-row realms-op-admin-row\\\">\\n              <td><label class=\\\"control-label\\\" translatable=\\\"yes\\\">Domain Administrator Name</label></td>\\n              <td>\\n                <input class=\\\"realms-op-field form-control realms-op-admin\\\" type=\\\"text\\\" value=\\\"\\\"/>\\n              </td>\\n            </tr>\\n            <tr class=\\\"realms-op-join-only-row realms-op-admin-password-row\\\">\\n              <td><label class=\\\"control-label\\\" translatable=\\\"yes\\\">Domain Administrator Password</label></td>\\n              <td>\\n                <input class=\\\"realms-op-field form-control realms-op-admin-password\\\" type=\\\"password\\\" value=\\\"\\\"/>\\n              </td>\\n            </tr>\\n            <tr class=\\\"realms-op-join-only-row realms-op-otp-row\\\">\\n              <td><label class=\\\"control-label\\\" translatable=\\\"yes\\\">One Time Password</label></td>\\n              <td>\\n                <input class=\\\"realms-op-field form-control realms-op-ot-password\\\" type=\\\"password\\\" value=\\\"\\\"/>\\n              </td>\\n            </tr>\\n            <tr>\\n              <td colspan=\\\"3\\\">\\n                <div class=\\\"realms-op-error\\\" hidden></div>\\n                  <pre class=\\\"realms-op-diagnostics\\\" hidden>\\n                  </pre>\\n                </div>\\n              </td>\\n            </tr>\\n          </table>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <div class=\\\"realms-op-spinner spinner pull-left\\\"></div>\\n        <span class=\\\"realms-op-wait-message\\\" translatable=\\\"yes\\\" hidden>This may take a while</span>\\n        <button class=\\\"btn btn-default realms-op-cancel\\\" translatable=\\\"yes\\\">Cancel</button>\\n        <button class=\\\"btn btn-primary realms-op-apply\\\" translatable=\\\"yes\\\">Next</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// realmd/domain.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 1d34af46bb55a736c33c","'use strict';\n\n(function() {\n    \"use strict\";\n\n    var jQuery = require(\"jquery\");\n    var cockpit = require(\"cockpit\");\n    require(\"patterns\");\n\n    var _ = cockpit.gettext;\n\n    var MANAGER = \"/org/freedesktop/realmd\";\n\n    var SERVICE = \"org.freedesktop.realmd.Service\";\n    var PROVIDER = \"org.freedesktop.realmd.Provider\";\n    var KERBEROS = \"org.freedesktop.realmd.KerberosMembership\";\n    var REALM = \"org.freedesktop.realmd.Realm\";\n\n    function instance(realmd, mode, realm, button) {\n        var dialog = jQuery.parseHTML(require(\"raw!./operation.html\"))[0];\n\n        /* Scope the jQuery selector to our dialog */\n        var $ = function(selector, context) {\n            return new jQuery.fn.init(selector, context || dialog);\n        };\n        $.fn = $.prototype = jQuery.fn;\n        jQuery.extend($, jQuery);\n\n        var operation = null;\n        var checking = null;\n        var checked = null;\n        var kerberos = null;\n\n        /* If in an operation first time cancel is clicked, cancel operation */\n        $(\".realms-op-cancel\").on(\"click\", function() {\n            if (!cancel())\n                $(dialog).modal('hide');\n        });\n\n        /* When we're hidden some other way, cancel any operations */\n        $(dialog).on(\"hide.bs.modal\", function() {\n            cancel();\n        });\n\n        $(\".realms-op-apply\").on(\"click\", perform);\n        $(\".realms-op-field\")\n            .on(\"keydown\", function(ev) {\n                if (ev.which == 13)\n                    perform();\n            });\n\n        $(dialog).on(\"click\", \".realms-op-more-diagnostics\", function() {\n            $(\".realms-op-error\").hide();\n            $(\".realms-op-diagnostics\").show();\n        });\n\n        var timeout = null;\n        $(\".realms-op-address\").on(\"keyup change\", function() {\n            if ($(\".realms-op-address\").val() != checked) {\n                $(\".realms-op-address-error\").hide();\n                window.clearTimeout(timeout);\n                timeout = window.setTimeout(check, 1000);\n            }\n        });\n\n        var auth = null;\n        function auth_changed(item) {\n            auth = item.attr('data-value');\n            $(\".realms-op-auth span\").text(item.text());\n            var parts = (auth || \"\").split(\"/\");\n            var type = parts[0];\n            var owner = parts[1];\n\n            $(\".realms-op-admin-row\").hide();\n            $(\".realms-op-admin-password-row\").hide();\n            $(\".realms-op-user-row\").hide();\n            $(\".realms-op-user-password-row\").hide();\n            $(\".realms-op-otp-row\").hide();\n\n            if (type == \"password\" && owner == \"administrator\") {\n                $(\".realms-op-admin-row\").show();\n                $(\".realms-op-admin-password-row\").show();\n            } else if (type == \"password\" && owner == \"user\") {\n                $(\".realms-op-user-row\").show();\n                $(\".realms-op-user-password-row\").show();\n            } else if (type == \"secret\") {\n                $(\".realms-op-otp-row\").show();\n            }\n        }\n\n        $(\".realms-op-auth\").on('click', 'li', function() {\n            auth_changed($(this));\n        });\n\n        var title, label;\n        if (mode == 'join') {\n            title = _(\"page-title\", \"Join a Domain\");\n            label = _(\"Join\");\n            $(\".realms-op-join-only-row\").show();\n            check(\"\");\n        } else {\n            title = _(\"page-title\", \"Leave Domain\");\n            label = _(\"Leave\");\n            $(\".realms-op-join-only-row\").hide();\n        }\n\n        $(\".realms-op-title\").text(title);\n        $(\".realms-op-apply\").text(label);\n        $(\".realms-op-field\").val(\"\");\n\n        function check(name) {\n            var dfd = $.Deferred();\n\n            if (name === undefined)\n                name = $(\".realms-op-address\").val();\n\n            if (name)\n                $(\".realms-op-address-spinner\").show();\n\n            dfd.always(function() {\n                if (name)\n                    $(\".realms-op-address-spinner\").hide();\n            });\n\n            realmd.call(MANAGER, PROVIDER, \"Discover\", [ name, { } ])\n                .always(function() {\n\n                    if ($(\".realms-op-address\").val() != name) {\n                        dfd.reject();\n                        check();\n                        return;\n                    }\n\n                    var error, result = [], path;\n                    if (this.state() == \"rejected\") {\n                        error = arguments[0];\n                        $(\".realms-op-error\")\n                            .empty()\n                            .text(error.message);\n                        dfd.reject(error);\n                    }\n\n                    var message;\n                    if (arguments[0][1])\n                        result = arguments[0][1];\n                    path = result[0]; /* the first realm */\n\n                    if (!path) {\n                        if (name) {\n                            message = cockpit.format(_(\"Domain $0 could not be contacted\"), name);\n                            $(\".realms-op-address-error\").show().attr('title', message);\n                        }\n\n                        realm = null;\n                        kerberos = null;\n\n                        dfd.reject(new Error(message));\n                    } else {\n                        kerberos = realmd.proxy(KERBEROS, path);\n                        $(kerberos).on(\"changed\", update);\n\n                        realm = realmd.proxy(REALM, path);\n                        $(realm).on(\"changed\", update);\n                        realm.wait(function() {\n                            dfd.resolve(realm);\n                        });\n                    }\n\n                    update();\n                });\n\n            checking = dfd.promise();\n            checked = name;\n            return checking;\n        }\n\n        function ensure() {\n            if (mode != 'join') {\n                var dfd = $.Deferred();\n                dfd.resolve(realm);\n                return dfd.promise();\n            }\n\n            if ($(\".realms-op-address\").val() === checked) {\n                if (checking)\n                    return checking;\n            }\n\n            return check();\n        }\n\n        /*\n         * The realmd dbus interface has an a(ss) Details\n         * property. Lookup the right value for the given\n         * field key.\n         */\n        function find_detail(realm, field) {\n            var result = null;\n            if (realm && realm.Details) {\n                realm.Details.forEach(function(value) {\n                    if (value[0] === field)\n                        result = value[1];\n                });\n            }\n            return result;\n        }\n\n\n        function update() {\n            var have_one = 0;\n            var message;\n\n            $(\".realms-op-spinner\").toggle(!!operation);\n            $(\".realms-op-wait-message\").toggle(!!operation);\n            $(\".realms-op-field\").prop('disabled', !!operation);\n            $(\".realms-op-apply\").prop('disabled', !!operation);\n            $(\".realm-active-directory-only\").hide();\n\n            var server = find_detail(realm, \"server-software\");\n\n            if (realm && kerberos && !kerberos.valid) {\n                message = cockpit.format(_(\"Domain $0 is not supported\"), realm.Name);\n                $(\".realms-op-address-spinner\").hide();\n                $(\".realms-op-address-error\").show().attr('title', message);\n            } else {\n                $(\".realms-op-address-error\").hide();\n            }\n\n            if (operation)\n                button.attr('disabled', 'disabled');\n            else\n                button.removeAttr('disabled');\n\n            if (mode != 'join')\n                return;\n\n            $(\".realm-active-directory-only\").toggle(!server || server == \"active-directory\");\n\n            if (realm && realm.Name && !$(\".realms-op-address\")[0].placeholder) {\n                $(\".realms-op-address\")[0].placeholder = cockpit.format(_(\"e.g. \\\"$0\\\"\"), realm.Name);\n            }\n\n            var placeholder = \"\";\n            if (kerberos) {\n                if (kerberos.SuggestedAdministrator)\n                    placeholder = cockpit.format(_(\"e.g. \\\"$0\\\"\"), kerberos.SuggestedAdministrator);\n            }\n            $(\".realms-op-admin\")[0].placeholder = placeholder;\n\n            var list = $(\".realms-op-auth .dropdown-menu\");\n            var supported = (kerberos && kerberos.SupportedJoinCredentials) || [ ];\n            supported.push([\"password\", \"administrator\"]);\n\n            var first = true;\n            var count = 0;\n\n            function add_choice(owner, type, text) {\n                var item, choice, i, length = supported.length;\n                for (i = 0; i < length; i++) {\n                    if ((!owner || owner == supported[i][1]) && type == supported[i][0]) {\n                        choice = type + \"/\" + supported[i][1];\n                        item = $(\"<li>\").attr(\"data-value\", choice).append($(\"<a>\").text(text));\n                        list.append(item);\n                        if (first) {\n                            auth_changed(item);\n                            first = false;\n                        }\n                        count += 1;\n                        break;\n                    }\n                }\n            }\n\n            list.empty();\n            add_choice('administrator', \"password\", _(\"Administrator Password\"));\n            add_choice('user', \"password\", _(\"User Password\"));\n            add_choice(null, \"secret\", _(\"One Time Password\"));\n            add_choice(null, \"automatic\", _(\"Automatic\"));\n            $(\".realms-authentification-row\").toggle(count > 1);\n            list.prop('disabled', !!operation).val(!first);\n        }\n\n        function credentials() {\n            var creds, secret;\n\n            var parts = (auth || \"\").split(\"/\");\n            var type = parts[0];\n            var owner = parts[1];\n\n            if (owner == \"user\" && type == \"password\") {\n                creds = [\n                    type, owner,\n                    cockpit.variant('(ss)', [ $(\".realms-op-user\").val(), $(\".realms-op-user-password\").val() ])\n                ];\n            } else if (owner == \"administrator\" && type == \"password\") {\n                creds = [\n                    type, owner,\n                    cockpit.variant('(ss)', [ $(\".realms-op-admin\").val(), $(\".realms-op-admin-password\").val() ])\n                ];\n            } else if (type == \"secret\") {\n                secret = $(\".realms-op-ot-password\").val();\n                creds = [\n                    type, owner,\n                    cockpit.variant('ay', cockpit.utf8_encoder().encode(secret))\n                ];\n            } else {\n                creds = [\n                    \"automatic\", owner,\n                    cockpit.variant('s', \"\")\n                ];\n            }\n\n            return creds;\n        }\n\n        var unique = 1;\n\n        function perform() {\n            var id = \"cockpit-\" + unique;\n            unique += 1;\n            busy(id);\n\n            ensure()\n                .fail(function() {\n                    busy(null);\n                })\n                .done(function(realm) {\n                    var options = { operation: cockpit.variant('s', id) };\n\n                    $(\".realms-op-error\").empty().show();\n                    $(\".realms-op-diagnostics\").empty().hide();\n\n                    var diagnostics = \"\";\n                    var sub = realmd.subscribe({ member: \"Diagnostics\" }, function(path, iface, signal, args) {\n                        if (args[1] === id) {\n                            diagnostics += args[0];\n                        }\n                    });\n\n                    var call, computer_ou;\n                    if (mode == 'join') {\n                        computer_ou = $(\".realms-join-computer-ou\").val();\n                        if (computer_ou)\n                            options[\"computer-ou\"] = cockpit.variant('s', computer_ou);\n                        if (kerberos.valid) {\n                            call = kerberos.call(\"Join\", [ credentials(), options ]);\n                        } else {\n                            busy(null);\n                            $(\".realms-op-error\").empty().text(_(\"Joining this domain is not supported\")).show();\n                        }\n                    } else if (mode == 'leave') {\n                        call = realm.Deconfigure(options);\n                    }\n\n                    if (!call) {\n                        sub.remove();\n                        return;\n                    }\n\n                    call\n                        .fail(function(ex) {\n                            busy(null);\n                            if (ex.name != \"com.redhat.Cockpit.Error.Cancelled\") {\n                                console.log(\"Failed to join domain: \" + realm.Name + \": \" + ex);\n                                $(\".realms-op-error\").empty().text(ex + \" \").show();\n                                if (diagnostics) {\n                                    $(\".realms-op-error\")\n                                        .append('<a class=\"realms-op-more-diagnostics\">' + _(\"More\") + '</a>');\n                                    $(\".realms-op-diagnostics\").text(diagnostics);\n                                }\n                            }\n                        })\n                        .done(function() {\n                            busy(null);\n                            $(dialog).modal(\"hide\");\n                        })\n                        .always(function() {\n                            sub.remove();\n                        });\n                });\n        }\n\n        function busy(id) {\n            operation = id;\n            update();\n        }\n\n        function cancel() {\n            if (operation) {\n                realmd.call(SERVICE, MANAGER, \"Cancel\", [ operation ]);\n                busy(null);\n                return true;\n            }\n            return false;\n        }\n\n        update();\n        return dialog;\n    }\n\n    function setup() {\n        var $ = jQuery;\n\n        var element = $(\"<a>\");\n\n        var realmd = cockpit.dbus(\"org.freedesktop.realmd\");\n        realmd.watch(MANAGER);\n\n        var realms = realmd.proxies(\"org.freedesktop.realmd.Realm\");\n\n        /* The realm we are joined to */\n        var joined = null;\n\n        var permission = null;\n\n        $(realmd).on(\"close\", function(ev, options) {\n            var message;\n            if (options.problem == \"not-found\")\n                message = _(\"Cannot join a domain because realmd is not available on this system\");\n            else\n                message = cockpit.message(options);\n            element\n                .addClass(\"disabled\")\n                .attr('title', message)\n                .tooltip({ container: 'body'})\n                .tooltip('fixTitle');\n            realmd = null;\n        });\n\n        realms.wait(function() {\n            if (!realmd)\n                return;\n\n            permission = cockpit.permission({ admin: true });\n\n            function update_realm_privileged() {\n                $(element).update_privileged(permission,\n                        cockpit.format(_(\"The user <b>$0</b> is not permitted to modify realms\"),\n                            permission.user ? permission.user.name : ''));\n            }\n\n            $(permission).on(\"changed\", update_realm_privileged);\n        });\n\n        function update_realms() {\n            var text, path, realm;\n            joined = [];\n            for (path in realms) {\n                realm = realms[path];\n                if (realm.Configured)\n                    joined.push(realm);\n            }\n\n            if (!joined || !joined.length)\n                text = _(\"Join Domain\");\n            else\n                text = joined.map(function(x) { return x.Name; }).join(\", \");\n            element.text(text);\n        }\n\n        $(realms).on(\"changed\", update_realms);\n        update_realms();\n\n        var dialog = null;\n        element.on(\"click\", function() {\n            if (dialog)\n                $(dialog).remove();\n\n            if (joined && joined.length)\n                dialog = instance(realmd, 'leave', joined[0], element);\n            else\n                dialog = instance(realmd, 'join', null, element);\n\n            $(dialog)\n                .attr(\"id\", \"realms-op\")\n                .appendTo(\"body\")\n                .modal('show');\n        });\n\n        element.close = function close() {\n            if (dialog)\n                dialog.cancel();\n            element.remove();\n            if (realmd)\n                realmd.close();\n            if (permission)\n                permission.close();\n        };\n\n        return element;\n    }\n\n    /* Hook this in when loaded */\n    jQuery(function() {\n        var placeholder = jQuery(\"#system-info-domain\");\n        if (placeholder.length) {\n            placeholder.find(\".button-location\").append(setup());\n            placeholder.removeAttr('hidden');\n        }\n    });\n\n    return module;\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/realmd/operation.js\n// module id = 1\n// module chunks = 0","'use strict';\n\nmodule.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/webpack/buildin/module.js\n// module id = 2\n// module chunks = 0","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 3\n// module chunks = 0","module.exports = cockpit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cockpit\"\n// module id = 4\n// module chunks = 0","'use strict';\n\n(function() {\n    \"use strict\";\n\n    var $ = require('jquery');\n    var cockpit = require('cockpit');\n\n    var unique_number = 0;\n    function unique() {\n        unique_number += 1;\n        return \"unique\" + -(new Date()) + -unique_number;\n    }\n\n    /* Dialog Patterns */\n\n    function clear_errors(sel) {\n        sel.find(\".dialog-error\").remove();\n        sel.find(\".has-error\").removeClass(\"has-error\");\n        sel.find(\".dialog-wrapper\").off(\".dialog-error\");\n        sel.off(\".dialog-error\");\n    }\n\n    function field_error(target, error) {\n        var wrapper = target.parent();\n        var next, refresh;\n\n        if (!wrapper.is(\".dialog-wrapper\")) {\n            wrapper = $(\"<div class='dialog-wrapper'>\").insertBefore(target);\n\n            /*\n             * Some bootstrap plugins replace html controls with their own\n             * stuff, so we have to account for that here.\n             */\n\n            next = target.next();\n            if (next.is(\".bootstrap-select\") && next.selectpicker) {\n                next.remove();\n                refresh = next.selectpicker;\n            }\n\n            target.remove().appendTo(wrapper);\n\n            if (refresh)\n                refresh.call(target);\n        }\n\n        var message;\n        if (error.message)\n            message = $(\"<div class='dialog-error help-block'>\").text(error.message);\n        wrapper.addClass(\"has-error\").append(message);\n\n        if (!wrapper.hasClass(\"error-keep\")) {\n            wrapper.on(\"keypress.dialog-error change.dialog-error\", function() {\n                wrapper.removeClass(\"has-error\")\n                    .find(\".dialog-error.help-block\").css(\"visibility\", \"hidden\");\n            });\n        }\n    }\n\n    function global_error(sel, error) {\n        var alert = $(\"<div class='alert alert-danger dialog-error'>\");\n        var text = error.message || error.toString();\n        alert.text(text);\n        $(\"<span class='fa fa-exclamation-triangle'>\").prependTo(alert);\n\n        /* Always log global dialog errors for easier debugging */\n        console.warn(text);\n\n        var footer = sel.find(\".modal-footer\");\n        if (footer.length)\n            alert.prependTo(footer);\n        else\n            alert.appendTo(sel);\n    }\n\n    function display_errors(sel, errors) {\n        clear_errors(sel);\n\n        /* The list of errors can also be passed as an array */\n        if (errors.length == 1 && $.isArray(errors[0]))\n            errors = errors[0];\n\n        var any = false;\n        errors.forEach(function(error) {\n            var target;\n            if (error) {\n                target = sel.find(error.target);\n\n                /* Errors for a specific field added below that field */\n                if (target && target.length)\n                    field_error(target, error);\n                else\n                    global_error(sel, error);\n\n                any = true;\n            }\n        });\n\n        if (!any)\n            return;\n\n        /* When dialog is shown again, remove all mods */\n        sel.on(\"show.bs.modal.dialog-error\", function() {\n            clear_errors(sel);\n        });\n    }\n\n    function DialogWait(promise, handle) {\n        this.promise = promise;\n        this.disabled = [];\n        this.handle = handle;\n    }\n\n    function clear_wait(sel) {\n        var data = sel.data(\"dialog-wait\");\n        sel.data(\"dialog-wait\", null);\n\n        sel.find(\".dialog-wait-ct\").remove();\n        sel.find(\".btn\").off(\".dialog-wait\");\n        sel.off(\".dialog-wait\");\n\n        if (data) {\n            data.disabled.forEach(function(ctl) {\n                ctl.removeAttr(\"disabled\");\n            });\n        }\n    }\n\n    function display_wait(sel, promise, handle) {\n        clear_wait(sel);\n\n        if (!promise) {\n            if (handle)\n                sel.modal(\"hide\");\n            return sel;\n        }\n\n        /* Clear all errors in the dialog */\n        if (handle)\n            display_errors(sel, []);\n\n        var wait = $(\"<div class='dialog-wait-ct pull-left'>\");\n        $(\"<div class='spinner spinner-sm'>\").appendTo(wait);\n        var message = $(\"<span>\").appendTo(wait);\n\n        sel.find(\".modal-footer button\").first().before(wait);\n\n        var data = new DialogWait(promise, handle);\n        sel.data(\"dialog-wait\", data);\n\n        var cancellation = promise.cancel || promise.close;\n        var cancelled = false;\n\n        /* Disable everything and stash previous disabled state */\n        var controls = sel.find(\".form-control\").add(\".btn\", sel);\n        if (cancellation)\n            controls = controls.not(\"[data-dismiss]\").not(\".btn-cancel\");\n        controls.each(function() {\n            var ctl = $(this);\n            if (!ctl.attr(\"disabled\")) {\n                data.disabled.push(ctl);\n                ctl.attr(\"disabled\", \"disabled\");\n            }\n        });\n\n        sel.find(\".btn[data-dismiss], .btn-cancel\").on(\"click.dialog-wait\", function() {\n            cancelled = true;\n            if (cancellation)\n                cancellation.apply(promise);\n            return false;\n        });\n\n        /* When dialog is shown again, remove all mods */\n        sel.on(\"hide.bs.modal.dialog-wait\", function() {\n            clear_wait(sel);\n        });\n\n        /*\n         * There is no way to remove a callback from a promise\n         * so we have to be careful to only react if still\n         * processing the same promise.\n         */\n        function restore() {\n            var state, data = sel.data(\"dialog-wait\");\n            if (data && data.promise === promise) {\n                clear_wait(sel);\n                state = promise.state();\n                if (cancelled || (state == \"resolved\" && data.handle))\n                    sel.modal('hide');\n                else if (state == \"rejected\" && data.handle)\n                    display_errors(sel, [ arguments[0] ]);\n            }\n        }\n\n        function update(arg) {\n            var data = sel.data(\"dialog-wait\");\n            if (data && data.promise === promise) {\n                if (typeof arg !== \"string\")\n                    arg = \"\";\n                message.text(arg);\n            }\n        }\n\n        promise\n            .always(restore)\n            .progress(update);\n\n        return sel;\n    }\n\n    $.fn.dialog = function dialog(action /* ... */) {\n        if (action === \"failure\")\n            return display_errors(this, Array.prototype.slice.call(arguments, 1));\n        else if (action === \"wait\")\n            return display_wait(this, arguments[1]);\n        else if (action === \"promise\")\n            return display_wait(this, arguments[1], true);\n        else\n            console.warn(\"unknown dialog action: \" + action);\n    };\n\n    window.addEventListener(\"hashchange\", function() {\n        $(\".modal\").modal(\"hide\");\n    });\n\n    /*\n     * OnOff switch pattern\n     */\n\n    function onoff_refresh(sel) {\n        /* During testing, no Cockpit dependency */\n        var _ = cockpit.gettext || function(x) { return x; };\n\n        sel = sel.find(\".btn-onoff-ct\").andSelf().filter(\".btn-onoff-ct\");\n        sel.each(function(x, el) {\n            var self = $(el)\n                .attr(\"data-toggle\", \"buttons\")\n                .addClass(\"btn-group\");\n            var value = self.onoff(\"value\");\n            var buttons = self.find(\".btn\");\n            var name = self.find(\"input\").first().attr(\"name\") || unique();\n            var i, input, text;\n            for (i = buttons.length; i < 2; i++) {\n                input = $('<input type=\"radio\" autocomplete=\"off\">');\n                text = document.createTextNode(i === 0 ? _(\"On\") : _(\"Off\"));\n                self.append($('<label class=\"btn\">').append(input, text));\n                buttons = null;\n            }\n            buttons = buttons || self.find(\".btn\");\n            buttons.find(\"input\").attr(\"name\", name);\n            onoff_change(self, !!value);\n        });\n        return sel;\n    }\n\n    function onoff_value(sel) {\n        return sel.find(\".btn\").first().hasClass(\"active\");\n    }\n\n    function onoff_change(sel, value) {\n        return sel.each(function(i, el) {\n            var buttons = $(el).find(\".btn\");\n            buttons.first().toggleClass(\"active\", !!value).find(\"input\").prop(\"checked\", !!value);\n            buttons.last().toggleClass(\"active\", !value).find(\"input\").prop(\"checked\", !value);\n        });\n    }\n\n    $.fn.onoff = function onoff(action /* ... */) {\n        if (arguments.length === 0 || action == \"refresh\") {\n            return onoff_refresh(this);\n        } else if (action === \"value\") {\n            if (arguments.length === 1)\n                return onoff_value(this);\n            else\n                return onoff_change(this, arguments[1]);\n        } else if (action == \"disabled\") {\n            return this.find(\".btn\").toggleClass(\"disabled\", arguments[1]);\n        } else {\n            console.warn(\"unknown switch action: \" + action);\n        }\n    };\n\n    /* ----------------------------------------------------------------------------\n     * Sliders\n     *\n     * <div class=\"slider\" value=\"0.5\">\n     *    <div class=\"slider-bar\">\n     *        <div class=\"slider-thumb\"></div>\n     *    </div>\n     *    <div class=\"slider-bar\">\n     *        <!-- optional left overs -->\n     *    </div>\n     * </div>\n     *\n     * A slider control. The first div.slider-bar is the one that is resized.\n     * The value will be bounded between 0 and 1 as a floating point number.\n     *\n     * The following div.slider-bar if present is resized to fill the remainder\n     * of the slider if not given a specific size. You can put more div.slider-bar\n     * inside it to reflect squashing other prevous allocations.\n     *\n     * If the following div.slider-bar have a width specified, then the\n     * slider supports the concept of overflowing. If the slider overflows\n     * it will get the .slider-warning class and go a bit red.\n     *\n     * On document creation any div.slider are automatically turned into\n     * Bar graphs.\n     *\n     * Slider has the following extra read/write properties:\n     *\n     * .value: the floating point value the slider is set to.\n     * .disabled: whether to display slider as disabled and refuse interacton.\n     *\n     * Slider has this event:\n     *\n     * on('change'): fired when the slider changes, passes value as additional arg.\n     */\n\n    function resize_flex(slider, flex, total, part) {\n        var value = 0;\n        if (part > total)\n            value = 1;\n        else if (part < 0 || isNaN(part))\n            value = 0;\n        else if (!isNaN(total) && total > 0 && part >= 0)\n            value = (part / total);\n        $(flex).css('width', (value * 100) + \"%\").\n            next(\"div\").css('margin-left', $(flex).css('width'));\n\n        /* Set the property and the attribute */\n        slider.value = value;\n    }\n\n    function update_value(slider) {\n        resize_flex(slider, $(slider).children(\"div.slider-bar\").first()[0], 1, slider.value);\n    }\n\n    function check_overflow(slider) {\n        $(slider).toggleClass(\"slider-warning\",\n                              slider.offsetWidth < slider.scrollWidth);\n    }\n\n    function setup_slider(slider) {\n        $(slider).attr('unselectable', 'on');\n\n        Object.defineProperty(slider, \"value\", {\n            get: function() {\n                return parseFloat(this.getAttribute(\"value\"));\n            },\n            set: function(v) {\n                var s = String(v);\n                if (s != this.getAttribute(\"value\"))\n                    this.setAttribute(\"value\", v);\n            }\n        });\n\n        Object.defineProperty(slider, \"disabled\", {\n            get: function() {\n                if (!this.hasAttribute(\"disabled\"))\n                    return false;\n                return this.getAttribute(\"disabled\").toLowerCase() != \"false\";\n            },\n            set: function(v) {\n                this.setAttribute(\"disabled\", v ? \"true\" : \"false\");\n            }\n        });\n\n        update_value(slider);\n        check_overflow(slider);\n\n        $(slider).on(\"change\", function() {\n            update_value(slider);\n            $(slider).toggleClass(\"slider-disabled\", slider.disabled);\n        });\n\n        if (slider.disabled)\n            $(slider).addClass(\"slider-disabled\");\n\n        $(slider).on(\"mousedown\", function(ev) {\n            if (slider.disabled)\n                return true; /* default action */\n            var flex;\n            var offset = $(slider).offset().left;\n            if ($(ev.target).hasClass(\"slider-thumb\")) {\n                var hitx  = (ev.offsetX || ev.clientX - $(ev.target).offset().left);\n                offset += (hitx - $(ev.target).outerWidth() / 2);\n                flex = $(ev.target).parent()[0];\n            } else {\n                flex = $(slider).children(\"div.slider-bar\").first()[0];\n                resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n                $(slider).trigger(\"change\", [slider.value]);\n                check_overflow(slider);\n            }\n\n            $(document).\n                on(\"mousemove.slider\", function(ev) {\n                    resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n                    $(slider).trigger(\"change\", [slider.value]);\n                    check_overflow(slider);\n                    return false;\n                }).\n                on(\"mouseup.slider\", function(ev) {\n                    $(document).\n                        off(\"mousemove.slider\").\n                        off(\"mouseup.slider\");\n                    return false;\n                });\n            return false; /* no default action */\n        });\n    }\n\n    function setup_sliders() {\n        $(\"div.slider\").each(function() {\n            setup_slider(this);\n        });\n    }\n\n    $.fn.slider = function Slider(action) {\n        var sel = this;\n        var div;\n        if (arguments.length === 0 || action == \"refresh\") {\n            sel.each(function() {\n                setup_slider(this);\n            });\n            return sel;\n        } else {\n            console.warn(\"unknown slider action: \" + action);\n        }\n    };\n\n    $(document).ready(setup_sliders);\n\n    /* -----------------------------------------------------------------------------\n     * Privileged UI actions.\n     */\n\n    // placement is optional, \"top\", \"left\", \"bottom\", \"right\"\n    $.fn.update_privileged = function update_privileged(perm, denied_message, placement) {\n        var allowed = (perm.allowed !== false);\n        var selector = this;\n\n        selector.each(function() {\n            // preserve old title first time to use when allowed\n            // activate tooltip\n            var allowed_key = 'allowed-title';\n            if (typeof $(this).data(allowed_key) === 'undefined' ||\n                   $(this).data(allowed_key) === false)\n                $(this).data(allowed_key, $(this).attr('title') || \"\");\n\n            var options = { html: true };\n            if (placement)\n                options['placement'] = placement;\n\n            $(this).tooltip(options);\n\n            if ($(this).hasClass(\"disabled\") === allowed) {\n              $(this).toggleClass(\"disabled\", !allowed)\n                   .attr('data-original-title', null);\n\n              if (allowed)\n                  $(this).attr('title', $(this).data(allowed_key));\n              else\n                  $(this).attr('title', denied_message);\n              $(this).tooltip('fixTitle');\n            }\n        });\n\n        return selector;\n    };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/patterns.js\n// module id = 5\n// module chunks = 0","module.exports = \"<div class=\\\"modal\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" data-backdrop=\\\"static\\\">\\n  <div class=\\\"modal-dialog\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title realms-op-title\\\"></h4>\\n      </div>\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"realms-op-fields\\\">\\n          <table class=\\\"form-table-ct realms-op-form\\\">\\n            <tr class=\\\"realms-op-join-only-row\\\">\\n              <td><label class=\\\"control-label\\\" translatable=\\\"yes\\\">Domain Address</label></td>\\n              <td>\\n                <input class=\\\"realms-op-field form-control realms-op-address\\\" type=\\\"text\\\" value=\\\"\\\"/>\\n              </td>\\n              <td class=\\\"realms-op-zero-width\\\">\\n                <div class=\\\"realms-op-address-spinner\\\" hidden>\\n                  <span class=\\\"spinner spinner-xs spinner-inline\\\"></span>\\n                </div>\\n                <div class=\\\"realms-op-address-error\\\" hidden>\\n                  <span class=\\\"fa fa-lg fa-exclamation\\\"></span>\\n                </div>\\n              </td>\\n            </tr>\\n            <tr class=\\\"realms-op-join-only-row\\\">\\n              <td class=\\\"header\\\"></td>\\n            </tr>\\n            <tr class=\\\"realms-op-join-only-row realm-active-directory-only\\\">\\n              <td><label class=\\\"control-label\\\" translatable=\\\"yes\\\">Computer OU</label></td>\\n              <td>\\n                <input class=\\\"realms-op-field form-control realms-op-computer-ou\\\" type=\\\"text\\\" value=\\\"\\\"/>\\n              </td>\\n            </tr>\\n            <tr class=\\\"realms-op-join-only-row realms-authentification-row\\\">\\n              <td><label class=\\\"control-label\\\" translatable=\\\"yes\\\">Authentication</label></td>\\n              <td>\\n                  <div class=\\\"btn-group bootstrap-select dropdown form-control realms-op-auth\\\">\\n                      <button class=\\\"btn btn-default dropdown-toggle\\\" type=\\\"button\\\" data-toggle=\\\"dropdown\\\">\\n                          <span class=\\\"pull-left\\\"></span>\\n                          <div class=\\\"caret\\\"></div>\\n                      </button>\\n                      <ul class=\\\"dropdown-menu\\\">\\n                      </ul>\\n                  </div>\\n              </td>\\n            </tr>\\n            <tr class=\\\"realms-op-join-only-row realms-op-user-row\\\">\\n              <td><label class=\\\"control-label\\\" translatable=\\\"yes\\\">User Name</label></td>\\n              <td>\\n                <input class=\\\"realms-op-field form-control realms-op-user\\\" type=\\\"text\\\" value=\\\"\\\"/>\\n              </td>\\n            </tr>\\n            <tr class=\\\"realms-op-join-only-row realms-op-user-password-row\\\">\\n              <td><label class=\\\"control-label\\\" translatable=\\\"yes\\\">User Password</label></td>\\n              <td>\\n                <input class=\\\"realms-op-field form-control realms-op-user-password\\\" type=\\\"password\\\" value=\\\"\\\"/>\\n              </td>\\n            </tr>\\n            <tr class=\\\"realms-op-join-only-row realms-op-admin-row\\\">\\n              <td><label class=\\\"control-label\\\" translatable=\\\"yes\\\">Domain Administrator Name</label></td>\\n              <td>\\n                <input class=\\\"realms-op-field form-control realms-op-admin\\\" type=\\\"text\\\" value=\\\"\\\"/>\\n              </td>\\n            </tr>\\n            <tr class=\\\"realms-op-join-only-row realms-op-admin-password-row\\\">\\n              <td><label class=\\\"control-label\\\" translatable=\\\"yes\\\">Domain Administrator Password</label></td>\\n              <td>\\n                <input class=\\\"realms-op-field form-control realms-op-admin-password\\\" type=\\\"password\\\" value=\\\"\\\"/>\\n              </td>\\n            </tr>\\n            <tr class=\\\"realms-op-join-only-row realms-op-otp-row\\\">\\n              <td><label class=\\\"control-label\\\" translatable=\\\"yes\\\">One Time Password</label></td>\\n              <td>\\n                <input class=\\\"realms-op-field form-control realms-op-ot-password\\\" type=\\\"password\\\" value=\\\"\\\"/>\\n              </td>\\n            </tr>\\n            <tr>\\n              <td colspan=\\\"3\\\">\\n                <div class=\\\"realms-op-error\\\" hidden></div>\\n                  <pre class=\\\"realms-op-diagnostics\\\" hidden>\\n                  </pre>\\n                </div>\\n              </td>\\n            </tr>\\n          </table>\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <div class=\\\"realms-op-spinner spinner pull-left\\\"></div>\\n        <span class=\\\"realms-op-wait-message\\\" translatable=\\\"yes\\\" hidden>This may take a while</span>\\n        <button class=\\\"btn btn-default realms-op-cancel\\\" translatable=\\\"yes\\\">Cancel</button>\\n        <button class=\\\"btn btn-primary realms-op-apply\\\" translatable=\\\"yes\\\">Next</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/realmd/operation.html\n// module id = 6\n// module chunks = 0"],"sourceRoot":""}