{"version":3,"sources":["webpack:///systemd/logs.min.js","webpack:///webpack/bootstrap 5d3e6d5b816e3b8227bd?2a64","webpack:///external \"cockpit\"?478e","webpack:///../pkg/systemd/logs.js","webpack:///external \"jQuery\"","webpack:///../pkg/lib/journal.js","webpack:///../pkg/lib/mustache.js","webpack:///../~/mustache/mustache.js","webpack:///../pkg/lib/journal_day_header.mustache","webpack:///../pkg/lib/journal_line.mustache","webpack:///../pkg/lib/journal_reboot.mustache"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","2","cockpit","153","$","update_problems","problem_paths","i","problems","displayable_problems","ID","count","Count","problem_path","path","UUID","Duphash","journalbox","outer","start","match","day_box","query_error","error","console","warn","message","prepend_entries","entries","length","renderer","prepend","prepend_flush","renderitems_day_cache","append_entries","append","append_flush","didnt_reach_start","first","button","_","start_box","html","click","stopped","text","procs","push","journal","journalctl","follow","reverse","cursor","fail","stream","shift","query_more","this","stop","done","empty","update_day_box","d","box","firstChild","nextSibling","hasClass","offset","top","currentIndex","window","scrollY","query_count","on","options","all","last","boot","since","off","each","proc","stop_query","filler","update_query","item","query_prio","location","prio_level","parseInt","all_prios","document","getElementById","childNodes","j","nodeName","getAttribute","toString","query_start","scrollTop","height","update_entry","show_entry","entry","Date","is_problem","find_problems","create_problem","out","create_entry","show_error","printable","keys","Object","sort","key","css","switch_tab","new_tab","new_content","find","removeClass","addClass","replaceWith","problem","all_p","ge_t","pi_t","pd_t","ge","pi","pd","tab","d_btn","r_btn","IsReported","pid","Reports","url","attr","CanBeReported","children","spawn","superuser","reload","ex","exit_status","insertAfter","service","DeleteProblems","go","indexOf","header","create_problem_details","GetProblemData","args","elem","val","c1","problem_info_1","String","c2","problem_info_2","problem_details_elems","problem_render_callbacks","render_table_eq","orig","render_table","render_table_co","delimiter","lines","split","result","line","render_multiline","rendered","replace","render_multitable","RegExp","render_dso_list","render_open_fds","join","render_cgroup","render_mountinfo","render_maps","render_limits","render_backtrace","content","content_json","JSON","parse","crash_thread","other_threads","other_items","threads","thread_key","thread","hasOwnProperty","create_detail_from_parsed_core_backtrace","detail_content","create_table_from_thread","thread_num","all_keys","get_all_keys_from_frames","table","frame_num","frame_key","frame","key_key","title","row_content","desired_ordered_of_keys","all_ordered_keys","in_key","key_index","update","hide","show","translate","gettext","problems_client","dbus","proxy","proxies","core_backtrace","os_info","environ","limits","cgroup","namespaces","maps","dso_list","mountinfo","proc_pid_status","open_fds","var_log_messages","not-reportable","exploitable","suspend_stats","dmesg","container_rootfs","docker_inspect","r","Deferred","wait","GetProblems","resolve","err","extend","parent_options","stringify","prio","154","jQuery","155","_typeof","Symbol","iterator","obj","constructor","prototype","output_funcs_for_box","render_line","ident","time","parts","Mustache","render","line_template","render_reboot_separator","reboot_line","render_day_header","day","day_header_template","parse_html","string","div","createElement","innerHTML","trim","jquery","reboot_template","reboot","elt","appendChild","insertBefore","remove_last","lastChild","removeChild","remove_first","C_","fire_streamers","ents","streamers","apply","promise","clearInterval","interval","arg","matches","arguments","Array","undefined","cmd","directory","until","after","dfd","defer","buffer","host","batch","latency","data","forEach","e","setInterval","reject","always","callback","close","value","format","month_names","funcs_or_box","copy_object","o","format_entry","journal_entry","pad","n","str","toFixed","full","getMonth","getDate","getFullYear","getHours","getMinutes","bootid","entry_is_equal","a","b","render_state_line","state","output_funcs","last_time","start_new_line","top_state","bottom_state","top_output","header_present","line_present","first_time","bottom_output","logbox","max_entries","removeAttribute","setAttribute","tail","concat","slice","createTextNode","156","template","cache","mustache","view","partials","to_html","send","clearCache","157","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","global","factory","isFunction","object","typeStr","isArray","escapeRegExp","hasProperty","propName","testRegExp","re","regExpTest","isWhitespace","nonSpaceRe","escapeHtml","s","entityMap","parseTemplate","tags","stripSpace","hasTag","nonSpace","spaces","tokens","pop","compileTags","tagsToCompile","spaceRe","Error","openingTagRe","closingTagRe","closingCurlyRe","sections","type","chr","token","openSection","scanner","Scanner","eos","pos","scanUntil","valueLength","charAt","scan","tagRe","whiteRe","equalsRe","curlyRe","nestTokens","squashTokens","lastToken","squashedTokens","numTokens","section","nestedTokens","collector","Context","parentContext",".","parent","Writer","objectToString","test","&","<",">","\"","'","/","`","=","index","substring","search","lookup","name","names","context","lookupHit","renderTokens","originalTemplate","symbol","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","subRender","self","escape","version","defaultWriter","TypeError","158","159","160"],"mappings":"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","file":"systemd/logs.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(153);\n\n\n/***/ },\n\n/***/ 2:\n/***/ function(module, exports) {\n\n\tmodule.exports = cockpit;\n\n/***/ },\n\n/***/ 153:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\"use strict\";\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2015 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\tvar $ = __webpack_require__(154);\n\t$(function () {\n\t    \"use strict\";\n\t\n\t    var cockpit = __webpack_require__(2);\n\t\n\t    var journal = __webpack_require__(155);\n\t\n\t    cockpit.translate();\n\t    var _ = cockpit.gettext;\n\t\n\t    var problems_client = cockpit.dbus('org.freedesktop.problems', { superuser: \"try\" });\n\t    var service = problems_client.proxy('org.freedesktop.Problems2', '/org/freedesktop/Problems2');\n\t    var problems = problems_client.proxies('org.freedesktop.Problems2.Entry', '/org/freedesktop/Problems2/Entry');\n\t\n\t    // A map of ABRT's problems items and it's callback for rendering\n\t    var problem_render_callbacks = { 'core_backtrace': render_backtrace,\n\t        'os_info': render_table_eq,\n\t        'environ': render_table_eq,\n\t        'limits': render_limits,\n\t        'cgroup': render_cgroup,\n\t        'namespaces': render_table_co,\n\t        'maps': render_maps,\n\t        'dso_list': render_dso_list,\n\t        'mountinfo': render_mountinfo,\n\t        'proc_pid_status': render_table_co,\n\t        'open_fds': render_open_fds,\n\t        'var_log_messages': render_multiline,\n\t        'not-reportable': render_multiline,\n\t        'exploitable': render_multiline,\n\t        'suspend_stats': render_table_co,\n\t        'dmesg': render_multiline,\n\t        'container_rootfs': render_multiline,\n\t        'docker_inspect': render_multiline\n\t    };\n\t\n\t    var problem_info_1 = ['reason', 'cmdline', 'executable', 'package', 'component', 'crash_function', 'pid', 'pwd', 'hostname', 'count', 'type', 'analyzer', 'rootdir', 'duphash', 'exception_type', 'container', 'container_uuid', 'container_cmdline', 'container_id', 'container_image'];\n\t\n\t    var problem_info_2 = ['Directory', 'username', 'abrt_version', 'architecture', 'global_pid', 'kernel', 'last_occurrence', 'os_release', 'pkg_fingerprint', 'pkg_vendor', 'runlevel', 'tid', 'time', 'uid', 'uuid'];\n\t\n\t    var displayable_problems = {};\n\t\n\t    // Get list of all problems that can be displayed\n\t    var find_problems = function find_problems() {\n\t        var r = $.Deferred();\n\t        problems.wait(function () {\n\t            try {\n\t                service.GetProblems(0, {}).done(function (problem_paths, options) {\n\t                    update_problems(problem_paths);\n\t                    r.resolve();\n\t                });\n\t            } catch (err) {\n\t                // ABRT is not installed. Suggest installing?\n\t                r.resolve();\n\t            }\n\t        });\n\t        return r;\n\t    };\n\t\n\t    function update_problems(problem_paths) {\n\t        for (var i in problem_paths) {\n\t            var p = problems[problem_paths[i]];\n\t            displayable_problems[p.ID] = { 'count': p.Count, 'problem_path': p.path };\n\t            displayable_problems[p.UUID] = { 'count': p.Count, 'problem_path': p.path };\n\t            displayable_problems[p.Duphash] = { 'count': p.Count, 'problem_path': p.path };\n\t        }\n\t    }\n\t\n\t    /* Not public API */\n\t    function journalbox(outer, start, match, day_box) {\n\t        var box = $('<div class=\"panel panel-default cockpit-log-panel\" role=\"table\">');\n\t        var start_box = $('<div class=\"journal-start\" role=\"rowgroup\">');\n\t\n\t        outer.empty().append(box, start_box);\n\t\n\t        var query_count = 5000;\n\t        var query_more = 1000;\n\t\n\t        var renderer = journal.renderer(box);\n\t        /* cache to store offsets for days */\n\t        var renderitems_day_cache = null;\n\t        var procs = [];\n\t\n\t        function query_error(error) {\n\t            /* TODO: blank slate */\n\t            console.warn(cockpit.message(error));\n\t        }\n\t\n\t        function prepend_entries(entries) {\n\t            for (var i = 0; i < entries.length; i++) {\n\t                renderer.prepend(entries[i]);\n\t            }renderer.prepend_flush();\n\t            /* empty cache for day offsets */\n\t            renderitems_day_cache = null;\n\t        }\n\t\n\t        function append_entries(entries) {\n\t            for (var i = 0; i < entries.length; i++) {\n\t                renderer.append(entries[i]);\n\t            }renderer.append_flush();\n\t            /* empty cache for day offsets */\n\t            renderitems_day_cache = null;\n\t        }\n\t\n\t        function didnt_reach_start(first) {\n\t            var button = $('<button id=\"journal-load-earlier\" class=\"btn btn-default\" data-inline=\"true\" data-mini=\"true\">' + _(\"Load earlier entries\") + '</button>');\n\t            start_box.html(button);\n\t            button.click(function () {\n\t                var count = 0;\n\t                var stopped = null;\n\t                start_box.text(_(\"Loading...\"));\n\t                procs.push(journal.journalctl(match, { follow: false, reverse: true, cursor: first }).fail(query_error).stream(function (entries) {\n\t                    if (entries[0][\"__CURSOR\"] == first) entries.shift();\n\t                    count += entries.length;\n\t                    append_entries(entries);\n\t                    if (count >= query_more) {\n\t                        stopped = entries[entries.length - 1][\"__CURSOR\"];\n\t                        didnt_reach_start(stopped);\n\t                        this.stop();\n\t                    }\n\t                }).done(function () {\n\t                    if (start_box.text() == _(\"Loading...\")) start_box.empty();\n\t                }));\n\t            });\n\t        }\n\t\n\t        function follow(cursor) {\n\t            procs.push(journal.journalctl(match, { follow: true, count: 0, cursor: cursor }).fail(query_error).stream(function (entries) {\n\t                if (entries[0][\"__CURSOR\"] == cursor) entries.shift();\n\t                prepend_entries(entries);\n\t                update_day_box();\n\t            }));\n\t        }\n\t\n\t        function update_day_box() {\n\t            /* Build cache if empty\n\t             */\n\t            if (renderitems_day_cache === null) {\n\t                renderitems_day_cache = [];\n\t                for (var d = box[0].firstChild; d; d = d.nextSibling) {\n\t                    if ($(d).hasClass('panel-heading')) renderitems_day_cache.push([$(d).offset().top, $(d).text()]);\n\t                }\n\t            }\n\t            if (renderitems_day_cache.length > 0) {\n\t                /* Find the last day that begins above top\n\t                 */\n\t                var currentIndex = 0;\n\t                var top = window.scrollY;\n\t                while (currentIndex + 1 < renderitems_day_cache.length && renderitems_day_cache[currentIndex + 1][0] < top) {\n\t                    currentIndex++;\n\t                }\n\t                day_box.text(renderitems_day_cache[currentIndex][1]);\n\t            } else {\n\t                /* No visible day headers\n\t                 */\n\t                day_box.text(_(\"Go to\"));\n\t            }\n\t        }\n\t\n\t        start_box.text(_(\"Loading...\"));\n\t\n\t        $(window).on('scroll', update_day_box);\n\t\n\t        var options = {\n\t            follow: false,\n\t            reverse: true\n\t        };\n\t\n\t        var all = false;\n\t        if (start == 'boot') {\n\t            options[\"boot\"] = null;\n\t        } else if (start == 'last-24h') {\n\t            options[\"since\"] = \"-1days\";\n\t        } else if (start == 'last-week') {\n\t            options[\"since\"] = \"-7days\";\n\t        } else {\n\t            all = true;\n\t        }\n\t\n\t        var last = null;\n\t        var count = 0;\n\t        var stopped = null;\n\t\n\t        procs.push(journal.journalctl(match, options).fail(query_error).stream(function (entries) {\n\t            if (!last) {\n\t                last = entries[0][\"__CURSOR\"];\n\t                follow(last);\n\t                update_day_box();\n\t            }\n\t            count += entries.length;\n\t            append_entries(entries);\n\t            if (count >= query_count) {\n\t                stopped = entries[entries.length - 1][\"__CURSOR\"];\n\t                didnt_reach_start(stopped);\n\t                this.stop();\n\t            }\n\t        }).done(function () {\n\t            if (start_box.text() == _(\"Loading...\")) start_box.empty();\n\t            if (!last) {\n\t                procs.push(journal.journalctl(match, { follow: true, count: 0,\n\t                    boot: options[\"boot\"],\n\t                    since: options[\"since\"]\n\t                }).fail(query_error).stream(function (entries) {\n\t                    prepend_entries(entries);\n\t                    update_day_box();\n\t                }));\n\t            }\n\t            if (!all || stopped) didnt_reach_start();\n\t        }));\n\t\n\t        outer.stop = function stop() {\n\t            $(window).off('scroll', update_day_box);\n\t            $.each(procs, function (i, proc) {\n\t                proc.stop();\n\t            });\n\t        };\n\t\n\t        return outer;\n\t    }\n\t\n\t    var filler;\n\t\n\t    function stop_query() {\n\t        if (filler) filler.stop();\n\t    }\n\t\n\t    function update_query() {\n\t        stop_query();\n\t\n\t        var match = [];\n\t\n\t        var query_prio = cockpit.location.options['prio'] || \"3\";\n\t        var prio_level = parseInt(query_prio, 10);\n\t\n\t        // Set selected item into priority dropdown menu\n\t        var all_prios = document.getElementById('prio-lists').childNodes;\n\t        var item;\n\t        for (var j = 0; j < all_prios.length; j++) {\n\t            if (all_prios[j].nodeName === 'LI') {\n\t                item = all_prios[j].childNodes[0];\n\t                if (item.getAttribute('data-prio') === query_prio) {\n\t                    $('#journal-prio').text(item.text);\n\t                    break;\n\t                }\n\t            }\n\t        }\n\t\n\t        if (prio_level) {\n\t            for (var i = 0; i <= prio_level; i++) {\n\t                match.push('PRIORITY=' + i.toString());\n\t            }\n\t        }\n\t\n\t        // If item 'Only Problems' was selected, match only ABRT's problems\n\t        if (prio_level === 2) {\n\t            match.push('SYSLOG_IDENTIFIER=abrt-notification');\n\t        }\n\t\n\t        var options = cockpit.location.options;\n\t        if (options['service']) match.push('_SYSTEMD_UNIT=' + options['service']);else if (options['tag']) match.push('SYSLOG_IDENTIFIER=' + options['tag']);\n\t\n\t        var query_start = cockpit.location.options['start'] || \"recent\";\n\t        if (query_start == 'recent') $(window).scrollTop($(document).height());\n\t\n\t        journalbox($(\"#journal-box\"), query_start, match, $('#journal-current-day'));\n\t    }\n\t\n\t    function update_entry() {\n\t        var cursor = cockpit.location.path[0];\n\t        var out = $('#journal-entry-fields');\n\t\n\t        out.empty();\n\t\n\t        function show_entry(entry) {\n\t            var d = new Date(entry[\"__REALTIME_TIMESTAMP\"] / 1000);\n\t            $('#journal-entry-date').text(d.toString());\n\t\n\t            var id;\n\t            if (entry[\"SYSLOG_IDENTIFIER\"]) id = entry[\"SYSLOG_IDENTIFIER\"];else if (entry[\"_SYSTEMD_UNIT\"]) id = entry[\"_SYSTEMD_UNIT\"];else id = _(\"Journal entry\");\n\t\n\t            var is_problem = false;\n\t            if (id === 'abrt-notification') {\n\t                is_problem = true;\n\t                id = entry['PROBLEM_BINARY'];\n\t            }\n\t\n\t            $('#journal-entry-id').text(id);\n\t\n\t            if (is_problem) {\n\t                find_problems().done(function () {\n\t                    create_problem(out, entry);\n\t                });\n\t            } else {\n\t                create_entry(out, entry);\n\t            }\n\t        }\n\t\n\t        function show_error(error) {\n\t            out.append($('<tr>').append($('<td>').text(error)));\n\t        }\n\t\n\t        journal.journalctl({ cursor: cursor, count: 1, follow: false }).done(function (entries) {\n\t            if (entries.length >= 1 && entries[0][\"__CURSOR\"] == cursor) show_entry(entries[0]);else show_error(_(\"Journal entry not found\"));\n\t        }).fail(function (error) {\n\t            show_error(error);\n\t        });\n\t    }\n\t\n\t    function create_entry(out, entry) {\n\t        $('#journal-entry-message').text(journal.printable(entry['MESSAGE']));\n\t        var keys = Object.keys(entry).sort();\n\t        $.each(keys, function (i, key) {\n\t            if (key !== 'MESSAGE') {\n\t                out.append($('<tr>').append($('<td>').css('text-align', 'right').text(key), $('<td>').css('text-align', 'left').text(journal.printable(entry[key]))));\n\t            }\n\t        });\n\t    }\n\t\n\t    function create_problem(out, entry) {\n\t        var problem = null;\n\t        var all_p = [entry['PROBLEM_DIR'], entry['PROBLEM_DUPHASH'], entry['PROBLEM_UUID']];\n\t        for (var i = 0; i < all_p.length; i++) {\n\t            if (all_p[i] in displayable_problems) {\n\t                problem = problems[displayable_problems[all_p[i]]['problem_path']];\n\t                break;\n\t            }\n\t        }\n\t\n\t        // Display unknown problems as standard logs\n\t        // unknown problem = deleted problem | problem of different user\n\t        if (problem === null) {\n\t            create_entry(out, entry);\n\t            return;\n\t        }\n\t\n\t        function switch_tab(new_tab, new_content) {\n\t            out.find('li').removeClass('active');\n\t            new_tab.addClass('active');\n\t            out.find('tbody.tab').first().replaceWith(new_content);\n\t        }\n\t\n\t        $('#journal-entry-message').text('');\n\t\n\t        var ge_t = $('<li class=\"active\">').append($('<a>').append($('<span translatable=\"yes\">').text(_(\"General\"))));\n\t        var pi_t = $('<li>').append($('<a>').append($('<span translatable=\"yes\">').text(_(\"Problem info\"))));\n\t        var pd_t = $('<li>').append($('<a>').append($('<span translatable=\"yes\">').text(_(\"Problem details\"))));\n\t\n\t        var ge = $('<tbody>').addClass('tab');\n\t        var pi = $('<tbody>').addClass('tab');\n\t        var pd = $('<tbody>').addClass('tab').append($('<tr>').append($('<div class=\"panel-group\" id=\"accordion-markup\">')));\n\t\n\t        var tab = $('<ul class=\"nav nav-tabs nav-tabs-pf\">');\n\t\n\t        var d_btn = $('<button class=\"btn btn-danger problem-btn btn-delete pficon pficon-delete\">');\n\t        var r_btn = $();\n\t        if (problem.IsReported) {\n\t            for (var pid = 0; pid < problem.Reports.length; pid++) {\n\t                if (problem.Reports[pid][0] === 'ABRT Server') {\n\t                    var url = problem.Reports[pid][1]['URL']['v']['v'];\n\t                    r_btn = $('<a class=\"problem-btn\">').attr('href', url).attr(\"target\", \"_blank\").text(_(\"Reported\"));\n\t                    break;\n\t                }\n\t            }\n\t        } else if (problem.CanBeReported) {\n\t            r_btn = $('<button class=\"btn btn-primary problem-btn\">').text(_(\"Report\"));\n\t\n\t            r_btn.click(function () {\n\t                tab.children(':last-child').replaceWith($('<div class=\"spinner problem-btn\">'));\n\t                var proc = cockpit.spawn(['reporter-ureport', '-d', problem.ID], { superuser: 'true' });\n\t                proc.done(function () {\n\t                    window.location.reload();\n\t                });\n\t                proc.fail(function (ex) {\n\t                    var message;\n\t                    // 70 is 'This problem has already been reported'\n\t                    if (ex.exit_status === 70) {\n\t                        window.location.reload();\n\t                        return;\n\t                    } else if (ex.problem === 'access-denied') {\n\t                        message = _(\"Not authorized to upload-report\");\n\t                    } else if (ex.problem === \"not-found\") {\n\t                        message = _(\"Reporter 'reporter-ureport' not found.\");\n\t                    } else {\n\t                        message = _(\"Reporting was unsucessful. Try running `reporter-ureport -d \" + problem.ID + \"`\");\n\t                    }\n\t                    $('<div class=\"alert alert-danger\">').append('<span class=\"pficon pficon-error-circle-o\">').text(message).insertAfter(\".breadcrumb\");\n\t                    tab.children(':last-child').replaceWith($('<span>'));\n\t                });\n\t            });\n\t        }\n\t\n\t        ge_t.click(function () {\n\t            switch_tab(ge_t, ge);\n\t        });\n\t\n\t        pi_t.click(function () {\n\t            switch_tab(pi_t, pi);\n\t        });\n\t\n\t        pd_t.click(function () {\n\t            switch_tab(pd_t, pd);\n\t        });\n\t\n\t        d_btn.click(function () {\n\t            service.DeleteProblems([problem.path]);\n\t            displayable_problems = {};\n\t            find_problems().done(function () {\n\t                cockpit.location.go('/');\n\t            });\n\t        });\n\t\n\t        // write into general tab non-ABRT related items\n\t        var keys = Object.keys(entry).sort();\n\t        $.each(keys, function (i, key) {\n\t            if (key !== 'MESSAGE' && key.indexOf('PROBLEM_') !== 0) {\n\t                ge.append($('<tr>').append($('<td>').css('text-align', 'right').text(key), $('<td>').css('text-align', 'left').text(journal.printable(entry[key]))));\n\t            }\n\t        });\n\t\n\t        tab.html(ge_t);\n\t        tab.append(pi_t);\n\t        tab.append(pd_t);\n\t        tab.append(d_btn);\n\t        tab.append(r_btn);\n\t\n\t        var header = $('<tr>').append($('<th colspan=2>').append(tab));\n\t\n\t        out.html(header).append(ge);\n\t        out.css(\"margin-bottom\", \"0px\");\n\t        create_problem_details(problem, pi, pd);\n\t    }\n\t\n\t    function create_problem_details(problem, pi, pd) {\n\t        service.GetProblemData(problem.path).done(function (args, options) {\n\t            var i, elem, val;\n\t            // Render first column of problem info\n\t            var c1 = $('<table>').css('display', 'inline-block').css('padding-right', '200px').css('vertical-align', 'top').addClass('info-table-ct');\n\t            pi.append(c1);\n\t            for (i = 0; i < problem_info_1.length; i++) {\n\t                elem = problem_info_1[i];\n\t                if (elem in args) {\n\t                    val = args[elem][2];\n\t                    c1.append($('<tr>').append($('<td>').css('text-align', 'right').text(elem), $('<td>').css('text-align', 'left').text(String(val))));\n\t                }\n\t            }\n\t\n\t            // Render second column of problem info\n\t            var c2 = $('<table>').css('display', 'inline-block').css('vertical-align', 'top').addClass('info-table-ct');\n\t            pi.append(c2);\n\t            for (i = 0; i < problem_info_2.length; i++) {\n\t                elem = problem_info_2[i];\n\t                if (elem in args) {\n\t                    val = args[elem][2];\n\t                    // Display date properly\n\t                    if (['last_occurrence', 'time'].indexOf(elem) !== -1) {\n\t                        var d = new Date(val / 1000);\n\t                        val = d.toString();\n\t                    }\n\t                    c2.append($('<tr>').append($('<td>').css('text-align', 'right').text(elem), $('<td>').css('text-align', 'left').text(String(val))));\n\t                }\n\t            }\n\t\n\t            // Render problem details\n\t            var problem_details_elems = Object.keys(problem_render_callbacks);\n\t            $.each(problem_details_elems, function (i, key) {\n\t                if (key in args) {\n\t                    val = problem_render_callbacks[key](args[key]);\n\t                    $('.panel-group', pd).append($('<div class=\"panel panel-default\">').css(\"border-width\", \"0px 0px 2px 0px\").css(\"margin-bottom\", \"0px\").append($('<div class=\"panel-heading problem-panel\">').attr('data-toggle', 'collapse').attr('data-target', '#' + key).attr('data-parent', '#accordion-markup').append($('<h4 class=\"panel-title\">').append($('<a class=\"accordion-toggle\">').text(key))), $('<div class=\"panel-collapse collapse\">').attr('id', key).append($('<div class=\"panel-body\">').html(val))));\n\t                }\n\t            });\n\t        });\n\t    }\n\t\n\t    function render_table_eq(orig) {\n\t        return render_table(orig, '=');\n\t    }\n\t\n\t    function render_table_co(orig) {\n\t        return render_table(orig, ':');\n\t    }\n\t\n\t    function render_table(orig, delimiter) {\n\t        var lines = orig[2].split('\\n');\n\t        var result = '<table class=\"detail_table\">';\n\t\n\t        for (var i = 0; i < lines.length - 1; i++) {\n\t            var line = lines[i].split(delimiter);\n\t            result += '<tr> <td class=\"text-right\">' + line[0];\n\t            result += '<td class=\"text-left\">' + line[1];\n\t            result += '</tr>';\n\t        }\n\t\n\t        result += '</table>';\n\t        return result;\n\t    }\n\t\n\t    function render_multiline(orig) {\n\t        var rendered = orig[2].replace(/\\n/g, '<br>');\n\t        return rendered;\n\t    }\n\t\n\t    function render_multitable(orig, delimiter) {\n\t        var rendered = orig.replace(RegExp(delimiter, 'g'), '</td><td>');\n\t        rendered = rendered.replace(/\\n/g, '</td></tr><tr><td>');\n\t        return '<table class=\"detail_table\"><tr><td>' + rendered + '</td></tr></table>';\n\t    }\n\t\n\t    function render_dso_list(orig) {\n\t        var rendered = orig[2].replace(/^(\\S+\\s+)(\\S+)(.*)$/gm, '$1<b>$2</b>$3');\n\t        return render_multitable(rendered, ' ');\n\t    }\n\t\n\t    function render_open_fds(orig) {\n\t        var lines = orig[2].split('\\n');\n\t        for (var i = 0; i < lines.length - 1; i++) {\n\t            if (i % 5 !== 0) {\n\t                lines[i] = ':' + lines[i];\n\t            }\n\t        }\n\t        return render_multitable(lines.join('\\n'), ':');\n\t    }\n\t\n\t    function render_cgroup(orig) {\n\t        return render_multitable(orig[2], ':');\n\t    }\n\t\n\t    function render_mountinfo(orig) {\n\t        return render_multitable(orig[2].replace(/  +/g, ':'), ' ');\n\t    }\n\t\n\t    function render_maps(orig) {\n\t        return render_multitable(orig[2].replace(/  +/g, ':'), ' ');\n\t    }\n\t\n\t    function render_limits(orig) {\n\t        var lines = orig[2].split('\\n');\n\t        lines[0] = '\":' + lines[0].replace(/(\\S+) (\\S+) /g, '$1:$2 ');\n\t        for (var i = 1; i < lines.length - 1; i++) {\n\t            lines[i] = lines[i].replace(/  +/g, ':');\n\t        }\n\t\n\t        return render_multitable(lines.join('\\n'), ':');\n\t    }\n\t\n\t    function render_backtrace(content) {\n\t        var content_json = JSON.parse(content[2]);\n\t\n\t        var crash_thread = null;\n\t        var other_threads = [];\n\t        var other_items = {};\n\t\n\t        for (var item in content_json) {\n\t            if (item === 'stacktrace') {\n\t                var threads = content_json[item];\n\t                for (var thread_key in threads) {\n\t                    var thread = threads[thread_key];\n\t\n\t                    if (thread.hasOwnProperty(\"crash_thread\") && thread['crash_thread']) {\n\t                        if (thread.hasOwnProperty('frames')) {\n\t                            crash_thread = thread['frames'];\n\t                        }\n\t                    } else {\n\t                        if (thread.hasOwnProperty('frames')) {\n\t                            other_threads.push(thread['frames']);\n\t                        }\n\t                    }\n\t                }\n\t            } else {\n\t                other_items[item] = content_json[item];\n\t            }\n\t        }\n\t        return create_detail_from_parsed_core_backtrace(crash_thread, other_threads, other_items);\n\t    }\n\t\n\t    function create_detail_from_parsed_core_backtrace(crash_thread, other_threads, other_items) {\n\t        var detail_content = '';\n\t        for (var item in other_items) {\n\t            detail_content += item;\n\t            detail_content += ': ' + other_items[item] + \"  \";\n\t        }\n\t\n\t        detail_content += create_table_from_thread(crash_thread);\n\t\n\t        if (other_threads.length !== 0) {\n\t            detail_content += '<div id=\"other_threads_btn_div\"><button class=\"btn btn-default other-threads-btn\" title=\"\">Show all threads</button></div>';\n\t            detail_content += '<div class=\"hidden other_threads\">';\n\t\n\t            var thread_num = 1;\n\t            for (var thread_key in other_threads) {\n\t                detail_content += '\\n';\n\t                detail_content += 'thread: ' + thread_num++ + '\\n';\n\t                detail_content += create_table_from_thread(other_threads[thread_key]);\n\t            }\n\t            detail_content += '</div>';\n\t        }\n\t\n\t        return detail_content;\n\t    }\n\t\n\t    function create_table_from_thread(thread) {\n\t        var all_keys = get_all_keys_from_frames(thread);\n\t\n\t        /* create table legend */\n\t        var table = '<table class=\"detail_table\"><thead><tr><th>Fr #</th>';\n\t        for (var key in all_keys) {\n\t            table += '<th>';\n\t            table += all_keys[key].replace(/_/g, ' ');\n\t            table += '</th>';\n\t        }\n\t        table += '</tr></thead><tbody>';\n\t\n\t        var frame_num = 1;\n\t        for (var frame_key in thread) {\n\t            table += '<tr>';\n\t            table += '<td>';\n\t            table += frame_num++;\n\t            table += '</td>';\n\t\n\t            var frame = thread[frame_key];\n\t            for (var key_key in all_keys) {\n\t                key = all_keys[key_key];\n\t\n\t                var title = '';\n\t                var row_content = '';\n\t                if (key in frame) {\n\t                    row_content = frame[key].toString();\n\t                    if (row_content.length > 8) title = row_content;\n\t                } else row_content = '';\n\t\n\t                table += '<td title=\"' + title + '\">';\n\t                table += row_content;\n\t                table += '</td>';\n\t            }\n\t            table += '</tr>';\n\t        }\n\t\n\t        table += '</tbody></table>';\n\t        return table;\n\t    }\n\t\n\t    function get_all_keys_from_frames(thread) {\n\t        var all_keys = [];\n\t\n\t        for (var frame_key in thread) {\n\t            var frame = thread[frame_key];\n\t            var keys = Object.keys(frame);\n\t\n\t            for (var key in keys) {\n\t                if (all_keys.indexOf(keys[key]) === -1) all_keys.push(keys[key]);\n\t            }\n\t        }\n\t\n\t        /* order keys */\n\t        var desired_ordered_of_keys = ['function_name', 'file_name', 'address', 'build_id', 'build_id_offset'];\n\t\n\t        var all_ordered_keys = [];\n\t\n\t        for (var key_key in desired_ordered_of_keys) {\n\t            var in_key = desired_ordered_of_keys[key_key];\n\t            var key_index = all_keys.indexOf(in_key);\n\t            if (key_index !== -1) {\n\t                all_ordered_keys.push(in_key);\n\t                delete all_keys[key_index];\n\t            }\n\t        }\n\t\n\t        for (key_key in all_keys) {\n\t            all_ordered_keys.push(all_keys[key_key]);\n\t        }\n\t\n\t        return all_ordered_keys;\n\t    }\n\t\n\t    function update() {\n\t        var path = cockpit.location.path;\n\t        if (path.length === 0) {\n\t            $(\"#journal-entry\").hide();\n\t            update_query();\n\t            $(\"#journal\").show();\n\t        } else if (path.length == 1) {\n\t            stop_query();\n\t            $(\"#journal\").hide();\n\t            update_entry();\n\t            $(\"#journal-entry\").show();\n\t        } else {\n\t            /* redirect */\n\t            console.warn(\"not a journal location: \" + path);\n\t            cockpit.location = '';\n\t        }\n\t        $(\"body\").show();\n\t    }\n\t\n\t    $(cockpit).on(\"locationchanged\", update);\n\t\n\t    $('#journal-current-day-menu a').on('click', function () {\n\t        cockpit.location.go([], $.extend(cockpit.location.options, { start: $(this).attr(\"data-op\") }));\n\t    });\n\t\n\t    $('#journal-box').on('click', '.cockpit-logline', function () {\n\t        var cursor = $(this).attr('data-cursor');\n\t        if (cursor) cockpit.location.go([cursor], { 'parent_options': JSON.stringify(cockpit.location.options) });\n\t    });\n\t\n\t    $('#journal-prio-menu a').on('click', function () {\n\t        cockpit.location.go([], $.extend(cockpit.location.options, { prio: $(this).attr('data-prio') }));\n\t    });\n\t\n\t    $('#journal-navigate-home').on(\"click\", function () {\n\t        var parent_options;\n\t        if (cockpit.location.options.parent_options) {\n\t            parent_options = JSON.parse(cockpit.location.options.parent_options);\n\t        }\n\t        cockpit.location.go('/', parent_options);\n\t    });\n\t\n\t    update();\n\t});\n\n/***/ },\n\n/***/ 154:\n/***/ function(module, exports) {\n\n\tmodule.exports = jQuery;\n\n/***/ },\n\n/***/ 155:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\"use strict\";\n\t\n\tvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2015 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function () {\n\t    \"use strict\";\n\t\n\t    var cockpit = __webpack_require__(2);\n\t    var Mustache = __webpack_require__(156);\n\t    var day_header_template = __webpack_require__(158);\n\t    var line_template = __webpack_require__(159);\n\t    var reboot_template = __webpack_require__(160);\n\t\n\t    var _ = cockpit.gettext;\n\t    var C_ = cockpit.gettext;\n\t\n\t    var journal = {};\n\t\n\t    /**\n\t     * journalctl([match, ...], [options])\n\t     * @match: any number of journal match strings\n\t     * @options: an object containing further options\n\t     *\n\t     * Load and (by default) stream journal entries as\n\t     * json objects. This function returns a jQuery deferred\n\t     * object which delivers the various journal entries.\n\t     *\n\t     * The various @match strings are journalctl matches.\n\t     * Zero, one or more can be specified. They must be in\n\t     * string format, or arrays of strings.\n\t     *\n\t     * The optional @options object can contain the following:\n\t     *  * \"host\": the host to load journal from\n\t     *  * \"count\": number of entries to load and/or pre-stream.\n\t     *    Default is 10\n\t     *  * \"follow\": if set to false just load entries and don't\n\t     *    stream further journal data. Default is true.\n\t     *  * \"directory\": optional directory to load journal files\n\t     *  * \"boot\": when set only list entries from this specific\n\t     *    boot id, or if null then the current boot.\n\t     *  * \"since\": if specified list entries since the date/time\n\t     *  * \"until\": if specified list entries until the date/time\n\t     *  * \"cursor\": a cursor to start listing entries from\n\t     *  * \"after\": a cursor to start listing entries after\n\t     *\n\t     * Returns a jQuery deferred promise. You can call these\n\t     * functions on the deferred to handle the responses. Note that\n\t     * there are additional non-jQuery methods.\n\t     *\n\t     *  .done(function(entries) { }): Called when done, @entries is\n\t     *         an array of all journal entries loaded. If .stream()\n\t     *         has been invoked then @entries will be empty.\n\t     *  .fail(funciton(ex) { }): called if the operation fails\n\t     *  .stream(function(entries) { }): called when we receive entries\n\t     *         entries. Called once per batch of journal @entries,\n\t     *         whether following or not.\n\t     *  .stop(): stop following or retrieving entries.\n\t     */\n\t\n\t    journal.journalctl = function journalctl() /* ... */{\n\t        var matches = [];\n\t        var i, arg;\n\t        var options = { follow: true };\n\t        for (i = 0; i < arguments.length; i++) {\n\t            arg = arguments[i];\n\t            if (typeof arg == \"string\") {\n\t                matches.push(arg);\n\t            } else if ((typeof arg === \"undefined\" ? \"undefined\" : _typeof(arg)) == \"object\") {\n\t                if (arg instanceof Array) {\n\t                    matches.push.apply(matches, arg);\n\t                } else {\n\t                    cockpit.extend(options, arg);\n\t                    break;\n\t                }\n\t            } else {\n\t                console.warn(\"journal.journalctl called with invalid argument:\", arg);\n\t            }\n\t        }\n\t\n\t        if (options.count === undefined) {\n\t            if (options.follow) options.count = 10;else options.count = null;\n\t        }\n\t\n\t        var cmd = [\"journalctl\", \"-q\", \"--output=json\"];\n\t        if (!options.count) cmd.push(\"--no-tail\");else cmd.push(\"--lines=\" + options.count);\n\t        if (options.directory) cmd.push(\"--directory=\" + options.directory);\n\t        if (options.boot) cmd.push(\"--boot=\" + options.boot);else if (options.boot !== undefined) cmd.push(\"--boot\");\n\t        if (options.since) cmd.push(\"--since=\" + options.since);\n\t        if (options.until) cmd.push(\"--until=\" + options.until);\n\t        if (options.cursor) cmd.push(\"--cursor=\" + options.cursor);\n\t        if (options.after) cmd.push(\"--after=\" + options.after);\n\t\n\t        /* journalctl doesn't allow reverse and follow together */\n\t        if (options.reverse) cmd.push(\"--reverse\");else if (options.follow) cmd.push(\"--follow\");\n\t\n\t        cmd.push(\"--\");\n\t        cmd.push.apply(cmd, matches);\n\t\n\t        var dfd = cockpit.defer();\n\t        var promise;\n\t        var buffer = \"\";\n\t        var entries = [];\n\t        var streamers = [];\n\t        var interval = null;\n\t\n\t        function fire_streamers() {\n\t            var ents, i;\n\t            if (streamers.length && entries.length > 0) {\n\t                ents = entries;\n\t                entries = [];\n\t                for (i = 0; i < streamers.length; i++) {\n\t                    streamers[i].apply(promise, [ents]);\n\t                }\n\t            } else {\n\t                window.clearInterval(interval);\n\t                interval = null;\n\t            }\n\t        }\n\t\n\t        var proc = cockpit.spawn(cmd, { host: options.host, batch: 8192, latency: 300, superuser: \"try\" }).stream(function (data) {\n\t            if (buffer) data = buffer + data;\n\t            buffer = \"\";\n\t\n\t            var lines = data.split(\"\\n\");\n\t            var last = lines.length - 1;\n\t            lines.forEach(function (line, i) {\n\t                if (i == last) {\n\t                    buffer = line;\n\t                } else if (line && line.indexOf(\"-- \") !== 0) {\n\t                    try {\n\t                        entries.push(JSON.parse(line));\n\t                    } catch (e) {\n\t                        console.warn(e, line);\n\t                    }\n\t                }\n\t            });\n\t\n\t            if (streamers.length && interval === null) interval = window.setInterval(fire_streamers, 300);\n\t        }).done(function () {\n\t            fire_streamers();\n\t            dfd.resolve(entries);\n\t        }).fail(function (ex) {\n\t            /* The journalctl command fails when no entries are matched\n\t             * so we just ignore this status code */\n\t            if (ex.problem == \"cancelled\" || ex.exit_status === 1) {\n\t                fire_streamers();\n\t                dfd.resolve(entries);\n\t            } else {\n\t                dfd.reject(ex);\n\t            }\n\t        }).always(function () {\n\t            window.clearInterval(interval);\n\t        });\n\t\n\t        promise = dfd.promise();\n\t        promise.stream = function stream(callback) {\n\t            streamers.push(callback);\n\t            return this;\n\t        };\n\t        promise.stop = function stop() {\n\t            proc.close(\"cancelled\");\n\t        };\n\t        return promise;\n\t    };\n\t\n\t    journal.printable = function printable(value) {\n\t        if (value === undefined || value === null) return _(\"[no data]\");else if (typeof value == \"string\") return value;else if (value.length !== undefined) return cockpit.format(_(\"[$0 bytes of binary data]\"), value.length);else return _(\"[binary data]\");\n\t    };\n\t\n\t    function output_funcs_for_box(box) {\n\t        /* Dereference any jQuery object here */\n\t        if (box.jquery) box = box[0];\n\t\n\t        Mustache.parse(day_header_template);\n\t        Mustache.parse(line_template);\n\t        Mustache.parse(reboot_template);\n\t\n\t        function render_line(ident, prio, message, count, time, entry) {\n\t            var parts = {\n\t                'cursor': entry[\"__CURSOR\"],\n\t                'time': time,\n\t                'message': message,\n\t                'service': ident\n\t            };\n\t            if (count > 1) parts['count'] = count;\n\t            if (ident === 'abrt-notification') {\n\t                parts['problem'] = true;\n\t                parts['service'] = entry['PROBLEM_BINARY'];\n\t            } else if (prio < 4) parts['warning'] = true;\n\t            return Mustache.render(line_template, parts);\n\t        }\n\t\n\t        var reboot = _(\"Reboot\");\n\t        var reboot_line = Mustache.render(reboot_template, { 'message': reboot });\n\t\n\t        function render_reboot_separator() {\n\t            return reboot_line;\n\t        }\n\t\n\t        function render_day_header(day) {\n\t            return Mustache.render(day_header_template, { 'day': day });\n\t        }\n\t\n\t        function parse_html(string) {\n\t            var div = document.createElement(\"div\");\n\t            div.innerHTML = string.trim();\n\t            return div.children[0];\n\t        }\n\t\n\t        return {\n\t            render_line: render_line,\n\t            render_day_header: render_day_header,\n\t            render_reboot_separator: render_reboot_separator,\n\t\n\t            append: function append(elt) {\n\t                if (typeof elt == \"string\") elt = parse_html(elt);\n\t                box.appendChild(elt);\n\t            },\n\t            prepend: function prepend(elt) {\n\t                if (typeof elt == \"string\") elt = parse_html(elt);\n\t                if (box.firstChild) box.insertBefore(elt, box.firstChild);else box.appendChild(elt);\n\t            },\n\t            remove_last: function remove_last() {\n\t                if (box.lastChild) box.removeChild(box.lastChild);\n\t            },\n\t            remove_first: function remove_first() {\n\t                if (box.firstChild) box.removeChild(box.firstChild);\n\t            }\n\t        };\n\t    }\n\t\n\t    var month_names = [C_(\"month-name\", 'January'), C_(\"month-name\", 'February'), C_(\"month-name\", 'March'), C_(\"month-name\", 'April'), C_(\"month-name\", 'May'), C_(\"month-name\", 'June'), C_(\"month-name\", 'July'), C_(\"month-name\", 'August'), C_(\"month-name\", 'September'), C_(\"month-name\", 'October'), C_(\"month-name\", 'November'), C_(\"month-name\", 'December')];\n\t\n\t    /* Render the journal entries by passing suitable HTML strings back to\n\t       the caller via the 'output_funcs'.\n\t        Rendering is context aware.  It will insert 'reboot' markers, for\n\t       example, and collapse repeated lines.  You can extend the output at\n\t       the bottom and also at the top.\n\t        A new renderer is created by calling 'journal.renderer' like\n\t       so:\n\t           var renderer = journal.renderer(funcs);\n\t        You can feed new entries into the renderer by calling various\n\t       methods on the returned object:\n\t           - renderer.append(journal_entry)\n\t          - renderer.append_flush()\n\t          - renderer.prepend(journal_entry)\n\t          - renderer.prepend_flush()\n\t        A 'journal_entry' is one element of the result array returned by a\n\t       call to 'Query' with the 'cockpit.journal_fields' as the fields to\n\t       return.\n\t        Calling 'append' will append the given entry to the end of the\n\t       output, naturally, and 'prepend' will prepend it to the start.\n\t        The output might lag behind what has been input via 'append' and\n\t       'prepend', and you need to call 'append_flush' and 'prepend_flush'\n\t       respectively to ensure that the output is up-to-date.  Flushing a\n\t       renderer does not introduce discontinuities into the output.  You\n\t       can continue to feed entries into the renderer after flushing and\n\t       repeated lines will be correctly collapsed across the flush, for\n\t       example.\n\t        The renderer will call methods of the 'output_funcs' object to\n\t       produce the desired output:\n\t           - output_funcs.append(rendered)\n\t          - output_funcs.remove_last()\n\t          - output_funcs.prepend(rendered)\n\t          - output_funcs.remove_first()\n\t        The 'rendered' argument is the return value of one of the rendering\n\t       functions described below.  The 'append' and 'prepend' methods\n\t       should add this element to the output, naturally, and 'remove_last'\n\t       and 'remove_first' should remove the indicated element.\n\t        If you never call 'prepend' on the renderer, 'output_func.prepend'\n\t       isn't called either.  If you never call 'renderer.prepend' after\n\t       'renderer.prepend_flush', then 'output_func.remove_first' will\n\t       never be called.  The same guarantees exist for the 'append' family\n\t       of functions.\n\t        The actual rendering is also done by calling methods on\n\t       'output_funcs':\n\t           - output_funcs.render_line(ident, prio, message, count, time, cursor)\n\t          - output_funcs.render_day_header(day)\n\t          - output_funcs.render_reboot_separator()\n\t     */\n\t\n\t    journal.renderer = function renderer(funcs_or_box) {\n\t        var output_funcs;\n\t        if (funcs_or_box.render_line) output_funcs = funcs_or_box;else output_funcs = output_funcs_for_box(funcs_or_box);\n\t\n\t        function copy_object(o) {\n\t            var c = {};for (var p in o) {\n\t                c[p] = o[p];\n\t            }return c;\n\t        }\n\t\n\t        // A 'entry' object describes a journal entry in formatted form.\n\t        // It has fields 'bootid', 'ident', 'prio', 'message', 'time',\n\t        // 'day', all of which are strings.\n\t\n\t        function format_entry(journal_entry) {\n\t            function pad(n) {\n\t                var str = n.toFixed();\n\t                if (str.length == 1) str = '0' + str;\n\t                return str;\n\t            }\n\t\n\t            var d = new Date(journal_entry[\"__REALTIME_TIMESTAMP\"] / 1000);\n\t            return {\n\t                cursor: journal_entry[\"__CURSOR\"],\n\t                full: journal_entry,\n\t                day: month_names[d.getMonth()] + ' ' + d.getDate().toFixed() + ', ' + d.getFullYear().toFixed(),\n\t                time: pad(d.getHours()) + ':' + pad(d.getMinutes()),\n\t                bootid: journal_entry[\"_BOOT_ID\"],\n\t                ident: journal_entry[\"SYSLOG_IDENTIFIER\"] || journal_entry[\"_COMM\"],\n\t                prio: journal_entry[\"PRIORITY\"],\n\t                message: journal.printable(journal_entry[\"MESSAGE\"])\n\t            };\n\t        }\n\t\n\t        function entry_is_equal(a, b) {\n\t            return a && b && a.day == b.day && a.bootid == b.bootid && a.ident == b.ident && a.prio == b.prio && a.message == b.message;\n\t        }\n\t\n\t        // A state object describes a line that should be eventually\n\t        // output.  It has an 'entry' field as per description above, and\n\t        // also 'count', 'last_time', and 'first_time', which record\n\t        // repeated entries.  Additionally:\n\t        //\n\t        // line_present: When true, the line has been output already with\n\t        //     some preliminary data.  It needs to be removed before\n\t        //     outputting more recent data.\n\t        //\n\t        // header_present: The day header has been output preliminarily\n\t        //     before the actual log lines.  It needs to be removed before\n\t        //     prepending more lines.  If both line_present and\n\t        //     header_present are true, then the header comes first in the\n\t        //     output, followed by the line.\n\t\n\t        function render_state_line(state) {\n\t            return output_funcs.render_line(state.entry.ident, state.entry.prio, state.entry.message, state.count, state.last_time, state.entry.full);\n\t        }\n\t\n\t        // We keep the state of the first and last journal lines,\n\t        // respectively, in order to collapse repeated lines, and to\n\t        // insert reboot markers and day headers.\n\t        //\n\t        // Normally, there are two state objects, but if only a single\n\t        // line has been output so far, top_state and bottom_state point\n\t        // to the same object.\n\t\n\t        var top_state, bottom_state;\n\t\n\t        top_state = bottom_state = {};\n\t\n\t        function start_new_line() {\n\t            // If we now have two lines, split the state\n\t            if (top_state === bottom_state && top_state.entry) {\n\t                top_state = copy_object(bottom_state);\n\t            }\n\t        }\n\t\n\t        function top_output() {\n\t            if (top_state.header_present) {\n\t                output_funcs.remove_first();\n\t                top_state.header_present = false;\n\t            }\n\t            if (top_state.line_present) {\n\t                output_funcs.remove_first();\n\t                top_state.line_present = false;\n\t            }\n\t            if (top_state.entry) {\n\t                output_funcs.prepend(render_state_line(top_state));\n\t                top_state.line_present = true;\n\t            }\n\t        }\n\t\n\t        function prepend(journal_entry) {\n\t            var entry = format_entry(journal_entry);\n\t\n\t            if (entry_is_equal(top_state.entry, entry)) {\n\t                top_state.count += 1;\n\t                top_state.first_time = entry.time;\n\t            } else {\n\t                top_output();\n\t\n\t                if (top_state.entry) {\n\t                    if (entry.bootid != top_state.entry.bootid) output_funcs.prepend(output_funcs.render_reboot_separator());\n\t                    if (entry.day != top_state.entry.day) output_funcs.prepend(output_funcs.render_day_header(top_state.entry.day));\n\t                }\n\t\n\t                start_new_line();\n\t                top_state.entry = entry;\n\t                top_state.count = 1;\n\t                top_state.first_time = top_state.last_time = entry.time;\n\t                top_state.line_present = false;\n\t            }\n\t        }\n\t\n\t        function prepend_flush() {\n\t            top_output();\n\t            if (top_state.entry) {\n\t                output_funcs.prepend(output_funcs.render_day_header(top_state.entry.day));\n\t                top_state.header_present = true;\n\t            }\n\t        }\n\t\n\t        function bottom_output() {\n\t            if (bottom_state.line_present) {\n\t                output_funcs.remove_last();\n\t                bottom_state.line_present = false;\n\t            }\n\t            if (bottom_state.entry) {\n\t                output_funcs.append(render_state_line(bottom_state));\n\t                bottom_state.line_present = true;\n\t            }\n\t        }\n\t\n\t        function append(journal_entry) {\n\t            var entry = format_entry(journal_entry);\n\t\n\t            if (entry_is_equal(bottom_state.entry, entry)) {\n\t                bottom_state.count += 1;\n\t                bottom_state.last_time = entry.time;\n\t            } else {\n\t                bottom_output();\n\t\n\t                if (!bottom_state.entry || entry.day != bottom_state.entry.day) {\n\t                    output_funcs.append(output_funcs.render_day_header(entry.day));\n\t                    bottom_state.header_present = true;\n\t                }\n\t                if (bottom_state.entry && entry.bootid != bottom_state.entry.bootid) output_funcs.append(output_funcs.render_reboot_separator());\n\t\n\t                start_new_line();\n\t                bottom_state.entry = entry;\n\t                bottom_state.count = 1;\n\t                bottom_state.first_time = bottom_state.last_time = entry.time;\n\t                bottom_state.line_present = false;\n\t            }\n\t        }\n\t\n\t        function append_flush() {\n\t            bottom_output();\n\t        }\n\t\n\t        return { prepend: prepend,\n\t            prepend_flush: prepend_flush,\n\t            append: append,\n\t            append_flush: append_flush\n\t        };\n\t    };\n\t\n\t    journal.logbox = function logbox(match, max_entries) {\n\t        var entries = [];\n\t        var box = document.createElement(\"div\");\n\t\n\t        function render() {\n\t            var renderer = journal.renderer(box);\n\t            while (box.firstChild) {\n\t                box.removeChild(box.firstChild);\n\t            }for (var i = 0; i < entries.length; i++) {\n\t                renderer.prepend(entries[i]);\n\t            }\n\t            renderer.prepend_flush();\n\t            if (entries.length > 0) box.removeAttribute(\"hidden\");else box.setAttribute(\"hidden\", \"hidden\");\n\t        }\n\t\n\t        render();\n\t\n\t        var promise = journal.journalctl(match, { count: max_entries }).stream(function (tail) {\n\t            entries = entries.concat(tail);\n\t            if (entries.length > max_entries) entries = entries.slice(-max_entries);\n\t            render();\n\t        }).fail(function (error) {\n\t            box.appendChild(document.createTextNode(error.message));\n\t            box.removeAttribute(\"hidden\");\n\t        });\n\t\n\t        /* Both a DOM element and a promise */\n\t        return promise.promise(box);\n\t    };\n\t\n\t    module.exports = journal;\n\t})();\n\n/***/ },\n\n/***/ 156:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t\"use strict\";\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\tvar cockpit = __webpack_require__(2);\n\tvar mustache = __webpack_require__(157);\n\t\n\t/*\n\t * Turns a mustache template into a translated mustache template\n\t * by preparsing it and translating it.\n\t */\n\tvar cache = {};\n\t\n\tfunction translate(template) {\n\t    if (template in cache) return cache[template];\n\t    var div = document.createElement(\"div\");\n\t    div.innerHTML = template;\n\t    cockpit.translate(div);\n\t    var result = div.innerHTML;\n\t    cache[template] = result;\n\t    return result;\n\t}\n\t\n\t/* Just like the mustache object, except for translated */\n\tmodule.exports = cockpit.extend({}, mustache, {\n\t    render: function render(template, view, partials) {\n\t        if (!view) view = {};\n\t\n\t        return translate(mustache.render(template, view, partials));\n\t    },\n\t    to_html: function to_html(template, view, partials, send) {\n\t        if (!view) view = {};\n\t\n\t        return translate(mustache.to_html(template, view, partials, send));\n\t    },\n\t    clearCache: function clearCache() {\n\t        cache = {};\n\t        return mustache.clearCache();\n\t    }\n\t});\n\n/***/ },\n\n/***/ 157:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * mustache.js - Logic-less {{mustache}} templates with JavaScript\n\t * http://github.com/janl/mustache.js\n\t */\n\t\n\t/*global define: false Mustache: true*/\n\t\n\t(function defineMustache (global, factory) {\n\t  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n\t    factory(exports); // CommonJS\n\t  } else if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD\n\t  } else {\n\t    global.Mustache = {};\n\t    factory(global.Mustache); // script, wsh, asp\n\t  }\n\t}(this, function mustacheFactory (mustache) {\n\t\n\t  var objectToString = Object.prototype.toString;\n\t  var isArray = Array.isArray || function isArrayPolyfill (object) {\n\t    return objectToString.call(object) === '[object Array]';\n\t  };\n\t\n\t  function isFunction (object) {\n\t    return typeof object === 'function';\n\t  }\n\t\n\t  /**\n\t   * More correct typeof string handling array\n\t   * which normally returns typeof 'object'\n\t   */\n\t  function typeStr (obj) {\n\t    return isArray(obj) ? 'array' : typeof obj;\n\t  }\n\t\n\t  function escapeRegExp (string) {\n\t    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n\t  }\n\t\n\t  /**\n\t   * Null safe way of checking whether or not an object,\n\t   * including its prototype, has a given property\n\t   */\n\t  function hasProperty (obj, propName) {\n\t    return obj != null && typeof obj === 'object' && (propName in obj);\n\t  }\n\t\n\t  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n\t  // See https://github.com/janl/mustache.js/issues/189\n\t  var regExpTest = RegExp.prototype.test;\n\t  function testRegExp (re, string) {\n\t    return regExpTest.call(re, string);\n\t  }\n\t\n\t  var nonSpaceRe = /\\S/;\n\t  function isWhitespace (string) {\n\t    return !testRegExp(nonSpaceRe, string);\n\t  }\n\t\n\t  var entityMap = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '/': '&#x2F;',\n\t    '`': '&#x60;',\n\t    '=': '&#x3D;'\n\t  };\n\t\n\t  function escapeHtml (string) {\n\t    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n\t      return entityMap[s];\n\t    });\n\t  }\n\t\n\t  var whiteRe = /\\s*/;\n\t  var spaceRe = /\\s+/;\n\t  var equalsRe = /\\s*=/;\n\t  var curlyRe = /\\s*\\}/;\n\t  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\t\n\t  /**\n\t   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n\t   * argument is given here it must be an array with two string values: the\n\t   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n\t   * course, the default is to use mustaches (i.e. mustache.tags).\n\t   *\n\t   * A token is an array with at least 4 elements. The first element is the\n\t   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n\t   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n\t   * all text that appears outside a symbol this element is \"text\".\n\t   *\n\t   * The second element of a token is its \"value\". For mustache tags this is\n\t   * whatever else was inside the tag besides the opening symbol. For text tokens\n\t   * this is the text itself.\n\t   *\n\t   * The third and fourth elements of the token are the start and end indices,\n\t   * respectively, of the token in the original template.\n\t   *\n\t   * Tokens that are the root node of a subtree contain two more elements: 1) an\n\t   * array of tokens in the subtree and 2) the index in the original template at\n\t   * which the closing tag for that section begins.\n\t   */\n\t  function parseTemplate (template, tags) {\n\t    if (!template)\n\t      return [];\n\t\n\t    var sections = [];     // Stack to hold section tokens\n\t    var tokens = [];       // Buffer to hold the tokens\n\t    var spaces = [];       // Indices of whitespace tokens on the current line\n\t    var hasTag = false;    // Is there a {{tag}} on the current line?\n\t    var nonSpace = false;  // Is there a non-space char on the current line?\n\t\n\t    // Strips all whitespace tokens array for the current line\n\t    // if there was a {{#tag}} on it and otherwise only space.\n\t    function stripSpace () {\n\t      if (hasTag && !nonSpace) {\n\t        while (spaces.length)\n\t          delete tokens[spaces.pop()];\n\t      } else {\n\t        spaces = [];\n\t      }\n\t\n\t      hasTag = false;\n\t      nonSpace = false;\n\t    }\n\t\n\t    var openingTagRe, closingTagRe, closingCurlyRe;\n\t    function compileTags (tagsToCompile) {\n\t      if (typeof tagsToCompile === 'string')\n\t        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\t\n\t      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n\t        throw new Error('Invalid tags: ' + tagsToCompile);\n\t\n\t      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n\t      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n\t      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n\t    }\n\t\n\t    compileTags(tags || mustache.tags);\n\t\n\t    var scanner = new Scanner(template);\n\t\n\t    var start, type, value, chr, token, openSection;\n\t    while (!scanner.eos()) {\n\t      start = scanner.pos;\n\t\n\t      // Match any text between tags.\n\t      value = scanner.scanUntil(openingTagRe);\n\t\n\t      if (value) {\n\t        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n\t          chr = value.charAt(i);\n\t\n\t          if (isWhitespace(chr)) {\n\t            spaces.push(tokens.length);\n\t          } else {\n\t            nonSpace = true;\n\t          }\n\t\n\t          tokens.push([ 'text', chr, start, start + 1 ]);\n\t          start += 1;\n\t\n\t          // Check for whitespace on the current line.\n\t          if (chr === '\\n')\n\t            stripSpace();\n\t        }\n\t      }\n\t\n\t      // Match the opening tag.\n\t      if (!scanner.scan(openingTagRe))\n\t        break;\n\t\n\t      hasTag = true;\n\t\n\t      // Get the tag type.\n\t      type = scanner.scan(tagRe) || 'name';\n\t      scanner.scan(whiteRe);\n\t\n\t      // Get the tag value.\n\t      if (type === '=') {\n\t        value = scanner.scanUntil(equalsRe);\n\t        scanner.scan(equalsRe);\n\t        scanner.scanUntil(closingTagRe);\n\t      } else if (type === '{') {\n\t        value = scanner.scanUntil(closingCurlyRe);\n\t        scanner.scan(curlyRe);\n\t        scanner.scanUntil(closingTagRe);\n\t        type = '&';\n\t      } else {\n\t        value = scanner.scanUntil(closingTagRe);\n\t      }\n\t\n\t      // Match the closing tag.\n\t      if (!scanner.scan(closingTagRe))\n\t        throw new Error('Unclosed tag at ' + scanner.pos);\n\t\n\t      token = [ type, value, start, scanner.pos ];\n\t      tokens.push(token);\n\t\n\t      if (type === '#' || type === '^') {\n\t        sections.push(token);\n\t      } else if (type === '/') {\n\t        // Check section nesting.\n\t        openSection = sections.pop();\n\t\n\t        if (!openSection)\n\t          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\t\n\t        if (openSection[1] !== value)\n\t          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n\t      } else if (type === 'name' || type === '{' || type === '&') {\n\t        nonSpace = true;\n\t      } else if (type === '=') {\n\t        // Set the tags for the next time around.\n\t        compileTags(value);\n\t      }\n\t    }\n\t\n\t    // Make sure there are no open sections when we're done.\n\t    openSection = sections.pop();\n\t\n\t    if (openSection)\n\t      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\t\n\t    return nestTokens(squashTokens(tokens));\n\t  }\n\t\n\t  /**\n\t   * Combines the values of consecutive text tokens in the given `tokens` array\n\t   * to a single token.\n\t   */\n\t  function squashTokens (tokens) {\n\t    var squashedTokens = [];\n\t\n\t    var token, lastToken;\n\t    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n\t      token = tokens[i];\n\t\n\t      if (token) {\n\t        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n\t          lastToken[1] += token[1];\n\t          lastToken[3] = token[3];\n\t        } else {\n\t          squashedTokens.push(token);\n\t          lastToken = token;\n\t        }\n\t      }\n\t    }\n\t\n\t    return squashedTokens;\n\t  }\n\t\n\t  /**\n\t   * Forms the given array of `tokens` into a nested tree structure where\n\t   * tokens that represent a section have two additional items: 1) an array of\n\t   * all tokens that appear in that section and 2) the index in the original\n\t   * template that represents the end of that section.\n\t   */\n\t  function nestTokens (tokens) {\n\t    var nestedTokens = [];\n\t    var collector = nestedTokens;\n\t    var sections = [];\n\t\n\t    var token, section;\n\t    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n\t      token = tokens[i];\n\t\n\t      switch (token[0]) {\n\t        case '#':\n\t        case '^':\n\t          collector.push(token);\n\t          sections.push(token);\n\t          collector = token[4] = [];\n\t          break;\n\t        case '/':\n\t          section = sections.pop();\n\t          section[5] = token[2];\n\t          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n\t          break;\n\t        default:\n\t          collector.push(token);\n\t      }\n\t    }\n\t\n\t    return nestedTokens;\n\t  }\n\t\n\t  /**\n\t   * A simple string scanner that is used by the template parser to find\n\t   * tokens in template strings.\n\t   */\n\t  function Scanner (string) {\n\t    this.string = string;\n\t    this.tail = string;\n\t    this.pos = 0;\n\t  }\n\t\n\t  /**\n\t   * Returns `true` if the tail is empty (end of string).\n\t   */\n\t  Scanner.prototype.eos = function eos () {\n\t    return this.tail === '';\n\t  };\n\t\n\t  /**\n\t   * Tries to match the given regular expression at the current position.\n\t   * Returns the matched text if it can match, the empty string otherwise.\n\t   */\n\t  Scanner.prototype.scan = function scan (re) {\n\t    var match = this.tail.match(re);\n\t\n\t    if (!match || match.index !== 0)\n\t      return '';\n\t\n\t    var string = match[0];\n\t\n\t    this.tail = this.tail.substring(string.length);\n\t    this.pos += string.length;\n\t\n\t    return string;\n\t  };\n\t\n\t  /**\n\t   * Skips all text until the given regular expression can be matched. Returns\n\t   * the skipped string, which is the entire tail if no match can be made.\n\t   */\n\t  Scanner.prototype.scanUntil = function scanUntil (re) {\n\t    var index = this.tail.search(re), match;\n\t\n\t    switch (index) {\n\t      case -1:\n\t        match = this.tail;\n\t        this.tail = '';\n\t        break;\n\t      case 0:\n\t        match = '';\n\t        break;\n\t      default:\n\t        match = this.tail.substring(0, index);\n\t        this.tail = this.tail.substring(index);\n\t    }\n\t\n\t    this.pos += match.length;\n\t\n\t    return match;\n\t  };\n\t\n\t  /**\n\t   * Represents a rendering context by wrapping a view object and\n\t   * maintaining a reference to the parent context.\n\t   */\n\t  function Context (view, parentContext) {\n\t    this.view = view;\n\t    this.cache = { '.': this.view };\n\t    this.parent = parentContext;\n\t  }\n\t\n\t  /**\n\t   * Creates a new context using the given view with this context\n\t   * as the parent.\n\t   */\n\t  Context.prototype.push = function push (view) {\n\t    return new Context(view, this);\n\t  };\n\t\n\t  /**\n\t   * Returns the value of the given name in this context, traversing\n\t   * up the context hierarchy if the value is absent in this context's view.\n\t   */\n\t  Context.prototype.lookup = function lookup (name) {\n\t    var cache = this.cache;\n\t\n\t    var value;\n\t    if (cache.hasOwnProperty(name)) {\n\t      value = cache[name];\n\t    } else {\n\t      var context = this, names, index, lookupHit = false;\n\t\n\t      while (context) {\n\t        if (name.indexOf('.') > 0) {\n\t          value = context.view;\n\t          names = name.split('.');\n\t          index = 0;\n\t\n\t          /**\n\t           * Using the dot notion path in `name`, we descend through the\n\t           * nested objects.\n\t           *\n\t           * To be certain that the lookup has been successful, we have to\n\t           * check if the last object in the path actually has the property\n\t           * we are looking for. We store the result in `lookupHit`.\n\t           *\n\t           * This is specially necessary for when the value has been set to\n\t           * `undefined` and we want to avoid looking up parent contexts.\n\t           **/\n\t          while (value != null && index < names.length) {\n\t            if (index === names.length - 1)\n\t              lookupHit = hasProperty(value, names[index]);\n\t\n\t            value = value[names[index++]];\n\t          }\n\t        } else {\n\t          value = context.view[name];\n\t          lookupHit = hasProperty(context.view, name);\n\t        }\n\t\n\t        if (lookupHit)\n\t          break;\n\t\n\t        context = context.parent;\n\t      }\n\t\n\t      cache[name] = value;\n\t    }\n\t\n\t    if (isFunction(value))\n\t      value = value.call(this.view);\n\t\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * A Writer knows how to take a stream of tokens and render them to a\n\t   * string, given a context. It also maintains a cache of templates to\n\t   * avoid the need to parse the same template twice.\n\t   */\n\t  function Writer () {\n\t    this.cache = {};\n\t  }\n\t\n\t  /**\n\t   * Clears all cached templates in this writer.\n\t   */\n\t  Writer.prototype.clearCache = function clearCache () {\n\t    this.cache = {};\n\t  };\n\t\n\t  /**\n\t   * Parses and caches the given `template` and returns the array of tokens\n\t   * that is generated from the parse.\n\t   */\n\t  Writer.prototype.parse = function parse (template, tags) {\n\t    var cache = this.cache;\n\t    var tokens = cache[template];\n\t\n\t    if (tokens == null)\n\t      tokens = cache[template] = parseTemplate(template, tags);\n\t\n\t    return tokens;\n\t  };\n\t\n\t  /**\n\t   * High-level method that is used to render the given `template` with\n\t   * the given `view`.\n\t   *\n\t   * The optional `partials` argument may be an object that contains the\n\t   * names and templates of partials that are used in the template. It may\n\t   * also be a function that is used to load partial templates on the fly\n\t   * that takes a single argument: the name of the partial.\n\t   */\n\t  Writer.prototype.render = function render (template, view, partials) {\n\t    var tokens = this.parse(template);\n\t    var context = (view instanceof Context) ? view : new Context(view);\n\t    return this.renderTokens(tokens, context, partials, template);\n\t  };\n\t\n\t  /**\n\t   * Low-level method that renders the given array of `tokens` using\n\t   * the given `context` and `partials`.\n\t   *\n\t   * Note: The `originalTemplate` is only ever used to extract the portion\n\t   * of the original template that was contained in a higher-order section.\n\t   * If the template doesn't use higher-order sections, this argument may\n\t   * be omitted.\n\t   */\n\t  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n\t    var buffer = '';\n\t\n\t    var token, symbol, value;\n\t    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n\t      value = undefined;\n\t      token = tokens[i];\n\t      symbol = token[0];\n\t\n\t      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n\t      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n\t      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n\t      else if (symbol === '&') value = this.unescapedValue(token, context);\n\t      else if (symbol === 'name') value = this.escapedValue(token, context);\n\t      else if (symbol === 'text') value = this.rawValue(token);\n\t\n\t      if (value !== undefined)\n\t        buffer += value;\n\t    }\n\t\n\t    return buffer;\n\t  };\n\t\n\t  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n\t    var self = this;\n\t    var buffer = '';\n\t    var value = context.lookup(token[1]);\n\t\n\t    // This function is used to render an arbitrary template\n\t    // in the current context by higher-order sections.\n\t    function subRender (template) {\n\t      return self.render(template, context, partials);\n\t    }\n\t\n\t    if (!value) return;\n\t\n\t    if (isArray(value)) {\n\t      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n\t        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n\t      }\n\t    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n\t      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n\t    } else if (isFunction(value)) {\n\t      if (typeof originalTemplate !== 'string')\n\t        throw new Error('Cannot use higher-order sections without the original template');\n\t\n\t      // Extract the portion of the original template that the section contains.\n\t      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\t\n\t      if (value != null)\n\t        buffer += value;\n\t    } else {\n\t      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n\t    }\n\t    return buffer;\n\t  };\n\t\n\t  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n\t    var value = context.lookup(token[1]);\n\t\n\t    // Use JavaScript's definition of falsy. Include empty arrays.\n\t    // See https://github.com/janl/mustache.js/issues/186\n\t    if (!value || (isArray(value) && value.length === 0))\n\t      return this.renderTokens(token[4], context, partials, originalTemplate);\n\t  };\n\t\n\t  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n\t    if (!partials) return;\n\t\n\t    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n\t    if (value != null)\n\t      return this.renderTokens(this.parse(value), context, partials, value);\n\t  };\n\t\n\t  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n\t    var value = context.lookup(token[1]);\n\t    if (value != null)\n\t      return value;\n\t  };\n\t\n\t  Writer.prototype.escapedValue = function escapedValue (token, context) {\n\t    var value = context.lookup(token[1]);\n\t    if (value != null)\n\t      return mustache.escape(value);\n\t  };\n\t\n\t  Writer.prototype.rawValue = function rawValue (token) {\n\t    return token[1];\n\t  };\n\t\n\t  mustache.name = 'mustache.js';\n\t  mustache.version = '2.3.2';\n\t  mustache.tags = [ '{{', '}}' ];\n\t\n\t  // All high-level mustache.* functions use this writer.\n\t  var defaultWriter = new Writer();\n\t\n\t  /**\n\t   * Clears all cached templates in the default writer.\n\t   */\n\t  mustache.clearCache = function clearCache () {\n\t    return defaultWriter.clearCache();\n\t  };\n\t\n\t  /**\n\t   * Parses and caches the given template in the default writer and returns the\n\t   * array of tokens it contains. Doing this ahead of time avoids the need to\n\t   * parse templates on the fly as they are rendered.\n\t   */\n\t  mustache.parse = function parse (template, tags) {\n\t    return defaultWriter.parse(template, tags);\n\t  };\n\t\n\t  /**\n\t   * Renders the `template` with the given `view` and `partials` using the\n\t   * default writer.\n\t   */\n\t  mustache.render = function render (template, view, partials) {\n\t    if (typeof template !== 'string') {\n\t      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n\t                          'but \"' + typeStr(template) + '\" was given as the first ' +\n\t                          'argument for mustache#render(template, view, partials)');\n\t    }\n\t\n\t    return defaultWriter.render(template, view, partials);\n\t  };\n\t\n\t  // This is here for backwards compatibility with 0.4.x.,\n\t  /*eslint-disable */ // eslint wants camel cased function name\n\t  mustache.to_html = function to_html (template, view, partials, send) {\n\t    /*eslint-enable*/\n\t\n\t    var result = mustache.render(template, view, partials);\n\t\n\t    if (isFunction(send)) {\n\t      send(result);\n\t    } else {\n\t      return result;\n\t    }\n\t  };\n\t\n\t  // Export the escaping function so that the user may override it.\n\t  // See https://github.com/janl/mustache.js/issues/244\n\t  mustache.escape = escapeHtml;\n\t\n\t  // Export these mainly for testing, but also for advanced usage.\n\t  mustache.Scanner = Scanner;\n\t  mustache.Context = Context;\n\t  mustache.Writer = Writer;\n\t\n\t  return mustache;\n\t}));\n\n\n/***/ },\n\n/***/ 158:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"panel-heading\\\">{{day}}</div>\\n\"\n\n/***/ },\n\n/***/ 159:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"cockpit-logline\\\" data-cursor=\\\"{{cursor}}\\\" role=\\\"row\\\">\\n  <div class=\\\"cockpit-log-warning\\\" role=\\\"cell\\\">{{#warning}}\\n    <i class=\\\"fa fa-exclamation-triangle\\\"></i>\\n  {{/warning}}{{#problem}}\\n    <i class=\\\"fa fa-times-circle-o\\\"></i>\\n  {{/problem}}\\n  </div>\\n  <div class=\\\"cockpit-log-time\\\" role=\\\"cell\\\">{{time}}</div>\\n  <span class=\\\"cockpit-log-message\\\" role=\\\"cell\\\">{{message}}</span>\\n  {{! if we have count (repeated messages), show service name and badge - otherwise just the service }}\\n  {{#count}}\\n  <div class=\\\"cockpit-log-service-container\\\" role=\\\"cell\\\">\\n    <div class=\\\"cockpit-log-service-reduced\\\">{{service}}</div>\\n    <span class=\\\"badge\\\">{{count}}&#160;<i class=\\\"fa fa-caret-right\\\"></i></span>\\n  </div>\\n  {{/count}}{{^count}}\\n  <div class=\\\"cockpit-log-service\\\" role=\\\"cell\\\">{{service}}</div>\\n  {{/count}}\\n</div>\\n\"\n\n/***/ },\n\n/***/ 160:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"cockpit-logline\\\" role=\\\"row\\\">\\n  {{! placeholders for correct message alignment }}\\n  <div class=\\\"cockpit-log-warning\\\" role=\\\"cell\\\"></div>\\n  <span class=\\\"cockpit-log-message cockpit-logmsg-reboot\\\" role=\\\"cell\\\">{{message}}</span>\\n</div>\\n\"\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// systemd/logs.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 5d3e6d5b816e3b8227bd","module.exports = cockpit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cockpit\"\n// module id = 2\n// module chunks = 0 1 2 3 4","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2015 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar $ = require(\"jquery\");\n$(function() {\n    \"use strict\";\n\n    var cockpit = require(\"cockpit\");\n\n    var journal = require(\"journal\");\n\n    cockpit.translate();\n    var _ = cockpit.gettext;\n\n    var problems_client = cockpit.dbus('org.freedesktop.problems', { superuser: \"try\" });\n    var service = problems_client.proxy('org.freedesktop.Problems2', '/org/freedesktop/Problems2');\n    var problems = problems_client.proxies('org.freedesktop.Problems2.Entry', '/org/freedesktop/Problems2/Entry');\n\n    // A map of ABRT's problems items and it's callback for rendering\n    var problem_render_callbacks = {'core_backtrace': render_backtrace,\n                                    'os_info': render_table_eq,\n                                    'environ': render_table_eq,\n                                    'limits': render_limits,\n                                    'cgroup': render_cgroup,\n                                    'namespaces': render_table_co,\n                                    'maps': render_maps,\n                                    'dso_list': render_dso_list,\n                                    'mountinfo': render_mountinfo,\n                                    'proc_pid_status': render_table_co,\n                                    'open_fds': render_open_fds,\n                                    'var_log_messages': render_multiline,\n                                    'not-reportable': render_multiline,\n                                    'exploitable': render_multiline,\n                                    'suspend_stats': render_table_co,\n                                    'dmesg': render_multiline,\n                                    'container_rootfs': render_multiline,\n                                    'docker_inspect': render_multiline\n    };\n\n    var problem_info_1 = ['reason', 'cmdline', 'executable', 'package', 'component',\n        'crash_function', 'pid', 'pwd', 'hostname', 'count',\n        'type', 'analyzer', 'rootdir', 'duphash', 'exception_type',\n        'container', 'container_uuid', 'container_cmdline',\n        'container_id', 'container_image' ];\n\n    var problem_info_2 = ['Directory', 'username', 'abrt_version', 'architecture', 'global_pid', 'kernel',\n        'last_occurrence', 'os_release', 'pkg_fingerprint', 'pkg_vendor',\n        'runlevel', 'tid', 'time', 'uid', 'uuid'];\n\n    var displayable_problems = {};\n\n    // Get list of all problems that can be displayed\n    var find_problems = function () {\n        var r = $.Deferred();\n        problems.wait(function() {\n            try {\n                service.GetProblems(0, {})\n                        .done(function(problem_paths, options) {\n                            update_problems(problem_paths);\n                            r.resolve();\n                        });\n            } catch (err) {\n                // ABRT is not installed. Suggest installing?\n                r.resolve();\n            }\n        });\n        return r;\n    };\n\n    function update_problems(problem_paths) {\n        for (var i in problem_paths) {\n            var p = problems[problem_paths[i]];\n            displayable_problems[p.ID] = {'count': p.Count, 'problem_path': p.path};\n            displayable_problems[p.UUID] = {'count': p.Count, 'problem_path': p.path};\n            displayable_problems[p.Duphash] = {'count': p.Count, 'problem_path': p.path};\n        }\n    }\n\n    /* Not public API */\n    function journalbox(outer, start, match, day_box) {\n        var box = $('<div class=\"panel panel-default cockpit-log-panel\" role=\"table\">');\n        var start_box = $('<div class=\"journal-start\" role=\"rowgroup\">');\n\n        outer.empty().append(box, start_box);\n\n        var query_count = 5000;\n        var query_more = 1000;\n\n        var renderer = journal.renderer(box);\n        /* cache to store offsets for days */\n        var renderitems_day_cache = null;\n        var procs = [];\n\n        function query_error(error) {\n            /* TODO: blank slate */\n            console.warn(cockpit.message(error));\n        }\n\n        function prepend_entries(entries) {\n            for (var i = 0; i < entries.length; i++)\n                renderer.prepend(entries[i]);\n            renderer.prepend_flush();\n            /* empty cache for day offsets */\n            renderitems_day_cache = null;\n        }\n\n        function append_entries(entries) {\n            for (var i = 0; i < entries.length; i++)\n                renderer.append(entries[i]);\n            renderer.append_flush();\n            /* empty cache for day offsets */\n            renderitems_day_cache = null;\n        }\n\n        function didnt_reach_start(first) {\n            var button = $('<button id=\"journal-load-earlier\" class=\"btn btn-default\" data-inline=\"true\" data-mini=\"true\">' +\n                           _(\"Load earlier entries\") +\n                           '</button>');\n            start_box.html(button);\n            button.click(function() {\n                var count = 0;\n                var stopped = null;\n                start_box.text(_(\"Loading...\"));\n                procs.push(journal.journalctl(match, { follow: false, reverse: true, cursor: first })\n                        .fail(query_error)\n                        .stream(function(entries) {\n                            if (entries[0][\"__CURSOR\"] == first)\n                                entries.shift();\n                            count += entries.length;\n                            append_entries(entries);\n                            if (count >= query_more) {\n                                stopped = entries[entries.length - 1][\"__CURSOR\"];\n                                didnt_reach_start(stopped);\n                                this.stop();\n                            }\n                        })\n                        .done(function() {\n                            if (start_box.text() == _(\"Loading...\"))\n                                start_box.empty();\n                        }));\n            });\n        }\n\n        function follow(cursor) {\n            procs.push(journal.journalctl(match, { follow: true, count: 0, cursor: cursor })\n                    .fail(query_error)\n                    .stream(function(entries) {\n                        if (entries[0][\"__CURSOR\"] == cursor)\n                            entries.shift();\n                        prepend_entries(entries);\n                        update_day_box();\n                    }));\n        }\n\n        function update_day_box() {\n            /* Build cache if empty\n             */\n            if (renderitems_day_cache === null) {\n                renderitems_day_cache = [];\n                for (var d = box[0].firstChild; d; d = d.nextSibling) {\n                    if ($(d).hasClass('panel-heading'))\n                        renderitems_day_cache.push([$(d).offset().top, $(d).text()]);\n                }\n            }\n            if (renderitems_day_cache.length > 0) {\n                /* Find the last day that begins above top\n                 */\n                var currentIndex = 0;\n                var top = window.scrollY;\n                while ((currentIndex + 1) < renderitems_day_cache.length &&\n                        renderitems_day_cache[currentIndex + 1][0] < top) {\n                    currentIndex++;\n                }\n                day_box.text(renderitems_day_cache[currentIndex][1]);\n            } else {\n                /* No visible day headers\n                 */\n                day_box.text(_(\"Go to\"));\n            }\n        }\n\n        start_box.text(_(\"Loading...\"));\n\n        $(window).on('scroll', update_day_box);\n\n        var options = {\n            follow: false,\n            reverse: true\n        };\n\n        var all = false;\n        if (start == 'boot') {\n            options[\"boot\"] = null;\n        } else if (start == 'last-24h') {\n            options[\"since\"] = \"-1days\";\n        } else if (start == 'last-week') {\n            options[\"since\"] = \"-7days\";\n        } else {\n            all = true;\n        }\n\n        var last = null;\n        var count = 0;\n        var stopped = null;\n\n        procs.push(journal.journalctl(match, options)\n                .fail(query_error)\n                .stream(function(entries) {\n                    if (!last) {\n                        last = entries[0][\"__CURSOR\"];\n                        follow(last);\n                        update_day_box();\n                    }\n                    count += entries.length;\n                    append_entries(entries);\n                    if (count >= query_count) {\n                        stopped = entries[entries.length - 1][\"__CURSOR\"];\n                        didnt_reach_start(stopped);\n                        this.stop();\n                    }\n                })\n                .done(function() {\n                    if (start_box.text() == _(\"Loading...\"))\n                        start_box.empty();\n                    if (!last) {\n                        procs.push(journal.journalctl(match, { follow: true, count: 0,\n                                                               boot: options[\"boot\"],\n                                                               since: options[\"since\"]\n                        })\n                                .fail(query_error)\n                                .stream(function(entries) {\n                                    prepend_entries(entries);\n                                    update_day_box();\n                                }));\n                    }\n                    if (!all || stopped)\n                        didnt_reach_start();\n                }));\n\n        outer.stop = function stop() {\n            $(window).off('scroll', update_day_box);\n            $.each(procs, function(i, proc) {\n                proc.stop();\n            });\n        };\n\n        return outer;\n    }\n\n    var filler;\n\n    function stop_query() {\n        if (filler)\n            filler.stop();\n    }\n\n    function update_query() {\n        stop_query();\n\n        var match = [ ];\n\n        var query_prio = cockpit.location.options['prio'] || \"3\";\n        var prio_level = parseInt(query_prio, 10);\n\n        // Set selected item into priority dropdown menu\n        var all_prios = document.getElementById('prio-lists').childNodes;\n        var item;\n        for (var j = 0; j < all_prios.length; j++) {\n            if (all_prios[j].nodeName === 'LI') {\n                item = all_prios[j].childNodes[0];\n                if (item.getAttribute('data-prio') === query_prio) {\n                    $('#journal-prio').text(item.text);\n                    break;\n                }\n            }\n        }\n\n        if (prio_level) {\n            for (var i = 0; i <= prio_level; i++)\n                match.push('PRIORITY=' + i.toString());\n        }\n\n        // If item 'Only Problems' was selected, match only ABRT's problems\n        if (prio_level === 2) {\n            match.push('SYSLOG_IDENTIFIER=abrt-notification');\n        }\n\n        var options = cockpit.location.options;\n        if (options['service'])\n            match.push('_SYSTEMD_UNIT=' + options['service']);\n        else if (options['tag'])\n            match.push('SYSLOG_IDENTIFIER=' + options['tag']);\n\n        var query_start = cockpit.location.options['start'] || \"recent\";\n        if (query_start == 'recent')\n            $(window).scrollTop($(document).height());\n\n        journalbox($(\"#journal-box\"), query_start, match, $('#journal-current-day'));\n    }\n\n    function update_entry() {\n        var cursor = cockpit.location.path[0];\n        var out = $('#journal-entry-fields');\n\n        out.empty();\n\n        function show_entry(entry) {\n            var d = new Date(entry[\"__REALTIME_TIMESTAMP\"] / 1000);\n            $('#journal-entry-date').text(d.toString());\n\n            var id;\n            if (entry[\"SYSLOG_IDENTIFIER\"])\n                id = entry[\"SYSLOG_IDENTIFIER\"];\n            else if (entry[\"_SYSTEMD_UNIT\"])\n                id = entry[\"_SYSTEMD_UNIT\"];\n            else\n                id = _(\"Journal entry\");\n\n            var is_problem = false;\n            if (id === 'abrt-notification') {\n                is_problem = true;\n                id = entry['PROBLEM_BINARY'];\n            }\n\n            $('#journal-entry-id').text(id);\n\n            if (is_problem) {\n                find_problems().done(function() {\n                    create_problem(out, entry);\n                });\n            } else {\n                create_entry(out, entry);\n            }\n        }\n\n        function show_error(error) {\n            out.append(\n                $('<tr>').append(\n                    $('<td>')\n                            .text(error)));\n        }\n\n        journal.journalctl({ cursor: cursor, count: 1, follow: false })\n                .done(function (entries) {\n                    if (entries.length >= 1 && entries[0][\"__CURSOR\"] == cursor)\n                        show_entry(entries[0]);\n                    else\n                        show_error(_(\"Journal entry not found\"));\n                })\n                .fail(function (error) {\n                    show_error(error);\n                });\n    }\n\n    function create_entry(out, entry) {\n        $('#journal-entry-message').text(journal.printable(entry['MESSAGE']));\n        var keys = Object.keys(entry).sort();\n        $.each(keys, function (i, key) {\n            if (key !== 'MESSAGE') {\n                out.append(\n                    $('<tr>').append(\n                        $('<td>').css('text-align', 'right')\n                                .text(key),\n                        $('<td>').css('text-align', 'left')\n                                .text(journal.printable(entry[key]))));\n            }\n        });\n    }\n\n    function create_problem(out, entry) {\n        var problem = null;\n        var all_p = [entry['PROBLEM_DIR'], entry['PROBLEM_DUPHASH'], entry['PROBLEM_UUID']];\n        for (var i = 0; i < all_p.length; i++) {\n            if (all_p[i] in displayable_problems) {\n                problem = problems[displayable_problems[all_p[i]]['problem_path']];\n                break;\n            }\n        }\n\n        // Display unknown problems as standard logs\n        // unknown problem = deleted problem | problem of different user\n        if (problem === null) {\n            create_entry(out, entry);\n            return;\n        }\n\n        function switch_tab(new_tab, new_content) {\n            out.find('li').removeClass('active');\n            new_tab.addClass('active');\n            out.find('tbody.tab').first()\n                    .replaceWith(new_content);\n        }\n\n        $('#journal-entry-message').text('');\n\n        var ge_t = $('<li class=\"active\">').append($('<a>').append($('<span translatable=\"yes\">').text(_(\"General\"))));\n        var pi_t = $('<li>').append($('<a>').append($('<span translatable=\"yes\">').text(_(\"Problem info\"))));\n        var pd_t = $('<li>').append($('<a>').append($('<span translatable=\"yes\">').text(_(\"Problem details\"))));\n\n        var ge = $('<tbody>').addClass('tab');\n        var pi = $('<tbody>').addClass('tab');\n        var pd = $('<tbody>').addClass('tab')\n                .append(\n                    $('<tr>').append($('<div class=\"panel-group\" id=\"accordion-markup\">')));\n\n        var tab = $('<ul class=\"nav nav-tabs nav-tabs-pf\">');\n\n        var d_btn = $('<button class=\"btn btn-danger problem-btn btn-delete pficon pficon-delete\">');\n        var r_btn = $();\n        if (problem.IsReported) {\n            for (var pid = 0; pid < problem.Reports.length; pid++) {\n                if (problem.Reports[pid][0] === 'ABRT Server') {\n                    var url = problem.Reports[pid][1]['URL']['v']['v'];\n                    r_btn = $('<a class=\"problem-btn\">')\n                            .attr('href', url)\n                            .attr(\"target\", \"_blank\")\n                            .text(_(\"Reported\"));\n                    break;\n                }\n            }\n        } else if (problem.CanBeReported) {\n            r_btn = $('<button class=\"btn btn-primary problem-btn\">').text(_(\"Report\"));\n\n            r_btn.click(function() {\n                tab.children(':last-child').replaceWith($('<div class=\"spinner problem-btn\">'));\n                var proc = cockpit.spawn(['reporter-ureport', '-d', problem.ID], { superuser: 'true' });\n                proc.done(function() {\n                    window.location.reload();\n                });\n                proc.fail(function(ex) {\n                    var message;\n                    // 70 is 'This problem has already been reported'\n                    if (ex.exit_status === 70) {\n                        window.location.reload();\n                        return;\n                    } else if (ex.problem === 'access-denied') {\n                        message = _(\"Not authorized to upload-report\");\n                    } else if (ex.problem === \"not-found\") {\n                        message = _(\"Reporter 'reporter-ureport' not found.\");\n                    } else {\n                        message = _(\"Reporting was unsucessful. Try running `reporter-ureport -d \" + problem.ID + \"`\");\n                    }\n                    $('<div class=\"alert alert-danger\">')\n                            .append('<span class=\"pficon pficon-error-circle-o\">')\n                            .text(message)\n                            .insertAfter(\".breadcrumb\");\n                    tab.children(':last-child').replaceWith($('<span>'));\n                });\n            });\n        }\n\n        ge_t.click(function() {\n            switch_tab(ge_t, ge);\n        });\n\n        pi_t.click(function() {\n            switch_tab(pi_t, pi);\n        });\n\n        pd_t.click(function() {\n            switch_tab(pd_t, pd);\n        });\n\n        d_btn.click(function() {\n            service.DeleteProblems([problem.path]);\n            displayable_problems = { };\n            find_problems().done(function() {\n                cockpit.location.go('/');\n            });\n        });\n\n        // write into general tab non-ABRT related items\n        var keys = Object.keys(entry).sort();\n        $.each(keys, function(i, key) {\n            if (key !== 'MESSAGE' && key.indexOf('PROBLEM_') !== 0) {\n                ge.append(\n                    $('<tr>').append(\n                        $('<td>').css('text-align', 'right')\n                                .text(key),\n                        $('<td>').css('text-align', 'left')\n                                .text(journal.printable(entry[key]))));\n            }\n        });\n\n        tab.html(ge_t);\n        tab.append(pi_t);\n        tab.append(pd_t);\n        tab.append(d_btn);\n        tab.append(r_btn);\n\n        var header = $('<tr>').append(\n            $('<th colspan=2>').append(tab));\n\n        out.html(header).append(ge);\n        out.css(\"margin-bottom\", \"0px\");\n        create_problem_details(problem, pi, pd);\n    }\n\n    function create_problem_details(problem, pi, pd) {\n        service.GetProblemData(problem.path).done(function(args, options) {\n            var i, elem, val;\n            // Render first column of problem info\n            var c1 = $('<table>').css('display', 'inline-block')\n                    .css('padding-right', '200px')\n                    .css('vertical-align', 'top')\n                    .addClass('info-table-ct');\n            pi.append(c1);\n            for (i = 0; i < problem_info_1.length; i++) {\n                elem = problem_info_1[i];\n                if (elem in args) {\n                    val = args[elem][2];\n                    c1.append(\n                        $('<tr>').append(\n                            $('<td>').css('text-align', 'right')\n                                    .text(elem),\n                            $('<td>').css('text-align', 'left')\n                                    .text(String(val))));\n                }\n            }\n\n            // Render second column of problem info\n            var c2 = $('<table>').css('display', 'inline-block')\n                    .css('vertical-align', 'top')\n                    .addClass('info-table-ct');\n            pi.append(c2);\n            for (i = 0; i < problem_info_2.length; i++) {\n                elem = problem_info_2[i];\n                if (elem in args) {\n                    val = args[elem][2];\n                    // Display date properly\n                    if (['last_occurrence', 'time'].indexOf(elem) !== -1) {\n                        var d = new Date(val / 1000);\n                        val = d.toString();\n                    }\n                    c2.append(\n                        $('<tr>').append(\n                            $('<td>').css('text-align', 'right')\n                                    .text(elem),\n                            $('<td>').css('text-align', 'left')\n                                    .text(String(val))));\n                }\n            }\n\n            // Render problem details\n            var problem_details_elems = Object.keys(problem_render_callbacks);\n            $.each(problem_details_elems, function(i, key) {\n                if (key in args) {\n                    val = problem_render_callbacks[key](args[key]);\n                    $('.panel-group', pd).append(\n                        $('<div class=\"panel panel-default\">')\n                                .css(\"border-width\", \"0px 0px 2px 0px\")\n                                .css(\"margin-bottom\", \"0px\")\n                                .append(\n                                    $('<div class=\"panel-heading problem-panel\">')\n                                            .attr('data-toggle', 'collapse')\n                                            .attr('data-target', '#' + key)\n                                            .attr('data-parent', '#accordion-markup')\n                                            .append($('<h4 class=\"panel-title\">')\n                                                    .append($('<a class=\"accordion-toggle\">')\n                                                            .text(key))),\n                                    $('<div class=\"panel-collapse collapse\">')\n                                            .attr('id', key)\n                                            .append(\n                                                $('<div class=\"panel-body\">')\n                                                        .html(val))));\n                }\n            });\n        });\n    }\n\n    function render_table_eq(orig) {\n        return render_table(orig, '=');\n    }\n\n    function render_table_co(orig) {\n        return render_table(orig, ':');\n    }\n\n    function render_table(orig, delimiter) {\n        var lines = orig[2].split('\\n');\n        var result = '<table class=\"detail_table\">';\n\n        for (var i = 0; i < lines.length - 1; i++) {\n            var line = lines[i].split(delimiter);\n            result += '<tr> <td class=\"text-right\">' + line[0];\n            result += '<td class=\"text-left\">' + line[1];\n            result += '</tr>';\n        }\n\n        result += '</table>';\n        return result;\n    }\n\n    function render_multiline(orig) {\n        var rendered = orig[2].replace(/\\n/g, '<br>');\n        return rendered;\n    }\n\n    function render_multitable(orig, delimiter) {\n        var rendered = orig.replace(RegExp(delimiter, 'g'), '</td><td>');\n        rendered = rendered.replace(/\\n/g, '</td></tr><tr><td>');\n        return '<table class=\"detail_table\"><tr><td>' + rendered + '</td></tr></table>';\n    }\n\n    function render_dso_list(orig) {\n        var rendered = orig[2].replace(/^(\\S+\\s+)(\\S+)(.*)$/gm, '$1<b>$2</b>$3');\n        return render_multitable(rendered, ' ');\n    }\n\n    function render_open_fds(orig) {\n        var lines = orig[2].split('\\n');\n        for (var i = 0; i < lines.length - 1; i++) {\n            if (i % 5 !== 0) {\n                lines[i] = ':' + lines[i];\n            }\n        }\n        return render_multitable(lines.join('\\n'), ':');\n    }\n\n    function render_cgroup(orig) {\n        return render_multitable(orig[2], ':');\n    }\n\n    function render_mountinfo(orig) {\n        return render_multitable(orig[2].replace(/  +/g, ':'), ' ');\n    }\n\n    function render_maps(orig) {\n        return render_multitable(orig[2].replace(/  +/g, ':'), ' ');\n    }\n\n    function render_limits(orig) {\n        var lines = orig[2].split('\\n');\n        lines[0] = '\":' + lines[0].replace(/(\\S+) (\\S+) /g, '$1:$2 ');\n        for (var i = 1; i < lines.length - 1; i++) {\n            lines[i] = lines[i].replace(/  +/g, ':');\n        }\n\n        return render_multitable(lines.join('\\n'), ':');\n    }\n\n    function render_backtrace(content) {\n        var content_json = JSON.parse(content[2]);\n\n        var crash_thread = null;\n        var other_threads = [];\n        var other_items = {};\n\n        for (var item in content_json) {\n            if (item === 'stacktrace') {\n                var threads = content_json[item];\n                for (var thread_key in threads) {\n                    var thread = threads[thread_key];\n\n                    if (thread.hasOwnProperty(\"crash_thread\") && thread['crash_thread']) {\n                        if (thread.hasOwnProperty('frames')) {\n                            crash_thread = thread['frames'];\n                        }\n                    } else {\n                        if (thread.hasOwnProperty('frames')) {\n                            other_threads.push(thread['frames']);\n                        }\n                    }\n                }\n            } else {\n                other_items[item] = content_json[item];\n            }\n        }\n        return create_detail_from_parsed_core_backtrace(crash_thread, other_threads, other_items);\n    }\n\n    function create_detail_from_parsed_core_backtrace(crash_thread, other_threads, other_items) {\n        var detail_content = '';\n        for (var item in other_items) {\n            detail_content += item;\n            detail_content += ': ' + other_items[item] + \"  \";\n        }\n\n        detail_content += create_table_from_thread(crash_thread);\n\n        if (other_threads.length !== 0) {\n            detail_content += '<div id=\"other_threads_btn_div\"><button class=\"btn btn-default other-threads-btn\" title=\"\">Show all threads</button></div>';\n            detail_content += '<div class=\"hidden other_threads\">';\n\n            var thread_num = 1;\n            for (var thread_key in other_threads) {\n                detail_content += '\\n';\n                detail_content += 'thread: ' + thread_num++ + '\\n';\n                detail_content += create_table_from_thread(other_threads[thread_key]);\n            }\n            detail_content += '</div>';\n        }\n\n        return detail_content;\n    }\n\n    function create_table_from_thread(thread) {\n        var all_keys = get_all_keys_from_frames(thread);\n\n        /* create table legend */\n        var table = '<table class=\"detail_table\"><thead><tr><th>Fr #</th>';\n        for (var key in all_keys) {\n            table += '<th>';\n            table += all_keys[key].replace(/_/g, ' ');\n            table += '</th>';\n        }\n        table += '</tr></thead><tbody>';\n\n        var frame_num = 1;\n        for (var frame_key in thread) {\n            table += '<tr>';\n            table += '<td>';\n            table += frame_num++;\n            table += '</td>';\n\n            var frame = thread[frame_key];\n            for (var key_key in all_keys) {\n                key = all_keys[key_key];\n\n                var title = '';\n                var row_content = '';\n                if (key in frame) {\n                    row_content = frame[key].toString();\n                    if (row_content.length > 8)\n                        title = row_content;\n                } else\n                    row_content = '';\n\n                table += '<td title=\"' + title + '\">';\n                table += row_content;\n                table += '</td>';\n            }\n            table += '</tr>';\n        }\n\n        table += '</tbody></table>';\n        return table;\n    }\n\n    function get_all_keys_from_frames(thread) {\n        var all_keys = [];\n\n        for (var frame_key in thread) {\n            var frame = thread[frame_key];\n            var keys = Object.keys(frame);\n\n            for (var key in keys) {\n                if (all_keys.indexOf(keys[key]) === -1)\n                    all_keys.push(keys[key]);\n            }\n        }\n\n        /* order keys */\n        var desired_ordered_of_keys = ['function_name', 'file_name', 'address', 'build_id', 'build_id_offset'];\n\n        var all_ordered_keys = [];\n\n        for (var key_key in desired_ordered_of_keys) {\n            var in_key = desired_ordered_of_keys[key_key];\n            var key_index = all_keys.indexOf(in_key);\n            if (key_index !== -1) {\n                all_ordered_keys.push(in_key);\n                delete all_keys[key_index];\n            }\n        }\n\n        for (key_key in all_keys) {\n            all_ordered_keys.push(all_keys[key_key]);\n        }\n\n        return all_ordered_keys;\n    }\n\n    function update() {\n        var path = cockpit.location.path;\n        if (path.length === 0) {\n            $(\"#journal-entry\").hide();\n            update_query();\n            $(\"#journal\").show();\n        } else if (path.length == 1) {\n            stop_query();\n            $(\"#journal\").hide();\n            update_entry();\n            $(\"#journal-entry\").show();\n        } else { /* redirect */\n            console.warn(\"not a journal location: \" + path);\n            cockpit.location = '';\n        }\n        $(\"body\").show();\n    }\n\n    $(cockpit).on(\"locationchanged\", update);\n\n    $('#journal-current-day-menu a').on('click', function() {\n        cockpit.location.go([], $.extend(cockpit.location.options, { start: $(this).attr(\"data-op\") }));\n    });\n\n    $('#journal-box').on('click', '.cockpit-logline', function() {\n        var cursor = $(this).attr('data-cursor');\n        if (cursor)\n            cockpit.location.go([ cursor ], {'parent_options': JSON.stringify(cockpit.location.options)});\n    });\n\n    $('#journal-prio-menu a').on('click', function() {\n        cockpit.location.go([], $.extend(cockpit.location.options, { prio: $(this).attr('data-prio') }));\n    });\n\n    $('#journal-navigate-home').on(\"click\", function() {\n        var parent_options;\n        if (cockpit.location.options.parent_options) {\n            parent_options = JSON.parse(cockpit.location.options.parent_options);\n        }\n        cockpit.location.go('/', parent_options);\n    });\n\n    update();\n});\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/systemd/logs.js","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 154\n// module chunks = 1 2 3","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2015 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    var cockpit = require(\"cockpit\");\n    var Mustache = require(\"mustache\");\n    var day_header_template = require('raw!journal_day_header.mustache');\n    var line_template = require('raw!journal_line.mustache');\n    var reboot_template = require('raw!journal_reboot.mustache');\n\n    var _ = cockpit.gettext;\n    var C_ = cockpit.gettext;\n\n    var journal = { };\n\n    /**\n     * journalctl([match, ...], [options])\n     * @match: any number of journal match strings\n     * @options: an object containing further options\n     *\n     * Load and (by default) stream journal entries as\n     * json objects. This function returns a jQuery deferred\n     * object which delivers the various journal entries.\n     *\n     * The various @match strings are journalctl matches.\n     * Zero, one or more can be specified. They must be in\n     * string format, or arrays of strings.\n     *\n     * The optional @options object can contain the following:\n     *  * \"host\": the host to load journal from\n     *  * \"count\": number of entries to load and/or pre-stream.\n     *    Default is 10\n     *  * \"follow\": if set to false just load entries and don't\n     *    stream further journal data. Default is true.\n     *  * \"directory\": optional directory to load journal files\n     *  * \"boot\": when set only list entries from this specific\n     *    boot id, or if null then the current boot.\n     *  * \"since\": if specified list entries since the date/time\n     *  * \"until\": if specified list entries until the date/time\n     *  * \"cursor\": a cursor to start listing entries from\n     *  * \"after\": a cursor to start listing entries after\n     *\n     * Returns a jQuery deferred promise. You can call these\n     * functions on the deferred to handle the responses. Note that\n     * there are additional non-jQuery methods.\n     *\n     *  .done(function(entries) { }): Called when done, @entries is\n     *         an array of all journal entries loaded. If .stream()\n     *         has been invoked then @entries will be empty.\n     *  .fail(funciton(ex) { }): called if the operation fails\n     *  .stream(function(entries) { }): called when we receive entries\n     *         entries. Called once per batch of journal @entries,\n     *         whether following or not.\n     *  .stop(): stop following or retrieving entries.\n     */\n\n    journal.journalctl = function journalctl(/* ... */) {\n        var matches = [];\n        var i, arg;\n        var options = { follow: true };\n        for (i = 0; i < arguments.length; i++) {\n            arg = arguments[i];\n            if (typeof arg == \"string\") {\n                matches.push(arg);\n            } else if (typeof arg == \"object\") {\n                if (arg instanceof Array) {\n                    matches.push.apply(matches, arg);\n                } else {\n                    cockpit.extend(options, arg);\n                    break;\n                }\n            } else {\n                console.warn(\"journal.journalctl called with invalid argument:\", arg);\n            }\n        }\n\n        if (options.count === undefined) {\n            if (options.follow)\n                options.count = 10;\n            else\n                options.count = null;\n        }\n\n        var cmd = [ \"journalctl\", \"-q\", \"--output=json\" ];\n        if (!options.count)\n            cmd.push(\"--no-tail\");\n        else\n            cmd.push(\"--lines=\" + options.count);\n        if (options.directory)\n            cmd.push(\"--directory=\" + options.directory);\n        if (options.boot)\n            cmd.push(\"--boot=\" + options.boot);\n        else if (options.boot !== undefined)\n            cmd.push(\"--boot\");\n        if (options.since)\n            cmd.push(\"--since=\" + options.since);\n        if (options.until)\n            cmd.push(\"--until=\" + options.until);\n        if (options.cursor)\n            cmd.push(\"--cursor=\" + options.cursor);\n        if (options.after)\n            cmd.push(\"--after=\" + options.after);\n\n        /* journalctl doesn't allow reverse and follow together */\n        if (options.reverse)\n            cmd.push(\"--reverse\");\n        else if (options.follow)\n            cmd.push(\"--follow\");\n\n        cmd.push(\"--\");\n        cmd.push.apply(cmd, matches);\n\n        var dfd = cockpit.defer();\n        var promise;\n        var buffer = \"\";\n        var entries = [];\n        var streamers = [];\n        var interval = null;\n\n        function fire_streamers() {\n            var ents, i;\n            if (streamers.length && entries.length > 0) {\n                ents = entries;\n                entries = [];\n                for (i = 0; i < streamers.length; i++)\n                    streamers[i].apply(promise, [ents]);\n            } else {\n                window.clearInterval(interval);\n                interval = null;\n            }\n        }\n\n        var proc = cockpit.spawn(cmd, { host: options.host, batch: 8192, latency: 300, superuser: \"try\" })\n                .stream(function(data) {\n                    if (buffer)\n                        data = buffer + data;\n                    buffer = \"\";\n\n                    var lines = data.split(\"\\n\");\n                    var last = lines.length - 1;\n                    lines.forEach(function(line, i) {\n                        if (i == last) {\n                            buffer = line;\n                        } else if (line && line.indexOf(\"-- \") !== 0) {\n                            try {\n                                entries.push(JSON.parse(line));\n                            } catch (e) {\n                                console.warn(e, line);\n                            }\n                        }\n                    });\n\n                    if (streamers.length && interval === null)\n                        interval = window.setInterval(fire_streamers, 300);\n                })\n                .done(function() {\n                    fire_streamers();\n                    dfd.resolve(entries);\n                })\n                .fail(function(ex) {\n                /* The journalctl command fails when no entries are matched\n                 * so we just ignore this status code */\n                    if (ex.problem == \"cancelled\" ||\n                    ex.exit_status === 1) {\n                        fire_streamers();\n                        dfd.resolve(entries);\n                    } else {\n                        dfd.reject(ex);\n                    }\n                })\n                .always(function() {\n                    window.clearInterval(interval);\n                });\n\n        promise = dfd.promise();\n        promise.stream = function stream(callback) {\n            streamers.push(callback);\n            return this;\n        };\n        promise.stop = function stop() {\n            proc.close(\"cancelled\");\n        };\n        return promise;\n    };\n\n    journal.printable = function printable(value) {\n        if (value === undefined || value === null)\n            return _(\"[no data]\");\n        else if (typeof (value) == \"string\")\n            return value;\n        else if (value.length !== undefined)\n            return cockpit.format(_(\"[$0 bytes of binary data]\"), value.length);\n        else\n            return _(\"[binary data]\");\n    };\n\n    function output_funcs_for_box(box) {\n        /* Dereference any jQuery object here */\n        if (box.jquery)\n            box = box[0];\n\n        Mustache.parse(day_header_template);\n        Mustache.parse(line_template);\n        Mustache.parse(reboot_template);\n\n        function render_line(ident, prio, message, count, time, entry) {\n            var parts = {\n                'cursor': entry[\"__CURSOR\"],\n                'time': time,\n                'message': message,\n                'service': ident\n            };\n            if (count > 1)\n                parts['count'] = count;\n            if (ident === 'abrt-notification') {\n                parts['problem'] = true;\n                parts['service'] = entry['PROBLEM_BINARY'];\n            } else if (prio < 4)\n                parts['warning'] = true;\n            return Mustache.render(line_template, parts);\n        }\n\n        var reboot = _(\"Reboot\");\n        var reboot_line = Mustache.render(reboot_template, {'message': reboot});\n\n        function render_reboot_separator() {\n            return reboot_line;\n        }\n\n        function render_day_header(day) {\n            return Mustache.render(day_header_template, {'day': day});\n        }\n\n        function parse_html(string) {\n            var div = document.createElement(\"div\");\n            div.innerHTML = string.trim();\n            return div.children[0];\n        }\n\n        return {\n            render_line: render_line,\n            render_day_header: render_day_header,\n            render_reboot_separator: render_reboot_separator,\n\n            append: function(elt) {\n                if (typeof (elt) == \"string\")\n                    elt = parse_html(elt);\n                box.appendChild(elt);\n            },\n            prepend: function(elt) {\n                if (typeof (elt) == \"string\")\n                    elt = parse_html(elt);\n                if (box.firstChild)\n                    box.insertBefore(elt, box.firstChild);\n                else\n                    box.appendChild(elt);\n            },\n            remove_last: function() {\n                if (box.lastChild)\n                    box.removeChild(box.lastChild);\n            },\n            remove_first: function() {\n                if (box.firstChild)\n                    box.removeChild(box.firstChild);\n            },\n        };\n    }\n\n    var month_names = [\n        C_(\"month-name\", 'January'),\n        C_(\"month-name\", 'February'),\n        C_(\"month-name\", 'March'),\n        C_(\"month-name\", 'April'),\n        C_(\"month-name\", 'May'),\n        C_(\"month-name\", 'June'),\n        C_(\"month-name\", 'July'),\n        C_(\"month-name\", 'August'),\n        C_(\"month-name\", 'September'),\n        C_(\"month-name\", 'October'),\n        C_(\"month-name\", 'November'),\n        C_(\"month-name\", 'December')\n    ];\n\n    /* Render the journal entries by passing suitable HTML strings back to\n       the caller via the 'output_funcs'.\n\n       Rendering is context aware.  It will insert 'reboot' markers, for\n       example, and collapse repeated lines.  You can extend the output at\n       the bottom and also at the top.\n\n       A new renderer is created by calling 'journal.renderer' like\n       so:\n\n          var renderer = journal.renderer(funcs);\n\n       You can feed new entries into the renderer by calling various\n       methods on the returned object:\n\n          - renderer.append(journal_entry)\n          - renderer.append_flush()\n          - renderer.prepend(journal_entry)\n          - renderer.prepend_flush()\n\n       A 'journal_entry' is one element of the result array returned by a\n       call to 'Query' with the 'cockpit.journal_fields' as the fields to\n       return.\n\n       Calling 'append' will append the given entry to the end of the\n       output, naturally, and 'prepend' will prepend it to the start.\n\n       The output might lag behind what has been input via 'append' and\n       'prepend', and you need to call 'append_flush' and 'prepend_flush'\n       respectively to ensure that the output is up-to-date.  Flushing a\n       renderer does not introduce discontinuities into the output.  You\n       can continue to feed entries into the renderer after flushing and\n       repeated lines will be correctly collapsed across the flush, for\n       example.\n\n       The renderer will call methods of the 'output_funcs' object to\n       produce the desired output:\n\n          - output_funcs.append(rendered)\n          - output_funcs.remove_last()\n          - output_funcs.prepend(rendered)\n          - output_funcs.remove_first()\n\n       The 'rendered' argument is the return value of one of the rendering\n       functions described below.  The 'append' and 'prepend' methods\n       should add this element to the output, naturally, and 'remove_last'\n       and 'remove_first' should remove the indicated element.\n\n       If you never call 'prepend' on the renderer, 'output_func.prepend'\n       isn't called either.  If you never call 'renderer.prepend' after\n       'renderer.prepend_flush', then 'output_func.remove_first' will\n       never be called.  The same guarantees exist for the 'append' family\n       of functions.\n\n       The actual rendering is also done by calling methods on\n       'output_funcs':\n\n          - output_funcs.render_line(ident, prio, message, count, time, cursor)\n          - output_funcs.render_day_header(day)\n          - output_funcs.render_reboot_separator()\n\n    */\n\n    journal.renderer = function renderer(funcs_or_box) {\n        var output_funcs;\n        if (funcs_or_box.render_line)\n            output_funcs = funcs_or_box;\n        else\n            output_funcs = output_funcs_for_box(funcs_or_box);\n\n        function copy_object(o) {\n            var c = { }; for (var p in o) c[p] = o[p]; return c;\n        }\n\n        // A 'entry' object describes a journal entry in formatted form.\n        // It has fields 'bootid', 'ident', 'prio', 'message', 'time',\n        // 'day', all of which are strings.\n\n        function format_entry(journal_entry) {\n            function pad(n) {\n                var str = n.toFixed();\n                if (str.length == 1)\n                    str = '0' + str;\n                return str;\n            }\n\n            var d = new Date(journal_entry[\"__REALTIME_TIMESTAMP\"] / 1000);\n            return {\n                cursor: journal_entry[\"__CURSOR\"],\n                full: journal_entry,\n                day: month_names[d.getMonth()] + ' ' + d.getDate().toFixed() + ', ' + d.getFullYear().toFixed(),\n                time: pad(d.getHours()) + ':' + pad(d.getMinutes()),\n                bootid: journal_entry[\"_BOOT_ID\"],\n                ident: journal_entry[\"SYSLOG_IDENTIFIER\"] || journal_entry[\"_COMM\"],\n                prio: journal_entry[\"PRIORITY\"],\n                message: journal.printable(journal_entry[\"MESSAGE\"])\n            };\n        }\n\n        function entry_is_equal(a, b) {\n            return (a && b &&\n                    a.day == b.day &&\n                    a.bootid == b.bootid &&\n                    a.ident == b.ident &&\n                    a.prio == b.prio &&\n                    a.message == b.message);\n        }\n\n        // A state object describes a line that should be eventually\n        // output.  It has an 'entry' field as per description above, and\n        // also 'count', 'last_time', and 'first_time', which record\n        // repeated entries.  Additionally:\n        //\n        // line_present: When true, the line has been output already with\n        //     some preliminary data.  It needs to be removed before\n        //     outputting more recent data.\n        //\n        // header_present: The day header has been output preliminarily\n        //     before the actual log lines.  It needs to be removed before\n        //     prepending more lines.  If both line_present and\n        //     header_present are true, then the header comes first in the\n        //     output, followed by the line.\n\n        function render_state_line(state) {\n            return output_funcs.render_line(state.entry.ident,\n                                            state.entry.prio,\n                                            state.entry.message,\n                                            state.count,\n                                            state.last_time,\n                                            state.entry.full);\n        }\n\n        // We keep the state of the first and last journal lines,\n        // respectively, in order to collapse repeated lines, and to\n        // insert reboot markers and day headers.\n        //\n        // Normally, there are two state objects, but if only a single\n        // line has been output so far, top_state and bottom_state point\n        // to the same object.\n\n        var top_state, bottom_state;\n\n        top_state = bottom_state = { };\n\n        function start_new_line() {\n            // If we now have two lines, split the state\n            if (top_state === bottom_state && top_state.entry) {\n                top_state = copy_object(bottom_state);\n            }\n        }\n\n        function top_output() {\n            if (top_state.header_present) {\n                output_funcs.remove_first();\n                top_state.header_present = false;\n            }\n            if (top_state.line_present) {\n                output_funcs.remove_first();\n                top_state.line_present = false;\n            }\n            if (top_state.entry) {\n                output_funcs.prepend(render_state_line(top_state));\n                top_state.line_present = true;\n            }\n        }\n\n        function prepend(journal_entry) {\n            var entry = format_entry(journal_entry);\n\n            if (entry_is_equal(top_state.entry, entry)) {\n                top_state.count += 1;\n                top_state.first_time = entry.time;\n            } else {\n                top_output();\n\n                if (top_state.entry) {\n                    if (entry.bootid != top_state.entry.bootid)\n                        output_funcs.prepend(output_funcs.render_reboot_separator());\n                    if (entry.day != top_state.entry.day)\n                        output_funcs.prepend(output_funcs.render_day_header(top_state.entry.day));\n                }\n\n                start_new_line();\n                top_state.entry = entry;\n                top_state.count = 1;\n                top_state.first_time = top_state.last_time = entry.time;\n                top_state.line_present = false;\n            }\n        }\n\n        function prepend_flush() {\n            top_output();\n            if (top_state.entry) {\n                output_funcs.prepend(output_funcs.render_day_header(top_state.entry.day));\n                top_state.header_present = true;\n            }\n        }\n\n        function bottom_output() {\n            if (bottom_state.line_present) {\n                output_funcs.remove_last();\n                bottom_state.line_present = false;\n            }\n            if (bottom_state.entry) {\n                output_funcs.append(render_state_line(bottom_state));\n                bottom_state.line_present = true;\n            }\n        }\n\n        function append(journal_entry) {\n            var entry = format_entry(journal_entry);\n\n            if (entry_is_equal(bottom_state.entry, entry)) {\n                bottom_state.count += 1;\n                bottom_state.last_time = entry.time;\n            } else {\n                bottom_output();\n\n                if (!bottom_state.entry || entry.day != bottom_state.entry.day) {\n                    output_funcs.append(output_funcs.render_day_header(entry.day));\n                    bottom_state.header_present = true;\n                }\n                if (bottom_state.entry && entry.bootid != bottom_state.entry.bootid)\n                    output_funcs.append(output_funcs.render_reboot_separator());\n\n                start_new_line();\n                bottom_state.entry = entry;\n                bottom_state.count = 1;\n                bottom_state.first_time = bottom_state.last_time = entry.time;\n                bottom_state.line_present = false;\n            }\n        }\n\n        function append_flush() {\n            bottom_output();\n        }\n\n        return { prepend: prepend,\n                 prepend_flush: prepend_flush,\n                 append: append,\n                 append_flush: append_flush\n        };\n    };\n\n    journal.logbox = function logbox(match, max_entries) {\n        var entries = [ ];\n        var box = document.createElement(\"div\");\n\n        function render() {\n            var renderer = journal.renderer(box);\n            while (box.firstChild)\n                box.removeChild(box.firstChild);\n            for (var i = 0; i < entries.length; i++) {\n                renderer.prepend(entries[i]);\n            }\n            renderer.prepend_flush();\n            if (entries.length > 0)\n                box.removeAttribute(\"hidden\");\n            else\n                box.setAttribute(\"hidden\", \"hidden\");\n        }\n\n        render();\n\n        var promise = journal.journalctl(match, { count: max_entries })\n                .stream(function(tail) {\n                    entries = entries.concat(tail);\n                    if (entries.length > max_entries)\n                        entries = entries.slice(-max_entries);\n                    render();\n                })\n                .fail(function(error) {\n                    box.appendChild(document.createTextNode(error.message));\n                    box.removeAttribute(\"hidden\");\n                });\n\n        /* Both a DOM element and a promise */\n        return promise.promise(box);\n    };\n\n    module.exports = journal;\n}());\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/lib/journal.js","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar cockpit = require(\"cockpit\");\nvar mustache = require(\"mustache/mustache\");\n\n/*\n * Turns a mustache template into a translated mustache template\n * by preparsing it and translating it.\n */\nvar cache = { };\n\nfunction translate(template) {\n    if (template in cache)\n        return cache[template];\n    var div = document.createElement(\"div\");\n    div.innerHTML = template;\n    cockpit.translate(div);\n    var result = div.innerHTML;\n    cache[template] = result;\n    return result;\n}\n\n/* Just like the mustache object, except for translated */\nmodule.exports = cockpit.extend({ }, mustache, {\n    render: function render(template, view, partials) {\n        if (!view)\n            view = {};\n\n        return translate(mustache.render(template, view, partials));\n    },\n    to_html: function to_html(template, view, partials, send) {\n        if (!view)\n            view = {};\n\n        return translate(mustache.to_html(template, view, partials, send));\n    },\n    clearCache: function clearCache() {\n        cache = { };\n        return mustache.clearCache();\n    }\n});\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/lib/mustache.js","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache (global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n}(this, function mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n')\n            stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = hasProperty(value, names[index]);\n\n            value = value[names[index++]];\n          }\n        } else {\n          value = context.view[name];\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit)\n          break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null)\n      tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n      return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.3.2';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render (template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/mustache/mustache.js\n// module id = 157\n// module chunks = 1 2 3","module.exports = \"<div class=\\\"panel-heading\\\">{{day}}</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/lib/journal_day_header.mustache\n// module id = 158\n// module chunks = 1 2","module.exports = \"<div class=\\\"cockpit-logline\\\" data-cursor=\\\"{{cursor}}\\\" role=\\\"row\\\">\\n  <div class=\\\"cockpit-log-warning\\\" role=\\\"cell\\\">{{#warning}}\\n    <i class=\\\"fa fa-exclamation-triangle\\\"></i>\\n  {{/warning}}{{#problem}}\\n    <i class=\\\"fa fa-times-circle-o\\\"></i>\\n  {{/problem}}\\n  </div>\\n  <div class=\\\"cockpit-log-time\\\" role=\\\"cell\\\">{{time}}</div>\\n  <span class=\\\"cockpit-log-message\\\" role=\\\"cell\\\">{{message}}</span>\\n  {{! if we have count (repeated messages), show service name and badge - otherwise just the service }}\\n  {{#count}}\\n  <div class=\\\"cockpit-log-service-container\\\" role=\\\"cell\\\">\\n    <div class=\\\"cockpit-log-service-reduced\\\">{{service}}</div>\\n    <span class=\\\"badge\\\">{{count}}&#160;<i class=\\\"fa fa-caret-right\\\"></i></span>\\n  </div>\\n  {{/count}}{{^count}}\\n  <div class=\\\"cockpit-log-service\\\" role=\\\"cell\\\">{{service}}</div>\\n  {{/count}}\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/lib/journal_line.mustache\n// module id = 159\n// module chunks = 1 2","module.exports = \"<div class=\\\"cockpit-logline\\\" role=\\\"row\\\">\\n  {{! placeholders for correct message alignment }}\\n  <div class=\\\"cockpit-log-warning\\\" role=\\\"cell\\\"></div>\\n  <span class=\\\"cockpit-log-message cockpit-logmsg-reboot\\\" role=\\\"cell\\\">{{message}}</span>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/lib/journal_reboot.mustache\n// module id = 160\n// module chunks = 1 2"],"sourceRoot":""}