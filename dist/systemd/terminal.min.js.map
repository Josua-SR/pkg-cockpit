{"version":3,"sources":["webpack:///systemd/terminal.min.js","webpack:///webpack/bootstrap f40518eb689e02300e0d?17bd**","webpack:///external \"cockpit\"?478e**","webpack:///../pkg/systemd/terminal.jsx","webpack:///../bower_components/react-lite-cockpit/dist/react-lite.js","webpack:///../pkg/lib/cockpit-components-terminal.jsx","webpack:///../bower_components/term.js-cockpit/src/term.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","3","cockpit","121","_","gettext","React","componentsTerminal","translate","UserTerminal","createClass","displayName","createChannel","user","channel","payload","spawn","shell","environ","directory","home","pty","getInitialState","title","componentWillMount","done","this","setState","bind","onTitleChanged","onResetClick","event","button","state","close","refs","resetButton","blur","terminal","focus","render","createElement","Terminal","ref","className","onClick","document","getElementById","body","removeAttribute","122","global","factory","createVelem","type","props","vtype","VELEMENT","createVstateless","VSTATELESS","getUid","createVcomponent","VCOMPONENT","createVcomment","comment","VCOMMENT","initVnode","vnode","parentContext","namespaceURI","node","initVelem","initVcomponent","initVstateless","createComment","createTextNode","destroyVnode","destroyVelem","destroyVcomponent","destroyVstateless","velem","SVGNamespaceURI","createElementNS","children","vchildren","isArr","flattenChildren","collectChild","i","len","length","appendChild","isCustomComponent","indexOf","is","setProps","attachRef","child","updateVelem","newVelem","newProps","oldHtml","dangerouslySetInnerHTML","__html","newChildren","childNodes","vchildrenLen","newVchildren","newVchildrenLen","shouldRemove","patches","Array","j","newVnode","outer","_type","key","_refs","childNode","removeChild","patchItem","newChildNode","updateVcomponent","updateVstateless","nodeValue","currentNode","insertBefore","patchProps","detachRef","eventStore","hasOwnProperty","EVENT_KEYS","test","getEventName","notBubbleEvents","vstateless","renderVstateless","cache","newVstateless","newNode","compareTwoVnodes","extend","componentContext","getContextByTypes","contextTypes","Error","name","vcomponent","Component","component","updater","$updater","$cache","isPending","context","getState","renderComponent","isMounted","pendingComponents","push","newVcomponent","nextProps","componentWillReceiveProps","emitUpdate","forceUpdate","noop","componentWillUnmount","curContext","constructor","getChildContext","clearPendingComponents","components","componentDidMount","parentNode","replaceChild","getDOMNode","refKey","refValue","nodeName","isFn","Updater","instance","pendingStates","pendingCallbacks","nextContext","clearCallbacks","shouldUpdate","nextState","callback","shouldComponentUpdate","toLowerCase","addEvent","elem","eventType","listener","eventTypes","addEventListener","substr","dispatchEvent","removeEvent","target","syntheticEvent","undefined","updateQueue","_target","createSyntheticEvent","currentTarget","$cancalBubble","batchUpdate","nativeEvent","cancalBubble","setStyle","elemStyle","styles","styleName","setStyleValue","removeStyle","patchStyle","style","newStyle","keyMap","prefixKey","prefix","charAt","toUpperCase","substring","styleValue","isUnitlessNumber","RE_NUMBER","mergeConfigToProperties","config","attrNS","domAttrs","domProps","propName","propConfig","properties","attributeName","propertyName","attributeNamespace","mustUseProperty","checkMask","MUST_USE_PROPERTY","hasBooleanValue","HAS_BOOLEAN_VALUE","hasNumericValue","HAS_NUMERIC_VALUE","hasPositiveNumericValue","HAS_POSITIVE_NUMERIC_VALUE","hasOverloadedBooleanValue","HAS_OVERLOADED_BOOLEAN_VALUE","value","bitmask","setPropValue","propInfo","isNaN","removePropValue","namespace","setAttributeNS","setAttribute","isCustomAttribute","VALID_ATTRIBUTE_NAME_REGEX","obj","identity","pipe","fn1","fn2","apply","arguments","list","iteratee","a","item","eachItem","to","nextSource","nextIndex","from","Object","keys","uid","innerHTML","patchProp","oldValue","html","renderTreeIntoContainer","container","COMPONENT_ID","argsCache","pendingRendering","oldVnode","rootNode","vnodeStore","firstChild","lastChild","result","unstable_renderSubtreeIntoContainer","parentComponent","subVnode","unmountComponentAtNode","findDOMNode","isValidElement","cloneElement","originElem","_len","_key","concat","createFactory","_len2","args","_key2","createVnode","varType","prototype","finalProps","propValue","propKey","defaultProps","argsLen","finalChildren","only","forEach","index","map","store","data","isEqual","getKey","_ref","escapeUserProvidedKey","count","toArray","toString","text","replace","userProvidedKeyEscapeRegex","eachMixin","mixins","mixin","combineMixinToProto","proto","curValue","$getInitialStates","combineMixinToClass","propTypes","statics","getDefaultProps","bindContext","source","_this","Facade","spec","Klass","autobind","specMixins","updaters","add","pop","updateComponent","addState","replaceState","addCallback","componentWillUpdate","componentDidUpdate","onmouseleave","onmouseenter","onload","onunload","onscroll","onfocus","onblur","onrowexit","onbeforeunload","onstop","ondragdrop","ondragenter","ondragexit","ondraggesture","ondragover","oncontextmenu","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridColumn","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixes","prop","ATTRIBUTE_NAME_START_CHAR","ATTRIBUTE_NAME_CHAR","RegExp","HTMLDOMPropertyConfig","accept","acceptCharset","accessKey","action","allowFullScreen","allowTransparency","alt","async","autoComplete","autoFocus","autoPlay","capture","cellPadding","cellSpacing","charSet","challenge","checked","cite","classID","cols","colSpan","content","contentEditable","contextMenu","controls","coords","crossOrigin","dateTime","default","defaultValue","defaultChecked","defer","dir","disabled","download","draggable","encType","form","formAction","formEncType","formMethod","formNoValidate","formTarget","frameBorder","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","icon","inputMode","integrity","keyParams","keyType","kind","label","lang","loop","low","manifest","marginHeight","marginWidth","max","maxLength","media","mediaGroup","method","min","minLength","multiple","muted","nonce","noValidate","open","optimum","pattern","placeholder","poster","preload","profile","radioGroup","readOnly","rel","required","reversed","role","rows","rowSpan","sandbox","scope","scoped","scrolling","seamless","selected","shape","size","sizes","span","spellCheck","src","srcDoc","srcLang","srcSet","start","step","summary","tabIndex","useMap","width","wmode","wrap","about","datatype","inlist","property","resource","typeof","vocab","autoCapitalize","autoCorrect","autoSave","color","itemProp","itemScope","itemType","itemID","itemRef","results","security","unselectable","xlink","xml","ATTRS","accentHeight","accumulate","additive","alignmentBaseline","allowReorder","alphabetic","amplitude","arabicForm","ascent","attributeType","autoReverse","azimuth","baseFrequency","baseProfile","baselineShift","bbox","begin","bias","by","calcMode","capHeight","clip","clipPath","clipRule","clipPathUnits","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","contentScriptType","contentStyleType","cursor","cx","cy","d","decelerate","descent","diffuseConstant","direction","display","divisor","dominantBaseline","dur","dx","dy","edgeMode","elevation","enableBackground","end","exponent","externalResourcesRequired","fill","fillRule","filter","filterRes","filterUnits","floodColor","focusable","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","format","fx","fy","g1","g2","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","glyphRef","gradientTransform","gradientUnits","hanging","horizAdvX","horizOriginX","ideographic","imageRendering","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","kerning","keyPoints","keySplines","keyTimes","lengthAdjust","letterSpacing","lightingColor","limitingConeAngle","local","markerEnd","markerMid","markerStart","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mode","numOctaves","offset","operator","orient","orientation","origin","overflow","overlinePosition","overlineThickness","paintOrder","panose1","pathLength","patternContentUnits","patternTransform","patternUnits","pointerEvents","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","r","radius","refX","refY","renderingIntent","repeatCount","repeatDur","requiredExtensions","requiredFeatures","restart","rotate","rx","ry","scale","seed","shapeRendering","slope","spacing","specularConstant","specularExponent","speed","spreadMethod","startOffset","stdDeviation","stemh","stemv","stitchTiles","stopColor","strikethroughPosition","strikethroughThickness","string","stroke","strokeLinecap","strokeLinejoin","surfaceScale","systemLanguage","tableValues","targetX","targetY","textAnchor","textDecoration","textRendering","textLength","transform","u1","u2","underlinePosition","underlineThickness","unicode","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","values","vectorEffect","version","vertAdvY","vertOriginX","vertOriginY","viewBox","viewTarget","visibility","widths","wordSpacing","writingMode","x","xHeight","x1","x2","xChannelSelector","xlinkActuate","xlinkArcrole","xlinkHref","xlinkRole","xlinkShow","xlinkTitle","xlinkType","xmlBase","xmlLang","xmlSpace","y","y1","y2","yChannelSelector","z","zoomAndPan","SVGDOMPropertyConfig","isArray","freeze","ReactDOM","tagNames","DOM","split","tagName","check","isRequired","PropTypes","array","bool","func","number","object","any","arrayOf","element","instanceOf","objectOf","oneOf","oneOfType","Children","__spread","__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","123","Term","term","screenKeys","useStyle","on","valid","send","connectChannel","resize","reset","disconnectChannel","prevProps","destroy","onChannelMessage","write","onChannelClose","options","problem","cursorHidden","refresh","removeEventListener","124","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","EventEmitter","_events","Stream","self","handler","each","defaults","colors","_colors","slice","parent","getElementsByTagName","geometry","setRawMode","isTTY","isRaw","columns","ybase","ydisp","cursorState","convertEol","queue","scrollTop","scrollBottom","applicationKeypad","applicationCursor","originMode","insertMode","wraparoundMode","normal","prefixMode","selectMode","visualMode","searchMode","searchDown","entry","entryPrefix","_real","_selected","_textarea","charset","gcharset","glevel","charsets","decLocator","x10Mouse","vt200Mouse","vt300Mouse","normalMouse","mouseEvents","sendFocus","utfMouse","sgrMouse","urxvtMouse","refreshStart","refreshEnd","savedX","savedY","savedCols","readable","writable","defAttr","curAttr","params","currentParam","postfix","lines","blankLine","tabs","setupStops","el","off","cancel","ev","preventDefault","returnValue","stopPropagation","cancelBubble","inherits","f","isBoldBroken","line","w1","scrollWidth","w2","isWide","ch","matchColor","r1","b1","hash","_cache","r2","b2","diff","ldiff","Infinity","li","vcolors","distance","iter","con","addListener","removeListener","splice","removeAllListeners","once","emit","l","listeners","dest","unbind","ondata","onerror","onend","err","escaped","csi","osc","dcs","ignore","UDK","tangoColors","xtermColors","out","g","b","hex","parseInt","termName","cursorBlink","visualBell","popOnBell","scrollback","debug","showCursor","initGlobal","_boundDocs","bindPaste","bindKeys","bindCopy","isMobile","fixMobile","insertStyle","window","defaultView","clipboardData","getData","srcElement","keyDown","keyPress","textarea","getCopyTextarea","grabText","textContent","setSelectionRange","setTimeout","position","left","top","backgroundColor","borderStyle","outlineStyle","autocapitalize","autocorrect","isAndroid","bg","fg","head","div","ownerDocument","navigator","userAgent","isMac","isIpad","isIphone","isMSIE","outline","useEvents","useFocus","startBlink","which","useMouse","bindMouse","brokenBold","sendButton","pos","getButton","getCoords","sendEvent","pressed","wheelEvent","sendMove","encode","page","String","fromCharCode","shift","meta","ctrl","mod","detail","wheelDeltaY","shiftKey","metaKey","ctrlKey","w","h","pageX","pageY","documentElement","offsetLeft","offsetTop","offsetParent","clientWidth","clientHeight","Math","round","up","scrollDisp","destroySoon","destroyed","_blink","clearInterval","attr","flags","row","log","_cursorBlink","_blinker","setInterval","refreshBlink","scroll","updateRange","disp","cs","maxRange","lch","bell","nextStop","setgLevel","reverseIndex","setgCharset","US","saveCursor","restoreCursor","tabSet","error","SCLD","UK","Dutch","Finnish","French","FrenchCanadian","German","Italian","NorwegianDanish","Spanish","Swedish","Swiss","ISOLatin","charCodeAt","handleTitle","cursorUp","cursorDown","cursorForward","cursorBackward","cursorPos","eraseInDisplay","eraseInLine","charAttributes","deviceStatus","insertChars","cursorNextLine","cursorPrecedingLine","cursorCharAbsolute","insertLines","deleteLines","deleteChars","eraseChars","charPosAbsolute","HPositionRelative","sendDeviceAttributes","linePosAbsolute","VPositionRelative","HVPosition","setMode","resetMode","setScrollRegion","cursorForwardTab","scrollUp","scrollDown","cursorBackwardTab","repeatPrecedingCharacter","tabClear","softReset","pt","clearAll","eraseBelow","lockKeys","dontLockKeys","keyList","part","keyCode","hexKeyValue","n","writeln","ret","resume","pause","altKey","enterPrefix","leavePrefix","leaveVisual","keySelect","charCode","keyPrefix","borderColor","console","prevStop","eraseAttr","eraseRight","eraseLeft","eraseLine","cur","param","col","initMouseTracking","resetTitleModes","mediaCopy","setResources","disableModifiers","setPointerMode","requestAnsiMode","requestPrivateMode","setConformanceLevel","loadLEDs","setCursorStyle","setCharProtectionAttr","restorePrivateValues","setAttrInRectangle","t","savePrivateValues","manipulateWindow","reverseAttrInRectangle","setTitleModeFeature","setWarningBellVolume","setMarginBellVolume","copyRectangle","enableFilterRectangle","requestParameters","selectChangeExtent","fillRectangle","enableLocatorReporting","eraseRectangle","setLocatorEvents","selectiveEraseRectangle","requestLocatorPosition","insertColumns","deleteColumns","enterSelect","copyBuffer","leaveSelect","enterVisual","preVisual","selectText","enterSearch","down","preSearch","preSearchX","preSearchY","bottom","leaveSearch","_copyTextarea","copyText","ox1","ox2","oy1","oy2","tmp","xl","old","buf","keySearch","ox","oy","oyd","yb","saw_space","saw_full","found","first_is_space","wrapped","`","e","o","q","s","u","v","{","|","}","~","pow","125"],"mappings":"CAAS,SAAUA;ICInB,SAAAC,EAAAC;QAGA,IAAAC,EAAAD,IACA,OAAAC,EAAAD,GAAAE;QAGA,IAAAC,IAAAF,EAAAD;YACAE;YACAE,IAAAJ;YACAK,SAAA;;QAUA,OANAP,EAAAE,GAAAM,KAAAH,EAAAD,SAAAC,KAAAD,SAAAH,IAGAI,EAAAE,UAAA,GAGAF,EAAAD;;IAvBA,IAAAD;IAqCA,OATAF,EAAAQ,IAAAT,GAGAC,EAAAS,IAAAP,GAGAF,EAAAU,IAAA,IAGAV,EAAA;;IDMMW,GACA,SAASP,GAAQD,GAASH;QAE/BI,EAAOD,UAAUH,EAAoB;;IAKhCY,GACA,SAASR,GAAQD;QErDvBC,EAAAD,UAAAU;;IF2DMC,KACA,SAASV,GAAQD,GAASH;QAE/B;SG9DA;YAGG,IAAIa,IAAUb,EAAQ,IAClBe,IAAIF,EAAQG,SAEZC,IAAQjB,EAAQ,MAChBkB,IAAqBlB,EAAQ;YAEjCa,EAAQM;YAUR,IAAIC,IAAeH,EAAMI;gBAAaC,aAAa;gBAC/CC,eAAe,SAAUC;oBACrB,OAAOX,EAAQY;wBACXC,SAAW;wBACXC,SAAWH,EAAKI,SAAS,aAAa;wBACtCC,WACI,uBACA;wBAEJC,WAAaN,EAAKO,QAAQ;wBAC1BC,MAAO;;;gBAIfC,iBAAiB;oBACb;wBACIC,OAAO;;;gBAIfC,oBAAoB;oBAChBtB,EAAQW,OAAOY,KAAK,SAAUZ;wBAC1Ba,KAAKC;4BAAWd,MAAMA;4BAAMC,SAASY,KAAKd,cAAcC;;sBAC1De,KAAKF;;gBAGXG,gBAAgB,SAAUN;oBACtBG,KAAKC;wBAAWJ,OAAOA;;;gBAG3BO,cAAc,SAAUC;oBACC,MAAjBA,EAAMC,WAGNN,KAAKO,MAAMnB,WACXY,KAAKO,MAAMnB,QAAQoB,SAEnBR,KAAKO,MAAMpB,QACXa,KAAKC;wBAAWb,SAASY,KAAKd,cAAcc,KAAKO,MAAMpB;wBAG3Da,KAAKS,KAAKC,YAAYC,QACtBX,KAAKS,KAAKG,SAASC;;gBAGvBC,QAAQ;oBACJ,IAAIF;oBAQJ,OANIA,IADAZ,KAAKO,MAAMnB,UACCR,EAAAmC,cAAClC,EAAmBmC;wBAASC,KAAI;wBACJ7B,SAASY,KAAKO,MAAMnB;wBACpBe,gBAAgBH,KAAKG;yBAEnDvB,EAAAmC,cHwDV,QACA,MACA,eGvDDnC,EAAAmC,cH2DC;wBG3DIG,WAAU;uBACXtC,EAAAmC,cH6DC;wBG7DIG,WAAU;uBACXtC,EAAAmC,cH+DC;wBG/DGG,WAAU;uBAAkBlB,KAAKO,MAAMV,QAC3CjB,EAAAmC,cHmEC;wBGnEOE,KAAI;wBACJC,WAAU;wBACVC,SAASnB,KAAKI;uBAAe1B,EAAE,YAE1CkC;;;YAMjBhC,EAAMkC,OAAOlC,EAAAmC,cAAChC,GAAY,OAAKqC,SAASC,eAAe,cAGvDD,SAASE,KAAKC,gBAAgB;;;IH0E5BC,KACA,SAASzD,GAAQD,GAASH;;;;;;SIhKhC,SAAA8D,GAAAC;YACA3D,EAAAD,UAAA4D;UAGC1B,MAAA;YAAoB;YAWrB,SAAA2B,EAAAC,GAAAC;gBACA;oBACAC,OAAAC;oBACAH;oBACAC;oBACApB;;;YAIA,SAAAuB,EAAAJ,GAAAC;gBACA;oBACAC,OAAAG;oBACAjE,IAAAkE;oBACAN;oBACAC;;;YAIA,SAAAM,EAAAP,GAAAC;gBACA;oBACAC,OAAAM;oBACApE,IAAAkE;oBACAN;oBACAC;oBACApB;;;YAIA,SAAA4B,EAAAC;gBACA;oBACAR,OAAAS;oBACAD;;;YAIA,SAAAE,EAAAC,GAAAC,GAAAC;gBACA,IAAAb,IAAAW,EAAAX,OAEAc,IAAA;gBAYA,OAXAd,IAEOA,MAAAC,KACPa,IAAAC,EAAAJ,GAAAC,GAAAC,KACOb,MAAAM,KACPQ,IAAAE,EAAAL,GAAAC,GAAAC,KACOb,MAAAG,KACPW,IAAAG,EAAAN,GAAAC,GAAAC,KACOb,MAAAS,OACPK,IAAAxB,SAAA4B,cAAAP,EAAAH,YARAM,IAAAxB,SAAA6B,eAAAR;gBAUAG;;YAGA,SAAAM,EAAAT,GAAAG;gBACA,IAAAd,IAAAW,EAAAX;gBAEAA,MAAAC,KACAoB,EAAAV,GAAAG,KACOd,MAAAM,KACPgB,EAAAX,GAAAG,KACOd,MAAAG,MACPoB,EAAAZ,GAAAG;;YAIA,SAAAC,EAAAS,GAAAZ,GAAAC;gBACA,IAAAf,IAAA0B,EAAA1B,MACAC,IAAAyB,EAAAzB,OAEAe,IAAA;gBAEA,UAAAhB,KAAAe,MAAAY,MACAX,IAAAxB,SAAAoC,gBAAAD,IAAA3B,IACAe,IAAAY,MAEAX,IAAAxB,SAAAL,cAAAa;gBAGA,IAAA6B,IAAA5B,EAAA4B,UAEAC,IAAAd,EAAAc;gBACAC,GAAAF,KACAG,EAAAH,GAAAI,GAAAH,KAEAG,EAAAJ,GAAAC;gBAGA,SAAAI,IAAA,GAAAC,IAAAL,EAAAM,QAA6CF,IAAAC,GAASD,KACtDlB,EAAAqB,YAAAzB,EAAAkB,EAAAI,IAAApB,GAAAC;gBAGA,IAAAuB,IAAAtC,EAAAuC,QAAA,qBAAAtC,EAAAuC;gBAKA,OAJAC,EAAAzB,GAAAf,GAAAqC,IAEAI,EAAAhB,EAAA7C,MAAA6C,EAAArC,KAAA2B,IAEAA;;YAGA,SAAAiB,EAAAU,GAAAd;gBACA,QAAAc,KAAA,oBAAAA,MACAd,IAAAO,UAAAO,EAAAzC,QAAAyC,IAAA,KAAAA;;YAIA,SAAAC,EAAAlB,GAAAmB,GAAA7B,GAAAF;gBACA,IAAAb,IAAAyB,EAAAzB,OACAD,IAAA0B,EAAA1B,MAEA8C,IAAAD,EAAA5C,OACA8C,IAAA9C,EAAA+C,2BAAA/C,EAAA+C,wBAAAC,QACAC,IAAAJ,EAAAjB,UACAC,IAAAd,EAAAc,WACAqB,IAAAnC,EAAAmC,YACApC,IAAAC,EAAAD,cAEAuB,IAAAtC,EAAAuC,QAAA,qBAAAtC,EAAAuC,IACAY,IAAAtB,EAAAM,QACAiB,IAAArC,EAAAc;gBAEAC,GAAAmB,KACAlB,EAAAkB,GAAAjB,GAAAoB,KAEApB,EAAAiB,GAAAG;gBAGA,IAAAC,IAAAD,EAAAjB;gBAEA,YAAAW,KAAAK,GAAA;oBAIA,SAHAG,IAAA,MACAC,IAAAC,MAAAH,IAEApB,IAAA,GAAyBA,IAAAkB,GAAkBlB,KAE3C,SADArB,IAAAiB,EAAAI,IACAwB,IAAA,GAA6BA,IAAAJ,GAAqBI,KAClD,KAAAF,EAAAE,IAAA;wBAGA,IAAAC,IAAAN,EAAAK;wBACA,IAAA7C,MAAA8C,GAAA;4BACAH,EAAAE;gCACA7C;gCACAG,MAAAmC,EAAAjB;+BAEAJ,EAAAI,KAAA;4BACA;;;oBAKA0B,GAAA,SAAA1B,IAAA,GAAgCA,IAAAkB,GAAkBlB,KAAA;wBAClD,IAAArB,IAAAiB,EAAAI;wBACA,aAAArB,GAAA;4BASA,SANAgD,IAAAhD,EAAAb,MACA8D,IAAAjD,EAAAiD,KACAC,IAAAlD,EAAAhC,MAEAmF,IAAAb,EAAAjB,IAEAwB,IAAA,GAA6BA,IAAAJ,GAAqBI,KAClD,KAAAF,EAAAE,IAAA;gCAGA,IAAAC,IAAAN,EAAAK;gCACA,IAAAC,EAAA3D,SAAA6D,KAAAF,EAAAG,aAAAH,EAAA9E,SAAAkF,GAAA;oCACAP,EAAAE;wCACA7C;wCACAG,MAAAgD;;oCAEA,SAAAJ;;;4BAIAL,MACAA,SAEAA,IAAAnB,UAAA4B,GAEA1C,EAAAT,GAAAmD;;;oBAGA,IAAAT,GACA,SAAArB,IAAA,GAAAC,IAAAoB,EAAAnB,QAAwDF,IAAAC,GAASD,KACjElB,EAAAiD,YAAAV,EAAArB;oBAIA,SAAAA,IAAA,GAAyBA,IAAAoB,GAAqBpB,KAAA;wBAC9C,IAAAyB,IAAAN,EAAAnB,IACAgC,IAAAV,EAAAtB;wBACA,IAAAgC,GAAA;4BACA,IAAArD,IAAAqD,EAAArD,OACAsD,IAAAD,EAAAlD;4BACA,IAAA2C,MAAA9C,GAAA;gCACA,IAAAX,IAAAyD,EAAAzD;gCACAA,IAIuBA,MAAAC,KACvBgE,IAAAvB,EAAA/B,GAAA8C,GAAAQ,GAAArD,KAC2BZ,MAAAM,KAC3B2D,IAAAC,EAAAvD,GAAA8C,GAAAQ,GAAArD,KAC2BZ,MAAAG,OAC3B8D,IAAAE,EAAAxD,GAAA8C,GAAAQ,GAAArD,MAPAqD,EAAAG,YAAAX;;4BAUA,IAAAY,IAAApB,EAAAjB;4BACAqC,MAAAJ,KACAnD,EAAAwD,aAAAL,GAAAI,KAAA;+BAEe;4BACf,IAAAJ,IAAAvD,EAAA+C,GAAA7C,GAAAC;4BACAC,EAAAwD,aAAAL,GAAAhB,EAAAjB,MAAA;;;oBAGAuC,EAAAzD,GAAAf,GAAA6C,GAAAR;uBACO;oBAEPmC,EAAAzD,GAAAf,GAAA6C,GAAAR;oBACA,SAAAJ,IAAA,GAAyBA,IAAAoB,GAAqBpB,KAC9ClB,EAAAqB,YAAAzB,EAAAyC,EAAAnB,IAAApB,GAAAC;;gBAQA,OAJAW,EAAArC,QAAAwD,EAAAxD,QACAqF,EAAAhD,EAAA7C,MAAA6C,EAAArC,MACAqD,EAAAG,EAAAhE,MAAAgE,EAAAxD,KAAA2B,KAEAA;;YAGA,SAAAO,EAAAG,GAAAV;gBAKA,SAJAf,IAAAyB,EAAAzB,OACA6B,IAAAd,EAAAc,WACAqB,IAAAnC,EAAAmC,YAEAjB,IAAA,GAAAC,IAAAL,EAAAM,QAA6CF,IAAAC,GAASD,KACtDZ,EAAAQ,EAAAI,IAAAiB,EAAAjB;gBAGAwC,EAAAhD,EAAA7C,MAAA6C,EAAArC,MAEA2B,EAAA2D,aAAA3D,EAAAc,YAAA;gBACA,SAAAgC,KAAA7D,GACAA,EAAA2E,eAAAd,MAAAe,GAAAC,KAAAhB,OACAA,IAAAiB,EAAAjB,IACAkB,GAAAlB,QAAA,MACA9C,EAAA8C,KAAA;;YAMA,SAAA3C,EAAA8D,GAAAnE,GAAAC;gBACA,IAAAF,IAAAqE,EAAAD,GAAAnE,IACAE,IAAAJ,EAAAC,GAAAC,GAAAC;gBAGA,OAFAC,EAAAmE,QAAAnE,EAAAmE,aACAnE,EAAAmE,MAAAF,EAAA7I,MAAAyE,GACAG;;YAEA,SAAAqD,EAAAY,GAAAG,GAAApE,GAAAF;gBACA,IAAA1E,IAAA6I,EAAA7I,IACAyE,IAAAG,EAAAmE,MAAA/I;uBACA4E,EAAAmE,MAAA/I;gBACA,IAAAuH,IAAAuB,EAAAE,GAAAtE,IACAuE,IAAAC,EAAAzE,GAAA8C,GAAA3C,GAAAF;gBAMA,OALAuE,EAAAF,QAAAE,EAAAF,aACAE,EAAAF,MAAAC,EAAAhJ,MAAAuH,GACA0B,MAAArE,KACAuE,EAAAF,EAAAF,OAAAnE,EAAAmE;gBAEAE;;YAEA,SAAA5D,EAAAwD,GAAAjE;gBACA,IAAA5E,IAAA6I,EAAA7I,IACAyE,IAAAG,EAAAmE,MAAA/I;uBACA4E,EAAAmE,MAAA/I,IACAkF,EAAAT,GAAAG;;YAGA,SAAAkE,EAAAD,GAAAnE;gBACA,IAAAhB,IAAAmF,EAAAjF,MACAC,IAAAgF,EAAAhF,OAEAuF,IAAAC,EAAA3E,GAAAhB,EAAA4F,eACA7E,IAAAf,EAAAG,GAAAuF;gBAIA,IAHA3E,OAAA3B,WACA2B,MAAA3B,WAEA,SAAA2B,YAAA,GACAA,IAAAJ,EAAA,kBAAAH,WACO,KAAAO,QAAAX,OACP,UAAAyF,MAAA,MAAA7F,EAAA8F,OAAA;gBAEA,OAAA/E;;YAGA,SAAAK,EAAA2E,GAAA/E,GAAAC;gBACA,IAAA+E,IAAAD,EAAA7F,MACAC,IAAA4F,EAAA5F,OACA7D,IAAAyJ,EAAAzJ,IAEAoJ,IAAAC,EAAA3E,GAAAgF,EAAAJ,eACAK,IAAA,IAAAD,EAAA7F,GAAAuF,IACAQ,IAAAD,EAAAE,UACAd,IAAAY,EAAAG;gBAEAf,EAAArE,mBACAkF,EAAAG,aAAA,GACAJ,EAAA9F,QAAA8F,EAAA9F,YACA8F,EAAAK,UAAAL,EAAAK,WAAAZ;gBACAO,EAAA7H,uBACA6H,EAAA7H,sBACA6H,EAAApH,QAAAqH,EAAAK;gBAEA,IAAAxF,IAAAyF,EAAAP,GAAAjF,IACAE,IAAAJ,EAAAC,KAAAuF,SAAArF;gBAQA,OAPAC,EAAAmE,QAAAnE,EAAAmE,aACAnE,EAAAmE,MAAA/I,KAAA2J,GACAZ,EAAAtE,WACAsE,EAAAnE,UACAmE,EAAAoB,aAAA;gBACAC,GAAAC,KAAAV,IACArD,EAAAmD,EAAAhH,MAAAgH,EAAAxG,KAAA0G,IACA/E;;YAEA,SAAAoD,EAAAyB,GAAAa,GAAA1F,GAAAF;gBACA,IAAA1E,IAAAyJ,EAAAzJ,IACA2J,IAAA/E,EAAAmE,MAAA/I,IACA4J,IAAAD,EAAAE,UACAd,IAAAY,EAAAG,QACAJ,IAAAY,EAAA1G,MACA2G,IAAAD,EAAAzG,OAEAuF,IAAAC,EAAA3E,GAAAgF,EAAAJ;gBAeA,cAdA1E,EAAAmE,MAAA/I,IACA4E,EAAAmE,MAAAuB,EAAAtK,MAAA2J,GACAZ,EAAArE,mBACAiF,EAAAa,8BACAZ,EAAAG,aAAA;gBACAJ,EAAAa,0BAAAD,GAAAnB,IACAQ,EAAAG,aAAA,IAEAH,EAAAa,WAAAF,GAAAnB,IAEAK,EAAAxG,QAAAqH,EAAArH,QACAqF,EAAAmB,EAAAhH,MAAAgH,EAAAxG;gBACAqD,EAAAgE,EAAA7H,MAAA6H,EAAArH,KAAA0G,KAEAZ,EAAAnE;;YAEA,SAAAQ,EAAAqE,GAAA7E;gBACA,IAAA5E,IAAAyJ,EAAAzJ,IACA2J,IAAA/E,EAAAmE,MAAA/I,IACA+I,IAAAY,EAAAG;uBACAlF,EAAAmE,MAAA/I,IACAsI,EAAAmB,EAAAhH,MAAAgH,EAAAxG,MACA0G,EAAA1H,WAAA0H,EAAAe,cAAAC,GACAhB,EAAAiB,wBACAjB,EAAAiB;gBAEA1F,EAAA6D,EAAAtE,OAAAG,WACA+E,EAAA1H,UACA8G,EAAAoB,aAAA,GACApB,EAAAnE,OAAAmE,EAAArE,gBAAAqE,EAAAtE,QAAAkF,EAAAlH,OAAAkH,EAAAK,UAAA;;YAGA,SAAAX,EAAAwB,GAAAvB;gBACA,IAAAU;gBACA,KAAAV,MAAAuB,GACA,OAAAb;gBAEA,SAAAtC,KAAA4B,GACAA,EAAAd,eAAAd,OACAsC,EAAAtC,KAAAmD,EAAAnD;gBAGA,OAAAsC;;YAGA,SAAAE,EAAAP,GAAAjF;gBACAjC,KAAAkH,EAAAlH;gBACA,IAAAgC,IAAAkF,EAAA7G;gBAEA,aAAA2B,YAAA,GACAA,IAAAJ,EAAA,kBAAAH,WACO,KAAAO,QAAAX,OACP,UAAAyF,MAAA,MAAAI,EAAAmB,YAAAtB,OAAA;gBAGA,IAAAqB,IAAApI,KAAA;gBAUA,OATAkH,EAAAoB,oBACAF,IAAAlB,EAAAoB,oBAGAF,IADAA,IACA1B,QAAuCzE,IAAAmG,KAEvCnG;gBAEAD,EAAAuF,UAAAa,GACApG;;YAKA,SAAAuG;gBACA,IAAAC,IAAAb,IACArE,IAAAkF,EAAAjF;gBACA,IAAAD,GAAA;oBAGAqE;oBAEA,KADA,IAAAtE,KAAA,GACAC,OAAA;wBACA,IAAA4D,IAAAsB,IAAAnF,IACA8D,IAAAD,EAAAE;wBACAF,EAAAuB,qBACAvB,EAAAuB,qBAEAtB,EAAAG,aAAA,GACAH,EAAAa;;;;YAIA,SAAAvB,EAAAzE,GAAA8C,GAAA3C,GAAAF;gBACA,IAAAuE,IAAArE;gBAEA,YAAA2C,GAEArC,EAAAT,GAAAG,IACAA,EAAAuG,WAAAtD,YAAAjD,SACO,IAAAH,EAAAb,SAAA2D,EAAA3D,QAAA2D,EAAAG,QAAAjD,EAAAiD,KAEPxC,EAAAT,GAAAG;gBACAqE,IAAAzE,EAAA+C,GAAA7C,GAAAE,EAAAD,eACAC,EAAAuG,WAAAC,aAAAnC,GAAArE,SACO,IAAAH,MAAA8C,GAAA;oBAEP,IAAAzD,IAAAW,EAAAX;oBACAA,MAAAC,KACAkF,IAAAzC,EAAA/B,GAAA8C,GAAA3C,GAAAF,KACWZ,MAAAM,KACX6E,IAAAjB,EAAAvD,GAAA8C,GAAA3C,GAAAF,KACWZ,MAAAG,OACXgF,IAAAhB,EAAAxD,GAAA8C,GAAA3C,GAAAF;;gBAIA,OAAAuE;;YAGA,SAAAoC;gBACA,OAAArJ;;YAGA,SAAAsE,EAAA7D,GAAA6I,GAAAC;gBACA9I,KAAA,QAAA6I,KAAAC,MAGAA,EAAAC,aAAAD,EAAAF,eAEAE,EAAAF,iBAEAI,EAAAH,KACAA,EAAAC,KAEA9I,EAAA6I,KAAAC;;YAIA,SAAAjD,EAAA7F,GAAA6I;gBACA7I,KAAA,QAAA6I,MAGAG,EAAAH,KACAA,EAAA,eAEA7I,EAAA6I;;YAgCA,SAAAI,EAAAC;gBACA3J,KAAA2J,cACA3J,KAAA4J,oBACA5J,KAAA6J,uBACA7J,KAAA+H,aAAA;gBACA/H,KAAAuI,YAAAvI,KAAA8J,cAAA,MACA9J,KAAA+J,iBAAA/J,KAAA+J,eAAA7J,KAAAF;;YA+EA,SAAA0H,EAAA7F,GAAAmG;gBACAhI,KAAA6H,WAAA,IAAA6B,EAAA1J,OACAA,KAAA8H;oBAAkBK,YAAA;mBAClBnI,KAAA6B,WACA7B,KAAAO,YACAP,KAAAS,WACAT,KAAAgI;;YA8EA,SAAAgC,EAAArC,GAAAY,GAAA0B,GAAAH,GAAAI;gBACA,IAAAC,KAAA;gBAIA,IAHAxC,EAAAwC,0BACAA,IAAAxC,EAAAwC,sBAAA5B,GAAA0B,GAAAH,KAEAK,OAAA,GAIA,OAHAxC,EAAA9F,QAAA0G;gBACAZ,EAAApH,QAAA0J,SACAtC,EAAAK,UAAA8B;gBAGA,IAAA/C,IAAAY,EAAAG;gBACAf,EAAAlF,QAAA0G,GACAxB,EAAAxG,QAAA0J,GACAlD,EAAAiB,UAAA8B,SACAnC,EAAAe,YAAAwB;;YAuBA,SAAAvD,EAAAjB;gBAEA,OADAA,IAAA,oBAAAA,IAAA,eAAAA,GACAA,EAAA0E;;YAKA,SAAAC,EAAAC,GAAAC,GAAAC;gBAGA,IAFAD,IAAA5D,EAAA4D,IAEA,MAAA3D,GAAA2D,IAEA,aADAD,EAAAC,KAAAC;gBAIA,IAAAjE,IAAA+D,EAAA/D,eAAA+D,EAAA/D;gBACAA,EAAAgE,KAAAC,GAEAC,GAAAF,OAEAnJ,SAAAsJ,iBAAAH,EAAAI,OAAA,IAAAC,IACAH,GAAAF,MAAA;gBAGA,IAAAf,IAAAc,EAAAd;gBAEA,eAAAe,KAAA,YAAAf,KAAA,eAAAA,KACAa,EAAAC,GAAA,WAAAE;;YAIA,SAAAK,EAAAP,GAAAC;gBAEA,IADAA,IAAA5D,EAAA4D,IACA,MAAA3D,GAAA2D,IAEA,aADAD,EAAAC,KAAA;gBAIA,IAAAhE,IAAA+D,EAAA/D,eAAA+D,EAAA/D;uBACAA,EAAAgE;gBAEA,IAAAf,IAAAc,EAAAd;gBAEA,eAAAe,KAAA,YAAAf,KAAA,eAAAA,YACAjD,EAAA;;YAIA,SAAAqE,EAAAvK;gBACA,IAAAyK,IAAAzK,EAAAyK,QACAlJ,IAAAvB,EAAAuB,MAEA2I,IAAA,OAAA3I,GACAmJ,IAAAC;gBAEA,KADAC,GAAAlD,aAAA,GACA+C,KAAA;oBACA,IAAAI,IAAAJ,GACAvE,IAAA2E,EAAA3E,YAEAiE,IAAAjE,OAAAgE;oBACA,IAAAC,GAAA;wBASA,IALAO,MACAA,IAAAI,EAAA9K,KAEA0K,EAAAK,gBAAAN,GACAN,EAAAtM,KAAA4M,GAAAC,IACAA,EAAAM,eACA;wBAEAP,MAAA3B;2BAXA2B,MAAA3B;;gBAaA8B,GAAAlD,aAAA,GACAkD,GAAAK;;YAGA,SAAAH,EAAAI;gBACA,IAAAR,QACAS,IAAA;oBACA,OAAAT,EAAAM,iBAAA;;gBAEAN,EAAAQ;gBACA,SAAA7F,KAAA6F,GACA,qBAAAA,EAAA7F,KACAqF,EAAArF,KAAA6F,EAAA7F,KACK,sBAAAA,KAAA,+BAAAA,IACLqF,EAAArF,KAAA8F,IAEAT,EAAArF,KAAA6F,EAAA7F,GAAAxF,KAAAqL;gBAGA,OAAAR;;YAGA,SAAAU,EAAAC,GAAAC;gBACA,SAAAC,KAAAD,GACAA,EAAAnF,eAAAoF,MACAC,EAAAH,GAAAE,GAAAD,EAAAC;;YAKA,SAAAE,EAAAJ,GAAAC;gBACA,SAAAC,KAAAD,GACAA,EAAAnF,eAAAoF,OACAF,EAAAE,KAAA;;YAKA,SAAAG,EAAAL,GAAAM,GAAAC;gBACA,IAAAD,MAAAC,GAAA;oBAGA,KAAAA,KAAAD,GAEA,YADAF,EAAAJ,GAAAM;oBAEO,IAAAC,MAAAD,GAEP,YADAP,EAAAC,GAAAO;oBAIA,IAAAC;oBACA,SAAAxG,KAAAsG,GACAA,EAAAxF,eAAAd,OACAwG,EAAAxG,MAAA,GACAsG,EAAAtG,OAAAuG,EAAAvG,MACAmG,EAAAH,GAAAhG,GAAAuG,EAAAvG;oBAIA,SAAAA,KAAAuG,GACAA,EAAAzF,eAAAd,MAAAwG,EAAAxG,QAAA,KACAsG,EAAAtG,OAAAuG,EAAAvG,MACAmG,EAAAH,GAAAhG,GAAAuG,EAAAvG;;;YAgDA,SAAAyG,EAAAC,GAAA1G;gBACA,OAAA0G,IAAA1G,EAAA2G,OAAA,GAAAC,gBAAA5G,EAAA6G,UAAA;;YAYA,SAAAV,EAAAH,GAAAE,GAAAY;gBAEA,QAAAC,GAAAb,MAAAc,GAAAhG,KAAA8F,WACAd,EAAAE,KAAAY,IAAA,SAIA,YAAAZ,MACAA,IAAA;gBAGA,QAAAY,KAAA,oBAAAA,MACAA,IAAA,WAGAd,EAAAE,KAAAY;;YAsfA,SAAAG,EAAAC;gBACA,IAEA/K,IAAA+K,EAAA/K,OAGAgL,IAAAD,EAAAC,QAGAC,IAAAF,EAAAE,UAGAC,IAAAH,EAAAG;gBAEA,SAAAC,KAAAnL,GACA,IAAAA,EAAA2E,eAAAwG,IAAA;oBAGA,IAAAC,IAAApL,EAAAmL;oBACAE,GAAAF;wBACAG,eAAAL,EAAAtG,eAAAwG,KAAAF,EAAAE,OAAA5C;wBACAgD,cAAAL,EAAAvG,eAAAwG,KAAAD,EAAAC;wBACAK,oBAAAR,EAAArG,eAAAwG,KAAAH,EAAAG,KAAA;wBACAM,iBAAAC,EAAAN,GAAAO;wBACAC,iBAAAF,EAAAN,GAAAS;wBACAC,iBAAAJ,EAAAN,GAAAW;wBACAC,yBAAAN,EAAAN,GAAAa;wBACAC,2BAAAR,EAAAN,GAAAe;;;;YAKA,SAAAT,EAAAU,GAAAC;gBACA,QAAAD,IAAAC;;YAWA,SAAAC,EAAAvL,GAAA4E,GAAAyG;gBACA,IAAAG,IAAAlB,GAAA1G,eAAAgB,MAAA0F,GAAA1F;gBACA,IAAA4G,GAEA,YAAAH,KAAAG,EAAAX,oBAAAQ,KAAAG,EAAAT,mBAAAU,MAAAJ,MAAAG,EAAAP,2BAAAI,IAAA,KAAAG,EAAAL,6BAAAE,OAAA,GACAK,EAAA1L,GAAA4E,SACW,IAAA4G,EAAAd,iBACX1K,EAAAwL,EAAAhB,gBAAAa,QACW;oBACX,IAAAd,IAAAiB,EAAAjB,eACAoB,IAAAH,EAAAf;oBAIAkB,IACA3L,EAAA4L,eAAAD,GAAApB,GAAA,KAAAc,KACeG,EAAAX,mBAAAW,EAAAL,6BAAAE,OAAA,IACfrL,EAAA6L,aAAAtB,GAAA,MAEAvK,EAAA6L,aAAAtB,GAAA,KAAAc;uBAGOS,GAAAlH,MAAAmH,GAAAjI,KAAAc,OACP,QAAAyG,IACArL,EAAArB,gBAAAiG,KAEA5E,EAAA6L,aAAAjH,GAAA,KAAAyG;;YAYA,SAAAK,EAAA1L,GAAA4E;gBACA,IAAA4G,IAAAlB,GAAA1G,eAAAgB,MAAA0F,GAAA1F;gBACA4G,IACAA,EAAAd,kBACA1K,EAAAwL,EAAAhB,iBAAAgB,EAAAX,mBAAA,KAEA7K,EAAArB,gBAAA6M,EAAAjB,iBAEOuB,GAAAlH,MACP5E,EAAArB,gBAAAiG;;YAIA,SAAAiC,EAAAmF;gBACA,4BAAAA;;YAKA,SAAAjG;YAEA,SAAAkG,EAAAD;gBACA,OAAAA;;YAGA,SAAAE,EAAAC,GAAAC;gBACA;oBAEA,OADAD,EAAAE,MAAAjP,MAAAkP,YACAF,EAAAC,MAAAjP,MAAAkP;;;YAIA,SAAAtL,EAAAuL,GAAAC,GAAAC;gBAIA,KAHA,IAAAtL,IAAAoL,EAAAnL,QACAF,KAAA,GAEAC,OAAA;oBACA,IAAAuL,IAAAH,IAAArL;oBACAH,GAAA2L,KACA1L,EAAA0L,GAAAF,GAAAC,KAEAD,EAAAE,GAAAD;;;YAKA,SAAAE,EAAAJ,GAAAC;gBACA,SAAAtL,IAAA,GAAAC,IAAAoL,EAAAnL,QAAwCF,IAAAC,GAASD,KACjDsL,EAAAD,EAAArL;;YAIA,SAAAqD,EAAAqI;gBACA,IAAAC,GAAAC;gBACA,KAAAA,IAAA,GAAyBA,IAAAR,UAAAlL,QAA8B0L,KAAA;oBACvDD,IAAAP,UAAAQ;;gBAKA,IAAAC,IAAAC,OAAAH;gBACA,KAAAE,GACA,OAAAH;gBAIA,KAFA,IAAAK,IAAAD,OAAAC,KAAAF,IACA7L,IAAA+L,EAAA7L,QACAF,OACAkH,WAAA2E,EAAAE,EAAA/L,QACA0L,EAAAK,EAAA/L,MAAA6L,EAAAE,EAAA/L;gBAGA,OAAA0L;;YAKA,SAAAtN;gBACA,SAAA4N;;YAIA,SAAAzL,EAAAiG,GAAAzI,GAAAqC;gBACA,SAAAwB,KAAA7D,GACA,IAAAA,EAAA2E,eAAAd,MAAA,eAAAA,GAAA;oBAGA,IAAAuI,IAAApM,EAAA6D;oBACAe,GAAAC,KAAAhB,KACA2E,EAAAC,GAAA5E,GAAAuI,KACW,YAAAvI,IACX+F,EAAAnB,EAAA0B,OAAAiC,KACW,8BAAAvI,IACXuI,KAAA,QAAAA,EAAApJ,WAAAyF,EAAAyF,YAAA9B,EAAApJ,UACWX,IACX,QAAA+J,IACA3D,EAAA/I,gBAAAmE,KAEA4E,EAAAmE,aAAA/I,GAAA,KAAAuI,KAGAE,EAAA7D,GAAA5E,GAAAuI;;;YAKA,SAAA+B,EAAAtK,GAAAuK,GAAAhC,GAAA3D,GAAApG;gBAIA,IAHA,YAAAwB,KAAA,cAAAA,MACAuK,IAAA3F,EAAA5E,KAEAuI,MAAAgC,GAAA;oBAGA,IAAAjF,WAAAiD,GAYA,aAXAxH,GAAAC,KAAAhB,KACAmF,EAAAP,GAAA5E,KACW,YAAAA,IACXoG,EAAAxB,EAAA0B,OAAAiE,KACW,8BAAAvK,IACX4E,EAAAyF,YAAA,KACW7L,IACXoG,EAAA/I,gBAAAmE,KAEA4I,EAAAhE,GAAA5E;oBAIA,IAAAe,GAAAC,KAAAhB,IAEA2E,EAAAC,GAAA5E,GAAAuI,SACO,gBAAAvI,GACPqG,EAAAzB,EAAA0B,OAAAiE,GAAAhC,SACO,kCAAAvI,GAAA;wBACP,IAAAf,IAAAsL,OAAApL,QACAqL,IAAAjC,OAAApJ;wBACA,QAAAqL,WAAAvL,MACA2F,EAAAyF,YAAAG;2BAEOhM,IACP,QAAA+J,IACA3D,EAAA/I,gBAAAmE,KAEA4E,EAAAmE,aAAA/I,GAAA,KAAAuI,KAGAE,EAAA7D,GAAA5E,GAAAuI;;;YAIA,SAAA5H,EAAAiE,GAAAzI,GAAA6C,GAAAR;gBACA,IAAAgI;oBAAoBzI,WAAA;;gBACpB,SAAAiC,KAAA7D,GACAA,EAAA2E,eAAAd,MAAA,eAAAA,MACAwG,EAAAxG,MAAA,GACAsK,EAAAtK,GAAA7D,EAAA6D,IAAAhB,EAAAgB,IAAA4E,GAAApG;gBAGA,SAAAwB,KAAAhB,GACAA,EAAA8B,eAAAd,MAAAwG,EAAAxG,QAAA,KACAsK,EAAAtK,GAAA7D,EAAA6D,IAAAhB,EAAAgB,IAAA4E,GAAApG;;YAWA,SAAAiM,EAAA1N,GAAA2N,GAAAlG,GAAAxH;gBACA,KAAAD,EAAAX,OACA,UAAAyF,MAAA,mBAAA9E,IAAA;gBAEA,IAAAzE,IAAAoS,EAAAC,QAAAD,EAAAC,MAAAnO,MACAoO,IAAAC,GAAAvS;gBAIA,IAAAsS,GAUA,aATAA,OAAA,IACAC,GAAAvS,KAAAsS,MAAA7N,GAAAyH,GAAAxH,OAEA4N,EAAA,KAAA7N,GACA6N,EAAA,KAAA5N,GACAwH,MACAoG,EAAA,KAAAA,EAAA,KAAAxB,EAAAwB,EAAA,IAAApG;gBAMAqG,GAAAvS,MAAA;gBACA,IAAAwS,IAAA,MACAC,IAAA;gBACA,IAAAD,IAAAE,GAAA1S,IACAyS,IAAAvJ,EAAAsJ,GAAA/N,GAAA2N,EAAAO,YAAAjO,SACI;oBACJ+N,IAAAjO,EAAAC,GAAAC,GAAA0N,EAAAzN;oBAEA,KADA,IAAAiD,IAAA,MACAA,IAAAwK,EAAAQ,aACAR,EAAAvK,YAAAD;oBAEAwK,EAAAnM,YAAAwM;;gBAEAC,GAAA1S,KAAAyE;gBACA,IAAAsF,IAAAkD,GAAAlD;gBACAkD,GAAAlD,aAAA,GACAiB,KACAsH,IAAAC,GAAAvS,WACAuS,GAAAvS;gBAEA,IAAA6S,IAAA;gBAkBA,OAjBAlN,GAAA2M,KACAO,IAAAV,EAAAG,EAAA,IAAAF,GAAAE,EAAA,IAAAA,EAAA,MACI7N,EAAAX,UAAAC,KACJ8O,IAAAJ,IACIhO,EAAAX,UAAAM,OACJyO,IAAAJ,EAAA1J,MAAAtE,EAAAzE;gBAGA+J,MACAkD,GAAAlD,aAAA,GACAkD,GAAAK,gBAGApB,KACAA,EAAAhM,KAAA2S,IAGAA;;YAGA,SAAA/P,EAAA2B,GAAA2N,GAAAlG;gBACA,OAAAiG,EAAA1N,GAAA2N,GAAAlG;;YAGA,SAAA4G,GAAAC,GAAAC,GAAAZ,GAAAlG;gBACA,IAAAlC,IAAA+I,EAAAtO,QAAAsO,EAAAtO,MAAAuF,UAAA+I,EAAAjJ,OAAApF;gBACA,OAAAyN,EAAAa,GAAAZ,GAAAlG,GAAAlC;;YAGA,SAAAiJ,GAAAb;gBACA,KAAAA,EAAA5G,UACA,UAAAjC,MAAA;gBAEA,IAAAvJ,IAAAoS,EAAAC,KACA5N,IAAA;gBACA,UAAAA,IAAAiO,GAAA1S,QACAkF,EAAAT,GAAA2N,EAAAO,aACAP,EAAAvK,YAAAuK,EAAAO,oBACAD,GAAA1S;iBACA;;YAKA,SAAAkT,GAAAtO;gBACA,YAAAA,GACA;gBAEA,IAAAA,EAAA4G,UACA,OAAA5G;gBAEA,IAAA+E,IAAA/E;gBAEA,IAAA+E,EAAA0B,cAAA1B,EAAAG,OAAAK,WACA,OAAAR,EAAA0B;gBAEA,UAAA9B,MAAA;;YAUA,SAAA4J,GAAAvC;gBACA,eAAAA,SAAA9M;;YAGA,SAAAsP,GAAAC,GAAAxP;gBAOA,SANAD,IAAAyP,EAAAzP,MACA8D,IAAA2L,EAAA3L,KACAzE,IAAAoQ,EAAApQ,KAEAyD,IAAAyC;oBAAiCzB;oBAAAzE;mBAAqBoQ,EAAAxP,YAEtDyP,IAAApC,UAAAlL,QAAAP,IAAA4B,MAAAiM,IAAA,IAAAA,IAAA,QAAAC,IAAA,GAAyFA,IAAAD,GAAaC,KACtG9N,EAAA8N,IAAA,KAAArC,UAAAqC;gBAGA,IAAA9O,IAAA1B,GAAAkO,MAAAjE,UAAApJ,GAAA8C,IAAA8M,OAAA/N;gBAIA,OAHAhB,EAAAxB,QAAAoQ,EAAApQ,QACAwB,EAAAhC,OAAA4Q,EAAA5Q,OAEAgC;;YAGA,SAAAgP,GAAA7P;gBACA,IAAAF,IAAA;oBACA,SAAAgQ,IAAAxC,UAAAlL,QAAA2N,IAAAtM,MAAAqM,IAAAE,IAAA,GAAsEA,IAAAF,GAAeE,KACrFD,EAAAC,KAAA1C,UAAA0C;oBAGA,OAAA7Q,GAAAkO,MAAAjE,UAAApJ,IAAA4P,OAAAG;;gBAGA,OADAjQ,EAAAE,UACAF;;YAGA,SAAAX,GAAAa,GAAAC,GAAA4B;gBACA,IAAAoO,IAAA,MACAC,WAAAlQ;gBAEA,iBAAAkQ,GACAD,IAAAlQ,QACI;oBAAA,mBAAAmQ,GAOJ,UAAAvK,MAAA,0CAAA3F,IAAA;oBALAiQ,IADAjQ,EAAAmQ,aAAA,qBAAAnQ,EAAAmQ,UAAArJ,cACAvG,IAEAH;;gBAMA,IAAA0D,IAAA,MACAzE,IAAA,MACA+Q,QACAC,IAAA;gBACA,YAAApQ,GACA,SAAAqQ,KAAArQ,GACAA,EAAA2E,eAAA0L,OAGA,UAAAA,IACAlH,WAAAnJ,EAAA6D,QACAA,IAAA,KAAA7D,EAAA6D,OAEM,UAAAwM,IACNlH,WAAAnJ,EAAAZ,QACAA,IAAAY,EAAAZ,OAEM+J,YAAAiH,IAAApQ,EAAAqQ,QACNF,EAAAE,KAAAD;gBAKA,IAAAE,IAAAvQ,EAAAuQ;gBAEA,IAAAA,GACA,SAAAD,KAAAC,GACAnH,WAAAgH,EAAAE,OACAF,EAAAE,KAAAC,EAAAD;gBAKA,IAAAE,IAAAlD,UAAAlL,QACAqO,IAAA5O;gBAEA,IAAA2O,IAAA;oBACAC,IAAAhN,MAAA+M,IAAA;oBACA,SAAAtO,IAAA,GAAmBA,IAAAsO,GAAatO,KAChCuO,EAAAvO,IAAA,KAAAoL,UAAApL;;gBAIAkH,WAAAqH,MACAL,EAAAvO,WAAA4O;gBAGA,IAAA5P,IAAAoP,EAAAjQ,GAAAoQ;gBAGA,OAFAvP,EAAAiD,SACAjD,EAAAxB,SACAwB;;YA+BA,SAAA6P,GAAA7O;gBACA,IAAA0N,GAAA1N,IACA,OAAAA;gBAEA,UAAA8D,MAAA;;YAGA,SAAAgL,GAAA9O,GAAA2L,GAAApH;gBACA,YAAAvE,GACA,OAAAA;gBAEA,IAAA+O,IAAA;gBACA7O,GAAAF,KACAG,EAAAH,GAAA,SAAAc;oBACA6K,EAAAlR,KAAA8J,GAAAzD,GAAAiO;qBAGApD,EAAAlR,KAAA8J,GAAAvE,GAAA+O;;YAIA,SAAAC,GAAAhP,GAAA2L,GAAApH;gBACA,YAAAvE,GACA,OAAAA;gBAEA,IAAAiP,QACAxG;gBACAqG,GAAA9O,GAAA,SAAAc,GAAAiO;oBACA,IAAAG;oBACAA,EAAApO,QAAA6K,EAAAlR,KAAA8J,GAAAzD,GAAAiO,MAAAjO,GACAoO,EAAAC,UAAAD,EAAApO;oBACA,IAAAmB,IAAAiN,EAAAjN,MAAAmN,GAAAtO,GAAAiO;oBACAtG,EAAA1F,eAAAd,KACAwG,EAAAxG,MAAA,IAEAwG,EAAAxG,KAAA,GAEAiN,EAAAH,QAAAtG,EAAAxG,IACAgN,EAAArK,KAAAsK;;gBAEA,IAAA9B;gBAuBA,OAtBAtB,EAAAmD,GAAA,SAAAI;oBACA,IAAAvO,IAAAuO,EAAAvO,OACAmB,IAAAoN,EAAApN,KACA8M,IAAAM,EAAAN,OACAI,IAAAE,EAAAF;oBAEA,YAAArO,KAAA,oBAAAA,GAAA;wBAGA,KAAA4M,GAAA5M,MAAA,QAAAmB,GAEA,YADAmL,EAAAxI,KAAA9D;wBAGA,MAAA2H,EAAAxG,OACAA,KAAA,MAAA8M,IAEAI,MACAlN,IAAAqN,GAAAxO,EAAAmB,OAAA,YAAAA,IAEAnB,IAAA6M,GAAA7M;4BAAiCmB;4BACjCmL,EAAAxI,KAAA9D;;oBAEAsM;;YAGA,SAAAmC,GAAAvP;gBACA,IAAAuP,IAAA;gBAIA,OAHAT,GAAA9O,GAAA;oBACAuP;oBAEAA;;YAGA,SAAAC,GAAAxP;gBACA,OAAAgP,GAAAhP,GAAAoL;;YAGA,SAAAgE,GAAAtO,GAAAiO;gBACA,IAAA9M,IAAAsF;gBAMA,OAJAtF,IADAyL,GAAA5M,MAAA,mBAAAA,EAAAmB,MACA,OAAAnB,EAAAmB,MAEA,MAAA8M,EAAAU,SAAA;;YAMA,SAAAH,GAAAI;gBACA,aAAAA,GAAAC,QAAAC,IAAA;;YAWA,SAAAC,GAAAC,GAAAnE;gBACAG,EAAAgE,GAAA,SAAAC;oBACAA,MACA7P,GAAA6P,EAAAD,WACAD,GAAAE,EAAAD,QAAAnE,IAEAA,EAAAoE;;;YAKA,SAAAC,GAAAC,GAAAF;gBACA,SAAA9N,KAAA8N,GACA,IAAAA,EAAAhN,eAAAd,IAAA;oBAGA,IAAAuI,IAAAuF,EAAA9N;oBACA,0BAAAA,GAAA;wBAIA,IAAAiO,IAAAD,EAAAhO;wBACA+D,EAAAkK,MAAAlK,EAAAwE,KACAyF,EAAAhO,KAAAoJ,EAAA6E,GAAA1F,KAEAyF,EAAAhO,KAAAuI;2BAPAyF,EAAAE,kBAAAvL,KAAA4F;;;YAYA,SAAA4F,GAAAnM,GAAA8L;gBACArM,EAAAO,EAAAoM,WAAAN,EAAAM,YACA3M,EAAAO,EAAAJ,cAAAkM,EAAAlM,eACAH,EAAAO,GAAA8L,EAAAO;gBACAtK,EAAA+J,EAAAQ,oBACA7M,EAAAO,EAAAyK,cAAAqB,EAAAQ;;YAIA,SAAAC,GAAArF,GAAAsF;gBACA,SAAAxO,KAAAwO,GACAA,EAAA1N,eAAAd,MACA+D,EAAAyK,EAAAxO,QACAkJ,EAAAlJ,KAAAwO,EAAAxO,GAAAxF,KAAA0O;;YASA,SAAAhP;gBACA,IAAAuU,IAAAnU,MAEAO,QACAN,IAAAD,KAAAC;gBAQA,OAPAD,KAAAC,WAAAmU,IACA7E,EAAAvP,KAAA4T,mBAAA,SAAAhU;oBACA6J,EAAA7J,MACAuH,EAAA5G,GAAAX,EAAA1B,KAAAiW;oBAGAnU,KAAAC,cACAM;;YAEA,SAAAvB,GAAAqV;gBAOA,SAAAC,EAAAzS,GAAAmG;oBACAN,EAAAxJ,KAAA8B,MAAA6B,GAAAmG,IACAhI,KAAA8I,cAAAwL,GACAD,EAAAE,cAAA,KAAAN,GAAAjU,MAAAsU,EAAAvC;oBACA/R,KAAAO,QAAAP,KAAAJ,qBAAAI,KAAAO;;gBAVA,KAAAkJ,EAAA4K,EAAAvT,SACA,UAAAyG,MAAA;gBAEA,IAAAiN,IAAAH,EAAAd,cACAA,IAAAiB,EAAAhD,OAAA6C;gBACAA,EAAAd,SAAA,MAOAe,EAAArV,cAAAoV,EAAApV,aACAqV,EAAAhN,mBACAgN,EAAAR;gBACAQ,EAAAnC;gBACA,IAAAuB,IAAAY,EAAAvC,YAAA,IAAAqC;gBAQA,OAPAV,EAAAE,wBACAN,GAAAC,GAAA,SAAAC;oBACAC,GAAAC,GAAAF,IACAK,GAAAS,GAAAd;oBAEAE,EAAA9T,sBACAyU,EAAAd,SAAAiB,GACAF;;YA7kEA,IAAA/Q,KAAA,8BACA8M,KAAA,UACAtO,KAAA,GACAE,KAAA,GACAG,KAAA,GACAG,KAAA,GAEA9B,KAAA,MAwZA2H,SA8EA6C;gBACAwJ;gBACA1M,YAAA;gBACA2M,KAAA,SAAA9M;oBACA5H,KAAAyU,SAAApM,KAAAT;;gBAEA0D,aAAA;oBACA,KAAAtL,KAAA+H,WAAA;wBAGA/H,KAAA+H,aAAA;wBAWA,KAHA,IAAA0M,IAAAzU,KAAAyU,UAEA7M,IAAAoD,QACApD,IAAA6M,EAAAE,SACA/M,EAAAgN;wBAEA5U,KAAA+H,aAAA;;;;YAaA2B,EAAAqI;gBACAtJ,YAAA,SAAAF,GAAAuB;oBACA9J,KAAAuI,eACAvI,KAAA8J,iBAEAvB,MAAA0C,GAAAlD,YAAA/H,KAAA4U,oBAAA3J,GAAAyJ,IAAA1U;;gBAEA4U,iBAAA;oBACA,IAAAjL,IAAA3J,KAAA2J,UACAC,IAAA5J,KAAA4J,eACArB,IAAAvI,KAAAuI,WACAuB,IAAA9J,KAAA8J;qBAEAvB,KAAAqB,EAAA5F,SAAA,OACAuE,SAAAoB,EAAA9H,OACAiI,SAAAH,EAAA3B,SACAhI,KAAAuI,YAAAvI,KAAA8J,cAAA;oBAEAE,EAAAL,GAAApB,GAAAvI,KAAAiI,YAAA6B,GAAA9J,KAAA+J;;gBAGA8K,UAAA,SAAA5K;oBACAA,MACAjK,KAAA4J,cAAAvB,KAAA4B,IACAjK,KAAA+H,aACA/H,KAAAyI;;gBAIAqM,cAAA,SAAA7K;oBACA,IAAAL,IAAA5J,KAAA4J;oBAEAA,EAAA+K,OAEA/K,EAAAvB,OAAA4B;;gBAEAhC,UAAA;oBACA,IAAA0B,IAAA3J,KAAA2J,UACAC,IAAA5J,KAAA4J,eACArJ,IAAAoJ,EAAApJ,OACAsB,IAAA8H,EAAA9H;oBAiBA,OAfA+H,EAAA5F,WACAzD,IAAA4G,MAAsB5G,IACtBgP,EAAA3F,GAAA,SAAAK;wBAEA,OAAAtG,GAAAsG,WACA1J,IAAA4G,MAAwB8C,EAAA,QAGxBR,EAAAQ,OACAA,MAAA/L,KAAAyL,GAAApJ,GAAAsB,UAEAsF,EAAA5G,GAAA0J;wBAEAL,EAAA5F,SAAA,IAEAzD;;gBAEAwJ,gBAAA;oBACA,IAAAF,IAAA7J,KAAA6J,kBACAF,IAAA3J,KAAA2J;oBAEAE,EAAA7F,SAAA,MACAhE,KAAA6J,uBACA0F,EAAA1F,GAAA,SAAAK;wBACA,OAAAA,EAAAhM,KAAAyL;;;gBAIAoL,aAAA,SAAA7K;oBACAT,EAAAS,MACAlK,KAAA6J,iBAAAxB,KAAA6B;;eAaAxC,EAAAqK;gBACAjJ,aAAApB;gBAWAgB,aAAA,SAAAwB;oBACA,IAAArC,IAAA7H,KAAA6H,UACAC,IAAA9H,KAAA8H,QACAjG,IAAA7B,KAAA6B,OACAtB,IAAAP,KAAAO,OACAyH,IAAAhI,KAAAgI;oBAEA,KAAAH,EAAAE,aAAAD,EAAAK,WAAA;wBAGA,IAAAI,IAAAT,EAAAjG,YACAoI,IAAAnC,EAAAvH,YACAuJ,IAAAhC,EAAAE,eACAtF,IAAAoF,EAAApF,eACAE,IAAAkF,EAAAlF,MACAH,IAAAqF,EAAArF;wBACAqF,EAAAjG,QAAAiG,EAAAvH,QAAAuH,EAAAE,UAAA,MACAH,EAAAE,aAAA,GACA/H,KAAAgV,uBACAhV,KAAAgV,oBAAAzM,GAAA0B,GAAAH;wBAEA9J,KAAAO,QAAA0J,GACAjK,KAAA6B,QAAA0G,GACAvI,KAAAgI,UAAA8B;wBACA,IAAAvE,IAAA2C,EAAAlI,MAAA0C,IACAuE,IAAAC,EAAAzE,GAAA8C,GAAA3C,GAAA2C,EAAAyC;wBACAf,MAAArE,MACAqE,EAAAF,QAAAE,EAAAF,aACAI,EAAAF,EAAAF,OAAAnE,EAAAmE,SAEAe,EAAArF,QAAA8C,GACAuC,EAAAlF,OAAAqE;wBACA+B,KACAhJ,KAAAiV,sBACAjV,KAAAiV,mBAAApT,GAAAtB,GAAAyH,IAEAkC,KACAA,EAAAhM,KAAA8B;wBAEA6H,EAAAE,aAAA,GACAF,EAAAY;;;gBAEAxI,UAAA,SAAAgK,GAAAC;oBACA,IAAArC,IAAA7H,KAAA6H;oBAEAA,EAAAkN,YAAA7K,IACArC,EAAAgN,SAAA5K;;gBAEA6K,cAAA,SAAA7K,GAAAC;oBACA,IAAArC,IAAA7H,KAAA6H;oBAEAA,EAAAkN,YAAA7K,IACArC,EAAAiN,aAAA7K;;gBAEAZ,YAAA;oBACA,IAAAzG,IAAA5C,KAAA8H,OAAAlF;oBACA,OAAAA,KAAA,eAAAA,EAAA4G,WAAA,OAAA5G;;gBAEAuF,WAAA;oBACA,OAAAnI,KAAA8H,OAAAK;;;YAuBA,IAAAvB;gBACAsO,cAAA;gBACAC,cAAA;gBACAC,QAAA;gBACAC,UAAA;gBACAC,UAAA;gBACAC,SAAA;gBACAC,QAAA;gBACAC,WAAA;gBACAC,gBAAA;gBACAC,QAAA;gBACAC,YAAA;gBACAC,aAAA;gBACAC,YAAA;gBACAC,eAAA;gBACAC,YAAA;gBACAC,eAAA;eAQAxL,SA4IAgC;gBACAyJ,yBAAA;gBACAC,mBAAA;gBACAC,kBAAA;gBACAC,kBAAA;gBACAC,SAAA;gBACAC,cAAA;gBACAC,iBAAA;gBACAC,aAAA;gBACAC,MAAA;gBACAC,UAAA;gBACAC,cAAA;gBACAC,YAAA;gBACAC,cAAA;gBACAC,WAAA;gBACAC,SAAA;gBACAC,YAAA;gBACAC,YAAA;gBACAC,WAAA;gBACAC,YAAA;gBACAC,SAAA;gBACAC,OAAA;gBACAC,SAAA;gBACAC,SAAA;gBACAC,QAAA;gBACAC,QAAA;gBACAC,MAAA;gBAGAC,aAAA;gBACAC,cAAA;gBACAC,aAAA;gBACAC,iBAAA;gBACAC,kBAAA;gBACAC,kBAAA;gBACAC,eAAA;gBACAC,aAAA;eAOAC,OAAA;YAEAxI,OAAAC,KAAApD,IAAA8F,QAAA,SAAA8F;gBACAD,GAAA7F,QAAA,SAAAnG;oBACAK,GAAAN,EAAAC,GAAAiM,MAAA;;;YAIA,IAAA3L,KAAA,mBAmBA4L,KAAA,iLACAC,KAAAD,KAAA,8CAEA3J,KAAA,IAAA6J,OAAA,OAAAF,KAAA,OAAAC,KAAA,QAEA7J,KAAA8J,OAAAzG,UAAArL,KAAAxG,KAAA,IAAAsY,OAAA,mBAAAD,KAAA,SAEArL,SAMAM,KAAA,GACAE,KAAA,GACAE,KAAA,GACAE,KAAA,IACAE,KAAA,IAGAyK;gBACA5W;oBAIA6W,QAAA;oBACAC,eAAA;oBACAC,WAAA;oBACAC,QAAA;oBACAC,iBAAApL;oBACAqL,mBAAA;oBACAC,KAAA;oBACAC,OAAAvL;oBACAwL,cAAA;oBACAC,WAAAzL;oBACA0L,UAAA1L;oBACA2L,SAAA3L;oBACA4L,aAAA;oBACAC,aAAA;oBACAC,SAAA;oBACAC,WAAA;oBACAC,SAAAlM,KAAAE;oBACAiM,MAAA;oBACAC,SAAA;oBACA1Y,WAAA;oBACA2Y,MAAA/L;oBACAgM,SAAA;oBACAC,SAAA;oBACAC,iBAAA;oBACAC,aAAA;oBACAC,UAAAxM;oBACAyM,QAAA;oBACAC,aAAA;oBACAzH,MAAA;oBACA0H,UAAA;oBACAC,SAAA5M;oBAEA6M,cAAA/M;oBAEAgN,gBAAAhN,KAAAE;oBACA+M,OAAA/M;oBACAgN,KAAA;oBACAC,UAAAjN;oBACAkN,UAAA5M;oBACA6M,WAAA;oBACAC,SAAA;oBACAC,MAAA;oBACAC,YAAA;oBACAC,aAAA;oBACAC,YAAA;oBACAC,gBAAAzN;oBACA0N,YAAA;oBACAC,aAAA;oBACAC,SAAA;oBACAC,QAAA;oBACAC,QAAA9N;oBACA+N,MAAA;oBACAC,MAAA;oBACAC,UAAA;oBACAC,SAAA;oBACAC,WAAA;oBACAC,MAAA;oBACA9d,IAAA;oBACA+d,WAAA;oBACAC,WAAA;oBACA5X,IAAA;oBACA6X,WAAA;oBACAC,SAAA;oBACAC,MAAA;oBACAC,OAAA;oBACAC,MAAA;oBACAlN,MAAA;oBACAmN,MAAA5O;oBACA6O,KAAA;oBACAC,UAAA;oBACAC,cAAA;oBACAC,aAAA;oBACAC,KAAA;oBACAC,WAAA;oBACAC,OAAA;oBACAC,YAAA;oBACAC,QAAA;oBACAC,KAAA;oBACAC,WAAA;oBAGAC,UAAA1P,KAAAE;oBACAyP,OAAA3P,KAAAE;oBACAlG,MAAA;oBACA4V,OAAA;oBACAC,YAAA3P;oBACA4P,MAAA5P;oBACA6P,SAAA;oBACAC,SAAA;oBACAC,aAAA;oBACAC,QAAA;oBACAC,SAAA;oBACAC,SAAA;oBACAC,YAAA;oBACAC,UAAApQ;oBACAqQ,KAAA;oBACAC,UAAAtQ;oBACAuQ,UAAAvQ;oBACAwQ,MAAA;oBACAC,MAAArQ;oBACAsQ,SAAAxQ;oBACAyQ,SAAA;oBACAC,OAAA;oBACAC,QAAA7Q;oBACA8Q,WAAA;oBACAC,UAAA/Q;oBACAgR,UAAAlR,KAAAE;oBACAiR,OAAA;oBACAC,MAAA9Q;oBACA+Q,OAAA;oBACAC,MAAAhR;oBACAiR,YAAA;oBACAC,KAAA;oBACAC,QAAA;oBACAC,SAAA;oBACAC,QAAA;oBACAC,OAAAxR;oBACAyR,MAAA;oBACArT,OAAA;oBACAsT,SAAA;oBACAC,UAAA;oBACAzU,QAAA;oBACAjL,OAAA;oBAEA+B,MAAA;oBACA4d,QAAA;oBACAvR,OAAAT;oBACAiS,OAAA;oBACAC,OAAA;oBACAC,MAAA;oBAKAC,OAAA;oBACAC,UAAA;oBACAC,QAAA;oBACA1T,QAAA;oBAEA2T,UAAA;oBACAC,UAAA;oBACAC,QAAA;oBACAC,OAAA;oBAOAC,gBAAA;oBACAC,aAAA;oBAEAC,UAAA;oBAEAC,OAAA;oBAGAC,UAAA;oBACAC,WAAA9S;oBACA+S,UAAA;oBAIAC,QAAA;oBACAC,SAAA;oBAGAC,SAAA;oBAGAC,UAAA;oBAEAC,cAAA;;gBAEAjU;gBACAC;oBACA6L,eAAA;oBACAzX,WAAA;oBACA0a,SAAA;oBACAC,WAAA;;gBAEA9O;eAIAgU,KAAA,gCACAC,KAAA,wCAmBAC;gBACAC,cAAA;gBACAC,YAAA;gBACAC,UAAA;gBACAC,mBAAA;gBACAC,cAAA;gBACAC,YAAA;gBACAC,WAAA;gBACAC,YAAA;gBACAC,QAAA;gBACAvU,eAAA;gBACAwU,eAAA;gBACAC,aAAA;gBACAC,SAAA;gBACAC,eAAA;gBACAC,aAAA;gBACAC,eAAA;gBACAC,MAAA;gBACAC,OAAA;gBACAC,MAAA;gBACAC,IAAA;gBACAC,UAAA;gBACAC,WAAA;gBACAC,MAAA;gBACAC,UAAA;gBACAC,UAAA;gBACAC,eAAA;gBACAC,oBAAA;gBACAC,2BAAA;gBACAC,cAAA;gBACAC,gBAAA;gBACAC,mBAAA;gBACAC,kBAAA;gBACAC,QAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,GAAA;gBACAC,YAAA;gBACAC,SAAA;gBACAC,iBAAA;gBACAC,WAAA;gBACAC,SAAA;gBACAC,SAAA;gBACAC,kBAAA;gBACAC,KAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,UAAA;gBACAC,WAAA;gBACAC,kBAAA;gBACAC,KAAA;gBACAC,UAAA;gBACAC,2BAAA;gBACAC,MAAA;gBACAzM,aAAA;gBACA0M,UAAA;gBACAC,QAAA;gBACAC,WAAA;gBACAC,aAAA;gBACAC,YAAA;gBACA7M,cAAA;gBACA8M,WAAA;gBACAC,YAAA;gBACAC,UAAA;gBACAC,gBAAA;gBACAC,aAAA;gBACAC,WAAA;gBACAC,aAAA;gBACA/N,YAAA;gBACAgO,QAAA;gBACAvV,MAAA;gBACAwV,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,WAAA;gBACAC,4BAAA;gBACAC,0BAAA;gBACAC,UAAA;gBACAC,mBAAA;gBACAC,eAAA;gBACAC,SAAA;gBACAC,WAAA;gBACAC,cAAA;gBACAC,aAAA;gBACAC,gBAAA;gBACAC,IAAA;gBACAC,KAAA;gBACAC,WAAA;gBACAC,GAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,cAAA;gBACAC,kBAAA;gBACAC,SAAA;gBACAC,WAAA;gBACAC,YAAA;gBACAC,UAAA;gBACAC,cAAA;gBACAC,eAAA;gBACAC,eAAA;gBACAC,mBAAA;gBACAC,OAAA;gBACAC,WAAA;gBACAC,WAAA;gBACAC,aAAA;gBACAC,cAAA;gBACAC,aAAA;gBACAC,aAAA;gBACAC,MAAA;gBACAC,kBAAA;gBACAC,WAAA;gBACAC,cAAA;gBACAC,MAAA;gBACAC,YAAA;gBACAC,QAAA;gBACA5Q,SAAA;gBACA6Q,UAAA;gBACA5Q,OAAA;gBACA6Q,QAAA;gBACAC,aAAA;gBACAC,QAAA;gBACAC,UAAA;gBACAC,kBAAA;gBACAC,mBAAA;gBACAC,YAAA;gBACAC,SAAA;gBACAC,YAAA;gBACAC,qBAAA;gBACAC,kBAAA;gBACAC,cAAA;gBACAC,eAAA;gBACAC,QAAA;gBACAC,WAAA;gBACAC,WAAA;gBACAC,WAAA;gBACAC,eAAA;gBACAC,qBAAA;gBACAC,gBAAA;gBACAC,GAAA;gBACAC,QAAA;gBACAC,MAAA;gBACAC,MAAA;gBACAC,iBAAA;gBACAC,aAAA;gBACAC,WAAA;gBACAC,oBAAA;gBACAC,kBAAA;gBACAC,SAAA;gBACAnZ,QAAA;gBACAoZ,QAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,OAAA;gBACAC,MAAA;gBACAC,gBAAA;gBACAC,OAAA;gBACAC,SAAA;gBACAC,kBAAA;gBACAC,kBAAA;gBACAC,OAAA;gBACAC,cAAA;gBACAC,aAAA;gBACAC,cAAA;gBACAC,OAAA;gBACAC,OAAA;gBACAC,aAAA;gBACAC,WAAA;gBACApT,aAAA;gBACAqT,uBAAA;gBACAC,wBAAA;gBACAC,QAAA;gBACAC,QAAA;gBACAvT,iBAAA;gBACAC,kBAAA;gBACAuT,eAAA;gBACAC,gBAAA;gBACAvT,kBAAA;gBACAC,eAAA;gBACAC,aAAA;gBACAsT,cAAA;gBACAC,gBAAA;gBACAC,aAAA;gBACAC,SAAA;gBACAC,SAAA;gBACAC,YAAA;gBACAC,gBAAA;gBACAC,eAAA;gBACAC,YAAA;gBACAzc,IAAA;gBACA0c,WAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,mBAAA;gBACAC,oBAAA;gBACAC,SAAA;gBACAC,aAAA;gBACAC,cAAA;gBACAC,YAAA;gBACAC,aAAA;gBACAC,UAAA;gBACAC,cAAA;gBACAC,eAAA;gBACAC,QAAA;gBACAC,cAAA;gBACAC,SAAA;gBACAC,UAAA;gBACAC,aAAA;gBACAC,aAAA;gBACAC,SAAA;gBACAC,YAAA;gBACAC,YAAA;gBACAC,QAAA;gBACAC,aAAA;gBACAC,aAAA;gBACAC,GAAA;gBACAC,SAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,kBAAA;gBACAC,cAAA;gBACAC,cAAA;gBACAC,WAAA;gBACAC,WAAA;gBACAC,WAAA;gBACAC,YAAA;gBACAC,WAAA;gBACAC,SAAA;gBACAC,SAAA;gBACAC,UAAA;gBACAC,GAAA;gBACAC,IAAA;gBACAC,IAAA;gBACAC,kBAAA;gBACAC,GAAA;gBACAC,YAAA;eAGAC;gBACAntB;gBACAgL;oBACAmhB,cAAAjN;oBACAkN,cAAAlN;oBACAmN,WAAAnN;oBACAoN,WAAApN;oBACAqN,WAAArN;oBACAsN,YAAAtN;oBACAuN,WAAAvN;oBACAwN,SAAAvN;oBACAwN,SAAAxN;oBACAyN,UAAAzN;;gBAEAlU;gBACAC;;YAGA6C,OAAAC,KAAAoR,IAAAxO,IAAA,SAAA/M;gBACAspB,GAAAntB,MAAA6D,KAAA,GACAub,GAAAvb,OACAspB,GAAAliB,SAAApH,KAAAub,GAAAvb;gBAKAiH,EAAA8L,KACA9L,EAAAqiB;YAqGA,IAAArrB,KAAA0B,MAAA4pB,SAyDAnf,KAAA,GAMArJ,KAAA;YAmFAmJ,OAAAsf,WACAtf,OAAAsf,SAAArgB;YAGA,IAAA0B,SACAG,SAuGAye,KAAAvf,OAAAsf;gBACApuB;gBACAgQ;gBACAG;gBACAC;gBA0GAke,KAAA,iuBACAC;YACA9f,EAAA6f,GAAAE,MAAA,eAAAC;gBACAF,GAAAE,KAAA9d,GAAA8d;;YAGA,IAAAC,KAAA,SAAAA;gBACA,OAAAA;;YAEAA,GAAAC,aAAAD;YACA,IAAAE;gBACAC,OAAAH;gBACAI,MAAAJ;gBACAK,MAAAL;gBACAM,QAAAN;gBACAO,QAAAP;gBACAnE,QAAAmE;gBACAQ,KAAAR;gBACAS,SAAAT;gBACAU,SAAAV;gBACAW,YAAAX;gBACA5sB,MAAA4sB;gBACAY,UAAAZ;gBACAa,OAAAb;gBACAc,WAAAd;gBACA7Q,OAAA6Q;eA2FAnc,KAAA,aAKAkd,KAAA3gB,OAAAsf;gBACA5c;gBACAC;gBACAE;gBACAO;gBACAC;gBAoDAmB,KAAA;YACAA,GAAArC,YAAArK,EAAAqK;YA4CA,IAAAnT,KAAAuI;gBACA8lB,SAAA;gBACA7b;gBACAD;gBACApQ;gBACA0Q;gBACA/J;gBACA1I;gBACAuxB;gBACAb;gBACAL;gBACAmB,UAAArpB;eACGgoB;YAIH,OAFAvwB,GAAA6xB,+CAAAtB,IAEAvwB;;;IJ6KM8xB,KACA,SAAS3yB,GAAQD,GAASH;QAqB/B;SK3xEA;YAGG,IAAIiB,IAAQjB,EAAQ,MAChBgzB,IAAOhzB,EAAQ;YAEnBA,EAAQ;YAgBR,IAAIqD,IAAWpC,EAAMI;gBL8xEhBC,aAAa;gBK7xEd6U;oBACI+F,MAAMjb,EAAM8wB,UAAUI;oBACtB3R,MAAMvf,EAAM8wB,UAAUI;oBACtB1wB,SAASR,EAAM8wB,UAAUK,OAAON;oBAChCtvB,gBAAgBvB,EAAM8wB,UAAUG;;gBAGpC7b,iBAAiB;oBACb;wBACI6F,MAAM;wBACNsE,MAAM;;;gBAIdre,oBAAoB;oBAChB,IAAI8wB,IAAO,IAAID;wBACX9W,MAAM7Z,KAAK6B,MAAMgY;wBACjBsE,MAAMne,KAAK6B,MAAMsc;wBACjB0S,aAAY;wBACZC,WAAU;;oBAGdF,EAAKG,GAAG,QAAQ,SAASpe;wBACjB3S,KAAK6B,MAAMzC,QAAQ4xB,SACnBhxB,KAAK6B,MAAMzC,QAAQ6xB,KAAKte;sBAC9BzS,KAAKF,QAEHA,KAAK6B,MAAM1B,kBACXywB,EAAKG,GAAG,SAAS/wB,KAAK6B,MAAM1B;oBAEhCH,KAAKC;wBAAWW,UAAUgwB;;;gBAG9B1nB,mBAAmB;oBACflJ,KAAKO,MAAMK,SAAS0c,KAAKtd,KAAKS,KAAKG,WACnCZ,KAAKkxB;;gBAGTlc,qBAAqB,SAAUzM;oBACvBA,EAAUsR,SAAS7Z,KAAK6B,MAAMgY,QAAQtR,EAAU4V,SAASne,KAAK6B,MAAMsc,QACpEne,KAAKO,MAAMK,SAASuwB,OAAO5oB,EAAUsR,MAAMtR,EAAU4V;oBAErD5V,EAAUnJ,YAAYY,KAAK6B,MAAMzC,YACjCY,KAAKO,MAAMK,SAASwwB,SACpBpxB,KAAKqxB;;gBAIbpc,oBAAoB,SAAUqc;oBACtBA,EAAUlyB,YAAYY,KAAK6B,MAAMzC,WACjCY,KAAKkxB;;gBAGbpwB,QAAQ;oBAEJ,OAAOlC,EAAAmC,cAAA;wBAAKE,KAAI;wBAAWC,WAAU;wBAAawE,KAAK1F,KAAKO,MAAMK;;;gBAGtEgI,sBAAsB;oBAClB5I,KAAKqxB,qBACLrxB,KAAKO,MAAMK,SAAS2wB;;gBAGxBC,kBAAkB,SAAUnxB,GAAOsS;oBAC/B3S,KAAKO,MAAMK,SAAS6wB,MAAM9e;;gBAG9B+e,gBAAgB,SAAUrxB,GAAOsxB;oBAC7B,IAAIf,IAAO5wB,KAAKO,MAAMK;oBACtBgwB,EAAKa,MAAM,WAAcE,EAAQC,WAAW,kBAAkB,YAC9DhB,EAAKiB,gBAAe;oBACpBjB,EAAKkB,QAAQlB,EAAKlC,GAAGkC,EAAKlC;;gBAG9BwC,gBAAgB;oBACZ,IAAI9xB,IAAUY,KAAK6B,MAAMzC;oBACrBA,KAAWA,EAAQ4xB,UACnB5xB,EAAQsL,iBAAiB,WAAW1K,KAAKwxB,iBAAiBtxB,KAAKF;oBAC/DZ,EAAQsL,iBAAiB,SAAS1K,KAAK0xB,eAAexxB,KAAKF;;gBAInEqxB,mBAAmB;oBACXrxB,KAAK6B,MAAMzC,YACXY,KAAK6B,MAAMzC,QAAQ2yB,oBAAoB,WAAW/xB,KAAKwxB;oBACvDxxB,KAAK6B,MAAMzC,QAAQ2yB,oBAAoB,SAAS/xB,KAAK0xB;;gBAI7D7wB,OAAO;oBACCb,KAAKO,MAAMK,YACXZ,KAAKO,MAAMK,SAASC;;;YAIhC9C,EAAOD;gBAAYkD,UAAUA;;;;IL+xE3BgxB,KACA,SAASj0B,GAAQD,GAASH;QAE/B,IAAIs0B,GAA8BC;SM36EnC,SAAAzwB;aAgCC;gBAaD;gBAaA,SAAA0wB;oBACAnyB,KAAAoyB,UAAApyB,KAAAoyB;;gBA6DA,SAAAC;oBACAF,EAAAj0B,KAAA8B;;gBA4DA,SAAAgB,EAAA2wB;oBACA,IAAAW,IAAAtyB;oBAEA,MAAAA,gBAAAgB,IACA,WAAAA,EAAAkO,UAAA,IAAAA,UAAA,IAAAA,UAAA;oBAGAmjB,EAAAn0B,KAAA8B,OAEA,mBAAA2xB,MACAA;wBACA9X,MAAA3K,UAAA;wBACAiP,MAAAjP,UAAA;wBACAqjB,SAAArjB,UAAA;wBAIAyiB,aAEAa,EAAA3iB,EAAA7O,EAAAyxB,WAAA,SAAA/sB;wBACA,QAAAisB,EAAAjsB,OACAisB,EAAAjsB,KAAA1E,EAAA2wB,QAAAjsB,IAEA1E,EAAA0E,OAAA1E,EAAAyxB,SAAA/sB,OACAisB,EAAAjsB,KAAA1E,EAAA0E;wBAGA4sB,EAAA5sB,KAAAisB,EAAAjsB;wBAGA,MAAAisB,EAAAe,OAAA1uB,SACA2tB,EAAAe,SAAAf,EAAAe,OAAAlhB,OAAAxQ,EAAA2xB,QAAAC,MAAA,MACG,OAAAjB,EAAAe,OAAA1uB,SACH2tB,EAAAe,SAAAf,EAAAe,OAAAlhB,OAAAxQ,EAAA2xB,QAAAC,MAAA,OACG,OAAAjB,EAAAe,OAAA1uB,SACH2tB,EAAAe,SAAAf,EAAAe,OAAAE,MAAA,OAAAphB,OACAxQ,EAAA2xB,QAAAC,MAAA,QAAAjB,EAAAe,OAAAE,OAAA,MACG,OAAAjB,EAAAe,OAAA1uB,WACH2tB,EAAAe,SAAAf,EAAAe,OAAAE,MAAA,OAAAphB,OACAxQ,EAAA2xB,QAAAC,MAAA,SAAAjB,EAAAe,OAAAE,OAAA;oBAEA5yB,KAAA0yB,SAAAf,EAAAe,QAEA1yB,KAAA2xB,aAIA3xB,KAAA6yB,SAAAlB,EAAArwB,QAAAqwB,EAAAkB,WACAzxB,MAAA0xB,qBAAA;oBAEA9yB,KAAA6Z,OAAA8X,EAAA9X,QAAA8X,EAAAoB,SAAA,IACA/yB,KAAAme,OAAAwT,EAAAxT,QAAAwT,EAAAoB,SAAA,IAGA/yB,KAAAgzB;oBACAhzB,KAAAizB,SAAA,GACAjzB,KAAAkzB,SAAA,GACAlzB,KAAAmzB,UAAAnzB,KAAA6Z,MACA7Z,KAAAme,OAAAne,KAAAme;oBAEAwT,EAAAY,WACAvyB,KAAA+wB,GAAA,QAAAY,EAAAY,UAGAvyB,KAAAozB,QAAA,GACApzB,KAAAqzB,QAAA,GACArzB,KAAA2tB,IAAA;oBACA3tB,KAAA0uB,IAAA,GACA1uB,KAAAszB,cAAA,GACAtzB,KAAA6xB,gBAAA,GACA7xB,KAAAuzB,YACAvzB,KAAAO,QAAA;oBACAP,KAAAwzB,QAAA,IACAxzB,KAAAyzB,YAAA,GACAzzB,KAAA0zB,eAAA1zB,KAAAme,OAAA,GAGAne,KAAA2zB,qBAAA;oBACA3zB,KAAA4zB,qBAAA,GACA5zB,KAAA6zB,cAAA,GACA7zB,KAAA8zB,cAAA,GACA9zB,KAAA+zB,kBAAA;oBACA/zB,KAAAg0B,SAAA,MAGAh0B,KAAAi0B,cAAA,GACAj0B,KAAAk0B,cAAA,GACAl0B,KAAAm0B,cAAA;oBACAn0B,KAAAo0B,cAAA,GACAp0B,KAAAq0B,YACAr0B,KAAAs0B,QAAA,IACAt0B,KAAAu0B,cAAA;oBACAv0B,KAAAw0B,OACAx0B,KAAAy0B,WACAz0B,KAAA00B,WAGA10B,KAAA20B,UAAA,MACA30B,KAAA40B,WAAA;oBACA50B,KAAA60B,SAAA,GACA70B,KAAA80B,aAAA,QAGA90B,KAAA+0B,YACA/0B,KAAAg1B,UACAh1B,KAAAi1B;oBACAj1B,KAAAk1B,YACAl1B,KAAAm1B,aACAn1B,KAAAo1B,aACAp1B,KAAAq1B,WACAr1B,KAAAs1B;oBACAt1B,KAAAu1B,UACAv1B,KAAAw1B,YAGAx1B,KAAAkwB,SACAlwB,KAAAyD,UACAzD,KAAAy1B;oBACAz1B,KAAA01B,YACA11B,KAAA21B,QACA31B,KAAA41B,QACA51B,KAAA61B,WAGA71B,KAAA81B,YAAA,GACA91B,KAAA+1B,YAAA;oBAEA/1B,KAAAg2B,UAAA,QACAh2B,KAAAi2B,UAAAj2B,KAAAg2B,SAEAh2B,KAAAk2B,aACAl2B,KAAAm2B,eAAA;oBACAn2B,KAAAoM,SAAA,IACApM,KAAAo2B,UAAA,IAEAp2B,KAAAq2B;oBAEA,KADA,IAAAvyB,IAAA9D,KAAAme,MACAra,OACA9D,KAAAq2B,MAAAhuB,KAAArI,KAAAs2B;oBAGAt2B,KAAAu2B,MACAv2B,KAAAw2B;;gBAq5KA,SAAAzF,EAAA0F,GAAA70B,GAAA2wB,GAAAlZ;oBACAod,EAAA/rB,iBAAA9I,GAAA2wB,GAAAlZ,MAAA;;gBAGA,SAAAqd,EAAAD,GAAA70B,GAAA2wB,GAAAlZ;oBACAod,EAAA1E,oBAAAnwB,GAAA2wB,GAAAlZ,MAAA;;gBAGA,SAAAsd,EAAAC;oBAKA,OAJAA,EAAAC,kBAAAD,EAAAC,kBACAD,EAAAE,eAAA,GACAF,EAAAG,mBAAAH,EAAAG;oBACAH,EAAAI,gBAAA,IACA;;gBAGA,SAAAC,EAAA1yB,GAAAsuB;oBACA,SAAAqE;wBACAl3B,KAAA8I,cAAAvE;;oBAEA2yB,EAAAnlB,YAAA8gB,EAAA9gB,WACAxN,EAAAwN,YAAA,IAAAmlB;;gBAKA,SAAAC,EAAA/1B;oBACA,IAAAE,IAAAF,EAAA0xB,qBAAA,YACAlyB,IAAAQ,EAAAL,cAAA;oBACAH,EAAAM,YAAA;oBACA,IAAAk2B,IAAAh2B,EAAAL,cAAA,QACA01B,IAAAr1B,EAAAL,cAAA;oBACA01B,EAAA1mB,YAAA,eACAqnB,EAAAnzB,YAAAwyB,IACA71B,EAAAqD,YAAAmzB,IACA91B,EAAA2C,YAAArD;oBACA,IAAAy2B,IAAAZ,EAAAa;oBACAb,EAAAzqB,MAAAkL,aAAA;oBACA,IAAAqgB,IAAAd,EAAAa;oBAEA,OADAh2B,EAAAuE,YAAAjF,IACAy2B,MAAAE;;gBAOA,SAAApzB,EAAAyK,GAAA6nB;oBAEA,KADA,IAAA3yB,IAAA8K,EAAA5K,QACAF,OACA,IAAA8K,EAAA9K,OAAA2yB,GAAA,OAAA3yB;oBAEA;;gBAGA,SAAA0zB,EAAAC;oBACA,SAAAA,KAAA,SACAA,KAAA,OAAAA,KAAA,OACAA,KAAA,OAAAA,KAAA,OACAA,KAAA,OAAAA,KAAA,OACAA,KAAA,OAAAA,KAAA,OACAA,KAAA,OAAAA,KAAA,OACAA,KAAA,OAAAA,KAAA,OACAA,KAAA,OAAAA,KAAA;;gBAGA,SAAAC,EAAAC,GAAAtS,GAAAuS;oBACA,IAAAC,IAAAF,KAAA,KAAAtS,KAAA,IAAAuS;oBAEA,YAAAF,EAAAI,OAAAD,IACA,OAAAH,EAAAI,OAAAD;oBAYA,KATA,IAGAz5B,GACA25B,GACAzS,GACA0S,GACAC,GAPAC,IAAAC,OACAC,KAAA,GACAt0B,IAAA,GAOQA,IAAA9C,EAAAq3B,QAAAr0B,QAA6BF,KAAA;wBAQrC,IAPA1F,IAAA4C,EAAAq3B,QAAAv0B,IACAi0B,IAAA35B,EAAA,IACAknB,IAAAlnB,EAAA,IACA45B,IAAA55B,EAAA,IAEA65B,IAAAP,EAAAY,SAAAX,GAAAtS,GAAAuS,GAAAG,GAAAzS,GAAA0S;wBAEA,MAAAC,GAAA;4BACAG,IAAAt0B;4BACA;;wBAGAm0B,IAAAC,MACAA,IAAAD,GACAG,IAAAt0B;;oBAIA,OAAA4zB,EAAAI,OAAAD,KAAAO;;gBAYA,SAAA5F,EAAA5jB,GAAA2pB,GAAAC;oBACA,IAAA5pB,EAAA2D,SAAA,OAAA3D,EAAA2D,QAAAgmB,GAAAC;oBACA,SAAA10B,IAAA,GAAiBA,IAAA8K,EAAA5K,QAAgBF,KACjCy0B,EAAAr6B,KAAAs6B,GAAA5pB,EAAA9K,OAAA8K;;gBAIA,SAAAiB,EAAAjB;oBACA,IAAAgB,OAAAC,MAAA,OAAAD,OAAAC,KAAAjB;oBACA,IAAAlJ,GAAAmK;oBACA,KAAAnK,KAAAkJ,GACAgB,OAAAmC,UAAAvL,eAAAtI,KAAA0Q,GAAAlJ,MACAmK,EAAAxH,KAAA3C;oBAGA,OAAAmK;;gBAryLA,IACAzO,IAAApB,KAAAoB;gBAUA+wB,EAAApgB,UAAA0mB,cAAA,SAAA72B,GAAA4I;oBACAxK,KAAAoyB,QAAAxwB,KAAA5B,KAAAoyB,QAAAxwB,UACA5B,KAAAoyB,QAAAxwB,GAAAyG,KAAAmC;mBAGA2nB,EAAApgB,UAAAgf,KAAAoB,EAAApgB,UAAA0mB,aAEAtG,EAAApgB,UAAA2mB,iBAAA,SAAA92B,GAAA4I;oBACA,IAAAxK,KAAAoyB,QAAAxwB,IAKA,KAHA,IAAAgN,IAAA5O,KAAAoyB,QAAAxwB,IACAkC,IAAA8K,EAAA5K,QAEAF,OACA,IAAA8K,EAAA9K,OAAA0G,KAAAoE,EAAA9K,GAAA0G,gBAEA,YADAoE,EAAA+pB,OAAA70B,GAAA;mBAMAquB,EAAApgB,UAAA2kB,MAAAvE,EAAApgB,UAAA2mB,gBAEAvG,EAAApgB,UAAA6mB,qBAAA,SAAAh3B;oBACA5B,KAAAoyB,QAAAxwB,aAAA5B,KAAAoyB,QAAAxwB;mBAGAuwB,EAAApgB,UAAA8mB,OAAA,SAAAj3B,GAAA4I;oBACA,SAAAumB;wBACA,IAAApf,IAAAtM,MAAA0M,UAAA6gB,MAAA10B,KAAAgR;wBAEA,OADAlP,KAAA04B,eAAA92B,GAAAmvB,IACAvmB,EAAAyE,MAAAjP,MAAA2R;;oBAGA,OADAof,EAAAvmB,cACAxK,KAAA+wB,GAAAnvB,GAAAmvB;mBAGAoB,EAAApgB,UAAA+mB,OAAA,SAAAl3B;oBACA,IAAA5B,KAAAoyB,QAAAxwB,IAOA,KALA,IAAA+P,IAAAtM,MAAA0M,UAAA6gB,MAAA10B,KAAAgR,WAAA,IACAN,IAAA5O,KAAAoyB,QAAAxwB,IACAm3B,IAAAnqB,EAAA5K,QACAF,IAAA,GAEQA,IAAAi1B,GAAOj1B,KACf8K,EAAA9K,GAAAmL,MAAAjP,MAAA2R;mBAIAwgB,EAAApgB,UAAAinB,YAAA,SAAAp3B;oBACA,OAAA5B,KAAAoyB,QAAAxwB,KAAA5B,KAAAoyB,QAAAxwB;mBAWAq1B,EAAA5E,GAAAF,IAEAE,EAAAtgB,UAAAjD,OAAA,SAAAmqB,GAAAtH;oBAMA,SAAAuH;wBACAla,EAAA0Z,eAAA,QAAAS,IACAna,EAAA0Z,eAAA,SAAAU,IACApa,EAAA0Z,eAAA,OAAAW;wBACAJ,EAAAP,eAAA,SAAAU,IACAH,EAAAP,eAAA,SAAAQ;;oBAVA,IACAC,GACAC,GACAC,GAHAra,IAAAhf;oBAkCA,OArBAgf,EAAA+R,GAAA,QAAAoI,IAAA,SAAAxmB;wBACAsmB,EAAAxH,MAAA9e;wBAGAqM,EAAA+R,GAAA,SAAAqI,IAAA,SAAAE;wBAEA,IADAJ,MACAl5B,KAAAg5B,UAAA,SAAAh1B,QACA,MAAAs1B;wBAIAta,EAAA+R,GAAA,OAAAsI,IAAA;wBACAJ,EAAA/U,OACAgV;wBAGAD,EAAAlI,GAAA,SAAAqI,IACAH,EAAAlI,GAAA,SAAAmI,IAEAD,EAAAH,KAAA,QAAA9Z,IAEAia;;gBAOA,IAAAjF,IAAA,GACAuF,IAAA,GACAC,IAAA,GACAC,IAAA,GACA9E,IAAA,GACA+E,IAAA,GACAC,IAAA,GACAC;oBAAWh4B,MAAA;;gBAuJXq1B,EAAAj2B,GAAAqxB,IAOArxB,EAAA64B,gBAEA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WAEA,WACA,WACA,WACA,WACA,WACA,WACA,WACA;gBAGA74B,EAAA84B,gBAEA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WAEA,WACA,WACA,WACA,WACA,WACA,WACA,WACA;gBAKA94B,EAAA0xB,SAAA;oBAkBA,SAAAqH,EAAAxQ,GAAAyQ,GAAAC;wBACAvH,EAAArqB,KAAA,MAAA6xB,EAAA3Q,KAAA2Q,EAAAF,KAAAE,EAAAD;;oBAGA,SAAAC,EAAA97B;wBAEA,OADAA,MAAA8U,SAAA,KACA9U,EAAA4F,SAAA,UAAA5F;;oBAvBA,IAEA0F,GAFA4uB,IAAA1xB,EAAA64B,YAAAjH,SACArJ,MAAA;oBAKA,KADAzlB,IAAA,GACQA,IAAA,KAASA,KACjBi2B,EAAAxQ,EAAAzlB,IAAA,aAAAylB,EAAAzlB,IAAA,YAAAylB,EAAAzlB,IAAA;oBAKA,KADAA,IAAA,GACQA,IAAA,IAAQA,KAChBylB,IAAA,SAAAzlB,GACAi2B,EAAAxQ;oBAYA,OAAAmJ;qBAIA1xB,EAAA0xB,OAAA,kBACA1xB,EAAA0xB,OAAA,kBAEA1xB,EAAA2xB,UAAA3xB,EAAA0xB,OAAAE;gBAEA5xB,EAAAq3B,UAAA;oBAMA,KALA,IAGA/X,GAHAyZ,QACArH,IAAA1xB,EAAA0xB,QACA5uB,IAAA,GAGQA,IAAA,KAASA,KACjBwc,IAAA6Z,SAAAzH,EAAA5uB,GAAAyI,UAAA;oBACAwtB,EAAA1xB,OACAiY,KAAA,UACAA,KAAA,SACA,MAAAA;oBAIA,OAAAyZ;qBAOA/4B,EAAAyxB;oBACAC,QAAA1xB,EAAA0xB;oBACAa,aAAA;oBACA6G,UAAA;oBACArH,YAAA;oBACAsH,cAAA;oBACAC,aAAA;oBACAC,YAAA;oBACAC,YAAA;oBACA3J,aAAA;oBACA4J,QAAA;oBACA3J,WAAA;mBAKA9vB,EAAA2wB,cAEAa,EAAA3iB,EAAA7O,EAAAyxB,WAAA,SAAA/sB;oBACA1E,EAAA0E,KAAA1E,EAAAyxB,SAAA/sB,IACA1E,EAAA2wB,QAAAjsB,KAAA1E,EAAAyxB,SAAA/sB;oBAOA1E,EAAAH,QAAA,MAEAG,EAAA+Q,UAAAlR,QAAA;oBACAG,EAAAH,UAAAb,SAEAgB,EAAAH,SACAG,EAAAH,MAAAF,QAGAX,KAAAq1B,aAAAr1B,KAAAixB,KAAA;oBACAjxB,KAAA06B,cAUA15B,EAAAH,QAAAb;mBAGAgB,EAAA+Q,UAAApR,OAAA;oBACAK,EAAAH,UAAAb,SAEAA,KAAAszB,cAAA,GACAtzB,KAAA8xB,QAAA9xB,KAAA0uB,GAAA1uB,KAAA0uB,IACA1uB,KAAAq1B,aAAAr1B,KAAAixB,KAAA;oBAUAjwB,EAAAH,QAAA;mBAOAG,EAAA+Q,UAAA4oB,aAAA;oBACA,IAAAv5B,IAAApB,KAAAoB;oBAEAJ,EAAA45B,aAAA55B,EAAA45B,mBACAz2B,EAAAnD,EAAA45B,YAAAx5B,OAGAJ,EAAA45B,WAAAvyB,KAAAjH;oBAEAJ,EAAA65B,UAAAz5B,IAEAJ,EAAA85B,SAAA15B,IAEAJ,EAAA+5B,SAAA35B,IAEApB,KAAAg7B,YACAh7B,KAAAi7B,UAAA75B;oBAGApB,KAAA8wB,YACA9vB,EAAAk6B,YAAA95B,GAAApB,KAAA0yB,OAAA,MAAA1yB,KAAA0yB,OAAA;mBAQA1xB,EAAA65B,YAAA,SAAAz5B;oBAGA,IAAA+5B,IAAA/5B,EAAAg6B;oBACArK,EAAAoK,GAAA,kBAAAvE;wBACA,IAAAhG,IAAA5vB,EAAAH;wBACA,IAAA+vB,GAQA,OAPAgG,EAAAyE,gBACAzK,EAAAK,KAAA2F,EAAAyE,cAAAC,QAAA,iBACK1K,EAAA5oB,QAAAqzB,iBACLzK,EAAAK,KAAAL,EAAA5oB,QAAAqzB,cAAAC,QAAA;wBAGA1K,EAAAV,QAAAlW,kBAAA,WACA2c,EAAAC;;mBAQA51B,EAAA85B,WAAA,SAAA15B;oBAGA2vB,EAAA3vB,GAAA,oBAAAw1B;wBACA,IAAA51B,EAAAH,OAAA;4BACA,IAAAiK,IAAA8rB,EAAA9rB,UAAA8rB,EAAA2E;4BACA,IAAAzwB,GACA,OAAAA,MAAA9J,EAAAH,MAAAqvB,WACAplB,MAAA9J,EAAAH,MAAAmH,WACA8C,MAAA9J,EAAAH,MAAAO,YACA0J,MAAA9J,EAAAH,MAAAS,QACAwJ,MAAA9J,EAAA0zB,aACA5pB,MAAA9J,EAAAH,MAAAgyB,SACA7xB,EAAAH,MAAA26B,QAAA5E,KANA;;wBAQG,IAEH7F,EAAA3vB,GAAA,qBAAAw1B;wBACA,IAAA51B,EAAAH,OAAA;4BACA,IAAAiK,IAAA8rB,EAAA9rB,UAAA8rB,EAAA2E;4BACA,IAAAzwB,GACA,OAAAA,MAAA9J,EAAAH,MAAAqvB,WACAplB,MAAA9J,EAAAH,MAAAmH,WACA8C,MAAA9J,EAAAH,MAAAO,YACA0J,MAAA9J,EAAAH,MAAAS,QACAwJ,MAAA9J,EAAA0zB,aACA5pB,MAAA9J,EAAAH,MAAAgyB,SACA7xB,EAAAH,MAAA46B,SAAA7E,KANA;;wBAQG,IAIH7F,EAAA3vB,GAAA,sBAAAw1B;wBACA,IAAA51B,EAAAH,OAAA;4BAEA,IAAA41B,IAAAG,EAAA9rB,UAAA8rB,EAAA2E;4BACA,IAAA9E,GAAA;gCAEA,GACA,IAAAA,MAAAz1B,EAAAH,MAAAqvB,SAAA,eACKuG,MAAAttB;gCAELnI,EAAAH,MAAAF;;;;mBAQAK,EAAA+5B,WAAA,SAAA35B;oBACA,IAAA+5B,IAAA/5B,EAAAg6B;oBAoBArK,EAAAoK,GAAA,iBAAAvE;wBACA,IAAAhG,IAAA5vB,EAAAH;wBACA,IAAA+vB,KACAA,EAAA6D,WAAA;4BACA,IAAAiH,IAAA9K,EAAA+K,mBACAxoB,IAAAyd,EAAAgL,SACAhL,EAAA6D,UAAA5G,IAAA+C,EAAA6D,UAAA3G,IACA8C,EAAA6D,UAAA9F,IAAAiC,EAAA6D,UAAA7F;4BACAgC,EAAAkI,KAAA,QAAA3lB,IACAuoB,EAAA76B,SACA66B,EAAAG,cAAA1oB,GACAuoB,EAAAztB,QAAAkF,GACAuoB,EAAAI,kBAAA,GAAA3oB,EAAAnP;4BACA+3B,EAAA;gCACAnL,EAAAV,QAAArvB,SACA+vB,EAAA/vB;+BACK;;;mBAQLG,EAAA+Q,UAAAkpB,YAAA,SAAA75B;oBACA,IAAAkxB,IAAAtyB,MAEA07B,IAAAt6B,EAAAL,cAAA;oBACA26B,EAAA1vB,MAAAgwB,WAAA,YACAN,EAAA1vB,MAAAiwB,OAAA,YACAP,EAAA1vB,MAAAkwB,MAAA;oBACAR,EAAA1vB,MAAAyT,QAAA,OACAic,EAAA1vB,MAAAuP,SAAA,OACAmgB,EAAA1vB,MAAAqL,UAAA,KACAqkB,EAAA1vB,MAAAmwB,kBAAA;oBACAT,EAAA1vB,MAAAowB,cAAA,QACAV,EAAA1vB,MAAAqwB,eAAA,QACAX,EAAAY,iBAAA;oBACAZ,EAAAa,cAAA,OAEAn7B,EAAA0xB,qBAAA,WAAA7uB,YAAAy3B,IAEA16B,EAAA0zB,YAAAgH;oBAEAK,EAAA;wBACAL,EAAA76B;uBACG,MAEHb,KAAAw8B,aACAzL,EAAA2K,GAAA;wBACA,IAAAztB,IAAAytB,EAAAG,eAAAH,EAAAztB;wBACAytB,EAAAztB,QAAA,IACAytB,EAAAG,cAAA,IACAvJ,EAAArB,KAAAhjB,IAAA;;mBASAjN,EAAAk6B,cAAA,SAAA95B,GAAAq7B,GAAAC;oBACA,IAAA1wB,IAAA5K,EAAAC,eAAA;oBACA,KAAA2K,GAAA;wBAEA,IAAA2wB,IAAAv7B,EAAA0xB,qBAAA;wBACA,IAAA6J,GAAA;4BAEA,IAAA3wB,IAAA5K,EAAAL,cAAA;4BACAiL,EAAAhO,KAAA,cAGAgO,EAAA+D,YAAA,4CAGA0sB,IAAA,iHAGAC,IAAA,sBACAD,IAAA,0CAIAA,IAAA,sBACAC,IAAA;4BAGA,IAAA3C,IAAA;4BACAvH,EAAAxxB,EAAA0xB,QAAA,SAAApS,GAAAxc;gCACA,QAAAA,MACAi2B,KAAA,kDAAwCzZ,IAAA;gCAExC,QAAAxc,MACAi2B,KAAA,uCAAwCzZ,IAAA,QAExCyZ,KAAA,sBAAAj2B,IAAA,0BAAwCwc,IAAA;gCACxCyZ,KAAA,sBAAAj2B,IAAA,eAAwCwc,IAAA;gCAExCyZ,KAAA,uCACAA,KAAA;4BACAA,KAAA,6CACAA,KAAA;4BACA/tB,EAAA+D,aAAAgqB,IAAA,MAEA4C,EAAAv2B,aAAA4F,GAAA2wB,EAAAhsB;;;mBAOA3P,EAAA+Q,UAAAuL,OAAA,SAAAuV;oBACA,IAEA+J,GAFAtK,IAAAtyB,MACA8D,IAAA;oBAKA,IAFA9D,KAAA6yB,cAAA7yB,KAAA6yB,SAEA7yB,KAAA6yB,QACA,UAAAtrB,MAAA;oBA6BA,KAzBAvH,KAAAgI,UAAAhI,KAAA6yB,OAAAgK,cAAAzB,aACAp7B,KAAAoB,WAAApB,KAAA6yB,OAAAgK;oBACA78B,KAAAsB,OAAAtB,KAAAoB,SAAA0xB,qBAAA,YAGA9yB,KAAAgI,QAAA80B,aAAA98B,KAAAgI,QAAA80B,UAAAC,cACA/8B,KAAAg9B,WAAAh9B,KAAAgI,QAAA80B,UAAAC,UAAA54B,QAAA;oBACAnE,KAAAi9B,YAAAj9B,KAAAgI,QAAA80B,UAAAC,UAAA54B,QAAA,SACAnE,KAAAk9B,cAAAl9B,KAAAgI,QAAA80B,UAAAC,UAAA54B,QAAA;oBACAnE,KAAAw8B,eAAAx8B,KAAAgI,QAAA80B,UAAAC,UAAA54B,QAAA,YACAnE,KAAAg7B,WAAAh7B,KAAAi9B,UAAAj9B,KAAAk9B,YAAAl9B,KAAAw8B;oBACAx8B,KAAAm9B,YAAAn9B,KAAAgI,QAAA80B,UAAAC,UAAA54B,QAAA,UAIAnE,KAAAkwB,UAAAlwB,KAAAoB,SAAAL,cAAA;oBACAf,KAAAkwB,QAAAhvB,YAAA,YACAlB,KAAAkwB,QAAAlkB,MAAAoxB,UAAA,QACAp9B,KAAAkwB,QAAAzhB,aAAA;oBACAzO,KAAAkwB,QAAAzhB,aAAA,wBACAzO,KAAAkwB,QAAAlkB,MAAAmwB,kBAAAn8B,KAAA0yB,OAAA;oBACA1yB,KAAAkwB,QAAAlkB,MAAAsU,QAAAtgB,KAAA0yB,OAAA,MAGA1yB,KAAAyD,eACQK,IAAA9D,KAAAme,MAAera,KACvB84B,IAAA58B,KAAAoB,SAAAL,cAAA;oBACAf,KAAAkwB,QAAAjsB,YAAA24B,IACA58B,KAAAyD,SAAA4E,KAAAu0B;oBAEA58B,KAAA6yB,OAAA5uB,YAAAjE,KAAAkwB,UAGAlwB,KAAA8xB,QAAA,GAAA9xB,KAAAme,OAAA,IAEA,eAAAne,KAAA2xB,YAAA3xB,KAAA2xB,QAAA0L,aAGAr9B,KAAA26B;oBAGA,cAAA36B,KAAA2xB,YAAA3xB,KAAA2xB,QAAA2L,aAEAt9B,KAAAa,SAGAb,KAAAu9B;oBAIAxM,EAAA/wB,KAAAkwB,SAAA;wBACAoC,EAAAzxB,SACAyxB,EAAA0I,YACAh6B,EAAA0zB,UAAA7zB;wBASAkwB,EAAA/wB,KAAAkwB,SAAA;wBACAoC,EAAAzxB;wBAOAkwB,EAAA/wB,KAAAkwB,SAAA,sBAAA0G;wBACA,IAAAt2B,IAAA,QAAAs2B,EAAAt2B,UACAs2B,EAAAt2B,SACA,QAAAs2B,EAAA4G,QACA5G,EAAA4G,QAAA,IACA;wBAGAlL,EAAA6K,WACA78B,IAAA,MAAAA,IAAA,UAAAA,IAAA,IAAAA,IAGA,MAAAA,MAEAgyB,EAAApC,QAAAlW,kBAAA;wBACA+hB,EAAA;4BACAzJ,EAAApC,QAAAlW,kBAAA;2BACO;wBACF,KAGL,cAAAha,KAAA2xB,YAAA3xB,KAAA2xB,QAAA8L,YAGAz9B,KAAA09B;oBAKA,cAAA19B,KAAA2xB,YAAA3xB,KAAA2xB,QAAA2L,YAGAvB,EAAA;wBACAzJ,EAAApC,QAAArvB;uBACO,MAKP,QAAAG,EAAA28B,eACA38B,EAAA28B,aAAAxG,EAAAn3B,KAAAoB,YAGApB,KAAA84B,KAAA;mBAGA93B,EAAA+Q,UAAAihB,aAAA,SAAA/kB;oBACAjO,KAAAkzB,UAAAjlB;mBAWAjN,EAAA+Q,UAAA2rB,YAAA;oBAYA,SAAAE,EAAAhH;wBACA,IAAAt2B,GACAu9B;wBAOA,IAJAv9B,IAAAw9B,EAAAlH,IAGAiH,IAAAE,EAAAnH,IAKA,QAFAoH,EAAA19B,GAAAu9B,IAEAjH,EAAAh1B;0BACA;4BACAq8B,IAAA39B;4BACA;;0BACA;4BAGA29B,IAAA;4BACA;;0BACA,KAAAC;;oBAUA,SAAAC,EAAAvH;wBACA,IACAiH,GADAv9B,IAAA29B;wBAGAJ,IAAAE,EAAAnH,IACAiH,MAIAv9B,KAAA,IAEA09B,EAAA19B,GAAAu9B;;oBAKA,SAAAO,EAAAzrB,GAAA8kB;wBACA,IAAAnF,EAAAgD,UAIK;4BACL,aAAAmC,GAAA,OAAA9kB,EAAAtK,KAAA;4BACAovB,IAAA,MACA9kB,EAAAtK,KAAAovB,MAEAA,IAAA,SAAAA,IAAA,OACA9kB,EAAAtK,KAAA,MAAAovB,KAAA,IACA9kB,EAAAtK,KAAA,WAAAovB;+BAXA;4BACA,YAAAA,GAAA,OAAA9kB,EAAAtK,KAAA;4BACAovB,IAAA,QAAAA,IAAA,MACA9kB,EAAAtK,KAAAovB;;;oBAmBA,SAAAuG,EAAA19B,GAAAu9B;wBAOA,IAAAvL,EAAA4C,YAAA;4BAGA50B,KAAA,GACAu9B,EAAAlQ,KAAA,IACAkQ,EAAAnP,KAAA;4BACA,IAAA/b,IAAA;4BACA,UAAArS,GAAAqS,KAAA,UACA,UAAArS,GAAAqS,KAAA,UACA,UAAArS,GAAAqS,KAAA,UACA;gCAAA,UAAArS,GAAA;gCACAqS,KAAA;;4BAGA,OAFAA,KAAA,OAAAkrB,EAAAlQ,IAAA,MAAAkQ,EAAAnP,IAAA,YACA4D,EAAArB,KAAAte;;wBAIA,IAAA2f,EAAAyC,YAoBA,OAlBAz0B,KAAA,GACAu9B,EAAAlQ,KAAA,IACAkQ,EAAAnP,KAAA,IACA,MAAApuB,QAAA,IACA,MAAAA,QAAA,IACA,MAAAA,QAAA,IACA,MAAAA,UAAA;6BACAgyB,EAAArB,KAAA,OACA3wB,IACA,OACA,MAAAA,IAAA,SACA,MACAu9B,EAAAnP,IACA,MACAmP,EAAAlQ,IACA,OACAkQ,EAAAQ,QAAA,KACA;wBAIA,IAAA/L,EAAAkD,YAMA,OALAqI,EAAAlQ,KAAA,IACAkQ,EAAAnP,KAAA,IACAmP,EAAAlQ,KACAkQ,EAAAnP,UACA4D,EAAArB,KAAA,OAAA3wB,IAAA,MAAqCu9B,EAAAlQ,IAAA,MAAckQ,EAAAnP,IAAA;wBAInD,IAAA4D,EAAAiD,UAUA,OATAsI,EAAAlQ,KAAA,IACAkQ,EAAAnP,KAAA,SACA4D,EAAArB,KAAA,SACA,WAAA3wB,UAAA,IAAAA,KACA,MACAu9B,EAAAlQ,IACA,MACAkQ,EAAAnP,KACA,WAAApuB,KAAA;wBAIA,IAAAqS;wBAEAyrB,EAAAzrB,GAAArS,IACA89B,EAAAzrB,GAAAkrB,EAAAlQ,IACAyQ,EAAAzrB,GAAAkrB,EAAAnP,IAEA4D,EAAArB,KAAA,QAAAqN,EAAAC,aAAAtvB,MAAAqvB,GAAA3rB;;oBAGA,SAAAmrB,EAAAlH;wBACA,IAAAt2B,GACAk+B,GACAC,GACAC,GACAC;wBASA,QAAA/H,EAAAh1B;0BACA;4BACAtB,IAAA,QAAAs2B,EAAAt2B,UACAs2B,EAAAt2B,SACA,QAAAs2B,EAAA4G,QACA5G,EAAA4G,QAAA,IACA,MAEAlL,EAAA6K,WACA78B,IAAA,MAAAA,IAAA,UAAAA,IAAA,IAAAA;4BAEA;;0BACA;4BACAA,IAAA;4BACA;;0BACA;4BACAA,IAAAs2B,EAAAgI,SAAA,IACA,KACA;4BACA;;0BACA;4BACAt+B,IAAAs2B,EAAAiI,cAAA,IACA,KACA;;wBAsBA,OAhBAL,IAAA5H,EAAAkI,WAAA,OACAL,IAAA7H,EAAAmI,UAAA,OACAL,IAAA9H,EAAAoI,UAAA,QACAL,IAAAH,IAAAC,IAAAC;wBAGApM,EAAA2C,aAEA0J,KAAAD,IACKpM,EAAA6C,gBACLwJ,IAAA,IAIAr+B,IAAA,MAAAq+B,KAAA,KAAAr+B;;oBAMA,SAAAy9B,EAAAnH;wBACA,IAAAjJ,GAAAe,GAAAuQ,GAAAC,GAAAzI;wBAGA,YAAAG,EAAAuI,OAAA;4BAQA,KANAxR,IAAAiJ,EAAAuI,OACAzQ,IAAAkI,EAAAwI,OACA3I,IAAAnE,EAAApC,SAIAuG,WAAAnE,EAAAlxB,SAAAi+B,mBACA1R,KAAA8I,EAAA6I;4BACA5Q,KAAA+H,EAAA8I,WACA9I,IAAA,kBAAAA,IACAA,EAAA+I,eACA/I,EAAAttB;4BAqBA,OAjBA81B,IAAA3M,EAAApC,QAAAuP,aACAP,IAAA5M,EAAApC,QAAAwP,cACA/R,IAAAgS,KAAAC,MAAAjS,IAAAsR,IAAA3M,EAAAzY;4BACA6U,IAAAiR,KAAAC,MAAAlR,IAAAwQ,IAAA5M,EAAAnU,OAIAwP,IAAA,MAAAA,IAAA,IACAA,IAAA2E,EAAAzY,SAAA8T,IAAA2E,EAAAzY,OACA6U,IAAA,MAAAA,IAAA;4BACAA,IAAA4D,EAAAnU,SAAAuQ,IAAA4D,EAAAnU,OAIAwP,KAAA,IACAe,KAAA;gCAGAf;gCACAe;gCACA9sB,MAAAg1B,EAAAh1B,SAAAs8B,IACA,eACAtH,EAAAh1B;;;;oBA1QA,IAAA60B,IAAAz2B,KAAAkwB,SACAoC,IAAAtyB,MACAi+B,IAAA,IAEAC,IAAA,kBAAAl+B,KAAAgI,UACA,eACA;oBAwQA+oB,EAAA0F,GAAA,sBAAAG;wBACA,IAAAtE,EAAA8C,aA6BA,OA1BAwI,EAAAhH,IAGAtE,EAAAzxB,SAWAyxB,EAAA6C,eAAApE,EAAAuB,EAAAlxB,UAAA,aAAA+8B;wBAGA7L,EAAA0C,YACAjE,EAAAuB,EAAAlxB,UAAA,oBAAAy+B,EAAAjJ;4BAIA,OAHAgH,EAAAhH,IACAtE,EAAA6C,eAAAuB,EAAApE,EAAAlxB,UAAA,aAAA+8B,IACAzH,EAAApE,EAAAlxB,UAAA,WAAAy+B;4BACAlJ,EAAAC;4BAIAD,EAAAC;wBAOA7F,EAAA0F,GAAAyH,GAAA,SAAAtH;wBACA,IAAAtE,EAAA8C,iBACA9C,EAAA0C,YACA1C,EAAA4C,cACA5C,EAAAyC,aAEA,OADA6I,EAAAhH;wBACAD,EAAAC;wBAKA7F,EAAA0F,GAAAyH,GAAA,SAAAtH;wBACA,KAAAtE,EAAA8C,gBACA9C,EAAAqB,mBAMA,OALA,qBAAAiD,EAAAh1B,OACA0wB,EAAAwN,WAAAlJ,EAAAgI,SAAA,cAEAtM,EAAAwN,WAAAlJ,EAAAiI,cAAA;wBAEAlI,EAAAC;;mBAQA51B,EAAA+Q,UAAAvR,QACAQ,EAAA+Q,UAAAguB,cACA/+B,EAAA+Q,UAAAwf,UAAA;oBACAvxB,KAAAggC,cAIAhgC,KAAAigC,WACAC,cAAAlgC,KAAAigC,gBACAjgC,KAAAigC;oBAGAjgC,KAAA81B,YAAA,GACA91B,KAAA+1B,YAAA,GACA/1B,KAAAggC,aAAA,GACAhgC,KAAAoyB;oBAEApyB,KAAAuyB,UAAA,eACAvyB,KAAAyxB,QAAA,eACAzxB,KAAAkkB,MAAA;oBAEAlkB,KAAAkwB,QAAA/mB,cACAnJ,KAAAkwB,QAAA/mB,WAAAtD,YAAA7F,KAAAkwB,UAGAlwB,KAAA84B,KAAA;oBACA94B,KAAA84B,KAAA,UACA94B,KAAA84B,KAAA,WACA94B,KAAA84B,KAAA;mBAiBA93B,EAAA+Q,UAAA+f,UAAA,SAAA1S,GAAA8E;oBACA,IAAAyJ,GACAe,GACA5qB,GACAszB,GACA2C,GACAtC,GACAhY,GACA9M,GACAwtB,GACA1D,GACAC,GACA0D,GACAC,GACAxN;oBAeA,KAbA3O,IAAA9E,KAAApf,KAAAme,OAAA,MACA0U,IAAA7yB,KAAAkwB,QAAA/mB,YACA0pB,OAAAhtB,YAAA7F,KAAAkwB;oBAGAzQ,IAAAzf,KAAA6Z,MACA6U,IAAAtP,GAEA8E,KAAAlkB,KAAAq2B,MAAAryB,WACAhE,KAAAsgC,IAAA;oBACApc,IAAAlkB,KAAAq2B,MAAAryB,SAAA,IAGQ0qB,KAAAxK,GAAUwK,KAAA;wBAkBlB,KAjBA2R,IAAA3R,IAAA1uB,KAAAqzB,OAEA+D,IAAAp3B,KAAAq2B,MAAAgK,IACAtG,IAAA,IAQApM,IANAe,MAAA1uB,KAAA0uB,MACA1uB,KAAAszB,eACAtzB,KAAAqzB,UAAArzB,KAAAozB,UAAApzB,KAAAk0B,cACAl0B,KAAA6xB,gBAGA,IAFA7xB,KAAA2tB;wBAKAwS,IAAAngC,KAAAg2B,SACAlyB,IAAA,GAEUA,IAAA2b,GAAW3b,KAAA;4BAmGrB,QAlGA6O,IAAAykB,EAAAtzB,GAAA,IACA2zB,IAAAL,EAAAtzB,GAAA,IAEAA,MAAA6pB,MAAAhb,KAAA,IAEAA,MAAAwtB,MACAA,MAAAngC,KAAAg2B,YACA+D,KAAA;4BAEApnB,MAAA3S,KAAAg2B,YACArjB,OAAA,IACAonB,KAAA,kDAGAA,KADA/5B,KAAA8wB,WACA,kBAEA;4BAGA2L,IAAA,MAAA9pB,GACA+pB,IAAA/pB,KAAA,SACAytB,IAAAztB,KAAA,IAGA,IAAAytB,MACAp/B,EAAA28B,eAEA5D,KADA/5B,KAAA8wB,WACA,eAEA;4BAIA4L,IAAA,MAAAA,KAAA,KAIA,IAAA0D,MAEArG,KADA/5B,KAAA8wB,WACA,oBAEA;4BAKA,IAAAsP,MACApgC,KAAA8wB,WACAiJ,KAAA,gBAEA,IAAAqG,KACArG,MAAAnH,MAAA,QACAmH,KAAA,aAEAA,KAAA;4BAMA,IAAAqG,MACA3D,IAAA9pB,KAAA,SACA+pB,IAAA,MAAA/pB,GAGA,IAAAytB,KAAA1D,IAAA,MAAAA,KAAA,KAIA,KAAA0D,MAEArG,KADA/5B,KAAA8wB,WACA,iBAEA;4BAIA,QAAA2L,MAEA1C,KADA/5B,KAAA8wB,WACA,mBAAA2L,IAAA,MAEA,sBAAAz8B,KAAA0yB,OAAA+J,KAAA;4BAIA,QAAAC,MAEA3C,KADA/5B,KAAA8wB,WACA,mBAAA4L,IAAA,MAEA,WAAA18B,KAAA0yB,OAAAgK,KAAA;4BAIA3C,KAAA,SAKAtC;8BACA;gCACAsC,KAAA;gCACA;;8BACA;gCACAA,KAAA;gCACA;;8BACA;gCACAA,KAAA;gCACA;;8BACA;gCACAtC,KAAA,MACAsC,KAAA,YAEAvC,EAAAC,MAAA3zB,KACAi2B,KAAAtC;;4BAKA0I,IAAAxtB;;wBAGAwtB,MAAAngC,KAAAg2B,YACA+D,KAAA,YAGA/5B,KAAAyD,SAAAirB,GAAA3e,YAAAgqB;;oBAGAlH,OAAA5uB,YAAAjE,KAAAkwB;mBAGAlvB,EAAA+Q,UAAAwuB,eAAA;oBACAv/B,EAAAH,UAAAb,SACAA,KAAAszB,eAAA,GACAtzB,KAAA8xB,QAAA9xB,KAAA0uB,GAAA1uB,KAAA0uB;mBAGA1tB,EAAA+Q,UAAA2oB,aAAA;oBACA16B,KAAAszB,gBACAtzB,KAAAszB,cAAA,GACAtzB,KAAA8xB,QAAA9xB,KAAA0uB,GAAA1uB,KAAA0uB;mBAOA1tB,EAAA+Q,UAAAwrB,aAAA;oBACA,IAAAv9B,KAAAq6B,aAAA;wBACA,IAAA/H,IAAAtyB;wBACAA,KAAAwgC,WAAA;4BACAlO,EAAAiO;2BAEAvgC,KAAAigC,SAAAQ,EAAAzgC,KAAAwgC,UAAA;;mBAGAx/B,EAAA+Q,UAAA2uB,eAAA;oBACA1gC,KAAAq6B,eAAAr6B,KAAAigC,WACAC,cAAAlgC,KAAAigC,SACAjgC,KAAAigC,SAAAQ,EAAAzgC,KAAAwgC,UAAA;mBAGAx/B,EAAA+Q,UAAA4uB,SAAA;oBACA,IAAAN;sBAEArgC,KAAAozB,UAAApzB,KAAAw6B,eACAx6B,KAAAozB,QAAApzB,KAAAozB,QAAA,OACApzB,KAAAq2B,QAAAr2B,KAAAq2B,MAAAzD,QAAA5yB,KAAAozB,QAAApzB,KAAAme,QAAA;oBAGAne,KAAAqzB,QAAArzB,KAAAozB,OAGAiN,IAAArgC,KAAAozB,QAAApzB,KAAAme,OAAA,GAGAkiB,KAAArgC,KAAAme,OAAA,IAAAne,KAAA0zB;oBAEA2M,MAAArgC,KAAAq2B,MAAAryB,SAKAhE,KAAAq2B,MAAAhuB,KAAArI,KAAAs2B,eAGAt2B,KAAAq2B,MAAAsC,OAAA0H,GAAA,GAAArgC,KAAAs2B;oBAGA,MAAAt2B,KAAAyzB,cACA,MAAAzzB,KAAAozB,UACApzB,KAAAozB,SACApzB,KAAAqzB,QAAArzB,KAAAozB;oBAEApzB,KAAAq2B,MAAAsC,OAAA34B,KAAAozB,QAAApzB,KAAAyzB,WAAA,KAIAzzB,KAAA4gC,YAAA5gC,KAAAyzB;oBACAzzB,KAAA4gC,YAAA5gC,KAAA0zB;mBAGA1yB,EAAA+Q,UAAA+tB,aAAA,SAAAe;oBACA7gC,KAAAqzB,SAAAwN,GAEA7gC,KAAAqzB,QAAArzB,KAAAozB,QACApzB,KAAAqzB,QAAArzB,KAAAozB,QACGpzB,KAAAqzB,QAAA,MACHrzB,KAAAqzB,QAAA;oBAGArzB,KAAA8xB,QAAA,GAAA9xB,KAAAme,OAAA;mBAGAnd,EAAA+Q,UAAA0f,QAAA,SAAA9e;oBACA,IAEArN,GACAw7B,GACArJ,GAJAsB,IAAApmB,EAAA3O,QACAF,IAAA;oBAeA,KAVA9D,KAAAy1B,eAAAz1B,KAAA0uB,GACA1uB,KAAA01B,aAAA11B,KAAA0uB,GAEA1uB,KAAAozB,UAAApzB,KAAAqzB,UACArzB,KAAAqzB,QAAArzB,KAAAozB;oBACApzB,KAAA+gC,aAKQj9B,IAAAi1B,GAAOj1B,KAAA9D,KAAAghC,MAAAvJ,GAEf,QADAA,IAAA9kB,EAAA7O,IACA9D,KAAAO;sBACA,KAAAyzB;wBACA,QAAAyD;0BAOA;4BACAz3B,KAAAihC;4BACA;;0BAGA;0BACA;0BACA;4BACAjhC,KAAAuzB,eACAvzB,KAAA2tB,IAAA,IAKA3tB,KAAA0uB,KACA1uB,KAAA0uB,IAAA1uB,KAAA0zB,iBACA1zB,KAAA0uB;4BACA1uB,KAAA2gC;4BAEA;;0BAGA;4BACA3gC,KAAA2tB,IAAA;4BACA;;0BAGA;4BACA3tB,KAAA2tB,IAAA,KACA3tB,KAAA2tB;4BAEA;;0BAGA;4BACA3tB,KAAA2tB,IAAA3tB,KAAAkhC;4BACA;;0BAGA;4BACAlhC,KAAAmhC,UAAA;4BACA;;0BAGA;4BACAnhC,KAAAmhC,UAAA;4BACA;;0BAGA;4BACAnhC,KAAAO,QAAAg5B;4BACA;;0BAEA;4BAEA,IAAA9B,KAAA,QACAz3B,KAAA20B,WAAA30B,KAAA20B,QAAA8C,OACAA,IAAAz3B,KAAA20B,QAAA8C,KAGAz3B,KAAA2tB,KAAA3tB,KAAA6Z,SACA7Z,KAAA2tB,IAAA;4BACA3tB,KAAA0uB,KACA1uB,KAAA0uB,IAAA1uB,KAAA0zB,iBACA1zB,KAAA0uB,KACA1uB,KAAA2gC,YAIA3gC,KAAAq2B,MAAAr2B,KAAA0uB,IAAA1uB,KAAAozB,OAAApzB,KAAA2tB,OAAA3tB,KAAAi2B,SAAAwB;4BACAz3B,KAAA2tB,KACA3tB,KAAA4gC,YAAA5gC,KAAA0uB,IAEA8I,EAAAC,KAAA;gCAEA,IADAnyB,IAAAtF,KAAA0uB,IAAA1uB,KAAAozB,OACApzB,KAAA6Z,OAAA,KAAA7Z,KAAA2tB,KAAA3tB,KAAA6Z,MAAA;oCACA7Z,KAAAq2B,MAAA/wB,GAAAtF,KAAA2tB,IAAA,OAAA3tB,KAAAi2B,SAAA;oCACA;;gCAEAj2B,KAAAq2B,MAAA/wB,GAAAtF,KAAA2tB,OAAA3tB,KAAAi2B,SAAA,OACAj2B,KAAA2tB;;;wBAKA;;sBACA,KAAA4L;wBACA,QAAA9B;0BAEA;4BACAz3B,KAAAk2B,aACAl2B,KAAAm2B,eAAA,GACAn2B,KAAAO,QAAAi5B;4BACA;;0BAGA;4BACAx5B,KAAAk2B,aACAl2B,KAAAm2B,eAAA,GACAn2B,KAAAO,QAAAk5B;4BACA;;0BAGA;4BACAz5B,KAAAk2B,aACAl2B,KAAAoM,SAAA,IACApM,KAAAm2B,eAAA,IACAn2B,KAAAO,QAAAm5B;4BACA;;0BAGA;4BACA15B,KAAAO,QAAAo5B;4BACA;;0BAGA;4BACA35B,KAAAO,QAAAo5B;4BACA;;0BAGA;4BACA35B,KAAAoxB;4BACA;;0BAIA;4BACApxB,KAAA2tB,IAAA;;0BAEA;4BACA3tB,KAAAwS;4BACA;;0BAGA;4BACAxS,KAAAohC;4BACA;;0BAIA;4BAEAphC,KAAAmhC,UAAA,IACAnhC,KAAAqhC,YAAA,GAAArgC,EAAA8zB,SAAAwM,KACAthC,KAAAO,QAAAyzB,GACAlwB;4BACA;;0BAGA;0BACA;0BACA;0BACA;0BACA;0BACA;4BACA,QAAA2zB;8BACA;gCACAz3B,KAAA40B,WAAA;gCACA;;8BACA;gCACA50B,KAAA40B,WAAA;gCACA;;8BACA;gCACA50B,KAAA40B,WAAA;gCACA;;8BACA;gCACA50B,KAAA40B,WAAA;gCACA;;8BACA;gCACA50B,KAAA40B,WAAA;gCACA;;8BACA;gCACA50B,KAAA40B,WAAA;;4BAGA50B,KAAAO,QAAAo0B;4BACA;;0BAKA;4BACA30B,KAAA40B,WAAA,GACA50B,KAAAO,QAAAo0B,GACA7wB;4BACA;;0BAKA;4BACA;;0BAIA;4BACA;;0BAGA;4BACA9D,KAAAmhC,UAAA;4BACA;;0BAGA;4BACAnhC,KAAAmhC,UAAA;4BACA;;0BAGA;4BACAnhC,KAAAmhC,UAAA;4BACA;;0BAGA;4BACAnhC,KAAAmhC,UAAA;4BACA;;0BAGA;4BACAnhC,KAAAmhC,UAAA;4BACA;;0BAGA;4BACAnhC,KAAAuhC,cACAvhC,KAAAO,QAAAyzB;4BACA;;0BAGA;4BACAh0B,KAAAwhC,iBACAxhC,KAAAO,QAAAyzB;4BACA;;0BAGA;4BACAh0B,KAAAO,QAAAyzB,GACAlwB;4BACA;;0BAGA;4BACA9D,KAAAyhC;4BACA;;0BAGA;4BACAzhC,KAAAsgC,IAAA,8CACAtgC,KAAA2zB,qBAAA;4BACA3zB,KAAAO,QAAAyzB;4BACA;;0BAGA;4BACAh0B,KAAAsgC,IAAA,qCACAtgC,KAAA2zB,qBAAA,GACA3zB,KAAAO,QAAAyzB;4BACA;;0BAEA;4BACAh0B,KAAAO,QAAAyzB,GACAh0B,KAAA0hC,MAAA,4BAAAjK;;wBAGA;;sBAEA,KAAA9C;wBACA,QAAA8C;0BACA;4BACAqJ,IAAA9/B,EAAA8zB,SAAA6M;4BACA;;0BACA;4BACAb,IAAA9/B,EAAA8zB,SAAA8M;4BACA;;0BACA;4BACAd,IAAA9/B,EAAA8zB,SAAAwM;4BACA;;0BACA;4BACAR,IAAA9/B,EAAA8zB,SAAA+M;4BACA;;0BACA;0BACA;4BACAf,IAAA9/B,EAAA8zB,SAAAgN;4BACA;;0BACA;4BACAhB,IAAA9/B,EAAA8zB,SAAAiN;4BACA;;0BACA;4BACAjB,IAAA9/B,EAAA8zB,SAAAkN;4BACA;;0BACA;4BACAlB,IAAA9/B,EAAA8zB,SAAAmN;4BACA;;0BACA;4BACAnB,IAAA9/B,EAAA8zB,SAAAoN;4BACA;;0BACA;0BACA;4BACApB,IAAA9/B,EAAA8zB,SAAAqN;4BACA;;0BACA;4BACArB,IAAA9/B,EAAA8zB,SAAAsN;4BACA;;0BACA;0BACA;4BACAtB,IAAA9/B,EAAA8zB,SAAAuN;4BACA;;0BACA;4BACAvB,IAAA9/B,EAAA8zB,SAAAwN;4BACA;;0BACA;4BACAxB,IAAA9/B,EAAA8zB,SAAAyN,UACAz+B;4BACA;;0BACA;4BACAg9B,IAAA9/B,EAAA8zB,SAAAwM;;wBAGAthC,KAAAqhC,YAAArhC,KAAA40B,UAAAkM,IACA9gC,KAAA40B,WAAA,MACA50B,KAAAO,QAAAyzB;wBACA;;sBAEA,KAAAyF;wBAIA,YAAAz5B,KAAAghC,OAAA,SAAAvJ,KAAA,QAAAA,GAAA;4BAWA,QAVA,QAAAz3B,KAAAghC,QACA,mBAAAhhC,KAAAm2B,eACAn2B,KAAAm2B,eAAAn2B,KAAAm2B,aAAAvD,MAAA,SACa,mBAAA5yB,KAAAm2B,iBACbn2B,KAAAm2B,gBAAAn2B,KAAAm2B,gBAAA,IAAAqM,WAAA;4BAIAxiC,KAAAk2B,OAAA7tB,KAAArI,KAAAm2B,eAEAn2B,KAAAk2B,OAAA;8BACA;8BACA;8BACA;gCACAl2B,KAAAk2B,OAAA,OACAl2B,KAAAH,QAAAG,KAAAk2B,OAAA,IACAl2B,KAAAyiC,YAAAziC,KAAAH;gCAEA;;8BACA;gCAEA;;8BACA;8BACA;gCAEA;;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;gCAEA;;8BACA;gCAEA;;8BACA;gCAEA;;8BACA;gCAEA;;8BACA;gCAEA;;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;8BACA;4BAKAG,KAAAk2B,aACAl2B,KAAAm2B,eAAA,GACAn2B,KAAAO,QAAAyzB;+BAEAh0B,KAAAk2B,OAAAlyB,SASAhE,KAAAm2B,gBAAAsB,IARAA,KAAA,OAAAA,KAAA,MACAz3B,KAAAm2B,eACA,KAAAn2B,KAAAm2B,eAAAsB,EAAA+K,WAAA,UACa,QAAA/K,MACbz3B,KAAAk2B,OAAA7tB,KAAArI,KAAAm2B;wBACAn2B,KAAAm2B,eAAA;wBAMA;;sBAEA,KAAAqD;wBAEA,YAAA/B,KAAA,QAAAA,KAAA,QAAAA,GAAA;4BACAz3B,KAAAoM,SAAAqrB;4BACA;;wBAIA,IAAAA,KAAA,OAAAA,KAAA;4BACAz3B,KAAAm2B,eAAA,KAAAn2B,KAAAm2B,eAAAsB,EAAA+K,WAAA;4BACA;;wBAIA,YAAA/K,KAAA,QAAAA,KAAA,QAAAA,KAAA,QAAAA,GAAA;4BACAz3B,KAAAo2B,UAAAqB;4BACA;;wBAOA,IAJAz3B,KAAAk2B,OAAA7tB,KAAArI,KAAAm2B,eACAn2B,KAAAm2B,eAAA,GAGA,QAAAsB,GAAqB;wBAIrB,QAFAz3B,KAAAO,QAAAyzB,GAEAyD;0BAGA;4BACAz3B,KAAA0iC,SAAA1iC,KAAAk2B;4BACA;;0BAIA;4BACAl2B,KAAA2iC,WAAA3iC,KAAAk2B;4BACA;;0BAIA;4BACAl2B,KAAA4iC,cAAA5iC,KAAAk2B;4BACA;;0BAIA;4BACAl2B,KAAA6iC,eAAA7iC,KAAAk2B;4BACA;;0BAIA;4BACAl2B,KAAA8iC,UAAA9iC,KAAAk2B;4BACA;;0BAGA;4BACAl2B,KAAA+iC,eAAA/iC,KAAAk2B;4BACA;;0BAGA;4BACAl2B,KAAAgjC,YAAAhjC,KAAAk2B;4BACA;;0BAGA;4BACAl2B,KAAAoM,UACApM,KAAAijC,eAAAjjC,KAAAk2B;4BAEA;;0BAGA;4BACAl2B,KAAAoM,UACApM,KAAAkjC,aAAAljC,KAAAk2B;4BAEA;;0BAQA;4BACAl2B,KAAAmjC,YAAAnjC,KAAAk2B;4BACA;;0BAIA;4BACAl2B,KAAAojC,eAAApjC,KAAAk2B;4BACA;;0BAIA;4BACAl2B,KAAAqjC,oBAAArjC,KAAAk2B;4BACA;;0BAIA;4BACAl2B,KAAAsjC,mBAAAtjC,KAAAk2B;4BACA;;0BAIA;4BACAl2B,KAAAujC,YAAAvjC,KAAAk2B;4BACA;;0BAIA;4BACAl2B,KAAAwjC,YAAAxjC,KAAAk2B;4BACA;;0BAIA;4BACAl2B,KAAAyjC,YAAAzjC,KAAAk2B;4BACA;;0BAIA;4BACAl2B,KAAA0jC,WAAA1jC,KAAAk2B;4BACA;;0BAIA;4BACAl2B,KAAA2jC,gBAAA3jC,KAAAk2B;4BACA;;0BAIA;4BACAl2B,KAAA4jC,kBAAA5jC,KAAAk2B;4BACA;;0BAMA;4BACAl2B,KAAA6jC,qBAAA7jC,KAAAk2B;4BACA;;0BAIA;4BACAl2B,KAAA8jC,gBAAA9jC,KAAAk2B;4BACA;;0BAGA;4BACAl2B,KAAA+jC,kBAAA/jC,KAAAk2B;4BACA;;0BAKA;4BACAl2B,KAAAgkC,WAAAhkC,KAAAk2B;4BACA;;0BAIA;4BACAl2B,KAAAikC,QAAAjkC,KAAAk2B;4BACA;;0BAIA;4BACAl2B,KAAAkkC,UAAAlkC,KAAAk2B;4BACA;;0BAMA;4BACAl2B,KAAAmkC,gBAAAnkC,KAAAk2B;4BACA;;0BAIA;4BACAl2B,KAAAuhC,WAAAvhC,KAAAk2B;4BACA;;0BAIA;4BACAl2B,KAAAwhC,cAAAxhC,KAAAk2B;4BACA;;0BAQA;4BACAl2B,KAAAokC,iBAAApkC,KAAAk2B;4BACA;;0BAGA;4BACAl2B,KAAAqkC,SAAArkC,KAAAk2B;4BACA;;0BAKA;4BASAl2B,KAAAk2B,OAAAlyB,SAAA,MAAAhE,KAAAoM,UACApM,KAAAskC,WAAAtkC,KAAAk2B;4BAEA;;0BAIA;4BACAl2B,KAAAukC,kBAAAvkC,KAAAk2B;4BACA;;0BAGA;4BACAl2B,KAAAwkC,yBAAAxkC,KAAAk2B;4BACA;;0BAGA;4BACAl2B,KAAAykC,SAAAzkC,KAAAk2B;4BACA;;0BAmCA;4BACA,QAAAl2B,KAAAoM;8BAIA;gCACApM,KAAA0kC,UAAA1kC,KAAAk2B;;4BAeA;;0BA2IA;4BACAl2B,KAAA0hC,MAAA,yBAAAjK;;wBAIAz3B,KAAAoM,SAAA,IACApM,KAAAo2B,UAAA;wBACA;;sBAEA,KAAAsD;wBACA,YAAA15B,KAAAghC,OAAA,SAAAvJ,KAAA,QAAAA,GAAA;4BAEA,iBAAAz3B,KAAAoM,UAQA,QAAAqrB,GAAA;gCACAz3B,KAAAm2B,gBAAAsB;gCACA;;4BAIA,QAAAz3B,KAAAghC,QACA,mBAAAhhC,KAAAm2B,eACAn2B,KAAAm2B,eAAAn2B,KAAAm2B,aAAAvD,MAAA,SACa,mBAAA5yB,KAAAm2B,iBACbn2B,KAAAm2B,gBAAAn2B,KAAAm2B,gBAAA,IAAAqM,WAAA;4BAIAxiC,KAAAk2B,OAAA7tB,KAAArI,KAAAm2B;4BAEA,IAAAwO,IAAA3kC,KAAAk2B,OAAAl2B,KAAAk2B,OAAAlyB,SAAA;4BAEA,QAAAhE,KAAAoM;8BAGA,KAAAwtB;gCACA55B,KAAA84B,KAAA;oCACA8L,UAAA,MAAA5kC,KAAAk2B,OAAA;oCACA2O,YAAA,MAAA7kC,KAAAk2B,OAAA;oCACA4O,UAAA,MAAA9kC,KAAAk2B,OAAA;oCACA6O,cAAA,MAAA/kC,KAAAk2B,OAAA;oCACA8O,UAAAhlC,KAAAk2B,OAAA,SAAA5G,MAAA,KAAuD7c,IAAA,SAAAwyB;wCAEvD,OADAA,MAAA3V,MAAA;4CAEA4V,SAAAD,EAAA;4CACAE,aAAAF,EAAA;;;;gCAIA;;8BAKA;gCACA,IAAAjU,IAAA;gCAEA,QAAA2T;kCAGA;oCACAA,IAAA,OACA3T,IAAA;oCACA;;kCAIA;oCACA2T,IAAA,UACA3T,IAAA;oCACA;;kCAIA;oCACA2T,IAAA,MACA3kC,KAAAyzB,YAAA,KACA,OACAzzB,KAAA0zB,eAAA,KACA,KACA1C,IAAA;oCACA;;kCAIA;oCAIAA,IAAA;oCACA;;kCAEA;oCACAhxB,KAAA0hC,MAAA,uBAAAiD,IACA3T,IAAA;;gCAIAhxB,KAAAixB,KAAA,OAAAD,IAAA,OAAA2T,IAAA;gCACA;;8BAIA;gCACA3kC,KAAA84B,KAAA;oCACAtxB,MAAAxH,KAAAk2B,OAAA;;gCAEA;;8BAOA;gCACA,IAAAlF,KAAA;gCACAhxB,KAAAixB,KAAA,QAAAD,IAAA,OAAA2T,IAAA;gCACA;;8BAKA;gCACA3kC,KAAA84B,KAAA,eAAA6L;gCACA;;8BAEA;gCACA3kC,KAAA0hC,MAAA,2BAAAiD;;4BAIA3kC,KAAAm2B,eAAA,GACAn2B,KAAAoM,SAAA,IACApM,KAAAO,QAAAyzB;+BAEAh0B,KAAAm2B,gBAAAsB,GACAz3B,KAAAoM,WACA,aAAsB1F,KAAA1G,KAAAm2B,iBACtBn2B,KAAAoM,SAAAwtB;wBACA55B,KAAAk2B,SAAAl2B,KAAAm2B,aAAA7G,MAAA,QAAuD7c,IAAA,SAAA2yB;4BACvD,OAAAA,EAAAphC,UACAohC,IADA;2BAEexS,MAAA,QACf5yB,KAAAm2B,eAAA,OACa,gBAAAzvB,KAAA1G,KAAAm2B,iBACb,YAAyBzvB,KAAA1G,KAAAm2B,mBACzBn2B,KAAAoM,SAAApM,KAAAm2B;wBACAn2B,KAAAm2B,eAAA;wBAIA;;sBAEA,KAAAwD;yBAEA,QAAA35B,KAAAghC,OAAA,SAAAvJ,KAAA,QAAAA,OACAz3B,KAAAO,QAAAyzB;;oBASA,OAHAh0B,KAAA4gC,YAAA5gC,KAAA0uB,IACA1uB,KAAA8xB,QAAA9xB,KAAAy1B,cAAAz1B,KAAA01B;qBAEA;mBAGA10B,EAAA+Q,UAAAszB,UAAA,SAAA1yB;oBACA,OAAA3S,KAAAyxB,MAAA9e,IAAA;mBAGA3R,EAAA+Q,UAAAmS,MAAA,SAAAvR;oBACA,IAAA2yB,KAAA;oBAKA,OAJA3yB,MACA2yB,IAAAtlC,KAAAyxB,MAAA9e,KAEA3S,KAAA+/B,eACAuF;mBAGAtkC,EAAA+Q,UAAAwzB,SAAA,eAIAvkC,EAAA+Q,UAAAyzB,QAAA,eAMAxkC,EAAA+Q,UAAAypB,UAAA,SAAA5E;oBACA,IACAlxB,GADA4sB,IAAAtyB;oBAGA,QAAA42B,EAAAsO;sBAEA;wBACA,IAAAtO,EAAA6O,QAAA;4BACA//B,IAAA;4BACA;;wBAEA,IAAAkxB,EAAAkI,UAAA;4BACAp5B,IAAA;4BACA;;wBAEAA,IAAA;wBACA;;sBAEA;wBACA,IAAAkxB,EAAAkI,UAAA;4BACAp5B,IAAA;4BACA;;wBAEAA,IAAA;wBACA;;sBAEA;wBACAA,IAAA;wBACA;;sBAEA;wBACAA,IAAA;wBACA;;sBAEA;wBACAA,IAAA;wBACA;;sBAEA;wBACA,IAAA1F,KAAA4zB,mBAAA;4BACAluB,IAAA;4BAEA;;wBAEA,IAAAkxB,EAAAoI,SAAA;4BACAt5B,IAAA;4BACA;;wBAEAA,IAAA;wBACA;;sBAEA;wBACA,IAAA1F,KAAA4zB,mBAAA;4BACAluB,IAAA;4BACA;;wBAEA,IAAAkxB,EAAAoI,SAAA;4BACAt5B,IAAA;4BACA;;wBAEAA,IAAA;wBACA;;sBAEA;wBACA,IAAA1F,KAAA4zB,mBAAA;4BACAluB,IAAA;4BACA;;wBAEA,IAAAkxB,EAAAoI,SAEA,OADAh/B,KAAA8/B,YAAA,IACAnJ,EAAAC;wBAEAlxB,IAAA;wBAEA;;sBAEA;wBACA,IAAA1F,KAAA4zB,mBAAA;4BACAluB,IAAA;4BACA;;wBAEA,IAAAkxB,EAAAoI,SAEA,OADAh/B,KAAA8/B,WAAA,IACAnJ,EAAAC;wBAEAlxB,IAAA;wBAEA;;sBAEA;wBACAA,IAAA;wBACA;;sBAEA;wBACAA,IAAA;wBACA;;sBAEA;wBACA,IAAA1F,KAAA2zB,mBAAA;4BACAjuB,IAAA;4BACA;;wBAEAA,IAAA;wBACA;;sBAEA;wBACA,IAAA1F,KAAA2zB,mBAAA;4BACAjuB,IAAA;4BACA;;wBAEAA,IAAA;wBACA;;sBAEA;wBACA,IAAAkxB,EAAAkI,UAEA,OADA9+B,KAAA8/B,aAAA9/B,KAAAme,OAAA,KACAwY,EAAAC;wBAEAlxB,IAAA;wBAEA;;sBAEA;wBACA,IAAAkxB,EAAAkI,UAEA,OADA9+B,KAAA8/B,WAAA9/B,KAAAme,OAAA,IACAwY,EAAAC;wBAEAlxB,IAAA;wBAEA;;sBAEA;wBACAA,IAAA;wBACA;;sBAEA;wBACAA,IAAA;wBACA;;sBAEA;wBACAA,IAAA;wBACA;;sBAEA;wBACAA,IAAA;wBACA;;sBAEA;wBACAA,IAAA;wBACA;;sBAEA;wBACAA,IAAA;wBACA;;sBAEA;wBACAA,IAAA;wBACA;;sBAEA;wBACAA,IAAA;wBACA;;sBAEA;wBACAA,IAAA;wBACA;;sBAEA;wBACAA,IAAA;wBACA;;sBAEA;wBACAA,IAAA;wBACA;;sBAEA;wBACAA,IAAA;wBACA;;sBACA;wBAEA,IAAAkxB,EAAAoI,SACA,IAAApI,EAAAsO,WAAA,MAAAtO,EAAAsO,WAAA;4BAEA,IAAAllC,KAAA6wB,eACA7wB,KAAAi0B,eAAAj0B,KAAAk0B,cAAA,OAAA0C,EAAAsO,SAEA,OADAllC,KAAA0lC;4BACA/O,EAAAC;4BAIA,IAAA52B,KAAAi0B,cAAA,OAAA2C,EAAAsO,SAEA,YADAllC,KAAA2lC;4BAIA,KAAA3lC,KAAAi0B,cAAAj0B,KAAAk0B,eAAA,OAAA0C,EAAAsO,SAMA,aALAllC,KAAAm0B,cACA4H,EAAA;gCACAzJ,EAAAsT;+BACe;4BAIflgC,IAAA44B,EAAAC,aAAA3H,EAAAsO,UAAA;+BACS,OAAAtO,EAAAsO,UAETx/B,IAAA44B,EAAAC,aAAA,KACS3H,EAAAsO,WAAA,MAAAtO,EAAAsO,WAAA,KAETx/B,IAAA44B,EAAAC,aAAA3H,EAAAsO,UAAA,WACS,OAAAtO,EAAAsO,UAETx/B,IAAA44B,EAAAC,aAAA,OACS,QAAA3H,EAAAsO,UAETx/B,IAAA44B,EAAAC,aAAA,MACS,QAAA3H,EAAAsO,YAETx/B,IAAA44B,EAAAC,aAAA,WAEO3H,EAAA6O,WACP7O,EAAAsO,WAAA,MAAAtO,EAAAsO,WAAA,KACAx/B,IAAA,MAAA44B,EAAAC,aAAA3H,EAAAsO,UAAA,MACS,QAAAtO,EAAAsO,UACTx/B,IAAA,OACSkxB,EAAAsO,WAAA,MAAAtO,EAAAsO,WAAA,OACTx/B,IAAA,OAAAkxB,EAAAsO,UAAA;;oBAMA,QAAAx/B,MAEA1F,KAAAi0B,cACAj0B,KAAA2lC,eACAhP,EAAAC,MAGA52B,KAAAk0B,cACAl0B,KAAA6lC,UAAAjP,GAAAlxB;oBACAixB,EAAAC,OAGA52B,KAAA84B,KAAA,WAAAlC,IACA52B,KAAA84B,KAAA,OAAApzB,GAAAkxB,IAEA52B,KAAA06B,cACA16B,KAAAuyB,QAAA7sB;oBAEAixB,EAAAC;mBAGA51B,EAAA+Q,UAAAovB,YAAA,SAAAnH;oBACAh6B,KAAA60B,SAAAmF,GACAh6B,KAAA20B,UAAA30B,KAAA80B,SAAAkF;mBAGAh5B,EAAA+Q,UAAAsvB,cAAA,SAAArH,GAAArF;oBACA30B,KAAA80B,SAAAkF,KAAArF,GACA30B,KAAA60B,WAAAmF,MACAh6B,KAAA20B;mBAIA3zB,EAAA+Q,UAAA0pB,WAAA,SAAA7E;oBACA,IAAAlxB;oBAIA,IAFAixB,EAAAC,IAEAA,EAAAkP,UACApgC,IAAAkxB,EAAAkP,eACG,YAAAlP,EAAA4G,OACH93B,IAAAkxB,EAAAsO,cACG;wBAAA,UAAAtO,EAAA4G,SAAA,MAAA5G,EAAAkP,UAGH;wBAFApgC,IAAAkxB,EAAA4G;;oBAKA,UAAA93B,KAAAkxB,EAAAoI,WAAApI,EAAA6O,UAAA7O,EAAAmI,aAEAr5B,IAAA44B,EAAAC,aAAA74B,IAEA1F,KAAAi0B,cACAj0B,KAAA2lC;oBACA3lC,KAAA+lC,UAAAnP,GAAAlxB,KACA,KAGA1F,KAAAk0B,cACAl0B,KAAA6lC,UAAAjP,GAAAlxB,KACA,MAGA1F,KAAA84B,KAAA,YAAApzB,GAAAkxB;oBACA52B,KAAA84B,KAAA,OAAApzB,GAAAkxB,IAEA52B,KAAA06B,cACA16B,KAAAuyB,QAAA7sB,KAEA;mBAGA1E,EAAA+Q,UAAAkf,OAAA,SAAAte;oBACA,IAAA2f,IAAAtyB;oBAEAA,KAAAwzB,SACAuI,EAAA;wBACAzJ,EAAAC,QAAAD,EAAAkB,QACAlB,EAAAkB,QAAA;uBACK,IAGLxzB,KAAAwzB,SAAA7gB;mBAGA3R,EAAA+Q,UAAAkvB,OAAA;oBAEA,IADAjhC,KAAA84B,KAAA,SACA94B,KAAAs6B,YAAA;wBACA,IAAAhI,IAAAtyB;wBACAA,KAAAkwB,QAAAlkB,MAAAg6B,cAAA,SACAjK,EAAA;4BACAzJ,EAAApC,QAAAlkB,MAAAg6B,cAAA;2BACG,KACHhmC,KAAAu6B,aAAAv6B,KAAAa;;mBAGAG,EAAA+Q,UAAAuuB,MAAA;oBACA,IAAAtgC,KAAAy6B,SACAz6B,KAAAgI,QAAAi+B,WAAAjmC,KAAAgI,QAAAi+B,QAAA3F,KAAA;wBACA,IAAA3uB,IAAAtM,MAAA0M,UAAA6gB,MAAA10B,KAAAgR;wBACAlP,KAAAgI,QAAAi+B,QAAA3F,IAAArxB,MAAAjP,KAAAgI,QAAAi+B,SAAAt0B;;mBAGA3Q,EAAA+Q,UAAA2vB,QAAA;oBACA,IAAA1hC,KAAAy6B,SACAz6B,KAAAgI,QAAAi+B,WAAAjmC,KAAAgI,QAAAi+B,QAAAvE,OAAA;wBACA,IAAA/vB,IAAAtM,MAAA0M,UAAA6gB,MAAA10B,KAAAgR;wBACAlP,KAAAgI,QAAAi+B,QAAAvE,MAAAzyB,MAAAjP,KAAAgI,QAAAi+B,SAAAt0B;;mBAGA3Q,EAAA+Q,UAAAof,SAAA,SAAAxD,GAAAe;oBACA,IAAA0I,GACAX,GACA3yB,GACAwB,GACAmyB;oBAOA,IALA9J,IAAA,MAAAA,IAAA,IACAe,IAAA,MAAAA,IAAA,IAGAppB,IAAAtF,KAAA6Z,MACAvU,IAAAqoB,GAGA,KAFA8J,MAAAz3B,KAAAg2B,SAAA;oBACAlyB,IAAA9D,KAAAq2B,MAAAryB,QACAF,OACA,MAAA9D,KAAAq2B,MAAAvyB,GAAAE,SAAA2pB,KACA3tB,KAAAq2B,MAAAvyB,GAAAuE,KAAAovB,SAGG,IAAAnyB,IAAAqoB,GAEH,KADA7pB,IAAA9D,KAAAq2B,MAAAryB,QACAF,OACA,MAAA9D,KAAAq2B,MAAAvyB,GAAAE,SAAA2pB,KACA3tB,KAAAq2B,MAAAvyB,GAAA6Q;oBAUA,IANA3U,KAAAw2B,WAAAlxB,IACAtF,KAAA6Z,OAAA8T,GACA3tB,KAAAmzB,UAAAxF,GAGAroB,IAAAtF,KAAAme,MACA7Y,IAAAopB,GAEA,KADA+H,IAAAz2B,KAAAkwB,SACA5qB,MAAAopB,KACA1uB,KAAAq2B,MAAAryB,SAAA0qB,IAAA1uB,KAAAozB,SACApzB,KAAAq2B,MAAAhuB,KAAArI,KAAAs2B;oBAEAt2B,KAAAyD,SAAAO,SAAA0qB,MACA0I,IAAAp3B,KAAAoB,SAAAL,cAAA,QACA01B,EAAAxyB,YAAAmzB;oBACAp3B,KAAAyD,SAAA4E,KAAA+uB,UAGG,IAAA9xB,IAAAopB,GACH,MAAAppB,MAAAopB,KAIA,IAHA1uB,KAAAq2B,MAAAryB,SAAA0qB,IAAA1uB,KAAAozB,SACApzB,KAAAq2B,MAAA1hB;oBAEA3U,KAAAyD,SAAAO,SAAA0qB,GAAA;wBAEA,IADA+H,IAAAz2B,KAAAyD,SAAAkR,QACA8hB,GAAA;wBACAA,EAAAttB,WAAAtD,YAAA4wB;;oBAIAz2B,KAAAme,OAAAuQ,GAGA1uB,KAAA0uB,WAAA1uB,KAAA0uB,QAAA,IACA1uB,KAAA2tB,WAAA3tB,KAAA2tB,QAAA;oBAEA3tB,KAAAyzB,YAAA,GACAzzB,KAAA0zB,eAAAhF,IAAA,GAEA1uB,KAAA8xB,QAAA,GAAA9xB,KAAAme,OAAA,IAMAne,KAAAg0B,SAAA;oBAGAh0B,KAAA84B,KAAA;mBAGA93B,EAAA+Q,UAAA6uB,cAAA,SAAAlS;oBACAA,IAAA1uB,KAAAy1B,iBAAAz1B,KAAAy1B,eAAA/G,IACAA,IAAA1uB,KAAA01B,eAAA11B,KAAA01B,aAAAhH;mBASA1tB,EAAA+Q,UAAAgvB,WAAA;oBACA/gC,KAAAy1B,eAAA,GACAz1B,KAAA01B,aAAA11B,KAAAme,OAAA;mBAGAnd,EAAA+Q,UAAAykB,aAAA,SAAA1yB;oBAUA,KATA,QAAAA,IACA9D,KAAAu2B,KAAAzyB,OACAA,IAAA9D,KAAAkmC,SAAApiC,OAGA9D,KAAAu2B,WACAzyB,IAAA,IAGQA,IAAA9D,KAAA6Z,MAAe/V,KAAA,GACvB9D,KAAAu2B,KAAAzyB,MAAA;mBAIA9C,EAAA+Q,UAAAm0B,WAAA,SAAAvY;oBAEA,KADA,QAAAA,UAAA3tB,KAAA2tB,KACA3tB,KAAAu2B,OAAA5I,UAAA;oBACA,OAAAA,KAAA3tB,KAAA6Z,OACA7Z,KAAA6Z,OAAA,IACA8T,IAAA,QAAAA;mBAGA3sB,EAAA+Q,UAAAmvB,WAAA,SAAAvT;oBAEA,KADA,QAAAA,UAAA3tB,KAAA2tB,KACA3tB,KAAAu2B,OAAA5I,UAAA3tB,KAAA6Z;oBACA,OAAA8T,KAAA3tB,KAAA6Z,OACA7Z,KAAA6Z,OAAA,IACA8T,IAAA,QAAAA;mBAIA3sB,EAAA+Q,UAAAo0B,YAAA;oBAEA,OAAAnmC,KAAAg2B,WAAA,YAAAh2B,KAAAi2B;mBAGAj1B,EAAA+Q,UAAAq0B,aAAA,SAAAzY,GAAAe;oBAKA,KAJA,IAAA0I,IAAAp3B,KAAAq2B,MAAAr2B,KAAAozB,QAAA1E,IACA+I,MAAAz3B,KAAAmmC,aAAA,OAGQxY,IAAA3tB,KAAA6Z,MAAe8T,KACvByJ,EAAAzJ,KAAA8J;oBAGAz3B,KAAA4gC,YAAAlS;mBAGA1tB,EAAA+Q,UAAAs0B,YAAA,SAAA1Y,GAAAe;oBACA,IAAA0I,IAAAp3B,KAAAq2B,MAAAr2B,KAAAozB,QAAA1E,IACA+I,MAAAz3B,KAAAmmC,aAAA;oBAGA,KADAxY,KACAA,OAAAyJ,EAAAzJ,KAAA8J;oBAEAz3B,KAAA4gC,YAAAlS;mBAGA1tB,EAAA+Q,UAAAu0B,YAAA,SAAA5X;oBACA1uB,KAAAomC,WAAA,GAAA1X;mBAGA1tB,EAAA+Q,UAAAukB,YAAA,SAAAiQ;oBASA,KARA,IAAApG,IAAAoG,IACAvmC,KAAAmmC,cACAnmC,KAAAg2B,SAEAyB,MAAA0I,GAAA,OACA/I,QACAtzB,IAAA,GAEQA,IAAA9D,KAAA6Z,MAAe/V,KACvBszB,EAAAtzB,KAAA2zB;oBAGA,OAAAL;mBAGAp2B,EAAA+Q,UAAA0lB,KAAA,SAAA8O;oBACA,OAAAA,MACAvmC,KAAAmmC,aAAA,UACAnmC,KAAAg2B,SAAA;mBAGAh1B,EAAA+Q,UAAA3N,KAAA,SAAAwsB;oBACA,IAAAppB,IAAAxH,KAAAo6B;oBACA,cAAA5yB,IAAA,IAAArD,QAAAysB;mBAGA5vB,EAAA+Q,UAAAwgB,UAAA,SAAA5f;oBACA3S,KAAA84B,KAAA,QAAAnmB;mBAGA3R,EAAA+Q,UAAA0wB,cAAA,SAAA5iC;oBACAG,KAAA84B,KAAA,SAAAj5B;mBAQAmB,EAAA+Q,UAAAS,QAAA;oBACAxS,KAAA0uB,KACA1uB,KAAA0uB,IAAA1uB,KAAA0zB,iBACA1zB,KAAA0uB,KACA1uB,KAAA2gC,WAEA3gC,KAAAO,QAAAyzB;mBAIAhzB,EAAA+Q,UAAAqvB,eAAA;oBACA,IAAA97B;oBACAtF,KAAA0uB,KACA1uB,KAAA0uB,IAAA1uB,KAAAyzB,cACAzzB,KAAA0uB,KAIA1uB,KAAAq2B,MAAAsC,OAAA34B,KAAA0uB,IAAA1uB,KAAAozB,OAAA,GAAApzB,KAAAs2B,WAAA;oBACAhxB,IAAAtF,KAAAme,OAAA,IAAAne,KAAA0zB,cACA1zB,KAAAq2B,MAAAsC,OAAA34B,KAAAme,OAAA,IAAAne,KAAAozB,QAAA9tB,IAAA;oBAEAtF,KAAA4gC,YAAA5gC,KAAAyzB,YACAzzB,KAAA4gC,YAAA5gC,KAAA0zB,gBAEA1zB,KAAAO,QAAAyzB;mBAIAhzB,EAAA+Q,UAAAqf,QAAA;oBACApxB,KAAA2xB,QAAAxT,OAAAne,KAAAme,MACAne,KAAA2xB,QAAA9X,OAAA7Z,KAAA6Z,MACA7Y,EAAA9C,KAAA8B,WAAA2xB;oBACA3xB,KAAA8xB,QAAA,GAAA9xB,KAAAme,OAAA;mBAIAnd,EAAA+Q,UAAA0vB,SAAA;oBACAzhC,KAAAu2B,KAAAv2B,KAAA2tB,MAAA,GACA3tB,KAAAO,QAAAyzB;mBASAhzB,EAAA+Q,UAAA2wB,WAAA,SAAAxM;oBACA,IAAAsQ,IAAAtQ,EAAA;oBACAsQ,IAAA,MAAAA,IAAA,IACAxmC,KAAA0uB,KAAA8X,GACAxmC,KAAA0uB,IAAA,MAAA1uB,KAAA0uB,IAAA;mBAKA1tB,EAAA+Q,UAAA4wB,aAAA,SAAAzM;oBACA,IAAAsQ,IAAAtQ,EAAA;oBACAsQ,IAAA,MAAAA,IAAA,IACAxmC,KAAA0uB,KAAA8X,GACAxmC,KAAA0uB,KAAA1uB,KAAAme,SACAne,KAAA0uB,IAAA1uB,KAAAme,OAAA;mBAMAnd,EAAA+Q,UAAA6wB,gBAAA,SAAA1M;oBACA,IAAAsQ,IAAAtQ,EAAA;oBACAsQ,IAAA,MAAAA,IAAA,IACAxmC,KAAA2tB,KAAA6Y,GACAxmC,KAAA2tB,KAAA3tB,KAAA6Z,SACA7Z,KAAA2tB,IAAA3tB,KAAA6Z,OAAA;mBAMA7Y,EAAA+Q,UAAA8wB,iBAAA,SAAA3M;oBACA,IAAAsQ,IAAAtQ,EAAA;oBACAsQ,IAAA,MAAAA,IAAA,IACAxmC,KAAA2tB,KAAA6Y,GACAxmC,KAAA2tB,IAAA,MAAA3tB,KAAA2tB,IAAA;mBAKA3sB,EAAA+Q,UAAA+wB,YAAA,SAAA5M;oBACA,IAAAmK,GAAAoG;oBAEApG,IAAAnK,EAAA,QAGAuQ,IADAvQ,EAAAlyB,UAAA,IACAkyB,EAAA,SAEA,GAGAmK,IAAA,IACAA,IAAA,IACGA,KAAArgC,KAAAme,SACHkiB,IAAArgC,KAAAme,OAAA;oBAGAsoB,IAAA,IACAA,IAAA,IACGA,KAAAzmC,KAAA6Z,SACH4sB,IAAAzmC,KAAA6Z,OAAA,IAGA7Z,KAAA2tB,IAAA8Y,GACAzmC,KAAA0uB,IAAA2R;mBAaAr/B,EAAA+Q,UAAAgxB,iBAAA,SAAA7M;oBACA,IAAA5wB;oBACA,QAAA4wB,EAAA;sBACA;wBAGA,KAFAl2B,KAAAomC,WAAApmC,KAAA2tB,GAAA3tB,KAAA0uB,IACAppB,IAAAtF,KAAA0uB,IAAA,GACYppB,IAAAtF,KAAAme,MAAe7Y,KAC3BtF,KAAAsmC,UAAAhhC;wBAEA;;sBACA;wBAGA,KAFAtF,KAAAqmC,UAAArmC,KAAA2tB,GAAA3tB,KAAA0uB,IACAppB,IAAAtF,KAAA0uB,GACAppB,OACAtF,KAAAsmC,UAAAhhC;wBAEA;;sBACA;wBAEA,KADAA,IAAAtF,KAAAme,MACA7Y,OAAAtF,KAAAsmC,UAAAhhC;wBACA;;sBACA;mBAeAtE,EAAA+Q,UAAAixB,cAAA,SAAA9M;oBACA,QAAAA,EAAA;sBACA;wBACAl2B,KAAAomC,WAAApmC,KAAA2tB,GAAA3tB,KAAA0uB;wBACA;;sBACA;wBACA1uB,KAAAqmC,UAAArmC,KAAA2tB,GAAA3tB,KAAA0uB;wBACA;;sBACA;wBACA1uB,KAAAsmC,UAAAtmC,KAAA0uB;;mBAmEA1tB,EAAA+Q,UAAAkxB,iBAAA,SAAA/M;oBAEA,UAAAA,EAAAlyB,UAAA,MAAAkyB,EAAA,IAEA,aADAl2B,KAAAi2B,UAAAj2B,KAAAg2B;oBAWA,KAPA,IAKA33B,GALA06B,IAAA7C,EAAAlyB,QACAF,IAAA,GACAs8B,IAAApgC,KAAAi2B,WAAA,IACAyG,IAAA18B,KAAAi2B,WAAA,SACAwG,IAAA,MAAAz8B,KAAAi2B,SAGQnyB,IAAAi1B,GAAOj1B,KACfzF,IAAA63B,EAAApyB;oBACAzF,KAAA,MAAAA,KAAA,KAEAq+B,IAAAr+B,IAAA,KACKA,KAAA,MAAAA,KAAA,KAELo+B,IAAAp+B,IAAA,KACKA,KAAA,MAAAA,KAAA,MAELA,KAAA;oBACAq+B,IAAAr+B,IAAA,MACKA,KAAA,OAAAA,KAAA,OAELA,KAAA,GACAo+B,IAAAp+B,IAAA,OACK,MAAAA,KAEL+hC,IAAApgC,KAAAg2B,WAAA;oBACA0G,IAAA18B,KAAAg2B,WAAA,SACAyG,IAAA,MAAAz8B,KAAAg2B,WAIK,MAAA33B,IAEL+hC,KAAA,IACK,MAAA/hC,IAEL+hC,KAAA,IACK,MAAA/hC,IAEL+hC,KAAA,IACK,MAAA/hC,IAGL+hC,KAAA,IACK,MAAA/hC,IAEL+hC,KAAA,KACK,OAAA/hC,IAEL+hC,MAAA,IACK,OAAA/hC,IAEL+hC,MAAA,IACK,OAAA/hC,IAEL+hC,MAAA,IACK,OAAA/hC,IAEL+hC,MAAA,IACK,OAAA/hC,IAEL+hC,MAAA,KACK,OAAA/hC,IAELq+B,IAAA18B,KAAAg2B,WAAA,UACK,OAAA33B,IAELo+B,IAAA,MAAAz8B,KAAAg2B,UACK,OAAA33B,IAEL,MAAA63B,EAAApyB,IAAA,MACAA,KAAA;oBACA44B,IAAAhF,EACA,MAAAxB,EAAApyB,IACA,MAAAoyB,EAAApyB,IAAA,IACA,MAAAoyB,EAAApyB,IAAA,KACA44B,OAAA,MAAAA,IAAA,MACA54B,KAAA,KACO,MAAAoyB,EAAApyB,IAAA,OACPA,KAAA;oBACAzF,IAAA,MAAA63B,EAAApyB,IACA44B,IAAAr+B,KAEK,OAAAA,IAEL,MAAA63B,EAAApyB,IAAA,MACAA,KAAA,GACA24B,IAAA/E,EACA,MAAAxB,EAAApyB,IACA,MAAAoyB,EAAApyB,IAAA,IACA,MAAAoyB,EAAApyB,IAAA;oBACA24B,OAAA,MAAAA,IAAA,MACA34B,KAAA,KACO,MAAAoyB,EAAApyB,IAAA,OACPA,KAAA,GACAzF,IAAA,MAAA63B,EAAApyB,IACA24B,IAAAp+B,KAEK,QAAAA,KAELq+B,IAAA18B,KAAAg2B,WAAA;oBACAyG,IAAA,MAAAz8B,KAAAg2B,WAEAh2B,KAAA0hC,MAAA,8BAAArjC;oBAIA2B,KAAAi2B,UAAAmK,KAAA,KAAA1D,KAAA,IAAAD;mBAwBAz7B,EAAA+Q,UAAAmxB,eAAA,SAAAhN;oBACA,IAAAl2B,KAAAoM;wBAeG,YAAApM,KAAAoM,QAGH,QAAA8pB,EAAA;0BACA;4BAEAl2B,KAAAixB,KAAA,SACAjxB,KAAA0uB,IAAA,KACA,OACA1uB,KAAA2tB,IAAA,KACA;4BACA;;0BACA;4BAGA;;0BACA;4BAGA;;0BACA;4BAGA;;0BACA;2BAtCA,QAAAuI,EAAA;sBACA;wBAEAl2B,KAAAixB,KAAA;wBACA;;sBACA;wBAEAjxB,KAAAixB,KAAA,QACAjxB,KAAA0uB,IAAA,KACA,OACA1uB,KAAA2tB,IAAA,KACA;;mBAyCA3sB,EAAA+Q,UAAAoxB,cAAA,SAAAjN;oBACA,IAAAsQ,GAAAnG,GAAA/6B,GAAAmyB;oBASA,KAPA+O,IAAAtQ,EAAA,IACAsQ,IAAA,MAAAA,IAAA,IAEAnG,IAAArgC,KAAA0uB,IAAA1uB,KAAAozB,OACA9tB,IAAAtF,KAAA2tB,GACA8J,MAAAz3B,KAAAmmC,aAAA,OAEAK,OAAAlhC,IAAAtF,KAAA6Z,QACA7Z,KAAAq2B,MAAAgK,GAAA1H,OAAArzB,KAAA,GAAAmyB;oBACAz3B,KAAAq2B,MAAAgK,GAAA1rB;mBAOA3T,EAAA+Q,UAAAqxB,iBAAA,SAAAlN;oBACA,IAAAsQ,IAAAtQ,EAAA;oBACAsQ,IAAA,MAAAA,IAAA,IACAxmC,KAAA0uB,KAAA8X,GACAxmC,KAAA0uB,KAAA1uB,KAAAme,SACAne,KAAA0uB,IAAA1uB,KAAAme,OAAA;oBAEAne,KAAA2tB,IAAA;mBAMA3sB,EAAA+Q,UAAAsxB,sBAAA,SAAAnN;oBACA,IAAAsQ,IAAAtQ,EAAA;oBACAsQ,IAAA,MAAAA,IAAA,IACAxmC,KAAA0uB,KAAA8X,GACAxmC,KAAA0uB,IAAA,MAAA1uB,KAAA0uB,IAAA,IACA1uB,KAAA2tB,IAAA;mBAKA3sB,EAAA+Q,UAAAuxB,qBAAA,SAAApN;oBACA,IAAAsQ,IAAAtQ,EAAA;oBACAsQ,IAAA,MAAAA,IAAA,IACAxmC,KAAA2tB,IAAA6Y,IAAA;mBAKAxlC,EAAA+Q,UAAAwxB,cAAA,SAAArN;oBACA,IAAAsQ,GAAAnG,GAAA/6B;oBASA,KAPAkhC,IAAAtQ,EAAA,IACAsQ,IAAA,MAAAA,IAAA,IACAnG,IAAArgC,KAAA0uB,IAAA1uB,KAAAozB,OAEA9tB,IAAAtF,KAAAme,OAAA,IAAAne,KAAA0zB;oBACApuB,IAAAtF,KAAAme,OAAA,IAAAne,KAAAozB,QAAA9tB,IAAA,GAEAkhC,OAGAxmC,KAAAq2B,MAAAsC,OAAA0H,GAAA,GAAArgC,KAAAs2B,WAAA;oBACAt2B,KAAAq2B,MAAAsC,OAAArzB,GAAA;oBAIAtF,KAAA4gC,YAAA5gC,KAAA0uB,IACA1uB,KAAA4gC,YAAA5gC,KAAA0zB;mBAKA1yB,EAAA+Q,UAAAyxB,cAAA,SAAAtN;oBACA,IAAAsQ,GAAAnG,GAAA/6B;oBASA,KAPAkhC,IAAAtQ,EAAA,IACAsQ,IAAA,MAAAA,IAAA,IACAnG,IAAArgC,KAAA0uB,IAAA1uB,KAAAozB,OAEA9tB,IAAAtF,KAAAme,OAAA,IAAAne,KAAA0zB;oBACApuB,IAAAtF,KAAAme,OAAA,IAAAne,KAAAozB,QAAA9tB,GAEAkhC,OAGAxmC,KAAAq2B,MAAAsC,OAAArzB,IAAA,MAAAtF,KAAAs2B,WAAA;oBACAt2B,KAAAq2B,MAAAsC,OAAA0H,GAAA;oBAIArgC,KAAA4gC,YAAA5gC,KAAA0uB,IACA1uB,KAAA4gC,YAAA5gC,KAAA0zB;mBAKA1yB,EAAA+Q,UAAA0xB,cAAA,SAAAvN;oBACA,IAAAsQ,GAAAnG,GAAA5I;oBAQA,KANA+O,IAAAtQ,EAAA,IACAsQ,IAAA,MAAAA,IAAA,IAEAnG,IAAArgC,KAAA0uB,IAAA1uB,KAAAozB,OACAqE,MAAAz3B,KAAAmmC,aAAA,OAEAK,OACAxmC,KAAAq2B,MAAAgK,GAAA1H,OAAA34B,KAAA2tB,GAAA;oBACA3tB,KAAAq2B,MAAAgK,GAAAh4B,KAAAovB;mBAMAz2B,EAAA+Q,UAAA2xB,aAAA,SAAAxN;oBACA,IAAAsQ,GAAAnG,GAAA/6B,GAAAmyB;oBASA,KAPA+O,IAAAtQ,EAAA,IACAsQ,IAAA,MAAAA,IAAA,IAEAnG,IAAArgC,KAAA0uB,IAAA1uB,KAAAozB,OACA9tB,IAAAtF,KAAA2tB,GACA8J,MAAAz3B,KAAAmmC,aAAA,OAEAK,OAAAlhC,IAAAtF,KAAA6Z,QACA7Z,KAAAq2B,MAAAgK,GAAA/6B,OAAAmyB;mBAMAz2B,EAAA+Q,UAAA4xB,kBAAA,SAAAzN;oBACA,IAAAsQ,IAAAtQ,EAAA;oBACAsQ,IAAA,MAAAA,IAAA,IACAxmC,KAAA2tB,IAAA6Y,IAAA,GACAxmC,KAAA2tB,KAAA3tB,KAAA6Z,SACA7Z,KAAA2tB,IAAA3tB,KAAA6Z,OAAA;mBAOA7Y,EAAA+Q,UAAA6xB,oBAAA,SAAA1N;oBACA,IAAAsQ,IAAAtQ,EAAA;oBACAsQ,IAAA,MAAAA,IAAA,IACAxmC,KAAA2tB,KAAA6Y,GACAxmC,KAAA2tB,KAAA3tB,KAAA6Z,SACA7Z,KAAA2tB,IAAA3tB,KAAA6Z,OAAA;mBAuCA7Y,EAAA+Q,UAAA8xB,uBAAA,SAAA3N;oBACAA,EAAA,WAEAl2B,KAAAoM,SAQG,QAAApM,KAAAoM,WAIHpM,KAAAoE,GAAA,WACApE,KAAAixB,KAAA,iBACKjxB,KAAAoE,GAAA,kBACLpE,KAAAixB,KAAA,iBACKjxB,KAAAoE,GAAA,WAGLpE,KAAAixB,KAAAiF,EAAA,YACKl2B,KAAAoE,GAAA,aACLpE,KAAAixB,KAAA,qBApBAjxB,KAAAoE,GAAA,YACApE,KAAAoE,GAAA,mBACApE,KAAAoE,GAAA,YACApE,KAAAixB,KAAA,aACKjxB,KAAAoE,GAAA,YACLpE,KAAAixB,KAAA;mBAsBAjwB,EAAA+Q,UAAA+xB,kBAAA,SAAA5N;oBACA,IAAAsQ,IAAAtQ,EAAA;oBACAsQ,IAAA,MAAAA,IAAA,IACAxmC,KAAA0uB,IAAA8X,IAAA,GACAxmC,KAAA0uB,KAAA1uB,KAAAme,SACAne,KAAA0uB,IAAA1uB,KAAAme,OAAA;mBAMAnd,EAAA+Q,UAAAgyB,oBAAA,SAAA7N;oBACA,IAAAsQ,IAAAtQ,EAAA;oBACAsQ,IAAA,MAAAA,IAAA,IACAxmC,KAAA0uB,KAAA8X,GACAxmC,KAAA0uB,KAAA1uB,KAAAme,SACAne,KAAA0uB,IAAA1uB,KAAAme,OAAA;mBAOAnd,EAAA+Q,UAAAiyB,aAAA,SAAA9N;oBACAA,EAAA,WAAAA,EAAA,SACAA,EAAA,WAAAA,EAAA,SAEAl2B,KAAA0uB,IAAAwH,EAAA,QACAl2B,KAAA0uB,KAAA1uB,KAAAme,SACAne,KAAA0uB,IAAA1uB,KAAAme,OAAA;oBAGAne,KAAA2tB,IAAAuI,EAAA,QACAl2B,KAAA2tB,KAAA3tB,KAAA6Z,SACA7Z,KAAA2tB,IAAA3tB,KAAA6Z,OAAA;mBAwFA7Y,EAAA+Q,UAAAkyB,UAAA,SAAA/N;oBACA,uBAAAA,GAWA,IAAAl2B,KAAAoM;wBASG,YAAApM,KAAAoM,QACH,QAAA8pB;0BACA;4BACAl2B,KAAA4zB,qBAAA;4BACA;;0BACA;4BACA5zB,KAAAqhC,YAAA,GAAArgC,EAAA8zB,SAAAwM,KACAthC,KAAAqhC,YAAA,GAAArgC,EAAA8zB,SAAAwM,KACAthC,KAAAqhC,YAAA,GAAArgC,EAAA8zB,SAAAwM;4BACAthC,KAAAqhC,YAAA,GAAArgC,EAAA8zB,SAAAwM;4BAEA;;0BACA;4BACAthC,KAAA61B,YAAA71B,KAAA6Z,MACA7Z,KAAAmxB,OAAA,KAAAnxB,KAAAme;4BACA;;0BACA;4BACAne,KAAA6zB,cAAA;4BACA;;0BACA;4BACA7zB,KAAA+zB,kBAAA;4BACA;;0BACA;4BAEA;;0BACA;4BACA/zB,KAAAsgC,IAAA,8CACAtgC,KAAA2zB,qBAAA;4BACA;;0BACA;0BAEA;0BAGA;0BACA;4BAGA3zB,KAAAg1B,WAAA,MAAAkB,GACAl2B,KAAAi1B,aAAA,QAAAiB,GACAl2B,KAAAm1B,cAAAe,IAAA;4BACAl2B,KAAAo1B,eAAA,GACAp1B,KAAAkwB,QAAAlkB,MAAAiX,SAAA,WACAjjB,KAAAsgC,IAAA;4BACA;;0BACA;4BAGAtgC,KAAAq1B,aAAA;4BACA;;0BACA;4BACAr1B,KAAAs1B,YAAA;4BAGA;;0BACA;4BACAt1B,KAAAu1B,YAAA;4BAKA;;0BACA;4BACAv1B,KAAAw1B,cAAA;4BAKA;;0BACA;4BACAx1B,KAAA6xB,gBAAA;4BACA;;0BACA;0BAGA;0BACA;4BACA,KAAA7xB,KAAAg0B,QAAA;gCACA,IAAAA;oCACAqC,OAAAr2B,KAAAq2B;oCACAjD,OAAApzB,KAAAozB;oCACAC,OAAArzB,KAAAqzB;oCACA1F,GAAA3tB,KAAA2tB;oCACAe,GAAA1uB,KAAA0uB;oCACA+E,WAAAzzB,KAAAyzB;oCACAC,cAAA1zB,KAAA0zB;oCACA6C,MAAAv2B,KAAAu2B;;gCAMAv2B,KAAAoxB,SACApxB,KAAAg0B,YACAh0B,KAAA06B;;;2BAtGA,QAAAxE;sBACA;wBACAl2B,KAAA8zB,cAAA;wBACA;;sBACA,mCAZA,KAHA,IAAAiF,IAAA7C,EAAAlyB,QACAF,IAAA,GAEUA,IAAAi1B,GAAOj1B,KACjB9D,KAAAikC,QAAA/N,EAAApyB;mBAoMA9C,EAAA+Q,UAAAmyB,YAAA,SAAAhO;oBACA,uBAAAA,GAWA,IAAAl2B,KAAAoM;wBASG,YAAApM,KAAAoM,QACH,QAAA8pB;0BACA;4BACAl2B,KAAA4zB,qBAAA;4BACA;;0BACA;4BACA,QAAA5zB,KAAA6Z,QAAA7Z,KAAA61B,aACA71B,KAAAmxB,OAAAnxB,KAAA61B,WAAA71B,KAAAme,cAEAne,KAAA61B;4BACA;;0BACA;4BACA71B,KAAA6zB,cAAA;4BACA;;0BACA;4BACA7zB,KAAA+zB,kBAAA;4BACA;;0BACA;4BAEA;;0BACA;4BACA/zB,KAAAsgC,IAAA,qCACAtgC,KAAA2zB,qBAAA;4BACA;;0BACA;0BACA;0BACA;0BACA;4BACA3zB,KAAAg1B,YAAA,GACAh1B,KAAAi1B,cAAA,GACAj1B,KAAAm1B,eAAA,GACAn1B,KAAAo1B,eAAA;4BACAp1B,KAAAkwB,QAAAlkB,MAAAiX,SAAA;4BACA;;0BACA;4BACAjjB,KAAAq1B,aAAA;4BACA;;0BACA;4BACAr1B,KAAAs1B,YAAA;4BACA;;0BACA;4BACAt1B,KAAAu1B,YAAA;4BACA;;0BACA;4BACAv1B,KAAAw1B,cAAA;4BACA;;0BACA;4BACAx1B,KAAA6xB,gBAAA;4BACA;;0BACA;0BAEA;0BACA;4BACA7xB,KAAAg0B,WACAh0B,KAAAq2B,QAAAr2B,KAAAg0B,OAAAqC,OACAr2B,KAAAozB,QAAApzB,KAAAg0B,OAAAZ;4BACApzB,KAAAqzB,QAAArzB,KAAAg0B,OAAAX,OACArzB,KAAA2tB,IAAA3tB,KAAAg0B,OAAArG,GACA3tB,KAAA0uB,IAAA1uB,KAAAg0B,OAAAtF;4BACA1uB,KAAAyzB,YAAAzzB,KAAAg0B,OAAAP,WACAzzB,KAAA0zB,eAAA1zB,KAAAg0B,OAAAN;4BACA1zB,KAAAu2B,OAAAv2B,KAAAg0B,OAAAuC,MACAv2B,KAAAg0B,SAAA,MAKAh0B,KAAA8xB,QAAA,GAAA9xB,KAAAme,OAAA;4BACAne,KAAA06B;;2BA5EA,QAAAxE;sBACA;wBACAl2B,KAAA8zB,cAAA;wBACA;;sBACA,mCAZA,KAHA,IAAAiF,IAAA7C,EAAAlyB,QACAF,IAAA,GAEUA,IAAAi1B,GAAOj1B,KACjB9D,KAAAkkC,UAAAhO,EAAApyB;mBA8FA9C,EAAA+Q,UAAAoyB,kBAAA,SAAAjO;oBACAl2B,KAAAoM,WACApM,KAAAyzB,aAAAyC,EAAA,cACAl2B,KAAA0zB,gBAAAwC,EAAA,MAAAl2B,KAAAme,QAAA;oBACAne,KAAA2tB,IAAA,GACA3tB,KAAA0uB,IAAA;mBAKA1tB,EAAA+Q,UAAAwvB,aAAA,SAAArL;oBACAl2B,KAAA21B,SAAA31B,KAAA2tB,GACA3tB,KAAA41B,SAAA51B,KAAA0uB;mBAKA1tB,EAAA+Q,UAAAyvB,gBAAA,SAAAtL;oBACAl2B,KAAA2tB,IAAA3tB,KAAA21B,UAAA,GACA31B,KAAA0uB,IAAA1uB,KAAA41B,UAAA;mBASA50B,EAAA+Q,UAAAqyB,mBAAA,SAAAlO;oBAEA,KADA,IAAAsQ,IAAAtQ,EAAA,SACAsQ,OACAxmC,KAAA2tB,IAAA3tB,KAAAkhC;mBAKAlgC,EAAA+Q,UAAAsyB,WAAA,SAAAnO;oBAEA,KADA,IAAAsQ,IAAAtQ,EAAA,SACAsQ,OACAxmC,KAAAq2B,MAAAsC,OAAA34B,KAAAozB,QAAApzB,KAAAyzB,WAAA;oBACAzzB,KAAAq2B,MAAAsC,OAAA34B,KAAAozB,QAAApzB,KAAA0zB,cAAA,GAAA1zB,KAAAs2B;oBAGAt2B,KAAA4gC,YAAA5gC,KAAAyzB,YACAzzB,KAAA4gC,YAAA5gC,KAAA0zB;mBAIA1yB,EAAA+Q,UAAAuyB,aAAA,SAAApO;oBAEA,KADA,IAAAsQ,IAAAtQ,EAAA,SACAsQ,OACAxmC,KAAAq2B,MAAAsC,OAAA34B,KAAAozB,QAAApzB,KAAA0zB,cAAA;oBACA1zB,KAAAq2B,MAAAsC,OAAA34B,KAAAozB,QAAApzB,KAAAyzB,WAAA,GAAAzzB,KAAAs2B;oBAGAt2B,KAAA4gC,YAAA5gC,KAAAyzB,YACAzzB,KAAA4gC,YAAA5gC,KAAA0zB;mBAOA1yB,EAAA+Q,UAAA20B,oBAAA,SAAAxQ,OAeAl1B,EAAA+Q,UAAA40B,kBAAA,SAAAzQ;gBAKAl1B,EAAA+Q,UAAAwyB,oBAAA,SAAArO;oBAEA,KADA,IAAAsQ,IAAAtQ,EAAA,SACAsQ,OACAxmC,KAAA2tB,IAAA3tB,KAAAkmC;mBAKAllC,EAAA+Q,UAAAyyB,2BAAA,SAAAtO;oBAKA,KAJA,IAAAsQ,IAAAtQ,EAAA,SACAkB,IAAAp3B,KAAAq2B,MAAAr2B,KAAAozB,QAAApzB,KAAA0uB,IACA+I,IAAAL,EAAAp3B,KAAA2tB,IAAA,QAAA3tB,KAAAg2B,SAAA,OAEAwQ,OAAApP,EAAAp3B,KAAA2tB,OAAA8J;mBASAz2B,EAAA+Q,UAAA0yB,WAAA,SAAAvO;oBACA,IAAAsQ,IAAAtQ,EAAA;oBACAsQ,KAAA,WACAxmC,KAAAu2B,KAAAv2B,KAAA2tB,KACG,MAAA6Y,MACHxmC,KAAAu2B;mBAeAv1B,EAAA+Q,UAAA60B,YAAA,SAAA1Q,OAgBAl1B,EAAA+Q,UAAA80B,eAAA,SAAA3Q;gBAiBAl1B,EAAA+Q,UAAA+0B,mBAAA,SAAA5Q,OAYAl1B,EAAA+Q,UAAAg1B,iBAAA,SAAA7Q;gBAMAl1B,EAAA+Q,UAAA2yB,YAAA,SAAAxO;oBACAl2B,KAAA6xB,gBAAA,GACA7xB,KAAA8zB,cAAA,GACA9zB,KAAA6zB,cAAA,GACA7zB,KAAA+zB,kBAAA;oBACA/zB,KAAA2zB,qBAAA,GACA3zB,KAAA4zB,qBAAA,GACA5zB,KAAAyzB,YAAA,GACAzzB,KAAA0zB,eAAA1zB,KAAAme,OAAA;oBACAne,KAAAi2B,UAAAj2B,KAAAg2B,SACAh2B,KAAA2tB,IAAA3tB,KAAA0uB,IAAA,GACA1uB,KAAA20B,UAAA,MACA30B,KAAA60B,SAAA;oBACA70B,KAAA80B,aAAA;mBAaA9zB,EAAA+Q,UAAAi1B,kBAAA,SAAA9Q,OASAl1B,EAAA+Q,UAAAk1B,qBAAA,SAAA/Q;gBAcAl1B,EAAA+Q,UAAAm1B,sBAAA,SAAAhR,OAYAl1B,EAAA+Q,UAAAo1B,WAAA,SAAAjR;gBAWAl1B,EAAA+Q,UAAAq1B,iBAAA,SAAAlR,OAUAl1B,EAAA+Q,UAAAs1B,wBAAA,SAAAnR;gBAOAl1B,EAAA+Q,UAAAu1B,uBAAA,SAAApR,OASAl1B,EAAA+Q,UAAAw1B,qBAAA,SAAArR;oBAUA,KATA,IAMAkB,GACAtzB,GAPA0jC,IAAAtR,EAAA,IACA6C,IAAA7C,EAAA,IACA+D,IAAA/D,EAAA,IACA3M,IAAA2M,EAAA,IACAiK,IAAAjK,EAAA,IAKQsR,IAAAvN,IAAA,GAAWuN,KAEnB,KADApQ,IAAAp3B,KAAAq2B,MAAAr2B,KAAAozB,QAAAoU;oBACA1jC,IAAAi1B,GAAej1B,IAAAylB,GAAOzlB,KACtBszB,EAAAtzB,OAAAq8B,GAAA/I,EAAAtzB,GAAA;oBAKA9D,KAAA4gC,YAAA1K,EAAA,KACAl2B,KAAA4gC,YAAA1K,EAAA;mBAMAl1B,EAAA+Q,UAAA01B,oBAAA,SAAAvR,OAkDAl1B,EAAA+Q,UAAA21B,mBAAA,SAAAxR;gBAUAl1B,EAAA+Q,UAAA41B,yBAAA,SAAAzR,OAYAl1B,EAAA+Q,UAAA61B,sBAAA,SAAA1R;gBASAl1B,EAAA+Q,UAAA81B,uBAAA,SAAA3R,OASAl1B,EAAA+Q,UAAA+1B,sBAAA,SAAA5R;gBAWAl1B,EAAA+Q,UAAAg2B,gBAAA,SAAA7R,OAeAl1B,EAAA+Q,UAAAi2B,wBAAA,SAAA9R;gBAeAl1B,EAAA+Q,UAAAk2B,oBAAA,SAAA/R,OAQAl1B,EAAA+Q,UAAAm2B,qBAAA,SAAAhS;gBASAl1B,EAAA+Q,UAAAo2B,gBAAA,SAAAjS;oBAUA,KATA,IAMAkB,GACAtzB,GAPA2zB,IAAAvB,EAAA,IACAsR,IAAAtR,EAAA,IACA6C,IAAA7C,EAAA,IACA+D,IAAA/D,EAAA,IACA3M,IAAA2M,EAAA,IAKQsR,IAAAvN,IAAA,GAAWuN,KAEnB,KADApQ,IAAAp3B,KAAAq2B,MAAAr2B,KAAAozB,QAAAoU;oBACA1jC,IAAAi1B,GAAej1B,IAAAylB,GAAOzlB,KACtBszB,EAAAtzB,OAAAszB,EAAAtzB,GAAA,IAAAw6B,EAAAC,aAAA9G;oBAKAz3B,KAAA4gC,YAAA1K,EAAA,KACAl2B,KAAA4gC,YAAA1K,EAAA;mBAeAl1B,EAAA+Q,UAAAq2B,yBAAA,SAAAlS;oBACAA,EAAA;mBASAl1B,EAAA+Q,UAAAs2B,iBAAA,SAAAnS;oBACA,IAKAkB,GACAtzB,GACA2zB,GAPA+P,IAAAtR,EAAA,IACA6C,IAAA7C,EAAA,IACA+D,IAAA/D,EAAA,IACA3M,IAAA2M,EAAA;oBAQA,KAFAuB,MAAAz3B,KAAAmmC,aAAA,OAEQqB,IAAAvN,IAAA,GAAWuN,KAEnB,KADApQ,IAAAp3B,KAAAq2B,MAAAr2B,KAAAozB,QAAAoU;oBACA1jC,IAAAi1B,GAAej1B,IAAAylB,GAAOzlB,KACtBszB,EAAAtzB,KAAA2zB;oBAKAz3B,KAAA4gC,YAAA1K,EAAA,KACAl2B,KAAA4gC,YAAA1K,EAAA;mBAcAl1B,EAAA+Q,UAAAu2B,mBAAA,SAAApS,OAOAl1B,EAAA+Q,UAAAw2B,0BAAA,SAAArS;gBA4CAl1B,EAAA+Q,UAAAy2B,yBAAA,SAAAtS,OAOAl1B,EAAA+Q,UAAA02B,gBAAA;oBAMA,KALA,IAGA3kC,GAHA0iC,IAAAtQ,OAAA,IACA6C,IAAA/4B,KAAAozB,QAAApzB,KAAAme,MACAsZ,MAAAz3B,KAAAmmC,aAAA,OAGAK,OACA,KAAA1iC,IAAA9D,KAAAozB,OAAwBtvB,IAAAi1B,GAAOj1B,KAC/B9D,KAAAq2B,MAAAvyB,GAAA60B,OAAA34B,KAAA2tB,IAAA,MAAA8J;oBACAz3B,KAAAq2B,MAAAvyB,GAAA6Q;oBAIA3U,KAAA+gC;mBAMA//B,EAAA+Q,UAAA22B,gBAAA;oBAMA,KALA,IAGA5kC,GAHA0iC,IAAAtQ,OAAA,IACA6C,IAAA/4B,KAAAozB,QAAApzB,KAAAme,MACAsZ,MAAAz3B,KAAAmmC,aAAA,OAGAK,OACA,KAAA1iC,IAAA9D,KAAAozB,OAAwBtvB,IAAAi1B,GAAOj1B,KAC/B9D,KAAAq2B,MAAAvyB,GAAA60B,OAAA34B,KAAA2tB,GAAA;oBACA3tB,KAAAq2B,MAAAvyB,GAAAuE,KAAAovB;oBAIAz3B,KAAA+gC;mBAOA//B,EAAA+Q,UAAA2zB,cAAA;oBACA1lC,KAAAi0B,cAAA;mBAGAjzB,EAAA+Q,UAAA4zB,cAAA;oBACA3lC,KAAAi0B,cAAA;mBAGAjzB,EAAA+Q,UAAA42B,cAAA;oBACA3oC,KAAAw0B;wBACA7G,GAAA3tB,KAAA2tB;wBACAe,GAAA1uB,KAAA0uB;wBACA2E,OAAArzB,KAAAqzB;wBACAD,OAAApzB,KAAAozB;wBACAvB,cAAA7xB,KAAA6xB;wBACAwE,OAAAr2B,KAAA4oC,WAAA5oC,KAAAq2B;wBACA5E,OAAAzxB,KAAAyxB;uBAEAzxB,KAAAyxB,QAAA,eACAzxB,KAAAk0B,cAAA,GACAl0B,KAAAm0B,cAAA,GACAn0B,KAAA6xB,gBAAA;oBACA7xB,KAAA8xB,QAAA9xB,KAAA0uB,GAAA1uB,KAAA0uB;mBAGA1tB,EAAA+Q,UAAA82B,cAAA;oBACA7oC,KAAA2tB,IAAA3tB,KAAAw0B,MAAA7G,GACA3tB,KAAA0uB,IAAA1uB,KAAAw0B,MAAA9F,GACA1uB,KAAAqzB,QAAArzB,KAAAw0B,MAAAnB,OACArzB,KAAAozB,QAAApzB,KAAAw0B,MAAApB;oBACApzB,KAAA6xB,eAAA7xB,KAAAw0B,MAAA3C,cACA7xB,KAAAq2B,QAAAr2B,KAAAw0B,MAAA6B,OACAr2B,KAAAyxB,QAAAzxB,KAAAw0B,MAAA/C;2BACAzxB,KAAAw0B,OACAx0B,KAAAk0B,cAAA,GACAl0B,KAAAm0B,cAAA,GACAn0B,KAAA8xB,QAAA,GAAA9xB,KAAAme,OAAA;mBAGAnd,EAAA+Q,UAAA+2B,cAAA;oBACA9oC,KAAAw0B,MAAAuU,YAAA/oC,KAAA4oC,WAAA5oC,KAAAq2B,QACAr2B,KAAAgpC,WAAAhpC,KAAA2tB,GAAA3tB,KAAA2tB,GAAA3tB,KAAAqzB,QAAArzB,KAAA0uB,GAAA1uB,KAAAqzB,QAAArzB,KAAA0uB;oBACA1uB,KAAAm0B,cAAA;mBAGAnzB,EAAA+Q,UAAA6zB,cAAA;oBACA5lC,KAAAq2B,QAAAr2B,KAAAw0B,MAAAuU,kBACA/oC,KAAAw0B,MAAAuU,kBACA/oC,KAAAy0B;oBACAz0B,KAAAm0B,cAAA,GACAn0B,KAAA8xB,QAAA,GAAA9xB,KAAAme,OAAA;mBAGAnd,EAAA+Q,UAAAk3B,cAAA,SAAAC;oBACAlpC,KAAAs0B,QAAA,IACAt0B,KAAAo0B,cAAA,GACAp0B,KAAAq0B,aAAA6U,GACAlpC,KAAAw0B,MAAA2U,YAAAnpC,KAAA4oC,WAAA5oC,KAAAq2B;oBACAr2B,KAAAw0B,MAAA4U,aAAAppC,KAAA2tB,GACA3tB,KAAAw0B,MAAA6U,aAAArpC,KAAA0uB;oBAGA,SADA4a,IAAAtpC,KAAAqzB,QAAArzB,KAAAme,OAAA,GACAra,IAAA,GAAiBA,IAAA9D,KAAAu0B,YAAAvwB,QAA6BF,KAG9C9D,KAAAq2B,MAAAiT,GAAAxlC,OACA9D,KAAAg2B,WAAA,SACAh2B,KAAAu0B,YAAAzwB;oBAIA9D,KAAA0uB,IAAA1uB,KAAAme,OAAA,GACAne,KAAA2tB,IAAA3tB,KAAAu0B,YAAAvwB,QAEAhE,KAAA8xB,QAAA9xB,KAAAme,OAAA,GAAAne,KAAAme,OAAA;mBAGAnd,EAAA+Q,UAAAw3B,cAAA;oBACAvpC,KAAAo0B,cAAA,GAEAp0B,KAAAw0B,MAAA2U,cACAnpC,KAAAq2B,QAAAr2B,KAAAw0B,MAAA2U;oBACAnpC,KAAA2tB,IAAA3tB,KAAAw0B,MAAA4U,YACAppC,KAAA0uB,IAAA1uB,KAAAw0B,MAAA6U,mBACArpC,KAAAw0B,MAAA2U;2BACAnpC,KAAAw0B,MAAA4U,mBACAppC,KAAAw0B,MAAA6U,aAGArpC,KAAA8xB,QAAA9xB,KAAAme,OAAA,GAAAne,KAAAme,OAAA;mBAGAnd,EAAA+Q,UAAA62B,aAAA,SAAAvS;oBAIA,SAHAA,SAAAr2B,KAAAq2B,OACA0D,QAEArL,IAAA,GAAiBA,IAAA2H,EAAAryB,QAAkB0qB,KAAA;wBACnCqL,EAAArL;wBACA,SAAAf,IAAA,GAAmBA,IAAA0I,EAAA3H,GAAA1qB,QAAqB2pB,KACxCoM,EAAArL,GAAAf,OAAA0I,EAAA3H,GAAAf,GAAA,IAAA0I,EAAA3H,GAAAf,GAAA;;oBAIA,OAAAoM;mBAGA/4B,EAAA+Q,UAAA4pB,kBAAA,SAAAxoB;oBACA,IAAAuoB,IAAA17B,KAAAwpC,eACApoC,IAAApB,KAAAoB;oBAmBA,OAjBAs6B,MACAA,IAAAt6B,EAAAL,cAAA,aACA26B,EAAA1vB,MAAAgwB,WAAA,YACAN,EAAA1vB,MAAAiwB,OAAA;oBACAP,EAAA1vB,MAAAkwB,MAAA,YACAR,EAAA1vB,MAAAyT,QAAA,OACAic,EAAA1vB,MAAAuP,SAAA,OACAmgB,EAAA1vB,MAAAqL,UAAA;oBACAqkB,EAAA1vB,MAAAmwB,kBAAA,eACAT,EAAA1vB,MAAAowB,cAAA,QACAV,EAAA1vB,MAAAqwB,eAAA;oBAEAj7B,EAAA0xB,qBAAA,WAAA7uB,YAAAy3B,IAEA17B,KAAAwpC,gBAAA9N,IAGAA;mBAKA16B,EAAA+Q,UAAA03B,WAAA,SAAAt2B;oBACA,IAAAmf,IAAAtyB,MACA07B,IAAA17B,KAAA27B;oBAEA37B,KAAA84B,KAAA,QAAA3lB,IAEAuoB,EAAA76B,SACA66B,EAAAG,cAAA1oB,GACAuoB,EAAAztB,QAAAkF,GACAuoB,EAAAI,kBAAA,GAAA3oB,EAAAnP;oBAEA+3B,EAAA;wBACAzJ,EAAApC,QAAArvB,SACAyxB,EAAAzxB;uBACG;mBAGHG,EAAA+Q,UAAAi3B,aAAA,SAAAnb,GAAAC,GAAAa,GAAAC;oBACA,IAAA8a,GACAC,GACAC,GACAC,GACAC,GACAnc,GACAe,GACAqb,GACA5J;oBAEA,IAAAngC,KAAAy0B,WAAA;wBAqBA,KApBAiV,IAAA1pC,KAAAy0B,UAAA5G,IACA8b,IAAA3pC,KAAAy0B,UAAA3G,IACA8b,IAAA5pC,KAAAy0B,UAAA9F,IACAkb,IAAA7pC,KAAAy0B,UAAA7F;wBAEAib,IAAAD,MACAE,IAAAH,GACAA,IAAAD,GACAA,IAAAI,GACAA,IAAAD,GACAA,IAAAD,GACAA,IAAAE,IAGAH,IAAAD,KAAAE,MAAAC,MACAC,IAAAH;wBACAA,IAAAD,GACAA,IAAAI,IAGApb,IAAAkb,GAAiBlb,KAAAmb,GAAUnb,KAS3B,KARAf,IAAA,GACAoc,IAAA/pC,KAAA6Z,OAAA,GACA6U,MAAAkb,MACAjc,IAAA+b;wBAEAhb,MAAAmb,MACAE,IAAAJ,IAEYhc,KAAAoc,GAASpc,KACrB,QAAA3tB,KAAAq2B,MAAA3H,GAAAf,GAAAqc,QAGA7J,IAAAngC,KAAAq2B,MAAA3H,GAAAf,GAAAqc;+BACAhqC,KAAAq2B,MAAA3H,GAAAf,GAAAqc,KACAhqC,KAAAq2B,MAAA3H,GAAAf,OAAAwS,GAAAngC,KAAAq2B,MAAA3H,GAAAf,GAAA;wBAKAgB,IAAA3uB,KAAAy0B,UAAA9F,IACAd,IAAA7tB,KAAAy0B,UAAA5G;;oBA0BA,KAvBAc,IAAAgR,KAAAhjB,IAAAgS,GAAA,IACAA,IAAAgR,KAAA3iB,IAAA2R,GAAA3uB,KAAAqzB,QAAArzB,KAAAme,OAAA,IAEAyQ,IAAA+Q,KAAAhjB,IAAAiS,GAAA;oBACAA,IAAA+Q,KAAA3iB,IAAA4R,GAAA5uB,KAAAqzB,QAAArzB,KAAAme,OAAA,IAEAne,KAAAy0B;wBAAoB5G;wBAAAC;wBAAAa;wBAAAC;uBAEpBA,IAAAD,MACAmb,IAAAhc,GACAA,IAAAD,GACAA,IAAAic,GACAA,IAAAlb,GACAA,IAAAD,GACAA,IAAAmb,IAGAhc,IAAAD,KAAAc,MAAAC,MACAkb,IAAAhc;oBACAA,IAAAD,GACAA,IAAAic,IAGApb,IAAAC,GAAcD,KAAAE,GAASF,KASvB,KARAf,IAAA,GACAoc,IAAA/pC,KAAA6Z,OAAA,GACA6U,MAAAC,MACAhB,IAAAE;oBAEAa,MAAAE,MACAmb,IAAAjc,IAEUH,KAAAoc,GAASpc,KAInBwS,IAAAngC,KAAAq2B,MAAA3H,GAAAf,GAAA,IACA3tB,KAAAq2B,MAAA3H,GAAAf,OACAwS,KAAA,cACAngC,KAAAq2B,MAAA3H,GAAAf,GAAA;oBAEA3tB,KAAAq2B,MAAA3H,GAAAf,GAAAqc,MAAA7J;oBAIAxR,KAAA3uB,KAAAqzB,OACAzE,KAAA5uB,KAAAqzB,OAEA1E,IAAAgR,KAAAhjB,IAAAgS,GAAA,IACAA,IAAAgR,KAAA3iB,IAAA2R,GAAA3uB,KAAAme,OAAA;oBAEAyQ,IAAA+Q,KAAAhjB,IAAAiS,GAAA,IACAA,IAAA+Q,KAAA3iB,IAAA4R,GAAA5uB,KAAAme,OAAA,IAGAne,KAAA8xB,QAAA,GAAA9xB,KAAAme,OAAA;mBAGAnd,EAAA+Q,UAAA6pB,WAAA,SAAA/N,GAAAC,GAAAa,GAAAC;oBACA,IAEA6I,GACA9J,GACAe,GACAqb,GACAD,GANA/P,IAAA,IACAkQ,IAAA;oBAsBA,KAfArb,IAAAD,MACAmb,IAAAhc,GACAA,IAAAD,GACAA,IAAAic,GACAA,IAAAlb,GACAA,IAAAD,GACAA,IAAAmb,IAGAhc,IAAAD,KAAAc,MAAAC,MACAkb,IAAAhc;oBACAA,IAAAD,GACAA,IAAAic,IAGApb,IAAAC,GAAcD,KAAAE,GAASF,KAAA;wBASvB,KARAf,IAAA,GACAoc,IAAA/pC,KAAA6Z,OAAA,GACA6U,MAAAC,MACAhB,IAAAE,IAEAa,MAAAE,MACAmb,IAAAjc,IAEUH,KAAAoc,GAASpc,KACnB8J,IAAAz3B,KAAAq2B,MAAA3H,GAAAf,GAAA;wBACA,QAAA8J,KAIAwS,MACAlQ,KAAAkQ,GACAA,IAAA,KAEAlQ,KAAAtC,GACAD,EAAAC,MAAA9J,OARAsc,KAAAxS;wBAUAwS,IAAA,IACAlQ,KAAA;;oBAKA,KAAApM,IAAAG,GAAAY,IAAAE,GAAsBjB,IAAA3tB,KAAA6Z,MAAe8T,KACrC,YAAA3tB,KAAAq2B,MAAA3H,GAAAf,GAAA;wBACAoM,MAAAnH,MAAA;wBACA;;oBAIA,OAAAmH;mBAGA/4B,EAAA+Q,UAAAg0B,YAAA,SAAAnP,GAAAlxB;oBACA,QAAAA,KAAA,QAAAA,IACA1F,KAAAuxB,YACG,QAAA7rB,KAAA,QAAAA,IACH1F,KAAA84B,KAAA,mBACG,QAAApzB,IACH1F,KAAA84B,KAAA,oBACGpzB,KAAA,OAAAA,KAAA,OACHA,SAAA;qBACAA,UAAA,IACA1F,KAAA84B,KAAA,gBAAApzB,MACG,QAAAA,IACH1F,KAAA84B,KAAA,uBACG,QAAApzB,IACH1F,KAAA84B,KAAA,2BACG,QAAApzB,IACH1F,KAAA84B,KAAA,0BACG,QAAApzB,KACH1F,KAAA2oC;mBAIA3nC,EAAA+Q,UAAA8zB,YAAA,SAAAjP,GAAAlxB;oBAGA,IAFA1F,KAAA06B,cAEA16B,KAAAo0B,cAAA,QAAA1uB,KAAA,QAAAA,GACA,OAAA1F,KAAAkqC,UAAAtT,GAAAlxB;oBAGA,YAAAA,GAAA;wBACA,IAAAgpB,IAAA1uB,KAAAqzB,QAAArzB,KAAA0uB;wBAWA,OAVA1uB,KAAAqzB,UAAArzB,KAAAozB,SAEApzB,KAAA0uB,IAAAiR,KAAA3iB,IAAAhd,KAAA0uB,KAAA1uB,KAAAme,OAAA,YAAAne,KAAAme,OAAA;wBACAne,KAAA8xB,QAAA,GAAA9xB,KAAAme,OAAA,MAEAne,KAAA8/B,YAAA9/B,KAAAme,OAAA,mBAEAne,KAAAm0B,cACAn0B,KAAAgpC,WAAAhpC,KAAA2tB,GAAA3tB,KAAA2tB,GAAAe,GAAA1uB,KAAAqzB,QAAArzB,KAAA0uB;;oBAKA,YAAAhpB,GAAA;wBACA,IAAAgpB,IAAA1uB,KAAAqzB,QAAArzB,KAAA0uB;wBAWA,OAVA,MAAA1uB,KAAAqzB,SAEArzB,KAAA0uB,IAAAiR,KAAAhjB,IAAA3c,KAAA0uB,KAAA1uB,KAAAme,OAAA;wBACAne,KAAA8xB,QAAA,GAAA9xB,KAAAme,OAAA,MAEAne,KAAA8/B,aAAA9/B,KAAAme,OAAA,mBAEAne,KAAAm0B,cACAn0B,KAAAgpC,WAAAhpC,KAAA2tB,GAAA3tB,KAAA2tB,GAAAe,GAAA1uB,KAAAqzB,QAAArzB,KAAA0uB;;oBAKA,YAAAhpB,GAAA;wBACA,IAAAgpB,IAAA1uB,KAAAqzB,QAAArzB,KAAA0uB;wBAKA,OAJA1uB,KAAA8/B,WAAA9/B,KAAAme,OAAA,UACAne,KAAAm0B,cACAn0B,KAAAgpC,WAAAhpC,KAAA2tB,GAAA3tB,KAAA2tB,GAAAe,GAAA1uB,KAAAqzB,QAAArzB,KAAA0uB;;oBAKA,YAAAhpB,GAAA;wBACA,IAAAgpB,IAAA1uB,KAAAqzB,QAAArzB,KAAA0uB;wBAKA,OAJA1uB,KAAA8/B,aAAA9/B,KAAAme,OAAA,WACAne,KAAAm0B,cACAn0B,KAAAgpC,WAAAhpC,KAAA2tB,GAAA3tB,KAAA2tB,GAAAe,GAAA1uB,KAAAqzB,QAAArzB,KAAA0uB;;oBAKA,YAAAhpB,KAAA,UAAAA,GAAA;wBACA,IAAAgpB,IAAA1uB,KAAAqzB,QAAArzB,KAAA0uB;wBAWA,OAVA1uB,KAAA0uB,KACA1uB,KAAA0uB,IAAA,MACA1uB,KAAA0uB,IAAA,GACA1uB,KAAA8/B,YAAA,WAEA9/B,KAAAm0B,aACAn0B,KAAAgpC,WAAAhpC,KAAA2tB,GAAA3tB,KAAA2tB,GAAAe,GAAA1uB,KAAAqzB,QAAArzB,KAAA0uB,KAEA1uB,KAAA8xB,QAAA9xB,KAAA0uB,GAAA1uB,KAAA0uB,IAAA;;oBAKA,YAAAhpB,KAAA,UAAAA,GAAA;wBACA,IAAAgpB,IAAA1uB,KAAAqzB,QAAArzB,KAAA0uB;wBAWA,OAVA1uB,KAAA0uB,KACA1uB,KAAA0uB,KAAA1uB,KAAAme,SACAne,KAAA0uB,IAAA1uB,KAAAme,OAAA,GACAne,KAAA8/B,WAAA;8BAEA9/B,KAAAm0B,aACAn0B,KAAAgpC,WAAAhpC,KAAA2tB,GAAA3tB,KAAA2tB,GAAAe,GAAA1uB,KAAAqzB,QAAArzB,KAAA0uB,KAEA1uB,KAAA8xB,QAAA9xB,KAAA0uB,IAAA,GAAA1uB,KAAA0uB;;oBAKA,YAAAhpB,KAAA,UAAAA,GAAA;wBACA,IAAAioB,IAAA3tB,KAAA2tB;wBAUA,OATA3tB,KAAA2tB,KACA3tB,KAAA2tB,IAAA,MACA3tB,KAAA2tB,IAAA,UAEA3tB,KAAAm0B,aACAn0B,KAAAgpC,WAAArb,GAAA3tB,KAAA2tB,GAAA3tB,KAAAqzB,QAAArzB,KAAA0uB,GAAA1uB,KAAAqzB,QAAArzB,KAAA0uB,KAEA1uB,KAAA8xB,QAAA9xB,KAAA0uB,GAAA1uB,KAAA0uB;;oBAKA,YAAAhpB,KAAA,UAAAA,GAAA;wBACA,IAAAioB,IAAA3tB,KAAA2tB;wBAUA,OATA3tB,KAAA2tB,KACA3tB,KAAA2tB,KAAA3tB,KAAA6Z,SACA7Z,KAAA2tB,IAAA3tB,KAAA6Z,OAAA,UAEA7Z,KAAAm0B,aACAn0B,KAAAgpC,WAAArb,GAAA3tB,KAAA2tB,GAAA3tB,KAAAqzB,QAAArzB,KAAA0uB,GAAA1uB,KAAAqzB,QAAArzB,KAAA0uB,KAEA1uB,KAAA8xB,QAAA9xB,KAAA0uB,GAAA1uB,KAAA0uB;;oBAKA,YAAAhpB,KAAA,QAAAA,GAMA,aALA1F,KAAAm0B,aAGAn0B,KAAA4lC,gBAFA5lC,KAAA8oC;oBAOA,YAAApjC,GAAA;wBAYA,YAAAA,KAAA,QAAAA,GAMA,aALA1F,KAAAm0B,aACAn0B,KAAA4lC,gBAEA5lC,KAAA6oC;wBAKA,YAAAnjC,KAAA,QAAAA,GAAA;4BAUA,KATA,IAAAykC,IAAAnqC,KAAA2tB,GACAyc,IAAApqC,KAAA0uB,GACA2b,IAAArqC,KAAAqzB,OAEA1F,IAAA3tB,KAAA2tB,GACAe,IAAA1uB,KAAA0uB,GACA4b,IAAAtqC,KAAAqzB,OACAkX,KAAA,MAEW;gCAEX,KADA,IAAAnT,IAAAp3B,KAAAq2B,MAAAiU,IAAA5b,IACAf,IAAA3tB,KAAA6Z,QAAA;oCACA,IAAAud,EAAAzJ,GAAA,WACA4c,KAAA,QACS,IAAAA,GACT;oCAEA5c;;gCAGA,IADAA,KAAA3tB,KAAA6Z,SAAA8T,IAAA3tB,KAAA6Z,OAAA,MACA8T,MAAA3tB,KAAA6Z,OAAA,KAAAud,EAAAzJ,GAAA,YAYA;gCAVA,IADAA,IAAA,KACAe,KAAA1uB,KAAAme,SACAuQ,OACA4b,IAAAtqC,KAAAozB,QAAA;oCACAkX,IAAAtqC,KAAAozB,OACAzF,IAAA3tB,KAAA2tB;oCACA;;;4BAcA,OANA3tB,KAAA2tB,OAAA3tB,KAAA0uB,OACA1uB,KAAA8/B,YAAA9/B,KAAAqzB,QAAAiX,UAEAtqC,KAAAm0B,cACAn0B,KAAAgpC,WAAAmB,GAAAnqC,KAAA2tB,GAAAyc,IAAAC,GAAArqC,KAAAqzB,QAAArzB,KAAA0uB;;wBAKA,YAAAhpB,KAAA,QAAAA,GAAA;4BASA,KARA,IAAAykC,IAAAnqC,KAAA2tB,GACAyc,IAAApqC,KAAA0uB,GACA2b,IAAArqC,KAAAqzB,OAEA1F,IAAA3tB,KAAA2tB,GACAe,IAAA1uB,KAAA0uB,GACA4b,IAAAtqC,KAAAqzB,UAEW;gCAGX,KAFA,IAAA+D,IAAAp3B,KAAAq2B,MAAAiU,IAAA5b,IACA6b,IAAA5c,IAAA,KAAAyJ,EAAAzJ,GAAA,YAAAyJ,EAAAzJ,IAAA,aACAA,KAAA;oCACA,IAAAyJ,EAAAzJ,GAAA;wCACA,IAAA4c,KAAA5c,IAAA,IAAA3tB,KAAA6Z,QAAAud,EAAAzJ,IAAA;4CACAA;4CACA;;wCAEA4c,KAAA;;oCAGA5c;;gCAGA,IADAA,IAAA,MAAAA,IAAA,IACA,MAAAA,OAAAyJ,EAAAzJ,GAAA,cAAA4c,GAYA;gCAVA,IADA5c,IAAA3tB,KAAA6Z,OAAA,KACA6U,IAAA,MACAA,OACA4b,IAAA;oCACAA,KACA3c,IAAA;oCACA;;;4BAcA,OANA3tB,KAAA2tB,OAAA3tB,KAAA0uB,OACA1uB,KAAA8/B,YAAA9/B,KAAAqzB,QAAAiX,UAEAtqC,KAAAm0B,cACAn0B,KAAAgpC,WAAAmB,GAAAnqC,KAAA2tB,GAAAyc,IAAAC,GAAArqC,KAAAqzB,QAAArzB,KAAA0uB;;wBAKA,YAAAhpB,KAAA,QAAAA,GAAA;4BACA,IAAAioB,IAAA3tB,KAAA2tB,IAAA,GACAe,IAAA1uB,KAAA0uB,GACA4b,IAAAtqC,KAAAqzB;4BAGA,KAFA1F,KAAA3tB,KAAA6Z,QAAA8T,QAEW;gCAEX,KADA,IAAAyJ,IAAAp3B,KAAAq2B,MAAAiU,IAAA5b,IACAf,IAAA3tB,KAAA6Z,QACAud,EAAAzJ,GAAA,aACAA;gCAKA,MAAAA,IAAA3tB,KAAA6Z,QAAA;oCACA,IAAAud,EAAAzJ,GAAA,aACAA,IAAA,UAAAyJ,EAAAzJ,IAAA;wCACAA;wCACA;;oCAGAA;;gCAGA,IADAA,KAAA3tB,KAAA6Z,SAAA8T,IAAA3tB,KAAA6Z,OAAA,MACA8T,MAAA3tB,KAAA6Z,OAAA,KAAAud,EAAAzJ,GAAA,YAWA;gCATA,IADAA,IAAA,KACAe,KAAA1uB,KAAAme,SACAuQ,OACA4b,IAAAtqC,KAAAozB,QAAA;oCACAkX,IAAAtqC,KAAAozB;oCACA;;;4BAcA,OANApzB,KAAA2tB,OAAA3tB,KAAA0uB,OACA1uB,KAAA8/B,YAAA9/B,KAAAqzB,QAAAiX,UAEAtqC,KAAAm0B,cACAn0B,KAAAgpC,WAAAmB,GAAAnqC,KAAA2tB,GAAAyc,IAAAC,GAAArqC,KAAAqzB,QAAArzB,KAAA0uB;;wBAKA,YAAAhpB,KAAA,QAAAA,GAAA;4BACA,IAAAykC,IAAAnqC,KAAA2tB;4BAEA,YAAAjoB,GACA1F,KAAA2tB,IAAA,QACK,YAAAjoB,GAAA;gCAGL,KAFA,IAAA0xB,IAAAp3B,KAAAq2B,MAAAr2B,KAAAqzB,QAAArzB,KAAA0uB,IACAf,IAAA,GACAA,IAAA3tB,KAAA6Z,UACAud,EAAAzJ,GAAA,aAGAA;gCAEAA,KAAA3tB,KAAA6Z,SAAA8T,IAAA3tB,KAAA6Z,OAAA,IACA7Z,KAAA2tB;;4BAQA,aALA3tB,KAAAm0B,aACAn0B,KAAAgpC,WAAAmB,GAAAnqC,KAAA2tB,GAAA3tB,KAAAqzB,QAAArzB,KAAA0uB,GAAA1uB,KAAAqzB,QAAArzB,KAAA0uB,KAEA1uB,KAAA8xB,QAAA9xB,KAAA0uB,GAAA1uB,KAAA0uB;;wBAKA,YAAAhpB,GAAA;4BAIA,KAHA,IAAAykC,IAAAnqC,KAAA2tB,GACAyJ,IAAAp3B,KAAAq2B,MAAAr2B,KAAAqzB,QAAArzB,KAAA0uB,IACAf,IAAA3tB,KAAA6Z,OAAA,GACA8T,KAAA;gCACA,IAAAyJ,EAAAzJ,GAAA;oCACA3tB,KAAAm0B,cAAAxG,IAAA3tB,KAAA6Z,OAAA,KAAA8T;oCACA;;gCAEAA;;4BASA,OAPAA,IAAA,MAAAA,IAAA,IACA3tB,KAAA2tB,aACA3tB,KAAAm0B,aACAn0B,KAAAgpC,WAAAmB,GAAAnqC,KAAA2tB,GAAA3tB,KAAAqzB,QAAArzB,KAAA0uB,GAAA1uB,KAAAqzB,QAAArzB,KAAA0uB,KAEA1uB,KAAA8xB,QAAA9xB,KAAA0uB,GAAA1uB,KAAA0uB;;wBAKA,YAAAhpB,KAAA,QAAAA,GAAA;4BACA,IAAAykC,IAAAnqC,KAAA2tB,GACAyc,IAAApqC,KAAA0uB,GACA2b,IAAArqC,KAAAqzB;4BAWA,OAVA,QAAA3tB,KACA1F,KAAA2tB,IAAA,GAAA3tB,KAAA0uB,IAAA,GACA1uB,KAAA8/B,YAAA9/B,KAAAqzB,UACK,QAAA3tB,MACL1F,KAAA2tB,IAAA;4BAAA3tB,KAAA0uB,IAAA1uB,KAAAme,OAAA,GACAne,KAAA8/B,WAAA9/B,KAAAozB,eAEApzB,KAAAm0B,cACAn0B,KAAAgpC,WAAAmB,GAAAnqC,KAAA2tB,GAAAyc,IAAAC,GAAArqC,KAAAqzB,QAAArzB,KAAA0uB;;wBAKA,YAAAhpB,KAAA,QAAAA,KAAA,QAAAA,GAAA;4BACA,IAAAykC,IAAAnqC,KAAA2tB,GACAyc,IAAApqC,KAAA0uB;4BAcA,OAbA,QAAAhpB,KACA1F,KAAA2tB,IAAA,GAAA3tB,KAAA0uB,IAAA,KACK,QAAAhpB,KACL1F,KAAA2tB,IAAA,GAAA3tB,KAAA0uB,IAAA1uB,KAAAme,OAAA,SACK,QAAAzY,MACL1F,KAAA2tB,IAAA;4BAAA3tB,KAAA0uB,IAAA1uB,KAAAme,OAAA,UAEAne,KAAAm0B,aACAn0B,KAAAgpC,WAAAmB,GAAAnqC,KAAA2tB,GAAA3tB,KAAAqzB,QAAA+W,GAAApqC,KAAAqzB,QAAArzB,KAAA0uB,MAEA1uB,KAAA8xB,QAAAsY;4BACApqC,KAAA8xB,QAAA9xB,KAAA0uB,GAAA1uB,KAAA0uB;;wBAKA,YAAAhpB,KAAgB,QAAAA,GAAe;4BAC/B,IAIA0xB,GAMAtzB,GAVAqmC,IAAAnqC,KAAA2tB,GACAyc,IAAApqC,KAAA0uB,GACA2b,IAAArqC,KAAAqzB,OAGAmX,KAAA,GACAC,KAAA,GACAC,KAAA,GACAhc,IAAA1uB,KAAA0uB,KAAA,QAAAhpB,KAAgC,QAChC4kC,IAAAtqC,KAAAqzB;4BAeA,KAZA,QAAA3tB,IACAgpB,IAAA,MACAA,KACA4b,IAAA,KAAAA,OAEK,QAAA5kC,KACLgpB,KAAA1uB,KAAAme,SACAuQ;4BACA4b,IAAAtqC,KAAAozB,SAAAkX,SAIW;gCAGX,KAFAlT,IAAAp3B,KAAAq2B,MAAAiU,IAAA5b,IAEA5qB,IAAA,GAAiBA,IAAA9D,KAAA6Z,MAAe/V,KAAA;oCAChC,IAAAszB,EAAAtzB,GAAA;wCACA4mC,OAAA,MACAA,IAAA,IAEAF,KAAA;wCACA;;oCACS,IAAA1mC,MAAA9D,KAAA6Z,OAAA;wCACT6wB,OAAA,IACAA,IAAA,IACW,MAAAA,IACXD,KAAA,IACW,MAAAC,KACXF,MAAAC,KAAA;wCAEA;;;gCAIA,IAAAA,GAAA;gCAEA,YAAA/kC;oCAEA,IADAgpB,KACAA,IAAA;wCAEA,IADAA,OACA4b,IAAA,IACA;wCADAA;;uCAGO,YAAA5kC,MACPgpB,KACAA,KAAA1uB,KAAAme,OAAA;oCAEA,IADAuQ,OACA4b,IAAAtqC,KAAAozB,QACA;oCADAkX;;;4BAsBA,OAhBAG,MACA,QAAA/kC,KACAgpB,IAAA,GACA4b,IAAA,KACO,QAAA5kC,MACPgpB,IAAA1uB,KAAAme,OAAA,GACAmsB,IAAAtqC,KAAAozB;4BAIApzB,KAAA2tB,IAAA,GAAA3tB,KAAA0uB,OACA1uB,KAAA8/B,YAAA9/B,KAAAqzB,QAAAiX,UAEAtqC,KAAAm0B,cACAn0B,KAAAgpC,WAAAmB,GAAAnqC,KAAA2tB,GAAAyc,IAAAC,GAAArqC,KAAAqzB,QAAArzB,KAAA0uB;;wBAKA,gBAAAhpB,KAAA,QAAAA,YACA1F,KAAAm0B,cACAn0B,KAAAipC,YAAA,QAAAvjC;;oBA3UA,IAAA1F,KAAAm0B,YAAA;wBACA,IAAAhhB,IAAAnT,KAAA47B,SACA57B,KAAAy0B,UAAA5G,IAAA7tB,KAAAy0B,UAAA3G,IACA9tB,KAAAy0B,UAAA9F,IAAA3uB,KAAAy0B,UAAA7F;wBACA5uB,KAAAypC,SAAAt2B,IACAnT,KAAA4lC;;mBA8UA5kC,EAAA+Q,UAAAm4B,YAAA,SAAAtT,GAAAlxB;oBACA,YAAAA,GAEA,YADA1F,KAAAupC;oBAIA,aAAA7jC,MAAA1F,KAAAo0B,eAAA,QAAA1uB,KAAA,QAAAA,IAAA;wBACA1F,KAAAupC;wBAEA,IAAAjV,IAAAt0B,KAAAs0B;wBAEA,KAAAA,GAEA,YADAt0B,KAAA8xB,QAAA,GAAA9xB,KAAAme,OAAA;wBAkBA,KAdA,IAIAiZ,GAKAkT,GAAAxmC,GATAqmC,IAAAnqC,KAAA2tB,GACAyc,IAAApqC,KAAA0uB,GACA2b,IAAArqC,KAAAqzB,OAGAoX,KAAA,GACAE,KAAA,GACAhd,IAAA3tB,KAAA2tB,IAAA,GACAe,IAAA1uB,KAAAqzB,QAAArzB,KAAA0uB,GAEAmR,IAAA,QAAAn6B,IACA1F,KAAAq0B,cACAr0B,KAAAq0B,eAEW;4BAGX,KAFA+C,IAAAp3B,KAAAq2B,MAAA3H,IAEAf,IAAA3tB,KAAA6Z,QAAA;gCACA,KAAA/V,IAAA,GAAmBA,IAAAwwB,EAAAtwB,YACnB2pB,IAAA7pB,KAAA9D,KAAA6Z,SACAud,EAAAzJ,IAAA7pB,GAAA,OAAAwwB,EAAAxwB,IAFqCA,KAI1B,IAAAszB,EAAAzJ,IAAA7pB,GAAA,OAAAwwB,EAAAxwB,YAAAwwB,EAAAtwB,SAAA;oCACXymC,KAAA;oCACA;;gCAGA,IAAAA,GAAA;gCACA9c,KAAA7pB,IAAA;;4BAEA,IAAA2mC,GAAA;4BAIA,IAFA9c,IAAA,GAEAkS;gCAUA,IADAnR,KACAA,IAAA;oCACA,IAAAic,GAAA;oCAEAA,KAAA,GACAjc,IAAA1uB,KAAAozB,QAAApzB,KAAAme,OAAA;;mCAZA,IADAuQ,KACAA,IAAA1uB,KAAAozB,QAAApzB,KAAAme,OAAA;gCACA,IAAAwsB,GAAA;gCAEAA,KAAA,GACAjc,IAAA;;;wBAaA,OAAA+b,KACA/b,IAAA1uB,KAAAozB,QAAA,KACAkX,IAAA5b,GACAA,IAAA,GACA4b,IAAAtqC,KAAAozB,UACA1E,IAAA4b,IAAAtqC,KAAAozB;wBACAkX,IAAAtqC,KAAAozB,WAGAkX,IAAAtqC,KAAAozB,OACA1E,KAAA1uB,KAAAozB,QAGApzB,KAAA2tB,OAAA3tB,KAAA0uB,OACA1uB,KAAA8/B,YAAA9/B,KAAAqzB,QAAAiX;8BAEAtqC,KAAAm0B,cACAn0B,KAAAgpC,WAAAmB,GAAAnqC,KAAA2tB,GAAAyc,IAAAC,GAAArqC,KAAAqzB,QAAArzB,KAAA0uB,YAMA1uB,KAAA8xB,QAAA,GAAA9xB,KAAAme,OAAA;;oBAKA,aAAAzY,KAAA,QAAAA,GAAA;wBACA,UAAA1F,KAAAs0B,MAAAtwB,QAAA;wBACA,IAAAslC,IAAAtpC,KAAAqzB,QAAArzB,KAAAme,OAAA;wBACAne,KAAAs0B,QAAAt0B,KAAAs0B,MAAA1B,MAAA;wBACA,IAAA9uB,IAAA9D,KAAAu0B,YAAAvwB,SAAAhE,KAAAs0B,MAAAtwB;wBASA,OAPAhE,KAAAq2B,MAAAiT,GAAAxlC,OACA9D,KAAAq2B,MAAAiT,GAAAxlC,GAAA,IACA,OAEA9D,KAAA2tB,KACA3tB,KAAA8xB,QAAA9xB,KAAAme,OAAA,GAAAne,KAAAme,OAAA;6BACAne,KAAA8xB,QAAA9xB,KAAA0uB,GAAA1uB,KAAA0uB;;oBAIA,UAAAhpB,EAAA1B,UAAA0B,KAAA,OAAAA,KAAA;wBACA,IAAA4jC,IAAAtpC,KAAAqzB,QAAArzB,KAAAme,OAAA;wBACAne,KAAAs0B,SAAA5uB;wBACA,IAAA5B,IAAA9D,KAAAu0B,YAAAvwB,SAAAhE,KAAAs0B,MAAAtwB,SAAA;wBAUA,OAPAhE,KAAAq2B,MAAAiT,GAAAxlC,OACA9D,KAAAg2B,WAAA,SACAtwB,KAEA1F,KAAA2tB,KACA3tB,KAAA8xB,QAAA9xB,KAAAme,OAAA,GAAAne,KAAAme,OAAA;6BACAne,KAAA8xB,QAAA9xB,KAAA0uB,GAAA1uB,KAAA0uB;;oBAIA;mBAOA1tB,EAAA8zB,eAUA9zB,EAAA8zB,SAAA6M;oBACAiJ,KAAA;oBACAv7B,GAAA;oBACA4qB,GAAA;oBACA77B,GAAA;oBACAglB,GAAA;oBACAynB,GAAA;oBACA3T,GAAA;oBACA8C,GAAA;oBACAkF,GAAA;oBACAp7B,GAAA;oBACAwB,GAAA;oBACA+gB,GAAA;oBACA0S,GAAA;oBACA56B,GAAA;oBACAinC,GAAA;oBACA0F,GAAA;oBACAzsC,GAAA;oBACA0sC,GAAA;oBACAxhB,GAAA;oBACAyhB,GAAA;oBACAxD,GAAA;oBACAyD,GAAA;oBACAC,GAAA;oBACAjM,GAAA;oBACAtR,GAAA;oBACAe,GAAA;oBACAI,GAAA;oBACAqc,KAAI;oBACJC,KAAA;oBACAC,KAAI;oBACJC,KAAA;mBAGAtqC,EAAA8zB,SAAA8M,KAAA,MACA5gC,EAAA8zB,SAAAwM,KAAA,MACAtgC,EAAA8zB,SAAA+M,QAAA,MACA7gC,EAAA8zB,SAAAgN,UAAA;gBACA9gC,EAAA8zB,SAAAiN,SAAA,MACA/gC,EAAA8zB,SAAAkN,iBAAA,MACAhhC,EAAA8zB,SAAAmN,SAAA;gBACAjhC,EAAA8zB,SAAAoN,UAAA,MACAlhC,EAAA8zB,SAAAqN,kBAAA,MACAnhC,EAAA8zB,SAAAsN,UAAA;gBACAphC,EAAA8zB,SAAAuN,UAAA,MACArhC,EAAA8zB,SAAAwN,QAAA,MACAthC,EAAA8zB,SAAAyN,WAAA;gBAiDA,IAAAjE,IAAAt+B,KAAAs+B,QACAvC,IAAA/7B,KAAA+7B,YACA0E,IAAAzgC,KAAAygC;gBA2DA/I,EAAAI,aAGAJ,EAAAY,WAAA,SAAAX,GAAAtS,GAAAuS,GAAAG,GAAAzS,GAAA0S;oBACA,OAAA2H,KAAA4L,IAAA,MAAA5T,IAAAI,IAAA,KACA4H,KAAA4L,IAAA,MAAAlmB,IAAAC,IAAA,KACAqa,KAAA4L,IAAA,MAAA3T,IAAAI,IAAA;mBAyBAh3B,EAAAmxB,kBACAnxB,EAAAqxB,YACArxB,EAAAi2B,cACAj2B,EAAA+vB,QACA/vB,EAAA01B,SACA11B,EAAA21B;gBAGA1E,QAAAC,IAAA;oBAAyB,OAAAlxB;kBAAmBiO,MAAAnR,GAAAm0B,MAAAjnB,WAAAknB,MAAAn0B,EAAAD,UAAAo0B;eAO3Ch0B,KAAA;gBACD,OAAA8B,SAAA,sBAAAm7B,kBAAA15B;;WN86E8BvD,KAAKJ,GAAU;YAAa,OAAOkC;;;IAI3DwrC,KACA,SAASztC,GAAQD","file":"systemd/terminal.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(121);\n\n\n/***/ },\n\n/***/ 3:\n/***/ function(module, exports) {\n\n\tmodule.exports = cockpit;\n\n/***/ },\n\n/***/ 121:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\t(function () {\n\t    \"use strict\";\n\t\n\t    var cockpit = __webpack_require__(3);\n\t    var _ = cockpit.gettext;\n\t\n\t    var React = __webpack_require__(122);\n\t    var componentsTerminal = __webpack_require__(123);\n\t\n\t    cockpit.translate();\n\t\n\t    /*\n\t     * A terminal component for the cockpit user.\n\t     *\n\t     * Uses the Terminal component from base1 internally, but adds a header\n\t     * with title and Reset button.\n\t     *\n\t     * Spawns the user's shell in the user's home directory.\n\t     */\n\t    var UserTerminal = React.createClass({ displayName: \"UserTerminal\",\n\t        createChannel: function createChannel(user) {\n\t            return cockpit.channel({\n\t                \"payload\": \"stream\",\n\t                \"spawn\": [user.shell || \"/bin/bash\", \"-i\"],\n\t                \"environ\": [\"TERM=xterm-256color\", \"PATH=/sbin:/bin:/usr/sbin:/usr/bin\"],\n\t                \"directory\": user.home || \"/\",\n\t                \"pty\": true\n\t            });\n\t        },\n\t\n\t        getInitialState: function getInitialState() {\n\t            return {\n\t                title: 'Terminal'\n\t            };\n\t        },\n\t\n\t        componentWillMount: function componentWillMount() {\n\t            cockpit.user().done((function (user) {\n\t                this.setState({ user: user, channel: this.createChannel(user) });\n\t            }).bind(this));\n\t        },\n\t\n\t        onTitleChanged: function onTitleChanged(title) {\n\t            this.setState({ title: title });\n\t        },\n\t\n\t        onResetClick: function onResetClick(event) {\n\t            if (event.button !== 0) return;\n\t\n\t            if (this.state.channel) this.state.channel.close();\n\t\n\t            if (this.state.user) this.setState({ channel: this.createChannel(this.state.user) });\n\t\n\t            // don't focus the button, but keep it on the terminal\n\t            this.refs.resetButton.blur();\n\t            this.refs.terminal.focus();\n\t        },\n\t\n\t        render: function render() {\n\t            var terminal;\n\t            if (this.state.channel) terminal = React.createElement(componentsTerminal.Terminal, { ref: \"terminal\",\n\t                channel: this.state.channel,\n\t                onTitleChanged: this.onTitleChanged });else terminal = React.createElement(\n\t                \"span\",\n\t                null,\n\t                \"Loading...\"\n\t            );\n\t\n\t            return React.createElement(\n\t                \"div\",\n\t                { className: \"panel panel-default console-ct-container\" },\n\t                React.createElement(\n\t                    \"div\",\n\t                    { className: \"panel-heading\" },\n\t                    React.createElement(\n\t                        \"tt\",\n\t                        { className: \"terminal-title\" },\n\t                        this.state.title\n\t                    ),\n\t                    React.createElement(\n\t                        \"button\",\n\t                        { ref: \"resetButton\",\n\t                            className: \"btn btn-default pull-right\",\n\t                            onClick: this.onResetClick },\n\t                        _(\"Reset\")\n\t                    )\n\t                ),\n\t                terminal\n\t            );\n\t        }\n\t    });\n\t\n\t    React.render(React.createElement(UserTerminal, null), document.getElementById('terminal'));\n\t\n\t    /* And show the body */\n\t    document.body.removeAttribute(\"hidden\");\n\t})();\n\n/***/ },\n\n/***/ 122:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * react-lite.js v0.15.6\n\t * (c) 2016 Jade Gu\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.React = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var SVGNamespaceURI = 'http://www.w3.org/2000/svg';\n\t  var COMPONENT_ID = 'liteid';\n\t  var VELEMENT = 2;\n\t  var VSTATELESS = 3;\n\t  var VCOMPONENT = 4;\n\t  var VCOMMENT = 5;\n\t\n\t  var refs = null;\n\t\n\t  function createVelem(type, props) {\n\t      return {\n\t          vtype: VELEMENT,\n\t          type: type,\n\t          props: props,\n\t          refs: refs\n\t      };\n\t  }\n\t\n\t  function createVstateless(type, props) {\n\t      return {\n\t          vtype: VSTATELESS,\n\t          id: getUid(),\n\t          type: type,\n\t          props: props\n\t      };\n\t  }\n\t\n\t  function createVcomponent(type, props) {\n\t      return {\n\t          vtype: VCOMPONENT,\n\t          id: getUid(),\n\t          type: type,\n\t          props: props,\n\t          refs: refs\n\t      };\n\t  }\n\t\n\t  function createVcomment(comment) {\n\t      return {\n\t          vtype: VCOMMENT,\n\t          comment: comment\n\t      };\n\t  }\n\t\n\t  function initVnode(vnode, parentContext, namespaceURI) {\n\t      var vtype = vnode.vtype;\n\t\n\t      var node = null;\n\t      if (!vtype) {\n\t          node = document.createTextNode(vnode);\n\t      } else if (vtype === VELEMENT) {\n\t          node = initVelem(vnode, parentContext, namespaceURI);\n\t      } else if (vtype === VCOMPONENT) {\n\t          node = initVcomponent(vnode, parentContext, namespaceURI);\n\t      } else if (vtype === VSTATELESS) {\n\t          node = initVstateless(vnode, parentContext, namespaceURI);\n\t      } else if (vtype === VCOMMENT) {\n\t          node = document.createComment(vnode.comment);\n\t      }\n\t      return node;\n\t  }\n\t\n\t  function destroyVnode(vnode, node) {\n\t      var vtype = vnode.vtype;\n\t\n\t      if (vtype === VELEMENT) {\n\t          destroyVelem(vnode, node);\n\t      } else if (vtype === VCOMPONENT) {\n\t          destroyVcomponent(vnode, node);\n\t      } else if (vtype === VSTATELESS) {\n\t          destroyVstateless(vnode, node);\n\t      }\n\t  }\n\t\n\t  function initVelem(velem, parentContext, namespaceURI) {\n\t      var type = velem.type;\n\t      var props = velem.props;\n\t\n\t      var node = null;\n\t\n\t      if (type === 'svg' || namespaceURI === SVGNamespaceURI) {\n\t          node = document.createElementNS(SVGNamespaceURI, type);\n\t          namespaceURI = SVGNamespaceURI;\n\t      } else {\n\t          node = document.createElement(type);\n\t      }\n\t\n\t      var children = props.children;\n\t\n\t      var vchildren = node.vchildren = [];\n\t      if (isArr(children)) {\n\t          flattenChildren(children, collectChild, vchildren);\n\t      } else {\n\t          collectChild(children, vchildren);\n\t      }\n\t\n\t      for (var i = 0, len = vchildren.length; i < len; i++) {\n\t          node.appendChild(initVnode(vchildren[i], parentContext, namespaceURI));\n\t      }\n\t\n\t      var isCustomComponent = type.indexOf('-') >= 0 || props.is != null;\n\t      setProps(node, props, isCustomComponent);\n\t\n\t      attachRef(velem.refs, velem.ref, node);\n\t\n\t      return node;\n\t  }\n\t\n\t  function collectChild(child, children) {\n\t      if (child != null && typeof child !== 'boolean') {\n\t          children[children.length] = child.vtype ? child : '' + child;\n\t      }\n\t  }\n\t\n\t  function updateVelem(velem, newVelem, node, parentContext) {\n\t      var props = velem.props;\n\t      var type = velem.type;\n\t\n\t      var newProps = newVelem.props;\n\t      var oldHtml = props.dangerouslySetInnerHTML && props.dangerouslySetInnerHTML.__html;\n\t      var newChildren = newProps.children;\n\t      var vchildren = node.vchildren;\n\t      var childNodes = node.childNodes;\n\t      var namespaceURI = node.namespaceURI;\n\t\n\t      var isCustomComponent = type.indexOf('-') >= 0 || props.is != null;\n\t      var vchildrenLen = vchildren.length;\n\t      var newVchildren = node.vchildren = [];\n\t\n\t      if (isArr(newChildren)) {\n\t          flattenChildren(newChildren, collectChild, newVchildren);\n\t      } else {\n\t          collectChild(newChildren, newVchildren);\n\t      }\n\t\n\t      var newVchildrenLen = newVchildren.length;\n\t\n\t      if (oldHtml == null && vchildrenLen) {\n\t          var shouldRemove = null;\n\t          var patches = Array(newVchildrenLen);\n\t\n\t          for (var i = 0; i < vchildrenLen; i++) {\n\t              var vnode = vchildren[i];\n\t              for (var j = 0; j < newVchildrenLen; j++) {\n\t                  if (patches[j]) {\n\t                      continue;\n\t                  }\n\t                  var newVnode = newVchildren[j];\n\t                  if (vnode === newVnode) {\n\t                      patches[j] = {\n\t                          vnode: vnode,\n\t                          node: childNodes[i]\n\t                      };\n\t                      vchildren[i] = null;\n\t                      break;\n\t                  }\n\t              }\n\t          }\n\t\n\t          outer: for (var i = 0; i < vchildrenLen; i++) {\n\t              var vnode = vchildren[i];\n\t              if (vnode === null) {\n\t                  continue;\n\t              }\n\t              var _type = vnode.type;\n\t              var key = vnode.key;\n\t              var _refs = vnode.refs;\n\t\n\t              var childNode = childNodes[i];\n\t\n\t              for (var j = 0; j < newVchildrenLen; j++) {\n\t                  if (patches[j]) {\n\t                      continue;\n\t                  }\n\t                  var newVnode = newVchildren[j];\n\t                  if (newVnode.type === _type && newVnode.key === key && newVnode.refs === _refs) {\n\t                      patches[j] = {\n\t                          vnode: vnode,\n\t                          node: childNode\n\t                      };\n\t                      continue outer;\n\t                  }\n\t              }\n\t\n\t              if (!shouldRemove) {\n\t                  shouldRemove = [];\n\t              }\n\t              shouldRemove[shouldRemove.length] = childNode;\n\t              // shouldRemove.push(childNode)\n\t              destroyVnode(vnode, childNode);\n\t          }\n\t\n\t          if (shouldRemove) {\n\t              for (var i = 0, len = shouldRemove.length; i < len; i++) {\n\t                  node.removeChild(shouldRemove[i]);\n\t              }\n\t          }\n\t\n\t          for (var i = 0; i < newVchildrenLen; i++) {\n\t              var newVnode = newVchildren[i];\n\t              var patchItem = patches[i];\n\t              if (patchItem) {\n\t                  var vnode = patchItem.vnode;\n\t                  var newChildNode = patchItem.node;\n\t                  if (newVnode !== vnode) {\n\t                      var vtype = newVnode.vtype;\n\t                      if (!vtype) {\n\t                          // textNode\n\t                          newChildNode.nodeValue = newVnode;\n\t                          // newChildNode.replaceData(0, vnode.length, newVnode)\n\t                      } else if (vtype === VELEMENT) {\n\t                              newChildNode = updateVelem(vnode, newVnode, newChildNode, parentContext);\n\t                          } else if (vtype === VCOMPONENT) {\n\t                              newChildNode = updateVcomponent(vnode, newVnode, newChildNode, parentContext);\n\t                          } else if (vtype === VSTATELESS) {\n\t                              newChildNode = updateVstateless(vnode, newVnode, newChildNode, parentContext);\n\t                          }\n\t                  }\n\t                  var currentNode = childNodes[i];\n\t                  if (currentNode !== newChildNode) {\n\t                      node.insertBefore(newChildNode, currentNode || null);\n\t                  }\n\t              } else {\n\t                  var newChildNode = initVnode(newVnode, parentContext, namespaceURI);\n\t                  node.insertBefore(newChildNode, childNodes[i] || null);\n\t              }\n\t          }\n\t          patchProps(node, props, newProps, isCustomComponent);\n\t      } else {\n\t          // should patch props first, make sure innerHTML was cleared\n\t          patchProps(node, props, newProps, isCustomComponent);\n\t          for (var i = 0; i < newVchildrenLen; i++) {\n\t              node.appendChild(initVnode(newVchildren[i], parentContext, namespaceURI));\n\t          }\n\t      }\n\t\n\t      if (velem.ref !== newVelem.ref) {\n\t          detachRef(velem.refs, velem.ref);\n\t          attachRef(newVelem.refs, newVelem.ref, node);\n\t      }\n\t      return node;\n\t  }\n\t\n\t  function destroyVelem(velem, node) {\n\t      var props = velem.props;\n\t      var vchildren = node.vchildren;\n\t      var childNodes = node.childNodes;\n\t\n\t      for (var i = 0, len = vchildren.length; i < len; i++) {\n\t          destroyVnode(vchildren[i], childNodes[i]);\n\t      }\n\t\n\t      detachRef(velem.refs, velem.ref);\n\t\n\t      node.eventStore = node.vchildren = null;\n\t      for (var key in props) {\n\t          if (props.hasOwnProperty(key) && EVENT_KEYS.test(key)) {\n\t              key = getEventName(key);\n\t              if (notBubbleEvents[key] === true) {\n\t                  node[key] = null;\n\t              }\n\t          }\n\t      }\n\t  }\n\t\n\t  function initVstateless(vstateless, parentContext, namespaceURI) {\n\t      var vnode = renderVstateless(vstateless, parentContext);\n\t      var node = initVnode(vnode, parentContext, namespaceURI);\n\t      node.cache = node.cache || {};\n\t      node.cache[vstateless.id] = vnode;\n\t      return node;\n\t  }\n\t  function updateVstateless(vstateless, newVstateless, node, parentContext) {\n\t      var id = vstateless.id;\n\t      var vnode = node.cache[id];\n\t      delete node.cache[id];\n\t      var newVnode = renderVstateless(newVstateless, parentContext);\n\t      var newNode = compareTwoVnodes(vnode, newVnode, node, parentContext);\n\t      newNode.cache = newNode.cache || {};\n\t      newNode.cache[newVstateless.id] = newVnode;\n\t      if (newNode !== node) {\n\t          extend(newNode.cache, node.cache);\n\t      }\n\t      return newNode;\n\t  }\n\t  function destroyVstateless(vstateless, node) {\n\t      var id = vstateless.id;\n\t      var vnode = node.cache[id];\n\t      delete node.cache[id];\n\t      destroyVnode(vnode, node);\n\t  }\n\t\n\t  function renderVstateless(vstateless, parentContext) {\n\t      var factory = vstateless.type;\n\t      var props = vstateless.props;\n\t\n\t      var componentContext = getContextByTypes(parentContext, factory.contextTypes);\n\t      var vnode = factory(props, componentContext);\n\t      if (vnode && vnode.render) {\n\t          vnode = vnode.render();\n\t      }\n\t      if (vnode === null || vnode === false) {\n\t          vnode = createVcomment('react-empty: ' + getUid());\n\t      } else if (!vnode || !vnode.vtype) {\n\t          throw new Error('@' + factory.name + '#render:You may have returned undefined, an array or some other invalid object');\n\t      }\n\t      return vnode;\n\t  }\n\t\n\t  function initVcomponent(vcomponent, parentContext, namespaceURI) {\n\t      var Component = vcomponent.type;\n\t      var props = vcomponent.props;\n\t      var id = vcomponent.id;\n\t\n\t      var componentContext = getContextByTypes(parentContext, Component.contextTypes);\n\t      var component = new Component(props, componentContext);\n\t      var updater = component.$updater;\n\t      var cache = component.$cache;\n\t\n\t      cache.parentContext = parentContext;\n\t      updater.isPending = true;\n\t      component.props = component.props || props;\n\t      component.context = component.context || componentContext;\n\t      if (component.componentWillMount) {\n\t          component.componentWillMount();\n\t          component.state = updater.getState();\n\t      }\n\t      var vnode = renderComponent(component, parentContext);\n\t      var node = initVnode(vnode, vnode.context, namespaceURI);\n\t      node.cache = node.cache || {};\n\t      node.cache[id] = component;\n\t      cache.vnode = vnode;\n\t      cache.node = node;\n\t      cache.isMounted = true;\n\t      pendingComponents.push(component);\n\t      attachRef(vcomponent.refs, vcomponent.ref, component);\n\t      return node;\n\t  }\n\t  function updateVcomponent(vcomponent, newVcomponent, node, parentContext) {\n\t      var id = vcomponent.id;\n\t      var component = node.cache[id];\n\t      var updater = component.$updater;\n\t      var cache = component.$cache;\n\t      var Component = newVcomponent.type;\n\t      var nextProps = newVcomponent.props;\n\t\n\t      var componentContext = getContextByTypes(parentContext, Component.contextTypes);\n\t      delete node.cache[id];\n\t      node.cache[newVcomponent.id] = component;\n\t      cache.parentContext = parentContext;\n\t      if (component.componentWillReceiveProps) {\n\t          updater.isPending = true;\n\t          component.componentWillReceiveProps(nextProps, componentContext);\n\t          updater.isPending = false;\n\t      }\n\t      updater.emitUpdate(nextProps, componentContext);\n\t\n\t      if (vcomponent.ref !== newVcomponent.ref) {\n\t          detachRef(vcomponent.refs, vcomponent.ref);\n\t          attachRef(newVcomponent.refs, newVcomponent.ref, component);\n\t      }\n\t      return cache.node;\n\t  }\n\t  function destroyVcomponent(vcomponent, node) {\n\t      var id = vcomponent.id;\n\t      var component = node.cache[id];\n\t      var cache = component.$cache;\n\t      delete node.cache[id];\n\t      detachRef(vcomponent.refs, vcomponent.ref);\n\t      component.setState = component.forceUpdate = noop;\n\t      if (component.componentWillUnmount) {\n\t          component.componentWillUnmount();\n\t      }\n\t      destroyVnode(cache.vnode, node);\n\t      delete component.setState;\n\t      cache.isMounted = false;\n\t      cache.node = cache.parentContext = cache.vnode = component.refs = component.context = null;\n\t  }\n\t\n\t  function getContextByTypes(curContext, contextTypes) {\n\t      var context = {};\n\t      if (!contextTypes || !curContext) {\n\t          return context;\n\t      }\n\t      for (var key in contextTypes) {\n\t          if (contextTypes.hasOwnProperty(key)) {\n\t              context[key] = curContext[key];\n\t          }\n\t      }\n\t      return context;\n\t  }\n\t\n\t  function renderComponent(component, parentContext) {\n\t      refs = component.refs;\n\t      var vnode = component.render();\n\t\n\t      if (vnode === null || vnode === false) {\n\t          vnode = createVcomment('react-empty: ' + getUid());\n\t      } else if (!vnode || !vnode.vtype) {\n\t          throw new Error('@' + component.constructor.name + '#render:You may have returned undefined, an array or some other invalid object');\n\t      }\n\t\n\t      var curContext = refs = null;\n\t      if (component.getChildContext) {\n\t          curContext = component.getChildContext();\n\t      }\n\t      if (curContext) {\n\t          curContext = extend(extend({}, parentContext), curContext);\n\t      } else {\n\t          curContext = parentContext;\n\t      }\n\t      vnode.context = curContext;\n\t      return vnode;\n\t  }\n\t\n\t  var pendingComponents = [];\n\t\n\t  function clearPendingComponents() {\n\t      var components = pendingComponents;\n\t      var len = components.length;\n\t      if (!len) {\n\t          return;\n\t      }\n\t      pendingComponents = [];\n\t      var i = -1;\n\t      while (len--) {\n\t          var component = components[++i];\n\t          var updater = component.$updater;\n\t          if (component.componentDidMount) {\n\t              component.componentDidMount();\n\t          }\n\t          updater.isPending = false;\n\t          updater.emitUpdate();\n\t      }\n\t  }\n\t\n\t  function compareTwoVnodes(vnode, newVnode, node, parentContext) {\n\t      var newNode = node;\n\t\n\t      if (newVnode == null) {\n\t          // remove\n\t          destroyVnode(vnode, node);\n\t          node.parentNode.removeChild(node);\n\t      } else if (vnode.type !== newVnode.type || newVnode.key !== vnode.key) {\n\t          // replace\n\t          destroyVnode(vnode, node);\n\t          newNode = initVnode(newVnode, parentContext, node.namespaceURI);\n\t          node.parentNode.replaceChild(newNode, node);\n\t      } else if (vnode !== newVnode) {\n\t          // same type and same key -> update\n\t          var vtype = vnode.vtype;\n\t          if (vtype === VELEMENT) {\n\t              newNode = updateVelem(vnode, newVnode, node, parentContext);\n\t          } else if (vtype === VCOMPONENT) {\n\t              newNode = updateVcomponent(vnode, newVnode, node, parentContext);\n\t          } else if (vtype === VSTATELESS) {\n\t              newNode = updateVstateless(vnode, newVnode, node, parentContext);\n\t          }\n\t      }\n\t\n\t      return newNode;\n\t  }\n\t\n\t  function getDOMNode() {\n\t      return this;\n\t  }\n\t\n\t  function attachRef(refs, refKey, refValue) {\n\t      if (!refs || refKey == null || !refValue) {\n\t          return;\n\t      }\n\t      if (refValue.nodeName && !refValue.getDOMNode) {\n\t          // support react v0.13 style: this.refs.myInput.getDOMNode()\n\t          refValue.getDOMNode = getDOMNode;\n\t      }\n\t      if (isFn(refKey)) {\n\t          refKey(refValue);\n\t      } else {\n\t          refs[refKey] = refValue;\n\t      }\n\t  }\n\t\n\t  function detachRef(refs, refKey) {\n\t      if (!refs || refKey == null) {\n\t          return;\n\t      }\n\t      if (isFn(refKey)) {\n\t          refKey(null);\n\t      } else {\n\t          delete refs[refKey];\n\t      }\n\t  }\n\t\n\t  var updateQueue = {\n\t  \tupdaters: [],\n\t  \tisPending: false,\n\t  \tadd: function add(updater) {\n\t  \t\tthis.updaters.push(updater);\n\t  \t},\n\t  \tbatchUpdate: function batchUpdate() {\n\t  \t\tif (this.isPending) {\n\t  \t\t\treturn;\n\t  \t\t}\n\t  \t\tthis.isPending = true;\n\t  \t\t/*\n\t     each updater.update may add new updater to updateQueue\n\t     clear them with a loop\n\t     event bubbles from bottom-level to top-level\n\t     reverse the updater order can merge some props and state and reduce the refresh times\n\t     see Updater.update method below to know why\n\t    */\n\t  \t\tvar updaters = this.updaters;\n\t\n\t  \t\tvar updater = undefined;\n\t  \t\twhile (updater = updaters.pop()) {\n\t  \t\t\tupdater.updateComponent();\n\t  \t\t}\n\t  \t\tthis.isPending = false;\n\t  \t}\n\t  };\n\t\n\t  function Updater(instance) {\n\t  \tthis.instance = instance;\n\t  \tthis.pendingStates = [];\n\t  \tthis.pendingCallbacks = [];\n\t  \tthis.isPending = false;\n\t  \tthis.nextProps = this.nextContext = null;\n\t  \tthis.clearCallbacks = this.clearCallbacks.bind(this);\n\t  }\n\t\n\t  Updater.prototype = {\n\t  \temitUpdate: function emitUpdate(nextProps, nextContext) {\n\t  \t\tthis.nextProps = nextProps;\n\t  \t\tthis.nextContext = nextContext;\n\t  \t\t// receive nextProps!! should update immediately\n\t  \t\tnextProps || !updateQueue.isPending ? this.updateComponent() : updateQueue.add(this);\n\t  \t},\n\t  \tupdateComponent: function updateComponent() {\n\t  \t\tvar instance = this.instance;\n\t  \t\tvar pendingStates = this.pendingStates;\n\t  \t\tvar nextProps = this.nextProps;\n\t  \t\tvar nextContext = this.nextContext;\n\t\n\t  \t\tif (nextProps || pendingStates.length > 0) {\n\t  \t\t\tnextProps = nextProps || instance.props;\n\t  \t\t\tnextContext = nextContext || instance.context;\n\t  \t\t\tthis.nextProps = this.nextContext = null;\n\t  \t\t\t// merge the nextProps and nextState and update by one time\n\t  \t\t\tshouldUpdate(instance, nextProps, this.getState(), nextContext, this.clearCallbacks);\n\t  \t\t}\n\t  \t},\n\t  \taddState: function addState(nextState) {\n\t  \t\tif (nextState) {\n\t  \t\t\tthis.pendingStates.push(nextState);\n\t  \t\t\tif (!this.isPending) {\n\t  \t\t\t\tthis.emitUpdate();\n\t  \t\t\t}\n\t  \t\t}\n\t  \t},\n\t  \treplaceState: function replaceState(nextState) {\n\t  \t\tvar pendingStates = this.pendingStates;\n\t\n\t  \t\tpendingStates.pop();\n\t  \t\t// push special params to point out should replace state\n\t  \t\tpendingStates.push([nextState]);\n\t  \t},\n\t  \tgetState: function getState() {\n\t  \t\tvar instance = this.instance;\n\t  \t\tvar pendingStates = this.pendingStates;\n\t  \t\tvar state = instance.state;\n\t  \t\tvar props = instance.props;\n\t\n\t  \t\tif (pendingStates.length) {\n\t  \t\t\tstate = extend({}, state);\n\t  \t\t\teachItem(pendingStates, function (nextState) {\n\t  \t\t\t\t// replace state\n\t  \t\t\t\tif (isArr(nextState)) {\n\t  \t\t\t\t\tstate = extend({}, nextState[0]);\n\t  \t\t\t\t\treturn;\n\t  \t\t\t\t}\n\t  \t\t\t\tif (isFn(nextState)) {\n\t  \t\t\t\t\tnextState = nextState.call(instance, state, props);\n\t  \t\t\t\t}\n\t  \t\t\t\textend(state, nextState);\n\t  \t\t\t});\n\t  \t\t\tpendingStates.length = 0;\n\t  \t\t}\n\t  \t\treturn state;\n\t  \t},\n\t  \tclearCallbacks: function clearCallbacks() {\n\t  \t\tvar pendingCallbacks = this.pendingCallbacks;\n\t  \t\tvar instance = this.instance;\n\t\n\t  \t\tif (pendingCallbacks.length > 0) {\n\t  \t\t\tthis.pendingCallbacks = [];\n\t  \t\t\teachItem(pendingCallbacks, function (callback) {\n\t  \t\t\t\treturn callback.call(instance);\n\t  \t\t\t});\n\t  \t\t}\n\t  \t},\n\t  \taddCallback: function addCallback(callback) {\n\t  \t\tif (isFn(callback)) {\n\t  \t\t\tthis.pendingCallbacks.push(callback);\n\t  \t\t}\n\t  \t}\n\t  };\n\t  function Component(props, context) {\n\t  \tthis.$updater = new Updater(this);\n\t  \tthis.$cache = { isMounted: false };\n\t  \tthis.props = props;\n\t  \tthis.state = {};\n\t  \tthis.refs = {};\n\t  \tthis.context = context;\n\t  }\n\t\n\t  Component.prototype = {\n\t  \tconstructor: Component,\n\t  \t// getChildContext: _.noop,\n\t  \t// componentWillUpdate: _.noop,\n\t  \t// componentDidUpdate: _.noop,\n\t  \t// componentWillReceiveProps: _.noop,\n\t  \t// componentWillMount: _.noop,\n\t  \t// componentDidMount: _.noop,\n\t  \t// componentWillUnmount: _.noop,\n\t  \t// shouldComponentUpdate(nextProps, nextState) {\n\t  \t// \treturn true\n\t  \t// },\n\t  \tforceUpdate: function forceUpdate(callback) {\n\t  \t\tvar $updater = this.$updater;\n\t  \t\tvar $cache = this.$cache;\n\t  \t\tvar props = this.props;\n\t  \t\tvar state = this.state;\n\t  \t\tvar context = this.context;\n\t\n\t  \t\tif ($updater.isPending || !$cache.isMounted) {\n\t  \t\t\treturn;\n\t  \t\t}\n\t  \t\tvar nextProps = $cache.props || props;\n\t  \t\tvar nextState = $cache.state || state;\n\t  \t\tvar nextContext = $cache.context || {};\n\t  \t\tvar parentContext = $cache.parentContext;\n\t  \t\tvar node = $cache.node;\n\t  \t\tvar vnode = $cache.vnode;\n\t  \t\t$cache.props = $cache.state = $cache.context = null;\n\t  \t\t$updater.isPending = true;\n\t  \t\tif (this.componentWillUpdate) {\n\t  \t\t\tthis.componentWillUpdate(nextProps, nextState, nextContext);\n\t  \t\t}\n\t  \t\tthis.state = nextState;\n\t  \t\tthis.props = nextProps;\n\t  \t\tthis.context = nextContext;\n\t  \t\tvar newVnode = renderComponent(this, parentContext);\n\t  \t\tvar newNode = compareTwoVnodes(vnode, newVnode, node, newVnode.context);\n\t  \t\tif (newNode !== node) {\n\t  \t\t\tnewNode.cache = newNode.cache || {};\n\t  \t\t\textend(newNode.cache, node.cache);\n\t  \t\t}\n\t  \t\t$cache.vnode = newVnode;\n\t  \t\t$cache.node = newNode;\n\t  \t\tclearPendingComponents();\n\t  \t\tif (this.componentDidUpdate) {\n\t  \t\t\tthis.componentDidUpdate(props, state, context);\n\t  \t\t}\n\t  \t\tif (callback) {\n\t  \t\t\tcallback.call(this);\n\t  \t\t}\n\t  \t\t$updater.isPending = false;\n\t  \t\t$updater.emitUpdate();\n\t  \t},\n\t  \tsetState: function setState(nextState, callback) {\n\t  \t\tvar $updater = this.$updater;\n\t\n\t  \t\t$updater.addCallback(callback);\n\t  \t\t$updater.addState(nextState);\n\t  \t},\n\t  \treplaceState: function replaceState(nextState, callback) {\n\t  \t\tvar $updater = this.$updater;\n\t\n\t  \t\t$updater.addCallback(callback);\n\t  \t\t$updater.replaceState(nextState);\n\t  \t},\n\t  \tgetDOMNode: function getDOMNode() {\n\t  \t\tvar node = this.$cache.node;\n\t  \t\treturn node && node.nodeName === '#comment' ? null : node;\n\t  \t},\n\t  \tisMounted: function isMounted() {\n\t  \t\treturn this.$cache.isMounted;\n\t  \t}\n\t  };\n\t\n\t  function shouldUpdate(component, nextProps, nextState, nextContext, callback) {\n\t  \tvar shouldComponentUpdate = true;\n\t  \tif (component.shouldComponentUpdate) {\n\t  \t\tshouldComponentUpdate = component.shouldComponentUpdate(nextProps, nextState, nextContext);\n\t  \t}\n\t  \tif (shouldComponentUpdate === false) {\n\t  \t\tcomponent.props = nextProps;\n\t  \t\tcomponent.state = nextState;\n\t  \t\tcomponent.context = nextContext || {};\n\t  \t\treturn;\n\t  \t}\n\t  \tvar cache = component.$cache;\n\t  \tcache.props = nextProps;\n\t  \tcache.state = nextState;\n\t  \tcache.context = nextContext || {};\n\t  \tcomponent.forceUpdate(callback);\n\t  }\n\t\n\t  // event config\n\t  var notBubbleEvents = {\n\t  \tonmouseleave: 1,\n\t  \tonmouseenter: 1,\n\t  \tonload: 1,\n\t  \tonunload: 1,\n\t  \tonscroll: 1,\n\t  \tonfocus: 1,\n\t  \tonblur: 1,\n\t  \tonrowexit: 1,\n\t  \tonbeforeunload: 1,\n\t  \tonstop: 1,\n\t  \tondragdrop: 1,\n\t  \tondragenter: 1,\n\t  \tondragexit: 1,\n\t  \tondraggesture: 1,\n\t  \tondragover: 1,\n\t  \toncontextmenu: 1\n\t  };\n\t\n\t  function getEventName(key) {\n\t  \tkey = key === 'onDoubleClick' ? 'ondblclick' : key;\n\t  \treturn key.toLowerCase();\n\t  }\n\t\n\t  var eventTypes = {};\n\t\n\t  function addEvent(elem, eventType, listener) {\n\t  \teventType = getEventName(eventType);\n\t\n\t  \tif (notBubbleEvents[eventType] === 1) {\n\t  \t\telem[eventType] = listener;\n\t  \t\treturn;\n\t  \t}\n\t\n\t  \tvar eventStore = elem.eventStore || (elem.eventStore = {});\n\t  \teventStore[eventType] = listener;\n\t\n\t  \tif (!eventTypes[eventType]) {\n\t  \t\t// onclick -> click\n\t  \t\tdocument.addEventListener(eventType.substr(2), dispatchEvent);\n\t  \t\teventTypes[eventType] = true;\n\t  \t}\n\t\n\t  \tvar nodeName = elem.nodeName;\n\t\n\t  \tif (eventType === 'onchange' && (nodeName === 'INPUT' || nodeName === 'TEXTAREA')) {\n\t  \t\taddEvent(elem, 'oninput', listener);\n\t  \t}\n\t  }\n\t\n\t  function removeEvent(elem, eventType) {\n\t  \teventType = getEventName(eventType);\n\t  \tif (notBubbleEvents[eventType] === 1) {\n\t  \t\telem[eventType] = null;\n\t  \t\treturn;\n\t  \t}\n\t\n\t  \tvar eventStore = elem.eventStore || (elem.eventStore = {});\n\t  \tdelete eventStore[eventType];\n\t\n\t  \tvar nodeName = elem.nodeName;\n\t\n\t  \tif (eventType === 'onchange' && (nodeName === 'INPUT' || nodeName === 'TEXTAREA')) {\n\t  \t\tdelete eventStore['oninput'];\n\t  \t}\n\t  }\n\t\n\t  function dispatchEvent(event) {\n\t  \tvar target = event.target;\n\t  \tvar type = event.type;\n\t\n\t  \tvar eventType = 'on' + type;\n\t  \tvar syntheticEvent = undefined;\n\t  \tupdateQueue.isPending = true;\n\t  \twhile (target) {\n\t  \t\tvar _target = target;\n\t  \t\tvar eventStore = _target.eventStore;\n\t\n\t  \t\tvar listener = eventStore && eventStore[eventType];\n\t  \t\tif (!listener) {\n\t  \t\t\ttarget = target.parentNode;\n\t  \t\t\tcontinue;\n\t  \t\t}\n\t  \t\tif (!syntheticEvent) {\n\t  \t\t\tsyntheticEvent = createSyntheticEvent(event);\n\t  \t\t}\n\t  \t\tsyntheticEvent.currentTarget = target;\n\t  \t\tlistener.call(target, syntheticEvent);\n\t  \t\tif (syntheticEvent.$cancalBubble) {\n\t  \t\t\tbreak;\n\t  \t\t}\n\t  \t\ttarget = target.parentNode;\n\t  \t}\n\t  \tupdateQueue.isPending = false;\n\t  \tupdateQueue.batchUpdate();\n\t  }\n\t\n\t  function createSyntheticEvent(nativeEvent) {\n\t  \tvar syntheticEvent = {};\n\t  \tvar cancalBubble = function cancalBubble() {\n\t  \t\treturn syntheticEvent.$cancalBubble = true;\n\t  \t};\n\t  \tsyntheticEvent.nativeEvent = nativeEvent;\n\t  \tfor (var key in nativeEvent) {\n\t  \t\tif (typeof nativeEvent[key] !== 'function') {\n\t  \t\t\tsyntheticEvent[key] = nativeEvent[key];\n\t  \t\t} else if (key === 'stopPropagation' || key === 'stopImmediatePropagation') {\n\t  \t\t\tsyntheticEvent[key] = cancalBubble;\n\t  \t\t} else {\n\t  \t\t\tsyntheticEvent[key] = nativeEvent[key].bind(nativeEvent);\n\t  \t\t}\n\t  \t}\n\t  \treturn syntheticEvent;\n\t  }\n\t\n\t  function setStyle(elemStyle, styles) {\n\t      for (var styleName in styles) {\n\t          if (styles.hasOwnProperty(styleName)) {\n\t              setStyleValue(elemStyle, styleName, styles[styleName]);\n\t          }\n\t      }\n\t  }\n\t\n\t  function removeStyle(elemStyle, styles) {\n\t      for (var styleName in styles) {\n\t          if (styles.hasOwnProperty(styleName)) {\n\t              elemStyle[styleName] = '';\n\t          }\n\t      }\n\t  }\n\t\n\t  function patchStyle(elemStyle, style, newStyle) {\n\t      if (style === newStyle) {\n\t          return;\n\t      }\n\t      if (!newStyle && style) {\n\t          removeStyle(elemStyle, style);\n\t          return;\n\t      } else if (newStyle && !style) {\n\t          setStyle(elemStyle, newStyle);\n\t          return;\n\t      }\n\t\n\t      var keyMap = {};\n\t      for (var key in style) {\n\t          if (style.hasOwnProperty(key)) {\n\t              keyMap[key] = true;\n\t              if (style[key] !== newStyle[key]) {\n\t                  setStyleValue(elemStyle, key, newStyle[key]);\n\t              }\n\t          }\n\t      }\n\t      for (var key in newStyle) {\n\t          if (newStyle.hasOwnProperty(key) && keyMap[key] !== true) {\n\t              if (style[key] !== newStyle[key]) {\n\t                  setStyleValue(elemStyle, key, newStyle[key]);\n\t              }\n\t          }\n\t      }\n\t  }\n\t\n\t  /**\n\t   * CSS properties which accept numbers but are not in units of \"px\".\n\t   */\n\t  var isUnitlessNumber = {\n\t      animationIterationCount: 1,\n\t      borderImageOutset: 1,\n\t      borderImageSlice: 1,\n\t      borderImageWidth: 1,\n\t      boxFlex: 1,\n\t      boxFlexGroup: 1,\n\t      boxOrdinalGroup: 1,\n\t      columnCount: 1,\n\t      flex: 1,\n\t      flexGrow: 1,\n\t      flexPositive: 1,\n\t      flexShrink: 1,\n\t      flexNegative: 1,\n\t      flexOrder: 1,\n\t      gridRow: 1,\n\t      gridColumn: 1,\n\t      fontWeight: 1,\n\t      lineClamp: 1,\n\t      lineHeight: 1,\n\t      opacity: 1,\n\t      order: 1,\n\t      orphans: 1,\n\t      tabSize: 1,\n\t      widows: 1,\n\t      zIndex: 1,\n\t      zoom: 1,\n\t\n\t      // SVG-related properties\n\t      fillOpacity: 1,\n\t      floodOpacity: 1,\n\t      stopOpacity: 1,\n\t      strokeDasharray: 1,\n\t      strokeDashoffset: 1,\n\t      strokeMiterlimit: 1,\n\t      strokeOpacity: 1,\n\t      strokeWidth: 1\n\t  };\n\t\n\t  function prefixKey(prefix, key) {\n\t      return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n\t  }\n\t\n\t  var prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\t\n\t  Object.keys(isUnitlessNumber).forEach(function (prop) {\n\t      prefixes.forEach(function (prefix) {\n\t          isUnitlessNumber[prefixKey(prefix, prop)] = 1;\n\t      });\n\t  });\n\t\n\t  var RE_NUMBER = /^-?\\d+(\\.\\d+)?$/;\n\t  function setStyleValue(elemStyle, styleName, styleValue) {\n\t\n\t      if (!isUnitlessNumber[styleName] && RE_NUMBER.test(styleValue)) {\n\t          elemStyle[styleName] = styleValue + 'px';\n\t          return;\n\t      }\n\t\n\t      if (styleName === 'float') {\n\t          styleName = 'cssFloat';\n\t      }\n\t\n\t      if (styleValue == null || typeof styleValue === 'boolean') {\n\t          styleValue = '';\n\t      }\n\t\n\t      elemStyle[styleName] = styleValue;\n\t  }\n\t\n\t  var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n\t  var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\uB7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\n\t\n\t  var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\t\n\t  var isCustomAttribute = RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$'));\n\t  // will merge some data in properties below\n\t  var properties = {};\n\t\n\t  /**\n\t   * Mapping from normalized, camelcased property names to a configuration that\n\t   * specifies how the associated DOM property should be accessed or rendered.\n\t   */\n\t  var MUST_USE_PROPERTY = 0x1;\n\t  var HAS_BOOLEAN_VALUE = 0x4;\n\t  var HAS_NUMERIC_VALUE = 0x8;\n\t  var HAS_POSITIVE_NUMERIC_VALUE = 0x10 | 0x8;\n\t  var HAS_OVERLOADED_BOOLEAN_VALUE = 0x20;\n\t\n\t  // html config\n\t  var HTMLDOMPropertyConfig = {\n\t      props: {\n\t          /**\n\t           * Standard Properties\n\t           */\n\t          accept: 0,\n\t          acceptCharset: 0,\n\t          accessKey: 0,\n\t          action: 0,\n\t          allowFullScreen: HAS_BOOLEAN_VALUE,\n\t          allowTransparency: 0,\n\t          alt: 0,\n\t          async: HAS_BOOLEAN_VALUE,\n\t          autoComplete: 0,\n\t          autoFocus: HAS_BOOLEAN_VALUE,\n\t          autoPlay: HAS_BOOLEAN_VALUE,\n\t          capture: HAS_BOOLEAN_VALUE,\n\t          cellPadding: 0,\n\t          cellSpacing: 0,\n\t          charSet: 0,\n\t          challenge: 0,\n\t          checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t          cite: 0,\n\t          classID: 0,\n\t          className: 0,\n\t          cols: HAS_POSITIVE_NUMERIC_VALUE,\n\t          colSpan: 0,\n\t          content: 0,\n\t          contentEditable: 0,\n\t          contextMenu: 0,\n\t          controls: HAS_BOOLEAN_VALUE,\n\t          coords: 0,\n\t          crossOrigin: 0,\n\t          data: 0, // For `<object />` acts as `src`.\n\t          dateTime: 0,\n\t          'default': HAS_BOOLEAN_VALUE,\n\t          // not in regular react, they did it in other way\n\t          defaultValue: MUST_USE_PROPERTY,\n\t          // not in regular react, they did it in other way\n\t          defaultChecked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t          defer: HAS_BOOLEAN_VALUE,\n\t          dir: 0,\n\t          disabled: HAS_BOOLEAN_VALUE,\n\t          download: HAS_OVERLOADED_BOOLEAN_VALUE,\n\t          draggable: 0,\n\t          encType: 0,\n\t          form: 0,\n\t          formAction: 0,\n\t          formEncType: 0,\n\t          formMethod: 0,\n\t          formNoValidate: HAS_BOOLEAN_VALUE,\n\t          formTarget: 0,\n\t          frameBorder: 0,\n\t          headers: 0,\n\t          height: 0,\n\t          hidden: HAS_BOOLEAN_VALUE,\n\t          high: 0,\n\t          href: 0,\n\t          hrefLang: 0,\n\t          htmlFor: 0,\n\t          httpEquiv: 0,\n\t          icon: 0,\n\t          id: 0,\n\t          inputMode: 0,\n\t          integrity: 0,\n\t          is: 0,\n\t          keyParams: 0,\n\t          keyType: 0,\n\t          kind: 0,\n\t          label: 0,\n\t          lang: 0,\n\t          list: 0,\n\t          loop: HAS_BOOLEAN_VALUE,\n\t          low: 0,\n\t          manifest: 0,\n\t          marginHeight: 0,\n\t          marginWidth: 0,\n\t          max: 0,\n\t          maxLength: 0,\n\t          media: 0,\n\t          mediaGroup: 0,\n\t          method: 0,\n\t          min: 0,\n\t          minLength: 0,\n\t          // Caution; `option.selected` is not updated if `select.multiple` is\n\t          // disabled with `removeAttribute`.\n\t          multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t          muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t          name: 0,\n\t          nonce: 0,\n\t          noValidate: HAS_BOOLEAN_VALUE,\n\t          open: HAS_BOOLEAN_VALUE,\n\t          optimum: 0,\n\t          pattern: 0,\n\t          placeholder: 0,\n\t          poster: 0,\n\t          preload: 0,\n\t          profile: 0,\n\t          radioGroup: 0,\n\t          readOnly: HAS_BOOLEAN_VALUE,\n\t          rel: 0,\n\t          required: HAS_BOOLEAN_VALUE,\n\t          reversed: HAS_BOOLEAN_VALUE,\n\t          role: 0,\n\t          rows: HAS_POSITIVE_NUMERIC_VALUE,\n\t          rowSpan: HAS_NUMERIC_VALUE,\n\t          sandbox: 0,\n\t          scope: 0,\n\t          scoped: HAS_BOOLEAN_VALUE,\n\t          scrolling: 0,\n\t          seamless: HAS_BOOLEAN_VALUE,\n\t          selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t          shape: 0,\n\t          size: HAS_POSITIVE_NUMERIC_VALUE,\n\t          sizes: 0,\n\t          span: HAS_POSITIVE_NUMERIC_VALUE,\n\t          spellCheck: 0,\n\t          src: 0,\n\t          srcDoc: 0,\n\t          srcLang: 0,\n\t          srcSet: 0,\n\t          start: HAS_NUMERIC_VALUE,\n\t          step: 0,\n\t          style: 0,\n\t          summary: 0,\n\t          tabIndex: 0,\n\t          target: 0,\n\t          title: 0,\n\t          // Setting .type throws on non-<input> tags\n\t          type: 0,\n\t          useMap: 0,\n\t          value: MUST_USE_PROPERTY,\n\t          width: 0,\n\t          wmode: 0,\n\t          wrap: 0,\n\t\n\t          /**\n\t           * RDFa Properties\n\t           */\n\t          about: 0,\n\t          datatype: 0,\n\t          inlist: 0,\n\t          prefix: 0,\n\t          // property is also supported for OpenGraph in meta tags.\n\t          property: 0,\n\t          resource: 0,\n\t          'typeof': 0,\n\t          vocab: 0,\n\t\n\t          /**\n\t           * Non-standard Properties\n\t           */\n\t          // autoCapitalize and autoCorrect are supported in Mobile Safari for\n\t          // keyboard hints.\n\t          autoCapitalize: 0,\n\t          autoCorrect: 0,\n\t          // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n\t          autoSave: 0,\n\t          // color is for Safari mask-icon link\n\t          color: 0,\n\t          // itemProp, itemScope, itemType are for\n\t          // Microdata support. See http://schema.org/docs/gs.html\n\t          itemProp: 0,\n\t          itemScope: HAS_BOOLEAN_VALUE,\n\t          itemType: 0,\n\t          // itemID and itemRef are for Microdata support as well but\n\t          // only specified in the WHATWG spec document. See\n\t          // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n\t          itemID: 0,\n\t          itemRef: 0,\n\t          // results show looking glass icon and recent searches on input\n\t          // search fields in WebKit/Blink\n\t          results: 0,\n\t          // IE-only attribute that specifies security restrictions on an iframe\n\t          // as an alternative to the sandbox attribute on IE<10\n\t          security: 0,\n\t          // IE-only attribute that controls focus behavior\n\t          unselectable: 0\n\t      },\n\t      attrNS: {},\n\t      domAttrs: {\n\t          acceptCharset: 'accept-charset',\n\t          className: 'class',\n\t          htmlFor: 'for',\n\t          httpEquiv: 'http-equiv'\n\t      },\n\t      domProps: {}\n\t  };\n\t\n\t  // svg config\n\t  var xlink = 'http://www.w3.org/1999/xlink';\n\t  var xml = 'http://www.w3.org/XML/1998/namespace';\n\t\n\t  // We use attributes for everything SVG so let's avoid some duplication and run\n\t  // code instead.\n\t  // The following are all specified in the HTML config already so we exclude here.\n\t  // - class (as className)\n\t  // - color\n\t  // - height\n\t  // - id\n\t  // - lang\n\t  // - max\n\t  // - media\n\t  // - method\n\t  // - min\n\t  // - name\n\t  // - style\n\t  // - target\n\t  // - type\n\t  // - width\n\t  var ATTRS = {\n\t      accentHeight: 'accent-height',\n\t      accumulate: 0,\n\t      additive: 0,\n\t      alignmentBaseline: 'alignment-baseline',\n\t      allowReorder: 'allowReorder',\n\t      alphabetic: 0,\n\t      amplitude: 0,\n\t      arabicForm: 'arabic-form',\n\t      ascent: 0,\n\t      attributeName: 'attributeName',\n\t      attributeType: 'attributeType',\n\t      autoReverse: 'autoReverse',\n\t      azimuth: 0,\n\t      baseFrequency: 'baseFrequency',\n\t      baseProfile: 'baseProfile',\n\t      baselineShift: 'baseline-shift',\n\t      bbox: 0,\n\t      begin: 0,\n\t      bias: 0,\n\t      by: 0,\n\t      calcMode: 'calcMode',\n\t      capHeight: 'cap-height',\n\t      clip: 0,\n\t      clipPath: 'clip-path',\n\t      clipRule: 'clip-rule',\n\t      clipPathUnits: 'clipPathUnits',\n\t      colorInterpolation: 'color-interpolation',\n\t      colorInterpolationFilters: 'color-interpolation-filters',\n\t      colorProfile: 'color-profile',\n\t      colorRendering: 'color-rendering',\n\t      contentScriptType: 'contentScriptType',\n\t      contentStyleType: 'contentStyleType',\n\t      cursor: 0,\n\t      cx: 0,\n\t      cy: 0,\n\t      d: 0,\n\t      decelerate: 0,\n\t      descent: 0,\n\t      diffuseConstant: 'diffuseConstant',\n\t      direction: 0,\n\t      display: 0,\n\t      divisor: 0,\n\t      dominantBaseline: 'dominant-baseline',\n\t      dur: 0,\n\t      dx: 0,\n\t      dy: 0,\n\t      edgeMode: 'edgeMode',\n\t      elevation: 0,\n\t      enableBackground: 'enable-background',\n\t      end: 0,\n\t      exponent: 0,\n\t      externalResourcesRequired: 'externalResourcesRequired',\n\t      fill: 0,\n\t      fillOpacity: 'fill-opacity',\n\t      fillRule: 'fill-rule',\n\t      filter: 0,\n\t      filterRes: 'filterRes',\n\t      filterUnits: 'filterUnits',\n\t      floodColor: 'flood-color',\n\t      floodOpacity: 'flood-opacity',\n\t      focusable: 0,\n\t      fontFamily: 'font-family',\n\t      fontSize: 'font-size',\n\t      fontSizeAdjust: 'font-size-adjust',\n\t      fontStretch: 'font-stretch',\n\t      fontStyle: 'font-style',\n\t      fontVariant: 'font-variant',\n\t      fontWeight: 'font-weight',\n\t      format: 0,\n\t      from: 0,\n\t      fx: 0,\n\t      fy: 0,\n\t      g1: 0,\n\t      g2: 0,\n\t      glyphName: 'glyph-name',\n\t      glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n\t      glyphOrientationVertical: 'glyph-orientation-vertical',\n\t      glyphRef: 'glyphRef',\n\t      gradientTransform: 'gradientTransform',\n\t      gradientUnits: 'gradientUnits',\n\t      hanging: 0,\n\t      horizAdvX: 'horiz-adv-x',\n\t      horizOriginX: 'horiz-origin-x',\n\t      ideographic: 0,\n\t      imageRendering: 'image-rendering',\n\t      'in': 0,\n\t      in2: 0,\n\t      intercept: 0,\n\t      k: 0,\n\t      k1: 0,\n\t      k2: 0,\n\t      k3: 0,\n\t      k4: 0,\n\t      kernelMatrix: 'kernelMatrix',\n\t      kernelUnitLength: 'kernelUnitLength',\n\t      kerning: 0,\n\t      keyPoints: 'keyPoints',\n\t      keySplines: 'keySplines',\n\t      keyTimes: 'keyTimes',\n\t      lengthAdjust: 'lengthAdjust',\n\t      letterSpacing: 'letter-spacing',\n\t      lightingColor: 'lighting-color',\n\t      limitingConeAngle: 'limitingConeAngle',\n\t      local: 0,\n\t      markerEnd: 'marker-end',\n\t      markerMid: 'marker-mid',\n\t      markerStart: 'marker-start',\n\t      markerHeight: 'markerHeight',\n\t      markerUnits: 'markerUnits',\n\t      markerWidth: 'markerWidth',\n\t      mask: 0,\n\t      maskContentUnits: 'maskContentUnits',\n\t      maskUnits: 'maskUnits',\n\t      mathematical: 0,\n\t      mode: 0,\n\t      numOctaves: 'numOctaves',\n\t      offset: 0,\n\t      opacity: 0,\n\t      operator: 0,\n\t      order: 0,\n\t      orient: 0,\n\t      orientation: 0,\n\t      origin: 0,\n\t      overflow: 0,\n\t      overlinePosition: 'overline-position',\n\t      overlineThickness: 'overline-thickness',\n\t      paintOrder: 'paint-order',\n\t      panose1: 'panose-1',\n\t      pathLength: 'pathLength',\n\t      patternContentUnits: 'patternContentUnits',\n\t      patternTransform: 'patternTransform',\n\t      patternUnits: 'patternUnits',\n\t      pointerEvents: 'pointer-events',\n\t      points: 0,\n\t      pointsAtX: 'pointsAtX',\n\t      pointsAtY: 'pointsAtY',\n\t      pointsAtZ: 'pointsAtZ',\n\t      preserveAlpha: 'preserveAlpha',\n\t      preserveAspectRatio: 'preserveAspectRatio',\n\t      primitiveUnits: 'primitiveUnits',\n\t      r: 0,\n\t      radius: 0,\n\t      refX: 'refX',\n\t      refY: 'refY',\n\t      renderingIntent: 'rendering-intent',\n\t      repeatCount: 'repeatCount',\n\t      repeatDur: 'repeatDur',\n\t      requiredExtensions: 'requiredExtensions',\n\t      requiredFeatures: 'requiredFeatures',\n\t      restart: 0,\n\t      result: 0,\n\t      rotate: 0,\n\t      rx: 0,\n\t      ry: 0,\n\t      scale: 0,\n\t      seed: 0,\n\t      shapeRendering: 'shape-rendering',\n\t      slope: 0,\n\t      spacing: 0,\n\t      specularConstant: 'specularConstant',\n\t      specularExponent: 'specularExponent',\n\t      speed: 0,\n\t      spreadMethod: 'spreadMethod',\n\t      startOffset: 'startOffset',\n\t      stdDeviation: 'stdDeviation',\n\t      stemh: 0,\n\t      stemv: 0,\n\t      stitchTiles: 'stitchTiles',\n\t      stopColor: 'stop-color',\n\t      stopOpacity: 'stop-opacity',\n\t      strikethroughPosition: 'strikethrough-position',\n\t      strikethroughThickness: 'strikethrough-thickness',\n\t      string: 0,\n\t      stroke: 0,\n\t      strokeDasharray: 'stroke-dasharray',\n\t      strokeDashoffset: 'stroke-dashoffset',\n\t      strokeLinecap: 'stroke-linecap',\n\t      strokeLinejoin: 'stroke-linejoin',\n\t      strokeMiterlimit: 'stroke-miterlimit',\n\t      strokeOpacity: 'stroke-opacity',\n\t      strokeWidth: 'stroke-width',\n\t      surfaceScale: 'surfaceScale',\n\t      systemLanguage: 'systemLanguage',\n\t      tableValues: 'tableValues',\n\t      targetX: 'targetX',\n\t      targetY: 'targetY',\n\t      textAnchor: 'text-anchor',\n\t      textDecoration: 'text-decoration',\n\t      textRendering: 'text-rendering',\n\t      textLength: 'textLength',\n\t      to: 0,\n\t      transform: 0,\n\t      u1: 0,\n\t      u2: 0,\n\t      underlinePosition: 'underline-position',\n\t      underlineThickness: 'underline-thickness',\n\t      unicode: 0,\n\t      unicodeBidi: 'unicode-bidi',\n\t      unicodeRange: 'unicode-range',\n\t      unitsPerEm: 'units-per-em',\n\t      vAlphabetic: 'v-alphabetic',\n\t      vHanging: 'v-hanging',\n\t      vIdeographic: 'v-ideographic',\n\t      vMathematical: 'v-mathematical',\n\t      values: 0,\n\t      vectorEffect: 'vector-effect',\n\t      version: 0,\n\t      vertAdvY: 'vert-adv-y',\n\t      vertOriginX: 'vert-origin-x',\n\t      vertOriginY: 'vert-origin-y',\n\t      viewBox: 'viewBox',\n\t      viewTarget: 'viewTarget',\n\t      visibility: 0,\n\t      widths: 0,\n\t      wordSpacing: 'word-spacing',\n\t      writingMode: 'writing-mode',\n\t      x: 0,\n\t      xHeight: 'x-height',\n\t      x1: 0,\n\t      x2: 0,\n\t      xChannelSelector: 'xChannelSelector',\n\t      xlinkActuate: 'xlink:actuate',\n\t      xlinkArcrole: 'xlink:arcrole',\n\t      xlinkHref: 'xlink:href',\n\t      xlinkRole: 'xlink:role',\n\t      xlinkShow: 'xlink:show',\n\t      xlinkTitle: 'xlink:title',\n\t      xlinkType: 'xlink:type',\n\t      xmlBase: 'xml:base',\n\t      xmlLang: 'xml:lang',\n\t      xmlSpace: 'xml:space',\n\t      y: 0,\n\t      y1: 0,\n\t      y2: 0,\n\t      yChannelSelector: 'yChannelSelector',\n\t      z: 0,\n\t      zoomAndPan: 'zoomAndPan'\n\t  };\n\t\n\t  var SVGDOMPropertyConfig = {\n\t      props: {},\n\t      attrNS: {\n\t          xlinkActuate: xlink,\n\t          xlinkArcrole: xlink,\n\t          xlinkHref: xlink,\n\t          xlinkRole: xlink,\n\t          xlinkShow: xlink,\n\t          xlinkTitle: xlink,\n\t          xlinkType: xlink,\n\t          xmlBase: xml,\n\t          xmlLang: xml,\n\t          xmlSpace: xml\n\t      },\n\t      domAttrs: {},\n\t      domProps: {}\n\t  };\n\t\n\t  Object.keys(ATTRS).map(function (key) {\n\t      SVGDOMPropertyConfig.props[key] = 0;\n\t      if (ATTRS[key]) {\n\t          SVGDOMPropertyConfig.domAttrs[key] = ATTRS[key];\n\t      }\n\t  });\n\t\n\t  // merge html and svg config into properties\n\t  mergeConfigToProperties(HTMLDOMPropertyConfig);\n\t  mergeConfigToProperties(SVGDOMPropertyConfig);\n\t\n\t  function mergeConfigToProperties(config) {\n\t      var\n\t      // all react/react-lite supporting property names in here\n\t      props = config.props;\n\t      var\n\t      // attributes namespace in here\n\t      attrNS = config.attrNS;\n\t      var\n\t      // propName in props which should use to be dom-attribute in here\n\t      domAttrs = config.domAttrs;\n\t      var\n\t      // propName in props which should use to be dom-property in here\n\t      domProps = config.domProps;\n\t\n\t      for (var propName in props) {\n\t          if (!props.hasOwnProperty(propName)) {\n\t              continue;\n\t          }\n\t          var propConfig = props[propName];\n\t          properties[propName] = {\n\t              attributeName: domAttrs.hasOwnProperty(propName) ? domAttrs[propName] : propName.toLowerCase(),\n\t              propertyName: domProps.hasOwnProperty(propName) ? domProps[propName] : propName,\n\t              attributeNamespace: attrNS.hasOwnProperty(propName) ? attrNS[propName] : null,\n\t              mustUseProperty: checkMask(propConfig, MUST_USE_PROPERTY),\n\t              hasBooleanValue: checkMask(propConfig, HAS_BOOLEAN_VALUE),\n\t              hasNumericValue: checkMask(propConfig, HAS_NUMERIC_VALUE),\n\t              hasPositiveNumericValue: checkMask(propConfig, HAS_POSITIVE_NUMERIC_VALUE),\n\t              hasOverloadedBooleanValue: checkMask(propConfig, HAS_OVERLOADED_BOOLEAN_VALUE)\n\t          };\n\t      }\n\t  }\n\t\n\t  function checkMask(value, bitmask) {\n\t      return (value & bitmask) === bitmask;\n\t  }\n\t\n\t  /**\n\t   * Sets the value for a property on a node.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {string} name\n\t   * @param {*} value\n\t   */\n\t\n\t  function setPropValue(node, name, value) {\n\t      var propInfo = properties.hasOwnProperty(name) && properties[name];\n\t      if (propInfo) {\n\t          // should delete value from dom\n\t          if (value == null || propInfo.hasBooleanValue && !value || propInfo.hasNumericValue && isNaN(value) || propInfo.hasPositiveNumericValue && value < 1 || propInfo.hasOverloadedBooleanValue && value === false) {\n\t              removePropValue(node, name);\n\t          } else if (propInfo.mustUseProperty) {\n\t              node[propInfo.propertyName] = value;\n\t          } else {\n\t              var attributeName = propInfo.attributeName;\n\t              var namespace = propInfo.attributeNamespace;\n\t\n\t              // `setAttribute` with objects becomes only `[object]` in IE8/9,\n\t              // ('' + value) makes it output the correct toString()-value.\n\t              if (namespace) {\n\t                  node.setAttributeNS(namespace, attributeName, '' + value);\n\t              } else if (propInfo.hasBooleanValue || propInfo.hasOverloadedBooleanValue && value === true) {\n\t                  node.setAttribute(attributeName, '');\n\t              } else {\n\t                  node.setAttribute(attributeName, '' + value);\n\t              }\n\t          }\n\t      } else if (isCustomAttribute(name) && VALID_ATTRIBUTE_NAME_REGEX.test(name)) {\n\t          if (value == null) {\n\t              node.removeAttribute(name);\n\t          } else {\n\t              node.setAttribute(name, '' + value);\n\t          }\n\t      }\n\t  }\n\t\n\t  /**\n\t   * Deletes the value for a property on a node.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {string} name\n\t   */\n\t\n\t  function removePropValue(node, name) {\n\t      var propInfo = properties.hasOwnProperty(name) && properties[name];\n\t      if (propInfo) {\n\t          if (propInfo.mustUseProperty) {\n\t              node[propInfo.propertyName] = propInfo.hasBooleanValue ? false : '';\n\t          } else {\n\t              node.removeAttribute(propInfo.attributeName);\n\t          }\n\t      } else if (isCustomAttribute(name)) {\n\t          node.removeAttribute(name);\n\t      }\n\t  }\n\t\n\t  function isFn(obj) {\n\t      return typeof obj === 'function';\n\t  }\n\t\n\t  var isArr = Array.isArray;\n\t\n\t  function noop() {}\n\t\n\t  function identity(obj) {\n\t      return obj;\n\t  }\n\t\n\t  function pipe(fn1, fn2) {\n\t      return function () {\n\t          fn1.apply(this, arguments);\n\t          return fn2.apply(this, arguments);\n\t      };\n\t  }\n\t\n\t  function flattenChildren(list, iteratee, a) {\n\t      var len = list.length;\n\t      var i = -1;\n\t\n\t      while (len--) {\n\t          var item = list[++i];\n\t          if (isArr(item)) {\n\t              flattenChildren(item, iteratee, a);\n\t          } else {\n\t              iteratee(item, a);\n\t          }\n\t      }\n\t  }\n\t\n\t  function eachItem(list, iteratee) {\n\t      for (var i = 0, len = list.length; i < len; i++) {\n\t          iteratee(list[i], i);\n\t      }\n\t  }\n\t\n\t  function extend(to) /* sources */{\n\t      var nextSource, nextIndex;\n\t      for (nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n\t          nextSource = arguments[nextIndex];\n\t          if (nextSource == null) {\n\t              continue;\n\t          }\n\t      }\n\t      var from = Object(nextSource);\n\t      if (!from) {\n\t          return to;\n\t      }\n\t      var keys = Object.keys(from);\n\t      var i = keys.length;\n\t      while (i--) {\n\t          if (from[keys[i]] !== undefined) {\n\t              to[keys[i]] = from[keys[i]];\n\t          }\n\t      }\n\t      return to;\n\t  }\n\t\n\t  var uid = 0;\n\t\n\t  function getUid() {\n\t      return ++uid;\n\t  }\n\t\n\t  var EVENT_KEYS = /^on/i;\n\t  function setProps(elem, props, isCustomComponent) {\n\t      for (var key in props) {\n\t          if (!props.hasOwnProperty(key) || key === 'children') {\n\t              continue;\n\t          }\n\t          var value = props[key];\n\t          if (EVENT_KEYS.test(key)) {\n\t              addEvent(elem, key, value);\n\t          } else if (key === 'style') {\n\t              setStyle(elem.style, value);\n\t          } else if (key === 'dangerouslySetInnerHTML') {\n\t              value && value.__html != null && (elem.innerHTML = value.__html);\n\t          } else if (isCustomComponent) {\n\t              if (value == null) {\n\t                  elem.removeAttribute(key);\n\t              } else {\n\t                  elem.setAttribute(key, '' + value);\n\t              }\n\t          } else {\n\t              setPropValue(elem, key, value);\n\t          }\n\t      }\n\t  }\n\t\n\t  function patchProp(key, oldValue, value, elem, isCustomComponent) {\n\t      if (key === 'value' || key === 'checked') {\n\t          oldValue = elem[key];\n\t      }\n\t      if (value === oldValue) {\n\t          return;\n\t      }\n\t      if (value === undefined) {\n\t          if (EVENT_KEYS.test(key)) {\n\t              removeEvent(elem, key);\n\t          } else if (key === 'style') {\n\t              removeStyle(elem.style, oldValue);\n\t          } else if (key === 'dangerouslySetInnerHTML') {\n\t              elem.innerHTML = '';\n\t          } else if (isCustomComponent) {\n\t              elem.removeAttribute(key);\n\t          } else {\n\t              removePropValue(elem, key);\n\t          }\n\t          return;\n\t      }\n\t      if (EVENT_KEYS.test(key)) {\n\t          // addEvent will replace the oldValue\n\t          addEvent(elem, key, value);\n\t      } else if (key === 'style') {\n\t          patchStyle(elem.style, oldValue, value);\n\t      } else if (key === 'dangerouslySetInnerHTML') {\n\t          var oldHtml = oldValue && oldValue.__html;\n\t          var html = value && value.__html;\n\t          if (html != null && html !== oldHtml) {\n\t              elem.innerHTML = html;\n\t          }\n\t      } else if (isCustomComponent) {\n\t          if (value == null) {\n\t              elem.removeAttribute(key);\n\t          } else {\n\t              elem.setAttribute(key, '' + value);\n\t          }\n\t      } else {\n\t          setPropValue(elem, key, value);\n\t      }\n\t  }\n\t\n\t  function patchProps(elem, props, newProps, isCustomComponent) {\n\t      var keyMap = { children: true };\n\t      for (var key in props) {\n\t          if (props.hasOwnProperty(key) && key !== 'children') {\n\t              keyMap[key] = true;\n\t              patchProp(key, props[key], newProps[key], elem, isCustomComponent);\n\t          }\n\t      }\n\t      for (var key in newProps) {\n\t          if (newProps.hasOwnProperty(key) && keyMap[key] !== true) {\n\t              patchProp(key, props[key], newProps[key], elem, isCustomComponent);\n\t          }\n\t      }\n\t  }\n\t\n\t  if (!Object.freeze) {\n\t      Object.freeze = identity;\n\t  }\n\t\n\t  var pendingRendering = {};\n\t  var vnodeStore = {};\n\t  function renderTreeIntoContainer(vnode, container, callback, parentContext) {\n\t  \tif (!vnode.vtype) {\n\t  \t\tthrow new Error('cannot render ' + vnode + ' to container');\n\t  \t}\n\t  \tvar id = container[COMPONENT_ID] || (container[COMPONENT_ID] = getUid());\n\t  \tvar argsCache = pendingRendering[id];\n\t\n\t  \t// component lify cycle method maybe call root rendering\n\t  \t// should bundle them and render by only one time\n\t  \tif (argsCache) {\n\t  \t\tif (argsCache === true) {\n\t  \t\t\tpendingRendering[id] = argsCache = [vnode, callback, parentContext];\n\t  \t\t} else {\n\t  \t\t\targsCache[0] = vnode;\n\t  \t\t\targsCache[2] = parentContext;\n\t  \t\t\tif (callback) {\n\t  \t\t\t\targsCache[1] = argsCache[1] ? pipe(argsCache[1], callback) : callback;\n\t  \t\t\t}\n\t  \t\t}\n\t  \t\treturn;\n\t  \t}\n\t\n\t  \tpendingRendering[id] = true;\n\t  \tvar oldVnode = null;\n\t  \tvar rootNode = null;\n\t  \tif (oldVnode = vnodeStore[id]) {\n\t  \t\trootNode = compareTwoVnodes(oldVnode, vnode, container.firstChild, parentContext);\n\t  \t} else {\n\t  \t\trootNode = initVnode(vnode, parentContext, container.namespaceURI);\n\t  \t\tvar childNode = null;\n\t  \t\twhile (childNode = container.lastChild) {\n\t  \t\t\tcontainer.removeChild(childNode);\n\t  \t\t}\n\t  \t\tcontainer.appendChild(rootNode);\n\t  \t}\n\t  \tvnodeStore[id] = vnode;\n\t  \tvar isPending = updateQueue.isPending;\n\t  \tupdateQueue.isPending = true;\n\t  \tclearPendingComponents();\n\t  \targsCache = pendingRendering[id];\n\t  \tdelete pendingRendering[id];\n\t\n\t  \tvar result = null;\n\t  \tif (isArr(argsCache)) {\n\t  \t\tresult = renderTreeIntoContainer(argsCache[0], container, argsCache[1], argsCache[2]);\n\t  \t} else if (vnode.vtype === VELEMENT) {\n\t  \t\tresult = rootNode;\n\t  \t} else if (vnode.vtype === VCOMPONENT) {\n\t  \t\tresult = rootNode.cache[vnode.id];\n\t  \t}\n\t\n\t  \tif (!isPending) {\n\t  \t\tupdateQueue.isPending = false;\n\t  \t\tupdateQueue.batchUpdate();\n\t  \t}\n\t\n\t  \tif (callback) {\n\t  \t\tcallback.call(result);\n\t  \t}\n\t\n\t  \treturn result;\n\t  }\n\t\n\t  function render(vnode, container, callback) {\n\t  \treturn renderTreeIntoContainer(vnode, container, callback);\n\t  }\n\t\n\t  function unstable_renderSubtreeIntoContainer(parentComponent, subVnode, container, callback) {\n\t  \tvar context = parentComponent.vnode ? parentComponent.vnode.context : parentComponent.$cache.parentContext;\n\t  \treturn renderTreeIntoContainer(subVnode, container, callback, context);\n\t  }\n\t\n\t  function unmountComponentAtNode(container) {\n\t  \tif (!container.nodeName) {\n\t  \t\tthrow new Error('expect node');\n\t  \t}\n\t  \tvar id = container[COMPONENT_ID];\n\t  \tvar vnode = null;\n\t  \tif (vnode = vnodeStore[id]) {\n\t  \t\tdestroyVnode(vnode, container.firstChild);\n\t  \t\tcontainer.removeChild(container.firstChild);\n\t  \t\tdelete vnodeStore[id];\n\t  \t\treturn true;\n\t  \t}\n\t  \treturn false;\n\t  }\n\t\n\t  function findDOMNode(node) {\n\t  \tif (node == null) {\n\t  \t\treturn null;\n\t  \t}\n\t  \tif (node.nodeName) {\n\t  \t\treturn node;\n\t  \t}\n\t  \tvar component = node;\n\t  \t// if component.node equal to false, component must be unmounted\n\t  \tif (component.getDOMNode && component.$cache.isMounted) {\n\t  \t\treturn component.getDOMNode();\n\t  \t}\n\t  \tthrow new Error('findDOMNode can not find Node');\n\t  }\n\t\n\t  var ReactDOM = Object.freeze({\n\t  \trender: render,\n\t  \tunstable_renderSubtreeIntoContainer: unstable_renderSubtreeIntoContainer,\n\t  \tunmountComponentAtNode: unmountComponentAtNode,\n\t  \tfindDOMNode: findDOMNode\n\t  });\n\t\n\t  function isValidElement(obj) {\n\t  \treturn obj != null && !!obj.vtype;\n\t  }\n\t\n\t  function cloneElement(originElem, props) {\n\t  \tvar type = originElem.type;\n\t  \tvar key = originElem.key;\n\t  \tvar ref = originElem.ref;\n\t\n\t  \tvar newProps = extend(extend({ key: key, ref: ref }, originElem.props), props);\n\t\n\t  \tfor (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n\t  \t\tchildren[_key - 2] = arguments[_key];\n\t  \t}\n\t\n\t  \tvar vnode = createElement.apply(undefined, [type, newProps].concat(children));\n\t  \tif (vnode.ref === originElem.ref) {\n\t  \t\tvnode.refs = originElem.refs;\n\t  \t}\n\t  \treturn vnode;\n\t  }\n\t\n\t  function createFactory(type) {\n\t  \tvar factory = function factory() {\n\t  \t\tfor (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t  \t\t\targs[_key2] = arguments[_key2];\n\t  \t\t}\n\t\n\t  \t\treturn createElement.apply(undefined, [type].concat(args));\n\t  \t};\n\t  \tfactory.type = type;\n\t  \treturn factory;\n\t  }\n\t\n\t  function createElement(type, props, children) {\n\t  \tvar createVnode = null;\n\t  \tvar varType = typeof type;\n\t\n\t  \tif (varType === 'string') {\n\t  \t\tcreateVnode = createVelem;\n\t  \t} else if (varType === 'function') {\n\t  \t\tif (type.prototype && typeof type.prototype.forceUpdate === 'function') {\n\t  \t\t\tcreateVnode = createVcomponent;\n\t  \t\t} else {\n\t  \t\t\tcreateVnode = createVstateless;\n\t  \t\t}\n\t  \t} else {\n\t  \t\tthrow new Error('React.createElement: unexpect type [ ' + type + ' ]');\n\t  \t}\n\t\n\t  \tvar key = null;\n\t  \tvar ref = null;\n\t  \tvar finalProps = {};\n\t  \tvar propValue = null;\n\t  \tif (props != null) {\n\t  \t\tfor (var propKey in props) {\n\t  \t\t\tif (!props.hasOwnProperty(propKey)) {\n\t  \t\t\t\tcontinue;\n\t  \t\t\t}\n\t  \t\t\tif (propKey === 'key') {\n\t  \t\t\t\tif (props.key !== undefined) {\n\t  \t\t\t\t\tkey = '' + props.key;\n\t  \t\t\t\t}\n\t  \t\t\t} else if (propKey === 'ref') {\n\t  \t\t\t\tif (props.ref !== undefined) {\n\t  \t\t\t\t\tref = props.ref;\n\t  \t\t\t\t}\n\t  \t\t\t} else if ((propValue = props[propKey]) !== undefined) {\n\t  \t\t\t\tfinalProps[propKey] = propValue;\n\t  \t\t\t}\n\t  \t\t}\n\t  \t}\n\t\n\t  \tvar defaultProps = type.defaultProps;\n\t\n\t  \tif (defaultProps) {\n\t  \t\tfor (var propKey in defaultProps) {\n\t  \t\t\tif (finalProps[propKey] === undefined) {\n\t  \t\t\t\tfinalProps[propKey] = defaultProps[propKey];\n\t  \t\t\t}\n\t  \t\t}\n\t  \t}\n\t\n\t  \tvar argsLen = arguments.length;\n\t  \tvar finalChildren = children;\n\t\n\t  \tif (argsLen > 3) {\n\t  \t\tfinalChildren = Array(argsLen - 2);\n\t  \t\tfor (var i = 2; i < argsLen; i++) {\n\t  \t\t\tfinalChildren[i - 2] = arguments[i];\n\t  \t\t}\n\t  \t}\n\t\n\t  \tif (finalChildren !== undefined) {\n\t  \t\tfinalProps.children = finalChildren;\n\t  \t}\n\t\n\t  \tvar vnode = createVnode(type, finalProps);\n\t  \tvnode.key = key;\n\t  \tvnode.ref = ref;\n\t  \treturn vnode;\n\t  }\n\t\n\t  var tagNames = 'a|abbr|address|area|article|aside|audio|b|base|bdi|bdo|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|data|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|main|map|mark|menu|menuitem|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|source|span|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|track|u|ul|var|video|wbr|circle|clipPath|defs|ellipse|g|image|line|linearGradient|mask|path|pattern|polygon|polyline|radialGradient|rect|stop|svg|text|tspan';\n\t  var DOM = {};\n\t  eachItem(tagNames.split('|'), function (tagName) {\n\t  \tDOM[tagName] = createFactory(tagName);\n\t  });\n\t\n\t  var check = function check() {\n\t      return check;\n\t  };\n\t  check.isRequired = check;\n\t  var PropTypes = {\n\t      \"array\": check,\n\t      \"bool\": check,\n\t      \"func\": check,\n\t      \"number\": check,\n\t      \"object\": check,\n\t      \"string\": check,\n\t      \"any\": check,\n\t      \"arrayOf\": check,\n\t      \"element\": check,\n\t      \"instanceOf\": check,\n\t      \"node\": check,\n\t      \"objectOf\": check,\n\t      \"oneOf\": check,\n\t      \"oneOfType\": check,\n\t      \"shape\": check\n\t  };\n\t\n\t  function only(children) {\n\t  \tif (isValidElement(children)) {\n\t  \t\treturn children;\n\t  \t}\n\t  \tthrow new Error('expect only one child');\n\t  }\n\t\n\t  function forEach(children, iteratee, context) {\n\t  \tif (children == null) {\n\t  \t\treturn children;\n\t  \t}\n\t  \tvar index = 0;\n\t  \tif (isArr(children)) {\n\t  \t\tflattenChildren(children, function (child) {\n\t  \t\t\titeratee.call(context, child, index++);\n\t  \t\t});\n\t  \t} else {\n\t  \t\titeratee.call(context, children, index);\n\t  \t}\n\t  }\n\t\n\t  function map(children, iteratee, context) {\n\t  \tif (children == null) {\n\t  \t\treturn children;\n\t  \t}\n\t  \tvar store = [];\n\t  \tvar keyMap = {};\n\t  \tforEach(children, function (child, index) {\n\t  \t\tvar data = {};\n\t  \t\tdata.child = iteratee.call(context, child, index) || child;\n\t  \t\tdata.isEqual = data.child === child;\n\t  \t\tvar key = data.key = getKey(child, index);\n\t  \t\tif (keyMap.hasOwnProperty(key)) {\n\t  \t\t\tkeyMap[key] += 1;\n\t  \t\t} else {\n\t  \t\t\tkeyMap[key] = 0;\n\t  \t\t}\n\t  \t\tdata.index = keyMap[key];\n\t  \t\tstore.push(data);\n\t  \t});\n\t  \tvar result = [];\n\t  \teachItem(store, function (_ref) {\n\t  \t\tvar child = _ref.child;\n\t  \t\tvar key = _ref.key;\n\t  \t\tvar index = _ref.index;\n\t  \t\tvar isEqual = _ref.isEqual;\n\t\n\t  \t\tif (child == null || typeof child === 'boolean') {\n\t  \t\t\treturn;\n\t  \t\t}\n\t  \t\tif (!isValidElement(child) || key == null) {\n\t  \t\t\tresult.push(child);\n\t  \t\t\treturn;\n\t  \t\t}\n\t  \t\tif (keyMap[key] !== 0) {\n\t  \t\t\tkey += ':' + index;\n\t  \t\t}\n\t  \t\tif (!isEqual) {\n\t  \t\t\tkey = escapeUserProvidedKey(child.key || '') + '/' + key;\n\t  \t\t}\n\t  \t\tchild = cloneElement(child, { key: key });\n\t  \t\tresult.push(child);\n\t  \t});\n\t  \treturn result;\n\t  }\n\t\n\t  function count(children) {\n\t  \tvar count = 0;\n\t  \tforEach(children, function () {\n\t  \t\tcount++;\n\t  \t});\n\t  \treturn count;\n\t  }\n\t\n\t  function toArray(children) {\n\t  \treturn map(children, identity) || [];\n\t  }\n\t\n\t  function getKey(child, index) {\n\t  \tvar key = undefined;\n\t  \tif (isValidElement(child) && typeof child.key === 'string') {\n\t  \t\tkey = '.$' + child.key;\n\t  \t} else {\n\t  \t\tkey = '.' + index.toString(36);\n\t  \t}\n\t  \treturn key;\n\t  }\n\t\n\t  var userProvidedKeyEscapeRegex = /\\/(?!\\/)/g;\n\t  function escapeUserProvidedKey(text) {\n\t  \treturn ('' + text).replace(userProvidedKeyEscapeRegex, '//');\n\t  }\n\t\n\t  var Children = Object.freeze({\n\t  \tonly: only,\n\t  \tforEach: forEach,\n\t  \tmap: map,\n\t  \tcount: count,\n\t  \ttoArray: toArray\n\t  });\n\t\n\t  function eachMixin(mixins, iteratee) {\n\t  \teachItem(mixins, function (mixin) {\n\t  \t\tif (mixin) {\n\t  \t\t\tif (isArr(mixin.mixins)) {\n\t  \t\t\t\teachMixin(mixin.mixins, iteratee);\n\t  \t\t\t}\n\t  \t\t\titeratee(mixin);\n\t  \t\t}\n\t  \t});\n\t  }\n\t\n\t  function combineMixinToProto(proto, mixin) {\n\t  \tfor (var key in mixin) {\n\t  \t\tif (!mixin.hasOwnProperty(key)) {\n\t  \t\t\tcontinue;\n\t  \t\t}\n\t  \t\tvar value = mixin[key];\n\t  \t\tif (key === 'getInitialState') {\n\t  \t\t\tproto.$getInitialStates.push(value);\n\t  \t\t\tcontinue;\n\t  \t\t}\n\t  \t\tvar curValue = proto[key];\n\t  \t\tif (isFn(curValue) && isFn(value)) {\n\t  \t\t\tproto[key] = pipe(curValue, value);\n\t  \t\t} else {\n\t  \t\t\tproto[key] = value;\n\t  \t\t}\n\t  \t}\n\t  }\n\t\n\t  function combineMixinToClass(Component, mixin) {\n\t  \textend(Component.propTypes, mixin.propTypes);\n\t  \textend(Component.contextTypes, mixin.contextTypes);\n\t  \textend(Component, mixin.statics);\n\t  \tif (isFn(mixin.getDefaultProps)) {\n\t  \t\textend(Component.defaultProps, mixin.getDefaultProps());\n\t  \t}\n\t  }\n\t\n\t  function bindContext(obj, source) {\n\t  \tfor (var key in source) {\n\t  \t\tif (source.hasOwnProperty(key)) {\n\t  \t\t\tif (isFn(source[key])) {\n\t  \t\t\t\tobj[key] = source[key].bind(obj);\n\t  \t\t\t}\n\t  \t\t}\n\t  \t}\n\t  }\n\t\n\t  var Facade = function Facade() {};\n\t  Facade.prototype = Component.prototype;\n\t\n\t  function getInitialState() {\n\t  \tvar _this = this;\n\t\n\t  \tvar state = {};\n\t  \tvar setState = this.setState;\n\t  \tthis.setState = Facade;\n\t  \teachItem(this.$getInitialStates, function (getInitialState) {\n\t  \t\tif (isFn(getInitialState)) {\n\t  \t\t\textend(state, getInitialState.call(_this));\n\t  \t\t}\n\t  \t});\n\t  \tthis.setState = setState;\n\t  \treturn state;\n\t  }\n\t  function createClass(spec) {\n\t  \tif (!isFn(spec.render)) {\n\t  \t\tthrow new Error('createClass: spec.render is not function');\n\t  \t}\n\t  \tvar specMixins = spec.mixins || [];\n\t  \tvar mixins = specMixins.concat(spec);\n\t  \tspec.mixins = null;\n\t  \tfunction Klass(props, context) {\n\t  \t\tComponent.call(this, props, context);\n\t  \t\tthis.constructor = Klass;\n\t  \t\tspec.autobind !== false && bindContext(this, Klass.prototype);\n\t  \t\tthis.state = this.getInitialState() || this.state;\n\t  \t}\n\t  \tKlass.displayName = spec.displayName;\n\t  \tKlass.contextTypes = {};\n\t  \tKlass.propTypes = {};\n\t  \tKlass.defaultProps = {};\n\t  \tvar proto = Klass.prototype = new Facade();\n\t  \tproto.$getInitialStates = [];\n\t  \teachMixin(mixins, function (mixin) {\n\t  \t\tcombineMixinToProto(proto, mixin);\n\t  \t\tcombineMixinToClass(Klass, mixin);\n\t  \t});\n\t  \tproto.getInitialState = getInitialState;\n\t  \tspec.mixins = specMixins;\n\t  \treturn Klass;\n\t  }\n\t\n\t  var React = extend({\n\t      version: '0.15.1',\n\t      cloneElement: cloneElement,\n\t      isValidElement: isValidElement,\n\t      createElement: createElement,\n\t      createFactory: createFactory,\n\t      Component: Component,\n\t      createClass: createClass,\n\t      Children: Children,\n\t      PropTypes: PropTypes,\n\t      DOM: DOM,\n\t      __spread: extend\n\t  }, ReactDOM);\n\t\n\t  React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;\n\t\n\t  return React;\n\t\n\t}));\n\n/***/ },\n\n/***/ 123:\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t\"use strict\";\n\t\n\t(function () {\n\t    \"use strict\";\n\t\n\t    var React = __webpack_require__(122);\n\t    var Term = __webpack_require__(124);\n\t\n\t    __webpack_require__(125);\n\t\n\t    /*\n\t     * A terminal component that communicates over a cockpit channel.\n\t     *\n\t     * The only required property is 'channel', which must point to a cockpit\n\t     * stream channel.\n\t     *\n\t     * The size of the terminal defaults to 80 by 25. It can be changed with the\n\t     * 'rows' and 'cols' properties.\n\t     *\n\t     * If the 'onTitleChanged' callback property is set, it will be called whenever\n\t     * the title of the terminal changes.\n\t     *\n\t     * Call focus() to set the input focus on the terminal.\n\t     */\n\t    var Terminal = React.createClass({\n\t        displayName: \"Terminal\",\n\t\n\t        propTypes: {\n\t            cols: React.PropTypes.number,\n\t            rows: React.PropTypes.number,\n\t            channel: React.PropTypes.object.isRequired,\n\t            onTitleChanged: React.PropTypes.func\n\t        },\n\t\n\t        getDefaultProps: function getDefaultProps() {\n\t            return {\n\t                cols: 80,\n\t                rows: 25\n\t            };\n\t        },\n\t\n\t        componentWillMount: function componentWillMount() {\n\t            var term = new Term({\n\t                cols: this.props.cols,\n\t                rows: this.props.rows,\n\t                screenKeys: true,\n\t                useStyle: true\n\t            });\n\t\n\t            term.on('data', (function (data) {\n\t                if (this.props.channel.valid) this.props.channel.send(data);\n\t            }).bind(this));\n\t\n\t            if (this.props.onTitleChanged) term.on('title', this.props.onTitleChanged);\n\t\n\t            this.setState({ terminal: term });\n\t        },\n\t\n\t        componentDidMount: function componentDidMount() {\n\t            this.state.terminal.open(this.refs.terminal);\n\t            this.connectChannel();\n\t        },\n\t\n\t        componentWillUpdate: function componentWillUpdate(nextProps) {\n\t            if (nextProps.cols !== this.props.cols || nextProps.rows !== this.props.rows) this.state.terminal.resize(nextProps.cols, nextProps.rows);\n\t\n\t            if (nextProps.channel !== this.props.channel) {\n\t                this.state.terminal.reset();\n\t                this.disconnectChannel();\n\t            }\n\t        },\n\t\n\t        componentDidUpdate: function componentDidUpdate(prevProps) {\n\t            if (prevProps.channel !== this.props.channel) this.connectChannel();\n\t        },\n\t\n\t        render: function render() {\n\t            // ensure react never reuses this div by keying it with the terminal widget\n\t            return React.createElement(\"div\", { ref: \"terminal\", className: \"console-ct\", key: this.state.terminal });\n\t        },\n\t\n\t        componentWillUnmount: function componentWillUnmount() {\n\t            this.disconnectChannel();\n\t            this.state.terminal.destroy();\n\t        },\n\t\n\t        onChannelMessage: function onChannelMessage(event, data) {\n\t            this.state.terminal.write(data);\n\t        },\n\t\n\t        onChannelClose: function onChannelClose(event, options) {\n\t            var term = this.state.terminal;\n\t            term.write('\\x1b[31m' + (options.problem || 'disconnected') + '\\x1b[m\\r\\n');\n\t            term.cursorHidden = true;\n\t            term.refresh(term.y, term.y);\n\t        },\n\t\n\t        connectChannel: function connectChannel() {\n\t            var channel = this.props.channel;\n\t            if (channel && channel.valid) {\n\t                channel.addEventListener('message', this.onChannelMessage.bind(this));\n\t                channel.addEventListener('close', this.onChannelClose.bind(this));\n\t            }\n\t        },\n\t\n\t        disconnectChannel: function disconnectChannel() {\n\t            if (this.props.channel) {\n\t                this.props.channel.removeEventListener('message', this.onChannelMessage);\n\t                this.props.channel.removeEventListener('close', this.onChannelClose);\n\t            }\n\t        },\n\t\n\t        focus: function focus() {\n\t            if (this.state.terminal) this.state.terminal.focus();\n\t        }\n\t    });\n\t\n\t    module.exports = { Terminal: Terminal };\n\t})();\n\n/***/ },\n\n/***/ 124:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/* WEBPACK VAR INJECTION */(function(global) {/**\n\t * term.js - an xterm emulator\n\t * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n\t * https://github.com/chjj/term.js\n\t *\n\t * Permission is hereby granted, free of charge, to any person obtaining a copy\n\t * of this software and associated documentation files (the \"Software\"), to deal\n\t * in the Software without restriction, including without limitation the rights\n\t * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n\t * copies of the Software, and to permit persons to whom the Software is\n\t * furnished to do so, subject to the following conditions:\n\t *\n\t * The above copyright notice and this permission notice shall be included in\n\t * all copies or substantial portions of the Software.\n\t *\n\t * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n\t * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n\t * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n\t * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n\t * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n\t * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n\t * THE SOFTWARE.\n\t *\n\t * Originally forked from (with the author's permission):\n\t *   Fabrice Bellard's javascript vt100 for jslinux:\n\t *   http://bellard.org/jslinux/\n\t *   Copyright (c) 2011 Fabrice Bellard\n\t *   The original design remains. The terminal itself\n\t *   has been extended to include xterm CSI codes, among\n\t *   other features.\n\t */\n\t\n\t;(function() {\n\t\n\t/**\n\t * Terminal Emulation References:\n\t *   http://vt100.net/\n\t *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n\t *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n\t *   http://invisible-island.net/vttest/\n\t *   http://www.inwap.com/pdp10/ansicode.txt\n\t *   http://linux.die.net/man/4/console_codes\n\t *   http://linux.die.net/man/7/urxvt\n\t */\n\t\n\t'use strict';\n\t\n\t/**\n\t * Shared\n\t */\n\t\n\tvar window = this\n\t  , document = this.document;\n\t\n\t/**\n\t * EventEmitter\n\t */\n\t\n\tfunction EventEmitter() {\n\t  this._events = this._events || {};\n\t}\n\t\n\tEventEmitter.prototype.addListener = function(type, listener) {\n\t  this._events[type] = this._events[type] || [];\n\t  this._events[type].push(listener);\n\t};\n\t\n\tEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\t\n\tEventEmitter.prototype.removeListener = function(type, listener) {\n\t  if (!this._events[type]) return;\n\t\n\t  var obj = this._events[type]\n\t    , i = obj.length;\n\t\n\t  while (i--) {\n\t    if (obj[i] === listener || obj[i].listener === listener) {\n\t      obj.splice(i, 1);\n\t      return;\n\t    }\n\t  }\n\t};\n\t\n\tEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\t\n\tEventEmitter.prototype.removeAllListeners = function(type) {\n\t  if (this._events[type]) delete this._events[type];\n\t};\n\t\n\tEventEmitter.prototype.once = function(type, listener) {\n\t  function on() {\n\t    var args = Array.prototype.slice.call(arguments);\n\t    this.removeListener(type, on);\n\t    return listener.apply(this, args);\n\t  }\n\t  on.listener = listener;\n\t  return this.on(type, on);\n\t};\n\t\n\tEventEmitter.prototype.emit = function(type) {\n\t  if (!this._events[type]) return;\n\t\n\t  var args = Array.prototype.slice.call(arguments, 1)\n\t    , obj = this._events[type]\n\t    , l = obj.length\n\t    , i = 0;\n\t\n\t  for (; i < l; i++) {\n\t    obj[i].apply(this, args);\n\t  }\n\t};\n\t\n\tEventEmitter.prototype.listeners = function(type) {\n\t  return this._events[type] = this._events[type] || [];\n\t};\n\t\n\t/**\n\t * Stream\n\t */\n\t\n\tfunction Stream() {\n\t  EventEmitter.call(this);\n\t}\n\t\n\tinherits(Stream, EventEmitter);\n\t\n\tStream.prototype.pipe = function(dest, options) {\n\t  var src = this\n\t    , ondata\n\t    , onerror\n\t    , onend;\n\t\n\t  function unbind() {\n\t    src.removeListener('data', ondata);\n\t    src.removeListener('error', onerror);\n\t    src.removeListener('end', onend);\n\t    dest.removeListener('error', onerror);\n\t    dest.removeListener('close', unbind);\n\t  }\n\t\n\t  src.on('data', ondata = function(data) {\n\t    dest.write(data);\n\t  });\n\t\n\t  src.on('error', onerror = function(err) {\n\t    unbind();\n\t    if (!this.listeners('error').length) {\n\t      throw err;\n\t    }\n\t  });\n\t\n\t  src.on('end', onend = function() {\n\t    dest.end();\n\t    unbind();\n\t  });\n\t\n\t  dest.on('error', onerror);\n\t  dest.on('close', unbind);\n\t\n\t  dest.emit('pipe', src);\n\t\n\t  return dest;\n\t};\n\t\n\t/**\n\t * States\n\t */\n\t\n\tvar normal = 0\n\t  , escaped = 1\n\t  , csi = 2\n\t  , osc = 3\n\t  , charset = 4\n\t  , dcs = 5\n\t  , ignore = 6\n\t  , UDK = { type: 'udk' };\n\t\n\t/**\n\t * Terminal\n\t */\n\t\n\tfunction Terminal(options) {\n\t  var self = this;\n\t\n\t  if (!(this instanceof Terminal)) {\n\t    return new Terminal(arguments[0], arguments[1], arguments[2]);\n\t  }\n\t\n\t  Stream.call(this);\n\t\n\t  if (typeof options === 'number') {\n\t    options = {\n\t      cols: arguments[0],\n\t      rows: arguments[1],\n\t      handler: arguments[2]\n\t    };\n\t  }\n\t\n\t  options = options || {};\n\t\n\t  each(keys(Terminal.defaults), function(key) {\n\t    if (options[key] == null) {\n\t      options[key] = Terminal.options[key];\n\t      // Legacy:\n\t      if (Terminal[key] !== Terminal.defaults[key]) {\n\t        options[key] = Terminal[key];\n\t      }\n\t    }\n\t    self[key] = options[key];\n\t  });\n\t\n\t  if (options.colors.length === 8) {\n\t    options.colors = options.colors.concat(Terminal._colors.slice(8));\n\t  } else if (options.colors.length === 16) {\n\t    options.colors = options.colors.concat(Terminal._colors.slice(16));\n\t  } else if (options.colors.length === 10) {\n\t    options.colors = options.colors.slice(0, -2).concat(\n\t      Terminal._colors.slice(8, -2), options.colors.slice(-2));\n\t  } else if (options.colors.length === 18) {\n\t    options.colors = options.colors.slice(0, -2).concat(\n\t      Terminal._colors.slice(16, -2), options.colors.slice(-2));\n\t  }\n\t  this.colors = options.colors;\n\t\n\t  this.options = options;\n\t\n\t  // this.context = options.context || window;\n\t  // this.document = options.document || document;\n\t  this.parent = options.body || options.parent\n\t    || (document ? document.getElementsByTagName('body')[0] : null);\n\t\n\t  this.cols = options.cols || options.geometry[0];\n\t  this.rows = options.rows || options.geometry[1];\n\t\n\t  // Act as though we are a node TTY stream:\n\t  this.setRawMode;\n\t  this.isTTY = true;\n\t  this.isRaw = true;\n\t  this.columns = this.cols;\n\t  this.rows = this.rows;\n\t\n\t  if (options.handler) {\n\t    this.on('data', options.handler);\n\t  }\n\t\n\t  this.ybase = 0;\n\t  this.ydisp = 0;\n\t  this.x = 0;\n\t  this.y = 0;\n\t  this.cursorState = 0;\n\t  this.cursorHidden = false;\n\t  this.convertEol;\n\t  this.state = 0;\n\t  this.queue = '';\n\t  this.scrollTop = 0;\n\t  this.scrollBottom = this.rows - 1;\n\t\n\t  // modes\n\t  this.applicationKeypad = false;\n\t  this.applicationCursor = false;\n\t  this.originMode = false;\n\t  this.insertMode = false;\n\t  this.wraparoundMode = false;\n\t  this.normal = null;\n\t\n\t  // select modes\n\t  this.prefixMode = false;\n\t  this.selectMode = false;\n\t  this.visualMode = false;\n\t  this.searchMode = false;\n\t  this.searchDown;\n\t  this.entry = '';\n\t  this.entryPrefix = 'Search: ';\n\t  this._real;\n\t  this._selected;\n\t  this._textarea;\n\t\n\t  // charset\n\t  this.charset = null;\n\t  this.gcharset = null;\n\t  this.glevel = 0;\n\t  this.charsets = [null];\n\t\n\t  // mouse properties\n\t  this.decLocator;\n\t  this.x10Mouse;\n\t  this.vt200Mouse;\n\t  this.vt300Mouse;\n\t  this.normalMouse;\n\t  this.mouseEvents;\n\t  this.sendFocus;\n\t  this.utfMouse;\n\t  this.sgrMouse;\n\t  this.urxvtMouse;\n\t\n\t  // misc\n\t  this.element;\n\t  this.children;\n\t  this.refreshStart;\n\t  this.refreshEnd;\n\t  this.savedX;\n\t  this.savedY;\n\t  this.savedCols;\n\t\n\t  // stream\n\t  this.readable = true;\n\t  this.writable = true;\n\t\n\t  this.defAttr = (0 << 18) | (257 << 9) | (256 << 0);\n\t  this.curAttr = this.defAttr;\n\t\n\t  this.params = [];\n\t  this.currentParam = 0;\n\t  this.prefix = '';\n\t  this.postfix = '';\n\t\n\t  this.lines = [];\n\t  var i = this.rows;\n\t  while (i--) {\n\t    this.lines.push(this.blankLine());\n\t  }\n\t\n\t  this.tabs;\n\t  this.setupStops();\n\t}\n\t\n\tinherits(Terminal, Stream);\n\t\n\t/**\n\t * Colors\n\t */\n\t\n\t// Colors 0-15\n\tTerminal.tangoColors = [\n\t  // dark:\n\t  '#2e3436',\n\t  '#cc0000',\n\t  '#4e9a06',\n\t  '#c4a000',\n\t  '#3465a4',\n\t  '#75507b',\n\t  '#06989a',\n\t  '#d3d7cf',\n\t  // bright:\n\t  '#555753',\n\t  '#ef2929',\n\t  '#8ae234',\n\t  '#fce94f',\n\t  '#729fcf',\n\t  '#ad7fa8',\n\t  '#34e2e2',\n\t  '#eeeeec'\n\t];\n\t\n\tTerminal.xtermColors = [\n\t  // dark:\n\t  '#000000', // black\n\t  '#cd0000', // red3\n\t  '#00cd00', // green3\n\t  '#cdcd00', // yellow3\n\t  '#0000ee', // blue2\n\t  '#cd00cd', // magenta3\n\t  '#00cdcd', // cyan3\n\t  '#e5e5e5', // gray90\n\t  // bright:\n\t  '#7f7f7f', // gray50\n\t  '#ff0000', // red\n\t  '#00ff00', // green\n\t  '#ffff00', // yellow\n\t  '#5c5cff', // rgb:5c/5c/ff\n\t  '#ff00ff', // magenta\n\t  '#00ffff', // cyan\n\t  '#ffffff'  // white\n\t];\n\t\n\t// Colors 0-15 + 16-255\n\t// Much thanks to TooTallNate for writing this.\n\tTerminal.colors = (function() {\n\t  var colors = Terminal.tangoColors.slice()\n\t    , r = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff]\n\t    , i;\n\t\n\t  // 16-231\n\t  i = 0;\n\t  for (; i < 216; i++) {\n\t    out(r[(i / 36) % 6 | 0], r[(i / 6) % 6 | 0], r[i % 6]);\n\t  }\n\t\n\t  // 232-255 (grey)\n\t  i = 0;\n\t  for (; i < 24; i++) {\n\t    r = 8 + i * 10;\n\t    out(r, r, r);\n\t  }\n\t\n\t  function out(r, g, b) {\n\t    colors.push('#' + hex(r) + hex(g) + hex(b));\n\t  }\n\t\n\t  function hex(c) {\n\t    c = c.toString(16);\n\t    return c.length < 2 ? '0' + c : c;\n\t  }\n\t\n\t  return colors;\n\t})();\n\t\n\t// Default BG/FG\n\tTerminal.colors[256] = '#000000';\n\tTerminal.colors[257] = '#f0f0f0';\n\t\n\tTerminal._colors = Terminal.colors.slice();\n\t\n\tTerminal.vcolors = (function() {\n\t  var out = []\n\t    , colors = Terminal.colors\n\t    , i = 0\n\t    , color;\n\t\n\t  for (; i < 256; i++) {\n\t    color = parseInt(colors[i].substring(1), 16);\n\t    out.push([\n\t      (color >> 16) & 0xff,\n\t      (color >> 8) & 0xff,\n\t      color & 0xff\n\t    ]);\n\t  }\n\t\n\t  return out;\n\t})();\n\t\n\t/**\n\t * Options\n\t */\n\t\n\tTerminal.defaults = {\n\t  colors: Terminal.colors,\n\t  convertEol: false,\n\t  termName: 'xterm',\n\t  geometry: [80, 24],\n\t  cursorBlink: true,\n\t  visualBell: false,\n\t  popOnBell: false,\n\t  scrollback: 1000,\n\t  screenKeys: false,\n\t  debug: false,\n\t  useStyle: false\n\t  // programFeatures: false,\n\t  // focusKeys: false,\n\t};\n\t\n\tTerminal.options = {};\n\t\n\teach(keys(Terminal.defaults), function(key) {\n\t  Terminal[key] = Terminal.defaults[key];\n\t  Terminal.options[key] = Terminal.defaults[key];\n\t});\n\t\n\t/**\n\t * Focused Terminal\n\t */\n\t\n\tTerminal.focus = null;\n\t\n\tTerminal.prototype.focus = function() {\n\t  if (Terminal.focus === this) return;\n\t\n\t  if (Terminal.focus) {\n\t    Terminal.focus.blur();\n\t  }\n\t\n\t  if (this.sendFocus) this.send('\\x1b[I');\n\t  this.showCursor();\n\t\n\t  // try {\n\t  //   this.element.focus();\n\t  // } catch (e) {\n\t  //   ;\n\t  // }\n\t\n\t  // this.emit('focus');\n\t\n\t  Terminal.focus = this;\n\t};\n\t\n\tTerminal.prototype.blur = function() {\n\t  if (Terminal.focus !== this) return;\n\t\n\t  this.cursorState = 0;\n\t  this.refresh(this.y, this.y);\n\t  if (this.sendFocus) this.send('\\x1b[O');\n\t\n\t  // try {\n\t  //   this.element.blur();\n\t  // } catch (e) {\n\t  //   ;\n\t  // }\n\t\n\t  // this.emit('blur');\n\t\n\t  Terminal.focus = null;\n\t};\n\t\n\t/**\n\t * Initialize global behavior\n\t */\n\t\n\tTerminal.prototype.initGlobal = function() {\n\t  var document = this.document;\n\t\n\t  Terminal._boundDocs = Terminal._boundDocs || [];\n\t  if (~indexOf(Terminal._boundDocs, document)) {\n\t    return;\n\t  }\n\t  Terminal._boundDocs.push(document);\n\t\n\t  Terminal.bindPaste(document);\n\t\n\t  Terminal.bindKeys(document);\n\t\n\t  Terminal.bindCopy(document);\n\t\n\t  if (this.isMobile) {\n\t    this.fixMobile(document);\n\t  }\n\t\n\t  if (this.useStyle) {\n\t    Terminal.insertStyle(document, this.colors[256], this.colors[257]);\n\t  }\n\t};\n\t\n\t/**\n\t * Bind to paste event\n\t */\n\t\n\tTerminal.bindPaste = function(document) {\n\t  // This seems to work well for ctrl-V and middle-click,\n\t  // even without the contentEditable workaround.\n\t  var window = document.defaultView;\n\t  on(window, 'paste', function(ev) {\n\t    var term = Terminal.focus;\n\t    if (!term) return;\n\t    if (ev.clipboardData) {\n\t      term.send(ev.clipboardData.getData('text/plain'));\n\t    } else if (term.context.clipboardData) {\n\t      term.send(term.context.clipboardData.getData('Text'));\n\t    }\n\t    // Not necessary. Do it anyway for good measure.\n\t    term.element.contentEditable = 'inherit';\n\t    return cancel(ev);\n\t  });\n\t};\n\t\n\t/**\n\t * Global Events for key handling\n\t */\n\t\n\tTerminal.bindKeys = function(document) {\n\t  // We should only need to check `target === body` below,\n\t  // but we can check everything for good measure.\n\t  on(document, 'keydown', function(ev) {\n\t    if (!Terminal.focus) return;\n\t    var target = ev.target || ev.srcElement;\n\t    if (!target) return;\n\t    if (target === Terminal.focus.element\n\t        || target === Terminal.focus.context\n\t        || target === Terminal.focus.document\n\t        || target === Terminal.focus.body\n\t        || target === Terminal._textarea\n\t        || target === Terminal.focus.parent) {\n\t      return Terminal.focus.keyDown(ev);\n\t    }\n\t  }, true);\n\t\n\t  on(document, 'keypress', function(ev) {\n\t    if (!Terminal.focus) return;\n\t    var target = ev.target || ev.srcElement;\n\t    if (!target) return;\n\t    if (target === Terminal.focus.element\n\t        || target === Terminal.focus.context\n\t        || target === Terminal.focus.document\n\t        || target === Terminal.focus.body\n\t        || target === Terminal._textarea\n\t        || target === Terminal.focus.parent) {\n\t      return Terminal.focus.keyPress(ev);\n\t    }\n\t  }, true);\n\t\n\t  // If we click somewhere other than a\n\t  // terminal, unfocus the terminal.\n\t  on(document, 'mousedown', function(ev) {\n\t    if (!Terminal.focus) return;\n\t\n\t    var el = ev.target || ev.srcElement;\n\t    if (!el) return;\n\t\n\t    do {\n\t      if (el === Terminal.focus.element) return;\n\t    } while (el = el.parentNode);\n\t\n\t    Terminal.focus.blur();\n\t  });\n\t};\n\t\n\t/**\n\t * Copy Selection w/ Ctrl-C (Select Mode)\n\t */\n\t\n\tTerminal.bindCopy = function(document) {\n\t  var window = document.defaultView;\n\t\n\t  // if (!('onbeforecopy' in document)) {\n\t  //   // Copies to *only* the clipboard.\n\t  //   on(window, 'copy', function fn(ev) {\n\t  //     var term = Terminal.focus;\n\t  //     if (!term) return;\n\t  //     if (!term._selected) return;\n\t  //     var text = term.grabText(\n\t  //       term._selected.x1, term._selected.x2,\n\t  //       term._selected.y1, term._selected.y2);\n\t  //     term.emit('copy', text);\n\t  //     ev.clipboardData.setData('text/plain', text);\n\t  //   });\n\t  //   return;\n\t  // }\n\t\n\t  // Copies to primary selection *and* clipboard.\n\t  // NOTE: This may work better on capture phase,\n\t  // or using the `beforecopy` event.\n\t  on(window, 'copy', function(ev) {\n\t    var term = Terminal.focus;\n\t    if (!term) return;\n\t    if (!term._selected) return;\n\t    var textarea = term.getCopyTextarea();\n\t    var text = term.grabText(\n\t      term._selected.x1, term._selected.x2,\n\t      term._selected.y1, term._selected.y2);\n\t    term.emit('copy', text);\n\t    textarea.focus();\n\t    textarea.textContent = text;\n\t    textarea.value = text;\n\t    textarea.setSelectionRange(0, text.length);\n\t    setTimeout(function() {\n\t      term.element.focus();\n\t      term.focus();\n\t    }, 1);\n\t  });\n\t};\n\t\n\t/**\n\t * Fix Mobile\n\t */\n\t\n\tTerminal.prototype.fixMobile = function(document) {\n\t  var self = this;\n\t\n\t  var textarea = document.createElement('textarea');\n\t  textarea.style.position = 'absolute';\n\t  textarea.style.left = '-32000px';\n\t  textarea.style.top = '-32000px';\n\t  textarea.style.width = '0px';\n\t  textarea.style.height = '0px';\n\t  textarea.style.opacity = '0';\n\t  textarea.style.backgroundColor = 'transparent';\n\t  textarea.style.borderStyle = 'none';\n\t  textarea.style.outlineStyle = 'none';\n\t  textarea.autocapitalize = 'none';\n\t  textarea.autocorrect = 'off';\n\t\n\t  document.getElementsByTagName('body')[0].appendChild(textarea);\n\t\n\t  Terminal._textarea = textarea;\n\t\n\t  setTimeout(function() {\n\t    textarea.focus();\n\t  }, 1000);\n\t\n\t  if (this.isAndroid) {\n\t    on(textarea, 'change', function() {\n\t      var value = textarea.textContent || textarea.value;\n\t      textarea.value = '';\n\t      textarea.textContent = '';\n\t      self.send(value + '\\r');\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Insert a default style\n\t */\n\t\n\tTerminal.insertStyle = function(document, bg, fg) {\n\t  var style = document.getElementById('term-style');\n\t  if (style) return;\n\t\n\t  var head = document.getElementsByTagName('head')[0];\n\t  if (!head) return;\n\t\n\t  var style = document.createElement('style');\n\t  style.id = 'term-style';\n\t\n\t  // textContent doesn't work well with IE for <style> elements.\n\t  style.innerHTML = ''\n\t    + '.terminal {\\n'\n\t    + '  float: left;\\n'\n\t    + '  border: ' + bg + ' solid 5px;\\n'\n\t    + '  font-family: \"DejaVu Sans Mono\", \"Liberation Mono\", monospace;\\n'\n\t    + '  font-size: 11px;\\n'\n\t    + '  color: ' + fg + ';\\n'\n\t    + '  background: ' + bg + ';\\n'\n\t    + '}\\n'\n\t    + '\\n'\n\t    + '.terminal-cursor {\\n'\n\t    + '  color: ' + bg + ';\\n'\n\t    + '  background: ' + fg + ';\\n'\n\t    + '}\\n';\n\t\n\t  var out = '';\n\t  each(Terminal.colors, function(color, i) {\n\t    if (i === 256) {\n\t      out += '\\n.term-bg-color-default { background-color: ' + color + '; }';\n\t    }\n\t    if (i === 257) {\n\t      out += '\\n.term-fg-color-default { color: ' + color + '; }';\n\t    }\n\t    out += '\\n.term-bg-color-' + i + ' { background-color: ' + color + '; }';\n\t    out += '\\n.term-fg-color-' + i + ' { color: ' + color + '; }';\n\t  });\n\t  out += '\\n.term-bold { font-weight: bold; }'\n\t  out += '\\n.term-underline { text-decoration: underline; }'\n\t  out += '\\n.term-blink { text-decoration: blink; }'\n\t  out += '\\n.term-hidden { visibility: hidden; }'\n\t  style.innerHTML += out + '\\n';\n\t\n\t  head.insertBefore(style, head.firstChild);\n\t};\n\t\n\t/**\n\t * Open Terminal\n\t */\n\t\n\tTerminal.prototype.open = function(parent) {\n\t  var self = this\n\t    , i = 0\n\t    , div;\n\t\n\t  this.parent = parent || this.parent;\n\t\n\t  if (!this.parent) {\n\t    throw new Error('Terminal requires a parent element.');\n\t  }\n\t\n\t  // Grab global elements.\n\t  this.context = this.parent.ownerDocument.defaultView;\n\t  this.document = this.parent.ownerDocument;\n\t  this.body = this.document.getElementsByTagName('body')[0];\n\t\n\t  // Parse user-agent strings.\n\t  if (this.context.navigator && this.context.navigator.userAgent) {\n\t    this.isMac = !!~this.context.navigator.userAgent.indexOf('Mac');\n\t    this.isIpad = !!~this.context.navigator.userAgent.indexOf('iPad');\n\t    this.isIphone = !!~this.context.navigator.userAgent.indexOf('iPhone');\n\t    this.isAndroid = !!~this.context.navigator.userAgent.indexOf('Android');\n\t    this.isMobile = this.isIpad || this.isIphone || this.isAndroid;\n\t    this.isMSIE = !!~this.context.navigator.userAgent.indexOf('MSIE');\n\t  }\n\t\n\t  // Create our main terminal element.\n\t  this.element = this.document.createElement('div');\n\t  this.element.className = 'terminal';\n\t  this.element.style.outline = 'none';\n\t  this.element.setAttribute('tabindex', 0);\n\t  this.element.setAttribute('spellcheck', 'false');\n\t  this.element.style.backgroundColor = this.colors[256];\n\t  this.element.style.color = this.colors[257];\n\t\n\t  // Create the lines for our terminal.\n\t  this.children = [];\n\t  for (; i < this.rows; i++) {\n\t    div = this.document.createElement('div');\n\t    this.element.appendChild(div);\n\t    this.children.push(div);\n\t  }\n\t  this.parent.appendChild(this.element);\n\t\n\t  // Draw the screen.\n\t  this.refresh(0, this.rows - 1);\n\t\n\t  if (!('useEvents' in this.options) || this.options.useEvents) {\n\t    // Initialize global actions that\n\t    // need to be taken on the document.\n\t    this.initGlobal();\n\t  }\n\t\n\t  if (!('useFocus' in this.options) || this.options.useFocus) {\n\t    // Ensure there is a Terminal.focus.\n\t    this.focus();\n\t\n\t    // Start blinking the cursor.\n\t    this.startBlink();\n\t\n\t    // Bind to DOM events related\n\t    // to focus and paste behavior.\n\t    on(this.element, 'focus', function() {\n\t      self.focus();\n\t      if (self.isMobile) {\n\t        Terminal._textarea.focus();\n\t      }\n\t    });\n\t\n\t    // This causes slightly funky behavior.\n\t    // on(this.element, 'blur', function() {\n\t    //   self.blur();\n\t    // });\n\t\n\t    on(this.element, 'mousedown', function() {\n\t      self.focus();\n\t    });\n\t\n\t    // Clickable paste workaround, using contentEditable.\n\t    // This probably shouldn't work,\n\t    // ... but it does. Firefox's paste\n\t    // event seems to only work for textareas?\n\t    on(this.element, 'mousedown', function(ev) {\n\t      var button = ev.button != null\n\t        ? +ev.button\n\t        : ev.which != null\n\t          ? ev.which - 1\n\t          : null;\n\t\n\t      // Does IE9 do this?\n\t      if (self.isMSIE) {\n\t        button = button === 1 ? 0 : button === 4 ? 1 : button;\n\t      }\n\t\n\t      if (button !== 2) return;\n\t\n\t      self.element.contentEditable = 'true';\n\t      setTimeout(function() {\n\t        self.element.contentEditable = 'inherit'; // 'false';\n\t      }, 1);\n\t    }, true);\n\t  }\n\t\n\t  if (!('useMouse' in this.options) || this.options.useMouse) {\n\t    // Listen for mouse events and translate\n\t    // them into terminal mouse protocols.\n\t    this.bindMouse();\n\t  }\n\t\n\t  // this.emit('open');\n\t\n\t  if (!('useFocus' in this.options) || this.options.useFocus) {\n\t      // This can be useful for pasting,\n\t      // as well as the iPad fix.\n\t      setTimeout(function() {\n\t        self.element.focus();\n\t      }, 100);\n\t  }\n\t\n\t  // Figure out whether boldness affects\n\t  // the character width of monospace fonts.\n\t  if (Terminal.brokenBold == null) {\n\t    Terminal.brokenBold = isBoldBroken(this.document);\n\t  }\n\t\n\t  this.emit('open');\n\t};\n\t\n\tTerminal.prototype.setRawMode = function(value) {\n\t  this.isRaw = !!value;\n\t};\n\t\n\t// XTerm mouse events\n\t// http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#Mouse%20Tracking\n\t// To better understand these\n\t// the xterm code is very helpful:\n\t// Relevant files:\n\t//   button.c, charproc.c, misc.c\n\t// Relevant functions in xterm/button.c:\n\t//   BtnCode, EmitButtonCode, EditorButton, SendMousePosition\n\tTerminal.prototype.bindMouse = function() {\n\t  var el = this.element\n\t    , self = this\n\t    , pressed = 32;\n\t\n\t  var wheelEvent = 'onmousewheel' in this.context\n\t    ? 'mousewheel'\n\t    : 'DOMMouseScroll';\n\t\n\t  // mouseup, mousedown, mousewheel\n\t  // left click: ^[[M 3<^[[M#3<\n\t  // mousewheel up: ^[[M`3>\n\t  function sendButton(ev) {\n\t    var button\n\t      , pos;\n\t\n\t    // get the xterm-style button\n\t    button = getButton(ev);\n\t\n\t    // get mouse coordinates\n\t    pos = getCoords(ev);\n\t    if (!pos) return;\n\t\n\t    sendEvent(button, pos);\n\t\n\t    switch (ev.type) {\n\t      case 'mousedown':\n\t        pressed = button;\n\t        break;\n\t      case 'mouseup':\n\t        // keep it at the left\n\t        // button, just in case.\n\t        pressed = 32;\n\t        break;\n\t      case wheelEvent:\n\t        // nothing. don't\n\t        // interfere with\n\t        // `pressed`.\n\t        break;\n\t    }\n\t  }\n\t\n\t  // motion example of a left click:\n\t  // ^[[M 3<^[[M@4<^[[M@5<^[[M@6<^[[M@7<^[[M#7<\n\t  function sendMove(ev) {\n\t    var button = pressed\n\t      , pos;\n\t\n\t    pos = getCoords(ev);\n\t    if (!pos) return;\n\t\n\t    // buttons marked as motions\n\t    // are incremented by 32\n\t    button += 32;\n\t\n\t    sendEvent(button, pos);\n\t  }\n\t\n\t  // encode button and\n\t  // position to characters\n\t  function encode(data, ch) {\n\t    if (!self.utfMouse) {\n\t      if (ch === 255) return data.push(0);\n\t      if (ch > 127) ch = 127;\n\t      data.push(ch);\n\t    } else {\n\t      if (ch === 2047) return data.push(0);\n\t      if (ch < 127) {\n\t        data.push(ch);\n\t      } else {\n\t        if (ch > 2047) ch = 2047;\n\t        data.push(0xC0 | (ch >> 6));\n\t        data.push(0x80 | (ch & 0x3F));\n\t      }\n\t    }\n\t  }\n\t\n\t  // send a mouse event:\n\t  // regular/utf8: ^[[M Cb Cx Cy\n\t  // urxvt: ^[[ Cb ; Cx ; Cy M\n\t  // sgr: ^[[ Cb ; Cx ; Cy M/m\n\t  // vt300: ^[[ 24(1/3/5)~ [ Cx , Cy ] \\r\n\t  // locator: CSI P e ; P b ; P r ; P c ; P p & w\n\t  function sendEvent(button, pos) {\n\t    // self.emit('mouse', {\n\t    //   x: pos.x - 32,\n\t    //   y: pos.x - 32,\n\t    //   button: button\n\t    // });\n\t\n\t    if (self.vt300Mouse) {\n\t      // NOTE: Unstable.\n\t      // http://www.vt100.net/docs/vt3xx-gp/chapter15.html\n\t      button &= 3;\n\t      pos.x -= 32;\n\t      pos.y -= 32;\n\t      var data = '\\x1b[24';\n\t      if (button === 0) data += '1';\n\t      else if (button === 1) data += '3';\n\t      else if (button === 2) data += '5';\n\t      else if (button === 3) return;\n\t      else data += '0';\n\t      data += '~[' + pos.x + ',' + pos.y + ']\\r';\n\t      self.send(data);\n\t      return;\n\t    }\n\t\n\t    if (self.decLocator) {\n\t      // NOTE: Unstable.\n\t      button &= 3;\n\t      pos.x -= 32;\n\t      pos.y -= 32;\n\t      if (button === 0) button = 2;\n\t      else if (button === 1) button = 4;\n\t      else if (button === 2) button = 6;\n\t      else if (button === 3) button = 3;\n\t      self.send('\\x1b['\n\t        + button\n\t        + ';'\n\t        + (button === 3 ? 4 : 0)\n\t        + ';'\n\t        + pos.y\n\t        + ';'\n\t        + pos.x\n\t        + ';'\n\t        + (pos.page || 0)\n\t        + '&w');\n\t      return;\n\t    }\n\t\n\t    if (self.urxvtMouse) {\n\t      pos.x -= 32;\n\t      pos.y -= 32;\n\t      pos.x++;\n\t      pos.y++;\n\t      self.send('\\x1b[' + button + ';' + pos.x + ';' + pos.y + 'M');\n\t      return;\n\t    }\n\t\n\t    if (self.sgrMouse) {\n\t      pos.x -= 32;\n\t      pos.y -= 32;\n\t      self.send('\\x1b[<'\n\t        + ((button & 3) === 3 ? button & ~3 : button)\n\t        + ';'\n\t        + pos.x\n\t        + ';'\n\t        + pos.y\n\t        + ((button & 3) === 3 ? 'm' : 'M'));\n\t      return;\n\t    }\n\t\n\t    var data = [];\n\t\n\t    encode(data, button);\n\t    encode(data, pos.x);\n\t    encode(data, pos.y);\n\t\n\t    self.send('\\x1b[M' + String.fromCharCode.apply(String, data));\n\t  }\n\t\n\t  function getButton(ev) {\n\t    var button\n\t      , shift\n\t      , meta\n\t      , ctrl\n\t      , mod;\n\t\n\t    // two low bits:\n\t    // 0 = left\n\t    // 1 = middle\n\t    // 2 = right\n\t    // 3 = release\n\t    // wheel up/down:\n\t    // 1, and 2 - with 64 added\n\t    switch (ev.type) {\n\t      case 'mousedown':\n\t        button = ev.button != null\n\t          ? +ev.button\n\t          : ev.which != null\n\t            ? ev.which - 1\n\t            : null;\n\t\n\t        if (self.isMSIE) {\n\t          button = button === 1 ? 0 : button === 4 ? 1 : button;\n\t        }\n\t        break;\n\t      case 'mouseup':\n\t        button = 3;\n\t        break;\n\t      case 'DOMMouseScroll':\n\t        button = ev.detail < 0\n\t          ? 64\n\t          : 65;\n\t        break;\n\t      case 'mousewheel':\n\t        button = ev.wheelDeltaY > 0\n\t          ? 64\n\t          : 65;\n\t        break;\n\t    }\n\t\n\t    // next three bits are the modifiers:\n\t    // 4 = shift, 8 = meta, 16 = control\n\t    shift = ev.shiftKey ? 4 : 0;\n\t    meta = ev.metaKey ? 8 : 0;\n\t    ctrl = ev.ctrlKey ? 16 : 0;\n\t    mod = shift | meta | ctrl;\n\t\n\t    // no mods\n\t    if (self.vt200Mouse) {\n\t      // ctrl only\n\t      mod &= ctrl;\n\t    } else if (!self.normalMouse) {\n\t      mod = 0;\n\t    }\n\t\n\t    // increment to SP\n\t    button = (32 + (mod << 2)) + button;\n\t\n\t    return button;\n\t  }\n\t\n\t  // mouse coordinates measured in cols/rows\n\t  function getCoords(ev) {\n\t    var x, y, w, h, el;\n\t\n\t    // ignore browsers without pageX for now\n\t    if (ev.pageX == null) return;\n\t\n\t    x = ev.pageX;\n\t    y = ev.pageY;\n\t    el = self.element;\n\t\n\t    // should probably check offsetParent\n\t    // but this is more portable\n\t    while (el && el !== self.document.documentElement) {\n\t      x -= el.offsetLeft;\n\t      y -= el.offsetTop;\n\t      el = 'offsetParent' in el\n\t        ? el.offsetParent\n\t        : el.parentNode;\n\t    }\n\t\n\t    // convert to cols/rows\n\t    w = self.element.clientWidth;\n\t    h = self.element.clientHeight;\n\t    x = Math.round((x / w) * self.cols);\n\t    y = Math.round((y / h) * self.rows);\n\t\n\t    // be sure to avoid sending\n\t    // bad positions to the program\n\t    if (x < 0) x = 0;\n\t    if (x > self.cols) x = self.cols;\n\t    if (y < 0) y = 0;\n\t    if (y > self.rows) y = self.rows;\n\t\n\t    // xterm sends raw bytes and\n\t    // starts at 32 (SP) for each.\n\t    x += 32;\n\t    y += 32;\n\t\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      type: ev.type === wheelEvent\n\t        ? 'mousewheel'\n\t        : ev.type\n\t    };\n\t  }\n\t\n\t  on(el, 'mousedown', function(ev) {\n\t    if (!self.mouseEvents) return;\n\t\n\t    // send the button\n\t    sendButton(ev);\n\t\n\t    // ensure focus\n\t    self.focus();\n\t\n\t    // fix for odd bug\n\t    //if (self.vt200Mouse && !self.normalMouse) {\n\t    // XXX This seems to break certain programs.\n\t    // if (self.vt200Mouse) {\n\t    //   sendButton({ __proto__: ev, type: 'mouseup' });\n\t    //   return cancel(ev);\n\t    // }\n\t\n\t    // bind events\n\t    if (self.normalMouse) on(self.document, 'mousemove', sendMove);\n\t\n\t    // x10 compatibility mode can't send button releases\n\t    if (!self.x10Mouse) {\n\t      on(self.document, 'mouseup', function up(ev) {\n\t        sendButton(ev);\n\t        if (self.normalMouse) off(self.document, 'mousemove', sendMove);\n\t        off(self.document, 'mouseup', up);\n\t        return cancel(ev);\n\t      });\n\t    }\n\t\n\t    return cancel(ev);\n\t  });\n\t\n\t  //if (self.normalMouse) {\n\t  //  on(self.document, 'mousemove', sendMove);\n\t  //}\n\t\n\t  on(el, wheelEvent, function(ev) {\n\t    if (!self.mouseEvents) return;\n\t    if (self.x10Mouse\n\t        || self.vt300Mouse\n\t        || self.decLocator) return;\n\t    sendButton(ev);\n\t    return cancel(ev);\n\t  });\n\t\n\t  // allow mousewheel scrolling in\n\t  // the shell for example\n\t  on(el, wheelEvent, function(ev) {\n\t    if (self.mouseEvents) return;\n\t    if (self.applicationKeypad) return;\n\t    if (ev.type === 'DOMMouseScroll') {\n\t      self.scrollDisp(ev.detail < 0 ? -5 : 5);\n\t    } else {\n\t      self.scrollDisp(ev.wheelDeltaY > 0 ? -5 : 5);\n\t    }\n\t    return cancel(ev);\n\t  });\n\t};\n\t\n\t/**\n\t * Destroy Terminal\n\t */\n\t\n\tTerminal.prototype.close =\n\tTerminal.prototype.destroySoon =\n\tTerminal.prototype.destroy = function() {\n\t  if (this.destroyed) {\n\t    return;\n\t  }\n\t\n\t  if (this._blink) {\n\t    clearInterval(this._blink);\n\t    delete this._blink;\n\t  }\n\t\n\t  this.readable = false;\n\t  this.writable = false;\n\t  this.destroyed = true;\n\t  this._events = {};\n\t\n\t  this.handler = function() {};\n\t  this.write = function() {};\n\t  this.end = function() {};\n\t\n\t  if (this.element.parentNode) {\n\t    this.element.parentNode.removeChild(this.element);\n\t  }\n\t\n\t  this.emit('end');\n\t  this.emit('close');\n\t  this.emit('finish');\n\t  this.emit('destroy');\n\t};\n\t\n\t/**\n\t * Rendering Engine\n\t */\n\t\n\t// In the screen buffer, each character\n\t// is stored as a an array with a character\n\t// and a 32-bit integer.\n\t// First value: a utf-16 character.\n\t// Second value:\n\t// Next 9 bits: background color (0-511).\n\t// Next 9 bits: foreground color (0-511).\n\t// Next 14 bits: a mask for misc. flags:\n\t//   1=bold, 2=underline, 4=blink, 8=inverse, 16=invisible\n\t\n\tTerminal.prototype.refresh = function(start, end) {\n\t  var x\n\t    , y\n\t    , i\n\t    , line\n\t    , out\n\t    , ch\n\t    , width\n\t    , data\n\t    , attr\n\t    , bg\n\t    , fg\n\t    , flags\n\t    , row\n\t    , parent;\n\t\n\t  if (end - start >= this.rows / 2) {\n\t    parent = this.element.parentNode;\n\t    if (parent) parent.removeChild(this.element);\n\t  }\n\t\n\t  width = this.cols;\n\t  y = start;\n\t\n\t  if (end >= this.lines.length) {\n\t    this.log('`end` is too large. Most likely a bad CSR.');\n\t    end = this.lines.length - 1;\n\t  }\n\t\n\t  for (; y <= end; y++) {\n\t    row = y + this.ydisp;\n\t\n\t    line = this.lines[row];\n\t    out = '';\n\t\n\t    if (y === this.y\n\t        && this.cursorState\n\t        && (this.ydisp === this.ybase || this.selectMode)\n\t        && !this.cursorHidden) {\n\t      x = this.x;\n\t    } else {\n\t      x = -1;\n\t    }\n\t\n\t    attr = this.defAttr;\n\t    i = 0;\n\t\n\t    for (; i < width; i++) {\n\t      data = line[i][0];\n\t      ch = line[i][1];\n\t\n\t      if (i === x) data = -1;\n\t\n\t      if (data !== attr) {\n\t        if (attr !== this.defAttr) {\n\t          out += '</span>';\n\t        }\n\t        if (data !== this.defAttr) {\n\t          if (data === -1) {\n\t            out += '<span class=\"reverse-video terminal-cursor\">';\n\t\t  } else {\n\t            if (this.useStyle) {\n\t\t      out += '<span class=\"';\n\t\t    } else {\n\t              out += '<span style=\"';\n\t            }\n\t\n\t            bg = data & 0x1ff;\n\t            fg = (data >> 9) & 0x1ff;\n\t            flags = data >> 18;\n\t\n\t            // bold\n\t            if (flags & 1) {\n\t              if (!Terminal.brokenBold) {\n\t\t        if (this.useStyle) {\n\t\t\t  out += 'term-bold '\n\t                } else {\n\t                  out += 'font-weight:bold;';\n\t                }\n\t              }\n\t              // See: XTerm*boldColors\n\t              if (fg < 8) fg += 8;\n\t            }\n\t\n\t            // underline\n\t            if (flags & 2) {\n\t              if (this.useStyle) {\n\t                out += 'term-underline ';\n\t\t      } else {\n\t                out += 'text-decoration:underline;';\n\t              }\n\t            }\n\t\n\t            // blink\n\t            if (flags & 4) {\n\t              if (this.useStyle) {\n\t                out += 'term-blink ';\n\t              } else {\n\t                if (flags & 2) {\n\t                  out = out.slice(0, -1);\n\t                  out += ' blink;';\n\t                } else {\n\t                  out += 'text-decoration:blink;';\n\t                }\n\t              }\n\t            }\n\t\n\t            // inverse\n\t            if (flags & 8) {\n\t              bg = (data >> 9) & 0x1ff;\n\t              fg = data & 0x1ff;\n\t              // Should inverse just be before the\n\t              // above boldColors effect instead?\n\t              if ((flags & 1) && fg < 8) fg += 8;\n\t            }\n\t\n\t            // invisible\n\t            if (flags & 16) {\n\t              if (this.useStyle) {\n\t                out += 'term-hidden ';\n\t              } else {\n\t                out += 'visibility:hidden;';\n\t              }\n\t            }\n\t\n\t            if (bg !== 256) {\n\t              if (this.useStyle) {\n\t                out += 'term-bg-color-' + bg + ' ';\n\t              } else {\n\t                out += 'background-color:' + this.colors[bg] + ';';\n\t              }\n\t            }\n\t\n\t            if (fg !== 257) {\n\t              if (this.useStyle) {\n\t                out += 'term-fg-color-' + fg + ' ';\n\t              } else {\n\t                out += 'color:' + this.colors[fg] + ';';\n\t              }\n\t            }\n\t\n\t            out += '\">';\n\t          }\n\t        }\n\t      }\n\t\n\t      switch (ch) {\n\t        case '&':\n\t          out += '&amp;';\n\t          break;\n\t        case '<':\n\t          out += '&lt;';\n\t          break;\n\t        case '>':\n\t          out += '&gt;';\n\t          break;\n\t        default:\n\t          if (ch <= ' ') {\n\t            out += '&nbsp;';\n\t          } else {\n\t            if (isWide(ch)) i++;\n\t            out += ch;\n\t          }\n\t          break;\n\t      }\n\t\n\t      attr = data;\n\t    }\n\t\n\t    if (attr !== this.defAttr) {\n\t      out += '</span>';\n\t    }\n\t\n\t    this.children[y].innerHTML = out;\n\t  }\n\t\n\t  if (parent) parent.appendChild(this.element);\n\t};\n\t\n\tTerminal.prototype._cursorBlink = function() {\n\t  if (Terminal.focus !== this) return;\n\t  this.cursorState ^= 1;\n\t  this.refresh(this.y, this.y);\n\t};\n\t\n\tTerminal.prototype.showCursor = function() {\n\t  if (!this.cursorState) {\n\t    this.cursorState = 1;\n\t    this.refresh(this.y, this.y);\n\t  } else {\n\t    // Temporarily disabled:\n\t    // this.refreshBlink();\n\t  }\n\t};\n\t\n\tTerminal.prototype.startBlink = function() {\n\t  if (!this.cursorBlink) return;\n\t  var self = this;\n\t  this._blinker = function() {\n\t    self._cursorBlink();\n\t  };\n\t  this._blink = setInterval(this._blinker, 500);\n\t};\n\t\n\tTerminal.prototype.refreshBlink = function() {\n\t  if (!this.cursorBlink || !this._blink) return;\n\t  clearInterval(this._blink);\n\t  this._blink = setInterval(this._blinker, 500);\n\t};\n\t\n\tTerminal.prototype.scroll = function() {\n\t  var row;\n\t\n\t  if (++this.ybase === this.scrollback) {\n\t    this.ybase = this.ybase / 2 | 0;\n\t    this.lines = this.lines.slice(-(this.ybase + this.rows) + 1);\n\t  }\n\t\n\t  this.ydisp = this.ybase;\n\t\n\t  // last line\n\t  row = this.ybase + this.rows - 1;\n\t\n\t  // subtract the bottom scroll region\n\t  row -= this.rows - 1 - this.scrollBottom;\n\t\n\t  if (row === this.lines.length) {\n\t    // potential optimization:\n\t    // pushing is faster than splicing\n\t    // when they amount to the same\n\t    // behavior.\n\t    this.lines.push(this.blankLine());\n\t  } else {\n\t    // add our new line\n\t    this.lines.splice(row, 0, this.blankLine());\n\t  }\n\t\n\t  if (this.scrollTop !== 0) {\n\t    if (this.ybase !== 0) {\n\t      this.ybase--;\n\t      this.ydisp = this.ybase;\n\t    }\n\t    this.lines.splice(this.ybase + this.scrollTop, 1);\n\t  }\n\t\n\t  // this.maxRange();\n\t  this.updateRange(this.scrollTop);\n\t  this.updateRange(this.scrollBottom);\n\t};\n\t\n\tTerminal.prototype.scrollDisp = function(disp) {\n\t  this.ydisp += disp;\n\t\n\t  if (this.ydisp > this.ybase) {\n\t    this.ydisp = this.ybase;\n\t  } else if (this.ydisp < 0) {\n\t    this.ydisp = 0;\n\t  }\n\t\n\t  this.refresh(0, this.rows - 1);\n\t};\n\t\n\tTerminal.prototype.write = function(data) {\n\t  var l = data.length\n\t    , i = 0\n\t    , j\n\t    , cs\n\t    , ch;\n\t\n\t  this.refreshStart = this.y;\n\t  this.refreshEnd = this.y;\n\t\n\t  if (this.ybase !== this.ydisp) {\n\t    this.ydisp = this.ybase;\n\t    this.maxRange();\n\t  }\n\t\n\t  // this.log(JSON.stringify(data.replace(/\\x1b/g, '^[')));\n\t\n\t  for (; i < l; i++, this.lch = ch) {\n\t    ch = data[i];\n\t    switch (this.state) {\n\t      case normal:\n\t        switch (ch) {\n\t          // '\\0'\n\t          // case '\\0':\n\t          // case '\\200':\n\t          //   break;\n\t\n\t          // '\\a'\n\t          case '\\x07':\n\t            this.bell();\n\t            break;\n\t\n\t          // '\\n', '\\v', '\\f'\n\t          case '\\n':\n\t          case '\\x0b':\n\t          case '\\x0c':\n\t            if (this.convertEol) {\n\t              this.x = 0;\n\t            }\n\t            // TODO: Implement eat_newline_glitch.\n\t            // if (this.realX >= this.cols) break;\n\t            // this.realX = 0;\n\t            this.y++;\n\t            if (this.y > this.scrollBottom) {\n\t              this.y--;\n\t              this.scroll();\n\t            }\n\t            break;\n\t\n\t          // '\\r'\n\t          case '\\r':\n\t            this.x = 0;\n\t            break;\n\t\n\t          // '\\b'\n\t          case '\\x08':\n\t            if (this.x > 0) {\n\t              this.x--;\n\t            }\n\t            break;\n\t\n\t          // '\\t'\n\t          case '\\t':\n\t            this.x = this.nextStop();\n\t            break;\n\t\n\t          // shift out\n\t          case '\\x0e':\n\t            this.setgLevel(1);\n\t            break;\n\t\n\t          // shift in\n\t          case '\\x0f':\n\t            this.setgLevel(0);\n\t            break;\n\t\n\t          // '\\e'\n\t          case '\\x1b':\n\t            this.state = escaped;\n\t            break;\n\t\n\t          default:\n\t            // ' '\n\t            if (ch >= ' ') {\n\t              if (this.charset && this.charset[ch]) {\n\t                ch = this.charset[ch];\n\t              }\n\t\n\t              if (this.x >= this.cols) {\n\t                this.x = 0;\n\t                this.y++;\n\t                if (this.y > this.scrollBottom) {\n\t                  this.y--;\n\t                  this.scroll();\n\t                }\n\t              }\n\t\n\t              this.lines[this.y + this.ybase][this.x] = [this.curAttr, ch];\n\t              this.x++;\n\t              this.updateRange(this.y);\n\t\n\t              if (isWide(ch)) {\n\t                j = this.y + this.ybase;\n\t                if (this.cols < 2 || this.x >= this.cols) {\n\t                  this.lines[j][this.x - 1] = [this.curAttr, ' '];\n\t                  break;\n\t                }\n\t                this.lines[j][this.x] = [this.curAttr, ' '];\n\t                this.x++;\n\t              }\n\t            }\n\t            break;\n\t        }\n\t        break;\n\t      case escaped:\n\t        switch (ch) {\n\t          // ESC [ Control Sequence Introducer ( CSI is 0x9b).\n\t          case '[':\n\t            this.params = [];\n\t            this.currentParam = 0;\n\t            this.state = csi;\n\t            break;\n\t\n\t          // ESC ] Operating System Command ( OSC is 0x9d).\n\t          case ']':\n\t            this.params = [];\n\t            this.currentParam = 0;\n\t            this.state = osc;\n\t            break;\n\t\n\t          // ESC P Device Control String ( DCS is 0x90).\n\t          case 'P':\n\t            this.params = [];\n\t            this.prefix = '';\n\t            this.currentParam = '';\n\t            this.state = dcs;\n\t            break;\n\t\n\t          // ESC _ Application Program Command ( APC is 0x9f).\n\t          case '_':\n\t            this.state = ignore;\n\t            break;\n\t\n\t          // ESC ^ Privacy Message ( PM is 0x9e).\n\t          case '^':\n\t            this.state = ignore;\n\t            break;\n\t\n\t          // ESC c Full Reset (RIS).\n\t          case 'c':\n\t            this.reset();\n\t            break;\n\t\n\t          // ESC E Next Line ( NEL is 0x85).\n\t          // ESC D Index ( IND is 0x84).\n\t          case 'E':\n\t            this.x = 0;\n\t            ;\n\t          case 'D':\n\t            this.index();\n\t            break;\n\t\n\t          // ESC M Reverse Index ( RI is 0x8d).\n\t          case 'M':\n\t            this.reverseIndex();\n\t            break;\n\t\n\t          // ESC % Select default/utf-8 character set.\n\t          // @ = default, G = utf-8\n\t          case '%':\n\t            //this.charset = null;\n\t            this.setgLevel(0);\n\t            this.setgCharset(0, Terminal.charsets.US);\n\t            this.state = normal;\n\t            i++;\n\t            break;\n\t\n\t          // ESC (,),*,+,-,. Designate G0-G2 Character Set.\n\t          case '(': // <-- this seems to get all the attention\n\t          case ')':\n\t          case '*':\n\t          case '+':\n\t          case '-':\n\t          case '.':\n\t            switch (ch) {\n\t              case '(':\n\t                this.gcharset = 0;\n\t                break;\n\t              case ')':\n\t                this.gcharset = 1;\n\t                break;\n\t              case '*':\n\t                this.gcharset = 2;\n\t                break;\n\t              case '+':\n\t                this.gcharset = 3;\n\t                break;\n\t              case '-':\n\t                this.gcharset = 1;\n\t                break;\n\t              case '.':\n\t                this.gcharset = 2;\n\t                break;\n\t            }\n\t            this.state = charset;\n\t            break;\n\t\n\t          // Designate G3 Character Set (VT300).\n\t          // A = ISO Latin-1 Supplemental.\n\t          // Not implemented.\n\t          case '/':\n\t            this.gcharset = 3;\n\t            this.state = charset;\n\t            i--;\n\t            break;\n\t\n\t          // ESC N\n\t          // Single Shift Select of G2 Character Set\n\t          // ( SS2 is 0x8e). This affects next character only.\n\t          case 'N':\n\t            break;\n\t          // ESC O\n\t          // Single Shift Select of G3 Character Set\n\t          // ( SS3 is 0x8f). This affects next character only.\n\t          case 'O':\n\t            break;\n\t          // ESC n\n\t          // Invoke the G2 Character Set as GL (LS2).\n\t          case 'n':\n\t            this.setgLevel(2);\n\t            break;\n\t          // ESC o\n\t          // Invoke the G3 Character Set as GL (LS3).\n\t          case 'o':\n\t            this.setgLevel(3);\n\t            break;\n\t          // ESC |\n\t          // Invoke the G3 Character Set as GR (LS3R).\n\t          case '|':\n\t            this.setgLevel(3);\n\t            break;\n\t          // ESC }\n\t          // Invoke the G2 Character Set as GR (LS2R).\n\t          case '}':\n\t            this.setgLevel(2);\n\t            break;\n\t          // ESC ~\n\t          // Invoke the G1 Character Set as GR (LS1R).\n\t          case '~':\n\t            this.setgLevel(1);\n\t            break;\n\t\n\t          // ESC 7 Save Cursor (DECSC).\n\t          case '7':\n\t            this.saveCursor();\n\t            this.state = normal;\n\t            break;\n\t\n\t          // ESC 8 Restore Cursor (DECRC).\n\t          case '8':\n\t            this.restoreCursor();\n\t            this.state = normal;\n\t            break;\n\t\n\t          // ESC # 3 DEC line height/width\n\t          case '#':\n\t            this.state = normal;\n\t            i++;\n\t            break;\n\t\n\t          // ESC H Tab Set (HTS is 0x88).\n\t          case 'H':\n\t            this.tabSet();\n\t            break;\n\t\n\t          // ESC = Application Keypad (DECPAM).\n\t          case '=':\n\t            this.log('Serial port requested application keypad.');\n\t            this.applicationKeypad = true;\n\t            this.state = normal;\n\t            break;\n\t\n\t          // ESC > Normal Keypad (DECPNM).\n\t          case '>':\n\t            this.log('Switching back to normal keypad.');\n\t            this.applicationKeypad = false;\n\t            this.state = normal;\n\t            break;\n\t\n\t          default:\n\t            this.state = normal;\n\t            this.error('Unknown ESC control: %s.', ch);\n\t            break;\n\t        }\n\t        break;\n\t\n\t      case charset:\n\t        switch (ch) {\n\t          case '0': // DEC Special Character and Line Drawing Set.\n\t            cs = Terminal.charsets.SCLD;\n\t            break;\n\t          case 'A': // UK\n\t            cs = Terminal.charsets.UK;\n\t            break;\n\t          case 'B': // United States (USASCII).\n\t            cs = Terminal.charsets.US;\n\t            break;\n\t          case '4': // Dutch\n\t            cs = Terminal.charsets.Dutch;\n\t            break;\n\t          case 'C': // Finnish\n\t          case '5':\n\t            cs = Terminal.charsets.Finnish;\n\t            break;\n\t          case 'R': // French\n\t            cs = Terminal.charsets.French;\n\t            break;\n\t          case 'Q': // FrenchCanadian\n\t            cs = Terminal.charsets.FrenchCanadian;\n\t            break;\n\t          case 'K': // German\n\t            cs = Terminal.charsets.German;\n\t            break;\n\t          case 'Y': // Italian\n\t            cs = Terminal.charsets.Italian;\n\t            break;\n\t          case 'E': // NorwegianDanish\n\t          case '6':\n\t            cs = Terminal.charsets.NorwegianDanish;\n\t            break;\n\t          case 'Z': // Spanish\n\t            cs = Terminal.charsets.Spanish;\n\t            break;\n\t          case 'H': // Swedish\n\t          case '7':\n\t            cs = Terminal.charsets.Swedish;\n\t            break;\n\t          case '=': // Swiss\n\t            cs = Terminal.charsets.Swiss;\n\t            break;\n\t          case '/': // ISOLatin (actually /A)\n\t            cs = Terminal.charsets.ISOLatin;\n\t            i++;\n\t            break;\n\t          default: // Default\n\t            cs = Terminal.charsets.US;\n\t            break;\n\t        }\n\t        this.setgCharset(this.gcharset, cs);\n\t        this.gcharset = null;\n\t        this.state = normal;\n\t        break;\n\t\n\t      case osc:\n\t        // OSC Ps ; Pt ST\n\t        // OSC Ps ; Pt BEL\n\t        //   Set Text Parameters.\n\t        if ((this.lch === '\\x1b' && ch === '\\\\') || ch === '\\x07') {\n\t          if (this.lch === '\\x1b') {\n\t            if (typeof this.currentParam === 'string') {\n\t              this.currentParam = this.currentParam.slice(0, -1);\n\t            } else if (typeof this.currentParam == 'number') {\n\t              this.currentParam = (this.currentParam - ('\\x1b'.charCodeAt(0) - 48)) / 10;\n\t            }\n\t          }\n\t\n\t          this.params.push(this.currentParam);\n\t\n\t          switch (this.params[0]) {\n\t            case 0:\n\t            case 1:\n\t            case 2:\n\t              if (this.params[1]) {\n\t                this.title = this.params[1];\n\t                this.handleTitle(this.title);\n\t              }\n\t              break;\n\t            case 3:\n\t              // set X property\n\t              break;\n\t            case 4:\n\t            case 5:\n\t              // change dynamic colors\n\t              break;\n\t            case 10:\n\t            case 11:\n\t            case 12:\n\t            case 13:\n\t            case 14:\n\t            case 15:\n\t            case 16:\n\t            case 17:\n\t            case 18:\n\t            case 19:\n\t              // change dynamic ui colors\n\t              break;\n\t            case 46:\n\t              // change log file\n\t              break;\n\t            case 50:\n\t              // dynamic font\n\t              break;\n\t            case 51:\n\t              // emacs shell\n\t              break;\n\t            case 52:\n\t              // manipulate selection data\n\t              break;\n\t            case 104:\n\t            case 105:\n\t            case 110:\n\t            case 111:\n\t            case 112:\n\t            case 113:\n\t            case 114:\n\t            case 115:\n\t            case 116:\n\t            case 117:\n\t            case 118:\n\t              // reset colors\n\t              break;\n\t          }\n\t\n\t          this.params = [];\n\t          this.currentParam = 0;\n\t          this.state = normal;\n\t        } else {\n\t          if (!this.params.length) {\n\t            if (ch >= '0' && ch <= '9') {\n\t              this.currentParam =\n\t                this.currentParam * 10 + ch.charCodeAt(0) - 48;\n\t            } else if (ch === ';') {\n\t              this.params.push(this.currentParam);\n\t              this.currentParam = '';\n\t            }\n\t          } else {\n\t            this.currentParam += ch;\n\t          }\n\t        }\n\t        break;\n\t\n\t      case csi:\n\t        // '?', '>', '!'\n\t        if (ch === '?' || ch === '>' || ch === '!') {\n\t          this.prefix = ch;\n\t          break;\n\t        }\n\t\n\t        // 0 - 9\n\t        if (ch >= '0' && ch <= '9') {\n\t          this.currentParam = this.currentParam * 10 + ch.charCodeAt(0) - 48;\n\t          break;\n\t        }\n\t\n\t        // '$', '\"', ' ', '\\''\n\t        if (ch === '$' || ch === '\"' || ch === ' ' || ch === '\\'') {\n\t          this.postfix = ch;\n\t          break;\n\t        }\n\t\n\t        this.params.push(this.currentParam);\n\t        this.currentParam = 0;\n\t\n\t        // ';'\n\t        if (ch === ';') break;\n\t\n\t        this.state = normal;\n\t\n\t        switch (ch) {\n\t          // CSI Ps A\n\t          // Cursor Up Ps Times (default = 1) (CUU).\n\t          case 'A':\n\t            this.cursorUp(this.params);\n\t            break;\n\t\n\t          // CSI Ps B\n\t          // Cursor Down Ps Times (default = 1) (CUD).\n\t          case 'B':\n\t            this.cursorDown(this.params);\n\t            break;\n\t\n\t          // CSI Ps C\n\t          // Cursor Forward Ps Times (default = 1) (CUF).\n\t          case 'C':\n\t            this.cursorForward(this.params);\n\t            break;\n\t\n\t          // CSI Ps D\n\t          // Cursor Backward Ps Times (default = 1) (CUB).\n\t          case 'D':\n\t            this.cursorBackward(this.params);\n\t            break;\n\t\n\t          // CSI Ps ; Ps H\n\t          // Cursor Position [row;column] (default = [1,1]) (CUP).\n\t          case 'H':\n\t            this.cursorPos(this.params);\n\t            break;\n\t\n\t          // CSI Ps J  Erase in Display (ED).\n\t          case 'J':\n\t            this.eraseInDisplay(this.params);\n\t            break;\n\t\n\t          // CSI Ps K  Erase in Line (EL).\n\t          case 'K':\n\t            this.eraseInLine(this.params);\n\t            break;\n\t\n\t          // CSI Pm m  Character Attributes (SGR).\n\t          case 'm':\n\t            if (!this.prefix) {\n\t              this.charAttributes(this.params);\n\t            }\n\t            break;\n\t\n\t          // CSI Ps n  Device Status Report (DSR).\n\t          case 'n':\n\t            if (!this.prefix) {\n\t              this.deviceStatus(this.params);\n\t            }\n\t            break;\n\t\n\t          /**\n\t           * Additions\n\t           */\n\t\n\t          // CSI Ps @\n\t          // Insert Ps (Blank) Character(s) (default = 1) (ICH).\n\t          case '@':\n\t            this.insertChars(this.params);\n\t            break;\n\t\n\t          // CSI Ps E\n\t          // Cursor Next Line Ps Times (default = 1) (CNL).\n\t          case 'E':\n\t            this.cursorNextLine(this.params);\n\t            break;\n\t\n\t          // CSI Ps F\n\t          // Cursor Preceding Line Ps Times (default = 1) (CNL).\n\t          case 'F':\n\t            this.cursorPrecedingLine(this.params);\n\t            break;\n\t\n\t          // CSI Ps G\n\t          // Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n\t          case 'G':\n\t            this.cursorCharAbsolute(this.params);\n\t            break;\n\t\n\t          // CSI Ps L\n\t          // Insert Ps Line(s) (default = 1) (IL).\n\t          case 'L':\n\t            this.insertLines(this.params);\n\t            break;\n\t\n\t          // CSI Ps M\n\t          // Delete Ps Line(s) (default = 1) (DL).\n\t          case 'M':\n\t            this.deleteLines(this.params);\n\t            break;\n\t\n\t          // CSI Ps P\n\t          // Delete Ps Character(s) (default = 1) (DCH).\n\t          case 'P':\n\t            this.deleteChars(this.params);\n\t            break;\n\t\n\t          // CSI Ps X\n\t          // Erase Ps Character(s) (default = 1) (ECH).\n\t          case 'X':\n\t            this.eraseChars(this.params);\n\t            break;\n\t\n\t          // CSI Pm `  Character Position Absolute\n\t          //   [column] (default = [row,1]) (HPA).\n\t          case '`':\n\t            this.charPosAbsolute(this.params);\n\t            break;\n\t\n\t          // 141 61 a * HPR -\n\t          // Horizontal Position Relative\n\t          case 'a':\n\t            this.HPositionRelative(this.params);\n\t            break;\n\t\n\t          // CSI P s c\n\t          // Send Device Attributes (Primary DA).\n\t          // CSI > P s c\n\t          // Send Device Attributes (Secondary DA)\n\t          case 'c':\n\t            this.sendDeviceAttributes(this.params);\n\t            break;\n\t\n\t          // CSI Pm d\n\t          // Line Position Absolute  [row] (default = [1,column]) (VPA).\n\t          case 'd':\n\t            this.linePosAbsolute(this.params);\n\t            break;\n\t\n\t          // 145 65 e * VPR - Vertical Position Relative\n\t          case 'e':\n\t            this.VPositionRelative(this.params);\n\t            break;\n\t\n\t          // CSI Ps ; Ps f\n\t          //   Horizontal and Vertical Position [row;column] (default =\n\t          //   [1,1]) (HVP).\n\t          case 'f':\n\t            this.HVPosition(this.params);\n\t            break;\n\t\n\t          // CSI Pm h  Set Mode (SM).\n\t          // CSI ? Pm h - mouse escape codes, cursor escape codes\n\t          case 'h':\n\t            this.setMode(this.params);\n\t            break;\n\t\n\t          // CSI Pm l  Reset Mode (RM).\n\t          // CSI ? Pm l\n\t          case 'l':\n\t            this.resetMode(this.params);\n\t            break;\n\t\n\t          // CSI Ps ; Ps r\n\t          //   Set Scrolling Region [top;bottom] (default = full size of win-\n\t          //   dow) (DECSTBM).\n\t          // CSI ? Pm r\n\t          case 'r':\n\t            this.setScrollRegion(this.params);\n\t            break;\n\t\n\t          // CSI s\n\t          //   Save cursor (ANSI.SYS).\n\t          case 's':\n\t            this.saveCursor(this.params);\n\t            break;\n\t\n\t          // CSI u\n\t          //   Restore cursor (ANSI.SYS).\n\t          case 'u':\n\t            this.restoreCursor(this.params);\n\t            break;\n\t\n\t          /**\n\t           * Lesser Used\n\t           */\n\t\n\t          // CSI Ps I\n\t          // Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n\t          case 'I':\n\t            this.cursorForwardTab(this.params);\n\t            break;\n\t\n\t          // CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n\t          case 'S':\n\t            this.scrollUp(this.params);\n\t            break;\n\t\n\t          // CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n\t          // CSI Ps ; Ps ; Ps ; Ps ; Ps T\n\t          // CSI > Ps; Ps T\n\t          case 'T':\n\t            // if (this.prefix === '>') {\n\t            //   this.resetTitleModes(this.params);\n\t            //   break;\n\t            // }\n\t            // if (this.params.length > 2) {\n\t            //   this.initMouseTracking(this.params);\n\t            //   break;\n\t            // }\n\t            if (this.params.length < 2 && !this.prefix) {\n\t              this.scrollDown(this.params);\n\t            }\n\t            break;\n\t\n\t          // CSI Ps Z\n\t          // Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n\t          case 'Z':\n\t            this.cursorBackwardTab(this.params);\n\t            break;\n\t\n\t          // CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n\t          case 'b':\n\t            this.repeatPrecedingCharacter(this.params);\n\t            break;\n\t\n\t          // CSI Ps g  Tab Clear (TBC).\n\t          case 'g':\n\t            this.tabClear(this.params);\n\t            break;\n\t\n\t          // CSI Pm i  Media Copy (MC).\n\t          // CSI ? Pm i\n\t          // case 'i':\n\t          //   this.mediaCopy(this.params);\n\t          //   break;\n\t\n\t          // CSI Pm m  Character Attributes (SGR).\n\t          // CSI > Ps; Ps m\n\t          // case 'm': // duplicate\n\t          //   if (this.prefix === '>') {\n\t          //     this.setResources(this.params);\n\t          //   } else {\n\t          //     this.charAttributes(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI Ps n  Device Status Report (DSR).\n\t          // CSI > Ps n\n\t          // case 'n': // duplicate\n\t          //   if (this.prefix === '>') {\n\t          //     this.disableModifiers(this.params);\n\t          //   } else {\n\t          //     this.deviceStatus(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI > Ps p  Set pointer mode.\n\t          // CSI ! p   Soft terminal reset (DECSTR).\n\t          // CSI Ps$ p\n\t          //   Request ANSI mode (DECRQM).\n\t          // CSI ? Ps$ p\n\t          //   Request DEC private mode (DECRQM).\n\t          // CSI Ps ; Ps \" p\n\t          case 'p':\n\t            switch (this.prefix) {\n\t              // case '>':\n\t              //   this.setPointerMode(this.params);\n\t              //   break;\n\t              case '!':\n\t                this.softReset(this.params);\n\t                break;\n\t              // case '?':\n\t              //   if (this.postfix === '$') {\n\t              //     this.requestPrivateMode(this.params);\n\t              //   }\n\t              //   break;\n\t              // default:\n\t              //   if (this.postfix === '\"') {\n\t              //     this.setConformanceLevel(this.params);\n\t              //   } else if (this.postfix === '$') {\n\t              //     this.requestAnsiMode(this.params);\n\t              //   }\n\t              //   break;\n\t            }\n\t            break;\n\t\n\t          // CSI Ps q  Load LEDs (DECLL).\n\t          // CSI Ps SP q\n\t          // CSI Ps \" q\n\t          // case 'q':\n\t          //   if (this.postfix === ' ') {\n\t          //     this.setCursorStyle(this.params);\n\t          //     break;\n\t          //   }\n\t          //   if (this.postfix === '\"') {\n\t          //     this.setCharProtectionAttr(this.params);\n\t          //     break;\n\t          //   }\n\t          //   this.loadLEDs(this.params);\n\t          //   break;\n\t\n\t          // CSI Ps ; Ps r\n\t          //   Set Scrolling Region [top;bottom] (default = full size of win-\n\t          //   dow) (DECSTBM).\n\t          // CSI ? Pm r\n\t          // CSI Pt; Pl; Pb; Pr; Ps$ r\n\t          // case 'r': // duplicate\n\t          //   if (this.prefix === '?') {\n\t          //     this.restorePrivateValues(this.params);\n\t          //   } else if (this.postfix === '$') {\n\t          //     this.setAttrInRectangle(this.params);\n\t          //   } else {\n\t          //     this.setScrollRegion(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI s     Save cursor (ANSI.SYS).\n\t          // CSI ? Pm s\n\t          // case 's': // duplicate\n\t          //   if (this.prefix === '?') {\n\t          //     this.savePrivateValues(this.params);\n\t          //   } else {\n\t          //     this.saveCursor(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI Ps ; Ps ; Ps t\n\t          // CSI Pt; Pl; Pb; Pr; Ps$ t\n\t          // CSI > Ps; Ps t\n\t          // CSI Ps SP t\n\t          // case 't':\n\t          //   if (this.postfix === '$') {\n\t          //     this.reverseAttrInRectangle(this.params);\n\t          //   } else if (this.postfix === ' ') {\n\t          //     this.setWarningBellVolume(this.params);\n\t          //   } else {\n\t          //     if (this.prefix === '>') {\n\t          //       this.setTitleModeFeature(this.params);\n\t          //     } else {\n\t          //       this.manipulateWindow(this.params);\n\t          //     }\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI u     Restore cursor (ANSI.SYS).\n\t          // CSI Ps SP u\n\t          // case 'u': // duplicate\n\t          //   if (this.postfix === ' ') {\n\t          //     this.setMarginBellVolume(this.params);\n\t          //   } else {\n\t          //     this.restoreCursor(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI Pt; Pl; Pb; Pr; Pp; Pt; Pl; Pp$ v\n\t          // case 'v':\n\t          //   if (this.postfix === '$') {\n\t          //     this.copyRectagle(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI Pt ; Pl ; Pb ; Pr ' w\n\t          // case 'w':\n\t          //   if (this.postfix === '\\'') {\n\t          //     this.enableFilterRectangle(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI Ps x  Request Terminal Parameters (DECREQTPARM).\n\t          // CSI Ps x  Select Attribute Change Extent (DECSACE).\n\t          // CSI Pc; Pt; Pl; Pb; Pr$ x\n\t          // case 'x':\n\t          //   if (this.postfix === '$') {\n\t          //     this.fillRectangle(this.params);\n\t          //   } else {\n\t          //     this.requestParameters(this.params);\n\t          //     //this.__(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI Ps ; Pu ' z\n\t          // CSI Pt; Pl; Pb; Pr$ z\n\t          // case 'z':\n\t          //   if (this.postfix === '\\'') {\n\t          //     this.enableLocatorReporting(this.params);\n\t          //   } else if (this.postfix === '$') {\n\t          //     this.eraseRectangle(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI Pm ' {\n\t          // CSI Pt; Pl; Pb; Pr$ {\n\t          // case '{':\n\t          //   if (this.postfix === '\\'') {\n\t          //     this.setLocatorEvents(this.params);\n\t          //   } else if (this.postfix === '$') {\n\t          //     this.selectiveEraseRectangle(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI Ps ' |\n\t          // case '|':\n\t          //   if (this.postfix === '\\'') {\n\t          //     this.requestLocatorPosition(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI P m SP }\n\t          // Insert P s Column(s) (default = 1) (DECIC), VT420 and up.\n\t          // case '}':\n\t          //   if (this.postfix === ' ') {\n\t          //     this.insertColumns(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          // CSI P m SP ~\n\t          // Delete P s Column(s) (default = 1) (DECDC), VT420 and up\n\t          // case '~':\n\t          //   if (this.postfix === ' ') {\n\t          //     this.deleteColumns(this.params);\n\t          //   }\n\t          //   break;\n\t\n\t          default:\n\t            this.error('Unknown CSI code: %s.', ch);\n\t            break;\n\t        }\n\t\n\t        this.prefix = '';\n\t        this.postfix = '';\n\t        break;\n\t\n\t      case dcs:\n\t        if ((this.lch === '\\x1b' && ch === '\\\\') || ch === '\\x07') {\n\t          // Workarounds:\n\t          if (this.prefix === 'tmux;\\x1b') {\n\t            // `DCS tmux; Pt ST` may contain a Pt with an ST\n\t            // XXX Does tmux work this way?\n\t            // if (this.lch === '\\x1b' & data[i + 1] === '\\x1b' && data[i + 2] === '\\\\') {\n\t            //   this.currentParam += ch;\n\t            //   continue;\n\t            // }\n\t            // Tmux only accepts ST, not BEL:\n\t            if (ch === '\\x07') {\n\t              this.currentParam += ch;\n\t              continue;\n\t            }\n\t          }\n\t\n\t          if (this.lch === '\\x1b') {\n\t            if (typeof this.currentParam === 'string') {\n\t              this.currentParam = this.currentParam.slice(0, -1);\n\t            } else if (typeof this.currentParam == 'number') {\n\t              this.currentParam = (this.currentParam - ('\\x1b'.charCodeAt(0) - 48)) / 10;\n\t            }\n\t          }\n\t\n\t          this.params.push(this.currentParam);\n\t\n\t          var pt = this.params[this.params.length - 1];\n\t\n\t          switch (this.prefix) {\n\t            // User-Defined Keys (DECUDK).\n\t            // DCS Ps; Ps| Pt ST\n\t            case UDK:\n\t              this.emit('udk', {\n\t                clearAll: this.params[0] === 0,\n\t                eraseBelow: this.params[0] === 1,\n\t                lockKeys: this.params[1] === 0,\n\t                dontLockKeys: this.params[1] === 1,\n\t                keyList: (this.params[2] + '').split(';').map(function(part) {\n\t                  part = part.split('/');\n\t                  return {\n\t                    keyCode: part[0],\n\t                    hexKeyValue: part[1]\n\t                  };\n\t                })\n\t              });\n\t              break;\n\t\n\t            // Request Status String (DECRQSS).\n\t            // DCS $ q Pt ST\n\t            // test: echo -e '\\eP$q\"p\\e\\\\'\n\t            case '$q':\n\t              var valid = 0;\n\t\n\t              switch (pt) {\n\t                // DECSCA\n\t                // CSI Ps \" q\n\t                case '\"q':\n\t                  pt = '0\"q';\n\t                  valid = 1;\n\t                  break;\n\t\n\t                // DECSCL\n\t                // CSI Ps ; Ps \" p\n\t                case '\"p':\n\t                  pt = '61;0\"p';\n\t                  valid = 1;\n\t                  break;\n\t\n\t                // DECSTBM\n\t                // CSI Ps ; Ps r\n\t                case 'r':\n\t                  pt = ''\n\t                    + (this.scrollTop + 1)\n\t                    + ';'\n\t                    + (this.scrollBottom + 1)\n\t                    + 'r';\n\t                  valid = 1;\n\t                  break;\n\t\n\t                // SGR\n\t                // CSI Pm m\n\t                case 'm':\n\t                  // TODO: Parse this.curAttr here.\n\t                  // pt = '0m';\n\t                  // valid = 1;\n\t                  valid = 0; // Not implemented.\n\t                  break;\n\t\n\t                default:\n\t                  this.error('Unknown DCS Pt: %s.', pt);\n\t                  valid = 0; // unimplemented\n\t                  break;\n\t              }\n\t\n\t              this.send('\\x1bP' + valid + '$r' + pt + '\\x1b\\\\');\n\t              break;\n\t\n\t            // Set Termcap/Terminfo Data (xterm, experimental).\n\t            // DCS + p Pt ST\n\t            case '+p':\n\t              this.emit('set terminfo', {\n\t                name: this.params[0]\n\t              });\n\t              break;\n\t\n\t            // Request Termcap/Terminfo String (xterm, experimental)\n\t            // Regular xterm does not even respond to this sequence.\n\t            // This can cause a small glitch in vim.\n\t            // DCS + q Pt ST\n\t            // test: echo -ne '\\eP+q6b64\\e\\\\'\n\t            case '+q':\n\t              var valid = false;\n\t              this.send('\\x1bP' + +valid + '+r' + pt + '\\x1b\\\\');\n\t              break;\n\t\n\t            // Implement tmux sequence forwarding is\n\t            // someone uses term.js for a multiplexer.\n\t            // DCS tmux; ESC Pt ST\n\t            case 'tmux;\\x1b':\n\t              this.emit('passthrough', pt);\n\t              break;\n\t\n\t            default:\n\t              this.error('Unknown DCS prefix: %s.', pt);\n\t              break;\n\t          }\n\t\n\t          this.currentParam = 0;\n\t          this.prefix = '';\n\t          this.state = normal;\n\t        } else {\n\t          this.currentParam += ch;\n\t          if (!this.prefix) {\n\t            if (/^\\d*;\\d*\\|/.test(this.currentParam)) {\n\t              this.prefix = UDK;\n\t              this.params = this.currentParam.split(/[;|]/).map(function(n) {\n\t                if (!n.length) return 0;\n\t                return +n;\n\t              }).slice(0, -1);\n\t              this.currentParam = '';\n\t            } else if (/^[$+][a-zA-Z]/.test(this.currentParam)\n\t                || /^\\w+;\\x1b/.test(this.currentParam)) {\n\t              this.prefix = this.currentParam;\n\t              this.currentParam = '';\n\t            }\n\t          }\n\t        }\n\t        break;\n\t\n\t      case ignore:\n\t        // For PM and APC.\n\t        if ((this.lch === '\\x1b' && ch === '\\\\') || ch === '\\x07') {\n\t          this.state = normal;\n\t        }\n\t        break;\n\t    }\n\t  }\n\t\n\t  this.updateRange(this.y);\n\t  this.refresh(this.refreshStart, this.refreshEnd);\n\t\n\t  return true;\n\t};\n\t\n\tTerminal.prototype.writeln = function(data) {\n\t  return this.write(data + '\\r\\n');\n\t};\n\t\n\tTerminal.prototype.end = function(data) {\n\t  var ret = true;\n\t  if (data) {\n\t    ret = this.write(data);\n\t  }\n\t  this.destroySoon();\n\t  return ret;\n\t};\n\t\n\tTerminal.prototype.resume = function() {\n\t  ;\n\t};\n\t\n\tTerminal.prototype.pause = function() {\n\t  ;\n\t};\n\t\n\t// Key Resources:\n\t// https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\n\tTerminal.prototype.keyDown = function(ev) {\n\t  var self = this\n\t    , key;\n\t\n\t  switch (ev.keyCode) {\n\t    // backspace\n\t    case 8:\n\t      if (ev.altKey) {\n\t        key = '\\x17';\n\t        break;\n\t      }\n\t      if (ev.shiftKey) {\n\t        key = '\\x08'; // ^H\n\t        break;\n\t      }\n\t      key = '\\x7f'; // ^?\n\t      break;\n\t    // tab\n\t    case 9:\n\t      if (ev.shiftKey) {\n\t        key = '\\x1b[Z';\n\t        break;\n\t      }\n\t      key = '\\t';\n\t      break;\n\t    // return/enter\n\t    case 13:\n\t      key = '\\r';\n\t      break;\n\t    // escape\n\t    case 27:\n\t      key = '\\x1b';\n\t      break;\n\t    // space\n\t    case 32:\n\t      key = '\\x20';\n\t      break;\n\t    // left-arrow\n\t    case 37:\n\t      if (this.applicationCursor) {\n\t        key = '\\x1bOD'; // SS3 as ^[O for 7-bit\n\t        //key = '\\x8fD'; // SS3 as 0x8f for 8-bit\n\t        break;\n\t      }\n\t      if (ev.ctrlKey) {\n\t        key = '\\x1b[5D';\n\t        break;\n\t      }\n\t      key = '\\x1b[D';\n\t      break;\n\t    // right-arrow\n\t    case 39:\n\t      if (this.applicationCursor) {\n\t        key = '\\x1bOC';\n\t        break;\n\t      }\n\t      if (ev.ctrlKey) {\n\t        key = '\\x1b[5C';\n\t        break;\n\t      }\n\t      key = '\\x1b[C';\n\t      break;\n\t    // up-arrow\n\t    case 38:\n\t      if (this.applicationCursor) {\n\t        key = '\\x1bOA';\n\t        break;\n\t      }\n\t      if (ev.ctrlKey) {\n\t        this.scrollDisp(-1);\n\t        return cancel(ev);\n\t      } else {\n\t        key = '\\x1b[A';\n\t      }\n\t      break;\n\t    // down-arrow\n\t    case 40:\n\t      if (this.applicationCursor) {\n\t        key = '\\x1bOB';\n\t        break;\n\t      }\n\t      if (ev.ctrlKey) {\n\t        this.scrollDisp(1);\n\t        return cancel(ev);\n\t      } else {\n\t        key = '\\x1b[B';\n\t      }\n\t      break;\n\t    // delete\n\t    case 46:\n\t      key = '\\x1b[3~';\n\t      break;\n\t    // insert\n\t    case 45:\n\t      key = '\\x1b[2~';\n\t      break;\n\t    // home\n\t    case 36:\n\t      if (this.applicationKeypad) {\n\t        key = '\\x1bOH';\n\t        break;\n\t      }\n\t      key = '\\x1bOH';\n\t      break;\n\t    // end\n\t    case 35:\n\t      if (this.applicationKeypad) {\n\t        key = '\\x1bOF';\n\t        break;\n\t      }\n\t      key = '\\x1bOF';\n\t      break;\n\t    // page up\n\t    case 33:\n\t      if (ev.shiftKey) {\n\t        this.scrollDisp(-(this.rows - 1));\n\t        return cancel(ev);\n\t      } else {\n\t        key = '\\x1b[5~';\n\t      }\n\t      break;\n\t    // page down\n\t    case 34:\n\t      if (ev.shiftKey) {\n\t        this.scrollDisp(this.rows - 1);\n\t        return cancel(ev);\n\t      } else {\n\t        key = '\\x1b[6~';\n\t      }\n\t      break;\n\t    // F1\n\t    case 112:\n\t      key = '\\x1bOP';\n\t      break;\n\t    // F2\n\t    case 113:\n\t      key = '\\x1bOQ';\n\t      break;\n\t    // F3\n\t    case 114:\n\t      key = '\\x1bOR';\n\t      break;\n\t    // F4\n\t    case 115:\n\t      key = '\\x1bOS';\n\t      break;\n\t    // F5\n\t    case 116:\n\t      key = '\\x1b[15~';\n\t      break;\n\t    // F6\n\t    case 117:\n\t      key = '\\x1b[17~';\n\t      break;\n\t    // F7\n\t    case 118:\n\t      key = '\\x1b[18~';\n\t      break;\n\t    // F8\n\t    case 119:\n\t      key = '\\x1b[19~';\n\t      break;\n\t    // F9\n\t    case 120:\n\t      key = '\\x1b[20~';\n\t      break;\n\t    // F10\n\t    case 121:\n\t      key = '\\x1b[21~';\n\t      break;\n\t    // F11\n\t    case 122:\n\t      key = '\\x1b[23~';\n\t      break;\n\t    // F12\n\t    case 123:\n\t      key = '\\x1b[24~';\n\t      break;\n\t    default:\n\t      // a-z and space\n\t      if (ev.ctrlKey) {\n\t        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n\t          // Ctrl-A\n\t          if (this.screenKeys) {\n\t            if (!this.prefixMode && !this.selectMode && ev.keyCode === 65) {\n\t              this.enterPrefix();\n\t              return cancel(ev);\n\t            }\n\t          }\n\t          // Ctrl-V\n\t          if (this.prefixMode && ev.keyCode === 86) {\n\t            this.leavePrefix();\n\t            return;\n\t          }\n\t          // Ctrl-C\n\t          if ((this.prefixMode || this.selectMode) && ev.keyCode === 67) {\n\t            if (this.visualMode) {\n\t              setTimeout(function() {\n\t                self.leaveVisual();\n\t              }, 1);\n\t            }\n\t            return;\n\t          }\n\t          key = String.fromCharCode(ev.keyCode - 64);\n\t        } else if (ev.keyCode === 32) {\n\t          // NUL\n\t          key = String.fromCharCode(0);\n\t        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n\t          // escape, file sep, group sep, record sep, unit sep\n\t          key = String.fromCharCode(ev.keyCode - 51 + 27);\n\t        } else if (ev.keyCode === 56) {\n\t          // delete\n\t          key = String.fromCharCode(127);\n\t        } else if (ev.keyCode === 219) {\n\t          // ^[ - escape\n\t          key = String.fromCharCode(27);\n\t        } else if (ev.keyCode === 221) {\n\t          // ^] - group sep\n\t          key = String.fromCharCode(29);\n\t        }\n\t      } else if (ev.altKey) {\n\t        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n\t          key = '\\x1b' + String.fromCharCode(ev.keyCode + 32);\n\t        } else if (ev.keyCode === 192) {\n\t          key = '\\x1b`';\n\t        } else if (ev.keyCode >= 48 && ev.keyCode <= 57) {\n\t          key = '\\x1b' + (ev.keyCode - 48);\n\t        }\n\t      }\n\t      break;\n\t  }\n\t\n\t  if (!key) return true;\n\t\n\t  if (this.prefixMode) {\n\t    this.leavePrefix();\n\t    return cancel(ev);\n\t  }\n\t\n\t  if (this.selectMode) {\n\t    this.keySelect(ev, key);\n\t    return cancel(ev);\n\t  }\n\t\n\t  this.emit('keydown', ev);\n\t  this.emit('key', key, ev);\n\t\n\t  this.showCursor();\n\t  this.handler(key);\n\t\n\t  return cancel(ev);\n\t};\n\t\n\tTerminal.prototype.setgLevel = function(g) {\n\t  this.glevel = g;\n\t  this.charset = this.charsets[g];\n\t};\n\t\n\tTerminal.prototype.setgCharset = function(g, charset) {\n\t  this.charsets[g] = charset;\n\t  if (this.glevel === g) {\n\t    this.charset = charset;\n\t  }\n\t};\n\t\n\tTerminal.prototype.keyPress = function(ev) {\n\t  var key;\n\t\n\t  cancel(ev);\n\t\n\t  if (ev.charCode) {\n\t    key = ev.charCode;\n\t  } else if (ev.which == null) {\n\t    key = ev.keyCode;\n\t  } else if (ev.which !== 0 && ev.charCode !== 0) {\n\t    key = ev.which;\n\t  } else {\n\t    return false;\n\t  }\n\t\n\t  if (!key || ev.ctrlKey || ev.altKey || ev.metaKey) return false;\n\t\n\t  key = String.fromCharCode(key);\n\t\n\t  if (this.prefixMode) {\n\t    this.leavePrefix();\n\t    this.keyPrefix(ev, key);\n\t    return false;\n\t  }\n\t\n\t  if (this.selectMode) {\n\t    this.keySelect(ev, key);\n\t    return false;\n\t  }\n\t\n\t  this.emit('keypress', key, ev);\n\t  this.emit('key', key, ev);\n\t\n\t  this.showCursor();\n\t  this.handler(key);\n\t\n\t  return false;\n\t};\n\t\n\tTerminal.prototype.send = function(data) {\n\t  var self = this;\n\t\n\t  if (!this.queue) {\n\t    setTimeout(function() {\n\t      self.handler(self.queue);\n\t      self.queue = '';\n\t    }, 1);\n\t  }\n\t\n\t  this.queue += data;\n\t};\n\t\n\tTerminal.prototype.bell = function() {\n\t  this.emit('bell');\n\t  if (!this.visualBell) return;\n\t  var self = this;\n\t  this.element.style.borderColor = 'white';\n\t  setTimeout(function() {\n\t    self.element.style.borderColor = '';\n\t  }, 10);\n\t  if (this.popOnBell) this.focus();\n\t};\n\t\n\tTerminal.prototype.log = function() {\n\t  if (!this.debug) return;\n\t  if (!this.context.console || !this.context.console.log) return;\n\t  var args = Array.prototype.slice.call(arguments);\n\t  this.context.console.log.apply(this.context.console, args);\n\t};\n\t\n\tTerminal.prototype.error = function() {\n\t  if (!this.debug) return;\n\t  if (!this.context.console || !this.context.console.error) return;\n\t  var args = Array.prototype.slice.call(arguments);\n\t  this.context.console.error.apply(this.context.console, args);\n\t};\n\t\n\tTerminal.prototype.resize = function(x, y) {\n\t  var line\n\t    , el\n\t    , i\n\t    , j\n\t    , ch;\n\t\n\t  if (x < 1) x = 1;\n\t  if (y < 1) y = 1;\n\t\n\t  // resize cols\n\t  j = this.cols;\n\t  if (j < x) {\n\t    ch = [this.defAttr, ' ']; // does xterm use the default attr?\n\t    i = this.lines.length;\n\t    while (i--) {\n\t      while (this.lines[i].length < x) {\n\t        this.lines[i].push(ch);\n\t      }\n\t    }\n\t  } else if (j > x) {\n\t    i = this.lines.length;\n\t    while (i--) {\n\t      while (this.lines[i].length > x) {\n\t        this.lines[i].pop();\n\t      }\n\t    }\n\t  }\n\t  this.setupStops(j);\n\t  this.cols = x;\n\t  this.columns = x;\n\t\n\t  // resize rows\n\t  j = this.rows;\n\t  if (j < y) {\n\t    el = this.element;\n\t    while (j++ < y) {\n\t      if (this.lines.length < y + this.ybase) {\n\t        this.lines.push(this.blankLine());\n\t      }\n\t      if (this.children.length < y) {\n\t        line = this.document.createElement('div');\n\t        el.appendChild(line);\n\t        this.children.push(line);\n\t      }\n\t    }\n\t  } else if (j > y) {\n\t    while (j-- > y) {\n\t      if (this.lines.length > y + this.ybase) {\n\t        this.lines.pop();\n\t      }\n\t      if (this.children.length > y) {\n\t        el = this.children.pop();\n\t        if (!el) continue;\n\t        el.parentNode.removeChild(el);\n\t      }\n\t    }\n\t  }\n\t  this.rows = y;\n\t\n\t  // make sure the cursor stays on screen\n\t  if (this.y >= y) this.y = y - 1;\n\t  if (this.x >= x) this.x = x - 1;\n\t\n\t  this.scrollTop = 0;\n\t  this.scrollBottom = y - 1;\n\t\n\t  this.refresh(0, this.rows - 1);\n\t\n\t  // it's a real nightmare trying\n\t  // to resize the original\n\t  // screen buffer. just set it\n\t  // to null for now.\n\t  this.normal = null;\n\t\n\t  // Act as though we are a node TTY stream:\n\t  this.emit('resize');\n\t};\n\t\n\tTerminal.prototype.updateRange = function(y) {\n\t  if (y < this.refreshStart) this.refreshStart = y;\n\t  if (y > this.refreshEnd) this.refreshEnd = y;\n\t  // if (y > this.refreshEnd) {\n\t  //   this.refreshEnd = y;\n\t  //   if (y > this.rows - 1) {\n\t  //     this.refreshEnd = this.rows - 1;\n\t  //   }\n\t  // }\n\t};\n\t\n\tTerminal.prototype.maxRange = function() {\n\t  this.refreshStart = 0;\n\t  this.refreshEnd = this.rows - 1;\n\t};\n\t\n\tTerminal.prototype.setupStops = function(i) {\n\t  if (i != null) {\n\t    if (!this.tabs[i]) {\n\t      i = this.prevStop(i);\n\t    }\n\t  } else {\n\t    this.tabs = {};\n\t    i = 0;\n\t  }\n\t\n\t  for (; i < this.cols; i += 8) {\n\t    this.tabs[i] = true;\n\t  }\n\t};\n\t\n\tTerminal.prototype.prevStop = function(x) {\n\t  if (x == null) x = this.x;\n\t  while (!this.tabs[--x] && x > 0);\n\t  return x >= this.cols\n\t    ? this.cols - 1\n\t    : x < 0 ? 0 : x;\n\t};\n\t\n\tTerminal.prototype.nextStop = function(x) {\n\t  if (x == null) x = this.x;\n\t  while (!this.tabs[++x] && x < this.cols);\n\t  return x >= this.cols\n\t    ? this.cols - 1\n\t    : x < 0 ? 0 : x;\n\t};\n\t\n\t// back_color_erase feature for xterm.\n\tTerminal.prototype.eraseAttr = function() {\n\t  // if (this.is('screen')) return this.defAttr;\n\t  return (this.defAttr & ~0x1ff) | (this.curAttr & 0x1ff);\n\t};\n\t\n\tTerminal.prototype.eraseRight = function(x, y) {\n\t  var line = this.lines[this.ybase + y]\n\t    , ch = [this.eraseAttr(), ' ']; // xterm\n\t\n\t\n\t  for (; x < this.cols; x++) {\n\t    line[x] = ch;\n\t  }\n\t\n\t  this.updateRange(y);\n\t};\n\t\n\tTerminal.prototype.eraseLeft = function(x, y) {\n\t  var line = this.lines[this.ybase + y]\n\t    , ch = [this.eraseAttr(), ' ']; // xterm\n\t\n\t  x++;\n\t  while (x--) line[x] = ch;\n\t\n\t  this.updateRange(y);\n\t};\n\t\n\tTerminal.prototype.eraseLine = function(y) {\n\t  this.eraseRight(0, y);\n\t};\n\t\n\tTerminal.prototype.blankLine = function(cur) {\n\t  var attr = cur\n\t    ? this.eraseAttr()\n\t    : this.defAttr;\n\t\n\t  var ch = [attr, ' ']\n\t    , line = []\n\t    , i = 0;\n\t\n\t  for (; i < this.cols; i++) {\n\t    line[i] = ch;\n\t  }\n\t\n\t  return line;\n\t};\n\t\n\tTerminal.prototype.ch = function(cur) {\n\t  return cur\n\t    ? [this.eraseAttr(), ' ']\n\t    : [this.defAttr, ' '];\n\t};\n\t\n\tTerminal.prototype.is = function(term) {\n\t  var name = this.termName;\n\t  return (name + '').indexOf(term) === 0;\n\t};\n\t\n\tTerminal.prototype.handler = function(data) {\n\t  this.emit('data', data);\n\t};\n\t\n\tTerminal.prototype.handleTitle = function(title) {\n\t  this.emit('title', title);\n\t};\n\t\n\t/**\n\t * ESC\n\t */\n\t\n\t// ESC D Index (IND is 0x84).\n\tTerminal.prototype.index = function() {\n\t  this.y++;\n\t  if (this.y > this.scrollBottom) {\n\t    this.y--;\n\t    this.scroll();\n\t  }\n\t  this.state = normal;\n\t};\n\t\n\t// ESC M Reverse Index (RI is 0x8d).\n\tTerminal.prototype.reverseIndex = function() {\n\t  var j;\n\t  this.y--;\n\t  if (this.y < this.scrollTop) {\n\t    this.y++;\n\t    // possibly move the code below to term.reverseScroll();\n\t    // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n\t    // blankLine(true) is xterm/linux behavior\n\t    this.lines.splice(this.y + this.ybase, 0, this.blankLine(true));\n\t    j = this.rows - 1 - this.scrollBottom;\n\t    this.lines.splice(this.rows - 1 + this.ybase - j + 1, 1);\n\t    // this.maxRange();\n\t    this.updateRange(this.scrollTop);\n\t    this.updateRange(this.scrollBottom);\n\t  }\n\t  this.state = normal;\n\t};\n\t\n\t// ESC c Full Reset (RIS).\n\tTerminal.prototype.reset = function() {\n\t  this.options.rows = this.rows;\n\t  this.options.cols = this.cols;\n\t  Terminal.call(this, this.options);\n\t  this.refresh(0, this.rows - 1);\n\t};\n\t\n\t// ESC H Tab Set (HTS is 0x88).\n\tTerminal.prototype.tabSet = function() {\n\t  this.tabs[this.x] = true;\n\t  this.state = normal;\n\t};\n\t\n\t/**\n\t * CSI\n\t */\n\t\n\t// CSI Ps A\n\t// Cursor Up Ps Times (default = 1) (CUU).\n\tTerminal.prototype.cursorUp = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.y -= param;\n\t  if (this.y < 0) this.y = 0;\n\t};\n\t\n\t// CSI Ps B\n\t// Cursor Down Ps Times (default = 1) (CUD).\n\tTerminal.prototype.cursorDown = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.y += param;\n\t  if (this.y >= this.rows) {\n\t    this.y = this.rows - 1;\n\t  }\n\t};\n\t\n\t// CSI Ps C\n\t// Cursor Forward Ps Times (default = 1) (CUF).\n\tTerminal.prototype.cursorForward = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.x += param;\n\t  if (this.x >= this.cols) {\n\t    this.x = this.cols - 1;\n\t  }\n\t};\n\t\n\t// CSI Ps D\n\t// Cursor Backward Ps Times (default = 1) (CUB).\n\tTerminal.prototype.cursorBackward = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.x -= param;\n\t  if (this.x < 0) this.x = 0;\n\t};\n\t\n\t// CSI Ps ; Ps H\n\t// Cursor Position [row;column] (default = [1,1]) (CUP).\n\tTerminal.prototype.cursorPos = function(params) {\n\t  var row, col;\n\t\n\t  row = params[0] - 1;\n\t\n\t  if (params.length >= 2) {\n\t    col = params[1] - 1;\n\t  } else {\n\t    col = 0;\n\t  }\n\t\n\t  if (row < 0) {\n\t    row = 0;\n\t  } else if (row >= this.rows) {\n\t    row = this.rows - 1;\n\t  }\n\t\n\t  if (col < 0) {\n\t    col = 0;\n\t  } else if (col >= this.cols) {\n\t    col = this.cols - 1;\n\t  }\n\t\n\t  this.x = col;\n\t  this.y = row;\n\t};\n\t\n\t// CSI Ps J  Erase in Display (ED).\n\t//     Ps = 0  -> Erase Below (default).\n\t//     Ps = 1  -> Erase Above.\n\t//     Ps = 2  -> Erase All.\n\t//     Ps = 3  -> Erase Saved Lines (xterm).\n\t// CSI ? Ps J\n\t//   Erase in Display (DECSED).\n\t//     Ps = 0  -> Selective Erase Below (default).\n\t//     Ps = 1  -> Selective Erase Above.\n\t//     Ps = 2  -> Selective Erase All.\n\tTerminal.prototype.eraseInDisplay = function(params) {\n\t  var j;\n\t  switch (params[0]) {\n\t    case 0:\n\t      this.eraseRight(this.x, this.y);\n\t      j = this.y + 1;\n\t      for (; j < this.rows; j++) {\n\t        this.eraseLine(j);\n\t      }\n\t      break;\n\t    case 1:\n\t      this.eraseLeft(this.x, this.y);\n\t      j = this.y;\n\t      while (j--) {\n\t        this.eraseLine(j);\n\t      }\n\t      break;\n\t    case 2:\n\t      j = this.rows;\n\t      while (j--) this.eraseLine(j);\n\t      break;\n\t    case 3:\n\t      ; // no saved lines\n\t      break;\n\t  }\n\t};\n\t\n\t// CSI Ps K  Erase in Line (EL).\n\t//     Ps = 0  -> Erase to Right (default).\n\t//     Ps = 1  -> Erase to Left.\n\t//     Ps = 2  -> Erase All.\n\t// CSI ? Ps K\n\t//   Erase in Line (DECSEL).\n\t//     Ps = 0  -> Selective Erase to Right (default).\n\t//     Ps = 1  -> Selective Erase to Left.\n\t//     Ps = 2  -> Selective Erase All.\n\tTerminal.prototype.eraseInLine = function(params) {\n\t  switch (params[0]) {\n\t    case 0:\n\t      this.eraseRight(this.x, this.y);\n\t      break;\n\t    case 1:\n\t      this.eraseLeft(this.x, this.y);\n\t      break;\n\t    case 2:\n\t      this.eraseLine(this.y);\n\t      break;\n\t  }\n\t};\n\t\n\t// CSI Pm m  Character Attributes (SGR).\n\t//     Ps = 0  -> Normal (default).\n\t//     Ps = 1  -> Bold.\n\t//     Ps = 4  -> Underlined.\n\t//     Ps = 5  -> Blink (appears as Bold).\n\t//     Ps = 7  -> Inverse.\n\t//     Ps = 8  -> Invisible, i.e., hidden (VT300).\n\t//     Ps = 2 2  -> Normal (neither bold nor faint).\n\t//     Ps = 2 4  -> Not underlined.\n\t//     Ps = 2 5  -> Steady (not blinking).\n\t//     Ps = 2 7  -> Positive (not inverse).\n\t//     Ps = 2 8  -> Visible, i.e., not hidden (VT300).\n\t//     Ps = 3 0  -> Set foreground color to Black.\n\t//     Ps = 3 1  -> Set foreground color to Red.\n\t//     Ps = 3 2  -> Set foreground color to Green.\n\t//     Ps = 3 3  -> Set foreground color to Yellow.\n\t//     Ps = 3 4  -> Set foreground color to Blue.\n\t//     Ps = 3 5  -> Set foreground color to Magenta.\n\t//     Ps = 3 6  -> Set foreground color to Cyan.\n\t//     Ps = 3 7  -> Set foreground color to White.\n\t//     Ps = 3 9  -> Set foreground color to default (original).\n\t//     Ps = 4 0  -> Set background color to Black.\n\t//     Ps = 4 1  -> Set background color to Red.\n\t//     Ps = 4 2  -> Set background color to Green.\n\t//     Ps = 4 3  -> Set background color to Yellow.\n\t//     Ps = 4 4  -> Set background color to Blue.\n\t//     Ps = 4 5  -> Set background color to Magenta.\n\t//     Ps = 4 6  -> Set background color to Cyan.\n\t//     Ps = 4 7  -> Set background color to White.\n\t//     Ps = 4 9  -> Set background color to default (original).\n\t\n\t//   If 16-color support is compiled, the following apply.  Assume\n\t//   that xterm's resources are set so that the ISO color codes are\n\t//   the first 8 of a set of 16.  Then the aixterm colors are the\n\t//   bright versions of the ISO colors:\n\t//     Ps = 9 0  -> Set foreground color to Black.\n\t//     Ps = 9 1  -> Set foreground color to Red.\n\t//     Ps = 9 2  -> Set foreground color to Green.\n\t//     Ps = 9 3  -> Set foreground color to Yellow.\n\t//     Ps = 9 4  -> Set foreground color to Blue.\n\t//     Ps = 9 5  -> Set foreground color to Magenta.\n\t//     Ps = 9 6  -> Set foreground color to Cyan.\n\t//     Ps = 9 7  -> Set foreground color to White.\n\t//     Ps = 1 0 0  -> Set background color to Black.\n\t//     Ps = 1 0 1  -> Set background color to Red.\n\t//     Ps = 1 0 2  -> Set background color to Green.\n\t//     Ps = 1 0 3  -> Set background color to Yellow.\n\t//     Ps = 1 0 4  -> Set background color to Blue.\n\t//     Ps = 1 0 5  -> Set background color to Magenta.\n\t//     Ps = 1 0 6  -> Set background color to Cyan.\n\t//     Ps = 1 0 7  -> Set background color to White.\n\t\n\t//   If xterm is compiled with the 16-color support disabled, it\n\t//   supports the following, from rxvt:\n\t//     Ps = 1 0 0  -> Set foreground and background color to\n\t//     default.\n\t\n\t//   If 88- or 256-color support is compiled, the following apply.\n\t//     Ps = 3 8  ; 5  ; Ps -> Set foreground color to the second\n\t//     Ps.\n\t//     Ps = 4 8  ; 5  ; Ps -> Set background color to the second\n\t//     Ps.\n\tTerminal.prototype.charAttributes = function(params) {\n\t  // Optimize a single SGR0.\n\t  if (params.length === 1 && params[0] === 0) {\n\t    this.curAttr = this.defAttr;\n\t    return;\n\t  }\n\t\n\t  var l = params.length\n\t    , i = 0\n\t    , flags = this.curAttr >> 18\n\t    , fg = (this.curAttr >> 9) & 0x1ff\n\t    , bg = this.curAttr & 0x1ff\n\t    , p;\n\t\n\t  for (; i < l; i++) {\n\t    p = params[i];\n\t    if (p >= 30 && p <= 37) {\n\t      // fg color 8\n\t      fg = p - 30;\n\t    } else if (p >= 40 && p <= 47) {\n\t      // bg color 8\n\t      bg = p - 40;\n\t    } else if (p >= 90 && p <= 97) {\n\t      // fg color 16\n\t      p += 8;\n\t      fg = p - 90;\n\t    } else if (p >= 100 && p <= 107) {\n\t      // bg color 16\n\t      p += 8;\n\t      bg = p - 100;\n\t    } else if (p === 0) {\n\t      // default\n\t      flags = this.defAttr >> 18;\n\t      fg = (this.defAttr >> 9) & 0x1ff;\n\t      bg = this.defAttr & 0x1ff;\n\t      // flags = 0;\n\t      // fg = 0x1ff;\n\t      // bg = 0x1ff;\n\t    } else if (p === 1) {\n\t      // bold text\n\t      flags |= 1;\n\t    } else if (p === 4) {\n\t      // underlined text\n\t      flags |= 2;\n\t    } else if (p === 5) {\n\t      // blink\n\t      flags |= 4;\n\t    } else if (p === 7) {\n\t      // inverse and positive\n\t      // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n\t      flags |= 8;\n\t    } else if (p === 8) {\n\t      // invisible\n\t      flags |= 16;\n\t    } else if (p === 22) {\n\t      // not bold\n\t      flags &= ~1;\n\t    } else if (p === 24) {\n\t      // not underlined\n\t      flags &= ~2;\n\t    } else if (p === 25) {\n\t      // not blink\n\t      flags &= ~4;\n\t    } else if (p === 27) {\n\t      // not inverse\n\t      flags &= ~8;\n\t    } else if (p === 28) {\n\t      // not invisible\n\t      flags &= ~16;\n\t    } else if (p === 39) {\n\t      // reset fg\n\t      fg = (this.defAttr >> 9) & 0x1ff;\n\t    } else if (p === 49) {\n\t      // reset bg\n\t      bg = this.defAttr & 0x1ff;\n\t    } else if (p === 38) {\n\t      // fg color 256\n\t      if (params[i + 1] === 2) {\n\t        i += 2;\n\t        fg = matchColor(\n\t          params[i] & 0xff,\n\t          params[i + 1] & 0xff,\n\t          params[i + 2] & 0xff);\n\t        if (fg === -1) fg = 0x1ff;\n\t        i += 2;\n\t      } else if (params[i + 1] === 5) {\n\t        i += 2;\n\t        p = params[i] & 0xff;\n\t        fg = p;\n\t      }\n\t    } else if (p === 48) {\n\t      // bg color 256\n\t      if (params[i + 1] === 2) {\n\t        i += 2;\n\t        bg = matchColor(\n\t          params[i] & 0xff,\n\t          params[i + 1] & 0xff,\n\t          params[i + 2] & 0xff);\n\t        if (bg === -1) bg = 0x1ff;\n\t        i += 2;\n\t      } else if (params[i + 1] === 5) {\n\t        i += 2;\n\t        p = params[i] & 0xff;\n\t        bg = p;\n\t      }\n\t    } else if (p === 100) {\n\t      // reset fg/bg\n\t      fg = (this.defAttr >> 9) & 0x1ff;\n\t      bg = this.defAttr & 0x1ff;\n\t    } else {\n\t      this.error('Unknown SGR attribute: %d.', p);\n\t    }\n\t  }\n\t\n\t  this.curAttr = (flags << 18) | (fg << 9) | bg;\n\t};\n\t\n\t// CSI Ps n  Device Status Report (DSR).\n\t//     Ps = 5  -> Status Report.  Result (``OK'') is\n\t//   CSI 0 n\n\t//     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n\t//   Result is\n\t//   CSI r ; c R\n\t// CSI ? Ps n\n\t//   Device Status Report (DSR, DEC-specific).\n\t//     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n\t//     ? r ; c R (assumes page is zero).\n\t//     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n\t//     or CSI ? 1 1  n  (not ready).\n\t//     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n\t//     or CSI ? 2 1  n  (locked).\n\t//     Ps = 2 6  -> Report Keyboard status as\n\t//   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n\t//   The last two parameters apply to VT400 & up, and denote key-\n\t//   board ready and LK01 respectively.\n\t//     Ps = 5 3  -> Report Locator status as\n\t//   CSI ? 5 3  n  Locator available, if compiled-in, or\n\t//   CSI ? 5 0  n  No Locator, if not.\n\tTerminal.prototype.deviceStatus = function(params) {\n\t  if (!this.prefix) {\n\t    switch (params[0]) {\n\t      case 5:\n\t        // status report\n\t        this.send('\\x1b[0n');\n\t        break;\n\t      case 6:\n\t        // cursor position\n\t        this.send('\\x1b['\n\t          + (this.y + 1)\n\t          + ';'\n\t          + (this.x + 1)\n\t          + 'R');\n\t        break;\n\t    }\n\t  } else if (this.prefix === '?') {\n\t    // modern xterm doesnt seem to\n\t    // respond to any of these except ?6, 6, and 5\n\t    switch (params[0]) {\n\t      case 6:\n\t        // cursor position\n\t        this.send('\\x1b[?'\n\t          + (this.y + 1)\n\t          + ';'\n\t          + (this.x + 1)\n\t          + 'R');\n\t        break;\n\t      case 15:\n\t        // no printer\n\t        // this.send('\\x1b[?11n');\n\t        break;\n\t      case 25:\n\t        // dont support user defined keys\n\t        // this.send('\\x1b[?21n');\n\t        break;\n\t      case 26:\n\t        // north american keyboard\n\t        // this.send('\\x1b[?27;1;0;0n');\n\t        break;\n\t      case 53:\n\t        // no dec locator/mouse\n\t        // this.send('\\x1b[?50n');\n\t        break;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Additions\n\t */\n\t\n\t// CSI Ps @\n\t// Insert Ps (Blank) Character(s) (default = 1) (ICH).\n\tTerminal.prototype.insertChars = function(params) {\n\t  var param, row, j, ch;\n\t\n\t  param = params[0];\n\t  if (param < 1) param = 1;\n\t\n\t  row = this.y + this.ybase;\n\t  j = this.x;\n\t  ch = [this.eraseAttr(), ' ']; // xterm\n\t\n\t  while (param-- && j < this.cols) {\n\t    this.lines[row].splice(j++, 0, ch);\n\t    this.lines[row].pop();\n\t  }\n\t};\n\t\n\t// CSI Ps E\n\t// Cursor Next Line Ps Times (default = 1) (CNL).\n\t// same as CSI Ps B ?\n\tTerminal.prototype.cursorNextLine = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.y += param;\n\t  if (this.y >= this.rows) {\n\t    this.y = this.rows - 1;\n\t  }\n\t  this.x = 0;\n\t};\n\t\n\t// CSI Ps F\n\t// Cursor Preceding Line Ps Times (default = 1) (CNL).\n\t// reuse CSI Ps A ?\n\tTerminal.prototype.cursorPrecedingLine = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.y -= param;\n\t  if (this.y < 0) this.y = 0;\n\t  this.x = 0;\n\t};\n\t\n\t// CSI Ps G\n\t// Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n\tTerminal.prototype.cursorCharAbsolute = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.x = param - 1;\n\t};\n\t\n\t// CSI Ps L\n\t// Insert Ps Line(s) (default = 1) (IL).\n\tTerminal.prototype.insertLines = function(params) {\n\t  var param, row, j;\n\t\n\t  param = params[0];\n\t  if (param < 1) param = 1;\n\t  row = this.y + this.ybase;\n\t\n\t  j = this.rows - 1 - this.scrollBottom;\n\t  j = this.rows - 1 + this.ybase - j + 1;\n\t\n\t  while (param--) {\n\t    // test: echo -e '\\e[44m\\e[1L\\e[0m'\n\t    // blankLine(true) - xterm/linux behavior\n\t    this.lines.splice(row, 0, this.blankLine(true));\n\t    this.lines.splice(j, 1);\n\t  }\n\t\n\t  // this.maxRange();\n\t  this.updateRange(this.y);\n\t  this.updateRange(this.scrollBottom);\n\t};\n\t\n\t// CSI Ps M\n\t// Delete Ps Line(s) (default = 1) (DL).\n\tTerminal.prototype.deleteLines = function(params) {\n\t  var param, row, j;\n\t\n\t  param = params[0];\n\t  if (param < 1) param = 1;\n\t  row = this.y + this.ybase;\n\t\n\t  j = this.rows - 1 - this.scrollBottom;\n\t  j = this.rows - 1 + this.ybase - j;\n\t\n\t  while (param--) {\n\t    // test: echo -e '\\e[44m\\e[1M\\e[0m'\n\t    // blankLine(true) - xterm/linux behavior\n\t    this.lines.splice(j + 1, 0, this.blankLine(true));\n\t    this.lines.splice(row, 1);\n\t  }\n\t\n\t  // this.maxRange();\n\t  this.updateRange(this.y);\n\t  this.updateRange(this.scrollBottom);\n\t};\n\t\n\t// CSI Ps P\n\t// Delete Ps Character(s) (default = 1) (DCH).\n\tTerminal.prototype.deleteChars = function(params) {\n\t  var param, row, ch;\n\t\n\t  param = params[0];\n\t  if (param < 1) param = 1;\n\t\n\t  row = this.y + this.ybase;\n\t  ch = [this.eraseAttr(), ' ']; // xterm\n\t\n\t  while (param--) {\n\t    this.lines[row].splice(this.x, 1);\n\t    this.lines[row].push(ch);\n\t  }\n\t};\n\t\n\t// CSI Ps X\n\t// Erase Ps Character(s) (default = 1) (ECH).\n\tTerminal.prototype.eraseChars = function(params) {\n\t  var param, row, j, ch;\n\t\n\t  param = params[0];\n\t  if (param < 1) param = 1;\n\t\n\t  row = this.y + this.ybase;\n\t  j = this.x;\n\t  ch = [this.eraseAttr(), ' ']; // xterm\n\t\n\t  while (param-- && j < this.cols) {\n\t    this.lines[row][j++] = ch;\n\t  }\n\t};\n\t\n\t// CSI Pm `  Character Position Absolute\n\t//   [column] (default = [row,1]) (HPA).\n\tTerminal.prototype.charPosAbsolute = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.x = param - 1;\n\t  if (this.x >= this.cols) {\n\t    this.x = this.cols - 1;\n\t  }\n\t};\n\t\n\t// 141 61 a * HPR -\n\t// Horizontal Position Relative\n\t// reuse CSI Ps C ?\n\tTerminal.prototype.HPositionRelative = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.x += param;\n\t  if (this.x >= this.cols) {\n\t    this.x = this.cols - 1;\n\t  }\n\t};\n\t\n\t// CSI Ps c  Send Device Attributes (Primary DA).\n\t//     Ps = 0  or omitted -> request attributes from terminal.  The\n\t//     response depends on the decTerminalID resource setting.\n\t//     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n\t//     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n\t//     -> CSI ? 6 c  (``VT102'')\n\t//     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n\t//   The VT100-style response parameters do not mean anything by\n\t//   themselves.  VT220 parameters do, telling the host what fea-\n\t//   tures the terminal supports:\n\t//     Ps = 1  -> 132-columns.\n\t//     Ps = 2  -> Printer.\n\t//     Ps = 6  -> Selective erase.\n\t//     Ps = 8  -> User-defined keys.\n\t//     Ps = 9  -> National replacement character sets.\n\t//     Ps = 1 5  -> Technical characters.\n\t//     Ps = 2 2  -> ANSI color, e.g., VT525.\n\t//     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n\t// CSI > Ps c\n\t//   Send Device Attributes (Secondary DA).\n\t//     Ps = 0  or omitted -> request the terminal's identification\n\t//     code.  The response depends on the decTerminalID resource set-\n\t//     ting.  It should apply only to VT220 and up, but xterm extends\n\t//     this to VT100.\n\t//     -> CSI  > Pp ; Pv ; Pc c\n\t//   where Pp denotes the terminal type\n\t//     Pp = 0  -> ``VT100''.\n\t//     Pp = 1  -> ``VT220''.\n\t//   and Pv is the firmware version (for xterm, this was originally\n\t//   the XFree86 patch number, starting with 95).  In a DEC termi-\n\t//   nal, Pc indicates the ROM cartridge registration number and is\n\t//   always zero.\n\t// More information:\n\t//   xterm/charproc.c - line 2012, for more information.\n\t//   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\n\tTerminal.prototype.sendDeviceAttributes = function(params) {\n\t  if (params[0] > 0) return;\n\t\n\t  if (!this.prefix) {\n\t    if (this.is('xterm')\n\t        || this.is('rxvt-unicode')\n\t        || this.is('screen')) {\n\t      this.send('\\x1b[?1;2c');\n\t    } else if (this.is('linux')) {\n\t      this.send('\\x1b[?6c');\n\t    }\n\t  } else if (this.prefix === '>') {\n\t    // xterm and urxvt\n\t    // seem to spit this\n\t    // out around ~370 times (?).\n\t    if (this.is('xterm')) {\n\t      this.send('\\x1b[>0;276;0c');\n\t    } else if (this.is('rxvt-unicode')) {\n\t      this.send('\\x1b[>85;95;0c');\n\t    } else if (this.is('linux')) {\n\t      // not supported by linux console.\n\t      // linux console echoes parameters.\n\t      this.send(params[0] + 'c');\n\t    } else if (this.is('screen')) {\n\t      this.send('\\x1b[>83;40003;0c');\n\t    }\n\t  }\n\t};\n\t\n\t// CSI Pm d\n\t// Line Position Absolute  [row] (default = [1,column]) (VPA).\n\tTerminal.prototype.linePosAbsolute = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.y = param - 1;\n\t  if (this.y >= this.rows) {\n\t    this.y = this.rows - 1;\n\t  }\n\t};\n\t\n\t// 145 65 e * VPR - Vertical Position Relative\n\t// reuse CSI Ps B ?\n\tTerminal.prototype.VPositionRelative = function(params) {\n\t  var param = params[0];\n\t  if (param < 1) param = 1;\n\t  this.y += param;\n\t  if (this.y >= this.rows) {\n\t    this.y = this.rows - 1;\n\t  }\n\t};\n\t\n\t// CSI Ps ; Ps f\n\t//   Horizontal and Vertical Position [row;column] (default =\n\t//   [1,1]) (HVP).\n\tTerminal.prototype.HVPosition = function(params) {\n\t  if (params[0] < 1) params[0] = 1;\n\t  if (params[1] < 1) params[1] = 1;\n\t\n\t  this.y = params[0] - 1;\n\t  if (this.y >= this.rows) {\n\t    this.y = this.rows - 1;\n\t  }\n\t\n\t  this.x = params[1] - 1;\n\t  if (this.x >= this.cols) {\n\t    this.x = this.cols - 1;\n\t  }\n\t};\n\t\n\t// CSI Pm h  Set Mode (SM).\n\t//     Ps = 2  -> Keyboard Action Mode (AM).\n\t//     Ps = 4  -> Insert Mode (IRM).\n\t//     Ps = 1 2  -> Send/receive (SRM).\n\t//     Ps = 2 0  -> Automatic Newline (LNM).\n\t// CSI ? Pm h\n\t//   DEC Private Mode Set (DECSET).\n\t//     Ps = 1  -> Application Cursor Keys (DECCKM).\n\t//     Ps = 2  -> Designate USASCII for character sets G0-G3\n\t//     (DECANM), and set VT100 mode.\n\t//     Ps = 3  -> 132 Column Mode (DECCOLM).\n\t//     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n\t//     Ps = 5  -> Reverse Video (DECSCNM).\n\t//     Ps = 6  -> Origin Mode (DECOM).\n\t//     Ps = 7  -> Wraparound Mode (DECAWM).\n\t//     Ps = 8  -> Auto-repeat Keys (DECARM).\n\t//     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n\t//     tion Mouse Tracking.\n\t//     Ps = 1 0  -> Show toolbar (rxvt).\n\t//     Ps = 1 2  -> Start Blinking Cursor (att610).\n\t//     Ps = 1 8  -> Print form feed (DECPFF).\n\t//     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n\t//     Ps = 2 5  -> Show Cursor (DECTCEM).\n\t//     Ps = 3 0  -> Show scrollbar (rxvt).\n\t//     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n\t//     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n\t//     Ps = 4 0  -> Allow 80 -> 132 Mode.\n\t//     Ps = 4 1  -> more(1) fix (see curses resource).\n\t//     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n\t//     RCM).\n\t//     Ps = 4 4  -> Turn On Margin Bell.\n\t//     Ps = 4 5  -> Reverse-wraparound Mode.\n\t//     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n\t//     compile-time option.\n\t//     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n\t//     abled by the titeInhibit resource).\n\t//     Ps = 6 6  -> Application keypad (DECNKM).\n\t//     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n\t//     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n\t//     release.  See the section Mouse Tracking.\n\t//     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n\t//     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n\t//     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n\t//     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n\t//     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n\t//     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n\t//     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n\t//     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n\t//     (enables the eightBitInput resource).\n\t//     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n\t//     Lock keys.  (This enables the numLock resource).\n\t//     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n\t//     enables the metaSendsEscape resource).\n\t//     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n\t//     key.\n\t//     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n\t//     enables the altSendsEscape resource).\n\t//     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n\t//     (This enables the keepSelection resource).\n\t//     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n\t//     the selectToClipboard resource).\n\t//     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n\t//     Control-G is received.  (This enables the bellIsUrgent\n\t//     resource).\n\t//     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n\t//     is received.  (enables the popOnBell resource).\n\t//     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n\t//     disabled by the titeInhibit resource).\n\t//     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n\t//     abled by the titeInhibit resource).\n\t//     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n\t//     Screen Buffer, clearing it first.  (This may be disabled by\n\t//     the titeInhibit resource).  This combines the effects of the 1\n\t//     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n\t//     applications rather than the 4 7  mode.\n\t//     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n\t//     Ps = 1 0 5 1  -> Set Sun function-key mode.\n\t//     Ps = 1 0 5 2  -> Set HP function-key mode.\n\t//     Ps = 1 0 5 3  -> Set SCO function-key mode.\n\t//     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n\t//     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n\t//     Ps = 2 0 0 4  -> Set bracketed paste mode.\n\t// Modes:\n\t//   http://vt100.net/docs/vt220-rm/chapter4.html\n\tTerminal.prototype.setMode = function(params) {\n\t  if (typeof params === 'object') {\n\t    var l = params.length\n\t      , i = 0;\n\t\n\t    for (; i < l; i++) {\n\t      this.setMode(params[i]);\n\t    }\n\t\n\t    return;\n\t  }\n\t\n\t  if (!this.prefix) {\n\t    switch (params) {\n\t      case 4:\n\t        this.insertMode = true;\n\t        break;\n\t      case 20:\n\t        //this.convertEol = true;\n\t        break;\n\t    }\n\t  } else if (this.prefix === '?') {\n\t    switch (params) {\n\t      case 1:\n\t        this.applicationCursor = true;\n\t        break;\n\t      case 2:\n\t        this.setgCharset(0, Terminal.charsets.US);\n\t        this.setgCharset(1, Terminal.charsets.US);\n\t        this.setgCharset(2, Terminal.charsets.US);\n\t        this.setgCharset(3, Terminal.charsets.US);\n\t        // set VT100 mode here\n\t        break;\n\t      case 3: // 132 col mode\n\t        this.savedCols = this.cols;\n\t        this.resize(132, this.rows);\n\t        break;\n\t      case 6:\n\t        this.originMode = true;\n\t        break;\n\t      case 7:\n\t        this.wraparoundMode = true;\n\t        break;\n\t      case 12:\n\t        // this.cursorBlink = true;\n\t        break;\n\t      case 66:\n\t        this.log('Serial port requested application keypad.');\n\t        this.applicationKeypad = true;\n\t        break;\n\t      case 9: // X10 Mouse\n\t        // no release, no motion, no wheel, no modifiers.\n\t      case 1000: // vt200 mouse\n\t        // no motion.\n\t        // no modifiers, except control on the wheel.\n\t      case 1002: // button event mouse\n\t      case 1003: // any event mouse\n\t        // any event - sends motion events,\n\t        // even if there is no button held down.\n\t        this.x10Mouse = params === 9;\n\t        this.vt200Mouse = params === 1000;\n\t        this.normalMouse = params > 1000;\n\t        this.mouseEvents = true;\n\t        this.element.style.cursor = 'default';\n\t        this.log('Binding to mouse events.');\n\t        break;\n\t      case 1004: // send focusin/focusout events\n\t        // focusin: ^[[I\n\t        // focusout: ^[[O\n\t        this.sendFocus = true;\n\t        break;\n\t      case 1005: // utf8 ext mode mouse\n\t        this.utfMouse = true;\n\t        // for wide terminals\n\t        // simply encodes large values as utf8 characters\n\t        break;\n\t      case 1006: // sgr ext mode mouse\n\t        this.sgrMouse = true;\n\t        // for wide terminals\n\t        // does not add 32 to fields\n\t        // press: ^[[<b;x;yM\n\t        // release: ^[[<b;x;ym\n\t        break;\n\t      case 1015: // urxvt ext mode mouse\n\t        this.urxvtMouse = true;\n\t        // for wide terminals\n\t        // numbers for fields\n\t        // press: ^[[b;x;yM\n\t        // motion: ^[[b;x;yT\n\t        break;\n\t      case 25: // show cursor\n\t        this.cursorHidden = false;\n\t        break;\n\t      case 1049: // alt screen buffer cursor\n\t        //this.saveCursor();\n\t        ; // FALL-THROUGH\n\t      case 47: // alt screen buffer\n\t      case 1047: // alt screen buffer\n\t        if (!this.normal) {\n\t          var normal = {\n\t            lines: this.lines,\n\t            ybase: this.ybase,\n\t            ydisp: this.ydisp,\n\t            x: this.x,\n\t            y: this.y,\n\t            scrollTop: this.scrollTop,\n\t            scrollBottom: this.scrollBottom,\n\t            tabs: this.tabs\n\t            // XXX save charset(s) here?\n\t            // charset: this.charset,\n\t            // glevel: this.glevel,\n\t            // charsets: this.charsets\n\t          };\n\t          this.reset();\n\t          this.normal = normal;\n\t          this.showCursor();\n\t        }\n\t        break;\n\t    }\n\t  }\n\t};\n\t\n\t// CSI Pm l  Reset Mode (RM).\n\t//     Ps = 2  -> Keyboard Action Mode (AM).\n\t//     Ps = 4  -> Replace Mode (IRM).\n\t//     Ps = 1 2  -> Send/receive (SRM).\n\t//     Ps = 2 0  -> Normal Linefeed (LNM).\n\t// CSI ? Pm l\n\t//   DEC Private Mode Reset (DECRST).\n\t//     Ps = 1  -> Normal Cursor Keys (DECCKM).\n\t//     Ps = 2  -> Designate VT52 mode (DECANM).\n\t//     Ps = 3  -> 80 Column Mode (DECCOLM).\n\t//     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n\t//     Ps = 5  -> Normal Video (DECSCNM).\n\t//     Ps = 6  -> Normal Cursor Mode (DECOM).\n\t//     Ps = 7  -> No Wraparound Mode (DECAWM).\n\t//     Ps = 8  -> No Auto-repeat Keys (DECARM).\n\t//     Ps = 9  -> Don't send Mouse X & Y on button press.\n\t//     Ps = 1 0  -> Hide toolbar (rxvt).\n\t//     Ps = 1 2  -> Stop Blinking Cursor (att610).\n\t//     Ps = 1 8  -> Don't print form feed (DECPFF).\n\t//     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n\t//     Ps = 2 5  -> Hide Cursor (DECTCEM).\n\t//     Ps = 3 0  -> Don't show scrollbar (rxvt).\n\t//     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n\t//     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n\t//     Ps = 4 1  -> No more(1) fix (see curses resource).\n\t//     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n\t//     NRCM).\n\t//     Ps = 4 4  -> Turn Off Margin Bell.\n\t//     Ps = 4 5  -> No Reverse-wraparound Mode.\n\t//     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n\t//     compile-time option).\n\t//     Ps = 4 7  -> Use Normal Screen Buffer.\n\t//     Ps = 6 6  -> Numeric keypad (DECNKM).\n\t//     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n\t//     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n\t//     release.  See the section Mouse Tracking.\n\t//     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n\t//     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n\t//     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n\t//     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n\t//     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n\t//     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n\t//     (rxvt).\n\t//     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n\t//     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n\t//     the eightBitInput resource).\n\t//     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n\t//     Lock keys.  (This disables the numLock resource).\n\t//     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n\t//     (This disables the metaSendsEscape resource).\n\t//     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n\t//     Delete key.\n\t//     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n\t//     (This disables the altSendsEscape resource).\n\t//     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n\t//     (This disables the keepSelection resource).\n\t//     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n\t//     the selectToClipboard resource).\n\t//     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n\t//     Control-G is received.  (This disables the bellIsUrgent\n\t//     resource).\n\t//     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n\t//     G is received.  (This disables the popOnBell resource).\n\t//     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n\t//     first if in the Alternate Screen.  (This may be disabled by\n\t//     the titeInhibit resource).\n\t//     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n\t//     disabled by the titeInhibit resource).\n\t//     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n\t//     as in DECRC.  (This may be disabled by the titeInhibit\n\t//     resource).  This combines the effects of the 1 0 4 7  and 1 0\n\t//     4 8  modes.  Use this with terminfo-based applications rather\n\t//     than the 4 7  mode.\n\t//     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n\t//     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n\t//     Ps = 1 0 5 2  -> Reset HP function-key mode.\n\t//     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n\t//     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n\t//     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n\t//     Ps = 2 0 0 4  -> Reset bracketed paste mode.\n\tTerminal.prototype.resetMode = function(params) {\n\t  if (typeof params === 'object') {\n\t    var l = params.length\n\t      , i = 0;\n\t\n\t    for (; i < l; i++) {\n\t      this.resetMode(params[i]);\n\t    }\n\t\n\t    return;\n\t  }\n\t\n\t  if (!this.prefix) {\n\t    switch (params) {\n\t      case 4:\n\t        this.insertMode = false;\n\t        break;\n\t      case 20:\n\t        //this.convertEol = false;\n\t        break;\n\t    }\n\t  } else if (this.prefix === '?') {\n\t    switch (params) {\n\t      case 1:\n\t        this.applicationCursor = false;\n\t        break;\n\t      case 3:\n\t        if (this.cols === 132 && this.savedCols) {\n\t          this.resize(this.savedCols, this.rows);\n\t        }\n\t        delete this.savedCols;\n\t        break;\n\t      case 6:\n\t        this.originMode = false;\n\t        break;\n\t      case 7:\n\t        this.wraparoundMode = false;\n\t        break;\n\t      case 12:\n\t        // this.cursorBlink = false;\n\t        break;\n\t      case 66:\n\t        this.log('Switching back to normal keypad.');\n\t        this.applicationKeypad = false;\n\t        break;\n\t      case 9: // X10 Mouse\n\t      case 1000: // vt200 mouse\n\t      case 1002: // button event mouse\n\t      case 1003: // any event mouse\n\t        this.x10Mouse = false;\n\t        this.vt200Mouse = false;\n\t        this.normalMouse = false;\n\t        this.mouseEvents = false;\n\t        this.element.style.cursor = '';\n\t        break;\n\t      case 1004: // send focusin/focusout events\n\t        this.sendFocus = false;\n\t        break;\n\t      case 1005: // utf8 ext mode mouse\n\t        this.utfMouse = false;\n\t        break;\n\t      case 1006: // sgr ext mode mouse\n\t        this.sgrMouse = false;\n\t        break;\n\t      case 1015: // urxvt ext mode mouse\n\t        this.urxvtMouse = false;\n\t        break;\n\t      case 25: // hide cursor\n\t        this.cursorHidden = true;\n\t        break;\n\t      case 1049: // alt screen buffer cursor\n\t        ; // FALL-THROUGH\n\t      case 47: // normal screen buffer\n\t      case 1047: // normal screen buffer - clearing it first\n\t        if (this.normal) {\n\t          this.lines = this.normal.lines;\n\t          this.ybase = this.normal.ybase;\n\t          this.ydisp = this.normal.ydisp;\n\t          this.x = this.normal.x;\n\t          this.y = this.normal.y;\n\t          this.scrollTop = this.normal.scrollTop;\n\t          this.scrollBottom = this.normal.scrollBottom;\n\t          this.tabs = this.normal.tabs;\n\t          this.normal = null;\n\t          // if (params === 1049) {\n\t          //   this.x = this.savedX;\n\t          //   this.y = this.savedY;\n\t          // }\n\t          this.refresh(0, this.rows - 1);\n\t          this.showCursor();\n\t        }\n\t        break;\n\t    }\n\t  }\n\t};\n\t\n\t// CSI Ps ; Ps r\n\t//   Set Scrolling Region [top;bottom] (default = full size of win-\n\t//   dow) (DECSTBM).\n\t// CSI ? Pm r\n\tTerminal.prototype.setScrollRegion = function(params) {\n\t  if (this.prefix) return;\n\t  this.scrollTop = (params[0] || 1) - 1;\n\t  this.scrollBottom = (params[1] || this.rows) - 1;\n\t  this.x = 0;\n\t  this.y = 0;\n\t};\n\t\n\t// CSI s\n\t//   Save cursor (ANSI.SYS).\n\tTerminal.prototype.saveCursor = function(params) {\n\t  this.savedX = this.x;\n\t  this.savedY = this.y;\n\t};\n\t\n\t// CSI u\n\t//   Restore cursor (ANSI.SYS).\n\tTerminal.prototype.restoreCursor = function(params) {\n\t  this.x = this.savedX || 0;\n\t  this.y = this.savedY || 0;\n\t};\n\t\n\t/**\n\t * Lesser Used\n\t */\n\t\n\t// CSI Ps I\n\t//   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n\tTerminal.prototype.cursorForwardTab = function(params) {\n\t  var param = params[0] || 1;\n\t  while (param--) {\n\t    this.x = this.nextStop();\n\t  }\n\t};\n\t\n\t// CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n\tTerminal.prototype.scrollUp = function(params) {\n\t  var param = params[0] || 1;\n\t  while (param--) {\n\t    this.lines.splice(this.ybase + this.scrollTop, 1);\n\t    this.lines.splice(this.ybase + this.scrollBottom, 0, this.blankLine());\n\t  }\n\t  // this.maxRange();\n\t  this.updateRange(this.scrollTop);\n\t  this.updateRange(this.scrollBottom);\n\t};\n\t\n\t// CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n\tTerminal.prototype.scrollDown = function(params) {\n\t  var param = params[0] || 1;\n\t  while (param--) {\n\t    this.lines.splice(this.ybase + this.scrollBottom, 1);\n\t    this.lines.splice(this.ybase + this.scrollTop, 0, this.blankLine());\n\t  }\n\t  // this.maxRange();\n\t  this.updateRange(this.scrollTop);\n\t  this.updateRange(this.scrollBottom);\n\t};\n\t\n\t// CSI Ps ; Ps ; Ps ; Ps ; Ps T\n\t//   Initiate highlight mouse tracking.  Parameters are\n\t//   [func;startx;starty;firstrow;lastrow].  See the section Mouse\n\t//   Tracking.\n\tTerminal.prototype.initMouseTracking = function(params) {\n\t  // Relevant: DECSET 1001\n\t};\n\t\n\t// CSI > Ps; Ps T\n\t//   Reset one or more features of the title modes to the default\n\t//   value.  Normally, \"reset\" disables the feature.  It is possi-\n\t//   ble to disable the ability to reset features by compiling a\n\t//   different default for the title modes into xterm.\n\t//     Ps = 0  -> Do not set window/icon labels using hexadecimal.\n\t//     Ps = 1  -> Do not query window/icon labels using hexadeci-\n\t//     mal.\n\t//     Ps = 2  -> Do not set window/icon labels using UTF-8.\n\t//     Ps = 3  -> Do not query window/icon labels using UTF-8.\n\t//   (See discussion of \"Title Modes\").\n\tTerminal.prototype.resetTitleModes = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n\tTerminal.prototype.cursorBackwardTab = function(params) {\n\t  var param = params[0] || 1;\n\t  while (param--) {\n\t    this.x = this.prevStop();\n\t  }\n\t};\n\t\n\t// CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n\tTerminal.prototype.repeatPrecedingCharacter = function(params) {\n\t  var param = params[0] || 1\n\t    , line = this.lines[this.ybase + this.y]\n\t    , ch = line[this.x - 1] || [this.defAttr, ' '];\n\t\n\t  while (param--) line[this.x++] = ch;\n\t};\n\t\n\t// CSI Ps g  Tab Clear (TBC).\n\t//     Ps = 0  -> Clear Current Column (default).\n\t//     Ps = 3  -> Clear All.\n\t// Potentially:\n\t//   Ps = 2  -> Clear Stops on Line.\n\t//   http://vt100.net/annarbor/aaa-ug/section6.html\n\tTerminal.prototype.tabClear = function(params) {\n\t  var param = params[0];\n\t  if (param <= 0) {\n\t    delete this.tabs[this.x];\n\t  } else if (param === 3) {\n\t    this.tabs = {};\n\t  }\n\t};\n\t\n\t// CSI Pm i  Media Copy (MC).\n\t//     Ps = 0  -> Print screen (default).\n\t//     Ps = 4  -> Turn off printer controller mode.\n\t//     Ps = 5  -> Turn on printer controller mode.\n\t// CSI ? Pm i\n\t//   Media Copy (MC, DEC-specific).\n\t//     Ps = 1  -> Print line containing cursor.\n\t//     Ps = 4  -> Turn off autoprint mode.\n\t//     Ps = 5  -> Turn on autoprint mode.\n\t//     Ps = 1  0  -> Print composed display, ignores DECPEX.\n\t//     Ps = 1  1  -> Print all pages.\n\tTerminal.prototype.mediaCopy = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI > Ps; Ps m\n\t//   Set or reset resource-values used by xterm to decide whether\n\t//   to construct escape sequences holding information about the\n\t//   modifiers pressed with a given key.  The first parameter iden-\n\t//   tifies the resource to set/reset.  The second parameter is the\n\t//   value to assign to the resource.  If the second parameter is\n\t//   omitted, the resource is reset to its initial value.\n\t//     Ps = 1  -> modifyCursorKeys.\n\t//     Ps = 2  -> modifyFunctionKeys.\n\t//     Ps = 4  -> modifyOtherKeys.\n\t//   If no parameters are given, all resources are reset to their\n\t//   initial values.\n\tTerminal.prototype.setResources = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI > Ps n\n\t//   Disable modifiers which may be enabled via the CSI > Ps; Ps m\n\t//   sequence.  This corresponds to a resource value of \"-1\", which\n\t//   cannot be set with the other sequence.  The parameter identi-\n\t//   fies the resource to be disabled:\n\t//     Ps = 1  -> modifyCursorKeys.\n\t//     Ps = 2  -> modifyFunctionKeys.\n\t//     Ps = 4  -> modifyOtherKeys.\n\t//   If the parameter is omitted, modifyFunctionKeys is disabled.\n\t//   When modifyFunctionKeys is disabled, xterm uses the modifier\n\t//   keys to make an extended sequence of functions rather than\n\t//   adding a parameter to each function key to denote the modi-\n\t//   fiers.\n\tTerminal.prototype.disableModifiers = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI > Ps p\n\t//   Set resource value pointerMode.  This is used by xterm to\n\t//   decide whether to hide the pointer cursor as the user types.\n\t//   Valid values for the parameter:\n\t//     Ps = 0  -> never hide the pointer.\n\t//     Ps = 1  -> hide if the mouse tracking mode is not enabled.\n\t//     Ps = 2  -> always hide the pointer.  If no parameter is\n\t//     given, xterm uses the default, which is 1 .\n\tTerminal.prototype.setPointerMode = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI ! p   Soft terminal reset (DECSTR).\n\t// http://vt100.net/docs/vt220-rm/table4-10.html\n\tTerminal.prototype.softReset = function(params) {\n\t  this.cursorHidden = false;\n\t  this.insertMode = false;\n\t  this.originMode = false;\n\t  this.wraparoundMode = false; // autowrap\n\t  this.applicationKeypad = false; // ?\n\t  this.applicationCursor = false;\n\t  this.scrollTop = 0;\n\t  this.scrollBottom = this.rows - 1;\n\t  this.curAttr = this.defAttr;\n\t  this.x = this.y = 0; // ?\n\t  this.charset = null;\n\t  this.glevel = 0; // ??\n\t  this.charsets = [null]; // ??\n\t};\n\t\n\t// CSI Ps$ p\n\t//   Request ANSI mode (DECRQM).  For VT300 and up, reply is\n\t//     CSI Ps; Pm$ y\n\t//   where Ps is the mode number as in RM, and Pm is the mode\n\t//   value:\n\t//     0 - not recognized\n\t//     1 - set\n\t//     2 - reset\n\t//     3 - permanently set\n\t//     4 - permanently reset\n\tTerminal.prototype.requestAnsiMode = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI ? Ps$ p\n\t//   Request DEC private mode (DECRQM).  For VT300 and up, reply is\n\t//     CSI ? Ps; Pm$ p\n\t//   where Ps is the mode number as in DECSET, Pm is the mode value\n\t//   as in the ANSI DECRQM.\n\tTerminal.prototype.requestPrivateMode = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps ; Ps \" p\n\t//   Set conformance level (DECSCL).  Valid values for the first\n\t//   parameter:\n\t//     Ps = 6 1  -> VT100.\n\t//     Ps = 6 2  -> VT200.\n\t//     Ps = 6 3  -> VT300.\n\t//   Valid values for the second parameter:\n\t//     Ps = 0  -> 8-bit controls.\n\t//     Ps = 1  -> 7-bit controls (always set for VT100).\n\t//     Ps = 2  -> 8-bit controls.\n\tTerminal.prototype.setConformanceLevel = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps q  Load LEDs (DECLL).\n\t//     Ps = 0  -> Clear all LEDS (default).\n\t//     Ps = 1  -> Light Num Lock.\n\t//     Ps = 2  -> Light Caps Lock.\n\t//     Ps = 3  -> Light Scroll Lock.\n\t//     Ps = 2  1  -> Extinguish Num Lock.\n\t//     Ps = 2  2  -> Extinguish Caps Lock.\n\t//     Ps = 2  3  -> Extinguish Scroll Lock.\n\tTerminal.prototype.loadLEDs = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps SP q\n\t//   Set cursor style (DECSCUSR, VT520).\n\t//     Ps = 0  -> blinking block.\n\t//     Ps = 1  -> blinking block (default).\n\t//     Ps = 2  -> steady block.\n\t//     Ps = 3  -> blinking underline.\n\t//     Ps = 4  -> steady underline.\n\tTerminal.prototype.setCursorStyle = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps \" q\n\t//   Select character protection attribute (DECSCA).  Valid values\n\t//   for the parameter:\n\t//     Ps = 0  -> DECSED and DECSEL can erase (default).\n\t//     Ps = 1  -> DECSED and DECSEL cannot erase.\n\t//     Ps = 2  -> DECSED and DECSEL can erase.\n\tTerminal.prototype.setCharProtectionAttr = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI ? Pm r\n\t//   Restore DEC Private Mode Values.  The value of Ps previously\n\t//   saved is restored.  Ps values are the same as for DECSET.\n\tTerminal.prototype.restorePrivateValues = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Pt; Pl; Pb; Pr; Ps$ r\n\t//   Change Attributes in Rectangular Area (DECCARA), VT400 and up.\n\t//     Pt; Pl; Pb; Pr denotes the rectangle.\n\t//     Ps denotes the SGR attributes to change: 0, 1, 4, 5, 7.\n\t// NOTE: xterm doesn't enable this code by default.\n\tTerminal.prototype.setAttrInRectangle = function(params) {\n\t  var t = params[0]\n\t    , l = params[1]\n\t    , b = params[2]\n\t    , r = params[3]\n\t    , attr = params[4];\n\t\n\t  var line\n\t    , i;\n\t\n\t  for (; t < b + 1; t++) {\n\t    line = this.lines[this.ybase + t];\n\t    for (i = l; i < r; i++) {\n\t      line[i] = [attr, line[i][1]];\n\t    }\n\t  }\n\t\n\t  // this.maxRange();\n\t  this.updateRange(params[0]);\n\t  this.updateRange(params[2]);\n\t};\n\t\n\t// CSI ? Pm s\n\t//   Save DEC Private Mode Values.  Ps values are the same as for\n\t//   DECSET.\n\tTerminal.prototype.savePrivateValues = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps ; Ps ; Ps t\n\t//   Window manipulation (from dtterm, as well as extensions).\n\t//   These controls may be disabled using the allowWindowOps\n\t//   resource.  Valid values for the first (and any additional\n\t//   parameters) are:\n\t//     Ps = 1  -> De-iconify window.\n\t//     Ps = 2  -> Iconify window.\n\t//     Ps = 3  ;  x ;  y -> Move window to [x, y].\n\t//     Ps = 4  ;  height ;  width -> Resize the xterm window to\n\t//     height and width in pixels.\n\t//     Ps = 5  -> Raise the xterm window to the front of the stack-\n\t//     ing order.\n\t//     Ps = 6  -> Lower the xterm window to the bottom of the\n\t//     stacking order.\n\t//     Ps = 7  -> Refresh the xterm window.\n\t//     Ps = 8  ;  height ;  width -> Resize the text area to\n\t//     [height;width] in characters.\n\t//     Ps = 9  ;  0  -> Restore maximized window.\n\t//     Ps = 9  ;  1  -> Maximize window (i.e., resize to screen\n\t//     size).\n\t//     Ps = 1 0  ;  0  -> Undo full-screen mode.\n\t//     Ps = 1 0  ;  1  -> Change to full-screen.\n\t//     Ps = 1 1  -> Report xterm window state.  If the xterm window\n\t//     is open (non-iconified), it returns CSI 1 t .  If the xterm\n\t//     window is iconified, it returns CSI 2 t .\n\t//     Ps = 1 3  -> Report xterm window position.  Result is CSI 3\n\t//     ; x ; y t\n\t//     Ps = 1 4  -> Report xterm window in pixels.  Result is CSI\n\t//     4  ;  height ;  width t\n\t//     Ps = 1 8  -> Report the size of the text area in characters.\n\t//     Result is CSI  8  ;  height ;  width t\n\t//     Ps = 1 9  -> Report the size of the screen in characters.\n\t//     Result is CSI  9  ;  height ;  width t\n\t//     Ps = 2 0  -> Report xterm window's icon label.  Result is\n\t//     OSC  L  label ST\n\t//     Ps = 2 1  -> Report xterm window's title.  Result is OSC  l\n\t//     label ST\n\t//     Ps = 2 2  ;  0  -> Save xterm icon and window title on\n\t//     stack.\n\t//     Ps = 2 2  ;  1  -> Save xterm icon title on stack.\n\t//     Ps = 2 2  ;  2  -> Save xterm window title on stack.\n\t//     Ps = 2 3  ;  0  -> Restore xterm icon and window title from\n\t//     stack.\n\t//     Ps = 2 3  ;  1  -> Restore xterm icon title from stack.\n\t//     Ps = 2 3  ;  2  -> Restore xterm window title from stack.\n\t//     Ps >= 2 4  -> Resize to Ps lines (DECSLPP).\n\tTerminal.prototype.manipulateWindow = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Pt; Pl; Pb; Pr; Ps$ t\n\t//   Reverse Attributes in Rectangular Area (DECRARA), VT400 and\n\t//   up.\n\t//     Pt; Pl; Pb; Pr denotes the rectangle.\n\t//     Ps denotes the attributes to reverse, i.e.,  1, 4, 5, 7.\n\t// NOTE: xterm doesn't enable this code by default.\n\tTerminal.prototype.reverseAttrInRectangle = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI > Ps; Ps t\n\t//   Set one or more features of the title modes.  Each parameter\n\t//   enables a single feature.\n\t//     Ps = 0  -> Set window/icon labels using hexadecimal.\n\t//     Ps = 1  -> Query window/icon labels using hexadecimal.\n\t//     Ps = 2  -> Set window/icon labels using UTF-8.\n\t//     Ps = 3  -> Query window/icon labels using UTF-8.  (See dis-\n\t//     cussion of \"Title Modes\")\n\tTerminal.prototype.setTitleModeFeature = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps SP t\n\t//   Set warning-bell volume (DECSWBV, VT520).\n\t//     Ps = 0  or 1  -> off.\n\t//     Ps = 2 , 3  or 4  -> low.\n\t//     Ps = 5 , 6 , 7 , or 8  -> high.\n\tTerminal.prototype.setWarningBellVolume = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps SP u\n\t//   Set margin-bell volume (DECSMBV, VT520).\n\t//     Ps = 1  -> off.\n\t//     Ps = 2 , 3  or 4  -> low.\n\t//     Ps = 0 , 5 , 6 , 7 , or 8  -> high.\n\tTerminal.prototype.setMarginBellVolume = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Pt; Pl; Pb; Pr; Pp; Pt; Pl; Pp$ v\n\t//   Copy Rectangular Area (DECCRA, VT400 and up).\n\t//     Pt; Pl; Pb; Pr denotes the rectangle.\n\t//     Pp denotes the source page.\n\t//     Pt; Pl denotes the target location.\n\t//     Pp denotes the target page.\n\t// NOTE: xterm doesn't enable this code by default.\n\tTerminal.prototype.copyRectangle = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Pt ; Pl ; Pb ; Pr ' w\n\t//   Enable Filter Rectangle (DECEFR), VT420 and up.\n\t//   Parameters are [top;left;bottom;right].\n\t//   Defines the coordinates of a filter rectangle and activates\n\t//   it.  Anytime the locator is detected outside of the filter\n\t//   rectangle, an outside rectangle event is generated and the\n\t//   rectangle is disabled.  Filter rectangles are always treated\n\t//   as \"one-shot\" events.  Any parameters that are omitted default\n\t//   to the current locator position.  If all parameters are omit-\n\t//   ted, any locator motion will be reported.  DECELR always can-\n\t//   cels any prevous rectangle definition.\n\tTerminal.prototype.enableFilterRectangle = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps x  Request Terminal Parameters (DECREQTPARM).\n\t//   if Ps is a \"0\" (default) or \"1\", and xterm is emulating VT100,\n\t//   the control sequence elicits a response of the same form whose\n\t//   parameters describe the terminal:\n\t//     Ps -> the given Ps incremented by 2.\n\t//     Pn = 1  <- no parity.\n\t//     Pn = 1  <- eight bits.\n\t//     Pn = 1  <- 2  8  transmit 38.4k baud.\n\t//     Pn = 1  <- 2  8  receive 38.4k baud.\n\t//     Pn = 1  <- clock multiplier.\n\t//     Pn = 0  <- STP flags.\n\tTerminal.prototype.requestParameters = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps x  Select Attribute Change Extent (DECSACE).\n\t//     Ps = 0  -> from start to end position, wrapped.\n\t//     Ps = 1  -> from start to end position, wrapped.\n\t//     Ps = 2  -> rectangle (exact).\n\tTerminal.prototype.selectChangeExtent = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Pc; Pt; Pl; Pb; Pr$ x\n\t//   Fill Rectangular Area (DECFRA), VT420 and up.\n\t//     Pc is the character to use.\n\t//     Pt; Pl; Pb; Pr denotes the rectangle.\n\t// NOTE: xterm doesn't enable this code by default.\n\tTerminal.prototype.fillRectangle = function(params) {\n\t  var ch = params[0]\n\t    , t = params[1]\n\t    , l = params[2]\n\t    , b = params[3]\n\t    , r = params[4];\n\t\n\t  var line\n\t    , i;\n\t\n\t  for (; t < b + 1; t++) {\n\t    line = this.lines[this.ybase + t];\n\t    for (i = l; i < r; i++) {\n\t      line[i] = [line[i][0], String.fromCharCode(ch)];\n\t    }\n\t  }\n\t\n\t  // this.maxRange();\n\t  this.updateRange(params[1]);\n\t  this.updateRange(params[3]);\n\t};\n\t\n\t// CSI Ps ; Pu ' z\n\t//   Enable Locator Reporting (DECELR).\n\t//   Valid values for the first parameter:\n\t//     Ps = 0  -> Locator disabled (default).\n\t//     Ps = 1  -> Locator enabled.\n\t//     Ps = 2  -> Locator enabled for one report, then disabled.\n\t//   The second parameter specifies the coordinate unit for locator\n\t//   reports.\n\t//   Valid values for the second parameter:\n\t//     Pu = 0  <- or omitted -> default to character cells.\n\t//     Pu = 1  <- device physical pixels.\n\t//     Pu = 2  <- character cells.\n\tTerminal.prototype.enableLocatorReporting = function(params) {\n\t  var val = params[0] > 0;\n\t  //this.mouseEvents = val;\n\t  //this.decLocator = val;\n\t};\n\t\n\t// CSI Pt; Pl; Pb; Pr$ z\n\t//   Erase Rectangular Area (DECERA), VT400 and up.\n\t//     Pt; Pl; Pb; Pr denotes the rectangle.\n\t// NOTE: xterm doesn't enable this code by default.\n\tTerminal.prototype.eraseRectangle = function(params) {\n\t  var t = params[0]\n\t    , l = params[1]\n\t    , b = params[2]\n\t    , r = params[3];\n\t\n\t  var line\n\t    , i\n\t    , ch;\n\t\n\t  ch = [this.eraseAttr(), ' ']; // xterm?\n\t\n\t  for (; t < b + 1; t++) {\n\t    line = this.lines[this.ybase + t];\n\t    for (i = l; i < r; i++) {\n\t      line[i] = ch;\n\t    }\n\t  }\n\t\n\t  // this.maxRange();\n\t  this.updateRange(params[0]);\n\t  this.updateRange(params[2]);\n\t};\n\t\n\t// CSI Pm ' {\n\t//   Select Locator Events (DECSLE).\n\t//   Valid values for the first (and any additional parameters)\n\t//   are:\n\t//     Ps = 0  -> only respond to explicit host requests (DECRQLP).\n\t//                (This is default).  It also cancels any filter\n\t//   rectangle.\n\t//     Ps = 1  -> report button down transitions.\n\t//     Ps = 2  -> do not report button down transitions.\n\t//     Ps = 3  -> report button up transitions.\n\t//     Ps = 4  -> do not report button up transitions.\n\tTerminal.prototype.setLocatorEvents = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Pt; Pl; Pb; Pr$ {\n\t//   Selective Erase Rectangular Area (DECSERA), VT400 and up.\n\t//     Pt; Pl; Pb; Pr denotes the rectangle.\n\tTerminal.prototype.selectiveEraseRectangle = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI Ps ' |\n\t//   Request Locator Position (DECRQLP).\n\t//   Valid values for the parameter are:\n\t//     Ps = 0 , 1 or omitted -> transmit a single DECLRP locator\n\t//     report.\n\t\n\t//   If Locator Reporting has been enabled by a DECELR, xterm will\n\t//   respond with a DECLRP Locator Report.  This report is also\n\t//   generated on button up and down events if they have been\n\t//   enabled with a DECSLE, or when the locator is detected outside\n\t//   of a filter rectangle, if filter rectangles have been enabled\n\t//   with a DECEFR.\n\t\n\t//     -> CSI Pe ; Pb ; Pr ; Pc ; Pp &  w\n\t\n\t//   Parameters are [event;button;row;column;page].\n\t//   Valid values for the event:\n\t//     Pe = 0  -> locator unavailable - no other parameters sent.\n\t//     Pe = 1  -> request - xterm received a DECRQLP.\n\t//     Pe = 2  -> left button down.\n\t//     Pe = 3  -> left button up.\n\t//     Pe = 4  -> middle button down.\n\t//     Pe = 5  -> middle button up.\n\t//     Pe = 6  -> right button down.\n\t//     Pe = 7  -> right button up.\n\t//     Pe = 8  -> M4 button down.\n\t//     Pe = 9  -> M4 button up.\n\t//     Pe = 1 0  -> locator outside filter rectangle.\n\t//   ``button'' parameter is a bitmask indicating which buttons are\n\t//     pressed:\n\t//     Pb = 0  <- no buttons down.\n\t//     Pb & 1  <- right button down.\n\t//     Pb & 2  <- middle button down.\n\t//     Pb & 4  <- left button down.\n\t//     Pb & 8  <- M4 button down.\n\t//   ``row'' and ``column'' parameters are the coordinates of the\n\t//     locator position in the xterm window, encoded as ASCII deci-\n\t//     mal.\n\t//   The ``page'' parameter is not used by xterm, and will be omit-\n\t//   ted.\n\tTerminal.prototype.requestLocatorPosition = function(params) {\n\t  ;\n\t};\n\t\n\t// CSI P m SP }\n\t// Insert P s Column(s) (default = 1) (DECIC), VT420 and up.\n\t// NOTE: xterm doesn't enable this code by default.\n\tTerminal.prototype.insertColumns = function() {\n\t  var param = params[0]\n\t    , l = this.ybase + this.rows\n\t    , ch = [this.eraseAttr(), ' '] // xterm?\n\t    , i;\n\t\n\t  while (param--) {\n\t    for (i = this.ybase; i < l; i++) {\n\t      this.lines[i].splice(this.x + 1, 0, ch);\n\t      this.lines[i].pop();\n\t    }\n\t  }\n\t\n\t  this.maxRange();\n\t};\n\t\n\t// CSI P m SP ~\n\t// Delete P s Column(s) (default = 1) (DECDC), VT420 and up\n\t// NOTE: xterm doesn't enable this code by default.\n\tTerminal.prototype.deleteColumns = function() {\n\t  var param = params[0]\n\t    , l = this.ybase + this.rows\n\t    , ch = [this.eraseAttr(), ' '] // xterm?\n\t    , i;\n\t\n\t  while (param--) {\n\t    for (i = this.ybase; i < l; i++) {\n\t      this.lines[i].splice(this.x, 1);\n\t      this.lines[i].push(ch);\n\t    }\n\t  }\n\t\n\t  this.maxRange();\n\t};\n\t\n\t/**\n\t * Prefix/Select/Visual/Search Modes\n\t */\n\t\n\tTerminal.prototype.enterPrefix = function() {\n\t  this.prefixMode = true;\n\t};\n\t\n\tTerminal.prototype.leavePrefix = function() {\n\t  this.prefixMode = false;\n\t};\n\t\n\tTerminal.prototype.enterSelect = function() {\n\t  this._real = {\n\t    x: this.x,\n\t    y: this.y,\n\t    ydisp: this.ydisp,\n\t    ybase: this.ybase,\n\t    cursorHidden: this.cursorHidden,\n\t    lines: this.copyBuffer(this.lines),\n\t    write: this.write\n\t  };\n\t  this.write = function() {};\n\t  this.selectMode = true;\n\t  this.visualMode = false;\n\t  this.cursorHidden = false;\n\t  this.refresh(this.y, this.y);\n\t};\n\t\n\tTerminal.prototype.leaveSelect = function() {\n\t  this.x = this._real.x;\n\t  this.y = this._real.y;\n\t  this.ydisp = this._real.ydisp;\n\t  this.ybase = this._real.ybase;\n\t  this.cursorHidden = this._real.cursorHidden;\n\t  this.lines = this._real.lines;\n\t  this.write = this._real.write;\n\t  delete this._real;\n\t  this.selectMode = false;\n\t  this.visualMode = false;\n\t  this.refresh(0, this.rows - 1);\n\t};\n\t\n\tTerminal.prototype.enterVisual = function() {\n\t  this._real.preVisual = this.copyBuffer(this.lines);\n\t  this.selectText(this.x, this.x, this.ydisp + this.y, this.ydisp + this.y);\n\t  this.visualMode = true;\n\t};\n\t\n\tTerminal.prototype.leaveVisual = function() {\n\t  this.lines = this._real.preVisual;\n\t  delete this._real.preVisual;\n\t  delete this._selected;\n\t  this.visualMode = false;\n\t  this.refresh(0, this.rows - 1);\n\t};\n\t\n\tTerminal.prototype.enterSearch = function(down) {\n\t  this.entry = '';\n\t  this.searchMode = true;\n\t  this.searchDown = down;\n\t  this._real.preSearch = this.copyBuffer(this.lines);\n\t  this._real.preSearchX = this.x;\n\t  this._real.preSearchY = this.y;\n\t\n\t  var bottom = this.ydisp + this.rows - 1;\n\t  for (var i = 0; i < this.entryPrefix.length; i++) {\n\t    //this.lines[bottom][i][0] = (this.defAttr & ~0x1ff) | 4;\n\t    //this.lines[bottom][i][1] = this.entryPrefix[i];\n\t    this.lines[bottom][i] = [\n\t      (this.defAttr & ~0x1ff) | 4,\n\t      this.entryPrefix[i]\n\t    ];\n\t  }\n\t\n\t  this.y = this.rows - 1;\n\t  this.x = this.entryPrefix.length;\n\t\n\t  this.refresh(this.rows - 1, this.rows - 1);\n\t};\n\t\n\tTerminal.prototype.leaveSearch = function() {\n\t  this.searchMode = false;\n\t\n\t  if (this._real.preSearch) {\n\t    this.lines = this._real.preSearch;\n\t    this.x = this._real.preSearchX;\n\t    this.y = this._real.preSearchY;\n\t    delete this._real.preSearch;\n\t    delete this._real.preSearchX;\n\t    delete this._real.preSearchY;\n\t  }\n\t\n\t  this.refresh(this.rows - 1, this.rows - 1);\n\t};\n\t\n\tTerminal.prototype.copyBuffer = function(lines) {\n\t  var lines = lines || this.lines\n\t    , out = [];\n\t\n\t  for (var y = 0; y < lines.length; y++) {\n\t    out[y] = [];\n\t    for (var x = 0; x < lines[y].length; x++) {\n\t      out[y][x] = [lines[y][x][0], lines[y][x][1]];\n\t    }\n\t  }\n\t\n\t  return out;\n\t};\n\t\n\tTerminal.prototype.getCopyTextarea = function(text) {\n\t  var textarea = this._copyTextarea\n\t    , document = this.document;\n\t\n\t  if (!textarea) {\n\t    textarea = document.createElement('textarea');\n\t    textarea.style.position = 'absolute';\n\t    textarea.style.left = '-32000px';\n\t    textarea.style.top = '-32000px';\n\t    textarea.style.width = '0px';\n\t    textarea.style.height = '0px';\n\t    textarea.style.opacity = '0';\n\t    textarea.style.backgroundColor = 'transparent';\n\t    textarea.style.borderStyle = 'none';\n\t    textarea.style.outlineStyle = 'none';\n\t\n\t    document.getElementsByTagName('body')[0].appendChild(textarea);\n\t\n\t    this._copyTextarea = textarea;\n\t  }\n\t\n\t  return textarea;\n\t};\n\t\n\t// NOTE: Only works for primary selection on X11.\n\t// Non-X11 users should use Ctrl-C instead.\n\tTerminal.prototype.copyText = function(text) {\n\t  var self = this\n\t    , textarea = this.getCopyTextarea();\n\t\n\t  this.emit('copy', text);\n\t\n\t  textarea.focus();\n\t  textarea.textContent = text;\n\t  textarea.value = text;\n\t  textarea.setSelectionRange(0, text.length);\n\t\n\t  setTimeout(function() {\n\t    self.element.focus();\n\t    self.focus();\n\t  }, 1);\n\t};\n\t\n\tTerminal.prototype.selectText = function(x1, x2, y1, y2) {\n\t  var ox1\n\t    , ox2\n\t    , oy1\n\t    , oy2\n\t    , tmp\n\t    , x\n\t    , y\n\t    , xl\n\t    , attr;\n\t\n\t  if (this._selected) {\n\t    ox1 = this._selected.x1;\n\t    ox2 = this._selected.x2;\n\t    oy1 = this._selected.y1;\n\t    oy2 = this._selected.y2;\n\t\n\t    if (oy2 < oy1) {\n\t      tmp = ox2;\n\t      ox2 = ox1;\n\t      ox1 = tmp;\n\t      tmp = oy2;\n\t      oy2 = oy1;\n\t      oy1 = tmp;\n\t    }\n\t\n\t    if (ox2 < ox1 && oy1 === oy2) {\n\t      tmp = ox2;\n\t      ox2 = ox1;\n\t      ox1 = tmp;\n\t    }\n\t\n\t    for (y = oy1; y <= oy2; y++) {\n\t      x = 0;\n\t      xl = this.cols - 1;\n\t      if (y === oy1) {\n\t        x = ox1;\n\t      }\n\t      if (y === oy2) {\n\t        xl = ox2;\n\t      }\n\t      for (; x <= xl; x++) {\n\t        if (this.lines[y][x].old != null) {\n\t          //this.lines[y][x][0] = this.lines[y][x].old;\n\t          //delete this.lines[y][x].old;\n\t          attr = this.lines[y][x].old;\n\t          delete this.lines[y][x].old;\n\t          this.lines[y][x] = [attr, this.lines[y][x][1]];\n\t        }\n\t      }\n\t    }\n\t\n\t    y1 = this._selected.y1;\n\t    x1 = this._selected.x1;\n\t  }\n\t\n\t  y1 = Math.max(y1, 0);\n\t  y1 = Math.min(y1, this.ydisp + this.rows - 1);\n\t\n\t  y2 = Math.max(y2, 0);\n\t  y2 = Math.min(y2, this.ydisp + this.rows - 1);\n\t\n\t  this._selected = { x1: x1, x2: x2, y1: y1, y2: y2 };\n\t\n\t  if (y2 < y1) {\n\t    tmp = x2;\n\t    x2 = x1;\n\t    x1 = tmp;\n\t    tmp = y2;\n\t    y2 = y1;\n\t    y1 = tmp;\n\t  }\n\t\n\t  if (x2 < x1 && y1 === y2) {\n\t    tmp = x2;\n\t    x2 = x1;\n\t    x1 = tmp;\n\t  }\n\t\n\t  for (y = y1; y <= y2; y++) {\n\t    x = 0;\n\t    xl = this.cols - 1;\n\t    if (y === y1) {\n\t      x = x1;\n\t    }\n\t    if (y === y2) {\n\t      xl = x2;\n\t    }\n\t    for (; x <= xl; x++) {\n\t      //this.lines[y][x].old = this.lines[y][x][0];\n\t      //this.lines[y][x][0] &= ~0x1ff;\n\t      //this.lines[y][x][0] |= (0x1ff << 9) | 4;\n\t      attr = this.lines[y][x][0];\n\t      this.lines[y][x] = [\n\t        (attr & ~0x1ff) | ((0x1ff << 9) | 4),\n\t        this.lines[y][x][1]\n\t      ];\n\t      this.lines[y][x].old = attr;\n\t    }\n\t  }\n\t\n\t  y1 = y1 - this.ydisp;\n\t  y2 = y2 - this.ydisp;\n\t\n\t  y1 = Math.max(y1, 0);\n\t  y1 = Math.min(y1, this.rows - 1);\n\t\n\t  y2 = Math.max(y2, 0);\n\t  y2 = Math.min(y2, this.rows - 1);\n\t\n\t  //this.refresh(y1, y2);\n\t  this.refresh(0, this.rows - 1);\n\t};\n\t\n\tTerminal.prototype.grabText = function(x1, x2, y1, y2) {\n\t  var out = ''\n\t    , buf = ''\n\t    , ch\n\t    , x\n\t    , y\n\t    , xl\n\t    , tmp;\n\t\n\t  if (y2 < y1) {\n\t    tmp = x2;\n\t    x2 = x1;\n\t    x1 = tmp;\n\t    tmp = y2;\n\t    y2 = y1;\n\t    y1 = tmp;\n\t  }\n\t\n\t  if (x2 < x1 && y1 === y2) {\n\t    tmp = x2;\n\t    x2 = x1;\n\t    x1 = tmp;\n\t  }\n\t\n\t  for (y = y1; y <= y2; y++) {\n\t    x = 0;\n\t    xl = this.cols - 1;\n\t    if (y === y1) {\n\t      x = x1;\n\t    }\n\t    if (y === y2) {\n\t      xl = x2;\n\t    }\n\t    for (; x <= xl; x++) {\n\t      ch = this.lines[y][x][1];\n\t      if (ch === ' ') {\n\t        buf += ch;\n\t        continue;\n\t      }\n\t      if (buf) {\n\t        out += buf;\n\t        buf = '';\n\t      }\n\t      out += ch;\n\t      if (isWide(ch)) x++;\n\t    }\n\t    buf = '';\n\t    out += '\\n';\n\t  }\n\t\n\t  // If we're not at the end of the\n\t  // line, don't add a newline.\n\t  for (x = x2, y = y2; x < this.cols; x++) {\n\t    if (this.lines[y][x][1] !== ' ') {\n\t      out = out.slice(0, -1);\n\t      break;\n\t    }\n\t  }\n\t\n\t  return out;\n\t};\n\t\n\tTerminal.prototype.keyPrefix = function(ev, key) {\n\t  if (key === 'k' || key === '&') {\n\t    this.destroy();\n\t  } else if (key === 'p' || key === ']') {\n\t    this.emit('request paste');\n\t  } else if (key === 'c') {\n\t    this.emit('request create');\n\t  } else if (key >= '0' && key <= '9') {\n\t    key = +key - 1;\n\t    if (!~key) key = 9;\n\t    this.emit('request term', key);\n\t  } else if (key === 'n') {\n\t    this.emit('request term next');\n\t  } else if (key === 'P') {\n\t    this.emit('request term previous');\n\t  } else if (key === ':') {\n\t    this.emit('request command mode');\n\t  } else if (key === '[') {\n\t    this.enterSelect();\n\t  }\n\t};\n\t\n\tTerminal.prototype.keySelect = function(ev, key) {\n\t  this.showCursor();\n\t\n\t  if (this.searchMode || key === 'n' || key === 'N') {\n\t    return this.keySearch(ev, key);\n\t  }\n\t\n\t  if (key === '\\x04') { // ctrl-d\n\t    var y = this.ydisp + this.y;\n\t    if (this.ydisp === this.ybase) {\n\t      // Mimic vim behavior\n\t      this.y = Math.min(this.y + (this.rows - 1) / 2 | 0, this.rows - 1);\n\t      this.refresh(0, this.rows - 1);\n\t    } else {\n\t      this.scrollDisp((this.rows - 1) / 2 | 0);\n\t    }\n\t    if (this.visualMode) {\n\t      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === '\\x15') { // ctrl-u\n\t    var y = this.ydisp + this.y;\n\t    if (this.ydisp === 0) {\n\t      // Mimic vim behavior\n\t      this.y = Math.max(this.y - (this.rows - 1) / 2 | 0, 0);\n\t      this.refresh(0, this.rows - 1);\n\t    } else {\n\t      this.scrollDisp(-(this.rows - 1) / 2 | 0);\n\t    }\n\t    if (this.visualMode) {\n\t      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === '\\x06') { // ctrl-f\n\t    var y = this.ydisp + this.y;\n\t    this.scrollDisp(this.rows - 1);\n\t    if (this.visualMode) {\n\t      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === '\\x02') { // ctrl-b\n\t    var y = this.ydisp + this.y;\n\t    this.scrollDisp(-(this.rows - 1));\n\t    if (this.visualMode) {\n\t      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'k' || key === '\\x1b[A') {\n\t    var y = this.ydisp + this.y;\n\t    this.y--;\n\t    if (this.y < 0) {\n\t      this.y = 0;\n\t      this.scrollDisp(-1);\n\t    }\n\t    if (this.visualMode) {\n\t      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n\t    } else {\n\t      this.refresh(this.y, this.y + 1);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'j' || key === '\\x1b[B') {\n\t    var y = this.ydisp + this.y;\n\t    this.y++;\n\t    if (this.y >= this.rows) {\n\t      this.y = this.rows - 1;\n\t      this.scrollDisp(1);\n\t    }\n\t    if (this.visualMode) {\n\t      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n\t    } else {\n\t      this.refresh(this.y - 1, this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'h' || key === '\\x1b[D') {\n\t    var x = this.x;\n\t    this.x--;\n\t    if (this.x < 0) {\n\t      this.x = 0;\n\t    }\n\t    if (this.visualMode) {\n\t      this.selectText(x, this.x, this.ydisp + this.y, this.ydisp + this.y);\n\t    } else {\n\t      this.refresh(this.y, this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'l' || key === '\\x1b[C') {\n\t    var x = this.x;\n\t    this.x++;\n\t    if (this.x >= this.cols) {\n\t      this.x = this.cols - 1;\n\t    }\n\t    if (this.visualMode) {\n\t      this.selectText(x, this.x, this.ydisp + this.y, this.ydisp + this.y);\n\t    } else {\n\t      this.refresh(this.y, this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'v' || key === ' ') {\n\t    if (!this.visualMode) {\n\t      this.enterVisual();\n\t    } else {\n\t      this.leaveVisual();\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'y') {\n\t    if (this.visualMode) {\n\t      var text = this.grabText(\n\t        this._selected.x1, this._selected.x2,\n\t        this._selected.y1, this._selected.y2);\n\t      this.copyText(text);\n\t      this.leaveVisual();\n\t      // this.leaveSelect();\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'q' || key === '\\x1b') {\n\t    if (this.visualMode) {\n\t      this.leaveVisual();\n\t    } else {\n\t      this.leaveSelect();\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'w' || key === 'W') {\n\t    var ox = this.x;\n\t    var oy = this.y;\n\t    var oyd = this.ydisp;\n\t\n\t    var x = this.x;\n\t    var y = this.y;\n\t    var yb = this.ydisp;\n\t    var saw_space = false;\n\t\n\t    for (;;) {\n\t      var line = this.lines[yb + y];\n\t      while (x < this.cols) {\n\t        if (line[x][1] <= ' ') {\n\t          saw_space = true;\n\t        } else if (saw_space) {\n\t          break;\n\t        }\n\t        x++;\n\t      }\n\t      if (x >= this.cols) x = this.cols - 1;\n\t      if (x === this.cols - 1 && line[x][1] <= ' ') {\n\t        x = 0;\n\t        if (++y >= this.rows) {\n\t          y--;\n\t          if (++yb > this.ybase) {\n\t            yb = this.ybase;\n\t            x = this.x;\n\t            break;\n\t          }\n\t        }\n\t        continue;\n\t      }\n\t      break;\n\t    }\n\t\n\t    this.x = x, this.y = y;\n\t    this.scrollDisp(-this.ydisp + yb);\n\t\n\t    if (this.visualMode) {\n\t      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'b' || key === 'B') {\n\t    var ox = this.x;\n\t    var oy = this.y;\n\t    var oyd = this.ydisp;\n\t\n\t    var x = this.x;\n\t    var y = this.y;\n\t    var yb = this.ydisp;\n\t\n\t    for (;;) {\n\t      var line = this.lines[yb + y];\n\t      var saw_space = x > 0 && line[x][1] > ' ' && line[x - 1][1] > ' ';\n\t      while (x >= 0) {\n\t        if (line[x][1] <= ' ') {\n\t          if (saw_space && (x + 1 < this.cols && line[x + 1][1] > ' ')) {\n\t            x++;\n\t            break;\n\t          } else {\n\t            saw_space = true;\n\t          }\n\t        }\n\t        x--;\n\t      }\n\t      if (x < 0) x = 0;\n\t      if (x === 0 && (line[x][1] <= ' ' || !saw_space)) {\n\t        x = this.cols - 1;\n\t        if (--y < 0) {\n\t          y++;\n\t          if (--yb < 0) {\n\t            yb++;\n\t            x = 0;\n\t            break;\n\t          }\n\t        }\n\t        continue;\n\t      }\n\t      break;\n\t    }\n\t\n\t    this.x = x, this.y = y;\n\t    this.scrollDisp(-this.ydisp + yb);\n\t\n\t    if (this.visualMode) {\n\t      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'e' || key === 'E') {\n\t    var x = this.x + 1;\n\t    var y = this.y;\n\t    var yb = this.ydisp;\n\t    if (x >= this.cols) x--;\n\t\n\t    for (;;) {\n\t      var line = this.lines[yb + y];\n\t      while (x < this.cols) {\n\t        if (line[x][1] <= ' ') {\n\t          x++;\n\t        } else {\n\t          break;\n\t        }\n\t      }\n\t      while (x < this.cols) {\n\t        if (line[x][1] <= ' ') {\n\t          if (x - 1 >= 0 && line[x - 1][1] > ' ') {\n\t            x--;\n\t            break;\n\t          }\n\t        }\n\t        x++;\n\t      }\n\t      if (x >= this.cols) x = this.cols - 1;\n\t      if (x === this.cols - 1 && line[x][1] <= ' ') {\n\t        x = 0;\n\t        if (++y >= this.rows) {\n\t          y--;\n\t          if (++yb > this.ybase) {\n\t            yb = this.ybase;\n\t            break;\n\t          }\n\t        }\n\t        continue;\n\t      }\n\t      break;\n\t    }\n\t\n\t    this.x = x, this.y = y;\n\t    this.scrollDisp(-this.ydisp + yb);\n\t\n\t    if (this.visualMode) {\n\t      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === '^' || key === '0') {\n\t    var ox = this.x;\n\t\n\t    if (key === '0') {\n\t      this.x = 0;\n\t    } else if (key === '^') {\n\t      var line = this.lines[this.ydisp + this.y];\n\t      var x = 0;\n\t      while (x < this.cols) {\n\t        if (line[x][1] > ' ') {\n\t          break;\n\t        }\n\t        x++;\n\t      }\n\t      if (x >= this.cols) x = this.cols - 1;\n\t      this.x = x;\n\t    }\n\t\n\t    if (this.visualMode) {\n\t      this.selectText(ox, this.x, this.ydisp + this.y, this.ydisp + this.y);\n\t    } else {\n\t      this.refresh(this.y, this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === '$') {\n\t    var ox = this.x;\n\t    var line = this.lines[this.ydisp + this.y];\n\t    var x = this.cols - 1;\n\t    while (x >= 0) {\n\t      if (line[x][1] > ' ') {\n\t        if (this.visualMode && x < this.cols - 1) x++;\n\t        break;\n\t      }\n\t      x--;\n\t    }\n\t    if (x < 0) x = 0;\n\t    this.x = x;\n\t    if (this.visualMode) {\n\t      this.selectText(ox, this.x, this.ydisp + this.y, this.ydisp + this.y);\n\t    } else {\n\t      this.refresh(this.y, this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'g' || key === 'G') {\n\t    var ox = this.x;\n\t    var oy = this.y;\n\t    var oyd = this.ydisp;\n\t    if (key === 'g') {\n\t      this.x = 0, this.y = 0;\n\t      this.scrollDisp(-this.ydisp);\n\t    } else if (key === 'G') {\n\t      this.x = 0, this.y = this.rows - 1;\n\t      this.scrollDisp(this.ybase);\n\t    }\n\t    if (this.visualMode) {\n\t      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === 'H' || key === 'M' || key === 'L') {\n\t    var ox = this.x;\n\t    var oy = this.y;\n\t    if (key === 'H') {\n\t      this.x = 0, this.y = 0;\n\t    } else if (key === 'M') {\n\t      this.x = 0, this.y = this.rows / 2 | 0;\n\t    } else if (key === 'L') {\n\t      this.x = 0, this.y = this.rows - 1;\n\t    }\n\t    if (this.visualMode) {\n\t      this.selectText(ox, this.x, this.ydisp + oy, this.ydisp + this.y);\n\t    } else {\n\t      this.refresh(oy, oy);\n\t      this.refresh(this.y, this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === '{' || key === '}') {\n\t    var ox = this.x;\n\t    var oy = this.y;\n\t    var oyd = this.ydisp;\n\t\n\t    var line;\n\t    var saw_full = false;\n\t    var found = false;\n\t    var first_is_space = -1;\n\t    var y = this.y + (key === '{' ? -1 : 1);\n\t    var yb = this.ydisp;\n\t    var i;\n\t\n\t    if (key === '{') {\n\t      if (y < 0) {\n\t        y++;\n\t        if (yb > 0) yb--;\n\t      }\n\t    } else if (key === '}') {\n\t      if (y >= this.rows) {\n\t        y--;\n\t        if (yb < this.ybase) yb++;\n\t      }\n\t    }\n\t\n\t    for (;;) {\n\t      line = this.lines[yb + y];\n\t\n\t      for (i = 0; i < this.cols; i++) {\n\t        if (line[i][1] > ' ') {\n\t          if (first_is_space === -1) {\n\t            first_is_space = 0;\n\t          }\n\t          saw_full = true;\n\t          break;\n\t        } else if (i === this.cols - 1) {\n\t          if (first_is_space === -1) {\n\t            first_is_space = 1;\n\t          } else if (first_is_space === 0) {\n\t            found = true;\n\t          } else if (first_is_space === 1) {\n\t            if (saw_full) found = true;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t\n\t      if (found) break;\n\t\n\t      if (key === '{') {\n\t        y--;\n\t        if (y < 0) {\n\t          y++;\n\t          if (yb > 0) yb--;\n\t          else break;\n\t        }\n\t      } else if (key === '}') {\n\t        y++;\n\t        if (y >= this.rows) {\n\t          y--;\n\t          if (yb < this.ybase) yb++;\n\t          else break;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (!found) {\n\t      if (key === '{') {\n\t        y = 0;\n\t        yb = 0;\n\t      } else if (key === '}') {\n\t        y = this.rows - 1;\n\t        yb = this.ybase;\n\t      }\n\t    }\n\t\n\t    this.x = 0, this.y = y;\n\t    this.scrollDisp(-this.ydisp + yb);\n\t\n\t    if (this.visualMode) {\n\t      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n\t    }\n\t    return;\n\t  }\n\t\n\t  if (key === '/' || key === '?') {\n\t    if (!this.visualMode) {\n\t      this.enterSearch(key === '/');\n\t    }\n\t    return;\n\t  }\n\t\n\t  return false;\n\t};\n\t\n\tTerminal.prototype.keySearch = function(ev, key) {\n\t  if (key === '\\x1b') {\n\t    this.leaveSearch();\n\t    return;\n\t  }\n\t\n\t  if (key === '\\r' || (!this.searchMode && (key === 'n' || key === 'N'))) {\n\t    this.leaveSearch();\n\t\n\t    var entry = this.entry;\n\t\n\t    if (!entry) {\n\t      this.refresh(0, this.rows - 1);\n\t      return;\n\t    }\n\t\n\t    var ox = this.x;\n\t    var oy = this.y;\n\t    var oyd = this.ydisp;\n\t\n\t    var line;\n\t    var found = false;\n\t    var wrapped = false;\n\t    var x = this.x + 1;\n\t    var y = this.ydisp + this.y;\n\t    var yb, i;\n\t    var up = key === 'N'\n\t      ? this.searchDown\n\t      : !this.searchDown;\n\t\n\t    for (;;) {\n\t      line = this.lines[y];\n\t\n\t      while (x < this.cols) {\n\t        for (i = 0; i < entry.length; i++) {\n\t          if (x + i >= this.cols) break;\n\t          if (line[x + i][1] !== entry[i]) {\n\t            break;\n\t          } else if (line[x + i][1] === entry[i] && i === entry.length - 1) {\n\t            found = true;\n\t            break;\n\t          }\n\t        }\n\t        if (found) break;\n\t        x += i + 1;\n\t      }\n\t      if (found) break;\n\t\n\t      x = 0;\n\t\n\t      if (!up) {\n\t        y++;\n\t        if (y > this.ybase + this.rows - 1) {\n\t          if (wrapped) break;\n\t          // this.setMessage('Search wrapped. Continuing at TOP.');\n\t          wrapped = true;\n\t          y = 0;\n\t        }\n\t      } else {\n\t        y--;\n\t        if (y < 0) {\n\t          if (wrapped) break;\n\t          // this.setMessage('Search wrapped. Continuing at BOTTOM.');\n\t          wrapped = true;\n\t          y = this.ybase + this.rows - 1;\n\t        }\n\t      }\n\t    }\n\t\n\t    if (found) {\n\t      if (y - this.ybase < 0) {\n\t        yb = y;\n\t        y = 0;\n\t        if (yb > this.ybase) {\n\t          y = yb - this.ybase;\n\t          yb = this.ybase;\n\t        }\n\t      } else {\n\t        yb = this.ybase;\n\t        y -= this.ybase;\n\t      }\n\t\n\t      this.x = x, this.y = y;\n\t      this.scrollDisp(-this.ydisp + yb);\n\t\n\t      if (this.visualMode) {\n\t        this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n\t      }\n\t      return;\n\t    }\n\t\n\t    // this.setMessage(\"No matches found.\");\n\t    this.refresh(0, this.rows - 1);\n\t\n\t    return;\n\t  }\n\t\n\t  if (key === '\\b' || key === '\\x7f') {\n\t    if (this.entry.length === 0) return;\n\t    var bottom = this.ydisp + this.rows - 1;\n\t    this.entry = this.entry.slice(0, -1);\n\t    var i = this.entryPrefix.length + this.entry.length;\n\t    //this.lines[bottom][i][1] = ' ';\n\t    this.lines[bottom][i] = [\n\t      this.lines[bottom][i][0],\n\t      ' '\n\t    ];\n\t    this.x--;\n\t    this.refresh(this.rows - 1, this.rows - 1);\n\t    this.refresh(this.y, this.y);\n\t    return;\n\t  }\n\t\n\t  if (key.length === 1 && key >= ' ' && key <= '~') {\n\t    var bottom = this.ydisp + this.rows - 1;\n\t    this.entry += key;\n\t    var i = this.entryPrefix.length + this.entry.length - 1;\n\t    //this.lines[bottom][i][0] = (this.defAttr & ~0x1ff) | 4;\n\t    //this.lines[bottom][i][1] = key;\n\t    this.lines[bottom][i] = [\n\t      (this.defAttr & ~0x1ff) | 4,\n\t      key\n\t    ];\n\t    this.x++;\n\t    this.refresh(this.rows - 1, this.rows - 1);\n\t    this.refresh(this.y, this.y);\n\t    return;\n\t  }\n\t\n\t  return false;\n\t};\n\t\n\t/**\n\t * Character Sets\n\t */\n\t\n\tTerminal.charsets = {};\n\t\n\t// DEC Special Character and Line Drawing Set.\n\t// http://vt100.net/docs/vt102-ug/table5-13.html\n\t// A lot of curses apps use this if they see TERM=xterm.\n\t// testing: echo -e '\\e(0a\\e(B'\n\t// The xterm output sometimes seems to conflict with the\n\t// reference above. xterm seems in line with the reference\n\t// when running vttest however.\n\t// The table below now uses xterm's output from vttest.\n\tTerminal.charsets.SCLD = { // (0\n\t  '`': '\\u25c6', // '◆'\n\t  'a': '\\u2592', // '▒'\n\t  'b': '\\u0009', // '\\t'\n\t  'c': '\\u000c', // '\\f'\n\t  'd': '\\u000d', // '\\r'\n\t  'e': '\\u000a', // '\\n'\n\t  'f': '\\u00b0', // '°'\n\t  'g': '\\u00b1', // '±'\n\t  'h': '\\u2424', // '\\u2424' (NL)\n\t  'i': '\\u000b', // '\\v'\n\t  'j': '\\u2518', // '┘'\n\t  'k': '\\u2510', // '┐'\n\t  'l': '\\u250c', // '┌'\n\t  'm': '\\u2514', // '└'\n\t  'n': '\\u253c', // '┼'\n\t  'o': '\\u23ba', // '⎺'\n\t  'p': '\\u23bb', // '⎻'\n\t  'q': '\\u2500', // '─'\n\t  'r': '\\u23bc', // '⎼'\n\t  's': '\\u23bd', // '⎽'\n\t  't': '\\u251c', // '├'\n\t  'u': '\\u2524', // '┤'\n\t  'v': '\\u2534', // '┴'\n\t  'w': '\\u252c', // '┬'\n\t  'x': '\\u2502', // '│'\n\t  'y': '\\u2264', // '≤'\n\t  'z': '\\u2265', // '≥'\n\t  '{': '\\u03c0', // 'π'\n\t  '|': '\\u2260', // '≠'\n\t  '}': '\\u00a3', // '£'\n\t  '~': '\\u00b7'  // '·'\n\t};\n\t\n\tTerminal.charsets.UK = null; // (A\n\tTerminal.charsets.US = null; // (B (USASCII)\n\tTerminal.charsets.Dutch = null; // (4\n\tTerminal.charsets.Finnish = null; // (C or (5\n\tTerminal.charsets.French = null; // (R\n\tTerminal.charsets.FrenchCanadian = null; // (Q\n\tTerminal.charsets.German = null; // (K\n\tTerminal.charsets.Italian = null; // (Y\n\tTerminal.charsets.NorwegianDanish = null; // (E or (6\n\tTerminal.charsets.Spanish = null; // (Z\n\tTerminal.charsets.Swedish = null; // (H or (7\n\tTerminal.charsets.Swiss = null; // (=\n\tTerminal.charsets.ISOLatin = null; // /A\n\t\n\t/**\n\t * Helpers\n\t */\n\t\n\tfunction on(el, type, handler, capture) {\n\t  el.addEventListener(type, handler, capture || false);\n\t}\n\t\n\tfunction off(el, type, handler, capture) {\n\t  el.removeEventListener(type, handler, capture || false);\n\t}\n\t\n\tfunction cancel(ev) {\n\t  if (ev.preventDefault) ev.preventDefault();\n\t  ev.returnValue = false;\n\t  if (ev.stopPropagation) ev.stopPropagation();\n\t  ev.cancelBubble = true;\n\t  return false;\n\t}\n\t\n\tfunction inherits(child, parent) {\n\t  function f() {\n\t    this.constructor = child;\n\t  }\n\t  f.prototype = parent.prototype;\n\t  child.prototype = new f;\n\t}\n\t\n\t// if bold is broken, we can't\n\t// use it in the terminal.\n\tfunction isBoldBroken(document) {\n\t  var body = document.getElementsByTagName('body')[0];\n\t  var terminal = document.createElement('div');\n\t  terminal.className = 'terminal';\n\t  var line = document.createElement('div');\n\t  var el = document.createElement('span');\n\t  el.innerHTML = 'hello world';\n\t  line.appendChild(el);\n\t  terminal.appendChild(line);\n\t  body.appendChild(terminal);\n\t  var w1 = el.scrollWidth;\n\t  el.style.fontWeight = 'bold';\n\t  var w2 = el.scrollWidth;\n\t  body.removeChild(terminal);\n\t  return w1 !== w2;\n\t}\n\t\n\tvar String = this.String;\n\tvar setTimeout = this.setTimeout;\n\tvar setInterval = this.setInterval;\n\t\n\tfunction indexOf(obj, el) {\n\t  var i = obj.length;\n\t  while (i--) {\n\t    if (obj[i] === el) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\tfunction isWide(ch) {\n\t  if (ch <= '\\uff00') return false;\n\t  return (ch >= '\\uff01' && ch <= '\\uffbe')\n\t      || (ch >= '\\uffc2' && ch <= '\\uffc7')\n\t      || (ch >= '\\uffca' && ch <= '\\uffcf')\n\t      || (ch >= '\\uffd2' && ch <= '\\uffd7')\n\t      || (ch >= '\\uffda' && ch <= '\\uffdc')\n\t      || (ch >= '\\uffe0' && ch <= '\\uffe6')\n\t      || (ch >= '\\uffe8' && ch <= '\\uffee');\n\t}\n\t\n\tfunction matchColor(r1, g1, b1) {\n\t  var hash = (r1 << 16) | (g1 << 8) | b1;\n\t\n\t  if (matchColor._cache[hash] != null) {\n\t    return matchColor._cache[hash];\n\t  }\n\t\n\t  var ldiff = Infinity\n\t    , li = -1\n\t    , i = 0\n\t    , c\n\t    , r2\n\t    , g2\n\t    , b2\n\t    , diff;\n\t\n\t  for (; i < Terminal.vcolors.length; i++) {\n\t    c = Terminal.vcolors[i];\n\t    r2 = c[0];\n\t    g2 = c[1];\n\t    b2 = c[2];\n\t\n\t    diff = matchColor.distance(r1, g1, b1, r2, g2, b2);\n\t\n\t    if (diff === 0) {\n\t      li = i;\n\t      break;\n\t    }\n\t\n\t    if (diff < ldiff) {\n\t      ldiff = diff;\n\t      li = i;\n\t    }\n\t  }\n\t\n\t  return matchColor._cache[hash] = li;\n\t}\n\t\n\tmatchColor._cache = {};\n\t\n\t// http://stackoverflow.com/questions/1633828\n\tmatchColor.distance = function(r1, g1, b1, r2, g2, b2) {\n\t  return Math.pow(30 * (r1 - r2), 2)\n\t    + Math.pow(59 * (g1 - g2), 2)\n\t    + Math.pow(11 * (b1 - b2), 2);\n\t};\n\t\n\tfunction each(obj, iter, con) {\n\t  if (obj.forEach) return obj.forEach(iter, con);\n\t  for (var i = 0; i < obj.length; i++) {\n\t    iter.call(con, obj[i], i, obj);\n\t  }\n\t}\n\t\n\tfunction keys(obj) {\n\t  if (Object.keys) return Object.keys(obj);\n\t  var key, keys = [];\n\t  for (key in obj) {\n\t    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t      keys.push(key);\n\t    }\n\t  }\n\t  return keys;\n\t}\n\t\n\t/**\n\t * Expose\n\t */\n\t\n\tTerminal.EventEmitter = EventEmitter;\n\tTerminal.Stream = Stream;\n\tTerminal.inherits = inherits;\n\tTerminal.on = on;\n\tTerminal.off = off;\n\tTerminal.cancel = cancel;\n\t\n\tif (true) {\n\t  !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() { return Terminal; }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t} else if (typeof module !== 'undefined') {\n\t  module.exports = Terminal;\n\t} else {\n\t  this.Terminal = Terminal;\n\t}\n\t\n\t}).call(function() {\n\t  return this || (typeof window !== 'undefined' ? window : global);\n\t}());\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 125:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// systemd/terminal.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f40518eb689e02300e0d","module.exports = cockpit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cockpit\"\n// module id = 3\n// module chunks = 0 1 2 3","(function() {\n    \"use strict\";\n\n    var cockpit = require(\"cockpit\");\n    var _ = cockpit.gettext;\n\n    var React = require(\"react\");\n    var componentsTerminal = require(\"cockpit-components-terminal.jsx\");\n\n    cockpit.translate();\n\n    /*\n     * A terminal component for the cockpit user.\n     *\n     * Uses the Terminal component from base1 internally, but adds a header\n     * with title and Reset button.\n     *\n     * Spawns the user's shell in the user's home directory.\n     */\n    var UserTerminal = React.createClass({displayName: \"UserTerminal\",\n        createChannel: function (user) {\n            return cockpit.channel({\n                \"payload\": \"stream\",\n                \"spawn\": [ user.shell || \"/bin/bash\", \"-i\"],\n                \"environ\": [\n                    \"TERM=xterm-256color\",\n                    \"PATH=/sbin:/bin:/usr/sbin:/usr/bin\"\n                ],\n                \"directory\": user.home || \"/\",\n                \"pty\": true\n            });\n        },\n\n        getInitialState: function () {\n            return {\n                title: 'Terminal'\n            };\n        },\n\n        componentWillMount: function () {\n            cockpit.user().done(function (user) {\n                this.setState({ user: user, channel: this.createChannel(user) });\n            }.bind(this));\n        },\n\n        onTitleChanged: function (title) {\n            this.setState({ title: title });\n        },\n\n        onResetClick: function (event) {\n            if (event.button !== 0)\n                return;\n\n            if (this.state.channel)\n                this.state.channel.close();\n\n            if (this.state.user)\n                this.setState({ channel: this.createChannel(this.state.user) });\n\n            // don't focus the button, but keep it on the terminal\n            this.refs.resetButton.blur();\n            this.refs.terminal.focus();\n        },\n\n        render: function () {\n            var terminal;\n            if (this.state.channel)\n                terminal = (<componentsTerminal.Terminal ref=\"terminal\"\n                                                         channel={this.state.channel}\n                                                         onTitleChanged={this.onTitleChanged} />);\n            else\n                terminal = <span>Loading...</span>;\n\n            return (\n                <div className=\"panel panel-default console-ct-container\">\n                    <div className=\"panel-heading\">\n                        <tt className=\"terminal-title\">{this.state.title}</tt>\n                        <button ref=\"resetButton\"\n                                className=\"btn btn-default pull-right\"\n                                onClick={this.onResetClick}>{_(\"Reset\")}</button>\n                    </div>\n                    {terminal}\n                </div>\n            );\n        }\n    });\n\n    React.render(<UserTerminal />, document.getElementById('terminal'));\n\n    /* And show the body */\n    document.body.removeAttribute(\"hidden\");\n}());\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/systemd/terminal.jsx","/*!\n * react-lite.js v0.15.6\n * (c) 2016 Jade Gu\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.React = factory();\n}(this, function () { 'use strict';\n\n  var SVGNamespaceURI = 'http://www.w3.org/2000/svg';\n  var COMPONENT_ID = 'liteid';\n  var VELEMENT = 2;\n  var VSTATELESS = 3;\n  var VCOMPONENT = 4;\n  var VCOMMENT = 5;\n\n  var refs = null;\n\n  function createVelem(type, props) {\n      return {\n          vtype: VELEMENT,\n          type: type,\n          props: props,\n          refs: refs\n      };\n  }\n\n  function createVstateless(type, props) {\n      return {\n          vtype: VSTATELESS,\n          id: getUid(),\n          type: type,\n          props: props\n      };\n  }\n\n  function createVcomponent(type, props) {\n      return {\n          vtype: VCOMPONENT,\n          id: getUid(),\n          type: type,\n          props: props,\n          refs: refs\n      };\n  }\n\n  function createVcomment(comment) {\n      return {\n          vtype: VCOMMENT,\n          comment: comment\n      };\n  }\n\n  function initVnode(vnode, parentContext, namespaceURI) {\n      var vtype = vnode.vtype;\n\n      var node = null;\n      if (!vtype) {\n          node = document.createTextNode(vnode);\n      } else if (vtype === VELEMENT) {\n          node = initVelem(vnode, parentContext, namespaceURI);\n      } else if (vtype === VCOMPONENT) {\n          node = initVcomponent(vnode, parentContext, namespaceURI);\n      } else if (vtype === VSTATELESS) {\n          node = initVstateless(vnode, parentContext, namespaceURI);\n      } else if (vtype === VCOMMENT) {\n          node = document.createComment(vnode.comment);\n      }\n      return node;\n  }\n\n  function destroyVnode(vnode, node) {\n      var vtype = vnode.vtype;\n\n      if (vtype === VELEMENT) {\n          destroyVelem(vnode, node);\n      } else if (vtype === VCOMPONENT) {\n          destroyVcomponent(vnode, node);\n      } else if (vtype === VSTATELESS) {\n          destroyVstateless(vnode, node);\n      }\n  }\n\n  function initVelem(velem, parentContext, namespaceURI) {\n      var type = velem.type;\n      var props = velem.props;\n\n      var node = null;\n\n      if (type === 'svg' || namespaceURI === SVGNamespaceURI) {\n          node = document.createElementNS(SVGNamespaceURI, type);\n          namespaceURI = SVGNamespaceURI;\n      } else {\n          node = document.createElement(type);\n      }\n\n      var children = props.children;\n\n      var vchildren = node.vchildren = [];\n      if (isArr(children)) {\n          flattenChildren(children, collectChild, vchildren);\n      } else {\n          collectChild(children, vchildren);\n      }\n\n      for (var i = 0, len = vchildren.length; i < len; i++) {\n          node.appendChild(initVnode(vchildren[i], parentContext, namespaceURI));\n      }\n\n      var isCustomComponent = type.indexOf('-') >= 0 || props.is != null;\n      setProps(node, props, isCustomComponent);\n\n      attachRef(velem.refs, velem.ref, node);\n\n      return node;\n  }\n\n  function collectChild(child, children) {\n      if (child != null && typeof child !== 'boolean') {\n          children[children.length] = child.vtype ? child : '' + child;\n      }\n  }\n\n  function updateVelem(velem, newVelem, node, parentContext) {\n      var props = velem.props;\n      var type = velem.type;\n\n      var newProps = newVelem.props;\n      var oldHtml = props.dangerouslySetInnerHTML && props.dangerouslySetInnerHTML.__html;\n      var newChildren = newProps.children;\n      var vchildren = node.vchildren;\n      var childNodes = node.childNodes;\n      var namespaceURI = node.namespaceURI;\n\n      var isCustomComponent = type.indexOf('-') >= 0 || props.is != null;\n      var vchildrenLen = vchildren.length;\n      var newVchildren = node.vchildren = [];\n\n      if (isArr(newChildren)) {\n          flattenChildren(newChildren, collectChild, newVchildren);\n      } else {\n          collectChild(newChildren, newVchildren);\n      }\n\n      var newVchildrenLen = newVchildren.length;\n\n      if (oldHtml == null && vchildrenLen) {\n          var shouldRemove = null;\n          var patches = Array(newVchildrenLen);\n\n          for (var i = 0; i < vchildrenLen; i++) {\n              var vnode = vchildren[i];\n              for (var j = 0; j < newVchildrenLen; j++) {\n                  if (patches[j]) {\n                      continue;\n                  }\n                  var newVnode = newVchildren[j];\n                  if (vnode === newVnode) {\n                      patches[j] = {\n                          vnode: vnode,\n                          node: childNodes[i]\n                      };\n                      vchildren[i] = null;\n                      break;\n                  }\n              }\n          }\n\n          outer: for (var i = 0; i < vchildrenLen; i++) {\n              var vnode = vchildren[i];\n              if (vnode === null) {\n                  continue;\n              }\n              var _type = vnode.type;\n              var key = vnode.key;\n              var _refs = vnode.refs;\n\n              var childNode = childNodes[i];\n\n              for (var j = 0; j < newVchildrenLen; j++) {\n                  if (patches[j]) {\n                      continue;\n                  }\n                  var newVnode = newVchildren[j];\n                  if (newVnode.type === _type && newVnode.key === key && newVnode.refs === _refs) {\n                      patches[j] = {\n                          vnode: vnode,\n                          node: childNode\n                      };\n                      continue outer;\n                  }\n              }\n\n              if (!shouldRemove) {\n                  shouldRemove = [];\n              }\n              shouldRemove[shouldRemove.length] = childNode;\n              // shouldRemove.push(childNode)\n              destroyVnode(vnode, childNode);\n          }\n\n          if (shouldRemove) {\n              for (var i = 0, len = shouldRemove.length; i < len; i++) {\n                  node.removeChild(shouldRemove[i]);\n              }\n          }\n\n          for (var i = 0; i < newVchildrenLen; i++) {\n              var newVnode = newVchildren[i];\n              var patchItem = patches[i];\n              if (patchItem) {\n                  var vnode = patchItem.vnode;\n                  var newChildNode = patchItem.node;\n                  if (newVnode !== vnode) {\n                      var vtype = newVnode.vtype;\n                      if (!vtype) {\n                          // textNode\n                          newChildNode.nodeValue = newVnode;\n                          // newChildNode.replaceData(0, vnode.length, newVnode)\n                      } else if (vtype === VELEMENT) {\n                              newChildNode = updateVelem(vnode, newVnode, newChildNode, parentContext);\n                          } else if (vtype === VCOMPONENT) {\n                              newChildNode = updateVcomponent(vnode, newVnode, newChildNode, parentContext);\n                          } else if (vtype === VSTATELESS) {\n                              newChildNode = updateVstateless(vnode, newVnode, newChildNode, parentContext);\n                          }\n                  }\n                  var currentNode = childNodes[i];\n                  if (currentNode !== newChildNode) {\n                      node.insertBefore(newChildNode, currentNode || null);\n                  }\n              } else {\n                  var newChildNode = initVnode(newVnode, parentContext, namespaceURI);\n                  node.insertBefore(newChildNode, childNodes[i] || null);\n              }\n          }\n          patchProps(node, props, newProps, isCustomComponent);\n      } else {\n          // should patch props first, make sure innerHTML was cleared\n          patchProps(node, props, newProps, isCustomComponent);\n          for (var i = 0; i < newVchildrenLen; i++) {\n              node.appendChild(initVnode(newVchildren[i], parentContext, namespaceURI));\n          }\n      }\n\n      if (velem.ref !== newVelem.ref) {\n          detachRef(velem.refs, velem.ref);\n          attachRef(newVelem.refs, newVelem.ref, node);\n      }\n      return node;\n  }\n\n  function destroyVelem(velem, node) {\n      var props = velem.props;\n      var vchildren = node.vchildren;\n      var childNodes = node.childNodes;\n\n      for (var i = 0, len = vchildren.length; i < len; i++) {\n          destroyVnode(vchildren[i], childNodes[i]);\n      }\n\n      detachRef(velem.refs, velem.ref);\n\n      node.eventStore = node.vchildren = null;\n      for (var key in props) {\n          if (props.hasOwnProperty(key) && EVENT_KEYS.test(key)) {\n              key = getEventName(key);\n              if (notBubbleEvents[key] === true) {\n                  node[key] = null;\n              }\n          }\n      }\n  }\n\n  function initVstateless(vstateless, parentContext, namespaceURI) {\n      var vnode = renderVstateless(vstateless, parentContext);\n      var node = initVnode(vnode, parentContext, namespaceURI);\n      node.cache = node.cache || {};\n      node.cache[vstateless.id] = vnode;\n      return node;\n  }\n  function updateVstateless(vstateless, newVstateless, node, parentContext) {\n      var id = vstateless.id;\n      var vnode = node.cache[id];\n      delete node.cache[id];\n      var newVnode = renderVstateless(newVstateless, parentContext);\n      var newNode = compareTwoVnodes(vnode, newVnode, node, parentContext);\n      newNode.cache = newNode.cache || {};\n      newNode.cache[newVstateless.id] = newVnode;\n      if (newNode !== node) {\n          extend(newNode.cache, node.cache);\n      }\n      return newNode;\n  }\n  function destroyVstateless(vstateless, node) {\n      var id = vstateless.id;\n      var vnode = node.cache[id];\n      delete node.cache[id];\n      destroyVnode(vnode, node);\n  }\n\n  function renderVstateless(vstateless, parentContext) {\n      var factory = vstateless.type;\n      var props = vstateless.props;\n\n      var componentContext = getContextByTypes(parentContext, factory.contextTypes);\n      var vnode = factory(props, componentContext);\n      if (vnode && vnode.render) {\n          vnode = vnode.render();\n      }\n      if (vnode === null || vnode === false) {\n          vnode = createVcomment('react-empty: ' + getUid());\n      } else if (!vnode || !vnode.vtype) {\n          throw new Error('@' + factory.name + '#render:You may have returned undefined, an array or some other invalid object');\n      }\n      return vnode;\n  }\n\n  function initVcomponent(vcomponent, parentContext, namespaceURI) {\n      var Component = vcomponent.type;\n      var props = vcomponent.props;\n      var id = vcomponent.id;\n\n      var componentContext = getContextByTypes(parentContext, Component.contextTypes);\n      var component = new Component(props, componentContext);\n      var updater = component.$updater;\n      var cache = component.$cache;\n\n      cache.parentContext = parentContext;\n      updater.isPending = true;\n      component.props = component.props || props;\n      component.context = component.context || componentContext;\n      if (component.componentWillMount) {\n          component.componentWillMount();\n          component.state = updater.getState();\n      }\n      var vnode = renderComponent(component, parentContext);\n      var node = initVnode(vnode, vnode.context, namespaceURI);\n      node.cache = node.cache || {};\n      node.cache[id] = component;\n      cache.vnode = vnode;\n      cache.node = node;\n      cache.isMounted = true;\n      pendingComponents.push(component);\n      attachRef(vcomponent.refs, vcomponent.ref, component);\n      return node;\n  }\n  function updateVcomponent(vcomponent, newVcomponent, node, parentContext) {\n      var id = vcomponent.id;\n      var component = node.cache[id];\n      var updater = component.$updater;\n      var cache = component.$cache;\n      var Component = newVcomponent.type;\n      var nextProps = newVcomponent.props;\n\n      var componentContext = getContextByTypes(parentContext, Component.contextTypes);\n      delete node.cache[id];\n      node.cache[newVcomponent.id] = component;\n      cache.parentContext = parentContext;\n      if (component.componentWillReceiveProps) {\n          updater.isPending = true;\n          component.componentWillReceiveProps(nextProps, componentContext);\n          updater.isPending = false;\n      }\n      updater.emitUpdate(nextProps, componentContext);\n\n      if (vcomponent.ref !== newVcomponent.ref) {\n          detachRef(vcomponent.refs, vcomponent.ref);\n          attachRef(newVcomponent.refs, newVcomponent.ref, component);\n      }\n      return cache.node;\n  }\n  function destroyVcomponent(vcomponent, node) {\n      var id = vcomponent.id;\n      var component = node.cache[id];\n      var cache = component.$cache;\n      delete node.cache[id];\n      detachRef(vcomponent.refs, vcomponent.ref);\n      component.setState = component.forceUpdate = noop;\n      if (component.componentWillUnmount) {\n          component.componentWillUnmount();\n      }\n      destroyVnode(cache.vnode, node);\n      delete component.setState;\n      cache.isMounted = false;\n      cache.node = cache.parentContext = cache.vnode = component.refs = component.context = null;\n  }\n\n  function getContextByTypes(curContext, contextTypes) {\n      var context = {};\n      if (!contextTypes || !curContext) {\n          return context;\n      }\n      for (var key in contextTypes) {\n          if (contextTypes.hasOwnProperty(key)) {\n              context[key] = curContext[key];\n          }\n      }\n      return context;\n  }\n\n  function renderComponent(component, parentContext) {\n      refs = component.refs;\n      var vnode = component.render();\n\n      if (vnode === null || vnode === false) {\n          vnode = createVcomment('react-empty: ' + getUid());\n      } else if (!vnode || !vnode.vtype) {\n          throw new Error('@' + component.constructor.name + '#render:You may have returned undefined, an array or some other invalid object');\n      }\n\n      var curContext = refs = null;\n      if (component.getChildContext) {\n          curContext = component.getChildContext();\n      }\n      if (curContext) {\n          curContext = extend(extend({}, parentContext), curContext);\n      } else {\n          curContext = parentContext;\n      }\n      vnode.context = curContext;\n      return vnode;\n  }\n\n  var pendingComponents = [];\n\n  function clearPendingComponents() {\n      var components = pendingComponents;\n      var len = components.length;\n      if (!len) {\n          return;\n      }\n      pendingComponents = [];\n      var i = -1;\n      while (len--) {\n          var component = components[++i];\n          var updater = component.$updater;\n          if (component.componentDidMount) {\n              component.componentDidMount();\n          }\n          updater.isPending = false;\n          updater.emitUpdate();\n      }\n  }\n\n  function compareTwoVnodes(vnode, newVnode, node, parentContext) {\n      var newNode = node;\n\n      if (newVnode == null) {\n          // remove\n          destroyVnode(vnode, node);\n          node.parentNode.removeChild(node);\n      } else if (vnode.type !== newVnode.type || newVnode.key !== vnode.key) {\n          // replace\n          destroyVnode(vnode, node);\n          newNode = initVnode(newVnode, parentContext, node.namespaceURI);\n          node.parentNode.replaceChild(newNode, node);\n      } else if (vnode !== newVnode) {\n          // same type and same key -> update\n          var vtype = vnode.vtype;\n          if (vtype === VELEMENT) {\n              newNode = updateVelem(vnode, newVnode, node, parentContext);\n          } else if (vtype === VCOMPONENT) {\n              newNode = updateVcomponent(vnode, newVnode, node, parentContext);\n          } else if (vtype === VSTATELESS) {\n              newNode = updateVstateless(vnode, newVnode, node, parentContext);\n          }\n      }\n\n      return newNode;\n  }\n\n  function getDOMNode() {\n      return this;\n  }\n\n  function attachRef(refs, refKey, refValue) {\n      if (!refs || refKey == null || !refValue) {\n          return;\n      }\n      if (refValue.nodeName && !refValue.getDOMNode) {\n          // support react v0.13 style: this.refs.myInput.getDOMNode()\n          refValue.getDOMNode = getDOMNode;\n      }\n      if (isFn(refKey)) {\n          refKey(refValue);\n      } else {\n          refs[refKey] = refValue;\n      }\n  }\n\n  function detachRef(refs, refKey) {\n      if (!refs || refKey == null) {\n          return;\n      }\n      if (isFn(refKey)) {\n          refKey(null);\n      } else {\n          delete refs[refKey];\n      }\n  }\n\n  var updateQueue = {\n  \tupdaters: [],\n  \tisPending: false,\n  \tadd: function add(updater) {\n  \t\tthis.updaters.push(updater);\n  \t},\n  \tbatchUpdate: function batchUpdate() {\n  \t\tif (this.isPending) {\n  \t\t\treturn;\n  \t\t}\n  \t\tthis.isPending = true;\n  \t\t/*\n     each updater.update may add new updater to updateQueue\n     clear them with a loop\n     event bubbles from bottom-level to top-level\n     reverse the updater order can merge some props and state and reduce the refresh times\n     see Updater.update method below to know why\n    */\n  \t\tvar updaters = this.updaters;\n\n  \t\tvar updater = undefined;\n  \t\twhile (updater = updaters.pop()) {\n  \t\t\tupdater.updateComponent();\n  \t\t}\n  \t\tthis.isPending = false;\n  \t}\n  };\n\n  function Updater(instance) {\n  \tthis.instance = instance;\n  \tthis.pendingStates = [];\n  \tthis.pendingCallbacks = [];\n  \tthis.isPending = false;\n  \tthis.nextProps = this.nextContext = null;\n  \tthis.clearCallbacks = this.clearCallbacks.bind(this);\n  }\n\n  Updater.prototype = {\n  \temitUpdate: function emitUpdate(nextProps, nextContext) {\n  \t\tthis.nextProps = nextProps;\n  \t\tthis.nextContext = nextContext;\n  \t\t// receive nextProps!! should update immediately\n  \t\tnextProps || !updateQueue.isPending ? this.updateComponent() : updateQueue.add(this);\n  \t},\n  \tupdateComponent: function updateComponent() {\n  \t\tvar instance = this.instance;\n  \t\tvar pendingStates = this.pendingStates;\n  \t\tvar nextProps = this.nextProps;\n  \t\tvar nextContext = this.nextContext;\n\n  \t\tif (nextProps || pendingStates.length > 0) {\n  \t\t\tnextProps = nextProps || instance.props;\n  \t\t\tnextContext = nextContext || instance.context;\n  \t\t\tthis.nextProps = this.nextContext = null;\n  \t\t\t// merge the nextProps and nextState and update by one time\n  \t\t\tshouldUpdate(instance, nextProps, this.getState(), nextContext, this.clearCallbacks);\n  \t\t}\n  \t},\n  \taddState: function addState(nextState) {\n  \t\tif (nextState) {\n  \t\t\tthis.pendingStates.push(nextState);\n  \t\t\tif (!this.isPending) {\n  \t\t\t\tthis.emitUpdate();\n  \t\t\t}\n  \t\t}\n  \t},\n  \treplaceState: function replaceState(nextState) {\n  \t\tvar pendingStates = this.pendingStates;\n\n  \t\tpendingStates.pop();\n  \t\t// push special params to point out should replace state\n  \t\tpendingStates.push([nextState]);\n  \t},\n  \tgetState: function getState() {\n  \t\tvar instance = this.instance;\n  \t\tvar pendingStates = this.pendingStates;\n  \t\tvar state = instance.state;\n  \t\tvar props = instance.props;\n\n  \t\tif (pendingStates.length) {\n  \t\t\tstate = extend({}, state);\n  \t\t\teachItem(pendingStates, function (nextState) {\n  \t\t\t\t// replace state\n  \t\t\t\tif (isArr(nextState)) {\n  \t\t\t\t\tstate = extend({}, nextState[0]);\n  \t\t\t\t\treturn;\n  \t\t\t\t}\n  \t\t\t\tif (isFn(nextState)) {\n  \t\t\t\t\tnextState = nextState.call(instance, state, props);\n  \t\t\t\t}\n  \t\t\t\textend(state, nextState);\n  \t\t\t});\n  \t\t\tpendingStates.length = 0;\n  \t\t}\n  \t\treturn state;\n  \t},\n  \tclearCallbacks: function clearCallbacks() {\n  \t\tvar pendingCallbacks = this.pendingCallbacks;\n  \t\tvar instance = this.instance;\n\n  \t\tif (pendingCallbacks.length > 0) {\n  \t\t\tthis.pendingCallbacks = [];\n  \t\t\teachItem(pendingCallbacks, function (callback) {\n  \t\t\t\treturn callback.call(instance);\n  \t\t\t});\n  \t\t}\n  \t},\n  \taddCallback: function addCallback(callback) {\n  \t\tif (isFn(callback)) {\n  \t\t\tthis.pendingCallbacks.push(callback);\n  \t\t}\n  \t}\n  };\n  function Component(props, context) {\n  \tthis.$updater = new Updater(this);\n  \tthis.$cache = { isMounted: false };\n  \tthis.props = props;\n  \tthis.state = {};\n  \tthis.refs = {};\n  \tthis.context = context;\n  }\n\n  Component.prototype = {\n  \tconstructor: Component,\n  \t// getChildContext: _.noop,\n  \t// componentWillUpdate: _.noop,\n  \t// componentDidUpdate: _.noop,\n  \t// componentWillReceiveProps: _.noop,\n  \t// componentWillMount: _.noop,\n  \t// componentDidMount: _.noop,\n  \t// componentWillUnmount: _.noop,\n  \t// shouldComponentUpdate(nextProps, nextState) {\n  \t// \treturn true\n  \t// },\n  \tforceUpdate: function forceUpdate(callback) {\n  \t\tvar $updater = this.$updater;\n  \t\tvar $cache = this.$cache;\n  \t\tvar props = this.props;\n  \t\tvar state = this.state;\n  \t\tvar context = this.context;\n\n  \t\tif ($updater.isPending || !$cache.isMounted) {\n  \t\t\treturn;\n  \t\t}\n  \t\tvar nextProps = $cache.props || props;\n  \t\tvar nextState = $cache.state || state;\n  \t\tvar nextContext = $cache.context || {};\n  \t\tvar parentContext = $cache.parentContext;\n  \t\tvar node = $cache.node;\n  \t\tvar vnode = $cache.vnode;\n  \t\t$cache.props = $cache.state = $cache.context = null;\n  \t\t$updater.isPending = true;\n  \t\tif (this.componentWillUpdate) {\n  \t\t\tthis.componentWillUpdate(nextProps, nextState, nextContext);\n  \t\t}\n  \t\tthis.state = nextState;\n  \t\tthis.props = nextProps;\n  \t\tthis.context = nextContext;\n  \t\tvar newVnode = renderComponent(this, parentContext);\n  \t\tvar newNode = compareTwoVnodes(vnode, newVnode, node, newVnode.context);\n  \t\tif (newNode !== node) {\n  \t\t\tnewNode.cache = newNode.cache || {};\n  \t\t\textend(newNode.cache, node.cache);\n  \t\t}\n  \t\t$cache.vnode = newVnode;\n  \t\t$cache.node = newNode;\n  \t\tclearPendingComponents();\n  \t\tif (this.componentDidUpdate) {\n  \t\t\tthis.componentDidUpdate(props, state, context);\n  \t\t}\n  \t\tif (callback) {\n  \t\t\tcallback.call(this);\n  \t\t}\n  \t\t$updater.isPending = false;\n  \t\t$updater.emitUpdate();\n  \t},\n  \tsetState: function setState(nextState, callback) {\n  \t\tvar $updater = this.$updater;\n\n  \t\t$updater.addCallback(callback);\n  \t\t$updater.addState(nextState);\n  \t},\n  \treplaceState: function replaceState(nextState, callback) {\n  \t\tvar $updater = this.$updater;\n\n  \t\t$updater.addCallback(callback);\n  \t\t$updater.replaceState(nextState);\n  \t},\n  \tgetDOMNode: function getDOMNode() {\n  \t\tvar node = this.$cache.node;\n  \t\treturn node && node.nodeName === '#comment' ? null : node;\n  \t},\n  \tisMounted: function isMounted() {\n  \t\treturn this.$cache.isMounted;\n  \t}\n  };\n\n  function shouldUpdate(component, nextProps, nextState, nextContext, callback) {\n  \tvar shouldComponentUpdate = true;\n  \tif (component.shouldComponentUpdate) {\n  \t\tshouldComponentUpdate = component.shouldComponentUpdate(nextProps, nextState, nextContext);\n  \t}\n  \tif (shouldComponentUpdate === false) {\n  \t\tcomponent.props = nextProps;\n  \t\tcomponent.state = nextState;\n  \t\tcomponent.context = nextContext || {};\n  \t\treturn;\n  \t}\n  \tvar cache = component.$cache;\n  \tcache.props = nextProps;\n  \tcache.state = nextState;\n  \tcache.context = nextContext || {};\n  \tcomponent.forceUpdate(callback);\n  }\n\n  // event config\n  var notBubbleEvents = {\n  \tonmouseleave: 1,\n  \tonmouseenter: 1,\n  \tonload: 1,\n  \tonunload: 1,\n  \tonscroll: 1,\n  \tonfocus: 1,\n  \tonblur: 1,\n  \tonrowexit: 1,\n  \tonbeforeunload: 1,\n  \tonstop: 1,\n  \tondragdrop: 1,\n  \tondragenter: 1,\n  \tondragexit: 1,\n  \tondraggesture: 1,\n  \tondragover: 1,\n  \toncontextmenu: 1\n  };\n\n  function getEventName(key) {\n  \tkey = key === 'onDoubleClick' ? 'ondblclick' : key;\n  \treturn key.toLowerCase();\n  }\n\n  var eventTypes = {};\n\n  function addEvent(elem, eventType, listener) {\n  \teventType = getEventName(eventType);\n\n  \tif (notBubbleEvents[eventType] === 1) {\n  \t\telem[eventType] = listener;\n  \t\treturn;\n  \t}\n\n  \tvar eventStore = elem.eventStore || (elem.eventStore = {});\n  \teventStore[eventType] = listener;\n\n  \tif (!eventTypes[eventType]) {\n  \t\t// onclick -> click\n  \t\tdocument.addEventListener(eventType.substr(2), dispatchEvent);\n  \t\teventTypes[eventType] = true;\n  \t}\n\n  \tvar nodeName = elem.nodeName;\n\n  \tif (eventType === 'onchange' && (nodeName === 'INPUT' || nodeName === 'TEXTAREA')) {\n  \t\taddEvent(elem, 'oninput', listener);\n  \t}\n  }\n\n  function removeEvent(elem, eventType) {\n  \teventType = getEventName(eventType);\n  \tif (notBubbleEvents[eventType] === 1) {\n  \t\telem[eventType] = null;\n  \t\treturn;\n  \t}\n\n  \tvar eventStore = elem.eventStore || (elem.eventStore = {});\n  \tdelete eventStore[eventType];\n\n  \tvar nodeName = elem.nodeName;\n\n  \tif (eventType === 'onchange' && (nodeName === 'INPUT' || nodeName === 'TEXTAREA')) {\n  \t\tdelete eventStore['oninput'];\n  \t}\n  }\n\n  function dispatchEvent(event) {\n  \tvar target = event.target;\n  \tvar type = event.type;\n\n  \tvar eventType = 'on' + type;\n  \tvar syntheticEvent = undefined;\n  \tupdateQueue.isPending = true;\n  \twhile (target) {\n  \t\tvar _target = target;\n  \t\tvar eventStore = _target.eventStore;\n\n  \t\tvar listener = eventStore && eventStore[eventType];\n  \t\tif (!listener) {\n  \t\t\ttarget = target.parentNode;\n  \t\t\tcontinue;\n  \t\t}\n  \t\tif (!syntheticEvent) {\n  \t\t\tsyntheticEvent = createSyntheticEvent(event);\n  \t\t}\n  \t\tsyntheticEvent.currentTarget = target;\n  \t\tlistener.call(target, syntheticEvent);\n  \t\tif (syntheticEvent.$cancalBubble) {\n  \t\t\tbreak;\n  \t\t}\n  \t\ttarget = target.parentNode;\n  \t}\n  \tupdateQueue.isPending = false;\n  \tupdateQueue.batchUpdate();\n  }\n\n  function createSyntheticEvent(nativeEvent) {\n  \tvar syntheticEvent = {};\n  \tvar cancalBubble = function cancalBubble() {\n  \t\treturn syntheticEvent.$cancalBubble = true;\n  \t};\n  \tsyntheticEvent.nativeEvent = nativeEvent;\n  \tfor (var key in nativeEvent) {\n  \t\tif (typeof nativeEvent[key] !== 'function') {\n  \t\t\tsyntheticEvent[key] = nativeEvent[key];\n  \t\t} else if (key === 'stopPropagation' || key === 'stopImmediatePropagation') {\n  \t\t\tsyntheticEvent[key] = cancalBubble;\n  \t\t} else {\n  \t\t\tsyntheticEvent[key] = nativeEvent[key].bind(nativeEvent);\n  \t\t}\n  \t}\n  \treturn syntheticEvent;\n  }\n\n  function setStyle(elemStyle, styles) {\n      for (var styleName in styles) {\n          if (styles.hasOwnProperty(styleName)) {\n              setStyleValue(elemStyle, styleName, styles[styleName]);\n          }\n      }\n  }\n\n  function removeStyle(elemStyle, styles) {\n      for (var styleName in styles) {\n          if (styles.hasOwnProperty(styleName)) {\n              elemStyle[styleName] = '';\n          }\n      }\n  }\n\n  function patchStyle(elemStyle, style, newStyle) {\n      if (style === newStyle) {\n          return;\n      }\n      if (!newStyle && style) {\n          removeStyle(elemStyle, style);\n          return;\n      } else if (newStyle && !style) {\n          setStyle(elemStyle, newStyle);\n          return;\n      }\n\n      var keyMap = {};\n      for (var key in style) {\n          if (style.hasOwnProperty(key)) {\n              keyMap[key] = true;\n              if (style[key] !== newStyle[key]) {\n                  setStyleValue(elemStyle, key, newStyle[key]);\n              }\n          }\n      }\n      for (var key in newStyle) {\n          if (newStyle.hasOwnProperty(key) && keyMap[key] !== true) {\n              if (style[key] !== newStyle[key]) {\n                  setStyleValue(elemStyle, key, newStyle[key]);\n              }\n          }\n      }\n  }\n\n  /**\n   * CSS properties which accept numbers but are not in units of \"px\".\n   */\n  var isUnitlessNumber = {\n      animationIterationCount: 1,\n      borderImageOutset: 1,\n      borderImageSlice: 1,\n      borderImageWidth: 1,\n      boxFlex: 1,\n      boxFlexGroup: 1,\n      boxOrdinalGroup: 1,\n      columnCount: 1,\n      flex: 1,\n      flexGrow: 1,\n      flexPositive: 1,\n      flexShrink: 1,\n      flexNegative: 1,\n      flexOrder: 1,\n      gridRow: 1,\n      gridColumn: 1,\n      fontWeight: 1,\n      lineClamp: 1,\n      lineHeight: 1,\n      opacity: 1,\n      order: 1,\n      orphans: 1,\n      tabSize: 1,\n      widows: 1,\n      zIndex: 1,\n      zoom: 1,\n\n      // SVG-related properties\n      fillOpacity: 1,\n      floodOpacity: 1,\n      stopOpacity: 1,\n      strokeDasharray: 1,\n      strokeDashoffset: 1,\n      strokeMiterlimit: 1,\n      strokeOpacity: 1,\n      strokeWidth: 1\n  };\n\n  function prefixKey(prefix, key) {\n      return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n  }\n\n  var prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n  Object.keys(isUnitlessNumber).forEach(function (prop) {\n      prefixes.forEach(function (prefix) {\n          isUnitlessNumber[prefixKey(prefix, prop)] = 1;\n      });\n  });\n\n  var RE_NUMBER = /^-?\\d+(\\.\\d+)?$/;\n  function setStyleValue(elemStyle, styleName, styleValue) {\n\n      if (!isUnitlessNumber[styleName] && RE_NUMBER.test(styleValue)) {\n          elemStyle[styleName] = styleValue + 'px';\n          return;\n      }\n\n      if (styleName === 'float') {\n          styleName = 'cssFloat';\n      }\n\n      if (styleValue == null || typeof styleValue === 'boolean') {\n          styleValue = '';\n      }\n\n      elemStyle[styleName] = styleValue;\n  }\n\n  var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n  var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\uB7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\n\n  var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\n  var isCustomAttribute = RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$'));\n  // will merge some data in properties below\n  var properties = {};\n\n  /**\n   * Mapping from normalized, camelcased property names to a configuration that\n   * specifies how the associated DOM property should be accessed or rendered.\n   */\n  var MUST_USE_PROPERTY = 0x1;\n  var HAS_BOOLEAN_VALUE = 0x4;\n  var HAS_NUMERIC_VALUE = 0x8;\n  var HAS_POSITIVE_NUMERIC_VALUE = 0x10 | 0x8;\n  var HAS_OVERLOADED_BOOLEAN_VALUE = 0x20;\n\n  // html config\n  var HTMLDOMPropertyConfig = {\n      props: {\n          /**\n           * Standard Properties\n           */\n          accept: 0,\n          acceptCharset: 0,\n          accessKey: 0,\n          action: 0,\n          allowFullScreen: HAS_BOOLEAN_VALUE,\n          allowTransparency: 0,\n          alt: 0,\n          async: HAS_BOOLEAN_VALUE,\n          autoComplete: 0,\n          autoFocus: HAS_BOOLEAN_VALUE,\n          autoPlay: HAS_BOOLEAN_VALUE,\n          capture: HAS_BOOLEAN_VALUE,\n          cellPadding: 0,\n          cellSpacing: 0,\n          charSet: 0,\n          challenge: 0,\n          checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n          cite: 0,\n          classID: 0,\n          className: 0,\n          cols: HAS_POSITIVE_NUMERIC_VALUE,\n          colSpan: 0,\n          content: 0,\n          contentEditable: 0,\n          contextMenu: 0,\n          controls: HAS_BOOLEAN_VALUE,\n          coords: 0,\n          crossOrigin: 0,\n          data: 0, // For `<object />` acts as `src`.\n          dateTime: 0,\n          'default': HAS_BOOLEAN_VALUE,\n          // not in regular react, they did it in other way\n          defaultValue: MUST_USE_PROPERTY,\n          // not in regular react, they did it in other way\n          defaultChecked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n          defer: HAS_BOOLEAN_VALUE,\n          dir: 0,\n          disabled: HAS_BOOLEAN_VALUE,\n          download: HAS_OVERLOADED_BOOLEAN_VALUE,\n          draggable: 0,\n          encType: 0,\n          form: 0,\n          formAction: 0,\n          formEncType: 0,\n          formMethod: 0,\n          formNoValidate: HAS_BOOLEAN_VALUE,\n          formTarget: 0,\n          frameBorder: 0,\n          headers: 0,\n          height: 0,\n          hidden: HAS_BOOLEAN_VALUE,\n          high: 0,\n          href: 0,\n          hrefLang: 0,\n          htmlFor: 0,\n          httpEquiv: 0,\n          icon: 0,\n          id: 0,\n          inputMode: 0,\n          integrity: 0,\n          is: 0,\n          keyParams: 0,\n          keyType: 0,\n          kind: 0,\n          label: 0,\n          lang: 0,\n          list: 0,\n          loop: HAS_BOOLEAN_VALUE,\n          low: 0,\n          manifest: 0,\n          marginHeight: 0,\n          marginWidth: 0,\n          max: 0,\n          maxLength: 0,\n          media: 0,\n          mediaGroup: 0,\n          method: 0,\n          min: 0,\n          minLength: 0,\n          // Caution; `option.selected` is not updated if `select.multiple` is\n          // disabled with `removeAttribute`.\n          multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n          muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n          name: 0,\n          nonce: 0,\n          noValidate: HAS_BOOLEAN_VALUE,\n          open: HAS_BOOLEAN_VALUE,\n          optimum: 0,\n          pattern: 0,\n          placeholder: 0,\n          poster: 0,\n          preload: 0,\n          profile: 0,\n          radioGroup: 0,\n          readOnly: HAS_BOOLEAN_VALUE,\n          rel: 0,\n          required: HAS_BOOLEAN_VALUE,\n          reversed: HAS_BOOLEAN_VALUE,\n          role: 0,\n          rows: HAS_POSITIVE_NUMERIC_VALUE,\n          rowSpan: HAS_NUMERIC_VALUE,\n          sandbox: 0,\n          scope: 0,\n          scoped: HAS_BOOLEAN_VALUE,\n          scrolling: 0,\n          seamless: HAS_BOOLEAN_VALUE,\n          selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n          shape: 0,\n          size: HAS_POSITIVE_NUMERIC_VALUE,\n          sizes: 0,\n          span: HAS_POSITIVE_NUMERIC_VALUE,\n          spellCheck: 0,\n          src: 0,\n          srcDoc: 0,\n          srcLang: 0,\n          srcSet: 0,\n          start: HAS_NUMERIC_VALUE,\n          step: 0,\n          style: 0,\n          summary: 0,\n          tabIndex: 0,\n          target: 0,\n          title: 0,\n          // Setting .type throws on non-<input> tags\n          type: 0,\n          useMap: 0,\n          value: MUST_USE_PROPERTY,\n          width: 0,\n          wmode: 0,\n          wrap: 0,\n\n          /**\n           * RDFa Properties\n           */\n          about: 0,\n          datatype: 0,\n          inlist: 0,\n          prefix: 0,\n          // property is also supported for OpenGraph in meta tags.\n          property: 0,\n          resource: 0,\n          'typeof': 0,\n          vocab: 0,\n\n          /**\n           * Non-standard Properties\n           */\n          // autoCapitalize and autoCorrect are supported in Mobile Safari for\n          // keyboard hints.\n          autoCapitalize: 0,\n          autoCorrect: 0,\n          // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n          autoSave: 0,\n          // color is for Safari mask-icon link\n          color: 0,\n          // itemProp, itemScope, itemType are for\n          // Microdata support. See http://schema.org/docs/gs.html\n          itemProp: 0,\n          itemScope: HAS_BOOLEAN_VALUE,\n          itemType: 0,\n          // itemID and itemRef are for Microdata support as well but\n          // only specified in the WHATWG spec document. See\n          // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n          itemID: 0,\n          itemRef: 0,\n          // results show looking glass icon and recent searches on input\n          // search fields in WebKit/Blink\n          results: 0,\n          // IE-only attribute that specifies security restrictions on an iframe\n          // as an alternative to the sandbox attribute on IE<10\n          security: 0,\n          // IE-only attribute that controls focus behavior\n          unselectable: 0\n      },\n      attrNS: {},\n      domAttrs: {\n          acceptCharset: 'accept-charset',\n          className: 'class',\n          htmlFor: 'for',\n          httpEquiv: 'http-equiv'\n      },\n      domProps: {}\n  };\n\n  // svg config\n  var xlink = 'http://www.w3.org/1999/xlink';\n  var xml = 'http://www.w3.org/XML/1998/namespace';\n\n  // We use attributes for everything SVG so let's avoid some duplication and run\n  // code instead.\n  // The following are all specified in the HTML config already so we exclude here.\n  // - class (as className)\n  // - color\n  // - height\n  // - id\n  // - lang\n  // - max\n  // - media\n  // - method\n  // - min\n  // - name\n  // - style\n  // - target\n  // - type\n  // - width\n  var ATTRS = {\n      accentHeight: 'accent-height',\n      accumulate: 0,\n      additive: 0,\n      alignmentBaseline: 'alignment-baseline',\n      allowReorder: 'allowReorder',\n      alphabetic: 0,\n      amplitude: 0,\n      arabicForm: 'arabic-form',\n      ascent: 0,\n      attributeName: 'attributeName',\n      attributeType: 'attributeType',\n      autoReverse: 'autoReverse',\n      azimuth: 0,\n      baseFrequency: 'baseFrequency',\n      baseProfile: 'baseProfile',\n      baselineShift: 'baseline-shift',\n      bbox: 0,\n      begin: 0,\n      bias: 0,\n      by: 0,\n      calcMode: 'calcMode',\n      capHeight: 'cap-height',\n      clip: 0,\n      clipPath: 'clip-path',\n      clipRule: 'clip-rule',\n      clipPathUnits: 'clipPathUnits',\n      colorInterpolation: 'color-interpolation',\n      colorInterpolationFilters: 'color-interpolation-filters',\n      colorProfile: 'color-profile',\n      colorRendering: 'color-rendering',\n      contentScriptType: 'contentScriptType',\n      contentStyleType: 'contentStyleType',\n      cursor: 0,\n      cx: 0,\n      cy: 0,\n      d: 0,\n      decelerate: 0,\n      descent: 0,\n      diffuseConstant: 'diffuseConstant',\n      direction: 0,\n      display: 0,\n      divisor: 0,\n      dominantBaseline: 'dominant-baseline',\n      dur: 0,\n      dx: 0,\n      dy: 0,\n      edgeMode: 'edgeMode',\n      elevation: 0,\n      enableBackground: 'enable-background',\n      end: 0,\n      exponent: 0,\n      externalResourcesRequired: 'externalResourcesRequired',\n      fill: 0,\n      fillOpacity: 'fill-opacity',\n      fillRule: 'fill-rule',\n      filter: 0,\n      filterRes: 'filterRes',\n      filterUnits: 'filterUnits',\n      floodColor: 'flood-color',\n      floodOpacity: 'flood-opacity',\n      focusable: 0,\n      fontFamily: 'font-family',\n      fontSize: 'font-size',\n      fontSizeAdjust: 'font-size-adjust',\n      fontStretch: 'font-stretch',\n      fontStyle: 'font-style',\n      fontVariant: 'font-variant',\n      fontWeight: 'font-weight',\n      format: 0,\n      from: 0,\n      fx: 0,\n      fy: 0,\n      g1: 0,\n      g2: 0,\n      glyphName: 'glyph-name',\n      glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n      glyphOrientationVertical: 'glyph-orientation-vertical',\n      glyphRef: 'glyphRef',\n      gradientTransform: 'gradientTransform',\n      gradientUnits: 'gradientUnits',\n      hanging: 0,\n      horizAdvX: 'horiz-adv-x',\n      horizOriginX: 'horiz-origin-x',\n      ideographic: 0,\n      imageRendering: 'image-rendering',\n      'in': 0,\n      in2: 0,\n      intercept: 0,\n      k: 0,\n      k1: 0,\n      k2: 0,\n      k3: 0,\n      k4: 0,\n      kernelMatrix: 'kernelMatrix',\n      kernelUnitLength: 'kernelUnitLength',\n      kerning: 0,\n      keyPoints: 'keyPoints',\n      keySplines: 'keySplines',\n      keyTimes: 'keyTimes',\n      lengthAdjust: 'lengthAdjust',\n      letterSpacing: 'letter-spacing',\n      lightingColor: 'lighting-color',\n      limitingConeAngle: 'limitingConeAngle',\n      local: 0,\n      markerEnd: 'marker-end',\n      markerMid: 'marker-mid',\n      markerStart: 'marker-start',\n      markerHeight: 'markerHeight',\n      markerUnits: 'markerUnits',\n      markerWidth: 'markerWidth',\n      mask: 0,\n      maskContentUnits: 'maskContentUnits',\n      maskUnits: 'maskUnits',\n      mathematical: 0,\n      mode: 0,\n      numOctaves: 'numOctaves',\n      offset: 0,\n      opacity: 0,\n      operator: 0,\n      order: 0,\n      orient: 0,\n      orientation: 0,\n      origin: 0,\n      overflow: 0,\n      overlinePosition: 'overline-position',\n      overlineThickness: 'overline-thickness',\n      paintOrder: 'paint-order',\n      panose1: 'panose-1',\n      pathLength: 'pathLength',\n      patternContentUnits: 'patternContentUnits',\n      patternTransform: 'patternTransform',\n      patternUnits: 'patternUnits',\n      pointerEvents: 'pointer-events',\n      points: 0,\n      pointsAtX: 'pointsAtX',\n      pointsAtY: 'pointsAtY',\n      pointsAtZ: 'pointsAtZ',\n      preserveAlpha: 'preserveAlpha',\n      preserveAspectRatio: 'preserveAspectRatio',\n      primitiveUnits: 'primitiveUnits',\n      r: 0,\n      radius: 0,\n      refX: 'refX',\n      refY: 'refY',\n      renderingIntent: 'rendering-intent',\n      repeatCount: 'repeatCount',\n      repeatDur: 'repeatDur',\n      requiredExtensions: 'requiredExtensions',\n      requiredFeatures: 'requiredFeatures',\n      restart: 0,\n      result: 0,\n      rotate: 0,\n      rx: 0,\n      ry: 0,\n      scale: 0,\n      seed: 0,\n      shapeRendering: 'shape-rendering',\n      slope: 0,\n      spacing: 0,\n      specularConstant: 'specularConstant',\n      specularExponent: 'specularExponent',\n      speed: 0,\n      spreadMethod: 'spreadMethod',\n      startOffset: 'startOffset',\n      stdDeviation: 'stdDeviation',\n      stemh: 0,\n      stemv: 0,\n      stitchTiles: 'stitchTiles',\n      stopColor: 'stop-color',\n      stopOpacity: 'stop-opacity',\n      strikethroughPosition: 'strikethrough-position',\n      strikethroughThickness: 'strikethrough-thickness',\n      string: 0,\n      stroke: 0,\n      strokeDasharray: 'stroke-dasharray',\n      strokeDashoffset: 'stroke-dashoffset',\n      strokeLinecap: 'stroke-linecap',\n      strokeLinejoin: 'stroke-linejoin',\n      strokeMiterlimit: 'stroke-miterlimit',\n      strokeOpacity: 'stroke-opacity',\n      strokeWidth: 'stroke-width',\n      surfaceScale: 'surfaceScale',\n      systemLanguage: 'systemLanguage',\n      tableValues: 'tableValues',\n      targetX: 'targetX',\n      targetY: 'targetY',\n      textAnchor: 'text-anchor',\n      textDecoration: 'text-decoration',\n      textRendering: 'text-rendering',\n      textLength: 'textLength',\n      to: 0,\n      transform: 0,\n      u1: 0,\n      u2: 0,\n      underlinePosition: 'underline-position',\n      underlineThickness: 'underline-thickness',\n      unicode: 0,\n      unicodeBidi: 'unicode-bidi',\n      unicodeRange: 'unicode-range',\n      unitsPerEm: 'units-per-em',\n      vAlphabetic: 'v-alphabetic',\n      vHanging: 'v-hanging',\n      vIdeographic: 'v-ideographic',\n      vMathematical: 'v-mathematical',\n      values: 0,\n      vectorEffect: 'vector-effect',\n      version: 0,\n      vertAdvY: 'vert-adv-y',\n      vertOriginX: 'vert-origin-x',\n      vertOriginY: 'vert-origin-y',\n      viewBox: 'viewBox',\n      viewTarget: 'viewTarget',\n      visibility: 0,\n      widths: 0,\n      wordSpacing: 'word-spacing',\n      writingMode: 'writing-mode',\n      x: 0,\n      xHeight: 'x-height',\n      x1: 0,\n      x2: 0,\n      xChannelSelector: 'xChannelSelector',\n      xlinkActuate: 'xlink:actuate',\n      xlinkArcrole: 'xlink:arcrole',\n      xlinkHref: 'xlink:href',\n      xlinkRole: 'xlink:role',\n      xlinkShow: 'xlink:show',\n      xlinkTitle: 'xlink:title',\n      xlinkType: 'xlink:type',\n      xmlBase: 'xml:base',\n      xmlLang: 'xml:lang',\n      xmlSpace: 'xml:space',\n      y: 0,\n      y1: 0,\n      y2: 0,\n      yChannelSelector: 'yChannelSelector',\n      z: 0,\n      zoomAndPan: 'zoomAndPan'\n  };\n\n  var SVGDOMPropertyConfig = {\n      props: {},\n      attrNS: {\n          xlinkActuate: xlink,\n          xlinkArcrole: xlink,\n          xlinkHref: xlink,\n          xlinkRole: xlink,\n          xlinkShow: xlink,\n          xlinkTitle: xlink,\n          xlinkType: xlink,\n          xmlBase: xml,\n          xmlLang: xml,\n          xmlSpace: xml\n      },\n      domAttrs: {},\n      domProps: {}\n  };\n\n  Object.keys(ATTRS).map(function (key) {\n      SVGDOMPropertyConfig.props[key] = 0;\n      if (ATTRS[key]) {\n          SVGDOMPropertyConfig.domAttrs[key] = ATTRS[key];\n      }\n  });\n\n  // merge html and svg config into properties\n  mergeConfigToProperties(HTMLDOMPropertyConfig);\n  mergeConfigToProperties(SVGDOMPropertyConfig);\n\n  function mergeConfigToProperties(config) {\n      var\n      // all react/react-lite supporting property names in here\n      props = config.props;\n      var\n      // attributes namespace in here\n      attrNS = config.attrNS;\n      var\n      // propName in props which should use to be dom-attribute in here\n      domAttrs = config.domAttrs;\n      var\n      // propName in props which should use to be dom-property in here\n      domProps = config.domProps;\n\n      for (var propName in props) {\n          if (!props.hasOwnProperty(propName)) {\n              continue;\n          }\n          var propConfig = props[propName];\n          properties[propName] = {\n              attributeName: domAttrs.hasOwnProperty(propName) ? domAttrs[propName] : propName.toLowerCase(),\n              propertyName: domProps.hasOwnProperty(propName) ? domProps[propName] : propName,\n              attributeNamespace: attrNS.hasOwnProperty(propName) ? attrNS[propName] : null,\n              mustUseProperty: checkMask(propConfig, MUST_USE_PROPERTY),\n              hasBooleanValue: checkMask(propConfig, HAS_BOOLEAN_VALUE),\n              hasNumericValue: checkMask(propConfig, HAS_NUMERIC_VALUE),\n              hasPositiveNumericValue: checkMask(propConfig, HAS_POSITIVE_NUMERIC_VALUE),\n              hasOverloadedBooleanValue: checkMask(propConfig, HAS_OVERLOADED_BOOLEAN_VALUE)\n          };\n      }\n  }\n\n  function checkMask(value, bitmask) {\n      return (value & bitmask) === bitmask;\n  }\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n\n  function setPropValue(node, name, value) {\n      var propInfo = properties.hasOwnProperty(name) && properties[name];\n      if (propInfo) {\n          // should delete value from dom\n          if (value == null || propInfo.hasBooleanValue && !value || propInfo.hasNumericValue && isNaN(value) || propInfo.hasPositiveNumericValue && value < 1 || propInfo.hasOverloadedBooleanValue && value === false) {\n              removePropValue(node, name);\n          } else if (propInfo.mustUseProperty) {\n              node[propInfo.propertyName] = value;\n          } else {\n              var attributeName = propInfo.attributeName;\n              var namespace = propInfo.attributeNamespace;\n\n              // `setAttribute` with objects becomes only `[object]` in IE8/9,\n              // ('' + value) makes it output the correct toString()-value.\n              if (namespace) {\n                  node.setAttributeNS(namespace, attributeName, '' + value);\n              } else if (propInfo.hasBooleanValue || propInfo.hasOverloadedBooleanValue && value === true) {\n                  node.setAttribute(attributeName, '');\n              } else {\n                  node.setAttribute(attributeName, '' + value);\n              }\n          }\n      } else if (isCustomAttribute(name) && VALID_ATTRIBUTE_NAME_REGEX.test(name)) {\n          if (value == null) {\n              node.removeAttribute(name);\n          } else {\n              node.setAttribute(name, '' + value);\n          }\n      }\n  }\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n\n  function removePropValue(node, name) {\n      var propInfo = properties.hasOwnProperty(name) && properties[name];\n      if (propInfo) {\n          if (propInfo.mustUseProperty) {\n              node[propInfo.propertyName] = propInfo.hasBooleanValue ? false : '';\n          } else {\n              node.removeAttribute(propInfo.attributeName);\n          }\n      } else if (isCustomAttribute(name)) {\n          node.removeAttribute(name);\n      }\n  }\n\n  function isFn(obj) {\n      return typeof obj === 'function';\n  }\n\n  var isArr = Array.isArray;\n\n  function noop() {}\n\n  function identity(obj) {\n      return obj;\n  }\n\n  function pipe(fn1, fn2) {\n      return function () {\n          fn1.apply(this, arguments);\n          return fn2.apply(this, arguments);\n      };\n  }\n\n  function flattenChildren(list, iteratee, a) {\n      var len = list.length;\n      var i = -1;\n\n      while (len--) {\n          var item = list[++i];\n          if (isArr(item)) {\n              flattenChildren(item, iteratee, a);\n          } else {\n              iteratee(item, a);\n          }\n      }\n  }\n\n  function eachItem(list, iteratee) {\n      for (var i = 0, len = list.length; i < len; i++) {\n          iteratee(list[i], i);\n      }\n  }\n\n  function extend(to) /* sources */{\n      var nextSource, nextIndex;\n      for (nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n          nextSource = arguments[nextIndex];\n          if (nextSource == null) {\n              continue;\n          }\n      }\n      var from = Object(nextSource);\n      if (!from) {\n          return to;\n      }\n      var keys = Object.keys(from);\n      var i = keys.length;\n      while (i--) {\n          if (from[keys[i]] !== undefined) {\n              to[keys[i]] = from[keys[i]];\n          }\n      }\n      return to;\n  }\n\n  var uid = 0;\n\n  function getUid() {\n      return ++uid;\n  }\n\n  var EVENT_KEYS = /^on/i;\n  function setProps(elem, props, isCustomComponent) {\n      for (var key in props) {\n          if (!props.hasOwnProperty(key) || key === 'children') {\n              continue;\n          }\n          var value = props[key];\n          if (EVENT_KEYS.test(key)) {\n              addEvent(elem, key, value);\n          } else if (key === 'style') {\n              setStyle(elem.style, value);\n          } else if (key === 'dangerouslySetInnerHTML') {\n              value && value.__html != null && (elem.innerHTML = value.__html);\n          } else if (isCustomComponent) {\n              if (value == null) {\n                  elem.removeAttribute(key);\n              } else {\n                  elem.setAttribute(key, '' + value);\n              }\n          } else {\n              setPropValue(elem, key, value);\n          }\n      }\n  }\n\n  function patchProp(key, oldValue, value, elem, isCustomComponent) {\n      if (key === 'value' || key === 'checked') {\n          oldValue = elem[key];\n      }\n      if (value === oldValue) {\n          return;\n      }\n      if (value === undefined) {\n          if (EVENT_KEYS.test(key)) {\n              removeEvent(elem, key);\n          } else if (key === 'style') {\n              removeStyle(elem.style, oldValue);\n          } else if (key === 'dangerouslySetInnerHTML') {\n              elem.innerHTML = '';\n          } else if (isCustomComponent) {\n              elem.removeAttribute(key);\n          } else {\n              removePropValue(elem, key);\n          }\n          return;\n      }\n      if (EVENT_KEYS.test(key)) {\n          // addEvent will replace the oldValue\n          addEvent(elem, key, value);\n      } else if (key === 'style') {\n          patchStyle(elem.style, oldValue, value);\n      } else if (key === 'dangerouslySetInnerHTML') {\n          var oldHtml = oldValue && oldValue.__html;\n          var html = value && value.__html;\n          if (html != null && html !== oldHtml) {\n              elem.innerHTML = html;\n          }\n      } else if (isCustomComponent) {\n          if (value == null) {\n              elem.removeAttribute(key);\n          } else {\n              elem.setAttribute(key, '' + value);\n          }\n      } else {\n          setPropValue(elem, key, value);\n      }\n  }\n\n  function patchProps(elem, props, newProps, isCustomComponent) {\n      var keyMap = { children: true };\n      for (var key in props) {\n          if (props.hasOwnProperty(key) && key !== 'children') {\n              keyMap[key] = true;\n              patchProp(key, props[key], newProps[key], elem, isCustomComponent);\n          }\n      }\n      for (var key in newProps) {\n          if (newProps.hasOwnProperty(key) && keyMap[key] !== true) {\n              patchProp(key, props[key], newProps[key], elem, isCustomComponent);\n          }\n      }\n  }\n\n  if (!Object.freeze) {\n      Object.freeze = identity;\n  }\n\n  var pendingRendering = {};\n  var vnodeStore = {};\n  function renderTreeIntoContainer(vnode, container, callback, parentContext) {\n  \tif (!vnode.vtype) {\n  \t\tthrow new Error('cannot render ' + vnode + ' to container');\n  \t}\n  \tvar id = container[COMPONENT_ID] || (container[COMPONENT_ID] = getUid());\n  \tvar argsCache = pendingRendering[id];\n\n  \t// component lify cycle method maybe call root rendering\n  \t// should bundle them and render by only one time\n  \tif (argsCache) {\n  \t\tif (argsCache === true) {\n  \t\t\tpendingRendering[id] = argsCache = [vnode, callback, parentContext];\n  \t\t} else {\n  \t\t\targsCache[0] = vnode;\n  \t\t\targsCache[2] = parentContext;\n  \t\t\tif (callback) {\n  \t\t\t\targsCache[1] = argsCache[1] ? pipe(argsCache[1], callback) : callback;\n  \t\t\t}\n  \t\t}\n  \t\treturn;\n  \t}\n\n  \tpendingRendering[id] = true;\n  \tvar oldVnode = null;\n  \tvar rootNode = null;\n  \tif (oldVnode = vnodeStore[id]) {\n  \t\trootNode = compareTwoVnodes(oldVnode, vnode, container.firstChild, parentContext);\n  \t} else {\n  \t\trootNode = initVnode(vnode, parentContext, container.namespaceURI);\n  \t\tvar childNode = null;\n  \t\twhile (childNode = container.lastChild) {\n  \t\t\tcontainer.removeChild(childNode);\n  \t\t}\n  \t\tcontainer.appendChild(rootNode);\n  \t}\n  \tvnodeStore[id] = vnode;\n  \tvar isPending = updateQueue.isPending;\n  \tupdateQueue.isPending = true;\n  \tclearPendingComponents();\n  \targsCache = pendingRendering[id];\n  \tdelete pendingRendering[id];\n\n  \tvar result = null;\n  \tif (isArr(argsCache)) {\n  \t\tresult = renderTreeIntoContainer(argsCache[0], container, argsCache[1], argsCache[2]);\n  \t} else if (vnode.vtype === VELEMENT) {\n  \t\tresult = rootNode;\n  \t} else if (vnode.vtype === VCOMPONENT) {\n  \t\tresult = rootNode.cache[vnode.id];\n  \t}\n\n  \tif (!isPending) {\n  \t\tupdateQueue.isPending = false;\n  \t\tupdateQueue.batchUpdate();\n  \t}\n\n  \tif (callback) {\n  \t\tcallback.call(result);\n  \t}\n\n  \treturn result;\n  }\n\n  function render(vnode, container, callback) {\n  \treturn renderTreeIntoContainer(vnode, container, callback);\n  }\n\n  function unstable_renderSubtreeIntoContainer(parentComponent, subVnode, container, callback) {\n  \tvar context = parentComponent.vnode ? parentComponent.vnode.context : parentComponent.$cache.parentContext;\n  \treturn renderTreeIntoContainer(subVnode, container, callback, context);\n  }\n\n  function unmountComponentAtNode(container) {\n  \tif (!container.nodeName) {\n  \t\tthrow new Error('expect node');\n  \t}\n  \tvar id = container[COMPONENT_ID];\n  \tvar vnode = null;\n  \tif (vnode = vnodeStore[id]) {\n  \t\tdestroyVnode(vnode, container.firstChild);\n  \t\tcontainer.removeChild(container.firstChild);\n  \t\tdelete vnodeStore[id];\n  \t\treturn true;\n  \t}\n  \treturn false;\n  }\n\n  function findDOMNode(node) {\n  \tif (node == null) {\n  \t\treturn null;\n  \t}\n  \tif (node.nodeName) {\n  \t\treturn node;\n  \t}\n  \tvar component = node;\n  \t// if component.node equal to false, component must be unmounted\n  \tif (component.getDOMNode && component.$cache.isMounted) {\n  \t\treturn component.getDOMNode();\n  \t}\n  \tthrow new Error('findDOMNode can not find Node');\n  }\n\n  var ReactDOM = Object.freeze({\n  \trender: render,\n  \tunstable_renderSubtreeIntoContainer: unstable_renderSubtreeIntoContainer,\n  \tunmountComponentAtNode: unmountComponentAtNode,\n  \tfindDOMNode: findDOMNode\n  });\n\n  function isValidElement(obj) {\n  \treturn obj != null && !!obj.vtype;\n  }\n\n  function cloneElement(originElem, props) {\n  \tvar type = originElem.type;\n  \tvar key = originElem.key;\n  \tvar ref = originElem.ref;\n\n  \tvar newProps = extend(extend({ key: key, ref: ref }, originElem.props), props);\n\n  \tfor (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n  \t\tchildren[_key - 2] = arguments[_key];\n  \t}\n\n  \tvar vnode = createElement.apply(undefined, [type, newProps].concat(children));\n  \tif (vnode.ref === originElem.ref) {\n  \t\tvnode.refs = originElem.refs;\n  \t}\n  \treturn vnode;\n  }\n\n  function createFactory(type) {\n  \tvar factory = function factory() {\n  \t\tfor (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n  \t\t\targs[_key2] = arguments[_key2];\n  \t\t}\n\n  \t\treturn createElement.apply(undefined, [type].concat(args));\n  \t};\n  \tfactory.type = type;\n  \treturn factory;\n  }\n\n  function createElement(type, props, children) {\n  \tvar createVnode = null;\n  \tvar varType = typeof type;\n\n  \tif (varType === 'string') {\n  \t\tcreateVnode = createVelem;\n  \t} else if (varType === 'function') {\n  \t\tif (type.prototype && typeof type.prototype.forceUpdate === 'function') {\n  \t\t\tcreateVnode = createVcomponent;\n  \t\t} else {\n  \t\t\tcreateVnode = createVstateless;\n  \t\t}\n  \t} else {\n  \t\tthrow new Error('React.createElement: unexpect type [ ' + type + ' ]');\n  \t}\n\n  \tvar key = null;\n  \tvar ref = null;\n  \tvar finalProps = {};\n  \tvar propValue = null;\n  \tif (props != null) {\n  \t\tfor (var propKey in props) {\n  \t\t\tif (!props.hasOwnProperty(propKey)) {\n  \t\t\t\tcontinue;\n  \t\t\t}\n  \t\t\tif (propKey === 'key') {\n  \t\t\t\tif (props.key !== undefined) {\n  \t\t\t\t\tkey = '' + props.key;\n  \t\t\t\t}\n  \t\t\t} else if (propKey === 'ref') {\n  \t\t\t\tif (props.ref !== undefined) {\n  \t\t\t\t\tref = props.ref;\n  \t\t\t\t}\n  \t\t\t} else if ((propValue = props[propKey]) !== undefined) {\n  \t\t\t\tfinalProps[propKey] = propValue;\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \tvar defaultProps = type.defaultProps;\n\n  \tif (defaultProps) {\n  \t\tfor (var propKey in defaultProps) {\n  \t\t\tif (finalProps[propKey] === undefined) {\n  \t\t\t\tfinalProps[propKey] = defaultProps[propKey];\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \tvar argsLen = arguments.length;\n  \tvar finalChildren = children;\n\n  \tif (argsLen > 3) {\n  \t\tfinalChildren = Array(argsLen - 2);\n  \t\tfor (var i = 2; i < argsLen; i++) {\n  \t\t\tfinalChildren[i - 2] = arguments[i];\n  \t\t}\n  \t}\n\n  \tif (finalChildren !== undefined) {\n  \t\tfinalProps.children = finalChildren;\n  \t}\n\n  \tvar vnode = createVnode(type, finalProps);\n  \tvnode.key = key;\n  \tvnode.ref = ref;\n  \treturn vnode;\n  }\n\n  var tagNames = 'a|abbr|address|area|article|aside|audio|b|base|bdi|bdo|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|data|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|main|map|mark|menu|menuitem|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|source|span|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|track|u|ul|var|video|wbr|circle|clipPath|defs|ellipse|g|image|line|linearGradient|mask|path|pattern|polygon|polyline|radialGradient|rect|stop|svg|text|tspan';\n  var DOM = {};\n  eachItem(tagNames.split('|'), function (tagName) {\n  \tDOM[tagName] = createFactory(tagName);\n  });\n\n  var check = function check() {\n      return check;\n  };\n  check.isRequired = check;\n  var PropTypes = {\n      \"array\": check,\n      \"bool\": check,\n      \"func\": check,\n      \"number\": check,\n      \"object\": check,\n      \"string\": check,\n      \"any\": check,\n      \"arrayOf\": check,\n      \"element\": check,\n      \"instanceOf\": check,\n      \"node\": check,\n      \"objectOf\": check,\n      \"oneOf\": check,\n      \"oneOfType\": check,\n      \"shape\": check\n  };\n\n  function only(children) {\n  \tif (isValidElement(children)) {\n  \t\treturn children;\n  \t}\n  \tthrow new Error('expect only one child');\n  }\n\n  function forEach(children, iteratee, context) {\n  \tif (children == null) {\n  \t\treturn children;\n  \t}\n  \tvar index = 0;\n  \tif (isArr(children)) {\n  \t\tflattenChildren(children, function (child) {\n  \t\t\titeratee.call(context, child, index++);\n  \t\t});\n  \t} else {\n  \t\titeratee.call(context, children, index);\n  \t}\n  }\n\n  function map(children, iteratee, context) {\n  \tif (children == null) {\n  \t\treturn children;\n  \t}\n  \tvar store = [];\n  \tvar keyMap = {};\n  \tforEach(children, function (child, index) {\n  \t\tvar data = {};\n  \t\tdata.child = iteratee.call(context, child, index) || child;\n  \t\tdata.isEqual = data.child === child;\n  \t\tvar key = data.key = getKey(child, index);\n  \t\tif (keyMap.hasOwnProperty(key)) {\n  \t\t\tkeyMap[key] += 1;\n  \t\t} else {\n  \t\t\tkeyMap[key] = 0;\n  \t\t}\n  \t\tdata.index = keyMap[key];\n  \t\tstore.push(data);\n  \t});\n  \tvar result = [];\n  \teachItem(store, function (_ref) {\n  \t\tvar child = _ref.child;\n  \t\tvar key = _ref.key;\n  \t\tvar index = _ref.index;\n  \t\tvar isEqual = _ref.isEqual;\n\n  \t\tif (child == null || typeof child === 'boolean') {\n  \t\t\treturn;\n  \t\t}\n  \t\tif (!isValidElement(child) || key == null) {\n  \t\t\tresult.push(child);\n  \t\t\treturn;\n  \t\t}\n  \t\tif (keyMap[key] !== 0) {\n  \t\t\tkey += ':' + index;\n  \t\t}\n  \t\tif (!isEqual) {\n  \t\t\tkey = escapeUserProvidedKey(child.key || '') + '/' + key;\n  \t\t}\n  \t\tchild = cloneElement(child, { key: key });\n  \t\tresult.push(child);\n  \t});\n  \treturn result;\n  }\n\n  function count(children) {\n  \tvar count = 0;\n  \tforEach(children, function () {\n  \t\tcount++;\n  \t});\n  \treturn count;\n  }\n\n  function toArray(children) {\n  \treturn map(children, identity) || [];\n  }\n\n  function getKey(child, index) {\n  \tvar key = undefined;\n  \tif (isValidElement(child) && typeof child.key === 'string') {\n  \t\tkey = '.$' + child.key;\n  \t} else {\n  \t\tkey = '.' + index.toString(36);\n  \t}\n  \treturn key;\n  }\n\n  var userProvidedKeyEscapeRegex = /\\/(?!\\/)/g;\n  function escapeUserProvidedKey(text) {\n  \treturn ('' + text).replace(userProvidedKeyEscapeRegex, '//');\n  }\n\n  var Children = Object.freeze({\n  \tonly: only,\n  \tforEach: forEach,\n  \tmap: map,\n  \tcount: count,\n  \ttoArray: toArray\n  });\n\n  function eachMixin(mixins, iteratee) {\n  \teachItem(mixins, function (mixin) {\n  \t\tif (mixin) {\n  \t\t\tif (isArr(mixin.mixins)) {\n  \t\t\t\teachMixin(mixin.mixins, iteratee);\n  \t\t\t}\n  \t\t\titeratee(mixin);\n  \t\t}\n  \t});\n  }\n\n  function combineMixinToProto(proto, mixin) {\n  \tfor (var key in mixin) {\n  \t\tif (!mixin.hasOwnProperty(key)) {\n  \t\t\tcontinue;\n  \t\t}\n  \t\tvar value = mixin[key];\n  \t\tif (key === 'getInitialState') {\n  \t\t\tproto.$getInitialStates.push(value);\n  \t\t\tcontinue;\n  \t\t}\n  \t\tvar curValue = proto[key];\n  \t\tif (isFn(curValue) && isFn(value)) {\n  \t\t\tproto[key] = pipe(curValue, value);\n  \t\t} else {\n  \t\t\tproto[key] = value;\n  \t\t}\n  \t}\n  }\n\n  function combineMixinToClass(Component, mixin) {\n  \textend(Component.propTypes, mixin.propTypes);\n  \textend(Component.contextTypes, mixin.contextTypes);\n  \textend(Component, mixin.statics);\n  \tif (isFn(mixin.getDefaultProps)) {\n  \t\textend(Component.defaultProps, mixin.getDefaultProps());\n  \t}\n  }\n\n  function bindContext(obj, source) {\n  \tfor (var key in source) {\n  \t\tif (source.hasOwnProperty(key)) {\n  \t\t\tif (isFn(source[key])) {\n  \t\t\t\tobj[key] = source[key].bind(obj);\n  \t\t\t}\n  \t\t}\n  \t}\n  }\n\n  var Facade = function Facade() {};\n  Facade.prototype = Component.prototype;\n\n  function getInitialState() {\n  \tvar _this = this;\n\n  \tvar state = {};\n  \tvar setState = this.setState;\n  \tthis.setState = Facade;\n  \teachItem(this.$getInitialStates, function (getInitialState) {\n  \t\tif (isFn(getInitialState)) {\n  \t\t\textend(state, getInitialState.call(_this));\n  \t\t}\n  \t});\n  \tthis.setState = setState;\n  \treturn state;\n  }\n  function createClass(spec) {\n  \tif (!isFn(spec.render)) {\n  \t\tthrow new Error('createClass: spec.render is not function');\n  \t}\n  \tvar specMixins = spec.mixins || [];\n  \tvar mixins = specMixins.concat(spec);\n  \tspec.mixins = null;\n  \tfunction Klass(props, context) {\n  \t\tComponent.call(this, props, context);\n  \t\tthis.constructor = Klass;\n  \t\tspec.autobind !== false && bindContext(this, Klass.prototype);\n  \t\tthis.state = this.getInitialState() || this.state;\n  \t}\n  \tKlass.displayName = spec.displayName;\n  \tKlass.contextTypes = {};\n  \tKlass.propTypes = {};\n  \tKlass.defaultProps = {};\n  \tvar proto = Klass.prototype = new Facade();\n  \tproto.$getInitialStates = [];\n  \teachMixin(mixins, function (mixin) {\n  \t\tcombineMixinToProto(proto, mixin);\n  \t\tcombineMixinToClass(Klass, mixin);\n  \t});\n  \tproto.getInitialState = getInitialState;\n  \tspec.mixins = specMixins;\n  \treturn Klass;\n  }\n\n  var React = extend({\n      version: '0.15.1',\n      cloneElement: cloneElement,\n      isValidElement: isValidElement,\n      createElement: createElement,\n      createFactory: createFactory,\n      Component: Component,\n      createClass: createClass,\n      Children: Children,\n      PropTypes: PropTypes,\n      DOM: DOM,\n      __spread: extend\n  }, ReactDOM);\n\n  React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;\n\n  return React;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bower_components/react-lite-cockpit/dist/react-lite.js\n// module id = 122\n// module chunks = 3","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    var React = require(\"react\");\n    var Term = require(\"term\");\n\n    require(\"console.css\");\n\n    /*\n     * A terminal component that communicates over a cockpit channel.\n     *\n     * The only required property is 'channel', which must point to a cockpit\n     * stream channel.\n     *\n     * The size of the terminal defaults to 80 by 25. It can be changed with the\n     * 'rows' and 'cols' properties.\n     *\n     * If the 'onTitleChanged' callback property is set, it will be called whenever\n     * the title of the terminal changes.\n     *\n     * Call focus() to set the input focus on the terminal.\n     */\n    var Terminal = React.createClass({\n        propTypes: {\n            cols: React.PropTypes.number,\n            rows: React.PropTypes.number,\n            channel: React.PropTypes.object.isRequired,\n            onTitleChanged: React.PropTypes.func\n        },\n\n        getDefaultProps: function () {\n            return {\n                cols: 80,\n                rows: 25\n            };\n        },\n\n        componentWillMount: function () {\n            var term = new Term({\n                cols: this.props.cols,\n                rows: this.props.rows,\n                screenKeys: true,\n                useStyle: true\n            });\n\n            term.on('data', function(data) {\n                if (this.props.channel.valid)\n                    this.props.channel.send(data);\n            }.bind(this));\n\n            if (this.props.onTitleChanged)\n                term.on('title', this.props.onTitleChanged);\n\n            this.setState({ terminal: term });\n        },\n\n        componentDidMount: function () {\n            this.state.terminal.open(this.refs.terminal);\n            this.connectChannel();\n        },\n\n        componentWillUpdate: function (nextProps) {\n            if (nextProps.cols !== this.props.cols || nextProps.rows !== this.props.rows)\n                this.state.terminal.resize(nextProps.cols, nextProps.rows);\n\n            if (nextProps.channel !== this.props.channel) {\n                this.state.terminal.reset();\n                this.disconnectChannel();\n            }\n        },\n\n        componentDidUpdate: function (prevProps) {\n            if (prevProps.channel !== this.props.channel)\n                this.connectChannel();\n        },\n\n        render: function () {\n            // ensure react never reuses this div by keying it with the terminal widget\n            return <div ref=\"terminal\" className=\"console-ct\" key={this.state.terminal} />;\n        },\n\n        componentWillUnmount: function () {\n            this.disconnectChannel();\n            this.state.terminal.destroy();\n        },\n\n        onChannelMessage: function (event, data) {\n            this.state.terminal.write(data);\n        },\n\n        onChannelClose: function (event, options) {\n            var term = this.state.terminal;\n            term.write('\\x1b[31m' + (options.problem || 'disconnected') + '\\x1b[m\\r\\n');\n            term.cursorHidden = true;\n            term.refresh(term.y, term.y);\n        },\n\n        connectChannel: function () {\n            var channel = this.props.channel;\n            if (channel && channel.valid) {\n                channel.addEventListener('message', this.onChannelMessage.bind(this));\n                channel.addEventListener('close', this.onChannelClose.bind(this));\n            }\n        },\n\n        disconnectChannel: function () {\n            if (this.props.channel) {\n                this.props.channel.removeEventListener('message', this.onChannelMessage);\n                this.props.channel.removeEventListener('close', this.onChannelClose);\n            }\n        },\n\n        focus: function () {\n            if (this.state.terminal)\n                this.state.terminal.focus();\n        }\n    });\n\n    module.exports = { Terminal: Terminal };\n}());\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/lib/cockpit-components-terminal.jsx","/**\n * term.js - an xterm emulator\n * Copyright (c) 2012-2013, Christopher Jeffrey (MIT License)\n * https://github.com/chjj/term.js\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *\n * Originally forked from (with the author's permission):\n *   Fabrice Bellard's javascript vt100 for jslinux:\n *   http://bellard.org/jslinux/\n *   Copyright (c) 2011 Fabrice Bellard\n *   The original design remains. The terminal itself\n *   has been extended to include xterm CSI codes, among\n *   other features.\n */\n\n;(function() {\n\n/**\n * Terminal Emulation References:\n *   http://vt100.net/\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.txt\n *   http://invisible-island.net/xterm/ctlseqs/ctlseqs.html\n *   http://invisible-island.net/vttest/\n *   http://www.inwap.com/pdp10/ansicode.txt\n *   http://linux.die.net/man/4/console_codes\n *   http://linux.die.net/man/7/urxvt\n */\n\n'use strict';\n\n/**\n * Shared\n */\n\nvar window = this\n  , document = this.document;\n\n/**\n * EventEmitter\n */\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n}\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  this._events[type] = this._events[type] || [];\n  this._events[type].push(listener);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.removeListener = function(type, listener) {\n  if (!this._events[type]) return;\n\n  var obj = this._events[type]\n    , i = obj.length;\n\n  while (i--) {\n    if (obj[i] === listener || obj[i].listener === listener) {\n      obj.splice(i, 1);\n      return;\n    }\n  }\n};\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  if (this._events[type]) delete this._events[type];\n};\n\nEventEmitter.prototype.once = function(type, listener) {\n  function on() {\n    var args = Array.prototype.slice.call(arguments);\n    this.removeListener(type, on);\n    return listener.apply(this, args);\n  }\n  on.listener = listener;\n  return this.on(type, on);\n};\n\nEventEmitter.prototype.emit = function(type) {\n  if (!this._events[type]) return;\n\n  var args = Array.prototype.slice.call(arguments, 1)\n    , obj = this._events[type]\n    , l = obj.length\n    , i = 0;\n\n  for (; i < l; i++) {\n    obj[i].apply(this, args);\n  }\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  return this._events[type] = this._events[type] || [];\n};\n\n/**\n * Stream\n */\n\nfunction Stream() {\n  EventEmitter.call(this);\n}\n\ninherits(Stream, EventEmitter);\n\nStream.prototype.pipe = function(dest, options) {\n  var src = this\n    , ondata\n    , onerror\n    , onend;\n\n  function unbind() {\n    src.removeListener('data', ondata);\n    src.removeListener('error', onerror);\n    src.removeListener('end', onend);\n    dest.removeListener('error', onerror);\n    dest.removeListener('close', unbind);\n  }\n\n  src.on('data', ondata = function(data) {\n    dest.write(data);\n  });\n\n  src.on('error', onerror = function(err) {\n    unbind();\n    if (!this.listeners('error').length) {\n      throw err;\n    }\n  });\n\n  src.on('end', onend = function() {\n    dest.end();\n    unbind();\n  });\n\n  dest.on('error', onerror);\n  dest.on('close', unbind);\n\n  dest.emit('pipe', src);\n\n  return dest;\n};\n\n/**\n * States\n */\n\nvar normal = 0\n  , escaped = 1\n  , csi = 2\n  , osc = 3\n  , charset = 4\n  , dcs = 5\n  , ignore = 6\n  , UDK = { type: 'udk' };\n\n/**\n * Terminal\n */\n\nfunction Terminal(options) {\n  var self = this;\n\n  if (!(this instanceof Terminal)) {\n    return new Terminal(arguments[0], arguments[1], arguments[2]);\n  }\n\n  Stream.call(this);\n\n  if (typeof options === 'number') {\n    options = {\n      cols: arguments[0],\n      rows: arguments[1],\n      handler: arguments[2]\n    };\n  }\n\n  options = options || {};\n\n  each(keys(Terminal.defaults), function(key) {\n    if (options[key] == null) {\n      options[key] = Terminal.options[key];\n      // Legacy:\n      if (Terminal[key] !== Terminal.defaults[key]) {\n        options[key] = Terminal[key];\n      }\n    }\n    self[key] = options[key];\n  });\n\n  if (options.colors.length === 8) {\n    options.colors = options.colors.concat(Terminal._colors.slice(8));\n  } else if (options.colors.length === 16) {\n    options.colors = options.colors.concat(Terminal._colors.slice(16));\n  } else if (options.colors.length === 10) {\n    options.colors = options.colors.slice(0, -2).concat(\n      Terminal._colors.slice(8, -2), options.colors.slice(-2));\n  } else if (options.colors.length === 18) {\n    options.colors = options.colors.slice(0, -2).concat(\n      Terminal._colors.slice(16, -2), options.colors.slice(-2));\n  }\n  this.colors = options.colors;\n\n  this.options = options;\n\n  // this.context = options.context || window;\n  // this.document = options.document || document;\n  this.parent = options.body || options.parent\n    || (document ? document.getElementsByTagName('body')[0] : null);\n\n  this.cols = options.cols || options.geometry[0];\n  this.rows = options.rows || options.geometry[1];\n\n  // Act as though we are a node TTY stream:\n  this.setRawMode;\n  this.isTTY = true;\n  this.isRaw = true;\n  this.columns = this.cols;\n  this.rows = this.rows;\n\n  if (options.handler) {\n    this.on('data', options.handler);\n  }\n\n  this.ybase = 0;\n  this.ydisp = 0;\n  this.x = 0;\n  this.y = 0;\n  this.cursorState = 0;\n  this.cursorHidden = false;\n  this.convertEol;\n  this.state = 0;\n  this.queue = '';\n  this.scrollTop = 0;\n  this.scrollBottom = this.rows - 1;\n\n  // modes\n  this.applicationKeypad = false;\n  this.applicationCursor = false;\n  this.originMode = false;\n  this.insertMode = false;\n  this.wraparoundMode = false;\n  this.normal = null;\n\n  // select modes\n  this.prefixMode = false;\n  this.selectMode = false;\n  this.visualMode = false;\n  this.searchMode = false;\n  this.searchDown;\n  this.entry = '';\n  this.entryPrefix = 'Search: ';\n  this._real;\n  this._selected;\n  this._textarea;\n\n  // charset\n  this.charset = null;\n  this.gcharset = null;\n  this.glevel = 0;\n  this.charsets = [null];\n\n  // mouse properties\n  this.decLocator;\n  this.x10Mouse;\n  this.vt200Mouse;\n  this.vt300Mouse;\n  this.normalMouse;\n  this.mouseEvents;\n  this.sendFocus;\n  this.utfMouse;\n  this.sgrMouse;\n  this.urxvtMouse;\n\n  // misc\n  this.element;\n  this.children;\n  this.refreshStart;\n  this.refreshEnd;\n  this.savedX;\n  this.savedY;\n  this.savedCols;\n\n  // stream\n  this.readable = true;\n  this.writable = true;\n\n  this.defAttr = (0 << 18) | (257 << 9) | (256 << 0);\n  this.curAttr = this.defAttr;\n\n  this.params = [];\n  this.currentParam = 0;\n  this.prefix = '';\n  this.postfix = '';\n\n  this.lines = [];\n  var i = this.rows;\n  while (i--) {\n    this.lines.push(this.blankLine());\n  }\n\n  this.tabs;\n  this.setupStops();\n}\n\ninherits(Terminal, Stream);\n\n/**\n * Colors\n */\n\n// Colors 0-15\nTerminal.tangoColors = [\n  // dark:\n  '#2e3436',\n  '#cc0000',\n  '#4e9a06',\n  '#c4a000',\n  '#3465a4',\n  '#75507b',\n  '#06989a',\n  '#d3d7cf',\n  // bright:\n  '#555753',\n  '#ef2929',\n  '#8ae234',\n  '#fce94f',\n  '#729fcf',\n  '#ad7fa8',\n  '#34e2e2',\n  '#eeeeec'\n];\n\nTerminal.xtermColors = [\n  // dark:\n  '#000000', // black\n  '#cd0000', // red3\n  '#00cd00', // green3\n  '#cdcd00', // yellow3\n  '#0000ee', // blue2\n  '#cd00cd', // magenta3\n  '#00cdcd', // cyan3\n  '#e5e5e5', // gray90\n  // bright:\n  '#7f7f7f', // gray50\n  '#ff0000', // red\n  '#00ff00', // green\n  '#ffff00', // yellow\n  '#5c5cff', // rgb:5c/5c/ff\n  '#ff00ff', // magenta\n  '#00ffff', // cyan\n  '#ffffff'  // white\n];\n\n// Colors 0-15 + 16-255\n// Much thanks to TooTallNate for writing this.\nTerminal.colors = (function() {\n  var colors = Terminal.tangoColors.slice()\n    , r = [0x00, 0x5f, 0x87, 0xaf, 0xd7, 0xff]\n    , i;\n\n  // 16-231\n  i = 0;\n  for (; i < 216; i++) {\n    out(r[(i / 36) % 6 | 0], r[(i / 6) % 6 | 0], r[i % 6]);\n  }\n\n  // 232-255 (grey)\n  i = 0;\n  for (; i < 24; i++) {\n    r = 8 + i * 10;\n    out(r, r, r);\n  }\n\n  function out(r, g, b) {\n    colors.push('#' + hex(r) + hex(g) + hex(b));\n  }\n\n  function hex(c) {\n    c = c.toString(16);\n    return c.length < 2 ? '0' + c : c;\n  }\n\n  return colors;\n})();\n\n// Default BG/FG\nTerminal.colors[256] = '#000000';\nTerminal.colors[257] = '#f0f0f0';\n\nTerminal._colors = Terminal.colors.slice();\n\nTerminal.vcolors = (function() {\n  var out = []\n    , colors = Terminal.colors\n    , i = 0\n    , color;\n\n  for (; i < 256; i++) {\n    color = parseInt(colors[i].substring(1), 16);\n    out.push([\n      (color >> 16) & 0xff,\n      (color >> 8) & 0xff,\n      color & 0xff\n    ]);\n  }\n\n  return out;\n})();\n\n/**\n * Options\n */\n\nTerminal.defaults = {\n  colors: Terminal.colors,\n  convertEol: false,\n  termName: 'xterm',\n  geometry: [80, 24],\n  cursorBlink: true,\n  visualBell: false,\n  popOnBell: false,\n  scrollback: 1000,\n  screenKeys: false,\n  debug: false,\n  useStyle: false\n  // programFeatures: false,\n  // focusKeys: false,\n};\n\nTerminal.options = {};\n\neach(keys(Terminal.defaults), function(key) {\n  Terminal[key] = Terminal.defaults[key];\n  Terminal.options[key] = Terminal.defaults[key];\n});\n\n/**\n * Focused Terminal\n */\n\nTerminal.focus = null;\n\nTerminal.prototype.focus = function() {\n  if (Terminal.focus === this) return;\n\n  if (Terminal.focus) {\n    Terminal.focus.blur();\n  }\n\n  if (this.sendFocus) this.send('\\x1b[I');\n  this.showCursor();\n\n  // try {\n  //   this.element.focus();\n  // } catch (e) {\n  //   ;\n  // }\n\n  // this.emit('focus');\n\n  Terminal.focus = this;\n};\n\nTerminal.prototype.blur = function() {\n  if (Terminal.focus !== this) return;\n\n  this.cursorState = 0;\n  this.refresh(this.y, this.y);\n  if (this.sendFocus) this.send('\\x1b[O');\n\n  // try {\n  //   this.element.blur();\n  // } catch (e) {\n  //   ;\n  // }\n\n  // this.emit('blur');\n\n  Terminal.focus = null;\n};\n\n/**\n * Initialize global behavior\n */\n\nTerminal.prototype.initGlobal = function() {\n  var document = this.document;\n\n  Terminal._boundDocs = Terminal._boundDocs || [];\n  if (~indexOf(Terminal._boundDocs, document)) {\n    return;\n  }\n  Terminal._boundDocs.push(document);\n\n  Terminal.bindPaste(document);\n\n  Terminal.bindKeys(document);\n\n  Terminal.bindCopy(document);\n\n  if (this.isMobile) {\n    this.fixMobile(document);\n  }\n\n  if (this.useStyle) {\n    Terminal.insertStyle(document, this.colors[256], this.colors[257]);\n  }\n};\n\n/**\n * Bind to paste event\n */\n\nTerminal.bindPaste = function(document) {\n  // This seems to work well for ctrl-V and middle-click,\n  // even without the contentEditable workaround.\n  var window = document.defaultView;\n  on(window, 'paste', function(ev) {\n    var term = Terminal.focus;\n    if (!term) return;\n    if (ev.clipboardData) {\n      term.send(ev.clipboardData.getData('text/plain'));\n    } else if (term.context.clipboardData) {\n      term.send(term.context.clipboardData.getData('Text'));\n    }\n    // Not necessary. Do it anyway for good measure.\n    term.element.contentEditable = 'inherit';\n    return cancel(ev);\n  });\n};\n\n/**\n * Global Events for key handling\n */\n\nTerminal.bindKeys = function(document) {\n  // We should only need to check `target === body` below,\n  // but we can check everything for good measure.\n  on(document, 'keydown', function(ev) {\n    if (!Terminal.focus) return;\n    var target = ev.target || ev.srcElement;\n    if (!target) return;\n    if (target === Terminal.focus.element\n        || target === Terminal.focus.context\n        || target === Terminal.focus.document\n        || target === Terminal.focus.body\n        || target === Terminal._textarea\n        || target === Terminal.focus.parent) {\n      return Terminal.focus.keyDown(ev);\n    }\n  }, true);\n\n  on(document, 'keypress', function(ev) {\n    if (!Terminal.focus) return;\n    var target = ev.target || ev.srcElement;\n    if (!target) return;\n    if (target === Terminal.focus.element\n        || target === Terminal.focus.context\n        || target === Terminal.focus.document\n        || target === Terminal.focus.body\n        || target === Terminal._textarea\n        || target === Terminal.focus.parent) {\n      return Terminal.focus.keyPress(ev);\n    }\n  }, true);\n\n  // If we click somewhere other than a\n  // terminal, unfocus the terminal.\n  on(document, 'mousedown', function(ev) {\n    if (!Terminal.focus) return;\n\n    var el = ev.target || ev.srcElement;\n    if (!el) return;\n\n    do {\n      if (el === Terminal.focus.element) return;\n    } while (el = el.parentNode);\n\n    Terminal.focus.blur();\n  });\n};\n\n/**\n * Copy Selection w/ Ctrl-C (Select Mode)\n */\n\nTerminal.bindCopy = function(document) {\n  var window = document.defaultView;\n\n  // if (!('onbeforecopy' in document)) {\n  //   // Copies to *only* the clipboard.\n  //   on(window, 'copy', function fn(ev) {\n  //     var term = Terminal.focus;\n  //     if (!term) return;\n  //     if (!term._selected) return;\n  //     var text = term.grabText(\n  //       term._selected.x1, term._selected.x2,\n  //       term._selected.y1, term._selected.y2);\n  //     term.emit('copy', text);\n  //     ev.clipboardData.setData('text/plain', text);\n  //   });\n  //   return;\n  // }\n\n  // Copies to primary selection *and* clipboard.\n  // NOTE: This may work better on capture phase,\n  // or using the `beforecopy` event.\n  on(window, 'copy', function(ev) {\n    var term = Terminal.focus;\n    if (!term) return;\n    if (!term._selected) return;\n    var textarea = term.getCopyTextarea();\n    var text = term.grabText(\n      term._selected.x1, term._selected.x2,\n      term._selected.y1, term._selected.y2);\n    term.emit('copy', text);\n    textarea.focus();\n    textarea.textContent = text;\n    textarea.value = text;\n    textarea.setSelectionRange(0, text.length);\n    setTimeout(function() {\n      term.element.focus();\n      term.focus();\n    }, 1);\n  });\n};\n\n/**\n * Fix Mobile\n */\n\nTerminal.prototype.fixMobile = function(document) {\n  var self = this;\n\n  var textarea = document.createElement('textarea');\n  textarea.style.position = 'absolute';\n  textarea.style.left = '-32000px';\n  textarea.style.top = '-32000px';\n  textarea.style.width = '0px';\n  textarea.style.height = '0px';\n  textarea.style.opacity = '0';\n  textarea.style.backgroundColor = 'transparent';\n  textarea.style.borderStyle = 'none';\n  textarea.style.outlineStyle = 'none';\n  textarea.autocapitalize = 'none';\n  textarea.autocorrect = 'off';\n\n  document.getElementsByTagName('body')[0].appendChild(textarea);\n\n  Terminal._textarea = textarea;\n\n  setTimeout(function() {\n    textarea.focus();\n  }, 1000);\n\n  if (this.isAndroid) {\n    on(textarea, 'change', function() {\n      var value = textarea.textContent || textarea.value;\n      textarea.value = '';\n      textarea.textContent = '';\n      self.send(value + '\\r');\n    });\n  }\n};\n\n/**\n * Insert a default style\n */\n\nTerminal.insertStyle = function(document, bg, fg) {\n  var style = document.getElementById('term-style');\n  if (style) return;\n\n  var head = document.getElementsByTagName('head')[0];\n  if (!head) return;\n\n  var style = document.createElement('style');\n  style.id = 'term-style';\n\n  // textContent doesn't work well with IE for <style> elements.\n  style.innerHTML = ''\n    + '.terminal {\\n'\n    + '  float: left;\\n'\n    + '  border: ' + bg + ' solid 5px;\\n'\n    + '  font-family: \"DejaVu Sans Mono\", \"Liberation Mono\", monospace;\\n'\n    + '  font-size: 11px;\\n'\n    + '  color: ' + fg + ';\\n'\n    + '  background: ' + bg + ';\\n'\n    + '}\\n'\n    + '\\n'\n    + '.terminal-cursor {\\n'\n    + '  color: ' + bg + ';\\n'\n    + '  background: ' + fg + ';\\n'\n    + '}\\n';\n\n  var out = '';\n  each(Terminal.colors, function(color, i) {\n    if (i === 256) {\n      out += '\\n.term-bg-color-default { background-color: ' + color + '; }';\n    }\n    if (i === 257) {\n      out += '\\n.term-fg-color-default { color: ' + color + '; }';\n    }\n    out += '\\n.term-bg-color-' + i + ' { background-color: ' + color + '; }';\n    out += '\\n.term-fg-color-' + i + ' { color: ' + color + '; }';\n  });\n  out += '\\n.term-bold { font-weight: bold; }'\n  out += '\\n.term-underline { text-decoration: underline; }'\n  out += '\\n.term-blink { text-decoration: blink; }'\n  out += '\\n.term-hidden { visibility: hidden; }'\n  style.innerHTML += out + '\\n';\n\n  head.insertBefore(style, head.firstChild);\n};\n\n/**\n * Open Terminal\n */\n\nTerminal.prototype.open = function(parent) {\n  var self = this\n    , i = 0\n    , div;\n\n  this.parent = parent || this.parent;\n\n  if (!this.parent) {\n    throw new Error('Terminal requires a parent element.');\n  }\n\n  // Grab global elements.\n  this.context = this.parent.ownerDocument.defaultView;\n  this.document = this.parent.ownerDocument;\n  this.body = this.document.getElementsByTagName('body')[0];\n\n  // Parse user-agent strings.\n  if (this.context.navigator && this.context.navigator.userAgent) {\n    this.isMac = !!~this.context.navigator.userAgent.indexOf('Mac');\n    this.isIpad = !!~this.context.navigator.userAgent.indexOf('iPad');\n    this.isIphone = !!~this.context.navigator.userAgent.indexOf('iPhone');\n    this.isAndroid = !!~this.context.navigator.userAgent.indexOf('Android');\n    this.isMobile = this.isIpad || this.isIphone || this.isAndroid;\n    this.isMSIE = !!~this.context.navigator.userAgent.indexOf('MSIE');\n  }\n\n  // Create our main terminal element.\n  this.element = this.document.createElement('div');\n  this.element.className = 'terminal';\n  this.element.style.outline = 'none';\n  this.element.setAttribute('tabindex', 0);\n  this.element.setAttribute('spellcheck', 'false');\n  this.element.style.backgroundColor = this.colors[256];\n  this.element.style.color = this.colors[257];\n\n  // Create the lines for our terminal.\n  this.children = [];\n  for (; i < this.rows; i++) {\n    div = this.document.createElement('div');\n    this.element.appendChild(div);\n    this.children.push(div);\n  }\n  this.parent.appendChild(this.element);\n\n  // Draw the screen.\n  this.refresh(0, this.rows - 1);\n\n  if (!('useEvents' in this.options) || this.options.useEvents) {\n    // Initialize global actions that\n    // need to be taken on the document.\n    this.initGlobal();\n  }\n\n  if (!('useFocus' in this.options) || this.options.useFocus) {\n    // Ensure there is a Terminal.focus.\n    this.focus();\n\n    // Start blinking the cursor.\n    this.startBlink();\n\n    // Bind to DOM events related\n    // to focus and paste behavior.\n    on(this.element, 'focus', function() {\n      self.focus();\n      if (self.isMobile) {\n        Terminal._textarea.focus();\n      }\n    });\n\n    // This causes slightly funky behavior.\n    // on(this.element, 'blur', function() {\n    //   self.blur();\n    // });\n\n    on(this.element, 'mousedown', function() {\n      self.focus();\n    });\n\n    // Clickable paste workaround, using contentEditable.\n    // This probably shouldn't work,\n    // ... but it does. Firefox's paste\n    // event seems to only work for textareas?\n    on(this.element, 'mousedown', function(ev) {\n      var button = ev.button != null\n        ? +ev.button\n        : ev.which != null\n          ? ev.which - 1\n          : null;\n\n      // Does IE9 do this?\n      if (self.isMSIE) {\n        button = button === 1 ? 0 : button === 4 ? 1 : button;\n      }\n\n      if (button !== 2) return;\n\n      self.element.contentEditable = 'true';\n      setTimeout(function() {\n        self.element.contentEditable = 'inherit'; // 'false';\n      }, 1);\n    }, true);\n  }\n\n  if (!('useMouse' in this.options) || this.options.useMouse) {\n    // Listen for mouse events and translate\n    // them into terminal mouse protocols.\n    this.bindMouse();\n  }\n\n  // this.emit('open');\n\n  if (!('useFocus' in this.options) || this.options.useFocus) {\n      // This can be useful for pasting,\n      // as well as the iPad fix.\n      setTimeout(function() {\n        self.element.focus();\n      }, 100);\n  }\n\n  // Figure out whether boldness affects\n  // the character width of monospace fonts.\n  if (Terminal.brokenBold == null) {\n    Terminal.brokenBold = isBoldBroken(this.document);\n  }\n\n  this.emit('open');\n};\n\nTerminal.prototype.setRawMode = function(value) {\n  this.isRaw = !!value;\n};\n\n// XTerm mouse events\n// http://invisible-island.net/xterm/ctlseqs/ctlseqs.html#Mouse%20Tracking\n// To better understand these\n// the xterm code is very helpful:\n// Relevant files:\n//   button.c, charproc.c, misc.c\n// Relevant functions in xterm/button.c:\n//   BtnCode, EmitButtonCode, EditorButton, SendMousePosition\nTerminal.prototype.bindMouse = function() {\n  var el = this.element\n    , self = this\n    , pressed = 32;\n\n  var wheelEvent = 'onmousewheel' in this.context\n    ? 'mousewheel'\n    : 'DOMMouseScroll';\n\n  // mouseup, mousedown, mousewheel\n  // left click: ^[[M 3<^[[M#3<\n  // mousewheel up: ^[[M`3>\n  function sendButton(ev) {\n    var button\n      , pos;\n\n    // get the xterm-style button\n    button = getButton(ev);\n\n    // get mouse coordinates\n    pos = getCoords(ev);\n    if (!pos) return;\n\n    sendEvent(button, pos);\n\n    switch (ev.type) {\n      case 'mousedown':\n        pressed = button;\n        break;\n      case 'mouseup':\n        // keep it at the left\n        // button, just in case.\n        pressed = 32;\n        break;\n      case wheelEvent:\n        // nothing. don't\n        // interfere with\n        // `pressed`.\n        break;\n    }\n  }\n\n  // motion example of a left click:\n  // ^[[M 3<^[[M@4<^[[M@5<^[[M@6<^[[M@7<^[[M#7<\n  function sendMove(ev) {\n    var button = pressed\n      , pos;\n\n    pos = getCoords(ev);\n    if (!pos) return;\n\n    // buttons marked as motions\n    // are incremented by 32\n    button += 32;\n\n    sendEvent(button, pos);\n  }\n\n  // encode button and\n  // position to characters\n  function encode(data, ch) {\n    if (!self.utfMouse) {\n      if (ch === 255) return data.push(0);\n      if (ch > 127) ch = 127;\n      data.push(ch);\n    } else {\n      if (ch === 2047) return data.push(0);\n      if (ch < 127) {\n        data.push(ch);\n      } else {\n        if (ch > 2047) ch = 2047;\n        data.push(0xC0 | (ch >> 6));\n        data.push(0x80 | (ch & 0x3F));\n      }\n    }\n  }\n\n  // send a mouse event:\n  // regular/utf8: ^[[M Cb Cx Cy\n  // urxvt: ^[[ Cb ; Cx ; Cy M\n  // sgr: ^[[ Cb ; Cx ; Cy M/m\n  // vt300: ^[[ 24(1/3/5)~ [ Cx , Cy ] \\r\n  // locator: CSI P e ; P b ; P r ; P c ; P p & w\n  function sendEvent(button, pos) {\n    // self.emit('mouse', {\n    //   x: pos.x - 32,\n    //   y: pos.x - 32,\n    //   button: button\n    // });\n\n    if (self.vt300Mouse) {\n      // NOTE: Unstable.\n      // http://www.vt100.net/docs/vt3xx-gp/chapter15.html\n      button &= 3;\n      pos.x -= 32;\n      pos.y -= 32;\n      var data = '\\x1b[24';\n      if (button === 0) data += '1';\n      else if (button === 1) data += '3';\n      else if (button === 2) data += '5';\n      else if (button === 3) return;\n      else data += '0';\n      data += '~[' + pos.x + ',' + pos.y + ']\\r';\n      self.send(data);\n      return;\n    }\n\n    if (self.decLocator) {\n      // NOTE: Unstable.\n      button &= 3;\n      pos.x -= 32;\n      pos.y -= 32;\n      if (button === 0) button = 2;\n      else if (button === 1) button = 4;\n      else if (button === 2) button = 6;\n      else if (button === 3) button = 3;\n      self.send('\\x1b['\n        + button\n        + ';'\n        + (button === 3 ? 4 : 0)\n        + ';'\n        + pos.y\n        + ';'\n        + pos.x\n        + ';'\n        + (pos.page || 0)\n        + '&w');\n      return;\n    }\n\n    if (self.urxvtMouse) {\n      pos.x -= 32;\n      pos.y -= 32;\n      pos.x++;\n      pos.y++;\n      self.send('\\x1b[' + button + ';' + pos.x + ';' + pos.y + 'M');\n      return;\n    }\n\n    if (self.sgrMouse) {\n      pos.x -= 32;\n      pos.y -= 32;\n      self.send('\\x1b[<'\n        + ((button & 3) === 3 ? button & ~3 : button)\n        + ';'\n        + pos.x\n        + ';'\n        + pos.y\n        + ((button & 3) === 3 ? 'm' : 'M'));\n      return;\n    }\n\n    var data = [];\n\n    encode(data, button);\n    encode(data, pos.x);\n    encode(data, pos.y);\n\n    self.send('\\x1b[M' + String.fromCharCode.apply(String, data));\n  }\n\n  function getButton(ev) {\n    var button\n      , shift\n      , meta\n      , ctrl\n      , mod;\n\n    // two low bits:\n    // 0 = left\n    // 1 = middle\n    // 2 = right\n    // 3 = release\n    // wheel up/down:\n    // 1, and 2 - with 64 added\n    switch (ev.type) {\n      case 'mousedown':\n        button = ev.button != null\n          ? +ev.button\n          : ev.which != null\n            ? ev.which - 1\n            : null;\n\n        if (self.isMSIE) {\n          button = button === 1 ? 0 : button === 4 ? 1 : button;\n        }\n        break;\n      case 'mouseup':\n        button = 3;\n        break;\n      case 'DOMMouseScroll':\n        button = ev.detail < 0\n          ? 64\n          : 65;\n        break;\n      case 'mousewheel':\n        button = ev.wheelDeltaY > 0\n          ? 64\n          : 65;\n        break;\n    }\n\n    // next three bits are the modifiers:\n    // 4 = shift, 8 = meta, 16 = control\n    shift = ev.shiftKey ? 4 : 0;\n    meta = ev.metaKey ? 8 : 0;\n    ctrl = ev.ctrlKey ? 16 : 0;\n    mod = shift | meta | ctrl;\n\n    // no mods\n    if (self.vt200Mouse) {\n      // ctrl only\n      mod &= ctrl;\n    } else if (!self.normalMouse) {\n      mod = 0;\n    }\n\n    // increment to SP\n    button = (32 + (mod << 2)) + button;\n\n    return button;\n  }\n\n  // mouse coordinates measured in cols/rows\n  function getCoords(ev) {\n    var x, y, w, h, el;\n\n    // ignore browsers without pageX for now\n    if (ev.pageX == null) return;\n\n    x = ev.pageX;\n    y = ev.pageY;\n    el = self.element;\n\n    // should probably check offsetParent\n    // but this is more portable\n    while (el && el !== self.document.documentElement) {\n      x -= el.offsetLeft;\n      y -= el.offsetTop;\n      el = 'offsetParent' in el\n        ? el.offsetParent\n        : el.parentNode;\n    }\n\n    // convert to cols/rows\n    w = self.element.clientWidth;\n    h = self.element.clientHeight;\n    x = Math.round((x / w) * self.cols);\n    y = Math.round((y / h) * self.rows);\n\n    // be sure to avoid sending\n    // bad positions to the program\n    if (x < 0) x = 0;\n    if (x > self.cols) x = self.cols;\n    if (y < 0) y = 0;\n    if (y > self.rows) y = self.rows;\n\n    // xterm sends raw bytes and\n    // starts at 32 (SP) for each.\n    x += 32;\n    y += 32;\n\n    return {\n      x: x,\n      y: y,\n      type: ev.type === wheelEvent\n        ? 'mousewheel'\n        : ev.type\n    };\n  }\n\n  on(el, 'mousedown', function(ev) {\n    if (!self.mouseEvents) return;\n\n    // send the button\n    sendButton(ev);\n\n    // ensure focus\n    self.focus();\n\n    // fix for odd bug\n    //if (self.vt200Mouse && !self.normalMouse) {\n    // XXX This seems to break certain programs.\n    // if (self.vt200Mouse) {\n    //   sendButton({ __proto__: ev, type: 'mouseup' });\n    //   return cancel(ev);\n    // }\n\n    // bind events\n    if (self.normalMouse) on(self.document, 'mousemove', sendMove);\n\n    // x10 compatibility mode can't send button releases\n    if (!self.x10Mouse) {\n      on(self.document, 'mouseup', function up(ev) {\n        sendButton(ev);\n        if (self.normalMouse) off(self.document, 'mousemove', sendMove);\n        off(self.document, 'mouseup', up);\n        return cancel(ev);\n      });\n    }\n\n    return cancel(ev);\n  });\n\n  //if (self.normalMouse) {\n  //  on(self.document, 'mousemove', sendMove);\n  //}\n\n  on(el, wheelEvent, function(ev) {\n    if (!self.mouseEvents) return;\n    if (self.x10Mouse\n        || self.vt300Mouse\n        || self.decLocator) return;\n    sendButton(ev);\n    return cancel(ev);\n  });\n\n  // allow mousewheel scrolling in\n  // the shell for example\n  on(el, wheelEvent, function(ev) {\n    if (self.mouseEvents) return;\n    if (self.applicationKeypad) return;\n    if (ev.type === 'DOMMouseScroll') {\n      self.scrollDisp(ev.detail < 0 ? -5 : 5);\n    } else {\n      self.scrollDisp(ev.wheelDeltaY > 0 ? -5 : 5);\n    }\n    return cancel(ev);\n  });\n};\n\n/**\n * Destroy Terminal\n */\n\nTerminal.prototype.close =\nTerminal.prototype.destroySoon =\nTerminal.prototype.destroy = function() {\n  if (this.destroyed) {\n    return;\n  }\n\n  if (this._blink) {\n    clearInterval(this._blink);\n    delete this._blink;\n  }\n\n  this.readable = false;\n  this.writable = false;\n  this.destroyed = true;\n  this._events = {};\n\n  this.handler = function() {};\n  this.write = function() {};\n  this.end = function() {};\n\n  if (this.element.parentNode) {\n    this.element.parentNode.removeChild(this.element);\n  }\n\n  this.emit('end');\n  this.emit('close');\n  this.emit('finish');\n  this.emit('destroy');\n};\n\n/**\n * Rendering Engine\n */\n\n// In the screen buffer, each character\n// is stored as a an array with a character\n// and a 32-bit integer.\n// First value: a utf-16 character.\n// Second value:\n// Next 9 bits: background color (0-511).\n// Next 9 bits: foreground color (0-511).\n// Next 14 bits: a mask for misc. flags:\n//   1=bold, 2=underline, 4=blink, 8=inverse, 16=invisible\n\nTerminal.prototype.refresh = function(start, end) {\n  var x\n    , y\n    , i\n    , line\n    , out\n    , ch\n    , width\n    , data\n    , attr\n    , bg\n    , fg\n    , flags\n    , row\n    , parent;\n\n  if (end - start >= this.rows / 2) {\n    parent = this.element.parentNode;\n    if (parent) parent.removeChild(this.element);\n  }\n\n  width = this.cols;\n  y = start;\n\n  if (end >= this.lines.length) {\n    this.log('`end` is too large. Most likely a bad CSR.');\n    end = this.lines.length - 1;\n  }\n\n  for (; y <= end; y++) {\n    row = y + this.ydisp;\n\n    line = this.lines[row];\n    out = '';\n\n    if (y === this.y\n        && this.cursorState\n        && (this.ydisp === this.ybase || this.selectMode)\n        && !this.cursorHidden) {\n      x = this.x;\n    } else {\n      x = -1;\n    }\n\n    attr = this.defAttr;\n    i = 0;\n\n    for (; i < width; i++) {\n      data = line[i][0];\n      ch = line[i][1];\n\n      if (i === x) data = -1;\n\n      if (data !== attr) {\n        if (attr !== this.defAttr) {\n          out += '</span>';\n        }\n        if (data !== this.defAttr) {\n          if (data === -1) {\n            out += '<span class=\"reverse-video terminal-cursor\">';\n\t  } else {\n            if (this.useStyle) {\n\t      out += '<span class=\"';\n\t    } else {\n              out += '<span style=\"';\n            }\n\n            bg = data & 0x1ff;\n            fg = (data >> 9) & 0x1ff;\n            flags = data >> 18;\n\n            // bold\n            if (flags & 1) {\n              if (!Terminal.brokenBold) {\n\t        if (this.useStyle) {\n\t\t  out += 'term-bold '\n                } else {\n                  out += 'font-weight:bold;';\n                }\n              }\n              // See: XTerm*boldColors\n              if (fg < 8) fg += 8;\n            }\n\n            // underline\n            if (flags & 2) {\n              if (this.useStyle) {\n                out += 'term-underline ';\n\t      } else {\n                out += 'text-decoration:underline;';\n              }\n            }\n\n            // blink\n            if (flags & 4) {\n              if (this.useStyle) {\n                out += 'term-blink ';\n              } else {\n                if (flags & 2) {\n                  out = out.slice(0, -1);\n                  out += ' blink;';\n                } else {\n                  out += 'text-decoration:blink;';\n                }\n              }\n            }\n\n            // inverse\n            if (flags & 8) {\n              bg = (data >> 9) & 0x1ff;\n              fg = data & 0x1ff;\n              // Should inverse just be before the\n              // above boldColors effect instead?\n              if ((flags & 1) && fg < 8) fg += 8;\n            }\n\n            // invisible\n            if (flags & 16) {\n              if (this.useStyle) {\n                out += 'term-hidden ';\n              } else {\n                out += 'visibility:hidden;';\n              }\n            }\n\n            if (bg !== 256) {\n              if (this.useStyle) {\n                out += 'term-bg-color-' + bg + ' ';\n              } else {\n                out += 'background-color:' + this.colors[bg] + ';';\n              }\n            }\n\n            if (fg !== 257) {\n              if (this.useStyle) {\n                out += 'term-fg-color-' + fg + ' ';\n              } else {\n                out += 'color:' + this.colors[fg] + ';';\n              }\n            }\n\n            out += '\">';\n          }\n        }\n      }\n\n      switch (ch) {\n        case '&':\n          out += '&amp;';\n          break;\n        case '<':\n          out += '&lt;';\n          break;\n        case '>':\n          out += '&gt;';\n          break;\n        default:\n          if (ch <= ' ') {\n            out += '&nbsp;';\n          } else {\n            if (isWide(ch)) i++;\n            out += ch;\n          }\n          break;\n      }\n\n      attr = data;\n    }\n\n    if (attr !== this.defAttr) {\n      out += '</span>';\n    }\n\n    this.children[y].innerHTML = out;\n  }\n\n  if (parent) parent.appendChild(this.element);\n};\n\nTerminal.prototype._cursorBlink = function() {\n  if (Terminal.focus !== this) return;\n  this.cursorState ^= 1;\n  this.refresh(this.y, this.y);\n};\n\nTerminal.prototype.showCursor = function() {\n  if (!this.cursorState) {\n    this.cursorState = 1;\n    this.refresh(this.y, this.y);\n  } else {\n    // Temporarily disabled:\n    // this.refreshBlink();\n  }\n};\n\nTerminal.prototype.startBlink = function() {\n  if (!this.cursorBlink) return;\n  var self = this;\n  this._blinker = function() {\n    self._cursorBlink();\n  };\n  this._blink = setInterval(this._blinker, 500);\n};\n\nTerminal.prototype.refreshBlink = function() {\n  if (!this.cursorBlink || !this._blink) return;\n  clearInterval(this._blink);\n  this._blink = setInterval(this._blinker, 500);\n};\n\nTerminal.prototype.scroll = function() {\n  var row;\n\n  if (++this.ybase === this.scrollback) {\n    this.ybase = this.ybase / 2 | 0;\n    this.lines = this.lines.slice(-(this.ybase + this.rows) + 1);\n  }\n\n  this.ydisp = this.ybase;\n\n  // last line\n  row = this.ybase + this.rows - 1;\n\n  // subtract the bottom scroll region\n  row -= this.rows - 1 - this.scrollBottom;\n\n  if (row === this.lines.length) {\n    // potential optimization:\n    // pushing is faster than splicing\n    // when they amount to the same\n    // behavior.\n    this.lines.push(this.blankLine());\n  } else {\n    // add our new line\n    this.lines.splice(row, 0, this.blankLine());\n  }\n\n  if (this.scrollTop !== 0) {\n    if (this.ybase !== 0) {\n      this.ybase--;\n      this.ydisp = this.ybase;\n    }\n    this.lines.splice(this.ybase + this.scrollTop, 1);\n  }\n\n  // this.maxRange();\n  this.updateRange(this.scrollTop);\n  this.updateRange(this.scrollBottom);\n};\n\nTerminal.prototype.scrollDisp = function(disp) {\n  this.ydisp += disp;\n\n  if (this.ydisp > this.ybase) {\n    this.ydisp = this.ybase;\n  } else if (this.ydisp < 0) {\n    this.ydisp = 0;\n  }\n\n  this.refresh(0, this.rows - 1);\n};\n\nTerminal.prototype.write = function(data) {\n  var l = data.length\n    , i = 0\n    , j\n    , cs\n    , ch;\n\n  this.refreshStart = this.y;\n  this.refreshEnd = this.y;\n\n  if (this.ybase !== this.ydisp) {\n    this.ydisp = this.ybase;\n    this.maxRange();\n  }\n\n  // this.log(JSON.stringify(data.replace(/\\x1b/g, '^[')));\n\n  for (; i < l; i++, this.lch = ch) {\n    ch = data[i];\n    switch (this.state) {\n      case normal:\n        switch (ch) {\n          // '\\0'\n          // case '\\0':\n          // case '\\200':\n          //   break;\n\n          // '\\a'\n          case '\\x07':\n            this.bell();\n            break;\n\n          // '\\n', '\\v', '\\f'\n          case '\\n':\n          case '\\x0b':\n          case '\\x0c':\n            if (this.convertEol) {\n              this.x = 0;\n            }\n            // TODO: Implement eat_newline_glitch.\n            // if (this.realX >= this.cols) break;\n            // this.realX = 0;\n            this.y++;\n            if (this.y > this.scrollBottom) {\n              this.y--;\n              this.scroll();\n            }\n            break;\n\n          // '\\r'\n          case '\\r':\n            this.x = 0;\n            break;\n\n          // '\\b'\n          case '\\x08':\n            if (this.x > 0) {\n              this.x--;\n            }\n            break;\n\n          // '\\t'\n          case '\\t':\n            this.x = this.nextStop();\n            break;\n\n          // shift out\n          case '\\x0e':\n            this.setgLevel(1);\n            break;\n\n          // shift in\n          case '\\x0f':\n            this.setgLevel(0);\n            break;\n\n          // '\\e'\n          case '\\x1b':\n            this.state = escaped;\n            break;\n\n          default:\n            // ' '\n            if (ch >= ' ') {\n              if (this.charset && this.charset[ch]) {\n                ch = this.charset[ch];\n              }\n\n              if (this.x >= this.cols) {\n                this.x = 0;\n                this.y++;\n                if (this.y > this.scrollBottom) {\n                  this.y--;\n                  this.scroll();\n                }\n              }\n\n              this.lines[this.y + this.ybase][this.x] = [this.curAttr, ch];\n              this.x++;\n              this.updateRange(this.y);\n\n              if (isWide(ch)) {\n                j = this.y + this.ybase;\n                if (this.cols < 2 || this.x >= this.cols) {\n                  this.lines[j][this.x - 1] = [this.curAttr, ' '];\n                  break;\n                }\n                this.lines[j][this.x] = [this.curAttr, ' '];\n                this.x++;\n              }\n            }\n            break;\n        }\n        break;\n      case escaped:\n        switch (ch) {\n          // ESC [ Control Sequence Introducer ( CSI is 0x9b).\n          case '[':\n            this.params = [];\n            this.currentParam = 0;\n            this.state = csi;\n            break;\n\n          // ESC ] Operating System Command ( OSC is 0x9d).\n          case ']':\n            this.params = [];\n            this.currentParam = 0;\n            this.state = osc;\n            break;\n\n          // ESC P Device Control String ( DCS is 0x90).\n          case 'P':\n            this.params = [];\n            this.prefix = '';\n            this.currentParam = '';\n            this.state = dcs;\n            break;\n\n          // ESC _ Application Program Command ( APC is 0x9f).\n          case '_':\n            this.state = ignore;\n            break;\n\n          // ESC ^ Privacy Message ( PM is 0x9e).\n          case '^':\n            this.state = ignore;\n            break;\n\n          // ESC c Full Reset (RIS).\n          case 'c':\n            this.reset();\n            break;\n\n          // ESC E Next Line ( NEL is 0x85).\n          // ESC D Index ( IND is 0x84).\n          case 'E':\n            this.x = 0;\n            ;\n          case 'D':\n            this.index();\n            break;\n\n          // ESC M Reverse Index ( RI is 0x8d).\n          case 'M':\n            this.reverseIndex();\n            break;\n\n          // ESC % Select default/utf-8 character set.\n          // @ = default, G = utf-8\n          case '%':\n            //this.charset = null;\n            this.setgLevel(0);\n            this.setgCharset(0, Terminal.charsets.US);\n            this.state = normal;\n            i++;\n            break;\n\n          // ESC (,),*,+,-,. Designate G0-G2 Character Set.\n          case '(': // <-- this seems to get all the attention\n          case ')':\n          case '*':\n          case '+':\n          case '-':\n          case '.':\n            switch (ch) {\n              case '(':\n                this.gcharset = 0;\n                break;\n              case ')':\n                this.gcharset = 1;\n                break;\n              case '*':\n                this.gcharset = 2;\n                break;\n              case '+':\n                this.gcharset = 3;\n                break;\n              case '-':\n                this.gcharset = 1;\n                break;\n              case '.':\n                this.gcharset = 2;\n                break;\n            }\n            this.state = charset;\n            break;\n\n          // Designate G3 Character Set (VT300).\n          // A = ISO Latin-1 Supplemental.\n          // Not implemented.\n          case '/':\n            this.gcharset = 3;\n            this.state = charset;\n            i--;\n            break;\n\n          // ESC N\n          // Single Shift Select of G2 Character Set\n          // ( SS2 is 0x8e). This affects next character only.\n          case 'N':\n            break;\n          // ESC O\n          // Single Shift Select of G3 Character Set\n          // ( SS3 is 0x8f). This affects next character only.\n          case 'O':\n            break;\n          // ESC n\n          // Invoke the G2 Character Set as GL (LS2).\n          case 'n':\n            this.setgLevel(2);\n            break;\n          // ESC o\n          // Invoke the G3 Character Set as GL (LS3).\n          case 'o':\n            this.setgLevel(3);\n            break;\n          // ESC |\n          // Invoke the G3 Character Set as GR (LS3R).\n          case '|':\n            this.setgLevel(3);\n            break;\n          // ESC }\n          // Invoke the G2 Character Set as GR (LS2R).\n          case '}':\n            this.setgLevel(2);\n            break;\n          // ESC ~\n          // Invoke the G1 Character Set as GR (LS1R).\n          case '~':\n            this.setgLevel(1);\n            break;\n\n          // ESC 7 Save Cursor (DECSC).\n          case '7':\n            this.saveCursor();\n            this.state = normal;\n            break;\n\n          // ESC 8 Restore Cursor (DECRC).\n          case '8':\n            this.restoreCursor();\n            this.state = normal;\n            break;\n\n          // ESC # 3 DEC line height/width\n          case '#':\n            this.state = normal;\n            i++;\n            break;\n\n          // ESC H Tab Set (HTS is 0x88).\n          case 'H':\n            this.tabSet();\n            break;\n\n          // ESC = Application Keypad (DECPAM).\n          case '=':\n            this.log('Serial port requested application keypad.');\n            this.applicationKeypad = true;\n            this.state = normal;\n            break;\n\n          // ESC > Normal Keypad (DECPNM).\n          case '>':\n            this.log('Switching back to normal keypad.');\n            this.applicationKeypad = false;\n            this.state = normal;\n            break;\n\n          default:\n            this.state = normal;\n            this.error('Unknown ESC control: %s.', ch);\n            break;\n        }\n        break;\n\n      case charset:\n        switch (ch) {\n          case '0': // DEC Special Character and Line Drawing Set.\n            cs = Terminal.charsets.SCLD;\n            break;\n          case 'A': // UK\n            cs = Terminal.charsets.UK;\n            break;\n          case 'B': // United States (USASCII).\n            cs = Terminal.charsets.US;\n            break;\n          case '4': // Dutch\n            cs = Terminal.charsets.Dutch;\n            break;\n          case 'C': // Finnish\n          case '5':\n            cs = Terminal.charsets.Finnish;\n            break;\n          case 'R': // French\n            cs = Terminal.charsets.French;\n            break;\n          case 'Q': // FrenchCanadian\n            cs = Terminal.charsets.FrenchCanadian;\n            break;\n          case 'K': // German\n            cs = Terminal.charsets.German;\n            break;\n          case 'Y': // Italian\n            cs = Terminal.charsets.Italian;\n            break;\n          case 'E': // NorwegianDanish\n          case '6':\n            cs = Terminal.charsets.NorwegianDanish;\n            break;\n          case 'Z': // Spanish\n            cs = Terminal.charsets.Spanish;\n            break;\n          case 'H': // Swedish\n          case '7':\n            cs = Terminal.charsets.Swedish;\n            break;\n          case '=': // Swiss\n            cs = Terminal.charsets.Swiss;\n            break;\n          case '/': // ISOLatin (actually /A)\n            cs = Terminal.charsets.ISOLatin;\n            i++;\n            break;\n          default: // Default\n            cs = Terminal.charsets.US;\n            break;\n        }\n        this.setgCharset(this.gcharset, cs);\n        this.gcharset = null;\n        this.state = normal;\n        break;\n\n      case osc:\n        // OSC Ps ; Pt ST\n        // OSC Ps ; Pt BEL\n        //   Set Text Parameters.\n        if ((this.lch === '\\x1b' && ch === '\\\\') || ch === '\\x07') {\n          if (this.lch === '\\x1b') {\n            if (typeof this.currentParam === 'string') {\n              this.currentParam = this.currentParam.slice(0, -1);\n            } else if (typeof this.currentParam == 'number') {\n              this.currentParam = (this.currentParam - ('\\x1b'.charCodeAt(0) - 48)) / 10;\n            }\n          }\n\n          this.params.push(this.currentParam);\n\n          switch (this.params[0]) {\n            case 0:\n            case 1:\n            case 2:\n              if (this.params[1]) {\n                this.title = this.params[1];\n                this.handleTitle(this.title);\n              }\n              break;\n            case 3:\n              // set X property\n              break;\n            case 4:\n            case 5:\n              // change dynamic colors\n              break;\n            case 10:\n            case 11:\n            case 12:\n            case 13:\n            case 14:\n            case 15:\n            case 16:\n            case 17:\n            case 18:\n            case 19:\n              // change dynamic ui colors\n              break;\n            case 46:\n              // change log file\n              break;\n            case 50:\n              // dynamic font\n              break;\n            case 51:\n              // emacs shell\n              break;\n            case 52:\n              // manipulate selection data\n              break;\n            case 104:\n            case 105:\n            case 110:\n            case 111:\n            case 112:\n            case 113:\n            case 114:\n            case 115:\n            case 116:\n            case 117:\n            case 118:\n              // reset colors\n              break;\n          }\n\n          this.params = [];\n          this.currentParam = 0;\n          this.state = normal;\n        } else {\n          if (!this.params.length) {\n            if (ch >= '0' && ch <= '9') {\n              this.currentParam =\n                this.currentParam * 10 + ch.charCodeAt(0) - 48;\n            } else if (ch === ';') {\n              this.params.push(this.currentParam);\n              this.currentParam = '';\n            }\n          } else {\n            this.currentParam += ch;\n          }\n        }\n        break;\n\n      case csi:\n        // '?', '>', '!'\n        if (ch === '?' || ch === '>' || ch === '!') {\n          this.prefix = ch;\n          break;\n        }\n\n        // 0 - 9\n        if (ch >= '0' && ch <= '9') {\n          this.currentParam = this.currentParam * 10 + ch.charCodeAt(0) - 48;\n          break;\n        }\n\n        // '$', '\"', ' ', '\\''\n        if (ch === '$' || ch === '\"' || ch === ' ' || ch === '\\'') {\n          this.postfix = ch;\n          break;\n        }\n\n        this.params.push(this.currentParam);\n        this.currentParam = 0;\n\n        // ';'\n        if (ch === ';') break;\n\n        this.state = normal;\n\n        switch (ch) {\n          // CSI Ps A\n          // Cursor Up Ps Times (default = 1) (CUU).\n          case 'A':\n            this.cursorUp(this.params);\n            break;\n\n          // CSI Ps B\n          // Cursor Down Ps Times (default = 1) (CUD).\n          case 'B':\n            this.cursorDown(this.params);\n            break;\n\n          // CSI Ps C\n          // Cursor Forward Ps Times (default = 1) (CUF).\n          case 'C':\n            this.cursorForward(this.params);\n            break;\n\n          // CSI Ps D\n          // Cursor Backward Ps Times (default = 1) (CUB).\n          case 'D':\n            this.cursorBackward(this.params);\n            break;\n\n          // CSI Ps ; Ps H\n          // Cursor Position [row;column] (default = [1,1]) (CUP).\n          case 'H':\n            this.cursorPos(this.params);\n            break;\n\n          // CSI Ps J  Erase in Display (ED).\n          case 'J':\n            this.eraseInDisplay(this.params);\n            break;\n\n          // CSI Ps K  Erase in Line (EL).\n          case 'K':\n            this.eraseInLine(this.params);\n            break;\n\n          // CSI Pm m  Character Attributes (SGR).\n          case 'm':\n            if (!this.prefix) {\n              this.charAttributes(this.params);\n            }\n            break;\n\n          // CSI Ps n  Device Status Report (DSR).\n          case 'n':\n            if (!this.prefix) {\n              this.deviceStatus(this.params);\n            }\n            break;\n\n          /**\n           * Additions\n           */\n\n          // CSI Ps @\n          // Insert Ps (Blank) Character(s) (default = 1) (ICH).\n          case '@':\n            this.insertChars(this.params);\n            break;\n\n          // CSI Ps E\n          // Cursor Next Line Ps Times (default = 1) (CNL).\n          case 'E':\n            this.cursorNextLine(this.params);\n            break;\n\n          // CSI Ps F\n          // Cursor Preceding Line Ps Times (default = 1) (CNL).\n          case 'F':\n            this.cursorPrecedingLine(this.params);\n            break;\n\n          // CSI Ps G\n          // Cursor Character Absolute  [column] (default = [row,1]) (CHA).\n          case 'G':\n            this.cursorCharAbsolute(this.params);\n            break;\n\n          // CSI Ps L\n          // Insert Ps Line(s) (default = 1) (IL).\n          case 'L':\n            this.insertLines(this.params);\n            break;\n\n          // CSI Ps M\n          // Delete Ps Line(s) (default = 1) (DL).\n          case 'M':\n            this.deleteLines(this.params);\n            break;\n\n          // CSI Ps P\n          // Delete Ps Character(s) (default = 1) (DCH).\n          case 'P':\n            this.deleteChars(this.params);\n            break;\n\n          // CSI Ps X\n          // Erase Ps Character(s) (default = 1) (ECH).\n          case 'X':\n            this.eraseChars(this.params);\n            break;\n\n          // CSI Pm `  Character Position Absolute\n          //   [column] (default = [row,1]) (HPA).\n          case '`':\n            this.charPosAbsolute(this.params);\n            break;\n\n          // 141 61 a * HPR -\n          // Horizontal Position Relative\n          case 'a':\n            this.HPositionRelative(this.params);\n            break;\n\n          // CSI P s c\n          // Send Device Attributes (Primary DA).\n          // CSI > P s c\n          // Send Device Attributes (Secondary DA)\n          case 'c':\n            this.sendDeviceAttributes(this.params);\n            break;\n\n          // CSI Pm d\n          // Line Position Absolute  [row] (default = [1,column]) (VPA).\n          case 'd':\n            this.linePosAbsolute(this.params);\n            break;\n\n          // 145 65 e * VPR - Vertical Position Relative\n          case 'e':\n            this.VPositionRelative(this.params);\n            break;\n\n          // CSI Ps ; Ps f\n          //   Horizontal and Vertical Position [row;column] (default =\n          //   [1,1]) (HVP).\n          case 'f':\n            this.HVPosition(this.params);\n            break;\n\n          // CSI Pm h  Set Mode (SM).\n          // CSI ? Pm h - mouse escape codes, cursor escape codes\n          case 'h':\n            this.setMode(this.params);\n            break;\n\n          // CSI Pm l  Reset Mode (RM).\n          // CSI ? Pm l\n          case 'l':\n            this.resetMode(this.params);\n            break;\n\n          // CSI Ps ; Ps r\n          //   Set Scrolling Region [top;bottom] (default = full size of win-\n          //   dow) (DECSTBM).\n          // CSI ? Pm r\n          case 'r':\n            this.setScrollRegion(this.params);\n            break;\n\n          // CSI s\n          //   Save cursor (ANSI.SYS).\n          case 's':\n            this.saveCursor(this.params);\n            break;\n\n          // CSI u\n          //   Restore cursor (ANSI.SYS).\n          case 'u':\n            this.restoreCursor(this.params);\n            break;\n\n          /**\n           * Lesser Used\n           */\n\n          // CSI Ps I\n          // Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\n          case 'I':\n            this.cursorForwardTab(this.params);\n            break;\n\n          // CSI Ps S  Scroll up Ps lines (default = 1) (SU).\n          case 'S':\n            this.scrollUp(this.params);\n            break;\n\n          // CSI Ps T  Scroll down Ps lines (default = 1) (SD).\n          // CSI Ps ; Ps ; Ps ; Ps ; Ps T\n          // CSI > Ps; Ps T\n          case 'T':\n            // if (this.prefix === '>') {\n            //   this.resetTitleModes(this.params);\n            //   break;\n            // }\n            // if (this.params.length > 2) {\n            //   this.initMouseTracking(this.params);\n            //   break;\n            // }\n            if (this.params.length < 2 && !this.prefix) {\n              this.scrollDown(this.params);\n            }\n            break;\n\n          // CSI Ps Z\n          // Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\n          case 'Z':\n            this.cursorBackwardTab(this.params);\n            break;\n\n          // CSI Ps b  Repeat the preceding graphic character Ps times (REP).\n          case 'b':\n            this.repeatPrecedingCharacter(this.params);\n            break;\n\n          // CSI Ps g  Tab Clear (TBC).\n          case 'g':\n            this.tabClear(this.params);\n            break;\n\n          // CSI Pm i  Media Copy (MC).\n          // CSI ? Pm i\n          // case 'i':\n          //   this.mediaCopy(this.params);\n          //   break;\n\n          // CSI Pm m  Character Attributes (SGR).\n          // CSI > Ps; Ps m\n          // case 'm': // duplicate\n          //   if (this.prefix === '>') {\n          //     this.setResources(this.params);\n          //   } else {\n          //     this.charAttributes(this.params);\n          //   }\n          //   break;\n\n          // CSI Ps n  Device Status Report (DSR).\n          // CSI > Ps n\n          // case 'n': // duplicate\n          //   if (this.prefix === '>') {\n          //     this.disableModifiers(this.params);\n          //   } else {\n          //     this.deviceStatus(this.params);\n          //   }\n          //   break;\n\n          // CSI > Ps p  Set pointer mode.\n          // CSI ! p   Soft terminal reset (DECSTR).\n          // CSI Ps$ p\n          //   Request ANSI mode (DECRQM).\n          // CSI ? Ps$ p\n          //   Request DEC private mode (DECRQM).\n          // CSI Ps ; Ps \" p\n          case 'p':\n            switch (this.prefix) {\n              // case '>':\n              //   this.setPointerMode(this.params);\n              //   break;\n              case '!':\n                this.softReset(this.params);\n                break;\n              // case '?':\n              //   if (this.postfix === '$') {\n              //     this.requestPrivateMode(this.params);\n              //   }\n              //   break;\n              // default:\n              //   if (this.postfix === '\"') {\n              //     this.setConformanceLevel(this.params);\n              //   } else if (this.postfix === '$') {\n              //     this.requestAnsiMode(this.params);\n              //   }\n              //   break;\n            }\n            break;\n\n          // CSI Ps q  Load LEDs (DECLL).\n          // CSI Ps SP q\n          // CSI Ps \" q\n          // case 'q':\n          //   if (this.postfix === ' ') {\n          //     this.setCursorStyle(this.params);\n          //     break;\n          //   }\n          //   if (this.postfix === '\"') {\n          //     this.setCharProtectionAttr(this.params);\n          //     break;\n          //   }\n          //   this.loadLEDs(this.params);\n          //   break;\n\n          // CSI Ps ; Ps r\n          //   Set Scrolling Region [top;bottom] (default = full size of win-\n          //   dow) (DECSTBM).\n          // CSI ? Pm r\n          // CSI Pt; Pl; Pb; Pr; Ps$ r\n          // case 'r': // duplicate\n          //   if (this.prefix === '?') {\n          //     this.restorePrivateValues(this.params);\n          //   } else if (this.postfix === '$') {\n          //     this.setAttrInRectangle(this.params);\n          //   } else {\n          //     this.setScrollRegion(this.params);\n          //   }\n          //   break;\n\n          // CSI s     Save cursor (ANSI.SYS).\n          // CSI ? Pm s\n          // case 's': // duplicate\n          //   if (this.prefix === '?') {\n          //     this.savePrivateValues(this.params);\n          //   } else {\n          //     this.saveCursor(this.params);\n          //   }\n          //   break;\n\n          // CSI Ps ; Ps ; Ps t\n          // CSI Pt; Pl; Pb; Pr; Ps$ t\n          // CSI > Ps; Ps t\n          // CSI Ps SP t\n          // case 't':\n          //   if (this.postfix === '$') {\n          //     this.reverseAttrInRectangle(this.params);\n          //   } else if (this.postfix === ' ') {\n          //     this.setWarningBellVolume(this.params);\n          //   } else {\n          //     if (this.prefix === '>') {\n          //       this.setTitleModeFeature(this.params);\n          //     } else {\n          //       this.manipulateWindow(this.params);\n          //     }\n          //   }\n          //   break;\n\n          // CSI u     Restore cursor (ANSI.SYS).\n          // CSI Ps SP u\n          // case 'u': // duplicate\n          //   if (this.postfix === ' ') {\n          //     this.setMarginBellVolume(this.params);\n          //   } else {\n          //     this.restoreCursor(this.params);\n          //   }\n          //   break;\n\n          // CSI Pt; Pl; Pb; Pr; Pp; Pt; Pl; Pp$ v\n          // case 'v':\n          //   if (this.postfix === '$') {\n          //     this.copyRectagle(this.params);\n          //   }\n          //   break;\n\n          // CSI Pt ; Pl ; Pb ; Pr ' w\n          // case 'w':\n          //   if (this.postfix === '\\'') {\n          //     this.enableFilterRectangle(this.params);\n          //   }\n          //   break;\n\n          // CSI Ps x  Request Terminal Parameters (DECREQTPARM).\n          // CSI Ps x  Select Attribute Change Extent (DECSACE).\n          // CSI Pc; Pt; Pl; Pb; Pr$ x\n          // case 'x':\n          //   if (this.postfix === '$') {\n          //     this.fillRectangle(this.params);\n          //   } else {\n          //     this.requestParameters(this.params);\n          //     //this.__(this.params);\n          //   }\n          //   break;\n\n          // CSI Ps ; Pu ' z\n          // CSI Pt; Pl; Pb; Pr$ z\n          // case 'z':\n          //   if (this.postfix === '\\'') {\n          //     this.enableLocatorReporting(this.params);\n          //   } else if (this.postfix === '$') {\n          //     this.eraseRectangle(this.params);\n          //   }\n          //   break;\n\n          // CSI Pm ' {\n          // CSI Pt; Pl; Pb; Pr$ {\n          // case '{':\n          //   if (this.postfix === '\\'') {\n          //     this.setLocatorEvents(this.params);\n          //   } else if (this.postfix === '$') {\n          //     this.selectiveEraseRectangle(this.params);\n          //   }\n          //   break;\n\n          // CSI Ps ' |\n          // case '|':\n          //   if (this.postfix === '\\'') {\n          //     this.requestLocatorPosition(this.params);\n          //   }\n          //   break;\n\n          // CSI P m SP }\n          // Insert P s Column(s) (default = 1) (DECIC), VT420 and up.\n          // case '}':\n          //   if (this.postfix === ' ') {\n          //     this.insertColumns(this.params);\n          //   }\n          //   break;\n\n          // CSI P m SP ~\n          // Delete P s Column(s) (default = 1) (DECDC), VT420 and up\n          // case '~':\n          //   if (this.postfix === ' ') {\n          //     this.deleteColumns(this.params);\n          //   }\n          //   break;\n\n          default:\n            this.error('Unknown CSI code: %s.', ch);\n            break;\n        }\n\n        this.prefix = '';\n        this.postfix = '';\n        break;\n\n      case dcs:\n        if ((this.lch === '\\x1b' && ch === '\\\\') || ch === '\\x07') {\n          // Workarounds:\n          if (this.prefix === 'tmux;\\x1b') {\n            // `DCS tmux; Pt ST` may contain a Pt with an ST\n            // XXX Does tmux work this way?\n            // if (this.lch === '\\x1b' & data[i + 1] === '\\x1b' && data[i + 2] === '\\\\') {\n            //   this.currentParam += ch;\n            //   continue;\n            // }\n            // Tmux only accepts ST, not BEL:\n            if (ch === '\\x07') {\n              this.currentParam += ch;\n              continue;\n            }\n          }\n\n          if (this.lch === '\\x1b') {\n            if (typeof this.currentParam === 'string') {\n              this.currentParam = this.currentParam.slice(0, -1);\n            } else if (typeof this.currentParam == 'number') {\n              this.currentParam = (this.currentParam - ('\\x1b'.charCodeAt(0) - 48)) / 10;\n            }\n          }\n\n          this.params.push(this.currentParam);\n\n          var pt = this.params[this.params.length - 1];\n\n          switch (this.prefix) {\n            // User-Defined Keys (DECUDK).\n            // DCS Ps; Ps| Pt ST\n            case UDK:\n              this.emit('udk', {\n                clearAll: this.params[0] === 0,\n                eraseBelow: this.params[0] === 1,\n                lockKeys: this.params[1] === 0,\n                dontLockKeys: this.params[1] === 1,\n                keyList: (this.params[2] + '').split(';').map(function(part) {\n                  part = part.split('/');\n                  return {\n                    keyCode: part[0],\n                    hexKeyValue: part[1]\n                  };\n                })\n              });\n              break;\n\n            // Request Status String (DECRQSS).\n            // DCS $ q Pt ST\n            // test: echo -e '\\eP$q\"p\\e\\\\'\n            case '$q':\n              var valid = 0;\n\n              switch (pt) {\n                // DECSCA\n                // CSI Ps \" q\n                case '\"q':\n                  pt = '0\"q';\n                  valid = 1;\n                  break;\n\n                // DECSCL\n                // CSI Ps ; Ps \" p\n                case '\"p':\n                  pt = '61;0\"p';\n                  valid = 1;\n                  break;\n\n                // DECSTBM\n                // CSI Ps ; Ps r\n                case 'r':\n                  pt = ''\n                    + (this.scrollTop + 1)\n                    + ';'\n                    + (this.scrollBottom + 1)\n                    + 'r';\n                  valid = 1;\n                  break;\n\n                // SGR\n                // CSI Pm m\n                case 'm':\n                  // TODO: Parse this.curAttr here.\n                  // pt = '0m';\n                  // valid = 1;\n                  valid = 0; // Not implemented.\n                  break;\n\n                default:\n                  this.error('Unknown DCS Pt: %s.', pt);\n                  valid = 0; // unimplemented\n                  break;\n              }\n\n              this.send('\\x1bP' + valid + '$r' + pt + '\\x1b\\\\');\n              break;\n\n            // Set Termcap/Terminfo Data (xterm, experimental).\n            // DCS + p Pt ST\n            case '+p':\n              this.emit('set terminfo', {\n                name: this.params[0]\n              });\n              break;\n\n            // Request Termcap/Terminfo String (xterm, experimental)\n            // Regular xterm does not even respond to this sequence.\n            // This can cause a small glitch in vim.\n            // DCS + q Pt ST\n            // test: echo -ne '\\eP+q6b64\\e\\\\'\n            case '+q':\n              var valid = false;\n              this.send('\\x1bP' + +valid + '+r' + pt + '\\x1b\\\\');\n              break;\n\n            // Implement tmux sequence forwarding is\n            // someone uses term.js for a multiplexer.\n            // DCS tmux; ESC Pt ST\n            case 'tmux;\\x1b':\n              this.emit('passthrough', pt);\n              break;\n\n            default:\n              this.error('Unknown DCS prefix: %s.', pt);\n              break;\n          }\n\n          this.currentParam = 0;\n          this.prefix = '';\n          this.state = normal;\n        } else {\n          this.currentParam += ch;\n          if (!this.prefix) {\n            if (/^\\d*;\\d*\\|/.test(this.currentParam)) {\n              this.prefix = UDK;\n              this.params = this.currentParam.split(/[;|]/).map(function(n) {\n                if (!n.length) return 0;\n                return +n;\n              }).slice(0, -1);\n              this.currentParam = '';\n            } else if (/^[$+][a-zA-Z]/.test(this.currentParam)\n                || /^\\w+;\\x1b/.test(this.currentParam)) {\n              this.prefix = this.currentParam;\n              this.currentParam = '';\n            }\n          }\n        }\n        break;\n\n      case ignore:\n        // For PM and APC.\n        if ((this.lch === '\\x1b' && ch === '\\\\') || ch === '\\x07') {\n          this.state = normal;\n        }\n        break;\n    }\n  }\n\n  this.updateRange(this.y);\n  this.refresh(this.refreshStart, this.refreshEnd);\n\n  return true;\n};\n\nTerminal.prototype.writeln = function(data) {\n  return this.write(data + '\\r\\n');\n};\n\nTerminal.prototype.end = function(data) {\n  var ret = true;\n  if (data) {\n    ret = this.write(data);\n  }\n  this.destroySoon();\n  return ret;\n};\n\nTerminal.prototype.resume = function() {\n  ;\n};\n\nTerminal.prototype.pause = function() {\n  ;\n};\n\n// Key Resources:\n// https://developer.mozilla.org/en-US/docs/DOM/KeyboardEvent\nTerminal.prototype.keyDown = function(ev) {\n  var self = this\n    , key;\n\n  switch (ev.keyCode) {\n    // backspace\n    case 8:\n      if (ev.altKey) {\n        key = '\\x17';\n        break;\n      }\n      if (ev.shiftKey) {\n        key = '\\x08'; // ^H\n        break;\n      }\n      key = '\\x7f'; // ^?\n      break;\n    // tab\n    case 9:\n      if (ev.shiftKey) {\n        key = '\\x1b[Z';\n        break;\n      }\n      key = '\\t';\n      break;\n    // return/enter\n    case 13:\n      key = '\\r';\n      break;\n    // escape\n    case 27:\n      key = '\\x1b';\n      break;\n    // space\n    case 32:\n      key = '\\x20';\n      break;\n    // left-arrow\n    case 37:\n      if (this.applicationCursor) {\n        key = '\\x1bOD'; // SS3 as ^[O for 7-bit\n        //key = '\\x8fD'; // SS3 as 0x8f for 8-bit\n        break;\n      }\n      if (ev.ctrlKey) {\n        key = '\\x1b[5D';\n        break;\n      }\n      key = '\\x1b[D';\n      break;\n    // right-arrow\n    case 39:\n      if (this.applicationCursor) {\n        key = '\\x1bOC';\n        break;\n      }\n      if (ev.ctrlKey) {\n        key = '\\x1b[5C';\n        break;\n      }\n      key = '\\x1b[C';\n      break;\n    // up-arrow\n    case 38:\n      if (this.applicationCursor) {\n        key = '\\x1bOA';\n        break;\n      }\n      if (ev.ctrlKey) {\n        this.scrollDisp(-1);\n        return cancel(ev);\n      } else {\n        key = '\\x1b[A';\n      }\n      break;\n    // down-arrow\n    case 40:\n      if (this.applicationCursor) {\n        key = '\\x1bOB';\n        break;\n      }\n      if (ev.ctrlKey) {\n        this.scrollDisp(1);\n        return cancel(ev);\n      } else {\n        key = '\\x1b[B';\n      }\n      break;\n    // delete\n    case 46:\n      key = '\\x1b[3~';\n      break;\n    // insert\n    case 45:\n      key = '\\x1b[2~';\n      break;\n    // home\n    case 36:\n      if (this.applicationKeypad) {\n        key = '\\x1bOH';\n        break;\n      }\n      key = '\\x1bOH';\n      break;\n    // end\n    case 35:\n      if (this.applicationKeypad) {\n        key = '\\x1bOF';\n        break;\n      }\n      key = '\\x1bOF';\n      break;\n    // page up\n    case 33:\n      if (ev.shiftKey) {\n        this.scrollDisp(-(this.rows - 1));\n        return cancel(ev);\n      } else {\n        key = '\\x1b[5~';\n      }\n      break;\n    // page down\n    case 34:\n      if (ev.shiftKey) {\n        this.scrollDisp(this.rows - 1);\n        return cancel(ev);\n      } else {\n        key = '\\x1b[6~';\n      }\n      break;\n    // F1\n    case 112:\n      key = '\\x1bOP';\n      break;\n    // F2\n    case 113:\n      key = '\\x1bOQ';\n      break;\n    // F3\n    case 114:\n      key = '\\x1bOR';\n      break;\n    // F4\n    case 115:\n      key = '\\x1bOS';\n      break;\n    // F5\n    case 116:\n      key = '\\x1b[15~';\n      break;\n    // F6\n    case 117:\n      key = '\\x1b[17~';\n      break;\n    // F7\n    case 118:\n      key = '\\x1b[18~';\n      break;\n    // F8\n    case 119:\n      key = '\\x1b[19~';\n      break;\n    // F9\n    case 120:\n      key = '\\x1b[20~';\n      break;\n    // F10\n    case 121:\n      key = '\\x1b[21~';\n      break;\n    // F11\n    case 122:\n      key = '\\x1b[23~';\n      break;\n    // F12\n    case 123:\n      key = '\\x1b[24~';\n      break;\n    default:\n      // a-z and space\n      if (ev.ctrlKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          // Ctrl-A\n          if (this.screenKeys) {\n            if (!this.prefixMode && !this.selectMode && ev.keyCode === 65) {\n              this.enterPrefix();\n              return cancel(ev);\n            }\n          }\n          // Ctrl-V\n          if (this.prefixMode && ev.keyCode === 86) {\n            this.leavePrefix();\n            return;\n          }\n          // Ctrl-C\n          if ((this.prefixMode || this.selectMode) && ev.keyCode === 67) {\n            if (this.visualMode) {\n              setTimeout(function() {\n                self.leaveVisual();\n              }, 1);\n            }\n            return;\n          }\n          key = String.fromCharCode(ev.keyCode - 64);\n        } else if (ev.keyCode === 32) {\n          // NUL\n          key = String.fromCharCode(0);\n        } else if (ev.keyCode >= 51 && ev.keyCode <= 55) {\n          // escape, file sep, group sep, record sep, unit sep\n          key = String.fromCharCode(ev.keyCode - 51 + 27);\n        } else if (ev.keyCode === 56) {\n          // delete\n          key = String.fromCharCode(127);\n        } else if (ev.keyCode === 219) {\n          // ^[ - escape\n          key = String.fromCharCode(27);\n        } else if (ev.keyCode === 221) {\n          // ^] - group sep\n          key = String.fromCharCode(29);\n        }\n      } else if (ev.altKey) {\n        if (ev.keyCode >= 65 && ev.keyCode <= 90) {\n          key = '\\x1b' + String.fromCharCode(ev.keyCode + 32);\n        } else if (ev.keyCode === 192) {\n          key = '\\x1b`';\n        } else if (ev.keyCode >= 48 && ev.keyCode <= 57) {\n          key = '\\x1b' + (ev.keyCode - 48);\n        }\n      }\n      break;\n  }\n\n  if (!key) return true;\n\n  if (this.prefixMode) {\n    this.leavePrefix();\n    return cancel(ev);\n  }\n\n  if (this.selectMode) {\n    this.keySelect(ev, key);\n    return cancel(ev);\n  }\n\n  this.emit('keydown', ev);\n  this.emit('key', key, ev);\n\n  this.showCursor();\n  this.handler(key);\n\n  return cancel(ev);\n};\n\nTerminal.prototype.setgLevel = function(g) {\n  this.glevel = g;\n  this.charset = this.charsets[g];\n};\n\nTerminal.prototype.setgCharset = function(g, charset) {\n  this.charsets[g] = charset;\n  if (this.glevel === g) {\n    this.charset = charset;\n  }\n};\n\nTerminal.prototype.keyPress = function(ev) {\n  var key;\n\n  cancel(ev);\n\n  if (ev.charCode) {\n    key = ev.charCode;\n  } else if (ev.which == null) {\n    key = ev.keyCode;\n  } else if (ev.which !== 0 && ev.charCode !== 0) {\n    key = ev.which;\n  } else {\n    return false;\n  }\n\n  if (!key || ev.ctrlKey || ev.altKey || ev.metaKey) return false;\n\n  key = String.fromCharCode(key);\n\n  if (this.prefixMode) {\n    this.leavePrefix();\n    this.keyPrefix(ev, key);\n    return false;\n  }\n\n  if (this.selectMode) {\n    this.keySelect(ev, key);\n    return false;\n  }\n\n  this.emit('keypress', key, ev);\n  this.emit('key', key, ev);\n\n  this.showCursor();\n  this.handler(key);\n\n  return false;\n};\n\nTerminal.prototype.send = function(data) {\n  var self = this;\n\n  if (!this.queue) {\n    setTimeout(function() {\n      self.handler(self.queue);\n      self.queue = '';\n    }, 1);\n  }\n\n  this.queue += data;\n};\n\nTerminal.prototype.bell = function() {\n  this.emit('bell');\n  if (!this.visualBell) return;\n  var self = this;\n  this.element.style.borderColor = 'white';\n  setTimeout(function() {\n    self.element.style.borderColor = '';\n  }, 10);\n  if (this.popOnBell) this.focus();\n};\n\nTerminal.prototype.log = function() {\n  if (!this.debug) return;\n  if (!this.context.console || !this.context.console.log) return;\n  var args = Array.prototype.slice.call(arguments);\n  this.context.console.log.apply(this.context.console, args);\n};\n\nTerminal.prototype.error = function() {\n  if (!this.debug) return;\n  if (!this.context.console || !this.context.console.error) return;\n  var args = Array.prototype.slice.call(arguments);\n  this.context.console.error.apply(this.context.console, args);\n};\n\nTerminal.prototype.resize = function(x, y) {\n  var line\n    , el\n    , i\n    , j\n    , ch;\n\n  if (x < 1) x = 1;\n  if (y < 1) y = 1;\n\n  // resize cols\n  j = this.cols;\n  if (j < x) {\n    ch = [this.defAttr, ' ']; // does xterm use the default attr?\n    i = this.lines.length;\n    while (i--) {\n      while (this.lines[i].length < x) {\n        this.lines[i].push(ch);\n      }\n    }\n  } else if (j > x) {\n    i = this.lines.length;\n    while (i--) {\n      while (this.lines[i].length > x) {\n        this.lines[i].pop();\n      }\n    }\n  }\n  this.setupStops(j);\n  this.cols = x;\n  this.columns = x;\n\n  // resize rows\n  j = this.rows;\n  if (j < y) {\n    el = this.element;\n    while (j++ < y) {\n      if (this.lines.length < y + this.ybase) {\n        this.lines.push(this.blankLine());\n      }\n      if (this.children.length < y) {\n        line = this.document.createElement('div');\n        el.appendChild(line);\n        this.children.push(line);\n      }\n    }\n  } else if (j > y) {\n    while (j-- > y) {\n      if (this.lines.length > y + this.ybase) {\n        this.lines.pop();\n      }\n      if (this.children.length > y) {\n        el = this.children.pop();\n        if (!el) continue;\n        el.parentNode.removeChild(el);\n      }\n    }\n  }\n  this.rows = y;\n\n  // make sure the cursor stays on screen\n  if (this.y >= y) this.y = y - 1;\n  if (this.x >= x) this.x = x - 1;\n\n  this.scrollTop = 0;\n  this.scrollBottom = y - 1;\n\n  this.refresh(0, this.rows - 1);\n\n  // it's a real nightmare trying\n  // to resize the original\n  // screen buffer. just set it\n  // to null for now.\n  this.normal = null;\n\n  // Act as though we are a node TTY stream:\n  this.emit('resize');\n};\n\nTerminal.prototype.updateRange = function(y) {\n  if (y < this.refreshStart) this.refreshStart = y;\n  if (y > this.refreshEnd) this.refreshEnd = y;\n  // if (y > this.refreshEnd) {\n  //   this.refreshEnd = y;\n  //   if (y > this.rows - 1) {\n  //     this.refreshEnd = this.rows - 1;\n  //   }\n  // }\n};\n\nTerminal.prototype.maxRange = function() {\n  this.refreshStart = 0;\n  this.refreshEnd = this.rows - 1;\n};\n\nTerminal.prototype.setupStops = function(i) {\n  if (i != null) {\n    if (!this.tabs[i]) {\n      i = this.prevStop(i);\n    }\n  } else {\n    this.tabs = {};\n    i = 0;\n  }\n\n  for (; i < this.cols; i += 8) {\n    this.tabs[i] = true;\n  }\n};\n\nTerminal.prototype.prevStop = function(x) {\n  if (x == null) x = this.x;\n  while (!this.tabs[--x] && x > 0);\n  return x >= this.cols\n    ? this.cols - 1\n    : x < 0 ? 0 : x;\n};\n\nTerminal.prototype.nextStop = function(x) {\n  if (x == null) x = this.x;\n  while (!this.tabs[++x] && x < this.cols);\n  return x >= this.cols\n    ? this.cols - 1\n    : x < 0 ? 0 : x;\n};\n\n// back_color_erase feature for xterm.\nTerminal.prototype.eraseAttr = function() {\n  // if (this.is('screen')) return this.defAttr;\n  return (this.defAttr & ~0x1ff) | (this.curAttr & 0x1ff);\n};\n\nTerminal.prototype.eraseRight = function(x, y) {\n  var line = this.lines[this.ybase + y]\n    , ch = [this.eraseAttr(), ' ']; // xterm\n\n\n  for (; x < this.cols; x++) {\n    line[x] = ch;\n  }\n\n  this.updateRange(y);\n};\n\nTerminal.prototype.eraseLeft = function(x, y) {\n  var line = this.lines[this.ybase + y]\n    , ch = [this.eraseAttr(), ' ']; // xterm\n\n  x++;\n  while (x--) line[x] = ch;\n\n  this.updateRange(y);\n};\n\nTerminal.prototype.eraseLine = function(y) {\n  this.eraseRight(0, y);\n};\n\nTerminal.prototype.blankLine = function(cur) {\n  var attr = cur\n    ? this.eraseAttr()\n    : this.defAttr;\n\n  var ch = [attr, ' ']\n    , line = []\n    , i = 0;\n\n  for (; i < this.cols; i++) {\n    line[i] = ch;\n  }\n\n  return line;\n};\n\nTerminal.prototype.ch = function(cur) {\n  return cur\n    ? [this.eraseAttr(), ' ']\n    : [this.defAttr, ' '];\n};\n\nTerminal.prototype.is = function(term) {\n  var name = this.termName;\n  return (name + '').indexOf(term) === 0;\n};\n\nTerminal.prototype.handler = function(data) {\n  this.emit('data', data);\n};\n\nTerminal.prototype.handleTitle = function(title) {\n  this.emit('title', title);\n};\n\n/**\n * ESC\n */\n\n// ESC D Index (IND is 0x84).\nTerminal.prototype.index = function() {\n  this.y++;\n  if (this.y > this.scrollBottom) {\n    this.y--;\n    this.scroll();\n  }\n  this.state = normal;\n};\n\n// ESC M Reverse Index (RI is 0x8d).\nTerminal.prototype.reverseIndex = function() {\n  var j;\n  this.y--;\n  if (this.y < this.scrollTop) {\n    this.y++;\n    // possibly move the code below to term.reverseScroll();\n    // test: echo -ne '\\e[1;1H\\e[44m\\eM\\e[0m'\n    // blankLine(true) is xterm/linux behavior\n    this.lines.splice(this.y + this.ybase, 0, this.blankLine(true));\n    j = this.rows - 1 - this.scrollBottom;\n    this.lines.splice(this.rows - 1 + this.ybase - j + 1, 1);\n    // this.maxRange();\n    this.updateRange(this.scrollTop);\n    this.updateRange(this.scrollBottom);\n  }\n  this.state = normal;\n};\n\n// ESC c Full Reset (RIS).\nTerminal.prototype.reset = function() {\n  this.options.rows = this.rows;\n  this.options.cols = this.cols;\n  Terminal.call(this, this.options);\n  this.refresh(0, this.rows - 1);\n};\n\n// ESC H Tab Set (HTS is 0x88).\nTerminal.prototype.tabSet = function() {\n  this.tabs[this.x] = true;\n  this.state = normal;\n};\n\n/**\n * CSI\n */\n\n// CSI Ps A\n// Cursor Up Ps Times (default = 1) (CUU).\nTerminal.prototype.cursorUp = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.y -= param;\n  if (this.y < 0) this.y = 0;\n};\n\n// CSI Ps B\n// Cursor Down Ps Times (default = 1) (CUD).\nTerminal.prototype.cursorDown = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.y += param;\n  if (this.y >= this.rows) {\n    this.y = this.rows - 1;\n  }\n};\n\n// CSI Ps C\n// Cursor Forward Ps Times (default = 1) (CUF).\nTerminal.prototype.cursorForward = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.x += param;\n  if (this.x >= this.cols) {\n    this.x = this.cols - 1;\n  }\n};\n\n// CSI Ps D\n// Cursor Backward Ps Times (default = 1) (CUB).\nTerminal.prototype.cursorBackward = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.x -= param;\n  if (this.x < 0) this.x = 0;\n};\n\n// CSI Ps ; Ps H\n// Cursor Position [row;column] (default = [1,1]) (CUP).\nTerminal.prototype.cursorPos = function(params) {\n  var row, col;\n\n  row = params[0] - 1;\n\n  if (params.length >= 2) {\n    col = params[1] - 1;\n  } else {\n    col = 0;\n  }\n\n  if (row < 0) {\n    row = 0;\n  } else if (row >= this.rows) {\n    row = this.rows - 1;\n  }\n\n  if (col < 0) {\n    col = 0;\n  } else if (col >= this.cols) {\n    col = this.cols - 1;\n  }\n\n  this.x = col;\n  this.y = row;\n};\n\n// CSI Ps J  Erase in Display (ED).\n//     Ps = 0  -> Erase Below (default).\n//     Ps = 1  -> Erase Above.\n//     Ps = 2  -> Erase All.\n//     Ps = 3  -> Erase Saved Lines (xterm).\n// CSI ? Ps J\n//   Erase in Display (DECSED).\n//     Ps = 0  -> Selective Erase Below (default).\n//     Ps = 1  -> Selective Erase Above.\n//     Ps = 2  -> Selective Erase All.\nTerminal.prototype.eraseInDisplay = function(params) {\n  var j;\n  switch (params[0]) {\n    case 0:\n      this.eraseRight(this.x, this.y);\n      j = this.y + 1;\n      for (; j < this.rows; j++) {\n        this.eraseLine(j);\n      }\n      break;\n    case 1:\n      this.eraseLeft(this.x, this.y);\n      j = this.y;\n      while (j--) {\n        this.eraseLine(j);\n      }\n      break;\n    case 2:\n      j = this.rows;\n      while (j--) this.eraseLine(j);\n      break;\n    case 3:\n      ; // no saved lines\n      break;\n  }\n};\n\n// CSI Ps K  Erase in Line (EL).\n//     Ps = 0  -> Erase to Right (default).\n//     Ps = 1  -> Erase to Left.\n//     Ps = 2  -> Erase All.\n// CSI ? Ps K\n//   Erase in Line (DECSEL).\n//     Ps = 0  -> Selective Erase to Right (default).\n//     Ps = 1  -> Selective Erase to Left.\n//     Ps = 2  -> Selective Erase All.\nTerminal.prototype.eraseInLine = function(params) {\n  switch (params[0]) {\n    case 0:\n      this.eraseRight(this.x, this.y);\n      break;\n    case 1:\n      this.eraseLeft(this.x, this.y);\n      break;\n    case 2:\n      this.eraseLine(this.y);\n      break;\n  }\n};\n\n// CSI Pm m  Character Attributes (SGR).\n//     Ps = 0  -> Normal (default).\n//     Ps = 1  -> Bold.\n//     Ps = 4  -> Underlined.\n//     Ps = 5  -> Blink (appears as Bold).\n//     Ps = 7  -> Inverse.\n//     Ps = 8  -> Invisible, i.e., hidden (VT300).\n//     Ps = 2 2  -> Normal (neither bold nor faint).\n//     Ps = 2 4  -> Not underlined.\n//     Ps = 2 5  -> Steady (not blinking).\n//     Ps = 2 7  -> Positive (not inverse).\n//     Ps = 2 8  -> Visible, i.e., not hidden (VT300).\n//     Ps = 3 0  -> Set foreground color to Black.\n//     Ps = 3 1  -> Set foreground color to Red.\n//     Ps = 3 2  -> Set foreground color to Green.\n//     Ps = 3 3  -> Set foreground color to Yellow.\n//     Ps = 3 4  -> Set foreground color to Blue.\n//     Ps = 3 5  -> Set foreground color to Magenta.\n//     Ps = 3 6  -> Set foreground color to Cyan.\n//     Ps = 3 7  -> Set foreground color to White.\n//     Ps = 3 9  -> Set foreground color to default (original).\n//     Ps = 4 0  -> Set background color to Black.\n//     Ps = 4 1  -> Set background color to Red.\n//     Ps = 4 2  -> Set background color to Green.\n//     Ps = 4 3  -> Set background color to Yellow.\n//     Ps = 4 4  -> Set background color to Blue.\n//     Ps = 4 5  -> Set background color to Magenta.\n//     Ps = 4 6  -> Set background color to Cyan.\n//     Ps = 4 7  -> Set background color to White.\n//     Ps = 4 9  -> Set background color to default (original).\n\n//   If 16-color support is compiled, the following apply.  Assume\n//   that xterm's resources are set so that the ISO color codes are\n//   the first 8 of a set of 16.  Then the aixterm colors are the\n//   bright versions of the ISO colors:\n//     Ps = 9 0  -> Set foreground color to Black.\n//     Ps = 9 1  -> Set foreground color to Red.\n//     Ps = 9 2  -> Set foreground color to Green.\n//     Ps = 9 3  -> Set foreground color to Yellow.\n//     Ps = 9 4  -> Set foreground color to Blue.\n//     Ps = 9 5  -> Set foreground color to Magenta.\n//     Ps = 9 6  -> Set foreground color to Cyan.\n//     Ps = 9 7  -> Set foreground color to White.\n//     Ps = 1 0 0  -> Set background color to Black.\n//     Ps = 1 0 1  -> Set background color to Red.\n//     Ps = 1 0 2  -> Set background color to Green.\n//     Ps = 1 0 3  -> Set background color to Yellow.\n//     Ps = 1 0 4  -> Set background color to Blue.\n//     Ps = 1 0 5  -> Set background color to Magenta.\n//     Ps = 1 0 6  -> Set background color to Cyan.\n//     Ps = 1 0 7  -> Set background color to White.\n\n//   If xterm is compiled with the 16-color support disabled, it\n//   supports the following, from rxvt:\n//     Ps = 1 0 0  -> Set foreground and background color to\n//     default.\n\n//   If 88- or 256-color support is compiled, the following apply.\n//     Ps = 3 8  ; 5  ; Ps -> Set foreground color to the second\n//     Ps.\n//     Ps = 4 8  ; 5  ; Ps -> Set background color to the second\n//     Ps.\nTerminal.prototype.charAttributes = function(params) {\n  // Optimize a single SGR0.\n  if (params.length === 1 && params[0] === 0) {\n    this.curAttr = this.defAttr;\n    return;\n  }\n\n  var l = params.length\n    , i = 0\n    , flags = this.curAttr >> 18\n    , fg = (this.curAttr >> 9) & 0x1ff\n    , bg = this.curAttr & 0x1ff\n    , p;\n\n  for (; i < l; i++) {\n    p = params[i];\n    if (p >= 30 && p <= 37) {\n      // fg color 8\n      fg = p - 30;\n    } else if (p >= 40 && p <= 47) {\n      // bg color 8\n      bg = p - 40;\n    } else if (p >= 90 && p <= 97) {\n      // fg color 16\n      p += 8;\n      fg = p - 90;\n    } else if (p >= 100 && p <= 107) {\n      // bg color 16\n      p += 8;\n      bg = p - 100;\n    } else if (p === 0) {\n      // default\n      flags = this.defAttr >> 18;\n      fg = (this.defAttr >> 9) & 0x1ff;\n      bg = this.defAttr & 0x1ff;\n      // flags = 0;\n      // fg = 0x1ff;\n      // bg = 0x1ff;\n    } else if (p === 1) {\n      // bold text\n      flags |= 1;\n    } else if (p === 4) {\n      // underlined text\n      flags |= 2;\n    } else if (p === 5) {\n      // blink\n      flags |= 4;\n    } else if (p === 7) {\n      // inverse and positive\n      // test with: echo -e '\\e[31m\\e[42mhello\\e[7mworld\\e[27mhi\\e[m'\n      flags |= 8;\n    } else if (p === 8) {\n      // invisible\n      flags |= 16;\n    } else if (p === 22) {\n      // not bold\n      flags &= ~1;\n    } else if (p === 24) {\n      // not underlined\n      flags &= ~2;\n    } else if (p === 25) {\n      // not blink\n      flags &= ~4;\n    } else if (p === 27) {\n      // not inverse\n      flags &= ~8;\n    } else if (p === 28) {\n      // not invisible\n      flags &= ~16;\n    } else if (p === 39) {\n      // reset fg\n      fg = (this.defAttr >> 9) & 0x1ff;\n    } else if (p === 49) {\n      // reset bg\n      bg = this.defAttr & 0x1ff;\n    } else if (p === 38) {\n      // fg color 256\n      if (params[i + 1] === 2) {\n        i += 2;\n        fg = matchColor(\n          params[i] & 0xff,\n          params[i + 1] & 0xff,\n          params[i + 2] & 0xff);\n        if (fg === -1) fg = 0x1ff;\n        i += 2;\n      } else if (params[i + 1] === 5) {\n        i += 2;\n        p = params[i] & 0xff;\n        fg = p;\n      }\n    } else if (p === 48) {\n      // bg color 256\n      if (params[i + 1] === 2) {\n        i += 2;\n        bg = matchColor(\n          params[i] & 0xff,\n          params[i + 1] & 0xff,\n          params[i + 2] & 0xff);\n        if (bg === -1) bg = 0x1ff;\n        i += 2;\n      } else if (params[i + 1] === 5) {\n        i += 2;\n        p = params[i] & 0xff;\n        bg = p;\n      }\n    } else if (p === 100) {\n      // reset fg/bg\n      fg = (this.defAttr >> 9) & 0x1ff;\n      bg = this.defAttr & 0x1ff;\n    } else {\n      this.error('Unknown SGR attribute: %d.', p);\n    }\n  }\n\n  this.curAttr = (flags << 18) | (fg << 9) | bg;\n};\n\n// CSI Ps n  Device Status Report (DSR).\n//     Ps = 5  -> Status Report.  Result (``OK'') is\n//   CSI 0 n\n//     Ps = 6  -> Report Cursor Position (CPR) [row;column].\n//   Result is\n//   CSI r ; c R\n// CSI ? Ps n\n//   Device Status Report (DSR, DEC-specific).\n//     Ps = 6  -> Report Cursor Position (CPR) [row;column] as CSI\n//     ? r ; c R (assumes page is zero).\n//     Ps = 1 5  -> Report Printer status as CSI ? 1 0  n  (ready).\n//     or CSI ? 1 1  n  (not ready).\n//     Ps = 2 5  -> Report UDK status as CSI ? 2 0  n  (unlocked)\n//     or CSI ? 2 1  n  (locked).\n//     Ps = 2 6  -> Report Keyboard status as\n//   CSI ? 2 7  ;  1  ;  0  ;  0  n  (North American).\n//   The last two parameters apply to VT400 & up, and denote key-\n//   board ready and LK01 respectively.\n//     Ps = 5 3  -> Report Locator status as\n//   CSI ? 5 3  n  Locator available, if compiled-in, or\n//   CSI ? 5 0  n  No Locator, if not.\nTerminal.prototype.deviceStatus = function(params) {\n  if (!this.prefix) {\n    switch (params[0]) {\n      case 5:\n        // status report\n        this.send('\\x1b[0n');\n        break;\n      case 6:\n        // cursor position\n        this.send('\\x1b['\n          + (this.y + 1)\n          + ';'\n          + (this.x + 1)\n          + 'R');\n        break;\n    }\n  } else if (this.prefix === '?') {\n    // modern xterm doesnt seem to\n    // respond to any of these except ?6, 6, and 5\n    switch (params[0]) {\n      case 6:\n        // cursor position\n        this.send('\\x1b[?'\n          + (this.y + 1)\n          + ';'\n          + (this.x + 1)\n          + 'R');\n        break;\n      case 15:\n        // no printer\n        // this.send('\\x1b[?11n');\n        break;\n      case 25:\n        // dont support user defined keys\n        // this.send('\\x1b[?21n');\n        break;\n      case 26:\n        // north american keyboard\n        // this.send('\\x1b[?27;1;0;0n');\n        break;\n      case 53:\n        // no dec locator/mouse\n        // this.send('\\x1b[?50n');\n        break;\n    }\n  }\n};\n\n/**\n * Additions\n */\n\n// CSI Ps @\n// Insert Ps (Blank) Character(s) (default = 1) (ICH).\nTerminal.prototype.insertChars = function(params) {\n  var param, row, j, ch;\n\n  param = params[0];\n  if (param < 1) param = 1;\n\n  row = this.y + this.ybase;\n  j = this.x;\n  ch = [this.eraseAttr(), ' ']; // xterm\n\n  while (param-- && j < this.cols) {\n    this.lines[row].splice(j++, 0, ch);\n    this.lines[row].pop();\n  }\n};\n\n// CSI Ps E\n// Cursor Next Line Ps Times (default = 1) (CNL).\n// same as CSI Ps B ?\nTerminal.prototype.cursorNextLine = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.y += param;\n  if (this.y >= this.rows) {\n    this.y = this.rows - 1;\n  }\n  this.x = 0;\n};\n\n// CSI Ps F\n// Cursor Preceding Line Ps Times (default = 1) (CNL).\n// reuse CSI Ps A ?\nTerminal.prototype.cursorPrecedingLine = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.y -= param;\n  if (this.y < 0) this.y = 0;\n  this.x = 0;\n};\n\n// CSI Ps G\n// Cursor Character Absolute  [column] (default = [row,1]) (CHA).\nTerminal.prototype.cursorCharAbsolute = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.x = param - 1;\n};\n\n// CSI Ps L\n// Insert Ps Line(s) (default = 1) (IL).\nTerminal.prototype.insertLines = function(params) {\n  var param, row, j;\n\n  param = params[0];\n  if (param < 1) param = 1;\n  row = this.y + this.ybase;\n\n  j = this.rows - 1 - this.scrollBottom;\n  j = this.rows - 1 + this.ybase - j + 1;\n\n  while (param--) {\n    // test: echo -e '\\e[44m\\e[1L\\e[0m'\n    // blankLine(true) - xterm/linux behavior\n    this.lines.splice(row, 0, this.blankLine(true));\n    this.lines.splice(j, 1);\n  }\n\n  // this.maxRange();\n  this.updateRange(this.y);\n  this.updateRange(this.scrollBottom);\n};\n\n// CSI Ps M\n// Delete Ps Line(s) (default = 1) (DL).\nTerminal.prototype.deleteLines = function(params) {\n  var param, row, j;\n\n  param = params[0];\n  if (param < 1) param = 1;\n  row = this.y + this.ybase;\n\n  j = this.rows - 1 - this.scrollBottom;\n  j = this.rows - 1 + this.ybase - j;\n\n  while (param--) {\n    // test: echo -e '\\e[44m\\e[1M\\e[0m'\n    // blankLine(true) - xterm/linux behavior\n    this.lines.splice(j + 1, 0, this.blankLine(true));\n    this.lines.splice(row, 1);\n  }\n\n  // this.maxRange();\n  this.updateRange(this.y);\n  this.updateRange(this.scrollBottom);\n};\n\n// CSI Ps P\n// Delete Ps Character(s) (default = 1) (DCH).\nTerminal.prototype.deleteChars = function(params) {\n  var param, row, ch;\n\n  param = params[0];\n  if (param < 1) param = 1;\n\n  row = this.y + this.ybase;\n  ch = [this.eraseAttr(), ' ']; // xterm\n\n  while (param--) {\n    this.lines[row].splice(this.x, 1);\n    this.lines[row].push(ch);\n  }\n};\n\n// CSI Ps X\n// Erase Ps Character(s) (default = 1) (ECH).\nTerminal.prototype.eraseChars = function(params) {\n  var param, row, j, ch;\n\n  param = params[0];\n  if (param < 1) param = 1;\n\n  row = this.y + this.ybase;\n  j = this.x;\n  ch = [this.eraseAttr(), ' ']; // xterm\n\n  while (param-- && j < this.cols) {\n    this.lines[row][j++] = ch;\n  }\n};\n\n// CSI Pm `  Character Position Absolute\n//   [column] (default = [row,1]) (HPA).\nTerminal.prototype.charPosAbsolute = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.x = param - 1;\n  if (this.x >= this.cols) {\n    this.x = this.cols - 1;\n  }\n};\n\n// 141 61 a * HPR -\n// Horizontal Position Relative\n// reuse CSI Ps C ?\nTerminal.prototype.HPositionRelative = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.x += param;\n  if (this.x >= this.cols) {\n    this.x = this.cols - 1;\n  }\n};\n\n// CSI Ps c  Send Device Attributes (Primary DA).\n//     Ps = 0  or omitted -> request attributes from terminal.  The\n//     response depends on the decTerminalID resource setting.\n//     -> CSI ? 1 ; 2 c  (``VT100 with Advanced Video Option'')\n//     -> CSI ? 1 ; 0 c  (``VT101 with No Options'')\n//     -> CSI ? 6 c  (``VT102'')\n//     -> CSI ? 6 0 ; 1 ; 2 ; 6 ; 8 ; 9 ; 1 5 ; c  (``VT220'')\n//   The VT100-style response parameters do not mean anything by\n//   themselves.  VT220 parameters do, telling the host what fea-\n//   tures the terminal supports:\n//     Ps = 1  -> 132-columns.\n//     Ps = 2  -> Printer.\n//     Ps = 6  -> Selective erase.\n//     Ps = 8  -> User-defined keys.\n//     Ps = 9  -> National replacement character sets.\n//     Ps = 1 5  -> Technical characters.\n//     Ps = 2 2  -> ANSI color, e.g., VT525.\n//     Ps = 2 9  -> ANSI text locator (i.e., DEC Locator mode).\n// CSI > Ps c\n//   Send Device Attributes (Secondary DA).\n//     Ps = 0  or omitted -> request the terminal's identification\n//     code.  The response depends on the decTerminalID resource set-\n//     ting.  It should apply only to VT220 and up, but xterm extends\n//     this to VT100.\n//     -> CSI  > Pp ; Pv ; Pc c\n//   where Pp denotes the terminal type\n//     Pp = 0  -> ``VT100''.\n//     Pp = 1  -> ``VT220''.\n//   and Pv is the firmware version (for xterm, this was originally\n//   the XFree86 patch number, starting with 95).  In a DEC termi-\n//   nal, Pc indicates the ROM cartridge registration number and is\n//   always zero.\n// More information:\n//   xterm/charproc.c - line 2012, for more information.\n//   vim responds with ^[[?0c or ^[[?1c after the terminal's response (?)\nTerminal.prototype.sendDeviceAttributes = function(params) {\n  if (params[0] > 0) return;\n\n  if (!this.prefix) {\n    if (this.is('xterm')\n        || this.is('rxvt-unicode')\n        || this.is('screen')) {\n      this.send('\\x1b[?1;2c');\n    } else if (this.is('linux')) {\n      this.send('\\x1b[?6c');\n    }\n  } else if (this.prefix === '>') {\n    // xterm and urxvt\n    // seem to spit this\n    // out around ~370 times (?).\n    if (this.is('xterm')) {\n      this.send('\\x1b[>0;276;0c');\n    } else if (this.is('rxvt-unicode')) {\n      this.send('\\x1b[>85;95;0c');\n    } else if (this.is('linux')) {\n      // not supported by linux console.\n      // linux console echoes parameters.\n      this.send(params[0] + 'c');\n    } else if (this.is('screen')) {\n      this.send('\\x1b[>83;40003;0c');\n    }\n  }\n};\n\n// CSI Pm d\n// Line Position Absolute  [row] (default = [1,column]) (VPA).\nTerminal.prototype.linePosAbsolute = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.y = param - 1;\n  if (this.y >= this.rows) {\n    this.y = this.rows - 1;\n  }\n};\n\n// 145 65 e * VPR - Vertical Position Relative\n// reuse CSI Ps B ?\nTerminal.prototype.VPositionRelative = function(params) {\n  var param = params[0];\n  if (param < 1) param = 1;\n  this.y += param;\n  if (this.y >= this.rows) {\n    this.y = this.rows - 1;\n  }\n};\n\n// CSI Ps ; Ps f\n//   Horizontal and Vertical Position [row;column] (default =\n//   [1,1]) (HVP).\nTerminal.prototype.HVPosition = function(params) {\n  if (params[0] < 1) params[0] = 1;\n  if (params[1] < 1) params[1] = 1;\n\n  this.y = params[0] - 1;\n  if (this.y >= this.rows) {\n    this.y = this.rows - 1;\n  }\n\n  this.x = params[1] - 1;\n  if (this.x >= this.cols) {\n    this.x = this.cols - 1;\n  }\n};\n\n// CSI Pm h  Set Mode (SM).\n//     Ps = 2  -> Keyboard Action Mode (AM).\n//     Ps = 4  -> Insert Mode (IRM).\n//     Ps = 1 2  -> Send/receive (SRM).\n//     Ps = 2 0  -> Automatic Newline (LNM).\n// CSI ? Pm h\n//   DEC Private Mode Set (DECSET).\n//     Ps = 1  -> Application Cursor Keys (DECCKM).\n//     Ps = 2  -> Designate USASCII for character sets G0-G3\n//     (DECANM), and set VT100 mode.\n//     Ps = 3  -> 132 Column Mode (DECCOLM).\n//     Ps = 4  -> Smooth (Slow) Scroll (DECSCLM).\n//     Ps = 5  -> Reverse Video (DECSCNM).\n//     Ps = 6  -> Origin Mode (DECOM).\n//     Ps = 7  -> Wraparound Mode (DECAWM).\n//     Ps = 8  -> Auto-repeat Keys (DECARM).\n//     Ps = 9  -> Send Mouse X & Y on button press.  See the sec-\n//     tion Mouse Tracking.\n//     Ps = 1 0  -> Show toolbar (rxvt).\n//     Ps = 1 2  -> Start Blinking Cursor (att610).\n//     Ps = 1 8  -> Print form feed (DECPFF).\n//     Ps = 1 9  -> Set print extent to full screen (DECPEX).\n//     Ps = 2 5  -> Show Cursor (DECTCEM).\n//     Ps = 3 0  -> Show scrollbar (rxvt).\n//     Ps = 3 5  -> Enable font-shifting functions (rxvt).\n//     Ps = 3 8  -> Enter Tektronix Mode (DECTEK).\n//     Ps = 4 0  -> Allow 80 -> 132 Mode.\n//     Ps = 4 1  -> more(1) fix (see curses resource).\n//     Ps = 4 2  -> Enable Nation Replacement Character sets (DECN-\n//     RCM).\n//     Ps = 4 4  -> Turn On Margin Bell.\n//     Ps = 4 5  -> Reverse-wraparound Mode.\n//     Ps = 4 6  -> Start Logging.  This is normally disabled by a\n//     compile-time option.\n//     Ps = 4 7  -> Use Alternate Screen Buffer.  (This may be dis-\n//     abled by the titeInhibit resource).\n//     Ps = 6 6  -> Application keypad (DECNKM).\n//     Ps = 6 7  -> Backarrow key sends backspace (DECBKM).\n//     Ps = 1 0 0 0  -> Send Mouse X & Y on button press and\n//     release.  See the section Mouse Tracking.\n//     Ps = 1 0 0 1  -> Use Hilite Mouse Tracking.\n//     Ps = 1 0 0 2  -> Use Cell Motion Mouse Tracking.\n//     Ps = 1 0 0 3  -> Use All Motion Mouse Tracking.\n//     Ps = 1 0 0 4  -> Send FocusIn/FocusOut events.\n//     Ps = 1 0 0 5  -> Enable Extended Mouse Mode.\n//     Ps = 1 0 1 0  -> Scroll to bottom on tty output (rxvt).\n//     Ps = 1 0 1 1  -> Scroll to bottom on key press (rxvt).\n//     Ps = 1 0 3 4  -> Interpret \"meta\" key, sets eighth bit.\n//     (enables the eightBitInput resource).\n//     Ps = 1 0 3 5  -> Enable special modifiers for Alt and Num-\n//     Lock keys.  (This enables the numLock resource).\n//     Ps = 1 0 3 6  -> Send ESC   when Meta modifies a key.  (This\n//     enables the metaSendsEscape resource).\n//     Ps = 1 0 3 7  -> Send DEL from the editing-keypad Delete\n//     key.\n//     Ps = 1 0 3 9  -> Send ESC  when Alt modifies a key.  (This\n//     enables the altSendsEscape resource).\n//     Ps = 1 0 4 0  -> Keep selection even if not highlighted.\n//     (This enables the keepSelection resource).\n//     Ps = 1 0 4 1  -> Use the CLIPBOARD selection.  (This enables\n//     the selectToClipboard resource).\n//     Ps = 1 0 4 2  -> Enable Urgency window manager hint when\n//     Control-G is received.  (This enables the bellIsUrgent\n//     resource).\n//     Ps = 1 0 4 3  -> Enable raising of the window when Control-G\n//     is received.  (enables the popOnBell resource).\n//     Ps = 1 0 4 7  -> Use Alternate Screen Buffer.  (This may be\n//     disabled by the titeInhibit resource).\n//     Ps = 1 0 4 8  -> Save cursor as in DECSC.  (This may be dis-\n//     abled by the titeInhibit resource).\n//     Ps = 1 0 4 9  -> Save cursor as in DECSC and use Alternate\n//     Screen Buffer, clearing it first.  (This may be disabled by\n//     the titeInhibit resource).  This combines the effects of the 1\n//     0 4 7  and 1 0 4 8  modes.  Use this with terminfo-based\n//     applications rather than the 4 7  mode.\n//     Ps = 1 0 5 0  -> Set terminfo/termcap function-key mode.\n//     Ps = 1 0 5 1  -> Set Sun function-key mode.\n//     Ps = 1 0 5 2  -> Set HP function-key mode.\n//     Ps = 1 0 5 3  -> Set SCO function-key mode.\n//     Ps = 1 0 6 0  -> Set legacy keyboard emulation (X11R6).\n//     Ps = 1 0 6 1  -> Set VT220 keyboard emulation.\n//     Ps = 2 0 0 4  -> Set bracketed paste mode.\n// Modes:\n//   http://vt100.net/docs/vt220-rm/chapter4.html\nTerminal.prototype.setMode = function(params) {\n  if (typeof params === 'object') {\n    var l = params.length\n      , i = 0;\n\n    for (; i < l; i++) {\n      this.setMode(params[i]);\n    }\n\n    return;\n  }\n\n  if (!this.prefix) {\n    switch (params) {\n      case 4:\n        this.insertMode = true;\n        break;\n      case 20:\n        //this.convertEol = true;\n        break;\n    }\n  } else if (this.prefix === '?') {\n    switch (params) {\n      case 1:\n        this.applicationCursor = true;\n        break;\n      case 2:\n        this.setgCharset(0, Terminal.charsets.US);\n        this.setgCharset(1, Terminal.charsets.US);\n        this.setgCharset(2, Terminal.charsets.US);\n        this.setgCharset(3, Terminal.charsets.US);\n        // set VT100 mode here\n        break;\n      case 3: // 132 col mode\n        this.savedCols = this.cols;\n        this.resize(132, this.rows);\n        break;\n      case 6:\n        this.originMode = true;\n        break;\n      case 7:\n        this.wraparoundMode = true;\n        break;\n      case 12:\n        // this.cursorBlink = true;\n        break;\n      case 66:\n        this.log('Serial port requested application keypad.');\n        this.applicationKeypad = true;\n        break;\n      case 9: // X10 Mouse\n        // no release, no motion, no wheel, no modifiers.\n      case 1000: // vt200 mouse\n        // no motion.\n        // no modifiers, except control on the wheel.\n      case 1002: // button event mouse\n      case 1003: // any event mouse\n        // any event - sends motion events,\n        // even if there is no button held down.\n        this.x10Mouse = params === 9;\n        this.vt200Mouse = params === 1000;\n        this.normalMouse = params > 1000;\n        this.mouseEvents = true;\n        this.element.style.cursor = 'default';\n        this.log('Binding to mouse events.');\n        break;\n      case 1004: // send focusin/focusout events\n        // focusin: ^[[I\n        // focusout: ^[[O\n        this.sendFocus = true;\n        break;\n      case 1005: // utf8 ext mode mouse\n        this.utfMouse = true;\n        // for wide terminals\n        // simply encodes large values as utf8 characters\n        break;\n      case 1006: // sgr ext mode mouse\n        this.sgrMouse = true;\n        // for wide terminals\n        // does not add 32 to fields\n        // press: ^[[<b;x;yM\n        // release: ^[[<b;x;ym\n        break;\n      case 1015: // urxvt ext mode mouse\n        this.urxvtMouse = true;\n        // for wide terminals\n        // numbers for fields\n        // press: ^[[b;x;yM\n        // motion: ^[[b;x;yT\n        break;\n      case 25: // show cursor\n        this.cursorHidden = false;\n        break;\n      case 1049: // alt screen buffer cursor\n        //this.saveCursor();\n        ; // FALL-THROUGH\n      case 47: // alt screen buffer\n      case 1047: // alt screen buffer\n        if (!this.normal) {\n          var normal = {\n            lines: this.lines,\n            ybase: this.ybase,\n            ydisp: this.ydisp,\n            x: this.x,\n            y: this.y,\n            scrollTop: this.scrollTop,\n            scrollBottom: this.scrollBottom,\n            tabs: this.tabs\n            // XXX save charset(s) here?\n            // charset: this.charset,\n            // glevel: this.glevel,\n            // charsets: this.charsets\n          };\n          this.reset();\n          this.normal = normal;\n          this.showCursor();\n        }\n        break;\n    }\n  }\n};\n\n// CSI Pm l  Reset Mode (RM).\n//     Ps = 2  -> Keyboard Action Mode (AM).\n//     Ps = 4  -> Replace Mode (IRM).\n//     Ps = 1 2  -> Send/receive (SRM).\n//     Ps = 2 0  -> Normal Linefeed (LNM).\n// CSI ? Pm l\n//   DEC Private Mode Reset (DECRST).\n//     Ps = 1  -> Normal Cursor Keys (DECCKM).\n//     Ps = 2  -> Designate VT52 mode (DECANM).\n//     Ps = 3  -> 80 Column Mode (DECCOLM).\n//     Ps = 4  -> Jump (Fast) Scroll (DECSCLM).\n//     Ps = 5  -> Normal Video (DECSCNM).\n//     Ps = 6  -> Normal Cursor Mode (DECOM).\n//     Ps = 7  -> No Wraparound Mode (DECAWM).\n//     Ps = 8  -> No Auto-repeat Keys (DECARM).\n//     Ps = 9  -> Don't send Mouse X & Y on button press.\n//     Ps = 1 0  -> Hide toolbar (rxvt).\n//     Ps = 1 2  -> Stop Blinking Cursor (att610).\n//     Ps = 1 8  -> Don't print form feed (DECPFF).\n//     Ps = 1 9  -> Limit print to scrolling region (DECPEX).\n//     Ps = 2 5  -> Hide Cursor (DECTCEM).\n//     Ps = 3 0  -> Don't show scrollbar (rxvt).\n//     Ps = 3 5  -> Disable font-shifting functions (rxvt).\n//     Ps = 4 0  -> Disallow 80 -> 132 Mode.\n//     Ps = 4 1  -> No more(1) fix (see curses resource).\n//     Ps = 4 2  -> Disable Nation Replacement Character sets (DEC-\n//     NRCM).\n//     Ps = 4 4  -> Turn Off Margin Bell.\n//     Ps = 4 5  -> No Reverse-wraparound Mode.\n//     Ps = 4 6  -> Stop Logging.  (This is normally disabled by a\n//     compile-time option).\n//     Ps = 4 7  -> Use Normal Screen Buffer.\n//     Ps = 6 6  -> Numeric keypad (DECNKM).\n//     Ps = 6 7  -> Backarrow key sends delete (DECBKM).\n//     Ps = 1 0 0 0  -> Don't send Mouse X & Y on button press and\n//     release.  See the section Mouse Tracking.\n//     Ps = 1 0 0 1  -> Don't use Hilite Mouse Tracking.\n//     Ps = 1 0 0 2  -> Don't use Cell Motion Mouse Tracking.\n//     Ps = 1 0 0 3  -> Don't use All Motion Mouse Tracking.\n//     Ps = 1 0 0 4  -> Don't send FocusIn/FocusOut events.\n//     Ps = 1 0 0 5  -> Disable Extended Mouse Mode.\n//     Ps = 1 0 1 0  -> Don't scroll to bottom on tty output\n//     (rxvt).\n//     Ps = 1 0 1 1  -> Don't scroll to bottom on key press (rxvt).\n//     Ps = 1 0 3 4  -> Don't interpret \"meta\" key.  (This disables\n//     the eightBitInput resource).\n//     Ps = 1 0 3 5  -> Disable special modifiers for Alt and Num-\n//     Lock keys.  (This disables the numLock resource).\n//     Ps = 1 0 3 6  -> Don't send ESC  when Meta modifies a key.\n//     (This disables the metaSendsEscape resource).\n//     Ps = 1 0 3 7  -> Send VT220 Remove from the editing-keypad\n//     Delete key.\n//     Ps = 1 0 3 9  -> Don't send ESC  when Alt modifies a key.\n//     (This disables the altSendsEscape resource).\n//     Ps = 1 0 4 0  -> Do not keep selection when not highlighted.\n//     (This disables the keepSelection resource).\n//     Ps = 1 0 4 1  -> Use the PRIMARY selection.  (This disables\n//     the selectToClipboard resource).\n//     Ps = 1 0 4 2  -> Disable Urgency window manager hint when\n//     Control-G is received.  (This disables the bellIsUrgent\n//     resource).\n//     Ps = 1 0 4 3  -> Disable raising of the window when Control-\n//     G is received.  (This disables the popOnBell resource).\n//     Ps = 1 0 4 7  -> Use Normal Screen Buffer, clearing screen\n//     first if in the Alternate Screen.  (This may be disabled by\n//     the titeInhibit resource).\n//     Ps = 1 0 4 8  -> Restore cursor as in DECRC.  (This may be\n//     disabled by the titeInhibit resource).\n//     Ps = 1 0 4 9  -> Use Normal Screen Buffer and restore cursor\n//     as in DECRC.  (This may be disabled by the titeInhibit\n//     resource).  This combines the effects of the 1 0 4 7  and 1 0\n//     4 8  modes.  Use this with terminfo-based applications rather\n//     than the 4 7  mode.\n//     Ps = 1 0 5 0  -> Reset terminfo/termcap function-key mode.\n//     Ps = 1 0 5 1  -> Reset Sun function-key mode.\n//     Ps = 1 0 5 2  -> Reset HP function-key mode.\n//     Ps = 1 0 5 3  -> Reset SCO function-key mode.\n//     Ps = 1 0 6 0  -> Reset legacy keyboard emulation (X11R6).\n//     Ps = 1 0 6 1  -> Reset keyboard emulation to Sun/PC style.\n//     Ps = 2 0 0 4  -> Reset bracketed paste mode.\nTerminal.prototype.resetMode = function(params) {\n  if (typeof params === 'object') {\n    var l = params.length\n      , i = 0;\n\n    for (; i < l; i++) {\n      this.resetMode(params[i]);\n    }\n\n    return;\n  }\n\n  if (!this.prefix) {\n    switch (params) {\n      case 4:\n        this.insertMode = false;\n        break;\n      case 20:\n        //this.convertEol = false;\n        break;\n    }\n  } else if (this.prefix === '?') {\n    switch (params) {\n      case 1:\n        this.applicationCursor = false;\n        break;\n      case 3:\n        if (this.cols === 132 && this.savedCols) {\n          this.resize(this.savedCols, this.rows);\n        }\n        delete this.savedCols;\n        break;\n      case 6:\n        this.originMode = false;\n        break;\n      case 7:\n        this.wraparoundMode = false;\n        break;\n      case 12:\n        // this.cursorBlink = false;\n        break;\n      case 66:\n        this.log('Switching back to normal keypad.');\n        this.applicationKeypad = false;\n        break;\n      case 9: // X10 Mouse\n      case 1000: // vt200 mouse\n      case 1002: // button event mouse\n      case 1003: // any event mouse\n        this.x10Mouse = false;\n        this.vt200Mouse = false;\n        this.normalMouse = false;\n        this.mouseEvents = false;\n        this.element.style.cursor = '';\n        break;\n      case 1004: // send focusin/focusout events\n        this.sendFocus = false;\n        break;\n      case 1005: // utf8 ext mode mouse\n        this.utfMouse = false;\n        break;\n      case 1006: // sgr ext mode mouse\n        this.sgrMouse = false;\n        break;\n      case 1015: // urxvt ext mode mouse\n        this.urxvtMouse = false;\n        break;\n      case 25: // hide cursor\n        this.cursorHidden = true;\n        break;\n      case 1049: // alt screen buffer cursor\n        ; // FALL-THROUGH\n      case 47: // normal screen buffer\n      case 1047: // normal screen buffer - clearing it first\n        if (this.normal) {\n          this.lines = this.normal.lines;\n          this.ybase = this.normal.ybase;\n          this.ydisp = this.normal.ydisp;\n          this.x = this.normal.x;\n          this.y = this.normal.y;\n          this.scrollTop = this.normal.scrollTop;\n          this.scrollBottom = this.normal.scrollBottom;\n          this.tabs = this.normal.tabs;\n          this.normal = null;\n          // if (params === 1049) {\n          //   this.x = this.savedX;\n          //   this.y = this.savedY;\n          // }\n          this.refresh(0, this.rows - 1);\n          this.showCursor();\n        }\n        break;\n    }\n  }\n};\n\n// CSI Ps ; Ps r\n//   Set Scrolling Region [top;bottom] (default = full size of win-\n//   dow) (DECSTBM).\n// CSI ? Pm r\nTerminal.prototype.setScrollRegion = function(params) {\n  if (this.prefix) return;\n  this.scrollTop = (params[0] || 1) - 1;\n  this.scrollBottom = (params[1] || this.rows) - 1;\n  this.x = 0;\n  this.y = 0;\n};\n\n// CSI s\n//   Save cursor (ANSI.SYS).\nTerminal.prototype.saveCursor = function(params) {\n  this.savedX = this.x;\n  this.savedY = this.y;\n};\n\n// CSI u\n//   Restore cursor (ANSI.SYS).\nTerminal.prototype.restoreCursor = function(params) {\n  this.x = this.savedX || 0;\n  this.y = this.savedY || 0;\n};\n\n/**\n * Lesser Used\n */\n\n// CSI Ps I\n//   Cursor Forward Tabulation Ps tab stops (default = 1) (CHT).\nTerminal.prototype.cursorForwardTab = function(params) {\n  var param = params[0] || 1;\n  while (param--) {\n    this.x = this.nextStop();\n  }\n};\n\n// CSI Ps S  Scroll up Ps lines (default = 1) (SU).\nTerminal.prototype.scrollUp = function(params) {\n  var param = params[0] || 1;\n  while (param--) {\n    this.lines.splice(this.ybase + this.scrollTop, 1);\n    this.lines.splice(this.ybase + this.scrollBottom, 0, this.blankLine());\n  }\n  // this.maxRange();\n  this.updateRange(this.scrollTop);\n  this.updateRange(this.scrollBottom);\n};\n\n// CSI Ps T  Scroll down Ps lines (default = 1) (SD).\nTerminal.prototype.scrollDown = function(params) {\n  var param = params[0] || 1;\n  while (param--) {\n    this.lines.splice(this.ybase + this.scrollBottom, 1);\n    this.lines.splice(this.ybase + this.scrollTop, 0, this.blankLine());\n  }\n  // this.maxRange();\n  this.updateRange(this.scrollTop);\n  this.updateRange(this.scrollBottom);\n};\n\n// CSI Ps ; Ps ; Ps ; Ps ; Ps T\n//   Initiate highlight mouse tracking.  Parameters are\n//   [func;startx;starty;firstrow;lastrow].  See the section Mouse\n//   Tracking.\nTerminal.prototype.initMouseTracking = function(params) {\n  // Relevant: DECSET 1001\n};\n\n// CSI > Ps; Ps T\n//   Reset one or more features of the title modes to the default\n//   value.  Normally, \"reset\" disables the feature.  It is possi-\n//   ble to disable the ability to reset features by compiling a\n//   different default for the title modes into xterm.\n//     Ps = 0  -> Do not set window/icon labels using hexadecimal.\n//     Ps = 1  -> Do not query window/icon labels using hexadeci-\n//     mal.\n//     Ps = 2  -> Do not set window/icon labels using UTF-8.\n//     Ps = 3  -> Do not query window/icon labels using UTF-8.\n//   (See discussion of \"Title Modes\").\nTerminal.prototype.resetTitleModes = function(params) {\n  ;\n};\n\n// CSI Ps Z  Cursor Backward Tabulation Ps tab stops (default = 1) (CBT).\nTerminal.prototype.cursorBackwardTab = function(params) {\n  var param = params[0] || 1;\n  while (param--) {\n    this.x = this.prevStop();\n  }\n};\n\n// CSI Ps b  Repeat the preceding graphic character Ps times (REP).\nTerminal.prototype.repeatPrecedingCharacter = function(params) {\n  var param = params[0] || 1\n    , line = this.lines[this.ybase + this.y]\n    , ch = line[this.x - 1] || [this.defAttr, ' '];\n\n  while (param--) line[this.x++] = ch;\n};\n\n// CSI Ps g  Tab Clear (TBC).\n//     Ps = 0  -> Clear Current Column (default).\n//     Ps = 3  -> Clear All.\n// Potentially:\n//   Ps = 2  -> Clear Stops on Line.\n//   http://vt100.net/annarbor/aaa-ug/section6.html\nTerminal.prototype.tabClear = function(params) {\n  var param = params[0];\n  if (param <= 0) {\n    delete this.tabs[this.x];\n  } else if (param === 3) {\n    this.tabs = {};\n  }\n};\n\n// CSI Pm i  Media Copy (MC).\n//     Ps = 0  -> Print screen (default).\n//     Ps = 4  -> Turn off printer controller mode.\n//     Ps = 5  -> Turn on printer controller mode.\n// CSI ? Pm i\n//   Media Copy (MC, DEC-specific).\n//     Ps = 1  -> Print line containing cursor.\n//     Ps = 4  -> Turn off autoprint mode.\n//     Ps = 5  -> Turn on autoprint mode.\n//     Ps = 1  0  -> Print composed display, ignores DECPEX.\n//     Ps = 1  1  -> Print all pages.\nTerminal.prototype.mediaCopy = function(params) {\n  ;\n};\n\n// CSI > Ps; Ps m\n//   Set or reset resource-values used by xterm to decide whether\n//   to construct escape sequences holding information about the\n//   modifiers pressed with a given key.  The first parameter iden-\n//   tifies the resource to set/reset.  The second parameter is the\n//   value to assign to the resource.  If the second parameter is\n//   omitted, the resource is reset to its initial value.\n//     Ps = 1  -> modifyCursorKeys.\n//     Ps = 2  -> modifyFunctionKeys.\n//     Ps = 4  -> modifyOtherKeys.\n//   If no parameters are given, all resources are reset to their\n//   initial values.\nTerminal.prototype.setResources = function(params) {\n  ;\n};\n\n// CSI > Ps n\n//   Disable modifiers which may be enabled via the CSI > Ps; Ps m\n//   sequence.  This corresponds to a resource value of \"-1\", which\n//   cannot be set with the other sequence.  The parameter identi-\n//   fies the resource to be disabled:\n//     Ps = 1  -> modifyCursorKeys.\n//     Ps = 2  -> modifyFunctionKeys.\n//     Ps = 4  -> modifyOtherKeys.\n//   If the parameter is omitted, modifyFunctionKeys is disabled.\n//   When modifyFunctionKeys is disabled, xterm uses the modifier\n//   keys to make an extended sequence of functions rather than\n//   adding a parameter to each function key to denote the modi-\n//   fiers.\nTerminal.prototype.disableModifiers = function(params) {\n  ;\n};\n\n// CSI > Ps p\n//   Set resource value pointerMode.  This is used by xterm to\n//   decide whether to hide the pointer cursor as the user types.\n//   Valid values for the parameter:\n//     Ps = 0  -> never hide the pointer.\n//     Ps = 1  -> hide if the mouse tracking mode is not enabled.\n//     Ps = 2  -> always hide the pointer.  If no parameter is\n//     given, xterm uses the default, which is 1 .\nTerminal.prototype.setPointerMode = function(params) {\n  ;\n};\n\n// CSI ! p   Soft terminal reset (DECSTR).\n// http://vt100.net/docs/vt220-rm/table4-10.html\nTerminal.prototype.softReset = function(params) {\n  this.cursorHidden = false;\n  this.insertMode = false;\n  this.originMode = false;\n  this.wraparoundMode = false; // autowrap\n  this.applicationKeypad = false; // ?\n  this.applicationCursor = false;\n  this.scrollTop = 0;\n  this.scrollBottom = this.rows - 1;\n  this.curAttr = this.defAttr;\n  this.x = this.y = 0; // ?\n  this.charset = null;\n  this.glevel = 0; // ??\n  this.charsets = [null]; // ??\n};\n\n// CSI Ps$ p\n//   Request ANSI mode (DECRQM).  For VT300 and up, reply is\n//     CSI Ps; Pm$ y\n//   where Ps is the mode number as in RM, and Pm is the mode\n//   value:\n//     0 - not recognized\n//     1 - set\n//     2 - reset\n//     3 - permanently set\n//     4 - permanently reset\nTerminal.prototype.requestAnsiMode = function(params) {\n  ;\n};\n\n// CSI ? Ps$ p\n//   Request DEC private mode (DECRQM).  For VT300 and up, reply is\n//     CSI ? Ps; Pm$ p\n//   where Ps is the mode number as in DECSET, Pm is the mode value\n//   as in the ANSI DECRQM.\nTerminal.prototype.requestPrivateMode = function(params) {\n  ;\n};\n\n// CSI Ps ; Ps \" p\n//   Set conformance level (DECSCL).  Valid values for the first\n//   parameter:\n//     Ps = 6 1  -> VT100.\n//     Ps = 6 2  -> VT200.\n//     Ps = 6 3  -> VT300.\n//   Valid values for the second parameter:\n//     Ps = 0  -> 8-bit controls.\n//     Ps = 1  -> 7-bit controls (always set for VT100).\n//     Ps = 2  -> 8-bit controls.\nTerminal.prototype.setConformanceLevel = function(params) {\n  ;\n};\n\n// CSI Ps q  Load LEDs (DECLL).\n//     Ps = 0  -> Clear all LEDS (default).\n//     Ps = 1  -> Light Num Lock.\n//     Ps = 2  -> Light Caps Lock.\n//     Ps = 3  -> Light Scroll Lock.\n//     Ps = 2  1  -> Extinguish Num Lock.\n//     Ps = 2  2  -> Extinguish Caps Lock.\n//     Ps = 2  3  -> Extinguish Scroll Lock.\nTerminal.prototype.loadLEDs = function(params) {\n  ;\n};\n\n// CSI Ps SP q\n//   Set cursor style (DECSCUSR, VT520).\n//     Ps = 0  -> blinking block.\n//     Ps = 1  -> blinking block (default).\n//     Ps = 2  -> steady block.\n//     Ps = 3  -> blinking underline.\n//     Ps = 4  -> steady underline.\nTerminal.prototype.setCursorStyle = function(params) {\n  ;\n};\n\n// CSI Ps \" q\n//   Select character protection attribute (DECSCA).  Valid values\n//   for the parameter:\n//     Ps = 0  -> DECSED and DECSEL can erase (default).\n//     Ps = 1  -> DECSED and DECSEL cannot erase.\n//     Ps = 2  -> DECSED and DECSEL can erase.\nTerminal.prototype.setCharProtectionAttr = function(params) {\n  ;\n};\n\n// CSI ? Pm r\n//   Restore DEC Private Mode Values.  The value of Ps previously\n//   saved is restored.  Ps values are the same as for DECSET.\nTerminal.prototype.restorePrivateValues = function(params) {\n  ;\n};\n\n// CSI Pt; Pl; Pb; Pr; Ps$ r\n//   Change Attributes in Rectangular Area (DECCARA), VT400 and up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n//     Ps denotes the SGR attributes to change: 0, 1, 4, 5, 7.\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.setAttrInRectangle = function(params) {\n  var t = params[0]\n    , l = params[1]\n    , b = params[2]\n    , r = params[3]\n    , attr = params[4];\n\n  var line\n    , i;\n\n  for (; t < b + 1; t++) {\n    line = this.lines[this.ybase + t];\n    for (i = l; i < r; i++) {\n      line[i] = [attr, line[i][1]];\n    }\n  }\n\n  // this.maxRange();\n  this.updateRange(params[0]);\n  this.updateRange(params[2]);\n};\n\n// CSI ? Pm s\n//   Save DEC Private Mode Values.  Ps values are the same as for\n//   DECSET.\nTerminal.prototype.savePrivateValues = function(params) {\n  ;\n};\n\n// CSI Ps ; Ps ; Ps t\n//   Window manipulation (from dtterm, as well as extensions).\n//   These controls may be disabled using the allowWindowOps\n//   resource.  Valid values for the first (and any additional\n//   parameters) are:\n//     Ps = 1  -> De-iconify window.\n//     Ps = 2  -> Iconify window.\n//     Ps = 3  ;  x ;  y -> Move window to [x, y].\n//     Ps = 4  ;  height ;  width -> Resize the xterm window to\n//     height and width in pixels.\n//     Ps = 5  -> Raise the xterm window to the front of the stack-\n//     ing order.\n//     Ps = 6  -> Lower the xterm window to the bottom of the\n//     stacking order.\n//     Ps = 7  -> Refresh the xterm window.\n//     Ps = 8  ;  height ;  width -> Resize the text area to\n//     [height;width] in characters.\n//     Ps = 9  ;  0  -> Restore maximized window.\n//     Ps = 9  ;  1  -> Maximize window (i.e., resize to screen\n//     size).\n//     Ps = 1 0  ;  0  -> Undo full-screen mode.\n//     Ps = 1 0  ;  1  -> Change to full-screen.\n//     Ps = 1 1  -> Report xterm window state.  If the xterm window\n//     is open (non-iconified), it returns CSI 1 t .  If the xterm\n//     window is iconified, it returns CSI 2 t .\n//     Ps = 1 3  -> Report xterm window position.  Result is CSI 3\n//     ; x ; y t\n//     Ps = 1 4  -> Report xterm window in pixels.  Result is CSI\n//     4  ;  height ;  width t\n//     Ps = 1 8  -> Report the size of the text area in characters.\n//     Result is CSI  8  ;  height ;  width t\n//     Ps = 1 9  -> Report the size of the screen in characters.\n//     Result is CSI  9  ;  height ;  width t\n//     Ps = 2 0  -> Report xterm window's icon label.  Result is\n//     OSC  L  label ST\n//     Ps = 2 1  -> Report xterm window's title.  Result is OSC  l\n//     label ST\n//     Ps = 2 2  ;  0  -> Save xterm icon and window title on\n//     stack.\n//     Ps = 2 2  ;  1  -> Save xterm icon title on stack.\n//     Ps = 2 2  ;  2  -> Save xterm window title on stack.\n//     Ps = 2 3  ;  0  -> Restore xterm icon and window title from\n//     stack.\n//     Ps = 2 3  ;  1  -> Restore xterm icon title from stack.\n//     Ps = 2 3  ;  2  -> Restore xterm window title from stack.\n//     Ps >= 2 4  -> Resize to Ps lines (DECSLPP).\nTerminal.prototype.manipulateWindow = function(params) {\n  ;\n};\n\n// CSI Pt; Pl; Pb; Pr; Ps$ t\n//   Reverse Attributes in Rectangular Area (DECRARA), VT400 and\n//   up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n//     Ps denotes the attributes to reverse, i.e.,  1, 4, 5, 7.\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.reverseAttrInRectangle = function(params) {\n  ;\n};\n\n// CSI > Ps; Ps t\n//   Set one or more features of the title modes.  Each parameter\n//   enables a single feature.\n//     Ps = 0  -> Set window/icon labels using hexadecimal.\n//     Ps = 1  -> Query window/icon labels using hexadecimal.\n//     Ps = 2  -> Set window/icon labels using UTF-8.\n//     Ps = 3  -> Query window/icon labels using UTF-8.  (See dis-\n//     cussion of \"Title Modes\")\nTerminal.prototype.setTitleModeFeature = function(params) {\n  ;\n};\n\n// CSI Ps SP t\n//   Set warning-bell volume (DECSWBV, VT520).\n//     Ps = 0  or 1  -> off.\n//     Ps = 2 , 3  or 4  -> low.\n//     Ps = 5 , 6 , 7 , or 8  -> high.\nTerminal.prototype.setWarningBellVolume = function(params) {\n  ;\n};\n\n// CSI Ps SP u\n//   Set margin-bell volume (DECSMBV, VT520).\n//     Ps = 1  -> off.\n//     Ps = 2 , 3  or 4  -> low.\n//     Ps = 0 , 5 , 6 , 7 , or 8  -> high.\nTerminal.prototype.setMarginBellVolume = function(params) {\n  ;\n};\n\n// CSI Pt; Pl; Pb; Pr; Pp; Pt; Pl; Pp$ v\n//   Copy Rectangular Area (DECCRA, VT400 and up).\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n//     Pp denotes the source page.\n//     Pt; Pl denotes the target location.\n//     Pp denotes the target page.\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.copyRectangle = function(params) {\n  ;\n};\n\n// CSI Pt ; Pl ; Pb ; Pr ' w\n//   Enable Filter Rectangle (DECEFR), VT420 and up.\n//   Parameters are [top;left;bottom;right].\n//   Defines the coordinates of a filter rectangle and activates\n//   it.  Anytime the locator is detected outside of the filter\n//   rectangle, an outside rectangle event is generated and the\n//   rectangle is disabled.  Filter rectangles are always treated\n//   as \"one-shot\" events.  Any parameters that are omitted default\n//   to the current locator position.  If all parameters are omit-\n//   ted, any locator motion will be reported.  DECELR always can-\n//   cels any prevous rectangle definition.\nTerminal.prototype.enableFilterRectangle = function(params) {\n  ;\n};\n\n// CSI Ps x  Request Terminal Parameters (DECREQTPARM).\n//   if Ps is a \"0\" (default) or \"1\", and xterm is emulating VT100,\n//   the control sequence elicits a response of the same form whose\n//   parameters describe the terminal:\n//     Ps -> the given Ps incremented by 2.\n//     Pn = 1  <- no parity.\n//     Pn = 1  <- eight bits.\n//     Pn = 1  <- 2  8  transmit 38.4k baud.\n//     Pn = 1  <- 2  8  receive 38.4k baud.\n//     Pn = 1  <- clock multiplier.\n//     Pn = 0  <- STP flags.\nTerminal.prototype.requestParameters = function(params) {\n  ;\n};\n\n// CSI Ps x  Select Attribute Change Extent (DECSACE).\n//     Ps = 0  -> from start to end position, wrapped.\n//     Ps = 1  -> from start to end position, wrapped.\n//     Ps = 2  -> rectangle (exact).\nTerminal.prototype.selectChangeExtent = function(params) {\n  ;\n};\n\n// CSI Pc; Pt; Pl; Pb; Pr$ x\n//   Fill Rectangular Area (DECFRA), VT420 and up.\n//     Pc is the character to use.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.fillRectangle = function(params) {\n  var ch = params[0]\n    , t = params[1]\n    , l = params[2]\n    , b = params[3]\n    , r = params[4];\n\n  var line\n    , i;\n\n  for (; t < b + 1; t++) {\n    line = this.lines[this.ybase + t];\n    for (i = l; i < r; i++) {\n      line[i] = [line[i][0], String.fromCharCode(ch)];\n    }\n  }\n\n  // this.maxRange();\n  this.updateRange(params[1]);\n  this.updateRange(params[3]);\n};\n\n// CSI Ps ; Pu ' z\n//   Enable Locator Reporting (DECELR).\n//   Valid values for the first parameter:\n//     Ps = 0  -> Locator disabled (default).\n//     Ps = 1  -> Locator enabled.\n//     Ps = 2  -> Locator enabled for one report, then disabled.\n//   The second parameter specifies the coordinate unit for locator\n//   reports.\n//   Valid values for the second parameter:\n//     Pu = 0  <- or omitted -> default to character cells.\n//     Pu = 1  <- device physical pixels.\n//     Pu = 2  <- character cells.\nTerminal.prototype.enableLocatorReporting = function(params) {\n  var val = params[0] > 0;\n  //this.mouseEvents = val;\n  //this.decLocator = val;\n};\n\n// CSI Pt; Pl; Pb; Pr$ z\n//   Erase Rectangular Area (DECERA), VT400 and up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.eraseRectangle = function(params) {\n  var t = params[0]\n    , l = params[1]\n    , b = params[2]\n    , r = params[3];\n\n  var line\n    , i\n    , ch;\n\n  ch = [this.eraseAttr(), ' ']; // xterm?\n\n  for (; t < b + 1; t++) {\n    line = this.lines[this.ybase + t];\n    for (i = l; i < r; i++) {\n      line[i] = ch;\n    }\n  }\n\n  // this.maxRange();\n  this.updateRange(params[0]);\n  this.updateRange(params[2]);\n};\n\n// CSI Pm ' {\n//   Select Locator Events (DECSLE).\n//   Valid values for the first (and any additional parameters)\n//   are:\n//     Ps = 0  -> only respond to explicit host requests (DECRQLP).\n//                (This is default).  It also cancels any filter\n//   rectangle.\n//     Ps = 1  -> report button down transitions.\n//     Ps = 2  -> do not report button down transitions.\n//     Ps = 3  -> report button up transitions.\n//     Ps = 4  -> do not report button up transitions.\nTerminal.prototype.setLocatorEvents = function(params) {\n  ;\n};\n\n// CSI Pt; Pl; Pb; Pr$ {\n//   Selective Erase Rectangular Area (DECSERA), VT400 and up.\n//     Pt; Pl; Pb; Pr denotes the rectangle.\nTerminal.prototype.selectiveEraseRectangle = function(params) {\n  ;\n};\n\n// CSI Ps ' |\n//   Request Locator Position (DECRQLP).\n//   Valid values for the parameter are:\n//     Ps = 0 , 1 or omitted -> transmit a single DECLRP locator\n//     report.\n\n//   If Locator Reporting has been enabled by a DECELR, xterm will\n//   respond with a DECLRP Locator Report.  This report is also\n//   generated on button up and down events if they have been\n//   enabled with a DECSLE, or when the locator is detected outside\n//   of a filter rectangle, if filter rectangles have been enabled\n//   with a DECEFR.\n\n//     -> CSI Pe ; Pb ; Pr ; Pc ; Pp &  w\n\n//   Parameters are [event;button;row;column;page].\n//   Valid values for the event:\n//     Pe = 0  -> locator unavailable - no other parameters sent.\n//     Pe = 1  -> request - xterm received a DECRQLP.\n//     Pe = 2  -> left button down.\n//     Pe = 3  -> left button up.\n//     Pe = 4  -> middle button down.\n//     Pe = 5  -> middle button up.\n//     Pe = 6  -> right button down.\n//     Pe = 7  -> right button up.\n//     Pe = 8  -> M4 button down.\n//     Pe = 9  -> M4 button up.\n//     Pe = 1 0  -> locator outside filter rectangle.\n//   ``button'' parameter is a bitmask indicating which buttons are\n//     pressed:\n//     Pb = 0  <- no buttons down.\n//     Pb & 1  <- right button down.\n//     Pb & 2  <- middle button down.\n//     Pb & 4  <- left button down.\n//     Pb & 8  <- M4 button down.\n//   ``row'' and ``column'' parameters are the coordinates of the\n//     locator position in the xterm window, encoded as ASCII deci-\n//     mal.\n//   The ``page'' parameter is not used by xterm, and will be omit-\n//   ted.\nTerminal.prototype.requestLocatorPosition = function(params) {\n  ;\n};\n\n// CSI P m SP }\n// Insert P s Column(s) (default = 1) (DECIC), VT420 and up.\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.insertColumns = function() {\n  var param = params[0]\n    , l = this.ybase + this.rows\n    , ch = [this.eraseAttr(), ' '] // xterm?\n    , i;\n\n  while (param--) {\n    for (i = this.ybase; i < l; i++) {\n      this.lines[i].splice(this.x + 1, 0, ch);\n      this.lines[i].pop();\n    }\n  }\n\n  this.maxRange();\n};\n\n// CSI P m SP ~\n// Delete P s Column(s) (default = 1) (DECDC), VT420 and up\n// NOTE: xterm doesn't enable this code by default.\nTerminal.prototype.deleteColumns = function() {\n  var param = params[0]\n    , l = this.ybase + this.rows\n    , ch = [this.eraseAttr(), ' '] // xterm?\n    , i;\n\n  while (param--) {\n    for (i = this.ybase; i < l; i++) {\n      this.lines[i].splice(this.x, 1);\n      this.lines[i].push(ch);\n    }\n  }\n\n  this.maxRange();\n};\n\n/**\n * Prefix/Select/Visual/Search Modes\n */\n\nTerminal.prototype.enterPrefix = function() {\n  this.prefixMode = true;\n};\n\nTerminal.prototype.leavePrefix = function() {\n  this.prefixMode = false;\n};\n\nTerminal.prototype.enterSelect = function() {\n  this._real = {\n    x: this.x,\n    y: this.y,\n    ydisp: this.ydisp,\n    ybase: this.ybase,\n    cursorHidden: this.cursorHidden,\n    lines: this.copyBuffer(this.lines),\n    write: this.write\n  };\n  this.write = function() {};\n  this.selectMode = true;\n  this.visualMode = false;\n  this.cursorHidden = false;\n  this.refresh(this.y, this.y);\n};\n\nTerminal.prototype.leaveSelect = function() {\n  this.x = this._real.x;\n  this.y = this._real.y;\n  this.ydisp = this._real.ydisp;\n  this.ybase = this._real.ybase;\n  this.cursorHidden = this._real.cursorHidden;\n  this.lines = this._real.lines;\n  this.write = this._real.write;\n  delete this._real;\n  this.selectMode = false;\n  this.visualMode = false;\n  this.refresh(0, this.rows - 1);\n};\n\nTerminal.prototype.enterVisual = function() {\n  this._real.preVisual = this.copyBuffer(this.lines);\n  this.selectText(this.x, this.x, this.ydisp + this.y, this.ydisp + this.y);\n  this.visualMode = true;\n};\n\nTerminal.prototype.leaveVisual = function() {\n  this.lines = this._real.preVisual;\n  delete this._real.preVisual;\n  delete this._selected;\n  this.visualMode = false;\n  this.refresh(0, this.rows - 1);\n};\n\nTerminal.prototype.enterSearch = function(down) {\n  this.entry = '';\n  this.searchMode = true;\n  this.searchDown = down;\n  this._real.preSearch = this.copyBuffer(this.lines);\n  this._real.preSearchX = this.x;\n  this._real.preSearchY = this.y;\n\n  var bottom = this.ydisp + this.rows - 1;\n  for (var i = 0; i < this.entryPrefix.length; i++) {\n    //this.lines[bottom][i][0] = (this.defAttr & ~0x1ff) | 4;\n    //this.lines[bottom][i][1] = this.entryPrefix[i];\n    this.lines[bottom][i] = [\n      (this.defAttr & ~0x1ff) | 4,\n      this.entryPrefix[i]\n    ];\n  }\n\n  this.y = this.rows - 1;\n  this.x = this.entryPrefix.length;\n\n  this.refresh(this.rows - 1, this.rows - 1);\n};\n\nTerminal.prototype.leaveSearch = function() {\n  this.searchMode = false;\n\n  if (this._real.preSearch) {\n    this.lines = this._real.preSearch;\n    this.x = this._real.preSearchX;\n    this.y = this._real.preSearchY;\n    delete this._real.preSearch;\n    delete this._real.preSearchX;\n    delete this._real.preSearchY;\n  }\n\n  this.refresh(this.rows - 1, this.rows - 1);\n};\n\nTerminal.prototype.copyBuffer = function(lines) {\n  var lines = lines || this.lines\n    , out = [];\n\n  for (var y = 0; y < lines.length; y++) {\n    out[y] = [];\n    for (var x = 0; x < lines[y].length; x++) {\n      out[y][x] = [lines[y][x][0], lines[y][x][1]];\n    }\n  }\n\n  return out;\n};\n\nTerminal.prototype.getCopyTextarea = function(text) {\n  var textarea = this._copyTextarea\n    , document = this.document;\n\n  if (!textarea) {\n    textarea = document.createElement('textarea');\n    textarea.style.position = 'absolute';\n    textarea.style.left = '-32000px';\n    textarea.style.top = '-32000px';\n    textarea.style.width = '0px';\n    textarea.style.height = '0px';\n    textarea.style.opacity = '0';\n    textarea.style.backgroundColor = 'transparent';\n    textarea.style.borderStyle = 'none';\n    textarea.style.outlineStyle = 'none';\n\n    document.getElementsByTagName('body')[0].appendChild(textarea);\n\n    this._copyTextarea = textarea;\n  }\n\n  return textarea;\n};\n\n// NOTE: Only works for primary selection on X11.\n// Non-X11 users should use Ctrl-C instead.\nTerminal.prototype.copyText = function(text) {\n  var self = this\n    , textarea = this.getCopyTextarea();\n\n  this.emit('copy', text);\n\n  textarea.focus();\n  textarea.textContent = text;\n  textarea.value = text;\n  textarea.setSelectionRange(0, text.length);\n\n  setTimeout(function() {\n    self.element.focus();\n    self.focus();\n  }, 1);\n};\n\nTerminal.prototype.selectText = function(x1, x2, y1, y2) {\n  var ox1\n    , ox2\n    , oy1\n    , oy2\n    , tmp\n    , x\n    , y\n    , xl\n    , attr;\n\n  if (this._selected) {\n    ox1 = this._selected.x1;\n    ox2 = this._selected.x2;\n    oy1 = this._selected.y1;\n    oy2 = this._selected.y2;\n\n    if (oy2 < oy1) {\n      tmp = ox2;\n      ox2 = ox1;\n      ox1 = tmp;\n      tmp = oy2;\n      oy2 = oy1;\n      oy1 = tmp;\n    }\n\n    if (ox2 < ox1 && oy1 === oy2) {\n      tmp = ox2;\n      ox2 = ox1;\n      ox1 = tmp;\n    }\n\n    for (y = oy1; y <= oy2; y++) {\n      x = 0;\n      xl = this.cols - 1;\n      if (y === oy1) {\n        x = ox1;\n      }\n      if (y === oy2) {\n        xl = ox2;\n      }\n      for (; x <= xl; x++) {\n        if (this.lines[y][x].old != null) {\n          //this.lines[y][x][0] = this.lines[y][x].old;\n          //delete this.lines[y][x].old;\n          attr = this.lines[y][x].old;\n          delete this.lines[y][x].old;\n          this.lines[y][x] = [attr, this.lines[y][x][1]];\n        }\n      }\n    }\n\n    y1 = this._selected.y1;\n    x1 = this._selected.x1;\n  }\n\n  y1 = Math.max(y1, 0);\n  y1 = Math.min(y1, this.ydisp + this.rows - 1);\n\n  y2 = Math.max(y2, 0);\n  y2 = Math.min(y2, this.ydisp + this.rows - 1);\n\n  this._selected = { x1: x1, x2: x2, y1: y1, y2: y2 };\n\n  if (y2 < y1) {\n    tmp = x2;\n    x2 = x1;\n    x1 = tmp;\n    tmp = y2;\n    y2 = y1;\n    y1 = tmp;\n  }\n\n  if (x2 < x1 && y1 === y2) {\n    tmp = x2;\n    x2 = x1;\n    x1 = tmp;\n  }\n\n  for (y = y1; y <= y2; y++) {\n    x = 0;\n    xl = this.cols - 1;\n    if (y === y1) {\n      x = x1;\n    }\n    if (y === y2) {\n      xl = x2;\n    }\n    for (; x <= xl; x++) {\n      //this.lines[y][x].old = this.lines[y][x][0];\n      //this.lines[y][x][0] &= ~0x1ff;\n      //this.lines[y][x][0] |= (0x1ff << 9) | 4;\n      attr = this.lines[y][x][0];\n      this.lines[y][x] = [\n        (attr & ~0x1ff) | ((0x1ff << 9) | 4),\n        this.lines[y][x][1]\n      ];\n      this.lines[y][x].old = attr;\n    }\n  }\n\n  y1 = y1 - this.ydisp;\n  y2 = y2 - this.ydisp;\n\n  y1 = Math.max(y1, 0);\n  y1 = Math.min(y1, this.rows - 1);\n\n  y2 = Math.max(y2, 0);\n  y2 = Math.min(y2, this.rows - 1);\n\n  //this.refresh(y1, y2);\n  this.refresh(0, this.rows - 1);\n};\n\nTerminal.prototype.grabText = function(x1, x2, y1, y2) {\n  var out = ''\n    , buf = ''\n    , ch\n    , x\n    , y\n    , xl\n    , tmp;\n\n  if (y2 < y1) {\n    tmp = x2;\n    x2 = x1;\n    x1 = tmp;\n    tmp = y2;\n    y2 = y1;\n    y1 = tmp;\n  }\n\n  if (x2 < x1 && y1 === y2) {\n    tmp = x2;\n    x2 = x1;\n    x1 = tmp;\n  }\n\n  for (y = y1; y <= y2; y++) {\n    x = 0;\n    xl = this.cols - 1;\n    if (y === y1) {\n      x = x1;\n    }\n    if (y === y2) {\n      xl = x2;\n    }\n    for (; x <= xl; x++) {\n      ch = this.lines[y][x][1];\n      if (ch === ' ') {\n        buf += ch;\n        continue;\n      }\n      if (buf) {\n        out += buf;\n        buf = '';\n      }\n      out += ch;\n      if (isWide(ch)) x++;\n    }\n    buf = '';\n    out += '\\n';\n  }\n\n  // If we're not at the end of the\n  // line, don't add a newline.\n  for (x = x2, y = y2; x < this.cols; x++) {\n    if (this.lines[y][x][1] !== ' ') {\n      out = out.slice(0, -1);\n      break;\n    }\n  }\n\n  return out;\n};\n\nTerminal.prototype.keyPrefix = function(ev, key) {\n  if (key === 'k' || key === '&') {\n    this.destroy();\n  } else if (key === 'p' || key === ']') {\n    this.emit('request paste');\n  } else if (key === 'c') {\n    this.emit('request create');\n  } else if (key >= '0' && key <= '9') {\n    key = +key - 1;\n    if (!~key) key = 9;\n    this.emit('request term', key);\n  } else if (key === 'n') {\n    this.emit('request term next');\n  } else if (key === 'P') {\n    this.emit('request term previous');\n  } else if (key === ':') {\n    this.emit('request command mode');\n  } else if (key === '[') {\n    this.enterSelect();\n  }\n};\n\nTerminal.prototype.keySelect = function(ev, key) {\n  this.showCursor();\n\n  if (this.searchMode || key === 'n' || key === 'N') {\n    return this.keySearch(ev, key);\n  }\n\n  if (key === '\\x04') { // ctrl-d\n    var y = this.ydisp + this.y;\n    if (this.ydisp === this.ybase) {\n      // Mimic vim behavior\n      this.y = Math.min(this.y + (this.rows - 1) / 2 | 0, this.rows - 1);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.scrollDisp((this.rows - 1) / 2 | 0);\n    }\n    if (this.visualMode) {\n      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === '\\x15') { // ctrl-u\n    var y = this.ydisp + this.y;\n    if (this.ydisp === 0) {\n      // Mimic vim behavior\n      this.y = Math.max(this.y - (this.rows - 1) / 2 | 0, 0);\n      this.refresh(0, this.rows - 1);\n    } else {\n      this.scrollDisp(-(this.rows - 1) / 2 | 0);\n    }\n    if (this.visualMode) {\n      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === '\\x06') { // ctrl-f\n    var y = this.ydisp + this.y;\n    this.scrollDisp(this.rows - 1);\n    if (this.visualMode) {\n      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === '\\x02') { // ctrl-b\n    var y = this.ydisp + this.y;\n    this.scrollDisp(-(this.rows - 1));\n    if (this.visualMode) {\n      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === 'k' || key === '\\x1b[A') {\n    var y = this.ydisp + this.y;\n    this.y--;\n    if (this.y < 0) {\n      this.y = 0;\n      this.scrollDisp(-1);\n    }\n    if (this.visualMode) {\n      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n    } else {\n      this.refresh(this.y, this.y + 1);\n    }\n    return;\n  }\n\n  if (key === 'j' || key === '\\x1b[B') {\n    var y = this.ydisp + this.y;\n    this.y++;\n    if (this.y >= this.rows) {\n      this.y = this.rows - 1;\n      this.scrollDisp(1);\n    }\n    if (this.visualMode) {\n      this.selectText(this.x, this.x, y, this.ydisp + this.y);\n    } else {\n      this.refresh(this.y - 1, this.y);\n    }\n    return;\n  }\n\n  if (key === 'h' || key === '\\x1b[D') {\n    var x = this.x;\n    this.x--;\n    if (this.x < 0) {\n      this.x = 0;\n    }\n    if (this.visualMode) {\n      this.selectText(x, this.x, this.ydisp + this.y, this.ydisp + this.y);\n    } else {\n      this.refresh(this.y, this.y);\n    }\n    return;\n  }\n\n  if (key === 'l' || key === '\\x1b[C') {\n    var x = this.x;\n    this.x++;\n    if (this.x >= this.cols) {\n      this.x = this.cols - 1;\n    }\n    if (this.visualMode) {\n      this.selectText(x, this.x, this.ydisp + this.y, this.ydisp + this.y);\n    } else {\n      this.refresh(this.y, this.y);\n    }\n    return;\n  }\n\n  if (key === 'v' || key === ' ') {\n    if (!this.visualMode) {\n      this.enterVisual();\n    } else {\n      this.leaveVisual();\n    }\n    return;\n  }\n\n  if (key === 'y') {\n    if (this.visualMode) {\n      var text = this.grabText(\n        this._selected.x1, this._selected.x2,\n        this._selected.y1, this._selected.y2);\n      this.copyText(text);\n      this.leaveVisual();\n      // this.leaveSelect();\n    }\n    return;\n  }\n\n  if (key === 'q' || key === '\\x1b') {\n    if (this.visualMode) {\n      this.leaveVisual();\n    } else {\n      this.leaveSelect();\n    }\n    return;\n  }\n\n  if (key === 'w' || key === 'W') {\n    var ox = this.x;\n    var oy = this.y;\n    var oyd = this.ydisp;\n\n    var x = this.x;\n    var y = this.y;\n    var yb = this.ydisp;\n    var saw_space = false;\n\n    for (;;) {\n      var line = this.lines[yb + y];\n      while (x < this.cols) {\n        if (line[x][1] <= ' ') {\n          saw_space = true;\n        } else if (saw_space) {\n          break;\n        }\n        x++;\n      }\n      if (x >= this.cols) x = this.cols - 1;\n      if (x === this.cols - 1 && line[x][1] <= ' ') {\n        x = 0;\n        if (++y >= this.rows) {\n          y--;\n          if (++yb > this.ybase) {\n            yb = this.ybase;\n            x = this.x;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    this.x = x, this.y = y;\n    this.scrollDisp(-this.ydisp + yb);\n\n    if (this.visualMode) {\n      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === 'b' || key === 'B') {\n    var ox = this.x;\n    var oy = this.y;\n    var oyd = this.ydisp;\n\n    var x = this.x;\n    var y = this.y;\n    var yb = this.ydisp;\n\n    for (;;) {\n      var line = this.lines[yb + y];\n      var saw_space = x > 0 && line[x][1] > ' ' && line[x - 1][1] > ' ';\n      while (x >= 0) {\n        if (line[x][1] <= ' ') {\n          if (saw_space && (x + 1 < this.cols && line[x + 1][1] > ' ')) {\n            x++;\n            break;\n          } else {\n            saw_space = true;\n          }\n        }\n        x--;\n      }\n      if (x < 0) x = 0;\n      if (x === 0 && (line[x][1] <= ' ' || !saw_space)) {\n        x = this.cols - 1;\n        if (--y < 0) {\n          y++;\n          if (--yb < 0) {\n            yb++;\n            x = 0;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    this.x = x, this.y = y;\n    this.scrollDisp(-this.ydisp + yb);\n\n    if (this.visualMode) {\n      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === 'e' || key === 'E') {\n    var x = this.x + 1;\n    var y = this.y;\n    var yb = this.ydisp;\n    if (x >= this.cols) x--;\n\n    for (;;) {\n      var line = this.lines[yb + y];\n      while (x < this.cols) {\n        if (line[x][1] <= ' ') {\n          x++;\n        } else {\n          break;\n        }\n      }\n      while (x < this.cols) {\n        if (line[x][1] <= ' ') {\n          if (x - 1 >= 0 && line[x - 1][1] > ' ') {\n            x--;\n            break;\n          }\n        }\n        x++;\n      }\n      if (x >= this.cols) x = this.cols - 1;\n      if (x === this.cols - 1 && line[x][1] <= ' ') {\n        x = 0;\n        if (++y >= this.rows) {\n          y--;\n          if (++yb > this.ybase) {\n            yb = this.ybase;\n            break;\n          }\n        }\n        continue;\n      }\n      break;\n    }\n\n    this.x = x, this.y = y;\n    this.scrollDisp(-this.ydisp + yb);\n\n    if (this.visualMode) {\n      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === '^' || key === '0') {\n    var ox = this.x;\n\n    if (key === '0') {\n      this.x = 0;\n    } else if (key === '^') {\n      var line = this.lines[this.ydisp + this.y];\n      var x = 0;\n      while (x < this.cols) {\n        if (line[x][1] > ' ') {\n          break;\n        }\n        x++;\n      }\n      if (x >= this.cols) x = this.cols - 1;\n      this.x = x;\n    }\n\n    if (this.visualMode) {\n      this.selectText(ox, this.x, this.ydisp + this.y, this.ydisp + this.y);\n    } else {\n      this.refresh(this.y, this.y);\n    }\n    return;\n  }\n\n  if (key === '$') {\n    var ox = this.x;\n    var line = this.lines[this.ydisp + this.y];\n    var x = this.cols - 1;\n    while (x >= 0) {\n      if (line[x][1] > ' ') {\n        if (this.visualMode && x < this.cols - 1) x++;\n        break;\n      }\n      x--;\n    }\n    if (x < 0) x = 0;\n    this.x = x;\n    if (this.visualMode) {\n      this.selectText(ox, this.x, this.ydisp + this.y, this.ydisp + this.y);\n    } else {\n      this.refresh(this.y, this.y);\n    }\n    return;\n  }\n\n  if (key === 'g' || key === 'G') {\n    var ox = this.x;\n    var oy = this.y;\n    var oyd = this.ydisp;\n    if (key === 'g') {\n      this.x = 0, this.y = 0;\n      this.scrollDisp(-this.ydisp);\n    } else if (key === 'G') {\n      this.x = 0, this.y = this.rows - 1;\n      this.scrollDisp(this.ybase);\n    }\n    if (this.visualMode) {\n      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === 'H' || key === 'M' || key === 'L') {\n    var ox = this.x;\n    var oy = this.y;\n    if (key === 'H') {\n      this.x = 0, this.y = 0;\n    } else if (key === 'M') {\n      this.x = 0, this.y = this.rows / 2 | 0;\n    } else if (key === 'L') {\n      this.x = 0, this.y = this.rows - 1;\n    }\n    if (this.visualMode) {\n      this.selectText(ox, this.x, this.ydisp + oy, this.ydisp + this.y);\n    } else {\n      this.refresh(oy, oy);\n      this.refresh(this.y, this.y);\n    }\n    return;\n  }\n\n  if (key === '{' || key === '}') {\n    var ox = this.x;\n    var oy = this.y;\n    var oyd = this.ydisp;\n\n    var line;\n    var saw_full = false;\n    var found = false;\n    var first_is_space = -1;\n    var y = this.y + (key === '{' ? -1 : 1);\n    var yb = this.ydisp;\n    var i;\n\n    if (key === '{') {\n      if (y < 0) {\n        y++;\n        if (yb > 0) yb--;\n      }\n    } else if (key === '}') {\n      if (y >= this.rows) {\n        y--;\n        if (yb < this.ybase) yb++;\n      }\n    }\n\n    for (;;) {\n      line = this.lines[yb + y];\n\n      for (i = 0; i < this.cols; i++) {\n        if (line[i][1] > ' ') {\n          if (first_is_space === -1) {\n            first_is_space = 0;\n          }\n          saw_full = true;\n          break;\n        } else if (i === this.cols - 1) {\n          if (first_is_space === -1) {\n            first_is_space = 1;\n          } else if (first_is_space === 0) {\n            found = true;\n          } else if (first_is_space === 1) {\n            if (saw_full) found = true;\n          }\n          break;\n        }\n      }\n\n      if (found) break;\n\n      if (key === '{') {\n        y--;\n        if (y < 0) {\n          y++;\n          if (yb > 0) yb--;\n          else break;\n        }\n      } else if (key === '}') {\n        y++;\n        if (y >= this.rows) {\n          y--;\n          if (yb < this.ybase) yb++;\n          else break;\n        }\n      }\n    }\n\n    if (!found) {\n      if (key === '{') {\n        y = 0;\n        yb = 0;\n      } else if (key === '}') {\n        y = this.rows - 1;\n        yb = this.ybase;\n      }\n    }\n\n    this.x = 0, this.y = y;\n    this.scrollDisp(-this.ydisp + yb);\n\n    if (this.visualMode) {\n      this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n    }\n    return;\n  }\n\n  if (key === '/' || key === '?') {\n    if (!this.visualMode) {\n      this.enterSearch(key === '/');\n    }\n    return;\n  }\n\n  return false;\n};\n\nTerminal.prototype.keySearch = function(ev, key) {\n  if (key === '\\x1b') {\n    this.leaveSearch();\n    return;\n  }\n\n  if (key === '\\r' || (!this.searchMode && (key === 'n' || key === 'N'))) {\n    this.leaveSearch();\n\n    var entry = this.entry;\n\n    if (!entry) {\n      this.refresh(0, this.rows - 1);\n      return;\n    }\n\n    var ox = this.x;\n    var oy = this.y;\n    var oyd = this.ydisp;\n\n    var line;\n    var found = false;\n    var wrapped = false;\n    var x = this.x + 1;\n    var y = this.ydisp + this.y;\n    var yb, i;\n    var up = key === 'N'\n      ? this.searchDown\n      : !this.searchDown;\n\n    for (;;) {\n      line = this.lines[y];\n\n      while (x < this.cols) {\n        for (i = 0; i < entry.length; i++) {\n          if (x + i >= this.cols) break;\n          if (line[x + i][1] !== entry[i]) {\n            break;\n          } else if (line[x + i][1] === entry[i] && i === entry.length - 1) {\n            found = true;\n            break;\n          }\n        }\n        if (found) break;\n        x += i + 1;\n      }\n      if (found) break;\n\n      x = 0;\n\n      if (!up) {\n        y++;\n        if (y > this.ybase + this.rows - 1) {\n          if (wrapped) break;\n          // this.setMessage('Search wrapped. Continuing at TOP.');\n          wrapped = true;\n          y = 0;\n        }\n      } else {\n        y--;\n        if (y < 0) {\n          if (wrapped) break;\n          // this.setMessage('Search wrapped. Continuing at BOTTOM.');\n          wrapped = true;\n          y = this.ybase + this.rows - 1;\n        }\n      }\n    }\n\n    if (found) {\n      if (y - this.ybase < 0) {\n        yb = y;\n        y = 0;\n        if (yb > this.ybase) {\n          y = yb - this.ybase;\n          yb = this.ybase;\n        }\n      } else {\n        yb = this.ybase;\n        y -= this.ybase;\n      }\n\n      this.x = x, this.y = y;\n      this.scrollDisp(-this.ydisp + yb);\n\n      if (this.visualMode) {\n        this.selectText(ox, this.x, oy + oyd, this.ydisp + this.y);\n      }\n      return;\n    }\n\n    // this.setMessage(\"No matches found.\");\n    this.refresh(0, this.rows - 1);\n\n    return;\n  }\n\n  if (key === '\\b' || key === '\\x7f') {\n    if (this.entry.length === 0) return;\n    var bottom = this.ydisp + this.rows - 1;\n    this.entry = this.entry.slice(0, -1);\n    var i = this.entryPrefix.length + this.entry.length;\n    //this.lines[bottom][i][1] = ' ';\n    this.lines[bottom][i] = [\n      this.lines[bottom][i][0],\n      ' '\n    ];\n    this.x--;\n    this.refresh(this.rows - 1, this.rows - 1);\n    this.refresh(this.y, this.y);\n    return;\n  }\n\n  if (key.length === 1 && key >= ' ' && key <= '~') {\n    var bottom = this.ydisp + this.rows - 1;\n    this.entry += key;\n    var i = this.entryPrefix.length + this.entry.length - 1;\n    //this.lines[bottom][i][0] = (this.defAttr & ~0x1ff) | 4;\n    //this.lines[bottom][i][1] = key;\n    this.lines[bottom][i] = [\n      (this.defAttr & ~0x1ff) | 4,\n      key\n    ];\n    this.x++;\n    this.refresh(this.rows - 1, this.rows - 1);\n    this.refresh(this.y, this.y);\n    return;\n  }\n\n  return false;\n};\n\n/**\n * Character Sets\n */\n\nTerminal.charsets = {};\n\n// DEC Special Character and Line Drawing Set.\n// http://vt100.net/docs/vt102-ug/table5-13.html\n// A lot of curses apps use this if they see TERM=xterm.\n// testing: echo -e '\\e(0a\\e(B'\n// The xterm output sometimes seems to conflict with the\n// reference above. xterm seems in line with the reference\n// when running vttest however.\n// The table below now uses xterm's output from vttest.\nTerminal.charsets.SCLD = { // (0\n  '`': '\\u25c6', // '◆'\n  'a': '\\u2592', // '▒'\n  'b': '\\u0009', // '\\t'\n  'c': '\\u000c', // '\\f'\n  'd': '\\u000d', // '\\r'\n  'e': '\\u000a', // '\\n'\n  'f': '\\u00b0', // '°'\n  'g': '\\u00b1', // '±'\n  'h': '\\u2424', // '\\u2424' (NL)\n  'i': '\\u000b', // '\\v'\n  'j': '\\u2518', // '┘'\n  'k': '\\u2510', // '┐'\n  'l': '\\u250c', // '┌'\n  'm': '\\u2514', // '└'\n  'n': '\\u253c', // '┼'\n  'o': '\\u23ba', // '⎺'\n  'p': '\\u23bb', // '⎻'\n  'q': '\\u2500', // '─'\n  'r': '\\u23bc', // '⎼'\n  's': '\\u23bd', // '⎽'\n  't': '\\u251c', // '├'\n  'u': '\\u2524', // '┤'\n  'v': '\\u2534', // '┴'\n  'w': '\\u252c', // '┬'\n  'x': '\\u2502', // '│'\n  'y': '\\u2264', // '≤'\n  'z': '\\u2265', // '≥'\n  '{': '\\u03c0', // 'π'\n  '|': '\\u2260', // '≠'\n  '}': '\\u00a3', // '£'\n  '~': '\\u00b7'  // '·'\n};\n\nTerminal.charsets.UK = null; // (A\nTerminal.charsets.US = null; // (B (USASCII)\nTerminal.charsets.Dutch = null; // (4\nTerminal.charsets.Finnish = null; // (C or (5\nTerminal.charsets.French = null; // (R\nTerminal.charsets.FrenchCanadian = null; // (Q\nTerminal.charsets.German = null; // (K\nTerminal.charsets.Italian = null; // (Y\nTerminal.charsets.NorwegianDanish = null; // (E or (6\nTerminal.charsets.Spanish = null; // (Z\nTerminal.charsets.Swedish = null; // (H or (7\nTerminal.charsets.Swiss = null; // (=\nTerminal.charsets.ISOLatin = null; // /A\n\n/**\n * Helpers\n */\n\nfunction on(el, type, handler, capture) {\n  el.addEventListener(type, handler, capture || false);\n}\n\nfunction off(el, type, handler, capture) {\n  el.removeEventListener(type, handler, capture || false);\n}\n\nfunction cancel(ev) {\n  if (ev.preventDefault) ev.preventDefault();\n  ev.returnValue = false;\n  if (ev.stopPropagation) ev.stopPropagation();\n  ev.cancelBubble = true;\n  return false;\n}\n\nfunction inherits(child, parent) {\n  function f() {\n    this.constructor = child;\n  }\n  f.prototype = parent.prototype;\n  child.prototype = new f;\n}\n\n// if bold is broken, we can't\n// use it in the terminal.\nfunction isBoldBroken(document) {\n  var body = document.getElementsByTagName('body')[0];\n  var terminal = document.createElement('div');\n  terminal.className = 'terminal';\n  var line = document.createElement('div');\n  var el = document.createElement('span');\n  el.innerHTML = 'hello world';\n  line.appendChild(el);\n  terminal.appendChild(line);\n  body.appendChild(terminal);\n  var w1 = el.scrollWidth;\n  el.style.fontWeight = 'bold';\n  var w2 = el.scrollWidth;\n  body.removeChild(terminal);\n  return w1 !== w2;\n}\n\nvar String = this.String;\nvar setTimeout = this.setTimeout;\nvar setInterval = this.setInterval;\n\nfunction indexOf(obj, el) {\n  var i = obj.length;\n  while (i--) {\n    if (obj[i] === el) return i;\n  }\n  return -1;\n}\n\nfunction isWide(ch) {\n  if (ch <= '\\uff00') return false;\n  return (ch >= '\\uff01' && ch <= '\\uffbe')\n      || (ch >= '\\uffc2' && ch <= '\\uffc7')\n      || (ch >= '\\uffca' && ch <= '\\uffcf')\n      || (ch >= '\\uffd2' && ch <= '\\uffd7')\n      || (ch >= '\\uffda' && ch <= '\\uffdc')\n      || (ch >= '\\uffe0' && ch <= '\\uffe6')\n      || (ch >= '\\uffe8' && ch <= '\\uffee');\n}\n\nfunction matchColor(r1, g1, b1) {\n  var hash = (r1 << 16) | (g1 << 8) | b1;\n\n  if (matchColor._cache[hash] != null) {\n    return matchColor._cache[hash];\n  }\n\n  var ldiff = Infinity\n    , li = -1\n    , i = 0\n    , c\n    , r2\n    , g2\n    , b2\n    , diff;\n\n  for (; i < Terminal.vcolors.length; i++) {\n    c = Terminal.vcolors[i];\n    r2 = c[0];\n    g2 = c[1];\n    b2 = c[2];\n\n    diff = matchColor.distance(r1, g1, b1, r2, g2, b2);\n\n    if (diff === 0) {\n      li = i;\n      break;\n    }\n\n    if (diff < ldiff) {\n      ldiff = diff;\n      li = i;\n    }\n  }\n\n  return matchColor._cache[hash] = li;\n}\n\nmatchColor._cache = {};\n\n// http://stackoverflow.com/questions/1633828\nmatchColor.distance = function(r1, g1, b1, r2, g2, b2) {\n  return Math.pow(30 * (r1 - r2), 2)\n    + Math.pow(59 * (g1 - g2), 2)\n    + Math.pow(11 * (b1 - b2), 2);\n};\n\nfunction each(obj, iter, con) {\n  if (obj.forEach) return obj.forEach(iter, con);\n  for (var i = 0; i < obj.length; i++) {\n    iter.call(con, obj[i], i, obj);\n  }\n}\n\nfunction keys(obj) {\n  if (Object.keys) return Object.keys(obj);\n  var key, keys = [];\n  for (key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      keys.push(key);\n    }\n  }\n  return keys;\n}\n\n/**\n * Expose\n */\n\nTerminal.EventEmitter = EventEmitter;\nTerminal.Stream = Stream;\nTerminal.inherits = inherits;\nTerminal.on = on;\nTerminal.off = off;\nTerminal.cancel = cancel;\n\nif (typeof define === 'function' && define.amd) {\n  define([], function() { return Terminal; });\n} else if (typeof module !== 'undefined') {\n  module.exports = Terminal;\n} else {\n  this.Terminal = Terminal;\n}\n\n}).call(function() {\n  return this || (typeof window !== 'undefined' ? window : global);\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bower_components/term.js-cockpit/src/term.js\n// module id = 124\n// module chunks = 3"],"sourceRoot":""}