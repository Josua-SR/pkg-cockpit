!function(t) {
    function e(i) {
        if (s[i]) return s[i].exports;
        var r = s[i] = {
            exports: {},
            id: i,
            loaded: !1
        };
        return t[i].call(r.exports, r, r.exports, e), r.loaded = !0, r.exports;
    }
    var s = {};
    return e.m = t, e.c = s, e.p = "", e(0);
}({
    0: function(t, e, s) {
        s(179), t.exports = s(183);
    },
    2: function(t, e) {
        t.exports = cockpit;
    },
    136: function(t, e, s) {
        /*!
	 * react-lite.js v0.15.39
	 * (c) 2017 Jade Gu
	 * Released under the MIT License.
	 */
        !function(e, s) {
            t.exports = s();
        }(this, function() {
            "use strict";
            function t(t, e, s, i, r) {
                var n = {
                    vtype: t,
                    type: e,
                    props: s,
                    refs: Xt,
                    key: i,
                    ref: r
                };
                return t !== zt && t !== Kt || (n.uid = at()), n;
            }
            function e(t, e, s) {
                var i = t.vtype, r = null;
                return i ? i === Ht ? r = h(t, e, s) : i === Kt ? r = x(t, e, s) : i === zt ? r = y(t, e, s) : i === Wt && (r = document.createComment("react-text: " + (t.uid || at()))) : r = document.createTextNode(t), 
                r;
            }
            function s(t, e, s, r) {
                var n = t.vtype;
                if (n === Kt) return g(t, e, s, r);
                if (n === zt) return m(t, e, s, r);
                if (n !== Ht) return s;
                var o = t.props[It] && t.props[It].__html;
                return null != o ? (d(t, e, s, r), c(e, s, r)) : (i(t, e, s, r), d(t, e, s, r)), 
                s;
            }
            function i(t, e, s, i) {
                var a = {
                    removes: [],
                    updates: [],
                    creates: []
                };
                u(a, t, e, s, i), nt(a.removes, n), nt(a.updates, r), nt(a.creates, o);
            }
            function r(t) {
                if (t) {
                    var e = t.vnode, s = t.node;
                    t.shouldIgnore || (e.vtype ? e.vtype === Ht ? d(e, t.newVnode, s, t.parentContext) : e.vtype === zt ? s = m(e, t.newVnode, s, t.parentContext) : e.vtype === Kt && (s = g(e, t.newVnode, s, t.parentContext)) : s.replaceData(0, s.length, t.newVnode));
                    var i = s.parentNode.childNodes[t.index];
                    return i !== s && s.parentNode.insertBefore(s, i), s;
                }
            }
            function n(t) {
                a(t.vnode, t.node), t.node.parentNode.removeChild(t.node);
            }
            function o(t) {
                var s = e(t.vnode, t.parentContext, t.parentNode.namespaceURI);
                t.parentNode.insertBefore(s, t.parentNode.childNodes[t.index]);
            }
            function a(t, e) {
                var s = t.vtype;
                s === Ht ? f(t, e) : s === Kt ? k(t, e) : s === zt && v(t, e);
            }
            function h(t, e, s) {
                var i = t.type, r = t.props, n = null;
                "svg" === i || s === Vt ? (n = document.createElementNS(Vt, i), s = Vt) : n = document.createElement(i), 
                c(t, n, e);
                var o = i.indexOf("-") >= 0 || null != r.is;
                return pt(n, r, o), null != t.ref && (rt(Zt, t), rt(Zt, n)), n;
            }
            function c(t, s, i) {
                for (var r = s.vchildren = l(t), n = s.namespaceURI, o = 0, a = r.length; o < a; o++) s.appendChild(e(r[o], i, n));
            }
            function l(t) {
                var e = t.props.children, s = [];
                return Ce(e) ? nt(e, p, s) : p(e, s), s;
            }
            function p(t, e) {
                if (null != t && "boolean" != typeof t) {
                    if (!t.vtype) {
                        if (t.toJS) return t = t.toJS(), void (Ce(t) ? nt(t, p, e) : p(t, e));
                        t = "" + t;
                    }
                    e[e.length] = t;
                }
            }
            function u(t, e, s, i, r) {
                if (i.vchildren) {
                    var n = i.childNodes, o = i.vchildren, a = i.vchildren = l(s), h = o.length, c = a.length;
                    if (0 !== h) if (0 !== c) {
                        for (var p = Array(c), d = null, f = null, y = 0; y < h; y++) for (var m = o[y], v = 0; v < c; v++) if (!p[v]) {
                            var b = a[v];
                            if (m === b) {
                                p[v] = {
                                    shouldIgnore: L(i),
                                    vnode: m,
                                    newVnode: b,
                                    node: n[y],
                                    parentContext: r,
                                    index: v
                                }, o[y] = null;
                                break;
                            }
                        }
                        for (var y = 0; y < h; y++) {
                            var x = o[y];
                            if (null !== x) {
                                for (var g = !0, v = 0; v < c; v++) if (!p[v]) {
                                    var k = a[v];
                                    if (k.type === x.type && k.key === x.key && k.refs === x.refs) {
                                        p[v] = {
                                            vnode: x,
                                            newVnode: k,
                                            node: n[y],
                                            parentContext: r,
                                            index: v
                                        }, g = !1;
                                        break;
                                    }
                                }
                                g && (d || (d = []), rt(d, {
                                    vnode: x,
                                    node: n[y]
                                }));
                            }
                        }
                        for (var y = 0; y < c; y++) {
                            var w = p[y];
                            w ? w.vnode.vtype === Ht && u(t, w.vnode, w.newVnode, w.node, w.parentContext) : (f || (f = []), 
                            rt(f, {
                                vnode: a[y],
                                parentNode: i,
                                parentContext: r,
                                index: y
                            }));
                        }
                        d && rt(t.removes, d), f && rt(t.creates, f), rt(t.updates, p);
                    } else for (var y = 0; y < h; y++) rt(t.removes, {
                        vnode: o[y],
                        node: n[y]
                    }); else if (c > 0) for (var y = 0; y < c; y++) rt(t.creates, {
                        vnode: a[y],
                        parentNode: i,
                        parentContext: r,
                        index: y
                    });
                }
            }
            function d(t, e, s) {
                var i = t.type.indexOf("-") >= 0 || null != t.props.is;
                return ut(s, t.props, e.props, i), t.ref !== e.ref && (D(t.refs, t.ref, s), O(e.refs, e.ref, s)), 
                s;
            }
            function f(t, e) {
                var s = (t.props, e.vchildren), i = e.childNodes;
                if (s) for (var r = 0, n = s.length; r < n; r++) a(s[r], i[r]);
                D(t.refs, t.ref, e), e.eventStore = e.vchildren = null;
            }
            function y(t, s, i) {
                var r = b(t, s), n = e(r, s, i);
                return n.cache = n.cache || {}, n.cache[t.uid] = r, n;
            }
            function m(t, e, s, i) {
                var r = t.uid, n = s.cache[r];
                delete s.cache[r];
                var o = b(e, i), a = A(n, o, s, i);
                return a.cache = a.cache || {}, a.cache[e.uid] = o, a !== s && R(a.cache, s.cache, a), 
                a;
            }
            function v(t, e) {
                var s = t.uid, i = e.cache[s];
                delete e.cache[s], a(i, e);
            }
            function b(e, s) {
                var i = e.type, r = e.props, n = w(s, i.contextTypes), o = i(r, n);
                if (o && o.render && (o = o.render()), null === o || o === !1) o = t(Wt); else if (!o || !o.vtype) throw new Error("@" + i.name + "#render:You may have returned undefined, an array or some other invalid object");
                return o;
            }
            function x(t, s, i) {
                var r = t.type, n = t.props, o = t.uid, a = w(s, r.contextTypes), h = new r(n, a), c = h.$updater, l = h.$cache;
                l.parentContext = s, c.isPending = !0, h.props = h.props || n, h.context = h.context || a, 
                h.componentWillMount && (h.componentWillMount(), h.state = c.getState());
                var p = C(h), u = e(p, M(h, s), i);
                return u.cache = u.cache || {}, u.cache[o] = h, l.vnode = p, l.node = u, l.isMounted = !0, 
                rt(Gt, h), null != t.ref && (rt(Zt, t), rt(Zt, h)), u;
            }
            function g(t, e, s, i) {
                var r = t.uid, n = s.cache[r], o = n.$updater, a = n.$cache, h = e.type, c = e.props, l = w(i, h.contextTypes);
                if (delete s.cache[r], s.cache[e.uid] = n, a.parentContext = i, n.componentWillReceiveProps) {
                    var p = !o.isPending;
                    p && (o.isPending = !0), n.componentWillReceiveProps(c, l), p && (o.isPending = !1);
                }
                return t.ref !== e.ref && (D(t.refs, t.ref, n), O(e.refs, e.ref, n)), o.emitUpdate(c, l), 
                a.node;
            }
            function k(t, e) {
                var s = t.uid, i = e.cache[s], r = i.$cache;
                delete e.cache[s], D(t.refs, t.ref, i), i.setState = i.forceUpdate = et, i.componentWillUnmount && i.componentWillUnmount(), 
                a(r.vnode, e), delete i.setState, r.isMounted = !1, r.node = r.parentContext = r.vnode = i.refs = i.context = null;
            }
            function w(t, e) {
                var s = {};
                if (!e || !t) return s;
                for (var i in e) e.hasOwnProperty(i) && (s[i] = t[i]);
                return s;
            }
            function C(e, s) {
                Xt = e.refs;
                var i = e.render();
                if (null === i || i === !1) i = t(Wt); else if (!i || !i.vtype) throw new Error("@" + e.constructor.name + "#render:You may have returned undefined, an array or some other invalid object");
                return Xt = null, i;
            }
            function M(t, e) {
                if (t.getChildContext) {
                    var s = t.getChildContext();
                    s && (e = ot(ot({}, e), s));
                }
                return e;
            }
            function P() {
                var t = Gt.length;
                if (t) {
                    var e = Gt;
                    Gt = [];
                    for (var s = -1; t--; ) {
                        var i = e[++s], r = i.$updater;
                        i.componentDidMount && i.componentDidMount(), r.isPending = !1, r.emitUpdate();
                    }
                }
            }
            function S() {
                var t = Zt.length;
                if (t) {
                    var e = Zt;
                    Zt = [];
                    for (var s = 0; s < t; s += 2) {
                        var i = e[s], r = e[s + 1];
                        O(i.refs, i.ref, r);
                    }
                }
            }
            function T() {
                S(), P();
            }
            function A(t, i, r, n) {
                var o = r;
                return null == i ? (a(t, r), r.parentNode.removeChild(r)) : t.type !== i.type || t.key !== i.key ? (a(t, r), 
                o = e(i, n, r.namespaceURI), r.parentNode.replaceChild(o, r)) : (t !== i || n) && (o = s(t, i, r, n)), 
                o;
            }
            function E() {
                return this;
            }
            function O(t, e, s) {
                null != e && s && (s.nodeName && !s.getDOMNode && (s.getDOMNode = E), tt(e) ? e(s) : t && (t[e] = s));
            }
            function D(t, e, s) {
                null != e && (tt(e) ? e(null) : t && t[e] === s && delete t[e]);
            }
            function R(t, e, s) {
                for (var i in e) if (e.hasOwnProperty(i)) {
                    var r = e[i];
                    t[i] = r, r.forceUpdate && (r.$cache.node = s);
                }
            }
            function L(t) {
                var e = t.vchildren, s = t.children;
                if (e) for (var i = 0; i < e.length; i++) {
                    var r = e[i];
                    if ((r.vtype === Kt || r.vtype === zt) && r.type.contextTypes) return !1;
                }
                if (s) for (var i = 0; i < s.length; i++) if (!L(s[i])) return !1;
                return !0;
            }
            function _(t) {
                this.instance = t, this.pendingStates = [], this.pendingCallbacks = [], this.isPending = !1, 
                this.nextProps = this.nextContext = null, this.clearCallbacks = this.clearCallbacks.bind(this);
            }
            function N(t, e) {
                this.$updater = new _(this), this.$cache = {
                    isMounted: !1
                }, this.props = t, this.state = {}, this.refs = {}, this.context = e;
            }
            function B(t, e, s, i, r) {
                var n = !0;
                if (t.shouldComponentUpdate && (n = t.shouldComponentUpdate(e, s, i)), n === !1) return t.props = e, 
                t.state = s, void (t.context = i || {});
                var o = t.$cache;
                o.props = e, o.state = s, o.context = i || {}, t.forceUpdate(r);
            }
            function U(t) {
                return "onDoubleClick" === t ? t = "ondblclick" : "onTouchTap" === t && (t = "onclick"), 
                t.toLowerCase();
            }
            function F(t, e, s) {
                e = U(e);
                var i = t.eventStore || (t.eventStore = {});
                if (i[e] = s, 1 === te[e]) return void (t[e] = q);
                if (re[e] || (document.addEventListener(e.substr(2), V, !1), re[e] = !0), ee && e === ie) return void t.addEventListener("click", se, !1);
                t.nodeName;
                "onchange" === e && z(t) && F(t, "oninput", s);
            }
            function I(t, e) {
                e = U(e);
                var s = t.eventStore || (t.eventStore = {});
                if (delete s[e], 1 === te[e]) return void (t[e] = null);
                if (ee && e === ie) return void t.removeEventListener("click", se, !1);
                t.nodeName;
                "onchange" === e && z(t) && delete s.oninput;
            }
            function V(t) {
                var e = t.target, s = t.type, i = "on" + s, r = void 0;
                for (Jt.isPending = !0; e; ) {
                    var n = e, o = n.eventStore, a = o && o[i];
                    if (a) {
                        if (r || (r = H(t)), r.currentTarget = e, a.call(e, r), r.$cancelBubble) break;
                        e = e.parentNode;
                    } else e = e.parentNode;
                }
                Jt.isPending = !1, Jt.batchUpdate();
            }
            function q(t) {
                var e = t.currentTarget || t.target, s = "on" + t.type, i = H(t);
                i.currentTarget = e, Jt.isPending = !0;
                var r = e.eventStore, n = r && r[s];
                n && n.call(e, i), Jt.isPending = !1, Jt.batchUpdate();
            }
            function H(t) {
                var e = {}, s = function() {
                    return e.$cancelBubble = !0;
                };
                e.nativeEvent = t, e.persist = et;
                for (var i in t) "function" != typeof t[i] ? e[i] = t[i] : "stopPropagation" === i || "stopImmediatePropagation" === i ? e[i] = s : e[i] = t[i].bind(t);
                return e;
            }
            function z(t) {
                var e = t.nodeName && t.nodeName.toLowerCase();
                return "select" !== e && !("input" === e && "file" === t.type);
            }
            function K(t, e) {
                for (var s in e) e.hasOwnProperty(s) && Y(t, s, e[s]);
            }
            function W(t, e) {
                for (var s in e) e.hasOwnProperty(s) && (t[s] = "");
            }
            function j(t, e, s) {
                if (e !== s) {
                    if (!s && e) return void W(t, e);
                    if (s && !e) return void K(t, s);
                    for (var i in e) s.hasOwnProperty(i) ? s[i] !== e[i] && Y(t, i, s[i]) : t[i] = "";
                    for (var i in s) e.hasOwnProperty(i) || Y(t, i, s[i]);
                }
            }
            function $(t, e) {
                return t + e.charAt(0).toUpperCase() + e.substring(1);
            }
            function Y(t, e, s) {
                return !ne[e] && ae.test(s) ? void (t[e] = s + "px") : ("float" === e && (e = "cssFloat"), 
                null != s && "boolean" != typeof s || (s = ""), void (t[e] = s));
            }
            function X(t) {
                var e = t.props, s = t.attrNS, i = t.domAttrs, r = t.domProps;
                for (var n in e) if (e.hasOwnProperty(n)) {
                    var o = e[n];
                    ue[n] = {
                        attributeName: i.hasOwnProperty(n) ? i[n] : n.toLowerCase(),
                        propertyName: r.hasOwnProperty(n) ? r[n] : n,
                        attributeNamespace: s.hasOwnProperty(n) ? s[n] : null,
                        mustUseProperty: G(o, de),
                        hasBooleanValue: G(o, fe),
                        hasNumericValue: G(o, ye),
                        hasPositiveNumericValue: G(o, me),
                        hasOverloadedBooleanValue: G(o, ve)
                    };
                }
            }
            function G(t, e) {
                return (t & e) === e;
            }
            function Z(t, e, s) {
                var i = ue.hasOwnProperty(e) && ue[e];
                if (i) if (null == s || i.hasBooleanValue && !s || i.hasNumericValue && isNaN(s) || i.hasPositiveNumericValue && s < 1 || i.hasOverloadedBooleanValue && s === !1) J(t, e); else if (i.mustUseProperty) t[i.propertyName] = s; else {
                    var r = i.attributeName, n = i.attributeNamespace;
                    n ? t.setAttributeNS(n, r, "" + s) : i.hasBooleanValue || i.hasOverloadedBooleanValue && s === !0 ? t.setAttribute(r, "") : t.setAttribute(r, "" + s);
                } else pe(e) && le.test(e) && (null == s ? t.removeAttribute(e) : t.setAttribute(e, "" + s));
            }
            function J(t, e) {
                var s = ue.hasOwnProperty(e) && ue[e];
                if (s) if (s.mustUseProperty) {
                    var i = s.propertyName;
                    s.hasBooleanValue ? t[i] = !1 : t[i] = "";
                } else t.removeAttribute(s.attributeName); else pe(e) && t.removeAttribute(e);
            }
            function Q(t, e, s) {
                var i, r, n = t.options;
                if (e) {
                    if (t.multiple = !0, !Array.isArray(s)) throw new Error("The value prop supplied to <select> must be an array if `multiple` is true");
                    for (i = {}, r = 0; r < s.length; r++) i["" + s[r]] = !0;
                    for (r = 0; r < n.length; r++) {
                        var o = i.hasOwnProperty(n[r].value);
                        n[r].selected !== o && (n[r].selected = o);
                    }
                } else {
                    if (t.multiple = !1, Array.isArray(s)) throw new Error("The value prop supplied to <select> must be a scalar value if `multiple` is false.");
                    for (i = "" + s, r = 0; r < n.length; r++) {
                        var a = n[r];
                        a.value === i ? a.selected || (a.selected = !0) : a.selected && (a.selected = !1);
                    }
                    n.selectedIndex < 0 && n.length && (n[0].selected = !0);
                }
            }
            function tt(t) {
                return "function" == typeof t;
            }
            function et() {}
            function st(t) {
                return t;
            }
            function it(t, e) {
                return function() {
                    return t.apply(this, arguments), e.apply(this, arguments);
                };
            }
            function rt(t, e) {
                t[t.length] = e;
            }
            function nt(t, e, s) {
                for (var i = t.length, r = -1; i--; ) {
                    var n = t[++r];
                    Ce(n) ? nt(n, e, s) : e(n, s);
                }
            }
            function ot(t, e) {
                if (!e) return t;
                for (var s = Object.keys(e), i = s.length; i--; ) t[s[i]] = e[s[i]];
                return t;
            }
            function at() {
                return ++Me;
            }
            function ht(t, e, s, i) {
                Pe.test(e) ? F(t, e, s) : "style" === e ? K(t.style, s) : e === It ? s && null != s.__html && (t.innerHTML = s.__html) : i ? null == s ? t.removeAttribute(e) : t.setAttribute(e, "" + s) : Z(t, e, s);
            }
            function ct(t, e, s, i) {
                Pe.test(e) ? I(t, e) : "style" === e ? W(t.style, s) : e === It ? t.innerHTML = "" : i ? t.removeAttribute(e) : J(t, e);
            }
            function lt(t, e, s, i, r) {
                if ("value" !== e && "checked" !== e || (i = t[e]), s !== i) return void 0 === s ? void ct(t, e, i, r) : void ("style" === e ? j(t.style, i, s) : ht(t, e, s, r));
            }
            function pt(t, e, s) {
                var i = "SELECT" === t.nodeName;
                for (var r in e) "children" !== r && (!i || "value" !== r && "defaultValue" !== r ? ht(t, r, e[r], s) : Q(t, e.multiple, e[r]));
            }
            function ut(t, e, s, i) {
                var r = "SELECT" === t.nodeName;
                for (var n in e) "children" !== n && (s.hasOwnProperty(n) ? !r || "value" !== n && "defaultValue" !== n ? lt(t, n, s[n], e[n], i) : Q(t, s.multiple, s[n]) : ct(t, n, e[n], i));
                for (var n in s) "children" === n || e.hasOwnProperty(n) || (!r || "value" !== n && "defaultValue" !== n ? ht(t, n, s[n], i) : Q(t, s.multiple, s[n]));
            }
            function dt(t) {
                return !(!t || t.nodeType !== jt && t.nodeType !== $t && t.nodeType !== Yt);
            }
            function ft(t, s, i, r) {
                if (!t.vtype) throw new Error("cannot render " + t + " to container");
                if (!dt(s)) throw new Error("container " + s + " is not a DOM element");
                var n = s[qt] || (s[qt] = at()), o = Se[n];
                if (o) return void (o === !0 ? Se[n] = o = {
                    vnode: t,
                    callback: i,
                    parentContext: r
                } : (o.vnode = t, o.parentContext = r, o.callback = o.callback ? it(o.callback, i) : i));
                Se[n] = !0;
                var a = null, h = null;
                if (a = Te[n]) h = A(a, t, s.firstChild, r); else {
                    h = e(t, r, s.namespaceURI);
                    for (var c = null; c = s.lastChild; ) s.removeChild(c);
                    s.appendChild(h);
                }
                Te[n] = t;
                var l = Jt.isPending;
                Jt.isPending = !0, T(), o = Se[n], delete Se[n];
                var p = null;
                return "object" == typeof o ? p = ft(o.vnode, s, o.callback, o.parentContext) : t.vtype === Ht ? p = h : t.vtype === Kt && (p = h.cache[t.uid]), 
                l || (Jt.isPending = !1, Jt.batchUpdate()), i && i.call(p), p;
            }
            function yt(t, e, s) {
                return ft(t, e, s);
            }
            function mt(t, e, s, i) {
                var r = t.$cache.parentContext;
                return ft(e, s, i, r);
            }
            function vt(t) {
                if (!t.nodeName) throw new Error("expect node");
                var e = t[qt], s = null;
                return !!(s = Te[e]) && (a(s, t.firstChild), t.removeChild(t.firstChild), delete Te[e], 
                !0);
            }
            function bt(t) {
                if (null == t) return null;
                if (t.nodeName) return t;
                var e = t;
                if (e.getDOMNode && e.$cache.isMounted) return e.getDOMNode();
                throw new Error("findDOMNode can not find Node");
            }
            function xt(e, s, i) {
                var r = null;
                if ("string" == typeof e) r = Ht; else {
                    if ("function" != typeof e) throw new Error("React.createElement: unexpect type [ " + e + " ]");
                    r = e.prototype && e.prototype.isReactComponent ? Kt : zt;
                }
                var n = null, o = null, a = {};
                if (null != s) for (var h in s) s.hasOwnProperty(h) && ("key" === h ? void 0 !== s.key && (n = "" + s.key) : "ref" === h ? void 0 !== s.ref && (o = s.ref) : a[h] = s[h]);
                var c = e.defaultProps;
                if (c) for (var h in c) void 0 === a[h] && (a[h] = c[h]);
                var l = arguments.length, p = i;
                if (l > 3) {
                    p = Array(l - 2);
                    for (var u = 2; u < l; u++) p[u - 2] = arguments[u];
                }
                return void 0 !== p && (a.children = p), t(r, e, a, n, o);
            }
            function gt(t) {
                return null != t && !!t.vtype;
            }
            function kt(t, e) {
                for (var s = t.type, i = t.key, r = t.ref, n = ot(ot({
                    key: i,
                    ref: r
                }, t.props), e), o = arguments.length, a = Array(o > 2 ? o - 2 : 0), h = 2; h < o; h++) a[h - 2] = arguments[h];
                var c = xt.apply(void 0, [ s, n ].concat(a));
                return c.ref === t.ref && (c.refs = t.refs), c;
            }
            function wt(t) {
                var e = function() {
                    for (var e = arguments.length, s = Array(e), i = 0; i < e; i++) s[i] = arguments[i];
                    return xt.apply(void 0, [ t ].concat(s));
                };
                return e.type = t, e;
            }
            function Ct(t) {
                if (gt(t)) return t;
                throw new Error("expect only one child");
            }
            function Mt(t, e, s) {
                if (null == t) return t;
                var i = 0;
                if (Ce(t)) nt(t, function(t) {
                    var r = typeof t;
                    "undefined" !== r && "boolean" !== r || (t = null), e.call(s, t, i++);
                }); else {
                    var r = typeof t;
                    "undefined" !== r && "boolean" !== r || (t = null), e.call(s, t, i);
                }
            }
            function Pt(t, e, s) {
                if (null == t) return t;
                var i = [], r = {};
                Mt(t, function(t, n) {
                    var o = {};
                    o.child = e.call(s, t, n) || t, o.isEqual = o.child === t;
                    var a = o.key = At(t, n);
                    r.hasOwnProperty(a) ? r[a] += 1 : r[a] = 0, o.index = r[a], rt(i, o);
                });
                var n = [];
                return i.forEach(function(t) {
                    var e = t.child, s = t.key, i = t.index, o = t.isEqual;
                    if (null != e && "boolean" != typeof e) {
                        if (!gt(e) || null == s) return void rt(n, e);
                        0 !== r[s] && (s += ":" + i), o || (s = Et(e.key || "") + "/" + s), e = kt(e, {
                            key: s
                        }), rt(n, e);
                    }
                }), n;
            }
            function St(t) {
                var e = 0;
                return Mt(t, function() {
                    e++;
                }), e;
            }
            function Tt(t) {
                return Pt(t, st) || [];
            }
            function At(t, e) {
                var s = void 0;
                return s = gt(t) && "string" == typeof t.key ? ".$" + t.key : "." + e.toString(36);
            }
            function Et(t) {
                return ("" + t).replace(Le, "//");
            }
            function Ot(t, e) {
                t.forEach(function(t) {
                    t && (Ce(t.mixins) && Ot(t.mixins, e), e(t));
                });
            }
            function Dt(t, e) {
                for (var s in e) if (e.hasOwnProperty(s)) {
                    var i = e[s];
                    if ("getInitialState" !== s) {
                        var r = t[s];
                        tt(r) && tt(i) ? t[s] = it(r, i) : t[s] = i;
                    } else rt(t.$getInitialStates, i);
                }
            }
            function Rt(t, e) {
                e.propTypes && (t.propTypes = t.propTypes || {}, ot(t.propTypes, e.propTypes)), 
                e.contextTypes && (t.contextTypes = t.contextTypes || {}, ot(t.contextTypes, e.contextTypes)), 
                ot(t, e.statics), tt(e.getDefaultProps) && (t.defaultProps = t.defaultProps || {}, 
                ot(t.defaultProps, e.getDefaultProps()));
            }
            function Lt(t, e) {
                for (var s in e) e.hasOwnProperty(s) && tt(e[s]) && (t[s] = e[s].bind(t));
            }
            function _t() {
                var t = this, e = {}, s = this.setState;
                return this.setState = Ne, this.$getInitialStates.forEach(function(s) {
                    tt(s) && ot(e, s.call(t));
                }), this.setState = s, e;
            }
            function Nt(t) {
                function e(s, i) {
                    N.call(this, s, i), this.constructor = e, t.autobind !== !1 && Lt(this, e.prototype), 
                    this.state = this.getInitialState() || this.state;
                }
                if (!tt(t.render)) throw new Error("createClass: spec.render is not function");
                var s = t.mixins || [], i = s.concat(t);
                t.mixins = null, e.displayName = t.displayName;
                var r = e.prototype = new Ne();
                return r.$getInitialStates = [], Ot(i, function(t) {
                    Dt(r, t), Rt(e, t);
                }), r.getInitialState = _t, t.mixins = s, e;
            }
            function Bt(t, e) {
                if (t === e) return !0;
                if ("object" != typeof t || null === t || "object" != typeof e || null === e) return !1;
                var s = Object.keys(t), i = Object.keys(e);
                if (s.length !== i.length) return !1;
                for (var r = 0; r < s.length; r++) if (!e.hasOwnProperty(s[r]) || t[s[r]] !== e[s[r]]) return !1;
                return !0;
            }
            function Ut(t, e) {
                N.call(this, t, e);
            }
            function Ft(t, e) {
                return !Bt(this.props, t) || !Bt(this.state, e);
            }
            var It = "dangerouslySetInnerHTML", Vt = "http://www.w3.org/2000/svg", qt = "liteid", Ht = 2, zt = 3, Kt = 4, Wt = 5, jt = 1, $t = 9, Yt = 11, Xt = null, Gt = [], Zt = [], Jt = {
                updaters: [],
                isPending: !1,
                add: function(t) {
                    rt(this.updaters, t);
                },
                batchUpdate: function() {
                    if (!this.isPending) {
                        this.isPending = !0;
                        for (var t = this.updaters, e = void 0; e = t.pop(); ) e.updateComponent();
                        this.isPending = !1;
                    }
                }
            };
            _.prototype = {
                emitUpdate: function(t, e) {
                    this.nextProps = t, this.nextContext = e, t || !Jt.isPending ? this.updateComponent() : Jt.add(this);
                },
                updateComponent: function() {
                    var t = this.instance, e = this.pendingStates, s = this.nextProps, i = this.nextContext;
                    (s || e.length > 0) && (s = s || t.props, i = i || t.context, this.nextProps = this.nextContext = null, 
                    B(t, s, this.getState(), i, this.clearCallbacks));
                },
                addState: function(t) {
                    t && (rt(this.pendingStates, t), this.isPending || this.emitUpdate());
                },
                replaceState: function(t) {
                    var e = this.pendingStates;
                    e.pop(), rt(e, [ t ]);
                },
                getState: function() {
                    var t = this.instance, e = this.pendingStates, s = t.state, i = t.props;
                    return e.length && (s = ot({}, s), e.forEach(function(e) {
                        var r = Ce(e);
                        r && (e = e[0]), tt(e) && (e = e.call(t, s, i)), r ? s = ot({}, e) : ot(s, e);
                    }), e.length = 0), s;
                },
                clearCallbacks: function() {
                    var t = this.pendingCallbacks, e = this.instance;
                    t.length > 0 && (this.pendingCallbacks = [], t.forEach(function(t) {
                        return t.call(e);
                    }));
                },
                addCallback: function(t) {
                    tt(t) && rt(this.pendingCallbacks, t);
                }
            };
            var Qt = {};
            N.prototype = {
                constructor: N,
                isReactComponent: Qt,
                forceUpdate: function(t) {
                    var e = this.$updater, s = this.$cache, i = this.props, r = this.state, n = this.context;
                    if (s.isMounted) {
                        if (e.isPending) return void e.addState(r);
                        var o = s.props || i, a = s.state || r, h = s.context || n, c = s.parentContext, l = s.node, p = s.vnode;
                        s.props = s.state = s.context = null, e.isPending = !0, this.componentWillUpdate && this.componentWillUpdate(o, a, h), 
                        this.state = a, this.props = o, this.context = h;
                        var u = C(this), d = A(p, u, l, M(this, c));
                        d !== l && (d.cache = d.cache || {}, R(d.cache, l.cache, d)), s.vnode = u, s.node = d, 
                        T(), this.componentDidUpdate && this.componentDidUpdate(i, r, n), t && t.call(this), 
                        e.isPending = !1, e.emitUpdate();
                    }
                },
                setState: function(t, e) {
                    var s = this.$updater;
                    s.addCallback(e), s.addState(t);
                },
                replaceState: function(t, e) {
                    var s = this.$updater;
                    s.addCallback(e), s.replaceState(t);
                },
                getDOMNode: function() {
                    var t = this.$cache.node;
                    return t && "#comment" === t.nodeName ? null : t;
                },
                isMounted: function() {
                    return this.$cache.isMounted;
                }
            };
            var te = {
                onmousemove: 1,
                ontouchmove: 1,
                onmouseleave: 1,
                onmouseenter: 1,
                onload: 1,
                onunload: 1,
                onscroll: 1,
                onfocus: 1,
                onblur: 1,
                onrowexit: 1,
                onbeforeunload: 1,
                onstop: 1,
                ondragdrop: 1,
                ondragenter: 1,
                ondragexit: 1,
                ondraggesture: 1,
                ondragover: 1,
                oncontextmenu: 1,
                onerror: 1,
                onabort: 1,
                oncanplay: 1,
                oncanplaythrough: 1,
                ondurationchange: 1,
                onemptied: 1,
                onended: 1,
                onloadeddata: 1,
                onloadedmetadata: 1,
                onloadstart: 1,
                onencrypted: 1,
                onpause: 1,
                onplay: 1,
                onplaying: 1,
                onprogress: 1,
                onratechange: 1,
                onseeking: 1,
                onseeked: 1,
                onstalled: 1,
                onsuspend: 1,
                ontimeupdate: 1,
                onvolumechange: 1,
                onwaiting: 1
            }, ee = "ontouchstart" in document, se = function() {}, ie = "onclick", re = {}, ne = {
                animationIterationCount: 1,
                borderImageOutset: 1,
                borderImageSlice: 1,
                borderImageWidth: 1,
                boxFlex: 1,
                boxFlexGroup: 1,
                boxOrdinalGroup: 1,
                columnCount: 1,
                flex: 1,
                flexGrow: 1,
                flexPositive: 1,
                flexShrink: 1,
                flexNegative: 1,
                flexOrder: 1,
                gridRow: 1,
                gridColumn: 1,
                fontWeight: 1,
                lineClamp: 1,
                lineHeight: 1,
                opacity: 1,
                order: 1,
                orphans: 1,
                tabSize: 1,
                widows: 1,
                zIndex: 1,
                zoom: 1,
                fillOpacity: 1,
                floodOpacity: 1,
                stopOpacity: 1,
                strokeDasharray: 1,
                strokeDashoffset: 1,
                strokeMiterlimit: 1,
                strokeOpacity: 1,
                strokeWidth: 1
            }, oe = [ "Webkit", "ms", "Moz", "O" ];
            Object.keys(ne).forEach(function(t) {
                oe.forEach(function(e) {
                    ne[$(e, t)] = 1;
                });
            });
            var ae = /^-?\d+(\.\d+)?$/, he = ":A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD", ce = he + "\\-.0-9\\uB7\\u0300-\\u036F\\u203F-\\u2040", le = new RegExp("^[" + he + "][" + ce + "]*$"), pe = RegExp.prototype.test.bind(new RegExp("^(data|aria)-[" + ce + "]*$")), ue = {}, de = 1, fe = 4, ye = 8, me = 24, ve = 32, be = {
                props: {
                    accept: 0,
                    acceptCharset: 0,
                    accessKey: 0,
                    action: 0,
                    allowFullScreen: fe,
                    allowTransparency: 0,
                    alt: 0,
                    async: fe,
                    autoComplete: 0,
                    autoFocus: fe,
                    autoPlay: fe,
                    capture: fe,
                    cellPadding: 0,
                    cellSpacing: 0,
                    charSet: 0,
                    challenge: 0,
                    checked: de | fe,
                    cite: 0,
                    classID: 0,
                    className: 0,
                    cols: me,
                    colSpan: 0,
                    content: 0,
                    contentEditable: 0,
                    contextMenu: 0,
                    controls: fe,
                    coords: 0,
                    crossOrigin: 0,
                    data: 0,
                    dateTime: 0,
                    default: fe,
                    defaultValue: de,
                    defaultChecked: de | fe,
                    defer: fe,
                    dir: 0,
                    disabled: fe,
                    download: ve,
                    draggable: 0,
                    encType: 0,
                    form: 0,
                    formAction: 0,
                    formEncType: 0,
                    formMethod: 0,
                    formNoValidate: fe,
                    formTarget: 0,
                    frameBorder: 0,
                    headers: 0,
                    height: 0,
                    hidden: fe,
                    high: 0,
                    href: 0,
                    hrefLang: 0,
                    htmlFor: 0,
                    httpEquiv: 0,
                    icon: 0,
                    id: 0,
                    inputMode: 0,
                    integrity: 0,
                    is: 0,
                    keyParams: 0,
                    keyType: 0,
                    kind: 0,
                    label: 0,
                    lang: 0,
                    list: 0,
                    loop: fe,
                    low: 0,
                    manifest: 0,
                    marginHeight: 0,
                    marginWidth: 0,
                    max: 0,
                    maxLength: 0,
                    media: 0,
                    mediaGroup: 0,
                    method: 0,
                    min: 0,
                    minLength: 0,
                    multiple: de | fe,
                    muted: de | fe,
                    name: 0,
                    nonce: 0,
                    noValidate: fe,
                    open: fe,
                    optimum: 0,
                    pattern: 0,
                    placeholder: 0,
                    poster: 0,
                    preload: 0,
                    profile: 0,
                    radioGroup: 0,
                    readOnly: fe,
                    referrerPolicy: 0,
                    rel: 0,
                    required: fe,
                    reversed: fe,
                    role: 0,
                    rows: me,
                    rowSpan: ye,
                    sandbox: 0,
                    scope: 0,
                    scoped: fe,
                    scrolling: 0,
                    seamless: fe,
                    selected: de | fe,
                    shape: 0,
                    size: me,
                    sizes: 0,
                    span: me,
                    spellCheck: 0,
                    src: 0,
                    srcDoc: 0,
                    srcLang: 0,
                    srcSet: 0,
                    start: ye,
                    step: 0,
                    style: 0,
                    summary: 0,
                    tabIndex: 0,
                    target: 0,
                    title: 0,
                    type: 0,
                    useMap: 0,
                    value: de,
                    width: 0,
                    wmode: 0,
                    wrap: 0,
                    about: 0,
                    datatype: 0,
                    inlist: 0,
                    prefix: 0,
                    property: 0,
                    playsInline: fe,
                    resource: 0,
                    typeof: 0,
                    vocab: 0,
                    autoCapitalize: 0,
                    autoCorrect: 0,
                    autoSave: 0,
                    color: 0,
                    itemProp: 0,
                    itemScope: fe,
                    itemType: 0,
                    itemID: 0,
                    itemRef: 0,
                    results: 0,
                    security: 0,
                    unselectable: 0
                },
                attrNS: {},
                domAttrs: {
                    acceptCharset: "accept-charset",
                    className: "class",
                    htmlFor: "for",
                    httpEquiv: "http-equiv"
                },
                domProps: {}
            }, xe = "http://www.w3.org/1999/xlink", ge = "http://www.w3.org/XML/1998/namespace", ke = {
                accentHeight: "accent-height",
                accumulate: 0,
                additive: 0,
                alignmentBaseline: "alignment-baseline",
                allowReorder: "allowReorder",
                alphabetic: 0,
                amplitude: 0,
                arabicForm: "arabic-form",
                ascent: 0,
                attributeName: "attributeName",
                attributeType: "attributeType",
                autoReverse: "autoReverse",
                azimuth: 0,
                baseFrequency: "baseFrequency",
                baseProfile: "baseProfile",
                baselineShift: "baseline-shift",
                bbox: 0,
                begin: 0,
                bias: 0,
                by: 0,
                calcMode: "calcMode",
                capHeight: "cap-height",
                clip: 0,
                clipPath: "clip-path",
                clipRule: "clip-rule",
                clipPathUnits: "clipPathUnits",
                colorInterpolation: "color-interpolation",
                colorInterpolationFilters: "color-interpolation-filters",
                colorProfile: "color-profile",
                colorRendering: "color-rendering",
                contentScriptType: "contentScriptType",
                contentStyleType: "contentStyleType",
                cursor: 0,
                cx: 0,
                cy: 0,
                d: 0,
                decelerate: 0,
                descent: 0,
                diffuseConstant: "diffuseConstant",
                direction: 0,
                display: 0,
                divisor: 0,
                dominantBaseline: "dominant-baseline",
                dur: 0,
                dx: 0,
                dy: 0,
                edgeMode: "edgeMode",
                elevation: 0,
                enableBackground: "enable-background",
                end: 0,
                exponent: 0,
                externalResourcesRequired: "externalResourcesRequired",
                fill: 0,
                fillOpacity: "fill-opacity",
                fillRule: "fill-rule",
                filter: 0,
                filterRes: "filterRes",
                filterUnits: "filterUnits",
                floodColor: "flood-color",
                floodOpacity: "flood-opacity",
                focusable: 0,
                fontFamily: "font-family",
                fontSize: "font-size",
                fontSizeAdjust: "font-size-adjust",
                fontStretch: "font-stretch",
                fontStyle: "font-style",
                fontVariant: "font-variant",
                fontWeight: "font-weight",
                format: 0,
                from: 0,
                fx: 0,
                fy: 0,
                g1: 0,
                g2: 0,
                glyphName: "glyph-name",
                glyphOrientationHorizontal: "glyph-orientation-horizontal",
                glyphOrientationVertical: "glyph-orientation-vertical",
                glyphRef: "glyphRef",
                gradientTransform: "gradientTransform",
                gradientUnits: "gradientUnits",
                hanging: 0,
                horizAdvX: "horiz-adv-x",
                horizOriginX: "horiz-origin-x",
                ideographic: 0,
                imageRendering: "image-rendering",
                in: 0,
                in2: 0,
                intercept: 0,
                k: 0,
                k1: 0,
                k2: 0,
                k3: 0,
                k4: 0,
                kernelMatrix: "kernelMatrix",
                kernelUnitLength: "kernelUnitLength",
                kerning: 0,
                keyPoints: "keyPoints",
                keySplines: "keySplines",
                keyTimes: "keyTimes",
                lengthAdjust: "lengthAdjust",
                letterSpacing: "letter-spacing",
                lightingColor: "lighting-color",
                limitingConeAngle: "limitingConeAngle",
                local: 0,
                markerEnd: "marker-end",
                markerMid: "marker-mid",
                markerStart: "marker-start",
                markerHeight: "markerHeight",
                markerUnits: "markerUnits",
                markerWidth: "markerWidth",
                mask: 0,
                maskContentUnits: "maskContentUnits",
                maskUnits: "maskUnits",
                mathematical: 0,
                mode: 0,
                numOctaves: "numOctaves",
                offset: 0,
                opacity: 0,
                operator: 0,
                order: 0,
                orient: 0,
                orientation: 0,
                origin: 0,
                overflow: 0,
                overlinePosition: "overline-position",
                overlineThickness: "overline-thickness",
                paintOrder: "paint-order",
                panose1: "panose-1",
                pathLength: "pathLength",
                patternContentUnits: "patternContentUnits",
                patternTransform: "patternTransform",
                patternUnits: "patternUnits",
                pointerEvents: "pointer-events",
                points: 0,
                pointsAtX: "pointsAtX",
                pointsAtY: "pointsAtY",
                pointsAtZ: "pointsAtZ",
                preserveAlpha: "preserveAlpha",
                preserveAspectRatio: "preserveAspectRatio",
                primitiveUnits: "primitiveUnits",
                r: 0,
                radius: 0,
                refX: "refX",
                refY: "refY",
                renderingIntent: "rendering-intent",
                repeatCount: "repeatCount",
                repeatDur: "repeatDur",
                requiredExtensions: "requiredExtensions",
                requiredFeatures: "requiredFeatures",
                restart: 0,
                result: 0,
                rotate: 0,
                rx: 0,
                ry: 0,
                scale: 0,
                seed: 0,
                shapeRendering: "shape-rendering",
                slope: 0,
                spacing: 0,
                specularConstant: "specularConstant",
                specularExponent: "specularExponent",
                speed: 0,
                spreadMethod: "spreadMethod",
                startOffset: "startOffset",
                stdDeviation: "stdDeviation",
                stemh: 0,
                stemv: 0,
                stitchTiles: "stitchTiles",
                stopColor: "stop-color",
                stopOpacity: "stop-opacity",
                strikethroughPosition: "strikethrough-position",
                strikethroughThickness: "strikethrough-thickness",
                string: 0,
                stroke: 0,
                strokeDasharray: "stroke-dasharray",
                strokeDashoffset: "stroke-dashoffset",
                strokeLinecap: "stroke-linecap",
                strokeLinejoin: "stroke-linejoin",
                strokeMiterlimit: "stroke-miterlimit",
                strokeOpacity: "stroke-opacity",
                strokeWidth: "stroke-width",
                surfaceScale: "surfaceScale",
                systemLanguage: "systemLanguage",
                tableValues: "tableValues",
                targetX: "targetX",
                targetY: "targetY",
                textAnchor: "text-anchor",
                textDecoration: "text-decoration",
                textRendering: "text-rendering",
                textLength: "textLength",
                to: 0,
                transform: 0,
                u1: 0,
                u2: 0,
                underlinePosition: "underline-position",
                underlineThickness: "underline-thickness",
                unicode: 0,
                unicodeBidi: "unicode-bidi",
                unicodeRange: "unicode-range",
                unitsPerEm: "units-per-em",
                vAlphabetic: "v-alphabetic",
                vHanging: "v-hanging",
                vIdeographic: "v-ideographic",
                vMathematical: "v-mathematical",
                values: 0,
                vectorEffect: "vector-effect",
                version: 0,
                vertAdvY: "vert-adv-y",
                vertOriginX: "vert-origin-x",
                vertOriginY: "vert-origin-y",
                viewBox: "viewBox",
                viewTarget: "viewTarget",
                visibility: 0,
                widths: 0,
                wordSpacing: "word-spacing",
                writingMode: "writing-mode",
                x: 0,
                xHeight: "x-height",
                x1: 0,
                x2: 0,
                xChannelSelector: "xChannelSelector",
                xlinkActuate: "xlink:actuate",
                xlinkArcrole: "xlink:arcrole",
                xlinkHref: "xlink:href",
                xlinkRole: "xlink:role",
                xlinkShow: "xlink:show",
                xlinkTitle: "xlink:title",
                xlinkType: "xlink:type",
                xmlBase: "xml:base",
                xmlns: 0,
                xmlnsXlink: "xmlns:xlink",
                xmlLang: "xml:lang",
                xmlSpace: "xml:space",
                y: 0,
                y1: 0,
                y2: 0,
                yChannelSelector: "yChannelSelector",
                z: 0,
                zoomAndPan: "zoomAndPan"
            }, we = {
                props: {},
                attrNS: {
                    xlinkActuate: xe,
                    xlinkArcrole: xe,
                    xlinkHref: xe,
                    xlinkRole: xe,
                    xlinkShow: xe,
                    xlinkTitle: xe,
                    xlinkType: xe,
                    xmlBase: ge,
                    xmlLang: ge,
                    xmlSpace: ge
                },
                domAttrs: {},
                domProps: {}
            };
            Object.keys(ke).map(function(t) {
                we.props[t] = 0, ke[t] && (we.domAttrs[t] = ke[t]);
            }), X(be), X(we);
            var Ce = Array.isArray, Me = 0, Pe = /^on/i;
            Object.freeze || (Object.freeze = st);
            var Se = {}, Te = {}, Ae = Object.freeze({
                render: yt,
                unstable_renderSubtreeIntoContainer: mt,
                unmountComponentAtNode: vt,
                findDOMNode: bt
            }), Ee = "a|abbr|address|area|article|aside|audio|b|base|bdi|bdo|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|data|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|main|map|mark|menu|menuitem|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|source|span|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|track|u|ul|var|video|wbr|circle|clipPath|defs|ellipse|g|image|line|linearGradient|mask|path|pattern|polygon|polyline|radialGradient|rect|stop|svg|text|tspan", Oe = {};
            Ee.split("|").forEach(function(t) {
                Oe[t] = wt(t);
            });
            var De = function t() {
                return t;
            };
            De.isRequired = De;
            var Re = {
                array: De,
                bool: De,
                func: De,
                number: De,
                object: De,
                string: De,
                any: De,
                arrayOf: De,
                element: De,
                instanceOf: De,
                node: De,
                objectOf: De,
                oneOf: De,
                oneOfType: De,
                shape: De
            }, Le = /\/(?!\/)/g, _e = Object.freeze({
                only: Ct,
                forEach: Mt,
                map: Pt,
                count: St,
                toArray: Tt
            }), Ne = function() {};
            Ne.prototype = N.prototype, Ut.prototype = Object.create(N.prototype), Ut.prototype.constructor = Ut, 
            Ut.prototype.isPureReactComponent = !0, Ut.prototype.shouldComponentUpdate = Ft;
            var Be = ot({
                version: "0.15.1",
                cloneElement: kt,
                isValidElement: gt,
                createElement: xt,
                createFactory: wt,
                Component: N,
                PureComponent: Ut,
                createClass: Nt,
                Children: _e,
                PropTypes: Re,
                DOM: Oe
            }, Ae);
            return Be.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = Ae, Be;
        });
    },
    179: function(t, e, s) {
        "use strict";
        !function() {
            var t = s(2), e = t.gettext, i = s(136), r = s(136), n = s(180);
            t.translate();
            var o = i.createClass({
                displayName: "UserTerminal",
                createChannel: function(e) {
                    return t.channel({
                        payload: "stream",
                        spawn: [ e.shell || "/bin/bash", "-i" ],
                        environ: [ "TERM=xterm-256color", "PATH=/sbin:/bin:/usr/sbin:/usr/bin" ],
                        directory: e.home || "/",
                        pty: !0
                    });
                },
                getInitialState: function() {
                    return {
                        title: "Terminal"
                    };
                },
                componentWillMount: function() {
                    t.user().done(function(t) {
                        this.setState({
                            user: t,
                            channel: this.createChannel(t)
                        });
                    }.bind(this));
                },
                onTitleChanged: function(t) {
                    this.setState({
                        title: t
                    });
                },
                onResetClick: function(t) {
                    0 === t.button && (this.state.channel && this.state.channel.close(), this.state.user && this.setState({
                        channel: this.createChannel(this.state.user)
                    }), this.refs.resetButton.blur(), this.refs.terminal.focus());
                },
                render: function() {
                    var t;
                    return t = this.state.channel ? i.createElement(n.Terminal, {
                        ref: "terminal",
                        channel: this.state.channel,
                        onTitleChanged: this.onTitleChanged
                    }) : i.createElement("span", null, "Loading..."), i.createElement("div", {
                        className: "console-ct-container"
                    }, i.createElement("div", {
                        className: "panel-heading"
                    }, i.createElement("tt", {
                        className: "terminal-title"
                    }, this.state.title), i.createElement("button", {
                        ref: "resetButton",
                        className: "btn btn-default pull-right",
                        onClick: this.onResetClick
                    }, e("Reset"))), i.createElement("div", {
                        className: "panel-body"
                    }, t));
                }
            });
            r.render(i.createElement(o, null), document.getElementById("terminal")), document.body.removeAttribute("hidden");
        }();
    },
    180: function(t, e, s) {
        "use strict";
        !function() {
            var e = s(136), i = s(136), r = s(181);
            s(182);
            var n = e.createClass({
                displayName: "Terminal",
                propTypes: {
                    cols: e.PropTypes.number,
                    rows: e.PropTypes.number,
                    channel: e.PropTypes.object.isRequired,
                    onTitleChanged: e.PropTypes.func
                },
                componentWillMount: function() {
                    var t = new r({
                        cols: this.props.cols || 80,
                        rows: this.props.rows || 25,
                        screenKeys: !0
                    });
                    t.on("data", function(t) {
                        this.props.channel.valid && this.props.channel.send(t);
                    }.bind(this)), this.props.onTitleChanged && t.on("title", this.props.onTitleChanged), 
                    this.setState({
                        terminal: t
                    });
                },
                componentDidMount: function() {
                    this.state.terminal.open(this.refs.terminal), this.connectChannel(), this.props.rows || (window.addEventListener("resize", this.onWindowResize), 
                    this.onWindowResize());
                },
                componentWillUpdate: function(t, e) {
                    e.cols === this.state.cols && e.rows === this.state.rows || (this.state.terminal.resize(e.cols, e.rows), 
                    this.props.channel.control({
                        window: {
                            rows: e.rows,
                            cols: e.cols
                        }
                    })), t.channel !== this.props.channel && (this.state.terminal.reset(), this.disconnectChannel());
                },
                componentDidUpdate: function(t) {
                    t.channel !== this.props.channel && (this.connectChannel(), this.props.channel.control({
                        window: {
                            rows: this.state.rows,
                            cols: this.state.cols
                        }
                    }));
                },
                render: function() {
                    return e.createElement("div", {
                        ref: "terminal",
                        key: this.state.terminal,
                        className: "console-ct",
                        onFocusIn: this.onFocusIn,
                        onFocusOut: this.onFocusOut
                    });
                },
                componentWillUnmount: function() {
                    this.disconnectChannel(), this.state.terminal.destroy(), window.removeEventListener("resize", this.onWindowResize);
                },
                onChannelMessage: function(t, e) {
                    this.state.terminal.write(e);
                },
                onChannelClose: function(t, e) {
                    var s = this.state.terminal;
                    s.write("[31m" + (e.problem || "disconnected") + "[m\r\n"), s.cursorHidden = !0, 
                    s.refresh(s.y, s.y);
                },
                connectChannel: function() {
                    var t = this.props.channel;
                    t && t.valid && (t.addEventListener("message", this.onChannelMessage.bind(this)), 
                    t.addEventListener("close", this.onChannelClose.bind(this)));
                },
                disconnectChannel: function() {
                    this.props.channel && (this.props.channel.removeEventListener("message", this.onChannelMessage), 
                    this.props.channel.removeEventListener("close", this.onChannelClose));
                },
                focus: function() {
                    this.state.terminal && this.state.terminal.focus();
                },
                onWindowResize: function() {
                    var t = 22, e = i.findDOMNode(this), s = this.refs.terminal.querySelector(".terminal"), r = document.createElement("span");
                    r.textContent = "M", r.style.position = "absolute", s.appendChild(r);
                    var n = r.getBoundingClientRect();
                    s.removeChild(r), this.setState({
                        rows: Math.floor((e.parentElement.clientHeight - t) / n.height),
                        cols: Math.floor((e.parentElement.clientWidth - t) / n.width)
                    });
                },
                onBeforeUnload: function(t) {
                    return t.preventDefault(), t.returnValue = "", "";
                },
                onFocusIn: function() {
                    window.addEventListener("beforeunload", this.onBeforeUnload);
                },
                onFocusOut: function() {
                    window.removeEventListener("beforeunload", this.onBeforeUnload);
                }
            });
            t.exports = {
                Terminal: n
            };
        }();
    },
    181: function(t, e, s) {
        var i, r;
        (function(s) {
            (function() {
                "use strict";
                function s() {
                    this._events = this._events || {};
                }
                function n() {
                    s.call(this);
                }
                function o(t) {
                    var e = this;
                    if (!(this instanceof o)) return new o(arguments[0], arguments[1], arguments[2]);
                    n.call(this), "number" == typeof t && (t = {
                        cols: arguments[0],
                        rows: arguments[1],
                        handler: arguments[2]
                    }), t = t || {}, y(m(o.defaults), function(s) {
                        null == t[s] && (t[s] = o.options[s], o[s] !== o.defaults[s] && (t[s] = o[s])), 
                        e[s] = t[s];
                    }), 8 === t.colors.length ? t.colors = t.colors.concat(o._colors.slice(8)) : 16 === t.colors.length ? t.colors = t.colors.concat(o._colors.slice(16)) : 10 === t.colors.length ? t.colors = t.colors.slice(0, -2).concat(o._colors.slice(8, -2), t.colors.slice(-2)) : 18 === t.colors.length && (t.colors = t.colors.slice(0, -2).concat(o._colors.slice(16, -2), t.colors.slice(-2))), 
                    this.colors = t.colors, this.options = t, this.parent = t.body || t.parent || (v ? v.getElementsByTagName("body")[0] : null), 
                    this.cols = t.cols || t.geometry[0], this.rows = t.rows || t.geometry[1], this.setRawMode, 
                    this.isTTY = !0, this.isRaw = !0, this.columns = this.cols, this.rows = this.rows, 
                    t.handler && this.on("data", t.handler), this.ybase = 0, this.ydisp = 0, this.x = 0, 
                    this.y = 0, this.cursorHidden = !1, this.convertEol, this.state = 0, this.queue = "", 
                    this.scrollTop = 0, this.scrollBottom = this.rows - 1, this.applicationKeypad = !1, 
                    this.applicationCursor = !1, this.originMode = !1, this.insertMode = !1, this.wraparoundMode = !1, 
                    this.normal = null, this.prefixMode = !1, this.selectMode = !1, this.visualMode = !1, 
                    this.searchMode = !1, this.searchDown, this.entry = "", this.entryPrefix = "Search: ", 
                    this._real, this._selected, this._textarea, this.charset = null, this.gcharset = null, 
                    this.glevel = 0, this.charsets = [ null ], this.decLocator, this.x10Mouse, this.vt200Mouse, 
                    this.vt300Mouse, this.normalMouse, this.mouseEvents, this.sendFocus, this.utfMouse, 
                    this.sgrMouse, this.urxvtMouse, this.element, this.children, this.refreshStart, 
                    this.refreshEnd, this.savedX, this.savedY, this.savedCols, this.readable = !0, this.writable = !0, 
                    this.defAttr = 131840, this.curAttr = this.defAttr, this.params = [], this.currentParam = 0, 
                    this.prefix = "", this.postfix = "", this.lines = [];
                    for (var s = this.rows; s--; ) this.lines.push(this.blankLine());
                    this.tabs, this.setupStops();
                }
                function a(t, e, s, i) {
                    t.addEventListener(e, s, i || !1);
                }
                function h(t, e, s, i) {
                    t.removeEventListener(e, s, i || !1);
                }
                function c(t) {
                    return t.preventDefault && t.preventDefault(), t.returnValue = !1, t.stopPropagation && t.stopPropagation(), 
                    t.cancelBubble = !0, !1;
                }
                function l(t, e) {
                    function s() {
                        this.constructor = t;
                    }
                    s.prototype = e.prototype, t.prototype = new s();
                }
                function p(t) {
                    var e = t.getElementsByTagName("body")[0], s = t.createElement("div");
                    s.className = "terminal";
                    var i = t.createElement("div"), r = t.createElement("span");
                    r.innerHTML = "hello world", i.appendChild(r), s.appendChild(i), e.appendChild(s);
                    var n = r.scrollWidth;
                    r.style.fontWeight = "bold";
                    var o = r.scrollWidth;
                    return e.removeChild(s), n !== o;
                }
                function u(t, e) {
                    for (var s = t.length; s--; ) if (t[s] === e) return s;
                    return -1;
                }
                function d(t) {
                    return !(t <= "＀") && (t >= "！" && t <= "ﾾ" || t >= "ￂ" && t <= "ￇ" || t >= "ￊ" && t <= "ￏ" || t >= "ￒ" && t <= "ￗ" || t >= "ￚ" && t <= "ￜ" || t >= "￠" && t <= "￦" || t >= "￨" && t <= "￮");
                }
                function f(t, e, s) {
                    var i = t << 16 | e << 8 | s;
                    if (null != f._cache[i]) return f._cache[i];
                    for (var r, n, a, h, c, l = 1 / 0, p = -1, u = 0; u < o.vcolors.length; u++) {
                        if (r = o.vcolors[u], n = r[0], a = r[1], h = r[2], c = f.distance(t, e, s, n, a, h), 
                        0 === c) {
                            p = u;
                            break;
                        }
                        c < l && (l = c, p = u);
                    }
                    return f._cache[i] = p;
                }
                function y(t, e, s) {
                    if (t.forEach) return t.forEach(e, s);
                    for (var i = 0; i < t.length; i++) e.call(s, t[i], i, t);
                }
                function m(t) {
                    if (Object.keys) return Object.keys(t);
                    var e, s = [];
                    for (e in t) Object.prototype.hasOwnProperty.call(t, e) && s.push(e);
                    return s;
                }
                var v = this.document;
                s.prototype.addListener = function(t, e) {
                    this._events[t] = this._events[t] || [], this._events[t].push(e);
                }, s.prototype.on = s.prototype.addListener, s.prototype.removeListener = function(t, e) {
                    if (this._events[t]) for (var s = this._events[t], i = s.length; i--; ) if (s[i] === e || s[i].listener === e) return void s.splice(i, 1);
                }, s.prototype.off = s.prototype.removeListener, s.prototype.removeAllListeners = function(t) {
                    this._events[t] && delete this._events[t];
                }, s.prototype.once = function(t, e) {
                    function s() {
                        var i = Array.prototype.slice.call(arguments);
                        return this.removeListener(t, s), e.apply(this, i);
                    }
                    return s.listener = e, this.on(t, s);
                }, s.prototype.emit = function(t) {
                    if (this._events[t]) for (var e = Array.prototype.slice.call(arguments, 1), s = this._events[t], i = s.length, r = 0; r < i; r++) s[r].apply(this, e);
                }, s.prototype.listeners = function(t) {
                    return this._events[t] = this._events[t] || [];
                }, l(n, s), n.prototype.pipe = function(t, e) {
                    function s() {
                        o.removeListener("data", i), o.removeListener("error", r), o.removeListener("end", n), 
                        t.removeListener("error", r), t.removeListener("close", s);
                    }
                    var i, r, n, o = this;
                    return o.on("data", i = function(e) {
                        t.write(e);
                    }), o.on("error", r = function(t) {
                        if (s(), !this.listeners("error").length) throw t;
                    }), o.on("end", n = function() {
                        t.end(), s();
                    }), t.on("error", r), t.on("close", s), t.emit("pipe", o), t;
                };
                var b = 0, x = 1, g = 2, k = 3, w = 4, C = 5, M = 6, P = {
                    type: "udk"
                };
                l(o, n), o.tangoColors = [ "#2e3436", "#cc0000", "#4e9a06", "#c4a000", "#3465a4", "#75507b", "#06989a", "#d3d7cf", "#555753", "#ef2929", "#8ae234", "#fce94f", "#729fcf", "#ad7fa8", "#34e2e2", "#eeeeec" ], 
                o.xtermColors = [ "#000000", "#cd0000", "#00cd00", "#cdcd00", "#0000ee", "#cd00cd", "#00cdcd", "#e5e5e5", "#7f7f7f", "#ff0000", "#00ff00", "#ffff00", "#5c5cff", "#ff00ff", "#00ffff", "#ffffff" ], 
                o.colors = function() {
                    function t(t, s, r) {
                        i.push("#" + e(t) + e(s) + e(r));
                    }
                    function e(t) {
                        return t = t.toString(16), t.length < 2 ? "0" + t : t;
                    }
                    var s, i = o.tangoColors.slice(), r = [ 0, 95, 135, 175, 215, 255 ];
                    for (s = 0; s < 216; s++) t(r[s / 36 % 6 | 0], r[s / 6 % 6 | 0], r[s % 6]);
                    for (s = 0; s < 24; s++) r = 8 + 10 * s, t(r, r, r);
                    return i;
                }(), o.colors[256] = "#000000", o.colors[257] = "#f0f0f0", o._colors = o.colors.slice(), 
                o.vcolors = function() {
                    for (var t, e = [], s = o.colors, i = 0; i < 256; i++) t = parseInt(s[i].substring(1), 16), 
                    e.push([ t >> 16 & 255, t >> 8 & 255, 255 & t ]);
                    return e;
                }(), o.defaults = {
                    colors: o.colors,
                    convertEol: !1,
                    termName: "xterm",
                    geometry: [ 80, 24 ],
                    visualBell: !1,
                    popOnBell: !1,
                    scrollback: 1e3,
                    screenKeys: !1,
                    debug: !1
                }, o.options = {}, y(m(o.defaults), function(t) {
                    o[t] = o.defaults[t], o.options[t] = o.defaults[t];
                }), o.focus = null, o.prototype.focus = function() {
                    o.focus !== this && (o.focus && o.focus.blur(), this.sendFocus && this.send("[I"), 
                    o.focus = this);
                }, o.prototype.blur = function() {
                    o.focus === this && (this.sendFocus && this.send("[O"), o.focus = null);
                }, o.prototype.initGlobal = function() {
                    var t = this.document;
                    o._boundDocs = o._boundDocs || [], ~u(o._boundDocs, t) || (o._boundDocs.push(t), 
                    o.bindPaste(t), o.bindKeys(t), o.bindCopy(t), this.isMobile && this.fixMobile(t));
                }, o.bindPaste = function(t) {
                    var e = t.defaultView;
                    a(e, "paste", function(t) {
                        var e = o.focus;
                        if (e) return t.clipboardData ? e.send(t.clipboardData.getData("text/plain")) : e.context.clipboardData && e.send(e.context.clipboardData.getData("Text")), 
                        e.element.contentEditable = "inherit", c(t);
                    });
                }, o.bindKeys = function(t) {
                    a(t, "keydown", function(t) {
                        if (o.focus) {
                            var e = t.target || t.srcElement;
                            if (e) return e === o.focus.element || e === o.focus.context || e === o.focus.document || e === o.focus.body || e === o._textarea || e === o.focus.parent ? o.focus.keyDown(t) : void 0;
                        }
                    }, !0), a(t, "keypress", function(t) {
                        if (o.focus) {
                            var e = t.target || t.srcElement;
                            if (e) return e === o.focus.element || e === o.focus.context || e === o.focus.document || e === o.focus.body || e === o._textarea || e === o.focus.parent ? o.focus.keyPress(t) : void 0;
                        }
                    }, !0), a(t, "mousedown", function(t) {
                        if (o.focus) {
                            var e = t.target || t.srcElement;
                            if (e) {
                                do if (e === o.focus.element) return; while (e = e.parentNode);
                                o.focus.blur();
                            }
                        }
                    });
                }, o.bindCopy = function(t) {
                    var e = t.defaultView;
                    a(e, "copy", function(t) {
                        var e = o.focus;
                        if (e && e._selected) {
                            var s = e.getCopyTextarea(), i = e.grabText(e._selected.x1, e._selected.x2, e._selected.y1, e._selected.y2);
                            e.emit("copy", i), s.focus(), s.textContent = i, s.value = i, s.setSelectionRange(0, i.length), 
                            T(function() {
                                e.element.focus(), e.focus();
                            }, 1);
                        }
                    });
                }, o.prototype.fixMobile = function(t) {
                    var e = this, s = t.createElement("textarea");
                    s.style.position = "absolute", s.style.left = "-32000px", s.style.top = "-32000px", 
                    s.style.width = "0px", s.style.height = "0px", s.style.opacity = "0", s.style.backgroundColor = "transparent", 
                    s.style.borderStyle = "none", s.style.outlineStyle = "none", s.autocapitalize = "none", 
                    s.autocorrect = "off", t.getElementsByTagName("body")[0].appendChild(s), o._textarea = s, 
                    T(function() {
                        s.focus();
                    }, 1e3), this.isAndroid && a(s, "change", function() {
                        var t = s.textContent || s.value;
                        s.value = "", s.textContent = "", e.send(t + "\r");
                    });
                }, o.prototype.open = function(t) {
                    var e, s = this, i = 0;
                    if (this.parent = t || this.parent, !this.parent) throw new Error("Terminal requires a parent element.");
                    for (this.context = this.parent.ownerDocument.defaultView, this.document = this.parent.ownerDocument, 
                    this.body = this.document.getElementsByTagName("body")[0], this.context.navigator && this.context.navigator.userAgent && (this.isMac = !!~this.context.navigator.userAgent.indexOf("Mac"), 
                    this.isIpad = !!~this.context.navigator.userAgent.indexOf("iPad"), this.isIphone = !!~this.context.navigator.userAgent.indexOf("iPhone"), 
                    this.isAndroid = !!~this.context.navigator.userAgent.indexOf("Android"), this.isMobile = this.isIpad || this.isIphone || this.isAndroid, 
                    this.isMSIE = !!~this.context.navigator.userAgent.indexOf("MSIE")), this.element = this.document.createElement("div"), 
                    this.element.className = "terminal", this.element.style.outline = "none", this.element.setAttribute("tabindex", 0), 
                    this.element.setAttribute("spellcheck", "false"), this.element.style.backgroundColor = this.colors[256], 
                    this.element.style.color = this.colors[257], this.children = []; i < this.rows; i++) e = this.document.createElement("div"), 
                    this.element.appendChild(e), this.children.push(e);
                    this.parent.appendChild(this.element), this.refresh(0, this.rows - 1), "useEvents" in this.options && !this.options.useEvents || this.initGlobal(), 
                    "useFocus" in this.options && !this.options.useFocus || (this.focus(), a(this.element, "focus", function() {
                        s.focus(), s.isMobile && o._textarea.focus();
                    }), a(this.element, "mousedown", function() {
                        s.focus();
                    }), a(this.element, "mousedown", function(t) {
                        var e = null != t.button ? +t.button : null != t.which ? t.which - 1 : null;
                        s.isMSIE && (e = 1 === e ? 0 : 4 === e ? 1 : e), 2 === e && (s.element.contentEditable = "true", 
                        T(function() {
                            s.element.contentEditable = "inherit";
                        }, 1));
                    }, !0)), "useMouse" in this.options && !this.options.useMouse || this.bindMouse(), 
                    "useFocus" in this.options && !this.options.useFocus || T(function() {
                        s.element.focus();
                    }, 100), null == o.brokenBold && (o.brokenBold = p(this.document)), this.emit("open");
                }, o.prototype.setRawMode = function(t) {
                    this.isRaw = !!t;
                }, o.prototype.bindMouse = function() {
                    function t(t) {
                        var e, s;
                        if (e = r(t), s = n(t)) switch (i(e, s), t.type) {
                          case "mousedown":
                            p = e;
                            break;

                          case "mouseup":
                            p = 32;
                            break;

                          case u:                        }
                    }
                    function e(t) {
                        var e, s = p;
                        e = n(t), e && (s += 32, i(s, e));
                    }
                    function s(t, e) {
                        if (l.utfMouse) {
                            if (2047 === e) return t.push(0);
                            e < 127 ? t.push(e) : (e > 2047 && (e = 2047), t.push(192 | e >> 6), t.push(128 | 63 & e));
                        } else {
                            if (255 === e) return t.push(0);
                            e > 127 && (e = 127), t.push(e);
                        }
                    }
                    function i(t, e) {
                        if (l.vt300Mouse) {
                            t &= 3, e.x -= 32, e.y -= 32;
                            var i = "[24";
                            if (0 === t) i += "1"; else if (1 === t) i += "3"; else if (2 === t) i += "5"; else {
                                if (3 === t) return;
                                i += "0";
                            }
                            return i += "~[" + e.x + "," + e.y + "]\r", void l.send(i);
                        }
                        if (l.decLocator) return t &= 3, e.x -= 32, e.y -= 32, 0 === t ? t = 2 : 1 === t ? t = 4 : 2 === t ? t = 6 : 3 === t && (t = 3), 
                        void l.send("[" + t + ";" + (3 === t ? 4 : 0) + ";" + e.y + ";" + e.x + ";" + (e.page || 0) + "&w");
                        if (l.urxvtMouse) return e.x -= 32, e.y -= 32, e.x++, e.y++, void l.send("[" + t + ";" + e.x + ";" + e.y + "M");
                        if (l.sgrMouse) return e.x -= 32, e.y -= 32, void l.send("[<" + (3 === (3 & t) ? t & -4 : t) + ";" + e.x + ";" + e.y + (3 === (3 & t) ? "m" : "M"));
                        var i = [];
                        s(i, t), s(i, e.x), s(i, e.y), l.send("[M" + S.fromCharCode.apply(S, i));
                    }
                    function r(t) {
                        var e, s, i, r, n;
                        switch (t.type) {
                          case "mousedown":
                            e = null != t.button ? +t.button : null != t.which ? t.which - 1 : null, l.isMSIE && (e = 1 === e ? 0 : 4 === e ? 1 : e);
                            break;

                          case "mouseup":
                            e = 3;
                            break;

                          case "DOMMouseScroll":
                            e = t.detail < 0 ? 64 : 65;
                            break;

                          case "mousewheel":
                            e = t.wheelDeltaY > 0 ? 64 : 65;
                        }
                        return s = t.shiftKey ? 4 : 0, i = t.metaKey ? 8 : 0, r = t.ctrlKey ? 16 : 0, n = s | i | r, 
                        l.vt200Mouse ? n &= r : l.normalMouse || (n = 0), e = 32 + (n << 2) + e;
                    }
                    function n(t) {
                        var e, s, i, r, n;
                        if (null != t.pageX) {
                            for (e = t.pageX, s = t.pageY, n = l.element; n && n !== l.document.documentElement; ) e -= n.offsetLeft, 
                            s -= n.offsetTop, n = "offsetParent" in n ? n.offsetParent : n.parentNode;
                            return i = l.element.clientWidth, r = l.element.clientHeight, e = Math.round(e / i * l.cols), 
                            s = Math.round(s / r * l.rows), e < 0 && (e = 0), e > l.cols && (e = l.cols), s < 0 && (s = 0), 
                            s > l.rows && (s = l.rows), e += 32, s += 32, {
                                x: e,
                                y: s,
                                type: t.type === u ? "mousewheel" : t.type
                            };
                        }
                    }
                    var o = this.element, l = this, p = 32, u = "onmousewheel" in this.context ? "mousewheel" : "DOMMouseScroll";
                    a(o, "mousedown", function(s) {
                        l.mouseEvents && (t(s), l.focus(), l.normalMouse && a(l.document, "mousemove", e), 
                        l.x10Mouse || a(l.document, "mouseup", function s(i) {
                            return t(i), l.normalMouse && h(l.document, "mousemove", e), h(l.document, "mouseup", s), 
                            c(i);
                        }));
                    }), a(o, u, function(e) {
                        if (l.mouseEvents && !(l.x10Mouse || l.vt300Mouse || l.decLocator)) return t(e), 
                        c(e);
                    }), a(o, u, function(t) {
                        if (!l.mouseEvents && !l.applicationKeypad) return "DOMMouseScroll" === t.type ? l.scrollDisp(t.detail < 0 ? -5 : 5) : l.scrollDisp(t.wheelDeltaY > 0 ? -5 : 5), 
                        c(t);
                    });
                }, o.prototype.close = o.prototype.destroySoon = o.prototype.destroy = function() {
                    this.destroyed || (this._blink && (clearInterval(this._blink), delete this._blink), 
                    this.readable = !1, this.writable = !1, this.destroyed = !0, this._events = {}, 
                    this.handler = function() {}, this.write = function() {}, this.end = function() {}, 
                    this.element.parentNode && this.element.parentNode.removeChild(this.element), this.emit("end"), 
                    this.emit("close"), this.emit("finish"), this.emit("destroy"));
                }, o.prototype.refresh = function(t, e) {
                    var s, i, r, n, a, h, c, l, p, u, f, y, m;
                    for (c = this.cols, i = t, e >= this.lines.length && (this.log("`end` is too large. Most likely a bad CSR."), 
                    e = this.lines.length - 1); i <= e; i++) {
                        for (m = i + this.ydisp, n = this.lines[m], a = "", s = i !== this.y || this.ydisp !== this.ybase && !this.selectMode || this.cursorHidden ? -1 : this.x, 
                        p = this.defAttr, r = 0; r < c; r++) {
                            switch (l = n[r][0], h = n[r][1], r === s && (l = -1), l !== p && (p !== this.defAttr && (a += "</span>"), 
                            l !== this.defAttr && (l === -1 ? a += '<span class="reverse-video terminal-cursor">' : (a += '<span class="', 
                            u = 511 & l, f = l >> 9 & 511, y = l >> 18, 1 & y && (o.brokenBold || (a += "term-bold "), 
                            f < 8 && (f += 8)), 2 & y && (a += "term-underline "), 4 & y && (a += "term-blink "), 
                            8 & y && (u = l >> 9 & 511, f = 511 & l, 1 & y && f < 8 && (f += 8)), 16 & y && (a += "term-hidden "), 
                            256 !== u && (a += "term-bg-color-" + u + " "), 257 !== f && (a += "term-fg-color-" + f + " "), 
                            a += '">'))), h) {
                              case "&":
                                a += "&amp;";
                                break;

                              case "<":
                                a += "&lt;";
                                break;

                              case ">":
                                a += "&gt;";
                                break;

                              default:
                                h <= " " ? a += "&nbsp;" : (d(h) && r++, a += h);
                            }
                            p = l;
                        }
                        p !== this.defAttr && (a += "</span>"), this.children[i].innerHTML = a;
                    }
                }, o.prototype.showCursor = function() {
                    this.cursorHidden = !1, this.refresh(this.y, this.y);
                }, o.prototype.scroll = function() {
                    var t;
                    ++this.ybase === this.scrollback && (this.ybase = this.ybase / 2 | 0, this.lines = this.lines.slice(-(this.ybase + this.rows) + 1)), 
                    this.ydisp = this.ybase, t = this.ybase + this.rows - 1, t -= this.rows - 1 - this.scrollBottom, 
                    t === this.lines.length ? this.lines.push(this.blankLine()) : this.lines.splice(t, 0, this.blankLine()), 
                    0 !== this.scrollTop && (0 !== this.ybase && (this.ybase--, this.ydisp = this.ybase), 
                    this.lines.splice(this.ybase + this.scrollTop, 1)), this.updateRange(this.scrollTop), 
                    this.updateRange(this.scrollBottom);
                }, o.prototype.scrollDisp = function(t) {
                    this.ydisp += t, this.ydisp > this.ybase ? this.ydisp = this.ybase : this.ydisp < 0 && (this.ydisp = 0), 
                    this.refresh(0, this.rows - 1);
                }, o.prototype.write = function(t) {
                    var e, s, i, r = t.length, n = 0;
                    for (this.refreshStart = this.y, this.refreshEnd = this.y, this.ybase !== this.ydisp && (this.ydisp = this.ybase, 
                    this.maxRange()); n < r; n++, this.lch = i) switch (i = t[n], this.state) {
                      case b:
                        switch (i) {
                          case "":
                            this.bell();
                            break;

                          case "\n":
                          case "\v":
                          case "\f":
                            this.convertEol && (this.x = 0), this.y++, this.y > this.scrollBottom && (this.y--, 
                            this.scroll());
                            break;

                          case "\r":
                            this.x = 0;
                            break;

                          case "\b":
                            this.x > 0 && this.x--;
                            break;

                          case "\t":
                            this.x = this.nextStop();
                            break;

                          case "":
                            this.setgLevel(1);
                            break;

                          case "":
                            this.setgLevel(0);
                            break;

                          case "":
                            this.state = x;
                            break;

                          default:
                            if (i >= " " && (this.charset && this.charset[i] && (i = this.charset[i]), this.x >= this.cols && (this.x = 0, 
                            this.y++, this.y > this.scrollBottom && (this.y--, this.scroll())), this.lines[this.y + this.ybase][this.x] = [ this.curAttr, i ], 
                            this.x++, this.updateRange(this.y), d(i))) {
                                if (e = this.y + this.ybase, this.cols < 2 || this.x >= this.cols) {
                                    this.lines[e][this.x - 1] = [ this.curAttr, " " ];
                                    break;
                                }
                                this.lines[e][this.x] = [ this.curAttr, " " ], this.x++;
                            }
                        }
                        break;

                      case x:
                        switch (i) {
                          case "[":
                            this.params = [], this.currentParam = 0, this.state = g;
                            break;

                          case "]":
                            this.params = [], this.currentParam = 0, this.state = k;
                            break;

                          case "P":
                            this.params = [], this.prefix = "", this.currentParam = "", this.state = C;
                            break;

                          case "_":
                            this.state = M;
                            break;

                          case "^":
                            this.state = M;
                            break;

                          case "c":
                            this.reset();
                            break;

                          case "E":
                            this.x = 0;

                          case "D":
                            this.index();
                            break;

                          case "M":
                            this.reverseIndex();
                            break;

                          case "%":
                            this.setgLevel(0), this.setgCharset(0, o.charsets.US), this.state = b, n++;
                            break;

                          case "(":
                          case ")":
                          case "*":
                          case "+":
                          case "-":
                          case ".":
                            switch (i) {
                              case "(":
                                this.gcharset = 0;
                                break;

                              case ")":
                                this.gcharset = 1;
                                break;

                              case "*":
                                this.gcharset = 2;
                                break;

                              case "+":
                                this.gcharset = 3;
                                break;

                              case "-":
                                this.gcharset = 1;
                                break;

                              case ".":
                                this.gcharset = 2;
                            }
                            this.state = w;
                            break;

                          case "/":
                            this.gcharset = 3, this.state = w, n--;
                            break;

                          case "N":
                            break;

                          case "O":
                            break;

                          case "n":
                            this.setgLevel(2);
                            break;

                          case "o":
                            this.setgLevel(3);
                            break;

                          case "|":
                            this.setgLevel(3);
                            break;

                          case "}":
                            this.setgLevel(2);
                            break;

                          case "~":
                            this.setgLevel(1);
                            break;

                          case "7":
                            this.saveCursor(), this.state = b;
                            break;

                          case "8":
                            this.restoreCursor(), this.state = b;
                            break;

                          case "#":
                            this.state = b, n++;
                            break;

                          case "H":
                            this.tabSet();
                            break;

                          case "=":
                            this.log("Serial port requested application keypad."), this.applicationKeypad = !0, 
                            this.state = b;
                            break;

                          case ">":
                            this.log("Switching back to normal keypad."), this.applicationKeypad = !1, this.state = b;
                            break;

                          default:
                            this.state = b, this.error("Unknown ESC control: %s.", i);
                        }
                        break;

                      case w:
                        switch (i) {
                          case "0":
                            s = o.charsets.SCLD;
                            break;

                          case "A":
                            s = o.charsets.UK;
                            break;

                          case "B":
                            s = o.charsets.US;
                            break;

                          case "4":
                            s = o.charsets.Dutch;
                            break;

                          case "C":
                          case "5":
                            s = o.charsets.Finnish;
                            break;

                          case "R":
                            s = o.charsets.French;
                            break;

                          case "Q":
                            s = o.charsets.FrenchCanadian;
                            break;

                          case "K":
                            s = o.charsets.German;
                            break;

                          case "Y":
                            s = o.charsets.Italian;
                            break;

                          case "E":
                          case "6":
                            s = o.charsets.NorwegianDanish;
                            break;

                          case "Z":
                            s = o.charsets.Spanish;
                            break;

                          case "H":
                          case "7":
                            s = o.charsets.Swedish;
                            break;

                          case "=":
                            s = o.charsets.Swiss;
                            break;

                          case "/":
                            s = o.charsets.ISOLatin, n++;
                            break;

                          default:
                            s = o.charsets.US;
                        }
                        this.setgCharset(this.gcharset, s), this.gcharset = null, this.state = b;
                        break;

                      case k:
                        if ("" === this.lch && "\\" === i || "" === i) {
                            switch ("" === this.lch && ("string" == typeof this.currentParam ? this.currentParam = this.currentParam.slice(0, -1) : "number" == typeof this.currentParam && (this.currentParam = (this.currentParam - ("".charCodeAt(0) - 48)) / 10)), 
                            this.params.push(this.currentParam), this.params[0]) {
                              case 0:
                              case 1:
                              case 2:
                                this.params[1] && (this.title = this.params[1], this.handleTitle(this.title));
                                break;

                              case 3:
                                break;

                              case 4:
                              case 5:
                                break;

                              case 10:
                              case 11:
                              case 12:
                              case 13:
                              case 14:
                              case 15:
                              case 16:
                              case 17:
                              case 18:
                              case 19:
                                break;

                              case 46:
                                break;

                              case 50:
                                break;

                              case 51:
                                break;

                              case 52:
                                break;

                              case 104:
                              case 105:
                              case 110:
                              case 111:
                              case 112:
                              case 113:
                              case 114:
                              case 115:
                              case 116:
                              case 117:
                              case 118:                            }
                            this.params = [], this.currentParam = 0, this.state = b;
                        } else this.params.length ? this.currentParam += i : i >= "0" && i <= "9" ? this.currentParam = 10 * this.currentParam + i.charCodeAt(0) - 48 : ";" === i && (this.params.push(this.currentParam), 
                        this.currentParam = "");
                        break;

                      case g:
                        if ("?" === i || ">" === i || "!" === i) {
                            this.prefix = i;
                            break;
                        }
                        if (i >= "0" && i <= "9") {
                            this.currentParam = 10 * this.currentParam + i.charCodeAt(0) - 48;
                            break;
                        }
                        if ("$" === i || '"' === i || " " === i || "'" === i) {
                            this.postfix = i;
                            break;
                        }
                        if (this.params.push(this.currentParam), this.currentParam = 0, ";" === i) break;
                        switch (this.state = b, i) {
                          case "A":
                            this.cursorUp(this.params);
                            break;

                          case "B":
                            this.cursorDown(this.params);
                            break;

                          case "C":
                            this.cursorForward(this.params);
                            break;

                          case "D":
                            this.cursorBackward(this.params);
                            break;

                          case "H":
                            this.cursorPos(this.params);
                            break;

                          case "J":
                            this.eraseInDisplay(this.params);
                            break;

                          case "K":
                            this.eraseInLine(this.params);
                            break;

                          case "m":
                            this.prefix || this.charAttributes(this.params);
                            break;

                          case "n":
                            this.prefix || this.deviceStatus(this.params);
                            break;

                          case "@":
                            this.insertChars(this.params);
                            break;

                          case "E":
                            this.cursorNextLine(this.params);
                            break;

                          case "F":
                            this.cursorPrecedingLine(this.params);
                            break;

                          case "G":
                            this.cursorCharAbsolute(this.params);
                            break;

                          case "L":
                            this.insertLines(this.params);
                            break;

                          case "M":
                            this.deleteLines(this.params);
                            break;

                          case "P":
                            this.deleteChars(this.params);
                            break;

                          case "X":
                            this.eraseChars(this.params);
                            break;

                          case "`":
                            this.charPosAbsolute(this.params);
                            break;

                          case "a":
                            this.HPositionRelative(this.params);
                            break;

                          case "c":
                            this.sendDeviceAttributes(this.params);
                            break;

                          case "d":
                            this.linePosAbsolute(this.params);
                            break;

                          case "e":
                            this.VPositionRelative(this.params);
                            break;

                          case "f":
                            this.HVPosition(this.params);
                            break;

                          case "h":
                            this.setMode(this.params);
                            break;

                          case "l":
                            this.resetMode(this.params);
                            break;

                          case "r":
                            this.setScrollRegion(this.params);
                            break;

                          case "s":
                            this.saveCursor(this.params);
                            break;

                          case "u":
                            this.restoreCursor(this.params);
                            break;

                          case "I":
                            this.cursorForwardTab(this.params);
                            break;

                          case "S":
                            this.scrollUp(this.params);
                            break;

                          case "T":
                            this.params.length < 2 && !this.prefix && this.scrollDown(this.params);
                            break;

                          case "Z":
                            this.cursorBackwardTab(this.params);
                            break;

                          case "b":
                            this.repeatPrecedingCharacter(this.params);
                            break;

                          case "g":
                            this.tabClear(this.params);
                            break;

                          case "p":
                            switch (this.prefix) {
                              case "!":
                                this.softReset(this.params);
                            }
                            break;

                          default:
                            this.error("Unknown CSI code: %s.", i);
                        }
                        this.prefix = "", this.postfix = "";
                        break;

                      case C:
                        if ("" === this.lch && "\\" === i || "" === i) {
                            if ("tmux;" === this.prefix && "" === i) {
                                this.currentParam += i;
                                continue;
                            }
                            "" === this.lch && ("string" == typeof this.currentParam ? this.currentParam = this.currentParam.slice(0, -1) : "number" == typeof this.currentParam && (this.currentParam = (this.currentParam - ("".charCodeAt(0) - 48)) / 10)), 
                            this.params.push(this.currentParam);
                            var a = this.params[this.params.length - 1];
                            switch (this.prefix) {
                              case P:
                                this.emit("udk", {
                                    clearAll: 0 === this.params[0],
                                    eraseBelow: 1 === this.params[0],
                                    lockKeys: 0 === this.params[1],
                                    dontLockKeys: 1 === this.params[1],
                                    keyList: (this.params[2] + "").split(";").map(function(t) {
                                        return t = t.split("/"), {
                                            keyCode: t[0],
                                            hexKeyValue: t[1]
                                        };
                                    })
                                });
                                break;

                              case "$q":
                                var h = 0;
                                switch (a) {
                                  case '"q':
                                    a = '0"q', h = 1;
                                    break;

                                  case '"p':
                                    a = '61;0"p', h = 1;
                                    break;

                                  case "r":
                                    a = "" + (this.scrollTop + 1) + ";" + (this.scrollBottom + 1) + "r", h = 1;
                                    break;

                                  case "m":
                                    h = 0;
                                    break;

                                  default:
                                    this.error("Unknown DCS Pt: %s.", a), h = 0;
                                }
                                this.send("P" + h + "$r" + a + "\\");
                                break;

                              case "+p":
                                this.emit("set terminfo", {
                                    name: this.params[0]
                                });
                                break;

                              case "+q":
                                var h = !1;
                                this.send("P" + +h + "+r" + a + "\\");
                                break;

                              case "tmux;":
                                this.emit("passthrough", a);
                                break;

                              default:
                                this.error("Unknown DCS prefix: %s.", a);
                            }
                            this.currentParam = 0, this.prefix = "", this.state = b;
                        } else this.currentParam += i, this.prefix || (/^\d*;\d*\|/.test(this.currentParam) ? (this.prefix = P, 
                        this.params = this.currentParam.split(/[;|]/).map(function(t) {
                            return t.length ? +t : 0;
                        }).slice(0, -1), this.currentParam = "") : (/^[$+][a-zA-Z]/.test(this.currentParam) || /^\w+;\x1b/.test(this.currentParam)) && (this.prefix = this.currentParam, 
                        this.currentParam = ""));
                        break;

                      case M:
                        ("" === this.lch && "\\" === i || "" === i) && (this.state = b);
                    }
                    return this.updateRange(this.y), this.refresh(this.refreshStart, this.refreshEnd), 
                    !0;
                }, o.prototype.writeln = function(t) {
                    return this.write(t + "\r\n");
                }, o.prototype.end = function(t) {
                    var e = !0;
                    return t && (e = this.write(t)), this.destroySoon(), e;
                }, o.prototype.resume = function() {}, o.prototype.pause = function() {}, o.prototype.keyDown = function(t) {
                    var e, s = this;
                    switch (t.keyCode) {
                      case 8:
                        if (t.altKey) {
                            e = "";
                            break;
                        }
                        if (t.shiftKey) {
                            e = "\b";
                            break;
                        }
                        e = "";
                        break;

                      case 9:
                        if (t.shiftKey) {
                            e = "[Z";
                            break;
                        }
                        e = "\t";
                        break;

                      case 13:
                        e = "\r";
                        break;

                      case 27:
                        e = "";
                        break;

                      case 32:
                        e = " ";
                        break;

                      case 37:
                        if (this.applicationCursor) {
                            e = "OD";
                            break;
                        }
                        if (t.ctrlKey) {
                            e = "[5D";
                            break;
                        }
                        e = "[D";
                        break;

                      case 39:
                        if (this.applicationCursor) {
                            e = "OC";
                            break;
                        }
                        if (t.ctrlKey) {
                            e = "[5C";
                            break;
                        }
                        e = "[C";
                        break;

                      case 38:
                        if (this.applicationCursor) {
                            e = "OA";
                            break;
                        }
                        if (t.ctrlKey) return this.scrollDisp(-1), c(t);
                        e = "[A";
                        break;

                      case 40:
                        if (this.applicationCursor) {
                            e = "OB";
                            break;
                        }
                        if (t.ctrlKey) return this.scrollDisp(1), c(t);
                        e = "[B";
                        break;

                      case 46:
                        e = "[3~";
                        break;

                      case 45:
                        e = "[2~";
                        break;

                      case 36:
                        if (this.applicationKeypad) {
                            e = "OH";
                            break;
                        }
                        e = "OH";
                        break;

                      case 35:
                        if (this.applicationKeypad) {
                            e = "OF";
                            break;
                        }
                        e = "OF";
                        break;

                      case 33:
                        if (t.shiftKey) return this.scrollDisp(-(this.rows - 1)), c(t);
                        e = "[5~";
                        break;

                      case 34:
                        if (t.shiftKey) return this.scrollDisp(this.rows - 1), c(t);
                        e = "[6~";
                        break;

                      case 112:
                        e = "OP";
                        break;

                      case 113:
                        e = "OQ";
                        break;

                      case 114:
                        e = "OR";
                        break;

                      case 115:
                        e = "OS";
                        break;

                      case 116:
                        e = "[15~";
                        break;

                      case 117:
                        e = "[17~";
                        break;

                      case 118:
                        e = "[18~";
                        break;

                      case 119:
                        e = "[19~";
                        break;

                      case 120:
                        e = "[20~";
                        break;

                      case 121:
                        e = "[21~";
                        break;

                      case 122:
                        e = "[23~";
                        break;

                      case 123:
                        e = "[24~";
                        break;

                      default:
                        if (t.ctrlKey) if (t.keyCode >= 65 && t.keyCode <= 90) {
                            if (this.screenKeys && !this.prefixMode && !this.selectMode && 65 === t.keyCode) return this.enterPrefix(), 
                            c(t);
                            if (this.prefixMode && 86 === t.keyCode) return void this.leavePrefix();
                            if ((this.prefixMode || this.selectMode) && 67 === t.keyCode) return void (this.visualMode && T(function() {
                                s.leaveVisual();
                            }, 1));
                            e = S.fromCharCode(t.keyCode - 64);
                        } else 32 === t.keyCode ? e = S.fromCharCode(0) : t.keyCode >= 51 && t.keyCode <= 55 ? e = S.fromCharCode(t.keyCode - 51 + 27) : 56 === t.keyCode ? e = S.fromCharCode(127) : 219 === t.keyCode ? e = S.fromCharCode(27) : 221 === t.keyCode && (e = S.fromCharCode(29)); else t.altKey && (t.keyCode >= 65 && t.keyCode <= 90 ? e = "" + S.fromCharCode(t.keyCode + 32) : 192 === t.keyCode ? e = "`" : t.keyCode >= 48 && t.keyCode <= 57 && (e = "" + (t.keyCode - 48)));
                    }
                    return !e || (this.prefixMode ? (this.leavePrefix(), c(t)) : this.selectMode ? (this.keySelect(t, e), 
                    c(t)) : (this.emit("keydown", t), this.emit("key", e, t), this.handler(e), c(t)));
                }, o.prototype.setgLevel = function(t) {
                    this.glevel = t, this.charset = this.charsets[t];
                }, o.prototype.setgCharset = function(t, e) {
                    this.charsets[t] = e, this.glevel === t && (this.charset = e);
                }, o.prototype.keyPress = function(t) {
                    var e;
                    if (c(t), t.charCode) e = t.charCode; else if (null == t.which) e = t.keyCode; else {
                        if (0 === t.which || 0 === t.charCode) return !1;
                        e = t.which;
                    }
                    return !(!e || t.ctrlKey || t.altKey || t.metaKey) && (e = S.fromCharCode(e), this.prefixMode ? (this.leavePrefix(), 
                    this.keyPrefix(t, e), !1) : this.selectMode ? (this.keySelect(t, e), !1) : (this.emit("keypress", e, t), 
                    this.emit("key", e, t), this.handler(e), !1));
                }, o.prototype.send = function(t) {
                    var e = this;
                    this.queue || T(function() {
                        e.handler(e.queue), e.queue = "";
                    }, 1), this.queue += t;
                }, o.prototype.bell = function() {
                    if (this.emit("bell"), this.visualBell) {
                        var t = this;
                        this.element.style.borderColor = "white", T(function() {
                            t.element.style.borderColor = "";
                        }, 10), this.popOnBell && this.focus();
                    }
                }, o.prototype.log = function() {
                    if (this.debug && this.context.console && this.context.console.log) {
                        var t = Array.prototype.slice.call(arguments);
                        this.context.console.log.apply(this.context.console, t);
                    }
                }, o.prototype.error = function() {
                    if (this.debug && this.context.console && this.context.console.error) {
                        var t = Array.prototype.slice.call(arguments);
                        this.context.console.error.apply(this.context.console, t);
                    }
                }, o.prototype.resize = function(t, e) {
                    var s, i, r, n, o;
                    if (t < 1 && (t = 1), e < 1 && (e = 1), n = this.cols, n < t) for (o = [ this.defAttr, " " ], 
                    r = this.lines.length; r--; ) for (;this.lines[r].length < t; ) this.lines[r].push(o); else if (n > t) for (r = this.lines.length; r--; ) for (;this.lines[r].length > t; ) this.lines[r].pop();
                    if (this.setupStops(n), this.cols = t, this.columns = t, n = this.rows, n < e) for (i = this.element; n++ < e; ) this.lines.length < e + this.ybase && this.lines.push(this.blankLine()), 
                    this.children.length < e && (s = this.document.createElement("div"), i.appendChild(s), 
                    this.children.push(s)); else if (n > e) for (;n-- > e; ) if (this.lines.length > e + this.ybase && this.lines.pop(), 
                    this.children.length > e) {
                        if (i = this.children.pop(), !i) continue;
                        i.parentNode.removeChild(i);
                    }
                    this.rows = e, this.y >= e && (this.y = e - 1), this.x >= t && (this.x = t - 1), 
                    this.scrollTop = 0, this.scrollBottom = e - 1, this.refresh(0, this.rows - 1), this.normal = null, 
                    this.emit("resize");
                }, o.prototype.updateRange = function(t) {
                    t < this.refreshStart && (this.refreshStart = t), t > this.refreshEnd && (this.refreshEnd = t);
                }, o.prototype.maxRange = function() {
                    this.refreshStart = 0, this.refreshEnd = this.rows - 1;
                }, o.prototype.setupStops = function(t) {
                    for (null != t ? this.tabs[t] || (t = this.prevStop(t)) : (this.tabs = {}, t = 0); t < this.cols; t += 8) this.tabs[t] = !0;
                }, o.prototype.prevStop = function(t) {
                    for (null == t && (t = this.x); !this.tabs[--t] && t > 0; ) ;
                    return t >= this.cols ? this.cols - 1 : t < 0 ? 0 : t;
                }, o.prototype.nextStop = function(t) {
                    for (null == t && (t = this.x); !this.tabs[++t] && t < this.cols; ) ;
                    return t >= this.cols ? this.cols - 1 : t < 0 ? 0 : t;
                }, o.prototype.eraseAttr = function() {
                    return this.defAttr & -512 | 511 & this.curAttr;
                }, o.prototype.eraseRight = function(t, e) {
                    for (var s = this.lines[this.ybase + e], i = [ this.eraseAttr(), " " ]; t < this.cols; t++) s[t] = i;
                    this.updateRange(e);
                }, o.prototype.eraseLeft = function(t, e) {
                    var s = this.lines[this.ybase + e], i = [ this.eraseAttr(), " " ];
                    for (t++; t--; ) s[t] = i;
                    this.updateRange(e);
                }, o.prototype.eraseLine = function(t) {
                    this.eraseRight(0, t);
                }, o.prototype.blankLine = function(t) {
                    for (var e = t ? this.eraseAttr() : this.defAttr, s = [ e, " " ], i = [], r = 0; r < this.cols; r++) i[r] = s;
                    return i;
                }, o.prototype.ch = function(t) {
                    return t ? [ this.eraseAttr(), " " ] : [ this.defAttr, " " ];
                }, o.prototype.is = function(t) {
                    var e = this.termName;
                    return 0 === (e + "").indexOf(t);
                }, o.prototype.handler = function(t) {
                    this.emit("data", t);
                }, o.prototype.handleTitle = function(t) {
                    this.emit("title", t);
                }, o.prototype.index = function() {
                    this.y++, this.y > this.scrollBottom && (this.y--, this.scroll()), this.state = b;
                }, o.prototype.reverseIndex = function() {
                    var t;
                    this.y--, this.y < this.scrollTop && (this.y++, this.lines.splice(this.y + this.ybase, 0, this.blankLine(!0)), 
                    t = this.rows - 1 - this.scrollBottom, this.lines.splice(this.rows - 1 + this.ybase - t + 1, 1), 
                    this.updateRange(this.scrollTop), this.updateRange(this.scrollBottom)), this.state = b;
                }, o.prototype.reset = function() {
                    this.options.rows = this.rows, this.options.cols = this.cols, o.call(this, this.options), 
                    this.refresh(0, this.rows - 1);
                }, o.prototype.tabSet = function() {
                    this.tabs[this.x] = !0, this.state = b;
                }, o.prototype.cursorUp = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.y -= e, this.y < 0 && (this.y = 0);
                }, o.prototype.cursorDown = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.y += e, this.y >= this.rows && (this.y = this.rows - 1);
                }, o.prototype.cursorForward = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.x += e, this.x >= this.cols && (this.x = this.cols - 1);
                }, o.prototype.cursorBackward = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.x -= e, this.x < 0 && (this.x = 0);
                }, o.prototype.cursorPos = function(t) {
                    var e, s;
                    e = t[0] - 1, s = t.length >= 2 ? t[1] - 1 : 0, e < 0 ? e = 0 : e >= this.rows && (e = this.rows - 1), 
                    s < 0 ? s = 0 : s >= this.cols && (s = this.cols - 1), this.x = s, this.y = e;
                }, o.prototype.eraseInDisplay = function(t) {
                    var e;
                    switch (t[0]) {
                      case 0:
                        for (this.eraseRight(this.x, this.y), e = this.y + 1; e < this.rows; e++) this.eraseLine(e);
                        break;

                      case 1:
                        for (this.eraseLeft(this.x, this.y), e = this.y; e--; ) this.eraseLine(e);
                        break;

                      case 2:
                        for (e = this.rows; e--; ) this.eraseLine(e);
                        break;

                      case 3:                    }
                }, o.prototype.eraseInLine = function(t) {
                    switch (t[0]) {
                      case 0:
                        this.eraseRight(this.x, this.y);
                        break;

                      case 1:
                        this.eraseLeft(this.x, this.y);
                        break;

                      case 2:
                        this.eraseLine(this.y);
                    }
                }, o.prototype.charAttributes = function(t) {
                    if (1 === t.length && 0 === t[0]) return void (this.curAttr = this.defAttr);
                    for (var e, s = t.length, i = 0, r = this.curAttr >> 18, n = this.curAttr >> 9 & 511, o = 511 & this.curAttr; i < s; i++) e = t[i], 
                    e >= 30 && e <= 37 ? n = e - 30 : e >= 40 && e <= 47 ? o = e - 40 : e >= 90 && e <= 97 ? (e += 8, 
                    n = e - 90) : e >= 100 && e <= 107 ? (e += 8, o = e - 100) : 0 === e ? (r = this.defAttr >> 18, 
                    n = this.defAttr >> 9 & 511, o = 511 & this.defAttr) : 1 === e ? r |= 1 : 4 === e ? r |= 2 : 5 === e ? r |= 4 : 7 === e ? r |= 8 : 8 === e ? r |= 16 : 22 === e ? r &= -2 : 24 === e ? r &= -3 : 25 === e ? r &= -5 : 27 === e ? r &= -9 : 28 === e ? r &= -17 : 39 === e ? n = this.defAttr >> 9 & 511 : 49 === e ? o = 511 & this.defAttr : 38 === e ? 2 === t[i + 1] ? (i += 2, 
                    n = f(255 & t[i], 255 & t[i + 1], 255 & t[i + 2]), n === -1 && (n = 511), i += 2) : 5 === t[i + 1] && (i += 2, 
                    e = 255 & t[i], n = e) : 48 === e ? 2 === t[i + 1] ? (i += 2, o = f(255 & t[i], 255 & t[i + 1], 255 & t[i + 2]), 
                    o === -1 && (o = 511), i += 2) : 5 === t[i + 1] && (i += 2, e = 255 & t[i], o = e) : 100 === e ? (n = this.defAttr >> 9 & 511, 
                    o = 511 & this.defAttr) : this.error("Unknown SGR attribute: %d.", e);
                    this.curAttr = r << 18 | n << 9 | o;
                }, o.prototype.deviceStatus = function(t) {
                    if (this.prefix) {
                        if ("?" === this.prefix) switch (t[0]) {
                          case 6:
                            this.send("[?" + (this.y + 1) + ";" + (this.x + 1) + "R");
                            break;

                          case 15:
                            break;

                          case 25:
                            break;

                          case 26:
                            break;

                          case 53:                        }
                    } else switch (t[0]) {
                      case 5:
                        this.send("[0n");
                        break;

                      case 6:
                        this.send("[" + (this.y + 1) + ";" + (this.x + 1) + "R");
                    }
                }, o.prototype.insertChars = function(t) {
                    var e, s, i, r;
                    for (e = t[0], e < 1 && (e = 1), s = this.y + this.ybase, i = this.x, r = [ this.eraseAttr(), " " ]; e-- && i < this.cols; ) this.lines[s].splice(i++, 0, r), 
                    this.lines[s].pop();
                }, o.prototype.cursorNextLine = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.y += e, this.y >= this.rows && (this.y = this.rows - 1), 
                    this.x = 0;
                }, o.prototype.cursorPrecedingLine = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.y -= e, this.y < 0 && (this.y = 0), this.x = 0;
                }, o.prototype.cursorCharAbsolute = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.x = e - 1;
                }, o.prototype.insertLines = function(t) {
                    var e, s, i;
                    for (e = t[0], e < 1 && (e = 1), s = this.y + this.ybase, i = this.rows - 1 - this.scrollBottom, 
                    i = this.rows - 1 + this.ybase - i + 1; e--; ) this.lines.splice(s, 0, this.blankLine(!0)), 
                    this.lines.splice(i, 1);
                    this.updateRange(this.y), this.updateRange(this.scrollBottom);
                }, o.prototype.deleteLines = function(t) {
                    var e, s, i;
                    for (e = t[0], e < 1 && (e = 1), s = this.y + this.ybase, i = this.rows - 1 - this.scrollBottom, 
                    i = this.rows - 1 + this.ybase - i; e--; ) this.lines.splice(i + 1, 0, this.blankLine(!0)), 
                    this.lines.splice(s, 1);
                    this.updateRange(this.y), this.updateRange(this.scrollBottom);
                }, o.prototype.deleteChars = function(t) {
                    var e, s, i;
                    for (e = t[0], e < 1 && (e = 1), s = this.y + this.ybase, i = [ this.eraseAttr(), " " ]; e--; ) this.lines[s].splice(this.x, 1), 
                    this.lines[s].push(i);
                }, o.prototype.eraseChars = function(t) {
                    var e, s, i, r;
                    for (e = t[0], e < 1 && (e = 1), s = this.y + this.ybase, i = this.x, r = [ this.eraseAttr(), " " ]; e-- && i < this.cols; ) this.lines[s][i++] = r;
                }, o.prototype.charPosAbsolute = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.x = e - 1, this.x >= this.cols && (this.x = this.cols - 1);
                }, o.prototype.HPositionRelative = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.x += e, this.x >= this.cols && (this.x = this.cols - 1);
                }, o.prototype.sendDeviceAttributes = function(t) {
                    t[0] > 0 || (this.prefix ? ">" === this.prefix && (this.is("xterm") ? this.send("[>0;276;0c") : this.is("rxvt-unicode") ? this.send("[>85;95;0c") : this.is("linux") ? this.send(t[0] + "c") : this.is("screen") && this.send("[>83;40003;0c")) : this.is("xterm") || this.is("rxvt-unicode") || this.is("screen") ? this.send("[?1;2c") : this.is("linux") && this.send("[?6c"));
                }, o.prototype.linePosAbsolute = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.y = e - 1, this.y >= this.rows && (this.y = this.rows - 1);
                }, o.prototype.VPositionRelative = function(t) {
                    var e = t[0];
                    e < 1 && (e = 1), this.y += e, this.y >= this.rows && (this.y = this.rows - 1);
                }, o.prototype.HVPosition = function(t) {
                    t[0] < 1 && (t[0] = 1), t[1] < 1 && (t[1] = 1), this.y = t[0] - 1, this.y >= this.rows && (this.y = this.rows - 1), 
                    this.x = t[1] - 1, this.x >= this.cols && (this.x = this.cols - 1);
                }, o.prototype.setMode = function(t) {
                    if ("object" != typeof t) if (this.prefix) {
                        if ("?" === this.prefix) switch (t) {
                          case 1:
                            this.applicationCursor = !0;
                            break;

                          case 2:
                            this.setgCharset(0, o.charsets.US), this.setgCharset(1, o.charsets.US), this.setgCharset(2, o.charsets.US), 
                            this.setgCharset(3, o.charsets.US);
                            break;

                          case 3:
                            this.savedCols = this.cols, this.resize(132, this.rows);
                            break;

                          case 6:
                            this.originMode = !0;
                            break;

                          case 7:
                            this.wraparoundMode = !0;
                            break;

                          case 66:
                            this.log("Serial port requested application keypad."), this.applicationKeypad = !0;
                            break;

                          case 9:
                          case 1e3:
                          case 1002:
                          case 1003:
                            this.x10Mouse = 9 === t, this.vt200Mouse = 1e3 === t, this.normalMouse = t > 1e3, 
                            this.mouseEvents = !0, this.element.style.cursor = "default", this.log("Binding to mouse events.");
                            break;

                          case 1004:
                            this.sendFocus = !0;
                            break;

                          case 1005:
                            this.utfMouse = !0;
                            break;

                          case 1006:
                            this.sgrMouse = !0;
                            break;

                          case 1015:
                            this.urxvtMouse = !0;
                            break;

                          case 25:
                            this.cursorHidden = !1;
                            break;

                          case 1049:
                          case 47:
                          case 1047:
                            if (!this.normal) {
                                var e = {
                                    lines: this.lines,
                                    ybase: this.ybase,
                                    ydisp: this.ydisp,
                                    x: this.x,
                                    y: this.y,
                                    scrollTop: this.scrollTop,
                                    scrollBottom: this.scrollBottom,
                                    tabs: this.tabs
                                };
                                this.reset(), this.normal = e;
                            }
                        }
                    } else switch (t) {
                      case 4:
                        this.insertMode = !0;
                        break;

                      case 20:                    } else for (var s = t.length, i = 0; i < s; i++) this.setMode(t[i]);
                }, o.prototype.resetMode = function(t) {
                    if ("object" != typeof t) if (this.prefix) {
                        if ("?" === this.prefix) switch (t) {
                          case 1:
                            this.applicationCursor = !1;
                            break;

                          case 3:
                            132 === this.cols && this.savedCols && this.resize(this.savedCols, this.rows), delete this.savedCols;
                            break;

                          case 6:
                            this.originMode = !1;
                            break;

                          case 7:
                            this.wraparoundMode = !1;
                            break;

                          case 66:
                            this.log("Switching back to normal keypad."), this.applicationKeypad = !1;
                            break;

                          case 9:
                          case 1e3:
                          case 1002:
                          case 1003:
                            this.x10Mouse = !1, this.vt200Mouse = !1, this.normalMouse = !1, this.mouseEvents = !1, 
                            this.element.style.cursor = "";
                            break;

                          case 1004:
                            this.sendFocus = !1;
                            break;

                          case 1005:
                            this.utfMouse = !1;
                            break;

                          case 1006:
                            this.sgrMouse = !1;
                            break;

                          case 1015:
                            this.urxvtMouse = !1;
                            break;

                          case 25:
                            this.cursorHidden = !0;
                            break;

                          case 1049:
                          case 47:
                          case 1047:
                            this.normal && (this.lines = this.normal.lines, this.ybase = this.normal.ybase, 
                            this.ydisp = this.normal.ydisp, this.x = this.normal.x, this.y = this.normal.y, 
                            this.scrollTop = this.normal.scrollTop, this.scrollBottom = this.normal.scrollBottom, 
                            this.tabs = this.normal.tabs, this.normal = null, this.refresh(0, this.rows - 1));
                        }
                    } else switch (t) {
                      case 4:
                        this.insertMode = !1;
                        break;

                      case 20:                    } else for (var e = t.length, s = 0; s < e; s++) this.resetMode(t[s]);
                }, o.prototype.setScrollRegion = function(t) {
                    this.prefix || (this.scrollTop = (t[0] || 1) - 1, this.scrollBottom = (t[1] || this.rows) - 1, 
                    this.x = 0, this.y = 0);
                }, o.prototype.saveCursor = function(t) {
                    this.savedX = this.x, this.savedY = this.y;
                }, o.prototype.restoreCursor = function(t) {
                    this.x = this.savedX || 0, this.y = this.savedY || 0;
                }, o.prototype.cursorForwardTab = function(t) {
                    for (var e = t[0] || 1; e--; ) this.x = this.nextStop();
                }, o.prototype.scrollUp = function(t) {
                    for (var e = t[0] || 1; e--; ) this.lines.splice(this.ybase + this.scrollTop, 1), 
                    this.lines.splice(this.ybase + this.scrollBottom, 0, this.blankLine());
                    this.updateRange(this.scrollTop), this.updateRange(this.scrollBottom);
                }, o.prototype.scrollDown = function(t) {
                    for (var e = t[0] || 1; e--; ) this.lines.splice(this.ybase + this.scrollBottom, 1), 
                    this.lines.splice(this.ybase + this.scrollTop, 0, this.blankLine());
                    this.updateRange(this.scrollTop), this.updateRange(this.scrollBottom);
                }, o.prototype.initMouseTracking = function(t) {}, o.prototype.resetTitleModes = function(t) {}, 
                o.prototype.cursorBackwardTab = function(t) {
                    for (var e = t[0] || 1; e--; ) this.x = this.prevStop();
                }, o.prototype.repeatPrecedingCharacter = function(t) {
                    for (var e = t[0] || 1, s = this.lines[this.ybase + this.y], i = s[this.x - 1] || [ this.defAttr, " " ]; e--; ) s[this.x++] = i;
                }, o.prototype.tabClear = function(t) {
                    var e = t[0];
                    e <= 0 ? delete this.tabs[this.x] : 3 === e && (this.tabs = {});
                }, o.prototype.mediaCopy = function(t) {}, o.prototype.setResources = function(t) {}, 
                o.prototype.disableModifiers = function(t) {}, o.prototype.setPointerMode = function(t) {}, 
                o.prototype.softReset = function(t) {
                    this.cursorHidden = !1, this.insertMode = !1, this.originMode = !1, this.wraparoundMode = !1, 
                    this.applicationKeypad = !1, this.applicationCursor = !1, this.scrollTop = 0, this.scrollBottom = this.rows - 1, 
                    this.curAttr = this.defAttr, this.x = this.y = 0, this.charset = null, this.glevel = 0, 
                    this.charsets = [ null ];
                }, o.prototype.requestAnsiMode = function(t) {}, o.prototype.requestPrivateMode = function(t) {}, 
                o.prototype.setConformanceLevel = function(t) {}, o.prototype.loadLEDs = function(t) {}, 
                o.prototype.setCursorStyle = function(t) {}, o.prototype.setCharProtectionAttr = function(t) {}, 
                o.prototype.restorePrivateValues = function(t) {}, o.prototype.setAttrInRectangle = function(t) {
                    for (var e, s, i = t[0], r = t[1], n = t[2], o = t[3], a = t[4]; i < n + 1; i++) for (e = this.lines[this.ybase + i], 
                    s = r; s < o; s++) e[s] = [ a, e[s][1] ];
                    this.updateRange(t[0]), this.updateRange(t[2]);
                }, o.prototype.savePrivateValues = function(t) {}, o.prototype.manipulateWindow = function(t) {}, 
                o.prototype.reverseAttrInRectangle = function(t) {}, o.prototype.setTitleModeFeature = function(t) {}, 
                o.prototype.setWarningBellVolume = function(t) {}, o.prototype.setMarginBellVolume = function(t) {}, 
                o.prototype.copyRectangle = function(t) {}, o.prototype.enableFilterRectangle = function(t) {}, 
                o.prototype.requestParameters = function(t) {}, o.prototype.selectChangeExtent = function(t) {}, 
                o.prototype.fillRectangle = function(t) {
                    for (var e, s, i = t[0], r = t[1], n = t[2], o = t[3], a = t[4]; r < o + 1; r++) for (e = this.lines[this.ybase + r], 
                    s = n; s < a; s++) e[s] = [ e[s][0], S.fromCharCode(i) ];
                    this.updateRange(t[1]), this.updateRange(t[3]);
                }, o.prototype.enableLocatorReporting = function(t) {
                    t[0] > 0;
                }, o.prototype.eraseRectangle = function(t) {
                    var e, s, i, r = t[0], n = t[1], o = t[2], a = t[3];
                    for (i = [ this.eraseAttr(), " " ]; r < o + 1; r++) for (e = this.lines[this.ybase + r], 
                    s = n; s < a; s++) e[s] = i;
                    this.updateRange(t[0]), this.updateRange(t[2]);
                }, o.prototype.setLocatorEvents = function(t) {}, o.prototype.selectiveEraseRectangle = function(t) {}, 
                o.prototype.requestLocatorPosition = function(t) {}, o.prototype.insertColumns = function() {
                    for (var t, e = params[0], s = this.ybase + this.rows, i = [ this.eraseAttr(), " " ]; e--; ) for (t = this.ybase; t < s; t++) this.lines[t].splice(this.x + 1, 0, i), 
                    this.lines[t].pop();
                    this.maxRange();
                }, o.prototype.deleteColumns = function() {
                    for (var t, e = params[0], s = this.ybase + this.rows, i = [ this.eraseAttr(), " " ]; e--; ) for (t = this.ybase; t < s; t++) this.lines[t].splice(this.x, 1), 
                    this.lines[t].push(i);
                    this.maxRange();
                }, o.prototype.enterPrefix = function() {
                    this.prefixMode = !0;
                }, o.prototype.leavePrefix = function() {
                    this.prefixMode = !1;
                }, o.prototype.enterSelect = function() {
                    this._real = {
                        x: this.x,
                        y: this.y,
                        ydisp: this.ydisp,
                        ybase: this.ybase,
                        cursorHidden: this.cursorHidden,
                        lines: this.copyBuffer(this.lines),
                        write: this.write
                    }, this.write = function() {}, this.selectMode = !0, this.visualMode = !1, this.cursorHidden = !1, 
                    this.refresh(this.y, this.y);
                }, o.prototype.leaveSelect = function() {
                    this.x = this._real.x, this.y = this._real.y, this.ydisp = this._real.ydisp, this.ybase = this._real.ybase, 
                    this.cursorHidden = this._real.cursorHidden, this.lines = this._real.lines, this.write = this._real.write, 
                    delete this._real, this.selectMode = !1, this.visualMode = !1, this.refresh(0, this.rows - 1);
                }, o.prototype.enterVisual = function() {
                    this._real.preVisual = this.copyBuffer(this.lines), this.selectText(this.x, this.x, this.ydisp + this.y, this.ydisp + this.y), 
                    this.visualMode = !0;
                }, o.prototype.leaveVisual = function() {
                    this.lines = this._real.preVisual, delete this._real.preVisual, delete this._selected, 
                    this.visualMode = !1, this.refresh(0, this.rows - 1);
                }, o.prototype.enterSearch = function(t) {
                    this.entry = "", this.searchMode = !0, this.searchDown = t, this._real.preSearch = this.copyBuffer(this.lines), 
                    this._real.preSearchX = this.x, this._real.preSearchY = this.y;
                    for (var e = this.ydisp + this.rows - 1, s = 0; s < this.entryPrefix.length; s++) this.lines[e][s] = [ this.defAttr & -512 | 4, this.entryPrefix[s] ];
                    this.y = this.rows - 1, this.x = this.entryPrefix.length, this.refresh(this.rows - 1, this.rows - 1);
                }, o.prototype.leaveSearch = function() {
                    this.searchMode = !1, this._real.preSearch && (this.lines = this._real.preSearch, 
                    this.x = this._real.preSearchX, this.y = this._real.preSearchY, delete this._real.preSearch, 
                    delete this._real.preSearchX, delete this._real.preSearchY), this.refresh(this.rows - 1, this.rows - 1);
                }, o.prototype.copyBuffer = function(t) {
                    for (var t = t || this.lines, e = [], s = 0; s < t.length; s++) {
                        e[s] = [];
                        for (var i = 0; i < t[s].length; i++) e[s][i] = [ t[s][i][0], t[s][i][1] ];
                    }
                    return e;
                }, o.prototype.getCopyTextarea = function(t) {
                    var e = this._copyTextarea, s = this.document;
                    return e || (e = s.createElement("textarea"), e.style.position = "absolute", e.style.left = "-32000px", 
                    e.style.top = "-32000px", e.style.width = "0px", e.style.height = "0px", e.style.opacity = "0", 
                    e.style.backgroundColor = "transparent", e.style.borderStyle = "none", e.style.outlineStyle = "none", 
                    s.getElementsByTagName("body")[0].appendChild(e), this._copyTextarea = e), e;
                }, o.prototype.copyText = function(t) {
                    var e = this, s = this.getCopyTextarea();
                    this.emit("copy", t), s.focus(), s.textContent = t, s.value = t, s.setSelectionRange(0, t.length), 
                    T(function() {
                        e.element.focus(), e.focus();
                    }, 1);
                }, o.prototype.selectText = function(t, e, s, i) {
                    var r, n, o, a, h, c, l, p, u;
                    if (this._selected) {
                        for (r = this._selected.x1, n = this._selected.x2, o = this._selected.y1, a = this._selected.y2, 
                        a < o && (h = n, n = r, r = h, h = a, a = o, o = h), n < r && o === a && (h = n, 
                        n = r, r = h), l = o; l <= a; l++) for (c = 0, p = this.cols - 1, l === o && (c = r), 
                        l === a && (p = n); c <= p; c++) null != this.lines[l][c].old && (u = this.lines[l][c].old, 
                        delete this.lines[l][c].old, this.lines[l][c] = [ u, this.lines[l][c][1] ]);
                        s = this._selected.y1, t = this._selected.x1;
                    }
                    for (s = Math.max(s, 0), s = Math.min(s, this.ydisp + this.rows - 1), i = Math.max(i, 0), 
                    i = Math.min(i, this.ydisp + this.rows - 1), this._selected = {
                        x1: t,
                        x2: e,
                        y1: s,
                        y2: i
                    }, i < s && (h = e, e = t, t = h, h = i, i = s, s = h), e < t && s === i && (h = e, 
                    e = t, t = h), l = s; l <= i; l++) for (c = 0, p = this.cols - 1, l === s && (c = t), 
                    l === i && (p = e); c <= p; c++) u = this.lines[l][c][0], this.lines[l][c] = [ u & -512 | 261636, this.lines[l][c][1] ], 
                    this.lines[l][c].old = u;
                    s -= this.ydisp, i -= this.ydisp, s = Math.max(s, 0), s = Math.min(s, this.rows - 1), 
                    i = Math.max(i, 0), i = Math.min(i, this.rows - 1), this.refresh(0, this.rows - 1);
                }, o.prototype.grabText = function(t, e, s, i) {
                    var r, n, o, a, h, c = "", l = "";
                    for (i < s && (h = e, e = t, t = h, h = i, i = s, s = h), e < t && s === i && (h = e, 
                    e = t, t = h), o = s; o <= i; o++) {
                        for (n = 0, a = this.cols - 1, o === s && (n = t), o === i && (a = e); n <= a; n++) r = this.lines[o][n][1], 
                        " " !== r ? (l && (c += l, l = ""), c += r, d(r) && n++) : l += r;
                        l = "", c += "\n";
                    }
                    for (n = e, o = i; n < this.cols; n++) if (" " !== this.lines[o][n][1]) {
                        c = c.slice(0, -1);
                        break;
                    }
                    return c;
                }, o.prototype.keyPrefix = function(t, e) {
                    "k" === e || "&" === e ? this.destroy() : "p" === e || "]" === e ? this.emit("request paste") : "c" === e ? this.emit("request create") : e >= "0" && e <= "9" ? (e = +e - 1, 
                    ~e || (e = 9), this.emit("request term", e)) : "n" === e ? this.emit("request term next") : "P" === e ? this.emit("request term previous") : ":" === e ? this.emit("request command mode") : "[" === e && this.enterSelect();
                }, o.prototype.keySelect = function(t, e) {
                    if (this.searchMode || "n" === e || "N" === e) return this.keySearch(t, e);
                    if ("" === e) {
                        var s = this.ydisp + this.y;
                        return this.ydisp === this.ybase ? (this.y = Math.min(this.y + (this.rows - 1) / 2 | 0, this.rows - 1), 
                        this.refresh(0, this.rows - 1)) : this.scrollDisp((this.rows - 1) / 2 | 0), void (this.visualMode && this.selectText(this.x, this.x, s, this.ydisp + this.y));
                    }
                    if ("" === e) {
                        var s = this.ydisp + this.y;
                        return 0 === this.ydisp ? (this.y = Math.max(this.y - (this.rows - 1) / 2 | 0, 0), 
                        this.refresh(0, this.rows - 1)) : this.scrollDisp(-(this.rows - 1) / 2 | 0), void (this.visualMode && this.selectText(this.x, this.x, s, this.ydisp + this.y));
                    }
                    if ("" === e) {
                        var s = this.ydisp + this.y;
                        return this.scrollDisp(this.rows - 1), void (this.visualMode && this.selectText(this.x, this.x, s, this.ydisp + this.y));
                    }
                    if ("" === e) {
                        var s = this.ydisp + this.y;
                        return this.scrollDisp(-(this.rows - 1)), void (this.visualMode && this.selectText(this.x, this.x, s, this.ydisp + this.y));
                    }
                    if ("k" === e || "[A" === e) {
                        var s = this.ydisp + this.y;
                        return this.y--, this.y < 0 && (this.y = 0, this.scrollDisp(-1)), void (this.visualMode ? this.selectText(this.x, this.x, s, this.ydisp + this.y) : this.refresh(this.y, this.y + 1));
                    }
                    if ("j" === e || "[B" === e) {
                        var s = this.ydisp + this.y;
                        return this.y++, this.y >= this.rows && (this.y = this.rows - 1, this.scrollDisp(1)), 
                        void (this.visualMode ? this.selectText(this.x, this.x, s, this.ydisp + this.y) : this.refresh(this.y - 1, this.y));
                    }
                    if ("h" === e || "[D" === e) {
                        var i = this.x;
                        return this.x--, this.x < 0 && (this.x = 0), void (this.visualMode ? this.selectText(i, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                    }
                    if ("l" === e || "[C" === e) {
                        var i = this.x;
                        return this.x++, this.x >= this.cols && (this.x = this.cols - 1), void (this.visualMode ? this.selectText(i, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                    }
                    if ("v" === e || " " === e) return void (this.visualMode ? this.leaveVisual() : this.enterVisual());
                    {
                        if ("y" !== e) {
                            if ("q" === e || "" === e) return void (this.visualMode ? this.leaveVisual() : this.leaveSelect());
                            if ("w" === e || "W" === e) {
                                for (var r = this.x, n = this.y, o = this.ydisp, i = this.x, s = this.y, a = this.ydisp, h = !1; ;) {
                                    for (var c = this.lines[a + s]; i < this.cols; ) {
                                        if (c[i][1] <= " ") h = !0; else if (h) break;
                                        i++;
                                    }
                                    if (i >= this.cols && (i = this.cols - 1), !(i === this.cols - 1 && c[i][1] <= " ")) break;
                                    if (i = 0, ++s >= this.rows && (s--, ++a > this.ybase)) {
                                        a = this.ybase, i = this.x;
                                        break;
                                    }
                                }
                                return this.x = i, this.y = s, this.scrollDisp(-this.ydisp + a), void (this.visualMode && this.selectText(r, this.x, n + o, this.ydisp + this.y));
                            }
                            if ("b" === e || "B" === e) {
                                for (var r = this.x, n = this.y, o = this.ydisp, i = this.x, s = this.y, a = this.ydisp; ;) {
                                    for (var c = this.lines[a + s], h = i > 0 && c[i][1] > " " && c[i - 1][1] > " "; i >= 0; ) {
                                        if (c[i][1] <= " ") {
                                            if (h && i + 1 < this.cols && c[i + 1][1] > " ") {
                                                i++;
                                                break;
                                            }
                                            h = !0;
                                        }
                                        i--;
                                    }
                                    if (i < 0 && (i = 0), 0 !== i || !(c[i][1] <= " ") && h) break;
                                    if (i = this.cols - 1, --s < 0 && (s++, --a < 0)) {
                                        a++, i = 0;
                                        break;
                                    }
                                }
                                return this.x = i, this.y = s, this.scrollDisp(-this.ydisp + a), void (this.visualMode && this.selectText(r, this.x, n + o, this.ydisp + this.y));
                            }
                            if ("e" === e || "E" === e) {
                                var i = this.x + 1, s = this.y, a = this.ydisp;
                                for (i >= this.cols && i--; ;) {
                                    for (var c = this.lines[a + s]; i < this.cols && c[i][1] <= " "; ) i++;
                                    for (;i < this.cols; ) {
                                        if (c[i][1] <= " " && i - 1 >= 0 && c[i - 1][1] > " ") {
                                            i--;
                                            break;
                                        }
                                        i++;
                                    }
                                    if (i >= this.cols && (i = this.cols - 1), !(i === this.cols - 1 && c[i][1] <= " ")) break;
                                    if (i = 0, ++s >= this.rows && (s--, ++a > this.ybase)) {
                                        a = this.ybase;
                                        break;
                                    }
                                }
                                return this.x = i, this.y = s, this.scrollDisp(-this.ydisp + a), void (this.visualMode && this.selectText(r, this.x, n + o, this.ydisp + this.y));
                            }
                            if ("^" === e || "0" === e) {
                                var r = this.x;
                                if ("0" === e) this.x = 0; else if ("^" === e) {
                                    for (var c = this.lines[this.ydisp + this.y], i = 0; i < this.cols && !(c[i][1] > " "); ) i++;
                                    i >= this.cols && (i = this.cols - 1), this.x = i;
                                }
                                return void (this.visualMode ? this.selectText(r, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                            }
                            if ("$" === e) {
                                for (var r = this.x, c = this.lines[this.ydisp + this.y], i = this.cols - 1; i >= 0; ) {
                                    if (c[i][1] > " ") {
                                        this.visualMode && i < this.cols - 1 && i++;
                                        break;
                                    }
                                    i--;
                                }
                                return i < 0 && (i = 0), this.x = i, void (this.visualMode ? this.selectText(r, this.x, this.ydisp + this.y, this.ydisp + this.y) : this.refresh(this.y, this.y));
                            }
                            if ("g" === e || "G" === e) {
                                var r = this.x, n = this.y, o = this.ydisp;
                                return "g" === e ? (this.x = 0, this.y = 0, this.scrollDisp(-this.ydisp)) : "G" === e && (this.x = 0, 
                                this.y = this.rows - 1, this.scrollDisp(this.ybase)), void (this.visualMode && this.selectText(r, this.x, n + o, this.ydisp + this.y));
                            }
                            if ("H" === e || "M" === e || "L" === e) {
                                var r = this.x, n = this.y;
                                return "H" === e ? (this.x = 0, this.y = 0) : "M" === e ? (this.x = 0, this.y = this.rows / 2 | 0) : "L" === e && (this.x = 0, 
                                this.y = this.rows - 1), void (this.visualMode ? this.selectText(r, this.x, this.ydisp + n, this.ydisp + this.y) : (this.refresh(n, n), 
                                this.refresh(this.y, this.y)));
                            }
                            if ("{" === e || "}" === e) {
                                var c, l, r = this.x, n = this.y, o = this.ydisp, p = !1, u = !1, d = -1, s = this.y + ("{" === e ? -1 : 1), a = this.ydisp;
                                for ("{" === e ? s < 0 && (s++, a > 0 && a--) : "}" === e && s >= this.rows && (s--, 
                                a < this.ybase && a++); ;) {
                                    for (c = this.lines[a + s], l = 0; l < this.cols; l++) {
                                        if (c[l][1] > " ") {
                                            d === -1 && (d = 0), p = !0;
                                            break;
                                        }
                                        if (l === this.cols - 1) {
                                            d === -1 ? d = 1 : 0 === d ? u = !0 : 1 === d && p && (u = !0);
                                            break;
                                        }
                                    }
                                    if (u) break;
                                    if ("{" === e) {
                                        if (s--, s < 0) {
                                            if (s++, !(a > 0)) break;
                                            a--;
                                        }
                                    } else if ("}" === e && (s++, s >= this.rows)) {
                                        if (s--, !(a < this.ybase)) break;
                                        a++;
                                    }
                                }
                                return u || ("{" === e ? (s = 0, a = 0) : "}" === e && (s = this.rows - 1, a = this.ybase)), 
                                this.x = 0, this.y = s, this.scrollDisp(-this.ydisp + a), void (this.visualMode && this.selectText(r, this.x, n + o, this.ydisp + this.y));
                            }
                            return ("/" === e || "?" === e) && void (this.visualMode || this.enterSearch("/" === e));
                        }
                        if (this.visualMode) {
                            var f = this.grabText(this._selected.x1, this._selected.x2, this._selected.y1, this._selected.y2);
                            this.copyText(f), this.leaveVisual();
                        }
                    }
                }, o.prototype.keySearch = function(t, e) {
                    if ("" === e) return void this.leaveSearch();
                    if ("\r" === e || !this.searchMode && ("n" === e || "N" === e)) {
                        this.leaveSearch();
                        var s = this.entry;
                        if (!s) return void this.refresh(0, this.rows - 1);
                        for (var i, r, n, o = this.x, a = this.y, h = this.ydisp, c = !1, l = !1, p = this.x + 1, u = this.ydisp + this.y, d = "N" === e ? this.searchDown : !this.searchDown; ;) {
                            for (i = this.lines[u]; p < this.cols; ) {
                                for (n = 0; n < s.length && !(p + n >= this.cols) && i[p + n][1] === s[n]; n++) if (i[p + n][1] === s[n] && n === s.length - 1) {
                                    c = !0;
                                    break;
                                }
                                if (c) break;
                                p += n + 1;
                            }
                            if (c) break;
                            if (p = 0, d) {
                                if (u--, u < 0) {
                                    if (l) break;
                                    l = !0, u = this.ybase + this.rows - 1;
                                }
                            } else if (u++, u > this.ybase + this.rows - 1) {
                                if (l) break;
                                l = !0, u = 0;
                            }
                        }
                        return c ? (u - this.ybase < 0 ? (r = u, u = 0, r > this.ybase && (u = r - this.ybase, 
                        r = this.ybase)) : (r = this.ybase, u -= this.ybase), this.x = p, this.y = u, this.scrollDisp(-this.ydisp + r), 
                        void (this.visualMode && this.selectText(o, this.x, a + h, this.ydisp + this.y))) : void this.refresh(0, this.rows - 1);
                    }
                    if ("\b" === e || "" === e) {
                        if (0 === this.entry.length) return;
                        var f = this.ydisp + this.rows - 1;
                        this.entry = this.entry.slice(0, -1);
                        var n = this.entryPrefix.length + this.entry.length;
                        return this.lines[f][n] = [ this.lines[f][n][0], " " ], this.x--, this.refresh(this.rows - 1, this.rows - 1), 
                        void this.refresh(this.y, this.y);
                    }
                    if (1 === e.length && e >= " " && e <= "~") {
                        var f = this.ydisp + this.rows - 1;
                        this.entry += e;
                        var n = this.entryPrefix.length + this.entry.length - 1;
                        return this.lines[f][n] = [ this.defAttr & -512 | 4, e ], this.x++, this.refresh(this.rows - 1, this.rows - 1), 
                        void this.refresh(this.y, this.y);
                    }
                    return !1;
                }, o.charsets = {}, o.charsets.SCLD = {
                    "`": "◆",
                    a: "▒",
                    b: "\t",
                    c: "\f",
                    d: "\r",
                    e: "\n",
                    f: "°",
                    g: "±",
                    h: "␤",
                    i: "\v",
                    j: "┘",
                    k: "┐",
                    l: "┌",
                    m: "└",
                    n: "┼",
                    o: "⎺",
                    p: "⎻",
                    q: "─",
                    r: "⎼",
                    s: "⎽",
                    t: "├",
                    u: "┤",
                    v: "┴",
                    w: "┬",
                    x: "│",
                    y: "≤",
                    z: "≥",
                    "{": "π",
                    "|": "≠",
                    "}": "£",
                    "~": "·"
                }, o.charsets.UK = null, o.charsets.US = null, o.charsets.Dutch = null, o.charsets.Finnish = null, 
                o.charsets.French = null, o.charsets.FrenchCanadian = null, o.charsets.German = null, 
                o.charsets.Italian = null, o.charsets.NorwegianDanish = null, o.charsets.Spanish = null, 
                o.charsets.Swedish = null, o.charsets.Swiss = null, o.charsets.ISOLatin = null;
                var S = this.String, T = this.setTimeout;
                this.setInterval;
                f._cache = {}, f.distance = function(t, e, s, i, r, n) {
                    return Math.pow(30 * (t - i), 2) + Math.pow(59 * (e - r), 2) + Math.pow(11 * (s - n), 2);
                }, o.EventEmitter = s, o.Stream = n, o.inherits = l, o.on = a, o.off = h, o.cancel = c, 
                i = [], r = function() {
                    return o;
                }.apply(e, i), !(void 0 !== r && (t.exports = r));
            }).call(function() {
                return this || ("undefined" != typeof window ? window : s);
            }());
        }).call(e, function() {
            return this;
        }());
    },
    182: function(t, e) {},
    183: function(t, e) {}
});
//# sourceMappingURL=terminal.min.js.map