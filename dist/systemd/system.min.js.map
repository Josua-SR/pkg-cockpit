{"version":3,"sources":["webpack:///systemd/system.min.js","webpack:///webpack/bootstrap 319e4fa29857b34210ee?6a9d**","webpack:///external \"cockpit\"?478e**","webpack:///../pkg/lib/polyfills.js?c983","webpack:///../~/promise/polyfill.js?1b44","webpack:///../~/asap/browser-asap.js?b5e0","webpack:///../~/asap/browser-raw.js?8130","webpack:///../~/promise/lib/core.js?0d76","webpack:///../~/promise/lib/es6-extensions.js?476c","webpack:///../~/promise/polyfill-done.js?544c","webpack:///../pkg/lib/machine-info.es6?9280","webpack:///external \"jQuery\"?0cb8*","webpack:///../pkg/lib/mustache.js?4126*","webpack:///../~/mustache/mustache.js?0da5*","webpack:///../pkg/lib/patterns.js?8c25","webpack:///../~/bootstrap-datepicker/dist/js/bootstrap-datepicker.js?89e6","webpack:///../pkg/systemd/host.js","webpack:///../pkg/lib/packagekit.es6","webpack:///../pkg/lib/plot.js","webpack:///../~/jquery-flot/jquery.flot.js","webpack:///../~/jquery-flot/jquery.flot.selection.js","webpack:///../~/jquery-flot/jquery.flot.time.js","webpack:///../pkg/lib/service.js","webpack:///../~/patternfly-bootstrap-combobox/js/bootstrap-combobox.js","webpack:///../pkg/systemd/shutdown.js","webpack:///../pkg/systemd/ssh-list-host-keys.sh"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","0","2","cockpit","3","String","prototype","startsWith","searchString","position","this","substr","length","endsWith","search","this_len","undefined","substring","Array","findIndex","predicate","TypeError","value","list","Object","thisArg","arguments","i","assign","defineProperty","target","varArgs","to","index","nextSource","nextKey","hasOwnProperty","writable","configurable","find","o","len","k","kValue","4","Promise","5","throwFirstError","pendingErrors","shift","asap","task","rawTask","freeTasks","pop","RawTask","rawAsap","requestErrorThrow","makeRequestCallFromTimer","error","onerror","push","6","global","queue","requestFlush","flushing","flush","currentIndex","capacity","scan","newLength","makeRequestCallFromMutationObserver","callback","toggle","observer","BrowserMutationObserver","node","document","createTextNode","observe","characterData","data","handleTimer","clearTimeout","timeoutHandle","clearInterval","intervalHandle","setTimeout","setInterval","scope","self","MutationObserver","WebKitMutationObserver","7","noop","getThen","obj","then","ex","LAST_ERROR","IS_ERROR","tryCallOne","fn","a","tryCallTwo","b","_75","_83","_18","_38","doResolve","safeThen","onFulfilled","onRejected","constructor","resolve","reject","res","handle","Handler","deferred","_47","handleResolved","cb","promise","ret","newValue","finale","bind","_71","done","reason","_44","8","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","all","arr","args","slice","val","remaining","race","values","forEach","9","apply","err","15","_interopRequireDefault","__esModule","default","cpu_ram_info","address","dfd","pr","cpu_ram_info_promises","_cockpit2","defer","spawn","host","text","info","match","total_kb","parseInt","memory","cpu_model","cpus","re","test","fail","parseDMIFields","split","map","line","sep","indexOf","key","chassis_types","dmi_info","dmi_info_promises","directory","superuser","output","exception","problem","message","parseUdevDB","paragraph","syspath","props","trim","udevPathRE","udevPropertyRE","console","log","udev_info","udev_info_promises","_cockpit","_","gettext","19","jQuery","21","translate","template","cache","div","createElement","innerHTML","result","mustache","extend","render","view","partials","to_html","send","clearCache","22","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","factory","nodeName","isFunction","object","typeStr","isArray","escapeRegExp","string","replace","hasProperty","propName","testRegExp","regExpTest","isWhitespace","nonSpaceRe","escapeHtml","s","entityMap","parseTemplate","tags","stripSpace","hasTag","nonSpace","spaces","tokens","compileTags","tagsToCompile","spaceRe","Error","openingTagRe","RegExp","closingTagRe","closingCurlyRe","sections","start","type","chr","token","openSection","scanner","Scanner","eos","pos","scanUntil","valueLength","charAt","tagRe","whiteRe","equalsRe","curlyRe","nestTokens","squashTokens","lastToken","squashedTokens","numTokens","section","nestedTokens","collector","tail","Context","parentContext",".","parent","Writer","objectToString","toString","&","<",">","\"","'","/","`","=","lookup","name","names","context","lookupHit","parse","renderTokens","originalTemplate","symbol","buffer","renderSection","renderInverted","renderPartial","unescapedValue","escapedValue","rawValue","subRender","j","escape","version","defaultWriter","153","unique","unique_number","Date","clear_errors","sel","remove","removeClass","off","field_error","next","refresh","wrapper","is","$","insertBefore","selectpicker","appendTo","addClass","append","hasClass","on","css","global_error","alert","prependTo","warn","footer","display_errors","errors","any","DialogWait","disabled","clear_wait","ctl","removeAttr","display_wait","restore","state","cancelled","modal","update","arg","wait","first","before","cancellation","cancel","close","controls","add","not","each","attr","always","progress","onoff_refresh","x","addBack","filter","el","input","onoff","buttons","onoff_change","onoff_value","toggleClass","prop","last","resize_flex","slider","flex","total","part","isNaN","update_value","children","check_overflow","offsetWidth","scrollWidth","setup_slider","get","parseFloat","getAttribute","set","v","setAttribute","hasAttribute","toLowerCase","ev","offset","left","hitx","offsetX","clientX","outerWidth","width","pageX","trigger","setup_sliders","dialog","action","window","addEventListener","ready","update_privileged","perm","denied_message","placement","tooltip_element","allowed","selector","allowed_key","options","html","tooltip","154","UTCDate","UTC","UTCToday","today","getFullYear","getMonth","getDate","isUTCEquals","date1","date2","getUTCFullYear","getUTCMonth","getUTCDate","alias","method","deprecationMsg","datepicker","deprecated","isValidDate","d","getTime","opts_from_el","prefix","re_lower","inkey","out","opts_from_locale","lang","dates","locale_opts","DateArray","extras","contains","valueOf","l","splice","new_array","clear","copy","Datepicker","element","_process_options","viewDate","defaultViewDate","focusDate","isInput","inputField","component","isInline","picker","DPGlobal","_check_template","templates","leftArrow","rightArrow","_buildEvents","_attachEvents","rtl","calendarWeeks","Number","startDate","_o","endDate","daysOfWeekDisabled","daysOfWeekHighlighted","datesDisabled","_allow_update","setViewMode","startView","fillDow","fillMonths","show","_resolveViewName","viewModes","viewMode","inArray","_resolveDaysOfWeek","daysOfWeek","tmp","jDom","opts","language","defaults","minViewMode","maxViewMode","Math","max","min","multidate","multidateSeparator","weekStart","weekEnd","format","parseFormat","Infinity","_local_to_utc","_zero_time","parseDate","assumeNearbyYear","plc","orientation","_plc","grep","word","y","year","month","day","_events","_secondaryEvents","_applyEvents","evs","ch","_unapplyEvents","events","keyup","proxy","e","keyCode","keydown","paste","showOnFocus","focus","click","blur","_focused_from","immediateUpdates","changeYear changeMonth","date","navArrowsClick","dayCellClick","resize","place","mousedown touchstart","hide","_detachEvents","_attachSecondaryEvents","_detachSecondaryEvents","_trigger","event","altdate","local_date","_utc_to_local","ix","formatDate","enableOnReadonly","container","navigator","msMaxTouchPoints","disableTouchKeyboard","detach","forceParse","setValue","destroy","dateString","originalEvent","clipboardData","types","getData","setDate","preventDefault","utc","local","getTimezoneOffset","_zero_utc_time","getDates","getUTCDates","selected_date","clearDates","autoclose","setDates","setUTCDates","setUTCDate","formatted","getFormattedDate","join","getStartDate","setStartDate","updateNavArrows","getEndDate","setEndDate","setDaysOfWeekDisabled","setDaysOfWeekHighlighted","setDatesDisabled","calendarWidth","calendarHeight","outerHeight","visualPadding","windowWidth","scrollTop","appendOffset","parentsZindex","parents","itemZIndex","zIndex","zIndexOffset","height","top","top_overflow","yorient","right","oldDates","fromArgs","dateWithinRange","updateViewDate","change","fill","showWeekDays","dowCnt","daysMin","focused","localDate","monthsShort","setRange","range","getClassNames","cls","todayHighlight","dateIsDisabled","getUTCDay","_fill_yearsView","cssClass","factor","startYear","endYear","beforeFn","classes","step","startVal","floor","endVal","focusedVal","selected","currVal","enabled","concat","startMonth","endMonth","todaytxt","cleartxt","titleFormat","todayBtn","clearBtn","title","prevMonth","nextMonth","setUTCFullYear","weekDay","clsName","ws","th","yth","calWeek","content","beforeShowDay","uniqueSort","monthsTitle","months","end","eq","beforeShowMonth","that","moDate","beforeShowYear","beforeShowDecade","beforeShowCentury","prevIsDisabled","nextIsDisabled","stopPropagation","_setDate","setUTCMonth","$target","currentTarget","timestamp","dir","navStep","moveMonth","_toggle_multidate","toggleActive","which","moveDay","newDate","moveWeek","new_month","new_date","mag","abs","moveYear","moveAvailableDate","weekOfDateIsDisabled","newViewDate","dateChanged","keyboardNavigation","ctrlKey","shiftKey","DateRangePicker","inputs","jquery","keepEmptyValues","datepickerPlugin","dateUpdated","pickers","updateDates","updateRanges","updating","dp","keep_empty_values","old","option","internal_return","$this","elopts","xopts","locopts","toArray","Constructor","en","days","daysShort","validParts","nonpunctuation","toValue","toDisplay","separators","parts","assumeNearby","applyNearbyYear","threshold","match_part","fn_map","w","dateAliases","yesterday","tomorrow","filtered","parsed","setters_order","setters_map","yyyy","fparts","cnt","_date","D","DD","M","MM","yy","dd","mm","seps","headTemplate","contTemplate","footTemplate","noConflict","msg","155","update_hostname_privileged","permission","user","update_shutdown_privileged","debug","debugging","ServerTime","client","dbus","timedate","time_offset","remote_offset","timedate1_service","service","timesyncd_service","enumerable","and_time","utc_fake_now","toISOString","lastIndexOf","updateInterval","triggerHandler","timems","offsetms","now","change_time","datestr","hourstr","minstr","Deferred","seconds","poll_ntp_synchronized","path","ifaces","org.freedesktop.timedate1","NTPSynchronized","notify","PageServer","_init","PageSystemInformationChangeHostname","PageSystemInformationChangeSystime","PageCpuStatus","PageMemoryStatus","dialog_setup","setup","enter","leave","page_show","_entered_","page_hide","init","navigate","location","cpu_page","memory_page","server_page","change_systime_dialog","machine_info","packagekit","Mustache","plot","shutdown","host_keys_script","C_","admin","server_time","hostname_proxy","os_updates","os_updates_icon","getElementById","unregistered","getTitle","update_ntp_status","NTP","$ntp_status","model","Synched","timesyncd_server_regex","timesyncd_status","StatusText","Server","SubStatus","tooltip_html","ntp_status_tmpl","icon_html","ntp_status_icon_tmpl","refresh_pmlogger_state","pmlogger_service","exists","pmlogger_promise","set_page_link","element_sel","page","manifests","link","jump","refresh_os_updates_state","className","infos","keys","sort","severity","getSeverityIcon","Enum","INFO_UNKNOWN","INFO_NORMAL","INFO_SECURITY","INFO_LOW","check_for_updates","cancellableTransaction","Package","catch","file","watch","localStorage","getItem","setItem","transport","display","ssh_host_keys_tmpl","host_keys_show","host_keys_hide","encodeURIComponent","plot_controls","setup_plot_controls","pmcd_service","enable","disable","stop","watchRedHatSubscription","subscribed","hostname_text","pretty_hostname","PrettyHostname","static_hostname","StaticHostname","str","kernel_hostname","OperatingSystemPrettyName","machine_id","read","ostree_client","sysroot","cpu_data","direct","internal","units","derive","cpu_options","plot_simple_template","yaxis","tickFormatter","toFixed","cpu_plot","set_options","memory_data","memory_options","ticks","memory_ticks","format_bytes_tick_no_unit","post_hook","pl","axes","getAxes","bytes_tick_unit","memory_plot","add_metrics_sum_series","network_data","omit-instances","network_options","format_bits_per_sec_tick_no_unit","setup_hook","datamax","bits_per_sec_tick_unit","network_plot","disk_data","disk_options","format_bytes_per_sec_tick_no_unit","bytes_per_sec_tick_unit","disk_plot","ngettext","reset","fields","sys_vendor","product_name","present","product_serial","chassis_serial","start_walking","host_keys_interval","host_keys_update","parenthesis","spinner","script","seen","full","fp","fps","sysroot_changed","Booted","deployment","action_type","_on_full_name_changed","_on_name_changed","_on_apply_button","_initial_hostname","_initial_pretty_hostname","_always_update_from_pretty","_update","new_full_name","new_name","one","two","old_hostname","first_dot","new_hostname","apply_button","note1","note2","changed","valid","can_apply","charError","lengthError","validLength","hostname","validSubdomains","periodCount","validName","ntp_type","enable_apply_button","combobox","ntp_servers_tmpl","sync_ntp_servers","custom_ntp_servers","update_ntp_servers","getUTCMinutes","getUTCHours","custom_ntp_enabled","CanNTP","custom_ntp_supported","update_minutes","get_timezones","get_ntp_servers","parse_timezones","lines","curr_timezone","Timezone","empty","check","timedate1","unit","timesyncd","Id","ntp_config_file","ntp_line","ntp_servers","set_ntp_servers","servers","target_error","set_ntp","check_input","manual_time","ntp_time_custom","promises","date_error","timezone_error","hours","minutes","time_error","elt","NTPServers","Value","Placeholder","store_date","restore_date","n_cpus","series","shadowSize","lineWidth","xaxis","x_rh_stack_graphs","metrics","color","label","channel","source","grid","row","follow","walk","setup_complicated_plot","set_yaxis_max","format_bytes","go","156","_toConsumableArray","arr2","from","dbus_client","_dbus_client","track","objectPath","iface","watchTransaction","transactionPath","signalHandlers","notifyHandler","onClose","JSON","stringify","ErrorCode","Finished","EXIT_FAILED","notifyReturn","subscriptions","handler","subscribe","interface","transactionInterface","member","signal","reply","detail","removeEventListener","transaction","arglist","timeout","watchPromise","progress_cb","transaction_path","status","Status","progress_data","waiting","allow_wait_status","STATUS_WAIT","STATUS_WAITING_FOR_LOCK","Percentage","percentage","AllowCancel","code","exit","runtime","secSeverity","sm","validSubscriptionStates","EXIT_SUCCESS","EXIT_CANCELLED","ROLE_REFRESH_CACHE","ROLE_UPDATE_PACKAGES","INFO_ENHANCEMENT","INFO_BUGFIX","INFO_IMPORTANT","STATUS_DOWNLOAD","STATUS_INSTALL","STATUS_UPDATE","STATUS_CLEANUP","STATUS_SIGCHECK","FILTER_INSTALLED","FILTER_NOT_INSTALLED","FILTER_NEWEST","FILTER_ARCH","FILTER_NOT_SOURCE","ERROR_ALREADY_INSTALLED","157","setup_plot","graph_id","user_options","sync_divs","inner_div","outer_div","running","maybe_start","starting","setData","setupGrid","draw","colors","legend","points","radius","borderWidth","aboveData","borderColor","scale","labelMargin","plotter","x_range_seconds","x_stop_seconds","refresh_now","flot","flot_data","beg","interval","used","refresh_pending","stop_walking","move","clearSelection","ceil","x_offset","sync_suppressed","sync","count","get_options","desc","add_series","remove_series","move_to_front","build_metric","n","flat_sum","sum","reset_series","check_archives","archives","chanopts_list","metrics_row","hover_hit","item","hover","archive_source","instances","add_metrics_stacked_instances_series","add_instance","instance_data","ts","last_instance","clear_instances","round","metrics_path_names","next_hover_series","next_hover_val","cur_hover_series","cur_hover_val","hover_on","hover_off","selecting","ranges","plot_colors","tickLength","mode","format_date_tick","minTickSize","reserveSpace","tickColor","size","pow","LN2","t","month_names","axis","pad","begin","year_index","month_index","day_index","hour_minute_index","tickSize","getHours","getMinutes","format_bytes_tick","format_bytes_per_sec","format_bytes_per_sec_tick","format_bits_per_sec","format_bits_per_sec_tick","plots","zoom_plot_start","plot_x_stop","update_plot_buttons","zoom_plot_in","x_range","x_stop","zoom_history","plot_x_range","plot_reset","zoom_plot_out","r","plot_zoom_steps","format_range","update_selection_zooming","plot_min_x_range","selection","basic_flot_row","stacked_flot_row","ser","158","make","g","normalize","f","clamp","clone","extract","elem","exec","lookupColors","aqua","azure","beige","black","blue","brown","cyan","darkblue","darkcyan","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkviolet","fuchsia","gold","green","indigo","khaki","lightblue","lightcyan","lightgreen","lightgrey","lightpink","lightyellow","lime","magenta","maroon","navy","olive","orange","pink","purple","violet","red","silver","white","yellow","Canvas","direction","getContext","G_vmlCanvasManager","initElement","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","textContainer","_textCache","Plot","placeholder","data_","options_","plugins","executeHooks","hook","initPlugins","parseOptions","axisOptions","axisCount","fontSize","fontSizeDefault","fontDefaults","style","variant","weight","family","xaxes","font","lineHeight","yaxes","noTicks","x2axis","y2axis","coloredAreas","markings","coloredAreasColor","markingsColor","bars","highlightColor","getOrCreateAxis","hooks","processOptions","parseData","fillInSeriesOptions","processData","axisNumber","coord","allAxes","canvasToAxisCoords","c2p","x1","y1","axisToCanvasCoords","p2c","number","neededColors","maxIndex","sc","colorPool","colorPoolSize","variation","colori","zero","updateAxis","datamin","fakeInfinity","ps","topSentry","POSITIVE_INFINITY","bottomSentry","NEGATIVE_INFINITY","MAX_VALUE","datapoints","processRawData","required","autoscale","defaultValue","horizontal","pointsize","insertSteps","steps","nullify","processDatapoints","xmin","ymin","xmax","ymax","delta","align","barWidth","setupCanvases","surface","overlay","ctx","octx","eventHolder","unbind","existing","bindEvents","hoverable","mousemove","onMouseMove","onMouseLeave","clickable","onClick","redrawTimeout","setTransformationHelpers","identity","transform","it","inverseTransform","plotWidth","plotHeight","measureTickLabels","labelWidth","labelHeight","maxWidth","legacyStyles","layer","getTextInfo","allocateAxisBoxFirstPhase","lw","lh","isXAxis","axisMargin","padding","innermost","outermost","found","plotOffset","bottom","box","allocateAxisBoxSecondPhase","adjustLayoutForThingsStickingOut","minMargin","minBorderMargin","margins","showGrid","margin","processOffset","axisOpts","allocatedAxes","setupTickGeneration","setTicks","snapRangeToTicks","drawAxisLabels","insertLegend","widen","autoscaleMargin","sqrt","dec","LN10","maxDec","tickDecimals","magn","norm","tickGenerator","prev","floorInBase","NaN","decimal","precision","alignTicksWithAxis","otherAxis","niceTicks","extraDec","oticks","drawBackground","backgroundColor","drawGrid","drawSeries","triggerRedrawOverlay","extractRange","save","fillStyle","getColorOrGradient","fillRect","bw","bc","xrange","yrange","xequal","yequal","markingsLineWidth","subPixel","beginPath","strokeStyle","moveTo","lineTo","stroke","xoff","yoff","strokeRect","tick","halign","valign","removeText","addText","drawSeriesLines","drawSeriesBars","drawSeriesPoints","plotLine","xoffset","yoffset","axisx","axisy","prevx","prevy","x2","y2","plotLineArea","areaOpen","ypos","segmentStart","segmentEnd","x1old","x2old","lineJoin","sw","angle","PI","sin","cos","getFillStyle","plotPoints","shadow","arc","closePath","drawBar","barLeft","barRight","fillStyleCallback","drawLeft","drawRight","drawTop","drawBottom","plotBars","filloptions","seriesColor","fillColor","fragments","entries","rowStarted","lf","labelFormatter","sorted","reverse","ascending","entry","noColumns","labelBoxBorderColor","table","backgroundOpacity","findNearbyItem","mouseX","mouseY","seriesFilter","maxDistance","mouseActiveRadius","smallestDistance","mx","my","maxx","maxy","dx","dy","dist","datapoint","dataIndex","seriesIndex","triggerClickHoverEvent","eventname","canvasX","canvasY","pageY","autoHighlight","highlights","h","auto","point","unhighlight","highlight","interaction","redrawOverlayInterval","drawOverlay","hi","drawBarHighlight","drawPointHighlight","indexOfHighlight","pointRadius","spec","defaultColor","gradient","createLinearGradient","co","brightness","opacity","addColorStop","getPlaceholder","getCanvas","getPlotOffset","getXAxes","getYAxes","getOptions","pointOffset","removeData","base","parentNode","removeChild","clearRect","layerKey","getTextLayer","layerCache","styleKey","styleCache","positions","active","rendered","font-size","insertAfter","textStyle","max-width","text-align","159","updateSelection","getSelection","onMouseDown","body","onselectstart","savedhandlers","ondrag","setSelectionPos","mouseUpHandler","onMouseUp","selectionIsSane","triggerSelectedEvent","c1","c2","second","p1","p2","preventEvent","setSelection","minSize","mousedown","shape","160","fmt","monthNames","dayNames","strftime","leftPad","isAM","hours12","getDay","getSeconds","makeUtcWrapper","addProxyMethod","sourceObj","sourceMethod","targetObj","targetMethod","dateGenerator","timezone","timezoneJS","setTimezone","setTime","axisName","specQuarters","specMonths","timeUnitSize","setSeconds","setMinutes","setHours","setMonth","setFullYear","setMilliseconds","minute","hour","quarter","carry","timeformat","useQuarters","span","suffix","hourCode","rt","twelveHourClock","baseSpec","161","wait_valid","with_systemd_manager","systemd_manager","systemd_client","Subscribe","update_from_unit","LoadState","ActiveState","UnitFileState","dispatchEvent","wait_callbacks","update_from_service","refresh_interface","on_job_new_removed_refresh","unit_id","call_manager","call_manager_with_job","results","pending_jobs","call_manager_with_reload","restart","tryRestart","event_target","LoadUnit","reloading","162","Combobox","$source","$container","$element","$button","$menu","menu","matcher","sorter","highlighter","shown","transferAttributes","listen","selectedValue","appendId","select","updater","offsetHeight","scrollSafety","query","process","items","bsVersion","beginswith","caseSensitive","caseInsensitive","$1","clearTarget","triggerChange","clearElement","tagName","keypress","eventSupported","mouseenter","mouseleave","eventName","isSupported","fixMenuScroll","menuHeight","suppressKeyPressRepeat","mousedover","163","delay","calculate","cmd","input_timestamp","server_timestamp","perform","when","operation","hint","op","st","cached_date","164","165"],"mappings":"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","file":"systemd/system.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ({\n\n/***/ 0:\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(155);\n\tmodule.exports = __webpack_require__(165);\n\n\n/***/ },\n\n/***/ 2:\n/***/ function(module, exports) {\n\n\tmodule.exports = cockpit;\n\n/***/ },\n\n/***/ 3:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*jshint esversion: 6 */\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t/**\n\t This file contains various polyfills and other compatibility hacks\n\t */\n\t\n\t// for IE 11\n\t__webpack_require__(4);\n\t\n\t// for IE 11\n\tif (!String.prototype.startsWith) {\n\t    String.prototype.startsWith = function (searchString, position) {\n\t        position = position || 0;\n\t        return this.substr(position, searchString.length) === searchString;\n\t    };\n\t}\n\t\n\t// for IE 11\n\tif (!String.prototype.endsWith) {\n\t\tString.prototype.endsWith = function(search, this_len) {\n\t\t\tif (this_len === undefined || this_len > this.length) {\n\t\t\t\tthis_len = this.length;\n\t\t\t}\n\t\t\treturn this.substring(this_len - search.length, this_len) === search;\n\t\t};\n\t}\n\t\n\tif (!Array.prototype.findIndex) {\n\t    Array.prototype.findIndex = function (predicate) {\n\t        if (this === null) {\n\t            throw new TypeError('Array.prototype.findIndex called on null or undefined');\n\t        }\n\t        if (typeof predicate !== 'function') {\n\t            throw new TypeError('predicate must be a function');\n\t        }\n\t        var list = Object(this);\n\t        var length = list.length >>> 0;\n\t        var thisArg = arguments[1];\n\t        var value;\n\t\n\t        for (var i = 0; i < length; i++) {\n\t            value = list[i];\n\t            if (predicate.call(thisArg, value, i, list)) {\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t}\n\t\n\t// for IE 11\n\tif (typeof Object.assign != 'function') {\n\t    // Must be writable: true, enumerable: false, configurable: true\n\t    Object.defineProperty(Object, \"assign\", {\n\t        value: function assign(target, varArgs) { // .length of function is 2\n\t            'use strict';\n\t            if (target === null) { // TypeError if undefined or null\n\t                throw new TypeError('Cannot convert undefined or null to object');\n\t            }\n\t\n\t            var to = Object(target);\n\t\n\t            for (var index = 1; index < arguments.length; index++) {\n\t                var nextSource = arguments[index];\n\t\n\t                if (nextSource !== null) { // Skip over if undefined or null\n\t                    for (var nextKey in nextSource) {\n\t                        // Avoid bugs when hasOwnProperty is shadowed\n\t                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n\t                            to[nextKey] = nextSource[nextKey];\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            return to;\n\t        },\n\t        writable: true,\n\t        configurable: true\n\t    });\n\t}\n\t\n\t// for IE 11\n\t// https://tc39.github.io/ecma262/#sec-array.prototype.find\n\tif (!Array.prototype.find) {\n\t    Object.defineProperty(Array.prototype, 'find', {\n\t        value: function(predicate) {\n\t            // 1. Let O be ? ToObject(this value).\n\t            if (this === null) {\n\t                throw new TypeError('\"this\" is null or not defined');\n\t            }\n\t\n\t            var o = Object(this);\n\t\n\t            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n\t            var len = o.length >>> 0;\n\t\n\t            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n\t            if (typeof predicate !== 'function') {\n\t                throw new TypeError('predicate must be a function');\n\t            }\n\t\n\t            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n\t            var thisArg = arguments[1];\n\t\n\t            // 5. Let k be 0.\n\t            var k = 0;\n\t\n\t            // 6. Repeat, while k < len\n\t            while (k < len) {\n\t                // a. Let Pk be ! ToString(k).\n\t                // b. Let kValue be ? Get(O, Pk).\n\t                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n\t                // d. If testResult is true, return kValue.\n\t                var kValue = o[k];\n\t                if (predicate.call(thisArg, kValue, k, o)) {\n\t                    return kValue;\n\t                }\n\t                // e. Increase k by 1.\n\t                k++;\n\t            }\n\t\n\t            // 7. Return undefined.\n\t            return undefined;\n\t        }\n\t    });\n\t}\n\n\n/***/ },\n\n/***/ 4:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// not \"use strict\" so we can declare global \"Promise\"\n\t\n\tvar asap = __webpack_require__(5);\n\t\n\tif (typeof Promise === 'undefined') {\n\t  Promise = __webpack_require__(7)\n\t  __webpack_require__(8)\n\t}\n\t\n\t__webpack_require__(9);\n\n\n/***/ },\n\n/***/ 5:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\t// rawAsap provides everything we need except exception management.\n\tvar rawAsap = __webpack_require__(6);\n\t// RawTasks are recycled to reduce GC churn.\n\tvar freeTasks = [];\n\t// We queue errors to ensure they are thrown in right order (FIFO).\n\t// Array-as-queue is good enough here, since we are just dealing with exceptions.\n\tvar pendingErrors = [];\n\tvar requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n\t\n\tfunction throwFirstError() {\n\t    if (pendingErrors.length) {\n\t        throw pendingErrors.shift();\n\t    }\n\t}\n\t\n\t/**\n\t * Calls a task as soon as possible after returning, in its own event, with priority\n\t * over other events like animation, reflow, and repaint. An error thrown from an\n\t * event will not interrupt, nor even substantially slow down the processing of\n\t * other events, but will be rather postponed to a lower priority event.\n\t * @param {{call}} task A callable object, typically a function that takes no\n\t * arguments.\n\t */\n\tmodule.exports = asap;\n\tfunction asap(task) {\n\t    var rawTask;\n\t    if (freeTasks.length) {\n\t        rawTask = freeTasks.pop();\n\t    } else {\n\t        rawTask = new RawTask();\n\t    }\n\t    rawTask.task = task;\n\t    rawAsap(rawTask);\n\t}\n\t\n\t// We wrap tasks with recyclable task objects.  A task object implements\n\t// `call`, just like a function.\n\tfunction RawTask() {\n\t    this.task = null;\n\t}\n\t\n\t// The sole purpose of wrapping the task is to catch the exception and recycle\n\t// the task object after its single use.\n\tRawTask.prototype.call = function () {\n\t    try {\n\t        this.task.call();\n\t    } catch (error) {\n\t        if (asap.onerror) {\n\t            // This hook exists purely for testing purposes.\n\t            // Its name will be periodically randomized to break any code that\n\t            // depends on its existence.\n\t            asap.onerror(error);\n\t        } else {\n\t            // In a web browser, exceptions are not fatal. However, to avoid\n\t            // slowing down the queue of pending tasks, we rethrow the error in a\n\t            // lower priority turn.\n\t            pendingErrors.push(error);\n\t            requestErrorThrow();\n\t        }\n\t    } finally {\n\t        this.task = null;\n\t        freeTasks[freeTasks.length] = this;\n\t    }\n\t};\n\n\n/***/ },\n\n/***/ 6:\n/***/ function(module, exports) {\n\n\t/* WEBPACK VAR INJECTION */(function(global) {\"use strict\";\n\t\n\t// Use the fastest means possible to execute a task in its own turn, with\n\t// priority over other events including IO, animation, reflow, and redraw\n\t// events in browsers.\n\t//\n\t// An exception thrown by a task will permanently interrupt the processing of\n\t// subsequent tasks. The higher level `asap` function ensures that if an\n\t// exception is thrown by a task, that the task queue will continue flushing as\n\t// soon as possible, but if you use `rawAsap` directly, you are responsible to\n\t// either ensure that no exceptions are thrown from your task, or to manually\n\t// call `rawAsap.requestFlush` if an exception is thrown.\n\tmodule.exports = rawAsap;\n\tfunction rawAsap(task) {\n\t    if (!queue.length) {\n\t        requestFlush();\n\t        flushing = true;\n\t    }\n\t    // Equivalent to push, but avoids a function call.\n\t    queue[queue.length] = task;\n\t}\n\t\n\tvar queue = [];\n\t// Once a flush has been requested, no further calls to `requestFlush` are\n\t// necessary until the next `flush` completes.\n\tvar flushing = false;\n\t// `requestFlush` is an implementation-specific method that attempts to kick\n\t// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n\t// the event queue before yielding to the browser's own event loop.\n\tvar requestFlush;\n\t// The position of the next task to execute in the task queue. This is\n\t// preserved between calls to `flush` so that it can be resumed if\n\t// a task throws an exception.\n\tvar index = 0;\n\t// If a task schedules additional tasks recursively, the task queue can grow\n\t// unbounded. To prevent memory exhaustion, the task queue will periodically\n\t// truncate already-completed tasks.\n\tvar capacity = 1024;\n\t\n\t// The flush function processes all tasks that have been scheduled with\n\t// `rawAsap` unless and until one of those tasks throws an exception.\n\t// If a task throws an exception, `flush` ensures that its state will remain\n\t// consistent and will resume where it left off when called again.\n\t// However, `flush` does not make any arrangements to be called again if an\n\t// exception is thrown.\n\tfunction flush() {\n\t    while (index < queue.length) {\n\t        var currentIndex = index;\n\t        // Advance the index before calling the task. This ensures that we will\n\t        // begin flushing on the next task the task throws an error.\n\t        index = index + 1;\n\t        queue[currentIndex].call();\n\t        // Prevent leaking memory for long chains of recursive calls to `asap`.\n\t        // If we call `asap` within tasks scheduled by `asap`, the queue will\n\t        // grow, but to avoid an O(n) walk for every task we execute, we don't\n\t        // shift tasks off the queue after they have been executed.\n\t        // Instead, we periodically shift 1024 tasks off the queue.\n\t        if (index > capacity) {\n\t            // Manually shift all values starting at the index back to the\n\t            // beginning of the queue.\n\t            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n\t                queue[scan] = queue[scan + index];\n\t            }\n\t            queue.length -= index;\n\t            index = 0;\n\t        }\n\t    }\n\t    queue.length = 0;\n\t    index = 0;\n\t    flushing = false;\n\t}\n\t\n\t// `requestFlush` is implemented using a strategy based on data collected from\n\t// every available SauceLabs Selenium web driver worker at time of writing.\n\t// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\t\n\t// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n\t// have WebKitMutationObserver but not un-prefixed MutationObserver.\n\t// Must use `global` or `self` instead of `window` to work in both frames and web\n\t// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\t\n\t/* globals self */\n\tvar scope = typeof global !== \"undefined\" ? global : self;\n\tvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\t\n\t// MutationObservers are desirable because they have high priority and work\n\t// reliably everywhere they are implemented.\n\t// They are implemented in all modern browsers.\n\t//\n\t// - Android 4-4.3\n\t// - Chrome 26-34\n\t// - Firefox 14-29\n\t// - Internet Explorer 11\n\t// - iPad Safari 6-7.1\n\t// - iPhone Safari 7-7.1\n\t// - Safari 6-7\n\tif (typeof BrowserMutationObserver === \"function\") {\n\t    requestFlush = makeRequestCallFromMutationObserver(flush);\n\t\n\t// MessageChannels are desirable because they give direct access to the HTML\n\t// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n\t// 11-12, and in web workers in many engines.\n\t// Although message channels yield to any queued rendering and IO tasks, they\n\t// would be better than imposing the 4ms delay of timers.\n\t// However, they do not work reliably in Internet Explorer or Safari.\n\t\n\t// Internet Explorer 10 is the only browser that has setImmediate but does\n\t// not have MutationObservers.\n\t// Although setImmediate yields to the browser's renderer, it would be\n\t// preferrable to falling back to setTimeout since it does not have\n\t// the minimum 4ms penalty.\n\t// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n\t// Desktop to a lesser extent) that renders both setImmediate and\n\t// MessageChannel useless for the purposes of ASAP.\n\t// https://github.com/kriskowal/q/issues/396\n\t\n\t// Timers are implemented universally.\n\t// We fall back to timers in workers in most engines, and in foreground\n\t// contexts in the following browsers.\n\t// However, note that even this simple case requires nuances to operate in a\n\t// broad spectrum of browsers.\n\t//\n\t// - Firefox 3-13\n\t// - Internet Explorer 6-9\n\t// - iPad Safari 4.3\n\t// - Lynx 2.8.7\n\t} else {\n\t    requestFlush = makeRequestCallFromTimer(flush);\n\t}\n\t\n\t// `requestFlush` requests that the high priority event queue be flushed as\n\t// soon as possible.\n\t// This is useful to prevent an error thrown in a task from stalling the event\n\t// queue if the exception handled by Node.js’s\n\t// `process.on(\"uncaughtException\")` or by a domain.\n\trawAsap.requestFlush = requestFlush;\n\t\n\t// To request a high priority event, we induce a mutation observer by toggling\n\t// the text of a text node between \"1\" and \"-1\".\n\tfunction makeRequestCallFromMutationObserver(callback) {\n\t    var toggle = 1;\n\t    var observer = new BrowserMutationObserver(callback);\n\t    var node = document.createTextNode(\"\");\n\t    observer.observe(node, {characterData: true});\n\t    return function requestCall() {\n\t        toggle = -toggle;\n\t        node.data = toggle;\n\t    };\n\t}\n\t\n\t// The message channel technique was discovered by Malte Ubl and was the\n\t// original foundation for this library.\n\t// http://www.nonblocking.io/2011/06/windownexttick.html\n\t\n\t// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n\t// page's first load. Thankfully, this version of Safari supports\n\t// MutationObservers, so we don't need to fall back in that case.\n\t\n\t// function makeRequestCallFromMessageChannel(callback) {\n\t//     var channel = new MessageChannel();\n\t//     channel.port1.onmessage = callback;\n\t//     return function requestCall() {\n\t//         channel.port2.postMessage(0);\n\t//     };\n\t// }\n\t\n\t// For reasons explained above, we are also unable to use `setImmediate`\n\t// under any circumstances.\n\t// Even if we were, there is another bug in Internet Explorer 10.\n\t// It is not sufficient to assign `setImmediate` to `requestFlush` because\n\t// `setImmediate` must be called *by name* and therefore must be wrapped in a\n\t// closure.\n\t// Never forget.\n\t\n\t// function makeRequestCallFromSetImmediate(callback) {\n\t//     return function requestCall() {\n\t//         setImmediate(callback);\n\t//     };\n\t// }\n\t\n\t// Safari 6.0 has a problem where timers will get lost while the user is\n\t// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n\t// mutation observers, so that implementation is used instead.\n\t// However, if we ever elect to use timers in Safari, the prevalent work-around\n\t// is to add a scroll event listener that calls for a flush.\n\t\n\t// `setTimeout` does not call the passed callback if the delay is less than\n\t// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n\t// even then.\n\t\n\tfunction makeRequestCallFromTimer(callback) {\n\t    return function requestCall() {\n\t        // We dispatch a timeout with a specified delay of 0 for engines that\n\t        // can reliably accommodate that request. This will usually be snapped\n\t        // to a 4 milisecond delay, but once we're flushing, there's no delay\n\t        // between events.\n\t        var timeoutHandle = setTimeout(handleTimer, 0);\n\t        // However, since this timer gets frequently dropped in Firefox\n\t        // workers, we enlist an interval handle that will try to fire\n\t        // an event 20 times per second until it succeeds.\n\t        var intervalHandle = setInterval(handleTimer, 50);\n\t\n\t        function handleTimer() {\n\t            // Whichever timer succeeds will cancel both timers and\n\t            // execute the callback.\n\t            clearTimeout(timeoutHandle);\n\t            clearInterval(intervalHandle);\n\t            callback();\n\t        }\n\t    };\n\t}\n\t\n\t// This is for `asap.js` only.\n\t// Its name will be periodically randomized to break any code that depends on\n\t// its existence.\n\trawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\t\n\t// ASAP was originally a nextTick shim included in Q. This was factored out\n\t// into this ASAP package. It was later adapted to RSVP which made further\n\t// amendments. These decisions, particularly to marginalize MessageChannel and\n\t// to capture the MutationObserver implementation in a closure, were integrated\n\t// back into ASAP proper.\n\t// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }())))\n\n/***/ },\n\n/***/ 7:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar asap = __webpack_require__(6);\n\t\n\tfunction noop() {}\n\t\n\t// States:\n\t//\n\t// 0 - pending\n\t// 1 - fulfilled with _value\n\t// 2 - rejected with _value\n\t// 3 - adopted the state of another promise, _value\n\t//\n\t// once the state is no longer pending (0) it is immutable\n\t\n\t// All `_` prefixed properties will be reduced to `_{random number}`\n\t// at build time to obfuscate them and discourage their use.\n\t// We don't use symbols or Object.defineProperty to fully hide them\n\t// because the performance isn't good enough.\n\t\n\t\n\t// to avoid using try/catch inside critical functions, we\n\t// extract them to here.\n\tvar LAST_ERROR = null;\n\tvar IS_ERROR = {};\n\tfunction getThen(obj) {\n\t  try {\n\t    return obj.then;\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tfunction tryCallOne(fn, a) {\n\t  try {\n\t    return fn(a);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\tfunction tryCallTwo(fn, a, b) {\n\t  try {\n\t    fn(a, b);\n\t  } catch (ex) {\n\t    LAST_ERROR = ex;\n\t    return IS_ERROR;\n\t  }\n\t}\n\t\n\tmodule.exports = Promise;\n\t\n\tfunction Promise(fn) {\n\t  if (typeof this !== 'object') {\n\t    throw new TypeError('Promises must be constructed via new');\n\t  }\n\t  if (typeof fn !== 'function') {\n\t    throw new TypeError('Promise constructor\\'s argument is not a function');\n\t  }\n\t  this._75 = 0;\n\t  this._83 = 0;\n\t  this._18 = null;\n\t  this._38 = null;\n\t  if (fn === noop) return;\n\t  doResolve(fn, this);\n\t}\n\tPromise._47 = null;\n\tPromise._71 = null;\n\tPromise._44 = noop;\n\t\n\tPromise.prototype.then = function(onFulfilled, onRejected) {\n\t  if (this.constructor !== Promise) {\n\t    return safeThen(this, onFulfilled, onRejected);\n\t  }\n\t  var res = new Promise(noop);\n\t  handle(this, new Handler(onFulfilled, onRejected, res));\n\t  return res;\n\t};\n\t\n\tfunction safeThen(self, onFulfilled, onRejected) {\n\t  return new self.constructor(function (resolve, reject) {\n\t    var res = new Promise(noop);\n\t    res.then(resolve, reject);\n\t    handle(self, new Handler(onFulfilled, onRejected, res));\n\t  });\n\t}\n\tfunction handle(self, deferred) {\n\t  while (self._83 === 3) {\n\t    self = self._18;\n\t  }\n\t  if (Promise._47) {\n\t    Promise._47(self);\n\t  }\n\t  if (self._83 === 0) {\n\t    if (self._75 === 0) {\n\t      self._75 = 1;\n\t      self._38 = deferred;\n\t      return;\n\t    }\n\t    if (self._75 === 1) {\n\t      self._75 = 2;\n\t      self._38 = [self._38, deferred];\n\t      return;\n\t    }\n\t    self._38.push(deferred);\n\t    return;\n\t  }\n\t  handleResolved(self, deferred);\n\t}\n\t\n\tfunction handleResolved(self, deferred) {\n\t  asap(function() {\n\t    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t    if (cb === null) {\n\t      if (self._83 === 1) {\n\t        resolve(deferred.promise, self._18);\n\t      } else {\n\t        reject(deferred.promise, self._18);\n\t      }\n\t      return;\n\t    }\n\t    var ret = tryCallOne(cb, self._18);\n\t    if (ret === IS_ERROR) {\n\t      reject(deferred.promise, LAST_ERROR);\n\t    } else {\n\t      resolve(deferred.promise, ret);\n\t    }\n\t  });\n\t}\n\tfunction resolve(self, newValue) {\n\t  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t  if (newValue === self) {\n\t    return reject(\n\t      self,\n\t      new TypeError('A promise cannot be resolved with itself.')\n\t    );\n\t  }\n\t  if (\n\t    newValue &&\n\t    (typeof newValue === 'object' || typeof newValue === 'function')\n\t  ) {\n\t    var then = getThen(newValue);\n\t    if (then === IS_ERROR) {\n\t      return reject(self, LAST_ERROR);\n\t    }\n\t    if (\n\t      then === self.then &&\n\t      newValue instanceof Promise\n\t    ) {\n\t      self._83 = 3;\n\t      self._18 = newValue;\n\t      finale(self);\n\t      return;\n\t    } else if (typeof then === 'function') {\n\t      doResolve(then.bind(newValue), self);\n\t      return;\n\t    }\n\t  }\n\t  self._83 = 1;\n\t  self._18 = newValue;\n\t  finale(self);\n\t}\n\t\n\tfunction reject(self, newValue) {\n\t  self._83 = 2;\n\t  self._18 = newValue;\n\t  if (Promise._71) {\n\t    Promise._71(self, newValue);\n\t  }\n\t  finale(self);\n\t}\n\tfunction finale(self) {\n\t  if (self._75 === 1) {\n\t    handle(self, self._38);\n\t    self._38 = null;\n\t  }\n\t  if (self._75 === 2) {\n\t    for (var i = 0; i < self._38.length; i++) {\n\t      handle(self, self._38[i]);\n\t    }\n\t    self._38 = null;\n\t  }\n\t}\n\t\n\tfunction Handler(onFulfilled, onRejected, promise){\n\t  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t  this.promise = promise;\n\t}\n\t\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, promise) {\n\t  var done = false;\n\t  var res = tryCallTwo(fn, function (value) {\n\t    if (done) return;\n\t    done = true;\n\t    resolve(promise, value);\n\t  }, function (reason) {\n\t    if (done) return;\n\t    done = true;\n\t    reject(promise, reason);\n\t  });\n\t  if (!done && res === IS_ERROR) {\n\t    done = true;\n\t    reject(promise, LAST_ERROR);\n\t  }\n\t}\n\n\n/***/ },\n\n/***/ 8:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t//This file contains the ES6 extensions to the core Promises/A+ API\n\t\n\tvar Promise = __webpack_require__(7);\n\t\n\tmodule.exports = Promise;\n\t\n\t/* Static Functions */\n\t\n\tvar TRUE = valuePromise(true);\n\tvar FALSE = valuePromise(false);\n\tvar NULL = valuePromise(null);\n\tvar UNDEFINED = valuePromise(undefined);\n\tvar ZERO = valuePromise(0);\n\tvar EMPTYSTRING = valuePromise('');\n\t\n\tfunction valuePromise(value) {\n\t  var p = new Promise(Promise._44);\n\t  p._83 = 1;\n\t  p._18 = value;\n\t  return p;\n\t}\n\tPromise.resolve = function (value) {\n\t  if (value instanceof Promise) return value;\n\t\n\t  if (value === null) return NULL;\n\t  if (value === undefined) return UNDEFINED;\n\t  if (value === true) return TRUE;\n\t  if (value === false) return FALSE;\n\t  if (value === 0) return ZERO;\n\t  if (value === '') return EMPTYSTRING;\n\t\n\t  if (typeof value === 'object' || typeof value === 'function') {\n\t    try {\n\t      var then = value.then;\n\t      if (typeof then === 'function') {\n\t        return new Promise(then.bind(value));\n\t      }\n\t    } catch (ex) {\n\t      return new Promise(function (resolve, reject) {\n\t        reject(ex);\n\t      });\n\t    }\n\t  }\n\t  return valuePromise(value);\n\t};\n\t\n\tPromise.all = function (arr) {\n\t  var args = Array.prototype.slice.call(arr);\n\t\n\t  return new Promise(function (resolve, reject) {\n\t    if (args.length === 0) return resolve([]);\n\t    var remaining = args.length;\n\t    function res(i, val) {\n\t      if (val && (typeof val === 'object' || typeof val === 'function')) {\n\t        if (val instanceof Promise && val.then === Promise.prototype.then) {\n\t          while (val._83 === 3) {\n\t            val = val._18;\n\t          }\n\t          if (val._83 === 1) return res(i, val._18);\n\t          if (val._83 === 2) reject(val._18);\n\t          val.then(function (val) {\n\t            res(i, val);\n\t          }, reject);\n\t          return;\n\t        } else {\n\t          var then = val.then;\n\t          if (typeof then === 'function') {\n\t            var p = new Promise(then.bind(val));\n\t            p.then(function (val) {\n\t              res(i, val);\n\t            }, reject);\n\t            return;\n\t          }\n\t        }\n\t      }\n\t      args[i] = val;\n\t      if (--remaining === 0) {\n\t        resolve(args);\n\t      }\n\t    }\n\t    for (var i = 0; i < args.length; i++) {\n\t      res(i, args[i]);\n\t    }\n\t  });\n\t};\n\t\n\tPromise.reject = function (value) {\n\t  return new Promise(function (resolve, reject) {\n\t    reject(value);\n\t  });\n\t};\n\t\n\tPromise.race = function (values) {\n\t  return new Promise(function (resolve, reject) {\n\t    values.forEach(function(value){\n\t      Promise.resolve(value).then(resolve, reject);\n\t    });\n\t  });\n\t};\n\t\n\t/* Prototype Methods */\n\t\n\tPromise.prototype['catch'] = function (onRejected) {\n\t  return this.then(null, onRejected);\n\t};\n\n\n/***/ },\n\n/***/ 9:\n/***/ function(module, exports) {\n\n\t// should work in any browser without browserify\n\t\n\tif (typeof Promise.prototype.done !== 'function') {\n\t  Promise.prototype.done = function (onFulfilled, onRejected) {\n\t    var self = arguments.length ? this.then.apply(this, arguments) : this\n\t    self.then(null, function (err) {\n\t      setTimeout(function () {\n\t        throw err\n\t      }, 0)\n\t    })\n\t  }\n\t}\n\n/***/ },\n\n/***/ 15:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.cpu_ram_info = cpu_ram_info;\n\texports.dmi_info = dmi_info;\n\texports.udev_info = udev_info;\n\t\n\tvar _cockpit = __webpack_require__(2);\n\t\n\tvar _cockpit2 = _interopRequireDefault(_cockpit);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _ = _cockpit2.default.gettext; /*jshint esversion: 6 */\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2018 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\tvar cpu_ram_info_promises = {};\n\t\n\tfunction cpu_ram_info(address) {\n\t    var pr = cpu_ram_info_promises[address];\n\t    var dfd;\n\t    if (!pr) {\n\t        dfd = _cockpit2.default.defer();\n\t        cpu_ram_info_promises[address] = pr = dfd.promise();\n\t\n\t        _cockpit2.default.spawn([\"cat\", \"/proc/meminfo\", \"/proc/cpuinfo\"], { host: address }).done(function (text) {\n\t            var info = {};\n\t            var match = text.match(/MemTotal:[^0-9]*([0-9]+) [kK]B/);\n\t            var total_kb = match && parseInt(match[1], 10);\n\t            if (total_kb) info.memory = total_kb * 1024;\n\t\n\t            match = text.match(/^model name\\s*:\\s*(.*)$/m);\n\t            if (match) info.cpu_model = match[1];\n\t\n\t            info.cpus = 0;\n\t            var re = /^processor/gm;\n\t            while (re.test(text)) {\n\t                info.cpus += 1;\n\t            }dfd.resolve(info);\n\t        }).fail(function () {\n\t            dfd.reject();\n\t        });\n\t    }\n\t    return pr;\n\t}\n\t\n\t// https://www.dmtf.org/sites/default/files/standards/documents/DSP0134_2.7.1.pdf\n\tvar chassis_types = [undefined, _(\"Other\"), _(\"Unknown\"), _(\"Desktop\"), _(\"Low Profile Desktop\"), _(\"Pizza Box\"), _(\"Mini Tower\"), _(\"Tower\"), _(\"Portable\"), _(\"Laptop\"), _(\"Notebook\"), _(\"Hand Held\"), _(\"Docking Station\"), _(\"All In One\"), _(\"Sub Notebook\"), _(\"Space-saving Computer\"), _(\"Lunch Box\"), /* 0x10 */\n\t_(\"Main Server Chassis\"), _(\"Expansion Chassis\"), _(\"Sub Chassis\"), _(\"Bus Expansion Chassis\"), _(\"Peripheral Chassis\"), _(\"RAID Chassis\"), _(\"Rack Mount Chassis\"), _(\"Sealed-case PC\"), _(\"Multi-system Chassis\"), _(\"Compact PCI\"), /* 0x1A */\n\t_(\"Advanced TCA\"), _(\"Blade\"), _(\"Blade enclosure\"), _(\"Tablet\"), _(\"Convertible\"), _(\"Detachable\"), /* 0x20 */\n\t_(\"IoT Gateway\"), _(\"Embedded PC\"), _(\"Mini PC\"), _(\"Stick PC\")];\n\t\n\tfunction parseDMIFields(text) {\n\t    var info = {};\n\t    text.split(\"\\n\").map(function (line) {\n\t        var sep = line.indexOf(':');\n\t        if (sep <= 0) return;\n\t        var key = line.slice(0, sep);\n\t        var value = line.slice(sep + 1);\n\t        info[key] = value;\n\t\n\t        if (key === \"chassis_type\") info[key + \"_str\"] = chassis_types[parseInt(value)] || chassis_types[2]; // fall back to \"Unknown\"\n\t    });\n\t    return info;\n\t}\n\t\n\tvar dmi_info_promises = {};\n\t\n\tfunction dmi_info(address) {\n\t    var pr = dmi_info_promises[address];\n\t    var dfd;\n\t    if (!pr) {\n\t        dfd = _cockpit2.default.defer();\n\t        dmi_info_promises[address] = pr = dfd.promise();\n\t\n\t        _cockpit2.default.spawn([\"grep\", \"-r\", \".\"], { directory: \"/sys/class/dmi/id\", err: \"ignore\", superuser: \"try\" }).done(function (output) {\n\t            return dfd.resolve(parseDMIFields(output));\n\t        }).fail(function (exception, output) {\n\t            // the grep often/usually exits with 2, that's okay as long as we find *some* information\n\t            if (!exception.problem && output) dfd.resolve(parseDMIFields(output));else dfd.reject(exception.message);\n\t        });\n\t    }\n\t    return pr;\n\t}\n\t\n\t/* we expect udev db paragraphs like this:\n\t *\n\t   P: /devices/virtual/mem/null\n\t   N: null\n\t   E: DEVMODE=0666\n\t   E: DEVNAME=/dev/null\n\t   E: SUBSYSTEM=mem\n\t*/\n\t\n\tvar udevPathRE = /^P: (.*)$/;\n\tvar udevPropertyRE = /^E: (\\w+)=(.*)$/;\n\t\n\tfunction parseUdevDB(text) {\n\t    var info = {};\n\t    text.split(\"\\n\\n\").map(function (paragraph) {\n\t        var syspath = null;\n\t        var props = {};\n\t\n\t        paragraph = paragraph.trim();\n\t        if (!paragraph) return;\n\t\n\t        paragraph.split(\"\\n\").map(function (line) {\n\t            var match = line.match(udevPathRE);\n\t            if (match) {\n\t                syspath = match[1];\n\t            } else {\n\t                match = line.match(udevPropertyRE);\n\t                if (match) props[match[1]] = match[2];\n\t            }\n\t        });\n\t\n\t        if (syspath) info[syspath] = props;else console.log(\"udev database paragraph is missing P:\", paragraph);\n\t    });\n\t    return info;\n\t}\n\t\n\tvar udev_info_promises = {};\n\t\n\tfunction udev_info(address) {\n\t    var pr = udev_info_promises[address];\n\t    var dfd;\n\t    if (!pr) {\n\t        dfd = _cockpit2.default.defer();\n\t        udev_info_promises[address] = pr = dfd.promise();\n\t\n\t        _cockpit2.default.spawn([\"udevadm\", \"info\", \"--export-db\"], { err: \"message\" }).done(function (output) {\n\t            return dfd.resolve(parseUdevDB(output));\n\t        }).fail(function (exception) {\n\t            return dfd.reject(exception.message);\n\t        });\n\t    }\n\t    return pr;\n\t}\n\n/***/ },\n\n/***/ 19:\n/***/ function(module, exports) {\n\n\tmodule.exports = jQuery;\n\n/***/ },\n\n/***/ 21:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\tvar cockpit = __webpack_require__(2);\n\tvar mustache = __webpack_require__(22);\n\t\n\t/*\n\t * Turns a mustache template into a translated mustache template\n\t * by preparsing it and translating it.\n\t */\n\tvar cache = { };\n\t\n\tfunction translate(template) {\n\t    if (template in cache)\n\t        return cache[template];\n\t    var div = document.createElement(\"div\");\n\t    div.innerHTML = template;\n\t    cockpit.translate(div);\n\t    var result = div.innerHTML;\n\t    cache[template] = result;\n\t    return result;\n\t}\n\t\n\t/* Just like the mustache object, except for translated */\n\tmodule.exports = cockpit.extend({ }, mustache, {\n\t    render: function render(template, view, partials) {\n\t        if (!view)\n\t            view = {};\n\t\n\t        return translate(mustache.render(template, view, partials));\n\t    },\n\t    to_html: function to_html(template, view, partials, send) {\n\t        if (!view)\n\t            view = {};\n\t\n\t        return translate(mustache.to_html(template, view, partials, send));\n\t    },\n\t    clearCache: function clearCache() {\n\t        cache = { };\n\t        return mustache.clearCache();\n\t    }\n\t});\n\n\n/***/ },\n\n/***/ 22:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * mustache.js - Logic-less {{mustache}} templates with JavaScript\n\t * http://github.com/janl/mustache.js\n\t */\n\t\n\t/*global define: false Mustache: true*/\n\t\n\t(function defineMustache (global, factory) {\n\t  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n\t    factory(exports); // CommonJS\n\t  } else if (true) {\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [exports], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD\n\t  } else {\n\t    global.Mustache = {};\n\t    factory(global.Mustache); // script, wsh, asp\n\t  }\n\t}(this, function mustacheFactory (mustache) {\n\t\n\t  var objectToString = Object.prototype.toString;\n\t  var isArray = Array.isArray || function isArrayPolyfill (object) {\n\t    return objectToString.call(object) === '[object Array]';\n\t  };\n\t\n\t  function isFunction (object) {\n\t    return typeof object === 'function';\n\t  }\n\t\n\t  /**\n\t   * More correct typeof string handling array\n\t   * which normally returns typeof 'object'\n\t   */\n\t  function typeStr (obj) {\n\t    return isArray(obj) ? 'array' : typeof obj;\n\t  }\n\t\n\t  function escapeRegExp (string) {\n\t    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n\t  }\n\t\n\t  /**\n\t   * Null safe way of checking whether or not an object,\n\t   * including its prototype, has a given property\n\t   */\n\t  function hasProperty (obj, propName) {\n\t    return obj != null && typeof obj === 'object' && (propName in obj);\n\t  }\n\t\n\t  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n\t  // See https://github.com/janl/mustache.js/issues/189\n\t  var regExpTest = RegExp.prototype.test;\n\t  function testRegExp (re, string) {\n\t    return regExpTest.call(re, string);\n\t  }\n\t\n\t  var nonSpaceRe = /\\S/;\n\t  function isWhitespace (string) {\n\t    return !testRegExp(nonSpaceRe, string);\n\t  }\n\t\n\t  var entityMap = {\n\t    '&': '&amp;',\n\t    '<': '&lt;',\n\t    '>': '&gt;',\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    '/': '&#x2F;',\n\t    '`': '&#x60;',\n\t    '=': '&#x3D;'\n\t  };\n\t\n\t  function escapeHtml (string) {\n\t    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n\t      return entityMap[s];\n\t    });\n\t  }\n\t\n\t  var whiteRe = /\\s*/;\n\t  var spaceRe = /\\s+/;\n\t  var equalsRe = /\\s*=/;\n\t  var curlyRe = /\\s*\\}/;\n\t  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\t\n\t  /**\n\t   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n\t   * argument is given here it must be an array with two string values: the\n\t   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n\t   * course, the default is to use mustaches (i.e. mustache.tags).\n\t   *\n\t   * A token is an array with at least 4 elements. The first element is the\n\t   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n\t   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n\t   * all text that appears outside a symbol this element is \"text\".\n\t   *\n\t   * The second element of a token is its \"value\". For mustache tags this is\n\t   * whatever else was inside the tag besides the opening symbol. For text tokens\n\t   * this is the text itself.\n\t   *\n\t   * The third and fourth elements of the token are the start and end indices,\n\t   * respectively, of the token in the original template.\n\t   *\n\t   * Tokens that are the root node of a subtree contain two more elements: 1) an\n\t   * array of tokens in the subtree and 2) the index in the original template at\n\t   * which the closing tag for that section begins.\n\t   */\n\t  function parseTemplate (template, tags) {\n\t    if (!template)\n\t      return [];\n\t\n\t    var sections = [];     // Stack to hold section tokens\n\t    var tokens = [];       // Buffer to hold the tokens\n\t    var spaces = [];       // Indices of whitespace tokens on the current line\n\t    var hasTag = false;    // Is there a {{tag}} on the current line?\n\t    var nonSpace = false;  // Is there a non-space char on the current line?\n\t\n\t    // Strips all whitespace tokens array for the current line\n\t    // if there was a {{#tag}} on it and otherwise only space.\n\t    function stripSpace () {\n\t      if (hasTag && !nonSpace) {\n\t        while (spaces.length)\n\t          delete tokens[spaces.pop()];\n\t      } else {\n\t        spaces = [];\n\t      }\n\t\n\t      hasTag = false;\n\t      nonSpace = false;\n\t    }\n\t\n\t    var openingTagRe, closingTagRe, closingCurlyRe;\n\t    function compileTags (tagsToCompile) {\n\t      if (typeof tagsToCompile === 'string')\n\t        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\t\n\t      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n\t        throw new Error('Invalid tags: ' + tagsToCompile);\n\t\n\t      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n\t      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n\t      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n\t    }\n\t\n\t    compileTags(tags || mustache.tags);\n\t\n\t    var scanner = new Scanner(template);\n\t\n\t    var start, type, value, chr, token, openSection;\n\t    while (!scanner.eos()) {\n\t      start = scanner.pos;\n\t\n\t      // Match any text between tags.\n\t      value = scanner.scanUntil(openingTagRe);\n\t\n\t      if (value) {\n\t        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n\t          chr = value.charAt(i);\n\t\n\t          if (isWhitespace(chr)) {\n\t            spaces.push(tokens.length);\n\t          } else {\n\t            nonSpace = true;\n\t          }\n\t\n\t          tokens.push([ 'text', chr, start, start + 1 ]);\n\t          start += 1;\n\t\n\t          // Check for whitespace on the current line.\n\t          if (chr === '\\n')\n\t            stripSpace();\n\t        }\n\t      }\n\t\n\t      // Match the opening tag.\n\t      if (!scanner.scan(openingTagRe))\n\t        break;\n\t\n\t      hasTag = true;\n\t\n\t      // Get the tag type.\n\t      type = scanner.scan(tagRe) || 'name';\n\t      scanner.scan(whiteRe);\n\t\n\t      // Get the tag value.\n\t      if (type === '=') {\n\t        value = scanner.scanUntil(equalsRe);\n\t        scanner.scan(equalsRe);\n\t        scanner.scanUntil(closingTagRe);\n\t      } else if (type === '{') {\n\t        value = scanner.scanUntil(closingCurlyRe);\n\t        scanner.scan(curlyRe);\n\t        scanner.scanUntil(closingTagRe);\n\t        type = '&';\n\t      } else {\n\t        value = scanner.scanUntil(closingTagRe);\n\t      }\n\t\n\t      // Match the closing tag.\n\t      if (!scanner.scan(closingTagRe))\n\t        throw new Error('Unclosed tag at ' + scanner.pos);\n\t\n\t      token = [ type, value, start, scanner.pos ];\n\t      tokens.push(token);\n\t\n\t      if (type === '#' || type === '^') {\n\t        sections.push(token);\n\t      } else if (type === '/') {\n\t        // Check section nesting.\n\t        openSection = sections.pop();\n\t\n\t        if (!openSection)\n\t          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\t\n\t        if (openSection[1] !== value)\n\t          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n\t      } else if (type === 'name' || type === '{' || type === '&') {\n\t        nonSpace = true;\n\t      } else if (type === '=') {\n\t        // Set the tags for the next time around.\n\t        compileTags(value);\n\t      }\n\t    }\n\t\n\t    // Make sure there are no open sections when we're done.\n\t    openSection = sections.pop();\n\t\n\t    if (openSection)\n\t      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\t\n\t    return nestTokens(squashTokens(tokens));\n\t  }\n\t\n\t  /**\n\t   * Combines the values of consecutive text tokens in the given `tokens` array\n\t   * to a single token.\n\t   */\n\t  function squashTokens (tokens) {\n\t    var squashedTokens = [];\n\t\n\t    var token, lastToken;\n\t    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n\t      token = tokens[i];\n\t\n\t      if (token) {\n\t        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n\t          lastToken[1] += token[1];\n\t          lastToken[3] = token[3];\n\t        } else {\n\t          squashedTokens.push(token);\n\t          lastToken = token;\n\t        }\n\t      }\n\t    }\n\t\n\t    return squashedTokens;\n\t  }\n\t\n\t  /**\n\t   * Forms the given array of `tokens` into a nested tree structure where\n\t   * tokens that represent a section have two additional items: 1) an array of\n\t   * all tokens that appear in that section and 2) the index in the original\n\t   * template that represents the end of that section.\n\t   */\n\t  function nestTokens (tokens) {\n\t    var nestedTokens = [];\n\t    var collector = nestedTokens;\n\t    var sections = [];\n\t\n\t    var token, section;\n\t    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n\t      token = tokens[i];\n\t\n\t      switch (token[0]) {\n\t        case '#':\n\t        case '^':\n\t          collector.push(token);\n\t          sections.push(token);\n\t          collector = token[4] = [];\n\t          break;\n\t        case '/':\n\t          section = sections.pop();\n\t          section[5] = token[2];\n\t          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n\t          break;\n\t        default:\n\t          collector.push(token);\n\t      }\n\t    }\n\t\n\t    return nestedTokens;\n\t  }\n\t\n\t  /**\n\t   * A simple string scanner that is used by the template parser to find\n\t   * tokens in template strings.\n\t   */\n\t  function Scanner (string) {\n\t    this.string = string;\n\t    this.tail = string;\n\t    this.pos = 0;\n\t  }\n\t\n\t  /**\n\t   * Returns `true` if the tail is empty (end of string).\n\t   */\n\t  Scanner.prototype.eos = function eos () {\n\t    return this.tail === '';\n\t  };\n\t\n\t  /**\n\t   * Tries to match the given regular expression at the current position.\n\t   * Returns the matched text if it can match, the empty string otherwise.\n\t   */\n\t  Scanner.prototype.scan = function scan (re) {\n\t    var match = this.tail.match(re);\n\t\n\t    if (!match || match.index !== 0)\n\t      return '';\n\t\n\t    var string = match[0];\n\t\n\t    this.tail = this.tail.substring(string.length);\n\t    this.pos += string.length;\n\t\n\t    return string;\n\t  };\n\t\n\t  /**\n\t   * Skips all text until the given regular expression can be matched. Returns\n\t   * the skipped string, which is the entire tail if no match can be made.\n\t   */\n\t  Scanner.prototype.scanUntil = function scanUntil (re) {\n\t    var index = this.tail.search(re), match;\n\t\n\t    switch (index) {\n\t      case -1:\n\t        match = this.tail;\n\t        this.tail = '';\n\t        break;\n\t      case 0:\n\t        match = '';\n\t        break;\n\t      default:\n\t        match = this.tail.substring(0, index);\n\t        this.tail = this.tail.substring(index);\n\t    }\n\t\n\t    this.pos += match.length;\n\t\n\t    return match;\n\t  };\n\t\n\t  /**\n\t   * Represents a rendering context by wrapping a view object and\n\t   * maintaining a reference to the parent context.\n\t   */\n\t  function Context (view, parentContext) {\n\t    this.view = view;\n\t    this.cache = { '.': this.view };\n\t    this.parent = parentContext;\n\t  }\n\t\n\t  /**\n\t   * Creates a new context using the given view with this context\n\t   * as the parent.\n\t   */\n\t  Context.prototype.push = function push (view) {\n\t    return new Context(view, this);\n\t  };\n\t\n\t  /**\n\t   * Returns the value of the given name in this context, traversing\n\t   * up the context hierarchy if the value is absent in this context's view.\n\t   */\n\t  Context.prototype.lookup = function lookup (name) {\n\t    var cache = this.cache;\n\t\n\t    var value;\n\t    if (cache.hasOwnProperty(name)) {\n\t      value = cache[name];\n\t    } else {\n\t      var context = this, names, index, lookupHit = false;\n\t\n\t      while (context) {\n\t        if (name.indexOf('.') > 0) {\n\t          value = context.view;\n\t          names = name.split('.');\n\t          index = 0;\n\t\n\t          /**\n\t           * Using the dot notion path in `name`, we descend through the\n\t           * nested objects.\n\t           *\n\t           * To be certain that the lookup has been successful, we have to\n\t           * check if the last object in the path actually has the property\n\t           * we are looking for. We store the result in `lookupHit`.\n\t           *\n\t           * This is specially necessary for when the value has been set to\n\t           * `undefined` and we want to avoid looking up parent contexts.\n\t           **/\n\t          while (value != null && index < names.length) {\n\t            if (index === names.length - 1)\n\t              lookupHit = hasProperty(value, names[index]);\n\t\n\t            value = value[names[index++]];\n\t          }\n\t        } else {\n\t          value = context.view[name];\n\t          lookupHit = hasProperty(context.view, name);\n\t        }\n\t\n\t        if (lookupHit)\n\t          break;\n\t\n\t        context = context.parent;\n\t      }\n\t\n\t      cache[name] = value;\n\t    }\n\t\n\t    if (isFunction(value))\n\t      value = value.call(this.view);\n\t\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * A Writer knows how to take a stream of tokens and render them to a\n\t   * string, given a context. It also maintains a cache of templates to\n\t   * avoid the need to parse the same template twice.\n\t   */\n\t  function Writer () {\n\t    this.cache = {};\n\t  }\n\t\n\t  /**\n\t   * Clears all cached templates in this writer.\n\t   */\n\t  Writer.prototype.clearCache = function clearCache () {\n\t    this.cache = {};\n\t  };\n\t\n\t  /**\n\t   * Parses and caches the given `template` and returns the array of tokens\n\t   * that is generated from the parse.\n\t   */\n\t  Writer.prototype.parse = function parse (template, tags) {\n\t    var cache = this.cache;\n\t    var tokens = cache[template];\n\t\n\t    if (tokens == null)\n\t      tokens = cache[template] = parseTemplate(template, tags);\n\t\n\t    return tokens;\n\t  };\n\t\n\t  /**\n\t   * High-level method that is used to render the given `template` with\n\t   * the given `view`.\n\t   *\n\t   * The optional `partials` argument may be an object that contains the\n\t   * names and templates of partials that are used in the template. It may\n\t   * also be a function that is used to load partial templates on the fly\n\t   * that takes a single argument: the name of the partial.\n\t   */\n\t  Writer.prototype.render = function render (template, view, partials) {\n\t    var tokens = this.parse(template);\n\t    var context = (view instanceof Context) ? view : new Context(view);\n\t    return this.renderTokens(tokens, context, partials, template);\n\t  };\n\t\n\t  /**\n\t   * Low-level method that renders the given array of `tokens` using\n\t   * the given `context` and `partials`.\n\t   *\n\t   * Note: The `originalTemplate` is only ever used to extract the portion\n\t   * of the original template that was contained in a higher-order section.\n\t   * If the template doesn't use higher-order sections, this argument may\n\t   * be omitted.\n\t   */\n\t  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n\t    var buffer = '';\n\t\n\t    var token, symbol, value;\n\t    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n\t      value = undefined;\n\t      token = tokens[i];\n\t      symbol = token[0];\n\t\n\t      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n\t      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n\t      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n\t      else if (symbol === '&') value = this.unescapedValue(token, context);\n\t      else if (symbol === 'name') value = this.escapedValue(token, context);\n\t      else if (symbol === 'text') value = this.rawValue(token);\n\t\n\t      if (value !== undefined)\n\t        buffer += value;\n\t    }\n\t\n\t    return buffer;\n\t  };\n\t\n\t  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n\t    var self = this;\n\t    var buffer = '';\n\t    var value = context.lookup(token[1]);\n\t\n\t    // This function is used to render an arbitrary template\n\t    // in the current context by higher-order sections.\n\t    function subRender (template) {\n\t      return self.render(template, context, partials);\n\t    }\n\t\n\t    if (!value) return;\n\t\n\t    if (isArray(value)) {\n\t      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n\t        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n\t      }\n\t    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n\t      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n\t    } else if (isFunction(value)) {\n\t      if (typeof originalTemplate !== 'string')\n\t        throw new Error('Cannot use higher-order sections without the original template');\n\t\n\t      // Extract the portion of the original template that the section contains.\n\t      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\t\n\t      if (value != null)\n\t        buffer += value;\n\t    } else {\n\t      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n\t    }\n\t    return buffer;\n\t  };\n\t\n\t  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n\t    var value = context.lookup(token[1]);\n\t\n\t    // Use JavaScript's definition of falsy. Include empty arrays.\n\t    // See https://github.com/janl/mustache.js/issues/186\n\t    if (!value || (isArray(value) && value.length === 0))\n\t      return this.renderTokens(token[4], context, partials, originalTemplate);\n\t  };\n\t\n\t  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n\t    if (!partials) return;\n\t\n\t    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n\t    if (value != null)\n\t      return this.renderTokens(this.parse(value), context, partials, value);\n\t  };\n\t\n\t  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n\t    var value = context.lookup(token[1]);\n\t    if (value != null)\n\t      return value;\n\t  };\n\t\n\t  Writer.prototype.escapedValue = function escapedValue (token, context) {\n\t    var value = context.lookup(token[1]);\n\t    if (value != null)\n\t      return mustache.escape(value);\n\t  };\n\t\n\t  Writer.prototype.rawValue = function rawValue (token) {\n\t    return token[1];\n\t  };\n\t\n\t  mustache.name = 'mustache.js';\n\t  mustache.version = '2.3.0';\n\t  mustache.tags = [ '{{', '}}' ];\n\t\n\t  // All high-level mustache.* functions use this writer.\n\t  var defaultWriter = new Writer();\n\t\n\t  /**\n\t   * Clears all cached templates in the default writer.\n\t   */\n\t  mustache.clearCache = function clearCache () {\n\t    return defaultWriter.clearCache();\n\t  };\n\t\n\t  /**\n\t   * Parses and caches the given template in the default writer and returns the\n\t   * array of tokens it contains. Doing this ahead of time avoids the need to\n\t   * parse templates on the fly as they are rendered.\n\t   */\n\t  mustache.parse = function parse (template, tags) {\n\t    return defaultWriter.parse(template, tags);\n\t  };\n\t\n\t  /**\n\t   * Renders the `template` with the given `view` and `partials` using the\n\t   * default writer.\n\t   */\n\t  mustache.render = function render (template, view, partials) {\n\t    if (typeof template !== 'string') {\n\t      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n\t                          'but \"' + typeStr(template) + '\" was given as the first ' +\n\t                          'argument for mustache#render(template, view, partials)');\n\t    }\n\t\n\t    return defaultWriter.render(template, view, partials);\n\t  };\n\t\n\t  // This is here for backwards compatibility with 0.4.x.,\n\t  /*eslint-disable */ // eslint wants camel cased function name\n\t  mustache.to_html = function to_html (template, view, partials, send) {\n\t    /*eslint-enable*/\n\t\n\t    var result = mustache.render(template, view, partials);\n\t\n\t    if (isFunction(send)) {\n\t      send(result);\n\t    } else {\n\t      return result;\n\t    }\n\t  };\n\t\n\t  // Export the escaping function so that the user may override it.\n\t  // See https://github.com/janl/mustache.js/issues/244\n\t  mustache.escape = escapeHtml;\n\t\n\t  // Export these mainly for testing, but also for advanced usage.\n\t  mustache.Scanner = Scanner;\n\t  mustache.Context = Context;\n\t  mustache.Writer = Writer;\n\t\n\t  return mustache;\n\t}));\n\n\n/***/ },\n\n/***/ 153:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(19);\n\t    var cockpit = __webpack_require__(2);\n\t\n\t    var unique_number = 0;\n\t    function unique() {\n\t        unique_number += 1;\n\t        return \"unique\" + -(new Date()) + -unique_number;\n\t    }\n\t\n\t    /* Dialog Patterns */\n\t\n\t    function clear_errors(sel) {\n\t        sel.find(\".dialog-error\").remove();\n\t        sel.find(\".has-error\").removeClass(\"has-error\");\n\t        sel.find(\".dialog-wrapper\").off(\".dialog-error\");\n\t        sel.off(\".dialog-error\");\n\t    }\n\t\n\t    function field_error(target, error) {\n\t        var wrapper = target.parent();\n\t        var next, refresh;\n\t\n\t        if (!wrapper.is(\".dialog-wrapper\")) {\n\t            wrapper = $(\"<div class='dialog-wrapper'>\").insertBefore(target);\n\t\n\t            /*\n\t             * Some bootstrap plugins replace html controls with their own\n\t             * stuff, so we have to account for that here.\n\t             */\n\t\n\t            next = target.next();\n\t            if (next.is(\".bootstrap-select\") && next.selectpicker) {\n\t                next.remove();\n\t                refresh = next.selectpicker;\n\t            }\n\t\n\t            target.remove().appendTo(wrapper);\n\t\n\t            if (refresh)\n\t                refresh.call(target);\n\t        }\n\t\n\t        var message;\n\t        if (error.message)\n\t            message = $(\"<div class='dialog-error help-block'>\").text(error.message);\n\t        wrapper.addClass(\"has-error\").append(message);\n\t\n\t        if (!wrapper.hasClass(\"error-keep\")) {\n\t            wrapper.on(\"keypress.dialog-error change.dialog-error\", function() {\n\t                wrapper.removeClass(\"has-error\")\n\t                    .find(\".dialog-error.help-block\").css(\"visibility\", \"hidden\");\n\t            });\n\t        }\n\t    }\n\t\n\t    function global_error(sel, error) {\n\t        var alert = $(\"<div class='alert alert-danger dialog-error'>\");\n\t        var text = error.message || error.toString();\n\t        alert.text(text);\n\t        $(\"<span class='fa fa-exclamation-triangle'>\").prependTo(alert);\n\t\n\t        /* Always log global dialog errors for easier debugging */\n\t        console.warn(text);\n\t\n\t        var footer = sel.find(\".modal-footer\");\n\t        if (footer.length)\n\t            alert.prependTo(footer);\n\t        else\n\t            alert.appendTo(sel);\n\t    }\n\t\n\t    function display_errors(sel, errors) {\n\t        clear_errors(sel);\n\t\n\t        /* The list of errors can also be passed as an array */\n\t        if (errors.length == 1 && $.isArray(errors[0]))\n\t            errors = errors[0];\n\t\n\t        var any = false;\n\t        errors.forEach(function(error) {\n\t            var target;\n\t            if (error) {\n\t                target = sel.find(error.target);\n\t\n\t                /* Errors for a specific field added below that field */\n\t                if (target && target.length)\n\t                    field_error(target, error);\n\t                else\n\t                    global_error(sel, error);\n\t\n\t                any = true;\n\t            }\n\t        });\n\t\n\t        if (!any)\n\t            return;\n\t\n\t        /* When dialog is shown again, remove all mods */\n\t        sel.on(\"show.bs.modal.dialog-error\", function() {\n\t            clear_errors(sel);\n\t        });\n\t    }\n\t\n\t    function DialogWait(promise, handle) {\n\t        this.promise = promise;\n\t        this.disabled = [];\n\t        this.handle = handle;\n\t    }\n\t\n\t    function clear_wait(sel) {\n\t        var data = sel.data(\"dialog-wait\");\n\t        sel.data(\"dialog-wait\", null);\n\t\n\t        sel.find(\".dialog-wait-ct\").remove();\n\t        sel.find(\".btn\").off(\".dialog-wait\");\n\t        sel.off(\".dialog-wait\");\n\t\n\t        if (data) {\n\t            data.disabled.forEach(function(ctl) {\n\t                ctl.removeAttr(\"disabled\");\n\t            });\n\t        }\n\t    }\n\t\n\t    function display_wait(sel, promise, handle) {\n\t        clear_wait(sel);\n\t\n\t        if (!promise) {\n\t            if (handle)\n\t                sel.modal(\"hide\");\n\t            return sel;\n\t        }\n\t\n\t        /* Clear all errors in the dialog */\n\t        if (handle)\n\t            display_errors(sel, []);\n\t\n\t        var wait = $(\"<div class='dialog-wait-ct pull-left'>\");\n\t        $(\"<div class='spinner spinner-sm'>\").appendTo(wait);\n\t        var message = $(\"<span>\").appendTo(wait);\n\t\n\t        sel.find(\".modal-footer button\").first().before(wait);\n\t\n\t        var data = new DialogWait(promise, handle);\n\t        sel.data(\"dialog-wait\", data);\n\t\n\t        var cancellation = promise.cancel || promise.close;\n\t        var cancelled = false;\n\t\n\t        /* Disable everything and stash previous disabled state */\n\t        var controls = sel.find(\".form-control\").add(\".btn\", sel);\n\t        if (cancellation)\n\t            controls = controls.not(\"[data-dismiss]\").not(\".btn-cancel\");\n\t        controls.each(function() {\n\t            var ctl = $(this);\n\t            if (!ctl.attr(\"disabled\")) {\n\t                data.disabled.push(ctl);\n\t                ctl.attr(\"disabled\", \"disabled\");\n\t            }\n\t        });\n\t\n\t        sel.find(\".btn[data-dismiss], .btn-cancel\").on(\"click.dialog-wait\", function() {\n\t            cancelled = true;\n\t            if (cancellation)\n\t                cancellation.apply(promise);\n\t            return false;\n\t        });\n\t\n\t        /* When dialog is shown again, remove all mods */\n\t        sel.on(\"hide.bs.modal.dialog-wait\", function() {\n\t            clear_wait(sel);\n\t        });\n\t\n\t        /*\n\t         * There is no way to remove a callback from a promise\n\t         * so we have to be careful to only react if still\n\t         * processing the same promise.\n\t         */\n\t        function restore() {\n\t            var state, data = sel.data(\"dialog-wait\");\n\t            if (data && data.promise === promise) {\n\t                clear_wait(sel);\n\t                state = promise.state();\n\t                if (cancelled || (state == \"resolved\" && data.handle))\n\t                    sel.modal('hide');\n\t                else if (state == \"rejected\" && data.handle)\n\t                    display_errors(sel, [ arguments[0] ]);\n\t            }\n\t        }\n\t\n\t        function update(arg) {\n\t            var data = sel.data(\"dialog-wait\");\n\t            if (data && data.promise === promise) {\n\t                if (typeof arg !== \"string\")\n\t                    arg = \"\";\n\t                message.text(arg);\n\t            }\n\t        }\n\t\n\t        promise\n\t            .always(restore)\n\t            .progress(update);\n\t\n\t        return sel;\n\t    }\n\t\n\t    $.fn.dialog = function dialog(action /* ... */) {\n\t        if (action === \"failure\")\n\t            return display_errors(this, Array.prototype.slice.call(arguments, 1));\n\t        else if (action === \"wait\")\n\t            return display_wait(this, arguments[1]);\n\t        else if (action === \"promise\")\n\t            return display_wait(this, arguments[1], true);\n\t        else\n\t            console.warn(\"unknown dialog action: \" + action);\n\t    };\n\t\n\t    window.addEventListener(\"hashchange\", function() {\n\t        $(\".modal\").modal(\"hide\");\n\t    });\n\t\n\t    /*\n\t     * OnOff switch pattern\n\t     */\n\t\n\t    function onoff_refresh(sel) {\n\t        /* During testing, no Cockpit dependency */\n\t        var _ = cockpit.gettext || function(x) { return x; };\n\t\n\t        sel = sel.find(\".btn-onoff-ct\").addBack().filter(\".btn-onoff-ct\");\n\t        sel.each(function(x, el) {\n\t            var self = $(el)\n\t                .attr(\"data-toggle\", \"buttons\")\n\t                .addClass(\"btn-group\");\n\t            var value = self.onoff(\"value\");\n\t            var buttons = self.find(\".btn\");\n\t            var name = self.find(\"input\").first().attr(\"name\") || unique();\n\t            var i, input, text;\n\t            for (i = buttons.length; i < 2; i++) {\n\t                input = $('<input type=\"radio\" autocomplete=\"off\">');\n\t                text = document.createTextNode(i === 0 ? _(\"On\") : _(\"Off\"));\n\t                self.append($('<label class=\"btn\">').append(input, text));\n\t                buttons = null;\n\t            }\n\t            buttons = buttons || self.find(\".btn\");\n\t            buttons.find(\"input\").attr(\"name\", name);\n\t            onoff_change(self, !!value);\n\t        });\n\t        return sel;\n\t    }\n\t\n\t    function onoff_value(sel) {\n\t        return sel.find(\".btn\").first().hasClass(\"active\");\n\t    }\n\t\n\t    function onoff_change(sel, value) {\n\t        return sel.each(function(i, el) {\n\t            var buttons = $(el).find(\".btn\");\n\t            buttons.first().toggleClass(\"active\", !!value).find(\"input\").prop(\"checked\", !!value);\n\t            buttons.last().toggleClass(\"active\", !value).find(\"input\").prop(\"checked\", !value);\n\t        });\n\t    }\n\t\n\t    $.fn.onoff = function onoff(action /* ... */) {\n\t        if (arguments.length === 0 || action == \"refresh\") {\n\t            return onoff_refresh(this);\n\t        } else if (action === \"value\") {\n\t            if (arguments.length === 1)\n\t                return onoff_value(this);\n\t            else\n\t                return onoff_change(this, arguments[1]);\n\t        } else if (action == \"disabled\") {\n\t            return this.find(\".btn\").toggleClass(\"disabled\", arguments[1]);\n\t        } else {\n\t            console.warn(\"unknown switch action: \" + action);\n\t        }\n\t    };\n\t\n\t    /* ----------------------------------------------------------------------------\n\t     * Sliders\n\t     *\n\t     * <div class=\"slider\" value=\"0.5\">\n\t     *    <div class=\"slider-bar\">\n\t     *        <div class=\"slider-thumb\"></div>\n\t     *    </div>\n\t     *    <div class=\"slider-bar\">\n\t     *        <!-- optional left overs -->\n\t     *    </div>\n\t     * </div>\n\t     *\n\t     * A slider control. The first div.slider-bar is the one that is resized.\n\t     * The value will be bounded between 0 and 1 as a floating point number.\n\t     *\n\t     * The following div.slider-bar if present is resized to fill the remainder\n\t     * of the slider if not given a specific size. You can put more div.slider-bar\n\t     * inside it to reflect squashing other prevous allocations.\n\t     *\n\t     * If the following div.slider-bar have a width specified, then the\n\t     * slider supports the concept of overflowing. If the slider overflows\n\t     * it will get the .slider-warning class and go a bit red.\n\t     *\n\t     * On document creation any div.slider are automatically turned into\n\t     * Bar graphs.\n\t     *\n\t     * Slider has the following extra read/write properties:\n\t     *\n\t     * .value: the floating point value the slider is set to.\n\t     * .disabled: whether to display slider as disabled and refuse interacton.\n\t     *\n\t     * Slider has this event:\n\t     *\n\t     * on('change'): fired when the slider changes, passes value as additional arg.\n\t     */\n\t\n\t    function resize_flex(slider, flex, total, part) {\n\t        var value = 0;\n\t        if (part > total)\n\t            value = 1;\n\t        else if (part < 0 || isNaN(part))\n\t            value = 0;\n\t        else if (!isNaN(total) && total > 0 && part >= 0)\n\t            value = (part / total);\n\t        $(flex).css('width', (value * 100) + \"%\").\n\t            next(\"div\").css('margin-left', $(flex).css('width'));\n\t\n\t        /* Set the property and the attribute */\n\t        slider.value = value;\n\t    }\n\t\n\t    function update_value(slider) {\n\t        resize_flex(slider, $(slider).children(\"div.slider-bar\").first()[0], 1, slider.value);\n\t    }\n\t\n\t    function check_overflow(slider) {\n\t        $(slider).toggleClass(\"slider-warning\",\n\t                              slider.offsetWidth < slider.scrollWidth);\n\t    }\n\t\n\t    function setup_slider(slider) {\n\t        $(slider).attr('unselectable', 'on');\n\t\n\t        Object.defineProperty(slider, \"value\", {\n\t            get: function() {\n\t                return parseFloat(this.getAttribute(\"value\"));\n\t            },\n\t            set: function(v) {\n\t                var s = String(v);\n\t                if (s != this.getAttribute(\"value\")) {\n\t                    this.setAttribute(\"value\", v);\n\t                    update_value(slider);\n\t                    check_overflow(slider);\n\t                }\n\t            }\n\t        });\n\t\n\t        Object.defineProperty(slider, \"disabled\", {\n\t            get: function() {\n\t                if (!this.hasAttribute(\"disabled\"))\n\t                    return false;\n\t                return this.getAttribute(\"disabled\").toLowerCase() != \"false\";\n\t            },\n\t            set: function(v) {\n\t                this.setAttribute(\"disabled\", v ? \"true\" : \"false\");\n\t            }\n\t        });\n\t\n\t        update_value(slider);\n\t        check_overflow(slider);\n\t\n\t        $(slider).on(\"change\", function() {\n\t            update_value(slider);\n\t            $(slider).toggleClass(\"slider-disabled\", slider.disabled);\n\t        });\n\t\n\t        if (slider.disabled)\n\t            $(slider).addClass(\"slider-disabled\");\n\t\n\t        $(slider).on(\"mousedown\", function(ev) {\n\t            if (slider.disabled)\n\t                return true; /* default action */\n\t            var flex;\n\t            var offset = $(slider).offset().left;\n\t            if ($(ev.target).hasClass(\"slider-thumb\")) {\n\t                var hitx  = (ev.offsetX || ev.clientX - $(ev.target).offset().left);\n\t                offset += (hitx - $(ev.target).outerWidth() / 2);\n\t                flex = $(ev.target).parent()[0];\n\t            } else {\n\t                flex = $(slider).children(\"div.slider-bar\").first()[0];\n\t                resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n\t                $(slider).trigger(\"change\", [slider.value]);\n\t                check_overflow(slider);\n\t            }\n\t\n\t            $(document).\n\t                on(\"mousemove.slider\", function(ev) {\n\t                    resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n\t                    $(slider).trigger(\"change\", [slider.value]);\n\t                    check_overflow(slider);\n\t                    return false;\n\t                }).\n\t                on(\"mouseup.slider\", function(ev) {\n\t                    $(document).\n\t                        off(\"mousemove.slider\").\n\t                        off(\"mouseup.slider\");\n\t                    return false;\n\t                });\n\t            return false; /* no default action */\n\t        });\n\t    }\n\t\n\t    function setup_sliders() {\n\t        $(\"div.slider\").each(function() {\n\t            setup_slider(this);\n\t        });\n\t    }\n\t\n\t    $.fn.slider = function Slider(action) {\n\t        var sel = this;\n\t        if (arguments.length === 0 || action == \"refresh\") {\n\t            sel.each(function() {\n\t                setup_slider(this);\n\t            });\n\t            return sel;\n\t        } else {\n\t            console.warn(\"unknown slider action: \" + action);\n\t        }\n\t    };\n\t\n\t    $(document).ready(setup_sliders);\n\t\n\t    /* -----------------------------------------------------------------------------\n\t     * Privileged UI actions.\n\t     */\n\t\n\t    // placement is optional, \"top\", \"left\", \"bottom\", \"right\"\n\t    // by default, tooltip is attached to \"this\" element; can be attached to\n\t    // another one with setting \"tooltip_element\" (for <a> links)\n\t    $.fn.update_privileged = function update_privileged(perm, denied_message, placement, tooltip_element) {\n\t        var allowed = (perm.allowed !== false);\n\t        var selector = this;\n\t        if (!tooltip_element)\n\t            tooltip_element = $(this);\n\t\n\t        selector.each(function() {\n\t            // preserve old title first time to use when allowed\n\t            // activate tooltip\n\t            var allowed_key = 'allowed-title';\n\t            if (typeof $(this).data(allowed_key) === 'undefined' ||\n\t                   $(this).data(allowed_key) === false)\n\t                $(this).data(allowed_key, $(this).attr('title') || \"\");\n\t\n\t            var options = { html: true };\n\t            if (placement)\n\t                options['placement'] = placement;\n\t\n\t            tooltip_element.tooltip(options);\n\t\n\t            if ($(this).hasClass(\"disabled\") === allowed) {\n\t              $(this).toggleClass(\"disabled\", !allowed);\n\t              tooltip_element.attr('data-original-title', null);\n\t\n\t              if (allowed)\n\t                  tooltip_element.attr('title', $(this).data(allowed_key));\n\t              else\n\t                  tooltip_element.attr('title', denied_message);\n\t              tooltip_element.tooltip('fixTitle');\n\t            }\n\t        });\n\t\n\t        return selector;\n\t    };\n\t}());\n\n\n/***/ },\n\n/***/ 154:\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * Datepicker for Bootstrap v1.7.1 (https://github.com/uxsolutions/bootstrap-datepicker)\n\t *\n\t * Licensed under the Apache License v2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n\t */\n\t\n\t(function(factory){\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(19)], __WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports === 'object') {\n\t        factory(require('jquery'));\n\t    } else {\n\t        factory(jQuery);\n\t    }\n\t}(function($, undefined){\n\t\tfunction UTCDate(){\n\t\t\treturn new Date(Date.UTC.apply(Date, arguments));\n\t\t}\n\t\tfunction UTCToday(){\n\t\t\tvar today = new Date();\n\t\t\treturn UTCDate(today.getFullYear(), today.getMonth(), today.getDate());\n\t\t}\n\t\tfunction isUTCEquals(date1, date2) {\n\t\t\treturn (\n\t\t\t\tdate1.getUTCFullYear() === date2.getUTCFullYear() &&\n\t\t\t\tdate1.getUTCMonth() === date2.getUTCMonth() &&\n\t\t\t\tdate1.getUTCDate() === date2.getUTCDate()\n\t\t\t);\n\t\t}\n\t\tfunction alias(method, deprecationMsg){\n\t\t\treturn function(){\n\t\t\t\tif (deprecationMsg !== undefined) {\n\t\t\t\t\t$.fn.datepicker.deprecated(deprecationMsg);\n\t\t\t\t}\n\t\n\t\t\t\treturn this[method].apply(this, arguments);\n\t\t\t};\n\t\t}\n\t\tfunction isValidDate(d) {\n\t\t\treturn d && !isNaN(d.getTime());\n\t\t}\n\t\n\t\tvar DateArray = (function(){\n\t\t\tvar extras = {\n\t\t\t\tget: function(i){\n\t\t\t\t\treturn this.slice(i)[0];\n\t\t\t\t},\n\t\t\t\tcontains: function(d){\n\t\t\t\t\t// Array.indexOf is not cross-browser;\n\t\t\t\t\t// $.inArray doesn't work with Dates\n\t\t\t\t\tvar val = d && d.valueOf();\n\t\t\t\t\tfor (var i=0, l=this.length; i < l; i++)\n\t          // Use date arithmetic to allow dates with different times to match\n\t          if (0 <= this[i].valueOf() - val && this[i].valueOf() - val < 1000*60*60*24)\n\t\t\t\t\t\t\treturn i;\n\t\t\t\t\treturn -1;\n\t\t\t\t},\n\t\t\t\tremove: function(i){\n\t\t\t\t\tthis.splice(i,1);\n\t\t\t\t},\n\t\t\t\treplace: function(new_array){\n\t\t\t\t\tif (!new_array)\n\t\t\t\t\t\treturn;\n\t\t\t\t\tif (!$.isArray(new_array))\n\t\t\t\t\t\tnew_array = [new_array];\n\t\t\t\t\tthis.clear();\n\t\t\t\t\tthis.push.apply(this, new_array);\n\t\t\t\t},\n\t\t\t\tclear: function(){\n\t\t\t\t\tthis.length = 0;\n\t\t\t\t},\n\t\t\t\tcopy: function(){\n\t\t\t\t\tvar a = new DateArray();\n\t\t\t\t\ta.replace(this);\n\t\t\t\t\treturn a;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn function(){\n\t\t\t\tvar a = [];\n\t\t\t\ta.push.apply(a, arguments);\n\t\t\t\t$.extend(a, extras);\n\t\t\t\treturn a;\n\t\t\t};\n\t\t})();\n\t\n\t\n\t\t// Picker object\n\t\n\t\tvar Datepicker = function(element, options){\n\t\t\t$.data(element, 'datepicker', this);\n\t\t\tthis._process_options(options);\n\t\n\t\t\tthis.dates = new DateArray();\n\t\t\tthis.viewDate = this.o.defaultViewDate;\n\t\t\tthis.focusDate = null;\n\t\n\t\t\tthis.element = $(element);\n\t\t\tthis.isInput = this.element.is('input');\n\t\t\tthis.inputField = this.isInput ? this.element : this.element.find('input');\n\t\t\tthis.component = this.element.hasClass('date') ? this.element.find('.add-on, .input-group-addon, .btn') : false;\n\t\t\tif (this.component && this.component.length === 0)\n\t\t\t\tthis.component = false;\n\t\t\tthis.isInline = !this.component && this.element.is('div');\n\t\n\t\t\tthis.picker = $(DPGlobal.template);\n\t\n\t\t\t// Checking templates and inserting\n\t\t\tif (this._check_template(this.o.templates.leftArrow)) {\n\t\t\t\tthis.picker.find('.prev').html(this.o.templates.leftArrow);\n\t\t\t}\n\t\n\t\t\tif (this._check_template(this.o.templates.rightArrow)) {\n\t\t\t\tthis.picker.find('.next').html(this.o.templates.rightArrow);\n\t\t\t}\n\t\n\t\t\tthis._buildEvents();\n\t\t\tthis._attachEvents();\n\t\n\t\t\tif (this.isInline){\n\t\t\t\tthis.picker.addClass('datepicker-inline').appendTo(this.element);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.picker.addClass('datepicker-dropdown dropdown-menu');\n\t\t\t}\n\t\n\t\t\tif (this.o.rtl){\n\t\t\t\tthis.picker.addClass('datepicker-rtl');\n\t\t\t}\n\t\n\t\t\tif (this.o.calendarWeeks) {\n\t\t\t\tthis.picker.find('.datepicker-days .datepicker-switch, thead .datepicker-title, tfoot .today, tfoot .clear')\n\t\t\t\t\t.attr('colspan', function(i, val){\n\t\t\t\t\t\treturn Number(val) + 1;\n\t\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tthis._process_options({\n\t\t\t\tstartDate: this._o.startDate,\n\t\t\t\tendDate: this._o.endDate,\n\t\t\t\tdaysOfWeekDisabled: this.o.daysOfWeekDisabled,\n\t\t\t\tdaysOfWeekHighlighted: this.o.daysOfWeekHighlighted,\n\t\t\t\tdatesDisabled: this.o.datesDisabled\n\t\t\t});\n\t\n\t\t\tthis._allow_update = false;\n\t\t\tthis.setViewMode(this.o.startView);\n\t\t\tthis._allow_update = true;\n\t\n\t\t\tthis.fillDow();\n\t\t\tthis.fillMonths();\n\t\n\t\t\tthis.update();\n\t\n\t\t\tif (this.isInline){\n\t\t\t\tthis.show();\n\t\t\t}\n\t\t};\n\t\n\t\tDatepicker.prototype = {\n\t\t\tconstructor: Datepicker,\n\t\n\t\t\t_resolveViewName: function(view){\n\t\t\t\t$.each(DPGlobal.viewModes, function(i, viewMode){\n\t\t\t\t\tif (view === i || $.inArray(view, viewMode.names) !== -1){\n\t\t\t\t\t\tview = i;\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\treturn view;\n\t\t\t},\n\t\n\t\t\t_resolveDaysOfWeek: function(daysOfWeek){\n\t\t\t\tif (!$.isArray(daysOfWeek))\n\t\t\t\t\tdaysOfWeek = daysOfWeek.split(/[,\\s]*/);\n\t\t\t\treturn $.map(daysOfWeek, Number);\n\t\t\t},\n\t\n\t\t\t_check_template: function(tmp){\n\t\t\t\ttry {\n\t\t\t\t\t// If empty\n\t\t\t\t\tif (tmp === undefined || tmp === \"\") {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\t\t\t\t\t// If no html, everything ok\n\t\t\t\t\tif ((tmp.match(/[<>]/g) || []).length <= 0) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t\t// Checking if html is fine\n\t\t\t\t\tvar jDom = $(tmp);\n\t\t\t\t\treturn jDom.length > 0;\n\t\t\t\t}\n\t\t\t\tcatch (ex) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\t_process_options: function(opts){\n\t\t\t\t// Store raw options for reference\n\t\t\t\tthis._o = $.extend({}, this._o, opts);\n\t\t\t\t// Processed options\n\t\t\t\tvar o = this.o = $.extend({}, this._o);\n\t\n\t\t\t\t// Check if \"de-DE\" style date is available, if not language should\n\t\t\t\t// fallback to 2 letter code eg \"de\"\n\t\t\t\tvar lang = o.language;\n\t\t\t\tif (!dates[lang]){\n\t\t\t\t\tlang = lang.split('-')[0];\n\t\t\t\t\tif (!dates[lang])\n\t\t\t\t\t\tlang = defaults.language;\n\t\t\t\t}\n\t\t\t\to.language = lang;\n\t\n\t\t\t\t// Retrieve view index from any aliases\n\t\t\t\to.startView = this._resolveViewName(o.startView);\n\t\t\t\to.minViewMode = this._resolveViewName(o.minViewMode);\n\t\t\t\to.maxViewMode = this._resolveViewName(o.maxViewMode);\n\t\n\t\t\t\t// Check view is between min and max\n\t\t\t\to.startView = Math.max(this.o.minViewMode, Math.min(this.o.maxViewMode, o.startView));\n\t\n\t\t\t\t// true, false, or Number > 0\n\t\t\t\tif (o.multidate !== true){\n\t\t\t\t\to.multidate = Number(o.multidate) || false;\n\t\t\t\t\tif (o.multidate !== false)\n\t\t\t\t\t\to.multidate = Math.max(0, o.multidate);\n\t\t\t\t}\n\t\t\t\to.multidateSeparator = String(o.multidateSeparator);\n\t\n\t\t\t\to.weekStart %= 7;\n\t\t\t\to.weekEnd = (o.weekStart + 6) % 7;\n\t\n\t\t\t\tvar format = DPGlobal.parseFormat(o.format);\n\t\t\t\tif (o.startDate !== -Infinity){\n\t\t\t\t\tif (!!o.startDate){\n\t\t\t\t\t\tif (o.startDate instanceof Date)\n\t\t\t\t\t\t\to.startDate = this._local_to_utc(this._zero_time(o.startDate));\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\to.startDate = DPGlobal.parseDate(o.startDate, format, o.language, o.assumeNearbyYear);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\to.startDate = -Infinity;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (o.endDate !== Infinity){\n\t\t\t\t\tif (!!o.endDate){\n\t\t\t\t\t\tif (o.endDate instanceof Date)\n\t\t\t\t\t\t\to.endDate = this._local_to_utc(this._zero_time(o.endDate));\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\to.endDate = DPGlobal.parseDate(o.endDate, format, o.language, o.assumeNearbyYear);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\to.endDate = Infinity;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\to.daysOfWeekDisabled = this._resolveDaysOfWeek(o.daysOfWeekDisabled||[]);\n\t\t\t\to.daysOfWeekHighlighted = this._resolveDaysOfWeek(o.daysOfWeekHighlighted||[]);\n\t\n\t\t\t\to.datesDisabled = o.datesDisabled||[];\n\t\t\t\tif (!$.isArray(o.datesDisabled)) {\n\t\t\t\t\to.datesDisabled = o.datesDisabled.split(',');\n\t\t\t\t}\n\t\t\t\to.datesDisabled = $.map(o.datesDisabled, function(d){\n\t\t\t\t\treturn DPGlobal.parseDate(d, format, o.language, o.assumeNearbyYear);\n\t\t\t\t});\n\t\n\t\t\t\tvar plc = String(o.orientation).toLowerCase().split(/\\s+/g),\n\t\t\t\t\t_plc = o.orientation.toLowerCase();\n\t\t\t\tplc = $.grep(plc, function(word){\n\t\t\t\t\treturn /^auto|left|right|top|bottom$/.test(word);\n\t\t\t\t});\n\t\t\t\to.orientation = {x: 'auto', y: 'auto'};\n\t\t\t\tif (!_plc || _plc === 'auto')\n\t\t\t\t\t; // no action\n\t\t\t\telse if (plc.length === 1){\n\t\t\t\t\tswitch (plc[0]){\n\t\t\t\t\t\tcase 'top':\n\t\t\t\t\t\tcase 'bottom':\n\t\t\t\t\t\t\to.orientation.y = plc[0];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'left':\n\t\t\t\t\t\tcase 'right':\n\t\t\t\t\t\t\to.orientation.x = plc[0];\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t_plc = $.grep(plc, function(word){\n\t\t\t\t\t\treturn /^left|right$/.test(word);\n\t\t\t\t\t});\n\t\t\t\t\to.orientation.x = _plc[0] || 'auto';\n\t\n\t\t\t\t\t_plc = $.grep(plc, function(word){\n\t\t\t\t\t\treturn /^top|bottom$/.test(word);\n\t\t\t\t\t});\n\t\t\t\t\to.orientation.y = _plc[0] || 'auto';\n\t\t\t\t}\n\t\t\t\tif (o.defaultViewDate instanceof Date || typeof o.defaultViewDate === 'string') {\n\t\t\t\t\to.defaultViewDate = DPGlobal.parseDate(o.defaultViewDate, format, o.language, o.assumeNearbyYear);\n\t\t\t\t} else if (o.defaultViewDate) {\n\t\t\t\t\tvar year = o.defaultViewDate.year || new Date().getFullYear();\n\t\t\t\t\tvar month = o.defaultViewDate.month || 0;\n\t\t\t\t\tvar day = o.defaultViewDate.day || 1;\n\t\t\t\t\to.defaultViewDate = UTCDate(year, month, day);\n\t\t\t\t} else {\n\t\t\t\t\to.defaultViewDate = UTCToday();\n\t\t\t\t}\n\t\t\t},\n\t\t\t_events: [],\n\t\t\t_secondaryEvents: [],\n\t\t\t_applyEvents: function(evs){\n\t\t\t\tfor (var i=0, el, ch, ev; i < evs.length; i++){\n\t\t\t\t\tel = evs[i][0];\n\t\t\t\t\tif (evs[i].length === 2){\n\t\t\t\t\t\tch = undefined;\n\t\t\t\t\t\tev = evs[i][1];\n\t\t\t\t\t} else if (evs[i].length === 3){\n\t\t\t\t\t\tch = evs[i][1];\n\t\t\t\t\t\tev = evs[i][2];\n\t\t\t\t\t}\n\t\t\t\t\tel.on(ev, ch);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_unapplyEvents: function(evs){\n\t\t\t\tfor (var i=0, el, ev, ch; i < evs.length; i++){\n\t\t\t\t\tel = evs[i][0];\n\t\t\t\t\tif (evs[i].length === 2){\n\t\t\t\t\t\tch = undefined;\n\t\t\t\t\t\tev = evs[i][1];\n\t\t\t\t\t} else if (evs[i].length === 3){\n\t\t\t\t\t\tch = evs[i][1];\n\t\t\t\t\t\tev = evs[i][2];\n\t\t\t\t\t}\n\t\t\t\t\tel.off(ev, ch);\n\t\t\t\t}\n\t\t\t},\n\t\t\t_buildEvents: function(){\n\t            var events = {\n\t                keyup: $.proxy(function(e){\n\t                    if ($.inArray(e.keyCode, [27, 37, 39, 38, 40, 32, 13, 9]) === -1)\n\t                        this.update();\n\t                }, this),\n\t                keydown: $.proxy(this.keydown, this),\n\t                paste: $.proxy(this.paste, this)\n\t            };\n\t\n\t            if (this.o.showOnFocus === true) {\n\t                events.focus = $.proxy(this.show, this);\n\t            }\n\t\n\t            if (this.isInput) { // single input\n\t                this._events = [\n\t                    [this.element, events]\n\t                ];\n\t            }\n\t            // component: input + button\n\t            else if (this.component && this.inputField.length) {\n\t                this._events = [\n\t                    // For components that are not readonly, allow keyboard nav\n\t                    [this.inputField, events],\n\t                    [this.component, {\n\t                        click: $.proxy(this.show, this)\n\t                    }]\n\t                ];\n\t            }\n\t\t\t\telse {\n\t\t\t\t\tthis._events = [\n\t\t\t\t\t\t[this.element, {\n\t\t\t\t\t\t\tclick: $.proxy(this.show, this),\n\t\t\t\t\t\t\tkeydown: $.proxy(this.keydown, this)\n\t\t\t\t\t\t}]\n\t\t\t\t\t];\n\t\t\t\t}\n\t\t\t\tthis._events.push(\n\t\t\t\t\t// Component: listen for blur on element descendants\n\t\t\t\t\t[this.element, '*', {\n\t\t\t\t\t\tblur: $.proxy(function(e){\n\t\t\t\t\t\t\tthis._focused_from = e.target;\n\t\t\t\t\t\t}, this)\n\t\t\t\t\t}],\n\t\t\t\t\t// Input: listen for blur on element\n\t\t\t\t\t[this.element, {\n\t\t\t\t\t\tblur: $.proxy(function(e){\n\t\t\t\t\t\t\tthis._focused_from = e.target;\n\t\t\t\t\t\t}, this)\n\t\t\t\t\t}]\n\t\t\t\t);\n\t\n\t\t\t\tif (this.o.immediateUpdates) {\n\t\t\t\t\t// Trigger input updates immediately on changed year/month\n\t\t\t\t\tthis._events.push([this.element, {\n\t\t\t\t\t\t'changeYear changeMonth': $.proxy(function(e){\n\t\t\t\t\t\t\tthis.update(e.date);\n\t\t\t\t\t\t}, this)\n\t\t\t\t\t}]);\n\t\t\t\t}\n\t\n\t\t\t\tthis._secondaryEvents = [\n\t\t\t\t\t[this.picker, {\n\t\t\t\t\t\tclick: $.proxy(this.click, this)\n\t\t\t\t\t}],\n\t\t\t\t\t[this.picker, '.prev, .next', {\n\t\t\t\t\t\tclick: $.proxy(this.navArrowsClick, this)\n\t\t\t\t\t}],\n\t\t\t\t\t[this.picker, '.day:not(.disabled)', {\n\t\t\t\t\t\tclick: $.proxy(this.dayCellClick, this)\n\t\t\t\t\t}],\n\t\t\t\t\t[$(window), {\n\t\t\t\t\t\tresize: $.proxy(this.place, this)\n\t\t\t\t\t}],\n\t\t\t\t\t[$(document), {\n\t\t\t\t\t\t'mousedown touchstart': $.proxy(function(e){\n\t\t\t\t\t\t\t// Clicked outside the datepicker, hide it\n\t\t\t\t\t\t\tif (!(\n\t\t\t\t\t\t\t\tthis.element.is(e.target) ||\n\t\t\t\t\t\t\t\tthis.element.find(e.target).length ||\n\t\t\t\t\t\t\t\tthis.picker.is(e.target) ||\n\t\t\t\t\t\t\t\tthis.picker.find(e.target).length ||\n\t\t\t\t\t\t\t\tthis.isInline\n\t\t\t\t\t\t\t)){\n\t\t\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}, this)\n\t\t\t\t\t}]\n\t\t\t\t];\n\t\t\t},\n\t\t\t_attachEvents: function(){\n\t\t\t\tthis._detachEvents();\n\t\t\t\tthis._applyEvents(this._events);\n\t\t\t},\n\t\t\t_detachEvents: function(){\n\t\t\t\tthis._unapplyEvents(this._events);\n\t\t\t},\n\t\t\t_attachSecondaryEvents: function(){\n\t\t\t\tthis._detachSecondaryEvents();\n\t\t\t\tthis._applyEvents(this._secondaryEvents);\n\t\t\t},\n\t\t\t_detachSecondaryEvents: function(){\n\t\t\t\tthis._unapplyEvents(this._secondaryEvents);\n\t\t\t},\n\t\t\t_trigger: function(event, altdate){\n\t\t\t\tvar date = altdate || this.dates.get(-1),\n\t\t\t\t\tlocal_date = this._utc_to_local(date);\n\t\n\t\t\t\tthis.element.trigger({\n\t\t\t\t\ttype: event,\n\t\t\t\t\tdate: local_date,\n\t\t\t\t\tviewMode: this.viewMode,\n\t\t\t\t\tdates: $.map(this.dates, this._utc_to_local),\n\t\t\t\t\tformat: $.proxy(function(ix, format){\n\t\t\t\t\t\tif (arguments.length === 0){\n\t\t\t\t\t\t\tix = this.dates.length - 1;\n\t\t\t\t\t\t\tformat = this.o.format;\n\t\t\t\t\t\t} else if (typeof ix === 'string'){\n\t\t\t\t\t\t\tformat = ix;\n\t\t\t\t\t\t\tix = this.dates.length - 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tformat = format || this.o.format;\n\t\t\t\t\t\tvar date = this.dates.get(ix);\n\t\t\t\t\t\treturn DPGlobal.formatDate(date, format, this.o.language);\n\t\t\t\t\t}, this)\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\tshow: function(){\n\t\t\t\tif (this.inputField.prop('disabled') || (this.inputField.prop('readonly') && this.o.enableOnReadonly === false))\n\t\t\t\t\treturn;\n\t\t\t\tif (!this.isInline)\n\t\t\t\t\tthis.picker.appendTo(this.o.container);\n\t\t\t\tthis.place();\n\t\t\t\tthis.picker.show();\n\t\t\t\tthis._attachSecondaryEvents();\n\t\t\t\tthis._trigger('show');\n\t\t\t\tif ((window.navigator.msMaxTouchPoints || 'ontouchstart' in document) && this.o.disableTouchKeyboard) {\n\t\t\t\t\t$(this.element).blur();\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\thide: function(){\n\t\t\t\tif (this.isInline || !this.picker.is(':visible'))\n\t\t\t\t\treturn this;\n\t\t\t\tthis.focusDate = null;\n\t\t\t\tthis.picker.hide().detach();\n\t\t\t\tthis._detachSecondaryEvents();\n\t\t\t\tthis.setViewMode(this.o.startView);\n\t\n\t\t\t\tif (this.o.forceParse && this.inputField.val())\n\t\t\t\t\tthis.setValue();\n\t\t\t\tthis._trigger('hide');\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\tdestroy: function(){\n\t\t\t\tthis.hide();\n\t\t\t\tthis._detachEvents();\n\t\t\t\tthis._detachSecondaryEvents();\n\t\t\t\tthis.picker.remove();\n\t\t\t\tdelete this.element.data().datepicker;\n\t\t\t\tif (!this.isInput){\n\t\t\t\t\tdelete this.element.data().date;\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\tpaste: function(e){\n\t\t\t\tvar dateString;\n\t\t\t\tif (e.originalEvent.clipboardData && e.originalEvent.clipboardData.types\n\t\t\t\t\t&& $.inArray('text/plain', e.originalEvent.clipboardData.types) !== -1) {\n\t\t\t\t\tdateString = e.originalEvent.clipboardData.getData('text/plain');\n\t\t\t\t} else if (window.clipboardData) {\n\t\t\t\t\tdateString = window.clipboardData.getData('Text');\n\t\t\t\t} else {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.setDate(dateString);\n\t\t\t\tthis.update();\n\t\t\t\te.preventDefault();\n\t\t\t},\n\t\n\t\t\t_utc_to_local: function(utc){\n\t\t\t\tif (!utc) {\n\t\t\t\t\treturn utc;\n\t\t\t\t}\n\t\n\t\t\t\tvar local = new Date(utc.getTime() + (utc.getTimezoneOffset() * 60000));\n\t\n\t\t\t\tif (local.getTimezoneOffset() !== utc.getTimezoneOffset()) {\n\t\t\t\t\tlocal = new Date(utc.getTime() + (local.getTimezoneOffset() * 60000));\n\t\t\t\t}\n\t\n\t\t\t\treturn local;\n\t\t\t},\n\t\t\t_local_to_utc: function(local){\n\t\t\t\treturn local && new Date(local.getTime() - (local.getTimezoneOffset()*60000));\n\t\t\t},\n\t\t\t_zero_time: function(local){\n\t\t\t\treturn local && new Date(local.getFullYear(), local.getMonth(), local.getDate());\n\t\t\t},\n\t\t\t_zero_utc_time: function(utc){\n\t\t\t\treturn utc && UTCDate(utc.getUTCFullYear(), utc.getUTCMonth(), utc.getUTCDate());\n\t\t\t},\n\t\n\t\t\tgetDates: function(){\n\t\t\t\treturn $.map(this.dates, this._utc_to_local);\n\t\t\t},\n\t\n\t\t\tgetUTCDates: function(){\n\t\t\t\treturn $.map(this.dates, function(d){\n\t\t\t\t\treturn new Date(d);\n\t\t\t\t});\n\t\t\t},\n\t\n\t\t\tgetDate: function(){\n\t\t\t\treturn this._utc_to_local(this.getUTCDate());\n\t\t\t},\n\t\n\t\t\tgetUTCDate: function(){\n\t\t\t\tvar selected_date = this.dates.get(-1);\n\t\t\t\tif (selected_date !== undefined) {\n\t\t\t\t\treturn new Date(selected_date);\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tclearDates: function(){\n\t\t\t\tthis.inputField.val('');\n\t\t\t\tthis.update();\n\t\t\t\tthis._trigger('changeDate');\n\t\n\t\t\t\tif (this.o.autoclose) {\n\t\t\t\t\tthis.hide();\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tsetDates: function(){\n\t\t\t\tvar args = $.isArray(arguments[0]) ? arguments[0] : arguments;\n\t\t\t\tthis.update.apply(this, args);\n\t\t\t\tthis._trigger('changeDate');\n\t\t\t\tthis.setValue();\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\tsetUTCDates: function(){\n\t\t\t\tvar args = $.isArray(arguments[0]) ? arguments[0] : arguments;\n\t\t\t\tthis.setDates.apply(this, $.map(args, this._utc_to_local));\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\tsetDate: alias('setDates'),\n\t\t\tsetUTCDate: alias('setUTCDates'),\n\t\t\tremove: alias('destroy', 'Method `remove` is deprecated and will be removed in version 2.0. Use `destroy` instead'),\n\t\n\t\t\tsetValue: function(){\n\t\t\t\tvar formatted = this.getFormattedDate();\n\t\t\t\tthis.inputField.val(formatted);\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\tgetFormattedDate: function(format){\n\t\t\t\tif (format === undefined)\n\t\t\t\t\tformat = this.o.format;\n\t\n\t\t\t\tvar lang = this.o.language;\n\t\t\t\treturn $.map(this.dates, function(d){\n\t\t\t\t\treturn DPGlobal.formatDate(d, format, lang);\n\t\t\t\t}).join(this.o.multidateSeparator);\n\t\t\t},\n\t\n\t\t\tgetStartDate: function(){\n\t\t\t\treturn this.o.startDate;\n\t\t\t},\n\t\n\t\t\tsetStartDate: function(startDate){\n\t\t\t\tthis._process_options({startDate: startDate});\n\t\t\t\tthis.update();\n\t\t\t\tthis.updateNavArrows();\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\tgetEndDate: function(){\n\t\t\t\treturn this.o.endDate;\n\t\t\t},\n\t\n\t\t\tsetEndDate: function(endDate){\n\t\t\t\tthis._process_options({endDate: endDate});\n\t\t\t\tthis.update();\n\t\t\t\tthis.updateNavArrows();\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\tsetDaysOfWeekDisabled: function(daysOfWeekDisabled){\n\t\t\t\tthis._process_options({daysOfWeekDisabled: daysOfWeekDisabled});\n\t\t\t\tthis.update();\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\tsetDaysOfWeekHighlighted: function(daysOfWeekHighlighted){\n\t\t\t\tthis._process_options({daysOfWeekHighlighted: daysOfWeekHighlighted});\n\t\t\t\tthis.update();\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\tsetDatesDisabled: function(datesDisabled){\n\t\t\t\tthis._process_options({datesDisabled: datesDisabled});\n\t\t\t\tthis.update();\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\tplace: function(){\n\t\t\t\tif (this.isInline)\n\t\t\t\t\treturn this;\n\t\t\t\tvar calendarWidth = this.picker.outerWidth(),\n\t\t\t\t\tcalendarHeight = this.picker.outerHeight(),\n\t\t\t\t\tvisualPadding = 10,\n\t\t\t\t\tcontainer = $(this.o.container),\n\t\t\t\t\twindowWidth = container.width(),\n\t\t\t\t\tscrollTop = this.o.container === 'body' ? $(document).scrollTop() : container.scrollTop(),\n\t\t\t\t\tappendOffset = container.offset();\n\t\n\t\t\t\tvar parentsZindex = [0];\n\t\t\t\tthis.element.parents().each(function(){\n\t\t\t\t\tvar itemZIndex = $(this).css('z-index');\n\t\t\t\t\tif (itemZIndex !== 'auto' && Number(itemZIndex) !== 0) parentsZindex.push(Number(itemZIndex));\n\t\t\t\t});\n\t\t\t\tvar zIndex = Math.max.apply(Math, parentsZindex) + this.o.zIndexOffset;\n\t\t\t\tvar offset = this.component ? this.component.parent().offset() : this.element.offset();\n\t\t\t\tvar height = this.component ? this.component.outerHeight(true) : this.element.outerHeight(false);\n\t\t\t\tvar width = this.component ? this.component.outerWidth(true) : this.element.outerWidth(false);\n\t\t\t\tvar left = offset.left - appendOffset.left;\n\t\t\t\tvar top = offset.top - appendOffset.top;\n\t\n\t\t\t\tif (this.o.container !== 'body') {\n\t\t\t\t\ttop += scrollTop;\n\t\t\t\t}\n\t\n\t\t\t\tthis.picker.removeClass(\n\t\t\t\t\t'datepicker-orient-top datepicker-orient-bottom '+\n\t\t\t\t\t'datepicker-orient-right datepicker-orient-left'\n\t\t\t\t);\n\t\n\t\t\t\tif (this.o.orientation.x !== 'auto'){\n\t\t\t\t\tthis.picker.addClass('datepicker-orient-' + this.o.orientation.x);\n\t\t\t\t\tif (this.o.orientation.x === 'right')\n\t\t\t\t\t\tleft -= calendarWidth - width;\n\t\t\t\t}\n\t\t\t\t// auto x orientation is best-placement: if it crosses a window\n\t\t\t\t// edge, fudge it sideways\n\t\t\t\telse {\n\t\t\t\t\tif (offset.left < 0) {\n\t\t\t\t\t\t// component is outside the window on the left side. Move it into visible range\n\t\t\t\t\t\tthis.picker.addClass('datepicker-orient-left');\n\t\t\t\t\t\tleft -= offset.left - visualPadding;\n\t\t\t\t\t} else if (left + calendarWidth > windowWidth) {\n\t\t\t\t\t\t// the calendar passes the widow right edge. Align it to component right side\n\t\t\t\t\t\tthis.picker.addClass('datepicker-orient-right');\n\t\t\t\t\t\tleft += width - calendarWidth;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (this.o.rtl) {\n\t\t\t\t\t\t\t// Default to right\n\t\t\t\t\t\t\tthis.picker.addClass('datepicker-orient-right');\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// Default to left\n\t\t\t\t\t\t\tthis.picker.addClass('datepicker-orient-left');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// auto y orientation is best-situation: top or bottom, no fudging,\n\t\t\t\t// decision based on which shows more of the calendar\n\t\t\t\tvar yorient = this.o.orientation.y,\n\t\t\t\t\ttop_overflow;\n\t\t\t\tif (yorient === 'auto'){\n\t\t\t\t\ttop_overflow = -scrollTop + top - calendarHeight;\n\t\t\t\t\tyorient = top_overflow < 0 ? 'bottom' : 'top';\n\t\t\t\t}\n\t\n\t\t\t\tthis.picker.addClass('datepicker-orient-' + yorient);\n\t\t\t\tif (yorient === 'top')\n\t\t\t\t\ttop -= calendarHeight + parseInt(this.picker.css('padding-top'));\n\t\t\t\telse\n\t\t\t\t\ttop += height;\n\t\n\t\t\t\tif (this.o.rtl) {\n\t\t\t\t\tvar right = windowWidth - (left + width);\n\t\t\t\t\tthis.picker.css({\n\t\t\t\t\t\ttop: top,\n\t\t\t\t\t\tright: right,\n\t\t\t\t\t\tzIndex: zIndex\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\tthis.picker.css({\n\t\t\t\t\t\ttop: top,\n\t\t\t\t\t\tleft: left,\n\t\t\t\t\t\tzIndex: zIndex\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\t_allow_update: true,\n\t\t\tupdate: function(){\n\t\t\t\tif (!this._allow_update)\n\t\t\t\t\treturn this;\n\t\n\t\t\t\tvar oldDates = this.dates.copy(),\n\t\t\t\t\tdates = [],\n\t\t\t\t\tfromArgs = false;\n\t\t\t\tif (arguments.length){\n\t\t\t\t\t$.each(arguments, $.proxy(function(i, date){\n\t\t\t\t\t\tif (date instanceof Date)\n\t\t\t\t\t\t\tdate = this._local_to_utc(date);\n\t\t\t\t\t\tdates.push(date);\n\t\t\t\t\t}, this));\n\t\t\t\t\tfromArgs = true;\n\t\t\t\t} else {\n\t\t\t\t\tdates = this.isInput\n\t\t\t\t\t\t\t? this.element.val()\n\t\t\t\t\t\t\t: this.element.data('date') || this.inputField.val();\n\t\t\t\t\tif (dates && this.o.multidate)\n\t\t\t\t\t\tdates = dates.split(this.o.multidateSeparator);\n\t\t\t\t\telse\n\t\t\t\t\t\tdates = [dates];\n\t\t\t\t\tdelete this.element.data().date;\n\t\t\t\t}\n\t\n\t\t\t\tdates = $.map(dates, $.proxy(function(date){\n\t\t\t\t\treturn DPGlobal.parseDate(date, this.o.format, this.o.language, this.o.assumeNearbyYear);\n\t\t\t\t}, this));\n\t\t\t\tdates = $.grep(dates, $.proxy(function(date){\n\t\t\t\t\treturn (\n\t\t\t\t\t\t!this.dateWithinRange(date) ||\n\t\t\t\t\t\t!date\n\t\t\t\t\t);\n\t\t\t\t}, this), true);\n\t\t\t\tthis.dates.replace(dates);\n\t\n\t\t\t\tif (this.o.updateViewDate) {\n\t\t\t\t\tif (this.dates.length)\n\t\t\t\t\t\tthis.viewDate = new Date(this.dates.get(-1));\n\t\t\t\t\telse if (this.viewDate < this.o.startDate)\n\t\t\t\t\t\tthis.viewDate = new Date(this.o.startDate);\n\t\t\t\t\telse if (this.viewDate > this.o.endDate)\n\t\t\t\t\t\tthis.viewDate = new Date(this.o.endDate);\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.viewDate = this.o.defaultViewDate;\n\t\t\t\t}\n\t\n\t\t\t\tif (fromArgs){\n\t\t\t\t\t// setting date by clicking\n\t\t\t\t\tthis.setValue();\n\t\t\t\t\tthis.element.change();\n\t\t\t\t}\n\t\t\t\telse if (this.dates.length){\n\t\t\t\t\t// setting date by typing\n\t\t\t\t\tif (String(oldDates) !== String(this.dates) && fromArgs) {\n\t\t\t\t\t\tthis._trigger('changeDate');\n\t\t\t\t\t\tthis.element.change();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (!this.dates.length && oldDates.length) {\n\t\t\t\t\tthis._trigger('clearDate');\n\t\t\t\t\tthis.element.change();\n\t\t\t\t}\n\t\n\t\t\t\tthis.fill();\n\t\t\t\treturn this;\n\t\t\t},\n\t\n\t\t\tfillDow: function(){\n\t      if (this.o.showWeekDays) {\n\t\t\t\tvar dowCnt = this.o.weekStart,\n\t\t\t\t\thtml = '<tr>';\n\t\t\t\tif (this.o.calendarWeeks){\n\t\t\t\t\thtml += '<th class=\"cw\">&#160;</th>';\n\t\t\t\t}\n\t\t\t\twhile (dowCnt < this.o.weekStart + 7){\n\t\t\t\t\thtml += '<th class=\"dow';\n\t        if ($.inArray(dowCnt, this.o.daysOfWeekDisabled) !== -1)\n\t          html += ' disabled';\n\t        html += '\">'+dates[this.o.language].daysMin[(dowCnt++)%7]+'</th>';\n\t\t\t\t}\n\t\t\t\thtml += '</tr>';\n\t\t\t\tthis.picker.find('.datepicker-days thead').append(html);\n\t      }\n\t\t\t},\n\t\n\t\t\tfillMonths: function(){\n\t      var localDate = this._utc_to_local(this.viewDate);\n\t\t\t\tvar html = '';\n\t\t\t\tvar focused;\n\t\t\t\tfor (var i = 0; i < 12; i++){\n\t\t\t\t\tfocused = localDate && localDate.getMonth() === i ? ' focused' : '';\n\t\t\t\t\thtml += '<span class=\"month' + focused + '\">' + dates[this.o.language].monthsShort[i] + '</span>';\n\t\t\t\t}\n\t\t\t\tthis.picker.find('.datepicker-months td').html(html);\n\t\t\t},\n\t\n\t\t\tsetRange: function(range){\n\t\t\t\tif (!range || !range.length)\n\t\t\t\t\tdelete this.range;\n\t\t\t\telse\n\t\t\t\t\tthis.range = $.map(range, function(d){\n\t\t\t\t\t\treturn d.valueOf();\n\t\t\t\t\t});\n\t\t\t\tthis.fill();\n\t\t\t},\n\t\n\t\t\tgetClassNames: function(date){\n\t\t\t\tvar cls = [],\n\t\t\t\t\tyear = this.viewDate.getUTCFullYear(),\n\t\t\t\t\tmonth = this.viewDate.getUTCMonth(),\n\t\t\t\t\ttoday = UTCToday();\n\t\t\t\tif (date.getUTCFullYear() < year || (date.getUTCFullYear() === year && date.getUTCMonth() < month)){\n\t\t\t\t\tcls.push('old');\n\t\t\t\t} else if (date.getUTCFullYear() > year || (date.getUTCFullYear() === year && date.getUTCMonth() > month)){\n\t\t\t\t\tcls.push('new');\n\t\t\t\t}\n\t\t\t\tif (this.focusDate && date.valueOf() === this.focusDate.valueOf())\n\t\t\t\t\tcls.push('focused');\n\t\t\t\t// Compare internal UTC date with UTC today, not local today\n\t\t\t\tif (this.o.todayHighlight && isUTCEquals(date, today)) {\n\t\t\t\t\tcls.push('today');\n\t\t\t\t}\n\t\t\t\tif (this.dates.contains(date) !== -1)\n\t\t\t\t\tcls.push('active');\n\t\t\t\tif (!this.dateWithinRange(date)){\n\t\t\t\t\tcls.push('disabled');\n\t\t\t\t}\n\t\t\t\tif (this.dateIsDisabled(date)){\n\t\t\t\t\tcls.push('disabled', 'disabled-date');\n\t\t\t\t}\n\t\t\t\tif ($.inArray(date.getUTCDay(), this.o.daysOfWeekHighlighted) !== -1){\n\t\t\t\t\tcls.push('highlighted');\n\t\t\t\t}\n\t\n\t\t\t\tif (this.range){\n\t\t\t\t\tif (date > this.range[0] && date < this.range[this.range.length-1]){\n\t\t\t\t\t\tcls.push('range');\n\t\t\t\t\t}\n\t\t\t\t\tif ($.inArray(date.valueOf(), this.range) !== -1){\n\t\t\t\t\t\tcls.push('selected');\n\t\t\t\t\t}\n\t\t\t\t\tif (date.valueOf() === this.range[0]){\n\t          cls.push('range-start');\n\t        }\n\t        if (date.valueOf() === this.range[this.range.length-1]){\n\t          cls.push('range-end');\n\t        }\n\t\t\t\t}\n\t\t\t\treturn cls;\n\t\t\t},\n\t\n\t\t\t_fill_yearsView: function(selector, cssClass, factor, year, startYear, endYear, beforeFn){\n\t\t\t\tvar html = '';\n\t\t\t\tvar step = factor / 10;\n\t\t\t\tvar view = this.picker.find(selector);\n\t\t\t\tvar startVal = Math.floor(year / factor) * factor;\n\t\t\t\tvar endVal = startVal + step * 9;\n\t\t\t\tvar focusedVal = Math.floor(this.viewDate.getFullYear() / step) * step;\n\t\t\t\tvar selected = $.map(this.dates, function(d){\n\t\t\t\t\treturn Math.floor(d.getUTCFullYear() / step) * step;\n\t\t\t\t});\n\t\n\t\t\t\tvar classes, tooltip, before;\n\t\t\t\tfor (var currVal = startVal - step; currVal <= endVal + step; currVal += step) {\n\t\t\t\t\tclasses = [cssClass];\n\t\t\t\t\ttooltip = null;\n\t\n\t\t\t\t\tif (currVal === startVal - step) {\n\t\t\t\t\t\tclasses.push('old');\n\t\t\t\t\t} else if (currVal === endVal + step) {\n\t\t\t\t\t\tclasses.push('new');\n\t\t\t\t\t}\n\t\t\t\t\tif ($.inArray(currVal, selected) !== -1) {\n\t\t\t\t\t\tclasses.push('active');\n\t\t\t\t\t}\n\t\t\t\t\tif (currVal < startYear || currVal > endYear) {\n\t\t\t\t\t\tclasses.push('disabled');\n\t\t\t\t\t}\n\t\t\t\t\tif (currVal === focusedVal) {\n\t\t\t\t\t  classes.push('focused');\n\t        }\n\t\n\t\t\t\t\tif (beforeFn !== $.noop) {\n\t\t\t\t\t\tbefore = beforeFn(new Date(currVal, 0, 1));\n\t\t\t\t\t\tif (before === undefined) {\n\t\t\t\t\t\t\tbefore = {};\n\t\t\t\t\t\t} else if (typeof before === 'boolean') {\n\t\t\t\t\t\t\tbefore = {enabled: before};\n\t\t\t\t\t\t} else if (typeof before === 'string') {\n\t\t\t\t\t\t\tbefore = {classes: before};\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (before.enabled === false) {\n\t\t\t\t\t\t\tclasses.push('disabled');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (before.classes) {\n\t\t\t\t\t\t\tclasses = classes.concat(before.classes.split(/\\s+/));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (before.tooltip) {\n\t\t\t\t\t\t\ttooltip = before.tooltip;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\thtml += '<span class=\"' + classes.join(' ') + '\"' + (tooltip ? ' title=\"' + tooltip + '\"' : '') + '>' + currVal + '</span>';\n\t\t\t\t}\n\t\n\t\t\t\tview.find('.datepicker-switch').text(startVal + '-' + endVal);\n\t\t\t\tview.find('td').html(html);\n\t\t\t},\n\t\n\t\t\tfill: function(){\n\t\t\t\tvar d = new Date(this.viewDate),\n\t\t\t\t\tyear = d.getUTCFullYear(),\n\t\t\t\t\tmonth = d.getUTCMonth(),\n\t\t\t\t\tstartYear = this.o.startDate !== -Infinity ? this.o.startDate.getUTCFullYear() : -Infinity,\n\t\t\t\t\tstartMonth = this.o.startDate !== -Infinity ? this.o.startDate.getUTCMonth() : -Infinity,\n\t\t\t\t\tendYear = this.o.endDate !== Infinity ? this.o.endDate.getUTCFullYear() : Infinity,\n\t\t\t\t\tendMonth = this.o.endDate !== Infinity ? this.o.endDate.getUTCMonth() : Infinity,\n\t\t\t\t\ttodaytxt = dates[this.o.language].today || dates['en'].today || '',\n\t\t\t\t\tcleartxt = dates[this.o.language].clear || dates['en'].clear || '',\n\t\t\t\t\ttitleFormat = dates[this.o.language].titleFormat || dates['en'].titleFormat,\n\t\t\t\t\ttooltip,\n\t\t\t\t\tbefore;\n\t\t\t\tif (isNaN(year) || isNaN(month))\n\t\t\t\t\treturn;\n\t\t\t\tthis.picker.find('.datepicker-days .datepicker-switch')\n\t\t\t\t\t\t\t.text(DPGlobal.formatDate(d, titleFormat, this.o.language));\n\t\t\t\tthis.picker.find('tfoot .today')\n\t\t\t\t\t\t\t.text(todaytxt)\n\t\t\t\t\t\t\t.css('display', this.o.todayBtn === true || this.o.todayBtn === 'linked' ? 'table-cell' : 'none');\n\t\t\t\tthis.picker.find('tfoot .clear')\n\t\t\t\t\t\t\t.text(cleartxt)\n\t\t\t\t\t\t\t.css('display', this.o.clearBtn === true ? 'table-cell' : 'none');\n\t\t\t\tthis.picker.find('thead .datepicker-title')\n\t\t\t\t\t\t\t.text(this.o.title)\n\t\t\t\t\t\t\t.css('display', typeof this.o.title === 'string' && this.o.title !== '' ? 'table-cell' : 'none');\n\t\t\t\tthis.updateNavArrows();\n\t\t\t\tthis.fillMonths();\n\t\t\t\tvar prevMonth = UTCDate(year, month, 0),\n\t\t\t\t\tday = prevMonth.getUTCDate();\n\t\t\t\tprevMonth.setUTCDate(day - (prevMonth.getUTCDay() - this.o.weekStart + 7)%7);\n\t\t\t\tvar nextMonth = new Date(prevMonth);\n\t\t\t\tif (prevMonth.getUTCFullYear() < 100){\n\t        nextMonth.setUTCFullYear(prevMonth.getUTCFullYear());\n\t      }\n\t\t\t\tnextMonth.setUTCDate(nextMonth.getUTCDate() + 42);\n\t\t\t\tnextMonth = nextMonth.valueOf();\n\t\t\t\tvar html = [];\n\t\t\t\tvar weekDay, clsName;\n\t\t\t\twhile (prevMonth.valueOf() < nextMonth){\n\t\t\t\t\tweekDay = prevMonth.getUTCDay();\n\t\t\t\t\tif (weekDay === this.o.weekStart){\n\t\t\t\t\t\thtml.push('<tr>');\n\t\t\t\t\t\tif (this.o.calendarWeeks){\n\t\t\t\t\t\t\t// ISO 8601: First week contains first thursday.\n\t\t\t\t\t\t\t// ISO also states week starts on Monday, but we can be more abstract here.\n\t\t\t\t\t\t\tvar\n\t\t\t\t\t\t\t\t// Start of current week: based on weekstart/current date\n\t\t\t\t\t\t\t\tws = new Date(+prevMonth + (this.o.weekStart - weekDay - 7) % 7 * 864e5),\n\t\t\t\t\t\t\t\t// Thursday of this week\n\t\t\t\t\t\t\t\tth = new Date(Number(ws) + (7 + 4 - ws.getUTCDay()) % 7 * 864e5),\n\t\t\t\t\t\t\t\t// First Thursday of year, year from thursday\n\t\t\t\t\t\t\t\tyth = new Date(Number(yth = UTCDate(th.getUTCFullYear(), 0, 1)) + (7 + 4 - yth.getUTCDay()) % 7 * 864e5),\n\t\t\t\t\t\t\t\t// Calendar week: ms between thursdays, div ms per day, div 7 days\n\t\t\t\t\t\t\t\tcalWeek = (th - yth) / 864e5 / 7 + 1;\n\t\t\t\t\t\t\thtml.push('<td class=\"cw\">'+ calWeek +'</td>');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tclsName = this.getClassNames(prevMonth);\n\t\t\t\t\tclsName.push('day');\n\t\n\t\t\t\t\tvar content = prevMonth.getUTCDate();\n\t\n\t\t\t\t\tif (this.o.beforeShowDay !== $.noop){\n\t\t\t\t\t\tbefore = this.o.beforeShowDay(this._utc_to_local(prevMonth));\n\t\t\t\t\t\tif (before === undefined)\n\t\t\t\t\t\t\tbefore = {};\n\t\t\t\t\t\telse if (typeof before === 'boolean')\n\t\t\t\t\t\t\tbefore = {enabled: before};\n\t\t\t\t\t\telse if (typeof before === 'string')\n\t\t\t\t\t\t\tbefore = {classes: before};\n\t\t\t\t\t\tif (before.enabled === false)\n\t\t\t\t\t\t\tclsName.push('disabled');\n\t\t\t\t\t\tif (before.classes)\n\t\t\t\t\t\t\tclsName = clsName.concat(before.classes.split(/\\s+/));\n\t\t\t\t\t\tif (before.tooltip)\n\t\t\t\t\t\t\ttooltip = before.tooltip;\n\t\t\t\t\t\tif (before.content)\n\t\t\t\t\t\t\tcontent = before.content;\n\t\t\t\t\t}\n\t\n\t\t\t\t\t//Check if uniqueSort exists (supported by jquery >=1.12 and >=2.2)\n\t\t\t\t\t//Fallback to unique function for older jquery versions\n\t\t\t\t\tif ($.isFunction($.uniqueSort)) {\n\t\t\t\t\t\tclsName = $.uniqueSort(clsName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tclsName = $.unique(clsName);\n\t\t\t\t\t}\n\t\n\t\t\t\t\thtml.push('<td class=\"'+clsName.join(' ')+'\"' + (tooltip ? ' title=\"'+tooltip+'\"' : '') + ' data-date=\"' + prevMonth.getTime().toString() + '\">' + content + '</td>');\n\t\t\t\t\ttooltip = null;\n\t\t\t\t\tif (weekDay === this.o.weekEnd){\n\t\t\t\t\t\thtml.push('</tr>');\n\t\t\t\t\t}\n\t\t\t\t\tprevMonth.setUTCDate(prevMonth.getUTCDate() + 1);\n\t\t\t\t}\n\t\t\t\tthis.picker.find('.datepicker-days tbody').html(html.join(''));\n\t\n\t\t\t\tvar monthsTitle = dates[this.o.language].monthsTitle || dates['en'].monthsTitle || 'Months';\n\t\t\t\tvar months = this.picker.find('.datepicker-months')\n\t\t\t\t\t\t\t.find('.datepicker-switch')\n\t\t\t\t\t\t\t\t.text(this.o.maxViewMode < 2 ? monthsTitle : year)\n\t\t\t\t\t\t\t\t.end()\n\t\t\t\t\t\t\t.find('tbody span').removeClass('active');\n\t\n\t\t\t\t$.each(this.dates, function(i, d){\n\t\t\t\t\tif (d.getUTCFullYear() === year)\n\t\t\t\t\t\tmonths.eq(d.getUTCMonth()).addClass('active');\n\t\t\t\t});\n\t\n\t\t\t\tif (year < startYear || year > endYear){\n\t\t\t\t\tmonths.addClass('disabled');\n\t\t\t\t}\n\t\t\t\tif (year === startYear){\n\t\t\t\t\tmonths.slice(0, startMonth).addClass('disabled');\n\t\t\t\t}\n\t\t\t\tif (year === endYear){\n\t\t\t\t\tmonths.slice(endMonth+1).addClass('disabled');\n\t\t\t\t}\n\t\n\t\t\t\tif (this.o.beforeShowMonth !== $.noop){\n\t\t\t\t\tvar that = this;\n\t\t\t\t\t$.each(months, function(i, month){\n\t          var moDate = new Date(year, i, 1);\n\t          var before = that.o.beforeShowMonth(moDate);\n\t\t\t\t\t\tif (before === undefined)\n\t\t\t\t\t\t\tbefore = {};\n\t\t\t\t\t\telse if (typeof before === 'boolean')\n\t\t\t\t\t\t\tbefore = {enabled: before};\n\t\t\t\t\t\telse if (typeof before === 'string')\n\t\t\t\t\t\t\tbefore = {classes: before};\n\t\t\t\t\t\tif (before.enabled === false && !$(month).hasClass('disabled'))\n\t\t\t\t\t\t    $(month).addClass('disabled');\n\t\t\t\t\t\tif (before.classes)\n\t\t\t\t\t\t    $(month).addClass(before.classes);\n\t\t\t\t\t\tif (before.tooltip)\n\t\t\t\t\t\t    $(month).prop('title', before.tooltip);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\n\t\t\t\t// Generating decade/years picker\n\t\t\t\tthis._fill_yearsView(\n\t\t\t\t\t'.datepicker-years',\n\t\t\t\t\t'year',\n\t\t\t\t\t10,\n\t\t\t\t\tyear,\n\t\t\t\t\tstartYear,\n\t\t\t\t\tendYear,\n\t\t\t\t\tthis.o.beforeShowYear\n\t\t\t\t);\n\t\n\t\t\t\t// Generating century/decades picker\n\t\t\t\tthis._fill_yearsView(\n\t\t\t\t\t'.datepicker-decades',\n\t\t\t\t\t'decade',\n\t\t\t\t\t100,\n\t\t\t\t\tyear,\n\t\t\t\t\tstartYear,\n\t\t\t\t\tendYear,\n\t\t\t\t\tthis.o.beforeShowDecade\n\t\t\t\t);\n\t\n\t\t\t\t// Generating millennium/centuries picker\n\t\t\t\tthis._fill_yearsView(\n\t\t\t\t\t'.datepicker-centuries',\n\t\t\t\t\t'century',\n\t\t\t\t\t1000,\n\t\t\t\t\tyear,\n\t\t\t\t\tstartYear,\n\t\t\t\t\tendYear,\n\t\t\t\t\tthis.o.beforeShowCentury\n\t\t\t\t);\n\t\t\t},\n\t\n\t\t\tupdateNavArrows: function(){\n\t\t\t\tif (!this._allow_update)\n\t\t\t\t\treturn;\n\t\n\t\t\t\tvar d = new Date(this.viewDate),\n\t\t\t\t\tyear = d.getUTCFullYear(),\n\t\t\t\t\tmonth = d.getUTCMonth(),\n\t\t\t\t\tstartYear = this.o.startDate !== -Infinity ? this.o.startDate.getUTCFullYear() : -Infinity,\n\t\t\t\t\tstartMonth = this.o.startDate !== -Infinity ? this.o.startDate.getUTCMonth() : -Infinity,\n\t\t\t\t\tendYear = this.o.endDate !== Infinity ? this.o.endDate.getUTCFullYear() : Infinity,\n\t\t\t\t\tendMonth = this.o.endDate !== Infinity ? this.o.endDate.getUTCMonth() : Infinity,\n\t\t\t\t\tprevIsDisabled,\n\t\t\t\t\tnextIsDisabled,\n\t\t\t\t\tfactor = 1;\n\t\t\t\tswitch (this.viewMode){\n\t\t\t\t\tcase 0:\n\t\t\t\t\t\tprevIsDisabled = year <= startYear && month <= startMonth;\n\t\t\t\t\t\tnextIsDisabled = year >= endYear && month >= endMonth;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 4:\n\t\t\t\t\t\tfactor *= 10;\n\t\t\t\t\t\t/* falls through */\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tfactor *= 10;\n\t\t\t\t\t\t/* falls through */\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tfactor *= 10;\n\t\t\t\t\t\t/* falls through */\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tprevIsDisabled = Math.floor(year / factor) * factor <= startYear;\n\t\t\t\t\t\tnextIsDisabled = Math.floor(year / factor) * factor + factor >= endYear;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\n\t\t\t\tthis.picker.find('.prev').toggleClass('disabled', prevIsDisabled);\n\t\t\t\tthis.picker.find('.next').toggleClass('disabled', nextIsDisabled);\n\t\t\t},\n\t\n\t\t\tclick: function(e){\n\t\t\t\te.preventDefault();\n\t\t\t\te.stopPropagation();\n\t\n\t\t\t\tvar target, dir, day, year, month;\n\t\t\t\ttarget = $(e.target);\n\t\n\t\t\t\t// Clicked on the switch\n\t\t\t\tif (target.hasClass('datepicker-switch') && this.viewMode !== this.o.maxViewMode){\n\t\t\t\t\tthis.setViewMode(this.viewMode + 1);\n\t\t\t\t}\n\t\n\t\t\t\t// Clicked on today button\n\t\t\t\tif (target.hasClass('today') && !target.hasClass('day')){\n\t\t\t\t\tthis.setViewMode(0);\n\t\t\t\t\tthis._setDate(UTCToday(), this.o.todayBtn === 'linked' ? null : 'view');\n\t\t\t\t}\n\t\n\t\t\t\t// Clicked on clear button\n\t\t\t\tif (target.hasClass('clear')){\n\t\t\t\t\tthis.clearDates();\n\t\t\t\t}\n\t\n\t\t\t\tif (!target.hasClass('disabled')){\n\t\t\t\t\t// Clicked on a month, year, decade, century\n\t\t\t\t\tif (target.hasClass('month')\n\t\t\t\t\t\t\t|| target.hasClass('year')\n\t\t\t\t\t\t\t|| target.hasClass('decade')\n\t\t\t\t\t\t\t|| target.hasClass('century')) {\n\t\t\t\t\t\tthis.viewDate.setUTCDate(1);\n\t\n\t\t\t\t\t\tday = 1;\n\t\t\t\t\t\tif (this.viewMode === 1){\n\t\t\t\t\t\t\tmonth = target.parent().find('span').index(target);\n\t\t\t\t\t\t\tyear = this.viewDate.getUTCFullYear();\n\t\t\t\t\t\t\tthis.viewDate.setUTCMonth(month);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tmonth = 0;\n\t\t\t\t\t\t\tyear = Number(target.text());\n\t\t\t\t\t\t\tthis.viewDate.setUTCFullYear(year);\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tthis._trigger(DPGlobal.viewModes[this.viewMode - 1].e, this.viewDate);\n\t\n\t\t\t\t\t\tif (this.viewMode === this.o.minViewMode){\n\t\t\t\t\t\t\tthis._setDate(UTCDate(year, month, day));\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.setViewMode(this.viewMode - 1);\n\t\t\t\t\t\t\tthis.fill();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif (this.picker.is(':visible') && this._focused_from){\n\t\t\t\t\tthis._focused_from.focus();\n\t\t\t\t}\n\t\t\t\tdelete this._focused_from;\n\t\t\t},\n\t\n\t\t\tdayCellClick: function(e){\n\t\t\t\tvar $target = $(e.currentTarget);\n\t\t\t\tvar timestamp = $target.data('date');\n\t\t\t\tvar date = new Date(timestamp);\n\t\n\t\t\t\tif (this.o.updateViewDate) {\n\t\t\t\t\tif (date.getUTCFullYear() !== this.viewDate.getUTCFullYear()) {\n\t\t\t\t\t\tthis._trigger('changeYear', this.viewDate);\n\t\t\t\t\t}\n\t\n\t\t\t\t\tif (date.getUTCMonth() !== this.viewDate.getUTCMonth()) {\n\t\t\t\t\t\tthis._trigger('changeMonth', this.viewDate);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis._setDate(date);\n\t\t\t},\n\t\n\t\t\t// Clicked on prev or next\n\t\t\tnavArrowsClick: function(e){\n\t\t\t\tvar $target = $(e.currentTarget);\n\t\t\t\tvar dir = $target.hasClass('prev') ? -1 : 1;\n\t\t\t\tif (this.viewMode !== 0){\n\t\t\t\t\tdir *= DPGlobal.viewModes[this.viewMode].navStep * 12;\n\t\t\t\t}\n\t\t\t\tthis.viewDate = this.moveMonth(this.viewDate, dir);\n\t\t\t\tthis._trigger(DPGlobal.viewModes[this.viewMode].e, this.viewDate);\n\t\t\t\tthis.fill();\n\t\t\t},\n\t\n\t\t\t_toggle_multidate: function(date){\n\t\t\t\tvar ix = this.dates.contains(date);\n\t\t\t\tif (!date){\n\t\t\t\t\tthis.dates.clear();\n\t\t\t\t}\n\t\n\t\t\t\tif (ix !== -1){\n\t\t\t\t\tif (this.o.multidate === true || this.o.multidate > 1 || this.o.toggleActive){\n\t\t\t\t\t\tthis.dates.remove(ix);\n\t\t\t\t\t}\n\t\t\t\t} else if (this.o.multidate === false) {\n\t\t\t\t\tthis.dates.clear();\n\t\t\t\t\tthis.dates.push(date);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.dates.push(date);\n\t\t\t\t}\n\t\n\t\t\t\tif (typeof this.o.multidate === 'number')\n\t\t\t\t\twhile (this.dates.length > this.o.multidate)\n\t\t\t\t\t\tthis.dates.remove(0);\n\t\t\t},\n\t\n\t\t\t_setDate: function(date, which){\n\t\t\t\tif (!which || which === 'date')\n\t\t\t\t\tthis._toggle_multidate(date && new Date(date));\n\t\t\t\tif ((!which && this.o.updateViewDate) || which === 'view')\n\t\t\t\t\tthis.viewDate = date && new Date(date);\n\t\n\t\t\t\tthis.fill();\n\t\t\t\tthis.setValue();\n\t\t\t\tif (!which || which !== 'view') {\n\t\t\t\t\tthis._trigger('changeDate');\n\t\t\t\t}\n\t\t\t\tthis.inputField.trigger('change');\n\t\t\t\tif (this.o.autoclose && (!which || which === 'date')){\n\t\t\t\t\tthis.hide();\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tmoveDay: function(date, dir){\n\t\t\t\tvar newDate = new Date(date);\n\t\t\t\tnewDate.setUTCDate(date.getUTCDate() + dir);\n\t\n\t\t\t\treturn newDate;\n\t\t\t},\n\t\n\t\t\tmoveWeek: function(date, dir){\n\t\t\t\treturn this.moveDay(date, dir * 7);\n\t\t\t},\n\t\n\t\t\tmoveMonth: function(date, dir){\n\t\t\t\tif (!isValidDate(date))\n\t\t\t\t\treturn this.o.defaultViewDate;\n\t\t\t\tif (!dir)\n\t\t\t\t\treturn date;\n\t\t\t\tvar new_date = new Date(date.valueOf()),\n\t\t\t\t\tday = new_date.getUTCDate(),\n\t\t\t\t\tmonth = new_date.getUTCMonth(),\n\t\t\t\t\tmag = Math.abs(dir),\n\t\t\t\t\tnew_month, test;\n\t\t\t\tdir = dir > 0 ? 1 : -1;\n\t\t\t\tif (mag === 1){\n\t\t\t\t\ttest = dir === -1\n\t\t\t\t\t\t// If going back one month, make sure month is not current month\n\t\t\t\t\t\t// (eg, Mar 31 -> Feb 31 == Feb 28, not Mar 02)\n\t\t\t\t\t\t? function(){\n\t\t\t\t\t\t\treturn new_date.getUTCMonth() === month;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// If going forward one month, make sure month is as expected\n\t\t\t\t\t\t// (eg, Jan 31 -> Feb 31 == Feb 28, not Mar 02)\n\t\t\t\t\t\t: function(){\n\t\t\t\t\t\t\treturn new_date.getUTCMonth() !== new_month;\n\t\t\t\t\t\t};\n\t\t\t\t\tnew_month = month + dir;\n\t\t\t\t\tnew_date.setUTCMonth(new_month);\n\t\t\t\t\t// Dec -> Jan (12) or Jan -> Dec (-1) -- limit expected date to 0-11\n\t\t\t\t\tnew_month = (new_month + 12) % 12;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// For magnitudes >1, move one month at a time...\n\t\t\t\t\tfor (var i=0; i < mag; i++)\n\t\t\t\t\t\t// ...which might decrease the day (eg, Jan 31 to Feb 28, etc)...\n\t\t\t\t\t\tnew_date = this.moveMonth(new_date, dir);\n\t\t\t\t\t// ...then reset the day, keeping it in the new month\n\t\t\t\t\tnew_month = new_date.getUTCMonth();\n\t\t\t\t\tnew_date.setUTCDate(day);\n\t\t\t\t\ttest = function(){\n\t\t\t\t\t\treturn new_month !== new_date.getUTCMonth();\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\t// Common date-resetting loop -- if date is beyond end of month, make it\n\t\t\t\t// end of month\n\t\t\t\twhile (test()){\n\t\t\t\t\tnew_date.setUTCDate(--day);\n\t\t\t\t\tnew_date.setUTCMonth(new_month);\n\t\t\t\t}\n\t\t\t\treturn new_date;\n\t\t\t},\n\t\n\t\t\tmoveYear: function(date, dir){\n\t\t\t\treturn this.moveMonth(date, dir*12);\n\t\t\t},\n\t\n\t\t\tmoveAvailableDate: function(date, dir, fn){\n\t\t\t\tdo {\n\t\t\t\t\tdate = this[fn](date, dir);\n\t\n\t\t\t\t\tif (!this.dateWithinRange(date))\n\t\t\t\t\t\treturn false;\n\t\n\t\t\t\t\tfn = 'moveDay';\n\t\t\t\t}\n\t\t\t\twhile (this.dateIsDisabled(date));\n\t\n\t\t\t\treturn date;\n\t\t\t},\n\t\n\t\t\tweekOfDateIsDisabled: function(date){\n\t\t\t\treturn $.inArray(date.getUTCDay(), this.o.daysOfWeekDisabled) !== -1;\n\t\t\t},\n\t\n\t\t\tdateIsDisabled: function(date){\n\t\t\t\treturn (\n\t\t\t\t\tthis.weekOfDateIsDisabled(date) ||\n\t\t\t\t\t$.grep(this.o.datesDisabled, function(d){\n\t\t\t\t\t\treturn isUTCEquals(date, d);\n\t\t\t\t\t}).length > 0\n\t\t\t\t);\n\t\t\t},\n\t\n\t\t\tdateWithinRange: function(date){\n\t\t\t\treturn date >= this.o.startDate && date <= this.o.endDate;\n\t\t\t},\n\t\n\t\t\tkeydown: function(e){\n\t\t\t\tif (!this.picker.is(':visible')){\n\t\t\t\t\tif (e.keyCode === 40 || e.keyCode === 27) { // allow down to re-show picker\n\t\t\t\t\t\tthis.show();\n\t\t\t\t\t\te.stopPropagation();\n\t        }\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tvar dateChanged = false,\n\t\t\t\t\tdir, newViewDate,\n\t\t\t\t\tfocusDate = this.focusDate || this.viewDate;\n\t\t\t\tswitch (e.keyCode){\n\t\t\t\t\tcase 27: // escape\n\t\t\t\t\t\tif (this.focusDate){\n\t\t\t\t\t\t\tthis.focusDate = null;\n\t\t\t\t\t\t\tthis.viewDate = this.dates.get(-1) || this.viewDate;\n\t\t\t\t\t\t\tthis.fill();\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 37: // left\n\t\t\t\t\tcase 38: // up\n\t\t\t\t\tcase 39: // right\n\t\t\t\t\tcase 40: // down\n\t\t\t\t\t\tif (!this.o.keyboardNavigation || this.o.daysOfWeekDisabled.length === 7)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdir = e.keyCode === 37 || e.keyCode === 38 ? -1 : 1;\n\t          if (this.viewMode === 0) {\n\t  \t\t\t\t\tif (e.ctrlKey){\n\t  \t\t\t\t\t\tnewViewDate = this.moveAvailableDate(focusDate, dir, 'moveYear');\n\t\n\t  \t\t\t\t\t\tif (newViewDate)\n\t  \t\t\t\t\t\t\tthis._trigger('changeYear', this.viewDate);\n\t  \t\t\t\t\t} else if (e.shiftKey){\n\t  \t\t\t\t\t\tnewViewDate = this.moveAvailableDate(focusDate, dir, 'moveMonth');\n\t\n\t  \t\t\t\t\t\tif (newViewDate)\n\t  \t\t\t\t\t\t\tthis._trigger('changeMonth', this.viewDate);\n\t  \t\t\t\t\t} else if (e.keyCode === 37 || e.keyCode === 39){\n\t  \t\t\t\t\t\tnewViewDate = this.moveAvailableDate(focusDate, dir, 'moveDay');\n\t  \t\t\t\t\t} else if (!this.weekOfDateIsDisabled(focusDate)){\n\t  \t\t\t\t\t\tnewViewDate = this.moveAvailableDate(focusDate, dir, 'moveWeek');\n\t  \t\t\t\t\t}\n\t          } else if (this.viewMode === 1) {\n\t            if (e.keyCode === 38 || e.keyCode === 40) {\n\t              dir = dir * 4;\n\t            }\n\t            newViewDate = this.moveAvailableDate(focusDate, dir, 'moveMonth');\n\t          } else if (this.viewMode === 2) {\n\t            if (e.keyCode === 38 || e.keyCode === 40) {\n\t              dir = dir * 4;\n\t            }\n\t            newViewDate = this.moveAvailableDate(focusDate, dir, 'moveYear');\n\t          }\n\t\t\t\t\t\tif (newViewDate){\n\t\t\t\t\t\t\tthis.focusDate = this.viewDate = newViewDate;\n\t\t\t\t\t\t\tthis.setValue();\n\t\t\t\t\t\t\tthis.fill();\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 13: // enter\n\t\t\t\t\t\tif (!this.o.forceParse)\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tfocusDate = this.focusDate || this.dates.get(-1) || this.viewDate;\n\t\t\t\t\t\tif (this.o.keyboardNavigation) {\n\t\t\t\t\t\t\tthis._toggle_multidate(focusDate);\n\t\t\t\t\t\t\tdateChanged = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.focusDate = null;\n\t\t\t\t\t\tthis.viewDate = this.dates.get(-1) || this.viewDate;\n\t\t\t\t\t\tthis.setValue();\n\t\t\t\t\t\tthis.fill();\n\t\t\t\t\t\tif (this.picker.is(':visible')){\n\t\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\t\tif (this.o.autoclose)\n\t\t\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 9: // tab\n\t\t\t\t\t\tthis.focusDate = null;\n\t\t\t\t\t\tthis.viewDate = this.dates.get(-1) || this.viewDate;\n\t\t\t\t\t\tthis.fill();\n\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tif (dateChanged){\n\t\t\t\t\tif (this.dates.length)\n\t\t\t\t\t\tthis._trigger('changeDate');\n\t\t\t\t\telse\n\t\t\t\t\t\tthis._trigger('clearDate');\n\t\t\t\t\tthis.inputField.trigger('change');\n\t\t\t\t}\n\t\t\t},\n\t\n\t\t\tsetViewMode: function(viewMode){\n\t\t\t\tthis.viewMode = viewMode;\n\t\t\t\tthis.picker\n\t\t\t\t\t.children('div')\n\t\t\t\t\t.hide()\n\t\t\t\t\t.filter('.datepicker-' + DPGlobal.viewModes[this.viewMode].clsName)\n\t\t\t\t\t\t.show();\n\t\t\t\tthis.updateNavArrows();\n\t      this._trigger('changeViewMode', new Date(this.viewDate));\n\t\t\t}\n\t\t};\n\t\n\t\tvar DateRangePicker = function(element, options){\n\t\t\t$.data(element, 'datepicker', this);\n\t\t\tthis.element = $(element);\n\t\t\tthis.inputs = $.map(options.inputs, function(i){\n\t\t\t\treturn i.jquery ? i[0] : i;\n\t\t\t});\n\t\t\tdelete options.inputs;\n\t\n\t\t\tthis.keepEmptyValues = options.keepEmptyValues;\n\t\t\tdelete options.keepEmptyValues;\n\t\n\t\t\tdatepickerPlugin.call($(this.inputs), options)\n\t\t\t\t.on('changeDate', $.proxy(this.dateUpdated, this));\n\t\n\t\t\tthis.pickers = $.map(this.inputs, function(i){\n\t\t\t\treturn $.data(i, 'datepicker');\n\t\t\t});\n\t\t\tthis.updateDates();\n\t\t};\n\t\tDateRangePicker.prototype = {\n\t\t\tupdateDates: function(){\n\t\t\t\tthis.dates = $.map(this.pickers, function(i){\n\t\t\t\t\treturn i.getUTCDate();\n\t\t\t\t});\n\t\t\t\tthis.updateRanges();\n\t\t\t},\n\t\t\tupdateRanges: function(){\n\t\t\t\tvar range = $.map(this.dates, function(d){\n\t\t\t\t\treturn d.valueOf();\n\t\t\t\t});\n\t\t\t\t$.each(this.pickers, function(i, p){\n\t\t\t\t\tp.setRange(range);\n\t\t\t\t});\n\t\t\t},\n\t\t\tdateUpdated: function(e){\n\t\t\t\t// `this.updating` is a workaround for preventing infinite recursion\n\t\t\t\t// between `changeDate` triggering and `setUTCDate` calling.  Until\n\t\t\t\t// there is a better mechanism.\n\t\t\t\tif (this.updating)\n\t\t\t\t\treturn;\n\t\t\t\tthis.updating = true;\n\t\n\t\t\t\tvar dp = $.data(e.target, 'datepicker');\n\t\n\t\t\t\tif (dp === undefined) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tvar new_date = dp.getUTCDate(),\n\t\t\t\t\tkeep_empty_values = this.keepEmptyValues,\n\t\t\t\t\ti = $.inArray(e.target, this.inputs),\n\t\t\t\t\tj = i - 1,\n\t\t\t\t\tk = i + 1,\n\t\t\t\t\tl = this.inputs.length;\n\t\t\t\tif (i === -1)\n\t\t\t\t\treturn;\n\t\n\t\t\t\t$.each(this.pickers, function(i, p){\n\t\t\t\t\tif (!p.getUTCDate() && (p === dp || !keep_empty_values))\n\t\t\t\t\t\tp.setUTCDate(new_date);\n\t\t\t\t});\n\t\n\t\t\t\tif (new_date < this.dates[j]){\n\t\t\t\t\t// Date being moved earlier/left\n\t\t\t\t\twhile (j >= 0 && new_date < this.dates[j]){\n\t\t\t\t\t\tthis.pickers[j--].setUTCDate(new_date);\n\t\t\t\t\t}\n\t\t\t\t} else if (new_date > this.dates[k]){\n\t\t\t\t\t// Date being moved later/right\n\t\t\t\t\twhile (k < l && new_date > this.dates[k]){\n\t\t\t\t\t\tthis.pickers[k++].setUTCDate(new_date);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.updateDates();\n\t\n\t\t\t\tdelete this.updating;\n\t\t\t},\n\t\t\tdestroy: function(){\n\t\t\t\t$.map(this.pickers, function(p){ p.destroy(); });\n\t\t\t\t$(this.inputs).off('changeDate', this.dateUpdated);\n\t\t\t\tdelete this.element.data().datepicker;\n\t\t\t},\n\t\t\tremove: alias('destroy', 'Method `remove` is deprecated and will be removed in version 2.0. Use `destroy` instead')\n\t\t};\n\t\n\t\tfunction opts_from_el(el, prefix){\n\t\t\t// Derive options from element data-attrs\n\t\t\tvar data = $(el).data(),\n\t\t\t\tout = {}, inkey,\n\t\t\t\treplace = new RegExp('^' + prefix.toLowerCase() + '([A-Z])');\n\t\t\tprefix = new RegExp('^' + prefix.toLowerCase());\n\t\t\tfunction re_lower(_,a){\n\t\t\t\treturn a.toLowerCase();\n\t\t\t}\n\t\t\tfor (var key in data)\n\t\t\t\tif (prefix.test(key)){\n\t\t\t\t\tinkey = key.replace(replace, re_lower);\n\t\t\t\t\tout[inkey] = data[key];\n\t\t\t\t}\n\t\t\treturn out;\n\t\t}\n\t\n\t\tfunction opts_from_locale(lang){\n\t\t\t// Derive options from locale plugins\n\t\t\tvar out = {};\n\t\t\t// Check if \"de-DE\" style date is available, if not language should\n\t\t\t// fallback to 2 letter code eg \"de\"\n\t\t\tif (!dates[lang]){\n\t\t\t\tlang = lang.split('-')[0];\n\t\t\t\tif (!dates[lang])\n\t\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar d = dates[lang];\n\t\t\t$.each(locale_opts, function(i,k){\n\t\t\t\tif (k in d)\n\t\t\t\t\tout[k] = d[k];\n\t\t\t});\n\t\t\treturn out;\n\t\t}\n\t\n\t\tvar old = $.fn.datepicker;\n\t\tvar datepickerPlugin = function(option){\n\t\t\tvar args = Array.apply(null, arguments);\n\t\t\targs.shift();\n\t\t\tvar internal_return;\n\t\t\tthis.each(function(){\n\t\t\t\tvar $this = $(this),\n\t\t\t\t\tdata = $this.data('datepicker'),\n\t\t\t\t\toptions = typeof option === 'object' && option;\n\t\t\t\tif (!data){\n\t\t\t\t\tvar elopts = opts_from_el(this, 'date'),\n\t\t\t\t\t\t// Preliminary otions\n\t\t\t\t\t\txopts = $.extend({}, defaults, elopts, options),\n\t\t\t\t\t\tlocopts = opts_from_locale(xopts.language),\n\t\t\t\t\t\t// Options priority: js args, data-attrs, locales, defaults\n\t\t\t\t\t\topts = $.extend({}, defaults, locopts, elopts, options);\n\t\t\t\t\tif ($this.hasClass('input-daterange') || opts.inputs){\n\t\t\t\t\t\t$.extend(opts, {\n\t\t\t\t\t\t\tinputs: opts.inputs || $this.find('input').toArray()\n\t\t\t\t\t\t});\n\t\t\t\t\t\tdata = new DateRangePicker(this, opts);\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tdata = new Datepicker(this, opts);\n\t\t\t\t\t}\n\t\t\t\t\t$this.data('datepicker', data);\n\t\t\t\t}\n\t\t\t\tif (typeof option === 'string' && typeof data[option] === 'function'){\n\t\t\t\t\tinternal_return = data[option].apply(data, args);\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tif (\n\t\t\t\tinternal_return === undefined ||\n\t\t\t\tinternal_return instanceof Datepicker ||\n\t\t\t\tinternal_return instanceof DateRangePicker\n\t\t\t)\n\t\t\t\treturn this;\n\t\n\t\t\tif (this.length > 1)\n\t\t\t\tthrow new Error('Using only allowed for the collection of a single element (' + option + ' function)');\n\t\t\telse\n\t\t\t\treturn internal_return;\n\t\t};\n\t\t$.fn.datepicker = datepickerPlugin;\n\t\n\t\tvar defaults = $.fn.datepicker.defaults = {\n\t\t\tassumeNearbyYear: false,\n\t\t\tautoclose: false,\n\t\t\tbeforeShowDay: $.noop,\n\t\t\tbeforeShowMonth: $.noop,\n\t\t\tbeforeShowYear: $.noop,\n\t\t\tbeforeShowDecade: $.noop,\n\t\t\tbeforeShowCentury: $.noop,\n\t\t\tcalendarWeeks: false,\n\t\t\tclearBtn: false,\n\t\t\ttoggleActive: false,\n\t\t\tdaysOfWeekDisabled: [],\n\t\t\tdaysOfWeekHighlighted: [],\n\t\t\tdatesDisabled: [],\n\t\t\tendDate: Infinity,\n\t\t\tforceParse: true,\n\t\t\tformat: 'mm/dd/yyyy',\n\t\t\tkeepEmptyValues: false,\n\t\t\tkeyboardNavigation: true,\n\t\t\tlanguage: 'en',\n\t\t\tminViewMode: 0,\n\t\t\tmaxViewMode: 4,\n\t\t\tmultidate: false,\n\t\t\tmultidateSeparator: ',',\n\t\t\torientation: \"auto\",\n\t\t\trtl: false,\n\t\t\tstartDate: -Infinity,\n\t\t\tstartView: 0,\n\t\t\ttodayBtn: false,\n\t\t\ttodayHighlight: false,\n\t\t\tupdateViewDate: true,\n\t\t\tweekStart: 0,\n\t\t\tdisableTouchKeyboard: false,\n\t\t\tenableOnReadonly: true,\n\t\t\tshowOnFocus: true,\n\t\t\tzIndexOffset: 10,\n\t\t\tcontainer: 'body',\n\t\t\timmediateUpdates: false,\n\t\t\ttitle: '',\n\t\t\ttemplates: {\n\t\t\t\tleftArrow: '&#x00AB;',\n\t\t\t\trightArrow: '&#x00BB;'\n\t\t\t},\n\t    showWeekDays: true\n\t\t};\n\t\tvar locale_opts = $.fn.datepicker.locale_opts = [\n\t\t\t'format',\n\t\t\t'rtl',\n\t\t\t'weekStart'\n\t\t];\n\t\t$.fn.datepicker.Constructor = Datepicker;\n\t\tvar dates = $.fn.datepicker.dates = {\n\t\t\ten: {\n\t\t\t\tdays: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t\t\t\tdaysShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t\t\t\tdaysMin: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n\t\t\t\tmonths: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t\t\t\tmonthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n\t\t\t\ttoday: \"Today\",\n\t\t\t\tclear: \"Clear\",\n\t\t\t\ttitleFormat: \"MM yyyy\"\n\t\t\t}\n\t\t};\n\t\n\t\tvar DPGlobal = {\n\t\t\tviewModes: [\n\t\t\t\t{\n\t\t\t\t\tnames: ['days', 'month'],\n\t\t\t\t\tclsName: 'days',\n\t\t\t\t\te: 'changeMonth'\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tnames: ['months', 'year'],\n\t\t\t\t\tclsName: 'months',\n\t\t\t\t\te: 'changeYear',\n\t\t\t\t\tnavStep: 1\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tnames: ['years', 'decade'],\n\t\t\t\t\tclsName: 'years',\n\t\t\t\t\te: 'changeDecade',\n\t\t\t\t\tnavStep: 10\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tnames: ['decades', 'century'],\n\t\t\t\t\tclsName: 'decades',\n\t\t\t\t\te: 'changeCentury',\n\t\t\t\t\tnavStep: 100\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tnames: ['centuries', 'millennium'],\n\t\t\t\t\tclsName: 'centuries',\n\t\t\t\t\te: 'changeMillennium',\n\t\t\t\t\tnavStep: 1000\n\t\t\t\t}\n\t\t\t],\n\t\t\tvalidParts: /dd?|DD?|mm?|MM?|yy(?:yy)?/g,\n\t\t\tnonpunctuation: /[^ -\\/:-@\\u5e74\\u6708\\u65e5\\[-`{-~\\t\\n\\r]+/g,\n\t\t\tparseFormat: function(format){\n\t\t\t\tif (typeof format.toValue === 'function' && typeof format.toDisplay === 'function')\n\t                return format;\n\t            // IE treats \\0 as a string end in inputs (truncating the value),\n\t\t\t\t// so it's a bad format delimiter, anyway\n\t\t\t\tvar separators = format.replace(this.validParts, '\\0').split('\\0'),\n\t\t\t\t\tparts = format.match(this.validParts);\n\t\t\t\tif (!separators || !separators.length || !parts || parts.length === 0){\n\t\t\t\t\tthrow new Error(\"Invalid date format.\");\n\t\t\t\t}\n\t\t\t\treturn {separators: separators, parts: parts};\n\t\t\t},\n\t\t\tparseDate: function(date, format, language, assumeNearby){\n\t\t\t\tif (!date)\n\t\t\t\t\treturn undefined;\n\t\t\t\tif (date instanceof Date)\n\t\t\t\t\treturn date;\n\t\t\t\tif (typeof format === 'string')\n\t\t\t\t\tformat = DPGlobal.parseFormat(format);\n\t\t\t\tif (format.toValue)\n\t\t\t\t\treturn format.toValue(date, format, language);\n\t\t\t\tvar fn_map = {\n\t\t\t\t\t\td: 'moveDay',\n\t\t\t\t\t\tm: 'moveMonth',\n\t\t\t\t\t\tw: 'moveWeek',\n\t\t\t\t\t\ty: 'moveYear'\n\t\t\t\t\t},\n\t\t\t\t\tdateAliases = {\n\t\t\t\t\t\tyesterday: '-1d',\n\t\t\t\t\t\ttoday: '+0d',\n\t\t\t\t\t\ttomorrow: '+1d'\n\t\t\t\t\t},\n\t\t\t\t\tparts, part, dir, i, fn;\n\t\t\t\tif (date in dateAliases){\n\t\t\t\t\tdate = dateAliases[date];\n\t\t\t\t}\n\t\t\t\tif (/^[\\-+]\\d+[dmwy]([\\s,]+[\\-+]\\d+[dmwy])*$/i.test(date)){\n\t\t\t\t\tparts = date.match(/([\\-+]\\d+)([dmwy])/gi);\n\t\t\t\t\tdate = new Date();\n\t\t\t\t\tfor (i=0; i < parts.length; i++){\n\t\t\t\t\t\tpart = parts[i].match(/([\\-+]\\d+)([dmwy])/i);\n\t\t\t\t\t\tdir = Number(part[1]);\n\t\t\t\t\t\tfn = fn_map[part[2].toLowerCase()];\n\t\t\t\t\t\tdate = Datepicker.prototype[fn](date, dir);\n\t\t\t\t\t}\n\t\t\t\t\treturn Datepicker.prototype._zero_utc_time(date);\n\t\t\t\t}\n\t\n\t\t\t\tparts = date && date.match(this.nonpunctuation) || [];\n\t\n\t\t\t\tfunction applyNearbyYear(year, threshold){\n\t\t\t\t\tif (threshold === true)\n\t\t\t\t\t\tthreshold = 10;\n\t\n\t\t\t\t\t// if year is 2 digits or less, than the user most likely is trying to get a recent century\n\t\t\t\t\tif (year < 100){\n\t\t\t\t\t\tyear += 2000;\n\t\t\t\t\t\t// if the new year is more than threshold years in advance, use last century\n\t\t\t\t\t\tif (year > ((new Date()).getFullYear()+threshold)){\n\t\t\t\t\t\t\tyear -= 100;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\treturn year;\n\t\t\t\t}\n\t\n\t\t\t\tvar parsed = {},\n\t\t\t\t\tsetters_order = ['yyyy', 'yy', 'M', 'MM', 'm', 'mm', 'd', 'dd'],\n\t\t\t\t\tsetters_map = {\n\t\t\t\t\t\tyyyy: function(d,v){\n\t\t\t\t\t\t\treturn d.setUTCFullYear(assumeNearby ? applyNearbyYear(v, assumeNearby) : v);\n\t\t\t\t\t\t},\n\t\t\t\t\t\tm: function(d,v){\n\t\t\t\t\t\t\tif (isNaN(d))\n\t\t\t\t\t\t\t\treturn d;\n\t\t\t\t\t\t\tv -= 1;\n\t\t\t\t\t\t\twhile (v < 0) v += 12;\n\t\t\t\t\t\t\tv %= 12;\n\t\t\t\t\t\t\td.setUTCMonth(v);\n\t\t\t\t\t\t\twhile (d.getUTCMonth() !== v)\n\t\t\t\t\t\t\t\td.setUTCDate(d.getUTCDate()-1);\n\t\t\t\t\t\t\treturn d;\n\t\t\t\t\t\t},\n\t\t\t\t\t\td: function(d,v){\n\t\t\t\t\t\t\treturn d.setUTCDate(v);\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tval, filtered;\n\t\t\t\tsetters_map['yy'] = setters_map['yyyy'];\n\t\t\t\tsetters_map['M'] = setters_map['MM'] = setters_map['mm'] = setters_map['m'];\n\t\t\t\tsetters_map['dd'] = setters_map['d'];\n\t\t\t\tdate = UTCToday();\n\t\t\t\tvar fparts = format.parts.slice();\n\t\t\t\t// Remove noop parts\n\t\t\t\tif (parts.length !== fparts.length){\n\t\t\t\t\tfparts = $(fparts).filter(function(i,p){\n\t\t\t\t\t\treturn $.inArray(p, setters_order) !== -1;\n\t\t\t\t\t}).toArray();\n\t\t\t\t}\n\t\t\t\t// Process remainder\n\t\t\t\tfunction match_part(){\n\t\t\t\t\tvar m = this.slice(0, parts[i].length),\n\t\t\t\t\t\tp = parts[i].slice(0, m.length);\n\t\t\t\t\treturn m.toLowerCase() === p.toLowerCase();\n\t\t\t\t}\n\t\t\t\tif (parts.length === fparts.length){\n\t\t\t\t\tvar cnt;\n\t\t\t\t\tfor (i=0, cnt = fparts.length; i < cnt; i++){\n\t\t\t\t\t\tval = parseInt(parts[i], 10);\n\t\t\t\t\t\tpart = fparts[i];\n\t\t\t\t\t\tif (isNaN(val)){\n\t\t\t\t\t\t\tswitch (part){\n\t\t\t\t\t\t\t\tcase 'MM':\n\t\t\t\t\t\t\t\t\tfiltered = $(dates[language].months).filter(match_part);\n\t\t\t\t\t\t\t\t\tval = $.inArray(filtered[0], dates[language].months) + 1;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\tcase 'M':\n\t\t\t\t\t\t\t\t\tfiltered = $(dates[language].monthsShort).filter(match_part);\n\t\t\t\t\t\t\t\t\tval = $.inArray(filtered[0], dates[language].monthsShort) + 1;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparsed[part] = val;\n\t\t\t\t\t}\n\t\t\t\t\tvar _date, s;\n\t\t\t\t\tfor (i=0; i < setters_order.length; i++){\n\t\t\t\t\t\ts = setters_order[i];\n\t\t\t\t\t\tif (s in parsed && !isNaN(parsed[s])){\n\t\t\t\t\t\t\t_date = new Date(date);\n\t\t\t\t\t\t\tsetters_map[s](_date, parsed[s]);\n\t\t\t\t\t\t\tif (!isNaN(_date))\n\t\t\t\t\t\t\t\tdate = _date;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn date;\n\t\t\t},\n\t\t\tformatDate: function(date, format, language){\n\t\t\t\tif (!date)\n\t\t\t\t\treturn '';\n\t\t\t\tif (typeof format === 'string')\n\t\t\t\t\tformat = DPGlobal.parseFormat(format);\n\t\t\t\tif (format.toDisplay)\n\t                return format.toDisplay(date, format, language);\n\t            var val = {\n\t\t\t\t\td: date.getUTCDate(),\n\t\t\t\t\tD: dates[language].daysShort[date.getUTCDay()],\n\t\t\t\t\tDD: dates[language].days[date.getUTCDay()],\n\t\t\t\t\tm: date.getUTCMonth() + 1,\n\t\t\t\t\tM: dates[language].monthsShort[date.getUTCMonth()],\n\t\t\t\t\tMM: dates[language].months[date.getUTCMonth()],\n\t\t\t\t\tyy: date.getUTCFullYear().toString().substring(2),\n\t\t\t\t\tyyyy: date.getUTCFullYear()\n\t\t\t\t};\n\t\t\t\tval.dd = (val.d < 10 ? '0' : '') + val.d;\n\t\t\t\tval.mm = (val.m < 10 ? '0' : '') + val.m;\n\t\t\t\tdate = [];\n\t\t\t\tvar seps = $.extend([], format.separators);\n\t\t\t\tfor (var i=0, cnt = format.parts.length; i <= cnt; i++){\n\t\t\t\t\tif (seps.length)\n\t\t\t\t\t\tdate.push(seps.shift());\n\t\t\t\t\tdate.push(val[format.parts[i]]);\n\t\t\t\t}\n\t\t\t\treturn date.join('');\n\t\t\t},\n\t\t\theadTemplate: '<thead>'+\n\t\t\t\t              '<tr>'+\n\t\t\t\t                '<th colspan=\"7\" class=\"datepicker-title\"></th>'+\n\t\t\t\t              '</tr>'+\n\t\t\t\t\t\t\t\t'<tr>'+\n\t\t\t\t\t\t\t\t\t'<th class=\"prev\">'+defaults.templates.leftArrow+'</th>'+\n\t\t\t\t\t\t\t\t\t'<th colspan=\"5\" class=\"datepicker-switch\"></th>'+\n\t\t\t\t\t\t\t\t\t'<th class=\"next\">'+defaults.templates.rightArrow+'</th>'+\n\t\t\t\t\t\t\t\t'</tr>'+\n\t\t\t\t\t\t\t'</thead>',\n\t\t\tcontTemplate: '<tbody><tr><td colspan=\"7\"></td></tr></tbody>',\n\t\t\tfootTemplate: '<tfoot>'+\n\t\t\t\t\t\t\t\t'<tr>'+\n\t\t\t\t\t\t\t\t\t'<th colspan=\"7\" class=\"today\"></th>'+\n\t\t\t\t\t\t\t\t'</tr>'+\n\t\t\t\t\t\t\t\t'<tr>'+\n\t\t\t\t\t\t\t\t\t'<th colspan=\"7\" class=\"clear\"></th>'+\n\t\t\t\t\t\t\t\t'</tr>'+\n\t\t\t\t\t\t\t'</tfoot>'\n\t\t};\n\t\tDPGlobal.template = '<div class=\"datepicker\">'+\n\t\t\t\t\t\t\t\t'<div class=\"datepicker-days\">'+\n\t\t\t\t\t\t\t\t\t'<table class=\"table-condensed\">'+\n\t\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\n\t\t\t\t\t\t\t\t\t\t'<tbody></tbody>'+\n\t\t\t\t\t\t\t\t\t\tDPGlobal.footTemplate+\n\t\t\t\t\t\t\t\t\t'</table>'+\n\t\t\t\t\t\t\t\t'</div>'+\n\t\t\t\t\t\t\t\t'<div class=\"datepicker-months\">'+\n\t\t\t\t\t\t\t\t\t'<table class=\"table-condensed\">'+\n\t\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\n\t\t\t\t\t\t\t\t\t\tDPGlobal.contTemplate+\n\t\t\t\t\t\t\t\t\t\tDPGlobal.footTemplate+\n\t\t\t\t\t\t\t\t\t'</table>'+\n\t\t\t\t\t\t\t\t'</div>'+\n\t\t\t\t\t\t\t\t'<div class=\"datepicker-years\">'+\n\t\t\t\t\t\t\t\t\t'<table class=\"table-condensed\">'+\n\t\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\n\t\t\t\t\t\t\t\t\t\tDPGlobal.contTemplate+\n\t\t\t\t\t\t\t\t\t\tDPGlobal.footTemplate+\n\t\t\t\t\t\t\t\t\t'</table>'+\n\t\t\t\t\t\t\t\t'</div>'+\n\t\t\t\t\t\t\t\t'<div class=\"datepicker-decades\">'+\n\t\t\t\t\t\t\t\t\t'<table class=\"table-condensed\">'+\n\t\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\n\t\t\t\t\t\t\t\t\t\tDPGlobal.contTemplate+\n\t\t\t\t\t\t\t\t\t\tDPGlobal.footTemplate+\n\t\t\t\t\t\t\t\t\t'</table>'+\n\t\t\t\t\t\t\t\t'</div>'+\n\t\t\t\t\t\t\t\t'<div class=\"datepicker-centuries\">'+\n\t\t\t\t\t\t\t\t\t'<table class=\"table-condensed\">'+\n\t\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\n\t\t\t\t\t\t\t\t\t\tDPGlobal.contTemplate+\n\t\t\t\t\t\t\t\t\t\tDPGlobal.footTemplate+\n\t\t\t\t\t\t\t\t\t'</table>'+\n\t\t\t\t\t\t\t\t'</div>'+\n\t\t\t\t\t\t\t'</div>';\n\t\n\t\t$.fn.datepicker.DPGlobal = DPGlobal;\n\t\n\t\n\t\t/* DATEPICKER NO CONFLICT\n\t\t* =================== */\n\t\n\t\t$.fn.datepicker.noConflict = function(){\n\t\t\t$.fn.datepicker = old;\n\t\t\treturn this;\n\t\t};\n\t\n\t\t/* DATEPICKER VERSION\n\t\t * =================== */\n\t\t$.fn.datepicker.version = '1.7.1';\n\t\n\t\t$.fn.datepicker.deprecated = function(msg){\n\t\t\tvar console = window.console;\n\t\t\tif (console && console.warn) {\n\t\t\t\tconsole.warn('DEPRECATED: ' + msg);\n\t\t\t}\n\t\t};\n\t\n\t\n\t\t/* DATEPICKER DATA-API\n\t\t* ================== */\n\t\n\t\t$(document).on(\n\t\t\t'focus.datepicker.data-api click.datepicker.data-api',\n\t\t\t'[data-provide=\"datepicker\"]',\n\t\t\tfunction(e){\n\t\t\t\tvar $this = $(this);\n\t\t\t\tif ($this.data('datepicker'))\n\t\t\t\t\treturn;\n\t\t\t\te.preventDefault();\n\t\t\t\t// component click requires us to explicitly show it\n\t\t\t\tdatepickerPlugin.call($this, 'show');\n\t\t\t}\n\t\t);\n\t\t$(function(){\n\t\t\tdatepickerPlugin.call($('[data-provide=\"datepicker-inline\"]'));\n\t\t});\n\t\n\t}));\n\n\n/***/ },\n\n/***/ 155:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2013 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t__webpack_require__(3);\n\tvar $ = __webpack_require__(19);\n\tvar cockpit = __webpack_require__(2);\n\tvar machine_info = __webpack_require__(15);\n\tvar packagekit = __webpack_require__(156);\n\t\n\tvar Mustache = __webpack_require__(21);\n\tvar plot = __webpack_require__(157);\n\tvar service = __webpack_require__(161);\n\t\n\t/* These add themselves to jQuery so just including is enough */\n\t__webpack_require__(153);\n\t__webpack_require__(154);\n\t__webpack_require__(162);\n\t\n\tvar shutdown = __webpack_require__(163);\n\t\n\tvar host_keys_script = __webpack_require__(164);\n\t\n\tvar _ = cockpit.gettext;\n\tvar C_ = cockpit.gettext;\n\t\n\tvar permission = cockpit.permission({ admin: true });\n\t$(permission).on(\"changed\", update_hostname_privileged);\n\t$(permission).on(\"changed\", update_shutdown_privileged);\n\t\n\tfunction update_hostname_privileged() {\n\t    $(\".hostname-privileged\").update_privileged(\n\t        permission, cockpit.format(\n\t            _(\"The user <b>$0</b> is not permitted to modify hostnames\"),\n\t            permission.user ? permission.user.name : '')\n\t    );\n\t}\n\t\n\tfunction update_shutdown_privileged() {\n\t    $(\".shutdown-privileged\").update_privileged(\n\t        permission, cockpit.format(\n\t            _(\"The user <b>$0</b> is not permitted to shutdown or restart this server\"),\n\t            permission.user ? permission.user.name : '')\n\t    );\n\t}\n\t\n\tfunction debug() {\n\t    if (window.debugging == \"all\" || window.debugging == \"system\")\n\t        console.debug.apply(console, arguments);\n\t}\n\t\n\tfunction ServerTime() {\n\t    var self = this;\n\t\n\t    var client = cockpit.dbus('org.freedesktop.timedate1');\n\t    var timedate = client.proxy();\n\t\n\t    var time_offset = null;\n\t    var remote_offset = null;\n\t\n\t    self.timedate = timedate;\n\t\n\t    self.timedate1_service = service.proxy(\"dbus-org.freedesktop.timedate1.service\");\n\t    self.timesyncd_service = service.proxy(\"systemd-timesyncd.service\");\n\t\n\t    /*\n\t     * The time we return from here as its UTC time set to the\n\t     * server time. This is the only way to get predictable\n\t     * behavior and formatting of a Date() object in the absence of\n\t     * IntlDateFormat and  friends.\n\t     */\n\t    Object.defineProperty(self, 'utc_fake_now', {\n\t        enumerable: true,\n\t        get: function get() {\n\t            var offset = time_offset + remote_offset;\n\t            return new Date(offset + (new Date()).valueOf());\n\t        }\n\t    });\n\t\n\t    Object.defineProperty(self, 'now', {\n\t        enumerable: true,\n\t        get: function get() {\n\t            return new Date(time_offset + (new Date()).valueOf());\n\t        }\n\t    });\n\t\n\t    self.format = function format(and_time) {\n\t        var string = self.utc_fake_now.toISOString();\n\t        if (!and_time)\n\t            return string.split('T')[0];\n\t        var pos = string.lastIndexOf(':');\n\t        if (pos !== -1)\n\t            string = string.substring(0, pos);\n\t        return string.replace('T', ' ');\n\t    };\n\t\n\t    self.updateInterval = window.setInterval(function() {\n\t        $(self).triggerHandler(\"changed\");\n\t    }, 30000);\n\t\n\t    self.wait = function wait() {\n\t        if (remote_offset === null)\n\t            return self.update();\n\t        return cockpit.resolve();\n\t    };\n\t\n\t    self.update = function update() {\n\t        return cockpit.spawn([\"date\", \"+%s:%:z\"], { err: \"message\" })\n\t            .done(function(data) {\n\t                var parts = data.trim().split(\":\").map(function(x) {\n\t                    return parseInt(x, 10);\n\t                });\n\t                if (parts[1] < 0)\n\t                    parts[2] = -(parts[2]);\n\t                var timems = parts[0] * 1000;\n\t                var offsetms = (parts[1] * 3600000) + parts[2] * 60000;\n\t                var now = new Date();\n\t                time_offset = (timems - now.valueOf());\n\t                remote_offset = offsetms;\n\t                $(self).triggerHandler(\"changed\");\n\t            })\n\t            .fail(function(ex) {\n\t                console.log(\"Couldn't calculate server time offset: \" + cockpit.message(ex));\n\t            });\n\t    };\n\t\n\t    self.change_time = function change_time(datestr, hourstr, minstr) {\n\t        var dfd = $.Deferred();\n\t\n\t        /*\n\t         * The browser is brain dead when it comes to dates. But even if\n\t         * it wasn't, or we loaded a library like moment.js, there is no\n\t         * way to make sense of this date without a round trip to the\n\t         * server ... the timezone is really server specific.\n\t         */\n\t        cockpit.spawn([\"date\", \"--date=\" + datestr + \" \" + hourstr + \":\" + minstr, \"+%s\"])\n\t            .fail(function(ex) {\n\t                dfd.reject(ex);\n\t            })\n\t            .done(function(data) {\n\t                var seconds = parseInt(data.trim(), 10);\n\t                timedate.call('SetTime', [seconds * 1000 * 1000, false, true])\n\t                    .fail(function(ex) {\n\t                        dfd.reject(ex);\n\t                    })\n\t                    .done(function() {\n\t                        self.update();\n\t                        dfd.resolve();\n\t                    });\n\t            });\n\t\n\t        return dfd;\n\t    };\n\t\n\t    self.poll_ntp_synchronized = function poll_ntp_synchronized() {\n\t        client.call(timedate.path,\n\t                    \"org.freedesktop.DBus.Properties\", \"Get\", [ \"org.freedesktop.timedate1\", \"NTPSynchronized\" ]).\n\t            fail(function (error) {\n\t                if (error.name != \"org.freedesktop.DBus.Error.UnknownProperty\" &&\n\t                    error.problem != \"not-found\")\n\t                    console.log(\"can't get NTPSynchronized property\", error);\n\t            }).\n\t            done(function (result) {\n\t                var ifaces = { \"org.freedesktop.timedate1\": { NTPSynchronized: result[0].v } };\n\t                var data = { };\n\t                data[timedate.path] = ifaces;\n\t                client.notify(data);\n\t            });\n\t    };\n\t\n\t    self.close = function close() {\n\t        client.close();\n\t    };\n\t\n\t    self.update();\n\t}\n\t\n\tvar change_systime_dialog;\n\t\n\tPageServer.prototype = {\n\t    _init: function() {\n\t        this.id = \"server\";\n\t        this.server_time = null;\n\t        this.client = null;\n\t        this.hostname_proxy = null;\n\t        this.os_updates = null; // packagekit.Enum.INFO_* → #count\n\t        this.os_updates_icon = document.getElementById(\"system_information_updates_icon\");\n\t        this.unregistered = false;\n\t    },\n\t\n\t    getTitle: function() {\n\t        return null;\n\t    },\n\t\n\t    setup: function() {\n\t        var self = this;\n\t        update_hostname_privileged();\n\t\n\t        cockpit.file(\"/etc/motd\").watch(function (content) {\n\t            if (content)\n\t                content = $.trim(content);\n\t            if (content && content != cockpit.localStorage.getItem('dismissed-motd')) {\n\t                $('#motd').text(content);\n\t                $('#motd-box').show();\n\t            } else {\n\t                $('#motd-box').hide();\n\t            }\n\t            // To help the tests known when we have loaded motd\n\t            $('#motd-box').attr('data-stable', 'yes');\n\t        });\n\t\n\t        $('#motd-box button.close').click(function () {\n\t            cockpit.localStorage.setItem('dismissed-motd', $('#motd').text());\n\t            $('#motd-box').hide();\n\t        });\n\t\n\t        $('#shutdown-group [data-action]').on(\"click\", function() {\n\t            self.shutdown($(this).attr('data-action'));\n\t        });\n\t\n\t        $('#system-ostree-version-link').on('click', function () {\n\t            cockpit.jump(\"/updates\", cockpit.transport.host);\n\t        });\n\t\n\t        $('#system_information_hostname_button').on('click', function () {\n\t            PageSystemInformationChangeHostname.client = self.client;\n\t            $('#system_information_change_hostname').modal('show');\n\t        });\n\t\n\t        $('#system_information_systime_button').on('click', function () {\n\t            change_systime_dialog.display(self.server_time);\n\t        });\n\t\n\t        self.server_time = new ServerTime();\n\t        $(self.server_time).on(\"changed\", function() {\n\t            $('#system_information_systime_button').text(self.server_time.format(true));\n\t        });\n\t\n\t        self.ntp_status_tmpl = $(\"#ntp-status-tmpl\").html();\n\t        Mustache.parse(this.ntp_status_tmpl);\n\t\n\t        self.ntp_status_icon_tmpl = $(\"#ntp-status-icon-tmpl\").html();\n\t        Mustache.parse(this.ntp_status_icon_tmpl);\n\t\n\t        self.ssh_host_keys_tmpl = $(\"#ssh-host-keys-tmpl\").html();\n\t        Mustache.parse(this.ssh_host_keys_tmpl);\n\t\n\t        $(\"#system_information_ssh_keys\").on(\"show.bs.modal\", function() {\n\t            self.host_keys_show();\n\t        });\n\t\n\t        $(\"#system_information_ssh_keys\").on(\"hide.bs.modal\", function() {\n\t            self.host_keys_hide();\n\t        });\n\t\n\t        var $ntp_status = $('#system_information_systime_ntp_status');\n\t\n\t        function update_ntp_status() {\n\t\n\t            if (!self.server_time.timedate.NTP) {\n\t                $ntp_status.hide();\n\t                $ntp_status.attr(\"data-original-title\", null);\n\t                return;\n\t            }\n\t\n\t            $ntp_status.show();\n\t\n\t            var model = {\n\t                Synched: self.server_time.timedate.NTPSynchronized,\n\t                service: null\n\t            };\n\t\n\t            var timesyncd_server_regex = /.*time server (.*)\\./i;\n\t\n\t            var timesyncd_status = (self.server_time.timesyncd_service.state == \"running\" &&\n\t                                    self.server_time.timesyncd_service.service &&\n\t                                    self.server_time.timesyncd_service.service.StatusText);\n\t\n\t            if (self.server_time.timesyncd_service.state == \"running\")\n\t                model.service = \"systemd-timesyncd.service\";\n\t\n\t            if (timesyncd_status) {\n\t                var match = timesyncd_status.match(timesyncd_server_regex);\n\t                if (match)\n\t                    model.Server = match[1];\n\t                else if (timesyncd_status != \"Idle.\" && timesyncd_status !== \"\")\n\t                    model.SubStatus = timesyncd_status;\n\t            }\n\t\n\t            var tooltip_html = Mustache.render(self.ntp_status_tmpl, model);\n\t            if (tooltip_html != $ntp_status.attr(\"data-original-title\"))\n\t                $ntp_status.attr(\"data-original-title\", tooltip_html);\n\t\n\t            var icon_html = Mustache.render(self.ntp_status_icon_tmpl, model);\n\t            $ntp_status.html(icon_html);\n\t        }\n\t\n\t        $ntp_status.tooltip();\n\t\n\t        $(self.server_time.timesyncd_service).on(\"changed\", update_ntp_status);\n\t        $(self.server_time.timedate).on(\"changed\", update_ntp_status);\n\t        update_ntp_status();\n\t\n\t        /* NTPSynchronized needs to be polled so we just do that\n\t         * always.\n\t         */\n\t        window.setInterval(function () {\n\t            self.server_time.poll_ntp_synchronized();\n\t        }, 5000);\n\t\n\t        $('#server').on('click', \"[data-goto-service]\", function () {\n\t            var service = $(this).attr(\"data-goto-service\");\n\t            cockpit.jump(\"/system/services/#/\" + window.encodeURIComponent(service),\n\t                         cockpit.transport.host);\n\t        });\n\t\n\t        self.plot_controls = plot.setup_plot_controls($('#server'), $('#server-graph-toolbar'));\n\t\n\t        var pmcd_service = service.proxy(\"pmcd\");\n\t        var pmlogger_service = service.proxy(\"pmlogger\");\n\t        var pmlogger_promise;\n\t\n\t        $(\"#server-pmlogger-switch\").on(\"change\", function(ev) {\n\t            var val = $(this).onoff('value');\n\t            if (pmlogger_service.exists) {\n\t                if (val) {\n\t                    pmlogger_promise = cockpit.all(pmcd_service.enable(),\n\t                           pmcd_service.start(),\n\t                           pmlogger_service.enable(),\n\t                           pmlogger_service.start()).\n\t                        fail(function (error) {\n\t                            console.warn(\"Enabling pmlogger failed\", error);\n\t                        });\n\t                } else {\n\t                    pmlogger_promise = cockpit.all(pmlogger_service.disable(),\n\t                           pmlogger_service.stop()).\n\t                        fail(function (error) {\n\t                            console.warn(\"Disabling pmlogger failed\", error);\n\t                        });\n\t                }\n\t                pmlogger_promise.always(function() {\n\t                    pmlogger_promise = null;\n\t                    refresh_pmlogger_state();\n\t                });\n\t            }\n\t        });\n\t\n\t        function refresh_pmlogger_state() {\n\t            if (!pmlogger_service.exists)\n\t                $('#server-pmlogger-onoff-row').hide();\n\t            else if (!pmlogger_promise) {\n\t                $(\"#server-pmlogger-switch\").onoff('value', pmlogger_service.enabled);\n\t                $('#server-pmlogger-onoff-row').show();\n\t            }\n\t        }\n\t\n\t        $(pmlogger_service).on('changed', refresh_pmlogger_state);\n\t        refresh_pmlogger_state();\n\t\n\t        // if cockpit component \"page\" is available, set element content to a link to it, otherwise just text\n\t        function set_page_link(element_sel, page, text) {\n\t            if (cockpit.manifests[page]) {\n\t                var link = document.createElement(\"a\");\n\t                link.innerHTML = text;\n\t                link.addEventListener(\"click\", function() { cockpit.jump(\"/\" + page); });\n\t                $(element_sel).html(link);\n\t            } else {\n\t                $(element_sel).text(text);\n\t            }\n\t        }\n\t\n\t        function refresh_os_updates_state() {\n\t            self.os_updates_icon.className = \"\"; // hide spinner\n\t\n\t            // if system is unregistered, always show that\n\t            if (self.unregistered) {\n\t                self.os_updates_icon.className = \"pficon pficon-warning-triangle-o\";\n\t                set_page_link(\"#system_information_updates_text\", \"subscriptions\", _(\"System Not Registered\"));\n\t                return;\n\t            }\n\t\n\t            var infos = Object.keys(self.os_updates || {}).sort();\n\t            if (infos.length === 0) {\n\t                $(\"#system_information_updates_text\").text(_(\"System Up To Date\"));\n\t                return;\n\t            }\n\t\n\t            // show highest severity level\n\t            var severity = infos[infos.length - 1];\n\t            var text;\n\t            self.os_updates_icon.className = packagekit.getSeverityIcon(\n\t                severity > packagekit.Enum.INFO_UNKNOWN ? severity : packagekit.Enum.INFO_NORMAL);\n\t            if (severity == packagekit.Enum.INFO_SECURITY)\n\t                text = _(\"Security Updates Available\");\n\t            else if (severity >= packagekit.Enum.INFO_NORMAL)\n\t                text = _(\"Bug Fix Updates Available\");\n\t            else if (severity >= packagekit.Enum.INFO_LOW)\n\t                text = _(\"Enhancement Updates Available\");\n\t            else\n\t                text = _(\"Updates Available\");\n\t\n\t            set_page_link(\"#system_information_updates_text\", \"updates\", text);\n\t        }\n\t\n\t        function check_for_updates() {\n\t            self.os_updates = null;\n\t\n\t            packagekit.cancellableTransaction(\"GetUpdates\", [0],\n\t                function (data) {\n\t                    // we are getting progress, so PackageKit works; show spinner\n\t                    if (self.os_updates === null) {\n\t                        self.os_updates = {};\n\t                        $(\"#system_information_updates_text\").text(_(\"Checking for updates…\"));\n\t                        self.os_updates_icon.className = \"spinner spinner-xs spinner-inline\";\n\t                    }\n\t                },\n\t                {\n\t                    Package: function (info) {\n\t                        // dnf backend yields wrong severity (https://bugs.freedesktop.org/show_bug.cgi?id=101070)\n\t                        if (info < packagekit.Enum.INFO_LOW || info > packagekit.Enum.INFO_SECURITY)\n\t                            info = packagekit.Enum.INFO_UNKNOWN;\n\t                        self.os_updates[info] = (self.os_updates[info] || 0) + 1;\n\t                    }\n\t                })\n\t                .then(refresh_os_updates_state)\n\t                .catch(function (ex) {\n\t                    // if PackageKit is not available, hide the table line\n\t                    console.warn(\"Checking for available updates failed:\", ex.toString());\n\t                    self.os_updates_icon.className = \"\";\n\t                    $(\"#system_information_updates_text\").toggle(false);\n\t                });\n\t        }\n\t\n\t        // check for updates now and on page switches, in case they get applied on /updates or terminal\n\t        $(cockpit).on(\"visibilitychange\", check_for_updates);\n\t        check_for_updates();\n\t\n\t        // check for unregistered system\n\t        packagekit.watchRedHatSubscription(function (subscribed) {\n\t            self.unregistered = !subscribed;\n\t            refresh_os_updates_state();\n\t        });\n\t    },\n\t\n\t    enter: function() {\n\t        var self = this;\n\t\n\t        var machine_id = cockpit.file(\"/etc/machine-id\");\n\t        machine_id.read().done(function (content) {\n\t            $(\"#system_machine_id\")\n\t                .text(content)\n\t                .tooltip({ title: content, placement: \"bottom\" });\n\t        }).fail(function (ex) {\n\t            console.error(\"Error reading machine id\", ex);\n\t        }).always(function () {\n\t            machine_id.close();\n\t        });\n\t\n\t        self.ostree_client = cockpit.dbus('org.projectatomic.rpmostree1',\n\t                                          {\"superuser\" : true});\n\t        $(self.ostree_client).on(\"close\", function () {\n\t            self.ostree_client = null;\n\t        });\n\t\n\t        self.sysroot = self.ostree_client.proxy('org.projectatomic.rpmostree1.Sysroot',\n\t                                                '/org/projectatomic/rpmostree1/Sysroot');\n\t        $(self.sysroot).on(\"changed\", $.proxy(this, \"sysroot_changed\"));\n\t\n\t        self.client = cockpit.dbus('org.freedesktop.hostname1',\n\t                                   {\"superuser\" : \"try\"});\n\t        self.hostname_proxy = self.client.proxy('org.freedesktop.hostname1',\n\t                                     '/org/freedesktop/hostname1');\n\t        self.kernel_hostname = null;\n\t\n\t        /* CPU graph */\n\t\n\t        var cpu_data = {\n\t            direct: [ \"kernel.all.cpu.nice\", \"kernel.all.cpu.user\", \"kernel.all.cpu.sys\" ],\n\t            internal: [ \"cpu.basic.nice\", \"cpu.basic.user\", \"cpu.basic.system\" ],\n\t            units: \"millisec\",\n\t            derive: \"rate\",\n\t            factor: 0.1  // millisec / sec -> percent\n\t        };\n\t\n\t        var cpu_options = plot.plot_simple_template();\n\t        $.extend(cpu_options.yaxis, { tickFormatter: function(v) { return v.toFixed(0); },\n\t                                      max: 100\n\t                                    });\n\t        self.cpu_plot = plot.plot($(\"#server_cpu_graph\"), 300);\n\t        self.cpu_plot.set_options(cpu_options);\n\t        // This is added to the plot once we have the machine info, see below.\n\t\n\t        /* Memory graph */\n\t\n\t        var memory_data = {\n\t            direct: [ \"mem.util.used\" ],\n\t            internal: [ \"memory.used\" ],\n\t            units: \"bytes\"\n\t        };\n\t\n\t        var memory_options = plot.plot_simple_template();\n\t        $.extend(memory_options.yaxis, { ticks: plot.memory_ticks,\n\t                                         tickFormatter: plot.format_bytes_tick_no_unit\n\t                                       });\n\t        memory_options.post_hook = function memory_post_hook(pl) {\n\t            var axes = pl.getAxes();\n\t            $('#server_memory_unit').text(plot.bytes_tick_unit(axes.yaxis));\n\t        };\n\t\n\t        self.memory_plot = plot.plot($(\"#server_memory_graph\"), 300);\n\t        self.memory_plot.set_options(memory_options);\n\t        self.memory_plot.add_metrics_sum_series(memory_data, { });\n\t\n\t        /* Network graph */\n\t\n\t        var network_data = {\n\t            direct: [ \"network.interface.total.bytes\" ],\n\t            internal: [ \"network.interface.tx\", \"network.interface.rx\" ],\n\t            \"omit-instances\": [ \"lo\" ],\n\t            units: \"bytes\",\n\t            derive: \"rate\"\n\t        };\n\t\n\t        var network_options = plot.plot_simple_template();\n\t        $.extend(network_options.yaxis, { tickFormatter: plot.format_bits_per_sec_tick_no_unit\n\t                                        });\n\t        network_options.setup_hook = function network_setup_hook(pl) {\n\t            var axes = pl.getAxes();\n\t            if (axes.yaxis.datamax < 100000)\n\t                axes.yaxis.options.max = 100000;\n\t            else\n\t                axes.yaxis.options.max = null;\n\t            axes.yaxis.options.min = 0;\n\t        };\n\t        network_options.post_hook = function network_post_hook(pl) {\n\t            var axes = pl.getAxes();\n\t            $('#server_network_traffic_unit').text(plot.bits_per_sec_tick_unit(axes.yaxis));\n\t        };\n\t\n\t        self.network_plot = plot.plot($(\"#server_network_traffic_graph\"), 300);\n\t        self.network_plot.set_options(network_options);\n\t        self.network_plot.add_metrics_sum_series(network_data, { });\n\t\n\t        /* Disk IO graph */\n\t\n\t        var disk_data = {\n\t            direct: [ \"disk.all.total_bytes\" ],\n\t            internal: [ \"disk.all.read\", \"disk.all.written\" ],\n\t            units: \"bytes\",\n\t            derive: \"rate\"\n\t        };\n\t\n\t        var disk_options = plot.plot_simple_template();\n\t        $.extend(disk_options.yaxis, { ticks: plot.memory_ticks,\n\t                                       tickFormatter: plot.format_bytes_per_sec_tick_no_unit\n\t                                     });\n\t        disk_options.setup_hook = function disk_setup_hook(pl) {\n\t            var axes = pl.getAxes();\n\t            if (axes.yaxis.datamax < 100000)\n\t                axes.yaxis.options.max = 100000;\n\t            else\n\t                axes.yaxis.options.max = null;\n\t            axes.yaxis.options.min = 0;\n\t        };\n\t        disk_options.post_hook = function disk_post_hook(pl) {\n\t            var axes = pl.getAxes();\n\t            $('#server_disk_io_unit').text(plot.bytes_per_sec_tick_unit(axes.yaxis));\n\t        };\n\t\n\t        self.disk_plot = plot.plot($(\"#server_disk_io_graph\"), 300);\n\t        self.disk_plot.set_options(disk_options);\n\t        self.disk_plot.add_metrics_sum_series(disk_data, { });\n\t\n\t        machine_info.cpu_ram_info().\n\t            done(function (info) {\n\t                $('#link-cpu').text(cockpit.format(cockpit.ngettext(\"of $0 CPU core\", \"of $0 CPU cores\",\n\t                                                                    info.cpus),\n\t                                                   info.cpus));\n\t                cpu_data.factor = 0.1 / info.cpus; // millisec / sec -> percent\n\t                self.cpu_plot.add_metrics_sum_series(cpu_data, { });\n\t                memory_options.yaxis.max = info.memory;\n\t                self.memory_plot.set_options(memory_options);\n\t            });\n\t\n\t        self.plot_controls.reset([ self.cpu_plot, self.memory_plot, self.network_plot, self.disk_plot ]);\n\t\n\t        $(window).on('resize.server', function () {\n\t            self.cpu_plot.resize();\n\t            self.memory_plot.resize();\n\t            self.network_plot.resize();\n\t            self.disk_plot.resize();\n\t        });\n\t\n\t        machine_info.dmi_info()\n\t            .done(function(fields) {\n\t                $(\"#system_information_hardware_text\")\n\t                    .tooltip({ title: _(\"Click to see system hardware information\"), placement: \"bottom\" })\n\t                    .text(fields.sys_vendor + \" \" + fields.product_name);\n\t                var present = !!(fields.product_serial || fields.chassis_serial);\n\t                $(\"#system_information_asset_tag_text\")\n\t                    .text(fields.product_serial || fields.chassis_serial);\n\t                $(\"#system-info-asset-row\").toggle(present);\n\t            })\n\t            .fail(function(ex) {\n\t                debug(\"couldn't read dmi info: \" + ex);\n\t            });\n\t\n\t        function hostname_text() {\n\t            if (!self.hostname_proxy)\n\t                return;\n\t\n\t            var pretty_hostname = self.hostname_proxy.PrettyHostname;\n\t            var static_hostname = self.hostname_proxy.StaticHostname;\n\t\n\t            var str = self.kernel_hostname;\n\t            if (pretty_hostname && static_hostname && static_hostname != pretty_hostname)\n\t                str = pretty_hostname + \" (\" + static_hostname + \")\";\n\t            else if (static_hostname)\n\t                str = static_hostname;\n\t\n\t            if (!str)\n\t                str = _(\"Set Host name\");\n\t            $(\"#system_information_hostname_button\").text(str);\n\t            $(\"#system_information_hostname_button\").attr(\"title\", str);\n\t            $(\"#system_information_os_text\").text(self.hostname_proxy.OperatingSystemPrettyName || \"\");\n\t        }\n\t\n\t        cockpit.spawn([\"hostname\"], { err: \"ignore\" })\n\t            .done(function(output) {\n\t                self.kernel_hostname = $.trim(output);\n\t                hostname_text();\n\t            })\n\t            .fail(function(ex) {\n\t                hostname_text();\n\t                debug(\"couldn't read kernel hostname: \" + ex);\n\t            });\n\t        $(self.hostname_proxy).on(\"changed\", hostname_text);\n\t    },\n\t\n\t    show: function() {\n\t        this.cpu_plot.start_walking();\n\t        this.memory_plot.start_walking();\n\t        this.disk_plot.start_walking();\n\t        this.network_plot.start_walking();\n\t    },\n\t\n\t    leave: function() {\n\t        var self = this;\n\t\n\t        self.cpu_plot.destroy();\n\t        self.memory_plot.destroy();\n\t        self.disk_plot.destroy();\n\t        self.network_plot.destroy();\n\t\n\t        $(self.hostname_proxy).off();\n\t        self.hostname_proxy = null;\n\t\n\t        self.client.close();\n\t        self.client = null;\n\t\n\t        $(cockpit).off('.server');\n\t\n\t        $(self.sysroot).off();\n\t        self.sysroot = null;\n\t        if (self.ostree_client) {\n\t            self.ostree_client.close();\n\t            self.ostree_client = null;\n\t        }\n\t    },\n\t\n\t    host_keys_show: function() {\n\t        var self = this;\n\t        $(\"#system_information_ssh_keys .spinner\").toggle(true);\n\t        $(\"#system_information_ssh_keys .content\").toggle(false);\n\t        $(\"#system_information_ssh_keys .alert\").toggle(false);\n\t\n\t        /*\n\t         * Yes, we do refresh the keys while the dialog is open.\n\t         * It may occur that sshd is not running at the point when\n\t         * we try, or in rare cases the keys may change.\n\t         */\n\t        self.host_keys_interval = window.setInterval(function() {\n\t            self.host_keys_update();\n\t        }, 10 * 1000);\n\t        self.host_keys_update();\n\t    },\n\t\n\t    host_keys_update: function() {\n\t        var self = this;\n\t        var parenthesis = /^\\((.*)\\)$/;\n\t        var spinner = $(\"#system_information_ssh_keys .spinner\");\n\t        var content = $(\"#system_information_ssh_keys .content\");\n\t        var error = $(\"#system_information_ssh_keys .alert\");\n\t\n\t        cockpit.script(host_keys_script, [],{ \"superuser\": \"try\",\n\t                                              \"err\": \"message\" })\n\t            .done(function(data) {\n\t                var seen = {};\n\t                var arr = [];\n\t                var keys = {};\n\t\n\t                var i, tmp, m;\n\t                var full = data.trim().split(\"\\n\");\n\t                for (i = 0; i < full.length; i++) {\n\t                    var line = full[i];\n\t                    if (!line)\n\t                        continue;\n\t\n\t                    var parts = line.trim().split(\" \");\n\t                    var title, fp = parts[1];\n\t                    if (!seen[fp]) {\n\t                        seen[fp] = fp;\n\t                        title = parts[parts.length - 1];\n\t                        if (title) {\n\t                            m = title.match(parenthesis);\n\t                            if (m && m[1])\n\t                                title = m[1];\n\t                        }\n\t                        if (!keys[title])\n\t                            keys[title] = [];\n\t                        keys[title].push(fp);\n\t                    }\n\t                }\n\t\n\t                arr = Object.keys(keys);\n\t                arr.sort();\n\t                arr = arr.map(function (k) {\n\t                    return { title: k, fps: keys[k] };\n\t                });\n\t\n\t                tmp = Mustache.render(self.ssh_host_keys_tmpl, { keys: arr });\n\t                content.html(tmp);\n\t                spinner.toggle(false);\n\t                error.toggle(false);\n\t                content.toggle(true);\n\t            })\n\t            .fail(function(ex) {\n\t                var msg = cockpit.format(_(\"failed to list ssh host keys: $0\"), ex.message);\n\t                content.toggle(false);\n\t                spinner.toggle(false);\n\t                $(\"#system_information_ssh_keys .alert strong\").text(msg);\n\t                error.toggle(true);\n\t            });\n\t    },\n\t\n\t    host_keys_hide: function() {\n\t        var self = this;\n\t        window.clearInterval(self.host_keys_interval);\n\t        self.host_keys_interval = null;\n\t    },\n\t\n\t    sysroot_changed: function() {\n\t        var self = this;\n\t\n\t        if (self.sysroot.Booted && self.ostree_client) {\n\t            var version = \"\";\n\t            self.ostree_client.call(self.sysroot.Booted,\n\t                                    \"org.freedesktop.DBus.Properties\", \"Get\",\n\t                                    ['org.projectatomic.rpmostree1.OS',\n\t                                     \"BootedDeployment\"])\n\t                .done(function (result) {\n\t                    if (result && result[0]) {\n\t                        var deployment = result[0].v;\n\t                        if (deployment && deployment.version)\n\t                            version = deployment.version.v;\n\t                    }\n\t                })\n\t                .fail(function (ex) {\n\t                    console.log(ex);\n\t                })\n\t                .always(function () {\n\t                    $(\"#system-ostree-version\").toggleClass(\"hidden\", !version);\n\t                    $(\"#system-ostree-version-link\").text(version);\n\t                });\n\t        } else {\n\t            $(\"#system-ostree-version\").toggleClass(\"hidden\", true);\n\t            $(\"#system-ostree-version-link\").text(\"\");\n\t        }\n\t    },\n\t\n\t    shutdown: function(action_type) {\n\t        shutdown(action_type, this.server_time);\n\t    },\n\t};\n\t\n\tfunction PageServer() {\n\t    this._init();\n\t}\n\t\n\tPageSystemInformationChangeHostname.prototype = {\n\t    _init: function() {\n\t        this.id = \"system_information_change_hostname\";\n\t    },\n\t\n\t    setup: function() {\n\t        $(\"#sich-pretty-hostname\").on(\"input change\", $.proxy(this._on_full_name_changed, this));\n\t        $(\"#sich-hostname\").on(\"input change\", $.proxy(this._on_name_changed, this));\n\t        $(\"#sich-apply-button\").on(\"click\", $.proxy(this._on_apply_button, this));\n\t    },\n\t\n\t    enter: function() {\n\t        var self = this;\n\t\n\t        self.hostname_proxy = PageSystemInformationChangeHostname.client.proxy();\n\t\n\t        self._initial_hostname = self.hostname_proxy.StaticHostname || \"\";\n\t        self._initial_pretty_hostname = self.hostname_proxy.PrettyHostname || \"\";\n\t        $(\"#sich-pretty-hostname\").val(self._initial_pretty_hostname);\n\t        $(\"#sich-hostname\").val(self._initial_hostname);\n\t\n\t        this._always_update_from_pretty = false;\n\t        this._update();\n\t    },\n\t\n\t    show: function() {\n\t        $(\"#sich-pretty-hostname\").focus();\n\t    },\n\t\n\t    leave: function() {\n\t        this.hostname_proxy = null;\n\t    },\n\t\n\t    _on_apply_button: function(event) {\n\t        var self = this;\n\t\n\t        var new_full_name = $(\"#sich-pretty-hostname\").val();\n\t        var new_name = $(\"#sich-hostname\").val();\n\t\n\t        var one = self.hostname_proxy.call(\"SetStaticHostname\", [new_name, true]);\n\t        var two = self.hostname_proxy.call(\"SetPrettyHostname\", [new_full_name, true]);\n\t        $(\"#system_information_change_hostname\").dialog(\"promise\", cockpit.all(one, two));\n\t    },\n\t\n\t    _on_full_name_changed: function(event) {\n\t        /* Whenever the pretty host name has changed (e.g. the user has edited it), we compute a new\n\t         * simple host name (e.g. 7bit ASCII, no special chars/spaces, lower case) from it...\n\t         */\n\t        var pretty_hostname = $(\"#sich-pretty-hostname\").val();\n\t        if (this._always_update_from_pretty || this._initial_pretty_hostname != pretty_hostname) {\n\t            var old_hostname = $(\"#sich-hostname\").val();\n\t            var first_dot = old_hostname.indexOf(\".\");\n\t            var new_hostname = pretty_hostname.toLowerCase().replace(/['\".]+/g, \"\").replace(/[^a-zA-Z0-9]+/g, \"-\");\n\t            new_hostname = new_hostname.substr(0, 64);\n\t            if (first_dot >= 0)\n\t                new_hostname = new_hostname + old_hostname.substr(first_dot);\n\t            $(\"#sich-hostname\").val(new_hostname);\n\t            this._always_update_from_pretty = true; // make sure we always update it from now-on\n\t        }\n\t        this._update();\n\t    },\n\t\n\t    _on_name_changed: function(event) {\n\t        this._update();\n\t    },\n\t\n\t    _update: function() {\n\t        var apply_button = $(\"#sich-apply-button\");\n\t        var note1 = $(\"#sich-note-1\");\n\t        var note2 = $(\"#sich-note-2\");\n\t        var changed = false;\n\t        var valid = false;\n\t        var can_apply = false;\n\t\n\t        var charError = _(\"Real host name can only contain lower-case characters, digits, dashes, and periods (with populated subdomains)\");\n\t        var lengthError = _(\"Real host name must be 64 characters or less\");\n\t\n\t        var validLength = $(\"#sich-hostname\").val().length <= 64;\n\t        var hostname = $(\"#sich-hostname\").val();\n\t        var pretty_hostname = $(\"#sich-pretty-hostname\").val();\n\t        var validSubdomains = true;\n\t        var periodCount = 0;\n\t\n\t        for(var i=0; i<$(\"#sich-hostname\").val().length; i++) {\n\t            if($(\"#sich-hostname\").val()[i] == '.')\n\t                periodCount++;\n\t            else\n\t                periodCount = 0;\n\t\n\t            if(periodCount > 1) {\n\t                validSubdomains = false;\n\t                break;\n\t            }\n\t        }\n\t\n\t        var validName = (hostname.match(/[.a-z0-9-]*/) == hostname) && validSubdomains;\n\t\n\t        if ((hostname != this._initial_hostname ||\n\t            pretty_hostname != this._initial_pretty_hostname) &&\n\t            (hostname !== \"\" || pretty_hostname !== \"\"))\n\t            changed = true;\n\t\n\t        if (validLength && validName)\n\t            valid = true;\n\t\n\t        if (changed && valid)\n\t            can_apply = true;\n\t\n\t        if (valid) {\n\t            $(note1).css(\"visibility\", \"hidden\");\n\t            $(note2).css(\"visibility\", \"hidden\");\n\t            $(\"#sich-hostname-error\").removeClass(\"has-error\");\n\t        } else if(!validLength && validName) {\n\t            $(\"#sich-hostname-error\").addClass(\"has-error\");\n\t            $(note1).text(lengthError);\n\t            $(note1).css(\"visibility\", \"visible\");\n\t            $(note2).css(\"visibility\", \"hidden\");\n\t        } else if(validLength && !validName) {\n\t            $(\"#sich-hostname-error\").addClass(\"has-error\");\n\t            $(note1).text(charError);\n\t            $(note1).css(\"visibility\", \"visible\");\n\t            $(note2).css(\"visibility\", \"hidden\");\n\t        } else {\n\t            $(\"#sich-hostname-error\").addClass(\"has-error\");\n\t\n\t            if($(note1).text() === lengthError)\n\t                $(note2).text(charError);\n\t            else if($(note1).text() === charError)\n\t                $(note2).text(lengthError);\n\t            else {\n\t                $(note1).text(lengthError);\n\t                $(note2).text(charError);\n\t            }\n\t            $(note1).css(\"visibility\", \"visible\");\n\t            $(note2).css(\"visibility\", \"visible\");\n\t        }\n\t\n\t        apply_button.prop('disabled', !can_apply);\n\t    }\n\t};\n\t\n\tfunction PageSystemInformationChangeHostname() {\n\t    this._init();\n\t}\n\t\n\tPageSystemInformationChangeSystime.prototype = {\n\t    _init: function() {\n\t        this.id = \"system_information_change_systime\";\n\t        this.date = \"\";\n\t        this.ntp_type = null;\n\t    },\n\t\n\t    setup: function() {\n\t        var self = this;\n\t\n\t        function enable_apply_button() {\n\t            $('#systime-apply-button').prop('disabled', false);\n\t        }\n\t\n\t\n\t        $(\"#systime-apply-button\").on(\"click\", $.proxy(this._on_apply_button, this));\n\t\n\t        self.ntp_type = \"manual_time\";\n\t        $('#change_systime li').on('click', function() {\n\t            self.ntp_type = $(this).attr(\"value\");\n\t            self.update();\n\t        });\n\t\n\t        $('#systime-time-minutes').on('focusout', $.proxy(this, \"update_minutes\"));\n\t        $('#systime-date-input').datepicker({\n\t            autoclose: true,\n\t            todayHighlight: true,\n\t            format: 'yyyy-mm-dd'\n\t        });\n\t        $('#systime-timezones').css('max-height', '10em');\n\t        $('#systime-timezones').combobox();\n\t\n\t        $('#systime-time-minutes').on('input', enable_apply_button);\n\t        $('#systime-time-hours').on('input', enable_apply_button);\n\t        $('#systime-date-input').on('input', enable_apply_button);\n\t        $('#systime-timezones').on('change', enable_apply_button);\n\t        $('#change_systime').on('click', enable_apply_button);\n\t        $('#systime-date-input').on('focusin', $.proxy(this, \"store_date\"));\n\t        $('#systime-date-input').on('focusout', $.proxy(this, \"restore_date\"));\n\t\n\t        self.ntp_servers_tmpl = $(\"#ntp-servers-tmpl\").html();\n\t        Mustache.parse(this.ntp_servers_tmpl);\n\t\n\t        $('#systime-ntp-servers').on('click', '[data-action=\"add\"]', function () {\n\t            var index = $(this).attr('data-index');\n\t            self.sync_ntp_servers();\n\t            self.custom_ntp_servers.splice(index+1, 0, \"\");\n\t            self.update_ntp_servers();\n\t\n\t            // HACK - without returning 'false' here, the dialog will\n\t            // be magically closed when controlled by the\n\t            // check-system-info test.\n\t            return false;\n\t        });\n\t\n\t        $('#systime-ntp-servers').on('click', '[data-action=\"del\"]', function () {\n\t            var index = $(this).attr('data-index');\n\t            self.sync_ntp_servers();\n\t            self.custom_ntp_servers.splice(index, 1);\n\t            self.update_ntp_servers();\n\t\n\t            // HACK - without returning 'false' here, the dialog will\n\t            // be magically closed when controlled by the\n\t            // check-system-info test.\n\t            return false;\n\t        });\n\t    },\n\t\n\t    enter: function() {\n\t        var self = this;\n\t\n\t        $('#systime-date-input').val(self.server_time.format());\n\t        $('#systime-time-minutes').val(self.server_time.utc_fake_now.getUTCMinutes());\n\t        $('#systime-time-hours').val(self.server_time.utc_fake_now.getUTCHours());\n\t\n\t        self.ntp_type = self.server_time.timedate.NTP ?\n\t                        (self.custom_ntp_enabled ? 'ntp_time_custom' : 'ntp_time') : 'manual_time';\n\t        $('#change_systime [value=\"ntp_time\"]').\n\t            toggleClass(\"disabled\", !self.server_time.timedate.CanNTP);\n\t        $('#change_systime [value=\"ntp_time_custom\"]').\n\t            toggleClass(\"disabled\", !(self.server_time.timedate.CanNTP && self.custom_ntp_supported));\n\t        $('#systime-parse-error').parents('tr').hide();\n\t        $('#systime-timezone-error').parents('tr').hide();\n\t        $('#systime-apply-button').prop('disabled', false);\n\t        $('#systime-timezones').prop('disabled', 'disabled');\n\t\n\t        self.update();\n\t        self.update_minutes();\n\t        self.update_ntp_servers();\n\t        self.get_timezones();\n\t    },\n\t\n\t    display: function(server_time) {\n\t        var self = this;\n\t\n\t        if (self.server_time) {\n\t            console.warn(\"change-systime dialog reentered\");\n\t            return;\n\t        }\n\t\n\t        self.server_time = server_time;\n\t\n\t        self.get_ntp_servers(function () {\n\t            $('#system_information_change_systime').modal('show');\n\t        });\n\t    },\n\t\n\t    get_timezones: function() {\n\t        var self = this;\n\t\n\t        function parse_timezones(content) {\n\t            var lines = content.split('\\n');\n\t            var curr_timezone = self.server_time.timedate.Timezone;\n\t\n\t            $('#systime-timezones').empty();\n\t\n\t            for (var i = 0; i < lines.length; i++) {\n\t                $('#systime-timezones').append($('<option>', {\n\t                    value: lines[i],\n\t                    text: lines[i].replace(/_/g, \" \"),\n\t                    selected: lines[i] == curr_timezone\n\t                }));\n\t            }\n\t\n\t            $('#systime-timezones').prop('disabled', false);\n\t            $('#systime-timezones').combobox('refresh');\n\t        }\n\t\n\t        cockpit.spawn([\"/usr/bin/timedatectl\", \"list-timezones\"])\n\t           .done(parse_timezones);\n\t    },\n\t\n\t    get_ntp_servers: function(callback) {\n\t        var self = this;\n\t\n\t        /* We only support editing the configuration of\n\t         * systemd-timesyncd, by dropping a file into\n\t         * /etc/systemd/timesyncd.conf.d.  We assume that timesyncd is\n\t         * used when:\n\t         *\n\t         * - systemd-timedated is answering for\n\t         *   org.freedesktop.timedate1 as opposed to, say, timedatex.\n\t         *\n\t         * - systemd-timesyncd is actually available.\n\t         *\n\t         * The better alternative would be to have an API in\n\t         * o.fd.timedate1 for managing the list of NTP server\n\t         * candidates.\n\t         */\n\t\n\t        var timedate1 = self.server_time.timedate1_service;\n\t        var timesyncd = self.server_time.timesyncd_service;\n\t\n\t        self.custom_ntp_supported = false;\n\t        self.custom_ntp_enabled = false;\n\t        self.custom_ntp_servers = [ ];\n\t\n\t        function check() {\n\t            if ((timedate1.exists === false || timedate1.unit) && (timesyncd.exists !== null)) {\n\t\n\t                $([ timedate1, timesyncd ]).off(\".get_ntp_servers\");\n\t\n\t                if (!timedate1.exists || timedate1.unit.Id !== \"systemd-timedated.service\") {\n\t                    console.log(\"systemd-timedated not in use, ntp server configuration not supported\");\n\t                    callback();\n\t                    return;\n\t                }\n\t\n\t                if (!timesyncd.exists) {\n\t                    console.log(\"systemd-timesyncd not available, ntp server configuration not supported\");\n\t                    callback();\n\t                    return;\n\t                }\n\t\n\t                self.custom_ntp_supported = true;\n\t\n\t                if (!self.ntp_config_file)\n\t                    self.ntp_config_file = cockpit.file(\"/etc/systemd/timesyncd.conf.d/50-cockpit.conf\",\n\t                                                        { superuser: \"try\" });\n\t\n\t                self.ntp_config_file.read().\n\t                    done(function (text) {\n\t                        var ntp_line = \"\";\n\t                        self.ntp_servers = null;\n\t                        if (text) {\n\t                            self.custom_ntp_enabled = true;\n\t                            text.split(\"\\n\").forEach(function (line) {\n\t                                if (line.indexOf(\"NTP=\") === 0) {\n\t                                    ntp_line = line.slice(4);\n\t                                    self.custom_ntp_enabled = true;\n\t                                } else if (line.indexOf(\"#NTP=\") === 0) {\n\t                                    ntp_line = line.slice(5);\n\t                                    self.custom_ntp_enabled = false;\n\t                                }\n\t                            });\n\t\n\t                            self.custom_ntp_servers = ntp_line.split(\" \").filter(function (val) {\n\t                                return val !== \"\";\n\t                            });\n\t                            if (self.custom_ntp_servers.length === 0)\n\t                                self.custom_ntp_enabled = false;\n\t                        }\n\t                        callback();\n\t                    }).\n\t                    fail(function (error) {\n\t                        console.warn(\"failed to load time servers\", error);\n\t                        callback();\n\t                    });\n\t            }\n\t        }\n\t\n\t        $([ timedate1, timesyncd ]).on(\"changed.get_ntp_servers\", check);\n\t        check();\n\t    },\n\t\n\t    set_ntp_servers: function(servers, enabled) {\n\t        var self = this;\n\t\n\t        var text = cockpit.format(\"# This file is automatically generated by Cockpit\\n\\n[Time]\\n${0}NTP=${1}\\n\",\n\t                                  enabled? \"\" : \"#\", servers.join(\" \"));\n\t\n\t        return cockpit.spawn([ \"mkdir\", \"-p\", \"/etc/systemd/timesyncd.conf.d\" ], { superuser: \"try\" }).\n\t            then(function () {\n\t                return self.ntp_config_file.replace(text); });\n\t    },\n\t\n\t    show: function() {\n\t    },\n\t\n\t    leave: function() {\n\t        var self = this;\n\t\n\t        $(self.server_time.timedate1_service).off(\".change_systime\");\n\t        $(self.server_time.timesyncd_service).off(\".change_systime\");\n\t        self.server_time = null;\n\t    },\n\t\n\t    _on_apply_button: function(event) {\n\t        var self = this;\n\t\n\t        if (!self.check_input())\n\t            return;\n\t\n\t        var manual_time = self.ntp_type == 'manual_time';\n\t        var ntp_time_custom = self.ntp_type == 'ntp_time_custom';\n\t\n\t        self.sync_ntp_servers();\n\t        var servers = self.custom_ntp_servers.filter(function (val) { return val !== \"\"; });\n\t\n\t        function target_error (msg, target) {\n\t            var err = new Error(msg);\n\t            err.target = target;\n\t            return err;\n\t        }\n\t\n\t        if (ntp_time_custom && servers.length === 0) {\n\t            var err = target_error(_(\"Need at least one NTP server\"),\n\t                                   '#systime-ntp-servers .systime-inline');\n\t            $(\"#system_information_change_systime\").dialog(\"failure\", err);\n\t            return;\n\t        }\n\t\n\t        var promises = [ ];\n\t\n\t        if (!$('#systime-timezones').prop('disabled')) {\n\t            promises.push(\n\t                self.server_time.timedate.call('SetTimezone', [$('#systime-timezones').val(), true]));\n\t        }\n\t\n\t        function set_ntp(val) {\n\t            return self.server_time.timedate.call('SetNTP', [val, true]);\n\t        }\n\t\n\t        if (manual_time) {\n\t            promises.push(\n\t                set_ntp(false)\n\t                    .then(function () {\n\t                        return self.server_time.change_time($(\"#systime-date-input\").val(),\n\t                                                            $('#systime-time-hours').val(),\n\t                                                            $('#systime-time-minutes').val());\n\t                    }));\n\t        } else if (!self.custom_ntp_supported) {\n\t            promises.push(\n\t                set_ntp(true));\n\t        } else {\n\t            /* HACK - https://bugzilla.redhat.com/show_bug.cgi?id=1272085\n\t             *\n\t             * Switch off NTP, bump the clock by one microsecond to\n\t             * clear the NTPSynchronized status, write the config\n\t             * file, and switch NTP back on.\n\t             *\n\t             */\n\t            promises.push(\n\t                set_ntp(false)\n\t                    .then(function () {\n\t                        return self.server_time.timedate.call('SetTime', [ 1, true, true ]);\n\t                    })\n\t                    .then(function () {\n\t                        return self.set_ntp_servers(servers, ntp_time_custom);\n\t                    })\n\t                    .then(function() {\n\t                        // NTPSynchronized should be false now.  Make\n\t                        // sure we pick that up immediately.\n\t                        self.server_time.poll_ntp_synchronized();\n\t\n\t                        return set_ntp(true);\n\t                    }));\n\t        }\n\t\n\t        $(\"#system_information_change_systime\").dialog(\"promise\", cockpit.all(promises));\n\t    },\n\t\n\t    check_input: function() {\n\t        var date_error = false;\n\t        var timezone_error = false;\n\t        var new_date;\n\t\n\t        var hours = $('#systime-time-hours').val();\n\t        var minutes = $('#systime-time-minutes').val();\n\t        var time_error = !/^[0-9]+$/.test(hours.trim()) || !/^[0-9]+$/.test(minutes.trim());\n\t\n\t        if (!time_error) {\n\t            hours = Number(hours);\n\t            minutes = Number(minutes);\n\t            time_error = hours < 0 || hours > 23 || minutes < 0 || minutes > 59;\n\t        }\n\t\n\t        new_date = new Date($(\"#systime-date-input\").val());\n\t\n\t        if (isNaN(new_date.getTime()) || new_date.getTime() < 0)\n\t            date_error = true;\n\t\n\t        if (time_error && date_error)\n\t           $('#systime-parse-error').text(_(\"Invalid date format and invalid time format\"));\n\t        else if (time_error)\n\t           $('#systime-parse-error').text(_(\"Invalid time format\"));\n\t        else if (date_error)\n\t           $('#systime-parse-error').text(_(\"Invalid date format\"));\n\t\n\t        if ($('#systime-timezones').val() === \"\") {\n\t           timezone_error = true;\n\t           $('#systime-timezone-error').css('visibility', 'visible');\n\t        } else {\n\t           $('#systime-timezone-error').css('visibility', 'hidden');\n\t        }\n\t\n\t        $('#systime-timezones').toggleClass(\"has-error\", ! timezone_error);\n\t        $('#systime-time-hours').toggleClass(\"has-error\", ! time_error);\n\t        $('#systime-time-minutes').toggleClass(\"has-error\", ! time_error);\n\t        $('#systime-date-input').toggleClass(\"has-error\", ! date_error);\n\t\n\t        $('#systime-parse-error').parents('tr').toggleClass(\"has-error\", time_error || date_error);\n\t        $('#systime-parse-error').toggle(time_error || date_error);\n\t        $('#systime-timezone-error').parents('tr').toggle(timezone_error);\n\t\n\t        if (time_error || date_error || timezone_error) {\n\t            $('#systime-apply-button').prop('disabled', true);\n\t            return false;\n\t        } else {\n\t            $('#systime-apply-button').prop('disabled', false);\n\t            return true;\n\t        }\n\t    },\n\t\n\t    update: function() {\n\t        var self = this;\n\t        var manual_time = self.ntp_type === 'manual_time';\n\t        var ntp_time_custom = self.ntp_type === 'ntp_time_custom';\n\t        var text = $(\"#change_systime li[value=\" + self.ntp_type + \"]\").text();\n\t        $(\"#change_systime button span\").text(text);\n\t        $('#systime-manual-row, #systime-manual-error-row').toggle(manual_time);\n\t        $('#systime-ntp-servers-row').toggle(ntp_time_custom);\n\t        $('#systime-parse-error').hide();\n\t    },\n\t\n\t    sync_ntp_servers: function() {\n\t        var self = this;\n\t\n\t        self.custom_ntp_servers = $('#systime-ntp-servers input').map(function (i, elt) {\n\t            return $(elt).val();\n\t        }).get();\n\t    },\n\t\n\t    update_ntp_servers: function() {\n\t        var self = this;\n\t\n\t        if (self.custom_ntp_servers === null || self.custom_ntp_servers.length === 0)\n\t            self.custom_ntp_servers = [ \"\" ];\n\t\n\t        var model = {\n\t            NTPServers: self.custom_ntp_servers.map(function (val, i) {\n\t                return { index: i,\n\t                         Value: val,\n\t                         Placeholder: _(\"NTP Server\")\n\t                       };\n\t            })\n\t        };\n\t\n\t        $('#systime-ntp-servers').html(Mustache.render(self.ntp_servers_tmpl, model));\n\t    },\n\t\n\t    update_minutes: function() {\n\t        var val = parseInt($('#systime-time-minutes').val(), 10);\n\t        if (val < 10)\n\t            $('#systime-time-minutes').val(\"0\" + val);\n\t    },\n\t\n\t    store_date: function() {\n\t        this.date = $(\"#systime-date-input\").val();\n\t    },\n\t\n\t    restore_date: function() {\n\t        if ($(\"#systime-date-input\").val().length === 0)\n\t            $(\"#systime-date-input\").val(this.date);\n\t    }\n\t};\n\t\n\tfunction PageSystemInformationChangeSystime() {\n\t    this._init();\n\t}\n\t\n\tPageCpuStatus.prototype = {\n\t    _init: function() {\n\t        this.id = \"cpu_status\";\n\t    },\n\t\n\t    getTitle: function() {\n\t        return C_(\"page-title\", \"CPU Status\");\n\t    },\n\t\n\t    enter: function() {\n\t        var self = this;\n\t\n\t        var n_cpus = 1;\n\t\n\t        var options = {\n\t            series: {shadowSize: 0,\n\t                     lines: {lineWidth: 0, fill: true}\n\t                    },\n\t            yaxis: {min: 0,\n\t                    max: n_cpus * 1000,\n\t                    show: true,\n\t                    ticks: 5,\n\t                    tickFormatter: function(v) { return (v / 10 / n_cpus) + \"%\"; }},\n\t            xaxis: {show: true,\n\t                    ticks: [[0.0*60, \"5 min\"],\n\t                            [1.0*60, \"4 min\"],\n\t                            [2.0*60, \"3 min\"],\n\t                            [3.0*60, \"2 min\"],\n\t                            [4.0*60, \"1 min\"]]},\n\t            x_rh_stack_graphs: true\n\t        };\n\t\n\t        var metrics = [\n\t            { name: \"cpu.basic.iowait\", derive: \"rate\" },\n\t            { name: \"cpu.basic.system\", derive: \"rate\" },\n\t            { name: \"cpu.basic.user\", derive: \"rate\" },\n\t            { name: \"cpu.basic.nice\", derive: \"rate\" },\n\t        ];\n\t\n\t        var series = [\n\t            { color: \"#e41a1c\", label: _(\"I/O Wait\") },\n\t            { color: \"#ff7f00\", label: _(\"Kernel\") },\n\t            { color: \"#377eb8\", label: _(\"User\") },\n\t            { color: \"#4daf4a\", label: _(\"Nice\") },\n\t        ];\n\t\n\t        self.channel = cockpit.metrics(1000, {\n\t            source: \"internal\",\n\t            metrics: metrics,\n\t            cache: \"cpu-status-rate\"\n\t        });\n\t\n\t        /* The grid shows us the last five minutes */\n\t        self.grid = cockpit.grid(1000, -300, -0);\n\t\n\t        var i;\n\t        for(i = 0; i < series.length; i++) {\n\t            series[i].row = self.grid.add(self.channel, [ metrics[i].name ]);\n\t        }\n\t\n\t        /* Start pulling data, and make the grid follow the data */\n\t        self.channel.follow();\n\t        self.grid.walk();\n\t\n\t        this.plot = plot.setup_complicated_plot(\"#cpu_status_graph\", self.grid, series, options);\n\t\n\t        machine_info.cpu_ram_info().\n\t            done(function (info) {\n\t                // Setting n_cpus changes the tick labels, see tickFormatter above.\n\t                n_cpus = info.cpus;\n\t                self.plot.set_yaxis_max(n_cpus * 1000);\n\t                $(\"#cpu_status_title\").text(cockpit.format(cockpit.ngettext(\"Usage of $0 CPU core\",\n\t                                                                            \"Usage of $0 CPU cores\",\n\t                                                                            n_cpus),\n\t                                                           n_cpus));\n\t            });\n\t    },\n\t\n\t    show: function() {\n\t        this.plot.start();\n\t    },\n\t\n\t    leave: function() {\n\t        this.plot.destroy();\n\t        this.channel.close();\n\t        this.channel = null;\n\t    }\n\t};\n\t\n\tfunction PageCpuStatus() {\n\t    this._init();\n\t}\n\t\n\tPageMemoryStatus.prototype = {\n\t    _init: function() {\n\t        this.id = \"memory_status\";\n\t    },\n\t\n\t    getTitle: function() {\n\t        return C_(\"page-title\", \"Memory\");\n\t    },\n\t\n\t    enter: function() {\n\t        var self = this;\n\t\n\t        var options = {\n\t            series: {shadowSize: 0, // drawing is faster without shadows\n\t                     lines: {lineWidth: 0.0, fill: true}\n\t                    },\n\t            yaxis: {min: 0,\n\t                    ticks: 5,\n\t                    tickFormatter: function (v) {\n\t                        return cockpit.format_bytes(v);\n\t                    }\n\t                   },\n\t            xaxis: {show: true,\n\t                    ticks: [[0.0 * 60, _(\"5 min\")],\n\t                            [1.0 * 60, _(\"4 min\")],\n\t                            [2.0 * 60, _(\"3 min\")],\n\t                            [3.0 * 60, _(\"2 min\")],\n\t                            [4.0 * 60, _(\"1 min\")]]},\n\t            x_rh_stack_graphs: true\n\t        };\n\t\n\t        var metrics = [\n\t            { name: \"memory.swap-used\" },\n\t            { name: \"memory.cached\" },\n\t            { name: \"memory.used\" },\n\t            { name: \"memory.free\" },\n\t        ];\n\t\n\t        var series = [\n\t            { color: \"#e41a1c\", label: _(\"Swap Used\") },\n\t            { color: \"#ff7f00\", label: _(\"Cached\") },\n\t            { color: \"#377eb8\", label: _(\"Used\") },\n\t            { color: \"#4daf4a\", label: _(\"Free\") },\n\t        ];\n\t\n\t        self.channel = cockpit.metrics(1000, {\n\t            source: \"internal\",\n\t            metrics: metrics,\n\t            cache: \"memory-status\"\n\t        });\n\t\n\t        /* The grid shows us the last five minutes */\n\t        self.grid = cockpit.grid(1000, -300, -0);\n\t\n\t        var i;\n\t        for(i = 0; i < series.length; i++) {\n\t            series[i].row = self.grid.add(self.channel, [ metrics[i].name ]);\n\t        }\n\t\n\t        /* Start pulling data, and make the grid follow the data */\n\t        self.channel.follow();\n\t        self.grid.walk();\n\t\n\t        this.plot = plot.setup_complicated_plot(\"#memory_status_graph\", self.grid, series, options);\n\t    },\n\t\n\t    show: function() {\n\t        this.plot.start();\n\t    },\n\t\n\t    leave: function() {\n\t        this.plot.destroy();\n\t        this.channel.close();\n\t        this.channel = null;\n\t    }\n\t};\n\t\n\tfunction PageMemoryStatus() {\n\t    this._init();\n\t}\n\t\n\t$(\"#link-cpu\").on(\"click\", function() {\n\t    cockpit.location.go([ \"cpu\" ]);\n\t    return false;\n\t});\n\t\n\t$(\"#link-memory\").on(\"click\", function() {\n\t    cockpit.location.go([ \"memory\" ]);\n\t    return false;\n\t});\n\t\n\t$(\"#link-network\").on(\"click\", function() {\n\t    cockpit.jump(\"/network\", cockpit.transport.host);\n\t    return false;\n\t});\n\t\n\t$(\"#link-disk\").on(\"click\", function() {\n\t    cockpit.jump(\"/storage\", cockpit.transport.host);\n\t    return false;\n\t});\n\t\n\t$(\"#system_information_hardware_text\").on(\"click\", function() {\n\t    $(\"#system_information_hardware_text\").tooltip(\"hide\");\n\t    cockpit.jump(\"/system/hwinfo\", cockpit.transport.host);\n\t    return false;\n\t});\n\t\n\t\n\t/*\n\t * INITIALIZATION AND NAVIGATION\n\t *\n\t * The code above still uses the legacy 'Page' abstraction for both\n\t * pages and dialogs, and expects page.setup, page.enter, page.show,\n\t * and page.leave to be called at the right times.\n\t *\n\t * We cater to this with a little compatability shim consisting of\n\t * 'dialog_setup', 'page_show', and 'page_hide'.\n\t */\n\t\n\tfunction dialog_setup(d) {\n\t    d.setup();\n\t    $('#' + d.id).\n\t        on('show.bs.modal', function (event) {\n\t            if (event.target.id === d.id)\n\t                d.enter();\n\t        }).\n\t        on('shown.bs.modal', function (event) {\n\t            if (event.target.id === d.id)\n\t              d.show();\n\t        }).\n\t        on('hidden.bs.modal', function (event) {\n\t            if (event.target.id === d.id)\n\t              d.leave();\n\t        });\n\t}\n\t\n\tfunction page_show(p, arg) {\n\t    if (!p._entered_)\n\t        p.enter(arg);\n\t    p._entered_ = true;\n\t    $('#' + p.id).show().removeAttr(\"hidden\");\n\t    p.show();\n\t}\n\t\n\tfunction page_hide(p) {\n\t    $('#' + p.id).hide();\n\t}\n\t\n\tfunction init() {\n\t    var server_page;\n\t    var memory_page;\n\t    var cpu_page;\n\t\n\t    function navigate() {\n\t        var path = cockpit.location.path;\n\t\n\t        if (path.length === 0) {\n\t            page_hide(cpu_page);\n\t            page_hide(memory_page);\n\t            page_show(server_page);\n\t        } else if (path.length === 1 && path[0] == 'cpu') {\n\t            page_hide(server_page);\n\t            page_hide(memory_page);\n\t            page_show(cpu_page);\n\t        } else if (path.length === 1 && path[0] == 'memory') {\n\t            page_hide(server_page);\n\t            page_hide(cpu_page);\n\t            page_show(memory_page);\n\t        } else { /* redirect */\n\t            console.warn(\"not a system location: \" + path);\n\t            cockpit.location = '';\n\t        }\n\t\n\t        $(\"body\").removeAttr(\"hidden\");\n\t    }\n\t\n\t    cockpit.translate();\n\t\n\t    server_page = new PageServer();\n\t    server_page.setup();\n\t\n\t    cpu_page = new PageCpuStatus();\n\t    memory_page = new PageMemoryStatus();\n\t\n\t    dialog_setup(new PageSystemInformationChangeHostname());\n\t    dialog_setup(change_systime_dialog = new PageSystemInformationChangeSystime());\n\t\n\t    $(cockpit).on(\"locationchanged\", navigate);\n\t    navigate();\n\t}\n\t\n\t$(init);\n\n\n/***/ },\n\n/***/ 156:\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.transactionInterface = exports.Enum = undefined;\n\texports.call = call;\n\texports.watchTransaction = watchTransaction;\n\texports.transaction = transaction;\n\texports.cancellableTransaction = cancellableTransaction;\n\texports.getSeverityIcon = getSeverityIcon;\n\texports.watchRedHatSubscription = watchRedHatSubscription;\n\t\n\tvar _cockpit = __webpack_require__(2);\n\t\n\tvar _cockpit2 = _interopRequireDefault(_cockpit);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /*jshint esversion: 6 */\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2017, 2018 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\tvar _ = _cockpit2.default.gettext;\n\t\n\t// see https://github.com/hughsie/PackageKit/blob/master/lib/packagekit-glib2/pk-enum.h\n\tvar Enum = exports.Enum = {\n\t    EXIT_SUCCESS: 1,\n\t    EXIT_FAILED: 2,\n\t    EXIT_CANCELLED: 3,\n\t    ROLE_REFRESH_CACHE: 13,\n\t    ROLE_UPDATE_PACKAGES: 22,\n\t    INFO_UNKNOWN: -1,\n\t    INFO_LOW: 3,\n\t    INFO_ENHANCEMENT: 4,\n\t    INFO_NORMAL: 5,\n\t    INFO_BUGFIX: 6,\n\t    INFO_IMPORTANT: 7,\n\t    INFO_SECURITY: 8,\n\t    STATUS_WAIT: 1,\n\t    STATUS_DOWNLOAD: 8,\n\t    STATUS_INSTALL: 9,\n\t    STATUS_UPDATE: 10,\n\t    STATUS_CLEANUP: 11,\n\t    STATUS_SIGCHECK: 14,\n\t    STATUS_WAITING_FOR_LOCK: 30,\n\t    FILTER_INSTALLED: 1 << 2,\n\t    FILTER_NOT_INSTALLED: 1 << 3,\n\t    FILTER_NEWEST: 1 << 16,\n\t    FILTER_ARCH: 1 << 18,\n\t    FILTER_NOT_SOURCE: 1 << 21,\n\t    ERROR_ALREADY_INSTALLED: 9\n\t};\n\t\n\tvar transactionInterface = exports.transactionInterface = \"org.freedesktop.PackageKit.Transaction\";\n\t\n\tvar _dbus_client = null;\n\t\n\t/**\n\t * Get PackageKit D-Bus client\n\t *\n\t * This will get lazily initialized and re-initialized after PackageKit\n\t * disconnects (due to a crash or idle timeout).\n\t */\n\tfunction dbus_client() {\n\t    if (_dbus_client === null) {\n\t        _dbus_client = _cockpit2.default.dbus(\"org.freedesktop.PackageKit\", { superuser: \"try\", \"track\": true });\n\t        _dbus_client.addEventListener(\"close\", function () {\n\t            console.log(\"PackageKit went away from D-Bus\");\n\t            _dbus_client = null;\n\t        });\n\t    }\n\t\n\t    return _dbus_client;\n\t}\n\t\n\t/**\n\t * Call a PackageKit method\n\t */\n\tfunction call(objectPath, iface, method, args, opts) {\n\t    return dbus_client().call(objectPath, iface, method, args, opts);\n\t}\n\t\n\t/**\n\t * Watch a running PackageKit transaction\n\t *\n\t * transactionPath (string): D-Bus object path of the PackageKit transaction\n\t * signalHandlers, notifyHandler: As in method #transaction\n\t * Returns: If notifyHandler is set, Cockpit promise that resolves when the watch got set up\n\t */\n\tfunction watchTransaction(transactionPath, signalHandlers, notifyHandler) {\n\t    var subscriptions = [];\n\t    var notifyReturn;\n\t    var client = dbus_client();\n\t\n\t    // Listen for PackageKit crashes while the transaction runs\n\t    function onClose(event, ex) {\n\t        console.warn(\"PackageKit went away during transaction\", transactionPath, \":\", JSON.stringify(ex));\n\t        if (signalHandlers.ErrorCode) signalHandlers.ErrorCode(\"close\", _(\"PackageKit crashed\"));\n\t        if (signalHandlers.Finished) signalHandlers.Finished(Enum.EXIT_FAILED);\n\t    }\n\t    client.addEventListener(\"close\", onClose);\n\t\n\t    if (signalHandlers) {\n\t        Object.keys(signalHandlers).forEach(function (handler) {\n\t            return subscriptions.push(client.subscribe({ interface: transactionInterface, path: transactionPath, member: handler }, function (path, iface, signal, args) {\n\t                return signalHandlers[handler].apply(signalHandlers, _toConsumableArray(args));\n\t            }));\n\t        });\n\t    }\n\t\n\t    if (notifyHandler) {\n\t        notifyReturn = client.watch(transactionPath);\n\t        subscriptions.push(notifyReturn);\n\t        client.addEventListener(\"notify\", function (reply) {\n\t            if (transactionPath in reply.detail && transactionInterface in reply.detail[transactionPath]) notifyHandler(reply.detail[transactionPath][transactionInterface], transactionPath);\n\t        });\n\t    }\n\t\n\t    // unsubscribe when transaction finished\n\t    subscriptions.push(client.subscribe({ interface: transactionInterface, path: transactionPath, member: \"Finished\" }, function () {\n\t        subscriptions.map(function (s) {\n\t            return s.remove();\n\t        });\n\t        client.removeEventListener(\"close\", onClose);\n\t    }));\n\t\n\t    return notifyReturn;\n\t}\n\t\n\t/**\n\t * Run a PackageKit transaction\n\t *\n\t * method (string): D-Bus method name on the https://www.freedesktop.org/software/PackageKit/gtk-doc/Transaction.html interface\n\t *                  If undefined, only a transaction will be created without calling a method on it\n\t * arglist (array): \"in\" arguments of @method\n\t * signalHandlers (object): maps PackageKit.Transaction signal names to handlers\n\t * notifyHandler (function): handler for http://cockpit-project.org/guide/latest/cockpit-dbus.html#cockpit-dbus-onnotify\n\t *                           signals, called on property changes with (changed_properties, transaction_path)\n\t * Returns: Promise that resolves with transaction path on success, or rejects on an error\n\t *\n\t * Note that most often you don't really need the transaction path, but want to\n\t * listen to the \"Finished\" signal.\n\t *\n\t * Example:\n\t *     transaction(\"GetUpdates\", [0], {\n\t *             Package: (info, packageId, _summary) => { ... },\n\t *             ErrorCode: (code, details) => { ... },\n\t *         },\n\t *         changedProps => { ... }  // notify handler\n\t *     )\n\t *        .then(transactionPath => { ... })\n\t *        .catch(ex => { handle exception });\n\t */\n\tfunction transaction(method, arglist, signalHandlers, notifyHandler) {\n\t    return new Promise(function (resolve, reject) {\n\t        call(\"/org/freedesktop/PackageKit\", \"org.freedesktop.PackageKit\", \"CreateTransaction\", [], { timeout: 5000 }).done(function (result) {\n\t            var transactionPath = result[0];\n\t            var watchPromise = void 0;\n\t            if (signalHandlers || notifyHandler) watchPromise = watchTransaction(transactionPath, signalHandlers, notifyHandler);\n\t            if (!watchPromise) watchPromise = _cockpit2.default.resolve();\n\t\n\t            watchPromise.done(function () {\n\t                if (method) {\n\t                    call(transactionPath, transactionInterface, method, arglist).done(function () {\n\t                        return resolve(transactionPath);\n\t                    }).fail(reject);\n\t                } else {\n\t                    resolve(transactionPath);\n\t                }\n\t            }).fail(reject);\n\t        }).fail(reject);\n\t    });\n\t}\n\t\n\t/**\n\t * Run a long cancellable PackageKit transaction\n\t *\n\t * method (string): D-Bus method name on the https://www.freedesktop.org/software/PackageKit/gtk-doc/Transaction.html interface\n\t * arglist (array): \"in\" arguments of @method\n\t * progress_cb: Callback that receives a {waiting, percentage, cancel} object regularly; if cancel is not null, it can\n\t *              be called to cancel the current transaction. if wait is true, PackageKit is waiting for its lock (i. e.\n\t *              on another package operation)\n\t * signalHandlers, notifyHandler: As in method #transaction, but ErrorCode and Finished are handled internally\n\t * Returns: Promise that resolves when the transaction finished successfully, or rejects with {detail, code}\n\t *          on failure.\n\t */\n\tfunction cancellableTransaction(method, arglist, progress_cb, signalHandlers) {\n\t    if (signalHandlers && (signalHandlers.ErrorCode || signalHandlers.Finished)) throw \"cancellableTransaction handles ErrorCode and Finished signals internally\";\n\t\n\t    return new Promise(function (resolve, reject) {\n\t        var cancelled = false;\n\t        var status = void 0;\n\t        var allow_wait_status = false;\n\t        var progress_data = {\n\t            waiting: false,\n\t            percentage: 0,\n\t            cancel: null\n\t        };\n\t\n\t        function changed(props, transaction_path) {\n\t            function cancel() {\n\t                call(transaction_path, transactionInterface, \"Cancel\", []);\n\t                cancelled = true;\n\t            }\n\t\n\t            if (progress_cb) {\n\t                if (\"Status\" in props) status = props.Status;\n\t                progress_data.waiting = allow_wait_status && (status === Enum.STATUS_WAIT || status === Enum.STATUS_WAITING_FOR_LOCK);\n\t                if (\"Percentage\" in props && props.Percentage <= 100) progress_data.percentage = props.Percentage;\n\t                if (\"AllowCancel\" in props) progress_data.cancel = props.AllowCancel ? cancel : null;\n\t\n\t                progress_cb(progress_data);\n\t            }\n\t        }\n\t\n\t        // We ignore STATUS_WAIT and friends during the first second of a transaction.  They\n\t        // are always reported briefly even when a transaction doesn't really need to wait.\n\t        window.setTimeout(function () {\n\t            allow_wait_status = true;\n\t            changed({});\n\t        }, 1000);\n\t\n\t        transaction(method, arglist, Object.assign({\n\t            // avoid calling progress_cb after ending the transaction, to avoid flickering cancel buttons\n\t            ErrorCode: function ErrorCode(code, detail) {\n\t                progress_cb = null;\n\t                reject({ detail: detail, code: cancelled ? \"cancelled\" : code });\n\t            },\n\t            Finished: function Finished(exit, runtime) {\n\t                progress_cb = null;\n\t                resolve(exit);\n\t            }\n\t        }, signalHandlers || {}), changed).catch(function (ex) {\n\t            progress_cb = null;\n\t            reject(ex);\n\t        });\n\t    });\n\t}\n\t\n\t/**\n\t * Get appropriate icon classes for an update severity\n\t *\n\t * info: An Enum.INFO_* level\n\t * secSeverity: If given, further classification of the severity of Enum.INFO_SECURITY from the vendor_urls;\n\t *              e. g. \"critical\", see https://access.redhat.com/security/updates/classification\n\t * Returns: Icon classes; put them into <span class=\"returnvalue\">&nbsp;</span>\n\t *\n\t */\n\tfunction getSeverityIcon(info, secSeverity) {\n\t    if (info == Enum.INFO_SECURITY) return \"pficon pficon-security\" + (secSeverity ? \" severity-\" + secSeverity : \"\");else if (info >= Enum.INFO_NORMAL) return \"fa fa-bug\";else return \"pficon pficon-enhancement\";\n\t}\n\t\n\t// possible Red Hat subscription manager status values:\n\t// https://github.com/candlepin/subscription-manager/blob/30c3b52320c3e73ebd7435b4fc8b0b6319985d19/src/rhsm_icon/rhsm_icon.c#L98\n\t// we accept RHSM_VALID(0), RHN_CLASSIC(3), and RHSM_PARTIALLY_VALID(4)\n\tvar validSubscriptionStates = [0, 3, 4];\n\t\n\t/**\n\t * Check Red Hat subscription-manager if if this is an unregistered RHEL\n\t * system. If subscription-manager is not installed, nothing happens.\n\t *\n\t * callback: Called with a boolean (true: registered, false: not registered)\n\t *           after querying subscription-manager once, and whenever the value\n\t *           changes.\n\t */\n\tfunction watchRedHatSubscription(callback) {\n\t    // check if this is an unregistered RHEL system; if subscription-manager is not installed, ignore\n\t    var sm = _cockpit2.default.dbus(\"com.redhat.SubscriptionManager\");\n\t    sm.subscribe({ path: \"/EntitlementStatus\",\n\t        interface: \"com.redhat.SubscriptionManager.EntitlementStatus\",\n\t        member: \"entitlement_status_changed\"\n\t    }, function (path, iface, signal, args) {\n\t        return callback(validSubscriptionStates.indexOf(args[0]) >= 0);\n\t    });\n\t    sm.call(\"/EntitlementStatus\", \"com.redhat.SubscriptionManager.EntitlementStatus\", \"check_status\").done(function (result) {\n\t        return callback(validSubscriptionStates.indexOf(result[0]) >= 0);\n\t    }).fail(function (ex) {\n\t        if (ex.problem != \"not-found\") console.warn(\"Failed to query RHEL subscription status:\", ex);\n\t    });\n\t}\n\n/***/ },\n\n/***/ 157:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2014 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\tvar $ = __webpack_require__(19);\n\tvar cockpit = __webpack_require__(2);\n\t\n\t__webpack_require__(158);\n\t__webpack_require__(159);\n\t__webpack_require__(160);\n\t\n\tvar plotter = { };\n\t\n\tvar C_ = cockpit.gettext;\n\t\n\t/* A thin abstraction over flot and metrics channels.  It mostly\n\t * shields you from hairy array acrobatics and having to know when it\n\t * is safe or required to create the flot object.\n\t *\n\t *\n\t * - plot = plotter.plot(element, x_range, [x_stop])\n\t *\n\t * Creates a 'plot' object attached to the given DOM element.  It will\n\t * show 'x_range' seconds worth of samples, until 'x_stop'.\n\t *\n\t * If 'x_stop' is undefined, the plot will show the last 'x_range'\n\t * seconds until now and walking will work as expected (see below).\n\t *\n\t * If 'x_stop' is not undefined, it should be the number of seconds\n\t * since the epoch.\n\t *\n\t * - plot.start_walking()\n\t *\n\t * Scroll towards the future.\n\t *\n\t * - plot.stop_walking()\n\t *\n\t * Stop automatic scrolling.\n\t *\n\t * - plot.refresh()\n\t *\n\t * Draw the plot.\n\t *\n\t * - plot.resize()\n\t *\n\t * Resize the plot to fit into its DOM element.  This will\n\t * automatically refresh the plot.  You should also call this function\n\t * when 'element' has changed visibility as that might affect its\n\t * size.\n\t *\n\t * - plot.set_options(options)\n\t *\n\t * Set the global flot options.  You need to refresh the plot\n\t * afterwards.\n\t *\n\t * In addition to the flot options, you can also set the 'setup_hook'\n\t * field to a function.  This function will be called between\n\t * flot.setData() and flot.draw() and can be used to adjust the axes\n\t * limits, for example.  It is called with the flot object as its only\n\t * parameter.\n\t *\n\t * Setting the 'post_hook' to a function will call that function after\n\t * each refresh of the plot.  This is used to decorate a plot with the\n\t * unit strings, for example.\n\t *\n\t * - options = plot.get_options()\n\t *\n\t * Get the global flot options.  You can modify the object and then\n\t * pass it to set_options.  Don't forget to refresh the plot.\n\t *\n\t * - plot.reset(x_range, [x_stop])\n\t *\n\t * Resets the range of the plot.  All current sources are reinitialzed\n\t * but keep their current samples.\n\t *\n\t * - plot.destroy()\n\t *\n\t * Resets the plot to be empty.  The plot will disappear completely\n\t * from the DOM, including the grid.\n\t *\n\t * - series = plot.add_metrics_sum_series(desc, options)\n\t *\n\t * Adds a single series into the plot that is fed by a metrics\n\t * channel.  The series will have the given flot options.  The plot\n\t * will automatically refresh as data becomes available from the\n\t * channel.\n\t *\n\t * The single value for the series is computed by summing the values\n\t * for all metrics and all instances that are delivered by the\n\t * channel.\n\t *\n\t * The 'desc' argument determines the channel options:\n\t *\n\t *   metrics:         An array with the names of all metrics to monitor.\n\t *   units:           The common units string for all metrics.\n\t *   instances:       A optional list of instances to include.\n\t *   omit_instances:  A optional list of instances to omit.\n\t *   factor:          A factor to apply to the final sum of all samples.\n\t *\n\t * - series.options\n\t *\n\t * Direct access to the series options.  You need to refresh the plot\n\t * after changing it.\n\t *\n\t * - series.move_to_front()\n\t *\n\t * Move the series in front of all other series.  You need to refresh\n\t * the plot to see the effect immediately.\n\t *\n\t * - series.remove()\n\t *\n\t * Removes the series from its plot.  The plot will be refreshed.\n\t *\n\t * - $(series).on('hover', function (event, val) { ... })\n\t *\n\t * This event is triggered when the user hovers over the series ('val'\n\t * == true), or stops hovering over it ('val' == false).\n\t */\n\t\n\tplotter.plot = function plot(element, x_range_seconds, x_stop_seconds) {\n\t    var options = { };\n\t    var result = { };\n\t\n\t    var series = [ ];\n\t    var flot_data = [ ];\n\t    var flot = null;\n\t\n\t    var interval;\n\t    var grid;\n\t\n\t    function refresh_now() {\n\t        if (element.height() === 0 || element.width() === 0)\n\t            return;\n\t\n\t        if (flot === null)\n\t            flot = $.plot(element, flot_data, options);\n\t\n\t        flot.setData(flot_data);\n\t        var axes = flot.getAxes();\n\t\n\t        /* Walking and fetching samples are not synchronized, which\n\t         * means that a walk step might reveal a sample that hasn't\n\t         * been fetched yet.  To reduce flicker, we cut off one extra\n\t         * sample at the end.\n\t         */\n\t        axes.xaxis.options.min = grid.beg * interval;\n\t        axes.xaxis.options.max = (grid.end - 2) * interval;\n\t        if (options.setup_hook)\n\t            options.setup_hook(flot);\n\t\n\t        /* This makes sure that the axes are displayed even for an\n\t         * empty plot.\n\t         */\n\t        axes.xaxis.show = true;\n\t        axes.xaxis.used = true;\n\t        axes.yaxis.show = true;\n\t        axes.yaxis.used = true;\n\t\n\t        flot.setupGrid();\n\t        flot.draw();\n\t\n\t        if (options.post_hook)\n\t            options.post_hook(flot);\n\t    }\n\t\n\t    var refresh_pending = false;\n\t\n\t    function refresh() {\n\t        if (!refresh_pending) {\n\t            refresh_pending = true;\n\t            window.setTimeout(function () {\n\t                refresh_pending = false;\n\t                refresh_now();\n\t            }, 0);\n\t        }\n\t    }\n\t\n\t    function start_walking() {\n\t        grid.walk();\n\t    }\n\t\n\t    function stop_walking() {\n\t        grid.move(grid.beg, grid.end);\n\t    }\n\t\n\t    var sync_suppressed = 0;\n\t\n\t    function reset(x_range_seconds, x_stop_seconds) {\n\t        if (flot)\n\t            flot.clearSelection(true);\n\t\n\t        // Fill the plot with about 1000 samples, but don't sample\n\t        // faster than once per second.\n\t        //\n\t        // TODO - do this based on the actual size of the plot.\n\t\n\t        interval = Math.ceil(x_range_seconds / 1000) * 1000;\n\t\n\t        var x_offset;\n\t        if (x_stop_seconds !== undefined)\n\t            x_offset = (new Date().getTime()) - x_stop_seconds * 1000;\n\t        else\n\t            x_offset = 0;\n\t\n\t        var beg = -Math.ceil((x_range_seconds * 1000 + x_offset) / interval);\n\t        var end = -Math.floor(x_offset / interval);\n\t\n\t        if (grid && grid.interval == interval) {\n\t            grid.move(beg, end);\n\t        } else {\n\t            if (grid)\n\t                grid.close();\n\t            grid = cockpit.grid(interval, beg, end);\n\t            sync_suppressed++;\n\t            for (var i = 0; i < series.length; i++)\n\t                series[i].reset();\n\t            sync_suppressed--;\n\t            sync();\n\t\n\t            $(grid).on('notify', function (event, index, count) {\n\t                refresh();\n\t            });\n\t        }\n\t    }\n\t\n\t    function sync() {\n\t        if (sync_suppressed === 0)\n\t            grid.sync();\n\t    }\n\t\n\t    function destroy() {\n\t        grid.close();\n\t        for (var i = 0; i < series.length; i++)\n\t            series[i].stop();\n\t\n\t        options = { };\n\t        series = [ ];\n\t        flot_data = [ ];\n\t        flot = null;\n\t        $(element).empty();\n\t        $(element).data(\"flot_data\", null);\n\t    }\n\t\n\t    function resize() {\n\t        if (element.height() === 0 || element.width() === 0)\n\t            return;\n\t        if (flot)\n\t            flot.resize();\n\t        refresh();\n\t    }\n\t\n\t    function set_options(opts) {\n\t        options = opts;\n\t        flot = null;\n\t    }\n\t\n\t    function get_options() {\n\t        return options;\n\t    }\n\t\n\t    function add_metrics_sum_series(desc, opts) {\n\t        var channel = null;\n\t\n\t        var self = {\n\t            options: opts,\n\t            move_to_front: move_to_front,\n\t            remove: remove\n\t        };\n\t\n\t        series.push({\n\t            stop: stop,\n\t            reset: reset_series,\n\t            hover_hit: hover_hit,\n\t            hover: hover\n\t        });\n\t\n\t        function stop() {\n\t            if (channel)\n\t                channel.close();\n\t        }\n\t\n\t        function add_series() {\n\t            flot_data.push(opts);\n\t        }\n\t\n\t        function remove_series() {\n\t            var pos = flot_data.indexOf(opts);\n\t            if (pos >= 0)\n\t                flot_data.splice(pos, 1);\n\t        }\n\t\n\t        function move_to_front() {\n\t            var pos = flot_data.indexOf(opts);\n\t            if (pos >= 0) {\n\t                flot_data.splice(pos, 1);\n\t                flot_data.push(opts);\n\t            }\n\t        }\n\t\n\t        function remove() {\n\t            stop();\n\t            remove_series();\n\t            refresh();\n\t        }\n\t\n\t        function build_metric(n) {\n\t            return { name: n, units: desc.units, derive: desc.derive };\n\t        }\n\t\n\t        var chanopts_list = [ ];\n\t\n\t        if (desc.direct) {\n\t            chanopts_list.push({ source: \"direct\",\n\t                                 archive_source: \"pcp-archive\",\n\t                                 metrics: desc.direct.map(build_metric),\n\t                                 instances: desc.instances,\n\t                                 \"omit-instances\": desc['omit-instances'],\n\t                                 host: desc.host\n\t                               });\n\t        }\n\t\n\t        if (desc.internal) {\n\t            chanopts_list.push({ source: \"internal\",\n\t                                 metrics: desc.internal.map(build_metric),\n\t                                 instances: desc.instances,\n\t                                 \"omit-instances\": desc['omit-instances'],\n\t                                 host: desc.host\n\t                               });\n\t        }\n\t\n\t        function flat_sum(val) {\n\t            var i, sum;\n\t\n\t            if (!val)\n\t                return 0;\n\t            if (val.length !== undefined) {\n\t                sum = 0;\n\t                for (i = 0; i < val.length; i++)\n\t                    sum += flat_sum(val[i]);\n\t                return sum;\n\t            }\n\t            return val;\n\t        }\n\t\n\t        function reset_series() {\n\t            if (channel)\n\t                channel.close();\n\t\n\t            channel = cockpit.metrics(interval, chanopts_list);\n\t\n\t            var metrics_row = grid.add(channel, [ ]);\n\t            var factor = desc.factor || 1;\n\t            opts.data = grid.add(function(row, x, n) {\n\t                for (var i = 0; i < n; i++)\n\t                    row[x + i] = [(grid.beg + x + i)*interval, flat_sum(metrics_row[x + i]) * factor];\n\t            });\n\t\n\t            function check_archives() {\n\t                if (channel.archives && !result.archives) {\n\t                    result.archives = true;\n\t                    $(result).triggerHandler(\"changed\");\n\t                }\n\t            }\n\t\n\t            $(channel).on('changed', check_archives);\n\t            check_archives();\n\t\n\t            sync();\n\t        }\n\t\n\t        function hover_hit(pos, item) {\n\t            return !!(item && (item.series.data == opts.data));\n\t        }\n\t\n\t        function hover(val) {\n\t            $(self).triggerHandler('hover', [ val ]);\n\t        }\n\t\n\t        reset_series();\n\t        add_series();\n\t\n\t        return self;\n\t    }\n\t\n\t    function add_metrics_stacked_instances_series(desc, opts) {\n\t        var channel = null;\n\t\n\t        var self = {\n\t            add_instance:    add_instance,\n\t            clear_instances: clear_instances\n\t        };\n\t\n\t        series.push({\n\t            stop: stop,\n\t            reset: reset_series,\n\t            hover_hit: hover_hit,\n\t            hover: hover\n\t        });\n\t\n\t        function stop() {\n\t            if (channel)\n\t                channel.close();\n\t        }\n\t\n\t        function build_metric(n) {\n\t            return { name: n, units: desc.units, derive: desc.derive };\n\t        }\n\t\n\t        var chanopts_list = [ ];\n\t\n\t        if (desc.direct) {\n\t            chanopts_list.push({ source: \"direct\",\n\t                                 archive_source: \"pcp-archive\",\n\t                                 metrics: [ build_metric(desc.direct) ],\n\t                                 metrics_path_names: [ \"a\" ],\n\t                                 instances: desc.instances,\n\t                                 \"omit-instances\": desc['omit-instances'],\n\t                                 host: desc.host\n\t                               });\n\t        }\n\t\n\t        if (desc.internal) {\n\t            chanopts_list.push({ source: \"internal\",\n\t                                 metrics: [ build_metric(desc.internal) ],\n\t                                 metrics_path_names: [ \"a\" ],\n\t                                 instances: desc.instances,\n\t                                 \"omit-instances\": desc['omit-instances'],\n\t                                 host: desc.host\n\t                               });\n\t        }\n\t\n\t        var instances = { };\n\t        var last_instance = null;\n\t\n\t        function reset_series() {\n\t            if (channel)\n\t                channel.close();\n\t\n\t            channel = cockpit.metrics(interval, chanopts_list);\n\t\n\t            function check_archives() {\n\t                if (channel.archives && !result.archives) {\n\t                    result.archives = true;\n\t                    $(result).triggerHandler(\"changed\");\n\t                }\n\t            }\n\t\n\t            $(channel).on('changed', check_archives);\n\t            check_archives();\n\t\n\t            sync_suppressed++;\n\t            for (var name in instances)\n\t                instances[name].reset();\n\t            sync_suppressed--;\n\t            sync();\n\t        }\n\t\n\t        function add_instance(name, selector) {\n\t            if (instances[name])\n\t                return;\n\t\n\t            var instance_data = $.extend({ selector: selector }, opts);\n\t            var factor = desc.factor || 1;\n\t            var threshold = desc.threshold || 0;\n\t            var metrics_row;\n\t\n\t            var last = last_instance;\n\t\n\t            function reset() {\n\t                metrics_row = grid.add(channel, [ \"a\", name ]);\n\t                instance_data.data = grid.add(function(row, x, n) {\n\t                    for (var i = 0; i < n; i++) {\n\t                        var value = (metrics_row[x + i] || 0)*factor;\n\t                        var ts = (grid.beg + x + i)*interval;\n\t                        var floor = 0;\n\t\n\t                        if (last) {\n\t                            if (last.data[x + i][1])\n\t                                floor = last.data[x + i][1];\n\t                            else\n\t                                floor = last.data[x + i][2];\n\t                        }\n\t\n\t                        if (Math.abs(value) > threshold) {\n\t                            row[x + i] = [ ts, floor + value, floor ];\n\t                            if (row[x + i - 1] && row[x + i - 1][1] === null)\n\t                                row[x + i - 1][1] = row[x + i - 1][2];\n\t                        } else {\n\t                            row[x + i] = [ ts, null, floor ];\n\t                            if (row[x + i - 1] && row[x + i - 1][1] !== null)\n\t                                row[x + i - 1][1] = row[x + i - 1][2];\n\t                        }\n\t                    }\n\t                });\n\t                sync();\n\t            }\n\t\n\t            function remove() {\n\t                grid.remove(metrics_row);\n\t                grid.remove(instance_data.data);\n\t                var pos = flot_data.indexOf(instance_data);\n\t                if (pos >= 0)\n\t                    flot_data.splice(pos, 1);\n\t            }\n\t\n\t            last_instance = instance_data;\n\t            instances[name] = instance_data;\n\t            instance_data.reset = reset;\n\t            instance_data.remove = remove;\n\t\n\t            reset();\n\t            flot_data.push(instance_data);\n\t        }\n\t\n\t        function clear_instances() {\n\t            for (var i in instances)\n\t                instances[i].remove();\n\t            instances = { };\n\t            last_instance = null;\n\t        }\n\t\n\t        function hover_hit(pos, item) {\n\t            var name, index;\n\t\n\t            if (!grid)\n\t                return false;\n\t\n\t            index = Math.round(pos.x/interval) - grid.beg;\n\t            if (index < 0)\n\t                index = 0;\n\t\n\t            for (name in instances) {\n\t                var d = instances[name].data;\n\t                if (d[index] && d[index][1] && d[index][2] <= pos.y && pos.y <= d[index][1])\n\t                    return instances[name].selector || name;\n\t            }\n\t            return false;\n\t        }\n\t\n\t        function hover(val) {\n\t            $(self).triggerHandler('hover', [ val ]);\n\t        }\n\t\n\t        reset_series();\n\t        return self;\n\t    }\n\t\n\t    var cur_hover_series = null;\n\t    var cur_hover_val = false;\n\t\n\t    function hover(next_hover_series, next_hover_val) {\n\t        if (cur_hover_series != next_hover_series) {\n\t            if (cur_hover_series)\n\t                cur_hover_series.hover(false);\n\t            cur_hover_series = next_hover_series;\n\t            cur_hover_val = next_hover_val;\n\t            if (cur_hover_series)\n\t                cur_hover_series.hover(cur_hover_val);\n\t        } else if (cur_hover_val != next_hover_val) {\n\t            cur_hover_val = next_hover_val;\n\t            if (cur_hover_series)\n\t                cur_hover_series.hover(cur_hover_val);\n\t        }\n\t    }\n\t\n\t    function hover_on(event, pos, item) {\n\t        var next_hover_series = null;\n\t        var next_hover_val = false;\n\t        for (var i = 0; i < series.length; i++) {\n\t            next_hover_val = series[i].hover_hit(pos, item);\n\t            if (next_hover_val) {\n\t                next_hover_series = series[i];\n\t                break;\n\t            }\n\t        }\n\t\n\t        hover(next_hover_series, next_hover_val);\n\t    }\n\t\n\t    function hover_off(event) {\n\t        hover(null, false);\n\t    }\n\t\n\t    function selecting(event, ranges) {\n\t        if (ranges)\n\t            $(result).triggerHandler(\"zoomstart\", [ ]);\n\t    }\n\t\n\t    function selected(event, ranges) {\n\t        flot.clearSelection(true);\n\t        $(result).triggerHandler(\"zoom\", [ (ranges.xaxis.to - ranges.xaxis.from) / 1000, ranges.xaxis.to / 1000]);\n\t    }\n\t\n\t    $(element).on(\"plothover\", hover_on);\n\t    $(element).on(\"mouseleave\", hover_off);\n\t    $(element).on(\"plotselecting\", selecting);\n\t    $(element).on(\"plotselected\", selected);\n\t\n\t    // for testing\n\t    $(element).data(\"flot_data\", flot_data);\n\t\n\t    reset(x_range_seconds, x_stop_seconds);\n\t\n\t    $.extend(result, {\n\t        archives: false, /* true if any archive data found */\n\t        start_walking: start_walking,\n\t        stop_walking: stop_walking,\n\t        refresh: refresh,\n\t        reset: reset,\n\t        destroy: destroy,\n\t        resize: resize,\n\t        set_options: set_options,\n\t        get_options: get_options,\n\t        add_metrics_sum_series: add_metrics_sum_series,\n\t        add_metrics_stacked_instances_series: add_metrics_stacked_instances_series\n\t    });\n\t\n\t    return result;\n\t};\n\t\n\tvar plot_colors = [ \"#006bb4\",\n\t                    \"#008ff0\",\n\t                    \"#2daaff\",\n\t                    \"#69c2ff\",\n\t                    \"#a5daff\",\n\t                    \"#e1f3ff\",\n\t                    \"#00243c\",\n\t                    \"#004778\"\n\t                  ];\n\t\n\tplotter.plot_simple_template = function simple() {\n\t    return {\n\t        colors: plot_colors,\n\t        legend: { show: false },\n\t        series: { shadowSize: 0,\n\t            lines: {\n\t                lineWidth: 2.0,\n\t                fill: 0.4\n\t            }\n\t        },\n\t        xaxis: { tickLength: 0,\n\t                 mode: \"time\",\n\t                 tickFormatter: plotter.format_date_tick,\n\t                 minTickSize: [ 1, 'minute' ],\n\t                 reserveSpace: false\n\t               },\n\t        yaxis: { tickColor: \"#d1d1d1\",\n\t                 min: 0\n\t               },\n\t        /*\n\t         * The point radius influences the margin around the grid even if no points\n\t         * are plotted. We don't want any margin, so we set the radius to zero.\n\t         */\n\t        points: {\n\t            radius: 0\n\t        },\n\t        grid: {\n\t            borderWidth: 1,\n\t            aboveData: false,\n\t            color: \"black\",\n\t            borderColor: $.color.parse(\"black\").scale('a', 0.22).toString(),\n\t            labelMargin: 0\n\t        }\n\t    };\n\t};\n\t\n\tplotter.memory_ticks = function memory_ticks(opts) {\n\t    // Not more than 5 ticks, nicely rounded to powers of 2.\n\t    var size = Math.pow(2.0, Math.ceil(Math.log(opts.max/5)/Math.LN2));\n\t    var ticks = [ ];\n\t    for (var t = 0; t < opts.max; t += size)\n\t        ticks.push(t);\n\t    return ticks;\n\t};\n\t\n\tvar month_names = [\n\t    C_(\"month-name\", 'Jan'),\n\t    C_(\"month-name\", 'Feb'),\n\t    C_(\"month-name\", 'Mar'),\n\t    C_(\"month-name\", 'Apr'),\n\t    C_(\"month-name\", 'May'),\n\t    C_(\"month-name\", 'Jun'),\n\t    C_(\"month-name\", 'Jul'),\n\t    C_(\"month-name\", 'Aug'),\n\t    C_(\"month-name\", 'Sep'),\n\t    C_(\"month-name\", 'Oct'),\n\t    C_(\"month-name\", 'Nov'),\n\t    C_(\"month-name\", 'Dec')\n\t];\n\t\n\tplotter.format_date_tick = function format_date_tick(val, axis) {\n\t    function pad(n) {\n\t        var str = n.toFixed();\n\t        if(str.length == 1)\n\t            str = '0' + str;\n\t        return str;\n\t    }\n\t\n\t    var year_index = 0;\n\t    var month_index = 1;\n\t    var day_index = 2;\n\t    var hour_minute_index = 3;\n\t\n\t    var begin;\n\t    var end;\n\t\n\t    // Determine the smallest unit according to the steps from one\n\t    // tick to the next.\n\t\n\t    var size = axis.tickSize[1];\n\t    if (size == \"minute\" || size == \"hour\")\n\t        end = hour_minute_index;\n\t    else if (size == \"day\")\n\t        end = day_index;\n\t    else if (size == \"month\")\n\t        end = month_index;\n\t    else\n\t        end = year_index;\n\t\n\t    // Determine biggest unit according to how far away the left edge\n\t    // of the graph is from 'now'.\n\t\n\t    var n = new Date();\n\t    var l = new Date(axis.min);\n\t\n\t    begin = year_index;\n\t    if (l.getFullYear() == n.getFullYear()) {\n\t        begin = month_index;\n\t        if (l.getMonth() == n.getMonth()) {\n\t            begin = day_index;\n\t            if (l.getDate() == n.getDate())\n\t                begin = hour_minute_index;\n\t        }\n\t    }\n\t\n\t    // Adjust so that it all makes sense\n\t\n\t    if (begin > end)\n\t        begin = end;\n\t    if (begin == day_index)\n\t        begin = month_index;\n\t\n\t    // And render it\n\t\n\t    var d = new Date(val);\n\t    var label = \" \";\n\t\n\t    if (year_index >= begin && year_index <= end)\n\t        label += d.getFullYear().toFixed() + \" \";\n\t    if (month_index >= begin && month_index <= end)\n\t        label += month_names[d.getMonth()] + \" \";\n\t    if (day_index >= begin && day_index <= end)\n\t        label += d.getDate().toFixed() + \" \";\n\t    if (hour_minute_index >= begin && hour_minute_index <= end)\n\t        label += pad(d.getHours()) + ':' + pad(d.getMinutes()) + \" \";\n\t\n\t    return label.substr(0, label.length-1);\n\t};\n\t\n\tplotter.bytes_tick_unit = function bytes_tick_unit(axis) {\n\t    return cockpit.format_bytes(axis.max, 1024, true)[1];\n\t};\n\t\n\tplotter.format_bytes_tick_no_unit = function format_bytes_tick_no_unit(val, axis) {\n\t    return cockpit.format_bytes(val, plotter.bytes_tick_unit(axis), true)[0];\n\t};\n\t\n\tplotter.format_bytes_tick = function format_bytes_tick(val, axis) {\n\t    return cockpit.format_bytes(val, 1024);\n\t};\n\t\n\tplotter.bytes_per_sec_tick_unit = function bytes_per_sec_tick_unit(axis) {\n\t    return cockpit.format_bytes_per_sec(axis.max, 1024, true)[1];\n\t};\n\t\n\tplotter.format_bytes_per_sec_tick_no_unit = function format_bytes_per_sec_tick_no_unit(val, axis) {\n\t    return cockpit.format_bytes_per_sec(val, plotter.bytes_per_sec_tick_unit(axis), true)[0];\n\t};\n\t\n\tplotter.format_bytes_per_sec_tick = function format_bytes_per_sec_tick(val, axis) {\n\t    return cockpit.format_bytes_per_sec(val, 1024);\n\t};\n\t\n\tplotter.bits_per_sec_tick_unit = function bits_per_sec_tick_unit(axis) {\n\t    return cockpit.format_bits_per_sec(axis.max*8, 1000, true)[1];\n\t};\n\t\n\tplotter.format_bits_per_sec_tick_no_unit = function format_bits_per_sec_tick_no_tick(val, axis) {\n\t    return cockpit.format_bits_per_sec(val*8, plotter.bits_per_sec_tick_unit(axis), true)[0];\n\t};\n\t\n\tplotter.format_bits_per_sec_tick = function format_bits_per_sec_tick(val, axis) {\n\t    return cockpit.format_bits_per_sec(val*8, 1000);\n\t};\n\t\n\tplotter.setup_plot_controls = function setup_plot_controls(container, element, plots) {\n\t\n\t    var plot_min_x_range = 5*60;\n\t    var plot_zoom_steps = [ 5*60,  60*60, 6*60*60, 24*60*60, 7*24*60*60, 30*24*60*60, 365*24*60*60 ];\n\t\n\t    var plot_x_range = 5*60;\n\t    var plot_x_stop;\n\t    var zoom_history = [ ];\n\t\n\t    element.find('[data-range]').click(function () {\n\t        zoom_history = [ ];\n\t        plot_x_range = parseInt($(this).attr('data-range'), 10);\n\t        plot_reset();\n\t    });\n\t\n\t    element.find('[data-action=\"goto-now\"]').click(function () {\n\t        plot_x_stop = undefined;\n\t        plot_reset();\n\t    });\n\t\n\t    element.find('[data-action=\"scroll-left\"]').click(function () {\n\t        var step = plot_x_range / 10;\n\t        if (plot_x_stop === undefined)\n\t            plot_x_stop = (new Date()).getTime() / 1000;\n\t        plot_x_stop -= step;\n\t        plot_reset();\n\t    });\n\t\n\t    element.find('[data-action=\"scroll-right\"]').click(function () {\n\t        var step = plot_x_range / 10;\n\t        if (plot_x_stop !== undefined) {\n\t            plot_x_stop += step;\n\t            plot_reset();\n\t        }\n\t    });\n\t\n\t    element.find('[data-action=\"zoom-out\"]').click(function () {\n\t        zoom_plot_out();\n\t    });\n\t\n\t    function zoom_plot_start() {\n\t        if (plot_x_stop === undefined) {\n\t            plots.forEach(function (p) {\n\t                p.stop_walking();\n\t            });\n\t            plot_x_stop = (new Date()).getTime() / 1000;\n\t            update_plot_buttons();\n\t        }\n\t    }\n\t\n\t    function zoom_plot_in(x_range, x_stop) {\n\t        zoom_history.push(plot_x_range);\n\t        plot_x_range = x_range;\n\t        plot_x_stop = x_stop;\n\t        plot_reset();\n\t    }\n\t\n\t    function zoom_plot_out() {\n\t        var r = zoom_history.pop();\n\t        if (r === undefined) {\n\t            var i;\n\t            for (i = 0; i < plot_zoom_steps.length-1; i++) {\n\t                if (plot_zoom_steps[i] > plot_x_range)\n\t                    break;\n\t            }\n\t            r = plot_zoom_steps[i];\n\t        }\n\t        if (plot_x_stop !== undefined)\n\t            plot_x_stop += (r - plot_x_range)/2;\n\t        plot_x_range = r;\n\t        plot_reset();\n\t    }\n\t\n\t    function format_range(seconds) {\n\t        var n;\n\t        if (seconds >= 365*24*60*60) {\n\t            n = Math.ceil(seconds / (365*24*60*60));\n\t            return cockpit.format(cockpit.ngettext(\"$0 year\", \"$0 years\", n), n);\n\t        } else if (seconds >= 30*24*60*60) {\n\t            n = Math.ceil(seconds / (30*24*60*60));\n\t            return cockpit.format(cockpit.ngettext(\"$0 month\", \"$0 months\", n), n);\n\t        } else if (seconds >= 7*24*60*60) {\n\t            n = Math.ceil(seconds / (7*24*60*60));\n\t            return cockpit.format(cockpit.ngettext(\"$0 week\", \"$0 weeks\", n), n);\n\t        } else if (seconds >= 24*60*60) {\n\t            n = Math.ceil(seconds / (24*60*60));\n\t            return cockpit.format(cockpit.ngettext(\"$0 day\", \"$0 days\", n), n);\n\t        } else if (seconds >= 60*60) {\n\t            n = Math.ceil(seconds / (60*60));\n\t            return cockpit.format(cockpit.ngettext(\"$0 hour\", \"$0 hours\", n), n);\n\t        } else {\n\t            n = Math.ceil(seconds / 60);\n\t            return cockpit.format(cockpit.ngettext(\"$0 minute\", \"$0 minutes\", n), n);\n\t        }\n\t    }\n\t\n\t    function update_plot_buttons() {\n\t        element.find('[data-action=\"scroll-right\"]')\n\t            .attr('disabled', plot_x_stop === undefined);\n\t        element.find('[data-action=\"zoom-out\"]')\n\t            .attr('disabled', plot_x_range >= plot_zoom_steps[plot_zoom_steps.length-1]);\n\t    }\n\t\n\t    function update_selection_zooming() {\n\t        var mode;\n\t\n\t        if (container.hasClass('show-zoom-controls') && plot_x_range > plot_min_x_range) {\n\t            container.addClass('show-zoom-cursor');\n\t            mode = \"x\";\n\t        } else {\n\t            container.removeClass('show-zoom-cursor');\n\t            mode = null;\n\t        }\n\t\n\t        plots.forEach(function (p) {\n\t            var options = p.get_options();\n\t            if (!options.selection || options.selection.mode != mode) {\n\t                options.selection = { mode: mode, color: \"#d4edfa\" };\n\t                p.set_options(options);\n\t                p.refresh();\n\t            }\n\t        });\n\t    }\n\t\n\t    function plot_reset() {\n\t        if (plot_x_range < plot_min_x_range) {\n\t            plot_x_stop += (plot_min_x_range - plot_x_range)/2;\n\t            plot_x_range = plot_min_x_range;\n\t        }\n\t        if (plot_x_stop >= (new Date()).getTime() / 1000 - 10)\n\t            plot_x_stop = undefined;\n\t\n\t        element.find('.dropdown-toggle span:first-child').text(format_range(plot_x_range));\n\t\n\t        plots.forEach(function (p) {\n\t            p.stop_walking();\n\t            p.reset(plot_x_range, plot_x_stop);\n\t            p.refresh();\n\t            if (plot_x_stop === undefined)\n\t                p.start_walking();\n\t\n\t            function check_archives() {\n\t                if (p.archives) {\n\t                    container.addClass('show-zoom-controls');\n\t                    update_selection_zooming();\n\t                }\n\t            }\n\t\n\t            $(p).on(\"changed\", check_archives);\n\t            check_archives();\n\t        });\n\t\n\t        update_plot_buttons();\n\t        update_selection_zooming();\n\t    }\n\t\n\t    function reset(p) {\n\t        if (p === undefined)\n\t            p = [ ];\n\t        plots = p;\n\t        plots.forEach(function (p) {\n\t            $(p).on(\"zoomstart\", function (event) { zoom_plot_start(); });\n\t            $(p).on(\"zoom\", function (event, x_range, x_stop) { zoom_plot_in(x_range, x_stop); });\n\t        });\n\t        plot_reset();\n\t    }\n\t\n\t    reset(plots);\n\t\n\t    return {\n\t        reset: reset\n\t    };\n\t};\n\t\n\tfunction setup_plot(graph_id, grid, data, user_options) {\n\t    var options = {\n\t        colors: [ \"#0099d3\" ],\n\t        legend: { show: false },\n\t        series: { shadowSize: 0,\n\t                  lines: { lineWidth: 0.0,\n\t                           fill: 1.0\n\t                         }\n\t                },\n\t        xaxis: { tickFormatter: function() { return \"\"; } },\n\t        yaxis: { tickFormatter: function() { return \"\"; } },\n\t        // The point radius influences\n\t        // the margin around the grid\n\t        // even if no points are plotted.\n\t        // We don't want any margin, so\n\t        // we set the radius to zero.\n\t        points: { radius: 0 },\n\t        grid: { borderWidth: 1,\n\t                aboveData: true,\n\t                color: \"black\",\n\t                borderColor: $.color.parse(\"black\").scale('a', 0.22).toString(),\n\t                labelMargin: 0\n\t              }\n\t    };\n\t\n\t    var plot;\n\t    var running = false;\n\t    var self;\n\t\n\t    $.extend(true, options, user_options);\n\t\n\t    // We put the plot inside its own div so that we can give that div\n\t    // a fixed size which only changes when we can also immediately\n\t    // call plot.resize().  Otherwise, the labels and legends briefly\n\t    // get out of sync during resizing.\n\t\n\t    var outer_div = $(graph_id);\n\t    var inner_div = $('<div/>');\n\t    var starting = null;\n\t    outer_div.empty();\n\t    outer_div.append(inner_div);\n\t\n\t    function sync_divs ()\n\t    {\n\t        inner_div.width(outer_div.width());\n\t        inner_div.height(outer_div.height());\n\t    }\n\t\n\t    // Updating flot options is tricky and somewhat implementation\n\t    // defined.  Different options needs different approaches.  So we\n\t    // just have very specific functions for changing specific options\n\t    // until a pattern emerges.\n\t\n\t    function set_yaxis_max (max) {\n\t        if (plot) {\n\t            plot.getAxes().yaxis.options.max = max;\n\t            refresh ();\n\t        } else {\n\t            options.yaxis.max = max;\n\t        }\n\t    }\n\t\n\t    function start ()\n\t    {\n\t        running = true;\n\t        maybe_start();\n\t    }\n\t\n\t    function maybe_start() {\n\t        if (running && outer_div.width() > 0 && outer_div.height() > 0) {\n\t            if (!plot) {\n\t                sync_divs ();\n\t                plot = $.plot(inner_div, data, options);\n\t            } else\n\t                resize();\n\t\n\t            if (starting)\n\t                window.clearInterval(starting);\n\t        } else if (!starting) {\n\t            starting = window.setInterval(maybe_start, 500);\n\t        }\n\t\n\t    }\n\t\n\t    function stop ()\n\t    {\n\t        running = false;\n\t    }\n\t\n\t    function refresh() {\n\t        if (plot && running) {\n\t            plot.setData(data);\n\t            if (user_options.setup_hook)\n\t                user_options.setup_hook(plot);\n\t            plot.setupGrid();\n\t            plot.draw();\n\t            if (user_options.post_hook)\n\t                user_options.post_hook(plot);\n\t        }\n\t    }\n\t\n\t    function resize() {\n\t        if (plot && running) {\n\t            sync_divs ();\n\t            if (inner_div.width() > 0 && inner_div.height() > 0)\n\t                plot.resize();\n\t            refresh();\n\t        }\n\t    }\n\t\n\t    function destroy () {\n\t        $(self).trigger('destroyed');\n\t        $(window).off('resize', resize);\n\t        $(outer_div).empty();\n\t        plot = null;\n\t    }\n\t\n\t    $(grid).on('notify', refresh);\n\t    $(window).on('resize', resize);\n\t    maybe_start();\n\t\n\t    self = { start: start, stop: stop,\n\t             resize: resize, element: inner_div[0],\n\t             set_yaxis_max: set_yaxis_max,\n\t             destroy: destroy\n\t           };\n\t    return self;\n\t}\n\t\n\tplotter.setup_complicated_plot = function setup_complicated_plot(graph_id, grid, series, options) {\n\t    function basic_flot_row(grid, input) {\n\t        return grid.add(function(row, x, n) {\n\t            for (var i = 0; i < n; i++)\n\t                row[x + i] = [i, input[x + i] || 0];\n\t        });\n\t    }\n\t\n\t    function stacked_flot_row(grid, input, last) {\n\t        return grid.add(function(row, x, n) {\n\t            var i, l, floor, val;\n\t            for (i = 0; i < n; i++) {\n\t                floor = 0;\n\t                if (last) {\n\t                    l = last[x + i];\n\t                    floor = l ? l[1] : 0;\n\t                }\n\t                val = (input[x + i] || 0);\n\t                row[x + i] = [i, val + floor, floor];\n\t            }\n\t        });\n\t    }\n\t\n\t    /* All the data row setup happens now */\n\t    var last = null;\n\t    series.forEach(function(ser, i) {\n\t        if (options.x_rh_stack_graphs)\n\t            ser.data = stacked_flot_row(grid, ser.row, last);\n\t        else\n\t            ser.data = basic_flot_row(grid, ser.row);\n\t        last = ser.data;\n\t    });\n\t    return setup_plot(graph_id, grid, series, options);\n\t};\n\t\n\tmodule.exports = plotter;\n\n\n/***/ },\n\n/***/ 158:\n/***/ function(module, exports) {\n\n\t/* Javascript plotting library for jQuery, version 0.8.3.\n\t\n\tCopyright (c) 2007-2014 IOLA and Ole Laursen.\n\tLicensed under the MIT license.\n\t\n\t*/\n\t\n\t// first an inline dependency, jquery.colorhelpers.js, we inline it here\n\t// for convenience\n\t\n\t/* Plugin for jQuery for working with colors.\n\t *\n\t * Version 1.1.\n\t *\n\t * Inspiration from jQuery color animation plugin by John Resig.\n\t *\n\t * Released under the MIT license by Ole Laursen, October 2009.\n\t *\n\t * Examples:\n\t *\n\t *   $.color.parse(\"#fff\").scale('rgb', 0.25).add('a', -0.5).toString()\n\t *   var c = $.color.extract($(\"#mydiv\"), 'background-color');\n\t *   console.log(c.r, c.g, c.b, c.a);\n\t *   $.color.make(100, 50, 25, 0.4).toString() // returns \"rgba(100,50,25,0.4)\"\n\t *\n\t * Note that .scale() and .add() return the same modified object\n\t * instead of making a new one.\n\t *\n\t * V. 1.1: Fix error handling so e.g. parsing an empty string does\n\t * produce a color rather than just crashing.\n\t */\n\t(function($){$.color={};$.color.make=function(r,g,b,a){var o={};o.r=r||0;o.g=g||0;o.b=b||0;o.a=a!=null?a:1;o.add=function(c,d){for(var i=0;i<c.length;++i)o[c.charAt(i)]+=d;return o.normalize()};o.scale=function(c,f){for(var i=0;i<c.length;++i)o[c.charAt(i)]*=f;return o.normalize()};o.toString=function(){if(o.a>=1){return\"rgb(\"+[o.r,o.g,o.b].join(\",\")+\")\"}else{return\"rgba(\"+[o.r,o.g,o.b,o.a].join(\",\")+\")\"}};o.normalize=function(){function clamp(min,value,max){return value<min?min:value>max?max:value}o.r=clamp(0,parseInt(o.r),255);o.g=clamp(0,parseInt(o.g),255);o.b=clamp(0,parseInt(o.b),255);o.a=clamp(0,o.a,1);return o};o.clone=function(){return $.color.make(o.r,o.b,o.g,o.a)};return o.normalize()};$.color.extract=function(elem,css){var c;do{c=elem.css(css).toLowerCase();if(c!=\"\"&&c!=\"transparent\")break;elem=elem.parent()}while(elem.length&&!$.nodeName(elem.get(0),\"body\"));if(c==\"rgba(0, 0, 0, 0)\")c=\"transparent\";return $.color.parse(c)};$.color.parse=function(str){var res,m=$.color.make;if(res=/rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10));if(res=/rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10),parseFloat(res[4]));if(res=/rgb\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55);if(res=/rgba\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55,parseFloat(res[4]));if(res=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(str))return m(parseInt(res[1],16),parseInt(res[2],16),parseInt(res[3],16));if(res=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(str))return m(parseInt(res[1]+res[1],16),parseInt(res[2]+res[2],16),parseInt(res[3]+res[3],16));var name=$.trim(str).toLowerCase();if(name==\"transparent\")return m(255,255,255,0);else{res=lookupColors[name]||[0,0,0];return m(res[0],res[1],res[2])}};var lookupColors={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}})(jQuery);\n\t\n\t// the actual Flot code\n\t(function($) {\n\t\n\t\t// Cache the prototype hasOwnProperty for faster access\n\t\n\t\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t    // A shim to provide 'detach' to jQuery versions prior to 1.4.  Using a DOM\n\t    // operation produces the same effect as detach, i.e. removing the element\n\t    // without touching its jQuery data.\n\t\n\t    // Do not merge this into Flot 0.9, since it requires jQuery 1.4.4+.\n\t\n\t    if (!$.fn.detach) {\n\t        $.fn.detach = function() {\n\t            return this.each(function() {\n\t                if (this.parentNode) {\n\t                    this.parentNode.removeChild( this );\n\t                }\n\t            });\n\t        };\n\t    }\n\t\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t// The Canvas object is a wrapper around an HTML5 <canvas> tag.\n\t\t//\n\t\t// @constructor\n\t\t// @param {string} cls List of classes to apply to the canvas.\n\t\t// @param {element} container Element onto which to append the canvas.\n\t\t//\n\t\t// Requiring a container is a little iffy, but unfortunately canvas\n\t\t// operations don't work unless the canvas is attached to the DOM.\n\t\n\t\tfunction Canvas(cls, container) {\n\t\n\t\t\tvar element = container.children(\".\" + cls)[0];\n\t\n\t\t\tif (element == null) {\n\t\n\t\t\t\telement = document.createElement(\"canvas\");\n\t\t\t\telement.className = cls;\n\t\n\t\t\t\t$(element).css({ direction: \"ltr\", position: \"absolute\", left: 0, top: 0 })\n\t\t\t\t\t.appendTo(container);\n\t\n\t\t\t\t// If HTML5 Canvas isn't available, fall back to [Ex|Flash]canvas\n\t\n\t\t\t\tif (!element.getContext) {\n\t\t\t\t\tif (window.G_vmlCanvasManager) {\n\t\t\t\t\t\telement = window.G_vmlCanvasManager.initElement(element);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tthis.element = element;\n\t\n\t\t\tvar context = this.context = element.getContext(\"2d\");\n\t\n\t\t\t// Determine the screen's ratio of physical to device-independent\n\t\t\t// pixels.  This is the ratio between the canvas width that the browser\n\t\t\t// advertises and the number of pixels actually present in that space.\n\t\n\t\t\t// The iPhone 4, for example, has a device-independent width of 320px,\n\t\t\t// but its screen is actually 640px wide.  It therefore has a pixel\n\t\t\t// ratio of 2, while most normal devices have a ratio of 1.\n\t\n\t\t\tvar devicePixelRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio =\n\t\t\t\t\tcontext.webkitBackingStorePixelRatio ||\n\t\t\t\t\tcontext.mozBackingStorePixelRatio ||\n\t\t\t\t\tcontext.msBackingStorePixelRatio ||\n\t\t\t\t\tcontext.oBackingStorePixelRatio ||\n\t\t\t\t\tcontext.backingStorePixelRatio || 1;\n\t\n\t\t\tthis.pixelRatio = devicePixelRatio / backingStoreRatio;\n\t\n\t\t\t// Size the canvas to match the internal dimensions of its container\n\t\n\t\t\tthis.resize(container.width(), container.height());\n\t\n\t\t\t// Collection of HTML div layers for text overlaid onto the canvas\n\t\n\t\t\tthis.textContainer = null;\n\t\t\tthis.text = {};\n\t\n\t\t\t// Cache of text fragments and metrics, so we can avoid expensively\n\t\t\t// re-calculating them when the plot is re-rendered in a loop.\n\t\n\t\t\tthis._textCache = {};\n\t\t}\n\t\n\t\t// Resizes the canvas to the given dimensions.\n\t\t//\n\t\t// @param {number} width New width of the canvas, in pixels.\n\t\t// @param {number} width New height of the canvas, in pixels.\n\t\n\t\tCanvas.prototype.resize = function(width, height) {\n\t\n\t\t\tif (width <= 0 || height <= 0) {\n\t\t\t\tthrow new Error(\"Invalid dimensions for plot, width = \" + width + \", height = \" + height);\n\t\t\t}\n\t\n\t\t\tvar element = this.element,\n\t\t\t\tcontext = this.context,\n\t\t\t\tpixelRatio = this.pixelRatio;\n\t\n\t\t\t// Resize the canvas, increasing its density based on the display's\n\t\t\t// pixel ratio; basically giving it more pixels without increasing the\n\t\t\t// size of its element, to take advantage of the fact that retina\n\t\t\t// displays have that many more pixels in the same advertised space.\n\t\n\t\t\t// Resizing should reset the state (excanvas seems to be buggy though)\n\t\n\t\t\tif (this.width != width) {\n\t\t\t\telement.width = width * pixelRatio;\n\t\t\t\telement.style.width = width + \"px\";\n\t\t\t\tthis.width = width;\n\t\t\t}\n\t\n\t\t\tif (this.height != height) {\n\t\t\t\telement.height = height * pixelRatio;\n\t\t\t\telement.style.height = height + \"px\";\n\t\t\t\tthis.height = height;\n\t\t\t}\n\t\n\t\t\t// Save the context, so we can reset in case we get replotted.  The\n\t\t\t// restore ensure that we're really back at the initial state, and\n\t\t\t// should be safe even if we haven't saved the initial state yet.\n\t\n\t\t\tcontext.restore();\n\t\t\tcontext.save();\n\t\n\t\t\t// Scale the coordinate space to match the display density; so even though we\n\t\t\t// may have twice as many pixels, we still want lines and other drawing to\n\t\t\t// appear at the same size; the extra pixels will just make them crisper.\n\t\n\t\t\tcontext.scale(pixelRatio, pixelRatio);\n\t\t};\n\t\n\t\t// Clears the entire canvas area, not including any overlaid HTML text\n\t\n\t\tCanvas.prototype.clear = function() {\n\t\t\tthis.context.clearRect(0, 0, this.width, this.height);\n\t\t};\n\t\n\t\t// Finishes rendering the canvas, including managing the text overlay.\n\t\n\t\tCanvas.prototype.render = function() {\n\t\n\t\t\tvar cache = this._textCache;\n\t\n\t\t\t// For each text layer, add elements marked as active that haven't\n\t\t\t// already been rendered, and remove those that are no longer active.\n\t\n\t\t\tfor (var layerKey in cache) {\n\t\t\t\tif (hasOwnProperty.call(cache, layerKey)) {\n\t\n\t\t\t\t\tvar layer = this.getTextLayer(layerKey),\n\t\t\t\t\t\tlayerCache = cache[layerKey];\n\t\n\t\t\t\t\tlayer.hide();\n\t\n\t\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\t\n\t\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\t\n\t\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\t\tif (position.active) {\n\t\t\t\t\t\t\t\t\t\t\tif (!position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\t\tlayer.append(position.element);\n\t\t\t\t\t\t\t\t\t\t\t\tposition.rendered = true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tpositions.splice(i--, 1);\n\t\t\t\t\t\t\t\t\t\t\tif (position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\t\tposition.element.detach();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\tif (positions.length == 0) {\n\t\t\t\t\t\t\t\t\t\tdelete styleCache[key];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tlayer.show();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t// Creates (if necessary) and returns the text overlay container.\n\t\t//\n\t\t// @param {string} classes String of space-separated CSS classes used to\n\t\t//     uniquely identify the text layer.\n\t\t// @return {object} The jQuery-wrapped text-layer div.\n\t\n\t\tCanvas.prototype.getTextLayer = function(classes) {\n\t\n\t\t\tvar layer = this.text[classes];\n\t\n\t\t\t// Create the text layer if it doesn't exist\n\t\n\t\t\tif (layer == null) {\n\t\n\t\t\t\t// Create the text layer container, if it doesn't exist\n\t\n\t\t\t\tif (this.textContainer == null) {\n\t\t\t\t\tthis.textContainer = $(\"<div class='flot-text'></div>\")\n\t\t\t\t\t\t.css({\n\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t\t'font-size': \"smaller\",\n\t\t\t\t\t\t\tcolor: \"#545454\"\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.insertAfter(this.element);\n\t\t\t\t}\n\t\n\t\t\t\tlayer = this.text[classes] = $(\"<div></div>\")\n\t\t\t\t\t.addClass(classes)\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\tright: 0\n\t\t\t\t\t})\n\t\t\t\t\t.appendTo(this.textContainer);\n\t\t\t}\n\t\n\t\t\treturn layer;\n\t\t};\n\t\n\t\t// Creates (if necessary) and returns a text info object.\n\t\t//\n\t\t// The object looks like this:\n\t\t//\n\t\t// {\n\t\t//     width: Width of the text's wrapper div.\n\t\t//     height: Height of the text's wrapper div.\n\t\t//     element: The jQuery-wrapped HTML div containing the text.\n\t\t//     positions: Array of positions at which this text is drawn.\n\t\t// }\n\t\t//\n\t\t// The positions array contains objects that look like this:\n\t\t//\n\t\t// {\n\t\t//     active: Flag indicating whether the text should be visible.\n\t\t//     rendered: Flag indicating whether the text is currently visible.\n\t\t//     element: The jQuery-wrapped HTML div containing the text.\n\t\t//     x: X coordinate at which to draw the text.\n\t\t//     y: Y coordinate at which to draw the text.\n\t\t// }\n\t\t//\n\t\t// Each position after the first receives a clone of the original element.\n\t\t//\n\t\t// The idea is that that the width, height, and general 'identity' of the\n\t\t// text is constant no matter where it is placed; the placements are a\n\t\t// secondary property.\n\t\t//\n\t\t// Canvas maintains a cache of recently-used text info objects; getTextInfo\n\t\t// either returns the cached element or creates a new entry.\n\t\t//\n\t\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t\t//     identifying the layer containing this text.\n\t\t// @param {string} text Text string to retrieve info for.\n\t\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t\t//     classes or a font-spec object, defining the text's font and style.\n\t\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t\t//     Angle is currently unused, it will be implemented in the future.\n\t\t// @param {number=} width Maximum width of the text before it wraps.\n\t\t// @return {object} a text info object.\n\t\n\t\tCanvas.prototype.getTextInfo = function(layer, text, font, angle, width) {\n\t\n\t\t\tvar textStyle, layerCache, styleCache, info;\n\t\n\t\t\t// Cast the value to a string, in case we were given a number or such\n\t\n\t\t\ttext = \"\" + text;\n\t\n\t\t\t// If the font is a font-spec object, generate a CSS font definition\n\t\n\t\t\tif (typeof font === \"object\") {\n\t\t\t\ttextStyle = font.style + \" \" + font.variant + \" \" + font.weight + \" \" + font.size + \"px/\" + font.lineHeight + \"px \" + font.family;\n\t\t\t} else {\n\t\t\t\ttextStyle = font;\n\t\t\t}\n\t\n\t\t\t// Retrieve (or create) the cache for the text's layer and styles\n\t\n\t\t\tlayerCache = this._textCache[layer];\n\t\n\t\t\tif (layerCache == null) {\n\t\t\t\tlayerCache = this._textCache[layer] = {};\n\t\t\t}\n\t\n\t\t\tstyleCache = layerCache[textStyle];\n\t\n\t\t\tif (styleCache == null) {\n\t\t\t\tstyleCache = layerCache[textStyle] = {};\n\t\t\t}\n\t\n\t\t\tinfo = styleCache[text];\n\t\n\t\t\t// If we can't find a matching element in our cache, create a new one\n\t\n\t\t\tif (info == null) {\n\t\n\t\t\t\tvar element = $(\"<div></div>\").html(text)\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t'max-width': width,\n\t\t\t\t\t\ttop: -9999\n\t\t\t\t\t})\n\t\t\t\t\t.appendTo(this.getTextLayer(layer));\n\t\n\t\t\t\tif (typeof font === \"object\") {\n\t\t\t\t\telement.css({\n\t\t\t\t\t\tfont: textStyle,\n\t\t\t\t\t\tcolor: font.color\n\t\t\t\t\t});\n\t\t\t\t} else if (typeof font === \"string\") {\n\t\t\t\t\telement.addClass(font);\n\t\t\t\t}\n\t\n\t\t\t\tinfo = styleCache[text] = {\n\t\t\t\t\twidth: element.outerWidth(true),\n\t\t\t\t\theight: element.outerHeight(true),\n\t\t\t\t\telement: element,\n\t\t\t\t\tpositions: []\n\t\t\t\t};\n\t\n\t\t\t\telement.detach();\n\t\t\t}\n\t\n\t\t\treturn info;\n\t\t};\n\t\n\t\t// Adds a text string to the canvas text overlay.\n\t\t//\n\t\t// The text isn't drawn immediately; it is marked as rendering, which will\n\t\t// result in its addition to the canvas on the next render pass.\n\t\t//\n\t\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t\t//     identifying the layer containing this text.\n\t\t// @param {number} x X coordinate at which to draw the text.\n\t\t// @param {number} y Y coordinate at which to draw the text.\n\t\t// @param {string} text Text string to draw.\n\t\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t\t//     classes or a font-spec object, defining the text's font and style.\n\t\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t\t//     Angle is currently unused, it will be implemented in the future.\n\t\t// @param {number=} width Maximum width of the text before it wraps.\n\t\t// @param {string=} halign Horizontal alignment of the text; either \"left\",\n\t\t//     \"center\" or \"right\".\n\t\t// @param {string=} valign Vertical alignment of the text; either \"top\",\n\t\t//     \"middle\" or \"bottom\".\n\t\n\t\tCanvas.prototype.addText = function(layer, x, y, text, font, angle, width, halign, valign) {\n\t\n\t\t\tvar info = this.getTextInfo(layer, text, font, angle, width),\n\t\t\t\tpositions = info.positions;\n\t\n\t\t\t// Tweak the div's position to match the text's alignment\n\t\n\t\t\tif (halign == \"center\") {\n\t\t\t\tx -= info.width / 2;\n\t\t\t} else if (halign == \"right\") {\n\t\t\t\tx -= info.width;\n\t\t\t}\n\t\n\t\t\tif (valign == \"middle\") {\n\t\t\t\ty -= info.height / 2;\n\t\t\t} else if (valign == \"bottom\") {\n\t\t\t\ty -= info.height;\n\t\t\t}\n\t\n\t\t\t// Determine whether this text already exists at this position.\n\t\t\t// If so, mark it for inclusion in the next render pass.\n\t\n\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\t\tposition.active = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// If the text doesn't exist at this position, create a new entry\n\t\n\t\t\t// For the very first position we'll re-use the original element,\n\t\t\t// while for subsequent ones we'll clone it.\n\t\n\t\t\tposition = {\n\t\t\t\tactive: true,\n\t\t\t\trendered: false,\n\t\t\t\telement: positions.length ? info.element.clone() : info.element,\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\n\t\t\tpositions.push(position);\n\t\n\t\t\t// Move the element to its final position within the container\n\t\n\t\t\tposition.element.css({\n\t\t\t\ttop: Math.round(y),\n\t\t\t\tleft: Math.round(x),\n\t\t\t\t'text-align': halign\t// In case the text wraps\n\t\t\t});\n\t\t};\n\t\n\t\t// Removes one or more text strings from the canvas text overlay.\n\t\t//\n\t\t// If no parameters are given, all text within the layer is removed.\n\t\t//\n\t\t// Note that the text is not immediately removed; it is simply marked as\n\t\t// inactive, which will result in its removal on the next render pass.\n\t\t// This avoids the performance penalty for 'clear and redraw' behavior,\n\t\t// where we potentially get rid of all text on a layer, but will likely\n\t\t// add back most or all of it later, as when redrawing axes, for example.\n\t\t//\n\t\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t\t//     identifying the layer containing this text.\n\t\t// @param {number=} x X coordinate of the text.\n\t\t// @param {number=} y Y coordinate of the text.\n\t\t// @param {string=} text Text string to remove.\n\t\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t\t//     classes or a font-spec object, defining the text's font and style.\n\t\t// @param {number=} angle Angle at which the text is rotated, in degrees.\n\t\t//     Angle is currently unused, it will be implemented in the future.\n\t\n\t\tCanvas.prototype.removeText = function(layer, x, y, text, font, angle) {\n\t\t\tif (text == null) {\n\t\t\t\tvar layerCache = this._textCache[layer];\n\t\t\t\tif (layerCache != null) {\n\t\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\t\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\t\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\t\tposition.active = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar positions = this.getTextInfo(layer, text, font, angle).positions;\n\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\t\t\tposition.active = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t// The top-level container for the entire plot.\n\t\n\t    function Plot(placeholder, data_, options_, plugins) {\n\t        // data is on the form:\n\t        //   [ series1, series2 ... ]\n\t        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]\n\t        // or { data: [ [x1, y1], [x2, y2], ... ], label: \"some label\", ... }\n\t\n\t        var series = [],\n\t            options = {\n\t                // the color theme used for graphs\n\t                colors: [\"#edc240\", \"#afd8f8\", \"#cb4b4b\", \"#4da74d\", \"#9440ed\"],\n\t                legend: {\n\t                    show: true,\n\t                    noColumns: 1, // number of colums in legend table\n\t                    labelFormatter: null, // fn: string -> string\n\t                    labelBoxBorderColor: \"#ccc\", // border color for the little label boxes\n\t                    container: null, // container (as jQuery object) to put legend in, null means default on top of graph\n\t                    position: \"ne\", // position of default legend container within plot\n\t                    margin: 5, // distance from grid edge to default legend container within plot\n\t                    backgroundColor: null, // null means auto-detect\n\t                    backgroundOpacity: 0.85, // set to 0 to avoid background\n\t                    sorted: null    // default to no legend sorting\n\t                },\n\t                xaxis: {\n\t                    show: null, // null = auto-detect, true = always, false = never\n\t                    position: \"bottom\", // or \"top\"\n\t                    mode: null, // null or \"time\"\n\t                    font: null, // null (derived from CSS in placeholder) or object like { size: 11, lineHeight: 13, style: \"italic\", weight: \"bold\", family: \"sans-serif\", variant: \"small-caps\" }\n\t                    color: null, // base color, labels, ticks\n\t                    tickColor: null, // possibly different color of ticks, e.g. \"rgba(0,0,0,0.15)\"\n\t                    transform: null, // null or f: number -> number to transform axis\n\t                    inverseTransform: null, // if transform is set, this should be the inverse function\n\t                    min: null, // min. value to show, null means set automatically\n\t                    max: null, // max. value to show, null means set automatically\n\t                    autoscaleMargin: null, // margin in % to add if auto-setting min/max\n\t                    ticks: null, // either [1, 3] or [[1, \"a\"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks\n\t                    tickFormatter: null, // fn: number -> string\n\t                    labelWidth: null, // size of tick labels in pixels\n\t                    labelHeight: null,\n\t                    reserveSpace: null, // whether to reserve space even if axis isn't shown\n\t                    tickLength: null, // size in pixels of ticks, or \"full\" for whole line\n\t                    alignTicksWithAxis: null, // axis number or null for no sync\n\t                    tickDecimals: null, // no. of decimals, null means auto\n\t                    tickSize: null, // number or [number, \"unit\"]\n\t                    minTickSize: null // number or [number, \"unit\"]\n\t                },\n\t                yaxis: {\n\t                    autoscaleMargin: 0.02,\n\t                    position: \"left\" // or \"right\"\n\t                },\n\t                xaxes: [],\n\t                yaxes: [],\n\t                series: {\n\t                    points: {\n\t                        show: false,\n\t                        radius: 3,\n\t                        lineWidth: 2, // in pixels\n\t                        fill: true,\n\t                        fillColor: \"#ffffff\",\n\t                        symbol: \"circle\" // or callback\n\t                    },\n\t                    lines: {\n\t                        // we don't put in show: false so we can see\n\t                        // whether lines were actively disabled\n\t                        lineWidth: 2, // in pixels\n\t                        fill: false,\n\t                        fillColor: null,\n\t                        steps: false\n\t                        // Omit 'zero', so we can later default its value to\n\t                        // match that of the 'fill' option.\n\t                    },\n\t                    bars: {\n\t                        show: false,\n\t                        lineWidth: 2, // in pixels\n\t                        barWidth: 1, // in units of the x axis\n\t                        fill: true,\n\t                        fillColor: null,\n\t                        align: \"left\", // \"left\", \"right\", or \"center\"\n\t                        horizontal: false,\n\t                        zero: true\n\t                    },\n\t                    shadowSize: 3,\n\t                    highlightColor: null\n\t                },\n\t                grid: {\n\t                    show: true,\n\t                    aboveData: false,\n\t                    color: \"#545454\", // primary color used for outline and labels\n\t                    backgroundColor: null, // null for transparent, else color\n\t                    borderColor: null, // set if different from the grid color\n\t                    tickColor: null, // color for the ticks, e.g. \"rgba(0,0,0,0.15)\"\n\t                    margin: 0, // distance from the canvas edge to the grid\n\t                    labelMargin: 5, // in pixels\n\t                    axisMargin: 8, // in pixels\n\t                    borderWidth: 2, // in pixels\n\t                    minBorderMargin: null, // in pixels, null means taken from points radius\n\t                    markings: null, // array of ranges or fn: axes -> array of ranges\n\t                    markingsColor: \"#f4f4f4\",\n\t                    markingsLineWidth: 2,\n\t                    // interactive stuff\n\t                    clickable: false,\n\t                    hoverable: false,\n\t                    autoHighlight: true, // highlight in case mouse is near\n\t                    mouseActiveRadius: 10 // how far the mouse can be away to activate an item\n\t                },\n\t                interaction: {\n\t                    redrawOverlayInterval: 1000/60 // time between updates, -1 means in same flow\n\t                },\n\t                hooks: {}\n\t            },\n\t        surface = null,     // the canvas for the plot itself\n\t        overlay = null,     // canvas for interactive stuff on top of plot\n\t        eventHolder = null, // jQuery object that events should be bound to\n\t        ctx = null, octx = null,\n\t        xaxes = [], yaxes = [],\n\t        plotOffset = { left: 0, right: 0, top: 0, bottom: 0},\n\t        plotWidth = 0, plotHeight = 0,\n\t        hooks = {\n\t            processOptions: [],\n\t            processRawData: [],\n\t            processDatapoints: [],\n\t            processOffset: [],\n\t            drawBackground: [],\n\t            drawSeries: [],\n\t            draw: [],\n\t            bindEvents: [],\n\t            drawOverlay: [],\n\t            shutdown: []\n\t        },\n\t        plot = this;\n\t\n\t        // public functions\n\t        plot.setData = setData;\n\t        plot.setupGrid = setupGrid;\n\t        plot.draw = draw;\n\t        plot.getPlaceholder = function() { return placeholder; };\n\t        plot.getCanvas = function() { return surface.element; };\n\t        plot.getPlotOffset = function() { return plotOffset; };\n\t        plot.width = function () { return plotWidth; };\n\t        plot.height = function () { return plotHeight; };\n\t        plot.offset = function () {\n\t            var o = eventHolder.offset();\n\t            o.left += plotOffset.left;\n\t            o.top += plotOffset.top;\n\t            return o;\n\t        };\n\t        plot.getData = function () { return series; };\n\t        plot.getAxes = function () {\n\t            var res = {}, i;\n\t            $.each(xaxes.concat(yaxes), function (_, axis) {\n\t                if (axis)\n\t                    res[axis.direction + (axis.n != 1 ? axis.n : \"\") + \"axis\"] = axis;\n\t            });\n\t            return res;\n\t        };\n\t        plot.getXAxes = function () { return xaxes; };\n\t        plot.getYAxes = function () { return yaxes; };\n\t        plot.c2p = canvasToAxisCoords;\n\t        plot.p2c = axisToCanvasCoords;\n\t        plot.getOptions = function () { return options; };\n\t        plot.highlight = highlight;\n\t        plot.unhighlight = unhighlight;\n\t        plot.triggerRedrawOverlay = triggerRedrawOverlay;\n\t        plot.pointOffset = function(point) {\n\t            return {\n\t                left: parseInt(xaxes[axisNumber(point, \"x\") - 1].p2c(+point.x) + plotOffset.left, 10),\n\t                top: parseInt(yaxes[axisNumber(point, \"y\") - 1].p2c(+point.y) + plotOffset.top, 10)\n\t            };\n\t        };\n\t        plot.shutdown = shutdown;\n\t        plot.destroy = function () {\n\t            shutdown();\n\t            placeholder.removeData(\"plot\").empty();\n\t\n\t            series = [];\n\t            options = null;\n\t            surface = null;\n\t            overlay = null;\n\t            eventHolder = null;\n\t            ctx = null;\n\t            octx = null;\n\t            xaxes = [];\n\t            yaxes = [];\n\t            hooks = null;\n\t            highlights = [];\n\t            plot = null;\n\t        };\n\t        plot.resize = function () {\n\t        \tvar width = placeholder.width(),\n\t        \t\theight = placeholder.height();\n\t            surface.resize(width, height);\n\t            overlay.resize(width, height);\n\t        };\n\t\n\t        // public attributes\n\t        plot.hooks = hooks;\n\t\n\t        // initialize\n\t        initPlugins(plot);\n\t        parseOptions(options_);\n\t        setupCanvases();\n\t        setData(data_);\n\t        setupGrid();\n\t        draw();\n\t        bindEvents();\n\t\n\t\n\t        function executeHooks(hook, args) {\n\t            args = [plot].concat(args);\n\t            for (var i = 0; i < hook.length; ++i)\n\t                hook[i].apply(this, args);\n\t        }\n\t\n\t        function initPlugins() {\n\t\n\t            // References to key classes, allowing plugins to modify them\n\t\n\t            var classes = {\n\t                Canvas: Canvas\n\t            };\n\t\n\t            for (var i = 0; i < plugins.length; ++i) {\n\t                var p = plugins[i];\n\t                p.init(plot, classes);\n\t                if (p.options)\n\t                    $.extend(true, options, p.options);\n\t            }\n\t        }\n\t\n\t        function parseOptions(opts) {\n\t\n\t            $.extend(true, options, opts);\n\t\n\t            // $.extend merges arrays, rather than replacing them.  When less\n\t            // colors are provided than the size of the default palette, we\n\t            // end up with those colors plus the remaining defaults, which is\n\t            // not expected behavior; avoid it by replacing them here.\n\t\n\t            if (opts && opts.colors) {\n\t            \toptions.colors = opts.colors;\n\t            }\n\t\n\t            if (options.xaxis.color == null)\n\t                options.xaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\t            if (options.yaxis.color == null)\n\t                options.yaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\t\n\t            if (options.xaxis.tickColor == null) // grid.tickColor for back-compatibility\n\t                options.xaxis.tickColor = options.grid.tickColor || options.xaxis.color;\n\t            if (options.yaxis.tickColor == null) // grid.tickColor for back-compatibility\n\t                options.yaxis.tickColor = options.grid.tickColor || options.yaxis.color;\n\t\n\t            if (options.grid.borderColor == null)\n\t                options.grid.borderColor = options.grid.color;\n\t            if (options.grid.tickColor == null)\n\t                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\t\n\t            // Fill in defaults for axis options, including any unspecified\n\t            // font-spec fields, if a font-spec was provided.\n\t\n\t            // If no x/y axis options were provided, create one of each anyway,\n\t            // since the rest of the code assumes that they exist.\n\t\n\t            var i, axisOptions, axisCount,\n\t                fontSize = placeholder.css(\"font-size\"),\n\t                fontSizeDefault = fontSize ? +fontSize.replace(\"px\", \"\") : 13,\n\t                fontDefaults = {\n\t                    style: placeholder.css(\"font-style\"),\n\t                    size: Math.round(0.8 * fontSizeDefault),\n\t                    variant: placeholder.css(\"font-variant\"),\n\t                    weight: placeholder.css(\"font-weight\"),\n\t                    family: placeholder.css(\"font-family\")\n\t                };\n\t\n\t            axisCount = options.xaxes.length || 1;\n\t            for (i = 0; i < axisCount; ++i) {\n\t\n\t                axisOptions = options.xaxes[i];\n\t                if (axisOptions && !axisOptions.tickColor) {\n\t                    axisOptions.tickColor = axisOptions.color;\n\t                }\n\t\n\t                axisOptions = $.extend(true, {}, options.xaxis, axisOptions);\n\t                options.xaxes[i] = axisOptions;\n\t\n\t                if (axisOptions.font) {\n\t                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n\t                    if (!axisOptions.font.color) {\n\t                        axisOptions.font.color = axisOptions.color;\n\t                    }\n\t                    if (!axisOptions.font.lineHeight) {\n\t                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n\t                    }\n\t                }\n\t            }\n\t\n\t            axisCount = options.yaxes.length || 1;\n\t            for (i = 0; i < axisCount; ++i) {\n\t\n\t                axisOptions = options.yaxes[i];\n\t                if (axisOptions && !axisOptions.tickColor) {\n\t                    axisOptions.tickColor = axisOptions.color;\n\t                }\n\t\n\t                axisOptions = $.extend(true, {}, options.yaxis, axisOptions);\n\t                options.yaxes[i] = axisOptions;\n\t\n\t                if (axisOptions.font) {\n\t                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n\t                    if (!axisOptions.font.color) {\n\t                        axisOptions.font.color = axisOptions.color;\n\t                    }\n\t                    if (!axisOptions.font.lineHeight) {\n\t                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n\t                    }\n\t                }\n\t            }\n\t\n\t            // backwards compatibility, to be removed in future\n\t            if (options.xaxis.noTicks && options.xaxis.ticks == null)\n\t                options.xaxis.ticks = options.xaxis.noTicks;\n\t            if (options.yaxis.noTicks && options.yaxis.ticks == null)\n\t                options.yaxis.ticks = options.yaxis.noTicks;\n\t            if (options.x2axis) {\n\t                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);\n\t                options.xaxes[1].position = \"top\";\n\t                // Override the inherit to allow the axis to auto-scale\n\t                if (options.x2axis.min == null) {\n\t                    options.xaxes[1].min = null;\n\t                }\n\t                if (options.x2axis.max == null) {\n\t                    options.xaxes[1].max = null;\n\t                }\n\t            }\n\t            if (options.y2axis) {\n\t                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);\n\t                options.yaxes[1].position = \"right\";\n\t                // Override the inherit to allow the axis to auto-scale\n\t                if (options.y2axis.min == null) {\n\t                    options.yaxes[1].min = null;\n\t                }\n\t                if (options.y2axis.max == null) {\n\t                    options.yaxes[1].max = null;\n\t                }\n\t            }\n\t            if (options.grid.coloredAreas)\n\t                options.grid.markings = options.grid.coloredAreas;\n\t            if (options.grid.coloredAreasColor)\n\t                options.grid.markingsColor = options.grid.coloredAreasColor;\n\t            if (options.lines)\n\t                $.extend(true, options.series.lines, options.lines);\n\t            if (options.points)\n\t                $.extend(true, options.series.points, options.points);\n\t            if (options.bars)\n\t                $.extend(true, options.series.bars, options.bars);\n\t            if (options.shadowSize != null)\n\t                options.series.shadowSize = options.shadowSize;\n\t            if (options.highlightColor != null)\n\t                options.series.highlightColor = options.highlightColor;\n\t\n\t            // save options on axes for future reference\n\t            for (i = 0; i < options.xaxes.length; ++i)\n\t                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];\n\t            for (i = 0; i < options.yaxes.length; ++i)\n\t                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];\n\t\n\t            // add hooks from options\n\t            for (var n in hooks)\n\t                if (options.hooks[n] && options.hooks[n].length)\n\t                    hooks[n] = hooks[n].concat(options.hooks[n]);\n\t\n\t            executeHooks(hooks.processOptions, [options]);\n\t        }\n\t\n\t        function setData(d) {\n\t            series = parseData(d);\n\t            fillInSeriesOptions();\n\t            processData();\n\t        }\n\t\n\t        function parseData(d) {\n\t            var res = [];\n\t            for (var i = 0; i < d.length; ++i) {\n\t                var s = $.extend(true, {}, options.series);\n\t\n\t                if (d[i].data != null) {\n\t                    s.data = d[i].data; // move the data instead of deep-copy\n\t                    delete d[i].data;\n\t\n\t                    $.extend(true, s, d[i]);\n\t\n\t                    d[i].data = s.data;\n\t                }\n\t                else\n\t                    s.data = d[i];\n\t                res.push(s);\n\t            }\n\t\n\t            return res;\n\t        }\n\t\n\t        function axisNumber(obj, coord) {\n\t            var a = obj[coord + \"axis\"];\n\t            if (typeof a == \"object\") // if we got a real axis, extract number\n\t                a = a.n;\n\t            if (typeof a != \"number\")\n\t                a = 1; // default to first axis\n\t            return a;\n\t        }\n\t\n\t        function allAxes() {\n\t            // return flat array without annoying null entries\n\t            return $.grep(xaxes.concat(yaxes), function (a) { return a; });\n\t        }\n\t\n\t        function canvasToAxisCoords(pos) {\n\t            // return an object with x/y corresponding to all used axes\n\t            var res = {}, i, axis;\n\t            for (i = 0; i < xaxes.length; ++i) {\n\t                axis = xaxes[i];\n\t                if (axis && axis.used)\n\t                    res[\"x\" + axis.n] = axis.c2p(pos.left);\n\t            }\n\t\n\t            for (i = 0; i < yaxes.length; ++i) {\n\t                axis = yaxes[i];\n\t                if (axis && axis.used)\n\t                    res[\"y\" + axis.n] = axis.c2p(pos.top);\n\t            }\n\t\n\t            if (res.x1 !== undefined)\n\t                res.x = res.x1;\n\t            if (res.y1 !== undefined)\n\t                res.y = res.y1;\n\t\n\t            return res;\n\t        }\n\t\n\t        function axisToCanvasCoords(pos) {\n\t            // get canvas coords from the first pair of x/y found in pos\n\t            var res = {}, i, axis, key;\n\t\n\t            for (i = 0; i < xaxes.length; ++i) {\n\t                axis = xaxes[i];\n\t                if (axis && axis.used) {\n\t                    key = \"x\" + axis.n;\n\t                    if (pos[key] == null && axis.n == 1)\n\t                        key = \"x\";\n\t\n\t                    if (pos[key] != null) {\n\t                        res.left = axis.p2c(pos[key]);\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t\n\t            for (i = 0; i < yaxes.length; ++i) {\n\t                axis = yaxes[i];\n\t                if (axis && axis.used) {\n\t                    key = \"y\" + axis.n;\n\t                    if (pos[key] == null && axis.n == 1)\n\t                        key = \"y\";\n\t\n\t                    if (pos[key] != null) {\n\t                        res.top = axis.p2c(pos[key]);\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return res;\n\t        }\n\t\n\t        function getOrCreateAxis(axes, number) {\n\t            if (!axes[number - 1])\n\t                axes[number - 1] = {\n\t                    n: number, // save the number for future reference\n\t                    direction: axes == xaxes ? \"x\" : \"y\",\n\t                    options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)\n\t                };\n\t\n\t            return axes[number - 1];\n\t        }\n\t\n\t        function fillInSeriesOptions() {\n\t\n\t            var neededColors = series.length, maxIndex = -1, i;\n\t\n\t            // Subtract the number of series that already have fixed colors or\n\t            // color indexes from the number that we still need to generate.\n\t\n\t            for (i = 0; i < series.length; ++i) {\n\t                var sc = series[i].color;\n\t                if (sc != null) {\n\t                    neededColors--;\n\t                    if (typeof sc == \"number\" && sc > maxIndex) {\n\t                        maxIndex = sc;\n\t                    }\n\t                }\n\t            }\n\t\n\t            // If any of the series have fixed color indexes, then we need to\n\t            // generate at least as many colors as the highest index.\n\t\n\t            if (neededColors <= maxIndex) {\n\t                neededColors = maxIndex + 1;\n\t            }\n\t\n\t            // Generate all the colors, using first the option colors and then\n\t            // variations on those colors once they're exhausted.\n\t\n\t            var c, colors = [], colorPool = options.colors,\n\t                colorPoolSize = colorPool.length, variation = 0;\n\t\n\t            for (i = 0; i < neededColors; i++) {\n\t\n\t                c = $.color.parse(colorPool[i % colorPoolSize] || \"#666\");\n\t\n\t                // Each time we exhaust the colors in the pool we adjust\n\t                // a scaling factor used to produce more variations on\n\t                // those colors. The factor alternates negative/positive\n\t                // to produce lighter/darker colors.\n\t\n\t                // Reset the variation after every few cycles, or else\n\t                // it will end up producing only white or black colors.\n\t\n\t                if (i % colorPoolSize == 0 && i) {\n\t                    if (variation >= 0) {\n\t                        if (variation < 0.5) {\n\t                            variation = -variation - 0.2;\n\t                        } else variation = 0;\n\t                    } else variation = -variation;\n\t                }\n\t\n\t                colors[i] = c.scale('rgb', 1 + variation);\n\t            }\n\t\n\t            // Finalize the series options, filling in their colors\n\t\n\t            var colori = 0, s;\n\t            for (i = 0; i < series.length; ++i) {\n\t                s = series[i];\n\t\n\t                // assign colors\n\t                if (s.color == null) {\n\t                    s.color = colors[colori].toString();\n\t                    ++colori;\n\t                }\n\t                else if (typeof s.color == \"number\")\n\t                    s.color = colors[s.color].toString();\n\t\n\t                // turn on lines automatically in case nothing is set\n\t                if (s.lines.show == null) {\n\t                    var v, show = true;\n\t                    for (v in s)\n\t                        if (s[v] && s[v].show) {\n\t                            show = false;\n\t                            break;\n\t                        }\n\t                    if (show)\n\t                        s.lines.show = true;\n\t                }\n\t\n\t                // If nothing was provided for lines.zero, default it to match\n\t                // lines.fill, since areas by default should extend to zero.\n\t\n\t                if (s.lines.zero == null) {\n\t                    s.lines.zero = !!s.lines.fill;\n\t                }\n\t\n\t                // setup axes\n\t                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, \"x\"));\n\t                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, \"y\"));\n\t            }\n\t        }\n\t\n\t        function processData() {\n\t            var topSentry = Number.POSITIVE_INFINITY,\n\t                bottomSentry = Number.NEGATIVE_INFINITY,\n\t                fakeInfinity = Number.MAX_VALUE,\n\t                i, j, k, m, length,\n\t                s, points, ps, x, y, axis, val, f, p,\n\t                data, format;\n\t\n\t            function updateAxis(axis, min, max) {\n\t                if (min < axis.datamin && min != -fakeInfinity)\n\t                    axis.datamin = min;\n\t                if (max > axis.datamax && max != fakeInfinity)\n\t                    axis.datamax = max;\n\t            }\n\t\n\t            $.each(allAxes(), function (_, axis) {\n\t                // init axis\n\t                axis.datamin = topSentry;\n\t                axis.datamax = bottomSentry;\n\t                axis.used = false;\n\t            });\n\t\n\t            for (i = 0; i < series.length; ++i) {\n\t                s = series[i];\n\t                s.datapoints = { points: [] };\n\t\n\t                executeHooks(hooks.processRawData, [ s, s.data, s.datapoints ]);\n\t            }\n\t\n\t            // first pass: clean and copy data\n\t            for (i = 0; i < series.length; ++i) {\n\t                s = series[i];\n\t\n\t                data = s.data;\n\t                format = s.datapoints.format;\n\t\n\t                if (!format) {\n\t                    format = [];\n\t                    // find out how to copy\n\t                    format.push({ x: true, number: true, required: true });\n\t                    format.push({ y: true, number: true, required: true });\n\t\n\t                    if (s.bars.show || (s.lines.show && s.lines.fill)) {\n\t                        var autoscale = !!((s.bars.show && s.bars.zero) || (s.lines.show && s.lines.zero));\n\t                        format.push({ y: true, number: true, required: false, defaultValue: 0, autoscale: autoscale });\n\t                        if (s.bars.horizontal) {\n\t                            delete format[format.length - 1].y;\n\t                            format[format.length - 1].x = true;\n\t                        }\n\t                    }\n\t\n\t                    s.datapoints.format = format;\n\t                }\n\t\n\t                if (s.datapoints.pointsize != null)\n\t                    continue; // already filled in\n\t\n\t                s.datapoints.pointsize = format.length;\n\t\n\t                ps = s.datapoints.pointsize;\n\t                points = s.datapoints.points;\n\t\n\t                var insertSteps = s.lines.show && s.lines.steps;\n\t                s.xaxis.used = s.yaxis.used = true;\n\t\n\t                for (j = k = 0; j < data.length; ++j, k += ps) {\n\t                    p = data[j];\n\t\n\t                    var nullify = p == null;\n\t                    if (!nullify) {\n\t                        for (m = 0; m < ps; ++m) {\n\t                            val = p[m];\n\t                            f = format[m];\n\t\n\t                            if (f) {\n\t                                if (f.number && val != null) {\n\t                                    val = +val; // convert to number\n\t                                    if (isNaN(val))\n\t                                        val = null;\n\t                                    else if (val == Infinity)\n\t                                        val = fakeInfinity;\n\t                                    else if (val == -Infinity)\n\t                                        val = -fakeInfinity;\n\t                                }\n\t\n\t                                if (val == null) {\n\t                                    if (f.required)\n\t                                        nullify = true;\n\t\n\t                                    if (f.defaultValue != null)\n\t                                        val = f.defaultValue;\n\t                                }\n\t                            }\n\t\n\t                            points[k + m] = val;\n\t                        }\n\t                    }\n\t\n\t                    if (nullify) {\n\t                        for (m = 0; m < ps; ++m) {\n\t                            val = points[k + m];\n\t                            if (val != null) {\n\t                                f = format[m];\n\t                                // extract min/max info\n\t                                if (f.autoscale !== false) {\n\t                                    if (f.x) {\n\t                                        updateAxis(s.xaxis, val, val);\n\t                                    }\n\t                                    if (f.y) {\n\t                                        updateAxis(s.yaxis, val, val);\n\t                                    }\n\t                                }\n\t                            }\n\t                            points[k + m] = null;\n\t                        }\n\t                    }\n\t                    else {\n\t                        // a little bit of line specific stuff that\n\t                        // perhaps shouldn't be here, but lacking\n\t                        // better means...\n\t                        if (insertSteps && k > 0\n\t                            && points[k - ps] != null\n\t                            && points[k - ps] != points[k]\n\t                            && points[k - ps + 1] != points[k + 1]) {\n\t                            // copy the point to make room for a middle point\n\t                            for (m = 0; m < ps; ++m)\n\t                                points[k + ps + m] = points[k + m];\n\t\n\t                            // middle point has same y\n\t                            points[k + 1] = points[k - ps + 1];\n\t\n\t                            // we've added a point, better reflect that\n\t                            k += ps;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t\n\t            // give the hooks a chance to run\n\t            for (i = 0; i < series.length; ++i) {\n\t                s = series[i];\n\t\n\t                executeHooks(hooks.processDatapoints, [ s, s.datapoints]);\n\t            }\n\t\n\t            // second pass: find datamax/datamin for auto-scaling\n\t            for (i = 0; i < series.length; ++i) {\n\t                s = series[i];\n\t                points = s.datapoints.points;\n\t                ps = s.datapoints.pointsize;\n\t                format = s.datapoints.format;\n\t\n\t                var xmin = topSentry, ymin = topSentry,\n\t                    xmax = bottomSentry, ymax = bottomSentry;\n\t\n\t                for (j = 0; j < points.length; j += ps) {\n\t                    if (points[j] == null)\n\t                        continue;\n\t\n\t                    for (m = 0; m < ps; ++m) {\n\t                        val = points[j + m];\n\t                        f = format[m];\n\t                        if (!f || f.autoscale === false || val == fakeInfinity || val == -fakeInfinity)\n\t                            continue;\n\t\n\t                        if (f.x) {\n\t                            if (val < xmin)\n\t                                xmin = val;\n\t                            if (val > xmax)\n\t                                xmax = val;\n\t                        }\n\t                        if (f.y) {\n\t                            if (val < ymin)\n\t                                ymin = val;\n\t                            if (val > ymax)\n\t                                ymax = val;\n\t                        }\n\t                    }\n\t                }\n\t\n\t                if (s.bars.show) {\n\t                    // make sure we got room for the bar on the dancing floor\n\t                    var delta;\n\t\n\t                    switch (s.bars.align) {\n\t                        case \"left\":\n\t                            delta = 0;\n\t                            break;\n\t                        case \"right\":\n\t                            delta = -s.bars.barWidth;\n\t                            break;\n\t                        default:\n\t                            delta = -s.bars.barWidth / 2;\n\t                    }\n\t\n\t                    if (s.bars.horizontal) {\n\t                        ymin += delta;\n\t                        ymax += delta + s.bars.barWidth;\n\t                    }\n\t                    else {\n\t                        xmin += delta;\n\t                        xmax += delta + s.bars.barWidth;\n\t                    }\n\t                }\n\t\n\t                updateAxis(s.xaxis, xmin, xmax);\n\t                updateAxis(s.yaxis, ymin, ymax);\n\t            }\n\t\n\t            $.each(allAxes(), function (_, axis) {\n\t                if (axis.datamin == topSentry)\n\t                    axis.datamin = null;\n\t                if (axis.datamax == bottomSentry)\n\t                    axis.datamax = null;\n\t            });\n\t        }\n\t\n\t        function setupCanvases() {\n\t\n\t            // Make sure the placeholder is clear of everything except canvases\n\t            // from a previous plot in this container that we'll try to re-use.\n\t\n\t            placeholder.css(\"padding\", 0) // padding messes up the positioning\n\t                .children().filter(function(){\n\t                    return !$(this).hasClass(\"flot-overlay\") && !$(this).hasClass('flot-base');\n\t                }).remove();\n\t\n\t            if (placeholder.css(\"position\") == 'static')\n\t                placeholder.css(\"position\", \"relative\"); // for positioning labels and overlay\n\t\n\t            surface = new Canvas(\"flot-base\", placeholder);\n\t            overlay = new Canvas(\"flot-overlay\", placeholder); // overlay canvas for interactive features\n\t\n\t            ctx = surface.context;\n\t            octx = overlay.context;\n\t\n\t            // define which element we're listening for events on\n\t            eventHolder = $(overlay.element).unbind();\n\t\n\t            // If we're re-using a plot object, shut down the old one\n\t\n\t            var existing = placeholder.data(\"plot\");\n\t\n\t            if (existing) {\n\t                existing.shutdown();\n\t                overlay.clear();\n\t            }\n\t\n\t            // save in case we get replotted\n\t            placeholder.data(\"plot\", plot);\n\t        }\n\t\n\t        function bindEvents() {\n\t            // bind events\n\t            if (options.grid.hoverable) {\n\t                eventHolder.mousemove(onMouseMove);\n\t\n\t                // Use bind, rather than .mouseleave, because we officially\n\t                // still support jQuery 1.2.6, which doesn't define a shortcut\n\t                // for mouseenter or mouseleave.  This was a bug/oversight that\n\t                // was fixed somewhere around 1.3.x.  We can return to using\n\t                // .mouseleave when we drop support for 1.2.6.\n\t\n\t                eventHolder.bind(\"mouseleave\", onMouseLeave);\n\t            }\n\t\n\t            if (options.grid.clickable)\n\t                eventHolder.click(onClick);\n\t\n\t            executeHooks(hooks.bindEvents, [eventHolder]);\n\t        }\n\t\n\t        function shutdown() {\n\t            if (redrawTimeout)\n\t                clearTimeout(redrawTimeout);\n\t\n\t            eventHolder.unbind(\"mousemove\", onMouseMove);\n\t            eventHolder.unbind(\"mouseleave\", onMouseLeave);\n\t            eventHolder.unbind(\"click\", onClick);\n\t\n\t            executeHooks(hooks.shutdown, [eventHolder]);\n\t        }\n\t\n\t        function setTransformationHelpers(axis) {\n\t            // set helper functions on the axis, assumes plot area\n\t            // has been computed already\n\t\n\t            function identity(x) { return x; }\n\t\n\t            var s, m, t = axis.options.transform || identity,\n\t                it = axis.options.inverseTransform;\n\t\n\t            // precompute how much the axis is scaling a point\n\t            // in canvas space\n\t            if (axis.direction == \"x\") {\n\t                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));\n\t                m = Math.min(t(axis.max), t(axis.min));\n\t            }\n\t            else {\n\t                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));\n\t                s = -s;\n\t                m = Math.max(t(axis.max), t(axis.min));\n\t            }\n\t\n\t            // data point to canvas coordinate\n\t            if (t == identity) // slight optimization\n\t                axis.p2c = function (p) { return (p - m) * s; };\n\t            else\n\t                axis.p2c = function (p) { return (t(p) - m) * s; };\n\t            // canvas coordinate to data point\n\t            if (!it)\n\t                axis.c2p = function (c) { return m + c / s; };\n\t            else\n\t                axis.c2p = function (c) { return it(m + c / s); };\n\t        }\n\t\n\t        function measureTickLabels(axis) {\n\t\n\t            var opts = axis.options,\n\t                ticks = axis.ticks || [],\n\t                labelWidth = opts.labelWidth || 0,\n\t                labelHeight = opts.labelHeight || 0,\n\t                maxWidth = labelWidth || (axis.direction == \"x\" ? Math.floor(surface.width / (ticks.length || 1)) : null),\n\t                legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n\t                layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n\t                font = opts.font || \"flot-tick-label tickLabel\";\n\t\n\t            for (var i = 0; i < ticks.length; ++i) {\n\t\n\t                var t = ticks[i];\n\t\n\t                if (!t.label)\n\t                    continue;\n\t\n\t                var info = surface.getTextInfo(layer, t.label, font, null, maxWidth);\n\t\n\t                labelWidth = Math.max(labelWidth, info.width);\n\t                labelHeight = Math.max(labelHeight, info.height);\n\t            }\n\t\n\t            axis.labelWidth = opts.labelWidth || labelWidth;\n\t            axis.labelHeight = opts.labelHeight || labelHeight;\n\t        }\n\t\n\t        function allocateAxisBoxFirstPhase(axis) {\n\t            // find the bounding box of the axis by looking at label\n\t            // widths/heights and ticks, make room by diminishing the\n\t            // plotOffset; this first phase only looks at one\n\t            // dimension per axis, the other dimension depends on the\n\t            // other axes so will have to wait\n\t\n\t            var lw = axis.labelWidth,\n\t                lh = axis.labelHeight,\n\t                pos = axis.options.position,\n\t                isXAxis = axis.direction === \"x\",\n\t                tickLength = axis.options.tickLength,\n\t                axisMargin = options.grid.axisMargin,\n\t                padding = options.grid.labelMargin,\n\t                innermost = true,\n\t                outermost = true,\n\t                first = true,\n\t                found = false;\n\t\n\t            // Determine the axis's position in its direction and on its side\n\t\n\t            $.each(isXAxis ? xaxes : yaxes, function(i, a) {\n\t                if (a && (a.show || a.reserveSpace)) {\n\t                    if (a === axis) {\n\t                        found = true;\n\t                    } else if (a.options.position === pos) {\n\t                        if (found) {\n\t                            outermost = false;\n\t                        } else {\n\t                            innermost = false;\n\t                        }\n\t                    }\n\t                    if (!found) {\n\t                        first = false;\n\t                    }\n\t                }\n\t            });\n\t\n\t            // The outermost axis on each side has no margin\n\t\n\t            if (outermost) {\n\t                axisMargin = 0;\n\t            }\n\t\n\t            // The ticks for the first axis in each direction stretch across\n\t\n\t            if (tickLength == null) {\n\t                tickLength = first ? \"full\" : 5;\n\t            }\n\t\n\t            if (!isNaN(+tickLength))\n\t                padding += +tickLength;\n\t\n\t            if (isXAxis) {\n\t                lh += padding;\n\t\n\t                if (pos == \"bottom\") {\n\t                    plotOffset.bottom += lh + axisMargin;\n\t                    axis.box = { top: surface.height - plotOffset.bottom, height: lh };\n\t                }\n\t                else {\n\t                    axis.box = { top: plotOffset.top + axisMargin, height: lh };\n\t                    plotOffset.top += lh + axisMargin;\n\t                }\n\t            }\n\t            else {\n\t                lw += padding;\n\t\n\t                if (pos == \"left\") {\n\t                    axis.box = { left: plotOffset.left + axisMargin, width: lw };\n\t                    plotOffset.left += lw + axisMargin;\n\t                }\n\t                else {\n\t                    plotOffset.right += lw + axisMargin;\n\t                    axis.box = { left: surface.width - plotOffset.right, width: lw };\n\t                }\n\t            }\n\t\n\t             // save for future reference\n\t            axis.position = pos;\n\t            axis.tickLength = tickLength;\n\t            axis.box.padding = padding;\n\t            axis.innermost = innermost;\n\t        }\n\t\n\t        function allocateAxisBoxSecondPhase(axis) {\n\t            // now that all axis boxes have been placed in one\n\t            // dimension, we can set the remaining dimension coordinates\n\t            if (axis.direction == \"x\") {\n\t                axis.box.left = plotOffset.left - axis.labelWidth / 2;\n\t                axis.box.width = surface.width - plotOffset.left - plotOffset.right + axis.labelWidth;\n\t            }\n\t            else {\n\t                axis.box.top = plotOffset.top - axis.labelHeight / 2;\n\t                axis.box.height = surface.height - plotOffset.bottom - plotOffset.top + axis.labelHeight;\n\t            }\n\t        }\n\t\n\t        function adjustLayoutForThingsStickingOut() {\n\t            // possibly adjust plot offset to ensure everything stays\n\t            // inside the canvas and isn't clipped off\n\t\n\t            var minMargin = options.grid.minBorderMargin,\n\t                axis, i;\n\t\n\t            // check stuff from the plot (FIXME: this should just read\n\t            // a value from the series, otherwise it's impossible to\n\t            // customize)\n\t            if (minMargin == null) {\n\t                minMargin = 0;\n\t                for (i = 0; i < series.length; ++i)\n\t                    minMargin = Math.max(minMargin, 2 * (series[i].points.radius + series[i].points.lineWidth/2));\n\t            }\n\t\n\t            var margins = {\n\t                left: minMargin,\n\t                right: minMargin,\n\t                top: minMargin,\n\t                bottom: minMargin\n\t            };\n\t\n\t            // check axis labels, note we don't check the actual\n\t            // labels but instead use the overall width/height to not\n\t            // jump as much around with replots\n\t            $.each(allAxes(), function (_, axis) {\n\t                if (axis.reserveSpace && axis.ticks && axis.ticks.length) {\n\t                    if (axis.direction === \"x\") {\n\t                        margins.left = Math.max(margins.left, axis.labelWidth / 2);\n\t                        margins.right = Math.max(margins.right, axis.labelWidth / 2);\n\t                    } else {\n\t                        margins.bottom = Math.max(margins.bottom, axis.labelHeight / 2);\n\t                        margins.top = Math.max(margins.top, axis.labelHeight / 2);\n\t                    }\n\t                }\n\t            });\n\t\n\t            plotOffset.left = Math.ceil(Math.max(margins.left, plotOffset.left));\n\t            plotOffset.right = Math.ceil(Math.max(margins.right, plotOffset.right));\n\t            plotOffset.top = Math.ceil(Math.max(margins.top, plotOffset.top));\n\t            plotOffset.bottom = Math.ceil(Math.max(margins.bottom, plotOffset.bottom));\n\t        }\n\t\n\t        function setupGrid() {\n\t            var i, axes = allAxes(), showGrid = options.grid.show;\n\t\n\t            // Initialize the plot's offset from the edge of the canvas\n\t\n\t            for (var a in plotOffset) {\n\t                var margin = options.grid.margin || 0;\n\t                plotOffset[a] = typeof margin == \"number\" ? margin : margin[a] || 0;\n\t            }\n\t\n\t            executeHooks(hooks.processOffset, [plotOffset]);\n\t\n\t            // If the grid is visible, add its border width to the offset\n\t\n\t            for (var a in plotOffset) {\n\t                if(typeof(options.grid.borderWidth) == \"object\") {\n\t                    plotOffset[a] += showGrid ? options.grid.borderWidth[a] : 0;\n\t                }\n\t                else {\n\t                    plotOffset[a] += showGrid ? options.grid.borderWidth : 0;\n\t                }\n\t            }\n\t\n\t            $.each(axes, function (_, axis) {\n\t                var axisOpts = axis.options;\n\t                axis.show = axisOpts.show == null ? axis.used : axisOpts.show;\n\t                axis.reserveSpace = axisOpts.reserveSpace == null ? axis.show : axisOpts.reserveSpace;\n\t                setRange(axis);\n\t            });\n\t\n\t            if (showGrid) {\n\t\n\t                var allocatedAxes = $.grep(axes, function (axis) {\n\t                    return axis.show || axis.reserveSpace;\n\t                });\n\t\n\t                $.each(allocatedAxes, function (_, axis) {\n\t                    // make the ticks\n\t                    setupTickGeneration(axis);\n\t                    setTicks(axis);\n\t                    snapRangeToTicks(axis, axis.ticks);\n\t                    // find labelWidth/Height for axis\n\t                    measureTickLabels(axis);\n\t                });\n\t\n\t                // with all dimensions calculated, we can compute the\n\t                // axis bounding boxes, start from the outside\n\t                // (reverse order)\n\t                for (i = allocatedAxes.length - 1; i >= 0; --i)\n\t                    allocateAxisBoxFirstPhase(allocatedAxes[i]);\n\t\n\t                // make sure we've got enough space for things that\n\t                // might stick out\n\t                adjustLayoutForThingsStickingOut();\n\t\n\t                $.each(allocatedAxes, function (_, axis) {\n\t                    allocateAxisBoxSecondPhase(axis);\n\t                });\n\t            }\n\t\n\t            plotWidth = surface.width - plotOffset.left - plotOffset.right;\n\t            plotHeight = surface.height - plotOffset.bottom - plotOffset.top;\n\t\n\t            // now we got the proper plot dimensions, we can compute the scaling\n\t            $.each(axes, function (_, axis) {\n\t                setTransformationHelpers(axis);\n\t            });\n\t\n\t            if (showGrid) {\n\t                drawAxisLabels();\n\t            }\n\t\n\t            insertLegend();\n\t        }\n\t\n\t        function setRange(axis) {\n\t            var opts = axis.options,\n\t                min = +(opts.min != null ? opts.min : axis.datamin),\n\t                max = +(opts.max != null ? opts.max : axis.datamax),\n\t                delta = max - min;\n\t\n\t            if (delta == 0.0) {\n\t                // degenerate case\n\t                var widen = max == 0 ? 1 : 0.01;\n\t\n\t                if (opts.min == null)\n\t                    min -= widen;\n\t                // always widen max if we couldn't widen min to ensure we\n\t                // don't fall into min == max which doesn't work\n\t                if (opts.max == null || opts.min != null)\n\t                    max += widen;\n\t            }\n\t            else {\n\t                // consider autoscaling\n\t                var margin = opts.autoscaleMargin;\n\t                if (margin != null) {\n\t                    if (opts.min == null) {\n\t                        min -= delta * margin;\n\t                        // make sure we don't go below zero if all values\n\t                        // are positive\n\t                        if (min < 0 && axis.datamin != null && axis.datamin >= 0)\n\t                            min = 0;\n\t                    }\n\t                    if (opts.max == null) {\n\t                        max += delta * margin;\n\t                        if (max > 0 && axis.datamax != null && axis.datamax <= 0)\n\t                            max = 0;\n\t                    }\n\t                }\n\t            }\n\t            axis.min = min;\n\t            axis.max = max;\n\t        }\n\t\n\t        function setupTickGeneration(axis) {\n\t            var opts = axis.options;\n\t\n\t            // estimate number of ticks\n\t            var noTicks;\n\t            if (typeof opts.ticks == \"number\" && opts.ticks > 0)\n\t                noTicks = opts.ticks;\n\t            else\n\t                // heuristic based on the model a*sqrt(x) fitted to\n\t                // some data points that seemed reasonable\n\t                noTicks = 0.3 * Math.sqrt(axis.direction == \"x\" ? surface.width : surface.height);\n\t\n\t            var delta = (axis.max - axis.min) / noTicks,\n\t                dec = -Math.floor(Math.log(delta) / Math.LN10),\n\t                maxDec = opts.tickDecimals;\n\t\n\t            if (maxDec != null && dec > maxDec) {\n\t                dec = maxDec;\n\t            }\n\t\n\t            var magn = Math.pow(10, -dec),\n\t                norm = delta / magn, // norm is between 1.0 and 10.0\n\t                size;\n\t\n\t            if (norm < 1.5) {\n\t                size = 1;\n\t            } else if (norm < 3) {\n\t                size = 2;\n\t                // special case for 2.5, requires an extra decimal\n\t                if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {\n\t                    size = 2.5;\n\t                    ++dec;\n\t                }\n\t            } else if (norm < 7.5) {\n\t                size = 5;\n\t            } else {\n\t                size = 10;\n\t            }\n\t\n\t            size *= magn;\n\t\n\t            if (opts.minTickSize != null && size < opts.minTickSize) {\n\t                size = opts.minTickSize;\n\t            }\n\t\n\t            axis.delta = delta;\n\t            axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);\n\t            axis.tickSize = opts.tickSize || size;\n\t\n\t            // Time mode was moved to a plug-in in 0.8, and since so many people use it\n\t            // we'll add an especially friendly reminder to make sure they included it.\n\t\n\t            if (opts.mode == \"time\" && !axis.tickGenerator) {\n\t                throw new Error(\"Time mode requires the flot.time plugin.\");\n\t            }\n\t\n\t            // Flot supports base-10 axes; any other mode else is handled by a plug-in,\n\t            // like flot.time.js.\n\t\n\t            if (!axis.tickGenerator) {\n\t\n\t                axis.tickGenerator = function (axis) {\n\t\n\t                    var ticks = [],\n\t                        start = floorInBase(axis.min, axis.tickSize),\n\t                        i = 0,\n\t                        v = Number.NaN,\n\t                        prev;\n\t\n\t                    do {\n\t                        prev = v;\n\t                        v = start + i * axis.tickSize;\n\t                        ticks.push(v);\n\t                        ++i;\n\t                    } while (v < axis.max && v != prev);\n\t                    return ticks;\n\t                };\n\t\n\t\t\t\t\taxis.tickFormatter = function (value, axis) {\n\t\n\t\t\t\t\t\tvar factor = axis.tickDecimals ? Math.pow(10, axis.tickDecimals) : 1;\n\t\t\t\t\t\tvar formatted = \"\" + Math.round(value * factor) / factor;\n\t\n\t\t\t\t\t\t// If tickDecimals was specified, ensure that we have exactly that\n\t\t\t\t\t\t// much precision; otherwise default to the value's own precision.\n\t\n\t\t\t\t\t\tif (axis.tickDecimals != null) {\n\t\t\t\t\t\t\tvar decimal = formatted.indexOf(\".\");\n\t\t\t\t\t\t\tvar precision = decimal == -1 ? 0 : formatted.length - decimal - 1;\n\t\t\t\t\t\t\tif (precision < axis.tickDecimals) {\n\t\t\t\t\t\t\t\treturn (precision ? formatted : formatted + \".\") + (\"\" + factor).substr(1, axis.tickDecimals - precision);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t                    return formatted;\n\t                };\n\t            }\n\t\n\t            if ($.isFunction(opts.tickFormatter))\n\t                axis.tickFormatter = function (v, axis) { return \"\" + opts.tickFormatter(v, axis); };\n\t\n\t            if (opts.alignTicksWithAxis != null) {\n\t                var otherAxis = (axis.direction == \"x\" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];\n\t                if (otherAxis && otherAxis.used && otherAxis != axis) {\n\t                    // consider snapping min/max to outermost nice ticks\n\t                    var niceTicks = axis.tickGenerator(axis);\n\t                    if (niceTicks.length > 0) {\n\t                        if (opts.min == null)\n\t                            axis.min = Math.min(axis.min, niceTicks[0]);\n\t                        if (opts.max == null && niceTicks.length > 1)\n\t                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);\n\t                    }\n\t\n\t                    axis.tickGenerator = function (axis) {\n\t                        // copy ticks, scaled to this axis\n\t                        var ticks = [], v, i;\n\t                        for (i = 0; i < otherAxis.ticks.length; ++i) {\n\t                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);\n\t                            v = axis.min + v * (axis.max - axis.min);\n\t                            ticks.push(v);\n\t                        }\n\t                        return ticks;\n\t                    };\n\t\n\t                    // we might need an extra decimal since forced\n\t                    // ticks don't necessarily fit naturally\n\t                    if (!axis.mode && opts.tickDecimals == null) {\n\t                        var extraDec = Math.max(0, -Math.floor(Math.log(axis.delta) / Math.LN10) + 1),\n\t                            ts = axis.tickGenerator(axis);\n\t\n\t                        // only proceed if the tick interval rounded\n\t                        // with an extra decimal doesn't give us a\n\t                        // zero at end\n\t                        if (!(ts.length > 1 && /\\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))))\n\t                            axis.tickDecimals = extraDec;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        function setTicks(axis) {\n\t            var oticks = axis.options.ticks, ticks = [];\n\t            if (oticks == null || (typeof oticks == \"number\" && oticks > 0))\n\t                ticks = axis.tickGenerator(axis);\n\t            else if (oticks) {\n\t                if ($.isFunction(oticks))\n\t                    // generate the ticks\n\t                    ticks = oticks(axis);\n\t                else\n\t                    ticks = oticks;\n\t            }\n\t\n\t            // clean up/labelify the supplied ticks, copy them over\n\t            var i, v;\n\t            axis.ticks = [];\n\t            for (i = 0; i < ticks.length; ++i) {\n\t                var label = null;\n\t                var t = ticks[i];\n\t                if (typeof t == \"object\") {\n\t                    v = +t[0];\n\t                    if (t.length > 1)\n\t                        label = t[1];\n\t                }\n\t                else\n\t                    v = +t;\n\t                if (label == null)\n\t                    label = axis.tickFormatter(v, axis);\n\t                if (!isNaN(v))\n\t                    axis.ticks.push({ v: v, label: label });\n\t            }\n\t        }\n\t\n\t        function snapRangeToTicks(axis, ticks) {\n\t            if (axis.options.autoscaleMargin && ticks.length > 0) {\n\t                // snap to ticks\n\t                if (axis.options.min == null)\n\t                    axis.min = Math.min(axis.min, ticks[0].v);\n\t                if (axis.options.max == null && ticks.length > 1)\n\t                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);\n\t            }\n\t        }\n\t\n\t        function draw() {\n\t\n\t            surface.clear();\n\t\n\t            executeHooks(hooks.drawBackground, [ctx]);\n\t\n\t            var grid = options.grid;\n\t\n\t            // draw background, if any\n\t            if (grid.show && grid.backgroundColor)\n\t                drawBackground();\n\t\n\t            if (grid.show && !grid.aboveData) {\n\t                drawGrid();\n\t            }\n\t\n\t            for (var i = 0; i < series.length; ++i) {\n\t                executeHooks(hooks.drawSeries, [ctx, series[i]]);\n\t                drawSeries(series[i]);\n\t            }\n\t\n\t            executeHooks(hooks.draw, [ctx]);\n\t\n\t            if (grid.show && grid.aboveData) {\n\t                drawGrid();\n\t            }\n\t\n\t            surface.render();\n\t\n\t            // A draw implies that either the axes or data have changed, so we\n\t            // should probably update the overlay highlights as well.\n\t\n\t            triggerRedrawOverlay();\n\t        }\n\t\n\t        function extractRange(ranges, coord) {\n\t            var axis, from, to, key, axes = allAxes();\n\t\n\t            for (var i = 0; i < axes.length; ++i) {\n\t                axis = axes[i];\n\t                if (axis.direction == coord) {\n\t                    key = coord + axis.n + \"axis\";\n\t                    if (!ranges[key] && axis.n == 1)\n\t                        key = coord + \"axis\"; // support x1axis as xaxis\n\t                    if (ranges[key]) {\n\t                        from = ranges[key].from;\n\t                        to = ranges[key].to;\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t\n\t            // backwards-compat stuff - to be removed in future\n\t            if (!ranges[key]) {\n\t                axis = coord == \"x\" ? xaxes[0] : yaxes[0];\n\t                from = ranges[coord + \"1\"];\n\t                to = ranges[coord + \"2\"];\n\t            }\n\t\n\t            // auto-reverse as an added bonus\n\t            if (from != null && to != null && from > to) {\n\t                var tmp = from;\n\t                from = to;\n\t                to = tmp;\n\t            }\n\t\n\t            return { from: from, to: to, axis: axis };\n\t        }\n\t\n\t        function drawBackground() {\n\t            ctx.save();\n\t            ctx.translate(plotOffset.left, plotOffset.top);\n\t\n\t            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, \"rgba(255, 255, 255, 0)\");\n\t            ctx.fillRect(0, 0, plotWidth, plotHeight);\n\t            ctx.restore();\n\t        }\n\t\n\t        function drawGrid() {\n\t            var i, axes, bw, bc;\n\t\n\t            ctx.save();\n\t            ctx.translate(plotOffset.left, plotOffset.top);\n\t\n\t            // draw markings\n\t            var markings = options.grid.markings;\n\t            if (markings) {\n\t                if ($.isFunction(markings)) {\n\t                    axes = plot.getAxes();\n\t                    // xmin etc. is backwards compatibility, to be\n\t                    // removed in the future\n\t                    axes.xmin = axes.xaxis.min;\n\t                    axes.xmax = axes.xaxis.max;\n\t                    axes.ymin = axes.yaxis.min;\n\t                    axes.ymax = axes.yaxis.max;\n\t\n\t                    markings = markings(axes);\n\t                }\n\t\n\t                for (i = 0; i < markings.length; ++i) {\n\t                    var m = markings[i],\n\t                        xrange = extractRange(m, \"x\"),\n\t                        yrange = extractRange(m, \"y\");\n\t\n\t                    // fill in missing\n\t                    if (xrange.from == null)\n\t                        xrange.from = xrange.axis.min;\n\t                    if (xrange.to == null)\n\t                        xrange.to = xrange.axis.max;\n\t                    if (yrange.from == null)\n\t                        yrange.from = yrange.axis.min;\n\t                    if (yrange.to == null)\n\t                        yrange.to = yrange.axis.max;\n\t\n\t                    // clip\n\t                    if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max ||\n\t                        yrange.to < yrange.axis.min || yrange.from > yrange.axis.max)\n\t                        continue;\n\t\n\t                    xrange.from = Math.max(xrange.from, xrange.axis.min);\n\t                    xrange.to = Math.min(xrange.to, xrange.axis.max);\n\t                    yrange.from = Math.max(yrange.from, yrange.axis.min);\n\t                    yrange.to = Math.min(yrange.to, yrange.axis.max);\n\t\n\t                    var xequal = xrange.from === xrange.to,\n\t                        yequal = yrange.from === yrange.to;\n\t\n\t                    if (xequal && yequal) {\n\t                        continue;\n\t                    }\n\t\n\t                    // then draw\n\t                    xrange.from = Math.floor(xrange.axis.p2c(xrange.from));\n\t                    xrange.to = Math.floor(xrange.axis.p2c(xrange.to));\n\t                    yrange.from = Math.floor(yrange.axis.p2c(yrange.from));\n\t                    yrange.to = Math.floor(yrange.axis.p2c(yrange.to));\n\t\n\t                    if (xequal || yequal) {\n\t                        var lineWidth = m.lineWidth || options.grid.markingsLineWidth,\n\t                            subPixel = lineWidth % 2 ? 0.5 : 0;\n\t                        ctx.beginPath();\n\t                        ctx.strokeStyle = m.color || options.grid.markingsColor;\n\t                        ctx.lineWidth = lineWidth;\n\t                        if (xequal) {\n\t                            ctx.moveTo(xrange.to + subPixel, yrange.from);\n\t                            ctx.lineTo(xrange.to + subPixel, yrange.to);\n\t                        } else {\n\t                            ctx.moveTo(xrange.from, yrange.to + subPixel);\n\t                            ctx.lineTo(xrange.to, yrange.to + subPixel);                            \n\t                        }\n\t                        ctx.stroke();\n\t                    } else {\n\t                        ctx.fillStyle = m.color || options.grid.markingsColor;\n\t                        ctx.fillRect(xrange.from, yrange.to,\n\t                                     xrange.to - xrange.from,\n\t                                     yrange.from - yrange.to);\n\t                    }\n\t                }\n\t            }\n\t\n\t            // draw the ticks\n\t            axes = allAxes();\n\t            bw = options.grid.borderWidth;\n\t\n\t            for (var j = 0; j < axes.length; ++j) {\n\t                var axis = axes[j], box = axis.box,\n\t                    t = axis.tickLength, x, y, xoff, yoff;\n\t                if (!axis.show || axis.ticks.length == 0)\n\t                    continue;\n\t\n\t                ctx.lineWidth = 1;\n\t\n\t                // find the edges\n\t                if (axis.direction == \"x\") {\n\t                    x = 0;\n\t                    if (t == \"full\")\n\t                        y = (axis.position == \"top\" ? 0 : plotHeight);\n\t                    else\n\t                        y = box.top - plotOffset.top + (axis.position == \"top\" ? box.height : 0);\n\t                }\n\t                else {\n\t                    y = 0;\n\t                    if (t == \"full\")\n\t                        x = (axis.position == \"left\" ? 0 : plotWidth);\n\t                    else\n\t                        x = box.left - plotOffset.left + (axis.position == \"left\" ? box.width : 0);\n\t                }\n\t\n\t                // draw tick bar\n\t                if (!axis.innermost) {\n\t                    ctx.strokeStyle = axis.options.color;\n\t                    ctx.beginPath();\n\t                    xoff = yoff = 0;\n\t                    if (axis.direction == \"x\")\n\t                        xoff = plotWidth + 1;\n\t                    else\n\t                        yoff = plotHeight + 1;\n\t\n\t                    if (ctx.lineWidth == 1) {\n\t                        if (axis.direction == \"x\") {\n\t                            y = Math.floor(y) + 0.5;\n\t                        } else {\n\t                            x = Math.floor(x) + 0.5;\n\t                        }\n\t                    }\n\t\n\t                    ctx.moveTo(x, y);\n\t                    ctx.lineTo(x + xoff, y + yoff);\n\t                    ctx.stroke();\n\t                }\n\t\n\t                // draw ticks\n\t\n\t                ctx.strokeStyle = axis.options.tickColor;\n\t\n\t                ctx.beginPath();\n\t                for (i = 0; i < axis.ticks.length; ++i) {\n\t                    var v = axis.ticks[i].v;\n\t\n\t                    xoff = yoff = 0;\n\t\n\t                    if (isNaN(v) || v < axis.min || v > axis.max\n\t                        // skip those lying on the axes if we got a border\n\t                        || (t == \"full\"\n\t                            && ((typeof bw == \"object\" && bw[axis.position] > 0) || bw > 0)\n\t                            && (v == axis.min || v == axis.max)))\n\t                        continue;\n\t\n\t                    if (axis.direction == \"x\") {\n\t                        x = axis.p2c(v);\n\t                        yoff = t == \"full\" ? -plotHeight : t;\n\t\n\t                        if (axis.position == \"top\")\n\t                            yoff = -yoff;\n\t                    }\n\t                    else {\n\t                        y = axis.p2c(v);\n\t                        xoff = t == \"full\" ? -plotWidth : t;\n\t\n\t                        if (axis.position == \"left\")\n\t                            xoff = -xoff;\n\t                    }\n\t\n\t                    if (ctx.lineWidth == 1) {\n\t                        if (axis.direction == \"x\")\n\t                            x = Math.floor(x) + 0.5;\n\t                        else\n\t                            y = Math.floor(y) + 0.5;\n\t                    }\n\t\n\t                    ctx.moveTo(x, y);\n\t                    ctx.lineTo(x + xoff, y + yoff);\n\t                }\n\t\n\t                ctx.stroke();\n\t            }\n\t\n\t\n\t            // draw border\n\t            if (bw) {\n\t                // If either borderWidth or borderColor is an object, then draw the border\n\t                // line by line instead of as one rectangle\n\t                bc = options.grid.borderColor;\n\t                if(typeof bw == \"object\" || typeof bc == \"object\") {\n\t                    if (typeof bw !== \"object\") {\n\t                        bw = {top: bw, right: bw, bottom: bw, left: bw};\n\t                    }\n\t                    if (typeof bc !== \"object\") {\n\t                        bc = {top: bc, right: bc, bottom: bc, left: bc};\n\t                    }\n\t\n\t                    if (bw.top > 0) {\n\t                        ctx.strokeStyle = bc.top;\n\t                        ctx.lineWidth = bw.top;\n\t                        ctx.beginPath();\n\t                        ctx.moveTo(0 - bw.left, 0 - bw.top/2);\n\t                        ctx.lineTo(plotWidth, 0 - bw.top/2);\n\t                        ctx.stroke();\n\t                    }\n\t\n\t                    if (bw.right > 0) {\n\t                        ctx.strokeStyle = bc.right;\n\t                        ctx.lineWidth = bw.right;\n\t                        ctx.beginPath();\n\t                        ctx.moveTo(plotWidth + bw.right / 2, 0 - bw.top);\n\t                        ctx.lineTo(plotWidth + bw.right / 2, plotHeight);\n\t                        ctx.stroke();\n\t                    }\n\t\n\t                    if (bw.bottom > 0) {\n\t                        ctx.strokeStyle = bc.bottom;\n\t                        ctx.lineWidth = bw.bottom;\n\t                        ctx.beginPath();\n\t                        ctx.moveTo(plotWidth + bw.right, plotHeight + bw.bottom / 2);\n\t                        ctx.lineTo(0, plotHeight + bw.bottom / 2);\n\t                        ctx.stroke();\n\t                    }\n\t\n\t                    if (bw.left > 0) {\n\t                        ctx.strokeStyle = bc.left;\n\t                        ctx.lineWidth = bw.left;\n\t                        ctx.beginPath();\n\t                        ctx.moveTo(0 - bw.left/2, plotHeight + bw.bottom);\n\t                        ctx.lineTo(0- bw.left/2, 0);\n\t                        ctx.stroke();\n\t                    }\n\t                }\n\t                else {\n\t                    ctx.lineWidth = bw;\n\t                    ctx.strokeStyle = options.grid.borderColor;\n\t                    ctx.strokeRect(-bw/2, -bw/2, plotWidth + bw, plotHeight + bw);\n\t                }\n\t            }\n\t\n\t            ctx.restore();\n\t        }\n\t\n\t        function drawAxisLabels() {\n\t\n\t            $.each(allAxes(), function (_, axis) {\n\t                var box = axis.box,\n\t                    legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n\t                    layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n\t                    font = axis.options.font || \"flot-tick-label tickLabel\",\n\t                    tick, x, y, halign, valign;\n\t\n\t                // Remove text before checking for axis.show and ticks.length;\n\t                // otherwise plugins, like flot-tickrotor, that draw their own\n\t                // tick labels will end up with both theirs and the defaults.\n\t\n\t                surface.removeText(layer);\n\t\n\t                if (!axis.show || axis.ticks.length == 0)\n\t                    return;\n\t\n\t                for (var i = 0; i < axis.ticks.length; ++i) {\n\t\n\t                    tick = axis.ticks[i];\n\t                    if (!tick.label || tick.v < axis.min || tick.v > axis.max)\n\t                        continue;\n\t\n\t                    if (axis.direction == \"x\") {\n\t                        halign = \"center\";\n\t                        x = plotOffset.left + axis.p2c(tick.v);\n\t                        if (axis.position == \"bottom\") {\n\t                            y = box.top + box.padding;\n\t                        } else {\n\t                            y = box.top + box.height - box.padding;\n\t                            valign = \"bottom\";\n\t                        }\n\t                    } else {\n\t                        valign = \"middle\";\n\t                        y = plotOffset.top + axis.p2c(tick.v);\n\t                        if (axis.position == \"left\") {\n\t                            x = box.left + box.width - box.padding;\n\t                            halign = \"right\";\n\t                        } else {\n\t                            x = box.left + box.padding;\n\t                        }\n\t                    }\n\t\n\t                    surface.addText(layer, x, y, tick.label, font, null, null, halign, valign);\n\t                }\n\t            });\n\t        }\n\t\n\t        function drawSeries(series) {\n\t            if (series.lines.show)\n\t                drawSeriesLines(series);\n\t            if (series.bars.show)\n\t                drawSeriesBars(series);\n\t            if (series.points.show)\n\t                drawSeriesPoints(series);\n\t        }\n\t\n\t        function drawSeriesLines(series) {\n\t            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {\n\t                var points = datapoints.points,\n\t                    ps = datapoints.pointsize,\n\t                    prevx = null, prevy = null;\n\t\n\t                ctx.beginPath();\n\t                for (var i = ps; i < points.length; i += ps) {\n\t                    var x1 = points[i - ps], y1 = points[i - ps + 1],\n\t                        x2 = points[i], y2 = points[i + 1];\n\t\n\t                    if (x1 == null || x2 == null)\n\t                        continue;\n\t\n\t                    // clip with ymin\n\t                    if (y1 <= y2 && y1 < axisy.min) {\n\t                        if (y2 < axisy.min)\n\t                            continue;   // line segment is outside\n\t                        // compute new intersection point\n\t                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n\t                        y1 = axisy.min;\n\t                    }\n\t                    else if (y2 <= y1 && y2 < axisy.min) {\n\t                        if (y1 < axisy.min)\n\t                            continue;\n\t                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n\t                        y2 = axisy.min;\n\t                    }\n\t\n\t                    // clip with ymax\n\t                    if (y1 >= y2 && y1 > axisy.max) {\n\t                        if (y2 > axisy.max)\n\t                            continue;\n\t                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n\t                        y1 = axisy.max;\n\t                    }\n\t                    else if (y2 >= y1 && y2 > axisy.max) {\n\t                        if (y1 > axisy.max)\n\t                            continue;\n\t                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n\t                        y2 = axisy.max;\n\t                    }\n\t\n\t                    // clip with xmin\n\t                    if (x1 <= x2 && x1 < axisx.min) {\n\t                        if (x2 < axisx.min)\n\t                            continue;\n\t                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n\t                        x1 = axisx.min;\n\t                    }\n\t                    else if (x2 <= x1 && x2 < axisx.min) {\n\t                        if (x1 < axisx.min)\n\t                            continue;\n\t                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n\t                        x2 = axisx.min;\n\t                    }\n\t\n\t                    // clip with xmax\n\t                    if (x1 >= x2 && x1 > axisx.max) {\n\t                        if (x2 > axisx.max)\n\t                            continue;\n\t                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n\t                        x1 = axisx.max;\n\t                    }\n\t                    else if (x2 >= x1 && x2 > axisx.max) {\n\t                        if (x1 > axisx.max)\n\t                            continue;\n\t                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n\t                        x2 = axisx.max;\n\t                    }\n\t\n\t                    if (x1 != prevx || y1 != prevy)\n\t                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);\n\t\n\t                    prevx = x2;\n\t                    prevy = y2;\n\t                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);\n\t                }\n\t                ctx.stroke();\n\t            }\n\t\n\t            function plotLineArea(datapoints, axisx, axisy) {\n\t                var points = datapoints.points,\n\t                    ps = datapoints.pointsize,\n\t                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),\n\t                    i = 0, top, areaOpen = false,\n\t                    ypos = 1, segmentStart = 0, segmentEnd = 0;\n\t\n\t                // we process each segment in two turns, first forward\n\t                // direction to sketch out top, then once we hit the\n\t                // end we go backwards to sketch the bottom\n\t                while (true) {\n\t                    if (ps > 0 && i > points.length + ps)\n\t                        break;\n\t\n\t                    i += ps; // ps is negative if going backwards\n\t\n\t                    var x1 = points[i - ps],\n\t                        y1 = points[i - ps + ypos],\n\t                        x2 = points[i], y2 = points[i + ypos];\n\t\n\t                    if (areaOpen) {\n\t                        if (ps > 0 && x1 != null && x2 == null) {\n\t                            // at turning point\n\t                            segmentEnd = i;\n\t                            ps = -ps;\n\t                            ypos = 2;\n\t                            continue;\n\t                        }\n\t\n\t                        if (ps < 0 && i == segmentStart + ps) {\n\t                            // done with the reverse sweep\n\t                            ctx.fill();\n\t                            areaOpen = false;\n\t                            ps = -ps;\n\t                            ypos = 1;\n\t                            i = segmentStart = segmentEnd + ps;\n\t                            continue;\n\t                        }\n\t                    }\n\t\n\t                    if (x1 == null || x2 == null)\n\t                        continue;\n\t\n\t                    // clip x values\n\t\n\t                    // clip with xmin\n\t                    if (x1 <= x2 && x1 < axisx.min) {\n\t                        if (x2 < axisx.min)\n\t                            continue;\n\t                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n\t                        x1 = axisx.min;\n\t                    }\n\t                    else if (x2 <= x1 && x2 < axisx.min) {\n\t                        if (x1 < axisx.min)\n\t                            continue;\n\t                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n\t                        x2 = axisx.min;\n\t                    }\n\t\n\t                    // clip with xmax\n\t                    if (x1 >= x2 && x1 > axisx.max) {\n\t                        if (x2 > axisx.max)\n\t                            continue;\n\t                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n\t                        x1 = axisx.max;\n\t                    }\n\t                    else if (x2 >= x1 && x2 > axisx.max) {\n\t                        if (x1 > axisx.max)\n\t                            continue;\n\t                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n\t                        x2 = axisx.max;\n\t                    }\n\t\n\t                    if (!areaOpen) {\n\t                        // open area\n\t                        ctx.beginPath();\n\t                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));\n\t                        areaOpen = true;\n\t                    }\n\t\n\t                    // now first check the case where both is outside\n\t                    if (y1 >= axisy.max && y2 >= axisy.max) {\n\t                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));\n\t                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));\n\t                        continue;\n\t                    }\n\t                    else if (y1 <= axisy.min && y2 <= axisy.min) {\n\t                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));\n\t                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));\n\t                        continue;\n\t                    }\n\t\n\t                    // else it's a bit more complicated, there might\n\t                    // be a flat maxed out rectangle first, then a\n\t                    // triangular cutout or reverse; to find these\n\t                    // keep track of the current x values\n\t                    var x1old = x1, x2old = x2;\n\t\n\t                    // clip the y values, without shortcutting, we\n\t                    // go through all cases in turn\n\t\n\t                    // clip with ymin\n\t                    if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {\n\t                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n\t                        y1 = axisy.min;\n\t                    }\n\t                    else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {\n\t                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n\t                        y2 = axisy.min;\n\t                    }\n\t\n\t                    // clip with ymax\n\t                    if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {\n\t                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n\t                        y1 = axisy.max;\n\t                    }\n\t                    else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {\n\t                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n\t                        y2 = axisy.max;\n\t                    }\n\t\n\t                    // if the x value was changed we got a rectangle\n\t                    // to fill\n\t                    if (x1 != x1old) {\n\t                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));\n\t                        // it goes to (x1, y1), but we fill that below\n\t                    }\n\t\n\t                    // fill triangular section, this sometimes result\n\t                    // in redundant points if (x1, y1) hasn't changed\n\t                    // from previous line to, but we just ignore that\n\t                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));\n\t                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n\t\n\t                    // fill the other rectangle if it's there\n\t                    if (x2 != x2old) {\n\t                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n\t                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));\n\t                    }\n\t                }\n\t            }\n\t\n\t            ctx.save();\n\t            ctx.translate(plotOffset.left, plotOffset.top);\n\t            ctx.lineJoin = \"round\";\n\t\n\t            var lw = series.lines.lineWidth,\n\t                sw = series.shadowSize;\n\t            // FIXME: consider another form of shadow when filling is turned on\n\t            if (lw > 0 && sw > 0) {\n\t                // draw shadow as a thick and thin line with transparency\n\t                ctx.lineWidth = sw;\n\t                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n\t                // position shadow at angle from the mid of line\n\t                var angle = Math.PI/18;\n\t                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/2), Math.cos(angle) * (lw/2 + sw/2), series.xaxis, series.yaxis);\n\t                ctx.lineWidth = sw/2;\n\t                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/4), Math.cos(angle) * (lw/2 + sw/4), series.xaxis, series.yaxis);\n\t            }\n\t\n\t            ctx.lineWidth = lw;\n\t            ctx.strokeStyle = series.color;\n\t            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);\n\t            if (fillStyle) {\n\t                ctx.fillStyle = fillStyle;\n\t                plotLineArea(series.datapoints, series.xaxis, series.yaxis);\n\t            }\n\t\n\t            if (lw > 0)\n\t                plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);\n\t            ctx.restore();\n\t        }\n\t\n\t        function drawSeriesPoints(series) {\n\t            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {\n\t                var points = datapoints.points, ps = datapoints.pointsize;\n\t\n\t                for (var i = 0; i < points.length; i += ps) {\n\t                    var x = points[i], y = points[i + 1];\n\t                    if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n\t                        continue;\n\t\n\t                    ctx.beginPath();\n\t                    x = axisx.p2c(x);\n\t                    y = axisy.p2c(y) + offset;\n\t                    if (symbol == \"circle\")\n\t                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);\n\t                    else\n\t                        symbol(ctx, x, y, radius, shadow);\n\t                    ctx.closePath();\n\t\n\t                    if (fillStyle) {\n\t                        ctx.fillStyle = fillStyle;\n\t                        ctx.fill();\n\t                    }\n\t                    ctx.stroke();\n\t                }\n\t            }\n\t\n\t            ctx.save();\n\t            ctx.translate(plotOffset.left, plotOffset.top);\n\t\n\t            var lw = series.points.lineWidth,\n\t                sw = series.shadowSize,\n\t                radius = series.points.radius,\n\t                symbol = series.points.symbol;\n\t\n\t            // If the user sets the line width to 0, we change it to a very \n\t            // small value. A line width of 0 seems to force the default of 1.\n\t            // Doing the conditional here allows the shadow setting to still be \n\t            // optional even with a lineWidth of 0.\n\t\n\t            if( lw == 0 )\n\t                lw = 0.0001;\n\t\n\t            if (lw > 0 && sw > 0) {\n\t                // draw shadow in two steps\n\t                var w = sw / 2;\n\t                ctx.lineWidth = w;\n\t                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n\t                plotPoints(series.datapoints, radius, null, w + w/2, true,\n\t                           series.xaxis, series.yaxis, symbol);\n\t\n\t                ctx.strokeStyle = \"rgba(0,0,0,0.2)\";\n\t                plotPoints(series.datapoints, radius, null, w/2, true,\n\t                           series.xaxis, series.yaxis, symbol);\n\t            }\n\t\n\t            ctx.lineWidth = lw;\n\t            ctx.strokeStyle = series.color;\n\t            plotPoints(series.datapoints, radius,\n\t                       getFillStyle(series.points, series.color), 0, false,\n\t                       series.xaxis, series.yaxis, symbol);\n\t            ctx.restore();\n\t        }\n\t\n\t        function drawBar(x, y, b, barLeft, barRight, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {\n\t            var left, right, bottom, top,\n\t                drawLeft, drawRight, drawTop, drawBottom,\n\t                tmp;\n\t\n\t            // in horizontal mode, we start the bar from the left\n\t            // instead of from the bottom so it appears to be\n\t            // horizontal rather than vertical\n\t            if (horizontal) {\n\t                drawBottom = drawRight = drawTop = true;\n\t                drawLeft = false;\n\t                left = b;\n\t                right = x;\n\t                top = y + barLeft;\n\t                bottom = y + barRight;\n\t\n\t                // account for negative bars\n\t                if (right < left) {\n\t                    tmp = right;\n\t                    right = left;\n\t                    left = tmp;\n\t                    drawLeft = true;\n\t                    drawRight = false;\n\t                }\n\t            }\n\t            else {\n\t                drawLeft = drawRight = drawTop = true;\n\t                drawBottom = false;\n\t                left = x + barLeft;\n\t                right = x + barRight;\n\t                bottom = b;\n\t                top = y;\n\t\n\t                // account for negative bars\n\t                if (top < bottom) {\n\t                    tmp = top;\n\t                    top = bottom;\n\t                    bottom = tmp;\n\t                    drawBottom = true;\n\t                    drawTop = false;\n\t                }\n\t            }\n\t\n\t            // clip\n\t            if (right < axisx.min || left > axisx.max ||\n\t                top < axisy.min || bottom > axisy.max)\n\t                return;\n\t\n\t            if (left < axisx.min) {\n\t                left = axisx.min;\n\t                drawLeft = false;\n\t            }\n\t\n\t            if (right > axisx.max) {\n\t                right = axisx.max;\n\t                drawRight = false;\n\t            }\n\t\n\t            if (bottom < axisy.min) {\n\t                bottom = axisy.min;\n\t                drawBottom = false;\n\t            }\n\t\n\t            if (top > axisy.max) {\n\t                top = axisy.max;\n\t                drawTop = false;\n\t            }\n\t\n\t            left = axisx.p2c(left);\n\t            bottom = axisy.p2c(bottom);\n\t            right = axisx.p2c(right);\n\t            top = axisy.p2c(top);\n\t\n\t            // fill the bar\n\t            if (fillStyleCallback) {\n\t                c.fillStyle = fillStyleCallback(bottom, top);\n\t                c.fillRect(left, top, right - left, bottom - top)\n\t            }\n\t\n\t            // draw outline\n\t            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {\n\t                c.beginPath();\n\t\n\t                // FIXME: inline moveTo is buggy with excanvas\n\t                c.moveTo(left, bottom);\n\t                if (drawLeft)\n\t                    c.lineTo(left, top);\n\t                else\n\t                    c.moveTo(left, top);\n\t                if (drawTop)\n\t                    c.lineTo(right, top);\n\t                else\n\t                    c.moveTo(right, top);\n\t                if (drawRight)\n\t                    c.lineTo(right, bottom);\n\t                else\n\t                    c.moveTo(right, bottom);\n\t                if (drawBottom)\n\t                    c.lineTo(left, bottom);\n\t                else\n\t                    c.moveTo(left, bottom);\n\t                c.stroke();\n\t            }\n\t        }\n\t\n\t        function drawSeriesBars(series) {\n\t            function plotBars(datapoints, barLeft, barRight, fillStyleCallback, axisx, axisy) {\n\t                var points = datapoints.points, ps = datapoints.pointsize;\n\t\n\t                for (var i = 0; i < points.length; i += ps) {\n\t                    if (points[i] == null)\n\t                        continue;\n\t                    drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);\n\t                }\n\t            }\n\t\n\t            ctx.save();\n\t            ctx.translate(plotOffset.left, plotOffset.top);\n\t\n\t            // FIXME: figure out a way to add shadows (for instance along the right edge)\n\t            ctx.lineWidth = series.bars.lineWidth;\n\t            ctx.strokeStyle = series.color;\n\t\n\t            var barLeft;\n\t\n\t            switch (series.bars.align) {\n\t                case \"left\":\n\t                    barLeft = 0;\n\t                    break;\n\t                case \"right\":\n\t                    barLeft = -series.bars.barWidth;\n\t                    break;\n\t                default:\n\t                    barLeft = -series.bars.barWidth / 2;\n\t            }\n\t\n\t            var fillStyleCallback = series.bars.fill ? function (bottom, top) { return getFillStyle(series.bars, series.color, bottom, top); } : null;\n\t            plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, fillStyleCallback, series.xaxis, series.yaxis);\n\t            ctx.restore();\n\t        }\n\t\n\t        function getFillStyle(filloptions, seriesColor, bottom, top) {\n\t            var fill = filloptions.fill;\n\t            if (!fill)\n\t                return null;\n\t\n\t            if (filloptions.fillColor)\n\t                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);\n\t\n\t            var c = $.color.parse(seriesColor);\n\t            c.a = typeof fill == \"number\" ? fill : 0.4;\n\t            c.normalize();\n\t            return c.toString();\n\t        }\n\t\n\t        function insertLegend() {\n\t\n\t            if (options.legend.container != null) {\n\t                $(options.legend.container).html(\"\");\n\t            } else {\n\t                placeholder.find(\".legend\").remove();\n\t            }\n\t\n\t            if (!options.legend.show) {\n\t                return;\n\t            }\n\t\n\t            var fragments = [], entries = [], rowStarted = false,\n\t                lf = options.legend.labelFormatter, s, label;\n\t\n\t            // Build a list of legend entries, with each having a label and a color\n\t\n\t            for (var i = 0; i < series.length; ++i) {\n\t                s = series[i];\n\t                if (s.label) {\n\t                    label = lf ? lf(s.label, s) : s.label;\n\t                    if (label) {\n\t                        entries.push({\n\t                            label: label,\n\t                            color: s.color\n\t                        });\n\t                    }\n\t                }\n\t            }\n\t\n\t            // Sort the legend using either the default or a custom comparator\n\t\n\t            if (options.legend.sorted) {\n\t                if ($.isFunction(options.legend.sorted)) {\n\t                    entries.sort(options.legend.sorted);\n\t                } else if (options.legend.sorted == \"reverse\") {\n\t                \tentries.reverse();\n\t                } else {\n\t                    var ascending = options.legend.sorted != \"descending\";\n\t                    entries.sort(function(a, b) {\n\t                        return a.label == b.label ? 0 : (\n\t                            (a.label < b.label) != ascending ? 1 : -1   // Logical XOR\n\t                        );\n\t                    });\n\t                }\n\t            }\n\t\n\t            // Generate markup for the list of entries, in their final order\n\t\n\t            for (var i = 0; i < entries.length; ++i) {\n\t\n\t                var entry = entries[i];\n\t\n\t                if (i % options.legend.noColumns == 0) {\n\t                    if (rowStarted)\n\t                        fragments.push('</tr>');\n\t                    fragments.push('<tr>');\n\t                    rowStarted = true;\n\t                }\n\t\n\t                fragments.push(\n\t                    '<td class=\"legendColorBox\"><div style=\"border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px\"><div style=\"width:4px;height:0;border:5px solid ' + entry.color + ';overflow:hidden\"></div></div></td>' +\n\t                    '<td class=\"legendLabel\">' + entry.label + '</td>'\n\t                );\n\t            }\n\t\n\t            if (rowStarted)\n\t                fragments.push('</tr>');\n\t\n\t            if (fragments.length == 0)\n\t                return;\n\t\n\t            var table = '<table style=\"font-size:smaller;color:' + options.grid.color + '\">' + fragments.join(\"\") + '</table>';\n\t            if (options.legend.container != null)\n\t                $(options.legend.container).html(table);\n\t            else {\n\t                var pos = \"\",\n\t                    p = options.legend.position,\n\t                    m = options.legend.margin;\n\t                if (m[0] == null)\n\t                    m = [m, m];\n\t                if (p.charAt(0) == \"n\")\n\t                    pos += 'top:' + (m[1] + plotOffset.top) + 'px;';\n\t                else if (p.charAt(0) == \"s\")\n\t                    pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';\n\t                if (p.charAt(1) == \"e\")\n\t                    pos += 'right:' + (m[0] + plotOffset.right) + 'px;';\n\t                else if (p.charAt(1) == \"w\")\n\t                    pos += 'left:' + (m[0] + plotOffset.left) + 'px;';\n\t                var legend = $('<div class=\"legend\">' + table.replace('style=\"', 'style=\"position:absolute;' + pos +';') + '</div>').appendTo(placeholder);\n\t                if (options.legend.backgroundOpacity != 0.0) {\n\t                    // put in the transparent background\n\t                    // separately to avoid blended labels and\n\t                    // label boxes\n\t                    var c = options.legend.backgroundColor;\n\t                    if (c == null) {\n\t                        c = options.grid.backgroundColor;\n\t                        if (c && typeof c == \"string\")\n\t                            c = $.color.parse(c);\n\t                        else\n\t                            c = $.color.extract(legend, 'background-color');\n\t                        c.a = 1;\n\t                        c = c.toString();\n\t                    }\n\t                    var div = legend.children();\n\t                    $('<div style=\"position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos +'background-color:' + c + ';\"> </div>').prependTo(legend).css('opacity', options.legend.backgroundOpacity);\n\t                }\n\t            }\n\t        }\n\t\n\t\n\t        // interactive features\n\t\n\t        var highlights = [],\n\t            redrawTimeout = null;\n\t\n\t        // returns the data item the mouse is over, or null if none is found\n\t        function findNearbyItem(mouseX, mouseY, seriesFilter) {\n\t            var maxDistance = options.grid.mouseActiveRadius,\n\t                smallestDistance = maxDistance * maxDistance + 1,\n\t                item = null, foundPoint = false, i, j, ps;\n\t\n\t            for (i = series.length - 1; i >= 0; --i) {\n\t                if (!seriesFilter(series[i]))\n\t                    continue;\n\t\n\t                var s = series[i],\n\t                    axisx = s.xaxis,\n\t                    axisy = s.yaxis,\n\t                    points = s.datapoints.points,\n\t                    mx = axisx.c2p(mouseX), // precompute some stuff to make the loop faster\n\t                    my = axisy.c2p(mouseY),\n\t                    maxx = maxDistance / axisx.scale,\n\t                    maxy = maxDistance / axisy.scale;\n\t\n\t                ps = s.datapoints.pointsize;\n\t                // with inverse transforms, we can't use the maxx/maxy\n\t                // optimization, sadly\n\t                if (axisx.options.inverseTransform)\n\t                    maxx = Number.MAX_VALUE;\n\t                if (axisy.options.inverseTransform)\n\t                    maxy = Number.MAX_VALUE;\n\t\n\t                if (s.lines.show || s.points.show) {\n\t                    for (j = 0; j < points.length; j += ps) {\n\t                        var x = points[j], y = points[j + 1];\n\t                        if (x == null)\n\t                            continue;\n\t\n\t                        // For points and lines, the cursor must be within a\n\t                        // certain distance to the data point\n\t                        if (x - mx > maxx || x - mx < -maxx ||\n\t                            y - my > maxy || y - my < -maxy)\n\t                            continue;\n\t\n\t                        // We have to calculate distances in pixels, not in\n\t                        // data units, because the scales of the axes may be different\n\t                        var dx = Math.abs(axisx.p2c(x) - mouseX),\n\t                            dy = Math.abs(axisy.p2c(y) - mouseY),\n\t                            dist = dx * dx + dy * dy; // we save the sqrt\n\t\n\t                        // use <= to ensure last point takes precedence\n\t                        // (last generally means on top of)\n\t                        if (dist < smallestDistance) {\n\t                            smallestDistance = dist;\n\t                            item = [i, j / ps];\n\t                        }\n\t                    }\n\t                }\n\t\n\t                if (s.bars.show && !item) { // no other point can be nearby\n\t\n\t                    var barLeft, barRight;\n\t\n\t                    switch (s.bars.align) {\n\t                        case \"left\":\n\t                            barLeft = 0;\n\t                            break;\n\t                        case \"right\":\n\t                            barLeft = -s.bars.barWidth;\n\t                            break;\n\t                        default:\n\t                            barLeft = -s.bars.barWidth / 2;\n\t                    }\n\t\n\t                    barRight = barLeft + s.bars.barWidth;\n\t\n\t                    for (j = 0; j < points.length; j += ps) {\n\t                        var x = points[j], y = points[j + 1], b = points[j + 2];\n\t                        if (x == null)\n\t                            continue;\n\t\n\t                        // for a bar graph, the cursor must be inside the bar\n\t                        if (series[i].bars.horizontal ?\n\t                            (mx <= Math.max(b, x) && mx >= Math.min(b, x) &&\n\t                             my >= y + barLeft && my <= y + barRight) :\n\t                            (mx >= x + barLeft && mx <= x + barRight &&\n\t                             my >= Math.min(b, y) && my <= Math.max(b, y)))\n\t                                item = [i, j / ps];\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (item) {\n\t                i = item[0];\n\t                j = item[1];\n\t                ps = series[i].datapoints.pointsize;\n\t\n\t                return { datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),\n\t                         dataIndex: j,\n\t                         series: series[i],\n\t                         seriesIndex: i };\n\t            }\n\t\n\t            return null;\n\t        }\n\t\n\t        function onMouseMove(e) {\n\t            if (options.grid.hoverable)\n\t                triggerClickHoverEvent(\"plothover\", e,\n\t                                       function (s) { return s[\"hoverable\"] != false; });\n\t        }\n\t\n\t        function onMouseLeave(e) {\n\t            if (options.grid.hoverable)\n\t                triggerClickHoverEvent(\"plothover\", e,\n\t                                       function (s) { return false; });\n\t        }\n\t\n\t        function onClick(e) {\n\t            triggerClickHoverEvent(\"plotclick\", e,\n\t                                   function (s) { return s[\"clickable\"] != false; });\n\t        }\n\t\n\t        // trigger click or hover event (they send the same parameters\n\t        // so we share their code)\n\t        function triggerClickHoverEvent(eventname, event, seriesFilter) {\n\t            var offset = eventHolder.offset(),\n\t                canvasX = event.pageX - offset.left - plotOffset.left,\n\t                canvasY = event.pageY - offset.top - plotOffset.top,\n\t            pos = canvasToAxisCoords({ left: canvasX, top: canvasY });\n\t\n\t            pos.pageX = event.pageX;\n\t            pos.pageY = event.pageY;\n\t\n\t            var item = findNearbyItem(canvasX, canvasY, seriesFilter);\n\t\n\t            if (item) {\n\t                // fill in mouse pos for any listeners out there\n\t                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left, 10);\n\t                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top, 10);\n\t            }\n\t\n\t            if (options.grid.autoHighlight) {\n\t                // clear auto-highlights\n\t                for (var i = 0; i < highlights.length; ++i) {\n\t                    var h = highlights[i];\n\t                    if (h.auto == eventname &&\n\t                        !(item && h.series == item.series &&\n\t                          h.point[0] == item.datapoint[0] &&\n\t                          h.point[1] == item.datapoint[1]))\n\t                        unhighlight(h.series, h.point);\n\t                }\n\t\n\t                if (item)\n\t                    highlight(item.series, item.datapoint, eventname);\n\t            }\n\t\n\t            placeholder.trigger(eventname, [ pos, item ]);\n\t        }\n\t\n\t        function triggerRedrawOverlay() {\n\t            var t = options.interaction.redrawOverlayInterval;\n\t            if (t == -1) {      // skip event queue\n\t                drawOverlay();\n\t                return;\n\t            }\n\t\n\t            if (!redrawTimeout)\n\t                redrawTimeout = setTimeout(drawOverlay, t);\n\t        }\n\t\n\t        function drawOverlay() {\n\t            redrawTimeout = null;\n\t\n\t            // draw highlights\n\t            octx.save();\n\t            overlay.clear();\n\t            octx.translate(plotOffset.left, plotOffset.top);\n\t\n\t            var i, hi;\n\t            for (i = 0; i < highlights.length; ++i) {\n\t                hi = highlights[i];\n\t\n\t                if (hi.series.bars.show)\n\t                    drawBarHighlight(hi.series, hi.point);\n\t                else\n\t                    drawPointHighlight(hi.series, hi.point);\n\t            }\n\t            octx.restore();\n\t\n\t            executeHooks(hooks.drawOverlay, [octx]);\n\t        }\n\t\n\t        function highlight(s, point, auto) {\n\t            if (typeof s == \"number\")\n\t                s = series[s];\n\t\n\t            if (typeof point == \"number\") {\n\t                var ps = s.datapoints.pointsize;\n\t                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n\t            }\n\t\n\t            var i = indexOfHighlight(s, point);\n\t            if (i == -1) {\n\t                highlights.push({ series: s, point: point, auto: auto });\n\t\n\t                triggerRedrawOverlay();\n\t            }\n\t            else if (!auto)\n\t                highlights[i].auto = false;\n\t        }\n\t\n\t        function unhighlight(s, point) {\n\t            if (s == null && point == null) {\n\t                highlights = [];\n\t                triggerRedrawOverlay();\n\t                return;\n\t            }\n\t\n\t            if (typeof s == \"number\")\n\t                s = series[s];\n\t\n\t            if (typeof point == \"number\") {\n\t                var ps = s.datapoints.pointsize;\n\t                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n\t            }\n\t\n\t            var i = indexOfHighlight(s, point);\n\t            if (i != -1) {\n\t                highlights.splice(i, 1);\n\t\n\t                triggerRedrawOverlay();\n\t            }\n\t        }\n\t\n\t        function indexOfHighlight(s, p) {\n\t            for (var i = 0; i < highlights.length; ++i) {\n\t                var h = highlights[i];\n\t                if (h.series == s && h.point[0] == p[0]\n\t                    && h.point[1] == p[1])\n\t                    return i;\n\t            }\n\t            return -1;\n\t        }\n\t\n\t        function drawPointHighlight(series, point) {\n\t            var x = point[0], y = point[1],\n\t                axisx = series.xaxis, axisy = series.yaxis,\n\t                highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString();\n\t\n\t            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n\t                return;\n\t\n\t            var pointRadius = series.points.radius + series.points.lineWidth / 2;\n\t            octx.lineWidth = pointRadius;\n\t            octx.strokeStyle = highlightColor;\n\t            var radius = 1.5 * pointRadius;\n\t            x = axisx.p2c(x);\n\t            y = axisy.p2c(y);\n\t\n\t            octx.beginPath();\n\t            if (series.points.symbol == \"circle\")\n\t                octx.arc(x, y, radius, 0, 2 * Math.PI, false);\n\t            else\n\t                series.points.symbol(octx, x, y, radius, false);\n\t            octx.closePath();\n\t            octx.stroke();\n\t        }\n\t\n\t        function drawBarHighlight(series, point) {\n\t            var highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString(),\n\t                fillStyle = highlightColor,\n\t                barLeft;\n\t\n\t            switch (series.bars.align) {\n\t                case \"left\":\n\t                    barLeft = 0;\n\t                    break;\n\t                case \"right\":\n\t                    barLeft = -series.bars.barWidth;\n\t                    break;\n\t                default:\n\t                    barLeft = -series.bars.barWidth / 2;\n\t            }\n\t\n\t            octx.lineWidth = series.bars.lineWidth;\n\t            octx.strokeStyle = highlightColor;\n\t\n\t            drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth,\n\t                    function () { return fillStyle; }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);\n\t        }\n\t\n\t        function getColorOrGradient(spec, bottom, top, defaultColor) {\n\t            if (typeof spec == \"string\")\n\t                return spec;\n\t            else {\n\t                // assume this is a gradient spec; IE currently only\n\t                // supports a simple vertical gradient properly, so that's\n\t                // what we support too\n\t                var gradient = ctx.createLinearGradient(0, top, 0, bottom);\n\t\n\t                for (var i = 0, l = spec.colors.length; i < l; ++i) {\n\t                    var c = spec.colors[i];\n\t                    if (typeof c != \"string\") {\n\t                        var co = $.color.parse(defaultColor);\n\t                        if (c.brightness != null)\n\t                            co = co.scale('rgb', c.brightness);\n\t                        if (c.opacity != null)\n\t                            co.a *= c.opacity;\n\t                        c = co.toString();\n\t                    }\n\t                    gradient.addColorStop(i / (l - 1), c);\n\t                }\n\t\n\t                return gradient;\n\t            }\n\t        }\n\t    }\n\t\n\t    // Add the plot function to the top level of the jQuery object\n\t\n\t    $.plot = function(placeholder, data, options) {\n\t        //var t0 = new Date();\n\t        var plot = new Plot($(placeholder), data, options, $.plot.plugins);\n\t        //(window.console ? console.log : alert)(\"time used (msecs): \" + ((new Date()).getTime() - t0.getTime()));\n\t        return plot;\n\t    };\n\t\n\t    $.plot.version = \"0.8.3\";\n\t\n\t    $.plot.plugins = [];\n\t\n\t    // Also add the plot function as a chainable property\n\t\n\t    $.fn.plot = function(data, options) {\n\t        return this.each(function() {\n\t            $.plot(this, data, options);\n\t        });\n\t    };\n\t\n\t    // round to nearby lower multiple of base\n\t    function floorInBase(n, base) {\n\t        return base * Math.floor(n / base);\n\t    }\n\t\n\t})(jQuery);\n\n\n/***/ },\n\n/***/ 159:\n/***/ function(module, exports) {\n\n\t/* Flot plugin for selecting regions of a plot.\n\t\n\tCopyright (c) 2007-2014 IOLA and Ole Laursen.\n\tLicensed under the MIT license.\n\t\n\tThe plugin supports these options:\n\t\n\tselection: {\n\t\tmode: null or \"x\" or \"y\" or \"xy\",\n\t\tcolor: color,\n\t\tshape: \"round\" or \"miter\" or \"bevel\",\n\t\tminSize: number of pixels\n\t}\n\t\n\tSelection support is enabled by setting the mode to one of \"x\", \"y\" or \"xy\".\n\tIn \"x\" mode, the user will only be able to specify the x range, similarly for\n\t\"y\" mode. For \"xy\", the selection becomes a rectangle where both ranges can be\n\tspecified. \"color\" is color of the selection (if you need to change the color\n\tlater on, you can get to it with plot.getOptions().selection.color). \"shape\"\n\tis the shape of the corners of the selection.\n\t\n\t\"minSize\" is the minimum size a selection can be in pixels. This value can\n\tbe customized to determine the smallest size a selection can be and still\n\thave the selection rectangle be displayed. When customizing this value, the\n\tfact that it refers to pixels, not axis units must be taken into account.\n\tThus, for example, if there is a bar graph in time mode with BarWidth set to 1\n\tminute, setting \"minSize\" to 1 will not make the minimum selection size 1\n\tminute, but rather 1 pixel. Note also that setting \"minSize\" to 0 will prevent\n\t\"plotunselected\" events from being fired when the user clicks the mouse without\n\tdragging.\n\t\n\tWhen selection support is enabled, a \"plotselected\" event will be emitted on\n\tthe DOM element you passed into the plot function. The event handler gets a\n\tparameter with the ranges selected on the axes, like this:\n\t\n\t\tplaceholder.bind( \"plotselected\", function( event, ranges ) {\n\t\t\talert(\"You selected \" + ranges.xaxis.from + \" to \" + ranges.xaxis.to)\n\t\t\t// similar for yaxis - with multiple axes, the extra ones are in\n\t\t\t// x2axis, x3axis, ...\n\t\t});\n\t\n\tThe \"plotselected\" event is only fired when the user has finished making the\n\tselection. A \"plotselecting\" event is fired during the process with the same\n\tparameters as the \"plotselected\" event, in case you want to know what's\n\thappening while it's happening,\n\t\n\tA \"plotunselected\" event with no arguments is emitted when the user clicks the\n\tmouse to remove the selection. As stated above, setting \"minSize\" to 0 will\n\tdestroy this behavior.\n\t\n\tThe plugin allso adds the following methods to the plot object:\n\t\n\t- setSelection( ranges, preventEvent )\n\t\n\t  Set the selection rectangle. The passed in ranges is on the same form as\n\t  returned in the \"plotselected\" event. If the selection mode is \"x\", you\n\t  should put in either an xaxis range, if the mode is \"y\" you need to put in\n\t  an yaxis range and both xaxis and yaxis if the selection mode is \"xy\", like\n\t  this:\n\t\n\t\tsetSelection({ xaxis: { from: 0, to: 10 }, yaxis: { from: 40, to: 60 } });\n\t\n\t  setSelection will trigger the \"plotselected\" event when called. If you don't\n\t  want that to happen, e.g. if you're inside a \"plotselected\" handler, pass\n\t  true as the second parameter. If you are using multiple axes, you can\n\t  specify the ranges on any of those, e.g. as x2axis/x3axis/... instead of\n\t  xaxis, the plugin picks the first one it sees.\n\t\n\t- clearSelection( preventEvent )\n\t\n\t  Clear the selection rectangle. Pass in true to avoid getting a\n\t  \"plotunselected\" event.\n\t\n\t- getSelection()\n\t\n\t  Returns the current selection in the same format as the \"plotselected\"\n\t  event. If there's currently no selection, the function returns null.\n\t\n\t*/\n\t\n\t(function ($) {\n\t    function init(plot) {\n\t        var selection = {\n\t                first: { x: -1, y: -1}, second: { x: -1, y: -1},\n\t                show: false,\n\t                active: false\n\t            };\n\t\n\t        // FIXME: The drag handling implemented here should be\n\t        // abstracted out, there's some similar code from a library in\n\t        // the navigation plugin, this should be massaged a bit to fit\n\t        // the Flot cases here better and reused. Doing this would\n\t        // make this plugin much slimmer.\n\t        var savedhandlers = {};\n\t\n\t        var mouseUpHandler = null;\n\t        \n\t        function onMouseMove(e) {\n\t            if (selection.active) {\n\t                updateSelection(e);\n\t                \n\t                plot.getPlaceholder().trigger(\"plotselecting\", [ getSelection() ]);\n\t            }\n\t        }\n\t\n\t        function onMouseDown(e) {\n\t            if (e.which != 1)  // only accept left-click\n\t                return;\n\t            \n\t            // cancel out any text selections\n\t            document.body.focus();\n\t\n\t            // prevent text selection and drag in old-school browsers\n\t            if (document.onselectstart !== undefined && savedhandlers.onselectstart == null) {\n\t                savedhandlers.onselectstart = document.onselectstart;\n\t                document.onselectstart = function () { return false; };\n\t            }\n\t            if (document.ondrag !== undefined && savedhandlers.ondrag == null) {\n\t                savedhandlers.ondrag = document.ondrag;\n\t                document.ondrag = function () { return false; };\n\t            }\n\t\n\t            setSelectionPos(selection.first, e);\n\t\n\t            selection.active = true;\n\t\n\t            // this is a bit silly, but we have to use a closure to be\n\t            // able to whack the same handler again\n\t            mouseUpHandler = function (e) { onMouseUp(e); };\n\t            \n\t            $(document).one(\"mouseup\", mouseUpHandler);\n\t        }\n\t\n\t        function onMouseUp(e) {\n\t            mouseUpHandler = null;\n\t            \n\t            // revert drag stuff for old-school browsers\n\t            if (document.onselectstart !== undefined)\n\t                document.onselectstart = savedhandlers.onselectstart;\n\t            if (document.ondrag !== undefined)\n\t                document.ondrag = savedhandlers.ondrag;\n\t\n\t            // no more dragging\n\t            selection.active = false;\n\t            updateSelection(e);\n\t\n\t            if (selectionIsSane())\n\t                triggerSelectedEvent();\n\t            else {\n\t                // this counts as a clear\n\t                plot.getPlaceholder().trigger(\"plotunselected\", [ ]);\n\t                plot.getPlaceholder().trigger(\"plotselecting\", [ null ]);\n\t            }\n\t\n\t            return false;\n\t        }\n\t\n\t        function getSelection() {\n\t            if (!selectionIsSane())\n\t                return null;\n\t            \n\t            if (!selection.show) return null;\n\t\n\t            var r = {}, c1 = selection.first, c2 = selection.second;\n\t            $.each(plot.getAxes(), function (name, axis) {\n\t                if (axis.used) {\n\t                    var p1 = axis.c2p(c1[axis.direction]), p2 = axis.c2p(c2[axis.direction]); \n\t                    r[name] = { from: Math.min(p1, p2), to: Math.max(p1, p2) };\n\t                }\n\t            });\n\t            return r;\n\t        }\n\t\n\t        function triggerSelectedEvent() {\n\t            var r = getSelection();\n\t\n\t            plot.getPlaceholder().trigger(\"plotselected\", [ r ]);\n\t\n\t            // backwards-compat stuff, to be removed in future\n\t            if (r.xaxis && r.yaxis)\n\t                plot.getPlaceholder().trigger(\"selected\", [ { x1: r.xaxis.from, y1: r.yaxis.from, x2: r.xaxis.to, y2: r.yaxis.to } ]);\n\t        }\n\t\n\t        function clamp(min, value, max) {\n\t            return value < min ? min: (value > max ? max: value);\n\t        }\n\t\n\t        function setSelectionPos(pos, e) {\n\t            var o = plot.getOptions();\n\t            var offset = plot.getPlaceholder().offset();\n\t            var plotOffset = plot.getPlotOffset();\n\t            pos.x = clamp(0, e.pageX - offset.left - plotOffset.left, plot.width());\n\t            pos.y = clamp(0, e.pageY - offset.top - plotOffset.top, plot.height());\n\t\n\t            if (o.selection.mode == \"y\")\n\t                pos.x = pos == selection.first ? 0 : plot.width();\n\t\n\t            if (o.selection.mode == \"x\")\n\t                pos.y = pos == selection.first ? 0 : plot.height();\n\t        }\n\t\n\t        function updateSelection(pos) {\n\t            if (pos.pageX == null)\n\t                return;\n\t\n\t            setSelectionPos(selection.second, pos);\n\t            if (selectionIsSane()) {\n\t                selection.show = true;\n\t                plot.triggerRedrawOverlay();\n\t            }\n\t            else\n\t                clearSelection(true);\n\t        }\n\t\n\t        function clearSelection(preventEvent) {\n\t            if (selection.show) {\n\t                selection.show = false;\n\t                plot.triggerRedrawOverlay();\n\t                if (!preventEvent)\n\t                    plot.getPlaceholder().trigger(\"plotunselected\", [ ]);\n\t            }\n\t        }\n\t\n\t        // function taken from markings support in Flot\n\t        function extractRange(ranges, coord) {\n\t            var axis, from, to, key, axes = plot.getAxes();\n\t\n\t            for (var k in axes) {\n\t                axis = axes[k];\n\t                if (axis.direction == coord) {\n\t                    key = coord + axis.n + \"axis\";\n\t                    if (!ranges[key] && axis.n == 1)\n\t                        key = coord + \"axis\"; // support x1axis as xaxis\n\t                    if (ranges[key]) {\n\t                        from = ranges[key].from;\n\t                        to = ranges[key].to;\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t\n\t            // backwards-compat stuff - to be removed in future\n\t            if (!ranges[key]) {\n\t                axis = coord == \"x\" ? plot.getXAxes()[0] : plot.getYAxes()[0];\n\t                from = ranges[coord + \"1\"];\n\t                to = ranges[coord + \"2\"];\n\t            }\n\t\n\t            // auto-reverse as an added bonus\n\t            if (from != null && to != null && from > to) {\n\t                var tmp = from;\n\t                from = to;\n\t                to = tmp;\n\t            }\n\t            \n\t            return { from: from, to: to, axis: axis };\n\t        }\n\t        \n\t        function setSelection(ranges, preventEvent) {\n\t            var axis, range, o = plot.getOptions();\n\t\n\t            if (o.selection.mode == \"y\") {\n\t                selection.first.x = 0;\n\t                selection.second.x = plot.width();\n\t            }\n\t            else {\n\t                range = extractRange(ranges, \"x\");\n\t\n\t                selection.first.x = range.axis.p2c(range.from);\n\t                selection.second.x = range.axis.p2c(range.to);\n\t            }\n\t\n\t            if (o.selection.mode == \"x\") {\n\t                selection.first.y = 0;\n\t                selection.second.y = plot.height();\n\t            }\n\t            else {\n\t                range = extractRange(ranges, \"y\");\n\t\n\t                selection.first.y = range.axis.p2c(range.from);\n\t                selection.second.y = range.axis.p2c(range.to);\n\t            }\n\t\n\t            selection.show = true;\n\t            plot.triggerRedrawOverlay();\n\t            if (!preventEvent && selectionIsSane())\n\t                triggerSelectedEvent();\n\t        }\n\t\n\t        function selectionIsSane() {\n\t            var minSize = plot.getOptions().selection.minSize;\n\t            return Math.abs(selection.second.x - selection.first.x) >= minSize &&\n\t                Math.abs(selection.second.y - selection.first.y) >= minSize;\n\t        }\n\t\n\t        plot.clearSelection = clearSelection;\n\t        plot.setSelection = setSelection;\n\t        plot.getSelection = getSelection;\n\t\n\t        plot.hooks.bindEvents.push(function(plot, eventHolder) {\n\t            var o = plot.getOptions();\n\t            if (o.selection.mode != null) {\n\t                eventHolder.mousemove(onMouseMove);\n\t                eventHolder.mousedown(onMouseDown);\n\t            }\n\t        });\n\t\n\t\n\t        plot.hooks.drawOverlay.push(function (plot, ctx) {\n\t            // draw selection\n\t            if (selection.show && selectionIsSane()) {\n\t                var plotOffset = plot.getPlotOffset();\n\t                var o = plot.getOptions();\n\t\n\t                ctx.save();\n\t                ctx.translate(plotOffset.left, plotOffset.top);\n\t\n\t                var c = $.color.parse(o.selection.color);\n\t\n\t                ctx.strokeStyle = c.scale('a', 0.8).toString();\n\t                ctx.lineWidth = 1;\n\t                ctx.lineJoin = o.selection.shape;\n\t                ctx.fillStyle = c.scale('a', 0.4).toString();\n\t\n\t                var x = Math.min(selection.first.x, selection.second.x) + 0.5,\n\t                    y = Math.min(selection.first.y, selection.second.y) + 0.5,\n\t                    w = Math.abs(selection.second.x - selection.first.x) - 1,\n\t                    h = Math.abs(selection.second.y - selection.first.y) - 1;\n\t\n\t                ctx.fillRect(x, y, w, h);\n\t                ctx.strokeRect(x, y, w, h);\n\t\n\t                ctx.restore();\n\t            }\n\t        });\n\t        \n\t        plot.hooks.shutdown.push(function (plot, eventHolder) {\n\t            eventHolder.unbind(\"mousemove\", onMouseMove);\n\t            eventHolder.unbind(\"mousedown\", onMouseDown);\n\t            \n\t            if (mouseUpHandler)\n\t                $(document).unbind(\"mouseup\", mouseUpHandler);\n\t        });\n\t\n\t    }\n\t\n\t    $.plot.plugins.push({\n\t        init: init,\n\t        options: {\n\t            selection: {\n\t                mode: null, // one of null, \"x\", \"y\" or \"xy\"\n\t                color: \"#e8cfac\",\n\t                shape: \"round\", // one of \"round\", \"miter\", or \"bevel\"\n\t                minSize: 5 // minimum number of pixels\n\t            }\n\t        },\n\t        name: 'selection',\n\t        version: '1.1'\n\t    });\n\t})(jQuery);\n\n\n/***/ },\n\n/***/ 160:\n/***/ function(module, exports) {\n\n\t/* Pretty handling of time axes.\n\t\n\tCopyright (c) 2007-2014 IOLA and Ole Laursen.\n\tLicensed under the MIT license.\n\t\n\tSet axis.mode to \"time\" to enable. See the section \"Time series data\" in\n\tAPI.txt for details.\n\t\n\t*/\n\t\n\t(function($) {\n\t\n\t\tvar options = {\n\t\t\txaxis: {\n\t\t\t\ttimezone: null,\t\t// \"browser\" for local to the client or timezone for timezone-js\n\t\t\t\ttimeformat: null,\t// format string to use\n\t\t\t\ttwelveHourClock: false,\t// 12 or 24 time in time mode\n\t\t\t\tmonthNames: null\t// list of names of months\n\t\t\t}\n\t\t};\n\t\n\t\t// round to nearby lower multiple of base\n\t\n\t\tfunction floorInBase(n, base) {\n\t\t\treturn base * Math.floor(n / base);\n\t\t}\n\t\n\t\t// Returns a string with the date d formatted according to fmt.\n\t\t// A subset of the Open Group's strftime format is supported.\n\t\n\t\tfunction formatDate(d, fmt, monthNames, dayNames) {\n\t\n\t\t\tif (typeof d.strftime == \"function\") {\n\t\t\t\treturn d.strftime(fmt);\n\t\t\t}\n\t\n\t\t\tvar leftPad = function(n, pad) {\n\t\t\t\tn = \"\" + n;\n\t\t\t\tpad = \"\" + (pad == null ? \"0\" : pad);\n\t\t\t\treturn n.length == 1 ? pad + n : n;\n\t\t\t};\n\t\n\t\t\tvar r = [];\n\t\t\tvar escape = false;\n\t\t\tvar hours = d.getHours();\n\t\t\tvar isAM = hours < 12;\n\t\n\t\t\tif (monthNames == null) {\n\t\t\t\tmonthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\t\t}\n\t\n\t\t\tif (dayNames == null) {\n\t\t\t\tdayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\t\t\t}\n\t\n\t\t\tvar hours12;\n\t\n\t\t\tif (hours > 12) {\n\t\t\t\thours12 = hours - 12;\n\t\t\t} else if (hours == 0) {\n\t\t\t\thours12 = 12;\n\t\t\t} else {\n\t\t\t\thours12 = hours;\n\t\t\t}\n\t\n\t\t\tfor (var i = 0; i < fmt.length; ++i) {\n\t\n\t\t\t\tvar c = fmt.charAt(i);\n\t\n\t\t\t\tif (escape) {\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\t\tcase 'a': c = \"\" + dayNames[d.getDay()]; break;\n\t\t\t\t\t\tcase 'b': c = \"\" + monthNames[d.getMonth()]; break;\n\t\t\t\t\t\tcase 'd': c = leftPad(d.getDate()); break;\n\t\t\t\t\t\tcase 'e': c = leftPad(d.getDate(), \" \"); break;\n\t\t\t\t\t\tcase 'h':\t// For back-compat with 0.7; remove in 1.0\n\t\t\t\t\t\tcase 'H': c = leftPad(hours); break;\n\t\t\t\t\t\tcase 'I': c = leftPad(hours12); break;\n\t\t\t\t\t\tcase 'l': c = leftPad(hours12, \" \"); break;\n\t\t\t\t\t\tcase 'm': c = leftPad(d.getMonth() + 1); break;\n\t\t\t\t\t\tcase 'M': c = leftPad(d.getMinutes()); break;\n\t\t\t\t\t\t// quarters not in Open Group's strftime specification\n\t\t\t\t\t\tcase 'q':\n\t\t\t\t\t\t\tc = \"\" + (Math.floor(d.getMonth() / 3) + 1); break;\n\t\t\t\t\t\tcase 'S': c = leftPad(d.getSeconds()); break;\n\t\t\t\t\t\tcase 'y': c = leftPad(d.getFullYear() % 100); break;\n\t\t\t\t\t\tcase 'Y': c = \"\" + d.getFullYear(); break;\n\t\t\t\t\t\tcase 'p': c = (isAM) ? (\"\" + \"am\") : (\"\" + \"pm\"); break;\n\t\t\t\t\t\tcase 'P': c = (isAM) ? (\"\" + \"AM\") : (\"\" + \"PM\"); break;\n\t\t\t\t\t\tcase 'w': c = \"\" + d.getDay(); break;\n\t\t\t\t\t}\n\t\t\t\t\tr.push(c);\n\t\t\t\t\tescape = false;\n\t\t\t\t} else {\n\t\t\t\t\tif (c == \"%\") {\n\t\t\t\t\t\tescape = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tr.push(c);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn r.join(\"\");\n\t\t}\n\t\n\t\t// To have a consistent view of time-based data independent of which time\n\t\t// zone the client happens to be in we need a date-like object independent\n\t\t// of time zones.  This is done through a wrapper that only calls the UTC\n\t\t// versions of the accessor methods.\n\t\n\t\tfunction makeUtcWrapper(d) {\n\t\n\t\t\tfunction addProxyMethod(sourceObj, sourceMethod, targetObj, targetMethod) {\n\t\t\t\tsourceObj[sourceMethod] = function() {\n\t\t\t\t\treturn targetObj[targetMethod].apply(targetObj, arguments);\n\t\t\t\t};\n\t\t\t};\n\t\n\t\t\tvar utc = {\n\t\t\t\tdate: d\n\t\t\t};\n\t\n\t\t\t// support strftime, if found\n\t\n\t\t\tif (d.strftime != undefined) {\n\t\t\t\taddProxyMethod(utc, \"strftime\", d, \"strftime\");\n\t\t\t}\n\t\n\t\t\taddProxyMethod(utc, \"getTime\", d, \"getTime\");\n\t\t\taddProxyMethod(utc, \"setTime\", d, \"setTime\");\n\t\n\t\t\tvar props = [\"Date\", \"Day\", \"FullYear\", \"Hours\", \"Milliseconds\", \"Minutes\", \"Month\", \"Seconds\"];\n\t\n\t\t\tfor (var p = 0; p < props.length; p++) {\n\t\t\t\taddProxyMethod(utc, \"get\" + props[p], d, \"getUTC\" + props[p]);\n\t\t\t\taddProxyMethod(utc, \"set\" + props[p], d, \"setUTC\" + props[p]);\n\t\t\t}\n\t\n\t\t\treturn utc;\n\t\t};\n\t\n\t\t// select time zone strategy.  This returns a date-like object tied to the\n\t\t// desired timezone\n\t\n\t\tfunction dateGenerator(ts, opts) {\n\t\t\tif (opts.timezone == \"browser\") {\n\t\t\t\treturn new Date(ts);\n\t\t\t} else if (!opts.timezone || opts.timezone == \"utc\") {\n\t\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t\t} else if (typeof timezoneJS != \"undefined\" && typeof timezoneJS.Date != \"undefined\") {\n\t\t\t\tvar d = new timezoneJS.Date();\n\t\t\t\t// timezone-js is fickle, so be sure to set the time zone before\n\t\t\t\t// setting the time.\n\t\t\t\td.setTimezone(opts.timezone);\n\t\t\t\td.setTime(ts);\n\t\t\t\treturn d;\n\t\t\t} else {\n\t\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t\t}\n\t\t}\n\t\t\n\t\t// map of app. size of time units in milliseconds\n\t\n\t\tvar timeUnitSize = {\n\t\t\t\"second\": 1000,\n\t\t\t\"minute\": 60 * 1000,\n\t\t\t\"hour\": 60 * 60 * 1000,\n\t\t\t\"day\": 24 * 60 * 60 * 1000,\n\t\t\t\"month\": 30 * 24 * 60 * 60 * 1000,\n\t\t\t\"quarter\": 3 * 30 * 24 * 60 * 60 * 1000,\n\t\t\t\"year\": 365.2425 * 24 * 60 * 60 * 1000\n\t\t};\n\t\n\t\t// the allowed tick sizes, after 1 year we use\n\t\t// an integer algorithm\n\t\n\t\tvar baseSpec = [\n\t\t\t[1, \"second\"], [2, \"second\"], [5, \"second\"], [10, \"second\"],\n\t\t\t[30, \"second\"], \n\t\t\t[1, \"minute\"], [2, \"minute\"], [5, \"minute\"], [10, \"minute\"],\n\t\t\t[30, \"minute\"], \n\t\t\t[1, \"hour\"], [2, \"hour\"], [4, \"hour\"],\n\t\t\t[8, \"hour\"], [12, \"hour\"],\n\t\t\t[1, \"day\"], [2, \"day\"], [3, \"day\"],\n\t\t\t[0.25, \"month\"], [0.5, \"month\"], [1, \"month\"],\n\t\t\t[2, \"month\"]\n\t\t];\n\t\n\t\t// we don't know which variant(s) we'll need yet, but generating both is\n\t\t// cheap\n\t\n\t\tvar specMonths = baseSpec.concat([[3, \"month\"], [6, \"month\"],\n\t\t\t[1, \"year\"]]);\n\t\tvar specQuarters = baseSpec.concat([[1, \"quarter\"], [2, \"quarter\"],\n\t\t\t[1, \"year\"]]);\n\t\n\t\tfunction init(plot) {\n\t\t\tplot.hooks.processOptions.push(function (plot, options) {\n\t\t\t\t$.each(plot.getAxes(), function(axisName, axis) {\n\t\n\t\t\t\t\tvar opts = axis.options;\n\t\n\t\t\t\t\tif (opts.mode == \"time\") {\n\t\t\t\t\t\taxis.tickGenerator = function(axis) {\n\t\n\t\t\t\t\t\t\tvar ticks = [];\n\t\t\t\t\t\t\tvar d = dateGenerator(axis.min, opts);\n\t\t\t\t\t\t\tvar minSize = 0;\n\t\n\t\t\t\t\t\t\t// make quarter use a possibility if quarters are\n\t\t\t\t\t\t\t// mentioned in either of these options\n\t\n\t\t\t\t\t\t\tvar spec = (opts.tickSize && opts.tickSize[1] ===\n\t\t\t\t\t\t\t\t\"quarter\") ||\n\t\t\t\t\t\t\t\t(opts.minTickSize && opts.minTickSize[1] ===\n\t\t\t\t\t\t\t\t\"quarter\") ? specQuarters : specMonths;\n\t\n\t\t\t\t\t\t\tif (opts.minTickSize != null) {\n\t\t\t\t\t\t\t\tif (typeof opts.tickSize == \"number\") {\n\t\t\t\t\t\t\t\t\tminSize = opts.tickSize;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tminSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tfor (var i = 0; i < spec.length - 1; ++i) {\n\t\t\t\t\t\t\t\tif (axis.delta < (spec[i][0] * timeUnitSize[spec[i][1]]\n\t\t\t\t\t\t\t\t\t\t\t\t  + spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2\n\t\t\t\t\t\t\t\t\t&& spec[i][0] * timeUnitSize[spec[i][1]] >= minSize) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tvar size = spec[i][0];\n\t\t\t\t\t\t\tvar unit = spec[i][1];\n\t\n\t\t\t\t\t\t\t// special-case the possibility of several years\n\t\n\t\t\t\t\t\t\tif (unit == \"year\") {\n\t\n\t\t\t\t\t\t\t\t// if given a minTickSize in years, just use it,\n\t\t\t\t\t\t\t\t// ensuring that it's an integer\n\t\n\t\t\t\t\t\t\t\tif (opts.minTickSize != null && opts.minTickSize[1] == \"year\") {\n\t\t\t\t\t\t\t\t\tsize = Math.floor(opts.minTickSize[0]);\n\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\tvar magn = Math.pow(10, Math.floor(Math.log(axis.delta / timeUnitSize.year) / Math.LN10));\n\t\t\t\t\t\t\t\t\tvar norm = (axis.delta / timeUnitSize.year) / magn;\n\t\n\t\t\t\t\t\t\t\t\tif (norm < 1.5) {\n\t\t\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t\t\t} else if (norm < 3) {\n\t\t\t\t\t\t\t\t\t\tsize = 2;\n\t\t\t\t\t\t\t\t\t} else if (norm < 7.5) {\n\t\t\t\t\t\t\t\t\t\tsize = 5;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tsize = 10;\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\tsize *= magn;\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t// minimum size for years is 1\n\t\n\t\t\t\t\t\t\t\tif (size < 1) {\n\t\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\taxis.tickSize = opts.tickSize || [size, unit];\n\t\t\t\t\t\t\tvar tickSize = axis.tickSize[0];\n\t\t\t\t\t\t\tunit = axis.tickSize[1];\n\t\n\t\t\t\t\t\t\tvar step = tickSize * timeUnitSize[unit];\n\t\n\t\t\t\t\t\t\tif (unit == \"second\") {\n\t\t\t\t\t\t\t\td.setSeconds(floorInBase(d.getSeconds(), tickSize));\n\t\t\t\t\t\t\t} else if (unit == \"minute\") {\n\t\t\t\t\t\t\t\td.setMinutes(floorInBase(d.getMinutes(), tickSize));\n\t\t\t\t\t\t\t} else if (unit == \"hour\") {\n\t\t\t\t\t\t\t\td.setHours(floorInBase(d.getHours(), tickSize));\n\t\t\t\t\t\t\t} else if (unit == \"month\") {\n\t\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), tickSize));\n\t\t\t\t\t\t\t} else if (unit == \"quarter\") {\n\t\t\t\t\t\t\t\td.setMonth(3 * floorInBase(d.getMonth() / 3,\n\t\t\t\t\t\t\t\t\ttickSize));\n\t\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\t\td.setFullYear(floorInBase(d.getFullYear(), tickSize));\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// reset smaller components\n\t\n\t\t\t\t\t\t\td.setMilliseconds(0);\n\t\n\t\t\t\t\t\t\tif (step >= timeUnitSize.minute) {\n\t\t\t\t\t\t\t\td.setSeconds(0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (step >= timeUnitSize.hour) {\n\t\t\t\t\t\t\t\td.setMinutes(0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (step >= timeUnitSize.day) {\n\t\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (step >= timeUnitSize.day * 4) {\n\t\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (step >= timeUnitSize.month * 2) {\n\t\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 3));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (step >= timeUnitSize.quarter * 2) {\n\t\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 6));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (step >= timeUnitSize.year) {\n\t\t\t\t\t\t\t\td.setMonth(0);\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tvar carry = 0;\n\t\t\t\t\t\t\tvar v = Number.NaN;\n\t\t\t\t\t\t\tvar prev;\n\t\n\t\t\t\t\t\t\tdo {\n\t\n\t\t\t\t\t\t\t\tprev = v;\n\t\t\t\t\t\t\t\tv = d.getTime();\n\t\t\t\t\t\t\t\tticks.push(v);\n\t\n\t\t\t\t\t\t\t\tif (unit == \"month\" || unit == \"quarter\") {\n\t\t\t\t\t\t\t\t\tif (tickSize < 1) {\n\t\n\t\t\t\t\t\t\t\t\t\t// a bit complicated - we'll divide the\n\t\t\t\t\t\t\t\t\t\t// month/quarter up but we need to take\n\t\t\t\t\t\t\t\t\t\t// care of fractions so we don't end up in\n\t\t\t\t\t\t\t\t\t\t// the middle of a day\n\t\n\t\t\t\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t\t\t\t\tvar start = d.getTime();\n\t\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\t\t(unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t\t\tvar end = d.getTime();\n\t\t\t\t\t\t\t\t\t\td.setTime(v + carry * timeUnitSize.hour + (end - start) * tickSize);\n\t\t\t\t\t\t\t\t\t\tcarry = d.getHours();\n\t\t\t\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\t\ttickSize * (unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\t\t\td.setFullYear(d.getFullYear() + tickSize);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\td.setTime(v + step);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} while (v < axis.max && v != prev);\n\t\n\t\t\t\t\t\t\treturn ticks;\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\taxis.tickFormatter = function (v, axis) {\n\t\n\t\t\t\t\t\t\tvar d = dateGenerator(v, axis.options);\n\t\n\t\t\t\t\t\t\t// first check global format\n\t\n\t\t\t\t\t\t\tif (opts.timeformat != null) {\n\t\t\t\t\t\t\t\treturn formatDate(d, opts.timeformat, opts.monthNames, opts.dayNames);\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// possibly use quarters if quarters are mentioned in\n\t\t\t\t\t\t\t// any of these places\n\t\n\t\t\t\t\t\t\tvar useQuarters = (axis.options.tickSize &&\n\t\t\t\t\t\t\t\t\taxis.options.tickSize[1] == \"quarter\") ||\n\t\t\t\t\t\t\t\t(axis.options.minTickSize &&\n\t\t\t\t\t\t\t\t\taxis.options.minTickSize[1] == \"quarter\");\n\t\n\t\t\t\t\t\t\tvar t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];\n\t\t\t\t\t\t\tvar span = axis.max - axis.min;\n\t\t\t\t\t\t\tvar suffix = (opts.twelveHourClock) ? \" %p\" : \"\";\n\t\t\t\t\t\t\tvar hourCode = (opts.twelveHourClock) ? \"%I\" : \"%H\";\n\t\t\t\t\t\t\tvar fmt;\n\t\n\t\t\t\t\t\t\tif (t < timeUnitSize.minute) {\n\t\t\t\t\t\t\t\tfmt = hourCode + \":%M:%S\" + suffix;\n\t\t\t\t\t\t\t} else if (t < timeUnitSize.day) {\n\t\t\t\t\t\t\t\tif (span < 2 * timeUnitSize.day) {\n\t\t\t\t\t\t\t\t\tfmt = hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfmt = \"%b %d \" + hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (t < timeUnitSize.month) {\n\t\t\t\t\t\t\t\tfmt = \"%b %d\";\n\t\t\t\t\t\t\t} else if ((useQuarters && t < timeUnitSize.quarter) ||\n\t\t\t\t\t\t\t\t(!useQuarters && t < timeUnitSize.year)) {\n\t\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\t\tfmt = \"%b\";\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfmt = \"%b %Y\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (useQuarters && t < timeUnitSize.year) {\n\t\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\t\tfmt = \"Q%q\";\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfmt = \"Q%q %Y\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"%Y\";\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tvar rt = formatDate(d, fmt, opts.monthNames, opts.dayNames);\n\t\n\t\t\t\t\t\t\treturn rt;\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\n\t\t$.plot.plugins.push({\n\t\t\tinit: init,\n\t\t\toptions: options,\n\t\t\tname: 'time',\n\t\t\tversion: '1.0'\n\t\t});\n\t\n\t\t// Time-axis support used to be in Flot core, which exposed the\n\t\t// formatDate function on the plot object.  Various plugins depend\n\t\t// on the function, so we need to re-expose it here.\n\t\n\t\t$.plot.formatDate = formatDate;\n\t\t$.plot.dateGenerator = dateGenerator;\n\t\n\t})(jQuery);\n\n\n/***/ },\n\n/***/ 161:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var cockpit = __webpack_require__(2);\n\t\n\t    /* SERVICE MANAGEMENT API\n\t     *\n\t     * The \"service\" module lets you monitor and manage a\n\t     * system service on localhost in a simple way.\n\t     *\n\t     * It mainly exists because talking to the systemd D-Bus API is\n\t     * not trivial enough to do it directly.\n\t     *\n\t     * - proxy = service.proxy(name)\n\t     *\n\t     * Create a proxy that represents the service named NAME.\n\t     *\n\t     * The proxy has properties and methods (described below) that\n\t     * allow you to monitor the state of the service, and perform\n\t     * simple actions on it.\n\t     *\n\t     * Initially, any of the properties can be \"null\" until their\n\t     * actual values have been retrieved in the background.\n\t     *\n\t     * - $(proxy).on('changed', function (event) { ... })\n\t     *\n\t     * The 'changed' event is emitted whenever one of the properties\n\t     * of the proxy changes.\n\t     *\n\t     * - proxy.exists\n\t     *\n\t     * A boolean that tells whether the service is known or not.  A\n\t     * proxy with 'exists == false' will have 'state == undefined' and\n\t     * 'enabled == undefined'.\n\t     *\n\t     * - proxy.state\n\t     *\n\t     * Either 'undefined' when the state can't be retrieved, or a\n\t     * string that has one of the values \"starting\", \"running\",\n\t     * \"stopping\", \"stopped\", or \"failed\".\n\t     *\n\t     * - proxy.enabled\n\t     *\n\t     * Either 'undefined' when the value can't be retrieved, or a\n\t     * boolean that tells whether the service is started 'enabled'.\n\t     * What it means exactly for a service to be enabled depends on\n\t     * the service, but a enabled service is usually started on boot,\n\t     * no matter wether other services need it or not.  A disabled\n\t     * service is usually only started when it is needed by some other\n\t     * service.\n\t     *\n\t     * - proxy.unit\n\t     * - proxy.service\n\t     *\n\t     * The raw org.freedesktop.systemd1.Unit and Service D-Bus\n\t     * interface proxies for the service.\n\t     *\n\t     * - promise = proxy.start()\n\t     *\n\t     * Start the service.  The return value is a standard jQuery\n\t     * promise as returned from DBusClient.call.\n\t     *\n\t     * - promise =  proxy.restart()\n\t     *\n\t     * Restart the service.\n\t     *\n\t     * - promise = proxy.tryRestart()\n\t     * \n\t     * Try to restart the service if it's running or starting\n\t     *\n\t     * - promise = proxy.stop()\n\t     *\n\t     * Stop the service.\n\t     *\n\t     * - promise = proxy.enable()\n\t     *\n\t     * Enable the service.\n\t     *\n\t     * - promise = proxy.disable()\n\t     *\n\t     * Disable the service.\n\t     */\n\t\n\t    var systemd_client;\n\t    var systemd_manager;\n\t\n\t    function wait_valid(proxy, callback) {\n\t        proxy.wait(function() {\n\t            if (proxy.valid)\n\t                callback();\n\t        });\n\t    }\n\t\n\t    function with_systemd_manager(done) {\n\t        if (!systemd_manager) {\n\t            systemd_client = cockpit.dbus(\"org.freedesktop.systemd1\", { superuser: \"try\" });\n\t            systemd_manager = systemd_client.proxy(\"org.freedesktop.systemd1.Manager\",\n\t                                                   \"/org/freedesktop/systemd1\");\n\t            wait_valid(systemd_manager, function() {\n\t                systemd_manager.Subscribe().\n\t                    fail(function (error) {\n\t                        if (error.name != \"org.freedesktop.systemd1.AlreadySubscribed\" &&\n\t                            error.name != \"org.freedesktop.DBus.Error.FileExists\")\n\t                            console.warn(\"Subscribing to systemd signals failed\", error);\n\t                    });\n\t            });\n\t        }\n\t        wait_valid(systemd_manager, done);\n\t    }\n\t\n\t    function proxy(name) {\n\t        var self = {\n\t            exists: null,\n\t            state: null,\n\t            enabled: null,\n\t\n\t            wait: wait,\n\t\n\t            start: start,\n\t            stop: stop,\n\t            restart: restart,\n\t            tryRestart: tryRestart,\n\t\n\t            enable: enable,\n\t            disable: disable\n\t        };\n\t\n\t        cockpit.event_target(self);\n\t\n\t        var unit, service;\n\t        var wait_callbacks = cockpit.defer();\n\t\n\t        if (name.indexOf(\".\") == -1)\n\t            name = name + \".service\";\n\t\n\t        function update_from_unit() {\n\t            self.exists = (unit.LoadState != \"not-found\" || unit.ActiveState != \"inactive\");\n\t\n\t            if (unit.ActiveState == \"activating\")\n\t                self.state = \"starting\";\n\t            else if (unit.ActiveState == \"deactivating\")\n\t                self.state = \"stopping\";\n\t            else if (unit.ActiveState == \"active\" || unit.ActiveState == \"reloading\")\n\t                self.state = \"running\";\n\t            else if (unit.ActiveState == \"failed\")\n\t                self.state = \"failed\";\n\t            else if (unit.ActiveState == \"inactive\" && self.exists)\n\t                self.state = \"stopped\";\n\t            else\n\t                self.state = undefined;\n\t\n\t            if (unit.UnitFileState == \"enabled\" || unit.UnitFileState == \"linked\")\n\t                self.enabled = true;\n\t            else if (unit.UnitFileState == \"disabled\" || unit.UnitFileState == \"masked\")\n\t                self.enabled = false;\n\t            else\n\t                self.enabled = undefined;\n\t\n\t            self.unit = unit;\n\t\n\t            self.dispatchEvent(\"changed\");\n\t            wait_callbacks.resolve();\n\t        }\n\t\n\t        function update_from_service() {\n\t            self.service = service;\n\t            self.dispatchEvent(\"changed\");\n\t        }\n\t\n\t        with_systemd_manager(function () {\n\t            systemd_manager.LoadUnit(name).\n\t                done(function (path) {\n\t                    unit = systemd_client.proxy('org.freedesktop.systemd1.Unit', path);\n\t                    unit.addEventListener('changed', update_from_unit);\n\t                    wait_valid(unit, update_from_unit);\n\t\n\t                    service = systemd_client.proxy('org.freedesktop.systemd1.Service', path);\n\t                    service.addEventListener('changed', update_from_service);\n\t                    wait_valid(service, update_from_service);\n\t                }).\n\t                fail(function (error) {\n\t                    self.exists = false;\n\t                    self.dispatchEvent('changed');\n\t                });\n\t        });\n\t\n\t        function refresh() {\n\t            if (!unit || !service)\n\t                return;\n\t\n\t            function refresh_interface(path, iface) {\n\t                systemd_client.call(path,\n\t                                    \"org.freedesktop.DBus.Properties\", \"GetAll\", [ iface ]).\n\t                    fail(function (error) {\n\t                        console.log(error);\n\t                    }).\n\t                    done(function (result) {\n\t                        var props = { };\n\t                        for (var p in result[0])\n\t                            props[p] = result[0][p].v;\n\t                        var ifaces = { };\n\t                        ifaces[iface] = props;\n\t                        var data = { };\n\t                        data[unit.path] = ifaces;\n\t                        systemd_client.notify(data);\n\t                    });\n\t            }\n\t\n\t            refresh_interface(unit.path, \"org.freedesktop.systemd1.Unit\");\n\t            refresh_interface(service.path, \"org.freedesktop.systemd1.Service\");\n\t        }\n\t\n\t        function on_job_new_removed_refresh(event, number, path, unit_id, result) {\n\t            if (unit_id == name)\n\t                refresh();\n\t        }\n\t\n\t        /* HACK - https://bugs.freedesktop.org/show_bug.cgi?id=69575\n\t         *\n\t         * We need to explicitly get new property values when getting\n\t         * a UnitNew signal since UnitNew doesn't carry them.\n\t         * However, reacting to UnitNew with GetAll could lead to an\n\t         * infinite loop since systemd emits a UnitNew in reaction to\n\t         * GetAll for units that it doesn't want to keep loaded, such\n\t         * as units without unit files.\n\t         *\n\t         * So we ignore UnitNew and instead assume that the unit state\n\t         * only changes in interesting ways when there is a job for it\n\t         * or when the daemon is reloaded (or when we get a property\n\t         * change notification, of course).\n\t         */\n\t\n\t        if (false) {\n\t            // This is what we want to do.\n\t\n\t            systemd_manager.addEventListener(\"UnitNew\", function (event, unit_id, path) {\n\t                if (unit_id == name)\n\t                    refresh();\n\t            });\n\t        } else {\n\t            // This is what we have to do.\n\t\n\t            systemd_manager.addEventListener(\"Reloading\", function (event, reloading) {\n\t                if (!reloading)\n\t                    refresh();\n\t            });\n\t\n\t            systemd_manager.addEventListener(\"JobNew\", on_job_new_removed_refresh);\n\t            systemd_manager.addEventListener(\"JobRemoved\", on_job_new_removed_refresh);\n\t        }\n\t\n\t        function wait(callback) {\n\t            wait_callbacks.promise.then(callback);\n\t        }\n\t\n\t        /* Actions\n\t         *\n\t         * We don't call methods on the D-Bus proxies here since they\n\t         * might not be ready when these functions are called.\n\t         */\n\t\n\t        var pending_jobs = { };\n\t\n\t        systemd_manager.addEventListener(\"JobRemoved\", function (event, number, path, unit_id, result) {\n\t            if (pending_jobs[path]) {\n\t                if (result == \"done\")\n\t                    pending_jobs[path].resolve();\n\t                else\n\t                    pending_jobs[path].reject(result);\n\t                delete pending_jobs[path];\n\t            }\n\t        });\n\t\n\t        function call_manager(method, args) {\n\t            return systemd_client.call(\"/org/freedesktop/systemd1\",\n\t                                       \"org.freedesktop.systemd1.Manager\",\n\t                                       method, args);\n\t        }\n\t\n\t        function call_manager_with_job(method, args) {\n\t            var dfd = cockpit.defer();\n\t            call_manager(method, args).\n\t                done(function (results) {\n\t                    var path = results[0];\n\t                    pending_jobs[path] = dfd;\n\t                }).\n\t                fail(function (error) {\n\t                    dfd.reject(error);\n\t                });\n\t            return dfd.promise();\n\t        }\n\t\n\t        function call_manager_with_reload(method, args) {\n\t            return call_manager(method, args).then(function () {\n\t                var dfd = cockpit.defer();\n\t                call_manager(\"Reload\", [ ]).\n\t                    done(function () { dfd.resolve(); }).\n\t                    fail(function (error) {\n\t                        // HACK: https://bugzilla.redhat.com/show_bug.cgi?id=1560549\n\t                        // some systemd versions disconnect too fast from the bus\n\t                        if (error.name === \"org.freedesktop.DBus.Error.NoReply\") {\n\t                            refresh();\n\t                            dfd.resolve();\n\t                        } else {\n\t                            dfd.reject(error);\n\t                        }\n\t                    });\n\t                return dfd.promise();\n\t            });\n\t        }\n\t\n\t        function start() {\n\t            return call_manager_with_job(\"StartUnit\", [ name, \"replace\" ]);\n\t        }\n\t\n\t        function stop() {\n\t            return call_manager_with_job(\"StopUnit\", [ name, \"replace\" ]);\n\t        }\n\t\n\t        function restart() {\n\t            return call_manager_with_job(\"RestartUnit\", [ name, \"replace\" ]);\n\t        }\n\t\n\t        function tryRestart() {\n\t            return call_manager_with_job(\"TryRestartUnit\", [ name, \"replace\" ]);\n\t        }\n\t\n\t        function enable() {\n\t            return call_manager_with_reload(\"EnableUnitFiles\", [ [ name ], false, false ]);\n\t        }\n\t\n\t        function disable() {\n\t            return call_manager_with_reload(\"DisableUnitFiles\", [ [ name ], false ]);\n\t        }\n\t\n\t        return self;\n\t    }\n\t\n\t    module.exports = {\n\t        proxy: proxy\n\t    };\n\t}());\n\n\n/***/ },\n\n/***/ 162:\n/***/ function(module, exports) {\n\n\t/* =============================================================\n\t * bootstrap-combobox.js v1.1.7\n\t * =============================================================\n\t * Copyright 2012 Daniel Farrell\n\t *\n\t * Licensed under the Apache License, Version 2.0 (the \"License\");\n\t * you may not use this file except in compliance with the License.\n\t * You may obtain a copy of the License at\n\t *\n\t * http://www.apache.org/licenses/LICENSE-2.0\n\t *\n\t * Unless required by applicable law or agreed to in writing, software\n\t * distributed under the License is distributed on an \"AS IS\" BASIS,\n\t * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n\t * See the License for the specific language governing permissions and\n\t * limitations under the License.\n\t * ============================================================ */\n\t\n\t!function( $ ) {\n\t\n\t \"use strict\";\n\t\n\t /* COMBOBOX PUBLIC CLASS DEFINITION\n\t  * ================================ */\n\t\n\t  var Combobox = function ( element, options ) {\n\t    this.options = $.extend({}, $.fn.combobox.defaults, options);\n\t    this.template = this.options.template || this.template\n\t    this.$source = $(element);\n\t    this.$container = this.setup();\n\t    this.$element = this.$container.find('input[type=text]');\n\t    this.$target = this.$container.find('input[type=hidden]');\n\t    this.$button = this.$container.find('.dropdown-toggle');\n\t    this.$menu = $(this.options.menu).appendTo('body');\n\t    this.matcher = this.options.matcher || this.matcher;\n\t    this.sorter = this.options.sorter || this.sorter;\n\t    this.highlighter = this.options.highlighter || this.highlighter;\n\t    this.shown = false;\n\t    this.selected = false;\n\t    this.refresh();\n\t    this.transferAttributes();\n\t    this.listen();\n\t  };\n\t\n\t  Combobox.prototype = {\n\t\n\t    constructor: Combobox\n\t\n\t  , setup: function () {\n\t      var combobox = $(this.template());\n\t      this.$source.before(combobox);\n\t      this.$source.hide();\n\t      return combobox;\n\t    }\n\t\n\t  , disable: function() {\n\t      this.$element.prop('disabled', true);\n\t      this.$button.attr('disabled', true);\n\t      this.disabled = true;\n\t      this.$container.addClass('combobox-disabled');\n\t    }\n\t\n\t  , enable: function() {\n\t      this.$element.prop('disabled', false);\n\t      this.$button.attr('disabled', false);\n\t      this.disabled = false;\n\t      this.$container.removeClass('combobox-disabled');\n\t    }\n\t  , parse: function () {\n\t      var that = this\n\t        , map = {}\n\t        , source = []\n\t        , selected = false\n\t        , selectedValue = '';\n\t      this.$source.find('option').each(function() {\n\t        var option = $(this);\n\t        if (option.val() === '') {\n\t          that.options.placeholder = option.text();\n\t          return;\n\t        }\n\t        map[option.text()] = option.val();\n\t        source.push(option.text());\n\t        if (option.prop('selected')) {\n\t          selected = option.text();\n\t          selectedValue = option.val();\n\t        }\n\t      })\n\t      this.map = map;\n\t      if (selected) {\n\t        this.$element.val(selected);\n\t        this.$target.val(selectedValue);\n\t        this.$container.addClass('combobox-selected');\n\t        this.selected = true;\n\t      }\n\t      return source;\n\t    }\n\t\n\t  , transferAttributes: function() {\n\t    this.options.placeholder = this.$source.attr('data-placeholder') || this.options.placeholder\n\t    if(this.options.appendId !== \"undefined\") {\n\t    \tthis.$element.attr('id', this.$source.attr('id') + this.options.appendId);\n\t    }\n\t    this.$element.attr('placeholder', this.options.placeholder)\n\t    this.$target.prop('name', this.$source.prop('name'))\n\t    this.$target.val(this.$source.val())\n\t    this.$source.removeAttr('name')  // Remove from source otherwise form will pass parameter twice.\n\t    this.$element.attr('required', this.$source.attr('required'))\n\t    this.$element.attr('rel', this.$source.attr('rel'))\n\t    this.$element.attr('title', this.$source.attr('title'))\n\t    this.$element.attr('class', this.$source.attr('class'))\n\t    this.$element.attr('tabindex', this.$source.attr('tabindex'))\n\t    this.$source.removeAttr('tabindex')\n\t    if (this.$source.attr('disabled')!==undefined)\n\t      this.disable();\n\t  }\n\t\n\t  , select: function () {\n\t      var val = this.$menu.find('.active').attr('data-value');\n\t      this.$element.val(this.updater(val)).trigger('change');\n\t      this.$target.val(this.map[val]).trigger('change');\n\t      this.$source.val(this.map[val]).trigger('change');\n\t      this.$container.addClass('combobox-selected');\n\t      this.selected = true;\n\t      return this.hide();\n\t    }\n\t\n\t  , updater: function (item) {\n\t      return item;\n\t    }\n\t\n\t  , show: function () {\n\t      var pos = $.extend({}, this.$element.position(), {\n\t        height: this.$element[0].offsetHeight\n\t      });\n\t\n\t      this.$menu\n\t        .insertAfter(this.$element)\n\t        .css({\n\t          top: pos.top + pos.height\n\t        , left: pos.left\n\t        })\n\t        .show();\n\t\n\t      $('.dropdown-menu').on('mousedown', $.proxy(this.scrollSafety, this));\n\t\n\t      this.shown = true;\n\t      return this;\n\t    }\n\t\n\t  , hide: function () {\n\t      this.$menu.hide();\n\t      $('.dropdown-menu').off('mousedown', $.proxy(this.scrollSafety, this));\n\t      this.$element.on('blur', $.proxy(this.blur, this));\n\t      this.shown = false;\n\t      return this;\n\t    }\n\t\n\t  , lookup: function (event) {\n\t      this.query = this.$element.val();\n\t      return this.process(this.source);\n\t    }\n\t\n\t  , process: function (items) {\n\t      var that = this;\n\t\n\t      items = $.grep(items, function (item) {\n\t        return that.matcher(item);\n\t      })\n\t\n\t      items = this.sorter(items);\n\t\n\t      if (!items.length) {\n\t        return this.shown ? this.hide() : this;\n\t      }\n\t\n\t      return this.render(items.slice(0, this.options.items)).show();\n\t    }\n\t\n\t  , template: function() {\n\t      if (this.options.bsVersion == '2') {\n\t        return '<div class=\"combobox-container\"><input type=\"hidden\" /> <div class=\"input-append\"> <input type=\"text\" autocomplete=\"false\" /> <span class=\"add-on dropdown-toggle\" data-dropdown=\"dropdown\"> <span class=\"caret\"/> <i class=\"icon-remove\"/> </span> </div> </div>'\n\t      } else {\n\t        return '<div class=\"combobox-container\"> <input type=\"hidden\" /> <div class=\"input-group\"> <input type=\"text\" autocomplete=\"false\" /> <span class=\"input-group-addon dropdown-toggle\" data-dropdown=\"dropdown\"> <span class=\"caret\" /> <span class=\"glyphicon glyphicon-remove\" /> </span> </div> </div>'\n\t      }\n\t    }\n\t\n\t  , matcher: function (item) {\n\t      return ~item.toLowerCase().indexOf(this.query.toLowerCase());\n\t    }\n\t\n\t  , sorter: function (items) {\n\t      var beginswith = []\n\t        , caseSensitive = []\n\t        , caseInsensitive = []\n\t        , item;\n\t\n\t      while (item = items.shift()) {\n\t        if (!item.toLowerCase().indexOf(this.query.toLowerCase())) {beginswith.push(item);}\n\t        else if (~item.indexOf(this.query)) {caseSensitive.push(item);}\n\t        else {caseInsensitive.push(item);}\n\t      }\n\t\n\t      return beginswith.concat(caseSensitive, caseInsensitive);\n\t    }\n\t\n\t  , highlighter: function (item) {\n\t      var query = this.query.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n\t      return item.replace(new RegExp('(' + query + ')', 'ig'), function ($1, match) {\n\t        return '<strong>' + match + '</strong>';\n\t      })\n\t    }\n\t\n\t  , render: function (items) {\n\t      var that = this;\n\t\n\t      items = $(items).map(function (i, item) {\n\t        i = $(that.options.item).attr('data-value', item);\n\t        i.find('a').html(that.highlighter(item));\n\t        return i[0];\n\t      })\n\t\n\t      items.first().addClass('active');\n\t      this.$menu.html(items);\n\t      return this;\n\t    }\n\t\n\t  , next: function (event) {\n\t      var active = this.$menu.find('.active').removeClass('active')\n\t        , next = active.next();\n\t\n\t      if (!next.length) {\n\t        next = $(this.$menu.find('li')[0]);\n\t      }\n\t\n\t      next.addClass('active');\n\t    }\n\t\n\t  , prev: function (event) {\n\t      var active = this.$menu.find('.active').removeClass('active')\n\t        , prev = active.prev();\n\t\n\t      if (!prev.length) {\n\t        prev = this.$menu.find('li').last();\n\t      }\n\t\n\t      prev.addClass('active');\n\t    }\n\t\n\t  , toggle: function () {\n\t    if (!this.disabled) {\n\t      if (this.$container.hasClass('combobox-selected')) {\n\t        this.clearTarget();\n\t        this.triggerChange();\n\t        this.clearElement();\n\t      } else {\n\t        if (this.shown) {\n\t          this.hide();\n\t        } else {\n\t          this.clearElement();\n\t          this.lookup();\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  , scrollSafety: function(e) {\n\t      if (e.target.tagName == 'UL') {\n\t          this.$element.off('blur');\n\t      }\n\t  }\n\t  , clearElement: function () {\n\t    this.$element.val('').focus();\n\t  }\n\t\n\t  , clearTarget: function () {\n\t    this.$source.val('');\n\t    this.$target.val('');\n\t    this.$container.removeClass('combobox-selected');\n\t    this.selected = false;\n\t  }\n\t\n\t  , triggerChange: function () {\n\t    this.$source.trigger('change');\n\t  }\n\t\n\t  , refresh: function () {\n\t    this.source = this.parse();\n\t    this.options.items = this.source.length;\n\t  }\n\t\n\t  , listen: function () {\n\t      this.$element\n\t        .on('focus',    $.proxy(this.focus, this))\n\t        .on('blur',     $.proxy(this.blur, this))\n\t        .on('keypress', $.proxy(this.keypress, this))\n\t        .on('keyup',    $.proxy(this.keyup, this));\n\t\n\t      if (this.eventSupported('keydown')) {\n\t        this.$element.on('keydown', $.proxy(this.keydown, this));\n\t      }\n\t\n\t      this.$menu\n\t        .on('click', $.proxy(this.click, this))\n\t        .on('mouseenter', 'li', $.proxy(this.mouseenter, this))\n\t        .on('mouseleave', 'li', $.proxy(this.mouseleave, this));\n\t\n\t      this.$button\n\t        .on('click', $.proxy(this.toggle, this));\n\t    }\n\t\n\t  , eventSupported: function(eventName) {\n\t      var isSupported = eventName in this.$element;\n\t      if (!isSupported) {\n\t        this.$element.setAttribute(eventName, 'return;');\n\t        isSupported = typeof this.$element[eventName] === 'function';\n\t      }\n\t      return isSupported;\n\t    }\n\t\n\t  , move: function (e) {\n\t      if (!this.shown) {return;}\n\t\n\t      switch(e.keyCode) {\n\t        case 9: // tab\n\t        case 13: // enter\n\t        case 27: // escape\n\t          e.preventDefault();\n\t          break;\n\t\n\t        case 38: // up arrow\n\t          e.preventDefault();\n\t          this.prev();\n\t          this.fixMenuScroll();\n\t          break;\n\t\n\t        case 40: // down arrow\n\t          e.preventDefault();\n\t          this.next();\n\t          this.fixMenuScroll();\n\t          break;\n\t      }\n\t\n\t      e.stopPropagation();\n\t    }\n\t\n\t  , fixMenuScroll: function(){\n\t      var active = this.$menu.find('.active');\n\t      if(active.length){\n\t          var top = active.position().top;\n\t          var bottom = top + active.height();\n\t          var scrollTop = this.$menu.scrollTop();\n\t          var menuHeight = this.$menu.height();\n\t          if(bottom > menuHeight){\n\t              this.$menu.scrollTop(scrollTop + bottom - menuHeight);\n\t          } else if(top < 0){\n\t              this.$menu.scrollTop(scrollTop + top);\n\t          }\n\t      }\n\t  }\n\t\n\t  , keydown: function (e) {\n\t      this.suppressKeyPressRepeat = ~$.inArray(e.keyCode, [40,38,9,13,27]);\n\t      this.move(e);\n\t    }\n\t\n\t  , keypress: function (e) {\n\t      if (this.suppressKeyPressRepeat) {return;}\n\t      this.move(e);\n\t    }\n\t\n\t  , keyup: function (e) {\n\t      switch(e.keyCode) {\n\t        case 40: // down arrow\n\t         if (!this.shown){\n\t           this.toggle();\n\t         }\n\t         break;\n\t        case 39: // right arrow\n\t        case 38: // up arrow\n\t        case 37: // left arrow\n\t        case 36: // home\n\t        case 35: // end\n\t        case 16: // shift\n\t        case 17: // ctrl\n\t        case 18: // alt\n\t          break;\n\t\n\t        case 9: // tab\n\t        case 13: // enter\n\t          if (!this.shown) {return;}\n\t          this.select();\n\t          break;\n\t\n\t        case 27: // escape\n\t          if (!this.shown) {return;}\n\t          this.hide();\n\t          break;\n\t\n\t        default:\n\t          this.clearTarget();\n\t          this.lookup();\n\t      }\n\t\n\t      e.stopPropagation();\n\t      e.preventDefault();\n\t  }\n\t\n\t  , focus: function (e) {\n\t      this.focused = true;\n\t    }\n\t\n\t  , blur: function (e) {\n\t      var that = this;\n\t      this.focused = false;\n\t      var val = this.$element.val();\n\t      if (!this.selected && val !== '' ) {\n\t        this.$element.val('');\n\t        this.$source.val('').trigger('change');\n\t        this.$target.val('').trigger('change');\n\t      }\n\t      if (!this.mousedover && this.shown) {setTimeout(function () { that.hide(); }, 200);}\n\t    }\n\t\n\t  , click: function (e) {\n\t      e.stopPropagation();\n\t      e.preventDefault();\n\t      this.select();\n\t      this.$element.focus();\n\t    }\n\t\n\t  , mouseenter: function (e) {\n\t      this.mousedover = true;\n\t      this.$menu.find('.active').removeClass('active');\n\t      $(e.currentTarget).addClass('active');\n\t    }\n\t\n\t  , mouseleave: function (e) {\n\t      this.mousedover = false;\n\t    }\n\t  };\n\t\n\t  /* COMBOBOX PLUGIN DEFINITION\n\t   * =========================== */\n\t  $.fn.combobox = function ( option ) {\n\t    return this.each(function () {\n\t      var $this = $(this)\n\t        , data = $this.data('combobox')\n\t        , options = typeof option == 'object' && option;\n\t      if(!data) {$this.data('combobox', (data = new Combobox(this, options)));}\n\t      if (typeof option == 'string') {data[option]();}\n\t    });\n\t  };\n\t\n\t  $.fn.combobox.defaults = {\n\t    bsVersion: '3'\n\t  , menu: '<ul class=\"typeahead typeahead-long dropdown-menu\"></ul>'\n\t  , item: '<li><a href=\"#\"></a></li>'\n\t  };\n\t\n\t  $.fn.combobox.Constructor = Combobox;\n\t\n\t}( window.jQuery );\n\n\n/***/ },\n\n/***/ 163:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2013 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\tvar $ = __webpack_require__(19);\n\tvar cockpit = __webpack_require__(2);\n\t\n\t/* These add themselves to jQuery so just including is enough */\n\t__webpack_require__(153);\n\t__webpack_require__(154);\n\t\n\tvar _ = cockpit.gettext;\n\t\n\t/* The server time object */\n\tvar server_time = null;\n\t\n\t/* The current operation */\n\tvar operation = null;\n\t\n\t/* The entry point, shows the dialog */\n\tmodule.exports = function shutdown(op, st) {\n\t    operation = op;\n\t    server_time = st;\n\t    $('#shutdown-dialog').modal('show');\n\t};\n\t\n\t$('#shutdown-dialog .shutdown-date').datepicker({\n\t    autoclose: true,\n\t    todayHighlight: true,\n\t    format: 'yyyy-mm-dd',\n\t    startDate: \"today\",\n\t});\n\t\n\t$(\"#shutdown-dialog input\")\n\t    .on('focusout', update)\n\t    .on('change', update);\n\t\n\t/* The delay in the dialog */\n\tvar delay = 0;\n\t$(\"#shutdown-dialog .dropdown li\")\n\t    .on(\"click\", function(ev) {\n\t        delay = $(this).attr(\"value\");\n\t        update();\n\t    });\n\t\n\t/* Prefilling the date if it's been set */\n\tvar cached_date = null;\n\t$('#shutdown-dialog .shutdown-date')\n\t    .on('focusin', function() {\n\t        cached_date = $(this).val();\n\t    })\n\t    .on('focusout', function() {\n\t        if ($(this).val().length === 0)\n\t            $(this).val(cached_date);\n\t    });\n\t\n\t$(\"#shutdown-dialog\").on(\"show.bs.modal\", function(ev) {\n\t\n\t    /* The date picker also triggers this event, since it is modal */\n\t    if (ev.target.id !== \"shutdown-dialog\")\n\t        return;\n\t\n\t    $(\"#shutdown-dialog textarea\").\n\t        val(\"\").\n\t        attr(\"placeholder\", _(\"Message to logged in users\")).\n\t        attr(\"rows\", 5);\n\t\n\t    /* Track the value correctly */\n\t    delay = $(\"#shutdown-dialog li:first-child\").attr(\"value\");\n\t\n\t    server_time.wait().then(function() {\n\t        $('#shutdown-dialog .shutdown-date').val(server_time.format());\n\t        $('#shutdown-dialog .shutdown-hours').val(server_time.utc_fake_now.getUTCHours());\n\t        $('#shutdown-dialog .shutdown-minutes').val(server_time.utc_fake_now.getUTCMinutes());\n\t    });\n\t\n\t    if (operation == 'shutdown') {\n\t        $('#shutdown-dialog .modal-title').text(_(\"Shut Down\"));\n\t        $(\"#shutdown-dialog .btn-danger\").text(_(\"Shut Down\"));\n\t    } else {\n\t        $('#shutdown-dialog .modal-title').text(_(\"Restart\"));\n\t        $(\"#shutdown-dialog .btn-danger\").text(_(\"Restart\"));\n\t    }\n\t\n\t    update();\n\t});\n\t\n\tfunction update() {\n\t    $(\"#shutdown-dialog input\").parent().toggle(delay == \"x\");\n\t    $(\"#shutdown-dialog .dropdown button span\").text($(\"#shutdown-dialog li[value='\" + delay + \"']\").text());\n\t\n\t    var val = parseInt($('#shutdown-dialog .shutdown-minutes').val(), 10);\n\t    if (val < 10)\n\t        $('#shutdown-dialog .shutdown-minutes').val(\"0\" + val);\n\t}\n\t\n\t/* Validate the input fields */\n\tfunction calculate() {\n\t    if (delay != \"x\")\n\t        return cockpit.resolve(\"+\" + delay);\n\t\n\t    var datestr = $(\"#shutdown-dialog .shutdown-date\").val();\n\t    var hourstr = $(\"#shutdown-dialog .shutdown-hours\").val();\n\t    var minstr = $(\"#shutdown-dialog .shutdown-minutes\").val();\n\t\n\t    var h = parseInt(hourstr, 10);\n\t    var m = parseInt(minstr, 10);\n\t\n\t    var time_error = false;\n\t    if (isNaN(h) || h < 0 || h > 23  ||\n\t        isNaN(m) || m < 0 || m > 59) {\n\t        time_error = true;\n\t    }\n\t\n\t    var date = new Date(datestr);\n\t\n\t    var date_error = false;\n\t    if (isNaN(date.getTime()) || date.getTime() < 0)\n\t        date_error = true;\n\t\n\t    var ex = null;\n\t    if (time_error && date_error) {\n\t        ex = new Error(_(\"Invalid date format and invalid time format\"));\n\t    } else if (time_error) {\n\t        ex = new Error (_(\"Invalid time format\"));\n\t    } else if (date_error) {\n\t        ex = new Error (_(\"Invalid date format\"));\n\t    }\n\t\n\t    if (ex) {\n\t        ex.target = \"table td:last-child div\";\n\t        return cockpit.reject(ex);\n\t    }\n\t\n\t    var cmd = [\"date\", \"--date=\" + datestr + \" \" + hourstr + \":\" + minstr, \"+%s\"];\n\t    return cockpit.spawn(cmd, { err: \"message\" }).then(function(data) {\n\t        var input_timestamp = parseInt(data, 10);\n\t        var server_timestamp = parseInt(server_time.now.getTime() / 1000, 10);\n\t        var offset = Math.ceil((input_timestamp - server_timestamp) / 60);\n\t\n\t        /* If the time in minutes just changed, make it happen now */\n\t        if (offset === -1) {\n\t            offset = 0;\n\t\n\t        /* Otherwise this is a failure */\n\t        } else if (offset < 0) {\n\t            console.log(\"Shutdown offset in minutes is in the past:\", offset);\n\t            ex = new Error(_(\"Cannot schedule event in the past\"));\n\t            ex.target = \"table td:last-child div\";\n\t            return cockpit.reject(ex);\n\t        }\n\t\n\t        return \"+\" + offset;\n\t    });\n\t}\n\t\n\t/* Perform the actual action */\n\tfunction perform(message) {\n\t    return calculate().then(function(when) {\n\t        var arg = (operation == \"shutdown\") ? \"--poweroff\" : \"--reboot\";\n\t        var message = $(\"#shutdown-dialog textarea\").val();\n\t        if (operation == \"restart\")\n\t            cockpit.hint(\"restart\");\n\t        return cockpit.spawn([\"shutdown\", arg, when, message], { superuser: true, err: \"message\" });\n\t    });\n\t}\n\t\n\t/* Perform the action */\n\t\n\t$(\"#shutdown-dialog .btn-danger\").click(function() {\n\t    $(\"#shutdown-dialog\").dialog(\"promise\", perform());\n\t});\n\n\n/***/ },\n\n/***/ 164:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"#!/bin/sh\\n\\nset -eu\\nport=\\\"22\\\"\\nhost=\\\"localhost\\\"\\n\\nparse_addr() {\\n    if [ -n \\\"$1\\\" ]; then\\n        case \\\"$1\\\" in\\n            *:*)\\n                t=\\\"$1\\\"\\n                p=${t##*:}\\n                h=${t%:*}\\n                ;;\\n            *)\\n                p=\\\"$1\\\"\\n                h=\\\"localhost\\\"\\n                ;;\\n        esac\\n\\n        # checks that port is an integer\\n        if [ \\\"$p\\\" -eq \\\"$p\\\" ] 2>/dev/null; then\\n            port=\\\"$p\\\"\\n            host=\\\"$h\\\"\\n            if [ \\\"$host\\\" = \\\"[::]\\\" ]; then\\n                host=\\\"::\\\"\\n            fi\\n        fi\\n    fi\\n}\\n\\n# Try to find where sshd might be listening\\n\\n# Check sshd_config, only works for root\\nconfig=$(sshd -T | grep \\\"listenaddress \\\" | cut -d' ' -f2-)\\necho \\\"$config\\\" | while IFS='\\\\n' read line; do\\n    parse_addr \\\"$line\\\"\\ndone\\n\\n# Check with systemd\\nsystemd=$(systemctl show --property=Listen sshd.socket || true)\\necho \\\"$systemd\\\" | while IFS='=' read -r name value; do\\n    if [ \\\"$name\\\" = \\\"ListenStream\\\" ]; then\\n        parse_addr \\\"$value\\\"\\n    fi\\ndone\\n\\nkeys=$(ssh-keyscan -t dsa,ecdsa,ed25519,rsa -p \\\"$port\\\" \\\"$host\\\" || true)\\nif [ -n \\\"$keys\\\" ]; then\\n    # Some versions of ssh-keygen don't support -f reading from stdin\\n    # so write a tmpfile\\n    tmp=$(mktemp)\\n    echo \\\"$keys\\\" > \\\"$tmp\\\"\\n\\n    # Not all ssh-keygen version support -E in those cases just output the default\\n    (ssh-keygen -l -f \\\"$tmp\\\" -E md5 && ssh-keygen -l -f \\\"$tmp\\\" -E sha256) || ssh-keygen -l -f \\\"$tmp\\\"\\n    rm \\\"$tmp\\\"\\nfi\\n\"\n\n/***/ },\n\n/***/ 165:\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n\n/******/ });\n\n\n// WEBPACK FOOTER //\n// systemd/system.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 319e4fa29857b34210ee","module.exports = cockpit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cockpit\"\n// module id = 2\n// module chunks = 0 1 2 3 4","'use strict';\n\n/*jshint esversion: 6 */\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n This file contains various polyfills and other compatibility hacks\n */\n\n// for IE 11\nrequire('promise/polyfill.js');\n\n// for IE 11\nif (!String.prototype.startsWith) {\n    String.prototype.startsWith = function (searchString, position) {\n        position = position || 0;\n        return this.substr(position, searchString.length) === searchString;\n    };\n}\n\n// for IE 11\nif (!String.prototype.endsWith) {\n\tString.prototype.endsWith = function(search, this_len) {\n\t\tif (this_len === undefined || this_len > this.length) {\n\t\t\tthis_len = this.length;\n\t\t}\n\t\treturn this.substring(this_len - search.length, this_len) === search;\n\t};\n}\n\nif (!Array.prototype.findIndex) {\n    Array.prototype.findIndex = function (predicate) {\n        if (this === null) {\n            throw new TypeError('Array.prototype.findIndex called on null or undefined');\n        }\n        if (typeof predicate !== 'function') {\n            throw new TypeError('predicate must be a function');\n        }\n        var list = Object(this);\n        var length = list.length >>> 0;\n        var thisArg = arguments[1];\n        var value;\n\n        for (var i = 0; i < length; i++) {\n            value = list[i];\n            if (predicate.call(thisArg, value, i, list)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\n// for IE 11\nif (typeof Object.assign != 'function') {\n    // Must be writable: true, enumerable: false, configurable: true\n    Object.defineProperty(Object, \"assign\", {\n        value: function assign(target, varArgs) { // .length of function is 2\n            'use strict';\n            if (target === null) { // TypeError if undefined or null\n                throw new TypeError('Cannot convert undefined or null to object');\n            }\n\n            var to = Object(target);\n\n            for (var index = 1; index < arguments.length; index++) {\n                var nextSource = arguments[index];\n\n                if (nextSource !== null) { // Skip over if undefined or null\n                    for (var nextKey in nextSource) {\n                        // Avoid bugs when hasOwnProperty is shadowed\n                        if (Object.prototype.hasOwnProperty.call(nextSource, nextKey)) {\n                            to[nextKey] = nextSource[nextKey];\n                        }\n                    }\n                }\n            }\n            return to;\n        },\n        writable: true,\n        configurable: true\n    });\n}\n\n// for IE 11\n// https://tc39.github.io/ecma262/#sec-array.prototype.find\nif (!Array.prototype.find) {\n    Object.defineProperty(Array.prototype, 'find', {\n        value: function(predicate) {\n            // 1. Let O be ? ToObject(this value).\n            if (this === null) {\n                throw new TypeError('\"this\" is null or not defined');\n            }\n\n            var o = Object(this);\n\n            // 2. Let len be ? ToLength(? Get(O, \"length\")).\n            var len = o.length >>> 0;\n\n            // 3. If IsCallable(predicate) is false, throw a TypeError exception.\n            if (typeof predicate !== 'function') {\n                throw new TypeError('predicate must be a function');\n            }\n\n            // 4. If thisArg was supplied, let T be thisArg; else let T be undefined.\n            var thisArg = arguments[1];\n\n            // 5. Let k be 0.\n            var k = 0;\n\n            // 6. Repeat, while k < len\n            while (k < len) {\n                // a. Let Pk be ! ToString(k).\n                // b. Let kValue be ? Get(O, Pk).\n                // c. Let testResult be ToBoolean(? Call(predicate, T, « kValue, k, O »)).\n                // d. If testResult is true, return kValue.\n                var kValue = o[k];\n                if (predicate.call(thisArg, kValue, k, o)) {\n                    return kValue;\n                }\n                // e. Increase k by 1.\n                k++;\n            }\n\n            // 7. Return undefined.\n            return undefined;\n        }\n    });\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/polyfills.js\n// module id = 3\n// module chunks = 0 3","// not \"use strict\" so we can declare global \"Promise\"\n\nvar asap = require('asap');\n\nif (typeof Promise === 'undefined') {\n  Promise = require('./lib/core.js')\n  require('./lib/es6-extensions.js')\n}\n\nrequire('./polyfill-done.js');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/promise/polyfill.js\n// module id = 4\n// module chunks = 0 3","\"use strict\";\n\n// rawAsap provides everything we need except exception management.\nvar rawAsap = require(\"./raw\");\n// RawTasks are recycled to reduce GC churn.\nvar freeTasks = [];\n// We queue errors to ensure they are thrown in right order (FIFO).\n// Array-as-queue is good enough here, since we are just dealing with exceptions.\nvar pendingErrors = [];\nvar requestErrorThrow = rawAsap.makeRequestCallFromTimer(throwFirstError);\n\nfunction throwFirstError() {\n    if (pendingErrors.length) {\n        throw pendingErrors.shift();\n    }\n}\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nmodule.exports = asap;\nfunction asap(task) {\n    var rawTask;\n    if (freeTasks.length) {\n        rawTask = freeTasks.pop();\n    } else {\n        rawTask = new RawTask();\n    }\n    rawTask.task = task;\n    rawAsap(rawTask);\n}\n\n// We wrap tasks with recyclable task objects.  A task object implements\n// `call`, just like a function.\nfunction RawTask() {\n    this.task = null;\n}\n\n// The sole purpose of wrapping the task is to catch the exception and recycle\n// the task object after its single use.\nRawTask.prototype.call = function () {\n    try {\n        this.task.call();\n    } catch (error) {\n        if (asap.onerror) {\n            // This hook exists purely for testing purposes.\n            // Its name will be periodically randomized to break any code that\n            // depends on its existence.\n            asap.onerror(error);\n        } else {\n            // In a web browser, exceptions are not fatal. However, to avoid\n            // slowing down the queue of pending tasks, we rethrow the error in a\n            // lower priority turn.\n            pendingErrors.push(error);\n            requestErrorThrow();\n        }\n    } finally {\n        this.task = null;\n        freeTasks[freeTasks.length] = this;\n    }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/asap/browser-asap.js\n// module id = 5\n// module chunks = 0 3","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/asap/browser-raw.js\n// module id = 6\n// module chunks = 0 3","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/promise/lib/core.js\n// module id = 7\n// module chunks = 0 3","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/promise/lib/es6-extensions.js\n// module id = 8\n// module chunks = 0 3","// should work in any browser without browserify\n\nif (typeof Promise.prototype.done !== 'function') {\n  Promise.prototype.done = function (onFulfilled, onRejected) {\n    var self = arguments.length ? this.then.apply(this, arguments) : this\n    self.then(null, function (err) {\n      setTimeout(function () {\n        throw err\n      }, 0)\n    })\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/promise/polyfill-done.js\n// module id = 9\n// module chunks = 0 3","/*jshint esversion: 6 */\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2018 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport cockpit from \"cockpit\";\nconst _ = cockpit.gettext;\n\nvar cpu_ram_info_promises = { };\n\nexport function cpu_ram_info(address) {\n    var pr = cpu_ram_info_promises[address];\n    var dfd;\n    if (!pr) {\n        dfd = cockpit.defer();\n        cpu_ram_info_promises[address] = pr = dfd.promise();\n\n        cockpit.spawn([\"cat\", \"/proc/meminfo\", \"/proc/cpuinfo\"], { host: address }).\n            done(function(text) {\n                var info = { };\n                var match = text.match(/MemTotal:[^0-9]*([0-9]+) [kK]B/);\n                var total_kb = match && parseInt(match[1], 10);\n                if (total_kb)\n                    info.memory = total_kb*1024;\n\n                match = text.match(/^model name\\s*:\\s*(.*)$/m);\n                if (match)\n                    info.cpu_model = match[1];\n\n                info.cpus = 0;\n                var re = /^processor/gm;\n                while (re.test(text))\n                    info.cpus += 1;\n                dfd.resolve(info);\n            }).\n            fail(function() {\n                dfd.reject();\n            });\n    }\n    return pr;\n}\n\n// https://www.dmtf.org/sites/default/files/standards/documents/DSP0134_2.7.1.pdf\nconst chassis_types = [\n    undefined,\n    _(\"Other\"),\n    _(\"Unknown\"),\n    _(\"Desktop\"),\n    _(\"Low Profile Desktop\"),\n    _(\"Pizza Box\"),\n    _(\"Mini Tower\"),\n    _(\"Tower\"),\n    _(\"Portable\"),\n    _(\"Laptop\"),\n    _(\"Notebook\"),\n    _(\"Hand Held\"),\n    _(\"Docking Station\"),\n    _(\"All In One\"),\n    _(\"Sub Notebook\"),\n    _(\"Space-saving Computer\"),\n    _(\"Lunch Box\"),  /* 0x10 */\n    _(\"Main Server Chassis\"),\n    _(\"Expansion Chassis\"),\n    _(\"Sub Chassis\"),\n    _(\"Bus Expansion Chassis\"),\n    _(\"Peripheral Chassis\"),\n    _(\"RAID Chassis\"),\n    _(\"Rack Mount Chassis\"),\n    _(\"Sealed-case PC\"),\n    _(\"Multi-system Chassis\"),\n    _(\"Compact PCI\"), /* 0x1A */\n    _(\"Advanced TCA\"),\n    _(\"Blade\"),\n    _(\"Blade enclosure\"),\n    _(\"Tablet\"),\n    _(\"Convertible\"),\n    _(\"Detachable\"), /* 0x20 */\n    _(\"IoT Gateway\"),\n    _(\"Embedded PC\"),\n    _(\"Mini PC\"),\n    _(\"Stick PC\"),\n];\n\nfunction parseDMIFields(text) {\n    var info = {};\n    text.split(\"\\n\").map(line => {\n        let sep = line.indexOf(':');\n        if (sep <= 0)\n            return;\n        let key = line.slice(0, sep);\n        let value = line.slice(sep + 1);\n        info[key] = value;\n\n        if (key === \"chassis_type\")\n            info[key + \"_str\"] = chassis_types[parseInt(value)] || chassis_types[2]; // fall back to \"Unknown\"\n    });\n    return info;\n}\n\nvar dmi_info_promises = { };\n\nexport function dmi_info(address) {\n    var pr = dmi_info_promises[address];\n    var dfd;\n    if (!pr) {\n        dfd = cockpit.defer();\n        dmi_info_promises[address] = pr = dfd.promise();\n\n        cockpit.spawn([\"grep\", \"-r\", \".\"],\n                      { directory: \"/sys/class/dmi/id\", err: \"ignore\", superuser: \"try\" })\n            .done(output => dfd.resolve(parseDMIFields(output)))\n            .fail((exception, output) => {\n                // the grep often/usually exits with 2, that's okay as long as we find *some* information\n                if (!exception.problem && output)\n                    dfd.resolve(parseDMIFields(output));\n                else\n                    dfd.reject(exception.message);\n            });\n    }\n    return pr;\n}\n\n/* we expect udev db paragraphs like this:\n *\n   P: /devices/virtual/mem/null\n   N: null\n   E: DEVMODE=0666\n   E: DEVNAME=/dev/null\n   E: SUBSYSTEM=mem\n*/\n\nconst udevPathRE = /^P: (.*)$/;\nconst udevPropertyRE = /^E: (\\w+)=(.*)$/;\n\nfunction parseUdevDB(text) {\n    var info = {};\n    text.split(\"\\n\\n\").map(paragraph => {\n        let syspath = null;\n        let props = {};\n\n        paragraph = paragraph.trim();\n        if (!paragraph)\n            return;\n\n        paragraph.split(\"\\n\").map(line => {\n            let match = line.match(udevPathRE);\n            if (match) {\n                syspath = match[1];\n            } else {\n                match = line.match(udevPropertyRE);\n                if (match)\n                    props[match[1]] = match[2];\n            }\n        });\n\n        if (syspath)\n            info[syspath] = props;\n        else\n            console.log(\"udev database paragraph is missing P:\", paragraph);\n    });\n    return info;\n}\n\nvar udev_info_promises = { };\n\nexport function udev_info(address) {\n    var pr = udev_info_promises[address];\n    var dfd;\n    if (!pr) {\n        dfd = cockpit.defer();\n        udev_info_promises[address] = pr = dfd.promise();\n\n        cockpit.spawn([\"udevadm\", \"info\", \"--export-db\"], { err: \"message\" })\n            .done(output => dfd.resolve(parseUdevDB(output)))\n            .fail(exception => dfd.reject(exception.message));\n    }\n    return pr;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/lib/machine-info.es6","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 19\n// module chunks = 1 2 3","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar cockpit = require(\"cockpit\");\nvar mustache = require(\"mustache/mustache\");\n\n/*\n * Turns a mustache template into a translated mustache template\n * by preparsing it and translating it.\n */\nvar cache = { };\n\nfunction translate(template) {\n    if (template in cache)\n        return cache[template];\n    var div = document.createElement(\"div\");\n    div.innerHTML = template;\n    cockpit.translate(div);\n    var result = div.innerHTML;\n    cache[template] = result;\n    return result;\n}\n\n/* Just like the mustache object, except for translated */\nmodule.exports = cockpit.extend({ }, mustache, {\n    render: function render(template, view, partials) {\n        if (!view)\n            view = {};\n\n        return translate(mustache.render(template, view, partials));\n    },\n    to_html: function to_html(template, view, partials, send) {\n        if (!view)\n            view = {};\n\n        return translate(mustache.to_html(template, view, partials, send));\n    },\n    clearCache: function clearCache() {\n        cache = { };\n        return mustache.clearCache();\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/mustache.js\n// module id = 21\n// module chunks = 1 2 3","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false Mustache: true*/\n\n(function defineMustache (global, factory) {\n  if (typeof exports === 'object' && exports && typeof exports.nodeName !== 'string') {\n    factory(exports); // CommonJS\n  } else if (typeof define === 'function' && define.amd) {\n    define(['exports'], factory); // AMD\n  } else {\n    global.Mustache = {};\n    factory(global.Mustache); // script, wsh, asp\n  }\n}(this, function mustacheFactory (mustache) {\n\n  var objectToString = Object.prototype.toString;\n  var isArray = Array.isArray || function isArrayPolyfill (object) {\n    return objectToString.call(object) === '[object Array]';\n  };\n\n  function isFunction (object) {\n    return typeof object === 'function';\n  }\n\n  /**\n   * More correct typeof string handling array\n   * which normally returns typeof 'object'\n   */\n  function typeStr (obj) {\n    return isArray(obj) ? 'array' : typeof obj;\n  }\n\n  function escapeRegExp (string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n  }\n\n  /**\n   * Null safe way of checking whether or not an object,\n   * including its prototype, has a given property\n   */\n  function hasProperty (obj, propName) {\n    return obj != null && typeof obj === 'object' && (propName in obj);\n  }\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var regExpTest = RegExp.prototype.test;\n  function testRegExp (re, string) {\n    return regExpTest.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace (string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var entityMap = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '/': '&#x2F;',\n    '`': '&#x60;',\n    '=': '&#x3D;'\n  };\n\n  function escapeHtml (string) {\n    return String(string).replace(/[&<>\"'`=\\/]/g, function fromEntityMap (s) {\n      return entityMap[s];\n    });\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate (template, tags) {\n    if (!template)\n      return [];\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace () {\n      if (hasTag && !nonSpace) {\n        while (spaces.length)\n          delete tokens[spaces.pop()];\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var openingTagRe, closingTagRe, closingCurlyRe;\n    function compileTags (tagsToCompile) {\n      if (typeof tagsToCompile === 'string')\n        tagsToCompile = tagsToCompile.split(spaceRe, 2);\n\n      if (!isArray(tagsToCompile) || tagsToCompile.length !== 2)\n        throw new Error('Invalid tags: ' + tagsToCompile);\n\n      openingTagRe = new RegExp(escapeRegExp(tagsToCompile[0]) + '\\\\s*');\n      closingTagRe = new RegExp('\\\\s*' + escapeRegExp(tagsToCompile[1]));\n      closingCurlyRe = new RegExp('\\\\s*' + escapeRegExp('}' + tagsToCompile[1]));\n    }\n\n    compileTags(tags || mustache.tags);\n\n    var scanner = new Scanner(template);\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(openingTagRe);\n\n      if (value) {\n        for (var i = 0, valueLength = value.length; i < valueLength; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push([ 'text', chr, start, start + 1 ]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n')\n            stripSpace();\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(openingTagRe))\n        break;\n\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(closingTagRe);\n      } else if (type === '{') {\n        value = scanner.scanUntil(closingCurlyRe);\n        scanner.scan(curlyRe);\n        scanner.scanUntil(closingTagRe);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(closingTagRe);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(closingTagRe))\n        throw new Error('Unclosed tag at ' + scanner.pos);\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection)\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\n        if (openSection[1] !== value)\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        compileTags(value);\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n\n    if (openSection)\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens (tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens (tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n        case '#':\n        case '^':\n          collector.push(token);\n          sections.push(token);\n          collector = token[4] = [];\n          break;\n        case '/':\n          section = sections.pop();\n          section[5] = token[2];\n          collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n          break;\n        default:\n          collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner (string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function eos () {\n    return this.tail === '';\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function scan (re) {\n    var match = this.tail.match(re);\n\n    if (!match || match.index !== 0)\n      return '';\n\n    var string = match[0];\n\n    this.tail = this.tail.substring(string.length);\n    this.pos += string.length;\n\n    return string;\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function scanUntil (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n      case -1:\n        match = this.tail;\n        this.tail = '';\n        break;\n      case 0:\n        match = '';\n        break;\n      default:\n        match = this.tail.substring(0, index);\n        this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context (view, parentContext) {\n    this.view = view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function push (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function lookup (name) {\n    var cache = this.cache;\n\n    var value;\n    if (cache.hasOwnProperty(name)) {\n      value = cache[name];\n    } else {\n      var context = this, names, index, lookupHit = false;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n          names = name.split('.');\n          index = 0;\n\n          /**\n           * Using the dot notion path in `name`, we descend through the\n           * nested objects.\n           *\n           * To be certain that the lookup has been successful, we have to\n           * check if the last object in the path actually has the property\n           * we are looking for. We store the result in `lookupHit`.\n           *\n           * This is specially necessary for when the value has been set to\n           * `undefined` and we want to avoid looking up parent contexts.\n           **/\n          while (value != null && index < names.length) {\n            if (index === names.length - 1)\n              lookupHit = hasProperty(value, names[index]);\n\n            value = value[names[index++]];\n          }\n        } else {\n          value = context.view[name];\n          lookupHit = hasProperty(context.view, name);\n        }\n\n        if (lookupHit)\n          break;\n\n        context = context.parent;\n      }\n\n      cache[name] = value;\n    }\n\n    if (isFunction(value))\n      value = value.call(this.view);\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer () {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function clearCache () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function parse (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null)\n      tokens = cache[template] = parseTemplate(template, tags);\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function render (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function renderTokens (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    var token, symbol, value;\n    for (var i = 0, numTokens = tokens.length; i < numTokens; ++i) {\n      value = undefined;\n      token = tokens[i];\n      symbol = token[0];\n\n      if (symbol === '#') value = this.renderSection(token, context, partials, originalTemplate);\n      else if (symbol === '^') value = this.renderInverted(token, context, partials, originalTemplate);\n      else if (symbol === '>') value = this.renderPartial(token, context, partials, originalTemplate);\n      else if (symbol === '&') value = this.unescapedValue(token, context);\n      else if (symbol === 'name') value = this.escapedValue(token, context);\n      else if (symbol === 'text') value = this.rawValue(token);\n\n      if (value !== undefined)\n        buffer += value;\n    }\n\n    return buffer;\n  };\n\n  Writer.prototype.renderSection = function renderSection (token, context, partials, originalTemplate) {\n    var self = this;\n    var buffer = '';\n    var value = context.lookup(token[1]);\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    function subRender (template) {\n      return self.render(template, context, partials);\n    }\n\n    if (!value) return;\n\n    if (isArray(value)) {\n      for (var j = 0, valueLength = value.length; j < valueLength; ++j) {\n        buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n      }\n    } else if (typeof value === 'object' || typeof value === 'string' || typeof value === 'number') {\n      buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n    } else if (isFunction(value)) {\n      if (typeof originalTemplate !== 'string')\n        throw new Error('Cannot use higher-order sections without the original template');\n\n      // Extract the portion of the original template that the section contains.\n      value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n      if (value != null)\n        buffer += value;\n    } else {\n      buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n    }\n    return buffer;\n  };\n\n  Writer.prototype.renderInverted = function renderInverted (token, context, partials, originalTemplate) {\n    var value = context.lookup(token[1]);\n\n    // Use JavaScript's definition of falsy. Include empty arrays.\n    // See https://github.com/janl/mustache.js/issues/186\n    if (!value || (isArray(value) && value.length === 0))\n      return this.renderTokens(token[4], context, partials, originalTemplate);\n  };\n\n  Writer.prototype.renderPartial = function renderPartial (token, context, partials) {\n    if (!partials) return;\n\n    var value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n    if (value != null)\n      return this.renderTokens(this.parse(value), context, partials, value);\n  };\n\n  Writer.prototype.unescapedValue = function unescapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return value;\n  };\n\n  Writer.prototype.escapedValue = function escapedValue (token, context) {\n    var value = context.lookup(token[1]);\n    if (value != null)\n      return mustache.escape(value);\n  };\n\n  Writer.prototype.rawValue = function rawValue (token) {\n    return token[1];\n  };\n\n  mustache.name = 'mustache.js';\n  mustache.version = '2.3.0';\n  mustache.tags = [ '{{', '}}' ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function clearCache () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function parse (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function render (template, view, partials) {\n    if (typeof template !== 'string') {\n      throw new TypeError('Invalid template! Template should be a \"string\" ' +\n                          'but \"' + typeStr(template) + '\" was given as the first ' +\n                          'argument for mustache#render(template, view, partials)');\n    }\n\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.,\n  /*eslint-disable */ // eslint wants camel cased function name\n  mustache.to_html = function to_html (template, view, partials, send) {\n    /*eslint-enable*/\n\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n  return mustache;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/mustache/mustache.js\n// module id = 22\n// module chunks = 1 2 3","'use strict';\n\n(function() {\n    \"use strict\";\n\n    var $ = require('jquery');\n    var cockpit = require('cockpit');\n\n    var unique_number = 0;\n    function unique() {\n        unique_number += 1;\n        return \"unique\" + -(new Date()) + -unique_number;\n    }\n\n    /* Dialog Patterns */\n\n    function clear_errors(sel) {\n        sel.find(\".dialog-error\").remove();\n        sel.find(\".has-error\").removeClass(\"has-error\");\n        sel.find(\".dialog-wrapper\").off(\".dialog-error\");\n        sel.off(\".dialog-error\");\n    }\n\n    function field_error(target, error) {\n        var wrapper = target.parent();\n        var next, refresh;\n\n        if (!wrapper.is(\".dialog-wrapper\")) {\n            wrapper = $(\"<div class='dialog-wrapper'>\").insertBefore(target);\n\n            /*\n             * Some bootstrap plugins replace html controls with their own\n             * stuff, so we have to account for that here.\n             */\n\n            next = target.next();\n            if (next.is(\".bootstrap-select\") && next.selectpicker) {\n                next.remove();\n                refresh = next.selectpicker;\n            }\n\n            target.remove().appendTo(wrapper);\n\n            if (refresh)\n                refresh.call(target);\n        }\n\n        var message;\n        if (error.message)\n            message = $(\"<div class='dialog-error help-block'>\").text(error.message);\n        wrapper.addClass(\"has-error\").append(message);\n\n        if (!wrapper.hasClass(\"error-keep\")) {\n            wrapper.on(\"keypress.dialog-error change.dialog-error\", function() {\n                wrapper.removeClass(\"has-error\")\n                    .find(\".dialog-error.help-block\").css(\"visibility\", \"hidden\");\n            });\n        }\n    }\n\n    function global_error(sel, error) {\n        var alert = $(\"<div class='alert alert-danger dialog-error'>\");\n        var text = error.message || error.toString();\n        alert.text(text);\n        $(\"<span class='fa fa-exclamation-triangle'>\").prependTo(alert);\n\n        /* Always log global dialog errors for easier debugging */\n        console.warn(text);\n\n        var footer = sel.find(\".modal-footer\");\n        if (footer.length)\n            alert.prependTo(footer);\n        else\n            alert.appendTo(sel);\n    }\n\n    function display_errors(sel, errors) {\n        clear_errors(sel);\n\n        /* The list of errors can also be passed as an array */\n        if (errors.length == 1 && $.isArray(errors[0]))\n            errors = errors[0];\n\n        var any = false;\n        errors.forEach(function(error) {\n            var target;\n            if (error) {\n                target = sel.find(error.target);\n\n                /* Errors for a specific field added below that field */\n                if (target && target.length)\n                    field_error(target, error);\n                else\n                    global_error(sel, error);\n\n                any = true;\n            }\n        });\n\n        if (!any)\n            return;\n\n        /* When dialog is shown again, remove all mods */\n        sel.on(\"show.bs.modal.dialog-error\", function() {\n            clear_errors(sel);\n        });\n    }\n\n    function DialogWait(promise, handle) {\n        this.promise = promise;\n        this.disabled = [];\n        this.handle = handle;\n    }\n\n    function clear_wait(sel) {\n        var data = sel.data(\"dialog-wait\");\n        sel.data(\"dialog-wait\", null);\n\n        sel.find(\".dialog-wait-ct\").remove();\n        sel.find(\".btn\").off(\".dialog-wait\");\n        sel.off(\".dialog-wait\");\n\n        if (data) {\n            data.disabled.forEach(function(ctl) {\n                ctl.removeAttr(\"disabled\");\n            });\n        }\n    }\n\n    function display_wait(sel, promise, handle) {\n        clear_wait(sel);\n\n        if (!promise) {\n            if (handle)\n                sel.modal(\"hide\");\n            return sel;\n        }\n\n        /* Clear all errors in the dialog */\n        if (handle)\n            display_errors(sel, []);\n\n        var wait = $(\"<div class='dialog-wait-ct pull-left'>\");\n        $(\"<div class='spinner spinner-sm'>\").appendTo(wait);\n        var message = $(\"<span>\").appendTo(wait);\n\n        sel.find(\".modal-footer button\").first().before(wait);\n\n        var data = new DialogWait(promise, handle);\n        sel.data(\"dialog-wait\", data);\n\n        var cancellation = promise.cancel || promise.close;\n        var cancelled = false;\n\n        /* Disable everything and stash previous disabled state */\n        var controls = sel.find(\".form-control\").add(\".btn\", sel);\n        if (cancellation)\n            controls = controls.not(\"[data-dismiss]\").not(\".btn-cancel\");\n        controls.each(function() {\n            var ctl = $(this);\n            if (!ctl.attr(\"disabled\")) {\n                data.disabled.push(ctl);\n                ctl.attr(\"disabled\", \"disabled\");\n            }\n        });\n\n        sel.find(\".btn[data-dismiss], .btn-cancel\").on(\"click.dialog-wait\", function() {\n            cancelled = true;\n            if (cancellation)\n                cancellation.apply(promise);\n            return false;\n        });\n\n        /* When dialog is shown again, remove all mods */\n        sel.on(\"hide.bs.modal.dialog-wait\", function() {\n            clear_wait(sel);\n        });\n\n        /*\n         * There is no way to remove a callback from a promise\n         * so we have to be careful to only react if still\n         * processing the same promise.\n         */\n        function restore() {\n            var state, data = sel.data(\"dialog-wait\");\n            if (data && data.promise === promise) {\n                clear_wait(sel);\n                state = promise.state();\n                if (cancelled || (state == \"resolved\" && data.handle))\n                    sel.modal('hide');\n                else if (state == \"rejected\" && data.handle)\n                    display_errors(sel, [ arguments[0] ]);\n            }\n        }\n\n        function update(arg) {\n            var data = sel.data(\"dialog-wait\");\n            if (data && data.promise === promise) {\n                if (typeof arg !== \"string\")\n                    arg = \"\";\n                message.text(arg);\n            }\n        }\n\n        promise\n            .always(restore)\n            .progress(update);\n\n        return sel;\n    }\n\n    $.fn.dialog = function dialog(action /* ... */) {\n        if (action === \"failure\")\n            return display_errors(this, Array.prototype.slice.call(arguments, 1));\n        else if (action === \"wait\")\n            return display_wait(this, arguments[1]);\n        else if (action === \"promise\")\n            return display_wait(this, arguments[1], true);\n        else\n            console.warn(\"unknown dialog action: \" + action);\n    };\n\n    window.addEventListener(\"hashchange\", function() {\n        $(\".modal\").modal(\"hide\");\n    });\n\n    /*\n     * OnOff switch pattern\n     */\n\n    function onoff_refresh(sel) {\n        /* During testing, no Cockpit dependency */\n        var _ = cockpit.gettext || function(x) { return x; };\n\n        sel = sel.find(\".btn-onoff-ct\").addBack().filter(\".btn-onoff-ct\");\n        sel.each(function(x, el) {\n            var self = $(el)\n                .attr(\"data-toggle\", \"buttons\")\n                .addClass(\"btn-group\");\n            var value = self.onoff(\"value\");\n            var buttons = self.find(\".btn\");\n            var name = self.find(\"input\").first().attr(\"name\") || unique();\n            var i, input, text;\n            for (i = buttons.length; i < 2; i++) {\n                input = $('<input type=\"radio\" autocomplete=\"off\">');\n                text = document.createTextNode(i === 0 ? _(\"On\") : _(\"Off\"));\n                self.append($('<label class=\"btn\">').append(input, text));\n                buttons = null;\n            }\n            buttons = buttons || self.find(\".btn\");\n            buttons.find(\"input\").attr(\"name\", name);\n            onoff_change(self, !!value);\n        });\n        return sel;\n    }\n\n    function onoff_value(sel) {\n        return sel.find(\".btn\").first().hasClass(\"active\");\n    }\n\n    function onoff_change(sel, value) {\n        return sel.each(function(i, el) {\n            var buttons = $(el).find(\".btn\");\n            buttons.first().toggleClass(\"active\", !!value).find(\"input\").prop(\"checked\", !!value);\n            buttons.last().toggleClass(\"active\", !value).find(\"input\").prop(\"checked\", !value);\n        });\n    }\n\n    $.fn.onoff = function onoff(action /* ... */) {\n        if (arguments.length === 0 || action == \"refresh\") {\n            return onoff_refresh(this);\n        } else if (action === \"value\") {\n            if (arguments.length === 1)\n                return onoff_value(this);\n            else\n                return onoff_change(this, arguments[1]);\n        } else if (action == \"disabled\") {\n            return this.find(\".btn\").toggleClass(\"disabled\", arguments[1]);\n        } else {\n            console.warn(\"unknown switch action: \" + action);\n        }\n    };\n\n    /* ----------------------------------------------------------------------------\n     * Sliders\n     *\n     * <div class=\"slider\" value=\"0.5\">\n     *    <div class=\"slider-bar\">\n     *        <div class=\"slider-thumb\"></div>\n     *    </div>\n     *    <div class=\"slider-bar\">\n     *        <!-- optional left overs -->\n     *    </div>\n     * </div>\n     *\n     * A slider control. The first div.slider-bar is the one that is resized.\n     * The value will be bounded between 0 and 1 as a floating point number.\n     *\n     * The following div.slider-bar if present is resized to fill the remainder\n     * of the slider if not given a specific size. You can put more div.slider-bar\n     * inside it to reflect squashing other prevous allocations.\n     *\n     * If the following div.slider-bar have a width specified, then the\n     * slider supports the concept of overflowing. If the slider overflows\n     * it will get the .slider-warning class and go a bit red.\n     *\n     * On document creation any div.slider are automatically turned into\n     * Bar graphs.\n     *\n     * Slider has the following extra read/write properties:\n     *\n     * .value: the floating point value the slider is set to.\n     * .disabled: whether to display slider as disabled and refuse interacton.\n     *\n     * Slider has this event:\n     *\n     * on('change'): fired when the slider changes, passes value as additional arg.\n     */\n\n    function resize_flex(slider, flex, total, part) {\n        var value = 0;\n        if (part > total)\n            value = 1;\n        else if (part < 0 || isNaN(part))\n            value = 0;\n        else if (!isNaN(total) && total > 0 && part >= 0)\n            value = (part / total);\n        $(flex).css('width', (value * 100) + \"%\").\n            next(\"div\").css('margin-left', $(flex).css('width'));\n\n        /* Set the property and the attribute */\n        slider.value = value;\n    }\n\n    function update_value(slider) {\n        resize_flex(slider, $(slider).children(\"div.slider-bar\").first()[0], 1, slider.value);\n    }\n\n    function check_overflow(slider) {\n        $(slider).toggleClass(\"slider-warning\",\n                              slider.offsetWidth < slider.scrollWidth);\n    }\n\n    function setup_slider(slider) {\n        $(slider).attr('unselectable', 'on');\n\n        Object.defineProperty(slider, \"value\", {\n            get: function() {\n                return parseFloat(this.getAttribute(\"value\"));\n            },\n            set: function(v) {\n                var s = String(v);\n                if (s != this.getAttribute(\"value\")) {\n                    this.setAttribute(\"value\", v);\n                    update_value(slider);\n                    check_overflow(slider);\n                }\n            }\n        });\n\n        Object.defineProperty(slider, \"disabled\", {\n            get: function() {\n                if (!this.hasAttribute(\"disabled\"))\n                    return false;\n                return this.getAttribute(\"disabled\").toLowerCase() != \"false\";\n            },\n            set: function(v) {\n                this.setAttribute(\"disabled\", v ? \"true\" : \"false\");\n            }\n        });\n\n        update_value(slider);\n        check_overflow(slider);\n\n        $(slider).on(\"change\", function() {\n            update_value(slider);\n            $(slider).toggleClass(\"slider-disabled\", slider.disabled);\n        });\n\n        if (slider.disabled)\n            $(slider).addClass(\"slider-disabled\");\n\n        $(slider).on(\"mousedown\", function(ev) {\n            if (slider.disabled)\n                return true; /* default action */\n            var flex;\n            var offset = $(slider).offset().left;\n            if ($(ev.target).hasClass(\"slider-thumb\")) {\n                var hitx  = (ev.offsetX || ev.clientX - $(ev.target).offset().left);\n                offset += (hitx - $(ev.target).outerWidth() / 2);\n                flex = $(ev.target).parent()[0];\n            } else {\n                flex = $(slider).children(\"div.slider-bar\").first()[0];\n                resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n                $(slider).trigger(\"change\", [slider.value]);\n                check_overflow(slider);\n            }\n\n            $(document).\n                on(\"mousemove.slider\", function(ev) {\n                    resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n                    $(slider).trigger(\"change\", [slider.value]);\n                    check_overflow(slider);\n                    return false;\n                }).\n                on(\"mouseup.slider\", function(ev) {\n                    $(document).\n                        off(\"mousemove.slider\").\n                        off(\"mouseup.slider\");\n                    return false;\n                });\n            return false; /* no default action */\n        });\n    }\n\n    function setup_sliders() {\n        $(\"div.slider\").each(function() {\n            setup_slider(this);\n        });\n    }\n\n    $.fn.slider = function Slider(action) {\n        var sel = this;\n        if (arguments.length === 0 || action == \"refresh\") {\n            sel.each(function() {\n                setup_slider(this);\n            });\n            return sel;\n        } else {\n            console.warn(\"unknown slider action: \" + action);\n        }\n    };\n\n    $(document).ready(setup_sliders);\n\n    /* -----------------------------------------------------------------------------\n     * Privileged UI actions.\n     */\n\n    // placement is optional, \"top\", \"left\", \"bottom\", \"right\"\n    // by default, tooltip is attached to \"this\" element; can be attached to\n    // another one with setting \"tooltip_element\" (for <a> links)\n    $.fn.update_privileged = function update_privileged(perm, denied_message, placement, tooltip_element) {\n        var allowed = (perm.allowed !== false);\n        var selector = this;\n        if (!tooltip_element)\n            tooltip_element = $(this);\n\n        selector.each(function() {\n            // preserve old title first time to use when allowed\n            // activate tooltip\n            var allowed_key = 'allowed-title';\n            if (typeof $(this).data(allowed_key) === 'undefined' ||\n                   $(this).data(allowed_key) === false)\n                $(this).data(allowed_key, $(this).attr('title') || \"\");\n\n            var options = { html: true };\n            if (placement)\n                options['placement'] = placement;\n\n            tooltip_element.tooltip(options);\n\n            if ($(this).hasClass(\"disabled\") === allowed) {\n              $(this).toggleClass(\"disabled\", !allowed);\n              tooltip_element.attr('data-original-title', null);\n\n              if (allowed)\n                  tooltip_element.attr('title', $(this).data(allowed_key));\n              else\n                  tooltip_element.attr('title', denied_message);\n              tooltip_element.tooltip('fixTitle');\n            }\n        });\n\n        return selector;\n    };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/patterns.js\n// module id = 153\n// module chunks = 2 3","/*!\n * Datepicker for Bootstrap v1.7.1 (https://github.com/uxsolutions/bootstrap-datepicker)\n *\n * Licensed under the Apache License v2.0 (http://www.apache.org/licenses/LICENSE-2.0)\n */\n\n(function(factory){\n    if (typeof define === \"function\" && define.amd) {\n        define([\"jquery\"], factory);\n    } else if (typeof exports === 'object') {\n        factory(require('jquery'));\n    } else {\n        factory(jQuery);\n    }\n}(function($, undefined){\n\tfunction UTCDate(){\n\t\treturn new Date(Date.UTC.apply(Date, arguments));\n\t}\n\tfunction UTCToday(){\n\t\tvar today = new Date();\n\t\treturn UTCDate(today.getFullYear(), today.getMonth(), today.getDate());\n\t}\n\tfunction isUTCEquals(date1, date2) {\n\t\treturn (\n\t\t\tdate1.getUTCFullYear() === date2.getUTCFullYear() &&\n\t\t\tdate1.getUTCMonth() === date2.getUTCMonth() &&\n\t\t\tdate1.getUTCDate() === date2.getUTCDate()\n\t\t);\n\t}\n\tfunction alias(method, deprecationMsg){\n\t\treturn function(){\n\t\t\tif (deprecationMsg !== undefined) {\n\t\t\t\t$.fn.datepicker.deprecated(deprecationMsg);\n\t\t\t}\n\n\t\t\treturn this[method].apply(this, arguments);\n\t\t};\n\t}\n\tfunction isValidDate(d) {\n\t\treturn d && !isNaN(d.getTime());\n\t}\n\n\tvar DateArray = (function(){\n\t\tvar extras = {\n\t\t\tget: function(i){\n\t\t\t\treturn this.slice(i)[0];\n\t\t\t},\n\t\t\tcontains: function(d){\n\t\t\t\t// Array.indexOf is not cross-browser;\n\t\t\t\t// $.inArray doesn't work with Dates\n\t\t\t\tvar val = d && d.valueOf();\n\t\t\t\tfor (var i=0, l=this.length; i < l; i++)\n          // Use date arithmetic to allow dates with different times to match\n          if (0 <= this[i].valueOf() - val && this[i].valueOf() - val < 1000*60*60*24)\n\t\t\t\t\t\treturn i;\n\t\t\t\treturn -1;\n\t\t\t},\n\t\t\tremove: function(i){\n\t\t\t\tthis.splice(i,1);\n\t\t\t},\n\t\t\treplace: function(new_array){\n\t\t\t\tif (!new_array)\n\t\t\t\t\treturn;\n\t\t\t\tif (!$.isArray(new_array))\n\t\t\t\t\tnew_array = [new_array];\n\t\t\t\tthis.clear();\n\t\t\t\tthis.push.apply(this, new_array);\n\t\t\t},\n\t\t\tclear: function(){\n\t\t\t\tthis.length = 0;\n\t\t\t},\n\t\t\tcopy: function(){\n\t\t\t\tvar a = new DateArray();\n\t\t\t\ta.replace(this);\n\t\t\t\treturn a;\n\t\t\t}\n\t\t};\n\n\t\treturn function(){\n\t\t\tvar a = [];\n\t\t\ta.push.apply(a, arguments);\n\t\t\t$.extend(a, extras);\n\t\t\treturn a;\n\t\t};\n\t})();\n\n\n\t// Picker object\n\n\tvar Datepicker = function(element, options){\n\t\t$.data(element, 'datepicker', this);\n\t\tthis._process_options(options);\n\n\t\tthis.dates = new DateArray();\n\t\tthis.viewDate = this.o.defaultViewDate;\n\t\tthis.focusDate = null;\n\n\t\tthis.element = $(element);\n\t\tthis.isInput = this.element.is('input');\n\t\tthis.inputField = this.isInput ? this.element : this.element.find('input');\n\t\tthis.component = this.element.hasClass('date') ? this.element.find('.add-on, .input-group-addon, .btn') : false;\n\t\tif (this.component && this.component.length === 0)\n\t\t\tthis.component = false;\n\t\tthis.isInline = !this.component && this.element.is('div');\n\n\t\tthis.picker = $(DPGlobal.template);\n\n\t\t// Checking templates and inserting\n\t\tif (this._check_template(this.o.templates.leftArrow)) {\n\t\t\tthis.picker.find('.prev').html(this.o.templates.leftArrow);\n\t\t}\n\n\t\tif (this._check_template(this.o.templates.rightArrow)) {\n\t\t\tthis.picker.find('.next').html(this.o.templates.rightArrow);\n\t\t}\n\n\t\tthis._buildEvents();\n\t\tthis._attachEvents();\n\n\t\tif (this.isInline){\n\t\t\tthis.picker.addClass('datepicker-inline').appendTo(this.element);\n\t\t}\n\t\telse {\n\t\t\tthis.picker.addClass('datepicker-dropdown dropdown-menu');\n\t\t}\n\n\t\tif (this.o.rtl){\n\t\t\tthis.picker.addClass('datepicker-rtl');\n\t\t}\n\n\t\tif (this.o.calendarWeeks) {\n\t\t\tthis.picker.find('.datepicker-days .datepicker-switch, thead .datepicker-title, tfoot .today, tfoot .clear')\n\t\t\t\t.attr('colspan', function(i, val){\n\t\t\t\t\treturn Number(val) + 1;\n\t\t\t\t});\n\t\t}\n\n\t\tthis._process_options({\n\t\t\tstartDate: this._o.startDate,\n\t\t\tendDate: this._o.endDate,\n\t\t\tdaysOfWeekDisabled: this.o.daysOfWeekDisabled,\n\t\t\tdaysOfWeekHighlighted: this.o.daysOfWeekHighlighted,\n\t\t\tdatesDisabled: this.o.datesDisabled\n\t\t});\n\n\t\tthis._allow_update = false;\n\t\tthis.setViewMode(this.o.startView);\n\t\tthis._allow_update = true;\n\n\t\tthis.fillDow();\n\t\tthis.fillMonths();\n\n\t\tthis.update();\n\n\t\tif (this.isInline){\n\t\t\tthis.show();\n\t\t}\n\t};\n\n\tDatepicker.prototype = {\n\t\tconstructor: Datepicker,\n\n\t\t_resolveViewName: function(view){\n\t\t\t$.each(DPGlobal.viewModes, function(i, viewMode){\n\t\t\t\tif (view === i || $.inArray(view, viewMode.names) !== -1){\n\t\t\t\t\tview = i;\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn view;\n\t\t},\n\n\t\t_resolveDaysOfWeek: function(daysOfWeek){\n\t\t\tif (!$.isArray(daysOfWeek))\n\t\t\t\tdaysOfWeek = daysOfWeek.split(/[,\\s]*/);\n\t\t\treturn $.map(daysOfWeek, Number);\n\t\t},\n\n\t\t_check_template: function(tmp){\n\t\t\ttry {\n\t\t\t\t// If empty\n\t\t\t\tif (tmp === undefined || tmp === \"\") {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\t// If no html, everything ok\n\t\t\t\tif ((tmp.match(/[<>]/g) || []).length <= 0) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\t// Checking if html is fine\n\t\t\t\tvar jDom = $(tmp);\n\t\t\t\treturn jDom.length > 0;\n\t\t\t}\n\t\t\tcatch (ex) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\n\t\t_process_options: function(opts){\n\t\t\t// Store raw options for reference\n\t\t\tthis._o = $.extend({}, this._o, opts);\n\t\t\t// Processed options\n\t\t\tvar o = this.o = $.extend({}, this._o);\n\n\t\t\t// Check if \"de-DE\" style date is available, if not language should\n\t\t\t// fallback to 2 letter code eg \"de\"\n\t\t\tvar lang = o.language;\n\t\t\tif (!dates[lang]){\n\t\t\t\tlang = lang.split('-')[0];\n\t\t\t\tif (!dates[lang])\n\t\t\t\t\tlang = defaults.language;\n\t\t\t}\n\t\t\to.language = lang;\n\n\t\t\t// Retrieve view index from any aliases\n\t\t\to.startView = this._resolveViewName(o.startView);\n\t\t\to.minViewMode = this._resolveViewName(o.minViewMode);\n\t\t\to.maxViewMode = this._resolveViewName(o.maxViewMode);\n\n\t\t\t// Check view is between min and max\n\t\t\to.startView = Math.max(this.o.minViewMode, Math.min(this.o.maxViewMode, o.startView));\n\n\t\t\t// true, false, or Number > 0\n\t\t\tif (o.multidate !== true){\n\t\t\t\to.multidate = Number(o.multidate) || false;\n\t\t\t\tif (o.multidate !== false)\n\t\t\t\t\to.multidate = Math.max(0, o.multidate);\n\t\t\t}\n\t\t\to.multidateSeparator = String(o.multidateSeparator);\n\n\t\t\to.weekStart %= 7;\n\t\t\to.weekEnd = (o.weekStart + 6) % 7;\n\n\t\t\tvar format = DPGlobal.parseFormat(o.format);\n\t\t\tif (o.startDate !== -Infinity){\n\t\t\t\tif (!!o.startDate){\n\t\t\t\t\tif (o.startDate instanceof Date)\n\t\t\t\t\t\to.startDate = this._local_to_utc(this._zero_time(o.startDate));\n\t\t\t\t\telse\n\t\t\t\t\t\to.startDate = DPGlobal.parseDate(o.startDate, format, o.language, o.assumeNearbyYear);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\to.startDate = -Infinity;\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (o.endDate !== Infinity){\n\t\t\t\tif (!!o.endDate){\n\t\t\t\t\tif (o.endDate instanceof Date)\n\t\t\t\t\t\to.endDate = this._local_to_utc(this._zero_time(o.endDate));\n\t\t\t\t\telse\n\t\t\t\t\t\to.endDate = DPGlobal.parseDate(o.endDate, format, o.language, o.assumeNearbyYear);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\to.endDate = Infinity;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\to.daysOfWeekDisabled = this._resolveDaysOfWeek(o.daysOfWeekDisabled||[]);\n\t\t\to.daysOfWeekHighlighted = this._resolveDaysOfWeek(o.daysOfWeekHighlighted||[]);\n\n\t\t\to.datesDisabled = o.datesDisabled||[];\n\t\t\tif (!$.isArray(o.datesDisabled)) {\n\t\t\t\to.datesDisabled = o.datesDisabled.split(',');\n\t\t\t}\n\t\t\to.datesDisabled = $.map(o.datesDisabled, function(d){\n\t\t\t\treturn DPGlobal.parseDate(d, format, o.language, o.assumeNearbyYear);\n\t\t\t});\n\n\t\t\tvar plc = String(o.orientation).toLowerCase().split(/\\s+/g),\n\t\t\t\t_plc = o.orientation.toLowerCase();\n\t\t\tplc = $.grep(plc, function(word){\n\t\t\t\treturn /^auto|left|right|top|bottom$/.test(word);\n\t\t\t});\n\t\t\to.orientation = {x: 'auto', y: 'auto'};\n\t\t\tif (!_plc || _plc === 'auto')\n\t\t\t\t; // no action\n\t\t\telse if (plc.length === 1){\n\t\t\t\tswitch (plc[0]){\n\t\t\t\t\tcase 'top':\n\t\t\t\t\tcase 'bottom':\n\t\t\t\t\t\to.orientation.y = plc[0];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'left':\n\t\t\t\t\tcase 'right':\n\t\t\t\t\t\to.orientation.x = plc[0];\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_plc = $.grep(plc, function(word){\n\t\t\t\t\treturn /^left|right$/.test(word);\n\t\t\t\t});\n\t\t\t\to.orientation.x = _plc[0] || 'auto';\n\n\t\t\t\t_plc = $.grep(plc, function(word){\n\t\t\t\t\treturn /^top|bottom$/.test(word);\n\t\t\t\t});\n\t\t\t\to.orientation.y = _plc[0] || 'auto';\n\t\t\t}\n\t\t\tif (o.defaultViewDate instanceof Date || typeof o.defaultViewDate === 'string') {\n\t\t\t\to.defaultViewDate = DPGlobal.parseDate(o.defaultViewDate, format, o.language, o.assumeNearbyYear);\n\t\t\t} else if (o.defaultViewDate) {\n\t\t\t\tvar year = o.defaultViewDate.year || new Date().getFullYear();\n\t\t\t\tvar month = o.defaultViewDate.month || 0;\n\t\t\t\tvar day = o.defaultViewDate.day || 1;\n\t\t\t\to.defaultViewDate = UTCDate(year, month, day);\n\t\t\t} else {\n\t\t\t\to.defaultViewDate = UTCToday();\n\t\t\t}\n\t\t},\n\t\t_events: [],\n\t\t_secondaryEvents: [],\n\t\t_applyEvents: function(evs){\n\t\t\tfor (var i=0, el, ch, ev; i < evs.length; i++){\n\t\t\t\tel = evs[i][0];\n\t\t\t\tif (evs[i].length === 2){\n\t\t\t\t\tch = undefined;\n\t\t\t\t\tev = evs[i][1];\n\t\t\t\t} else if (evs[i].length === 3){\n\t\t\t\t\tch = evs[i][1];\n\t\t\t\t\tev = evs[i][2];\n\t\t\t\t}\n\t\t\t\tel.on(ev, ch);\n\t\t\t}\n\t\t},\n\t\t_unapplyEvents: function(evs){\n\t\t\tfor (var i=0, el, ev, ch; i < evs.length; i++){\n\t\t\t\tel = evs[i][0];\n\t\t\t\tif (evs[i].length === 2){\n\t\t\t\t\tch = undefined;\n\t\t\t\t\tev = evs[i][1];\n\t\t\t\t} else if (evs[i].length === 3){\n\t\t\t\t\tch = evs[i][1];\n\t\t\t\t\tev = evs[i][2];\n\t\t\t\t}\n\t\t\t\tel.off(ev, ch);\n\t\t\t}\n\t\t},\n\t\t_buildEvents: function(){\n            var events = {\n                keyup: $.proxy(function(e){\n                    if ($.inArray(e.keyCode, [27, 37, 39, 38, 40, 32, 13, 9]) === -1)\n                        this.update();\n                }, this),\n                keydown: $.proxy(this.keydown, this),\n                paste: $.proxy(this.paste, this)\n            };\n\n            if (this.o.showOnFocus === true) {\n                events.focus = $.proxy(this.show, this);\n            }\n\n            if (this.isInput) { // single input\n                this._events = [\n                    [this.element, events]\n                ];\n            }\n            // component: input + button\n            else if (this.component && this.inputField.length) {\n                this._events = [\n                    // For components that are not readonly, allow keyboard nav\n                    [this.inputField, events],\n                    [this.component, {\n                        click: $.proxy(this.show, this)\n                    }]\n                ];\n            }\n\t\t\telse {\n\t\t\t\tthis._events = [\n\t\t\t\t\t[this.element, {\n\t\t\t\t\t\tclick: $.proxy(this.show, this),\n\t\t\t\t\t\tkeydown: $.proxy(this.keydown, this)\n\t\t\t\t\t}]\n\t\t\t\t];\n\t\t\t}\n\t\t\tthis._events.push(\n\t\t\t\t// Component: listen for blur on element descendants\n\t\t\t\t[this.element, '*', {\n\t\t\t\t\tblur: $.proxy(function(e){\n\t\t\t\t\t\tthis._focused_from = e.target;\n\t\t\t\t\t}, this)\n\t\t\t\t}],\n\t\t\t\t// Input: listen for blur on element\n\t\t\t\t[this.element, {\n\t\t\t\t\tblur: $.proxy(function(e){\n\t\t\t\t\t\tthis._focused_from = e.target;\n\t\t\t\t\t}, this)\n\t\t\t\t}]\n\t\t\t);\n\n\t\t\tif (this.o.immediateUpdates) {\n\t\t\t\t// Trigger input updates immediately on changed year/month\n\t\t\t\tthis._events.push([this.element, {\n\t\t\t\t\t'changeYear changeMonth': $.proxy(function(e){\n\t\t\t\t\t\tthis.update(e.date);\n\t\t\t\t\t}, this)\n\t\t\t\t}]);\n\t\t\t}\n\n\t\t\tthis._secondaryEvents = [\n\t\t\t\t[this.picker, {\n\t\t\t\t\tclick: $.proxy(this.click, this)\n\t\t\t\t}],\n\t\t\t\t[this.picker, '.prev, .next', {\n\t\t\t\t\tclick: $.proxy(this.navArrowsClick, this)\n\t\t\t\t}],\n\t\t\t\t[this.picker, '.day:not(.disabled)', {\n\t\t\t\t\tclick: $.proxy(this.dayCellClick, this)\n\t\t\t\t}],\n\t\t\t\t[$(window), {\n\t\t\t\t\tresize: $.proxy(this.place, this)\n\t\t\t\t}],\n\t\t\t\t[$(document), {\n\t\t\t\t\t'mousedown touchstart': $.proxy(function(e){\n\t\t\t\t\t\t// Clicked outside the datepicker, hide it\n\t\t\t\t\t\tif (!(\n\t\t\t\t\t\t\tthis.element.is(e.target) ||\n\t\t\t\t\t\t\tthis.element.find(e.target).length ||\n\t\t\t\t\t\t\tthis.picker.is(e.target) ||\n\t\t\t\t\t\t\tthis.picker.find(e.target).length ||\n\t\t\t\t\t\t\tthis.isInline\n\t\t\t\t\t\t)){\n\t\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t\t}\n\t\t\t\t\t}, this)\n\t\t\t\t}]\n\t\t\t];\n\t\t},\n\t\t_attachEvents: function(){\n\t\t\tthis._detachEvents();\n\t\t\tthis._applyEvents(this._events);\n\t\t},\n\t\t_detachEvents: function(){\n\t\t\tthis._unapplyEvents(this._events);\n\t\t},\n\t\t_attachSecondaryEvents: function(){\n\t\t\tthis._detachSecondaryEvents();\n\t\t\tthis._applyEvents(this._secondaryEvents);\n\t\t},\n\t\t_detachSecondaryEvents: function(){\n\t\t\tthis._unapplyEvents(this._secondaryEvents);\n\t\t},\n\t\t_trigger: function(event, altdate){\n\t\t\tvar date = altdate || this.dates.get(-1),\n\t\t\t\tlocal_date = this._utc_to_local(date);\n\n\t\t\tthis.element.trigger({\n\t\t\t\ttype: event,\n\t\t\t\tdate: local_date,\n\t\t\t\tviewMode: this.viewMode,\n\t\t\t\tdates: $.map(this.dates, this._utc_to_local),\n\t\t\t\tformat: $.proxy(function(ix, format){\n\t\t\t\t\tif (arguments.length === 0){\n\t\t\t\t\t\tix = this.dates.length - 1;\n\t\t\t\t\t\tformat = this.o.format;\n\t\t\t\t\t} else if (typeof ix === 'string'){\n\t\t\t\t\t\tformat = ix;\n\t\t\t\t\t\tix = this.dates.length - 1;\n\t\t\t\t\t}\n\t\t\t\t\tformat = format || this.o.format;\n\t\t\t\t\tvar date = this.dates.get(ix);\n\t\t\t\t\treturn DPGlobal.formatDate(date, format, this.o.language);\n\t\t\t\t}, this)\n\t\t\t});\n\t\t},\n\n\t\tshow: function(){\n\t\t\tif (this.inputField.prop('disabled') || (this.inputField.prop('readonly') && this.o.enableOnReadonly === false))\n\t\t\t\treturn;\n\t\t\tif (!this.isInline)\n\t\t\t\tthis.picker.appendTo(this.o.container);\n\t\t\tthis.place();\n\t\t\tthis.picker.show();\n\t\t\tthis._attachSecondaryEvents();\n\t\t\tthis._trigger('show');\n\t\t\tif ((window.navigator.msMaxTouchPoints || 'ontouchstart' in document) && this.o.disableTouchKeyboard) {\n\t\t\t\t$(this.element).blur();\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\thide: function(){\n\t\t\tif (this.isInline || !this.picker.is(':visible'))\n\t\t\t\treturn this;\n\t\t\tthis.focusDate = null;\n\t\t\tthis.picker.hide().detach();\n\t\t\tthis._detachSecondaryEvents();\n\t\t\tthis.setViewMode(this.o.startView);\n\n\t\t\tif (this.o.forceParse && this.inputField.val())\n\t\t\t\tthis.setValue();\n\t\t\tthis._trigger('hide');\n\t\t\treturn this;\n\t\t},\n\n\t\tdestroy: function(){\n\t\t\tthis.hide();\n\t\t\tthis._detachEvents();\n\t\t\tthis._detachSecondaryEvents();\n\t\t\tthis.picker.remove();\n\t\t\tdelete this.element.data().datepicker;\n\t\t\tif (!this.isInput){\n\t\t\t\tdelete this.element.data().date;\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\tpaste: function(e){\n\t\t\tvar dateString;\n\t\t\tif (e.originalEvent.clipboardData && e.originalEvent.clipboardData.types\n\t\t\t\t&& $.inArray('text/plain', e.originalEvent.clipboardData.types) !== -1) {\n\t\t\t\tdateString = e.originalEvent.clipboardData.getData('text/plain');\n\t\t\t} else if (window.clipboardData) {\n\t\t\t\tdateString = window.clipboardData.getData('Text');\n\t\t\t} else {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tthis.setDate(dateString);\n\t\t\tthis.update();\n\t\t\te.preventDefault();\n\t\t},\n\n\t\t_utc_to_local: function(utc){\n\t\t\tif (!utc) {\n\t\t\t\treturn utc;\n\t\t\t}\n\n\t\t\tvar local = new Date(utc.getTime() + (utc.getTimezoneOffset() * 60000));\n\n\t\t\tif (local.getTimezoneOffset() !== utc.getTimezoneOffset()) {\n\t\t\t\tlocal = new Date(utc.getTime() + (local.getTimezoneOffset() * 60000));\n\t\t\t}\n\n\t\t\treturn local;\n\t\t},\n\t\t_local_to_utc: function(local){\n\t\t\treturn local && new Date(local.getTime() - (local.getTimezoneOffset()*60000));\n\t\t},\n\t\t_zero_time: function(local){\n\t\t\treturn local && new Date(local.getFullYear(), local.getMonth(), local.getDate());\n\t\t},\n\t\t_zero_utc_time: function(utc){\n\t\t\treturn utc && UTCDate(utc.getUTCFullYear(), utc.getUTCMonth(), utc.getUTCDate());\n\t\t},\n\n\t\tgetDates: function(){\n\t\t\treturn $.map(this.dates, this._utc_to_local);\n\t\t},\n\n\t\tgetUTCDates: function(){\n\t\t\treturn $.map(this.dates, function(d){\n\t\t\t\treturn new Date(d);\n\t\t\t});\n\t\t},\n\n\t\tgetDate: function(){\n\t\t\treturn this._utc_to_local(this.getUTCDate());\n\t\t},\n\n\t\tgetUTCDate: function(){\n\t\t\tvar selected_date = this.dates.get(-1);\n\t\t\tif (selected_date !== undefined) {\n\t\t\t\treturn new Date(selected_date);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\n\t\tclearDates: function(){\n\t\t\tthis.inputField.val('');\n\t\t\tthis.update();\n\t\t\tthis._trigger('changeDate');\n\n\t\t\tif (this.o.autoclose) {\n\t\t\t\tthis.hide();\n\t\t\t}\n\t\t},\n\n\t\tsetDates: function(){\n\t\t\tvar args = $.isArray(arguments[0]) ? arguments[0] : arguments;\n\t\t\tthis.update.apply(this, args);\n\t\t\tthis._trigger('changeDate');\n\t\t\tthis.setValue();\n\t\t\treturn this;\n\t\t},\n\n\t\tsetUTCDates: function(){\n\t\t\tvar args = $.isArray(arguments[0]) ? arguments[0] : arguments;\n\t\t\tthis.setDates.apply(this, $.map(args, this._utc_to_local));\n\t\t\treturn this;\n\t\t},\n\n\t\tsetDate: alias('setDates'),\n\t\tsetUTCDate: alias('setUTCDates'),\n\t\tremove: alias('destroy', 'Method `remove` is deprecated and will be removed in version 2.0. Use `destroy` instead'),\n\n\t\tsetValue: function(){\n\t\t\tvar formatted = this.getFormattedDate();\n\t\t\tthis.inputField.val(formatted);\n\t\t\treturn this;\n\t\t},\n\n\t\tgetFormattedDate: function(format){\n\t\t\tif (format === undefined)\n\t\t\t\tformat = this.o.format;\n\n\t\t\tvar lang = this.o.language;\n\t\t\treturn $.map(this.dates, function(d){\n\t\t\t\treturn DPGlobal.formatDate(d, format, lang);\n\t\t\t}).join(this.o.multidateSeparator);\n\t\t},\n\n\t\tgetStartDate: function(){\n\t\t\treturn this.o.startDate;\n\t\t},\n\n\t\tsetStartDate: function(startDate){\n\t\t\tthis._process_options({startDate: startDate});\n\t\t\tthis.update();\n\t\t\tthis.updateNavArrows();\n\t\t\treturn this;\n\t\t},\n\n\t\tgetEndDate: function(){\n\t\t\treturn this.o.endDate;\n\t\t},\n\n\t\tsetEndDate: function(endDate){\n\t\t\tthis._process_options({endDate: endDate});\n\t\t\tthis.update();\n\t\t\tthis.updateNavArrows();\n\t\t\treturn this;\n\t\t},\n\n\t\tsetDaysOfWeekDisabled: function(daysOfWeekDisabled){\n\t\t\tthis._process_options({daysOfWeekDisabled: daysOfWeekDisabled});\n\t\t\tthis.update();\n\t\t\treturn this;\n\t\t},\n\n\t\tsetDaysOfWeekHighlighted: function(daysOfWeekHighlighted){\n\t\t\tthis._process_options({daysOfWeekHighlighted: daysOfWeekHighlighted});\n\t\t\tthis.update();\n\t\t\treturn this;\n\t\t},\n\n\t\tsetDatesDisabled: function(datesDisabled){\n\t\t\tthis._process_options({datesDisabled: datesDisabled});\n\t\t\tthis.update();\n\t\t\treturn this;\n\t\t},\n\n\t\tplace: function(){\n\t\t\tif (this.isInline)\n\t\t\t\treturn this;\n\t\t\tvar calendarWidth = this.picker.outerWidth(),\n\t\t\t\tcalendarHeight = this.picker.outerHeight(),\n\t\t\t\tvisualPadding = 10,\n\t\t\t\tcontainer = $(this.o.container),\n\t\t\t\twindowWidth = container.width(),\n\t\t\t\tscrollTop = this.o.container === 'body' ? $(document).scrollTop() : container.scrollTop(),\n\t\t\t\tappendOffset = container.offset();\n\n\t\t\tvar parentsZindex = [0];\n\t\t\tthis.element.parents().each(function(){\n\t\t\t\tvar itemZIndex = $(this).css('z-index');\n\t\t\t\tif (itemZIndex !== 'auto' && Number(itemZIndex) !== 0) parentsZindex.push(Number(itemZIndex));\n\t\t\t});\n\t\t\tvar zIndex = Math.max.apply(Math, parentsZindex) + this.o.zIndexOffset;\n\t\t\tvar offset = this.component ? this.component.parent().offset() : this.element.offset();\n\t\t\tvar height = this.component ? this.component.outerHeight(true) : this.element.outerHeight(false);\n\t\t\tvar width = this.component ? this.component.outerWidth(true) : this.element.outerWidth(false);\n\t\t\tvar left = offset.left - appendOffset.left;\n\t\t\tvar top = offset.top - appendOffset.top;\n\n\t\t\tif (this.o.container !== 'body') {\n\t\t\t\ttop += scrollTop;\n\t\t\t}\n\n\t\t\tthis.picker.removeClass(\n\t\t\t\t'datepicker-orient-top datepicker-orient-bottom '+\n\t\t\t\t'datepicker-orient-right datepicker-orient-left'\n\t\t\t);\n\n\t\t\tif (this.o.orientation.x !== 'auto'){\n\t\t\t\tthis.picker.addClass('datepicker-orient-' + this.o.orientation.x);\n\t\t\t\tif (this.o.orientation.x === 'right')\n\t\t\t\t\tleft -= calendarWidth - width;\n\t\t\t}\n\t\t\t// auto x orientation is best-placement: if it crosses a window\n\t\t\t// edge, fudge it sideways\n\t\t\telse {\n\t\t\t\tif (offset.left < 0) {\n\t\t\t\t\t// component is outside the window on the left side. Move it into visible range\n\t\t\t\t\tthis.picker.addClass('datepicker-orient-left');\n\t\t\t\t\tleft -= offset.left - visualPadding;\n\t\t\t\t} else if (left + calendarWidth > windowWidth) {\n\t\t\t\t\t// the calendar passes the widow right edge. Align it to component right side\n\t\t\t\t\tthis.picker.addClass('datepicker-orient-right');\n\t\t\t\t\tleft += width - calendarWidth;\n\t\t\t\t} else {\n\t\t\t\t\tif (this.o.rtl) {\n\t\t\t\t\t\t// Default to right\n\t\t\t\t\t\tthis.picker.addClass('datepicker-orient-right');\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Default to left\n\t\t\t\t\t\tthis.picker.addClass('datepicker-orient-left');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// auto y orientation is best-situation: top or bottom, no fudging,\n\t\t\t// decision based on which shows more of the calendar\n\t\t\tvar yorient = this.o.orientation.y,\n\t\t\t\ttop_overflow;\n\t\t\tif (yorient === 'auto'){\n\t\t\t\ttop_overflow = -scrollTop + top - calendarHeight;\n\t\t\t\tyorient = top_overflow < 0 ? 'bottom' : 'top';\n\t\t\t}\n\n\t\t\tthis.picker.addClass('datepicker-orient-' + yorient);\n\t\t\tif (yorient === 'top')\n\t\t\t\ttop -= calendarHeight + parseInt(this.picker.css('padding-top'));\n\t\t\telse\n\t\t\t\ttop += height;\n\n\t\t\tif (this.o.rtl) {\n\t\t\t\tvar right = windowWidth - (left + width);\n\t\t\t\tthis.picker.css({\n\t\t\t\t\ttop: top,\n\t\t\t\t\tright: right,\n\t\t\t\t\tzIndex: zIndex\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tthis.picker.css({\n\t\t\t\t\ttop: top,\n\t\t\t\t\tleft: left,\n\t\t\t\t\tzIndex: zIndex\n\t\t\t\t});\n\t\t\t}\n\t\t\treturn this;\n\t\t},\n\n\t\t_allow_update: true,\n\t\tupdate: function(){\n\t\t\tif (!this._allow_update)\n\t\t\t\treturn this;\n\n\t\t\tvar oldDates = this.dates.copy(),\n\t\t\t\tdates = [],\n\t\t\t\tfromArgs = false;\n\t\t\tif (arguments.length){\n\t\t\t\t$.each(arguments, $.proxy(function(i, date){\n\t\t\t\t\tif (date instanceof Date)\n\t\t\t\t\t\tdate = this._local_to_utc(date);\n\t\t\t\t\tdates.push(date);\n\t\t\t\t}, this));\n\t\t\t\tfromArgs = true;\n\t\t\t} else {\n\t\t\t\tdates = this.isInput\n\t\t\t\t\t\t? this.element.val()\n\t\t\t\t\t\t: this.element.data('date') || this.inputField.val();\n\t\t\t\tif (dates && this.o.multidate)\n\t\t\t\t\tdates = dates.split(this.o.multidateSeparator);\n\t\t\t\telse\n\t\t\t\t\tdates = [dates];\n\t\t\t\tdelete this.element.data().date;\n\t\t\t}\n\n\t\t\tdates = $.map(dates, $.proxy(function(date){\n\t\t\t\treturn DPGlobal.parseDate(date, this.o.format, this.o.language, this.o.assumeNearbyYear);\n\t\t\t}, this));\n\t\t\tdates = $.grep(dates, $.proxy(function(date){\n\t\t\t\treturn (\n\t\t\t\t\t!this.dateWithinRange(date) ||\n\t\t\t\t\t!date\n\t\t\t\t);\n\t\t\t}, this), true);\n\t\t\tthis.dates.replace(dates);\n\n\t\t\tif (this.o.updateViewDate) {\n\t\t\t\tif (this.dates.length)\n\t\t\t\t\tthis.viewDate = new Date(this.dates.get(-1));\n\t\t\t\telse if (this.viewDate < this.o.startDate)\n\t\t\t\t\tthis.viewDate = new Date(this.o.startDate);\n\t\t\t\telse if (this.viewDate > this.o.endDate)\n\t\t\t\t\tthis.viewDate = new Date(this.o.endDate);\n\t\t\t\telse\n\t\t\t\t\tthis.viewDate = this.o.defaultViewDate;\n\t\t\t}\n\n\t\t\tif (fromArgs){\n\t\t\t\t// setting date by clicking\n\t\t\t\tthis.setValue();\n\t\t\t\tthis.element.change();\n\t\t\t}\n\t\t\telse if (this.dates.length){\n\t\t\t\t// setting date by typing\n\t\t\t\tif (String(oldDates) !== String(this.dates) && fromArgs) {\n\t\t\t\t\tthis._trigger('changeDate');\n\t\t\t\t\tthis.element.change();\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (!this.dates.length && oldDates.length) {\n\t\t\t\tthis._trigger('clearDate');\n\t\t\t\tthis.element.change();\n\t\t\t}\n\n\t\t\tthis.fill();\n\t\t\treturn this;\n\t\t},\n\n\t\tfillDow: function(){\n      if (this.o.showWeekDays) {\n\t\t\tvar dowCnt = this.o.weekStart,\n\t\t\t\thtml = '<tr>';\n\t\t\tif (this.o.calendarWeeks){\n\t\t\t\thtml += '<th class=\"cw\">&#160;</th>';\n\t\t\t}\n\t\t\twhile (dowCnt < this.o.weekStart + 7){\n\t\t\t\thtml += '<th class=\"dow';\n        if ($.inArray(dowCnt, this.o.daysOfWeekDisabled) !== -1)\n          html += ' disabled';\n        html += '\">'+dates[this.o.language].daysMin[(dowCnt++)%7]+'</th>';\n\t\t\t}\n\t\t\thtml += '</tr>';\n\t\t\tthis.picker.find('.datepicker-days thead').append(html);\n      }\n\t\t},\n\n\t\tfillMonths: function(){\n      var localDate = this._utc_to_local(this.viewDate);\n\t\t\tvar html = '';\n\t\t\tvar focused;\n\t\t\tfor (var i = 0; i < 12; i++){\n\t\t\t\tfocused = localDate && localDate.getMonth() === i ? ' focused' : '';\n\t\t\t\thtml += '<span class=\"month' + focused + '\">' + dates[this.o.language].monthsShort[i] + '</span>';\n\t\t\t}\n\t\t\tthis.picker.find('.datepicker-months td').html(html);\n\t\t},\n\n\t\tsetRange: function(range){\n\t\t\tif (!range || !range.length)\n\t\t\t\tdelete this.range;\n\t\t\telse\n\t\t\t\tthis.range = $.map(range, function(d){\n\t\t\t\t\treturn d.valueOf();\n\t\t\t\t});\n\t\t\tthis.fill();\n\t\t},\n\n\t\tgetClassNames: function(date){\n\t\t\tvar cls = [],\n\t\t\t\tyear = this.viewDate.getUTCFullYear(),\n\t\t\t\tmonth = this.viewDate.getUTCMonth(),\n\t\t\t\ttoday = UTCToday();\n\t\t\tif (date.getUTCFullYear() < year || (date.getUTCFullYear() === year && date.getUTCMonth() < month)){\n\t\t\t\tcls.push('old');\n\t\t\t} else if (date.getUTCFullYear() > year || (date.getUTCFullYear() === year && date.getUTCMonth() > month)){\n\t\t\t\tcls.push('new');\n\t\t\t}\n\t\t\tif (this.focusDate && date.valueOf() === this.focusDate.valueOf())\n\t\t\t\tcls.push('focused');\n\t\t\t// Compare internal UTC date with UTC today, not local today\n\t\t\tif (this.o.todayHighlight && isUTCEquals(date, today)) {\n\t\t\t\tcls.push('today');\n\t\t\t}\n\t\t\tif (this.dates.contains(date) !== -1)\n\t\t\t\tcls.push('active');\n\t\t\tif (!this.dateWithinRange(date)){\n\t\t\t\tcls.push('disabled');\n\t\t\t}\n\t\t\tif (this.dateIsDisabled(date)){\n\t\t\t\tcls.push('disabled', 'disabled-date');\n\t\t\t}\n\t\t\tif ($.inArray(date.getUTCDay(), this.o.daysOfWeekHighlighted) !== -1){\n\t\t\t\tcls.push('highlighted');\n\t\t\t}\n\n\t\t\tif (this.range){\n\t\t\t\tif (date > this.range[0] && date < this.range[this.range.length-1]){\n\t\t\t\t\tcls.push('range');\n\t\t\t\t}\n\t\t\t\tif ($.inArray(date.valueOf(), this.range) !== -1){\n\t\t\t\t\tcls.push('selected');\n\t\t\t\t}\n\t\t\t\tif (date.valueOf() === this.range[0]){\n          cls.push('range-start');\n        }\n        if (date.valueOf() === this.range[this.range.length-1]){\n          cls.push('range-end');\n        }\n\t\t\t}\n\t\t\treturn cls;\n\t\t},\n\n\t\t_fill_yearsView: function(selector, cssClass, factor, year, startYear, endYear, beforeFn){\n\t\t\tvar html = '';\n\t\t\tvar step = factor / 10;\n\t\t\tvar view = this.picker.find(selector);\n\t\t\tvar startVal = Math.floor(year / factor) * factor;\n\t\t\tvar endVal = startVal + step * 9;\n\t\t\tvar focusedVal = Math.floor(this.viewDate.getFullYear() / step) * step;\n\t\t\tvar selected = $.map(this.dates, function(d){\n\t\t\t\treturn Math.floor(d.getUTCFullYear() / step) * step;\n\t\t\t});\n\n\t\t\tvar classes, tooltip, before;\n\t\t\tfor (var currVal = startVal - step; currVal <= endVal + step; currVal += step) {\n\t\t\t\tclasses = [cssClass];\n\t\t\t\ttooltip = null;\n\n\t\t\t\tif (currVal === startVal - step) {\n\t\t\t\t\tclasses.push('old');\n\t\t\t\t} else if (currVal === endVal + step) {\n\t\t\t\t\tclasses.push('new');\n\t\t\t\t}\n\t\t\t\tif ($.inArray(currVal, selected) !== -1) {\n\t\t\t\t\tclasses.push('active');\n\t\t\t\t}\n\t\t\t\tif (currVal < startYear || currVal > endYear) {\n\t\t\t\t\tclasses.push('disabled');\n\t\t\t\t}\n\t\t\t\tif (currVal === focusedVal) {\n\t\t\t\t  classes.push('focused');\n        }\n\n\t\t\t\tif (beforeFn !== $.noop) {\n\t\t\t\t\tbefore = beforeFn(new Date(currVal, 0, 1));\n\t\t\t\t\tif (before === undefined) {\n\t\t\t\t\t\tbefore = {};\n\t\t\t\t\t} else if (typeof before === 'boolean') {\n\t\t\t\t\t\tbefore = {enabled: before};\n\t\t\t\t\t} else if (typeof before === 'string') {\n\t\t\t\t\t\tbefore = {classes: before};\n\t\t\t\t\t}\n\t\t\t\t\tif (before.enabled === false) {\n\t\t\t\t\t\tclasses.push('disabled');\n\t\t\t\t\t}\n\t\t\t\t\tif (before.classes) {\n\t\t\t\t\t\tclasses = classes.concat(before.classes.split(/\\s+/));\n\t\t\t\t\t}\n\t\t\t\t\tif (before.tooltip) {\n\t\t\t\t\t\ttooltip = before.tooltip;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\thtml += '<span class=\"' + classes.join(' ') + '\"' + (tooltip ? ' title=\"' + tooltip + '\"' : '') + '>' + currVal + '</span>';\n\t\t\t}\n\n\t\t\tview.find('.datepicker-switch').text(startVal + '-' + endVal);\n\t\t\tview.find('td').html(html);\n\t\t},\n\n\t\tfill: function(){\n\t\t\tvar d = new Date(this.viewDate),\n\t\t\t\tyear = d.getUTCFullYear(),\n\t\t\t\tmonth = d.getUTCMonth(),\n\t\t\t\tstartYear = this.o.startDate !== -Infinity ? this.o.startDate.getUTCFullYear() : -Infinity,\n\t\t\t\tstartMonth = this.o.startDate !== -Infinity ? this.o.startDate.getUTCMonth() : -Infinity,\n\t\t\t\tendYear = this.o.endDate !== Infinity ? this.o.endDate.getUTCFullYear() : Infinity,\n\t\t\t\tendMonth = this.o.endDate !== Infinity ? this.o.endDate.getUTCMonth() : Infinity,\n\t\t\t\ttodaytxt = dates[this.o.language].today || dates['en'].today || '',\n\t\t\t\tcleartxt = dates[this.o.language].clear || dates['en'].clear || '',\n\t\t\t\ttitleFormat = dates[this.o.language].titleFormat || dates['en'].titleFormat,\n\t\t\t\ttooltip,\n\t\t\t\tbefore;\n\t\t\tif (isNaN(year) || isNaN(month))\n\t\t\t\treturn;\n\t\t\tthis.picker.find('.datepicker-days .datepicker-switch')\n\t\t\t\t\t\t.text(DPGlobal.formatDate(d, titleFormat, this.o.language));\n\t\t\tthis.picker.find('tfoot .today')\n\t\t\t\t\t\t.text(todaytxt)\n\t\t\t\t\t\t.css('display', this.o.todayBtn === true || this.o.todayBtn === 'linked' ? 'table-cell' : 'none');\n\t\t\tthis.picker.find('tfoot .clear')\n\t\t\t\t\t\t.text(cleartxt)\n\t\t\t\t\t\t.css('display', this.o.clearBtn === true ? 'table-cell' : 'none');\n\t\t\tthis.picker.find('thead .datepicker-title')\n\t\t\t\t\t\t.text(this.o.title)\n\t\t\t\t\t\t.css('display', typeof this.o.title === 'string' && this.o.title !== '' ? 'table-cell' : 'none');\n\t\t\tthis.updateNavArrows();\n\t\t\tthis.fillMonths();\n\t\t\tvar prevMonth = UTCDate(year, month, 0),\n\t\t\t\tday = prevMonth.getUTCDate();\n\t\t\tprevMonth.setUTCDate(day - (prevMonth.getUTCDay() - this.o.weekStart + 7)%7);\n\t\t\tvar nextMonth = new Date(prevMonth);\n\t\t\tif (prevMonth.getUTCFullYear() < 100){\n        nextMonth.setUTCFullYear(prevMonth.getUTCFullYear());\n      }\n\t\t\tnextMonth.setUTCDate(nextMonth.getUTCDate() + 42);\n\t\t\tnextMonth = nextMonth.valueOf();\n\t\t\tvar html = [];\n\t\t\tvar weekDay, clsName;\n\t\t\twhile (prevMonth.valueOf() < nextMonth){\n\t\t\t\tweekDay = prevMonth.getUTCDay();\n\t\t\t\tif (weekDay === this.o.weekStart){\n\t\t\t\t\thtml.push('<tr>');\n\t\t\t\t\tif (this.o.calendarWeeks){\n\t\t\t\t\t\t// ISO 8601: First week contains first thursday.\n\t\t\t\t\t\t// ISO also states week starts on Monday, but we can be more abstract here.\n\t\t\t\t\t\tvar\n\t\t\t\t\t\t\t// Start of current week: based on weekstart/current date\n\t\t\t\t\t\t\tws = new Date(+prevMonth + (this.o.weekStart - weekDay - 7) % 7 * 864e5),\n\t\t\t\t\t\t\t// Thursday of this week\n\t\t\t\t\t\t\tth = new Date(Number(ws) + (7 + 4 - ws.getUTCDay()) % 7 * 864e5),\n\t\t\t\t\t\t\t// First Thursday of year, year from thursday\n\t\t\t\t\t\t\tyth = new Date(Number(yth = UTCDate(th.getUTCFullYear(), 0, 1)) + (7 + 4 - yth.getUTCDay()) % 7 * 864e5),\n\t\t\t\t\t\t\t// Calendar week: ms between thursdays, div ms per day, div 7 days\n\t\t\t\t\t\t\tcalWeek = (th - yth) / 864e5 / 7 + 1;\n\t\t\t\t\t\thtml.push('<td class=\"cw\">'+ calWeek +'</td>');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tclsName = this.getClassNames(prevMonth);\n\t\t\t\tclsName.push('day');\n\n\t\t\t\tvar content = prevMonth.getUTCDate();\n\n\t\t\t\tif (this.o.beforeShowDay !== $.noop){\n\t\t\t\t\tbefore = this.o.beforeShowDay(this._utc_to_local(prevMonth));\n\t\t\t\t\tif (before === undefined)\n\t\t\t\t\t\tbefore = {};\n\t\t\t\t\telse if (typeof before === 'boolean')\n\t\t\t\t\t\tbefore = {enabled: before};\n\t\t\t\t\telse if (typeof before === 'string')\n\t\t\t\t\t\tbefore = {classes: before};\n\t\t\t\t\tif (before.enabled === false)\n\t\t\t\t\t\tclsName.push('disabled');\n\t\t\t\t\tif (before.classes)\n\t\t\t\t\t\tclsName = clsName.concat(before.classes.split(/\\s+/));\n\t\t\t\t\tif (before.tooltip)\n\t\t\t\t\t\ttooltip = before.tooltip;\n\t\t\t\t\tif (before.content)\n\t\t\t\t\t\tcontent = before.content;\n\t\t\t\t}\n\n\t\t\t\t//Check if uniqueSort exists (supported by jquery >=1.12 and >=2.2)\n\t\t\t\t//Fallback to unique function for older jquery versions\n\t\t\t\tif ($.isFunction($.uniqueSort)) {\n\t\t\t\t\tclsName = $.uniqueSort(clsName);\n\t\t\t\t} else {\n\t\t\t\t\tclsName = $.unique(clsName);\n\t\t\t\t}\n\n\t\t\t\thtml.push('<td class=\"'+clsName.join(' ')+'\"' + (tooltip ? ' title=\"'+tooltip+'\"' : '') + ' data-date=\"' + prevMonth.getTime().toString() + '\">' + content + '</td>');\n\t\t\t\ttooltip = null;\n\t\t\t\tif (weekDay === this.o.weekEnd){\n\t\t\t\t\thtml.push('</tr>');\n\t\t\t\t}\n\t\t\t\tprevMonth.setUTCDate(prevMonth.getUTCDate() + 1);\n\t\t\t}\n\t\t\tthis.picker.find('.datepicker-days tbody').html(html.join(''));\n\n\t\t\tvar monthsTitle = dates[this.o.language].monthsTitle || dates['en'].monthsTitle || 'Months';\n\t\t\tvar months = this.picker.find('.datepicker-months')\n\t\t\t\t\t\t.find('.datepicker-switch')\n\t\t\t\t\t\t\t.text(this.o.maxViewMode < 2 ? monthsTitle : year)\n\t\t\t\t\t\t\t.end()\n\t\t\t\t\t\t.find('tbody span').removeClass('active');\n\n\t\t\t$.each(this.dates, function(i, d){\n\t\t\t\tif (d.getUTCFullYear() === year)\n\t\t\t\t\tmonths.eq(d.getUTCMonth()).addClass('active');\n\t\t\t});\n\n\t\t\tif (year < startYear || year > endYear){\n\t\t\t\tmonths.addClass('disabled');\n\t\t\t}\n\t\t\tif (year === startYear){\n\t\t\t\tmonths.slice(0, startMonth).addClass('disabled');\n\t\t\t}\n\t\t\tif (year === endYear){\n\t\t\t\tmonths.slice(endMonth+1).addClass('disabled');\n\t\t\t}\n\n\t\t\tif (this.o.beforeShowMonth !== $.noop){\n\t\t\t\tvar that = this;\n\t\t\t\t$.each(months, function(i, month){\n          var moDate = new Date(year, i, 1);\n          var before = that.o.beforeShowMonth(moDate);\n\t\t\t\t\tif (before === undefined)\n\t\t\t\t\t\tbefore = {};\n\t\t\t\t\telse if (typeof before === 'boolean')\n\t\t\t\t\t\tbefore = {enabled: before};\n\t\t\t\t\telse if (typeof before === 'string')\n\t\t\t\t\t\tbefore = {classes: before};\n\t\t\t\t\tif (before.enabled === false && !$(month).hasClass('disabled'))\n\t\t\t\t\t    $(month).addClass('disabled');\n\t\t\t\t\tif (before.classes)\n\t\t\t\t\t    $(month).addClass(before.classes);\n\t\t\t\t\tif (before.tooltip)\n\t\t\t\t\t    $(month).prop('title', before.tooltip);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// Generating decade/years picker\n\t\t\tthis._fill_yearsView(\n\t\t\t\t'.datepicker-years',\n\t\t\t\t'year',\n\t\t\t\t10,\n\t\t\t\tyear,\n\t\t\t\tstartYear,\n\t\t\t\tendYear,\n\t\t\t\tthis.o.beforeShowYear\n\t\t\t);\n\n\t\t\t// Generating century/decades picker\n\t\t\tthis._fill_yearsView(\n\t\t\t\t'.datepicker-decades',\n\t\t\t\t'decade',\n\t\t\t\t100,\n\t\t\t\tyear,\n\t\t\t\tstartYear,\n\t\t\t\tendYear,\n\t\t\t\tthis.o.beforeShowDecade\n\t\t\t);\n\n\t\t\t// Generating millennium/centuries picker\n\t\t\tthis._fill_yearsView(\n\t\t\t\t'.datepicker-centuries',\n\t\t\t\t'century',\n\t\t\t\t1000,\n\t\t\t\tyear,\n\t\t\t\tstartYear,\n\t\t\t\tendYear,\n\t\t\t\tthis.o.beforeShowCentury\n\t\t\t);\n\t\t},\n\n\t\tupdateNavArrows: function(){\n\t\t\tif (!this._allow_update)\n\t\t\t\treturn;\n\n\t\t\tvar d = new Date(this.viewDate),\n\t\t\t\tyear = d.getUTCFullYear(),\n\t\t\t\tmonth = d.getUTCMonth(),\n\t\t\t\tstartYear = this.o.startDate !== -Infinity ? this.o.startDate.getUTCFullYear() : -Infinity,\n\t\t\t\tstartMonth = this.o.startDate !== -Infinity ? this.o.startDate.getUTCMonth() : -Infinity,\n\t\t\t\tendYear = this.o.endDate !== Infinity ? this.o.endDate.getUTCFullYear() : Infinity,\n\t\t\t\tendMonth = this.o.endDate !== Infinity ? this.o.endDate.getUTCMonth() : Infinity,\n\t\t\t\tprevIsDisabled,\n\t\t\t\tnextIsDisabled,\n\t\t\t\tfactor = 1;\n\t\t\tswitch (this.viewMode){\n\t\t\t\tcase 0:\n\t\t\t\t\tprevIsDisabled = year <= startYear && month <= startMonth;\n\t\t\t\t\tnextIsDisabled = year >= endYear && month >= endMonth;\n\t\t\t\t\tbreak;\n\t\t\t\tcase 4:\n\t\t\t\t\tfactor *= 10;\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 3:\n\t\t\t\t\tfactor *= 10;\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 2:\n\t\t\t\t\tfactor *= 10;\n\t\t\t\t\t/* falls through */\n\t\t\t\tcase 1:\n\t\t\t\t\tprevIsDisabled = Math.floor(year / factor) * factor <= startYear;\n\t\t\t\t\tnextIsDisabled = Math.floor(year / factor) * factor + factor >= endYear;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tthis.picker.find('.prev').toggleClass('disabled', prevIsDisabled);\n\t\t\tthis.picker.find('.next').toggleClass('disabled', nextIsDisabled);\n\t\t},\n\n\t\tclick: function(e){\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\n\t\t\tvar target, dir, day, year, month;\n\t\t\ttarget = $(e.target);\n\n\t\t\t// Clicked on the switch\n\t\t\tif (target.hasClass('datepicker-switch') && this.viewMode !== this.o.maxViewMode){\n\t\t\t\tthis.setViewMode(this.viewMode + 1);\n\t\t\t}\n\n\t\t\t// Clicked on today button\n\t\t\tif (target.hasClass('today') && !target.hasClass('day')){\n\t\t\t\tthis.setViewMode(0);\n\t\t\t\tthis._setDate(UTCToday(), this.o.todayBtn === 'linked' ? null : 'view');\n\t\t\t}\n\n\t\t\t// Clicked on clear button\n\t\t\tif (target.hasClass('clear')){\n\t\t\t\tthis.clearDates();\n\t\t\t}\n\n\t\t\tif (!target.hasClass('disabled')){\n\t\t\t\t// Clicked on a month, year, decade, century\n\t\t\t\tif (target.hasClass('month')\n\t\t\t\t\t\t|| target.hasClass('year')\n\t\t\t\t\t\t|| target.hasClass('decade')\n\t\t\t\t\t\t|| target.hasClass('century')) {\n\t\t\t\t\tthis.viewDate.setUTCDate(1);\n\n\t\t\t\t\tday = 1;\n\t\t\t\t\tif (this.viewMode === 1){\n\t\t\t\t\t\tmonth = target.parent().find('span').index(target);\n\t\t\t\t\t\tyear = this.viewDate.getUTCFullYear();\n\t\t\t\t\t\tthis.viewDate.setUTCMonth(month);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmonth = 0;\n\t\t\t\t\t\tyear = Number(target.text());\n\t\t\t\t\t\tthis.viewDate.setUTCFullYear(year);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis._trigger(DPGlobal.viewModes[this.viewMode - 1].e, this.viewDate);\n\n\t\t\t\t\tif (this.viewMode === this.o.minViewMode){\n\t\t\t\t\t\tthis._setDate(UTCDate(year, month, day));\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.setViewMode(this.viewMode - 1);\n\t\t\t\t\t\tthis.fill();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.picker.is(':visible') && this._focused_from){\n\t\t\t\tthis._focused_from.focus();\n\t\t\t}\n\t\t\tdelete this._focused_from;\n\t\t},\n\n\t\tdayCellClick: function(e){\n\t\t\tvar $target = $(e.currentTarget);\n\t\t\tvar timestamp = $target.data('date');\n\t\t\tvar date = new Date(timestamp);\n\n\t\t\tif (this.o.updateViewDate) {\n\t\t\t\tif (date.getUTCFullYear() !== this.viewDate.getUTCFullYear()) {\n\t\t\t\t\tthis._trigger('changeYear', this.viewDate);\n\t\t\t\t}\n\n\t\t\t\tif (date.getUTCMonth() !== this.viewDate.getUTCMonth()) {\n\t\t\t\t\tthis._trigger('changeMonth', this.viewDate);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis._setDate(date);\n\t\t},\n\n\t\t// Clicked on prev or next\n\t\tnavArrowsClick: function(e){\n\t\t\tvar $target = $(e.currentTarget);\n\t\t\tvar dir = $target.hasClass('prev') ? -1 : 1;\n\t\t\tif (this.viewMode !== 0){\n\t\t\t\tdir *= DPGlobal.viewModes[this.viewMode].navStep * 12;\n\t\t\t}\n\t\t\tthis.viewDate = this.moveMonth(this.viewDate, dir);\n\t\t\tthis._trigger(DPGlobal.viewModes[this.viewMode].e, this.viewDate);\n\t\t\tthis.fill();\n\t\t},\n\n\t\t_toggle_multidate: function(date){\n\t\t\tvar ix = this.dates.contains(date);\n\t\t\tif (!date){\n\t\t\t\tthis.dates.clear();\n\t\t\t}\n\n\t\t\tif (ix !== -1){\n\t\t\t\tif (this.o.multidate === true || this.o.multidate > 1 || this.o.toggleActive){\n\t\t\t\t\tthis.dates.remove(ix);\n\t\t\t\t}\n\t\t\t} else if (this.o.multidate === false) {\n\t\t\t\tthis.dates.clear();\n\t\t\t\tthis.dates.push(date);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.dates.push(date);\n\t\t\t}\n\n\t\t\tif (typeof this.o.multidate === 'number')\n\t\t\t\twhile (this.dates.length > this.o.multidate)\n\t\t\t\t\tthis.dates.remove(0);\n\t\t},\n\n\t\t_setDate: function(date, which){\n\t\t\tif (!which || which === 'date')\n\t\t\t\tthis._toggle_multidate(date && new Date(date));\n\t\t\tif ((!which && this.o.updateViewDate) || which === 'view')\n\t\t\t\tthis.viewDate = date && new Date(date);\n\n\t\t\tthis.fill();\n\t\t\tthis.setValue();\n\t\t\tif (!which || which !== 'view') {\n\t\t\t\tthis._trigger('changeDate');\n\t\t\t}\n\t\t\tthis.inputField.trigger('change');\n\t\t\tif (this.o.autoclose && (!which || which === 'date')){\n\t\t\t\tthis.hide();\n\t\t\t}\n\t\t},\n\n\t\tmoveDay: function(date, dir){\n\t\t\tvar newDate = new Date(date);\n\t\t\tnewDate.setUTCDate(date.getUTCDate() + dir);\n\n\t\t\treturn newDate;\n\t\t},\n\n\t\tmoveWeek: function(date, dir){\n\t\t\treturn this.moveDay(date, dir * 7);\n\t\t},\n\n\t\tmoveMonth: function(date, dir){\n\t\t\tif (!isValidDate(date))\n\t\t\t\treturn this.o.defaultViewDate;\n\t\t\tif (!dir)\n\t\t\t\treturn date;\n\t\t\tvar new_date = new Date(date.valueOf()),\n\t\t\t\tday = new_date.getUTCDate(),\n\t\t\t\tmonth = new_date.getUTCMonth(),\n\t\t\t\tmag = Math.abs(dir),\n\t\t\t\tnew_month, test;\n\t\t\tdir = dir > 0 ? 1 : -1;\n\t\t\tif (mag === 1){\n\t\t\t\ttest = dir === -1\n\t\t\t\t\t// If going back one month, make sure month is not current month\n\t\t\t\t\t// (eg, Mar 31 -> Feb 31 == Feb 28, not Mar 02)\n\t\t\t\t\t? function(){\n\t\t\t\t\t\treturn new_date.getUTCMonth() === month;\n\t\t\t\t\t}\n\t\t\t\t\t// If going forward one month, make sure month is as expected\n\t\t\t\t\t// (eg, Jan 31 -> Feb 31 == Feb 28, not Mar 02)\n\t\t\t\t\t: function(){\n\t\t\t\t\t\treturn new_date.getUTCMonth() !== new_month;\n\t\t\t\t\t};\n\t\t\t\tnew_month = month + dir;\n\t\t\t\tnew_date.setUTCMonth(new_month);\n\t\t\t\t// Dec -> Jan (12) or Jan -> Dec (-1) -- limit expected date to 0-11\n\t\t\t\tnew_month = (new_month + 12) % 12;\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// For magnitudes >1, move one month at a time...\n\t\t\t\tfor (var i=0; i < mag; i++)\n\t\t\t\t\t// ...which might decrease the day (eg, Jan 31 to Feb 28, etc)...\n\t\t\t\t\tnew_date = this.moveMonth(new_date, dir);\n\t\t\t\t// ...then reset the day, keeping it in the new month\n\t\t\t\tnew_month = new_date.getUTCMonth();\n\t\t\t\tnew_date.setUTCDate(day);\n\t\t\t\ttest = function(){\n\t\t\t\t\treturn new_month !== new_date.getUTCMonth();\n\t\t\t\t};\n\t\t\t}\n\t\t\t// Common date-resetting loop -- if date is beyond end of month, make it\n\t\t\t// end of month\n\t\t\twhile (test()){\n\t\t\t\tnew_date.setUTCDate(--day);\n\t\t\t\tnew_date.setUTCMonth(new_month);\n\t\t\t}\n\t\t\treturn new_date;\n\t\t},\n\n\t\tmoveYear: function(date, dir){\n\t\t\treturn this.moveMonth(date, dir*12);\n\t\t},\n\n\t\tmoveAvailableDate: function(date, dir, fn){\n\t\t\tdo {\n\t\t\t\tdate = this[fn](date, dir);\n\n\t\t\t\tif (!this.dateWithinRange(date))\n\t\t\t\t\treturn false;\n\n\t\t\t\tfn = 'moveDay';\n\t\t\t}\n\t\t\twhile (this.dateIsDisabled(date));\n\n\t\t\treturn date;\n\t\t},\n\n\t\tweekOfDateIsDisabled: function(date){\n\t\t\treturn $.inArray(date.getUTCDay(), this.o.daysOfWeekDisabled) !== -1;\n\t\t},\n\n\t\tdateIsDisabled: function(date){\n\t\t\treturn (\n\t\t\t\tthis.weekOfDateIsDisabled(date) ||\n\t\t\t\t$.grep(this.o.datesDisabled, function(d){\n\t\t\t\t\treturn isUTCEquals(date, d);\n\t\t\t\t}).length > 0\n\t\t\t);\n\t\t},\n\n\t\tdateWithinRange: function(date){\n\t\t\treturn date >= this.o.startDate && date <= this.o.endDate;\n\t\t},\n\n\t\tkeydown: function(e){\n\t\t\tif (!this.picker.is(':visible')){\n\t\t\t\tif (e.keyCode === 40 || e.keyCode === 27) { // allow down to re-show picker\n\t\t\t\t\tthis.show();\n\t\t\t\t\te.stopPropagation();\n        }\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar dateChanged = false,\n\t\t\t\tdir, newViewDate,\n\t\t\t\tfocusDate = this.focusDate || this.viewDate;\n\t\t\tswitch (e.keyCode){\n\t\t\t\tcase 27: // escape\n\t\t\t\t\tif (this.focusDate){\n\t\t\t\t\t\tthis.focusDate = null;\n\t\t\t\t\t\tthis.viewDate = this.dates.get(-1) || this.viewDate;\n\t\t\t\t\t\tthis.fill();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tthis.hide();\n\t\t\t\t\te.preventDefault();\n\t\t\t\t\te.stopPropagation();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 37: // left\n\t\t\t\tcase 38: // up\n\t\t\t\tcase 39: // right\n\t\t\t\tcase 40: // down\n\t\t\t\t\tif (!this.o.keyboardNavigation || this.o.daysOfWeekDisabled.length === 7)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdir = e.keyCode === 37 || e.keyCode === 38 ? -1 : 1;\n          if (this.viewMode === 0) {\n  \t\t\t\t\tif (e.ctrlKey){\n  \t\t\t\t\t\tnewViewDate = this.moveAvailableDate(focusDate, dir, 'moveYear');\n\n  \t\t\t\t\t\tif (newViewDate)\n  \t\t\t\t\t\t\tthis._trigger('changeYear', this.viewDate);\n  \t\t\t\t\t} else if (e.shiftKey){\n  \t\t\t\t\t\tnewViewDate = this.moveAvailableDate(focusDate, dir, 'moveMonth');\n\n  \t\t\t\t\t\tif (newViewDate)\n  \t\t\t\t\t\t\tthis._trigger('changeMonth', this.viewDate);\n  \t\t\t\t\t} else if (e.keyCode === 37 || e.keyCode === 39){\n  \t\t\t\t\t\tnewViewDate = this.moveAvailableDate(focusDate, dir, 'moveDay');\n  \t\t\t\t\t} else if (!this.weekOfDateIsDisabled(focusDate)){\n  \t\t\t\t\t\tnewViewDate = this.moveAvailableDate(focusDate, dir, 'moveWeek');\n  \t\t\t\t\t}\n          } else if (this.viewMode === 1) {\n            if (e.keyCode === 38 || e.keyCode === 40) {\n              dir = dir * 4;\n            }\n            newViewDate = this.moveAvailableDate(focusDate, dir, 'moveMonth');\n          } else if (this.viewMode === 2) {\n            if (e.keyCode === 38 || e.keyCode === 40) {\n              dir = dir * 4;\n            }\n            newViewDate = this.moveAvailableDate(focusDate, dir, 'moveYear');\n          }\n\t\t\t\t\tif (newViewDate){\n\t\t\t\t\t\tthis.focusDate = this.viewDate = newViewDate;\n\t\t\t\t\t\tthis.setValue();\n\t\t\t\t\t\tthis.fill();\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 13: // enter\n\t\t\t\t\tif (!this.o.forceParse)\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tfocusDate = this.focusDate || this.dates.get(-1) || this.viewDate;\n\t\t\t\t\tif (this.o.keyboardNavigation) {\n\t\t\t\t\t\tthis._toggle_multidate(focusDate);\n\t\t\t\t\t\tdateChanged = true;\n\t\t\t\t\t}\n\t\t\t\t\tthis.focusDate = null;\n\t\t\t\t\tthis.viewDate = this.dates.get(-1) || this.viewDate;\n\t\t\t\t\tthis.setValue();\n\t\t\t\t\tthis.fill();\n\t\t\t\t\tif (this.picker.is(':visible')){\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\te.stopPropagation();\n\t\t\t\t\t\tif (this.o.autoclose)\n\t\t\t\t\t\t\tthis.hide();\n\t\t\t\t\t}\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9: // tab\n\t\t\t\t\tthis.focusDate = null;\n\t\t\t\t\tthis.viewDate = this.dates.get(-1) || this.viewDate;\n\t\t\t\t\tthis.fill();\n\t\t\t\t\tthis.hide();\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (dateChanged){\n\t\t\t\tif (this.dates.length)\n\t\t\t\t\tthis._trigger('changeDate');\n\t\t\t\telse\n\t\t\t\t\tthis._trigger('clearDate');\n\t\t\t\tthis.inputField.trigger('change');\n\t\t\t}\n\t\t},\n\n\t\tsetViewMode: function(viewMode){\n\t\t\tthis.viewMode = viewMode;\n\t\t\tthis.picker\n\t\t\t\t.children('div')\n\t\t\t\t.hide()\n\t\t\t\t.filter('.datepicker-' + DPGlobal.viewModes[this.viewMode].clsName)\n\t\t\t\t\t.show();\n\t\t\tthis.updateNavArrows();\n      this._trigger('changeViewMode', new Date(this.viewDate));\n\t\t}\n\t};\n\n\tvar DateRangePicker = function(element, options){\n\t\t$.data(element, 'datepicker', this);\n\t\tthis.element = $(element);\n\t\tthis.inputs = $.map(options.inputs, function(i){\n\t\t\treturn i.jquery ? i[0] : i;\n\t\t});\n\t\tdelete options.inputs;\n\n\t\tthis.keepEmptyValues = options.keepEmptyValues;\n\t\tdelete options.keepEmptyValues;\n\n\t\tdatepickerPlugin.call($(this.inputs), options)\n\t\t\t.on('changeDate', $.proxy(this.dateUpdated, this));\n\n\t\tthis.pickers = $.map(this.inputs, function(i){\n\t\t\treturn $.data(i, 'datepicker');\n\t\t});\n\t\tthis.updateDates();\n\t};\n\tDateRangePicker.prototype = {\n\t\tupdateDates: function(){\n\t\t\tthis.dates = $.map(this.pickers, function(i){\n\t\t\t\treturn i.getUTCDate();\n\t\t\t});\n\t\t\tthis.updateRanges();\n\t\t},\n\t\tupdateRanges: function(){\n\t\t\tvar range = $.map(this.dates, function(d){\n\t\t\t\treturn d.valueOf();\n\t\t\t});\n\t\t\t$.each(this.pickers, function(i, p){\n\t\t\t\tp.setRange(range);\n\t\t\t});\n\t\t},\n\t\tdateUpdated: function(e){\n\t\t\t// `this.updating` is a workaround for preventing infinite recursion\n\t\t\t// between `changeDate` triggering and `setUTCDate` calling.  Until\n\t\t\t// there is a better mechanism.\n\t\t\tif (this.updating)\n\t\t\t\treturn;\n\t\t\tthis.updating = true;\n\n\t\t\tvar dp = $.data(e.target, 'datepicker');\n\n\t\t\tif (dp === undefined) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar new_date = dp.getUTCDate(),\n\t\t\t\tkeep_empty_values = this.keepEmptyValues,\n\t\t\t\ti = $.inArray(e.target, this.inputs),\n\t\t\t\tj = i - 1,\n\t\t\t\tk = i + 1,\n\t\t\t\tl = this.inputs.length;\n\t\t\tif (i === -1)\n\t\t\t\treturn;\n\n\t\t\t$.each(this.pickers, function(i, p){\n\t\t\t\tif (!p.getUTCDate() && (p === dp || !keep_empty_values))\n\t\t\t\t\tp.setUTCDate(new_date);\n\t\t\t});\n\n\t\t\tif (new_date < this.dates[j]){\n\t\t\t\t// Date being moved earlier/left\n\t\t\t\twhile (j >= 0 && new_date < this.dates[j]){\n\t\t\t\t\tthis.pickers[j--].setUTCDate(new_date);\n\t\t\t\t}\n\t\t\t} else if (new_date > this.dates[k]){\n\t\t\t\t// Date being moved later/right\n\t\t\t\twhile (k < l && new_date > this.dates[k]){\n\t\t\t\t\tthis.pickers[k++].setUTCDate(new_date);\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.updateDates();\n\n\t\t\tdelete this.updating;\n\t\t},\n\t\tdestroy: function(){\n\t\t\t$.map(this.pickers, function(p){ p.destroy(); });\n\t\t\t$(this.inputs).off('changeDate', this.dateUpdated);\n\t\t\tdelete this.element.data().datepicker;\n\t\t},\n\t\tremove: alias('destroy', 'Method `remove` is deprecated and will be removed in version 2.0. Use `destroy` instead')\n\t};\n\n\tfunction opts_from_el(el, prefix){\n\t\t// Derive options from element data-attrs\n\t\tvar data = $(el).data(),\n\t\t\tout = {}, inkey,\n\t\t\treplace = new RegExp('^' + prefix.toLowerCase() + '([A-Z])');\n\t\tprefix = new RegExp('^' + prefix.toLowerCase());\n\t\tfunction re_lower(_,a){\n\t\t\treturn a.toLowerCase();\n\t\t}\n\t\tfor (var key in data)\n\t\t\tif (prefix.test(key)){\n\t\t\t\tinkey = key.replace(replace, re_lower);\n\t\t\t\tout[inkey] = data[key];\n\t\t\t}\n\t\treturn out;\n\t}\n\n\tfunction opts_from_locale(lang){\n\t\t// Derive options from locale plugins\n\t\tvar out = {};\n\t\t// Check if \"de-DE\" style date is available, if not language should\n\t\t// fallback to 2 letter code eg \"de\"\n\t\tif (!dates[lang]){\n\t\t\tlang = lang.split('-')[0];\n\t\t\tif (!dates[lang])\n\t\t\t\treturn;\n\t\t}\n\t\tvar d = dates[lang];\n\t\t$.each(locale_opts, function(i,k){\n\t\t\tif (k in d)\n\t\t\t\tout[k] = d[k];\n\t\t});\n\t\treturn out;\n\t}\n\n\tvar old = $.fn.datepicker;\n\tvar datepickerPlugin = function(option){\n\t\tvar args = Array.apply(null, arguments);\n\t\targs.shift();\n\t\tvar internal_return;\n\t\tthis.each(function(){\n\t\t\tvar $this = $(this),\n\t\t\t\tdata = $this.data('datepicker'),\n\t\t\t\toptions = typeof option === 'object' && option;\n\t\t\tif (!data){\n\t\t\t\tvar elopts = opts_from_el(this, 'date'),\n\t\t\t\t\t// Preliminary otions\n\t\t\t\t\txopts = $.extend({}, defaults, elopts, options),\n\t\t\t\t\tlocopts = opts_from_locale(xopts.language),\n\t\t\t\t\t// Options priority: js args, data-attrs, locales, defaults\n\t\t\t\t\topts = $.extend({}, defaults, locopts, elopts, options);\n\t\t\t\tif ($this.hasClass('input-daterange') || opts.inputs){\n\t\t\t\t\t$.extend(opts, {\n\t\t\t\t\t\tinputs: opts.inputs || $this.find('input').toArray()\n\t\t\t\t\t});\n\t\t\t\t\tdata = new DateRangePicker(this, opts);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdata = new Datepicker(this, opts);\n\t\t\t\t}\n\t\t\t\t$this.data('datepicker', data);\n\t\t\t}\n\t\t\tif (typeof option === 'string' && typeof data[option] === 'function'){\n\t\t\t\tinternal_return = data[option].apply(data, args);\n\t\t\t}\n\t\t});\n\n\t\tif (\n\t\t\tinternal_return === undefined ||\n\t\t\tinternal_return instanceof Datepicker ||\n\t\t\tinternal_return instanceof DateRangePicker\n\t\t)\n\t\t\treturn this;\n\n\t\tif (this.length > 1)\n\t\t\tthrow new Error('Using only allowed for the collection of a single element (' + option + ' function)');\n\t\telse\n\t\t\treturn internal_return;\n\t};\n\t$.fn.datepicker = datepickerPlugin;\n\n\tvar defaults = $.fn.datepicker.defaults = {\n\t\tassumeNearbyYear: false,\n\t\tautoclose: false,\n\t\tbeforeShowDay: $.noop,\n\t\tbeforeShowMonth: $.noop,\n\t\tbeforeShowYear: $.noop,\n\t\tbeforeShowDecade: $.noop,\n\t\tbeforeShowCentury: $.noop,\n\t\tcalendarWeeks: false,\n\t\tclearBtn: false,\n\t\ttoggleActive: false,\n\t\tdaysOfWeekDisabled: [],\n\t\tdaysOfWeekHighlighted: [],\n\t\tdatesDisabled: [],\n\t\tendDate: Infinity,\n\t\tforceParse: true,\n\t\tformat: 'mm/dd/yyyy',\n\t\tkeepEmptyValues: false,\n\t\tkeyboardNavigation: true,\n\t\tlanguage: 'en',\n\t\tminViewMode: 0,\n\t\tmaxViewMode: 4,\n\t\tmultidate: false,\n\t\tmultidateSeparator: ',',\n\t\torientation: \"auto\",\n\t\trtl: false,\n\t\tstartDate: -Infinity,\n\t\tstartView: 0,\n\t\ttodayBtn: false,\n\t\ttodayHighlight: false,\n\t\tupdateViewDate: true,\n\t\tweekStart: 0,\n\t\tdisableTouchKeyboard: false,\n\t\tenableOnReadonly: true,\n\t\tshowOnFocus: true,\n\t\tzIndexOffset: 10,\n\t\tcontainer: 'body',\n\t\timmediateUpdates: false,\n\t\ttitle: '',\n\t\ttemplates: {\n\t\t\tleftArrow: '&#x00AB;',\n\t\t\trightArrow: '&#x00BB;'\n\t\t},\n    showWeekDays: true\n\t};\n\tvar locale_opts = $.fn.datepicker.locale_opts = [\n\t\t'format',\n\t\t'rtl',\n\t\t'weekStart'\n\t];\n\t$.fn.datepicker.Constructor = Datepicker;\n\tvar dates = $.fn.datepicker.dates = {\n\t\ten: {\n\t\t\tdays: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n\t\t\tdaysShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n\t\t\tdaysMin: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n\t\t\tmonths: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n\t\t\tmonthsShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n\t\t\ttoday: \"Today\",\n\t\t\tclear: \"Clear\",\n\t\t\ttitleFormat: \"MM yyyy\"\n\t\t}\n\t};\n\n\tvar DPGlobal = {\n\t\tviewModes: [\n\t\t\t{\n\t\t\t\tnames: ['days', 'month'],\n\t\t\t\tclsName: 'days',\n\t\t\t\te: 'changeMonth'\n\t\t\t},\n\t\t\t{\n\t\t\t\tnames: ['months', 'year'],\n\t\t\t\tclsName: 'months',\n\t\t\t\te: 'changeYear',\n\t\t\t\tnavStep: 1\n\t\t\t},\n\t\t\t{\n\t\t\t\tnames: ['years', 'decade'],\n\t\t\t\tclsName: 'years',\n\t\t\t\te: 'changeDecade',\n\t\t\t\tnavStep: 10\n\t\t\t},\n\t\t\t{\n\t\t\t\tnames: ['decades', 'century'],\n\t\t\t\tclsName: 'decades',\n\t\t\t\te: 'changeCentury',\n\t\t\t\tnavStep: 100\n\t\t\t},\n\t\t\t{\n\t\t\t\tnames: ['centuries', 'millennium'],\n\t\t\t\tclsName: 'centuries',\n\t\t\t\te: 'changeMillennium',\n\t\t\t\tnavStep: 1000\n\t\t\t}\n\t\t],\n\t\tvalidParts: /dd?|DD?|mm?|MM?|yy(?:yy)?/g,\n\t\tnonpunctuation: /[^ -\\/:-@\\u5e74\\u6708\\u65e5\\[-`{-~\\t\\n\\r]+/g,\n\t\tparseFormat: function(format){\n\t\t\tif (typeof format.toValue === 'function' && typeof format.toDisplay === 'function')\n                return format;\n            // IE treats \\0 as a string end in inputs (truncating the value),\n\t\t\t// so it's a bad format delimiter, anyway\n\t\t\tvar separators = format.replace(this.validParts, '\\0').split('\\0'),\n\t\t\t\tparts = format.match(this.validParts);\n\t\t\tif (!separators || !separators.length || !parts || parts.length === 0){\n\t\t\t\tthrow new Error(\"Invalid date format.\");\n\t\t\t}\n\t\t\treturn {separators: separators, parts: parts};\n\t\t},\n\t\tparseDate: function(date, format, language, assumeNearby){\n\t\t\tif (!date)\n\t\t\t\treturn undefined;\n\t\t\tif (date instanceof Date)\n\t\t\t\treturn date;\n\t\t\tif (typeof format === 'string')\n\t\t\t\tformat = DPGlobal.parseFormat(format);\n\t\t\tif (format.toValue)\n\t\t\t\treturn format.toValue(date, format, language);\n\t\t\tvar fn_map = {\n\t\t\t\t\td: 'moveDay',\n\t\t\t\t\tm: 'moveMonth',\n\t\t\t\t\tw: 'moveWeek',\n\t\t\t\t\ty: 'moveYear'\n\t\t\t\t},\n\t\t\t\tdateAliases = {\n\t\t\t\t\tyesterday: '-1d',\n\t\t\t\t\ttoday: '+0d',\n\t\t\t\t\ttomorrow: '+1d'\n\t\t\t\t},\n\t\t\t\tparts, part, dir, i, fn;\n\t\t\tif (date in dateAliases){\n\t\t\t\tdate = dateAliases[date];\n\t\t\t}\n\t\t\tif (/^[\\-+]\\d+[dmwy]([\\s,]+[\\-+]\\d+[dmwy])*$/i.test(date)){\n\t\t\t\tparts = date.match(/([\\-+]\\d+)([dmwy])/gi);\n\t\t\t\tdate = new Date();\n\t\t\t\tfor (i=0; i < parts.length; i++){\n\t\t\t\t\tpart = parts[i].match(/([\\-+]\\d+)([dmwy])/i);\n\t\t\t\t\tdir = Number(part[1]);\n\t\t\t\t\tfn = fn_map[part[2].toLowerCase()];\n\t\t\t\t\tdate = Datepicker.prototype[fn](date, dir);\n\t\t\t\t}\n\t\t\t\treturn Datepicker.prototype._zero_utc_time(date);\n\t\t\t}\n\n\t\t\tparts = date && date.match(this.nonpunctuation) || [];\n\n\t\t\tfunction applyNearbyYear(year, threshold){\n\t\t\t\tif (threshold === true)\n\t\t\t\t\tthreshold = 10;\n\n\t\t\t\t// if year is 2 digits or less, than the user most likely is trying to get a recent century\n\t\t\t\tif (year < 100){\n\t\t\t\t\tyear += 2000;\n\t\t\t\t\t// if the new year is more than threshold years in advance, use last century\n\t\t\t\t\tif (year > ((new Date()).getFullYear()+threshold)){\n\t\t\t\t\t\tyear -= 100;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn year;\n\t\t\t}\n\n\t\t\tvar parsed = {},\n\t\t\t\tsetters_order = ['yyyy', 'yy', 'M', 'MM', 'm', 'mm', 'd', 'dd'],\n\t\t\t\tsetters_map = {\n\t\t\t\t\tyyyy: function(d,v){\n\t\t\t\t\t\treturn d.setUTCFullYear(assumeNearby ? applyNearbyYear(v, assumeNearby) : v);\n\t\t\t\t\t},\n\t\t\t\t\tm: function(d,v){\n\t\t\t\t\t\tif (isNaN(d))\n\t\t\t\t\t\t\treturn d;\n\t\t\t\t\t\tv -= 1;\n\t\t\t\t\t\twhile (v < 0) v += 12;\n\t\t\t\t\t\tv %= 12;\n\t\t\t\t\t\td.setUTCMonth(v);\n\t\t\t\t\t\twhile (d.getUTCMonth() !== v)\n\t\t\t\t\t\t\td.setUTCDate(d.getUTCDate()-1);\n\t\t\t\t\t\treturn d;\n\t\t\t\t\t},\n\t\t\t\t\td: function(d,v){\n\t\t\t\t\t\treturn d.setUTCDate(v);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tval, filtered;\n\t\t\tsetters_map['yy'] = setters_map['yyyy'];\n\t\t\tsetters_map['M'] = setters_map['MM'] = setters_map['mm'] = setters_map['m'];\n\t\t\tsetters_map['dd'] = setters_map['d'];\n\t\t\tdate = UTCToday();\n\t\t\tvar fparts = format.parts.slice();\n\t\t\t// Remove noop parts\n\t\t\tif (parts.length !== fparts.length){\n\t\t\t\tfparts = $(fparts).filter(function(i,p){\n\t\t\t\t\treturn $.inArray(p, setters_order) !== -1;\n\t\t\t\t}).toArray();\n\t\t\t}\n\t\t\t// Process remainder\n\t\t\tfunction match_part(){\n\t\t\t\tvar m = this.slice(0, parts[i].length),\n\t\t\t\t\tp = parts[i].slice(0, m.length);\n\t\t\t\treturn m.toLowerCase() === p.toLowerCase();\n\t\t\t}\n\t\t\tif (parts.length === fparts.length){\n\t\t\t\tvar cnt;\n\t\t\t\tfor (i=0, cnt = fparts.length; i < cnt; i++){\n\t\t\t\t\tval = parseInt(parts[i], 10);\n\t\t\t\t\tpart = fparts[i];\n\t\t\t\t\tif (isNaN(val)){\n\t\t\t\t\t\tswitch (part){\n\t\t\t\t\t\t\tcase 'MM':\n\t\t\t\t\t\t\t\tfiltered = $(dates[language].months).filter(match_part);\n\t\t\t\t\t\t\t\tval = $.inArray(filtered[0], dates[language].months) + 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'M':\n\t\t\t\t\t\t\t\tfiltered = $(dates[language].monthsShort).filter(match_part);\n\t\t\t\t\t\t\t\tval = $.inArray(filtered[0], dates[language].monthsShort) + 1;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tparsed[part] = val;\n\t\t\t\t}\n\t\t\t\tvar _date, s;\n\t\t\t\tfor (i=0; i < setters_order.length; i++){\n\t\t\t\t\ts = setters_order[i];\n\t\t\t\t\tif (s in parsed && !isNaN(parsed[s])){\n\t\t\t\t\t\t_date = new Date(date);\n\t\t\t\t\t\tsetters_map[s](_date, parsed[s]);\n\t\t\t\t\t\tif (!isNaN(_date))\n\t\t\t\t\t\t\tdate = _date;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn date;\n\t\t},\n\t\tformatDate: function(date, format, language){\n\t\t\tif (!date)\n\t\t\t\treturn '';\n\t\t\tif (typeof format === 'string')\n\t\t\t\tformat = DPGlobal.parseFormat(format);\n\t\t\tif (format.toDisplay)\n                return format.toDisplay(date, format, language);\n            var val = {\n\t\t\t\td: date.getUTCDate(),\n\t\t\t\tD: dates[language].daysShort[date.getUTCDay()],\n\t\t\t\tDD: dates[language].days[date.getUTCDay()],\n\t\t\t\tm: date.getUTCMonth() + 1,\n\t\t\t\tM: dates[language].monthsShort[date.getUTCMonth()],\n\t\t\t\tMM: dates[language].months[date.getUTCMonth()],\n\t\t\t\tyy: date.getUTCFullYear().toString().substring(2),\n\t\t\t\tyyyy: date.getUTCFullYear()\n\t\t\t};\n\t\t\tval.dd = (val.d < 10 ? '0' : '') + val.d;\n\t\t\tval.mm = (val.m < 10 ? '0' : '') + val.m;\n\t\t\tdate = [];\n\t\t\tvar seps = $.extend([], format.separators);\n\t\t\tfor (var i=0, cnt = format.parts.length; i <= cnt; i++){\n\t\t\t\tif (seps.length)\n\t\t\t\t\tdate.push(seps.shift());\n\t\t\t\tdate.push(val[format.parts[i]]);\n\t\t\t}\n\t\t\treturn date.join('');\n\t\t},\n\t\theadTemplate: '<thead>'+\n\t\t\t              '<tr>'+\n\t\t\t                '<th colspan=\"7\" class=\"datepicker-title\"></th>'+\n\t\t\t              '</tr>'+\n\t\t\t\t\t\t\t'<tr>'+\n\t\t\t\t\t\t\t\t'<th class=\"prev\">'+defaults.templates.leftArrow+'</th>'+\n\t\t\t\t\t\t\t\t'<th colspan=\"5\" class=\"datepicker-switch\"></th>'+\n\t\t\t\t\t\t\t\t'<th class=\"next\">'+defaults.templates.rightArrow+'</th>'+\n\t\t\t\t\t\t\t'</tr>'+\n\t\t\t\t\t\t'</thead>',\n\t\tcontTemplate: '<tbody><tr><td colspan=\"7\"></td></tr></tbody>',\n\t\tfootTemplate: '<tfoot>'+\n\t\t\t\t\t\t\t'<tr>'+\n\t\t\t\t\t\t\t\t'<th colspan=\"7\" class=\"today\"></th>'+\n\t\t\t\t\t\t\t'</tr>'+\n\t\t\t\t\t\t\t'<tr>'+\n\t\t\t\t\t\t\t\t'<th colspan=\"7\" class=\"clear\"></th>'+\n\t\t\t\t\t\t\t'</tr>'+\n\t\t\t\t\t\t'</tfoot>'\n\t};\n\tDPGlobal.template = '<div class=\"datepicker\">'+\n\t\t\t\t\t\t\t'<div class=\"datepicker-days\">'+\n\t\t\t\t\t\t\t\t'<table class=\"table-condensed\">'+\n\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\n\t\t\t\t\t\t\t\t\t'<tbody></tbody>'+\n\t\t\t\t\t\t\t\t\tDPGlobal.footTemplate+\n\t\t\t\t\t\t\t\t'</table>'+\n\t\t\t\t\t\t\t'</div>'+\n\t\t\t\t\t\t\t'<div class=\"datepicker-months\">'+\n\t\t\t\t\t\t\t\t'<table class=\"table-condensed\">'+\n\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\n\t\t\t\t\t\t\t\t\tDPGlobal.contTemplate+\n\t\t\t\t\t\t\t\t\tDPGlobal.footTemplate+\n\t\t\t\t\t\t\t\t'</table>'+\n\t\t\t\t\t\t\t'</div>'+\n\t\t\t\t\t\t\t'<div class=\"datepicker-years\">'+\n\t\t\t\t\t\t\t\t'<table class=\"table-condensed\">'+\n\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\n\t\t\t\t\t\t\t\t\tDPGlobal.contTemplate+\n\t\t\t\t\t\t\t\t\tDPGlobal.footTemplate+\n\t\t\t\t\t\t\t\t'</table>'+\n\t\t\t\t\t\t\t'</div>'+\n\t\t\t\t\t\t\t'<div class=\"datepicker-decades\">'+\n\t\t\t\t\t\t\t\t'<table class=\"table-condensed\">'+\n\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\n\t\t\t\t\t\t\t\t\tDPGlobal.contTemplate+\n\t\t\t\t\t\t\t\t\tDPGlobal.footTemplate+\n\t\t\t\t\t\t\t\t'</table>'+\n\t\t\t\t\t\t\t'</div>'+\n\t\t\t\t\t\t\t'<div class=\"datepicker-centuries\">'+\n\t\t\t\t\t\t\t\t'<table class=\"table-condensed\">'+\n\t\t\t\t\t\t\t\t\tDPGlobal.headTemplate+\n\t\t\t\t\t\t\t\t\tDPGlobal.contTemplate+\n\t\t\t\t\t\t\t\t\tDPGlobal.footTemplate+\n\t\t\t\t\t\t\t\t'</table>'+\n\t\t\t\t\t\t\t'</div>'+\n\t\t\t\t\t\t'</div>';\n\n\t$.fn.datepicker.DPGlobal = DPGlobal;\n\n\n\t/* DATEPICKER NO CONFLICT\n\t* =================== */\n\n\t$.fn.datepicker.noConflict = function(){\n\t\t$.fn.datepicker = old;\n\t\treturn this;\n\t};\n\n\t/* DATEPICKER VERSION\n\t * =================== */\n\t$.fn.datepicker.version = '1.7.1';\n\n\t$.fn.datepicker.deprecated = function(msg){\n\t\tvar console = window.console;\n\t\tif (console && console.warn) {\n\t\t\tconsole.warn('DEPRECATED: ' + msg);\n\t\t}\n\t};\n\n\n\t/* DATEPICKER DATA-API\n\t* ================== */\n\n\t$(document).on(\n\t\t'focus.datepicker.data-api click.datepicker.data-api',\n\t\t'[data-provide=\"datepicker\"]',\n\t\tfunction(e){\n\t\t\tvar $this = $(this);\n\t\t\tif ($this.data('datepicker'))\n\t\t\t\treturn;\n\t\t\te.preventDefault();\n\t\t\t// component click requires us to explicitly show it\n\t\t\tdatepickerPlugin.call($this, 'show');\n\t\t}\n\t);\n\t$(function(){\n\t\tdatepickerPlugin.call($('[data-provide=\"datepicker-inline\"]'));\n\t});\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/bootstrap-datepicker/dist/js/bootstrap-datepicker.js\n// module id = 154\n// module chunks = 2 3","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2013 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nrequire(\"polyfills.js\");\nvar $ = require(\"jquery\");\nvar cockpit = require(\"cockpit\");\nvar machine_info = require(\"machine-info.es6\");\nvar packagekit = require(\"packagekit.es6\");\n\nvar Mustache = require(\"mustache\");\nvar plot = require(\"plot\");\nvar service = require(\"service\");\n\n/* These add themselves to jQuery so just including is enough */\nrequire(\"patterns\");\nrequire(\"bootstrap-datepicker/dist/js/bootstrap-datepicker\");\nrequire(\"patternfly-bootstrap-combobox/js/bootstrap-combobox\");\n\nvar shutdown = require(\"./shutdown\");\n\nvar host_keys_script = require(\"raw!./ssh-list-host-keys.sh\");\n\nvar _ = cockpit.gettext;\nvar C_ = cockpit.gettext;\n\nvar permission = cockpit.permission({ admin: true });\n$(permission).on(\"changed\", update_hostname_privileged);\n$(permission).on(\"changed\", update_shutdown_privileged);\n\nfunction update_hostname_privileged() {\n    $(\".hostname-privileged\").update_privileged(\n        permission, cockpit.format(\n            _(\"The user <b>$0</b> is not permitted to modify hostnames\"),\n            permission.user ? permission.user.name : '')\n    );\n}\n\nfunction update_shutdown_privileged() {\n    $(\".shutdown-privileged\").update_privileged(\n        permission, cockpit.format(\n            _(\"The user <b>$0</b> is not permitted to shutdown or restart this server\"),\n            permission.user ? permission.user.name : '')\n    );\n}\n\nfunction debug() {\n    if (window.debugging == \"all\" || window.debugging == \"system\")\n        console.debug.apply(console, arguments);\n}\n\nfunction ServerTime() {\n    var self = this;\n\n    var client = cockpit.dbus('org.freedesktop.timedate1');\n    var timedate = client.proxy();\n\n    var time_offset = null;\n    var remote_offset = null;\n\n    self.timedate = timedate;\n\n    self.timedate1_service = service.proxy(\"dbus-org.freedesktop.timedate1.service\");\n    self.timesyncd_service = service.proxy(\"systemd-timesyncd.service\");\n\n    /*\n     * The time we return from here as its UTC time set to the\n     * server time. This is the only way to get predictable\n     * behavior and formatting of a Date() object in the absence of\n     * IntlDateFormat and  friends.\n     */\n    Object.defineProperty(self, 'utc_fake_now', {\n        enumerable: true,\n        get: function get() {\n            var offset = time_offset + remote_offset;\n            return new Date(offset + (new Date()).valueOf());\n        }\n    });\n\n    Object.defineProperty(self, 'now', {\n        enumerable: true,\n        get: function get() {\n            return new Date(time_offset + (new Date()).valueOf());\n        }\n    });\n\n    self.format = function format(and_time) {\n        var string = self.utc_fake_now.toISOString();\n        if (!and_time)\n            return string.split('T')[0];\n        var pos = string.lastIndexOf(':');\n        if (pos !== -1)\n            string = string.substring(0, pos);\n        return string.replace('T', ' ');\n    };\n\n    self.updateInterval = window.setInterval(function() {\n        $(self).triggerHandler(\"changed\");\n    }, 30000);\n\n    self.wait = function wait() {\n        if (remote_offset === null)\n            return self.update();\n        return cockpit.resolve();\n    };\n\n    self.update = function update() {\n        return cockpit.spawn([\"date\", \"+%s:%:z\"], { err: \"message\" })\n            .done(function(data) {\n                var parts = data.trim().split(\":\").map(function(x) {\n                    return parseInt(x, 10);\n                });\n                if (parts[1] < 0)\n                    parts[2] = -(parts[2]);\n                var timems = parts[0] * 1000;\n                var offsetms = (parts[1] * 3600000) + parts[2] * 60000;\n                var now = new Date();\n                time_offset = (timems - now.valueOf());\n                remote_offset = offsetms;\n                $(self).triggerHandler(\"changed\");\n            })\n            .fail(function(ex) {\n                console.log(\"Couldn't calculate server time offset: \" + cockpit.message(ex));\n            });\n    };\n\n    self.change_time = function change_time(datestr, hourstr, minstr) {\n        var dfd = $.Deferred();\n\n        /*\n         * The browser is brain dead when it comes to dates. But even if\n         * it wasn't, or we loaded a library like moment.js, there is no\n         * way to make sense of this date without a round trip to the\n         * server ... the timezone is really server specific.\n         */\n        cockpit.spawn([\"date\", \"--date=\" + datestr + \" \" + hourstr + \":\" + minstr, \"+%s\"])\n            .fail(function(ex) {\n                dfd.reject(ex);\n            })\n            .done(function(data) {\n                var seconds = parseInt(data.trim(), 10);\n                timedate.call('SetTime', [seconds * 1000 * 1000, false, true])\n                    .fail(function(ex) {\n                        dfd.reject(ex);\n                    })\n                    .done(function() {\n                        self.update();\n                        dfd.resolve();\n                    });\n            });\n\n        return dfd;\n    };\n\n    self.poll_ntp_synchronized = function poll_ntp_synchronized() {\n        client.call(timedate.path,\n                    \"org.freedesktop.DBus.Properties\", \"Get\", [ \"org.freedesktop.timedate1\", \"NTPSynchronized\" ]).\n            fail(function (error) {\n                if (error.name != \"org.freedesktop.DBus.Error.UnknownProperty\" &&\n                    error.problem != \"not-found\")\n                    console.log(\"can't get NTPSynchronized property\", error);\n            }).\n            done(function (result) {\n                var ifaces = { \"org.freedesktop.timedate1\": { NTPSynchronized: result[0].v } };\n                var data = { };\n                data[timedate.path] = ifaces;\n                client.notify(data);\n            });\n    };\n\n    self.close = function close() {\n        client.close();\n    };\n\n    self.update();\n}\n\nvar change_systime_dialog;\n\nPageServer.prototype = {\n    _init: function() {\n        this.id = \"server\";\n        this.server_time = null;\n        this.client = null;\n        this.hostname_proxy = null;\n        this.os_updates = null; // packagekit.Enum.INFO_* → #count\n        this.os_updates_icon = document.getElementById(\"system_information_updates_icon\");\n        this.unregistered = false;\n    },\n\n    getTitle: function() {\n        return null;\n    },\n\n    setup: function() {\n        var self = this;\n        update_hostname_privileged();\n\n        cockpit.file(\"/etc/motd\").watch(function (content) {\n            if (content)\n                content = $.trim(content);\n            if (content && content != cockpit.localStorage.getItem('dismissed-motd')) {\n                $('#motd').text(content);\n                $('#motd-box').show();\n            } else {\n                $('#motd-box').hide();\n            }\n            // To help the tests known when we have loaded motd\n            $('#motd-box').attr('data-stable', 'yes');\n        });\n\n        $('#motd-box button.close').click(function () {\n            cockpit.localStorage.setItem('dismissed-motd', $('#motd').text());\n            $('#motd-box').hide();\n        });\n\n        $('#shutdown-group [data-action]').on(\"click\", function() {\n            self.shutdown($(this).attr('data-action'));\n        });\n\n        $('#system-ostree-version-link').on('click', function () {\n            cockpit.jump(\"/updates\", cockpit.transport.host);\n        });\n\n        $('#system_information_hostname_button').on('click', function () {\n            PageSystemInformationChangeHostname.client = self.client;\n            $('#system_information_change_hostname').modal('show');\n        });\n\n        $('#system_information_systime_button').on('click', function () {\n            change_systime_dialog.display(self.server_time);\n        });\n\n        self.server_time = new ServerTime();\n        $(self.server_time).on(\"changed\", function() {\n            $('#system_information_systime_button').text(self.server_time.format(true));\n        });\n\n        self.ntp_status_tmpl = $(\"#ntp-status-tmpl\").html();\n        Mustache.parse(this.ntp_status_tmpl);\n\n        self.ntp_status_icon_tmpl = $(\"#ntp-status-icon-tmpl\").html();\n        Mustache.parse(this.ntp_status_icon_tmpl);\n\n        self.ssh_host_keys_tmpl = $(\"#ssh-host-keys-tmpl\").html();\n        Mustache.parse(this.ssh_host_keys_tmpl);\n\n        $(\"#system_information_ssh_keys\").on(\"show.bs.modal\", function() {\n            self.host_keys_show();\n        });\n\n        $(\"#system_information_ssh_keys\").on(\"hide.bs.modal\", function() {\n            self.host_keys_hide();\n        });\n\n        var $ntp_status = $('#system_information_systime_ntp_status');\n\n        function update_ntp_status() {\n\n            if (!self.server_time.timedate.NTP) {\n                $ntp_status.hide();\n                $ntp_status.attr(\"data-original-title\", null);\n                return;\n            }\n\n            $ntp_status.show();\n\n            var model = {\n                Synched: self.server_time.timedate.NTPSynchronized,\n                service: null\n            };\n\n            var timesyncd_server_regex = /.*time server (.*)\\./i;\n\n            var timesyncd_status = (self.server_time.timesyncd_service.state == \"running\" &&\n                                    self.server_time.timesyncd_service.service &&\n                                    self.server_time.timesyncd_service.service.StatusText);\n\n            if (self.server_time.timesyncd_service.state == \"running\")\n                model.service = \"systemd-timesyncd.service\";\n\n            if (timesyncd_status) {\n                var match = timesyncd_status.match(timesyncd_server_regex);\n                if (match)\n                    model.Server = match[1];\n                else if (timesyncd_status != \"Idle.\" && timesyncd_status !== \"\")\n                    model.SubStatus = timesyncd_status;\n            }\n\n            var tooltip_html = Mustache.render(self.ntp_status_tmpl, model);\n            if (tooltip_html != $ntp_status.attr(\"data-original-title\"))\n                $ntp_status.attr(\"data-original-title\", tooltip_html);\n\n            var icon_html = Mustache.render(self.ntp_status_icon_tmpl, model);\n            $ntp_status.html(icon_html);\n        }\n\n        $ntp_status.tooltip();\n\n        $(self.server_time.timesyncd_service).on(\"changed\", update_ntp_status);\n        $(self.server_time.timedate).on(\"changed\", update_ntp_status);\n        update_ntp_status();\n\n        /* NTPSynchronized needs to be polled so we just do that\n         * always.\n         */\n        window.setInterval(function () {\n            self.server_time.poll_ntp_synchronized();\n        }, 5000);\n\n        $('#server').on('click', \"[data-goto-service]\", function () {\n            var service = $(this).attr(\"data-goto-service\");\n            cockpit.jump(\"/system/services/#/\" + window.encodeURIComponent(service),\n                         cockpit.transport.host);\n        });\n\n        self.plot_controls = plot.setup_plot_controls($('#server'), $('#server-graph-toolbar'));\n\n        var pmcd_service = service.proxy(\"pmcd\");\n        var pmlogger_service = service.proxy(\"pmlogger\");\n        var pmlogger_promise;\n\n        $(\"#server-pmlogger-switch\").on(\"change\", function(ev) {\n            var val = $(this).onoff('value');\n            if (pmlogger_service.exists) {\n                if (val) {\n                    pmlogger_promise = cockpit.all(pmcd_service.enable(),\n                           pmcd_service.start(),\n                           pmlogger_service.enable(),\n                           pmlogger_service.start()).\n                        fail(function (error) {\n                            console.warn(\"Enabling pmlogger failed\", error);\n                        });\n                } else {\n                    pmlogger_promise = cockpit.all(pmlogger_service.disable(),\n                           pmlogger_service.stop()).\n                        fail(function (error) {\n                            console.warn(\"Disabling pmlogger failed\", error);\n                        });\n                }\n                pmlogger_promise.always(function() {\n                    pmlogger_promise = null;\n                    refresh_pmlogger_state();\n                });\n            }\n        });\n\n        function refresh_pmlogger_state() {\n            if (!pmlogger_service.exists)\n                $('#server-pmlogger-onoff-row').hide();\n            else if (!pmlogger_promise) {\n                $(\"#server-pmlogger-switch\").onoff('value', pmlogger_service.enabled);\n                $('#server-pmlogger-onoff-row').show();\n            }\n        }\n\n        $(pmlogger_service).on('changed', refresh_pmlogger_state);\n        refresh_pmlogger_state();\n\n        // if cockpit component \"page\" is available, set element content to a link to it, otherwise just text\n        function set_page_link(element_sel, page, text) {\n            if (cockpit.manifests[page]) {\n                var link = document.createElement(\"a\");\n                link.innerHTML = text;\n                link.addEventListener(\"click\", function() { cockpit.jump(\"/\" + page); });\n                $(element_sel).html(link);\n            } else {\n                $(element_sel).text(text);\n            }\n        }\n\n        function refresh_os_updates_state() {\n            self.os_updates_icon.className = \"\"; // hide spinner\n\n            // if system is unregistered, always show that\n            if (self.unregistered) {\n                self.os_updates_icon.className = \"pficon pficon-warning-triangle-o\";\n                set_page_link(\"#system_information_updates_text\", \"subscriptions\", _(\"System Not Registered\"));\n                return;\n            }\n\n            var infos = Object.keys(self.os_updates || {}).sort();\n            if (infos.length === 0) {\n                $(\"#system_information_updates_text\").text(_(\"System Up To Date\"));\n                return;\n            }\n\n            // show highest severity level\n            var severity = infos[infos.length - 1];\n            var text;\n            self.os_updates_icon.className = packagekit.getSeverityIcon(\n                severity > packagekit.Enum.INFO_UNKNOWN ? severity : packagekit.Enum.INFO_NORMAL);\n            if (severity == packagekit.Enum.INFO_SECURITY)\n                text = _(\"Security Updates Available\");\n            else if (severity >= packagekit.Enum.INFO_NORMAL)\n                text = _(\"Bug Fix Updates Available\");\n            else if (severity >= packagekit.Enum.INFO_LOW)\n                text = _(\"Enhancement Updates Available\");\n            else\n                text = _(\"Updates Available\");\n\n            set_page_link(\"#system_information_updates_text\", \"updates\", text);\n        }\n\n        function check_for_updates() {\n            self.os_updates = null;\n\n            packagekit.cancellableTransaction(\"GetUpdates\", [0],\n                function (data) {\n                    // we are getting progress, so PackageKit works; show spinner\n                    if (self.os_updates === null) {\n                        self.os_updates = {};\n                        $(\"#system_information_updates_text\").text(_(\"Checking for updates…\"));\n                        self.os_updates_icon.className = \"spinner spinner-xs spinner-inline\";\n                    }\n                },\n                {\n                    Package: function (info) {\n                        // dnf backend yields wrong severity (https://bugs.freedesktop.org/show_bug.cgi?id=101070)\n                        if (info < packagekit.Enum.INFO_LOW || info > packagekit.Enum.INFO_SECURITY)\n                            info = packagekit.Enum.INFO_UNKNOWN;\n                        self.os_updates[info] = (self.os_updates[info] || 0) + 1;\n                    }\n                })\n                .then(refresh_os_updates_state)\n                .catch(function (ex) {\n                    // if PackageKit is not available, hide the table line\n                    console.warn(\"Checking for available updates failed:\", ex.toString());\n                    self.os_updates_icon.className = \"\";\n                    $(\"#system_information_updates_text\").toggle(false);\n                });\n        }\n\n        // check for updates now and on page switches, in case they get applied on /updates or terminal\n        $(cockpit).on(\"visibilitychange\", check_for_updates);\n        check_for_updates();\n\n        // check for unregistered system\n        packagekit.watchRedHatSubscription(function (subscribed) {\n            self.unregistered = !subscribed;\n            refresh_os_updates_state();\n        });\n    },\n\n    enter: function() {\n        var self = this;\n\n        var machine_id = cockpit.file(\"/etc/machine-id\");\n        machine_id.read().done(function (content) {\n            $(\"#system_machine_id\")\n                .text(content)\n                .tooltip({ title: content, placement: \"bottom\" });\n        }).fail(function (ex) {\n            console.error(\"Error reading machine id\", ex);\n        }).always(function () {\n            machine_id.close();\n        });\n\n        self.ostree_client = cockpit.dbus('org.projectatomic.rpmostree1',\n                                          {\"superuser\" : true});\n        $(self.ostree_client).on(\"close\", function () {\n            self.ostree_client = null;\n        });\n\n        self.sysroot = self.ostree_client.proxy('org.projectatomic.rpmostree1.Sysroot',\n                                                '/org/projectatomic/rpmostree1/Sysroot');\n        $(self.sysroot).on(\"changed\", $.proxy(this, \"sysroot_changed\"));\n\n        self.client = cockpit.dbus('org.freedesktop.hostname1',\n                                   {\"superuser\" : \"try\"});\n        self.hostname_proxy = self.client.proxy('org.freedesktop.hostname1',\n                                     '/org/freedesktop/hostname1');\n        self.kernel_hostname = null;\n\n        /* CPU graph */\n\n        var cpu_data = {\n            direct: [ \"kernel.all.cpu.nice\", \"kernel.all.cpu.user\", \"kernel.all.cpu.sys\" ],\n            internal: [ \"cpu.basic.nice\", \"cpu.basic.user\", \"cpu.basic.system\" ],\n            units: \"millisec\",\n            derive: \"rate\",\n            factor: 0.1  // millisec / sec -> percent\n        };\n\n        var cpu_options = plot.plot_simple_template();\n        $.extend(cpu_options.yaxis, { tickFormatter: function(v) { return v.toFixed(0); },\n                                      max: 100\n                                    });\n        self.cpu_plot = plot.plot($(\"#server_cpu_graph\"), 300);\n        self.cpu_plot.set_options(cpu_options);\n        // This is added to the plot once we have the machine info, see below.\n\n        /* Memory graph */\n\n        var memory_data = {\n            direct: [ \"mem.util.used\" ],\n            internal: [ \"memory.used\" ],\n            units: \"bytes\"\n        };\n\n        var memory_options = plot.plot_simple_template();\n        $.extend(memory_options.yaxis, { ticks: plot.memory_ticks,\n                                         tickFormatter: plot.format_bytes_tick_no_unit\n                                       });\n        memory_options.post_hook = function memory_post_hook(pl) {\n            var axes = pl.getAxes();\n            $('#server_memory_unit').text(plot.bytes_tick_unit(axes.yaxis));\n        };\n\n        self.memory_plot = plot.plot($(\"#server_memory_graph\"), 300);\n        self.memory_plot.set_options(memory_options);\n        self.memory_plot.add_metrics_sum_series(memory_data, { });\n\n        /* Network graph */\n\n        var network_data = {\n            direct: [ \"network.interface.total.bytes\" ],\n            internal: [ \"network.interface.tx\", \"network.interface.rx\" ],\n            \"omit-instances\": [ \"lo\" ],\n            units: \"bytes\",\n            derive: \"rate\"\n        };\n\n        var network_options = plot.plot_simple_template();\n        $.extend(network_options.yaxis, { tickFormatter: plot.format_bits_per_sec_tick_no_unit\n                                        });\n        network_options.setup_hook = function network_setup_hook(pl) {\n            var axes = pl.getAxes();\n            if (axes.yaxis.datamax < 100000)\n                axes.yaxis.options.max = 100000;\n            else\n                axes.yaxis.options.max = null;\n            axes.yaxis.options.min = 0;\n        };\n        network_options.post_hook = function network_post_hook(pl) {\n            var axes = pl.getAxes();\n            $('#server_network_traffic_unit').text(plot.bits_per_sec_tick_unit(axes.yaxis));\n        };\n\n        self.network_plot = plot.plot($(\"#server_network_traffic_graph\"), 300);\n        self.network_plot.set_options(network_options);\n        self.network_plot.add_metrics_sum_series(network_data, { });\n\n        /* Disk IO graph */\n\n        var disk_data = {\n            direct: [ \"disk.all.total_bytes\" ],\n            internal: [ \"disk.all.read\", \"disk.all.written\" ],\n            units: \"bytes\",\n            derive: \"rate\"\n        };\n\n        var disk_options = plot.plot_simple_template();\n        $.extend(disk_options.yaxis, { ticks: plot.memory_ticks,\n                                       tickFormatter: plot.format_bytes_per_sec_tick_no_unit\n                                     });\n        disk_options.setup_hook = function disk_setup_hook(pl) {\n            var axes = pl.getAxes();\n            if (axes.yaxis.datamax < 100000)\n                axes.yaxis.options.max = 100000;\n            else\n                axes.yaxis.options.max = null;\n            axes.yaxis.options.min = 0;\n        };\n        disk_options.post_hook = function disk_post_hook(pl) {\n            var axes = pl.getAxes();\n            $('#server_disk_io_unit').text(plot.bytes_per_sec_tick_unit(axes.yaxis));\n        };\n\n        self.disk_plot = plot.plot($(\"#server_disk_io_graph\"), 300);\n        self.disk_plot.set_options(disk_options);\n        self.disk_plot.add_metrics_sum_series(disk_data, { });\n\n        machine_info.cpu_ram_info().\n            done(function (info) {\n                $('#link-cpu').text(cockpit.format(cockpit.ngettext(\"of $0 CPU core\", \"of $0 CPU cores\",\n                                                                    info.cpus),\n                                                   info.cpus));\n                cpu_data.factor = 0.1 / info.cpus; // millisec / sec -> percent\n                self.cpu_plot.add_metrics_sum_series(cpu_data, { });\n                memory_options.yaxis.max = info.memory;\n                self.memory_plot.set_options(memory_options);\n            });\n\n        self.plot_controls.reset([ self.cpu_plot, self.memory_plot, self.network_plot, self.disk_plot ]);\n\n        $(window).on('resize.server', function () {\n            self.cpu_plot.resize();\n            self.memory_plot.resize();\n            self.network_plot.resize();\n            self.disk_plot.resize();\n        });\n\n        machine_info.dmi_info()\n            .done(function(fields) {\n                $(\"#system_information_hardware_text\")\n                    .tooltip({ title: _(\"Click to see system hardware information\"), placement: \"bottom\" })\n                    .text(fields.sys_vendor + \" \" + fields.product_name);\n                var present = !!(fields.product_serial || fields.chassis_serial);\n                $(\"#system_information_asset_tag_text\")\n                    .text(fields.product_serial || fields.chassis_serial);\n                $(\"#system-info-asset-row\").toggle(present);\n            })\n            .fail(function(ex) {\n                debug(\"couldn't read dmi info: \" + ex);\n            });\n\n        function hostname_text() {\n            if (!self.hostname_proxy)\n                return;\n\n            var pretty_hostname = self.hostname_proxy.PrettyHostname;\n            var static_hostname = self.hostname_proxy.StaticHostname;\n\n            var str = self.kernel_hostname;\n            if (pretty_hostname && static_hostname && static_hostname != pretty_hostname)\n                str = pretty_hostname + \" (\" + static_hostname + \")\";\n            else if (static_hostname)\n                str = static_hostname;\n\n            if (!str)\n                str = _(\"Set Host name\");\n            $(\"#system_information_hostname_button\").text(str);\n            $(\"#system_information_hostname_button\").attr(\"title\", str);\n            $(\"#system_information_os_text\").text(self.hostname_proxy.OperatingSystemPrettyName || \"\");\n        }\n\n        cockpit.spawn([\"hostname\"], { err: \"ignore\" })\n            .done(function(output) {\n                self.kernel_hostname = $.trim(output);\n                hostname_text();\n            })\n            .fail(function(ex) {\n                hostname_text();\n                debug(\"couldn't read kernel hostname: \" + ex);\n            });\n        $(self.hostname_proxy).on(\"changed\", hostname_text);\n    },\n\n    show: function() {\n        this.cpu_plot.start_walking();\n        this.memory_plot.start_walking();\n        this.disk_plot.start_walking();\n        this.network_plot.start_walking();\n    },\n\n    leave: function() {\n        var self = this;\n\n        self.cpu_plot.destroy();\n        self.memory_plot.destroy();\n        self.disk_plot.destroy();\n        self.network_plot.destroy();\n\n        $(self.hostname_proxy).off();\n        self.hostname_proxy = null;\n\n        self.client.close();\n        self.client = null;\n\n        $(cockpit).off('.server');\n\n        $(self.sysroot).off();\n        self.sysroot = null;\n        if (self.ostree_client) {\n            self.ostree_client.close();\n            self.ostree_client = null;\n        }\n    },\n\n    host_keys_show: function() {\n        var self = this;\n        $(\"#system_information_ssh_keys .spinner\").toggle(true);\n        $(\"#system_information_ssh_keys .content\").toggle(false);\n        $(\"#system_information_ssh_keys .alert\").toggle(false);\n\n        /*\n         * Yes, we do refresh the keys while the dialog is open.\n         * It may occur that sshd is not running at the point when\n         * we try, or in rare cases the keys may change.\n         */\n        self.host_keys_interval = window.setInterval(function() {\n            self.host_keys_update();\n        }, 10 * 1000);\n        self.host_keys_update();\n    },\n\n    host_keys_update: function() {\n        var self = this;\n        var parenthesis = /^\\((.*)\\)$/;\n        var spinner = $(\"#system_information_ssh_keys .spinner\");\n        var content = $(\"#system_information_ssh_keys .content\");\n        var error = $(\"#system_information_ssh_keys .alert\");\n\n        cockpit.script(host_keys_script, [],{ \"superuser\": \"try\",\n                                              \"err\": \"message\" })\n            .done(function(data) {\n                var seen = {};\n                var arr = [];\n                var keys = {};\n\n                var i, tmp, m;\n                var full = data.trim().split(\"\\n\");\n                for (i = 0; i < full.length; i++) {\n                    var line = full[i];\n                    if (!line)\n                        continue;\n\n                    var parts = line.trim().split(\" \");\n                    var title, fp = parts[1];\n                    if (!seen[fp]) {\n                        seen[fp] = fp;\n                        title = parts[parts.length - 1];\n                        if (title) {\n                            m = title.match(parenthesis);\n                            if (m && m[1])\n                                title = m[1];\n                        }\n                        if (!keys[title])\n                            keys[title] = [];\n                        keys[title].push(fp);\n                    }\n                }\n\n                arr = Object.keys(keys);\n                arr.sort();\n                arr = arr.map(function (k) {\n                    return { title: k, fps: keys[k] };\n                });\n\n                tmp = Mustache.render(self.ssh_host_keys_tmpl, { keys: arr });\n                content.html(tmp);\n                spinner.toggle(false);\n                error.toggle(false);\n                content.toggle(true);\n            })\n            .fail(function(ex) {\n                var msg = cockpit.format(_(\"failed to list ssh host keys: $0\"), ex.message);\n                content.toggle(false);\n                spinner.toggle(false);\n                $(\"#system_information_ssh_keys .alert strong\").text(msg);\n                error.toggle(true);\n            });\n    },\n\n    host_keys_hide: function() {\n        var self = this;\n        window.clearInterval(self.host_keys_interval);\n        self.host_keys_interval = null;\n    },\n\n    sysroot_changed: function() {\n        var self = this;\n\n        if (self.sysroot.Booted && self.ostree_client) {\n            var version = \"\";\n            self.ostree_client.call(self.sysroot.Booted,\n                                    \"org.freedesktop.DBus.Properties\", \"Get\",\n                                    ['org.projectatomic.rpmostree1.OS',\n                                     \"BootedDeployment\"])\n                .done(function (result) {\n                    if (result && result[0]) {\n                        var deployment = result[0].v;\n                        if (deployment && deployment.version)\n                            version = deployment.version.v;\n                    }\n                })\n                .fail(function (ex) {\n                    console.log(ex);\n                })\n                .always(function () {\n                    $(\"#system-ostree-version\").toggleClass(\"hidden\", !version);\n                    $(\"#system-ostree-version-link\").text(version);\n                });\n        } else {\n            $(\"#system-ostree-version\").toggleClass(\"hidden\", true);\n            $(\"#system-ostree-version-link\").text(\"\");\n        }\n    },\n\n    shutdown: function(action_type) {\n        shutdown(action_type, this.server_time);\n    },\n};\n\nfunction PageServer() {\n    this._init();\n}\n\nPageSystemInformationChangeHostname.prototype = {\n    _init: function() {\n        this.id = \"system_information_change_hostname\";\n    },\n\n    setup: function() {\n        $(\"#sich-pretty-hostname\").on(\"input change\", $.proxy(this._on_full_name_changed, this));\n        $(\"#sich-hostname\").on(\"input change\", $.proxy(this._on_name_changed, this));\n        $(\"#sich-apply-button\").on(\"click\", $.proxy(this._on_apply_button, this));\n    },\n\n    enter: function() {\n        var self = this;\n\n        self.hostname_proxy = PageSystemInformationChangeHostname.client.proxy();\n\n        self._initial_hostname = self.hostname_proxy.StaticHostname || \"\";\n        self._initial_pretty_hostname = self.hostname_proxy.PrettyHostname || \"\";\n        $(\"#sich-pretty-hostname\").val(self._initial_pretty_hostname);\n        $(\"#sich-hostname\").val(self._initial_hostname);\n\n        this._always_update_from_pretty = false;\n        this._update();\n    },\n\n    show: function() {\n        $(\"#sich-pretty-hostname\").focus();\n    },\n\n    leave: function() {\n        this.hostname_proxy = null;\n    },\n\n    _on_apply_button: function(event) {\n        var self = this;\n\n        var new_full_name = $(\"#sich-pretty-hostname\").val();\n        var new_name = $(\"#sich-hostname\").val();\n\n        var one = self.hostname_proxy.call(\"SetStaticHostname\", [new_name, true]);\n        var two = self.hostname_proxy.call(\"SetPrettyHostname\", [new_full_name, true]);\n        $(\"#system_information_change_hostname\").dialog(\"promise\", cockpit.all(one, two));\n    },\n\n    _on_full_name_changed: function(event) {\n        /* Whenever the pretty host name has changed (e.g. the user has edited it), we compute a new\n         * simple host name (e.g. 7bit ASCII, no special chars/spaces, lower case) from it...\n         */\n        var pretty_hostname = $(\"#sich-pretty-hostname\").val();\n        if (this._always_update_from_pretty || this._initial_pretty_hostname != pretty_hostname) {\n            var old_hostname = $(\"#sich-hostname\").val();\n            var first_dot = old_hostname.indexOf(\".\");\n            var new_hostname = pretty_hostname.toLowerCase().replace(/['\".]+/g, \"\").replace(/[^a-zA-Z0-9]+/g, \"-\");\n            new_hostname = new_hostname.substr(0, 64);\n            if (first_dot >= 0)\n                new_hostname = new_hostname + old_hostname.substr(first_dot);\n            $(\"#sich-hostname\").val(new_hostname);\n            this._always_update_from_pretty = true; // make sure we always update it from now-on\n        }\n        this._update();\n    },\n\n    _on_name_changed: function(event) {\n        this._update();\n    },\n\n    _update: function() {\n        var apply_button = $(\"#sich-apply-button\");\n        var note1 = $(\"#sich-note-1\");\n        var note2 = $(\"#sich-note-2\");\n        var changed = false;\n        var valid = false;\n        var can_apply = false;\n\n        var charError = _(\"Real host name can only contain lower-case characters, digits, dashes, and periods (with populated subdomains)\");\n        var lengthError = _(\"Real host name must be 64 characters or less\");\n\n        var validLength = $(\"#sich-hostname\").val().length <= 64;\n        var hostname = $(\"#sich-hostname\").val();\n        var pretty_hostname = $(\"#sich-pretty-hostname\").val();\n        var validSubdomains = true;\n        var periodCount = 0;\n\n        for(var i=0; i<$(\"#sich-hostname\").val().length; i++) {\n            if($(\"#sich-hostname\").val()[i] == '.')\n                periodCount++;\n            else\n                periodCount = 0;\n\n            if(periodCount > 1) {\n                validSubdomains = false;\n                break;\n            }\n        }\n\n        var validName = (hostname.match(/[.a-z0-9-]*/) == hostname) && validSubdomains;\n\n        if ((hostname != this._initial_hostname ||\n            pretty_hostname != this._initial_pretty_hostname) &&\n            (hostname !== \"\" || pretty_hostname !== \"\"))\n            changed = true;\n\n        if (validLength && validName)\n            valid = true;\n\n        if (changed && valid)\n            can_apply = true;\n\n        if (valid) {\n            $(note1).css(\"visibility\", \"hidden\");\n            $(note2).css(\"visibility\", \"hidden\");\n            $(\"#sich-hostname-error\").removeClass(\"has-error\");\n        } else if(!validLength && validName) {\n            $(\"#sich-hostname-error\").addClass(\"has-error\");\n            $(note1).text(lengthError);\n            $(note1).css(\"visibility\", \"visible\");\n            $(note2).css(\"visibility\", \"hidden\");\n        } else if(validLength && !validName) {\n            $(\"#sich-hostname-error\").addClass(\"has-error\");\n            $(note1).text(charError);\n            $(note1).css(\"visibility\", \"visible\");\n            $(note2).css(\"visibility\", \"hidden\");\n        } else {\n            $(\"#sich-hostname-error\").addClass(\"has-error\");\n\n            if($(note1).text() === lengthError)\n                $(note2).text(charError);\n            else if($(note1).text() === charError)\n                $(note2).text(lengthError);\n            else {\n                $(note1).text(lengthError);\n                $(note2).text(charError);\n            }\n            $(note1).css(\"visibility\", \"visible\");\n            $(note2).css(\"visibility\", \"visible\");\n        }\n\n        apply_button.prop('disabled', !can_apply);\n    }\n};\n\nfunction PageSystemInformationChangeHostname() {\n    this._init();\n}\n\nPageSystemInformationChangeSystime.prototype = {\n    _init: function() {\n        this.id = \"system_information_change_systime\";\n        this.date = \"\";\n        this.ntp_type = null;\n    },\n\n    setup: function() {\n        var self = this;\n\n        function enable_apply_button() {\n            $('#systime-apply-button').prop('disabled', false);\n        }\n\n\n        $(\"#systime-apply-button\").on(\"click\", $.proxy(this._on_apply_button, this));\n\n        self.ntp_type = \"manual_time\";\n        $('#change_systime li').on('click', function() {\n            self.ntp_type = $(this).attr(\"value\");\n            self.update();\n        });\n\n        $('#systime-time-minutes').on('focusout', $.proxy(this, \"update_minutes\"));\n        $('#systime-date-input').datepicker({\n            autoclose: true,\n            todayHighlight: true,\n            format: 'yyyy-mm-dd'\n        });\n        $('#systime-timezones').css('max-height', '10em');\n        $('#systime-timezones').combobox();\n\n        $('#systime-time-minutes').on('input', enable_apply_button);\n        $('#systime-time-hours').on('input', enable_apply_button);\n        $('#systime-date-input').on('input', enable_apply_button);\n        $('#systime-timezones').on('change', enable_apply_button);\n        $('#change_systime').on('click', enable_apply_button);\n        $('#systime-date-input').on('focusin', $.proxy(this, \"store_date\"));\n        $('#systime-date-input').on('focusout', $.proxy(this, \"restore_date\"));\n\n        self.ntp_servers_tmpl = $(\"#ntp-servers-tmpl\").html();\n        Mustache.parse(this.ntp_servers_tmpl);\n\n        $('#systime-ntp-servers').on('click', '[data-action=\"add\"]', function () {\n            var index = $(this).attr('data-index');\n            self.sync_ntp_servers();\n            self.custom_ntp_servers.splice(index+1, 0, \"\");\n            self.update_ntp_servers();\n\n            // HACK - without returning 'false' here, the dialog will\n            // be magically closed when controlled by the\n            // check-system-info test.\n            return false;\n        });\n\n        $('#systime-ntp-servers').on('click', '[data-action=\"del\"]', function () {\n            var index = $(this).attr('data-index');\n            self.sync_ntp_servers();\n            self.custom_ntp_servers.splice(index, 1);\n            self.update_ntp_servers();\n\n            // HACK - without returning 'false' here, the dialog will\n            // be magically closed when controlled by the\n            // check-system-info test.\n            return false;\n        });\n    },\n\n    enter: function() {\n        var self = this;\n\n        $('#systime-date-input').val(self.server_time.format());\n        $('#systime-time-minutes').val(self.server_time.utc_fake_now.getUTCMinutes());\n        $('#systime-time-hours').val(self.server_time.utc_fake_now.getUTCHours());\n\n        self.ntp_type = self.server_time.timedate.NTP ?\n                        (self.custom_ntp_enabled ? 'ntp_time_custom' : 'ntp_time') : 'manual_time';\n        $('#change_systime [value=\"ntp_time\"]').\n            toggleClass(\"disabled\", !self.server_time.timedate.CanNTP);\n        $('#change_systime [value=\"ntp_time_custom\"]').\n            toggleClass(\"disabled\", !(self.server_time.timedate.CanNTP && self.custom_ntp_supported));\n        $('#systime-parse-error').parents('tr').hide();\n        $('#systime-timezone-error').parents('tr').hide();\n        $('#systime-apply-button').prop('disabled', false);\n        $('#systime-timezones').prop('disabled', 'disabled');\n\n        self.update();\n        self.update_minutes();\n        self.update_ntp_servers();\n        self.get_timezones();\n    },\n\n    display: function(server_time) {\n        var self = this;\n\n        if (self.server_time) {\n            console.warn(\"change-systime dialog reentered\");\n            return;\n        }\n\n        self.server_time = server_time;\n\n        self.get_ntp_servers(function () {\n            $('#system_information_change_systime').modal('show');\n        });\n    },\n\n    get_timezones: function() {\n        var self = this;\n\n        function parse_timezones(content) {\n            var lines = content.split('\\n');\n            var curr_timezone = self.server_time.timedate.Timezone;\n\n            $('#systime-timezones').empty();\n\n            for (var i = 0; i < lines.length; i++) {\n                $('#systime-timezones').append($('<option>', {\n                    value: lines[i],\n                    text: lines[i].replace(/_/g, \" \"),\n                    selected: lines[i] == curr_timezone\n                }));\n            }\n\n            $('#systime-timezones').prop('disabled', false);\n            $('#systime-timezones').combobox('refresh');\n        }\n\n        cockpit.spawn([\"/usr/bin/timedatectl\", \"list-timezones\"])\n           .done(parse_timezones);\n    },\n\n    get_ntp_servers: function(callback) {\n        var self = this;\n\n        /* We only support editing the configuration of\n         * systemd-timesyncd, by dropping a file into\n         * /etc/systemd/timesyncd.conf.d.  We assume that timesyncd is\n         * used when:\n         *\n         * - systemd-timedated is answering for\n         *   org.freedesktop.timedate1 as opposed to, say, timedatex.\n         *\n         * - systemd-timesyncd is actually available.\n         *\n         * The better alternative would be to have an API in\n         * o.fd.timedate1 for managing the list of NTP server\n         * candidates.\n         */\n\n        var timedate1 = self.server_time.timedate1_service;\n        var timesyncd = self.server_time.timesyncd_service;\n\n        self.custom_ntp_supported = false;\n        self.custom_ntp_enabled = false;\n        self.custom_ntp_servers = [ ];\n\n        function check() {\n            if ((timedate1.exists === false || timedate1.unit) && (timesyncd.exists !== null)) {\n\n                $([ timedate1, timesyncd ]).off(\".get_ntp_servers\");\n\n                if (!timedate1.exists || timedate1.unit.Id !== \"systemd-timedated.service\") {\n                    console.log(\"systemd-timedated not in use, ntp server configuration not supported\");\n                    callback();\n                    return;\n                }\n\n                if (!timesyncd.exists) {\n                    console.log(\"systemd-timesyncd not available, ntp server configuration not supported\");\n                    callback();\n                    return;\n                }\n\n                self.custom_ntp_supported = true;\n\n                if (!self.ntp_config_file)\n                    self.ntp_config_file = cockpit.file(\"/etc/systemd/timesyncd.conf.d/50-cockpit.conf\",\n                                                        { superuser: \"try\" });\n\n                self.ntp_config_file.read().\n                    done(function (text) {\n                        var ntp_line = \"\";\n                        self.ntp_servers = null;\n                        if (text) {\n                            self.custom_ntp_enabled = true;\n                            text.split(\"\\n\").forEach(function (line) {\n                                if (line.indexOf(\"NTP=\") === 0) {\n                                    ntp_line = line.slice(4);\n                                    self.custom_ntp_enabled = true;\n                                } else if (line.indexOf(\"#NTP=\") === 0) {\n                                    ntp_line = line.slice(5);\n                                    self.custom_ntp_enabled = false;\n                                }\n                            });\n\n                            self.custom_ntp_servers = ntp_line.split(\" \").filter(function (val) {\n                                return val !== \"\";\n                            });\n                            if (self.custom_ntp_servers.length === 0)\n                                self.custom_ntp_enabled = false;\n                        }\n                        callback();\n                    }).\n                    fail(function (error) {\n                        console.warn(\"failed to load time servers\", error);\n                        callback();\n                    });\n            }\n        }\n\n        $([ timedate1, timesyncd ]).on(\"changed.get_ntp_servers\", check);\n        check();\n    },\n\n    set_ntp_servers: function(servers, enabled) {\n        var self = this;\n\n        var text = cockpit.format(\"# This file is automatically generated by Cockpit\\n\\n[Time]\\n${0}NTP=${1}\\n\",\n                                  enabled? \"\" : \"#\", servers.join(\" \"));\n\n        return cockpit.spawn([ \"mkdir\", \"-p\", \"/etc/systemd/timesyncd.conf.d\" ], { superuser: \"try\" }).\n            then(function () {\n                return self.ntp_config_file.replace(text); });\n    },\n\n    show: function() {\n    },\n\n    leave: function() {\n        var self = this;\n\n        $(self.server_time.timedate1_service).off(\".change_systime\");\n        $(self.server_time.timesyncd_service).off(\".change_systime\");\n        self.server_time = null;\n    },\n\n    _on_apply_button: function(event) {\n        var self = this;\n\n        if (!self.check_input())\n            return;\n\n        var manual_time = self.ntp_type == 'manual_time';\n        var ntp_time_custom = self.ntp_type == 'ntp_time_custom';\n\n        self.sync_ntp_servers();\n        var servers = self.custom_ntp_servers.filter(function (val) { return val !== \"\"; });\n\n        function target_error (msg, target) {\n            var err = new Error(msg);\n            err.target = target;\n            return err;\n        }\n\n        if (ntp_time_custom && servers.length === 0) {\n            var err = target_error(_(\"Need at least one NTP server\"),\n                                   '#systime-ntp-servers .systime-inline');\n            $(\"#system_information_change_systime\").dialog(\"failure\", err);\n            return;\n        }\n\n        var promises = [ ];\n\n        if (!$('#systime-timezones').prop('disabled')) {\n            promises.push(\n                self.server_time.timedate.call('SetTimezone', [$('#systime-timezones').val(), true]));\n        }\n\n        function set_ntp(val) {\n            return self.server_time.timedate.call('SetNTP', [val, true]);\n        }\n\n        if (manual_time) {\n            promises.push(\n                set_ntp(false)\n                    .then(function () {\n                        return self.server_time.change_time($(\"#systime-date-input\").val(),\n                                                            $('#systime-time-hours').val(),\n                                                            $('#systime-time-minutes').val());\n                    }));\n        } else if (!self.custom_ntp_supported) {\n            promises.push(\n                set_ntp(true));\n        } else {\n            /* HACK - https://bugzilla.redhat.com/show_bug.cgi?id=1272085\n             *\n             * Switch off NTP, bump the clock by one microsecond to\n             * clear the NTPSynchronized status, write the config\n             * file, and switch NTP back on.\n             *\n             */\n            promises.push(\n                set_ntp(false)\n                    .then(function () {\n                        return self.server_time.timedate.call('SetTime', [ 1, true, true ]);\n                    })\n                    .then(function () {\n                        return self.set_ntp_servers(servers, ntp_time_custom);\n                    })\n                    .then(function() {\n                        // NTPSynchronized should be false now.  Make\n                        // sure we pick that up immediately.\n                        self.server_time.poll_ntp_synchronized();\n\n                        return set_ntp(true);\n                    }));\n        }\n\n        $(\"#system_information_change_systime\").dialog(\"promise\", cockpit.all(promises));\n    },\n\n    check_input: function() {\n        var date_error = false;\n        var timezone_error = false;\n        var new_date;\n\n        var hours = $('#systime-time-hours').val();\n        var minutes = $('#systime-time-minutes').val();\n        var time_error = !/^[0-9]+$/.test(hours.trim()) || !/^[0-9]+$/.test(minutes.trim());\n\n        if (!time_error) {\n            hours = Number(hours);\n            minutes = Number(minutes);\n            time_error = hours < 0 || hours > 23 || minutes < 0 || minutes > 59;\n        }\n\n        new_date = new Date($(\"#systime-date-input\").val());\n\n        if (isNaN(new_date.getTime()) || new_date.getTime() < 0)\n            date_error = true;\n\n        if (time_error && date_error)\n           $('#systime-parse-error').text(_(\"Invalid date format and invalid time format\"));\n        else if (time_error)\n           $('#systime-parse-error').text(_(\"Invalid time format\"));\n        else if (date_error)\n           $('#systime-parse-error').text(_(\"Invalid date format\"));\n\n        if ($('#systime-timezones').val() === \"\") {\n           timezone_error = true;\n           $('#systime-timezone-error').css('visibility', 'visible');\n        } else {\n           $('#systime-timezone-error').css('visibility', 'hidden');\n        }\n\n        $('#systime-timezones').toggleClass(\"has-error\", ! timezone_error);\n        $('#systime-time-hours').toggleClass(\"has-error\", ! time_error);\n        $('#systime-time-minutes').toggleClass(\"has-error\", ! time_error);\n        $('#systime-date-input').toggleClass(\"has-error\", ! date_error);\n\n        $('#systime-parse-error').parents('tr').toggleClass(\"has-error\", time_error || date_error);\n        $('#systime-parse-error').toggle(time_error || date_error);\n        $('#systime-timezone-error').parents('tr').toggle(timezone_error);\n\n        if (time_error || date_error || timezone_error) {\n            $('#systime-apply-button').prop('disabled', true);\n            return false;\n        } else {\n            $('#systime-apply-button').prop('disabled', false);\n            return true;\n        }\n    },\n\n    update: function() {\n        var self = this;\n        var manual_time = self.ntp_type === 'manual_time';\n        var ntp_time_custom = self.ntp_type === 'ntp_time_custom';\n        var text = $(\"#change_systime li[value=\" + self.ntp_type + \"]\").text();\n        $(\"#change_systime button span\").text(text);\n        $('#systime-manual-row, #systime-manual-error-row').toggle(manual_time);\n        $('#systime-ntp-servers-row').toggle(ntp_time_custom);\n        $('#systime-parse-error').hide();\n    },\n\n    sync_ntp_servers: function() {\n        var self = this;\n\n        self.custom_ntp_servers = $('#systime-ntp-servers input').map(function (i, elt) {\n            return $(elt).val();\n        }).get();\n    },\n\n    update_ntp_servers: function() {\n        var self = this;\n\n        if (self.custom_ntp_servers === null || self.custom_ntp_servers.length === 0)\n            self.custom_ntp_servers = [ \"\" ];\n\n        var model = {\n            NTPServers: self.custom_ntp_servers.map(function (val, i) {\n                return { index: i,\n                         Value: val,\n                         Placeholder: _(\"NTP Server\")\n                       };\n            })\n        };\n\n        $('#systime-ntp-servers').html(Mustache.render(self.ntp_servers_tmpl, model));\n    },\n\n    update_minutes: function() {\n        var val = parseInt($('#systime-time-minutes').val(), 10);\n        if (val < 10)\n            $('#systime-time-minutes').val(\"0\" + val);\n    },\n\n    store_date: function() {\n        this.date = $(\"#systime-date-input\").val();\n    },\n\n    restore_date: function() {\n        if ($(\"#systime-date-input\").val().length === 0)\n            $(\"#systime-date-input\").val(this.date);\n    }\n};\n\nfunction PageSystemInformationChangeSystime() {\n    this._init();\n}\n\nPageCpuStatus.prototype = {\n    _init: function() {\n        this.id = \"cpu_status\";\n    },\n\n    getTitle: function() {\n        return C_(\"page-title\", \"CPU Status\");\n    },\n\n    enter: function() {\n        var self = this;\n\n        var n_cpus = 1;\n\n        var options = {\n            series: {shadowSize: 0,\n                     lines: {lineWidth: 0, fill: true}\n                    },\n            yaxis: {min: 0,\n                    max: n_cpus * 1000,\n                    show: true,\n                    ticks: 5,\n                    tickFormatter: function(v) { return (v / 10 / n_cpus) + \"%\"; }},\n            xaxis: {show: true,\n                    ticks: [[0.0*60, \"5 min\"],\n                            [1.0*60, \"4 min\"],\n                            [2.0*60, \"3 min\"],\n                            [3.0*60, \"2 min\"],\n                            [4.0*60, \"1 min\"]]},\n            x_rh_stack_graphs: true\n        };\n\n        var metrics = [\n            { name: \"cpu.basic.iowait\", derive: \"rate\" },\n            { name: \"cpu.basic.system\", derive: \"rate\" },\n            { name: \"cpu.basic.user\", derive: \"rate\" },\n            { name: \"cpu.basic.nice\", derive: \"rate\" },\n        ];\n\n        var series = [\n            { color: \"#e41a1c\", label: _(\"I/O Wait\") },\n            { color: \"#ff7f00\", label: _(\"Kernel\") },\n            { color: \"#377eb8\", label: _(\"User\") },\n            { color: \"#4daf4a\", label: _(\"Nice\") },\n        ];\n\n        self.channel = cockpit.metrics(1000, {\n            source: \"internal\",\n            metrics: metrics,\n            cache: \"cpu-status-rate\"\n        });\n\n        /* The grid shows us the last five minutes */\n        self.grid = cockpit.grid(1000, -300, -0);\n\n        var i;\n        for(i = 0; i < series.length; i++) {\n            series[i].row = self.grid.add(self.channel, [ metrics[i].name ]);\n        }\n\n        /* Start pulling data, and make the grid follow the data */\n        self.channel.follow();\n        self.grid.walk();\n\n        this.plot = plot.setup_complicated_plot(\"#cpu_status_graph\", self.grid, series, options);\n\n        machine_info.cpu_ram_info().\n            done(function (info) {\n                // Setting n_cpus changes the tick labels, see tickFormatter above.\n                n_cpus = info.cpus;\n                self.plot.set_yaxis_max(n_cpus * 1000);\n                $(\"#cpu_status_title\").text(cockpit.format(cockpit.ngettext(\"Usage of $0 CPU core\",\n                                                                            \"Usage of $0 CPU cores\",\n                                                                            n_cpus),\n                                                           n_cpus));\n            });\n    },\n\n    show: function() {\n        this.plot.start();\n    },\n\n    leave: function() {\n        this.plot.destroy();\n        this.channel.close();\n        this.channel = null;\n    }\n};\n\nfunction PageCpuStatus() {\n    this._init();\n}\n\nPageMemoryStatus.prototype = {\n    _init: function() {\n        this.id = \"memory_status\";\n    },\n\n    getTitle: function() {\n        return C_(\"page-title\", \"Memory\");\n    },\n\n    enter: function() {\n        var self = this;\n\n        var options = {\n            series: {shadowSize: 0, // drawing is faster without shadows\n                     lines: {lineWidth: 0.0, fill: true}\n                    },\n            yaxis: {min: 0,\n                    ticks: 5,\n                    tickFormatter: function (v) {\n                        return cockpit.format_bytes(v);\n                    }\n                   },\n            xaxis: {show: true,\n                    ticks: [[0.0 * 60, _(\"5 min\")],\n                            [1.0 * 60, _(\"4 min\")],\n                            [2.0 * 60, _(\"3 min\")],\n                            [3.0 * 60, _(\"2 min\")],\n                            [4.0 * 60, _(\"1 min\")]]},\n            x_rh_stack_graphs: true\n        };\n\n        var metrics = [\n            { name: \"memory.swap-used\" },\n            { name: \"memory.cached\" },\n            { name: \"memory.used\" },\n            { name: \"memory.free\" },\n        ];\n\n        var series = [\n            { color: \"#e41a1c\", label: _(\"Swap Used\") },\n            { color: \"#ff7f00\", label: _(\"Cached\") },\n            { color: \"#377eb8\", label: _(\"Used\") },\n            { color: \"#4daf4a\", label: _(\"Free\") },\n        ];\n\n        self.channel = cockpit.metrics(1000, {\n            source: \"internal\",\n            metrics: metrics,\n            cache: \"memory-status\"\n        });\n\n        /* The grid shows us the last five minutes */\n        self.grid = cockpit.grid(1000, -300, -0);\n\n        var i;\n        for(i = 0; i < series.length; i++) {\n            series[i].row = self.grid.add(self.channel, [ metrics[i].name ]);\n        }\n\n        /* Start pulling data, and make the grid follow the data */\n        self.channel.follow();\n        self.grid.walk();\n\n        this.plot = plot.setup_complicated_plot(\"#memory_status_graph\", self.grid, series, options);\n    },\n\n    show: function() {\n        this.plot.start();\n    },\n\n    leave: function() {\n        this.plot.destroy();\n        this.channel.close();\n        this.channel = null;\n    }\n};\n\nfunction PageMemoryStatus() {\n    this._init();\n}\n\n$(\"#link-cpu\").on(\"click\", function() {\n    cockpit.location.go([ \"cpu\" ]);\n    return false;\n});\n\n$(\"#link-memory\").on(\"click\", function() {\n    cockpit.location.go([ \"memory\" ]);\n    return false;\n});\n\n$(\"#link-network\").on(\"click\", function() {\n    cockpit.jump(\"/network\", cockpit.transport.host);\n    return false;\n});\n\n$(\"#link-disk\").on(\"click\", function() {\n    cockpit.jump(\"/storage\", cockpit.transport.host);\n    return false;\n});\n\n$(\"#system_information_hardware_text\").on(\"click\", function() {\n    $(\"#system_information_hardware_text\").tooltip(\"hide\");\n    cockpit.jump(\"/system/hwinfo\", cockpit.transport.host);\n    return false;\n});\n\n\n/*\n * INITIALIZATION AND NAVIGATION\n *\n * The code above still uses the legacy 'Page' abstraction for both\n * pages and dialogs, and expects page.setup, page.enter, page.show,\n * and page.leave to be called at the right times.\n *\n * We cater to this with a little compatability shim consisting of\n * 'dialog_setup', 'page_show', and 'page_hide'.\n */\n\nfunction dialog_setup(d) {\n    d.setup();\n    $('#' + d.id).\n        on('show.bs.modal', function (event) {\n            if (event.target.id === d.id)\n                d.enter();\n        }).\n        on('shown.bs.modal', function (event) {\n            if (event.target.id === d.id)\n              d.show();\n        }).\n        on('hidden.bs.modal', function (event) {\n            if (event.target.id === d.id)\n              d.leave();\n        });\n}\n\nfunction page_show(p, arg) {\n    if (!p._entered_)\n        p.enter(arg);\n    p._entered_ = true;\n    $('#' + p.id).show().removeAttr(\"hidden\");\n    p.show();\n}\n\nfunction page_hide(p) {\n    $('#' + p.id).hide();\n}\n\nfunction init() {\n    var server_page;\n    var memory_page;\n    var cpu_page;\n\n    function navigate() {\n        var path = cockpit.location.path;\n\n        if (path.length === 0) {\n            page_hide(cpu_page);\n            page_hide(memory_page);\n            page_show(server_page);\n        } else if (path.length === 1 && path[0] == 'cpu') {\n            page_hide(server_page);\n            page_hide(memory_page);\n            page_show(cpu_page);\n        } else if (path.length === 1 && path[0] == 'memory') {\n            page_hide(server_page);\n            page_hide(cpu_page);\n            page_show(memory_page);\n        } else { /* redirect */\n            console.warn(\"not a system location: \" + path);\n            cockpit.location = '';\n        }\n\n        $(\"body\").removeAttr(\"hidden\");\n    }\n\n    cockpit.translate();\n\n    server_page = new PageServer();\n    server_page.setup();\n\n    cpu_page = new PageCpuStatus();\n    memory_page = new PageMemoryStatus();\n\n    dialog_setup(new PageSystemInformationChangeHostname());\n    dialog_setup(change_systime_dialog = new PageSystemInformationChangeSystime());\n\n    $(cockpit).on(\"locationchanged\", navigate);\n    navigate();\n}\n\n$(init);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/systemd/host.js\n// module id = 155\n// module chunks = 3","/*jshint esversion: 6 */\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2017, 2018 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport cockpit from \"cockpit\";\n\nconst _ = cockpit.gettext;\n\n// see https://github.com/hughsie/PackageKit/blob/master/lib/packagekit-glib2/pk-enum.h\nexport const Enum = {\n    EXIT_SUCCESS: 1,\n    EXIT_FAILED: 2,\n    EXIT_CANCELLED: 3,\n    ROLE_REFRESH_CACHE: 13,\n    ROLE_UPDATE_PACKAGES: 22,\n    INFO_UNKNOWN: -1,\n    INFO_LOW: 3,\n    INFO_ENHANCEMENT: 4,\n    INFO_NORMAL: 5,\n    INFO_BUGFIX: 6,\n    INFO_IMPORTANT: 7,\n    INFO_SECURITY: 8,\n    STATUS_WAIT: 1,\n    STATUS_DOWNLOAD: 8,\n    STATUS_INSTALL: 9,\n    STATUS_UPDATE: 10,\n    STATUS_CLEANUP: 11,\n    STATUS_SIGCHECK: 14,\n    STATUS_WAITING_FOR_LOCK: 30,\n    FILTER_INSTALLED: (1 << 2),\n    FILTER_NOT_INSTALLED: (1 << 3),\n    FILTER_NEWEST: (1 << 16),\n    FILTER_ARCH: (1 << 18),\n    FILTER_NOT_SOURCE: (1 << 21),\n    ERROR_ALREADY_INSTALLED: 9,\n};\n\nexport const transactionInterface = \"org.freedesktop.PackageKit.Transaction\";\n\nvar _dbus_client = null;\n\n/**\n * Get PackageKit D-Bus client\n *\n * This will get lazily initialized and re-initialized after PackageKit\n * disconnects (due to a crash or idle timeout).\n */\nfunction dbus_client() {\n    if (_dbus_client === null) {\n        _dbus_client = cockpit.dbus(\"org.freedesktop.PackageKit\", { superuser: \"try\", \"track\": true });\n        _dbus_client.addEventListener(\"close\", () => {\n            console.log(\"PackageKit went away from D-Bus\");\n            _dbus_client = null;\n        });\n    }\n\n    return _dbus_client;\n}\n\n/**\n * Call a PackageKit method\n */\nexport function call(objectPath, iface, method, args, opts) {\n    return dbus_client().call(objectPath, iface, method, args, opts);\n}\n\n/**\n * Watch a running PackageKit transaction\n *\n * transactionPath (string): D-Bus object path of the PackageKit transaction\n * signalHandlers, notifyHandler: As in method #transaction\n * Returns: If notifyHandler is set, Cockpit promise that resolves when the watch got set up\n */\nexport function watchTransaction(transactionPath, signalHandlers, notifyHandler) {\n    var subscriptions = [];\n    var notifyReturn;\n    var client = dbus_client();\n\n    // Listen for PackageKit crashes while the transaction runs\n    function onClose(event, ex) {\n        console.warn(\"PackageKit went away during transaction\", transactionPath, \":\", JSON.stringify(ex));\n        if (signalHandlers.ErrorCode)\n            signalHandlers.ErrorCode(\"close\", _(\"PackageKit crashed\"));\n        if (signalHandlers.Finished)\n            signalHandlers.Finished(Enum.EXIT_FAILED);\n    }\n    client.addEventListener(\"close\", onClose);\n\n    if (signalHandlers) {\n        Object.keys(signalHandlers).forEach(handler => subscriptions.push(\n            client.subscribe({ interface: transactionInterface, path: transactionPath, member: handler },\n                             (path, iface, signal, args) => signalHandlers[handler](...args)))\n        );\n    }\n\n    if (notifyHandler) {\n        notifyReturn = client.watch(transactionPath);\n        subscriptions.push(notifyReturn);\n        client.addEventListener(\"notify\", reply => {\n            if (transactionPath in reply.detail && transactionInterface in reply.detail[transactionPath])\n                notifyHandler(reply.detail[transactionPath][transactionInterface], transactionPath);\n        });\n    }\n\n    // unsubscribe when transaction finished\n    subscriptions.push(client.subscribe(\n        { interface: transactionInterface, path: transactionPath, member: \"Finished\" },\n        () => {\n            subscriptions.map(s => s.remove());\n            client.removeEventListener(\"close\", onClose);\n        })\n    );\n\n    return notifyReturn;\n}\n\n/**\n * Run a PackageKit transaction\n *\n * method (string): D-Bus method name on the https://www.freedesktop.org/software/PackageKit/gtk-doc/Transaction.html interface\n *                  If undefined, only a transaction will be created without calling a method on it\n * arglist (array): \"in\" arguments of @method\n * signalHandlers (object): maps PackageKit.Transaction signal names to handlers\n * notifyHandler (function): handler for http://cockpit-project.org/guide/latest/cockpit-dbus.html#cockpit-dbus-onnotify\n *                           signals, called on property changes with (changed_properties, transaction_path)\n * Returns: Promise that resolves with transaction path on success, or rejects on an error\n *\n * Note that most often you don't really need the transaction path, but want to\n * listen to the \"Finished\" signal.\n *\n * Example:\n *     transaction(\"GetUpdates\", [0], {\n *             Package: (info, packageId, _summary) => { ... },\n *             ErrorCode: (code, details) => { ... },\n *         },\n *         changedProps => { ... }  // notify handler\n *     )\n *        .then(transactionPath => { ... })\n *        .catch(ex => { handle exception });\n */\nexport function transaction(method, arglist, signalHandlers, notifyHandler) {\n    return new Promise((resolve, reject) => {\n        call(\"/org/freedesktop/PackageKit\", \"org.freedesktop.PackageKit\", \"CreateTransaction\", [], {timeout: 5000})\n            .done(result => {\n                let transactionPath = result[0];\n                let watchPromise;\n                if (signalHandlers || notifyHandler)\n                    watchPromise = watchTransaction(transactionPath, signalHandlers, notifyHandler);\n                if (!watchPromise)\n                    watchPromise = cockpit.resolve();\n\n                watchPromise\n                .done(() => {\n                    if (method) {\n                        call(transactionPath, transactionInterface, method, arglist)\n                            .done(() => resolve(transactionPath))\n                            .fail(reject);\n                    } else {\n                        resolve(transactionPath);\n                    }\n                })\n                .fail(reject);\n            })\n            .fail(reject);\n    });\n}\n\n/**\n * Run a long cancellable PackageKit transaction\n *\n * method (string): D-Bus method name on the https://www.freedesktop.org/software/PackageKit/gtk-doc/Transaction.html interface\n * arglist (array): \"in\" arguments of @method\n * progress_cb: Callback that receives a {waiting, percentage, cancel} object regularly; if cancel is not null, it can\n *              be called to cancel the current transaction. if wait is true, PackageKit is waiting for its lock (i. e.\n *              on another package operation)\n * signalHandlers, notifyHandler: As in method #transaction, but ErrorCode and Finished are handled internally\n * Returns: Promise that resolves when the transaction finished successfully, or rejects with {detail, code}\n *          on failure.\n */\nexport function cancellableTransaction(method, arglist, progress_cb, signalHandlers) {\n    if (signalHandlers && (signalHandlers.ErrorCode || signalHandlers.Finished))\n        throw \"cancellableTransaction handles ErrorCode and Finished signals internally\";\n\n    return new Promise((resolve, reject) => {\n        let cancelled = false;\n        let status;\n        let allow_wait_status = false;\n        let progress_data = {\n            waiting: false,\n            percentage: 0,\n            cancel: null\n        };\n\n        function changed(props, transaction_path) {\n            function cancel() {\n                call(transaction_path, transactionInterface, \"Cancel\", []);\n                cancelled = true;\n            }\n\n            if (progress_cb) {\n                if (\"Status\" in props)\n                    status = props.Status;\n                progress_data.waiting = allow_wait_status && (status === Enum.STATUS_WAIT || status === Enum.STATUS_WAITING_FOR_LOCK);\n                if (\"Percentage\" in props && props.Percentage <= 100)\n                    progress_data.percentage = props.Percentage;\n                if (\"AllowCancel\" in props)\n                    progress_data.cancel = props.AllowCancel ? cancel : null;\n\n                progress_cb(progress_data);\n            }\n        }\n\n        // We ignore STATUS_WAIT and friends during the first second of a transaction.  They\n        // are always reported briefly even when a transaction doesn't really need to wait.\n        window.setTimeout(() => {\n            allow_wait_status = true;\n            changed({});\n        }, 1000);\n\n        transaction(method, arglist,\n            Object.assign({\n                // avoid calling progress_cb after ending the transaction, to avoid flickering cancel buttons\n                ErrorCode: (code, detail) => {\n                    progress_cb = null;\n                    reject({ detail, code: cancelled ? \"cancelled\" : code });\n                },\n                Finished: (exit, runtime) => {\n                    progress_cb = null;\n                    resolve(exit);\n                },\n            }, signalHandlers || {}),\n            changed).\n            catch(ex => {\n                progress_cb = null;\n                reject(ex);\n            });\n    });\n}\n\n/**\n * Get appropriate icon classes for an update severity\n *\n * info: An Enum.INFO_* level\n * secSeverity: If given, further classification of the severity of Enum.INFO_SECURITY from the vendor_urls;\n *              e. g. \"critical\", see https://access.redhat.com/security/updates/classification\n * Returns: Icon classes; put them into <span class=\"returnvalue\">&nbsp;</span>\n *\n */\nexport function getSeverityIcon(info, secSeverity) {\n    if (info == Enum.INFO_SECURITY)\n        return \"pficon pficon-security\" + (secSeverity ? \" severity-\" + secSeverity : \"\");\n    else if (info >= Enum.INFO_NORMAL)\n        return \"fa fa-bug\";\n    else\n        return \"pficon pficon-enhancement\";\n}\n\n\n// possible Red Hat subscription manager status values:\n// https://github.com/candlepin/subscription-manager/blob/30c3b52320c3e73ebd7435b4fc8b0b6319985d19/src/rhsm_icon/rhsm_icon.c#L98\n// we accept RHSM_VALID(0), RHN_CLASSIC(3), and RHSM_PARTIALLY_VALID(4)\nconst validSubscriptionStates = [0, 3, 4];\n\n/**\n * Check Red Hat subscription-manager if if this is an unregistered RHEL\n * system. If subscription-manager is not installed, nothing happens.\n *\n * callback: Called with a boolean (true: registered, false: not registered)\n *           after querying subscription-manager once, and whenever the value\n *           changes.\n */\nexport function watchRedHatSubscription(callback) {\n        // check if this is an unregistered RHEL system; if subscription-manager is not installed, ignore\n        var sm = cockpit.dbus(\"com.redhat.SubscriptionManager\");\n        sm.subscribe(\n            { path: \"/EntitlementStatus\",\n              interface: \"com.redhat.SubscriptionManager.EntitlementStatus\",\n              member: \"entitlement_status_changed\"\n            },\n            (path, iface, signal, args) => callback(validSubscriptionStates.indexOf(args[0]) >= 0)\n        );\n        sm.call(\n            \"/EntitlementStatus\", \"com.redhat.SubscriptionManager.EntitlementStatus\", \"check_status\")\n            .done(result => callback(validSubscriptionStates.indexOf(result[0]) >= 0) )\n            .fail(ex => {\n                if (ex.problem != \"not-found\")\n                    console.warn(\"Failed to query RHEL subscription status:\", ex);\n            }\n        );\n    }\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/lib/packagekit.es6","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2014 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar $ = require(\"jquery\");\nvar cockpit = require(\"cockpit\");\n\nrequire(\"jquery-flot/jquery.flot\");\nrequire(\"jquery-flot/jquery.flot.selection\");\nrequire(\"jquery-flot/jquery.flot.time\");\n\nvar plotter = { };\n\nvar C_ = cockpit.gettext;\n\n/* A thin abstraction over flot and metrics channels.  It mostly\n * shields you from hairy array acrobatics and having to know when it\n * is safe or required to create the flot object.\n *\n *\n * - plot = plotter.plot(element, x_range, [x_stop])\n *\n * Creates a 'plot' object attached to the given DOM element.  It will\n * show 'x_range' seconds worth of samples, until 'x_stop'.\n *\n * If 'x_stop' is undefined, the plot will show the last 'x_range'\n * seconds until now and walking will work as expected (see below).\n *\n * If 'x_stop' is not undefined, it should be the number of seconds\n * since the epoch.\n *\n * - plot.start_walking()\n *\n * Scroll towards the future.\n *\n * - plot.stop_walking()\n *\n * Stop automatic scrolling.\n *\n * - plot.refresh()\n *\n * Draw the plot.\n *\n * - plot.resize()\n *\n * Resize the plot to fit into its DOM element.  This will\n * automatically refresh the plot.  You should also call this function\n * when 'element' has changed visibility as that might affect its\n * size.\n *\n * - plot.set_options(options)\n *\n * Set the global flot options.  You need to refresh the plot\n * afterwards.\n *\n * In addition to the flot options, you can also set the 'setup_hook'\n * field to a function.  This function will be called between\n * flot.setData() and flot.draw() and can be used to adjust the axes\n * limits, for example.  It is called with the flot object as its only\n * parameter.\n *\n * Setting the 'post_hook' to a function will call that function after\n * each refresh of the plot.  This is used to decorate a plot with the\n * unit strings, for example.\n *\n * - options = plot.get_options()\n *\n * Get the global flot options.  You can modify the object and then\n * pass it to set_options.  Don't forget to refresh the plot.\n *\n * - plot.reset(x_range, [x_stop])\n *\n * Resets the range of the plot.  All current sources are reinitialzed\n * but keep their current samples.\n *\n * - plot.destroy()\n *\n * Resets the plot to be empty.  The plot will disappear completely\n * from the DOM, including the grid.\n *\n * - series = plot.add_metrics_sum_series(desc, options)\n *\n * Adds a single series into the plot that is fed by a metrics\n * channel.  The series will have the given flot options.  The plot\n * will automatically refresh as data becomes available from the\n * channel.\n *\n * The single value for the series is computed by summing the values\n * for all metrics and all instances that are delivered by the\n * channel.\n *\n * The 'desc' argument determines the channel options:\n *\n *   metrics:         An array with the names of all metrics to monitor.\n *   units:           The common units string for all metrics.\n *   instances:       A optional list of instances to include.\n *   omit_instances:  A optional list of instances to omit.\n *   factor:          A factor to apply to the final sum of all samples.\n *\n * - series.options\n *\n * Direct access to the series options.  You need to refresh the plot\n * after changing it.\n *\n * - series.move_to_front()\n *\n * Move the series in front of all other series.  You need to refresh\n * the plot to see the effect immediately.\n *\n * - series.remove()\n *\n * Removes the series from its plot.  The plot will be refreshed.\n *\n * - $(series).on('hover', function (event, val) { ... })\n *\n * This event is triggered when the user hovers over the series ('val'\n * == true), or stops hovering over it ('val' == false).\n */\n\nplotter.plot = function plot(element, x_range_seconds, x_stop_seconds) {\n    var options = { };\n    var result = { };\n\n    var series = [ ];\n    var flot_data = [ ];\n    var flot = null;\n\n    var interval;\n    var grid;\n\n    function refresh_now() {\n        if (element.height() === 0 || element.width() === 0)\n            return;\n\n        if (flot === null)\n            flot = $.plot(element, flot_data, options);\n\n        flot.setData(flot_data);\n        var axes = flot.getAxes();\n\n        /* Walking and fetching samples are not synchronized, which\n         * means that a walk step might reveal a sample that hasn't\n         * been fetched yet.  To reduce flicker, we cut off one extra\n         * sample at the end.\n         */\n        axes.xaxis.options.min = grid.beg * interval;\n        axes.xaxis.options.max = (grid.end - 2) * interval;\n        if (options.setup_hook)\n            options.setup_hook(flot);\n\n        /* This makes sure that the axes are displayed even for an\n         * empty plot.\n         */\n        axes.xaxis.show = true;\n        axes.xaxis.used = true;\n        axes.yaxis.show = true;\n        axes.yaxis.used = true;\n\n        flot.setupGrid();\n        flot.draw();\n\n        if (options.post_hook)\n            options.post_hook(flot);\n    }\n\n    var refresh_pending = false;\n\n    function refresh() {\n        if (!refresh_pending) {\n            refresh_pending = true;\n            window.setTimeout(function () {\n                refresh_pending = false;\n                refresh_now();\n            }, 0);\n        }\n    }\n\n    function start_walking() {\n        grid.walk();\n    }\n\n    function stop_walking() {\n        grid.move(grid.beg, grid.end);\n    }\n\n    var sync_suppressed = 0;\n\n    function reset(x_range_seconds, x_stop_seconds) {\n        if (flot)\n            flot.clearSelection(true);\n\n        // Fill the plot with about 1000 samples, but don't sample\n        // faster than once per second.\n        //\n        // TODO - do this based on the actual size of the plot.\n\n        interval = Math.ceil(x_range_seconds / 1000) * 1000;\n\n        var x_offset;\n        if (x_stop_seconds !== undefined)\n            x_offset = (new Date().getTime()) - x_stop_seconds * 1000;\n        else\n            x_offset = 0;\n\n        var beg = -Math.ceil((x_range_seconds * 1000 + x_offset) / interval);\n        var end = -Math.floor(x_offset / interval);\n\n        if (grid && grid.interval == interval) {\n            grid.move(beg, end);\n        } else {\n            if (grid)\n                grid.close();\n            grid = cockpit.grid(interval, beg, end);\n            sync_suppressed++;\n            for (var i = 0; i < series.length; i++)\n                series[i].reset();\n            sync_suppressed--;\n            sync();\n\n            $(grid).on('notify', function (event, index, count) {\n                refresh();\n            });\n        }\n    }\n\n    function sync() {\n        if (sync_suppressed === 0)\n            grid.sync();\n    }\n\n    function destroy() {\n        grid.close();\n        for (var i = 0; i < series.length; i++)\n            series[i].stop();\n\n        options = { };\n        series = [ ];\n        flot_data = [ ];\n        flot = null;\n        $(element).empty();\n        $(element).data(\"flot_data\", null);\n    }\n\n    function resize() {\n        if (element.height() === 0 || element.width() === 0)\n            return;\n        if (flot)\n            flot.resize();\n        refresh();\n    }\n\n    function set_options(opts) {\n        options = opts;\n        flot = null;\n    }\n\n    function get_options() {\n        return options;\n    }\n\n    function add_metrics_sum_series(desc, opts) {\n        var channel = null;\n\n        var self = {\n            options: opts,\n            move_to_front: move_to_front,\n            remove: remove\n        };\n\n        series.push({\n            stop: stop,\n            reset: reset_series,\n            hover_hit: hover_hit,\n            hover: hover\n        });\n\n        function stop() {\n            if (channel)\n                channel.close();\n        }\n\n        function add_series() {\n            flot_data.push(opts);\n        }\n\n        function remove_series() {\n            var pos = flot_data.indexOf(opts);\n            if (pos >= 0)\n                flot_data.splice(pos, 1);\n        }\n\n        function move_to_front() {\n            var pos = flot_data.indexOf(opts);\n            if (pos >= 0) {\n                flot_data.splice(pos, 1);\n                flot_data.push(opts);\n            }\n        }\n\n        function remove() {\n            stop();\n            remove_series();\n            refresh();\n        }\n\n        function build_metric(n) {\n            return { name: n, units: desc.units, derive: desc.derive };\n        }\n\n        var chanopts_list = [ ];\n\n        if (desc.direct) {\n            chanopts_list.push({ source: \"direct\",\n                                 archive_source: \"pcp-archive\",\n                                 metrics: desc.direct.map(build_metric),\n                                 instances: desc.instances,\n                                 \"omit-instances\": desc['omit-instances'],\n                                 host: desc.host\n                               });\n        }\n\n        if (desc.internal) {\n            chanopts_list.push({ source: \"internal\",\n                                 metrics: desc.internal.map(build_metric),\n                                 instances: desc.instances,\n                                 \"omit-instances\": desc['omit-instances'],\n                                 host: desc.host\n                               });\n        }\n\n        function flat_sum(val) {\n            var i, sum;\n\n            if (!val)\n                return 0;\n            if (val.length !== undefined) {\n                sum = 0;\n                for (i = 0; i < val.length; i++)\n                    sum += flat_sum(val[i]);\n                return sum;\n            }\n            return val;\n        }\n\n        function reset_series() {\n            if (channel)\n                channel.close();\n\n            channel = cockpit.metrics(interval, chanopts_list);\n\n            var metrics_row = grid.add(channel, [ ]);\n            var factor = desc.factor || 1;\n            opts.data = grid.add(function(row, x, n) {\n                for (var i = 0; i < n; i++)\n                    row[x + i] = [(grid.beg + x + i)*interval, flat_sum(metrics_row[x + i]) * factor];\n            });\n\n            function check_archives() {\n                if (channel.archives && !result.archives) {\n                    result.archives = true;\n                    $(result).triggerHandler(\"changed\");\n                }\n            }\n\n            $(channel).on('changed', check_archives);\n            check_archives();\n\n            sync();\n        }\n\n        function hover_hit(pos, item) {\n            return !!(item && (item.series.data == opts.data));\n        }\n\n        function hover(val) {\n            $(self).triggerHandler('hover', [ val ]);\n        }\n\n        reset_series();\n        add_series();\n\n        return self;\n    }\n\n    function add_metrics_stacked_instances_series(desc, opts) {\n        var channel = null;\n\n        var self = {\n            add_instance:    add_instance,\n            clear_instances: clear_instances\n        };\n\n        series.push({\n            stop: stop,\n            reset: reset_series,\n            hover_hit: hover_hit,\n            hover: hover\n        });\n\n        function stop() {\n            if (channel)\n                channel.close();\n        }\n\n        function build_metric(n) {\n            return { name: n, units: desc.units, derive: desc.derive };\n        }\n\n        var chanopts_list = [ ];\n\n        if (desc.direct) {\n            chanopts_list.push({ source: \"direct\",\n                                 archive_source: \"pcp-archive\",\n                                 metrics: [ build_metric(desc.direct) ],\n                                 metrics_path_names: [ \"a\" ],\n                                 instances: desc.instances,\n                                 \"omit-instances\": desc['omit-instances'],\n                                 host: desc.host\n                               });\n        }\n\n        if (desc.internal) {\n            chanopts_list.push({ source: \"internal\",\n                                 metrics: [ build_metric(desc.internal) ],\n                                 metrics_path_names: [ \"a\" ],\n                                 instances: desc.instances,\n                                 \"omit-instances\": desc['omit-instances'],\n                                 host: desc.host\n                               });\n        }\n\n        var instances = { };\n        var last_instance = null;\n\n        function reset_series() {\n            if (channel)\n                channel.close();\n\n            channel = cockpit.metrics(interval, chanopts_list);\n\n            function check_archives() {\n                if (channel.archives && !result.archives) {\n                    result.archives = true;\n                    $(result).triggerHandler(\"changed\");\n                }\n            }\n\n            $(channel).on('changed', check_archives);\n            check_archives();\n\n            sync_suppressed++;\n            for (var name in instances)\n                instances[name].reset();\n            sync_suppressed--;\n            sync();\n        }\n\n        function add_instance(name, selector) {\n            if (instances[name])\n                return;\n\n            var instance_data = $.extend({ selector: selector }, opts);\n            var factor = desc.factor || 1;\n            var threshold = desc.threshold || 0;\n            var metrics_row;\n\n            var last = last_instance;\n\n            function reset() {\n                metrics_row = grid.add(channel, [ \"a\", name ]);\n                instance_data.data = grid.add(function(row, x, n) {\n                    for (var i = 0; i < n; i++) {\n                        var value = (metrics_row[x + i] || 0)*factor;\n                        var ts = (grid.beg + x + i)*interval;\n                        var floor = 0;\n\n                        if (last) {\n                            if (last.data[x + i][1])\n                                floor = last.data[x + i][1];\n                            else\n                                floor = last.data[x + i][2];\n                        }\n\n                        if (Math.abs(value) > threshold) {\n                            row[x + i] = [ ts, floor + value, floor ];\n                            if (row[x + i - 1] && row[x + i - 1][1] === null)\n                                row[x + i - 1][1] = row[x + i - 1][2];\n                        } else {\n                            row[x + i] = [ ts, null, floor ];\n                            if (row[x + i - 1] && row[x + i - 1][1] !== null)\n                                row[x + i - 1][1] = row[x + i - 1][2];\n                        }\n                    }\n                });\n                sync();\n            }\n\n            function remove() {\n                grid.remove(metrics_row);\n                grid.remove(instance_data.data);\n                var pos = flot_data.indexOf(instance_data);\n                if (pos >= 0)\n                    flot_data.splice(pos, 1);\n            }\n\n            last_instance = instance_data;\n            instances[name] = instance_data;\n            instance_data.reset = reset;\n            instance_data.remove = remove;\n\n            reset();\n            flot_data.push(instance_data);\n        }\n\n        function clear_instances() {\n            for (var i in instances)\n                instances[i].remove();\n            instances = { };\n            last_instance = null;\n        }\n\n        function hover_hit(pos, item) {\n            var name, index;\n\n            if (!grid)\n                return false;\n\n            index = Math.round(pos.x/interval) - grid.beg;\n            if (index < 0)\n                index = 0;\n\n            for (name in instances) {\n                var d = instances[name].data;\n                if (d[index] && d[index][1] && d[index][2] <= pos.y && pos.y <= d[index][1])\n                    return instances[name].selector || name;\n            }\n            return false;\n        }\n\n        function hover(val) {\n            $(self).triggerHandler('hover', [ val ]);\n        }\n\n        reset_series();\n        return self;\n    }\n\n    var cur_hover_series = null;\n    var cur_hover_val = false;\n\n    function hover(next_hover_series, next_hover_val) {\n        if (cur_hover_series != next_hover_series) {\n            if (cur_hover_series)\n                cur_hover_series.hover(false);\n            cur_hover_series = next_hover_series;\n            cur_hover_val = next_hover_val;\n            if (cur_hover_series)\n                cur_hover_series.hover(cur_hover_val);\n        } else if (cur_hover_val != next_hover_val) {\n            cur_hover_val = next_hover_val;\n            if (cur_hover_series)\n                cur_hover_series.hover(cur_hover_val);\n        }\n    }\n\n    function hover_on(event, pos, item) {\n        var next_hover_series = null;\n        var next_hover_val = false;\n        for (var i = 0; i < series.length; i++) {\n            next_hover_val = series[i].hover_hit(pos, item);\n            if (next_hover_val) {\n                next_hover_series = series[i];\n                break;\n            }\n        }\n\n        hover(next_hover_series, next_hover_val);\n    }\n\n    function hover_off(event) {\n        hover(null, false);\n    }\n\n    function selecting(event, ranges) {\n        if (ranges)\n            $(result).triggerHandler(\"zoomstart\", [ ]);\n    }\n\n    function selected(event, ranges) {\n        flot.clearSelection(true);\n        $(result).triggerHandler(\"zoom\", [ (ranges.xaxis.to - ranges.xaxis.from) / 1000, ranges.xaxis.to / 1000]);\n    }\n\n    $(element).on(\"plothover\", hover_on);\n    $(element).on(\"mouseleave\", hover_off);\n    $(element).on(\"plotselecting\", selecting);\n    $(element).on(\"plotselected\", selected);\n\n    // for testing\n    $(element).data(\"flot_data\", flot_data);\n\n    reset(x_range_seconds, x_stop_seconds);\n\n    $.extend(result, {\n        archives: false, /* true if any archive data found */\n        start_walking: start_walking,\n        stop_walking: stop_walking,\n        refresh: refresh,\n        reset: reset,\n        destroy: destroy,\n        resize: resize,\n        set_options: set_options,\n        get_options: get_options,\n        add_metrics_sum_series: add_metrics_sum_series,\n        add_metrics_stacked_instances_series: add_metrics_stacked_instances_series\n    });\n\n    return result;\n};\n\nvar plot_colors = [ \"#006bb4\",\n                    \"#008ff0\",\n                    \"#2daaff\",\n                    \"#69c2ff\",\n                    \"#a5daff\",\n                    \"#e1f3ff\",\n                    \"#00243c\",\n                    \"#004778\"\n                  ];\n\nplotter.plot_simple_template = function simple() {\n    return {\n        colors: plot_colors,\n        legend: { show: false },\n        series: { shadowSize: 0,\n            lines: {\n                lineWidth: 2.0,\n                fill: 0.4\n            }\n        },\n        xaxis: { tickLength: 0,\n                 mode: \"time\",\n                 tickFormatter: plotter.format_date_tick,\n                 minTickSize: [ 1, 'minute' ],\n                 reserveSpace: false\n               },\n        yaxis: { tickColor: \"#d1d1d1\",\n                 min: 0\n               },\n        /*\n         * The point radius influences the margin around the grid even if no points\n         * are plotted. We don't want any margin, so we set the radius to zero.\n         */\n        points: {\n            radius: 0\n        },\n        grid: {\n            borderWidth: 1,\n            aboveData: false,\n            color: \"black\",\n            borderColor: $.color.parse(\"black\").scale('a', 0.22).toString(),\n            labelMargin: 0\n        }\n    };\n};\n\nplotter.memory_ticks = function memory_ticks(opts) {\n    // Not more than 5 ticks, nicely rounded to powers of 2.\n    var size = Math.pow(2.0, Math.ceil(Math.log(opts.max/5)/Math.LN2));\n    var ticks = [ ];\n    for (var t = 0; t < opts.max; t += size)\n        ticks.push(t);\n    return ticks;\n};\n\nvar month_names = [\n    C_(\"month-name\", 'Jan'),\n    C_(\"month-name\", 'Feb'),\n    C_(\"month-name\", 'Mar'),\n    C_(\"month-name\", 'Apr'),\n    C_(\"month-name\", 'May'),\n    C_(\"month-name\", 'Jun'),\n    C_(\"month-name\", 'Jul'),\n    C_(\"month-name\", 'Aug'),\n    C_(\"month-name\", 'Sep'),\n    C_(\"month-name\", 'Oct'),\n    C_(\"month-name\", 'Nov'),\n    C_(\"month-name\", 'Dec')\n];\n\nplotter.format_date_tick = function format_date_tick(val, axis) {\n    function pad(n) {\n        var str = n.toFixed();\n        if(str.length == 1)\n            str = '0' + str;\n        return str;\n    }\n\n    var year_index = 0;\n    var month_index = 1;\n    var day_index = 2;\n    var hour_minute_index = 3;\n\n    var begin;\n    var end;\n\n    // Determine the smallest unit according to the steps from one\n    // tick to the next.\n\n    var size = axis.tickSize[1];\n    if (size == \"minute\" || size == \"hour\")\n        end = hour_minute_index;\n    else if (size == \"day\")\n        end = day_index;\n    else if (size == \"month\")\n        end = month_index;\n    else\n        end = year_index;\n\n    // Determine biggest unit according to how far away the left edge\n    // of the graph is from 'now'.\n\n    var n = new Date();\n    var l = new Date(axis.min);\n\n    begin = year_index;\n    if (l.getFullYear() == n.getFullYear()) {\n        begin = month_index;\n        if (l.getMonth() == n.getMonth()) {\n            begin = day_index;\n            if (l.getDate() == n.getDate())\n                begin = hour_minute_index;\n        }\n    }\n\n    // Adjust so that it all makes sense\n\n    if (begin > end)\n        begin = end;\n    if (begin == day_index)\n        begin = month_index;\n\n    // And render it\n\n    var d = new Date(val);\n    var label = \" \";\n\n    if (year_index >= begin && year_index <= end)\n        label += d.getFullYear().toFixed() + \" \";\n    if (month_index >= begin && month_index <= end)\n        label += month_names[d.getMonth()] + \" \";\n    if (day_index >= begin && day_index <= end)\n        label += d.getDate().toFixed() + \" \";\n    if (hour_minute_index >= begin && hour_minute_index <= end)\n        label += pad(d.getHours()) + ':' + pad(d.getMinutes()) + \" \";\n\n    return label.substr(0, label.length-1);\n};\n\nplotter.bytes_tick_unit = function bytes_tick_unit(axis) {\n    return cockpit.format_bytes(axis.max, 1024, true)[1];\n};\n\nplotter.format_bytes_tick_no_unit = function format_bytes_tick_no_unit(val, axis) {\n    return cockpit.format_bytes(val, plotter.bytes_tick_unit(axis), true)[0];\n};\n\nplotter.format_bytes_tick = function format_bytes_tick(val, axis) {\n    return cockpit.format_bytes(val, 1024);\n};\n\nplotter.bytes_per_sec_tick_unit = function bytes_per_sec_tick_unit(axis) {\n    return cockpit.format_bytes_per_sec(axis.max, 1024, true)[1];\n};\n\nplotter.format_bytes_per_sec_tick_no_unit = function format_bytes_per_sec_tick_no_unit(val, axis) {\n    return cockpit.format_bytes_per_sec(val, plotter.bytes_per_sec_tick_unit(axis), true)[0];\n};\n\nplotter.format_bytes_per_sec_tick = function format_bytes_per_sec_tick(val, axis) {\n    return cockpit.format_bytes_per_sec(val, 1024);\n};\n\nplotter.bits_per_sec_tick_unit = function bits_per_sec_tick_unit(axis) {\n    return cockpit.format_bits_per_sec(axis.max*8, 1000, true)[1];\n};\n\nplotter.format_bits_per_sec_tick_no_unit = function format_bits_per_sec_tick_no_tick(val, axis) {\n    return cockpit.format_bits_per_sec(val*8, plotter.bits_per_sec_tick_unit(axis), true)[0];\n};\n\nplotter.format_bits_per_sec_tick = function format_bits_per_sec_tick(val, axis) {\n    return cockpit.format_bits_per_sec(val*8, 1000);\n};\n\nplotter.setup_plot_controls = function setup_plot_controls(container, element, plots) {\n\n    var plot_min_x_range = 5*60;\n    var plot_zoom_steps = [ 5*60,  60*60, 6*60*60, 24*60*60, 7*24*60*60, 30*24*60*60, 365*24*60*60 ];\n\n    var plot_x_range = 5*60;\n    var plot_x_stop;\n    var zoom_history = [ ];\n\n    element.find('[data-range]').click(function () {\n        zoom_history = [ ];\n        plot_x_range = parseInt($(this).attr('data-range'), 10);\n        plot_reset();\n    });\n\n    element.find('[data-action=\"goto-now\"]').click(function () {\n        plot_x_stop = undefined;\n        plot_reset();\n    });\n\n    element.find('[data-action=\"scroll-left\"]').click(function () {\n        var step = plot_x_range / 10;\n        if (plot_x_stop === undefined)\n            plot_x_stop = (new Date()).getTime() / 1000;\n        plot_x_stop -= step;\n        plot_reset();\n    });\n\n    element.find('[data-action=\"scroll-right\"]').click(function () {\n        var step = plot_x_range / 10;\n        if (plot_x_stop !== undefined) {\n            plot_x_stop += step;\n            plot_reset();\n        }\n    });\n\n    element.find('[data-action=\"zoom-out\"]').click(function () {\n        zoom_plot_out();\n    });\n\n    function zoom_plot_start() {\n        if (plot_x_stop === undefined) {\n            plots.forEach(function (p) {\n                p.stop_walking();\n            });\n            plot_x_stop = (new Date()).getTime() / 1000;\n            update_plot_buttons();\n        }\n    }\n\n    function zoom_plot_in(x_range, x_stop) {\n        zoom_history.push(plot_x_range);\n        plot_x_range = x_range;\n        plot_x_stop = x_stop;\n        plot_reset();\n    }\n\n    function zoom_plot_out() {\n        var r = zoom_history.pop();\n        if (r === undefined) {\n            var i;\n            for (i = 0; i < plot_zoom_steps.length-1; i++) {\n                if (plot_zoom_steps[i] > plot_x_range)\n                    break;\n            }\n            r = plot_zoom_steps[i];\n        }\n        if (plot_x_stop !== undefined)\n            plot_x_stop += (r - plot_x_range)/2;\n        plot_x_range = r;\n        plot_reset();\n    }\n\n    function format_range(seconds) {\n        var n;\n        if (seconds >= 365*24*60*60) {\n            n = Math.ceil(seconds / (365*24*60*60));\n            return cockpit.format(cockpit.ngettext(\"$0 year\", \"$0 years\", n), n);\n        } else if (seconds >= 30*24*60*60) {\n            n = Math.ceil(seconds / (30*24*60*60));\n            return cockpit.format(cockpit.ngettext(\"$0 month\", \"$0 months\", n), n);\n        } else if (seconds >= 7*24*60*60) {\n            n = Math.ceil(seconds / (7*24*60*60));\n            return cockpit.format(cockpit.ngettext(\"$0 week\", \"$0 weeks\", n), n);\n        } else if (seconds >= 24*60*60) {\n            n = Math.ceil(seconds / (24*60*60));\n            return cockpit.format(cockpit.ngettext(\"$0 day\", \"$0 days\", n), n);\n        } else if (seconds >= 60*60) {\n            n = Math.ceil(seconds / (60*60));\n            return cockpit.format(cockpit.ngettext(\"$0 hour\", \"$0 hours\", n), n);\n        } else {\n            n = Math.ceil(seconds / 60);\n            return cockpit.format(cockpit.ngettext(\"$0 minute\", \"$0 minutes\", n), n);\n        }\n    }\n\n    function update_plot_buttons() {\n        element.find('[data-action=\"scroll-right\"]')\n            .attr('disabled', plot_x_stop === undefined);\n        element.find('[data-action=\"zoom-out\"]')\n            .attr('disabled', plot_x_range >= plot_zoom_steps[plot_zoom_steps.length-1]);\n    }\n\n    function update_selection_zooming() {\n        var mode;\n\n        if (container.hasClass('show-zoom-controls') && plot_x_range > plot_min_x_range) {\n            container.addClass('show-zoom-cursor');\n            mode = \"x\";\n        } else {\n            container.removeClass('show-zoom-cursor');\n            mode = null;\n        }\n\n        plots.forEach(function (p) {\n            var options = p.get_options();\n            if (!options.selection || options.selection.mode != mode) {\n                options.selection = { mode: mode, color: \"#d4edfa\" };\n                p.set_options(options);\n                p.refresh();\n            }\n        });\n    }\n\n    function plot_reset() {\n        if (plot_x_range < plot_min_x_range) {\n            plot_x_stop += (plot_min_x_range - plot_x_range)/2;\n            plot_x_range = plot_min_x_range;\n        }\n        if (plot_x_stop >= (new Date()).getTime() / 1000 - 10)\n            plot_x_stop = undefined;\n\n        element.find('.dropdown-toggle span:first-child').text(format_range(plot_x_range));\n\n        plots.forEach(function (p) {\n            p.stop_walking();\n            p.reset(plot_x_range, plot_x_stop);\n            p.refresh();\n            if (plot_x_stop === undefined)\n                p.start_walking();\n\n            function check_archives() {\n                if (p.archives) {\n                    container.addClass('show-zoom-controls');\n                    update_selection_zooming();\n                }\n            }\n\n            $(p).on(\"changed\", check_archives);\n            check_archives();\n        });\n\n        update_plot_buttons();\n        update_selection_zooming();\n    }\n\n    function reset(p) {\n        if (p === undefined)\n            p = [ ];\n        plots = p;\n        plots.forEach(function (p) {\n            $(p).on(\"zoomstart\", function (event) { zoom_plot_start(); });\n            $(p).on(\"zoom\", function (event, x_range, x_stop) { zoom_plot_in(x_range, x_stop); });\n        });\n        plot_reset();\n    }\n\n    reset(plots);\n\n    return {\n        reset: reset\n    };\n};\n\nfunction setup_plot(graph_id, grid, data, user_options) {\n    var options = {\n        colors: [ \"#0099d3\" ],\n        legend: { show: false },\n        series: { shadowSize: 0,\n                  lines: { lineWidth: 0.0,\n                           fill: 1.0\n                         }\n                },\n        xaxis: { tickFormatter: function() { return \"\"; } },\n        yaxis: { tickFormatter: function() { return \"\"; } },\n        // The point radius influences\n        // the margin around the grid\n        // even if no points are plotted.\n        // We don't want any margin, so\n        // we set the radius to zero.\n        points: { radius: 0 },\n        grid: { borderWidth: 1,\n                aboveData: true,\n                color: \"black\",\n                borderColor: $.color.parse(\"black\").scale('a', 0.22).toString(),\n                labelMargin: 0\n              }\n    };\n\n    var plot;\n    var running = false;\n    var self;\n\n    $.extend(true, options, user_options);\n\n    // We put the plot inside its own div so that we can give that div\n    // a fixed size which only changes when we can also immediately\n    // call plot.resize().  Otherwise, the labels and legends briefly\n    // get out of sync during resizing.\n\n    var outer_div = $(graph_id);\n    var inner_div = $('<div/>');\n    var starting = null;\n    outer_div.empty();\n    outer_div.append(inner_div);\n\n    function sync_divs ()\n    {\n        inner_div.width(outer_div.width());\n        inner_div.height(outer_div.height());\n    }\n\n    // Updating flot options is tricky and somewhat implementation\n    // defined.  Different options needs different approaches.  So we\n    // just have very specific functions for changing specific options\n    // until a pattern emerges.\n\n    function set_yaxis_max (max) {\n        if (plot) {\n            plot.getAxes().yaxis.options.max = max;\n            refresh ();\n        } else {\n            options.yaxis.max = max;\n        }\n    }\n\n    function start ()\n    {\n        running = true;\n        maybe_start();\n    }\n\n    function maybe_start() {\n        if (running && outer_div.width() > 0 && outer_div.height() > 0) {\n            if (!plot) {\n                sync_divs ();\n                plot = $.plot(inner_div, data, options);\n            } else\n                resize();\n\n            if (starting)\n                window.clearInterval(starting);\n        } else if (!starting) {\n            starting = window.setInterval(maybe_start, 500);\n        }\n\n    }\n\n    function stop ()\n    {\n        running = false;\n    }\n\n    function refresh() {\n        if (plot && running) {\n            plot.setData(data);\n            if (user_options.setup_hook)\n                user_options.setup_hook(plot);\n            plot.setupGrid();\n            plot.draw();\n            if (user_options.post_hook)\n                user_options.post_hook(plot);\n        }\n    }\n\n    function resize() {\n        if (plot && running) {\n            sync_divs ();\n            if (inner_div.width() > 0 && inner_div.height() > 0)\n                plot.resize();\n            refresh();\n        }\n    }\n\n    function destroy () {\n        $(self).trigger('destroyed');\n        $(window).off('resize', resize);\n        $(outer_div).empty();\n        plot = null;\n    }\n\n    $(grid).on('notify', refresh);\n    $(window).on('resize', resize);\n    maybe_start();\n\n    self = { start: start, stop: stop,\n             resize: resize, element: inner_div[0],\n             set_yaxis_max: set_yaxis_max,\n             destroy: destroy\n           };\n    return self;\n}\n\nplotter.setup_complicated_plot = function setup_complicated_plot(graph_id, grid, series, options) {\n    function basic_flot_row(grid, input) {\n        return grid.add(function(row, x, n) {\n            for (var i = 0; i < n; i++)\n                row[x + i] = [i, input[x + i] || 0];\n        });\n    }\n\n    function stacked_flot_row(grid, input, last) {\n        return grid.add(function(row, x, n) {\n            var i, l, floor, val;\n            for (i = 0; i < n; i++) {\n                floor = 0;\n                if (last) {\n                    l = last[x + i];\n                    floor = l ? l[1] : 0;\n                }\n                val = (input[x + i] || 0);\n                row[x + i] = [i, val + floor, floor];\n            }\n        });\n    }\n\n    /* All the data row setup happens now */\n    var last = null;\n    series.forEach(function(ser, i) {\n        if (options.x_rh_stack_graphs)\n            ser.data = stacked_flot_row(grid, ser.row, last);\n        else\n            ser.data = basic_flot_row(grid, ser.row);\n        last = ser.data;\n    });\n    return setup_plot(graph_id, grid, series, options);\n};\n\nmodule.exports = plotter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/plot.js\n// module id = 157\n// module chunks = 3","/* Javascript plotting library for jQuery, version 0.8.3.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\n*/\n\n// first an inline dependency, jquery.colorhelpers.js, we inline it here\n// for convenience\n\n/* Plugin for jQuery for working with colors.\n *\n * Version 1.1.\n *\n * Inspiration from jQuery color animation plugin by John Resig.\n *\n * Released under the MIT license by Ole Laursen, October 2009.\n *\n * Examples:\n *\n *   $.color.parse(\"#fff\").scale('rgb', 0.25).add('a', -0.5).toString()\n *   var c = $.color.extract($(\"#mydiv\"), 'background-color');\n *   console.log(c.r, c.g, c.b, c.a);\n *   $.color.make(100, 50, 25, 0.4).toString() // returns \"rgba(100,50,25,0.4)\"\n *\n * Note that .scale() and .add() return the same modified object\n * instead of making a new one.\n *\n * V. 1.1: Fix error handling so e.g. parsing an empty string does\n * produce a color rather than just crashing.\n */\n(function($){$.color={};$.color.make=function(r,g,b,a){var o={};o.r=r||0;o.g=g||0;o.b=b||0;o.a=a!=null?a:1;o.add=function(c,d){for(var i=0;i<c.length;++i)o[c.charAt(i)]+=d;return o.normalize()};o.scale=function(c,f){for(var i=0;i<c.length;++i)o[c.charAt(i)]*=f;return o.normalize()};o.toString=function(){if(o.a>=1){return\"rgb(\"+[o.r,o.g,o.b].join(\",\")+\")\"}else{return\"rgba(\"+[o.r,o.g,o.b,o.a].join(\",\")+\")\"}};o.normalize=function(){function clamp(min,value,max){return value<min?min:value>max?max:value}o.r=clamp(0,parseInt(o.r),255);o.g=clamp(0,parseInt(o.g),255);o.b=clamp(0,parseInt(o.b),255);o.a=clamp(0,o.a,1);return o};o.clone=function(){return $.color.make(o.r,o.b,o.g,o.a)};return o.normalize()};$.color.extract=function(elem,css){var c;do{c=elem.css(css).toLowerCase();if(c!=\"\"&&c!=\"transparent\")break;elem=elem.parent()}while(elem.length&&!$.nodeName(elem.get(0),\"body\"));if(c==\"rgba(0, 0, 0, 0)\")c=\"transparent\";return $.color.parse(c)};$.color.parse=function(str){var res,m=$.color.make;if(res=/rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10));if(res=/rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10),parseFloat(res[4]));if(res=/rgb\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55);if(res=/rgba\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55,parseFloat(res[4]));if(res=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(str))return m(parseInt(res[1],16),parseInt(res[2],16),parseInt(res[3],16));if(res=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(str))return m(parseInt(res[1]+res[1],16),parseInt(res[2]+res[2],16),parseInt(res[3]+res[3],16));var name=$.trim(str).toLowerCase();if(name==\"transparent\")return m(255,255,255,0);else{res=lookupColors[name]||[0,0,0];return m(res[0],res[1],res[2])}};var lookupColors={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}})(jQuery);\n\n// the actual Flot code\n(function($) {\n\n\t// Cache the prototype hasOwnProperty for faster access\n\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    // A shim to provide 'detach' to jQuery versions prior to 1.4.  Using a DOM\n    // operation produces the same effect as detach, i.e. removing the element\n    // without touching its jQuery data.\n\n    // Do not merge this into Flot 0.9, since it requires jQuery 1.4.4+.\n\n    if (!$.fn.detach) {\n        $.fn.detach = function() {\n            return this.each(function() {\n                if (this.parentNode) {\n                    this.parentNode.removeChild( this );\n                }\n            });\n        };\n    }\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// The Canvas object is a wrapper around an HTML5 <canvas> tag.\n\t//\n\t// @constructor\n\t// @param {string} cls List of classes to apply to the canvas.\n\t// @param {element} container Element onto which to append the canvas.\n\t//\n\t// Requiring a container is a little iffy, but unfortunately canvas\n\t// operations don't work unless the canvas is attached to the DOM.\n\n\tfunction Canvas(cls, container) {\n\n\t\tvar element = container.children(\".\" + cls)[0];\n\n\t\tif (element == null) {\n\n\t\t\telement = document.createElement(\"canvas\");\n\t\t\telement.className = cls;\n\n\t\t\t$(element).css({ direction: \"ltr\", position: \"absolute\", left: 0, top: 0 })\n\t\t\t\t.appendTo(container);\n\n\t\t\t// If HTML5 Canvas isn't available, fall back to [Ex|Flash]canvas\n\n\t\t\tif (!element.getContext) {\n\t\t\t\tif (window.G_vmlCanvasManager) {\n\t\t\t\t\telement = window.G_vmlCanvasManager.initElement(element);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.element = element;\n\n\t\tvar context = this.context = element.getContext(\"2d\");\n\n\t\t// Determine the screen's ratio of physical to device-independent\n\t\t// pixels.  This is the ratio between the canvas width that the browser\n\t\t// advertises and the number of pixels actually present in that space.\n\n\t\t// The iPhone 4, for example, has a device-independent width of 320px,\n\t\t// but its screen is actually 640px wide.  It therefore has a pixel\n\t\t// ratio of 2, while most normal devices have a ratio of 1.\n\n\t\tvar devicePixelRatio = window.devicePixelRatio || 1,\n\t\t\tbackingStoreRatio =\n\t\t\t\tcontext.webkitBackingStorePixelRatio ||\n\t\t\t\tcontext.mozBackingStorePixelRatio ||\n\t\t\t\tcontext.msBackingStorePixelRatio ||\n\t\t\t\tcontext.oBackingStorePixelRatio ||\n\t\t\t\tcontext.backingStorePixelRatio || 1;\n\n\t\tthis.pixelRatio = devicePixelRatio / backingStoreRatio;\n\n\t\t// Size the canvas to match the internal dimensions of its container\n\n\t\tthis.resize(container.width(), container.height());\n\n\t\t// Collection of HTML div layers for text overlaid onto the canvas\n\n\t\tthis.textContainer = null;\n\t\tthis.text = {};\n\n\t\t// Cache of text fragments and metrics, so we can avoid expensively\n\t\t// re-calculating them when the plot is re-rendered in a loop.\n\n\t\tthis._textCache = {};\n\t}\n\n\t// Resizes the canvas to the given dimensions.\n\t//\n\t// @param {number} width New width of the canvas, in pixels.\n\t// @param {number} width New height of the canvas, in pixels.\n\n\tCanvas.prototype.resize = function(width, height) {\n\n\t\tif (width <= 0 || height <= 0) {\n\t\t\tthrow new Error(\"Invalid dimensions for plot, width = \" + width + \", height = \" + height);\n\t\t}\n\n\t\tvar element = this.element,\n\t\t\tcontext = this.context,\n\t\t\tpixelRatio = this.pixelRatio;\n\n\t\t// Resize the canvas, increasing its density based on the display's\n\t\t// pixel ratio; basically giving it more pixels without increasing the\n\t\t// size of its element, to take advantage of the fact that retina\n\t\t// displays have that many more pixels in the same advertised space.\n\n\t\t// Resizing should reset the state (excanvas seems to be buggy though)\n\n\t\tif (this.width != width) {\n\t\t\telement.width = width * pixelRatio;\n\t\t\telement.style.width = width + \"px\";\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tif (this.height != height) {\n\t\t\telement.height = height * pixelRatio;\n\t\t\telement.style.height = height + \"px\";\n\t\t\tthis.height = height;\n\t\t}\n\n\t\t// Save the context, so we can reset in case we get replotted.  The\n\t\t// restore ensure that we're really back at the initial state, and\n\t\t// should be safe even if we haven't saved the initial state yet.\n\n\t\tcontext.restore();\n\t\tcontext.save();\n\n\t\t// Scale the coordinate space to match the display density; so even though we\n\t\t// may have twice as many pixels, we still want lines and other drawing to\n\t\t// appear at the same size; the extra pixels will just make them crisper.\n\n\t\tcontext.scale(pixelRatio, pixelRatio);\n\t};\n\n\t// Clears the entire canvas area, not including any overlaid HTML text\n\n\tCanvas.prototype.clear = function() {\n\t\tthis.context.clearRect(0, 0, this.width, this.height);\n\t};\n\n\t// Finishes rendering the canvas, including managing the text overlay.\n\n\tCanvas.prototype.render = function() {\n\n\t\tvar cache = this._textCache;\n\n\t\t// For each text layer, add elements marked as active that haven't\n\t\t// already been rendered, and remove those that are no longer active.\n\n\t\tfor (var layerKey in cache) {\n\t\t\tif (hasOwnProperty.call(cache, layerKey)) {\n\n\t\t\t\tvar layer = this.getTextLayer(layerKey),\n\t\t\t\t\tlayerCache = cache[layerKey];\n\n\t\t\t\tlayer.hide();\n\n\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\tif (position.active) {\n\t\t\t\t\t\t\t\t\t\tif (!position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\tlayer.append(position.element);\n\t\t\t\t\t\t\t\t\t\t\tposition.rendered = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tpositions.splice(i--, 1);\n\t\t\t\t\t\t\t\t\t\tif (position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\tposition.element.detach();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (positions.length == 0) {\n\t\t\t\t\t\t\t\t\tdelete styleCache[key];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlayer.show();\n\t\t\t}\n\t\t}\n\t};\n\n\t// Creates (if necessary) and returns the text overlay container.\n\t//\n\t// @param {string} classes String of space-separated CSS classes used to\n\t//     uniquely identify the text layer.\n\t// @return {object} The jQuery-wrapped text-layer div.\n\n\tCanvas.prototype.getTextLayer = function(classes) {\n\n\t\tvar layer = this.text[classes];\n\n\t\t// Create the text layer if it doesn't exist\n\n\t\tif (layer == null) {\n\n\t\t\t// Create the text layer container, if it doesn't exist\n\n\t\t\tif (this.textContainer == null) {\n\t\t\t\tthis.textContainer = $(\"<div class='flot-text'></div>\")\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t'font-size': \"smaller\",\n\t\t\t\t\t\tcolor: \"#545454\"\n\t\t\t\t\t})\n\t\t\t\t\t.insertAfter(this.element);\n\t\t\t}\n\n\t\t\tlayer = this.text[classes] = $(\"<div></div>\")\n\t\t\t\t.addClass(classes)\n\t\t\t\t.css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tbottom: 0,\n\t\t\t\t\tright: 0\n\t\t\t\t})\n\t\t\t\t.appendTo(this.textContainer);\n\t\t}\n\n\t\treturn layer;\n\t};\n\n\t// Creates (if necessary) and returns a text info object.\n\t//\n\t// The object looks like this:\n\t//\n\t// {\n\t//     width: Width of the text's wrapper div.\n\t//     height: Height of the text's wrapper div.\n\t//     element: The jQuery-wrapped HTML div containing the text.\n\t//     positions: Array of positions at which this text is drawn.\n\t// }\n\t//\n\t// The positions array contains objects that look like this:\n\t//\n\t// {\n\t//     active: Flag indicating whether the text should be visible.\n\t//     rendered: Flag indicating whether the text is currently visible.\n\t//     element: The jQuery-wrapped HTML div containing the text.\n\t//     x: X coordinate at which to draw the text.\n\t//     y: Y coordinate at which to draw the text.\n\t// }\n\t//\n\t// Each position after the first receives a clone of the original element.\n\t//\n\t// The idea is that that the width, height, and general 'identity' of the\n\t// text is constant no matter where it is placed; the placements are a\n\t// secondary property.\n\t//\n\t// Canvas maintains a cache of recently-used text info objects; getTextInfo\n\t// either returns the cached element or creates a new entry.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {string} text Text string to retrieve info for.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\t// @param {number=} width Maximum width of the text before it wraps.\n\t// @return {object} a text info object.\n\n\tCanvas.prototype.getTextInfo = function(layer, text, font, angle, width) {\n\n\t\tvar textStyle, layerCache, styleCache, info;\n\n\t\t// Cast the value to a string, in case we were given a number or such\n\n\t\ttext = \"\" + text;\n\n\t\t// If the font is a font-spec object, generate a CSS font definition\n\n\t\tif (typeof font === \"object\") {\n\t\t\ttextStyle = font.style + \" \" + font.variant + \" \" + font.weight + \" \" + font.size + \"px/\" + font.lineHeight + \"px \" + font.family;\n\t\t} else {\n\t\t\ttextStyle = font;\n\t\t}\n\n\t\t// Retrieve (or create) the cache for the text's layer and styles\n\n\t\tlayerCache = this._textCache[layer];\n\n\t\tif (layerCache == null) {\n\t\t\tlayerCache = this._textCache[layer] = {};\n\t\t}\n\n\t\tstyleCache = layerCache[textStyle];\n\n\t\tif (styleCache == null) {\n\t\t\tstyleCache = layerCache[textStyle] = {};\n\t\t}\n\n\t\tinfo = styleCache[text];\n\n\t\t// If we can't find a matching element in our cache, create a new one\n\n\t\tif (info == null) {\n\n\t\t\tvar element = $(\"<div></div>\").html(text)\n\t\t\t\t.css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t'max-width': width,\n\t\t\t\t\ttop: -9999\n\t\t\t\t})\n\t\t\t\t.appendTo(this.getTextLayer(layer));\n\n\t\t\tif (typeof font === \"object\") {\n\t\t\t\telement.css({\n\t\t\t\t\tfont: textStyle,\n\t\t\t\t\tcolor: font.color\n\t\t\t\t});\n\t\t\t} else if (typeof font === \"string\") {\n\t\t\t\telement.addClass(font);\n\t\t\t}\n\n\t\t\tinfo = styleCache[text] = {\n\t\t\t\twidth: element.outerWidth(true),\n\t\t\t\theight: element.outerHeight(true),\n\t\t\t\telement: element,\n\t\t\t\tpositions: []\n\t\t\t};\n\n\t\t\telement.detach();\n\t\t}\n\n\t\treturn info;\n\t};\n\n\t// Adds a text string to the canvas text overlay.\n\t//\n\t// The text isn't drawn immediately; it is marked as rendering, which will\n\t// result in its addition to the canvas on the next render pass.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {number} x X coordinate at which to draw the text.\n\t// @param {number} y Y coordinate at which to draw the text.\n\t// @param {string} text Text string to draw.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\t// @param {number=} width Maximum width of the text before it wraps.\n\t// @param {string=} halign Horizontal alignment of the text; either \"left\",\n\t//     \"center\" or \"right\".\n\t// @param {string=} valign Vertical alignment of the text; either \"top\",\n\t//     \"middle\" or \"bottom\".\n\n\tCanvas.prototype.addText = function(layer, x, y, text, font, angle, width, halign, valign) {\n\n\t\tvar info = this.getTextInfo(layer, text, font, angle, width),\n\t\t\tpositions = info.positions;\n\n\t\t// Tweak the div's position to match the text's alignment\n\n\t\tif (halign == \"center\") {\n\t\t\tx -= info.width / 2;\n\t\t} else if (halign == \"right\") {\n\t\t\tx -= info.width;\n\t\t}\n\n\t\tif (valign == \"middle\") {\n\t\t\ty -= info.height / 2;\n\t\t} else if (valign == \"bottom\") {\n\t\t\ty -= info.height;\n\t\t}\n\n\t\t// Determine whether this text already exists at this position.\n\t\t// If so, mark it for inclusion in the next render pass.\n\n\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\tposition.active = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the text doesn't exist at this position, create a new entry\n\n\t\t// For the very first position we'll re-use the original element,\n\t\t// while for subsequent ones we'll clone it.\n\n\t\tposition = {\n\t\t\tactive: true,\n\t\t\trendered: false,\n\t\t\telement: positions.length ? info.element.clone() : info.element,\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\n\t\tpositions.push(position);\n\n\t\t// Move the element to its final position within the container\n\n\t\tposition.element.css({\n\t\t\ttop: Math.round(y),\n\t\t\tleft: Math.round(x),\n\t\t\t'text-align': halign\t// In case the text wraps\n\t\t});\n\t};\n\n\t// Removes one or more text strings from the canvas text overlay.\n\t//\n\t// If no parameters are given, all text within the layer is removed.\n\t//\n\t// Note that the text is not immediately removed; it is simply marked as\n\t// inactive, which will result in its removal on the next render pass.\n\t// This avoids the performance penalty for 'clear and redraw' behavior,\n\t// where we potentially get rid of all text on a layer, but will likely\n\t// add back most or all of it later, as when redrawing axes, for example.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {number=} x X coordinate of the text.\n\t// @param {number=} y Y coordinate of the text.\n\t// @param {string=} text Text string to remove.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which the text is rotated, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\n\tCanvas.prototype.removeText = function(layer, x, y, text, font, angle) {\n\t\tif (text == null) {\n\t\t\tvar layerCache = this._textCache[layer];\n\t\t\tif (layerCache != null) {\n\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\tposition.active = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar positions = this.getTextInfo(layer, text, font, angle).positions;\n\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\t\tposition.active = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// The top-level container for the entire plot.\n\n    function Plot(placeholder, data_, options_, plugins) {\n        // data is on the form:\n        //   [ series1, series2 ... ]\n        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]\n        // or { data: [ [x1, y1], [x2, y2], ... ], label: \"some label\", ... }\n\n        var series = [],\n            options = {\n                // the color theme used for graphs\n                colors: [\"#edc240\", \"#afd8f8\", \"#cb4b4b\", \"#4da74d\", \"#9440ed\"],\n                legend: {\n                    show: true,\n                    noColumns: 1, // number of colums in legend table\n                    labelFormatter: null, // fn: string -> string\n                    labelBoxBorderColor: \"#ccc\", // border color for the little label boxes\n                    container: null, // container (as jQuery object) to put legend in, null means default on top of graph\n                    position: \"ne\", // position of default legend container within plot\n                    margin: 5, // distance from grid edge to default legend container within plot\n                    backgroundColor: null, // null means auto-detect\n                    backgroundOpacity: 0.85, // set to 0 to avoid background\n                    sorted: null    // default to no legend sorting\n                },\n                xaxis: {\n                    show: null, // null = auto-detect, true = always, false = never\n                    position: \"bottom\", // or \"top\"\n                    mode: null, // null or \"time\"\n                    font: null, // null (derived from CSS in placeholder) or object like { size: 11, lineHeight: 13, style: \"italic\", weight: \"bold\", family: \"sans-serif\", variant: \"small-caps\" }\n                    color: null, // base color, labels, ticks\n                    tickColor: null, // possibly different color of ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    transform: null, // null or f: number -> number to transform axis\n                    inverseTransform: null, // if transform is set, this should be the inverse function\n                    min: null, // min. value to show, null means set automatically\n                    max: null, // max. value to show, null means set automatically\n                    autoscaleMargin: null, // margin in % to add if auto-setting min/max\n                    ticks: null, // either [1, 3] or [[1, \"a\"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks\n                    tickFormatter: null, // fn: number -> string\n                    labelWidth: null, // size of tick labels in pixels\n                    labelHeight: null,\n                    reserveSpace: null, // whether to reserve space even if axis isn't shown\n                    tickLength: null, // size in pixels of ticks, or \"full\" for whole line\n                    alignTicksWithAxis: null, // axis number or null for no sync\n                    tickDecimals: null, // no. of decimals, null means auto\n                    tickSize: null, // number or [number, \"unit\"]\n                    minTickSize: null // number or [number, \"unit\"]\n                },\n                yaxis: {\n                    autoscaleMargin: 0.02,\n                    position: \"left\" // or \"right\"\n                },\n                xaxes: [],\n                yaxes: [],\n                series: {\n                    points: {\n                        show: false,\n                        radius: 3,\n                        lineWidth: 2, // in pixels\n                        fill: true,\n                        fillColor: \"#ffffff\",\n                        symbol: \"circle\" // or callback\n                    },\n                    lines: {\n                        // we don't put in show: false so we can see\n                        // whether lines were actively disabled\n                        lineWidth: 2, // in pixels\n                        fill: false,\n                        fillColor: null,\n                        steps: false\n                        // Omit 'zero', so we can later default its value to\n                        // match that of the 'fill' option.\n                    },\n                    bars: {\n                        show: false,\n                        lineWidth: 2, // in pixels\n                        barWidth: 1, // in units of the x axis\n                        fill: true,\n                        fillColor: null,\n                        align: \"left\", // \"left\", \"right\", or \"center\"\n                        horizontal: false,\n                        zero: true\n                    },\n                    shadowSize: 3,\n                    highlightColor: null\n                },\n                grid: {\n                    show: true,\n                    aboveData: false,\n                    color: \"#545454\", // primary color used for outline and labels\n                    backgroundColor: null, // null for transparent, else color\n                    borderColor: null, // set if different from the grid color\n                    tickColor: null, // color for the ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    margin: 0, // distance from the canvas edge to the grid\n                    labelMargin: 5, // in pixels\n                    axisMargin: 8, // in pixels\n                    borderWidth: 2, // in pixels\n                    minBorderMargin: null, // in pixels, null means taken from points radius\n                    markings: null, // array of ranges or fn: axes -> array of ranges\n                    markingsColor: \"#f4f4f4\",\n                    markingsLineWidth: 2,\n                    // interactive stuff\n                    clickable: false,\n                    hoverable: false,\n                    autoHighlight: true, // highlight in case mouse is near\n                    mouseActiveRadius: 10 // how far the mouse can be away to activate an item\n                },\n                interaction: {\n                    redrawOverlayInterval: 1000/60 // time between updates, -1 means in same flow\n                },\n                hooks: {}\n            },\n        surface = null,     // the canvas for the plot itself\n        overlay = null,     // canvas for interactive stuff on top of plot\n        eventHolder = null, // jQuery object that events should be bound to\n        ctx = null, octx = null,\n        xaxes = [], yaxes = [],\n        plotOffset = { left: 0, right: 0, top: 0, bottom: 0},\n        plotWidth = 0, plotHeight = 0,\n        hooks = {\n            processOptions: [],\n            processRawData: [],\n            processDatapoints: [],\n            processOffset: [],\n            drawBackground: [],\n            drawSeries: [],\n            draw: [],\n            bindEvents: [],\n            drawOverlay: [],\n            shutdown: []\n        },\n        plot = this;\n\n        // public functions\n        plot.setData = setData;\n        plot.setupGrid = setupGrid;\n        plot.draw = draw;\n        plot.getPlaceholder = function() { return placeholder; };\n        plot.getCanvas = function() { return surface.element; };\n        plot.getPlotOffset = function() { return plotOffset; };\n        plot.width = function () { return plotWidth; };\n        plot.height = function () { return plotHeight; };\n        plot.offset = function () {\n            var o = eventHolder.offset();\n            o.left += plotOffset.left;\n            o.top += plotOffset.top;\n            return o;\n        };\n        plot.getData = function () { return series; };\n        plot.getAxes = function () {\n            var res = {}, i;\n            $.each(xaxes.concat(yaxes), function (_, axis) {\n                if (axis)\n                    res[axis.direction + (axis.n != 1 ? axis.n : \"\") + \"axis\"] = axis;\n            });\n            return res;\n        };\n        plot.getXAxes = function () { return xaxes; };\n        plot.getYAxes = function () { return yaxes; };\n        plot.c2p = canvasToAxisCoords;\n        plot.p2c = axisToCanvasCoords;\n        plot.getOptions = function () { return options; };\n        plot.highlight = highlight;\n        plot.unhighlight = unhighlight;\n        plot.triggerRedrawOverlay = triggerRedrawOverlay;\n        plot.pointOffset = function(point) {\n            return {\n                left: parseInt(xaxes[axisNumber(point, \"x\") - 1].p2c(+point.x) + plotOffset.left, 10),\n                top: parseInt(yaxes[axisNumber(point, \"y\") - 1].p2c(+point.y) + plotOffset.top, 10)\n            };\n        };\n        plot.shutdown = shutdown;\n        plot.destroy = function () {\n            shutdown();\n            placeholder.removeData(\"plot\").empty();\n\n            series = [];\n            options = null;\n            surface = null;\n            overlay = null;\n            eventHolder = null;\n            ctx = null;\n            octx = null;\n            xaxes = [];\n            yaxes = [];\n            hooks = null;\n            highlights = [];\n            plot = null;\n        };\n        plot.resize = function () {\n        \tvar width = placeholder.width(),\n        \t\theight = placeholder.height();\n            surface.resize(width, height);\n            overlay.resize(width, height);\n        };\n\n        // public attributes\n        plot.hooks = hooks;\n\n        // initialize\n        initPlugins(plot);\n        parseOptions(options_);\n        setupCanvases();\n        setData(data_);\n        setupGrid();\n        draw();\n        bindEvents();\n\n\n        function executeHooks(hook, args) {\n            args = [plot].concat(args);\n            for (var i = 0; i < hook.length; ++i)\n                hook[i].apply(this, args);\n        }\n\n        function initPlugins() {\n\n            // References to key classes, allowing plugins to modify them\n\n            var classes = {\n                Canvas: Canvas\n            };\n\n            for (var i = 0; i < plugins.length; ++i) {\n                var p = plugins[i];\n                p.init(plot, classes);\n                if (p.options)\n                    $.extend(true, options, p.options);\n            }\n        }\n\n        function parseOptions(opts) {\n\n            $.extend(true, options, opts);\n\n            // $.extend merges arrays, rather than replacing them.  When less\n            // colors are provided than the size of the default palette, we\n            // end up with those colors plus the remaining defaults, which is\n            // not expected behavior; avoid it by replacing them here.\n\n            if (opts && opts.colors) {\n            \toptions.colors = opts.colors;\n            }\n\n            if (options.xaxis.color == null)\n                options.xaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n            if (options.yaxis.color == null)\n                options.yaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\n            if (options.xaxis.tickColor == null) // grid.tickColor for back-compatibility\n                options.xaxis.tickColor = options.grid.tickColor || options.xaxis.color;\n            if (options.yaxis.tickColor == null) // grid.tickColor for back-compatibility\n                options.yaxis.tickColor = options.grid.tickColor || options.yaxis.color;\n\n            if (options.grid.borderColor == null)\n                options.grid.borderColor = options.grid.color;\n            if (options.grid.tickColor == null)\n                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\n            // Fill in defaults for axis options, including any unspecified\n            // font-spec fields, if a font-spec was provided.\n\n            // If no x/y axis options were provided, create one of each anyway,\n            // since the rest of the code assumes that they exist.\n\n            var i, axisOptions, axisCount,\n                fontSize = placeholder.css(\"font-size\"),\n                fontSizeDefault = fontSize ? +fontSize.replace(\"px\", \"\") : 13,\n                fontDefaults = {\n                    style: placeholder.css(\"font-style\"),\n                    size: Math.round(0.8 * fontSizeDefault),\n                    variant: placeholder.css(\"font-variant\"),\n                    weight: placeholder.css(\"font-weight\"),\n                    family: placeholder.css(\"font-family\")\n                };\n\n            axisCount = options.xaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n\n                axisOptions = options.xaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.xaxis, axisOptions);\n                options.xaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            axisCount = options.yaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n\n                axisOptions = options.yaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.yaxis, axisOptions);\n                options.yaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            // backwards compatibility, to be removed in future\n            if (options.xaxis.noTicks && options.xaxis.ticks == null)\n                options.xaxis.ticks = options.xaxis.noTicks;\n            if (options.yaxis.noTicks && options.yaxis.ticks == null)\n                options.yaxis.ticks = options.yaxis.noTicks;\n            if (options.x2axis) {\n                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);\n                options.xaxes[1].position = \"top\";\n                // Override the inherit to allow the axis to auto-scale\n                if (options.x2axis.min == null) {\n                    options.xaxes[1].min = null;\n                }\n                if (options.x2axis.max == null) {\n                    options.xaxes[1].max = null;\n                }\n            }\n            if (options.y2axis) {\n                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);\n                options.yaxes[1].position = \"right\";\n                // Override the inherit to allow the axis to auto-scale\n                if (options.y2axis.min == null) {\n                    options.yaxes[1].min = null;\n                }\n                if (options.y2axis.max == null) {\n                    options.yaxes[1].max = null;\n                }\n            }\n            if (options.grid.coloredAreas)\n                options.grid.markings = options.grid.coloredAreas;\n            if (options.grid.coloredAreasColor)\n                options.grid.markingsColor = options.grid.coloredAreasColor;\n            if (options.lines)\n                $.extend(true, options.series.lines, options.lines);\n            if (options.points)\n                $.extend(true, options.series.points, options.points);\n            if (options.bars)\n                $.extend(true, options.series.bars, options.bars);\n            if (options.shadowSize != null)\n                options.series.shadowSize = options.shadowSize;\n            if (options.highlightColor != null)\n                options.series.highlightColor = options.highlightColor;\n\n            // save options on axes for future reference\n            for (i = 0; i < options.xaxes.length; ++i)\n                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];\n            for (i = 0; i < options.yaxes.length; ++i)\n                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];\n\n            // add hooks from options\n            for (var n in hooks)\n                if (options.hooks[n] && options.hooks[n].length)\n                    hooks[n] = hooks[n].concat(options.hooks[n]);\n\n            executeHooks(hooks.processOptions, [options]);\n        }\n\n        function setData(d) {\n            series = parseData(d);\n            fillInSeriesOptions();\n            processData();\n        }\n\n        function parseData(d) {\n            var res = [];\n            for (var i = 0; i < d.length; ++i) {\n                var s = $.extend(true, {}, options.series);\n\n                if (d[i].data != null) {\n                    s.data = d[i].data; // move the data instead of deep-copy\n                    delete d[i].data;\n\n                    $.extend(true, s, d[i]);\n\n                    d[i].data = s.data;\n                }\n                else\n                    s.data = d[i];\n                res.push(s);\n            }\n\n            return res;\n        }\n\n        function axisNumber(obj, coord) {\n            var a = obj[coord + \"axis\"];\n            if (typeof a == \"object\") // if we got a real axis, extract number\n                a = a.n;\n            if (typeof a != \"number\")\n                a = 1; // default to first axis\n            return a;\n        }\n\n        function allAxes() {\n            // return flat array without annoying null entries\n            return $.grep(xaxes.concat(yaxes), function (a) { return a; });\n        }\n\n        function canvasToAxisCoords(pos) {\n            // return an object with x/y corresponding to all used axes\n            var res = {}, i, axis;\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used)\n                    res[\"x\" + axis.n] = axis.c2p(pos.left);\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used)\n                    res[\"y\" + axis.n] = axis.c2p(pos.top);\n            }\n\n            if (res.x1 !== undefined)\n                res.x = res.x1;\n            if (res.y1 !== undefined)\n                res.y = res.y1;\n\n            return res;\n        }\n\n        function axisToCanvasCoords(pos) {\n            // get canvas coords from the first pair of x/y found in pos\n            var res = {}, i, axis, key;\n\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used) {\n                    key = \"x\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"x\";\n\n                    if (pos[key] != null) {\n                        res.left = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used) {\n                    key = \"y\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"y\";\n\n                    if (pos[key] != null) {\n                        res.top = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        function getOrCreateAxis(axes, number) {\n            if (!axes[number - 1])\n                axes[number - 1] = {\n                    n: number, // save the number for future reference\n                    direction: axes == xaxes ? \"x\" : \"y\",\n                    options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)\n                };\n\n            return axes[number - 1];\n        }\n\n        function fillInSeriesOptions() {\n\n            var neededColors = series.length, maxIndex = -1, i;\n\n            // Subtract the number of series that already have fixed colors or\n            // color indexes from the number that we still need to generate.\n\n            for (i = 0; i < series.length; ++i) {\n                var sc = series[i].color;\n                if (sc != null) {\n                    neededColors--;\n                    if (typeof sc == \"number\" && sc > maxIndex) {\n                        maxIndex = sc;\n                    }\n                }\n            }\n\n            // If any of the series have fixed color indexes, then we need to\n            // generate at least as many colors as the highest index.\n\n            if (neededColors <= maxIndex) {\n                neededColors = maxIndex + 1;\n            }\n\n            // Generate all the colors, using first the option colors and then\n            // variations on those colors once they're exhausted.\n\n            var c, colors = [], colorPool = options.colors,\n                colorPoolSize = colorPool.length, variation = 0;\n\n            for (i = 0; i < neededColors; i++) {\n\n                c = $.color.parse(colorPool[i % colorPoolSize] || \"#666\");\n\n                // Each time we exhaust the colors in the pool we adjust\n                // a scaling factor used to produce more variations on\n                // those colors. The factor alternates negative/positive\n                // to produce lighter/darker colors.\n\n                // Reset the variation after every few cycles, or else\n                // it will end up producing only white or black colors.\n\n                if (i % colorPoolSize == 0 && i) {\n                    if (variation >= 0) {\n                        if (variation < 0.5) {\n                            variation = -variation - 0.2;\n                        } else variation = 0;\n                    } else variation = -variation;\n                }\n\n                colors[i] = c.scale('rgb', 1 + variation);\n            }\n\n            // Finalize the series options, filling in their colors\n\n            var colori = 0, s;\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                // assign colors\n                if (s.color == null) {\n                    s.color = colors[colori].toString();\n                    ++colori;\n                }\n                else if (typeof s.color == \"number\")\n                    s.color = colors[s.color].toString();\n\n                // turn on lines automatically in case nothing is set\n                if (s.lines.show == null) {\n                    var v, show = true;\n                    for (v in s)\n                        if (s[v] && s[v].show) {\n                            show = false;\n                            break;\n                        }\n                    if (show)\n                        s.lines.show = true;\n                }\n\n                // If nothing was provided for lines.zero, default it to match\n                // lines.fill, since areas by default should extend to zero.\n\n                if (s.lines.zero == null) {\n                    s.lines.zero = !!s.lines.fill;\n                }\n\n                // setup axes\n                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, \"x\"));\n                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, \"y\"));\n            }\n        }\n\n        function processData() {\n            var topSentry = Number.POSITIVE_INFINITY,\n                bottomSentry = Number.NEGATIVE_INFINITY,\n                fakeInfinity = Number.MAX_VALUE,\n                i, j, k, m, length,\n                s, points, ps, x, y, axis, val, f, p,\n                data, format;\n\n            function updateAxis(axis, min, max) {\n                if (min < axis.datamin && min != -fakeInfinity)\n                    axis.datamin = min;\n                if (max > axis.datamax && max != fakeInfinity)\n                    axis.datamax = max;\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                // init axis\n                axis.datamin = topSentry;\n                axis.datamax = bottomSentry;\n                axis.used = false;\n            });\n\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                s.datapoints = { points: [] };\n\n                executeHooks(hooks.processRawData, [ s, s.data, s.datapoints ]);\n            }\n\n            // first pass: clean and copy data\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                data = s.data;\n                format = s.datapoints.format;\n\n                if (!format) {\n                    format = [];\n                    // find out how to copy\n                    format.push({ x: true, number: true, required: true });\n                    format.push({ y: true, number: true, required: true });\n\n                    if (s.bars.show || (s.lines.show && s.lines.fill)) {\n                        var autoscale = !!((s.bars.show && s.bars.zero) || (s.lines.show && s.lines.zero));\n                        format.push({ y: true, number: true, required: false, defaultValue: 0, autoscale: autoscale });\n                        if (s.bars.horizontal) {\n                            delete format[format.length - 1].y;\n                            format[format.length - 1].x = true;\n                        }\n                    }\n\n                    s.datapoints.format = format;\n                }\n\n                if (s.datapoints.pointsize != null)\n                    continue; // already filled in\n\n                s.datapoints.pointsize = format.length;\n\n                ps = s.datapoints.pointsize;\n                points = s.datapoints.points;\n\n                var insertSteps = s.lines.show && s.lines.steps;\n                s.xaxis.used = s.yaxis.used = true;\n\n                for (j = k = 0; j < data.length; ++j, k += ps) {\n                    p = data[j];\n\n                    var nullify = p == null;\n                    if (!nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = p[m];\n                            f = format[m];\n\n                            if (f) {\n                                if (f.number && val != null) {\n                                    val = +val; // convert to number\n                                    if (isNaN(val))\n                                        val = null;\n                                    else if (val == Infinity)\n                                        val = fakeInfinity;\n                                    else if (val == -Infinity)\n                                        val = -fakeInfinity;\n                                }\n\n                                if (val == null) {\n                                    if (f.required)\n                                        nullify = true;\n\n                                    if (f.defaultValue != null)\n                                        val = f.defaultValue;\n                                }\n                            }\n\n                            points[k + m] = val;\n                        }\n                    }\n\n                    if (nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = points[k + m];\n                            if (val != null) {\n                                f = format[m];\n                                // extract min/max info\n                                if (f.autoscale !== false) {\n                                    if (f.x) {\n                                        updateAxis(s.xaxis, val, val);\n                                    }\n                                    if (f.y) {\n                                        updateAxis(s.yaxis, val, val);\n                                    }\n                                }\n                            }\n                            points[k + m] = null;\n                        }\n                    }\n                    else {\n                        // a little bit of line specific stuff that\n                        // perhaps shouldn't be here, but lacking\n                        // better means...\n                        if (insertSteps && k > 0\n                            && points[k - ps] != null\n                            && points[k - ps] != points[k]\n                            && points[k - ps + 1] != points[k + 1]) {\n                            // copy the point to make room for a middle point\n                            for (m = 0; m < ps; ++m)\n                                points[k + ps + m] = points[k + m];\n\n                            // middle point has same y\n                            points[k + 1] = points[k - ps + 1];\n\n                            // we've added a point, better reflect that\n                            k += ps;\n                        }\n                    }\n                }\n            }\n\n            // give the hooks a chance to run\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                executeHooks(hooks.processDatapoints, [ s, s.datapoints]);\n            }\n\n            // second pass: find datamax/datamin for auto-scaling\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                points = s.datapoints.points;\n                ps = s.datapoints.pointsize;\n                format = s.datapoints.format;\n\n                var xmin = topSentry, ymin = topSentry,\n                    xmax = bottomSentry, ymax = bottomSentry;\n\n                for (j = 0; j < points.length; j += ps) {\n                    if (points[j] == null)\n                        continue;\n\n                    for (m = 0; m < ps; ++m) {\n                        val = points[j + m];\n                        f = format[m];\n                        if (!f || f.autoscale === false || val == fakeInfinity || val == -fakeInfinity)\n                            continue;\n\n                        if (f.x) {\n                            if (val < xmin)\n                                xmin = val;\n                            if (val > xmax)\n                                xmax = val;\n                        }\n                        if (f.y) {\n                            if (val < ymin)\n                                ymin = val;\n                            if (val > ymax)\n                                ymax = val;\n                        }\n                    }\n                }\n\n                if (s.bars.show) {\n                    // make sure we got room for the bar on the dancing floor\n                    var delta;\n\n                    switch (s.bars.align) {\n                        case \"left\":\n                            delta = 0;\n                            break;\n                        case \"right\":\n                            delta = -s.bars.barWidth;\n                            break;\n                        default:\n                            delta = -s.bars.barWidth / 2;\n                    }\n\n                    if (s.bars.horizontal) {\n                        ymin += delta;\n                        ymax += delta + s.bars.barWidth;\n                    }\n                    else {\n                        xmin += delta;\n                        xmax += delta + s.bars.barWidth;\n                    }\n                }\n\n                updateAxis(s.xaxis, xmin, xmax);\n                updateAxis(s.yaxis, ymin, ymax);\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                if (axis.datamin == topSentry)\n                    axis.datamin = null;\n                if (axis.datamax == bottomSentry)\n                    axis.datamax = null;\n            });\n        }\n\n        function setupCanvases() {\n\n            // Make sure the placeholder is clear of everything except canvases\n            // from a previous plot in this container that we'll try to re-use.\n\n            placeholder.css(\"padding\", 0) // padding messes up the positioning\n                .children().filter(function(){\n                    return !$(this).hasClass(\"flot-overlay\") && !$(this).hasClass('flot-base');\n                }).remove();\n\n            if (placeholder.css(\"position\") == 'static')\n                placeholder.css(\"position\", \"relative\"); // for positioning labels and overlay\n\n            surface = new Canvas(\"flot-base\", placeholder);\n            overlay = new Canvas(\"flot-overlay\", placeholder); // overlay canvas for interactive features\n\n            ctx = surface.context;\n            octx = overlay.context;\n\n            // define which element we're listening for events on\n            eventHolder = $(overlay.element).unbind();\n\n            // If we're re-using a plot object, shut down the old one\n\n            var existing = placeholder.data(\"plot\");\n\n            if (existing) {\n                existing.shutdown();\n                overlay.clear();\n            }\n\n            // save in case we get replotted\n            placeholder.data(\"plot\", plot);\n        }\n\n        function bindEvents() {\n            // bind events\n            if (options.grid.hoverable) {\n                eventHolder.mousemove(onMouseMove);\n\n                // Use bind, rather than .mouseleave, because we officially\n                // still support jQuery 1.2.6, which doesn't define a shortcut\n                // for mouseenter or mouseleave.  This was a bug/oversight that\n                // was fixed somewhere around 1.3.x.  We can return to using\n                // .mouseleave when we drop support for 1.2.6.\n\n                eventHolder.bind(\"mouseleave\", onMouseLeave);\n            }\n\n            if (options.grid.clickable)\n                eventHolder.click(onClick);\n\n            executeHooks(hooks.bindEvents, [eventHolder]);\n        }\n\n        function shutdown() {\n            if (redrawTimeout)\n                clearTimeout(redrawTimeout);\n\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n            eventHolder.unbind(\"mouseleave\", onMouseLeave);\n            eventHolder.unbind(\"click\", onClick);\n\n            executeHooks(hooks.shutdown, [eventHolder]);\n        }\n\n        function setTransformationHelpers(axis) {\n            // set helper functions on the axis, assumes plot area\n            // has been computed already\n\n            function identity(x) { return x; }\n\n            var s, m, t = axis.options.transform || identity,\n                it = axis.options.inverseTransform;\n\n            // precompute how much the axis is scaling a point\n            // in canvas space\n            if (axis.direction == \"x\") {\n                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));\n                m = Math.min(t(axis.max), t(axis.min));\n            }\n            else {\n                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));\n                s = -s;\n                m = Math.max(t(axis.max), t(axis.min));\n            }\n\n            // data point to canvas coordinate\n            if (t == identity) // slight optimization\n                axis.p2c = function (p) { return (p - m) * s; };\n            else\n                axis.p2c = function (p) { return (t(p) - m) * s; };\n            // canvas coordinate to data point\n            if (!it)\n                axis.c2p = function (c) { return m + c / s; };\n            else\n                axis.c2p = function (c) { return it(m + c / s); };\n        }\n\n        function measureTickLabels(axis) {\n\n            var opts = axis.options,\n                ticks = axis.ticks || [],\n                labelWidth = opts.labelWidth || 0,\n                labelHeight = opts.labelHeight || 0,\n                maxWidth = labelWidth || (axis.direction == \"x\" ? Math.floor(surface.width / (ticks.length || 1)) : null),\n                legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                font = opts.font || \"flot-tick-label tickLabel\";\n\n            for (var i = 0; i < ticks.length; ++i) {\n\n                var t = ticks[i];\n\n                if (!t.label)\n                    continue;\n\n                var info = surface.getTextInfo(layer, t.label, font, null, maxWidth);\n\n                labelWidth = Math.max(labelWidth, info.width);\n                labelHeight = Math.max(labelHeight, info.height);\n            }\n\n            axis.labelWidth = opts.labelWidth || labelWidth;\n            axis.labelHeight = opts.labelHeight || labelHeight;\n        }\n\n        function allocateAxisBoxFirstPhase(axis) {\n            // find the bounding box of the axis by looking at label\n            // widths/heights and ticks, make room by diminishing the\n            // plotOffset; this first phase only looks at one\n            // dimension per axis, the other dimension depends on the\n            // other axes so will have to wait\n\n            var lw = axis.labelWidth,\n                lh = axis.labelHeight,\n                pos = axis.options.position,\n                isXAxis = axis.direction === \"x\",\n                tickLength = axis.options.tickLength,\n                axisMargin = options.grid.axisMargin,\n                padding = options.grid.labelMargin,\n                innermost = true,\n                outermost = true,\n                first = true,\n                found = false;\n\n            // Determine the axis's position in its direction and on its side\n\n            $.each(isXAxis ? xaxes : yaxes, function(i, a) {\n                if (a && (a.show || a.reserveSpace)) {\n                    if (a === axis) {\n                        found = true;\n                    } else if (a.options.position === pos) {\n                        if (found) {\n                            outermost = false;\n                        } else {\n                            innermost = false;\n                        }\n                    }\n                    if (!found) {\n                        first = false;\n                    }\n                }\n            });\n\n            // The outermost axis on each side has no margin\n\n            if (outermost) {\n                axisMargin = 0;\n            }\n\n            // The ticks for the first axis in each direction stretch across\n\n            if (tickLength == null) {\n                tickLength = first ? \"full\" : 5;\n            }\n\n            if (!isNaN(+tickLength))\n                padding += +tickLength;\n\n            if (isXAxis) {\n                lh += padding;\n\n                if (pos == \"bottom\") {\n                    plotOffset.bottom += lh + axisMargin;\n                    axis.box = { top: surface.height - plotOffset.bottom, height: lh };\n                }\n                else {\n                    axis.box = { top: plotOffset.top + axisMargin, height: lh };\n                    plotOffset.top += lh + axisMargin;\n                }\n            }\n            else {\n                lw += padding;\n\n                if (pos == \"left\") {\n                    axis.box = { left: plotOffset.left + axisMargin, width: lw };\n                    plotOffset.left += lw + axisMargin;\n                }\n                else {\n                    plotOffset.right += lw + axisMargin;\n                    axis.box = { left: surface.width - plotOffset.right, width: lw };\n                }\n            }\n\n             // save for future reference\n            axis.position = pos;\n            axis.tickLength = tickLength;\n            axis.box.padding = padding;\n            axis.innermost = innermost;\n        }\n\n        function allocateAxisBoxSecondPhase(axis) {\n            // now that all axis boxes have been placed in one\n            // dimension, we can set the remaining dimension coordinates\n            if (axis.direction == \"x\") {\n                axis.box.left = plotOffset.left - axis.labelWidth / 2;\n                axis.box.width = surface.width - plotOffset.left - plotOffset.right + axis.labelWidth;\n            }\n            else {\n                axis.box.top = plotOffset.top - axis.labelHeight / 2;\n                axis.box.height = surface.height - plotOffset.bottom - plotOffset.top + axis.labelHeight;\n            }\n        }\n\n        function adjustLayoutForThingsStickingOut() {\n            // possibly adjust plot offset to ensure everything stays\n            // inside the canvas and isn't clipped off\n\n            var minMargin = options.grid.minBorderMargin,\n                axis, i;\n\n            // check stuff from the plot (FIXME: this should just read\n            // a value from the series, otherwise it's impossible to\n            // customize)\n            if (minMargin == null) {\n                minMargin = 0;\n                for (i = 0; i < series.length; ++i)\n                    minMargin = Math.max(minMargin, 2 * (series[i].points.radius + series[i].points.lineWidth/2));\n            }\n\n            var margins = {\n                left: minMargin,\n                right: minMargin,\n                top: minMargin,\n                bottom: minMargin\n            };\n\n            // check axis labels, note we don't check the actual\n            // labels but instead use the overall width/height to not\n            // jump as much around with replots\n            $.each(allAxes(), function (_, axis) {\n                if (axis.reserveSpace && axis.ticks && axis.ticks.length) {\n                    if (axis.direction === \"x\") {\n                        margins.left = Math.max(margins.left, axis.labelWidth / 2);\n                        margins.right = Math.max(margins.right, axis.labelWidth / 2);\n                    } else {\n                        margins.bottom = Math.max(margins.bottom, axis.labelHeight / 2);\n                        margins.top = Math.max(margins.top, axis.labelHeight / 2);\n                    }\n                }\n            });\n\n            plotOffset.left = Math.ceil(Math.max(margins.left, plotOffset.left));\n            plotOffset.right = Math.ceil(Math.max(margins.right, plotOffset.right));\n            plotOffset.top = Math.ceil(Math.max(margins.top, plotOffset.top));\n            plotOffset.bottom = Math.ceil(Math.max(margins.bottom, plotOffset.bottom));\n        }\n\n        function setupGrid() {\n            var i, axes = allAxes(), showGrid = options.grid.show;\n\n            // Initialize the plot's offset from the edge of the canvas\n\n            for (var a in plotOffset) {\n                var margin = options.grid.margin || 0;\n                plotOffset[a] = typeof margin == \"number\" ? margin : margin[a] || 0;\n            }\n\n            executeHooks(hooks.processOffset, [plotOffset]);\n\n            // If the grid is visible, add its border width to the offset\n\n            for (var a in plotOffset) {\n                if(typeof(options.grid.borderWidth) == \"object\") {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth[a] : 0;\n                }\n                else {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth : 0;\n                }\n            }\n\n            $.each(axes, function (_, axis) {\n                var axisOpts = axis.options;\n                axis.show = axisOpts.show == null ? axis.used : axisOpts.show;\n                axis.reserveSpace = axisOpts.reserveSpace == null ? axis.show : axisOpts.reserveSpace;\n                setRange(axis);\n            });\n\n            if (showGrid) {\n\n                var allocatedAxes = $.grep(axes, function (axis) {\n                    return axis.show || axis.reserveSpace;\n                });\n\n                $.each(allocatedAxes, function (_, axis) {\n                    // make the ticks\n                    setupTickGeneration(axis);\n                    setTicks(axis);\n                    snapRangeToTicks(axis, axis.ticks);\n                    // find labelWidth/Height for axis\n                    measureTickLabels(axis);\n                });\n\n                // with all dimensions calculated, we can compute the\n                // axis bounding boxes, start from the outside\n                // (reverse order)\n                for (i = allocatedAxes.length - 1; i >= 0; --i)\n                    allocateAxisBoxFirstPhase(allocatedAxes[i]);\n\n                // make sure we've got enough space for things that\n                // might stick out\n                adjustLayoutForThingsStickingOut();\n\n                $.each(allocatedAxes, function (_, axis) {\n                    allocateAxisBoxSecondPhase(axis);\n                });\n            }\n\n            plotWidth = surface.width - plotOffset.left - plotOffset.right;\n            plotHeight = surface.height - plotOffset.bottom - plotOffset.top;\n\n            // now we got the proper plot dimensions, we can compute the scaling\n            $.each(axes, function (_, axis) {\n                setTransformationHelpers(axis);\n            });\n\n            if (showGrid) {\n                drawAxisLabels();\n            }\n\n            insertLegend();\n        }\n\n        function setRange(axis) {\n            var opts = axis.options,\n                min = +(opts.min != null ? opts.min : axis.datamin),\n                max = +(opts.max != null ? opts.max : axis.datamax),\n                delta = max - min;\n\n            if (delta == 0.0) {\n                // degenerate case\n                var widen = max == 0 ? 1 : 0.01;\n\n                if (opts.min == null)\n                    min -= widen;\n                // always widen max if we couldn't widen min to ensure we\n                // don't fall into min == max which doesn't work\n                if (opts.max == null || opts.min != null)\n                    max += widen;\n            }\n            else {\n                // consider autoscaling\n                var margin = opts.autoscaleMargin;\n                if (margin != null) {\n                    if (opts.min == null) {\n                        min -= delta * margin;\n                        // make sure we don't go below zero if all values\n                        // are positive\n                        if (min < 0 && axis.datamin != null && axis.datamin >= 0)\n                            min = 0;\n                    }\n                    if (opts.max == null) {\n                        max += delta * margin;\n                        if (max > 0 && axis.datamax != null && axis.datamax <= 0)\n                            max = 0;\n                    }\n                }\n            }\n            axis.min = min;\n            axis.max = max;\n        }\n\n        function setupTickGeneration(axis) {\n            var opts = axis.options;\n\n            // estimate number of ticks\n            var noTicks;\n            if (typeof opts.ticks == \"number\" && opts.ticks > 0)\n                noTicks = opts.ticks;\n            else\n                // heuristic based on the model a*sqrt(x) fitted to\n                // some data points that seemed reasonable\n                noTicks = 0.3 * Math.sqrt(axis.direction == \"x\" ? surface.width : surface.height);\n\n            var delta = (axis.max - axis.min) / noTicks,\n                dec = -Math.floor(Math.log(delta) / Math.LN10),\n                maxDec = opts.tickDecimals;\n\n            if (maxDec != null && dec > maxDec) {\n                dec = maxDec;\n            }\n\n            var magn = Math.pow(10, -dec),\n                norm = delta / magn, // norm is between 1.0 and 10.0\n                size;\n\n            if (norm < 1.5) {\n                size = 1;\n            } else if (norm < 3) {\n                size = 2;\n                // special case for 2.5, requires an extra decimal\n                if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {\n                    size = 2.5;\n                    ++dec;\n                }\n            } else if (norm < 7.5) {\n                size = 5;\n            } else {\n                size = 10;\n            }\n\n            size *= magn;\n\n            if (opts.minTickSize != null && size < opts.minTickSize) {\n                size = opts.minTickSize;\n            }\n\n            axis.delta = delta;\n            axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);\n            axis.tickSize = opts.tickSize || size;\n\n            // Time mode was moved to a plug-in in 0.8, and since so many people use it\n            // we'll add an especially friendly reminder to make sure they included it.\n\n            if (opts.mode == \"time\" && !axis.tickGenerator) {\n                throw new Error(\"Time mode requires the flot.time plugin.\");\n            }\n\n            // Flot supports base-10 axes; any other mode else is handled by a plug-in,\n            // like flot.time.js.\n\n            if (!axis.tickGenerator) {\n\n                axis.tickGenerator = function (axis) {\n\n                    var ticks = [],\n                        start = floorInBase(axis.min, axis.tickSize),\n                        i = 0,\n                        v = Number.NaN,\n                        prev;\n\n                    do {\n                        prev = v;\n                        v = start + i * axis.tickSize;\n                        ticks.push(v);\n                        ++i;\n                    } while (v < axis.max && v != prev);\n                    return ticks;\n                };\n\n\t\t\t\taxis.tickFormatter = function (value, axis) {\n\n\t\t\t\t\tvar factor = axis.tickDecimals ? Math.pow(10, axis.tickDecimals) : 1;\n\t\t\t\t\tvar formatted = \"\" + Math.round(value * factor) / factor;\n\n\t\t\t\t\t// If tickDecimals was specified, ensure that we have exactly that\n\t\t\t\t\t// much precision; otherwise default to the value's own precision.\n\n\t\t\t\t\tif (axis.tickDecimals != null) {\n\t\t\t\t\t\tvar decimal = formatted.indexOf(\".\");\n\t\t\t\t\t\tvar precision = decimal == -1 ? 0 : formatted.length - decimal - 1;\n\t\t\t\t\t\tif (precision < axis.tickDecimals) {\n\t\t\t\t\t\t\treturn (precision ? formatted : formatted + \".\") + (\"\" + factor).substr(1, axis.tickDecimals - precision);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n                    return formatted;\n                };\n            }\n\n            if ($.isFunction(opts.tickFormatter))\n                axis.tickFormatter = function (v, axis) { return \"\" + opts.tickFormatter(v, axis); };\n\n            if (opts.alignTicksWithAxis != null) {\n                var otherAxis = (axis.direction == \"x\" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];\n                if (otherAxis && otherAxis.used && otherAxis != axis) {\n                    // consider snapping min/max to outermost nice ticks\n                    var niceTicks = axis.tickGenerator(axis);\n                    if (niceTicks.length > 0) {\n                        if (opts.min == null)\n                            axis.min = Math.min(axis.min, niceTicks[0]);\n                        if (opts.max == null && niceTicks.length > 1)\n                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);\n                    }\n\n                    axis.tickGenerator = function (axis) {\n                        // copy ticks, scaled to this axis\n                        var ticks = [], v, i;\n                        for (i = 0; i < otherAxis.ticks.length; ++i) {\n                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);\n                            v = axis.min + v * (axis.max - axis.min);\n                            ticks.push(v);\n                        }\n                        return ticks;\n                    };\n\n                    // we might need an extra decimal since forced\n                    // ticks don't necessarily fit naturally\n                    if (!axis.mode && opts.tickDecimals == null) {\n                        var extraDec = Math.max(0, -Math.floor(Math.log(axis.delta) / Math.LN10) + 1),\n                            ts = axis.tickGenerator(axis);\n\n                        // only proceed if the tick interval rounded\n                        // with an extra decimal doesn't give us a\n                        // zero at end\n                        if (!(ts.length > 1 && /\\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))))\n                            axis.tickDecimals = extraDec;\n                    }\n                }\n            }\n        }\n\n        function setTicks(axis) {\n            var oticks = axis.options.ticks, ticks = [];\n            if (oticks == null || (typeof oticks == \"number\" && oticks > 0))\n                ticks = axis.tickGenerator(axis);\n            else if (oticks) {\n                if ($.isFunction(oticks))\n                    // generate the ticks\n                    ticks = oticks(axis);\n                else\n                    ticks = oticks;\n            }\n\n            // clean up/labelify the supplied ticks, copy them over\n            var i, v;\n            axis.ticks = [];\n            for (i = 0; i < ticks.length; ++i) {\n                var label = null;\n                var t = ticks[i];\n                if (typeof t == \"object\") {\n                    v = +t[0];\n                    if (t.length > 1)\n                        label = t[1];\n                }\n                else\n                    v = +t;\n                if (label == null)\n                    label = axis.tickFormatter(v, axis);\n                if (!isNaN(v))\n                    axis.ticks.push({ v: v, label: label });\n            }\n        }\n\n        function snapRangeToTicks(axis, ticks) {\n            if (axis.options.autoscaleMargin && ticks.length > 0) {\n                // snap to ticks\n                if (axis.options.min == null)\n                    axis.min = Math.min(axis.min, ticks[0].v);\n                if (axis.options.max == null && ticks.length > 1)\n                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);\n            }\n        }\n\n        function draw() {\n\n            surface.clear();\n\n            executeHooks(hooks.drawBackground, [ctx]);\n\n            var grid = options.grid;\n\n            // draw background, if any\n            if (grid.show && grid.backgroundColor)\n                drawBackground();\n\n            if (grid.show && !grid.aboveData) {\n                drawGrid();\n            }\n\n            for (var i = 0; i < series.length; ++i) {\n                executeHooks(hooks.drawSeries, [ctx, series[i]]);\n                drawSeries(series[i]);\n            }\n\n            executeHooks(hooks.draw, [ctx]);\n\n            if (grid.show && grid.aboveData) {\n                drawGrid();\n            }\n\n            surface.render();\n\n            // A draw implies that either the axes or data have changed, so we\n            // should probably update the overlay highlights as well.\n\n            triggerRedrawOverlay();\n        }\n\n        function extractRange(ranges, coord) {\n            var axis, from, to, key, axes = allAxes();\n\n            for (var i = 0; i < axes.length; ++i) {\n                axis = axes[i];\n                if (axis.direction == coord) {\n                    key = coord + axis.n + \"axis\";\n                    if (!ranges[key] && axis.n == 1)\n                        key = coord + \"axis\"; // support x1axis as xaxis\n                    if (ranges[key]) {\n                        from = ranges[key].from;\n                        to = ranges[key].to;\n                        break;\n                    }\n                }\n            }\n\n            // backwards-compat stuff - to be removed in future\n            if (!ranges[key]) {\n                axis = coord == \"x\" ? xaxes[0] : yaxes[0];\n                from = ranges[coord + \"1\"];\n                to = ranges[coord + \"2\"];\n            }\n\n            // auto-reverse as an added bonus\n            if (from != null && to != null && from > to) {\n                var tmp = from;\n                from = to;\n                to = tmp;\n            }\n\n            return { from: from, to: to, axis: axis };\n        }\n\n        function drawBackground() {\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, \"rgba(255, 255, 255, 0)\");\n            ctx.fillRect(0, 0, plotWidth, plotHeight);\n            ctx.restore();\n        }\n\n        function drawGrid() {\n            var i, axes, bw, bc;\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // draw markings\n            var markings = options.grid.markings;\n            if (markings) {\n                if ($.isFunction(markings)) {\n                    axes = plot.getAxes();\n                    // xmin etc. is backwards compatibility, to be\n                    // removed in the future\n                    axes.xmin = axes.xaxis.min;\n                    axes.xmax = axes.xaxis.max;\n                    axes.ymin = axes.yaxis.min;\n                    axes.ymax = axes.yaxis.max;\n\n                    markings = markings(axes);\n                }\n\n                for (i = 0; i < markings.length; ++i) {\n                    var m = markings[i],\n                        xrange = extractRange(m, \"x\"),\n                        yrange = extractRange(m, \"y\");\n\n                    // fill in missing\n                    if (xrange.from == null)\n                        xrange.from = xrange.axis.min;\n                    if (xrange.to == null)\n                        xrange.to = xrange.axis.max;\n                    if (yrange.from == null)\n                        yrange.from = yrange.axis.min;\n                    if (yrange.to == null)\n                        yrange.to = yrange.axis.max;\n\n                    // clip\n                    if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max ||\n                        yrange.to < yrange.axis.min || yrange.from > yrange.axis.max)\n                        continue;\n\n                    xrange.from = Math.max(xrange.from, xrange.axis.min);\n                    xrange.to = Math.min(xrange.to, xrange.axis.max);\n                    yrange.from = Math.max(yrange.from, yrange.axis.min);\n                    yrange.to = Math.min(yrange.to, yrange.axis.max);\n\n                    var xequal = xrange.from === xrange.to,\n                        yequal = yrange.from === yrange.to;\n\n                    if (xequal && yequal) {\n                        continue;\n                    }\n\n                    // then draw\n                    xrange.from = Math.floor(xrange.axis.p2c(xrange.from));\n                    xrange.to = Math.floor(xrange.axis.p2c(xrange.to));\n                    yrange.from = Math.floor(yrange.axis.p2c(yrange.from));\n                    yrange.to = Math.floor(yrange.axis.p2c(yrange.to));\n\n                    if (xequal || yequal) {\n                        var lineWidth = m.lineWidth || options.grid.markingsLineWidth,\n                            subPixel = lineWidth % 2 ? 0.5 : 0;\n                        ctx.beginPath();\n                        ctx.strokeStyle = m.color || options.grid.markingsColor;\n                        ctx.lineWidth = lineWidth;\n                        if (xequal) {\n                            ctx.moveTo(xrange.to + subPixel, yrange.from);\n                            ctx.lineTo(xrange.to + subPixel, yrange.to);\n                        } else {\n                            ctx.moveTo(xrange.from, yrange.to + subPixel);\n                            ctx.lineTo(xrange.to, yrange.to + subPixel);                            \n                        }\n                        ctx.stroke();\n                    } else {\n                        ctx.fillStyle = m.color || options.grid.markingsColor;\n                        ctx.fillRect(xrange.from, yrange.to,\n                                     xrange.to - xrange.from,\n                                     yrange.from - yrange.to);\n                    }\n                }\n            }\n\n            // draw the ticks\n            axes = allAxes();\n            bw = options.grid.borderWidth;\n\n            for (var j = 0; j < axes.length; ++j) {\n                var axis = axes[j], box = axis.box,\n                    t = axis.tickLength, x, y, xoff, yoff;\n                if (!axis.show || axis.ticks.length == 0)\n                    continue;\n\n                ctx.lineWidth = 1;\n\n                // find the edges\n                if (axis.direction == \"x\") {\n                    x = 0;\n                    if (t == \"full\")\n                        y = (axis.position == \"top\" ? 0 : plotHeight);\n                    else\n                        y = box.top - plotOffset.top + (axis.position == \"top\" ? box.height : 0);\n                }\n                else {\n                    y = 0;\n                    if (t == \"full\")\n                        x = (axis.position == \"left\" ? 0 : plotWidth);\n                    else\n                        x = box.left - plotOffset.left + (axis.position == \"left\" ? box.width : 0);\n                }\n\n                // draw tick bar\n                if (!axis.innermost) {\n                    ctx.strokeStyle = axis.options.color;\n                    ctx.beginPath();\n                    xoff = yoff = 0;\n                    if (axis.direction == \"x\")\n                        xoff = plotWidth + 1;\n                    else\n                        yoff = plotHeight + 1;\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\") {\n                            y = Math.floor(y) + 0.5;\n                        } else {\n                            x = Math.floor(x) + 0.5;\n                        }\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                    ctx.stroke();\n                }\n\n                // draw ticks\n\n                ctx.strokeStyle = axis.options.tickColor;\n\n                ctx.beginPath();\n                for (i = 0; i < axis.ticks.length; ++i) {\n                    var v = axis.ticks[i].v;\n\n                    xoff = yoff = 0;\n\n                    if (isNaN(v) || v < axis.min || v > axis.max\n                        // skip those lying on the axes if we got a border\n                        || (t == \"full\"\n                            && ((typeof bw == \"object\" && bw[axis.position] > 0) || bw > 0)\n                            && (v == axis.min || v == axis.max)))\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        x = axis.p2c(v);\n                        yoff = t == \"full\" ? -plotHeight : t;\n\n                        if (axis.position == \"top\")\n                            yoff = -yoff;\n                    }\n                    else {\n                        y = axis.p2c(v);\n                        xoff = t == \"full\" ? -plotWidth : t;\n\n                        if (axis.position == \"left\")\n                            xoff = -xoff;\n                    }\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\")\n                            x = Math.floor(x) + 0.5;\n                        else\n                            y = Math.floor(y) + 0.5;\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                }\n\n                ctx.stroke();\n            }\n\n\n            // draw border\n            if (bw) {\n                // If either borderWidth or borderColor is an object, then draw the border\n                // line by line instead of as one rectangle\n                bc = options.grid.borderColor;\n                if(typeof bw == \"object\" || typeof bc == \"object\") {\n                    if (typeof bw !== \"object\") {\n                        bw = {top: bw, right: bw, bottom: bw, left: bw};\n                    }\n                    if (typeof bc !== \"object\") {\n                        bc = {top: bc, right: bc, bottom: bc, left: bc};\n                    }\n\n                    if (bw.top > 0) {\n                        ctx.strokeStyle = bc.top;\n                        ctx.lineWidth = bw.top;\n                        ctx.beginPath();\n                        ctx.moveTo(0 - bw.left, 0 - bw.top/2);\n                        ctx.lineTo(plotWidth, 0 - bw.top/2);\n                        ctx.stroke();\n                    }\n\n                    if (bw.right > 0) {\n                        ctx.strokeStyle = bc.right;\n                        ctx.lineWidth = bw.right;\n                        ctx.beginPath();\n                        ctx.moveTo(plotWidth + bw.right / 2, 0 - bw.top);\n                        ctx.lineTo(plotWidth + bw.right / 2, plotHeight);\n                        ctx.stroke();\n                    }\n\n                    if (bw.bottom > 0) {\n                        ctx.strokeStyle = bc.bottom;\n                        ctx.lineWidth = bw.bottom;\n                        ctx.beginPath();\n                        ctx.moveTo(plotWidth + bw.right, plotHeight + bw.bottom / 2);\n                        ctx.lineTo(0, plotHeight + bw.bottom / 2);\n                        ctx.stroke();\n                    }\n\n                    if (bw.left > 0) {\n                        ctx.strokeStyle = bc.left;\n                        ctx.lineWidth = bw.left;\n                        ctx.beginPath();\n                        ctx.moveTo(0 - bw.left/2, plotHeight + bw.bottom);\n                        ctx.lineTo(0- bw.left/2, 0);\n                        ctx.stroke();\n                    }\n                }\n                else {\n                    ctx.lineWidth = bw;\n                    ctx.strokeStyle = options.grid.borderColor;\n                    ctx.strokeRect(-bw/2, -bw/2, plotWidth + bw, plotHeight + bw);\n                }\n            }\n\n            ctx.restore();\n        }\n\n        function drawAxisLabels() {\n\n            $.each(allAxes(), function (_, axis) {\n                var box = axis.box,\n                    legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                    layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                    font = axis.options.font || \"flot-tick-label tickLabel\",\n                    tick, x, y, halign, valign;\n\n                // Remove text before checking for axis.show and ticks.length;\n                // otherwise plugins, like flot-tickrotor, that draw their own\n                // tick labels will end up with both theirs and the defaults.\n\n                surface.removeText(layer);\n\n                if (!axis.show || axis.ticks.length == 0)\n                    return;\n\n                for (var i = 0; i < axis.ticks.length; ++i) {\n\n                    tick = axis.ticks[i];\n                    if (!tick.label || tick.v < axis.min || tick.v > axis.max)\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        halign = \"center\";\n                        x = plotOffset.left + axis.p2c(tick.v);\n                        if (axis.position == \"bottom\") {\n                            y = box.top + box.padding;\n                        } else {\n                            y = box.top + box.height - box.padding;\n                            valign = \"bottom\";\n                        }\n                    } else {\n                        valign = \"middle\";\n                        y = plotOffset.top + axis.p2c(tick.v);\n                        if (axis.position == \"left\") {\n                            x = box.left + box.width - box.padding;\n                            halign = \"right\";\n                        } else {\n                            x = box.left + box.padding;\n                        }\n                    }\n\n                    surface.addText(layer, x, y, tick.label, font, null, null, halign, valign);\n                }\n            });\n        }\n\n        function drawSeries(series) {\n            if (series.lines.show)\n                drawSeriesLines(series);\n            if (series.bars.show)\n                drawSeriesBars(series);\n            if (series.points.show)\n                drawSeriesPoints(series);\n        }\n\n        function drawSeriesLines(series) {\n            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    prevx = null, prevy = null;\n\n                ctx.beginPath();\n                for (var i = ps; i < points.length; i += ps) {\n                    var x1 = points[i - ps], y1 = points[i - ps + 1],\n                        x2 = points[i], y2 = points[i + 1];\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min) {\n                        if (y2 < axisy.min)\n                            continue;   // line segment is outside\n                        // compute new intersection point\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min) {\n                        if (y1 < axisy.min)\n                            continue;\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max) {\n                        if (y2 > axisy.max)\n                            continue;\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max) {\n                        if (y1 > axisy.max)\n                            continue;\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (x1 != prevx || y1 != prevy)\n                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);\n\n                    prevx = x2;\n                    prevy = y2;\n                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);\n                }\n                ctx.stroke();\n            }\n\n            function plotLineArea(datapoints, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),\n                    i = 0, top, areaOpen = false,\n                    ypos = 1, segmentStart = 0, segmentEnd = 0;\n\n                // we process each segment in two turns, first forward\n                // direction to sketch out top, then once we hit the\n                // end we go backwards to sketch the bottom\n                while (true) {\n                    if (ps > 0 && i > points.length + ps)\n                        break;\n\n                    i += ps; // ps is negative if going backwards\n\n                    var x1 = points[i - ps],\n                        y1 = points[i - ps + ypos],\n                        x2 = points[i], y2 = points[i + ypos];\n\n                    if (areaOpen) {\n                        if (ps > 0 && x1 != null && x2 == null) {\n                            // at turning point\n                            segmentEnd = i;\n                            ps = -ps;\n                            ypos = 2;\n                            continue;\n                        }\n\n                        if (ps < 0 && i == segmentStart + ps) {\n                            // done with the reverse sweep\n                            ctx.fill();\n                            areaOpen = false;\n                            ps = -ps;\n                            ypos = 1;\n                            i = segmentStart = segmentEnd + ps;\n                            continue;\n                        }\n                    }\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip x values\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (!areaOpen) {\n                        // open area\n                        ctx.beginPath();\n                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));\n                        areaOpen = true;\n                    }\n\n                    // now first check the case where both is outside\n                    if (y1 >= axisy.max && y2 >= axisy.max) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));\n                        continue;\n                    }\n                    else if (y1 <= axisy.min && y2 <= axisy.min) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));\n                        continue;\n                    }\n\n                    // else it's a bit more complicated, there might\n                    // be a flat maxed out rectangle first, then a\n                    // triangular cutout or reverse; to find these\n                    // keep track of the current x values\n                    var x1old = x1, x2old = x2;\n\n                    // clip the y values, without shortcutting, we\n                    // go through all cases in turn\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // if the x value was changed we got a rectangle\n                    // to fill\n                    if (x1 != x1old) {\n                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));\n                        // it goes to (x1, y1), but we fill that below\n                    }\n\n                    // fill triangular section, this sometimes result\n                    // in redundant points if (x1, y1) hasn't changed\n                    // from previous line to, but we just ignore that\n                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));\n                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n\n                    // fill the other rectangle if it's there\n                    if (x2 != x2old) {\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));\n                    }\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n            ctx.lineJoin = \"round\";\n\n            var lw = series.lines.lineWidth,\n                sw = series.shadowSize;\n            // FIXME: consider another form of shadow when filling is turned on\n            if (lw > 0 && sw > 0) {\n                // draw shadow as a thick and thin line with transparency\n                ctx.lineWidth = sw;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                // position shadow at angle from the mid of line\n                var angle = Math.PI/18;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/2), Math.cos(angle) * (lw/2 + sw/2), series.xaxis, series.yaxis);\n                ctx.lineWidth = sw/2;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/4), Math.cos(angle) * (lw/2 + sw/4), series.xaxis, series.yaxis);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);\n            if (fillStyle) {\n                ctx.fillStyle = fillStyle;\n                plotLineArea(series.datapoints, series.xaxis, series.yaxis);\n            }\n\n            if (lw > 0)\n                plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function drawSeriesPoints(series) {\n            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    var x = points[i], y = points[i + 1];\n                    if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                        continue;\n\n                    ctx.beginPath();\n                    x = axisx.p2c(x);\n                    y = axisy.p2c(y) + offset;\n                    if (symbol == \"circle\")\n                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);\n                    else\n                        symbol(ctx, x, y, radius, shadow);\n                    ctx.closePath();\n\n                    if (fillStyle) {\n                        ctx.fillStyle = fillStyle;\n                        ctx.fill();\n                    }\n                    ctx.stroke();\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            var lw = series.points.lineWidth,\n                sw = series.shadowSize,\n                radius = series.points.radius,\n                symbol = series.points.symbol;\n\n            // If the user sets the line width to 0, we change it to a very \n            // small value. A line width of 0 seems to force the default of 1.\n            // Doing the conditional here allows the shadow setting to still be \n            // optional even with a lineWidth of 0.\n\n            if( lw == 0 )\n                lw = 0.0001;\n\n            if (lw > 0 && sw > 0) {\n                // draw shadow in two steps\n                var w = sw / 2;\n                ctx.lineWidth = w;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                plotPoints(series.datapoints, radius, null, w + w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n\n                ctx.strokeStyle = \"rgba(0,0,0,0.2)\";\n                plotPoints(series.datapoints, radius, null, w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            plotPoints(series.datapoints, radius,\n                       getFillStyle(series.points, series.color), 0, false,\n                       series.xaxis, series.yaxis, symbol);\n            ctx.restore();\n        }\n\n        function drawBar(x, y, b, barLeft, barRight, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {\n            var left, right, bottom, top,\n                drawLeft, drawRight, drawTop, drawBottom,\n                tmp;\n\n            // in horizontal mode, we start the bar from the left\n            // instead of from the bottom so it appears to be\n            // horizontal rather than vertical\n            if (horizontal) {\n                drawBottom = drawRight = drawTop = true;\n                drawLeft = false;\n                left = b;\n                right = x;\n                top = y + barLeft;\n                bottom = y + barRight;\n\n                // account for negative bars\n                if (right < left) {\n                    tmp = right;\n                    right = left;\n                    left = tmp;\n                    drawLeft = true;\n                    drawRight = false;\n                }\n            }\n            else {\n                drawLeft = drawRight = drawTop = true;\n                drawBottom = false;\n                left = x + barLeft;\n                right = x + barRight;\n                bottom = b;\n                top = y;\n\n                // account for negative bars\n                if (top < bottom) {\n                    tmp = top;\n                    top = bottom;\n                    bottom = tmp;\n                    drawBottom = true;\n                    drawTop = false;\n                }\n            }\n\n            // clip\n            if (right < axisx.min || left > axisx.max ||\n                top < axisy.min || bottom > axisy.max)\n                return;\n\n            if (left < axisx.min) {\n                left = axisx.min;\n                drawLeft = false;\n            }\n\n            if (right > axisx.max) {\n                right = axisx.max;\n                drawRight = false;\n            }\n\n            if (bottom < axisy.min) {\n                bottom = axisy.min;\n                drawBottom = false;\n            }\n\n            if (top > axisy.max) {\n                top = axisy.max;\n                drawTop = false;\n            }\n\n            left = axisx.p2c(left);\n            bottom = axisy.p2c(bottom);\n            right = axisx.p2c(right);\n            top = axisy.p2c(top);\n\n            // fill the bar\n            if (fillStyleCallback) {\n                c.fillStyle = fillStyleCallback(bottom, top);\n                c.fillRect(left, top, right - left, bottom - top)\n            }\n\n            // draw outline\n            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {\n                c.beginPath();\n\n                // FIXME: inline moveTo is buggy with excanvas\n                c.moveTo(left, bottom);\n                if (drawLeft)\n                    c.lineTo(left, top);\n                else\n                    c.moveTo(left, top);\n                if (drawTop)\n                    c.lineTo(right, top);\n                else\n                    c.moveTo(right, top);\n                if (drawRight)\n                    c.lineTo(right, bottom);\n                else\n                    c.moveTo(right, bottom);\n                if (drawBottom)\n                    c.lineTo(left, bottom);\n                else\n                    c.moveTo(left, bottom);\n                c.stroke();\n            }\n        }\n\n        function drawSeriesBars(series) {\n            function plotBars(datapoints, barLeft, barRight, fillStyleCallback, axisx, axisy) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    if (points[i] == null)\n                        continue;\n                    drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // FIXME: figure out a way to add shadows (for instance along the right edge)\n            ctx.lineWidth = series.bars.lineWidth;\n            ctx.strokeStyle = series.color;\n\n            var barLeft;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -series.bars.barWidth;\n                    break;\n                default:\n                    barLeft = -series.bars.barWidth / 2;\n            }\n\n            var fillStyleCallback = series.bars.fill ? function (bottom, top) { return getFillStyle(series.bars, series.color, bottom, top); } : null;\n            plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, fillStyleCallback, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function getFillStyle(filloptions, seriesColor, bottom, top) {\n            var fill = filloptions.fill;\n            if (!fill)\n                return null;\n\n            if (filloptions.fillColor)\n                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);\n\n            var c = $.color.parse(seriesColor);\n            c.a = typeof fill == \"number\" ? fill : 0.4;\n            c.normalize();\n            return c.toString();\n        }\n\n        function insertLegend() {\n\n            if (options.legend.container != null) {\n                $(options.legend.container).html(\"\");\n            } else {\n                placeholder.find(\".legend\").remove();\n            }\n\n            if (!options.legend.show) {\n                return;\n            }\n\n            var fragments = [], entries = [], rowStarted = false,\n                lf = options.legend.labelFormatter, s, label;\n\n            // Build a list of legend entries, with each having a label and a color\n\n            for (var i = 0; i < series.length; ++i) {\n                s = series[i];\n                if (s.label) {\n                    label = lf ? lf(s.label, s) : s.label;\n                    if (label) {\n                        entries.push({\n                            label: label,\n                            color: s.color\n                        });\n                    }\n                }\n            }\n\n            // Sort the legend using either the default or a custom comparator\n\n            if (options.legend.sorted) {\n                if ($.isFunction(options.legend.sorted)) {\n                    entries.sort(options.legend.sorted);\n                } else if (options.legend.sorted == \"reverse\") {\n                \tentries.reverse();\n                } else {\n                    var ascending = options.legend.sorted != \"descending\";\n                    entries.sort(function(a, b) {\n                        return a.label == b.label ? 0 : (\n                            (a.label < b.label) != ascending ? 1 : -1   // Logical XOR\n                        );\n                    });\n                }\n            }\n\n            // Generate markup for the list of entries, in their final order\n\n            for (var i = 0; i < entries.length; ++i) {\n\n                var entry = entries[i];\n\n                if (i % options.legend.noColumns == 0) {\n                    if (rowStarted)\n                        fragments.push('</tr>');\n                    fragments.push('<tr>');\n                    rowStarted = true;\n                }\n\n                fragments.push(\n                    '<td class=\"legendColorBox\"><div style=\"border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px\"><div style=\"width:4px;height:0;border:5px solid ' + entry.color + ';overflow:hidden\"></div></div></td>' +\n                    '<td class=\"legendLabel\">' + entry.label + '</td>'\n                );\n            }\n\n            if (rowStarted)\n                fragments.push('</tr>');\n\n            if (fragments.length == 0)\n                return;\n\n            var table = '<table style=\"font-size:smaller;color:' + options.grid.color + '\">' + fragments.join(\"\") + '</table>';\n            if (options.legend.container != null)\n                $(options.legend.container).html(table);\n            else {\n                var pos = \"\",\n                    p = options.legend.position,\n                    m = options.legend.margin;\n                if (m[0] == null)\n                    m = [m, m];\n                if (p.charAt(0) == \"n\")\n                    pos += 'top:' + (m[1] + plotOffset.top) + 'px;';\n                else if (p.charAt(0) == \"s\")\n                    pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';\n                if (p.charAt(1) == \"e\")\n                    pos += 'right:' + (m[0] + plotOffset.right) + 'px;';\n                else if (p.charAt(1) == \"w\")\n                    pos += 'left:' + (m[0] + plotOffset.left) + 'px;';\n                var legend = $('<div class=\"legend\">' + table.replace('style=\"', 'style=\"position:absolute;' + pos +';') + '</div>').appendTo(placeholder);\n                if (options.legend.backgroundOpacity != 0.0) {\n                    // put in the transparent background\n                    // separately to avoid blended labels and\n                    // label boxes\n                    var c = options.legend.backgroundColor;\n                    if (c == null) {\n                        c = options.grid.backgroundColor;\n                        if (c && typeof c == \"string\")\n                            c = $.color.parse(c);\n                        else\n                            c = $.color.extract(legend, 'background-color');\n                        c.a = 1;\n                        c = c.toString();\n                    }\n                    var div = legend.children();\n                    $('<div style=\"position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos +'background-color:' + c + ';\"> </div>').prependTo(legend).css('opacity', options.legend.backgroundOpacity);\n                }\n            }\n        }\n\n\n        // interactive features\n\n        var highlights = [],\n            redrawTimeout = null;\n\n        // returns the data item the mouse is over, or null if none is found\n        function findNearbyItem(mouseX, mouseY, seriesFilter) {\n            var maxDistance = options.grid.mouseActiveRadius,\n                smallestDistance = maxDistance * maxDistance + 1,\n                item = null, foundPoint = false, i, j, ps;\n\n            for (i = series.length - 1; i >= 0; --i) {\n                if (!seriesFilter(series[i]))\n                    continue;\n\n                var s = series[i],\n                    axisx = s.xaxis,\n                    axisy = s.yaxis,\n                    points = s.datapoints.points,\n                    mx = axisx.c2p(mouseX), // precompute some stuff to make the loop faster\n                    my = axisy.c2p(mouseY),\n                    maxx = maxDistance / axisx.scale,\n                    maxy = maxDistance / axisy.scale;\n\n                ps = s.datapoints.pointsize;\n                // with inverse transforms, we can't use the maxx/maxy\n                // optimization, sadly\n                if (axisx.options.inverseTransform)\n                    maxx = Number.MAX_VALUE;\n                if (axisy.options.inverseTransform)\n                    maxy = Number.MAX_VALUE;\n\n                if (s.lines.show || s.points.show) {\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1];\n                        if (x == null)\n                            continue;\n\n                        // For points and lines, the cursor must be within a\n                        // certain distance to the data point\n                        if (x - mx > maxx || x - mx < -maxx ||\n                            y - my > maxy || y - my < -maxy)\n                            continue;\n\n                        // We have to calculate distances in pixels, not in\n                        // data units, because the scales of the axes may be different\n                        var dx = Math.abs(axisx.p2c(x) - mouseX),\n                            dy = Math.abs(axisy.p2c(y) - mouseY),\n                            dist = dx * dx + dy * dy; // we save the sqrt\n\n                        // use <= to ensure last point takes precedence\n                        // (last generally means on top of)\n                        if (dist < smallestDistance) {\n                            smallestDistance = dist;\n                            item = [i, j / ps];\n                        }\n                    }\n                }\n\n                if (s.bars.show && !item) { // no other point can be nearby\n\n                    var barLeft, barRight;\n\n                    switch (s.bars.align) {\n                        case \"left\":\n                            barLeft = 0;\n                            break;\n                        case \"right\":\n                            barLeft = -s.bars.barWidth;\n                            break;\n                        default:\n                            barLeft = -s.bars.barWidth / 2;\n                    }\n\n                    barRight = barLeft + s.bars.barWidth;\n\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1], b = points[j + 2];\n                        if (x == null)\n                            continue;\n\n                        // for a bar graph, the cursor must be inside the bar\n                        if (series[i].bars.horizontal ?\n                            (mx <= Math.max(b, x) && mx >= Math.min(b, x) &&\n                             my >= y + barLeft && my <= y + barRight) :\n                            (mx >= x + barLeft && mx <= x + barRight &&\n                             my >= Math.min(b, y) && my <= Math.max(b, y)))\n                                item = [i, j / ps];\n                    }\n                }\n            }\n\n            if (item) {\n                i = item[0];\n                j = item[1];\n                ps = series[i].datapoints.pointsize;\n\n                return { datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),\n                         dataIndex: j,\n                         series: series[i],\n                         seriesIndex: i };\n            }\n\n            return null;\n        }\n\n        function onMouseMove(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return s[\"hoverable\"] != false; });\n        }\n\n        function onMouseLeave(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return false; });\n        }\n\n        function onClick(e) {\n            triggerClickHoverEvent(\"plotclick\", e,\n                                   function (s) { return s[\"clickable\"] != false; });\n        }\n\n        // trigger click or hover event (they send the same parameters\n        // so we share their code)\n        function triggerClickHoverEvent(eventname, event, seriesFilter) {\n            var offset = eventHolder.offset(),\n                canvasX = event.pageX - offset.left - plotOffset.left,\n                canvasY = event.pageY - offset.top - plotOffset.top,\n            pos = canvasToAxisCoords({ left: canvasX, top: canvasY });\n\n            pos.pageX = event.pageX;\n            pos.pageY = event.pageY;\n\n            var item = findNearbyItem(canvasX, canvasY, seriesFilter);\n\n            if (item) {\n                // fill in mouse pos for any listeners out there\n                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left, 10);\n                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top, 10);\n            }\n\n            if (options.grid.autoHighlight) {\n                // clear auto-highlights\n                for (var i = 0; i < highlights.length; ++i) {\n                    var h = highlights[i];\n                    if (h.auto == eventname &&\n                        !(item && h.series == item.series &&\n                          h.point[0] == item.datapoint[0] &&\n                          h.point[1] == item.datapoint[1]))\n                        unhighlight(h.series, h.point);\n                }\n\n                if (item)\n                    highlight(item.series, item.datapoint, eventname);\n            }\n\n            placeholder.trigger(eventname, [ pos, item ]);\n        }\n\n        function triggerRedrawOverlay() {\n            var t = options.interaction.redrawOverlayInterval;\n            if (t == -1) {      // skip event queue\n                drawOverlay();\n                return;\n            }\n\n            if (!redrawTimeout)\n                redrawTimeout = setTimeout(drawOverlay, t);\n        }\n\n        function drawOverlay() {\n            redrawTimeout = null;\n\n            // draw highlights\n            octx.save();\n            overlay.clear();\n            octx.translate(plotOffset.left, plotOffset.top);\n\n            var i, hi;\n            for (i = 0; i < highlights.length; ++i) {\n                hi = highlights[i];\n\n                if (hi.series.bars.show)\n                    drawBarHighlight(hi.series, hi.point);\n                else\n                    drawPointHighlight(hi.series, hi.point);\n            }\n            octx.restore();\n\n            executeHooks(hooks.drawOverlay, [octx]);\n        }\n\n        function highlight(s, point, auto) {\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i == -1) {\n                highlights.push({ series: s, point: point, auto: auto });\n\n                triggerRedrawOverlay();\n            }\n            else if (!auto)\n                highlights[i].auto = false;\n        }\n\n        function unhighlight(s, point) {\n            if (s == null && point == null) {\n                highlights = [];\n                triggerRedrawOverlay();\n                return;\n            }\n\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i != -1) {\n                highlights.splice(i, 1);\n\n                triggerRedrawOverlay();\n            }\n        }\n\n        function indexOfHighlight(s, p) {\n            for (var i = 0; i < highlights.length; ++i) {\n                var h = highlights[i];\n                if (h.series == s && h.point[0] == p[0]\n                    && h.point[1] == p[1])\n                    return i;\n            }\n            return -1;\n        }\n\n        function drawPointHighlight(series, point) {\n            var x = point[0], y = point[1],\n                axisx = series.xaxis, axisy = series.yaxis,\n                highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString();\n\n            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                return;\n\n            var pointRadius = series.points.radius + series.points.lineWidth / 2;\n            octx.lineWidth = pointRadius;\n            octx.strokeStyle = highlightColor;\n            var radius = 1.5 * pointRadius;\n            x = axisx.p2c(x);\n            y = axisy.p2c(y);\n\n            octx.beginPath();\n            if (series.points.symbol == \"circle\")\n                octx.arc(x, y, radius, 0, 2 * Math.PI, false);\n            else\n                series.points.symbol(octx, x, y, radius, false);\n            octx.closePath();\n            octx.stroke();\n        }\n\n        function drawBarHighlight(series, point) {\n            var highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString(),\n                fillStyle = highlightColor,\n                barLeft;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -series.bars.barWidth;\n                    break;\n                default:\n                    barLeft = -series.bars.barWidth / 2;\n            }\n\n            octx.lineWidth = series.bars.lineWidth;\n            octx.strokeStyle = highlightColor;\n\n            drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth,\n                    function () { return fillStyle; }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);\n        }\n\n        function getColorOrGradient(spec, bottom, top, defaultColor) {\n            if (typeof spec == \"string\")\n                return spec;\n            else {\n                // assume this is a gradient spec; IE currently only\n                // supports a simple vertical gradient properly, so that's\n                // what we support too\n                var gradient = ctx.createLinearGradient(0, top, 0, bottom);\n\n                for (var i = 0, l = spec.colors.length; i < l; ++i) {\n                    var c = spec.colors[i];\n                    if (typeof c != \"string\") {\n                        var co = $.color.parse(defaultColor);\n                        if (c.brightness != null)\n                            co = co.scale('rgb', c.brightness);\n                        if (c.opacity != null)\n                            co.a *= c.opacity;\n                        c = co.toString();\n                    }\n                    gradient.addColorStop(i / (l - 1), c);\n                }\n\n                return gradient;\n            }\n        }\n    }\n\n    // Add the plot function to the top level of the jQuery object\n\n    $.plot = function(placeholder, data, options) {\n        //var t0 = new Date();\n        var plot = new Plot($(placeholder), data, options, $.plot.plugins);\n        //(window.console ? console.log : alert)(\"time used (msecs): \" + ((new Date()).getTime() - t0.getTime()));\n        return plot;\n    };\n\n    $.plot.version = \"0.8.3\";\n\n    $.plot.plugins = [];\n\n    // Also add the plot function as a chainable property\n\n    $.fn.plot = function(data, options) {\n        return this.each(function() {\n            $.plot(this, data, options);\n        });\n    };\n\n    // round to nearby lower multiple of base\n    function floorInBase(n, base) {\n        return base * Math.floor(n / base);\n    }\n\n})(jQuery);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/jquery-flot/jquery.flot.js\n// module id = 158\n// module chunks = 3","/* Flot plugin for selecting regions of a plot.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe plugin supports these options:\n\nselection: {\n\tmode: null or \"x\" or \"y\" or \"xy\",\n\tcolor: color,\n\tshape: \"round\" or \"miter\" or \"bevel\",\n\tminSize: number of pixels\n}\n\nSelection support is enabled by setting the mode to one of \"x\", \"y\" or \"xy\".\nIn \"x\" mode, the user will only be able to specify the x range, similarly for\n\"y\" mode. For \"xy\", the selection becomes a rectangle where both ranges can be\nspecified. \"color\" is color of the selection (if you need to change the color\nlater on, you can get to it with plot.getOptions().selection.color). \"shape\"\nis the shape of the corners of the selection.\n\n\"minSize\" is the minimum size a selection can be in pixels. This value can\nbe customized to determine the smallest size a selection can be and still\nhave the selection rectangle be displayed. When customizing this value, the\nfact that it refers to pixels, not axis units must be taken into account.\nThus, for example, if there is a bar graph in time mode with BarWidth set to 1\nminute, setting \"minSize\" to 1 will not make the minimum selection size 1\nminute, but rather 1 pixel. Note also that setting \"minSize\" to 0 will prevent\n\"plotunselected\" events from being fired when the user clicks the mouse without\ndragging.\n\nWhen selection support is enabled, a \"plotselected\" event will be emitted on\nthe DOM element you passed into the plot function. The event handler gets a\nparameter with the ranges selected on the axes, like this:\n\n\tplaceholder.bind( \"plotselected\", function( event, ranges ) {\n\t\talert(\"You selected \" + ranges.xaxis.from + \" to \" + ranges.xaxis.to)\n\t\t// similar for yaxis - with multiple axes, the extra ones are in\n\t\t// x2axis, x3axis, ...\n\t});\n\nThe \"plotselected\" event is only fired when the user has finished making the\nselection. A \"plotselecting\" event is fired during the process with the same\nparameters as the \"plotselected\" event, in case you want to know what's\nhappening while it's happening,\n\nA \"plotunselected\" event with no arguments is emitted when the user clicks the\nmouse to remove the selection. As stated above, setting \"minSize\" to 0 will\ndestroy this behavior.\n\nThe plugin allso adds the following methods to the plot object:\n\n- setSelection( ranges, preventEvent )\n\n  Set the selection rectangle. The passed in ranges is on the same form as\n  returned in the \"plotselected\" event. If the selection mode is \"x\", you\n  should put in either an xaxis range, if the mode is \"y\" you need to put in\n  an yaxis range and both xaxis and yaxis if the selection mode is \"xy\", like\n  this:\n\n\tsetSelection({ xaxis: { from: 0, to: 10 }, yaxis: { from: 40, to: 60 } });\n\n  setSelection will trigger the \"plotselected\" event when called. If you don't\n  want that to happen, e.g. if you're inside a \"plotselected\" handler, pass\n  true as the second parameter. If you are using multiple axes, you can\n  specify the ranges on any of those, e.g. as x2axis/x3axis/... instead of\n  xaxis, the plugin picks the first one it sees.\n\n- clearSelection( preventEvent )\n\n  Clear the selection rectangle. Pass in true to avoid getting a\n  \"plotunselected\" event.\n\n- getSelection()\n\n  Returns the current selection in the same format as the \"plotselected\"\n  event. If there's currently no selection, the function returns null.\n\n*/\n\n(function ($) {\n    function init(plot) {\n        var selection = {\n                first: { x: -1, y: -1}, second: { x: -1, y: -1},\n                show: false,\n                active: false\n            };\n\n        // FIXME: The drag handling implemented here should be\n        // abstracted out, there's some similar code from a library in\n        // the navigation plugin, this should be massaged a bit to fit\n        // the Flot cases here better and reused. Doing this would\n        // make this plugin much slimmer.\n        var savedhandlers = {};\n\n        var mouseUpHandler = null;\n        \n        function onMouseMove(e) {\n            if (selection.active) {\n                updateSelection(e);\n                \n                plot.getPlaceholder().trigger(\"plotselecting\", [ getSelection() ]);\n            }\n        }\n\n        function onMouseDown(e) {\n            if (e.which != 1)  // only accept left-click\n                return;\n            \n            // cancel out any text selections\n            document.body.focus();\n\n            // prevent text selection and drag in old-school browsers\n            if (document.onselectstart !== undefined && savedhandlers.onselectstart == null) {\n                savedhandlers.onselectstart = document.onselectstart;\n                document.onselectstart = function () { return false; };\n            }\n            if (document.ondrag !== undefined && savedhandlers.ondrag == null) {\n                savedhandlers.ondrag = document.ondrag;\n                document.ondrag = function () { return false; };\n            }\n\n            setSelectionPos(selection.first, e);\n\n            selection.active = true;\n\n            // this is a bit silly, but we have to use a closure to be\n            // able to whack the same handler again\n            mouseUpHandler = function (e) { onMouseUp(e); };\n            \n            $(document).one(\"mouseup\", mouseUpHandler);\n        }\n\n        function onMouseUp(e) {\n            mouseUpHandler = null;\n            \n            // revert drag stuff for old-school browsers\n            if (document.onselectstart !== undefined)\n                document.onselectstart = savedhandlers.onselectstart;\n            if (document.ondrag !== undefined)\n                document.ondrag = savedhandlers.ondrag;\n\n            // no more dragging\n            selection.active = false;\n            updateSelection(e);\n\n            if (selectionIsSane())\n                triggerSelectedEvent();\n            else {\n                // this counts as a clear\n                plot.getPlaceholder().trigger(\"plotunselected\", [ ]);\n                plot.getPlaceholder().trigger(\"plotselecting\", [ null ]);\n            }\n\n            return false;\n        }\n\n        function getSelection() {\n            if (!selectionIsSane())\n                return null;\n            \n            if (!selection.show) return null;\n\n            var r = {}, c1 = selection.first, c2 = selection.second;\n            $.each(plot.getAxes(), function (name, axis) {\n                if (axis.used) {\n                    var p1 = axis.c2p(c1[axis.direction]), p2 = axis.c2p(c2[axis.direction]); \n                    r[name] = { from: Math.min(p1, p2), to: Math.max(p1, p2) };\n                }\n            });\n            return r;\n        }\n\n        function triggerSelectedEvent() {\n            var r = getSelection();\n\n            plot.getPlaceholder().trigger(\"plotselected\", [ r ]);\n\n            // backwards-compat stuff, to be removed in future\n            if (r.xaxis && r.yaxis)\n                plot.getPlaceholder().trigger(\"selected\", [ { x1: r.xaxis.from, y1: r.yaxis.from, x2: r.xaxis.to, y2: r.yaxis.to } ]);\n        }\n\n        function clamp(min, value, max) {\n            return value < min ? min: (value > max ? max: value);\n        }\n\n        function setSelectionPos(pos, e) {\n            var o = plot.getOptions();\n            var offset = plot.getPlaceholder().offset();\n            var plotOffset = plot.getPlotOffset();\n            pos.x = clamp(0, e.pageX - offset.left - plotOffset.left, plot.width());\n            pos.y = clamp(0, e.pageY - offset.top - plotOffset.top, plot.height());\n\n            if (o.selection.mode == \"y\")\n                pos.x = pos == selection.first ? 0 : plot.width();\n\n            if (o.selection.mode == \"x\")\n                pos.y = pos == selection.first ? 0 : plot.height();\n        }\n\n        function updateSelection(pos) {\n            if (pos.pageX == null)\n                return;\n\n            setSelectionPos(selection.second, pos);\n            if (selectionIsSane()) {\n                selection.show = true;\n                plot.triggerRedrawOverlay();\n            }\n            else\n                clearSelection(true);\n        }\n\n        function clearSelection(preventEvent) {\n            if (selection.show) {\n                selection.show = false;\n                plot.triggerRedrawOverlay();\n                if (!preventEvent)\n                    plot.getPlaceholder().trigger(\"plotunselected\", [ ]);\n            }\n        }\n\n        // function taken from markings support in Flot\n        function extractRange(ranges, coord) {\n            var axis, from, to, key, axes = plot.getAxes();\n\n            for (var k in axes) {\n                axis = axes[k];\n                if (axis.direction == coord) {\n                    key = coord + axis.n + \"axis\";\n                    if (!ranges[key] && axis.n == 1)\n                        key = coord + \"axis\"; // support x1axis as xaxis\n                    if (ranges[key]) {\n                        from = ranges[key].from;\n                        to = ranges[key].to;\n                        break;\n                    }\n                }\n            }\n\n            // backwards-compat stuff - to be removed in future\n            if (!ranges[key]) {\n                axis = coord == \"x\" ? plot.getXAxes()[0] : plot.getYAxes()[0];\n                from = ranges[coord + \"1\"];\n                to = ranges[coord + \"2\"];\n            }\n\n            // auto-reverse as an added bonus\n            if (from != null && to != null && from > to) {\n                var tmp = from;\n                from = to;\n                to = tmp;\n            }\n            \n            return { from: from, to: to, axis: axis };\n        }\n        \n        function setSelection(ranges, preventEvent) {\n            var axis, range, o = plot.getOptions();\n\n            if (o.selection.mode == \"y\") {\n                selection.first.x = 0;\n                selection.second.x = plot.width();\n            }\n            else {\n                range = extractRange(ranges, \"x\");\n\n                selection.first.x = range.axis.p2c(range.from);\n                selection.second.x = range.axis.p2c(range.to);\n            }\n\n            if (o.selection.mode == \"x\") {\n                selection.first.y = 0;\n                selection.second.y = plot.height();\n            }\n            else {\n                range = extractRange(ranges, \"y\");\n\n                selection.first.y = range.axis.p2c(range.from);\n                selection.second.y = range.axis.p2c(range.to);\n            }\n\n            selection.show = true;\n            plot.triggerRedrawOverlay();\n            if (!preventEvent && selectionIsSane())\n                triggerSelectedEvent();\n        }\n\n        function selectionIsSane() {\n            var minSize = plot.getOptions().selection.minSize;\n            return Math.abs(selection.second.x - selection.first.x) >= minSize &&\n                Math.abs(selection.second.y - selection.first.y) >= minSize;\n        }\n\n        plot.clearSelection = clearSelection;\n        plot.setSelection = setSelection;\n        plot.getSelection = getSelection;\n\n        plot.hooks.bindEvents.push(function(plot, eventHolder) {\n            var o = plot.getOptions();\n            if (o.selection.mode != null) {\n                eventHolder.mousemove(onMouseMove);\n                eventHolder.mousedown(onMouseDown);\n            }\n        });\n\n\n        plot.hooks.drawOverlay.push(function (plot, ctx) {\n            // draw selection\n            if (selection.show && selectionIsSane()) {\n                var plotOffset = plot.getPlotOffset();\n                var o = plot.getOptions();\n\n                ctx.save();\n                ctx.translate(plotOffset.left, plotOffset.top);\n\n                var c = $.color.parse(o.selection.color);\n\n                ctx.strokeStyle = c.scale('a', 0.8).toString();\n                ctx.lineWidth = 1;\n                ctx.lineJoin = o.selection.shape;\n                ctx.fillStyle = c.scale('a', 0.4).toString();\n\n                var x = Math.min(selection.first.x, selection.second.x) + 0.5,\n                    y = Math.min(selection.first.y, selection.second.y) + 0.5,\n                    w = Math.abs(selection.second.x - selection.first.x) - 1,\n                    h = Math.abs(selection.second.y - selection.first.y) - 1;\n\n                ctx.fillRect(x, y, w, h);\n                ctx.strokeRect(x, y, w, h);\n\n                ctx.restore();\n            }\n        });\n        \n        plot.hooks.shutdown.push(function (plot, eventHolder) {\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n            eventHolder.unbind(\"mousedown\", onMouseDown);\n            \n            if (mouseUpHandler)\n                $(document).unbind(\"mouseup\", mouseUpHandler);\n        });\n\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: {\n            selection: {\n                mode: null, // one of null, \"x\", \"y\" or \"xy\"\n                color: \"#e8cfac\",\n                shape: \"round\", // one of \"round\", \"miter\", or \"bevel\"\n                minSize: 5 // minimum number of pixels\n            }\n        },\n        name: 'selection',\n        version: '1.1'\n    });\n})(jQuery);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/jquery-flot/jquery.flot.selection.js\n// module id = 159\n// module chunks = 3","/* Pretty handling of time axes.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nSet axis.mode to \"time\" to enable. See the section \"Time series data\" in\nAPI.txt for details.\n\n*/\n\n(function($) {\n\n\tvar options = {\n\t\txaxis: {\n\t\t\ttimezone: null,\t\t// \"browser\" for local to the client or timezone for timezone-js\n\t\t\ttimeformat: null,\t// format string to use\n\t\t\ttwelveHourClock: false,\t// 12 or 24 time in time mode\n\t\t\tmonthNames: null\t// list of names of months\n\t\t}\n\t};\n\n\t// round to nearby lower multiple of base\n\n\tfunction floorInBase(n, base) {\n\t\treturn base * Math.floor(n / base);\n\t}\n\n\t// Returns a string with the date d formatted according to fmt.\n\t// A subset of the Open Group's strftime format is supported.\n\n\tfunction formatDate(d, fmt, monthNames, dayNames) {\n\n\t\tif (typeof d.strftime == \"function\") {\n\t\t\treturn d.strftime(fmt);\n\t\t}\n\n\t\tvar leftPad = function(n, pad) {\n\t\t\tn = \"\" + n;\n\t\t\tpad = \"\" + (pad == null ? \"0\" : pad);\n\t\t\treturn n.length == 1 ? pad + n : n;\n\t\t};\n\n\t\tvar r = [];\n\t\tvar escape = false;\n\t\tvar hours = d.getHours();\n\t\tvar isAM = hours < 12;\n\n\t\tif (monthNames == null) {\n\t\t\tmonthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\t}\n\n\t\tif (dayNames == null) {\n\t\t\tdayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\t\t}\n\n\t\tvar hours12;\n\n\t\tif (hours > 12) {\n\t\t\thours12 = hours - 12;\n\t\t} else if (hours == 0) {\n\t\t\thours12 = 12;\n\t\t} else {\n\t\t\thours12 = hours;\n\t\t}\n\n\t\tfor (var i = 0; i < fmt.length; ++i) {\n\n\t\t\tvar c = fmt.charAt(i);\n\n\t\t\tif (escape) {\n\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'a': c = \"\" + dayNames[d.getDay()]; break;\n\t\t\t\t\tcase 'b': c = \"\" + monthNames[d.getMonth()]; break;\n\t\t\t\t\tcase 'd': c = leftPad(d.getDate()); break;\n\t\t\t\t\tcase 'e': c = leftPad(d.getDate(), \" \"); break;\n\t\t\t\t\tcase 'h':\t// For back-compat with 0.7; remove in 1.0\n\t\t\t\t\tcase 'H': c = leftPad(hours); break;\n\t\t\t\t\tcase 'I': c = leftPad(hours12); break;\n\t\t\t\t\tcase 'l': c = leftPad(hours12, \" \"); break;\n\t\t\t\t\tcase 'm': c = leftPad(d.getMonth() + 1); break;\n\t\t\t\t\tcase 'M': c = leftPad(d.getMinutes()); break;\n\t\t\t\t\t// quarters not in Open Group's strftime specification\n\t\t\t\t\tcase 'q':\n\t\t\t\t\t\tc = \"\" + (Math.floor(d.getMonth() / 3) + 1); break;\n\t\t\t\t\tcase 'S': c = leftPad(d.getSeconds()); break;\n\t\t\t\t\tcase 'y': c = leftPad(d.getFullYear() % 100); break;\n\t\t\t\t\tcase 'Y': c = \"\" + d.getFullYear(); break;\n\t\t\t\t\tcase 'p': c = (isAM) ? (\"\" + \"am\") : (\"\" + \"pm\"); break;\n\t\t\t\t\tcase 'P': c = (isAM) ? (\"\" + \"AM\") : (\"\" + \"PM\"); break;\n\t\t\t\t\tcase 'w': c = \"\" + d.getDay(); break;\n\t\t\t\t}\n\t\t\t\tr.push(c);\n\t\t\t\tescape = false;\n\t\t\t} else {\n\t\t\t\tif (c == \"%\") {\n\t\t\t\t\tescape = true;\n\t\t\t\t} else {\n\t\t\t\t\tr.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn r.join(\"\");\n\t}\n\n\t// To have a consistent view of time-based data independent of which time\n\t// zone the client happens to be in we need a date-like object independent\n\t// of time zones.  This is done through a wrapper that only calls the UTC\n\t// versions of the accessor methods.\n\n\tfunction makeUtcWrapper(d) {\n\n\t\tfunction addProxyMethod(sourceObj, sourceMethod, targetObj, targetMethod) {\n\t\t\tsourceObj[sourceMethod] = function() {\n\t\t\t\treturn targetObj[targetMethod].apply(targetObj, arguments);\n\t\t\t};\n\t\t};\n\n\t\tvar utc = {\n\t\t\tdate: d\n\t\t};\n\n\t\t// support strftime, if found\n\n\t\tif (d.strftime != undefined) {\n\t\t\taddProxyMethod(utc, \"strftime\", d, \"strftime\");\n\t\t}\n\n\t\taddProxyMethod(utc, \"getTime\", d, \"getTime\");\n\t\taddProxyMethod(utc, \"setTime\", d, \"setTime\");\n\n\t\tvar props = [\"Date\", \"Day\", \"FullYear\", \"Hours\", \"Milliseconds\", \"Minutes\", \"Month\", \"Seconds\"];\n\n\t\tfor (var p = 0; p < props.length; p++) {\n\t\t\taddProxyMethod(utc, \"get\" + props[p], d, \"getUTC\" + props[p]);\n\t\t\taddProxyMethod(utc, \"set\" + props[p], d, \"setUTC\" + props[p]);\n\t\t}\n\n\t\treturn utc;\n\t};\n\n\t// select time zone strategy.  This returns a date-like object tied to the\n\t// desired timezone\n\n\tfunction dateGenerator(ts, opts) {\n\t\tif (opts.timezone == \"browser\") {\n\t\t\treturn new Date(ts);\n\t\t} else if (!opts.timezone || opts.timezone == \"utc\") {\n\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t} else if (typeof timezoneJS != \"undefined\" && typeof timezoneJS.Date != \"undefined\") {\n\t\t\tvar d = new timezoneJS.Date();\n\t\t\t// timezone-js is fickle, so be sure to set the time zone before\n\t\t\t// setting the time.\n\t\t\td.setTimezone(opts.timezone);\n\t\t\td.setTime(ts);\n\t\t\treturn d;\n\t\t} else {\n\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t}\n\t}\n\t\n\t// map of app. size of time units in milliseconds\n\n\tvar timeUnitSize = {\n\t\t\"second\": 1000,\n\t\t\"minute\": 60 * 1000,\n\t\t\"hour\": 60 * 60 * 1000,\n\t\t\"day\": 24 * 60 * 60 * 1000,\n\t\t\"month\": 30 * 24 * 60 * 60 * 1000,\n\t\t\"quarter\": 3 * 30 * 24 * 60 * 60 * 1000,\n\t\t\"year\": 365.2425 * 24 * 60 * 60 * 1000\n\t};\n\n\t// the allowed tick sizes, after 1 year we use\n\t// an integer algorithm\n\n\tvar baseSpec = [\n\t\t[1, \"second\"], [2, \"second\"], [5, \"second\"], [10, \"second\"],\n\t\t[30, \"second\"], \n\t\t[1, \"minute\"], [2, \"minute\"], [5, \"minute\"], [10, \"minute\"],\n\t\t[30, \"minute\"], \n\t\t[1, \"hour\"], [2, \"hour\"], [4, \"hour\"],\n\t\t[8, \"hour\"], [12, \"hour\"],\n\t\t[1, \"day\"], [2, \"day\"], [3, \"day\"],\n\t\t[0.25, \"month\"], [0.5, \"month\"], [1, \"month\"],\n\t\t[2, \"month\"]\n\t];\n\n\t// we don't know which variant(s) we'll need yet, but generating both is\n\t// cheap\n\n\tvar specMonths = baseSpec.concat([[3, \"month\"], [6, \"month\"],\n\t\t[1, \"year\"]]);\n\tvar specQuarters = baseSpec.concat([[1, \"quarter\"], [2, \"quarter\"],\n\t\t[1, \"year\"]]);\n\n\tfunction init(plot) {\n\t\tplot.hooks.processOptions.push(function (plot, options) {\n\t\t\t$.each(plot.getAxes(), function(axisName, axis) {\n\n\t\t\t\tvar opts = axis.options;\n\n\t\t\t\tif (opts.mode == \"time\") {\n\t\t\t\t\taxis.tickGenerator = function(axis) {\n\n\t\t\t\t\t\tvar ticks = [];\n\t\t\t\t\t\tvar d = dateGenerator(axis.min, opts);\n\t\t\t\t\t\tvar minSize = 0;\n\n\t\t\t\t\t\t// make quarter use a possibility if quarters are\n\t\t\t\t\t\t// mentioned in either of these options\n\n\t\t\t\t\t\tvar spec = (opts.tickSize && opts.tickSize[1] ===\n\t\t\t\t\t\t\t\"quarter\") ||\n\t\t\t\t\t\t\t(opts.minTickSize && opts.minTickSize[1] ===\n\t\t\t\t\t\t\t\"quarter\") ? specQuarters : specMonths;\n\n\t\t\t\t\t\tif (opts.minTickSize != null) {\n\t\t\t\t\t\t\tif (typeof opts.tickSize == \"number\") {\n\t\t\t\t\t\t\t\tminSize = opts.tickSize;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tminSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (var i = 0; i < spec.length - 1; ++i) {\n\t\t\t\t\t\t\tif (axis.delta < (spec[i][0] * timeUnitSize[spec[i][1]]\n\t\t\t\t\t\t\t\t\t\t\t  + spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2\n\t\t\t\t\t\t\t\t&& spec[i][0] * timeUnitSize[spec[i][1]] >= minSize) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar size = spec[i][0];\n\t\t\t\t\t\tvar unit = spec[i][1];\n\n\t\t\t\t\t\t// special-case the possibility of several years\n\n\t\t\t\t\t\tif (unit == \"year\") {\n\n\t\t\t\t\t\t\t// if given a minTickSize in years, just use it,\n\t\t\t\t\t\t\t// ensuring that it's an integer\n\n\t\t\t\t\t\t\tif (opts.minTickSize != null && opts.minTickSize[1] == \"year\") {\n\t\t\t\t\t\t\t\tsize = Math.floor(opts.minTickSize[0]);\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tvar magn = Math.pow(10, Math.floor(Math.log(axis.delta / timeUnitSize.year) / Math.LN10));\n\t\t\t\t\t\t\t\tvar norm = (axis.delta / timeUnitSize.year) / magn;\n\n\t\t\t\t\t\t\t\tif (norm < 1.5) {\n\t\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t\t} else if (norm < 3) {\n\t\t\t\t\t\t\t\t\tsize = 2;\n\t\t\t\t\t\t\t\t} else if (norm < 7.5) {\n\t\t\t\t\t\t\t\t\tsize = 5;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsize = 10;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tsize *= magn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// minimum size for years is 1\n\n\t\t\t\t\t\t\tif (size < 1) {\n\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taxis.tickSize = opts.tickSize || [size, unit];\n\t\t\t\t\t\tvar tickSize = axis.tickSize[0];\n\t\t\t\t\t\tunit = axis.tickSize[1];\n\n\t\t\t\t\t\tvar step = tickSize * timeUnitSize[unit];\n\n\t\t\t\t\t\tif (unit == \"second\") {\n\t\t\t\t\t\t\td.setSeconds(floorInBase(d.getSeconds(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"minute\") {\n\t\t\t\t\t\t\td.setMinutes(floorInBase(d.getMinutes(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"hour\") {\n\t\t\t\t\t\t\td.setHours(floorInBase(d.getHours(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"month\") {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"quarter\") {\n\t\t\t\t\t\t\td.setMonth(3 * floorInBase(d.getMonth() / 3,\n\t\t\t\t\t\t\t\ttickSize));\n\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\td.setFullYear(floorInBase(d.getFullYear(), tickSize));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// reset smaller components\n\n\t\t\t\t\t\td.setMilliseconds(0);\n\n\t\t\t\t\t\tif (step >= timeUnitSize.minute) {\n\t\t\t\t\t\t\td.setSeconds(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.hour) {\n\t\t\t\t\t\t\td.setMinutes(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.day) {\n\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.day * 4) {\n\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.month * 2) {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 3));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.quarter * 2) {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 6));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.year) {\n\t\t\t\t\t\t\td.setMonth(0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar carry = 0;\n\t\t\t\t\t\tvar v = Number.NaN;\n\t\t\t\t\t\tvar prev;\n\n\t\t\t\t\t\tdo {\n\n\t\t\t\t\t\t\tprev = v;\n\t\t\t\t\t\t\tv = d.getTime();\n\t\t\t\t\t\t\tticks.push(v);\n\n\t\t\t\t\t\t\tif (unit == \"month\" || unit == \"quarter\") {\n\t\t\t\t\t\t\t\tif (tickSize < 1) {\n\n\t\t\t\t\t\t\t\t\t// a bit complicated - we'll divide the\n\t\t\t\t\t\t\t\t\t// month/quarter up but we need to take\n\t\t\t\t\t\t\t\t\t// care of fractions so we don't end up in\n\t\t\t\t\t\t\t\t\t// the middle of a day\n\n\t\t\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t\t\t\tvar start = d.getTime();\n\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\t(unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t\tvar end = d.getTime();\n\t\t\t\t\t\t\t\t\td.setTime(v + carry * timeUnitSize.hour + (end - start) * tickSize);\n\t\t\t\t\t\t\t\t\tcarry = d.getHours();\n\t\t\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\ttickSize * (unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\t\td.setFullYear(d.getFullYear() + tickSize);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\td.setTime(v + step);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (v < axis.max && v != prev);\n\n\t\t\t\t\t\treturn ticks;\n\t\t\t\t\t};\n\n\t\t\t\t\taxis.tickFormatter = function (v, axis) {\n\n\t\t\t\t\t\tvar d = dateGenerator(v, axis.options);\n\n\t\t\t\t\t\t// first check global format\n\n\t\t\t\t\t\tif (opts.timeformat != null) {\n\t\t\t\t\t\t\treturn formatDate(d, opts.timeformat, opts.monthNames, opts.dayNames);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// possibly use quarters if quarters are mentioned in\n\t\t\t\t\t\t// any of these places\n\n\t\t\t\t\t\tvar useQuarters = (axis.options.tickSize &&\n\t\t\t\t\t\t\t\taxis.options.tickSize[1] == \"quarter\") ||\n\t\t\t\t\t\t\t(axis.options.minTickSize &&\n\t\t\t\t\t\t\t\taxis.options.minTickSize[1] == \"quarter\");\n\n\t\t\t\t\t\tvar t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];\n\t\t\t\t\t\tvar span = axis.max - axis.min;\n\t\t\t\t\t\tvar suffix = (opts.twelveHourClock) ? \" %p\" : \"\";\n\t\t\t\t\t\tvar hourCode = (opts.twelveHourClock) ? \"%I\" : \"%H\";\n\t\t\t\t\t\tvar fmt;\n\n\t\t\t\t\t\tif (t < timeUnitSize.minute) {\n\t\t\t\t\t\t\tfmt = hourCode + \":%M:%S\" + suffix;\n\t\t\t\t\t\t} else if (t < timeUnitSize.day) {\n\t\t\t\t\t\t\tif (span < 2 * timeUnitSize.day) {\n\t\t\t\t\t\t\t\tfmt = hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"%b %d \" + hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (t < timeUnitSize.month) {\n\t\t\t\t\t\t\tfmt = \"%b %d\";\n\t\t\t\t\t\t} else if ((useQuarters && t < timeUnitSize.quarter) ||\n\t\t\t\t\t\t\t(!useQuarters && t < timeUnitSize.year)) {\n\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\tfmt = \"%b\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"%b %Y\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (useQuarters && t < timeUnitSize.year) {\n\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\tfmt = \"Q%q\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"Q%q %Y\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfmt = \"%Y\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar rt = formatDate(d, fmt, opts.monthNames, opts.dayNames);\n\n\t\t\t\t\t\treturn rt;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t$.plot.plugins.push({\n\t\tinit: init,\n\t\toptions: options,\n\t\tname: 'time',\n\t\tversion: '1.0'\n\t});\n\n\t// Time-axis support used to be in Flot core, which exposed the\n\t// formatDate function on the plot object.  Various plugins depend\n\t// on the function, so we need to re-expose it here.\n\n\t$.plot.formatDate = formatDate;\n\t$.plot.dateGenerator = dateGenerator;\n\n})(jQuery);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/jquery-flot/jquery.flot.time.js\n// module id = 160\n// module chunks = 3","'use strict';\n\n(function() {\n    \"use strict\";\n\n    var cockpit = require(\"cockpit\");\n\n    /* SERVICE MANAGEMENT API\n     *\n     * The \"service\" module lets you monitor and manage a\n     * system service on localhost in a simple way.\n     *\n     * It mainly exists because talking to the systemd D-Bus API is\n     * not trivial enough to do it directly.\n     *\n     * - proxy = service.proxy(name)\n     *\n     * Create a proxy that represents the service named NAME.\n     *\n     * The proxy has properties and methods (described below) that\n     * allow you to monitor the state of the service, and perform\n     * simple actions on it.\n     *\n     * Initially, any of the properties can be \"null\" until their\n     * actual values have been retrieved in the background.\n     *\n     * - $(proxy).on('changed', function (event) { ... })\n     *\n     * The 'changed' event is emitted whenever one of the properties\n     * of the proxy changes.\n     *\n     * - proxy.exists\n     *\n     * A boolean that tells whether the service is known or not.  A\n     * proxy with 'exists == false' will have 'state == undefined' and\n     * 'enabled == undefined'.\n     *\n     * - proxy.state\n     *\n     * Either 'undefined' when the state can't be retrieved, or a\n     * string that has one of the values \"starting\", \"running\",\n     * \"stopping\", \"stopped\", or \"failed\".\n     *\n     * - proxy.enabled\n     *\n     * Either 'undefined' when the value can't be retrieved, or a\n     * boolean that tells whether the service is started 'enabled'.\n     * What it means exactly for a service to be enabled depends on\n     * the service, but a enabled service is usually started on boot,\n     * no matter wether other services need it or not.  A disabled\n     * service is usually only started when it is needed by some other\n     * service.\n     *\n     * - proxy.unit\n     * - proxy.service\n     *\n     * The raw org.freedesktop.systemd1.Unit and Service D-Bus\n     * interface proxies for the service.\n     *\n     * - promise = proxy.start()\n     *\n     * Start the service.  The return value is a standard jQuery\n     * promise as returned from DBusClient.call.\n     *\n     * - promise =  proxy.restart()\n     *\n     * Restart the service.\n     *\n     * - promise = proxy.tryRestart()\n     * \n     * Try to restart the service if it's running or starting\n     *\n     * - promise = proxy.stop()\n     *\n     * Stop the service.\n     *\n     * - promise = proxy.enable()\n     *\n     * Enable the service.\n     *\n     * - promise = proxy.disable()\n     *\n     * Disable the service.\n     */\n\n    var systemd_client;\n    var systemd_manager;\n\n    function wait_valid(proxy, callback) {\n        proxy.wait(function() {\n            if (proxy.valid)\n                callback();\n        });\n    }\n\n    function with_systemd_manager(done) {\n        if (!systemd_manager) {\n            systemd_client = cockpit.dbus(\"org.freedesktop.systemd1\", { superuser: \"try\" });\n            systemd_manager = systemd_client.proxy(\"org.freedesktop.systemd1.Manager\",\n                                                   \"/org/freedesktop/systemd1\");\n            wait_valid(systemd_manager, function() {\n                systemd_manager.Subscribe().\n                    fail(function (error) {\n                        if (error.name != \"org.freedesktop.systemd1.AlreadySubscribed\" &&\n                            error.name != \"org.freedesktop.DBus.Error.FileExists\")\n                            console.warn(\"Subscribing to systemd signals failed\", error);\n                    });\n            });\n        }\n        wait_valid(systemd_manager, done);\n    }\n\n    function proxy(name) {\n        var self = {\n            exists: null,\n            state: null,\n            enabled: null,\n\n            wait: wait,\n\n            start: start,\n            stop: stop,\n            restart: restart,\n            tryRestart: tryRestart,\n\n            enable: enable,\n            disable: disable\n        };\n\n        cockpit.event_target(self);\n\n        var unit, service;\n        var wait_callbacks = cockpit.defer();\n\n        if (name.indexOf(\".\") == -1)\n            name = name + \".service\";\n\n        function update_from_unit() {\n            self.exists = (unit.LoadState != \"not-found\" || unit.ActiveState != \"inactive\");\n\n            if (unit.ActiveState == \"activating\")\n                self.state = \"starting\";\n            else if (unit.ActiveState == \"deactivating\")\n                self.state = \"stopping\";\n            else if (unit.ActiveState == \"active\" || unit.ActiveState == \"reloading\")\n                self.state = \"running\";\n            else if (unit.ActiveState == \"failed\")\n                self.state = \"failed\";\n            else if (unit.ActiveState == \"inactive\" && self.exists)\n                self.state = \"stopped\";\n            else\n                self.state = undefined;\n\n            if (unit.UnitFileState == \"enabled\" || unit.UnitFileState == \"linked\")\n                self.enabled = true;\n            else if (unit.UnitFileState == \"disabled\" || unit.UnitFileState == \"masked\")\n                self.enabled = false;\n            else\n                self.enabled = undefined;\n\n            self.unit = unit;\n\n            self.dispatchEvent(\"changed\");\n            wait_callbacks.resolve();\n        }\n\n        function update_from_service() {\n            self.service = service;\n            self.dispatchEvent(\"changed\");\n        }\n\n        with_systemd_manager(function () {\n            systemd_manager.LoadUnit(name).\n                done(function (path) {\n                    unit = systemd_client.proxy('org.freedesktop.systemd1.Unit', path);\n                    unit.addEventListener('changed', update_from_unit);\n                    wait_valid(unit, update_from_unit);\n\n                    service = systemd_client.proxy('org.freedesktop.systemd1.Service', path);\n                    service.addEventListener('changed', update_from_service);\n                    wait_valid(service, update_from_service);\n                }).\n                fail(function (error) {\n                    self.exists = false;\n                    self.dispatchEvent('changed');\n                });\n        });\n\n        function refresh() {\n            if (!unit || !service)\n                return;\n\n            function refresh_interface(path, iface) {\n                systemd_client.call(path,\n                                    \"org.freedesktop.DBus.Properties\", \"GetAll\", [ iface ]).\n                    fail(function (error) {\n                        console.log(error);\n                    }).\n                    done(function (result) {\n                        var props = { };\n                        for (var p in result[0])\n                            props[p] = result[0][p].v;\n                        var ifaces = { };\n                        ifaces[iface] = props;\n                        var data = { };\n                        data[unit.path] = ifaces;\n                        systemd_client.notify(data);\n                    });\n            }\n\n            refresh_interface(unit.path, \"org.freedesktop.systemd1.Unit\");\n            refresh_interface(service.path, \"org.freedesktop.systemd1.Service\");\n        }\n\n        function on_job_new_removed_refresh(event, number, path, unit_id, result) {\n            if (unit_id == name)\n                refresh();\n        }\n\n        /* HACK - https://bugs.freedesktop.org/show_bug.cgi?id=69575\n         *\n         * We need to explicitly get new property values when getting\n         * a UnitNew signal since UnitNew doesn't carry them.\n         * However, reacting to UnitNew with GetAll could lead to an\n         * infinite loop since systemd emits a UnitNew in reaction to\n         * GetAll for units that it doesn't want to keep loaded, such\n         * as units without unit files.\n         *\n         * So we ignore UnitNew and instead assume that the unit state\n         * only changes in interesting ways when there is a job for it\n         * or when the daemon is reloaded (or when we get a property\n         * change notification, of course).\n         */\n\n        if (false) {\n            // This is what we want to do.\n\n            systemd_manager.addEventListener(\"UnitNew\", function (event, unit_id, path) {\n                if (unit_id == name)\n                    refresh();\n            });\n        } else {\n            // This is what we have to do.\n\n            systemd_manager.addEventListener(\"Reloading\", function (event, reloading) {\n                if (!reloading)\n                    refresh();\n            });\n\n            systemd_manager.addEventListener(\"JobNew\", on_job_new_removed_refresh);\n            systemd_manager.addEventListener(\"JobRemoved\", on_job_new_removed_refresh);\n        }\n\n        function wait(callback) {\n            wait_callbacks.promise.then(callback);\n        }\n\n        /* Actions\n         *\n         * We don't call methods on the D-Bus proxies here since they\n         * might not be ready when these functions are called.\n         */\n\n        var pending_jobs = { };\n\n        systemd_manager.addEventListener(\"JobRemoved\", function (event, number, path, unit_id, result) {\n            if (pending_jobs[path]) {\n                if (result == \"done\")\n                    pending_jobs[path].resolve();\n                else\n                    pending_jobs[path].reject(result);\n                delete pending_jobs[path];\n            }\n        });\n\n        function call_manager(method, args) {\n            return systemd_client.call(\"/org/freedesktop/systemd1\",\n                                       \"org.freedesktop.systemd1.Manager\",\n                                       method, args);\n        }\n\n        function call_manager_with_job(method, args) {\n            var dfd = cockpit.defer();\n            call_manager(method, args).\n                done(function (results) {\n                    var path = results[0];\n                    pending_jobs[path] = dfd;\n                }).\n                fail(function (error) {\n                    dfd.reject(error);\n                });\n            return dfd.promise();\n        }\n\n        function call_manager_with_reload(method, args) {\n            return call_manager(method, args).then(function () {\n                var dfd = cockpit.defer();\n                call_manager(\"Reload\", [ ]).\n                    done(function () { dfd.resolve(); }).\n                    fail(function (error) {\n                        // HACK: https://bugzilla.redhat.com/show_bug.cgi?id=1560549\n                        // some systemd versions disconnect too fast from the bus\n                        if (error.name === \"org.freedesktop.DBus.Error.NoReply\") {\n                            refresh();\n                            dfd.resolve();\n                        } else {\n                            dfd.reject(error);\n                        }\n                    });\n                return dfd.promise();\n            });\n        }\n\n        function start() {\n            return call_manager_with_job(\"StartUnit\", [ name, \"replace\" ]);\n        }\n\n        function stop() {\n            return call_manager_with_job(\"StopUnit\", [ name, \"replace\" ]);\n        }\n\n        function restart() {\n            return call_manager_with_job(\"RestartUnit\", [ name, \"replace\" ]);\n        }\n\n        function tryRestart() {\n            return call_manager_with_job(\"TryRestartUnit\", [ name, \"replace\" ]);\n        }\n\n        function enable() {\n            return call_manager_with_reload(\"EnableUnitFiles\", [ [ name ], false, false ]);\n        }\n\n        function disable() {\n            return call_manager_with_reload(\"DisableUnitFiles\", [ [ name ], false ]);\n        }\n\n        return self;\n    }\n\n    module.exports = {\n        proxy: proxy\n    };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/service.js\n// module id = 161\n// module chunks = 3","/* =============================================================\n * bootstrap-combobox.js v1.1.7\n * =============================================================\n * Copyright 2012 Daniel Farrell\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n * ============================================================ */\n\n!function( $ ) {\n\n \"use strict\";\n\n /* COMBOBOX PUBLIC CLASS DEFINITION\n  * ================================ */\n\n  var Combobox = function ( element, options ) {\n    this.options = $.extend({}, $.fn.combobox.defaults, options);\n    this.template = this.options.template || this.template\n    this.$source = $(element);\n    this.$container = this.setup();\n    this.$element = this.$container.find('input[type=text]');\n    this.$target = this.$container.find('input[type=hidden]');\n    this.$button = this.$container.find('.dropdown-toggle');\n    this.$menu = $(this.options.menu).appendTo('body');\n    this.matcher = this.options.matcher || this.matcher;\n    this.sorter = this.options.sorter || this.sorter;\n    this.highlighter = this.options.highlighter || this.highlighter;\n    this.shown = false;\n    this.selected = false;\n    this.refresh();\n    this.transferAttributes();\n    this.listen();\n  };\n\n  Combobox.prototype = {\n\n    constructor: Combobox\n\n  , setup: function () {\n      var combobox = $(this.template());\n      this.$source.before(combobox);\n      this.$source.hide();\n      return combobox;\n    }\n\n  , disable: function() {\n      this.$element.prop('disabled', true);\n      this.$button.attr('disabled', true);\n      this.disabled = true;\n      this.$container.addClass('combobox-disabled');\n    }\n\n  , enable: function() {\n      this.$element.prop('disabled', false);\n      this.$button.attr('disabled', false);\n      this.disabled = false;\n      this.$container.removeClass('combobox-disabled');\n    }\n  , parse: function () {\n      var that = this\n        , map = {}\n        , source = []\n        , selected = false\n        , selectedValue = '';\n      this.$source.find('option').each(function() {\n        var option = $(this);\n        if (option.val() === '') {\n          that.options.placeholder = option.text();\n          return;\n        }\n        map[option.text()] = option.val();\n        source.push(option.text());\n        if (option.prop('selected')) {\n          selected = option.text();\n          selectedValue = option.val();\n        }\n      })\n      this.map = map;\n      if (selected) {\n        this.$element.val(selected);\n        this.$target.val(selectedValue);\n        this.$container.addClass('combobox-selected');\n        this.selected = true;\n      }\n      return source;\n    }\n\n  , transferAttributes: function() {\n    this.options.placeholder = this.$source.attr('data-placeholder') || this.options.placeholder\n    if(this.options.appendId !== \"undefined\") {\n    \tthis.$element.attr('id', this.$source.attr('id') + this.options.appendId);\n    }\n    this.$element.attr('placeholder', this.options.placeholder)\n    this.$target.prop('name', this.$source.prop('name'))\n    this.$target.val(this.$source.val())\n    this.$source.removeAttr('name')  // Remove from source otherwise form will pass parameter twice.\n    this.$element.attr('required', this.$source.attr('required'))\n    this.$element.attr('rel', this.$source.attr('rel'))\n    this.$element.attr('title', this.$source.attr('title'))\n    this.$element.attr('class', this.$source.attr('class'))\n    this.$element.attr('tabindex', this.$source.attr('tabindex'))\n    this.$source.removeAttr('tabindex')\n    if (this.$source.attr('disabled')!==undefined)\n      this.disable();\n  }\n\n  , select: function () {\n      var val = this.$menu.find('.active').attr('data-value');\n      this.$element.val(this.updater(val)).trigger('change');\n      this.$target.val(this.map[val]).trigger('change');\n      this.$source.val(this.map[val]).trigger('change');\n      this.$container.addClass('combobox-selected');\n      this.selected = true;\n      return this.hide();\n    }\n\n  , updater: function (item) {\n      return item;\n    }\n\n  , show: function () {\n      var pos = $.extend({}, this.$element.position(), {\n        height: this.$element[0].offsetHeight\n      });\n\n      this.$menu\n        .insertAfter(this.$element)\n        .css({\n          top: pos.top + pos.height\n        , left: pos.left\n        })\n        .show();\n\n      $('.dropdown-menu').on('mousedown', $.proxy(this.scrollSafety, this));\n\n      this.shown = true;\n      return this;\n    }\n\n  , hide: function () {\n      this.$menu.hide();\n      $('.dropdown-menu').off('mousedown', $.proxy(this.scrollSafety, this));\n      this.$element.on('blur', $.proxy(this.blur, this));\n      this.shown = false;\n      return this;\n    }\n\n  , lookup: function (event) {\n      this.query = this.$element.val();\n      return this.process(this.source);\n    }\n\n  , process: function (items) {\n      var that = this;\n\n      items = $.grep(items, function (item) {\n        return that.matcher(item);\n      })\n\n      items = this.sorter(items);\n\n      if (!items.length) {\n        return this.shown ? this.hide() : this;\n      }\n\n      return this.render(items.slice(0, this.options.items)).show();\n    }\n\n  , template: function() {\n      if (this.options.bsVersion == '2') {\n        return '<div class=\"combobox-container\"><input type=\"hidden\" /> <div class=\"input-append\"> <input type=\"text\" autocomplete=\"false\" /> <span class=\"add-on dropdown-toggle\" data-dropdown=\"dropdown\"> <span class=\"caret\"/> <i class=\"icon-remove\"/> </span> </div> </div>'\n      } else {\n        return '<div class=\"combobox-container\"> <input type=\"hidden\" /> <div class=\"input-group\"> <input type=\"text\" autocomplete=\"false\" /> <span class=\"input-group-addon dropdown-toggle\" data-dropdown=\"dropdown\"> <span class=\"caret\" /> <span class=\"glyphicon glyphicon-remove\" /> </span> </div> </div>'\n      }\n    }\n\n  , matcher: function (item) {\n      return ~item.toLowerCase().indexOf(this.query.toLowerCase());\n    }\n\n  , sorter: function (items) {\n      var beginswith = []\n        , caseSensitive = []\n        , caseInsensitive = []\n        , item;\n\n      while (item = items.shift()) {\n        if (!item.toLowerCase().indexOf(this.query.toLowerCase())) {beginswith.push(item);}\n        else if (~item.indexOf(this.query)) {caseSensitive.push(item);}\n        else {caseInsensitive.push(item);}\n      }\n\n      return beginswith.concat(caseSensitive, caseInsensitive);\n    }\n\n  , highlighter: function (item) {\n      var query = this.query.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, '\\\\$&');\n      return item.replace(new RegExp('(' + query + ')', 'ig'), function ($1, match) {\n        return '<strong>' + match + '</strong>';\n      })\n    }\n\n  , render: function (items) {\n      var that = this;\n\n      items = $(items).map(function (i, item) {\n        i = $(that.options.item).attr('data-value', item);\n        i.find('a').html(that.highlighter(item));\n        return i[0];\n      })\n\n      items.first().addClass('active');\n      this.$menu.html(items);\n      return this;\n    }\n\n  , next: function (event) {\n      var active = this.$menu.find('.active').removeClass('active')\n        , next = active.next();\n\n      if (!next.length) {\n        next = $(this.$menu.find('li')[0]);\n      }\n\n      next.addClass('active');\n    }\n\n  , prev: function (event) {\n      var active = this.$menu.find('.active').removeClass('active')\n        , prev = active.prev();\n\n      if (!prev.length) {\n        prev = this.$menu.find('li').last();\n      }\n\n      prev.addClass('active');\n    }\n\n  , toggle: function () {\n    if (!this.disabled) {\n      if (this.$container.hasClass('combobox-selected')) {\n        this.clearTarget();\n        this.triggerChange();\n        this.clearElement();\n      } else {\n        if (this.shown) {\n          this.hide();\n        } else {\n          this.clearElement();\n          this.lookup();\n        }\n      }\n    }\n  }\n\n  , scrollSafety: function(e) {\n      if (e.target.tagName == 'UL') {\n          this.$element.off('blur');\n      }\n  }\n  , clearElement: function () {\n    this.$element.val('').focus();\n  }\n\n  , clearTarget: function () {\n    this.$source.val('');\n    this.$target.val('');\n    this.$container.removeClass('combobox-selected');\n    this.selected = false;\n  }\n\n  , triggerChange: function () {\n    this.$source.trigger('change');\n  }\n\n  , refresh: function () {\n    this.source = this.parse();\n    this.options.items = this.source.length;\n  }\n\n  , listen: function () {\n      this.$element\n        .on('focus',    $.proxy(this.focus, this))\n        .on('blur',     $.proxy(this.blur, this))\n        .on('keypress', $.proxy(this.keypress, this))\n        .on('keyup',    $.proxy(this.keyup, this));\n\n      if (this.eventSupported('keydown')) {\n        this.$element.on('keydown', $.proxy(this.keydown, this));\n      }\n\n      this.$menu\n        .on('click', $.proxy(this.click, this))\n        .on('mouseenter', 'li', $.proxy(this.mouseenter, this))\n        .on('mouseleave', 'li', $.proxy(this.mouseleave, this));\n\n      this.$button\n        .on('click', $.proxy(this.toggle, this));\n    }\n\n  , eventSupported: function(eventName) {\n      var isSupported = eventName in this.$element;\n      if (!isSupported) {\n        this.$element.setAttribute(eventName, 'return;');\n        isSupported = typeof this.$element[eventName] === 'function';\n      }\n      return isSupported;\n    }\n\n  , move: function (e) {\n      if (!this.shown) {return;}\n\n      switch(e.keyCode) {\n        case 9: // tab\n        case 13: // enter\n        case 27: // escape\n          e.preventDefault();\n          break;\n\n        case 38: // up arrow\n          e.preventDefault();\n          this.prev();\n          this.fixMenuScroll();\n          break;\n\n        case 40: // down arrow\n          e.preventDefault();\n          this.next();\n          this.fixMenuScroll();\n          break;\n      }\n\n      e.stopPropagation();\n    }\n\n  , fixMenuScroll: function(){\n      var active = this.$menu.find('.active');\n      if(active.length){\n          var top = active.position().top;\n          var bottom = top + active.height();\n          var scrollTop = this.$menu.scrollTop();\n          var menuHeight = this.$menu.height();\n          if(bottom > menuHeight){\n              this.$menu.scrollTop(scrollTop + bottom - menuHeight);\n          } else if(top < 0){\n              this.$menu.scrollTop(scrollTop + top);\n          }\n      }\n  }\n\n  , keydown: function (e) {\n      this.suppressKeyPressRepeat = ~$.inArray(e.keyCode, [40,38,9,13,27]);\n      this.move(e);\n    }\n\n  , keypress: function (e) {\n      if (this.suppressKeyPressRepeat) {return;}\n      this.move(e);\n    }\n\n  , keyup: function (e) {\n      switch(e.keyCode) {\n        case 40: // down arrow\n         if (!this.shown){\n           this.toggle();\n         }\n         break;\n        case 39: // right arrow\n        case 38: // up arrow\n        case 37: // left arrow\n        case 36: // home\n        case 35: // end\n        case 16: // shift\n        case 17: // ctrl\n        case 18: // alt\n          break;\n\n        case 9: // tab\n        case 13: // enter\n          if (!this.shown) {return;}\n          this.select();\n          break;\n\n        case 27: // escape\n          if (!this.shown) {return;}\n          this.hide();\n          break;\n\n        default:\n          this.clearTarget();\n          this.lookup();\n      }\n\n      e.stopPropagation();\n      e.preventDefault();\n  }\n\n  , focus: function (e) {\n      this.focused = true;\n    }\n\n  , blur: function (e) {\n      var that = this;\n      this.focused = false;\n      var val = this.$element.val();\n      if (!this.selected && val !== '' ) {\n        this.$element.val('');\n        this.$source.val('').trigger('change');\n        this.$target.val('').trigger('change');\n      }\n      if (!this.mousedover && this.shown) {setTimeout(function () { that.hide(); }, 200);}\n    }\n\n  , click: function (e) {\n      e.stopPropagation();\n      e.preventDefault();\n      this.select();\n      this.$element.focus();\n    }\n\n  , mouseenter: function (e) {\n      this.mousedover = true;\n      this.$menu.find('.active').removeClass('active');\n      $(e.currentTarget).addClass('active');\n    }\n\n  , mouseleave: function (e) {\n      this.mousedover = false;\n    }\n  };\n\n  /* COMBOBOX PLUGIN DEFINITION\n   * =========================== */\n  $.fn.combobox = function ( option ) {\n    return this.each(function () {\n      var $this = $(this)\n        , data = $this.data('combobox')\n        , options = typeof option == 'object' && option;\n      if(!data) {$this.data('combobox', (data = new Combobox(this, options)));}\n      if (typeof option == 'string') {data[option]();}\n    });\n  };\n\n  $.fn.combobox.defaults = {\n    bsVersion: '3'\n  , menu: '<ul class=\"typeahead typeahead-long dropdown-menu\"></ul>'\n  , item: '<li><a href=\"#\"></a></li>'\n  };\n\n  $.fn.combobox.Constructor = Combobox;\n\n}( window.jQuery );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/patternfly-bootstrap-combobox/js/bootstrap-combobox.js\n// module id = 162\n// module chunks = 3","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2013 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar $ = require(\"jquery\");\nvar cockpit = require(\"cockpit\");\n\n/* These add themselves to jQuery so just including is enough */\nrequire(\"patterns\");\nrequire(\"bootstrap-datepicker/dist/js/bootstrap-datepicker\");\n\nvar _ = cockpit.gettext;\n\n/* The server time object */\nvar server_time = null;\n\n/* The current operation */\nvar operation = null;\n\n/* The entry point, shows the dialog */\nmodule.exports = function shutdown(op, st) {\n    operation = op;\n    server_time = st;\n    $('#shutdown-dialog').modal('show');\n};\n\n$('#shutdown-dialog .shutdown-date').datepicker({\n    autoclose: true,\n    todayHighlight: true,\n    format: 'yyyy-mm-dd',\n    startDate: \"today\",\n});\n\n$(\"#shutdown-dialog input\")\n    .on('focusout', update)\n    .on('change', update);\n\n/* The delay in the dialog */\nvar delay = 0;\n$(\"#shutdown-dialog .dropdown li\")\n    .on(\"click\", function(ev) {\n        delay = $(this).attr(\"value\");\n        update();\n    });\n\n/* Prefilling the date if it's been set */\nvar cached_date = null;\n$('#shutdown-dialog .shutdown-date')\n    .on('focusin', function() {\n        cached_date = $(this).val();\n    })\n    .on('focusout', function() {\n        if ($(this).val().length === 0)\n            $(this).val(cached_date);\n    });\n\n$(\"#shutdown-dialog\").on(\"show.bs.modal\", function(ev) {\n\n    /* The date picker also triggers this event, since it is modal */\n    if (ev.target.id !== \"shutdown-dialog\")\n        return;\n\n    $(\"#shutdown-dialog textarea\").\n        val(\"\").\n        attr(\"placeholder\", _(\"Message to logged in users\")).\n        attr(\"rows\", 5);\n\n    /* Track the value correctly */\n    delay = $(\"#shutdown-dialog li:first-child\").attr(\"value\");\n\n    server_time.wait().then(function() {\n        $('#shutdown-dialog .shutdown-date').val(server_time.format());\n        $('#shutdown-dialog .shutdown-hours').val(server_time.utc_fake_now.getUTCHours());\n        $('#shutdown-dialog .shutdown-minutes').val(server_time.utc_fake_now.getUTCMinutes());\n    });\n\n    if (operation == 'shutdown') {\n        $('#shutdown-dialog .modal-title').text(_(\"Shut Down\"));\n        $(\"#shutdown-dialog .btn-danger\").text(_(\"Shut Down\"));\n    } else {\n        $('#shutdown-dialog .modal-title').text(_(\"Restart\"));\n        $(\"#shutdown-dialog .btn-danger\").text(_(\"Restart\"));\n    }\n\n    update();\n});\n\nfunction update() {\n    $(\"#shutdown-dialog input\").parent().toggle(delay == \"x\");\n    $(\"#shutdown-dialog .dropdown button span\").text($(\"#shutdown-dialog li[value='\" + delay + \"']\").text());\n\n    var val = parseInt($('#shutdown-dialog .shutdown-minutes').val(), 10);\n    if (val < 10)\n        $('#shutdown-dialog .shutdown-minutes').val(\"0\" + val);\n}\n\n/* Validate the input fields */\nfunction calculate() {\n    if (delay != \"x\")\n        return cockpit.resolve(\"+\" + delay);\n\n    var datestr = $(\"#shutdown-dialog .shutdown-date\").val();\n    var hourstr = $(\"#shutdown-dialog .shutdown-hours\").val();\n    var minstr = $(\"#shutdown-dialog .shutdown-minutes\").val();\n\n    var h = parseInt(hourstr, 10);\n    var m = parseInt(minstr, 10);\n\n    var time_error = false;\n    if (isNaN(h) || h < 0 || h > 23  ||\n        isNaN(m) || m < 0 || m > 59) {\n        time_error = true;\n    }\n\n    var date = new Date(datestr);\n\n    var date_error = false;\n    if (isNaN(date.getTime()) || date.getTime() < 0)\n        date_error = true;\n\n    var ex = null;\n    if (time_error && date_error) {\n        ex = new Error(_(\"Invalid date format and invalid time format\"));\n    } else if (time_error) {\n        ex = new Error (_(\"Invalid time format\"));\n    } else if (date_error) {\n        ex = new Error (_(\"Invalid date format\"));\n    }\n\n    if (ex) {\n        ex.target = \"table td:last-child div\";\n        return cockpit.reject(ex);\n    }\n\n    var cmd = [\"date\", \"--date=\" + datestr + \" \" + hourstr + \":\" + minstr, \"+%s\"];\n    return cockpit.spawn(cmd, { err: \"message\" }).then(function(data) {\n        var input_timestamp = parseInt(data, 10);\n        var server_timestamp = parseInt(server_time.now.getTime() / 1000, 10);\n        var offset = Math.ceil((input_timestamp - server_timestamp) / 60);\n\n        /* If the time in minutes just changed, make it happen now */\n        if (offset === -1) {\n            offset = 0;\n\n        /* Otherwise this is a failure */\n        } else if (offset < 0) {\n            console.log(\"Shutdown offset in minutes is in the past:\", offset);\n            ex = new Error(_(\"Cannot schedule event in the past\"));\n            ex.target = \"table td:last-child div\";\n            return cockpit.reject(ex);\n        }\n\n        return \"+\" + offset;\n    });\n}\n\n/* Perform the actual action */\nfunction perform(message) {\n    return calculate().then(function(when) {\n        var arg = (operation == \"shutdown\") ? \"--poweroff\" : \"--reboot\";\n        var message = $(\"#shutdown-dialog textarea\").val();\n        if (operation == \"restart\")\n            cockpit.hint(\"restart\");\n        return cockpit.spawn([\"shutdown\", arg, when, message], { superuser: true, err: \"message\" });\n    });\n}\n\n/* Perform the action */\n\n$(\"#shutdown-dialog .btn-danger\").click(function() {\n    $(\"#shutdown-dialog\").dialog(\"promise\", perform());\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/systemd/shutdown.js\n// module id = 163\n// module chunks = 3","module.exports = \"#!/bin/sh\\n\\nset -eu\\nport=\\\"22\\\"\\nhost=\\\"localhost\\\"\\n\\nparse_addr() {\\n    if [ -n \\\"$1\\\" ]; then\\n        case \\\"$1\\\" in\\n            *:*)\\n                t=\\\"$1\\\"\\n                p=${t##*:}\\n                h=${t%:*}\\n                ;;\\n            *)\\n                p=\\\"$1\\\"\\n                h=\\\"localhost\\\"\\n                ;;\\n        esac\\n\\n        # checks that port is an integer\\n        if [ \\\"$p\\\" -eq \\\"$p\\\" ] 2>/dev/null; then\\n            port=\\\"$p\\\"\\n            host=\\\"$h\\\"\\n            if [ \\\"$host\\\" = \\\"[::]\\\" ]; then\\n                host=\\\"::\\\"\\n            fi\\n        fi\\n    fi\\n}\\n\\n# Try to find where sshd might be listening\\n\\n# Check sshd_config, only works for root\\nconfig=$(sshd -T | grep \\\"listenaddress \\\" | cut -d' ' -f2-)\\necho \\\"$config\\\" | while IFS='\\\\n' read line; do\\n    parse_addr \\\"$line\\\"\\ndone\\n\\n# Check with systemd\\nsystemd=$(systemctl show --property=Listen sshd.socket || true)\\necho \\\"$systemd\\\" | while IFS='=' read -r name value; do\\n    if [ \\\"$name\\\" = \\\"ListenStream\\\" ]; then\\n        parse_addr \\\"$value\\\"\\n    fi\\ndone\\n\\nkeys=$(ssh-keyscan -t dsa,ecdsa,ed25519,rsa -p \\\"$port\\\" \\\"$host\\\" || true)\\nif [ -n \\\"$keys\\\" ]; then\\n    # Some versions of ssh-keygen don't support -f reading from stdin\\n    # so write a tmpfile\\n    tmp=$(mktemp)\\n    echo \\\"$keys\\\" > \\\"$tmp\\\"\\n\\n    # Not all ssh-keygen version support -E in those cases just output the default\\n    (ssh-keygen -l -f \\\"$tmp\\\" -E md5 && ssh-keygen -l -f \\\"$tmp\\\" -E sha256) || ssh-keygen -l -f \\\"$tmp\\\"\\n    rm \\\"$tmp\\\"\\nfi\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/systemd/ssh-list-host-keys.sh\n// module id = 164\n// module chunks = 3"],"sourceRoot":""}