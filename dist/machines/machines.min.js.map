{"version":3,"sources":["webpack:///machines/machines.min.js","webpack:///webpack/bootstrap 21f18b7d45d075119809","webpack:///../pkg/machines/index.js","webpack:///../pkg/machines/index.es6","webpack:///../bower_components/react-lite-cockpit/dist/react-lite.js","webpack:///../pkg/machines/store.es6","webpack:///../bower_components/redux/index.js","webpack:///../pkg/machines/reducers.es6","webpack:///../pkg/machines/config.es6","webpack:///../pkg/machines/helpers.es6","webpack:///external \"cockpit\"","webpack:///../pkg/machines/middlewares.es6","webpack:///../pkg/machines/app.jsx","webpack:///../pkg/machines/hostvmslist.jsx","webpack:///../pkg/machines/actions.es6","webpack:///../pkg/machines/libvirt.es6","webpack:///external \"jQuery\"","webpack:///../pkg/machines/services.es6","webpack:///../pkg/machines/selectors.es6","webpack:///../pkg/machines/c3charts.jsx","webpack:///../bower_components/c3/c3.js","webpack:///../bower_components/d3/d3.js","webpack:///../pkg/lib/cockpit-components-listing.jsx"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","document","addEventListener","vmsApp","appMain","_interopRequireDefault","obj","__esModule","default","render","_react2","createElement","_appJsx2","store","_storeEs62","getElementById","_helpersEs6","logDebug","JSON","stringify","getState","subscribe","dispatch","_actionsEs6","getAllVms","Object","defineProperty","value","_react","_storeEs6","_appJsx","global","factory","this","createVelem","type","props","vtype","VELEMENT","refs","createVstateless","VSTATELESS","getUid","createVcomponent","VCOMPONENT","createVcomment","comment","VCOMMENT","initVnode","vnode","parentContext","namespaceURI","node","initVelem","initVcomponent","initVstateless","createComment","createTextNode","destroyVnode","destroyVelem","destroyVcomponent","destroyVstateless","velem","SVGNamespaceURI","createElementNS","children","vchildren","isArr","flattenChildren","collectChild","i","len","length","appendChild","isCustomComponent","indexOf","is","setProps","attachRef","ref","child","updateVelem","newVelem","newProps","oldHtml","dangerouslySetInnerHTML","__html","newChildren","childNodes","vchildrenLen","newVchildren","newVchildrenLen","shouldRemove","patches","Array","j","newVnode","outer","_type","key","_refs","childNode","removeChild","patchItem","newChildNode","updateVcomponent","updateVstateless","nodeValue","currentNode","insertBefore","patchProps","detachRef","eventStore","hasOwnProperty","EVENT_KEYS","test","getEventName","notBubbleEvents","vstateless","renderVstateless","cache","newVstateless","newNode","compareTwoVnodes","extend","componentContext","getContextByTypes","contextTypes","Error","name","vcomponent","Component","component","updater","$updater","$cache","isPending","context","componentWillMount","state","renderComponent","isMounted","pendingComponents","push","newVcomponent","nextProps","componentWillReceiveProps","emitUpdate","setState","forceUpdate","noop","componentWillUnmount","curContext","constructor","getChildContext","clearPendingComponents","components","componentDidMount","parentNode","replaceChild","getDOMNode","refKey","refValue","nodeName","isFn","Updater","instance","pendingStates","pendingCallbacks","nextContext","clearCallbacks","bind","shouldUpdate","nextState","callback","shouldComponentUpdate","toLowerCase","addEvent","elem","eventType","listener","eventTypes","substr","dispatchEvent","removeEvent","event","target","syntheticEvent","undefined","updateQueue","_target","createSyntheticEvent","currentTarget","$cancalBubble","batchUpdate","nativeEvent","cancalBubble","setStyle","elemStyle","styles","styleName","setStyleValue","removeStyle","patchStyle","style","newStyle","keyMap","prefixKey","prefix","charAt","toUpperCase","substring","styleValue","isUnitlessNumber","RE_NUMBER","mergeConfigToProperties","config","attrNS","domAttrs","domProps","propName","propConfig","properties","attributeName","propertyName","attributeNamespace","mustUseProperty","checkMask","MUST_USE_PROPERTY","hasBooleanValue","HAS_BOOLEAN_VALUE","hasNumericValue","HAS_NUMERIC_VALUE","hasPositiveNumericValue","HAS_POSITIVE_NUMERIC_VALUE","hasOverloadedBooleanValue","HAS_OVERLOADED_BOOLEAN_VALUE","bitmask","setPropValue","propInfo","isNaN","removePropValue","namespace","setAttributeNS","setAttribute","isCustomAttribute","VALID_ATTRIBUTE_NAME_REGEX","removeAttribute","identity","pipe","fn1","fn2","apply","arguments","list","iteratee","a","item","eachItem","to","nextSource","nextIndex","from","keys","uid","innerHTML","patchProp","oldValue","html","renderTreeIntoContainer","container","COMPONENT_ID","argsCache","pendingRendering","oldVnode","rootNode","vnodeStore","firstChild","lastChild","result","unstable_renderSubtreeIntoContainer","parentComponent","subVnode","unmountComponentAtNode","findDOMNode","isValidElement","cloneElement","originElem","_len","_key","concat","createFactory","_len2","args","_key2","createVnode","varType","prototype","finalProps","propValue","propKey","defaultProps","argsLen","finalChildren","only","forEach","index","map","data","isEqual","getKey","_ref","escapeUserProvidedKey","count","toArray","toString","text","replace","userProvidedKeyEscapeRegex","eachMixin","mixins","mixin","combineMixinToProto","proto","curValue","$getInitialStates","combineMixinToClass","propTypes","statics","getDefaultProps","bindContext","source","getInitialState","_this","Facade","createClass","spec","Klass","autobind","specMixins","displayName","updaters","add","pop","updateComponent","addState","replaceState","addCallback","componentWillUpdate","componentDidUpdate","onmouseleave","onmouseenter","onload","onunload","onscroll","onfocus","onblur","onrowexit","onbeforeunload","onstop","ondragdrop","ondragenter","ondragexit","ondraggesture","ondragover","oncontextmenu","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridColumn","fontWeight","lineClamp","lineHeight","opacity","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixes","prop","ATTRIBUTE_NAME_START_CHAR","ATTRIBUTE_NAME_CHAR","RegExp","HTMLDOMPropertyConfig","accept","acceptCharset","accessKey","action","allowFullScreen","allowTransparency","alt","async","autoComplete","autoFocus","autoPlay","capture","cellPadding","cellSpacing","charSet","challenge","checked","cite","classID","className","cols","colSpan","content","contentEditable","contextMenu","controls","coords","crossOrigin","dateTime","defaultValue","defaultChecked","defer","dir","disabled","download","draggable","encType","form","formAction","formEncType","formMethod","formNoValidate","formTarget","frameBorder","headers","height","hidden","high","href","hrefLang","htmlFor","httpEquiv","icon","inputMode","integrity","keyParams","keyType","kind","label","lang","loop","low","manifest","marginHeight","marginWidth","max","maxLength","media","mediaGroup","method","min","minLength","multiple","muted","nonce","noValidate","open","optimum","pattern","placeholder","poster","preload","profile","radioGroup","readOnly","rel","required","reversed","role","rows","rowSpan","sandbox","scope","scoped","scrolling","seamless","selected","shape","size","sizes","span","spellCheck","src","srcDoc","srcLang","srcSet","start","step","summary","tabIndex","title","useMap","width","wmode","wrap","about","datatype","inlist","property","resource","typeof","vocab","autoCapitalize","autoCorrect","autoSave","color","itemProp","itemScope","itemType","itemID","itemRef","results","security","unselectable","xlink","xml","ATTRS","accentHeight","accumulate","additive","alignmentBaseline","allowReorder","alphabetic","amplitude","arabicForm","ascent","attributeType","autoReverse","azimuth","baseFrequency","baseProfile","baselineShift","bbox","begin","bias","by","calcMode","capHeight","clip","clipPath","clipRule","clipPathUnits","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","contentScriptType","contentStyleType","cursor","cx","cy","d","decelerate","descent","diffuseConstant","direction","display","divisor","dominantBaseline","dur","dx","dy","edgeMode","elevation","enableBackground","end","exponent","externalResourcesRequired","fill","fillRule","filter","filterRes","filterUnits","floodColor","focusable","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","format","fx","fy","g1","g2","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","glyphRef","gradientTransform","gradientUnits","hanging","horizAdvX","horizOriginX","ideographic","imageRendering","in","in2","intercept","k","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","kerning","keyPoints","keySplines","keyTimes","lengthAdjust","letterSpacing","lightingColor","limitingConeAngle","local","markerEnd","markerMid","markerStart","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mode","numOctaves","offset","operator","orient","orientation","origin","overflow","overlinePosition","overlineThickness","paintOrder","panose1","pathLength","patternContentUnits","patternTransform","patternUnits","pointerEvents","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","r","radius","refX","refY","renderingIntent","repeatCount","repeatDur","requiredExtensions","requiredFeatures","restart","rotate","rx","ry","scale","seed","shapeRendering","slope","spacing","specularConstant","specularExponent","speed","spreadMethod","startOffset","stdDeviation","stemh","stemv","stitchTiles","stopColor","strikethroughPosition","strikethroughThickness","string","stroke","strokeLinecap","strokeLinejoin","surfaceScale","systemLanguage","tableValues","targetX","targetY","textAnchor","textDecoration","textRendering","textLength","transform","u1","u2","underlinePosition","underlineThickness","unicode","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","values","vectorEffect","version","vertAdvY","vertOriginX","vertOriginY","viewBox","viewTarget","visibility","widths","wordSpacing","writingMode","x","xHeight","x1","x2","xChannelSelector","xlinkActuate","xlinkArcrole","xlinkHref","xlinkRole","xlinkShow","xlinkTitle","xlinkType","xmlBase","xmlLang","xmlSpace","y","y1","y2","yChannelSelector","z","zoomAndPan","SVGDOMPropertyConfig","isArray","freeze","ReactDOM","tagNames","DOM","split","tagName","check","isRequired","PropTypes","array","bool","func","number","object","any","arrayOf","element","instanceOf","objectOf","oneOf","oneOfType","Children","React","__spread","__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","_redux","_reducersEs6","_reducersEs62","_middlewaresEs6","createStoreWithMiddleware","applyMiddleware","thunk","createStore","t","e","n","o","compose","bindActionCreators","combineReducers","u","f","s","l","slice","v","reduceRight","b","h","splice","INIT","next","TypeError","unsubscribe","replaceReducer","ActionTypes","console","error","Function","assign","Math","random","join","getPrototypeOf","window","Symbol","observable","_toConsumableArray","arr","arr2","getFirstIndexOfVm","field","connectionName","findIndex","provider","refreshInterval","_configEs62","DefaultRefreshInterval","newState","vms","vm","updatedVm","clearUsageData","timeSampleUsageData","payload","lastMessage","message","lastMessageDetail","detail","vmNames","newVmRecord","previousVmRecord","timeDiff","actualTimeInMs","cpuTimeDiff","cpuTime","cpuUsage","toFixed","_configEs6","predicate","thisArg","VMS_CONFIG","Virsh","connections","system","params","session","isDev","toGigaBytes","amount","currentUnit","fixed1","toKiloBytes","isEmpty","str","arrayEquals","arr1","diff","msg","log","rephraseUI","original","autostart","disable","enable","_","canReset","vmState","canShutdown","isRunning","canRun","_cockpit","_cockpit2","gettext","cockpit","then","_hostvmslistJsx","_hostvmslistJsx2","App","_store$getState","vmId","vmName","_c3chartsJsx","_c3chartsJsx2","_cockpitComponentsListingJsx","NoVm","VmActions","onStart","onReboot","onForceReboot","onShutdown","onForceoff","reset","DropdownButtons","buttons","shutdown","run","onClick","IconElement","_ref2","data-toggle","data-placement","StateIcon","_ref3","_ref4","buttonsHtml","button","caretId","VmOverviewTabRecord","_ref5","descr","VmLastMessage","_ref6","exception","VmOverviewTab","_ref7","format_bytes","currentMemory","vcpus","osType","VmUsageTab","_ref8","rssMem","memTotal","available","totalCpus","memChartData","columns","groups","cpuChartData","chartSize","tooltipText","primaryTitle","secondaryTitle","caption","Vm","_ref9","stateIcon","ListingRow","header","tabRenderers","renderer","presence","listingActions","HostVmsList","_ref10","Listing","columnTitles","startVm","rebootVm","forceRebootVm","shutdownVm","forceVmOff","virt","getVm","lookupId","getVirtProvider","warn","err","resolve","_ret","deferred","_libvirtEs62","setProvider","init","reject","promise","delayPolling","timeout","_selectorsEs6","getRefreshInterval","setTimeout","setRefreshInterval","updateOrAddVm","fqdn","uptime","rssMemory","vmActionFailed","deleteUnlistedVMs","_libvirtEs6","parseLines","virshStdout","match","getValueFromLine","parsedLines","selectedLine","line","trim","startsWith","canLoggedUserConnectSession","loggedUser","doGetAllVms","connection","_servicesEs6","spawnScript","script","output","all","spawnVirsh","_ref14","failHandler","spawnProcess","cmd","ex","spawnVirshReadOnly","_ref15","parseDumpxml","domXml","xmlDoc","_jquery2","parseXML","domainElem","getElementsByTagName","osElem","currentMemoryElem","vcpuElem","currentMemoryUnit","getAttribute","parseDominfo","domInfo","lines","parseDommemstat","dommemstat","parseDomstats","domstats","Date","now","_jquery","String","searchString","position","GET_VM","canFailHandler","info","GET_ALL_VMS","user","done","promises","getOwnPropertyNames","SHUTDOWN_VM","FORCEOFF_VM","REBOOT_VM","FORCEREBOOT_VM","_ref11","START_VM","_ref12","_ref13","jQuery","_ref$args","stdin","spawnArgs","spawn","input","fail","command","stdout","stream","chunk","_classCallCheck","Constructor","_inherits","subClass","superClass","create","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","descriptor","protoProps","staticProps","_get","_x","_x2","_x3","_again","receiver","desc","getOwnPropertyDescriptor","getter","get","parent","_c3C3","_c3C32","idCounter","DonutChart","_React$Component","domId","_renderChart","donutChart","destroy","bindTo","c3ChartDefaults","options","getDefaultDonutConfig","prepareProps","bindto","donut","tooltip","contents","pfGetUtilizationDonutTooltipContentsFn","generate","pfSetDonutChartTitle","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","API","owner","inherit","base","derived","Chart","$$","internal","ChartInternal","loadConfig","beforeInit","afterInit","bindThis","fn","argThis","c3_chart_fn","api","d3","getDefaultConfig","axes","Axis","c3_axis","axisX","selection","attr","ceil","tickOffset","axisY","scaleExtent","domain","stop","generateTicks","ticks","tickArguments","unshift","copyScale","newScale","copy","isCategory","textFormatted","formatted","tickFormat","getSizeFor1Char","tick","tickTextCharSize","w","select","each","box","getBoundingClientRect","transitionise","withoutTransition","transition","axis","g","splitTickText","maxWidth","splitted","spaceIndex","subtext","textWidth","sizeFor1Char","tickText","isVertical","scale1","tspanDy","counts","tickSize","tickPosition","tickCentered","range","innerTickSize","textAnchorForText","textTransform","dxForText","sin","PI","yForText","tickLength","tickTransform","tickX","tickY","scale0","__chart__","tickValues","selectAll","tickEnter","enter","insert","tickExit","exit","remove","tickUpdate","rangeExtent","path","pathUpdate","append","lineEnter","lineUpdate","textEnter","textUpdate","tspan","tickPadding","tickMultiline","tickWidth","tickTextRotate","outerTickSize","rangeBand","linear","tickCulling","withOuterTick","top","right","bottom","left","isCentered","tickInterval","interval","getTotalLength","Infinity","culling","c3_chart_internal_fn","c3_chart_internal_axis_fn","c3","chart","initParams","data_url","convertUrlToData","data_mimeType","data_headers","data_keys","initWithData","data_json","convertJsonToData","data_rows","convertRowsToData","data_columns","convertColumnsToData","clipId","clipIdForXAxis","clipIdForYAxis","clipIdForGrid","clipIdForSubchart","getClipPath","clipPathForXAxis","clipPathForYAxis","clipPathForGrid","clipPathForSubchart","dragStart","dragging","flowing","cancelClick","mouseover","transiting","generateColor","levelColor","generateLevelColor","dataTimeFormat","data_xLocaltime","time","utc","axisTimeFormat","axis_x_localtime","defaultAxisTimeFormat","multi","getMilliseconds","getSeconds","getMinutes","getHours","getDay","getDate","getMonth","hiddenTargetIds","hiddenLegendIds","focusedTargetIds","defocusedTargetIds","xOrient","axis_rotated","yOrient","axis_y_inner","y2Orient","axis_y2_inner","subXOrient","isLegendRight","legend_position","isLegendInset","isLegendTop","legend_inset_anchor","isLegendLeft","legendStep","legendItemWidth","legendItemHeight","currentMaxTickWidths","rotated_padding_left","rotated_padding_right","axis_x_show","rotated_padding_top","withoutFadeIn","intervalForObserveInserted","subx","initChartElements","initBar","initLine","initArc","initGauge","initText","defs","main","binding","initPie","initBrush","initZoom","selectChart","empty","observeInserted","classed","xs","targets","convertDataToTargets","data_filter","data_hide","addHiddenTargetIds","mapToIds","legend_hide","addHiddenLegendIds","hasType","legend_show","updateSizes","updateScales","extent","getXDomain","getYDomain","subX","subY","subY2","orgXDomain","brush","zoom_enabled","svg","on","onmouseover","onmouseout","svg_classname","clipChart","appendClip","clipXAxis","clipYAxis","clipGrid","clipSubchart","updateSvgSize","getTranslate","initSubchart","initTooltip","initLegend","initTitle","CLASS","initRegion","initGrid","grid_lines_front","initGridLines","initEventRect","zoom_privileged","regions","zoomRect","axis_x_extent","getDefaultExtent","updateTargets","updateDimension","oninit","redraw","withTransition","withTransform","withUpdateXDomain","withUpdateOrgXDomain","withTransitionForAxis","bindResize","smoothLines","el","legendHeight","legend","getLegendHeight","legendWidth","getLegendWidth","legendHeightForBottom","hasArc","hasArcType","xAxisHeight","getHorizontalAxisHeight","subchartHeight","subchart_show","subchart_size_height","currentWidth","getCurrentWidth","currentHeight","getCurrentHeight","margin","getCurrentPaddingTop","getCurrentPaddingRight","getCurrentPaddingBottom","getCurrentPaddingLeft","margin2","NaN","margin3","updateSizeForLegend","width2","height2","arcWidth","arcHeight","gauge_fullCircle","getGaugeLabelHeight","updateRadius","radiusExpanded","updateTargetsForText","updateTargetsForBar","updateTargetsForLine","updateTargetsForArc","updateTargetsForSubchart","showTargets","isTargetToShow","duration","transition_duration","transitions","withY","withSubchart","withTransitionForExit","withTrimXDomain","withLegend","withEventRect","withDimension","withUpdateXAxis","drawArea","drawBar","drawLine","xForText","durationForExit","durationForAxis","waitForDraw","flow","intervalForCulling","xDomainForZoom","areaIndices","getShapeIndices","isAreaType","barIndices","isBarType","lineIndices","isLineType","hideAxis","targetsToShow","filterTargetsToShow","xv","getOption","generateTransitions","updateLegend","isCategorized","updateXDomain","axis_x_tick_values","updateXAxisTickValues","xAxis","subXAxis","zoom_rescale","orgDomain","axis_y_tick_values","axis_y_tick_count","yAxis","generateTickValues","axis_y2_tick_values","axis_y2_tick_count","y2Axis","updateLabels","axis_x_tick_culling","axis_x_tick_culling_max","generateDrawArea","generateDrawBar","generateDrawLine","generateXYForText","updateXgridFocus","data_empty_label_text","updateGrid","updateRegion","updateBar","updateLine","updateArea","updateCircle","hasDataLabel","updateText","redrawTitle","redrawArc","redrawSubchart","selectedCircles","interaction_enabled","redrawEventRect","updateZoom","updateCircleY","circleY","circleX","generateFlow","isTabVisible","transitionsToWait","redrawBar","redrawLine","redrawArea","redrawCircle","redrawText","redrawRegion","redrawGrid","generateWait","onrendered","updateAndRedraw","withTransitionForTransform","transformAll","redrawWithoutRescale","isTimeSeries","axis_x_type","isCustomX","data_x","notEmpty","data_xs","isTimeSeriesY","axis_y_type","asHalfPixel","initialOpacity","initialOpacityForCircle","opacityForCircle","point_show","isValue","isScatterType","opacityForText","xx","parseDate","axis_x_categories","yv","yScale","subxx","transformMain","axisY2","chartArcs","transformContext","transformLegend","getXAxisClipX","getXAxisClipY","getXAxisClipWidth","getXAxisClipHeight","getYAxisClipX","getYAxisClipY","getYAxisClipWidth","getYAxisClipHeight","withoutAxis","observer","MutationObserver","mutations","mutation","previousSibling","disconnect","setInterval","clearInterval","update","observe","attributes","childList","characterData","resizeFunction","generateResize","onresize","resize_auto","resizeTimeout","clearTimeout","flush","onresized","attachEvent","wrapper","callResizeFunctions","resizeFunctions","endall","timer","date","parsedDate","data_xFormat","parse","mozHidden","msHidden","webkitHidden","size_width","size_height","padding_left","padding_right","padding_top","padding_bottom","zoom_extent","zoom_onzoom","zoom_onzoomstart","zoom_onzoomend","zoom_x_min","zoom_x_max","interaction_brighten","data_xSort","data_idConverter","data_names","data_classes","data_groups","data_axes","data_type","data_types","data_labels","data_order","data_regions","data_color","data_colors","data_selection_enabled","data_selection_grouped","data_selection_isselectable","data_selection_multiple","data_selection_draggable","data_onclick","data_onmouseover","data_onmouseout","data_onselected","data_onunselected","subchart_axis_x_show","subchart_onbrush","color_pattern","color_threshold","legend_inset_x","legend_inset_y","legend_inset_step","legend_item_onclick","legend_item_onmouseover","legend_item_onmouseout","legend_equally","legend_padding","legend_item_tile_width","legend_item_tile_height","axis_x_tick_centered","axis_x_tick_format","axis_x_tick_count","axis_x_tick_fit","axis_x_tick_rotate","axis_x_tick_outer","axis_x_tick_multiline","axis_x_tick_width","axis_x_max","axis_x_min","axis_x_padding","axis_x_height","axis_x_label","axis_y_show","axis_y_max","axis_y_min","axis_y_inverted","axis_y_center","axis_y_label","axis_y_tick_format","axis_y_tick_outer","axis_y_tick_rotate","axis_y_tick_time_value","axis_y_tick_time_interval","axis_y_padding","axis_y_default","axis_y2_show","axis_y2_max","axis_y2_min","axis_y2_inverted","axis_y2_center","axis_y2_label","axis_y2_tick_format","axis_y2_tick_outer","axis_y2_padding","axis_y2_default","grid_x_show","grid_x_type","grid_x_lines","grid_y_show","grid_y_lines","grid_y_ticks","grid_focus_show","point_r","point_sensitivity","point_focus_expand_enabled","point_focus_expand_r","point_select_r","line_connectNull","line_step_type","bar_width","bar_width_ratio","bar_width_max","bar_zerobased","area_zerobased","area_above","pie_label_show","pie_label_format","pie_label_threshold","pie_label_ratio","pie_expand","pie_expand_duration","gauge_label_show","gauge_label_format","gauge_min","gauge_max","gauge_startingAngle","gauge_units","gauge_width","gauge_expand","gauge_expand_duration","donut_label_show","donut_label_format","donut_label_threshold","donut_label_ratio","donut_width","donut_title","donut_expand","donut_expand_duration","spline_interpolation_type","tooltip_show","tooltip_grouped","tooltip_format_title","tooltip_format_name","tooltip_format_value","tooltip_position","tooltip_contents","defaultTitleFormat","defaultValueFormat","getTooltipContent","tooltip_init_show","tooltip_init_x","tooltip_init_position","tooltip_onshow","tooltip_onhide","title_text","title_padding","title_position","additionalConfig","find","shift","read","this_config","isDefined","getScale","forTimeseries","getX","_scale","raw","getY","getYScale","getId","getSubYScale","forInit","xMin","xMax","yMin","yMax","subXMin","subXMax","subYMin","subYMax","xAxisTickFormat","getXAxisTickFormat","xAxisTickValues","getXAxisTickValues","yAxisTickValues","getYAxisTickValues","y2AxisTickValues","getY2AxisTickValues","getXAxis","getYAxis","updateArc","getYDomainMin","baseId","idsInGroup","hasNegativeValue","ids","ys","getValuesAsIdKeyed","hasNegativeValueInTargets","getYDomainMax","hasPositiveValue","hasPositiveValueInTargets","axisId","xDomain","domainLength","padding","yDomainAbs","lengths","ratio","isAllPositive","isAllNegative","targetsByAxisId","yTargets","filterByXDomain","yDomainMin","yDomainMax","center","isZeroBased","isInverted","showHorizontalDataLabel","showVerticalDataLabel","abs","getDataLabelLength","diffDomain","convertPixelsToAxisPadding","getPadding","reverse","getXDomainMin","getXDomainMax","getXDomainPadding","maxDataCount","paddingLeft","paddingRight","getMaxDataCount","firstX","lastX","getTime","withTrim","updateScaleExtent","trimXDomain","zoomDomain","getZoomDomain","isX","hasValue","isNotX","getXKey","getXValuesOfXKey","xValues","getIndexByX","filterByX","getXValue","getOtherTargetXs","idsForX","getOtherTargetX","addXs","hasMultipleX","set","isMultipleX","addName","getValueOnIndex","valueOnIndex","updateTargetX","generateTargetX","updateTargetXs","rawX","cloneTarget","id_org","updateXs","getPrevX","getNextX","getMaxDataCountTarget","maxTarget","getEdgeX","mapToTargetIds","hasTarget","targetId","isLegendToShow","mapTargetsToUniqueXs","merge","sort","targetIds","removeHiddenTargetIds","removeHiddenLegendIds","checkValueInTargets","checker","isOrderDesc","isOrderAsc","orderTargets","orderAsc","orderDesc","t1","t2","reducer","t1Sum","reduce","t2Sum","isFunction","filterRemoveNull","paddingCoef","dataLabelFormat","isNoneArc","isArc","findSameXOfValues","sames","findClosestFromTargets","pos","candidates","findClosest","closest","minDist","bars","getTargetSelectorSuffix","bar","isWithinBar","dist","xIndex","yIndex","sqrt","pow","convertValuesToStep","converted","updateDataAttributes","attrs","current","url","mimeType","req","xhr","responseURL","status","statusText","response","convertTsvToData","convertCsvToData","convertXsvToData","xsv","parser","parseRows","csv","tsv","json","targetKeys","new_rows","new_row","findValueInJson","isUndefined","pathArray","appendXs","xKey","convertedId","v1","v2","setTargetType","addCache","load","types","loadFromArgs","unload","selectorTarget","legendItem","categoryName","eventRects","eventRectUpdate","maxDataCountTarget","eventRectsMultiple","eventRectsSingle","eventRect","generateEventRectsForMultipleXs","updateEventRect","datum","generateEventRectsForSingleX","rectW","rectX","getEventRectWidth","prevX","nextX","thisX","classEvent","eventRectEnter","expandCircles","expandBars","hideXGridFocus","hideTooltip","unexpandCircles","unexpandBars","selectedData","isStepType","mouse","showTooltip","showXGridFocus","EXPANDED","isWithinShape","toggleShape","drag","behavior","dragstart","dragend","mouseout","sameXData","shapes","selector","createEvent","initMouseEvent","getParentWidth","getParentHeight","getTitlePadding","withoutRecompute","ceil10","getAxisWidthByAxisId","getYAxisLabelPosition","isOuter","defaultPadding","legendWidthOnRight","getY2AxisLabelPosition","getParentRectValue","offsetWidth","getSvgLeft","hasLeftAxisRect","leftAxisClass","leftAxis","svgRect","chartRect","svgLeft","getLabelPositionById","getMaxTickWidth","isInner","cos","typeFilter","indices","__max__","getShapeX","targetsNum","isSub","getShapeY","getShapeOffset","y0","that","isWithin","isWithinStep","isWithinCircle","pointSelectR","getInterpolate","interpolation","isInterpolationType","isSplineType","chartLines","mainLineUpdate","mainLineEnter","classChartLine","classLines","classAreas","classCircles","classFocus","chartLine","generateClass","selectedCircle","mainLine","lineData","classLine","getPoints","generateGetLinePoints","yScaleGetter","xValue","yValue","defined","x0","lineWithRegions","interpolate","lineTargetsNum","lineOffset","posX","posY","_regions","isWithinRegions","generateM","sWithRegion","xp","yp","dd","diffx2","prev","xOffset","d0","d1","x_diff","xv0","xv1","mainArea","areas","area","classArea","orgAreaOpacity","generateGetAreaPoints","value0","getAreaBaseValue","value1","areaTargetsNum","areaOffset","mainCircle","circles","circle","lineOrScatterData","classCircle","pointR","getCircles","pointExpandedR","d3_this","chartBars","mainBarUpdate","mainBarEnter","classChartBar","classBars","chartBar","barData","classBar","mainBar","getBarW","barTargetsNum","getBars","generateGetBarPoints","indexX","indexY","barW","barX","barY","barOffset","seg0","pathSegList","getItem","seg1","sx","sy","ey","chartTexts","mainText","mainTextUpdate","mainTextEnter","classChartText","classTexts","chartText","barOrLineData","classText","texts","forFlow","getTextRect","cls","rect","dummy","font","forX","getAreaPoints","getBarPoints","getLinePoints","getXForText","getYForText","textElement","xPos","yPos","isSafari","isChrome","has","isString","isPieType","isGaugeType","isDonutType","isArcType","arcData","grid","xgrids","ygrids","xgridFocus","xgrid","gridLines","xgridLines","ygridLines","updateXGrid","withoutUpdate","xgridData","generateGridData","xgridAttr","updateYGrid","gridValues","ygrid","gridTextAnchor","gridTextDx","xGridTextX","yGridTextX","xgridLine","ygridLine","dataToShow","focusEl","firstYear","lastYear","gridData","tickNum","getFullYear","getGridFilterToRemove","found","param","removeGridLines","toRemove","toShow","tooltipContainer","getYFormat","bgcolor","titleFormat","nameFormat","valueFormat","sanitise","tooltipName","tooltipPosition","tWidth","tHeight","tooltipLeft","tooltipRight","tooltipTop","chartRight","forArc","positionFunction","legendItemTextBox","legendHasRendered","updateLegendWithDefaults","insetLegendPosition","updateLegendStep","updateLegendItemWidth","updateLegendItemHeight","opacityForLegend","legendItemHidden","opacityForUnfocusedLegend","toggleFocusLegend","focus","legendItemFocused","revertLegend","showLegend","selectorLegends","hideLegend","clearLegendItemTextBoxCache","getTextBox","textContent","updatePositions","updateValues","withoutStep","areaLength","totalLength","itemLength","posMin","steps","margins","offsets","isLast","itemWidth","tileWidth","itemHeight","paddingTop","maxHeight","heights","xForLegend","xForLegendText","xForLegendRect","yForLegend","yForLegendText","yForLegendRect","x1ForLegendTile","x2ForLegendTile","yForLegendTile","rects","tiles","background","altKey","hide","show","toggle","revert","legendItemEvent","legendItemTile","legendBackground","xForTitle","yForTitle","axisXLabel","textAnchorForXAxisLabel","axisYLabel","textAnchorForYAxisLabel","axisY2Label","textAnchorForY2AxisLabel","withoutRotateTickText","axisParams","getTickValues","getLabelOptionByAxisId","option","getLabelText","setLabelText","getLabelPosition","defaultPosition","isLeft","isCenter","isRight","isTop","isMiddle","isBottom","getXAxisLabelPosition","textForXAxisLabel","textForYAxisLabel","textForY2AxisLabel","xForAxisLabel","forHorizontal","dxForAxisLabel","textAnchorForAxisLabel","xForXAxisLabel","xForYAxisLabel","xForY2AxisLabel","dxForXAxisLabel","dxForYAxisLabel","dxForY2AxisLabel","dyForXAxisLabel","dyForYAxisLabel","dyForY2AxisLabel","unit","pixels","tickCount","forTimeSeries","targetCount","tickValue","axisSubX","isHidden","isIE9","navigator","appVersion","URL","getAxisClipX","getAxisClipY","getAxisClipWidth","getAxisClipHeight","pie","layout","innerRadiusRatio","innerRadius","svgArc","getSvgArc","svgArcExpanded","getSvgArcExpanded","svgArcExpandedSub","updateAngle","gMin","gMax","gTic","gValue","startAngle","endAngle","arc","outerRadius","newArc","updated","centroid","rate","getArc","force","transformForArcLabel","translate","getArcRatio","whole","convertToArcData","textForArcLabel","shouldShowArcLabel","meetsArcLabelThreshold","getArcLabelFormat","defaultArcValueFormat","expandArc","selectorTargets","chartArc","shouldExpand","expandDuration","unexpandArc","shouldShow","threshold","getArcTitle","mainPieUpdate","mainPieEnter","classChartArc","classArcs","arcs","chartArcsTitle","mainArc","classArc","_current","attrTween","interpolated","gaugeValue","round","chartArcsBackground","chartArcsGaugeUnit","chartArcsGaugeMin","chartArcsGaugeMax","region","mainRegion","classRegion","parentData","regionX","regionY","regionWidth","regionHeight","isRegionOnX","mx","my","minX","maxX","minY","maxY","altDomain","dragarea","_y","_w","_h","isSelected","SELECTED","isIncluded","INCLUDED","togglePoint","getPathBox","togglePath","selectPoint","unselectPoint","selectPath","rgb","brighter","unselectPath","getToggle","redrawForBrush","contextLineEnter","contextLineUpdate","contextBarEnter","contextBarUpdate","updateBarForSubchart","contextBar","redrawBarForSubchart","drawBarOnSub","updateLineForSubchart","contextLine","redrawLineForSubchart","drawLineOnSub","updateAreaForSubchart","contextArea","redrawAreaForSubchart","drawAreaOnSub","startEvent","sourceEvent","redrawForZoom","clientX","clientY","orgScaleExtent","colors","category10","asValue","formatForY","yFormat","formatForY2","y2Format","defaultFormat","hasCaches","getCaches","focused","defocused","classShape","classShapes","classTarget","additionalClassSuffix","additionalClass","classFocused","classDefocused","selectorLegend","dict","items","defocus","enabled","unzoom","clear","names","classes","categories","cacheIds","dataCount","baseTarget","baseValue","notfoundIds","orgDataCount","tail","missing","translateX","scaleX","flowIndex","flowLength","flowStart","flowEnd","durationForFlow","wait","ease","__data__","resetOther","isTargetId","isTargetIndex","unselect","transformTo","optionsForRedraw","grids","shown","category","labels","resize","detachEvent","removeEventListener","ua","userAgent","oThis","aArgs","fToBind","fNOP","fBound","SVGPathSeg","typeAsLetter","owningPathSegList","pathSegType","pathSegTypeAsLetter","_owningPathSegList","PATHSEG_UNKNOWN","PATHSEG_CLOSEPATH","PATHSEG_MOVETO_ABS","PATHSEG_MOVETO_REL","PATHSEG_LINETO_ABS","PATHSEG_LINETO_REL","PATHSEG_CURVETO_CUBIC_ABS","PATHSEG_CURVETO_CUBIC_REL","PATHSEG_CURVETO_QUADRATIC_ABS","PATHSEG_CURVETO_QUADRATIC_REL","PATHSEG_ARC_ABS","PATHSEG_ARC_REL","PATHSEG_LINETO_HORIZONTAL_ABS","PATHSEG_LINETO_HORIZONTAL_REL","PATHSEG_LINETO_VERTICAL_ABS","PATHSEG_LINETO_VERTICAL_REL","PATHSEG_CURVETO_CUBIC_SMOOTH_ABS","PATHSEG_CURVETO_CUBIC_SMOOTH_REL","PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS","PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL","_segmentChanged","segmentChanged","SVGPathSegClosePath","_asPathString","clone","SVGPathSegMovetoAbs","SVGPathSegMovetoRel","SVGPathSegLinetoAbs","SVGPathSegLinetoRel","SVGPathSegCurvetoCubicAbs","_x1","_y1","_y2","SVGPathSegCurvetoCubicRel","SVGPathSegCurvetoQuadraticAbs","SVGPathSegCurvetoQuadraticRel","SVGPathSegArcAbs","r1","r2","angle","largeArcFlag","sweepFlag","_r1","_r2","_angle","_largeArcFlag","_sweepFlag","SVGPathSegArcRel","SVGPathSegLinetoHorizontalAbs","SVGPathSegLinetoHorizontalRel","SVGPathSegLinetoVerticalAbs","SVGPathSegLinetoVerticalRel","SVGPathSegCurvetoCubicSmoothAbs","SVGPathSegCurvetoCubicSmoothRel","SVGPathSegCurvetoQuadraticSmoothAbs","SVGPathSegCurvetoQuadraticSmoothRel","SVGPathElement","createSVGPathSegClosePath","createSVGPathSegMovetoAbs","createSVGPathSegMovetoRel","createSVGPathSegLinetoAbs","createSVGPathSegLinetoRel","createSVGPathSegCurvetoCubicAbs","createSVGPathSegCurvetoCubicRel","createSVGPathSegCurvetoQuadraticAbs","createSVGPathSegCurvetoQuadraticRel","createSVGPathSegArcAbs","createSVGPathSegArcRel","createSVGPathSegLinetoHorizontalAbs","createSVGPathSegLinetoHorizontalRel","createSVGPathSegLinetoVerticalAbs","createSVGPathSegLinetoVerticalRel","createSVGPathSegCurvetoCubicSmoothAbs","createSVGPathSegCurvetoCubicSmoothRel","createSVGPathSegCurvetoQuadraticSmoothAbs","createSVGPathSegCurvetoQuadraticSmoothRel","SVGPathSegList","pathElement","_pathElement","_list","_parsePath","_mutationObserverConfig","attributeFilter","_pathElementMutationObserver","_updateListFromPathMutations","_checkPathSynchronizedToList","_pathSegList","takeRecords","mutationRecords","hasPathMutations","record","_writeListToPath","_pathSegArrayAsString","pathSeg","initialize","newItem","_checkValidIndex","numberOfItems","insertItemBefore","replaceItem","removeItem","appendItem","pathSegArray","first","Builder","appendSegment","Source","_string","_currentIndex","_endIndex","_previousCommand","_skipOptionalSpaces","_isCurrentSpace","character","_skipOptionalSpacesOrDelimiter","hasMoreData","peekSegmentType","lookahead","_pathSegTypeFromChar","_nextCommandHelper","previousCommand","initialCommandIsMoveTo","_parseNumber","integer","frac","decimal","sign","expsign","startIndex","startIntPartIndex","scanIntPartIndex","multiplier","_parseArcFlag","flag","flagChar","parseSegment","arcAngle","arcLarge","arcSweep","builder","__WEBPACK_AMD_DEFINE_FACTORY__","d3_documentElement","ownerDocument","documentElement","d3_window","defaultView","d3_ascending","d3_number","d3_numeric","d3_bisector","compare","lo","hi","mid","d3_zipLength","d3_range_integerScale","d3_class","ctor","d3_Map","d3_map_escape","d3_map_proto","d3_map_zero","d3_map_unescape","d3_map_has","d3_map_remove","d3_map_keys","d3_map_size","d3_map_empty","d3_Set","d3_identity","d3_rebind","d3_vendorSymbol","d3_vendorPrefixes","prefixName","d3_noop","d3_dispatch","d3_dispatch_event","listeners","listenerByName","d3_eventPreventDefault","preventDefault","d3_eventSource","d3_eventDispatch","of","thiz","argumentz","e1","e0","d3_selection","d3_subclass","d3_selectionPrototype","d3_selection_selector","d3_select","d3_selection_selectorAll","d3_selectAll","d3_selection_attr","attrNull","attrNullNS","removeAttributeNS","space","attrConstant","attrConstantNS","attrFunction","attrFunctionNS","ns","qualify","d3_collapse","d3_selection_classedRe","requote","d3_selection_classes","d3_selection_classed","classedConstant","classedFunction","d3_selection_classedName","re","classList","lastIndex","d3_selection_style","priority","styleNull","removeProperty","styleConstant","setProperty","styleFunction","d3_selection_property","propertyNull","propertyConstant","propertyFunction","d3_selection_creator","createNS","d3_selectionRemove","d3_selection_dataNode","d3_selection_filter","d3_selectMatches","d3_selection_sortComparator","comparator","d3_selection_each","group","d3_selection_enter","d3_selection_enterPrototype","d3_selection_enterInsertBefore","i0","j0","d3_selection_on","onRemove","$","onAdd","d3_array","removeAll","d3_selection_onListener","d3_selection_onFilters","d3_selection_onFilter","related","relatedTarget","compareDocumentPosition","d3_event_dragSuppress","d3_event_dragId","click","d3_event_dragSelect","suppressClick","off","d3_mousePoint","changedTouches","ownerSVGElement","createSVGPoint","point","d3_mouse_bug44083","scrollX","scrollY","border","ctm","getScreenCTM","pageX","pageY","matrixTransform","inverse","clientLeft","clientTop","d3_behavior_dragTouchId","identifier","d3_sgn","d3_cross2d","d3_acos","π","acos","d3_asin","halfπ","asin","d3_sinh","exp","d3_cosh","d3_tanh","d3_haversin","d3_color","d3_hsl","d3_rgb_parse","d3_rgb_hsl","d3_hsl_rgb","m1","m2","vv","d3_rgb","d3_hcl","d3_lab","d3_lab_hcl","d3_rgb_lab","d3_hcl_lab","d3_radians","d3_lab_rgb","d3_lab_xyz","d3_lab_X","d3_lab_Y","d3_lab_Z","d3_xyz_rgb","atan2","d3_degrees","d3_xyz_lab","d3_rgbNumber","d3_rgbString","d3_rgb_hex","hsl","exec","parseFloat","d3_rgb_parseNumber","d3_rgb_names","parseInt","d3_rgb_xyz","d3_functor","d3_xhrType","d3_xhr","respond","request","d3_xhrHasResponse","XMLHttpRequest","responseType","XDomainRequest","onerror","onreadystatechange","readyState","onprogress","progress","send","setRequestHeader","overrideMimeType","beforesend","abort","rebind","d3_xhr_fixCallback","responseText","d3_timer_step","d3_timer_mark","delay","d3_timer_sweep","isFinite","d3_timer_timeout","d3_timer_interval","d3_timer_frame","d3_timer_active","d3_timer_queueHead","t0","d3_timer_queueTail","d3_format_precision","LN10","d3_formatPrefix","symbol","d3_locale_numberFormat","locale","locale_decimal","locale_thousands","thousands","locale_grouping","grouping","locale_currency","currency","formatGroup","specifier","d3_format_re","align","zfill","comma","precision","suffix","d3_format_types","d3_format_typeDefault","zcomma","fullSuffix","negative","formatPrefix","before","after","lastIndexOf","d3_date_utc","UTC","d3_time_interval","d3_date","dt","times","range_utc","floor","d3_time_interval_utc","d3_locale_timeFormat","d3_time_format","template","charCodeAt","d3_time_formatPads","d3_time_formats","H","M","S","L","Z","d3_time_parse","localZ","setFullYear","W","U","setHours","d3_time_parsers","d3_time_parseWeekdayAbbrev","d3_time_dayAbbrevRe","d3_time_dayAbbrevLookup","d3_time_parseWeekday","d3_time_dayRe","d3_time_dayLookup","d3_time_parseMonthAbbrev","d3_time_monthAbbrevRe","d3_time_monthAbbrevLookup","d3_time_parseMonth","d3_time_monthRe","d3_time_monthLookup","d3_time_parseLocaleFull","d3_time_parseLocaleDate","d3_time_parseLocaleTime","X","d3_time_parseAmPm","d3_time_periodLookup","locale_dateTime","locale_date","locale_time","locale_periods","periods","locale_days","days","locale_shortDays","shortDays","locale_months","months","locale_shortMonths","shortMonths","d3_time_formatMulti","d3_time_formatRe","d3_time_formatLookup","A","B","d3_time_formatPad","I","d3_time","dayOfYear","sundayOfYear","mondayOfYear","Y","d3_time_zone","%","d3_time_parseDay","d3_time_parseHour24","d3_time_parseDayOfYear","d3_time_parseMilliseconds","d3_time_parseMonthNumber","d3_time_parseMinutes","d3_time_parseSeconds","d3_time_parseWeekNumberSunday","d3_time_parseWeekdayNumber","d3_time_parseWeekNumberMonday","d3_time_parseYear","d3_time_parseFullYear","d3_time_parseZone","d3_time_parseLiteralPercent","d3_time_numberRe","d3_time_expandYear","getTimezoneOffset","zs","zh","zm","d3_time_percentRe","formats","d3_adder","d3_adderSum","bv","av","d3_geo_streamGeometry","geometry","d3_geo_streamGeometryType","d3_geo_streamLine","coordinates","closed","coordinate","lineStart","lineEnd","d3_geo_streamPolygon","polygonStart","polygonEnd","d3_geo_areaRingStart","nextPoint","λ","φ","dλ","λ0","sdλ","adλ","cosφ","sinφ","sinφ0","cosφ0","d3_geo_areaRingSum","λ00","φ00","d3_geo_area","d3_geo_cartesian","spherical","d3_geo_cartesianDot","d3_geo_cartesianCross","d3_geo_cartesianAdd","d3_geo_cartesianScale","vector","d3_geo_cartesianNormalize","d3_geo_spherical","cartesian","d3_geo_sphericalEqual","ε","d3_geo_centroidPoint","d3_geo_centroidPointXYZ","d3_geo_centroidW0","d3_geo_centroidX0","d3_geo_centroidY0","d3_geo_centroidZ0","d3_geo_centroidLineStart","z0","d3_geo_centroidW1","d3_geo_centroidX1","d3_geo_centroidY1","d3_geo_centroidZ1","d3_geo_centroid","d3_geo_centroidLineEnd","d3_geo_centroidRingStart","cz","d3_geo_centroidX2","d3_geo_centroidY2","d3_geo_centroidZ2","d3_geo_compose","invert","d3_true","d3_geo_clipPolygon","segments","clipStartInside","subject","segment","p0","p1","d3_geo_clipPolygonIntersection","d3_geo_clipPolygonLinkCircular","entry","isSubject","other","d3_geo_clip","pointVisible","clipLine","clipStart","pointLine","pointRing","ring","ringListener","ringStart","ringEnd","clean","ringSegments","buffer","polygon","polygonStarted","d3_geo_clipSegmentLength1","rotatedClipStart","d3_geo_pointInPolygon","d3_geo_clipSort","sphere","d3_geo_clipBufferListener","rejoin","d3_geo_clipAntimeridianLine","φ0","sλ0","λ1","φ1","sλ1","d3_geo_clipAntimeridianIntersect","cosφ1","sinλ0_λ1","atan","d3_geo_clipAntimeridianInterpolate","meridian","parallel","meridianNormal","polarAngle","winding","point0","antimeridian","τ","intersection","φarc","d3_geo_clipCircle","visible","cr","c0","v0","v00","point2","point1","smallRadius","code","intersect","notHemisphere","two","pa","pb","n1","n2","n2n2","n1n2","determinant","c1","c2","n1xn2","uu","q","δλ","polar","q1","d3_geo_circleInterpolate","d3_geom_clipLine","ax","ay","bx","d3_geo_clipExtent","corner","comparePoints","ca","cb","insidePolygon","wn","a1","linePoint","v_","x_","y_","x__","y__","v__","bufferListener","d3_geo_clipExtentMAX","listener_","inside","d3_geo_conic","projectAt","d3_geo_projectionMutator","parallels","d3_geo_conicEqualArea","forward","ρ","C","ρ0","ρ0_y","d3_geo_pathAreaRingStart","d3_geo_pathAreaPolygon","x00","y00","d3_geo_pathArea","d3_geo_pathBoundsPoint","d3_geo_pathBoundsX0","d3_geo_pathBoundsX1","d3_geo_pathBoundsY0","d3_geo_pathBoundsY1","d3_geo_pathBuffer","pointCircle","pointLineStart","lineEndPolygon","d3_geo_pathBufferCircle","pointRadius","d3_geo_pathCentroidPoint","d3_geo_pathCentroidLineStart","d3_geo_pathCentroid","d3_geo_pathCentroidLineEnd","d3_geo_pathCentroidRingStart","d3_geo_pathContext","moveTo","lineTo","closePath","d3_geo_resample","project","resample","maxDepth","resampleRecursive","resampleNone","d3_geo_transformPoint","resampleLineTo","a0","b0","ringPoint","a00","b00","c00","b1","depth","d2","δ2","φ2","λ2","dx2","dy2","dz","cosMinDistance","d3_geo_pathProjectStream","d3_geo_projectionRadians","d3_geo_transform","d3_geo_projection","projection","projectRotate","δx","δy","d3_geo_rotation","δφ","δγ","invalidate","valid","projectResample","preclip","d3_geo_clipAntimeridian","postclip","clipAngle","clipExtent","d3_geo_equirectangular","d3_geo_identityRotation","d3_geo_rotationλ","d3_geo_rotationφγ","d3_geo_forwardRotationλ","rotation","cosδφ","sinδφ","cosδγ","sinδγ","sr","d3_geo_circleAngle","d3_geo_graticuleX","d3_geo_graticuleY","d3_source","d3_target","d3_geo_interpolate","cy0","sy0","cy1","sy1","kx0","ky0","kx1","ky1","distance","d3_geo_lengthLineStart","cosΔλ","d3_geo_lengthSum","d3_geo_length","d3_geo_azimuthal","azimuthal","cosλ","sinc","cosc","d3_geo_conicConformal","F","tan","d3_geo_mercator","d3_geo_conicEquidistant","G","d3_geo_mercatorProjection","clipAuto","d3_geo_transverseMercator","d3_geom_pointX","d3_geom_pointY","d3_geom_hullUpper","hull","hs","d3_geom_hullOrder","d3_geom_polygonInside","d3_geom_polygonIntersect","x3","x21","x43","y3","y21","y43","d3_geom_polygonClosed","d3_geom_voronoiBeach","d3_geom_voronoiRedBlackNode","edge","site","d3_geom_voronoiCreateBeach","beach","d3_geom_voronoiBeachPool","d3_geom_voronoiDetachBeach","d3_geom_voronoiDetachCircle","d3_geom_voronoiBeaches","d3_geom_voronoiRemoveBeach","vertex","previous","P","N","disappearing","lArc","rArc","iArc","nArcs","d3_geom_voronoiSetEdgeEnd","d3_geom_voronoiCreateEdge","d3_geom_voronoiAttachCircle","d3_geom_voronoiAddBeach","dxl","dxr","directrix","d3_geom_voronoiLeftBreakPoint","d3_geom_voronoiRightBreakPoint","R","lSite","rSite","hb","hc","rfocx","rfocy","pby2","lfocx","lfocy","plby2","hl","aby2","d3_geom_voronoiCell","edges","d3_geom_voronoiCloseCells","cell","iHalfEdge","halfEdges","nHalfEdges","cells","d3_geom_voronoiCells","iCell","prepare","d3_geom_voronoiHalfEdge","d3_geom_voronoiCreateBorderEdge","d3_geom_voronoiHalfEdgeOrder","d3_geom_voronoiCircle","cSite","ε2","ha","d3_geom_voronoiCirclePool","d3_geom_voronoiCircles","d3_geom_voronoiFirstCircle","d3_geom_voronoiClipEdges","d3_geom_voronoiEdges","d3_geom_voronoiConnectEdge","vb","fm","fb","va","lx","ly","d3_geom_voronoiEdge","d3_geom_voronoiRedBlackTree","d3_geom_voronoiRedBlackRotateLeft","tree","d3_geom_voronoiRedBlackRotateRight","d3_geom_voronoiRedBlackFirst","d3_geom_voronoi","sites","d3_geom_voronoiVertexOrder","diagram","d3_geom_voronoiTriangleArea","d3_geom_quadtreeCompatX","d3_geom_quadtreeCompatY","d3_geom_quadtreeNode","leaf","nodes","d3_geom_quadtreeVisit","d3_geom_quadtreeFind","root","closestPoint","minDistance2","distance2","xm","ym","below","d3_interpolateRgb","ar","ag","ab","br","bg","bb","d3_interpolateObject","d3_interpolate","d3_interpolateNumber","d3_interpolateString","am","bm","bs","bi","d3_interpolate_numberA","d3_interpolate_numberB","interpolators","d3_interpolateArray","na","nb","n0","d3_ease_clamp","d3_ease_reverse","d3_ease_reflect","d3_ease_quad","d3_ease_cubic","d3_ease_cubicInOut","t3","d3_ease_poly","d3_ease_sin","d3_ease_exp","d3_ease_circle","d3_ease_elastic","d3_ease_back","d3_ease_bounce","d3_interpolateHcl","hcl","ah","ac","al","bh","bc","bl","d3_interpolateHsl","as","d3_interpolateLab","lab","aa","ba","d3_interpolateRound","d3_transform","r0","kx","d3_transformNormalize","kz","d3_transformDot","ky","d3_transformCombine","skew","d3_interpolateTransform","ta","tb","ra","rb","wa","wb","ka","kb","d3_uninterpolateNumber","d3_uninterpolateClamp","d3_layout_bundlePath","link","lca","d3_layout_bundleLeastCommonAncestor","d3_layout_bundleAncestors","ancestors","aNodes","bNodes","aNode","bNode","sharedNode","d3_layout_forceDragstart","fixed","d3_layout_forceDragend","d3_layout_forceMouseover","px","py","d3_layout_forceMouseout","d3_layout_forceAccumulate","quad","alpha","charges","charge","pointCharge","d3_layout_hierarchyRebind","hierarchy","links","d3_layout_hierarchyLinks","d3_layout_hierarchyVisitBefore","d3_layout_hierarchyVisitAfter","nodes2","d3_layout_hierarchyChildren","d3_layout_hierarchyValue","d3_layout_hierarchySort","d3_layout_stackX","d3_layout_stackY","d3_layout_stackOut","d3_layout_stackOrderDefault","d3_layout_stackOffsetZero","d3_layout_stackMaxIndex","d3_layout_stackReduceSum","d3_layout_stackSum","d3_layout_histogramBinSturges","d3_layout_histogramBinFixed","LN2","d3_layout_histogramRange","d3_layout_packSort","d3_layout_packInsert","_pack_next","_pack_prev","d3_layout_packSplice","d3_layout_packIntersects","dr","d3_layout_packSiblings","bound","d3_layout_packLink","d3_layout_packPlace","isect","s1","s2","d3_layout_packUnlink","d3_layout_packTransform","db","da","dc","d3_layout_treeSeparation","d3_layout_treeLeft","d3_layout_treeRight","d3_layout_treeMove","wm","wp","change","d3_layout_treeShift","d3_layout_treeAncestor","vim","ancestor","d3_layout_clusterY","d3_layout_clusterX","d3_layout_clusterLeft","d3_layout_clusterRight","d3_layout_treemapPadNull","d3_layout_treemapPad","d3_scaleExtent","d3_scaleRange","d3_scale_bilinear","uninterpolate","d3_scale_nice","nice","i1","d3_scale_niceStep","d3_scale_niceIdentity","d3_scale_polylinear","bisect","d3_scale_linear","clamp","rescale","Number","rangeRound","d3_scale_linearTicks","d3_scale_linearTickFormat","d3_scale_linearNice","d3_scale_linearRebind","d3_scale_linearTickRange","d3_scale_linearPrecision","d3_scale_linearFormatPrecision","d3_scale_linearFormatSignificant","d3_scale_log","positive","niced","d3_scale_logNiceNegative","d3_scale_logFormat","d3_scale_pow","powp","d3_scale_powPow","powb","d3_scale_ordinal","ranger","xi","rangePoints","rangeRoundPoints","rangeBands","outerPadding","rangeRoundBands","d3_scale_quantile","thresholds","quantile","quantiles","invertExtent","d3_scale_quantize","d3_scale_threshold","d3_scale_identity","d3_zero","d3_svg_arcInnerRadius","d3_svg_arcOuterRadius","d3_svg_arcStartAngle","d3_svg_arcEndAngle","d3_svg_arcPadAngle","padAngle","d3_svg_arcSweep","d3_svg_arcCornerTangents","rc","cw","x01","y01","ox","oy","D","cx0","cx1","dx0","dy0","dx1","dy1","d3_svg_line","tension","d3_svg_lineLinear","interpolateKey","d3_svg_lineInterpolators","d3_svg_lineLinearClosed","d3_svg_lineStep","d3_svg_lineStepBefore","d3_svg_lineStepAfter","d3_svg_lineCardinalOpen","d3_svg_lineHermite","d3_svg_lineCardinalTangents","d3_svg_lineCardinalClosed","d3_svg_lineCardinal","tangents","pi","lp","p2","d3_svg_lineBasis","d3_svg_lineDot4","d3_svg_lineBasisBezier3","d3_svg_lineBasisBezier","d3_svg_lineBasisOpen","d3_svg_lineBasisClosed","d3_svg_lineBundle","d3_svg_lineBasisBezier1","d3_svg_lineBasisBezier2","d3_svg_lineSlope","d3_svg_lineFiniteDifferences","d3_svg_lineMonotoneTangents","d3_svg_lineMonotone","d3_svg_lineRadial","d3_svg_area","points1","interpolateReverse","points0","fx0","fy0","fx1","fy1","d3_svg_chordRadius","d3_svg_diagonalProjection","d3_svg_diagonalRadialProjection","d3_svg_symbolSize","d3_svg_symbolType","d3_svg_symbolCircle","d3_selection_interruptNS","lock","active","interrupt","d3_transition","d3_transitionPrototype","d3_transition_tween","tween","d3_transition_text","d3_transitionNamespace","d3_transitionNode","elapsed","tweened","d3_svg_axisX","d3_svg_axisY","d3_time_formatIsoNative","toISOString","d3_time_scale","methods","tickMethod","d3_time_scaleSteps","year","d3_time_scaleMilliseconds","d3_time_scaleDate","skip","skipped","d3_json","d3_html","d3_document","createRange","selectNode","body","createContextualFragment","d3_arraySlice","nodeType","d3_element_prototype","Element","d3_element_setAttribute","d3_element_setAttributeNS","d3_style_prototype","CSSStyleDeclaration","d3_style_setProperty","ascending","descending","sum","mean","median","numbers","variance","deviation","d3_bisect","bisectLeft","bisectRight","bisector","shuffle","permute","indexes","permutes","pairs","zip","zips","transpose","matrix","entries","arrays","merged","nest","mapType","rollup","sortValues","keyValue","setter","valuesByKey","sortKey","sortKeys","d3_requote_re","querySelector","querySelectorAll","d3_selectMatcher","matches","Sizzle","matchesSelector","subgroup","subnode","subgroups","d3_nsPrefix","xhtml","xmlns","getAttributeNS","contains","getComputedStyle","getPropertyValue","groupData","nodeData","updateNodes","enterNodes","exitNodes","nodeByKeyValue","keyValues","nextSibling","upgroup","mouseenter","mouseleave","touch","touches","mousedown","touchstart","move","moved","position1","dragId","position0","dragged","dragOffset","ended","dragSubject","dragName","dragRestore","τε","SQRT2","ρ2","ρ4","interpolateZoom","coshr0","w0","ux0","uy0","ux1","uy1","w1","mousedowned","d3_behavior_zoomWheel","mousewheeled","dblclicked","touchstarted","location","view","scaleTo","translateTo","zoomTo","center0","zoomstarted","zooming","zoomed","zoomended","location0","mousemove","mouseup","d3_selection_interrupt","relocate","locations0","started","touchmove","touchend","changed","touchtime","distance0","l0","l1","distance1","zoomName","mousewheelTimer","translate0","d3_behavior_zoomDelta","shiftKey","d3_behavior_zoomInfinity","deltaY","deltaMode","wheelDelta","view1","d3_transitionInheritId","d3_hslPrototype","darker","d3_hclPrototype","d3_lab_K","d3_labPrototype","d3_rgbPrototype","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","functor","dsv","delimiter","row","typedResponse","formatRow","formatValue","reFormat","delimiterCode","token","EOF","eol","EOL","formatRows","fieldSet","fields","d3_formatPrefixes","fromCharCode","toPrecision","toExponential","getUTCDate","getUTCDay","getUTCFullYear","getUTCHours","getUTCMilliseconds","getUTCMinutes","getUTCMonth","getUTCSeconds","valueOf","setDate","d3_time_prototype","setUTCDate","setDay","setUTCDay","setUTCFullYear","setUTCHours","setMilliseconds","setUTCMilliseconds","setMinutes","setUTCMinutes","setMonth","setUTCMonth","setSeconds","setUTCSeconds","setTime","day","years","week","sunday","weeks","weekOfYear","-","0","numberFormat","timeFormat","d3_locale_enUS","geo","d3_adderTemp","d3_geo_streamObjectType","Feature","feature","FeatureCollection","features","Sphere","Point","MultiPoint","LineString","MultiLineString","Polygon","MultiPolygon","GeometryCollection","geometries","d3_geo_areaSum","bounds","ranges","normal","equatorial","inflection","λ_","λi","φi","dλSum","λ__","φ__","compareRanges","withinRange","best","conicEqualArea","albers","albersUsa","lower48Point","alaskaPoint","hawaiiPoint","lower48","alaska","hawaii","pointStream","lower48Stream","alaskaStream","hawaiiStream","d3_geo_pathAreaSum","d3_geo_pathBounds","contextStream","cacheStream","projectStream","projectionMutator","equirectangular","Δλ","sinΔλ","sinφ1","graticule","X0","DX","X1","Y0","DY","Y1","outline","majorExtent","minorExtent","majorStep","minorStep","greatArc","source_","target_","d3_geo_azimuthalEqualArea","cosλcosφ","azimuthalEqualArea","d3_geo_azimuthalEquidistant","azimuthalEquidistant","conicConformal","conicEquidistant","d3_geo_gnomonic","gnomonic","mercator","d3_geo_orthographic","orthographic","d3_geo_stereographic","stereographic","transverseMercator","geom","vertices","flippedPoints","upper","lower","skipLeft","skipRight","d3_geom_polygonPrototype","grandpa","uncle","sibling","voronoi","polygons","d3_geom_voronoiClipExtent","triangles","s0","delaunay","quadtree","nx","ny","insertChild","nPoint","x1_","y1_","x2_","y2_","compat","visit","interpolateRgb","interpolateObject","interpolateNumber","interpolateString","interpolateArray","d3_ease_default","d3_ease","poly","cubic","elastic","back","bounce","d3_ease_mode","out","in-out","out-in","interpolateHcl","interpolateHsl","interpolateLab","interpolateRound","baseVal","consolidate","d3_transformIdentity","interpolateTransform","bundle","paths","chord","relayout","groupSums","groupIndex","subgroupIndex","chords","sortGroups","sortSubgroups","di","dj","subindex","sortChords","resort","repulse","dw","dn","theta2","chargeDistance2","dragmove","resume","distances","strengths","friction","linkDistance","d3_layout_forceLinkDistance","linkStrength","d3_layout_forceLinkStrength","d3_layout_forceChargeDistance2","gravity","weight","chargeDistance","theta","dimension","neighbors","stack","childs","revalue","partition","d3_layout_pieSortByValue","series","orders","d3_layout_stackOrders","d3_layout_stackOffsets","inside-out","sums","tops","bottoms","silhouette","wiggle","s3","o0","expand","zero","histogram","bin","bins","valuer","binner","frequency","pack","root0","root1","wrapTree","firstWalk","secondWalk","nodeSize","sizeNode","tx","separation","node1","queue","siblings","midpoint","apportion","vip","vop","vom","sip","sop","sim","som","cluster","previousNode","treemap","squarify","score","pad","remaining","worst","stickify","rmax","rmin","stickies","sticky","padFunction","padConstant","µ","σ","logNormal","bates","irwinHall","ordinal","d3_category10","category20","d3_category20","category20b","d3_category20b","category20c","d3_category20c","quantize","circleSegment","rp","ap","padRadius","d3_svg_arcAuto","h1","h0","cornerRadius","oc","kc","lc","rc1","t30","t12","rc0","t03","t21","linear-closed","step-before","step-after","basis","basis-open","basis-closed","cardinal","cardinal-open","cardinal-closed","monotone","radial","equals","curve","self","diagonal","p3","projection_","d3_svg_symbols","cross","diamond","d3_svg_symbolTan30","square","triangle-down","d3_svg_symbolSqrt3","triangle-up","symbolTypes","d3_transitionId","d3_transitionInherit","subnodes","nameNS","attrTweenNS","styleString","styleTween","inheritId","id0","id1","tickArguments_","tickFormat_","tickSpacing","d3_svg_axisDefaultOrient","d3_svg_axisOrients","tickSubdivide","brushstart","resizes","d3_svg_brushCursor","gUpdate","backgroundUpdate","redrawX","redrawY","xExtent","yExtent","keydown","keyCode","keyup","brushmove","resizingX","move1","resizingY","event_","yClamp","xClamp","yExtentDomain","xExtentDomain","brushend","eventTarget","resizing","d3_svg_brushResizes","extent1","extent0","yi","nw","ne","se","sw","d3_time_formatUtc","d3_time_formatIso","iso","second","seconds","minute","minutes","hour","timezone","hours","month","d3_time_scaleLocalMethods","d3_time_scaleLocalFormat","d3_time_scaleUtcMethods","d3_time_scaleUtcFormat","responseXML","_extends","rowId","navigateToItem","listingDetail","expanded","activeTab","loadedTabs","handleNavigateClick","handleExpandClick","willBeExpanded","tabIdx","tabPresence","stopPropagation","handleTabClick","prevTab","prevTabPresence","allowNavigate","headerEntries","itm","tight","allowExpand","expandToggle","listingItemClasses","listingItem","data-row-id","Renderer","rendererData","idx","tabs","fullWidth","emptyCaption","actions","bodyClasses","headerClasses","headerRow"],"mappings":"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","file":"machines/machines.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(9);\n\tmodule.exports = __webpack_require__(32);\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t(function() {\n\t  \"use strict\";\n\t\n\t  document.addEventListener(\"DOMContentLoaded\", function() {\n\t    var vmsApp = __webpack_require__(10);\n\t    vmsApp.appMain();\n\t  });\n\t}());\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*jshint esversion: 6 */\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\texports.appMain = appMain;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _react = __webpack_require__(11);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _storeEs6 = __webpack_require__(12);\n\t\n\tvar _storeEs62 = _interopRequireDefault(_storeEs6);\n\t\n\tvar _appJsx = __webpack_require__(19);\n\t\n\tvar _appJsx2 = _interopRequireDefault(_appJsx);\n\t\n\tvar _actionsEs6 = __webpack_require__(21);\n\t\n\tvar _helpersEs6 = __webpack_require__(16);\n\t\n\tfunction render() {\n\t    _react2['default'].render(_react2['default'].createElement(_appJsx2['default'], { store: _storeEs62['default'] }), document.getElementById('app'));\n\t}\n\t\n\t/**\n\t * Start the application.\n\t */\n\t\n\tfunction appMain() {\n\t    (0, _helpersEs6.logDebug)('index.es6: initial state: ' + JSON.stringify(_storeEs62['default'].getState()));\n\t\n\t    // re-render app every time the state changes\n\t    _storeEs62['default'].subscribe(render);\n\t\n\t    // do initial render\n\t    render();\n\t\n\t    // initiate data retrieval\n\t    _storeEs62['default'].dispatch((0, _actionsEs6.getAllVms)());\n\t}\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * react-lite.js v0.15.6\n\t * (c) 2016 Jade Gu\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.React = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var SVGNamespaceURI = 'http://www.w3.org/2000/svg';\n\t  var COMPONENT_ID = 'liteid';\n\t  var VELEMENT = 2;\n\t  var VSTATELESS = 3;\n\t  var VCOMPONENT = 4;\n\t  var VCOMMENT = 5;\n\t\n\t  var refs = null;\n\t\n\t  function createVelem(type, props) {\n\t      return {\n\t          vtype: VELEMENT,\n\t          type: type,\n\t          props: props,\n\t          refs: refs\n\t      };\n\t  }\n\t\n\t  function createVstateless(type, props) {\n\t      return {\n\t          vtype: VSTATELESS,\n\t          id: getUid(),\n\t          type: type,\n\t          props: props\n\t      };\n\t  }\n\t\n\t  function createVcomponent(type, props) {\n\t      return {\n\t          vtype: VCOMPONENT,\n\t          id: getUid(),\n\t          type: type,\n\t          props: props,\n\t          refs: refs\n\t      };\n\t  }\n\t\n\t  function createVcomment(comment) {\n\t      return {\n\t          vtype: VCOMMENT,\n\t          comment: comment\n\t      };\n\t  }\n\t\n\t  function initVnode(vnode, parentContext, namespaceURI) {\n\t      var vtype = vnode.vtype;\n\t\n\t      var node = null;\n\t      if (!vtype) {\n\t          node = document.createTextNode(vnode);\n\t      } else if (vtype === VELEMENT) {\n\t          node = initVelem(vnode, parentContext, namespaceURI);\n\t      } else if (vtype === VCOMPONENT) {\n\t          node = initVcomponent(vnode, parentContext, namespaceURI);\n\t      } else if (vtype === VSTATELESS) {\n\t          node = initVstateless(vnode, parentContext, namespaceURI);\n\t      } else if (vtype === VCOMMENT) {\n\t          node = document.createComment(vnode.comment);\n\t      }\n\t      return node;\n\t  }\n\t\n\t  function destroyVnode(vnode, node) {\n\t      var vtype = vnode.vtype;\n\t\n\t      if (vtype === VELEMENT) {\n\t          destroyVelem(vnode, node);\n\t      } else if (vtype === VCOMPONENT) {\n\t          destroyVcomponent(vnode, node);\n\t      } else if (vtype === VSTATELESS) {\n\t          destroyVstateless(vnode, node);\n\t      }\n\t  }\n\t\n\t  function initVelem(velem, parentContext, namespaceURI) {\n\t      var type = velem.type;\n\t      var props = velem.props;\n\t\n\t      var node = null;\n\t\n\t      if (type === 'svg' || namespaceURI === SVGNamespaceURI) {\n\t          node = document.createElementNS(SVGNamespaceURI, type);\n\t          namespaceURI = SVGNamespaceURI;\n\t      } else {\n\t          node = document.createElement(type);\n\t      }\n\t\n\t      var children = props.children;\n\t\n\t      var vchildren = node.vchildren = [];\n\t      if (isArr(children)) {\n\t          flattenChildren(children, collectChild, vchildren);\n\t      } else {\n\t          collectChild(children, vchildren);\n\t      }\n\t\n\t      for (var i = 0, len = vchildren.length; i < len; i++) {\n\t          node.appendChild(initVnode(vchildren[i], parentContext, namespaceURI));\n\t      }\n\t\n\t      var isCustomComponent = type.indexOf('-') >= 0 || props.is != null;\n\t      setProps(node, props, isCustomComponent);\n\t\n\t      attachRef(velem.refs, velem.ref, node);\n\t\n\t      return node;\n\t  }\n\t\n\t  function collectChild(child, children) {\n\t      if (child != null && typeof child !== 'boolean') {\n\t          children[children.length] = child.vtype ? child : '' + child;\n\t      }\n\t  }\n\t\n\t  function updateVelem(velem, newVelem, node, parentContext) {\n\t      var props = velem.props;\n\t      var type = velem.type;\n\t\n\t      var newProps = newVelem.props;\n\t      var oldHtml = props.dangerouslySetInnerHTML && props.dangerouslySetInnerHTML.__html;\n\t      var newChildren = newProps.children;\n\t      var vchildren = node.vchildren;\n\t      var childNodes = node.childNodes;\n\t      var namespaceURI = node.namespaceURI;\n\t\n\t      var isCustomComponent = type.indexOf('-') >= 0 || props.is != null;\n\t      var vchildrenLen = vchildren.length;\n\t      var newVchildren = node.vchildren = [];\n\t\n\t      if (isArr(newChildren)) {\n\t          flattenChildren(newChildren, collectChild, newVchildren);\n\t      } else {\n\t          collectChild(newChildren, newVchildren);\n\t      }\n\t\n\t      var newVchildrenLen = newVchildren.length;\n\t\n\t      if (oldHtml == null && vchildrenLen) {\n\t          var shouldRemove = null;\n\t          var patches = Array(newVchildrenLen);\n\t\n\t          for (var i = 0; i < vchildrenLen; i++) {\n\t              var vnode = vchildren[i];\n\t              for (var j = 0; j < newVchildrenLen; j++) {\n\t                  if (patches[j]) {\n\t                      continue;\n\t                  }\n\t                  var newVnode = newVchildren[j];\n\t                  if (vnode === newVnode) {\n\t                      patches[j] = {\n\t                          vnode: vnode,\n\t                          node: childNodes[i]\n\t                      };\n\t                      vchildren[i] = null;\n\t                      break;\n\t                  }\n\t              }\n\t          }\n\t\n\t          outer: for (var i = 0; i < vchildrenLen; i++) {\n\t              var vnode = vchildren[i];\n\t              if (vnode === null) {\n\t                  continue;\n\t              }\n\t              var _type = vnode.type;\n\t              var key = vnode.key;\n\t              var _refs = vnode.refs;\n\t\n\t              var childNode = childNodes[i];\n\t\n\t              for (var j = 0; j < newVchildrenLen; j++) {\n\t                  if (patches[j]) {\n\t                      continue;\n\t                  }\n\t                  var newVnode = newVchildren[j];\n\t                  if (newVnode.type === _type && newVnode.key === key && newVnode.refs === _refs) {\n\t                      patches[j] = {\n\t                          vnode: vnode,\n\t                          node: childNode\n\t                      };\n\t                      continue outer;\n\t                  }\n\t              }\n\t\n\t              if (!shouldRemove) {\n\t                  shouldRemove = [];\n\t              }\n\t              shouldRemove[shouldRemove.length] = childNode;\n\t              // shouldRemove.push(childNode)\n\t              destroyVnode(vnode, childNode);\n\t          }\n\t\n\t          if (shouldRemove) {\n\t              for (var i = 0, len = shouldRemove.length; i < len; i++) {\n\t                  node.removeChild(shouldRemove[i]);\n\t              }\n\t          }\n\t\n\t          for (var i = 0; i < newVchildrenLen; i++) {\n\t              var newVnode = newVchildren[i];\n\t              var patchItem = patches[i];\n\t              if (patchItem) {\n\t                  var vnode = patchItem.vnode;\n\t                  var newChildNode = patchItem.node;\n\t                  if (newVnode !== vnode) {\n\t                      var vtype = newVnode.vtype;\n\t                      if (!vtype) {\n\t                          // textNode\n\t                          newChildNode.nodeValue = newVnode;\n\t                          // newChildNode.replaceData(0, vnode.length, newVnode)\n\t                      } else if (vtype === VELEMENT) {\n\t                              newChildNode = updateVelem(vnode, newVnode, newChildNode, parentContext);\n\t                          } else if (vtype === VCOMPONENT) {\n\t                              newChildNode = updateVcomponent(vnode, newVnode, newChildNode, parentContext);\n\t                          } else if (vtype === VSTATELESS) {\n\t                              newChildNode = updateVstateless(vnode, newVnode, newChildNode, parentContext);\n\t                          }\n\t                  }\n\t                  var currentNode = childNodes[i];\n\t                  if (currentNode !== newChildNode) {\n\t                      node.insertBefore(newChildNode, currentNode || null);\n\t                  }\n\t              } else {\n\t                  var newChildNode = initVnode(newVnode, parentContext, namespaceURI);\n\t                  node.insertBefore(newChildNode, childNodes[i] || null);\n\t              }\n\t          }\n\t          patchProps(node, props, newProps, isCustomComponent);\n\t      } else {\n\t          // should patch props first, make sure innerHTML was cleared\n\t          patchProps(node, props, newProps, isCustomComponent);\n\t          for (var i = 0; i < newVchildrenLen; i++) {\n\t              node.appendChild(initVnode(newVchildren[i], parentContext, namespaceURI));\n\t          }\n\t      }\n\t\n\t      if (velem.ref !== newVelem.ref) {\n\t          detachRef(velem.refs, velem.ref);\n\t          attachRef(newVelem.refs, newVelem.ref, node);\n\t      }\n\t      return node;\n\t  }\n\t\n\t  function destroyVelem(velem, node) {\n\t      var props = velem.props;\n\t      var vchildren = node.vchildren;\n\t      var childNodes = node.childNodes;\n\t\n\t      for (var i = 0, len = vchildren.length; i < len; i++) {\n\t          destroyVnode(vchildren[i], childNodes[i]);\n\t      }\n\t\n\t      detachRef(velem.refs, velem.ref);\n\t\n\t      node.eventStore = node.vchildren = null;\n\t      for (var key in props) {\n\t          if (props.hasOwnProperty(key) && EVENT_KEYS.test(key)) {\n\t              key = getEventName(key);\n\t              if (notBubbleEvents[key] === true) {\n\t                  node[key] = null;\n\t              }\n\t          }\n\t      }\n\t  }\n\t\n\t  function initVstateless(vstateless, parentContext, namespaceURI) {\n\t      var vnode = renderVstateless(vstateless, parentContext);\n\t      var node = initVnode(vnode, parentContext, namespaceURI);\n\t      node.cache = node.cache || {};\n\t      node.cache[vstateless.id] = vnode;\n\t      return node;\n\t  }\n\t  function updateVstateless(vstateless, newVstateless, node, parentContext) {\n\t      var id = vstateless.id;\n\t      var vnode = node.cache[id];\n\t      delete node.cache[id];\n\t      var newVnode = renderVstateless(newVstateless, parentContext);\n\t      var newNode = compareTwoVnodes(vnode, newVnode, node, parentContext);\n\t      newNode.cache = newNode.cache || {};\n\t      newNode.cache[newVstateless.id] = newVnode;\n\t      if (newNode !== node) {\n\t          extend(newNode.cache, node.cache);\n\t      }\n\t      return newNode;\n\t  }\n\t  function destroyVstateless(vstateless, node) {\n\t      var id = vstateless.id;\n\t      var vnode = node.cache[id];\n\t      delete node.cache[id];\n\t      destroyVnode(vnode, node);\n\t  }\n\t\n\t  function renderVstateless(vstateless, parentContext) {\n\t      var factory = vstateless.type;\n\t      var props = vstateless.props;\n\t\n\t      var componentContext = getContextByTypes(parentContext, factory.contextTypes);\n\t      var vnode = factory(props, componentContext);\n\t      if (vnode && vnode.render) {\n\t          vnode = vnode.render();\n\t      }\n\t      if (vnode === null || vnode === false) {\n\t          vnode = createVcomment('react-empty: ' + getUid());\n\t      } else if (!vnode || !vnode.vtype) {\n\t          throw new Error('@' + factory.name + '#render:You may have returned undefined, an array or some other invalid object');\n\t      }\n\t      return vnode;\n\t  }\n\t\n\t  function initVcomponent(vcomponent, parentContext, namespaceURI) {\n\t      var Component = vcomponent.type;\n\t      var props = vcomponent.props;\n\t      var id = vcomponent.id;\n\t\n\t      var componentContext = getContextByTypes(parentContext, Component.contextTypes);\n\t      var component = new Component(props, componentContext);\n\t      var updater = component.$updater;\n\t      var cache = component.$cache;\n\t\n\t      cache.parentContext = parentContext;\n\t      updater.isPending = true;\n\t      component.props = component.props || props;\n\t      component.context = component.context || componentContext;\n\t      if (component.componentWillMount) {\n\t          component.componentWillMount();\n\t          component.state = updater.getState();\n\t      }\n\t      var vnode = renderComponent(component, parentContext);\n\t      var node = initVnode(vnode, vnode.context, namespaceURI);\n\t      node.cache = node.cache || {};\n\t      node.cache[id] = component;\n\t      cache.vnode = vnode;\n\t      cache.node = node;\n\t      cache.isMounted = true;\n\t      pendingComponents.push(component);\n\t      attachRef(vcomponent.refs, vcomponent.ref, component);\n\t      return node;\n\t  }\n\t  function updateVcomponent(vcomponent, newVcomponent, node, parentContext) {\n\t      var id = vcomponent.id;\n\t      var component = node.cache[id];\n\t      var updater = component.$updater;\n\t      var cache = component.$cache;\n\t      var Component = newVcomponent.type;\n\t      var nextProps = newVcomponent.props;\n\t\n\t      var componentContext = getContextByTypes(parentContext, Component.contextTypes);\n\t      delete node.cache[id];\n\t      node.cache[newVcomponent.id] = component;\n\t      cache.parentContext = parentContext;\n\t      if (component.componentWillReceiveProps) {\n\t          updater.isPending = true;\n\t          component.componentWillReceiveProps(nextProps, componentContext);\n\t          updater.isPending = false;\n\t      }\n\t      updater.emitUpdate(nextProps, componentContext);\n\t\n\t      if (vcomponent.ref !== newVcomponent.ref) {\n\t          detachRef(vcomponent.refs, vcomponent.ref);\n\t          attachRef(newVcomponent.refs, newVcomponent.ref, component);\n\t      }\n\t      return cache.node;\n\t  }\n\t  function destroyVcomponent(vcomponent, node) {\n\t      var id = vcomponent.id;\n\t      var component = node.cache[id];\n\t      var cache = component.$cache;\n\t      delete node.cache[id];\n\t      detachRef(vcomponent.refs, vcomponent.ref);\n\t      component.setState = component.forceUpdate = noop;\n\t      if (component.componentWillUnmount) {\n\t          component.componentWillUnmount();\n\t      }\n\t      destroyVnode(cache.vnode, node);\n\t      delete component.setState;\n\t      cache.isMounted = false;\n\t      cache.node = cache.parentContext = cache.vnode = component.refs = component.context = null;\n\t  }\n\t\n\t  function getContextByTypes(curContext, contextTypes) {\n\t      var context = {};\n\t      if (!contextTypes || !curContext) {\n\t          return context;\n\t      }\n\t      for (var key in contextTypes) {\n\t          if (contextTypes.hasOwnProperty(key)) {\n\t              context[key] = curContext[key];\n\t          }\n\t      }\n\t      return context;\n\t  }\n\t\n\t  function renderComponent(component, parentContext) {\n\t      refs = component.refs;\n\t      var vnode = component.render();\n\t\n\t      if (vnode === null || vnode === false) {\n\t          vnode = createVcomment('react-empty: ' + getUid());\n\t      } else if (!vnode || !vnode.vtype) {\n\t          throw new Error('@' + component.constructor.name + '#render:You may have returned undefined, an array or some other invalid object');\n\t      }\n\t\n\t      var curContext = refs = null;\n\t      if (component.getChildContext) {\n\t          curContext = component.getChildContext();\n\t      }\n\t      if (curContext) {\n\t          curContext = extend(extend({}, parentContext), curContext);\n\t      } else {\n\t          curContext = parentContext;\n\t      }\n\t      vnode.context = curContext;\n\t      return vnode;\n\t  }\n\t\n\t  var pendingComponents = [];\n\t\n\t  function clearPendingComponents() {\n\t      var components = pendingComponents;\n\t      var len = components.length;\n\t      if (!len) {\n\t          return;\n\t      }\n\t      pendingComponents = [];\n\t      var i = -1;\n\t      while (len--) {\n\t          var component = components[++i];\n\t          var updater = component.$updater;\n\t          if (component.componentDidMount) {\n\t              component.componentDidMount();\n\t          }\n\t          updater.isPending = false;\n\t          updater.emitUpdate();\n\t      }\n\t  }\n\t\n\t  function compareTwoVnodes(vnode, newVnode, node, parentContext) {\n\t      var newNode = node;\n\t\n\t      if (newVnode == null) {\n\t          // remove\n\t          destroyVnode(vnode, node);\n\t          node.parentNode.removeChild(node);\n\t      } else if (vnode.type !== newVnode.type || newVnode.key !== vnode.key) {\n\t          // replace\n\t          destroyVnode(vnode, node);\n\t          newNode = initVnode(newVnode, parentContext, node.namespaceURI);\n\t          node.parentNode.replaceChild(newNode, node);\n\t      } else if (vnode !== newVnode) {\n\t          // same type and same key -> update\n\t          var vtype = vnode.vtype;\n\t          if (vtype === VELEMENT) {\n\t              newNode = updateVelem(vnode, newVnode, node, parentContext);\n\t          } else if (vtype === VCOMPONENT) {\n\t              newNode = updateVcomponent(vnode, newVnode, node, parentContext);\n\t          } else if (vtype === VSTATELESS) {\n\t              newNode = updateVstateless(vnode, newVnode, node, parentContext);\n\t          }\n\t      }\n\t\n\t      return newNode;\n\t  }\n\t\n\t  function getDOMNode() {\n\t      return this;\n\t  }\n\t\n\t  function attachRef(refs, refKey, refValue) {\n\t      if (!refs || refKey == null || !refValue) {\n\t          return;\n\t      }\n\t      if (refValue.nodeName && !refValue.getDOMNode) {\n\t          // support react v0.13 style: this.refs.myInput.getDOMNode()\n\t          refValue.getDOMNode = getDOMNode;\n\t      }\n\t      if (isFn(refKey)) {\n\t          refKey(refValue);\n\t      } else {\n\t          refs[refKey] = refValue;\n\t      }\n\t  }\n\t\n\t  function detachRef(refs, refKey) {\n\t      if (!refs || refKey == null) {\n\t          return;\n\t      }\n\t      if (isFn(refKey)) {\n\t          refKey(null);\n\t      } else {\n\t          delete refs[refKey];\n\t      }\n\t  }\n\t\n\t  var updateQueue = {\n\t  \tupdaters: [],\n\t  \tisPending: false,\n\t  \tadd: function add(updater) {\n\t  \t\tthis.updaters.push(updater);\n\t  \t},\n\t  \tbatchUpdate: function batchUpdate() {\n\t  \t\tif (this.isPending) {\n\t  \t\t\treturn;\n\t  \t\t}\n\t  \t\tthis.isPending = true;\n\t  \t\t/*\n\t     each updater.update may add new updater to updateQueue\n\t     clear them with a loop\n\t     event bubbles from bottom-level to top-level\n\t     reverse the updater order can merge some props and state and reduce the refresh times\n\t     see Updater.update method below to know why\n\t    */\n\t  \t\tvar updaters = this.updaters;\n\t\n\t  \t\tvar updater = undefined;\n\t  \t\twhile (updater = updaters.pop()) {\n\t  \t\t\tupdater.updateComponent();\n\t  \t\t}\n\t  \t\tthis.isPending = false;\n\t  \t}\n\t  };\n\t\n\t  function Updater(instance) {\n\t  \tthis.instance = instance;\n\t  \tthis.pendingStates = [];\n\t  \tthis.pendingCallbacks = [];\n\t  \tthis.isPending = false;\n\t  \tthis.nextProps = this.nextContext = null;\n\t  \tthis.clearCallbacks = this.clearCallbacks.bind(this);\n\t  }\n\t\n\t  Updater.prototype = {\n\t  \temitUpdate: function emitUpdate(nextProps, nextContext) {\n\t  \t\tthis.nextProps = nextProps;\n\t  \t\tthis.nextContext = nextContext;\n\t  \t\t// receive nextProps!! should update immediately\n\t  \t\tnextProps || !updateQueue.isPending ? this.updateComponent() : updateQueue.add(this);\n\t  \t},\n\t  \tupdateComponent: function updateComponent() {\n\t  \t\tvar instance = this.instance;\n\t  \t\tvar pendingStates = this.pendingStates;\n\t  \t\tvar nextProps = this.nextProps;\n\t  \t\tvar nextContext = this.nextContext;\n\t\n\t  \t\tif (nextProps || pendingStates.length > 0) {\n\t  \t\t\tnextProps = nextProps || instance.props;\n\t  \t\t\tnextContext = nextContext || instance.context;\n\t  \t\t\tthis.nextProps = this.nextContext = null;\n\t  \t\t\t// merge the nextProps and nextState and update by one time\n\t  \t\t\tshouldUpdate(instance, nextProps, this.getState(), nextContext, this.clearCallbacks);\n\t  \t\t}\n\t  \t},\n\t  \taddState: function addState(nextState) {\n\t  \t\tif (nextState) {\n\t  \t\t\tthis.pendingStates.push(nextState);\n\t  \t\t\tif (!this.isPending) {\n\t  \t\t\t\tthis.emitUpdate();\n\t  \t\t\t}\n\t  \t\t}\n\t  \t},\n\t  \treplaceState: function replaceState(nextState) {\n\t  \t\tvar pendingStates = this.pendingStates;\n\t\n\t  \t\tpendingStates.pop();\n\t  \t\t// push special params to point out should replace state\n\t  \t\tpendingStates.push([nextState]);\n\t  \t},\n\t  \tgetState: function getState() {\n\t  \t\tvar instance = this.instance;\n\t  \t\tvar pendingStates = this.pendingStates;\n\t  \t\tvar state = instance.state;\n\t  \t\tvar props = instance.props;\n\t\n\t  \t\tif (pendingStates.length) {\n\t  \t\t\tstate = extend({}, state);\n\t  \t\t\teachItem(pendingStates, function (nextState) {\n\t  \t\t\t\t// replace state\n\t  \t\t\t\tif (isArr(nextState)) {\n\t  \t\t\t\t\tstate = extend({}, nextState[0]);\n\t  \t\t\t\t\treturn;\n\t  \t\t\t\t}\n\t  \t\t\t\tif (isFn(nextState)) {\n\t  \t\t\t\t\tnextState = nextState.call(instance, state, props);\n\t  \t\t\t\t}\n\t  \t\t\t\textend(state, nextState);\n\t  \t\t\t});\n\t  \t\t\tpendingStates.length = 0;\n\t  \t\t}\n\t  \t\treturn state;\n\t  \t},\n\t  \tclearCallbacks: function clearCallbacks() {\n\t  \t\tvar pendingCallbacks = this.pendingCallbacks;\n\t  \t\tvar instance = this.instance;\n\t\n\t  \t\tif (pendingCallbacks.length > 0) {\n\t  \t\t\tthis.pendingCallbacks = [];\n\t  \t\t\teachItem(pendingCallbacks, function (callback) {\n\t  \t\t\t\treturn callback.call(instance);\n\t  \t\t\t});\n\t  \t\t}\n\t  \t},\n\t  \taddCallback: function addCallback(callback) {\n\t  \t\tif (isFn(callback)) {\n\t  \t\t\tthis.pendingCallbacks.push(callback);\n\t  \t\t}\n\t  \t}\n\t  };\n\t  function Component(props, context) {\n\t  \tthis.$updater = new Updater(this);\n\t  \tthis.$cache = { isMounted: false };\n\t  \tthis.props = props;\n\t  \tthis.state = {};\n\t  \tthis.refs = {};\n\t  \tthis.context = context;\n\t  }\n\t\n\t  Component.prototype = {\n\t  \tconstructor: Component,\n\t  \t// getChildContext: _.noop,\n\t  \t// componentWillUpdate: _.noop,\n\t  \t// componentDidUpdate: _.noop,\n\t  \t// componentWillReceiveProps: _.noop,\n\t  \t// componentWillMount: _.noop,\n\t  \t// componentDidMount: _.noop,\n\t  \t// componentWillUnmount: _.noop,\n\t  \t// shouldComponentUpdate(nextProps, nextState) {\n\t  \t// \treturn true\n\t  \t// },\n\t  \tforceUpdate: function forceUpdate(callback) {\n\t  \t\tvar $updater = this.$updater;\n\t  \t\tvar $cache = this.$cache;\n\t  \t\tvar props = this.props;\n\t  \t\tvar state = this.state;\n\t  \t\tvar context = this.context;\n\t\n\t  \t\tif ($updater.isPending || !$cache.isMounted) {\n\t  \t\t\treturn;\n\t  \t\t}\n\t  \t\tvar nextProps = $cache.props || props;\n\t  \t\tvar nextState = $cache.state || state;\n\t  \t\tvar nextContext = $cache.context || {};\n\t  \t\tvar parentContext = $cache.parentContext;\n\t  \t\tvar node = $cache.node;\n\t  \t\tvar vnode = $cache.vnode;\n\t  \t\t$cache.props = $cache.state = $cache.context = null;\n\t  \t\t$updater.isPending = true;\n\t  \t\tif (this.componentWillUpdate) {\n\t  \t\t\tthis.componentWillUpdate(nextProps, nextState, nextContext);\n\t  \t\t}\n\t  \t\tthis.state = nextState;\n\t  \t\tthis.props = nextProps;\n\t  \t\tthis.context = nextContext;\n\t  \t\tvar newVnode = renderComponent(this, parentContext);\n\t  \t\tvar newNode = compareTwoVnodes(vnode, newVnode, node, newVnode.context);\n\t  \t\tif (newNode !== node) {\n\t  \t\t\tnewNode.cache = newNode.cache || {};\n\t  \t\t\textend(newNode.cache, node.cache);\n\t  \t\t}\n\t  \t\t$cache.vnode = newVnode;\n\t  \t\t$cache.node = newNode;\n\t  \t\tclearPendingComponents();\n\t  \t\tif (this.componentDidUpdate) {\n\t  \t\t\tthis.componentDidUpdate(props, state, context);\n\t  \t\t}\n\t  \t\tif (callback) {\n\t  \t\t\tcallback.call(this);\n\t  \t\t}\n\t  \t\t$updater.isPending = false;\n\t  \t\t$updater.emitUpdate();\n\t  \t},\n\t  \tsetState: function setState(nextState, callback) {\n\t  \t\tvar $updater = this.$updater;\n\t\n\t  \t\t$updater.addCallback(callback);\n\t  \t\t$updater.addState(nextState);\n\t  \t},\n\t  \treplaceState: function replaceState(nextState, callback) {\n\t  \t\tvar $updater = this.$updater;\n\t\n\t  \t\t$updater.addCallback(callback);\n\t  \t\t$updater.replaceState(nextState);\n\t  \t},\n\t  \tgetDOMNode: function getDOMNode() {\n\t  \t\tvar node = this.$cache.node;\n\t  \t\treturn node && node.nodeName === '#comment' ? null : node;\n\t  \t},\n\t  \tisMounted: function isMounted() {\n\t  \t\treturn this.$cache.isMounted;\n\t  \t}\n\t  };\n\t\n\t  function shouldUpdate(component, nextProps, nextState, nextContext, callback) {\n\t  \tvar shouldComponentUpdate = true;\n\t  \tif (component.shouldComponentUpdate) {\n\t  \t\tshouldComponentUpdate = component.shouldComponentUpdate(nextProps, nextState, nextContext);\n\t  \t}\n\t  \tif (shouldComponentUpdate === false) {\n\t  \t\tcomponent.props = nextProps;\n\t  \t\tcomponent.state = nextState;\n\t  \t\tcomponent.context = nextContext || {};\n\t  \t\treturn;\n\t  \t}\n\t  \tvar cache = component.$cache;\n\t  \tcache.props = nextProps;\n\t  \tcache.state = nextState;\n\t  \tcache.context = nextContext || {};\n\t  \tcomponent.forceUpdate(callback);\n\t  }\n\t\n\t  // event config\n\t  var notBubbleEvents = {\n\t  \tonmouseleave: 1,\n\t  \tonmouseenter: 1,\n\t  \tonload: 1,\n\t  \tonunload: 1,\n\t  \tonscroll: 1,\n\t  \tonfocus: 1,\n\t  \tonblur: 1,\n\t  \tonrowexit: 1,\n\t  \tonbeforeunload: 1,\n\t  \tonstop: 1,\n\t  \tondragdrop: 1,\n\t  \tondragenter: 1,\n\t  \tondragexit: 1,\n\t  \tondraggesture: 1,\n\t  \tondragover: 1,\n\t  \toncontextmenu: 1\n\t  };\n\t\n\t  function getEventName(key) {\n\t  \tkey = key === 'onDoubleClick' ? 'ondblclick' : key;\n\t  \treturn key.toLowerCase();\n\t  }\n\t\n\t  var eventTypes = {};\n\t\n\t  function addEvent(elem, eventType, listener) {\n\t  \teventType = getEventName(eventType);\n\t\n\t  \tif (notBubbleEvents[eventType] === 1) {\n\t  \t\telem[eventType] = listener;\n\t  \t\treturn;\n\t  \t}\n\t\n\t  \tvar eventStore = elem.eventStore || (elem.eventStore = {});\n\t  \teventStore[eventType] = listener;\n\t\n\t  \tif (!eventTypes[eventType]) {\n\t  \t\t// onclick -> click\n\t  \t\tdocument.addEventListener(eventType.substr(2), dispatchEvent);\n\t  \t\teventTypes[eventType] = true;\n\t  \t}\n\t\n\t  \tvar nodeName = elem.nodeName;\n\t\n\t  \tif (eventType === 'onchange' && (nodeName === 'INPUT' || nodeName === 'TEXTAREA')) {\n\t  \t\taddEvent(elem, 'oninput', listener);\n\t  \t}\n\t  }\n\t\n\t  function removeEvent(elem, eventType) {\n\t  \teventType = getEventName(eventType);\n\t  \tif (notBubbleEvents[eventType] === 1) {\n\t  \t\telem[eventType] = null;\n\t  \t\treturn;\n\t  \t}\n\t\n\t  \tvar eventStore = elem.eventStore || (elem.eventStore = {});\n\t  \tdelete eventStore[eventType];\n\t\n\t  \tvar nodeName = elem.nodeName;\n\t\n\t  \tif (eventType === 'onchange' && (nodeName === 'INPUT' || nodeName === 'TEXTAREA')) {\n\t  \t\tdelete eventStore['oninput'];\n\t  \t}\n\t  }\n\t\n\t  function dispatchEvent(event) {\n\t  \tvar target = event.target;\n\t  \tvar type = event.type;\n\t\n\t  \tvar eventType = 'on' + type;\n\t  \tvar syntheticEvent = undefined;\n\t  \tupdateQueue.isPending = true;\n\t  \twhile (target) {\n\t  \t\tvar _target = target;\n\t  \t\tvar eventStore = _target.eventStore;\n\t\n\t  \t\tvar listener = eventStore && eventStore[eventType];\n\t  \t\tif (!listener) {\n\t  \t\t\ttarget = target.parentNode;\n\t  \t\t\tcontinue;\n\t  \t\t}\n\t  \t\tif (!syntheticEvent) {\n\t  \t\t\tsyntheticEvent = createSyntheticEvent(event);\n\t  \t\t}\n\t  \t\tsyntheticEvent.currentTarget = target;\n\t  \t\tlistener.call(target, syntheticEvent);\n\t  \t\tif (syntheticEvent.$cancalBubble) {\n\t  \t\t\tbreak;\n\t  \t\t}\n\t  \t\ttarget = target.parentNode;\n\t  \t}\n\t  \tupdateQueue.isPending = false;\n\t  \tupdateQueue.batchUpdate();\n\t  }\n\t\n\t  function createSyntheticEvent(nativeEvent) {\n\t  \tvar syntheticEvent = {};\n\t  \tvar cancalBubble = function cancalBubble() {\n\t  \t\treturn syntheticEvent.$cancalBubble = true;\n\t  \t};\n\t  \tsyntheticEvent.nativeEvent = nativeEvent;\n\t  \tfor (var key in nativeEvent) {\n\t  \t\tif (typeof nativeEvent[key] !== 'function') {\n\t  \t\t\tsyntheticEvent[key] = nativeEvent[key];\n\t  \t\t} else if (key === 'stopPropagation' || key === 'stopImmediatePropagation') {\n\t  \t\t\tsyntheticEvent[key] = cancalBubble;\n\t  \t\t} else {\n\t  \t\t\tsyntheticEvent[key] = nativeEvent[key].bind(nativeEvent);\n\t  \t\t}\n\t  \t}\n\t  \treturn syntheticEvent;\n\t  }\n\t\n\t  function setStyle(elemStyle, styles) {\n\t      for (var styleName in styles) {\n\t          if (styles.hasOwnProperty(styleName)) {\n\t              setStyleValue(elemStyle, styleName, styles[styleName]);\n\t          }\n\t      }\n\t  }\n\t\n\t  function removeStyle(elemStyle, styles) {\n\t      for (var styleName in styles) {\n\t          if (styles.hasOwnProperty(styleName)) {\n\t              elemStyle[styleName] = '';\n\t          }\n\t      }\n\t  }\n\t\n\t  function patchStyle(elemStyle, style, newStyle) {\n\t      if (style === newStyle) {\n\t          return;\n\t      }\n\t      if (!newStyle && style) {\n\t          removeStyle(elemStyle, style);\n\t          return;\n\t      } else if (newStyle && !style) {\n\t          setStyle(elemStyle, newStyle);\n\t          return;\n\t      }\n\t\n\t      var keyMap = {};\n\t      for (var key in style) {\n\t          if (style.hasOwnProperty(key)) {\n\t              keyMap[key] = true;\n\t              if (style[key] !== newStyle[key]) {\n\t                  setStyleValue(elemStyle, key, newStyle[key]);\n\t              }\n\t          }\n\t      }\n\t      for (var key in newStyle) {\n\t          if (newStyle.hasOwnProperty(key) && keyMap[key] !== true) {\n\t              if (style[key] !== newStyle[key]) {\n\t                  setStyleValue(elemStyle, key, newStyle[key]);\n\t              }\n\t          }\n\t      }\n\t  }\n\t\n\t  /**\n\t   * CSS properties which accept numbers but are not in units of \"px\".\n\t   */\n\t  var isUnitlessNumber = {\n\t      animationIterationCount: 1,\n\t      borderImageOutset: 1,\n\t      borderImageSlice: 1,\n\t      borderImageWidth: 1,\n\t      boxFlex: 1,\n\t      boxFlexGroup: 1,\n\t      boxOrdinalGroup: 1,\n\t      columnCount: 1,\n\t      flex: 1,\n\t      flexGrow: 1,\n\t      flexPositive: 1,\n\t      flexShrink: 1,\n\t      flexNegative: 1,\n\t      flexOrder: 1,\n\t      gridRow: 1,\n\t      gridColumn: 1,\n\t      fontWeight: 1,\n\t      lineClamp: 1,\n\t      lineHeight: 1,\n\t      opacity: 1,\n\t      order: 1,\n\t      orphans: 1,\n\t      tabSize: 1,\n\t      widows: 1,\n\t      zIndex: 1,\n\t      zoom: 1,\n\t\n\t      // SVG-related properties\n\t      fillOpacity: 1,\n\t      floodOpacity: 1,\n\t      stopOpacity: 1,\n\t      strokeDasharray: 1,\n\t      strokeDashoffset: 1,\n\t      strokeMiterlimit: 1,\n\t      strokeOpacity: 1,\n\t      strokeWidth: 1\n\t  };\n\t\n\t  function prefixKey(prefix, key) {\n\t      return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n\t  }\n\t\n\t  var prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\t\n\t  Object.keys(isUnitlessNumber).forEach(function (prop) {\n\t      prefixes.forEach(function (prefix) {\n\t          isUnitlessNumber[prefixKey(prefix, prop)] = 1;\n\t      });\n\t  });\n\t\n\t  var RE_NUMBER = /^-?\\d+(\\.\\d+)?$/;\n\t  function setStyleValue(elemStyle, styleName, styleValue) {\n\t\n\t      if (!isUnitlessNumber[styleName] && RE_NUMBER.test(styleValue)) {\n\t          elemStyle[styleName] = styleValue + 'px';\n\t          return;\n\t      }\n\t\n\t      if (styleName === 'float') {\n\t          styleName = 'cssFloat';\n\t      }\n\t\n\t      if (styleValue == null || typeof styleValue === 'boolean') {\n\t          styleValue = '';\n\t      }\n\t\n\t      elemStyle[styleName] = styleValue;\n\t  }\n\t\n\t  var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n\t  var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\uB7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\n\t\n\t  var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\t\n\t  var isCustomAttribute = RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$'));\n\t  // will merge some data in properties below\n\t  var properties = {};\n\t\n\t  /**\n\t   * Mapping from normalized, camelcased property names to a configuration that\n\t   * specifies how the associated DOM property should be accessed or rendered.\n\t   */\n\t  var MUST_USE_PROPERTY = 0x1;\n\t  var HAS_BOOLEAN_VALUE = 0x4;\n\t  var HAS_NUMERIC_VALUE = 0x8;\n\t  var HAS_POSITIVE_NUMERIC_VALUE = 0x10 | 0x8;\n\t  var HAS_OVERLOADED_BOOLEAN_VALUE = 0x20;\n\t\n\t  // html config\n\t  var HTMLDOMPropertyConfig = {\n\t      props: {\n\t          /**\n\t           * Standard Properties\n\t           */\n\t          accept: 0,\n\t          acceptCharset: 0,\n\t          accessKey: 0,\n\t          action: 0,\n\t          allowFullScreen: HAS_BOOLEAN_VALUE,\n\t          allowTransparency: 0,\n\t          alt: 0,\n\t          async: HAS_BOOLEAN_VALUE,\n\t          autoComplete: 0,\n\t          autoFocus: HAS_BOOLEAN_VALUE,\n\t          autoPlay: HAS_BOOLEAN_VALUE,\n\t          capture: HAS_BOOLEAN_VALUE,\n\t          cellPadding: 0,\n\t          cellSpacing: 0,\n\t          charSet: 0,\n\t          challenge: 0,\n\t          checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t          cite: 0,\n\t          classID: 0,\n\t          className: 0,\n\t          cols: HAS_POSITIVE_NUMERIC_VALUE,\n\t          colSpan: 0,\n\t          content: 0,\n\t          contentEditable: 0,\n\t          contextMenu: 0,\n\t          controls: HAS_BOOLEAN_VALUE,\n\t          coords: 0,\n\t          crossOrigin: 0,\n\t          data: 0, // For `<object />` acts as `src`.\n\t          dateTime: 0,\n\t          'default': HAS_BOOLEAN_VALUE,\n\t          // not in regular react, they did it in other way\n\t          defaultValue: MUST_USE_PROPERTY,\n\t          // not in regular react, they did it in other way\n\t          defaultChecked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t          defer: HAS_BOOLEAN_VALUE,\n\t          dir: 0,\n\t          disabled: HAS_BOOLEAN_VALUE,\n\t          download: HAS_OVERLOADED_BOOLEAN_VALUE,\n\t          draggable: 0,\n\t          encType: 0,\n\t          form: 0,\n\t          formAction: 0,\n\t          formEncType: 0,\n\t          formMethod: 0,\n\t          formNoValidate: HAS_BOOLEAN_VALUE,\n\t          formTarget: 0,\n\t          frameBorder: 0,\n\t          headers: 0,\n\t          height: 0,\n\t          hidden: HAS_BOOLEAN_VALUE,\n\t          high: 0,\n\t          href: 0,\n\t          hrefLang: 0,\n\t          htmlFor: 0,\n\t          httpEquiv: 0,\n\t          icon: 0,\n\t          id: 0,\n\t          inputMode: 0,\n\t          integrity: 0,\n\t          is: 0,\n\t          keyParams: 0,\n\t          keyType: 0,\n\t          kind: 0,\n\t          label: 0,\n\t          lang: 0,\n\t          list: 0,\n\t          loop: HAS_BOOLEAN_VALUE,\n\t          low: 0,\n\t          manifest: 0,\n\t          marginHeight: 0,\n\t          marginWidth: 0,\n\t          max: 0,\n\t          maxLength: 0,\n\t          media: 0,\n\t          mediaGroup: 0,\n\t          method: 0,\n\t          min: 0,\n\t          minLength: 0,\n\t          // Caution; `option.selected` is not updated if `select.multiple` is\n\t          // disabled with `removeAttribute`.\n\t          multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t          muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t          name: 0,\n\t          nonce: 0,\n\t          noValidate: HAS_BOOLEAN_VALUE,\n\t          open: HAS_BOOLEAN_VALUE,\n\t          optimum: 0,\n\t          pattern: 0,\n\t          placeholder: 0,\n\t          poster: 0,\n\t          preload: 0,\n\t          profile: 0,\n\t          radioGroup: 0,\n\t          readOnly: HAS_BOOLEAN_VALUE,\n\t          rel: 0,\n\t          required: HAS_BOOLEAN_VALUE,\n\t          reversed: HAS_BOOLEAN_VALUE,\n\t          role: 0,\n\t          rows: HAS_POSITIVE_NUMERIC_VALUE,\n\t          rowSpan: HAS_NUMERIC_VALUE,\n\t          sandbox: 0,\n\t          scope: 0,\n\t          scoped: HAS_BOOLEAN_VALUE,\n\t          scrolling: 0,\n\t          seamless: HAS_BOOLEAN_VALUE,\n\t          selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t          shape: 0,\n\t          size: HAS_POSITIVE_NUMERIC_VALUE,\n\t          sizes: 0,\n\t          span: HAS_POSITIVE_NUMERIC_VALUE,\n\t          spellCheck: 0,\n\t          src: 0,\n\t          srcDoc: 0,\n\t          srcLang: 0,\n\t          srcSet: 0,\n\t          start: HAS_NUMERIC_VALUE,\n\t          step: 0,\n\t          style: 0,\n\t          summary: 0,\n\t          tabIndex: 0,\n\t          target: 0,\n\t          title: 0,\n\t          // Setting .type throws on non-<input> tags\n\t          type: 0,\n\t          useMap: 0,\n\t          value: MUST_USE_PROPERTY,\n\t          width: 0,\n\t          wmode: 0,\n\t          wrap: 0,\n\t\n\t          /**\n\t           * RDFa Properties\n\t           */\n\t          about: 0,\n\t          datatype: 0,\n\t          inlist: 0,\n\t          prefix: 0,\n\t          // property is also supported for OpenGraph in meta tags.\n\t          property: 0,\n\t          resource: 0,\n\t          'typeof': 0,\n\t          vocab: 0,\n\t\n\t          /**\n\t           * Non-standard Properties\n\t           */\n\t          // autoCapitalize and autoCorrect are supported in Mobile Safari for\n\t          // keyboard hints.\n\t          autoCapitalize: 0,\n\t          autoCorrect: 0,\n\t          // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n\t          autoSave: 0,\n\t          // color is for Safari mask-icon link\n\t          color: 0,\n\t          // itemProp, itemScope, itemType are for\n\t          // Microdata support. See http://schema.org/docs/gs.html\n\t          itemProp: 0,\n\t          itemScope: HAS_BOOLEAN_VALUE,\n\t          itemType: 0,\n\t          // itemID and itemRef are for Microdata support as well but\n\t          // only specified in the WHATWG spec document. See\n\t          // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n\t          itemID: 0,\n\t          itemRef: 0,\n\t          // results show looking glass icon and recent searches on input\n\t          // search fields in WebKit/Blink\n\t          results: 0,\n\t          // IE-only attribute that specifies security restrictions on an iframe\n\t          // as an alternative to the sandbox attribute on IE<10\n\t          security: 0,\n\t          // IE-only attribute that controls focus behavior\n\t          unselectable: 0\n\t      },\n\t      attrNS: {},\n\t      domAttrs: {\n\t          acceptCharset: 'accept-charset',\n\t          className: 'class',\n\t          htmlFor: 'for',\n\t          httpEquiv: 'http-equiv'\n\t      },\n\t      domProps: {}\n\t  };\n\t\n\t  // svg config\n\t  var xlink = 'http://www.w3.org/1999/xlink';\n\t  var xml = 'http://www.w3.org/XML/1998/namespace';\n\t\n\t  // We use attributes for everything SVG so let's avoid some duplication and run\n\t  // code instead.\n\t  // The following are all specified in the HTML config already so we exclude here.\n\t  // - class (as className)\n\t  // - color\n\t  // - height\n\t  // - id\n\t  // - lang\n\t  // - max\n\t  // - media\n\t  // - method\n\t  // - min\n\t  // - name\n\t  // - style\n\t  // - target\n\t  // - type\n\t  // - width\n\t  var ATTRS = {\n\t      accentHeight: 'accent-height',\n\t      accumulate: 0,\n\t      additive: 0,\n\t      alignmentBaseline: 'alignment-baseline',\n\t      allowReorder: 'allowReorder',\n\t      alphabetic: 0,\n\t      amplitude: 0,\n\t      arabicForm: 'arabic-form',\n\t      ascent: 0,\n\t      attributeName: 'attributeName',\n\t      attributeType: 'attributeType',\n\t      autoReverse: 'autoReverse',\n\t      azimuth: 0,\n\t      baseFrequency: 'baseFrequency',\n\t      baseProfile: 'baseProfile',\n\t      baselineShift: 'baseline-shift',\n\t      bbox: 0,\n\t      begin: 0,\n\t      bias: 0,\n\t      by: 0,\n\t      calcMode: 'calcMode',\n\t      capHeight: 'cap-height',\n\t      clip: 0,\n\t      clipPath: 'clip-path',\n\t      clipRule: 'clip-rule',\n\t      clipPathUnits: 'clipPathUnits',\n\t      colorInterpolation: 'color-interpolation',\n\t      colorInterpolationFilters: 'color-interpolation-filters',\n\t      colorProfile: 'color-profile',\n\t      colorRendering: 'color-rendering',\n\t      contentScriptType: 'contentScriptType',\n\t      contentStyleType: 'contentStyleType',\n\t      cursor: 0,\n\t      cx: 0,\n\t      cy: 0,\n\t      d: 0,\n\t      decelerate: 0,\n\t      descent: 0,\n\t      diffuseConstant: 'diffuseConstant',\n\t      direction: 0,\n\t      display: 0,\n\t      divisor: 0,\n\t      dominantBaseline: 'dominant-baseline',\n\t      dur: 0,\n\t      dx: 0,\n\t      dy: 0,\n\t      edgeMode: 'edgeMode',\n\t      elevation: 0,\n\t      enableBackground: 'enable-background',\n\t      end: 0,\n\t      exponent: 0,\n\t      externalResourcesRequired: 'externalResourcesRequired',\n\t      fill: 0,\n\t      fillOpacity: 'fill-opacity',\n\t      fillRule: 'fill-rule',\n\t      filter: 0,\n\t      filterRes: 'filterRes',\n\t      filterUnits: 'filterUnits',\n\t      floodColor: 'flood-color',\n\t      floodOpacity: 'flood-opacity',\n\t      focusable: 0,\n\t      fontFamily: 'font-family',\n\t      fontSize: 'font-size',\n\t      fontSizeAdjust: 'font-size-adjust',\n\t      fontStretch: 'font-stretch',\n\t      fontStyle: 'font-style',\n\t      fontVariant: 'font-variant',\n\t      fontWeight: 'font-weight',\n\t      format: 0,\n\t      from: 0,\n\t      fx: 0,\n\t      fy: 0,\n\t      g1: 0,\n\t      g2: 0,\n\t      glyphName: 'glyph-name',\n\t      glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n\t      glyphOrientationVertical: 'glyph-orientation-vertical',\n\t      glyphRef: 'glyphRef',\n\t      gradientTransform: 'gradientTransform',\n\t      gradientUnits: 'gradientUnits',\n\t      hanging: 0,\n\t      horizAdvX: 'horiz-adv-x',\n\t      horizOriginX: 'horiz-origin-x',\n\t      ideographic: 0,\n\t      imageRendering: 'image-rendering',\n\t      'in': 0,\n\t      in2: 0,\n\t      intercept: 0,\n\t      k: 0,\n\t      k1: 0,\n\t      k2: 0,\n\t      k3: 0,\n\t      k4: 0,\n\t      kernelMatrix: 'kernelMatrix',\n\t      kernelUnitLength: 'kernelUnitLength',\n\t      kerning: 0,\n\t      keyPoints: 'keyPoints',\n\t      keySplines: 'keySplines',\n\t      keyTimes: 'keyTimes',\n\t      lengthAdjust: 'lengthAdjust',\n\t      letterSpacing: 'letter-spacing',\n\t      lightingColor: 'lighting-color',\n\t      limitingConeAngle: 'limitingConeAngle',\n\t      local: 0,\n\t      markerEnd: 'marker-end',\n\t      markerMid: 'marker-mid',\n\t      markerStart: 'marker-start',\n\t      markerHeight: 'markerHeight',\n\t      markerUnits: 'markerUnits',\n\t      markerWidth: 'markerWidth',\n\t      mask: 0,\n\t      maskContentUnits: 'maskContentUnits',\n\t      maskUnits: 'maskUnits',\n\t      mathematical: 0,\n\t      mode: 0,\n\t      numOctaves: 'numOctaves',\n\t      offset: 0,\n\t      opacity: 0,\n\t      operator: 0,\n\t      order: 0,\n\t      orient: 0,\n\t      orientation: 0,\n\t      origin: 0,\n\t      overflow: 0,\n\t      overlinePosition: 'overline-position',\n\t      overlineThickness: 'overline-thickness',\n\t      paintOrder: 'paint-order',\n\t      panose1: 'panose-1',\n\t      pathLength: 'pathLength',\n\t      patternContentUnits: 'patternContentUnits',\n\t      patternTransform: 'patternTransform',\n\t      patternUnits: 'patternUnits',\n\t      pointerEvents: 'pointer-events',\n\t      points: 0,\n\t      pointsAtX: 'pointsAtX',\n\t      pointsAtY: 'pointsAtY',\n\t      pointsAtZ: 'pointsAtZ',\n\t      preserveAlpha: 'preserveAlpha',\n\t      preserveAspectRatio: 'preserveAspectRatio',\n\t      primitiveUnits: 'primitiveUnits',\n\t      r: 0,\n\t      radius: 0,\n\t      refX: 'refX',\n\t      refY: 'refY',\n\t      renderingIntent: 'rendering-intent',\n\t      repeatCount: 'repeatCount',\n\t      repeatDur: 'repeatDur',\n\t      requiredExtensions: 'requiredExtensions',\n\t      requiredFeatures: 'requiredFeatures',\n\t      restart: 0,\n\t      result: 0,\n\t      rotate: 0,\n\t      rx: 0,\n\t      ry: 0,\n\t      scale: 0,\n\t      seed: 0,\n\t      shapeRendering: 'shape-rendering',\n\t      slope: 0,\n\t      spacing: 0,\n\t      specularConstant: 'specularConstant',\n\t      specularExponent: 'specularExponent',\n\t      speed: 0,\n\t      spreadMethod: 'spreadMethod',\n\t      startOffset: 'startOffset',\n\t      stdDeviation: 'stdDeviation',\n\t      stemh: 0,\n\t      stemv: 0,\n\t      stitchTiles: 'stitchTiles',\n\t      stopColor: 'stop-color',\n\t      stopOpacity: 'stop-opacity',\n\t      strikethroughPosition: 'strikethrough-position',\n\t      strikethroughThickness: 'strikethrough-thickness',\n\t      string: 0,\n\t      stroke: 0,\n\t      strokeDasharray: 'stroke-dasharray',\n\t      strokeDashoffset: 'stroke-dashoffset',\n\t      strokeLinecap: 'stroke-linecap',\n\t      strokeLinejoin: 'stroke-linejoin',\n\t      strokeMiterlimit: 'stroke-miterlimit',\n\t      strokeOpacity: 'stroke-opacity',\n\t      strokeWidth: 'stroke-width',\n\t      surfaceScale: 'surfaceScale',\n\t      systemLanguage: 'systemLanguage',\n\t      tableValues: 'tableValues',\n\t      targetX: 'targetX',\n\t      targetY: 'targetY',\n\t      textAnchor: 'text-anchor',\n\t      textDecoration: 'text-decoration',\n\t      textRendering: 'text-rendering',\n\t      textLength: 'textLength',\n\t      to: 0,\n\t      transform: 0,\n\t      u1: 0,\n\t      u2: 0,\n\t      underlinePosition: 'underline-position',\n\t      underlineThickness: 'underline-thickness',\n\t      unicode: 0,\n\t      unicodeBidi: 'unicode-bidi',\n\t      unicodeRange: 'unicode-range',\n\t      unitsPerEm: 'units-per-em',\n\t      vAlphabetic: 'v-alphabetic',\n\t      vHanging: 'v-hanging',\n\t      vIdeographic: 'v-ideographic',\n\t      vMathematical: 'v-mathematical',\n\t      values: 0,\n\t      vectorEffect: 'vector-effect',\n\t      version: 0,\n\t      vertAdvY: 'vert-adv-y',\n\t      vertOriginX: 'vert-origin-x',\n\t      vertOriginY: 'vert-origin-y',\n\t      viewBox: 'viewBox',\n\t      viewTarget: 'viewTarget',\n\t      visibility: 0,\n\t      widths: 0,\n\t      wordSpacing: 'word-spacing',\n\t      writingMode: 'writing-mode',\n\t      x: 0,\n\t      xHeight: 'x-height',\n\t      x1: 0,\n\t      x2: 0,\n\t      xChannelSelector: 'xChannelSelector',\n\t      xlinkActuate: 'xlink:actuate',\n\t      xlinkArcrole: 'xlink:arcrole',\n\t      xlinkHref: 'xlink:href',\n\t      xlinkRole: 'xlink:role',\n\t      xlinkShow: 'xlink:show',\n\t      xlinkTitle: 'xlink:title',\n\t      xlinkType: 'xlink:type',\n\t      xmlBase: 'xml:base',\n\t      xmlLang: 'xml:lang',\n\t      xmlSpace: 'xml:space',\n\t      y: 0,\n\t      y1: 0,\n\t      y2: 0,\n\t      yChannelSelector: 'yChannelSelector',\n\t      z: 0,\n\t      zoomAndPan: 'zoomAndPan'\n\t  };\n\t\n\t  var SVGDOMPropertyConfig = {\n\t      props: {},\n\t      attrNS: {\n\t          xlinkActuate: xlink,\n\t          xlinkArcrole: xlink,\n\t          xlinkHref: xlink,\n\t          xlinkRole: xlink,\n\t          xlinkShow: xlink,\n\t          xlinkTitle: xlink,\n\t          xlinkType: xlink,\n\t          xmlBase: xml,\n\t          xmlLang: xml,\n\t          xmlSpace: xml\n\t      },\n\t      domAttrs: {},\n\t      domProps: {}\n\t  };\n\t\n\t  Object.keys(ATTRS).map(function (key) {\n\t      SVGDOMPropertyConfig.props[key] = 0;\n\t      if (ATTRS[key]) {\n\t          SVGDOMPropertyConfig.domAttrs[key] = ATTRS[key];\n\t      }\n\t  });\n\t\n\t  // merge html and svg config into properties\n\t  mergeConfigToProperties(HTMLDOMPropertyConfig);\n\t  mergeConfigToProperties(SVGDOMPropertyConfig);\n\t\n\t  function mergeConfigToProperties(config) {\n\t      var\n\t      // all react/react-lite supporting property names in here\n\t      props = config.props;\n\t      var\n\t      // attributes namespace in here\n\t      attrNS = config.attrNS;\n\t      var\n\t      // propName in props which should use to be dom-attribute in here\n\t      domAttrs = config.domAttrs;\n\t      var\n\t      // propName in props which should use to be dom-property in here\n\t      domProps = config.domProps;\n\t\n\t      for (var propName in props) {\n\t          if (!props.hasOwnProperty(propName)) {\n\t              continue;\n\t          }\n\t          var propConfig = props[propName];\n\t          properties[propName] = {\n\t              attributeName: domAttrs.hasOwnProperty(propName) ? domAttrs[propName] : propName.toLowerCase(),\n\t              propertyName: domProps.hasOwnProperty(propName) ? domProps[propName] : propName,\n\t              attributeNamespace: attrNS.hasOwnProperty(propName) ? attrNS[propName] : null,\n\t              mustUseProperty: checkMask(propConfig, MUST_USE_PROPERTY),\n\t              hasBooleanValue: checkMask(propConfig, HAS_BOOLEAN_VALUE),\n\t              hasNumericValue: checkMask(propConfig, HAS_NUMERIC_VALUE),\n\t              hasPositiveNumericValue: checkMask(propConfig, HAS_POSITIVE_NUMERIC_VALUE),\n\t              hasOverloadedBooleanValue: checkMask(propConfig, HAS_OVERLOADED_BOOLEAN_VALUE)\n\t          };\n\t      }\n\t  }\n\t\n\t  function checkMask(value, bitmask) {\n\t      return (value & bitmask) === bitmask;\n\t  }\n\t\n\t  /**\n\t   * Sets the value for a property on a node.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {string} name\n\t   * @param {*} value\n\t   */\n\t\n\t  function setPropValue(node, name, value) {\n\t      var propInfo = properties.hasOwnProperty(name) && properties[name];\n\t      if (propInfo) {\n\t          // should delete value from dom\n\t          if (value == null || propInfo.hasBooleanValue && !value || propInfo.hasNumericValue && isNaN(value) || propInfo.hasPositiveNumericValue && value < 1 || propInfo.hasOverloadedBooleanValue && value === false) {\n\t              removePropValue(node, name);\n\t          } else if (propInfo.mustUseProperty) {\n\t              node[propInfo.propertyName] = value;\n\t          } else {\n\t              var attributeName = propInfo.attributeName;\n\t              var namespace = propInfo.attributeNamespace;\n\t\n\t              // `setAttribute` with objects becomes only `[object]` in IE8/9,\n\t              // ('' + value) makes it output the correct toString()-value.\n\t              if (namespace) {\n\t                  node.setAttributeNS(namespace, attributeName, '' + value);\n\t              } else if (propInfo.hasBooleanValue || propInfo.hasOverloadedBooleanValue && value === true) {\n\t                  node.setAttribute(attributeName, '');\n\t              } else {\n\t                  node.setAttribute(attributeName, '' + value);\n\t              }\n\t          }\n\t      } else if (isCustomAttribute(name) && VALID_ATTRIBUTE_NAME_REGEX.test(name)) {\n\t          if (value == null) {\n\t              node.removeAttribute(name);\n\t          } else {\n\t              node.setAttribute(name, '' + value);\n\t          }\n\t      }\n\t  }\n\t\n\t  /**\n\t   * Deletes the value for a property on a node.\n\t   *\n\t   * @param {DOMElement} node\n\t   * @param {string} name\n\t   */\n\t\n\t  function removePropValue(node, name) {\n\t      var propInfo = properties.hasOwnProperty(name) && properties[name];\n\t      if (propInfo) {\n\t          if (propInfo.mustUseProperty) {\n\t              node[propInfo.propertyName] = propInfo.hasBooleanValue ? false : '';\n\t          } else {\n\t              node.removeAttribute(propInfo.attributeName);\n\t          }\n\t      } else if (isCustomAttribute(name)) {\n\t          node.removeAttribute(name);\n\t      }\n\t  }\n\t\n\t  function isFn(obj) {\n\t      return typeof obj === 'function';\n\t  }\n\t\n\t  var isArr = Array.isArray;\n\t\n\t  function noop() {}\n\t\n\t  function identity(obj) {\n\t      return obj;\n\t  }\n\t\n\t  function pipe(fn1, fn2) {\n\t      return function () {\n\t          fn1.apply(this, arguments);\n\t          return fn2.apply(this, arguments);\n\t      };\n\t  }\n\t\n\t  function flattenChildren(list, iteratee, a) {\n\t      var len = list.length;\n\t      var i = -1;\n\t\n\t      while (len--) {\n\t          var item = list[++i];\n\t          if (isArr(item)) {\n\t              flattenChildren(item, iteratee, a);\n\t          } else {\n\t              iteratee(item, a);\n\t          }\n\t      }\n\t  }\n\t\n\t  function eachItem(list, iteratee) {\n\t      for (var i = 0, len = list.length; i < len; i++) {\n\t          iteratee(list[i], i);\n\t      }\n\t  }\n\t\n\t  function extend(to) /* sources */{\n\t      var nextSource, nextIndex;\n\t      for (nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n\t          nextSource = arguments[nextIndex];\n\t          if (nextSource == null) {\n\t              continue;\n\t          }\n\t      }\n\t      var from = Object(nextSource);\n\t      if (!from) {\n\t          return to;\n\t      }\n\t      var keys = Object.keys(from);\n\t      var i = keys.length;\n\t      while (i--) {\n\t          if (from[keys[i]] !== undefined) {\n\t              to[keys[i]] = from[keys[i]];\n\t          }\n\t      }\n\t      return to;\n\t  }\n\t\n\t  var uid = 0;\n\t\n\t  function getUid() {\n\t      return ++uid;\n\t  }\n\t\n\t  var EVENT_KEYS = /^on/i;\n\t  function setProps(elem, props, isCustomComponent) {\n\t      for (var key in props) {\n\t          if (!props.hasOwnProperty(key) || key === 'children') {\n\t              continue;\n\t          }\n\t          var value = props[key];\n\t          if (EVENT_KEYS.test(key)) {\n\t              addEvent(elem, key, value);\n\t          } else if (key === 'style') {\n\t              setStyle(elem.style, value);\n\t          } else if (key === 'dangerouslySetInnerHTML') {\n\t              value && value.__html != null && (elem.innerHTML = value.__html);\n\t          } else if (isCustomComponent) {\n\t              if (value == null) {\n\t                  elem.removeAttribute(key);\n\t              } else {\n\t                  elem.setAttribute(key, '' + value);\n\t              }\n\t          } else {\n\t              setPropValue(elem, key, value);\n\t          }\n\t      }\n\t  }\n\t\n\t  function patchProp(key, oldValue, value, elem, isCustomComponent) {\n\t      if (key === 'value' || key === 'checked') {\n\t          oldValue = elem[key];\n\t      }\n\t      if (value === oldValue) {\n\t          return;\n\t      }\n\t      if (value === undefined) {\n\t          if (EVENT_KEYS.test(key)) {\n\t              removeEvent(elem, key);\n\t          } else if (key === 'style') {\n\t              removeStyle(elem.style, oldValue);\n\t          } else if (key === 'dangerouslySetInnerHTML') {\n\t              elem.innerHTML = '';\n\t          } else if (isCustomComponent) {\n\t              elem.removeAttribute(key);\n\t          } else {\n\t              removePropValue(elem, key);\n\t          }\n\t          return;\n\t      }\n\t      if (EVENT_KEYS.test(key)) {\n\t          // addEvent will replace the oldValue\n\t          addEvent(elem, key, value);\n\t      } else if (key === 'style') {\n\t          patchStyle(elem.style, oldValue, value);\n\t      } else if (key === 'dangerouslySetInnerHTML') {\n\t          var oldHtml = oldValue && oldValue.__html;\n\t          var html = value && value.__html;\n\t          if (html != null && html !== oldHtml) {\n\t              elem.innerHTML = html;\n\t          }\n\t      } else if (isCustomComponent) {\n\t          if (value == null) {\n\t              elem.removeAttribute(key);\n\t          } else {\n\t              elem.setAttribute(key, '' + value);\n\t          }\n\t      } else {\n\t          setPropValue(elem, key, value);\n\t      }\n\t  }\n\t\n\t  function patchProps(elem, props, newProps, isCustomComponent) {\n\t      var keyMap = { children: true };\n\t      for (var key in props) {\n\t          if (props.hasOwnProperty(key) && key !== 'children') {\n\t              keyMap[key] = true;\n\t              patchProp(key, props[key], newProps[key], elem, isCustomComponent);\n\t          }\n\t      }\n\t      for (var key in newProps) {\n\t          if (newProps.hasOwnProperty(key) && keyMap[key] !== true) {\n\t              patchProp(key, props[key], newProps[key], elem, isCustomComponent);\n\t          }\n\t      }\n\t  }\n\t\n\t  if (!Object.freeze) {\n\t      Object.freeze = identity;\n\t  }\n\t\n\t  var pendingRendering = {};\n\t  var vnodeStore = {};\n\t  function renderTreeIntoContainer(vnode, container, callback, parentContext) {\n\t  \tif (!vnode.vtype) {\n\t  \t\tthrow new Error('cannot render ' + vnode + ' to container');\n\t  \t}\n\t  \tvar id = container[COMPONENT_ID] || (container[COMPONENT_ID] = getUid());\n\t  \tvar argsCache = pendingRendering[id];\n\t\n\t  \t// component lify cycle method maybe call root rendering\n\t  \t// should bundle them and render by only one time\n\t  \tif (argsCache) {\n\t  \t\tif (argsCache === true) {\n\t  \t\t\tpendingRendering[id] = argsCache = [vnode, callback, parentContext];\n\t  \t\t} else {\n\t  \t\t\targsCache[0] = vnode;\n\t  \t\t\targsCache[2] = parentContext;\n\t  \t\t\tif (callback) {\n\t  \t\t\t\targsCache[1] = argsCache[1] ? pipe(argsCache[1], callback) : callback;\n\t  \t\t\t}\n\t  \t\t}\n\t  \t\treturn;\n\t  \t}\n\t\n\t  \tpendingRendering[id] = true;\n\t  \tvar oldVnode = null;\n\t  \tvar rootNode = null;\n\t  \tif (oldVnode = vnodeStore[id]) {\n\t  \t\trootNode = compareTwoVnodes(oldVnode, vnode, container.firstChild, parentContext);\n\t  \t} else {\n\t  \t\trootNode = initVnode(vnode, parentContext, container.namespaceURI);\n\t  \t\tvar childNode = null;\n\t  \t\twhile (childNode = container.lastChild) {\n\t  \t\t\tcontainer.removeChild(childNode);\n\t  \t\t}\n\t  \t\tcontainer.appendChild(rootNode);\n\t  \t}\n\t  \tvnodeStore[id] = vnode;\n\t  \tvar isPending = updateQueue.isPending;\n\t  \tupdateQueue.isPending = true;\n\t  \tclearPendingComponents();\n\t  \targsCache = pendingRendering[id];\n\t  \tdelete pendingRendering[id];\n\t\n\t  \tvar result = null;\n\t  \tif (isArr(argsCache)) {\n\t  \t\tresult = renderTreeIntoContainer(argsCache[0], container, argsCache[1], argsCache[2]);\n\t  \t} else if (vnode.vtype === VELEMENT) {\n\t  \t\tresult = rootNode;\n\t  \t} else if (vnode.vtype === VCOMPONENT) {\n\t  \t\tresult = rootNode.cache[vnode.id];\n\t  \t}\n\t\n\t  \tif (!isPending) {\n\t  \t\tupdateQueue.isPending = false;\n\t  \t\tupdateQueue.batchUpdate();\n\t  \t}\n\t\n\t  \tif (callback) {\n\t  \t\tcallback.call(result);\n\t  \t}\n\t\n\t  \treturn result;\n\t  }\n\t\n\t  function render(vnode, container, callback) {\n\t  \treturn renderTreeIntoContainer(vnode, container, callback);\n\t  }\n\t\n\t  function unstable_renderSubtreeIntoContainer(parentComponent, subVnode, container, callback) {\n\t  \tvar context = parentComponent.vnode ? parentComponent.vnode.context : parentComponent.$cache.parentContext;\n\t  \treturn renderTreeIntoContainer(subVnode, container, callback, context);\n\t  }\n\t\n\t  function unmountComponentAtNode(container) {\n\t  \tif (!container.nodeName) {\n\t  \t\tthrow new Error('expect node');\n\t  \t}\n\t  \tvar id = container[COMPONENT_ID];\n\t  \tvar vnode = null;\n\t  \tif (vnode = vnodeStore[id]) {\n\t  \t\tdestroyVnode(vnode, container.firstChild);\n\t  \t\tcontainer.removeChild(container.firstChild);\n\t  \t\tdelete vnodeStore[id];\n\t  \t\treturn true;\n\t  \t}\n\t  \treturn false;\n\t  }\n\t\n\t  function findDOMNode(node) {\n\t  \tif (node == null) {\n\t  \t\treturn null;\n\t  \t}\n\t  \tif (node.nodeName) {\n\t  \t\treturn node;\n\t  \t}\n\t  \tvar component = node;\n\t  \t// if component.node equal to false, component must be unmounted\n\t  \tif (component.getDOMNode && component.$cache.isMounted) {\n\t  \t\treturn component.getDOMNode();\n\t  \t}\n\t  \tthrow new Error('findDOMNode can not find Node');\n\t  }\n\t\n\t  var ReactDOM = Object.freeze({\n\t  \trender: render,\n\t  \tunstable_renderSubtreeIntoContainer: unstable_renderSubtreeIntoContainer,\n\t  \tunmountComponentAtNode: unmountComponentAtNode,\n\t  \tfindDOMNode: findDOMNode\n\t  });\n\t\n\t  function isValidElement(obj) {\n\t  \treturn obj != null && !!obj.vtype;\n\t  }\n\t\n\t  function cloneElement(originElem, props) {\n\t  \tvar type = originElem.type;\n\t  \tvar key = originElem.key;\n\t  \tvar ref = originElem.ref;\n\t\n\t  \tvar newProps = extend(extend({ key: key, ref: ref }, originElem.props), props);\n\t\n\t  \tfor (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n\t  \t\tchildren[_key - 2] = arguments[_key];\n\t  \t}\n\t\n\t  \tvar vnode = createElement.apply(undefined, [type, newProps].concat(children));\n\t  \tif (vnode.ref === originElem.ref) {\n\t  \t\tvnode.refs = originElem.refs;\n\t  \t}\n\t  \treturn vnode;\n\t  }\n\t\n\t  function createFactory(type) {\n\t  \tvar factory = function factory() {\n\t  \t\tfor (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t  \t\t\targs[_key2] = arguments[_key2];\n\t  \t\t}\n\t\n\t  \t\treturn createElement.apply(undefined, [type].concat(args));\n\t  \t};\n\t  \tfactory.type = type;\n\t  \treturn factory;\n\t  }\n\t\n\t  function createElement(type, props, children) {\n\t  \tvar createVnode = null;\n\t  \tvar varType = typeof type;\n\t\n\t  \tif (varType === 'string') {\n\t  \t\tcreateVnode = createVelem;\n\t  \t} else if (varType === 'function') {\n\t  \t\tif (type.prototype && typeof type.prototype.forceUpdate === 'function') {\n\t  \t\t\tcreateVnode = createVcomponent;\n\t  \t\t} else {\n\t  \t\t\tcreateVnode = createVstateless;\n\t  \t\t}\n\t  \t} else {\n\t  \t\tthrow new Error('React.createElement: unexpect type [ ' + type + ' ]');\n\t  \t}\n\t\n\t  \tvar key = null;\n\t  \tvar ref = null;\n\t  \tvar finalProps = {};\n\t  \tvar propValue = null;\n\t  \tif (props != null) {\n\t  \t\tfor (var propKey in props) {\n\t  \t\t\tif (!props.hasOwnProperty(propKey)) {\n\t  \t\t\t\tcontinue;\n\t  \t\t\t}\n\t  \t\t\tif (propKey === 'key') {\n\t  \t\t\t\tif (props.key !== undefined) {\n\t  \t\t\t\t\tkey = '' + props.key;\n\t  \t\t\t\t}\n\t  \t\t\t} else if (propKey === 'ref') {\n\t  \t\t\t\tif (props.ref !== undefined) {\n\t  \t\t\t\t\tref = props.ref;\n\t  \t\t\t\t}\n\t  \t\t\t} else if ((propValue = props[propKey]) !== undefined) {\n\t  \t\t\t\tfinalProps[propKey] = propValue;\n\t  \t\t\t}\n\t  \t\t}\n\t  \t}\n\t\n\t  \tvar defaultProps = type.defaultProps;\n\t\n\t  \tif (defaultProps) {\n\t  \t\tfor (var propKey in defaultProps) {\n\t  \t\t\tif (finalProps[propKey] === undefined) {\n\t  \t\t\t\tfinalProps[propKey] = defaultProps[propKey];\n\t  \t\t\t}\n\t  \t\t}\n\t  \t}\n\t\n\t  \tvar argsLen = arguments.length;\n\t  \tvar finalChildren = children;\n\t\n\t  \tif (argsLen > 3) {\n\t  \t\tfinalChildren = Array(argsLen - 2);\n\t  \t\tfor (var i = 2; i < argsLen; i++) {\n\t  \t\t\tfinalChildren[i - 2] = arguments[i];\n\t  \t\t}\n\t  \t}\n\t\n\t  \tif (finalChildren !== undefined) {\n\t  \t\tfinalProps.children = finalChildren;\n\t  \t}\n\t\n\t  \tvar vnode = createVnode(type, finalProps);\n\t  \tvnode.key = key;\n\t  \tvnode.ref = ref;\n\t  \treturn vnode;\n\t  }\n\t\n\t  var tagNames = 'a|abbr|address|area|article|aside|audio|b|base|bdi|bdo|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|data|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|main|map|mark|menu|menuitem|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|source|span|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|track|u|ul|var|video|wbr|circle|clipPath|defs|ellipse|g|image|line|linearGradient|mask|path|pattern|polygon|polyline|radialGradient|rect|stop|svg|text|tspan';\n\t  var DOM = {};\n\t  eachItem(tagNames.split('|'), function (tagName) {\n\t  \tDOM[tagName] = createFactory(tagName);\n\t  });\n\t\n\t  var check = function check() {\n\t      return check;\n\t  };\n\t  check.isRequired = check;\n\t  var PropTypes = {\n\t      \"array\": check,\n\t      \"bool\": check,\n\t      \"func\": check,\n\t      \"number\": check,\n\t      \"object\": check,\n\t      \"string\": check,\n\t      \"any\": check,\n\t      \"arrayOf\": check,\n\t      \"element\": check,\n\t      \"instanceOf\": check,\n\t      \"node\": check,\n\t      \"objectOf\": check,\n\t      \"oneOf\": check,\n\t      \"oneOfType\": check,\n\t      \"shape\": check\n\t  };\n\t\n\t  function only(children) {\n\t  \tif (isValidElement(children)) {\n\t  \t\treturn children;\n\t  \t}\n\t  \tthrow new Error('expect only one child');\n\t  }\n\t\n\t  function forEach(children, iteratee, context) {\n\t  \tif (children == null) {\n\t  \t\treturn children;\n\t  \t}\n\t  \tvar index = 0;\n\t  \tif (isArr(children)) {\n\t  \t\tflattenChildren(children, function (child) {\n\t  \t\t\titeratee.call(context, child, index++);\n\t  \t\t});\n\t  \t} else {\n\t  \t\titeratee.call(context, children, index);\n\t  \t}\n\t  }\n\t\n\t  function map(children, iteratee, context) {\n\t  \tif (children == null) {\n\t  \t\treturn children;\n\t  \t}\n\t  \tvar store = [];\n\t  \tvar keyMap = {};\n\t  \tforEach(children, function (child, index) {\n\t  \t\tvar data = {};\n\t  \t\tdata.child = iteratee.call(context, child, index) || child;\n\t  \t\tdata.isEqual = data.child === child;\n\t  \t\tvar key = data.key = getKey(child, index);\n\t  \t\tif (keyMap.hasOwnProperty(key)) {\n\t  \t\t\tkeyMap[key] += 1;\n\t  \t\t} else {\n\t  \t\t\tkeyMap[key] = 0;\n\t  \t\t}\n\t  \t\tdata.index = keyMap[key];\n\t  \t\tstore.push(data);\n\t  \t});\n\t  \tvar result = [];\n\t  \teachItem(store, function (_ref) {\n\t  \t\tvar child = _ref.child;\n\t  \t\tvar key = _ref.key;\n\t  \t\tvar index = _ref.index;\n\t  \t\tvar isEqual = _ref.isEqual;\n\t\n\t  \t\tif (child == null || typeof child === 'boolean') {\n\t  \t\t\treturn;\n\t  \t\t}\n\t  \t\tif (!isValidElement(child) || key == null) {\n\t  \t\t\tresult.push(child);\n\t  \t\t\treturn;\n\t  \t\t}\n\t  \t\tif (keyMap[key] !== 0) {\n\t  \t\t\tkey += ':' + index;\n\t  \t\t}\n\t  \t\tif (!isEqual) {\n\t  \t\t\tkey = escapeUserProvidedKey(child.key || '') + '/' + key;\n\t  \t\t}\n\t  \t\tchild = cloneElement(child, { key: key });\n\t  \t\tresult.push(child);\n\t  \t});\n\t  \treturn result;\n\t  }\n\t\n\t  function count(children) {\n\t  \tvar count = 0;\n\t  \tforEach(children, function () {\n\t  \t\tcount++;\n\t  \t});\n\t  \treturn count;\n\t  }\n\t\n\t  function toArray(children) {\n\t  \treturn map(children, identity) || [];\n\t  }\n\t\n\t  function getKey(child, index) {\n\t  \tvar key = undefined;\n\t  \tif (isValidElement(child) && typeof child.key === 'string') {\n\t  \t\tkey = '.$' + child.key;\n\t  \t} else {\n\t  \t\tkey = '.' + index.toString(36);\n\t  \t}\n\t  \treturn key;\n\t  }\n\t\n\t  var userProvidedKeyEscapeRegex = /\\/(?!\\/)/g;\n\t  function escapeUserProvidedKey(text) {\n\t  \treturn ('' + text).replace(userProvidedKeyEscapeRegex, '//');\n\t  }\n\t\n\t  var Children = Object.freeze({\n\t  \tonly: only,\n\t  \tforEach: forEach,\n\t  \tmap: map,\n\t  \tcount: count,\n\t  \ttoArray: toArray\n\t  });\n\t\n\t  function eachMixin(mixins, iteratee) {\n\t  \teachItem(mixins, function (mixin) {\n\t  \t\tif (mixin) {\n\t  \t\t\tif (isArr(mixin.mixins)) {\n\t  \t\t\t\teachMixin(mixin.mixins, iteratee);\n\t  \t\t\t}\n\t  \t\t\titeratee(mixin);\n\t  \t\t}\n\t  \t});\n\t  }\n\t\n\t  function combineMixinToProto(proto, mixin) {\n\t  \tfor (var key in mixin) {\n\t  \t\tif (!mixin.hasOwnProperty(key)) {\n\t  \t\t\tcontinue;\n\t  \t\t}\n\t  \t\tvar value = mixin[key];\n\t  \t\tif (key === 'getInitialState') {\n\t  \t\t\tproto.$getInitialStates.push(value);\n\t  \t\t\tcontinue;\n\t  \t\t}\n\t  \t\tvar curValue = proto[key];\n\t  \t\tif (isFn(curValue) && isFn(value)) {\n\t  \t\t\tproto[key] = pipe(curValue, value);\n\t  \t\t} else {\n\t  \t\t\tproto[key] = value;\n\t  \t\t}\n\t  \t}\n\t  }\n\t\n\t  function combineMixinToClass(Component, mixin) {\n\t  \textend(Component.propTypes, mixin.propTypes);\n\t  \textend(Component.contextTypes, mixin.contextTypes);\n\t  \textend(Component, mixin.statics);\n\t  \tif (isFn(mixin.getDefaultProps)) {\n\t  \t\textend(Component.defaultProps, mixin.getDefaultProps());\n\t  \t}\n\t  }\n\t\n\t  function bindContext(obj, source) {\n\t  \tfor (var key in source) {\n\t  \t\tif (source.hasOwnProperty(key)) {\n\t  \t\t\tif (isFn(source[key])) {\n\t  \t\t\t\tobj[key] = source[key].bind(obj);\n\t  \t\t\t}\n\t  \t\t}\n\t  \t}\n\t  }\n\t\n\t  var Facade = function Facade() {};\n\t  Facade.prototype = Component.prototype;\n\t\n\t  function getInitialState() {\n\t  \tvar _this = this;\n\t\n\t  \tvar state = {};\n\t  \tvar setState = this.setState;\n\t  \tthis.setState = Facade;\n\t  \teachItem(this.$getInitialStates, function (getInitialState) {\n\t  \t\tif (isFn(getInitialState)) {\n\t  \t\t\textend(state, getInitialState.call(_this));\n\t  \t\t}\n\t  \t});\n\t  \tthis.setState = setState;\n\t  \treturn state;\n\t  }\n\t  function createClass(spec) {\n\t  \tif (!isFn(spec.render)) {\n\t  \t\tthrow new Error('createClass: spec.render is not function');\n\t  \t}\n\t  \tvar specMixins = spec.mixins || [];\n\t  \tvar mixins = specMixins.concat(spec);\n\t  \tspec.mixins = null;\n\t  \tfunction Klass(props, context) {\n\t  \t\tComponent.call(this, props, context);\n\t  \t\tthis.constructor = Klass;\n\t  \t\tspec.autobind !== false && bindContext(this, Klass.prototype);\n\t  \t\tthis.state = this.getInitialState() || this.state;\n\t  \t}\n\t  \tKlass.displayName = spec.displayName;\n\t  \tKlass.contextTypes = {};\n\t  \tKlass.propTypes = {};\n\t  \tKlass.defaultProps = {};\n\t  \tvar proto = Klass.prototype = new Facade();\n\t  \tproto.$getInitialStates = [];\n\t  \teachMixin(mixins, function (mixin) {\n\t  \t\tcombineMixinToProto(proto, mixin);\n\t  \t\tcombineMixinToClass(Klass, mixin);\n\t  \t});\n\t  \tproto.getInitialState = getInitialState;\n\t  \tspec.mixins = specMixins;\n\t  \treturn Klass;\n\t  }\n\t\n\t  var React = extend({\n\t      version: '0.15.1',\n\t      cloneElement: cloneElement,\n\t      isValidElement: isValidElement,\n\t      createElement: createElement,\n\t      createFactory: createFactory,\n\t      Component: Component,\n\t      createClass: createClass,\n\t      Children: Children,\n\t      PropTypes: PropTypes,\n\t      DOM: DOM,\n\t      __spread: extend\n\t  }, ReactDOM);\n\t\n\t  React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;\n\t\n\t  return React;\n\t\n\t}));\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*jshint esversion: 6 */\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _redux = __webpack_require__(13);\n\t\n\tvar _reducersEs6 = __webpack_require__(14);\n\t\n\tvar _reducersEs62 = _interopRequireDefault(_reducersEs6);\n\t\n\tvar _middlewaresEs6 = __webpack_require__(18);\n\t\n\tvar createStoreWithMiddleware = (0, _redux.applyMiddleware)(_middlewaresEs6.thunk)(_redux.createStore);\n\t\n\tvar store = createStoreWithMiddleware(_reducersEs62['default']);\n\t\n\texports['default'] = store;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t!function(t,e){ true?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.Redux=e():t.Redux=e()}(this,function(){return function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p=\"\",e(0)}([function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}e.__esModule=!0,e.compose=e.applyMiddleware=e.bindActionCreators=e.combineReducers=e.createStore=void 0;var o=n(2),i=r(o),u=n(7),c=r(u),f=n(6),a=r(f),s=n(5),d=r(s),l=n(1),p=r(l),y=n(3);r(y);e.createStore=i[\"default\"],e.combineReducers=c[\"default\"],e.bindActionCreators=a[\"default\"],e.applyMiddleware=d[\"default\"],e.compose=p[\"default\"]},function(t,e){\"use strict\";function n(){for(var t=arguments.length,e=Array(t),n=0;t>n;n++)e[n]=arguments[n];if(0===e.length)return function(t){return t};var r=function(){var t=e[e.length-1],n=e.slice(0,-1);return{v:function(){return n.reduceRight(function(t,e){return e(t)},t.apply(void 0,arguments))}}}();return\"object\"==typeof r?r.v:void 0}e.__esModule=!0,e[\"default\"]=n},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}function o(t,e,n){function r(){b===h&&(b=h.slice())}function i(){return v}function c(t){if(\"function\"!=typeof t)throw Error(\"Expected listener to be a function.\");var e=!0;return r(),b.push(t),function(){if(e){e=!1,r();var n=b.indexOf(t);b.splice(n,1)}}}function s(t){if(!(0,u[\"default\"])(t))throw Error(\"Actions must be plain objects. Use custom middleware for async actions.\");if(void 0===t.type)throw Error('Actions may not have an undefined \"type\" property. Have you misspelled a constant?');if(x)throw Error(\"Reducers may not dispatch actions.\");try{x=!0,v=y(v,t)}finally{x=!1}for(var e=h=b,n=0;e.length>n;n++)e[n]();return t}function d(t){if(\"function\"!=typeof t)throw Error(\"Expected the nextReducer to be a function.\");y=t,s({type:a.INIT})}function l(){var t,e=c;return t={subscribe:function(t){function n(){t.next&&t.next(i())}if(\"object\"!=typeof t)throw new TypeError(\"Expected the observer to be an object.\");n();var r=e(n);return{unsubscribe:r}}},t[f[\"default\"]]=function(){return this},t}var p;if(\"function\"==typeof e&&void 0===n&&(n=e,e=void 0),void 0!==n){if(\"function\"!=typeof n)throw Error(\"Expected the enhancer to be a function.\");return n(o)(t,e)}if(\"function\"!=typeof t)throw Error(\"Expected the reducer to be a function.\");var y=t,v=e,h=[],b=h,x=!1;return s({type:a.INIT}),p={dispatch:s,subscribe:c,getState:i,replaceReducer:d},p[f[\"default\"]]=l,p}e.__esModule=!0,e.ActionTypes=void 0,e[\"default\"]=o;var i=n(4),u=r(i),c=n(11),f=r(c),a=e.ActionTypes={INIT:\"@@redux/INIT\"}},function(t,e){\"use strict\";function n(t){\"undefined\"!=typeof console&&\"function\"==typeof console.error&&console.error(t);try{throw Error(t)}catch(e){}}e.__esModule=!0,e[\"default\"]=n},function(t,e,n){function r(t){if(!u(t)||l.call(t)!=c||i(t))return!1;var e=o(t);if(null===e)return!0;var n=s.call(e,\"constructor\")&&e.constructor;return\"function\"==typeof n&&n instanceof n&&a.call(n)==d}var o=n(8),i=n(9),u=n(10),c=\"[object Object]\",f=Object.prototype,a=Function.prototype.toString,s=f.hasOwnProperty,d=a.call(Object),l=f.toString;t.exports=r},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}function o(){for(var t=arguments.length,e=Array(t),n=0;t>n;n++)e[n]=arguments[n];return function(t){return function(n,r,o){var u=t(n,r,o),f=u.dispatch,a=[],s={getState:u.getState,dispatch:function(t){return f(t)}};return a=e.map(function(t){return t(s)}),f=c[\"default\"].apply(void 0,a)(u.dispatch),i({},u,{dispatch:f})}}}e.__esModule=!0;var i=Object.assign||function(t){for(var e=1;arguments.length>e;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t};e[\"default\"]=o;var u=n(1),c=r(u)},function(t,e){\"use strict\";function n(t,e){return function(){return e(t.apply(void 0,arguments))}}function r(t,e){if(\"function\"==typeof t)return n(t,e);if(\"object\"!=typeof t||null===t)throw Error(\"bindActionCreators expected an object or a function, instead received \"+(null===t?\"null\":typeof t)+'. Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');for(var r=Object.keys(t),o={},i=0;r.length>i;i++){var u=r[i],c=t[u];\"function\"==typeof c&&(o[u]=n(c,e))}return o}e.__esModule=!0,e[\"default\"]=r},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}function o(t,e){var n=e&&e.type,r=n&&'\"'+n+'\"'||\"an action\";return\"Given action \"+r+', reducer \"'+t+'\" returned undefined. To ignore an action, you must explicitly return the previous state.'}function i(t){Object.keys(t).forEach(function(e){var n=t[e],r=n(void 0,{type:c.ActionTypes.INIT});if(void 0===r)throw Error('Reducer \"'+e+'\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined.');var o=\"@@redux/PROBE_UNKNOWN_ACTION_\"+Math.random().toString(36).substring(7).split(\"\").join(\".\");if(void 0===n(void 0,{type:o}))throw Error('Reducer \"'+e+'\" returned undefined when probed with a random type. '+(\"Don't try to handle \"+c.ActionTypes.INIT+' or other actions in \"redux/*\" ')+\"namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined.\")})}function u(t){for(var e=Object.keys(t),n={},r=0;e.length>r;r++){var u=e[r];\"function\"==typeof t[u]&&(n[u]=t[u])}var c,f=Object.keys(n);try{i(n)}catch(a){c=a}return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments[1];if(c)throw c;for(var r=!1,i={},u=0;f.length>u;u++){var a=f[u],s=n[a],d=t[a],l=s(d,e);if(void 0===l){var p=o(a,e);throw Error(p)}i[a]=l,r=r||l!==d}return r?i:t}}e.__esModule=!0,e[\"default\"]=u;var c=n(2),f=n(4),a=(r(f),n(3));r(a)},function(t,e){function n(t){return r(Object(t))}var r=Object.getPrototypeOf;t.exports=n},function(t,e){function n(t){var e=!1;if(null!=t&&\"function\"!=typeof t.toString)try{e=!!(t+\"\")}catch(n){}return e}t.exports=n},function(t,e){function n(t){return!!t&&\"object\"==typeof t}t.exports=n},function(t,e,n){(function(e){\"use strict\";t.exports=n(12)(e||window||this)}).call(e,function(){return this}())},function(t,e){\"use strict\";t.exports=function(t){var e,n=t.Symbol;return\"function\"==typeof n?n.observable?e=n.observable:(e=\"function\"==typeof n[\"for\"]?n[\"for\"](\"observable\"):n(\"observable\"),n.observable=e):e=\"@@observable\",e}}])});\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*jshint esversion: 6 */\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\t\n\tvar _redux = __webpack_require__(13);\n\t\n\tvar _configEs6 = __webpack_require__(15);\n\t\n\tvar _configEs62 = _interopRequireDefault(_configEs6);\n\t\n\tvar _helpersEs6 = __webpack_require__(16);\n\t\n\t// --- compatibility hack for IE\n\tif (!Array.prototype.findIndex) {\n\t    Array.prototype.findIndex = function (predicate) {\n\t        if (this === null) {\n\t            throw new TypeError('Array.prototype.findIndex called on null or undefined');\n\t        }\n\t        if (typeof predicate !== 'function') {\n\t            throw new TypeError('predicate must be a function');\n\t        }\n\t        var list = Object(this);\n\t        var length = list.length >>> 0;\n\t        var thisArg = arguments[1];\n\t        var value;\n\t\n\t        for (var i = 0; i < length; i++) {\n\t            value = list[i];\n\t            if (predicate.call(thisArg, value, i, list)) {\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    };\n\t}\n\t\n\t// --- compatibility hack for PhantomJS\n\tif (typeof Object.assign != 'function') {\n\t    Object.assign = function (target) {\n\t        'use strict';\n\t        if (target === null) {\n\t            throw new TypeError('Cannot convert undefined or null to object');\n\t        }\n\t\n\t        target = Object(target);\n\t        for (var index = 1; index < arguments.length; index++) {\n\t            var source = arguments[index];\n\t            if (source !== null) {\n\t                for (var key in source) {\n\t                    if (Object.prototype.hasOwnProperty.call(source, key)) {\n\t                        target[key] = source[key];\n\t                    }\n\t                }\n\t            }\n\t        }\n\t        return target;\n\t    };\n\t}\n\t\n\t// --- helpers -------------------\n\tfunction getFirstIndexOfVm(state, field, value, connectionName) {\n\t    return state.findIndex(function (e) {\n\t        return e.connectionName === connectionName && e[field] === value;\n\t    });\n\t}\n\t\n\t// --- reducers ------------------\n\tfunction config(state, action) {\n\t    state = state ? state : {\n\t        provider: null,\n\t        refreshInterval: _configEs62['default'].DefaultRefreshInterval\n\t    };\n\t\n\t    switch (action.type) {\n\t        case 'SET_PROVIDER':\n\t            return Object.assign({}, state, { provider: action.provider });\n\t        case 'SET_REFRESH_INTERVAL':\n\t            var newState = Object.assign({}, state);\n\t            newState.refreshInterval = action.refreshInterval;\n\t            return newState;\n\t        default:\n\t            return state;\n\t    }\n\t}\n\t\n\tfunction vms(state, action) {\n\t    state = state ? state : [];\n\t\n\t    (0, _helpersEs6.logDebug)('reducer vms: action=' + JSON.stringify(action));\n\t\n\t    switch (action.type) {\n\t        case 'UPDATE_ADD_VM':\n\t            {\n\t                var connectionName = action.vm.connectionName;\n\t                var index = action.vm.id ? getFirstIndexOfVm(state, 'id', action.vm.id, connectionName) : getFirstIndexOfVm(state, 'name', action.vm.name, connectionName);\n\t                if (index < 0) {\n\t                    // add\n\t                    return [].concat(_toConsumableArray(state), [action.vm]);\n\t                }\n\t\n\t                var updatedVm = undefined;\n\t                if (action.vm['actualTimeInMs'] < 0) {\n\t                    // clear the usage data (i.e. VM went down)\n\t                    (0, _helpersEs6.logDebug)('Clearing usage data for vm \\'' + action.vm.name + '\\'');\n\t                    updatedVm = Object.assign({}, state[index], action.vm);\n\t                    clearUsageData(updatedVm);\n\t                } else {\n\t                    timeSampleUsageData(action.vm, state[index]);\n\t                    updatedVm = Object.assign({}, state[index], action.vm);\n\t                }\n\t\n\t                return state.slice(0, index).concat(updatedVm).concat(state.slice(index + 1));\n\t            }\n\t        case 'VM_ACTION_FAILED':\n\t            {\n\t                var connectionName = action.payload.connectionName;\n\t                var index = action.payload.id ? getFirstIndexOfVm(state, 'id', action.payload.id, connectionName) : getFirstIndexOfVm(state, 'name', action.payload.name, connectionName);\n\t                if (index < 0) {\n\t                    (0, _helpersEs6.logDebug)('VM_ACTION_FAILED reducer(name=\\'' + action.payload.name + '\\', connectionName=\\'' + connectionName + '\\') not found, skipping');\n\t                    return;\n\t                }\n\t                var updatedVm = Object.assign({}, state[index], { lastMessage: action.payload.message, lastMessageDetail: action.payload.detail });\n\t                return state.slice(0, index).concat(updatedVm).concat(state.slice(index + 1));\n\t            }\n\t        case 'DELETE_UNLISTED_VMS':\n\t            {\n\t                return state.filter(function (vm) {\n\t                    return action.connectionName !== vm.connectionName || action.vmNames.indexOf(vm.name) >= 0;\n\t                });\n\t            }\n\t        default:\n\t            // by default all reducers should return initial state on unknown actions\n\t            return state;\n\t    }\n\t}\n\t\n\tfunction clearUsageData(updatedVm) {\n\t    updatedVm['actualTimeInMs'] = undefined;\n\t    updatedVm['cpuTime'] = undefined;\n\t    updatedVm['cpuUsage'] = undefined;\n\t\n\t    updatedVm['rssMemory'] = undefined;\n\t}\n\t\n\tfunction timeSampleUsageData(newVmRecord, previousVmRecord) {\n\t    if (newVmRecord['actualTimeInMs']) {\n\t        // new usage data are provided\n\t        if (previousVmRecord['actualTimeInMs']) {\n\t            // diff can be computed\n\t            var timeDiff = (newVmRecord.actualTimeInMs - previousVmRecord.actualTimeInMs) * 1000000; // in nanosecs\n\t            if (timeDiff <= 0) {\n\t                (0, _helpersEs6.logDebug)('-- timeSampleUsageData(): no time difference');\n\t                return;\n\t            }\n\t            var cpuTimeDiff = newVmRecord.cpuTime - previousVmRecord.cpuTime; // in nanosecs\n\t\n\t            // store computed actual usage stats\n\t            newVmRecord.cpuUsage = (100 * cpuTimeDiff / timeDiff).toFixed(1);\n\t\n\t            return;\n\t        } else {\n\t            (0, _helpersEs6.logDebug)('timeSampleUsageData(): can\\'t compute diff - missing previous record');\n\t        }\n\t    }\n\t\n\t    newVmRecord.cpuUsage = 0;\n\t}\n\t\n\texports['default'] = (0, _redux.combineReducers)({\n\t    config: config,\n\t    vms: vms\n\t});\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\t/*jshint esversion: 6 */\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t/**\n\t * Application-wide constants\n\t * TODO: make this configurable by user\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\tvar VMS_CONFIG = {\n\t    DefaultRefreshInterval: 10000, // in ms\n\t    Virsh: {\n\t        connections: {\n\t            'system': {\n\t                params: ['-c', 'qemu:///system']\n\t            },\n\t            'session': {\n\t                params: ['-c', 'qemu:///session']\n\t            }\n\t        }\n\t    },\n\t    isDev: false // TODO: make it configurable based on process.env.NODE_ENV\n\t};\n\t\n\texports['default'] = VMS_CONFIG;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*jshint esversion: 6 */\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\texports.toGigaBytes = toGigaBytes;\n\texports.toKiloBytes = toKiloBytes;\n\texports.isEmpty = isEmpty;\n\texports.arrayEquals = arrayEquals;\n\texports.logDebug = logDebug;\n\texports.rephraseUI = rephraseUI;\n\texports.canReset = canReset;\n\texports.canShutdown = canShutdown;\n\texports.isRunning = isRunning;\n\texports.canRun = canRun;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _cockpit = __webpack_require__(17);\n\t\n\tvar _cockpit2 = _interopRequireDefault(_cockpit);\n\t\n\tvar _configEs6 = __webpack_require__(15);\n\t\n\tvar _configEs62 = _interopRequireDefault(_configEs6);\n\t\n\tvar _ = _cockpit2['default'].gettext;\n\t\n\tfunction toGigaBytes(amount, currentUnit) {\n\t    var result = undefined;\n\t    switch (currentUnit) {\n\t        case 'B':\n\t            result = amount / 1024 / 1024 / 1024;\n\t            break;\n\t        case 'KiB':\n\t            result = amount / 1024 / 1024;\n\t            break;\n\t        default:\n\t            console.error('toGigaBytes(): unknown unit: ' + currentUnit);\n\t            result = amount / 1;\n\t    }\n\t\n\t    if (result < 1) {\n\t        result = result.toFixed(2);\n\t    } else {\n\t        var fixed1 = result.toFixed(1);\n\t        result = result - fixed1 === 0 ? result.toFixed(0) : fixed1;\n\t    }\n\t\n\t    return result;\n\t}\n\t\n\tfunction toKiloBytes(amount, currentUnit) {\n\t    var result = undefined;\n\t    switch (currentUnit) {\n\t        case 'B':\n\t            result = amount / 1024;\n\t            break;\n\t        case 'KiB':\n\t            result = amount;\n\t            break;\n\t        case 'MiB':\n\t            result = amount * 1024;\n\t            break;\n\t        case 'GiB':\n\t            result = amount * 1024;\n\t            break;\n\t        default:\n\t            console.error('toKiloBytes(): unknown unit: ' + currentUnit);\n\t            result = amount / 1;\n\t    }\n\t\n\t    return result;\n\t}\n\t\n\tfunction isEmpty(str) {\n\t    return !str || 0 === str.length;\n\t}\n\t\n\tfunction arrayEquals(arr1, arr2) {\n\t    if (arr1.length !== arr2.length) {\n\t        return false;\n\t    }\n\t\n\t    var diff = arr1.filter(function (v, index) {\n\t        return v !== arr2[index];\n\t    });\n\t    return diff.length === 0;\n\t}\n\t\n\tfunction logDebug(msg) {\n\t    if (_configEs62['default'].isDev) {\n\t        console.log(msg);\n\t    }\n\t}\n\t\n\tfunction rephraseUI(key, original) {\n\t    var transform = {\n\t        'autostart': {\n\t            'disable': 'disabled',\n\t            'enable': 'enabled'\n\t        },\n\t        'connections': {\n\t            'system': _(\"System\"),\n\t            'session': _(\"Session\")\n\t        }\n\t    };\n\t\n\t    if (!(key in transform)) {\n\t        logDebug('rephraseUI(key=\\'' + key + '\\', original=\\'' + original + '\\'): unknown key');\n\t        return original;\n\t    }\n\t\n\t    if (!(original in transform[key])) {\n\t        logDebug('rephraseUI(key=\\'' + key + '\\', original=\\'' + original + '\\'): unknown original value');\n\t        return original;\n\t    }\n\t\n\t    return transform[key][original];\n\t}\n\t\n\t// --- VM state functions --\n\t\n\tfunction canReset(vmState) {\n\t    return vmState == 'running' || vmState == 'idle' || vmState == 'paused';\n\t}\n\t\n\tfunction canShutdown(vmState) {\n\t    return canReset(vmState);\n\t}\n\t\n\tfunction isRunning(vmState) {\n\t    return canReset(vmState);\n\t}\n\t\n\tfunction canRun(vmState) {\n\t    return vmState == 'shut off';\n\t}\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\tmodule.exports = cockpit;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*jshint esversion: 6 */\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\texports.thunk = thunk;\n\t\n\tvar _helpersEs6 = __webpack_require__(16);\n\t\n\t/**\n\t * Middleware that resolves functions taking (dispatch, getState) and promises.\n\t *\n\t * If a promise is passed the dispatch will just return the passed promise.\n\t * This is done to simplify some client code that can sometime dispatch a promise and sometimes a plain action.\n\t *\n\t * If a function is passed (which is not a promise) we perform the usual injection of (dispatch, getState).\n\t */\n\t\n\tfunction thunk(_ref) {\n\t    var dispatch = _ref.dispatch;\n\t    var getState = _ref.getState;\n\t\n\t    (0, _helpersEs6.logDebug)('thunk-middleware');\n\t\n\t    return function (next) {\n\t        return function (action) {\n\t            if (typeof action === 'function') {\n\t                // cockpit style promise is also typeof 'function'\n\t                // so we differentiate between those two by the presence of property 'then'\n\t                return action.then ? action : action(dispatch, getState);\n\t            }\n\t\n\t            return next(action);\n\t        };\n\t    };\n\t}\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*jshint esversion: 6 */\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tvar _react = __webpack_require__(11);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _hostvmslistJsx = __webpack_require__(20);\n\t\n\tvar _hostvmslistJsx2 = _interopRequireDefault(_hostvmslistJsx);\n\t\n\tvar App = function App(_ref) {\n\t    var store = _ref.store;\n\t\n\t    var _store$getState = store.getState();\n\t\n\t    var vms = _store$getState.vms;\n\t\n\t    var dispatch = store.dispatch;\n\t\n\t    return _react2[\"default\"].createElement(_hostvmslistJsx2[\"default\"], { vms: vms, dispatch: dispatch });\n\t};\n\tApp.propTypes = {\n\t    store: _react2[\"default\"].PropTypes.object.isRequired\n\t};\n\t\n\texports[\"default\"] = App;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*jshint esversion: 6 */\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tvar _cockpit = __webpack_require__(17);\n\t\n\tvar _cockpit2 = _interopRequireDefault(_cockpit);\n\t\n\tvar _react = __webpack_require__(11);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _actionsEs6 = __webpack_require__(21);\n\t\n\tvar _helpersEs6 = __webpack_require__(16);\n\t\n\tvar _c3chartsJsx = __webpack_require__(26);\n\t\n\tvar _c3chartsJsx2 = _interopRequireDefault(_c3chartsJsx);\n\t\n\tvar _cockpitComponentsListingJsx = __webpack_require__(29);\n\t\n\tvar _ = _cockpit2[\"default\"].gettext;\n\t\n\tvar NoVm = function NoVm() {\n\t    return _react2[\"default\"].createElement(\n\t        \"div\",\n\t        { className: \"cockpit-log-warning\" },\n\t        _react2[\"default\"].createElement(\n\t            \"div\",\n\t            { className: \"blank-slate-pf\" },\n\t            _react2[\"default\"].createElement(\n\t                \"div\",\n\t                { className: \"blank-slate-pf-icon\" },\n\t                _react2[\"default\"].createElement(\"i\", { className: \"pficon pficon-virtual-machine\" }),\n\t                _react2[\"default\"].createElement(\n\t                    \"h1\",\n\t                    null,\n\t                    _(\"No VM is running or defined on this host\")\n\t                )\n\t            )\n\t        )\n\t    );\n\t};\n\t\n\tvar VmActions = function VmActions(_ref) {\n\t    var vmId = _ref.vmId;\n\t    var state = _ref.state;\n\t    var onStart = _ref.onStart;\n\t    var onReboot = _ref.onReboot;\n\t    var onForceReboot = _ref.onForceReboot;\n\t    var onShutdown = _ref.onShutdown;\n\t    var onForceoff = _ref.onForceoff;\n\t\n\t    var reset = (0, _helpersEs6.canReset)(state) ? DropdownButtons({\n\t        buttons: [{\n\t            title: _(\"Restart\"),\n\t            action: onReboot,\n\t            id: vmId + \"-reboot\"\n\t        }, {\n\t            title: _(\"Force Restart\"),\n\t            action: onForceReboot,\n\t            id: vmId + \"-forceReboot\"\n\t        }]\n\t    }) : '';\n\t\n\t    var shutdown = (0, _helpersEs6.canShutdown)(state) ? DropdownButtons({\n\t        buttons: [{\n\t            title: _(\"Shut Down\"),\n\t            action: onShutdown,\n\t            id: vmId + \"-off\"\n\t        }, {\n\t            title: _(\"Force Shut Down\"),\n\t            action: onForceoff,\n\t            id: vmId + \"-forceOff\"\n\t        }]\n\t    }) : '';\n\t\n\t    var run = (0, _helpersEs6.canRun)(state) ? _react2[\"default\"].createElement(\n\t        \"button\",\n\t        { className: \"btn btn-default btn-danger\", onClick: onStart },\n\t        _(\"Run\")\n\t    ) : '';\n\t\n\t    return _react2[\"default\"].createElement(\n\t        \"div\",\n\t        null,\n\t        reset,\n\t        shutdown,\n\t        run\n\t    );\n\t};\n\tVmActions.propTypes = {\n\t    vmId: _react.PropTypes.string.isRequired,\n\t    state: _react.PropTypes.string.isRequired,\n\t    onStart: _react.PropTypes.func.isRequired,\n\t    onReboot: _react.PropTypes.func.isRequired,\n\t    onForceReboot: _react.PropTypes.func.isRequired,\n\t    onShutdown: _react.PropTypes.func.isRequired,\n\t    onForceoff: _react.PropTypes.func.isRequired\n\t};\n\t\n\tvar IconElement = function IconElement(_ref2) {\n\t    var onClick = _ref2.onClick;\n\t    var className = _ref2.className;\n\t    var title = _ref2.title;\n\t    var state = _ref2.state;\n\t\n\t    return _react2[\"default\"].createElement(\n\t        \"span\",\n\t        { title: title, \"data-toggle\": \"tooltip\", \"data-placement\": \"left\" },\n\t        state,\n\t        \" \",\n\t        _react2[\"default\"].createElement(\"i\", { onClick: onClick, className: className })\n\t    );\n\t};\n\tIconElement.propTypes = {\n\t    onClick: _react.PropTypes.func,\n\t    className: _react.PropTypes.string.isRequired,\n\t    title: _react.PropTypes.string.isRequired,\n\t    state: _react.PropTypes.string.isRequired\n\t};\n\t\n\tvar StateIcon = function StateIcon(_ref3) {\n\t    var state = _ref3.state;\n\t\n\t    switch (state) {\n\t        case 'running':\n\t            // TODO: display VM screenshot if available or the ok-icon otherwise\n\t            return _react2[\"default\"].createElement(IconElement, { state: state, className: \"pficon pficon-ok icon-1x-vms\", title: _(\"The VM is running.\") });\n\t        case 'idle':\n\t            return _react2[\"default\"].createElement(IconElement, { state: state, className: \"pficon pficon-running icon-1x-vms\", title: _(\"The VM is idle.\") });\n\t        case 'paused':\n\t            return _react2[\"default\"].createElement(IconElement, { state: state, className: \"pficon pficon-pause icon-1x-vms\", title: _(\"The VM is paused.\") });\n\t        case 'shutdown':\n\t            return _react2[\"default\"].createElement(IconElement, { state: state, className: \"glyphicon glyphicon-wrench icon-1x-vms\",\n\t                title: _(\"The VM is going down.\") });\n\t        case 'shut off':\n\t            return _react2[\"default\"].createElement(IconElement, { state: state, className: \"fa fa-arrow-circle-o-down icon-1x-vms\", title: _(\"The VM is down.\") });\n\t        case 'crashed':\n\t            return _react2[\"default\"].createElement(IconElement, { state: state, className: \"pficon pficon-error-circle-o icon-1x-vms\",\n\t                title: _(\"The VM crashed.\") });\n\t        case 'dying':\n\t            return _react2[\"default\"].createElement(IconElement, { state: state, className: \"pficon pficon-warning-triangle-o icon-1x-vms\",\n\t                title: _(\"The VM is in process of dying (shut down or crash is not completed).\") });\n\t        case 'pmsuspended':\n\t            return _react2[\"default\"].createElement(IconElement, { state: state, className: \"pficon pficon-ok icon-1x-vms\",\n\t                title: _(\"The VM is suspended by guest power management.\") });\n\t        case undefined:\n\t            return _react2[\"default\"].createElement(\"div\", null);\n\t        default:\n\t            return _react2[\"default\"].createElement(\n\t                \"small\",\n\t                null,\n\t                state\n\t            );\n\t    }\n\t};\n\tStateIcon.propTypes = {\n\t    state: _react.PropTypes.string.isRequired\n\t};\n\t\n\t/**\n\t * Render group of buttons as a dropdown\n\t *\n\t * @param buttons array of objects [ {title, action, id}, ... ].\n\t *        At least one button is required. Button id is optional.\n\t * @returns {*}\n\t * @constructor\n\t */\n\tvar DropdownButtons = function DropdownButtons(_ref4) {\n\t    var buttons = _ref4.buttons;\n\t\n\t    var buttonsHtml = buttons.map(function (button) {\n\t        return _react2[\"default\"].createElement(\n\t            \"li\",\n\t            { className: \"presentation\" },\n\t            _react2[\"default\"].createElement(\n\t                \"a\",\n\t                { role: \"menuitem\", onClick: button.action, id: button.id },\n\t                button.title\n\t            )\n\t        );\n\t    });\n\t\n\t    var caretId = buttons[0]['id'] ? buttons[0]['id'] + \"-caret\" : undefined;\n\t    return _react2[\"default\"].createElement(\n\t        \"div\",\n\t        { className: \"btn-group\" },\n\t        _react2[\"default\"].createElement(\n\t            \"button\",\n\t            { className: \"btn btn-default btn-danger\", onClick: buttons[0].action },\n\t            buttons[0].title\n\t        ),\n\t        _react2[\"default\"].createElement(\n\t            \"button\",\n\t            { \"data-toggle\": \"dropdown\", className: \"btn btn-default dropdown-toggle\" },\n\t            _react2[\"default\"].createElement(\"span\", { className: \"caret\", id: caretId })\n\t        ),\n\t        _react2[\"default\"].createElement(\n\t            \"ul\",\n\t            { role: \"menu\", className: \"dropdown-menu\" },\n\t            buttonsHtml\n\t        )\n\t    );\n\t};\n\tDropdownButtons.propTypes = {\n\t    buttons: _react.PropTypes.array.isRequired\n\t};\n\t\n\tfunction vmId(vmName) {\n\t    return \"vm-\" + vmName;\n\t}\n\t\n\tvar VmOverviewTabRecord = function VmOverviewTabRecord(_ref5) {\n\t    var id = _ref5.id;\n\t    var descr = _ref5.descr;\n\t    var value = _ref5.value;\n\t\n\t    return _react2[\"default\"].createElement(\n\t        \"tr\",\n\t        null,\n\t        _react2[\"default\"].createElement(\n\t            \"td\",\n\t            { className: \"top\" },\n\t            _react2[\"default\"].createElement(\n\t                \"label\",\n\t                { className: \"control-label\" },\n\t                descr\n\t            )\n\t        ),\n\t        _react2[\"default\"].createElement(\n\t            \"td\",\n\t            { id: id },\n\t            value\n\t        )\n\t    );\n\t};\n\tVmOverviewTabRecord.propTypes = {\n\t    id: _react.PropTypes.string,\n\t    descr: _react.PropTypes.string.isRequired,\n\t    value: _react.PropTypes.string.isRequired\n\t};\n\t\n\tvar VmLastMessage = function VmLastMessage(_ref6) {\n\t    var vm = _ref6.vm;\n\t\n\t    if (!vm.lastMessage) {\n\t        return null;\n\t    }\n\t\n\t    var detail = vm.lastMessageDetail && vm.lastMessageDetail.exception ? vm.lastMessageDetail.exception : vm.lastMessage;\n\t    return _react2[\"default\"].createElement(\n\t        \"p\",\n\t        { title: detail, \"data-toggle\": \"tooltip\" },\n\t        _react2[\"default\"].createElement(\"span\", { className: \"pficon-warning-triangle-o\" }),\n\t        \" \",\n\t        vm.lastMessage\n\t    );\n\t};\n\tVmLastMessage.propTypes = {\n\t    vm: _react.PropTypes.object.isRequired\n\t};\n\t\n\tvar VmOverviewTab = function VmOverviewTab(_ref7) {\n\t    var vm = _ref7.vm;\n\t\n\t    return _react2[\"default\"].createElement(\n\t        \"div\",\n\t        null,\n\t        _react2[\"default\"].createElement(\n\t            \"table\",\n\t            { className: \"machines-width-max\" },\n\t            _react2[\"default\"].createElement(\n\t                \"tr\",\n\t                { className: \"machines-listing-ct-body-detail\" },\n\t                _react2[\"default\"].createElement(\n\t                    \"td\",\n\t                    null,\n\t                    _react2[\"default\"].createElement(\n\t                        \"table\",\n\t                        { className: \"form-table-ct\" },\n\t                        _react2[\"default\"].createElement(VmOverviewTabRecord, { id: vmId(vm.name) + \"-state\", descr: \"State:\", value: vm.state }),\n\t                        _react2[\"default\"].createElement(VmOverviewTabRecord, { descr: _(\"Memory:\"),\n\t                            value: _cockpit2[\"default\"].format_bytes((vm.currentMemory ? vm.currentMemory : 0) * 1024) }),\n\t                        _react2[\"default\"].createElement(VmOverviewTabRecord, { descr: _(\"vCPUs:\"), value: vm.vcpus })\n\t                    )\n\t                ),\n\t                _react2[\"default\"].createElement(\n\t                    \"td\",\n\t                    null,\n\t                    _react2[\"default\"].createElement(\n\t                        \"table\",\n\t                        { className: \"form-table-ct\" },\n\t                        _react2[\"default\"].createElement(VmOverviewTabRecord, { descr: _(\"ID:\"), value: vm.id }),\n\t                        _react2[\"default\"].createElement(VmOverviewTabRecord, { descr: _(\"OS Type:\"), value: vm.osType }),\n\t                        _react2[\"default\"].createElement(VmOverviewTabRecord, { descr: _(\"Autostart:\"), value: (0, _helpersEs6.rephraseUI)('autostart', vm.autostart) })\n\t                    )\n\t                )\n\t            )\n\t        ),\n\t        _react2[\"default\"].createElement(VmLastMessage, { vm: vm })\n\t    );\n\t};\n\tVmOverviewTab.propTypes = {\n\t    vm: _react.PropTypes.object.isRequired\n\t};\n\t\n\tvar VmUsageTab = function VmUsageTab(_ref8) {\n\t    var vm = _ref8.vm;\n\t\n\t    var width = 220;\n\t    var height = 170;\n\t\n\t    var rssMem = vm[\"rssMemory\"] ? vm[\"rssMemory\"] : 0; // in KiB\n\t    var memTotal = vm[\"currentMemory\"] ? vm[\"currentMemory\"] : 0; // in KiB\n\t    var available = memTotal - rssMem; // in KiB\n\t    available = available < 0 ? 0 : available;\n\t\n\t    var totalCpus = vm['vcpus'] > 0 ? vm['vcpus'] : 0;\n\t    // 4 CPU system can have usage 400%, let's keep % between 0..100\n\t    var cpuUsage = vm['cpuUsage'] / (totalCpus > 0 ? totalCpus : 1);\n\t    cpuUsage = isNaN(cpuUsage) ? 0 : cpuUsage;\n\t\n\t    (0, _helpersEs6.logDebug)(\"VmUsageTab.render(): rssMem: \" + rssMem + \" KiB, memTotal: \" + memTotal + \" KiB, available: \" + available + \" KiB, totalCpus: \" + totalCpus + \", cpuUsage: \" + cpuUsage);\n\t\n\t    var memChartData = {\n\t        columns: [[_(\"Used\"), (0, _helpersEs6.toGigaBytes)(rssMem, 'KiB')], [_(\"Available\"), (0, _helpersEs6.toGigaBytes)(available, 'KiB')]],\n\t        groups: [[\"used\", \"available\"]],\n\t        order: null\n\t    };\n\t\n\t    var cpuChartData = {\n\t        columns: [[_(\"Used\"), cpuUsage], [_(\"Available\"), 100.0 - cpuUsage]],\n\t        groups: [[\"used\", \"available\"]],\n\t        order: null\n\t    };\n\t\n\t    var chartSize = {\n\t        width: width, // keep the .usage-donut-caption CSS in sync\n\t        height: height\n\t    };\n\t\n\t    return _react2[\"default\"].createElement(\n\t        \"table\",\n\t        null,\n\t        _react2[\"default\"].createElement(\n\t            \"tr\",\n\t            null,\n\t            _react2[\"default\"].createElement(\n\t                \"td\",\n\t                null,\n\t                _react2[\"default\"].createElement(_c3chartsJsx2[\"default\"], { data: memChartData, size: chartSize, width: \"8\", tooltipText: \" \",\n\t                    primaryTitle: (0, _helpersEs6.toGigaBytes)(rssMem, 'KiB'), secondaryTitle: \"GB\",\n\t                    caption: \"used from \" + _cockpit2[\"default\"].format_bytes(memTotal * 1024) + \" memory\" })\n\t            ),\n\t            _react2[\"default\"].createElement(\n\t                \"td\",\n\t                null,\n\t                _react2[\"default\"].createElement(_c3chartsJsx2[\"default\"], { data: cpuChartData, size: chartSize, width: \"8\", tooltipText: \" \",\n\t                    primaryTitle: cpuUsage, secondaryTitle: \"%\",\n\t                    caption: \"used from \" + totalCpus + \" vCPUs\" })\n\t            )\n\t        )\n\t    );\n\t};\n\tVmUsageTab.propTypes = {\n\t    vm: _react2[\"default\"].PropTypes.object.isRequired\n\t};\n\t\n\t/** One VM in the list (a row)\n\t */\n\tvar Vm = function Vm(_ref9) {\n\t    var vm = _ref9.vm;\n\t    var onStart = _ref9.onStart;\n\t    var onShutdown = _ref9.onShutdown;\n\t    var onForceoff = _ref9.onForceoff;\n\t    var onReboot = _ref9.onReboot;\n\t    var onForceReboot = _ref9.onForceReboot;\n\t\n\t    var stateIcon = _react2[\"default\"].createElement(StateIcon, { state: vm.state });\n\t    return _react2[\"default\"].createElement(_cockpitComponentsListingJsx.ListingRow, {\n\t        columns: [{ name: vm.name, 'header': true }, (0, _helpersEs6.rephraseUI)('connections', vm.connectionName), stateIcon],\n\t        tabRenderers: [{ name: _(\"Overview\"), renderer: VmOverviewTab, data: { vm: vm } }, { name: _(\"Usage\"), renderer: VmUsageTab, data: { vm: vm }, presence: 'onlyActive' }],\n\t        listingActions: VmActions({ vmId: vmId(vm.name), state: vm.state,\n\t            onStart: onStart, onReboot: onReboot, onForceReboot: onForceReboot, onShutdown: onShutdown, onForceoff: onForceoff }) });\n\t};\n\tVm.propTypes = {\n\t    vm: _react2[\"default\"].PropTypes.object.isRequired,\n\t    onStart: _react2[\"default\"].PropTypes.func.isRequired,\n\t    onShutdown: _react2[\"default\"].PropTypes.func.isRequired,\n\t    onForceoff: _react2[\"default\"].PropTypes.func.isRequired,\n\t    onReboot: _react2[\"default\"].PropTypes.func.isRequired,\n\t    onForceReboot: _react2[\"default\"].PropTypes.func.isRequired\n\t};\n\t\n\t/**\n\t * List of all VMs defined on this host\n\t */\n\tvar HostVmsList = function HostVmsList(_ref10) {\n\t    var vms = _ref10.vms;\n\t    var dispatch = _ref10.dispatch;\n\t\n\t    if (vms.length === 0) {\n\t        return _react2[\"default\"].createElement(\n\t            \"div\",\n\t            { className: \"container-fluid\" },\n\t            _react2[\"default\"].createElement(NoVm, null)\n\t        );\n\t    }\n\t\n\t    return _react2[\"default\"].createElement(\n\t        \"div\",\n\t        { className: \"container-fluid\" },\n\t        _react2[\"default\"].createElement(\n\t            _cockpitComponentsListingJsx.Listing,\n\t            { title: _(\"Virtual Machines\"), columnTitles: [_(\"Name\"), _(\"Connection\"), _(\"State\")] },\n\t            vms.map(function (vm) {\n\t                return _react2[\"default\"].createElement(Vm, { vm: vm,\n\t                    onStart: function () {\n\t                        return dispatch((0, _actionsEs6.startVm)(vm.connectionName, vm.name));\n\t                    },\n\t                    onReboot: function () {\n\t                        return dispatch((0, _actionsEs6.rebootVm)(vm.connectionName, vm.name));\n\t                    },\n\t                    onForceReboot: function () {\n\t                        return dispatch((0, _actionsEs6.forceRebootVm)(vm.connectionName, vm.name));\n\t                    },\n\t                    onShutdown: function () {\n\t                        return dispatch((0, _actionsEs6.shutdownVm)(vm.connectionName, vm.name));\n\t                    },\n\t                    onForceoff: function () {\n\t                        return dispatch((0, _actionsEs6.forceVmOff)(vm.connectionName, vm.name));\n\t                    } });\n\t            })\n\t        )\n\t    );\n\t};\n\tHostVmsList.propTypes = {\n\t    vms: _react.PropTypes.object.isRequired,\n\t    dispatch: _react.PropTypes.func.isRequired\n\t};\n\t\n\texports[\"default\"] = HostVmsList;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*jshint esversion: 6 */\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\texports.getAllVms = getAllVms;\n\texports.getVm = getVm;\n\texports.shutdownVm = shutdownVm;\n\texports.forceVmOff = forceVmOff;\n\texports.rebootVm = rebootVm;\n\texports.forceRebootVm = forceRebootVm;\n\texports.startVm = startVm;\n\texports.delayPolling = delayPolling;\n\texports.setProvider = setProvider;\n\texports.setRefreshInterval = setRefreshInterval;\n\texports.updateOrAddVm = updateOrAddVm;\n\texports.vmActionFailed = vmActionFailed;\n\texports.deleteUnlistedVMs = deleteUnlistedVMs;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _cockpit = __webpack_require__(17);\n\t\n\tvar _cockpit2 = _interopRequireDefault(_cockpit);\n\t\n\tvar _libvirtEs6 = __webpack_require__(22);\n\t\n\tvar _libvirtEs62 = _interopRequireDefault(_libvirtEs6);\n\t\n\tvar _selectorsEs6 = __webpack_require__(25);\n\t\n\tvar _configEs6 = __webpack_require__(15);\n\t\n\tvar _configEs62 = _interopRequireDefault(_configEs6);\n\t\n\tvar _helpersEs6 = __webpack_require__(16);\n\t\n\t/**\n\t * All actions dispatchable by in the application\n\t */\n\t\n\t// --- Provider actions -----------------------------------------\n\t/**\n\t *\n\t * @param connectionName optional - if `undefined` then for all connections\n\t */\n\t\n\tfunction getAllVms(connectionName) {\n\t    return virt('GET_ALL_VMS', { connectionName: connectionName });\n\t}\n\t\n\tfunction getVm(connectionName, lookupId) {\n\t    return virt('GET_VM', {\n\t        lookupId: lookupId, // provider-specific (i.e. libvirt uses vm_name)\n\t        connectionName: connectionName\n\t    });\n\t}\n\t\n\tfunction shutdownVm(connectionName, name) {\n\t    return virt('SHUTDOWN_VM', { connectionName: connectionName, name: name });\n\t}\n\t\n\tfunction forceVmOff(connectionName, name) {\n\t    return virt('FORCEOFF_VM', { connectionName: connectionName, name: name });\n\t}\n\t\n\tfunction rebootVm(connectionName, name) {\n\t    return virt('REBOOT_VM', { connectionName: connectionName, name: name });\n\t}\n\t\n\tfunction forceRebootVm(connectionName, name) {\n\t    return virt('FORCEREBOOT_VM', { connectionName: connectionName, name: name });\n\t}\n\t\n\tfunction startVm(connectionName, name) {\n\t    return virt('START_VM', { connectionName: connectionName, name: name });\n\t}\n\t\n\t/**\n\t * Helper for dispatching virt provider methods.\n\t *\n\t * Lazily initializes the virt provider and dispatches given method on it.\n\t */\n\tfunction virt(method, action) {\n\t    return function (dispatch, getState) {\n\t        return getVirtProvider({ dispatch: dispatch, getState: getState }).then(function (provider) {\n\t            if (method in provider) {\n\t                (0, _helpersEs6.logDebug)('Calling ' + provider.name + '.' + method + '(' + JSON.stringify(action) + ')');\n\t                return dispatch(provider[method](action));\n\t            } else {\n\t                console.warn('method: \\'' + method + '\\' is not supported by provider: \\'' + provider.name + '\\'');\n\t            }\n\t        })['catch'](function (err) {\n\t            console.error('could not detect any virt provider');\n\t        });\n\t    };\n\t}\n\t\n\tfunction getVirtProvider(store) {\n\t    var state = store.getState();\n\t    if (state.config.provider) {\n\t        return _cockpit2['default'].resolve(state.config.provider);\n\t    } else {\n\t        var _ret = (function () {\n\t            var deferred = _cockpit2['default'].defer();\n\t            (0, _helpersEs6.logDebug)('Discovering provider');\n\t            /* TODO: discover host capabilities\n\t             systemctl is-active vdsmd\n\t             active\n\t             unknown\n\t             */\n\t            var provider = null;\n\t            if (false /*TODO: Detect VDSM*/) {\n\t                    // TODO: dispatch/resolve VDSM provider\n\t                } else if (true /* TODO: detect libvirt */) {\n\t                        (0, _helpersEs6.logDebug)('Selecting Libvirt as the VIRT provider.');\n\t                        provider = _libvirtEs62['default'];\n\t                    }\n\t\n\t            if (!provider) {\n\t                //  no provider available\n\t                deferred.reject();\n\t            } else {\n\t                store.dispatch(setProvider(provider));\n\t\n\t                // Skip the initialization if provider does not define the `init` hook.\n\t                if (!provider.init) {\n\t                    deferred.resolve(provider);\n\t                } else {\n\t                    // Providers are expected to return promise as a part of initialization\n\t                    // so we can resolve only after the provider had time to properly initialize.\n\t                    store.dispatch(provider.init()).then(function () {\n\t                        return deferred.resolve(provider);\n\t                    })['catch'](deferred.reject);\n\t                }\n\t            }\n\t\n\t            return {\n\t                v: deferred.promise\n\t            };\n\t        })();\n\t\n\t        if (typeof _ret === 'object') return _ret.v;\n\t    }\n\t}\n\t\n\t/**\n\t * Delay call of polling action.\n\t *\n\t * To avoid execution overlap, the setTimeout() is used instead of setInterval().\n\t *\n\t * The delayPolling() function is called after previous execution is finished so\n\t * the refresh interval starts counting since that moment.\n\t *\n\t * If the application is not visible, the polling action execution is skipped\n\t * and scheduled on later.\n\t *\n\t * @param action I.e. getAllVms()\n\t */\n\t\n\tfunction delayPolling(action, timeout) {\n\t    return function (dispatch, getState) {\n\t        timeout = timeout || (0, _selectorsEs6.getRefreshInterval)(getState());\n\t\n\t        if (timeout > 0 && !_cockpit2['default'].hidden) {\n\t            (0, _helpersEs6.logDebug)('Scheduling ' + timeout + ' ms delayed action');\n\t            window.setTimeout(function () {\n\t                (0, _helpersEs6.logDebug)('Executing delayed action');\n\t                dispatch(action);\n\t            }, timeout);\n\t        } else {\n\t            // logDebug(`Skipping delayed action since refreshing is switched off`);\n\t            window.setTimeout(function () {\n\t                return dispatch(delayPolling(action, timeout));\n\t            }, _configEs62['default'].DefaultRefreshInterval);\n\t        }\n\t    };\n\t}\n\t\n\t// --- Store actions --------------------------------------------\n\t\n\tfunction setProvider(provider) {\n\t    return {\n\t        type: 'SET_PROVIDER',\n\t        provider: provider\n\t    };\n\t}\n\t\n\tfunction setRefreshInterval(refreshInterval) {\n\t    return {\n\t        type: 'SET_REFRESH_INTERVAL',\n\t        refreshInterval: refreshInterval\n\t    };\n\t}\n\t\n\tfunction updateOrAddVm(_ref) {\n\t    var id = _ref.id;\n\t    var name = _ref.name;\n\t    var connectionName = _ref.connectionName;\n\t    var state = _ref.state;\n\t    var osType = _ref.osType;\n\t    var fqdn = _ref.fqdn;\n\t    var uptime = _ref.uptime;\n\t    var currentMemory = _ref.currentMemory;\n\t    var rssMemory = _ref.rssMemory;\n\t    var vcpus = _ref.vcpus;\n\t    var autostart = _ref.autostart;\n\t    var actualTimeInMs = _ref.actualTimeInMs;\n\t    var cpuTime = _ref.cpuTime;\n\t\n\t    var vm = {};\n\t\n\t    if (id !== undefined) vm.id = id;\n\t    if (name !== undefined) vm.name = name;\n\t    if (connectionName !== undefined) vm.connectionName = connectionName;\n\t    if (state !== undefined) vm.state = state;\n\t    if (osType !== undefined) vm.osType = osType;\n\t    if (currentMemory !== undefined) vm.currentMemory = currentMemory;\n\t    if (rssMemory !== undefined) vm.rssMemory = rssMemory;\n\t    if (vcpus !== undefined) vm.vcpus = vcpus;\n\t    if (fqdn !== undefined) vm.fqdn = fqdn;\n\t    if (uptime !== undefined) vm.uptime = uptime;\n\t    if (autostart !== undefined) vm.autostart = autostart;\n\t\n\t    if (actualTimeInMs !== undefined) vm.actualTimeInMs = actualTimeInMs;\n\t    if (cpuTime !== undefined) vm.cpuTime = cpuTime;\n\t\n\t    return {\n\t        type: 'UPDATE_ADD_VM',\n\t        vm: vm\n\t    };\n\t}\n\t\n\tfunction vmActionFailed(_ref2) {\n\t    var name = _ref2.name;\n\t    var connectionName = _ref2.connectionName;\n\t    var message = _ref2.message;\n\t    var detail = _ref2.detail;\n\t\n\t    return {\n\t        type: 'VM_ACTION_FAILED',\n\t        payload: {\n\t            name: name,\n\t            connectionName: connectionName,\n\t            message: message,\n\t            detail: detail\n\t        }\n\t    };\n\t}\n\t\n\tfunction deleteUnlistedVMs(connectionName, vmNames) {\n\t    return {\n\t        type: 'DELETE_UNLISTED_VMS',\n\t        vmNames: vmNames,\n\t        connectionName: connectionName\n\t    };\n\t}\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*jshint esversion: 6 */\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t/*\n\t * Provider for Libvirt\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _cockpit = __webpack_require__(17);\n\t\n\tvar _cockpit2 = _interopRequireDefault(_cockpit);\n\t\n\tvar _jquery = __webpack_require__(23);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\tvar _actionsEs6 = __webpack_require__(21);\n\t\n\tvar _servicesEs6 = __webpack_require__(24);\n\t\n\tvar _helpersEs6 = __webpack_require__(16);\n\t\n\tvar _configEs6 = __webpack_require__(15);\n\t\n\tvar _configEs62 = _interopRequireDefault(_configEs6);\n\t\n\tvar _ = _cockpit2['default'].gettext;\n\t\n\t// --- compatibility hack\n\tif (!String.prototype.startsWith) {\n\t    String.prototype.startsWith = function (searchString, position) {\n\t        position = position || 0;\n\t        return this.substr(position, searchString.length) === searchString;\n\t    };\n\t}\n\t\n\t/**\n\t * Parse non-XML stdout of virsh.\n\t *\n\t * @param virshStdout\n\t * @returns {*}\n\t */\n\tfunction parseLines(virshStdout) {\n\t    return virshStdout.match(/[^\\r\\n]+/g);\n\t}\n\t\n\t/**\n\t * Parse format of:\n\t * Pattern: value\n\t * @param parsedLines\n\t * @param pattern\n\t */\n\tfunction getValueFromLine(parsedLines, pattern) {\n\t    var selectedLine = parsedLines.filter(function (line) {\n\t        return line.trim().startsWith(pattern);\n\t    });\n\t    return (0, _helpersEs6.isEmpty)(selectedLine) ? undefined : selectedLine.toString().trim().substring(pattern.length).trim();\n\t}\n\t\n\texports['default'] = {\n\t    name: 'Libvirt',\n\t\n\t    /**\n\t     * read VM properties (virsh)\n\t     *\n\t     * @param VM name\n\t     * @returns {Function}\n\t     */\n\t    GET_VM: function GET_VM(_ref) {\n\t        var name = _ref.lookupId;\n\t        var connectionName = _ref.connectionName;\n\t\n\t        (0, _helpersEs6.logDebug)(this.name + '.GET_VM()');\n\t\n\t        var canFailHandler = function canFailHandler(_ref2) {\n\t            var exception = _ref2.exception;\n\t            var data = _ref2.data;\n\t\n\t            console.info('The \\'virsh\\' command failed, as expected: \"' + JSON.stringify(exception) + '\", data: \"' + JSON.stringify(data) + '\"');\n\t        };\n\t\n\t        return function (dispatch) {\n\t            if (!(0, _helpersEs6.isEmpty)(name)) {\n\t                return spawnVirshReadOnly({ connectionName: connectionName, method: 'dumpxml', name: name }).then(function (domXml) {\n\t                    parseDumpxml(dispatch, connectionName, domXml);\n\t                    return spawnVirshReadOnly({ connectionName: connectionName, method: 'dominfo', name: name });\n\t                }).then(function (domInfo) {\n\t                    if ((0, _helpersEs6.isRunning)(parseDominfo(dispatch, connectionName, name, domInfo))) {\n\t                        return spawnVirshReadOnly({ connectionName: connectionName, method: 'dommemstat', name: name, failHandler: canFailHandler });\n\t                    }\n\t                }).then(function (dommemstat) {\n\t                    if (dommemstat) {\n\t                        // is undefined if vm is not running\n\t                        parseDommemstat(dispatch, connectionName, name, dommemstat);\n\t                        return spawnVirshReadOnly({ connectionName: connectionName, method: 'domstats', name: name, failHandler: canFailHandler });\n\t                    }\n\t                }).then(function (domstats) {\n\t                    if (domstats) {\n\t                        parseDomstats(dispatch, connectionName, name, domstats);\n\t                    }\n\t                }); // end of GET_VM return\n\t            }\n\t        };\n\t    },\n\t\n\t    /**\n\t     * Initiate read of all VMs\n\t     *\n\t     * @returns {Function}\n\t     */\n\t    GET_ALL_VMS: function GET_ALL_VMS(_ref3) {\n\t        var connectionName = _ref3.connectionName;\n\t\n\t        (0, _helpersEs6.logDebug)(this.name + '.GET_ALL_VMS(connectionName=\\'' + connectionName + '\\'):');\n\t        if (connectionName) {\n\t            return function (dispatch) {\n\t                return doGetAllVms(dispatch, connectionName);\n\t            };\n\t        }\n\t\n\t        return function (dispatch) {\n\t            // for all connections\n\t            return _cockpit2['default'].user().done(function (loggedUser) {\n\t                var promises = Object.getOwnPropertyNames(_configEs62['default'].Virsh.connections).filter(\n\t                // The 'root' user does not have its own qemu:///session just qemu:///system\n\t                // https://bugzilla.redhat.com/show_bug.cgi?id=1045069\n\t                function (connectionName) {\n\t                    return canLoggedUserConnectSession(connectionName, loggedUser);\n\t                }).map(function (connectionName) {\n\t                    return dispatch((0, _actionsEs6.getAllVms)(connectionName));\n\t                });\n\t\n\t                return _cockpit2['default'].all(promises).then(function () {\n\t                    // keep polling AFTER all VM details have been read (avoid overlap)\n\t                    dispatch((0, _actionsEs6.delayPolling)((0, _actionsEs6.getAllVms)()));\n\t                });\n\t            });\n\t        };\n\t    },\n\t\n\t    SHUTDOWN_VM: function SHUTDOWN_VM(_ref4) {\n\t        var name = _ref4.name;\n\t        var connectionName = _ref4.connectionName;\n\t\n\t        (0, _helpersEs6.logDebug)(this.name + '.SHUTDOWN_VM(' + name + '):');\n\t        return function (dispatch) {\n\t            return spawnVirsh({ connectionName: connectionName,\n\t                method: 'SHUTDOWN_VM',\n\t                failHandler: function failHandler(_ref5) {\n\t                    var exception = _ref5.exception;\n\t                    var data = _ref5.data;\n\t                    return dispatch((0, _actionsEs6.vmActionFailed)({ name: name, connectionName: connectionName,\n\t                        message: _(\"SHUTDOWN_VM action failed\"), detail: { exception: exception, data: data } }));\n\t                },\n\t                args: ['shutdown', name]\n\t            });\n\t        };\n\t    },\n\t\n\t    FORCEOFF_VM: function FORCEOFF_VM(_ref6) {\n\t        var name = _ref6.name;\n\t        var connectionName = _ref6.connectionName;\n\t\n\t        (0, _helpersEs6.logDebug)(this.name + '.FORCEOFF_VM(' + name + '):');\n\t        return function (dispatch) {\n\t            return spawnVirsh({ connectionName: connectionName,\n\t                method: 'FORCEOFF_VM',\n\t                failHandler: function failHandler(_ref7) {\n\t                    var exception = _ref7.exception;\n\t                    var data = _ref7.data;\n\t                    return dispatch((0, _actionsEs6.vmActionFailed)({ name: name, connectionName: connectionName,\n\t                        message: _(\"FORCEOFF_VM action failed\"), detail: { exception: exception, data: data } }));\n\t                },\n\t                args: ['destroy', name]\n\t            });\n\t        };\n\t    },\n\t\n\t    REBOOT_VM: function REBOOT_VM(_ref8) {\n\t        var name = _ref8.name;\n\t        var connectionName = _ref8.connectionName;\n\t\n\t        (0, _helpersEs6.logDebug)(this.name + '.REBOOT_VM(' + name + '):');\n\t        return function (dispatch) {\n\t            return spawnVirsh({ connectionName: connectionName,\n\t                method: 'REBOOT_VM',\n\t                failHandler: function failHandler(_ref9) {\n\t                    var exception = _ref9.exception;\n\t                    var data = _ref9.data;\n\t                    return dispatch((0, _actionsEs6.vmActionFailed)({ name: name, connectionName: connectionName,\n\t                        message: _(\"REBOOT_VM action failed\"), detail: { exception: exception, data: data } }));\n\t                },\n\t                args: ['reboot', name]\n\t            });\n\t        };\n\t    },\n\t\n\t    FORCEREBOOT_VM: function FORCEREBOOT_VM(_ref10) {\n\t        var name = _ref10.name;\n\t        var connectionName = _ref10.connectionName;\n\t\n\t        (0, _helpersEs6.logDebug)(this.name + '.FORCEREBOOT_VM(' + name + '):');\n\t        return function (dispatch) {\n\t            return spawnVirsh({ connectionName: connectionName,\n\t                method: 'FORCEREBOOT_VM',\n\t                failHandler: function failHandler(_ref11) {\n\t                    var exception = _ref11.exception;\n\t                    var data = _ref11.data;\n\t                    return dispatch((0, _actionsEs6.vmActionFailed)({ name: name, connectionName: connectionName,\n\t                        message: _(\"FORCEREBOOT_VM action failed\"), detail: { exception: exception, data: data } }));\n\t                },\n\t                args: ['reset', name]\n\t            });\n\t        };\n\t    },\n\t\n\t    START_VM: function START_VM(_ref12) {\n\t        var name = _ref12.name;\n\t        var connectionName = _ref12.connectionName;\n\t\n\t        (0, _helpersEs6.logDebug)(this.name + '.START_VM(' + name + '):');\n\t        return function (dispatch) {\n\t            return spawnVirsh({ connectionName: connectionName,\n\t                method: 'START_VM',\n\t                failHandler: function failHandler(_ref13) {\n\t                    var exception = _ref13.exception;\n\t                    var data = _ref13.data;\n\t                    return dispatch((0, _actionsEs6.vmActionFailed)({ name: name, connectionName: connectionName,\n\t                        message: _(\"START_VM action failed\"), detail: { exception: exception, data: data } }));\n\t                },\n\t                args: ['start', name]\n\t            });\n\t        };\n\t    }\n\t};\n\t\n\tfunction canLoggedUserConnectSession(connectionName, loggedUser) {\n\t    return connectionName !== 'session' || loggedUser.name !== 'root';\n\t}\n\t\n\tfunction doGetAllVms(dispatch, connectionName) {\n\t    var connection = _configEs62['default'].Virsh.connections[connectionName];\n\t\n\t    return (0, _servicesEs6.spawnScript)({\n\t        script: 'virsh ' + connection.params.join(' ') + ' -r list --all | awk \\'$1 == \"-\" || $1+0 > 0 { print $2 }\\''\n\t    }).then(function (output) {\n\t        var vmNames = output.trim().split(/\\r?\\n/);\n\t        vmNames.forEach(function (vmName, index) {\n\t            vmNames[index] = vmName.trim();\n\t        });\n\t        (0, _helpersEs6.logDebug)('GET_ALL_VMS: vmNames: ' + JSON.stringify(vmNames));\n\t\n\t        // remove undefined domains\n\t        dispatch((0, _actionsEs6.deleteUnlistedVMs)(connectionName, vmNames));\n\t\n\t        // read VM details\n\t        return _cockpit2['default'].all(vmNames.map(function (name) {\n\t            return dispatch((0, _actionsEs6.getVm)(connectionName, name));\n\t        }));\n\t    });\n\t}\n\t\n\t// TODO: add configurable custom virsh attribs - i.e. libvirt user/pwd\n\tfunction spawnVirsh(_ref14) {\n\t    var connectionName = _ref14.connectionName;\n\t    var method = _ref14.method;\n\t    var failHandler = _ref14.failHandler;\n\t    var args = _ref14.args;\n\t\n\t    return (0, _servicesEs6.spawnProcess)({\n\t        cmd: 'virsh',\n\t        args: _configEs62['default'].Virsh.connections[connectionName].params.concat(args),\n\t        failHandler: failHandler\n\t    })['catch'](function (ex, data, output) {\n\t        var msg = method + '() exception: \\'' + ex + '\\', data: \\'' + data + '\\', output: \\'' + output + '\\'';\n\t        if (failHandler) {\n\t            (0, _helpersEs6.logDebug)(msg);\n\t            return;\n\t        }\n\t        console.error(msg);\n\t    });\n\t}\n\t\n\tfunction spawnVirshReadOnly(_ref15) {\n\t    var connectionName = _ref15.connectionName;\n\t    var method = _ref15.method;\n\t    var name = _ref15.name;\n\t    var failHandler = _ref15.failHandler;\n\t\n\t    return spawnVirsh({ connectionName: connectionName, method: method, args: ['-r', method, name], failHandler: failHandler });\n\t}\n\t\n\tfunction parseDumpxml(dispatch, connectionName, domXml) {\n\t    var xmlDoc = _jquery2['default'].parseXML(domXml);\n\t\n\t    var domainElem = xmlDoc.getElementsByTagName(\"domain\")[0];\n\t    var osElem = domainElem.getElementsByTagName(\"os\")[0];\n\t    var currentMemoryElem = domainElem.getElementsByTagName(\"currentMemory\")[0];\n\t    var vcpuElem = domainElem.getElementsByTagName(\"vcpu\")[0];\n\t\n\t    var name = domainElem.getElementsByTagName(\"name\")[0].childNodes[0].nodeValue;\n\t    var id = domainElem.getElementsByTagName(\"uuid\")[0].childNodes[0].nodeValue;\n\t    var osType = osElem.getElementsByTagName(\"type\")[0].childNodes[0].nodeValue;\n\t\n\t    var currentMemoryUnit = currentMemoryElem.getAttribute(\"unit\");\n\t    var currentMemory = (0, _helpersEs6.toKiloBytes)(currentMemoryElem.childNodes[0].nodeValue, currentMemoryUnit);\n\t\n\t    var vcpus = vcpuElem.childNodes[0].nodeValue;\n\t\n\t    dispatch((0, _actionsEs6.updateOrAddVm)({ connectionName: connectionName, name: name, id: id, osType: osType, currentMemory: currentMemory, vcpus: vcpus }));\n\t}\n\t\n\tfunction parseDominfo(dispatch, connectionName, name, domInfo) {\n\t    var lines = parseLines(domInfo);\n\t    var state = getValueFromLine(lines, 'State:');\n\t    var autostart = getValueFromLine(lines, 'Autostart:');\n\t\n\t    if (!(0, _helpersEs6.isRunning)(state)) {\n\t        // clean usage data\n\t        dispatch((0, _actionsEs6.updateOrAddVm)({ connectionName: connectionName, name: name, state: state, autostart: autostart, actualTimeInMs: -1 }));\n\t    } else {\n\t        dispatch((0, _actionsEs6.updateOrAddVm)({ connectionName: connectionName, name: name, state: state, autostart: autostart }));\n\t    }\n\t\n\t    return state;\n\t}\n\t\n\tfunction parseDommemstat(dispatch, connectionName, name, dommemstat) {\n\t    var lines = parseLines(dommemstat);\n\t\n\t    var rssMemory = getValueFromLine(lines, 'rss'); // in KiB\n\t\n\t    if (rssMemory) {\n\t        dispatch((0, _actionsEs6.updateOrAddVm)({ connectionName: connectionName, name: name, rssMemory: rssMemory }));\n\t    }\n\t}\n\t\n\tfunction parseDomstats(dispatch, connectionName, name, domstats) {\n\t    var actualTimeInMs = Date.now();\n\t\n\t    var lines = parseLines(domstats);\n\t\n\t    var cpuTime = getValueFromLine(lines, 'cpu\\.time=');\n\t    // TODO: Add disk, network usage statistics\n\t\n\t    if (cpuTime) {\n\t        dispatch((0, _actionsEs6.updateOrAddVm)({ connectionName: connectionName, name: name, actualTimeInMs: actualTimeInMs, cpuTime: cpuTime }));\n\t    }\n\t}\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tmodule.exports = jQuery;\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*jshint esversion: 6 */\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\texports.spawnProcess = spawnProcess;\n\texports.spawnScript = spawnScript;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i]; return arr2; } else { return Array.from(arr); } }\n\t\n\tvar _cockpit = __webpack_require__(17);\n\t\n\tvar _cockpit2 = _interopRequireDefault(_cockpit);\n\t\n\tvar _helpersEs6 = __webpack_require__(16);\n\t\n\tfunction spawnProcess(_ref) {\n\t    var cmd = _ref.cmd;\n\t    var _ref$args = _ref.args;\n\t    var args = _ref$args === undefined ? [] : _ref$args;\n\t    var stdin = _ref.stdin;\n\t    var failHandler = _ref.failHandler;\n\t\n\t    var spawnArgs = [cmd].concat(_toConsumableArray(args));\n\t    (0, _helpersEs6.logDebug)('spawn process args: ' + spawnArgs);\n\t\n\t    return spawn(_cockpit2['default'].spawn(spawnArgs, { err: \"message\" }).input(stdin)).fail(function (exception, data) {\n\t        if (failHandler) {\n\t            failHandler({ exception: exception, data: data });\n\t            return;\n\t        }\n\t        console.error('spawn \\'' + cmd + '\\' process returned error: \"' + JSON.stringify(exception) + '\", data: \"' + JSON.stringify(data) + '\"');\n\t    });\n\t}\n\t\n\tfunction spawnScript(_ref2) {\n\t    var script = _ref2.script;\n\t\n\t    var spawnArgs = [script];\n\t    (0, _helpersEs6.logDebug)('spawn script args: ' + spawnArgs);\n\t\n\t    return spawn(_cockpit2['default'].script(spawnArgs, [], { err: \"message\" })).fail(function (ex, data) {\n\t        return console.error('spawn \\'' + script + '\\' script error: \"' + JSON.stringify(ex) + '\", data: \"' + JSON.stringify(data) + '\"');\n\t    });\n\t}\n\t\n\tfunction spawn(command) {\n\t    var deferred = _cockpit2['default'].defer();\n\t    var stdout = '';\n\t    command.stream(function (chunk) {\n\t        stdout += chunk;\n\t    }).done(function () {\n\t        deferred.resolve(stdout);\n\t    }).fail(function (ex, data) {\n\t        deferred.reject(ex, data, stdout);\n\t    });\n\t\n\t    return deferred.promise;\n\t}\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t/*\n\t * Selectors are pattern that enables to decouple the View layer from the exact layout of\n\t * the state in Redux store. This also enables to put derived (computed) data on the same level\n\t * as the objects stored in the store directly.\n\t *\n\t * Reference: http://redux.js.org/docs/recipes/ComputingDerivedData.html\n\t */\n\t\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.getRefreshInterval = getRefreshInterval;\n\t\n\tfunction getRefreshInterval(state) {\n\t  return state.config.refreshInterval;\n\t}\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*jshint esversion: 6 */\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar _jquery = __webpack_require__(23);\n\t\n\tvar _jquery2 = _interopRequireDefault(_jquery);\n\t\n\tvar _react = __webpack_require__(11);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _c3C3 = __webpack_require__(27);\n\t\n\tvar _c3C32 = _interopRequireDefault(_c3C3);\n\t\n\tvar _helpersEs6 = __webpack_require__(16);\n\t\n\tvar idCounter = 0; // To keep <div id=\"\"> unique\n\t\n\tvar DonutChart = (function (_React$Component) {\n\t    _inherits(DonutChart, _React$Component);\n\t\n\t    function DonutChart(props) {\n\t        _classCallCheck(this, DonutChart);\n\t\n\t        _get(Object.getPrototypeOf(DonutChart.prototype), \"constructor\", this).call(this, props);\n\t        this.domId = \"chart-donut-\" + idCounter++;\n\t    }\n\t\n\t    _createClass(DonutChart, [{\n\t        key: \"prepareProps\",\n\t        value: function prepareProps(props) {\n\t            var state = {\n\t                data: props['data'] ? props['data'] : {},\n\t                size: props['size'] ? props['size'] : { width: 150, height: 100 },\n\t                width: props['width'] ? props['width'] : 10,\n\t\n\t                tooltipText: props['tooltipText'],\n\t                primaryTitle: props['primaryTitle'],\n\t                secondaryTitle: props['secondaryTitle'],\n\t\n\t                caption: props['caption'] ? props['caption'] : ''\n\t            };\n\t            state.data['type'] = 'donut';\n\t            return state;\n\t        }\n\t    }, {\n\t        key: \"componentDidMount\",\n\t        value: function componentDidMount() {\n\t            this._renderChart();\n\t        }\n\t    }, {\n\t        key: \"componentWillUnmount\",\n\t        value: function componentWillUnmount() {\n\t            this.donutChart.destroy();\n\t        }\n\t    }, {\n\t        key: \"shouldComponentUpdate\",\n\t        value: function shouldComponentUpdate(nextProps) {\n\t            if (this.props['data']) {\n\t                var result = JSON.stringify(this.props.data.columns) !== JSON.stringify(nextProps.data.columns);\n\t                (0, _helpersEs6.logDebug)(\"shouldComponentUpdate() \" + result + \"\\nold: \" + JSON.stringify(this.props.data.columns) + \"\\nnew: \" + JSON.stringify(nextProps.data.columns));\n\t                return result;\n\t            }\n\t\n\t            return true;\n\t        }\n\t    }, {\n\t        key: \"_renderChart\",\n\t        value: function _renderChart() {\n\t            (0, _helpersEs6.logDebug)('DonutChart._render() called');\n\t            var bindTo = \"#\" + this.domId;\n\t            var c3ChartDefaults = (0, _jquery2[\"default\"])().c3ChartDefaults();\n\t            var options = c3ChartDefaults.getDefaultDonutConfig('');\n\t\n\t            var props = this.prepareProps(this.props);\n\t\n\t            options.bindto = bindTo;\n\t            options.data = props.data;\n\t            options.size = props.size;\n\t            options.donut.width = props.width;\n\t            options.tooltip = props.tooltipText ? { contents: (0, _jquery2[\"default\"])().pfGetUtilizationDonutTooltipContentsFn(props.tooltipText) } : options.tooltip;\n\t\n\t            try {\n\t                this.donutChart = _c3C32[\"default\"].generate(options);\n\t                (0, _jquery2[\"default\"])().pfSetDonutChartTitle(bindTo, props.primaryTitle, props.secondaryTitle);\n\t            } catch (err) {\n\t                (0, _helpersEs6.logDebug)('Exception thrown when rendering donut chart: ', err);\n\t            }\n\t        }\n\t    }, {\n\t        key: \"render\",\n\t        value: function render() {\n\t            this._renderChart();\n\t\n\t            return _react2[\"default\"].createElement(\n\t                \"div\",\n\t                null,\n\t                _react2[\"default\"].createElement(\"div\", { id: this.domId }),\n\t                _react2[\"default\"].createElement(\n\t                    \"div\",\n\t                    { className: \"usage-donut-caption\" },\n\t                    this.props['caption']\n\t                )\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return DonutChart;\n\t})(_react2[\"default\"].Component);\n\t\n\texports[\"default\"] = DonutChart;\n\tmodule.exports = exports[\"default\"];\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;(function (window) {\n\t    'use strict';\n\t\n\t    /*global define, module, exports, require */\n\t\n\t    var c3 = { version: \"0.4.11\" };\n\t\n\t    var c3_chart_fn,\n\t        c3_chart_internal_fn,\n\t        c3_chart_internal_axis_fn;\n\t\n\t    function API(owner) {\n\t        this.owner = owner;\n\t    }\n\t\n\t    function inherit(base, derived) {\n\t\n\t        if (Object.create) {\n\t            derived.prototype = Object.create(base.prototype);\n\t        } else {\n\t            var f = function f() {};\n\t            f.prototype = base.prototype;\n\t            derived.prototype = new f();\n\t        }\n\t\n\t        derived.prototype.constructor = derived;\n\t\n\t        return derived;\n\t    }\n\t\n\t    function Chart(config) {\n\t        var $$ = this.internal = new ChartInternal(this);\n\t        $$.loadConfig(config);\n\t\n\t        $$.beforeInit(config);\n\t        $$.init();\n\t        $$.afterInit(config);\n\t\n\t        // bind \"this\" to nested API\n\t        (function bindThis(fn, target, argThis) {\n\t            Object.keys(fn).forEach(function (key) {\n\t                target[key] = fn[key].bind(argThis);\n\t                if (Object.keys(fn[key]).length > 0) {\n\t                    bindThis(fn[key], target[key], argThis);\n\t                }\n\t            });\n\t        })(c3_chart_fn, this, this);\n\t    }\n\t\n\t    function ChartInternal(api) {\n\t        var $$ = this;\n\t        $$.d3 = window.d3 ? window.d3 :  true ? __webpack_require__(28) : undefined;\n\t        $$.api = api;\n\t        $$.config = $$.getDefaultConfig();\n\t        $$.data = {};\n\t        $$.cache = {};\n\t        $$.axes = {};\n\t    }\n\t\n\t    c3.generate = function (config) {\n\t        return new Chart(config);\n\t    };\n\t\n\t    c3.chart = {\n\t        fn: Chart.prototype,\n\t        internal: {\n\t            fn: ChartInternal.prototype,\n\t            axis: {\n\t                fn: Axis.prototype\n\t            }\n\t        }\n\t    };\n\t    c3_chart_fn = c3.chart.fn;\n\t    c3_chart_internal_fn = c3.chart.internal.fn;\n\t    c3_chart_internal_axis_fn = c3.chart.internal.axis.fn;\n\t\n\t    c3_chart_internal_fn.beforeInit = function () {\n\t        // can do something\n\t    };\n\t    c3_chart_internal_fn.afterInit = function () {\n\t        // can do something\n\t    };\n\t    c3_chart_internal_fn.init = function () {\n\t        var $$ = this, config = $$.config;\n\t\n\t        $$.initParams();\n\t\n\t        if (config.data_url) {\n\t            $$.convertUrlToData(config.data_url, config.data_mimeType, config.data_headers, config.data_keys, $$.initWithData);\n\t        }\n\t        else if (config.data_json) {\n\t            $$.initWithData($$.convertJsonToData(config.data_json, config.data_keys));\n\t        }\n\t        else if (config.data_rows) {\n\t            $$.initWithData($$.convertRowsToData(config.data_rows));\n\t        }\n\t        else if (config.data_columns) {\n\t            $$.initWithData($$.convertColumnsToData(config.data_columns));\n\t        }\n\t        else {\n\t            throw Error('url or json or rows or columns is required.');\n\t        }\n\t    };\n\t\n\t    c3_chart_internal_fn.initParams = function () {\n\t        var $$ = this, d3 = $$.d3, config = $$.config;\n\t\n\t        // MEMO: clipId needs to be unique because it conflicts when multiple charts exist\n\t        $$.clipId = \"c3-\" + (+new Date()) + '-clip',\n\t        $$.clipIdForXAxis = $$.clipId + '-xaxis',\n\t        $$.clipIdForYAxis = $$.clipId + '-yaxis',\n\t        $$.clipIdForGrid = $$.clipId + '-grid',\n\t        $$.clipIdForSubchart = $$.clipId + '-subchart',\n\t        $$.clipPath = $$.getClipPath($$.clipId),\n\t        $$.clipPathForXAxis = $$.getClipPath($$.clipIdForXAxis),\n\t        $$.clipPathForYAxis = $$.getClipPath($$.clipIdForYAxis);\n\t        $$.clipPathForGrid = $$.getClipPath($$.clipIdForGrid),\n\t        $$.clipPathForSubchart = $$.getClipPath($$.clipIdForSubchart),\n\t\n\t        $$.dragStart = null;\n\t        $$.dragging = false;\n\t        $$.flowing = false;\n\t        $$.cancelClick = false;\n\t        $$.mouseover = false;\n\t        $$.transiting = false;\n\t\n\t        $$.color = $$.generateColor();\n\t        $$.levelColor = $$.generateLevelColor();\n\t\n\t        $$.dataTimeFormat = config.data_xLocaltime ? d3.time.format : d3.time.format.utc;\n\t        $$.axisTimeFormat = config.axis_x_localtime ? d3.time.format : d3.time.format.utc;\n\t        $$.defaultAxisTimeFormat = $$.axisTimeFormat.multi([\n\t            [\".%L\", function (d) { return d.getMilliseconds(); }],\n\t            [\":%S\", function (d) { return d.getSeconds(); }],\n\t            [\"%I:%M\", function (d) { return d.getMinutes(); }],\n\t            [\"%I %p\", function (d) { return d.getHours(); }],\n\t            [\"%-m/%-d\", function (d) { return d.getDay() && d.getDate() !== 1; }],\n\t            [\"%-m/%-d\", function (d) { return d.getDate() !== 1; }],\n\t            [\"%-m/%-d\", function (d) { return d.getMonth(); }],\n\t            [\"%Y/%-m/%-d\", function () { return true; }]\n\t        ]);\n\t\n\t        $$.hiddenTargetIds = [];\n\t        $$.hiddenLegendIds = [];\n\t        $$.focusedTargetIds = [];\n\t        $$.defocusedTargetIds = [];\n\t\n\t        $$.xOrient = config.axis_rotated ? \"left\" : \"bottom\";\n\t        $$.yOrient = config.axis_rotated ? (config.axis_y_inner ? \"top\" : \"bottom\") : (config.axis_y_inner ? \"right\" : \"left\");\n\t        $$.y2Orient = config.axis_rotated ? (config.axis_y2_inner ? \"bottom\" : \"top\") : (config.axis_y2_inner ? \"left\" : \"right\");\n\t        $$.subXOrient = config.axis_rotated ? \"left\" : \"bottom\";\n\t\n\t        $$.isLegendRight = config.legend_position === 'right';\n\t        $$.isLegendInset = config.legend_position === 'inset';\n\t        $$.isLegendTop = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'top-right';\n\t        $$.isLegendLeft = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'bottom-left';\n\t        $$.legendStep = 0;\n\t        $$.legendItemWidth = 0;\n\t        $$.legendItemHeight = 0;\n\t\n\t        $$.currentMaxTickWidths = {\n\t            x: 0,\n\t            y: 0,\n\t            y2: 0\n\t        };\n\t\n\t        $$.rotated_padding_left = 30;\n\t        $$.rotated_padding_right = config.axis_rotated && !config.axis_x_show ? 0 : 30;\n\t        $$.rotated_padding_top = 5;\n\t\n\t        $$.withoutFadeIn = {};\n\t\n\t        $$.intervalForObserveInserted = undefined;\n\t\n\t        $$.axes.subx = d3.selectAll([]); // needs when excluding subchart.js\n\t    };\n\t\n\t    c3_chart_internal_fn.initChartElements = function () {\n\t        if (this.initBar) { this.initBar(); }\n\t        if (this.initLine) { this.initLine(); }\n\t        if (this.initArc) { this.initArc(); }\n\t        if (this.initGauge) { this.initGauge(); }\n\t        if (this.initText) { this.initText(); }\n\t    };\n\t\n\t    c3_chart_internal_fn.initWithData = function (data) {\n\t        var $$ = this, d3 = $$.d3, config = $$.config;\n\t        var defs, main, binding = true;\n\t\n\t        $$.axis = new Axis($$);\n\t\n\t        if ($$.initPie) { $$.initPie(); }\n\t        if ($$.initBrush) { $$.initBrush(); }\n\t        if ($$.initZoom) { $$.initZoom(); }\n\t\n\t        if (!config.bindto) {\n\t            $$.selectChart = d3.selectAll([]);\n\t        }\n\t        else if (typeof config.bindto.node === 'function') {\n\t            $$.selectChart = config.bindto;\n\t        }\n\t        else {\n\t            $$.selectChart = d3.select(config.bindto);\n\t        }\n\t        if ($$.selectChart.empty()) {\n\t            $$.selectChart = d3.select(document.createElement('div')).style('opacity', 0);\n\t            $$.observeInserted($$.selectChart);\n\t            binding = false;\n\t        }\n\t        $$.selectChart.html(\"\").classed(\"c3\", true);\n\t\n\t        // Init data as targets\n\t        $$.data.xs = {};\n\t        $$.data.targets = $$.convertDataToTargets(data);\n\t\n\t        if (config.data_filter) {\n\t            $$.data.targets = $$.data.targets.filter(config.data_filter);\n\t        }\n\t\n\t        // Set targets to hide if needed\n\t        if (config.data_hide) {\n\t            $$.addHiddenTargetIds(config.data_hide === true ? $$.mapToIds($$.data.targets) : config.data_hide);\n\t        }\n\t        if (config.legend_hide) {\n\t            $$.addHiddenLegendIds(config.legend_hide === true ? $$.mapToIds($$.data.targets) : config.legend_hide);\n\t        }\n\t\n\t        // when gauge, hide legend // TODO: fix\n\t        if ($$.hasType('gauge')) {\n\t            config.legend_show = false;\n\t        }\n\t\n\t        // Init sizes and scales\n\t        $$.updateSizes();\n\t        $$.updateScales();\n\t\n\t        // Set domains for each scale\n\t        $$.x.domain(d3.extent($$.getXDomain($$.data.targets)));\n\t        $$.y.domain($$.getYDomain($$.data.targets, 'y'));\n\t        $$.y2.domain($$.getYDomain($$.data.targets, 'y2'));\n\t        $$.subX.domain($$.x.domain());\n\t        $$.subY.domain($$.y.domain());\n\t        $$.subY2.domain($$.y2.domain());\n\t\n\t        // Save original x domain for zoom update\n\t        $$.orgXDomain = $$.x.domain();\n\t\n\t        // Set initialized scales to brush and zoom\n\t        if ($$.brush) { $$.brush.scale($$.subX); }\n\t        if (config.zoom_enabled) { $$.zoom.scale($$.x); }\n\t\n\t        /*-- Basic Elements --*/\n\t\n\t        // Define svgs\n\t        $$.svg = $$.selectChart.append(\"svg\")\n\t            .style(\"overflow\", \"hidden\")\n\t            .on('mouseenter', function () { return config.onmouseover.call($$); })\n\t            .on('mouseleave', function () { return config.onmouseout.call($$); });\n\t\n\t        if ($$.config.svg_classname) {\n\t            $$.svg.attr('class', $$.config.svg_classname);\n\t        }\n\t\n\t        // Define defs\n\t        defs = $$.svg.append(\"defs\");\n\t        $$.clipChart = $$.appendClip(defs, $$.clipId);\n\t        $$.clipXAxis = $$.appendClip(defs, $$.clipIdForXAxis);\n\t        $$.clipYAxis = $$.appendClip(defs, $$.clipIdForYAxis);\n\t        $$.clipGrid = $$.appendClip(defs, $$.clipIdForGrid);\n\t        $$.clipSubchart = $$.appendClip(defs, $$.clipIdForSubchart);\n\t        $$.updateSvgSize();\n\t\n\t        // Define regions\n\t        main = $$.main = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('main'));\n\t\n\t        if ($$.initSubchart) { $$.initSubchart(); }\n\t        if ($$.initTooltip) { $$.initTooltip(); }\n\t        if ($$.initLegend) { $$.initLegend(); }\n\t        if ($$.initTitle) { $$.initTitle(); }\n\t\n\t        /*-- Main Region --*/\n\t\n\t        // text when empty\n\t        main.append(\"text\")\n\t            .attr(\"class\", CLASS.text + ' ' + CLASS.empty)\n\t            .attr(\"text-anchor\", \"middle\") // horizontal centering of text at x position in all browsers.\n\t            .attr(\"dominant-baseline\", \"middle\"); // vertical centering of text at y position in all browsers, except IE.\n\t\n\t        // Regions\n\t        $$.initRegion();\n\t\n\t        // Grids\n\t        $$.initGrid();\n\t\n\t        // Define g for chart area\n\t        main.append('g')\n\t            .attr(\"clip-path\", $$.clipPath)\n\t            .attr('class', CLASS.chart);\n\t\n\t        // Grid lines\n\t        if (config.grid_lines_front) { $$.initGridLines(); }\n\t\n\t        // Cover whole with rects for events\n\t        $$.initEventRect();\n\t\n\t        // Define g for chart\n\t        $$.initChartElements();\n\t\n\t        // if zoom privileged, insert rect to forefront\n\t        // TODO: is this needed?\n\t        main.insert('rect', config.zoom_privileged ? null : 'g.' + CLASS.regions)\n\t            .attr('class', CLASS.zoomRect)\n\t            .attr('width', $$.width)\n\t            .attr('height', $$.height)\n\t            .style('opacity', 0)\n\t            .on(\"dblclick.zoom\", null);\n\t\n\t        // Set default extent if defined\n\t        if (config.axis_x_extent) { $$.brush.extent($$.getDefaultExtent()); }\n\t\n\t        // Add Axis\n\t        $$.axis.init();\n\t\n\t        // Set targets\n\t        $$.updateTargets($$.data.targets);\n\t\n\t        // Draw with targets\n\t        if (binding) {\n\t            $$.updateDimension();\n\t            $$.config.oninit.call($$);\n\t            $$.redraw({\n\t                withTransition: false,\n\t                withTransform: true,\n\t                withUpdateXDomain: true,\n\t                withUpdateOrgXDomain: true,\n\t                withTransitionForAxis: false\n\t            });\n\t        }\n\t\n\t        // Bind resize event\n\t        $$.bindResize();\n\t\n\t        // export element of the chart\n\t        $$.api.element = $$.selectChart.node();\n\t    };\n\t\n\t    c3_chart_internal_fn.smoothLines = function (el, type) {\n\t        var $$ = this;\n\t        if (type === 'grid') {\n\t            el.each(function () {\n\t                var g = $$.d3.select(this),\n\t                    x1 = g.attr('x1'),\n\t                    x2 = g.attr('x2'),\n\t                    y1 = g.attr('y1'),\n\t                    y2 = g.attr('y2');\n\t                g.attr({\n\t                    'x1': Math.ceil(x1),\n\t                    'x2': Math.ceil(x2),\n\t                    'y1': Math.ceil(y1),\n\t                    'y2': Math.ceil(y2)\n\t                });\n\t            });\n\t        }\n\t    };\n\t\n\t\n\t    c3_chart_internal_fn.updateSizes = function () {\n\t        var $$ = this, config = $$.config;\n\t        var legendHeight = $$.legend ? $$.getLegendHeight() : 0,\n\t            legendWidth = $$.legend ? $$.getLegendWidth() : 0,\n\t            legendHeightForBottom = $$.isLegendRight || $$.isLegendInset ? 0 : legendHeight,\n\t            hasArc = $$.hasArcType(),\n\t            xAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x'),\n\t            subchartHeight = config.subchart_show && !hasArc ? (config.subchart_size_height + xAxisHeight) : 0;\n\t\n\t        $$.currentWidth = $$.getCurrentWidth();\n\t        $$.currentHeight = $$.getCurrentHeight();\n\t\n\t        // for main\n\t        $$.margin = config.axis_rotated ? {\n\t            top: $$.getHorizontalAxisHeight('y2') + $$.getCurrentPaddingTop(),\n\t            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n\t            bottom: $$.getHorizontalAxisHeight('y') + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n\t            left: subchartHeight + (hasArc ? 0 : $$.getCurrentPaddingLeft())\n\t        } : {\n\t            top: 4 + $$.getCurrentPaddingTop(), // for top tick text\n\t            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n\t            bottom: xAxisHeight + subchartHeight + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n\t            left: hasArc ? 0 : $$.getCurrentPaddingLeft()\n\t        };\n\t\n\t        // for subchart\n\t        $$.margin2 = config.axis_rotated ? {\n\t            top: $$.margin.top,\n\t            right: NaN,\n\t            bottom: 20 + legendHeightForBottom,\n\t            left: $$.rotated_padding_left\n\t        } : {\n\t            top: $$.currentHeight - subchartHeight - legendHeightForBottom,\n\t            right: NaN,\n\t            bottom: xAxisHeight + legendHeightForBottom,\n\t            left: $$.margin.left\n\t        };\n\t\n\t        // for legend\n\t        $$.margin3 = {\n\t            top: 0,\n\t            right: NaN,\n\t            bottom: 0,\n\t            left: 0\n\t        };\n\t        if ($$.updateSizeForLegend) { $$.updateSizeForLegend(legendHeight, legendWidth); }\n\t\n\t        $$.width = $$.currentWidth - $$.margin.left - $$.margin.right;\n\t        $$.height = $$.currentHeight - $$.margin.top - $$.margin.bottom;\n\t        if ($$.width < 0) { $$.width = 0; }\n\t        if ($$.height < 0) { $$.height = 0; }\n\t\n\t        $$.width2 = config.axis_rotated ? $$.margin.left - $$.rotated_padding_left - $$.rotated_padding_right : $$.width;\n\t        $$.height2 = config.axis_rotated ? $$.height : $$.currentHeight - $$.margin2.top - $$.margin2.bottom;\n\t        if ($$.width2 < 0) { $$.width2 = 0; }\n\t        if ($$.height2 < 0) { $$.height2 = 0; }\n\t\n\t        // for arc\n\t        $$.arcWidth = $$.width - ($$.isLegendRight ? legendWidth + 10 : 0);\n\t        $$.arcHeight = $$.height - ($$.isLegendRight ? 0 : 10);\n\t        if ($$.hasType('gauge') && !config.gauge_fullCircle) {\n\t            $$.arcHeight += $$.height - $$.getGaugeLabelHeight();\n\t        }\n\t        if ($$.updateRadius) { $$.updateRadius(); }\n\t\n\t        if ($$.isLegendRight && hasArc) {\n\t            $$.margin3.left = $$.arcWidth / 2 + $$.radiusExpanded * 1.1;\n\t        }\n\t    };\n\t\n\t    c3_chart_internal_fn.updateTargets = function (targets) {\n\t        var $$ = this;\n\t\n\t        /*-- Main --*/\n\t\n\t        //-- Text --//\n\t        $$.updateTargetsForText(targets);\n\t\n\t        //-- Bar --//\n\t        $$.updateTargetsForBar(targets);\n\t\n\t        //-- Line --//\n\t        $$.updateTargetsForLine(targets);\n\t\n\t        //-- Arc --//\n\t        if ($$.hasArcType() && $$.updateTargetsForArc) { $$.updateTargetsForArc(targets); }\n\t\n\t        /*-- Sub --*/\n\t\n\t        if ($$.updateTargetsForSubchart) { $$.updateTargetsForSubchart(targets); }\n\t\n\t        // Fade-in each chart\n\t        $$.showTargets();\n\t    };\n\t    c3_chart_internal_fn.showTargets = function () {\n\t        var $$ = this;\n\t        $$.svg.selectAll('.' + CLASS.target).filter(function (d) { return $$.isTargetToShow(d.id); })\n\t          .transition().duration($$.config.transition_duration)\n\t            .style(\"opacity\", 1);\n\t    };\n\t\n\t    c3_chart_internal_fn.redraw = function (options, transitions) {\n\t        var $$ = this, main = $$.main, d3 = $$.d3, config = $$.config;\n\t        var areaIndices = $$.getShapeIndices($$.isAreaType), barIndices = $$.getShapeIndices($$.isBarType), lineIndices = $$.getShapeIndices($$.isLineType);\n\t        var withY, withSubchart, withTransition, withTransitionForExit, withTransitionForAxis,\n\t            withTransform, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain, withLegend,\n\t            withEventRect, withDimension, withUpdateXAxis;\n\t        var hideAxis = $$.hasArcType();\n\t        var drawArea, drawBar, drawLine, xForText, yForText;\n\t        var duration, durationForExit, durationForAxis;\n\t        var waitForDraw, flow;\n\t        var targetsToShow = $$.filterTargetsToShow($$.data.targets), tickValues, i, intervalForCulling, xDomainForZoom;\n\t        var xv = $$.xv.bind($$), cx, cy;\n\t\n\t        options = options || {};\n\t        withY = getOption(options, \"withY\", true);\n\t        withSubchart = getOption(options, \"withSubchart\", true);\n\t        withTransition = getOption(options, \"withTransition\", true);\n\t        withTransform = getOption(options, \"withTransform\", false);\n\t        withUpdateXDomain = getOption(options, \"withUpdateXDomain\", false);\n\t        withUpdateOrgXDomain = getOption(options, \"withUpdateOrgXDomain\", false);\n\t        withTrimXDomain = getOption(options, \"withTrimXDomain\", true);\n\t        withUpdateXAxis = getOption(options, \"withUpdateXAxis\", withUpdateXDomain);\n\t        withLegend = getOption(options, \"withLegend\", false);\n\t        withEventRect = getOption(options, \"withEventRect\", true);\n\t        withDimension = getOption(options, \"withDimension\", true);\n\t        withTransitionForExit = getOption(options, \"withTransitionForExit\", withTransition);\n\t        withTransitionForAxis = getOption(options, \"withTransitionForAxis\", withTransition);\n\t\n\t        duration = withTransition ? config.transition_duration : 0;\n\t        durationForExit = withTransitionForExit ? duration : 0;\n\t        durationForAxis = withTransitionForAxis ? duration : 0;\n\t\n\t        transitions = transitions || $$.axis.generateTransitions(durationForAxis);\n\t\n\t        // update legend and transform each g\n\t        if (withLegend && config.legend_show) {\n\t            $$.updateLegend($$.mapToIds($$.data.targets), options, transitions);\n\t        } else if (withDimension) {\n\t            // need to update dimension (e.g. axis.y.tick.values) because y tick values should change\n\t            // no need to update axis in it because they will be updated in redraw()\n\t            $$.updateDimension(true);\n\t        }\n\t\n\t        // MEMO: needed for grids calculation\n\t        if ($$.isCategorized() && targetsToShow.length === 0) {\n\t            $$.x.domain([0, $$.axes.x.selectAll('.tick').size()]);\n\t        }\n\t\n\t        if (targetsToShow.length) {\n\t            $$.updateXDomain(targetsToShow, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain);\n\t            if (!config.axis_x_tick_values) {\n\t                tickValues = $$.axis.updateXAxisTickValues(targetsToShow);\n\t            }\n\t        } else {\n\t            $$.xAxis.tickValues([]);\n\t            $$.subXAxis.tickValues([]);\n\t        }\n\t\n\t        if (config.zoom_rescale && !options.flow) {\n\t            xDomainForZoom = $$.x.orgDomain();\n\t        }\n\t\n\t        $$.y.domain($$.getYDomain(targetsToShow, 'y', xDomainForZoom));\n\t        $$.y2.domain($$.getYDomain(targetsToShow, 'y2', xDomainForZoom));\n\t\n\t        if (!config.axis_y_tick_values && config.axis_y_tick_count) {\n\t            $$.yAxis.tickValues($$.axis.generateTickValues($$.y.domain(), config.axis_y_tick_count));\n\t        }\n\t        if (!config.axis_y2_tick_values && config.axis_y2_tick_count) {\n\t            $$.y2Axis.tickValues($$.axis.generateTickValues($$.y2.domain(), config.axis_y2_tick_count));\n\t        }\n\t\n\t        // axes\n\t        $$.axis.redraw(transitions, hideAxis);\n\t\n\t        // Update axis label\n\t        $$.axis.updateLabels(withTransition);\n\t\n\t        // show/hide if manual culling needed\n\t        if ((withUpdateXDomain || withUpdateXAxis) && targetsToShow.length) {\n\t            if (config.axis_x_tick_culling && tickValues) {\n\t                for (i = 1; i < tickValues.length; i++) {\n\t                    if (tickValues.length / i < config.axis_x_tick_culling_max) {\n\t                        intervalForCulling = i;\n\t                        break;\n\t                    }\n\t                }\n\t                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').each(function (e) {\n\t                    var index = tickValues.indexOf(e);\n\t                    if (index >= 0) {\n\t                        d3.select(this).style('display', index % intervalForCulling ? 'none' : 'block');\n\t                    }\n\t                });\n\t            } else {\n\t                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').style('display', 'block');\n\t            }\n\t        }\n\t\n\t        // setup drawer - MEMO: these must be called after axis updated\n\t        drawArea = $$.generateDrawArea ? $$.generateDrawArea(areaIndices, false) : undefined;\n\t        drawBar = $$.generateDrawBar ? $$.generateDrawBar(barIndices) : undefined;\n\t        drawLine = $$.generateDrawLine ? $$.generateDrawLine(lineIndices, false) : undefined;\n\t        xForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, true);\n\t        yForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, false);\n\t\n\t        // Update sub domain\n\t        if (withY) {\n\t            $$.subY.domain($$.getYDomain(targetsToShow, 'y'));\n\t            $$.subY2.domain($$.getYDomain(targetsToShow, 'y2'));\n\t        }\n\t\n\t        // xgrid focus\n\t        $$.updateXgridFocus();\n\t\n\t        // Data empty label positioning and text.\n\t        main.select(\"text.\" + CLASS.text + '.' + CLASS.empty)\n\t            .attr(\"x\", $$.width / 2)\n\t            .attr(\"y\", $$.height / 2)\n\t            .text(config.data_empty_label_text)\n\t          .transition()\n\t            .style('opacity', targetsToShow.length ? 0 : 1);\n\t\n\t        // grid\n\t        $$.updateGrid(duration);\n\t\n\t        // rect for regions\n\t        $$.updateRegion(duration);\n\t\n\t        // bars\n\t        $$.updateBar(durationForExit);\n\t\n\t        // lines, areas and cricles\n\t        $$.updateLine(durationForExit);\n\t        $$.updateArea(durationForExit);\n\t        $$.updateCircle();\n\t\n\t        // text\n\t        if ($$.hasDataLabel()) {\n\t            $$.updateText(durationForExit);\n\t        }\n\t\n\t        // title\n\t        if ($$.redrawTitle) { $$.redrawTitle(); }\n\t\n\t        // arc\n\t        if ($$.redrawArc) { $$.redrawArc(duration, durationForExit, withTransform); }\n\t\n\t        // subchart\n\t        if ($$.redrawSubchart) {\n\t            $$.redrawSubchart(withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices);\n\t        }\n\t\n\t        // circles for select\n\t        main.selectAll('.' + CLASS.selectedCircles)\n\t            .filter($$.isBarType.bind($$))\n\t            .selectAll('circle')\n\t            .remove();\n\t\n\t        // event rects will redrawn when flow called\n\t        if (config.interaction_enabled && !options.flow && withEventRect) {\n\t            $$.redrawEventRect();\n\t            if ($$.updateZoom) { $$.updateZoom(); }\n\t        }\n\t\n\t        // update circleY based on updated parameters\n\t        $$.updateCircleY();\n\t\n\t        // generate circle x/y functions depending on updated params\n\t        cx = ($$.config.axis_rotated ? $$.circleY : $$.circleX).bind($$);\n\t        cy = ($$.config.axis_rotated ? $$.circleX : $$.circleY).bind($$);\n\t\n\t        if (options.flow) {\n\t            flow = $$.generateFlow({\n\t                targets: targetsToShow,\n\t                flow: options.flow,\n\t                duration: options.flow.duration,\n\t                drawBar: drawBar,\n\t                drawLine: drawLine,\n\t                drawArea: drawArea,\n\t                cx: cx,\n\t                cy: cy,\n\t                xv: xv,\n\t                xForText: xForText,\n\t                yForText: yForText\n\t            });\n\t        }\n\t\n\t        if ((duration || flow) && $$.isTabVisible()) { // Only use transition if tab visible. See #938.\n\t            // transition should be derived from one transition\n\t            d3.transition().duration(duration).each(function () {\n\t                var transitionsToWait = [];\n\t\n\t                // redraw and gather transitions\n\t                [\n\t                    $$.redrawBar(drawBar, true),\n\t                    $$.redrawLine(drawLine, true),\n\t                    $$.redrawArea(drawArea, true),\n\t                    $$.redrawCircle(cx, cy, true),\n\t                    $$.redrawText(xForText, yForText, options.flow, true),\n\t                    $$.redrawRegion(true),\n\t                    $$.redrawGrid(true),\n\t                ].forEach(function (transitions) {\n\t                    transitions.forEach(function (transition) {\n\t                        transitionsToWait.push(transition);\n\t                    });\n\t                });\n\t\n\t                // Wait for end of transitions to call flow and onrendered callback\n\t                waitForDraw = $$.generateWait();\n\t                transitionsToWait.forEach(function (t) {\n\t                    waitForDraw.add(t);\n\t                });\n\t            })\n\t            .call(waitForDraw, function () {\n\t                if (flow) {\n\t                    flow();\n\t                }\n\t                if (config.onrendered) {\n\t                    config.onrendered.call($$);\n\t                }\n\t            });\n\t        }\n\t        else {\n\t            $$.redrawBar(drawBar);\n\t            $$.redrawLine(drawLine);\n\t            $$.redrawArea(drawArea);\n\t            $$.redrawCircle(cx, cy);\n\t            $$.redrawText(xForText, yForText, options.flow);\n\t            $$.redrawRegion();\n\t            $$.redrawGrid();\n\t            if (config.onrendered) {\n\t                config.onrendered.call($$);\n\t            }\n\t        }\n\t\n\t        // update fadein condition\n\t        $$.mapToIds($$.data.targets).forEach(function (id) {\n\t            $$.withoutFadeIn[id] = true;\n\t        });\n\t    };\n\t\n\t    c3_chart_internal_fn.updateAndRedraw = function (options) {\n\t        var $$ = this, config = $$.config, transitions;\n\t        options = options || {};\n\t        // same with redraw\n\t        options.withTransition = getOption(options, \"withTransition\", true);\n\t        options.withTransform = getOption(options, \"withTransform\", false);\n\t        options.withLegend = getOption(options, \"withLegend\", false);\n\t        // NOT same with redraw\n\t        options.withUpdateXDomain = true;\n\t        options.withUpdateOrgXDomain = true;\n\t        options.withTransitionForExit = false;\n\t        options.withTransitionForTransform = getOption(options, \"withTransitionForTransform\", options.withTransition);\n\t        // MEMO: this needs to be called before updateLegend and it means this ALWAYS needs to be called)\n\t        $$.updateSizes();\n\t        // MEMO: called in updateLegend in redraw if withLegend\n\t        if (!(options.withLegend && config.legend_show)) {\n\t            transitions = $$.axis.generateTransitions(options.withTransitionForAxis ? config.transition_duration : 0);\n\t            // Update scales\n\t            $$.updateScales();\n\t            $$.updateSvgSize();\n\t            // Update g positions\n\t            $$.transformAll(options.withTransitionForTransform, transitions);\n\t        }\n\t        // Draw with new sizes & scales\n\t        $$.redraw(options, transitions);\n\t    };\n\t    c3_chart_internal_fn.redrawWithoutRescale = function () {\n\t        this.redraw({\n\t            withY: false,\n\t            withSubchart: false,\n\t            withEventRect: false,\n\t            withTransitionForAxis: false\n\t        });\n\t    };\n\t\n\t    c3_chart_internal_fn.isTimeSeries = function () {\n\t        return this.config.axis_x_type === 'timeseries';\n\t    };\n\t    c3_chart_internal_fn.isCategorized = function () {\n\t        return this.config.axis_x_type.indexOf('categor') >= 0;\n\t    };\n\t    c3_chart_internal_fn.isCustomX = function () {\n\t        var $$ = this, config = $$.config;\n\t        return !$$.isTimeSeries() && (config.data_x || notEmpty(config.data_xs));\n\t    };\n\t\n\t    c3_chart_internal_fn.isTimeSeriesY = function () {\n\t        return this.config.axis_y_type === 'timeseries';\n\t    };\n\t\n\t    c3_chart_internal_fn.getTranslate = function (target) {\n\t        var $$ = this, config = $$.config, x, y;\n\t        if (target === 'main') {\n\t            x = asHalfPixel($$.margin.left);\n\t            y = asHalfPixel($$.margin.top);\n\t        } else if (target === 'context') {\n\t            x = asHalfPixel($$.margin2.left);\n\t            y = asHalfPixel($$.margin2.top);\n\t        } else if (target === 'legend') {\n\t            x = $$.margin3.left;\n\t            y = $$.margin3.top;\n\t        } else if (target === 'x') {\n\t            x = 0;\n\t            y = config.axis_rotated ? 0 : $$.height;\n\t        } else if (target === 'y') {\n\t            x = 0;\n\t            y = config.axis_rotated ? $$.height : 0;\n\t        } else if (target === 'y2') {\n\t            x = config.axis_rotated ? 0 : $$.width;\n\t            y = config.axis_rotated ? 1 : 0;\n\t        } else if (target === 'subx') {\n\t            x = 0;\n\t            y = config.axis_rotated ? 0 : $$.height2;\n\t        } else if (target === 'arc') {\n\t            x = $$.arcWidth / 2;\n\t            y = $$.arcHeight / 2;\n\t        }\n\t        return \"translate(\" + x + \",\" + y + \")\";\n\t    };\n\t    c3_chart_internal_fn.initialOpacity = function (d) {\n\t        return d.value !== null && this.withoutFadeIn[d.id] ? 1 : 0;\n\t    };\n\t    c3_chart_internal_fn.initialOpacityForCircle = function (d) {\n\t        return d.value !== null && this.withoutFadeIn[d.id] ? this.opacityForCircle(d) : 0;\n\t    };\n\t    c3_chart_internal_fn.opacityForCircle = function (d) {\n\t        var opacity = this.config.point_show ? 1 : 0;\n\t        return isValue(d.value) ? (this.isScatterType(d) ? 0.5 : opacity) : 0;\n\t    };\n\t    c3_chart_internal_fn.opacityForText = function () {\n\t        return this.hasDataLabel() ? 1 : 0;\n\t    };\n\t    c3_chart_internal_fn.xx = function (d) {\n\t        return d ? this.x(d.x) : null;\n\t    };\n\t    c3_chart_internal_fn.xv = function (d) {\n\t        var $$ = this, value = d.value;\n\t        if ($$.isTimeSeries()) {\n\t            value = $$.parseDate(d.value);\n\t        }\n\t        else if ($$.isCategorized() && typeof d.value === 'string') {\n\t            value = $$.config.axis_x_categories.indexOf(d.value);\n\t        }\n\t        return Math.ceil($$.x(value));\n\t    };\n\t    c3_chart_internal_fn.yv = function (d) {\n\t        var $$ = this,\n\t            yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y;\n\t        return Math.ceil(yScale(d.value));\n\t    };\n\t    c3_chart_internal_fn.subxx = function (d) {\n\t        return d ? this.subX(d.x) : null;\n\t    };\n\t\n\t    c3_chart_internal_fn.transformMain = function (withTransition, transitions) {\n\t        var $$ = this,\n\t            xAxis, yAxis, y2Axis;\n\t        if (transitions && transitions.axisX) {\n\t            xAxis = transitions.axisX;\n\t        } else {\n\t            xAxis  = $$.main.select('.' + CLASS.axisX);\n\t            if (withTransition) { xAxis = xAxis.transition(); }\n\t        }\n\t        if (transitions && transitions.axisY) {\n\t            yAxis = transitions.axisY;\n\t        } else {\n\t            yAxis = $$.main.select('.' + CLASS.axisY);\n\t            if (withTransition) { yAxis = yAxis.transition(); }\n\t        }\n\t        if (transitions && transitions.axisY2) {\n\t            y2Axis = transitions.axisY2;\n\t        } else {\n\t            y2Axis = $$.main.select('.' + CLASS.axisY2);\n\t            if (withTransition) { y2Axis = y2Axis.transition(); }\n\t        }\n\t        (withTransition ? $$.main.transition() : $$.main).attr(\"transform\", $$.getTranslate('main'));\n\t        xAxis.attr(\"transform\", $$.getTranslate('x'));\n\t        yAxis.attr(\"transform\", $$.getTranslate('y'));\n\t        y2Axis.attr(\"transform\", $$.getTranslate('y2'));\n\t        $$.main.select('.' + CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n\t    };\n\t    c3_chart_internal_fn.transformAll = function (withTransition, transitions) {\n\t        var $$ = this;\n\t        $$.transformMain(withTransition, transitions);\n\t        if ($$.config.subchart_show) { $$.transformContext(withTransition, transitions); }\n\t        if ($$.legend) { $$.transformLegend(withTransition); }\n\t    };\n\t\n\t    c3_chart_internal_fn.updateSvgSize = function () {\n\t        var $$ = this,\n\t            brush = $$.svg.select(\".c3-brush .background\");\n\t        $$.svg.attr('width', $$.currentWidth).attr('height', $$.currentHeight);\n\t        $$.svg.selectAll(['#' + $$.clipId, '#' + $$.clipIdForGrid]).select('rect')\n\t            .attr('width', $$.width)\n\t            .attr('height', $$.height);\n\t        $$.svg.select('#' + $$.clipIdForXAxis).select('rect')\n\t            .attr('x', $$.getXAxisClipX.bind($$))\n\t            .attr('y', $$.getXAxisClipY.bind($$))\n\t            .attr('width', $$.getXAxisClipWidth.bind($$))\n\t            .attr('height', $$.getXAxisClipHeight.bind($$));\n\t        $$.svg.select('#' + $$.clipIdForYAxis).select('rect')\n\t            .attr('x', $$.getYAxisClipX.bind($$))\n\t            .attr('y', $$.getYAxisClipY.bind($$))\n\t            .attr('width', $$.getYAxisClipWidth.bind($$))\n\t            .attr('height', $$.getYAxisClipHeight.bind($$));\n\t        $$.svg.select('#' + $$.clipIdForSubchart).select('rect')\n\t            .attr('width', $$.width)\n\t            .attr('height', brush.size() ? brush.attr('height') : 0);\n\t        $$.svg.select('.' + CLASS.zoomRect)\n\t            .attr('width', $$.width)\n\t            .attr('height', $$.height);\n\t        // MEMO: parent div's height will be bigger than svg when <!DOCTYPE html>\n\t        $$.selectChart.style('max-height', $$.currentHeight + \"px\");\n\t    };\n\t\n\t\n\t    c3_chart_internal_fn.updateDimension = function (withoutAxis) {\n\t        var $$ = this;\n\t        if (!withoutAxis) {\n\t            if ($$.config.axis_rotated) {\n\t                $$.axes.x.call($$.xAxis);\n\t                $$.axes.subx.call($$.subXAxis);\n\t            } else {\n\t                $$.axes.y.call($$.yAxis);\n\t                $$.axes.y2.call($$.y2Axis);\n\t            }\n\t        }\n\t        $$.updateSizes();\n\t        $$.updateScales();\n\t        $$.updateSvgSize();\n\t        $$.transformAll(false);\n\t    };\n\t\n\t    c3_chart_internal_fn.observeInserted = function (selection) {\n\t        var $$ = this, observer;\n\t        if (typeof MutationObserver === 'undefined') {\n\t            window.console.error(\"MutationObserver not defined.\");\n\t            return;\n\t        }\n\t        observer= new MutationObserver(function (mutations) {\n\t            mutations.forEach(function (mutation) {\n\t                if (mutation.type === 'childList' && mutation.previousSibling) {\n\t                    observer.disconnect();\n\t                    // need to wait for completion of load because size calculation requires the actual sizes determined after that completion\n\t                    $$.intervalForObserveInserted = window.setInterval(function () {\n\t                        // parentNode will NOT be null when completed\n\t                        if (selection.node().parentNode) {\n\t                            window.clearInterval($$.intervalForObserveInserted);\n\t                            $$.updateDimension();\n\t                            if ($$.brush) { $$.brush.update(); }\n\t                            $$.config.oninit.call($$);\n\t                            $$.redraw({\n\t                                withTransform: true,\n\t                                withUpdateXDomain: true,\n\t                                withUpdateOrgXDomain: true,\n\t                                withTransition: false,\n\t                                withTransitionForTransform: false,\n\t                                withLegend: true\n\t                            });\n\t                            selection.transition().style('opacity', 1);\n\t                        }\n\t                    }, 10);\n\t                }\n\t            });\n\t        });\n\t        observer.observe(selection.node(), {attributes: true, childList: true, characterData: true});\n\t    };\n\t\n\t    c3_chart_internal_fn.bindResize = function () {\n\t        var $$ = this, config = $$.config;\n\t\n\t        $$.resizeFunction = $$.generateResize();\n\t\n\t        $$.resizeFunction.add(function () {\n\t            config.onresize.call($$);\n\t        });\n\t        if (config.resize_auto) {\n\t            $$.resizeFunction.add(function () {\n\t                if ($$.resizeTimeout !== undefined) {\n\t                    window.clearTimeout($$.resizeTimeout);\n\t                }\n\t                $$.resizeTimeout = window.setTimeout(function () {\n\t                    delete $$.resizeTimeout;\n\t                    $$.api.flush();\n\t                }, 100);\n\t            });\n\t        }\n\t        $$.resizeFunction.add(function () {\n\t            config.onresized.call($$);\n\t        });\n\t\n\t        if (window.attachEvent) {\n\t            window.attachEvent('onresize', $$.resizeFunction);\n\t        } else if (window.addEventListener) {\n\t            window.addEventListener('resize', $$.resizeFunction, false);\n\t        } else {\n\t            // fallback to this, if this is a very old browser\n\t            var wrapper = window.onresize;\n\t            if (!wrapper) {\n\t                // create a wrapper that will call all charts\n\t                wrapper = $$.generateResize();\n\t            } else if (!wrapper.add || !wrapper.remove) {\n\t                // there is already a handler registered, make sure we call it too\n\t                wrapper = $$.generateResize();\n\t                wrapper.add(window.onresize);\n\t            }\n\t            // add this graph to the wrapper, we will be removed if the user calls destroy\n\t            wrapper.add($$.resizeFunction);\n\t            window.onresize = wrapper;\n\t        }\n\t    };\n\t\n\t    c3_chart_internal_fn.generateResize = function () {\n\t        var resizeFunctions = [];\n\t        function callResizeFunctions() {\n\t            resizeFunctions.forEach(function (f) {\n\t                f();\n\t            });\n\t        }\n\t        callResizeFunctions.add = function (f) {\n\t            resizeFunctions.push(f);\n\t        };\n\t        callResizeFunctions.remove = function (f) {\n\t            for (var i = 0; i < resizeFunctions.length; i++) {\n\t                if (resizeFunctions[i] === f) {\n\t                    resizeFunctions.splice(i, 1);\n\t                    break;\n\t                }\n\t            }\n\t        };\n\t        return callResizeFunctions;\n\t    };\n\t\n\t    c3_chart_internal_fn.endall = function (transition, callback) {\n\t        var n = 0;\n\t        transition\n\t            .each(function () { ++n; })\n\t            .each(\"end\", function () {\n\t                if (!--n) { callback.apply(this, arguments); }\n\t            });\n\t    };\n\t    c3_chart_internal_fn.generateWait = function () {\n\t        var transitionsToWait = [],\n\t            f = function (transition, callback) {\n\t                var timer = setInterval(function () {\n\t                    var done = 0;\n\t                    transitionsToWait.forEach(function (t) {\n\t                        if (t.empty()) {\n\t                            done += 1;\n\t                            return;\n\t                        }\n\t                        try {\n\t                            t.transition();\n\t                        } catch (e) {\n\t                            done += 1;\n\t                        }\n\t                    });\n\t                    if (done === transitionsToWait.length) {\n\t                        clearInterval(timer);\n\t                        if (callback) { callback(); }\n\t                    }\n\t                }, 10);\n\t            };\n\t        f.add = function (transition) {\n\t            transitionsToWait.push(transition);\n\t        };\n\t        return f;\n\t    };\n\t\n\t    c3_chart_internal_fn.parseDate = function (date) {\n\t        var $$ = this, parsedDate;\n\t        if (date instanceof Date) {\n\t            parsedDate = date;\n\t        } else if (typeof date === 'string') {\n\t            parsedDate = $$.dataTimeFormat($$.config.data_xFormat).parse(date);\n\t        } else if (typeof date === 'number' && !isNaN(date)) {\n\t            parsedDate = new Date(+date);\n\t        }\n\t        if (!parsedDate || isNaN(+parsedDate)) {\n\t            window.console.error(\"Failed to parse x '\" + date + \"' to Date object\");\n\t        }\n\t        return parsedDate;\n\t    };\n\t\n\t    c3_chart_internal_fn.isTabVisible = function () {\n\t        var hidden;\n\t        if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support\n\t            hidden = \"hidden\";\n\t        } else if (typeof document.mozHidden !== \"undefined\") {\n\t            hidden = \"mozHidden\";\n\t        } else if (typeof document.msHidden !== \"undefined\") {\n\t            hidden = \"msHidden\";\n\t        } else if (typeof document.webkitHidden !== \"undefined\") {\n\t            hidden = \"webkitHidden\";\n\t        }\n\t\n\t        return document[hidden] ? false : true;\n\t    };\n\t\n\t    c3_chart_internal_fn.getDefaultConfig = function () {\n\t        var config = {\n\t            bindto: '#chart',\n\t            svg_classname: undefined,\n\t            size_width: undefined,\n\t            size_height: undefined,\n\t            padding_left: undefined,\n\t            padding_right: undefined,\n\t            padding_top: undefined,\n\t            padding_bottom: undefined,\n\t            resize_auto: true,\n\t            zoom_enabled: false,\n\t            zoom_extent: undefined,\n\t            zoom_privileged: false,\n\t            zoom_rescale: false,\n\t            zoom_onzoom: function () {},\n\t            zoom_onzoomstart: function () {},\n\t            zoom_onzoomend: function () {},\n\t            zoom_x_min: undefined,\n\t            zoom_x_max: undefined,\n\t            interaction_brighten: true,\n\t            interaction_enabled: true,\n\t            onmouseover: function () {},\n\t            onmouseout: function () {},\n\t            onresize: function () {},\n\t            onresized: function () {},\n\t            oninit: function () {},\n\t            onrendered: function () {},\n\t            transition_duration: 350,\n\t            data_x: undefined,\n\t            data_xs: {},\n\t            data_xFormat: '%Y-%m-%d',\n\t            data_xLocaltime: true,\n\t            data_xSort: true,\n\t            data_idConverter: function (id) { return id; },\n\t            data_names: {},\n\t            data_classes: {},\n\t            data_groups: [],\n\t            data_axes: {},\n\t            data_type: undefined,\n\t            data_types: {},\n\t            data_labels: {},\n\t            data_order: 'desc',\n\t            data_regions: {},\n\t            data_color: undefined,\n\t            data_colors: {},\n\t            data_hide: false,\n\t            data_filter: undefined,\n\t            data_selection_enabled: false,\n\t            data_selection_grouped: false,\n\t            data_selection_isselectable: function () { return true; },\n\t            data_selection_multiple: true,\n\t            data_selection_draggable: false,\n\t            data_onclick: function () {},\n\t            data_onmouseover: function () {},\n\t            data_onmouseout: function () {},\n\t            data_onselected: function () {},\n\t            data_onunselected: function () {},\n\t            data_url: undefined,\n\t            data_headers: undefined,\n\t            data_json: undefined,\n\t            data_rows: undefined,\n\t            data_columns: undefined,\n\t            data_mimeType: undefined,\n\t            data_keys: undefined,\n\t            // configuration for no plot-able data supplied.\n\t            data_empty_label_text: \"\",\n\t            // subchart\n\t            subchart_show: false,\n\t            subchart_size_height: 60,\n\t            subchart_axis_x_show: true,\n\t            subchart_onbrush: function () {},\n\t            // color\n\t            color_pattern: [],\n\t            color_threshold: {},\n\t            // legend\n\t            legend_show: true,\n\t            legend_hide: false,\n\t            legend_position: 'bottom',\n\t            legend_inset_anchor: 'top-left',\n\t            legend_inset_x: 10,\n\t            legend_inset_y: 0,\n\t            legend_inset_step: undefined,\n\t            legend_item_onclick: undefined,\n\t            legend_item_onmouseover: undefined,\n\t            legend_item_onmouseout: undefined,\n\t            legend_equally: false,\n\t            legend_padding: 0,\n\t            legend_item_tile_width: 10,\n\t            legend_item_tile_height: 10,\n\t            // axis\n\t            axis_rotated: false,\n\t            axis_x_show: true,\n\t            axis_x_type: 'indexed',\n\t            axis_x_localtime: true,\n\t            axis_x_categories: [],\n\t            axis_x_tick_centered: false,\n\t            axis_x_tick_format: undefined,\n\t            axis_x_tick_culling: {},\n\t            axis_x_tick_culling_max: 10,\n\t            axis_x_tick_count: undefined,\n\t            axis_x_tick_fit: true,\n\t            axis_x_tick_values: null,\n\t            axis_x_tick_rotate: 0,\n\t            axis_x_tick_outer: true,\n\t            axis_x_tick_multiline: true,\n\t            axis_x_tick_width: null,\n\t            axis_x_max: undefined,\n\t            axis_x_min: undefined,\n\t            axis_x_padding: {},\n\t            axis_x_height: undefined,\n\t            axis_x_extent: undefined,\n\t            axis_x_label: {},\n\t            axis_y_show: true,\n\t            axis_y_type: undefined,\n\t            axis_y_max: undefined,\n\t            axis_y_min: undefined,\n\t            axis_y_inverted: false,\n\t            axis_y_center: undefined,\n\t            axis_y_inner: undefined,\n\t            axis_y_label: {},\n\t            axis_y_tick_format: undefined,\n\t            axis_y_tick_outer: true,\n\t            axis_y_tick_values: null,        \n\t            axis_y_tick_rotate: 0,\n\t            axis_y_tick_count: undefined,\n\t            axis_y_tick_time_value: undefined,\n\t            axis_y_tick_time_interval: undefined,\n\t            axis_y_padding: {},\n\t            axis_y_default: undefined,\n\t            axis_y2_show: false,\n\t            axis_y2_max: undefined,\n\t            axis_y2_min: undefined,\n\t            axis_y2_inverted: false,\n\t            axis_y2_center: undefined,\n\t            axis_y2_inner: undefined,\n\t            axis_y2_label: {},\n\t            axis_y2_tick_format: undefined,\n\t            axis_y2_tick_outer: true,\n\t            axis_y2_tick_values: null,\n\t            axis_y2_tick_count: undefined,\n\t            axis_y2_padding: {},\n\t            axis_y2_default: undefined,\n\t            // grid\n\t            grid_x_show: false,\n\t            grid_x_type: 'tick',\n\t            grid_x_lines: [],\n\t            grid_y_show: false,\n\t            // not used\n\t            // grid_y_type: 'tick',\n\t            grid_y_lines: [],\n\t            grid_y_ticks: 10,\n\t            grid_focus_show: true,\n\t            grid_lines_front: true,\n\t            // point - point of each data\n\t            point_show: true,\n\t            point_r: 2.5,\n\t            point_sensitivity: 10,\n\t            point_focus_expand_enabled: true,\n\t            point_focus_expand_r: undefined,\n\t            point_select_r: undefined,\n\t            // line\n\t            line_connectNull: false,\n\t            line_step_type: 'step',\n\t            // bar\n\t            bar_width: undefined,\n\t            bar_width_ratio: 0.6,\n\t            bar_width_max: undefined,\n\t            bar_zerobased: true,\n\t            // area\n\t            area_zerobased: true,\n\t            area_above: false,\n\t            // pie\n\t            pie_label_show: true,\n\t            pie_label_format: undefined,\n\t            pie_label_threshold: 0.05,\n\t            pie_label_ratio: undefined,\n\t            pie_expand: {},\n\t            pie_expand_duration: 50,\n\t            // gauge\n\t            gauge_fullCircle: false,\n\t            gauge_label_show: true,\n\t            gauge_label_format: undefined,\n\t            gauge_min: 0,\n\t            gauge_max: 100,\n\t            gauge_startingAngle: -1 * Math.PI/2,\n\t            gauge_units: undefined,\n\t            gauge_width: undefined,\n\t            gauge_expand: {},\n\t            gauge_expand_duration: 50,\n\t            // donut\n\t            donut_label_show: true,\n\t            donut_label_format: undefined,\n\t            donut_label_threshold: 0.05,\n\t            donut_label_ratio: undefined,\n\t            donut_width: undefined,\n\t            donut_title: \"\",\n\t            donut_expand: {},\n\t            donut_expand_duration: 50,\n\t            // spline\n\t            spline_interpolation_type: 'cardinal',\n\t            // region - region to change style\n\t            regions: [],\n\t            // tooltip - show when mouseover on each data\n\t            tooltip_show: true,\n\t            tooltip_grouped: true,\n\t            tooltip_format_title: undefined,\n\t            tooltip_format_name: undefined,\n\t            tooltip_format_value: undefined,\n\t            tooltip_position: undefined,\n\t            tooltip_contents: function (d, defaultTitleFormat, defaultValueFormat, color) {\n\t                return this.getTooltipContent ? this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';\n\t            },\n\t            tooltip_init_show: false,\n\t            tooltip_init_x: 0,\n\t            tooltip_init_position: {top: '0px', left: '50px'},\n\t            tooltip_onshow: function () {},\n\t            tooltip_onhide: function () {},\n\t            // title\n\t            title_text: undefined,\n\t            title_padding: {\n\t                top: 0,\n\t                right: 0,\n\t                bottom: 0,\n\t                left: 0\n\t            },\n\t            title_position: 'top-center',\n\t        };\n\t\n\t        Object.keys(this.additionalConfig).forEach(function (key) {\n\t            config[key] = this.additionalConfig[key];\n\t        }, this);\n\t\n\t        return config;\n\t    };\n\t    c3_chart_internal_fn.additionalConfig = {};\n\t\n\t    c3_chart_internal_fn.loadConfig = function (config) {\n\t        var this_config = this.config, target, keys, read;\n\t        function find() {\n\t            var key = keys.shift();\n\t    //        console.log(\"key =>\", key, \", target =>\", target);\n\t            if (key && target && typeof target === 'object' && key in target) {\n\t                target = target[key];\n\t                return find();\n\t            }\n\t            else if (!key) {\n\t                return target;\n\t            }\n\t            else {\n\t                return undefined;\n\t            }\n\t        }\n\t        Object.keys(this_config).forEach(function (key) {\n\t            target = config;\n\t            keys = key.split('_');\n\t            read = find();\n\t    //        console.log(\"CONFIG : \", key, read);\n\t            if (isDefined(read)) {\n\t                this_config[key] = read;\n\t            }\n\t        });\n\t    };\n\t\n\t    c3_chart_internal_fn.getScale = function (min, max, forTimeseries) {\n\t        return (forTimeseries ? this.d3.time.scale() : this.d3.scale.linear()).range([min, max]);\n\t    };\n\t    c3_chart_internal_fn.getX = function (min, max, domain, offset) {\n\t        var $$ = this,\n\t            scale = $$.getScale(min, max, $$.isTimeSeries()),\n\t            _scale = domain ? scale.domain(domain) : scale, key;\n\t        // Define customized scale if categorized axis\n\t        if ($$.isCategorized()) {\n\t            offset = offset || function () { return 0; };\n\t            scale = function (d, raw) {\n\t                var v = _scale(d) + offset(d);\n\t                return raw ? v : Math.ceil(v);\n\t            };\n\t        } else {\n\t            scale = function (d, raw) {\n\t                var v = _scale(d);\n\t                return raw ? v : Math.ceil(v);\n\t            };\n\t        }\n\t        // define functions\n\t        for (key in _scale) {\n\t            scale[key] = _scale[key];\n\t        }\n\t        scale.orgDomain = function () {\n\t            return _scale.domain();\n\t        };\n\t        // define custom domain() for categorized axis\n\t        if ($$.isCategorized()) {\n\t            scale.domain = function (domain) {\n\t                if (!arguments.length) {\n\t                    domain = this.orgDomain();\n\t                    return [domain[0], domain[1] + 1];\n\t                }\n\t                _scale.domain(domain);\n\t                return scale;\n\t            };\n\t        }\n\t        return scale;\n\t    };\n\t    c3_chart_internal_fn.getY = function (min, max, domain) {\n\t        var scale = this.getScale(min, max, this.isTimeSeriesY());\n\t        if (domain) { scale.domain(domain); }\n\t        return scale;\n\t    };\n\t    c3_chart_internal_fn.getYScale = function (id) {\n\t        return this.axis.getId(id) === 'y2' ? this.y2 : this.y;\n\t    };\n\t    c3_chart_internal_fn.getSubYScale = function (id) {\n\t        return this.axis.getId(id) === 'y2' ? this.subY2 : this.subY;\n\t    };\n\t    c3_chart_internal_fn.updateScales = function () {\n\t        var $$ = this, config = $$.config,\n\t            forInit = !$$.x;\n\t        // update edges\n\t        $$.xMin = config.axis_rotated ? 1 : 0;\n\t        $$.xMax = config.axis_rotated ? $$.height : $$.width;\n\t        $$.yMin = config.axis_rotated ? 0 : $$.height;\n\t        $$.yMax = config.axis_rotated ? $$.width : 1;\n\t        $$.subXMin = $$.xMin;\n\t        $$.subXMax = $$.xMax;\n\t        $$.subYMin = config.axis_rotated ? 0 : $$.height2;\n\t        $$.subYMax = config.axis_rotated ? $$.width2 : 1;\n\t        // update scales\n\t        $$.x = $$.getX($$.xMin, $$.xMax, forInit ? undefined : $$.x.orgDomain(), function () { return $$.xAxis.tickOffset(); });\n\t        $$.y = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y_default : $$.y.domain());\n\t        $$.y2 = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y2_default : $$.y2.domain());\n\t        $$.subX = $$.getX($$.xMin, $$.xMax, $$.orgXDomain, function (d) { return d % 1 ? 0 : $$.subXAxis.tickOffset(); });\n\t        $$.subY = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y_default : $$.subY.domain());\n\t        $$.subY2 = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y2_default : $$.subY2.domain());\n\t        // update axes\n\t        $$.xAxisTickFormat = $$.axis.getXAxisTickFormat();\n\t        $$.xAxisTickValues = $$.axis.getXAxisTickValues();\n\t        $$.yAxisTickValues = $$.axis.getYAxisTickValues();\n\t        $$.y2AxisTickValues = $$.axis.getY2AxisTickValues();\n\t\n\t        $$.xAxis = $$.axis.getXAxis($$.x, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n\t        $$.subXAxis = $$.axis.getXAxis($$.subX, $$.subXOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n\t        $$.yAxis = $$.axis.getYAxis($$.y, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, config.axis_y_tick_outer);\n\t        $$.y2Axis = $$.axis.getYAxis($$.y2, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, config.axis_y2_tick_outer);\n\t\n\t        // Set initialized scales to brush and zoom\n\t        if (!forInit) {\n\t            if ($$.brush) { $$.brush.scale($$.subX); }\n\t            if (config.zoom_enabled) { $$.zoom.scale($$.x); }\n\t        }\n\t        // update for arc\n\t        if ($$.updateArc) { $$.updateArc(); }\n\t    };\n\t\n\t    c3_chart_internal_fn.getYDomainMin = function (targets) {\n\t        var $$ = this, config = $$.config,\n\t            ids = $$.mapToIds(targets), ys = $$.getValuesAsIdKeyed(targets),\n\t            j, k, baseId, idsInGroup, id, hasNegativeValue;\n\t        if (config.data_groups.length > 0) {\n\t            hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n\t            for (j = 0; j < config.data_groups.length; j++) {\n\t                // Determine baseId\n\t                idsInGroup = config.data_groups[j].filter(function (id) { return ids.indexOf(id) >= 0; });\n\t                if (idsInGroup.length === 0) { continue; }\n\t                baseId = idsInGroup[0];\n\t                // Consider negative values\n\t                if (hasNegativeValue && ys[baseId]) {\n\t                    ys[baseId].forEach(function (v, i) {\n\t                        ys[baseId][i] = v < 0 ? v : 0;\n\t                    });\n\t                }\n\t                // Compute min\n\t                for (k = 1; k < idsInGroup.length; k++) {\n\t                    id = idsInGroup[k];\n\t                    if (! ys[id]) { continue; }\n\t                    ys[id].forEach(function (v, i) {\n\t                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasNegativeValue && +v > 0)) {\n\t                            ys[baseId][i] += +v;\n\t                        }\n\t                    });\n\t                }\n\t            }\n\t        }\n\t        return $$.d3.min(Object.keys(ys).map(function (key) { return $$.d3.min(ys[key]); }));\n\t    };\n\t    c3_chart_internal_fn.getYDomainMax = function (targets) {\n\t        var $$ = this, config = $$.config,\n\t            ids = $$.mapToIds(targets), ys = $$.getValuesAsIdKeyed(targets),\n\t            j, k, baseId, idsInGroup, id, hasPositiveValue;\n\t        if (config.data_groups.length > 0) {\n\t            hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n\t            for (j = 0; j < config.data_groups.length; j++) {\n\t                // Determine baseId\n\t                idsInGroup = config.data_groups[j].filter(function (id) { return ids.indexOf(id) >= 0; });\n\t                if (idsInGroup.length === 0) { continue; }\n\t                baseId = idsInGroup[0];\n\t                // Consider positive values\n\t                if (hasPositiveValue && ys[baseId]) {\n\t                    ys[baseId].forEach(function (v, i) {\n\t                        ys[baseId][i] = v > 0 ? v : 0;\n\t                    });\n\t                }\n\t                // Compute max\n\t                for (k = 1; k < idsInGroup.length; k++) {\n\t                    id = idsInGroup[k];\n\t                    if (! ys[id]) { continue; }\n\t                    ys[id].forEach(function (v, i) {\n\t                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasPositiveValue && +v < 0)) {\n\t                            ys[baseId][i] += +v;\n\t                        }\n\t                    });\n\t                }\n\t            }\n\t        }\n\t        return $$.d3.max(Object.keys(ys).map(function (key) { return $$.d3.max(ys[key]); }));\n\t    };\n\t    c3_chart_internal_fn.getYDomain = function (targets, axisId, xDomain) {\n\t        var $$ = this, config = $$.config,\n\t            targetsByAxisId = targets.filter(function (t) { return $$.axis.getId(t.id) === axisId; }),\n\t            yTargets = xDomain ? $$.filterByXDomain(targetsByAxisId, xDomain) : targetsByAxisId,\n\t            yMin = axisId === 'y2' ? config.axis_y2_min : config.axis_y_min,\n\t            yMax = axisId === 'y2' ? config.axis_y2_max : config.axis_y_max,\n\t            yDomainMin = $$.getYDomainMin(yTargets),\n\t            yDomainMax = $$.getYDomainMax(yTargets),\n\t            domain, domainLength, padding, padding_top, padding_bottom,\n\t            center = axisId === 'y2' ? config.axis_y2_center : config.axis_y_center,\n\t            yDomainAbs, lengths, diff, ratio, isAllPositive, isAllNegative,\n\t            isZeroBased = ($$.hasType('bar', yTargets) && config.bar_zerobased) || ($$.hasType('area', yTargets) && config.area_zerobased),\n\t            isInverted = axisId === 'y2' ? config.axis_y2_inverted : config.axis_y_inverted,\n\t            showHorizontalDataLabel = $$.hasDataLabel() && config.axis_rotated,\n\t            showVerticalDataLabel = $$.hasDataLabel() && !config.axis_rotated;\n\t\n\t        // MEMO: avoid inverting domain unexpectedly\n\t        yDomainMin = isValue(yMin) ? yMin : isValue(yMax) ? (yDomainMin < yMax ? yDomainMin : yMax - 10) : yDomainMin;\n\t        yDomainMax = isValue(yMax) ? yMax : isValue(yMin) ? (yMin < yDomainMax ? yDomainMax : yMin + 10) : yDomainMax;\n\t\n\t        if (yTargets.length === 0) { // use current domain if target of axisId is none\n\t            return axisId === 'y2' ? $$.y2.domain() : $$.y.domain();\n\t        }\n\t        if (isNaN(yDomainMin)) { // set minimum to zero when not number\n\t            yDomainMin = 0;\n\t        }\n\t        if (isNaN(yDomainMax)) { // set maximum to have same value as yDomainMin\n\t            yDomainMax = yDomainMin;\n\t        }\n\t        if (yDomainMin === yDomainMax) {\n\t            yDomainMin < 0 ? yDomainMax = 0 : yDomainMin = 0;\n\t        }\n\t        isAllPositive = yDomainMin >= 0 && yDomainMax >= 0;\n\t        isAllNegative = yDomainMin <= 0 && yDomainMax <= 0;\n\t\n\t        // Cancel zerobased if axis_*_min / axis_*_max specified\n\t        if ((isValue(yMin) && isAllPositive) || (isValue(yMax) && isAllNegative)) {\n\t            isZeroBased = false;\n\t        }\n\t\n\t        // Bar/Area chart should be 0-based if all positive|negative\n\t        if (isZeroBased) {\n\t            if (isAllPositive) { yDomainMin = 0; }\n\t            if (isAllNegative) { yDomainMax = 0; }\n\t        }\n\t\n\t        domainLength = Math.abs(yDomainMax - yDomainMin);\n\t        padding = padding_top = padding_bottom = domainLength * 0.1;\n\t\n\t        if (typeof center !== 'undefined') {\n\t            yDomainAbs = Math.max(Math.abs(yDomainMin), Math.abs(yDomainMax));\n\t            yDomainMax = center + yDomainAbs;\n\t            yDomainMin = center - yDomainAbs;\n\t        }\n\t        // add padding for data label\n\t        if (showHorizontalDataLabel) {\n\t            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'width');\n\t            diff = diffDomain($$.y.range());\n\t            ratio = [lengths[0] / diff, lengths[1] / diff];\n\t            padding_top += domainLength * (ratio[1] / (1 - ratio[0] - ratio[1]));\n\t            padding_bottom += domainLength * (ratio[0] / (1 - ratio[0] - ratio[1]));\n\t        } else if (showVerticalDataLabel) {\n\t            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'height');\n\t            padding_top += $$.axis.convertPixelsToAxisPadding(lengths[1], domainLength);\n\t            padding_bottom += $$.axis.convertPixelsToAxisPadding(lengths[0], domainLength);\n\t        }\n\t        if (axisId === 'y' && notEmpty(config.axis_y_padding)) {\n\t            padding_top = $$.axis.getPadding(config.axis_y_padding, 'top', padding_top, domainLength);\n\t            padding_bottom = $$.axis.getPadding(config.axis_y_padding, 'bottom', padding_bottom, domainLength);\n\t        }\n\t        if (axisId === 'y2' && notEmpty(config.axis_y2_padding)) {\n\t            padding_top = $$.axis.getPadding(config.axis_y2_padding, 'top', padding_top, domainLength);\n\t            padding_bottom = $$.axis.getPadding(config.axis_y2_padding, 'bottom', padding_bottom, domainLength);\n\t        }\n\t        // Bar/Area chart should be 0-based if all positive|negative\n\t        if (isZeroBased) {\n\t            if (isAllPositive) { padding_bottom = yDomainMin; }\n\t            if (isAllNegative) { padding_top = -yDomainMax; }\n\t        }\n\t        domain = [yDomainMin - padding_bottom, yDomainMax + padding_top];\n\t        return isInverted ? domain.reverse() : domain;\n\t    };\n\t    c3_chart_internal_fn.getXDomainMin = function (targets) {\n\t        var $$ = this, config = $$.config;\n\t        return isDefined(config.axis_x_min) ?\n\t            ($$.isTimeSeries() ? this.parseDate(config.axis_x_min) : config.axis_x_min) :\n\t        $$.d3.min(targets, function (t) { return $$.d3.min(t.values, function (v) { return v.x; }); });\n\t    };\n\t    c3_chart_internal_fn.getXDomainMax = function (targets) {\n\t        var $$ = this, config = $$.config;\n\t        return isDefined(config.axis_x_max) ?\n\t            ($$.isTimeSeries() ? this.parseDate(config.axis_x_max) : config.axis_x_max) :\n\t        $$.d3.max(targets, function (t) { return $$.d3.max(t.values, function (v) { return v.x; }); });\n\t    };\n\t    c3_chart_internal_fn.getXDomainPadding = function (domain) {\n\t        var $$ = this, config = $$.config,\n\t            diff = domain[1] - domain[0],\n\t            maxDataCount, padding, paddingLeft, paddingRight;\n\t        if ($$.isCategorized()) {\n\t            padding = 0;\n\t        } else if ($$.hasType('bar')) {\n\t            maxDataCount = $$.getMaxDataCount();\n\t            padding = maxDataCount > 1 ? (diff / (maxDataCount - 1)) / 2 : 0.5;\n\t        } else {\n\t            padding = diff * 0.01;\n\t        }\n\t        if (typeof config.axis_x_padding === 'object' && notEmpty(config.axis_x_padding)) {\n\t            paddingLeft = isValue(config.axis_x_padding.left) ? config.axis_x_padding.left : padding;\n\t            paddingRight = isValue(config.axis_x_padding.right) ? config.axis_x_padding.right : padding;\n\t        } else if (typeof config.axis_x_padding === 'number') {\n\t            paddingLeft = paddingRight = config.axis_x_padding;\n\t        } else {\n\t            paddingLeft = paddingRight = padding;\n\t        }\n\t        return {left: paddingLeft, right: paddingRight};\n\t    };\n\t    c3_chart_internal_fn.getXDomain = function (targets) {\n\t        var $$ = this,\n\t            xDomain = [$$.getXDomainMin(targets), $$.getXDomainMax(targets)],\n\t            firstX = xDomain[0], lastX = xDomain[1],\n\t            padding = $$.getXDomainPadding(xDomain),\n\t            min = 0, max = 0;\n\t        // show center of x domain if min and max are the same\n\t        if ((firstX - lastX) === 0 && !$$.isCategorized()) {\n\t            if ($$.isTimeSeries()) {\n\t                firstX = new Date(firstX.getTime() * 0.5);\n\t                lastX = new Date(lastX.getTime() * 1.5);\n\t            } else {\n\t                firstX = firstX === 0 ? 1 : (firstX * 0.5);\n\t                lastX = lastX === 0 ? -1 : (lastX * 1.5);\n\t            }\n\t        }\n\t        if (firstX || firstX === 0) {\n\t            min = $$.isTimeSeries() ? new Date(firstX.getTime() - padding.left) : firstX - padding.left;\n\t        }\n\t        if (lastX || lastX === 0) {\n\t            max = $$.isTimeSeries() ? new Date(lastX.getTime() + padding.right) : lastX + padding.right;\n\t        }\n\t        return [min, max];\n\t    };\n\t    c3_chart_internal_fn.updateXDomain = function (targets, withUpdateXDomain, withUpdateOrgXDomain, withTrim, domain) {\n\t        var $$ = this, config = $$.config;\n\t\n\t        if (withUpdateOrgXDomain) {\n\t            $$.x.domain(domain ? domain : $$.d3.extent($$.getXDomain(targets)));\n\t            $$.orgXDomain = $$.x.domain();\n\t            if (config.zoom_enabled) { $$.zoom.scale($$.x).updateScaleExtent(); }\n\t            $$.subX.domain($$.x.domain());\n\t            if ($$.brush) { $$.brush.scale($$.subX); }\n\t        }\n\t        if (withUpdateXDomain) {\n\t            $$.x.domain(domain ? domain : (!$$.brush || $$.brush.empty()) ? $$.orgXDomain : $$.brush.extent());\n\t            if (config.zoom_enabled) { $$.zoom.scale($$.x).updateScaleExtent(); }\n\t        }\n\t\n\t        // Trim domain when too big by zoom mousemove event\n\t        if (withTrim) { $$.x.domain($$.trimXDomain($$.x.orgDomain())); }\n\t\n\t        return $$.x.domain();\n\t    };\n\t    c3_chart_internal_fn.trimXDomain = function (domain) {\n\t        var zoomDomain = this.getZoomDomain(),\n\t            min = zoomDomain[0], max = zoomDomain[1];\n\t        if (domain[0] <= min) {\n\t            domain[1] = +domain[1] + (min - domain[0]);\n\t            domain[0] = min;\n\t        }\n\t        if (max <= domain[1]) {\n\t            domain[0] = +domain[0] - (domain[1] - max);\n\t            domain[1] = max;\n\t        }\n\t        return domain;\n\t    };\n\t\n\t    c3_chart_internal_fn.isX = function (key) {\n\t        var $$ = this, config = $$.config;\n\t        return (config.data_x && key === config.data_x) || (notEmpty(config.data_xs) && hasValue(config.data_xs, key));\n\t    };\n\t    c3_chart_internal_fn.isNotX = function (key) {\n\t        return !this.isX(key);\n\t    };\n\t    c3_chart_internal_fn.getXKey = function (id) {\n\t        var $$ = this, config = $$.config;\n\t        return config.data_x ? config.data_x : notEmpty(config.data_xs) ? config.data_xs[id] : null;\n\t    };\n\t    c3_chart_internal_fn.getXValuesOfXKey = function (key, targets) {\n\t        var $$ = this,\n\t            xValues, ids = targets && notEmpty(targets) ? $$.mapToIds(targets) : [];\n\t        ids.forEach(function (id) {\n\t            if ($$.getXKey(id) === key) {\n\t                xValues = $$.data.xs[id];\n\t            }\n\t        });\n\t        return xValues;\n\t    };\n\t    c3_chart_internal_fn.getIndexByX = function (x) {\n\t        var $$ = this,\n\t            data = $$.filterByX($$.data.targets, x);\n\t        return data.length ? data[0].index : null;\n\t    };\n\t    c3_chart_internal_fn.getXValue = function (id, i) {\n\t        var $$ = this;\n\t        return id in $$.data.xs && $$.data.xs[id] && isValue($$.data.xs[id][i]) ? $$.data.xs[id][i] : i;\n\t    };\n\t    c3_chart_internal_fn.getOtherTargetXs = function () {\n\t        var $$ = this,\n\t            idsForX = Object.keys($$.data.xs);\n\t        return idsForX.length ? $$.data.xs[idsForX[0]] : null;\n\t    };\n\t    c3_chart_internal_fn.getOtherTargetX = function (index) {\n\t        var xs = this.getOtherTargetXs();\n\t        return xs && index < xs.length ? xs[index] : null;\n\t    };\n\t    c3_chart_internal_fn.addXs = function (xs) {\n\t        var $$ = this;\n\t        Object.keys(xs).forEach(function (id) {\n\t            $$.config.data_xs[id] = xs[id];\n\t        });\n\t    };\n\t    c3_chart_internal_fn.hasMultipleX = function (xs) {\n\t        return this.d3.set(Object.keys(xs).map(function (id) { return xs[id]; })).size() > 1;\n\t    };\n\t    c3_chart_internal_fn.isMultipleX = function () {\n\t        return notEmpty(this.config.data_xs) || !this.config.data_xSort || this.hasType('scatter');\n\t    };\n\t    c3_chart_internal_fn.addName = function (data) {\n\t        var $$ = this, name;\n\t        if (data) {\n\t            name = $$.config.data_names[data.id];\n\t            data.name = name !== undefined ? name : data.id;\n\t        }\n\t        return data;\n\t    };\n\t    c3_chart_internal_fn.getValueOnIndex = function (values, index) {\n\t        var valueOnIndex = values.filter(function (v) { return v.index === index; });\n\t        return valueOnIndex.length ? valueOnIndex[0] : null;\n\t    };\n\t    c3_chart_internal_fn.updateTargetX = function (targets, x) {\n\t        var $$ = this;\n\t        targets.forEach(function (t) {\n\t            t.values.forEach(function (v, i) {\n\t                v.x = $$.generateTargetX(x[i], t.id, i);\n\t            });\n\t            $$.data.xs[t.id] = x;\n\t        });\n\t    };\n\t    c3_chart_internal_fn.updateTargetXs = function (targets, xs) {\n\t        var $$ = this;\n\t        targets.forEach(function (t) {\n\t            if (xs[t.id]) {\n\t                $$.updateTargetX([t], xs[t.id]);\n\t            }\n\t        });\n\t    };\n\t    c3_chart_internal_fn.generateTargetX = function (rawX, id, index) {\n\t        var $$ = this, x;\n\t        if ($$.isTimeSeries()) {\n\t            x = rawX ? $$.parseDate(rawX) : $$.parseDate($$.getXValue(id, index));\n\t        }\n\t        else if ($$.isCustomX() && !$$.isCategorized()) {\n\t            x = isValue(rawX) ? +rawX : $$.getXValue(id, index);\n\t        }\n\t        else {\n\t            x = index;\n\t        }\n\t        return x;\n\t    };\n\t    c3_chart_internal_fn.cloneTarget = function (target) {\n\t        return {\n\t            id : target.id,\n\t            id_org : target.id_org,\n\t            values : target.values.map(function (d) {\n\t                return {x: d.x, value: d.value, id: d.id};\n\t            })\n\t        };\n\t    };\n\t    c3_chart_internal_fn.updateXs = function () {\n\t        var $$ = this;\n\t        if ($$.data.targets.length) {\n\t            $$.xs = [];\n\t            $$.data.targets[0].values.forEach(function (v) {\n\t                $$.xs[v.index] = v.x;\n\t            });\n\t        }\n\t    };\n\t    c3_chart_internal_fn.getPrevX = function (i) {\n\t        var x = this.xs[i - 1];\n\t        return typeof x !== 'undefined' ? x : null;\n\t    };\n\t    c3_chart_internal_fn.getNextX = function (i) {\n\t        var x = this.xs[i + 1];\n\t        return typeof x !== 'undefined' ? x : null;\n\t    };\n\t    c3_chart_internal_fn.getMaxDataCount = function () {\n\t        var $$ = this;\n\t        return $$.d3.max($$.data.targets, function (t) { return t.values.length; });\n\t    };\n\t    c3_chart_internal_fn.getMaxDataCountTarget = function (targets) {\n\t        var length = targets.length, max = 0, maxTarget;\n\t        if (length > 1) {\n\t            targets.forEach(function (t) {\n\t                if (t.values.length > max) {\n\t                    maxTarget = t;\n\t                    max = t.values.length;\n\t                }\n\t            });\n\t        } else {\n\t            maxTarget = length ? targets[0] : null;\n\t        }\n\t        return maxTarget;\n\t    };\n\t    c3_chart_internal_fn.getEdgeX = function (targets) {\n\t        var $$ = this;\n\t        return !targets.length ? [0, 0] : [\n\t            $$.d3.min(targets, function (t) { return t.values[0].x; }),\n\t            $$.d3.max(targets, function (t) { return t.values[t.values.length - 1].x; })\n\t        ];\n\t    };\n\t    c3_chart_internal_fn.mapToIds = function (targets) {\n\t        return targets.map(function (d) { return d.id; });\n\t    };\n\t    c3_chart_internal_fn.mapToTargetIds = function (ids) {\n\t        var $$ = this;\n\t        return ids ? [].concat(ids) : $$.mapToIds($$.data.targets);\n\t    };\n\t    c3_chart_internal_fn.hasTarget = function (targets, id) {\n\t        var ids = this.mapToIds(targets), i;\n\t        for (i = 0; i < ids.length; i++) {\n\t            if (ids[i] === id) {\n\t                return true;\n\t            }\n\t        }\n\t        return false;\n\t    };\n\t    c3_chart_internal_fn.isTargetToShow = function (targetId) {\n\t        return this.hiddenTargetIds.indexOf(targetId) < 0;\n\t    };\n\t    c3_chart_internal_fn.isLegendToShow = function (targetId) {\n\t        return this.hiddenLegendIds.indexOf(targetId) < 0;\n\t    };\n\t    c3_chart_internal_fn.filterTargetsToShow = function (targets) {\n\t        var $$ = this;\n\t        return targets.filter(function (t) { return $$.isTargetToShow(t.id); });\n\t    };\n\t    c3_chart_internal_fn.mapTargetsToUniqueXs = function (targets) {\n\t        var $$ = this;\n\t        var xs = $$.d3.set($$.d3.merge(targets.map(function (t) { return t.values.map(function (v) { return +v.x; }); }))).values();\n\t        xs = $$.isTimeSeries() ? xs.map(function (x) { return new Date(+x); }) : xs.map(function (x) { return +x; });\n\t        return xs.sort(function (a, b) { return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN; });\n\t    };\n\t    c3_chart_internal_fn.addHiddenTargetIds = function (targetIds) {\n\t        this.hiddenTargetIds = this.hiddenTargetIds.concat(targetIds);\n\t    };\n\t    c3_chart_internal_fn.removeHiddenTargetIds = function (targetIds) {\n\t        this.hiddenTargetIds = this.hiddenTargetIds.filter(function (id) { return targetIds.indexOf(id) < 0; });\n\t    };\n\t    c3_chart_internal_fn.addHiddenLegendIds = function (targetIds) {\n\t        this.hiddenLegendIds = this.hiddenLegendIds.concat(targetIds);\n\t    };\n\t    c3_chart_internal_fn.removeHiddenLegendIds = function (targetIds) {\n\t        this.hiddenLegendIds = this.hiddenLegendIds.filter(function (id) { return targetIds.indexOf(id) < 0; });\n\t    };\n\t    c3_chart_internal_fn.getValuesAsIdKeyed = function (targets) {\n\t        var ys = {};\n\t        targets.forEach(function (t) {\n\t            ys[t.id] = [];\n\t            t.values.forEach(function (v) {\n\t                ys[t.id].push(v.value);\n\t            });\n\t        });\n\t        return ys;\n\t    };\n\t    c3_chart_internal_fn.checkValueInTargets = function (targets, checker) {\n\t        var ids = Object.keys(targets), i, j, values;\n\t        for (i = 0; i < ids.length; i++) {\n\t            values = targets[ids[i]].values;\n\t            for (j = 0; j < values.length; j++) {\n\t                if (checker(values[j].value)) {\n\t                    return true;\n\t                }\n\t            }\n\t        }\n\t        return false;\n\t    };\n\t    c3_chart_internal_fn.hasNegativeValueInTargets = function (targets) {\n\t        return this.checkValueInTargets(targets, function (v) { return v < 0; });\n\t    };\n\t    c3_chart_internal_fn.hasPositiveValueInTargets = function (targets) {\n\t        return this.checkValueInTargets(targets, function (v) { return v > 0; });\n\t    };\n\t    c3_chart_internal_fn.isOrderDesc = function () {\n\t        var config = this.config;\n\t        return typeof(config.data_order) === 'string' && config.data_order.toLowerCase() === 'desc';\n\t    };\n\t    c3_chart_internal_fn.isOrderAsc = function () {\n\t        var config = this.config;\n\t        return typeof(config.data_order) === 'string' && config.data_order.toLowerCase() === 'asc';\n\t    };\n\t    c3_chart_internal_fn.orderTargets = function (targets) {\n\t        var $$ = this, config = $$.config, orderAsc = $$.isOrderAsc(), orderDesc = $$.isOrderDesc();\n\t        if (orderAsc || orderDesc) {\n\t            targets.sort(function (t1, t2) {\n\t                var reducer = function (p, c) { return p + Math.abs(c.value); };\n\t                var t1Sum = t1.values.reduce(reducer, 0),\n\t                    t2Sum = t2.values.reduce(reducer, 0);\n\t                return orderAsc ? t2Sum - t1Sum : t1Sum - t2Sum;\n\t            });\n\t        } else if (isFunction(config.data_order)) {\n\t            targets.sort(config.data_order);\n\t        } // TODO: accept name array for order\n\t        return targets;\n\t    };\n\t    c3_chart_internal_fn.filterByX = function (targets, x) {\n\t        return this.d3.merge(targets.map(function (t) { return t.values; })).filter(function (v) { return v.x - x === 0; });\n\t    };\n\t    c3_chart_internal_fn.filterRemoveNull = function (data) {\n\t        return data.filter(function (d) { return isValue(d.value); });\n\t    };\n\t    c3_chart_internal_fn.filterByXDomain = function (targets, xDomain) {\n\t        return targets.map(function (t) {\n\t            return {\n\t                id: t.id,\n\t                id_org: t.id_org,\n\t                values: t.values.filter(function (v) {\n\t                    return xDomain[0] <= v.x && v.x <= xDomain[1];\n\t                })\n\t            };\n\t        });\n\t    };\n\t    c3_chart_internal_fn.hasDataLabel = function () {\n\t        var config = this.config;\n\t        if (typeof config.data_labels === 'boolean' && config.data_labels) {\n\t            return true;\n\t        } else if (typeof config.data_labels === 'object' && notEmpty(config.data_labels)) {\n\t            return true;\n\t        }\n\t        return false;\n\t    };\n\t    c3_chart_internal_fn.getDataLabelLength = function (min, max, key) {\n\t        var $$ = this,\n\t            lengths = [0, 0], paddingCoef = 1.3;\n\t        $$.selectChart.select('svg').selectAll('.dummy')\n\t            .data([min, max])\n\t            .enter().append('text')\n\t            .text(function (d) { return $$.dataLabelFormat(d.id)(d); })\n\t            .each(function (d, i) {\n\t                lengths[i] = this.getBoundingClientRect()[key] * paddingCoef;\n\t            })\n\t            .remove();\n\t        return lengths;\n\t    };\n\t    c3_chart_internal_fn.isNoneArc = function (d) {\n\t        return this.hasTarget(this.data.targets, d.id);\n\t    },\n\t    c3_chart_internal_fn.isArc = function (d) {\n\t        return 'data' in d && this.hasTarget(this.data.targets, d.data.id);\n\t    };\n\t    c3_chart_internal_fn.findSameXOfValues = function (values, index) {\n\t        var i, targetX = values[index].x, sames = [];\n\t        for (i = index - 1; i >= 0; i--) {\n\t            if (targetX !== values[i].x) { break; }\n\t            sames.push(values[i]);\n\t        }\n\t        for (i = index; i < values.length; i++) {\n\t            if (targetX !== values[i].x) { break; }\n\t            sames.push(values[i]);\n\t        }\n\t        return sames;\n\t    };\n\t\n\t    c3_chart_internal_fn.findClosestFromTargets = function (targets, pos) {\n\t        var $$ = this, candidates;\n\t\n\t        // map to array of closest points of each target\n\t        candidates = targets.map(function (target) {\n\t            return $$.findClosest(target.values, pos);\n\t        });\n\t\n\t        // decide closest point and return\n\t        return $$.findClosest(candidates, pos);\n\t    };\n\t    c3_chart_internal_fn.findClosest = function (values, pos) {\n\t        var $$ = this, minDist = $$.config.point_sensitivity, closest;\n\t\n\t        // find mouseovering bar\n\t        values.filter(function (v) { return v && $$.isBarType(v.id); }).forEach(function (v) {\n\t            var shape = $$.main.select('.' + CLASS.bars + $$.getTargetSelectorSuffix(v.id) + ' .' + CLASS.bar + '-' + v.index).node();\n\t            if (!closest && $$.isWithinBar(shape)) {\n\t                closest = v;\n\t            }\n\t        });\n\t\n\t        // find closest point from non-bar\n\t        values.filter(function (v) { return v && !$$.isBarType(v.id); }).forEach(function (v) {\n\t            var d = $$.dist(v, pos);\n\t            if (d < minDist) {\n\t                minDist = d;\n\t                closest = v;\n\t            }\n\t        });\n\t\n\t        return closest;\n\t    };\n\t    c3_chart_internal_fn.dist = function (data, pos) {\n\t        var $$ = this, config = $$.config,\n\t            xIndex = config.axis_rotated ? 1 : 0,\n\t            yIndex = config.axis_rotated ? 0 : 1,\n\t            y = $$.circleY(data, data.index),\n\t            x = $$.x(data.x);\n\t        return Math.sqrt(Math.pow(x - pos[xIndex], 2) + Math.pow(y - pos[yIndex], 2));\n\t    };\n\t    c3_chart_internal_fn.convertValuesToStep = function (values) {\n\t        var converted = [].concat(values), i;\n\t\n\t        if (!this.isCategorized()) {\n\t            return values;\n\t        }\n\t\n\t        for (i = values.length + 1; 0 < i; i--) {\n\t            converted[i] = converted[i - 1];\n\t        }\n\t\n\t        converted[0] = {\n\t            x: converted[0].x - 1,\n\t            value: converted[0].value,\n\t            id: converted[0].id\n\t        };\n\t        converted[values.length + 1] = {\n\t            x: converted[values.length].x + 1,\n\t            value: converted[values.length].value,\n\t            id: converted[values.length].id\n\t        };\n\t\n\t        return converted;\n\t    };\n\t    c3_chart_internal_fn.updateDataAttributes = function (name, attrs) {\n\t        var $$ = this, config = $$.config, current = config['data_' + name];\n\t        if (typeof attrs === 'undefined') { return current; }\n\t        Object.keys(attrs).forEach(function (id) {\n\t            current[id] = attrs[id];\n\t        });\n\t        $$.redraw({withLegend: true});\n\t        return current;\n\t    };\n\t\n\t    c3_chart_internal_fn.convertUrlToData = function (url, mimeType, headers, keys, done) {\n\t        var $$ = this, type = mimeType ? mimeType : 'csv';\n\t        var req = $$.d3.xhr(url);\n\t        if (headers) {\n\t            Object.keys(headers).forEach(function (header) {\n\t                req.header(header, headers[header]);\n\t            });\n\t        }\n\t        req.get(function (error, data) {\n\t            var d;\n\t            if (!data) {\n\t                throw new Error(error.responseURL + ' ' + error.status + ' (' + error.statusText + ')');\n\t            }\n\t            if (type === 'json') {\n\t                d = $$.convertJsonToData(JSON.parse(data.response), keys);\n\t            } else if (type === 'tsv') {\n\t                d = $$.convertTsvToData(data.response);\n\t            } else {\n\t                d = $$.convertCsvToData(data.response);\n\t            }\n\t            done.call($$, d);\n\t        });\n\t    };\n\t    c3_chart_internal_fn.convertXsvToData = function (xsv, parser) {\n\t        var rows = parser.parseRows(xsv), d;\n\t        if (rows.length === 1) {\n\t            d = [{}];\n\t            rows[0].forEach(function (id) {\n\t                d[0][id] = null;\n\t            });\n\t        } else {\n\t            d = parser.parse(xsv);\n\t        }\n\t        return d;\n\t    };\n\t    c3_chart_internal_fn.convertCsvToData = function (csv) {\n\t        return this.convertXsvToData(csv, this.d3.csv);\n\t    };\n\t    c3_chart_internal_fn.convertTsvToData = function (tsv) {\n\t        return this.convertXsvToData(tsv, this.d3.tsv);\n\t    };\n\t    c3_chart_internal_fn.convertJsonToData = function (json, keys) {\n\t        var $$ = this,\n\t            new_rows = [], targetKeys, data;\n\t        if (keys) { // when keys specified, json would be an array that includes objects\n\t            if (keys.x) {\n\t                targetKeys = keys.value.concat(keys.x);\n\t                $$.config.data_x = keys.x;\n\t            } else {\n\t                targetKeys = keys.value;\n\t            }\n\t            new_rows.push(targetKeys);\n\t            json.forEach(function (o) {\n\t                var new_row = [];\n\t                targetKeys.forEach(function (key) {\n\t                    // convert undefined to null because undefined data will be removed in convertDataToTargets()\n\t                    var v = $$.findValueInJson(o, key);\n\t                    if (isUndefined(v)) {\n\t                        v = null;\n\t                    }\n\t                    new_row.push(v);\n\t                });\n\t                new_rows.push(new_row);\n\t            });\n\t            data = $$.convertRowsToData(new_rows);\n\t        } else {\n\t            Object.keys(json).forEach(function (key) {\n\t                new_rows.push([key].concat(json[key]));\n\t            });\n\t            data = $$.convertColumnsToData(new_rows);\n\t        }\n\t        return data;\n\t    };\n\t    c3_chart_internal_fn.findValueInJson = function (object, path) {\n\t        path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties (replace [] with .)\n\t        path = path.replace(/^\\./, '');           // strip a leading dot\n\t        var pathArray = path.split('.');\n\t        for (var i = 0; i < pathArray.length; ++i) {\n\t            var k = pathArray[i];\n\t            if (k in object) {\n\t                object = object[k];\n\t            } else {\n\t                return;\n\t            }\n\t        }\n\t        return object;\n\t    };\n\t    c3_chart_internal_fn.convertRowsToData = function (rows) {\n\t        var keys = rows[0], new_row = {}, new_rows = [], i, j;\n\t        for (i = 1; i < rows.length; i++) {\n\t            new_row = {};\n\t            for (j = 0; j < rows[i].length; j++) {\n\t                if (isUndefined(rows[i][j])) {\n\t                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n\t                }\n\t                new_row[keys[j]] = rows[i][j];\n\t            }\n\t            new_rows.push(new_row);\n\t        }\n\t        return new_rows;\n\t    };\n\t    c3_chart_internal_fn.convertColumnsToData = function (columns) {\n\t        var new_rows = [], i, j, key;\n\t        for (i = 0; i < columns.length; i++) {\n\t            key = columns[i][0];\n\t            for (j = 1; j < columns[i].length; j++) {\n\t                if (isUndefined(new_rows[j - 1])) {\n\t                    new_rows[j - 1] = {};\n\t                }\n\t                if (isUndefined(columns[i][j])) {\n\t                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n\t                }\n\t                new_rows[j - 1][key] = columns[i][j];\n\t            }\n\t        }\n\t        return new_rows;\n\t    };\n\t    c3_chart_internal_fn.convertDataToTargets = function (data, appendXs) {\n\t        var $$ = this, config = $$.config,\n\t            ids = $$.d3.keys(data[0]).filter($$.isNotX, $$),\n\t            xs = $$.d3.keys(data[0]).filter($$.isX, $$),\n\t            targets;\n\t\n\t        // save x for update data by load when custom x and c3.x API\n\t        ids.forEach(function (id) {\n\t            var xKey = $$.getXKey(id);\n\t\n\t            if ($$.isCustomX() || $$.isTimeSeries()) {\n\t                // if included in input data\n\t                if (xs.indexOf(xKey) >= 0) {\n\t                    $$.data.xs[id] = (appendXs && $$.data.xs[id] ? $$.data.xs[id] : []).concat(\n\t                        data.map(function (d) { return d[xKey]; })\n\t                            .filter(isValue)\n\t                            .map(function (rawX, i) { return $$.generateTargetX(rawX, id, i); })\n\t                    );\n\t                }\n\t                // if not included in input data, find from preloaded data of other id's x\n\t                else if (config.data_x) {\n\t                    $$.data.xs[id] = $$.getOtherTargetXs();\n\t                }\n\t                // if not included in input data, find from preloaded data\n\t                else if (notEmpty(config.data_xs)) {\n\t                    $$.data.xs[id] = $$.getXValuesOfXKey(xKey, $$.data.targets);\n\t                }\n\t                // MEMO: if no x included, use same x of current will be used\n\t            } else {\n\t                $$.data.xs[id] = data.map(function (d, i) { return i; });\n\t            }\n\t        });\n\t\n\t\n\t        // check x is defined\n\t        ids.forEach(function (id) {\n\t            if (!$$.data.xs[id]) {\n\t                throw new Error('x is not defined for id = \"' + id + '\".');\n\t            }\n\t        });\n\t\n\t        // convert to target\n\t        targets = ids.map(function (id, index) {\n\t            var convertedId = config.data_idConverter(id);\n\t            return {\n\t                id: convertedId,\n\t                id_org: id,\n\t                values: data.map(function (d, i) {\n\t                    var xKey = $$.getXKey(id), rawX = d[xKey],\n\t                        value = d[id] !== null && !isNaN(d[id]) ? +d[id] : null, x;\n\t                    // use x as categories if custom x and categorized\n\t                    if ($$.isCustomX() && $$.isCategorized() && index === 0 && !isUndefined(rawX)) {\n\t                        if (index === 0 && i === 0) {\n\t                            config.axis_x_categories = [];\n\t                        }\n\t                        x = config.axis_x_categories.indexOf(rawX);\n\t                        if (x === -1) {\n\t                            x = config.axis_x_categories.length;\n\t                            config.axis_x_categories.push(rawX);\n\t                        }\n\t                    } else {\n\t                        x  = $$.generateTargetX(rawX, id, i);\n\t                    }\n\t                    // mark as x = undefined if value is undefined and filter to remove after mapped\n\t                    if (isUndefined(d[id]) || $$.data.xs[id].length <= i) {\n\t                        x = undefined;\n\t                    }\n\t                    return {x: x, value: value, id: convertedId};\n\t                }).filter(function (v) { return isDefined(v.x); })\n\t            };\n\t        });\n\t\n\t        // finish targets\n\t        targets.forEach(function (t) {\n\t            var i;\n\t            // sort values by its x\n\t            if (config.data_xSort) {\n\t                t.values = t.values.sort(function (v1, v2) {\n\t                    var x1 = v1.x || v1.x === 0 ? v1.x : Infinity,\n\t                        x2 = v2.x || v2.x === 0 ? v2.x : Infinity;\n\t                    return x1 - x2;\n\t                });\n\t            }\n\t            // indexing each value\n\t            i = 0;\n\t            t.values.forEach(function (v) {\n\t                v.index = i++;\n\t            });\n\t            // this needs to be sorted because its index and value.index is identical\n\t            $$.data.xs[t.id].sort(function (v1, v2) {\n\t                return v1 - v2;\n\t            });\n\t        });\n\t\n\t        // cache information about values\n\t        $$.hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n\t        $$.hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n\t\n\t        // set target types\n\t        if (config.data_type) {\n\t            $$.setTargetType($$.mapToIds(targets).filter(function (id) { return ! (id in config.data_types); }), config.data_type);\n\t        }\n\t\n\t        // cache as original id keyed\n\t        targets.forEach(function (d) {\n\t            $$.addCache(d.id_org, d);\n\t        });\n\t\n\t        return targets;\n\t    };\n\t\n\t    c3_chart_internal_fn.load = function (targets, args) {\n\t        var $$ = this;\n\t        if (targets) {\n\t            // filter loading targets if needed\n\t            if (args.filter) {\n\t                targets = targets.filter(args.filter);\n\t            }\n\t            // set type if args.types || args.type specified\n\t            if (args.type || args.types) {\n\t                targets.forEach(function (t) {\n\t                    var type = args.types && args.types[t.id] ? args.types[t.id] : args.type;\n\t                    $$.setTargetType(t.id, type);\n\t                });\n\t            }\n\t            // Update/Add data\n\t            $$.data.targets.forEach(function (d) {\n\t                for (var i = 0; i < targets.length; i++) {\n\t                    if (d.id === targets[i].id) {\n\t                        d.values = targets[i].values;\n\t                        targets.splice(i, 1);\n\t                        break;\n\t                    }\n\t                }\n\t            });\n\t            $$.data.targets = $$.data.targets.concat(targets); // add remained\n\t        }\n\t\n\t        // Set targets\n\t        $$.updateTargets($$.data.targets);\n\t\n\t        // Redraw with new targets\n\t        $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n\t\n\t        if (args.done) { args.done(); }\n\t    };\n\t    c3_chart_internal_fn.loadFromArgs = function (args) {\n\t        var $$ = this;\n\t        if (args.data) {\n\t            $$.load($$.convertDataToTargets(args.data), args);\n\t        }\n\t        else if (args.url) {\n\t            $$.convertUrlToData(args.url, args.mimeType, args.headers, args.keys, function (data) {\n\t                $$.load($$.convertDataToTargets(data), args);\n\t            });\n\t        }\n\t        else if (args.json) {\n\t            $$.load($$.convertDataToTargets($$.convertJsonToData(args.json, args.keys)), args);\n\t        }\n\t        else if (args.rows) {\n\t            $$.load($$.convertDataToTargets($$.convertRowsToData(args.rows)), args);\n\t        }\n\t        else if (args.columns) {\n\t            $$.load($$.convertDataToTargets($$.convertColumnsToData(args.columns)), args);\n\t        }\n\t        else {\n\t            $$.load(null, args);\n\t        }\n\t    };\n\t    c3_chart_internal_fn.unload = function (targetIds, done) {\n\t        var $$ = this;\n\t        if (!done) {\n\t            done = function () {};\n\t        }\n\t        // filter existing target\n\t        targetIds = targetIds.filter(function (id) { return $$.hasTarget($$.data.targets, id); });\n\t        // If no target, call done and return\n\t        if (!targetIds || targetIds.length === 0) {\n\t            done();\n\t            return;\n\t        }\n\t        $$.svg.selectAll(targetIds.map(function (id) { return $$.selectorTarget(id); }))\n\t            .transition()\n\t            .style('opacity', 0)\n\t            .remove()\n\t            .call($$.endall, done);\n\t        targetIds.forEach(function (id) {\n\t            // Reset fadein for future load\n\t            $$.withoutFadeIn[id] = false;\n\t            // Remove target's elements\n\t            if ($$.legend) {\n\t                $$.legend.selectAll('.' + CLASS.legendItem + $$.getTargetSelectorSuffix(id)).remove();\n\t            }\n\t            // Remove target\n\t            $$.data.targets = $$.data.targets.filter(function (t) {\n\t                return t.id !== id;\n\t            });\n\t        });\n\t    };\n\t\n\t    c3_chart_internal_fn.categoryName = function (i) {\n\t        var config = this.config;\n\t        return i < config.axis_x_categories.length ? config.axis_x_categories[i] : i;\n\t    };\n\t\n\t    c3_chart_internal_fn.initEventRect = function () {\n\t        var $$ = this;\n\t        $$.main.select('.' + CLASS.chart).append(\"g\")\n\t            .attr(\"class\", CLASS.eventRects)\n\t            .style('fill-opacity', 0);\n\t    };\n\t    c3_chart_internal_fn.redrawEventRect = function () {\n\t        var $$ = this, config = $$.config,\n\t            eventRectUpdate, maxDataCountTarget,\n\t            isMultipleX = $$.isMultipleX();\n\t\n\t        // rects for mouseover\n\t        var eventRects = $$.main.select('.' + CLASS.eventRects)\n\t                .style('cursor', config.zoom_enabled ? config.axis_rotated ? 'ns-resize' : 'ew-resize' : null)\n\t                .classed(CLASS.eventRectsMultiple, isMultipleX)\n\t                .classed(CLASS.eventRectsSingle, !isMultipleX);\n\t\n\t        // clear old rects\n\t        eventRects.selectAll('.' + CLASS.eventRect).remove();\n\t\n\t        // open as public variable\n\t        $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n\t\n\t        if (isMultipleX) {\n\t            eventRectUpdate = $$.eventRect.data([0]);\n\t            // enter : only one rect will be added\n\t            $$.generateEventRectsForMultipleXs(eventRectUpdate.enter());\n\t            // update\n\t            $$.updateEventRect(eventRectUpdate);\n\t            // exit : not needed because always only one rect exists\n\t        }\n\t        else {\n\t            // Set data and update $$.eventRect\n\t            maxDataCountTarget = $$.getMaxDataCountTarget($$.data.targets);\n\t            eventRects.datum(maxDataCountTarget ? maxDataCountTarget.values : []);\n\t            $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n\t            eventRectUpdate = $$.eventRect.data(function (d) { return d; });\n\t            // enter\n\t            $$.generateEventRectsForSingleX(eventRectUpdate.enter());\n\t            // update\n\t            $$.updateEventRect(eventRectUpdate);\n\t            // exit\n\t            eventRectUpdate.exit().remove();\n\t        }\n\t    };\n\t    c3_chart_internal_fn.updateEventRect = function (eventRectUpdate) {\n\t        var $$ = this, config = $$.config,\n\t            x, y, w, h, rectW, rectX;\n\t\n\t        // set update selection if null\n\t        eventRectUpdate = eventRectUpdate || $$.eventRect.data(function (d) { return d; });\n\t\n\t        if ($$.isMultipleX()) {\n\t            // TODO: rotated not supported yet\n\t            x = 0;\n\t            y = 0;\n\t            w = $$.width;\n\t            h = $$.height;\n\t        }\n\t        else {\n\t            if (($$.isCustomX() || $$.isTimeSeries()) && !$$.isCategorized()) {\n\t\n\t                // update index for x that is used by prevX and nextX\n\t                $$.updateXs();\n\t\n\t                rectW = function (d) {\n\t                    var prevX = $$.getPrevX(d.index), nextX = $$.getNextX(d.index);\n\t\n\t                    // if there this is a single data point make the eventRect full width (or height)\n\t                    if (prevX === null && nextX === null) {\n\t                        return config.axis_rotated ? $$.height : $$.width;\n\t                    }\n\t\n\t                    if (prevX === null) { prevX = $$.x.domain()[0]; }\n\t                    if (nextX === null) { nextX = $$.x.domain()[1]; }\n\t\n\t                    return Math.max(0, ($$.x(nextX) - $$.x(prevX)) / 2);\n\t                };\n\t                rectX = function (d) {\n\t                    var prevX = $$.getPrevX(d.index), nextX = $$.getNextX(d.index),\n\t                        thisX = $$.data.xs[d.id][d.index];\n\t\n\t                    // if there this is a single data point position the eventRect at 0\n\t                    if (prevX === null && nextX === null) {\n\t                        return 0;\n\t                    }\n\t\n\t                    if (prevX === null) { prevX = $$.x.domain()[0]; }\n\t\n\t                    return ($$.x(thisX) + $$.x(prevX)) / 2;\n\t                };\n\t            } else {\n\t                rectW = $$.getEventRectWidth();\n\t                rectX = function (d) {\n\t                    return $$.x(d.x) - (rectW / 2);\n\t                };\n\t            }\n\t            x = config.axis_rotated ? 0 : rectX;\n\t            y = config.axis_rotated ? rectX : 0;\n\t            w = config.axis_rotated ? $$.width : rectW;\n\t            h = config.axis_rotated ? rectW : $$.height;\n\t        }\n\t\n\t        eventRectUpdate\n\t            .attr('class', $$.classEvent.bind($$))\n\t            .attr(\"x\", x)\n\t            .attr(\"y\", y)\n\t            .attr(\"width\", w)\n\t            .attr(\"height\", h);\n\t    };\n\t    c3_chart_internal_fn.generateEventRectsForSingleX = function (eventRectEnter) {\n\t        var $$ = this, d3 = $$.d3, config = $$.config;\n\t        eventRectEnter.append(\"rect\")\n\t            .attr(\"class\", $$.classEvent.bind($$))\n\t            .style(\"cursor\", config.data_selection_enabled && config.data_selection_grouped ? \"pointer\" : null)\n\t            .on('mouseover', function (d) {\n\t                var index = d.index;\n\t\n\t                if ($$.dragging || $$.flowing) { return; } // do nothing while dragging/flowing\n\t                if ($$.hasArcType()) { return; }\n\t\n\t                // Expand shapes for selection\n\t                if (config.point_focus_expand_enabled) { $$.expandCircles(index, null, true); }\n\t                $$.expandBars(index, null, true);\n\t\n\t                // Call event handler\n\t                $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n\t                    config.data_onmouseover.call($$.api, d);\n\t                });\n\t            })\n\t            .on('mouseout', function (d) {\n\t                var index = d.index;\n\t                if (!$$.config) { return; } // chart is destroyed\n\t                if ($$.hasArcType()) { return; }\n\t                $$.hideXGridFocus();\n\t                $$.hideTooltip();\n\t                // Undo expanded shapes\n\t                $$.unexpandCircles();\n\t                $$.unexpandBars();\n\t                // Call event handler\n\t                $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n\t                    config.data_onmouseout.call($$.api, d);\n\t                });\n\t            })\n\t            .on('mousemove', function (d) {\n\t                var selectedData, index = d.index,\n\t                    eventRect = $$.svg.select('.' + CLASS.eventRect + '-' + index);\n\t\n\t                if ($$.dragging || $$.flowing) { return; } // do nothing while dragging/flowing\n\t                if ($$.hasArcType()) { return; }\n\t\n\t                if ($$.isStepType(d) && $$.config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n\t                    index -= 1;\n\t                }\n\t\n\t                // Show tooltip\n\t                selectedData = $$.filterTargetsToShow($$.data.targets).map(function (t) {\n\t                    return $$.addName($$.getValueOnIndex(t.values, index));\n\t                });\n\t\n\t                if (config.tooltip_grouped) {\n\t                    $$.showTooltip(selectedData, this);\n\t                    $$.showXGridFocus(selectedData);\n\t                }\n\t\n\t                if (config.tooltip_grouped && (!config.data_selection_enabled || config.data_selection_grouped)) {\n\t                    return;\n\t                }\n\t\n\t                $$.main.selectAll('.' + CLASS.shape + '-' + index)\n\t                    .each(function () {\n\t                        d3.select(this).classed(CLASS.EXPANDED, true);\n\t                        if (config.data_selection_enabled) {\n\t                            eventRect.style('cursor', config.data_selection_grouped ? 'pointer' : null);\n\t                        }\n\t                        if (!config.tooltip_grouped) {\n\t                            $$.hideXGridFocus();\n\t                            $$.hideTooltip();\n\t                            if (!config.data_selection_grouped) {\n\t                                $$.unexpandCircles(index);\n\t                                $$.unexpandBars(index);\n\t                            }\n\t                        }\n\t                    })\n\t                    .filter(function (d) {\n\t                        return $$.isWithinShape(this, d);\n\t                    })\n\t                    .each(function (d) {\n\t                        if (config.data_selection_enabled && (config.data_selection_grouped || config.data_selection_isselectable(d))) {\n\t                            eventRect.style('cursor', 'pointer');\n\t                        }\n\t                        if (!config.tooltip_grouped) {\n\t                            $$.showTooltip([d], this);\n\t                            $$.showXGridFocus([d]);\n\t                            if (config.point_focus_expand_enabled) { $$.expandCircles(index, d.id, true); }\n\t                            $$.expandBars(index, d.id, true);\n\t                        }\n\t                    });\n\t            })\n\t            .on('click', function (d) {\n\t                var index = d.index;\n\t                if ($$.hasArcType() || !$$.toggleShape) { return; }\n\t                if ($$.cancelClick) {\n\t                    $$.cancelClick = false;\n\t                    return;\n\t                }\n\t                if ($$.isStepType(d) && config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n\t                    index -= 1;\n\t                }\n\t                $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n\t                    if (config.data_selection_grouped || $$.isWithinShape(this, d)) {\n\t                        $$.toggleShape(this, d, index);\n\t                        $$.config.data_onclick.call($$.api, d, this);\n\t                    }\n\t                });\n\t            })\n\t            .call(\n\t                config.data_selection_draggable && $$.drag ? (\n\t                    d3.behavior.drag().origin(Object)\n\t                        .on('drag', function () { $$.drag(d3.mouse(this)); })\n\t                        .on('dragstart', function () { $$.dragstart(d3.mouse(this)); })\n\t                        .on('dragend', function () { $$.dragend(); })\n\t                ) : function () {}\n\t            );\n\t    };\n\t\n\t    c3_chart_internal_fn.generateEventRectsForMultipleXs = function (eventRectEnter) {\n\t        var $$ = this, d3 = $$.d3, config = $$.config;\n\t\n\t        function mouseout() {\n\t            $$.svg.select('.' + CLASS.eventRect).style('cursor', null);\n\t            $$.hideXGridFocus();\n\t            $$.hideTooltip();\n\t            $$.unexpandCircles();\n\t            $$.unexpandBars();\n\t        }\n\t\n\t        eventRectEnter.append('rect')\n\t            .attr('x', 0)\n\t            .attr('y', 0)\n\t            .attr('width', $$.width)\n\t            .attr('height', $$.height)\n\t            .attr('class', CLASS.eventRect)\n\t            .on('mouseout', function () {\n\t                if (!$$.config) { return; } // chart is destroyed\n\t                if ($$.hasArcType()) { return; }\n\t                mouseout();\n\t            })\n\t            .on('mousemove', function () {\n\t                var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n\t                var mouse, closest, sameXData, selectedData;\n\t\n\t                if ($$.dragging) { return; } // do nothing when dragging\n\t                if ($$.hasArcType(targetsToShow)) { return; }\n\t\n\t                mouse = d3.mouse(this);\n\t                closest = $$.findClosestFromTargets(targetsToShow, mouse);\n\t\n\t                if ($$.mouseover && (!closest || closest.id !== $$.mouseover.id)) {\n\t                    config.data_onmouseout.call($$.api, $$.mouseover);\n\t                    $$.mouseover = undefined;\n\t                }\n\t\n\t                if (! closest) {\n\t                    mouseout();\n\t                    return;\n\t                }\n\t\n\t                if ($$.isScatterType(closest) || !config.tooltip_grouped) {\n\t                    sameXData = [closest];\n\t                } else {\n\t                    sameXData = $$.filterByX(targetsToShow, closest.x);\n\t                }\n\t\n\t                // show tooltip when cursor is close to some point\n\t                selectedData = sameXData.map(function (d) {\n\t                    return $$.addName(d);\n\t                });\n\t                $$.showTooltip(selectedData, this);\n\t\n\t                // expand points\n\t                if (config.point_focus_expand_enabled) {\n\t                    $$.expandCircles(closest.index, closest.id, true);\n\t                }\n\t                $$.expandBars(closest.index, closest.id, true);\n\t\n\t                // Show xgrid focus line\n\t                $$.showXGridFocus(selectedData);\n\t\n\t                // Show cursor as pointer if point is close to mouse position\n\t                if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n\t                    $$.svg.select('.' + CLASS.eventRect).style('cursor', 'pointer');\n\t                    if (!$$.mouseover) {\n\t                        config.data_onmouseover.call($$.api, closest);\n\t                        $$.mouseover = closest;\n\t                    }\n\t                }\n\t            })\n\t            .on('click', function () {\n\t                var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n\t                var mouse, closest;\n\t                if ($$.hasArcType(targetsToShow)) { return; }\n\t\n\t                mouse = d3.mouse(this);\n\t                closest = $$.findClosestFromTargets(targetsToShow, mouse);\n\t                if (! closest) { return; }\n\t                // select if selection enabled\n\t                if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n\t                    $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(closest.id)).selectAll('.' + CLASS.shape + '-' + closest.index).each(function () {\n\t                        if (config.data_selection_grouped || $$.isWithinShape(this, closest)) {\n\t                            $$.toggleShape(this, closest, closest.index);\n\t                            $$.config.data_onclick.call($$.api, closest, this);\n\t                        }\n\t                    });\n\t                }\n\t            })\n\t            .call(\n\t                config.data_selection_draggable && $$.drag ? (\n\t                    d3.behavior.drag().origin(Object)\n\t                        .on('drag', function () { $$.drag(d3.mouse(this)); })\n\t                        .on('dragstart', function () { $$.dragstart(d3.mouse(this)); })\n\t                        .on('dragend', function () { $$.dragend(); })\n\t                ) : function () {}\n\t            );\n\t    };\n\t    c3_chart_internal_fn.dispatchEvent = function (type, index, mouse) {\n\t        var $$ = this,\n\t            selector = '.' + CLASS.eventRect + (!$$.isMultipleX() ? '-' + index : ''),\n\t            eventRect = $$.main.select(selector).node(),\n\t            box = eventRect.getBoundingClientRect(),\n\t            x = box.left + (mouse ? mouse[0] : 0),\n\t            y = box.top + (mouse ? mouse[1] : 0),\n\t            event = document.createEvent(\"MouseEvents\");\n\t\n\t        event.initMouseEvent(type, true, true, window, 0, x, y, x, y,\n\t                             false, false, false, false, 0, null);\n\t        eventRect.dispatchEvent(event);\n\t    };\n\t\n\t    c3_chart_internal_fn.getCurrentWidth = function () {\n\t        var $$ = this, config = $$.config;\n\t        return config.size_width ? config.size_width : $$.getParentWidth();\n\t    };\n\t    c3_chart_internal_fn.getCurrentHeight = function () {\n\t        var $$ = this, config = $$.config,\n\t            h = config.size_height ? config.size_height : $$.getParentHeight();\n\t        return h > 0 ? h : 320 / ($$.hasType('gauge') && !config.gauge_fullCircle ? 2 : 1); \n\t    };\n\t    c3_chart_internal_fn.getCurrentPaddingTop = function () {\n\t        var $$ = this,\n\t            config = $$.config,\n\t            padding = isValue(config.padding_top) ? config.padding_top : 0;\n\t        if ($$.title && $$.title.node()) {\n\t            padding += $$.getTitlePadding();\n\t        }\n\t        return padding;\n\t    };\n\t    c3_chart_internal_fn.getCurrentPaddingBottom = function () {\n\t        var config = this.config;\n\t        return isValue(config.padding_bottom) ? config.padding_bottom : 0;\n\t    };\n\t    c3_chart_internal_fn.getCurrentPaddingLeft = function (withoutRecompute) {\n\t        var $$ = this, config = $$.config;\n\t        if (isValue(config.padding_left)) {\n\t            return config.padding_left;\n\t        } else if (config.axis_rotated) {\n\t            return !config.axis_x_show ? 1 : Math.max(ceil10($$.getAxisWidthByAxisId('x', withoutRecompute)), 40);\n\t        } else if (!config.axis_y_show || config.axis_y_inner) { // && !config.axis_rotated\n\t            return $$.axis.getYAxisLabelPosition().isOuter ? 30 : 1;\n\t        } else {\n\t            return ceil10($$.getAxisWidthByAxisId('y', withoutRecompute));\n\t        }\n\t    };\n\t    c3_chart_internal_fn.getCurrentPaddingRight = function () {\n\t        var $$ = this, config = $$.config,\n\t            defaultPadding = 10, legendWidthOnRight = $$.isLegendRight ? $$.getLegendWidth() + 20 : 0;\n\t        if (isValue(config.padding_right)) {\n\t            return config.padding_right + 1; // 1 is needed not to hide tick line\n\t        } else if (config.axis_rotated) {\n\t            return defaultPadding + legendWidthOnRight;\n\t        } else if (!config.axis_y2_show || config.axis_y2_inner) { // && !config.axis_rotated\n\t            return 2 + legendWidthOnRight + ($$.axis.getY2AxisLabelPosition().isOuter ? 20 : 0);\n\t        } else {\n\t            return ceil10($$.getAxisWidthByAxisId('y2')) + legendWidthOnRight;\n\t        }\n\t    };\n\t\n\t    c3_chart_internal_fn.getParentRectValue = function (key) {\n\t        var parent = this.selectChart.node(), v;\n\t        while (parent && parent.tagName !== 'BODY') {\n\t            try {\n\t                v = parent.getBoundingClientRect()[key];\n\t            } catch(e) {\n\t                if (key === 'width') {\n\t                    // In IE in certain cases getBoundingClientRect\n\t                    // will cause an \"unspecified error\"\n\t                    v = parent.offsetWidth;\n\t                }\n\t            }\n\t            if (v) {\n\t                break;\n\t            }\n\t            parent = parent.parentNode;\n\t        }\n\t        return v;\n\t    };\n\t    c3_chart_internal_fn.getParentWidth = function () {\n\t        return this.getParentRectValue('width');\n\t    };\n\t    c3_chart_internal_fn.getParentHeight = function () {\n\t        var h = this.selectChart.style('height');\n\t        return h.indexOf('px') > 0 ? +h.replace('px', '') : 0;\n\t    };\n\t\n\t\n\t    c3_chart_internal_fn.getSvgLeft = function (withoutRecompute) {\n\t        var $$ = this, config = $$.config,\n\t            hasLeftAxisRect = config.axis_rotated || (!config.axis_rotated && !config.axis_y_inner),\n\t            leftAxisClass = config.axis_rotated ? CLASS.axisX : CLASS.axisY,\n\t            leftAxis = $$.main.select('.' + leftAxisClass).node(),\n\t            svgRect = leftAxis && hasLeftAxisRect ? leftAxis.getBoundingClientRect() : {right: 0},\n\t            chartRect = $$.selectChart.node().getBoundingClientRect(),\n\t            hasArc = $$.hasArcType(),\n\t            svgLeft = svgRect.right - chartRect.left - (hasArc ? 0 : $$.getCurrentPaddingLeft(withoutRecompute));\n\t        return svgLeft > 0 ? svgLeft : 0;\n\t    };\n\t\n\t\n\t    c3_chart_internal_fn.getAxisWidthByAxisId = function (id, withoutRecompute) {\n\t        var $$ = this, position = $$.axis.getLabelPositionById(id);\n\t        return $$.axis.getMaxTickWidth(id, withoutRecompute) + (position.isInner ? 20 : 40);\n\t    };\n\t    c3_chart_internal_fn.getHorizontalAxisHeight = function (axisId) {\n\t        var $$ = this, config = $$.config, h = 30;\n\t        if (axisId === 'x' && !config.axis_x_show) { return 8; }\n\t        if (axisId === 'x' && config.axis_x_height) { return config.axis_x_height; }\n\t        if (axisId === 'y' && !config.axis_y_show) { \n\t            return config.legend_show && !$$.isLegendRight && !$$.isLegendInset ? 10 : 1; \n\t        }\n\t        if (axisId === 'y2' && !config.axis_y2_show) { return $$.rotated_padding_top; }\n\t        // Calculate x axis height when tick rotated\n\t        if (axisId === 'x' && !config.axis_rotated && config.axis_x_tick_rotate) {\n\t            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_x_tick_rotate) / 180);\n\t        }\n\t        // Calculate y axis height when tick rotated\n\t        if (axisId === 'y' && config.axis_rotated && config.axis_y_tick_rotate) {\n\t            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_y_tick_rotate) / 180);\n\t        }\n\t        return h + ($$.axis.getLabelPositionById(axisId).isInner ? 0 : 10) + (axisId === 'y2' ? -10 : 0);\n\t    };\n\t\n\t    c3_chart_internal_fn.getEventRectWidth = function () {\n\t        return Math.max(0, this.xAxis.tickInterval());\n\t    };\n\t\n\t    c3_chart_internal_fn.getShapeIndices = function (typeFilter) {\n\t        var $$ = this, config = $$.config,\n\t            indices = {}, i = 0, j, k;\n\t        $$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$)).forEach(function (d) {\n\t            for (j = 0; j < config.data_groups.length; j++) {\n\t                if (config.data_groups[j].indexOf(d.id) < 0) { continue; }\n\t                for (k = 0; k < config.data_groups[j].length; k++) {\n\t                    if (config.data_groups[j][k] in indices) {\n\t                        indices[d.id] = indices[config.data_groups[j][k]];\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t            if (isUndefined(indices[d.id])) { indices[d.id] = i++; }\n\t        });\n\t        indices.__max__ = i - 1;\n\t        return indices;\n\t    };\n\t    c3_chart_internal_fn.getShapeX = function (offset, targetsNum, indices, isSub) {\n\t        var $$ = this, scale = isSub ? $$.subX : $$.x;\n\t        return function (d) {\n\t            var index = d.id in indices ? indices[d.id] : 0;\n\t            return d.x || d.x === 0 ? scale(d.x) - offset * (targetsNum / 2 - index) : 0;\n\t        };\n\t    };\n\t    c3_chart_internal_fn.getShapeY = function (isSub) {\n\t        var $$ = this;\n\t        return function (d) {\n\t            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id);\n\t            return scale(d.value);\n\t        };\n\t    };\n\t    c3_chart_internal_fn.getShapeOffset = function (typeFilter, indices, isSub) {\n\t        var $$ = this,\n\t            targets = $$.orderTargets($$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$))),\n\t            targetIds = targets.map(function (t) { return t.id; });\n\t        return function (d, i) {\n\t            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id),\n\t                y0 = scale(0), offset = y0;\n\t            targets.forEach(function (t) {\n\t                var values = $$.isStepType(d) ? $$.convertValuesToStep(t.values) : t.values;\n\t                if (t.id === d.id || indices[t.id] !== indices[d.id]) { return; }\n\t                if (targetIds.indexOf(t.id) < targetIds.indexOf(d.id)) {\n\t                    // check if the x values line up\n\t                    if (typeof values[i] === 'undefined' || +values[i].x !== +d.x) {  // \"+\" for timeseries\n\t                        // if not, try to find the value that does line up\n\t                        i = -1;\n\t                        values.forEach(function (v, j) {\n\t                            if (v.x === d.x) {\n\t                                i = j;\n\t                            }\n\t                        });\n\t                    }\n\t                    if (i in values && values[i].value * d.value >= 0) {\n\t                        offset += scale(values[i].value) - y0;\n\t                    }\n\t                }\n\t            });\n\t            return offset;\n\t        };\n\t    };\n\t    c3_chart_internal_fn.isWithinShape = function (that, d) {\n\t        var $$ = this,\n\t            shape = $$.d3.select(that), isWithin;\n\t        if (!$$.isTargetToShow(d.id)) {\n\t            isWithin = false;\n\t        }\n\t        else if (that.nodeName === 'circle') {\n\t            isWithin = $$.isStepType(d) ? $$.isWithinStep(that, $$.getYScale(d.id)(d.value)) : $$.isWithinCircle(that, $$.pointSelectR(d) * 1.5);\n\t        }\n\t        else if (that.nodeName === 'path') {\n\t            isWithin = shape.classed(CLASS.bar) ? $$.isWithinBar(that) : true;\n\t        }\n\t        return isWithin;\n\t    };\n\t\n\t\n\t    c3_chart_internal_fn.getInterpolate = function (d) {\n\t        var $$ = this,\n\t            interpolation = $$.isInterpolationType($$.config.spline_interpolation_type) ? $$.config.spline_interpolation_type : 'cardinal';\n\t        return $$.isSplineType(d) ? interpolation : $$.isStepType(d) ? $$.config.line_step_type : \"linear\";\n\t    };\n\t\n\t    c3_chart_internal_fn.initLine = function () {\n\t        var $$ = this;\n\t        $$.main.select('.' + CLASS.chart).append(\"g\")\n\t            .attr(\"class\", CLASS.chartLines);\n\t    };\n\t    c3_chart_internal_fn.updateTargetsForLine = function (targets) {\n\t        var $$ = this, config = $$.config,\n\t            mainLineUpdate, mainLineEnter,\n\t            classChartLine = $$.classChartLine.bind($$),\n\t            classLines = $$.classLines.bind($$),\n\t            classAreas = $$.classAreas.bind($$),\n\t            classCircles = $$.classCircles.bind($$),\n\t            classFocus = $$.classFocus.bind($$);\n\t        mainLineUpdate = $$.main.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine)\n\t            .data(targets)\n\t            .attr('class', function (d) { return classChartLine(d) + classFocus(d); });\n\t        mainLineEnter = mainLineUpdate.enter().append('g')\n\t            .attr('class', classChartLine)\n\t            .style('opacity', 0)\n\t            .style(\"pointer-events\", \"none\");\n\t        // Lines for each data\n\t        mainLineEnter.append('g')\n\t            .attr(\"class\", classLines);\n\t        // Areas\n\t        mainLineEnter.append('g')\n\t            .attr('class', classAreas);\n\t        // Circles for each data point on lines\n\t        mainLineEnter.append('g')\n\t            .attr(\"class\", function (d) { return $$.generateClass(CLASS.selectedCircles, d.id); });\n\t        mainLineEnter.append('g')\n\t            .attr(\"class\", classCircles)\n\t            .style(\"cursor\", function (d) { return config.data_selection_isselectable(d) ? \"pointer\" : null; });\n\t        // Update date for selected circles\n\t        targets.forEach(function (t) {\n\t            $$.main.selectAll('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(t.id)).selectAll('.' + CLASS.selectedCircle).each(function (d) {\n\t                d.value = t.values[d.index].value;\n\t            });\n\t        });\n\t        // MEMO: can not keep same color...\n\t        //mainLineUpdate.exit().remove();\n\t    };\n\t    c3_chart_internal_fn.updateLine = function (durationForExit) {\n\t        var $$ = this;\n\t        $$.mainLine = $$.main.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line)\n\t            .data($$.lineData.bind($$));\n\t        $$.mainLine.enter().append('path')\n\t            .attr('class', $$.classLine.bind($$))\n\t            .style(\"stroke\", $$.color);\n\t        $$.mainLine\n\t            .style(\"opacity\", $$.initialOpacity.bind($$))\n\t            .style('shape-rendering', function (d) { return $$.isStepType(d) ? 'crispEdges' : ''; })\n\t            .attr('transform', null);\n\t        $$.mainLine.exit().transition().duration(durationForExit)\n\t            .style('opacity', 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.redrawLine = function (drawLine, withTransition) {\n\t        return [\n\t            (withTransition ? this.mainLine.transition(Math.random().toString()) : this.mainLine)\n\t                .attr(\"d\", drawLine)\n\t                .style(\"stroke\", this.color)\n\t                .style(\"opacity\", 1)\n\t        ];\n\t    };\n\t    c3_chart_internal_fn.generateDrawLine = function (lineIndices, isSub) {\n\t        var $$ = this, config = $$.config,\n\t            line = $$.d3.svg.line(),\n\t            getPoints = $$.generateGetLinePoints(lineIndices, isSub),\n\t            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n\t            xValue = function (d) { return (isSub ? $$.subxx : $$.xx).call($$, d); },\n\t            yValue = function (d, i) {\n\t                return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\n\t            };\n\t\n\t        line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\n\t        if (!config.line_connectNull) { line = line.defined(function (d) { return d.value != null; }); }\n\t        return function (d) {\n\t            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n\t                x = isSub ? $$.x : $$.subX, y = yScaleGetter.call($$, d.id), x0 = 0, y0 = 0, path;\n\t            if ($$.isLineType(d)) {\n\t                if (config.data_regions[d.id]) {\n\t                    path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\n\t                } else {\n\t                    if ($$.isStepType(d)) { values = $$.convertValuesToStep(values); }\n\t                    path = line.interpolate($$.getInterpolate(d))(values);\n\t                }\n\t            } else {\n\t                if (values[0]) {\n\t                    x0 = x(values[0].x);\n\t                    y0 = y(values[0].value);\n\t                }\n\t                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n\t            }\n\t            return path ? path : \"M 0 0\";\n\t        };\n\t    };\n\t    c3_chart_internal_fn.generateGetLinePoints = function (lineIndices, isSub) { // partial duplication of generateGetBarPoints\n\t        var $$ = this, config = $$.config,\n\t            lineTargetsNum = lineIndices.__max__ + 1,\n\t            x = $$.getShapeX(0, lineTargetsNum, lineIndices, !!isSub),\n\t            y = $$.getShapeY(!!isSub),\n\t            lineOffset = $$.getShapeOffset($$.isLineType, lineIndices, !!isSub),\n\t            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n\t        return function (d, i) {\n\t            var y0 = yScale.call($$, d.id)(0),\n\t                offset = lineOffset(d, i) || y0, // offset is for stacked area chart\n\t                posX = x(d), posY = y(d);\n\t            // fix posY not to overflow opposite quadrant\n\t            if (config.axis_rotated) {\n\t                if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) { posY = y0; }\n\t            }\n\t            // 1 point that marks the line position\n\t            return [\n\t                [posX, posY - (y0 - offset)],\n\t                [posX, posY - (y0 - offset)], // needed for compatibility\n\t                [posX, posY - (y0 - offset)], // needed for compatibility\n\t                [posX, posY - (y0 - offset)]  // needed for compatibility\n\t            ];\n\t        };\n\t    };\n\t\n\t\n\t    c3_chart_internal_fn.lineWithRegions = function (d, x, y, _regions) {\n\t        var $$ = this, config = $$.config,\n\t            prev = -1, i, j,\n\t            s = \"M\", sWithRegion,\n\t            xp, yp, dx, dy, dd, diff, diffx2,\n\t            xOffset = $$.isCategorized() ? 0.5 : 0,\n\t            xValue, yValue,\n\t            regions = [];\n\t\n\t        function isWithinRegions(x, regions) {\n\t            var i;\n\t            for (i = 0; i < regions.length; i++) {\n\t                if (regions[i].start < x && x <= regions[i].end) { return true; }\n\t            }\n\t            return false;\n\t        }\n\t\n\t        // Check start/end of regions\n\t        if (isDefined(_regions)) {\n\t            for (i = 0; i < _regions.length; i++) {\n\t                regions[i] = {};\n\t                if (isUndefined(_regions[i].start)) {\n\t                    regions[i].start = d[0].x;\n\t                } else {\n\t                    regions[i].start = $$.isTimeSeries() ? $$.parseDate(_regions[i].start) : _regions[i].start;\n\t                }\n\t                if (isUndefined(_regions[i].end)) {\n\t                    regions[i].end = d[d.length - 1].x;\n\t                } else {\n\t                    regions[i].end = $$.isTimeSeries() ? $$.parseDate(_regions[i].end) : _regions[i].end;\n\t                }\n\t            }\n\t        }\n\t\n\t        // Set scales\n\t        xValue = config.axis_rotated ? function (d) { return y(d.value); } : function (d) { return x(d.x); };\n\t        yValue = config.axis_rotated ? function (d) { return x(d.x); } : function (d) { return y(d.value); };\n\t\n\t        // Define svg generator function for region\n\t        function generateM(points) {\n\t            return 'M' + points[0][0] + ' ' + points[0][1] + ' ' + points[1][0] + ' ' + points[1][1];\n\t        }\n\t        if ($$.isTimeSeries()) {\n\t            sWithRegion = function (d0, d1, j, diff) {\n\t                var x0 = d0.x.getTime(), x_diff = d1.x - d0.x,\n\t                    xv0 = new Date(x0 + x_diff * j),\n\t                    xv1 = new Date(x0 + x_diff * (j + diff)),\n\t                    points;\n\t                if (config.axis_rotated) {\n\t                    points = [[y(yp(j)), x(xv0)], [y(yp(j + diff)), x(xv1)]];\n\t                } else {\n\t                    points = [[x(xv0), y(yp(j))], [x(xv1), y(yp(j + diff))]];\n\t                }\n\t                return generateM(points);\n\t            };\n\t        } else {\n\t            sWithRegion = function (d0, d1, j, diff) {\n\t                var points;\n\t                if (config.axis_rotated) {\n\t                    points = [[y(yp(j), true), x(xp(j))], [y(yp(j + diff), true), x(xp(j + diff))]];\n\t                } else {\n\t                    points = [[x(xp(j), true), y(yp(j))], [x(xp(j + diff), true), y(yp(j + diff))]];\n\t                }\n\t                return generateM(points);\n\t            };\n\t        }\n\t\n\t        // Generate\n\t        for (i = 0; i < d.length; i++) {\n\t\n\t            // Draw as normal\n\t            if (isUndefined(regions) || ! isWithinRegions(d[i].x, regions)) {\n\t                s += \" \" + xValue(d[i]) + \" \" + yValue(d[i]);\n\t            }\n\t            // Draw with region // TODO: Fix for horizotal charts\n\t            else {\n\t                xp = $$.getScale(d[i - 1].x + xOffset, d[i].x + xOffset, $$.isTimeSeries());\n\t                yp = $$.getScale(d[i - 1].value, d[i].value);\n\t\n\t                dx = x(d[i].x) - x(d[i - 1].x);\n\t                dy = y(d[i].value) - y(d[i - 1].value);\n\t                dd = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n\t                diff = 2 / dd;\n\t                diffx2 = diff * 2;\n\t\n\t                for (j = diff; j <= 1; j += diffx2) {\n\t                    s += sWithRegion(d[i - 1], d[i], j, diff);\n\t                }\n\t            }\n\t            prev = d[i].x;\n\t        }\n\t\n\t        return s;\n\t    };\n\t\n\t\n\t    c3_chart_internal_fn.updateArea = function (durationForExit) {\n\t        var $$ = this, d3 = $$.d3;\n\t        $$.mainArea = $$.main.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area)\n\t            .data($$.lineData.bind($$));\n\t        $$.mainArea.enter().append('path')\n\t            .attr(\"class\", $$.classArea.bind($$))\n\t            .style(\"fill\", $$.color)\n\t            .style(\"opacity\", function () { $$.orgAreaOpacity = +d3.select(this).style('opacity'); return 0; });\n\t        $$.mainArea\n\t            .style(\"opacity\", $$.orgAreaOpacity);\n\t        $$.mainArea.exit().transition().duration(durationForExit)\n\t            .style('opacity', 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.redrawArea = function (drawArea, withTransition) {\n\t        return [\n\t            (withTransition ? this.mainArea.transition(Math.random().toString()) : this.mainArea)\n\t                .attr(\"d\", drawArea)\n\t                .style(\"fill\", this.color)\n\t                .style(\"opacity\", this.orgAreaOpacity)\n\t        ];\n\t    };\n\t    c3_chart_internal_fn.generateDrawArea = function (areaIndices, isSub) {\n\t        var $$ = this, config = $$.config, area = $$.d3.svg.area(),\n\t            getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\n\t            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n\t            xValue = function (d) { return (isSub ? $$.subxx : $$.xx).call($$, d); },\n\t            value0 = function (d, i) {\n\t                return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)($$.getAreaBaseValue(d.id));\n\t            },\n\t            value1 = function (d, i) {\n\t                return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\n\t            };\n\t\n\t        area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(config.area_above ? 0 : value0).y1(value1);\n\t        if (!config.line_connectNull) {\n\t            area = area.defined(function (d) { return d.value !== null; });\n\t        }\n\t\n\t        return function (d) {\n\t            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n\t                x0 = 0, y0 = 0, path;\n\t            if ($$.isAreaType(d)) {\n\t                if ($$.isStepType(d)) { values = $$.convertValuesToStep(values); }\n\t                path = area.interpolate($$.getInterpolate(d))(values);\n\t            } else {\n\t                if (values[0]) {\n\t                    x0 = $$.x(values[0].x);\n\t                    y0 = $$.getYScale(d.id)(values[0].value);\n\t                }\n\t                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n\t            }\n\t            return path ? path : \"M 0 0\";\n\t        };\n\t    };\n\t    c3_chart_internal_fn.getAreaBaseValue = function () {\n\t        return 0;\n\t    };\n\t    c3_chart_internal_fn.generateGetAreaPoints = function (areaIndices, isSub) { // partial duplication of generateGetBarPoints\n\t        var $$ = this, config = $$.config,\n\t            areaTargetsNum = areaIndices.__max__ + 1,\n\t            x = $$.getShapeX(0, areaTargetsNum, areaIndices, !!isSub),\n\t            y = $$.getShapeY(!!isSub),\n\t            areaOffset = $$.getShapeOffset($$.isAreaType, areaIndices, !!isSub),\n\t            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n\t        return function (d, i) {\n\t            var y0 = yScale.call($$, d.id)(0),\n\t                offset = areaOffset(d, i) || y0, // offset is for stacked area chart\n\t                posX = x(d), posY = y(d);\n\t            // fix posY not to overflow opposite quadrant\n\t            if (config.axis_rotated) {\n\t                if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) { posY = y0; }\n\t            }\n\t            // 1 point that marks the area position\n\t            return [\n\t                [posX, offset],\n\t                [posX, posY - (y0 - offset)],\n\t                [posX, posY - (y0 - offset)], // needed for compatibility\n\t                [posX, offset] // needed for compatibility\n\t            ];\n\t        };\n\t    };\n\t\n\t\n\t    c3_chart_internal_fn.updateCircle = function () {\n\t        var $$ = this;\n\t        $$.mainCircle = $$.main.selectAll('.' + CLASS.circles).selectAll('.' + CLASS.circle)\n\t            .data($$.lineOrScatterData.bind($$));\n\t        $$.mainCircle.enter().append(\"circle\")\n\t            .attr(\"class\", $$.classCircle.bind($$))\n\t            .attr(\"r\", $$.pointR.bind($$))\n\t            .style(\"fill\", $$.color);\n\t        $$.mainCircle\n\t            .style(\"opacity\", $$.initialOpacityForCircle.bind($$));\n\t        $$.mainCircle.exit().remove();\n\t    };\n\t    c3_chart_internal_fn.redrawCircle = function (cx, cy, withTransition) {\n\t        var selectedCircles = this.main.selectAll('.' + CLASS.selectedCircle);\n\t        return [\n\t            (withTransition ? this.mainCircle.transition(Math.random().toString()) : this.mainCircle)\n\t                .style('opacity', this.opacityForCircle.bind(this))\n\t                .style(\"fill\", this.color)\n\t                .attr(\"cx\", cx)\n\t                .attr(\"cy\", cy),\n\t            (withTransition ? selectedCircles.transition(Math.random().toString()) : selectedCircles)\n\t                .attr(\"cx\", cx)\n\t                .attr(\"cy\", cy)\n\t        ];\n\t    };\n\t    c3_chart_internal_fn.circleX = function (d) {\n\t        return d.x || d.x === 0 ? this.x(d.x) : null;\n\t    };\n\t    c3_chart_internal_fn.updateCircleY = function () {\n\t        var $$ = this, lineIndices, getPoints;\n\t        if ($$.config.data_groups.length > 0) {\n\t            lineIndices = $$.getShapeIndices($$.isLineType),\n\t            getPoints = $$.generateGetLinePoints(lineIndices);\n\t            $$.circleY = function (d, i) {\n\t                return getPoints(d, i)[0][1];\n\t            };\n\t        } else {\n\t            $$.circleY = function (d) {\n\t                return $$.getYScale(d.id)(d.value);\n\t            };\n\t        }\n\t    };\n\t    c3_chart_internal_fn.getCircles = function (i, id) {\n\t        var $$ = this;\n\t        return (id ? $$.main.selectAll('.' + CLASS.circles + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.circle + (isValue(i) ? '-' + i : ''));\n\t    };\n\t    c3_chart_internal_fn.expandCircles = function (i, id, reset) {\n\t        var $$ = this,\n\t            r = $$.pointExpandedR.bind($$);\n\t        if (reset) { $$.unexpandCircles(); }\n\t        $$.getCircles(i, id)\n\t            .classed(CLASS.EXPANDED, true)\n\t            .attr('r', r);\n\t    };\n\t    c3_chart_internal_fn.unexpandCircles = function (i) {\n\t        var $$ = this,\n\t            r = $$.pointR.bind($$);\n\t        $$.getCircles(i)\n\t            .filter(function () { return $$.d3.select(this).classed(CLASS.EXPANDED); })\n\t            .classed(CLASS.EXPANDED, false)\n\t            .attr('r', r);\n\t    };\n\t    c3_chart_internal_fn.pointR = function (d) {\n\t        var $$ = this, config = $$.config;\n\t        return $$.isStepType(d) ? 0 : (isFunction(config.point_r) ? config.point_r(d) : config.point_r);\n\t    };\n\t    c3_chart_internal_fn.pointExpandedR = function (d) {\n\t        var $$ = this, config = $$.config;\n\t        return config.point_focus_expand_enabled ? (config.point_focus_expand_r ? config.point_focus_expand_r : $$.pointR(d) * 1.75) : $$.pointR(d);\n\t    };\n\t    c3_chart_internal_fn.pointSelectR = function (d) {\n\t        var $$ = this, config = $$.config;\n\t        return isFunction(config.point_select_r) ? config.point_select_r(d) : ((config.point_select_r) ? config.point_select_r : $$.pointR(d) * 4);\n\t    };\n\t    c3_chart_internal_fn.isWithinCircle = function (that, r) {\n\t        var d3 = this.d3,\n\t            mouse = d3.mouse(that), d3_this = d3.select(that),\n\t            cx = +d3_this.attr(\"cx\"), cy = +d3_this.attr(\"cy\");\n\t        return Math.sqrt(Math.pow(cx - mouse[0], 2) + Math.pow(cy - mouse[1], 2)) < r;\n\t    };\n\t    c3_chart_internal_fn.isWithinStep = function (that, y) {\n\t        return Math.abs(y - this.d3.mouse(that)[1]) < 30;\n\t    };\n\t\n\t    c3_chart_internal_fn.initBar = function () {\n\t        var $$ = this;\n\t        $$.main.select('.' + CLASS.chart).append(\"g\")\n\t            .attr(\"class\", CLASS.chartBars);\n\t    };\n\t    c3_chart_internal_fn.updateTargetsForBar = function (targets) {\n\t        var $$ = this, config = $$.config,\n\t            mainBarUpdate, mainBarEnter,\n\t            classChartBar = $$.classChartBar.bind($$),\n\t            classBars = $$.classBars.bind($$),\n\t            classFocus = $$.classFocus.bind($$);\n\t        mainBarUpdate = $$.main.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar)\n\t            .data(targets)\n\t            .attr('class', function (d) { return classChartBar(d) + classFocus(d); });\n\t        mainBarEnter = mainBarUpdate.enter().append('g')\n\t            .attr('class', classChartBar)\n\t            .style('opacity', 0)\n\t            .style(\"pointer-events\", \"none\");\n\t        // Bars for each data\n\t        mainBarEnter.append('g')\n\t            .attr(\"class\", classBars)\n\t            .style(\"cursor\", function (d) { return config.data_selection_isselectable(d) ? \"pointer\" : null; });\n\t\n\t    };\n\t    c3_chart_internal_fn.updateBar = function (durationForExit) {\n\t        var $$ = this,\n\t            barData = $$.barData.bind($$),\n\t            classBar = $$.classBar.bind($$),\n\t            initialOpacity = $$.initialOpacity.bind($$),\n\t            color = function (d) { return $$.color(d.id); };\n\t        $$.mainBar = $$.main.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar)\n\t            .data(barData);\n\t        $$.mainBar.enter().append('path')\n\t            .attr(\"class\", classBar)\n\t            .style(\"stroke\", color)\n\t            .style(\"fill\", color);\n\t        $$.mainBar\n\t            .style(\"opacity\", initialOpacity);\n\t        $$.mainBar.exit().transition().duration(durationForExit)\n\t            .style('opacity', 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.redrawBar = function (drawBar, withTransition) {\n\t        return [\n\t            (withTransition ? this.mainBar.transition(Math.random().toString()) : this.mainBar)\n\t                .attr('d', drawBar)\n\t                .style(\"fill\", this.color)\n\t                .style(\"opacity\", 1)\n\t        ];\n\t    };\n\t    c3_chart_internal_fn.getBarW = function (axis, barTargetsNum) {\n\t        var $$ = this, config = $$.config,\n\t            w = typeof config.bar_width === 'number' ? config.bar_width : barTargetsNum ? (axis.tickInterval() * config.bar_width_ratio) / barTargetsNum : 0;\n\t        return config.bar_width_max && w > config.bar_width_max ? config.bar_width_max : w;\n\t    };\n\t    c3_chart_internal_fn.getBars = function (i, id) {\n\t        var $$ = this;\n\t        return (id ? $$.main.selectAll('.' + CLASS.bars + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.bar + (isValue(i) ? '-' + i : ''));\n\t    };\n\t    c3_chart_internal_fn.expandBars = function (i, id, reset) {\n\t        var $$ = this;\n\t        if (reset) { $$.unexpandBars(); }\n\t        $$.getBars(i, id).classed(CLASS.EXPANDED, true);\n\t    };\n\t    c3_chart_internal_fn.unexpandBars = function (i) {\n\t        var $$ = this;\n\t        $$.getBars(i).classed(CLASS.EXPANDED, false);\n\t    };\n\t    c3_chart_internal_fn.generateDrawBar = function (barIndices, isSub) {\n\t        var $$ = this, config = $$.config,\n\t            getPoints = $$.generateGetBarPoints(barIndices, isSub);\n\t        return function (d, i) {\n\t            // 4 points that make a bar\n\t            var points = getPoints(d, i);\n\t\n\t            // switch points if axis is rotated, not applicable for sub chart\n\t            var indexX = config.axis_rotated ? 1 : 0;\n\t            var indexY = config.axis_rotated ? 0 : 1;\n\t\n\t            var path = 'M ' + points[0][indexX] + ',' + points[0][indexY] + ' ' +\n\t                    'L' + points[1][indexX] + ',' + points[1][indexY] + ' ' +\n\t                    'L' + points[2][indexX] + ',' + points[2][indexY] + ' ' +\n\t                    'L' + points[3][indexX] + ',' + points[3][indexY] + ' ' +\n\t                    'z';\n\t\n\t            return path;\n\t        };\n\t    };\n\t    c3_chart_internal_fn.generateGetBarPoints = function (barIndices, isSub) {\n\t        var $$ = this,\n\t            axis = isSub ? $$.subXAxis : $$.xAxis,\n\t            barTargetsNum = barIndices.__max__ + 1,\n\t            barW = $$.getBarW(axis, barTargetsNum),\n\t            barX = $$.getShapeX(barW, barTargetsNum, barIndices, !!isSub),\n\t            barY = $$.getShapeY(!!isSub),\n\t            barOffset = $$.getShapeOffset($$.isBarType, barIndices, !!isSub),\n\t            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n\t        return function (d, i) {\n\t            var y0 = yScale.call($$, d.id)(0),\n\t                offset = barOffset(d, i) || y0, // offset is for stacked bar chart\n\t                posX = barX(d), posY = barY(d);\n\t            // fix posY not to overflow opposite quadrant\n\t            if ($$.config.axis_rotated) {\n\t                if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) { posY = y0; }\n\t            }\n\t            // 4 points that make a bar\n\t            return [\n\t                [posX, offset],\n\t                [posX, posY - (y0 - offset)],\n\t                [posX + barW, posY - (y0 - offset)],\n\t                [posX + barW, offset]\n\t            ];\n\t        };\n\t    };\n\t    c3_chart_internal_fn.isWithinBar = function (that) {\n\t        var mouse = this.d3.mouse(that), box = that.getBoundingClientRect(),\n\t            seg0 = that.pathSegList.getItem(0), seg1 = that.pathSegList.getItem(1),\n\t            x = Math.min(seg0.x, seg1.x), y = Math.min(seg0.y, seg1.y),\n\t            w = box.width, h = box.height, offset = 2,\n\t            sx = x - offset, ex = x + w + offset, sy = y + h + offset, ey = y - offset;\n\t        return sx < mouse[0] && mouse[0] < ex && ey < mouse[1] && mouse[1] < sy;\n\t    };\n\t\n\t    c3_chart_internal_fn.initText = function () {\n\t        var $$ = this;\n\t        $$.main.select('.' + CLASS.chart).append(\"g\")\n\t            .attr(\"class\", CLASS.chartTexts);\n\t        $$.mainText = $$.d3.selectAll([]);\n\t    };\n\t    c3_chart_internal_fn.updateTargetsForText = function (targets) {\n\t        var $$ = this, mainTextUpdate, mainTextEnter,\n\t            classChartText = $$.classChartText.bind($$),\n\t            classTexts = $$.classTexts.bind($$),\n\t            classFocus = $$.classFocus.bind($$);\n\t        mainTextUpdate = $$.main.select('.' + CLASS.chartTexts).selectAll('.' + CLASS.chartText)\n\t            .data(targets)\n\t            .attr('class', function (d) { return classChartText(d) + classFocus(d); });\n\t        mainTextEnter = mainTextUpdate.enter().append('g')\n\t            .attr('class', classChartText)\n\t            .style('opacity', 0)\n\t            .style(\"pointer-events\", \"none\");\n\t        mainTextEnter.append('g')\n\t            .attr('class', classTexts);\n\t    };\n\t    c3_chart_internal_fn.updateText = function (durationForExit) {\n\t        var $$ = this, config = $$.config,\n\t            barOrLineData = $$.barOrLineData.bind($$),\n\t            classText = $$.classText.bind($$);\n\t        $$.mainText = $$.main.selectAll('.' + CLASS.texts).selectAll('.' + CLASS.text)\n\t            .data(barOrLineData);\n\t        $$.mainText.enter().append('text')\n\t            .attr(\"class\", classText)\n\t            .attr('text-anchor', function (d) { return config.axis_rotated ? (d.value < 0 ? 'end' : 'start') : 'middle'; })\n\t            .style(\"stroke\", 'none')\n\t            .style(\"fill\", function (d) { return $$.color(d); })\n\t            .style(\"fill-opacity\", 0);\n\t        $$.mainText\n\t            .text(function (d, i, j) { return $$.dataLabelFormat(d.id)(d.value, d.id, i, j); });\n\t        $$.mainText.exit()\n\t            .transition().duration(durationForExit)\n\t            .style('fill-opacity', 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.redrawText = function (xForText, yForText, forFlow, withTransition) {\n\t        return [\n\t            (withTransition ? this.mainText.transition() : this.mainText)\n\t                .attr('x', xForText)\n\t                .attr('y', yForText)\n\t                .style(\"fill\", this.color)\n\t                .style(\"fill-opacity\", forFlow ? 0 : this.opacityForText.bind(this))\n\t        ];\n\t    };\n\t    c3_chart_internal_fn.getTextRect = function (text, cls, element) {\n\t        var dummy = this.d3.select('body').append('div').classed('c3', true),\n\t            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n\t            font = this.d3.select(element).style('font'),\n\t            rect;\n\t        svg.selectAll('.dummy')\n\t            .data([text])\n\t          .enter().append('text')\n\t            .classed(cls ? cls : \"\", true)\n\t            .style('font', font)\n\t            .text(text)\n\t          .each(function () { rect = this.getBoundingClientRect(); });\n\t        dummy.remove();\n\t        return rect;\n\t    };\n\t    c3_chart_internal_fn.generateXYForText = function (areaIndices, barIndices, lineIndices, forX) {\n\t        var $$ = this,\n\t            getAreaPoints = $$.generateGetAreaPoints(areaIndices, false),\n\t            getBarPoints = $$.generateGetBarPoints(barIndices, false),\n\t            getLinePoints = $$.generateGetLinePoints(lineIndices, false),\n\t            getter = forX ? $$.getXForText : $$.getYForText;\n\t        return function (d, i) {\n\t            var getPoints = $$.isAreaType(d) ? getAreaPoints : $$.isBarType(d) ? getBarPoints : getLinePoints;\n\t            return getter.call($$, getPoints(d, i), d, this);\n\t        };\n\t    };\n\t    c3_chart_internal_fn.getXForText = function (points, d, textElement) {\n\t        var $$ = this,\n\t            box = textElement.getBoundingClientRect(), xPos, padding;\n\t        if ($$.config.axis_rotated) {\n\t            padding = $$.isBarType(d) ? 4 : 6;\n\t            xPos = points[2][1] + padding * (d.value < 0 ? -1 : 1);\n\t        } else {\n\t            xPos = $$.hasType('bar') ? (points[2][0] + points[0][0]) / 2 : points[0][0];\n\t        }\n\t        // show labels regardless of the domain if value is null\n\t        if (d.value === null) {\n\t            if (xPos > $$.width) {\n\t                xPos = $$.width - box.width;\n\t            } else if (xPos < 0) {\n\t                xPos = 4;\n\t            }\n\t        }\n\t        return xPos;\n\t    };\n\t    c3_chart_internal_fn.getYForText = function (points, d, textElement) {\n\t        var $$ = this,\n\t            box = textElement.getBoundingClientRect(),\n\t            yPos;\n\t        if ($$.config.axis_rotated) {\n\t            yPos = (points[0][0] + points[2][0] + box.height * 0.6) / 2;\n\t        } else {\n\t            yPos = points[2][1];\n\t            if (d.value < 0  || (d.value === 0 && !$$.hasPositiveValue)) {\n\t                yPos += box.height;\n\t                if ($$.isBarType(d) && $$.isSafari()) {\n\t                    yPos -= 3;\n\t                }\n\t                else if (!$$.isBarType(d) && $$.isChrome()) {\n\t                    yPos += 3;\n\t                }\n\t            } else {\n\t                yPos += $$.isBarType(d) ? -3 : -6;\n\t            }\n\t        }\n\t        // show labels regardless of the domain if value is null\n\t        if (d.value === null && !$$.config.axis_rotated) {\n\t            if (yPos < box.height) {\n\t                yPos = box.height;\n\t            } else if (yPos > this.height) {\n\t                yPos = this.height - 4;\n\t            }\n\t        }\n\t        return yPos;\n\t    };\n\t\n\t    c3_chart_internal_fn.setTargetType = function (targetIds, type) {\n\t        var $$ = this, config = $$.config;\n\t        $$.mapToTargetIds(targetIds).forEach(function (id) {\n\t            $$.withoutFadeIn[id] = (type === config.data_types[id]);\n\t            config.data_types[id] = type;\n\t        });\n\t        if (!targetIds) {\n\t            config.data_type = type;\n\t        }\n\t    };\n\t    c3_chart_internal_fn.hasType = function (type, targets) {\n\t        var $$ = this, types = $$.config.data_types, has = false;\n\t        targets = targets || $$.data.targets;\n\t        if (targets && targets.length) {\n\t            targets.forEach(function (target) {\n\t                var t = types[target.id];\n\t                if ((t && t.indexOf(type) >= 0) || (!t && type === 'line')) {\n\t                    has = true;\n\t                }\n\t            });\n\t        } else if (Object.keys(types).length) {\n\t            Object.keys(types).forEach(function (id) {\n\t                if (types[id] === type) { has = true; }\n\t            });\n\t        } else {\n\t            has = $$.config.data_type === type;\n\t        }\n\t        return has;\n\t    };\n\t    c3_chart_internal_fn.hasArcType = function (targets) {\n\t        return this.hasType('pie', targets) || this.hasType('donut', targets) || this.hasType('gauge', targets);\n\t    };\n\t    c3_chart_internal_fn.isLineType = function (d) {\n\t        var config = this.config, id = isString(d) ? d : d.id;\n\t        return !config.data_types[id] || ['line', 'spline', 'area', 'area-spline', 'step', 'area-step'].indexOf(config.data_types[id]) >= 0;\n\t    };\n\t    c3_chart_internal_fn.isStepType = function (d) {\n\t        var id = isString(d) ? d : d.id;\n\t        return ['step', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n\t    };\n\t    c3_chart_internal_fn.isSplineType = function (d) {\n\t        var id = isString(d) ? d : d.id;\n\t        return ['spline', 'area-spline'].indexOf(this.config.data_types[id]) >= 0;\n\t    };\n\t    c3_chart_internal_fn.isAreaType = function (d) {\n\t        var id = isString(d) ? d : d.id;\n\t        return ['area', 'area-spline', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n\t    };\n\t    c3_chart_internal_fn.isBarType = function (d) {\n\t        var id = isString(d) ? d : d.id;\n\t        return this.config.data_types[id] === 'bar';\n\t    };\n\t    c3_chart_internal_fn.isScatterType = function (d) {\n\t        var id = isString(d) ? d : d.id;\n\t        return this.config.data_types[id] === 'scatter';\n\t    };\n\t    c3_chart_internal_fn.isPieType = function (d) {\n\t        var id = isString(d) ? d : d.id;\n\t        return this.config.data_types[id] === 'pie';\n\t    };\n\t    c3_chart_internal_fn.isGaugeType = function (d) {\n\t        var id = isString(d) ? d : d.id;\n\t        return this.config.data_types[id] === 'gauge';\n\t    };\n\t    c3_chart_internal_fn.isDonutType = function (d) {\n\t        var id = isString(d) ? d : d.id;\n\t        return this.config.data_types[id] === 'donut';\n\t    };\n\t    c3_chart_internal_fn.isArcType = function (d) {\n\t        return this.isPieType(d) || this.isDonutType(d) || this.isGaugeType(d);\n\t    };\n\t    c3_chart_internal_fn.lineData = function (d) {\n\t        return this.isLineType(d) ? [d] : [];\n\t    };\n\t    c3_chart_internal_fn.arcData = function (d) {\n\t        return this.isArcType(d.data) ? [d] : [];\n\t    };\n\t    /* not used\n\t     function scatterData(d) {\n\t     return isScatterType(d) ? d.values : [];\n\t     }\n\t     */\n\t    c3_chart_internal_fn.barData = function (d) {\n\t        return this.isBarType(d) ? d.values : [];\n\t    };\n\t    c3_chart_internal_fn.lineOrScatterData = function (d) {\n\t        return this.isLineType(d) || this.isScatterType(d) ? d.values : [];\n\t    };\n\t    c3_chart_internal_fn.barOrLineData = function (d) {\n\t        return this.isBarType(d) || this.isLineType(d) ? d.values : [];\n\t    };\n\t    c3_chart_internal_fn.isInterpolationType = function (type) {\n\t        return ['linear', 'linear-closed', 'basis', 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', 'monotone'].indexOf(type) >= 0;\n\t    };\n\t\n\t    c3_chart_internal_fn.initGrid = function () {\n\t        var $$ = this, config = $$.config, d3 = $$.d3;\n\t        $$.grid = $$.main.append('g')\n\t            .attr(\"clip-path\", $$.clipPathForGrid)\n\t            .attr('class', CLASS.grid);\n\t        if (config.grid_x_show) {\n\t            $$.grid.append(\"g\").attr(\"class\", CLASS.xgrids);\n\t        }\n\t        if (config.grid_y_show) {\n\t            $$.grid.append('g').attr('class', CLASS.ygrids);\n\t        }\n\t        if (config.grid_focus_show) {\n\t            $$.grid.append('g')\n\t                .attr(\"class\", CLASS.xgridFocus)\n\t                .append('line')\n\t                .attr('class', CLASS.xgridFocus);\n\t        }\n\t        $$.xgrid = d3.selectAll([]);\n\t        if (!config.grid_lines_front) { $$.initGridLines(); }\n\t    };\n\t    c3_chart_internal_fn.initGridLines = function () {\n\t        var $$ = this, d3 = $$.d3;\n\t        $$.gridLines = $$.main.append('g')\n\t            .attr(\"clip-path\", $$.clipPathForGrid)\n\t            .attr('class', CLASS.grid + ' ' + CLASS.gridLines);\n\t        $$.gridLines.append('g').attr(\"class\", CLASS.xgridLines);\n\t        $$.gridLines.append('g').attr('class', CLASS.ygridLines);\n\t        $$.xgridLines = d3.selectAll([]);\n\t    };\n\t    c3_chart_internal_fn.updateXGrid = function (withoutUpdate) {\n\t        var $$ = this, config = $$.config, d3 = $$.d3,\n\t            xgridData = $$.generateGridData(config.grid_x_type, $$.x),\n\t            tickOffset = $$.isCategorized() ? $$.xAxis.tickOffset() : 0;\n\t\n\t        $$.xgridAttr = config.axis_rotated ? {\n\t            'x1': 0,\n\t            'x2': $$.width,\n\t            'y1': function (d) { return $$.x(d) - tickOffset; },\n\t            'y2': function (d) { return $$.x(d) - tickOffset; }\n\t        } : {\n\t            'x1': function (d) { return $$.x(d) + tickOffset; },\n\t            'x2': function (d) { return $$.x(d) + tickOffset; },\n\t            'y1': 0,\n\t            'y2': $$.height\n\t        };\n\t\n\t        $$.xgrid = $$.main.select('.' + CLASS.xgrids).selectAll('.' + CLASS.xgrid)\n\t            .data(xgridData);\n\t        $$.xgrid.enter().append('line').attr(\"class\", CLASS.xgrid);\n\t        if (!withoutUpdate) {\n\t            $$.xgrid.attr($$.xgridAttr)\n\t                .style(\"opacity\", function () { return +d3.select(this).attr(config.axis_rotated ? 'y1' : 'x1') === (config.axis_rotated ? $$.height : 0) ? 0 : 1; });\n\t        }\n\t        $$.xgrid.exit().remove();\n\t    };\n\t\n\t    c3_chart_internal_fn.updateYGrid = function () {\n\t        var $$ = this, config = $$.config,\n\t            gridValues = $$.yAxis.tickValues() || $$.y.ticks(config.grid_y_ticks);\n\t        $$.ygrid = $$.main.select('.' + CLASS.ygrids).selectAll('.' + CLASS.ygrid)\n\t            .data(gridValues);\n\t        $$.ygrid.enter().append('line')\n\t            .attr('class', CLASS.ygrid);\n\t        $$.ygrid.attr(\"x1\", config.axis_rotated ? $$.y : 0)\n\t            .attr(\"x2\", config.axis_rotated ? $$.y : $$.width)\n\t            .attr(\"y1\", config.axis_rotated ? 0 : $$.y)\n\t            .attr(\"y2\", config.axis_rotated ? $$.height : $$.y);\n\t        $$.ygrid.exit().remove();\n\t        $$.smoothLines($$.ygrid, 'grid');\n\t    };\n\t\n\t    c3_chart_internal_fn.gridTextAnchor = function (d) {\n\t        return d.position ? d.position : \"end\";\n\t    };\n\t    c3_chart_internal_fn.gridTextDx = function (d) {\n\t        return d.position === 'start' ? 4 : d.position === 'middle' ? 0 : -4;\n\t    };\n\t    c3_chart_internal_fn.xGridTextX = function (d) {\n\t        return d.position === 'start' ? -this.height : d.position === 'middle' ? -this.height / 2 : 0;\n\t    };\n\t    c3_chart_internal_fn.yGridTextX = function (d) {\n\t        return d.position === 'start' ? 0 : d.position === 'middle' ? this.width / 2 : this.width;\n\t    };\n\t    c3_chart_internal_fn.updateGrid = function (duration) {\n\t        var $$ = this, main = $$.main, config = $$.config,\n\t            xgridLine, ygridLine, yv;\n\t\n\t        // hide if arc type\n\t        $$.grid.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\t\n\t        main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n\t        if (config.grid_x_show) {\n\t            $$.updateXGrid();\n\t        }\n\t        $$.xgridLines = main.select('.' + CLASS.xgridLines).selectAll('.' + CLASS.xgridLine)\n\t            .data(config.grid_x_lines);\n\t        // enter\n\t        xgridLine = $$.xgridLines.enter().append('g')\n\t            .attr(\"class\", function (d) { return CLASS.xgridLine + (d['class'] ? ' ' + d['class'] : ''); });\n\t        xgridLine.append('line')\n\t            .style(\"opacity\", 0);\n\t        xgridLine.append('text')\n\t            .attr(\"text-anchor\", $$.gridTextAnchor)\n\t            .attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\")\n\t            .attr('dx', $$.gridTextDx)\n\t            .attr('dy', -5)\n\t            .style(\"opacity\", 0);\n\t        // udpate\n\t        // done in d3.transition() of the end of this function\n\t        // exit\n\t        $$.xgridLines.exit().transition().duration(duration)\n\t            .style(\"opacity\", 0)\n\t            .remove();\n\t\n\t        // Y-Grid\n\t        if (config.grid_y_show) {\n\t            $$.updateYGrid();\n\t        }\n\t        $$.ygridLines = main.select('.' + CLASS.ygridLines).selectAll('.' + CLASS.ygridLine)\n\t            .data(config.grid_y_lines);\n\t        // enter\n\t        ygridLine = $$.ygridLines.enter().append('g')\n\t            .attr(\"class\", function (d) { return CLASS.ygridLine + (d['class'] ? ' ' + d['class'] : ''); });\n\t        ygridLine.append('line')\n\t            .style(\"opacity\", 0);\n\t        ygridLine.append('text')\n\t            .attr(\"text-anchor\", $$.gridTextAnchor)\n\t            .attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\")\n\t            .attr('dx', $$.gridTextDx)\n\t            .attr('dy', -5)\n\t            .style(\"opacity\", 0);\n\t        // update\n\t        yv = $$.yv.bind($$);\n\t        $$.ygridLines.select('line')\n\t          .transition().duration(duration)\n\t            .attr(\"x1\", config.axis_rotated ? yv : 0)\n\t            .attr(\"x2\", config.axis_rotated ? yv : $$.width)\n\t            .attr(\"y1\", config.axis_rotated ? 0 : yv)\n\t            .attr(\"y2\", config.axis_rotated ? $$.height : yv)\n\t            .style(\"opacity\", 1);\n\t        $$.ygridLines.select('text')\n\t          .transition().duration(duration)\n\t            .attr(\"x\", config.axis_rotated ? $$.xGridTextX.bind($$) : $$.yGridTextX.bind($$))\n\t            .attr(\"y\", yv)\n\t            .text(function (d) { return d.text; })\n\t            .style(\"opacity\", 1);\n\t        // exit\n\t        $$.ygridLines.exit().transition().duration(duration)\n\t            .style(\"opacity\", 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.redrawGrid = function (withTransition) {\n\t        var $$ = this, config = $$.config, xv = $$.xv.bind($$),\n\t            lines = $$.xgridLines.select('line'),\n\t            texts = $$.xgridLines.select('text');\n\t        return [\n\t            (withTransition ? lines.transition() : lines)\n\t                .attr(\"x1\", config.axis_rotated ? 0 : xv)\n\t                .attr(\"x2\", config.axis_rotated ? $$.width : xv)\n\t                .attr(\"y1\", config.axis_rotated ? xv : 0)\n\t                .attr(\"y2\", config.axis_rotated ? xv : $$.height)\n\t                .style(\"opacity\", 1),\n\t            (withTransition ? texts.transition() : texts)\n\t                .attr(\"x\", config.axis_rotated ? $$.yGridTextX.bind($$) : $$.xGridTextX.bind($$))\n\t                .attr(\"y\", xv)\n\t                .text(function (d) { return d.text; })\n\t                .style(\"opacity\", 1)\n\t        ];\n\t    };\n\t    c3_chart_internal_fn.showXGridFocus = function (selectedData) {\n\t        var $$ = this, config = $$.config,\n\t            dataToShow = selectedData.filter(function (d) { return d && isValue(d.value); }),\n\t            focusEl = $$.main.selectAll('line.' + CLASS.xgridFocus),\n\t            xx = $$.xx.bind($$);\n\t        if (! config.tooltip_show) { return; }\n\t        // Hide when scatter plot exists\n\t        if ($$.hasType('scatter') || $$.hasArcType()) { return; }\n\t        focusEl\n\t            .style(\"visibility\", \"visible\")\n\t            .data([dataToShow[0]])\n\t            .attr(config.axis_rotated ? 'y1' : 'x1', xx)\n\t            .attr(config.axis_rotated ? 'y2' : 'x2', xx);\n\t        $$.smoothLines(focusEl, 'grid');\n\t    };\n\t    c3_chart_internal_fn.hideXGridFocus = function () {\n\t        this.main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n\t    };\n\t    c3_chart_internal_fn.updateXgridFocus = function () {\n\t        var $$ = this, config = $$.config;\n\t        $$.main.select('line.' + CLASS.xgridFocus)\n\t            .attr(\"x1\", config.axis_rotated ? 0 : -10)\n\t            .attr(\"x2\", config.axis_rotated ? $$.width : -10)\n\t            .attr(\"y1\", config.axis_rotated ? -10 : 0)\n\t            .attr(\"y2\", config.axis_rotated ? -10 : $$.height);\n\t    };\n\t    c3_chart_internal_fn.generateGridData = function (type, scale) {\n\t        var $$ = this,\n\t            gridData = [], xDomain, firstYear, lastYear, i,\n\t            tickNum = $$.main.select(\".\" + CLASS.axisX).selectAll('.tick').size();\n\t        if (type === 'year') {\n\t            xDomain = $$.getXDomain();\n\t            firstYear = xDomain[0].getFullYear();\n\t            lastYear = xDomain[1].getFullYear();\n\t            for (i = firstYear; i <= lastYear; i++) {\n\t                gridData.push(new Date(i + '-01-01 00:00:00'));\n\t            }\n\t        } else {\n\t            gridData = scale.ticks(10);\n\t            if (gridData.length > tickNum) { // use only int\n\t                gridData = gridData.filter(function (d) { return (\"\" + d).indexOf('.') < 0; });\n\t            }\n\t        }\n\t        return gridData;\n\t    };\n\t    c3_chart_internal_fn.getGridFilterToRemove = function (params) {\n\t        return params ? function (line) {\n\t            var found = false;\n\t            [].concat(params).forEach(function (param) {\n\t                if ((('value' in param && line.value === param.value) || ('class' in param && line['class'] === param['class']))) {\n\t                    found = true;\n\t                }\n\t            });\n\t            return found;\n\t        } : function () { return true; };\n\t    };\n\t    c3_chart_internal_fn.removeGridLines = function (params, forX) {\n\t        var $$ = this, config = $$.config,\n\t            toRemove = $$.getGridFilterToRemove(params),\n\t            toShow = function (line) { return !toRemove(line); },\n\t            classLines = forX ? CLASS.xgridLines : CLASS.ygridLines,\n\t            classLine = forX ? CLASS.xgridLine : CLASS.ygridLine;\n\t        $$.main.select('.' + classLines).selectAll('.' + classLine).filter(toRemove)\n\t            .transition().duration(config.transition_duration)\n\t            .style('opacity', 0).remove();\n\t        if (forX) {\n\t            config.grid_x_lines = config.grid_x_lines.filter(toShow);\n\t        } else {\n\t            config.grid_y_lines = config.grid_y_lines.filter(toShow);\n\t        }\n\t    };\n\t\n\t    c3_chart_internal_fn.initTooltip = function () {\n\t        var $$ = this, config = $$.config, i;\n\t        $$.tooltip = $$.selectChart\n\t            .style(\"position\", \"relative\")\n\t          .append(\"div\")\n\t            .attr('class', CLASS.tooltipContainer)\n\t            .style(\"position\", \"absolute\")\n\t            .style(\"pointer-events\", \"none\")\n\t            .style(\"display\", \"none\");\n\t        // Show tooltip if needed\n\t        if (config.tooltip_init_show) {\n\t            if ($$.isTimeSeries() && isString(config.tooltip_init_x)) {\n\t                config.tooltip_init_x = $$.parseDate(config.tooltip_init_x);\n\t                for (i = 0; i < $$.data.targets[0].values.length; i++) {\n\t                    if (($$.data.targets[0].values[i].x - config.tooltip_init_x) === 0) { break; }\n\t                }\n\t                config.tooltip_init_x = i;\n\t            }\n\t            $$.tooltip.html(config.tooltip_contents.call($$, $$.data.targets.map(function (d) {\n\t                return $$.addName(d.values[config.tooltip_init_x]);\n\t            }), $$.axis.getXAxisTickFormat(), $$.getYFormat($$.hasArcType()), $$.color));\n\t            $$.tooltip.style(\"top\", config.tooltip_init_position.top)\n\t                .style(\"left\", config.tooltip_init_position.left)\n\t                .style(\"display\", \"block\");\n\t        }\n\t    };\n\t    c3_chart_internal_fn.getTooltipContent = function (d, defaultTitleFormat, defaultValueFormat, color) {\n\t        var $$ = this, config = $$.config,\n\t            titleFormat = config.tooltip_format_title || defaultTitleFormat,\n\t            nameFormat = config.tooltip_format_name || function (name) { return name; },\n\t            valueFormat = config.tooltip_format_value || defaultValueFormat,\n\t            text, i, title, value, name, bgcolor,\n\t            orderAsc = $$.isOrderAsc();\n\t\n\t        if (config.data_groups.length === 0) {\n\t            d.sort(function(a, b){\n\t                var v1 = a ? a.value : null, v2 = b ? b.value : null;\n\t                return orderAsc ? v1 - v2 : v2 - v1;\n\t            });\n\t        } else {\n\t            var ids = $$.orderTargets($$.data.targets).map(function (i) {\n\t                return i.id;\n\t            });\n\t            d.sort(function(a, b) {\n\t                var v1 = a ? a.value : null, v2 = b ? b.value : null;\n\t                if (v1 > 0 && v2 > 0) {\n\t                    v1 = a ? ids.indexOf(a.id) : null;\n\t                    v2 = b ? ids.indexOf(b.id) : null;\n\t                }\n\t                return orderAsc ? v1 - v2 : v2 - v1;\n\t            });\n\t        }\n\t\n\t        for (i = 0; i < d.length; i++) {\n\t            if (! (d[i] && (d[i].value || d[i].value === 0))) { continue; }\n\t\n\t            if (! text) {\n\t                title = sanitise(titleFormat ? titleFormat(d[i].x) : d[i].x);\n\t                text = \"<table class='\" + $$.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + title + \"</th></tr>\" : \"\");\n\t            }\n\t\n\t            value = sanitise(valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index, d));\n\t            if (value !== undefined) {\n\t                // Skip elements when their name is set to null\n\t                if (d[i].name === null) { continue; }\n\t                name = sanitise(nameFormat(d[i].name, d[i].ratio, d[i].id, d[i].index));\n\t                bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);\n\t\n\t                text += \"<tr class='\" + $$.CLASS.tooltipName + \"-\" + $$.getTargetSelectorSuffix(d[i].id) + \"'>\";\n\t                text += \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + name + \"</td>\";\n\t                text += \"<td class='value'>\" + value + \"</td>\";\n\t                text += \"</tr>\";\n\t            }\n\t        }\n\t        return text + \"</table>\";\n\t    };\n\t    c3_chart_internal_fn.tooltipPosition = function (dataToShow, tWidth, tHeight, element) {\n\t        var $$ = this, config = $$.config, d3 = $$.d3;\n\t        var svgLeft, tooltipLeft, tooltipRight, tooltipTop, chartRight;\n\t        var forArc = $$.hasArcType(),\n\t            mouse = d3.mouse(element);\n\t      // Determin tooltip position\n\t        if (forArc) {\n\t            tooltipLeft = (($$.width - ($$.isLegendRight ? $$.getLegendWidth() : 0)) / 2) + mouse[0];\n\t            tooltipTop = ($$.height / 2) + mouse[1] + 20;\n\t        } else {\n\t            svgLeft = $$.getSvgLeft(true);\n\t            if (config.axis_rotated) {\n\t                tooltipLeft = svgLeft + mouse[0] + 100;\n\t                tooltipRight = tooltipLeft + tWidth;\n\t                chartRight = $$.currentWidth - $$.getCurrentPaddingRight();\n\t                tooltipTop = $$.x(dataToShow[0].x) + 20;\n\t            } else {\n\t                tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\n\t                tooltipRight = tooltipLeft + tWidth;\n\t                chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\n\t                tooltipTop = mouse[1] + 15;\n\t            }\n\t\n\t            if (tooltipRight > chartRight) {\n\t                // 20 is needed for Firefox to keep tooltip width\n\t                tooltipLeft -= tooltipRight - chartRight + 20;\n\t            }\n\t            if (tooltipTop + tHeight > $$.currentHeight) {\n\t                tooltipTop -= tHeight + 30;\n\t            }\n\t        }\n\t        if (tooltipTop < 0) {\n\t            tooltipTop = 0;\n\t        }\n\t        return {top: tooltipTop, left: tooltipLeft};\n\t    };\n\t    c3_chart_internal_fn.showTooltip = function (selectedData, element) {\n\t        var $$ = this, config = $$.config;\n\t        var tWidth, tHeight, position;\n\t        var forArc = $$.hasArcType(),\n\t            dataToShow = selectedData.filter(function (d) { return d && isValue(d.value); }),\n\t            positionFunction = config.tooltip_position || c3_chart_internal_fn.tooltipPosition;\n\t        if (dataToShow.length === 0 || !config.tooltip_show) {\n\t            return;\n\t        }\n\t        $$.tooltip.html(config.tooltip_contents.call($$, selectedData, $$.axis.getXAxisTickFormat(), $$.getYFormat(forArc), $$.color)).style(\"display\", \"block\");\n\t\n\t        // Get tooltip dimensions\n\t        tWidth = $$.tooltip.property('offsetWidth');\n\t        tHeight = $$.tooltip.property('offsetHeight');\n\t\n\t        position = positionFunction.call(this, dataToShow, tWidth, tHeight, element);\n\t        // Set tooltip\n\t        $$.tooltip\n\t            .style(\"top\", position.top + \"px\")\n\t            .style(\"left\", position.left + 'px');\n\t    };\n\t    c3_chart_internal_fn.hideTooltip = function () {\n\t        this.tooltip.style(\"display\", \"none\");\n\t    };\n\t\n\t    c3_chart_internal_fn.initLegend = function () {\n\t        var $$ = this;\n\t        $$.legendItemTextBox = {};\n\t        $$.legendHasRendered = false;\n\t        $$.legend = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('legend'));\n\t        if (!$$.config.legend_show) {\n\t            $$.legend.style('visibility', 'hidden');\n\t            $$.hiddenLegendIds = $$.mapToIds($$.data.targets);\n\t            return;\n\t        }\n\t        // MEMO: call here to update legend box and tranlate for all\n\t        // MEMO: translate will be upated by this, so transform not needed in updateLegend()\n\t        $$.updateLegendWithDefaults();\n\t    };\n\t    c3_chart_internal_fn.updateLegendWithDefaults = function () {\n\t        var $$ = this;\n\t        $$.updateLegend($$.mapToIds($$.data.targets), {withTransform: false, withTransitionForTransform: false, withTransition: false});\n\t    };\n\t    c3_chart_internal_fn.updateSizeForLegend = function (legendHeight, legendWidth) {\n\t        var $$ = this, config = $$.config, insetLegendPosition = {\n\t            top: $$.isLegendTop ? $$.getCurrentPaddingTop() + config.legend_inset_y + 5.5 : $$.currentHeight - legendHeight - $$.getCurrentPaddingBottom() - config.legend_inset_y,\n\t            left: $$.isLegendLeft ? $$.getCurrentPaddingLeft() + config.legend_inset_x + 0.5 : $$.currentWidth - legendWidth - $$.getCurrentPaddingRight() - config.legend_inset_x + 0.5\n\t        };\n\t\n\t        $$.margin3 = {\n\t            top: $$.isLegendRight ? 0 : $$.isLegendInset ? insetLegendPosition.top : $$.currentHeight - legendHeight,\n\t            right: NaN,\n\t            bottom: 0,\n\t            left: $$.isLegendRight ? $$.currentWidth - legendWidth : $$.isLegendInset ? insetLegendPosition.left : 0\n\t        };\n\t    };\n\t    c3_chart_internal_fn.transformLegend = function (withTransition) {\n\t        var $$ = this;\n\t        (withTransition ? $$.legend.transition() : $$.legend).attr(\"transform\", $$.getTranslate('legend'));\n\t    };\n\t    c3_chart_internal_fn.updateLegendStep = function (step) {\n\t        this.legendStep = step;\n\t    };\n\t    c3_chart_internal_fn.updateLegendItemWidth = function (w) {\n\t        this.legendItemWidth = w;\n\t    };\n\t    c3_chart_internal_fn.updateLegendItemHeight = function (h) {\n\t        this.legendItemHeight = h;\n\t    };\n\t    c3_chart_internal_fn.getLegendWidth = function () {\n\t        var $$ = this;\n\t        return $$.config.legend_show ? $$.isLegendRight || $$.isLegendInset ? $$.legendItemWidth * ($$.legendStep + 1) : $$.currentWidth : 0;\n\t    };\n\t    c3_chart_internal_fn.getLegendHeight = function () {\n\t        var $$ = this, h = 0;\n\t        if ($$.config.legend_show) {\n\t            if ($$.isLegendRight) {\n\t                h = $$.currentHeight;\n\t            } else {\n\t                h = Math.max(20, $$.legendItemHeight) * ($$.legendStep + 1);\n\t            }\n\t        }\n\t        return h;\n\t    };\n\t    c3_chart_internal_fn.opacityForLegend = function (legendItem) {\n\t        return legendItem.classed(CLASS.legendItemHidden) ? null : 1;\n\t    };\n\t    c3_chart_internal_fn.opacityForUnfocusedLegend = function (legendItem) {\n\t        return legendItem.classed(CLASS.legendItemHidden) ? null : 0.3;\n\t    };\n\t    c3_chart_internal_fn.toggleFocusLegend = function (targetIds, focus) {\n\t        var $$ = this;\n\t        targetIds = $$.mapToTargetIds(targetIds);\n\t        $$.legend.selectAll('.' + CLASS.legendItem)\n\t            .filter(function (id) { return targetIds.indexOf(id) >= 0; })\n\t            .classed(CLASS.legendItemFocused, focus)\n\t          .transition().duration(100)\n\t            .style('opacity', function () {\n\t                var opacity = focus ? $$.opacityForLegend : $$.opacityForUnfocusedLegend;\n\t                return opacity.call($$, $$.d3.select(this));\n\t            });\n\t    };\n\t    c3_chart_internal_fn.revertLegend = function () {\n\t        var $$ = this, d3 = $$.d3;\n\t        $$.legend.selectAll('.' + CLASS.legendItem)\n\t            .classed(CLASS.legendItemFocused, false)\n\t            .transition().duration(100)\n\t            .style('opacity', function () { return $$.opacityForLegend(d3.select(this)); });\n\t    };\n\t    c3_chart_internal_fn.showLegend = function (targetIds) {\n\t        var $$ = this, config = $$.config;\n\t        if (!config.legend_show) {\n\t            config.legend_show = true;\n\t            $$.legend.style('visibility', 'visible');\n\t            if (!$$.legendHasRendered) {\n\t                $$.updateLegendWithDefaults();\n\t            }\n\t        }\n\t        $$.removeHiddenLegendIds(targetIds);\n\t        $$.legend.selectAll($$.selectorLegends(targetIds))\n\t            .style('visibility', 'visible')\n\t            .transition()\n\t            .style('opacity', function () { return $$.opacityForLegend($$.d3.select(this)); });\n\t    };\n\t    c3_chart_internal_fn.hideLegend = function (targetIds) {\n\t        var $$ = this, config = $$.config;\n\t        if (config.legend_show && isEmpty(targetIds)) {\n\t            config.legend_show = false;\n\t            $$.legend.style('visibility', 'hidden');\n\t        }\n\t        $$.addHiddenLegendIds(targetIds);\n\t        $$.legend.selectAll($$.selectorLegends(targetIds))\n\t            .style('opacity', 0)\n\t            .style('visibility', 'hidden');\n\t    };\n\t    c3_chart_internal_fn.clearLegendItemTextBoxCache = function () {\n\t        this.legendItemTextBox = {};\n\t    };\n\t    c3_chart_internal_fn.updateLegend = function (targetIds, options, transitions) {\n\t        var $$ = this, config = $$.config;\n\t        var xForLegend, xForLegendText, xForLegendRect, yForLegend, yForLegendText, yForLegendRect, x1ForLegendTile, x2ForLegendTile, yForLegendTile;\n\t        var paddingTop = 4, paddingRight = 10, maxWidth = 0, maxHeight = 0, posMin = 10, tileWidth = config.legend_item_tile_width + 5;\n\t        var l, totalLength = 0, offsets = {}, widths = {}, heights = {}, margins = [0], steps = {}, step = 0;\n\t        var withTransition, withTransitionForTransform;\n\t        var texts, rects, tiles, background;\n\t\n\t        // Skip elements when their name is set to null\n\t        targetIds = targetIds.filter(function(id) {\n\t            return !isDefined(config.data_names[id]) || config.data_names[id] !== null;\n\t        });\n\t\n\t        options = options || {};\n\t        withTransition = getOption(options, \"withTransition\", true);\n\t        withTransitionForTransform = getOption(options, \"withTransitionForTransform\", true);\n\t\n\t        function getTextBox(textElement, id) {\n\t            if (!$$.legendItemTextBox[id]) {\n\t                $$.legendItemTextBox[id] = $$.getTextRect(textElement.textContent, CLASS.legendItem, textElement);\n\t            }\n\t            return $$.legendItemTextBox[id];\n\t        }\n\t\n\t        function updatePositions(textElement, id, index) {\n\t            var reset = index === 0, isLast = index === targetIds.length - 1,\n\t                box = getTextBox(textElement, id),\n\t                itemWidth = box.width + tileWidth + (isLast && !($$.isLegendRight || $$.isLegendInset) ? 0 : paddingRight) + config.legend_padding,\n\t                itemHeight = box.height + paddingTop,\n\t                itemLength = $$.isLegendRight || $$.isLegendInset ? itemHeight : itemWidth,\n\t                areaLength = $$.isLegendRight || $$.isLegendInset ? $$.getLegendHeight() : $$.getLegendWidth(),\n\t                margin, maxLength;\n\t\n\t            // MEMO: care about condifion of step, totalLength\n\t            function updateValues(id, withoutStep) {\n\t                if (!withoutStep) {\n\t                    margin = (areaLength - totalLength - itemLength) / 2;\n\t                    if (margin < posMin) {\n\t                        margin = (areaLength - itemLength) / 2;\n\t                        totalLength = 0;\n\t                        step++;\n\t                    }\n\t                }\n\t                steps[id] = step;\n\t                margins[step] = $$.isLegendInset ? 10 : margin;\n\t                offsets[id] = totalLength;\n\t                totalLength += itemLength;\n\t            }\n\t\n\t            if (reset) {\n\t                totalLength = 0;\n\t                step = 0;\n\t                maxWidth = 0;\n\t                maxHeight = 0;\n\t            }\n\t\n\t            if (config.legend_show && !$$.isLegendToShow(id)) {\n\t                widths[id] = heights[id] = steps[id] = offsets[id] = 0;\n\t                return;\n\t            }\n\t\n\t            widths[id] = itemWidth;\n\t            heights[id] = itemHeight;\n\t\n\t            if (!maxWidth || itemWidth >= maxWidth) { maxWidth = itemWidth; }\n\t            if (!maxHeight || itemHeight >= maxHeight) { maxHeight = itemHeight; }\n\t            maxLength = $$.isLegendRight || $$.isLegendInset ? maxHeight : maxWidth;\n\t\n\t            if (config.legend_equally) {\n\t                Object.keys(widths).forEach(function (id) { widths[id] = maxWidth; });\n\t                Object.keys(heights).forEach(function (id) { heights[id] = maxHeight; });\n\t                margin = (areaLength - maxLength * targetIds.length) / 2;\n\t                if (margin < posMin) {\n\t                    totalLength = 0;\n\t                    step = 0;\n\t                    targetIds.forEach(function (id) { updateValues(id); });\n\t                }\n\t                else {\n\t                    updateValues(id, true);\n\t                }\n\t            } else {\n\t                updateValues(id);\n\t            }\n\t        }\n\t\n\t        if ($$.isLegendInset) {\n\t            step = config.legend_inset_step ? config.legend_inset_step : targetIds.length;\n\t            $$.updateLegendStep(step);\n\t        }\n\t\n\t        if ($$.isLegendRight) {\n\t            xForLegend = function (id) { return maxWidth * steps[id]; };\n\t            yForLegend = function (id) { return margins[steps[id]] + offsets[id]; };\n\t        } else if ($$.isLegendInset) {\n\t            xForLegend = function (id) { return maxWidth * steps[id] + 10; };\n\t            yForLegend = function (id) { return margins[steps[id]] + offsets[id]; };\n\t        } else {\n\t            xForLegend = function (id) { return margins[steps[id]] + offsets[id]; };\n\t            yForLegend = function (id) { return maxHeight * steps[id]; };\n\t        }\n\t        xForLegendText = function (id, i) { return xForLegend(id, i) + 4 + config.legend_item_tile_width; };\n\t        yForLegendText = function (id, i) { return yForLegend(id, i) + 9; };\n\t        xForLegendRect = function (id, i) { return xForLegend(id, i); };\n\t        yForLegendRect = function (id, i) { return yForLegend(id, i) - 5; };\n\t        x1ForLegendTile = function (id, i) { return xForLegend(id, i) - 2; };\n\t        x2ForLegendTile = function (id, i) { return xForLegend(id, i) - 2 + config.legend_item_tile_width; };\n\t        yForLegendTile = function (id, i) { return yForLegend(id, i) + 4; };\n\t\n\t        // Define g for legend area\n\t        l = $$.legend.selectAll('.' + CLASS.legendItem)\n\t            .data(targetIds)\n\t            .enter().append('g')\n\t            .attr('class', function (id) { return $$.generateClass(CLASS.legendItem, id); })\n\t            .style('visibility', function (id) { return $$.isLegendToShow(id) ? 'visible' : 'hidden'; })\n\t            .style('cursor', 'pointer')\n\t            .on('click', function (id) {\n\t                if (config.legend_item_onclick) {\n\t                    config.legend_item_onclick.call($$, id);\n\t                } else {\n\t                    if ($$.d3.event.altKey) {\n\t                        $$.api.hide();\n\t                        $$.api.show(id);\n\t                    } else {\n\t                        $$.api.toggle(id);\n\t                        $$.isTargetToShow(id) ? $$.api.focus(id) : $$.api.revert();\n\t                    }\n\t                }\n\t            })\n\t            .on('mouseover', function (id) {\n\t                if (config.legend_item_onmouseover) {\n\t                    config.legend_item_onmouseover.call($$, id);\n\t                }\n\t                else {\n\t                    $$.d3.select(this).classed(CLASS.legendItemFocused, true);\n\t                    if (!$$.transiting && $$.isTargetToShow(id)) {\n\t                        $$.api.focus(id);\n\t                    }\n\t                }\n\t            })\n\t            .on('mouseout', function (id) {\n\t                if (config.legend_item_onmouseout) {\n\t                    config.legend_item_onmouseout.call($$, id);\n\t                }\n\t                else {\n\t                    $$.d3.select(this).classed(CLASS.legendItemFocused, false);\n\t                    $$.api.revert();\n\t                }\n\t            });\n\t        l.append('text')\n\t            .text(function (id) { return isDefined(config.data_names[id]) ? config.data_names[id] : id; })\n\t            .each(function (id, i) { updatePositions(this, id, i); })\n\t            .style(\"pointer-events\", \"none\")\n\t            .attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendText : -200)\n\t            .attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendText);\n\t        l.append('rect')\n\t            .attr(\"class\", CLASS.legendItemEvent)\n\t            .style('fill-opacity', 0)\n\t            .attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendRect : -200)\n\t            .attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendRect);\n\t        l.append('line')\n\t            .attr('class', CLASS.legendItemTile)\n\t            .style('stroke', $$.color)\n\t            .style(\"pointer-events\", \"none\")\n\t            .attr('x1', $$.isLegendRight || $$.isLegendInset ? x1ForLegendTile : -200)\n\t            .attr('y1', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile)\n\t            .attr('x2', $$.isLegendRight || $$.isLegendInset ? x2ForLegendTile : -200)\n\t            .attr('y2', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile)\n\t            .attr('stroke-width', config.legend_item_tile_height);\n\t\n\t        // Set background for inset legend\n\t        background = $$.legend.select('.' + CLASS.legendBackground + ' rect');\n\t        if ($$.isLegendInset && maxWidth > 0 && background.size() === 0) {\n\t            background = $$.legend.insert('g', '.' + CLASS.legendItem)\n\t                .attr(\"class\", CLASS.legendBackground)\n\t                .append('rect');\n\t        }\n\t\n\t        texts = $$.legend.selectAll('text')\n\t            .data(targetIds)\n\t            .text(function (id) { return isDefined(config.data_names[id]) ? config.data_names[id] : id; }) // MEMO: needed for update\n\t            .each(function (id, i) { updatePositions(this, id, i); });\n\t        (withTransition ? texts.transition() : texts)\n\t            .attr('x', xForLegendText)\n\t            .attr('y', yForLegendText);\n\t\n\t        rects = $$.legend.selectAll('rect.' + CLASS.legendItemEvent)\n\t            .data(targetIds);\n\t        (withTransition ? rects.transition() : rects)\n\t            .attr('width', function (id) { return widths[id]; })\n\t            .attr('height', function (id) { return heights[id]; })\n\t            .attr('x', xForLegendRect)\n\t            .attr('y', yForLegendRect);\n\t\n\t        tiles = $$.legend.selectAll('line.' + CLASS.legendItemTile)\n\t                .data(targetIds);\n\t            (withTransition ? tiles.transition() : tiles)\n\t                .style('stroke', $$.color)\n\t                .attr('x1', x1ForLegendTile)\n\t                .attr('y1', yForLegendTile)\n\t                .attr('x2', x2ForLegendTile)\n\t                .attr('y2', yForLegendTile);\n\t\n\t        if (background) {\n\t            (withTransition ? background.transition() : background)\n\t                .attr('height', $$.getLegendHeight() - 12)\n\t                .attr('width', maxWidth * (step + 1) + 10);\n\t        }\n\t\n\t        // toggle legend state\n\t        $$.legend.selectAll('.' + CLASS.legendItem)\n\t            .classed(CLASS.legendItemHidden, function (id) { return !$$.isTargetToShow(id); });\n\t\n\t        // Update all to reflect change of legend\n\t        $$.updateLegendItemWidth(maxWidth);\n\t        $$.updateLegendItemHeight(maxHeight);\n\t        $$.updateLegendStep(step);\n\t        // Update size and scale\n\t        $$.updateSizes();\n\t        $$.updateScales();\n\t        $$.updateSvgSize();\n\t        // Update g positions\n\t        $$.transformAll(withTransitionForTransform, transitions);\n\t        $$.legendHasRendered = true;\n\t    };\n\t\n\t    c3_chart_internal_fn.initTitle = function () {\n\t        var $$ = this;\n\t        $$.title = $$.svg.append(\"text\")\n\t              .text($$.config.title_text)\n\t              .attr(\"class\", $$.CLASS.title);\n\t    };\n\t    c3_chart_internal_fn.redrawTitle = function () {\n\t        var $$ = this;\n\t        $$.title\n\t              .attr(\"x\", $$.xForTitle.bind($$))\n\t              .attr(\"y\", $$.yForTitle.bind($$));\n\t    };\n\t    c3_chart_internal_fn.xForTitle = function () {\n\t        var $$ = this, config = $$.config, position = config.title_position || 'left', x;\n\t        if (position.indexOf('right') >= 0) {\n\t            x = $$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width - config.title_padding.right;\n\t        } else if (position.indexOf('center') >= 0) {\n\t            x = ($$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width) / 2;\n\t        } else { // left\n\t            x = config.title_padding.left;\n\t        }\n\t        return x;\n\t    };\n\t    c3_chart_internal_fn.yForTitle = function () {\n\t        var $$ = this;\n\t        return $$.config.title_padding.top + $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).height;\n\t    };\n\t    c3_chart_internal_fn.getTitlePadding = function() {\n\t        var $$ = this;\n\t        return $$.yForTitle() + $$.config.title_padding.bottom;\n\t    };\n\t\n\t    function Axis(owner) {\n\t        API.call(this, owner);\n\t    }\n\t\n\t    inherit(API, Axis);\n\t\n\t    Axis.prototype.init = function init() {\n\t\n\t        var $$ = this.owner, config = $$.config, main = $$.main;\n\t        $$.axes.x = main.append(\"g\")\n\t            .attr(\"class\", CLASS.axis + ' ' + CLASS.axisX)\n\t            .attr(\"clip-path\", $$.clipPathForXAxis)\n\t            .attr(\"transform\", $$.getTranslate('x'))\n\t            .style(\"visibility\", config.axis_x_show ? 'visible' : 'hidden');\n\t        $$.axes.x.append(\"text\")\n\t            .attr(\"class\", CLASS.axisXLabel)\n\t            .attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\")\n\t            .style(\"text-anchor\", this.textAnchorForXAxisLabel.bind(this));\n\t        $$.axes.y = main.append(\"g\")\n\t            .attr(\"class\", CLASS.axis + ' ' + CLASS.axisY)\n\t            .attr(\"clip-path\", config.axis_y_inner ? \"\" : $$.clipPathForYAxis)\n\t            .attr(\"transform\", $$.getTranslate('y'))\n\t            .style(\"visibility\", config.axis_y_show ? 'visible' : 'hidden');\n\t        $$.axes.y.append(\"text\")\n\t            .attr(\"class\", CLASS.axisYLabel)\n\t            .attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\")\n\t            .style(\"text-anchor\", this.textAnchorForYAxisLabel.bind(this));\n\t\n\t        $$.axes.y2 = main.append(\"g\")\n\t            .attr(\"class\", CLASS.axis + ' ' + CLASS.axisY2)\n\t            // clip-path?\n\t            .attr(\"transform\", $$.getTranslate('y2'))\n\t            .style(\"visibility\", config.axis_y2_show ? 'visible' : 'hidden');\n\t        $$.axes.y2.append(\"text\")\n\t            .attr(\"class\", CLASS.axisY2Label)\n\t            .attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\")\n\t            .style(\"text-anchor\", this.textAnchorForY2AxisLabel.bind(this));\n\t    };\n\t    Axis.prototype.getXAxis = function getXAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n\t        var $$ = this.owner, config = $$.config,\n\t            axisParams = {\n\t                isCategory: $$.isCategorized(),\n\t                withOuterTick: withOuterTick,\n\t                tickMultiline: config.axis_x_tick_multiline,\n\t                tickWidth: config.axis_x_tick_width,\n\t                tickTextRotate: withoutRotateTickText ? 0 : config.axis_x_tick_rotate,\n\t                withoutTransition: withoutTransition,\n\t            },\n\t            axis = c3_axis($$.d3, axisParams).scale(scale).orient(orient);\n\t\n\t        if ($$.isTimeSeries() && tickValues && typeof tickValues !== \"function\") {\n\t            tickValues = tickValues.map(function (v) { return $$.parseDate(v); });\n\t        }\n\t\n\t        // Set tick\n\t        axis.tickFormat(tickFormat).tickValues(tickValues);\n\t        if ($$.isCategorized()) {\n\t            axis.tickCentered(config.axis_x_tick_centered);\n\t            if (isEmpty(config.axis_x_tick_culling)) {\n\t                config.axis_x_tick_culling = false;\n\t            }\n\t        }\n\t\n\t        return axis;\n\t    };\n\t    Axis.prototype.updateXAxisTickValues = function updateXAxisTickValues(targets, axis) {\n\t        var $$ = this.owner, config = $$.config, tickValues;\n\t        if (config.axis_x_tick_fit || config.axis_x_tick_count) {\n\t            tickValues = this.generateTickValues($$.mapTargetsToUniqueXs(targets), config.axis_x_tick_count, $$.isTimeSeries());\n\t        }\n\t        if (axis) {\n\t            axis.tickValues(tickValues);\n\t        } else {\n\t            $$.xAxis.tickValues(tickValues);\n\t            $$.subXAxis.tickValues(tickValues);\n\t        }\n\t        return tickValues;\n\t    };\n\t    Axis.prototype.getYAxis = function getYAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n\t        var $$ = this.owner, config = $$.config,\n\t            axisParams = {\n\t                withOuterTick: withOuterTick,\n\t                withoutTransition: withoutTransition,\n\t                tickTextRotate: withoutRotateTickText ? 0 : config.axis_y_tick_rotate\n\t            },\n\t            axis = c3_axis($$.d3, axisParams).scale(scale).orient(orient).tickFormat(tickFormat);\n\t        if ($$.isTimeSeriesY()) {\n\t            axis.ticks($$.d3.time[config.axis_y_tick_time_value], config.axis_y_tick_time_interval);\n\t        } else {\n\t            axis.tickValues(tickValues);\n\t        }\n\t        return axis;\n\t    };\n\t    Axis.prototype.getId = function getId(id) {\n\t        var config = this.owner.config;\n\t        return id in config.data_axes ? config.data_axes[id] : 'y';\n\t    };\n\t    Axis.prototype.getXAxisTickFormat = function getXAxisTickFormat() {\n\t        var $$ = this.owner, config = $$.config,\n\t            format = $$.isTimeSeries() ? $$.defaultAxisTimeFormat : $$.isCategorized() ? $$.categoryName : function (v) { return v < 0 ? v.toFixed(0) : v; };\n\t        if (config.axis_x_tick_format) {\n\t            if (isFunction(config.axis_x_tick_format)) {\n\t                format = config.axis_x_tick_format;\n\t            } else if ($$.isTimeSeries()) {\n\t                format = function (date) {\n\t                    return date ? $$.axisTimeFormat(config.axis_x_tick_format)(date) : \"\";\n\t                };\n\t            }\n\t        }\n\t        return isFunction(format) ? function (v) { return format.call($$, v); } : format;\n\t    };\n\t    Axis.prototype.getTickValues = function getTickValues(tickValues, axis) {\n\t        return tickValues ? tickValues : axis ? axis.tickValues() : undefined;\n\t    };\n\t    Axis.prototype.getXAxisTickValues = function getXAxisTickValues() {\n\t        return this.getTickValues(this.owner.config.axis_x_tick_values, this.owner.xAxis);\n\t    };\n\t    Axis.prototype.getYAxisTickValues = function getYAxisTickValues() {\n\t        return this.getTickValues(this.owner.config.axis_y_tick_values, this.owner.yAxis);\n\t    };\n\t    Axis.prototype.getY2AxisTickValues = function getY2AxisTickValues() {\n\t        return this.getTickValues(this.owner.config.axis_y2_tick_values, this.owner.y2Axis);\n\t    };\n\t    Axis.prototype.getLabelOptionByAxisId = function getLabelOptionByAxisId(axisId) {\n\t        var $$ = this.owner, config = $$.config, option;\n\t        if (axisId === 'y') {\n\t            option = config.axis_y_label;\n\t        } else if (axisId === 'y2') {\n\t            option = config.axis_y2_label;\n\t        } else if (axisId === 'x') {\n\t            option = config.axis_x_label;\n\t        }\n\t        return option;\n\t    };\n\t    Axis.prototype.getLabelText = function getLabelText(axisId) {\n\t        var option = this.getLabelOptionByAxisId(axisId);\n\t        return isString(option) ? option : option ? option.text : null;\n\t    };\n\t    Axis.prototype.setLabelText = function setLabelText(axisId, text) {\n\t        var $$ = this.owner, config = $$.config,\n\t            option = this.getLabelOptionByAxisId(axisId);\n\t        if (isString(option)) {\n\t            if (axisId === 'y') {\n\t                config.axis_y_label = text;\n\t            } else if (axisId === 'y2') {\n\t                config.axis_y2_label = text;\n\t            } else if (axisId === 'x') {\n\t                config.axis_x_label = text;\n\t            }\n\t        } else if (option) {\n\t            option.text = text;\n\t        }\n\t    };\n\t    Axis.prototype.getLabelPosition = function getLabelPosition(axisId, defaultPosition) {\n\t        var option = this.getLabelOptionByAxisId(axisId),\n\t            position = (option && typeof option === 'object' && option.position) ? option.position : defaultPosition;\n\t        return {\n\t            isInner: position.indexOf('inner') >= 0,\n\t            isOuter: position.indexOf('outer') >= 0,\n\t            isLeft: position.indexOf('left') >= 0,\n\t            isCenter: position.indexOf('center') >= 0,\n\t            isRight: position.indexOf('right') >= 0,\n\t            isTop: position.indexOf('top') >= 0,\n\t            isMiddle: position.indexOf('middle') >= 0,\n\t            isBottom: position.indexOf('bottom') >= 0\n\t        };\n\t    };\n\t    Axis.prototype.getXAxisLabelPosition = function getXAxisLabelPosition() {\n\t        return this.getLabelPosition('x', this.owner.config.axis_rotated ? 'inner-top' : 'inner-right');\n\t    };\n\t    Axis.prototype.getYAxisLabelPosition = function getYAxisLabelPosition() {\n\t        return this.getLabelPosition('y', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n\t    };\n\t    Axis.prototype.getY2AxisLabelPosition = function getY2AxisLabelPosition() {\n\t        return this.getLabelPosition('y2', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n\t    };\n\t    Axis.prototype.getLabelPositionById = function getLabelPositionById(id) {\n\t        return id === 'y2' ? this.getY2AxisLabelPosition() : id === 'y' ? this.getYAxisLabelPosition() : this.getXAxisLabelPosition();\n\t    };\n\t    Axis.prototype.textForXAxisLabel = function textForXAxisLabel() {\n\t        return this.getLabelText('x');\n\t    };\n\t    Axis.prototype.textForYAxisLabel = function textForYAxisLabel() {\n\t        return this.getLabelText('y');\n\t    };\n\t    Axis.prototype.textForY2AxisLabel = function textForY2AxisLabel() {\n\t        return this.getLabelText('y2');\n\t    };\n\t    Axis.prototype.xForAxisLabel = function xForAxisLabel(forHorizontal, position) {\n\t        var $$ = this.owner;\n\t        if (forHorizontal) {\n\t            return position.isLeft ? 0 : position.isCenter ? $$.width / 2 : $$.width;\n\t        } else {\n\t            return position.isBottom ? -$$.height : position.isMiddle ? -$$.height / 2 : 0;\n\t        }\n\t    };\n\t    Axis.prototype.dxForAxisLabel = function dxForAxisLabel(forHorizontal, position) {\n\t        if (forHorizontal) {\n\t            return position.isLeft ? \"0.5em\" : position.isRight ? \"-0.5em\" : \"0\";\n\t        } else {\n\t            return position.isTop ? \"-0.5em\" : position.isBottom ? \"0.5em\" : \"0\";\n\t        }\n\t    };\n\t    Axis.prototype.textAnchorForAxisLabel = function textAnchorForAxisLabel(forHorizontal, position) {\n\t        if (forHorizontal) {\n\t            return position.isLeft ? 'start' : position.isCenter ? 'middle' : 'end';\n\t        } else {\n\t            return position.isBottom ? 'start' : position.isMiddle ? 'middle' : 'end';\n\t        }\n\t    };\n\t    Axis.prototype.xForXAxisLabel = function xForXAxisLabel() {\n\t        return this.xForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n\t    };\n\t    Axis.prototype.xForYAxisLabel = function xForYAxisLabel() {\n\t        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n\t    };\n\t    Axis.prototype.xForY2AxisLabel = function xForY2AxisLabel() {\n\t        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n\t    };\n\t    Axis.prototype.dxForXAxisLabel = function dxForXAxisLabel() {\n\t        return this.dxForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n\t    };\n\t    Axis.prototype.dxForYAxisLabel = function dxForYAxisLabel() {\n\t        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n\t    };\n\t    Axis.prototype.dxForY2AxisLabel = function dxForY2AxisLabel() {\n\t        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n\t    };\n\t    Axis.prototype.dyForXAxisLabel = function dyForXAxisLabel() {\n\t        var $$ = this.owner, config = $$.config,\n\t            position = this.getXAxisLabelPosition();\n\t        if (config.axis_rotated) {\n\t            return position.isInner ? \"1.2em\" : -25 - this.getMaxTickWidth('x');\n\t        } else {\n\t            return position.isInner ? \"-0.5em\" : config.axis_x_height ? config.axis_x_height - 10 : \"3em\";\n\t        }\n\t    };\n\t    Axis.prototype.dyForYAxisLabel = function dyForYAxisLabel() {\n\t        var $$ = this.owner,\n\t            position = this.getYAxisLabelPosition();\n\t        if ($$.config.axis_rotated) {\n\t            return position.isInner ? \"-0.5em\" : \"3em\";\n\t        } else {\n\t            return position.isInner ? \"1.2em\" : -10 - ($$.config.axis_y_inner ? 0 : (this.getMaxTickWidth('y') + 10));\n\t        }\n\t    };\n\t    Axis.prototype.dyForY2AxisLabel = function dyForY2AxisLabel() {\n\t        var $$ = this.owner,\n\t            position = this.getY2AxisLabelPosition();\n\t        if ($$.config.axis_rotated) {\n\t            return position.isInner ? \"1.2em\" : \"-2.2em\";\n\t        } else {\n\t            return position.isInner ? \"-0.5em\" : 15 + ($$.config.axis_y2_inner ? 0 : (this.getMaxTickWidth('y2') + 15));\n\t        }\n\t    };\n\t    Axis.prototype.textAnchorForXAxisLabel = function textAnchorForXAxisLabel() {\n\t        var $$ = this.owner;\n\t        return this.textAnchorForAxisLabel(!$$.config.axis_rotated, this.getXAxisLabelPosition());\n\t    };\n\t    Axis.prototype.textAnchorForYAxisLabel = function textAnchorForYAxisLabel() {\n\t        var $$ = this.owner;\n\t        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getYAxisLabelPosition());\n\t    };\n\t    Axis.prototype.textAnchorForY2AxisLabel = function textAnchorForY2AxisLabel() {\n\t        var $$ = this.owner;\n\t        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getY2AxisLabelPosition());\n\t    };\n\t    Axis.prototype.getMaxTickWidth = function getMaxTickWidth(id, withoutRecompute) {\n\t        var $$ = this.owner, config = $$.config,\n\t            maxWidth = 0, targetsToShow, scale, axis, dummy, svg;\n\t        if (withoutRecompute && $$.currentMaxTickWidths[id]) {\n\t            return $$.currentMaxTickWidths[id];\n\t        }\n\t        if ($$.svg) {\n\t            targetsToShow = $$.filterTargetsToShow($$.data.targets);\n\t            if (id === 'y') {\n\t                scale = $$.y.copy().domain($$.getYDomain(targetsToShow, 'y'));\n\t                axis = this.getYAxis(scale, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, false, true, true);\n\t            } else if (id === 'y2') {\n\t                scale = $$.y2.copy().domain($$.getYDomain(targetsToShow, 'y2'));\n\t                axis = this.getYAxis(scale, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, false, true, true);\n\t            } else {\n\t                scale = $$.x.copy().domain($$.getXDomain(targetsToShow));\n\t                axis = this.getXAxis(scale, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, false, true, true);\n\t                this.updateXAxisTickValues(targetsToShow, axis);\n\t            }\n\t            dummy = $$.d3.select('body').append('div').classed('c3', true);\n\t            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n\t            svg.append('g').call(axis).each(function () {\n\t                $$.d3.select(this).selectAll('text').each(function () {\n\t                    var box = this.getBoundingClientRect();\n\t                    if (maxWidth < box.width) { maxWidth = box.width; }\n\t                });\n\t                dummy.remove();\n\t            });\n\t        }\n\t        $$.currentMaxTickWidths[id] = maxWidth <= 0 ? $$.currentMaxTickWidths[id] : maxWidth;\n\t        return $$.currentMaxTickWidths[id];\n\t    };\n\t\n\t    Axis.prototype.updateLabels = function updateLabels(withTransition) {\n\t        var $$ = this.owner;\n\t        var axisXLabel = $$.main.select('.' + CLASS.axisX + ' .' + CLASS.axisXLabel),\n\t            axisYLabel = $$.main.select('.' + CLASS.axisY + ' .' + CLASS.axisYLabel),\n\t            axisY2Label = $$.main.select('.' + CLASS.axisY2 + ' .' + CLASS.axisY2Label);\n\t        (withTransition ? axisXLabel.transition() : axisXLabel)\n\t            .attr(\"x\", this.xForXAxisLabel.bind(this))\n\t            .attr(\"dx\", this.dxForXAxisLabel.bind(this))\n\t            .attr(\"dy\", this.dyForXAxisLabel.bind(this))\n\t            .text(this.textForXAxisLabel.bind(this));\n\t        (withTransition ? axisYLabel.transition() : axisYLabel)\n\t            .attr(\"x\", this.xForYAxisLabel.bind(this))\n\t            .attr(\"dx\", this.dxForYAxisLabel.bind(this))\n\t            .attr(\"dy\", this.dyForYAxisLabel.bind(this))\n\t            .text(this.textForYAxisLabel.bind(this));\n\t        (withTransition ? axisY2Label.transition() : axisY2Label)\n\t            .attr(\"x\", this.xForY2AxisLabel.bind(this))\n\t            .attr(\"dx\", this.dxForY2AxisLabel.bind(this))\n\t            .attr(\"dy\", this.dyForY2AxisLabel.bind(this))\n\t            .text(this.textForY2AxisLabel.bind(this));\n\t    };\n\t    Axis.prototype.getPadding = function getPadding(padding, key, defaultValue, domainLength) {\n\t        var p = typeof padding === 'number' ? padding : padding[key];\n\t        if (!isValue(p)) {\n\t            return defaultValue;\n\t        }\n\t        if (padding.unit === 'ratio') {\n\t            return padding[key] * domainLength;\n\t        }\n\t        // assume padding is pixels if unit is not specified\n\t        return this.convertPixelsToAxisPadding(p, domainLength);\n\t    };\n\t    Axis.prototype.convertPixelsToAxisPadding = function convertPixelsToAxisPadding(pixels, domainLength) {\n\t        var $$ = this.owner,\n\t            length = $$.config.axis_rotated ? $$.width : $$.height;\n\t        return domainLength * (pixels / length);\n\t    };\n\t    Axis.prototype.generateTickValues = function generateTickValues(values, tickCount, forTimeSeries) {\n\t        var tickValues = values, targetCount, start, end, count, interval, i, tickValue;\n\t        if (tickCount) {\n\t            targetCount = isFunction(tickCount) ? tickCount() : tickCount;\n\t            // compute ticks according to tickCount\n\t            if (targetCount === 1) {\n\t                tickValues = [values[0]];\n\t            } else if (targetCount === 2) {\n\t                tickValues = [values[0], values[values.length - 1]];\n\t            } else if (targetCount > 2) {\n\t                count = targetCount - 2;\n\t                start = values[0];\n\t                end = values[values.length - 1];\n\t                interval = (end - start) / (count + 1);\n\t                // re-construct unique values\n\t                tickValues = [start];\n\t                for (i = 0; i < count; i++) {\n\t                    tickValue = +start + interval * (i + 1);\n\t                    tickValues.push(forTimeSeries ? new Date(tickValue) : tickValue);\n\t                }\n\t                tickValues.push(end);\n\t            }\n\t        }\n\t        if (!forTimeSeries) { tickValues = tickValues.sort(function (a, b) { return a - b; }); }\n\t        return tickValues;\n\t    };\n\t    Axis.prototype.generateTransitions = function generateTransitions(duration) {\n\t        var $$ = this.owner, axes = $$.axes;\n\t        return {\n\t            axisX: duration ? axes.x.transition().duration(duration) : axes.x,\n\t            axisY: duration ? axes.y.transition().duration(duration) : axes.y,\n\t            axisY2: duration ? axes.y2.transition().duration(duration) : axes.y2,\n\t            axisSubX: duration ? axes.subx.transition().duration(duration) : axes.subx\n\t        };\n\t    };\n\t    Axis.prototype.redraw = function redraw(transitions, isHidden) {\n\t        var $$ = this.owner;\n\t        $$.axes.x.style(\"opacity\", isHidden ? 0 : 1);\n\t        $$.axes.y.style(\"opacity\", isHidden ? 0 : 1);\n\t        $$.axes.y2.style(\"opacity\", isHidden ? 0 : 1);\n\t        $$.axes.subx.style(\"opacity\", isHidden ? 0 : 1);\n\t        transitions.axisX.call($$.xAxis);\n\t        transitions.axisY.call($$.yAxis);\n\t        transitions.axisY2.call($$.y2Axis);\n\t        transitions.axisSubX.call($$.subXAxis);\n\t    };\n\t\n\t    c3_chart_internal_fn.getClipPath = function (id) {\n\t        var isIE9 = window.navigator.appVersion.toLowerCase().indexOf(\"msie 9.\") >= 0;\n\t        return \"url(\" + (isIE9 ? \"\" : document.URL.split('#')[0]) + \"#\" + id + \")\";\n\t    };\n\t    c3_chart_internal_fn.appendClip = function (parent, id) {\n\t        return parent.append(\"clipPath\").attr(\"id\", id).append(\"rect\");\n\t    };\n\t    c3_chart_internal_fn.getAxisClipX = function (forHorizontal) {\n\t        // axis line width + padding for left\n\t        var left = Math.max(30, this.margin.left);\n\t        return forHorizontal ? -(1 + left) : -(left - 1);\n\t    };\n\t    c3_chart_internal_fn.getAxisClipY = function (forHorizontal) {\n\t        return forHorizontal ? -20 : -this.margin.top;\n\t    };\n\t    c3_chart_internal_fn.getXAxisClipX = function () {\n\t        var $$ = this;\n\t        return $$.getAxisClipX(!$$.config.axis_rotated);\n\t    };\n\t    c3_chart_internal_fn.getXAxisClipY = function () {\n\t        var $$ = this;\n\t        return $$.getAxisClipY(!$$.config.axis_rotated);\n\t    };\n\t    c3_chart_internal_fn.getYAxisClipX = function () {\n\t        var $$ = this;\n\t        return $$.config.axis_y_inner ? -1 : $$.getAxisClipX($$.config.axis_rotated);\n\t    };\n\t    c3_chart_internal_fn.getYAxisClipY = function () {\n\t        var $$ = this;\n\t        return $$.getAxisClipY($$.config.axis_rotated);\n\t    };\n\t    c3_chart_internal_fn.getAxisClipWidth = function (forHorizontal) {\n\t        var $$ = this,\n\t            left = Math.max(30, $$.margin.left),\n\t            right = Math.max(30, $$.margin.right);\n\t        // width + axis line width + padding for left/right\n\t        return forHorizontal ? $$.width + 2 + left + right : $$.margin.left + 20;\n\t    };\n\t    c3_chart_internal_fn.getAxisClipHeight = function (forHorizontal) {\n\t        // less than 20 is not enough to show the axis label 'outer' without legend\n\t        return (forHorizontal ? this.margin.bottom : (this.margin.top + this.height)) + 20;\n\t    };\n\t    c3_chart_internal_fn.getXAxisClipWidth = function () {\n\t        var $$ = this;\n\t        return $$.getAxisClipWidth(!$$.config.axis_rotated);\n\t    };\n\t    c3_chart_internal_fn.getXAxisClipHeight = function () {\n\t        var $$ = this;\n\t        return $$.getAxisClipHeight(!$$.config.axis_rotated);\n\t    };\n\t    c3_chart_internal_fn.getYAxisClipWidth = function () {\n\t        var $$ = this;\n\t        return $$.getAxisClipWidth($$.config.axis_rotated) + ($$.config.axis_y_inner ? 20 : 0);\n\t    };\n\t    c3_chart_internal_fn.getYAxisClipHeight = function () {\n\t        var $$ = this;\n\t        return $$.getAxisClipHeight($$.config.axis_rotated);\n\t    };\n\t\n\t    c3_chart_internal_fn.initPie = function () {\n\t        var $$ = this, d3 = $$.d3, config = $$.config;\n\t        $$.pie = d3.layout.pie().value(function (d) {\n\t            return d.values.reduce(function (a, b) { return a + b.value; }, 0);\n\t        });\n\t        if (!config.data_order) {\n\t            $$.pie.sort(null);\n\t        }\n\t    };\n\t\n\t    c3_chart_internal_fn.updateRadius = function () {\n\t        var $$ = this, config = $$.config,\n\t            w = config.gauge_width || config.donut_width;\n\t        $$.radiusExpanded = Math.min($$.arcWidth, $$.arcHeight) / 2;\n\t        $$.radius = $$.radiusExpanded * 0.95;\n\t        $$.innerRadiusRatio = w ? ($$.radius - w) / $$.radius : 0.6;\n\t        $$.innerRadius = $$.hasType('donut') || $$.hasType('gauge') ? $$.radius * $$.innerRadiusRatio : 0;\n\t    };\n\t\n\t    c3_chart_internal_fn.updateArc = function () {\n\t        var $$ = this;\n\t        $$.svgArc = $$.getSvgArc();\n\t        $$.svgArcExpanded = $$.getSvgArcExpanded();\n\t        $$.svgArcExpandedSub = $$.getSvgArcExpanded(0.98);\n\t    };\n\t\n\t    c3_chart_internal_fn.updateAngle = function (d) {\n\t        var $$ = this, config = $$.config,\n\t            found = false, index = 0,\n\t            gMin, gMax, gTic, gValue;\n\t\n\t        if (!config) {\n\t            return null;\n\t        }\n\t\n\t        $$.pie($$.filterTargetsToShow($$.data.targets)).forEach(function (t) {\n\t            if (! found && t.data.id === d.data.id) {\n\t                found = true;\n\t                d = t;\n\t                d.index = index;\n\t            }\n\t            index++;\n\t        });\n\t        if (isNaN(d.startAngle)) {\n\t            d.startAngle = 0;\n\t        }\n\t        if (isNaN(d.endAngle)) {\n\t            d.endAngle = d.startAngle;\n\t        }\n\t        if ($$.isGaugeType(d.data)) {\n\t            gMin = config.gauge_min;\n\t            gMax = config.gauge_max;\n\t            gTic = (Math.PI * (config.gauge_fullCircle ? 2 : 1)) / (gMax - gMin);\n\t            gValue = d.value < gMin ? 0 : d.value < gMax ? d.value - gMin : (gMax - gMin);\n\t            d.startAngle = config.gauge_startingAngle;\n\t            d.endAngle = d.startAngle + gTic * gValue;\n\t        }\n\t        return found ? d : null;\n\t    };\n\t\n\t    c3_chart_internal_fn.getSvgArc = function () {\n\t        var $$ = this,\n\t            arc = $$.d3.svg.arc().outerRadius($$.radius).innerRadius($$.innerRadius),\n\t            newArc = function (d, withoutUpdate) {\n\t                var updated;\n\t                if (withoutUpdate) { return arc(d); } // for interpolate\n\t                updated = $$.updateAngle(d);\n\t                return updated ? arc(updated) : \"M 0 0\";\n\t            };\n\t        // TODO: extends all function\n\t        newArc.centroid = arc.centroid;\n\t        return newArc;\n\t    };\n\t\n\t    c3_chart_internal_fn.getSvgArcExpanded = function (rate) {\n\t        var $$ = this,\n\t            arc = $$.d3.svg.arc().outerRadius($$.radiusExpanded * (rate ? rate : 1)).innerRadius($$.innerRadius);\n\t        return function (d) {\n\t            var updated = $$.updateAngle(d);\n\t            return updated ? arc(updated) : \"M 0 0\";\n\t        };\n\t    };\n\t\n\t    c3_chart_internal_fn.getArc = function (d, withoutUpdate, force) {\n\t        return force || this.isArcType(d.data) ? this.svgArc(d, withoutUpdate) : \"M 0 0\";\n\t    };\n\t\n\t\n\t    c3_chart_internal_fn.transformForArcLabel = function (d) {\n\t        var $$ = this, config = $$.config,\n\t            updated = $$.updateAngle(d), c, x, y, h, ratio, translate = \"\";\n\t        if (updated && !$$.hasType('gauge')) {\n\t            c = this.svgArc.centroid(updated);\n\t            x = isNaN(c[0]) ? 0 : c[0];\n\t            y = isNaN(c[1]) ? 0 : c[1];\n\t            h = Math.sqrt(x * x + y * y);\n\t            if ($$.hasType('donut') && config.donut_label_ratio) {\n\t                ratio = isFunction(config.donut_label_ratio) ? config.donut_label_ratio(d, $$.radius, h) : config.donut_label_ratio;\n\t            } else if ($$.hasType('pie') && config.pie_label_ratio) {\n\t                ratio = isFunction(config.pie_label_ratio) ? config.pie_label_ratio(d, $$.radius, h) : config.pie_label_ratio;\n\t            } else {\n\t                ratio = $$.radius && h ? (36 / $$.radius > 0.375 ? 1.175 - 36 / $$.radius : 0.8) * $$.radius / h : 0;\n\t            }\n\t            translate = \"translate(\" + (x * ratio) +  ',' + (y * ratio) +  \")\";\n\t        }\n\t        return translate;\n\t    };\n\t\n\t    c3_chart_internal_fn.getArcRatio = function (d) {\n\t        var $$ = this,\n\t            config = $$.config,\n\t            whole = Math.PI * ($$.hasType('gauge') && !config.gauge_fullCircle ? 1 : 2);\n\t        return d ? (d.endAngle - d.startAngle) / whole : null;\n\t    };\n\t\n\t    c3_chart_internal_fn.convertToArcData = function (d) {\n\t        return this.addName({\n\t            id: d.data.id,\n\t            value: d.value,\n\t            ratio: this.getArcRatio(d),\n\t            index: d.index\n\t        });\n\t    };\n\t\n\t    c3_chart_internal_fn.textForArcLabel = function (d) {\n\t        var $$ = this,\n\t            updated, value, ratio, id, format;\n\t        if (! $$.shouldShowArcLabel()) { return \"\"; }\n\t        updated = $$.updateAngle(d);\n\t        value = updated ? updated.value : null;\n\t        ratio = $$.getArcRatio(updated);\n\t        id = d.data.id;\n\t        if (! $$.hasType('gauge') && ! $$.meetsArcLabelThreshold(ratio)) { return \"\"; }\n\t        format = $$.getArcLabelFormat();\n\t        return format ? format(value, ratio, id) : $$.defaultArcValueFormat(value, ratio);\n\t    };\n\t\n\t    c3_chart_internal_fn.expandArc = function (targetIds) {\n\t        var $$ = this, interval;\n\t\n\t        // MEMO: avoid to cancel transition\n\t        if ($$.transiting) {\n\t            interval = window.setInterval(function () {\n\t                if (!$$.transiting) {\n\t                    window.clearInterval(interval);\n\t                    if ($$.legend.selectAll('.c3-legend-item-focused').size() > 0) {\n\t                        $$.expandArc(targetIds);\n\t                    }\n\t                }\n\t            }, 10);\n\t            return;\n\t        }\n\t\n\t        targetIds = $$.mapToTargetIds(targetIds);\n\t\n\t        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).each(function (d) {\n\t            if (! $$.shouldExpand(d.data.id)) { return; }\n\t            $$.d3.select(this).selectAll('path')\n\t                .transition().duration($$.expandDuration(d.data.id))\n\t                .attr(\"d\", $$.svgArcExpanded)\n\t                .transition().duration($$.expandDuration(d.data.id) * 2)\n\t                .attr(\"d\", $$.svgArcExpandedSub)\n\t                .each(function (d) {\n\t                    if ($$.isDonutType(d.data)) {\n\t                        // callback here\n\t                    }\n\t                });\n\t        });\n\t    };\n\t\n\t    c3_chart_internal_fn.unexpandArc = function (targetIds) {\n\t        var $$ = this;\n\t\n\t        if ($$.transiting) { return; }\n\t\n\t        targetIds = $$.mapToTargetIds(targetIds);\n\t\n\t        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).selectAll('path')\n\t            .transition().duration(function(d) {\n\t                return $$.expandDuration(d.data.id);\n\t            })\n\t            .attr(\"d\", $$.svgArc);\n\t        $$.svg.selectAll('.' + CLASS.arc)\n\t            .style(\"opacity\", 1);\n\t    };\n\t\n\t    c3_chart_internal_fn.expandDuration = function (id) {\n\t        var $$ = this, config = $$.config;\n\t\n\t        if ($$.isDonutType(id)) {\n\t            return config.donut_expand_duration;\n\t        } else if ($$.isGaugeType(id)) {\n\t            return config.gauge_expand_duration;\n\t        } else if ($$.isPieType(id)) {\n\t            return config.pie_expand_duration;\n\t        } else {\n\t            return 50;\n\t        }\n\t\n\t    };\n\t\n\t    c3_chart_internal_fn.shouldExpand = function (id) {\n\t        var $$ = this, config = $$.config;\n\t        return ($$.isDonutType(id) && config.donut_expand) ||\n\t               ($$.isGaugeType(id) && config.gauge_expand) ||\n\t               ($$.isPieType(id) && config.pie_expand);\n\t    };\n\t\n\t    c3_chart_internal_fn.shouldShowArcLabel = function () {\n\t        var $$ = this, config = $$.config, shouldShow = true;\n\t        if ($$.hasType('donut')) {\n\t            shouldShow = config.donut_label_show;\n\t        } else if ($$.hasType('pie')) {\n\t            shouldShow = config.pie_label_show;\n\t        }\n\t        // when gauge, always true\n\t        return shouldShow;\n\t    };\n\t\n\t    c3_chart_internal_fn.meetsArcLabelThreshold = function (ratio) {\n\t        var $$ = this, config = $$.config,\n\t            threshold = $$.hasType('donut') ? config.donut_label_threshold : config.pie_label_threshold;\n\t        return ratio >= threshold;\n\t    };\n\t\n\t    c3_chart_internal_fn.getArcLabelFormat = function () {\n\t        var $$ = this, config = $$.config,\n\t            format = config.pie_label_format;\n\t        if ($$.hasType('gauge')) {\n\t            format = config.gauge_label_format;\n\t        } else if ($$.hasType('donut')) {\n\t            format = config.donut_label_format;\n\t        }\n\t        return format;\n\t    };\n\t\n\t    c3_chart_internal_fn.getArcTitle = function () {\n\t        var $$ = this;\n\t        return $$.hasType('donut') ? $$.config.donut_title : \"\";\n\t    };\n\t\n\t    c3_chart_internal_fn.updateTargetsForArc = function (targets) {\n\t        var $$ = this, main = $$.main,\n\t            mainPieUpdate, mainPieEnter,\n\t            classChartArc = $$.classChartArc.bind($$),\n\t            classArcs = $$.classArcs.bind($$),\n\t            classFocus = $$.classFocus.bind($$);\n\t        mainPieUpdate = main.select('.' + CLASS.chartArcs).selectAll('.' + CLASS.chartArc)\n\t            .data($$.pie(targets))\n\t            .attr(\"class\", function (d) { return classChartArc(d) + classFocus(d.data); });\n\t        mainPieEnter = mainPieUpdate.enter().append(\"g\")\n\t            .attr(\"class\", classChartArc);\n\t        mainPieEnter.append('g')\n\t            .attr('class', classArcs);\n\t        mainPieEnter.append(\"text\")\n\t            .attr(\"dy\", $$.hasType('gauge') ? \"-.1em\" : \".35em\")\n\t            .style(\"opacity\", 0)\n\t            .style(\"text-anchor\", \"middle\")\n\t            .style(\"pointer-events\", \"none\");\n\t        // MEMO: can not keep same color..., but not bad to update color in redraw\n\t        //mainPieUpdate.exit().remove();\n\t    };\n\t\n\t    c3_chart_internal_fn.initArc = function () {\n\t        var $$ = this;\n\t        $$.arcs = $$.main.select('.' + CLASS.chart).append(\"g\")\n\t            .attr(\"class\", CLASS.chartArcs)\n\t            .attr(\"transform\", $$.getTranslate('arc'));\n\t        $$.arcs.append('text')\n\t            .attr('class', CLASS.chartArcsTitle)\n\t            .style(\"text-anchor\", \"middle\")\n\t            .text($$.getArcTitle());\n\t    };\n\t\n\t    c3_chart_internal_fn.redrawArc = function (duration, durationForExit, withTransform) {\n\t        var $$ = this, d3 = $$.d3, config = $$.config, main = $$.main,\n\t            mainArc;\n\t        mainArc = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arc)\n\t            .data($$.arcData.bind($$));\n\t        mainArc.enter().append('path')\n\t            .attr(\"class\", $$.classArc.bind($$))\n\t            .style(\"fill\", function (d) { return $$.color(d.data); })\n\t            .style(\"cursor\", function (d) { return config.interaction_enabled && config.data_selection_isselectable(d) ? \"pointer\" : null; })\n\t            .style(\"opacity\", 0)\n\t            .each(function (d) {\n\t                if ($$.isGaugeType(d.data)) {\n\t                    d.startAngle = d.endAngle = config.gauge_startingAngle;\n\t                }\n\t                this._current = d;\n\t            });\n\t        mainArc\n\t            .attr(\"transform\", function (d) { return !$$.isGaugeType(d.data) && withTransform ? \"scale(0)\" : \"\"; })\n\t            .style(\"opacity\", function (d) { return d === this._current ? 0 : 1; })\n\t            .on('mouseover', config.interaction_enabled ? function (d) {\n\t                var updated, arcData;\n\t                if ($$.transiting) { // skip while transiting\n\t                    return;\n\t                }\n\t                updated = $$.updateAngle(d);\n\t                if (updated) {\n\t                    arcData = $$.convertToArcData(updated);\n\t                    // transitions\n\t                    $$.expandArc(updated.data.id);\n\t                    $$.api.focus(updated.data.id);\n\t                    $$.toggleFocusLegend(updated.data.id, true);\n\t                    $$.config.data_onmouseover(arcData, this);\n\t                }\n\t            } : null)\n\t            .on('mousemove', config.interaction_enabled ? function (d) {\n\t                var updated = $$.updateAngle(d), arcData, selectedData;\n\t                if (updated) {\n\t                    arcData = $$.convertToArcData(updated),\n\t                    selectedData = [arcData];\n\t                    $$.showTooltip(selectedData, this);\n\t                }\n\t            } : null)\n\t            .on('mouseout', config.interaction_enabled ? function (d) {\n\t                var updated, arcData;\n\t                if ($$.transiting) { // skip while transiting\n\t                    return;\n\t                }\n\t                updated = $$.updateAngle(d);\n\t                if (updated) {\n\t                    arcData = $$.convertToArcData(updated);\n\t                    // transitions\n\t                    $$.unexpandArc(updated.data.id);\n\t                    $$.api.revert();\n\t                    $$.revertLegend();\n\t                    $$.hideTooltip();\n\t                    $$.config.data_onmouseout(arcData, this);\n\t                }\n\t            } : null)\n\t            .on('click', config.interaction_enabled ? function (d, i) {\n\t                var updated = $$.updateAngle(d), arcData;\n\t                if (updated) {\n\t                    arcData = $$.convertToArcData(updated);\n\t                    if ($$.toggleShape) {\n\t                        $$.toggleShape(this, arcData, i);\n\t                    }\n\t                    $$.config.data_onclick.call($$.api, arcData, this);\n\t                }\n\t            } : null)\n\t            .each(function () { $$.transiting = true; })\n\t            .transition().duration(duration)\n\t            .attrTween(\"d\", function (d) {\n\t                var updated = $$.updateAngle(d), interpolate;\n\t                if (! updated) {\n\t                    return function () { return \"M 0 0\"; };\n\t                }\n\t                //                if (this._current === d) {\n\t                //                    this._current = {\n\t                //                        startAngle: Math.PI*2,\n\t                //                        endAngle: Math.PI*2,\n\t                //                    };\n\t                //                }\n\t                if (isNaN(this._current.startAngle)) {\n\t                    this._current.startAngle = 0;\n\t                }\n\t                if (isNaN(this._current.endAngle)) {\n\t                    this._current.endAngle = this._current.startAngle;\n\t                }\n\t                interpolate = d3.interpolate(this._current, updated);\n\t                this._current = interpolate(0);\n\t                return function (t) {\n\t                    var interpolated = interpolate(t);\n\t                    interpolated.data = d.data; // data.id will be updated by interporator\n\t                    return $$.getArc(interpolated, true);\n\t                };\n\t            })\n\t            .attr(\"transform\", withTransform ? \"scale(1)\" : \"\")\n\t            .style(\"fill\", function (d) {\n\t                return $$.levelColor ? $$.levelColor(d.data.values[0].value) : $$.color(d.data.id);\n\t            }) // Where gauge reading color would receive customization.\n\t            .style(\"opacity\", 1)\n\t            .call($$.endall, function () {\n\t                $$.transiting = false;\n\t            });\n\t        mainArc.exit().transition().duration(durationForExit)\n\t            .style('opacity', 0)\n\t            .remove();\n\t        main.selectAll('.' + CLASS.chartArc).select('text')\n\t            .style(\"opacity\", 0)\n\t            .attr('class', function (d) { return $$.isGaugeType(d.data) ? CLASS.gaugeValue : ''; })\n\t            .text($$.textForArcLabel.bind($$))\n\t            .attr(\"transform\", $$.transformForArcLabel.bind($$))\n\t            .style('font-size', function (d) { return $$.isGaugeType(d.data) ? Math.round($$.radius / 5) + 'px' : ''; })\n\t          .transition().duration(duration)\n\t            .style(\"opacity\", function (d) { return $$.isTargetToShow(d.data.id) && $$.isArcType(d.data) ? 1 : 0; });\n\t        main.select('.' + CLASS.chartArcsTitle)\n\t            .style(\"opacity\", $$.hasType('donut') || $$.hasType('gauge') ? 1 : 0);\n\t\n\t        if ($$.hasType('gauge')) {\n\t            $$.arcs.select('.' + CLASS.chartArcsBackground)\n\t                .attr(\"d\", function () {\n\t                    var d = {\n\t                        data: [{value: config.gauge_max}],\n\t                        startAngle: config.gauge_startingAngle,\n\t                        endAngle: -1 * config.gauge_startingAngle\n\t                    };\n\t                    return $$.getArc(d, true, true);\n\t                });\n\t            $$.arcs.select('.' + CLASS.chartArcsGaugeUnit)\n\t                .attr(\"dy\", \".75em\")\n\t                .text(config.gauge_label_show ? config.gauge_units : '');\n\t            $$.arcs.select('.' + CLASS.chartArcsGaugeMin)\n\t                .attr(\"dx\", -1 * ($$.innerRadius + (($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2))) + \"px\")\n\t                .attr(\"dy\", \"1.2em\")\n\t                .text(config.gauge_label_show ? config.gauge_min : '');\n\t            $$.arcs.select('.' + CLASS.chartArcsGaugeMax)\n\t                .attr(\"dx\", $$.innerRadius + (($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2)) + \"px\")\n\t                .attr(\"dy\", \"1.2em\")\n\t                .text(config.gauge_label_show ? config.gauge_max : '');\n\t        }\n\t    };\n\t    c3_chart_internal_fn.initGauge = function () {\n\t        var arcs = this.arcs;\n\t        if (this.hasType('gauge')) {\n\t            arcs.append('path')\n\t                .attr(\"class\", CLASS.chartArcsBackground);\n\t            arcs.append(\"text\")\n\t                .attr(\"class\", CLASS.chartArcsGaugeUnit)\n\t                .style(\"text-anchor\", \"middle\")\n\t                .style(\"pointer-events\", \"none\");\n\t            arcs.append(\"text\")\n\t                .attr(\"class\", CLASS.chartArcsGaugeMin)\n\t                .style(\"text-anchor\", \"middle\")\n\t                .style(\"pointer-events\", \"none\");\n\t            arcs.append(\"text\")\n\t                .attr(\"class\", CLASS.chartArcsGaugeMax)\n\t                .style(\"text-anchor\", \"middle\")\n\t                .style(\"pointer-events\", \"none\");\n\t        }\n\t    };\n\t    c3_chart_internal_fn.getGaugeLabelHeight = function () {\n\t        return this.config.gauge_label_show ? 20 : 0;\n\t    };\n\t\n\t    c3_chart_internal_fn.initRegion = function () {\n\t        var $$ = this;\n\t        $$.region = $$.main.append('g')\n\t            .attr(\"clip-path\", $$.clipPath)\n\t            .attr(\"class\", CLASS.regions);\n\t    };\n\t    c3_chart_internal_fn.updateRegion = function (duration) {\n\t        var $$ = this, config = $$.config;\n\t\n\t        // hide if arc type\n\t        $$.region.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\t\n\t        $$.mainRegion = $$.main.select('.' + CLASS.regions).selectAll('.' + CLASS.region)\n\t            .data(config.regions);\n\t        $$.mainRegion.enter().append('g')\n\t          .append('rect')\n\t            .style(\"fill-opacity\", 0);\n\t        $$.mainRegion\n\t            .attr('class', $$.classRegion.bind($$));\n\t        $$.mainRegion.exit().transition().duration(duration)\n\t            .style(\"opacity\", 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.redrawRegion = function (withTransition) {\n\t        var $$ = this,\n\t            regions = $$.mainRegion.selectAll('rect').each(function () {\n\t                // data is binded to g and it's not transferred to rect (child node) automatically,\n\t                // then data of each rect has to be updated manually.\n\t                // TODO: there should be more efficient way to solve this?\n\t                var parentData = $$.d3.select(this.parentNode).datum();\n\t                $$.d3.select(this).datum(parentData);\n\t            }),\n\t            x = $$.regionX.bind($$),\n\t            y = $$.regionY.bind($$),\n\t            w = $$.regionWidth.bind($$),\n\t            h = $$.regionHeight.bind($$);\n\t        return [\n\t            (withTransition ? regions.transition() : regions)\n\t                .attr(\"x\", x)\n\t                .attr(\"y\", y)\n\t                .attr(\"width\", w)\n\t                .attr(\"height\", h)\n\t                .style(\"fill-opacity\", function (d) { return isValue(d.opacity) ? d.opacity : 0.1; })\n\t        ];\n\t    };\n\t    c3_chart_internal_fn.regionX = function (d) {\n\t        var $$ = this, config = $$.config,\n\t            xPos, yScale = d.axis === 'y' ? $$.y : $$.y2;\n\t        if (d.axis === 'y' || d.axis === 'y2') {\n\t            xPos = config.axis_rotated ? ('start' in d ? yScale(d.start) : 0) : 0;\n\t        } else {\n\t            xPos = config.axis_rotated ? 0 : ('start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0);\n\t        }\n\t        return xPos;\n\t    };\n\t    c3_chart_internal_fn.regionY = function (d) {\n\t        var $$ = this, config = $$.config,\n\t            yPos, yScale = d.axis === 'y' ? $$.y : $$.y2;\n\t        if (d.axis === 'y' || d.axis === 'y2') {\n\t            yPos = config.axis_rotated ? 0 : ('end' in d ? yScale(d.end) : 0);\n\t        } else {\n\t            yPos = config.axis_rotated ? ('start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0) : 0;\n\t        }\n\t        return yPos;\n\t    };\n\t    c3_chart_internal_fn.regionWidth = function (d) {\n\t        var $$ = this, config = $$.config,\n\t            start = $$.regionX(d), end, yScale = d.axis === 'y' ? $$.y : $$.y2;\n\t        if (d.axis === 'y' || d.axis === 'y2') {\n\t            end = config.axis_rotated ? ('end' in d ? yScale(d.end) : $$.width) : $$.width;\n\t        } else {\n\t            end = config.axis_rotated ? $$.width : ('end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.width);\n\t        }\n\t        return end < start ? 0 : end - start;\n\t    };\n\t    c3_chart_internal_fn.regionHeight = function (d) {\n\t        var $$ = this, config = $$.config,\n\t            start = this.regionY(d), end, yScale = d.axis === 'y' ? $$.y : $$.y2;\n\t        if (d.axis === 'y' || d.axis === 'y2') {\n\t            end = config.axis_rotated ? $$.height : ('start' in d ? yScale(d.start) : $$.height);\n\t        } else {\n\t            end = config.axis_rotated ? ('end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.height) : $$.height;\n\t        }\n\t        return end < start ? 0 : end - start;\n\t    };\n\t    c3_chart_internal_fn.isRegionOnX = function (d) {\n\t        return !d.axis || d.axis === 'x';\n\t    };\n\t\n\t    c3_chart_internal_fn.drag = function (mouse) {\n\t        var $$ = this, config = $$.config, main = $$.main, d3 = $$.d3;\n\t        var sx, sy, mx, my, minX, maxX, minY, maxY;\n\t\n\t        if ($$.hasArcType()) { return; }\n\t        if (! config.data_selection_enabled) { return; } // do nothing if not selectable\n\t        if (config.zoom_enabled && ! $$.zoom.altDomain) { return; } // skip if zoomable because of conflict drag dehavior\n\t        if (!config.data_selection_multiple) { return; } // skip when single selection because drag is used for multiple selection\n\t\n\t        sx = $$.dragStart[0];\n\t        sy = $$.dragStart[1];\n\t        mx = mouse[0];\n\t        my = mouse[1];\n\t        minX = Math.min(sx, mx);\n\t        maxX = Math.max(sx, mx);\n\t        minY = (config.data_selection_grouped) ? $$.margin.top : Math.min(sy, my);\n\t        maxY = (config.data_selection_grouped) ? $$.height : Math.max(sy, my);\n\t\n\t        main.select('.' + CLASS.dragarea)\n\t            .attr('x', minX)\n\t            .attr('y', minY)\n\t            .attr('width', maxX - minX)\n\t            .attr('height', maxY - minY);\n\t        // TODO: binary search when multiple xs\n\t        main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape)\n\t            .filter(function (d) { return config.data_selection_isselectable(d); })\n\t            .each(function (d, i) {\n\t                var shape = d3.select(this),\n\t                    isSelected = shape.classed(CLASS.SELECTED),\n\t                    isIncluded = shape.classed(CLASS.INCLUDED),\n\t                    _x, _y, _w, _h, toggle, isWithin = false, box;\n\t                if (shape.classed(CLASS.circle)) {\n\t                    _x = shape.attr(\"cx\") * 1;\n\t                    _y = shape.attr(\"cy\") * 1;\n\t                    toggle = $$.togglePoint;\n\t                    isWithin = minX < _x && _x < maxX && minY < _y && _y < maxY;\n\t                }\n\t                else if (shape.classed(CLASS.bar)) {\n\t                    box = getPathBox(this);\n\t                    _x = box.x;\n\t                    _y = box.y;\n\t                    _w = box.width;\n\t                    _h = box.height;\n\t                    toggle = $$.togglePath;\n\t                    isWithin = !(maxX < _x || _x + _w < minX) && !(maxY < _y || _y + _h < minY);\n\t                } else {\n\t                    // line/area selection not supported yet\n\t                    return;\n\t                }\n\t                if (isWithin ^ isIncluded) {\n\t                    shape.classed(CLASS.INCLUDED, !isIncluded);\n\t                    // TODO: included/unincluded callback here\n\t                    shape.classed(CLASS.SELECTED, !isSelected);\n\t                    toggle.call($$, !isSelected, shape, d, i);\n\t                }\n\t            });\n\t    };\n\t\n\t    c3_chart_internal_fn.dragstart = function (mouse) {\n\t        var $$ = this, config = $$.config;\n\t        if ($$.hasArcType()) { return; }\n\t        if (! config.data_selection_enabled) { return; } // do nothing if not selectable\n\t        $$.dragStart = mouse;\n\t        $$.main.select('.' + CLASS.chart).append('rect')\n\t            .attr('class', CLASS.dragarea)\n\t            .style('opacity', 0.1);\n\t        $$.dragging = true;\n\t    };\n\t\n\t    c3_chart_internal_fn.dragend = function () {\n\t        var $$ = this, config = $$.config;\n\t        if ($$.hasArcType()) { return; }\n\t        if (! config.data_selection_enabled) { return; } // do nothing if not selectable\n\t        $$.main.select('.' + CLASS.dragarea)\n\t            .transition().duration(100)\n\t            .style('opacity', 0)\n\t            .remove();\n\t        $$.main.selectAll('.' + CLASS.shape)\n\t            .classed(CLASS.INCLUDED, false);\n\t        $$.dragging = false;\n\t    };\n\t\n\t    c3_chart_internal_fn.selectPoint = function (target, d, i) {\n\t        var $$ = this, config = $$.config,\n\t            cx = (config.axis_rotated ? $$.circleY : $$.circleX).bind($$),\n\t            cy = (config.axis_rotated ? $$.circleX : $$.circleY).bind($$),\n\t            r = $$.pointSelectR.bind($$);\n\t        config.data_onselected.call($$.api, d, target.node());\n\t        // add selected-circle on low layer g\n\t        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i)\n\t            .data([d])\n\t            .enter().append('circle')\n\t            .attr(\"class\", function () { return $$.generateClass(CLASS.selectedCircle, i); })\n\t            .attr(\"cx\", cx)\n\t            .attr(\"cy\", cy)\n\t            .attr(\"stroke\", function () { return $$.color(d); })\n\t            .attr(\"r\", function (d) { return $$.pointSelectR(d) * 1.4; })\n\t            .transition().duration(100)\n\t            .attr(\"r\", r);\n\t    };\n\t    c3_chart_internal_fn.unselectPoint = function (target, d, i) {\n\t        var $$ = this;\n\t        $$.config.data_onunselected.call($$.api, d, target.node());\n\t        // remove selected-circle from low layer g\n\t        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i)\n\t            .transition().duration(100).attr('r', 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.togglePoint = function (selected, target, d, i) {\n\t        selected ? this.selectPoint(target, d, i) : this.unselectPoint(target, d, i);\n\t    };\n\t    c3_chart_internal_fn.selectPath = function (target, d) {\n\t        var $$ = this;\n\t        $$.config.data_onselected.call($$, d, target.node());\n\t        if ($$.config.interaction_brighten) {\n\t            target.transition().duration(100)\n\t                .style(\"fill\", function () { return $$.d3.rgb($$.color(d)).brighter(0.75); });\n\t        }\n\t    };\n\t    c3_chart_internal_fn.unselectPath = function (target, d) {\n\t        var $$ = this;\n\t        $$.config.data_onunselected.call($$, d, target.node());\n\t        if ($$.config.interaction_brighten) {\n\t            target.transition().duration(100)\n\t                .style(\"fill\", function () { return $$.color(d); });\n\t        }\n\t    };\n\t    c3_chart_internal_fn.togglePath = function (selected, target, d, i) {\n\t        selected ? this.selectPath(target, d, i) : this.unselectPath(target, d, i);\n\t    };\n\t    c3_chart_internal_fn.getToggle = function (that, d) {\n\t        var $$ = this, toggle;\n\t        if (that.nodeName === 'circle') {\n\t            if ($$.isStepType(d)) {\n\t                // circle is hidden in step chart, so treat as within the click area\n\t                toggle = function () {}; // TODO: how to select step chart?\n\t            } else {\n\t                toggle = $$.togglePoint;\n\t            }\n\t        }\n\t        else if (that.nodeName === 'path') {\n\t            toggle = $$.togglePath;\n\t        }\n\t        return toggle;\n\t    };\n\t    c3_chart_internal_fn.toggleShape = function (that, d, i) {\n\t        var $$ = this, d3 = $$.d3, config = $$.config,\n\t            shape = d3.select(that), isSelected = shape.classed(CLASS.SELECTED),\n\t            toggle = $$.getToggle(that, d).bind($$);\n\t\n\t        if (config.data_selection_enabled && config.data_selection_isselectable(d)) {\n\t            if (!config.data_selection_multiple) {\n\t                $$.main.selectAll('.' + CLASS.shapes + (config.data_selection_grouped ? $$.getTargetSelectorSuffix(d.id) : \"\")).selectAll('.' + CLASS.shape).each(function (d, i) {\n\t                    var shape = d3.select(this);\n\t                    if (shape.classed(CLASS.SELECTED)) { toggle(false, shape.classed(CLASS.SELECTED, false), d, i); }\n\t                });\n\t            }\n\t            shape.classed(CLASS.SELECTED, !isSelected);\n\t            toggle(!isSelected, shape, d, i);\n\t        }\n\t    };\n\t\n\t    c3_chart_internal_fn.initBrush = function () {\n\t        var $$ = this, d3 = $$.d3;\n\t        $$.brush = d3.svg.brush().on(\"brush\", function () { $$.redrawForBrush(); });\n\t        $$.brush.update = function () {\n\t            if ($$.context) { $$.context.select('.' + CLASS.brush).call(this); }\n\t            return this;\n\t        };\n\t        $$.brush.scale = function (scale) {\n\t            return $$.config.axis_rotated ? this.y(scale) : this.x(scale);\n\t        };\n\t    };\n\t    c3_chart_internal_fn.initSubchart = function () {\n\t        var $$ = this, config = $$.config,\n\t            context = $$.context = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('context')),\n\t            visibility = config.subchart_show ? 'visible' : 'hidden';\n\t\n\t        context.style('visibility', visibility);\n\t\n\t        // Define g for chart area\n\t        context.append('g')\n\t            .attr(\"clip-path\", $$.clipPathForSubchart)\n\t            .attr('class', CLASS.chart);\n\t\n\t        // Define g for bar chart area\n\t        context.select('.' + CLASS.chart).append(\"g\")\n\t            .attr(\"class\", CLASS.chartBars);\n\t\n\t        // Define g for line chart area\n\t        context.select('.' + CLASS.chart).append(\"g\")\n\t            .attr(\"class\", CLASS.chartLines);\n\t\n\t        // Add extent rect for Brush\n\t        context.append(\"g\")\n\t            .attr(\"clip-path\", $$.clipPath)\n\t            .attr(\"class\", CLASS.brush)\n\t            .call($$.brush);\n\t\n\t        // ATTENTION: This must be called AFTER chart added\n\t        // Add Axis\n\t        $$.axes.subx = context.append(\"g\")\n\t            .attr(\"class\", CLASS.axisX)\n\t            .attr(\"transform\", $$.getTranslate('subx'))\n\t            .attr(\"clip-path\", config.axis_rotated ? \"\" : $$.clipPathForXAxis)\n\t            .style(\"visibility\", config.subchart_axis_x_show ? visibility : 'hidden');\n\t    };\n\t    c3_chart_internal_fn.updateTargetsForSubchart = function (targets) {\n\t        var $$ = this, context = $$.context, config = $$.config,\n\t            contextLineEnter, contextLineUpdate, contextBarEnter, contextBarUpdate,\n\t            classChartBar = $$.classChartBar.bind($$),\n\t            classBars = $$.classBars.bind($$),\n\t            classChartLine = $$.classChartLine.bind($$),\n\t            classLines = $$.classLines.bind($$),\n\t            classAreas = $$.classAreas.bind($$);\n\t\n\t        if (config.subchart_show) {\n\t            //-- Bar --//\n\t            contextBarUpdate = context.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar)\n\t                .data(targets)\n\t                .attr('class', classChartBar);\n\t            contextBarEnter = contextBarUpdate.enter().append('g')\n\t                .style('opacity', 0)\n\t                .attr('class', classChartBar);\n\t            // Bars for each data\n\t            contextBarEnter.append('g')\n\t                .attr(\"class\", classBars);\n\t\n\t            //-- Line --//\n\t            contextLineUpdate = context.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine)\n\t                .data(targets)\n\t                .attr('class', classChartLine);\n\t            contextLineEnter = contextLineUpdate.enter().append('g')\n\t                .style('opacity', 0)\n\t                .attr('class', classChartLine);\n\t            // Lines for each data\n\t            contextLineEnter.append(\"g\")\n\t                .attr(\"class\", classLines);\n\t            // Area\n\t            contextLineEnter.append(\"g\")\n\t                .attr(\"class\", classAreas);\n\t\n\t            //-- Brush --//\n\t            context.selectAll('.' + CLASS.brush + ' rect')\n\t                .attr(config.axis_rotated ? \"width\" : \"height\", config.axis_rotated ? $$.width2 : $$.height2);\n\t        }\n\t    };\n\t    c3_chart_internal_fn.updateBarForSubchart = function (durationForExit) {\n\t        var $$ = this;\n\t        $$.contextBar = $$.context.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar)\n\t            .data($$.barData.bind($$));\n\t        $$.contextBar.enter().append('path')\n\t            .attr(\"class\", $$.classBar.bind($$))\n\t            .style(\"stroke\", 'none')\n\t            .style(\"fill\", $$.color);\n\t        $$.contextBar\n\t            .style(\"opacity\", $$.initialOpacity.bind($$));\n\t        $$.contextBar.exit().transition().duration(durationForExit)\n\t            .style('opacity', 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.redrawBarForSubchart = function (drawBarOnSub, withTransition, duration) {\n\t        (withTransition ? this.contextBar.transition(Math.random().toString()).duration(duration) : this.contextBar)\n\t            .attr('d', drawBarOnSub)\n\t            .style('opacity', 1);\n\t    };\n\t    c3_chart_internal_fn.updateLineForSubchart = function (durationForExit) {\n\t        var $$ = this;\n\t        $$.contextLine = $$.context.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line)\n\t            .data($$.lineData.bind($$));\n\t        $$.contextLine.enter().append('path')\n\t            .attr('class', $$.classLine.bind($$))\n\t            .style('stroke', $$.color);\n\t        $$.contextLine\n\t            .style(\"opacity\", $$.initialOpacity.bind($$));\n\t        $$.contextLine.exit().transition().duration(durationForExit)\n\t            .style('opacity', 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.redrawLineForSubchart = function (drawLineOnSub, withTransition, duration) {\n\t        (withTransition ? this.contextLine.transition(Math.random().toString()).duration(duration) : this.contextLine)\n\t            .attr(\"d\", drawLineOnSub)\n\t            .style('opacity', 1);\n\t    };\n\t    c3_chart_internal_fn.updateAreaForSubchart = function (durationForExit) {\n\t        var $$ = this, d3 = $$.d3;\n\t        $$.contextArea = $$.context.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area)\n\t            .data($$.lineData.bind($$));\n\t        $$.contextArea.enter().append('path')\n\t            .attr(\"class\", $$.classArea.bind($$))\n\t            .style(\"fill\", $$.color)\n\t            .style(\"opacity\", function () { $$.orgAreaOpacity = +d3.select(this).style('opacity'); return 0; });\n\t        $$.contextArea\n\t            .style(\"opacity\", 0);\n\t        $$.contextArea.exit().transition().duration(durationForExit)\n\t            .style('opacity', 0)\n\t            .remove();\n\t    };\n\t    c3_chart_internal_fn.redrawAreaForSubchart = function (drawAreaOnSub, withTransition, duration) {\n\t        (withTransition ? this.contextArea.transition(Math.random().toString()).duration(duration) : this.contextArea)\n\t            .attr(\"d\", drawAreaOnSub)\n\t            .style(\"fill\", this.color)\n\t            .style(\"opacity\", this.orgAreaOpacity);\n\t    };\n\t    c3_chart_internal_fn.redrawSubchart = function (withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices) {\n\t        var $$ = this, d3 = $$.d3, config = $$.config,\n\t            drawAreaOnSub, drawBarOnSub, drawLineOnSub;\n\t\n\t        $$.context.style('visibility', config.subchart_show ? 'visible' : 'hidden');\n\t\n\t        // subchart\n\t        if (config.subchart_show) {\n\t            // reflect main chart to extent on subchart if zoomed\n\t            if (d3.event && d3.event.type === 'zoom') {\n\t                $$.brush.extent($$.x.orgDomain()).update();\n\t            }\n\t            // update subchart elements if needed\n\t            if (withSubchart) {\n\t\n\t                // extent rect\n\t                if (!$$.brush.empty()) {\n\t                    $$.brush.extent($$.x.orgDomain()).update();\n\t                }\n\t                // setup drawer - MEMO: this must be called after axis updated\n\t                drawAreaOnSub = $$.generateDrawArea(areaIndices, true);\n\t                drawBarOnSub = $$.generateDrawBar(barIndices, true);\n\t                drawLineOnSub = $$.generateDrawLine(lineIndices, true);\n\t\n\t                $$.updateBarForSubchart(duration);\n\t                $$.updateLineForSubchart(duration);\n\t                $$.updateAreaForSubchart(duration);\n\t\n\t                $$.redrawBarForSubchart(drawBarOnSub, duration, duration);\n\t                $$.redrawLineForSubchart(drawLineOnSub, duration, duration);\n\t                $$.redrawAreaForSubchart(drawAreaOnSub, duration, duration);\n\t            }\n\t        }\n\t    };\n\t    c3_chart_internal_fn.redrawForBrush = function () {\n\t        var $$ = this, x = $$.x;\n\t        $$.redraw({\n\t            withTransition: false,\n\t            withY: $$.config.zoom_rescale,\n\t            withSubchart: false,\n\t            withUpdateXDomain: true,\n\t            withDimension: false\n\t        });\n\t        $$.config.subchart_onbrush.call($$.api, x.orgDomain());\n\t    };\n\t    c3_chart_internal_fn.transformContext = function (withTransition, transitions) {\n\t        var $$ = this, subXAxis;\n\t        if (transitions && transitions.axisSubX) {\n\t            subXAxis = transitions.axisSubX;\n\t        } else {\n\t            subXAxis = $$.context.select('.' + CLASS.axisX);\n\t            if (withTransition) { subXAxis = subXAxis.transition(); }\n\t        }\n\t        $$.context.attr(\"transform\", $$.getTranslate('context'));\n\t        subXAxis.attr(\"transform\", $$.getTranslate('subx'));\n\t    };\n\t    c3_chart_internal_fn.getDefaultExtent = function () {\n\t        var $$ = this, config = $$.config,\n\t            extent = isFunction(config.axis_x_extent) ? config.axis_x_extent($$.getXDomain($$.data.targets)) : config.axis_x_extent;\n\t        if ($$.isTimeSeries()) {\n\t            extent = [$$.parseDate(extent[0]), $$.parseDate(extent[1])];\n\t        }\n\t        return extent;\n\t    };\n\t\n\t    c3_chart_internal_fn.initZoom = function () {\n\t        var $$ = this, d3 = $$.d3, config = $$.config, startEvent;\n\t\n\t        $$.zoom = d3.behavior.zoom()\n\t            .on(\"zoomstart\", function () {\n\t                startEvent = d3.event.sourceEvent;\n\t                $$.zoom.altDomain = d3.event.sourceEvent.altKey ? $$.x.orgDomain() : null;\n\t                config.zoom_onzoomstart.call($$.api, d3.event.sourceEvent);\n\t            })\n\t            .on(\"zoom\", function () {\n\t                $$.redrawForZoom.call($$);\n\t            })\n\t            .on('zoomend', function () {\n\t                var event = d3.event.sourceEvent;\n\t                // if click, do nothing. otherwise, click interaction will be canceled.\n\t                if (event && startEvent.clientX === event.clientX && startEvent.clientY === event.clientY) {\n\t                    return;\n\t                }\n\t                $$.redrawEventRect();\n\t                $$.updateZoom();\n\t                config.zoom_onzoomend.call($$.api, $$.x.orgDomain());\n\t            });\n\t        $$.zoom.scale = function (scale) {\n\t            return config.axis_rotated ? this.y(scale) : this.x(scale);\n\t        };\n\t        $$.zoom.orgScaleExtent = function () {\n\t            var extent = config.zoom_extent ? config.zoom_extent : [1, 10];\n\t            return [extent[0], Math.max($$.getMaxDataCount() / extent[1], extent[1])];\n\t        };\n\t        $$.zoom.updateScaleExtent = function () {\n\t            var ratio = diffDomain($$.x.orgDomain()) / diffDomain($$.getZoomDomain()),\n\t                extent = this.orgScaleExtent();\n\t            this.scaleExtent([extent[0] * ratio, extent[1] * ratio]);\n\t            return this;\n\t        };\n\t    };\n\t    c3_chart_internal_fn.getZoomDomain = function () {\n\t        var $$ = this, config = $$.config, d3 = $$.d3,\n\t            min = d3.min([$$.orgXDomain[0], config.zoom_x_min]),\n\t            max = d3.max([$$.orgXDomain[1], config.zoom_x_max]);\n\t        return [min, max];\n\t    };\n\t    c3_chart_internal_fn.updateZoom = function () {\n\t        var $$ = this, z = $$.config.zoom_enabled ? $$.zoom : function () {};\n\t        $$.main.select('.' + CLASS.zoomRect).call(z).on(\"dblclick.zoom\", null);\n\t        $$.main.selectAll('.' + CLASS.eventRect).call(z).on(\"dblclick.zoom\", null);\n\t    };\n\t    c3_chart_internal_fn.redrawForZoom = function () {\n\t        var $$ = this, d3 = $$.d3, config = $$.config, zoom = $$.zoom, x = $$.x;\n\t        if (!config.zoom_enabled) {\n\t            return;\n\t        }\n\t        if ($$.filterTargetsToShow($$.data.targets).length === 0) {\n\t            return;\n\t        }\n\t        if (d3.event.sourceEvent.type === 'mousemove' && zoom.altDomain) {\n\t            x.domain(zoom.altDomain);\n\t            zoom.scale(x).updateScaleExtent();\n\t            return;\n\t        }\n\t        if ($$.isCategorized() && x.orgDomain()[0] === $$.orgXDomain[0]) {\n\t            x.domain([$$.orgXDomain[0] - 1e-10, x.orgDomain()[1]]);\n\t        }\n\t        $$.redraw({\n\t            withTransition: false,\n\t            withY: config.zoom_rescale,\n\t            withSubchart: false,\n\t            withEventRect: false,\n\t            withDimension: false\n\t        });\n\t        if (d3.event.sourceEvent.type === 'mousemove') {\n\t            $$.cancelClick = true;\n\t        }\n\t        config.zoom_onzoom.call($$.api, x.orgDomain());\n\t    };\n\t\n\t    c3_chart_internal_fn.generateColor = function () {\n\t        var $$ = this, config = $$.config, d3 = $$.d3,\n\t            colors = config.data_colors,\n\t            pattern = notEmpty(config.color_pattern) ? config.color_pattern : d3.scale.category10().range(),\n\t            callback = config.data_color,\n\t            ids = [];\n\t\n\t        return function (d) {\n\t            var id = d.id || (d.data && d.data.id) || d, color;\n\t\n\t            // if callback function is provided\n\t            if (colors[id] instanceof Function) {\n\t                color = colors[id](d);\n\t            }\n\t            // if specified, choose that color\n\t            else if (colors[id]) {\n\t                color = colors[id];\n\t            }\n\t            // if not specified, choose from pattern\n\t            else {\n\t                if (ids.indexOf(id) < 0) { ids.push(id); }\n\t                color = pattern[ids.indexOf(id) % pattern.length];\n\t                colors[id] = color;\n\t            }\n\t            return callback instanceof Function ? callback(color, d) : color;\n\t        };\n\t    };\n\t    c3_chart_internal_fn.generateLevelColor = function () {\n\t        var $$ = this, config = $$.config,\n\t            colors = config.color_pattern,\n\t            threshold = config.color_threshold,\n\t            asValue = threshold.unit === 'value',\n\t            values = threshold.values && threshold.values.length ? threshold.values : [],\n\t            max = threshold.max || 100;\n\t        return notEmpty(config.color_threshold) ? function (value) {\n\t            var i, v, color = colors[colors.length - 1];\n\t            for (i = 0; i < values.length; i++) {\n\t                v = asValue ? value : (value * 100 / max);\n\t                if (v < values[i]) {\n\t                    color = colors[i];\n\t                    break;\n\t                }\n\t            }\n\t            return color;\n\t        } : null;\n\t    };\n\t\n\t    c3_chart_internal_fn.getYFormat = function (forArc) {\n\t        var $$ = this,\n\t            formatForY = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.yFormat,\n\t            formatForY2 = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.y2Format;\n\t        return function (v, ratio, id) {\n\t            var format = $$.axis.getId(id) === 'y2' ? formatForY2 : formatForY;\n\t            return format.call($$, v, ratio);\n\t        };\n\t    };\n\t    c3_chart_internal_fn.yFormat = function (v) {\n\t        var $$ = this, config = $$.config,\n\t            format = config.axis_y_tick_format ? config.axis_y_tick_format : $$.defaultValueFormat;\n\t        return format(v);\n\t    };\n\t    c3_chart_internal_fn.y2Format = function (v) {\n\t        var $$ = this, config = $$.config,\n\t            format = config.axis_y2_tick_format ? config.axis_y2_tick_format : $$.defaultValueFormat;\n\t        return format(v);\n\t    };\n\t    c3_chart_internal_fn.defaultValueFormat = function (v) {\n\t        return isValue(v) ? +v : \"\";\n\t    };\n\t    c3_chart_internal_fn.defaultArcValueFormat = function (v, ratio) {\n\t        return (ratio * 100).toFixed(1) + '%';\n\t    };\n\t    c3_chart_internal_fn.dataLabelFormat = function (targetId) {\n\t        var $$ = this, data_labels = $$.config.data_labels,\n\t            format, defaultFormat = function (v) { return isValue(v) ? +v : \"\"; };\n\t        // find format according to axis id\n\t        if (typeof data_labels.format === 'function') {\n\t            format = data_labels.format;\n\t        } else if (typeof data_labels.format === 'object') {\n\t            if (data_labels.format[targetId]) {\n\t                format = data_labels.format[targetId] === true ? defaultFormat : data_labels.format[targetId];\n\t            } else {\n\t                format = function () { return ''; };\n\t            }\n\t        } else {\n\t            format = defaultFormat;\n\t        }\n\t        return format;\n\t    };\n\t\n\t    c3_chart_internal_fn.hasCaches = function (ids) {\n\t        for (var i = 0; i < ids.length; i++) {\n\t            if (! (ids[i] in this.cache)) { return false; }\n\t        }\n\t        return true;\n\t    };\n\t    c3_chart_internal_fn.addCache = function (id, target) {\n\t        this.cache[id] = this.cloneTarget(target);\n\t    };\n\t    c3_chart_internal_fn.getCaches = function (ids) {\n\t        var targets = [], i;\n\t        for (i = 0; i < ids.length; i++) {\n\t            if (ids[i] in this.cache) { targets.push(this.cloneTarget(this.cache[ids[i]])); }\n\t        }\n\t        return targets;\n\t    };\n\t\n\t    var CLASS = c3_chart_internal_fn.CLASS = {\n\t        target: 'c3-target',\n\t        chart: 'c3-chart',\n\t        chartLine: 'c3-chart-line',\n\t        chartLines: 'c3-chart-lines',\n\t        chartBar: 'c3-chart-bar',\n\t        chartBars: 'c3-chart-bars',\n\t        chartText: 'c3-chart-text',\n\t        chartTexts: 'c3-chart-texts',\n\t        chartArc: 'c3-chart-arc',\n\t        chartArcs: 'c3-chart-arcs',\n\t        chartArcsTitle: 'c3-chart-arcs-title',\n\t        chartArcsBackground: 'c3-chart-arcs-background',\n\t        chartArcsGaugeUnit: 'c3-chart-arcs-gauge-unit',\n\t        chartArcsGaugeMax: 'c3-chart-arcs-gauge-max',\n\t        chartArcsGaugeMin: 'c3-chart-arcs-gauge-min',\n\t        selectedCircle: 'c3-selected-circle',\n\t        selectedCircles: 'c3-selected-circles',\n\t        eventRect: 'c3-event-rect',\n\t        eventRects: 'c3-event-rects',\n\t        eventRectsSingle: 'c3-event-rects-single',\n\t        eventRectsMultiple: 'c3-event-rects-multiple',\n\t        zoomRect: 'c3-zoom-rect',\n\t        brush: 'c3-brush',\n\t        focused: 'c3-focused',\n\t        defocused: 'c3-defocused',\n\t        region: 'c3-region',\n\t        regions: 'c3-regions',\n\t        title: 'c3-title',\n\t        tooltipContainer: 'c3-tooltip-container',\n\t        tooltip: 'c3-tooltip',\n\t        tooltipName: 'c3-tooltip-name',\n\t        shape: 'c3-shape',\n\t        shapes: 'c3-shapes',\n\t        line: 'c3-line',\n\t        lines: 'c3-lines',\n\t        bar: 'c3-bar',\n\t        bars: 'c3-bars',\n\t        circle: 'c3-circle',\n\t        circles: 'c3-circles',\n\t        arc: 'c3-arc',\n\t        arcs: 'c3-arcs',\n\t        area: 'c3-area',\n\t        areas: 'c3-areas',\n\t        empty: 'c3-empty',\n\t        text: 'c3-text',\n\t        texts: 'c3-texts',\n\t        gaugeValue: 'c3-gauge-value',\n\t        grid: 'c3-grid',\n\t        gridLines: 'c3-grid-lines',\n\t        xgrid: 'c3-xgrid',\n\t        xgrids: 'c3-xgrids',\n\t        xgridLine: 'c3-xgrid-line',\n\t        xgridLines: 'c3-xgrid-lines',\n\t        xgridFocus: 'c3-xgrid-focus',\n\t        ygrid: 'c3-ygrid',\n\t        ygrids: 'c3-ygrids',\n\t        ygridLine: 'c3-ygrid-line',\n\t        ygridLines: 'c3-ygrid-lines',\n\t        axis: 'c3-axis',\n\t        axisX: 'c3-axis-x',\n\t        axisXLabel: 'c3-axis-x-label',\n\t        axisY: 'c3-axis-y',\n\t        axisYLabel: 'c3-axis-y-label',\n\t        axisY2: 'c3-axis-y2',\n\t        axisY2Label: 'c3-axis-y2-label',\n\t        legendBackground: 'c3-legend-background',\n\t        legendItem: 'c3-legend-item',\n\t        legendItemEvent: 'c3-legend-item-event',\n\t        legendItemTile: 'c3-legend-item-tile',\n\t        legendItemHidden: 'c3-legend-item-hidden',\n\t        legendItemFocused: 'c3-legend-item-focused',\n\t        dragarea: 'c3-dragarea',\n\t        EXPANDED: '_expanded_',\n\t        SELECTED: '_selected_',\n\t        INCLUDED: '_included_'\n\t    };\n\t    c3_chart_internal_fn.generateClass = function (prefix, targetId) {\n\t        return \" \" + prefix + \" \" + prefix + this.getTargetSelectorSuffix(targetId);\n\t    };\n\t    c3_chart_internal_fn.classText = function (d) {\n\t        return this.generateClass(CLASS.text, d.index);\n\t    };\n\t    c3_chart_internal_fn.classTexts = function (d) {\n\t        return this.generateClass(CLASS.texts, d.id);\n\t    };\n\t    c3_chart_internal_fn.classShape = function (d) {\n\t        return this.generateClass(CLASS.shape, d.index);\n\t    };\n\t    c3_chart_internal_fn.classShapes = function (d) {\n\t        return this.generateClass(CLASS.shapes, d.id);\n\t    };\n\t    c3_chart_internal_fn.classLine = function (d) {\n\t        return this.classShape(d) + this.generateClass(CLASS.line, d.id);\n\t    };\n\t    c3_chart_internal_fn.classLines = function (d) {\n\t        return this.classShapes(d) + this.generateClass(CLASS.lines, d.id);\n\t    };\n\t    c3_chart_internal_fn.classCircle = function (d) {\n\t        return this.classShape(d) + this.generateClass(CLASS.circle, d.index);\n\t    };\n\t    c3_chart_internal_fn.classCircles = function (d) {\n\t        return this.classShapes(d) + this.generateClass(CLASS.circles, d.id);\n\t    };\n\t    c3_chart_internal_fn.classBar = function (d) {\n\t        return this.classShape(d) + this.generateClass(CLASS.bar, d.index);\n\t    };\n\t    c3_chart_internal_fn.classBars = function (d) {\n\t        return this.classShapes(d) + this.generateClass(CLASS.bars, d.id);\n\t    };\n\t    c3_chart_internal_fn.classArc = function (d) {\n\t        return this.classShape(d.data) + this.generateClass(CLASS.arc, d.data.id);\n\t    };\n\t    c3_chart_internal_fn.classArcs = function (d) {\n\t        return this.classShapes(d.data) + this.generateClass(CLASS.arcs, d.data.id);\n\t    };\n\t    c3_chart_internal_fn.classArea = function (d) {\n\t        return this.classShape(d) + this.generateClass(CLASS.area, d.id);\n\t    };\n\t    c3_chart_internal_fn.classAreas = function (d) {\n\t        return this.classShapes(d) + this.generateClass(CLASS.areas, d.id);\n\t    };\n\t    c3_chart_internal_fn.classRegion = function (d, i) {\n\t        return this.generateClass(CLASS.region, i) + ' ' + ('class' in d ? d['class'] : '');\n\t    };\n\t    c3_chart_internal_fn.classEvent = function (d) {\n\t        return this.generateClass(CLASS.eventRect, d.index);\n\t    };\n\t    c3_chart_internal_fn.classTarget = function (id) {\n\t        var $$ = this;\n\t        var additionalClassSuffix = $$.config.data_classes[id], additionalClass = '';\n\t        if (additionalClassSuffix) {\n\t            additionalClass = ' ' + CLASS.target + '-' + additionalClassSuffix;\n\t        }\n\t        return $$.generateClass(CLASS.target, id) + additionalClass;\n\t    };\n\t    c3_chart_internal_fn.classFocus = function (d) {\n\t        return this.classFocused(d) + this.classDefocused(d);\n\t    };\n\t    c3_chart_internal_fn.classFocused = function (d) {\n\t        return ' ' + (this.focusedTargetIds.indexOf(d.id) >= 0 ? CLASS.focused : '');\n\t    };\n\t    c3_chart_internal_fn.classDefocused = function (d) {\n\t        return ' ' + (this.defocusedTargetIds.indexOf(d.id) >= 0 ? CLASS.defocused : '');\n\t    };\n\t    c3_chart_internal_fn.classChartText = function (d) {\n\t        return CLASS.chartText + this.classTarget(d.id);\n\t    };\n\t    c3_chart_internal_fn.classChartLine = function (d) {\n\t        return CLASS.chartLine + this.classTarget(d.id);\n\t    };\n\t    c3_chart_internal_fn.classChartBar = function (d) {\n\t        return CLASS.chartBar + this.classTarget(d.id);\n\t    };\n\t    c3_chart_internal_fn.classChartArc = function (d) {\n\t        return CLASS.chartArc + this.classTarget(d.data.id);\n\t    };\n\t    c3_chart_internal_fn.getTargetSelectorSuffix = function (targetId) {\n\t        return targetId || targetId === 0 ? ('-' + targetId).replace(/[\\s?!@#$%^&*()_=+,.<>'\":;\\[\\]\\/|~`{}\\\\]/g, '-') : '';\n\t    };\n\t    c3_chart_internal_fn.selectorTarget = function (id, prefix) {\n\t        return (prefix || '') + '.' + CLASS.target + this.getTargetSelectorSuffix(id);\n\t    };\n\t    c3_chart_internal_fn.selectorTargets = function (ids, prefix) {\n\t        var $$ = this;\n\t        ids = ids || [];\n\t        return ids.length ? ids.map(function (id) { return $$.selectorTarget(id, prefix); }) : null;\n\t    };\n\t    c3_chart_internal_fn.selectorLegend = function (id) {\n\t        return '.' + CLASS.legendItem + this.getTargetSelectorSuffix(id);\n\t    };\n\t    c3_chart_internal_fn.selectorLegends = function (ids) {\n\t        var $$ = this;\n\t        return ids && ids.length ? ids.map(function (id) { return $$.selectorLegend(id); }) : null;\n\t    };\n\t\n\t    var isValue = c3_chart_internal_fn.isValue = function (v) {\n\t        return v || v === 0;\n\t    },\n\t        isFunction = c3_chart_internal_fn.isFunction = function (o) {\n\t            return typeof o === 'function';\n\t        },\n\t        isString = c3_chart_internal_fn.isString = function (o) {\n\t            return typeof o === 'string';\n\t        },\n\t        isUndefined = c3_chart_internal_fn.isUndefined = function (v) {\n\t            return typeof v === 'undefined';\n\t        },\n\t        isDefined = c3_chart_internal_fn.isDefined = function (v) {\n\t            return typeof v !== 'undefined';\n\t        },\n\t        ceil10 = c3_chart_internal_fn.ceil10 = function (v) {\n\t            return Math.ceil(v / 10) * 10;\n\t        },\n\t        asHalfPixel = c3_chart_internal_fn.asHalfPixel = function (n) {\n\t            return Math.ceil(n) + 0.5;\n\t        },\n\t        diffDomain = c3_chart_internal_fn.diffDomain = function (d) {\n\t            return d[1] - d[0];\n\t        },\n\t        isEmpty = c3_chart_internal_fn.isEmpty = function (o) {\n\t            return typeof o === 'undefined' || o === null || (isString(o) && o.length === 0) || (typeof o === 'object' && Object.keys(o).length === 0);\n\t        },\n\t        notEmpty = c3_chart_internal_fn.notEmpty = function (o) {\n\t            return !c3_chart_internal_fn.isEmpty(o);\n\t        },\n\t        getOption = c3_chart_internal_fn.getOption = function (options, key, defaultValue) {\n\t            return isDefined(options[key]) ? options[key] : defaultValue;\n\t        },\n\t        hasValue = c3_chart_internal_fn.hasValue = function (dict, value) {\n\t            var found = false;\n\t            Object.keys(dict).forEach(function (key) {\n\t                if (dict[key] === value) { found = true; }\n\t            });\n\t            return found;\n\t        },\n\t        sanitise = c3_chart_internal_fn.sanitise = function (str) {\n\t            return typeof str === 'string' ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;') : str;\n\t        },\n\t        getPathBox = c3_chart_internal_fn.getPathBox = function (path) {\n\t            var box = path.getBoundingClientRect(),\n\t                items = [path.pathSegList.getItem(0), path.pathSegList.getItem(1)],\n\t                minX = items[0].x, minY = Math.min(items[0].y, items[1].y);\n\t            return {x: minX, y: minY, width: box.width, height: box.height};\n\t        };\n\t\n\t    c3_chart_fn.focus = function (targetIds) {\n\t        var $$ = this.internal, candidates;\n\t\n\t        targetIds = $$.mapToTargetIds(targetIds);\n\t        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))),\n\t\n\t        this.revert();\n\t        this.defocus();\n\t        candidates.classed(CLASS.focused, true).classed(CLASS.defocused, false);\n\t        if ($$.hasArcType()) {\n\t            $$.expandArc(targetIds);\n\t        }\n\t        $$.toggleFocusLegend(targetIds, true);\n\t\n\t        $$.focusedTargetIds = targetIds;\n\t        $$.defocusedTargetIds = $$.defocusedTargetIds.filter(function (id) {\n\t            return targetIds.indexOf(id) < 0;\n\t        });\n\t    };\n\t\n\t    c3_chart_fn.defocus = function (targetIds) {\n\t        var $$ = this.internal, candidates;\n\t\n\t        targetIds = $$.mapToTargetIds(targetIds);\n\t        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))),\n\t\n\t        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, true);\n\t        if ($$.hasArcType()) {\n\t            $$.unexpandArc(targetIds);\n\t        }\n\t        $$.toggleFocusLegend(targetIds, false);\n\t\n\t        $$.focusedTargetIds = $$.focusedTargetIds.filter(function (id) {\n\t            return targetIds.indexOf(id) < 0;\n\t        });\n\t        $$.defocusedTargetIds = targetIds;\n\t    };\n\t\n\t    c3_chart_fn.revert = function (targetIds) {\n\t        var $$ = this.internal, candidates;\n\t\n\t        targetIds = $$.mapToTargetIds(targetIds);\n\t        candidates = $$.svg.selectAll($$.selectorTargets(targetIds)); // should be for all targets\n\t\n\t        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, false);\n\t        if ($$.hasArcType()) {\n\t            $$.unexpandArc(targetIds);\n\t        }\n\t        if ($$.config.legend_show) {\n\t            $$.showLegend(targetIds.filter($$.isLegendToShow.bind($$)));\n\t            $$.legend.selectAll($$.selectorLegends(targetIds))\n\t                .filter(function () {\n\t                    return $$.d3.select(this).classed(CLASS.legendItemFocused);\n\t                })\n\t                .classed(CLASS.legendItemFocused, false);\n\t        }\n\t\n\t        $$.focusedTargetIds = [];\n\t        $$.defocusedTargetIds = [];\n\t    };\n\t\n\t    c3_chart_fn.show = function (targetIds, options) {\n\t        var $$ = this.internal, targets;\n\t\n\t        targetIds = $$.mapToTargetIds(targetIds);\n\t        options = options || {};\n\t\n\t        $$.removeHiddenTargetIds(targetIds);\n\t        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\t\n\t        targets.transition()\n\t            .style('opacity', 1, 'important')\n\t            .call($$.endall, function () {\n\t                targets.style('opacity', null).style('opacity', 1);\n\t            });\n\t\n\t        if (options.withLegend) {\n\t            $$.showLegend(targetIds);\n\t        }\n\t\n\t        $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n\t    };\n\t\n\t    c3_chart_fn.hide = function (targetIds, options) {\n\t        var $$ = this.internal, targets;\n\t\n\t        targetIds = $$.mapToTargetIds(targetIds);\n\t        options = options || {};\n\t\n\t        $$.addHiddenTargetIds(targetIds);\n\t        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\t\n\t        targets.transition()\n\t            .style('opacity', 0, 'important')\n\t            .call($$.endall, function () {\n\t                targets.style('opacity', null).style('opacity', 0);\n\t            });\n\t\n\t        if (options.withLegend) {\n\t            $$.hideLegend(targetIds);\n\t        }\n\t\n\t        $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n\t    };\n\t\n\t    c3_chart_fn.toggle = function (targetIds, options) {\n\t        var that = this, $$ = this.internal;\n\t        $$.mapToTargetIds(targetIds).forEach(function (targetId) {\n\t            $$.isTargetToShow(targetId) ? that.hide(targetId, options) : that.show(targetId, options);\n\t        });\n\t    };\n\t\n\t    c3_chart_fn.zoom = function (domain) {\n\t        var $$ = this.internal;\n\t        if (domain) {\n\t            if ($$.isTimeSeries()) {\n\t                domain = domain.map(function (x) { return $$.parseDate(x); });\n\t            }\n\t            $$.brush.extent(domain);\n\t            $$.redraw({withUpdateXDomain: true, withY: $$.config.zoom_rescale});\n\t            $$.config.zoom_onzoom.call(this, $$.x.orgDomain());\n\t        }\n\t        return $$.brush.extent();\n\t    };\n\t    c3_chart_fn.zoom.enable = function (enabled) {\n\t        var $$ = this.internal;\n\t        $$.config.zoom_enabled = enabled;\n\t        $$.updateAndRedraw();\n\t    };\n\t    c3_chart_fn.unzoom = function () {\n\t        var $$ = this.internal;\n\t        $$.brush.clear().update();\n\t        $$.redraw({withUpdateXDomain: true});\n\t    };\n\t\n\t    c3_chart_fn.zoom.max = function (max) {\n\t        var $$ = this.internal, config = $$.config, d3 = $$.d3;\n\t        if (max === 0 || max) {\n\t            config.zoom_x_max = d3.max([$$.orgXDomain[1], max]);\n\t        }\n\t        else {\n\t            return config.zoom_x_max;\n\t        }\n\t    };\n\t\n\t    c3_chart_fn.zoom.min = function (min) {\n\t        var $$ = this.internal, config = $$.config, d3 = $$.d3;\n\t        if (min === 0 || min) {\n\t            config.zoom_x_min = d3.min([$$.orgXDomain[0], min]);\n\t        }\n\t        else {\n\t            return config.zoom_x_min;\n\t        }\n\t    };\n\t\n\t    c3_chart_fn.zoom.range = function (range) {\n\t        if (arguments.length) {\n\t            if (isDefined(range.max)) { this.domain.max(range.max); }\n\t            if (isDefined(range.min)) { this.domain.min(range.min); }\n\t        } else {\n\t            return {\n\t                max: this.domain.max(),\n\t                min: this.domain.min()\n\t            };\n\t        }\n\t    };\n\t\n\t    c3_chart_fn.load = function (args) {\n\t        var $$ = this.internal, config = $$.config;\n\t        // update xs if specified\n\t        if (args.xs) {\n\t            $$.addXs(args.xs);\n\t        }\n\t        // update names if exists\n\t        if ('names' in args) {\n\t            c3_chart_fn.data.names.bind(this)(args.names);\n\t        }\n\t        // update classes if exists\n\t        if ('classes' in args) {\n\t            Object.keys(args.classes).forEach(function (id) {\n\t                config.data_classes[id] = args.classes[id];\n\t            });\n\t        }\n\t        // update categories if exists\n\t        if ('categories' in args && $$.isCategorized()) {\n\t            config.axis_x_categories = args.categories;\n\t        }\n\t        // update axes if exists\n\t        if ('axes' in args) {\n\t            Object.keys(args.axes).forEach(function (id) {\n\t                config.data_axes[id] = args.axes[id];\n\t            });\n\t        }\n\t        // update colors if exists\n\t        if ('colors' in args) {\n\t            Object.keys(args.colors).forEach(function (id) {\n\t                config.data_colors[id] = args.colors[id];\n\t            });\n\t        }\n\t        // use cache if exists\n\t        if ('cacheIds' in args && $$.hasCaches(args.cacheIds)) {\n\t            $$.load($$.getCaches(args.cacheIds), args.done);\n\t            return;\n\t        }\n\t        // unload if needed\n\t        if ('unload' in args) {\n\t            // TODO: do not unload if target will load (included in url/rows/columns)\n\t            $$.unload($$.mapToTargetIds((typeof args.unload === 'boolean' && args.unload) ? null : args.unload), function () {\n\t                $$.loadFromArgs(args);\n\t            });\n\t        } else {\n\t            $$.loadFromArgs(args);\n\t        }\n\t    };\n\t\n\t    c3_chart_fn.unload = function (args) {\n\t        var $$ = this.internal;\n\t        args = args || {};\n\t        if (args instanceof Array) {\n\t            args = {ids: args};\n\t        } else if (typeof args === 'string') {\n\t            args = {ids: [args]};\n\t        }\n\t        $$.unload($$.mapToTargetIds(args.ids), function () {\n\t            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n\t            if (args.done) { args.done(); }\n\t        });\n\t    };\n\t\n\t    c3_chart_fn.flow = function (args) {\n\t        var $$ = this.internal,\n\t            targets, data, notfoundIds = [], orgDataCount = $$.getMaxDataCount(),\n\t            dataCount, domain, baseTarget, baseValue, length = 0, tail = 0, diff, to;\n\t\n\t        if (args.json) {\n\t            data = $$.convertJsonToData(args.json, args.keys);\n\t        }\n\t        else if (args.rows) {\n\t            data = $$.convertRowsToData(args.rows);\n\t        }\n\t        else if (args.columns) {\n\t            data = $$.convertColumnsToData(args.columns);\n\t        }\n\t        else {\n\t            return;\n\t        }\n\t        targets = $$.convertDataToTargets(data, true);\n\t\n\t        // Update/Add data\n\t        $$.data.targets.forEach(function (t) {\n\t            var found = false, i, j;\n\t            for (i = 0; i < targets.length; i++) {\n\t                if (t.id === targets[i].id) {\n\t                    found = true;\n\t\n\t                    if (t.values[t.values.length - 1]) {\n\t                        tail = t.values[t.values.length - 1].index + 1;\n\t                    }\n\t                    length = targets[i].values.length;\n\t\n\t                    for (j = 0; j < length; j++) {\n\t                        targets[i].values[j].index = tail + j;\n\t                        if (!$$.isTimeSeries()) {\n\t                            targets[i].values[j].x = tail + j;\n\t                        }\n\t                    }\n\t                    t.values = t.values.concat(targets[i].values);\n\t\n\t                    targets.splice(i, 1);\n\t                    break;\n\t                }\n\t            }\n\t            if (!found) { notfoundIds.push(t.id); }\n\t        });\n\t\n\t        // Append null for not found targets\n\t        $$.data.targets.forEach(function (t) {\n\t            var i, j;\n\t            for (i = 0; i < notfoundIds.length; i++) {\n\t                if (t.id === notfoundIds[i]) {\n\t                    tail = t.values[t.values.length - 1].index + 1;\n\t                    for (j = 0; j < length; j++) {\n\t                        t.values.push({\n\t                            id: t.id,\n\t                            index: tail + j,\n\t                            x: $$.isTimeSeries() ? $$.getOtherTargetX(tail + j) : tail + j,\n\t                            value: null\n\t                        });\n\t                    }\n\t                }\n\t            }\n\t        });\n\t\n\t        // Generate null values for new target\n\t        if ($$.data.targets.length) {\n\t            targets.forEach(function (t) {\n\t                var i, missing = [];\n\t                for (i = $$.data.targets[0].values[0].index; i < tail; i++) {\n\t                    missing.push({\n\t                        id: t.id,\n\t                        index: i,\n\t                        x: $$.isTimeSeries() ? $$.getOtherTargetX(i) : i,\n\t                        value: null\n\t                    });\n\t                }\n\t                t.values.forEach(function (v) {\n\t                    v.index += tail;\n\t                    if (!$$.isTimeSeries()) {\n\t                        v.x += tail;\n\t                    }\n\t                });\n\t                t.values = missing.concat(t.values);\n\t            });\n\t        }\n\t        $$.data.targets = $$.data.targets.concat(targets); // add remained\n\t\n\t        // check data count because behavior needs to change when it's only one\n\t        dataCount = $$.getMaxDataCount();\n\t        baseTarget = $$.data.targets[0];\n\t        baseValue = baseTarget.values[0];\n\t\n\t        // Update length to flow if needed\n\t        if (isDefined(args.to)) {\n\t            length = 0;\n\t            to = $$.isTimeSeries() ? $$.parseDate(args.to) : args.to;\n\t            baseTarget.values.forEach(function (v) {\n\t                if (v.x < to) { length++; }\n\t            });\n\t        } else if (isDefined(args.length)) {\n\t            length = args.length;\n\t        }\n\t\n\t        // If only one data, update the domain to flow from left edge of the chart\n\t        if (!orgDataCount) {\n\t            if ($$.isTimeSeries()) {\n\t                if (baseTarget.values.length > 1) {\n\t                    diff = baseTarget.values[baseTarget.values.length - 1].x - baseValue.x;\n\t                } else {\n\t                    diff = baseValue.x - $$.getXDomain($$.data.targets)[0];\n\t                }\n\t            } else {\n\t                diff = 1;\n\t            }\n\t            domain = [baseValue.x - diff, baseValue.x];\n\t            $$.updateXDomain(null, true, true, false, domain);\n\t        } else if (orgDataCount === 1) {\n\t            if ($$.isTimeSeries()) {\n\t                diff = (baseTarget.values[baseTarget.values.length - 1].x - baseValue.x) / 2;\n\t                domain = [new Date(+baseValue.x - diff), new Date(+baseValue.x + diff)];\n\t                $$.updateXDomain(null, true, true, false, domain);\n\t            }\n\t        }\n\t\n\t        // Set targets\n\t        $$.updateTargets($$.data.targets);\n\t\n\t        // Redraw with new targets\n\t        $$.redraw({\n\t            flow: {\n\t                index: baseValue.index,\n\t                length: length,\n\t                duration: isValue(args.duration) ? args.duration : $$.config.transition_duration,\n\t                done: args.done,\n\t                orgDataCount: orgDataCount,\n\t            },\n\t            withLegend: true,\n\t            withTransition: orgDataCount > 1,\n\t            withTrimXDomain: false,\n\t            withUpdateXAxis: true,\n\t        });\n\t    };\n\t\n\t    c3_chart_internal_fn.generateFlow = function (args) {\n\t        var $$ = this, config = $$.config, d3 = $$.d3;\n\t\n\t        return function () {\n\t            var targets = args.targets,\n\t                flow = args.flow,\n\t                drawBar = args.drawBar,\n\t                drawLine = args.drawLine,\n\t                drawArea = args.drawArea,\n\t                cx = args.cx,\n\t                cy = args.cy,\n\t                xv = args.xv,\n\t                xForText = args.xForText,\n\t                yForText = args.yForText,\n\t                duration = args.duration;\n\t\n\t            var translateX, scaleX = 1, transform,\n\t                flowIndex = flow.index,\n\t                flowLength = flow.length,\n\t                flowStart = $$.getValueOnIndex($$.data.targets[0].values, flowIndex),\n\t                flowEnd = $$.getValueOnIndex($$.data.targets[0].values, flowIndex + flowLength),\n\t                orgDomain = $$.x.domain(), domain,\n\t                durationForFlow = flow.duration || duration,\n\t                done = flow.done || function () {},\n\t                wait = $$.generateWait();\n\t\n\t            var xgrid = $$.xgrid || d3.selectAll([]),\n\t                xgridLines = $$.xgridLines || d3.selectAll([]),\n\t                mainRegion = $$.mainRegion || d3.selectAll([]),\n\t                mainText = $$.mainText || d3.selectAll([]),\n\t                mainBar = $$.mainBar || d3.selectAll([]),\n\t                mainLine = $$.mainLine || d3.selectAll([]),\n\t                mainArea = $$.mainArea || d3.selectAll([]),\n\t                mainCircle = $$.mainCircle || d3.selectAll([]);\n\t\n\t            // set flag\n\t            $$.flowing = true;\n\t\n\t            // remove head data after rendered\n\t            $$.data.targets.forEach(function (d) {\n\t                d.values.splice(0, flowLength);\n\t            });\n\t\n\t            // update x domain to generate axis elements for flow\n\t            domain = $$.updateXDomain(targets, true, true);\n\t            // update elements related to x scale\n\t            if ($$.updateXGrid) { $$.updateXGrid(true); }\n\t\n\t            // generate transform to flow\n\t            if (!flow.orgDataCount) { // if empty\n\t                if ($$.data.targets[0].values.length !== 1) {\n\t                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n\t                } else {\n\t                    if ($$.isTimeSeries()) {\n\t                        flowStart = $$.getValueOnIndex($$.data.targets[0].values, 0);\n\t                        flowEnd = $$.getValueOnIndex($$.data.targets[0].values, $$.data.targets[0].values.length - 1);\n\t                        translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n\t                    } else {\n\t                        translateX = diffDomain(domain) / 2;\n\t                    }\n\t                }\n\t            } else if (flow.orgDataCount === 1 || (flowStart && flowStart.x) === (flowEnd && flowEnd.x)) {\n\t                translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n\t            } else {\n\t                if ($$.isTimeSeries()) {\n\t                    translateX = ($$.x(orgDomain[0]) - $$.x(domain[0]));\n\t                } else {\n\t                    translateX = ($$.x(flowStart.x) - $$.x(flowEnd.x));\n\t                }\n\t            }\n\t            scaleX = (diffDomain(orgDomain) / diffDomain(domain));\n\t            transform = 'translate(' + translateX + ',0) scale(' + scaleX + ',1)';\n\t\n\t            $$.hideXGridFocus();\n\t\n\t            d3.transition().ease('linear').duration(durationForFlow).each(function () {\n\t                wait.add($$.axes.x.transition().call($$.xAxis));\n\t                wait.add(mainBar.transition().attr('transform', transform));\n\t                wait.add(mainLine.transition().attr('transform', transform));\n\t                wait.add(mainArea.transition().attr('transform', transform));\n\t                wait.add(mainCircle.transition().attr('transform', transform));\n\t                wait.add(mainText.transition().attr('transform', transform));\n\t                wait.add(mainRegion.filter($$.isRegionOnX).transition().attr('transform', transform));\n\t                wait.add(xgrid.transition().attr('transform', transform));\n\t                wait.add(xgridLines.transition().attr('transform', transform));\n\t            })\n\t            .call(wait, function () {\n\t                var i, shapes = [], texts = [], eventRects = [];\n\t\n\t                // remove flowed elements\n\t                if (flowLength) {\n\t                    for (i = 0; i < flowLength; i++) {\n\t                        shapes.push('.' + CLASS.shape + '-' + (flowIndex + i));\n\t                        texts.push('.' + CLASS.text + '-' + (flowIndex + i));\n\t                        eventRects.push('.' + CLASS.eventRect + '-' + (flowIndex + i));\n\t                    }\n\t                    $$.svg.selectAll('.' + CLASS.shapes).selectAll(shapes).remove();\n\t                    $$.svg.selectAll('.' + CLASS.texts).selectAll(texts).remove();\n\t                    $$.svg.selectAll('.' + CLASS.eventRects).selectAll(eventRects).remove();\n\t                    $$.svg.select('.' + CLASS.xgrid).remove();\n\t                }\n\t\n\t                // draw again for removing flowed elements and reverting attr\n\t                xgrid\n\t                    .attr('transform', null)\n\t                    .attr($$.xgridAttr);\n\t                xgridLines\n\t                    .attr('transform', null);\n\t                xgridLines.select('line')\n\t                    .attr(\"x1\", config.axis_rotated ? 0 : xv)\n\t                    .attr(\"x2\", config.axis_rotated ? $$.width : xv);\n\t                xgridLines.select('text')\n\t                    .attr(\"x\", config.axis_rotated ? $$.width : 0)\n\t                    .attr(\"y\", xv);\n\t                mainBar\n\t                    .attr('transform', null)\n\t                    .attr(\"d\", drawBar);\n\t                mainLine\n\t                    .attr('transform', null)\n\t                    .attr(\"d\", drawLine);\n\t                mainArea\n\t                    .attr('transform', null)\n\t                    .attr(\"d\", drawArea);\n\t                mainCircle\n\t                    .attr('transform', null)\n\t                    .attr(\"cx\", cx)\n\t                    .attr(\"cy\", cy);\n\t                mainText\n\t                    .attr('transform', null)\n\t                    .attr('x', xForText)\n\t                    .attr('y', yForText)\n\t                    .style('fill-opacity', $$.opacityForText.bind($$));\n\t                mainRegion\n\t                    .attr('transform', null);\n\t                mainRegion.select('rect').filter($$.isRegionOnX)\n\t                    .attr(\"x\", $$.regionX.bind($$))\n\t                    .attr(\"width\", $$.regionWidth.bind($$));\n\t\n\t                if (config.interaction_enabled) {\n\t                    $$.redrawEventRect();\n\t                }\n\t\n\t                // callback for end of flow\n\t                done();\n\t\n\t                $$.flowing = false;\n\t            });\n\t        };\n\t    };\n\t\n\t    c3_chart_fn.selected = function (targetId) {\n\t        var $$ = this.internal, d3 = $$.d3;\n\t        return d3.merge(\n\t            $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(targetId)).selectAll('.' + CLASS.shape)\n\t                .filter(function () { return d3.select(this).classed(CLASS.SELECTED); })\n\t                .map(function (d) { return d.map(function (d) { var data = d.__data__; return data.data ? data.data : data; }); })\n\t        );\n\t    };\n\t    c3_chart_fn.select = function (ids, indices, resetOther) {\n\t        var $$ = this.internal, d3 = $$.d3, config = $$.config;\n\t        if (! config.data_selection_enabled) { return; }\n\t        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n\t            var shape = d3.select(this), id = d.data ? d.data.id : d.id,\n\t                toggle = $$.getToggle(this, d).bind($$),\n\t                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n\t                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n\t                isSelected = shape.classed(CLASS.SELECTED);\n\t            // line/area selection not supported yet\n\t            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n\t                return;\n\t            }\n\t            if (isTargetId && isTargetIndex) {\n\t                if (config.data_selection_isselectable(d) && !isSelected) {\n\t                    toggle(true, shape.classed(CLASS.SELECTED, true), d, i);\n\t                }\n\t            } else if (isDefined(resetOther) && resetOther) {\n\t                if (isSelected) {\n\t                    toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n\t                }\n\t            }\n\t        });\n\t    };\n\t    c3_chart_fn.unselect = function (ids, indices) {\n\t        var $$ = this.internal, d3 = $$.d3, config = $$.config;\n\t        if (! config.data_selection_enabled) { return; }\n\t        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n\t            var shape = d3.select(this), id = d.data ? d.data.id : d.id,\n\t                toggle = $$.getToggle(this, d).bind($$),\n\t                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n\t                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n\t                isSelected = shape.classed(CLASS.SELECTED);\n\t            // line/area selection not supported yet\n\t            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n\t                return;\n\t            }\n\t            if (isTargetId && isTargetIndex) {\n\t                if (config.data_selection_isselectable(d)) {\n\t                    if (isSelected) {\n\t                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n\t                    }\n\t                }\n\t            }\n\t        });\n\t    };\n\t\n\t    c3_chart_fn.transform = function (type, targetIds) {\n\t        var $$ = this.internal,\n\t            options = ['pie', 'donut'].indexOf(type) >= 0 ? {withTransform: true} : null;\n\t        $$.transformTo(targetIds, type, options);\n\t    };\n\t\n\t    c3_chart_internal_fn.transformTo = function (targetIds, type, optionsForRedraw) {\n\t        var $$ = this,\n\t            withTransitionForAxis = !$$.hasArcType(),\n\t            options = optionsForRedraw || {withTransitionForAxis: withTransitionForAxis};\n\t        options.withTransitionForTransform = false;\n\t        $$.transiting = false;\n\t        $$.setTargetType(targetIds, type);\n\t        $$.updateTargets($$.data.targets); // this is needed when transforming to arc\n\t        $$.updateAndRedraw(options);\n\t    };\n\t\n\t    c3_chart_fn.groups = function (groups) {\n\t        var $$ = this.internal, config = $$.config;\n\t        if (isUndefined(groups)) { return config.data_groups; }\n\t        config.data_groups = groups;\n\t        $$.redraw();\n\t        return config.data_groups;\n\t    };\n\t\n\t    c3_chart_fn.xgrids = function (grids) {\n\t        var $$ = this.internal, config = $$.config;\n\t        if (! grids) { return config.grid_x_lines; }\n\t        config.grid_x_lines = grids;\n\t        $$.redrawWithoutRescale();\n\t        return config.grid_x_lines;\n\t    };\n\t    c3_chart_fn.xgrids.add = function (grids) {\n\t        var $$ = this.internal;\n\t        return this.xgrids($$.config.grid_x_lines.concat(grids ? grids : []));\n\t    };\n\t    c3_chart_fn.xgrids.remove = function (params) { // TODO: multiple\n\t        var $$ = this.internal;\n\t        $$.removeGridLines(params, true);\n\t    };\n\t\n\t    c3_chart_fn.ygrids = function (grids) {\n\t        var $$ = this.internal, config = $$.config;\n\t        if (! grids) { return config.grid_y_lines; }\n\t        config.grid_y_lines = grids;\n\t        $$.redrawWithoutRescale();\n\t        return config.grid_y_lines;\n\t    };\n\t    c3_chart_fn.ygrids.add = function (grids) {\n\t        var $$ = this.internal;\n\t        return this.ygrids($$.config.grid_y_lines.concat(grids ? grids : []));\n\t    };\n\t    c3_chart_fn.ygrids.remove = function (params) { // TODO: multiple\n\t        var $$ = this.internal;\n\t        $$.removeGridLines(params, false);\n\t    };\n\t\n\t    c3_chart_fn.regions = function (regions) {\n\t        var $$ = this.internal, config = $$.config;\n\t        if (!regions) { return config.regions; }\n\t        config.regions = regions;\n\t        $$.redrawWithoutRescale();\n\t        return config.regions;\n\t    };\n\t    c3_chart_fn.regions.add = function (regions) {\n\t        var $$ = this.internal, config = $$.config;\n\t        if (!regions) { return config.regions; }\n\t        config.regions = config.regions.concat(regions);\n\t        $$.redrawWithoutRescale();\n\t        return config.regions;\n\t    };\n\t    c3_chart_fn.regions.remove = function (options) {\n\t        var $$ = this.internal, config = $$.config,\n\t            duration, classes, regions;\n\t\n\t        options = options || {};\n\t        duration = $$.getOption(options, \"duration\", config.transition_duration);\n\t        classes = $$.getOption(options, \"classes\", [CLASS.region]);\n\t\n\t        regions = $$.main.select('.' + CLASS.regions).selectAll(classes.map(function (c) { return '.' + c; }));\n\t        (duration ? regions.transition().duration(duration) : regions)\n\t            .style('opacity', 0)\n\t            .remove();\n\t\n\t        config.regions = config.regions.filter(function (region) {\n\t            var found = false;\n\t            if (!region['class']) {\n\t                return true;\n\t            }\n\t            region['class'].split(' ').forEach(function (c) {\n\t                if (classes.indexOf(c) >= 0) { found = true; }\n\t            });\n\t            return !found;\n\t        });\n\t\n\t        return config.regions;\n\t    };\n\t\n\t    c3_chart_fn.data = function (targetIds) {\n\t        var targets = this.internal.data.targets;\n\t        return typeof targetIds === 'undefined' ? targets : targets.filter(function (t) {\n\t            return [].concat(targetIds).indexOf(t.id) >= 0;\n\t        });\n\t    };\n\t    c3_chart_fn.data.shown = function (targetIds) {\n\t        return this.internal.filterTargetsToShow(this.data(targetIds));\n\t    };\n\t    c3_chart_fn.data.values = function (targetId) {\n\t        var targets, values = null;\n\t        if (targetId) {\n\t            targets = this.data(targetId);\n\t            values = targets[0] ? targets[0].values.map(function (d) { return d.value; }) : null;\n\t        }\n\t        return values;\n\t    };\n\t    c3_chart_fn.data.names = function (names) {\n\t        this.internal.clearLegendItemTextBoxCache();\n\t        return this.internal.updateDataAttributes('names', names);\n\t    };\n\t    c3_chart_fn.data.colors = function (colors) {\n\t        return this.internal.updateDataAttributes('colors', colors);\n\t    };\n\t    c3_chart_fn.data.axes = function (axes) {\n\t        return this.internal.updateDataAttributes('axes', axes);\n\t    };\n\t\n\t    c3_chart_fn.category = function (i, category) {\n\t        var $$ = this.internal, config = $$.config;\n\t        if (arguments.length > 1) {\n\t            config.axis_x_categories[i] = category;\n\t            $$.redraw();\n\t        }\n\t        return config.axis_x_categories[i];\n\t    };\n\t    c3_chart_fn.categories = function (categories) {\n\t        var $$ = this.internal, config = $$.config;\n\t        if (!arguments.length) { return config.axis_x_categories; }\n\t        config.axis_x_categories = categories;\n\t        $$.redraw();\n\t        return config.axis_x_categories;\n\t    };\n\t\n\t    // TODO: fix\n\t    c3_chart_fn.color = function (id) {\n\t        var $$ = this.internal;\n\t        return $$.color(id); // more patterns\n\t    };\n\t\n\t    c3_chart_fn.x = function (x) {\n\t        var $$ = this.internal;\n\t        if (arguments.length) {\n\t            $$.updateTargetX($$.data.targets, x);\n\t            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n\t        }\n\t        return $$.data.xs;\n\t    };\n\t    c3_chart_fn.xs = function (xs) {\n\t        var $$ = this.internal;\n\t        if (arguments.length) {\n\t            $$.updateTargetXs($$.data.targets, xs);\n\t            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n\t        }\n\t        return $$.data.xs;\n\t    };\n\t\n\t    c3_chart_fn.axis = function () {};\n\t    c3_chart_fn.axis.labels = function (labels) {\n\t        var $$ = this.internal;\n\t        if (arguments.length) {\n\t            Object.keys(labels).forEach(function (axisId) {\n\t                $$.axis.setLabelText(axisId, labels[axisId]);\n\t            });\n\t            $$.axis.updateLabels();\n\t        }\n\t        // TODO: return some values?\n\t    };\n\t    c3_chart_fn.axis.max = function (max) {\n\t        var $$ = this.internal, config = $$.config;\n\t        if (arguments.length) {\n\t            if (typeof max === 'object') {\n\t                if (isValue(max.x)) { config.axis_x_max = max.x; }\n\t                if (isValue(max.y)) { config.axis_y_max = max.y; }\n\t                if (isValue(max.y2)) { config.axis_y2_max = max.y2; }\n\t            } else {\n\t                config.axis_y_max = config.axis_y2_max = max;\n\t            }\n\t            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n\t        } else {\n\t            return {\n\t                x: config.axis_x_max,\n\t                y: config.axis_y_max,\n\t                y2: config.axis_y2_max\n\t            };\n\t        }\n\t    };\n\t    c3_chart_fn.axis.min = function (min) {\n\t        var $$ = this.internal, config = $$.config;\n\t        if (arguments.length) {\n\t            if (typeof min === 'object') {\n\t                if (isValue(min.x)) { config.axis_x_min = min.x; }\n\t                if (isValue(min.y)) { config.axis_y_min = min.y; }\n\t                if (isValue(min.y2)) { config.axis_y2_min = min.y2; }\n\t            } else {\n\t                config.axis_y_min = config.axis_y2_min = min;\n\t            }\n\t            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n\t        } else {\n\t            return {\n\t                x: config.axis_x_min,\n\t                y: config.axis_y_min,\n\t                y2: config.axis_y2_min\n\t            };\n\t        }\n\t    };\n\t    c3_chart_fn.axis.range = function (range) {\n\t        if (arguments.length) {\n\t            if (isDefined(range.max)) { this.axis.max(range.max); }\n\t            if (isDefined(range.min)) { this.axis.min(range.min); }\n\t        } else {\n\t            return {\n\t                max: this.axis.max(),\n\t                min: this.axis.min()\n\t            };\n\t        }\n\t    };\n\t\n\t    c3_chart_fn.legend = function () {};\n\t    c3_chart_fn.legend.show = function (targetIds) {\n\t        var $$ = this.internal;\n\t        $$.showLegend($$.mapToTargetIds(targetIds));\n\t        $$.updateAndRedraw({withLegend: true});\n\t    };\n\t    c3_chart_fn.legend.hide = function (targetIds) {\n\t        var $$ = this.internal;\n\t        $$.hideLegend($$.mapToTargetIds(targetIds));\n\t        $$.updateAndRedraw({withLegend: true});\n\t    };\n\t\n\t    c3_chart_fn.resize = function (size) {\n\t        var $$ = this.internal, config = $$.config;\n\t        config.size_width = size ? size.width : null;\n\t        config.size_height = size ? size.height : null;\n\t        this.flush();\n\t    };\n\t\n\t    c3_chart_fn.flush = function () {\n\t        var $$ = this.internal;\n\t        $$.updateAndRedraw({withLegend: true, withTransition: false, withTransitionForTransform: false});\n\t    };\n\t\n\t    c3_chart_fn.destroy = function () {\n\t        var $$ = this.internal;\n\t\n\t        window.clearInterval($$.intervalForObserveInserted);\n\t\n\t        if ($$.resizeTimeout !== undefined) {\n\t            window.clearTimeout($$.resizeTimeout);\n\t        }\n\t\n\t        if (window.detachEvent) {\n\t            window.detachEvent('onresize', $$.resizeFunction);\n\t        } else if (window.removeEventListener) {\n\t            window.removeEventListener('resize', $$.resizeFunction);\n\t        } else {\n\t            var wrapper = window.onresize;\n\t            // check if no one else removed our wrapper and remove our resizeFunction from it\n\t            if (wrapper && wrapper.add && wrapper.remove) {\n\t                wrapper.remove($$.resizeFunction);\n\t            }\n\t        }\n\t\n\t        $$.selectChart.classed('c3', false).html(\"\");\n\t\n\t        // MEMO: this is needed because the reference of some elements will not be released, then memory leak will happen.\n\t        Object.keys($$).forEach(function (key) {\n\t            $$[key] = null;\n\t        });\n\t\n\t        return null;\n\t    };\n\t\n\t    c3_chart_fn.tooltip = function () {};\n\t    c3_chart_fn.tooltip.show = function (args) {\n\t        var $$ = this.internal, index, mouse;\n\t\n\t        // determine mouse position on the chart\n\t        if (args.mouse) {\n\t            mouse = args.mouse;\n\t        }\n\t\n\t        // determine focus data\n\t        if (args.data) {\n\t            if ($$.isMultipleX()) {\n\t                // if multiple xs, target point will be determined by mouse\n\t                mouse = [$$.x(args.data.x), $$.getYScale(args.data.id)(args.data.value)];\n\t                index = null;\n\t            } else {\n\t                // TODO: when tooltip_grouped = false\n\t                index = isValue(args.data.index) ? args.data.index : $$.getIndexByX(args.data.x);\n\t            }\n\t        }\n\t        else if (typeof args.x !== 'undefined') {\n\t            index = $$.getIndexByX(args.x);\n\t        }\n\t        else if (typeof args.index !== 'undefined') {\n\t            index = args.index;\n\t        }\n\t\n\t        // emulate mouse events to show\n\t        $$.dispatchEvent('mouseover', index, mouse);\n\t        $$.dispatchEvent('mousemove', index, mouse);\n\t\n\t        $$.config.tooltip_onshow.call($$, args.data);\n\t    };\n\t    c3_chart_fn.tooltip.hide = function () {\n\t        // TODO: get target data by checking the state of focus\n\t        this.internal.dispatchEvent('mouseout', 0);\n\t\n\t        this.internal.config.tooltip_onhide.call(this);\n\t    };\n\t\n\t    // Features:\n\t    // 1. category axis\n\t    // 2. ceil values of translate/x/y to int for half pixel antialiasing\n\t    // 3. multiline tick text\n\t    var tickTextCharSize;\n\t    function c3_axis(d3, params) {\n\t        var scale = d3.scale.linear(), orient = \"bottom\", innerTickSize = 6, outerTickSize, tickPadding = 3, tickValues = null, tickFormat, tickArguments;\n\t\n\t        var tickOffset = 0, tickCulling = true, tickCentered;\n\t\n\t        params = params || {};\n\t        outerTickSize = params.withOuterTick ? 6 : 0;\n\t\n\t        function axisX(selection, x) {\n\t            selection.attr(\"transform\", function (d) {\n\t                return \"translate(\" + Math.ceil(x(d) + tickOffset) + \", 0)\";\n\t            });\n\t        }\n\t        function axisY(selection, y) {\n\t            selection.attr(\"transform\", function (d) {\n\t                return \"translate(0,\" + Math.ceil(y(d)) + \")\";\n\t            });\n\t        }\n\t        function scaleExtent(domain) {\n\t            var start = domain[0], stop = domain[domain.length - 1];\n\t            return start < stop ? [ start, stop ] : [ stop, start ];\n\t        }\n\t        function generateTicks(scale) {\n\t            var i, domain, ticks = [];\n\t            if (scale.ticks) {\n\t                return scale.ticks.apply(scale, tickArguments);\n\t            }\n\t            domain = scale.domain();\n\t            for (i = Math.ceil(domain[0]); i < domain[1]; i++) {\n\t                ticks.push(i);\n\t            }\n\t            if (ticks.length > 0 && ticks[0] > 0) {\n\t                ticks.unshift(ticks[0] - (ticks[1] - ticks[0]));\n\t            }\n\t            return ticks;\n\t        }\n\t        function copyScale() {\n\t            var newScale = scale.copy(), domain;\n\t            if (params.isCategory) {\n\t                domain = scale.domain();\n\t                newScale.domain([domain[0], domain[1] - 1]);\n\t            }\n\t            return newScale;\n\t        }\n\t        function textFormatted(v) {\n\t            var formatted = tickFormat ? tickFormat(v) : v;\n\t            return typeof formatted !== 'undefined' ? formatted : '';\n\t        }\n\t        function getSizeFor1Char(tick) {\n\t            if (tickTextCharSize) {\n\t                return tickTextCharSize;\n\t            }\n\t            var size = {\n\t                h: 11.5,\n\t                w: 5.5\n\t            };\n\t            tick.select('text').text(textFormatted).each(function (d) {\n\t                var box = this.getBoundingClientRect(),\n\t                    text = textFormatted(d),\n\t                    h = box.height,\n\t                    w = text ? (box.width / text.length) : undefined;\n\t                if (h && w) {\n\t                    size.h = h;\n\t                    size.w = w;\n\t                }\n\t            }).text('');\n\t            tickTextCharSize = size;\n\t            return size;\n\t        }\n\t        function transitionise(selection) {\n\t            return params.withoutTransition ? selection : d3.transition(selection);\n\t        }\n\t        function axis(g) {\n\t            g.each(function () {\n\t                var g = axis.g = d3.select(this);\n\t\n\t                var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = copyScale();\n\t\n\t                var ticks = tickValues ? tickValues : generateTicks(scale1),\n\t                    tick = g.selectAll(\".tick\").data(ticks, scale1),\n\t                    tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", 1e-6),\n\t                    // MEMO: No exit transition. The reason is this transition affects max tick width calculation because old tick will be included in the ticks.\n\t                    tickExit = tick.exit().remove(),\n\t                    tickUpdate = transitionise(tick).style(\"opacity\", 1),\n\t                    tickTransform, tickX, tickY;\n\t\n\t                var range = scale.rangeExtent ? scale.rangeExtent() : scaleExtent(scale.range()),\n\t                    path = g.selectAll(\".domain\").data([ 0 ]),\n\t                    pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), transitionise(path));\n\t                tickEnter.append(\"line\");\n\t                tickEnter.append(\"text\");\n\t\n\t                var lineEnter = tickEnter.select(\"line\"),\n\t                    lineUpdate = tickUpdate.select(\"line\"),\n\t                    textEnter = tickEnter.select(\"text\"),\n\t                    textUpdate = tickUpdate.select(\"text\");\n\t\n\t                if (params.isCategory) {\n\t                    tickOffset = Math.ceil((scale1(1) - scale1(0)) / 2);\n\t                    tickX = tickCentered ? 0 : tickOffset;\n\t                    tickY = tickCentered ? tickOffset : 0;\n\t                } else {\n\t                    tickOffset = tickX = 0;\n\t                }\n\t\n\t                var text, tspan, sizeFor1Char = getSizeFor1Char(g.select('.tick')), counts = [];\n\t                var tickLength = Math.max(innerTickSize, 0) + tickPadding,\n\t                    isVertical = orient === 'left' || orient === 'right';\n\t\n\t                // this should be called only when category axis\n\t                function splitTickText(d, maxWidth) {\n\t                    var tickText = textFormatted(d),\n\t                        subtext, spaceIndex, textWidth, splitted = [];\n\t\n\t                    if (Object.prototype.toString.call(tickText) === \"[object Array]\") {\n\t                        return tickText;\n\t                    }\n\t\n\t                    if (!maxWidth || maxWidth <= 0) {\n\t                        maxWidth = isVertical ? 95 : params.isCategory ? (Math.ceil(scale1(ticks[1]) - scale1(ticks[0])) - 12) : 110;\n\t                    }\n\t\n\t                    function split(splitted, text) {\n\t                        spaceIndex = undefined;\n\t                        for (var i = 1; i < text.length; i++) {\n\t                            if (text.charAt(i) === ' ') {\n\t                                spaceIndex = i;\n\t                            }\n\t                            subtext = text.substr(0, i + 1);\n\t                            textWidth = sizeFor1Char.w * subtext.length;\n\t                            // if text width gets over tick width, split by space index or crrent index\n\t                            if (maxWidth < textWidth) {\n\t                                return split(\n\t                                    splitted.concat(text.substr(0, spaceIndex ? spaceIndex : i)),\n\t                                    text.slice(spaceIndex ? spaceIndex + 1 : i)\n\t                                );\n\t                            }\n\t                        }\n\t                        return splitted.concat(text);\n\t                    }\n\t\n\t                    return split(splitted, tickText + \"\");\n\t                }\n\t\n\t                function tspanDy(d, i) {\n\t                    var dy = sizeFor1Char.h;\n\t                    if (i === 0) {\n\t                        if (orient === 'left' || orient === 'right') {\n\t                            dy = -((counts[d.index] - 1) * (sizeFor1Char.h / 2) - 3);\n\t                        } else {\n\t                            dy = \".71em\";\n\t                        }\n\t                    }\n\t                    return dy;\n\t                }\n\t\n\t                function tickSize(d) {\n\t                    var tickPosition = scale(d) + (tickCentered ? 0 : tickOffset);\n\t                    return range[0] < tickPosition && tickPosition < range[1] ? innerTickSize : 0;\n\t                }\n\t\n\t                text = tick.select(\"text\");\n\t                tspan = text.selectAll('tspan')\n\t                    .data(function (d, i) {\n\t                        var splitted = params.tickMultiline ? splitTickText(d, params.tickWidth) : [].concat(textFormatted(d));\n\t                        counts[i] = splitted.length;\n\t                        return splitted.map(function (s) {\n\t                            return { index: i, splitted: s };\n\t                        });\n\t                    });\n\t                tspan.enter().append('tspan');\n\t                tspan.exit().remove();\n\t                tspan.text(function (d) { return d.splitted; });\n\t\n\t                var rotate = params.tickTextRotate;\n\t\n\t                function textAnchorForText(rotate) {\n\t                    if (!rotate) {\n\t                        return 'middle';\n\t                    }\n\t                    return rotate > 0 ? \"start\" : \"end\";\n\t                }\n\t                function textTransform(rotate) {\n\t                    if (!rotate) {\n\t                        return '';\n\t                    }\n\t                    return \"rotate(\" + rotate + \")\";\n\t                }\n\t                function dxForText(rotate) {\n\t                    if (!rotate) {\n\t                        return 0;\n\t                    }\n\t                    return 8 * Math.sin(Math.PI * (rotate / 180));\n\t                }\n\t                function yForText(rotate) {\n\t                    if (!rotate) {\n\t                        return tickLength;\n\t                    }\n\t                    return 11.5 - 2.5 * (rotate / 15) * (rotate > 0 ? 1 : -1);\n\t                }\n\t\n\t                switch (orient) {\n\t                case \"bottom\":\n\t                    {\n\t                        tickTransform = axisX;\n\t                        lineEnter.attr(\"y2\", innerTickSize);\n\t                        textEnter.attr(\"y\", tickLength);\n\t                        lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", tickSize);\n\t                        textUpdate.attr(\"x\", 0).attr(\"y\", yForText(rotate))\n\t                            .style(\"text-anchor\", textAnchorForText(rotate))\n\t                            .attr(\"transform\", textTransform(rotate));\n\t                        tspan.attr('x', 0).attr(\"dy\", tspanDy).attr('dx', dxForText(rotate));\n\t                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n\t                        break;\n\t                    }\n\t                case \"top\":\n\t                    {\n\t                        // TODO: rotated tick text\n\t                        tickTransform = axisX;\n\t                        lineEnter.attr(\"y2\", -innerTickSize);\n\t                        textEnter.attr(\"y\", -tickLength);\n\t                        lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n\t                        textUpdate.attr(\"x\", 0).attr(\"y\", -tickLength);\n\t                        text.style(\"text-anchor\", \"middle\");\n\t                        tspan.attr('x', 0).attr(\"dy\", \"0em\");\n\t                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n\t                        break;\n\t                    }\n\t                case \"left\":\n\t                    {\n\t                        tickTransform = axisY;\n\t                        lineEnter.attr(\"x2\", -innerTickSize);\n\t                        textEnter.attr(\"x\", -tickLength);\n\t                        lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n\t                        textUpdate.attr(\"x\", -tickLength).attr(\"y\", tickOffset);\n\t                        text.style(\"text-anchor\", \"end\");\n\t                        tspan.attr('x', -tickLength).attr(\"dy\", tspanDy);\n\t                        pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n\t                        break;\n\t                    }\n\t                case \"right\":\n\t                    {\n\t                        tickTransform = axisY;\n\t                        lineEnter.attr(\"x2\", innerTickSize);\n\t                        textEnter.attr(\"x\", tickLength);\n\t                        lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n\t                        textUpdate.attr(\"x\", tickLength).attr(\"y\", 0);\n\t                        text.style(\"text-anchor\", \"start\");\n\t                        tspan.attr('x', tickLength).attr(\"dy\", tspanDy);\n\t                        pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n\t                        break;\n\t                    }\n\t                }\n\t                if (scale1.rangeBand) {\n\t                    var x = scale1, dx = x.rangeBand() / 2;\n\t                    scale0 = scale1 = function (d) {\n\t                        return x(d) + dx;\n\t                    };\n\t                } else if (scale0.rangeBand) {\n\t                    scale0 = scale1;\n\t                } else {\n\t                    tickExit.call(tickTransform, scale1);\n\t                }\n\t                tickEnter.call(tickTransform, scale0);\n\t                tickUpdate.call(tickTransform, scale1);\n\t            });\n\t        }\n\t        axis.scale = function (x) {\n\t            if (!arguments.length) { return scale; }\n\t            scale = x;\n\t            return axis;\n\t        };\n\t        axis.orient = function (x) {\n\t            if (!arguments.length) { return orient; }\n\t            orient = x in {top: 1, right: 1, bottom: 1, left: 1} ? x + \"\" : \"bottom\";\n\t            return axis;\n\t        };\n\t        axis.tickFormat = function (format) {\n\t            if (!arguments.length) { return tickFormat; }\n\t            tickFormat = format;\n\t            return axis;\n\t        };\n\t        axis.tickCentered = function (isCentered) {\n\t            if (!arguments.length) { return tickCentered; }\n\t            tickCentered = isCentered;\n\t            return axis;\n\t        };\n\t        axis.tickOffset = function () {\n\t            return tickOffset;\n\t        };\n\t        axis.tickInterval = function () {\n\t            var interval, length;\n\t            if (params.isCategory) {\n\t                interval = tickOffset * 2;\n\t            }\n\t            else {\n\t                length = axis.g.select('path.domain').node().getTotalLength() - outerTickSize * 2;\n\t                interval = length / axis.g.selectAll('line').size();\n\t            }\n\t            return interval === Infinity ? 0 : interval;\n\t        };\n\t        axis.ticks = function () {\n\t            if (!arguments.length) { return tickArguments; }\n\t            tickArguments = arguments;\n\t            return axis;\n\t        };\n\t        axis.tickCulling = function (culling) {\n\t            if (!arguments.length) { return tickCulling; }\n\t            tickCulling = culling;\n\t            return axis;\n\t        };\n\t        axis.tickValues = function (x) {\n\t            if (typeof x === 'function') {\n\t                tickValues = function () {\n\t                    return x(scale.domain());\n\t                };\n\t            }\n\t            else {\n\t                if (!arguments.length) { return tickValues; }\n\t                tickValues = x;\n\t            }\n\t            return axis;\n\t        };\n\t        return axis;\n\t    }\n\t\n\t    c3_chart_internal_fn.isSafari = function () {\n\t        var ua = window.navigator.userAgent;\n\t        return ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;\n\t    };\n\t    c3_chart_internal_fn.isChrome = function () {\n\t        var ua = window.navigator.userAgent;\n\t        return ua.indexOf('Chrome') >= 0;\n\t    };\n\t\n\t    /* jshint ignore:start */\n\t\n\t    // PhantomJS doesn't have support for Function.prototype.bind, which has caused confusion. Use\n\t    // this polyfill to avoid the confusion.\n\t    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\n\t\n\t    if (!Function.prototype.bind) {\n\t      Function.prototype.bind = function(oThis) {\n\t        if (typeof this !== 'function') {\n\t          // closest thing possible to the ECMAScript 5\n\t          // internal IsCallable function\n\t          throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n\t        }\n\t\n\t        var aArgs   = Array.prototype.slice.call(arguments, 1),\n\t            fToBind = this,\n\t            fNOP    = function() {},\n\t            fBound  = function() {\n\t              return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n\t            };\n\t\n\t        fNOP.prototype = this.prototype;\n\t        fBound.prototype = new fNOP();\n\t\n\t        return fBound;\n\t      };\n\t    }\n\t\n\t    //SVGPathSeg API polyfill\n\t    //https://github.com/progers/pathseg\n\t    //\n\t    //This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from\n\t    //SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec\n\t    //changes which were implemented in Firefox 43 and Chrome 46.\n\t    //Chrome 48 removes these APIs, so this polyfill is required.\n\t\n\t    (function() { \"use strict\";\n\t     if (!(\"SVGPathSeg\" in window)) {\n\t         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg\n\t         window.SVGPathSeg = function(type, typeAsLetter, owningPathSegList) {\n\t             this.pathSegType = type;\n\t             this.pathSegTypeAsLetter = typeAsLetter;\n\t             this._owningPathSegList = owningPathSegList;\n\t         }\n\t\n\t         SVGPathSeg.PATHSEG_UNKNOWN = 0;\n\t         SVGPathSeg.PATHSEG_CLOSEPATH = 1;\n\t         SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\n\t         SVGPathSeg.PATHSEG_MOVETO_REL = 3;\n\t         SVGPathSeg.PATHSEG_LINETO_ABS = 4;\n\t         SVGPathSeg.PATHSEG_LINETO_REL = 5;\n\t         SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\n\t         SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\n\t         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\n\t         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\n\t         SVGPathSeg.PATHSEG_ARC_ABS = 10;\n\t         SVGPathSeg.PATHSEG_ARC_REL = 11;\n\t         SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\n\t         SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\n\t         SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\n\t         SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\n\t         SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\n\t         SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\n\t         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\n\t         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\n\t\n\t         // Notify owning PathSegList on any changes so they can be synchronized back to the path element.\n\t         SVGPathSeg.prototype._segmentChanged = function() {\n\t             if (this._owningPathSegList)\n\t                 this._owningPathSegList.segmentChanged(this);\n\t         }\n\t\n\t         window.SVGPathSegClosePath = function(owningPathSegList) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CLOSEPATH, \"z\", owningPathSegList);\n\t         }\n\t         SVGPathSegClosePath.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegClosePath.prototype.toString = function() { return \"[object SVGPathSegClosePath]\"; }\n\t         SVGPathSegClosePath.prototype._asPathString = function() { return this.pathSegTypeAsLetter; }\n\t         SVGPathSegClosePath.prototype.clone = function() { return new SVGPathSegClosePath(undefined); }\n\t\n\t         window.SVGPathSegMovetoAbs = function(owningPathSegList, x, y) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_MOVETO_ABS, \"M\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t         }\n\t         SVGPathSegMovetoAbs.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegMovetoAbs.prototype.toString = function() { return \"[object SVGPathSegMovetoAbs]\"; }\n\t         SVGPathSegMovetoAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegMovetoAbs.prototype.clone = function() { return new SVGPathSegMovetoAbs(undefined, this._x, this._y); }\n\t         Object.defineProperty(SVGPathSegMovetoAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegMovetoAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegMovetoRel = function(owningPathSegList, x, y) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_MOVETO_REL, \"m\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t         }\n\t         SVGPathSegMovetoRel.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegMovetoRel.prototype.toString = function() { return \"[object SVGPathSegMovetoRel]\"; }\n\t         SVGPathSegMovetoRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegMovetoRel.prototype.clone = function() { return new SVGPathSegMovetoRel(undefined, this._x, this._y); }\n\t         Object.defineProperty(SVGPathSegMovetoRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegMovetoRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegLinetoAbs = function(owningPathSegList, x, y) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_ABS, \"L\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t         }\n\t         SVGPathSegLinetoAbs.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegLinetoAbs.prototype.toString = function() { return \"[object SVGPathSegLinetoAbs]\"; }\n\t         SVGPathSegLinetoAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegLinetoAbs.prototype.clone = function() { return new SVGPathSegLinetoAbs(undefined, this._x, this._y); }\n\t         Object.defineProperty(SVGPathSegLinetoAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegLinetoAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegLinetoRel = function(owningPathSegList, x, y) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_REL, \"l\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t         }\n\t         SVGPathSegLinetoRel.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegLinetoRel.prototype.toString = function() { return \"[object SVGPathSegLinetoRel]\"; }\n\t         SVGPathSegLinetoRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegLinetoRel.prototype.clone = function() { return new SVGPathSegLinetoRel(undefined, this._x, this._y); }\n\t         Object.defineProperty(SVGPathSegLinetoRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegLinetoRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegCurvetoCubicAbs = function(owningPathSegList, x, y, x1, y1, x2, y2) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, \"C\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t             this._x1 = x1;\n\t             this._y1 = y1;\n\t             this._x2 = x2;\n\t             this._y2 = y2;\n\t         }\n\t         SVGPathSegCurvetoCubicAbs.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegCurvetoCubicAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicAbs]\"; }\n\t         SVGPathSegCurvetoCubicAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegCurvetoCubicAbs.prototype.clone = function() { return new SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2); }\n\t         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegCurvetoCubicRel = function(owningPathSegList, x, y, x1, y1, x2, y2) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, \"c\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t             this._x1 = x1;\n\t             this._y1 = y1;\n\t             this._x2 = x2;\n\t             this._y2 = y2;\n\t         }\n\t         SVGPathSegCurvetoCubicRel.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegCurvetoCubicRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicRel]\"; }\n\t         SVGPathSegCurvetoCubicRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegCurvetoCubicRel.prototype.clone = function() { return new SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2); }\n\t         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegCurvetoQuadraticAbs = function(owningPathSegList, x, y, x1, y1) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, \"Q\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t             this._x1 = x1;\n\t             this._y1 = y1;\n\t         }\n\t         SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegCurvetoQuadraticAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticAbs]\"; }\n\t         SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegCurvetoQuadraticAbs.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1); }\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegCurvetoQuadraticRel = function(owningPathSegList, x, y, x1, y1) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, \"q\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t             this._x1 = x1;\n\t             this._y1 = y1;\n\t         }\n\t         SVGPathSegCurvetoQuadraticRel.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegCurvetoQuadraticRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticRel]\"; }\n\t         SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegCurvetoQuadraticRel.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1); }\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegArcAbs = function(owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_ARC_ABS, \"A\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t             this._r1 = r1;\n\t             this._r2 = r2;\n\t             this._angle = angle;\n\t             this._largeArcFlag = largeArcFlag;\n\t             this._sweepFlag = sweepFlag;\n\t         }\n\t         SVGPathSegArcAbs.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegArcAbs.prototype.toString = function() { return \"[object SVGPathSegArcAbs]\"; }\n\t         SVGPathSegArcAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegArcAbs.prototype.clone = function() { return new SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag); }\n\t         Object.defineProperty(SVGPathSegArcAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcAbs.prototype, \"r1\", { get: function() { return this._r1; }, set: function(r1) { this._r1 = r1; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcAbs.prototype, \"r2\", { get: function() { return this._r2; }, set: function(r2) { this._r2 = r2; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcAbs.prototype, \"angle\", { get: function() { return this._angle; }, set: function(angle) { this._angle = angle; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcAbs.prototype, \"largeArcFlag\", { get: function() { return this._largeArcFlag; }, set: function(largeArcFlag) { this._largeArcFlag = largeArcFlag; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcAbs.prototype, \"sweepFlag\", { get: function() { return this._sweepFlag; }, set: function(sweepFlag) { this._sweepFlag = sweepFlag; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegArcRel = function(owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_ARC_REL, \"a\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t             this._r1 = r1;\n\t             this._r2 = r2;\n\t             this._angle = angle;\n\t             this._largeArcFlag = largeArcFlag;\n\t             this._sweepFlag = sweepFlag;\n\t         }\n\t         SVGPathSegArcRel.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegArcRel.prototype.toString = function() { return \"[object SVGPathSegArcRel]\"; }\n\t         SVGPathSegArcRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegArcRel.prototype.clone = function() { return new SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag); }\n\t         Object.defineProperty(SVGPathSegArcRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcRel.prototype, \"r1\", { get: function() { return this._r1; }, set: function(r1) { this._r1 = r1; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcRel.prototype, \"r2\", { get: function() { return this._r2; }, set: function(r2) { this._r2 = r2; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcRel.prototype, \"angle\", { get: function() { return this._angle; }, set: function(angle) { this._angle = angle; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcRel.prototype, \"largeArcFlag\", { get: function() { return this._largeArcFlag; }, set: function(largeArcFlag) { this._largeArcFlag = largeArcFlag; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegArcRel.prototype, \"sweepFlag\", { get: function() { return this._sweepFlag; }, set: function(sweepFlag) { this._sweepFlag = sweepFlag; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegLinetoHorizontalAbs = function(owningPathSegList, x) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, \"H\", owningPathSegList);\n\t             this._x = x;\n\t         }\n\t         SVGPathSegLinetoHorizontalAbs.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegLinetoHorizontalAbs.prototype.toString = function() { return \"[object SVGPathSegLinetoHorizontalAbs]\"; }\n\t         SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x; }\n\t         SVGPathSegLinetoHorizontalAbs.prototype.clone = function() { return new SVGPathSegLinetoHorizontalAbs(undefined, this._x); }\n\t         Object.defineProperty(SVGPathSegLinetoHorizontalAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegLinetoHorizontalRel = function(owningPathSegList, x) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, \"h\", owningPathSegList);\n\t             this._x = x;\n\t         }\n\t         SVGPathSegLinetoHorizontalRel.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegLinetoHorizontalRel.prototype.toString = function() { return \"[object SVGPathSegLinetoHorizontalRel]\"; }\n\t         SVGPathSegLinetoHorizontalRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x; }\n\t         SVGPathSegLinetoHorizontalRel.prototype.clone = function() { return new SVGPathSegLinetoHorizontalRel(undefined, this._x); }\n\t         Object.defineProperty(SVGPathSegLinetoHorizontalRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegLinetoVerticalAbs = function(owningPathSegList, y) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, \"V\", owningPathSegList);\n\t             this._y = y;\n\t         }\n\t         SVGPathSegLinetoVerticalAbs.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegLinetoVerticalAbs.prototype.toString = function() { return \"[object SVGPathSegLinetoVerticalAbs]\"; }\n\t         SVGPathSegLinetoVerticalAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._y; }\n\t         SVGPathSegLinetoVerticalAbs.prototype.clone = function() { return new SVGPathSegLinetoVerticalAbs(undefined, this._y); }\n\t         Object.defineProperty(SVGPathSegLinetoVerticalAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegLinetoVerticalRel = function(owningPathSegList, y) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, \"v\", owningPathSegList);\n\t             this._y = y;\n\t         }\n\t         SVGPathSegLinetoVerticalRel.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegLinetoVerticalRel.prototype.toString = function() { return \"[object SVGPathSegLinetoVerticalRel]\"; }\n\t         SVGPathSegLinetoVerticalRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._y; }\n\t         SVGPathSegLinetoVerticalRel.prototype.clone = function() { return new SVGPathSegLinetoVerticalRel(undefined, this._y); }\n\t         Object.defineProperty(SVGPathSegLinetoVerticalRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegCurvetoCubicSmoothAbs = function(owningPathSegList, x, y, x2, y2) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, \"S\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t             this._x2 = x2;\n\t             this._y2 = y2;\n\t         }\n\t         SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicSmoothAbs]\"; }\n\t         SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function() { return new SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2); }\n\t         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegCurvetoCubicSmoothRel = function(owningPathSegList, x, y, x2, y2) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, \"s\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t             this._x2 = x2;\n\t             this._y2 = y2;\n\t         }\n\t         SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicSmoothRel]\"; }\n\t         SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function() { return new SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2); }\n\t         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegCurvetoQuadraticSmoothAbs = function(owningPathSegList, x, y) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, \"T\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t         }\n\t         SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticSmoothAbs]\"; }\n\t         SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y); }\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t\n\t         window.SVGPathSegCurvetoQuadraticSmoothRel = function(owningPathSegList, x, y) {\n\t             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, \"t\", owningPathSegList);\n\t             this._x = x;\n\t             this._y = y;\n\t         }\n\t         SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(SVGPathSeg.prototype);\n\t         SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticSmoothRel]\"; }\n\t         SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n\t         SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y); }\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\t         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\t\n\t         // Add createSVGPathSeg* functions to SVGPathElement.\n\t         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathElement.\n\t         SVGPathElement.prototype.createSVGPathSegClosePath = function() { return new SVGPathSegClosePath(undefined); }\n\t         SVGPathElement.prototype.createSVGPathSegMovetoAbs = function(x, y) { return new SVGPathSegMovetoAbs(undefined, x, y); }\n\t         SVGPathElement.prototype.createSVGPathSegMovetoRel = function(x, y) { return new SVGPathSegMovetoRel(undefined, x, y); }\n\t         SVGPathElement.prototype.createSVGPathSegLinetoAbs = function(x, y) { return new SVGPathSegLinetoAbs(undefined, x, y); }\n\t         SVGPathElement.prototype.createSVGPathSegLinetoRel = function(x, y) { return new SVGPathSegLinetoRel(undefined, x, y); }\n\t         SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function(x, y, x1, y1, x2, y2) { return new SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2); }\n\t         SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function(x, y, x1, y1, x2, y2) { return new SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2); }\n\t         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function(x, y, x1, y1) { return new SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1); }\n\t         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function(x, y, x1, y1) { return new SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1); }\n\t         SVGPathElement.prototype.createSVGPathSegArcAbs = function(x, y, r1, r2, angle, largeArcFlag, sweepFlag) { return new SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag); }\n\t         SVGPathElement.prototype.createSVGPathSegArcRel = function(x, y, r1, r2, angle, largeArcFlag, sweepFlag) { return new SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag); }\n\t         SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function(x) { return new SVGPathSegLinetoHorizontalAbs(undefined, x); }\n\t         SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function(x) { return new SVGPathSegLinetoHorizontalRel(undefined, x); }\n\t         SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function(y) { return new SVGPathSegLinetoVerticalAbs(undefined, y); }\n\t         SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function(y) { return new SVGPathSegLinetoVerticalRel(undefined, y); }\n\t         SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function(x, y, x2, y2) { return new SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2); }\n\t         SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function(x, y, x2, y2) { return new SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2); }\n\t         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function(x, y) { return new SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y); }\n\t         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function(x, y) { return new SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y); }\n\t     }\n\t\n\t     if (!(\"SVGPathSegList\" in window)) {\n\t         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList\n\t         window.SVGPathSegList = function(pathElement) {\n\t             this._pathElement = pathElement;\n\t             this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n\t\n\t             // Use a MutationObserver to catch changes to the path's \"d\" attribute.\n\t             this._mutationObserverConfig = { \"attributes\": true, \"attributeFilter\": [\"d\"] };\n\t             this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\n\t             this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n\t         }\n\t\n\t         Object.defineProperty(SVGPathSegList.prototype, \"numberOfItems\", {\n\t             get: function() {\n\t                 this._checkPathSynchronizedToList();\n\t                 return this._list.length;\n\t             },\n\t             enumerable: true\n\t         });\n\t\n\t         // Add the pathSegList accessors to SVGPathElement.\n\t         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData\n\t         Object.defineProperty(SVGPathElement.prototype, \"pathSegList\", {\n\t             get: function() {\n\t                 if (!this._pathSegList)\n\t                     this._pathSegList = new SVGPathSegList(this);\n\t                 return this._pathSegList;\n\t             },\n\t             enumerable: true\n\t         });\n\t         // FIXME: The following are not implemented and simply return SVGPathElement.pathSegList.\n\t         Object.defineProperty(SVGPathElement.prototype, \"normalizedPathSegList\", { get: function() { return this.pathSegList; }, enumerable: true });\n\t         Object.defineProperty(SVGPathElement.prototype, \"animatedPathSegList\", { get: function() { return this.pathSegList; }, enumerable: true });\n\t         Object.defineProperty(SVGPathElement.prototype, \"animatedNormalizedPathSegList\", { get: function() { return this.pathSegList; }, enumerable: true });\n\t\n\t         // Process any pending mutations to the path element and update the list as needed.\n\t         // This should be the first call of all public functions and is needed because\n\t         // MutationObservers are not synchronous so we can have pending asynchronous mutations.\n\t         SVGPathSegList.prototype._checkPathSynchronizedToList = function() {\n\t             this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\n\t         }\n\t\n\t         SVGPathSegList.prototype._updateListFromPathMutations = function(mutationRecords) {\n\t             if (!this._pathElement)\n\t                 return;\n\t             var hasPathMutations = false;\n\t             mutationRecords.forEach(function(record) {\n\t                 if (record.attributeName == \"d\")\n\t                     hasPathMutations = true;\n\t             });\n\t             if (hasPathMutations)\n\t                 this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n\t         }\n\t\n\t         // Serialize the list and update the path's 'd' attribute.\n\t         SVGPathSegList.prototype._writeListToPath = function() {\n\t             this._pathElementMutationObserver.disconnect();\n\t             this._pathElement.setAttribute(\"d\", SVGPathSegList._pathSegArrayAsString(this._list));\n\t             this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n\t         }\n\t\n\t         // When a path segment changes the list needs to be synchronized back to the path element.\n\t         SVGPathSegList.prototype.segmentChanged = function(pathSeg) {\n\t             this._writeListToPath();\n\t         }\n\t\n\t         SVGPathSegList.prototype.clear = function() {\n\t             this._checkPathSynchronizedToList();\n\t\n\t             this._list.forEach(function(pathSeg) {\n\t                 pathSeg._owningPathSegList = null;\n\t             });\n\t             this._list = [];\n\t             this._writeListToPath();\n\t         }\n\t\n\t         SVGPathSegList.prototype.initialize = function(newItem) {\n\t             this._checkPathSynchronizedToList();\n\t\n\t             this._list = [newItem];\n\t             newItem._owningPathSegList = this;\n\t             this._writeListToPath();\n\t             return newItem;\n\t         }\n\t\n\t         SVGPathSegList.prototype._checkValidIndex = function(index) {\n\t             if (isNaN(index) || index < 0 || index >= this.numberOfItems)\n\t                 throw \"INDEX_SIZE_ERR\";\n\t         }\n\t\n\t         SVGPathSegList.prototype.getItem = function(index) {\n\t             this._checkPathSynchronizedToList();\n\t\n\t             this._checkValidIndex(index);\n\t             return this._list[index];\n\t         }\n\t\n\t         SVGPathSegList.prototype.insertItemBefore = function(newItem, index) {\n\t             this._checkPathSynchronizedToList();\n\t\n\t             // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.\n\t             if (index > this.numberOfItems)\n\t                 index = this.numberOfItems;\n\t             if (newItem._owningPathSegList) {\n\t                 // SVG2 spec says to make a copy.\n\t                 newItem = newItem.clone();\n\t             }\n\t             this._list.splice(index, 0, newItem);\n\t             newItem._owningPathSegList = this;\n\t             this._writeListToPath();\n\t             return newItem;\n\t         }\n\t\n\t         SVGPathSegList.prototype.replaceItem = function(newItem, index) {\n\t             this._checkPathSynchronizedToList();\n\t\n\t             if (newItem._owningPathSegList) {\n\t                 // SVG2 spec says to make a copy.\n\t                 newItem = newItem.clone();\n\t             }\n\t             this._checkValidIndex(index);\n\t             this._list[index] = newItem;\n\t             newItem._owningPathSegList = this;\n\t             this._writeListToPath();\n\t             return newItem;\n\t         }\n\t\n\t         SVGPathSegList.prototype.removeItem = function(index) {\n\t             this._checkPathSynchronizedToList();\n\t\n\t             this._checkValidIndex(index);\n\t             var item = this._list[index];\n\t             this._list.splice(index, 1);\n\t             this._writeListToPath();\n\t             return item;\n\t         }\n\t\n\t         SVGPathSegList.prototype.appendItem = function(newItem) {\n\t             this._checkPathSynchronizedToList();\n\t\n\t             if (newItem._owningPathSegList) {\n\t                 // SVG2 spec says to make a copy.\n\t                 newItem = newItem.clone();\n\t             }\n\t             this._list.push(newItem);\n\t             newItem._owningPathSegList = this;\n\t             // TODO: Optimize this to just append to the existing attribute.\n\t             this._writeListToPath();\n\t             return newItem;\n\t         }\n\t\n\t         SVGPathSegList._pathSegArrayAsString = function(pathSegArray) {\n\t             var string = \"\";\n\t             var first = true;\n\t             pathSegArray.forEach(function(pathSeg) {\n\t                 if (first) {\n\t                     first = false;\n\t                     string += pathSeg._asPathString();\n\t                 } else {\n\t                     string += \" \" + pathSeg._asPathString();\n\t                 }\n\t             });\n\t             return string;\n\t         }\n\t\n\t         // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.\n\t         SVGPathSegList.prototype._parsePath = function(string) {\n\t             if (!string || string.length == 0)\n\t                 return [];\n\t\n\t             var owningPathSegList = this;\n\t\n\t             var Builder = function() {\n\t                 this.pathSegList = [];\n\t             }\n\t\n\t             Builder.prototype.appendSegment = function(pathSeg) {\n\t                 this.pathSegList.push(pathSeg);\n\t             }\n\t\n\t             var Source = function(string) {\n\t                 this._string = string;\n\t                 this._currentIndex = 0;\n\t                 this._endIndex = this._string.length;\n\t                 this._previousCommand = SVGPathSeg.PATHSEG_UNKNOWN;\n\t\n\t                 this._skipOptionalSpaces();\n\t             }\n\t\n\t             Source.prototype._isCurrentSpace = function() {\n\t                 var character = this._string[this._currentIndex];\n\t                 return character <= \" \" && (character == \" \" || character == \"\\n\" || character == \"\\t\" || character == \"\\r\" || character == \"\\f\");\n\t             }\n\t\n\t             Source.prototype._skipOptionalSpaces = function() {\n\t                 while (this._currentIndex < this._endIndex && this._isCurrentSpace())\n\t                     this._currentIndex++;\n\t                 return this._currentIndex < this._endIndex;\n\t             }\n\t\n\t             Source.prototype._skipOptionalSpacesOrDelimiter = function() {\n\t                 if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != \",\")\n\t                     return false;\n\t                 if (this._skipOptionalSpaces()) {\n\t                     if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \",\") {\n\t                         this._currentIndex++;\n\t                         this._skipOptionalSpaces();\n\t                     }\n\t                 }\n\t                 return this._currentIndex < this._endIndex;\n\t             }\n\t\n\t             Source.prototype.hasMoreData = function() {\n\t                 return this._currentIndex < this._endIndex;\n\t             }\n\t\n\t             Source.prototype.peekSegmentType = function() {\n\t                 var lookahead = this._string[this._currentIndex];\n\t                 return this._pathSegTypeFromChar(lookahead);\n\t             }\n\t\n\t             Source.prototype._pathSegTypeFromChar = function(lookahead) {\n\t                 switch (lookahead) {\n\t                 case \"Z\":\n\t                 case \"z\":\n\t                     return SVGPathSeg.PATHSEG_CLOSEPATH;\n\t                 case \"M\":\n\t                     return SVGPathSeg.PATHSEG_MOVETO_ABS;\n\t                 case \"m\":\n\t                     return SVGPathSeg.PATHSEG_MOVETO_REL;\n\t                 case \"L\":\n\t                     return SVGPathSeg.PATHSEG_LINETO_ABS;\n\t                 case \"l\":\n\t                     return SVGPathSeg.PATHSEG_LINETO_REL;\n\t                 case \"C\":\n\t                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\n\t                 case \"c\":\n\t                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\n\t                 case \"Q\":\n\t                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\n\t                 case \"q\":\n\t                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\n\t                 case \"A\":\n\t                     return SVGPathSeg.PATHSEG_ARC_ABS;\n\t                 case \"a\":\n\t                     return SVGPathSeg.PATHSEG_ARC_REL;\n\t                 case \"H\":\n\t                     return SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\n\t                 case \"h\":\n\t                     return SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\n\t                 case \"V\":\n\t                     return SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\n\t                 case \"v\":\n\t                     return SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\n\t                 case \"S\":\n\t                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\n\t                 case \"s\":\n\t                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\n\t                 case \"T\":\n\t                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\n\t                 case \"t\":\n\t                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\n\t                 default:\n\t                     return SVGPathSeg.PATHSEG_UNKNOWN;\n\t                 }\n\t             }\n\t\n\t             Source.prototype._nextCommandHelper = function(lookahead, previousCommand) {\n\t                 // Check for remaining coordinates in the current command.\n\t                 if ((lookahead == \"+\" || lookahead == \"-\" || lookahead == \".\" || (lookahead >= \"0\" && lookahead <= \"9\")) && previousCommand != SVGPathSeg.PATHSEG_CLOSEPATH) {\n\t                     if (previousCommand == SVGPathSeg.PATHSEG_MOVETO_ABS)\n\t                         return SVGPathSeg.PATHSEG_LINETO_ABS;\n\t                     if (previousCommand == SVGPathSeg.PATHSEG_MOVETO_REL)\n\t                         return SVGPathSeg.PATHSEG_LINETO_REL;\n\t                     return previousCommand;\n\t                 }\n\t                 return SVGPathSeg.PATHSEG_UNKNOWN;\n\t             }\n\t\n\t             Source.prototype.initialCommandIsMoveTo = function() {\n\t                 // If the path is empty it is still valid, so return true.\n\t                 if (!this.hasMoreData())\n\t                     return true;\n\t                 var command = this.peekSegmentType();\n\t                 // Path must start with moveTo.\n\t                 return command == SVGPathSeg.PATHSEG_MOVETO_ABS || command == SVGPathSeg.PATHSEG_MOVETO_REL;\n\t             }\n\t\n\t             // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.\n\t             // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\n\t             Source.prototype._parseNumber = function() {\n\t                 var exponent = 0;\n\t                 var integer = 0;\n\t                 var frac = 1;\n\t                 var decimal = 0;\n\t                 var sign = 1;\n\t                 var expsign = 1;\n\t\n\t                 var startIndex = this._currentIndex;\n\t\n\t                 this._skipOptionalSpaces();\n\t\n\t                 // Read the sign.\n\t                 if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"+\")\n\t                     this._currentIndex++;\n\t                 else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"-\") {\n\t                     this._currentIndex++;\n\t                     sign = -1;\n\t                 }\n\t\n\t                 if (this._currentIndex == this._endIndex || ((this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") && this._string.charAt(this._currentIndex) != \".\"))\n\t                     // The first character of a number must be one of [0-9+-.].\n\t                     return undefined;\n\t\n\t                 // Read the integer part, build right-to-left.\n\t                 var startIntPartIndex = this._currentIndex;\n\t                 while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\")\n\t                     this._currentIndex++; // Advance to first non-digit.\n\t\n\t                 if (this._currentIndex != startIntPartIndex) {\n\t                     var scanIntPartIndex = this._currentIndex - 1;\n\t                     var multiplier = 1;\n\t                     while (scanIntPartIndex >= startIntPartIndex) {\n\t                         integer += multiplier * (this._string.charAt(scanIntPartIndex--) - \"0\");\n\t                         multiplier *= 10;\n\t                     }\n\t                 }\n\t\n\t                 // Read the decimals.\n\t                 if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \".\") {\n\t                     this._currentIndex++;\n\t\n\t                     // There must be a least one digit following the .\n\t                     if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\")\n\t                         return undefined;\n\t                     while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\")\n\t                         decimal += (this._string.charAt(this._currentIndex++) - \"0\") * (frac *= 0.1);\n\t                 }\n\t\n\t                 // Read the exponent part.\n\t                 if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == \"e\" || this._string.charAt(this._currentIndex) == \"E\") && (this._string.charAt(this._currentIndex + 1) != \"x\" && this._string.charAt(this._currentIndex + 1) != \"m\")) {\n\t                     this._currentIndex++;\n\t\n\t                     // Read the sign of the exponent.\n\t                     if (this._string.charAt(this._currentIndex) == \"+\") {\n\t                         this._currentIndex++;\n\t                     } else if (this._string.charAt(this._currentIndex) == \"-\") {\n\t                         this._currentIndex++;\n\t                         expsign = -1;\n\t                     }\n\t\n\t                     // There must be an exponent.\n\t                     if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\")\n\t                         return undefined;\n\t\n\t                     while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n\t                         exponent *= 10;\n\t                         exponent += (this._string.charAt(this._currentIndex) - \"0\");\n\t                         this._currentIndex++;\n\t                     }\n\t                 }\n\t\n\t                 var number = integer + decimal;\n\t                 number *= sign;\n\t\n\t                 if (exponent)\n\t                     number *= Math.pow(10, expsign * exponent);\n\t\n\t                 if (startIndex == this._currentIndex)\n\t                     return undefined;\n\t\n\t                 this._skipOptionalSpacesOrDelimiter();\n\t\n\t                 return number;\n\t             }\n\t\n\t             Source.prototype._parseArcFlag = function() {\n\t                 if (this._currentIndex >= this._endIndex)\n\t                     return undefined;\n\t                 var flag = false;\n\t                 var flagChar = this._string.charAt(this._currentIndex++);\n\t                 if (flagChar == \"0\")\n\t                     flag = false;\n\t                 else if (flagChar == \"1\")\n\t                     flag = true;\n\t                 else\n\t                     return undefined;\n\t\n\t                 this._skipOptionalSpacesOrDelimiter();\n\t                 return flag;\n\t             }\n\t\n\t             Source.prototype.parseSegment = function() {\n\t                 var lookahead = this._string[this._currentIndex];\n\t                 var command = this._pathSegTypeFromChar(lookahead);\n\t                 if (command == SVGPathSeg.PATHSEG_UNKNOWN) {\n\t                     // Possibly an implicit command. Not allowed if this is the first command.\n\t                     if (this._previousCommand == SVGPathSeg.PATHSEG_UNKNOWN)\n\t                         return null;\n\t                     command = this._nextCommandHelper(lookahead, this._previousCommand);\n\t                     if (command == SVGPathSeg.PATHSEG_UNKNOWN)\n\t                         return null;\n\t                 } else {\n\t                     this._currentIndex++;\n\t                 }\n\t\n\t                 this._previousCommand = command;\n\t\n\t                 switch (command) {\n\t                 case SVGPathSeg.PATHSEG_MOVETO_REL:\n\t                     return new SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_MOVETO_ABS:\n\t                     return new SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_LINETO_REL:\n\t                     return new SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_LINETO_ABS:\n\t                     return new SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n\t                     return new SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n\t                     return new SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n\t                     return new SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n\t                     return new SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_CLOSEPATH:\n\t                     this._skipOptionalSpaces();\n\t                     return new SVGPathSegClosePath(owningPathSegList);\n\t                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n\t                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n\t                     return new SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n\t                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n\t                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n\t                     return new SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n\t                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n\t                     var points = {x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n\t                     return new SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\n\t                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n\t                     var points = {x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n\t                     return new SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\n\t                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n\t                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n\t                     return new SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\n\t                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n\t                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n\t                     return new SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\n\t                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n\t                     return new SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n\t                     return new SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n\t                 case SVGPathSeg.PATHSEG_ARC_REL:\n\t                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber()};\n\t                     return new SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n\t                 case SVGPathSeg.PATHSEG_ARC_ABS:\n\t                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber()};\n\t                     return new SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n\t                 default:\n\t                     throw \"Unknown path seg type.\"\n\t                 }\n\t             }\n\t\n\t             var builder = new Builder();\n\t             var source = new Source(string);\n\t\n\t             if (!source.initialCommandIsMoveTo())\n\t                 return [];\n\t             while (source.hasMoreData()) {\n\t                 var pathSeg = source.parseSegment();\n\t                 if (!pathSeg)\n\t                     return [];\n\t                 builder.appendSegment(pathSeg);\n\t             }\n\t\n\t             return builder.pathSegList;\n\t         }\n\t     }\n\t    }());\n\t\n\t    /* jshint ignore:end */\n\t\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_ARRAY__ = [__webpack_require__(28)], __WEBPACK_AMD_DEFINE_RESULT__ = function () { return c3; }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if ('undefined' !== typeof exports && 'undefined' !== typeof module) {\n\t        module.exports = c3;\n\t    } else {\n\t        window.c3 = c3;\n\t    }\n\t\n\t})(window);\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;!function() {\n\t  var d3 = {\n\t    version: \"3.5.5\"\n\t  };\n\t  var d3_arraySlice = [].slice, d3_array = function(list) {\n\t    return d3_arraySlice.call(list);\n\t  };\n\t  var d3_document = this.document;\n\t  function d3_documentElement(node) {\n\t    return node && (node.ownerDocument || node.document || node).documentElement;\n\t  }\n\t  function d3_window(node) {\n\t    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n\t  }\n\t  if (d3_document) {\n\t    try {\n\t      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n\t    } catch (e) {\n\t      d3_array = function(list) {\n\t        var i = list.length, array = new Array(i);\n\t        while (i--) array[i] = list[i];\n\t        return array;\n\t      };\n\t    }\n\t  }\n\t  if (!Date.now) Date.now = function() {\n\t    return +new Date();\n\t  };\n\t  if (d3_document) {\n\t    try {\n\t      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n\t    } catch (error) {\n\t      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n\t      d3_element_prototype.setAttribute = function(name, value) {\n\t        d3_element_setAttribute.call(this, name, value + \"\");\n\t      };\n\t      d3_element_prototype.setAttributeNS = function(space, local, value) {\n\t        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n\t      };\n\t      d3_style_prototype.setProperty = function(name, value, priority) {\n\t        d3_style_setProperty.call(this, name, value + \"\", priority);\n\t      };\n\t    }\n\t  }\n\t  d3.ascending = d3_ascending;\n\t  function d3_ascending(a, b) {\n\t    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n\t  }\n\t  d3.descending = function(a, b) {\n\t    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n\t  };\n\t  d3.min = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.max = function(array, f) {\n\t    var i = -1, n = array.length, a, b;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n\t    }\n\t    return a;\n\t  };\n\t  d3.extent = function(array, f) {\n\t    var i = -1, n = array.length, a, b, c;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if ((b = array[i]) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = array[i]) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    } else {\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n\t        a = c = b;\n\t        break;\n\t      }\n\t      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n\t        if (a > b) a = b;\n\t        if (c < b) c = b;\n\t      }\n\t    }\n\t    return [ a, c ];\n\t  };\n\t  function d3_number(x) {\n\t    return x === null ? NaN : +x;\n\t  }\n\t  function d3_numeric(x) {\n\t    return !isNaN(x);\n\t  }\n\t  d3.sum = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n\t    }\n\t    return s;\n\t  };\n\t  d3.mean = function(array, f) {\n\t    var s = 0, n = array.length, a, i = -1, j = n;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n\t    }\n\t    if (j) return s / j;\n\t  };\n\t  d3.quantile = function(values, p) {\n\t    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n\t    return e ? v + e * (values[h] - v) : v;\n\t  };\n\t  d3.median = function(array, f) {\n\t    var numbers = [], n = array.length, a, i = -1;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n\t    } else {\n\t      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n\t    }\n\t    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n\t  };\n\t  d3.variance = function(array, f) {\n\t    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n\t    if (arguments.length === 1) {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(array[i]))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n\t          d = a - m;\n\t          m += d / ++j;\n\t          s += d * (a - m);\n\t        }\n\t      }\n\t    }\n\t    if (j > 1) return s / (j - 1);\n\t  };\n\t  d3.deviation = function() {\n\t    var v = d3.variance.apply(this, arguments);\n\t    return v ? Math.sqrt(v) : v;\n\t  };\n\t  function d3_bisector(compare) {\n\t    return {\n\t      left: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n\t        }\n\t        return lo;\n\t      },\n\t      right: function(a, x, lo, hi) {\n\t        if (arguments.length < 3) lo = 0;\n\t        if (arguments.length < 4) hi = a.length;\n\t        while (lo < hi) {\n\t          var mid = lo + hi >>> 1;\n\t          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n\t        }\n\t        return lo;\n\t      }\n\t    };\n\t  }\n\t  var d3_bisect = d3_bisector(d3_ascending);\n\t  d3.bisectLeft = d3_bisect.left;\n\t  d3.bisect = d3.bisectRight = d3_bisect.right;\n\t  d3.bisector = function(f) {\n\t    return d3_bisector(f.length === 1 ? function(d, x) {\n\t      return d3_ascending(f(d), x);\n\t    } : f);\n\t  };\n\t  d3.shuffle = function(array, i0, i1) {\n\t    if ((m = arguments.length) < 3) {\n\t      i1 = array.length;\n\t      if (m < 2) i0 = 0;\n\t    }\n\t    var m = i1 - i0, t, i;\n\t    while (m) {\n\t      i = Math.random() * m-- | 0;\n\t      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n\t    }\n\t    return array;\n\t  };\n\t  d3.permute = function(array, indexes) {\n\t    var i = indexes.length, permutes = new Array(i);\n\t    while (i--) permutes[i] = array[indexes[i]];\n\t    return permutes;\n\t  };\n\t  d3.pairs = function(array) {\n\t    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n\t    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n\t    return pairs;\n\t  };\n\t  d3.zip = function() {\n\t    if (!(n = arguments.length)) return [];\n\t    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n\t      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n\t        zip[j] = arguments[j][i];\n\t      }\n\t    }\n\t    return zips;\n\t  };\n\t  function d3_zipLength(d) {\n\t    return d.length;\n\t  }\n\t  d3.transpose = function(matrix) {\n\t    return d3.zip.apply(d3, matrix);\n\t  };\n\t  d3.keys = function(map) {\n\t    var keys = [];\n\t    for (var key in map) keys.push(key);\n\t    return keys;\n\t  };\n\t  d3.values = function(map) {\n\t    var values = [];\n\t    for (var key in map) values.push(map[key]);\n\t    return values;\n\t  };\n\t  d3.entries = function(map) {\n\t    var entries = [];\n\t    for (var key in map) entries.push({\n\t      key: key,\n\t      value: map[key]\n\t    });\n\t    return entries;\n\t  };\n\t  d3.merge = function(arrays) {\n\t    var n = arrays.length, m, i = -1, j = 0, merged, array;\n\t    while (++i < n) j += arrays[i].length;\n\t    merged = new Array(j);\n\t    while (--n >= 0) {\n\t      array = arrays[n];\n\t      m = array.length;\n\t      while (--m >= 0) {\n\t        merged[--j] = array[m];\n\t      }\n\t    }\n\t    return merged;\n\t  };\n\t  var abs = Math.abs;\n\t  d3.range = function(start, stop, step) {\n\t    if (arguments.length < 3) {\n\t      step = 1;\n\t      if (arguments.length < 2) {\n\t        stop = start;\n\t        start = 0;\n\t      }\n\t    }\n\t    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n\t    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n\t    start *= k, stop *= k, step *= k;\n\t    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n\t    return range;\n\t  };\n\t  function d3_range_integerScale(x) {\n\t    var k = 1;\n\t    while (x * k % 1) k *= 10;\n\t    return k;\n\t  }\n\t  function d3_class(ctor, properties) {\n\t    for (var key in properties) {\n\t      Object.defineProperty(ctor.prototype, key, {\n\t        value: properties[key],\n\t        enumerable: false\n\t      });\n\t    }\n\t  }\n\t  d3.map = function(object, f) {\n\t    var map = new d3_Map();\n\t    if (object instanceof d3_Map) {\n\t      object.forEach(function(key, value) {\n\t        map.set(key, value);\n\t      });\n\t    } else if (Array.isArray(object)) {\n\t      var i = -1, n = object.length, o;\n\t      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n\t    } else {\n\t      for (var key in object) map.set(key, object[key]);\n\t    }\n\t    return map;\n\t  };\n\t  function d3_Map() {\n\t    this._ = Object.create(null);\n\t  }\n\t  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n\t  d3_class(d3_Map, {\n\t    has: d3_map_has,\n\t    get: function(key) {\n\t      return this._[d3_map_escape(key)];\n\t    },\n\t    set: function(key, value) {\n\t      return this._[d3_map_escape(key)] = value;\n\t    },\n\t    remove: d3_map_remove,\n\t    keys: d3_map_keys,\n\t    values: function() {\n\t      var values = [];\n\t      for (var key in this._) values.push(this._[key]);\n\t      return values;\n\t    },\n\t    entries: function() {\n\t      var entries = [];\n\t      for (var key in this._) entries.push({\n\t        key: d3_map_unescape(key),\n\t        value: this._[key]\n\t      });\n\t      return entries;\n\t    },\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n\t    }\n\t  });\n\t  function d3_map_escape(key) {\n\t    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n\t  }\n\t  function d3_map_unescape(key) {\n\t    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n\t  }\n\t  function d3_map_has(key) {\n\t    return d3_map_escape(key) in this._;\n\t  }\n\t  function d3_map_remove(key) {\n\t    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n\t  }\n\t  function d3_map_keys() {\n\t    var keys = [];\n\t    for (var key in this._) keys.push(d3_map_unescape(key));\n\t    return keys;\n\t  }\n\t  function d3_map_size() {\n\t    var size = 0;\n\t    for (var key in this._) ++size;\n\t    return size;\n\t  }\n\t  function d3_map_empty() {\n\t    for (var key in this._) return false;\n\t    return true;\n\t  }\n\t  d3.nest = function() {\n\t    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n\t    function map(mapType, array, depth) {\n\t      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n\t      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n\t      while (++i < n) {\n\t        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n\t          values.push(object);\n\t        } else {\n\t          valuesByKey.set(keyValue, [ object ]);\n\t        }\n\t      }\n\t      if (mapType) {\n\t        object = mapType();\n\t        setter = function(keyValue, values) {\n\t          object.set(keyValue, map(mapType, values, depth));\n\t        };\n\t      } else {\n\t        object = {};\n\t        setter = function(keyValue, values) {\n\t          object[keyValue] = map(mapType, values, depth);\n\t        };\n\t      }\n\t      valuesByKey.forEach(setter);\n\t      return object;\n\t    }\n\t    function entries(map, depth) {\n\t      if (depth >= keys.length) return map;\n\t      var array = [], sortKey = sortKeys[depth++];\n\t      map.forEach(function(key, keyMap) {\n\t        array.push({\n\t          key: key,\n\t          values: entries(keyMap, depth)\n\t        });\n\t      });\n\t      return sortKey ? array.sort(function(a, b) {\n\t        return sortKey(a.key, b.key);\n\t      }) : array;\n\t    }\n\t    nest.map = function(array, mapType) {\n\t      return map(mapType, array, 0);\n\t    };\n\t    nest.entries = function(array) {\n\t      return entries(map(d3.map, array, 0), 0);\n\t    };\n\t    nest.key = function(d) {\n\t      keys.push(d);\n\t      return nest;\n\t    };\n\t    nest.sortKeys = function(order) {\n\t      sortKeys[keys.length - 1] = order;\n\t      return nest;\n\t    };\n\t    nest.sortValues = function(order) {\n\t      sortValues = order;\n\t      return nest;\n\t    };\n\t    nest.rollup = function(f) {\n\t      rollup = f;\n\t      return nest;\n\t    };\n\t    return nest;\n\t  };\n\t  d3.set = function(array) {\n\t    var set = new d3_Set();\n\t    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n\t    return set;\n\t  };\n\t  function d3_Set() {\n\t    this._ = Object.create(null);\n\t  }\n\t  d3_class(d3_Set, {\n\t    has: d3_map_has,\n\t    add: function(key) {\n\t      this._[d3_map_escape(key += \"\")] = true;\n\t      return key;\n\t    },\n\t    remove: d3_map_remove,\n\t    values: d3_map_keys,\n\t    size: d3_map_size,\n\t    empty: d3_map_empty,\n\t    forEach: function(f) {\n\t      for (var key in this._) f.call(this, d3_map_unescape(key));\n\t    }\n\t  });\n\t  d3.behavior = {};\n\t  function d3_identity(d) {\n\t    return d;\n\t  }\n\t  d3.rebind = function(target, source) {\n\t    var i = 1, n = arguments.length, method;\n\t    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n\t    return target;\n\t  };\n\t  function d3_rebind(target, source, method) {\n\t    return function() {\n\t      var value = method.apply(source, arguments);\n\t      return value === source ? target : value;\n\t    };\n\t  }\n\t  function d3_vendorSymbol(object, name) {\n\t    if (name in object) return name;\n\t    name = name.charAt(0).toUpperCase() + name.slice(1);\n\t    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n\t      var prefixName = d3_vendorPrefixes[i] + name;\n\t      if (prefixName in object) return prefixName;\n\t    }\n\t  }\n\t  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n\t  function d3_noop() {}\n\t  d3.dispatch = function() {\n\t    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    return dispatch;\n\t  };\n\t  function d3_dispatch() {}\n\t  d3_dispatch.prototype.on = function(type, listener) {\n\t    var i = type.indexOf(\".\"), name = \"\";\n\t    if (i >= 0) {\n\t      name = type.slice(i + 1);\n\t      type = type.slice(0, i);\n\t    }\n\t    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n\t    if (arguments.length === 2) {\n\t      if (listener == null) for (type in this) {\n\t        if (this.hasOwnProperty(type)) this[type].on(name, null);\n\t      }\n\t      return this;\n\t    }\n\t  };\n\t  function d3_dispatch_event(dispatch) {\n\t    var listeners = [], listenerByName = new d3_Map();\n\t    function event() {\n\t      var z = listeners, i = -1, n = z.length, l;\n\t      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n\t      return dispatch;\n\t    }\n\t    event.on = function(name, listener) {\n\t      var l = listenerByName.get(name), i;\n\t      if (arguments.length < 2) return l && l.on;\n\t      if (l) {\n\t        l.on = null;\n\t        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n\t        listenerByName.remove(name);\n\t      }\n\t      if (listener) listeners.push(listenerByName.set(name, {\n\t        on: listener\n\t      }));\n\t      return dispatch;\n\t    };\n\t    return event;\n\t  }\n\t  d3.event = null;\n\t  function d3_eventPreventDefault() {\n\t    d3.event.preventDefault();\n\t  }\n\t  function d3_eventSource() {\n\t    var e = d3.event, s;\n\t    while (s = e.sourceEvent) e = s;\n\t    return e;\n\t  }\n\t  function d3_eventDispatch(target) {\n\t    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n\t    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n\t    dispatch.of = function(thiz, argumentz) {\n\t      return function(e1) {\n\t        try {\n\t          var e0 = e1.sourceEvent = d3.event;\n\t          e1.target = target;\n\t          d3.event = e1;\n\t          dispatch[e1.type].apply(thiz, argumentz);\n\t        } finally {\n\t          d3.event = e0;\n\t        }\n\t      };\n\t    };\n\t    return dispatch;\n\t  }\n\t  d3.requote = function(s) {\n\t    return s.replace(d3_requote_re, \"\\\\$&\");\n\t  };\n\t  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n\t  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n\t    object.__proto__ = prototype;\n\t  } : function(object, prototype) {\n\t    for (var property in prototype) object[property] = prototype[property];\n\t  };\n\t  function d3_selection(groups) {\n\t    d3_subclass(groups, d3_selectionPrototype);\n\t    return groups;\n\t  }\n\t  var d3_select = function(s, n) {\n\t    return n.querySelector(s);\n\t  }, d3_selectAll = function(s, n) {\n\t    return n.querySelectorAll(s);\n\t  }, d3_selectMatches = function(n, s) {\n\t    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n\t    d3_selectMatches = function(n, s) {\n\t      return d3_selectMatcher.call(n, s);\n\t    };\n\t    return d3_selectMatches(n, s);\n\t  };\n\t  if (typeof Sizzle === \"function\") {\n\t    d3_select = function(s, n) {\n\t      return Sizzle(s, n)[0] || null;\n\t    };\n\t    d3_selectAll = Sizzle;\n\t    d3_selectMatches = Sizzle.matchesSelector;\n\t  }\n\t  d3.selection = function() {\n\t    return d3.select(d3_document.documentElement);\n\t  };\n\t  var d3_selectionPrototype = d3.selection.prototype = [];\n\t  d3_selectionPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, group, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n\t          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selector(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_select(selector, this);\n\t    };\n\t  }\n\t  d3_selectionPrototype.selectAll = function(selector) {\n\t    var subgroups = [], subgroup, node;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n\t          subgroup.parentNode = node;\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_selectorAll(selector) {\n\t    return typeof selector === \"function\" ? selector : function() {\n\t      return d3_selectAll(selector, this);\n\t    };\n\t  }\n\t  var d3_nsPrefix = {\n\t    svg: \"http://www.w3.org/2000/svg\",\n\t    xhtml: \"http://www.w3.org/1999/xhtml\",\n\t    xlink: \"http://www.w3.org/1999/xlink\",\n\t    xml: \"http://www.w3.org/XML/1998/namespace\",\n\t    xmlns: \"http://www.w3.org/2000/xmlns/\"\n\t  };\n\t  d3.ns = {\n\t    prefix: d3_nsPrefix,\n\t    qualify: function(name) {\n\t      var i = name.indexOf(\":\"), prefix = name;\n\t      if (i >= 0) {\n\t        prefix = name.slice(0, i);\n\t        name = name.slice(i + 1);\n\t      }\n\t      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n\t        space: d3_nsPrefix[prefix],\n\t        local: name\n\t      } : name;\n\t    }\n\t  };\n\t  d3_selectionPrototype.attr = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node();\n\t        name = d3.ns.qualify(name);\n\t        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n\t      }\n\t      for (value in name) this.each(d3_selection_attr(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_attr(name, value));\n\t  };\n\t  function d3_selection_attr(name, value) {\n\t    name = d3.ns.qualify(name);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrConstant() {\n\t      this.setAttribute(name, value);\n\t    }\n\t    function attrConstantNS() {\n\t      this.setAttributeNS(name.space, name.local, value);\n\t    }\n\t    function attrFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n\t    }\n\t    function attrFunctionNS() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n\t    }\n\t    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n\t  }\n\t  function d3_collapse(s) {\n\t    return s.trim().replace(/\\s+/g, \" \");\n\t  }\n\t  d3_selectionPrototype.classed = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") {\n\t        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n\t        if (value = node.classList) {\n\t          while (++i < n) if (!value.contains(name[i])) return false;\n\t        } else {\n\t          value = node.getAttribute(\"class\");\n\t          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n\t        }\n\t        return true;\n\t      }\n\t      for (value in name) this.each(d3_selection_classed(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_classed(name, value));\n\t  };\n\t  function d3_selection_classedRe(name) {\n\t    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n\t  }\n\t  function d3_selection_classes(name) {\n\t    return (name + \"\").trim().split(/^|\\s+/);\n\t  }\n\t  function d3_selection_classed(name, value) {\n\t    name = d3_selection_classes(name).map(d3_selection_classedName);\n\t    var n = name.length;\n\t    function classedConstant() {\n\t      var i = -1;\n\t      while (++i < n) name[i](this, value);\n\t    }\n\t    function classedFunction() {\n\t      var i = -1, x = value.apply(this, arguments);\n\t      while (++i < n) name[i](this, x);\n\t    }\n\t    return typeof value === \"function\" ? classedFunction : classedConstant;\n\t  }\n\t  function d3_selection_classedName(name) {\n\t    var re = d3_selection_classedRe(name);\n\t    return function(node, value) {\n\t      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n\t      var c = node.getAttribute(\"class\") || \"\";\n\t      if (value) {\n\t        re.lastIndex = 0;\n\t        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n\t      } else {\n\t        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n\t      }\n\t    };\n\t  }\n\t  d3_selectionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n\t        return this;\n\t      }\n\t      if (n < 2) {\n\t        var node = this.node();\n\t        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n\t      }\n\t      priority = \"\";\n\t    }\n\t    return this.each(d3_selection_style(name, value, priority));\n\t  };\n\t  function d3_selection_style(name, value, priority) {\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleConstant() {\n\t      this.style.setProperty(name, value, priority);\n\t    }\n\t    function styleFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n\t    }\n\t    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n\t  }\n\t  d3_selectionPrototype.property = function(name, value) {\n\t    if (arguments.length < 2) {\n\t      if (typeof name === \"string\") return this.node()[name];\n\t      for (value in name) this.each(d3_selection_property(value, name[value]));\n\t      return this;\n\t    }\n\t    return this.each(d3_selection_property(name, value));\n\t  };\n\t  function d3_selection_property(name, value) {\n\t    function propertyNull() {\n\t      delete this[name];\n\t    }\n\t    function propertyConstant() {\n\t      this[name] = value;\n\t    }\n\t    function propertyFunction() {\n\t      var x = value.apply(this, arguments);\n\t      if (x == null) delete this[name]; else this[name] = x;\n\t    }\n\t    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n\t  }\n\t  d3_selectionPrototype.text = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.textContent = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.textContent = \"\";\n\t    } : function() {\n\t      this.textContent = value;\n\t    }) : this.node().textContent;\n\t  };\n\t  d3_selectionPrototype.html = function(value) {\n\t    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n\t      var v = value.apply(this, arguments);\n\t      this.innerHTML = v == null ? \"\" : v;\n\t    } : value == null ? function() {\n\t      this.innerHTML = \"\";\n\t    } : function() {\n\t      this.innerHTML = value;\n\t    }) : this.node().innerHTML;\n\t  };\n\t  d3_selectionPrototype.append = function(name) {\n\t    name = d3_selection_creator(name);\n\t    return this.select(function() {\n\t      return this.appendChild(name.apply(this, arguments));\n\t    });\n\t  };\n\t  function d3_selection_creator(name) {\n\t    function create() {\n\t      var document = this.ownerDocument, namespace = this.namespaceURI;\n\t      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n\t    }\n\t    function createNS() {\n\t      return this.ownerDocument.createElementNS(name.space, name.local);\n\t    }\n\t    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n\t  }\n\t  d3_selectionPrototype.insert = function(name, before) {\n\t    name = d3_selection_creator(name);\n\t    before = d3_selection_selector(before);\n\t    return this.select(function() {\n\t      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n\t    });\n\t  };\n\t  d3_selectionPrototype.remove = function() {\n\t    return this.each(d3_selectionRemove);\n\t  };\n\t  function d3_selectionRemove() {\n\t    var parent = this.parentNode;\n\t    if (parent) parent.removeChild(this);\n\t  }\n\t  d3_selectionPrototype.data = function(value, key) {\n\t    var i = -1, n = this.length, group, node;\n\t    if (!arguments.length) {\n\t      value = new Array(n = (group = this[0]).length);\n\t      while (++i < n) {\n\t        if (node = group[i]) {\n\t          value[i] = node.__data__;\n\t        }\n\t      }\n\t      return value;\n\t    }\n\t    function bind(group, groupData) {\n\t      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n\t      if (key) {\n\t        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n\t            exitNodes[i] = node;\n\t          } else {\n\t            nodeByKeyValue.set(keyValue, node);\n\t          }\n\t          keyValues[i] = keyValue;\n\t        }\n\t        for (i = -1; ++i < m; ) {\n\t          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          } else if (node !== true) {\n\t            updateNodes[i] = node;\n\t            node.__data__ = nodeData;\n\t          }\n\t          nodeByKeyValue.set(keyValue, true);\n\t        }\n\t        for (i = -1; ++i < n; ) {\n\t          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n\t            exitNodes[i] = group[i];\n\t          }\n\t        }\n\t      } else {\n\t        for (i = -1; ++i < n0; ) {\n\t          node = group[i];\n\t          nodeData = groupData[i];\n\t          if (node) {\n\t            node.__data__ = nodeData;\n\t            updateNodes[i] = node;\n\t          } else {\n\t            enterNodes[i] = d3_selection_dataNode(nodeData);\n\t          }\n\t        }\n\t        for (;i < m; ++i) {\n\t          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n\t        }\n\t        for (;i < n; ++i) {\n\t          exitNodes[i] = group[i];\n\t        }\n\t      }\n\t      enterNodes.update = updateNodes;\n\t      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n\t      enter.push(enterNodes);\n\t      update.push(updateNodes);\n\t      exit.push(exitNodes);\n\t    }\n\t    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n\t    if (typeof value === \"function\") {\n\t      while (++i < n) {\n\t        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n\t      }\n\t    } else {\n\t      while (++i < n) {\n\t        bind(group = this[i], value);\n\t      }\n\t    }\n\t    update.enter = function() {\n\t      return enter;\n\t    };\n\t    update.exit = function() {\n\t      return exit;\n\t    };\n\t    return update;\n\t  };\n\t  function d3_selection_dataNode(data) {\n\t    return {\n\t      __data__: data\n\t    };\n\t  }\n\t  d3_selectionPrototype.datum = function(value) {\n\t    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n\t  };\n\t  d3_selectionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = (group = this[j]).parentNode;\n\t      for (var i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  function d3_selection_filter(selector) {\n\t    return function() {\n\t      return d3_selectMatches(this, selector);\n\t    };\n\t  }\n\t  d3_selectionPrototype.order = function() {\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n\t        if (node = group[i]) {\n\t          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n\t          next = node;\n\t        }\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.sort = function(comparator) {\n\t    comparator = d3_selection_sortComparator.apply(this, arguments);\n\t    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n\t    return this.order();\n\t  };\n\t  function d3_selection_sortComparator(comparator) {\n\t    if (!arguments.length) comparator = d3_ascending;\n\t    return function(a, b) {\n\t      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n\t    };\n\t  }\n\t  d3_selectionPrototype.each = function(callback) {\n\t    return d3_selection_each(this, function(node, i, j) {\n\t      callback.call(node, node.__data__, i, j);\n\t    });\n\t  };\n\t  function d3_selection_each(groups, callback) {\n\t    for (var j = 0, m = groups.length; j < m; j++) {\n\t      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n\t        if (node = group[i]) callback(node, i, j);\n\t      }\n\t    }\n\t    return groups;\n\t  }\n\t  d3_selectionPrototype.call = function(callback) {\n\t    var args = d3_array(arguments);\n\t    callback.apply(args[0] = this, args);\n\t    return this;\n\t  };\n\t  d3_selectionPrototype.empty = function() {\n\t    return !this.node();\n\t  };\n\t  d3_selectionPrototype.node = function() {\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        var node = group[i];\n\t        if (node) return node;\n\t      }\n\t    }\n\t    return null;\n\t  };\n\t  d3_selectionPrototype.size = function() {\n\t    var n = 0;\n\t    d3_selection_each(this, function() {\n\t      ++n;\n\t    });\n\t    return n;\n\t  };\n\t  function d3_selection_enter(selection) {\n\t    d3_subclass(selection, d3_selection_enterPrototype);\n\t    return selection;\n\t  }\n\t  var d3_selection_enterPrototype = [];\n\t  d3.selection.enter = d3_selection_enter;\n\t  d3.selection.enter.prototype = d3_selection_enterPrototype;\n\t  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n\t  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n\t  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n\t  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n\t  d3_selection_enterPrototype.select = function(selector) {\n\t    var subgroups = [], subgroup, subnode, upgroup, group, node;\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      upgroup = (group = this[j]).update;\n\t      subgroups.push(subgroup = []);\n\t      subgroup.parentNode = group.parentNode;\n\t      for (var i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n\t          subnode.__data__ = node.__data__;\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_selection(subgroups);\n\t  };\n\t  d3_selection_enterPrototype.insert = function(name, before) {\n\t    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n\t    return d3_selectionPrototype.insert.call(this, name, before);\n\t  };\n\t  function d3_selection_enterInsertBefore(enter) {\n\t    var i0, j0;\n\t    return function(d, i, j) {\n\t      var group = enter[j].update, n = group.length, node;\n\t      if (j != j0) j0 = j, i0 = 0;\n\t      if (i >= i0) i0 = i + 1;\n\t      while (!(node = group[i0]) && ++i0 < n) ;\n\t      return node;\n\t    };\n\t  }\n\t  d3.select = function(node) {\n\t    var group;\n\t    if (typeof node === \"string\") {\n\t      group = [ d3_select(node, d3_document) ];\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = [ node ];\n\t      group.parentNode = d3_documentElement(node);\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3.selectAll = function(nodes) {\n\t    var group;\n\t    if (typeof nodes === \"string\") {\n\t      group = d3_array(d3_selectAll(nodes, d3_document));\n\t      group.parentNode = d3_document.documentElement;\n\t    } else {\n\t      group = nodes;\n\t      group.parentNode = null;\n\t    }\n\t    return d3_selection([ group ]);\n\t  };\n\t  d3_selectionPrototype.on = function(type, listener, capture) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof type !== \"string\") {\n\t        if (n < 2) listener = false;\n\t        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n\t        return this;\n\t      }\n\t      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n\t      capture = false;\n\t    }\n\t    return this.each(d3_selection_on(type, listener, capture));\n\t  };\n\t  function d3_selection_on(type, listener, capture) {\n\t    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n\t    if (i > 0) type = type.slice(0, i);\n\t    var filter = d3_selection_onFilters.get(type);\n\t    if (filter) type = filter, wrap = d3_selection_onFilter;\n\t    function onRemove() {\n\t      var l = this[name];\n\t      if (l) {\n\t        this.removeEventListener(type, l, l.$);\n\t        delete this[name];\n\t      }\n\t    }\n\t    function onAdd() {\n\t      var l = wrap(listener, d3_array(arguments));\n\t      onRemove.call(this);\n\t      this.addEventListener(type, this[name] = l, l.$ = capture);\n\t      l._ = listener;\n\t    }\n\t    function removeAll() {\n\t      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n\t      for (var name in this) {\n\t        if (match = name.match(re)) {\n\t          var l = this[name];\n\t          this.removeEventListener(match[1], l, l.$);\n\t          delete this[name];\n\t        }\n\t      }\n\t    }\n\t    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n\t  }\n\t  var d3_selection_onFilters = d3.map({\n\t    mouseenter: \"mouseover\",\n\t    mouseleave: \"mouseout\"\n\t  });\n\t  if (d3_document) {\n\t    d3_selection_onFilters.forEach(function(k) {\n\t      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n\t    });\n\t  }\n\t  function d3_selection_onListener(listener, argumentz) {\n\t    return function(e) {\n\t      var o = d3.event;\n\t      d3.event = e;\n\t      argumentz[0] = this.__data__;\n\t      try {\n\t        listener.apply(this, argumentz);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t  }\n\t  function d3_selection_onFilter(listener, argumentz) {\n\t    var l = d3_selection_onListener(listener, argumentz);\n\t    return function(e) {\n\t      var target = this, related = e.relatedTarget;\n\t      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n\t        l.call(target, e);\n\t      }\n\t    };\n\t  }\n\t  var d3_event_dragSelect, d3_event_dragId = 0;\n\t  function d3_event_dragSuppress(node) {\n\t    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n\t    if (d3_event_dragSelect == null) {\n\t      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n\t    }\n\t    if (d3_event_dragSelect) {\n\t      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n\t      style[d3_event_dragSelect] = \"none\";\n\t    }\n\t    return function(suppressClick) {\n\t      w.on(name, null);\n\t      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n\t      if (suppressClick) {\n\t        var off = function() {\n\t          w.on(click, null);\n\t        };\n\t        w.on(click, function() {\n\t          d3_eventPreventDefault();\n\t          off();\n\t        }, true);\n\t        setTimeout(off, 0);\n\t      }\n\t    };\n\t  }\n\t  d3.mouse = function(container) {\n\t    return d3_mousePoint(container, d3_eventSource());\n\t  };\n\t  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n\t  function d3_mousePoint(container, e) {\n\t    if (e.changedTouches) e = e.changedTouches[0];\n\t    var svg = container.ownerSVGElement || container;\n\t    if (svg.createSVGPoint) {\n\t      var point = svg.createSVGPoint();\n\t      if (d3_mouse_bug44083 < 0) {\n\t        var window = d3_window(container);\n\t        if (window.scrollX || window.scrollY) {\n\t          svg = d3.select(\"body\").append(\"svg\").style({\n\t            position: \"absolute\",\n\t            top: 0,\n\t            left: 0,\n\t            margin: 0,\n\t            padding: 0,\n\t            border: \"none\"\n\t          }, \"important\");\n\t          var ctm = svg[0][0].getScreenCTM();\n\t          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n\t          svg.remove();\n\t        }\n\t      }\n\t      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n\t      point.y = e.clientY;\n\t      point = point.matrixTransform(container.getScreenCTM().inverse());\n\t      return [ point.x, point.y ];\n\t    }\n\t    var rect = container.getBoundingClientRect();\n\t    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n\t  }\n\t  d3.touch = function(container, touches, identifier) {\n\t    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n\t    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n\t      if ((touch = touches[i]).identifier === identifier) {\n\t        return d3_mousePoint(container, touch);\n\t      }\n\t    }\n\t  };\n\t  d3.behavior.drag = function() {\n\t    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n\t    function drag() {\n\t      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n\t    }\n\t    function dragstart(id, position, subject, move, end) {\n\t      return function() {\n\t        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n\t        if (origin) {\n\t          dragOffset = origin.apply(that, arguments);\n\t          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n\t        } else {\n\t          dragOffset = [ 0, 0 ];\n\t        }\n\t        dispatch({\n\t          type: \"dragstart\"\n\t        });\n\t        function moved() {\n\t          var position1 = position(parent, dragId), dx, dy;\n\t          if (!position1) return;\n\t          dx = position1[0] - position0[0];\n\t          dy = position1[1] - position0[1];\n\t          dragged |= dx | dy;\n\t          position0 = position1;\n\t          dispatch({\n\t            type: \"drag\",\n\t            x: position1[0] + dragOffset[0],\n\t            y: position1[1] + dragOffset[1],\n\t            dx: dx,\n\t            dy: dy\n\t          });\n\t        }\n\t        function ended() {\n\t          if (!position(parent, dragId)) return;\n\t          dragSubject.on(move + dragName, null).on(end + dragName, null);\n\t          dragRestore(dragged && d3.event.target === target);\n\t          dispatch({\n\t            type: \"dragend\"\n\t          });\n\t        }\n\t      };\n\t    }\n\t    drag.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return drag;\n\t    };\n\t    return d3.rebind(drag, event, \"on\");\n\t  };\n\t  function d3_behavior_dragTouchId() {\n\t    return d3.event.changedTouches[0].identifier;\n\t  }\n\t  d3.touches = function(container, touches) {\n\t    if (arguments.length < 2) touches = d3_eventSource().touches;\n\t    return touches ? d3_array(touches).map(function(touch) {\n\t      var point = d3_mousePoint(container, touch);\n\t      point.identifier = touch.identifier;\n\t      return point;\n\t    }) : [];\n\t  };\n\t  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n\t  function d3_sgn(x) {\n\t    return x > 0 ? 1 : x < 0 ? -1 : 0;\n\t  }\n\t  function d3_cross2d(a, b, c) {\n\t    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n\t  }\n\t  function d3_acos(x) {\n\t    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n\t  }\n\t  function d3_asin(x) {\n\t    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n\t  }\n\t  function d3_sinh(x) {\n\t    return ((x = Math.exp(x)) - 1 / x) / 2;\n\t  }\n\t  function d3_cosh(x) {\n\t    return ((x = Math.exp(x)) + 1 / x) / 2;\n\t  }\n\t  function d3_tanh(x) {\n\t    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n\t  }\n\t  function d3_haversin(x) {\n\t    return (x = Math.sin(x / 2)) * x;\n\t  }\n\t  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n\t  d3.interpolateZoom = function(p0, p1) {\n\t    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n\t    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n\t    function interpolate(t) {\n\t      var s = t * S;\n\t      if (dr) {\n\t        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n\t        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n\t      }\n\t      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n\t    }\n\t    interpolate.duration = S * 1e3;\n\t    return interpolate;\n\t  };\n\t  d3.behavior.zoom = function() {\n\t    var view = {\n\t      x: 0,\n\t      y: 0,\n\t      k: 1\n\t    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n\t    if (!d3_behavior_zoomWheel) {\n\t      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n\t      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n\t        return d3.event.wheelDelta;\n\t      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n\t        return -d3.event.detail;\n\t      }, \"MozMousePixelScroll\");\n\t    }\n\t    function zoom(g) {\n\t      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n\t    }\n\t    zoom.event = function(g) {\n\t      g.each(function() {\n\t        var dispatch = event.of(this, arguments), view1 = view;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.zoom\", function() {\n\t            view = this.__chart__ || {\n\t              x: 0,\n\t              y: 0,\n\t              k: 1\n\t            };\n\t            zoomstarted(dispatch);\n\t          }).tween(\"zoom:zoom\", function() {\n\t            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n\t            return function(t) {\n\t              var l = i(t), k = dx / l[2];\n\t              this.__chart__ = view = {\n\t                x: cx - l[0] * k,\n\t                y: cy - l[1] * k,\n\t                k: k\n\t              };\n\t              zoomed(dispatch);\n\t            };\n\t          }).each(\"interrupt.zoom\", function() {\n\t            zoomended(dispatch);\n\t          }).each(\"end.zoom\", function() {\n\t            zoomended(dispatch);\n\t          });\n\t        } else {\n\t          this.__chart__ = view;\n\t          zoomstarted(dispatch);\n\t          zoomed(dispatch);\n\t          zoomended(dispatch);\n\t        }\n\t      });\n\t    };\n\t    zoom.translate = function(_) {\n\t      if (!arguments.length) return [ view.x, view.y ];\n\t      view = {\n\t        x: +_[0],\n\t        y: +_[1],\n\t        k: view.k\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scale = function(_) {\n\t      if (!arguments.length) return view.k;\n\t      view = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: +_\n\t      };\n\t      rescale();\n\t      return zoom;\n\t    };\n\t    zoom.scaleExtent = function(_) {\n\t      if (!arguments.length) return scaleExtent;\n\t      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.center = function(_) {\n\t      if (!arguments.length) return center;\n\t      center = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _ && [ +_[0], +_[1] ];\n\t      return zoom;\n\t    };\n\t    zoom.duration = function(_) {\n\t      if (!arguments.length) return duration;\n\t      duration = +_;\n\t      return zoom;\n\t    };\n\t    zoom.x = function(z) {\n\t      if (!arguments.length) return x1;\n\t      x1 = z;\n\t      x0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    zoom.y = function(z) {\n\t      if (!arguments.length) return y1;\n\t      y1 = z;\n\t      y0 = z.copy();\n\t      view = {\n\t        x: 0,\n\t        y: 0,\n\t        k: 1\n\t      };\n\t      return zoom;\n\t    };\n\t    function location(p) {\n\t      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n\t    }\n\t    function point(l) {\n\t      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n\t    }\n\t    function scaleTo(s) {\n\t      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n\t    }\n\t    function translateTo(p, l) {\n\t      l = point(l);\n\t      view.x += p[0] - l[0];\n\t      view.y += p[1] - l[1];\n\t    }\n\t    function zoomTo(that, p, l, k) {\n\t      that.__chart__ = {\n\t        x: view.x,\n\t        y: view.y,\n\t        k: view.k\n\t      };\n\t      scaleTo(Math.pow(2, k));\n\t      translateTo(center0 = p, l);\n\t      that = d3.select(that);\n\t      if (duration > 0) that = that.transition().duration(duration);\n\t      that.call(zoom.event);\n\t    }\n\t    function rescale() {\n\t      if (x1) x1.domain(x0.range().map(function(x) {\n\t        return (x - view.x) / view.k;\n\t      }).map(x0.invert));\n\t      if (y1) y1.domain(y0.range().map(function(y) {\n\t        return (y - view.y) / view.k;\n\t      }).map(y0.invert));\n\t    }\n\t    function zoomstarted(dispatch) {\n\t      if (!zooming++) dispatch({\n\t        type: \"zoomstart\"\n\t      });\n\t    }\n\t    function zoomed(dispatch) {\n\t      rescale();\n\t      dispatch({\n\t        type: \"zoom\",\n\t        scale: view.k,\n\t        translate: [ view.x, view.y ]\n\t      });\n\t    }\n\t    function zoomended(dispatch) {\n\t      if (!--zooming) dispatch({\n\t        type: \"zoomend\"\n\t      });\n\t      center0 = null;\n\t    }\n\t    function mousedowned() {\n\t      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n\t      d3_selection_interrupt.call(that);\n\t      zoomstarted(dispatch);\n\t      function moved() {\n\t        dragged = 1;\n\t        translateTo(d3.mouse(that), location0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        subject.on(mousemove, null).on(mouseup, null);\n\t        dragRestore(dragged && d3.event.target === target);\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function touchstarted() {\n\t      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n\t      started();\n\t      zoomstarted(dispatch);\n\t      subject.on(mousedown, null).on(touchstart, started);\n\t      function relocate() {\n\t        var touches = d3.touches(that);\n\t        scale0 = view.k;\n\t        touches.forEach(function(t) {\n\t          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n\t        });\n\t        return touches;\n\t      }\n\t      function started() {\n\t        var target = d3.event.target;\n\t        d3.select(target).on(touchmove, moved).on(touchend, ended);\n\t        targets.push(target);\n\t        var changed = d3.event.changedTouches;\n\t        for (var i = 0, n = changed.length; i < n; ++i) {\n\t          locations0[changed[i].identifier] = null;\n\t        }\n\t        var touches = relocate(), now = Date.now();\n\t        if (touches.length === 1) {\n\t          if (now - touchtime < 500) {\n\t            var p = touches[0];\n\t            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n\t            d3_eventPreventDefault();\n\t          }\n\t          touchtime = now;\n\t        } else if (touches.length > 1) {\n\t          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n\t          distance0 = dx * dx + dy * dy;\n\t        }\n\t      }\n\t      function moved() {\n\t        var touches = d3.touches(that), p0, l0, p1, l1;\n\t        d3_selection_interrupt.call(that);\n\t        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n\t          p1 = touches[i];\n\t          if (l1 = locations0[p1.identifier]) {\n\t            if (l0) break;\n\t            p0 = p1, l0 = l1;\n\t          }\n\t        }\n\t        if (l1) {\n\t          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n\t          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n\t          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n\t          scaleTo(scale1 * scale0);\n\t        }\n\t        touchtime = null;\n\t        translateTo(p0, l0);\n\t        zoomed(dispatch);\n\t      }\n\t      function ended() {\n\t        if (d3.event.touches.length) {\n\t          var changed = d3.event.changedTouches;\n\t          for (var i = 0, n = changed.length; i < n; ++i) {\n\t            delete locations0[changed[i].identifier];\n\t          }\n\t          for (var identifier in locations0) {\n\t            return void relocate();\n\t          }\n\t        }\n\t        d3.selectAll(targets).on(zoomName, null);\n\t        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n\t        dragRestore();\n\t        zoomended(dispatch);\n\t      }\n\t    }\n\t    function mousewheeled() {\n\t      var dispatch = event.of(this, arguments);\n\t      if (mousewheelTimer) clearTimeout(mousewheelTimer); else translate0 = location(center0 = center || d3.mouse(this)), \n\t      d3_selection_interrupt.call(this), zoomstarted(dispatch);\n\t      mousewheelTimer = setTimeout(function() {\n\t        mousewheelTimer = null;\n\t        zoomended(dispatch);\n\t      }, 50);\n\t      d3_eventPreventDefault();\n\t      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n\t      translateTo(center0, translate0);\n\t      zoomed(dispatch);\n\t    }\n\t    function dblclicked() {\n\t      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n\t      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n\t    }\n\t    return d3.rebind(zoom, event, \"on\");\n\t  };\n\t  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n\t  d3.color = d3_color;\n\t  function d3_color() {}\n\t  d3_color.prototype.toString = function() {\n\t    return this.rgb() + \"\";\n\t  };\n\t  d3.hsl = d3_hsl;\n\t  function d3_hsl(h, s, l) {\n\t    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n\t  }\n\t  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n\t  d3_hslPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, this.l / k);\n\t  };\n\t  d3_hslPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_hsl(this.h, this.s, k * this.l);\n\t  };\n\t  d3_hslPrototype.rgb = function() {\n\t    return d3_hsl_rgb(this.h, this.s, this.l);\n\t  };\n\t  function d3_hsl_rgb(h, s, l) {\n\t    var m1, m2;\n\t    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n\t    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n\t    l = l < 0 ? 0 : l > 1 ? 1 : l;\n\t    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n\t    m1 = 2 * l - m2;\n\t    function v(h) {\n\t      if (h > 360) h -= 360; else if (h < 0) h += 360;\n\t      if (h < 60) return m1 + (m2 - m1) * h / 60;\n\t      if (h < 180) return m2;\n\t      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n\t      return m1;\n\t    }\n\t    function vv(h) {\n\t      return Math.round(v(h) * 255);\n\t    }\n\t    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n\t  }\n\t  d3.hcl = d3_hcl;\n\t  function d3_hcl(h, c, l) {\n\t    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n\t  }\n\t  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n\t  d3_hclPrototype.brighter = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.darker = function(k) {\n\t    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n\t  };\n\t  d3_hclPrototype.rgb = function() {\n\t    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n\t  };\n\t  function d3_hcl_lab(h, c, l) {\n\t    if (isNaN(h)) h = 0;\n\t    if (isNaN(c)) c = 0;\n\t    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n\t  }\n\t  d3.lab = d3_lab;\n\t  function d3_lab(l, a, b) {\n\t    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n\t  }\n\t  var d3_lab_K = 18;\n\t  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n\t  var d3_labPrototype = d3_lab.prototype = new d3_color();\n\t  d3_labPrototype.brighter = function(k) {\n\t    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.darker = function(k) {\n\t    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n\t  };\n\t  d3_labPrototype.rgb = function() {\n\t    return d3_lab_rgb(this.l, this.a, this.b);\n\t  };\n\t  function d3_lab_rgb(l, a, b) {\n\t    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n\t    x = d3_lab_xyz(x) * d3_lab_X;\n\t    y = d3_lab_xyz(y) * d3_lab_Y;\n\t    z = d3_lab_xyz(z) * d3_lab_Z;\n\t    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n\t  }\n\t  function d3_lab_hcl(l, a, b) {\n\t    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n\t  }\n\t  function d3_lab_xyz(x) {\n\t    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n\t  }\n\t  function d3_xyz_lab(x) {\n\t    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n\t  }\n\t  function d3_xyz_rgb(r) {\n\t    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n\t  }\n\t  d3.rgb = d3_rgb;\n\t  function d3_rgb(r, g, b) {\n\t    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n\t  }\n\t  function d3_rgbNumber(value) {\n\t    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n\t  }\n\t  function d3_rgbString(value) {\n\t    return d3_rgbNumber(value) + \"\";\n\t  }\n\t  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n\t  d3_rgbPrototype.brighter = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    var r = this.r, g = this.g, b = this.b, i = 30;\n\t    if (!r && !g && !b) return new d3_rgb(i, i, i);\n\t    if (r && r < i) r = i;\n\t    if (g && g < i) g = i;\n\t    if (b && b < i) b = i;\n\t    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n\t  };\n\t  d3_rgbPrototype.darker = function(k) {\n\t    k = Math.pow(.7, arguments.length ? k : 1);\n\t    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n\t  };\n\t  d3_rgbPrototype.hsl = function() {\n\t    return d3_rgb_hsl(this.r, this.g, this.b);\n\t  };\n\t  d3_rgbPrototype.toString = function() {\n\t    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n\t  };\n\t  function d3_rgb_hex(v) {\n\t    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n\t  }\n\t  function d3_rgb_parse(format, rgb, hsl) {\n\t    var r = 0, g = 0, b = 0, m1, m2, color;\n\t    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n\t    if (m1) {\n\t      m2 = m1[2].split(\",\");\n\t      switch (m1[1]) {\n\t       case \"hsl\":\n\t        {\n\t          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n\t        }\n\t\n\t       case \"rgb\":\n\t        {\n\t          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n\t        }\n\t      }\n\t    }\n\t    if (color = d3_rgb_names.get(format.toLowerCase())) {\n\t      return rgb(color.r, color.g, color.b);\n\t    }\n\t    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n\t      if (format.length === 4) {\n\t        r = (color & 3840) >> 4;\n\t        r = r >> 4 | r;\n\t        g = color & 240;\n\t        g = g >> 4 | g;\n\t        b = color & 15;\n\t        b = b << 4 | b;\n\t      } else if (format.length === 7) {\n\t        r = (color & 16711680) >> 16;\n\t        g = (color & 65280) >> 8;\n\t        b = color & 255;\n\t      }\n\t    }\n\t    return rgb(r, g, b);\n\t  }\n\t  function d3_rgb_hsl(r, g, b) {\n\t    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n\t    if (d) {\n\t      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n\t      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n\t      h *= 60;\n\t    } else {\n\t      h = NaN;\n\t      s = l > 0 && l < 1 ? 0 : h;\n\t    }\n\t    return new d3_hsl(h, s, l);\n\t  }\n\t  function d3_rgb_lab(r, g, b) {\n\t    r = d3_rgb_xyz(r);\n\t    g = d3_rgb_xyz(g);\n\t    b = d3_rgb_xyz(b);\n\t    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n\t    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n\t  }\n\t  function d3_rgb_xyz(r) {\n\t    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n\t  }\n\t  function d3_rgb_parseNumber(c) {\n\t    var f = parseFloat(c);\n\t    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n\t  }\n\t  var d3_rgb_names = d3.map({\n\t    aliceblue: 15792383,\n\t    antiquewhite: 16444375,\n\t    aqua: 65535,\n\t    aquamarine: 8388564,\n\t    azure: 15794175,\n\t    beige: 16119260,\n\t    bisque: 16770244,\n\t    black: 0,\n\t    blanchedalmond: 16772045,\n\t    blue: 255,\n\t    blueviolet: 9055202,\n\t    brown: 10824234,\n\t    burlywood: 14596231,\n\t    cadetblue: 6266528,\n\t    chartreuse: 8388352,\n\t    chocolate: 13789470,\n\t    coral: 16744272,\n\t    cornflowerblue: 6591981,\n\t    cornsilk: 16775388,\n\t    crimson: 14423100,\n\t    cyan: 65535,\n\t    darkblue: 139,\n\t    darkcyan: 35723,\n\t    darkgoldenrod: 12092939,\n\t    darkgray: 11119017,\n\t    darkgreen: 25600,\n\t    darkgrey: 11119017,\n\t    darkkhaki: 12433259,\n\t    darkmagenta: 9109643,\n\t    darkolivegreen: 5597999,\n\t    darkorange: 16747520,\n\t    darkorchid: 10040012,\n\t    darkred: 9109504,\n\t    darksalmon: 15308410,\n\t    darkseagreen: 9419919,\n\t    darkslateblue: 4734347,\n\t    darkslategray: 3100495,\n\t    darkslategrey: 3100495,\n\t    darkturquoise: 52945,\n\t    darkviolet: 9699539,\n\t    deeppink: 16716947,\n\t    deepskyblue: 49151,\n\t    dimgray: 6908265,\n\t    dimgrey: 6908265,\n\t    dodgerblue: 2003199,\n\t    firebrick: 11674146,\n\t    floralwhite: 16775920,\n\t    forestgreen: 2263842,\n\t    fuchsia: 16711935,\n\t    gainsboro: 14474460,\n\t    ghostwhite: 16316671,\n\t    gold: 16766720,\n\t    goldenrod: 14329120,\n\t    gray: 8421504,\n\t    green: 32768,\n\t    greenyellow: 11403055,\n\t    grey: 8421504,\n\t    honeydew: 15794160,\n\t    hotpink: 16738740,\n\t    indianred: 13458524,\n\t    indigo: 4915330,\n\t    ivory: 16777200,\n\t    khaki: 15787660,\n\t    lavender: 15132410,\n\t    lavenderblush: 16773365,\n\t    lawngreen: 8190976,\n\t    lemonchiffon: 16775885,\n\t    lightblue: 11393254,\n\t    lightcoral: 15761536,\n\t    lightcyan: 14745599,\n\t    lightgoldenrodyellow: 16448210,\n\t    lightgray: 13882323,\n\t    lightgreen: 9498256,\n\t    lightgrey: 13882323,\n\t    lightpink: 16758465,\n\t    lightsalmon: 16752762,\n\t    lightseagreen: 2142890,\n\t    lightskyblue: 8900346,\n\t    lightslategray: 7833753,\n\t    lightslategrey: 7833753,\n\t    lightsteelblue: 11584734,\n\t    lightyellow: 16777184,\n\t    lime: 65280,\n\t    limegreen: 3329330,\n\t    linen: 16445670,\n\t    magenta: 16711935,\n\t    maroon: 8388608,\n\t    mediumaquamarine: 6737322,\n\t    mediumblue: 205,\n\t    mediumorchid: 12211667,\n\t    mediumpurple: 9662683,\n\t    mediumseagreen: 3978097,\n\t    mediumslateblue: 8087790,\n\t    mediumspringgreen: 64154,\n\t    mediumturquoise: 4772300,\n\t    mediumvioletred: 13047173,\n\t    midnightblue: 1644912,\n\t    mintcream: 16121850,\n\t    mistyrose: 16770273,\n\t    moccasin: 16770229,\n\t    navajowhite: 16768685,\n\t    navy: 128,\n\t    oldlace: 16643558,\n\t    olive: 8421376,\n\t    olivedrab: 7048739,\n\t    orange: 16753920,\n\t    orangered: 16729344,\n\t    orchid: 14315734,\n\t    palegoldenrod: 15657130,\n\t    palegreen: 10025880,\n\t    paleturquoise: 11529966,\n\t    palevioletred: 14381203,\n\t    papayawhip: 16773077,\n\t    peachpuff: 16767673,\n\t    peru: 13468991,\n\t    pink: 16761035,\n\t    plum: 14524637,\n\t    powderblue: 11591910,\n\t    purple: 8388736,\n\t    rebeccapurple: 6697881,\n\t    red: 16711680,\n\t    rosybrown: 12357519,\n\t    royalblue: 4286945,\n\t    saddlebrown: 9127187,\n\t    salmon: 16416882,\n\t    sandybrown: 16032864,\n\t    seagreen: 3050327,\n\t    seashell: 16774638,\n\t    sienna: 10506797,\n\t    silver: 12632256,\n\t    skyblue: 8900331,\n\t    slateblue: 6970061,\n\t    slategray: 7372944,\n\t    slategrey: 7372944,\n\t    snow: 16775930,\n\t    springgreen: 65407,\n\t    steelblue: 4620980,\n\t    tan: 13808780,\n\t    teal: 32896,\n\t    thistle: 14204888,\n\t    tomato: 16737095,\n\t    turquoise: 4251856,\n\t    violet: 15631086,\n\t    wheat: 16113331,\n\t    white: 16777215,\n\t    whitesmoke: 16119285,\n\t    yellow: 16776960,\n\t    yellowgreen: 10145074\n\t  });\n\t  d3_rgb_names.forEach(function(key, value) {\n\t    d3_rgb_names.set(key, d3_rgbNumber(value));\n\t  });\n\t  function d3_functor(v) {\n\t    return typeof v === \"function\" ? v : function() {\n\t      return v;\n\t    };\n\t  }\n\t  d3.functor = d3_functor;\n\t  d3.xhr = d3_xhrType(d3_identity);\n\t  function d3_xhrType(response) {\n\t    return function(url, mimeType, callback) {\n\t      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n\t      mimeType = null;\n\t      return d3_xhr(url, mimeType, response, callback);\n\t    };\n\t  }\n\t  function d3_xhr(url, mimeType, response, callback) {\n\t    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n\t    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n\t    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n\t      request.readyState > 3 && respond();\n\t    };\n\t    function respond() {\n\t      var status = request.status, result;\n\t      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n\t        try {\n\t          result = response.call(xhr, request);\n\t        } catch (e) {\n\t          dispatch.error.call(xhr, e);\n\t          return;\n\t        }\n\t        dispatch.load.call(xhr, result);\n\t      } else {\n\t        dispatch.error.call(xhr, request);\n\t      }\n\t    }\n\t    request.onprogress = function(event) {\n\t      var o = d3.event;\n\t      d3.event = event;\n\t      try {\n\t        dispatch.progress.call(xhr, request);\n\t      } finally {\n\t        d3.event = o;\n\t      }\n\t    };\n\t    xhr.header = function(name, value) {\n\t      name = (name + \"\").toLowerCase();\n\t      if (arguments.length < 2) return headers[name];\n\t      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.mimeType = function(value) {\n\t      if (!arguments.length) return mimeType;\n\t      mimeType = value == null ? null : value + \"\";\n\t      return xhr;\n\t    };\n\t    xhr.responseType = function(value) {\n\t      if (!arguments.length) return responseType;\n\t      responseType = value;\n\t      return xhr;\n\t    };\n\t    xhr.response = function(value) {\n\t      response = value;\n\t      return xhr;\n\t    };\n\t    [ \"get\", \"post\" ].forEach(function(method) {\n\t      xhr[method] = function() {\n\t        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n\t      };\n\t    });\n\t    xhr.send = function(method, data, callback) {\n\t      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n\t      request.open(method, url, true);\n\t      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n\t      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n\t      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n\t      if (responseType != null) request.responseType = responseType;\n\t      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n\t        callback(null, request);\n\t      });\n\t      dispatch.beforesend.call(xhr, request);\n\t      request.send(data == null ? null : data);\n\t      return xhr;\n\t    };\n\t    xhr.abort = function() {\n\t      request.abort();\n\t      return xhr;\n\t    };\n\t    d3.rebind(xhr, dispatch, \"on\");\n\t    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n\t  }\n\t  function d3_xhr_fixCallback(callback) {\n\t    return callback.length === 1 ? function(error, request) {\n\t      callback(error == null ? request : null);\n\t    } : callback;\n\t  }\n\t  function d3_xhrHasResponse(request) {\n\t    var type = request.responseType;\n\t    return type && type !== \"text\" ? request.response : request.responseText;\n\t  }\n\t  d3.dsv = function(delimiter, mimeType) {\n\t    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n\t    function dsv(url, row, callback) {\n\t      if (arguments.length < 3) callback = row, row = null;\n\t      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n\t      xhr.row = function(_) {\n\t        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n\t      };\n\t      return xhr;\n\t    }\n\t    function response(request) {\n\t      return dsv.parse(request.responseText);\n\t    }\n\t    function typedResponse(f) {\n\t      return function(request) {\n\t        return dsv.parse(request.responseText, f);\n\t      };\n\t    }\n\t    dsv.parse = function(text, f) {\n\t      var o;\n\t      return dsv.parseRows(text, function(row, i) {\n\t        if (o) return o(row, i - 1);\n\t        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n\t          return JSON.stringify(name) + \": d[\" + i + \"]\";\n\t        }).join(\",\") + \"}\");\n\t        o = f ? function(row, i) {\n\t          return f(a(row), i);\n\t        } : a;\n\t      });\n\t    };\n\t    dsv.parseRows = function(text, f) {\n\t      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n\t      function token() {\n\t        if (I >= N) return EOF;\n\t        if (eol) return eol = false, EOL;\n\t        var j = I;\n\t        if (text.charCodeAt(j) === 34) {\n\t          var i = j;\n\t          while (i++ < N) {\n\t            if (text.charCodeAt(i) === 34) {\n\t              if (text.charCodeAt(i + 1) !== 34) break;\n\t              ++i;\n\t            }\n\t          }\n\t          I = i + 2;\n\t          var c = text.charCodeAt(i + 1);\n\t          if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(i + 2) === 10) ++I;\n\t          } else if (c === 10) {\n\t            eol = true;\n\t          }\n\t          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n\t        }\n\t        while (I < N) {\n\t          var c = text.charCodeAt(I++), k = 1;\n\t          if (c === 10) eol = true; else if (c === 13) {\n\t            eol = true;\n\t            if (text.charCodeAt(I) === 10) ++I, ++k;\n\t          } else if (c !== delimiterCode) continue;\n\t          return text.slice(j, I - k);\n\t        }\n\t        return text.slice(j);\n\t      }\n\t      while ((t = token()) !== EOF) {\n\t        var a = [];\n\t        while (t !== EOL && t !== EOF) {\n\t          a.push(t);\n\t          t = token();\n\t        }\n\t        if (f && (a = f(a, n++)) == null) continue;\n\t        rows.push(a);\n\t      }\n\t      return rows;\n\t    };\n\t    dsv.format = function(rows) {\n\t      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n\t      var fieldSet = new d3_Set(), fields = [];\n\t      rows.forEach(function(row) {\n\t        for (var field in row) {\n\t          if (!fieldSet.has(field)) {\n\t            fields.push(fieldSet.add(field));\n\t          }\n\t        }\n\t      });\n\t      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n\t        return fields.map(function(field) {\n\t          return formatValue(row[field]);\n\t        }).join(delimiter);\n\t      })).join(\"\\n\");\n\t    };\n\t    dsv.formatRows = function(rows) {\n\t      return rows.map(formatRow).join(\"\\n\");\n\t    };\n\t    function formatRow(row) {\n\t      return row.map(formatValue).join(delimiter);\n\t    }\n\t    function formatValue(text) {\n\t      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n\t    }\n\t    return dsv;\n\t  };\n\t  d3.csv = d3.dsv(\",\", \"text/csv\");\n\t  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n\t  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n\t    setTimeout(callback, 17);\n\t  };\n\t  d3.timer = function(callback, delay, then) {\n\t    var n = arguments.length;\n\t    if (n < 2) delay = 0;\n\t    if (n < 3) then = Date.now();\n\t    var time = then + delay, timer = {\n\t      c: callback,\n\t      t: time,\n\t      f: false,\n\t      n: null\n\t    };\n\t    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n\t    d3_timer_queueTail = timer;\n\t    if (!d3_timer_interval) {\n\t      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  };\n\t  function d3_timer_step() {\n\t    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n\t    if (delay > 24) {\n\t      if (isFinite(delay)) {\n\t        clearTimeout(d3_timer_timeout);\n\t        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n\t      }\n\t      d3_timer_interval = 0;\n\t    } else {\n\t      d3_timer_interval = 1;\n\t      d3_timer_frame(d3_timer_step);\n\t    }\n\t  }\n\t  d3.timer.flush = function() {\n\t    d3_timer_mark();\n\t    d3_timer_sweep();\n\t  };\n\t  function d3_timer_mark() {\n\t    var now = Date.now();\n\t    d3_timer_active = d3_timer_queueHead;\n\t    while (d3_timer_active) {\n\t      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n\t      d3_timer_active = d3_timer_active.n;\n\t    }\n\t    return now;\n\t  }\n\t  function d3_timer_sweep() {\n\t    var t0, t1 = d3_timer_queueHead, time = Infinity;\n\t    while (t1) {\n\t      if (t1.f) {\n\t        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n\t      } else {\n\t        if (t1.t < time) time = t1.t;\n\t        t1 = (t0 = t1).n;\n\t      }\n\t    }\n\t    d3_timer_queueTail = t0;\n\t    return time;\n\t  }\n\t  function d3_format_precision(x, p) {\n\t    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n\t  }\n\t  d3.round = function(x, n) {\n\t    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n\t  };\n\t  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n\t  d3.formatPrefix = function(value, precision) {\n\t    var i = 0;\n\t    if (value) {\n\t      if (value < 0) value *= -1;\n\t      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n\t      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n\t      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n\t    }\n\t    return d3_formatPrefixes[8 + i / 3];\n\t  };\n\t  function d3_formatPrefix(d, i) {\n\t    var k = Math.pow(10, abs(8 - i) * 3);\n\t    return {\n\t      scale: i > 8 ? function(d) {\n\t        return d / k;\n\t      } : function(d) {\n\t        return d * k;\n\t      },\n\t      symbol: d\n\t    };\n\t  }\n\t  function d3_locale_numberFormat(locale) {\n\t    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n\t      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n\t      while (i > 0 && g > 0) {\n\t        if (length + g + 1 > width) g = Math.max(1, width - length);\n\t        t.push(value.substring(i -= g, i + g));\n\t        if ((length += g + 1) > width) break;\n\t        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n\t      }\n\t      return t.reverse().join(locale_thousands);\n\t    } : d3_identity;\n\t    return function(specifier) {\n\t      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n\t      if (precision) precision = +precision.substring(1);\n\t      if (zfill || fill === \"0\" && align === \"=\") {\n\t        zfill = fill = \"0\";\n\t        align = \"=\";\n\t      }\n\t      switch (type) {\n\t       case \"n\":\n\t        comma = true;\n\t        type = \"g\";\n\t        break;\n\t\n\t       case \"%\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"f\";\n\t        break;\n\t\n\t       case \"p\":\n\t        scale = 100;\n\t        suffix = \"%\";\n\t        type = \"r\";\n\t        break;\n\t\n\t       case \"b\":\n\t       case \"o\":\n\t       case \"x\":\n\t       case \"X\":\n\t        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\t\n\t       case \"c\":\n\t        exponent = false;\n\t\n\t       case \"d\":\n\t        integer = true;\n\t        precision = 0;\n\t        break;\n\t\n\t       case \"s\":\n\t        scale = -1;\n\t        type = \"r\";\n\t        break;\n\t      }\n\t      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n\t      if (type == \"r\" && !precision) type = \"g\";\n\t      if (precision != null) {\n\t        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n\t      }\n\t      type = d3_format_types.get(type) || d3_format_typeDefault;\n\t      var zcomma = zfill && comma;\n\t      return function(value) {\n\t        var fullSuffix = suffix;\n\t        if (integer && value % 1) return \"\";\n\t        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n\t        if (scale < 0) {\n\t          var unit = d3.formatPrefix(value, precision);\n\t          value = unit.scale(value);\n\t          fullSuffix = unit.symbol + suffix;\n\t        } else {\n\t          value *= scale;\n\t        }\n\t        value = type(value, precision);\n\t        var i = value.lastIndexOf(\".\"), before, after;\n\t        if (i < 0) {\n\t          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n\t          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n\t        } else {\n\t          before = value.substring(0, i);\n\t          after = locale_decimal + value.substring(i + 1);\n\t        }\n\t        if (!zfill && comma) before = formatGroup(before, Infinity);\n\t        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n\t        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n\t        negative += prefix;\n\t        value = before + after;\n\t        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n\t      };\n\t    };\n\t  }\n\t  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n\t  var d3_format_types = d3.map({\n\t    b: function(x) {\n\t      return x.toString(2);\n\t    },\n\t    c: function(x) {\n\t      return String.fromCharCode(x);\n\t    },\n\t    o: function(x) {\n\t      return x.toString(8);\n\t    },\n\t    x: function(x) {\n\t      return x.toString(16);\n\t    },\n\t    X: function(x) {\n\t      return x.toString(16).toUpperCase();\n\t    },\n\t    g: function(x, p) {\n\t      return x.toPrecision(p);\n\t    },\n\t    e: function(x, p) {\n\t      return x.toExponential(p);\n\t    },\n\t    f: function(x, p) {\n\t      return x.toFixed(p);\n\t    },\n\t    r: function(x, p) {\n\t      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n\t    }\n\t  });\n\t  function d3_format_typeDefault(x) {\n\t    return x + \"\";\n\t  }\n\t  var d3_time = d3.time = {}, d3_date = Date;\n\t  function d3_date_utc() {\n\t    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n\t  }\n\t  d3_date_utc.prototype = {\n\t    getDate: function() {\n\t      return this._.getUTCDate();\n\t    },\n\t    getDay: function() {\n\t      return this._.getUTCDay();\n\t    },\n\t    getFullYear: function() {\n\t      return this._.getUTCFullYear();\n\t    },\n\t    getHours: function() {\n\t      return this._.getUTCHours();\n\t    },\n\t    getMilliseconds: function() {\n\t      return this._.getUTCMilliseconds();\n\t    },\n\t    getMinutes: function() {\n\t      return this._.getUTCMinutes();\n\t    },\n\t    getMonth: function() {\n\t      return this._.getUTCMonth();\n\t    },\n\t    getSeconds: function() {\n\t      return this._.getUTCSeconds();\n\t    },\n\t    getTime: function() {\n\t      return this._.getTime();\n\t    },\n\t    getTimezoneOffset: function() {\n\t      return 0;\n\t    },\n\t    valueOf: function() {\n\t      return this._.valueOf();\n\t    },\n\t    setDate: function() {\n\t      d3_time_prototype.setUTCDate.apply(this._, arguments);\n\t    },\n\t    setDay: function() {\n\t      d3_time_prototype.setUTCDay.apply(this._, arguments);\n\t    },\n\t    setFullYear: function() {\n\t      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n\t    },\n\t    setHours: function() {\n\t      d3_time_prototype.setUTCHours.apply(this._, arguments);\n\t    },\n\t    setMilliseconds: function() {\n\t      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n\t    },\n\t    setMinutes: function() {\n\t      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n\t    },\n\t    setMonth: function() {\n\t      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n\t    },\n\t    setSeconds: function() {\n\t      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n\t    },\n\t    setTime: function() {\n\t      d3_time_prototype.setTime.apply(this._, arguments);\n\t    }\n\t  };\n\t  var d3_time_prototype = Date.prototype;\n\t  function d3_time_interval(local, step, number) {\n\t    function round(date) {\n\t      var d0 = local(date), d1 = offset(d0, 1);\n\t      return date - d0 < d1 - date ? d0 : d1;\n\t    }\n\t    function ceil(date) {\n\t      step(date = local(new d3_date(date - 1)), 1);\n\t      return date;\n\t    }\n\t    function offset(date, k) {\n\t      step(date = new d3_date(+date), k);\n\t      return date;\n\t    }\n\t    function range(t0, t1, dt) {\n\t      var time = ceil(t0), times = [];\n\t      if (dt > 1) {\n\t        while (time < t1) {\n\t          if (!(number(time) % dt)) times.push(new Date(+time));\n\t          step(time, 1);\n\t        }\n\t      } else {\n\t        while (time < t1) times.push(new Date(+time)), step(time, 1);\n\t      }\n\t      return times;\n\t    }\n\t    function range_utc(t0, t1, dt) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = t0;\n\t        return range(utc, t1, dt);\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    }\n\t    local.floor = local;\n\t    local.round = round;\n\t    local.ceil = ceil;\n\t    local.offset = offset;\n\t    local.range = range;\n\t    var utc = local.utc = d3_time_interval_utc(local);\n\t    utc.floor = utc;\n\t    utc.round = d3_time_interval_utc(round);\n\t    utc.ceil = d3_time_interval_utc(ceil);\n\t    utc.offset = d3_time_interval_utc(offset);\n\t    utc.range = range_utc;\n\t    return local;\n\t  }\n\t  function d3_time_interval_utc(method) {\n\t    return function(date, k) {\n\t      try {\n\t        d3_date = d3_date_utc;\n\t        var utc = new d3_date_utc();\n\t        utc._ = date;\n\t        return method(utc, k)._;\n\t      } finally {\n\t        d3_date = Date;\n\t      }\n\t    };\n\t  }\n\t  d3_time.year = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setMonth(0, 1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setFullYear(date.getFullYear() + offset);\n\t  }, function(date) {\n\t    return date.getFullYear();\n\t  });\n\t  d3_time.years = d3_time.year.range;\n\t  d3_time.years.utc = d3_time.year.utc.range;\n\t  d3_time.day = d3_time_interval(function(date) {\n\t    var day = new d3_date(2e3, 0);\n\t    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n\t    return day;\n\t  }, function(date, offset) {\n\t    date.setDate(date.getDate() + offset);\n\t  }, function(date) {\n\t    return date.getDate() - 1;\n\t  });\n\t  d3_time.days = d3_time.day.range;\n\t  d3_time.days.utc = d3_time.day.utc.range;\n\t  d3_time.dayOfYear = function(date) {\n\t    var year = d3_time.year(date);\n\t    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n\t  };\n\t  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n\t    i = 7 - i;\n\t    var interval = d3_time[day] = d3_time_interval(function(date) {\n\t      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n\t      return date;\n\t    }, function(date, offset) {\n\t      date.setDate(date.getDate() + Math.floor(offset) * 7);\n\t    }, function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n\t    });\n\t    d3_time[day + \"s\"] = interval.range;\n\t    d3_time[day + \"s\"].utc = interval.utc.range;\n\t    d3_time[day + \"OfYear\"] = function(date) {\n\t      var day = d3_time.year(date).getDay();\n\t      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n\t    };\n\t  });\n\t  d3_time.week = d3_time.sunday;\n\t  d3_time.weeks = d3_time.sunday.range;\n\t  d3_time.weeks.utc = d3_time.sunday.utc.range;\n\t  d3_time.weekOfYear = d3_time.sundayOfYear;\n\t  function d3_locale_timeFormat(locale) {\n\t    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n\t    function d3_time_format(template) {\n\t      var n = template.length;\n\t      function format(date) {\n\t        var string = [], i = -1, j = 0, c, p, f;\n\t        while (++i < n) {\n\t          if (template.charCodeAt(i) === 37) {\n\t            string.push(template.slice(j, i));\n\t            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n\t            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n\t            string.push(c);\n\t            j = i + 1;\n\t          }\n\t        }\n\t        string.push(template.slice(j, i));\n\t        return string.join(\"\");\n\t      }\n\t      format.parse = function(string) {\n\t        var d = {\n\t          y: 1900,\n\t          m: 0,\n\t          d: 1,\n\t          H: 0,\n\t          M: 0,\n\t          S: 0,\n\t          L: 0,\n\t          Z: null\n\t        }, i = d3_time_parse(d, template, string, 0);\n\t        if (i != string.length) return null;\n\t        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n\t        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n\t        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n\t          date.setFullYear(d.y, 0, 1);\n\t          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n\t        } else date.setFullYear(d.y, d.m, d.d);\n\t        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n\t        return localZ ? date._ : date;\n\t      };\n\t      format.toString = function() {\n\t        return template;\n\t      };\n\t      return format;\n\t    }\n\t    function d3_time_parse(date, template, string, j) {\n\t      var c, p, t, i = 0, n = template.length, m = string.length;\n\t      while (i < n) {\n\t        if (j >= m) return -1;\n\t        c = template.charCodeAt(i++);\n\t        if (c === 37) {\n\t          t = template.charAt(i++);\n\t          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n\t          if (!p || (j = p(date, string, j)) < 0) return -1;\n\t        } else if (c != string.charCodeAt(j++)) {\n\t          return -1;\n\t        }\n\t      }\n\t      return j;\n\t    }\n\t    d3_time_format.utc = function(template) {\n\t      var local = d3_time_format(template);\n\t      function format(date) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var utc = new d3_date();\n\t          utc._ = date;\n\t          return local(utc);\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      }\n\t      format.parse = function(string) {\n\t        try {\n\t          d3_date = d3_date_utc;\n\t          var date = local.parse(string);\n\t          return date && date._;\n\t        } finally {\n\t          d3_date = Date;\n\t        }\n\t      };\n\t      format.toString = local.toString;\n\t      return format;\n\t    };\n\t    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n\t    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n\t    locale_periods.forEach(function(p, i) {\n\t      d3_time_periodLookup.set(p.toLowerCase(), i);\n\t    });\n\t    var d3_time_formats = {\n\t      a: function(d) {\n\t        return locale_shortDays[d.getDay()];\n\t      },\n\t      A: function(d) {\n\t        return locale_days[d.getDay()];\n\t      },\n\t      b: function(d) {\n\t        return locale_shortMonths[d.getMonth()];\n\t      },\n\t      B: function(d) {\n\t        return locale_months[d.getMonth()];\n\t      },\n\t      c: d3_time_format(locale_dateTime),\n\t      d: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      e: function(d, p) {\n\t        return d3_time_formatPad(d.getDate(), p, 2);\n\t      },\n\t      H: function(d, p) {\n\t        return d3_time_formatPad(d.getHours(), p, 2);\n\t      },\n\t      I: function(d, p) {\n\t        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n\t      },\n\t      j: function(d, p) {\n\t        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n\t      },\n\t      L: function(d, p) {\n\t        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n\t      },\n\t      m: function(d, p) {\n\t        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n\t      },\n\t      M: function(d, p) {\n\t        return d3_time_formatPad(d.getMinutes(), p, 2);\n\t      },\n\t      p: function(d) {\n\t        return locale_periods[+(d.getHours() >= 12)];\n\t      },\n\t      S: function(d, p) {\n\t        return d3_time_formatPad(d.getSeconds(), p, 2);\n\t      },\n\t      U: function(d, p) {\n\t        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n\t      },\n\t      w: function(d) {\n\t        return d.getDay();\n\t      },\n\t      W: function(d, p) {\n\t        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n\t      },\n\t      x: d3_time_format(locale_date),\n\t      X: d3_time_format(locale_time),\n\t      y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n\t      },\n\t      Y: function(d, p) {\n\t        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n\t      },\n\t      Z: d3_time_zone,\n\t      \"%\": function() {\n\t        return \"%\";\n\t      }\n\t    };\n\t    var d3_time_parsers = {\n\t      a: d3_time_parseWeekdayAbbrev,\n\t      A: d3_time_parseWeekday,\n\t      b: d3_time_parseMonthAbbrev,\n\t      B: d3_time_parseMonth,\n\t      c: d3_time_parseLocaleFull,\n\t      d: d3_time_parseDay,\n\t      e: d3_time_parseDay,\n\t      H: d3_time_parseHour24,\n\t      I: d3_time_parseHour24,\n\t      j: d3_time_parseDayOfYear,\n\t      L: d3_time_parseMilliseconds,\n\t      m: d3_time_parseMonthNumber,\n\t      M: d3_time_parseMinutes,\n\t      p: d3_time_parseAmPm,\n\t      S: d3_time_parseSeconds,\n\t      U: d3_time_parseWeekNumberSunday,\n\t      w: d3_time_parseWeekdayNumber,\n\t      W: d3_time_parseWeekNumberMonday,\n\t      x: d3_time_parseLocaleDate,\n\t      X: d3_time_parseLocaleTime,\n\t      y: d3_time_parseYear,\n\t      Y: d3_time_parseFullYear,\n\t      Z: d3_time_parseZone,\n\t      \"%\": d3_time_parseLiteralPercent\n\t    };\n\t    function d3_time_parseWeekdayAbbrev(date, string, i) {\n\t      d3_time_dayAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseWeekday(date, string, i) {\n\t      d3_time_dayRe.lastIndex = 0;\n\t      var n = d3_time_dayRe.exec(string.slice(i));\n\t      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonthAbbrev(date, string, i) {\n\t      d3_time_monthAbbrevRe.lastIndex = 0;\n\t      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseMonth(date, string, i) {\n\t      d3_time_monthRe.lastIndex = 0;\n\t      var n = d3_time_monthRe.exec(string.slice(i));\n\t      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n\t    }\n\t    function d3_time_parseLocaleFull(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleDate(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n\t    }\n\t    function d3_time_parseLocaleTime(date, string, i) {\n\t      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n\t    }\n\t    function d3_time_parseAmPm(date, string, i) {\n\t      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n\t      return n == null ? -1 : (date.p = n, i);\n\t    }\n\t    return d3_time_format;\n\t  }\n\t  var d3_time_formatPads = {\n\t    \"-\": \"\",\n\t    _: \" \",\n\t    \"0\": \"0\"\n\t  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n\t  function d3_time_formatPad(value, fill, width) {\n\t    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n\t    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n\t  }\n\t  function d3_time_formatRe(names) {\n\t    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n\t  }\n\t  function d3_time_formatLookup(names) {\n\t    var map = new d3_Map(), i = -1, n = names.length;\n\t    while (++i < n) map.set(names[i].toLowerCase(), i);\n\t    return map;\n\t  }\n\t  function d3_time_parseWeekdayNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n\t    return n ? (date.w = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberSunday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.U = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseWeekNumberMonday(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i));\n\t    return n ? (date.W = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseFullYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n\t    return n ? (date.y = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseZone(date, string, i) {\n\t    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n\t    i + 5) : -1;\n\t  }\n\t  function d3_time_expandYear(d) {\n\t    return d + (d > 68 ? 1900 : 2e3);\n\t  }\n\t  function d3_time_parseMonthNumber(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDay(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.d = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseDayOfYear(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.j = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseHour24(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.H = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMinutes(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.M = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseSeconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n\t    return n ? (date.S = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_parseMilliseconds(date, string, i) {\n\t    d3_time_numberRe.lastIndex = 0;\n\t    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n\t    return n ? (date.L = +n[0], i + n[0].length) : -1;\n\t  }\n\t  function d3_time_zone(d) {\n\t    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n\t    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n\t  }\n\t  function d3_time_parseLiteralPercent(date, string, i) {\n\t    d3_time_percentRe.lastIndex = 0;\n\t    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n\t    return n ? i + n[0].length : -1;\n\t  }\n\t  function d3_time_formatMulti(formats) {\n\t    var n = formats.length, i = -1;\n\t    while (++i < n) formats[i][0] = this(formats[i][0]);\n\t    return function(date) {\n\t      var i = 0, f = formats[i];\n\t      while (!f[1](date)) f = formats[++i];\n\t      return f[0](date);\n\t    };\n\t  }\n\t  d3.locale = function(locale) {\n\t    return {\n\t      numberFormat: d3_locale_numberFormat(locale),\n\t      timeFormat: d3_locale_timeFormat(locale)\n\t    };\n\t  };\n\t  var d3_locale_enUS = d3.locale({\n\t    decimal: \".\",\n\t    thousands: \",\",\n\t    grouping: [ 3 ],\n\t    currency: [ \"$\", \"\" ],\n\t    dateTime: \"%a %b %e %X %Y\",\n\t    date: \"%m/%d/%Y\",\n\t    time: \"%H:%M:%S\",\n\t    periods: [ \"AM\", \"PM\" ],\n\t    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n\t    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n\t    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n\t    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n\t  });\n\t  d3.format = d3_locale_enUS.numberFormat;\n\t  d3.geo = {};\n\t  function d3_adder() {}\n\t  d3_adder.prototype = {\n\t    s: 0,\n\t    t: 0,\n\t    add: function(y) {\n\t      d3_adderSum(y, this.t, d3_adderTemp);\n\t      d3_adderSum(d3_adderTemp.s, this.s, this);\n\t      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n\t    },\n\t    reset: function() {\n\t      this.s = this.t = 0;\n\t    },\n\t    valueOf: function() {\n\t      return this.s;\n\t    }\n\t  };\n\t  var d3_adderTemp = new d3_adder();\n\t  function d3_adderSum(a, b, o) {\n\t    var x = o.s = a + b, bv = x - a, av = x - bv;\n\t    o.t = a - av + (b - bv);\n\t  }\n\t  d3.geo.stream = function(object, listener) {\n\t    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n\t      d3_geo_streamObjectType[object.type](object, listener);\n\t    } else {\n\t      d3_geo_streamGeometry(object, listener);\n\t    }\n\t  };\n\t  function d3_geo_streamGeometry(geometry, listener) {\n\t    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n\t      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n\t    }\n\t  }\n\t  var d3_geo_streamObjectType = {\n\t    Feature: function(feature, listener) {\n\t      d3_geo_streamGeometry(feature.geometry, listener);\n\t    },\n\t    FeatureCollection: function(object, listener) {\n\t      var features = object.features, i = -1, n = features.length;\n\t      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n\t    }\n\t  };\n\t  var d3_geo_streamGeometryType = {\n\t    Sphere: function(object, listener) {\n\t      listener.sphere();\n\t    },\n\t    Point: function(object, listener) {\n\t      object = object.coordinates;\n\t      listener.point(object[0], object[1], object[2]);\n\t    },\n\t    MultiPoint: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n\t    },\n\t    LineString: function(object, listener) {\n\t      d3_geo_streamLine(object.coordinates, listener, 0);\n\t    },\n\t    MultiLineString: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n\t    },\n\t    Polygon: function(object, listener) {\n\t      d3_geo_streamPolygon(object.coordinates, listener);\n\t    },\n\t    MultiPolygon: function(object, listener) {\n\t      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n\t      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n\t    },\n\t    GeometryCollection: function(object, listener) {\n\t      var geometries = object.geometries, i = -1, n = geometries.length;\n\t      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n\t    }\n\t  };\n\t  function d3_geo_streamLine(coordinates, listener, closed) {\n\t    var i = -1, n = coordinates.length - closed, coordinate;\n\t    listener.lineStart();\n\t    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n\t    listener.lineEnd();\n\t  }\n\t  function d3_geo_streamPolygon(coordinates, listener) {\n\t    var i = -1, n = coordinates.length;\n\t    listener.polygonStart();\n\t    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n\t    listener.polygonEnd();\n\t  }\n\t  d3.geo.area = function(object) {\n\t    d3_geo_areaSum = 0;\n\t    d3.geo.stream(object, d3_geo_area);\n\t    return d3_geo_areaSum;\n\t  };\n\t  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n\t  var d3_geo_area = {\n\t    sphere: function() {\n\t      d3_geo_areaSum += 4 * π;\n\t    },\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_areaRingSum.reset();\n\t      d3_geo_area.lineStart = d3_geo_areaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      var area = 2 * d3_geo_areaRingSum;\n\t      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n\t      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n\t    }\n\t  };\n\t  function d3_geo_areaRingStart() {\n\t    var λ00, φ00, λ0, cosφ0, sinφ0;\n\t    d3_geo_area.point = function(λ, φ) {\n\t      d3_geo_area.point = nextPoint;\n\t      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n\t      sinφ0 = Math.sin(φ);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      φ = φ * d3_radians / 2 + π / 4;\n\t      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n\t      d3_geo_areaRingSum.add(Math.atan2(v, u));\n\t      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n\t    }\n\t    d3_geo_area.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t    };\n\t  }\n\t  function d3_geo_cartesian(spherical) {\n\t    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n\t    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n\t  }\n\t  function d3_geo_cartesianDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n\t  }\n\t  function d3_geo_cartesianCross(a, b) {\n\t    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n\t  }\n\t  function d3_geo_cartesianAdd(a, b) {\n\t    a[0] += b[0];\n\t    a[1] += b[1];\n\t    a[2] += b[2];\n\t  }\n\t  function d3_geo_cartesianScale(vector, k) {\n\t    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n\t  }\n\t  function d3_geo_cartesianNormalize(d) {\n\t    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n\t    d[0] /= l;\n\t    d[1] /= l;\n\t    d[2] /= l;\n\t  }\n\t  function d3_geo_spherical(cartesian) {\n\t    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n\t  }\n\t  function d3_geo_sphericalEqual(a, b) {\n\t    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n\t  }\n\t  d3.geo.bounds = function() {\n\t    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n\t    var bound = {\n\t      point: point,\n\t      lineStart: lineStart,\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        bound.point = ringPoint;\n\t        bound.lineStart = ringStart;\n\t        bound.lineEnd = ringEnd;\n\t        dλSum = 0;\n\t        d3_geo_area.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        d3_geo_area.polygonEnd();\n\t        bound.point = point;\n\t        bound.lineStart = lineStart;\n\t        bound.lineEnd = lineEnd;\n\t        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n\t        range[0] = λ0, range[1] = λ1;\n\t      }\n\t    };\n\t    function point(λ, φ) {\n\t      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n\t      if (φ < φ0) φ0 = φ;\n\t      if (φ > φ1) φ1 = φ;\n\t    }\n\t    function linePoint(λ, φ) {\n\t      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n\t      if (p0) {\n\t        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n\t        d3_geo_cartesianNormalize(inflection);\n\t        inflection = d3_geo_spherical(inflection);\n\t        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n\t        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = inflection[1] * d3_degrees;\n\t          if (φi > φ1) φ1 = φi;\n\t        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n\t          var φi = -inflection[1] * d3_degrees;\n\t          if (φi < φ0) φ0 = φi;\n\t        } else {\n\t          if (φ < φ0) φ0 = φ;\n\t          if (φ > φ1) φ1 = φ;\n\t        }\n\t        if (antimeridian) {\n\t          if (λ < λ_) {\n\t            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t          } else {\n\t            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t          }\n\t        } else {\n\t          if (λ1 >= λ0) {\n\t            if (λ < λ0) λ0 = λ;\n\t            if (λ > λ1) λ1 = λ;\n\t          } else {\n\t            if (λ > λ_) {\n\t              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n\t            } else {\n\t              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n\t            }\n\t          }\n\t        }\n\t      } else {\n\t        point(λ, φ);\n\t      }\n\t      p0 = p, λ_ = λ;\n\t    }\n\t    function lineStart() {\n\t      bound.point = linePoint;\n\t    }\n\t    function lineEnd() {\n\t      range[0] = λ0, range[1] = λ1;\n\t      bound.point = point;\n\t      p0 = null;\n\t    }\n\t    function ringPoint(λ, φ) {\n\t      if (p0) {\n\t        var dλ = λ - λ_;\n\t        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n\t      } else λ__ = λ, φ__ = φ;\n\t      d3_geo_area.point(λ, φ);\n\t      linePoint(λ, φ);\n\t    }\n\t    function ringStart() {\n\t      d3_geo_area.lineStart();\n\t    }\n\t    function ringEnd() {\n\t      ringPoint(λ__, φ__);\n\t      d3_geo_area.lineEnd();\n\t      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n\t      range[0] = λ0, range[1] = λ1;\n\t      p0 = null;\n\t    }\n\t    function angle(λ0, λ1) {\n\t      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n\t    }\n\t    function compareRanges(a, b) {\n\t      return a[0] - b[0];\n\t    }\n\t    function withinRange(x, range) {\n\t      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n\t    }\n\t    return function(feature) {\n\t      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n\t      ranges = [];\n\t      d3.geo.stream(feature, bound);\n\t      var n = ranges.length;\n\t      if (n) {\n\t        ranges.sort(compareRanges);\n\t        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n\t          b = ranges[i];\n\t          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n\t            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n\t            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n\t          } else {\n\t            merged.push(a = b);\n\t          }\n\t        }\n\t        var best = -Infinity, dλ;\n\t        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n\t          b = merged[i];\n\t          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n\t        }\n\t      }\n\t      ranges = range = null;\n\t      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n\t    };\n\t  }();\n\t  d3.geo.centroid = function(object) {\n\t    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t    d3.geo.stream(object, d3_geo_centroid);\n\t    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n\t    if (m < ε2) {\n\t      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n\t      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n\t      m = x * x + y * y + z * z;\n\t      if (m < ε2) return [ NaN, NaN ];\n\t    }\n\t    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n\t  };\n\t  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n\t  var d3_geo_centroid = {\n\t    sphere: d3_noop,\n\t    point: d3_geo_centroidPoint,\n\t    lineStart: d3_geo_centroidLineStart,\n\t    lineEnd: d3_geo_centroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n\t    }\n\t  };\n\t  function d3_geo_centroidPoint(λ, φ) {\n\t    λ *= d3_radians;\n\t    var cosφ = Math.cos(φ *= d3_radians);\n\t    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n\t  }\n\t  function d3_geo_centroidPointXYZ(x, y, z) {\n\t    ++d3_geo_centroidW0;\n\t    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n\t    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n\t    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n\t  }\n\t  function d3_geo_centroidLineStart() {\n\t    var x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroid.point = nextPoint;\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_centroidLineEnd() {\n\t    d3_geo_centroid.point = d3_geo_centroidPoint;\n\t  }\n\t  function d3_geo_centroidRingStart() {\n\t    var λ00, φ00, x0, y0, z0;\n\t    d3_geo_centroid.point = function(λ, φ) {\n\t      λ00 = λ, φ00 = φ;\n\t      d3_geo_centroid.point = nextPoint;\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians);\n\t      x0 = cosφ * Math.cos(λ);\n\t      y0 = cosφ * Math.sin(λ);\n\t      z0 = Math.sin(φ);\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    };\n\t    d3_geo_centroid.lineEnd = function() {\n\t      nextPoint(λ00, φ00);\n\t      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n\t      d3_geo_centroid.point = d3_geo_centroidPoint;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      λ *= d3_radians;\n\t      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n\t      d3_geo_centroidX2 += v * cx;\n\t      d3_geo_centroidY2 += v * cy;\n\t      d3_geo_centroidZ2 += v * cz;\n\t      d3_geo_centroidW1 += w;\n\t      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n\t      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n\t      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n\t      d3_geo_centroidPointXYZ(x0, y0, z0);\n\t    }\n\t  }\n\t  function d3_geo_compose(a, b) {\n\t    function compose(x, y) {\n\t      return x = a(x, y), b(x[0], x[1]);\n\t    }\n\t    if (a.invert && b.invert) compose.invert = function(x, y) {\n\t      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n\t    };\n\t    return compose;\n\t  }\n\t  function d3_true() {\n\t    return true;\n\t  }\n\t  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n\t    var subject = [], clip = [];\n\t    segments.forEach(function(segment) {\n\t      if ((n = segment.length - 1) <= 0) return;\n\t      var n, p0 = segment[0], p1 = segment[n];\n\t      if (d3_geo_sphericalEqual(p0, p1)) {\n\t        listener.lineStart();\n\t        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n\t        listener.lineEnd();\n\t        return;\n\t      }\n\t      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n\t      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n\t      a.o = b;\n\t      subject.push(a);\n\t      clip.push(b);\n\t    });\n\t    clip.sort(compare);\n\t    d3_geo_clipPolygonLinkCircular(subject);\n\t    d3_geo_clipPolygonLinkCircular(clip);\n\t    if (!subject.length) return;\n\t    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n\t      clip[i].e = entry = !entry;\n\t    }\n\t    var start = subject[0], points, point;\n\t    while (1) {\n\t      var current = start, isSubject = true;\n\t      while (current.v) if ((current = current.n) === start) return;\n\t      points = current.z;\n\t      listener.lineStart();\n\t      do {\n\t        current.v = current.o.v = true;\n\t        if (current.e) {\n\t          if (isSubject) {\n\t            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.n.x, 1, listener);\n\t          }\n\t          current = current.n;\n\t        } else {\n\t          if (isSubject) {\n\t            points = current.p.z;\n\t            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n\t          } else {\n\t            interpolate(current.x, current.p.x, -1, listener);\n\t          }\n\t          current = current.p;\n\t        }\n\t        current = current.o;\n\t        points = current.z;\n\t        isSubject = !isSubject;\n\t      } while (!current.v);\n\t      listener.lineEnd();\n\t    }\n\t  }\n\t  function d3_geo_clipPolygonLinkCircular(array) {\n\t    if (!(n = array.length)) return;\n\t    var n, i = 0, a = array[0], b;\n\t    while (++i < n) {\n\t      a.n = b = array[i];\n\t      b.p = a;\n\t      a = b;\n\t    }\n\t    a.n = b = array[0];\n\t    b.p = a;\n\t  }\n\t  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n\t    this.x = point;\n\t    this.z = points;\n\t    this.o = other;\n\t    this.e = entry;\n\t    this.v = false;\n\t    this.n = this.p = null;\n\t  }\n\t  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n\t    return function(rotate, listener) {\n\t      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          clip.point = pointRing;\n\t          clip.lineStart = ringStart;\n\t          clip.lineEnd = ringEnd;\n\t          segments = [];\n\t          polygon = [];\n\t        },\n\t        polygonEnd: function() {\n\t          clip.point = point;\n\t          clip.lineStart = lineStart;\n\t          clip.lineEnd = lineEnd;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n\t          if (segments.length) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n\t          } else if (clipStartInside) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            interpolate(null, null, 1, listener);\n\t            listener.lineEnd();\n\t          }\n\t          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n\t          segments = polygon = null;\n\t        },\n\t        sphere: function() {\n\t          listener.polygonStart();\n\t          listener.lineStart();\n\t          interpolate(null, null, 1, listener);\n\t          listener.lineEnd();\n\t          listener.polygonEnd();\n\t        }\n\t      };\n\t      function point(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n\t      }\n\t      function pointLine(λ, φ) {\n\t        var point = rotate(λ, φ);\n\t        line.point(point[0], point[1]);\n\t      }\n\t      function lineStart() {\n\t        clip.point = pointLine;\n\t        line.lineStart();\n\t      }\n\t      function lineEnd() {\n\t        clip.point = point;\n\t        line.lineEnd();\n\t      }\n\t      var segments;\n\t      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n\t      function pointRing(λ, φ) {\n\t        ring.push([ λ, φ ]);\n\t        var point = rotate(λ, φ);\n\t        ringListener.point(point[0], point[1]);\n\t      }\n\t      function ringStart() {\n\t        ringListener.lineStart();\n\t        ring = [];\n\t      }\n\t      function ringEnd() {\n\t        pointRing(ring[0][0], ring[0][1]);\n\t        ringListener.lineEnd();\n\t        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n\t        ring.pop();\n\t        polygon.push(ring);\n\t        ring = null;\n\t        if (!n) return;\n\t        if (clean & 1) {\n\t          segment = ringSegments[0];\n\t          var n = segment.length - 1, i = -1, point;\n\t          if (n > 0) {\n\t            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n\t            listener.lineStart();\n\t            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n\t            listener.lineEnd();\n\t          }\n\t          return;\n\t        }\n\t        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n\t        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n\t      }\n\t      return clip;\n\t    };\n\t  }\n\t  function d3_geo_clipSegmentLength1(segment) {\n\t    return segment.length > 1;\n\t  }\n\t  function d3_geo_clipBufferListener() {\n\t    var lines = [], line;\n\t    return {\n\t      lineStart: function() {\n\t        lines.push(line = []);\n\t      },\n\t      point: function(λ, φ) {\n\t        line.push([ λ, φ ]);\n\t      },\n\t      lineEnd: d3_noop,\n\t      buffer: function() {\n\t        var buffer = lines;\n\t        lines = [];\n\t        line = null;\n\t        return buffer;\n\t      },\n\t      rejoin: function() {\n\t        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipSort(a, b) {\n\t    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n\t  }\n\t  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n\t  function d3_geo_clipAntimeridianLine(listener) {\n\t    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n\t    return {\n\t      lineStart: function() {\n\t        listener.lineStart();\n\t        clean = 1;\n\t      },\n\t      point: function(λ1, φ1) {\n\t        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n\t        if (abs(dλ - π) < ε) {\n\t          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          listener.point(λ1, φ0);\n\t          clean = 0;\n\t        } else if (sλ0 !== sλ1 && dλ >= π) {\n\t          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n\t          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n\t          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n\t          listener.point(sλ0, φ0);\n\t          listener.lineEnd();\n\t          listener.lineStart();\n\t          listener.point(sλ1, φ0);\n\t          clean = 0;\n\t        }\n\t        listener.point(λ0 = λ1, φ0 = φ1);\n\t        sλ0 = sλ1;\n\t      },\n\t      lineEnd: function() {\n\t        listener.lineEnd();\n\t        λ0 = φ0 = NaN;\n\t      },\n\t      clean: function() {\n\t        return 2 - clean;\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n\t    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n\t    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n\t  }\n\t  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n\t    var φ;\n\t    if (from == null) {\n\t      φ = direction * halfπ;\n\t      listener.point(-π, φ);\n\t      listener.point(0, φ);\n\t      listener.point(π, φ);\n\t      listener.point(π, 0);\n\t      listener.point(π, -φ);\n\t      listener.point(0, -φ);\n\t      listener.point(-π, -φ);\n\t      listener.point(-π, 0);\n\t      listener.point(-π, φ);\n\t    } else if (abs(from[0] - to[0]) > ε) {\n\t      var s = from[0] < to[0] ? π : -π;\n\t      φ = direction * s / 2;\n\t      listener.point(-s, φ);\n\t      listener.point(0, φ);\n\t      listener.point(s, φ);\n\t    } else {\n\t      listener.point(to[0], to[1]);\n\t    }\n\t  }\n\t  function d3_geo_pointInPolygon(point, polygon) {\n\t    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n\t    d3_geo_areaRingSum.reset();\n\t    for (var i = 0, n = polygon.length; i < n; ++i) {\n\t      var ring = polygon[i], m = ring.length;\n\t      if (!m) continue;\n\t      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n\t      while (true) {\n\t        if (j === m) j = 0;\n\t        point = ring[j];\n\t        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n\t        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n\t        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n\t        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n\t          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n\t          d3_geo_cartesianNormalize(arc);\n\t          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n\t          d3_geo_cartesianNormalize(intersection);\n\t          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n\t          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n\t            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n\t          }\n\t        }\n\t        if (!j++) break;\n\t        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n\t      }\n\t    }\n\t    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n\t  }\n\t  function d3_geo_clipCircle(radius) {\n\t    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n\t    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n\t    function visible(λ, φ) {\n\t      return Math.cos(λ) * Math.cos(φ) > cr;\n\t    }\n\t    function clipLine(listener) {\n\t      var point0, c0, v0, v00, clean;\n\t      return {\n\t        lineStart: function() {\n\t          v00 = v0 = false;\n\t          clean = 1;\n\t        },\n\t        point: function(λ, φ) {\n\t          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n\t          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n\t          if (v !== v0) {\n\t            point2 = intersect(point0, point1);\n\t            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n\t              point1[0] += ε;\n\t              point1[1] += ε;\n\t              v = visible(point1[0], point1[1]);\n\t            }\n\t          }\n\t          if (v !== v0) {\n\t            clean = 0;\n\t            if (v) {\n\t              listener.lineStart();\n\t              point2 = intersect(point1, point0);\n\t              listener.point(point2[0], point2[1]);\n\t            } else {\n\t              point2 = intersect(point0, point1);\n\t              listener.point(point2[0], point2[1]);\n\t              listener.lineEnd();\n\t            }\n\t            point0 = point2;\n\t          } else if (notHemisphere && point0 && smallRadius ^ v) {\n\t            var t;\n\t            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n\t              clean = 0;\n\t              if (smallRadius) {\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t              } else {\n\t                listener.point(t[1][0], t[1][1]);\n\t                listener.lineEnd();\n\t                listener.lineStart();\n\t                listener.point(t[0][0], t[0][1]);\n\t              }\n\t            }\n\t          }\n\t          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n\t            listener.point(point1[0], point1[1]);\n\t          }\n\t          point0 = point1, v0 = v, c0 = c;\n\t        },\n\t        lineEnd: function() {\n\t          if (v0) listener.lineEnd();\n\t          point0 = null;\n\t        },\n\t        clean: function() {\n\t          return clean | (v00 && v0) << 1;\n\t        }\n\t      };\n\t    }\n\t    function intersect(a, b, two) {\n\t      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n\t      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n\t      if (!determinant) return !two && a;\n\t      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n\t      d3_geo_cartesianAdd(A, B);\n\t      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n\t      if (t2 < 0) return;\n\t      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n\t      d3_geo_cartesianAdd(q, A);\n\t      q = d3_geo_spherical(q);\n\t      if (!two) return q;\n\t      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n\t      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n\t      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n\t      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n\t      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n\t        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n\t        d3_geo_cartesianAdd(q1, A);\n\t        return [ q, d3_geo_spherical(q1) ];\n\t      }\n\t    }\n\t    function code(λ, φ) {\n\t      var r = smallRadius ? radius : π - radius, code = 0;\n\t      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n\t      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n\t      return code;\n\t    }\n\t  }\n\t  function d3_geom_clipLine(x0, y0, x1, y1) {\n\t    return function(line) {\n\t      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n\t      r = x0 - ax;\n\t      if (!dx && r > 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dx > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = x1 - ax;\n\t      if (!dx && r < 0) return;\n\t      r /= dx;\n\t      if (dx < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dx > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      r = y0 - ay;\n\t      if (!dy && r > 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      } else if (dy > 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      }\n\t      r = y1 - ay;\n\t      if (!dy && r < 0) return;\n\t      r /= dy;\n\t      if (dy < 0) {\n\t        if (r > t1) return;\n\t        if (r > t0) t0 = r;\n\t      } else if (dy > 0) {\n\t        if (r < t0) return;\n\t        if (r < t1) t1 = r;\n\t      }\n\t      if (t0 > 0) line.a = {\n\t        x: ax + t0 * dx,\n\t        y: ay + t0 * dy\n\t      };\n\t      if (t1 < 1) line.b = {\n\t        x: ax + t1 * dx,\n\t        y: ay + t1 * dy\n\t      };\n\t      return line;\n\t    };\n\t  }\n\t  var d3_geo_clipExtentMAX = 1e9;\n\t  d3.geo.clipExtent = function() {\n\t    var x0, y0, x1, y1, stream, clip, clipExtent = {\n\t      stream: function(output) {\n\t        if (stream) stream.valid = false;\n\t        stream = clip(output);\n\t        stream.valid = true;\n\t        return stream;\n\t      },\n\t      extent: function(_) {\n\t        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n\t        if (stream) stream.valid = false, stream = null;\n\t        return clipExtent;\n\t      }\n\t    };\n\t    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n\t  };\n\t  function d3_geo_clipExtent(x0, y0, x1, y1) {\n\t    return function(listener) {\n\t      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n\t      var clip = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          listener = bufferListener;\n\t          segments = [];\n\t          polygon = [];\n\t          clean = true;\n\t        },\n\t        polygonEnd: function() {\n\t          listener = listener_;\n\t          segments = d3.merge(segments);\n\t          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n\t          if (inside || visible) {\n\t            listener.polygonStart();\n\t            if (inside) {\n\t              listener.lineStart();\n\t              interpolate(null, null, 1, listener);\n\t              listener.lineEnd();\n\t            }\n\t            if (visible) {\n\t              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n\t            }\n\t            listener.polygonEnd();\n\t          }\n\t          segments = polygon = ring = null;\n\t        }\n\t      };\n\t      function insidePolygon(p) {\n\t        var wn = 0, n = polygon.length, y = p[1];\n\t        for (var i = 0; i < n; ++i) {\n\t          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n\t            b = v[j];\n\t            if (a[1] <= y) {\n\t              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n\t            } else {\n\t              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n\t            }\n\t            a = b;\n\t          }\n\t        }\n\t        return wn !== 0;\n\t      }\n\t      function interpolate(from, to, direction, listener) {\n\t        var a = 0, a1 = 0;\n\t        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n\t          do {\n\t            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n\t          } while ((a = (a + direction + 4) % 4) !== a1);\n\t        } else {\n\t          listener.point(to[0], to[1]);\n\t        }\n\t      }\n\t      function pointVisible(x, y) {\n\t        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n\t      }\n\t      function point(x, y) {\n\t        if (pointVisible(x, y)) listener.point(x, y);\n\t      }\n\t      var x__, y__, v__, x_, y_, v_, first, clean;\n\t      function lineStart() {\n\t        clip.point = linePoint;\n\t        if (polygon) polygon.push(ring = []);\n\t        first = true;\n\t        v_ = false;\n\t        x_ = y_ = NaN;\n\t      }\n\t      function lineEnd() {\n\t        if (segments) {\n\t          linePoint(x__, y__);\n\t          if (v__ && v_) bufferListener.rejoin();\n\t          segments.push(bufferListener.buffer());\n\t        }\n\t        clip.point = point;\n\t        if (v_) listener.lineEnd();\n\t      }\n\t      function linePoint(x, y) {\n\t        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n\t        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n\t        var v = pointVisible(x, y);\n\t        if (polygon) ring.push([ x, y ]);\n\t        if (first) {\n\t          x__ = x, y__ = y, v__ = v;\n\t          first = false;\n\t          if (v) {\n\t            listener.lineStart();\n\t            listener.point(x, y);\n\t          }\n\t        } else {\n\t          if (v && v_) listener.point(x, y); else {\n\t            var l = {\n\t              a: {\n\t                x: x_,\n\t                y: y_\n\t              },\n\t              b: {\n\t                x: x,\n\t                y: y\n\t              }\n\t            };\n\t            if (clipLine(l)) {\n\t              if (!v_) {\n\t                listener.lineStart();\n\t                listener.point(l.a.x, l.a.y);\n\t              }\n\t              listener.point(l.b.x, l.b.y);\n\t              if (!v) listener.lineEnd();\n\t              clean = false;\n\t            } else if (v) {\n\t              listener.lineStart();\n\t              listener.point(x, y);\n\t              clean = false;\n\t            }\n\t          }\n\t        }\n\t        x_ = x, y_ = y, v_ = v;\n\t      }\n\t      return clip;\n\t    };\n\t    function corner(p, direction) {\n\t      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n\t    }\n\t    function compare(a, b) {\n\t      return comparePoints(a.x, b.x);\n\t    }\n\t    function comparePoints(a, b) {\n\t      var ca = corner(a, 1), cb = corner(b, 1);\n\t      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n\t    }\n\t  }\n\t  function d3_geo_conic(projectAt) {\n\t    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n\t    p.parallels = function(_) {\n\t      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n\t      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n\t    };\n\t    return p;\n\t  }\n\t  function d3_geo_conicEqualArea(φ0, φ1) {\n\t    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n\t    function forward(λ, φ) {\n\t      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n\t      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = ρ0 - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEqualArea = function() {\n\t    return d3_geo_conic(d3_geo_conicEqualArea);\n\t  }).raw = d3_geo_conicEqualArea;\n\t  d3.geo.albers = function() {\n\t    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n\t  };\n\t  d3.geo.albersUsa = function() {\n\t    var lower48 = d3.geo.albers();\n\t    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n\t    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n\t    var point, pointStream = {\n\t      point: function(x, y) {\n\t        point = [ x, y ];\n\t      }\n\t    }, lower48Point, alaskaPoint, hawaiiPoint;\n\t    function albersUsa(coordinates) {\n\t      var x = coordinates[0], y = coordinates[1];\n\t      point = null;\n\t      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n\t      return point;\n\t    }\n\t    albersUsa.invert = function(coordinates) {\n\t      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n\t      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n\t    };\n\t    albersUsa.stream = function(stream) {\n\t      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n\t      return {\n\t        point: function(x, y) {\n\t          lower48Stream.point(x, y);\n\t          alaskaStream.point(x, y);\n\t          hawaiiStream.point(x, y);\n\t        },\n\t        sphere: function() {\n\t          lower48Stream.sphere();\n\t          alaskaStream.sphere();\n\t          hawaiiStream.sphere();\n\t        },\n\t        lineStart: function() {\n\t          lower48Stream.lineStart();\n\t          alaskaStream.lineStart();\n\t          hawaiiStream.lineStart();\n\t        },\n\t        lineEnd: function() {\n\t          lower48Stream.lineEnd();\n\t          alaskaStream.lineEnd();\n\t          hawaiiStream.lineEnd();\n\t        },\n\t        polygonStart: function() {\n\t          lower48Stream.polygonStart();\n\t          alaskaStream.polygonStart();\n\t          hawaiiStream.polygonStart();\n\t        },\n\t        polygonEnd: function() {\n\t          lower48Stream.polygonEnd();\n\t          alaskaStream.polygonEnd();\n\t          hawaiiStream.polygonEnd();\n\t        }\n\t      };\n\t    };\n\t    albersUsa.precision = function(_) {\n\t      if (!arguments.length) return lower48.precision();\n\t      lower48.precision(_);\n\t      alaska.precision(_);\n\t      hawaii.precision(_);\n\t      return albersUsa;\n\t    };\n\t    albersUsa.scale = function(_) {\n\t      if (!arguments.length) return lower48.scale();\n\t      lower48.scale(_);\n\t      alaska.scale(_ * .35);\n\t      hawaii.scale(_);\n\t      return albersUsa.translate(lower48.translate());\n\t    };\n\t    albersUsa.translate = function(_) {\n\t      if (!arguments.length) return lower48.translate();\n\t      var k = lower48.scale(), x = +_[0], y = +_[1];\n\t      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n\t      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n\t      return albersUsa;\n\t    };\n\t    return albersUsa.scale(1070);\n\t  };\n\t  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n\t    point: d3_noop,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: function() {\n\t      d3_geo_pathAreaPolygon = 0;\n\t      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n\t      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n\t    }\n\t  };\n\t  function d3_geo_pathAreaRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathArea.point = function(x, y) {\n\t      d3_geo_pathArea.point = nextPoint;\n\t      x00 = x0 = x, y00 = y0 = y;\n\t    };\n\t    function nextPoint(x, y) {\n\t      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n\t      x0 = x, y0 = y;\n\t    }\n\t    d3_geo_pathArea.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n\t  var d3_geo_pathBounds = {\n\t    point: d3_geo_pathBoundsPoint,\n\t    lineStart: d3_noop,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_pathBoundsPoint(x, y) {\n\t    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n\t    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n\t    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n\t    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n\t  }\n\t  function d3_geo_pathBuffer() {\n\t    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointCircle = d3_geo_pathBufferCircle(_);\n\t        return stream;\n\t      },\n\t      result: function() {\n\t        if (buffer.length) {\n\t          var result = buffer.join(\"\");\n\t          buffer = [];\n\t          return result;\n\t        }\n\t      }\n\t    };\n\t    function point(x, y) {\n\t      buffer.push(\"M\", x, \",\", y, pointCircle);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      buffer.push(\"M\", x, \",\", y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      buffer.push(\"L\", x, \",\", y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      buffer.push(\"Z\");\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_pathBufferCircle(radius) {\n\t    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n\t  }\n\t  var d3_geo_pathCentroid = {\n\t    point: d3_geo_pathCentroidPoint,\n\t    lineStart: d3_geo_pathCentroidLineStart,\n\t    lineEnd: d3_geo_pathCentroidLineEnd,\n\t    polygonStart: function() {\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n\t    },\n\t    polygonEnd: function() {\n\t      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n\t      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n\t    }\n\t  };\n\t  function d3_geo_pathCentroidPoint(x, y) {\n\t    d3_geo_centroidX0 += x;\n\t    d3_geo_centroidY0 += y;\n\t    ++d3_geo_centroidZ0;\n\t  }\n\t  function d3_geo_pathCentroidLineStart() {\n\t    var x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t  }\n\t  function d3_geo_pathCentroidLineEnd() {\n\t    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n\t  }\n\t  function d3_geo_pathCentroidRingStart() {\n\t    var x00, y00, x0, y0;\n\t    d3_geo_pathCentroid.point = function(x, y) {\n\t      d3_geo_pathCentroid.point = nextPoint;\n\t      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n\t    };\n\t    function nextPoint(x, y) {\n\t      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n\t      d3_geo_centroidX1 += z * (x0 + x) / 2;\n\t      d3_geo_centroidY1 += z * (y0 + y) / 2;\n\t      d3_geo_centroidZ1 += z;\n\t      z = y0 * x - x0 * y;\n\t      d3_geo_centroidX2 += z * (x0 + x);\n\t      d3_geo_centroidY2 += z * (y0 + y);\n\t      d3_geo_centroidZ2 += z * 3;\n\t      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n\t    }\n\t    d3_geo_pathCentroid.lineEnd = function() {\n\t      nextPoint(x00, y00);\n\t    };\n\t  }\n\t  function d3_geo_pathContext(context) {\n\t    var pointRadius = 4.5;\n\t    var stream = {\n\t      point: point,\n\t      lineStart: function() {\n\t        stream.point = pointLineStart;\n\t      },\n\t      lineEnd: lineEnd,\n\t      polygonStart: function() {\n\t        stream.lineEnd = lineEndPolygon;\n\t      },\n\t      polygonEnd: function() {\n\t        stream.lineEnd = lineEnd;\n\t        stream.point = point;\n\t      },\n\t      pointRadius: function(_) {\n\t        pointRadius = _;\n\t        return stream;\n\t      },\n\t      result: d3_noop\n\t    };\n\t    function point(x, y) {\n\t      context.moveTo(x + pointRadius, y);\n\t      context.arc(x, y, pointRadius, 0, τ);\n\t    }\n\t    function pointLineStart(x, y) {\n\t      context.moveTo(x, y);\n\t      stream.point = pointLine;\n\t    }\n\t    function pointLine(x, y) {\n\t      context.lineTo(x, y);\n\t    }\n\t    function lineEnd() {\n\t      stream.point = point;\n\t    }\n\t    function lineEndPolygon() {\n\t      context.closePath();\n\t    }\n\t    return stream;\n\t  }\n\t  function d3_geo_resample(project) {\n\t    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n\t    function resample(stream) {\n\t      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n\t    }\n\t    function resampleNone(stream) {\n\t      return d3_geo_transformPoint(stream, function(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      });\n\t    }\n\t    function resampleRecursive(stream) {\n\t      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n\t      var resample = {\n\t        point: point,\n\t        lineStart: lineStart,\n\t        lineEnd: lineEnd,\n\t        polygonStart: function() {\n\t          stream.polygonStart();\n\t          resample.lineStart = ringStart;\n\t        },\n\t        polygonEnd: function() {\n\t          stream.polygonEnd();\n\t          resample.lineStart = lineStart;\n\t        }\n\t      };\n\t      function point(x, y) {\n\t        x = project(x, y);\n\t        stream.point(x[0], x[1]);\n\t      }\n\t      function lineStart() {\n\t        x0 = NaN;\n\t        resample.point = linePoint;\n\t        stream.lineStart();\n\t      }\n\t      function linePoint(λ, φ) {\n\t        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n\t        stream.point(x0, y0);\n\t      }\n\t      function lineEnd() {\n\t        resample.point = point;\n\t        stream.lineEnd();\n\t      }\n\t      function ringStart() {\n\t        lineStart();\n\t        resample.point = ringPoint;\n\t        resample.lineEnd = ringEnd;\n\t      }\n\t      function ringPoint(λ, φ) {\n\t        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n\t        resample.point = linePoint;\n\t      }\n\t      function ringEnd() {\n\t        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n\t        resample.lineEnd = lineEnd;\n\t        lineEnd();\n\t      }\n\t      return resample;\n\t    }\n\t    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n\t      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n\t      if (d2 > 4 * δ2 && depth--) {\n\t        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n\t        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n\t          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n\t          stream.point(x2, y2);\n\t          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n\t        }\n\t      }\n\t    }\n\t    resample.precision = function(_) {\n\t      if (!arguments.length) return Math.sqrt(δ2);\n\t      maxDepth = (δ2 = _ * _) > 0 && 16;\n\t      return resample;\n\t    };\n\t    return resample;\n\t  }\n\t  d3.geo.path = function() {\n\t    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n\t    function path(object) {\n\t      if (object) {\n\t        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n\t        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n\t        d3.geo.stream(object, cacheStream);\n\t      }\n\t      return contextStream.result();\n\t    }\n\t    path.area = function(object) {\n\t      d3_geo_pathAreaSum = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n\t      return d3_geo_pathAreaSum;\n\t    };\n\t    path.centroid = function(object) {\n\t      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n\t      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n\t      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n\t    };\n\t    path.bounds = function(object) {\n\t      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n\t      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n\t      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n\t    };\n\t    path.projection = function(_) {\n\t      if (!arguments.length) return projection;\n\t      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n\t      return reset();\n\t    };\n\t    path.context = function(_) {\n\t      if (!arguments.length) return context;\n\t      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n\t      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n\t      return reset();\n\t    };\n\t    path.pointRadius = function(_) {\n\t      if (!arguments.length) return pointRadius;\n\t      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n\t      return path;\n\t    };\n\t    function reset() {\n\t      cacheStream = null;\n\t      return path;\n\t    }\n\t    return path.projection(d3.geo.albersUsa()).context(null);\n\t  };\n\t  function d3_geo_pathProjectStream(project) {\n\t    var resample = d3_geo_resample(function(x, y) {\n\t      return project([ x * d3_degrees, y * d3_degrees ]);\n\t    });\n\t    return function(stream) {\n\t      return d3_geo_projectionRadians(resample(stream));\n\t    };\n\t  }\n\t  d3.geo.transform = function(methods) {\n\t    return {\n\t      stream: function(stream) {\n\t        var transform = new d3_geo_transform(stream);\n\t        for (var k in methods) transform[k] = methods[k];\n\t        return transform;\n\t      }\n\t    };\n\t  };\n\t  function d3_geo_transform(stream) {\n\t    this.stream = stream;\n\t  }\n\t  d3_geo_transform.prototype = {\n\t    point: function(x, y) {\n\t      this.stream.point(x, y);\n\t    },\n\t    sphere: function() {\n\t      this.stream.sphere();\n\t    },\n\t    lineStart: function() {\n\t      this.stream.lineStart();\n\t    },\n\t    lineEnd: function() {\n\t      this.stream.lineEnd();\n\t    },\n\t    polygonStart: function() {\n\t      this.stream.polygonStart();\n\t    },\n\t    polygonEnd: function() {\n\t      this.stream.polygonEnd();\n\t    }\n\t  };\n\t  function d3_geo_transformPoint(stream, point) {\n\t    return {\n\t      point: point,\n\t      sphere: function() {\n\t        stream.sphere();\n\t      },\n\t      lineStart: function() {\n\t        stream.lineStart();\n\t      },\n\t      lineEnd: function() {\n\t        stream.lineEnd();\n\t      },\n\t      polygonStart: function() {\n\t        stream.polygonStart();\n\t      },\n\t      polygonEnd: function() {\n\t        stream.polygonEnd();\n\t      }\n\t    };\n\t  }\n\t  d3.geo.projection = d3_geo_projection;\n\t  d3.geo.projectionMutator = d3_geo_projectionMutator;\n\t  function d3_geo_projection(project) {\n\t    return d3_geo_projectionMutator(function() {\n\t      return project;\n\t    })();\n\t  }\n\t  function d3_geo_projectionMutator(projectAt) {\n\t    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n\t      x = project(x, y);\n\t      return [ x[0] * k + δx, δy - x[1] * k ];\n\t    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n\t    function projection(point) {\n\t      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n\t      return [ point[0] * k + δx, δy - point[1] * k ];\n\t    }\n\t    function invert(point) {\n\t      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n\t      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n\t    }\n\t    projection.stream = function(output) {\n\t      if (stream) stream.valid = false;\n\t      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n\t      stream.valid = true;\n\t      return stream;\n\t    };\n\t    projection.clipAngle = function(_) {\n\t      if (!arguments.length) return clipAngle;\n\t      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n\t      return invalidate();\n\t    };\n\t    projection.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent;\n\t      clipExtent = _;\n\t      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n\t      return invalidate();\n\t    };\n\t    projection.scale = function(_) {\n\t      if (!arguments.length) return k;\n\t      k = +_;\n\t      return reset();\n\t    };\n\t    projection.translate = function(_) {\n\t      if (!arguments.length) return [ x, y ];\n\t      x = +_[0];\n\t      y = +_[1];\n\t      return reset();\n\t    };\n\t    projection.center = function(_) {\n\t      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n\t      λ = _[0] % 360 * d3_radians;\n\t      φ = _[1] % 360 * d3_radians;\n\t      return reset();\n\t    };\n\t    projection.rotate = function(_) {\n\t      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n\t      δλ = _[0] % 360 * d3_radians;\n\t      δφ = _[1] % 360 * d3_radians;\n\t      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n\t      return reset();\n\t    };\n\t    d3.rebind(projection, projectResample, \"precision\");\n\t    function reset() {\n\t      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n\t      var center = project(λ, φ);\n\t      δx = x - center[0] * k;\n\t      δy = y + center[1] * k;\n\t      return invalidate();\n\t    }\n\t    function invalidate() {\n\t      if (stream) stream.valid = false, stream = null;\n\t      return projection;\n\t    }\n\t    return function() {\n\t      project = projectAt.apply(this, arguments);\n\t      projection.invert = project.invert && invert;\n\t      return reset();\n\t    };\n\t  }\n\t  function d3_geo_projectionRadians(stream) {\n\t    return d3_geo_transformPoint(stream, function(x, y) {\n\t      stream.point(x * d3_radians, y * d3_radians);\n\t    });\n\t  }\n\t  function d3_geo_equirectangular(λ, φ) {\n\t    return [ λ, φ ];\n\t  }\n\t  (d3.geo.equirectangular = function() {\n\t    return d3_geo_projection(d3_geo_equirectangular);\n\t  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n\t  d3.geo.rotation = function(rotate) {\n\t    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n\t    function forward(coordinates) {\n\t      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    }\n\t    forward.invert = function(coordinates) {\n\t      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n\t      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n\t    };\n\t    return forward;\n\t  };\n\t  function d3_geo_identityRotation(λ, φ) {\n\t    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t  }\n\t  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n\t  function d3_geo_rotation(δλ, δφ, δγ) {\n\t    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n\t  }\n\t  function d3_geo_forwardRotationλ(δλ) {\n\t    return function(λ, φ) {\n\t      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n\t    };\n\t  }\n\t  function d3_geo_rotationλ(δλ) {\n\t    var rotation = d3_geo_forwardRotationλ(δλ);\n\t    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n\t    return rotation;\n\t  }\n\t  function d3_geo_rotationφγ(δφ, δγ) {\n\t    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n\t    function rotation(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n\t      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n\t    }\n\t    rotation.invert = function(λ, φ) {\n\t      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n\t      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n\t    };\n\t    return rotation;\n\t  }\n\t  d3.geo.circle = function() {\n\t    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n\t    function circle() {\n\t      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n\t      interpolate(null, null, 1, {\n\t        point: function(x, y) {\n\t          ring.push(x = rotate(x, y));\n\t          x[0] *= d3_degrees, x[1] *= d3_degrees;\n\t        }\n\t      });\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ ring ]\n\t      };\n\t    }\n\t    circle.origin = function(x) {\n\t      if (!arguments.length) return origin;\n\t      origin = x;\n\t      return circle;\n\t    };\n\t    circle.angle = function(x) {\n\t      if (!arguments.length) return angle;\n\t      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n\t      return circle;\n\t    };\n\t    circle.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n\t      return circle;\n\t    };\n\t    return circle.angle(90);\n\t  };\n\t  function d3_geo_circleInterpolate(radius, precision) {\n\t    var cr = Math.cos(radius), sr = Math.sin(radius);\n\t    return function(from, to, direction, listener) {\n\t      var step = direction * precision;\n\t      if (from != null) {\n\t        from = d3_geo_circleAngle(cr, from);\n\t        to = d3_geo_circleAngle(cr, to);\n\t        if (direction > 0 ? from < to : from > to) from += direction * τ;\n\t      } else {\n\t        from = radius + direction * τ;\n\t        to = radius - .5 * step;\n\t      }\n\t      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n\t        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n\t      }\n\t    };\n\t  }\n\t  function d3_geo_circleAngle(cr, point) {\n\t    var a = d3_geo_cartesian(point);\n\t    a[0] -= cr;\n\t    d3_geo_cartesianNormalize(a);\n\t    var angle = d3_acos(-a[1]);\n\t    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n\t  }\n\t  d3.geo.distance = function(a, b) {\n\t    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n\t    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n\t  };\n\t  d3.geo.graticule = function() {\n\t    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n\t    function graticule() {\n\t      return {\n\t        type: \"MultiLineString\",\n\t        coordinates: lines()\n\t      };\n\t    }\n\t    function lines() {\n\t      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n\t        return abs(x % DX) > ε;\n\t      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n\t        return abs(y % DY) > ε;\n\t      }).map(y));\n\t    }\n\t    graticule.lines = function() {\n\t      return lines().map(function(coordinates) {\n\t        return {\n\t          type: \"LineString\",\n\t          coordinates: coordinates\n\t        };\n\t      });\n\t    };\n\t    graticule.outline = function() {\n\t      return {\n\t        type: \"Polygon\",\n\t        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n\t      };\n\t    };\n\t    graticule.extent = function(_) {\n\t      if (!arguments.length) return graticule.minorExtent();\n\t      return graticule.majorExtent(_).minorExtent(_);\n\t    };\n\t    graticule.majorExtent = function(_) {\n\t      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n\t      X0 = +_[0][0], X1 = +_[1][0];\n\t      Y0 = +_[0][1], Y1 = +_[1][1];\n\t      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n\t      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.minorExtent = function(_) {\n\t      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n\t      x0 = +_[0][0], x1 = +_[1][0];\n\t      y0 = +_[0][1], y1 = +_[1][1];\n\t      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n\t      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n\t      return graticule.precision(precision);\n\t    };\n\t    graticule.step = function(_) {\n\t      if (!arguments.length) return graticule.minorStep();\n\t      return graticule.majorStep(_).minorStep(_);\n\t    };\n\t    graticule.majorStep = function(_) {\n\t      if (!arguments.length) return [ DX, DY ];\n\t      DX = +_[0], DY = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.minorStep = function(_) {\n\t      if (!arguments.length) return [ dx, dy ];\n\t      dx = +_[0], dy = +_[1];\n\t      return graticule;\n\t    };\n\t    graticule.precision = function(_) {\n\t      if (!arguments.length) return precision;\n\t      precision = +_;\n\t      x = d3_geo_graticuleX(y0, y1, 90);\n\t      y = d3_geo_graticuleY(x0, x1, precision);\n\t      X = d3_geo_graticuleX(Y0, Y1, 90);\n\t      Y = d3_geo_graticuleY(X0, X1, precision);\n\t      return graticule;\n\t    };\n\t    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n\t  };\n\t  function d3_geo_graticuleX(y0, y1, dy) {\n\t    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n\t    return function(x) {\n\t      return y.map(function(y) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_geo_graticuleY(x0, x1, dx) {\n\t    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n\t    return function(y) {\n\t      return x.map(function(x) {\n\t        return [ x, y ];\n\t      });\n\t    };\n\t  }\n\t  function d3_source(d) {\n\t    return d.source;\n\t  }\n\t  function d3_target(d) {\n\t    return d.target;\n\t  }\n\t  d3.geo.greatArc = function() {\n\t    var source = d3_source, source_, target = d3_target, target_;\n\t    function greatArc() {\n\t      return {\n\t        type: \"LineString\",\n\t        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n\t      };\n\t    }\n\t    greatArc.distance = function() {\n\t      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n\t    };\n\t    greatArc.source = function(_) {\n\t      if (!arguments.length) return source;\n\t      source = _, source_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.target = function(_) {\n\t      if (!arguments.length) return target;\n\t      target = _, target_ = typeof _ === \"function\" ? null : _;\n\t      return greatArc;\n\t    };\n\t    greatArc.precision = function() {\n\t      return arguments.length ? greatArc : 0;\n\t    };\n\t    return greatArc;\n\t  };\n\t  d3.geo.interpolate = function(source, target) {\n\t    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n\t  };\n\t  function d3_geo_interpolate(x0, y0, x1, y1) {\n\t    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n\t    var interpolate = d ? function(t) {\n\t      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n\t      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n\t    } : function() {\n\t      return [ x0 * d3_degrees, y0 * d3_degrees ];\n\t    };\n\t    interpolate.distance = d;\n\t    return interpolate;\n\t  }\n\t  d3.geo.length = function(object) {\n\t    d3_geo_lengthSum = 0;\n\t    d3.geo.stream(object, d3_geo_length);\n\t    return d3_geo_lengthSum;\n\t  };\n\t  var d3_geo_lengthSum;\n\t  var d3_geo_length = {\n\t    sphere: d3_noop,\n\t    point: d3_noop,\n\t    lineStart: d3_geo_lengthLineStart,\n\t    lineEnd: d3_noop,\n\t    polygonStart: d3_noop,\n\t    polygonEnd: d3_noop\n\t  };\n\t  function d3_geo_lengthLineStart() {\n\t    var λ0, sinφ0, cosφ0;\n\t    d3_geo_length.point = function(λ, φ) {\n\t      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n\t      d3_geo_length.point = nextPoint;\n\t    };\n\t    d3_geo_length.lineEnd = function() {\n\t      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n\t    };\n\t    function nextPoint(λ, φ) {\n\t      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n\t      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n\t      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n\t    }\n\t  }\n\t  function d3_geo_azimuthal(scale, angle) {\n\t    function azimuthal(λ, φ) {\n\t      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n\t      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n\t    }\n\t    azimuthal.invert = function(x, y) {\n\t      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n\t      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n\t    };\n\t    return azimuthal;\n\t  }\n\t  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return Math.sqrt(2 / (1 + cosλcosφ));\n\t  }, function(ρ) {\n\t    return 2 * Math.asin(ρ / 2);\n\t  });\n\t  (d3.geo.azimuthalEqualArea = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n\t  }).raw = d3_geo_azimuthalEqualArea;\n\t  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n\t    var c = Math.acos(cosλcosφ);\n\t    return c && c / Math.sin(c);\n\t  }, d3_identity);\n\t  (d3.geo.azimuthalEquidistant = function() {\n\t    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n\t  }).raw = d3_geo_azimuthalEquidistant;\n\t  function d3_geo_conicConformal(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), t = function(φ) {\n\t      return Math.tan(π / 4 + φ / 2);\n\t    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n\t    if (!n) return d3_geo_mercator;\n\t    function forward(λ, φ) {\n\t      if (F > 0) {\n\t        if (φ < -halfπ + ε) φ = -halfπ + ε;\n\t      } else {\n\t        if (φ > halfπ - ε) φ = halfπ - ε;\n\t      }\n\t      var ρ = F / Math.pow(t(φ), n);\n\t      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n\t      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicConformal = function() {\n\t    return d3_geo_conic(d3_geo_conicConformal);\n\t  }).raw = d3_geo_conicConformal;\n\t  function d3_geo_conicEquidistant(φ0, φ1) {\n\t    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n\t    if (abs(n) < ε) return d3_geo_equirectangular;\n\t    function forward(λ, φ) {\n\t      var ρ = G - φ;\n\t      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n\t    }\n\t    forward.invert = function(x, y) {\n\t      var ρ0_y = G - y;\n\t      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n\t    };\n\t    return forward;\n\t  }\n\t  (d3.geo.conicEquidistant = function() {\n\t    return d3_geo_conic(d3_geo_conicEquidistant);\n\t  }).raw = d3_geo_conicEquidistant;\n\t  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / cosλcosφ;\n\t  }, Math.atan);\n\t  (d3.geo.gnomonic = function() {\n\t    return d3_geo_projection(d3_geo_gnomonic);\n\t  }).raw = d3_geo_gnomonic;\n\t  function d3_geo_mercator(λ, φ) {\n\t    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n\t  }\n\t  d3_geo_mercator.invert = function(x, y) {\n\t    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n\t  };\n\t  function d3_geo_mercatorProjection(project) {\n\t    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n\t    m.scale = function() {\n\t      var v = scale.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.translate = function() {\n\t      var v = translate.apply(m, arguments);\n\t      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n\t    };\n\t    m.clipExtent = function(_) {\n\t      var v = clipExtent.apply(m, arguments);\n\t      if (v === m) {\n\t        if (clipAuto = _ == null) {\n\t          var k = π * scale(), t = translate();\n\t          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n\t        }\n\t      } else if (clipAuto) {\n\t        v = null;\n\t      }\n\t      return v;\n\t    };\n\t    return m.clipExtent(null);\n\t  }\n\t  (d3.geo.mercator = function() {\n\t    return d3_geo_mercatorProjection(d3_geo_mercator);\n\t  }).raw = d3_geo_mercator;\n\t  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n\t    return 1;\n\t  }, Math.asin);\n\t  (d3.geo.orthographic = function() {\n\t    return d3_geo_projection(d3_geo_orthographic);\n\t  }).raw = d3_geo_orthographic;\n\t  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n\t    return 1 / (1 + cosλcosφ);\n\t  }, function(ρ) {\n\t    return 2 * Math.atan(ρ);\n\t  });\n\t  (d3.geo.stereographic = function() {\n\t    return d3_geo_projection(d3_geo_stereographic);\n\t  }).raw = d3_geo_stereographic;\n\t  function d3_geo_transverseMercator(λ, φ) {\n\t    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n\t  }\n\t  d3_geo_transverseMercator.invert = function(x, y) {\n\t    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n\t  };\n\t  (d3.geo.transverseMercator = function() {\n\t    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n\t    projection.center = function(_) {\n\t      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n\t    };\n\t    projection.rotate = function(_) {\n\t      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n\t      [ _[0], _[1], _[2] - 90 ]);\n\t    };\n\t    return rotate([ 0, 0, 90 ]);\n\t  }).raw = d3_geo_transverseMercator;\n\t  d3.geom = {};\n\t  function d3_geom_pointX(d) {\n\t    return d[0];\n\t  }\n\t  function d3_geom_pointY(d) {\n\t    return d[1];\n\t  }\n\t  d3.geom.hull = function(vertices) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY;\n\t    if (arguments.length) return hull(vertices);\n\t    function hull(data) {\n\t      if (data.length < 3) return [];\n\t      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n\t      for (i = 0; i < n; i++) {\n\t        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n\t      }\n\t      points.sort(d3_geom_hullOrder);\n\t      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n\t      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n\t      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n\t      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n\t      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n\t      return polygon;\n\t    }\n\t    hull.x = function(_) {\n\t      return arguments.length ? (x = _, hull) : x;\n\t    };\n\t    hull.y = function(_) {\n\t      return arguments.length ? (y = _, hull) : y;\n\t    };\n\t    return hull;\n\t  };\n\t  function d3_geom_hullUpper(points) {\n\t    var n = points.length, hull = [ 0, 1 ], hs = 2;\n\t    for (var i = 2; i < n; i++) {\n\t      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n\t      hull[hs++] = i;\n\t    }\n\t    return hull.slice(0, hs);\n\t  }\n\t  function d3_geom_hullOrder(a, b) {\n\t    return a[0] - b[0] || a[1] - b[1];\n\t  }\n\t  d3.geom.polygon = function(coordinates) {\n\t    d3_subclass(coordinates, d3_geom_polygonPrototype);\n\t    return coordinates;\n\t  };\n\t  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n\t  d3_geom_polygonPrototype.area = function() {\n\t    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      area += a[1] * b[0] - a[0] * b[1];\n\t    }\n\t    return area * .5;\n\t  };\n\t  d3_geom_polygonPrototype.centroid = function(k) {\n\t    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n\t    if (!arguments.length) k = -1 / (6 * this.area());\n\t    while (++i < n) {\n\t      a = b;\n\t      b = this[i];\n\t      c = a[0] * b[1] - b[0] * a[1];\n\t      x += (a[0] + b[0]) * c;\n\t      y += (a[1] + b[1]) * c;\n\t    }\n\t    return [ x * k, y * k ];\n\t  };\n\t  d3_geom_polygonPrototype.clip = function(subject) {\n\t    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n\t    while (++i < n) {\n\t      input = subject.slice();\n\t      subject.length = 0;\n\t      b = this[i];\n\t      c = input[(m = input.length - closed) - 1];\n\t      j = -1;\n\t      while (++j < m) {\n\t        d = input[j];\n\t        if (d3_geom_polygonInside(d, a, b)) {\n\t          if (!d3_geom_polygonInside(c, a, b)) {\n\t            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t          }\n\t          subject.push(d);\n\t        } else if (d3_geom_polygonInside(c, a, b)) {\n\t          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n\t        }\n\t        c = d;\n\t      }\n\t      if (closed) subject.push(subject[0]);\n\t      a = b;\n\t    }\n\t    return subject;\n\t  };\n\t  function d3_geom_polygonInside(p, a, b) {\n\t    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n\t  }\n\t  function d3_geom_polygonIntersect(c, d, a, b) {\n\t    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n\t    return [ x1 + ua * x21, y1 + ua * y21 ];\n\t  }\n\t  function d3_geom_polygonClosed(coordinates) {\n\t    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n\t    return !(a[0] - b[0] || a[1] - b[1]);\n\t  }\n\t  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n\t  function d3_geom_voronoiBeach() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.edge = this.site = this.circle = null;\n\t  }\n\t  function d3_geom_voronoiCreateBeach(site) {\n\t    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n\t    beach.site = site;\n\t    return beach;\n\t  }\n\t  function d3_geom_voronoiDetachBeach(beach) {\n\t    d3_geom_voronoiDetachCircle(beach);\n\t    d3_geom_voronoiBeaches.remove(beach);\n\t    d3_geom_voronoiBeachPool.push(beach);\n\t    d3_geom_voronoiRedBlackNode(beach);\n\t  }\n\t  function d3_geom_voronoiRemoveBeach(beach) {\n\t    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n\t      x: x,\n\t      y: y\n\t    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n\t    d3_geom_voronoiDetachBeach(beach);\n\t    var lArc = previous;\n\t    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n\t      previous = lArc.P;\n\t      disappearing.unshift(lArc);\n\t      d3_geom_voronoiDetachBeach(lArc);\n\t      lArc = previous;\n\t    }\n\t    disappearing.unshift(lArc);\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    var rArc = next;\n\t    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n\t      next = rArc.N;\n\t      disappearing.push(rArc);\n\t      d3_geom_voronoiDetachBeach(rArc);\n\t      rArc = next;\n\t    }\n\t    disappearing.push(rArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var nArcs = disappearing.length, iArc;\n\t    for (iArc = 1; iArc < nArcs; ++iArc) {\n\t      rArc = disappearing[iArc];\n\t      lArc = disappearing[iArc - 1];\n\t      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n\t    }\n\t    lArc = disappearing[0];\n\t    rArc = disappearing[nArcs - 1];\n\t    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiAddBeach(site) {\n\t    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n\t    while (node) {\n\t      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n\t      if (dxl > ε) node = node.L; else {\n\t        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n\t        if (dxr > ε) {\n\t          if (!node.R) {\n\t            lArc = node;\n\t            break;\n\t          }\n\t          node = node.R;\n\t        } else {\n\t          if (dxl > -ε) {\n\t            lArc = node.P;\n\t            rArc = node;\n\t          } else if (dxr > -ε) {\n\t            lArc = node;\n\t            rArc = node.N;\n\t          } else {\n\t            lArc = rArc = node;\n\t          }\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    var newArc = d3_geom_voronoiCreateBeach(site);\n\t    d3_geom_voronoiBeaches.insert(lArc, newArc);\n\t    if (!lArc && !rArc) return;\n\t    if (lArc === rArc) {\n\t      d3_geom_voronoiDetachCircle(lArc);\n\t      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n\t      d3_geom_voronoiBeaches.insert(newArc, rArc);\n\t      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      d3_geom_voronoiAttachCircle(lArc);\n\t      d3_geom_voronoiAttachCircle(rArc);\n\t      return;\n\t    }\n\t    if (!rArc) {\n\t      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n\t      return;\n\t    }\n\t    d3_geom_voronoiDetachCircle(lArc);\n\t    d3_geom_voronoiDetachCircle(rArc);\n\t    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n\t      x: (cy * hb - by * hc) / d + ax,\n\t      y: (bx * hc - cx * hb) / d + ay\n\t    };\n\t    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n\t    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n\t    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n\t    d3_geom_voronoiAttachCircle(lArc);\n\t    d3_geom_voronoiAttachCircle(rArc);\n\t  }\n\t  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n\t    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n\t    if (!pby2) return rfocx;\n\t    var lArc = arc.P;\n\t    if (!lArc) return -Infinity;\n\t    site = lArc.site;\n\t    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n\t    if (!plby2) return lfocx;\n\t    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n\t    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n\t    return (rfocx + lfocx) / 2;\n\t  }\n\t  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n\t    var rArc = arc.N;\n\t    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n\t    var site = arc.site;\n\t    return site.y === directrix ? site.x : Infinity;\n\t  }\n\t  function d3_geom_voronoiCell(site) {\n\t    this.site = site;\n\t    this.edges = [];\n\t  }\n\t  d3_geom_voronoiCell.prototype.prepare = function() {\n\t    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n\t    while (iHalfEdge--) {\n\t      edge = halfEdges[iHalfEdge].edge;\n\t      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n\t    }\n\t    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n\t    return halfEdges.length;\n\t  };\n\t  function d3_geom_voronoiCloseCells(extent) {\n\t    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n\t    while (iCell--) {\n\t      cell = cells[iCell];\n\t      if (!cell || !cell.prepare()) continue;\n\t      halfEdges = cell.edges;\n\t      nHalfEdges = halfEdges.length;\n\t      iHalfEdge = 0;\n\t      while (iHalfEdge < nHalfEdges) {\n\t        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n\t        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n\t        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n\t          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n\t            x: x0,\n\t            y: abs(x2 - x0) < ε ? y2 : y1\n\t          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n\t            x: abs(y2 - y1) < ε ? x2 : x1,\n\t            y: y1\n\t          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n\t            x: x1,\n\t            y: abs(x2 - x1) < ε ? y2 : y0\n\t          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n\t            x: abs(y2 - y0) < ε ? x2 : x0,\n\t            y: y0\n\t          } : null), cell.site, null));\n\t          ++nHalfEdges;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n\t    return b.angle - a.angle;\n\t  }\n\t  function d3_geom_voronoiCircle() {\n\t    d3_geom_voronoiRedBlackNode(this);\n\t    this.x = this.y = this.arc = this.site = this.cy = null;\n\t  }\n\t  function d3_geom_voronoiAttachCircle(arc) {\n\t    var lArc = arc.P, rArc = arc.N;\n\t    if (!lArc || !rArc) return;\n\t    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n\t    if (lSite === rSite) return;\n\t    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n\t    var d = 2 * (ax * cy - ay * cx);\n\t    if (d >= -ε2) return;\n\t    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n\t    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n\t    circle.arc = arc;\n\t    circle.site = cSite;\n\t    circle.x = x + bx;\n\t    circle.y = cy + Math.sqrt(x * x + y * y);\n\t    circle.cy = cy;\n\t    arc.circle = circle;\n\t    var before = null, node = d3_geom_voronoiCircles._;\n\t    while (node) {\n\t      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n\t        if (node.L) node = node.L; else {\n\t          before = node.P;\n\t          break;\n\t        }\n\t      } else {\n\t        if (node.R) node = node.R; else {\n\t          before = node;\n\t          break;\n\t        }\n\t      }\n\t    }\n\t    d3_geom_voronoiCircles.insert(before, circle);\n\t    if (!before) d3_geom_voronoiFirstCircle = circle;\n\t  }\n\t  function d3_geom_voronoiDetachCircle(arc) {\n\t    var circle = arc.circle;\n\t    if (circle) {\n\t      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n\t      d3_geom_voronoiCircles.remove(circle);\n\t      d3_geom_voronoiCirclePool.push(circle);\n\t      d3_geom_voronoiRedBlackNode(circle);\n\t      arc.circle = null;\n\t    }\n\t  }\n\t  function d3_geom_voronoiClipEdges(extent) {\n\t    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n\t    while (i--) {\n\t      e = edges[i];\n\t      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n\t        e.a = e.b = null;\n\t        edges.splice(i, 1);\n\t      }\n\t    }\n\t  }\n\t  function d3_geom_voronoiConnectEdge(edge, extent) {\n\t    var vb = edge.b;\n\t    if (vb) return true;\n\t    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n\t    if (ry === ly) {\n\t      if (fx < x0 || fx >= x1) return;\n\t      if (lx > rx) {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y0\n\t        }; else if (va.y >= y1) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y1\n\t        };\n\t      } else {\n\t        if (!va) va = {\n\t          x: fx,\n\t          y: y1\n\t        }; else if (va.y < y0) return;\n\t        vb = {\n\t          x: fx,\n\t          y: y0\n\t        };\n\t      }\n\t    } else {\n\t      fm = (lx - rx) / (ry - ly);\n\t      fb = fy - fm * fx;\n\t      if (fm < -1 || fm > 1) {\n\t        if (lx > rx) {\n\t          if (!va) va = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          }; else if (va.y >= y1) return;\n\t          vb = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: (y1 - fb) / fm,\n\t            y: y1\n\t          }; else if (va.y < y0) return;\n\t          vb = {\n\t            x: (y0 - fb) / fm,\n\t            y: y0\n\t          };\n\t        }\n\t      } else {\n\t        if (ly < ry) {\n\t          if (!va) va = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          }; else if (va.x >= x1) return;\n\t          vb = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          };\n\t        } else {\n\t          if (!va) va = {\n\t            x: x1,\n\t            y: fm * x1 + fb\n\t          }; else if (va.x < x0) return;\n\t          vb = {\n\t            x: x0,\n\t            y: fm * x0 + fb\n\t          };\n\t        }\n\t      }\n\t    }\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    return true;\n\t  }\n\t  function d3_geom_voronoiEdge(lSite, rSite) {\n\t    this.l = lSite;\n\t    this.r = rSite;\n\t    this.a = this.b = null;\n\t  }\n\t  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n\t    d3_geom_voronoiEdges.push(edge);\n\t    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n\t    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n\t    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n\t    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n\t    var edge = new d3_geom_voronoiEdge(lSite, null);\n\t    edge.a = va;\n\t    edge.b = vb;\n\t    d3_geom_voronoiEdges.push(edge);\n\t    return edge;\n\t  }\n\t  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n\t    if (!edge.a && !edge.b) {\n\t      edge.a = vertex;\n\t      edge.l = lSite;\n\t      edge.r = rSite;\n\t    } else if (edge.l === rSite) {\n\t      edge.b = vertex;\n\t    } else {\n\t      edge.a = vertex;\n\t    }\n\t  }\n\t  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n\t    var va = edge.a, vb = edge.b;\n\t    this.edge = edge;\n\t    this.site = lSite;\n\t    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n\t  }\n\t  d3_geom_voronoiHalfEdge.prototype = {\n\t    start: function() {\n\t      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n\t    },\n\t    end: function() {\n\t      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackTree() {\n\t    this._ = null;\n\t  }\n\t  function d3_geom_voronoiRedBlackNode(node) {\n\t    node.U = node.C = node.L = node.R = node.P = node.N = null;\n\t  }\n\t  d3_geom_voronoiRedBlackTree.prototype = {\n\t    insert: function(after, node) {\n\t      var parent, grandpa, uncle;\n\t      if (after) {\n\t        node.P = after;\n\t        node.N = after.N;\n\t        if (after.N) after.N.P = node;\n\t        after.N = node;\n\t        if (after.R) {\n\t          after = after.R;\n\t          while (after.L) after = after.L;\n\t          after.L = node;\n\t        } else {\n\t          after.R = node;\n\t        }\n\t        parent = after;\n\t      } else if (this._) {\n\t        after = d3_geom_voronoiRedBlackFirst(this._);\n\t        node.P = null;\n\t        node.N = after;\n\t        after.P = after.L = node;\n\t        parent = after;\n\t      } else {\n\t        node.P = node.N = null;\n\t        this._ = node;\n\t        parent = null;\n\t      }\n\t      node.L = node.R = null;\n\t      node.U = parent;\n\t      node.C = true;\n\t      after = node;\n\t      while (parent && parent.C) {\n\t        grandpa = parent.U;\n\t        if (parent === grandpa.L) {\n\t          uncle = grandpa.R;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.R) {\n\t              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n\t          }\n\t        } else {\n\t          uncle = grandpa.L;\n\t          if (uncle && uncle.C) {\n\t            parent.C = uncle.C = false;\n\t            grandpa.C = true;\n\t            after = grandpa;\n\t          } else {\n\t            if (after === parent.L) {\n\t              d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t              after = parent;\n\t              parent = after.U;\n\t            }\n\t            parent.C = false;\n\t            grandpa.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n\t          }\n\t        }\n\t        parent = after.U;\n\t      }\n\t      this._.C = false;\n\t    },\n\t    remove: function(node) {\n\t      if (node.N) node.N.P = node.P;\n\t      if (node.P) node.P.N = node.N;\n\t      node.N = node.P = null;\n\t      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n\t      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n\t      if (parent) {\n\t        if (parent.L === node) parent.L = next; else parent.R = next;\n\t      } else {\n\t        this._ = next;\n\t      }\n\t      if (left && right) {\n\t        red = next.C;\n\t        next.C = node.C;\n\t        next.L = left;\n\t        left.U = next;\n\t        if (next !== right) {\n\t          parent = next.U;\n\t          next.U = node.U;\n\t          node = next.R;\n\t          parent.L = node;\n\t          next.R = right;\n\t          right.U = next;\n\t        } else {\n\t          next.U = parent;\n\t          parent = next;\n\t          node = next.R;\n\t        }\n\t      } else {\n\t        red = node.C;\n\t        node = next;\n\t      }\n\t      if (node) node.U = parent;\n\t      if (red) return;\n\t      if (node && node.C) {\n\t        node.C = false;\n\t        return;\n\t      }\n\t      do {\n\t        if (node === this._) break;\n\t        if (node === parent.L) {\n\t          sibling = parent.R;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            sibling = parent.R;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.R || !sibling.R.C) {\n\t              sibling.L.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n\t              sibling = parent.R;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.R.C = false;\n\t            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        } else {\n\t          sibling = parent.L;\n\t          if (sibling.C) {\n\t            sibling.C = false;\n\t            parent.C = true;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            sibling = parent.L;\n\t          }\n\t          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n\t            if (!sibling.L || !sibling.L.C) {\n\t              sibling.R.C = false;\n\t              sibling.C = true;\n\t              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n\t              sibling = parent.L;\n\t            }\n\t            sibling.C = parent.C;\n\t            parent.C = sibling.L.C = false;\n\t            d3_geom_voronoiRedBlackRotateRight(this, parent);\n\t            node = this._;\n\t            break;\n\t          }\n\t        }\n\t        sibling.C = true;\n\t        node = parent;\n\t        parent = parent.U;\n\t      } while (!node.C);\n\t      if (node) node.C = false;\n\t    }\n\t  };\n\t  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n\t    var p = node, q = node.R, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.R = q.L;\n\t    if (p.R) p.R.U = p;\n\t    q.L = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n\t    var p = node, q = node.L, parent = p.U;\n\t    if (parent) {\n\t      if (parent.L === p) parent.L = q; else parent.R = q;\n\t    } else {\n\t      tree._ = q;\n\t    }\n\t    q.U = parent;\n\t    p.U = q;\n\t    p.L = q.R;\n\t    if (p.L) p.L.U = p;\n\t    q.R = p;\n\t  }\n\t  function d3_geom_voronoiRedBlackFirst(node) {\n\t    while (node.L) node = node.L;\n\t    return node;\n\t  }\n\t  function d3_geom_voronoi(sites, bbox) {\n\t    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n\t    d3_geom_voronoiEdges = [];\n\t    d3_geom_voronoiCells = new Array(sites.length);\n\t    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n\t    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n\t    while (true) {\n\t      circle = d3_geom_voronoiFirstCircle;\n\t      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n\t        if (site.x !== x0 || site.y !== y0) {\n\t          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n\t          d3_geom_voronoiAddBeach(site);\n\t          x0 = site.x, y0 = site.y;\n\t        }\n\t        site = sites.pop();\n\t      } else if (circle) {\n\t        d3_geom_voronoiRemoveBeach(circle.arc);\n\t      } else {\n\t        break;\n\t      }\n\t    }\n\t    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n\t    var diagram = {\n\t      cells: d3_geom_voronoiCells,\n\t      edges: d3_geom_voronoiEdges\n\t    };\n\t    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n\t    return diagram;\n\t  }\n\t  function d3_geom_voronoiVertexOrder(a, b) {\n\t    return b.y - a.y || b.x - a.x;\n\t  }\n\t  d3.geom.voronoi = function(points) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n\t    if (points) return voronoi(points);\n\t    function voronoi(data) {\n\t      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n\t      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n\t        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n\t          var s = e.start();\n\t          return [ s.x, s.y ];\n\t        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n\t        polygon.point = data[i];\n\t      });\n\t      return polygons;\n\t    }\n\t    function sites(data) {\n\t      return data.map(function(d, i) {\n\t        return {\n\t          x: Math.round(fx(d, i) / ε) * ε,\n\t          y: Math.round(fy(d, i) / ε) * ε,\n\t          i: i\n\t        };\n\t      });\n\t    }\n\t    voronoi.links = function(data) {\n\t      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n\t        return edge.l && edge.r;\n\t      }).map(function(edge) {\n\t        return {\n\t          source: data[edge.l.i],\n\t          target: data[edge.r.i]\n\t        };\n\t      });\n\t    };\n\t    voronoi.triangles = function(data) {\n\t      var triangles = [];\n\t      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n\t        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n\t        while (++j < m) {\n\t          e0 = e1;\n\t          s0 = s1;\n\t          e1 = edges[j].edge;\n\t          s1 = e1.l === site ? e1.r : e1.l;\n\t          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n\t            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n\t          }\n\t        }\n\t      });\n\t      return triangles;\n\t    };\n\t    voronoi.x = function(_) {\n\t      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n\t    };\n\t    voronoi.y = function(_) {\n\t      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n\t    };\n\t    voronoi.clipExtent = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n\t      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n\t      return voronoi;\n\t    };\n\t    voronoi.size = function(_) {\n\t      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n\t      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n\t    };\n\t    return voronoi;\n\t  };\n\t  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n\t  function d3_geom_voronoiTriangleArea(a, b, c) {\n\t    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n\t  }\n\t  d3.geom.delaunay = function(vertices) {\n\t    return d3.geom.voronoi().triangles(vertices);\n\t  };\n\t  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n\t    if (compat = arguments.length) {\n\t      x = d3_geom_quadtreeCompatX;\n\t      y = d3_geom_quadtreeCompatY;\n\t      if (compat === 3) {\n\t        y2 = y1;\n\t        x2 = x1;\n\t        y1 = x1 = 0;\n\t      }\n\t      return quadtree(points);\n\t    }\n\t    function quadtree(data) {\n\t      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n\t      if (x1 != null) {\n\t        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n\t      } else {\n\t        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n\t        xs = [], ys = [];\n\t        n = data.length;\n\t        if (compat) for (i = 0; i < n; ++i) {\n\t          d = data[i];\n\t          if (d.x < x1_) x1_ = d.x;\n\t          if (d.y < y1_) y1_ = d.y;\n\t          if (d.x > x2_) x2_ = d.x;\n\t          if (d.y > y2_) y2_ = d.y;\n\t          xs.push(d.x);\n\t          ys.push(d.y);\n\t        } else for (i = 0; i < n; ++i) {\n\t          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n\t          if (x_ < x1_) x1_ = x_;\n\t          if (y_ < y1_) y1_ = y_;\n\t          if (x_ > x2_) x2_ = x_;\n\t          if (y_ > y2_) y2_ = y_;\n\t          xs.push(x_);\n\t          ys.push(y_);\n\t        }\n\t      }\n\t      var dx = x2_ - x1_, dy = y2_ - y1_;\n\t      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n\t      function insert(n, d, x, y, x1, y1, x2, y2) {\n\t        if (isNaN(x) || isNaN(y)) return;\n\t        if (n.leaf) {\n\t          var nx = n.x, ny = n.y;\n\t          if (nx != null) {\n\t            if (abs(nx - x) + abs(ny - y) < .01) {\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            } else {\n\t              var nPoint = n.point;\n\t              n.x = n.y = n.point = null;\n\t              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n\t              insertChild(n, d, x, y, x1, y1, x2, y2);\n\t            }\n\t          } else {\n\t            n.x = x, n.y = y, n.point = d;\n\t          }\n\t        } else {\n\t          insertChild(n, d, x, y, x1, y1, x2, y2);\n\t        }\n\t      }\n\t      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n\t        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n\t        n.leaf = false;\n\t        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n\t        if (right) x1 = xm; else x2 = xm;\n\t        if (below) y1 = ym; else y2 = ym;\n\t        insert(n, d, x, y, x1, y1, x2, y2);\n\t      }\n\t      var root = d3_geom_quadtreeNode();\n\t      root.add = function(d) {\n\t        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n\t      };\n\t      root.visit = function(f) {\n\t        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n\t      };\n\t      root.find = function(point) {\n\t        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n\t      };\n\t      i = -1;\n\t      if (x1 == null) {\n\t        while (++i < n) {\n\t          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n\t        }\n\t        --i;\n\t      } else data.forEach(root.add);\n\t      xs = ys = data = d = null;\n\t      return root;\n\t    }\n\t    quadtree.x = function(_) {\n\t      return arguments.length ? (x = _, quadtree) : x;\n\t    };\n\t    quadtree.y = function(_) {\n\t      return arguments.length ? (y = _, quadtree) : y;\n\t    };\n\t    quadtree.extent = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n\t      y2 = +_[1][1];\n\t      return quadtree;\n\t    };\n\t    quadtree.size = function(_) {\n\t      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n\t      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n\t      return quadtree;\n\t    };\n\t    return quadtree;\n\t  };\n\t  function d3_geom_quadtreeCompatX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_geom_quadtreeCompatY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_geom_quadtreeNode() {\n\t    return {\n\t      leaf: true,\n\t      nodes: [],\n\t      point: null,\n\t      x: null,\n\t      y: null\n\t    };\n\t  }\n\t  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n\t    if (!f(node, x1, y1, x2, y2)) {\n\t      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n\t      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n\t      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n\t      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n\t      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n\t    }\n\t  }\n\t  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n\t    var minDistance2 = Infinity, closestPoint;\n\t    (function find(node, x1, y1, x2, y2) {\n\t      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n\t      if (point = node.point) {\n\t        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n\t        if (distance2 < minDistance2) {\n\t          var distance = Math.sqrt(minDistance2 = distance2);\n\t          x0 = x - distance, y0 = y - distance;\n\t          x3 = x + distance, y3 = y + distance;\n\t          closestPoint = point;\n\t        }\n\t      }\n\t      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n\t      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n\t        if (node = children[i & 3]) switch (i & 3) {\n\t         case 0:\n\t          find(node, x1, y1, xm, ym);\n\t          break;\n\t\n\t         case 1:\n\t          find(node, xm, y1, x2, ym);\n\t          break;\n\t\n\t         case 2:\n\t          find(node, x1, ym, xm, y2);\n\t          break;\n\t\n\t         case 3:\n\t          find(node, xm, ym, x2, y2);\n\t          break;\n\t        }\n\t      }\n\t    })(root, x0, y0, x3, y3);\n\t    return closestPoint;\n\t  }\n\t  d3.interpolateRgb = d3_interpolateRgb;\n\t  function d3_interpolateRgb(a, b) {\n\t    a = d3.rgb(a);\n\t    b = d3.rgb(b);\n\t    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n\t    return function(t) {\n\t      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n\t    };\n\t  }\n\t  d3.interpolateObject = d3_interpolateObject;\n\t  function d3_interpolateObject(a, b) {\n\t    var i = {}, c = {}, k;\n\t    for (k in a) {\n\t      if (k in b) {\n\t        i[k] = d3_interpolate(a[k], b[k]);\n\t      } else {\n\t        c[k] = a[k];\n\t      }\n\t    }\n\t    for (k in b) {\n\t      if (!(k in a)) {\n\t        c[k] = b[k];\n\t      }\n\t    }\n\t    return function(t) {\n\t      for (k in i) c[k] = i[k](t);\n\t      return c;\n\t    };\n\t  }\n\t  d3.interpolateNumber = d3_interpolateNumber;\n\t  function d3_interpolateNumber(a, b) {\n\t    a = +a, b = +b;\n\t    return function(t) {\n\t      return a * (1 - t) + b * t;\n\t    };\n\t  }\n\t  d3.interpolateString = d3_interpolateString;\n\t  function d3_interpolateString(a, b) {\n\t    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n\t    a = a + \"\", b = b + \"\";\n\t    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n\t      if ((bs = bm.index) > bi) {\n\t        bs = b.slice(bi, bs);\n\t        if (s[i]) s[i] += bs; else s[++i] = bs;\n\t      }\n\t      if ((am = am[0]) === (bm = bm[0])) {\n\t        if (s[i]) s[i] += bm; else s[++i] = bm;\n\t      } else {\n\t        s[++i] = null;\n\t        q.push({\n\t          i: i,\n\t          x: d3_interpolateNumber(am, bm)\n\t        });\n\t      }\n\t      bi = d3_interpolate_numberB.lastIndex;\n\t    }\n\t    if (bi < b.length) {\n\t      bs = b.slice(bi);\n\t      if (s[i]) s[i] += bs; else s[++i] = bs;\n\t    }\n\t    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n\t      return b(t) + \"\";\n\t    }) : function() {\n\t      return b;\n\t    } : (b = q.length, function(t) {\n\t      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    });\n\t  }\n\t  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n\t  d3.interpolate = d3_interpolate;\n\t  function d3_interpolate(a, b) {\n\t    var i = d3.interpolators.length, f;\n\t    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n\t    return f;\n\t  }\n\t  d3.interpolators = [ function(a, b) {\n\t    var t = typeof b;\n\t    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n\t  } ];\n\t  d3.interpolateArray = d3_interpolateArray;\n\t  function d3_interpolateArray(a, b) {\n\t    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n\t    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n\t    for (;i < na; ++i) c[i] = a[i];\n\t    for (;i < nb; ++i) c[i] = b[i];\n\t    return function(t) {\n\t      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n\t      return c;\n\t    };\n\t  }\n\t  var d3_ease_default = function() {\n\t    return d3_identity;\n\t  };\n\t  var d3_ease = d3.map({\n\t    linear: d3_ease_default,\n\t    poly: d3_ease_poly,\n\t    quad: function() {\n\t      return d3_ease_quad;\n\t    },\n\t    cubic: function() {\n\t      return d3_ease_cubic;\n\t    },\n\t    sin: function() {\n\t      return d3_ease_sin;\n\t    },\n\t    exp: function() {\n\t      return d3_ease_exp;\n\t    },\n\t    circle: function() {\n\t      return d3_ease_circle;\n\t    },\n\t    elastic: d3_ease_elastic,\n\t    back: d3_ease_back,\n\t    bounce: function() {\n\t      return d3_ease_bounce;\n\t    }\n\t  });\n\t  var d3_ease_mode = d3.map({\n\t    \"in\": d3_identity,\n\t    out: d3_ease_reverse,\n\t    \"in-out\": d3_ease_reflect,\n\t    \"out-in\": function(f) {\n\t      return d3_ease_reflect(d3_ease_reverse(f));\n\t    }\n\t  });\n\t  d3.ease = function(name) {\n\t    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n\t    t = d3_ease.get(t) || d3_ease_default;\n\t    m = d3_ease_mode.get(m) || d3_identity;\n\t    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n\t  };\n\t  function d3_ease_clamp(f) {\n\t    return function(t) {\n\t      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n\t    };\n\t  }\n\t  function d3_ease_reverse(f) {\n\t    return function(t) {\n\t      return 1 - f(1 - t);\n\t    };\n\t  }\n\t  function d3_ease_reflect(f) {\n\t    return function(t) {\n\t      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n\t    };\n\t  }\n\t  function d3_ease_quad(t) {\n\t    return t * t;\n\t  }\n\t  function d3_ease_cubic(t) {\n\t    return t * t * t;\n\t  }\n\t  function d3_ease_cubicInOut(t) {\n\t    if (t <= 0) return 0;\n\t    if (t >= 1) return 1;\n\t    var t2 = t * t, t3 = t2 * t;\n\t    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n\t  }\n\t  function d3_ease_poly(e) {\n\t    return function(t) {\n\t      return Math.pow(t, e);\n\t    };\n\t  }\n\t  function d3_ease_sin(t) {\n\t    return 1 - Math.cos(t * halfπ);\n\t  }\n\t  function d3_ease_exp(t) {\n\t    return Math.pow(2, 10 * (t - 1));\n\t  }\n\t  function d3_ease_circle(t) {\n\t    return 1 - Math.sqrt(1 - t * t);\n\t  }\n\t  function d3_ease_elastic(a, p) {\n\t    var s;\n\t    if (arguments.length < 2) p = .45;\n\t    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n\t    return function(t) {\n\t      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n\t    };\n\t  }\n\t  function d3_ease_back(s) {\n\t    if (!s) s = 1.70158;\n\t    return function(t) {\n\t      return t * t * ((s + 1) * t - s);\n\t    };\n\t  }\n\t  function d3_ease_bounce(t) {\n\t    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n\t  }\n\t  d3.interpolateHcl = d3_interpolateHcl;\n\t  function d3_interpolateHcl(a, b) {\n\t    a = d3.hcl(a);\n\t    b = d3.hcl(b);\n\t    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n\t    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateHsl = d3_interpolateHsl;\n\t  function d3_interpolateHsl(a, b) {\n\t    a = d3.hsl(a);\n\t    b = d3.hsl(b);\n\t    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n\t    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n\t    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n\t    return function(t) {\n\t      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateLab = d3_interpolateLab;\n\t  function d3_interpolateLab(a, b) {\n\t    a = d3.lab(a);\n\t    b = d3.lab(b);\n\t    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n\t    return function(t) {\n\t      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n\t    };\n\t  }\n\t  d3.interpolateRound = d3_interpolateRound;\n\t  function d3_interpolateRound(a, b) {\n\t    b -= a;\n\t    return function(t) {\n\t      return Math.round(a + b * t);\n\t    };\n\t  }\n\t  d3.transform = function(string) {\n\t    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n\t    return (d3.transform = function(string) {\n\t      if (string != null) {\n\t        g.setAttribute(\"transform\", string);\n\t        var t = g.transform.baseVal.consolidate();\n\t      }\n\t      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n\t    })(string);\n\t  };\n\t  function d3_transform(m) {\n\t    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n\t    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n\t      r0[0] *= -1;\n\t      r0[1] *= -1;\n\t      kx *= -1;\n\t      kz *= -1;\n\t    }\n\t    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n\t    this.translate = [ m.e, m.f ];\n\t    this.scale = [ kx, ky ];\n\t    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n\t  }\n\t  d3_transform.prototype.toString = function() {\n\t    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n\t  };\n\t  function d3_transformDot(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1];\n\t  }\n\t  function d3_transformNormalize(a) {\n\t    var k = Math.sqrt(d3_transformDot(a, a));\n\t    if (k) {\n\t      a[0] /= k;\n\t      a[1] /= k;\n\t    }\n\t    return k;\n\t  }\n\t  function d3_transformCombine(a, b, k) {\n\t    a[0] += k * b[0];\n\t    a[1] += k * b[1];\n\t    return a;\n\t  }\n\t  var d3_transformIdentity = {\n\t    a: 1,\n\t    b: 0,\n\t    c: 0,\n\t    d: 1,\n\t    e: 0,\n\t    f: 0\n\t  };\n\t  d3.interpolateTransform = d3_interpolateTransform;\n\t  function d3_interpolateTransform(a, b) {\n\t    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n\t    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n\t      s.push(\"translate(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: 1,\n\t        x: d3_interpolateNumber(ta[0], tb[0])\n\t      }, {\n\t        i: 3,\n\t        x: d3_interpolateNumber(ta[1], tb[1])\n\t      });\n\t    } else if (tb[0] || tb[1]) {\n\t      s.push(\"translate(\" + tb + \")\");\n\t    } else {\n\t      s.push(\"\");\n\t    }\n\t    if (ra != rb) {\n\t      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n\t      q.push({\n\t        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(ra, rb)\n\t      });\n\t    } else if (rb) {\n\t      s.push(s.pop() + \"rotate(\" + rb + \")\");\n\t    }\n\t    if (wa != wb) {\n\t      q.push({\n\t        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n\t        x: d3_interpolateNumber(wa, wb)\n\t      });\n\t    } else if (wb) {\n\t      s.push(s.pop() + \"skewX(\" + wb + \")\");\n\t    }\n\t    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n\t      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n\t      q.push({\n\t        i: n - 4,\n\t        x: d3_interpolateNumber(ka[0], kb[0])\n\t      }, {\n\t        i: n - 2,\n\t        x: d3_interpolateNumber(ka[1], kb[1])\n\t      });\n\t    } else if (kb[0] != 1 || kb[1] != 1) {\n\t      s.push(s.pop() + \"scale(\" + kb + \")\");\n\t    }\n\t    n = q.length;\n\t    return function(t) {\n\t      var i = -1, o;\n\t      while (++i < n) s[(o = q[i]).i] = o.x(t);\n\t      return s.join(\"\");\n\t    };\n\t  }\n\t  function d3_uninterpolateNumber(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return (x - a) / b;\n\t    };\n\t  }\n\t  function d3_uninterpolateClamp(a, b) {\n\t    b = (b -= a = +a) || 1 / b;\n\t    return function(x) {\n\t      return Math.max(0, Math.min(1, (x - a) / b));\n\t    };\n\t  }\n\t  d3.layout = {};\n\t  d3.layout.bundle = function() {\n\t    return function(links) {\n\t      var paths = [], i = -1, n = links.length;\n\t      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n\t      return paths;\n\t    };\n\t  };\n\t  function d3_layout_bundlePath(link) {\n\t    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n\t    while (start !== lca) {\n\t      start = start.parent;\n\t      points.push(start);\n\t    }\n\t    var k = points.length;\n\t    while (end !== lca) {\n\t      points.splice(k, 0, end);\n\t      end = end.parent;\n\t    }\n\t    return points;\n\t  }\n\t  function d3_layout_bundleAncestors(node) {\n\t    var ancestors = [], parent = node.parent;\n\t    while (parent != null) {\n\t      ancestors.push(node);\n\t      node = parent;\n\t      parent = parent.parent;\n\t    }\n\t    ancestors.push(node);\n\t    return ancestors;\n\t  }\n\t  function d3_layout_bundleLeastCommonAncestor(a, b) {\n\t    if (a === b) return a;\n\t    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n\t    while (aNode === bNode) {\n\t      sharedNode = aNode;\n\t      aNode = aNodes.pop();\n\t      bNode = bNodes.pop();\n\t    }\n\t    return sharedNode;\n\t  }\n\t  d3.layout.chord = function() {\n\t    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n\t    function relayout() {\n\t      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n\t      chords = [];\n\t      groups = [];\n\t      k = 0, i = -1;\n\t      while (++i < n) {\n\t        x = 0, j = -1;\n\t        while (++j < n) {\n\t          x += matrix[i][j];\n\t        }\n\t        groupSums.push(x);\n\t        subgroupIndex.push(d3.range(n));\n\t        k += x;\n\t      }\n\t      if (sortGroups) {\n\t        groupIndex.sort(function(a, b) {\n\t          return sortGroups(groupSums[a], groupSums[b]);\n\t        });\n\t      }\n\t      if (sortSubgroups) {\n\t        subgroupIndex.forEach(function(d, i) {\n\t          d.sort(function(a, b) {\n\t            return sortSubgroups(matrix[i][a], matrix[i][b]);\n\t          });\n\t        });\n\t      }\n\t      k = (τ - padding * n) / k;\n\t      x = 0, i = -1;\n\t      while (++i < n) {\n\t        x0 = x, j = -1;\n\t        while (++j < n) {\n\t          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n\t          subgroups[di + \"-\" + dj] = {\n\t            index: di,\n\t            subindex: dj,\n\t            startAngle: a0,\n\t            endAngle: a1,\n\t            value: v\n\t          };\n\t        }\n\t        groups[di] = {\n\t          index: di,\n\t          startAngle: x0,\n\t          endAngle: x,\n\t          value: (x - x0) / k\n\t        };\n\t        x += padding;\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        j = i - 1;\n\t        while (++j < n) {\n\t          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n\t          if (source.value || target.value) {\n\t            chords.push(source.value < target.value ? {\n\t              source: target,\n\t              target: source\n\t            } : {\n\t              source: source,\n\t              target: target\n\t            });\n\t          }\n\t        }\n\t      }\n\t      if (sortChords) resort();\n\t    }\n\t    function resort() {\n\t      chords.sort(function(a, b) {\n\t        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n\t      });\n\t    }\n\t    chord.matrix = function(x) {\n\t      if (!arguments.length) return matrix;\n\t      n = (matrix = x) && matrix.length;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      padding = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortGroups = function(x) {\n\t      if (!arguments.length) return sortGroups;\n\t      sortGroups = x;\n\t      chords = groups = null;\n\t      return chord;\n\t    };\n\t    chord.sortSubgroups = function(x) {\n\t      if (!arguments.length) return sortSubgroups;\n\t      sortSubgroups = x;\n\t      chords = null;\n\t      return chord;\n\t    };\n\t    chord.sortChords = function(x) {\n\t      if (!arguments.length) return sortChords;\n\t      sortChords = x;\n\t      if (chords) resort();\n\t      return chord;\n\t    };\n\t    chord.chords = function() {\n\t      if (!chords) relayout();\n\t      return chords;\n\t    };\n\t    chord.groups = function() {\n\t      if (!groups) relayout();\n\t      return groups;\n\t    };\n\t    return chord;\n\t  };\n\t  d3.layout.force = function() {\n\t    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n\t    function repulse(node) {\n\t      return function(quad, x1, _, x2) {\n\t        if (quad.point !== node) {\n\t          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n\t          if (dw * dw / theta2 < dn) {\n\t            if (dn < chargeDistance2) {\n\t              var k = quad.charge / dn;\n\t              node.px -= dx * k;\n\t              node.py -= dy * k;\n\t            }\n\t            return true;\n\t          }\n\t          if (quad.point && dn && dn < chargeDistance2) {\n\t            var k = quad.pointCharge / dn;\n\t            node.px -= dx * k;\n\t            node.py -= dy * k;\n\t          }\n\t        }\n\t        return !quad.charge;\n\t      };\n\t    }\n\t    force.tick = function() {\n\t      if ((alpha *= .99) < .005) {\n\t        event.end({\n\t          type: \"end\",\n\t          alpha: alpha = 0\n\t        });\n\t        return true;\n\t      }\n\t      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        s = o.source;\n\t        t = o.target;\n\t        x = t.x - s.x;\n\t        y = t.y - s.y;\n\t        if (l = x * x + y * y) {\n\t          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n\t          x *= l;\n\t          y *= l;\n\t          t.x -= x * (k = s.weight / (t.weight + s.weight));\n\t          t.y -= y * k;\n\t          s.x += x * (k = 1 - k);\n\t          s.y += y * k;\n\t        }\n\t      }\n\t      if (k = alpha * gravity) {\n\t        x = size[0] / 2;\n\t        y = size[1] / 2;\n\t        i = -1;\n\t        if (k) while (++i < n) {\n\t          o = nodes[i];\n\t          o.x += (x - o.x) * k;\n\t          o.y += (y - o.y) * k;\n\t        }\n\t      }\n\t      if (charge) {\n\t        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n\t        i = -1;\n\t        while (++i < n) {\n\t          if (!(o = nodes[i]).fixed) {\n\t            q.visit(repulse(o));\n\t          }\n\t        }\n\t      }\n\t      i = -1;\n\t      while (++i < n) {\n\t        o = nodes[i];\n\t        if (o.fixed) {\n\t          o.x = o.px;\n\t          o.y = o.py;\n\t        } else {\n\t          o.x -= (o.px - (o.px = o.x)) * friction;\n\t          o.y -= (o.py - (o.py = o.y)) * friction;\n\t        }\n\t      }\n\t      event.tick({\n\t        type: \"tick\",\n\t        alpha: alpha\n\t      });\n\t    };\n\t    force.nodes = function(x) {\n\t      if (!arguments.length) return nodes;\n\t      nodes = x;\n\t      return force;\n\t    };\n\t    force.links = function(x) {\n\t      if (!arguments.length) return links;\n\t      links = x;\n\t      return force;\n\t    };\n\t    force.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return force;\n\t    };\n\t    force.linkDistance = function(x) {\n\t      if (!arguments.length) return linkDistance;\n\t      linkDistance = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.distance = force.linkDistance;\n\t    force.linkStrength = function(x) {\n\t      if (!arguments.length) return linkStrength;\n\t      linkStrength = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.friction = function(x) {\n\t      if (!arguments.length) return friction;\n\t      friction = +x;\n\t      return force;\n\t    };\n\t    force.charge = function(x) {\n\t      if (!arguments.length) return charge;\n\t      charge = typeof x === \"function\" ? x : +x;\n\t      return force;\n\t    };\n\t    force.chargeDistance = function(x) {\n\t      if (!arguments.length) return Math.sqrt(chargeDistance2);\n\t      chargeDistance2 = x * x;\n\t      return force;\n\t    };\n\t    force.gravity = function(x) {\n\t      if (!arguments.length) return gravity;\n\t      gravity = +x;\n\t      return force;\n\t    };\n\t    force.theta = function(x) {\n\t      if (!arguments.length) return Math.sqrt(theta2);\n\t      theta2 = x * x;\n\t      return force;\n\t    };\n\t    force.alpha = function(x) {\n\t      if (!arguments.length) return alpha;\n\t      x = +x;\n\t      if (alpha) {\n\t        if (x > 0) alpha = x; else alpha = 0;\n\t      } else if (x > 0) {\n\t        event.start({\n\t          type: \"start\",\n\t          alpha: alpha = x\n\t        });\n\t        d3.timer(force.tick);\n\t      }\n\t      return force;\n\t    };\n\t    force.start = function() {\n\t      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n\t      for (i = 0; i < n; ++i) {\n\t        (o = nodes[i]).index = i;\n\t        o.weight = 0;\n\t      }\n\t      for (i = 0; i < m; ++i) {\n\t        o = links[i];\n\t        if (typeof o.source == \"number\") o.source = nodes[o.source];\n\t        if (typeof o.target == \"number\") o.target = nodes[o.target];\n\t        ++o.source.weight;\n\t        ++o.target.weight;\n\t      }\n\t      for (i = 0; i < n; ++i) {\n\t        o = nodes[i];\n\t        if (isNaN(o.x)) o.x = position(\"x\", w);\n\t        if (isNaN(o.y)) o.y = position(\"y\", h);\n\t        if (isNaN(o.px)) o.px = o.x;\n\t        if (isNaN(o.py)) o.py = o.y;\n\t      }\n\t      distances = [];\n\t      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n\t      strengths = [];\n\t      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n\t      charges = [];\n\t      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n\t      function position(dimension, size) {\n\t        if (!neighbors) {\n\t          neighbors = new Array(n);\n\t          for (j = 0; j < n; ++j) {\n\t            neighbors[j] = [];\n\t          }\n\t          for (j = 0; j < m; ++j) {\n\t            var o = links[j];\n\t            neighbors[o.source.index].push(o.target);\n\t            neighbors[o.target.index].push(o.source);\n\t          }\n\t        }\n\t        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n\t        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n\t        return Math.random() * size;\n\t      }\n\t      return force.resume();\n\t    };\n\t    force.resume = function() {\n\t      return force.alpha(.1);\n\t    };\n\t    force.stop = function() {\n\t      return force.alpha(0);\n\t    };\n\t    force.drag = function() {\n\t      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n\t      if (!arguments.length) return drag;\n\t      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n\t    };\n\t    function dragmove(d) {\n\t      d.px = d3.event.x, d.py = d3.event.y;\n\t      force.resume();\n\t    }\n\t    return d3.rebind(force, event, \"on\");\n\t  };\n\t  function d3_layout_forceDragstart(d) {\n\t    d.fixed |= 2;\n\t  }\n\t  function d3_layout_forceDragend(d) {\n\t    d.fixed &= ~6;\n\t  }\n\t  function d3_layout_forceMouseover(d) {\n\t    d.fixed |= 4;\n\t    d.px = d.x, d.py = d.y;\n\t  }\n\t  function d3_layout_forceMouseout(d) {\n\t    d.fixed &= ~4;\n\t  }\n\t  function d3_layout_forceAccumulate(quad, alpha, charges) {\n\t    var cx = 0, cy = 0;\n\t    quad.charge = 0;\n\t    if (!quad.leaf) {\n\t      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n\t      while (++i < n) {\n\t        c = nodes[i];\n\t        if (c == null) continue;\n\t        d3_layout_forceAccumulate(c, alpha, charges);\n\t        quad.charge += c.charge;\n\t        cx += c.charge * c.cx;\n\t        cy += c.charge * c.cy;\n\t      }\n\t    }\n\t    if (quad.point) {\n\t      if (!quad.leaf) {\n\t        quad.point.x += Math.random() - .5;\n\t        quad.point.y += Math.random() - .5;\n\t      }\n\t      var k = alpha * charges[quad.point.index];\n\t      quad.charge += quad.pointCharge = k;\n\t      cx += k * quad.point.x;\n\t      cy += k * quad.point.y;\n\t    }\n\t    quad.cx = cx / quad.charge;\n\t    quad.cy = cy / quad.charge;\n\t  }\n\t  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n\t  d3.layout.hierarchy = function() {\n\t    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n\t    function hierarchy(root) {\n\t      var stack = [ root ], nodes = [], node;\n\t      root.depth = 0;\n\t      while ((node = stack.pop()) != null) {\n\t        nodes.push(node);\n\t        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n\t          var n, childs, child;\n\t          while (--n >= 0) {\n\t            stack.push(child = childs[n]);\n\t            child.parent = node;\n\t            child.depth = node.depth + 1;\n\t          }\n\t          if (value) node.value = 0;\n\t          node.children = childs;\n\t        } else {\n\t          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          delete node.children;\n\t        }\n\t      }\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var childs, parent;\n\t        if (sort && (childs = node.children)) childs.sort(sort);\n\t        if (value && (parent = node.parent)) parent.value += node.value;\n\t      });\n\t      return nodes;\n\t    }\n\t    hierarchy.sort = function(x) {\n\t      if (!arguments.length) return sort;\n\t      sort = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.children = function(x) {\n\t      if (!arguments.length) return children;\n\t      children = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.value = function(x) {\n\t      if (!arguments.length) return value;\n\t      value = x;\n\t      return hierarchy;\n\t    };\n\t    hierarchy.revalue = function(root) {\n\t      if (value) {\n\t        d3_layout_hierarchyVisitBefore(root, function(node) {\n\t          if (node.children) node.value = 0;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, function(node) {\n\t          var parent;\n\t          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n\t          if (parent = node.parent) parent.value += node.value;\n\t        });\n\t      }\n\t      return root;\n\t    };\n\t    return hierarchy;\n\t  };\n\t  function d3_layout_hierarchyRebind(object, hierarchy) {\n\t    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n\t    object.nodes = object;\n\t    object.links = d3_layout_hierarchyLinks;\n\t    return object;\n\t  }\n\t  function d3_layout_hierarchyVisitBefore(node, callback) {\n\t    var nodes = [ node ];\n\t    while ((node = nodes.pop()) != null) {\n\t      callback(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var n, children;\n\t        while (--n >= 0) nodes.push(children[n]);\n\t      }\n\t    }\n\t  }\n\t  function d3_layout_hierarchyVisitAfter(node, callback) {\n\t    var nodes = [ node ], nodes2 = [];\n\t    while ((node = nodes.pop()) != null) {\n\t      nodes2.push(node);\n\t      if ((children = node.children) && (n = children.length)) {\n\t        var i = -1, n, children;\n\t        while (++i < n) nodes.push(children[i]);\n\t      }\n\t    }\n\t    while ((node = nodes2.pop()) != null) {\n\t      callback(node);\n\t    }\n\t  }\n\t  function d3_layout_hierarchyChildren(d) {\n\t    return d.children;\n\t  }\n\t  function d3_layout_hierarchyValue(d) {\n\t    return d.value;\n\t  }\n\t  function d3_layout_hierarchySort(a, b) {\n\t    return b.value - a.value;\n\t  }\n\t  function d3_layout_hierarchyLinks(nodes) {\n\t    return d3.merge(nodes.map(function(parent) {\n\t      return (parent.children || []).map(function(child) {\n\t        return {\n\t          source: parent,\n\t          target: child\n\t        };\n\t      });\n\t    }));\n\t  }\n\t  d3.layout.partition = function() {\n\t    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n\t    function position(node, x, dx, dy) {\n\t      var children = node.children;\n\t      node.x = x;\n\t      node.y = node.depth * dy;\n\t      node.dx = dx;\n\t      node.dy = dy;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n, c, d;\n\t        dx = node.value ? dx / node.value : 0;\n\t        while (++i < n) {\n\t          position(c = children[i], x, d = c.value * dx, dy);\n\t          x += d;\n\t        }\n\t      }\n\t    }\n\t    function depth(node) {\n\t      var children = node.children, d = 0;\n\t      if (children && (n = children.length)) {\n\t        var i = -1, n;\n\t        while (++i < n) d = Math.max(d, depth(children[i]));\n\t      }\n\t      return 1 + d;\n\t    }\n\t    function partition(d, i) {\n\t      var nodes = hierarchy.call(this, d, i);\n\t      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n\t      return nodes;\n\t    }\n\t    partition.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return partition;\n\t    };\n\t    return d3_layout_hierarchyRebind(partition, hierarchy);\n\t  };\n\t  d3.layout.pie = function() {\n\t    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n\t    function pie(data) {\n\t      var n = data.length, values = data.map(function(d, i) {\n\t        return +value.call(pie, d, i);\n\t      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n\t      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n\t        return values[j] - values[i];\n\t      } : function(i, j) {\n\t        return sort(data[i], data[j]);\n\t      });\n\t      index.forEach(function(i) {\n\t        arcs[i] = {\n\t          data: data[i],\n\t          value: v = values[i],\n\t          startAngle: a,\n\t          endAngle: a += v * k + pa,\n\t          padAngle: p\n\t        };\n\t      });\n\t      return arcs;\n\t    }\n\t    pie.value = function(_) {\n\t      if (!arguments.length) return value;\n\t      value = _;\n\t      return pie;\n\t    };\n\t    pie.sort = function(_) {\n\t      if (!arguments.length) return sort;\n\t      sort = _;\n\t      return pie;\n\t    };\n\t    pie.startAngle = function(_) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = _;\n\t      return pie;\n\t    };\n\t    pie.endAngle = function(_) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = _;\n\t      return pie;\n\t    };\n\t    pie.padAngle = function(_) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = _;\n\t      return pie;\n\t    };\n\t    return pie;\n\t  };\n\t  var d3_layout_pieSortByValue = {};\n\t  d3.layout.stack = function() {\n\t    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n\t    function stack(data, index) {\n\t      if (!(n = data.length)) return data;\n\t      var series = data.map(function(d, i) {\n\t        return values.call(stack, d, i);\n\t      });\n\t      var points = series.map(function(d) {\n\t        return d.map(function(v, i) {\n\t          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n\t        });\n\t      });\n\t      var orders = order.call(stack, points, index);\n\t      series = d3.permute(series, orders);\n\t      points = d3.permute(points, orders);\n\t      var offsets = offset.call(stack, points, index);\n\t      var m = series[0].length, n, i, j, o;\n\t      for (j = 0; j < m; ++j) {\n\t        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n\t        for (i = 1; i < n; ++i) {\n\t          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n\t        }\n\t      }\n\t      return data;\n\t    }\n\t    stack.values = function(x) {\n\t      if (!arguments.length) return values;\n\t      values = x;\n\t      return stack;\n\t    };\n\t    stack.order = function(x) {\n\t      if (!arguments.length) return order;\n\t      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n\t      return stack;\n\t    };\n\t    stack.offset = function(x) {\n\t      if (!arguments.length) return offset;\n\t      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n\t      return stack;\n\t    };\n\t    stack.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      return stack;\n\t    };\n\t    stack.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      return stack;\n\t    };\n\t    stack.out = function(z) {\n\t      if (!arguments.length) return out;\n\t      out = z;\n\t      return stack;\n\t    };\n\t    return stack;\n\t  };\n\t  function d3_layout_stackX(d) {\n\t    return d.x;\n\t  }\n\t  function d3_layout_stackY(d) {\n\t    return d.y;\n\t  }\n\t  function d3_layout_stackOut(d, y0, y) {\n\t    d.y0 = y0;\n\t    d.y = y;\n\t  }\n\t  var d3_layout_stackOrders = d3.map({\n\t    \"inside-out\": function(data) {\n\t      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n\t        return max[a] - max[b];\n\t      }), top = 0, bottom = 0, tops = [], bottoms = [];\n\t      for (i = 0; i < n; ++i) {\n\t        j = index[i];\n\t        if (top < bottom) {\n\t          top += sums[j];\n\t          tops.push(j);\n\t        } else {\n\t          bottom += sums[j];\n\t          bottoms.push(j);\n\t        }\n\t      }\n\t      return bottoms.reverse().concat(tops);\n\t    },\n\t    reverse: function(data) {\n\t      return d3.range(data.length).reverse();\n\t    },\n\t    \"default\": d3_layout_stackOrderDefault\n\t  });\n\t  var d3_layout_stackOffsets = d3.map({\n\t    silhouette: function(data) {\n\t      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o > max) max = o;\n\t        sums.push(o);\n\t      }\n\t      for (j = 0; j < m; ++j) {\n\t        y0[j] = (max - sums[j]) / 2;\n\t      }\n\t      return y0;\n\t    },\n\t    wiggle: function(data) {\n\t      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n\t      y0[0] = o = o0 = 0;\n\t      for (j = 1; j < m; ++j) {\n\t        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n\t        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n\t          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n\t            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n\t          }\n\t          s2 += s3 * data[i][j][1];\n\t        }\n\t        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n\t        if (o < o0) o0 = o;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] -= o0;\n\t      return y0;\n\t    },\n\t    expand: function(data) {\n\t      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n\t      for (j = 0; j < m; ++j) {\n\t        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n\t        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n\t      }\n\t      for (j = 0; j < m; ++j) y0[j] = 0;\n\t      return y0;\n\t    },\n\t    zero: d3_layout_stackOffsetZero\n\t  });\n\t  function d3_layout_stackOrderDefault(data) {\n\t    return d3.range(data.length);\n\t  }\n\t  function d3_layout_stackOffsetZero(data) {\n\t    var j = -1, m = data[0].length, y0 = [];\n\t    while (++j < m) y0[j] = 0;\n\t    return y0;\n\t  }\n\t  function d3_layout_stackMaxIndex(array) {\n\t    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n\t    for (;i < n; ++i) {\n\t      if ((k = array[i][1]) > v) {\n\t        j = i;\n\t        v = k;\n\t      }\n\t    }\n\t    return j;\n\t  }\n\t  function d3_layout_stackReduceSum(d) {\n\t    return d.reduce(d3_layout_stackSum, 0);\n\t  }\n\t  function d3_layout_stackSum(p, d) {\n\t    return p + d[1];\n\t  }\n\t  d3.layout.histogram = function() {\n\t    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n\t    function histogram(data, i) {\n\t      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n\t      while (++i < m) {\n\t        bin = bins[i] = [];\n\t        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n\t        bin.y = 0;\n\t      }\n\t      if (m > 0) {\n\t        i = -1;\n\t        while (++i < n) {\n\t          x = values[i];\n\t          if (x >= range[0] && x <= range[1]) {\n\t            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n\t            bin.y += k;\n\t            bin.push(data[i]);\n\t          }\n\t        }\n\t      }\n\t      return bins;\n\t    }\n\t    histogram.value = function(x) {\n\t      if (!arguments.length) return valuer;\n\t      valuer = x;\n\t      return histogram;\n\t    };\n\t    histogram.range = function(x) {\n\t      if (!arguments.length) return ranger;\n\t      ranger = d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.bins = function(x) {\n\t      if (!arguments.length) return binner;\n\t      binner = typeof x === \"number\" ? function(range) {\n\t        return d3_layout_histogramBinFixed(range, x);\n\t      } : d3_functor(x);\n\t      return histogram;\n\t    };\n\t    histogram.frequency = function(x) {\n\t      if (!arguments.length) return frequency;\n\t      frequency = !!x;\n\t      return histogram;\n\t    };\n\t    return histogram;\n\t  };\n\t  function d3_layout_histogramBinSturges(range, values) {\n\t    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n\t  }\n\t  function d3_layout_histogramBinFixed(range, n) {\n\t    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n\t    while (++x <= n) f[x] = m * x + b;\n\t    return f;\n\t  }\n\t  function d3_layout_histogramRange(values) {\n\t    return [ d3.min(values), d3.max(values) ];\n\t  }\n\t  d3.layout.pack = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n\t    function pack(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n\t        return radius;\n\t      };\n\t      root.x = root.y = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(d) {\n\t        d.r = +r(d.value);\n\t      });\n\t      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t      if (padding) {\n\t        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r += dr;\n\t        });\n\t        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n\t        d3_layout_hierarchyVisitAfter(root, function(d) {\n\t          d.r -= dr;\n\t        });\n\t      }\n\t      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n\t      return nodes;\n\t    }\n\t    pack.size = function(_) {\n\t      if (!arguments.length) return size;\n\t      size = _;\n\t      return pack;\n\t    };\n\t    pack.radius = function(_) {\n\t      if (!arguments.length) return radius;\n\t      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n\t      return pack;\n\t    };\n\t    pack.padding = function(_) {\n\t      if (!arguments.length) return padding;\n\t      padding = +_;\n\t      return pack;\n\t    };\n\t    return d3_layout_hierarchyRebind(pack, hierarchy);\n\t  };\n\t  function d3_layout_packSort(a, b) {\n\t    return a.value - b.value;\n\t  }\n\t  function d3_layout_packInsert(a, b) {\n\t    var c = a._pack_next;\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t    b._pack_next = c;\n\t    c._pack_prev = b;\n\t  }\n\t  function d3_layout_packSplice(a, b) {\n\t    a._pack_next = b;\n\t    b._pack_prev = a;\n\t  }\n\t  function d3_layout_packIntersects(a, b) {\n\t    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n\t    return .999 * dr * dr > dx * dx + dy * dy;\n\t  }\n\t  function d3_layout_packSiblings(node) {\n\t    if (!(nodes = node.children) || !(n = nodes.length)) return;\n\t    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n\t    function bound(node) {\n\t      xMin = Math.min(node.x - node.r, xMin);\n\t      xMax = Math.max(node.x + node.r, xMax);\n\t      yMin = Math.min(node.y - node.r, yMin);\n\t      yMax = Math.max(node.y + node.r, yMax);\n\t    }\n\t    nodes.forEach(d3_layout_packLink);\n\t    a = nodes[0];\n\t    a.x = -a.r;\n\t    a.y = 0;\n\t    bound(a);\n\t    if (n > 1) {\n\t      b = nodes[1];\n\t      b.x = b.r;\n\t      b.y = 0;\n\t      bound(b);\n\t      if (n > 2) {\n\t        c = nodes[2];\n\t        d3_layout_packPlace(a, b, c);\n\t        bound(c);\n\t        d3_layout_packInsert(a, c);\n\t        a._pack_prev = c;\n\t        d3_layout_packInsert(c, b);\n\t        b = a._pack_next;\n\t        for (i = 3; i < n; i++) {\n\t          d3_layout_packPlace(a, b, c = nodes[i]);\n\t          var isect = 0, s1 = 1, s2 = 1;\n\t          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n\t            if (d3_layout_packIntersects(j, c)) {\n\t              isect = 1;\n\t              break;\n\t            }\n\t          }\n\t          if (isect == 1) {\n\t            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n\t              if (d3_layout_packIntersects(k, c)) {\n\t                break;\n\t              }\n\t            }\n\t          }\n\t          if (isect) {\n\t            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n\t            i--;\n\t          } else {\n\t            d3_layout_packInsert(a, c);\n\t            b = c;\n\t            bound(c);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n\t    for (i = 0; i < n; i++) {\n\t      c = nodes[i];\n\t      c.x -= cx;\n\t      c.y -= cy;\n\t      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n\t    }\n\t    node.r = cr;\n\t    nodes.forEach(d3_layout_packUnlink);\n\t  }\n\t  function d3_layout_packLink(node) {\n\t    node._pack_next = node._pack_prev = node;\n\t  }\n\t  function d3_layout_packUnlink(node) {\n\t    delete node._pack_next;\n\t    delete node._pack_prev;\n\t  }\n\t  function d3_layout_packTransform(node, x, y, k) {\n\t    var children = node.children;\n\t    node.x = x += k * node.x;\n\t    node.y = y += k * node.y;\n\t    node.r *= k;\n\t    if (children) {\n\t      var i = -1, n = children.length;\n\t      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n\t    }\n\t  }\n\t  function d3_layout_packPlace(a, b, c) {\n\t    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n\t    if (db && (dx || dy)) {\n\t      var da = b.r + c.r, dc = dx * dx + dy * dy;\n\t      da *= da;\n\t      db *= db;\n\t      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n\t      c.x = a.x + x * dx + y * dy;\n\t      c.y = a.y + x * dy - y * dx;\n\t    } else {\n\t      c.x = a.x + db;\n\t      c.y = a.y;\n\t    }\n\t  }\n\t  d3.layout.tree = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n\t    function tree(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n\t      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n\t      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n\t      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n\t        var left = root0, right = root0, bottom = root0;\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          if (node.x < left.x) left = node;\n\t          if (node.x > right.x) right = node;\n\t          if (node.depth > bottom.depth) bottom = node;\n\t        });\n\t        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n\t        d3_layout_hierarchyVisitBefore(root0, function(node) {\n\t          node.x = (node.x + tx) * kx;\n\t          node.y = node.depth * ky;\n\t        });\n\t      }\n\t      return nodes;\n\t    }\n\t    function wrapTree(root0) {\n\t      var root1 = {\n\t        A: null,\n\t        children: [ root0 ]\n\t      }, queue = [ root1 ], node1;\n\t      while ((node1 = queue.pop()) != null) {\n\t        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n\t          queue.push((children[i] = child = {\n\t            _: children[i],\n\t            parent: node1,\n\t            children: (child = children[i].children) && child.slice() || [],\n\t            A: null,\n\t            a: null,\n\t            z: 0,\n\t            m: 0,\n\t            c: 0,\n\t            s: 0,\n\t            t: null,\n\t            i: i\n\t          }).a = child);\n\t        }\n\t      }\n\t      return root1.children[0];\n\t    }\n\t    function firstWalk(v) {\n\t      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n\t      if (children.length) {\n\t        d3_layout_treeShift(v);\n\t        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n\t        if (w) {\n\t          v.z = w.z + separation(v._, w._);\n\t          v.m = v.z - midpoint;\n\t        } else {\n\t          v.z = midpoint;\n\t        }\n\t      } else if (w) {\n\t        v.z = w.z + separation(v._, w._);\n\t      }\n\t      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n\t    }\n\t    function secondWalk(v) {\n\t      v._.x = v.z + v.parent.m;\n\t      v.m += v.parent.m;\n\t    }\n\t    function apportion(v, w, ancestor) {\n\t      if (w) {\n\t        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n\t        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n\t          vom = d3_layout_treeLeft(vom);\n\t          vop = d3_layout_treeRight(vop);\n\t          vop.a = v;\n\t          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n\t          if (shift > 0) {\n\t            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n\t            sip += shift;\n\t            sop += shift;\n\t          }\n\t          sim += vim.m;\n\t          sip += vip.m;\n\t          som += vom.m;\n\t          sop += vop.m;\n\t        }\n\t        if (vim && !d3_layout_treeRight(vop)) {\n\t          vop.t = vim;\n\t          vop.m += sim - sop;\n\t        }\n\t        if (vip && !d3_layout_treeLeft(vom)) {\n\t          vom.t = vip;\n\t          vom.m += sip - som;\n\t          ancestor = v;\n\t        }\n\t      }\n\t      return ancestor;\n\t    }\n\t    function sizeNode(node) {\n\t      node.x *= size[0];\n\t      node.y = node.depth * size[1];\n\t    }\n\t    tree.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return tree;\n\t    };\n\t    tree.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null ? sizeNode : null;\n\t      return tree;\n\t    };\n\t    tree.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) == null ? null : sizeNode;\n\t      return tree;\n\t    };\n\t    return d3_layout_hierarchyRebind(tree, hierarchy);\n\t  };\n\t  function d3_layout_treeSeparation(a, b) {\n\t    return a.parent == b.parent ? 1 : 2;\n\t  }\n\t  function d3_layout_treeLeft(v) {\n\t    var children = v.children;\n\t    return children.length ? children[0] : v.t;\n\t  }\n\t  function d3_layout_treeRight(v) {\n\t    var children = v.children, n;\n\t    return (n = children.length) ? children[n - 1] : v.t;\n\t  }\n\t  function d3_layout_treeMove(wm, wp, shift) {\n\t    var change = shift / (wp.i - wm.i);\n\t    wp.c -= change;\n\t    wp.s += shift;\n\t    wm.c += change;\n\t    wp.z += shift;\n\t    wp.m += shift;\n\t  }\n\t  function d3_layout_treeShift(v) {\n\t    var shift = 0, change = 0, children = v.children, i = children.length, w;\n\t    while (--i >= 0) {\n\t      w = children[i];\n\t      w.z += shift;\n\t      w.m += shift;\n\t      shift += w.s + (change += w.c);\n\t    }\n\t  }\n\t  function d3_layout_treeAncestor(vim, v, ancestor) {\n\t    return vim.a.parent === v.parent ? vim.a : ancestor;\n\t  }\n\t  d3.layout.cluster = function() {\n\t    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n\t    function cluster(d, i) {\n\t      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n\t      d3_layout_hierarchyVisitAfter(root, function(node) {\n\t        var children = node.children;\n\t        if (children && children.length) {\n\t          node.x = d3_layout_clusterX(children);\n\t          node.y = d3_layout_clusterY(children);\n\t        } else {\n\t          node.x = previousNode ? x += separation(node, previousNode) : 0;\n\t          node.y = 0;\n\t          previousNode = node;\n\t        }\n\t      });\n\t      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n\t      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n\t        node.x = (node.x - root.x) * size[0];\n\t        node.y = (root.y - node.y) * size[1];\n\t      } : function(node) {\n\t        node.x = (node.x - x0) / (x1 - x0) * size[0];\n\t        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n\t      });\n\t      return nodes;\n\t    }\n\t    cluster.separation = function(x) {\n\t      if (!arguments.length) return separation;\n\t      separation = x;\n\t      return cluster;\n\t    };\n\t    cluster.size = function(x) {\n\t      if (!arguments.length) return nodeSize ? null : size;\n\t      nodeSize = (size = x) == null;\n\t      return cluster;\n\t    };\n\t    cluster.nodeSize = function(x) {\n\t      if (!arguments.length) return nodeSize ? size : null;\n\t      nodeSize = (size = x) != null;\n\t      return cluster;\n\t    };\n\t    return d3_layout_hierarchyRebind(cluster, hierarchy);\n\t  };\n\t  function d3_layout_clusterY(children) {\n\t    return 1 + d3.max(children, function(child) {\n\t      return child.y;\n\t    });\n\t  }\n\t  function d3_layout_clusterX(children) {\n\t    return children.reduce(function(x, child) {\n\t      return x + child.x;\n\t    }, 0) / children.length;\n\t  }\n\t  function d3_layout_clusterLeft(node) {\n\t    var children = node.children;\n\t    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n\t  }\n\t  function d3_layout_clusterRight(node) {\n\t    var children = node.children, n;\n\t    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n\t  }\n\t  d3.layout.treemap = function() {\n\t    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n\t    function scale(children, k) {\n\t      var i = -1, n = children.length, child, area;\n\t      while (++i < n) {\n\t        area = (child = children[i]).value * (k < 0 ? 0 : k);\n\t        child.area = isNaN(area) || area <= 0 ? 0 : area;\n\t      }\n\t    }\n\t    function squarify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while ((n = remaining.length) > 0) {\n\t          row.push(child = remaining[n - 1]);\n\t          row.area += child.area;\n\t          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n\t            remaining.pop();\n\t            best = score;\n\t          } else {\n\t            row.area -= row.pop().area;\n\t            position(row, u, rect, false);\n\t            u = Math.min(rect.dx, rect.dy);\n\t            row.length = row.area = 0;\n\t            best = Infinity;\n\t          }\n\t        }\n\t        if (row.length) {\n\t          position(row, u, rect, true);\n\t          row.length = row.area = 0;\n\t        }\n\t        children.forEach(squarify);\n\t      }\n\t    }\n\t    function stickify(node) {\n\t      var children = node.children;\n\t      if (children && children.length) {\n\t        var rect = pad(node), remaining = children.slice(), child, row = [];\n\t        scale(remaining, rect.dx * rect.dy / node.value);\n\t        row.area = 0;\n\t        while (child = remaining.pop()) {\n\t          row.push(child);\n\t          row.area += child.area;\n\t          if (child.z != null) {\n\t            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n\t            row.length = row.area = 0;\n\t          }\n\t        }\n\t        children.forEach(stickify);\n\t      }\n\t    }\n\t    function worst(row, u) {\n\t      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n\t      while (++i < n) {\n\t        if (!(r = row[i].area)) continue;\n\t        if (r < rmin) rmin = r;\n\t        if (r > rmax) rmax = r;\n\t      }\n\t      s *= s;\n\t      u *= u;\n\t      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n\t    }\n\t    function position(row, u, rect, flush) {\n\t      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n\t      if (u == rect.dx) {\n\t        if (flush || v > rect.dy) v = rect.dy;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dy = v;\n\t          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = true;\n\t        o.dx += rect.x + rect.dx - x;\n\t        rect.y += v;\n\t        rect.dy -= v;\n\t      } else {\n\t        if (flush || v > rect.dx) v = rect.dx;\n\t        while (++i < n) {\n\t          o = row[i];\n\t          o.x = x;\n\t          o.y = y;\n\t          o.dx = v;\n\t          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n\t        }\n\t        o.z = false;\n\t        o.dy += rect.y + rect.dy - y;\n\t        rect.x += v;\n\t        rect.dx -= v;\n\t      }\n\t    }\n\t    function treemap(d) {\n\t      var nodes = stickies || hierarchy(d), root = nodes[0];\n\t      root.x = 0;\n\t      root.y = 0;\n\t      root.dx = size[0];\n\t      root.dy = size[1];\n\t      if (stickies) hierarchy.revalue(root);\n\t      scale([ root ], root.dx * root.dy / root.value);\n\t      (stickies ? stickify : squarify)(root);\n\t      if (sticky) stickies = nodes;\n\t      return nodes;\n\t    }\n\t    treemap.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = x;\n\t      return treemap;\n\t    };\n\t    treemap.padding = function(x) {\n\t      if (!arguments.length) return padding;\n\t      function padFunction(node) {\n\t        var p = x.call(treemap, node, node.depth);\n\t        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n\t      }\n\t      function padConstant(node) {\n\t        return d3_layout_treemapPad(node, x);\n\t      }\n\t      var type;\n\t      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n\t      padConstant) : padConstant;\n\t      return treemap;\n\t    };\n\t    treemap.round = function(x) {\n\t      if (!arguments.length) return round != Number;\n\t      round = x ? Math.round : Number;\n\t      return treemap;\n\t    };\n\t    treemap.sticky = function(x) {\n\t      if (!arguments.length) return sticky;\n\t      sticky = x;\n\t      stickies = null;\n\t      return treemap;\n\t    };\n\t    treemap.ratio = function(x) {\n\t      if (!arguments.length) return ratio;\n\t      ratio = x;\n\t      return treemap;\n\t    };\n\t    treemap.mode = function(x) {\n\t      if (!arguments.length) return mode;\n\t      mode = x + \"\";\n\t      return treemap;\n\t    };\n\t    return d3_layout_hierarchyRebind(treemap, hierarchy);\n\t  };\n\t  function d3_layout_treemapPadNull(node) {\n\t    return {\n\t      x: node.x,\n\t      y: node.y,\n\t      dx: node.dx,\n\t      dy: node.dy\n\t    };\n\t  }\n\t  function d3_layout_treemapPad(node, padding) {\n\t    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n\t    if (dx < 0) {\n\t      x += dx / 2;\n\t      dx = 0;\n\t    }\n\t    if (dy < 0) {\n\t      y += dy / 2;\n\t      dy = 0;\n\t    }\n\t    return {\n\t      x: x,\n\t      y: y,\n\t      dx: dx,\n\t      dy: dy\n\t    };\n\t  }\n\t  d3.random = {\n\t    normal: function(µ, σ) {\n\t      var n = arguments.length;\n\t      if (n < 2) σ = 1;\n\t      if (n < 1) µ = 0;\n\t      return function() {\n\t        var x, y, r;\n\t        do {\n\t          x = Math.random() * 2 - 1;\n\t          y = Math.random() * 2 - 1;\n\t          r = x * x + y * y;\n\t        } while (!r || r > 1);\n\t        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n\t      };\n\t    },\n\t    logNormal: function() {\n\t      var random = d3.random.normal.apply(d3, arguments);\n\t      return function() {\n\t        return Math.exp(random());\n\t      };\n\t    },\n\t    bates: function(m) {\n\t      var random = d3.random.irwinHall(m);\n\t      return function() {\n\t        return random() / m;\n\t      };\n\t    },\n\t    irwinHall: function(m) {\n\t      return function() {\n\t        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n\t        return s;\n\t      };\n\t    }\n\t  };\n\t  d3.scale = {};\n\t  function d3_scaleExtent(domain) {\n\t    var start = domain[0], stop = domain[domain.length - 1];\n\t    return start < stop ? [ start, stop ] : [ stop, start ];\n\t  }\n\t  function d3_scaleRange(scale) {\n\t    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n\t  }\n\t  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n\t    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n\t    return function(x) {\n\t      return i(u(x));\n\t    };\n\t  }\n\t  function d3_scale_nice(domain, nice) {\n\t    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n\t    if (x1 < x0) {\n\t      dx = i0, i0 = i1, i1 = dx;\n\t      dx = x0, x0 = x1, x1 = dx;\n\t    }\n\t    domain[i0] = nice.floor(x0);\n\t    domain[i1] = nice.ceil(x1);\n\t    return domain;\n\t  }\n\t  function d3_scale_niceStep(step) {\n\t    return step ? {\n\t      floor: function(x) {\n\t        return Math.floor(x / step) * step;\n\t      },\n\t      ceil: function(x) {\n\t        return Math.ceil(x / step) * step;\n\t      }\n\t    } : d3_scale_niceIdentity;\n\t  }\n\t  var d3_scale_niceIdentity = {\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n\t    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n\t    if (domain[k] < domain[0]) {\n\t      domain = domain.slice().reverse();\n\t      range = range.slice().reverse();\n\t    }\n\t    while (++j <= k) {\n\t      u.push(uninterpolate(domain[j - 1], domain[j]));\n\t      i.push(interpolate(range[j - 1], range[j]));\n\t    }\n\t    return function(x) {\n\t      var j = d3.bisect(domain, x, 1, k) - 1;\n\t      return i[j](u[j](x));\n\t    };\n\t  }\n\t  d3.scale.linear = function() {\n\t    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n\t  };\n\t  function d3_scale_linear(domain, range, interpolate, clamp) {\n\t    var output, input;\n\t    function rescale() {\n\t      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n\t      output = linear(domain, range, uninterpolate, interpolate);\n\t      input = linear(range, domain, uninterpolate, d3_interpolate);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      return output(x);\n\t    }\n\t    scale.invert = function(y) {\n\t      return input(y);\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(Number);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.rangeRound = function(x) {\n\t      return scale.range(x).interpolate(d3_interpolateRound);\n\t    };\n\t    scale.clamp = function(x) {\n\t      if (!arguments.length) return clamp;\n\t      clamp = x;\n\t      return rescale();\n\t    };\n\t    scale.interpolate = function(x) {\n\t      if (!arguments.length) return interpolate;\n\t      interpolate = x;\n\t      return rescale();\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      d3_scale_linearNice(domain, m);\n\t      return rescale();\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_linear(domain, range, interpolate, clamp);\n\t    };\n\t    return rescale();\n\t  }\n\t  function d3_scale_linearRebind(scale, linear) {\n\t    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n\t  }\n\t  function d3_scale_linearNice(domain, m) {\n\t    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n\t  }\n\t  function d3_scale_linearTickRange(domain, m) {\n\t    if (m == null) m = 10;\n\t    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n\t    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n\t    extent[0] = Math.ceil(extent[0] / step) * step;\n\t    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n\t    extent[2] = step;\n\t    return extent;\n\t  }\n\t  function d3_scale_linearTicks(domain, m) {\n\t    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n\t  }\n\t  function d3_scale_linearTickFormat(domain, m, format) {\n\t    var range = d3_scale_linearTickRange(domain, m);\n\t    if (format) {\n\t      var match = d3_format_re.exec(format);\n\t      match.shift();\n\t      if (match[8] === \"s\") {\n\t        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n\t        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n\t        match[8] = \"f\";\n\t        format = d3.format(match.join(\"\"));\n\t        return function(d) {\n\t          return format(prefix.scale(d)) + prefix.symbol;\n\t        };\n\t      }\n\t      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n\t      format = match.join(\"\");\n\t    } else {\n\t      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n\t    }\n\t    return d3.format(format);\n\t  }\n\t  var d3_scale_linearFormatSignificant = {\n\t    s: 1,\n\t    g: 1,\n\t    p: 1,\n\t    r: 1,\n\t    e: 1\n\t  };\n\t  function d3_scale_linearPrecision(value) {\n\t    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n\t  }\n\t  function d3_scale_linearFormatPrecision(type, range) {\n\t    var p = d3_scale_linearPrecision(range[2]);\n\t    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n\t  }\n\t  d3.scale.log = function() {\n\t    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n\t  };\n\t  function d3_scale_log(linear, base, positive, domain) {\n\t    function log(x) {\n\t      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n\t    }\n\t    function pow(x) {\n\t      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n\t    }\n\t    function scale(x) {\n\t      return linear(log(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return pow(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      positive = x[0] >= 0;\n\t      linear.domain((domain = x.map(Number)).map(log));\n\t      return scale;\n\t    };\n\t    scale.base = function(_) {\n\t      if (!arguments.length) return base;\n\t      base = +_;\n\t      linear.domain(domain.map(log));\n\t      return scale;\n\t    };\n\t    scale.nice = function() {\n\t      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n\t      linear.domain(niced);\n\t      domain = niced.map(pow);\n\t      return scale;\n\t    };\n\t    scale.ticks = function() {\n\t      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n\t      if (isFinite(j - i)) {\n\t        if (positive) {\n\t          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n\t          ticks.push(pow(i));\n\t        } else {\n\t          ticks.push(pow(i));\n\t          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n\t        }\n\t        for (i = 0; ticks[i] < u; i++) {}\n\t        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n\t        ticks = ticks.slice(i, j);\n\t      }\n\t      return ticks;\n\t    };\n\t    scale.tickFormat = function(n, format) {\n\t      if (!arguments.length) return d3_scale_logFormat;\n\t      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n\t      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n\t      Math.floor), e;\n\t      return function(d) {\n\t        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n\t      };\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_log(linear.copy(), base, positive, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n\t    floor: function(x) {\n\t      return -Math.ceil(-x);\n\t    },\n\t    ceil: function(x) {\n\t      return -Math.floor(-x);\n\t    }\n\t  };\n\t  d3.scale.pow = function() {\n\t    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_pow(linear, exponent, domain) {\n\t    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n\t    function scale(x) {\n\t      return linear(powp(x));\n\t    }\n\t    scale.invert = function(x) {\n\t      return powb(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      linear.domain((domain = x.map(Number)).map(powp));\n\t      return scale;\n\t    };\n\t    scale.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    scale.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    scale.nice = function(m) {\n\t      return scale.domain(d3_scale_linearNice(domain, m));\n\t    };\n\t    scale.exponent = function(x) {\n\t      if (!arguments.length) return exponent;\n\t      powp = d3_scale_powPow(exponent = x);\n\t      powb = d3_scale_powPow(1 / exponent);\n\t      linear.domain(domain.map(powp));\n\t      return scale;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_pow(linear.copy(), exponent, domain);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_scale_powPow(e) {\n\t    return function(x) {\n\t      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n\t    };\n\t  }\n\t  d3.scale.sqrt = function() {\n\t    return d3.scale.pow().exponent(.5);\n\t  };\n\t  d3.scale.ordinal = function() {\n\t    return d3_scale_ordinal([], {\n\t      t: \"range\",\n\t      a: [ [] ]\n\t    });\n\t  };\n\t  function d3_scale_ordinal(domain, ranger) {\n\t    var index, range, rangeBand;\n\t    function scale(x) {\n\t      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n\t    }\n\t    function steps(start, step) {\n\t      return d3.range(domain.length).map(function(i) {\n\t        return start + step * i;\n\t      });\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = [];\n\t      index = new d3_Map();\n\t      var i = -1, n = x.length, xi;\n\t      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n\t      return scale[ranger.t].apply(scale, ranger.a);\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"range\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangePoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n\t      0) : (stop - start) / (domain.length - 1 + padding);\n\t      range = steps(start + step * padding / 2, step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangePoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundPoints = function(x, padding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n\t      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n\t      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n\t      rangeBand = 0;\n\t      ranger = {\n\t        t: \"rangeRoundPoints\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n\t      range = steps(start + step * outerPadding, step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = step * (1 - padding);\n\t      ranger = {\n\t        t: \"rangeBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeRoundBands = function(x, padding, outerPadding) {\n\t      if (arguments.length < 2) padding = 0;\n\t      if (arguments.length < 3) outerPadding = padding;\n\t      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n\t      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n\t      if (reverse) range.reverse();\n\t      rangeBand = Math.round(step * (1 - padding));\n\t      ranger = {\n\t        t: \"rangeRoundBands\",\n\t        a: arguments\n\t      };\n\t      return scale;\n\t    };\n\t    scale.rangeBand = function() {\n\t      return rangeBand;\n\t    };\n\t    scale.rangeExtent = function() {\n\t      return d3_scaleExtent(ranger.a[0]);\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_ordinal(domain, ranger);\n\t    };\n\t    return scale.domain(domain);\n\t  }\n\t  d3.scale.category10 = function() {\n\t    return d3.scale.ordinal().range(d3_category10);\n\t  };\n\t  d3.scale.category20 = function() {\n\t    return d3.scale.ordinal().range(d3_category20);\n\t  };\n\t  d3.scale.category20b = function() {\n\t    return d3.scale.ordinal().range(d3_category20b);\n\t  };\n\t  d3.scale.category20c = function() {\n\t    return d3.scale.ordinal().range(d3_category20c);\n\t  };\n\t  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n\t  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n\t  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n\t  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n\t  d3.scale.quantile = function() {\n\t    return d3_scale_quantile([], []);\n\t  };\n\t  function d3_scale_quantile(domain, range) {\n\t    var thresholds;\n\t    function rescale() {\n\t      var k = 0, q = range.length;\n\t      thresholds = [];\n\t      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n\t      return scale;\n\t    }\n\t    function scale(x) {\n\t      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.quantiles = function() {\n\t      return thresholds;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantile(domain, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.quantize = function() {\n\t    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n\t  };\n\t  function d3_scale_quantize(x0, x1, range) {\n\t    var kx, i;\n\t    function scale(x) {\n\t      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n\t    }\n\t    function rescale() {\n\t      kx = range.length / (x1 - x0);\n\t      i = range.length - 1;\n\t      return scale;\n\t    }\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return [ x0, x1 ];\n\t      x0 = +x[0];\n\t      x1 = +x[x.length - 1];\n\t      return rescale();\n\t    };\n\t    scale.range = function(x) {\n\t      if (!arguments.length) return range;\n\t      range = x;\n\t      return rescale();\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      y = y < 0 ? NaN : y / kx + x0;\n\t      return [ y, y + 1 / kx ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_quantize(x0, x1, range);\n\t    };\n\t    return rescale();\n\t  }\n\t  d3.scale.threshold = function() {\n\t    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n\t  };\n\t  function d3_scale_threshold(domain, range) {\n\t    function scale(x) {\n\t      if (x <= x) return range[d3.bisect(domain, x)];\n\t    }\n\t    scale.domain = function(_) {\n\t      if (!arguments.length) return domain;\n\t      domain = _;\n\t      return scale;\n\t    };\n\t    scale.range = function(_) {\n\t      if (!arguments.length) return range;\n\t      range = _;\n\t      return scale;\n\t    };\n\t    scale.invertExtent = function(y) {\n\t      y = range.indexOf(y);\n\t      return [ domain[y - 1], domain[y] ];\n\t    };\n\t    scale.copy = function() {\n\t      return d3_scale_threshold(domain, range);\n\t    };\n\t    return scale;\n\t  }\n\t  d3.scale.identity = function() {\n\t    return d3_scale_identity([ 0, 1 ]);\n\t  };\n\t  function d3_scale_identity(domain) {\n\t    function identity(x) {\n\t      return +x;\n\t    }\n\t    identity.invert = identity;\n\t    identity.domain = identity.range = function(x) {\n\t      if (!arguments.length) return domain;\n\t      domain = x.map(identity);\n\t      return identity;\n\t    };\n\t    identity.ticks = function(m) {\n\t      return d3_scale_linearTicks(domain, m);\n\t    };\n\t    identity.tickFormat = function(m, format) {\n\t      return d3_scale_linearTickFormat(domain, m, format);\n\t    };\n\t    identity.copy = function() {\n\t      return d3_scale_identity(domain);\n\t    };\n\t    return identity;\n\t  }\n\t  d3.svg = {};\n\t  function d3_zero() {\n\t    return 0;\n\t  }\n\t  d3.svg.arc = function() {\n\t    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n\t    function arc() {\n\t      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n\t      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n\t      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n\t      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n\t      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n\t        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n\t        if (!cw) p1 *= -1;\n\t        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n\t        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n\t      }\n\t      if (r1) {\n\t        x0 = r1 * Math.cos(a0 + p1);\n\t        y0 = r1 * Math.sin(a0 + p1);\n\t        x1 = r1 * Math.cos(a1 - p1);\n\t        y1 = r1 * Math.sin(a1 - p1);\n\t        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n\t        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n\t          var h1 = (a0 + a1) / 2;\n\t          x0 = r1 * Math.cos(h1);\n\t          y0 = r1 * Math.sin(h1);\n\t          x1 = y1 = null;\n\t        }\n\t      } else {\n\t        x0 = y0 = 0;\n\t      }\n\t      if (r0) {\n\t        x2 = r0 * Math.cos(a1 - p0);\n\t        y2 = r0 * Math.sin(a1 - p0);\n\t        x3 = r0 * Math.cos(a0 + p0);\n\t        y3 = r0 * Math.sin(a0 + p0);\n\t        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n\t        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n\t          var h0 = (a0 + a1) / 2;\n\t          x2 = r0 * Math.cos(h0);\n\t          y2 = r0 * Math.sin(h0);\n\t          x3 = y3 = null;\n\t        }\n\t      } else {\n\t        x2 = y2 = 0;\n\t      }\n\t      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n\t        cr = r0 < r1 ^ cw ? 0 : 1;\n\t        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n\t        if (x1 != null) {\n\t          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n\t          if (rc === rc1) {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n\t          } else {\n\t            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n\t          }\n\t        } else {\n\t          path.push(\"M\", x0, \",\", y0);\n\t        }\n\t        if (x3 != null) {\n\t          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n\t          if (rc === rc0) {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          } else {\n\t            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n\t          }\n\t        } else {\n\t          path.push(\"L\", x2, \",\", y2);\n\t        }\n\t      } else {\n\t        path.push(\"M\", x0, \",\", y0);\n\t        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n\t        path.push(\"L\", x2, \",\", y2);\n\t        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n\t      }\n\t      path.push(\"Z\");\n\t      return path.join(\"\");\n\t    }\n\t    function circleSegment(r1, cw) {\n\t      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n\t    }\n\t    arc.innerRadius = function(v) {\n\t      if (!arguments.length) return innerRadius;\n\t      innerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.outerRadius = function(v) {\n\t      if (!arguments.length) return outerRadius;\n\t      outerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.cornerRadius = function(v) {\n\t      if (!arguments.length) return cornerRadius;\n\t      cornerRadius = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padRadius = function(v) {\n\t      if (!arguments.length) return padRadius;\n\t      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.padAngle = function(v) {\n\t      if (!arguments.length) return padAngle;\n\t      padAngle = d3_functor(v);\n\t      return arc;\n\t    };\n\t    arc.centroid = function() {\n\t      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n\t      return [ Math.cos(a) * r, Math.sin(a) * r ];\n\t    };\n\t    return arc;\n\t  };\n\t  var d3_svg_arcAuto = \"auto\";\n\t  function d3_svg_arcInnerRadius(d) {\n\t    return d.innerRadius;\n\t  }\n\t  function d3_svg_arcOuterRadius(d) {\n\t    return d.outerRadius;\n\t  }\n\t  function d3_svg_arcStartAngle(d) {\n\t    return d.startAngle;\n\t  }\n\t  function d3_svg_arcEndAngle(d) {\n\t    return d.endAngle;\n\t  }\n\t  function d3_svg_arcPadAngle(d) {\n\t    return d && d.padAngle;\n\t  }\n\t  function d3_svg_arcSweep(x0, y0, x1, y1) {\n\t    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n\t  }\n\t  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n\t    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n\t    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\t    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n\t  }\n\t  function d3_svg_line(projection) {\n\t    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n\t    function line(data) {\n\t      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points), tension));\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n\t        } else if (points.length) {\n\t          segment();\n\t          points = [];\n\t        }\n\t      }\n\t      if (points.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    line.x = function(_) {\n\t      if (!arguments.length) return x;\n\t      x = _;\n\t      return line;\n\t    };\n\t    line.y = function(_) {\n\t      if (!arguments.length) return y;\n\t      y = _;\n\t      return line;\n\t    };\n\t    line.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return line;\n\t    };\n\t    line.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      return line;\n\t    };\n\t    line.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return line;\n\t    };\n\t    return line;\n\t  }\n\t  d3.svg.line = function() {\n\t    return d3_svg_line(d3_identity);\n\t  };\n\t  var d3_svg_lineInterpolators = d3.map({\n\t    linear: d3_svg_lineLinear,\n\t    \"linear-closed\": d3_svg_lineLinearClosed,\n\t    step: d3_svg_lineStep,\n\t    \"step-before\": d3_svg_lineStepBefore,\n\t    \"step-after\": d3_svg_lineStepAfter,\n\t    basis: d3_svg_lineBasis,\n\t    \"basis-open\": d3_svg_lineBasisOpen,\n\t    \"basis-closed\": d3_svg_lineBasisClosed,\n\t    bundle: d3_svg_lineBundle,\n\t    cardinal: d3_svg_lineCardinal,\n\t    \"cardinal-open\": d3_svg_lineCardinalOpen,\n\t    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n\t    monotone: d3_svg_lineMonotone\n\t  });\n\t  d3_svg_lineInterpolators.forEach(function(key, value) {\n\t    value.key = key;\n\t    value.closed = /-closed$/.test(key);\n\t  });\n\t  function d3_svg_lineLinear(points) {\n\t    return points.join(\"L\");\n\t  }\n\t  function d3_svg_lineLinearClosed(points) {\n\t    return d3_svg_lineLinear(points) + \"Z\";\n\t  }\n\t  function d3_svg_lineStep(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n\t    if (n > 1) path.push(\"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepBefore(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineStepAfter(points) {\n\t    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n\t    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineCardinalOpen(points, tension) {\n\t    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineCardinalClosed(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n\t    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n\t  }\n\t  function d3_svg_lineCardinal(points, tension) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n\t  }\n\t  function d3_svg_lineHermite(points, tangents) {\n\t    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n\t      return d3_svg_lineLinear(points);\n\t    }\n\t    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n\t    if (quad) {\n\t      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n\t      p0 = points[1];\n\t      pi = 2;\n\t    }\n\t    if (tangents.length > 1) {\n\t      t = tangents[1];\n\t      p = points[pi];\n\t      pi++;\n\t      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      for (var i = 2; i < tangents.length; i++, pi++) {\n\t        p = points[pi];\n\t        t = tangents[i];\n\t        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n\t      }\n\t    }\n\t    if (quad) {\n\t      var lp = points[pi];\n\t      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n\t    }\n\t    return path;\n\t  }\n\t  function d3_svg_lineCardinalTangents(points, tension) {\n\t    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n\t    while (++i < n) {\n\t      p0 = p1;\n\t      p1 = p2;\n\t      p2 = points[i];\n\t      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineBasis(points) {\n\t    if (points.length < 3) return d3_svg_lineLinear(points);\n\t    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    points.push(points[n - 1]);\n\t    while (++i <= n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    points.pop();\n\t    path.push(\"L\", pi);\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisOpen(points) {\n\t    if (points.length < 4) return d3_svg_lineLinear(points);\n\t    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n\t    while (++i < 3) {\n\t      pi = points[i];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n\t    --i;\n\t    while (++i < n) {\n\t      pi = points[i];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBasisClosed(points) {\n\t    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n\t    while (++i < 4) {\n\t      pi = points[i % n];\n\t      px.push(pi[0]);\n\t      py.push(pi[1]);\n\t    }\n\t    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n\t    --i;\n\t    while (++i < m) {\n\t      pi = points[i % n];\n\t      px.shift();\n\t      px.push(pi[0]);\n\t      py.shift();\n\t      py.push(pi[1]);\n\t      d3_svg_lineBasisBezier(path, px, py);\n\t    }\n\t    return path.join(\"\");\n\t  }\n\t  function d3_svg_lineBundle(points, tension) {\n\t    var n = points.length - 1;\n\t    if (n) {\n\t      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n\t      while (++i <= n) {\n\t        p = points[i];\n\t        t = i / n;\n\t        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n\t        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n\t      }\n\t    }\n\t    return d3_svg_lineBasis(points);\n\t  }\n\t  function d3_svg_lineDot4(a, b) {\n\t    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n\t  }\n\t  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n\t  function d3_svg_lineBasisBezier(path, x, y) {\n\t    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n\t  }\n\t  function d3_svg_lineSlope(p0, p1) {\n\t    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n\t  }\n\t  function d3_svg_lineFiniteDifferences(points) {\n\t    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n\t    while (++i < j) {\n\t      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n\t    }\n\t    m[i] = d;\n\t    return m;\n\t  }\n\t  function d3_svg_lineMonotoneTangents(points) {\n\t    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n\t    while (++i < j) {\n\t      d = d3_svg_lineSlope(points[i], points[i + 1]);\n\t      if (abs(d) < ε) {\n\t        m[i] = m[i + 1] = 0;\n\t      } else {\n\t        a = m[i] / d;\n\t        b = m[i + 1] / d;\n\t        s = a * a + b * b;\n\t        if (s > 9) {\n\t          s = d * 3 / Math.sqrt(s);\n\t          m[i] = s * a;\n\t          m[i + 1] = s * b;\n\t        }\n\t      }\n\t    }\n\t    i = -1;\n\t    while (++i <= j) {\n\t      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n\t      tangents.push([ s || 0, m[i] * s || 0 ]);\n\t    }\n\t    return tangents;\n\t  }\n\t  function d3_svg_lineMonotone(points) {\n\t    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n\t  }\n\t  d3.svg.line.radial = function() {\n\t    var line = d3_svg_line(d3_svg_lineRadial);\n\t    line.radius = line.x, delete line.x;\n\t    line.angle = line.y, delete line.y;\n\t    return line;\n\t  };\n\t  function d3_svg_lineRadial(points) {\n\t    var point, i = -1, n = points.length, r, a;\n\t    while (++i < n) {\n\t      point = points[i];\n\t      r = point[0];\n\t      a = point[1] - halfπ;\n\t      point[0] = r * Math.cos(a);\n\t      point[1] = r * Math.sin(a);\n\t    }\n\t    return points;\n\t  }\n\t  function d3_svg_area(projection) {\n\t    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n\t    function area(data) {\n\t      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n\t        return x;\n\t      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n\t        return y;\n\t      } : d3_functor(y1), x, y;\n\t      function segment() {\n\t        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n\t      }\n\t      while (++i < n) {\n\t        if (defined.call(this, d = data[i], i)) {\n\t          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n\t          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n\t        } else if (points0.length) {\n\t          segment();\n\t          points0 = [];\n\t          points1 = [];\n\t        }\n\t      }\n\t      if (points0.length) segment();\n\t      return segments.length ? segments.join(\"\") : null;\n\t    }\n\t    area.x = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x0 = x1 = _;\n\t      return area;\n\t    };\n\t    area.x0 = function(_) {\n\t      if (!arguments.length) return x0;\n\t      x0 = _;\n\t      return area;\n\t    };\n\t    area.x1 = function(_) {\n\t      if (!arguments.length) return x1;\n\t      x1 = _;\n\t      return area;\n\t    };\n\t    area.y = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y0 = y1 = _;\n\t      return area;\n\t    };\n\t    area.y0 = function(_) {\n\t      if (!arguments.length) return y0;\n\t      y0 = _;\n\t      return area;\n\t    };\n\t    area.y1 = function(_) {\n\t      if (!arguments.length) return y1;\n\t      y1 = _;\n\t      return area;\n\t    };\n\t    area.defined = function(_) {\n\t      if (!arguments.length) return defined;\n\t      defined = _;\n\t      return area;\n\t    };\n\t    area.interpolate = function(_) {\n\t      if (!arguments.length) return interpolateKey;\n\t      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n\t      interpolateReverse = interpolate.reverse || interpolate;\n\t      L = interpolate.closed ? \"M\" : \"L\";\n\t      return area;\n\t    };\n\t    area.tension = function(_) {\n\t      if (!arguments.length) return tension;\n\t      tension = _;\n\t      return area;\n\t    };\n\t    return area;\n\t  }\n\t  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n\t  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n\t  d3.svg.area = function() {\n\t    return d3_svg_area(d3_identity);\n\t  };\n\t  d3.svg.area.radial = function() {\n\t    var area = d3_svg_area(d3_svg_lineRadial);\n\t    area.radius = area.x, delete area.x;\n\t    area.innerRadius = area.x0, delete area.x0;\n\t    area.outerRadius = area.x1, delete area.x1;\n\t    area.angle = area.y, delete area.y;\n\t    area.startAngle = area.y0, delete area.y0;\n\t    area.endAngle = area.y1, delete area.y1;\n\t    return area;\n\t  };\n\t  d3.svg.chord = function() {\n\t    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n\t    function chord(d, i) {\n\t      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n\t      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n\t    }\n\t    function subgroup(self, f, d, i) {\n\t      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n\t      return {\n\t        r: r,\n\t        a0: a0,\n\t        a1: a1,\n\t        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n\t        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n\t      };\n\t    }\n\t    function equals(a, b) {\n\t      return a.a0 == b.a0 && a.a1 == b.a1;\n\t    }\n\t    function arc(r, p, a) {\n\t      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n\t    }\n\t    function curve(r0, p0, r1, p1) {\n\t      return \"Q 0,0 \" + p1;\n\t    }\n\t    chord.radius = function(v) {\n\t      if (!arguments.length) return radius;\n\t      radius = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.source = function(v) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.target = function(v) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.startAngle = function(v) {\n\t      if (!arguments.length) return startAngle;\n\t      startAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    chord.endAngle = function(v) {\n\t      if (!arguments.length) return endAngle;\n\t      endAngle = d3_functor(v);\n\t      return chord;\n\t    };\n\t    return chord;\n\t  };\n\t  function d3_svg_chordRadius(d) {\n\t    return d.radius;\n\t  }\n\t  d3.svg.diagonal = function() {\n\t    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n\t    function diagonal(d, i) {\n\t      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n\t        x: p0.x,\n\t        y: m\n\t      }, {\n\t        x: p3.x,\n\t        y: m\n\t      }, p3 ];\n\t      p = p.map(projection);\n\t      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n\t    }\n\t    diagonal.source = function(x) {\n\t      if (!arguments.length) return source;\n\t      source = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.target = function(x) {\n\t      if (!arguments.length) return target;\n\t      target = d3_functor(x);\n\t      return diagonal;\n\t    };\n\t    diagonal.projection = function(x) {\n\t      if (!arguments.length) return projection;\n\t      projection = x;\n\t      return diagonal;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalProjection(d) {\n\t    return [ d.x, d.y ];\n\t  }\n\t  d3.svg.diagonal.radial = function() {\n\t    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n\t    diagonal.projection = function(x) {\n\t      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n\t    };\n\t    return diagonal;\n\t  };\n\t  function d3_svg_diagonalRadialProjection(projection) {\n\t    return function() {\n\t      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n\t      return [ r * Math.cos(a), r * Math.sin(a) ];\n\t    };\n\t  }\n\t  d3.svg.symbol = function() {\n\t    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n\t    function symbol(d, i) {\n\t      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n\t    }\n\t    symbol.type = function(x) {\n\t      if (!arguments.length) return type;\n\t      type = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    symbol.size = function(x) {\n\t      if (!arguments.length) return size;\n\t      size = d3_functor(x);\n\t      return symbol;\n\t    };\n\t    return symbol;\n\t  };\n\t  function d3_svg_symbolSize() {\n\t    return 64;\n\t  }\n\t  function d3_svg_symbolType() {\n\t    return \"circle\";\n\t  }\n\t  function d3_svg_symbolCircle(size) {\n\t    var r = Math.sqrt(size / π);\n\t    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n\t  }\n\t  var d3_svg_symbols = d3.map({\n\t    circle: d3_svg_symbolCircle,\n\t    cross: function(size) {\n\t      var r = Math.sqrt(size / 5) / 2;\n\t      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n\t    },\n\t    diamond: function(size) {\n\t      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n\t    },\n\t    square: function(size) {\n\t      var r = Math.sqrt(size) / 2;\n\t      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n\t    },\n\t    \"triangle-down\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n\t    },\n\t    \"triangle-up\": function(size) {\n\t      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n\t      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n\t    }\n\t  });\n\t  d3.svg.symbolTypes = d3_svg_symbols.keys();\n\t  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n\t  d3_selectionPrototype.transition = function(name) {\n\t    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n\t      time: Date.now(),\n\t      ease: d3_ease_cubicInOut,\n\t      delay: 0,\n\t      duration: 250\n\t    };\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_selectionPrototype.interrupt = function(name) {\n\t    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n\t  };\n\t  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n\t  function d3_selection_interruptNS(ns) {\n\t    return function() {\n\t      var lock, active;\n\t      if ((lock = this[ns]) && (active = lock[lock.active])) {\n\t        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n\t        lock.active += .5;\n\t        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n\t      }\n\t    };\n\t  }\n\t  function d3_transition(groups, ns, id) {\n\t    d3_subclass(groups, d3_transitionPrototype);\n\t    groups.namespace = ns;\n\t    groups.id = id;\n\t    return groups;\n\t  }\n\t  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n\t  d3_transitionPrototype.call = d3_selectionPrototype.call;\n\t  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n\t  d3_transitionPrototype.node = d3_selectionPrototype.node;\n\t  d3_transitionPrototype.size = d3_selectionPrototype.size;\n\t  d3.transition = function(selection, name) {\n\t    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n\t  };\n\t  d3.transition.prototype = d3_transitionPrototype;\n\t  d3_transitionPrototype.select = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n\t    selector = d3_selection_selector(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n\t          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n\t          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n\t          subgroup.push(subnode);\n\t        } else {\n\t          subgroup.push(null);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.selectAll = function(selector) {\n\t    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n\t    selector = d3_selection_selectorAll(selector);\n\t    for (var j = -1, m = this.length; ++j < m; ) {\n\t      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id];\n\t          subnodes = selector.call(node, node.__data__, i, j);\n\t          subgroups.push(subgroup = []);\n\t          for (var k = -1, o = subnodes.length; ++k < o; ) {\n\t            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n\t            subgroup.push(subnode);\n\t          }\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id);\n\t  };\n\t  d3_transitionPrototype.filter = function(filter) {\n\t    var subgroups = [], subgroup, group, node;\n\t    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n\t          subgroup.push(node);\n\t        }\n\t      }\n\t    }\n\t    return d3_transition(subgroups, this.namespace, this.id);\n\t  };\n\t  d3_transitionPrototype.tween = function(name, tween) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n\t    return d3_selection_each(this, tween == null ? function(node) {\n\t      node[ns][id].tween.remove(name);\n\t    } : function(node) {\n\t      node[ns][id].tween.set(name, tween);\n\t    });\n\t  };\n\t  function d3_transition_tween(groups, name, value, tween) {\n\t    var id = groups.id, ns = groups.namespace;\n\t    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n\t    } : (value = tween(value), function(node) {\n\t      node[ns][id].tween.set(name, value);\n\t    }));\n\t  }\n\t  d3_transitionPrototype.attr = function(nameNS, value) {\n\t    if (arguments.length < 2) {\n\t      for (value in nameNS) this.attr(value, nameNS[value]);\n\t      return this;\n\t    }\n\t    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n\t    function attrNull() {\n\t      this.removeAttribute(name);\n\t    }\n\t    function attrNullNS() {\n\t      this.removeAttributeNS(name.space, name.local);\n\t    }\n\t    function attrTween(b) {\n\t      return b == null ? attrNull : (b += \"\", function() {\n\t        var a = this.getAttribute(name), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttribute(name, i(t));\n\t        });\n\t      });\n\t    }\n\t    function attrTweenNS(b) {\n\t      return b == null ? attrNullNS : (b += \"\", function() {\n\t        var a = this.getAttributeNS(name.space, name.local), i;\n\t        return a !== b && (i = interpolate(a, b), function(t) {\n\t          this.setAttributeNS(name.space, name.local, i(t));\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n\t    var name = d3.ns.qualify(nameNS);\n\t    function attrTween(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttribute(name));\n\t      return f && function(t) {\n\t        this.setAttribute(name, f(t));\n\t      };\n\t    }\n\t    function attrTweenNS(d, i) {\n\t      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n\t      return f && function(t) {\n\t        this.setAttributeNS(name.space, name.local, f(t));\n\t      };\n\t    }\n\t    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n\t  };\n\t  d3_transitionPrototype.style = function(name, value, priority) {\n\t    var n = arguments.length;\n\t    if (n < 3) {\n\t      if (typeof name !== \"string\") {\n\t        if (n < 2) value = \"\";\n\t        for (priority in name) this.style(priority, name[priority], value);\n\t        return this;\n\t      }\n\t      priority = \"\";\n\t    }\n\t    function styleNull() {\n\t      this.style.removeProperty(name);\n\t    }\n\t    function styleString(b) {\n\t      return b == null ? styleNull : (b += \"\", function() {\n\t        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n\t        return a !== b && (i = d3_interpolate(a, b), function(t) {\n\t          this.style.setProperty(name, i(t), priority);\n\t        });\n\t      });\n\t    }\n\t    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n\t  };\n\t  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n\t    if (arguments.length < 3) priority = \"\";\n\t    function styleTween(d, i) {\n\t      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n\t      return f && function(t) {\n\t        this.style.setProperty(name, f(t), priority);\n\t      };\n\t    }\n\t    return this.tween(\"style.\" + name, styleTween);\n\t  };\n\t  d3_transitionPrototype.text = function(value) {\n\t    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n\t  };\n\t  function d3_transition_text(b) {\n\t    if (b == null) b = \"\";\n\t    return function() {\n\t      this.textContent = b;\n\t    };\n\t  }\n\t  d3_transitionPrototype.remove = function() {\n\t    var ns = this.namespace;\n\t    return this.each(\"end.transition\", function() {\n\t      var p;\n\t      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n\t    });\n\t  };\n\t  d3_transitionPrototype.ease = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].ease;\n\t    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n\t    return d3_selection_each(this, function(node) {\n\t      node[ns][id].ease = value;\n\t    });\n\t  };\n\t  d3_transitionPrototype.delay = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].delay;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n\t    } : (value = +value, function(node) {\n\t      node[ns][id].delay = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.duration = function(value) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 1) return this.node()[ns][id].duration;\n\t    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n\t      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n\t    } : (value = Math.max(1, value), function(node) {\n\t      node[ns][id].duration = value;\n\t    }));\n\t  };\n\t  d3_transitionPrototype.each = function(type, listener) {\n\t    var id = this.id, ns = this.namespace;\n\t    if (arguments.length < 2) {\n\t      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n\t      try {\n\t        d3_transitionInheritId = id;\n\t        d3_selection_each(this, function(node, i, j) {\n\t          d3_transitionInherit = node[ns][id];\n\t          type.call(node, node.__data__, i, j);\n\t        });\n\t      } finally {\n\t        d3_transitionInherit = inherit;\n\t        d3_transitionInheritId = inheritId;\n\t      }\n\t    } else {\n\t      d3_selection_each(this, function(node) {\n\t        var transition = node[ns][id];\n\t        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n\t      });\n\t    }\n\t    return this;\n\t  };\n\t  d3_transitionPrototype.transition = function() {\n\t    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n\t    for (var j = 0, m = this.length; j < m; j++) {\n\t      subgroups.push(subgroup = []);\n\t      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n\t        if (node = group[i]) {\n\t          transition = node[ns][id0];\n\t          d3_transitionNode(node, i, ns, id1, {\n\t            time: transition.time,\n\t            ease: transition.ease,\n\t            delay: transition.delay + transition.duration,\n\t            duration: transition.duration\n\t          });\n\t        }\n\t        subgroup.push(node);\n\t      }\n\t    }\n\t    return d3_transition(subgroups, ns, id1);\n\t  };\n\t  function d3_transitionNamespace(name) {\n\t    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n\t  }\n\t  function d3_transitionNode(node, i, ns, id, inherit) {\n\t    var lock = node[ns] || (node[ns] = {\n\t      active: 0,\n\t      count: 0\n\t    }), transition = lock[id];\n\t    if (!transition) {\n\t      var time = inherit.time;\n\t      transition = lock[id] = {\n\t        tween: new d3_Map(),\n\t        time: time,\n\t        delay: inherit.delay,\n\t        duration: inherit.duration,\n\t        ease: inherit.ease,\n\t        index: i\n\t      };\n\t      inherit = null;\n\t      ++lock.count;\n\t      d3.timer(function(elapsed) {\n\t        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n\t        timer.t = delay + time;\n\t        if (delay <= elapsed) return start(elapsed - delay);\n\t        timer.c = start;\n\t        function start(elapsed) {\n\t          if (lock.active > id) return stop();\n\t          var active = lock[lock.active];\n\t          if (active) {\n\t            --lock.count;\n\t            delete lock[lock.active];\n\t            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n\t          }\n\t          lock.active = id;\n\t          transition.event && transition.event.start.call(node, node.__data__, i);\n\t          transition.tween.forEach(function(key, value) {\n\t            if (value = value.call(node, node.__data__, i)) {\n\t              tweened.push(value);\n\t            }\n\t          });\n\t          ease = transition.ease;\n\t          duration = transition.duration;\n\t          d3.timer(function() {\n\t            timer.c = tick(elapsed || 1) ? d3_true : tick;\n\t            return 1;\n\t          }, 0, time);\n\t        }\n\t        function tick(elapsed) {\n\t          if (lock.active !== id) return 1;\n\t          var t = elapsed / duration, e = ease(t), n = tweened.length;\n\t          while (n > 0) {\n\t            tweened[--n].call(node, e);\n\t          }\n\t          if (t >= 1) {\n\t            transition.event && transition.event.end.call(node, node.__data__, i);\n\t            return stop();\n\t          }\n\t        }\n\t        function stop() {\n\t          if (--lock.count) delete lock[id]; else delete node[ns];\n\t          return 1;\n\t        }\n\t      }, 0, time);\n\t    }\n\t  }\n\t  d3.svg.axis = function() {\n\t    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n\t    function axis(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this);\n\t        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n\t        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n\t        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n\t        d3.transition(path));\n\t        tickEnter.append(\"line\");\n\t        tickEnter.append(\"text\");\n\t        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n\t        if (orient === \"bottom\" || orient === \"top\") {\n\t          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n\t          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n\t          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n\t        } else {\n\t          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n\t          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n\t          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n\t        }\n\t        lineEnter.attr(y2, sign * innerTickSize);\n\t        textEnter.attr(y1, sign * tickSpacing);\n\t        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n\t        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n\t        if (scale1.rangeBand) {\n\t          var x = scale1, dx = x.rangeBand() / 2;\n\t          scale0 = scale1 = function(d) {\n\t            return x(d) + dx;\n\t          };\n\t        } else if (scale0.rangeBand) {\n\t          scale0 = scale1;\n\t        } else {\n\t          tickExit.call(tickTransform, scale1, scale0);\n\t        }\n\t        tickEnter.call(tickTransform, scale0, scale1);\n\t        tickUpdate.call(tickTransform, scale1, scale1);\n\t      });\n\t    }\n\t    axis.scale = function(x) {\n\t      if (!arguments.length) return scale;\n\t      scale = x;\n\t      return axis;\n\t    };\n\t    axis.orient = function(x) {\n\t      if (!arguments.length) return orient;\n\t      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n\t      return axis;\n\t    };\n\t    axis.ticks = function() {\n\t      if (!arguments.length) return tickArguments_;\n\t      tickArguments_ = arguments;\n\t      return axis;\n\t    };\n\t    axis.tickValues = function(x) {\n\t      if (!arguments.length) return tickValues;\n\t      tickValues = x;\n\t      return axis;\n\t    };\n\t    axis.tickFormat = function(x) {\n\t      if (!arguments.length) return tickFormat_;\n\t      tickFormat_ = x;\n\t      return axis;\n\t    };\n\t    axis.tickSize = function(x) {\n\t      var n = arguments.length;\n\t      if (!n) return innerTickSize;\n\t      innerTickSize = +x;\n\t      outerTickSize = +arguments[n - 1];\n\t      return axis;\n\t    };\n\t    axis.innerTickSize = function(x) {\n\t      if (!arguments.length) return innerTickSize;\n\t      innerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.outerTickSize = function(x) {\n\t      if (!arguments.length) return outerTickSize;\n\t      outerTickSize = +x;\n\t      return axis;\n\t    };\n\t    axis.tickPadding = function(x) {\n\t      if (!arguments.length) return tickPadding;\n\t      tickPadding = +x;\n\t      return axis;\n\t    };\n\t    axis.tickSubdivide = function() {\n\t      return arguments.length && axis;\n\t    };\n\t    return axis;\n\t  };\n\t  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n\t    top: 1,\n\t    right: 1,\n\t    bottom: 1,\n\t    left: 1\n\t  };\n\t  function d3_svg_axisX(selection, x0, x1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = x0(d);\n\t      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n\t    });\n\t  }\n\t  function d3_svg_axisY(selection, y0, y1) {\n\t    selection.attr(\"transform\", function(d) {\n\t      var v0 = y0(d);\n\t      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n\t    });\n\t  }\n\t  d3.svg.brush = function() {\n\t    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n\t    function brush(g) {\n\t      g.each(function() {\n\t        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n\t        var background = g.selectAll(\".background\").data([ 0 ]);\n\t        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n\t        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n\t        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n\t        resize.exit().remove();\n\t        resize.enter().append(\"g\").attr(\"class\", function(d) {\n\t          return \"resize \" + d;\n\t        }).style(\"cursor\", function(d) {\n\t          return d3_svg_brushCursor[d];\n\t        }).append(\"rect\").attr(\"x\", function(d) {\n\t          return /[ew]$/.test(d) ? -3 : null;\n\t        }).attr(\"y\", function(d) {\n\t          return /^[ns]/.test(d) ? -3 : null;\n\t        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n\t        resize.style(\"display\", brush.empty() ? \"none\" : null);\n\t        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n\t        if (x) {\n\t          range = d3_scaleRange(x);\n\t          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n\t          redrawX(gUpdate);\n\t        }\n\t        if (y) {\n\t          range = d3_scaleRange(y);\n\t          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n\t          redrawY(gUpdate);\n\t        }\n\t        redraw(gUpdate);\n\t      });\n\t    }\n\t    brush.event = function(g) {\n\t      g.each(function() {\n\t        var event_ = event.of(this, arguments), extent1 = {\n\t          x: xExtent,\n\t          y: yExtent,\n\t          i: xExtentDomain,\n\t          j: yExtentDomain\n\t        }, extent0 = this.__chart__ || extent1;\n\t        this.__chart__ = extent1;\n\t        if (d3_transitionInheritId) {\n\t          d3.select(this).transition().each(\"start.brush\", function() {\n\t            xExtentDomain = extent0.i;\n\t            yExtentDomain = extent0.j;\n\t            xExtent = extent0.x;\n\t            yExtent = extent0.y;\n\t            event_({\n\t              type: \"brushstart\"\n\t            });\n\t          }).tween(\"brush:brush\", function() {\n\t            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n\t            xExtentDomain = yExtentDomain = null;\n\t            return function(t) {\n\t              xExtent = extent1.x = xi(t);\n\t              yExtent = extent1.y = yi(t);\n\t              event_({\n\t                type: \"brush\",\n\t                mode: \"resize\"\n\t              });\n\t            };\n\t          }).each(\"end.brush\", function() {\n\t            xExtentDomain = extent1.i;\n\t            yExtentDomain = extent1.j;\n\t            event_({\n\t              type: \"brush\",\n\t              mode: \"resize\"\n\t            });\n\t            event_({\n\t              type: \"brushend\"\n\t            });\n\t          });\n\t        } else {\n\t          event_({\n\t            type: \"brushstart\"\n\t          });\n\t          event_({\n\t            type: \"brush\",\n\t            mode: \"resize\"\n\t          });\n\t          event_({\n\t            type: \"brushend\"\n\t          });\n\t        }\n\t      });\n\t    };\n\t    function redraw(g) {\n\t      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n\t        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n\t      });\n\t    }\n\t    function redrawX(g) {\n\t      g.select(\".extent\").attr(\"x\", xExtent[0]);\n\t      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n\t    }\n\t    function redrawY(g) {\n\t      g.select(\".extent\").attr(\"y\", yExtent[0]);\n\t      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n\t    }\n\t    function brushstart() {\n\t      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n\t      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n\t      if (d3.event.changedTouches) {\n\t        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n\t      } else {\n\t        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n\t      }\n\t      g.interrupt().selectAll(\"*\").interrupt();\n\t      if (dragging) {\n\t        origin[0] = xExtent[0] - origin[0];\n\t        origin[1] = yExtent[0] - origin[1];\n\t      } else if (resizing) {\n\t        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n\t        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n\t        origin[0] = xExtent[ex];\n\t        origin[1] = yExtent[ey];\n\t      } else if (d3.event.altKey) center = origin.slice();\n\t      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n\t      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n\t      event_({\n\t        type: \"brushstart\"\n\t      });\n\t      brushmove();\n\t      function keydown() {\n\t        if (d3.event.keyCode == 32) {\n\t          if (!dragging) {\n\t            center = null;\n\t            origin[0] -= xExtent[1];\n\t            origin[1] -= yExtent[1];\n\t            dragging = 2;\n\t          }\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function keyup() {\n\t        if (d3.event.keyCode == 32 && dragging == 2) {\n\t          origin[0] += xExtent[1];\n\t          origin[1] += yExtent[1];\n\t          dragging = 0;\n\t          d3_eventPreventDefault();\n\t        }\n\t      }\n\t      function brushmove() {\n\t        var point = d3.mouse(target), moved = false;\n\t        if (offset) {\n\t          point[0] += offset[0];\n\t          point[1] += offset[1];\n\t        }\n\t        if (!dragging) {\n\t          if (d3.event.altKey) {\n\t            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n\t            origin[0] = xExtent[+(point[0] < center[0])];\n\t            origin[1] = yExtent[+(point[1] < center[1])];\n\t          } else center = null;\n\t        }\n\t        if (resizingX && move1(point, x, 0)) {\n\t          redrawX(g);\n\t          moved = true;\n\t        }\n\t        if (resizingY && move1(point, y, 1)) {\n\t          redrawY(g);\n\t          moved = true;\n\t        }\n\t        if (moved) {\n\t          redraw(g);\n\t          event_({\n\t            type: \"brush\",\n\t            mode: dragging ? \"move\" : \"resize\"\n\t          });\n\t        }\n\t      }\n\t      function move1(point, scale, i) {\n\t        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n\t        if (dragging) {\n\t          r0 -= position;\n\t          r1 -= size + position;\n\t        }\n\t        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n\t        if (dragging) {\n\t          max = (min += position) + size;\n\t        } else {\n\t          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n\t          if (position < min) {\n\t            max = min;\n\t            min = position;\n\t          } else {\n\t            max = position;\n\t          }\n\t        }\n\t        if (extent[0] != min || extent[1] != max) {\n\t          if (i) yExtentDomain = null; else xExtentDomain = null;\n\t          extent[0] = min;\n\t          extent[1] = max;\n\t          return true;\n\t        }\n\t      }\n\t      function brushend() {\n\t        brushmove();\n\t        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n\t        d3.select(\"body\").style(\"cursor\", null);\n\t        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n\t        dragRestore();\n\t        event_({\n\t          type: \"brushend\"\n\t        });\n\t      }\n\t    }\n\t    brush.x = function(z) {\n\t      if (!arguments.length) return x;\n\t      x = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.y = function(z) {\n\t      if (!arguments.length) return y;\n\t      y = z;\n\t      resizes = d3_svg_brushResizes[!x << 1 | !y];\n\t      return brush;\n\t    };\n\t    brush.clamp = function(z) {\n\t      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n\t      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n\t      return brush;\n\t    };\n\t    brush.extent = function(z) {\n\t      var x0, x1, y0, y1, t;\n\t      if (!arguments.length) {\n\t        if (x) {\n\t          if (xExtentDomain) {\n\t            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t          } else {\n\t            x0 = xExtent[0], x1 = xExtent[1];\n\t            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t          }\n\t        }\n\t        if (y) {\n\t          if (yExtentDomain) {\n\t            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t          } else {\n\t            y0 = yExtent[0], y1 = yExtent[1];\n\t            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t          }\n\t        }\n\t        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n\t      }\n\t      if (x) {\n\t        x0 = z[0], x1 = z[1];\n\t        if (y) x0 = x0[0], x1 = x1[0];\n\t        xExtentDomain = [ x0, x1 ];\n\t        if (x.invert) x0 = x(x0), x1 = x(x1);\n\t        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n\t      }\n\t      if (y) {\n\t        y0 = z[0], y1 = z[1];\n\t        if (x) y0 = y0[1], y1 = y1[1];\n\t        yExtentDomain = [ y0, y1 ];\n\t        if (y.invert) y0 = y(y0), y1 = y(y1);\n\t        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n\t      }\n\t      return brush;\n\t    };\n\t    brush.clear = function() {\n\t      if (!brush.empty()) {\n\t        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n\t        xExtentDomain = yExtentDomain = null;\n\t      }\n\t      return brush;\n\t    };\n\t    brush.empty = function() {\n\t      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n\t    };\n\t    return d3.rebind(brush, event, \"on\");\n\t  };\n\t  var d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t  };\n\t  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n\t  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n\t  var d3_time_formatUtc = d3_time_format.utc;\n\t  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n\t  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n\t  function d3_time_formatIsoNative(date) {\n\t    return date.toISOString();\n\t  }\n\t  d3_time_formatIsoNative.parse = function(string) {\n\t    var date = new Date(string);\n\t    return isNaN(date) ? null : date;\n\t  };\n\t  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n\t  d3_time.second = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 1e3) * 1e3);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n\t  }, function(date) {\n\t    return date.getSeconds();\n\t  });\n\t  d3_time.seconds = d3_time.second.range;\n\t  d3_time.seconds.utc = d3_time.second.utc.range;\n\t  d3_time.minute = d3_time_interval(function(date) {\n\t    return new d3_date(Math.floor(date / 6e4) * 6e4);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n\t  }, function(date) {\n\t    return date.getMinutes();\n\t  });\n\t  d3_time.minutes = d3_time.minute.range;\n\t  d3_time.minutes.utc = d3_time.minute.utc.range;\n\t  d3_time.hour = d3_time_interval(function(date) {\n\t    var timezone = date.getTimezoneOffset() / 60;\n\t    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n\t  }, function(date, offset) {\n\t    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n\t  }, function(date) {\n\t    return date.getHours();\n\t  });\n\t  d3_time.hours = d3_time.hour.range;\n\t  d3_time.hours.utc = d3_time.hour.utc.range;\n\t  d3_time.month = d3_time_interval(function(date) {\n\t    date = d3_time.day(date);\n\t    date.setDate(1);\n\t    return date;\n\t  }, function(date, offset) {\n\t    date.setMonth(date.getMonth() + offset);\n\t  }, function(date) {\n\t    return date.getMonth();\n\t  });\n\t  d3_time.months = d3_time.month.range;\n\t  d3_time.months.utc = d3_time.month.utc.range;\n\t  function d3_time_scale(linear, methods, format) {\n\t    function scale(x) {\n\t      return linear(x);\n\t    }\n\t    scale.invert = function(x) {\n\t      return d3_time_scaleDate(linear.invert(x));\n\t    };\n\t    scale.domain = function(x) {\n\t      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n\t      linear.domain(x);\n\t      return scale;\n\t    };\n\t    function tickMethod(extent, count) {\n\t      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n\t      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n\t        return d / 31536e6;\n\t      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n\t    }\n\t    scale.nice = function(interval, skip) {\n\t      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n\t      if (method) interval = method[0], skip = method[1];\n\t      function skipped(date) {\n\t        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n\t      }\n\t      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n\t        floor: function(date) {\n\t          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n\t          return date;\n\t        },\n\t        ceil: function(date) {\n\t          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n\t          return date;\n\t        }\n\t      } : interval));\n\t    };\n\t    scale.ticks = function(interval, skip) {\n\t      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n\t        range: interval\n\t      }, skip ];\n\t      if (method) interval = method[0], skip = method[1];\n\t      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n\t    };\n\t    scale.tickFormat = function() {\n\t      return format;\n\t    };\n\t    scale.copy = function() {\n\t      return d3_time_scale(linear.copy(), methods, format);\n\t    };\n\t    return d3_scale_linearRebind(scale, linear);\n\t  }\n\t  function d3_time_scaleDate(t) {\n\t    return new Date(t);\n\t  }\n\t  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n\t  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n\t  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n\t    return d.getMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getDay() && d.getDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  var d3_time_scaleMilliseconds = {\n\t    range: function(start, stop, step) {\n\t      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n\t    },\n\t    floor: d3_identity,\n\t    ceil: d3_identity\n\t  };\n\t  d3_time_scaleLocalMethods.year = d3_time.year;\n\t  d3_time.scale = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n\t  };\n\t  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n\t    return [ m[0].utc, m[1] ];\n\t  });\n\t  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n\t    return d.getUTCMilliseconds();\n\t  } ], [ \":%S\", function(d) {\n\t    return d.getUTCSeconds();\n\t  } ], [ \"%I:%M\", function(d) {\n\t    return d.getUTCMinutes();\n\t  } ], [ \"%I %p\", function(d) {\n\t    return d.getUTCHours();\n\t  } ], [ \"%a %d\", function(d) {\n\t    return d.getUTCDay() && d.getUTCDate() != 1;\n\t  } ], [ \"%b %d\", function(d) {\n\t    return d.getUTCDate() != 1;\n\t  } ], [ \"%B\", function(d) {\n\t    return d.getUTCMonth();\n\t  } ], [ \"%Y\", d3_true ] ]);\n\t  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n\t  d3_time.scale.utc = function() {\n\t    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n\t  };\n\t  d3.text = d3_xhrType(function(request) {\n\t    return request.responseText;\n\t  });\n\t  d3.json = function(url, callback) {\n\t    return d3_xhr(url, \"application/json\", d3_json, callback);\n\t  };\n\t  function d3_json(request) {\n\t    return JSON.parse(request.responseText);\n\t  }\n\t  d3.html = function(url, callback) {\n\t    return d3_xhr(url, \"text/html\", d3_html, callback);\n\t  };\n\t  function d3_html(request) {\n\t    var range = d3_document.createRange();\n\t    range.selectNode(d3_document.body);\n\t    return range.createContextualFragment(request.responseText);\n\t  }\n\t  d3.xml = d3_xhrType(function(request) {\n\t    return request.responseXML;\n\t  });\n\t  if (true) !(__WEBPACK_AMD_DEFINE_FACTORY__ = (d3), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n\t  this.d3 = d3;\n\t}();\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar React = __webpack_require__(11);\n\t\n\t__webpack_require__(30);\n\t\n\t/* entry for an alert in the listing, can be expanded (with details) or standard\n\t * rowId optional: an identifier for the row which will be set as \"data-row-id\" attribute on the <tr>\n\t * columns list of columns to show in the header\n\t *     columns to show, can be a string, react component or object with { name: 'name', 'header': false }\n\t *     'header' (or if simple string) defaults to false\n\t *     in case 'header' is true, <th> is used for the entries, otherwise <td>\n\t * tabRenderers optional: list of tab renderers for inline expansion, array of objects with\n\t *     - name tab name (has to be unique in the entry, used as react key)\n\t *     - renderer react component\n\t *     - data render data passed to the tab renderer\n\t *     - presence 'always', 'onlyActive', 'loadOnDemand', default: 'loadOnDemand'\n\t *         - 'always' once a row is expanded, this tab is always rendered, but invisible if not active\n\t *         - 'onlyActive' the tab is only rendered when active\n\t *         - 'loadOnDemand' the tab is first rendered when it becomes active, then follows 'always' behavior\n\t *     if tabRenderers isn't set, item can't be expanded inline\n\t * navigateToItem optional: callback triggered when a row is clicked, pattern suggests navigation\n\t *     to view expanded item details, if not set, navigation isn't available\n\t * listingDetail optional: text rendered next to action buttons, similar style to the tab headers\n\t * listingActions optional: buttons that are presented as actions for the expanded item\n\t */\n\tvar ListingRow = React.createClass({\n\t    displayName: 'ListingRow',\n\t\n\t    propTypes: {\n\t        rowId: React.PropTypes.string,\n\t        columns: React.PropTypes.array.isRequired,\n\t        tabRenderers: React.PropTypes.array,\n\t        navigateToItem: React.PropTypes.func,\n\t        listingDetail: React.PropTypes.node,\n\t        listingActions: React.PropTypes.arrayOf(React.PropTypes.node)\n\t    },\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            tabRenderers: [],\n\t            navigateToItem: null\n\t        };\n\t    },\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            expanded: false, // show expanded view if true, otherwise one line compact\n\t            activeTab: 0, // currently active tab in expanded mode, defaults to first tab\n\t            loadedTabs: {} };\n\t    },\n\t    // which tabs were already loaded - this is important for 'loadOnDemand' setting\n\t    // contains tab indices\n\t    handleNavigateClick: function handleNavigateClick(e) {\n\t        // only consider primary mouse button\n\t        if (!e || e.button !== 0) return;\n\t        this.props.navigateToItem();\n\t    },\n\t    handleExpandClick: function handleExpandClick(e) {\n\t        // only consider primary mouse button\n\t        if (!e || e.button !== 0) return;\n\t\n\t        var willBeExpanded = !this.state.expanded && this.props.tabRenderers.length > 0;\n\t        this.setState({ expanded: willBeExpanded });\n\t\n\t        var loadedTabs = {};\n\t        // unload all tabs if not expanded\n\t        if (willBeExpanded) {\n\t            // see if we should preload some tabs\n\t            var tabIdx;\n\t            var tabPresence;\n\t            for (tabIdx = 0; tabIdx < this.props.tabRenderers.length; tabIdx++) {\n\t                if ('presence' in this.props.tabRenderers[tabIdx]) tabPresence = this.props.tabRenderers[tabIdx].presence;else tabPresence = 'default';\n\t                // the active tab is covered by separate logic\n\t                if (tabPresence == 'always') loadedTabs[tabIdx] = true;\n\t            }\n\t            // ensure the active tab is loaded\n\t            loadedTabs[this.state.activeTab] = true;\n\t        }\n\t\n\t        this.setState({ loadedTabs: loadedTabs });\n\t\n\t        e.stopPropagation();\n\t        e.preventDefault();\n\t    },\n\t    handleTabClick: function handleTabClick(tabIdx, e) {\n\t        // only consider primary mouse button\n\t        if (!e || e.button !== 0) return;\n\t        var prevTab = this.state.activeTab;\n\t        var prevTabPresence = 'default';\n\t        var loadedTabs = this.state.loadedTabs;\n\t        if (prevTab !== tabIdx) {\n\t            // see if we need to unload the previous tab\n\t            if ('presence' in this.props.tabRenderers[prevTab]) prevTabPresence = this.props.tabRenderers[prevTab].presence;\n\t\n\t            if (prevTabPresence == 'onlyActive') delete loadedTabs[prevTab];\n\t\n\t            // ensure the new tab is loaded and update state\n\t            loadedTabs[tabIdx] = true;\n\t            this.setState({ loadedTabs: loadedTabs, activeTab: tabIdx });\n\t        }\n\t        e.stopPropagation();\n\t        e.preventDefault();\n\t    },\n\t    render: function render() {\n\t        var self = this;\n\t        // only enable navigation if a function is provided and the row isn't expanded (prevnt accidental navigation)\n\t        var allowNavigate = !!this.props.navigateToItem && !this.state.expanded;\n\t\n\t        var headerEntries = this.props.columns.map(function (itm) {\n\t            if (typeof itm === 'string' || itm === null || itm === undefined || itm instanceof String || React.isValidElement(itm)) return React.createElement(\n\t                'td',\n\t                null,\n\t                itm\n\t            );else if ('header' in itm && itm.header) return React.createElement(\n\t                'th',\n\t                null,\n\t                itm.name\n\t            );else if ('tight' in itm && itm.tight) return React.createElement(\n\t                'td',\n\t                { className: 'listing-ct-actions' },\n\t                itm.name || itm.element\n\t            );else return React.createElement(\n\t                'td',\n\t                null,\n\t                itm.name\n\t            );\n\t        });\n\t\n\t        var allowExpand = this.props.tabRenderers.length > 0;\n\t        var expandToggle = null;\n\t        if (allowExpand) {\n\t            expandToggle = React.createElement(\n\t                'td',\n\t                { className: 'listing-ct-toggle', onClick: allowNavigate ? this.handleExpandClick : undefined },\n\t                React.createElement('i', { className: 'fa fa-fw' })\n\t            );\n\t        } else {\n\t            expandToggle = React.createElement('td', { className: 'listing-ct-toggle' });\n\t        }\n\t\n\t        var listingItemClasses = [\"listing-ct-item\"];\n\t        if (!allowNavigate) listingItemClasses.push(\"listing-ct-nonavigate\");\n\t        if (!allowExpand) listingItemClasses.push(\"listing-ct-noexpand\");\n\t\n\t        var listingItem = React.createElement(\n\t            'tr',\n\t            { 'data-row-id': this.props.rowId,\n\t                className: listingItemClasses.join(' '),\n\t                onClick: allowNavigate ? this.handleNavigateClick : this.handleExpandClick },\n\t            expandToggle,\n\t            headerEntries\n\t        );\n\t\n\t        if (this.state.expanded) {\n\t            var links = this.props.tabRenderers.map(function (itm, idx) {\n\t                return React.createElement(\n\t                    'li',\n\t                    { key: idx, className: idx === self.state.activeTab ? \"active\" : \"\" },\n\t                    React.createElement(\n\t                        'a',\n\t                        { href: '#', onClick: self.handleTabClick.bind(self, idx) },\n\t                        itm.name\n\t                    )\n\t                );\n\t            });\n\t            var tabs = [];\n\t            var tabIdx;\n\t            var Renderer;\n\t            var rendererData;\n\t            var row;\n\t            for (tabIdx = 0; tabIdx < this.props.tabRenderers.length; tabIdx++) {\n\t                Renderer = this.props.tabRenderers[tabIdx].renderer;\n\t                rendererData = this.props.tabRenderers[tabIdx].data;\n\t                if (tabIdx !== this.state.activeTab && !(tabIdx in this.state.loadedTabs)) continue;\n\t                row = React.createElement(Renderer, _extends({ key: this.props.tabRenderers[tabIdx].name, hidden: tabIdx !== this.state.activeTab }, rendererData));\n\t                if (tabIdx === this.state.activeTab) tabs.push(React.createElement(\n\t                    'div',\n\t                    { className: 'listing-ct-body', key: tabIdx },\n\t                    row\n\t                ));else tabs.push(React.createElement(\n\t                    'div',\n\t                    { className: 'listing-ct-body', key: tabIdx, hidden: true },\n\t                    row\n\t                ));\n\t            }\n\t\n\t            var listingDetail;\n\t            if ('listingDetail' in this.props) {\n\t                listingDetail = React.createElement(\n\t                    'span',\n\t                    { className: 'listing-ct-caption' },\n\t                    this.props.listingDetail\n\t                );\n\t            }\n\t\n\t            return React.createElement(\n\t                'tbody',\n\t                { className: 'open' },\n\t                listingItem,\n\t                React.createElement(\n\t                    'tr',\n\t                    { className: 'listing-ct-panel' },\n\t                    React.createElement(\n\t                        'td',\n\t                        { colSpan: headerEntries.length + (expandToggle ? 1 : 0) },\n\t                        React.createElement(\n\t                            'div',\n\t                            { className: 'listing-ct-head' },\n\t                            React.createElement(\n\t                                'div',\n\t                                { className: 'listing-ct-actions' },\n\t                                listingDetail,\n\t                                this.props.listingActions\n\t                            ),\n\t                            React.createElement(\n\t                                'ul',\n\t                                { className: 'nav nav-tabs nav-tabs-pf' },\n\t                                links\n\t                            )\n\t                        ),\n\t                        tabs\n\t                    )\n\t                )\n\t            );\n\t        } else {\n\t            return React.createElement(\n\t                'tbody',\n\t                null,\n\t                listingItem,\n\t                React.createElement('tr', { className: 'listing-ct-panel' })\n\t            );\n\t        }\n\t    }\n\t});\n\t\n\t/* Implements a PatternFly 'List View' pattern\n\t * https://www.patternfly.org/list-view/\n\t * Properties:\n\t * - title\n\t * - fullWidth optional: set width to 100% of parent, defaults to true\n\t * - emptyCaption header caption to show if list is empty, defaults to \"No entries\"\n\t * - columnTitles: array of column titles, as strings\n\t * - actions: additional listing-wide actions (displayed next to the list's title)\n\t */\n\tvar Listing = React.createClass({\n\t    displayName: 'Listing',\n\t\n\t    propTypes: {\n\t        title: React.PropTypes.string.isRequired,\n\t        fullWidth: React.PropTypes.bool,\n\t        emptyCaption: React.PropTypes.string.isRequired,\n\t        columnTitles: React.PropTypes.arrayOf(React.PropTypes.string),\n\t        actions: React.PropTypes.arrayOf(React.PropTypes.node)\n\t    },\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            fullWidth: true,\n\t            columnTitles: [],\n\t            actions: []\n\t        };\n\t    },\n\t    render: function render() {\n\t        var bodyClasses = [\"listing\", \"listing-ct\"];\n\t        if (this.props.fullWidth) bodyClasses.push(\"listing-ct-wide\");\n\t        var headerClasses;\n\t        var headerRow;\n\t        if (!this.props.children || this.props.children.length === 0) {\n\t            headerClasses = \"listing-ct-empty\";\n\t            headerRow = React.createElement(\n\t                'tr',\n\t                null,\n\t                React.createElement(\n\t                    'td',\n\t                    null,\n\t                    this.props.emptyCaption\n\t                )\n\t            );\n\t        } else if (this.props.columnTitles.length) {\n\t            headerRow = React.createElement(\n\t                'tr',\n\t                null,\n\t                React.createElement('th', { className: 'listing-ct-toggle' }),\n\t                this.props.columnTitles.map(function (title) {\n\t                    return React.createElement(\n\t                        'th',\n\t                        null,\n\t                        title\n\t                    );\n\t                })\n\t            );\n\t        } else {\n\t            headerRow = React.createElement('tr', null);\n\t        }\n\t        return React.createElement(\n\t            'table',\n\t            { className: bodyClasses.join(\" \") },\n\t            React.createElement(\n\t                'caption',\n\t                { className: 'cockpit-caption' },\n\t                this.props.title,\n\t                this.props.actions\n\t            ),\n\t            React.createElement(\n\t                'thead',\n\t                { className: headerClasses },\n\t                headerRow\n\t            ),\n\t            this.props.children\n\t        );\n\t    }\n\t});\n\t\n\tmodule.exports = {\n\t    ListingRow: ListingRow,\n\t    Listing: Listing\n\t};\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 31 */,\n/* 32 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// machines/machines.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 21f18b7d45d075119809","'use strict';\n\n(function() {\n  \"use strict\";\n\n  document.addEventListener(\"DOMContentLoaded\", function() {\n    var vmsApp = require(\"./index.es6\");\n    vmsApp.appMain();\n  });\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/machines/index.js\n// module id = 9\n// module chunks = 0","/*jshint esversion: 6 */\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\nimport React from 'react';\nimport store from './store.es6';\nimport App from './app.jsx';\nimport { getAllVms } from './actions.es6';\nimport { logDebug } from './helpers.es6';\n\nfunction render() {\n    React.render(\n        React.createElement(App, {store: store}),\n        document.getElementById('app')\n    );\n}\n\n/**\n * Start the application.\n */\nexport function appMain() {\n    logDebug('index.es6: initial state: ' + JSON.stringify(store.getState()));\n\n    // re-render app every time the state changes\n    store.subscribe(render);\n\n    // do initial render\n    render();\n\n    // initiate data retrieval\n    store.dispatch(getAllVms());\n}\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/machines/index.es6","/*!\n * react-lite.js v0.15.6\n * (c) 2016 Jade Gu\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.React = factory();\n}(this, function () { 'use strict';\n\n  var SVGNamespaceURI = 'http://www.w3.org/2000/svg';\n  var COMPONENT_ID = 'liteid';\n  var VELEMENT = 2;\n  var VSTATELESS = 3;\n  var VCOMPONENT = 4;\n  var VCOMMENT = 5;\n\n  var refs = null;\n\n  function createVelem(type, props) {\n      return {\n          vtype: VELEMENT,\n          type: type,\n          props: props,\n          refs: refs\n      };\n  }\n\n  function createVstateless(type, props) {\n      return {\n          vtype: VSTATELESS,\n          id: getUid(),\n          type: type,\n          props: props\n      };\n  }\n\n  function createVcomponent(type, props) {\n      return {\n          vtype: VCOMPONENT,\n          id: getUid(),\n          type: type,\n          props: props,\n          refs: refs\n      };\n  }\n\n  function createVcomment(comment) {\n      return {\n          vtype: VCOMMENT,\n          comment: comment\n      };\n  }\n\n  function initVnode(vnode, parentContext, namespaceURI) {\n      var vtype = vnode.vtype;\n\n      var node = null;\n      if (!vtype) {\n          node = document.createTextNode(vnode);\n      } else if (vtype === VELEMENT) {\n          node = initVelem(vnode, parentContext, namespaceURI);\n      } else if (vtype === VCOMPONENT) {\n          node = initVcomponent(vnode, parentContext, namespaceURI);\n      } else if (vtype === VSTATELESS) {\n          node = initVstateless(vnode, parentContext, namespaceURI);\n      } else if (vtype === VCOMMENT) {\n          node = document.createComment(vnode.comment);\n      }\n      return node;\n  }\n\n  function destroyVnode(vnode, node) {\n      var vtype = vnode.vtype;\n\n      if (vtype === VELEMENT) {\n          destroyVelem(vnode, node);\n      } else if (vtype === VCOMPONENT) {\n          destroyVcomponent(vnode, node);\n      } else if (vtype === VSTATELESS) {\n          destroyVstateless(vnode, node);\n      }\n  }\n\n  function initVelem(velem, parentContext, namespaceURI) {\n      var type = velem.type;\n      var props = velem.props;\n\n      var node = null;\n\n      if (type === 'svg' || namespaceURI === SVGNamespaceURI) {\n          node = document.createElementNS(SVGNamespaceURI, type);\n          namespaceURI = SVGNamespaceURI;\n      } else {\n          node = document.createElement(type);\n      }\n\n      var children = props.children;\n\n      var vchildren = node.vchildren = [];\n      if (isArr(children)) {\n          flattenChildren(children, collectChild, vchildren);\n      } else {\n          collectChild(children, vchildren);\n      }\n\n      for (var i = 0, len = vchildren.length; i < len; i++) {\n          node.appendChild(initVnode(vchildren[i], parentContext, namespaceURI));\n      }\n\n      var isCustomComponent = type.indexOf('-') >= 0 || props.is != null;\n      setProps(node, props, isCustomComponent);\n\n      attachRef(velem.refs, velem.ref, node);\n\n      return node;\n  }\n\n  function collectChild(child, children) {\n      if (child != null && typeof child !== 'boolean') {\n          children[children.length] = child.vtype ? child : '' + child;\n      }\n  }\n\n  function updateVelem(velem, newVelem, node, parentContext) {\n      var props = velem.props;\n      var type = velem.type;\n\n      var newProps = newVelem.props;\n      var oldHtml = props.dangerouslySetInnerHTML && props.dangerouslySetInnerHTML.__html;\n      var newChildren = newProps.children;\n      var vchildren = node.vchildren;\n      var childNodes = node.childNodes;\n      var namespaceURI = node.namespaceURI;\n\n      var isCustomComponent = type.indexOf('-') >= 0 || props.is != null;\n      var vchildrenLen = vchildren.length;\n      var newVchildren = node.vchildren = [];\n\n      if (isArr(newChildren)) {\n          flattenChildren(newChildren, collectChild, newVchildren);\n      } else {\n          collectChild(newChildren, newVchildren);\n      }\n\n      var newVchildrenLen = newVchildren.length;\n\n      if (oldHtml == null && vchildrenLen) {\n          var shouldRemove = null;\n          var patches = Array(newVchildrenLen);\n\n          for (var i = 0; i < vchildrenLen; i++) {\n              var vnode = vchildren[i];\n              for (var j = 0; j < newVchildrenLen; j++) {\n                  if (patches[j]) {\n                      continue;\n                  }\n                  var newVnode = newVchildren[j];\n                  if (vnode === newVnode) {\n                      patches[j] = {\n                          vnode: vnode,\n                          node: childNodes[i]\n                      };\n                      vchildren[i] = null;\n                      break;\n                  }\n              }\n          }\n\n          outer: for (var i = 0; i < vchildrenLen; i++) {\n              var vnode = vchildren[i];\n              if (vnode === null) {\n                  continue;\n              }\n              var _type = vnode.type;\n              var key = vnode.key;\n              var _refs = vnode.refs;\n\n              var childNode = childNodes[i];\n\n              for (var j = 0; j < newVchildrenLen; j++) {\n                  if (patches[j]) {\n                      continue;\n                  }\n                  var newVnode = newVchildren[j];\n                  if (newVnode.type === _type && newVnode.key === key && newVnode.refs === _refs) {\n                      patches[j] = {\n                          vnode: vnode,\n                          node: childNode\n                      };\n                      continue outer;\n                  }\n              }\n\n              if (!shouldRemove) {\n                  shouldRemove = [];\n              }\n              shouldRemove[shouldRemove.length] = childNode;\n              // shouldRemove.push(childNode)\n              destroyVnode(vnode, childNode);\n          }\n\n          if (shouldRemove) {\n              for (var i = 0, len = shouldRemove.length; i < len; i++) {\n                  node.removeChild(shouldRemove[i]);\n              }\n          }\n\n          for (var i = 0; i < newVchildrenLen; i++) {\n              var newVnode = newVchildren[i];\n              var patchItem = patches[i];\n              if (patchItem) {\n                  var vnode = patchItem.vnode;\n                  var newChildNode = patchItem.node;\n                  if (newVnode !== vnode) {\n                      var vtype = newVnode.vtype;\n                      if (!vtype) {\n                          // textNode\n                          newChildNode.nodeValue = newVnode;\n                          // newChildNode.replaceData(0, vnode.length, newVnode)\n                      } else if (vtype === VELEMENT) {\n                              newChildNode = updateVelem(vnode, newVnode, newChildNode, parentContext);\n                          } else if (vtype === VCOMPONENT) {\n                              newChildNode = updateVcomponent(vnode, newVnode, newChildNode, parentContext);\n                          } else if (vtype === VSTATELESS) {\n                              newChildNode = updateVstateless(vnode, newVnode, newChildNode, parentContext);\n                          }\n                  }\n                  var currentNode = childNodes[i];\n                  if (currentNode !== newChildNode) {\n                      node.insertBefore(newChildNode, currentNode || null);\n                  }\n              } else {\n                  var newChildNode = initVnode(newVnode, parentContext, namespaceURI);\n                  node.insertBefore(newChildNode, childNodes[i] || null);\n              }\n          }\n          patchProps(node, props, newProps, isCustomComponent);\n      } else {\n          // should patch props first, make sure innerHTML was cleared\n          patchProps(node, props, newProps, isCustomComponent);\n          for (var i = 0; i < newVchildrenLen; i++) {\n              node.appendChild(initVnode(newVchildren[i], parentContext, namespaceURI));\n          }\n      }\n\n      if (velem.ref !== newVelem.ref) {\n          detachRef(velem.refs, velem.ref);\n          attachRef(newVelem.refs, newVelem.ref, node);\n      }\n      return node;\n  }\n\n  function destroyVelem(velem, node) {\n      var props = velem.props;\n      var vchildren = node.vchildren;\n      var childNodes = node.childNodes;\n\n      for (var i = 0, len = vchildren.length; i < len; i++) {\n          destroyVnode(vchildren[i], childNodes[i]);\n      }\n\n      detachRef(velem.refs, velem.ref);\n\n      node.eventStore = node.vchildren = null;\n      for (var key in props) {\n          if (props.hasOwnProperty(key) && EVENT_KEYS.test(key)) {\n              key = getEventName(key);\n              if (notBubbleEvents[key] === true) {\n                  node[key] = null;\n              }\n          }\n      }\n  }\n\n  function initVstateless(vstateless, parentContext, namespaceURI) {\n      var vnode = renderVstateless(vstateless, parentContext);\n      var node = initVnode(vnode, parentContext, namespaceURI);\n      node.cache = node.cache || {};\n      node.cache[vstateless.id] = vnode;\n      return node;\n  }\n  function updateVstateless(vstateless, newVstateless, node, parentContext) {\n      var id = vstateless.id;\n      var vnode = node.cache[id];\n      delete node.cache[id];\n      var newVnode = renderVstateless(newVstateless, parentContext);\n      var newNode = compareTwoVnodes(vnode, newVnode, node, parentContext);\n      newNode.cache = newNode.cache || {};\n      newNode.cache[newVstateless.id] = newVnode;\n      if (newNode !== node) {\n          extend(newNode.cache, node.cache);\n      }\n      return newNode;\n  }\n  function destroyVstateless(vstateless, node) {\n      var id = vstateless.id;\n      var vnode = node.cache[id];\n      delete node.cache[id];\n      destroyVnode(vnode, node);\n  }\n\n  function renderVstateless(vstateless, parentContext) {\n      var factory = vstateless.type;\n      var props = vstateless.props;\n\n      var componentContext = getContextByTypes(parentContext, factory.contextTypes);\n      var vnode = factory(props, componentContext);\n      if (vnode && vnode.render) {\n          vnode = vnode.render();\n      }\n      if (vnode === null || vnode === false) {\n          vnode = createVcomment('react-empty: ' + getUid());\n      } else if (!vnode || !vnode.vtype) {\n          throw new Error('@' + factory.name + '#render:You may have returned undefined, an array or some other invalid object');\n      }\n      return vnode;\n  }\n\n  function initVcomponent(vcomponent, parentContext, namespaceURI) {\n      var Component = vcomponent.type;\n      var props = vcomponent.props;\n      var id = vcomponent.id;\n\n      var componentContext = getContextByTypes(parentContext, Component.contextTypes);\n      var component = new Component(props, componentContext);\n      var updater = component.$updater;\n      var cache = component.$cache;\n\n      cache.parentContext = parentContext;\n      updater.isPending = true;\n      component.props = component.props || props;\n      component.context = component.context || componentContext;\n      if (component.componentWillMount) {\n          component.componentWillMount();\n          component.state = updater.getState();\n      }\n      var vnode = renderComponent(component, parentContext);\n      var node = initVnode(vnode, vnode.context, namespaceURI);\n      node.cache = node.cache || {};\n      node.cache[id] = component;\n      cache.vnode = vnode;\n      cache.node = node;\n      cache.isMounted = true;\n      pendingComponents.push(component);\n      attachRef(vcomponent.refs, vcomponent.ref, component);\n      return node;\n  }\n  function updateVcomponent(vcomponent, newVcomponent, node, parentContext) {\n      var id = vcomponent.id;\n      var component = node.cache[id];\n      var updater = component.$updater;\n      var cache = component.$cache;\n      var Component = newVcomponent.type;\n      var nextProps = newVcomponent.props;\n\n      var componentContext = getContextByTypes(parentContext, Component.contextTypes);\n      delete node.cache[id];\n      node.cache[newVcomponent.id] = component;\n      cache.parentContext = parentContext;\n      if (component.componentWillReceiveProps) {\n          updater.isPending = true;\n          component.componentWillReceiveProps(nextProps, componentContext);\n          updater.isPending = false;\n      }\n      updater.emitUpdate(nextProps, componentContext);\n\n      if (vcomponent.ref !== newVcomponent.ref) {\n          detachRef(vcomponent.refs, vcomponent.ref);\n          attachRef(newVcomponent.refs, newVcomponent.ref, component);\n      }\n      return cache.node;\n  }\n  function destroyVcomponent(vcomponent, node) {\n      var id = vcomponent.id;\n      var component = node.cache[id];\n      var cache = component.$cache;\n      delete node.cache[id];\n      detachRef(vcomponent.refs, vcomponent.ref);\n      component.setState = component.forceUpdate = noop;\n      if (component.componentWillUnmount) {\n          component.componentWillUnmount();\n      }\n      destroyVnode(cache.vnode, node);\n      delete component.setState;\n      cache.isMounted = false;\n      cache.node = cache.parentContext = cache.vnode = component.refs = component.context = null;\n  }\n\n  function getContextByTypes(curContext, contextTypes) {\n      var context = {};\n      if (!contextTypes || !curContext) {\n          return context;\n      }\n      for (var key in contextTypes) {\n          if (contextTypes.hasOwnProperty(key)) {\n              context[key] = curContext[key];\n          }\n      }\n      return context;\n  }\n\n  function renderComponent(component, parentContext) {\n      refs = component.refs;\n      var vnode = component.render();\n\n      if (vnode === null || vnode === false) {\n          vnode = createVcomment('react-empty: ' + getUid());\n      } else if (!vnode || !vnode.vtype) {\n          throw new Error('@' + component.constructor.name + '#render:You may have returned undefined, an array or some other invalid object');\n      }\n\n      var curContext = refs = null;\n      if (component.getChildContext) {\n          curContext = component.getChildContext();\n      }\n      if (curContext) {\n          curContext = extend(extend({}, parentContext), curContext);\n      } else {\n          curContext = parentContext;\n      }\n      vnode.context = curContext;\n      return vnode;\n  }\n\n  var pendingComponents = [];\n\n  function clearPendingComponents() {\n      var components = pendingComponents;\n      var len = components.length;\n      if (!len) {\n          return;\n      }\n      pendingComponents = [];\n      var i = -1;\n      while (len--) {\n          var component = components[++i];\n          var updater = component.$updater;\n          if (component.componentDidMount) {\n              component.componentDidMount();\n          }\n          updater.isPending = false;\n          updater.emitUpdate();\n      }\n  }\n\n  function compareTwoVnodes(vnode, newVnode, node, parentContext) {\n      var newNode = node;\n\n      if (newVnode == null) {\n          // remove\n          destroyVnode(vnode, node);\n          node.parentNode.removeChild(node);\n      } else if (vnode.type !== newVnode.type || newVnode.key !== vnode.key) {\n          // replace\n          destroyVnode(vnode, node);\n          newNode = initVnode(newVnode, parentContext, node.namespaceURI);\n          node.parentNode.replaceChild(newNode, node);\n      } else if (vnode !== newVnode) {\n          // same type and same key -> update\n          var vtype = vnode.vtype;\n          if (vtype === VELEMENT) {\n              newNode = updateVelem(vnode, newVnode, node, parentContext);\n          } else if (vtype === VCOMPONENT) {\n              newNode = updateVcomponent(vnode, newVnode, node, parentContext);\n          } else if (vtype === VSTATELESS) {\n              newNode = updateVstateless(vnode, newVnode, node, parentContext);\n          }\n      }\n\n      return newNode;\n  }\n\n  function getDOMNode() {\n      return this;\n  }\n\n  function attachRef(refs, refKey, refValue) {\n      if (!refs || refKey == null || !refValue) {\n          return;\n      }\n      if (refValue.nodeName && !refValue.getDOMNode) {\n          // support react v0.13 style: this.refs.myInput.getDOMNode()\n          refValue.getDOMNode = getDOMNode;\n      }\n      if (isFn(refKey)) {\n          refKey(refValue);\n      } else {\n          refs[refKey] = refValue;\n      }\n  }\n\n  function detachRef(refs, refKey) {\n      if (!refs || refKey == null) {\n          return;\n      }\n      if (isFn(refKey)) {\n          refKey(null);\n      } else {\n          delete refs[refKey];\n      }\n  }\n\n  var updateQueue = {\n  \tupdaters: [],\n  \tisPending: false,\n  \tadd: function add(updater) {\n  \t\tthis.updaters.push(updater);\n  \t},\n  \tbatchUpdate: function batchUpdate() {\n  \t\tif (this.isPending) {\n  \t\t\treturn;\n  \t\t}\n  \t\tthis.isPending = true;\n  \t\t/*\n     each updater.update may add new updater to updateQueue\n     clear them with a loop\n     event bubbles from bottom-level to top-level\n     reverse the updater order can merge some props and state and reduce the refresh times\n     see Updater.update method below to know why\n    */\n  \t\tvar updaters = this.updaters;\n\n  \t\tvar updater = undefined;\n  \t\twhile (updater = updaters.pop()) {\n  \t\t\tupdater.updateComponent();\n  \t\t}\n  \t\tthis.isPending = false;\n  \t}\n  };\n\n  function Updater(instance) {\n  \tthis.instance = instance;\n  \tthis.pendingStates = [];\n  \tthis.pendingCallbacks = [];\n  \tthis.isPending = false;\n  \tthis.nextProps = this.nextContext = null;\n  \tthis.clearCallbacks = this.clearCallbacks.bind(this);\n  }\n\n  Updater.prototype = {\n  \temitUpdate: function emitUpdate(nextProps, nextContext) {\n  \t\tthis.nextProps = nextProps;\n  \t\tthis.nextContext = nextContext;\n  \t\t// receive nextProps!! should update immediately\n  \t\tnextProps || !updateQueue.isPending ? this.updateComponent() : updateQueue.add(this);\n  \t},\n  \tupdateComponent: function updateComponent() {\n  \t\tvar instance = this.instance;\n  \t\tvar pendingStates = this.pendingStates;\n  \t\tvar nextProps = this.nextProps;\n  \t\tvar nextContext = this.nextContext;\n\n  \t\tif (nextProps || pendingStates.length > 0) {\n  \t\t\tnextProps = nextProps || instance.props;\n  \t\t\tnextContext = nextContext || instance.context;\n  \t\t\tthis.nextProps = this.nextContext = null;\n  \t\t\t// merge the nextProps and nextState and update by one time\n  \t\t\tshouldUpdate(instance, nextProps, this.getState(), nextContext, this.clearCallbacks);\n  \t\t}\n  \t},\n  \taddState: function addState(nextState) {\n  \t\tif (nextState) {\n  \t\t\tthis.pendingStates.push(nextState);\n  \t\t\tif (!this.isPending) {\n  \t\t\t\tthis.emitUpdate();\n  \t\t\t}\n  \t\t}\n  \t},\n  \treplaceState: function replaceState(nextState) {\n  \t\tvar pendingStates = this.pendingStates;\n\n  \t\tpendingStates.pop();\n  \t\t// push special params to point out should replace state\n  \t\tpendingStates.push([nextState]);\n  \t},\n  \tgetState: function getState() {\n  \t\tvar instance = this.instance;\n  \t\tvar pendingStates = this.pendingStates;\n  \t\tvar state = instance.state;\n  \t\tvar props = instance.props;\n\n  \t\tif (pendingStates.length) {\n  \t\t\tstate = extend({}, state);\n  \t\t\teachItem(pendingStates, function (nextState) {\n  \t\t\t\t// replace state\n  \t\t\t\tif (isArr(nextState)) {\n  \t\t\t\t\tstate = extend({}, nextState[0]);\n  \t\t\t\t\treturn;\n  \t\t\t\t}\n  \t\t\t\tif (isFn(nextState)) {\n  \t\t\t\t\tnextState = nextState.call(instance, state, props);\n  \t\t\t\t}\n  \t\t\t\textend(state, nextState);\n  \t\t\t});\n  \t\t\tpendingStates.length = 0;\n  \t\t}\n  \t\treturn state;\n  \t},\n  \tclearCallbacks: function clearCallbacks() {\n  \t\tvar pendingCallbacks = this.pendingCallbacks;\n  \t\tvar instance = this.instance;\n\n  \t\tif (pendingCallbacks.length > 0) {\n  \t\t\tthis.pendingCallbacks = [];\n  \t\t\teachItem(pendingCallbacks, function (callback) {\n  \t\t\t\treturn callback.call(instance);\n  \t\t\t});\n  \t\t}\n  \t},\n  \taddCallback: function addCallback(callback) {\n  \t\tif (isFn(callback)) {\n  \t\t\tthis.pendingCallbacks.push(callback);\n  \t\t}\n  \t}\n  };\n  function Component(props, context) {\n  \tthis.$updater = new Updater(this);\n  \tthis.$cache = { isMounted: false };\n  \tthis.props = props;\n  \tthis.state = {};\n  \tthis.refs = {};\n  \tthis.context = context;\n  }\n\n  Component.prototype = {\n  \tconstructor: Component,\n  \t// getChildContext: _.noop,\n  \t// componentWillUpdate: _.noop,\n  \t// componentDidUpdate: _.noop,\n  \t// componentWillReceiveProps: _.noop,\n  \t// componentWillMount: _.noop,\n  \t// componentDidMount: _.noop,\n  \t// componentWillUnmount: _.noop,\n  \t// shouldComponentUpdate(nextProps, nextState) {\n  \t// \treturn true\n  \t// },\n  \tforceUpdate: function forceUpdate(callback) {\n  \t\tvar $updater = this.$updater;\n  \t\tvar $cache = this.$cache;\n  \t\tvar props = this.props;\n  \t\tvar state = this.state;\n  \t\tvar context = this.context;\n\n  \t\tif ($updater.isPending || !$cache.isMounted) {\n  \t\t\treturn;\n  \t\t}\n  \t\tvar nextProps = $cache.props || props;\n  \t\tvar nextState = $cache.state || state;\n  \t\tvar nextContext = $cache.context || {};\n  \t\tvar parentContext = $cache.parentContext;\n  \t\tvar node = $cache.node;\n  \t\tvar vnode = $cache.vnode;\n  \t\t$cache.props = $cache.state = $cache.context = null;\n  \t\t$updater.isPending = true;\n  \t\tif (this.componentWillUpdate) {\n  \t\t\tthis.componentWillUpdate(nextProps, nextState, nextContext);\n  \t\t}\n  \t\tthis.state = nextState;\n  \t\tthis.props = nextProps;\n  \t\tthis.context = nextContext;\n  \t\tvar newVnode = renderComponent(this, parentContext);\n  \t\tvar newNode = compareTwoVnodes(vnode, newVnode, node, newVnode.context);\n  \t\tif (newNode !== node) {\n  \t\t\tnewNode.cache = newNode.cache || {};\n  \t\t\textend(newNode.cache, node.cache);\n  \t\t}\n  \t\t$cache.vnode = newVnode;\n  \t\t$cache.node = newNode;\n  \t\tclearPendingComponents();\n  \t\tif (this.componentDidUpdate) {\n  \t\t\tthis.componentDidUpdate(props, state, context);\n  \t\t}\n  \t\tif (callback) {\n  \t\t\tcallback.call(this);\n  \t\t}\n  \t\t$updater.isPending = false;\n  \t\t$updater.emitUpdate();\n  \t},\n  \tsetState: function setState(nextState, callback) {\n  \t\tvar $updater = this.$updater;\n\n  \t\t$updater.addCallback(callback);\n  \t\t$updater.addState(nextState);\n  \t},\n  \treplaceState: function replaceState(nextState, callback) {\n  \t\tvar $updater = this.$updater;\n\n  \t\t$updater.addCallback(callback);\n  \t\t$updater.replaceState(nextState);\n  \t},\n  \tgetDOMNode: function getDOMNode() {\n  \t\tvar node = this.$cache.node;\n  \t\treturn node && node.nodeName === '#comment' ? null : node;\n  \t},\n  \tisMounted: function isMounted() {\n  \t\treturn this.$cache.isMounted;\n  \t}\n  };\n\n  function shouldUpdate(component, nextProps, nextState, nextContext, callback) {\n  \tvar shouldComponentUpdate = true;\n  \tif (component.shouldComponentUpdate) {\n  \t\tshouldComponentUpdate = component.shouldComponentUpdate(nextProps, nextState, nextContext);\n  \t}\n  \tif (shouldComponentUpdate === false) {\n  \t\tcomponent.props = nextProps;\n  \t\tcomponent.state = nextState;\n  \t\tcomponent.context = nextContext || {};\n  \t\treturn;\n  \t}\n  \tvar cache = component.$cache;\n  \tcache.props = nextProps;\n  \tcache.state = nextState;\n  \tcache.context = nextContext || {};\n  \tcomponent.forceUpdate(callback);\n  }\n\n  // event config\n  var notBubbleEvents = {\n  \tonmouseleave: 1,\n  \tonmouseenter: 1,\n  \tonload: 1,\n  \tonunload: 1,\n  \tonscroll: 1,\n  \tonfocus: 1,\n  \tonblur: 1,\n  \tonrowexit: 1,\n  \tonbeforeunload: 1,\n  \tonstop: 1,\n  \tondragdrop: 1,\n  \tondragenter: 1,\n  \tondragexit: 1,\n  \tondraggesture: 1,\n  \tondragover: 1,\n  \toncontextmenu: 1\n  };\n\n  function getEventName(key) {\n  \tkey = key === 'onDoubleClick' ? 'ondblclick' : key;\n  \treturn key.toLowerCase();\n  }\n\n  var eventTypes = {};\n\n  function addEvent(elem, eventType, listener) {\n  \teventType = getEventName(eventType);\n\n  \tif (notBubbleEvents[eventType] === 1) {\n  \t\telem[eventType] = listener;\n  \t\treturn;\n  \t}\n\n  \tvar eventStore = elem.eventStore || (elem.eventStore = {});\n  \teventStore[eventType] = listener;\n\n  \tif (!eventTypes[eventType]) {\n  \t\t// onclick -> click\n  \t\tdocument.addEventListener(eventType.substr(2), dispatchEvent);\n  \t\teventTypes[eventType] = true;\n  \t}\n\n  \tvar nodeName = elem.nodeName;\n\n  \tif (eventType === 'onchange' && (nodeName === 'INPUT' || nodeName === 'TEXTAREA')) {\n  \t\taddEvent(elem, 'oninput', listener);\n  \t}\n  }\n\n  function removeEvent(elem, eventType) {\n  \teventType = getEventName(eventType);\n  \tif (notBubbleEvents[eventType] === 1) {\n  \t\telem[eventType] = null;\n  \t\treturn;\n  \t}\n\n  \tvar eventStore = elem.eventStore || (elem.eventStore = {});\n  \tdelete eventStore[eventType];\n\n  \tvar nodeName = elem.nodeName;\n\n  \tif (eventType === 'onchange' && (nodeName === 'INPUT' || nodeName === 'TEXTAREA')) {\n  \t\tdelete eventStore['oninput'];\n  \t}\n  }\n\n  function dispatchEvent(event) {\n  \tvar target = event.target;\n  \tvar type = event.type;\n\n  \tvar eventType = 'on' + type;\n  \tvar syntheticEvent = undefined;\n  \tupdateQueue.isPending = true;\n  \twhile (target) {\n  \t\tvar _target = target;\n  \t\tvar eventStore = _target.eventStore;\n\n  \t\tvar listener = eventStore && eventStore[eventType];\n  \t\tif (!listener) {\n  \t\t\ttarget = target.parentNode;\n  \t\t\tcontinue;\n  \t\t}\n  \t\tif (!syntheticEvent) {\n  \t\t\tsyntheticEvent = createSyntheticEvent(event);\n  \t\t}\n  \t\tsyntheticEvent.currentTarget = target;\n  \t\tlistener.call(target, syntheticEvent);\n  \t\tif (syntheticEvent.$cancalBubble) {\n  \t\t\tbreak;\n  \t\t}\n  \t\ttarget = target.parentNode;\n  \t}\n  \tupdateQueue.isPending = false;\n  \tupdateQueue.batchUpdate();\n  }\n\n  function createSyntheticEvent(nativeEvent) {\n  \tvar syntheticEvent = {};\n  \tvar cancalBubble = function cancalBubble() {\n  \t\treturn syntheticEvent.$cancalBubble = true;\n  \t};\n  \tsyntheticEvent.nativeEvent = nativeEvent;\n  \tfor (var key in nativeEvent) {\n  \t\tif (typeof nativeEvent[key] !== 'function') {\n  \t\t\tsyntheticEvent[key] = nativeEvent[key];\n  \t\t} else if (key === 'stopPropagation' || key === 'stopImmediatePropagation') {\n  \t\t\tsyntheticEvent[key] = cancalBubble;\n  \t\t} else {\n  \t\t\tsyntheticEvent[key] = nativeEvent[key].bind(nativeEvent);\n  \t\t}\n  \t}\n  \treturn syntheticEvent;\n  }\n\n  function setStyle(elemStyle, styles) {\n      for (var styleName in styles) {\n          if (styles.hasOwnProperty(styleName)) {\n              setStyleValue(elemStyle, styleName, styles[styleName]);\n          }\n      }\n  }\n\n  function removeStyle(elemStyle, styles) {\n      for (var styleName in styles) {\n          if (styles.hasOwnProperty(styleName)) {\n              elemStyle[styleName] = '';\n          }\n      }\n  }\n\n  function patchStyle(elemStyle, style, newStyle) {\n      if (style === newStyle) {\n          return;\n      }\n      if (!newStyle && style) {\n          removeStyle(elemStyle, style);\n          return;\n      } else if (newStyle && !style) {\n          setStyle(elemStyle, newStyle);\n          return;\n      }\n\n      var keyMap = {};\n      for (var key in style) {\n          if (style.hasOwnProperty(key)) {\n              keyMap[key] = true;\n              if (style[key] !== newStyle[key]) {\n                  setStyleValue(elemStyle, key, newStyle[key]);\n              }\n          }\n      }\n      for (var key in newStyle) {\n          if (newStyle.hasOwnProperty(key) && keyMap[key] !== true) {\n              if (style[key] !== newStyle[key]) {\n                  setStyleValue(elemStyle, key, newStyle[key]);\n              }\n          }\n      }\n  }\n\n  /**\n   * CSS properties which accept numbers but are not in units of \"px\".\n   */\n  var isUnitlessNumber = {\n      animationIterationCount: 1,\n      borderImageOutset: 1,\n      borderImageSlice: 1,\n      borderImageWidth: 1,\n      boxFlex: 1,\n      boxFlexGroup: 1,\n      boxOrdinalGroup: 1,\n      columnCount: 1,\n      flex: 1,\n      flexGrow: 1,\n      flexPositive: 1,\n      flexShrink: 1,\n      flexNegative: 1,\n      flexOrder: 1,\n      gridRow: 1,\n      gridColumn: 1,\n      fontWeight: 1,\n      lineClamp: 1,\n      lineHeight: 1,\n      opacity: 1,\n      order: 1,\n      orphans: 1,\n      tabSize: 1,\n      widows: 1,\n      zIndex: 1,\n      zoom: 1,\n\n      // SVG-related properties\n      fillOpacity: 1,\n      floodOpacity: 1,\n      stopOpacity: 1,\n      strokeDasharray: 1,\n      strokeDashoffset: 1,\n      strokeMiterlimit: 1,\n      strokeOpacity: 1,\n      strokeWidth: 1\n  };\n\n  function prefixKey(prefix, key) {\n      return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n  }\n\n  var prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n  Object.keys(isUnitlessNumber).forEach(function (prop) {\n      prefixes.forEach(function (prefix) {\n          isUnitlessNumber[prefixKey(prefix, prop)] = 1;\n      });\n  });\n\n  var RE_NUMBER = /^-?\\d+(\\.\\d+)?$/;\n  function setStyleValue(elemStyle, styleName, styleValue) {\n\n      if (!isUnitlessNumber[styleName] && RE_NUMBER.test(styleValue)) {\n          elemStyle[styleName] = styleValue + 'px';\n          return;\n      }\n\n      if (styleName === 'float') {\n          styleName = 'cssFloat';\n      }\n\n      if (styleValue == null || typeof styleValue === 'boolean') {\n          styleValue = '';\n      }\n\n      elemStyle[styleName] = styleValue;\n  }\n\n  var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n  var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\uB7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\n\n  var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\n  var isCustomAttribute = RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$'));\n  // will merge some data in properties below\n  var properties = {};\n\n  /**\n   * Mapping from normalized, camelcased property names to a configuration that\n   * specifies how the associated DOM property should be accessed or rendered.\n   */\n  var MUST_USE_PROPERTY = 0x1;\n  var HAS_BOOLEAN_VALUE = 0x4;\n  var HAS_NUMERIC_VALUE = 0x8;\n  var HAS_POSITIVE_NUMERIC_VALUE = 0x10 | 0x8;\n  var HAS_OVERLOADED_BOOLEAN_VALUE = 0x20;\n\n  // html config\n  var HTMLDOMPropertyConfig = {\n      props: {\n          /**\n           * Standard Properties\n           */\n          accept: 0,\n          acceptCharset: 0,\n          accessKey: 0,\n          action: 0,\n          allowFullScreen: HAS_BOOLEAN_VALUE,\n          allowTransparency: 0,\n          alt: 0,\n          async: HAS_BOOLEAN_VALUE,\n          autoComplete: 0,\n          autoFocus: HAS_BOOLEAN_VALUE,\n          autoPlay: HAS_BOOLEAN_VALUE,\n          capture: HAS_BOOLEAN_VALUE,\n          cellPadding: 0,\n          cellSpacing: 0,\n          charSet: 0,\n          challenge: 0,\n          checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n          cite: 0,\n          classID: 0,\n          className: 0,\n          cols: HAS_POSITIVE_NUMERIC_VALUE,\n          colSpan: 0,\n          content: 0,\n          contentEditable: 0,\n          contextMenu: 0,\n          controls: HAS_BOOLEAN_VALUE,\n          coords: 0,\n          crossOrigin: 0,\n          data: 0, // For `<object />` acts as `src`.\n          dateTime: 0,\n          'default': HAS_BOOLEAN_VALUE,\n          // not in regular react, they did it in other way\n          defaultValue: MUST_USE_PROPERTY,\n          // not in regular react, they did it in other way\n          defaultChecked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n          defer: HAS_BOOLEAN_VALUE,\n          dir: 0,\n          disabled: HAS_BOOLEAN_VALUE,\n          download: HAS_OVERLOADED_BOOLEAN_VALUE,\n          draggable: 0,\n          encType: 0,\n          form: 0,\n          formAction: 0,\n          formEncType: 0,\n          formMethod: 0,\n          formNoValidate: HAS_BOOLEAN_VALUE,\n          formTarget: 0,\n          frameBorder: 0,\n          headers: 0,\n          height: 0,\n          hidden: HAS_BOOLEAN_VALUE,\n          high: 0,\n          href: 0,\n          hrefLang: 0,\n          htmlFor: 0,\n          httpEquiv: 0,\n          icon: 0,\n          id: 0,\n          inputMode: 0,\n          integrity: 0,\n          is: 0,\n          keyParams: 0,\n          keyType: 0,\n          kind: 0,\n          label: 0,\n          lang: 0,\n          list: 0,\n          loop: HAS_BOOLEAN_VALUE,\n          low: 0,\n          manifest: 0,\n          marginHeight: 0,\n          marginWidth: 0,\n          max: 0,\n          maxLength: 0,\n          media: 0,\n          mediaGroup: 0,\n          method: 0,\n          min: 0,\n          minLength: 0,\n          // Caution; `option.selected` is not updated if `select.multiple` is\n          // disabled with `removeAttribute`.\n          multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n          muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n          name: 0,\n          nonce: 0,\n          noValidate: HAS_BOOLEAN_VALUE,\n          open: HAS_BOOLEAN_VALUE,\n          optimum: 0,\n          pattern: 0,\n          placeholder: 0,\n          poster: 0,\n          preload: 0,\n          profile: 0,\n          radioGroup: 0,\n          readOnly: HAS_BOOLEAN_VALUE,\n          rel: 0,\n          required: HAS_BOOLEAN_VALUE,\n          reversed: HAS_BOOLEAN_VALUE,\n          role: 0,\n          rows: HAS_POSITIVE_NUMERIC_VALUE,\n          rowSpan: HAS_NUMERIC_VALUE,\n          sandbox: 0,\n          scope: 0,\n          scoped: HAS_BOOLEAN_VALUE,\n          scrolling: 0,\n          seamless: HAS_BOOLEAN_VALUE,\n          selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n          shape: 0,\n          size: HAS_POSITIVE_NUMERIC_VALUE,\n          sizes: 0,\n          span: HAS_POSITIVE_NUMERIC_VALUE,\n          spellCheck: 0,\n          src: 0,\n          srcDoc: 0,\n          srcLang: 0,\n          srcSet: 0,\n          start: HAS_NUMERIC_VALUE,\n          step: 0,\n          style: 0,\n          summary: 0,\n          tabIndex: 0,\n          target: 0,\n          title: 0,\n          // Setting .type throws on non-<input> tags\n          type: 0,\n          useMap: 0,\n          value: MUST_USE_PROPERTY,\n          width: 0,\n          wmode: 0,\n          wrap: 0,\n\n          /**\n           * RDFa Properties\n           */\n          about: 0,\n          datatype: 0,\n          inlist: 0,\n          prefix: 0,\n          // property is also supported for OpenGraph in meta tags.\n          property: 0,\n          resource: 0,\n          'typeof': 0,\n          vocab: 0,\n\n          /**\n           * Non-standard Properties\n           */\n          // autoCapitalize and autoCorrect are supported in Mobile Safari for\n          // keyboard hints.\n          autoCapitalize: 0,\n          autoCorrect: 0,\n          // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n          autoSave: 0,\n          // color is for Safari mask-icon link\n          color: 0,\n          // itemProp, itemScope, itemType are for\n          // Microdata support. See http://schema.org/docs/gs.html\n          itemProp: 0,\n          itemScope: HAS_BOOLEAN_VALUE,\n          itemType: 0,\n          // itemID and itemRef are for Microdata support as well but\n          // only specified in the WHATWG spec document. See\n          // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n          itemID: 0,\n          itemRef: 0,\n          // results show looking glass icon and recent searches on input\n          // search fields in WebKit/Blink\n          results: 0,\n          // IE-only attribute that specifies security restrictions on an iframe\n          // as an alternative to the sandbox attribute on IE<10\n          security: 0,\n          // IE-only attribute that controls focus behavior\n          unselectable: 0\n      },\n      attrNS: {},\n      domAttrs: {\n          acceptCharset: 'accept-charset',\n          className: 'class',\n          htmlFor: 'for',\n          httpEquiv: 'http-equiv'\n      },\n      domProps: {}\n  };\n\n  // svg config\n  var xlink = 'http://www.w3.org/1999/xlink';\n  var xml = 'http://www.w3.org/XML/1998/namespace';\n\n  // We use attributes for everything SVG so let's avoid some duplication and run\n  // code instead.\n  // The following are all specified in the HTML config already so we exclude here.\n  // - class (as className)\n  // - color\n  // - height\n  // - id\n  // - lang\n  // - max\n  // - media\n  // - method\n  // - min\n  // - name\n  // - style\n  // - target\n  // - type\n  // - width\n  var ATTRS = {\n      accentHeight: 'accent-height',\n      accumulate: 0,\n      additive: 0,\n      alignmentBaseline: 'alignment-baseline',\n      allowReorder: 'allowReorder',\n      alphabetic: 0,\n      amplitude: 0,\n      arabicForm: 'arabic-form',\n      ascent: 0,\n      attributeName: 'attributeName',\n      attributeType: 'attributeType',\n      autoReverse: 'autoReverse',\n      azimuth: 0,\n      baseFrequency: 'baseFrequency',\n      baseProfile: 'baseProfile',\n      baselineShift: 'baseline-shift',\n      bbox: 0,\n      begin: 0,\n      bias: 0,\n      by: 0,\n      calcMode: 'calcMode',\n      capHeight: 'cap-height',\n      clip: 0,\n      clipPath: 'clip-path',\n      clipRule: 'clip-rule',\n      clipPathUnits: 'clipPathUnits',\n      colorInterpolation: 'color-interpolation',\n      colorInterpolationFilters: 'color-interpolation-filters',\n      colorProfile: 'color-profile',\n      colorRendering: 'color-rendering',\n      contentScriptType: 'contentScriptType',\n      contentStyleType: 'contentStyleType',\n      cursor: 0,\n      cx: 0,\n      cy: 0,\n      d: 0,\n      decelerate: 0,\n      descent: 0,\n      diffuseConstant: 'diffuseConstant',\n      direction: 0,\n      display: 0,\n      divisor: 0,\n      dominantBaseline: 'dominant-baseline',\n      dur: 0,\n      dx: 0,\n      dy: 0,\n      edgeMode: 'edgeMode',\n      elevation: 0,\n      enableBackground: 'enable-background',\n      end: 0,\n      exponent: 0,\n      externalResourcesRequired: 'externalResourcesRequired',\n      fill: 0,\n      fillOpacity: 'fill-opacity',\n      fillRule: 'fill-rule',\n      filter: 0,\n      filterRes: 'filterRes',\n      filterUnits: 'filterUnits',\n      floodColor: 'flood-color',\n      floodOpacity: 'flood-opacity',\n      focusable: 0,\n      fontFamily: 'font-family',\n      fontSize: 'font-size',\n      fontSizeAdjust: 'font-size-adjust',\n      fontStretch: 'font-stretch',\n      fontStyle: 'font-style',\n      fontVariant: 'font-variant',\n      fontWeight: 'font-weight',\n      format: 0,\n      from: 0,\n      fx: 0,\n      fy: 0,\n      g1: 0,\n      g2: 0,\n      glyphName: 'glyph-name',\n      glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n      glyphOrientationVertical: 'glyph-orientation-vertical',\n      glyphRef: 'glyphRef',\n      gradientTransform: 'gradientTransform',\n      gradientUnits: 'gradientUnits',\n      hanging: 0,\n      horizAdvX: 'horiz-adv-x',\n      horizOriginX: 'horiz-origin-x',\n      ideographic: 0,\n      imageRendering: 'image-rendering',\n      'in': 0,\n      in2: 0,\n      intercept: 0,\n      k: 0,\n      k1: 0,\n      k2: 0,\n      k3: 0,\n      k4: 0,\n      kernelMatrix: 'kernelMatrix',\n      kernelUnitLength: 'kernelUnitLength',\n      kerning: 0,\n      keyPoints: 'keyPoints',\n      keySplines: 'keySplines',\n      keyTimes: 'keyTimes',\n      lengthAdjust: 'lengthAdjust',\n      letterSpacing: 'letter-spacing',\n      lightingColor: 'lighting-color',\n      limitingConeAngle: 'limitingConeAngle',\n      local: 0,\n      markerEnd: 'marker-end',\n      markerMid: 'marker-mid',\n      markerStart: 'marker-start',\n      markerHeight: 'markerHeight',\n      markerUnits: 'markerUnits',\n      markerWidth: 'markerWidth',\n      mask: 0,\n      maskContentUnits: 'maskContentUnits',\n      maskUnits: 'maskUnits',\n      mathematical: 0,\n      mode: 0,\n      numOctaves: 'numOctaves',\n      offset: 0,\n      opacity: 0,\n      operator: 0,\n      order: 0,\n      orient: 0,\n      orientation: 0,\n      origin: 0,\n      overflow: 0,\n      overlinePosition: 'overline-position',\n      overlineThickness: 'overline-thickness',\n      paintOrder: 'paint-order',\n      panose1: 'panose-1',\n      pathLength: 'pathLength',\n      patternContentUnits: 'patternContentUnits',\n      patternTransform: 'patternTransform',\n      patternUnits: 'patternUnits',\n      pointerEvents: 'pointer-events',\n      points: 0,\n      pointsAtX: 'pointsAtX',\n      pointsAtY: 'pointsAtY',\n      pointsAtZ: 'pointsAtZ',\n      preserveAlpha: 'preserveAlpha',\n      preserveAspectRatio: 'preserveAspectRatio',\n      primitiveUnits: 'primitiveUnits',\n      r: 0,\n      radius: 0,\n      refX: 'refX',\n      refY: 'refY',\n      renderingIntent: 'rendering-intent',\n      repeatCount: 'repeatCount',\n      repeatDur: 'repeatDur',\n      requiredExtensions: 'requiredExtensions',\n      requiredFeatures: 'requiredFeatures',\n      restart: 0,\n      result: 0,\n      rotate: 0,\n      rx: 0,\n      ry: 0,\n      scale: 0,\n      seed: 0,\n      shapeRendering: 'shape-rendering',\n      slope: 0,\n      spacing: 0,\n      specularConstant: 'specularConstant',\n      specularExponent: 'specularExponent',\n      speed: 0,\n      spreadMethod: 'spreadMethod',\n      startOffset: 'startOffset',\n      stdDeviation: 'stdDeviation',\n      stemh: 0,\n      stemv: 0,\n      stitchTiles: 'stitchTiles',\n      stopColor: 'stop-color',\n      stopOpacity: 'stop-opacity',\n      strikethroughPosition: 'strikethrough-position',\n      strikethroughThickness: 'strikethrough-thickness',\n      string: 0,\n      stroke: 0,\n      strokeDasharray: 'stroke-dasharray',\n      strokeDashoffset: 'stroke-dashoffset',\n      strokeLinecap: 'stroke-linecap',\n      strokeLinejoin: 'stroke-linejoin',\n      strokeMiterlimit: 'stroke-miterlimit',\n      strokeOpacity: 'stroke-opacity',\n      strokeWidth: 'stroke-width',\n      surfaceScale: 'surfaceScale',\n      systemLanguage: 'systemLanguage',\n      tableValues: 'tableValues',\n      targetX: 'targetX',\n      targetY: 'targetY',\n      textAnchor: 'text-anchor',\n      textDecoration: 'text-decoration',\n      textRendering: 'text-rendering',\n      textLength: 'textLength',\n      to: 0,\n      transform: 0,\n      u1: 0,\n      u2: 0,\n      underlinePosition: 'underline-position',\n      underlineThickness: 'underline-thickness',\n      unicode: 0,\n      unicodeBidi: 'unicode-bidi',\n      unicodeRange: 'unicode-range',\n      unitsPerEm: 'units-per-em',\n      vAlphabetic: 'v-alphabetic',\n      vHanging: 'v-hanging',\n      vIdeographic: 'v-ideographic',\n      vMathematical: 'v-mathematical',\n      values: 0,\n      vectorEffect: 'vector-effect',\n      version: 0,\n      vertAdvY: 'vert-adv-y',\n      vertOriginX: 'vert-origin-x',\n      vertOriginY: 'vert-origin-y',\n      viewBox: 'viewBox',\n      viewTarget: 'viewTarget',\n      visibility: 0,\n      widths: 0,\n      wordSpacing: 'word-spacing',\n      writingMode: 'writing-mode',\n      x: 0,\n      xHeight: 'x-height',\n      x1: 0,\n      x2: 0,\n      xChannelSelector: 'xChannelSelector',\n      xlinkActuate: 'xlink:actuate',\n      xlinkArcrole: 'xlink:arcrole',\n      xlinkHref: 'xlink:href',\n      xlinkRole: 'xlink:role',\n      xlinkShow: 'xlink:show',\n      xlinkTitle: 'xlink:title',\n      xlinkType: 'xlink:type',\n      xmlBase: 'xml:base',\n      xmlLang: 'xml:lang',\n      xmlSpace: 'xml:space',\n      y: 0,\n      y1: 0,\n      y2: 0,\n      yChannelSelector: 'yChannelSelector',\n      z: 0,\n      zoomAndPan: 'zoomAndPan'\n  };\n\n  var SVGDOMPropertyConfig = {\n      props: {},\n      attrNS: {\n          xlinkActuate: xlink,\n          xlinkArcrole: xlink,\n          xlinkHref: xlink,\n          xlinkRole: xlink,\n          xlinkShow: xlink,\n          xlinkTitle: xlink,\n          xlinkType: xlink,\n          xmlBase: xml,\n          xmlLang: xml,\n          xmlSpace: xml\n      },\n      domAttrs: {},\n      domProps: {}\n  };\n\n  Object.keys(ATTRS).map(function (key) {\n      SVGDOMPropertyConfig.props[key] = 0;\n      if (ATTRS[key]) {\n          SVGDOMPropertyConfig.domAttrs[key] = ATTRS[key];\n      }\n  });\n\n  // merge html and svg config into properties\n  mergeConfigToProperties(HTMLDOMPropertyConfig);\n  mergeConfigToProperties(SVGDOMPropertyConfig);\n\n  function mergeConfigToProperties(config) {\n      var\n      // all react/react-lite supporting property names in here\n      props = config.props;\n      var\n      // attributes namespace in here\n      attrNS = config.attrNS;\n      var\n      // propName in props which should use to be dom-attribute in here\n      domAttrs = config.domAttrs;\n      var\n      // propName in props which should use to be dom-property in here\n      domProps = config.domProps;\n\n      for (var propName in props) {\n          if (!props.hasOwnProperty(propName)) {\n              continue;\n          }\n          var propConfig = props[propName];\n          properties[propName] = {\n              attributeName: domAttrs.hasOwnProperty(propName) ? domAttrs[propName] : propName.toLowerCase(),\n              propertyName: domProps.hasOwnProperty(propName) ? domProps[propName] : propName,\n              attributeNamespace: attrNS.hasOwnProperty(propName) ? attrNS[propName] : null,\n              mustUseProperty: checkMask(propConfig, MUST_USE_PROPERTY),\n              hasBooleanValue: checkMask(propConfig, HAS_BOOLEAN_VALUE),\n              hasNumericValue: checkMask(propConfig, HAS_NUMERIC_VALUE),\n              hasPositiveNumericValue: checkMask(propConfig, HAS_POSITIVE_NUMERIC_VALUE),\n              hasOverloadedBooleanValue: checkMask(propConfig, HAS_OVERLOADED_BOOLEAN_VALUE)\n          };\n      }\n  }\n\n  function checkMask(value, bitmask) {\n      return (value & bitmask) === bitmask;\n  }\n\n  /**\n   * Sets the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   * @param {*} value\n   */\n\n  function setPropValue(node, name, value) {\n      var propInfo = properties.hasOwnProperty(name) && properties[name];\n      if (propInfo) {\n          // should delete value from dom\n          if (value == null || propInfo.hasBooleanValue && !value || propInfo.hasNumericValue && isNaN(value) || propInfo.hasPositiveNumericValue && value < 1 || propInfo.hasOverloadedBooleanValue && value === false) {\n              removePropValue(node, name);\n          } else if (propInfo.mustUseProperty) {\n              node[propInfo.propertyName] = value;\n          } else {\n              var attributeName = propInfo.attributeName;\n              var namespace = propInfo.attributeNamespace;\n\n              // `setAttribute` with objects becomes only `[object]` in IE8/9,\n              // ('' + value) makes it output the correct toString()-value.\n              if (namespace) {\n                  node.setAttributeNS(namespace, attributeName, '' + value);\n              } else if (propInfo.hasBooleanValue || propInfo.hasOverloadedBooleanValue && value === true) {\n                  node.setAttribute(attributeName, '');\n              } else {\n                  node.setAttribute(attributeName, '' + value);\n              }\n          }\n      } else if (isCustomAttribute(name) && VALID_ATTRIBUTE_NAME_REGEX.test(name)) {\n          if (value == null) {\n              node.removeAttribute(name);\n          } else {\n              node.setAttribute(name, '' + value);\n          }\n      }\n  }\n\n  /**\n   * Deletes the value for a property on a node.\n   *\n   * @param {DOMElement} node\n   * @param {string} name\n   */\n\n  function removePropValue(node, name) {\n      var propInfo = properties.hasOwnProperty(name) && properties[name];\n      if (propInfo) {\n          if (propInfo.mustUseProperty) {\n              node[propInfo.propertyName] = propInfo.hasBooleanValue ? false : '';\n          } else {\n              node.removeAttribute(propInfo.attributeName);\n          }\n      } else if (isCustomAttribute(name)) {\n          node.removeAttribute(name);\n      }\n  }\n\n  function isFn(obj) {\n      return typeof obj === 'function';\n  }\n\n  var isArr = Array.isArray;\n\n  function noop() {}\n\n  function identity(obj) {\n      return obj;\n  }\n\n  function pipe(fn1, fn2) {\n      return function () {\n          fn1.apply(this, arguments);\n          return fn2.apply(this, arguments);\n      };\n  }\n\n  function flattenChildren(list, iteratee, a) {\n      var len = list.length;\n      var i = -1;\n\n      while (len--) {\n          var item = list[++i];\n          if (isArr(item)) {\n              flattenChildren(item, iteratee, a);\n          } else {\n              iteratee(item, a);\n          }\n      }\n  }\n\n  function eachItem(list, iteratee) {\n      for (var i = 0, len = list.length; i < len; i++) {\n          iteratee(list[i], i);\n      }\n  }\n\n  function extend(to) /* sources */{\n      var nextSource, nextIndex;\n      for (nextIndex = 1; nextIndex < arguments.length; nextIndex++) {\n          nextSource = arguments[nextIndex];\n          if (nextSource == null) {\n              continue;\n          }\n      }\n      var from = Object(nextSource);\n      if (!from) {\n          return to;\n      }\n      var keys = Object.keys(from);\n      var i = keys.length;\n      while (i--) {\n          if (from[keys[i]] !== undefined) {\n              to[keys[i]] = from[keys[i]];\n          }\n      }\n      return to;\n  }\n\n  var uid = 0;\n\n  function getUid() {\n      return ++uid;\n  }\n\n  var EVENT_KEYS = /^on/i;\n  function setProps(elem, props, isCustomComponent) {\n      for (var key in props) {\n          if (!props.hasOwnProperty(key) || key === 'children') {\n              continue;\n          }\n          var value = props[key];\n          if (EVENT_KEYS.test(key)) {\n              addEvent(elem, key, value);\n          } else if (key === 'style') {\n              setStyle(elem.style, value);\n          } else if (key === 'dangerouslySetInnerHTML') {\n              value && value.__html != null && (elem.innerHTML = value.__html);\n          } else if (isCustomComponent) {\n              if (value == null) {\n                  elem.removeAttribute(key);\n              } else {\n                  elem.setAttribute(key, '' + value);\n              }\n          } else {\n              setPropValue(elem, key, value);\n          }\n      }\n  }\n\n  function patchProp(key, oldValue, value, elem, isCustomComponent) {\n      if (key === 'value' || key === 'checked') {\n          oldValue = elem[key];\n      }\n      if (value === oldValue) {\n          return;\n      }\n      if (value === undefined) {\n          if (EVENT_KEYS.test(key)) {\n              removeEvent(elem, key);\n          } else if (key === 'style') {\n              removeStyle(elem.style, oldValue);\n          } else if (key === 'dangerouslySetInnerHTML') {\n              elem.innerHTML = '';\n          } else if (isCustomComponent) {\n              elem.removeAttribute(key);\n          } else {\n              removePropValue(elem, key);\n          }\n          return;\n      }\n      if (EVENT_KEYS.test(key)) {\n          // addEvent will replace the oldValue\n          addEvent(elem, key, value);\n      } else if (key === 'style') {\n          patchStyle(elem.style, oldValue, value);\n      } else if (key === 'dangerouslySetInnerHTML') {\n          var oldHtml = oldValue && oldValue.__html;\n          var html = value && value.__html;\n          if (html != null && html !== oldHtml) {\n              elem.innerHTML = html;\n          }\n      } else if (isCustomComponent) {\n          if (value == null) {\n              elem.removeAttribute(key);\n          } else {\n              elem.setAttribute(key, '' + value);\n          }\n      } else {\n          setPropValue(elem, key, value);\n      }\n  }\n\n  function patchProps(elem, props, newProps, isCustomComponent) {\n      var keyMap = { children: true };\n      for (var key in props) {\n          if (props.hasOwnProperty(key) && key !== 'children') {\n              keyMap[key] = true;\n              patchProp(key, props[key], newProps[key], elem, isCustomComponent);\n          }\n      }\n      for (var key in newProps) {\n          if (newProps.hasOwnProperty(key) && keyMap[key] !== true) {\n              patchProp(key, props[key], newProps[key], elem, isCustomComponent);\n          }\n      }\n  }\n\n  if (!Object.freeze) {\n      Object.freeze = identity;\n  }\n\n  var pendingRendering = {};\n  var vnodeStore = {};\n  function renderTreeIntoContainer(vnode, container, callback, parentContext) {\n  \tif (!vnode.vtype) {\n  \t\tthrow new Error('cannot render ' + vnode + ' to container');\n  \t}\n  \tvar id = container[COMPONENT_ID] || (container[COMPONENT_ID] = getUid());\n  \tvar argsCache = pendingRendering[id];\n\n  \t// component lify cycle method maybe call root rendering\n  \t// should bundle them and render by only one time\n  \tif (argsCache) {\n  \t\tif (argsCache === true) {\n  \t\t\tpendingRendering[id] = argsCache = [vnode, callback, parentContext];\n  \t\t} else {\n  \t\t\targsCache[0] = vnode;\n  \t\t\targsCache[2] = parentContext;\n  \t\t\tif (callback) {\n  \t\t\t\targsCache[1] = argsCache[1] ? pipe(argsCache[1], callback) : callback;\n  \t\t\t}\n  \t\t}\n  \t\treturn;\n  \t}\n\n  \tpendingRendering[id] = true;\n  \tvar oldVnode = null;\n  \tvar rootNode = null;\n  \tif (oldVnode = vnodeStore[id]) {\n  \t\trootNode = compareTwoVnodes(oldVnode, vnode, container.firstChild, parentContext);\n  \t} else {\n  \t\trootNode = initVnode(vnode, parentContext, container.namespaceURI);\n  \t\tvar childNode = null;\n  \t\twhile (childNode = container.lastChild) {\n  \t\t\tcontainer.removeChild(childNode);\n  \t\t}\n  \t\tcontainer.appendChild(rootNode);\n  \t}\n  \tvnodeStore[id] = vnode;\n  \tvar isPending = updateQueue.isPending;\n  \tupdateQueue.isPending = true;\n  \tclearPendingComponents();\n  \targsCache = pendingRendering[id];\n  \tdelete pendingRendering[id];\n\n  \tvar result = null;\n  \tif (isArr(argsCache)) {\n  \t\tresult = renderTreeIntoContainer(argsCache[0], container, argsCache[1], argsCache[2]);\n  \t} else if (vnode.vtype === VELEMENT) {\n  \t\tresult = rootNode;\n  \t} else if (vnode.vtype === VCOMPONENT) {\n  \t\tresult = rootNode.cache[vnode.id];\n  \t}\n\n  \tif (!isPending) {\n  \t\tupdateQueue.isPending = false;\n  \t\tupdateQueue.batchUpdate();\n  \t}\n\n  \tif (callback) {\n  \t\tcallback.call(result);\n  \t}\n\n  \treturn result;\n  }\n\n  function render(vnode, container, callback) {\n  \treturn renderTreeIntoContainer(vnode, container, callback);\n  }\n\n  function unstable_renderSubtreeIntoContainer(parentComponent, subVnode, container, callback) {\n  \tvar context = parentComponent.vnode ? parentComponent.vnode.context : parentComponent.$cache.parentContext;\n  \treturn renderTreeIntoContainer(subVnode, container, callback, context);\n  }\n\n  function unmountComponentAtNode(container) {\n  \tif (!container.nodeName) {\n  \t\tthrow new Error('expect node');\n  \t}\n  \tvar id = container[COMPONENT_ID];\n  \tvar vnode = null;\n  \tif (vnode = vnodeStore[id]) {\n  \t\tdestroyVnode(vnode, container.firstChild);\n  \t\tcontainer.removeChild(container.firstChild);\n  \t\tdelete vnodeStore[id];\n  \t\treturn true;\n  \t}\n  \treturn false;\n  }\n\n  function findDOMNode(node) {\n  \tif (node == null) {\n  \t\treturn null;\n  \t}\n  \tif (node.nodeName) {\n  \t\treturn node;\n  \t}\n  \tvar component = node;\n  \t// if component.node equal to false, component must be unmounted\n  \tif (component.getDOMNode && component.$cache.isMounted) {\n  \t\treturn component.getDOMNode();\n  \t}\n  \tthrow new Error('findDOMNode can not find Node');\n  }\n\n  var ReactDOM = Object.freeze({\n  \trender: render,\n  \tunstable_renderSubtreeIntoContainer: unstable_renderSubtreeIntoContainer,\n  \tunmountComponentAtNode: unmountComponentAtNode,\n  \tfindDOMNode: findDOMNode\n  });\n\n  function isValidElement(obj) {\n  \treturn obj != null && !!obj.vtype;\n  }\n\n  function cloneElement(originElem, props) {\n  \tvar type = originElem.type;\n  \tvar key = originElem.key;\n  \tvar ref = originElem.ref;\n\n  \tvar newProps = extend(extend({ key: key, ref: ref }, originElem.props), props);\n\n  \tfor (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n  \t\tchildren[_key - 2] = arguments[_key];\n  \t}\n\n  \tvar vnode = createElement.apply(undefined, [type, newProps].concat(children));\n  \tif (vnode.ref === originElem.ref) {\n  \t\tvnode.refs = originElem.refs;\n  \t}\n  \treturn vnode;\n  }\n\n  function createFactory(type) {\n  \tvar factory = function factory() {\n  \t\tfor (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n  \t\t\targs[_key2] = arguments[_key2];\n  \t\t}\n\n  \t\treturn createElement.apply(undefined, [type].concat(args));\n  \t};\n  \tfactory.type = type;\n  \treturn factory;\n  }\n\n  function createElement(type, props, children) {\n  \tvar createVnode = null;\n  \tvar varType = typeof type;\n\n  \tif (varType === 'string') {\n  \t\tcreateVnode = createVelem;\n  \t} else if (varType === 'function') {\n  \t\tif (type.prototype && typeof type.prototype.forceUpdate === 'function') {\n  \t\t\tcreateVnode = createVcomponent;\n  \t\t} else {\n  \t\t\tcreateVnode = createVstateless;\n  \t\t}\n  \t} else {\n  \t\tthrow new Error('React.createElement: unexpect type [ ' + type + ' ]');\n  \t}\n\n  \tvar key = null;\n  \tvar ref = null;\n  \tvar finalProps = {};\n  \tvar propValue = null;\n  \tif (props != null) {\n  \t\tfor (var propKey in props) {\n  \t\t\tif (!props.hasOwnProperty(propKey)) {\n  \t\t\t\tcontinue;\n  \t\t\t}\n  \t\t\tif (propKey === 'key') {\n  \t\t\t\tif (props.key !== undefined) {\n  \t\t\t\t\tkey = '' + props.key;\n  \t\t\t\t}\n  \t\t\t} else if (propKey === 'ref') {\n  \t\t\t\tif (props.ref !== undefined) {\n  \t\t\t\t\tref = props.ref;\n  \t\t\t\t}\n  \t\t\t} else if ((propValue = props[propKey]) !== undefined) {\n  \t\t\t\tfinalProps[propKey] = propValue;\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \tvar defaultProps = type.defaultProps;\n\n  \tif (defaultProps) {\n  \t\tfor (var propKey in defaultProps) {\n  \t\t\tif (finalProps[propKey] === undefined) {\n  \t\t\t\tfinalProps[propKey] = defaultProps[propKey];\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \tvar argsLen = arguments.length;\n  \tvar finalChildren = children;\n\n  \tif (argsLen > 3) {\n  \t\tfinalChildren = Array(argsLen - 2);\n  \t\tfor (var i = 2; i < argsLen; i++) {\n  \t\t\tfinalChildren[i - 2] = arguments[i];\n  \t\t}\n  \t}\n\n  \tif (finalChildren !== undefined) {\n  \t\tfinalProps.children = finalChildren;\n  \t}\n\n  \tvar vnode = createVnode(type, finalProps);\n  \tvnode.key = key;\n  \tvnode.ref = ref;\n  \treturn vnode;\n  }\n\n  var tagNames = 'a|abbr|address|area|article|aside|audio|b|base|bdi|bdo|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|data|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|main|map|mark|menu|menuitem|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|source|span|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|track|u|ul|var|video|wbr|circle|clipPath|defs|ellipse|g|image|line|linearGradient|mask|path|pattern|polygon|polyline|radialGradient|rect|stop|svg|text|tspan';\n  var DOM = {};\n  eachItem(tagNames.split('|'), function (tagName) {\n  \tDOM[tagName] = createFactory(tagName);\n  });\n\n  var check = function check() {\n      return check;\n  };\n  check.isRequired = check;\n  var PropTypes = {\n      \"array\": check,\n      \"bool\": check,\n      \"func\": check,\n      \"number\": check,\n      \"object\": check,\n      \"string\": check,\n      \"any\": check,\n      \"arrayOf\": check,\n      \"element\": check,\n      \"instanceOf\": check,\n      \"node\": check,\n      \"objectOf\": check,\n      \"oneOf\": check,\n      \"oneOfType\": check,\n      \"shape\": check\n  };\n\n  function only(children) {\n  \tif (isValidElement(children)) {\n  \t\treturn children;\n  \t}\n  \tthrow new Error('expect only one child');\n  }\n\n  function forEach(children, iteratee, context) {\n  \tif (children == null) {\n  \t\treturn children;\n  \t}\n  \tvar index = 0;\n  \tif (isArr(children)) {\n  \t\tflattenChildren(children, function (child) {\n  \t\t\titeratee.call(context, child, index++);\n  \t\t});\n  \t} else {\n  \t\titeratee.call(context, children, index);\n  \t}\n  }\n\n  function map(children, iteratee, context) {\n  \tif (children == null) {\n  \t\treturn children;\n  \t}\n  \tvar store = [];\n  \tvar keyMap = {};\n  \tforEach(children, function (child, index) {\n  \t\tvar data = {};\n  \t\tdata.child = iteratee.call(context, child, index) || child;\n  \t\tdata.isEqual = data.child === child;\n  \t\tvar key = data.key = getKey(child, index);\n  \t\tif (keyMap.hasOwnProperty(key)) {\n  \t\t\tkeyMap[key] += 1;\n  \t\t} else {\n  \t\t\tkeyMap[key] = 0;\n  \t\t}\n  \t\tdata.index = keyMap[key];\n  \t\tstore.push(data);\n  \t});\n  \tvar result = [];\n  \teachItem(store, function (_ref) {\n  \t\tvar child = _ref.child;\n  \t\tvar key = _ref.key;\n  \t\tvar index = _ref.index;\n  \t\tvar isEqual = _ref.isEqual;\n\n  \t\tif (child == null || typeof child === 'boolean') {\n  \t\t\treturn;\n  \t\t}\n  \t\tif (!isValidElement(child) || key == null) {\n  \t\t\tresult.push(child);\n  \t\t\treturn;\n  \t\t}\n  \t\tif (keyMap[key] !== 0) {\n  \t\t\tkey += ':' + index;\n  \t\t}\n  \t\tif (!isEqual) {\n  \t\t\tkey = escapeUserProvidedKey(child.key || '') + '/' + key;\n  \t\t}\n  \t\tchild = cloneElement(child, { key: key });\n  \t\tresult.push(child);\n  \t});\n  \treturn result;\n  }\n\n  function count(children) {\n  \tvar count = 0;\n  \tforEach(children, function () {\n  \t\tcount++;\n  \t});\n  \treturn count;\n  }\n\n  function toArray(children) {\n  \treturn map(children, identity) || [];\n  }\n\n  function getKey(child, index) {\n  \tvar key = undefined;\n  \tif (isValidElement(child) && typeof child.key === 'string') {\n  \t\tkey = '.$' + child.key;\n  \t} else {\n  \t\tkey = '.' + index.toString(36);\n  \t}\n  \treturn key;\n  }\n\n  var userProvidedKeyEscapeRegex = /\\/(?!\\/)/g;\n  function escapeUserProvidedKey(text) {\n  \treturn ('' + text).replace(userProvidedKeyEscapeRegex, '//');\n  }\n\n  var Children = Object.freeze({\n  \tonly: only,\n  \tforEach: forEach,\n  \tmap: map,\n  \tcount: count,\n  \ttoArray: toArray\n  });\n\n  function eachMixin(mixins, iteratee) {\n  \teachItem(mixins, function (mixin) {\n  \t\tif (mixin) {\n  \t\t\tif (isArr(mixin.mixins)) {\n  \t\t\t\teachMixin(mixin.mixins, iteratee);\n  \t\t\t}\n  \t\t\titeratee(mixin);\n  \t\t}\n  \t});\n  }\n\n  function combineMixinToProto(proto, mixin) {\n  \tfor (var key in mixin) {\n  \t\tif (!mixin.hasOwnProperty(key)) {\n  \t\t\tcontinue;\n  \t\t}\n  \t\tvar value = mixin[key];\n  \t\tif (key === 'getInitialState') {\n  \t\t\tproto.$getInitialStates.push(value);\n  \t\t\tcontinue;\n  \t\t}\n  \t\tvar curValue = proto[key];\n  \t\tif (isFn(curValue) && isFn(value)) {\n  \t\t\tproto[key] = pipe(curValue, value);\n  \t\t} else {\n  \t\t\tproto[key] = value;\n  \t\t}\n  \t}\n  }\n\n  function combineMixinToClass(Component, mixin) {\n  \textend(Component.propTypes, mixin.propTypes);\n  \textend(Component.contextTypes, mixin.contextTypes);\n  \textend(Component, mixin.statics);\n  \tif (isFn(mixin.getDefaultProps)) {\n  \t\textend(Component.defaultProps, mixin.getDefaultProps());\n  \t}\n  }\n\n  function bindContext(obj, source) {\n  \tfor (var key in source) {\n  \t\tif (source.hasOwnProperty(key)) {\n  \t\t\tif (isFn(source[key])) {\n  \t\t\t\tobj[key] = source[key].bind(obj);\n  \t\t\t}\n  \t\t}\n  \t}\n  }\n\n  var Facade = function Facade() {};\n  Facade.prototype = Component.prototype;\n\n  function getInitialState() {\n  \tvar _this = this;\n\n  \tvar state = {};\n  \tvar setState = this.setState;\n  \tthis.setState = Facade;\n  \teachItem(this.$getInitialStates, function (getInitialState) {\n  \t\tif (isFn(getInitialState)) {\n  \t\t\textend(state, getInitialState.call(_this));\n  \t\t}\n  \t});\n  \tthis.setState = setState;\n  \treturn state;\n  }\n  function createClass(spec) {\n  \tif (!isFn(spec.render)) {\n  \t\tthrow new Error('createClass: spec.render is not function');\n  \t}\n  \tvar specMixins = spec.mixins || [];\n  \tvar mixins = specMixins.concat(spec);\n  \tspec.mixins = null;\n  \tfunction Klass(props, context) {\n  \t\tComponent.call(this, props, context);\n  \t\tthis.constructor = Klass;\n  \t\tspec.autobind !== false && bindContext(this, Klass.prototype);\n  \t\tthis.state = this.getInitialState() || this.state;\n  \t}\n  \tKlass.displayName = spec.displayName;\n  \tKlass.contextTypes = {};\n  \tKlass.propTypes = {};\n  \tKlass.defaultProps = {};\n  \tvar proto = Klass.prototype = new Facade();\n  \tproto.$getInitialStates = [];\n  \teachMixin(mixins, function (mixin) {\n  \t\tcombineMixinToProto(proto, mixin);\n  \t\tcombineMixinToClass(Klass, mixin);\n  \t});\n  \tproto.getInitialState = getInitialState;\n  \tspec.mixins = specMixins;\n  \treturn Klass;\n  }\n\n  var React = extend({\n      version: '0.15.1',\n      cloneElement: cloneElement,\n      isValidElement: isValidElement,\n      createElement: createElement,\n      createFactory: createFactory,\n      Component: Component,\n      createClass: createClass,\n      Children: Children,\n      PropTypes: PropTypes,\n      DOM: DOM,\n      __spread: extend\n  }, ReactDOM);\n\n  React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;\n\n  return React;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bower_components/react-lite-cockpit/dist/react-lite.js\n// module id = 11\n// module chunks = 0","/*jshint esversion: 6 */\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\nimport { applyMiddleware, createStore } from 'redux';\nimport reducer from './reducers.es6';\nimport { thunk } from './middlewares.es6';\n\nconst createStoreWithMiddleware = applyMiddleware(\n    thunk\n)(createStore);\n\nconst store = createStoreWithMiddleware(reducer);\n\nexport default store;\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/machines/store.es6","!function(t,e){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):\"object\"==typeof exports?exports.Redux=e():t.Redux=e()}(this,function(){return function(t){function e(r){if(n[r])return n[r].exports;var o=n[r]={exports:{},id:r,loaded:!1};return t[r].call(o.exports,o,o.exports,e),o.loaded=!0,o.exports}var n={};return e.m=t,e.c=n,e.p=\"\",e(0)}([function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}e.__esModule=!0,e.compose=e.applyMiddleware=e.bindActionCreators=e.combineReducers=e.createStore=void 0;var o=n(2),i=r(o),u=n(7),c=r(u),f=n(6),a=r(f),s=n(5),d=r(s),l=n(1),p=r(l),y=n(3);r(y);e.createStore=i[\"default\"],e.combineReducers=c[\"default\"],e.bindActionCreators=a[\"default\"],e.applyMiddleware=d[\"default\"],e.compose=p[\"default\"]},function(t,e){\"use strict\";function n(){for(var t=arguments.length,e=Array(t),n=0;t>n;n++)e[n]=arguments[n];if(0===e.length)return function(t){return t};var r=function(){var t=e[e.length-1],n=e.slice(0,-1);return{v:function(){return n.reduceRight(function(t,e){return e(t)},t.apply(void 0,arguments))}}}();return\"object\"==typeof r?r.v:void 0}e.__esModule=!0,e[\"default\"]=n},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}function o(t,e,n){function r(){b===h&&(b=h.slice())}function i(){return v}function c(t){if(\"function\"!=typeof t)throw Error(\"Expected listener to be a function.\");var e=!0;return r(),b.push(t),function(){if(e){e=!1,r();var n=b.indexOf(t);b.splice(n,1)}}}function s(t){if(!(0,u[\"default\"])(t))throw Error(\"Actions must be plain objects. Use custom middleware for async actions.\");if(void 0===t.type)throw Error('Actions may not have an undefined \"type\" property. Have you misspelled a constant?');if(x)throw Error(\"Reducers may not dispatch actions.\");try{x=!0,v=y(v,t)}finally{x=!1}for(var e=h=b,n=0;e.length>n;n++)e[n]();return t}function d(t){if(\"function\"!=typeof t)throw Error(\"Expected the nextReducer to be a function.\");y=t,s({type:a.INIT})}function l(){var t,e=c;return t={subscribe:function(t){function n(){t.next&&t.next(i())}if(\"object\"!=typeof t)throw new TypeError(\"Expected the observer to be an object.\");n();var r=e(n);return{unsubscribe:r}}},t[f[\"default\"]]=function(){return this},t}var p;if(\"function\"==typeof e&&void 0===n&&(n=e,e=void 0),void 0!==n){if(\"function\"!=typeof n)throw Error(\"Expected the enhancer to be a function.\");return n(o)(t,e)}if(\"function\"!=typeof t)throw Error(\"Expected the reducer to be a function.\");var y=t,v=e,h=[],b=h,x=!1;return s({type:a.INIT}),p={dispatch:s,subscribe:c,getState:i,replaceReducer:d},p[f[\"default\"]]=l,p}e.__esModule=!0,e.ActionTypes=void 0,e[\"default\"]=o;var i=n(4),u=r(i),c=n(11),f=r(c),a=e.ActionTypes={INIT:\"@@redux/INIT\"}},function(t,e){\"use strict\";function n(t){\"undefined\"!=typeof console&&\"function\"==typeof console.error&&console.error(t);try{throw Error(t)}catch(e){}}e.__esModule=!0,e[\"default\"]=n},function(t,e,n){function r(t){if(!u(t)||l.call(t)!=c||i(t))return!1;var e=o(t);if(null===e)return!0;var n=s.call(e,\"constructor\")&&e.constructor;return\"function\"==typeof n&&n instanceof n&&a.call(n)==d}var o=n(8),i=n(9),u=n(10),c=\"[object Object]\",f=Object.prototype,a=Function.prototype.toString,s=f.hasOwnProperty,d=a.call(Object),l=f.toString;t.exports=r},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}function o(){for(var t=arguments.length,e=Array(t),n=0;t>n;n++)e[n]=arguments[n];return function(t){return function(n,r,o){var u=t(n,r,o),f=u.dispatch,a=[],s={getState:u.getState,dispatch:function(t){return f(t)}};return a=e.map(function(t){return t(s)}),f=c[\"default\"].apply(void 0,a)(u.dispatch),i({},u,{dispatch:f})}}}e.__esModule=!0;var i=Object.assign||function(t){for(var e=1;arguments.length>e;e++){var n=arguments[e];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(t[r]=n[r])}return t};e[\"default\"]=o;var u=n(1),c=r(u)},function(t,e){\"use strict\";function n(t,e){return function(){return e(t.apply(void 0,arguments))}}function r(t,e){if(\"function\"==typeof t)return n(t,e);if(\"object\"!=typeof t||null===t)throw Error(\"bindActionCreators expected an object or a function, instead received \"+(null===t?\"null\":typeof t)+'. Did you write \"import ActionCreators from\" instead of \"import * as ActionCreators from\"?');for(var r=Object.keys(t),o={},i=0;r.length>i;i++){var u=r[i],c=t[u];\"function\"==typeof c&&(o[u]=n(c,e))}return o}e.__esModule=!0,e[\"default\"]=r},function(t,e,n){\"use strict\";function r(t){return t&&t.__esModule?t:{\"default\":t}}function o(t,e){var n=e&&e.type,r=n&&'\"'+n+'\"'||\"an action\";return\"Given action \"+r+', reducer \"'+t+'\" returned undefined. To ignore an action, you must explicitly return the previous state.'}function i(t){Object.keys(t).forEach(function(e){var n=t[e],r=n(void 0,{type:c.ActionTypes.INIT});if(void 0===r)throw Error('Reducer \"'+e+'\" returned undefined during initialization. If the state passed to the reducer is undefined, you must explicitly return the initial state. The initial state may not be undefined.');var o=\"@@redux/PROBE_UNKNOWN_ACTION_\"+Math.random().toString(36).substring(7).split(\"\").join(\".\");if(void 0===n(void 0,{type:o}))throw Error('Reducer \"'+e+'\" returned undefined when probed with a random type. '+(\"Don't try to handle \"+c.ActionTypes.INIT+' or other actions in \"redux/*\" ')+\"namespace. They are considered private. Instead, you must return the current state for any unknown actions, unless it is undefined, in which case you must return the initial state, regardless of the action type. The initial state may not be undefined.\")})}function u(t){for(var e=Object.keys(t),n={},r=0;e.length>r;r++){var u=e[r];\"function\"==typeof t[u]&&(n[u]=t[u])}var c,f=Object.keys(n);try{i(n)}catch(a){c=a}return function(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=arguments[1];if(c)throw c;for(var r=!1,i={},u=0;f.length>u;u++){var a=f[u],s=n[a],d=t[a],l=s(d,e);if(void 0===l){var p=o(a,e);throw Error(p)}i[a]=l,r=r||l!==d}return r?i:t}}e.__esModule=!0,e[\"default\"]=u;var c=n(2),f=n(4),a=(r(f),n(3));r(a)},function(t,e){function n(t){return r(Object(t))}var r=Object.getPrototypeOf;t.exports=n},function(t,e){function n(t){var e=!1;if(null!=t&&\"function\"!=typeof t.toString)try{e=!!(t+\"\")}catch(n){}return e}t.exports=n},function(t,e){function n(t){return!!t&&\"object\"==typeof t}t.exports=n},function(t,e,n){(function(e){\"use strict\";t.exports=n(12)(e||window||this)}).call(e,function(){return this}())},function(t,e){\"use strict\";t.exports=function(t){var e,n=t.Symbol;return\"function\"==typeof n?n.observable?e=n.observable:(e=\"function\"==typeof n[\"for\"]?n[\"for\"](\"observable\"):n(\"observable\"),n.observable=e):e=\"@@observable\",e}}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bower_components/redux/index.js\n// module id = 13\n// module chunks = 0","/*jshint esversion: 6 */\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\nimport { combineReducers } from 'redux';\nimport VMS_CONFIG from \"./config.es6\";\nimport { logDebug } from './helpers.es6';\n\n// --- compatibility hack for IE\nif (!Array.prototype.findIndex) {\n    Array.prototype.findIndex = function (predicate) {\n        if (this === null) {\n            throw new TypeError('Array.prototype.findIndex called on null or undefined');\n        }\n        if (typeof predicate !== 'function') {\n            throw new TypeError('predicate must be a function');\n        }\n        var list = Object(this);\n        var length = list.length >>> 0;\n        var thisArg = arguments[1];\n        var value;\n\n        for (var i = 0; i < length; i++) {\n            value = list[i];\n            if (predicate.call(thisArg, value, i, list)) {\n                return i;\n            }\n        }\n        return -1;\n    };\n}\n\n// --- compatibility hack for PhantomJS\nif (typeof Object.assign != 'function') {\n    Object.assign = function (target) {\n        'use strict';\n        if (target === null) {\n            throw new TypeError('Cannot convert undefined or null to object');\n        }\n\n        target = Object(target);\n        for (var index = 1; index < arguments.length; index++) {\n            var source = arguments[index];\n            if (source !== null) {\n                for (var key in source) {\n                    if (Object.prototype.hasOwnProperty.call(source, key)) {\n                        target[key] = source[key];\n                    }\n                }\n            }\n        }\n        return target;\n    };\n}\n\n// --- helpers -------------------\nfunction getFirstIndexOfVm(state, field, value, connectionName) {\n    return state.findIndex(e => {\n        return e.connectionName === connectionName && e[field] === value;\n    });\n}\n\n// --- reducers ------------------\nfunction config(state, action) {\n    state = state ? state : {\n        provider: null,\n        refreshInterval: VMS_CONFIG.DefaultRefreshInterval\n    };\n\n    switch (action.type) {\n        case 'SET_PROVIDER':\n            return Object.assign({}, state, {provider: action.provider});\n        case 'SET_REFRESH_INTERVAL':\n            const newState = Object.assign({}, state);\n            newState.refreshInterval = action.refreshInterval;\n            return newState;\n        default:\n            return state;\n    }\n}\n\nfunction vms(state, action) {\n    state = state ? state : [];\n\n    logDebug('reducer vms: action=' + JSON.stringify(action));\n\n    switch (action.type) {\n        case 'UPDATE_ADD_VM':\n        {\n            const connectionName = action.vm.connectionName;\n            const index = action.vm.id ? getFirstIndexOfVm(state, 'id', action.vm.id, connectionName)\n                                       : getFirstIndexOfVm(state, 'name', action.vm.name, connectionName);\n            if (index < 0) { // add\n                return [...state, action.vm];\n            }\n\n            let updatedVm;\n            if (action.vm['actualTimeInMs'] < 0) { // clear the usage data (i.e. VM went down)\n                logDebug(`Clearing usage data for vm '${action.vm.name}'`);\n                updatedVm = Object.assign({}, state[index], action.vm);\n                clearUsageData(updatedVm);\n            } else {\n                timeSampleUsageData(action.vm, state[index]);\n                updatedVm = Object.assign({}, state[index], action.vm);\n            }\n\n            return state.slice(0, index)\n                .concat(updatedVm)\n                .concat(state.slice(index + 1));\n        }\n        case 'VM_ACTION_FAILED': {\n            const connectionName = action.payload.connectionName;\n            const index = action.payload.id ? getFirstIndexOfVm(state, 'id', action.payload.id, connectionName)\n                : getFirstIndexOfVm(state, 'name', action.payload.name, connectionName);\n            if (index < 0) {\n                logDebug(`VM_ACTION_FAILED reducer(name='${action.payload.name}', connectionName='${connectionName}') not found, skipping`);\n                return ;\n            }\n            const updatedVm = Object.assign({}, state[index],\n                {lastMessage: action.payload.message, lastMessageDetail: action.payload.detail});\n            return state.slice(0, index)\n                .concat(updatedVm)\n                .concat(state.slice(index + 1));\n        }\n        case 'DELETE_UNLISTED_VMS':\n        {\n            return state\n                .filter(vm => (action.connectionName !== vm.connectionName || action.vmNames.indexOf(vm.name) >= 0) );\n        }\n        default: // by default all reducers should return initial state on unknown actions\n            return state;\n    }\n}\n\nfunction clearUsageData(updatedVm) {\n    updatedVm['actualTimeInMs'] = undefined;\n    updatedVm['cpuTime'] = undefined;\n    updatedVm['cpuUsage'] = undefined;\n\n    updatedVm['rssMemory'] = undefined;\n}\n\nfunction timeSampleUsageData(newVmRecord, previousVmRecord) {\n    if (newVmRecord['actualTimeInMs']) { // new usage data are provided\n        if (previousVmRecord['actualTimeInMs']) { // diff can be computed\n            const timeDiff = (newVmRecord.actualTimeInMs - previousVmRecord.actualTimeInMs) * 1000000; // in nanosecs\n            if (timeDiff <= 0) {\n                logDebug(`-- timeSampleUsageData(): no time difference`);\n                return;\n            }\n            const cpuTimeDiff = newVmRecord.cpuTime - previousVmRecord.cpuTime; // in nanosecs\n\n            // store computed actual usage stats\n            newVmRecord.cpuUsage = (100 * cpuTimeDiff / timeDiff).toFixed(1);\n\n            return;\n        } else {\n            logDebug(`timeSampleUsageData(): can't compute diff - missing previous record`);\n        }\n    }\n\n    newVmRecord.cpuUsage = 0;\n}\n\nexport default combineReducers({\n    config,\n    vms\n});\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/machines/reducers.es6","/*jshint esversion: 6 */\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Application-wide constants\n * TODO: make this configurable by user\n */\nconst VMS_CONFIG = {\n    DefaultRefreshInterval: 10000, // in ms\n    Virsh: {\n        connections: {\n            'system': {\n                params: ['-c', 'qemu:///system']\n            },\n            'session': {\n                params: ['-c', 'qemu:///session']\n            }\n        }\n    },\n    isDev: false // TODO: make it configurable based on process.env.NODE_ENV\n};\n\nexport default VMS_CONFIG;\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/machines/config.es6","/*jshint esversion: 6 */\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\nimport cockpit from 'cockpit';\nimport VMS_CONFIG from './config.es6';\n\nconst _ = cockpit.gettext;\n\nexport function toGigaBytes(amount, currentUnit) {\n    let result;\n    switch (currentUnit) {\n        case 'B':\n            result = amount / 1024 / 1024 / 1024;\n            break;\n        case 'KiB':\n            result = amount / 1024 / 1024;\n            break;\n        default:\n            console.error(`toGigaBytes(): unknown unit: ${currentUnit}`);\n            result = amount / 1;\n    }\n\n    if (result < 1) {\n        result = result.toFixed(2);\n    } else {\n        const fixed1 = result.toFixed(1);\n        result = (result - fixed1 === 0) ? result.toFixed(0) : fixed1;\n    }\n\n    return result;\n}\n\nexport function toKiloBytes(amount, currentUnit) {\n    let result;\n    switch (currentUnit) {\n        case 'B':\n            result = amount / 1024;\n            break;\n        case 'KiB':\n            result = amount;\n            break;\n        case 'MiB':\n            result = amount * 1024;\n            break;\n        case 'GiB':\n            result = amount * 1024;\n            break;\n        default:\n            console.error(`toKiloBytes(): unknown unit: ${currentUnit}`);\n            result = amount / 1;\n    }\n\n    return result;\n}\n\nexport function isEmpty(str) {\n    return (!str || 0 === str.length);\n}\n\nexport function arrayEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    const diff = arr1.filter((v, index) => {\n        return v !== arr2[index];\n    });\n    return diff.length === 0;\n}\n\nexport function logDebug(msg) {\n    if (VMS_CONFIG.isDev) {\n        console.log(msg);\n    }\n}\n\nexport function rephraseUI(key, original) {\n    const transform = {\n        'autostart': {\n            'disable': 'disabled',\n            'enable': 'enabled'\n        },\n        'connections': {\n            'system': _(\"System\"),\n            'session': _(\"Session\")\n        }\n    };\n\n    if (!(key in transform)) {\n        logDebug(`rephraseUI(key='${key}', original='${original}'): unknown key`);\n        return original;\n    }\n\n    if (!(original in transform[key])) {\n        logDebug(`rephraseUI(key='${key}', original='${original}'): unknown original value`);\n        return original;\n    }\n\n    return transform[key][original];\n}\n\n// --- VM state functions --\nexport function canReset(vmState) {\n    return vmState == 'running' || vmState == 'idle' || vmState == 'paused';\n}\n\nexport function canShutdown(vmState) {\n    return canReset(vmState);\n}\n\nexport function isRunning(vmState) {\n    return canReset(vmState);\n}\n\nexport function canRun(vmState) {\n    return vmState == 'shut off';\n}\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/machines/helpers.es6","module.exports = cockpit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cockpit\"\n// module id = 17\n// module chunks = 0","/*jshint esversion: 6 */\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport { logDebug } from './helpers.es6';\n\n/**\n * Middleware that resolves functions taking (dispatch, getState) and promises.\n *\n * If a promise is passed the dispatch will just return the passed promise.\n * This is done to simplify some client code that can sometime dispatch a promise and sometimes a plain action.\n *\n * If a function is passed (which is not a promise) we perform the usual injection of (dispatch, getState).\n */\nexport function thunk({ dispatch, getState }) {\n    logDebug('thunk-middleware');\n\n    return next => action => {\n        if (typeof action === 'function') {\n            // cockpit style promise is also typeof 'function'\n            // so we differentiate between those two by the presence of property 'then'\n            return action.then ? action : action(dispatch, getState);\n        }\n\n        return next(action);\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/machines/middlewares.es6","/*jshint esversion: 6 */\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\nimport React, { PropTypes } from \"react\";\nimport HostVmsList from \"./hostvmslist.jsx\";\n\nconst App = ({ store }) => {\n    const { vms } = store.getState();\n    const dispatch = store.dispatch;\n\n    return (<HostVmsList vms={vms} dispatch={dispatch} />)\n}\nApp.propTypes = {\n    store: React.PropTypes.object.isRequired\n}\n\nexport default App;\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/machines/app.jsx","/*jshint esversion: 6 */\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\nimport cockpit from 'cockpit';\nimport React, { PropTypes } from \"react\";\nimport { shutdownVm, forceVmOff, forceRebootVm, rebootVm, startVm, setRefreshInterval } from \"./actions.es6\";\nimport { canReset, canShutdown, canRun, rephraseUI, logDebug, toGigaBytes } from \"./helpers.es6\";\nimport DonutChart from \"./c3charts.jsx\";\nimport { Listing, ListingRow } from \"cockpit-components-listing.jsx\";\n\nconst _ = cockpit.gettext;\n\nconst NoVm = () => {\n    return (<div className=\"cockpit-log-warning\">\n        <div className=\"blank-slate-pf\">\n            <div className=\"blank-slate-pf-icon\">\n                <i className=\"pficon pficon-virtual-machine\"></i>\n                <h1>{ _(\"No VM is running or defined on this host\") }</h1>\n            </div>\n        </div>\n    </div>);\n}\n\nconst VmActions = ({ vmId, state, onStart, onReboot, onForceReboot, onShutdown, onForceoff }) => {\n    const reset = canReset(state) ? DropdownButtons({\n        buttons: [{\n            title: _(\"Restart\"),\n            action: onReboot,\n            id: `${vmId}-reboot`\n        }, {\n            title: _(\"Force Restart\"),\n            action: onForceReboot,\n            id: `${vmId}-forceReboot`\n        }]\n    }) : '';\n\n    const shutdown = canShutdown(state) ? DropdownButtons({\n        buttons: [{\n            title: _(\"Shut Down\"),\n            action: onShutdown,\n            id: `${vmId}-off`\n        }, {\n            title: _(\"Force Shut Down\"),\n            action: onForceoff,\n            id: `${vmId}-forceOff`\n        }]\n    }) : '';\n\n    const run = canRun(state) ? (<button className=\"btn btn-default btn-danger\" onClick={onStart}>{_(\"Run\")}</button>) : '';\n\n    return (<div>\n        {reset}\n        {shutdown}\n        {run}\n    </div>);\n}\nVmActions.propTypes = {\n    vmId: PropTypes.string.isRequired,\n    state: PropTypes.string.isRequired,\n    onStart: PropTypes.func.isRequired,\n    onReboot: PropTypes.func.isRequired,\n    onForceReboot: PropTypes.func.isRequired,\n    onShutdown: PropTypes.func.isRequired,\n    onForceoff: PropTypes.func.isRequired\n}\n\nconst IconElement = ({ onClick, className, title, state }) => {\n    return (<span title={title} data-toggle='tooltip' data-placement='left'>\n        {state}&nbsp;<i onClick={onClick} className={className}/>\n    </span>);\n}\nIconElement.propTypes = {\n    onClick: PropTypes.func,\n    className: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    state: PropTypes.string.isRequired,\n}\n\nconst StateIcon = ({ state }) => {\n    switch (state) {\n        case 'running':// TODO: display VM screenshot if available or the ok-icon otherwise\n            return (<IconElement state={state} className='pficon pficon-ok icon-1x-vms' title={_(\"The VM is running.\")}/>);\n        case 'idle':\n            return (<IconElement state={state} className='pficon pficon-running icon-1x-vms' title={_(\"The VM is idle.\")}/>);\n        case 'paused':\n            return (<IconElement state={state} className='pficon pficon-pause icon-1x-vms' title={_(\"The VM is paused.\")}/>);\n        case 'shutdown':\n            return (<IconElement state={state} className='glyphicon glyphicon-wrench icon-1x-vms'\n                                 title={_(\"The VM is going down.\")}/>);\n        case 'shut off':\n            return (<IconElement state={state} className='fa fa-arrow-circle-o-down icon-1x-vms' title={_(\"The VM is down.\")}/>);\n        case 'crashed':\n            return (<IconElement state={state} className='pficon pficon-error-circle-o icon-1x-vms'\n                                 title={_(\"The VM crashed.\")}/>);\n        case 'dying':\n            return (<IconElement state={state} className='pficon pficon-warning-triangle-o icon-1x-vms'\n                                 title={_(\"The VM is in process of dying (shut down or crash is not completed).\")}/>);\n        case 'pmsuspended':\n            return (<IconElement state={state} className='pficon pficon-ok icon-1x-vms'\n                                 title={_(\"The VM is suspended by guest power management.\")}/>);\n        case undefined:\n            return (<div/>);\n        default:\n            return (<small>{state}</small>);\n    }\n}\nStateIcon.propTypes = {\n    state: PropTypes.string.isRequired\n}\n\n/**\n * Render group of buttons as a dropdown\n *\n * @param buttons array of objects [ {title, action, id}, ... ].\n *        At least one button is required. Button id is optional.\n * @returns {*}\n * @constructor\n */\nconst DropdownButtons = ({ buttons }) => {\n    const buttonsHtml = buttons.map(\n        button => {\n            return (<li className='presentation'>\n                <a role='menuitem' onClick={button.action} id={button.id}>\n                    {button.title}\n                </a>\n            </li>)\n        }\n    );\n\n    const caretId = buttons[0]['id'] ? `${buttons[0]['id']}-caret` : undefined;\n    return (<div className='btn-group'>\n        <button className='btn btn-default btn-danger' onClick={buttons[0].action}>\n            {buttons[0].title}\n        </button>\n        <button data-toggle='dropdown' className='btn btn-default dropdown-toggle'>\n            <span className='caret' id={caretId}/>\n        </button>\n        <ul role='menu' className='dropdown-menu'>\n            {buttonsHtml}\n        </ul>\n    </div>);\n}\nDropdownButtons.propTypes = {\n    buttons: PropTypes.array.isRequired\n}\n\nfunction vmId(vmName) {\n    return `vm-${vmName}`;\n}\n\nconst VmOverviewTabRecord = ({id, descr, value}) => {\n    return (<tr>\n        <td className='top'>\n            <label className='control-label'>\n                {descr}\n            </label>\n        </td>\n        <td id={id}>\n            {value}\n        </td>\n    </tr>);\n};\nVmOverviewTabRecord.propTypes = {\n    id: PropTypes.string,\n    descr: PropTypes.string.isRequired,\n    value: PropTypes.string.isRequired\n}\n\nconst VmLastMessage = ({ vm }) => {\n    if (!vm.lastMessage) {\n        return null;\n    }\n\n    const detail = (vm.lastMessageDetail && vm.lastMessageDetail.exception) ? vm.lastMessageDetail.exception: vm.lastMessage;\n    return (\n        <p title={detail} data-toggle='tooltip'>\n            <span className='pficon-warning-triangle-o' />&nbsp;{vm.lastMessage}\n        </p>\n    );\n};\nVmLastMessage.propTypes = {\n    vm: PropTypes.object.isRequired\n}\n\nconst VmOverviewTab = ({ vm }) => {\n    return (<div>\n        <table className='machines-width-max'>\n            <tr className='machines-listing-ct-body-detail'>\n                <td>\n                    <table className='form-table-ct'>\n                        <VmOverviewTabRecord id={`${vmId(vm.name)}-state`} descr='State:' value={vm.state}/>\n                        <VmOverviewTabRecord descr={_(\"Memory:\")}\n                                             value={cockpit.format_bytes((vm.currentMemory ? vm.currentMemory : 0) * 1024)}/>\n                        <VmOverviewTabRecord descr={_(\"vCPUs:\")} value={vm.vcpus}/>\n                    </table>\n                </td>\n\n                <td>\n                    <table className='form-table-ct'>\n                        <VmOverviewTabRecord descr={_(\"ID:\")} value={vm.id}/>\n                        <VmOverviewTabRecord descr={_(\"OS Type:\")} value={vm.osType}/>\n                        <VmOverviewTabRecord descr={_(\"Autostart:\")} value={rephraseUI('autostart', vm.autostart)}/>\n                    </table>\n                </td>\n            </tr>\n        </table>\n        <VmLastMessage vm={vm} />\n    </div>);\n};\nVmOverviewTab.propTypes = {\n    vm: PropTypes.object.isRequired\n}\n\nconst VmUsageTab = ({ vm }) => {\n    const width = 220;\n    const height = 170;\n\n    const rssMem = vm[\"rssMemory\"] ? vm[\"rssMemory\"] : 0; // in KiB\n    const memTotal = vm[\"currentMemory\"] ? vm[\"currentMemory\"] : 0; // in KiB\n    let available = memTotal - rssMem; // in KiB\n    available = available < 0 ? 0 : available;\n\n    const totalCpus = vm['vcpus'] > 0 ? vm['vcpus'] : 0;\n    // 4 CPU system can have usage 400%, let's keep % between 0..100\n    let cpuUsage = vm['cpuUsage'] / (totalCpus > 0 ? totalCpus : 1);\n    cpuUsage = isNaN(cpuUsage) ? 0 : cpuUsage;\n\n    logDebug(`VmUsageTab.render(): rssMem: ${rssMem} KiB, memTotal: ${memTotal} KiB, available: ${available} KiB, totalCpus: ${totalCpus}, cpuUsage: ${cpuUsage}`);\n\n    const memChartData = {\n        columns: [\n            [_(\"Used\"), toGigaBytes(rssMem, 'KiB')],\n            [_(\"Available\"), toGigaBytes(available, 'KiB')]\n        ],\n        groups: [\n            [\"used\", \"available\"]\n        ],\n        order: null\n    };\n\n    const cpuChartData = {\n        columns: [\n            [_(\"Used\"), cpuUsage],\n            [_(\"Available\"), 100.0 - cpuUsage]\n        ],\n        groups: [\n            [\"used\", \"available\"]\n        ],\n        order: null\n    };\n\n    const chartSize = {\n        width, // keep the .usage-donut-caption CSS in sync\n        height\n    }\n\n    return (<table>\n            <tr>\n                <td>\n                    <DonutChart data={memChartData} size={chartSize} width='8' tooltipText=' '\n                                primaryTitle={toGigaBytes(rssMem, 'KiB')} secondaryTitle='GB'\n                                caption={`used from ${cockpit.format_bytes(memTotal * 1024)} memory`}/>\n                </td>\n\n                <td>\n                    <DonutChart data={cpuChartData} size={chartSize} width='8' tooltipText=' '\n                                primaryTitle={cpuUsage} secondaryTitle='%'\n                                caption={`used from ${totalCpus} vCPUs`}/>\n                </td>\n            </tr>\n        </table>\n\n    );\n};\nVmUsageTab.propTypes = {\n    vm: React.PropTypes.object.isRequired\n};\n\n/** One VM in the list (a row)\n */\nconst Vm = ({ vm, onStart, onShutdown, onForceoff, onReboot, onForceReboot }) => {\n    const stateIcon = (<StateIcon state={vm.state} />);\n    return (<ListingRow\n        columns={[{name: vm.name, 'header': true}, rephraseUI('connections', vm.connectionName), stateIcon]}\n        tabRenderers={[ {name: _(\"Overview\"), renderer: VmOverviewTab, data: {vm: vm}},\n            {name: _(\"Usage\"), renderer: VmUsageTab, data: {vm: vm}, presence: 'onlyActive' } ]}\n        listingActions={VmActions({vmId: vmId(vm.name), state: vm.state,\n            onStart, onReboot, onForceReboot, onShutdown, onForceoff})}/>);\n};\nVm.propTypes = {\n    vm: React.PropTypes.object.isRequired,\n    onStart: React.PropTypes.func.isRequired,\n    onShutdown: React.PropTypes.func.isRequired,\n    onForceoff: React.PropTypes.func.isRequired,\n    onReboot: React.PropTypes.func.isRequired,\n    onForceReboot: React.PropTypes.func.isRequired\n};\n\n/**\n * List of all VMs defined on this host\n */\nconst HostVmsList = ({ vms, dispatch }) => {\n    if (vms.length === 0) {\n        return (<div className='container-fluid'>\n            <NoVm />\n        </div>);\n    }\n\n    return (<div className='container-fluid'>\n        <Listing title={_(\"Virtual Machines\")} columnTitles={[_(\"Name\"), _(\"Connection\"), _(\"State\")]}>\n            {vms.map(vm => {\n                return (\n                    <Vm vm={vm}\n                        onStart={() => dispatch(startVm(vm.connectionName, vm.name))}\n                        onReboot={() => dispatch(rebootVm(vm.connectionName, vm.name))}\n                        onForceReboot={() => dispatch(forceRebootVm(vm.connectionName, vm.name))}\n                        onShutdown={() => dispatch(shutdownVm(vm.connectionName, vm.name))}\n                        onForceoff={() => dispatch(forceVmOff(vm.connectionName, vm.name))}/>);\n            })}\n        </Listing>\n    </div>);\n};\nHostVmsList.propTypes = {\n    vms: PropTypes.object.isRequired,\n    dispatch: PropTypes.func.isRequired\n};\n\nexport default HostVmsList;\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/machines/hostvmslist.jsx","/*jshint esversion: 6 */\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\nimport cockpit from 'cockpit';\nimport Libvirt from './libvirt.es6';\nimport { getRefreshInterval } from './selectors.es6';\nimport VMS_CONFIG from \"./config.es6\";\nimport { logDebug } from './helpers.es6';\n\n/**\n * All actions dispatchable by in the application\n */\n\n// --- Provider actions -----------------------------------------\n/**\n *\n * @param connectionName optional - if `undefined` then for all connections\n */\nexport function getAllVms(connectionName) {\n    return virt('GET_ALL_VMS', {connectionName});\n}\n\nexport function getVm(connectionName, lookupId) {\n    return virt('GET_VM', {\n        lookupId, // provider-specific (i.e. libvirt uses vm_name)\n        connectionName\n    });\n}\n\nexport function shutdownVm(connectionName, name) {\n    return virt('SHUTDOWN_VM', {connectionName, name});\n}\n\nexport function forceVmOff(connectionName, name) {\n    return virt('FORCEOFF_VM', {connectionName, name});\n}\n\nexport function rebootVm(connectionName, name) {\n    return virt('REBOOT_VM', {connectionName, name});\n}\n\nexport function forceRebootVm(connectionName, name) {\n    return virt('FORCEREBOOT_VM', {connectionName, name});\n}\n\nexport function startVm(connectionName, name) {\n    return virt('START_VM', {connectionName, name});\n}\n\n/**\n * Helper for dispatching virt provider methods.\n *\n * Lazily initializes the virt provider and dispatches given method on it.\n */\nfunction virt(method, action) {\n    return (dispatch, getState) => getVirtProvider({dispatch, getState}).then(provider => {\n        if (method in provider) {\n            logDebug(`Calling ${provider.name}.${method}(${JSON.stringify(action)})`);\n            return dispatch(provider[method](action));\n        } else {\n            console.warn(`method: '${method}' is not supported by provider: '${provider.name}'`);\n        }\n    }).catch(err => {\n        console.error('could not detect any virt provider');\n    });\n}\n\nfunction getVirtProvider(store) {\n    const state = store.getState();\n    if (state.config.provider) {\n        return cockpit.resolve(state.config.provider);\n    } else {\n        const deferred = cockpit.defer();\n        logDebug('Discovering provider');\n        /* TODO: discover host capabilities\n         systemctl is-active vdsmd\n         active\n         unknown\n         */\n        let provider = null;\n        if (false /*TODO: Detect VDSM*/) {\n            // TODO: dispatch/resolve VDSM provider\n        } else if (true /* TODO: detect libvirt */) {\n            logDebug('Selecting Libvirt as the VIRT provider.');\n            provider = Libvirt;\n        }\n\n        if (!provider) { //  no provider available\n            deferred.reject();\n        } else {\n            store.dispatch(setProvider(provider));\n\n            // Skip the initialization if provider does not define the `init` hook.\n            if (!provider.init) {\n                deferred.resolve(provider);\n            } else {\n                // Providers are expected to return promise as a part of initialization\n                // so we can resolve only after the provider had time to properly initialize.\n                store\n                    .dispatch(provider.init())\n                    .then(() => deferred.resolve(provider))\n                    .catch(deferred.reject);\n            }\n        }\n\n        return deferred.promise;\n    }\n}\n\n/**\n * Delay call of polling action.\n *\n * To avoid execution overlap, the setTimeout() is used instead of setInterval().\n *\n * The delayPolling() function is called after previous execution is finished so\n * the refresh interval starts counting since that moment.\n *\n * If the application is not visible, the polling action execution is skipped\n * and scheduled on later.\n *\n * @param action I.e. getAllVms()\n */\nexport function delayPolling(action, timeout) {\n    return (dispatch, getState) => {\n        timeout = timeout || getRefreshInterval(getState());\n\n        if (timeout > 0 && !cockpit.hidden) {\n            logDebug(`Scheduling ${timeout} ms delayed action`);\n            window.setTimeout(() => {\n                logDebug('Executing delayed action');\n                dispatch(action);\n            }, timeout);\n        } else {\n            // logDebug(`Skipping delayed action since refreshing is switched off`);\n            window.setTimeout(() => dispatch(delayPolling(action, timeout)), VMS_CONFIG.DefaultRefreshInterval);\n        }\n    };\n}\n\n// --- Store actions --------------------------------------------\nexport function setProvider(provider) {\n    return {\n        type: 'SET_PROVIDER',\n        provider\n    };\n}\n\nexport function setRefreshInterval(refreshInterval) {\n    return {\n        type: 'SET_REFRESH_INTERVAL',\n        refreshInterval\n    };\n}\n\nexport function updateOrAddVm({ id, name, connectionName, state, osType, fqdn, uptime, currentMemory, rssMemory, vcpus, autostart,\n    actualTimeInMs, cpuTime }) {\n    let vm = {};\n\n    if (id !== undefined) vm.id = id;\n    if (name !== undefined) vm.name = name;\n    if (connectionName !== undefined) vm.connectionName = connectionName;\n    if (state !== undefined) vm.state = state;\n    if (osType !== undefined) vm.osType = osType;\n    if (currentMemory !== undefined) vm.currentMemory = currentMemory;\n    if (rssMemory !== undefined) vm.rssMemory = rssMemory;\n    if (vcpus !== undefined) vm.vcpus = vcpus;\n    if (fqdn !== undefined) vm.fqdn = fqdn;\n    if (uptime !== undefined) vm.uptime = uptime;\n    if (autostart !== undefined) vm.autostart = autostart;\n\n    if (actualTimeInMs !== undefined) vm.actualTimeInMs = actualTimeInMs;\n    if (cpuTime !== undefined) vm.cpuTime = cpuTime;\n\n    return {\n        type: 'UPDATE_ADD_VM',\n        vm\n    };\n}\n\nexport function vmActionFailed({ name, connectionName, message, detail}) {\n    return {\n        type: 'VM_ACTION_FAILED',\n        payload: {\n            name,\n            connectionName,\n            message,\n            detail\n        }\n    };\n}\n\nexport function deleteUnlistedVMs(connectionName, vmNames) {\n    return {\n        type: 'DELETE_UNLISTED_VMS',\n        vmNames,\n        connectionName\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/machines/actions.es6","/*jshint esversion: 6 */\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n/*\n * Provider for Libvirt\n */\nimport cockpit from 'cockpit';\nimport $ from 'jquery';\nimport {updateOrAddVm, getVm, getAllVms, delayPolling, deleteUnlistedVMs, vmActionFailed} from './actions.es6';\nimport { spawnScript, spawnProcess } from './services.es6';\nimport { toKiloBytes, isEmpty, logDebug, isRunning } from './helpers.es6';\nimport VMS_CONFIG from './config.es6';\n\nconst _ = cockpit.gettext;\n\n// --- compatibility hack\nif (!String.prototype.startsWith) {\n    String.prototype.startsWith = function (searchString, position) {\n        position = position || 0;\n        return this.substr(position, searchString.length) === searchString;\n    };\n}\n\n/**\n * Parse non-XML stdout of virsh.\n *\n * @param virshStdout\n * @returns {*}\n */\nfunction parseLines(virshStdout) {\n    return virshStdout.match(/[^\\r\\n]+/g);\n}\n\n/**\n * Parse format of:\n * Pattern: value\n * @param parsedLines\n * @param pattern\n */\nfunction getValueFromLine(parsedLines, pattern) {\n    const selectedLine = parsedLines.filter(line => {\n        return line.trim().startsWith(pattern);\n    });\n    return isEmpty(selectedLine) ? undefined : selectedLine.toString().trim().substring(pattern.length).trim();\n}\n\nexport default {\n    name: 'Libvirt',\n\n    /**\n     * read VM properties (virsh)\n     *\n     * @param VM name\n     * @returns {Function}\n     */\n    GET_VM ({ lookupId: name, connectionName }) {\n        logDebug(`${this.name}.GET_VM()`);\n\n        const canFailHandler = ({exception, data}) => {\n            console.info(`The 'virsh' command failed, as expected: \"${JSON.stringify(exception)}\", data: \"${JSON.stringify(data)}\"`);\n        };\n\n        return dispatch => {\n            if (!isEmpty(name)) {\n                return spawnVirshReadOnly({connectionName, method: 'dumpxml', name}).then(domXml => {\n                    parseDumpxml(dispatch, connectionName, domXml);\n                    return spawnVirshReadOnly({connectionName, method: 'dominfo', name});\n                }).then(domInfo => {\n                    if (isRunning(parseDominfo(dispatch, connectionName, name, domInfo))) {\n                        return spawnVirshReadOnly({connectionName, method: 'dommemstat', name, failHandler: canFailHandler});\n                    }\n                }).then(dommemstat => {\n                    if (dommemstat) { // is undefined if vm is not running\n                        parseDommemstat(dispatch, connectionName, name, dommemstat);\n                        return spawnVirshReadOnly({connectionName, method: 'domstats', name, failHandler: canFailHandler});\n                    }\n                }).then(domstats => {\n                    if (domstats) {\n                        parseDomstats(dispatch, connectionName, name, domstats);\n                    }\n                }); // end of GET_VM return\n            }\n        };\n    },\n\n    /**\n     * Initiate read of all VMs\n     *\n     * @returns {Function}\n     */\n    GET_ALL_VMS ({ connectionName }) {\n        logDebug(`${this.name}.GET_ALL_VMS(connectionName='${connectionName}'):`);\n        if (connectionName) {\n            return dispatch => doGetAllVms(dispatch, connectionName);\n        }\n\n        return dispatch => { // for all connections\n            return cockpit.user().done( loggedUser => {\n                const promises = Object.getOwnPropertyNames(VMS_CONFIG.Virsh.connections)\n                    .filter(\n                        // The 'root' user does not have its own qemu:///session just qemu:///system\n                        // https://bugzilla.redhat.com/show_bug.cgi?id=1045069\n                        connectionName => canLoggedUserConnectSession(connectionName, loggedUser))\n                    .map( connectionName => dispatch(getAllVms(connectionName)));\n\n                return cockpit.all(promises)\n                    .then(() => { // keep polling AFTER all VM details have been read (avoid overlap)\n                        dispatch(delayPolling(getAllVms()));\n                    });\n            });\n        };\n    },\n\n    SHUTDOWN_VM ({ name, connectionName }) {\n        logDebug(`${this.name}.SHUTDOWN_VM(${name}):`);\n        return dispatch => spawnVirsh({connectionName,\n            method: 'SHUTDOWN_VM',\n            failHandler: ({exception, data}) => dispatch(vmActionFailed({name, connectionName,\n                message: _(\"SHUTDOWN_VM action failed\"), detail: {exception, data}})),\n            args: ['shutdown', name]\n        });\n    },\n\n    FORCEOFF_VM ({ name, connectionName }) {\n        logDebug(`${this.name}.FORCEOFF_VM(${name}):`);\n        return dispatch => spawnVirsh({connectionName,\n            method: 'FORCEOFF_VM',\n            failHandler: ({exception, data}) => dispatch(vmActionFailed({name, connectionName,\n                message: _(\"FORCEOFF_VM action failed\"), detail: {exception, data}})),\n            args: ['destroy', name]\n        });\n    },\n\n    REBOOT_VM ({ name, connectionName }) {\n        logDebug(`${this.name}.REBOOT_VM(${name}):`);\n        return dispatch => spawnVirsh({connectionName,\n            method: 'REBOOT_VM',\n            failHandler: ({exception, data}) => dispatch(vmActionFailed({name, connectionName,\n                message: _(\"REBOOT_VM action failed\"), detail: {exception, data}})),\n            args: ['reboot', name]\n        });\n    },\n\n    FORCEREBOOT_VM ({ name, connectionName }) {\n        logDebug(`${this.name}.FORCEREBOOT_VM(${name}):`);\n        return dispatch => spawnVirsh({connectionName,\n            method: 'FORCEREBOOT_VM',\n            failHandler: ({exception, data}) => dispatch(vmActionFailed({name, connectionName,\n                message: _(\"FORCEREBOOT_VM action failed\"), detail: {exception, data}})),\n            args: ['reset', name]\n        });\n    },\n\n    START_VM ({ name, connectionName }) {\n        logDebug(`${this.name}.START_VM(${name}):`);\n        return dispatch => spawnVirsh({connectionName,\n            method: 'START_VM',\n            failHandler: ({exception, data}) => dispatch(vmActionFailed({name, connectionName,\n                message: _(\"START_VM action failed\"), detail: {exception, data}})),\n            args: ['start', name]\n        });\n    }\n};\n\nfunction canLoggedUserConnectSession (connectionName, loggedUser) {\n    return connectionName !== 'session' || loggedUser.name !== 'root';\n}\n\nfunction doGetAllVms (dispatch, connectionName) {\n    const connection = VMS_CONFIG.Virsh.connections[connectionName];\n\n    return spawnScript({\n        script: `virsh ${connection.params.join(' ')} -r list --all | awk '$1 == \"-\" || $1+0 > 0 { print $2 }'`\n    }).then(output => {\n        const vmNames = output.trim().split(/\\r?\\n/);\n        vmNames.forEach((vmName, index) => {\n            vmNames[index] = vmName.trim();\n        });\n        logDebug(`GET_ALL_VMS: vmNames: ${JSON.stringify(vmNames)}`);\n\n        // remove undefined domains\n        dispatch(deleteUnlistedVMs(connectionName, vmNames));\n\n        // read VM details\n        return cockpit.all(vmNames.map((name) => dispatch(getVm(connectionName, name))));\n    });\n}\n\n// TODO: add configurable custom virsh attribs - i.e. libvirt user/pwd\nfunction spawnVirsh({connectionName, method, failHandler, args}) {\n    return spawnProcess({\n        cmd: 'virsh',\n        args: VMS_CONFIG.Virsh.connections[connectionName].params.concat(args),\n        failHandler,\n    }).catch((ex, data, output) => {\n        const msg = `${method}() exception: '${ex}', data: '${data}', output: '${output}'`;\n        if (failHandler) {\n            logDebug(msg);\n            return ;\n        }\n        console.error(msg);\n    });\n}\n\nfunction spawnVirshReadOnly({connectionName, method, name, failHandler}) {\n    return spawnVirsh({connectionName, method, args: ['-r', method, name], failHandler});\n}\n\nfunction parseDumpxml(dispatch, connectionName, domXml) {\n    const xmlDoc = $.parseXML(domXml);\n\n    const domainElem = xmlDoc.getElementsByTagName(\"domain\")[0];\n    const osElem = domainElem.getElementsByTagName(\"os\")[0];\n    const currentMemoryElem = domainElem.getElementsByTagName(\"currentMemory\")[0];\n    const vcpuElem = domainElem.getElementsByTagName(\"vcpu\")[0];\n\n    const name = domainElem.getElementsByTagName(\"name\")[0].childNodes[0].nodeValue;\n    const id = domainElem.getElementsByTagName(\"uuid\")[0].childNodes[0].nodeValue;\n    const osType = osElem.getElementsByTagName(\"type\")[0].childNodes[0].nodeValue;\n\n    const currentMemoryUnit = currentMemoryElem.getAttribute(\"unit\");\n    const currentMemory = toKiloBytes(currentMemoryElem.childNodes[0].nodeValue, currentMemoryUnit);\n\n    const vcpus = vcpuElem.childNodes[0].nodeValue;\n\n    dispatch(updateOrAddVm({connectionName, name, id, osType, currentMemory, vcpus}));\n}\n\nfunction parseDominfo(dispatch, connectionName, name, domInfo) {\n    const lines = parseLines(domInfo);\n    const state = getValueFromLine(lines, 'State:');\n    const autostart = getValueFromLine(lines, 'Autostart:');\n\n    if (!isRunning(state)) { // clean usage data\n        dispatch(updateOrAddVm({connectionName, name, state, autostart, actualTimeInMs: -1}));\n    } else {\n        dispatch(updateOrAddVm({connectionName, name, state, autostart}));\n    }\n\n    return state;\n}\n\nfunction parseDommemstat(dispatch, connectionName, name, dommemstat) {\n    const lines = parseLines(dommemstat);\n\n    let rssMemory = getValueFromLine(lines, 'rss'); // in KiB\n\n    if (rssMemory) {\n        dispatch(updateOrAddVm({connectionName, name, rssMemory}));\n    }\n}\n\nfunction parseDomstats(dispatch, connectionName, name, domstats) {\n    const actualTimeInMs = Date.now();\n\n    const lines = parseLines(domstats);\n\n    let cpuTime = getValueFromLine(lines, 'cpu\\.time=');\n    // TODO: Add disk, network usage statistics\n\n    if (cpuTime) {\n        dispatch(updateOrAddVm({connectionName, name, actualTimeInMs, cpuTime}));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/machines/libvirt.es6","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 23\n// module chunks = 0","/*jshint esversion: 6 */\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\nimport cockpit from 'cockpit';\nimport { logDebug } from './helpers.es6';\n\nexport function spawnProcess({ cmd, args = [], stdin, failHandler }) {\n    const spawnArgs = [cmd, ...args];\n    logDebug(`spawn process args: ${spawnArgs}`);\n\n    return spawn(cockpit.spawn(spawnArgs, { err: \"message\" })\n        .input(stdin))\n        .fail((exception, data) => {\n            if (failHandler) {\n                failHandler({exception, data});\n                return ;\n            }\n            console.error(`spawn '${cmd}' process returned error: \"${JSON.stringify(exception)}\", data: \"${JSON.stringify(data)}\"`);\n        });\n}\n\nexport function spawnScript({ script }) {\n    const spawnArgs = [script];\n    logDebug(`spawn script args: ${spawnArgs}`);\n\n    return spawn(cockpit.script(spawnArgs, [], { err: \"message\" }))\n        .fail((ex, data) =>\n            console.error(`spawn '${script}' script error: \"${JSON.stringify(ex)}\", data: \"${JSON.stringify(data)}\"`));\n}\n\nfunction spawn(command) {\n    const deferred = cockpit.defer();\n    let stdout = '';\n    command\n        .stream(chunk => {\n            stdout += chunk;\n        })\n        .done(() => {\n            deferred.resolve(stdout);\n        })\n        .fail((ex, data) => {\n            deferred.reject(ex, data, stdout);\n        });\n\n    return deferred.promise;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/machines/services.es6","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n/*\n * Selectors are pattern that enables to decouple the View layer from the exact layout of\n * the state in Redux store. This also enables to put derived (computed) data on the same level\n * as the objects stored in the store directly.\n *\n * Reference: http://redux.js.org/docs/recipes/ComputingDerivedData.html\n */\n\nexport function getRefreshInterval(state) {\n    return state.config.refreshInterval;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/machines/selectors.es6","/*jshint esversion: 6 */\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\nimport $ from 'jquery';\nimport React from \"react\";\n\nimport c3 from \"c3/c3\";\nimport {logDebug} from \"./helpers.es6\";\n\nvar idCounter = 0; // To keep <div id=\"\"> unique\n\nclass DonutChart extends React.Component {\n    constructor(props) {\n        super(props);\n        this.domId = `chart-donut-${idCounter++}`;\n    }\n\n    prepareProps(props) {\n        const state = {\n            data: props['data'] ? props['data'] : {},\n            size: props['size'] ? props['size'] : {width: 150, height: 100},\n            width: props['width'] ? props['width'] : 10,\n\n            tooltipText: props['tooltipText'],\n            primaryTitle: props['primaryTitle'],\n            secondaryTitle: props['secondaryTitle'],\n\n            caption: props['caption'] ? props['caption'] : ''\n        };\n        state.data['type'] = 'donut';\n        return state;\n    }\n\n    componentDidMount() {\n        this._renderChart();\n    }\n\n    componentWillUnmount() {\n        this.donutChart.destroy();\n    }\n\n    shouldComponentUpdate(nextProps) {\n        if (this.props['data']) {\n            const result = JSON.stringify(this.props.data.columns) !== JSON.stringify(nextProps.data.columns);\n            logDebug(`shouldComponentUpdate() ${result}\\nold: ${JSON.stringify(this.props.data.columns)}\\nnew: ${JSON.stringify(nextProps.data.columns)}`);\n            return result;\n        }\n\n        return true;\n    }\n\n    _renderChart() {\n        logDebug('DonutChart._render() called');\n        const bindTo = `#${this.domId}`;\n        const c3ChartDefaults = $().c3ChartDefaults();\n        const options = c3ChartDefaults.getDefaultDonutConfig('');\n\n        const props = this.prepareProps(this.props);\n\n        options.bindto = bindTo;\n        options.data = props.data;\n        options.size = props.size;\n        options.donut.width = props.width;\n        options.tooltip = props.tooltipText ? {contents: $().pfGetUtilizationDonutTooltipContentsFn(props.tooltipText)} : options.tooltip;\n\n        try {\n            this.donutChart = c3.generate(options);\n            $().pfSetDonutChartTitle(bindTo, props.primaryTitle, props.secondaryTitle);\n        } catch (err) {\n            logDebug('Exception thrown when rendering donut chart: ', err);\n        }\n    }\n\n    render() {\n        this._renderChart();\n\n        return (<div>\n            <div id={this.domId} />\n            <div className='usage-donut-caption'>{this.props['caption']}</div>\n        </div>);\n    }\n}\n\nexport default DonutChart;\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/machines/c3charts.jsx","(function (window) {\n    'use strict';\n\n    /*global define, module, exports, require */\n\n    var c3 = { version: \"0.4.11\" };\n\n    var c3_chart_fn,\n        c3_chart_internal_fn,\n        c3_chart_internal_axis_fn;\n\n    function API(owner) {\n        this.owner = owner;\n    }\n\n    function inherit(base, derived) {\n\n        if (Object.create) {\n            derived.prototype = Object.create(base.prototype);\n        } else {\n            var f = function f() {};\n            f.prototype = base.prototype;\n            derived.prototype = new f();\n        }\n\n        derived.prototype.constructor = derived;\n\n        return derived;\n    }\n\n    function Chart(config) {\n        var $$ = this.internal = new ChartInternal(this);\n        $$.loadConfig(config);\n\n        $$.beforeInit(config);\n        $$.init();\n        $$.afterInit(config);\n\n        // bind \"this\" to nested API\n        (function bindThis(fn, target, argThis) {\n            Object.keys(fn).forEach(function (key) {\n                target[key] = fn[key].bind(argThis);\n                if (Object.keys(fn[key]).length > 0) {\n                    bindThis(fn[key], target[key], argThis);\n                }\n            });\n        })(c3_chart_fn, this, this);\n    }\n\n    function ChartInternal(api) {\n        var $$ = this;\n        $$.d3 = window.d3 ? window.d3 : typeof require !== 'undefined' ? require(\"d3\") : undefined;\n        $$.api = api;\n        $$.config = $$.getDefaultConfig();\n        $$.data = {};\n        $$.cache = {};\n        $$.axes = {};\n    }\n\n    c3.generate = function (config) {\n        return new Chart(config);\n    };\n\n    c3.chart = {\n        fn: Chart.prototype,\n        internal: {\n            fn: ChartInternal.prototype,\n            axis: {\n                fn: Axis.prototype\n            }\n        }\n    };\n    c3_chart_fn = c3.chart.fn;\n    c3_chart_internal_fn = c3.chart.internal.fn;\n    c3_chart_internal_axis_fn = c3.chart.internal.axis.fn;\n\n    c3_chart_internal_fn.beforeInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.afterInit = function () {\n        // can do something\n    };\n    c3_chart_internal_fn.init = function () {\n        var $$ = this, config = $$.config;\n\n        $$.initParams();\n\n        if (config.data_url) {\n            $$.convertUrlToData(config.data_url, config.data_mimeType, config.data_headers, config.data_keys, $$.initWithData);\n        }\n        else if (config.data_json) {\n            $$.initWithData($$.convertJsonToData(config.data_json, config.data_keys));\n        }\n        else if (config.data_rows) {\n            $$.initWithData($$.convertRowsToData(config.data_rows));\n        }\n        else if (config.data_columns) {\n            $$.initWithData($$.convertColumnsToData(config.data_columns));\n        }\n        else {\n            throw Error('url or json or rows or columns is required.');\n        }\n    };\n\n    c3_chart_internal_fn.initParams = function () {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n\n        // MEMO: clipId needs to be unique because it conflicts when multiple charts exist\n        $$.clipId = \"c3-\" + (+new Date()) + '-clip',\n        $$.clipIdForXAxis = $$.clipId + '-xaxis',\n        $$.clipIdForYAxis = $$.clipId + '-yaxis',\n        $$.clipIdForGrid = $$.clipId + '-grid',\n        $$.clipIdForSubchart = $$.clipId + '-subchart',\n        $$.clipPath = $$.getClipPath($$.clipId),\n        $$.clipPathForXAxis = $$.getClipPath($$.clipIdForXAxis),\n        $$.clipPathForYAxis = $$.getClipPath($$.clipIdForYAxis);\n        $$.clipPathForGrid = $$.getClipPath($$.clipIdForGrid),\n        $$.clipPathForSubchart = $$.getClipPath($$.clipIdForSubchart),\n\n        $$.dragStart = null;\n        $$.dragging = false;\n        $$.flowing = false;\n        $$.cancelClick = false;\n        $$.mouseover = false;\n        $$.transiting = false;\n\n        $$.color = $$.generateColor();\n        $$.levelColor = $$.generateLevelColor();\n\n        $$.dataTimeFormat = config.data_xLocaltime ? d3.time.format : d3.time.format.utc;\n        $$.axisTimeFormat = config.axis_x_localtime ? d3.time.format : d3.time.format.utc;\n        $$.defaultAxisTimeFormat = $$.axisTimeFormat.multi([\n            [\".%L\", function (d) { return d.getMilliseconds(); }],\n            [\":%S\", function (d) { return d.getSeconds(); }],\n            [\"%I:%M\", function (d) { return d.getMinutes(); }],\n            [\"%I %p\", function (d) { return d.getHours(); }],\n            [\"%-m/%-d\", function (d) { return d.getDay() && d.getDate() !== 1; }],\n            [\"%-m/%-d\", function (d) { return d.getDate() !== 1; }],\n            [\"%-m/%-d\", function (d) { return d.getMonth(); }],\n            [\"%Y/%-m/%-d\", function () { return true; }]\n        ]);\n\n        $$.hiddenTargetIds = [];\n        $$.hiddenLegendIds = [];\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n\n        $$.xOrient = config.axis_rotated ? \"left\" : \"bottom\";\n        $$.yOrient = config.axis_rotated ? (config.axis_y_inner ? \"top\" : \"bottom\") : (config.axis_y_inner ? \"right\" : \"left\");\n        $$.y2Orient = config.axis_rotated ? (config.axis_y2_inner ? \"bottom\" : \"top\") : (config.axis_y2_inner ? \"left\" : \"right\");\n        $$.subXOrient = config.axis_rotated ? \"left\" : \"bottom\";\n\n        $$.isLegendRight = config.legend_position === 'right';\n        $$.isLegendInset = config.legend_position === 'inset';\n        $$.isLegendTop = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'top-right';\n        $$.isLegendLeft = config.legend_inset_anchor === 'top-left' || config.legend_inset_anchor === 'bottom-left';\n        $$.legendStep = 0;\n        $$.legendItemWidth = 0;\n        $$.legendItemHeight = 0;\n\n        $$.currentMaxTickWidths = {\n            x: 0,\n            y: 0,\n            y2: 0\n        };\n\n        $$.rotated_padding_left = 30;\n        $$.rotated_padding_right = config.axis_rotated && !config.axis_x_show ? 0 : 30;\n        $$.rotated_padding_top = 5;\n\n        $$.withoutFadeIn = {};\n\n        $$.intervalForObserveInserted = undefined;\n\n        $$.axes.subx = d3.selectAll([]); // needs when excluding subchart.js\n    };\n\n    c3_chart_internal_fn.initChartElements = function () {\n        if (this.initBar) { this.initBar(); }\n        if (this.initLine) { this.initLine(); }\n        if (this.initArc) { this.initArc(); }\n        if (this.initGauge) { this.initGauge(); }\n        if (this.initText) { this.initText(); }\n    };\n\n    c3_chart_internal_fn.initWithData = function (data) {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n        var defs, main, binding = true;\n\n        $$.axis = new Axis($$);\n\n        if ($$.initPie) { $$.initPie(); }\n        if ($$.initBrush) { $$.initBrush(); }\n        if ($$.initZoom) { $$.initZoom(); }\n\n        if (!config.bindto) {\n            $$.selectChart = d3.selectAll([]);\n        }\n        else if (typeof config.bindto.node === 'function') {\n            $$.selectChart = config.bindto;\n        }\n        else {\n            $$.selectChart = d3.select(config.bindto);\n        }\n        if ($$.selectChart.empty()) {\n            $$.selectChart = d3.select(document.createElement('div')).style('opacity', 0);\n            $$.observeInserted($$.selectChart);\n            binding = false;\n        }\n        $$.selectChart.html(\"\").classed(\"c3\", true);\n\n        // Init data as targets\n        $$.data.xs = {};\n        $$.data.targets = $$.convertDataToTargets(data);\n\n        if (config.data_filter) {\n            $$.data.targets = $$.data.targets.filter(config.data_filter);\n        }\n\n        // Set targets to hide if needed\n        if (config.data_hide) {\n            $$.addHiddenTargetIds(config.data_hide === true ? $$.mapToIds($$.data.targets) : config.data_hide);\n        }\n        if (config.legend_hide) {\n            $$.addHiddenLegendIds(config.legend_hide === true ? $$.mapToIds($$.data.targets) : config.legend_hide);\n        }\n\n        // when gauge, hide legend // TODO: fix\n        if ($$.hasType('gauge')) {\n            config.legend_show = false;\n        }\n\n        // Init sizes and scales\n        $$.updateSizes();\n        $$.updateScales();\n\n        // Set domains for each scale\n        $$.x.domain(d3.extent($$.getXDomain($$.data.targets)));\n        $$.y.domain($$.getYDomain($$.data.targets, 'y'));\n        $$.y2.domain($$.getYDomain($$.data.targets, 'y2'));\n        $$.subX.domain($$.x.domain());\n        $$.subY.domain($$.y.domain());\n        $$.subY2.domain($$.y2.domain());\n\n        // Save original x domain for zoom update\n        $$.orgXDomain = $$.x.domain();\n\n        // Set initialized scales to brush and zoom\n        if ($$.brush) { $$.brush.scale($$.subX); }\n        if (config.zoom_enabled) { $$.zoom.scale($$.x); }\n\n        /*-- Basic Elements --*/\n\n        // Define svgs\n        $$.svg = $$.selectChart.append(\"svg\")\n            .style(\"overflow\", \"hidden\")\n            .on('mouseenter', function () { return config.onmouseover.call($$); })\n            .on('mouseleave', function () { return config.onmouseout.call($$); });\n\n        if ($$.config.svg_classname) {\n            $$.svg.attr('class', $$.config.svg_classname);\n        }\n\n        // Define defs\n        defs = $$.svg.append(\"defs\");\n        $$.clipChart = $$.appendClip(defs, $$.clipId);\n        $$.clipXAxis = $$.appendClip(defs, $$.clipIdForXAxis);\n        $$.clipYAxis = $$.appendClip(defs, $$.clipIdForYAxis);\n        $$.clipGrid = $$.appendClip(defs, $$.clipIdForGrid);\n        $$.clipSubchart = $$.appendClip(defs, $$.clipIdForSubchart);\n        $$.updateSvgSize();\n\n        // Define regions\n        main = $$.main = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('main'));\n\n        if ($$.initSubchart) { $$.initSubchart(); }\n        if ($$.initTooltip) { $$.initTooltip(); }\n        if ($$.initLegend) { $$.initLegend(); }\n        if ($$.initTitle) { $$.initTitle(); }\n\n        /*-- Main Region --*/\n\n        // text when empty\n        main.append(\"text\")\n            .attr(\"class\", CLASS.text + ' ' + CLASS.empty)\n            .attr(\"text-anchor\", \"middle\") // horizontal centering of text at x position in all browsers.\n            .attr(\"dominant-baseline\", \"middle\"); // vertical centering of text at y position in all browsers, except IE.\n\n        // Regions\n        $$.initRegion();\n\n        // Grids\n        $$.initGrid();\n\n        // Define g for chart area\n        main.append('g')\n            .attr(\"clip-path\", $$.clipPath)\n            .attr('class', CLASS.chart);\n\n        // Grid lines\n        if (config.grid_lines_front) { $$.initGridLines(); }\n\n        // Cover whole with rects for events\n        $$.initEventRect();\n\n        // Define g for chart\n        $$.initChartElements();\n\n        // if zoom privileged, insert rect to forefront\n        // TODO: is this needed?\n        main.insert('rect', config.zoom_privileged ? null : 'g.' + CLASS.regions)\n            .attr('class', CLASS.zoomRect)\n            .attr('width', $$.width)\n            .attr('height', $$.height)\n            .style('opacity', 0)\n            .on(\"dblclick.zoom\", null);\n\n        // Set default extent if defined\n        if (config.axis_x_extent) { $$.brush.extent($$.getDefaultExtent()); }\n\n        // Add Axis\n        $$.axis.init();\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Draw with targets\n        if (binding) {\n            $$.updateDimension();\n            $$.config.oninit.call($$);\n            $$.redraw({\n                withTransition: false,\n                withTransform: true,\n                withUpdateXDomain: true,\n                withUpdateOrgXDomain: true,\n                withTransitionForAxis: false\n            });\n        }\n\n        // Bind resize event\n        $$.bindResize();\n\n        // export element of the chart\n        $$.api.element = $$.selectChart.node();\n    };\n\n    c3_chart_internal_fn.smoothLines = function (el, type) {\n        var $$ = this;\n        if (type === 'grid') {\n            el.each(function () {\n                var g = $$.d3.select(this),\n                    x1 = g.attr('x1'),\n                    x2 = g.attr('x2'),\n                    y1 = g.attr('y1'),\n                    y2 = g.attr('y2');\n                g.attr({\n                    'x1': Math.ceil(x1),\n                    'x2': Math.ceil(x2),\n                    'y1': Math.ceil(y1),\n                    'y2': Math.ceil(y2)\n                });\n            });\n        }\n    };\n\n\n    c3_chart_internal_fn.updateSizes = function () {\n        var $$ = this, config = $$.config;\n        var legendHeight = $$.legend ? $$.getLegendHeight() : 0,\n            legendWidth = $$.legend ? $$.getLegendWidth() : 0,\n            legendHeightForBottom = $$.isLegendRight || $$.isLegendInset ? 0 : legendHeight,\n            hasArc = $$.hasArcType(),\n            xAxisHeight = config.axis_rotated || hasArc ? 0 : $$.getHorizontalAxisHeight('x'),\n            subchartHeight = config.subchart_show && !hasArc ? (config.subchart_size_height + xAxisHeight) : 0;\n\n        $$.currentWidth = $$.getCurrentWidth();\n        $$.currentHeight = $$.getCurrentHeight();\n\n        // for main\n        $$.margin = config.axis_rotated ? {\n            top: $$.getHorizontalAxisHeight('y2') + $$.getCurrentPaddingTop(),\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: $$.getHorizontalAxisHeight('y') + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: subchartHeight + (hasArc ? 0 : $$.getCurrentPaddingLeft())\n        } : {\n            top: 4 + $$.getCurrentPaddingTop(), // for top tick text\n            right: hasArc ? 0 : $$.getCurrentPaddingRight(),\n            bottom: xAxisHeight + subchartHeight + legendHeightForBottom + $$.getCurrentPaddingBottom(),\n            left: hasArc ? 0 : $$.getCurrentPaddingLeft()\n        };\n\n        // for subchart\n        $$.margin2 = config.axis_rotated ? {\n            top: $$.margin.top,\n            right: NaN,\n            bottom: 20 + legendHeightForBottom,\n            left: $$.rotated_padding_left\n        } : {\n            top: $$.currentHeight - subchartHeight - legendHeightForBottom,\n            right: NaN,\n            bottom: xAxisHeight + legendHeightForBottom,\n            left: $$.margin.left\n        };\n\n        // for legend\n        $$.margin3 = {\n            top: 0,\n            right: NaN,\n            bottom: 0,\n            left: 0\n        };\n        if ($$.updateSizeForLegend) { $$.updateSizeForLegend(legendHeight, legendWidth); }\n\n        $$.width = $$.currentWidth - $$.margin.left - $$.margin.right;\n        $$.height = $$.currentHeight - $$.margin.top - $$.margin.bottom;\n        if ($$.width < 0) { $$.width = 0; }\n        if ($$.height < 0) { $$.height = 0; }\n\n        $$.width2 = config.axis_rotated ? $$.margin.left - $$.rotated_padding_left - $$.rotated_padding_right : $$.width;\n        $$.height2 = config.axis_rotated ? $$.height : $$.currentHeight - $$.margin2.top - $$.margin2.bottom;\n        if ($$.width2 < 0) { $$.width2 = 0; }\n        if ($$.height2 < 0) { $$.height2 = 0; }\n\n        // for arc\n        $$.arcWidth = $$.width - ($$.isLegendRight ? legendWidth + 10 : 0);\n        $$.arcHeight = $$.height - ($$.isLegendRight ? 0 : 10);\n        if ($$.hasType('gauge') && !config.gauge_fullCircle) {\n            $$.arcHeight += $$.height - $$.getGaugeLabelHeight();\n        }\n        if ($$.updateRadius) { $$.updateRadius(); }\n\n        if ($$.isLegendRight && hasArc) {\n            $$.margin3.left = $$.arcWidth / 2 + $$.radiusExpanded * 1.1;\n        }\n    };\n\n    c3_chart_internal_fn.updateTargets = function (targets) {\n        var $$ = this;\n\n        /*-- Main --*/\n\n        //-- Text --//\n        $$.updateTargetsForText(targets);\n\n        //-- Bar --//\n        $$.updateTargetsForBar(targets);\n\n        //-- Line --//\n        $$.updateTargetsForLine(targets);\n\n        //-- Arc --//\n        if ($$.hasArcType() && $$.updateTargetsForArc) { $$.updateTargetsForArc(targets); }\n\n        /*-- Sub --*/\n\n        if ($$.updateTargetsForSubchart) { $$.updateTargetsForSubchart(targets); }\n\n        // Fade-in each chart\n        $$.showTargets();\n    };\n    c3_chart_internal_fn.showTargets = function () {\n        var $$ = this;\n        $$.svg.selectAll('.' + CLASS.target).filter(function (d) { return $$.isTargetToShow(d.id); })\n          .transition().duration($$.config.transition_duration)\n            .style(\"opacity\", 1);\n    };\n\n    c3_chart_internal_fn.redraw = function (options, transitions) {\n        var $$ = this, main = $$.main, d3 = $$.d3, config = $$.config;\n        var areaIndices = $$.getShapeIndices($$.isAreaType), barIndices = $$.getShapeIndices($$.isBarType), lineIndices = $$.getShapeIndices($$.isLineType);\n        var withY, withSubchart, withTransition, withTransitionForExit, withTransitionForAxis,\n            withTransform, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain, withLegend,\n            withEventRect, withDimension, withUpdateXAxis;\n        var hideAxis = $$.hasArcType();\n        var drawArea, drawBar, drawLine, xForText, yForText;\n        var duration, durationForExit, durationForAxis;\n        var waitForDraw, flow;\n        var targetsToShow = $$.filterTargetsToShow($$.data.targets), tickValues, i, intervalForCulling, xDomainForZoom;\n        var xv = $$.xv.bind($$), cx, cy;\n\n        options = options || {};\n        withY = getOption(options, \"withY\", true);\n        withSubchart = getOption(options, \"withSubchart\", true);\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransform = getOption(options, \"withTransform\", false);\n        withUpdateXDomain = getOption(options, \"withUpdateXDomain\", false);\n        withUpdateOrgXDomain = getOption(options, \"withUpdateOrgXDomain\", false);\n        withTrimXDomain = getOption(options, \"withTrimXDomain\", true);\n        withUpdateXAxis = getOption(options, \"withUpdateXAxis\", withUpdateXDomain);\n        withLegend = getOption(options, \"withLegend\", false);\n        withEventRect = getOption(options, \"withEventRect\", true);\n        withDimension = getOption(options, \"withDimension\", true);\n        withTransitionForExit = getOption(options, \"withTransitionForExit\", withTransition);\n        withTransitionForAxis = getOption(options, \"withTransitionForAxis\", withTransition);\n\n        duration = withTransition ? config.transition_duration : 0;\n        durationForExit = withTransitionForExit ? duration : 0;\n        durationForAxis = withTransitionForAxis ? duration : 0;\n\n        transitions = transitions || $$.axis.generateTransitions(durationForAxis);\n\n        // update legend and transform each g\n        if (withLegend && config.legend_show) {\n            $$.updateLegend($$.mapToIds($$.data.targets), options, transitions);\n        } else if (withDimension) {\n            // need to update dimension (e.g. axis.y.tick.values) because y tick values should change\n            // no need to update axis in it because they will be updated in redraw()\n            $$.updateDimension(true);\n        }\n\n        // MEMO: needed for grids calculation\n        if ($$.isCategorized() && targetsToShow.length === 0) {\n            $$.x.domain([0, $$.axes.x.selectAll('.tick').size()]);\n        }\n\n        if (targetsToShow.length) {\n            $$.updateXDomain(targetsToShow, withUpdateXDomain, withUpdateOrgXDomain, withTrimXDomain);\n            if (!config.axis_x_tick_values) {\n                tickValues = $$.axis.updateXAxisTickValues(targetsToShow);\n            }\n        } else {\n            $$.xAxis.tickValues([]);\n            $$.subXAxis.tickValues([]);\n        }\n\n        if (config.zoom_rescale && !options.flow) {\n            xDomainForZoom = $$.x.orgDomain();\n        }\n\n        $$.y.domain($$.getYDomain(targetsToShow, 'y', xDomainForZoom));\n        $$.y2.domain($$.getYDomain(targetsToShow, 'y2', xDomainForZoom));\n\n        if (!config.axis_y_tick_values && config.axis_y_tick_count) {\n            $$.yAxis.tickValues($$.axis.generateTickValues($$.y.domain(), config.axis_y_tick_count));\n        }\n        if (!config.axis_y2_tick_values && config.axis_y2_tick_count) {\n            $$.y2Axis.tickValues($$.axis.generateTickValues($$.y2.domain(), config.axis_y2_tick_count));\n        }\n\n        // axes\n        $$.axis.redraw(transitions, hideAxis);\n\n        // Update axis label\n        $$.axis.updateLabels(withTransition);\n\n        // show/hide if manual culling needed\n        if ((withUpdateXDomain || withUpdateXAxis) && targetsToShow.length) {\n            if (config.axis_x_tick_culling && tickValues) {\n                for (i = 1; i < tickValues.length; i++) {\n                    if (tickValues.length / i < config.axis_x_tick_culling_max) {\n                        intervalForCulling = i;\n                        break;\n                    }\n                }\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').each(function (e) {\n                    var index = tickValues.indexOf(e);\n                    if (index >= 0) {\n                        d3.select(this).style('display', index % intervalForCulling ? 'none' : 'block');\n                    }\n                });\n            } else {\n                $$.svg.selectAll('.' + CLASS.axisX + ' .tick text').style('display', 'block');\n            }\n        }\n\n        // setup drawer - MEMO: these must be called after axis updated\n        drawArea = $$.generateDrawArea ? $$.generateDrawArea(areaIndices, false) : undefined;\n        drawBar = $$.generateDrawBar ? $$.generateDrawBar(barIndices) : undefined;\n        drawLine = $$.generateDrawLine ? $$.generateDrawLine(lineIndices, false) : undefined;\n        xForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, true);\n        yForText = $$.generateXYForText(areaIndices, barIndices, lineIndices, false);\n\n        // Update sub domain\n        if (withY) {\n            $$.subY.domain($$.getYDomain(targetsToShow, 'y'));\n            $$.subY2.domain($$.getYDomain(targetsToShow, 'y2'));\n        }\n\n        // xgrid focus\n        $$.updateXgridFocus();\n\n        // Data empty label positioning and text.\n        main.select(\"text.\" + CLASS.text + '.' + CLASS.empty)\n            .attr(\"x\", $$.width / 2)\n            .attr(\"y\", $$.height / 2)\n            .text(config.data_empty_label_text)\n          .transition()\n            .style('opacity', targetsToShow.length ? 0 : 1);\n\n        // grid\n        $$.updateGrid(duration);\n\n        // rect for regions\n        $$.updateRegion(duration);\n\n        // bars\n        $$.updateBar(durationForExit);\n\n        // lines, areas and cricles\n        $$.updateLine(durationForExit);\n        $$.updateArea(durationForExit);\n        $$.updateCircle();\n\n        // text\n        if ($$.hasDataLabel()) {\n            $$.updateText(durationForExit);\n        }\n\n        // title\n        if ($$.redrawTitle) { $$.redrawTitle(); }\n\n        // arc\n        if ($$.redrawArc) { $$.redrawArc(duration, durationForExit, withTransform); }\n\n        // subchart\n        if ($$.redrawSubchart) {\n            $$.redrawSubchart(withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices);\n        }\n\n        // circles for select\n        main.selectAll('.' + CLASS.selectedCircles)\n            .filter($$.isBarType.bind($$))\n            .selectAll('circle')\n            .remove();\n\n        // event rects will redrawn when flow called\n        if (config.interaction_enabled && !options.flow && withEventRect) {\n            $$.redrawEventRect();\n            if ($$.updateZoom) { $$.updateZoom(); }\n        }\n\n        // update circleY based on updated parameters\n        $$.updateCircleY();\n\n        // generate circle x/y functions depending on updated params\n        cx = ($$.config.axis_rotated ? $$.circleY : $$.circleX).bind($$);\n        cy = ($$.config.axis_rotated ? $$.circleX : $$.circleY).bind($$);\n\n        if (options.flow) {\n            flow = $$.generateFlow({\n                targets: targetsToShow,\n                flow: options.flow,\n                duration: options.flow.duration,\n                drawBar: drawBar,\n                drawLine: drawLine,\n                drawArea: drawArea,\n                cx: cx,\n                cy: cy,\n                xv: xv,\n                xForText: xForText,\n                yForText: yForText\n            });\n        }\n\n        if ((duration || flow) && $$.isTabVisible()) { // Only use transition if tab visible. See #938.\n            // transition should be derived from one transition\n            d3.transition().duration(duration).each(function () {\n                var transitionsToWait = [];\n\n                // redraw and gather transitions\n                [\n                    $$.redrawBar(drawBar, true),\n                    $$.redrawLine(drawLine, true),\n                    $$.redrawArea(drawArea, true),\n                    $$.redrawCircle(cx, cy, true),\n                    $$.redrawText(xForText, yForText, options.flow, true),\n                    $$.redrawRegion(true),\n                    $$.redrawGrid(true),\n                ].forEach(function (transitions) {\n                    transitions.forEach(function (transition) {\n                        transitionsToWait.push(transition);\n                    });\n                });\n\n                // Wait for end of transitions to call flow and onrendered callback\n                waitForDraw = $$.generateWait();\n                transitionsToWait.forEach(function (t) {\n                    waitForDraw.add(t);\n                });\n            })\n            .call(waitForDraw, function () {\n                if (flow) {\n                    flow();\n                }\n                if (config.onrendered) {\n                    config.onrendered.call($$);\n                }\n            });\n        }\n        else {\n            $$.redrawBar(drawBar);\n            $$.redrawLine(drawLine);\n            $$.redrawArea(drawArea);\n            $$.redrawCircle(cx, cy);\n            $$.redrawText(xForText, yForText, options.flow);\n            $$.redrawRegion();\n            $$.redrawGrid();\n            if (config.onrendered) {\n                config.onrendered.call($$);\n            }\n        }\n\n        // update fadein condition\n        $$.mapToIds($$.data.targets).forEach(function (id) {\n            $$.withoutFadeIn[id] = true;\n        });\n    };\n\n    c3_chart_internal_fn.updateAndRedraw = function (options) {\n        var $$ = this, config = $$.config, transitions;\n        options = options || {};\n        // same with redraw\n        options.withTransition = getOption(options, \"withTransition\", true);\n        options.withTransform = getOption(options, \"withTransform\", false);\n        options.withLegend = getOption(options, \"withLegend\", false);\n        // NOT same with redraw\n        options.withUpdateXDomain = true;\n        options.withUpdateOrgXDomain = true;\n        options.withTransitionForExit = false;\n        options.withTransitionForTransform = getOption(options, \"withTransitionForTransform\", options.withTransition);\n        // MEMO: this needs to be called before updateLegend and it means this ALWAYS needs to be called)\n        $$.updateSizes();\n        // MEMO: called in updateLegend in redraw if withLegend\n        if (!(options.withLegend && config.legend_show)) {\n            transitions = $$.axis.generateTransitions(options.withTransitionForAxis ? config.transition_duration : 0);\n            // Update scales\n            $$.updateScales();\n            $$.updateSvgSize();\n            // Update g positions\n            $$.transformAll(options.withTransitionForTransform, transitions);\n        }\n        // Draw with new sizes & scales\n        $$.redraw(options, transitions);\n    };\n    c3_chart_internal_fn.redrawWithoutRescale = function () {\n        this.redraw({\n            withY: false,\n            withSubchart: false,\n            withEventRect: false,\n            withTransitionForAxis: false\n        });\n    };\n\n    c3_chart_internal_fn.isTimeSeries = function () {\n        return this.config.axis_x_type === 'timeseries';\n    };\n    c3_chart_internal_fn.isCategorized = function () {\n        return this.config.axis_x_type.indexOf('categor') >= 0;\n    };\n    c3_chart_internal_fn.isCustomX = function () {\n        var $$ = this, config = $$.config;\n        return !$$.isTimeSeries() && (config.data_x || notEmpty(config.data_xs));\n    };\n\n    c3_chart_internal_fn.isTimeSeriesY = function () {\n        return this.config.axis_y_type === 'timeseries';\n    };\n\n    c3_chart_internal_fn.getTranslate = function (target) {\n        var $$ = this, config = $$.config, x, y;\n        if (target === 'main') {\n            x = asHalfPixel($$.margin.left);\n            y = asHalfPixel($$.margin.top);\n        } else if (target === 'context') {\n            x = asHalfPixel($$.margin2.left);\n            y = asHalfPixel($$.margin2.top);\n        } else if (target === 'legend') {\n            x = $$.margin3.left;\n            y = $$.margin3.top;\n        } else if (target === 'x') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height;\n        } else if (target === 'y') {\n            x = 0;\n            y = config.axis_rotated ? $$.height : 0;\n        } else if (target === 'y2') {\n            x = config.axis_rotated ? 0 : $$.width;\n            y = config.axis_rotated ? 1 : 0;\n        } else if (target === 'subx') {\n            x = 0;\n            y = config.axis_rotated ? 0 : $$.height2;\n        } else if (target === 'arc') {\n            x = $$.arcWidth / 2;\n            y = $$.arcHeight / 2;\n        }\n        return \"translate(\" + x + \",\" + y + \")\";\n    };\n    c3_chart_internal_fn.initialOpacity = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? 1 : 0;\n    };\n    c3_chart_internal_fn.initialOpacityForCircle = function (d) {\n        return d.value !== null && this.withoutFadeIn[d.id] ? this.opacityForCircle(d) : 0;\n    };\n    c3_chart_internal_fn.opacityForCircle = function (d) {\n        var opacity = this.config.point_show ? 1 : 0;\n        return isValue(d.value) ? (this.isScatterType(d) ? 0.5 : opacity) : 0;\n    };\n    c3_chart_internal_fn.opacityForText = function () {\n        return this.hasDataLabel() ? 1 : 0;\n    };\n    c3_chart_internal_fn.xx = function (d) {\n        return d ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.xv = function (d) {\n        var $$ = this, value = d.value;\n        if ($$.isTimeSeries()) {\n            value = $$.parseDate(d.value);\n        }\n        else if ($$.isCategorized() && typeof d.value === 'string') {\n            value = $$.config.axis_x_categories.indexOf(d.value);\n        }\n        return Math.ceil($$.x(value));\n    };\n    c3_chart_internal_fn.yv = function (d) {\n        var $$ = this,\n            yScale = d.axis && d.axis === 'y2' ? $$.y2 : $$.y;\n        return Math.ceil(yScale(d.value));\n    };\n    c3_chart_internal_fn.subxx = function (d) {\n        return d ? this.subX(d.x) : null;\n    };\n\n    c3_chart_internal_fn.transformMain = function (withTransition, transitions) {\n        var $$ = this,\n            xAxis, yAxis, y2Axis;\n        if (transitions && transitions.axisX) {\n            xAxis = transitions.axisX;\n        } else {\n            xAxis  = $$.main.select('.' + CLASS.axisX);\n            if (withTransition) { xAxis = xAxis.transition(); }\n        }\n        if (transitions && transitions.axisY) {\n            yAxis = transitions.axisY;\n        } else {\n            yAxis = $$.main.select('.' + CLASS.axisY);\n            if (withTransition) { yAxis = yAxis.transition(); }\n        }\n        if (transitions && transitions.axisY2) {\n            y2Axis = transitions.axisY2;\n        } else {\n            y2Axis = $$.main.select('.' + CLASS.axisY2);\n            if (withTransition) { y2Axis = y2Axis.transition(); }\n        }\n        (withTransition ? $$.main.transition() : $$.main).attr(\"transform\", $$.getTranslate('main'));\n        xAxis.attr(\"transform\", $$.getTranslate('x'));\n        yAxis.attr(\"transform\", $$.getTranslate('y'));\n        y2Axis.attr(\"transform\", $$.getTranslate('y2'));\n        $$.main.select('.' + CLASS.chartArcs).attr(\"transform\", $$.getTranslate('arc'));\n    };\n    c3_chart_internal_fn.transformAll = function (withTransition, transitions) {\n        var $$ = this;\n        $$.transformMain(withTransition, transitions);\n        if ($$.config.subchart_show) { $$.transformContext(withTransition, transitions); }\n        if ($$.legend) { $$.transformLegend(withTransition); }\n    };\n\n    c3_chart_internal_fn.updateSvgSize = function () {\n        var $$ = this,\n            brush = $$.svg.select(\".c3-brush .background\");\n        $$.svg.attr('width', $$.currentWidth).attr('height', $$.currentHeight);\n        $$.svg.selectAll(['#' + $$.clipId, '#' + $$.clipIdForGrid]).select('rect')\n            .attr('width', $$.width)\n            .attr('height', $$.height);\n        $$.svg.select('#' + $$.clipIdForXAxis).select('rect')\n            .attr('x', $$.getXAxisClipX.bind($$))\n            .attr('y', $$.getXAxisClipY.bind($$))\n            .attr('width', $$.getXAxisClipWidth.bind($$))\n            .attr('height', $$.getXAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForYAxis).select('rect')\n            .attr('x', $$.getYAxisClipX.bind($$))\n            .attr('y', $$.getYAxisClipY.bind($$))\n            .attr('width', $$.getYAxisClipWidth.bind($$))\n            .attr('height', $$.getYAxisClipHeight.bind($$));\n        $$.svg.select('#' + $$.clipIdForSubchart).select('rect')\n            .attr('width', $$.width)\n            .attr('height', brush.size() ? brush.attr('height') : 0);\n        $$.svg.select('.' + CLASS.zoomRect)\n            .attr('width', $$.width)\n            .attr('height', $$.height);\n        // MEMO: parent div's height will be bigger than svg when <!DOCTYPE html>\n        $$.selectChart.style('max-height', $$.currentHeight + \"px\");\n    };\n\n\n    c3_chart_internal_fn.updateDimension = function (withoutAxis) {\n        var $$ = this;\n        if (!withoutAxis) {\n            if ($$.config.axis_rotated) {\n                $$.axes.x.call($$.xAxis);\n                $$.axes.subx.call($$.subXAxis);\n            } else {\n                $$.axes.y.call($$.yAxis);\n                $$.axes.y2.call($$.y2Axis);\n            }\n        }\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        $$.transformAll(false);\n    };\n\n    c3_chart_internal_fn.observeInserted = function (selection) {\n        var $$ = this, observer;\n        if (typeof MutationObserver === 'undefined') {\n            window.console.error(\"MutationObserver not defined.\");\n            return;\n        }\n        observer= new MutationObserver(function (mutations) {\n            mutations.forEach(function (mutation) {\n                if (mutation.type === 'childList' && mutation.previousSibling) {\n                    observer.disconnect();\n                    // need to wait for completion of load because size calculation requires the actual sizes determined after that completion\n                    $$.intervalForObserveInserted = window.setInterval(function () {\n                        // parentNode will NOT be null when completed\n                        if (selection.node().parentNode) {\n                            window.clearInterval($$.intervalForObserveInserted);\n                            $$.updateDimension();\n                            if ($$.brush) { $$.brush.update(); }\n                            $$.config.oninit.call($$);\n                            $$.redraw({\n                                withTransform: true,\n                                withUpdateXDomain: true,\n                                withUpdateOrgXDomain: true,\n                                withTransition: false,\n                                withTransitionForTransform: false,\n                                withLegend: true\n                            });\n                            selection.transition().style('opacity', 1);\n                        }\n                    }, 10);\n                }\n            });\n        });\n        observer.observe(selection.node(), {attributes: true, childList: true, characterData: true});\n    };\n\n    c3_chart_internal_fn.bindResize = function () {\n        var $$ = this, config = $$.config;\n\n        $$.resizeFunction = $$.generateResize();\n\n        $$.resizeFunction.add(function () {\n            config.onresize.call($$);\n        });\n        if (config.resize_auto) {\n            $$.resizeFunction.add(function () {\n                if ($$.resizeTimeout !== undefined) {\n                    window.clearTimeout($$.resizeTimeout);\n                }\n                $$.resizeTimeout = window.setTimeout(function () {\n                    delete $$.resizeTimeout;\n                    $$.api.flush();\n                }, 100);\n            });\n        }\n        $$.resizeFunction.add(function () {\n            config.onresized.call($$);\n        });\n\n        if (window.attachEvent) {\n            window.attachEvent('onresize', $$.resizeFunction);\n        } else if (window.addEventListener) {\n            window.addEventListener('resize', $$.resizeFunction, false);\n        } else {\n            // fallback to this, if this is a very old browser\n            var wrapper = window.onresize;\n            if (!wrapper) {\n                // create a wrapper that will call all charts\n                wrapper = $$.generateResize();\n            } else if (!wrapper.add || !wrapper.remove) {\n                // there is already a handler registered, make sure we call it too\n                wrapper = $$.generateResize();\n                wrapper.add(window.onresize);\n            }\n            // add this graph to the wrapper, we will be removed if the user calls destroy\n            wrapper.add($$.resizeFunction);\n            window.onresize = wrapper;\n        }\n    };\n\n    c3_chart_internal_fn.generateResize = function () {\n        var resizeFunctions = [];\n        function callResizeFunctions() {\n            resizeFunctions.forEach(function (f) {\n                f();\n            });\n        }\n        callResizeFunctions.add = function (f) {\n            resizeFunctions.push(f);\n        };\n        callResizeFunctions.remove = function (f) {\n            for (var i = 0; i < resizeFunctions.length; i++) {\n                if (resizeFunctions[i] === f) {\n                    resizeFunctions.splice(i, 1);\n                    break;\n                }\n            }\n        };\n        return callResizeFunctions;\n    };\n\n    c3_chart_internal_fn.endall = function (transition, callback) {\n        var n = 0;\n        transition\n            .each(function () { ++n; })\n            .each(\"end\", function () {\n                if (!--n) { callback.apply(this, arguments); }\n            });\n    };\n    c3_chart_internal_fn.generateWait = function () {\n        var transitionsToWait = [],\n            f = function (transition, callback) {\n                var timer = setInterval(function () {\n                    var done = 0;\n                    transitionsToWait.forEach(function (t) {\n                        if (t.empty()) {\n                            done += 1;\n                            return;\n                        }\n                        try {\n                            t.transition();\n                        } catch (e) {\n                            done += 1;\n                        }\n                    });\n                    if (done === transitionsToWait.length) {\n                        clearInterval(timer);\n                        if (callback) { callback(); }\n                    }\n                }, 10);\n            };\n        f.add = function (transition) {\n            transitionsToWait.push(transition);\n        };\n        return f;\n    };\n\n    c3_chart_internal_fn.parseDate = function (date) {\n        var $$ = this, parsedDate;\n        if (date instanceof Date) {\n            parsedDate = date;\n        } else if (typeof date === 'string') {\n            parsedDate = $$.dataTimeFormat($$.config.data_xFormat).parse(date);\n        } else if (typeof date === 'number' && !isNaN(date)) {\n            parsedDate = new Date(+date);\n        }\n        if (!parsedDate || isNaN(+parsedDate)) {\n            window.console.error(\"Failed to parse x '\" + date + \"' to Date object\");\n        }\n        return parsedDate;\n    };\n\n    c3_chart_internal_fn.isTabVisible = function () {\n        var hidden;\n        if (typeof document.hidden !== \"undefined\") { // Opera 12.10 and Firefox 18 and later support\n            hidden = \"hidden\";\n        } else if (typeof document.mozHidden !== \"undefined\") {\n            hidden = \"mozHidden\";\n        } else if (typeof document.msHidden !== \"undefined\") {\n            hidden = \"msHidden\";\n        } else if (typeof document.webkitHidden !== \"undefined\") {\n            hidden = \"webkitHidden\";\n        }\n\n        return document[hidden] ? false : true;\n    };\n\n    c3_chart_internal_fn.getDefaultConfig = function () {\n        var config = {\n            bindto: '#chart',\n            svg_classname: undefined,\n            size_width: undefined,\n            size_height: undefined,\n            padding_left: undefined,\n            padding_right: undefined,\n            padding_top: undefined,\n            padding_bottom: undefined,\n            resize_auto: true,\n            zoom_enabled: false,\n            zoom_extent: undefined,\n            zoom_privileged: false,\n            zoom_rescale: false,\n            zoom_onzoom: function () {},\n            zoom_onzoomstart: function () {},\n            zoom_onzoomend: function () {},\n            zoom_x_min: undefined,\n            zoom_x_max: undefined,\n            interaction_brighten: true,\n            interaction_enabled: true,\n            onmouseover: function () {},\n            onmouseout: function () {},\n            onresize: function () {},\n            onresized: function () {},\n            oninit: function () {},\n            onrendered: function () {},\n            transition_duration: 350,\n            data_x: undefined,\n            data_xs: {},\n            data_xFormat: '%Y-%m-%d',\n            data_xLocaltime: true,\n            data_xSort: true,\n            data_idConverter: function (id) { return id; },\n            data_names: {},\n            data_classes: {},\n            data_groups: [],\n            data_axes: {},\n            data_type: undefined,\n            data_types: {},\n            data_labels: {},\n            data_order: 'desc',\n            data_regions: {},\n            data_color: undefined,\n            data_colors: {},\n            data_hide: false,\n            data_filter: undefined,\n            data_selection_enabled: false,\n            data_selection_grouped: false,\n            data_selection_isselectable: function () { return true; },\n            data_selection_multiple: true,\n            data_selection_draggable: false,\n            data_onclick: function () {},\n            data_onmouseover: function () {},\n            data_onmouseout: function () {},\n            data_onselected: function () {},\n            data_onunselected: function () {},\n            data_url: undefined,\n            data_headers: undefined,\n            data_json: undefined,\n            data_rows: undefined,\n            data_columns: undefined,\n            data_mimeType: undefined,\n            data_keys: undefined,\n            // configuration for no plot-able data supplied.\n            data_empty_label_text: \"\",\n            // subchart\n            subchart_show: false,\n            subchart_size_height: 60,\n            subchart_axis_x_show: true,\n            subchart_onbrush: function () {},\n            // color\n            color_pattern: [],\n            color_threshold: {},\n            // legend\n            legend_show: true,\n            legend_hide: false,\n            legend_position: 'bottom',\n            legend_inset_anchor: 'top-left',\n            legend_inset_x: 10,\n            legend_inset_y: 0,\n            legend_inset_step: undefined,\n            legend_item_onclick: undefined,\n            legend_item_onmouseover: undefined,\n            legend_item_onmouseout: undefined,\n            legend_equally: false,\n            legend_padding: 0,\n            legend_item_tile_width: 10,\n            legend_item_tile_height: 10,\n            // axis\n            axis_rotated: false,\n            axis_x_show: true,\n            axis_x_type: 'indexed',\n            axis_x_localtime: true,\n            axis_x_categories: [],\n            axis_x_tick_centered: false,\n            axis_x_tick_format: undefined,\n            axis_x_tick_culling: {},\n            axis_x_tick_culling_max: 10,\n            axis_x_tick_count: undefined,\n            axis_x_tick_fit: true,\n            axis_x_tick_values: null,\n            axis_x_tick_rotate: 0,\n            axis_x_tick_outer: true,\n            axis_x_tick_multiline: true,\n            axis_x_tick_width: null,\n            axis_x_max: undefined,\n            axis_x_min: undefined,\n            axis_x_padding: {},\n            axis_x_height: undefined,\n            axis_x_extent: undefined,\n            axis_x_label: {},\n            axis_y_show: true,\n            axis_y_type: undefined,\n            axis_y_max: undefined,\n            axis_y_min: undefined,\n            axis_y_inverted: false,\n            axis_y_center: undefined,\n            axis_y_inner: undefined,\n            axis_y_label: {},\n            axis_y_tick_format: undefined,\n            axis_y_tick_outer: true,\n            axis_y_tick_values: null,        \n            axis_y_tick_rotate: 0,\n            axis_y_tick_count: undefined,\n            axis_y_tick_time_value: undefined,\n            axis_y_tick_time_interval: undefined,\n            axis_y_padding: {},\n            axis_y_default: undefined,\n            axis_y2_show: false,\n            axis_y2_max: undefined,\n            axis_y2_min: undefined,\n            axis_y2_inverted: false,\n            axis_y2_center: undefined,\n            axis_y2_inner: undefined,\n            axis_y2_label: {},\n            axis_y2_tick_format: undefined,\n            axis_y2_tick_outer: true,\n            axis_y2_tick_values: null,\n            axis_y2_tick_count: undefined,\n            axis_y2_padding: {},\n            axis_y2_default: undefined,\n            // grid\n            grid_x_show: false,\n            grid_x_type: 'tick',\n            grid_x_lines: [],\n            grid_y_show: false,\n            // not used\n            // grid_y_type: 'tick',\n            grid_y_lines: [],\n            grid_y_ticks: 10,\n            grid_focus_show: true,\n            grid_lines_front: true,\n            // point - point of each data\n            point_show: true,\n            point_r: 2.5,\n            point_sensitivity: 10,\n            point_focus_expand_enabled: true,\n            point_focus_expand_r: undefined,\n            point_select_r: undefined,\n            // line\n            line_connectNull: false,\n            line_step_type: 'step',\n            // bar\n            bar_width: undefined,\n            bar_width_ratio: 0.6,\n            bar_width_max: undefined,\n            bar_zerobased: true,\n            // area\n            area_zerobased: true,\n            area_above: false,\n            // pie\n            pie_label_show: true,\n            pie_label_format: undefined,\n            pie_label_threshold: 0.05,\n            pie_label_ratio: undefined,\n            pie_expand: {},\n            pie_expand_duration: 50,\n            // gauge\n            gauge_fullCircle: false,\n            gauge_label_show: true,\n            gauge_label_format: undefined,\n            gauge_min: 0,\n            gauge_max: 100,\n            gauge_startingAngle: -1 * Math.PI/2,\n            gauge_units: undefined,\n            gauge_width: undefined,\n            gauge_expand: {},\n            gauge_expand_duration: 50,\n            // donut\n            donut_label_show: true,\n            donut_label_format: undefined,\n            donut_label_threshold: 0.05,\n            donut_label_ratio: undefined,\n            donut_width: undefined,\n            donut_title: \"\",\n            donut_expand: {},\n            donut_expand_duration: 50,\n            // spline\n            spline_interpolation_type: 'cardinal',\n            // region - region to change style\n            regions: [],\n            // tooltip - show when mouseover on each data\n            tooltip_show: true,\n            tooltip_grouped: true,\n            tooltip_format_title: undefined,\n            tooltip_format_name: undefined,\n            tooltip_format_value: undefined,\n            tooltip_position: undefined,\n            tooltip_contents: function (d, defaultTitleFormat, defaultValueFormat, color) {\n                return this.getTooltipContent ? this.getTooltipContent(d, defaultTitleFormat, defaultValueFormat, color) : '';\n            },\n            tooltip_init_show: false,\n            tooltip_init_x: 0,\n            tooltip_init_position: {top: '0px', left: '50px'},\n            tooltip_onshow: function () {},\n            tooltip_onhide: function () {},\n            // title\n            title_text: undefined,\n            title_padding: {\n                top: 0,\n                right: 0,\n                bottom: 0,\n                left: 0\n            },\n            title_position: 'top-center',\n        };\n\n        Object.keys(this.additionalConfig).forEach(function (key) {\n            config[key] = this.additionalConfig[key];\n        }, this);\n\n        return config;\n    };\n    c3_chart_internal_fn.additionalConfig = {};\n\n    c3_chart_internal_fn.loadConfig = function (config) {\n        var this_config = this.config, target, keys, read;\n        function find() {\n            var key = keys.shift();\n    //        console.log(\"key =>\", key, \", target =>\", target);\n            if (key && target && typeof target === 'object' && key in target) {\n                target = target[key];\n                return find();\n            }\n            else if (!key) {\n                return target;\n            }\n            else {\n                return undefined;\n            }\n        }\n        Object.keys(this_config).forEach(function (key) {\n            target = config;\n            keys = key.split('_');\n            read = find();\n    //        console.log(\"CONFIG : \", key, read);\n            if (isDefined(read)) {\n                this_config[key] = read;\n            }\n        });\n    };\n\n    c3_chart_internal_fn.getScale = function (min, max, forTimeseries) {\n        return (forTimeseries ? this.d3.time.scale() : this.d3.scale.linear()).range([min, max]);\n    };\n    c3_chart_internal_fn.getX = function (min, max, domain, offset) {\n        var $$ = this,\n            scale = $$.getScale(min, max, $$.isTimeSeries()),\n            _scale = domain ? scale.domain(domain) : scale, key;\n        // Define customized scale if categorized axis\n        if ($$.isCategorized()) {\n            offset = offset || function () { return 0; };\n            scale = function (d, raw) {\n                var v = _scale(d) + offset(d);\n                return raw ? v : Math.ceil(v);\n            };\n        } else {\n            scale = function (d, raw) {\n                var v = _scale(d);\n                return raw ? v : Math.ceil(v);\n            };\n        }\n        // define functions\n        for (key in _scale) {\n            scale[key] = _scale[key];\n        }\n        scale.orgDomain = function () {\n            return _scale.domain();\n        };\n        // define custom domain() for categorized axis\n        if ($$.isCategorized()) {\n            scale.domain = function (domain) {\n                if (!arguments.length) {\n                    domain = this.orgDomain();\n                    return [domain[0], domain[1] + 1];\n                }\n                _scale.domain(domain);\n                return scale;\n            };\n        }\n        return scale;\n    };\n    c3_chart_internal_fn.getY = function (min, max, domain) {\n        var scale = this.getScale(min, max, this.isTimeSeriesY());\n        if (domain) { scale.domain(domain); }\n        return scale;\n    };\n    c3_chart_internal_fn.getYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.y2 : this.y;\n    };\n    c3_chart_internal_fn.getSubYScale = function (id) {\n        return this.axis.getId(id) === 'y2' ? this.subY2 : this.subY;\n    };\n    c3_chart_internal_fn.updateScales = function () {\n        var $$ = this, config = $$.config,\n            forInit = !$$.x;\n        // update edges\n        $$.xMin = config.axis_rotated ? 1 : 0;\n        $$.xMax = config.axis_rotated ? $$.height : $$.width;\n        $$.yMin = config.axis_rotated ? 0 : $$.height;\n        $$.yMax = config.axis_rotated ? $$.width : 1;\n        $$.subXMin = $$.xMin;\n        $$.subXMax = $$.xMax;\n        $$.subYMin = config.axis_rotated ? 0 : $$.height2;\n        $$.subYMax = config.axis_rotated ? $$.width2 : 1;\n        // update scales\n        $$.x = $$.getX($$.xMin, $$.xMax, forInit ? undefined : $$.x.orgDomain(), function () { return $$.xAxis.tickOffset(); });\n        $$.y = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y_default : $$.y.domain());\n        $$.y2 = $$.getY($$.yMin, $$.yMax, forInit ? config.axis_y2_default : $$.y2.domain());\n        $$.subX = $$.getX($$.xMin, $$.xMax, $$.orgXDomain, function (d) { return d % 1 ? 0 : $$.subXAxis.tickOffset(); });\n        $$.subY = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y_default : $$.subY.domain());\n        $$.subY2 = $$.getY($$.subYMin, $$.subYMax, forInit ? config.axis_y2_default : $$.subY2.domain());\n        // update axes\n        $$.xAxisTickFormat = $$.axis.getXAxisTickFormat();\n        $$.xAxisTickValues = $$.axis.getXAxisTickValues();\n        $$.yAxisTickValues = $$.axis.getYAxisTickValues();\n        $$.y2AxisTickValues = $$.axis.getY2AxisTickValues();\n\n        $$.xAxis = $$.axis.getXAxis($$.x, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.subXAxis = $$.axis.getXAxis($$.subX, $$.subXOrient, $$.xAxisTickFormat, $$.xAxisTickValues, config.axis_x_tick_outer);\n        $$.yAxis = $$.axis.getYAxis($$.y, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, config.axis_y_tick_outer);\n        $$.y2Axis = $$.axis.getYAxis($$.y2, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, config.axis_y2_tick_outer);\n\n        // Set initialized scales to brush and zoom\n        if (!forInit) {\n            if ($$.brush) { $$.brush.scale($$.subX); }\n            if (config.zoom_enabled) { $$.zoom.scale($$.x); }\n        }\n        // update for arc\n        if ($$.updateArc) { $$.updateArc(); }\n    };\n\n    c3_chart_internal_fn.getYDomainMin = function (targets) {\n        var $$ = this, config = $$.config,\n            ids = $$.mapToIds(targets), ys = $$.getValuesAsIdKeyed(targets),\n            j, k, baseId, idsInGroup, id, hasNegativeValue;\n        if (config.data_groups.length > 0) {\n            hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) { return ids.indexOf(id) >= 0; });\n                if (idsInGroup.length === 0) { continue; }\n                baseId = idsInGroup[0];\n                // Consider negative values\n                if (hasNegativeValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v < 0 ? v : 0;\n                    });\n                }\n                // Compute min\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (! ys[id]) { continue; }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasNegativeValue && +v > 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.min(Object.keys(ys).map(function (key) { return $$.d3.min(ys[key]); }));\n    };\n    c3_chart_internal_fn.getYDomainMax = function (targets) {\n        var $$ = this, config = $$.config,\n            ids = $$.mapToIds(targets), ys = $$.getValuesAsIdKeyed(targets),\n            j, k, baseId, idsInGroup, id, hasPositiveValue;\n        if (config.data_groups.length > 0) {\n            hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n            for (j = 0; j < config.data_groups.length; j++) {\n                // Determine baseId\n                idsInGroup = config.data_groups[j].filter(function (id) { return ids.indexOf(id) >= 0; });\n                if (idsInGroup.length === 0) { continue; }\n                baseId = idsInGroup[0];\n                // Consider positive values\n                if (hasPositiveValue && ys[baseId]) {\n                    ys[baseId].forEach(function (v, i) {\n                        ys[baseId][i] = v > 0 ? v : 0;\n                    });\n                }\n                // Compute max\n                for (k = 1; k < idsInGroup.length; k++) {\n                    id = idsInGroup[k];\n                    if (! ys[id]) { continue; }\n                    ys[id].forEach(function (v, i) {\n                        if ($$.axis.getId(id) === $$.axis.getId(baseId) && ys[baseId] && !(hasPositiveValue && +v < 0)) {\n                            ys[baseId][i] += +v;\n                        }\n                    });\n                }\n            }\n        }\n        return $$.d3.max(Object.keys(ys).map(function (key) { return $$.d3.max(ys[key]); }));\n    };\n    c3_chart_internal_fn.getYDomain = function (targets, axisId, xDomain) {\n        var $$ = this, config = $$.config,\n            targetsByAxisId = targets.filter(function (t) { return $$.axis.getId(t.id) === axisId; }),\n            yTargets = xDomain ? $$.filterByXDomain(targetsByAxisId, xDomain) : targetsByAxisId,\n            yMin = axisId === 'y2' ? config.axis_y2_min : config.axis_y_min,\n            yMax = axisId === 'y2' ? config.axis_y2_max : config.axis_y_max,\n            yDomainMin = $$.getYDomainMin(yTargets),\n            yDomainMax = $$.getYDomainMax(yTargets),\n            domain, domainLength, padding, padding_top, padding_bottom,\n            center = axisId === 'y2' ? config.axis_y2_center : config.axis_y_center,\n            yDomainAbs, lengths, diff, ratio, isAllPositive, isAllNegative,\n            isZeroBased = ($$.hasType('bar', yTargets) && config.bar_zerobased) || ($$.hasType('area', yTargets) && config.area_zerobased),\n            isInverted = axisId === 'y2' ? config.axis_y2_inverted : config.axis_y_inverted,\n            showHorizontalDataLabel = $$.hasDataLabel() && config.axis_rotated,\n            showVerticalDataLabel = $$.hasDataLabel() && !config.axis_rotated;\n\n        // MEMO: avoid inverting domain unexpectedly\n        yDomainMin = isValue(yMin) ? yMin : isValue(yMax) ? (yDomainMin < yMax ? yDomainMin : yMax - 10) : yDomainMin;\n        yDomainMax = isValue(yMax) ? yMax : isValue(yMin) ? (yMin < yDomainMax ? yDomainMax : yMin + 10) : yDomainMax;\n\n        if (yTargets.length === 0) { // use current domain if target of axisId is none\n            return axisId === 'y2' ? $$.y2.domain() : $$.y.domain();\n        }\n        if (isNaN(yDomainMin)) { // set minimum to zero when not number\n            yDomainMin = 0;\n        }\n        if (isNaN(yDomainMax)) { // set maximum to have same value as yDomainMin\n            yDomainMax = yDomainMin;\n        }\n        if (yDomainMin === yDomainMax) {\n            yDomainMin < 0 ? yDomainMax = 0 : yDomainMin = 0;\n        }\n        isAllPositive = yDomainMin >= 0 && yDomainMax >= 0;\n        isAllNegative = yDomainMin <= 0 && yDomainMax <= 0;\n\n        // Cancel zerobased if axis_*_min / axis_*_max specified\n        if ((isValue(yMin) && isAllPositive) || (isValue(yMax) && isAllNegative)) {\n            isZeroBased = false;\n        }\n\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) { yDomainMin = 0; }\n            if (isAllNegative) { yDomainMax = 0; }\n        }\n\n        domainLength = Math.abs(yDomainMax - yDomainMin);\n        padding = padding_top = padding_bottom = domainLength * 0.1;\n\n        if (typeof center !== 'undefined') {\n            yDomainAbs = Math.max(Math.abs(yDomainMin), Math.abs(yDomainMax));\n            yDomainMax = center + yDomainAbs;\n            yDomainMin = center - yDomainAbs;\n        }\n        // add padding for data label\n        if (showHorizontalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'width');\n            diff = diffDomain($$.y.range());\n            ratio = [lengths[0] / diff, lengths[1] / diff];\n            padding_top += domainLength * (ratio[1] / (1 - ratio[0] - ratio[1]));\n            padding_bottom += domainLength * (ratio[0] / (1 - ratio[0] - ratio[1]));\n        } else if (showVerticalDataLabel) {\n            lengths = $$.getDataLabelLength(yDomainMin, yDomainMax, 'height');\n            padding_top += $$.axis.convertPixelsToAxisPadding(lengths[1], domainLength);\n            padding_bottom += $$.axis.convertPixelsToAxisPadding(lengths[0], domainLength);\n        }\n        if (axisId === 'y' && notEmpty(config.axis_y_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y_padding, 'bottom', padding_bottom, domainLength);\n        }\n        if (axisId === 'y2' && notEmpty(config.axis_y2_padding)) {\n            padding_top = $$.axis.getPadding(config.axis_y2_padding, 'top', padding_top, domainLength);\n            padding_bottom = $$.axis.getPadding(config.axis_y2_padding, 'bottom', padding_bottom, domainLength);\n        }\n        // Bar/Area chart should be 0-based if all positive|negative\n        if (isZeroBased) {\n            if (isAllPositive) { padding_bottom = yDomainMin; }\n            if (isAllNegative) { padding_top = -yDomainMax; }\n        }\n        domain = [yDomainMin - padding_bottom, yDomainMax + padding_top];\n        return isInverted ? domain.reverse() : domain;\n    };\n    c3_chart_internal_fn.getXDomainMin = function (targets) {\n        var $$ = this, config = $$.config;\n        return isDefined(config.axis_x_min) ?\n            ($$.isTimeSeries() ? this.parseDate(config.axis_x_min) : config.axis_x_min) :\n        $$.d3.min(targets, function (t) { return $$.d3.min(t.values, function (v) { return v.x; }); });\n    };\n    c3_chart_internal_fn.getXDomainMax = function (targets) {\n        var $$ = this, config = $$.config;\n        return isDefined(config.axis_x_max) ?\n            ($$.isTimeSeries() ? this.parseDate(config.axis_x_max) : config.axis_x_max) :\n        $$.d3.max(targets, function (t) { return $$.d3.max(t.values, function (v) { return v.x; }); });\n    };\n    c3_chart_internal_fn.getXDomainPadding = function (domain) {\n        var $$ = this, config = $$.config,\n            diff = domain[1] - domain[0],\n            maxDataCount, padding, paddingLeft, paddingRight;\n        if ($$.isCategorized()) {\n            padding = 0;\n        } else if ($$.hasType('bar')) {\n            maxDataCount = $$.getMaxDataCount();\n            padding = maxDataCount > 1 ? (diff / (maxDataCount - 1)) / 2 : 0.5;\n        } else {\n            padding = diff * 0.01;\n        }\n        if (typeof config.axis_x_padding === 'object' && notEmpty(config.axis_x_padding)) {\n            paddingLeft = isValue(config.axis_x_padding.left) ? config.axis_x_padding.left : padding;\n            paddingRight = isValue(config.axis_x_padding.right) ? config.axis_x_padding.right : padding;\n        } else if (typeof config.axis_x_padding === 'number') {\n            paddingLeft = paddingRight = config.axis_x_padding;\n        } else {\n            paddingLeft = paddingRight = padding;\n        }\n        return {left: paddingLeft, right: paddingRight};\n    };\n    c3_chart_internal_fn.getXDomain = function (targets) {\n        var $$ = this,\n            xDomain = [$$.getXDomainMin(targets), $$.getXDomainMax(targets)],\n            firstX = xDomain[0], lastX = xDomain[1],\n            padding = $$.getXDomainPadding(xDomain),\n            min = 0, max = 0;\n        // show center of x domain if min and max are the same\n        if ((firstX - lastX) === 0 && !$$.isCategorized()) {\n            if ($$.isTimeSeries()) {\n                firstX = new Date(firstX.getTime() * 0.5);\n                lastX = new Date(lastX.getTime() * 1.5);\n            } else {\n                firstX = firstX === 0 ? 1 : (firstX * 0.5);\n                lastX = lastX === 0 ? -1 : (lastX * 1.5);\n            }\n        }\n        if (firstX || firstX === 0) {\n            min = $$.isTimeSeries() ? new Date(firstX.getTime() - padding.left) : firstX - padding.left;\n        }\n        if (lastX || lastX === 0) {\n            max = $$.isTimeSeries() ? new Date(lastX.getTime() + padding.right) : lastX + padding.right;\n        }\n        return [min, max];\n    };\n    c3_chart_internal_fn.updateXDomain = function (targets, withUpdateXDomain, withUpdateOrgXDomain, withTrim, domain) {\n        var $$ = this, config = $$.config;\n\n        if (withUpdateOrgXDomain) {\n            $$.x.domain(domain ? domain : $$.d3.extent($$.getXDomain(targets)));\n            $$.orgXDomain = $$.x.domain();\n            if (config.zoom_enabled) { $$.zoom.scale($$.x).updateScaleExtent(); }\n            $$.subX.domain($$.x.domain());\n            if ($$.brush) { $$.brush.scale($$.subX); }\n        }\n        if (withUpdateXDomain) {\n            $$.x.domain(domain ? domain : (!$$.brush || $$.brush.empty()) ? $$.orgXDomain : $$.brush.extent());\n            if (config.zoom_enabled) { $$.zoom.scale($$.x).updateScaleExtent(); }\n        }\n\n        // Trim domain when too big by zoom mousemove event\n        if (withTrim) { $$.x.domain($$.trimXDomain($$.x.orgDomain())); }\n\n        return $$.x.domain();\n    };\n    c3_chart_internal_fn.trimXDomain = function (domain) {\n        var zoomDomain = this.getZoomDomain(),\n            min = zoomDomain[0], max = zoomDomain[1];\n        if (domain[0] <= min) {\n            domain[1] = +domain[1] + (min - domain[0]);\n            domain[0] = min;\n        }\n        if (max <= domain[1]) {\n            domain[0] = +domain[0] - (domain[1] - max);\n            domain[1] = max;\n        }\n        return domain;\n    };\n\n    c3_chart_internal_fn.isX = function (key) {\n        var $$ = this, config = $$.config;\n        return (config.data_x && key === config.data_x) || (notEmpty(config.data_xs) && hasValue(config.data_xs, key));\n    };\n    c3_chart_internal_fn.isNotX = function (key) {\n        return !this.isX(key);\n    };\n    c3_chart_internal_fn.getXKey = function (id) {\n        var $$ = this, config = $$.config;\n        return config.data_x ? config.data_x : notEmpty(config.data_xs) ? config.data_xs[id] : null;\n    };\n    c3_chart_internal_fn.getXValuesOfXKey = function (key, targets) {\n        var $$ = this,\n            xValues, ids = targets && notEmpty(targets) ? $$.mapToIds(targets) : [];\n        ids.forEach(function (id) {\n            if ($$.getXKey(id) === key) {\n                xValues = $$.data.xs[id];\n            }\n        });\n        return xValues;\n    };\n    c3_chart_internal_fn.getIndexByX = function (x) {\n        var $$ = this,\n            data = $$.filterByX($$.data.targets, x);\n        return data.length ? data[0].index : null;\n    };\n    c3_chart_internal_fn.getXValue = function (id, i) {\n        var $$ = this;\n        return id in $$.data.xs && $$.data.xs[id] && isValue($$.data.xs[id][i]) ? $$.data.xs[id][i] : i;\n    };\n    c3_chart_internal_fn.getOtherTargetXs = function () {\n        var $$ = this,\n            idsForX = Object.keys($$.data.xs);\n        return idsForX.length ? $$.data.xs[idsForX[0]] : null;\n    };\n    c3_chart_internal_fn.getOtherTargetX = function (index) {\n        var xs = this.getOtherTargetXs();\n        return xs && index < xs.length ? xs[index] : null;\n    };\n    c3_chart_internal_fn.addXs = function (xs) {\n        var $$ = this;\n        Object.keys(xs).forEach(function (id) {\n            $$.config.data_xs[id] = xs[id];\n        });\n    };\n    c3_chart_internal_fn.hasMultipleX = function (xs) {\n        return this.d3.set(Object.keys(xs).map(function (id) { return xs[id]; })).size() > 1;\n    };\n    c3_chart_internal_fn.isMultipleX = function () {\n        return notEmpty(this.config.data_xs) || !this.config.data_xSort || this.hasType('scatter');\n    };\n    c3_chart_internal_fn.addName = function (data) {\n        var $$ = this, name;\n        if (data) {\n            name = $$.config.data_names[data.id];\n            data.name = name !== undefined ? name : data.id;\n        }\n        return data;\n    };\n    c3_chart_internal_fn.getValueOnIndex = function (values, index) {\n        var valueOnIndex = values.filter(function (v) { return v.index === index; });\n        return valueOnIndex.length ? valueOnIndex[0] : null;\n    };\n    c3_chart_internal_fn.updateTargetX = function (targets, x) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            t.values.forEach(function (v, i) {\n                v.x = $$.generateTargetX(x[i], t.id, i);\n            });\n            $$.data.xs[t.id] = x;\n        });\n    };\n    c3_chart_internal_fn.updateTargetXs = function (targets, xs) {\n        var $$ = this;\n        targets.forEach(function (t) {\n            if (xs[t.id]) {\n                $$.updateTargetX([t], xs[t.id]);\n            }\n        });\n    };\n    c3_chart_internal_fn.generateTargetX = function (rawX, id, index) {\n        var $$ = this, x;\n        if ($$.isTimeSeries()) {\n            x = rawX ? $$.parseDate(rawX) : $$.parseDate($$.getXValue(id, index));\n        }\n        else if ($$.isCustomX() && !$$.isCategorized()) {\n            x = isValue(rawX) ? +rawX : $$.getXValue(id, index);\n        }\n        else {\n            x = index;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.cloneTarget = function (target) {\n        return {\n            id : target.id,\n            id_org : target.id_org,\n            values : target.values.map(function (d) {\n                return {x: d.x, value: d.value, id: d.id};\n            })\n        };\n    };\n    c3_chart_internal_fn.updateXs = function () {\n        var $$ = this;\n        if ($$.data.targets.length) {\n            $$.xs = [];\n            $$.data.targets[0].values.forEach(function (v) {\n                $$.xs[v.index] = v.x;\n            });\n        }\n    };\n    c3_chart_internal_fn.getPrevX = function (i) {\n        var x = this.xs[i - 1];\n        return typeof x !== 'undefined' ? x : null;\n    };\n    c3_chart_internal_fn.getNextX = function (i) {\n        var x = this.xs[i + 1];\n        return typeof x !== 'undefined' ? x : null;\n    };\n    c3_chart_internal_fn.getMaxDataCount = function () {\n        var $$ = this;\n        return $$.d3.max($$.data.targets, function (t) { return t.values.length; });\n    };\n    c3_chart_internal_fn.getMaxDataCountTarget = function (targets) {\n        var length = targets.length, max = 0, maxTarget;\n        if (length > 1) {\n            targets.forEach(function (t) {\n                if (t.values.length > max) {\n                    maxTarget = t;\n                    max = t.values.length;\n                }\n            });\n        } else {\n            maxTarget = length ? targets[0] : null;\n        }\n        return maxTarget;\n    };\n    c3_chart_internal_fn.getEdgeX = function (targets) {\n        var $$ = this;\n        return !targets.length ? [0, 0] : [\n            $$.d3.min(targets, function (t) { return t.values[0].x; }),\n            $$.d3.max(targets, function (t) { return t.values[t.values.length - 1].x; })\n        ];\n    };\n    c3_chart_internal_fn.mapToIds = function (targets) {\n        return targets.map(function (d) { return d.id; });\n    };\n    c3_chart_internal_fn.mapToTargetIds = function (ids) {\n        var $$ = this;\n        return ids ? [].concat(ids) : $$.mapToIds($$.data.targets);\n    };\n    c3_chart_internal_fn.hasTarget = function (targets, id) {\n        var ids = this.mapToIds(targets), i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] === id) {\n                return true;\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.isTargetToShow = function (targetId) {\n        return this.hiddenTargetIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.isLegendToShow = function (targetId) {\n        return this.hiddenLegendIds.indexOf(targetId) < 0;\n    };\n    c3_chart_internal_fn.filterTargetsToShow = function (targets) {\n        var $$ = this;\n        return targets.filter(function (t) { return $$.isTargetToShow(t.id); });\n    };\n    c3_chart_internal_fn.mapTargetsToUniqueXs = function (targets) {\n        var $$ = this;\n        var xs = $$.d3.set($$.d3.merge(targets.map(function (t) { return t.values.map(function (v) { return +v.x; }); }))).values();\n        xs = $$.isTimeSeries() ? xs.map(function (x) { return new Date(+x); }) : xs.map(function (x) { return +x; });\n        return xs.sort(function (a, b) { return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN; });\n    };\n    c3_chart_internal_fn.addHiddenTargetIds = function (targetIds) {\n        this.hiddenTargetIds = this.hiddenTargetIds.concat(targetIds);\n    };\n    c3_chart_internal_fn.removeHiddenTargetIds = function (targetIds) {\n        this.hiddenTargetIds = this.hiddenTargetIds.filter(function (id) { return targetIds.indexOf(id) < 0; });\n    };\n    c3_chart_internal_fn.addHiddenLegendIds = function (targetIds) {\n        this.hiddenLegendIds = this.hiddenLegendIds.concat(targetIds);\n    };\n    c3_chart_internal_fn.removeHiddenLegendIds = function (targetIds) {\n        this.hiddenLegendIds = this.hiddenLegendIds.filter(function (id) { return targetIds.indexOf(id) < 0; });\n    };\n    c3_chart_internal_fn.getValuesAsIdKeyed = function (targets) {\n        var ys = {};\n        targets.forEach(function (t) {\n            ys[t.id] = [];\n            t.values.forEach(function (v) {\n                ys[t.id].push(v.value);\n            });\n        });\n        return ys;\n    };\n    c3_chart_internal_fn.checkValueInTargets = function (targets, checker) {\n        var ids = Object.keys(targets), i, j, values;\n        for (i = 0; i < ids.length; i++) {\n            values = targets[ids[i]].values;\n            for (j = 0; j < values.length; j++) {\n                if (checker(values[j].value)) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    c3_chart_internal_fn.hasNegativeValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) { return v < 0; });\n    };\n    c3_chart_internal_fn.hasPositiveValueInTargets = function (targets) {\n        return this.checkValueInTargets(targets, function (v) { return v > 0; });\n    };\n    c3_chart_internal_fn.isOrderDesc = function () {\n        var config = this.config;\n        return typeof(config.data_order) === 'string' && config.data_order.toLowerCase() === 'desc';\n    };\n    c3_chart_internal_fn.isOrderAsc = function () {\n        var config = this.config;\n        return typeof(config.data_order) === 'string' && config.data_order.toLowerCase() === 'asc';\n    };\n    c3_chart_internal_fn.orderTargets = function (targets) {\n        var $$ = this, config = $$.config, orderAsc = $$.isOrderAsc(), orderDesc = $$.isOrderDesc();\n        if (orderAsc || orderDesc) {\n            targets.sort(function (t1, t2) {\n                var reducer = function (p, c) { return p + Math.abs(c.value); };\n                var t1Sum = t1.values.reduce(reducer, 0),\n                    t2Sum = t2.values.reduce(reducer, 0);\n                return orderAsc ? t2Sum - t1Sum : t1Sum - t2Sum;\n            });\n        } else if (isFunction(config.data_order)) {\n            targets.sort(config.data_order);\n        } // TODO: accept name array for order\n        return targets;\n    };\n    c3_chart_internal_fn.filterByX = function (targets, x) {\n        return this.d3.merge(targets.map(function (t) { return t.values; })).filter(function (v) { return v.x - x === 0; });\n    };\n    c3_chart_internal_fn.filterRemoveNull = function (data) {\n        return data.filter(function (d) { return isValue(d.value); });\n    };\n    c3_chart_internal_fn.filterByXDomain = function (targets, xDomain) {\n        return targets.map(function (t) {\n            return {\n                id: t.id,\n                id_org: t.id_org,\n                values: t.values.filter(function (v) {\n                    return xDomain[0] <= v.x && v.x <= xDomain[1];\n                })\n            };\n        });\n    };\n    c3_chart_internal_fn.hasDataLabel = function () {\n        var config = this.config;\n        if (typeof config.data_labels === 'boolean' && config.data_labels) {\n            return true;\n        } else if (typeof config.data_labels === 'object' && notEmpty(config.data_labels)) {\n            return true;\n        }\n        return false;\n    };\n    c3_chart_internal_fn.getDataLabelLength = function (min, max, key) {\n        var $$ = this,\n            lengths = [0, 0], paddingCoef = 1.3;\n        $$.selectChart.select('svg').selectAll('.dummy')\n            .data([min, max])\n            .enter().append('text')\n            .text(function (d) { return $$.dataLabelFormat(d.id)(d); })\n            .each(function (d, i) {\n                lengths[i] = this.getBoundingClientRect()[key] * paddingCoef;\n            })\n            .remove();\n        return lengths;\n    };\n    c3_chart_internal_fn.isNoneArc = function (d) {\n        return this.hasTarget(this.data.targets, d.id);\n    },\n    c3_chart_internal_fn.isArc = function (d) {\n        return 'data' in d && this.hasTarget(this.data.targets, d.data.id);\n    };\n    c3_chart_internal_fn.findSameXOfValues = function (values, index) {\n        var i, targetX = values[index].x, sames = [];\n        for (i = index - 1; i >= 0; i--) {\n            if (targetX !== values[i].x) { break; }\n            sames.push(values[i]);\n        }\n        for (i = index; i < values.length; i++) {\n            if (targetX !== values[i].x) { break; }\n            sames.push(values[i]);\n        }\n        return sames;\n    };\n\n    c3_chart_internal_fn.findClosestFromTargets = function (targets, pos) {\n        var $$ = this, candidates;\n\n        // map to array of closest points of each target\n        candidates = targets.map(function (target) {\n            return $$.findClosest(target.values, pos);\n        });\n\n        // decide closest point and return\n        return $$.findClosest(candidates, pos);\n    };\n    c3_chart_internal_fn.findClosest = function (values, pos) {\n        var $$ = this, minDist = $$.config.point_sensitivity, closest;\n\n        // find mouseovering bar\n        values.filter(function (v) { return v && $$.isBarType(v.id); }).forEach(function (v) {\n            var shape = $$.main.select('.' + CLASS.bars + $$.getTargetSelectorSuffix(v.id) + ' .' + CLASS.bar + '-' + v.index).node();\n            if (!closest && $$.isWithinBar(shape)) {\n                closest = v;\n            }\n        });\n\n        // find closest point from non-bar\n        values.filter(function (v) { return v && !$$.isBarType(v.id); }).forEach(function (v) {\n            var d = $$.dist(v, pos);\n            if (d < minDist) {\n                minDist = d;\n                closest = v;\n            }\n        });\n\n        return closest;\n    };\n    c3_chart_internal_fn.dist = function (data, pos) {\n        var $$ = this, config = $$.config,\n            xIndex = config.axis_rotated ? 1 : 0,\n            yIndex = config.axis_rotated ? 0 : 1,\n            y = $$.circleY(data, data.index),\n            x = $$.x(data.x);\n        return Math.sqrt(Math.pow(x - pos[xIndex], 2) + Math.pow(y - pos[yIndex], 2));\n    };\n    c3_chart_internal_fn.convertValuesToStep = function (values) {\n        var converted = [].concat(values), i;\n\n        if (!this.isCategorized()) {\n            return values;\n        }\n\n        for (i = values.length + 1; 0 < i; i--) {\n            converted[i] = converted[i - 1];\n        }\n\n        converted[0] = {\n            x: converted[0].x - 1,\n            value: converted[0].value,\n            id: converted[0].id\n        };\n        converted[values.length + 1] = {\n            x: converted[values.length].x + 1,\n            value: converted[values.length].value,\n            id: converted[values.length].id\n        };\n\n        return converted;\n    };\n    c3_chart_internal_fn.updateDataAttributes = function (name, attrs) {\n        var $$ = this, config = $$.config, current = config['data_' + name];\n        if (typeof attrs === 'undefined') { return current; }\n        Object.keys(attrs).forEach(function (id) {\n            current[id] = attrs[id];\n        });\n        $$.redraw({withLegend: true});\n        return current;\n    };\n\n    c3_chart_internal_fn.convertUrlToData = function (url, mimeType, headers, keys, done) {\n        var $$ = this, type = mimeType ? mimeType : 'csv';\n        var req = $$.d3.xhr(url);\n        if (headers) {\n            Object.keys(headers).forEach(function (header) {\n                req.header(header, headers[header]);\n            });\n        }\n        req.get(function (error, data) {\n            var d;\n            if (!data) {\n                throw new Error(error.responseURL + ' ' + error.status + ' (' + error.statusText + ')');\n            }\n            if (type === 'json') {\n                d = $$.convertJsonToData(JSON.parse(data.response), keys);\n            } else if (type === 'tsv') {\n                d = $$.convertTsvToData(data.response);\n            } else {\n                d = $$.convertCsvToData(data.response);\n            }\n            done.call($$, d);\n        });\n    };\n    c3_chart_internal_fn.convertXsvToData = function (xsv, parser) {\n        var rows = parser.parseRows(xsv), d;\n        if (rows.length === 1) {\n            d = [{}];\n            rows[0].forEach(function (id) {\n                d[0][id] = null;\n            });\n        } else {\n            d = parser.parse(xsv);\n        }\n        return d;\n    };\n    c3_chart_internal_fn.convertCsvToData = function (csv) {\n        return this.convertXsvToData(csv, this.d3.csv);\n    };\n    c3_chart_internal_fn.convertTsvToData = function (tsv) {\n        return this.convertXsvToData(tsv, this.d3.tsv);\n    };\n    c3_chart_internal_fn.convertJsonToData = function (json, keys) {\n        var $$ = this,\n            new_rows = [], targetKeys, data;\n        if (keys) { // when keys specified, json would be an array that includes objects\n            if (keys.x) {\n                targetKeys = keys.value.concat(keys.x);\n                $$.config.data_x = keys.x;\n            } else {\n                targetKeys = keys.value;\n            }\n            new_rows.push(targetKeys);\n            json.forEach(function (o) {\n                var new_row = [];\n                targetKeys.forEach(function (key) {\n                    // convert undefined to null because undefined data will be removed in convertDataToTargets()\n                    var v = $$.findValueInJson(o, key);\n                    if (isUndefined(v)) {\n                        v = null;\n                    }\n                    new_row.push(v);\n                });\n                new_rows.push(new_row);\n            });\n            data = $$.convertRowsToData(new_rows);\n        } else {\n            Object.keys(json).forEach(function (key) {\n                new_rows.push([key].concat(json[key]));\n            });\n            data = $$.convertColumnsToData(new_rows);\n        }\n        return data;\n    };\n    c3_chart_internal_fn.findValueInJson = function (object, path) {\n        path = path.replace(/\\[(\\w+)\\]/g, '.$1'); // convert indexes to properties (replace [] with .)\n        path = path.replace(/^\\./, '');           // strip a leading dot\n        var pathArray = path.split('.');\n        for (var i = 0; i < pathArray.length; ++i) {\n            var k = pathArray[i];\n            if (k in object) {\n                object = object[k];\n            } else {\n                return;\n            }\n        }\n        return object;\n    };\n    c3_chart_internal_fn.convertRowsToData = function (rows) {\n        var keys = rows[0], new_row = {}, new_rows = [], i, j;\n        for (i = 1; i < rows.length; i++) {\n            new_row = {};\n            for (j = 0; j < rows[i].length; j++) {\n                if (isUndefined(rows[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                new_row[keys[j]] = rows[i][j];\n            }\n            new_rows.push(new_row);\n        }\n        return new_rows;\n    };\n    c3_chart_internal_fn.convertColumnsToData = function (columns) {\n        var new_rows = [], i, j, key;\n        for (i = 0; i < columns.length; i++) {\n            key = columns[i][0];\n            for (j = 1; j < columns[i].length; j++) {\n                if (isUndefined(new_rows[j - 1])) {\n                    new_rows[j - 1] = {};\n                }\n                if (isUndefined(columns[i][j])) {\n                    throw new Error(\"Source data is missing a component at (\" + i + \",\" + j + \")!\");\n                }\n                new_rows[j - 1][key] = columns[i][j];\n            }\n        }\n        return new_rows;\n    };\n    c3_chart_internal_fn.convertDataToTargets = function (data, appendXs) {\n        var $$ = this, config = $$.config,\n            ids = $$.d3.keys(data[0]).filter($$.isNotX, $$),\n            xs = $$.d3.keys(data[0]).filter($$.isX, $$),\n            targets;\n\n        // save x for update data by load when custom x and c3.x API\n        ids.forEach(function (id) {\n            var xKey = $$.getXKey(id);\n\n            if ($$.isCustomX() || $$.isTimeSeries()) {\n                // if included in input data\n                if (xs.indexOf(xKey) >= 0) {\n                    $$.data.xs[id] = (appendXs && $$.data.xs[id] ? $$.data.xs[id] : []).concat(\n                        data.map(function (d) { return d[xKey]; })\n                            .filter(isValue)\n                            .map(function (rawX, i) { return $$.generateTargetX(rawX, id, i); })\n                    );\n                }\n                // if not included in input data, find from preloaded data of other id's x\n                else if (config.data_x) {\n                    $$.data.xs[id] = $$.getOtherTargetXs();\n                }\n                // if not included in input data, find from preloaded data\n                else if (notEmpty(config.data_xs)) {\n                    $$.data.xs[id] = $$.getXValuesOfXKey(xKey, $$.data.targets);\n                }\n                // MEMO: if no x included, use same x of current will be used\n            } else {\n                $$.data.xs[id] = data.map(function (d, i) { return i; });\n            }\n        });\n\n\n        // check x is defined\n        ids.forEach(function (id) {\n            if (!$$.data.xs[id]) {\n                throw new Error('x is not defined for id = \"' + id + '\".');\n            }\n        });\n\n        // convert to target\n        targets = ids.map(function (id, index) {\n            var convertedId = config.data_idConverter(id);\n            return {\n                id: convertedId,\n                id_org: id,\n                values: data.map(function (d, i) {\n                    var xKey = $$.getXKey(id), rawX = d[xKey],\n                        value = d[id] !== null && !isNaN(d[id]) ? +d[id] : null, x;\n                    // use x as categories if custom x and categorized\n                    if ($$.isCustomX() && $$.isCategorized() && index === 0 && !isUndefined(rawX)) {\n                        if (index === 0 && i === 0) {\n                            config.axis_x_categories = [];\n                        }\n                        x = config.axis_x_categories.indexOf(rawX);\n                        if (x === -1) {\n                            x = config.axis_x_categories.length;\n                            config.axis_x_categories.push(rawX);\n                        }\n                    } else {\n                        x  = $$.generateTargetX(rawX, id, i);\n                    }\n                    // mark as x = undefined if value is undefined and filter to remove after mapped\n                    if (isUndefined(d[id]) || $$.data.xs[id].length <= i) {\n                        x = undefined;\n                    }\n                    return {x: x, value: value, id: convertedId};\n                }).filter(function (v) { return isDefined(v.x); })\n            };\n        });\n\n        // finish targets\n        targets.forEach(function (t) {\n            var i;\n            // sort values by its x\n            if (config.data_xSort) {\n                t.values = t.values.sort(function (v1, v2) {\n                    var x1 = v1.x || v1.x === 0 ? v1.x : Infinity,\n                        x2 = v2.x || v2.x === 0 ? v2.x : Infinity;\n                    return x1 - x2;\n                });\n            }\n            // indexing each value\n            i = 0;\n            t.values.forEach(function (v) {\n                v.index = i++;\n            });\n            // this needs to be sorted because its index and value.index is identical\n            $$.data.xs[t.id].sort(function (v1, v2) {\n                return v1 - v2;\n            });\n        });\n\n        // cache information about values\n        $$.hasNegativeValue = $$.hasNegativeValueInTargets(targets);\n        $$.hasPositiveValue = $$.hasPositiveValueInTargets(targets);\n\n        // set target types\n        if (config.data_type) {\n            $$.setTargetType($$.mapToIds(targets).filter(function (id) { return ! (id in config.data_types); }), config.data_type);\n        }\n\n        // cache as original id keyed\n        targets.forEach(function (d) {\n            $$.addCache(d.id_org, d);\n        });\n\n        return targets;\n    };\n\n    c3_chart_internal_fn.load = function (targets, args) {\n        var $$ = this;\n        if (targets) {\n            // filter loading targets if needed\n            if (args.filter) {\n                targets = targets.filter(args.filter);\n            }\n            // set type if args.types || args.type specified\n            if (args.type || args.types) {\n                targets.forEach(function (t) {\n                    var type = args.types && args.types[t.id] ? args.types[t.id] : args.type;\n                    $$.setTargetType(t.id, type);\n                });\n            }\n            // Update/Add data\n            $$.data.targets.forEach(function (d) {\n                for (var i = 0; i < targets.length; i++) {\n                    if (d.id === targets[i].id) {\n                        d.values = targets[i].values;\n                        targets.splice(i, 1);\n                        break;\n                    }\n                }\n            });\n            $$.data.targets = $$.data.targets.concat(targets); // add remained\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n\n        if (args.done) { args.done(); }\n    };\n    c3_chart_internal_fn.loadFromArgs = function (args) {\n        var $$ = this;\n        if (args.data) {\n            $$.load($$.convertDataToTargets(args.data), args);\n        }\n        else if (args.url) {\n            $$.convertUrlToData(args.url, args.mimeType, args.headers, args.keys, function (data) {\n                $$.load($$.convertDataToTargets(data), args);\n            });\n        }\n        else if (args.json) {\n            $$.load($$.convertDataToTargets($$.convertJsonToData(args.json, args.keys)), args);\n        }\n        else if (args.rows) {\n            $$.load($$.convertDataToTargets($$.convertRowsToData(args.rows)), args);\n        }\n        else if (args.columns) {\n            $$.load($$.convertDataToTargets($$.convertColumnsToData(args.columns)), args);\n        }\n        else {\n            $$.load(null, args);\n        }\n    };\n    c3_chart_internal_fn.unload = function (targetIds, done) {\n        var $$ = this;\n        if (!done) {\n            done = function () {};\n        }\n        // filter existing target\n        targetIds = targetIds.filter(function (id) { return $$.hasTarget($$.data.targets, id); });\n        // If no target, call done and return\n        if (!targetIds || targetIds.length === 0) {\n            done();\n            return;\n        }\n        $$.svg.selectAll(targetIds.map(function (id) { return $$.selectorTarget(id); }))\n            .transition()\n            .style('opacity', 0)\n            .remove()\n            .call($$.endall, done);\n        targetIds.forEach(function (id) {\n            // Reset fadein for future load\n            $$.withoutFadeIn[id] = false;\n            // Remove target's elements\n            if ($$.legend) {\n                $$.legend.selectAll('.' + CLASS.legendItem + $$.getTargetSelectorSuffix(id)).remove();\n            }\n            // Remove target\n            $$.data.targets = $$.data.targets.filter(function (t) {\n                return t.id !== id;\n            });\n        });\n    };\n\n    c3_chart_internal_fn.categoryName = function (i) {\n        var config = this.config;\n        return i < config.axis_x_categories.length ? config.axis_x_categories[i] : i;\n    };\n\n    c3_chart_internal_fn.initEventRect = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.eventRects)\n            .style('fill-opacity', 0);\n    };\n    c3_chart_internal_fn.redrawEventRect = function () {\n        var $$ = this, config = $$.config,\n            eventRectUpdate, maxDataCountTarget,\n            isMultipleX = $$.isMultipleX();\n\n        // rects for mouseover\n        var eventRects = $$.main.select('.' + CLASS.eventRects)\n                .style('cursor', config.zoom_enabled ? config.axis_rotated ? 'ns-resize' : 'ew-resize' : null)\n                .classed(CLASS.eventRectsMultiple, isMultipleX)\n                .classed(CLASS.eventRectsSingle, !isMultipleX);\n\n        // clear old rects\n        eventRects.selectAll('.' + CLASS.eventRect).remove();\n\n        // open as public variable\n        $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n\n        if (isMultipleX) {\n            eventRectUpdate = $$.eventRect.data([0]);\n            // enter : only one rect will be added\n            $$.generateEventRectsForMultipleXs(eventRectUpdate.enter());\n            // update\n            $$.updateEventRect(eventRectUpdate);\n            // exit : not needed because always only one rect exists\n        }\n        else {\n            // Set data and update $$.eventRect\n            maxDataCountTarget = $$.getMaxDataCountTarget($$.data.targets);\n            eventRects.datum(maxDataCountTarget ? maxDataCountTarget.values : []);\n            $$.eventRect = eventRects.selectAll('.' + CLASS.eventRect);\n            eventRectUpdate = $$.eventRect.data(function (d) { return d; });\n            // enter\n            $$.generateEventRectsForSingleX(eventRectUpdate.enter());\n            // update\n            $$.updateEventRect(eventRectUpdate);\n            // exit\n            eventRectUpdate.exit().remove();\n        }\n    };\n    c3_chart_internal_fn.updateEventRect = function (eventRectUpdate) {\n        var $$ = this, config = $$.config,\n            x, y, w, h, rectW, rectX;\n\n        // set update selection if null\n        eventRectUpdate = eventRectUpdate || $$.eventRect.data(function (d) { return d; });\n\n        if ($$.isMultipleX()) {\n            // TODO: rotated not supported yet\n            x = 0;\n            y = 0;\n            w = $$.width;\n            h = $$.height;\n        }\n        else {\n            if (($$.isCustomX() || $$.isTimeSeries()) && !$$.isCategorized()) {\n\n                // update index for x that is used by prevX and nextX\n                $$.updateXs();\n\n                rectW = function (d) {\n                    var prevX = $$.getPrevX(d.index), nextX = $$.getNextX(d.index);\n\n                    // if there this is a single data point make the eventRect full width (or height)\n                    if (prevX === null && nextX === null) {\n                        return config.axis_rotated ? $$.height : $$.width;\n                    }\n\n                    if (prevX === null) { prevX = $$.x.domain()[0]; }\n                    if (nextX === null) { nextX = $$.x.domain()[1]; }\n\n                    return Math.max(0, ($$.x(nextX) - $$.x(prevX)) / 2);\n                };\n                rectX = function (d) {\n                    var prevX = $$.getPrevX(d.index), nextX = $$.getNextX(d.index),\n                        thisX = $$.data.xs[d.id][d.index];\n\n                    // if there this is a single data point position the eventRect at 0\n                    if (prevX === null && nextX === null) {\n                        return 0;\n                    }\n\n                    if (prevX === null) { prevX = $$.x.domain()[0]; }\n\n                    return ($$.x(thisX) + $$.x(prevX)) / 2;\n                };\n            } else {\n                rectW = $$.getEventRectWidth();\n                rectX = function (d) {\n                    return $$.x(d.x) - (rectW / 2);\n                };\n            }\n            x = config.axis_rotated ? 0 : rectX;\n            y = config.axis_rotated ? rectX : 0;\n            w = config.axis_rotated ? $$.width : rectW;\n            h = config.axis_rotated ? rectW : $$.height;\n        }\n\n        eventRectUpdate\n            .attr('class', $$.classEvent.bind($$))\n            .attr(\"x\", x)\n            .attr(\"y\", y)\n            .attr(\"width\", w)\n            .attr(\"height\", h);\n    };\n    c3_chart_internal_fn.generateEventRectsForSingleX = function (eventRectEnter) {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n        eventRectEnter.append(\"rect\")\n            .attr(\"class\", $$.classEvent.bind($$))\n            .style(\"cursor\", config.data_selection_enabled && config.data_selection_grouped ? \"pointer\" : null)\n            .on('mouseover', function (d) {\n                var index = d.index;\n\n                if ($$.dragging || $$.flowing) { return; } // do nothing while dragging/flowing\n                if ($$.hasArcType()) { return; }\n\n                // Expand shapes for selection\n                if (config.point_focus_expand_enabled) { $$.expandCircles(index, null, true); }\n                $$.expandBars(index, null, true);\n\n                // Call event handler\n                $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                    config.data_onmouseover.call($$.api, d);\n                });\n            })\n            .on('mouseout', function (d) {\n                var index = d.index;\n                if (!$$.config) { return; } // chart is destroyed\n                if ($$.hasArcType()) { return; }\n                $$.hideXGridFocus();\n                $$.hideTooltip();\n                // Undo expanded shapes\n                $$.unexpandCircles();\n                $$.unexpandBars();\n                // Call event handler\n                $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                    config.data_onmouseout.call($$.api, d);\n                });\n            })\n            .on('mousemove', function (d) {\n                var selectedData, index = d.index,\n                    eventRect = $$.svg.select('.' + CLASS.eventRect + '-' + index);\n\n                if ($$.dragging || $$.flowing) { return; } // do nothing while dragging/flowing\n                if ($$.hasArcType()) { return; }\n\n                if ($$.isStepType(d) && $$.config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n                    index -= 1;\n                }\n\n                // Show tooltip\n                selectedData = $$.filterTargetsToShow($$.data.targets).map(function (t) {\n                    return $$.addName($$.getValueOnIndex(t.values, index));\n                });\n\n                if (config.tooltip_grouped) {\n                    $$.showTooltip(selectedData, this);\n                    $$.showXGridFocus(selectedData);\n                }\n\n                if (config.tooltip_grouped && (!config.data_selection_enabled || config.data_selection_grouped)) {\n                    return;\n                }\n\n                $$.main.selectAll('.' + CLASS.shape + '-' + index)\n                    .each(function () {\n                        d3.select(this).classed(CLASS.EXPANDED, true);\n                        if (config.data_selection_enabled) {\n                            eventRect.style('cursor', config.data_selection_grouped ? 'pointer' : null);\n                        }\n                        if (!config.tooltip_grouped) {\n                            $$.hideXGridFocus();\n                            $$.hideTooltip();\n                            if (!config.data_selection_grouped) {\n                                $$.unexpandCircles(index);\n                                $$.unexpandBars(index);\n                            }\n                        }\n                    })\n                    .filter(function (d) {\n                        return $$.isWithinShape(this, d);\n                    })\n                    .each(function (d) {\n                        if (config.data_selection_enabled && (config.data_selection_grouped || config.data_selection_isselectable(d))) {\n                            eventRect.style('cursor', 'pointer');\n                        }\n                        if (!config.tooltip_grouped) {\n                            $$.showTooltip([d], this);\n                            $$.showXGridFocus([d]);\n                            if (config.point_focus_expand_enabled) { $$.expandCircles(index, d.id, true); }\n                            $$.expandBars(index, d.id, true);\n                        }\n                    });\n            })\n            .on('click', function (d) {\n                var index = d.index;\n                if ($$.hasArcType() || !$$.toggleShape) { return; }\n                if ($$.cancelClick) {\n                    $$.cancelClick = false;\n                    return;\n                }\n                if ($$.isStepType(d) && config.line_step_type === 'step-after' && d3.mouse(this)[0] < $$.x($$.getXValue(d.id, index))) {\n                    index -= 1;\n                }\n                $$.main.selectAll('.' + CLASS.shape + '-' + index).each(function (d) {\n                    if (config.data_selection_grouped || $$.isWithinShape(this, d)) {\n                        $$.toggleShape(this, d, index);\n                        $$.config.data_onclick.call($$.api, d, this);\n                    }\n                });\n            })\n            .call(\n                config.data_selection_draggable && $$.drag ? (\n                    d3.behavior.drag().origin(Object)\n                        .on('drag', function () { $$.drag(d3.mouse(this)); })\n                        .on('dragstart', function () { $$.dragstart(d3.mouse(this)); })\n                        .on('dragend', function () { $$.dragend(); })\n                ) : function () {}\n            );\n    };\n\n    c3_chart_internal_fn.generateEventRectsForMultipleXs = function (eventRectEnter) {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n\n        function mouseout() {\n            $$.svg.select('.' + CLASS.eventRect).style('cursor', null);\n            $$.hideXGridFocus();\n            $$.hideTooltip();\n            $$.unexpandCircles();\n            $$.unexpandBars();\n        }\n\n        eventRectEnter.append('rect')\n            .attr('x', 0)\n            .attr('y', 0)\n            .attr('width', $$.width)\n            .attr('height', $$.height)\n            .attr('class', CLASS.eventRect)\n            .on('mouseout', function () {\n                if (!$$.config) { return; } // chart is destroyed\n                if ($$.hasArcType()) { return; }\n                mouseout();\n            })\n            .on('mousemove', function () {\n                var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n                var mouse, closest, sameXData, selectedData;\n\n                if ($$.dragging) { return; } // do nothing when dragging\n                if ($$.hasArcType(targetsToShow)) { return; }\n\n                mouse = d3.mouse(this);\n                closest = $$.findClosestFromTargets(targetsToShow, mouse);\n\n                if ($$.mouseover && (!closest || closest.id !== $$.mouseover.id)) {\n                    config.data_onmouseout.call($$.api, $$.mouseover);\n                    $$.mouseover = undefined;\n                }\n\n                if (! closest) {\n                    mouseout();\n                    return;\n                }\n\n                if ($$.isScatterType(closest) || !config.tooltip_grouped) {\n                    sameXData = [closest];\n                } else {\n                    sameXData = $$.filterByX(targetsToShow, closest.x);\n                }\n\n                // show tooltip when cursor is close to some point\n                selectedData = sameXData.map(function (d) {\n                    return $$.addName(d);\n                });\n                $$.showTooltip(selectedData, this);\n\n                // expand points\n                if (config.point_focus_expand_enabled) {\n                    $$.expandCircles(closest.index, closest.id, true);\n                }\n                $$.expandBars(closest.index, closest.id, true);\n\n                // Show xgrid focus line\n                $$.showXGridFocus(selectedData);\n\n                // Show cursor as pointer if point is close to mouse position\n                if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                    $$.svg.select('.' + CLASS.eventRect).style('cursor', 'pointer');\n                    if (!$$.mouseover) {\n                        config.data_onmouseover.call($$.api, closest);\n                        $$.mouseover = closest;\n                    }\n                }\n            })\n            .on('click', function () {\n                var targetsToShow = $$.filterTargetsToShow($$.data.targets);\n                var mouse, closest;\n                if ($$.hasArcType(targetsToShow)) { return; }\n\n                mouse = d3.mouse(this);\n                closest = $$.findClosestFromTargets(targetsToShow, mouse);\n                if (! closest) { return; }\n                // select if selection enabled\n                if ($$.isBarType(closest.id) || $$.dist(closest, mouse) < config.point_sensitivity) {\n                    $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(closest.id)).selectAll('.' + CLASS.shape + '-' + closest.index).each(function () {\n                        if (config.data_selection_grouped || $$.isWithinShape(this, closest)) {\n                            $$.toggleShape(this, closest, closest.index);\n                            $$.config.data_onclick.call($$.api, closest, this);\n                        }\n                    });\n                }\n            })\n            .call(\n                config.data_selection_draggable && $$.drag ? (\n                    d3.behavior.drag().origin(Object)\n                        .on('drag', function () { $$.drag(d3.mouse(this)); })\n                        .on('dragstart', function () { $$.dragstart(d3.mouse(this)); })\n                        .on('dragend', function () { $$.dragend(); })\n                ) : function () {}\n            );\n    };\n    c3_chart_internal_fn.dispatchEvent = function (type, index, mouse) {\n        var $$ = this,\n            selector = '.' + CLASS.eventRect + (!$$.isMultipleX() ? '-' + index : ''),\n            eventRect = $$.main.select(selector).node(),\n            box = eventRect.getBoundingClientRect(),\n            x = box.left + (mouse ? mouse[0] : 0),\n            y = box.top + (mouse ? mouse[1] : 0),\n            event = document.createEvent(\"MouseEvents\");\n\n        event.initMouseEvent(type, true, true, window, 0, x, y, x, y,\n                             false, false, false, false, 0, null);\n        eventRect.dispatchEvent(event);\n    };\n\n    c3_chart_internal_fn.getCurrentWidth = function () {\n        var $$ = this, config = $$.config;\n        return config.size_width ? config.size_width : $$.getParentWidth();\n    };\n    c3_chart_internal_fn.getCurrentHeight = function () {\n        var $$ = this, config = $$.config,\n            h = config.size_height ? config.size_height : $$.getParentHeight();\n        return h > 0 ? h : 320 / ($$.hasType('gauge') && !config.gauge_fullCircle ? 2 : 1); \n    };\n    c3_chart_internal_fn.getCurrentPaddingTop = function () {\n        var $$ = this,\n            config = $$.config,\n            padding = isValue(config.padding_top) ? config.padding_top : 0;\n        if ($$.title && $$.title.node()) {\n            padding += $$.getTitlePadding();\n        }\n        return padding;\n    };\n    c3_chart_internal_fn.getCurrentPaddingBottom = function () {\n        var config = this.config;\n        return isValue(config.padding_bottom) ? config.padding_bottom : 0;\n    };\n    c3_chart_internal_fn.getCurrentPaddingLeft = function (withoutRecompute) {\n        var $$ = this, config = $$.config;\n        if (isValue(config.padding_left)) {\n            return config.padding_left;\n        } else if (config.axis_rotated) {\n            return !config.axis_x_show ? 1 : Math.max(ceil10($$.getAxisWidthByAxisId('x', withoutRecompute)), 40);\n        } else if (!config.axis_y_show || config.axis_y_inner) { // && !config.axis_rotated\n            return $$.axis.getYAxisLabelPosition().isOuter ? 30 : 1;\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y', withoutRecompute));\n        }\n    };\n    c3_chart_internal_fn.getCurrentPaddingRight = function () {\n        var $$ = this, config = $$.config,\n            defaultPadding = 10, legendWidthOnRight = $$.isLegendRight ? $$.getLegendWidth() + 20 : 0;\n        if (isValue(config.padding_right)) {\n            return config.padding_right + 1; // 1 is needed not to hide tick line\n        } else if (config.axis_rotated) {\n            return defaultPadding + legendWidthOnRight;\n        } else if (!config.axis_y2_show || config.axis_y2_inner) { // && !config.axis_rotated\n            return 2 + legendWidthOnRight + ($$.axis.getY2AxisLabelPosition().isOuter ? 20 : 0);\n        } else {\n            return ceil10($$.getAxisWidthByAxisId('y2')) + legendWidthOnRight;\n        }\n    };\n\n    c3_chart_internal_fn.getParentRectValue = function (key) {\n        var parent = this.selectChart.node(), v;\n        while (parent && parent.tagName !== 'BODY') {\n            try {\n                v = parent.getBoundingClientRect()[key];\n            } catch(e) {\n                if (key === 'width') {\n                    // In IE in certain cases getBoundingClientRect\n                    // will cause an \"unspecified error\"\n                    v = parent.offsetWidth;\n                }\n            }\n            if (v) {\n                break;\n            }\n            parent = parent.parentNode;\n        }\n        return v;\n    };\n    c3_chart_internal_fn.getParentWidth = function () {\n        return this.getParentRectValue('width');\n    };\n    c3_chart_internal_fn.getParentHeight = function () {\n        var h = this.selectChart.style('height');\n        return h.indexOf('px') > 0 ? +h.replace('px', '') : 0;\n    };\n\n\n    c3_chart_internal_fn.getSvgLeft = function (withoutRecompute) {\n        var $$ = this, config = $$.config,\n            hasLeftAxisRect = config.axis_rotated || (!config.axis_rotated && !config.axis_y_inner),\n            leftAxisClass = config.axis_rotated ? CLASS.axisX : CLASS.axisY,\n            leftAxis = $$.main.select('.' + leftAxisClass).node(),\n            svgRect = leftAxis && hasLeftAxisRect ? leftAxis.getBoundingClientRect() : {right: 0},\n            chartRect = $$.selectChart.node().getBoundingClientRect(),\n            hasArc = $$.hasArcType(),\n            svgLeft = svgRect.right - chartRect.left - (hasArc ? 0 : $$.getCurrentPaddingLeft(withoutRecompute));\n        return svgLeft > 0 ? svgLeft : 0;\n    };\n\n\n    c3_chart_internal_fn.getAxisWidthByAxisId = function (id, withoutRecompute) {\n        var $$ = this, position = $$.axis.getLabelPositionById(id);\n        return $$.axis.getMaxTickWidth(id, withoutRecompute) + (position.isInner ? 20 : 40);\n    };\n    c3_chart_internal_fn.getHorizontalAxisHeight = function (axisId) {\n        var $$ = this, config = $$.config, h = 30;\n        if (axisId === 'x' && !config.axis_x_show) { return 8; }\n        if (axisId === 'x' && config.axis_x_height) { return config.axis_x_height; }\n        if (axisId === 'y' && !config.axis_y_show) { \n            return config.legend_show && !$$.isLegendRight && !$$.isLegendInset ? 10 : 1; \n        }\n        if (axisId === 'y2' && !config.axis_y2_show) { return $$.rotated_padding_top; }\n        // Calculate x axis height when tick rotated\n        if (axisId === 'x' && !config.axis_rotated && config.axis_x_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_x_tick_rotate) / 180);\n        }\n        // Calculate y axis height when tick rotated\n        if (axisId === 'y' && config.axis_rotated && config.axis_y_tick_rotate) {\n            h = 30 + $$.axis.getMaxTickWidth(axisId) * Math.cos(Math.PI * (90 - config.axis_y_tick_rotate) / 180);\n        }\n        return h + ($$.axis.getLabelPositionById(axisId).isInner ? 0 : 10) + (axisId === 'y2' ? -10 : 0);\n    };\n\n    c3_chart_internal_fn.getEventRectWidth = function () {\n        return Math.max(0, this.xAxis.tickInterval());\n    };\n\n    c3_chart_internal_fn.getShapeIndices = function (typeFilter) {\n        var $$ = this, config = $$.config,\n            indices = {}, i = 0, j, k;\n        $$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$)).forEach(function (d) {\n            for (j = 0; j < config.data_groups.length; j++) {\n                if (config.data_groups[j].indexOf(d.id) < 0) { continue; }\n                for (k = 0; k < config.data_groups[j].length; k++) {\n                    if (config.data_groups[j][k] in indices) {\n                        indices[d.id] = indices[config.data_groups[j][k]];\n                        break;\n                    }\n                }\n            }\n            if (isUndefined(indices[d.id])) { indices[d.id] = i++; }\n        });\n        indices.__max__ = i - 1;\n        return indices;\n    };\n    c3_chart_internal_fn.getShapeX = function (offset, targetsNum, indices, isSub) {\n        var $$ = this, scale = isSub ? $$.subX : $$.x;\n        return function (d) {\n            var index = d.id in indices ? indices[d.id] : 0;\n            return d.x || d.x === 0 ? scale(d.x) - offset * (targetsNum / 2 - index) : 0;\n        };\n    };\n    c3_chart_internal_fn.getShapeY = function (isSub) {\n        var $$ = this;\n        return function (d) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id);\n            return scale(d.value);\n        };\n    };\n    c3_chart_internal_fn.getShapeOffset = function (typeFilter, indices, isSub) {\n        var $$ = this,\n            targets = $$.orderTargets($$.filterTargetsToShow($$.data.targets.filter(typeFilter, $$))),\n            targetIds = targets.map(function (t) { return t.id; });\n        return function (d, i) {\n            var scale = isSub ? $$.getSubYScale(d.id) : $$.getYScale(d.id),\n                y0 = scale(0), offset = y0;\n            targets.forEach(function (t) {\n                var values = $$.isStepType(d) ? $$.convertValuesToStep(t.values) : t.values;\n                if (t.id === d.id || indices[t.id] !== indices[d.id]) { return; }\n                if (targetIds.indexOf(t.id) < targetIds.indexOf(d.id)) {\n                    // check if the x values line up\n                    if (typeof values[i] === 'undefined' || +values[i].x !== +d.x) {  // \"+\" for timeseries\n                        // if not, try to find the value that does line up\n                        i = -1;\n                        values.forEach(function (v, j) {\n                            if (v.x === d.x) {\n                                i = j;\n                            }\n                        });\n                    }\n                    if (i in values && values[i].value * d.value >= 0) {\n                        offset += scale(values[i].value) - y0;\n                    }\n                }\n            });\n            return offset;\n        };\n    };\n    c3_chart_internal_fn.isWithinShape = function (that, d) {\n        var $$ = this,\n            shape = $$.d3.select(that), isWithin;\n        if (!$$.isTargetToShow(d.id)) {\n            isWithin = false;\n        }\n        else if (that.nodeName === 'circle') {\n            isWithin = $$.isStepType(d) ? $$.isWithinStep(that, $$.getYScale(d.id)(d.value)) : $$.isWithinCircle(that, $$.pointSelectR(d) * 1.5);\n        }\n        else if (that.nodeName === 'path') {\n            isWithin = shape.classed(CLASS.bar) ? $$.isWithinBar(that) : true;\n        }\n        return isWithin;\n    };\n\n\n    c3_chart_internal_fn.getInterpolate = function (d) {\n        var $$ = this,\n            interpolation = $$.isInterpolationType($$.config.spline_interpolation_type) ? $$.config.spline_interpolation_type : 'cardinal';\n        return $$.isSplineType(d) ? interpolation : $$.isStepType(d) ? $$.config.line_step_type : \"linear\";\n    };\n\n    c3_chart_internal_fn.initLine = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartLines);\n    };\n    c3_chart_internal_fn.updateTargetsForLine = function (targets) {\n        var $$ = this, config = $$.config,\n            mainLineUpdate, mainLineEnter,\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$),\n            classCircles = $$.classCircles.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainLineUpdate = $$.main.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine)\n            .data(targets)\n            .attr('class', function (d) { return classChartLine(d) + classFocus(d); });\n        mainLineEnter = mainLineUpdate.enter().append('g')\n            .attr('class', classChartLine)\n            .style('opacity', 0)\n            .style(\"pointer-events\", \"none\");\n        // Lines for each data\n        mainLineEnter.append('g')\n            .attr(\"class\", classLines);\n        // Areas\n        mainLineEnter.append('g')\n            .attr('class', classAreas);\n        // Circles for each data point on lines\n        mainLineEnter.append('g')\n            .attr(\"class\", function (d) { return $$.generateClass(CLASS.selectedCircles, d.id); });\n        mainLineEnter.append('g')\n            .attr(\"class\", classCircles)\n            .style(\"cursor\", function (d) { return config.data_selection_isselectable(d) ? \"pointer\" : null; });\n        // Update date for selected circles\n        targets.forEach(function (t) {\n            $$.main.selectAll('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(t.id)).selectAll('.' + CLASS.selectedCircle).each(function (d) {\n                d.value = t.values[d.index].value;\n            });\n        });\n        // MEMO: can not keep same color...\n        //mainLineUpdate.exit().remove();\n    };\n    c3_chart_internal_fn.updateLine = function (durationForExit) {\n        var $$ = this;\n        $$.mainLine = $$.main.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line)\n            .data($$.lineData.bind($$));\n        $$.mainLine.enter().append('path')\n            .attr('class', $$.classLine.bind($$))\n            .style(\"stroke\", $$.color);\n        $$.mainLine\n            .style(\"opacity\", $$.initialOpacity.bind($$))\n            .style('shape-rendering', function (d) { return $$.isStepType(d) ? 'crispEdges' : ''; })\n            .attr('transform', null);\n        $$.mainLine.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawLine = function (drawLine, withTransition) {\n        return [\n            (withTransition ? this.mainLine.transition(Math.random().toString()) : this.mainLine)\n                .attr(\"d\", drawLine)\n                .style(\"stroke\", this.color)\n                .style(\"opacity\", 1)\n        ];\n    };\n    c3_chart_internal_fn.generateDrawLine = function (lineIndices, isSub) {\n        var $$ = this, config = $$.config,\n            line = $$.d3.svg.line(),\n            getPoints = $$.generateGetLinePoints(lineIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function (d) { return (isSub ? $$.subxx : $$.xx).call($$, d); },\n            yValue = function (d, i) {\n                return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)(d.value);\n            };\n\n        line = config.axis_rotated ? line.x(yValue).y(xValue) : line.x(xValue).y(yValue);\n        if (!config.line_connectNull) { line = line.defined(function (d) { return d.value != null; }); }\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x = isSub ? $$.x : $$.subX, y = yScaleGetter.call($$, d.id), x0 = 0, y0 = 0, path;\n            if ($$.isLineType(d)) {\n                if (config.data_regions[d.id]) {\n                    path = $$.lineWithRegions(values, x, y, config.data_regions[d.id]);\n                } else {\n                    if ($$.isStepType(d)) { values = $$.convertValuesToStep(values); }\n                    path = line.interpolate($$.getInterpolate(d))(values);\n                }\n            } else {\n                if (values[0]) {\n                    x0 = x(values[0].x);\n                    y0 = y(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.generateGetLinePoints = function (lineIndices, isSub) { // partial duplication of generateGetBarPoints\n        var $$ = this, config = $$.config,\n            lineTargetsNum = lineIndices.__max__ + 1,\n            x = $$.getShapeX(0, lineTargetsNum, lineIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            lineOffset = $$.getShapeOffset($$.isLineType, lineIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = lineOffset(d, i) || y0, // offset is for stacked area chart\n                posX = x(d), posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) { posY = y0; }\n            }\n            // 1 point that marks the line position\n            return [\n                [posX, posY - (y0 - offset)],\n                [posX, posY - (y0 - offset)], // needed for compatibility\n                [posX, posY - (y0 - offset)], // needed for compatibility\n                [posX, posY - (y0 - offset)]  // needed for compatibility\n            ];\n        };\n    };\n\n\n    c3_chart_internal_fn.lineWithRegions = function (d, x, y, _regions) {\n        var $$ = this, config = $$.config,\n            prev = -1, i, j,\n            s = \"M\", sWithRegion,\n            xp, yp, dx, dy, dd, diff, diffx2,\n            xOffset = $$.isCategorized() ? 0.5 : 0,\n            xValue, yValue,\n            regions = [];\n\n        function isWithinRegions(x, regions) {\n            var i;\n            for (i = 0; i < regions.length; i++) {\n                if (regions[i].start < x && x <= regions[i].end) { return true; }\n            }\n            return false;\n        }\n\n        // Check start/end of regions\n        if (isDefined(_regions)) {\n            for (i = 0; i < _regions.length; i++) {\n                regions[i] = {};\n                if (isUndefined(_regions[i].start)) {\n                    regions[i].start = d[0].x;\n                } else {\n                    regions[i].start = $$.isTimeSeries() ? $$.parseDate(_regions[i].start) : _regions[i].start;\n                }\n                if (isUndefined(_regions[i].end)) {\n                    regions[i].end = d[d.length - 1].x;\n                } else {\n                    regions[i].end = $$.isTimeSeries() ? $$.parseDate(_regions[i].end) : _regions[i].end;\n                }\n            }\n        }\n\n        // Set scales\n        xValue = config.axis_rotated ? function (d) { return y(d.value); } : function (d) { return x(d.x); };\n        yValue = config.axis_rotated ? function (d) { return x(d.x); } : function (d) { return y(d.value); };\n\n        // Define svg generator function for region\n        function generateM(points) {\n            return 'M' + points[0][0] + ' ' + points[0][1] + ' ' + points[1][0] + ' ' + points[1][1];\n        }\n        if ($$.isTimeSeries()) {\n            sWithRegion = function (d0, d1, j, diff) {\n                var x0 = d0.x.getTime(), x_diff = d1.x - d0.x,\n                    xv0 = new Date(x0 + x_diff * j),\n                    xv1 = new Date(x0 + x_diff * (j + diff)),\n                    points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j)), x(xv0)], [y(yp(j + diff)), x(xv1)]];\n                } else {\n                    points = [[x(xv0), y(yp(j))], [x(xv1), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        } else {\n            sWithRegion = function (d0, d1, j, diff) {\n                var points;\n                if (config.axis_rotated) {\n                    points = [[y(yp(j), true), x(xp(j))], [y(yp(j + diff), true), x(xp(j + diff))]];\n                } else {\n                    points = [[x(xp(j), true), y(yp(j))], [x(xp(j + diff), true), y(yp(j + diff))]];\n                }\n                return generateM(points);\n            };\n        }\n\n        // Generate\n        for (i = 0; i < d.length; i++) {\n\n            // Draw as normal\n            if (isUndefined(regions) || ! isWithinRegions(d[i].x, regions)) {\n                s += \" \" + xValue(d[i]) + \" \" + yValue(d[i]);\n            }\n            // Draw with region // TODO: Fix for horizotal charts\n            else {\n                xp = $$.getScale(d[i - 1].x + xOffset, d[i].x + xOffset, $$.isTimeSeries());\n                yp = $$.getScale(d[i - 1].value, d[i].value);\n\n                dx = x(d[i].x) - x(d[i - 1].x);\n                dy = y(d[i].value) - y(d[i - 1].value);\n                dd = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));\n                diff = 2 / dd;\n                diffx2 = diff * 2;\n\n                for (j = diff; j <= 1; j += diffx2) {\n                    s += sWithRegion(d[i - 1], d[i], j, diff);\n                }\n            }\n            prev = d[i].x;\n        }\n\n        return s;\n    };\n\n\n    c3_chart_internal_fn.updateArea = function (durationForExit) {\n        var $$ = this, d3 = $$.d3;\n        $$.mainArea = $$.main.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area)\n            .data($$.lineData.bind($$));\n        $$.mainArea.enter().append('path')\n            .attr(\"class\", $$.classArea.bind($$))\n            .style(\"fill\", $$.color)\n            .style(\"opacity\", function () { $$.orgAreaOpacity = +d3.select(this).style('opacity'); return 0; });\n        $$.mainArea\n            .style(\"opacity\", $$.orgAreaOpacity);\n        $$.mainArea.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawArea = function (drawArea, withTransition) {\n        return [\n            (withTransition ? this.mainArea.transition(Math.random().toString()) : this.mainArea)\n                .attr(\"d\", drawArea)\n                .style(\"fill\", this.color)\n                .style(\"opacity\", this.orgAreaOpacity)\n        ];\n    };\n    c3_chart_internal_fn.generateDrawArea = function (areaIndices, isSub) {\n        var $$ = this, config = $$.config, area = $$.d3.svg.area(),\n            getPoints = $$.generateGetAreaPoints(areaIndices, isSub),\n            yScaleGetter = isSub ? $$.getSubYScale : $$.getYScale,\n            xValue = function (d) { return (isSub ? $$.subxx : $$.xx).call($$, d); },\n            value0 = function (d, i) {\n                return config.data_groups.length > 0 ? getPoints(d, i)[0][1] : yScaleGetter.call($$, d.id)($$.getAreaBaseValue(d.id));\n            },\n            value1 = function (d, i) {\n                return config.data_groups.length > 0 ? getPoints(d, i)[1][1] : yScaleGetter.call($$, d.id)(d.value);\n            };\n\n        area = config.axis_rotated ? area.x0(value0).x1(value1).y(xValue) : area.x(xValue).y0(config.area_above ? 0 : value0).y1(value1);\n        if (!config.line_connectNull) {\n            area = area.defined(function (d) { return d.value !== null; });\n        }\n\n        return function (d) {\n            var values = config.line_connectNull ? $$.filterRemoveNull(d.values) : d.values,\n                x0 = 0, y0 = 0, path;\n            if ($$.isAreaType(d)) {\n                if ($$.isStepType(d)) { values = $$.convertValuesToStep(values); }\n                path = area.interpolate($$.getInterpolate(d))(values);\n            } else {\n                if (values[0]) {\n                    x0 = $$.x(values[0].x);\n                    y0 = $$.getYScale(d.id)(values[0].value);\n                }\n                path = config.axis_rotated ? \"M \" + y0 + \" \" + x0 : \"M \" + x0 + \" \" + y0;\n            }\n            return path ? path : \"M 0 0\";\n        };\n    };\n    c3_chart_internal_fn.getAreaBaseValue = function () {\n        return 0;\n    };\n    c3_chart_internal_fn.generateGetAreaPoints = function (areaIndices, isSub) { // partial duplication of generateGetBarPoints\n        var $$ = this, config = $$.config,\n            areaTargetsNum = areaIndices.__max__ + 1,\n            x = $$.getShapeX(0, areaTargetsNum, areaIndices, !!isSub),\n            y = $$.getShapeY(!!isSub),\n            areaOffset = $$.getShapeOffset($$.isAreaType, areaIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = areaOffset(d, i) || y0, // offset is for stacked area chart\n                posX = x(d), posY = y(d);\n            // fix posY not to overflow opposite quadrant\n            if (config.axis_rotated) {\n                if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) { posY = y0; }\n            }\n            // 1 point that marks the area position\n            return [\n                [posX, offset],\n                [posX, posY - (y0 - offset)],\n                [posX, posY - (y0 - offset)], // needed for compatibility\n                [posX, offset] // needed for compatibility\n            ];\n        };\n    };\n\n\n    c3_chart_internal_fn.updateCircle = function () {\n        var $$ = this;\n        $$.mainCircle = $$.main.selectAll('.' + CLASS.circles).selectAll('.' + CLASS.circle)\n            .data($$.lineOrScatterData.bind($$));\n        $$.mainCircle.enter().append(\"circle\")\n            .attr(\"class\", $$.classCircle.bind($$))\n            .attr(\"r\", $$.pointR.bind($$))\n            .style(\"fill\", $$.color);\n        $$.mainCircle\n            .style(\"opacity\", $$.initialOpacityForCircle.bind($$));\n        $$.mainCircle.exit().remove();\n    };\n    c3_chart_internal_fn.redrawCircle = function (cx, cy, withTransition) {\n        var selectedCircles = this.main.selectAll('.' + CLASS.selectedCircle);\n        return [\n            (withTransition ? this.mainCircle.transition(Math.random().toString()) : this.mainCircle)\n                .style('opacity', this.opacityForCircle.bind(this))\n                .style(\"fill\", this.color)\n                .attr(\"cx\", cx)\n                .attr(\"cy\", cy),\n            (withTransition ? selectedCircles.transition(Math.random().toString()) : selectedCircles)\n                .attr(\"cx\", cx)\n                .attr(\"cy\", cy)\n        ];\n    };\n    c3_chart_internal_fn.circleX = function (d) {\n        return d.x || d.x === 0 ? this.x(d.x) : null;\n    };\n    c3_chart_internal_fn.updateCircleY = function () {\n        var $$ = this, lineIndices, getPoints;\n        if ($$.config.data_groups.length > 0) {\n            lineIndices = $$.getShapeIndices($$.isLineType),\n            getPoints = $$.generateGetLinePoints(lineIndices);\n            $$.circleY = function (d, i) {\n                return getPoints(d, i)[0][1];\n            };\n        } else {\n            $$.circleY = function (d) {\n                return $$.getYScale(d.id)(d.value);\n            };\n        }\n    };\n    c3_chart_internal_fn.getCircles = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.circles + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.circle + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandCircles = function (i, id, reset) {\n        var $$ = this,\n            r = $$.pointExpandedR.bind($$);\n        if (reset) { $$.unexpandCircles(); }\n        $$.getCircles(i, id)\n            .classed(CLASS.EXPANDED, true)\n            .attr('r', r);\n    };\n    c3_chart_internal_fn.unexpandCircles = function (i) {\n        var $$ = this,\n            r = $$.pointR.bind($$);\n        $$.getCircles(i)\n            .filter(function () { return $$.d3.select(this).classed(CLASS.EXPANDED); })\n            .classed(CLASS.EXPANDED, false)\n            .attr('r', r);\n    };\n    c3_chart_internal_fn.pointR = function (d) {\n        var $$ = this, config = $$.config;\n        return $$.isStepType(d) ? 0 : (isFunction(config.point_r) ? config.point_r(d) : config.point_r);\n    };\n    c3_chart_internal_fn.pointExpandedR = function (d) {\n        var $$ = this, config = $$.config;\n        return config.point_focus_expand_enabled ? (config.point_focus_expand_r ? config.point_focus_expand_r : $$.pointR(d) * 1.75) : $$.pointR(d);\n    };\n    c3_chart_internal_fn.pointSelectR = function (d) {\n        var $$ = this, config = $$.config;\n        return isFunction(config.point_select_r) ? config.point_select_r(d) : ((config.point_select_r) ? config.point_select_r : $$.pointR(d) * 4);\n    };\n    c3_chart_internal_fn.isWithinCircle = function (that, r) {\n        var d3 = this.d3,\n            mouse = d3.mouse(that), d3_this = d3.select(that),\n            cx = +d3_this.attr(\"cx\"), cy = +d3_this.attr(\"cy\");\n        return Math.sqrt(Math.pow(cx - mouse[0], 2) + Math.pow(cy - mouse[1], 2)) < r;\n    };\n    c3_chart_internal_fn.isWithinStep = function (that, y) {\n        return Math.abs(y - this.d3.mouse(that)[1]) < 30;\n    };\n\n    c3_chart_internal_fn.initBar = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartBars);\n    };\n    c3_chart_internal_fn.updateTargetsForBar = function (targets) {\n        var $$ = this, config = $$.config,\n            mainBarUpdate, mainBarEnter,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainBarUpdate = $$.main.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar)\n            .data(targets)\n            .attr('class', function (d) { return classChartBar(d) + classFocus(d); });\n        mainBarEnter = mainBarUpdate.enter().append('g')\n            .attr('class', classChartBar)\n            .style('opacity', 0)\n            .style(\"pointer-events\", \"none\");\n        // Bars for each data\n        mainBarEnter.append('g')\n            .attr(\"class\", classBars)\n            .style(\"cursor\", function (d) { return config.data_selection_isselectable(d) ? \"pointer\" : null; });\n\n    };\n    c3_chart_internal_fn.updateBar = function (durationForExit) {\n        var $$ = this,\n            barData = $$.barData.bind($$),\n            classBar = $$.classBar.bind($$),\n            initialOpacity = $$.initialOpacity.bind($$),\n            color = function (d) { return $$.color(d.id); };\n        $$.mainBar = $$.main.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar)\n            .data(barData);\n        $$.mainBar.enter().append('path')\n            .attr(\"class\", classBar)\n            .style(\"stroke\", color)\n            .style(\"fill\", color);\n        $$.mainBar\n            .style(\"opacity\", initialOpacity);\n        $$.mainBar.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawBar = function (drawBar, withTransition) {\n        return [\n            (withTransition ? this.mainBar.transition(Math.random().toString()) : this.mainBar)\n                .attr('d', drawBar)\n                .style(\"fill\", this.color)\n                .style(\"opacity\", 1)\n        ];\n    };\n    c3_chart_internal_fn.getBarW = function (axis, barTargetsNum) {\n        var $$ = this, config = $$.config,\n            w = typeof config.bar_width === 'number' ? config.bar_width : barTargetsNum ? (axis.tickInterval() * config.bar_width_ratio) / barTargetsNum : 0;\n        return config.bar_width_max && w > config.bar_width_max ? config.bar_width_max : w;\n    };\n    c3_chart_internal_fn.getBars = function (i, id) {\n        var $$ = this;\n        return (id ? $$.main.selectAll('.' + CLASS.bars + $$.getTargetSelectorSuffix(id)) : $$.main).selectAll('.' + CLASS.bar + (isValue(i) ? '-' + i : ''));\n    };\n    c3_chart_internal_fn.expandBars = function (i, id, reset) {\n        var $$ = this;\n        if (reset) { $$.unexpandBars(); }\n        $$.getBars(i, id).classed(CLASS.EXPANDED, true);\n    };\n    c3_chart_internal_fn.unexpandBars = function (i) {\n        var $$ = this;\n        $$.getBars(i).classed(CLASS.EXPANDED, false);\n    };\n    c3_chart_internal_fn.generateDrawBar = function (barIndices, isSub) {\n        var $$ = this, config = $$.config,\n            getPoints = $$.generateGetBarPoints(barIndices, isSub);\n        return function (d, i) {\n            // 4 points that make a bar\n            var points = getPoints(d, i);\n\n            // switch points if axis is rotated, not applicable for sub chart\n            var indexX = config.axis_rotated ? 1 : 0;\n            var indexY = config.axis_rotated ? 0 : 1;\n\n            var path = 'M ' + points[0][indexX] + ',' + points[0][indexY] + ' ' +\n                    'L' + points[1][indexX] + ',' + points[1][indexY] + ' ' +\n                    'L' + points[2][indexX] + ',' + points[2][indexY] + ' ' +\n                    'L' + points[3][indexX] + ',' + points[3][indexY] + ' ' +\n                    'z';\n\n            return path;\n        };\n    };\n    c3_chart_internal_fn.generateGetBarPoints = function (barIndices, isSub) {\n        var $$ = this,\n            axis = isSub ? $$.subXAxis : $$.xAxis,\n            barTargetsNum = barIndices.__max__ + 1,\n            barW = $$.getBarW(axis, barTargetsNum),\n            barX = $$.getShapeX(barW, barTargetsNum, barIndices, !!isSub),\n            barY = $$.getShapeY(!!isSub),\n            barOffset = $$.getShapeOffset($$.isBarType, barIndices, !!isSub),\n            yScale = isSub ? $$.getSubYScale : $$.getYScale;\n        return function (d, i) {\n            var y0 = yScale.call($$, d.id)(0),\n                offset = barOffset(d, i) || y0, // offset is for stacked bar chart\n                posX = barX(d), posY = barY(d);\n            // fix posY not to overflow opposite quadrant\n            if ($$.config.axis_rotated) {\n                if ((0 < d.value && posY < y0) || (d.value < 0 && y0 < posY)) { posY = y0; }\n            }\n            // 4 points that make a bar\n            return [\n                [posX, offset],\n                [posX, posY - (y0 - offset)],\n                [posX + barW, posY - (y0 - offset)],\n                [posX + barW, offset]\n            ];\n        };\n    };\n    c3_chart_internal_fn.isWithinBar = function (that) {\n        var mouse = this.d3.mouse(that), box = that.getBoundingClientRect(),\n            seg0 = that.pathSegList.getItem(0), seg1 = that.pathSegList.getItem(1),\n            x = Math.min(seg0.x, seg1.x), y = Math.min(seg0.y, seg1.y),\n            w = box.width, h = box.height, offset = 2,\n            sx = x - offset, ex = x + w + offset, sy = y + h + offset, ey = y - offset;\n        return sx < mouse[0] && mouse[0] < ex && ey < mouse[1] && mouse[1] < sy;\n    };\n\n    c3_chart_internal_fn.initText = function () {\n        var $$ = this;\n        $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartTexts);\n        $$.mainText = $$.d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateTargetsForText = function (targets) {\n        var $$ = this, mainTextUpdate, mainTextEnter,\n            classChartText = $$.classChartText.bind($$),\n            classTexts = $$.classTexts.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainTextUpdate = $$.main.select('.' + CLASS.chartTexts).selectAll('.' + CLASS.chartText)\n            .data(targets)\n            .attr('class', function (d) { return classChartText(d) + classFocus(d); });\n        mainTextEnter = mainTextUpdate.enter().append('g')\n            .attr('class', classChartText)\n            .style('opacity', 0)\n            .style(\"pointer-events\", \"none\");\n        mainTextEnter.append('g')\n            .attr('class', classTexts);\n    };\n    c3_chart_internal_fn.updateText = function (durationForExit) {\n        var $$ = this, config = $$.config,\n            barOrLineData = $$.barOrLineData.bind($$),\n            classText = $$.classText.bind($$);\n        $$.mainText = $$.main.selectAll('.' + CLASS.texts).selectAll('.' + CLASS.text)\n            .data(barOrLineData);\n        $$.mainText.enter().append('text')\n            .attr(\"class\", classText)\n            .attr('text-anchor', function (d) { return config.axis_rotated ? (d.value < 0 ? 'end' : 'start') : 'middle'; })\n            .style(\"stroke\", 'none')\n            .style(\"fill\", function (d) { return $$.color(d); })\n            .style(\"fill-opacity\", 0);\n        $$.mainText\n            .text(function (d, i, j) { return $$.dataLabelFormat(d.id)(d.value, d.id, i, j); });\n        $$.mainText.exit()\n            .transition().duration(durationForExit)\n            .style('fill-opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawText = function (xForText, yForText, forFlow, withTransition) {\n        return [\n            (withTransition ? this.mainText.transition() : this.mainText)\n                .attr('x', xForText)\n                .attr('y', yForText)\n                .style(\"fill\", this.color)\n                .style(\"fill-opacity\", forFlow ? 0 : this.opacityForText.bind(this))\n        ];\n    };\n    c3_chart_internal_fn.getTextRect = function (text, cls, element) {\n        var dummy = this.d3.select('body').append('div').classed('c3', true),\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n            font = this.d3.select(element).style('font'),\n            rect;\n        svg.selectAll('.dummy')\n            .data([text])\n          .enter().append('text')\n            .classed(cls ? cls : \"\", true)\n            .style('font', font)\n            .text(text)\n          .each(function () { rect = this.getBoundingClientRect(); });\n        dummy.remove();\n        return rect;\n    };\n    c3_chart_internal_fn.generateXYForText = function (areaIndices, barIndices, lineIndices, forX) {\n        var $$ = this,\n            getAreaPoints = $$.generateGetAreaPoints(areaIndices, false),\n            getBarPoints = $$.generateGetBarPoints(barIndices, false),\n            getLinePoints = $$.generateGetLinePoints(lineIndices, false),\n            getter = forX ? $$.getXForText : $$.getYForText;\n        return function (d, i) {\n            var getPoints = $$.isAreaType(d) ? getAreaPoints : $$.isBarType(d) ? getBarPoints : getLinePoints;\n            return getter.call($$, getPoints(d, i), d, this);\n        };\n    };\n    c3_chart_internal_fn.getXForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(), xPos, padding;\n        if ($$.config.axis_rotated) {\n            padding = $$.isBarType(d) ? 4 : 6;\n            xPos = points[2][1] + padding * (d.value < 0 ? -1 : 1);\n        } else {\n            xPos = $$.hasType('bar') ? (points[2][0] + points[0][0]) / 2 : points[0][0];\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null) {\n            if (xPos > $$.width) {\n                xPos = $$.width - box.width;\n            } else if (xPos < 0) {\n                xPos = 4;\n            }\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.getYForText = function (points, d, textElement) {\n        var $$ = this,\n            box = textElement.getBoundingClientRect(),\n            yPos;\n        if ($$.config.axis_rotated) {\n            yPos = (points[0][0] + points[2][0] + box.height * 0.6) / 2;\n        } else {\n            yPos = points[2][1];\n            if (d.value < 0  || (d.value === 0 && !$$.hasPositiveValue)) {\n                yPos += box.height;\n                if ($$.isBarType(d) && $$.isSafari()) {\n                    yPos -= 3;\n                }\n                else if (!$$.isBarType(d) && $$.isChrome()) {\n                    yPos += 3;\n                }\n            } else {\n                yPos += $$.isBarType(d) ? -3 : -6;\n            }\n        }\n        // show labels regardless of the domain if value is null\n        if (d.value === null && !$$.config.axis_rotated) {\n            if (yPos < box.height) {\n                yPos = box.height;\n            } else if (yPos > this.height) {\n                yPos = this.height - 4;\n            }\n        }\n        return yPos;\n    };\n\n    c3_chart_internal_fn.setTargetType = function (targetIds, type) {\n        var $$ = this, config = $$.config;\n        $$.mapToTargetIds(targetIds).forEach(function (id) {\n            $$.withoutFadeIn[id] = (type === config.data_types[id]);\n            config.data_types[id] = type;\n        });\n        if (!targetIds) {\n            config.data_type = type;\n        }\n    };\n    c3_chart_internal_fn.hasType = function (type, targets) {\n        var $$ = this, types = $$.config.data_types, has = false;\n        targets = targets || $$.data.targets;\n        if (targets && targets.length) {\n            targets.forEach(function (target) {\n                var t = types[target.id];\n                if ((t && t.indexOf(type) >= 0) || (!t && type === 'line')) {\n                    has = true;\n                }\n            });\n        } else if (Object.keys(types).length) {\n            Object.keys(types).forEach(function (id) {\n                if (types[id] === type) { has = true; }\n            });\n        } else {\n            has = $$.config.data_type === type;\n        }\n        return has;\n    };\n    c3_chart_internal_fn.hasArcType = function (targets) {\n        return this.hasType('pie', targets) || this.hasType('donut', targets) || this.hasType('gauge', targets);\n    };\n    c3_chart_internal_fn.isLineType = function (d) {\n        var config = this.config, id = isString(d) ? d : d.id;\n        return !config.data_types[id] || ['line', 'spline', 'area', 'area-spline', 'step', 'area-step'].indexOf(config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isStepType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['step', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isSplineType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['spline', 'area-spline'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isAreaType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return ['area', 'area-spline', 'area-step'].indexOf(this.config.data_types[id]) >= 0;\n    };\n    c3_chart_internal_fn.isBarType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'bar';\n    };\n    c3_chart_internal_fn.isScatterType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'scatter';\n    };\n    c3_chart_internal_fn.isPieType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'pie';\n    };\n    c3_chart_internal_fn.isGaugeType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'gauge';\n    };\n    c3_chart_internal_fn.isDonutType = function (d) {\n        var id = isString(d) ? d : d.id;\n        return this.config.data_types[id] === 'donut';\n    };\n    c3_chart_internal_fn.isArcType = function (d) {\n        return this.isPieType(d) || this.isDonutType(d) || this.isGaugeType(d);\n    };\n    c3_chart_internal_fn.lineData = function (d) {\n        return this.isLineType(d) ? [d] : [];\n    };\n    c3_chart_internal_fn.arcData = function (d) {\n        return this.isArcType(d.data) ? [d] : [];\n    };\n    /* not used\n     function scatterData(d) {\n     return isScatterType(d) ? d.values : [];\n     }\n     */\n    c3_chart_internal_fn.barData = function (d) {\n        return this.isBarType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.lineOrScatterData = function (d) {\n        return this.isLineType(d) || this.isScatterType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.barOrLineData = function (d) {\n        return this.isBarType(d) || this.isLineType(d) ? d.values : [];\n    };\n    c3_chart_internal_fn.isInterpolationType = function (type) {\n        return ['linear', 'linear-closed', 'basis', 'basis-open', 'basis-closed', 'bundle', 'cardinal', 'cardinal-open', 'cardinal-closed', 'monotone'].indexOf(type) >= 0;\n    };\n\n    c3_chart_internal_fn.initGrid = function () {\n        var $$ = this, config = $$.config, d3 = $$.d3;\n        $$.grid = $$.main.append('g')\n            .attr(\"clip-path\", $$.clipPathForGrid)\n            .attr('class', CLASS.grid);\n        if (config.grid_x_show) {\n            $$.grid.append(\"g\").attr(\"class\", CLASS.xgrids);\n        }\n        if (config.grid_y_show) {\n            $$.grid.append('g').attr('class', CLASS.ygrids);\n        }\n        if (config.grid_focus_show) {\n            $$.grid.append('g')\n                .attr(\"class\", CLASS.xgridFocus)\n                .append('line')\n                .attr('class', CLASS.xgridFocus);\n        }\n        $$.xgrid = d3.selectAll([]);\n        if (!config.grid_lines_front) { $$.initGridLines(); }\n    };\n    c3_chart_internal_fn.initGridLines = function () {\n        var $$ = this, d3 = $$.d3;\n        $$.gridLines = $$.main.append('g')\n            .attr(\"clip-path\", $$.clipPathForGrid)\n            .attr('class', CLASS.grid + ' ' + CLASS.gridLines);\n        $$.gridLines.append('g').attr(\"class\", CLASS.xgridLines);\n        $$.gridLines.append('g').attr('class', CLASS.ygridLines);\n        $$.xgridLines = d3.selectAll([]);\n    };\n    c3_chart_internal_fn.updateXGrid = function (withoutUpdate) {\n        var $$ = this, config = $$.config, d3 = $$.d3,\n            xgridData = $$.generateGridData(config.grid_x_type, $$.x),\n            tickOffset = $$.isCategorized() ? $$.xAxis.tickOffset() : 0;\n\n        $$.xgridAttr = config.axis_rotated ? {\n            'x1': 0,\n            'x2': $$.width,\n            'y1': function (d) { return $$.x(d) - tickOffset; },\n            'y2': function (d) { return $$.x(d) - tickOffset; }\n        } : {\n            'x1': function (d) { return $$.x(d) + tickOffset; },\n            'x2': function (d) { return $$.x(d) + tickOffset; },\n            'y1': 0,\n            'y2': $$.height\n        };\n\n        $$.xgrid = $$.main.select('.' + CLASS.xgrids).selectAll('.' + CLASS.xgrid)\n            .data(xgridData);\n        $$.xgrid.enter().append('line').attr(\"class\", CLASS.xgrid);\n        if (!withoutUpdate) {\n            $$.xgrid.attr($$.xgridAttr)\n                .style(\"opacity\", function () { return +d3.select(this).attr(config.axis_rotated ? 'y1' : 'x1') === (config.axis_rotated ? $$.height : 0) ? 0 : 1; });\n        }\n        $$.xgrid.exit().remove();\n    };\n\n    c3_chart_internal_fn.updateYGrid = function () {\n        var $$ = this, config = $$.config,\n            gridValues = $$.yAxis.tickValues() || $$.y.ticks(config.grid_y_ticks);\n        $$.ygrid = $$.main.select('.' + CLASS.ygrids).selectAll('.' + CLASS.ygrid)\n            .data(gridValues);\n        $$.ygrid.enter().append('line')\n            .attr('class', CLASS.ygrid);\n        $$.ygrid.attr(\"x1\", config.axis_rotated ? $$.y : 0)\n            .attr(\"x2\", config.axis_rotated ? $$.y : $$.width)\n            .attr(\"y1\", config.axis_rotated ? 0 : $$.y)\n            .attr(\"y2\", config.axis_rotated ? $$.height : $$.y);\n        $$.ygrid.exit().remove();\n        $$.smoothLines($$.ygrid, 'grid');\n    };\n\n    c3_chart_internal_fn.gridTextAnchor = function (d) {\n        return d.position ? d.position : \"end\";\n    };\n    c3_chart_internal_fn.gridTextDx = function (d) {\n        return d.position === 'start' ? 4 : d.position === 'middle' ? 0 : -4;\n    };\n    c3_chart_internal_fn.xGridTextX = function (d) {\n        return d.position === 'start' ? -this.height : d.position === 'middle' ? -this.height / 2 : 0;\n    };\n    c3_chart_internal_fn.yGridTextX = function (d) {\n        return d.position === 'start' ? 0 : d.position === 'middle' ? this.width / 2 : this.width;\n    };\n    c3_chart_internal_fn.updateGrid = function (duration) {\n        var $$ = this, main = $$.main, config = $$.config,\n            xgridLine, ygridLine, yv;\n\n        // hide if arc type\n        $$.grid.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n        if (config.grid_x_show) {\n            $$.updateXGrid();\n        }\n        $$.xgridLines = main.select('.' + CLASS.xgridLines).selectAll('.' + CLASS.xgridLine)\n            .data(config.grid_x_lines);\n        // enter\n        xgridLine = $$.xgridLines.enter().append('g')\n            .attr(\"class\", function (d) { return CLASS.xgridLine + (d['class'] ? ' ' + d['class'] : ''); });\n        xgridLine.append('line')\n            .style(\"opacity\", 0);\n        xgridLine.append('text')\n            .attr(\"text-anchor\", $$.gridTextAnchor)\n            .attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\")\n            .attr('dx', $$.gridTextDx)\n            .attr('dy', -5)\n            .style(\"opacity\", 0);\n        // udpate\n        // done in d3.transition() of the end of this function\n        // exit\n        $$.xgridLines.exit().transition().duration(duration)\n            .style(\"opacity\", 0)\n            .remove();\n\n        // Y-Grid\n        if (config.grid_y_show) {\n            $$.updateYGrid();\n        }\n        $$.ygridLines = main.select('.' + CLASS.ygridLines).selectAll('.' + CLASS.ygridLine)\n            .data(config.grid_y_lines);\n        // enter\n        ygridLine = $$.ygridLines.enter().append('g')\n            .attr(\"class\", function (d) { return CLASS.ygridLine + (d['class'] ? ' ' + d['class'] : ''); });\n        ygridLine.append('line')\n            .style(\"opacity\", 0);\n        ygridLine.append('text')\n            .attr(\"text-anchor\", $$.gridTextAnchor)\n            .attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\")\n            .attr('dx', $$.gridTextDx)\n            .attr('dy', -5)\n            .style(\"opacity\", 0);\n        // update\n        yv = $$.yv.bind($$);\n        $$.ygridLines.select('line')\n          .transition().duration(duration)\n            .attr(\"x1\", config.axis_rotated ? yv : 0)\n            .attr(\"x2\", config.axis_rotated ? yv : $$.width)\n            .attr(\"y1\", config.axis_rotated ? 0 : yv)\n            .attr(\"y2\", config.axis_rotated ? $$.height : yv)\n            .style(\"opacity\", 1);\n        $$.ygridLines.select('text')\n          .transition().duration(duration)\n            .attr(\"x\", config.axis_rotated ? $$.xGridTextX.bind($$) : $$.yGridTextX.bind($$))\n            .attr(\"y\", yv)\n            .text(function (d) { return d.text; })\n            .style(\"opacity\", 1);\n        // exit\n        $$.ygridLines.exit().transition().duration(duration)\n            .style(\"opacity\", 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawGrid = function (withTransition) {\n        var $$ = this, config = $$.config, xv = $$.xv.bind($$),\n            lines = $$.xgridLines.select('line'),\n            texts = $$.xgridLines.select('text');\n        return [\n            (withTransition ? lines.transition() : lines)\n                .attr(\"x1\", config.axis_rotated ? 0 : xv)\n                .attr(\"x2\", config.axis_rotated ? $$.width : xv)\n                .attr(\"y1\", config.axis_rotated ? xv : 0)\n                .attr(\"y2\", config.axis_rotated ? xv : $$.height)\n                .style(\"opacity\", 1),\n            (withTransition ? texts.transition() : texts)\n                .attr(\"x\", config.axis_rotated ? $$.yGridTextX.bind($$) : $$.xGridTextX.bind($$))\n                .attr(\"y\", xv)\n                .text(function (d) { return d.text; })\n                .style(\"opacity\", 1)\n        ];\n    };\n    c3_chart_internal_fn.showXGridFocus = function (selectedData) {\n        var $$ = this, config = $$.config,\n            dataToShow = selectedData.filter(function (d) { return d && isValue(d.value); }),\n            focusEl = $$.main.selectAll('line.' + CLASS.xgridFocus),\n            xx = $$.xx.bind($$);\n        if (! config.tooltip_show) { return; }\n        // Hide when scatter plot exists\n        if ($$.hasType('scatter') || $$.hasArcType()) { return; }\n        focusEl\n            .style(\"visibility\", \"visible\")\n            .data([dataToShow[0]])\n            .attr(config.axis_rotated ? 'y1' : 'x1', xx)\n            .attr(config.axis_rotated ? 'y2' : 'x2', xx);\n        $$.smoothLines(focusEl, 'grid');\n    };\n    c3_chart_internal_fn.hideXGridFocus = function () {\n        this.main.select('line.' + CLASS.xgridFocus).style(\"visibility\", \"hidden\");\n    };\n    c3_chart_internal_fn.updateXgridFocus = function () {\n        var $$ = this, config = $$.config;\n        $$.main.select('line.' + CLASS.xgridFocus)\n            .attr(\"x1\", config.axis_rotated ? 0 : -10)\n            .attr(\"x2\", config.axis_rotated ? $$.width : -10)\n            .attr(\"y1\", config.axis_rotated ? -10 : 0)\n            .attr(\"y2\", config.axis_rotated ? -10 : $$.height);\n    };\n    c3_chart_internal_fn.generateGridData = function (type, scale) {\n        var $$ = this,\n            gridData = [], xDomain, firstYear, lastYear, i,\n            tickNum = $$.main.select(\".\" + CLASS.axisX).selectAll('.tick').size();\n        if (type === 'year') {\n            xDomain = $$.getXDomain();\n            firstYear = xDomain[0].getFullYear();\n            lastYear = xDomain[1].getFullYear();\n            for (i = firstYear; i <= lastYear; i++) {\n                gridData.push(new Date(i + '-01-01 00:00:00'));\n            }\n        } else {\n            gridData = scale.ticks(10);\n            if (gridData.length > tickNum) { // use only int\n                gridData = gridData.filter(function (d) { return (\"\" + d).indexOf('.') < 0; });\n            }\n        }\n        return gridData;\n    };\n    c3_chart_internal_fn.getGridFilterToRemove = function (params) {\n        return params ? function (line) {\n            var found = false;\n            [].concat(params).forEach(function (param) {\n                if ((('value' in param && line.value === param.value) || ('class' in param && line['class'] === param['class']))) {\n                    found = true;\n                }\n            });\n            return found;\n        } : function () { return true; };\n    };\n    c3_chart_internal_fn.removeGridLines = function (params, forX) {\n        var $$ = this, config = $$.config,\n            toRemove = $$.getGridFilterToRemove(params),\n            toShow = function (line) { return !toRemove(line); },\n            classLines = forX ? CLASS.xgridLines : CLASS.ygridLines,\n            classLine = forX ? CLASS.xgridLine : CLASS.ygridLine;\n        $$.main.select('.' + classLines).selectAll('.' + classLine).filter(toRemove)\n            .transition().duration(config.transition_duration)\n            .style('opacity', 0).remove();\n        if (forX) {\n            config.grid_x_lines = config.grid_x_lines.filter(toShow);\n        } else {\n            config.grid_y_lines = config.grid_y_lines.filter(toShow);\n        }\n    };\n\n    c3_chart_internal_fn.initTooltip = function () {\n        var $$ = this, config = $$.config, i;\n        $$.tooltip = $$.selectChart\n            .style(\"position\", \"relative\")\n          .append(\"div\")\n            .attr('class', CLASS.tooltipContainer)\n            .style(\"position\", \"absolute\")\n            .style(\"pointer-events\", \"none\")\n            .style(\"display\", \"none\");\n        // Show tooltip if needed\n        if (config.tooltip_init_show) {\n            if ($$.isTimeSeries() && isString(config.tooltip_init_x)) {\n                config.tooltip_init_x = $$.parseDate(config.tooltip_init_x);\n                for (i = 0; i < $$.data.targets[0].values.length; i++) {\n                    if (($$.data.targets[0].values[i].x - config.tooltip_init_x) === 0) { break; }\n                }\n                config.tooltip_init_x = i;\n            }\n            $$.tooltip.html(config.tooltip_contents.call($$, $$.data.targets.map(function (d) {\n                return $$.addName(d.values[config.tooltip_init_x]);\n            }), $$.axis.getXAxisTickFormat(), $$.getYFormat($$.hasArcType()), $$.color));\n            $$.tooltip.style(\"top\", config.tooltip_init_position.top)\n                .style(\"left\", config.tooltip_init_position.left)\n                .style(\"display\", \"block\");\n        }\n    };\n    c3_chart_internal_fn.getTooltipContent = function (d, defaultTitleFormat, defaultValueFormat, color) {\n        var $$ = this, config = $$.config,\n            titleFormat = config.tooltip_format_title || defaultTitleFormat,\n            nameFormat = config.tooltip_format_name || function (name) { return name; },\n            valueFormat = config.tooltip_format_value || defaultValueFormat,\n            text, i, title, value, name, bgcolor,\n            orderAsc = $$.isOrderAsc();\n\n        if (config.data_groups.length === 0) {\n            d.sort(function(a, b){\n                var v1 = a ? a.value : null, v2 = b ? b.value : null;\n                return orderAsc ? v1 - v2 : v2 - v1;\n            });\n        } else {\n            var ids = $$.orderTargets($$.data.targets).map(function (i) {\n                return i.id;\n            });\n            d.sort(function(a, b) {\n                var v1 = a ? a.value : null, v2 = b ? b.value : null;\n                if (v1 > 0 && v2 > 0) {\n                    v1 = a ? ids.indexOf(a.id) : null;\n                    v2 = b ? ids.indexOf(b.id) : null;\n                }\n                return orderAsc ? v1 - v2 : v2 - v1;\n            });\n        }\n\n        for (i = 0; i < d.length; i++) {\n            if (! (d[i] && (d[i].value || d[i].value === 0))) { continue; }\n\n            if (! text) {\n                title = sanitise(titleFormat ? titleFormat(d[i].x) : d[i].x);\n                text = \"<table class='\" + $$.CLASS.tooltip + \"'>\" + (title || title === 0 ? \"<tr><th colspan='2'>\" + title + \"</th></tr>\" : \"\");\n            }\n\n            value = sanitise(valueFormat(d[i].value, d[i].ratio, d[i].id, d[i].index, d));\n            if (value !== undefined) {\n                // Skip elements when their name is set to null\n                if (d[i].name === null) { continue; }\n                name = sanitise(nameFormat(d[i].name, d[i].ratio, d[i].id, d[i].index));\n                bgcolor = $$.levelColor ? $$.levelColor(d[i].value) : color(d[i].id);\n\n                text += \"<tr class='\" + $$.CLASS.tooltipName + \"-\" + $$.getTargetSelectorSuffix(d[i].id) + \"'>\";\n                text += \"<td class='name'><span style='background-color:\" + bgcolor + \"'></span>\" + name + \"</td>\";\n                text += \"<td class='value'>\" + value + \"</td>\";\n                text += \"</tr>\";\n            }\n        }\n        return text + \"</table>\";\n    };\n    c3_chart_internal_fn.tooltipPosition = function (dataToShow, tWidth, tHeight, element) {\n        var $$ = this, config = $$.config, d3 = $$.d3;\n        var svgLeft, tooltipLeft, tooltipRight, tooltipTop, chartRight;\n        var forArc = $$.hasArcType(),\n            mouse = d3.mouse(element);\n      // Determin tooltip position\n        if (forArc) {\n            tooltipLeft = (($$.width - ($$.isLegendRight ? $$.getLegendWidth() : 0)) / 2) + mouse[0];\n            tooltipTop = ($$.height / 2) + mouse[1] + 20;\n        } else {\n            svgLeft = $$.getSvgLeft(true);\n            if (config.axis_rotated) {\n                tooltipLeft = svgLeft + mouse[0] + 100;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = $$.x(dataToShow[0].x) + 20;\n            } else {\n                tooltipLeft = svgLeft + $$.getCurrentPaddingLeft(true) + $$.x(dataToShow[0].x) + 20;\n                tooltipRight = tooltipLeft + tWidth;\n                chartRight = svgLeft + $$.currentWidth - $$.getCurrentPaddingRight();\n                tooltipTop = mouse[1] + 15;\n            }\n\n            if (tooltipRight > chartRight) {\n                // 20 is needed for Firefox to keep tooltip width\n                tooltipLeft -= tooltipRight - chartRight + 20;\n            }\n            if (tooltipTop + tHeight > $$.currentHeight) {\n                tooltipTop -= tHeight + 30;\n            }\n        }\n        if (tooltipTop < 0) {\n            tooltipTop = 0;\n        }\n        return {top: tooltipTop, left: tooltipLeft};\n    };\n    c3_chart_internal_fn.showTooltip = function (selectedData, element) {\n        var $$ = this, config = $$.config;\n        var tWidth, tHeight, position;\n        var forArc = $$.hasArcType(),\n            dataToShow = selectedData.filter(function (d) { return d && isValue(d.value); }),\n            positionFunction = config.tooltip_position || c3_chart_internal_fn.tooltipPosition;\n        if (dataToShow.length === 0 || !config.tooltip_show) {\n            return;\n        }\n        $$.tooltip.html(config.tooltip_contents.call($$, selectedData, $$.axis.getXAxisTickFormat(), $$.getYFormat(forArc), $$.color)).style(\"display\", \"block\");\n\n        // Get tooltip dimensions\n        tWidth = $$.tooltip.property('offsetWidth');\n        tHeight = $$.tooltip.property('offsetHeight');\n\n        position = positionFunction.call(this, dataToShow, tWidth, tHeight, element);\n        // Set tooltip\n        $$.tooltip\n            .style(\"top\", position.top + \"px\")\n            .style(\"left\", position.left + 'px');\n    };\n    c3_chart_internal_fn.hideTooltip = function () {\n        this.tooltip.style(\"display\", \"none\");\n    };\n\n    c3_chart_internal_fn.initLegend = function () {\n        var $$ = this;\n        $$.legendItemTextBox = {};\n        $$.legendHasRendered = false;\n        $$.legend = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('legend'));\n        if (!$$.config.legend_show) {\n            $$.legend.style('visibility', 'hidden');\n            $$.hiddenLegendIds = $$.mapToIds($$.data.targets);\n            return;\n        }\n        // MEMO: call here to update legend box and tranlate for all\n        // MEMO: translate will be upated by this, so transform not needed in updateLegend()\n        $$.updateLegendWithDefaults();\n    };\n    c3_chart_internal_fn.updateLegendWithDefaults = function () {\n        var $$ = this;\n        $$.updateLegend($$.mapToIds($$.data.targets), {withTransform: false, withTransitionForTransform: false, withTransition: false});\n    };\n    c3_chart_internal_fn.updateSizeForLegend = function (legendHeight, legendWidth) {\n        var $$ = this, config = $$.config, insetLegendPosition = {\n            top: $$.isLegendTop ? $$.getCurrentPaddingTop() + config.legend_inset_y + 5.5 : $$.currentHeight - legendHeight - $$.getCurrentPaddingBottom() - config.legend_inset_y,\n            left: $$.isLegendLeft ? $$.getCurrentPaddingLeft() + config.legend_inset_x + 0.5 : $$.currentWidth - legendWidth - $$.getCurrentPaddingRight() - config.legend_inset_x + 0.5\n        };\n\n        $$.margin3 = {\n            top: $$.isLegendRight ? 0 : $$.isLegendInset ? insetLegendPosition.top : $$.currentHeight - legendHeight,\n            right: NaN,\n            bottom: 0,\n            left: $$.isLegendRight ? $$.currentWidth - legendWidth : $$.isLegendInset ? insetLegendPosition.left : 0\n        };\n    };\n    c3_chart_internal_fn.transformLegend = function (withTransition) {\n        var $$ = this;\n        (withTransition ? $$.legend.transition() : $$.legend).attr(\"transform\", $$.getTranslate('legend'));\n    };\n    c3_chart_internal_fn.updateLegendStep = function (step) {\n        this.legendStep = step;\n    };\n    c3_chart_internal_fn.updateLegendItemWidth = function (w) {\n        this.legendItemWidth = w;\n    };\n    c3_chart_internal_fn.updateLegendItemHeight = function (h) {\n        this.legendItemHeight = h;\n    };\n    c3_chart_internal_fn.getLegendWidth = function () {\n        var $$ = this;\n        return $$.config.legend_show ? $$.isLegendRight || $$.isLegendInset ? $$.legendItemWidth * ($$.legendStep + 1) : $$.currentWidth : 0;\n    };\n    c3_chart_internal_fn.getLegendHeight = function () {\n        var $$ = this, h = 0;\n        if ($$.config.legend_show) {\n            if ($$.isLegendRight) {\n                h = $$.currentHeight;\n            } else {\n                h = Math.max(20, $$.legendItemHeight) * ($$.legendStep + 1);\n            }\n        }\n        return h;\n    };\n    c3_chart_internal_fn.opacityForLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 1;\n    };\n    c3_chart_internal_fn.opacityForUnfocusedLegend = function (legendItem) {\n        return legendItem.classed(CLASS.legendItemHidden) ? null : 0.3;\n    };\n    c3_chart_internal_fn.toggleFocusLegend = function (targetIds, focus) {\n        var $$ = this;\n        targetIds = $$.mapToTargetIds(targetIds);\n        $$.legend.selectAll('.' + CLASS.legendItem)\n            .filter(function (id) { return targetIds.indexOf(id) >= 0; })\n            .classed(CLASS.legendItemFocused, focus)\n          .transition().duration(100)\n            .style('opacity', function () {\n                var opacity = focus ? $$.opacityForLegend : $$.opacityForUnfocusedLegend;\n                return opacity.call($$, $$.d3.select(this));\n            });\n    };\n    c3_chart_internal_fn.revertLegend = function () {\n        var $$ = this, d3 = $$.d3;\n        $$.legend.selectAll('.' + CLASS.legendItem)\n            .classed(CLASS.legendItemFocused, false)\n            .transition().duration(100)\n            .style('opacity', function () { return $$.opacityForLegend(d3.select(this)); });\n    };\n    c3_chart_internal_fn.showLegend = function (targetIds) {\n        var $$ = this, config = $$.config;\n        if (!config.legend_show) {\n            config.legend_show = true;\n            $$.legend.style('visibility', 'visible');\n            if (!$$.legendHasRendered) {\n                $$.updateLegendWithDefaults();\n            }\n        }\n        $$.removeHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds))\n            .style('visibility', 'visible')\n            .transition()\n            .style('opacity', function () { return $$.opacityForLegend($$.d3.select(this)); });\n    };\n    c3_chart_internal_fn.hideLegend = function (targetIds) {\n        var $$ = this, config = $$.config;\n        if (config.legend_show && isEmpty(targetIds)) {\n            config.legend_show = false;\n            $$.legend.style('visibility', 'hidden');\n        }\n        $$.addHiddenLegendIds(targetIds);\n        $$.legend.selectAll($$.selectorLegends(targetIds))\n            .style('opacity', 0)\n            .style('visibility', 'hidden');\n    };\n    c3_chart_internal_fn.clearLegendItemTextBoxCache = function () {\n        this.legendItemTextBox = {};\n    };\n    c3_chart_internal_fn.updateLegend = function (targetIds, options, transitions) {\n        var $$ = this, config = $$.config;\n        var xForLegend, xForLegendText, xForLegendRect, yForLegend, yForLegendText, yForLegendRect, x1ForLegendTile, x2ForLegendTile, yForLegendTile;\n        var paddingTop = 4, paddingRight = 10, maxWidth = 0, maxHeight = 0, posMin = 10, tileWidth = config.legend_item_tile_width + 5;\n        var l, totalLength = 0, offsets = {}, widths = {}, heights = {}, margins = [0], steps = {}, step = 0;\n        var withTransition, withTransitionForTransform;\n        var texts, rects, tiles, background;\n\n        // Skip elements when their name is set to null\n        targetIds = targetIds.filter(function(id) {\n            return !isDefined(config.data_names[id]) || config.data_names[id] !== null;\n        });\n\n        options = options || {};\n        withTransition = getOption(options, \"withTransition\", true);\n        withTransitionForTransform = getOption(options, \"withTransitionForTransform\", true);\n\n        function getTextBox(textElement, id) {\n            if (!$$.legendItemTextBox[id]) {\n                $$.legendItemTextBox[id] = $$.getTextRect(textElement.textContent, CLASS.legendItem, textElement);\n            }\n            return $$.legendItemTextBox[id];\n        }\n\n        function updatePositions(textElement, id, index) {\n            var reset = index === 0, isLast = index === targetIds.length - 1,\n                box = getTextBox(textElement, id),\n                itemWidth = box.width + tileWidth + (isLast && !($$.isLegendRight || $$.isLegendInset) ? 0 : paddingRight) + config.legend_padding,\n                itemHeight = box.height + paddingTop,\n                itemLength = $$.isLegendRight || $$.isLegendInset ? itemHeight : itemWidth,\n                areaLength = $$.isLegendRight || $$.isLegendInset ? $$.getLegendHeight() : $$.getLegendWidth(),\n                margin, maxLength;\n\n            // MEMO: care about condifion of step, totalLength\n            function updateValues(id, withoutStep) {\n                if (!withoutStep) {\n                    margin = (areaLength - totalLength - itemLength) / 2;\n                    if (margin < posMin) {\n                        margin = (areaLength - itemLength) / 2;\n                        totalLength = 0;\n                        step++;\n                    }\n                }\n                steps[id] = step;\n                margins[step] = $$.isLegendInset ? 10 : margin;\n                offsets[id] = totalLength;\n                totalLength += itemLength;\n            }\n\n            if (reset) {\n                totalLength = 0;\n                step = 0;\n                maxWidth = 0;\n                maxHeight = 0;\n            }\n\n            if (config.legend_show && !$$.isLegendToShow(id)) {\n                widths[id] = heights[id] = steps[id] = offsets[id] = 0;\n                return;\n            }\n\n            widths[id] = itemWidth;\n            heights[id] = itemHeight;\n\n            if (!maxWidth || itemWidth >= maxWidth) { maxWidth = itemWidth; }\n            if (!maxHeight || itemHeight >= maxHeight) { maxHeight = itemHeight; }\n            maxLength = $$.isLegendRight || $$.isLegendInset ? maxHeight : maxWidth;\n\n            if (config.legend_equally) {\n                Object.keys(widths).forEach(function (id) { widths[id] = maxWidth; });\n                Object.keys(heights).forEach(function (id) { heights[id] = maxHeight; });\n                margin = (areaLength - maxLength * targetIds.length) / 2;\n                if (margin < posMin) {\n                    totalLength = 0;\n                    step = 0;\n                    targetIds.forEach(function (id) { updateValues(id); });\n                }\n                else {\n                    updateValues(id, true);\n                }\n            } else {\n                updateValues(id);\n            }\n        }\n\n        if ($$.isLegendInset) {\n            step = config.legend_inset_step ? config.legend_inset_step : targetIds.length;\n            $$.updateLegendStep(step);\n        }\n\n        if ($$.isLegendRight) {\n            xForLegend = function (id) { return maxWidth * steps[id]; };\n            yForLegend = function (id) { return margins[steps[id]] + offsets[id]; };\n        } else if ($$.isLegendInset) {\n            xForLegend = function (id) { return maxWidth * steps[id] + 10; };\n            yForLegend = function (id) { return margins[steps[id]] + offsets[id]; };\n        } else {\n            xForLegend = function (id) { return margins[steps[id]] + offsets[id]; };\n            yForLegend = function (id) { return maxHeight * steps[id]; };\n        }\n        xForLegendText = function (id, i) { return xForLegend(id, i) + 4 + config.legend_item_tile_width; };\n        yForLegendText = function (id, i) { return yForLegend(id, i) + 9; };\n        xForLegendRect = function (id, i) { return xForLegend(id, i); };\n        yForLegendRect = function (id, i) { return yForLegend(id, i) - 5; };\n        x1ForLegendTile = function (id, i) { return xForLegend(id, i) - 2; };\n        x2ForLegendTile = function (id, i) { return xForLegend(id, i) - 2 + config.legend_item_tile_width; };\n        yForLegendTile = function (id, i) { return yForLegend(id, i) + 4; };\n\n        // Define g for legend area\n        l = $$.legend.selectAll('.' + CLASS.legendItem)\n            .data(targetIds)\n            .enter().append('g')\n            .attr('class', function (id) { return $$.generateClass(CLASS.legendItem, id); })\n            .style('visibility', function (id) { return $$.isLegendToShow(id) ? 'visible' : 'hidden'; })\n            .style('cursor', 'pointer')\n            .on('click', function (id) {\n                if (config.legend_item_onclick) {\n                    config.legend_item_onclick.call($$, id);\n                } else {\n                    if ($$.d3.event.altKey) {\n                        $$.api.hide();\n                        $$.api.show(id);\n                    } else {\n                        $$.api.toggle(id);\n                        $$.isTargetToShow(id) ? $$.api.focus(id) : $$.api.revert();\n                    }\n                }\n            })\n            .on('mouseover', function (id) {\n                if (config.legend_item_onmouseover) {\n                    config.legend_item_onmouseover.call($$, id);\n                }\n                else {\n                    $$.d3.select(this).classed(CLASS.legendItemFocused, true);\n                    if (!$$.transiting && $$.isTargetToShow(id)) {\n                        $$.api.focus(id);\n                    }\n                }\n            })\n            .on('mouseout', function (id) {\n                if (config.legend_item_onmouseout) {\n                    config.legend_item_onmouseout.call($$, id);\n                }\n                else {\n                    $$.d3.select(this).classed(CLASS.legendItemFocused, false);\n                    $$.api.revert();\n                }\n            });\n        l.append('text')\n            .text(function (id) { return isDefined(config.data_names[id]) ? config.data_names[id] : id; })\n            .each(function (id, i) { updatePositions(this, id, i); })\n            .style(\"pointer-events\", \"none\")\n            .attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendText : -200)\n            .attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendText);\n        l.append('rect')\n            .attr(\"class\", CLASS.legendItemEvent)\n            .style('fill-opacity', 0)\n            .attr('x', $$.isLegendRight || $$.isLegendInset ? xForLegendRect : -200)\n            .attr('y', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendRect);\n        l.append('line')\n            .attr('class', CLASS.legendItemTile)\n            .style('stroke', $$.color)\n            .style(\"pointer-events\", \"none\")\n            .attr('x1', $$.isLegendRight || $$.isLegendInset ? x1ForLegendTile : -200)\n            .attr('y1', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile)\n            .attr('x2', $$.isLegendRight || $$.isLegendInset ? x2ForLegendTile : -200)\n            .attr('y2', $$.isLegendRight || $$.isLegendInset ? -200 : yForLegendTile)\n            .attr('stroke-width', config.legend_item_tile_height);\n\n        // Set background for inset legend\n        background = $$.legend.select('.' + CLASS.legendBackground + ' rect');\n        if ($$.isLegendInset && maxWidth > 0 && background.size() === 0) {\n            background = $$.legend.insert('g', '.' + CLASS.legendItem)\n                .attr(\"class\", CLASS.legendBackground)\n                .append('rect');\n        }\n\n        texts = $$.legend.selectAll('text')\n            .data(targetIds)\n            .text(function (id) { return isDefined(config.data_names[id]) ? config.data_names[id] : id; }) // MEMO: needed for update\n            .each(function (id, i) { updatePositions(this, id, i); });\n        (withTransition ? texts.transition() : texts)\n            .attr('x', xForLegendText)\n            .attr('y', yForLegendText);\n\n        rects = $$.legend.selectAll('rect.' + CLASS.legendItemEvent)\n            .data(targetIds);\n        (withTransition ? rects.transition() : rects)\n            .attr('width', function (id) { return widths[id]; })\n            .attr('height', function (id) { return heights[id]; })\n            .attr('x', xForLegendRect)\n            .attr('y', yForLegendRect);\n\n        tiles = $$.legend.selectAll('line.' + CLASS.legendItemTile)\n                .data(targetIds);\n            (withTransition ? tiles.transition() : tiles)\n                .style('stroke', $$.color)\n                .attr('x1', x1ForLegendTile)\n                .attr('y1', yForLegendTile)\n                .attr('x2', x2ForLegendTile)\n                .attr('y2', yForLegendTile);\n\n        if (background) {\n            (withTransition ? background.transition() : background)\n                .attr('height', $$.getLegendHeight() - 12)\n                .attr('width', maxWidth * (step + 1) + 10);\n        }\n\n        // toggle legend state\n        $$.legend.selectAll('.' + CLASS.legendItem)\n            .classed(CLASS.legendItemHidden, function (id) { return !$$.isTargetToShow(id); });\n\n        // Update all to reflect change of legend\n        $$.updateLegendItemWidth(maxWidth);\n        $$.updateLegendItemHeight(maxHeight);\n        $$.updateLegendStep(step);\n        // Update size and scale\n        $$.updateSizes();\n        $$.updateScales();\n        $$.updateSvgSize();\n        // Update g positions\n        $$.transformAll(withTransitionForTransform, transitions);\n        $$.legendHasRendered = true;\n    };\n\n    c3_chart_internal_fn.initTitle = function () {\n        var $$ = this;\n        $$.title = $$.svg.append(\"text\")\n              .text($$.config.title_text)\n              .attr(\"class\", $$.CLASS.title);\n    };\n    c3_chart_internal_fn.redrawTitle = function () {\n        var $$ = this;\n        $$.title\n              .attr(\"x\", $$.xForTitle.bind($$))\n              .attr(\"y\", $$.yForTitle.bind($$));\n    };\n    c3_chart_internal_fn.xForTitle = function () {\n        var $$ = this, config = $$.config, position = config.title_position || 'left', x;\n        if (position.indexOf('right') >= 0) {\n            x = $$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width - config.title_padding.right;\n        } else if (position.indexOf('center') >= 0) {\n            x = ($$.currentWidth - $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).width) / 2;\n        } else { // left\n            x = config.title_padding.left;\n        }\n        return x;\n    };\n    c3_chart_internal_fn.yForTitle = function () {\n        var $$ = this;\n        return $$.config.title_padding.top + $$.getTextRect($$.title.node().textContent, $$.CLASS.title, $$.title.node()).height;\n    };\n    c3_chart_internal_fn.getTitlePadding = function() {\n        var $$ = this;\n        return $$.yForTitle() + $$.config.title_padding.bottom;\n    };\n\n    function Axis(owner) {\n        API.call(this, owner);\n    }\n\n    inherit(API, Axis);\n\n    Axis.prototype.init = function init() {\n\n        var $$ = this.owner, config = $$.config, main = $$.main;\n        $$.axes.x = main.append(\"g\")\n            .attr(\"class\", CLASS.axis + ' ' + CLASS.axisX)\n            .attr(\"clip-path\", $$.clipPathForXAxis)\n            .attr(\"transform\", $$.getTranslate('x'))\n            .style(\"visibility\", config.axis_x_show ? 'visible' : 'hidden');\n        $$.axes.x.append(\"text\")\n            .attr(\"class\", CLASS.axisXLabel)\n            .attr(\"transform\", config.axis_rotated ? \"rotate(-90)\" : \"\")\n            .style(\"text-anchor\", this.textAnchorForXAxisLabel.bind(this));\n        $$.axes.y = main.append(\"g\")\n            .attr(\"class\", CLASS.axis + ' ' + CLASS.axisY)\n            .attr(\"clip-path\", config.axis_y_inner ? \"\" : $$.clipPathForYAxis)\n            .attr(\"transform\", $$.getTranslate('y'))\n            .style(\"visibility\", config.axis_y_show ? 'visible' : 'hidden');\n        $$.axes.y.append(\"text\")\n            .attr(\"class\", CLASS.axisYLabel)\n            .attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\")\n            .style(\"text-anchor\", this.textAnchorForYAxisLabel.bind(this));\n\n        $$.axes.y2 = main.append(\"g\")\n            .attr(\"class\", CLASS.axis + ' ' + CLASS.axisY2)\n            // clip-path?\n            .attr(\"transform\", $$.getTranslate('y2'))\n            .style(\"visibility\", config.axis_y2_show ? 'visible' : 'hidden');\n        $$.axes.y2.append(\"text\")\n            .attr(\"class\", CLASS.axisY2Label)\n            .attr(\"transform\", config.axis_rotated ? \"\" : \"rotate(-90)\")\n            .style(\"text-anchor\", this.textAnchorForY2AxisLabel.bind(this));\n    };\n    Axis.prototype.getXAxis = function getXAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner, config = $$.config,\n            axisParams = {\n                isCategory: $$.isCategorized(),\n                withOuterTick: withOuterTick,\n                tickMultiline: config.axis_x_tick_multiline,\n                tickWidth: config.axis_x_tick_width,\n                tickTextRotate: withoutRotateTickText ? 0 : config.axis_x_tick_rotate,\n                withoutTransition: withoutTransition,\n            },\n            axis = c3_axis($$.d3, axisParams).scale(scale).orient(orient);\n\n        if ($$.isTimeSeries() && tickValues && typeof tickValues !== \"function\") {\n            tickValues = tickValues.map(function (v) { return $$.parseDate(v); });\n        }\n\n        // Set tick\n        axis.tickFormat(tickFormat).tickValues(tickValues);\n        if ($$.isCategorized()) {\n            axis.tickCentered(config.axis_x_tick_centered);\n            if (isEmpty(config.axis_x_tick_culling)) {\n                config.axis_x_tick_culling = false;\n            }\n        }\n\n        return axis;\n    };\n    Axis.prototype.updateXAxisTickValues = function updateXAxisTickValues(targets, axis) {\n        var $$ = this.owner, config = $$.config, tickValues;\n        if (config.axis_x_tick_fit || config.axis_x_tick_count) {\n            tickValues = this.generateTickValues($$.mapTargetsToUniqueXs(targets), config.axis_x_tick_count, $$.isTimeSeries());\n        }\n        if (axis) {\n            axis.tickValues(tickValues);\n        } else {\n            $$.xAxis.tickValues(tickValues);\n            $$.subXAxis.tickValues(tickValues);\n        }\n        return tickValues;\n    };\n    Axis.prototype.getYAxis = function getYAxis(scale, orient, tickFormat, tickValues, withOuterTick, withoutTransition, withoutRotateTickText) {\n        var $$ = this.owner, config = $$.config,\n            axisParams = {\n                withOuterTick: withOuterTick,\n                withoutTransition: withoutTransition,\n                tickTextRotate: withoutRotateTickText ? 0 : config.axis_y_tick_rotate\n            },\n            axis = c3_axis($$.d3, axisParams).scale(scale).orient(orient).tickFormat(tickFormat);\n        if ($$.isTimeSeriesY()) {\n            axis.ticks($$.d3.time[config.axis_y_tick_time_value], config.axis_y_tick_time_interval);\n        } else {\n            axis.tickValues(tickValues);\n        }\n        return axis;\n    };\n    Axis.prototype.getId = function getId(id) {\n        var config = this.owner.config;\n        return id in config.data_axes ? config.data_axes[id] : 'y';\n    };\n    Axis.prototype.getXAxisTickFormat = function getXAxisTickFormat() {\n        var $$ = this.owner, config = $$.config,\n            format = $$.isTimeSeries() ? $$.defaultAxisTimeFormat : $$.isCategorized() ? $$.categoryName : function (v) { return v < 0 ? v.toFixed(0) : v; };\n        if (config.axis_x_tick_format) {\n            if (isFunction(config.axis_x_tick_format)) {\n                format = config.axis_x_tick_format;\n            } else if ($$.isTimeSeries()) {\n                format = function (date) {\n                    return date ? $$.axisTimeFormat(config.axis_x_tick_format)(date) : \"\";\n                };\n            }\n        }\n        return isFunction(format) ? function (v) { return format.call($$, v); } : format;\n    };\n    Axis.prototype.getTickValues = function getTickValues(tickValues, axis) {\n        return tickValues ? tickValues : axis ? axis.tickValues() : undefined;\n    };\n    Axis.prototype.getXAxisTickValues = function getXAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_x_tick_values, this.owner.xAxis);\n    };\n    Axis.prototype.getYAxisTickValues = function getYAxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y_tick_values, this.owner.yAxis);\n    };\n    Axis.prototype.getY2AxisTickValues = function getY2AxisTickValues() {\n        return this.getTickValues(this.owner.config.axis_y2_tick_values, this.owner.y2Axis);\n    };\n    Axis.prototype.getLabelOptionByAxisId = function getLabelOptionByAxisId(axisId) {\n        var $$ = this.owner, config = $$.config, option;\n        if (axisId === 'y') {\n            option = config.axis_y_label;\n        } else if (axisId === 'y2') {\n            option = config.axis_y2_label;\n        } else if (axisId === 'x') {\n            option = config.axis_x_label;\n        }\n        return option;\n    };\n    Axis.prototype.getLabelText = function getLabelText(axisId) {\n        var option = this.getLabelOptionByAxisId(axisId);\n        return isString(option) ? option : option ? option.text : null;\n    };\n    Axis.prototype.setLabelText = function setLabelText(axisId, text) {\n        var $$ = this.owner, config = $$.config,\n            option = this.getLabelOptionByAxisId(axisId);\n        if (isString(option)) {\n            if (axisId === 'y') {\n                config.axis_y_label = text;\n            } else if (axisId === 'y2') {\n                config.axis_y2_label = text;\n            } else if (axisId === 'x') {\n                config.axis_x_label = text;\n            }\n        } else if (option) {\n            option.text = text;\n        }\n    };\n    Axis.prototype.getLabelPosition = function getLabelPosition(axisId, defaultPosition) {\n        var option = this.getLabelOptionByAxisId(axisId),\n            position = (option && typeof option === 'object' && option.position) ? option.position : defaultPosition;\n        return {\n            isInner: position.indexOf('inner') >= 0,\n            isOuter: position.indexOf('outer') >= 0,\n            isLeft: position.indexOf('left') >= 0,\n            isCenter: position.indexOf('center') >= 0,\n            isRight: position.indexOf('right') >= 0,\n            isTop: position.indexOf('top') >= 0,\n            isMiddle: position.indexOf('middle') >= 0,\n            isBottom: position.indexOf('bottom') >= 0\n        };\n    };\n    Axis.prototype.getXAxisLabelPosition = function getXAxisLabelPosition() {\n        return this.getLabelPosition('x', this.owner.config.axis_rotated ? 'inner-top' : 'inner-right');\n    };\n    Axis.prototype.getYAxisLabelPosition = function getYAxisLabelPosition() {\n        return this.getLabelPosition('y', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    Axis.prototype.getY2AxisLabelPosition = function getY2AxisLabelPosition() {\n        return this.getLabelPosition('y2', this.owner.config.axis_rotated ? 'inner-right' : 'inner-top');\n    };\n    Axis.prototype.getLabelPositionById = function getLabelPositionById(id) {\n        return id === 'y2' ? this.getY2AxisLabelPosition() : id === 'y' ? this.getYAxisLabelPosition() : this.getXAxisLabelPosition();\n    };\n    Axis.prototype.textForXAxisLabel = function textForXAxisLabel() {\n        return this.getLabelText('x');\n    };\n    Axis.prototype.textForYAxisLabel = function textForYAxisLabel() {\n        return this.getLabelText('y');\n    };\n    Axis.prototype.textForY2AxisLabel = function textForY2AxisLabel() {\n        return this.getLabelText('y2');\n    };\n    Axis.prototype.xForAxisLabel = function xForAxisLabel(forHorizontal, position) {\n        var $$ = this.owner;\n        if (forHorizontal) {\n            return position.isLeft ? 0 : position.isCenter ? $$.width / 2 : $$.width;\n        } else {\n            return position.isBottom ? -$$.height : position.isMiddle ? -$$.height / 2 : 0;\n        }\n    };\n    Axis.prototype.dxForAxisLabel = function dxForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? \"0.5em\" : position.isRight ? \"-0.5em\" : \"0\";\n        } else {\n            return position.isTop ? \"-0.5em\" : position.isBottom ? \"0.5em\" : \"0\";\n        }\n    };\n    Axis.prototype.textAnchorForAxisLabel = function textAnchorForAxisLabel(forHorizontal, position) {\n        if (forHorizontal) {\n            return position.isLeft ? 'start' : position.isCenter ? 'middle' : 'end';\n        } else {\n            return position.isBottom ? 'start' : position.isMiddle ? 'middle' : 'end';\n        }\n    };\n    Axis.prototype.xForXAxisLabel = function xForXAxisLabel() {\n        return this.xForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    Axis.prototype.xForYAxisLabel = function xForYAxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    Axis.prototype.xForY2AxisLabel = function xForY2AxisLabel() {\n        return this.xForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    Axis.prototype.dxForXAxisLabel = function dxForXAxisLabel() {\n        return this.dxForAxisLabel(!this.owner.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    Axis.prototype.dxForYAxisLabel = function dxForYAxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    Axis.prototype.dxForY2AxisLabel = function dxForY2AxisLabel() {\n        return this.dxForAxisLabel(this.owner.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    Axis.prototype.dyForXAxisLabel = function dyForXAxisLabel() {\n        var $$ = this.owner, config = $$.config,\n            position = this.getXAxisLabelPosition();\n        if (config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : -25 - this.getMaxTickWidth('x');\n        } else {\n            return position.isInner ? \"-0.5em\" : config.axis_x_height ? config.axis_x_height - 10 : \"3em\";\n        }\n    };\n    Axis.prototype.dyForYAxisLabel = function dyForYAxisLabel() {\n        var $$ = this.owner,\n            position = this.getYAxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"-0.5em\" : \"3em\";\n        } else {\n            return position.isInner ? \"1.2em\" : -10 - ($$.config.axis_y_inner ? 0 : (this.getMaxTickWidth('y') + 10));\n        }\n    };\n    Axis.prototype.dyForY2AxisLabel = function dyForY2AxisLabel() {\n        var $$ = this.owner,\n            position = this.getY2AxisLabelPosition();\n        if ($$.config.axis_rotated) {\n            return position.isInner ? \"1.2em\" : \"-2.2em\";\n        } else {\n            return position.isInner ? \"-0.5em\" : 15 + ($$.config.axis_y2_inner ? 0 : (this.getMaxTickWidth('y2') + 15));\n        }\n    };\n    Axis.prototype.textAnchorForXAxisLabel = function textAnchorForXAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel(!$$.config.axis_rotated, this.getXAxisLabelPosition());\n    };\n    Axis.prototype.textAnchorForYAxisLabel = function textAnchorForYAxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getYAxisLabelPosition());\n    };\n    Axis.prototype.textAnchorForY2AxisLabel = function textAnchorForY2AxisLabel() {\n        var $$ = this.owner;\n        return this.textAnchorForAxisLabel($$.config.axis_rotated, this.getY2AxisLabelPosition());\n    };\n    Axis.prototype.getMaxTickWidth = function getMaxTickWidth(id, withoutRecompute) {\n        var $$ = this.owner, config = $$.config,\n            maxWidth = 0, targetsToShow, scale, axis, dummy, svg;\n        if (withoutRecompute && $$.currentMaxTickWidths[id]) {\n            return $$.currentMaxTickWidths[id];\n        }\n        if ($$.svg) {\n            targetsToShow = $$.filterTargetsToShow($$.data.targets);\n            if (id === 'y') {\n                scale = $$.y.copy().domain($$.getYDomain(targetsToShow, 'y'));\n                axis = this.getYAxis(scale, $$.yOrient, config.axis_y_tick_format, $$.yAxisTickValues, false, true, true);\n            } else if (id === 'y2') {\n                scale = $$.y2.copy().domain($$.getYDomain(targetsToShow, 'y2'));\n                axis = this.getYAxis(scale, $$.y2Orient, config.axis_y2_tick_format, $$.y2AxisTickValues, false, true, true);\n            } else {\n                scale = $$.x.copy().domain($$.getXDomain(targetsToShow));\n                axis = this.getXAxis(scale, $$.xOrient, $$.xAxisTickFormat, $$.xAxisTickValues, false, true, true);\n                this.updateXAxisTickValues(targetsToShow, axis);\n            }\n            dummy = $$.d3.select('body').append('div').classed('c3', true);\n            svg = dummy.append(\"svg\").style('visibility', 'hidden').style('position', 'fixed').style('top', 0).style('left', 0),\n            svg.append('g').call(axis).each(function () {\n                $$.d3.select(this).selectAll('text').each(function () {\n                    var box = this.getBoundingClientRect();\n                    if (maxWidth < box.width) { maxWidth = box.width; }\n                });\n                dummy.remove();\n            });\n        }\n        $$.currentMaxTickWidths[id] = maxWidth <= 0 ? $$.currentMaxTickWidths[id] : maxWidth;\n        return $$.currentMaxTickWidths[id];\n    };\n\n    Axis.prototype.updateLabels = function updateLabels(withTransition) {\n        var $$ = this.owner;\n        var axisXLabel = $$.main.select('.' + CLASS.axisX + ' .' + CLASS.axisXLabel),\n            axisYLabel = $$.main.select('.' + CLASS.axisY + ' .' + CLASS.axisYLabel),\n            axisY2Label = $$.main.select('.' + CLASS.axisY2 + ' .' + CLASS.axisY2Label);\n        (withTransition ? axisXLabel.transition() : axisXLabel)\n            .attr(\"x\", this.xForXAxisLabel.bind(this))\n            .attr(\"dx\", this.dxForXAxisLabel.bind(this))\n            .attr(\"dy\", this.dyForXAxisLabel.bind(this))\n            .text(this.textForXAxisLabel.bind(this));\n        (withTransition ? axisYLabel.transition() : axisYLabel)\n            .attr(\"x\", this.xForYAxisLabel.bind(this))\n            .attr(\"dx\", this.dxForYAxisLabel.bind(this))\n            .attr(\"dy\", this.dyForYAxisLabel.bind(this))\n            .text(this.textForYAxisLabel.bind(this));\n        (withTransition ? axisY2Label.transition() : axisY2Label)\n            .attr(\"x\", this.xForY2AxisLabel.bind(this))\n            .attr(\"dx\", this.dxForY2AxisLabel.bind(this))\n            .attr(\"dy\", this.dyForY2AxisLabel.bind(this))\n            .text(this.textForY2AxisLabel.bind(this));\n    };\n    Axis.prototype.getPadding = function getPadding(padding, key, defaultValue, domainLength) {\n        var p = typeof padding === 'number' ? padding : padding[key];\n        if (!isValue(p)) {\n            return defaultValue;\n        }\n        if (padding.unit === 'ratio') {\n            return padding[key] * domainLength;\n        }\n        // assume padding is pixels if unit is not specified\n        return this.convertPixelsToAxisPadding(p, domainLength);\n    };\n    Axis.prototype.convertPixelsToAxisPadding = function convertPixelsToAxisPadding(pixels, domainLength) {\n        var $$ = this.owner,\n            length = $$.config.axis_rotated ? $$.width : $$.height;\n        return domainLength * (pixels / length);\n    };\n    Axis.prototype.generateTickValues = function generateTickValues(values, tickCount, forTimeSeries) {\n        var tickValues = values, targetCount, start, end, count, interval, i, tickValue;\n        if (tickCount) {\n            targetCount = isFunction(tickCount) ? tickCount() : tickCount;\n            // compute ticks according to tickCount\n            if (targetCount === 1) {\n                tickValues = [values[0]];\n            } else if (targetCount === 2) {\n                tickValues = [values[0], values[values.length - 1]];\n            } else if (targetCount > 2) {\n                count = targetCount - 2;\n                start = values[0];\n                end = values[values.length - 1];\n                interval = (end - start) / (count + 1);\n                // re-construct unique values\n                tickValues = [start];\n                for (i = 0; i < count; i++) {\n                    tickValue = +start + interval * (i + 1);\n                    tickValues.push(forTimeSeries ? new Date(tickValue) : tickValue);\n                }\n                tickValues.push(end);\n            }\n        }\n        if (!forTimeSeries) { tickValues = tickValues.sort(function (a, b) { return a - b; }); }\n        return tickValues;\n    };\n    Axis.prototype.generateTransitions = function generateTransitions(duration) {\n        var $$ = this.owner, axes = $$.axes;\n        return {\n            axisX: duration ? axes.x.transition().duration(duration) : axes.x,\n            axisY: duration ? axes.y.transition().duration(duration) : axes.y,\n            axisY2: duration ? axes.y2.transition().duration(duration) : axes.y2,\n            axisSubX: duration ? axes.subx.transition().duration(duration) : axes.subx\n        };\n    };\n    Axis.prototype.redraw = function redraw(transitions, isHidden) {\n        var $$ = this.owner;\n        $$.axes.x.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.y.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.y2.style(\"opacity\", isHidden ? 0 : 1);\n        $$.axes.subx.style(\"opacity\", isHidden ? 0 : 1);\n        transitions.axisX.call($$.xAxis);\n        transitions.axisY.call($$.yAxis);\n        transitions.axisY2.call($$.y2Axis);\n        transitions.axisSubX.call($$.subXAxis);\n    };\n\n    c3_chart_internal_fn.getClipPath = function (id) {\n        var isIE9 = window.navigator.appVersion.toLowerCase().indexOf(\"msie 9.\") >= 0;\n        return \"url(\" + (isIE9 ? \"\" : document.URL.split('#')[0]) + \"#\" + id + \")\";\n    };\n    c3_chart_internal_fn.appendClip = function (parent, id) {\n        return parent.append(\"clipPath\").attr(\"id\", id).append(\"rect\");\n    };\n    c3_chart_internal_fn.getAxisClipX = function (forHorizontal) {\n        // axis line width + padding for left\n        var left = Math.max(30, this.margin.left);\n        return forHorizontal ? -(1 + left) : -(left - 1);\n    };\n    c3_chart_internal_fn.getAxisClipY = function (forHorizontal) {\n        return forHorizontal ? -20 : -this.margin.top;\n    };\n    c3_chart_internal_fn.getXAxisClipX = function () {\n        var $$ = this;\n        return $$.getAxisClipX(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipX = function () {\n        var $$ = this;\n        return $$.config.axis_y_inner ? -1 : $$.getAxisClipX($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipY = function () {\n        var $$ = this;\n        return $$.getAxisClipY($$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getAxisClipWidth = function (forHorizontal) {\n        var $$ = this,\n            left = Math.max(30, $$.margin.left),\n            right = Math.max(30, $$.margin.right);\n        // width + axis line width + padding for left/right\n        return forHorizontal ? $$.width + 2 + left + right : $$.margin.left + 20;\n    };\n    c3_chart_internal_fn.getAxisClipHeight = function (forHorizontal) {\n        // less than 20 is not enough to show the axis label 'outer' without legend\n        return (forHorizontal ? this.margin.bottom : (this.margin.top + this.height)) + 20;\n    };\n    c3_chart_internal_fn.getXAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getXAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight(!$$.config.axis_rotated);\n    };\n    c3_chart_internal_fn.getYAxisClipWidth = function () {\n        var $$ = this;\n        return $$.getAxisClipWidth($$.config.axis_rotated) + ($$.config.axis_y_inner ? 20 : 0);\n    };\n    c3_chart_internal_fn.getYAxisClipHeight = function () {\n        var $$ = this;\n        return $$.getAxisClipHeight($$.config.axis_rotated);\n    };\n\n    c3_chart_internal_fn.initPie = function () {\n        var $$ = this, d3 = $$.d3, config = $$.config;\n        $$.pie = d3.layout.pie().value(function (d) {\n            return d.values.reduce(function (a, b) { return a + b.value; }, 0);\n        });\n        if (!config.data_order) {\n            $$.pie.sort(null);\n        }\n    };\n\n    c3_chart_internal_fn.updateRadius = function () {\n        var $$ = this, config = $$.config,\n            w = config.gauge_width || config.donut_width;\n        $$.radiusExpanded = Math.min($$.arcWidth, $$.arcHeight) / 2;\n        $$.radius = $$.radiusExpanded * 0.95;\n        $$.innerRadiusRatio = w ? ($$.radius - w) / $$.radius : 0.6;\n        $$.innerRadius = $$.hasType('donut') || $$.hasType('gauge') ? $$.radius * $$.innerRadiusRatio : 0;\n    };\n\n    c3_chart_internal_fn.updateArc = function () {\n        var $$ = this;\n        $$.svgArc = $$.getSvgArc();\n        $$.svgArcExpanded = $$.getSvgArcExpanded();\n        $$.svgArcExpandedSub = $$.getSvgArcExpanded(0.98);\n    };\n\n    c3_chart_internal_fn.updateAngle = function (d) {\n        var $$ = this, config = $$.config,\n            found = false, index = 0,\n            gMin, gMax, gTic, gValue;\n\n        if (!config) {\n            return null;\n        }\n\n        $$.pie($$.filterTargetsToShow($$.data.targets)).forEach(function (t) {\n            if (! found && t.data.id === d.data.id) {\n                found = true;\n                d = t;\n                d.index = index;\n            }\n            index++;\n        });\n        if (isNaN(d.startAngle)) {\n            d.startAngle = 0;\n        }\n        if (isNaN(d.endAngle)) {\n            d.endAngle = d.startAngle;\n        }\n        if ($$.isGaugeType(d.data)) {\n            gMin = config.gauge_min;\n            gMax = config.gauge_max;\n            gTic = (Math.PI * (config.gauge_fullCircle ? 2 : 1)) / (gMax - gMin);\n            gValue = d.value < gMin ? 0 : d.value < gMax ? d.value - gMin : (gMax - gMin);\n            d.startAngle = config.gauge_startingAngle;\n            d.endAngle = d.startAngle + gTic * gValue;\n        }\n        return found ? d : null;\n    };\n\n    c3_chart_internal_fn.getSvgArc = function () {\n        var $$ = this,\n            arc = $$.d3.svg.arc().outerRadius($$.radius).innerRadius($$.innerRadius),\n            newArc = function (d, withoutUpdate) {\n                var updated;\n                if (withoutUpdate) { return arc(d); } // for interpolate\n                updated = $$.updateAngle(d);\n                return updated ? arc(updated) : \"M 0 0\";\n            };\n        // TODO: extends all function\n        newArc.centroid = arc.centroid;\n        return newArc;\n    };\n\n    c3_chart_internal_fn.getSvgArcExpanded = function (rate) {\n        var $$ = this,\n            arc = $$.d3.svg.arc().outerRadius($$.radiusExpanded * (rate ? rate : 1)).innerRadius($$.innerRadius);\n        return function (d) {\n            var updated = $$.updateAngle(d);\n            return updated ? arc(updated) : \"M 0 0\";\n        };\n    };\n\n    c3_chart_internal_fn.getArc = function (d, withoutUpdate, force) {\n        return force || this.isArcType(d.data) ? this.svgArc(d, withoutUpdate) : \"M 0 0\";\n    };\n\n\n    c3_chart_internal_fn.transformForArcLabel = function (d) {\n        var $$ = this, config = $$.config,\n            updated = $$.updateAngle(d), c, x, y, h, ratio, translate = \"\";\n        if (updated && !$$.hasType('gauge')) {\n            c = this.svgArc.centroid(updated);\n            x = isNaN(c[0]) ? 0 : c[0];\n            y = isNaN(c[1]) ? 0 : c[1];\n            h = Math.sqrt(x * x + y * y);\n            if ($$.hasType('donut') && config.donut_label_ratio) {\n                ratio = isFunction(config.donut_label_ratio) ? config.donut_label_ratio(d, $$.radius, h) : config.donut_label_ratio;\n            } else if ($$.hasType('pie') && config.pie_label_ratio) {\n                ratio = isFunction(config.pie_label_ratio) ? config.pie_label_ratio(d, $$.radius, h) : config.pie_label_ratio;\n            } else {\n                ratio = $$.radius && h ? (36 / $$.radius > 0.375 ? 1.175 - 36 / $$.radius : 0.8) * $$.radius / h : 0;\n            }\n            translate = \"translate(\" + (x * ratio) +  ',' + (y * ratio) +  \")\";\n        }\n        return translate;\n    };\n\n    c3_chart_internal_fn.getArcRatio = function (d) {\n        var $$ = this,\n            config = $$.config,\n            whole = Math.PI * ($$.hasType('gauge') && !config.gauge_fullCircle ? 1 : 2);\n        return d ? (d.endAngle - d.startAngle) / whole : null;\n    };\n\n    c3_chart_internal_fn.convertToArcData = function (d) {\n        return this.addName({\n            id: d.data.id,\n            value: d.value,\n            ratio: this.getArcRatio(d),\n            index: d.index\n        });\n    };\n\n    c3_chart_internal_fn.textForArcLabel = function (d) {\n        var $$ = this,\n            updated, value, ratio, id, format;\n        if (! $$.shouldShowArcLabel()) { return \"\"; }\n        updated = $$.updateAngle(d);\n        value = updated ? updated.value : null;\n        ratio = $$.getArcRatio(updated);\n        id = d.data.id;\n        if (! $$.hasType('gauge') && ! $$.meetsArcLabelThreshold(ratio)) { return \"\"; }\n        format = $$.getArcLabelFormat();\n        return format ? format(value, ratio, id) : $$.defaultArcValueFormat(value, ratio);\n    };\n\n    c3_chart_internal_fn.expandArc = function (targetIds) {\n        var $$ = this, interval;\n\n        // MEMO: avoid to cancel transition\n        if ($$.transiting) {\n            interval = window.setInterval(function () {\n                if (!$$.transiting) {\n                    window.clearInterval(interval);\n                    if ($$.legend.selectAll('.c3-legend-item-focused').size() > 0) {\n                        $$.expandArc(targetIds);\n                    }\n                }\n            }, 10);\n            return;\n        }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).each(function (d) {\n            if (! $$.shouldExpand(d.data.id)) { return; }\n            $$.d3.select(this).selectAll('path')\n                .transition().duration($$.expandDuration(d.data.id))\n                .attr(\"d\", $$.svgArcExpanded)\n                .transition().duration($$.expandDuration(d.data.id) * 2)\n                .attr(\"d\", $$.svgArcExpandedSub)\n                .each(function (d) {\n                    if ($$.isDonutType(d.data)) {\n                        // callback here\n                    }\n                });\n        });\n    };\n\n    c3_chart_internal_fn.unexpandArc = function (targetIds) {\n        var $$ = this;\n\n        if ($$.transiting) { return; }\n\n        targetIds = $$.mapToTargetIds(targetIds);\n\n        $$.svg.selectAll($$.selectorTargets(targetIds, '.' + CLASS.chartArc)).selectAll('path')\n            .transition().duration(function(d) {\n                return $$.expandDuration(d.data.id);\n            })\n            .attr(\"d\", $$.svgArc);\n        $$.svg.selectAll('.' + CLASS.arc)\n            .style(\"opacity\", 1);\n    };\n\n    c3_chart_internal_fn.expandDuration = function (id) {\n        var $$ = this, config = $$.config;\n\n        if ($$.isDonutType(id)) {\n            return config.donut_expand_duration;\n        } else if ($$.isGaugeType(id)) {\n            return config.gauge_expand_duration;\n        } else if ($$.isPieType(id)) {\n            return config.pie_expand_duration;\n        } else {\n            return 50;\n        }\n\n    };\n\n    c3_chart_internal_fn.shouldExpand = function (id) {\n        var $$ = this, config = $$.config;\n        return ($$.isDonutType(id) && config.donut_expand) ||\n               ($$.isGaugeType(id) && config.gauge_expand) ||\n               ($$.isPieType(id) && config.pie_expand);\n    };\n\n    c3_chart_internal_fn.shouldShowArcLabel = function () {\n        var $$ = this, config = $$.config, shouldShow = true;\n        if ($$.hasType('donut')) {\n            shouldShow = config.donut_label_show;\n        } else if ($$.hasType('pie')) {\n            shouldShow = config.pie_label_show;\n        }\n        // when gauge, always true\n        return shouldShow;\n    };\n\n    c3_chart_internal_fn.meetsArcLabelThreshold = function (ratio) {\n        var $$ = this, config = $$.config,\n            threshold = $$.hasType('donut') ? config.donut_label_threshold : config.pie_label_threshold;\n        return ratio >= threshold;\n    };\n\n    c3_chart_internal_fn.getArcLabelFormat = function () {\n        var $$ = this, config = $$.config,\n            format = config.pie_label_format;\n        if ($$.hasType('gauge')) {\n            format = config.gauge_label_format;\n        } else if ($$.hasType('donut')) {\n            format = config.donut_label_format;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.getArcTitle = function () {\n        var $$ = this;\n        return $$.hasType('donut') ? $$.config.donut_title : \"\";\n    };\n\n    c3_chart_internal_fn.updateTargetsForArc = function (targets) {\n        var $$ = this, main = $$.main,\n            mainPieUpdate, mainPieEnter,\n            classChartArc = $$.classChartArc.bind($$),\n            classArcs = $$.classArcs.bind($$),\n            classFocus = $$.classFocus.bind($$);\n        mainPieUpdate = main.select('.' + CLASS.chartArcs).selectAll('.' + CLASS.chartArc)\n            .data($$.pie(targets))\n            .attr(\"class\", function (d) { return classChartArc(d) + classFocus(d.data); });\n        mainPieEnter = mainPieUpdate.enter().append(\"g\")\n            .attr(\"class\", classChartArc);\n        mainPieEnter.append('g')\n            .attr('class', classArcs);\n        mainPieEnter.append(\"text\")\n            .attr(\"dy\", $$.hasType('gauge') ? \"-.1em\" : \".35em\")\n            .style(\"opacity\", 0)\n            .style(\"text-anchor\", \"middle\")\n            .style(\"pointer-events\", \"none\");\n        // MEMO: can not keep same color..., but not bad to update color in redraw\n        //mainPieUpdate.exit().remove();\n    };\n\n    c3_chart_internal_fn.initArc = function () {\n        var $$ = this;\n        $$.arcs = $$.main.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartArcs)\n            .attr(\"transform\", $$.getTranslate('arc'));\n        $$.arcs.append('text')\n            .attr('class', CLASS.chartArcsTitle)\n            .style(\"text-anchor\", \"middle\")\n            .text($$.getArcTitle());\n    };\n\n    c3_chart_internal_fn.redrawArc = function (duration, durationForExit, withTransform) {\n        var $$ = this, d3 = $$.d3, config = $$.config, main = $$.main,\n            mainArc;\n        mainArc = main.selectAll('.' + CLASS.arcs).selectAll('.' + CLASS.arc)\n            .data($$.arcData.bind($$));\n        mainArc.enter().append('path')\n            .attr(\"class\", $$.classArc.bind($$))\n            .style(\"fill\", function (d) { return $$.color(d.data); })\n            .style(\"cursor\", function (d) { return config.interaction_enabled && config.data_selection_isselectable(d) ? \"pointer\" : null; })\n            .style(\"opacity\", 0)\n            .each(function (d) {\n                if ($$.isGaugeType(d.data)) {\n                    d.startAngle = d.endAngle = config.gauge_startingAngle;\n                }\n                this._current = d;\n            });\n        mainArc\n            .attr(\"transform\", function (d) { return !$$.isGaugeType(d.data) && withTransform ? \"scale(0)\" : \"\"; })\n            .style(\"opacity\", function (d) { return d === this._current ? 0 : 1; })\n            .on('mouseover', config.interaction_enabled ? function (d) {\n                var updated, arcData;\n                if ($$.transiting) { // skip while transiting\n                    return;\n                }\n                updated = $$.updateAngle(d);\n                if (updated) {\n                    arcData = $$.convertToArcData(updated);\n                    // transitions\n                    $$.expandArc(updated.data.id);\n                    $$.api.focus(updated.data.id);\n                    $$.toggleFocusLegend(updated.data.id, true);\n                    $$.config.data_onmouseover(arcData, this);\n                }\n            } : null)\n            .on('mousemove', config.interaction_enabled ? function (d) {\n                var updated = $$.updateAngle(d), arcData, selectedData;\n                if (updated) {\n                    arcData = $$.convertToArcData(updated),\n                    selectedData = [arcData];\n                    $$.showTooltip(selectedData, this);\n                }\n            } : null)\n            .on('mouseout', config.interaction_enabled ? function (d) {\n                var updated, arcData;\n                if ($$.transiting) { // skip while transiting\n                    return;\n                }\n                updated = $$.updateAngle(d);\n                if (updated) {\n                    arcData = $$.convertToArcData(updated);\n                    // transitions\n                    $$.unexpandArc(updated.data.id);\n                    $$.api.revert();\n                    $$.revertLegend();\n                    $$.hideTooltip();\n                    $$.config.data_onmouseout(arcData, this);\n                }\n            } : null)\n            .on('click', config.interaction_enabled ? function (d, i) {\n                var updated = $$.updateAngle(d), arcData;\n                if (updated) {\n                    arcData = $$.convertToArcData(updated);\n                    if ($$.toggleShape) {\n                        $$.toggleShape(this, arcData, i);\n                    }\n                    $$.config.data_onclick.call($$.api, arcData, this);\n                }\n            } : null)\n            .each(function () { $$.transiting = true; })\n            .transition().duration(duration)\n            .attrTween(\"d\", function (d) {\n                var updated = $$.updateAngle(d), interpolate;\n                if (! updated) {\n                    return function () { return \"M 0 0\"; };\n                }\n                //                if (this._current === d) {\n                //                    this._current = {\n                //                        startAngle: Math.PI*2,\n                //                        endAngle: Math.PI*2,\n                //                    };\n                //                }\n                if (isNaN(this._current.startAngle)) {\n                    this._current.startAngle = 0;\n                }\n                if (isNaN(this._current.endAngle)) {\n                    this._current.endAngle = this._current.startAngle;\n                }\n                interpolate = d3.interpolate(this._current, updated);\n                this._current = interpolate(0);\n                return function (t) {\n                    var interpolated = interpolate(t);\n                    interpolated.data = d.data; // data.id will be updated by interporator\n                    return $$.getArc(interpolated, true);\n                };\n            })\n            .attr(\"transform\", withTransform ? \"scale(1)\" : \"\")\n            .style(\"fill\", function (d) {\n                return $$.levelColor ? $$.levelColor(d.data.values[0].value) : $$.color(d.data.id);\n            }) // Where gauge reading color would receive customization.\n            .style(\"opacity\", 1)\n            .call($$.endall, function () {\n                $$.transiting = false;\n            });\n        mainArc.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n        main.selectAll('.' + CLASS.chartArc).select('text')\n            .style(\"opacity\", 0)\n            .attr('class', function (d) { return $$.isGaugeType(d.data) ? CLASS.gaugeValue : ''; })\n            .text($$.textForArcLabel.bind($$))\n            .attr(\"transform\", $$.transformForArcLabel.bind($$))\n            .style('font-size', function (d) { return $$.isGaugeType(d.data) ? Math.round($$.radius / 5) + 'px' : ''; })\n          .transition().duration(duration)\n            .style(\"opacity\", function (d) { return $$.isTargetToShow(d.data.id) && $$.isArcType(d.data) ? 1 : 0; });\n        main.select('.' + CLASS.chartArcsTitle)\n            .style(\"opacity\", $$.hasType('donut') || $$.hasType('gauge') ? 1 : 0);\n\n        if ($$.hasType('gauge')) {\n            $$.arcs.select('.' + CLASS.chartArcsBackground)\n                .attr(\"d\", function () {\n                    var d = {\n                        data: [{value: config.gauge_max}],\n                        startAngle: config.gauge_startingAngle,\n                        endAngle: -1 * config.gauge_startingAngle\n                    };\n                    return $$.getArc(d, true, true);\n                });\n            $$.arcs.select('.' + CLASS.chartArcsGaugeUnit)\n                .attr(\"dy\", \".75em\")\n                .text(config.gauge_label_show ? config.gauge_units : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMin)\n                .attr(\"dx\", -1 * ($$.innerRadius + (($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2))) + \"px\")\n                .attr(\"dy\", \"1.2em\")\n                .text(config.gauge_label_show ? config.gauge_min : '');\n            $$.arcs.select('.' + CLASS.chartArcsGaugeMax)\n                .attr(\"dx\", $$.innerRadius + (($$.radius - $$.innerRadius) / (config.gauge_fullCircle ? 1 : 2)) + \"px\")\n                .attr(\"dy\", \"1.2em\")\n                .text(config.gauge_label_show ? config.gauge_max : '');\n        }\n    };\n    c3_chart_internal_fn.initGauge = function () {\n        var arcs = this.arcs;\n        if (this.hasType('gauge')) {\n            arcs.append('path')\n                .attr(\"class\", CLASS.chartArcsBackground);\n            arcs.append(\"text\")\n                .attr(\"class\", CLASS.chartArcsGaugeUnit)\n                .style(\"text-anchor\", \"middle\")\n                .style(\"pointer-events\", \"none\");\n            arcs.append(\"text\")\n                .attr(\"class\", CLASS.chartArcsGaugeMin)\n                .style(\"text-anchor\", \"middle\")\n                .style(\"pointer-events\", \"none\");\n            arcs.append(\"text\")\n                .attr(\"class\", CLASS.chartArcsGaugeMax)\n                .style(\"text-anchor\", \"middle\")\n                .style(\"pointer-events\", \"none\");\n        }\n    };\n    c3_chart_internal_fn.getGaugeLabelHeight = function () {\n        return this.config.gauge_label_show ? 20 : 0;\n    };\n\n    c3_chart_internal_fn.initRegion = function () {\n        var $$ = this;\n        $$.region = $$.main.append('g')\n            .attr(\"clip-path\", $$.clipPath)\n            .attr(\"class\", CLASS.regions);\n    };\n    c3_chart_internal_fn.updateRegion = function (duration) {\n        var $$ = this, config = $$.config;\n\n        // hide if arc type\n        $$.region.style('visibility', $$.hasArcType() ? 'hidden' : 'visible');\n\n        $$.mainRegion = $$.main.select('.' + CLASS.regions).selectAll('.' + CLASS.region)\n            .data(config.regions);\n        $$.mainRegion.enter().append('g')\n          .append('rect')\n            .style(\"fill-opacity\", 0);\n        $$.mainRegion\n            .attr('class', $$.classRegion.bind($$));\n        $$.mainRegion.exit().transition().duration(duration)\n            .style(\"opacity\", 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawRegion = function (withTransition) {\n        var $$ = this,\n            regions = $$.mainRegion.selectAll('rect').each(function () {\n                // data is binded to g and it's not transferred to rect (child node) automatically,\n                // then data of each rect has to be updated manually.\n                // TODO: there should be more efficient way to solve this?\n                var parentData = $$.d3.select(this.parentNode).datum();\n                $$.d3.select(this).datum(parentData);\n            }),\n            x = $$.regionX.bind($$),\n            y = $$.regionY.bind($$),\n            w = $$.regionWidth.bind($$),\n            h = $$.regionHeight.bind($$);\n        return [\n            (withTransition ? regions.transition() : regions)\n                .attr(\"x\", x)\n                .attr(\"y\", y)\n                .attr(\"width\", w)\n                .attr(\"height\", h)\n                .style(\"fill-opacity\", function (d) { return isValue(d.opacity) ? d.opacity : 0.1; })\n        ];\n    };\n    c3_chart_internal_fn.regionX = function (d) {\n        var $$ = this, config = $$.config,\n            xPos, yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            xPos = config.axis_rotated ? ('start' in d ? yScale(d.start) : 0) : 0;\n        } else {\n            xPos = config.axis_rotated ? 0 : ('start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0);\n        }\n        return xPos;\n    };\n    c3_chart_internal_fn.regionY = function (d) {\n        var $$ = this, config = $$.config,\n            yPos, yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            yPos = config.axis_rotated ? 0 : ('end' in d ? yScale(d.end) : 0);\n        } else {\n            yPos = config.axis_rotated ? ('start' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.start) : d.start) : 0) : 0;\n        }\n        return yPos;\n    };\n    c3_chart_internal_fn.regionWidth = function (d) {\n        var $$ = this, config = $$.config,\n            start = $$.regionX(d), end, yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? ('end' in d ? yScale(d.end) : $$.width) : $$.width;\n        } else {\n            end = config.axis_rotated ? $$.width : ('end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.width);\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.regionHeight = function (d) {\n        var $$ = this, config = $$.config,\n            start = this.regionY(d), end, yScale = d.axis === 'y' ? $$.y : $$.y2;\n        if (d.axis === 'y' || d.axis === 'y2') {\n            end = config.axis_rotated ? $$.height : ('start' in d ? yScale(d.start) : $$.height);\n        } else {\n            end = config.axis_rotated ? ('end' in d ? $$.x($$.isTimeSeries() ? $$.parseDate(d.end) : d.end) : $$.height) : $$.height;\n        }\n        return end < start ? 0 : end - start;\n    };\n    c3_chart_internal_fn.isRegionOnX = function (d) {\n        return !d.axis || d.axis === 'x';\n    };\n\n    c3_chart_internal_fn.drag = function (mouse) {\n        var $$ = this, config = $$.config, main = $$.main, d3 = $$.d3;\n        var sx, sy, mx, my, minX, maxX, minY, maxY;\n\n        if ($$.hasArcType()) { return; }\n        if (! config.data_selection_enabled) { return; } // do nothing if not selectable\n        if (config.zoom_enabled && ! $$.zoom.altDomain) { return; } // skip if zoomable because of conflict drag dehavior\n        if (!config.data_selection_multiple) { return; } // skip when single selection because drag is used for multiple selection\n\n        sx = $$.dragStart[0];\n        sy = $$.dragStart[1];\n        mx = mouse[0];\n        my = mouse[1];\n        minX = Math.min(sx, mx);\n        maxX = Math.max(sx, mx);\n        minY = (config.data_selection_grouped) ? $$.margin.top : Math.min(sy, my);\n        maxY = (config.data_selection_grouped) ? $$.height : Math.max(sy, my);\n\n        main.select('.' + CLASS.dragarea)\n            .attr('x', minX)\n            .attr('y', minY)\n            .attr('width', maxX - minX)\n            .attr('height', maxY - minY);\n        // TODO: binary search when multiple xs\n        main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape)\n            .filter(function (d) { return config.data_selection_isselectable(d); })\n            .each(function (d, i) {\n                var shape = d3.select(this),\n                    isSelected = shape.classed(CLASS.SELECTED),\n                    isIncluded = shape.classed(CLASS.INCLUDED),\n                    _x, _y, _w, _h, toggle, isWithin = false, box;\n                if (shape.classed(CLASS.circle)) {\n                    _x = shape.attr(\"cx\") * 1;\n                    _y = shape.attr(\"cy\") * 1;\n                    toggle = $$.togglePoint;\n                    isWithin = minX < _x && _x < maxX && minY < _y && _y < maxY;\n                }\n                else if (shape.classed(CLASS.bar)) {\n                    box = getPathBox(this);\n                    _x = box.x;\n                    _y = box.y;\n                    _w = box.width;\n                    _h = box.height;\n                    toggle = $$.togglePath;\n                    isWithin = !(maxX < _x || _x + _w < minX) && !(maxY < _y || _y + _h < minY);\n                } else {\n                    // line/area selection not supported yet\n                    return;\n                }\n                if (isWithin ^ isIncluded) {\n                    shape.classed(CLASS.INCLUDED, !isIncluded);\n                    // TODO: included/unincluded callback here\n                    shape.classed(CLASS.SELECTED, !isSelected);\n                    toggle.call($$, !isSelected, shape, d, i);\n                }\n            });\n    };\n\n    c3_chart_internal_fn.dragstart = function (mouse) {\n        var $$ = this, config = $$.config;\n        if ($$.hasArcType()) { return; }\n        if (! config.data_selection_enabled) { return; } // do nothing if not selectable\n        $$.dragStart = mouse;\n        $$.main.select('.' + CLASS.chart).append('rect')\n            .attr('class', CLASS.dragarea)\n            .style('opacity', 0.1);\n        $$.dragging = true;\n    };\n\n    c3_chart_internal_fn.dragend = function () {\n        var $$ = this, config = $$.config;\n        if ($$.hasArcType()) { return; }\n        if (! config.data_selection_enabled) { return; } // do nothing if not selectable\n        $$.main.select('.' + CLASS.dragarea)\n            .transition().duration(100)\n            .style('opacity', 0)\n            .remove();\n        $$.main.selectAll('.' + CLASS.shape)\n            .classed(CLASS.INCLUDED, false);\n        $$.dragging = false;\n    };\n\n    c3_chart_internal_fn.selectPoint = function (target, d, i) {\n        var $$ = this, config = $$.config,\n            cx = (config.axis_rotated ? $$.circleY : $$.circleX).bind($$),\n            cy = (config.axis_rotated ? $$.circleX : $$.circleY).bind($$),\n            r = $$.pointSelectR.bind($$);\n        config.data_onselected.call($$.api, d, target.node());\n        // add selected-circle on low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i)\n            .data([d])\n            .enter().append('circle')\n            .attr(\"class\", function () { return $$.generateClass(CLASS.selectedCircle, i); })\n            .attr(\"cx\", cx)\n            .attr(\"cy\", cy)\n            .attr(\"stroke\", function () { return $$.color(d); })\n            .attr(\"r\", function (d) { return $$.pointSelectR(d) * 1.4; })\n            .transition().duration(100)\n            .attr(\"r\", r);\n    };\n    c3_chart_internal_fn.unselectPoint = function (target, d, i) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$.api, d, target.node());\n        // remove selected-circle from low layer g\n        $$.main.select('.' + CLASS.selectedCircles + $$.getTargetSelectorSuffix(d.id)).selectAll('.' + CLASS.selectedCircle + '-' + i)\n            .transition().duration(100).attr('r', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.togglePoint = function (selected, target, d, i) {\n        selected ? this.selectPoint(target, d, i) : this.unselectPoint(target, d, i);\n    };\n    c3_chart_internal_fn.selectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100)\n                .style(\"fill\", function () { return $$.d3.rgb($$.color(d)).brighter(0.75); });\n        }\n    };\n    c3_chart_internal_fn.unselectPath = function (target, d) {\n        var $$ = this;\n        $$.config.data_onunselected.call($$, d, target.node());\n        if ($$.config.interaction_brighten) {\n            target.transition().duration(100)\n                .style(\"fill\", function () { return $$.color(d); });\n        }\n    };\n    c3_chart_internal_fn.togglePath = function (selected, target, d, i) {\n        selected ? this.selectPath(target, d, i) : this.unselectPath(target, d, i);\n    };\n    c3_chart_internal_fn.getToggle = function (that, d) {\n        var $$ = this, toggle;\n        if (that.nodeName === 'circle') {\n            if ($$.isStepType(d)) {\n                // circle is hidden in step chart, so treat as within the click area\n                toggle = function () {}; // TODO: how to select step chart?\n            } else {\n                toggle = $$.togglePoint;\n            }\n        }\n        else if (that.nodeName === 'path') {\n            toggle = $$.togglePath;\n        }\n        return toggle;\n    };\n    c3_chart_internal_fn.toggleShape = function (that, d, i) {\n        var $$ = this, d3 = $$.d3, config = $$.config,\n            shape = d3.select(that), isSelected = shape.classed(CLASS.SELECTED),\n            toggle = $$.getToggle(that, d).bind($$);\n\n        if (config.data_selection_enabled && config.data_selection_isselectable(d)) {\n            if (!config.data_selection_multiple) {\n                $$.main.selectAll('.' + CLASS.shapes + (config.data_selection_grouped ? $$.getTargetSelectorSuffix(d.id) : \"\")).selectAll('.' + CLASS.shape).each(function (d, i) {\n                    var shape = d3.select(this);\n                    if (shape.classed(CLASS.SELECTED)) { toggle(false, shape.classed(CLASS.SELECTED, false), d, i); }\n                });\n            }\n            shape.classed(CLASS.SELECTED, !isSelected);\n            toggle(!isSelected, shape, d, i);\n        }\n    };\n\n    c3_chart_internal_fn.initBrush = function () {\n        var $$ = this, d3 = $$.d3;\n        $$.brush = d3.svg.brush().on(\"brush\", function () { $$.redrawForBrush(); });\n        $$.brush.update = function () {\n            if ($$.context) { $$.context.select('.' + CLASS.brush).call(this); }\n            return this;\n        };\n        $$.brush.scale = function (scale) {\n            return $$.config.axis_rotated ? this.y(scale) : this.x(scale);\n        };\n    };\n    c3_chart_internal_fn.initSubchart = function () {\n        var $$ = this, config = $$.config,\n            context = $$.context = $$.svg.append(\"g\").attr(\"transform\", $$.getTranslate('context')),\n            visibility = config.subchart_show ? 'visible' : 'hidden';\n\n        context.style('visibility', visibility);\n\n        // Define g for chart area\n        context.append('g')\n            .attr(\"clip-path\", $$.clipPathForSubchart)\n            .attr('class', CLASS.chart);\n\n        // Define g for bar chart area\n        context.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartBars);\n\n        // Define g for line chart area\n        context.select('.' + CLASS.chart).append(\"g\")\n            .attr(\"class\", CLASS.chartLines);\n\n        // Add extent rect for Brush\n        context.append(\"g\")\n            .attr(\"clip-path\", $$.clipPath)\n            .attr(\"class\", CLASS.brush)\n            .call($$.brush);\n\n        // ATTENTION: This must be called AFTER chart added\n        // Add Axis\n        $$.axes.subx = context.append(\"g\")\n            .attr(\"class\", CLASS.axisX)\n            .attr(\"transform\", $$.getTranslate('subx'))\n            .attr(\"clip-path\", config.axis_rotated ? \"\" : $$.clipPathForXAxis)\n            .style(\"visibility\", config.subchart_axis_x_show ? visibility : 'hidden');\n    };\n    c3_chart_internal_fn.updateTargetsForSubchart = function (targets) {\n        var $$ = this, context = $$.context, config = $$.config,\n            contextLineEnter, contextLineUpdate, contextBarEnter, contextBarUpdate,\n            classChartBar = $$.classChartBar.bind($$),\n            classBars = $$.classBars.bind($$),\n            classChartLine = $$.classChartLine.bind($$),\n            classLines = $$.classLines.bind($$),\n            classAreas = $$.classAreas.bind($$);\n\n        if (config.subchart_show) {\n            //-- Bar --//\n            contextBarUpdate = context.select('.' + CLASS.chartBars).selectAll('.' + CLASS.chartBar)\n                .data(targets)\n                .attr('class', classChartBar);\n            contextBarEnter = contextBarUpdate.enter().append('g')\n                .style('opacity', 0)\n                .attr('class', classChartBar);\n            // Bars for each data\n            contextBarEnter.append('g')\n                .attr(\"class\", classBars);\n\n            //-- Line --//\n            contextLineUpdate = context.select('.' + CLASS.chartLines).selectAll('.' + CLASS.chartLine)\n                .data(targets)\n                .attr('class', classChartLine);\n            contextLineEnter = contextLineUpdate.enter().append('g')\n                .style('opacity', 0)\n                .attr('class', classChartLine);\n            // Lines for each data\n            contextLineEnter.append(\"g\")\n                .attr(\"class\", classLines);\n            // Area\n            contextLineEnter.append(\"g\")\n                .attr(\"class\", classAreas);\n\n            //-- Brush --//\n            context.selectAll('.' + CLASS.brush + ' rect')\n                .attr(config.axis_rotated ? \"width\" : \"height\", config.axis_rotated ? $$.width2 : $$.height2);\n        }\n    };\n    c3_chart_internal_fn.updateBarForSubchart = function (durationForExit) {\n        var $$ = this;\n        $$.contextBar = $$.context.selectAll('.' + CLASS.bars).selectAll('.' + CLASS.bar)\n            .data($$.barData.bind($$));\n        $$.contextBar.enter().append('path')\n            .attr(\"class\", $$.classBar.bind($$))\n            .style(\"stroke\", 'none')\n            .style(\"fill\", $$.color);\n        $$.contextBar\n            .style(\"opacity\", $$.initialOpacity.bind($$));\n        $$.contextBar.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawBarForSubchart = function (drawBarOnSub, withTransition, duration) {\n        (withTransition ? this.contextBar.transition(Math.random().toString()).duration(duration) : this.contextBar)\n            .attr('d', drawBarOnSub)\n            .style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateLineForSubchart = function (durationForExit) {\n        var $$ = this;\n        $$.contextLine = $$.context.selectAll('.' + CLASS.lines).selectAll('.' + CLASS.line)\n            .data($$.lineData.bind($$));\n        $$.contextLine.enter().append('path')\n            .attr('class', $$.classLine.bind($$))\n            .style('stroke', $$.color);\n        $$.contextLine\n            .style(\"opacity\", $$.initialOpacity.bind($$));\n        $$.contextLine.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawLineForSubchart = function (drawLineOnSub, withTransition, duration) {\n        (withTransition ? this.contextLine.transition(Math.random().toString()).duration(duration) : this.contextLine)\n            .attr(\"d\", drawLineOnSub)\n            .style('opacity', 1);\n    };\n    c3_chart_internal_fn.updateAreaForSubchart = function (durationForExit) {\n        var $$ = this, d3 = $$.d3;\n        $$.contextArea = $$.context.selectAll('.' + CLASS.areas).selectAll('.' + CLASS.area)\n            .data($$.lineData.bind($$));\n        $$.contextArea.enter().append('path')\n            .attr(\"class\", $$.classArea.bind($$))\n            .style(\"fill\", $$.color)\n            .style(\"opacity\", function () { $$.orgAreaOpacity = +d3.select(this).style('opacity'); return 0; });\n        $$.contextArea\n            .style(\"opacity\", 0);\n        $$.contextArea.exit().transition().duration(durationForExit)\n            .style('opacity', 0)\n            .remove();\n    };\n    c3_chart_internal_fn.redrawAreaForSubchart = function (drawAreaOnSub, withTransition, duration) {\n        (withTransition ? this.contextArea.transition(Math.random().toString()).duration(duration) : this.contextArea)\n            .attr(\"d\", drawAreaOnSub)\n            .style(\"fill\", this.color)\n            .style(\"opacity\", this.orgAreaOpacity);\n    };\n    c3_chart_internal_fn.redrawSubchart = function (withSubchart, transitions, duration, durationForExit, areaIndices, barIndices, lineIndices) {\n        var $$ = this, d3 = $$.d3, config = $$.config,\n            drawAreaOnSub, drawBarOnSub, drawLineOnSub;\n\n        $$.context.style('visibility', config.subchart_show ? 'visible' : 'hidden');\n\n        // subchart\n        if (config.subchart_show) {\n            // reflect main chart to extent on subchart if zoomed\n            if (d3.event && d3.event.type === 'zoom') {\n                $$.brush.extent($$.x.orgDomain()).update();\n            }\n            // update subchart elements if needed\n            if (withSubchart) {\n\n                // extent rect\n                if (!$$.brush.empty()) {\n                    $$.brush.extent($$.x.orgDomain()).update();\n                }\n                // setup drawer - MEMO: this must be called after axis updated\n                drawAreaOnSub = $$.generateDrawArea(areaIndices, true);\n                drawBarOnSub = $$.generateDrawBar(barIndices, true);\n                drawLineOnSub = $$.generateDrawLine(lineIndices, true);\n\n                $$.updateBarForSubchart(duration);\n                $$.updateLineForSubchart(duration);\n                $$.updateAreaForSubchart(duration);\n\n                $$.redrawBarForSubchart(drawBarOnSub, duration, duration);\n                $$.redrawLineForSubchart(drawLineOnSub, duration, duration);\n                $$.redrawAreaForSubchart(drawAreaOnSub, duration, duration);\n            }\n        }\n    };\n    c3_chart_internal_fn.redrawForBrush = function () {\n        var $$ = this, x = $$.x;\n        $$.redraw({\n            withTransition: false,\n            withY: $$.config.zoom_rescale,\n            withSubchart: false,\n            withUpdateXDomain: true,\n            withDimension: false\n        });\n        $$.config.subchart_onbrush.call($$.api, x.orgDomain());\n    };\n    c3_chart_internal_fn.transformContext = function (withTransition, transitions) {\n        var $$ = this, subXAxis;\n        if (transitions && transitions.axisSubX) {\n            subXAxis = transitions.axisSubX;\n        } else {\n            subXAxis = $$.context.select('.' + CLASS.axisX);\n            if (withTransition) { subXAxis = subXAxis.transition(); }\n        }\n        $$.context.attr(\"transform\", $$.getTranslate('context'));\n        subXAxis.attr(\"transform\", $$.getTranslate('subx'));\n    };\n    c3_chart_internal_fn.getDefaultExtent = function () {\n        var $$ = this, config = $$.config,\n            extent = isFunction(config.axis_x_extent) ? config.axis_x_extent($$.getXDomain($$.data.targets)) : config.axis_x_extent;\n        if ($$.isTimeSeries()) {\n            extent = [$$.parseDate(extent[0]), $$.parseDate(extent[1])];\n        }\n        return extent;\n    };\n\n    c3_chart_internal_fn.initZoom = function () {\n        var $$ = this, d3 = $$.d3, config = $$.config, startEvent;\n\n        $$.zoom = d3.behavior.zoom()\n            .on(\"zoomstart\", function () {\n                startEvent = d3.event.sourceEvent;\n                $$.zoom.altDomain = d3.event.sourceEvent.altKey ? $$.x.orgDomain() : null;\n                config.zoom_onzoomstart.call($$.api, d3.event.sourceEvent);\n            })\n            .on(\"zoom\", function () {\n                $$.redrawForZoom.call($$);\n            })\n            .on('zoomend', function () {\n                var event = d3.event.sourceEvent;\n                // if click, do nothing. otherwise, click interaction will be canceled.\n                if (event && startEvent.clientX === event.clientX && startEvent.clientY === event.clientY) {\n                    return;\n                }\n                $$.redrawEventRect();\n                $$.updateZoom();\n                config.zoom_onzoomend.call($$.api, $$.x.orgDomain());\n            });\n        $$.zoom.scale = function (scale) {\n            return config.axis_rotated ? this.y(scale) : this.x(scale);\n        };\n        $$.zoom.orgScaleExtent = function () {\n            var extent = config.zoom_extent ? config.zoom_extent : [1, 10];\n            return [extent[0], Math.max($$.getMaxDataCount() / extent[1], extent[1])];\n        };\n        $$.zoom.updateScaleExtent = function () {\n            var ratio = diffDomain($$.x.orgDomain()) / diffDomain($$.getZoomDomain()),\n                extent = this.orgScaleExtent();\n            this.scaleExtent([extent[0] * ratio, extent[1] * ratio]);\n            return this;\n        };\n    };\n    c3_chart_internal_fn.getZoomDomain = function () {\n        var $$ = this, config = $$.config, d3 = $$.d3,\n            min = d3.min([$$.orgXDomain[0], config.zoom_x_min]),\n            max = d3.max([$$.orgXDomain[1], config.zoom_x_max]);\n        return [min, max];\n    };\n    c3_chart_internal_fn.updateZoom = function () {\n        var $$ = this, z = $$.config.zoom_enabled ? $$.zoom : function () {};\n        $$.main.select('.' + CLASS.zoomRect).call(z).on(\"dblclick.zoom\", null);\n        $$.main.selectAll('.' + CLASS.eventRect).call(z).on(\"dblclick.zoom\", null);\n    };\n    c3_chart_internal_fn.redrawForZoom = function () {\n        var $$ = this, d3 = $$.d3, config = $$.config, zoom = $$.zoom, x = $$.x;\n        if (!config.zoom_enabled) {\n            return;\n        }\n        if ($$.filterTargetsToShow($$.data.targets).length === 0) {\n            return;\n        }\n        if (d3.event.sourceEvent.type === 'mousemove' && zoom.altDomain) {\n            x.domain(zoom.altDomain);\n            zoom.scale(x).updateScaleExtent();\n            return;\n        }\n        if ($$.isCategorized() && x.orgDomain()[0] === $$.orgXDomain[0]) {\n            x.domain([$$.orgXDomain[0] - 1e-10, x.orgDomain()[1]]);\n        }\n        $$.redraw({\n            withTransition: false,\n            withY: config.zoom_rescale,\n            withSubchart: false,\n            withEventRect: false,\n            withDimension: false\n        });\n        if (d3.event.sourceEvent.type === 'mousemove') {\n            $$.cancelClick = true;\n        }\n        config.zoom_onzoom.call($$.api, x.orgDomain());\n    };\n\n    c3_chart_internal_fn.generateColor = function () {\n        var $$ = this, config = $$.config, d3 = $$.d3,\n            colors = config.data_colors,\n            pattern = notEmpty(config.color_pattern) ? config.color_pattern : d3.scale.category10().range(),\n            callback = config.data_color,\n            ids = [];\n\n        return function (d) {\n            var id = d.id || (d.data && d.data.id) || d, color;\n\n            // if callback function is provided\n            if (colors[id] instanceof Function) {\n                color = colors[id](d);\n            }\n            // if specified, choose that color\n            else if (colors[id]) {\n                color = colors[id];\n            }\n            // if not specified, choose from pattern\n            else {\n                if (ids.indexOf(id) < 0) { ids.push(id); }\n                color = pattern[ids.indexOf(id) % pattern.length];\n                colors[id] = color;\n            }\n            return callback instanceof Function ? callback(color, d) : color;\n        };\n    };\n    c3_chart_internal_fn.generateLevelColor = function () {\n        var $$ = this, config = $$.config,\n            colors = config.color_pattern,\n            threshold = config.color_threshold,\n            asValue = threshold.unit === 'value',\n            values = threshold.values && threshold.values.length ? threshold.values : [],\n            max = threshold.max || 100;\n        return notEmpty(config.color_threshold) ? function (value) {\n            var i, v, color = colors[colors.length - 1];\n            for (i = 0; i < values.length; i++) {\n                v = asValue ? value : (value * 100 / max);\n                if (v < values[i]) {\n                    color = colors[i];\n                    break;\n                }\n            }\n            return color;\n        } : null;\n    };\n\n    c3_chart_internal_fn.getYFormat = function (forArc) {\n        var $$ = this,\n            formatForY = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.yFormat,\n            formatForY2 = forArc && !$$.hasType('gauge') ? $$.defaultArcValueFormat : $$.y2Format;\n        return function (v, ratio, id) {\n            var format = $$.axis.getId(id) === 'y2' ? formatForY2 : formatForY;\n            return format.call($$, v, ratio);\n        };\n    };\n    c3_chart_internal_fn.yFormat = function (v) {\n        var $$ = this, config = $$.config,\n            format = config.axis_y_tick_format ? config.axis_y_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.y2Format = function (v) {\n        var $$ = this, config = $$.config,\n            format = config.axis_y2_tick_format ? config.axis_y2_tick_format : $$.defaultValueFormat;\n        return format(v);\n    };\n    c3_chart_internal_fn.defaultValueFormat = function (v) {\n        return isValue(v) ? +v : \"\";\n    };\n    c3_chart_internal_fn.defaultArcValueFormat = function (v, ratio) {\n        return (ratio * 100).toFixed(1) + '%';\n    };\n    c3_chart_internal_fn.dataLabelFormat = function (targetId) {\n        var $$ = this, data_labels = $$.config.data_labels,\n            format, defaultFormat = function (v) { return isValue(v) ? +v : \"\"; };\n        // find format according to axis id\n        if (typeof data_labels.format === 'function') {\n            format = data_labels.format;\n        } else if (typeof data_labels.format === 'object') {\n            if (data_labels.format[targetId]) {\n                format = data_labels.format[targetId] === true ? defaultFormat : data_labels.format[targetId];\n            } else {\n                format = function () { return ''; };\n            }\n        } else {\n            format = defaultFormat;\n        }\n        return format;\n    };\n\n    c3_chart_internal_fn.hasCaches = function (ids) {\n        for (var i = 0; i < ids.length; i++) {\n            if (! (ids[i] in this.cache)) { return false; }\n        }\n        return true;\n    };\n    c3_chart_internal_fn.addCache = function (id, target) {\n        this.cache[id] = this.cloneTarget(target);\n    };\n    c3_chart_internal_fn.getCaches = function (ids) {\n        var targets = [], i;\n        for (i = 0; i < ids.length; i++) {\n            if (ids[i] in this.cache) { targets.push(this.cloneTarget(this.cache[ids[i]])); }\n        }\n        return targets;\n    };\n\n    var CLASS = c3_chart_internal_fn.CLASS = {\n        target: 'c3-target',\n        chart: 'c3-chart',\n        chartLine: 'c3-chart-line',\n        chartLines: 'c3-chart-lines',\n        chartBar: 'c3-chart-bar',\n        chartBars: 'c3-chart-bars',\n        chartText: 'c3-chart-text',\n        chartTexts: 'c3-chart-texts',\n        chartArc: 'c3-chart-arc',\n        chartArcs: 'c3-chart-arcs',\n        chartArcsTitle: 'c3-chart-arcs-title',\n        chartArcsBackground: 'c3-chart-arcs-background',\n        chartArcsGaugeUnit: 'c3-chart-arcs-gauge-unit',\n        chartArcsGaugeMax: 'c3-chart-arcs-gauge-max',\n        chartArcsGaugeMin: 'c3-chart-arcs-gauge-min',\n        selectedCircle: 'c3-selected-circle',\n        selectedCircles: 'c3-selected-circles',\n        eventRect: 'c3-event-rect',\n        eventRects: 'c3-event-rects',\n        eventRectsSingle: 'c3-event-rects-single',\n        eventRectsMultiple: 'c3-event-rects-multiple',\n        zoomRect: 'c3-zoom-rect',\n        brush: 'c3-brush',\n        focused: 'c3-focused',\n        defocused: 'c3-defocused',\n        region: 'c3-region',\n        regions: 'c3-regions',\n        title: 'c3-title',\n        tooltipContainer: 'c3-tooltip-container',\n        tooltip: 'c3-tooltip',\n        tooltipName: 'c3-tooltip-name',\n        shape: 'c3-shape',\n        shapes: 'c3-shapes',\n        line: 'c3-line',\n        lines: 'c3-lines',\n        bar: 'c3-bar',\n        bars: 'c3-bars',\n        circle: 'c3-circle',\n        circles: 'c3-circles',\n        arc: 'c3-arc',\n        arcs: 'c3-arcs',\n        area: 'c3-area',\n        areas: 'c3-areas',\n        empty: 'c3-empty',\n        text: 'c3-text',\n        texts: 'c3-texts',\n        gaugeValue: 'c3-gauge-value',\n        grid: 'c3-grid',\n        gridLines: 'c3-grid-lines',\n        xgrid: 'c3-xgrid',\n        xgrids: 'c3-xgrids',\n        xgridLine: 'c3-xgrid-line',\n        xgridLines: 'c3-xgrid-lines',\n        xgridFocus: 'c3-xgrid-focus',\n        ygrid: 'c3-ygrid',\n        ygrids: 'c3-ygrids',\n        ygridLine: 'c3-ygrid-line',\n        ygridLines: 'c3-ygrid-lines',\n        axis: 'c3-axis',\n        axisX: 'c3-axis-x',\n        axisXLabel: 'c3-axis-x-label',\n        axisY: 'c3-axis-y',\n        axisYLabel: 'c3-axis-y-label',\n        axisY2: 'c3-axis-y2',\n        axisY2Label: 'c3-axis-y2-label',\n        legendBackground: 'c3-legend-background',\n        legendItem: 'c3-legend-item',\n        legendItemEvent: 'c3-legend-item-event',\n        legendItemTile: 'c3-legend-item-tile',\n        legendItemHidden: 'c3-legend-item-hidden',\n        legendItemFocused: 'c3-legend-item-focused',\n        dragarea: 'c3-dragarea',\n        EXPANDED: '_expanded_',\n        SELECTED: '_selected_',\n        INCLUDED: '_included_'\n    };\n    c3_chart_internal_fn.generateClass = function (prefix, targetId) {\n        return \" \" + prefix + \" \" + prefix + this.getTargetSelectorSuffix(targetId);\n    };\n    c3_chart_internal_fn.classText = function (d) {\n        return this.generateClass(CLASS.text, d.index);\n    };\n    c3_chart_internal_fn.classTexts = function (d) {\n        return this.generateClass(CLASS.texts, d.id);\n    };\n    c3_chart_internal_fn.classShape = function (d) {\n        return this.generateClass(CLASS.shape, d.index);\n    };\n    c3_chart_internal_fn.classShapes = function (d) {\n        return this.generateClass(CLASS.shapes, d.id);\n    };\n    c3_chart_internal_fn.classLine = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.line, d.id);\n    };\n    c3_chart_internal_fn.classLines = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.lines, d.id);\n    };\n    c3_chart_internal_fn.classCircle = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.circle, d.index);\n    };\n    c3_chart_internal_fn.classCircles = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.circles, d.id);\n    };\n    c3_chart_internal_fn.classBar = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.bar, d.index);\n    };\n    c3_chart_internal_fn.classBars = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.bars, d.id);\n    };\n    c3_chart_internal_fn.classArc = function (d) {\n        return this.classShape(d.data) + this.generateClass(CLASS.arc, d.data.id);\n    };\n    c3_chart_internal_fn.classArcs = function (d) {\n        return this.classShapes(d.data) + this.generateClass(CLASS.arcs, d.data.id);\n    };\n    c3_chart_internal_fn.classArea = function (d) {\n        return this.classShape(d) + this.generateClass(CLASS.area, d.id);\n    };\n    c3_chart_internal_fn.classAreas = function (d) {\n        return this.classShapes(d) + this.generateClass(CLASS.areas, d.id);\n    };\n    c3_chart_internal_fn.classRegion = function (d, i) {\n        return this.generateClass(CLASS.region, i) + ' ' + ('class' in d ? d['class'] : '');\n    };\n    c3_chart_internal_fn.classEvent = function (d) {\n        return this.generateClass(CLASS.eventRect, d.index);\n    };\n    c3_chart_internal_fn.classTarget = function (id) {\n        var $$ = this;\n        var additionalClassSuffix = $$.config.data_classes[id], additionalClass = '';\n        if (additionalClassSuffix) {\n            additionalClass = ' ' + CLASS.target + '-' + additionalClassSuffix;\n        }\n        return $$.generateClass(CLASS.target, id) + additionalClass;\n    };\n    c3_chart_internal_fn.classFocus = function (d) {\n        return this.classFocused(d) + this.classDefocused(d);\n    };\n    c3_chart_internal_fn.classFocused = function (d) {\n        return ' ' + (this.focusedTargetIds.indexOf(d.id) >= 0 ? CLASS.focused : '');\n    };\n    c3_chart_internal_fn.classDefocused = function (d) {\n        return ' ' + (this.defocusedTargetIds.indexOf(d.id) >= 0 ? CLASS.defocused : '');\n    };\n    c3_chart_internal_fn.classChartText = function (d) {\n        return CLASS.chartText + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartLine = function (d) {\n        return CLASS.chartLine + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartBar = function (d) {\n        return CLASS.chartBar + this.classTarget(d.id);\n    };\n    c3_chart_internal_fn.classChartArc = function (d) {\n        return CLASS.chartArc + this.classTarget(d.data.id);\n    };\n    c3_chart_internal_fn.getTargetSelectorSuffix = function (targetId) {\n        return targetId || targetId === 0 ? ('-' + targetId).replace(/[\\s?!@#$%^&*()_=+,.<>'\":;\\[\\]\\/|~`{}\\\\]/g, '-') : '';\n    };\n    c3_chart_internal_fn.selectorTarget = function (id, prefix) {\n        return (prefix || '') + '.' + CLASS.target + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorTargets = function (ids, prefix) {\n        var $$ = this;\n        ids = ids || [];\n        return ids.length ? ids.map(function (id) { return $$.selectorTarget(id, prefix); }) : null;\n    };\n    c3_chart_internal_fn.selectorLegend = function (id) {\n        return '.' + CLASS.legendItem + this.getTargetSelectorSuffix(id);\n    };\n    c3_chart_internal_fn.selectorLegends = function (ids) {\n        var $$ = this;\n        return ids && ids.length ? ids.map(function (id) { return $$.selectorLegend(id); }) : null;\n    };\n\n    var isValue = c3_chart_internal_fn.isValue = function (v) {\n        return v || v === 0;\n    },\n        isFunction = c3_chart_internal_fn.isFunction = function (o) {\n            return typeof o === 'function';\n        },\n        isString = c3_chart_internal_fn.isString = function (o) {\n            return typeof o === 'string';\n        },\n        isUndefined = c3_chart_internal_fn.isUndefined = function (v) {\n            return typeof v === 'undefined';\n        },\n        isDefined = c3_chart_internal_fn.isDefined = function (v) {\n            return typeof v !== 'undefined';\n        },\n        ceil10 = c3_chart_internal_fn.ceil10 = function (v) {\n            return Math.ceil(v / 10) * 10;\n        },\n        asHalfPixel = c3_chart_internal_fn.asHalfPixel = function (n) {\n            return Math.ceil(n) + 0.5;\n        },\n        diffDomain = c3_chart_internal_fn.diffDomain = function (d) {\n            return d[1] - d[0];\n        },\n        isEmpty = c3_chart_internal_fn.isEmpty = function (o) {\n            return typeof o === 'undefined' || o === null || (isString(o) && o.length === 0) || (typeof o === 'object' && Object.keys(o).length === 0);\n        },\n        notEmpty = c3_chart_internal_fn.notEmpty = function (o) {\n            return !c3_chart_internal_fn.isEmpty(o);\n        },\n        getOption = c3_chart_internal_fn.getOption = function (options, key, defaultValue) {\n            return isDefined(options[key]) ? options[key] : defaultValue;\n        },\n        hasValue = c3_chart_internal_fn.hasValue = function (dict, value) {\n            var found = false;\n            Object.keys(dict).forEach(function (key) {\n                if (dict[key] === value) { found = true; }\n            });\n            return found;\n        },\n        sanitise = c3_chart_internal_fn.sanitise = function (str) {\n            return typeof str === 'string' ? str.replace(/</g, '&lt;').replace(/>/g, '&gt;') : str;\n        },\n        getPathBox = c3_chart_internal_fn.getPathBox = function (path) {\n            var box = path.getBoundingClientRect(),\n                items = [path.pathSegList.getItem(0), path.pathSegList.getItem(1)],\n                minX = items[0].x, minY = Math.min(items[0].y, items[1].y);\n            return {x: minX, y: minY, width: box.width, height: box.height};\n        };\n\n    c3_chart_fn.focus = function (targetIds) {\n        var $$ = this.internal, candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))),\n\n        this.revert();\n        this.defocus();\n        candidates.classed(CLASS.focused, true).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.expandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, true);\n\n        $$.focusedTargetIds = targetIds;\n        $$.defocusedTargetIds = $$.defocusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n    };\n\n    c3_chart_fn.defocus = function (targetIds) {\n        var $$ = this.internal, candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds.filter($$.isTargetToShow, $$))),\n\n        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, true);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        $$.toggleFocusLegend(targetIds, false);\n\n        $$.focusedTargetIds = $$.focusedTargetIds.filter(function (id) {\n            return targetIds.indexOf(id) < 0;\n        });\n        $$.defocusedTargetIds = targetIds;\n    };\n\n    c3_chart_fn.revert = function (targetIds) {\n        var $$ = this.internal, candidates;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        candidates = $$.svg.selectAll($$.selectorTargets(targetIds)); // should be for all targets\n\n        candidates.classed(CLASS.focused, false).classed(CLASS.defocused, false);\n        if ($$.hasArcType()) {\n            $$.unexpandArc(targetIds);\n        }\n        if ($$.config.legend_show) {\n            $$.showLegend(targetIds.filter($$.isLegendToShow.bind($$)));\n            $$.legend.selectAll($$.selectorLegends(targetIds))\n                .filter(function () {\n                    return $$.d3.select(this).classed(CLASS.legendItemFocused);\n                })\n                .classed(CLASS.legendItemFocused, false);\n        }\n\n        $$.focusedTargetIds = [];\n        $$.defocusedTargetIds = [];\n    };\n\n    c3_chart_fn.show = function (targetIds, options) {\n        var $$ = this.internal, targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.removeHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition()\n            .style('opacity', 1, 'important')\n            .call($$.endall, function () {\n                targets.style('opacity', null).style('opacity', 1);\n            });\n\n        if (options.withLegend) {\n            $$.showLegend(targetIds);\n        }\n\n        $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n    };\n\n    c3_chart_fn.hide = function (targetIds, options) {\n        var $$ = this.internal, targets;\n\n        targetIds = $$.mapToTargetIds(targetIds);\n        options = options || {};\n\n        $$.addHiddenTargetIds(targetIds);\n        targets = $$.svg.selectAll($$.selectorTargets(targetIds));\n\n        targets.transition()\n            .style('opacity', 0, 'important')\n            .call($$.endall, function () {\n                targets.style('opacity', null).style('opacity', 0);\n            });\n\n        if (options.withLegend) {\n            $$.hideLegend(targetIds);\n        }\n\n        $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n    };\n\n    c3_chart_fn.toggle = function (targetIds, options) {\n        var that = this, $$ = this.internal;\n        $$.mapToTargetIds(targetIds).forEach(function (targetId) {\n            $$.isTargetToShow(targetId) ? that.hide(targetId, options) : that.show(targetId, options);\n        });\n    };\n\n    c3_chart_fn.zoom = function (domain) {\n        var $$ = this.internal;\n        if (domain) {\n            if ($$.isTimeSeries()) {\n                domain = domain.map(function (x) { return $$.parseDate(x); });\n            }\n            $$.brush.extent(domain);\n            $$.redraw({withUpdateXDomain: true, withY: $$.config.zoom_rescale});\n            $$.config.zoom_onzoom.call(this, $$.x.orgDomain());\n        }\n        return $$.brush.extent();\n    };\n    c3_chart_fn.zoom.enable = function (enabled) {\n        var $$ = this.internal;\n        $$.config.zoom_enabled = enabled;\n        $$.updateAndRedraw();\n    };\n    c3_chart_fn.unzoom = function () {\n        var $$ = this.internal;\n        $$.brush.clear().update();\n        $$.redraw({withUpdateXDomain: true});\n    };\n\n    c3_chart_fn.zoom.max = function (max) {\n        var $$ = this.internal, config = $$.config, d3 = $$.d3;\n        if (max === 0 || max) {\n            config.zoom_x_max = d3.max([$$.orgXDomain[1], max]);\n        }\n        else {\n            return config.zoom_x_max;\n        }\n    };\n\n    c3_chart_fn.zoom.min = function (min) {\n        var $$ = this.internal, config = $$.config, d3 = $$.d3;\n        if (min === 0 || min) {\n            config.zoom_x_min = d3.min([$$.orgXDomain[0], min]);\n        }\n        else {\n            return config.zoom_x_min;\n        }\n    };\n\n    c3_chart_fn.zoom.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) { this.domain.max(range.max); }\n            if (isDefined(range.min)) { this.domain.min(range.min); }\n        } else {\n            return {\n                max: this.domain.max(),\n                min: this.domain.min()\n            };\n        }\n    };\n\n    c3_chart_fn.load = function (args) {\n        var $$ = this.internal, config = $$.config;\n        // update xs if specified\n        if (args.xs) {\n            $$.addXs(args.xs);\n        }\n        // update names if exists\n        if ('names' in args) {\n            c3_chart_fn.data.names.bind(this)(args.names);\n        }\n        // update classes if exists\n        if ('classes' in args) {\n            Object.keys(args.classes).forEach(function (id) {\n                config.data_classes[id] = args.classes[id];\n            });\n        }\n        // update categories if exists\n        if ('categories' in args && $$.isCategorized()) {\n            config.axis_x_categories = args.categories;\n        }\n        // update axes if exists\n        if ('axes' in args) {\n            Object.keys(args.axes).forEach(function (id) {\n                config.data_axes[id] = args.axes[id];\n            });\n        }\n        // update colors if exists\n        if ('colors' in args) {\n            Object.keys(args.colors).forEach(function (id) {\n                config.data_colors[id] = args.colors[id];\n            });\n        }\n        // use cache if exists\n        if ('cacheIds' in args && $$.hasCaches(args.cacheIds)) {\n            $$.load($$.getCaches(args.cacheIds), args.done);\n            return;\n        }\n        // unload if needed\n        if ('unload' in args) {\n            // TODO: do not unload if target will load (included in url/rows/columns)\n            $$.unload($$.mapToTargetIds((typeof args.unload === 'boolean' && args.unload) ? null : args.unload), function () {\n                $$.loadFromArgs(args);\n            });\n        } else {\n            $$.loadFromArgs(args);\n        }\n    };\n\n    c3_chart_fn.unload = function (args) {\n        var $$ = this.internal;\n        args = args || {};\n        if (args instanceof Array) {\n            args = {ids: args};\n        } else if (typeof args === 'string') {\n            args = {ids: [args]};\n        }\n        $$.unload($$.mapToTargetIds(args.ids), function () {\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true, withLegend: true});\n            if (args.done) { args.done(); }\n        });\n    };\n\n    c3_chart_fn.flow = function (args) {\n        var $$ = this.internal,\n            targets, data, notfoundIds = [], orgDataCount = $$.getMaxDataCount(),\n            dataCount, domain, baseTarget, baseValue, length = 0, tail = 0, diff, to;\n\n        if (args.json) {\n            data = $$.convertJsonToData(args.json, args.keys);\n        }\n        else if (args.rows) {\n            data = $$.convertRowsToData(args.rows);\n        }\n        else if (args.columns) {\n            data = $$.convertColumnsToData(args.columns);\n        }\n        else {\n            return;\n        }\n        targets = $$.convertDataToTargets(data, true);\n\n        // Update/Add data\n        $$.data.targets.forEach(function (t) {\n            var found = false, i, j;\n            for (i = 0; i < targets.length; i++) {\n                if (t.id === targets[i].id) {\n                    found = true;\n\n                    if (t.values[t.values.length - 1]) {\n                        tail = t.values[t.values.length - 1].index + 1;\n                    }\n                    length = targets[i].values.length;\n\n                    for (j = 0; j < length; j++) {\n                        targets[i].values[j].index = tail + j;\n                        if (!$$.isTimeSeries()) {\n                            targets[i].values[j].x = tail + j;\n                        }\n                    }\n                    t.values = t.values.concat(targets[i].values);\n\n                    targets.splice(i, 1);\n                    break;\n                }\n            }\n            if (!found) { notfoundIds.push(t.id); }\n        });\n\n        // Append null for not found targets\n        $$.data.targets.forEach(function (t) {\n            var i, j;\n            for (i = 0; i < notfoundIds.length; i++) {\n                if (t.id === notfoundIds[i]) {\n                    tail = t.values[t.values.length - 1].index + 1;\n                    for (j = 0; j < length; j++) {\n                        t.values.push({\n                            id: t.id,\n                            index: tail + j,\n                            x: $$.isTimeSeries() ? $$.getOtherTargetX(tail + j) : tail + j,\n                            value: null\n                        });\n                    }\n                }\n            }\n        });\n\n        // Generate null values for new target\n        if ($$.data.targets.length) {\n            targets.forEach(function (t) {\n                var i, missing = [];\n                for (i = $$.data.targets[0].values[0].index; i < tail; i++) {\n                    missing.push({\n                        id: t.id,\n                        index: i,\n                        x: $$.isTimeSeries() ? $$.getOtherTargetX(i) : i,\n                        value: null\n                    });\n                }\n                t.values.forEach(function (v) {\n                    v.index += tail;\n                    if (!$$.isTimeSeries()) {\n                        v.x += tail;\n                    }\n                });\n                t.values = missing.concat(t.values);\n            });\n        }\n        $$.data.targets = $$.data.targets.concat(targets); // add remained\n\n        // check data count because behavior needs to change when it's only one\n        dataCount = $$.getMaxDataCount();\n        baseTarget = $$.data.targets[0];\n        baseValue = baseTarget.values[0];\n\n        // Update length to flow if needed\n        if (isDefined(args.to)) {\n            length = 0;\n            to = $$.isTimeSeries() ? $$.parseDate(args.to) : args.to;\n            baseTarget.values.forEach(function (v) {\n                if (v.x < to) { length++; }\n            });\n        } else if (isDefined(args.length)) {\n            length = args.length;\n        }\n\n        // If only one data, update the domain to flow from left edge of the chart\n        if (!orgDataCount) {\n            if ($$.isTimeSeries()) {\n                if (baseTarget.values.length > 1) {\n                    diff = baseTarget.values[baseTarget.values.length - 1].x - baseValue.x;\n                } else {\n                    diff = baseValue.x - $$.getXDomain($$.data.targets)[0];\n                }\n            } else {\n                diff = 1;\n            }\n            domain = [baseValue.x - diff, baseValue.x];\n            $$.updateXDomain(null, true, true, false, domain);\n        } else if (orgDataCount === 1) {\n            if ($$.isTimeSeries()) {\n                diff = (baseTarget.values[baseTarget.values.length - 1].x - baseValue.x) / 2;\n                domain = [new Date(+baseValue.x - diff), new Date(+baseValue.x + diff)];\n                $$.updateXDomain(null, true, true, false, domain);\n            }\n        }\n\n        // Set targets\n        $$.updateTargets($$.data.targets);\n\n        // Redraw with new targets\n        $$.redraw({\n            flow: {\n                index: baseValue.index,\n                length: length,\n                duration: isValue(args.duration) ? args.duration : $$.config.transition_duration,\n                done: args.done,\n                orgDataCount: orgDataCount,\n            },\n            withLegend: true,\n            withTransition: orgDataCount > 1,\n            withTrimXDomain: false,\n            withUpdateXAxis: true,\n        });\n    };\n\n    c3_chart_internal_fn.generateFlow = function (args) {\n        var $$ = this, config = $$.config, d3 = $$.d3;\n\n        return function () {\n            var targets = args.targets,\n                flow = args.flow,\n                drawBar = args.drawBar,\n                drawLine = args.drawLine,\n                drawArea = args.drawArea,\n                cx = args.cx,\n                cy = args.cy,\n                xv = args.xv,\n                xForText = args.xForText,\n                yForText = args.yForText,\n                duration = args.duration;\n\n            var translateX, scaleX = 1, transform,\n                flowIndex = flow.index,\n                flowLength = flow.length,\n                flowStart = $$.getValueOnIndex($$.data.targets[0].values, flowIndex),\n                flowEnd = $$.getValueOnIndex($$.data.targets[0].values, flowIndex + flowLength),\n                orgDomain = $$.x.domain(), domain,\n                durationForFlow = flow.duration || duration,\n                done = flow.done || function () {},\n                wait = $$.generateWait();\n\n            var xgrid = $$.xgrid || d3.selectAll([]),\n                xgridLines = $$.xgridLines || d3.selectAll([]),\n                mainRegion = $$.mainRegion || d3.selectAll([]),\n                mainText = $$.mainText || d3.selectAll([]),\n                mainBar = $$.mainBar || d3.selectAll([]),\n                mainLine = $$.mainLine || d3.selectAll([]),\n                mainArea = $$.mainArea || d3.selectAll([]),\n                mainCircle = $$.mainCircle || d3.selectAll([]);\n\n            // set flag\n            $$.flowing = true;\n\n            // remove head data after rendered\n            $$.data.targets.forEach(function (d) {\n                d.values.splice(0, flowLength);\n            });\n\n            // update x domain to generate axis elements for flow\n            domain = $$.updateXDomain(targets, true, true);\n            // update elements related to x scale\n            if ($$.updateXGrid) { $$.updateXGrid(true); }\n\n            // generate transform to flow\n            if (!flow.orgDataCount) { // if empty\n                if ($$.data.targets[0].values.length !== 1) {\n                    translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n                } else {\n                    if ($$.isTimeSeries()) {\n                        flowStart = $$.getValueOnIndex($$.data.targets[0].values, 0);\n                        flowEnd = $$.getValueOnIndex($$.data.targets[0].values, $$.data.targets[0].values.length - 1);\n                        translateX = $$.x(flowStart.x) - $$.x(flowEnd.x);\n                    } else {\n                        translateX = diffDomain(domain) / 2;\n                    }\n                }\n            } else if (flow.orgDataCount === 1 || (flowStart && flowStart.x) === (flowEnd && flowEnd.x)) {\n                translateX = $$.x(orgDomain[0]) - $$.x(domain[0]);\n            } else {\n                if ($$.isTimeSeries()) {\n                    translateX = ($$.x(orgDomain[0]) - $$.x(domain[0]));\n                } else {\n                    translateX = ($$.x(flowStart.x) - $$.x(flowEnd.x));\n                }\n            }\n            scaleX = (diffDomain(orgDomain) / diffDomain(domain));\n            transform = 'translate(' + translateX + ',0) scale(' + scaleX + ',1)';\n\n            $$.hideXGridFocus();\n\n            d3.transition().ease('linear').duration(durationForFlow).each(function () {\n                wait.add($$.axes.x.transition().call($$.xAxis));\n                wait.add(mainBar.transition().attr('transform', transform));\n                wait.add(mainLine.transition().attr('transform', transform));\n                wait.add(mainArea.transition().attr('transform', transform));\n                wait.add(mainCircle.transition().attr('transform', transform));\n                wait.add(mainText.transition().attr('transform', transform));\n                wait.add(mainRegion.filter($$.isRegionOnX).transition().attr('transform', transform));\n                wait.add(xgrid.transition().attr('transform', transform));\n                wait.add(xgridLines.transition().attr('transform', transform));\n            })\n            .call(wait, function () {\n                var i, shapes = [], texts = [], eventRects = [];\n\n                // remove flowed elements\n                if (flowLength) {\n                    for (i = 0; i < flowLength; i++) {\n                        shapes.push('.' + CLASS.shape + '-' + (flowIndex + i));\n                        texts.push('.' + CLASS.text + '-' + (flowIndex + i));\n                        eventRects.push('.' + CLASS.eventRect + '-' + (flowIndex + i));\n                    }\n                    $$.svg.selectAll('.' + CLASS.shapes).selectAll(shapes).remove();\n                    $$.svg.selectAll('.' + CLASS.texts).selectAll(texts).remove();\n                    $$.svg.selectAll('.' + CLASS.eventRects).selectAll(eventRects).remove();\n                    $$.svg.select('.' + CLASS.xgrid).remove();\n                }\n\n                // draw again for removing flowed elements and reverting attr\n                xgrid\n                    .attr('transform', null)\n                    .attr($$.xgridAttr);\n                xgridLines\n                    .attr('transform', null);\n                xgridLines.select('line')\n                    .attr(\"x1\", config.axis_rotated ? 0 : xv)\n                    .attr(\"x2\", config.axis_rotated ? $$.width : xv);\n                xgridLines.select('text')\n                    .attr(\"x\", config.axis_rotated ? $$.width : 0)\n                    .attr(\"y\", xv);\n                mainBar\n                    .attr('transform', null)\n                    .attr(\"d\", drawBar);\n                mainLine\n                    .attr('transform', null)\n                    .attr(\"d\", drawLine);\n                mainArea\n                    .attr('transform', null)\n                    .attr(\"d\", drawArea);\n                mainCircle\n                    .attr('transform', null)\n                    .attr(\"cx\", cx)\n                    .attr(\"cy\", cy);\n                mainText\n                    .attr('transform', null)\n                    .attr('x', xForText)\n                    .attr('y', yForText)\n                    .style('fill-opacity', $$.opacityForText.bind($$));\n                mainRegion\n                    .attr('transform', null);\n                mainRegion.select('rect').filter($$.isRegionOnX)\n                    .attr(\"x\", $$.regionX.bind($$))\n                    .attr(\"width\", $$.regionWidth.bind($$));\n\n                if (config.interaction_enabled) {\n                    $$.redrawEventRect();\n                }\n\n                // callback for end of flow\n                done();\n\n                $$.flowing = false;\n            });\n        };\n    };\n\n    c3_chart_fn.selected = function (targetId) {\n        var $$ = this.internal, d3 = $$.d3;\n        return d3.merge(\n            $$.main.selectAll('.' + CLASS.shapes + $$.getTargetSelectorSuffix(targetId)).selectAll('.' + CLASS.shape)\n                .filter(function () { return d3.select(this).classed(CLASS.SELECTED); })\n                .map(function (d) { return d.map(function (d) { var data = d.__data__; return data.data ? data.data : data; }); })\n        );\n    };\n    c3_chart_fn.select = function (ids, indices, resetOther) {\n        var $$ = this.internal, d3 = $$.d3, config = $$.config;\n        if (! config.data_selection_enabled) { return; }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this), id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d) && !isSelected) {\n                    toggle(true, shape.classed(CLASS.SELECTED, true), d, i);\n                }\n            } else if (isDefined(resetOther) && resetOther) {\n                if (isSelected) {\n                    toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                }\n            }\n        });\n    };\n    c3_chart_fn.unselect = function (ids, indices) {\n        var $$ = this.internal, d3 = $$.d3, config = $$.config;\n        if (! config.data_selection_enabled) { return; }\n        $$.main.selectAll('.' + CLASS.shapes).selectAll('.' + CLASS.shape).each(function (d, i) {\n            var shape = d3.select(this), id = d.data ? d.data.id : d.id,\n                toggle = $$.getToggle(this, d).bind($$),\n                isTargetId = config.data_selection_grouped || !ids || ids.indexOf(id) >= 0,\n                isTargetIndex = !indices || indices.indexOf(i) >= 0,\n                isSelected = shape.classed(CLASS.SELECTED);\n            // line/area selection not supported yet\n            if (shape.classed(CLASS.line) || shape.classed(CLASS.area)) {\n                return;\n            }\n            if (isTargetId && isTargetIndex) {\n                if (config.data_selection_isselectable(d)) {\n                    if (isSelected) {\n                        toggle(false, shape.classed(CLASS.SELECTED, false), d, i);\n                    }\n                }\n            }\n        });\n    };\n\n    c3_chart_fn.transform = function (type, targetIds) {\n        var $$ = this.internal,\n            options = ['pie', 'donut'].indexOf(type) >= 0 ? {withTransform: true} : null;\n        $$.transformTo(targetIds, type, options);\n    };\n\n    c3_chart_internal_fn.transformTo = function (targetIds, type, optionsForRedraw) {\n        var $$ = this,\n            withTransitionForAxis = !$$.hasArcType(),\n            options = optionsForRedraw || {withTransitionForAxis: withTransitionForAxis};\n        options.withTransitionForTransform = false;\n        $$.transiting = false;\n        $$.setTargetType(targetIds, type);\n        $$.updateTargets($$.data.targets); // this is needed when transforming to arc\n        $$.updateAndRedraw(options);\n    };\n\n    c3_chart_fn.groups = function (groups) {\n        var $$ = this.internal, config = $$.config;\n        if (isUndefined(groups)) { return config.data_groups; }\n        config.data_groups = groups;\n        $$.redraw();\n        return config.data_groups;\n    };\n\n    c3_chart_fn.xgrids = function (grids) {\n        var $$ = this.internal, config = $$.config;\n        if (! grids) { return config.grid_x_lines; }\n        config.grid_x_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_x_lines;\n    };\n    c3_chart_fn.xgrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.xgrids($$.config.grid_x_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.xgrids.remove = function (params) { // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, true);\n    };\n\n    c3_chart_fn.ygrids = function (grids) {\n        var $$ = this.internal, config = $$.config;\n        if (! grids) { return config.grid_y_lines; }\n        config.grid_y_lines = grids;\n        $$.redrawWithoutRescale();\n        return config.grid_y_lines;\n    };\n    c3_chart_fn.ygrids.add = function (grids) {\n        var $$ = this.internal;\n        return this.ygrids($$.config.grid_y_lines.concat(grids ? grids : []));\n    };\n    c3_chart_fn.ygrids.remove = function (params) { // TODO: multiple\n        var $$ = this.internal;\n        $$.removeGridLines(params, false);\n    };\n\n    c3_chart_fn.regions = function (regions) {\n        var $$ = this.internal, config = $$.config;\n        if (!regions) { return config.regions; }\n        config.regions = regions;\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.add = function (regions) {\n        var $$ = this.internal, config = $$.config;\n        if (!regions) { return config.regions; }\n        config.regions = config.regions.concat(regions);\n        $$.redrawWithoutRescale();\n        return config.regions;\n    };\n    c3_chart_fn.regions.remove = function (options) {\n        var $$ = this.internal, config = $$.config,\n            duration, classes, regions;\n\n        options = options || {};\n        duration = $$.getOption(options, \"duration\", config.transition_duration);\n        classes = $$.getOption(options, \"classes\", [CLASS.region]);\n\n        regions = $$.main.select('.' + CLASS.regions).selectAll(classes.map(function (c) { return '.' + c; }));\n        (duration ? regions.transition().duration(duration) : regions)\n            .style('opacity', 0)\n            .remove();\n\n        config.regions = config.regions.filter(function (region) {\n            var found = false;\n            if (!region['class']) {\n                return true;\n            }\n            region['class'].split(' ').forEach(function (c) {\n                if (classes.indexOf(c) >= 0) { found = true; }\n            });\n            return !found;\n        });\n\n        return config.regions;\n    };\n\n    c3_chart_fn.data = function (targetIds) {\n        var targets = this.internal.data.targets;\n        return typeof targetIds === 'undefined' ? targets : targets.filter(function (t) {\n            return [].concat(targetIds).indexOf(t.id) >= 0;\n        });\n    };\n    c3_chart_fn.data.shown = function (targetIds) {\n        return this.internal.filterTargetsToShow(this.data(targetIds));\n    };\n    c3_chart_fn.data.values = function (targetId) {\n        var targets, values = null;\n        if (targetId) {\n            targets = this.data(targetId);\n            values = targets[0] ? targets[0].values.map(function (d) { return d.value; }) : null;\n        }\n        return values;\n    };\n    c3_chart_fn.data.names = function (names) {\n        this.internal.clearLegendItemTextBoxCache();\n        return this.internal.updateDataAttributes('names', names);\n    };\n    c3_chart_fn.data.colors = function (colors) {\n        return this.internal.updateDataAttributes('colors', colors);\n    };\n    c3_chart_fn.data.axes = function (axes) {\n        return this.internal.updateDataAttributes('axes', axes);\n    };\n\n    c3_chart_fn.category = function (i, category) {\n        var $$ = this.internal, config = $$.config;\n        if (arguments.length > 1) {\n            config.axis_x_categories[i] = category;\n            $$.redraw();\n        }\n        return config.axis_x_categories[i];\n    };\n    c3_chart_fn.categories = function (categories) {\n        var $$ = this.internal, config = $$.config;\n        if (!arguments.length) { return config.axis_x_categories; }\n        config.axis_x_categories = categories;\n        $$.redraw();\n        return config.axis_x_categories;\n    };\n\n    // TODO: fix\n    c3_chart_fn.color = function (id) {\n        var $$ = this.internal;\n        return $$.color(id); // more patterns\n    };\n\n    c3_chart_fn.x = function (x) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetX($$.data.targets, x);\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n        }\n        return $$.data.xs;\n    };\n    c3_chart_fn.xs = function (xs) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            $$.updateTargetXs($$.data.targets, xs);\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n        }\n        return $$.data.xs;\n    };\n\n    c3_chart_fn.axis = function () {};\n    c3_chart_fn.axis.labels = function (labels) {\n        var $$ = this.internal;\n        if (arguments.length) {\n            Object.keys(labels).forEach(function (axisId) {\n                $$.axis.setLabelText(axisId, labels[axisId]);\n            });\n            $$.axis.updateLabels();\n        }\n        // TODO: return some values?\n    };\n    c3_chart_fn.axis.max = function (max) {\n        var $$ = this.internal, config = $$.config;\n        if (arguments.length) {\n            if (typeof max === 'object') {\n                if (isValue(max.x)) { config.axis_x_max = max.x; }\n                if (isValue(max.y)) { config.axis_y_max = max.y; }\n                if (isValue(max.y2)) { config.axis_y2_max = max.y2; }\n            } else {\n                config.axis_y_max = config.axis_y2_max = max;\n            }\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n        } else {\n            return {\n                x: config.axis_x_max,\n                y: config.axis_y_max,\n                y2: config.axis_y2_max\n            };\n        }\n    };\n    c3_chart_fn.axis.min = function (min) {\n        var $$ = this.internal, config = $$.config;\n        if (arguments.length) {\n            if (typeof min === 'object') {\n                if (isValue(min.x)) { config.axis_x_min = min.x; }\n                if (isValue(min.y)) { config.axis_y_min = min.y; }\n                if (isValue(min.y2)) { config.axis_y2_min = min.y2; }\n            } else {\n                config.axis_y_min = config.axis_y2_min = min;\n            }\n            $$.redraw({withUpdateOrgXDomain: true, withUpdateXDomain: true});\n        } else {\n            return {\n                x: config.axis_x_min,\n                y: config.axis_y_min,\n                y2: config.axis_y2_min\n            };\n        }\n    };\n    c3_chart_fn.axis.range = function (range) {\n        if (arguments.length) {\n            if (isDefined(range.max)) { this.axis.max(range.max); }\n            if (isDefined(range.min)) { this.axis.min(range.min); }\n        } else {\n            return {\n                max: this.axis.max(),\n                min: this.axis.min()\n            };\n        }\n    };\n\n    c3_chart_fn.legend = function () {};\n    c3_chart_fn.legend.show = function (targetIds) {\n        var $$ = this.internal;\n        $$.showLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({withLegend: true});\n    };\n    c3_chart_fn.legend.hide = function (targetIds) {\n        var $$ = this.internal;\n        $$.hideLegend($$.mapToTargetIds(targetIds));\n        $$.updateAndRedraw({withLegend: true});\n    };\n\n    c3_chart_fn.resize = function (size) {\n        var $$ = this.internal, config = $$.config;\n        config.size_width = size ? size.width : null;\n        config.size_height = size ? size.height : null;\n        this.flush();\n    };\n\n    c3_chart_fn.flush = function () {\n        var $$ = this.internal;\n        $$.updateAndRedraw({withLegend: true, withTransition: false, withTransitionForTransform: false});\n    };\n\n    c3_chart_fn.destroy = function () {\n        var $$ = this.internal;\n\n        window.clearInterval($$.intervalForObserveInserted);\n\n        if ($$.resizeTimeout !== undefined) {\n            window.clearTimeout($$.resizeTimeout);\n        }\n\n        if (window.detachEvent) {\n            window.detachEvent('onresize', $$.resizeFunction);\n        } else if (window.removeEventListener) {\n            window.removeEventListener('resize', $$.resizeFunction);\n        } else {\n            var wrapper = window.onresize;\n            // check if no one else removed our wrapper and remove our resizeFunction from it\n            if (wrapper && wrapper.add && wrapper.remove) {\n                wrapper.remove($$.resizeFunction);\n            }\n        }\n\n        $$.selectChart.classed('c3', false).html(\"\");\n\n        // MEMO: this is needed because the reference of some elements will not be released, then memory leak will happen.\n        Object.keys($$).forEach(function (key) {\n            $$[key] = null;\n        });\n\n        return null;\n    };\n\n    c3_chart_fn.tooltip = function () {};\n    c3_chart_fn.tooltip.show = function (args) {\n        var $$ = this.internal, index, mouse;\n\n        // determine mouse position on the chart\n        if (args.mouse) {\n            mouse = args.mouse;\n        }\n\n        // determine focus data\n        if (args.data) {\n            if ($$.isMultipleX()) {\n                // if multiple xs, target point will be determined by mouse\n                mouse = [$$.x(args.data.x), $$.getYScale(args.data.id)(args.data.value)];\n                index = null;\n            } else {\n                // TODO: when tooltip_grouped = false\n                index = isValue(args.data.index) ? args.data.index : $$.getIndexByX(args.data.x);\n            }\n        }\n        else if (typeof args.x !== 'undefined') {\n            index = $$.getIndexByX(args.x);\n        }\n        else if (typeof args.index !== 'undefined') {\n            index = args.index;\n        }\n\n        // emulate mouse events to show\n        $$.dispatchEvent('mouseover', index, mouse);\n        $$.dispatchEvent('mousemove', index, mouse);\n\n        $$.config.tooltip_onshow.call($$, args.data);\n    };\n    c3_chart_fn.tooltip.hide = function () {\n        // TODO: get target data by checking the state of focus\n        this.internal.dispatchEvent('mouseout', 0);\n\n        this.internal.config.tooltip_onhide.call(this);\n    };\n\n    // Features:\n    // 1. category axis\n    // 2. ceil values of translate/x/y to int for half pixel antialiasing\n    // 3. multiline tick text\n    var tickTextCharSize;\n    function c3_axis(d3, params) {\n        var scale = d3.scale.linear(), orient = \"bottom\", innerTickSize = 6, outerTickSize, tickPadding = 3, tickValues = null, tickFormat, tickArguments;\n\n        var tickOffset = 0, tickCulling = true, tickCentered;\n\n        params = params || {};\n        outerTickSize = params.withOuterTick ? 6 : 0;\n\n        function axisX(selection, x) {\n            selection.attr(\"transform\", function (d) {\n                return \"translate(\" + Math.ceil(x(d) + tickOffset) + \", 0)\";\n            });\n        }\n        function axisY(selection, y) {\n            selection.attr(\"transform\", function (d) {\n                return \"translate(0,\" + Math.ceil(y(d)) + \")\";\n            });\n        }\n        function scaleExtent(domain) {\n            var start = domain[0], stop = domain[domain.length - 1];\n            return start < stop ? [ start, stop ] : [ stop, start ];\n        }\n        function generateTicks(scale) {\n            var i, domain, ticks = [];\n            if (scale.ticks) {\n                return scale.ticks.apply(scale, tickArguments);\n            }\n            domain = scale.domain();\n            for (i = Math.ceil(domain[0]); i < domain[1]; i++) {\n                ticks.push(i);\n            }\n            if (ticks.length > 0 && ticks[0] > 0) {\n                ticks.unshift(ticks[0] - (ticks[1] - ticks[0]));\n            }\n            return ticks;\n        }\n        function copyScale() {\n            var newScale = scale.copy(), domain;\n            if (params.isCategory) {\n                domain = scale.domain();\n                newScale.domain([domain[0], domain[1] - 1]);\n            }\n            return newScale;\n        }\n        function textFormatted(v) {\n            var formatted = tickFormat ? tickFormat(v) : v;\n            return typeof formatted !== 'undefined' ? formatted : '';\n        }\n        function getSizeFor1Char(tick) {\n            if (tickTextCharSize) {\n                return tickTextCharSize;\n            }\n            var size = {\n                h: 11.5,\n                w: 5.5\n            };\n            tick.select('text').text(textFormatted).each(function (d) {\n                var box = this.getBoundingClientRect(),\n                    text = textFormatted(d),\n                    h = box.height,\n                    w = text ? (box.width / text.length) : undefined;\n                if (h && w) {\n                    size.h = h;\n                    size.w = w;\n                }\n            }).text('');\n            tickTextCharSize = size;\n            return size;\n        }\n        function transitionise(selection) {\n            return params.withoutTransition ? selection : d3.transition(selection);\n        }\n        function axis(g) {\n            g.each(function () {\n                var g = axis.g = d3.select(this);\n\n                var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = copyScale();\n\n                var ticks = tickValues ? tickValues : generateTicks(scale1),\n                    tick = g.selectAll(\".tick\").data(ticks, scale1),\n                    tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", 1e-6),\n                    // MEMO: No exit transition. The reason is this transition affects max tick width calculation because old tick will be included in the ticks.\n                    tickExit = tick.exit().remove(),\n                    tickUpdate = transitionise(tick).style(\"opacity\", 1),\n                    tickTransform, tickX, tickY;\n\n                var range = scale.rangeExtent ? scale.rangeExtent() : scaleExtent(scale.range()),\n                    path = g.selectAll(\".domain\").data([ 0 ]),\n                    pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), transitionise(path));\n                tickEnter.append(\"line\");\n                tickEnter.append(\"text\");\n\n                var lineEnter = tickEnter.select(\"line\"),\n                    lineUpdate = tickUpdate.select(\"line\"),\n                    textEnter = tickEnter.select(\"text\"),\n                    textUpdate = tickUpdate.select(\"text\");\n\n                if (params.isCategory) {\n                    tickOffset = Math.ceil((scale1(1) - scale1(0)) / 2);\n                    tickX = tickCentered ? 0 : tickOffset;\n                    tickY = tickCentered ? tickOffset : 0;\n                } else {\n                    tickOffset = tickX = 0;\n                }\n\n                var text, tspan, sizeFor1Char = getSizeFor1Char(g.select('.tick')), counts = [];\n                var tickLength = Math.max(innerTickSize, 0) + tickPadding,\n                    isVertical = orient === 'left' || orient === 'right';\n\n                // this should be called only when category axis\n                function splitTickText(d, maxWidth) {\n                    var tickText = textFormatted(d),\n                        subtext, spaceIndex, textWidth, splitted = [];\n\n                    if (Object.prototype.toString.call(tickText) === \"[object Array]\") {\n                        return tickText;\n                    }\n\n                    if (!maxWidth || maxWidth <= 0) {\n                        maxWidth = isVertical ? 95 : params.isCategory ? (Math.ceil(scale1(ticks[1]) - scale1(ticks[0])) - 12) : 110;\n                    }\n\n                    function split(splitted, text) {\n                        spaceIndex = undefined;\n                        for (var i = 1; i < text.length; i++) {\n                            if (text.charAt(i) === ' ') {\n                                spaceIndex = i;\n                            }\n                            subtext = text.substr(0, i + 1);\n                            textWidth = sizeFor1Char.w * subtext.length;\n                            // if text width gets over tick width, split by space index or crrent index\n                            if (maxWidth < textWidth) {\n                                return split(\n                                    splitted.concat(text.substr(0, spaceIndex ? spaceIndex : i)),\n                                    text.slice(spaceIndex ? spaceIndex + 1 : i)\n                                );\n                            }\n                        }\n                        return splitted.concat(text);\n                    }\n\n                    return split(splitted, tickText + \"\");\n                }\n\n                function tspanDy(d, i) {\n                    var dy = sizeFor1Char.h;\n                    if (i === 0) {\n                        if (orient === 'left' || orient === 'right') {\n                            dy = -((counts[d.index] - 1) * (sizeFor1Char.h / 2) - 3);\n                        } else {\n                            dy = \".71em\";\n                        }\n                    }\n                    return dy;\n                }\n\n                function tickSize(d) {\n                    var tickPosition = scale(d) + (tickCentered ? 0 : tickOffset);\n                    return range[0] < tickPosition && tickPosition < range[1] ? innerTickSize : 0;\n                }\n\n                text = tick.select(\"text\");\n                tspan = text.selectAll('tspan')\n                    .data(function (d, i) {\n                        var splitted = params.tickMultiline ? splitTickText(d, params.tickWidth) : [].concat(textFormatted(d));\n                        counts[i] = splitted.length;\n                        return splitted.map(function (s) {\n                            return { index: i, splitted: s };\n                        });\n                    });\n                tspan.enter().append('tspan');\n                tspan.exit().remove();\n                tspan.text(function (d) { return d.splitted; });\n\n                var rotate = params.tickTextRotate;\n\n                function textAnchorForText(rotate) {\n                    if (!rotate) {\n                        return 'middle';\n                    }\n                    return rotate > 0 ? \"start\" : \"end\";\n                }\n                function textTransform(rotate) {\n                    if (!rotate) {\n                        return '';\n                    }\n                    return \"rotate(\" + rotate + \")\";\n                }\n                function dxForText(rotate) {\n                    if (!rotate) {\n                        return 0;\n                    }\n                    return 8 * Math.sin(Math.PI * (rotate / 180));\n                }\n                function yForText(rotate) {\n                    if (!rotate) {\n                        return tickLength;\n                    }\n                    return 11.5 - 2.5 * (rotate / 15) * (rotate > 0 ? 1 : -1);\n                }\n\n                switch (orient) {\n                case \"bottom\":\n                    {\n                        tickTransform = axisX;\n                        lineEnter.attr(\"y2\", innerTickSize);\n                        textEnter.attr(\"y\", tickLength);\n                        lineUpdate.attr(\"x1\", tickX).attr(\"x2\", tickX).attr(\"y2\", tickSize);\n                        textUpdate.attr(\"x\", 0).attr(\"y\", yForText(rotate))\n                            .style(\"text-anchor\", textAnchorForText(rotate))\n                            .attr(\"transform\", textTransform(rotate));\n                        tspan.attr('x', 0).attr(\"dy\", tspanDy).attr('dx', dxForText(rotate));\n                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + outerTickSize + \"V0H\" + range[1] + \"V\" + outerTickSize);\n                        break;\n                    }\n                case \"top\":\n                    {\n                        // TODO: rotated tick text\n                        tickTransform = axisX;\n                        lineEnter.attr(\"y2\", -innerTickSize);\n                        textEnter.attr(\"y\", -tickLength);\n                        lineUpdate.attr(\"x2\", 0).attr(\"y2\", -innerTickSize);\n                        textUpdate.attr(\"x\", 0).attr(\"y\", -tickLength);\n                        text.style(\"text-anchor\", \"middle\");\n                        tspan.attr('x', 0).attr(\"dy\", \"0em\");\n                        pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + -outerTickSize + \"V0H\" + range[1] + \"V\" + -outerTickSize);\n                        break;\n                    }\n                case \"left\":\n                    {\n                        tickTransform = axisY;\n                        lineEnter.attr(\"x2\", -innerTickSize);\n                        textEnter.attr(\"x\", -tickLength);\n                        lineUpdate.attr(\"x2\", -innerTickSize).attr(\"y1\", tickY).attr(\"y2\", tickY);\n                        textUpdate.attr(\"x\", -tickLength).attr(\"y\", tickOffset);\n                        text.style(\"text-anchor\", \"end\");\n                        tspan.attr('x', -tickLength).attr(\"dy\", tspanDy);\n                        pathUpdate.attr(\"d\", \"M\" + -outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + -outerTickSize);\n                        break;\n                    }\n                case \"right\":\n                    {\n                        tickTransform = axisY;\n                        lineEnter.attr(\"x2\", innerTickSize);\n                        textEnter.attr(\"x\", tickLength);\n                        lineUpdate.attr(\"x2\", innerTickSize).attr(\"y2\", 0);\n                        textUpdate.attr(\"x\", tickLength).attr(\"y\", 0);\n                        text.style(\"text-anchor\", \"start\");\n                        tspan.attr('x', tickLength).attr(\"dy\", tspanDy);\n                        pathUpdate.attr(\"d\", \"M\" + outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + outerTickSize);\n                        break;\n                    }\n                }\n                if (scale1.rangeBand) {\n                    var x = scale1, dx = x.rangeBand() / 2;\n                    scale0 = scale1 = function (d) {\n                        return x(d) + dx;\n                    };\n                } else if (scale0.rangeBand) {\n                    scale0 = scale1;\n                } else {\n                    tickExit.call(tickTransform, scale1);\n                }\n                tickEnter.call(tickTransform, scale0);\n                tickUpdate.call(tickTransform, scale1);\n            });\n        }\n        axis.scale = function (x) {\n            if (!arguments.length) { return scale; }\n            scale = x;\n            return axis;\n        };\n        axis.orient = function (x) {\n            if (!arguments.length) { return orient; }\n            orient = x in {top: 1, right: 1, bottom: 1, left: 1} ? x + \"\" : \"bottom\";\n            return axis;\n        };\n        axis.tickFormat = function (format) {\n            if (!arguments.length) { return tickFormat; }\n            tickFormat = format;\n            return axis;\n        };\n        axis.tickCentered = function (isCentered) {\n            if (!arguments.length) { return tickCentered; }\n            tickCentered = isCentered;\n            return axis;\n        };\n        axis.tickOffset = function () {\n            return tickOffset;\n        };\n        axis.tickInterval = function () {\n            var interval, length;\n            if (params.isCategory) {\n                interval = tickOffset * 2;\n            }\n            else {\n                length = axis.g.select('path.domain').node().getTotalLength() - outerTickSize * 2;\n                interval = length / axis.g.selectAll('line').size();\n            }\n            return interval === Infinity ? 0 : interval;\n        };\n        axis.ticks = function () {\n            if (!arguments.length) { return tickArguments; }\n            tickArguments = arguments;\n            return axis;\n        };\n        axis.tickCulling = function (culling) {\n            if (!arguments.length) { return tickCulling; }\n            tickCulling = culling;\n            return axis;\n        };\n        axis.tickValues = function (x) {\n            if (typeof x === 'function') {\n                tickValues = function () {\n                    return x(scale.domain());\n                };\n            }\n            else {\n                if (!arguments.length) { return tickValues; }\n                tickValues = x;\n            }\n            return axis;\n        };\n        return axis;\n    }\n\n    c3_chart_internal_fn.isSafari = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Safari') >= 0 && ua.indexOf('Chrome') < 0;\n    };\n    c3_chart_internal_fn.isChrome = function () {\n        var ua = window.navigator.userAgent;\n        return ua.indexOf('Chrome') >= 0;\n    };\n\n    /* jshint ignore:start */\n\n    // PhantomJS doesn't have support for Function.prototype.bind, which has caused confusion. Use\n    // this polyfill to avoid the confusion.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/bind#Polyfill\n\n    if (!Function.prototype.bind) {\n      Function.prototype.bind = function(oThis) {\n        if (typeof this !== 'function') {\n          // closest thing possible to the ECMAScript 5\n          // internal IsCallable function\n          throw new TypeError('Function.prototype.bind - what is trying to be bound is not callable');\n        }\n\n        var aArgs   = Array.prototype.slice.call(arguments, 1),\n            fToBind = this,\n            fNOP    = function() {},\n            fBound  = function() {\n              return fToBind.apply(this instanceof fNOP ? this : oThis, aArgs.concat(Array.prototype.slice.call(arguments)));\n            };\n\n        fNOP.prototype = this.prototype;\n        fBound.prototype = new fNOP();\n\n        return fBound;\n      };\n    }\n\n    //SVGPathSeg API polyfill\n    //https://github.com/progers/pathseg\n    //\n    //This is a drop-in replacement for the SVGPathSeg and SVGPathSegList APIs that were removed from\n    //SVG2 (https://lists.w3.org/Archives/Public/www-svg/2015Jun/0044.html), including the latest spec\n    //changes which were implemented in Firefox 43 and Chrome 46.\n    //Chrome 48 removes these APIs, so this polyfill is required.\n\n    (function() { \"use strict\";\n     if (!(\"SVGPathSeg\" in window)) {\n         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSeg\n         window.SVGPathSeg = function(type, typeAsLetter, owningPathSegList) {\n             this.pathSegType = type;\n             this.pathSegTypeAsLetter = typeAsLetter;\n             this._owningPathSegList = owningPathSegList;\n         }\n\n         SVGPathSeg.PATHSEG_UNKNOWN = 0;\n         SVGPathSeg.PATHSEG_CLOSEPATH = 1;\n         SVGPathSeg.PATHSEG_MOVETO_ABS = 2;\n         SVGPathSeg.PATHSEG_MOVETO_REL = 3;\n         SVGPathSeg.PATHSEG_LINETO_ABS = 4;\n         SVGPathSeg.PATHSEG_LINETO_REL = 5;\n         SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS = 6;\n         SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL = 7;\n         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS = 8;\n         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL = 9;\n         SVGPathSeg.PATHSEG_ARC_ABS = 10;\n         SVGPathSeg.PATHSEG_ARC_REL = 11;\n         SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS = 12;\n         SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL = 13;\n         SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS = 14;\n         SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL = 15;\n         SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS = 16;\n         SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL = 17;\n         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS = 18;\n         SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL = 19;\n\n         // Notify owning PathSegList on any changes so they can be synchronized back to the path element.\n         SVGPathSeg.prototype._segmentChanged = function() {\n             if (this._owningPathSegList)\n                 this._owningPathSegList.segmentChanged(this);\n         }\n\n         window.SVGPathSegClosePath = function(owningPathSegList) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CLOSEPATH, \"z\", owningPathSegList);\n         }\n         SVGPathSegClosePath.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegClosePath.prototype.toString = function() { return \"[object SVGPathSegClosePath]\"; }\n         SVGPathSegClosePath.prototype._asPathString = function() { return this.pathSegTypeAsLetter; }\n         SVGPathSegClosePath.prototype.clone = function() { return new SVGPathSegClosePath(undefined); }\n\n         window.SVGPathSegMovetoAbs = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_MOVETO_ABS, \"M\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegMovetoAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegMovetoAbs.prototype.toString = function() { return \"[object SVGPathSegMovetoAbs]\"; }\n         SVGPathSegMovetoAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegMovetoAbs.prototype.clone = function() { return new SVGPathSegMovetoAbs(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegMovetoAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegMovetoAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegMovetoRel = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_MOVETO_REL, \"m\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegMovetoRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegMovetoRel.prototype.toString = function() { return \"[object SVGPathSegMovetoRel]\"; }\n         SVGPathSegMovetoRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegMovetoRel.prototype.clone = function() { return new SVGPathSegMovetoRel(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegMovetoRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegMovetoRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoAbs = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_ABS, \"L\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegLinetoAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoAbs.prototype.toString = function() { return \"[object SVGPathSegLinetoAbs]\"; }\n         SVGPathSegLinetoAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegLinetoAbs.prototype.clone = function() { return new SVGPathSegLinetoAbs(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegLinetoAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegLinetoAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoRel = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_REL, \"l\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegLinetoRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoRel.prototype.toString = function() { return \"[object SVGPathSegLinetoRel]\"; }\n         SVGPathSegLinetoRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegLinetoRel.prototype.clone = function() { return new SVGPathSegLinetoRel(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegLinetoRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegLinetoRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoCubicAbs = function(owningPathSegList, x, y, x1, y1, x2, y2) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS, \"C\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x1 = x1;\n             this._y1 = y1;\n             this._x2 = x2;\n             this._y2 = y2;\n         }\n         SVGPathSegCurvetoCubicAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoCubicAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicAbs]\"; }\n         SVGPathSegCurvetoCubicAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoCubicAbs.prototype.clone = function() { return new SVGPathSegCurvetoCubicAbs(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2); }\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicAbs.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoCubicRel = function(owningPathSegList, x, y, x1, y1, x2, y2) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL, \"c\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x1 = x1;\n             this._y1 = y1;\n             this._x2 = x2;\n             this._y2 = y2;\n         }\n         SVGPathSegCurvetoCubicRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoCubicRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicRel]\"; }\n         SVGPathSegCurvetoCubicRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoCubicRel.prototype.clone = function() { return new SVGPathSegCurvetoCubicRel(undefined, this._x, this._y, this._x1, this._y1, this._x2, this._y2); }\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicRel.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoQuadraticAbs = function(owningPathSegList, x, y, x1, y1) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS, \"Q\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x1 = x1;\n             this._y1 = y1;\n         }\n         SVGPathSegCurvetoQuadraticAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoQuadraticAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticAbs]\"; }\n         SVGPathSegCurvetoQuadraticAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoQuadraticAbs.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticAbs(undefined, this._x, this._y, this._x1, this._y1); }\n         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticAbs.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoQuadraticRel = function(owningPathSegList, x, y, x1, y1) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL, \"q\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x1 = x1;\n             this._y1 = y1;\n         }\n         SVGPathSegCurvetoQuadraticRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoQuadraticRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticRel]\"; }\n         SVGPathSegCurvetoQuadraticRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x1 + \" \" + this._y1 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoQuadraticRel.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticRel(undefined, this._x, this._y, this._x1, this._y1); }\n         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"x1\", { get: function() { return this._x1; }, set: function(x1) { this._x1 = x1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticRel.prototype, \"y1\", { get: function() { return this._y1; }, set: function(y1) { this._y1 = y1; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegArcAbs = function(owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_ARC_ABS, \"A\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._r1 = r1;\n             this._r2 = r2;\n             this._angle = angle;\n             this._largeArcFlag = largeArcFlag;\n             this._sweepFlag = sweepFlag;\n         }\n         SVGPathSegArcAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegArcAbs.prototype.toString = function() { return \"[object SVGPathSegArcAbs]\"; }\n         SVGPathSegArcAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegArcAbs.prototype.clone = function() { return new SVGPathSegArcAbs(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag); }\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"r1\", { get: function() { return this._r1; }, set: function(r1) { this._r1 = r1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"r2\", { get: function() { return this._r2; }, set: function(r2) { this._r2 = r2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"angle\", { get: function() { return this._angle; }, set: function(angle) { this._angle = angle; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"largeArcFlag\", { get: function() { return this._largeArcFlag; }, set: function(largeArcFlag) { this._largeArcFlag = largeArcFlag; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcAbs.prototype, \"sweepFlag\", { get: function() { return this._sweepFlag; }, set: function(sweepFlag) { this._sweepFlag = sweepFlag; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegArcRel = function(owningPathSegList, x, y, r1, r2, angle, largeArcFlag, sweepFlag) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_ARC_REL, \"a\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._r1 = r1;\n             this._r2 = r2;\n             this._angle = angle;\n             this._largeArcFlag = largeArcFlag;\n             this._sweepFlag = sweepFlag;\n         }\n         SVGPathSegArcRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegArcRel.prototype.toString = function() { return \"[object SVGPathSegArcRel]\"; }\n         SVGPathSegArcRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._r1 + \" \" + this._r2 + \" \" + this._angle + \" \" + (this._largeArcFlag ? \"1\" : \"0\") + \" \" + (this._sweepFlag ? \"1\" : \"0\") + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegArcRel.prototype.clone = function() { return new SVGPathSegArcRel(undefined, this._x, this._y, this._r1, this._r2, this._angle, this._largeArcFlag, this._sweepFlag); }\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"r1\", { get: function() { return this._r1; }, set: function(r1) { this._r1 = r1; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"r2\", { get: function() { return this._r2; }, set: function(r2) { this._r2 = r2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"angle\", { get: function() { return this._angle; }, set: function(angle) { this._angle = angle; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"largeArcFlag\", { get: function() { return this._largeArcFlag; }, set: function(largeArcFlag) { this._largeArcFlag = largeArcFlag; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegArcRel.prototype, \"sweepFlag\", { get: function() { return this._sweepFlag; }, set: function(sweepFlag) { this._sweepFlag = sweepFlag; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoHorizontalAbs = function(owningPathSegList, x) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS, \"H\", owningPathSegList);\n             this._x = x;\n         }\n         SVGPathSegLinetoHorizontalAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoHorizontalAbs.prototype.toString = function() { return \"[object SVGPathSegLinetoHorizontalAbs]\"; }\n         SVGPathSegLinetoHorizontalAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x; }\n         SVGPathSegLinetoHorizontalAbs.prototype.clone = function() { return new SVGPathSegLinetoHorizontalAbs(undefined, this._x); }\n         Object.defineProperty(SVGPathSegLinetoHorizontalAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoHorizontalRel = function(owningPathSegList, x) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL, \"h\", owningPathSegList);\n             this._x = x;\n         }\n         SVGPathSegLinetoHorizontalRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoHorizontalRel.prototype.toString = function() { return \"[object SVGPathSegLinetoHorizontalRel]\"; }\n         SVGPathSegLinetoHorizontalRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x; }\n         SVGPathSegLinetoHorizontalRel.prototype.clone = function() { return new SVGPathSegLinetoHorizontalRel(undefined, this._x); }\n         Object.defineProperty(SVGPathSegLinetoHorizontalRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoVerticalAbs = function(owningPathSegList, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS, \"V\", owningPathSegList);\n             this._y = y;\n         }\n         SVGPathSegLinetoVerticalAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoVerticalAbs.prototype.toString = function() { return \"[object SVGPathSegLinetoVerticalAbs]\"; }\n         SVGPathSegLinetoVerticalAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._y; }\n         SVGPathSegLinetoVerticalAbs.prototype.clone = function() { return new SVGPathSegLinetoVerticalAbs(undefined, this._y); }\n         Object.defineProperty(SVGPathSegLinetoVerticalAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegLinetoVerticalRel = function(owningPathSegList, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL, \"v\", owningPathSegList);\n             this._y = y;\n         }\n         SVGPathSegLinetoVerticalRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegLinetoVerticalRel.prototype.toString = function() { return \"[object SVGPathSegLinetoVerticalRel]\"; }\n         SVGPathSegLinetoVerticalRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._y; }\n         SVGPathSegLinetoVerticalRel.prototype.clone = function() { return new SVGPathSegLinetoVerticalRel(undefined, this._y); }\n         Object.defineProperty(SVGPathSegLinetoVerticalRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoCubicSmoothAbs = function(owningPathSegList, x, y, x2, y2) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS, \"S\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x2 = x2;\n             this._y2 = y2;\n         }\n         SVGPathSegCurvetoCubicSmoothAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoCubicSmoothAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicSmoothAbs]\"; }\n         SVGPathSegCurvetoCubicSmoothAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoCubicSmoothAbs.prototype.clone = function() { return new SVGPathSegCurvetoCubicSmoothAbs(undefined, this._x, this._y, this._x2, this._y2); }\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothAbs.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoCubicSmoothRel = function(owningPathSegList, x, y, x2, y2) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL, \"s\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n             this._x2 = x2;\n             this._y2 = y2;\n         }\n         SVGPathSegCurvetoCubicSmoothRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoCubicSmoothRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoCubicSmoothRel]\"; }\n         SVGPathSegCurvetoCubicSmoothRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x2 + \" \" + this._y2 + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoCubicSmoothRel.prototype.clone = function() { return new SVGPathSegCurvetoCubicSmoothRel(undefined, this._x, this._y, this._x2, this._y2); }\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"x2\", { get: function() { return this._x2; }, set: function(x2) { this._x2 = x2; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoCubicSmoothRel.prototype, \"y2\", { get: function() { return this._y2; }, set: function(y2) { this._y2 = y2; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoQuadraticSmoothAbs = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS, \"T\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegCurvetoQuadraticSmoothAbs.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoQuadraticSmoothAbs.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticSmoothAbs]\"; }\n         SVGPathSegCurvetoQuadraticSmoothAbs.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoQuadraticSmoothAbs.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticSmoothAbs(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothAbs.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         window.SVGPathSegCurvetoQuadraticSmoothRel = function(owningPathSegList, x, y) {\n             SVGPathSeg.call(this, SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL, \"t\", owningPathSegList);\n             this._x = x;\n             this._y = y;\n         }\n         SVGPathSegCurvetoQuadraticSmoothRel.prototype = Object.create(SVGPathSeg.prototype);\n         SVGPathSegCurvetoQuadraticSmoothRel.prototype.toString = function() { return \"[object SVGPathSegCurvetoQuadraticSmoothRel]\"; }\n         SVGPathSegCurvetoQuadraticSmoothRel.prototype._asPathString = function() { return this.pathSegTypeAsLetter + \" \" + this._x + \" \" + this._y; }\n         SVGPathSegCurvetoQuadraticSmoothRel.prototype.clone = function() { return new SVGPathSegCurvetoQuadraticSmoothRel(undefined, this._x, this._y); }\n         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"x\", { get: function() { return this._x; }, set: function(x) { this._x = x; this._segmentChanged(); }, enumerable: true });\n         Object.defineProperty(SVGPathSegCurvetoQuadraticSmoothRel.prototype, \"y\", { get: function() { return this._y; }, set: function(y) { this._y = y; this._segmentChanged(); }, enumerable: true });\n\n         // Add createSVGPathSeg* functions to SVGPathElement.\n         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathElement.\n         SVGPathElement.prototype.createSVGPathSegClosePath = function() { return new SVGPathSegClosePath(undefined); }\n         SVGPathElement.prototype.createSVGPathSegMovetoAbs = function(x, y) { return new SVGPathSegMovetoAbs(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegMovetoRel = function(x, y) { return new SVGPathSegMovetoRel(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegLinetoAbs = function(x, y) { return new SVGPathSegLinetoAbs(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegLinetoRel = function(x, y) { return new SVGPathSegLinetoRel(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoCubicAbs = function(x, y, x1, y1, x2, y2) { return new SVGPathSegCurvetoCubicAbs(undefined, x, y, x1, y1, x2, y2); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoCubicRel = function(x, y, x1, y1, x2, y2) { return new SVGPathSegCurvetoCubicRel(undefined, x, y, x1, y1, x2, y2); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticAbs = function(x, y, x1, y1) { return new SVGPathSegCurvetoQuadraticAbs(undefined, x, y, x1, y1); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticRel = function(x, y, x1, y1) { return new SVGPathSegCurvetoQuadraticRel(undefined, x, y, x1, y1); }\n         SVGPathElement.prototype.createSVGPathSegArcAbs = function(x, y, r1, r2, angle, largeArcFlag, sweepFlag) { return new SVGPathSegArcAbs(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag); }\n         SVGPathElement.prototype.createSVGPathSegArcRel = function(x, y, r1, r2, angle, largeArcFlag, sweepFlag) { return new SVGPathSegArcRel(undefined, x, y, r1, r2, angle, largeArcFlag, sweepFlag); }\n         SVGPathElement.prototype.createSVGPathSegLinetoHorizontalAbs = function(x) { return new SVGPathSegLinetoHorizontalAbs(undefined, x); }\n         SVGPathElement.prototype.createSVGPathSegLinetoHorizontalRel = function(x) { return new SVGPathSegLinetoHorizontalRel(undefined, x); }\n         SVGPathElement.prototype.createSVGPathSegLinetoVerticalAbs = function(y) { return new SVGPathSegLinetoVerticalAbs(undefined, y); }\n         SVGPathElement.prototype.createSVGPathSegLinetoVerticalRel = function(y) { return new SVGPathSegLinetoVerticalRel(undefined, y); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothAbs = function(x, y, x2, y2) { return new SVGPathSegCurvetoCubicSmoothAbs(undefined, x, y, x2, y2); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoCubicSmoothRel = function(x, y, x2, y2) { return new SVGPathSegCurvetoCubicSmoothRel(undefined, x, y, x2, y2); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothAbs = function(x, y) { return new SVGPathSegCurvetoQuadraticSmoothAbs(undefined, x, y); }\n         SVGPathElement.prototype.createSVGPathSegCurvetoQuadraticSmoothRel = function(x, y) { return new SVGPathSegCurvetoQuadraticSmoothRel(undefined, x, y); }\n     }\n\n     if (!(\"SVGPathSegList\" in window)) {\n         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGPathSegList\n         window.SVGPathSegList = function(pathElement) {\n             this._pathElement = pathElement;\n             this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n\n             // Use a MutationObserver to catch changes to the path's \"d\" attribute.\n             this._mutationObserverConfig = { \"attributes\": true, \"attributeFilter\": [\"d\"] };\n             this._pathElementMutationObserver = new MutationObserver(this._updateListFromPathMutations.bind(this));\n             this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n         }\n\n         Object.defineProperty(SVGPathSegList.prototype, \"numberOfItems\", {\n             get: function() {\n                 this._checkPathSynchronizedToList();\n                 return this._list.length;\n             },\n             enumerable: true\n         });\n\n         // Add the pathSegList accessors to SVGPathElement.\n         // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-InterfaceSVGAnimatedPathData\n         Object.defineProperty(SVGPathElement.prototype, \"pathSegList\", {\n             get: function() {\n                 if (!this._pathSegList)\n                     this._pathSegList = new SVGPathSegList(this);\n                 return this._pathSegList;\n             },\n             enumerable: true\n         });\n         // FIXME: The following are not implemented and simply return SVGPathElement.pathSegList.\n         Object.defineProperty(SVGPathElement.prototype, \"normalizedPathSegList\", { get: function() { return this.pathSegList; }, enumerable: true });\n         Object.defineProperty(SVGPathElement.prototype, \"animatedPathSegList\", { get: function() { return this.pathSegList; }, enumerable: true });\n         Object.defineProperty(SVGPathElement.prototype, \"animatedNormalizedPathSegList\", { get: function() { return this.pathSegList; }, enumerable: true });\n\n         // Process any pending mutations to the path element and update the list as needed.\n         // This should be the first call of all public functions and is needed because\n         // MutationObservers are not synchronous so we can have pending asynchronous mutations.\n         SVGPathSegList.prototype._checkPathSynchronizedToList = function() {\n             this._updateListFromPathMutations(this._pathElementMutationObserver.takeRecords());\n         }\n\n         SVGPathSegList.prototype._updateListFromPathMutations = function(mutationRecords) {\n             if (!this._pathElement)\n                 return;\n             var hasPathMutations = false;\n             mutationRecords.forEach(function(record) {\n                 if (record.attributeName == \"d\")\n                     hasPathMutations = true;\n             });\n             if (hasPathMutations)\n                 this._list = this._parsePath(this._pathElement.getAttribute(\"d\"));\n         }\n\n         // Serialize the list and update the path's 'd' attribute.\n         SVGPathSegList.prototype._writeListToPath = function() {\n             this._pathElementMutationObserver.disconnect();\n             this._pathElement.setAttribute(\"d\", SVGPathSegList._pathSegArrayAsString(this._list));\n             this._pathElementMutationObserver.observe(this._pathElement, this._mutationObserverConfig);\n         }\n\n         // When a path segment changes the list needs to be synchronized back to the path element.\n         SVGPathSegList.prototype.segmentChanged = function(pathSeg) {\n             this._writeListToPath();\n         }\n\n         SVGPathSegList.prototype.clear = function() {\n             this._checkPathSynchronizedToList();\n\n             this._list.forEach(function(pathSeg) {\n                 pathSeg._owningPathSegList = null;\n             });\n             this._list = [];\n             this._writeListToPath();\n         }\n\n         SVGPathSegList.prototype.initialize = function(newItem) {\n             this._checkPathSynchronizedToList();\n\n             this._list = [newItem];\n             newItem._owningPathSegList = this;\n             this._writeListToPath();\n             return newItem;\n         }\n\n         SVGPathSegList.prototype._checkValidIndex = function(index) {\n             if (isNaN(index) || index < 0 || index >= this.numberOfItems)\n                 throw \"INDEX_SIZE_ERR\";\n         }\n\n         SVGPathSegList.prototype.getItem = function(index) {\n             this._checkPathSynchronizedToList();\n\n             this._checkValidIndex(index);\n             return this._list[index];\n         }\n\n         SVGPathSegList.prototype.insertItemBefore = function(newItem, index) {\n             this._checkPathSynchronizedToList();\n\n             // Spec: If the index is greater than or equal to numberOfItems, then the new item is appended to the end of the list.\n             if (index > this.numberOfItems)\n                 index = this.numberOfItems;\n             if (newItem._owningPathSegList) {\n                 // SVG2 spec says to make a copy.\n                 newItem = newItem.clone();\n             }\n             this._list.splice(index, 0, newItem);\n             newItem._owningPathSegList = this;\n             this._writeListToPath();\n             return newItem;\n         }\n\n         SVGPathSegList.prototype.replaceItem = function(newItem, index) {\n             this._checkPathSynchronizedToList();\n\n             if (newItem._owningPathSegList) {\n                 // SVG2 spec says to make a copy.\n                 newItem = newItem.clone();\n             }\n             this._checkValidIndex(index);\n             this._list[index] = newItem;\n             newItem._owningPathSegList = this;\n             this._writeListToPath();\n             return newItem;\n         }\n\n         SVGPathSegList.prototype.removeItem = function(index) {\n             this._checkPathSynchronizedToList();\n\n             this._checkValidIndex(index);\n             var item = this._list[index];\n             this._list.splice(index, 1);\n             this._writeListToPath();\n             return item;\n         }\n\n         SVGPathSegList.prototype.appendItem = function(newItem) {\n             this._checkPathSynchronizedToList();\n\n             if (newItem._owningPathSegList) {\n                 // SVG2 spec says to make a copy.\n                 newItem = newItem.clone();\n             }\n             this._list.push(newItem);\n             newItem._owningPathSegList = this;\n             // TODO: Optimize this to just append to the existing attribute.\n             this._writeListToPath();\n             return newItem;\n         }\n\n         SVGPathSegList._pathSegArrayAsString = function(pathSegArray) {\n             var string = \"\";\n             var first = true;\n             pathSegArray.forEach(function(pathSeg) {\n                 if (first) {\n                     first = false;\n                     string += pathSeg._asPathString();\n                 } else {\n                     string += \" \" + pathSeg._asPathString();\n                 }\n             });\n             return string;\n         }\n\n         // This closely follows SVGPathParser::parsePath from Source/core/svg/SVGPathParser.cpp.\n         SVGPathSegList.prototype._parsePath = function(string) {\n             if (!string || string.length == 0)\n                 return [];\n\n             var owningPathSegList = this;\n\n             var Builder = function() {\n                 this.pathSegList = [];\n             }\n\n             Builder.prototype.appendSegment = function(pathSeg) {\n                 this.pathSegList.push(pathSeg);\n             }\n\n             var Source = function(string) {\n                 this._string = string;\n                 this._currentIndex = 0;\n                 this._endIndex = this._string.length;\n                 this._previousCommand = SVGPathSeg.PATHSEG_UNKNOWN;\n\n                 this._skipOptionalSpaces();\n             }\n\n             Source.prototype._isCurrentSpace = function() {\n                 var character = this._string[this._currentIndex];\n                 return character <= \" \" && (character == \" \" || character == \"\\n\" || character == \"\\t\" || character == \"\\r\" || character == \"\\f\");\n             }\n\n             Source.prototype._skipOptionalSpaces = function() {\n                 while (this._currentIndex < this._endIndex && this._isCurrentSpace())\n                     this._currentIndex++;\n                 return this._currentIndex < this._endIndex;\n             }\n\n             Source.prototype._skipOptionalSpacesOrDelimiter = function() {\n                 if (this._currentIndex < this._endIndex && !this._isCurrentSpace() && this._string.charAt(this._currentIndex) != \",\")\n                     return false;\n                 if (this._skipOptionalSpaces()) {\n                     if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \",\") {\n                         this._currentIndex++;\n                         this._skipOptionalSpaces();\n                     }\n                 }\n                 return this._currentIndex < this._endIndex;\n             }\n\n             Source.prototype.hasMoreData = function() {\n                 return this._currentIndex < this._endIndex;\n             }\n\n             Source.prototype.peekSegmentType = function() {\n                 var lookahead = this._string[this._currentIndex];\n                 return this._pathSegTypeFromChar(lookahead);\n             }\n\n             Source.prototype._pathSegTypeFromChar = function(lookahead) {\n                 switch (lookahead) {\n                 case \"Z\":\n                 case \"z\":\n                     return SVGPathSeg.PATHSEG_CLOSEPATH;\n                 case \"M\":\n                     return SVGPathSeg.PATHSEG_MOVETO_ABS;\n                 case \"m\":\n                     return SVGPathSeg.PATHSEG_MOVETO_REL;\n                 case \"L\":\n                     return SVGPathSeg.PATHSEG_LINETO_ABS;\n                 case \"l\":\n                     return SVGPathSeg.PATHSEG_LINETO_REL;\n                 case \"C\":\n                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS;\n                 case \"c\":\n                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL;\n                 case \"Q\":\n                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS;\n                 case \"q\":\n                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL;\n                 case \"A\":\n                     return SVGPathSeg.PATHSEG_ARC_ABS;\n                 case \"a\":\n                     return SVGPathSeg.PATHSEG_ARC_REL;\n                 case \"H\":\n                     return SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS;\n                 case \"h\":\n                     return SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL;\n                 case \"V\":\n                     return SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS;\n                 case \"v\":\n                     return SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL;\n                 case \"S\":\n                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS;\n                 case \"s\":\n                     return SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL;\n                 case \"T\":\n                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS;\n                 case \"t\":\n                     return SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL;\n                 default:\n                     return SVGPathSeg.PATHSEG_UNKNOWN;\n                 }\n             }\n\n             Source.prototype._nextCommandHelper = function(lookahead, previousCommand) {\n                 // Check for remaining coordinates in the current command.\n                 if ((lookahead == \"+\" || lookahead == \"-\" || lookahead == \".\" || (lookahead >= \"0\" && lookahead <= \"9\")) && previousCommand != SVGPathSeg.PATHSEG_CLOSEPATH) {\n                     if (previousCommand == SVGPathSeg.PATHSEG_MOVETO_ABS)\n                         return SVGPathSeg.PATHSEG_LINETO_ABS;\n                     if (previousCommand == SVGPathSeg.PATHSEG_MOVETO_REL)\n                         return SVGPathSeg.PATHSEG_LINETO_REL;\n                     return previousCommand;\n                 }\n                 return SVGPathSeg.PATHSEG_UNKNOWN;\n             }\n\n             Source.prototype.initialCommandIsMoveTo = function() {\n                 // If the path is empty it is still valid, so return true.\n                 if (!this.hasMoreData())\n                     return true;\n                 var command = this.peekSegmentType();\n                 // Path must start with moveTo.\n                 return command == SVGPathSeg.PATHSEG_MOVETO_ABS || command == SVGPathSeg.PATHSEG_MOVETO_REL;\n             }\n\n             // Parse a number from an SVG path. This very closely follows genericParseNumber(...) from Source/core/svg/SVGParserUtilities.cpp.\n             // Spec: http://www.w3.org/TR/SVG11/single-page.html#paths-PathDataBNF\n             Source.prototype._parseNumber = function() {\n                 var exponent = 0;\n                 var integer = 0;\n                 var frac = 1;\n                 var decimal = 0;\n                 var sign = 1;\n                 var expsign = 1;\n\n                 var startIndex = this._currentIndex;\n\n                 this._skipOptionalSpaces();\n\n                 // Read the sign.\n                 if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"+\")\n                     this._currentIndex++;\n                 else if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \"-\") {\n                     this._currentIndex++;\n                     sign = -1;\n                 }\n\n                 if (this._currentIndex == this._endIndex || ((this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\") && this._string.charAt(this._currentIndex) != \".\"))\n                     // The first character of a number must be one of [0-9+-.].\n                     return undefined;\n\n                 // Read the integer part, build right-to-left.\n                 var startIntPartIndex = this._currentIndex;\n                 while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\")\n                     this._currentIndex++; // Advance to first non-digit.\n\n                 if (this._currentIndex != startIntPartIndex) {\n                     var scanIntPartIndex = this._currentIndex - 1;\n                     var multiplier = 1;\n                     while (scanIntPartIndex >= startIntPartIndex) {\n                         integer += multiplier * (this._string.charAt(scanIntPartIndex--) - \"0\");\n                         multiplier *= 10;\n                     }\n                 }\n\n                 // Read the decimals.\n                 if (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) == \".\") {\n                     this._currentIndex++;\n\n                     // There must be a least one digit following the .\n                     if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\")\n                         return undefined;\n                     while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\")\n                         decimal += (this._string.charAt(this._currentIndex++) - \"0\") * (frac *= 0.1);\n                 }\n\n                 // Read the exponent part.\n                 if (this._currentIndex != startIndex && this._currentIndex + 1 < this._endIndex && (this._string.charAt(this._currentIndex) == \"e\" || this._string.charAt(this._currentIndex) == \"E\") && (this._string.charAt(this._currentIndex + 1) != \"x\" && this._string.charAt(this._currentIndex + 1) != \"m\")) {\n                     this._currentIndex++;\n\n                     // Read the sign of the exponent.\n                     if (this._string.charAt(this._currentIndex) == \"+\") {\n                         this._currentIndex++;\n                     } else if (this._string.charAt(this._currentIndex) == \"-\") {\n                         this._currentIndex++;\n                         expsign = -1;\n                     }\n\n                     // There must be an exponent.\n                     if (this._currentIndex >= this._endIndex || this._string.charAt(this._currentIndex) < \"0\" || this._string.charAt(this._currentIndex) > \"9\")\n                         return undefined;\n\n                     while (this._currentIndex < this._endIndex && this._string.charAt(this._currentIndex) >= \"0\" && this._string.charAt(this._currentIndex) <= \"9\") {\n                         exponent *= 10;\n                         exponent += (this._string.charAt(this._currentIndex) - \"0\");\n                         this._currentIndex++;\n                     }\n                 }\n\n                 var number = integer + decimal;\n                 number *= sign;\n\n                 if (exponent)\n                     number *= Math.pow(10, expsign * exponent);\n\n                 if (startIndex == this._currentIndex)\n                     return undefined;\n\n                 this._skipOptionalSpacesOrDelimiter();\n\n                 return number;\n             }\n\n             Source.prototype._parseArcFlag = function() {\n                 if (this._currentIndex >= this._endIndex)\n                     return undefined;\n                 var flag = false;\n                 var flagChar = this._string.charAt(this._currentIndex++);\n                 if (flagChar == \"0\")\n                     flag = false;\n                 else if (flagChar == \"1\")\n                     flag = true;\n                 else\n                     return undefined;\n\n                 this._skipOptionalSpacesOrDelimiter();\n                 return flag;\n             }\n\n             Source.prototype.parseSegment = function() {\n                 var lookahead = this._string[this._currentIndex];\n                 var command = this._pathSegTypeFromChar(lookahead);\n                 if (command == SVGPathSeg.PATHSEG_UNKNOWN) {\n                     // Possibly an implicit command. Not allowed if this is the first command.\n                     if (this._previousCommand == SVGPathSeg.PATHSEG_UNKNOWN)\n                         return null;\n                     command = this._nextCommandHelper(lookahead, this._previousCommand);\n                     if (command == SVGPathSeg.PATHSEG_UNKNOWN)\n                         return null;\n                 } else {\n                     this._currentIndex++;\n                 }\n\n                 this._previousCommand = command;\n\n                 switch (command) {\n                 case SVGPathSeg.PATHSEG_MOVETO_REL:\n                     return new SVGPathSegMovetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_MOVETO_ABS:\n                     return new SVGPathSegMovetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_REL:\n                     return new SVGPathSegLinetoRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_ABS:\n                     return new SVGPathSegLinetoAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_REL:\n                     return new SVGPathSegLinetoHorizontalRel(owningPathSegList, this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_HORIZONTAL_ABS:\n                     return new SVGPathSegLinetoHorizontalAbs(owningPathSegList, this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_VERTICAL_REL:\n                     return new SVGPathSegLinetoVerticalRel(owningPathSegList, this._parseNumber());\n                 case SVGPathSeg.PATHSEG_LINETO_VERTICAL_ABS:\n                     return new SVGPathSegLinetoVerticalAbs(owningPathSegList, this._parseNumber());\n                 case SVGPathSeg.PATHSEG_CLOSEPATH:\n                     this._skipOptionalSpaces();\n                     return new SVGPathSegClosePath(owningPathSegList);\n                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_REL:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoCubicRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_ABS:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoCubicAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.x2, points.y2);\n                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_REL:\n                     var points = {x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoCubicSmoothRel(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                 case SVGPathSeg.PATHSEG_CURVETO_CUBIC_SMOOTH_ABS:\n                     var points = {x2: this._parseNumber(), y2: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoCubicSmoothAbs(owningPathSegList, points.x, points.y, points.x2, points.y2);\n                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_REL:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoQuadraticRel(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_ABS:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegCurvetoQuadraticAbs(owningPathSegList, points.x, points.y, points.x1, points.y1);\n                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_REL:\n                     return new SVGPathSegCurvetoQuadraticSmoothRel(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_CURVETO_QUADRATIC_SMOOTH_ABS:\n                     return new SVGPathSegCurvetoQuadraticSmoothAbs(owningPathSegList, this._parseNumber(), this._parseNumber());\n                 case SVGPathSeg.PATHSEG_ARC_REL:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegArcRel(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                 case SVGPathSeg.PATHSEG_ARC_ABS:\n                     var points = {x1: this._parseNumber(), y1: this._parseNumber(), arcAngle: this._parseNumber(), arcLarge: this._parseArcFlag(), arcSweep: this._parseArcFlag(), x: this._parseNumber(), y: this._parseNumber()};\n                     return new SVGPathSegArcAbs(owningPathSegList, points.x, points.y, points.x1, points.y1, points.arcAngle, points.arcLarge, points.arcSweep);\n                 default:\n                     throw \"Unknown path seg type.\"\n                 }\n             }\n\n             var builder = new Builder();\n             var source = new Source(string);\n\n             if (!source.initialCommandIsMoveTo())\n                 return [];\n             while (source.hasMoreData()) {\n                 var pathSeg = source.parseSegment();\n                 if (!pathSeg)\n                     return [];\n                 builder.appendSegment(pathSeg);\n             }\n\n             return builder.pathSegList;\n         }\n     }\n    }());\n\n    /* jshint ignore:end */\n\n    if (typeof define === 'function' && define.amd) {\n        define(\"c3\", [\"d3\"], function () { return c3; });\n    } else if ('undefined' !== typeof exports && 'undefined' !== typeof module) {\n        module.exports = c3;\n    } else {\n        window.c3 = c3;\n    }\n\n})(window);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bower_components/c3/c3.js\n// module id = 27\n// module chunks = 0","!function() {\n  var d3 = {\n    version: \"3.5.5\"\n  };\n  var d3_arraySlice = [].slice, d3_array = function(list) {\n    return d3_arraySlice.call(list);\n  };\n  var d3_document = this.document;\n  function d3_documentElement(node) {\n    return node && (node.ownerDocument || node.document || node).documentElement;\n  }\n  function d3_window(node) {\n    return node && (node.ownerDocument && node.ownerDocument.defaultView || node.document && node || node.defaultView);\n  }\n  if (d3_document) {\n    try {\n      d3_array(d3_document.documentElement.childNodes)[0].nodeType;\n    } catch (e) {\n      d3_array = function(list) {\n        var i = list.length, array = new Array(i);\n        while (i--) array[i] = list[i];\n        return array;\n      };\n    }\n  }\n  if (!Date.now) Date.now = function() {\n    return +new Date();\n  };\n  if (d3_document) {\n    try {\n      d3_document.createElement(\"DIV\").style.setProperty(\"opacity\", 0, \"\");\n    } catch (error) {\n      var d3_element_prototype = this.Element.prototype, d3_element_setAttribute = d3_element_prototype.setAttribute, d3_element_setAttributeNS = d3_element_prototype.setAttributeNS, d3_style_prototype = this.CSSStyleDeclaration.prototype, d3_style_setProperty = d3_style_prototype.setProperty;\n      d3_element_prototype.setAttribute = function(name, value) {\n        d3_element_setAttribute.call(this, name, value + \"\");\n      };\n      d3_element_prototype.setAttributeNS = function(space, local, value) {\n        d3_element_setAttributeNS.call(this, space, local, value + \"\");\n      };\n      d3_style_prototype.setProperty = function(name, value, priority) {\n        d3_style_setProperty.call(this, name, value + \"\", priority);\n      };\n    }\n  }\n  d3.ascending = d3_ascending;\n  function d3_ascending(a, b) {\n    return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n  }\n  d3.descending = function(a, b) {\n    return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n  };\n  d3.min = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && a > b) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && a > b) a = b;\n    }\n    return a;\n  };\n  d3.max = function(array, f) {\n    var i = -1, n = array.length, a, b;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null && b > a) a = b;\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b > a) a = b;\n    }\n    return a;\n  };\n  d3.extent = function(array, f) {\n    var i = -1, n = array.length, a, b, c;\n    if (arguments.length === 1) {\n      while (++i < n) if ((b = array[i]) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = array[i]) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    } else {\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null && b >= b) {\n        a = c = b;\n        break;\n      }\n      while (++i < n) if ((b = f.call(array, array[i], i)) != null) {\n        if (a > b) a = b;\n        if (c < b) c = b;\n      }\n    }\n    return [ a, c ];\n  };\n  function d3_number(x) {\n    return x === null ? NaN : +x;\n  }\n  function d3_numeric(x) {\n    return !isNaN(x);\n  }\n  d3.sum = function(array, f) {\n    var s = 0, n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = +array[i])) s += a;\n    } else {\n      while (++i < n) if (d3_numeric(a = +f.call(array, array[i], i))) s += a;\n    }\n    return s;\n  };\n  d3.mean = function(array, f) {\n    var s = 0, n = array.length, a, i = -1, j = n;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) s += a; else --j;\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) s += a; else --j;\n    }\n    if (j) return s / j;\n  };\n  d3.quantile = function(values, p) {\n    var H = (values.length - 1) * p + 1, h = Math.floor(H), v = +values[h - 1], e = H - h;\n    return e ? v + e * (values[h] - v) : v;\n  };\n  d3.median = function(array, f) {\n    var numbers = [], n = array.length, a, i = -1;\n    if (arguments.length === 1) {\n      while (++i < n) if (d3_numeric(a = d3_number(array[i]))) numbers.push(a);\n    } else {\n      while (++i < n) if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) numbers.push(a);\n    }\n    if (numbers.length) return d3.quantile(numbers.sort(d3_ascending), .5);\n  };\n  d3.variance = function(array, f) {\n    var n = array.length, m = 0, a, d, s = 0, i = -1, j = 0;\n    if (arguments.length === 1) {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(array[i]))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    } else {\n      while (++i < n) {\n        if (d3_numeric(a = d3_number(f.call(array, array[i], i)))) {\n          d = a - m;\n          m += d / ++j;\n          s += d * (a - m);\n        }\n      }\n    }\n    if (j > 1) return s / (j - 1);\n  };\n  d3.deviation = function() {\n    var v = d3.variance.apply(this, arguments);\n    return v ? Math.sqrt(v) : v;\n  };\n  function d3_bisector(compare) {\n    return {\n      left: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) < 0) lo = mid + 1; else hi = mid;\n        }\n        return lo;\n      },\n      right: function(a, x, lo, hi) {\n        if (arguments.length < 3) lo = 0;\n        if (arguments.length < 4) hi = a.length;\n        while (lo < hi) {\n          var mid = lo + hi >>> 1;\n          if (compare(a[mid], x) > 0) hi = mid; else lo = mid + 1;\n        }\n        return lo;\n      }\n    };\n  }\n  var d3_bisect = d3_bisector(d3_ascending);\n  d3.bisectLeft = d3_bisect.left;\n  d3.bisect = d3.bisectRight = d3_bisect.right;\n  d3.bisector = function(f) {\n    return d3_bisector(f.length === 1 ? function(d, x) {\n      return d3_ascending(f(d), x);\n    } : f);\n  };\n  d3.shuffle = function(array, i0, i1) {\n    if ((m = arguments.length) < 3) {\n      i1 = array.length;\n      if (m < 2) i0 = 0;\n    }\n    var m = i1 - i0, t, i;\n    while (m) {\n      i = Math.random() * m-- | 0;\n      t = array[m + i0], array[m + i0] = array[i + i0], array[i + i0] = t;\n    }\n    return array;\n  };\n  d3.permute = function(array, indexes) {\n    var i = indexes.length, permutes = new Array(i);\n    while (i--) permutes[i] = array[indexes[i]];\n    return permutes;\n  };\n  d3.pairs = function(array) {\n    var i = 0, n = array.length - 1, p0, p1 = array[0], pairs = new Array(n < 0 ? 0 : n);\n    while (i < n) pairs[i] = [ p0 = p1, p1 = array[++i] ];\n    return pairs;\n  };\n  d3.zip = function() {\n    if (!(n = arguments.length)) return [];\n    for (var i = -1, m = d3.min(arguments, d3_zipLength), zips = new Array(m); ++i < m; ) {\n      for (var j = -1, n, zip = zips[i] = new Array(n); ++j < n; ) {\n        zip[j] = arguments[j][i];\n      }\n    }\n    return zips;\n  };\n  function d3_zipLength(d) {\n    return d.length;\n  }\n  d3.transpose = function(matrix) {\n    return d3.zip.apply(d3, matrix);\n  };\n  d3.keys = function(map) {\n    var keys = [];\n    for (var key in map) keys.push(key);\n    return keys;\n  };\n  d3.values = function(map) {\n    var values = [];\n    for (var key in map) values.push(map[key]);\n    return values;\n  };\n  d3.entries = function(map) {\n    var entries = [];\n    for (var key in map) entries.push({\n      key: key,\n      value: map[key]\n    });\n    return entries;\n  };\n  d3.merge = function(arrays) {\n    var n = arrays.length, m, i = -1, j = 0, merged, array;\n    while (++i < n) j += arrays[i].length;\n    merged = new Array(j);\n    while (--n >= 0) {\n      array = arrays[n];\n      m = array.length;\n      while (--m >= 0) {\n        merged[--j] = array[m];\n      }\n    }\n    return merged;\n  };\n  var abs = Math.abs;\n  d3.range = function(start, stop, step) {\n    if (arguments.length < 3) {\n      step = 1;\n      if (arguments.length < 2) {\n        stop = start;\n        start = 0;\n      }\n    }\n    if ((stop - start) / step === Infinity) throw new Error(\"infinite range\");\n    var range = [], k = d3_range_integerScale(abs(step)), i = -1, j;\n    start *= k, stop *= k, step *= k;\n    if (step < 0) while ((j = start + step * ++i) > stop) range.push(j / k); else while ((j = start + step * ++i) < stop) range.push(j / k);\n    return range;\n  };\n  function d3_range_integerScale(x) {\n    var k = 1;\n    while (x * k % 1) k *= 10;\n    return k;\n  }\n  function d3_class(ctor, properties) {\n    for (var key in properties) {\n      Object.defineProperty(ctor.prototype, key, {\n        value: properties[key],\n        enumerable: false\n      });\n    }\n  }\n  d3.map = function(object, f) {\n    var map = new d3_Map();\n    if (object instanceof d3_Map) {\n      object.forEach(function(key, value) {\n        map.set(key, value);\n      });\n    } else if (Array.isArray(object)) {\n      var i = -1, n = object.length, o;\n      if (arguments.length === 1) while (++i < n) map.set(i, object[i]); else while (++i < n) map.set(f.call(object, o = object[i], i), o);\n    } else {\n      for (var key in object) map.set(key, object[key]);\n    }\n    return map;\n  };\n  function d3_Map() {\n    this._ = Object.create(null);\n  }\n  var d3_map_proto = \"__proto__\", d3_map_zero = \"\\x00\";\n  d3_class(d3_Map, {\n    has: d3_map_has,\n    get: function(key) {\n      return this._[d3_map_escape(key)];\n    },\n    set: function(key, value) {\n      return this._[d3_map_escape(key)] = value;\n    },\n    remove: d3_map_remove,\n    keys: d3_map_keys,\n    values: function() {\n      var values = [];\n      for (var key in this._) values.push(this._[key]);\n      return values;\n    },\n    entries: function() {\n      var entries = [];\n      for (var key in this._) entries.push({\n        key: d3_map_unescape(key),\n        value: this._[key]\n      });\n      return entries;\n    },\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key), this._[key]);\n    }\n  });\n  function d3_map_escape(key) {\n    return (key += \"\") === d3_map_proto || key[0] === d3_map_zero ? d3_map_zero + key : key;\n  }\n  function d3_map_unescape(key) {\n    return (key += \"\")[0] === d3_map_zero ? key.slice(1) : key;\n  }\n  function d3_map_has(key) {\n    return d3_map_escape(key) in this._;\n  }\n  function d3_map_remove(key) {\n    return (key = d3_map_escape(key)) in this._ && delete this._[key];\n  }\n  function d3_map_keys() {\n    var keys = [];\n    for (var key in this._) keys.push(d3_map_unescape(key));\n    return keys;\n  }\n  function d3_map_size() {\n    var size = 0;\n    for (var key in this._) ++size;\n    return size;\n  }\n  function d3_map_empty() {\n    for (var key in this._) return false;\n    return true;\n  }\n  d3.nest = function() {\n    var nest = {}, keys = [], sortKeys = [], sortValues, rollup;\n    function map(mapType, array, depth) {\n      if (depth >= keys.length) return rollup ? rollup.call(nest, array) : sortValues ? array.sort(sortValues) : array;\n      var i = -1, n = array.length, key = keys[depth++], keyValue, object, setter, valuesByKey = new d3_Map(), values;\n      while (++i < n) {\n        if (values = valuesByKey.get(keyValue = key(object = array[i]))) {\n          values.push(object);\n        } else {\n          valuesByKey.set(keyValue, [ object ]);\n        }\n      }\n      if (mapType) {\n        object = mapType();\n        setter = function(keyValue, values) {\n          object.set(keyValue, map(mapType, values, depth));\n        };\n      } else {\n        object = {};\n        setter = function(keyValue, values) {\n          object[keyValue] = map(mapType, values, depth);\n        };\n      }\n      valuesByKey.forEach(setter);\n      return object;\n    }\n    function entries(map, depth) {\n      if (depth >= keys.length) return map;\n      var array = [], sortKey = sortKeys[depth++];\n      map.forEach(function(key, keyMap) {\n        array.push({\n          key: key,\n          values: entries(keyMap, depth)\n        });\n      });\n      return sortKey ? array.sort(function(a, b) {\n        return sortKey(a.key, b.key);\n      }) : array;\n    }\n    nest.map = function(array, mapType) {\n      return map(mapType, array, 0);\n    };\n    nest.entries = function(array) {\n      return entries(map(d3.map, array, 0), 0);\n    };\n    nest.key = function(d) {\n      keys.push(d);\n      return nest;\n    };\n    nest.sortKeys = function(order) {\n      sortKeys[keys.length - 1] = order;\n      return nest;\n    };\n    nest.sortValues = function(order) {\n      sortValues = order;\n      return nest;\n    };\n    nest.rollup = function(f) {\n      rollup = f;\n      return nest;\n    };\n    return nest;\n  };\n  d3.set = function(array) {\n    var set = new d3_Set();\n    if (array) for (var i = 0, n = array.length; i < n; ++i) set.add(array[i]);\n    return set;\n  };\n  function d3_Set() {\n    this._ = Object.create(null);\n  }\n  d3_class(d3_Set, {\n    has: d3_map_has,\n    add: function(key) {\n      this._[d3_map_escape(key += \"\")] = true;\n      return key;\n    },\n    remove: d3_map_remove,\n    values: d3_map_keys,\n    size: d3_map_size,\n    empty: d3_map_empty,\n    forEach: function(f) {\n      for (var key in this._) f.call(this, d3_map_unescape(key));\n    }\n  });\n  d3.behavior = {};\n  function d3_identity(d) {\n    return d;\n  }\n  d3.rebind = function(target, source) {\n    var i = 1, n = arguments.length, method;\n    while (++i < n) target[method = arguments[i]] = d3_rebind(target, source, source[method]);\n    return target;\n  };\n  function d3_rebind(target, source, method) {\n    return function() {\n      var value = method.apply(source, arguments);\n      return value === source ? target : value;\n    };\n  }\n  function d3_vendorSymbol(object, name) {\n    if (name in object) return name;\n    name = name.charAt(0).toUpperCase() + name.slice(1);\n    for (var i = 0, n = d3_vendorPrefixes.length; i < n; ++i) {\n      var prefixName = d3_vendorPrefixes[i] + name;\n      if (prefixName in object) return prefixName;\n    }\n  }\n  var d3_vendorPrefixes = [ \"webkit\", \"ms\", \"moz\", \"Moz\", \"o\", \"O\" ];\n  function d3_noop() {}\n  d3.dispatch = function() {\n    var dispatch = new d3_dispatch(), i = -1, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    return dispatch;\n  };\n  function d3_dispatch() {}\n  d3_dispatch.prototype.on = function(type, listener) {\n    var i = type.indexOf(\".\"), name = \"\";\n    if (i >= 0) {\n      name = type.slice(i + 1);\n      type = type.slice(0, i);\n    }\n    if (type) return arguments.length < 2 ? this[type].on(name) : this[type].on(name, listener);\n    if (arguments.length === 2) {\n      if (listener == null) for (type in this) {\n        if (this.hasOwnProperty(type)) this[type].on(name, null);\n      }\n      return this;\n    }\n  };\n  function d3_dispatch_event(dispatch) {\n    var listeners = [], listenerByName = new d3_Map();\n    function event() {\n      var z = listeners, i = -1, n = z.length, l;\n      while (++i < n) if (l = z[i].on) l.apply(this, arguments);\n      return dispatch;\n    }\n    event.on = function(name, listener) {\n      var l = listenerByName.get(name), i;\n      if (arguments.length < 2) return l && l.on;\n      if (l) {\n        l.on = null;\n        listeners = listeners.slice(0, i = listeners.indexOf(l)).concat(listeners.slice(i + 1));\n        listenerByName.remove(name);\n      }\n      if (listener) listeners.push(listenerByName.set(name, {\n        on: listener\n      }));\n      return dispatch;\n    };\n    return event;\n  }\n  d3.event = null;\n  function d3_eventPreventDefault() {\n    d3.event.preventDefault();\n  }\n  function d3_eventSource() {\n    var e = d3.event, s;\n    while (s = e.sourceEvent) e = s;\n    return e;\n  }\n  function d3_eventDispatch(target) {\n    var dispatch = new d3_dispatch(), i = 0, n = arguments.length;\n    while (++i < n) dispatch[arguments[i]] = d3_dispatch_event(dispatch);\n    dispatch.of = function(thiz, argumentz) {\n      return function(e1) {\n        try {\n          var e0 = e1.sourceEvent = d3.event;\n          e1.target = target;\n          d3.event = e1;\n          dispatch[e1.type].apply(thiz, argumentz);\n        } finally {\n          d3.event = e0;\n        }\n      };\n    };\n    return dispatch;\n  }\n  d3.requote = function(s) {\n    return s.replace(d3_requote_re, \"\\\\$&\");\n  };\n  var d3_requote_re = /[\\\\\\^\\$\\*\\+\\?\\|\\[\\]\\(\\)\\.\\{\\}]/g;\n  var d3_subclass = {}.__proto__ ? function(object, prototype) {\n    object.__proto__ = prototype;\n  } : function(object, prototype) {\n    for (var property in prototype) object[property] = prototype[property];\n  };\n  function d3_selection(groups) {\n    d3_subclass(groups, d3_selectionPrototype);\n    return groups;\n  }\n  var d3_select = function(s, n) {\n    return n.querySelector(s);\n  }, d3_selectAll = function(s, n) {\n    return n.querySelectorAll(s);\n  }, d3_selectMatches = function(n, s) {\n    var d3_selectMatcher = n.matches || n[d3_vendorSymbol(n, \"matchesSelector\")];\n    d3_selectMatches = function(n, s) {\n      return d3_selectMatcher.call(n, s);\n    };\n    return d3_selectMatches(n, s);\n  };\n  if (typeof Sizzle === \"function\") {\n    d3_select = function(s, n) {\n      return Sizzle(s, n)[0] || null;\n    };\n    d3_selectAll = Sizzle;\n    d3_selectMatches = Sizzle.matchesSelector;\n  }\n  d3.selection = function() {\n    return d3.select(d3_document.documentElement);\n  };\n  var d3_selectionPrototype = d3.selection.prototype = [];\n  d3_selectionPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, group, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(subnode = selector.call(node, node.__data__, i, j));\n          if (subnode && \"__data__\" in node) subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selector(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_select(selector, this);\n    };\n  }\n  d3_selectionPrototype.selectAll = function(selector) {\n    var subgroups = [], subgroup, node;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroups.push(subgroup = d3_array(selector.call(node, node.__data__, i, j)));\n          subgroup.parentNode = node;\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_selectorAll(selector) {\n    return typeof selector === \"function\" ? selector : function() {\n      return d3_selectAll(selector, this);\n    };\n  }\n  var d3_nsPrefix = {\n    svg: \"http://www.w3.org/2000/svg\",\n    xhtml: \"http://www.w3.org/1999/xhtml\",\n    xlink: \"http://www.w3.org/1999/xlink\",\n    xml: \"http://www.w3.org/XML/1998/namespace\",\n    xmlns: \"http://www.w3.org/2000/xmlns/\"\n  };\n  d3.ns = {\n    prefix: d3_nsPrefix,\n    qualify: function(name) {\n      var i = name.indexOf(\":\"), prefix = name;\n      if (i >= 0) {\n        prefix = name.slice(0, i);\n        name = name.slice(i + 1);\n      }\n      return d3_nsPrefix.hasOwnProperty(prefix) ? {\n        space: d3_nsPrefix[prefix],\n        local: name\n      } : name;\n    }\n  };\n  d3_selectionPrototype.attr = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node();\n        name = d3.ns.qualify(name);\n        return name.local ? node.getAttributeNS(name.space, name.local) : node.getAttribute(name);\n      }\n      for (value in name) this.each(d3_selection_attr(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_attr(name, value));\n  };\n  function d3_selection_attr(name, value) {\n    name = d3.ns.qualify(name);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrConstant() {\n      this.setAttribute(name, value);\n    }\n    function attrConstantNS() {\n      this.setAttributeNS(name.space, name.local, value);\n    }\n    function attrFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttribute(name); else this.setAttribute(name, x);\n    }\n    function attrFunctionNS() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.removeAttributeNS(name.space, name.local); else this.setAttributeNS(name.space, name.local, x);\n    }\n    return value == null ? name.local ? attrNullNS : attrNull : typeof value === \"function\" ? name.local ? attrFunctionNS : attrFunction : name.local ? attrConstantNS : attrConstant;\n  }\n  function d3_collapse(s) {\n    return s.trim().replace(/\\s+/g, \" \");\n  }\n  d3_selectionPrototype.classed = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") {\n        var node = this.node(), n = (name = d3_selection_classes(name)).length, i = -1;\n        if (value = node.classList) {\n          while (++i < n) if (!value.contains(name[i])) return false;\n        } else {\n          value = node.getAttribute(\"class\");\n          while (++i < n) if (!d3_selection_classedRe(name[i]).test(value)) return false;\n        }\n        return true;\n      }\n      for (value in name) this.each(d3_selection_classed(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_classed(name, value));\n  };\n  function d3_selection_classedRe(name) {\n    return new RegExp(\"(?:^|\\\\s+)\" + d3.requote(name) + \"(?:\\\\s+|$)\", \"g\");\n  }\n  function d3_selection_classes(name) {\n    return (name + \"\").trim().split(/^|\\s+/);\n  }\n  function d3_selection_classed(name, value) {\n    name = d3_selection_classes(name).map(d3_selection_classedName);\n    var n = name.length;\n    function classedConstant() {\n      var i = -1;\n      while (++i < n) name[i](this, value);\n    }\n    function classedFunction() {\n      var i = -1, x = value.apply(this, arguments);\n      while (++i < n) name[i](this, x);\n    }\n    return typeof value === \"function\" ? classedFunction : classedConstant;\n  }\n  function d3_selection_classedName(name) {\n    var re = d3_selection_classedRe(name);\n    return function(node, value) {\n      if (c = node.classList) return value ? c.add(name) : c.remove(name);\n      var c = node.getAttribute(\"class\") || \"\";\n      if (value) {\n        re.lastIndex = 0;\n        if (!re.test(c)) node.setAttribute(\"class\", d3_collapse(c + \" \" + name));\n      } else {\n        node.setAttribute(\"class\", d3_collapse(c.replace(re, \" \")));\n      }\n    };\n  }\n  d3_selectionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.each(d3_selection_style(priority, name[priority], value));\n        return this;\n      }\n      if (n < 2) {\n        var node = this.node();\n        return d3_window(node).getComputedStyle(node, null).getPropertyValue(name);\n      }\n      priority = \"\";\n    }\n    return this.each(d3_selection_style(name, value, priority));\n  };\n  function d3_selection_style(name, value, priority) {\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleConstant() {\n      this.style.setProperty(name, value, priority);\n    }\n    function styleFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) this.style.removeProperty(name); else this.style.setProperty(name, x, priority);\n    }\n    return value == null ? styleNull : typeof value === \"function\" ? styleFunction : styleConstant;\n  }\n  d3_selectionPrototype.property = function(name, value) {\n    if (arguments.length < 2) {\n      if (typeof name === \"string\") return this.node()[name];\n      for (value in name) this.each(d3_selection_property(value, name[value]));\n      return this;\n    }\n    return this.each(d3_selection_property(name, value));\n  };\n  function d3_selection_property(name, value) {\n    function propertyNull() {\n      delete this[name];\n    }\n    function propertyConstant() {\n      this[name] = value;\n    }\n    function propertyFunction() {\n      var x = value.apply(this, arguments);\n      if (x == null) delete this[name]; else this[name] = x;\n    }\n    return value == null ? propertyNull : typeof value === \"function\" ? propertyFunction : propertyConstant;\n  }\n  d3_selectionPrototype.text = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.textContent = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.textContent = \"\";\n    } : function() {\n      this.textContent = value;\n    }) : this.node().textContent;\n  };\n  d3_selectionPrototype.html = function(value) {\n    return arguments.length ? this.each(typeof value === \"function\" ? function() {\n      var v = value.apply(this, arguments);\n      this.innerHTML = v == null ? \"\" : v;\n    } : value == null ? function() {\n      this.innerHTML = \"\";\n    } : function() {\n      this.innerHTML = value;\n    }) : this.node().innerHTML;\n  };\n  d3_selectionPrototype.append = function(name) {\n    name = d3_selection_creator(name);\n    return this.select(function() {\n      return this.appendChild(name.apply(this, arguments));\n    });\n  };\n  function d3_selection_creator(name) {\n    function create() {\n      var document = this.ownerDocument, namespace = this.namespaceURI;\n      return namespace ? document.createElementNS(namespace, name) : document.createElement(name);\n    }\n    function createNS() {\n      return this.ownerDocument.createElementNS(name.space, name.local);\n    }\n    return typeof name === \"function\" ? name : (name = d3.ns.qualify(name)).local ? createNS : create;\n  }\n  d3_selectionPrototype.insert = function(name, before) {\n    name = d3_selection_creator(name);\n    before = d3_selection_selector(before);\n    return this.select(function() {\n      return this.insertBefore(name.apply(this, arguments), before.apply(this, arguments) || null);\n    });\n  };\n  d3_selectionPrototype.remove = function() {\n    return this.each(d3_selectionRemove);\n  };\n  function d3_selectionRemove() {\n    var parent = this.parentNode;\n    if (parent) parent.removeChild(this);\n  }\n  d3_selectionPrototype.data = function(value, key) {\n    var i = -1, n = this.length, group, node;\n    if (!arguments.length) {\n      value = new Array(n = (group = this[0]).length);\n      while (++i < n) {\n        if (node = group[i]) {\n          value[i] = node.__data__;\n        }\n      }\n      return value;\n    }\n    function bind(group, groupData) {\n      var i, n = group.length, m = groupData.length, n0 = Math.min(n, m), updateNodes = new Array(m), enterNodes = new Array(m), exitNodes = new Array(n), node, nodeData;\n      if (key) {\n        var nodeByKeyValue = new d3_Map(), keyValues = new Array(n), keyValue;\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.has(keyValue = key.call(node = group[i], node.__data__, i))) {\n            exitNodes[i] = node;\n          } else {\n            nodeByKeyValue.set(keyValue, node);\n          }\n          keyValues[i] = keyValue;\n        }\n        for (i = -1; ++i < m; ) {\n          if (!(node = nodeByKeyValue.get(keyValue = key.call(groupData, nodeData = groupData[i], i)))) {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          } else if (node !== true) {\n            updateNodes[i] = node;\n            node.__data__ = nodeData;\n          }\n          nodeByKeyValue.set(keyValue, true);\n        }\n        for (i = -1; ++i < n; ) {\n          if (nodeByKeyValue.get(keyValues[i]) !== true) {\n            exitNodes[i] = group[i];\n          }\n        }\n      } else {\n        for (i = -1; ++i < n0; ) {\n          node = group[i];\n          nodeData = groupData[i];\n          if (node) {\n            node.__data__ = nodeData;\n            updateNodes[i] = node;\n          } else {\n            enterNodes[i] = d3_selection_dataNode(nodeData);\n          }\n        }\n        for (;i < m; ++i) {\n          enterNodes[i] = d3_selection_dataNode(groupData[i]);\n        }\n        for (;i < n; ++i) {\n          exitNodes[i] = group[i];\n        }\n      }\n      enterNodes.update = updateNodes;\n      enterNodes.parentNode = updateNodes.parentNode = exitNodes.parentNode = group.parentNode;\n      enter.push(enterNodes);\n      update.push(updateNodes);\n      exit.push(exitNodes);\n    }\n    var enter = d3_selection_enter([]), update = d3_selection([]), exit = d3_selection([]);\n    if (typeof value === \"function\") {\n      while (++i < n) {\n        bind(group = this[i], value.call(group, group.parentNode.__data__, i));\n      }\n    } else {\n      while (++i < n) {\n        bind(group = this[i], value);\n      }\n    }\n    update.enter = function() {\n      return enter;\n    };\n    update.exit = function() {\n      return exit;\n    };\n    return update;\n  };\n  function d3_selection_dataNode(data) {\n    return {\n      __data__: data\n    };\n  }\n  d3_selectionPrototype.datum = function(value) {\n    return arguments.length ? this.property(\"__data__\", value) : this.property(\"__data__\");\n  };\n  d3_selectionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = (group = this[j]).parentNode;\n      for (var i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  function d3_selection_filter(selector) {\n    return function() {\n      return d3_selectMatches(this, selector);\n    };\n  }\n  d3_selectionPrototype.order = function() {\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = group.length - 1, next = group[i], node; --i >= 0; ) {\n        if (node = group[i]) {\n          if (next && next !== node.nextSibling) next.parentNode.insertBefore(node, next);\n          next = node;\n        }\n      }\n    }\n    return this;\n  };\n  d3_selectionPrototype.sort = function(comparator) {\n    comparator = d3_selection_sortComparator.apply(this, arguments);\n    for (var j = -1, m = this.length; ++j < m; ) this[j].sort(comparator);\n    return this.order();\n  };\n  function d3_selection_sortComparator(comparator) {\n    if (!arguments.length) comparator = d3_ascending;\n    return function(a, b) {\n      return a && b ? comparator(a.__data__, b.__data__) : !a - !b;\n    };\n  }\n  d3_selectionPrototype.each = function(callback) {\n    return d3_selection_each(this, function(node, i, j) {\n      callback.call(node, node.__data__, i, j);\n    });\n  };\n  function d3_selection_each(groups, callback) {\n    for (var j = 0, m = groups.length; j < m; j++) {\n      for (var group = groups[j], i = 0, n = group.length, node; i < n; i++) {\n        if (node = group[i]) callback(node, i, j);\n      }\n    }\n    return groups;\n  }\n  d3_selectionPrototype.call = function(callback) {\n    var args = d3_array(arguments);\n    callback.apply(args[0] = this, args);\n    return this;\n  };\n  d3_selectionPrototype.empty = function() {\n    return !this.node();\n  };\n  d3_selectionPrototype.node = function() {\n    for (var j = 0, m = this.length; j < m; j++) {\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        var node = group[i];\n        if (node) return node;\n      }\n    }\n    return null;\n  };\n  d3_selectionPrototype.size = function() {\n    var n = 0;\n    d3_selection_each(this, function() {\n      ++n;\n    });\n    return n;\n  };\n  function d3_selection_enter(selection) {\n    d3_subclass(selection, d3_selection_enterPrototype);\n    return selection;\n  }\n  var d3_selection_enterPrototype = [];\n  d3.selection.enter = d3_selection_enter;\n  d3.selection.enter.prototype = d3_selection_enterPrototype;\n  d3_selection_enterPrototype.append = d3_selectionPrototype.append;\n  d3_selection_enterPrototype.empty = d3_selectionPrototype.empty;\n  d3_selection_enterPrototype.node = d3_selectionPrototype.node;\n  d3_selection_enterPrototype.call = d3_selectionPrototype.call;\n  d3_selection_enterPrototype.size = d3_selectionPrototype.size;\n  d3_selection_enterPrototype.select = function(selector) {\n    var subgroups = [], subgroup, subnode, upgroup, group, node;\n    for (var j = -1, m = this.length; ++j < m; ) {\n      upgroup = (group = this[j]).update;\n      subgroups.push(subgroup = []);\n      subgroup.parentNode = group.parentNode;\n      for (var i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          subgroup.push(upgroup[i] = subnode = selector.call(group.parentNode, node.__data__, i, j));\n          subnode.__data__ = node.__data__;\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_selection(subgroups);\n  };\n  d3_selection_enterPrototype.insert = function(name, before) {\n    if (arguments.length < 2) before = d3_selection_enterInsertBefore(this);\n    return d3_selectionPrototype.insert.call(this, name, before);\n  };\n  function d3_selection_enterInsertBefore(enter) {\n    var i0, j0;\n    return function(d, i, j) {\n      var group = enter[j].update, n = group.length, node;\n      if (j != j0) j0 = j, i0 = 0;\n      if (i >= i0) i0 = i + 1;\n      while (!(node = group[i0]) && ++i0 < n) ;\n      return node;\n    };\n  }\n  d3.select = function(node) {\n    var group;\n    if (typeof node === \"string\") {\n      group = [ d3_select(node, d3_document) ];\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = [ node ];\n      group.parentNode = d3_documentElement(node);\n    }\n    return d3_selection([ group ]);\n  };\n  d3.selectAll = function(nodes) {\n    var group;\n    if (typeof nodes === \"string\") {\n      group = d3_array(d3_selectAll(nodes, d3_document));\n      group.parentNode = d3_document.documentElement;\n    } else {\n      group = nodes;\n      group.parentNode = null;\n    }\n    return d3_selection([ group ]);\n  };\n  d3_selectionPrototype.on = function(type, listener, capture) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof type !== \"string\") {\n        if (n < 2) listener = false;\n        for (capture in type) this.each(d3_selection_on(capture, type[capture], listener));\n        return this;\n      }\n      if (n < 2) return (n = this.node()[\"__on\" + type]) && n._;\n      capture = false;\n    }\n    return this.each(d3_selection_on(type, listener, capture));\n  };\n  function d3_selection_on(type, listener, capture) {\n    var name = \"__on\" + type, i = type.indexOf(\".\"), wrap = d3_selection_onListener;\n    if (i > 0) type = type.slice(0, i);\n    var filter = d3_selection_onFilters.get(type);\n    if (filter) type = filter, wrap = d3_selection_onFilter;\n    function onRemove() {\n      var l = this[name];\n      if (l) {\n        this.removeEventListener(type, l, l.$);\n        delete this[name];\n      }\n    }\n    function onAdd() {\n      var l = wrap(listener, d3_array(arguments));\n      onRemove.call(this);\n      this.addEventListener(type, this[name] = l, l.$ = capture);\n      l._ = listener;\n    }\n    function removeAll() {\n      var re = new RegExp(\"^__on([^.]+)\" + d3.requote(type) + \"$\"), match;\n      for (var name in this) {\n        if (match = name.match(re)) {\n          var l = this[name];\n          this.removeEventListener(match[1], l, l.$);\n          delete this[name];\n        }\n      }\n    }\n    return i ? listener ? onAdd : onRemove : listener ? d3_noop : removeAll;\n  }\n  var d3_selection_onFilters = d3.map({\n    mouseenter: \"mouseover\",\n    mouseleave: \"mouseout\"\n  });\n  if (d3_document) {\n    d3_selection_onFilters.forEach(function(k) {\n      if (\"on\" + k in d3_document) d3_selection_onFilters.remove(k);\n    });\n  }\n  function d3_selection_onListener(listener, argumentz) {\n    return function(e) {\n      var o = d3.event;\n      d3.event = e;\n      argumentz[0] = this.__data__;\n      try {\n        listener.apply(this, argumentz);\n      } finally {\n        d3.event = o;\n      }\n    };\n  }\n  function d3_selection_onFilter(listener, argumentz) {\n    var l = d3_selection_onListener(listener, argumentz);\n    return function(e) {\n      var target = this, related = e.relatedTarget;\n      if (!related || related !== target && !(related.compareDocumentPosition(target) & 8)) {\n        l.call(target, e);\n      }\n    };\n  }\n  var d3_event_dragSelect, d3_event_dragId = 0;\n  function d3_event_dragSuppress(node) {\n    var name = \".dragsuppress-\" + ++d3_event_dragId, click = \"click\" + name, w = d3.select(d3_window(node)).on(\"touchmove\" + name, d3_eventPreventDefault).on(\"dragstart\" + name, d3_eventPreventDefault).on(\"selectstart\" + name, d3_eventPreventDefault);\n    if (d3_event_dragSelect == null) {\n      d3_event_dragSelect = \"onselectstart\" in node ? false : d3_vendorSymbol(node.style, \"userSelect\");\n    }\n    if (d3_event_dragSelect) {\n      var style = d3_documentElement(node).style, select = style[d3_event_dragSelect];\n      style[d3_event_dragSelect] = \"none\";\n    }\n    return function(suppressClick) {\n      w.on(name, null);\n      if (d3_event_dragSelect) style[d3_event_dragSelect] = select;\n      if (suppressClick) {\n        var off = function() {\n          w.on(click, null);\n        };\n        w.on(click, function() {\n          d3_eventPreventDefault();\n          off();\n        }, true);\n        setTimeout(off, 0);\n      }\n    };\n  }\n  d3.mouse = function(container) {\n    return d3_mousePoint(container, d3_eventSource());\n  };\n  var d3_mouse_bug44083 = this.navigator && /WebKit/.test(this.navigator.userAgent) ? -1 : 0;\n  function d3_mousePoint(container, e) {\n    if (e.changedTouches) e = e.changedTouches[0];\n    var svg = container.ownerSVGElement || container;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      if (d3_mouse_bug44083 < 0) {\n        var window = d3_window(container);\n        if (window.scrollX || window.scrollY) {\n          svg = d3.select(\"body\").append(\"svg\").style({\n            position: \"absolute\",\n            top: 0,\n            left: 0,\n            margin: 0,\n            padding: 0,\n            border: \"none\"\n          }, \"important\");\n          var ctm = svg[0][0].getScreenCTM();\n          d3_mouse_bug44083 = !(ctm.f || ctm.e);\n          svg.remove();\n        }\n      }\n      if (d3_mouse_bug44083) point.x = e.pageX, point.y = e.pageY; else point.x = e.clientX, \n      point.y = e.clientY;\n      point = point.matrixTransform(container.getScreenCTM().inverse());\n      return [ point.x, point.y ];\n    }\n    var rect = container.getBoundingClientRect();\n    return [ e.clientX - rect.left - container.clientLeft, e.clientY - rect.top - container.clientTop ];\n  }\n  d3.touch = function(container, touches, identifier) {\n    if (arguments.length < 3) identifier = touches, touches = d3_eventSource().changedTouches;\n    if (touches) for (var i = 0, n = touches.length, touch; i < n; ++i) {\n      if ((touch = touches[i]).identifier === identifier) {\n        return d3_mousePoint(container, touch);\n      }\n    }\n  };\n  d3.behavior.drag = function() {\n    var event = d3_eventDispatch(drag, \"drag\", \"dragstart\", \"dragend\"), origin = null, mousedown = dragstart(d3_noop, d3.mouse, d3_window, \"mousemove\", \"mouseup\"), touchstart = dragstart(d3_behavior_dragTouchId, d3.touch, d3_identity, \"touchmove\", \"touchend\");\n    function drag() {\n      this.on(\"mousedown.drag\", mousedown).on(\"touchstart.drag\", touchstart);\n    }\n    function dragstart(id, position, subject, move, end) {\n      return function() {\n        var that = this, target = d3.event.target, parent = that.parentNode, dispatch = event.of(that, arguments), dragged = 0, dragId = id(), dragName = \".drag\" + (dragId == null ? \"\" : \"-\" + dragId), dragOffset, dragSubject = d3.select(subject(target)).on(move + dragName, moved).on(end + dragName, ended), dragRestore = d3_event_dragSuppress(target), position0 = position(parent, dragId);\n        if (origin) {\n          dragOffset = origin.apply(that, arguments);\n          dragOffset = [ dragOffset.x - position0[0], dragOffset.y - position0[1] ];\n        } else {\n          dragOffset = [ 0, 0 ];\n        }\n        dispatch({\n          type: \"dragstart\"\n        });\n        function moved() {\n          var position1 = position(parent, dragId), dx, dy;\n          if (!position1) return;\n          dx = position1[0] - position0[0];\n          dy = position1[1] - position0[1];\n          dragged |= dx | dy;\n          position0 = position1;\n          dispatch({\n            type: \"drag\",\n            x: position1[0] + dragOffset[0],\n            y: position1[1] + dragOffset[1],\n            dx: dx,\n            dy: dy\n          });\n        }\n        function ended() {\n          if (!position(parent, dragId)) return;\n          dragSubject.on(move + dragName, null).on(end + dragName, null);\n          dragRestore(dragged && d3.event.target === target);\n          dispatch({\n            type: \"dragend\"\n          });\n        }\n      };\n    }\n    drag.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return drag;\n    };\n    return d3.rebind(drag, event, \"on\");\n  };\n  function d3_behavior_dragTouchId() {\n    return d3.event.changedTouches[0].identifier;\n  }\n  d3.touches = function(container, touches) {\n    if (arguments.length < 2) touches = d3_eventSource().touches;\n    return touches ? d3_array(touches).map(function(touch) {\n      var point = d3_mousePoint(container, touch);\n      point.identifier = touch.identifier;\n      return point;\n    }) : [];\n  };\n  var ε = 1e-6, ε2 = ε * ε, π = Math.PI, τ = 2 * π, τε = τ - ε, halfπ = π / 2, d3_radians = π / 180, d3_degrees = 180 / π;\n  function d3_sgn(x) {\n    return x > 0 ? 1 : x < 0 ? -1 : 0;\n  }\n  function d3_cross2d(a, b, c) {\n    return (b[0] - a[0]) * (c[1] - a[1]) - (b[1] - a[1]) * (c[0] - a[0]);\n  }\n  function d3_acos(x) {\n    return x > 1 ? 0 : x < -1 ? π : Math.acos(x);\n  }\n  function d3_asin(x) {\n    return x > 1 ? halfπ : x < -1 ? -halfπ : Math.asin(x);\n  }\n  function d3_sinh(x) {\n    return ((x = Math.exp(x)) - 1 / x) / 2;\n  }\n  function d3_cosh(x) {\n    return ((x = Math.exp(x)) + 1 / x) / 2;\n  }\n  function d3_tanh(x) {\n    return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n  }\n  function d3_haversin(x) {\n    return (x = Math.sin(x / 2)) * x;\n  }\n  var ρ = Math.SQRT2, ρ2 = 2, ρ4 = 4;\n  d3.interpolateZoom = function(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2], ux1 = p1[0], uy1 = p1[1], w1 = p1[2];\n    var dx = ux1 - ux0, dy = uy1 - uy0, d2 = dx * dx + dy * dy, d1 = Math.sqrt(d2), b0 = (w1 * w1 - w0 * w0 + ρ4 * d2) / (2 * w0 * ρ2 * d1), b1 = (w1 * w1 - w0 * w0 - ρ4 * d2) / (2 * w1 * ρ2 * d1), r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0), r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1), dr = r1 - r0, S = (dr || Math.log(w1 / w0)) / ρ;\n    function interpolate(t) {\n      var s = t * S;\n      if (dr) {\n        var coshr0 = d3_cosh(r0), u = w0 / (ρ2 * d1) * (coshr0 * d3_tanh(ρ * s + r0) - d3_sinh(r0));\n        return [ ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / d3_cosh(ρ * s + r0) ];\n      }\n      return [ ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(ρ * s) ];\n    }\n    interpolate.duration = S * 1e3;\n    return interpolate;\n  };\n  d3.behavior.zoom = function() {\n    var view = {\n      x: 0,\n      y: 0,\n      k: 1\n    }, translate0, center0, center, size = [ 960, 500 ], scaleExtent = d3_behavior_zoomInfinity, duration = 250, zooming = 0, mousedown = \"mousedown.zoom\", mousemove = \"mousemove.zoom\", mouseup = \"mouseup.zoom\", mousewheelTimer, touchstart = \"touchstart.zoom\", touchtime, event = d3_eventDispatch(zoom, \"zoomstart\", \"zoom\", \"zoomend\"), x0, x1, y0, y1;\n    if (!d3_behavior_zoomWheel) {\n      d3_behavior_zoomWheel = \"onwheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return -d3.event.deltaY * (d3.event.deltaMode ? 120 : 1);\n      }, \"wheel\") : \"onmousewheel\" in d3_document ? (d3_behavior_zoomDelta = function() {\n        return d3.event.wheelDelta;\n      }, \"mousewheel\") : (d3_behavior_zoomDelta = function() {\n        return -d3.event.detail;\n      }, \"MozMousePixelScroll\");\n    }\n    function zoom(g) {\n      g.on(mousedown, mousedowned).on(d3_behavior_zoomWheel + \".zoom\", mousewheeled).on(\"dblclick.zoom\", dblclicked).on(touchstart, touchstarted);\n    }\n    zoom.event = function(g) {\n      g.each(function() {\n        var dispatch = event.of(this, arguments), view1 = view;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.zoom\", function() {\n            view = this.__chart__ || {\n              x: 0,\n              y: 0,\n              k: 1\n            };\n            zoomstarted(dispatch);\n          }).tween(\"zoom:zoom\", function() {\n            var dx = size[0], dy = size[1], cx = center0 ? center0[0] : dx / 2, cy = center0 ? center0[1] : dy / 2, i = d3.interpolateZoom([ (cx - view.x) / view.k, (cy - view.y) / view.k, dx / view.k ], [ (cx - view1.x) / view1.k, (cy - view1.y) / view1.k, dx / view1.k ]);\n            return function(t) {\n              var l = i(t), k = dx / l[2];\n              this.__chart__ = view = {\n                x: cx - l[0] * k,\n                y: cy - l[1] * k,\n                k: k\n              };\n              zoomed(dispatch);\n            };\n          }).each(\"interrupt.zoom\", function() {\n            zoomended(dispatch);\n          }).each(\"end.zoom\", function() {\n            zoomended(dispatch);\n          });\n        } else {\n          this.__chart__ = view;\n          zoomstarted(dispatch);\n          zoomed(dispatch);\n          zoomended(dispatch);\n        }\n      });\n    };\n    zoom.translate = function(_) {\n      if (!arguments.length) return [ view.x, view.y ];\n      view = {\n        x: +_[0],\n        y: +_[1],\n        k: view.k\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scale = function(_) {\n      if (!arguments.length) return view.k;\n      view = {\n        x: view.x,\n        y: view.y,\n        k: +_\n      };\n      rescale();\n      return zoom;\n    };\n    zoom.scaleExtent = function(_) {\n      if (!arguments.length) return scaleExtent;\n      scaleExtent = _ == null ? d3_behavior_zoomInfinity : [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.center = function(_) {\n      if (!arguments.length) return center;\n      center = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.size = function(_) {\n      if (!arguments.length) return size;\n      size = _ && [ +_[0], +_[1] ];\n      return zoom;\n    };\n    zoom.duration = function(_) {\n      if (!arguments.length) return duration;\n      duration = +_;\n      return zoom;\n    };\n    zoom.x = function(z) {\n      if (!arguments.length) return x1;\n      x1 = z;\n      x0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    zoom.y = function(z) {\n      if (!arguments.length) return y1;\n      y1 = z;\n      y0 = z.copy();\n      view = {\n        x: 0,\n        y: 0,\n        k: 1\n      };\n      return zoom;\n    };\n    function location(p) {\n      return [ (p[0] - view.x) / view.k, (p[1] - view.y) / view.k ];\n    }\n    function point(l) {\n      return [ l[0] * view.k + view.x, l[1] * view.k + view.y ];\n    }\n    function scaleTo(s) {\n      view.k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], s));\n    }\n    function translateTo(p, l) {\n      l = point(l);\n      view.x += p[0] - l[0];\n      view.y += p[1] - l[1];\n    }\n    function zoomTo(that, p, l, k) {\n      that.__chart__ = {\n        x: view.x,\n        y: view.y,\n        k: view.k\n      };\n      scaleTo(Math.pow(2, k));\n      translateTo(center0 = p, l);\n      that = d3.select(that);\n      if (duration > 0) that = that.transition().duration(duration);\n      that.call(zoom.event);\n    }\n    function rescale() {\n      if (x1) x1.domain(x0.range().map(function(x) {\n        return (x - view.x) / view.k;\n      }).map(x0.invert));\n      if (y1) y1.domain(y0.range().map(function(y) {\n        return (y - view.y) / view.k;\n      }).map(y0.invert));\n    }\n    function zoomstarted(dispatch) {\n      if (!zooming++) dispatch({\n        type: \"zoomstart\"\n      });\n    }\n    function zoomed(dispatch) {\n      rescale();\n      dispatch({\n        type: \"zoom\",\n        scale: view.k,\n        translate: [ view.x, view.y ]\n      });\n    }\n    function zoomended(dispatch) {\n      if (!--zooming) dispatch({\n        type: \"zoomend\"\n      });\n      center0 = null;\n    }\n    function mousedowned() {\n      var that = this, target = d3.event.target, dispatch = event.of(that, arguments), dragged = 0, subject = d3.select(d3_window(that)).on(mousemove, moved).on(mouseup, ended), location0 = location(d3.mouse(that)), dragRestore = d3_event_dragSuppress(that);\n      d3_selection_interrupt.call(that);\n      zoomstarted(dispatch);\n      function moved() {\n        dragged = 1;\n        translateTo(d3.mouse(that), location0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        subject.on(mousemove, null).on(mouseup, null);\n        dragRestore(dragged && d3.event.target === target);\n        zoomended(dispatch);\n      }\n    }\n    function touchstarted() {\n      var that = this, dispatch = event.of(that, arguments), locations0 = {}, distance0 = 0, scale0, zoomName = \".zoom-\" + d3.event.changedTouches[0].identifier, touchmove = \"touchmove\" + zoomName, touchend = \"touchend\" + zoomName, targets = [], subject = d3.select(that), dragRestore = d3_event_dragSuppress(that);\n      started();\n      zoomstarted(dispatch);\n      subject.on(mousedown, null).on(touchstart, started);\n      function relocate() {\n        var touches = d3.touches(that);\n        scale0 = view.k;\n        touches.forEach(function(t) {\n          if (t.identifier in locations0) locations0[t.identifier] = location(t);\n        });\n        return touches;\n      }\n      function started() {\n        var target = d3.event.target;\n        d3.select(target).on(touchmove, moved).on(touchend, ended);\n        targets.push(target);\n        var changed = d3.event.changedTouches;\n        for (var i = 0, n = changed.length; i < n; ++i) {\n          locations0[changed[i].identifier] = null;\n        }\n        var touches = relocate(), now = Date.now();\n        if (touches.length === 1) {\n          if (now - touchtime < 500) {\n            var p = touches[0];\n            zoomTo(that, p, locations0[p.identifier], Math.floor(Math.log(view.k) / Math.LN2) + 1);\n            d3_eventPreventDefault();\n          }\n          touchtime = now;\n        } else if (touches.length > 1) {\n          var p = touches[0], q = touches[1], dx = p[0] - q[0], dy = p[1] - q[1];\n          distance0 = dx * dx + dy * dy;\n        }\n      }\n      function moved() {\n        var touches = d3.touches(that), p0, l0, p1, l1;\n        d3_selection_interrupt.call(that);\n        for (var i = 0, n = touches.length; i < n; ++i, l1 = null) {\n          p1 = touches[i];\n          if (l1 = locations0[p1.identifier]) {\n            if (l0) break;\n            p0 = p1, l0 = l1;\n          }\n        }\n        if (l1) {\n          var distance1 = (distance1 = p1[0] - p0[0]) * distance1 + (distance1 = p1[1] - p0[1]) * distance1, scale1 = distance0 && Math.sqrt(distance1 / distance0);\n          p0 = [ (p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2 ];\n          l0 = [ (l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2 ];\n          scaleTo(scale1 * scale0);\n        }\n        touchtime = null;\n        translateTo(p0, l0);\n        zoomed(dispatch);\n      }\n      function ended() {\n        if (d3.event.touches.length) {\n          var changed = d3.event.changedTouches;\n          for (var i = 0, n = changed.length; i < n; ++i) {\n            delete locations0[changed[i].identifier];\n          }\n          for (var identifier in locations0) {\n            return void relocate();\n          }\n        }\n        d3.selectAll(targets).on(zoomName, null);\n        subject.on(mousedown, mousedowned).on(touchstart, touchstarted);\n        dragRestore();\n        zoomended(dispatch);\n      }\n    }\n    function mousewheeled() {\n      var dispatch = event.of(this, arguments);\n      if (mousewheelTimer) clearTimeout(mousewheelTimer); else translate0 = location(center0 = center || d3.mouse(this)), \n      d3_selection_interrupt.call(this), zoomstarted(dispatch);\n      mousewheelTimer = setTimeout(function() {\n        mousewheelTimer = null;\n        zoomended(dispatch);\n      }, 50);\n      d3_eventPreventDefault();\n      scaleTo(Math.pow(2, d3_behavior_zoomDelta() * .002) * view.k);\n      translateTo(center0, translate0);\n      zoomed(dispatch);\n    }\n    function dblclicked() {\n      var p = d3.mouse(this), k = Math.log(view.k) / Math.LN2;\n      zoomTo(this, p, location(p), d3.event.shiftKey ? Math.ceil(k) - 1 : Math.floor(k) + 1);\n    }\n    return d3.rebind(zoom, event, \"on\");\n  };\n  var d3_behavior_zoomInfinity = [ 0, Infinity ], d3_behavior_zoomDelta, d3_behavior_zoomWheel;\n  d3.color = d3_color;\n  function d3_color() {}\n  d3_color.prototype.toString = function() {\n    return this.rgb() + \"\";\n  };\n  d3.hsl = d3_hsl;\n  function d3_hsl(h, s, l) {\n    return this instanceof d3_hsl ? void (this.h = +h, this.s = +s, this.l = +l) : arguments.length < 2 ? h instanceof d3_hsl ? new d3_hsl(h.h, h.s, h.l) : d3_rgb_parse(\"\" + h, d3_rgb_hsl, d3_hsl) : new d3_hsl(h, s, l);\n  }\n  var d3_hslPrototype = d3_hsl.prototype = new d3_color();\n  d3_hslPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, this.l / k);\n  };\n  d3_hslPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_hsl(this.h, this.s, k * this.l);\n  };\n  d3_hslPrototype.rgb = function() {\n    return d3_hsl_rgb(this.h, this.s, this.l);\n  };\n  function d3_hsl_rgb(h, s, l) {\n    var m1, m2;\n    h = isNaN(h) ? 0 : (h %= 360) < 0 ? h + 360 : h;\n    s = isNaN(s) ? 0 : s < 0 ? 0 : s > 1 ? 1 : s;\n    l = l < 0 ? 0 : l > 1 ? 1 : l;\n    m2 = l <= .5 ? l * (1 + s) : l + s - l * s;\n    m1 = 2 * l - m2;\n    function v(h) {\n      if (h > 360) h -= 360; else if (h < 0) h += 360;\n      if (h < 60) return m1 + (m2 - m1) * h / 60;\n      if (h < 180) return m2;\n      if (h < 240) return m1 + (m2 - m1) * (240 - h) / 60;\n      return m1;\n    }\n    function vv(h) {\n      return Math.round(v(h) * 255);\n    }\n    return new d3_rgb(vv(h + 120), vv(h), vv(h - 120));\n  }\n  d3.hcl = d3_hcl;\n  function d3_hcl(h, c, l) {\n    return this instanceof d3_hcl ? void (this.h = +h, this.c = +c, this.l = +l) : arguments.length < 2 ? h instanceof d3_hcl ? new d3_hcl(h.h, h.c, h.l) : h instanceof d3_lab ? d3_lab_hcl(h.l, h.a, h.b) : d3_lab_hcl((h = d3_rgb_lab((h = d3.rgb(h)).r, h.g, h.b)).l, h.a, h.b) : new d3_hcl(h, c, l);\n  }\n  var d3_hclPrototype = d3_hcl.prototype = new d3_color();\n  d3_hclPrototype.brighter = function(k) {\n    return new d3_hcl(this.h, this.c, Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.darker = function(k) {\n    return new d3_hcl(this.h, this.c, Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)));\n  };\n  d3_hclPrototype.rgb = function() {\n    return d3_hcl_lab(this.h, this.c, this.l).rgb();\n  };\n  function d3_hcl_lab(h, c, l) {\n    if (isNaN(h)) h = 0;\n    if (isNaN(c)) c = 0;\n    return new d3_lab(l, Math.cos(h *= d3_radians) * c, Math.sin(h) * c);\n  }\n  d3.lab = d3_lab;\n  function d3_lab(l, a, b) {\n    return this instanceof d3_lab ? void (this.l = +l, this.a = +a, this.b = +b) : arguments.length < 2 ? l instanceof d3_lab ? new d3_lab(l.l, l.a, l.b) : l instanceof d3_hcl ? d3_hcl_lab(l.h, l.c, l.l) : d3_rgb_lab((l = d3_rgb(l)).r, l.g, l.b) : new d3_lab(l, a, b);\n  }\n  var d3_lab_K = 18;\n  var d3_lab_X = .95047, d3_lab_Y = 1, d3_lab_Z = 1.08883;\n  var d3_labPrototype = d3_lab.prototype = new d3_color();\n  d3_labPrototype.brighter = function(k) {\n    return new d3_lab(Math.min(100, this.l + d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.darker = function(k) {\n    return new d3_lab(Math.max(0, this.l - d3_lab_K * (arguments.length ? k : 1)), this.a, this.b);\n  };\n  d3_labPrototype.rgb = function() {\n    return d3_lab_rgb(this.l, this.a, this.b);\n  };\n  function d3_lab_rgb(l, a, b) {\n    var y = (l + 16) / 116, x = y + a / 500, z = y - b / 200;\n    x = d3_lab_xyz(x) * d3_lab_X;\n    y = d3_lab_xyz(y) * d3_lab_Y;\n    z = d3_lab_xyz(z) * d3_lab_Z;\n    return new d3_rgb(d3_xyz_rgb(3.2404542 * x - 1.5371385 * y - .4985314 * z), d3_xyz_rgb(-.969266 * x + 1.8760108 * y + .041556 * z), d3_xyz_rgb(.0556434 * x - .2040259 * y + 1.0572252 * z));\n  }\n  function d3_lab_hcl(l, a, b) {\n    return l > 0 ? new d3_hcl(Math.atan2(b, a) * d3_degrees, Math.sqrt(a * a + b * b), l) : new d3_hcl(NaN, NaN, l);\n  }\n  function d3_lab_xyz(x) {\n    return x > .206893034 ? x * x * x : (x - 4 / 29) / 7.787037;\n  }\n  function d3_xyz_lab(x) {\n    return x > .008856 ? Math.pow(x, 1 / 3) : 7.787037 * x + 4 / 29;\n  }\n  function d3_xyz_rgb(r) {\n    return Math.round(255 * (r <= .00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - .055));\n  }\n  d3.rgb = d3_rgb;\n  function d3_rgb(r, g, b) {\n    return this instanceof d3_rgb ? void (this.r = ~~r, this.g = ~~g, this.b = ~~b) : arguments.length < 2 ? r instanceof d3_rgb ? new d3_rgb(r.r, r.g, r.b) : d3_rgb_parse(\"\" + r, d3_rgb, d3_hsl_rgb) : new d3_rgb(r, g, b);\n  }\n  function d3_rgbNumber(value) {\n    return new d3_rgb(value >> 16, value >> 8 & 255, value & 255);\n  }\n  function d3_rgbString(value) {\n    return d3_rgbNumber(value) + \"\";\n  }\n  var d3_rgbPrototype = d3_rgb.prototype = new d3_color();\n  d3_rgbPrototype.brighter = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    var r = this.r, g = this.g, b = this.b, i = 30;\n    if (!r && !g && !b) return new d3_rgb(i, i, i);\n    if (r && r < i) r = i;\n    if (g && g < i) g = i;\n    if (b && b < i) b = i;\n    return new d3_rgb(Math.min(255, r / k), Math.min(255, g / k), Math.min(255, b / k));\n  };\n  d3_rgbPrototype.darker = function(k) {\n    k = Math.pow(.7, arguments.length ? k : 1);\n    return new d3_rgb(k * this.r, k * this.g, k * this.b);\n  };\n  d3_rgbPrototype.hsl = function() {\n    return d3_rgb_hsl(this.r, this.g, this.b);\n  };\n  d3_rgbPrototype.toString = function() {\n    return \"#\" + d3_rgb_hex(this.r) + d3_rgb_hex(this.g) + d3_rgb_hex(this.b);\n  };\n  function d3_rgb_hex(v) {\n    return v < 16 ? \"0\" + Math.max(0, v).toString(16) : Math.min(255, v).toString(16);\n  }\n  function d3_rgb_parse(format, rgb, hsl) {\n    var r = 0, g = 0, b = 0, m1, m2, color;\n    m1 = /([a-z]+)\\((.*)\\)/i.exec(format);\n    if (m1) {\n      m2 = m1[2].split(\",\");\n      switch (m1[1]) {\n       case \"hsl\":\n        {\n          return hsl(parseFloat(m2[0]), parseFloat(m2[1]) / 100, parseFloat(m2[2]) / 100);\n        }\n\n       case \"rgb\":\n        {\n          return rgb(d3_rgb_parseNumber(m2[0]), d3_rgb_parseNumber(m2[1]), d3_rgb_parseNumber(m2[2]));\n        }\n      }\n    }\n    if (color = d3_rgb_names.get(format.toLowerCase())) {\n      return rgb(color.r, color.g, color.b);\n    }\n    if (format != null && format.charAt(0) === \"#\" && !isNaN(color = parseInt(format.slice(1), 16))) {\n      if (format.length === 4) {\n        r = (color & 3840) >> 4;\n        r = r >> 4 | r;\n        g = color & 240;\n        g = g >> 4 | g;\n        b = color & 15;\n        b = b << 4 | b;\n      } else if (format.length === 7) {\n        r = (color & 16711680) >> 16;\n        g = (color & 65280) >> 8;\n        b = color & 255;\n      }\n    }\n    return rgb(r, g, b);\n  }\n  function d3_rgb_hsl(r, g, b) {\n    var min = Math.min(r /= 255, g /= 255, b /= 255), max = Math.max(r, g, b), d = max - min, h, s, l = (max + min) / 2;\n    if (d) {\n      s = l < .5 ? d / (max + min) : d / (2 - max - min);\n      if (r == max) h = (g - b) / d + (g < b ? 6 : 0); else if (g == max) h = (b - r) / d + 2; else h = (r - g) / d + 4;\n      h *= 60;\n    } else {\n      h = NaN;\n      s = l > 0 && l < 1 ? 0 : h;\n    }\n    return new d3_hsl(h, s, l);\n  }\n  function d3_rgb_lab(r, g, b) {\n    r = d3_rgb_xyz(r);\n    g = d3_rgb_xyz(g);\n    b = d3_rgb_xyz(b);\n    var x = d3_xyz_lab((.4124564 * r + .3575761 * g + .1804375 * b) / d3_lab_X), y = d3_xyz_lab((.2126729 * r + .7151522 * g + .072175 * b) / d3_lab_Y), z = d3_xyz_lab((.0193339 * r + .119192 * g + .9503041 * b) / d3_lab_Z);\n    return d3_lab(116 * y - 16, 500 * (x - y), 200 * (y - z));\n  }\n  function d3_rgb_xyz(r) {\n    return (r /= 255) <= .04045 ? r / 12.92 : Math.pow((r + .055) / 1.055, 2.4);\n  }\n  function d3_rgb_parseNumber(c) {\n    var f = parseFloat(c);\n    return c.charAt(c.length - 1) === \"%\" ? Math.round(f * 2.55) : f;\n  }\n  var d3_rgb_names = d3.map({\n    aliceblue: 15792383,\n    antiquewhite: 16444375,\n    aqua: 65535,\n    aquamarine: 8388564,\n    azure: 15794175,\n    beige: 16119260,\n    bisque: 16770244,\n    black: 0,\n    blanchedalmond: 16772045,\n    blue: 255,\n    blueviolet: 9055202,\n    brown: 10824234,\n    burlywood: 14596231,\n    cadetblue: 6266528,\n    chartreuse: 8388352,\n    chocolate: 13789470,\n    coral: 16744272,\n    cornflowerblue: 6591981,\n    cornsilk: 16775388,\n    crimson: 14423100,\n    cyan: 65535,\n    darkblue: 139,\n    darkcyan: 35723,\n    darkgoldenrod: 12092939,\n    darkgray: 11119017,\n    darkgreen: 25600,\n    darkgrey: 11119017,\n    darkkhaki: 12433259,\n    darkmagenta: 9109643,\n    darkolivegreen: 5597999,\n    darkorange: 16747520,\n    darkorchid: 10040012,\n    darkred: 9109504,\n    darksalmon: 15308410,\n    darkseagreen: 9419919,\n    darkslateblue: 4734347,\n    darkslategray: 3100495,\n    darkslategrey: 3100495,\n    darkturquoise: 52945,\n    darkviolet: 9699539,\n    deeppink: 16716947,\n    deepskyblue: 49151,\n    dimgray: 6908265,\n    dimgrey: 6908265,\n    dodgerblue: 2003199,\n    firebrick: 11674146,\n    floralwhite: 16775920,\n    forestgreen: 2263842,\n    fuchsia: 16711935,\n    gainsboro: 14474460,\n    ghostwhite: 16316671,\n    gold: 16766720,\n    goldenrod: 14329120,\n    gray: 8421504,\n    green: 32768,\n    greenyellow: 11403055,\n    grey: 8421504,\n    honeydew: 15794160,\n    hotpink: 16738740,\n    indianred: 13458524,\n    indigo: 4915330,\n    ivory: 16777200,\n    khaki: 15787660,\n    lavender: 15132410,\n    lavenderblush: 16773365,\n    lawngreen: 8190976,\n    lemonchiffon: 16775885,\n    lightblue: 11393254,\n    lightcoral: 15761536,\n    lightcyan: 14745599,\n    lightgoldenrodyellow: 16448210,\n    lightgray: 13882323,\n    lightgreen: 9498256,\n    lightgrey: 13882323,\n    lightpink: 16758465,\n    lightsalmon: 16752762,\n    lightseagreen: 2142890,\n    lightskyblue: 8900346,\n    lightslategray: 7833753,\n    lightslategrey: 7833753,\n    lightsteelblue: 11584734,\n    lightyellow: 16777184,\n    lime: 65280,\n    limegreen: 3329330,\n    linen: 16445670,\n    magenta: 16711935,\n    maroon: 8388608,\n    mediumaquamarine: 6737322,\n    mediumblue: 205,\n    mediumorchid: 12211667,\n    mediumpurple: 9662683,\n    mediumseagreen: 3978097,\n    mediumslateblue: 8087790,\n    mediumspringgreen: 64154,\n    mediumturquoise: 4772300,\n    mediumvioletred: 13047173,\n    midnightblue: 1644912,\n    mintcream: 16121850,\n    mistyrose: 16770273,\n    moccasin: 16770229,\n    navajowhite: 16768685,\n    navy: 128,\n    oldlace: 16643558,\n    olive: 8421376,\n    olivedrab: 7048739,\n    orange: 16753920,\n    orangered: 16729344,\n    orchid: 14315734,\n    palegoldenrod: 15657130,\n    palegreen: 10025880,\n    paleturquoise: 11529966,\n    palevioletred: 14381203,\n    papayawhip: 16773077,\n    peachpuff: 16767673,\n    peru: 13468991,\n    pink: 16761035,\n    plum: 14524637,\n    powderblue: 11591910,\n    purple: 8388736,\n    rebeccapurple: 6697881,\n    red: 16711680,\n    rosybrown: 12357519,\n    royalblue: 4286945,\n    saddlebrown: 9127187,\n    salmon: 16416882,\n    sandybrown: 16032864,\n    seagreen: 3050327,\n    seashell: 16774638,\n    sienna: 10506797,\n    silver: 12632256,\n    skyblue: 8900331,\n    slateblue: 6970061,\n    slategray: 7372944,\n    slategrey: 7372944,\n    snow: 16775930,\n    springgreen: 65407,\n    steelblue: 4620980,\n    tan: 13808780,\n    teal: 32896,\n    thistle: 14204888,\n    tomato: 16737095,\n    turquoise: 4251856,\n    violet: 15631086,\n    wheat: 16113331,\n    white: 16777215,\n    whitesmoke: 16119285,\n    yellow: 16776960,\n    yellowgreen: 10145074\n  });\n  d3_rgb_names.forEach(function(key, value) {\n    d3_rgb_names.set(key, d3_rgbNumber(value));\n  });\n  function d3_functor(v) {\n    return typeof v === \"function\" ? v : function() {\n      return v;\n    };\n  }\n  d3.functor = d3_functor;\n  d3.xhr = d3_xhrType(d3_identity);\n  function d3_xhrType(response) {\n    return function(url, mimeType, callback) {\n      if (arguments.length === 2 && typeof mimeType === \"function\") callback = mimeType, \n      mimeType = null;\n      return d3_xhr(url, mimeType, response, callback);\n    };\n  }\n  function d3_xhr(url, mimeType, response, callback) {\n    var xhr = {}, dispatch = d3.dispatch(\"beforesend\", \"progress\", \"load\", \"error\"), headers = {}, request = new XMLHttpRequest(), responseType = null;\n    if (this.XDomainRequest && !(\"withCredentials\" in request) && /^(http(s)?:)?\\/\\//.test(url)) request = new XDomainRequest();\n    \"onload\" in request ? request.onload = request.onerror = respond : request.onreadystatechange = function() {\n      request.readyState > 3 && respond();\n    };\n    function respond() {\n      var status = request.status, result;\n      if (!status && d3_xhrHasResponse(request) || status >= 200 && status < 300 || status === 304) {\n        try {\n          result = response.call(xhr, request);\n        } catch (e) {\n          dispatch.error.call(xhr, e);\n          return;\n        }\n        dispatch.load.call(xhr, result);\n      } else {\n        dispatch.error.call(xhr, request);\n      }\n    }\n    request.onprogress = function(event) {\n      var o = d3.event;\n      d3.event = event;\n      try {\n        dispatch.progress.call(xhr, request);\n      } finally {\n        d3.event = o;\n      }\n    };\n    xhr.header = function(name, value) {\n      name = (name + \"\").toLowerCase();\n      if (arguments.length < 2) return headers[name];\n      if (value == null) delete headers[name]; else headers[name] = value + \"\";\n      return xhr;\n    };\n    xhr.mimeType = function(value) {\n      if (!arguments.length) return mimeType;\n      mimeType = value == null ? null : value + \"\";\n      return xhr;\n    };\n    xhr.responseType = function(value) {\n      if (!arguments.length) return responseType;\n      responseType = value;\n      return xhr;\n    };\n    xhr.response = function(value) {\n      response = value;\n      return xhr;\n    };\n    [ \"get\", \"post\" ].forEach(function(method) {\n      xhr[method] = function() {\n        return xhr.send.apply(xhr, [ method ].concat(d3_array(arguments)));\n      };\n    });\n    xhr.send = function(method, data, callback) {\n      if (arguments.length === 2 && typeof data === \"function\") callback = data, data = null;\n      request.open(method, url, true);\n      if (mimeType != null && !(\"accept\" in headers)) headers[\"accept\"] = mimeType + \",*/*\";\n      if (request.setRequestHeader) for (var name in headers) request.setRequestHeader(name, headers[name]);\n      if (mimeType != null && request.overrideMimeType) request.overrideMimeType(mimeType);\n      if (responseType != null) request.responseType = responseType;\n      if (callback != null) xhr.on(\"error\", callback).on(\"load\", function(request) {\n        callback(null, request);\n      });\n      dispatch.beforesend.call(xhr, request);\n      request.send(data == null ? null : data);\n      return xhr;\n    };\n    xhr.abort = function() {\n      request.abort();\n      return xhr;\n    };\n    d3.rebind(xhr, dispatch, \"on\");\n    return callback == null ? xhr : xhr.get(d3_xhr_fixCallback(callback));\n  }\n  function d3_xhr_fixCallback(callback) {\n    return callback.length === 1 ? function(error, request) {\n      callback(error == null ? request : null);\n    } : callback;\n  }\n  function d3_xhrHasResponse(request) {\n    var type = request.responseType;\n    return type && type !== \"text\" ? request.response : request.responseText;\n  }\n  d3.dsv = function(delimiter, mimeType) {\n    var reFormat = new RegExp('[\"' + delimiter + \"\\n]\"), delimiterCode = delimiter.charCodeAt(0);\n    function dsv(url, row, callback) {\n      if (arguments.length < 3) callback = row, row = null;\n      var xhr = d3_xhr(url, mimeType, row == null ? response : typedResponse(row), callback);\n      xhr.row = function(_) {\n        return arguments.length ? xhr.response((row = _) == null ? response : typedResponse(_)) : row;\n      };\n      return xhr;\n    }\n    function response(request) {\n      return dsv.parse(request.responseText);\n    }\n    function typedResponse(f) {\n      return function(request) {\n        return dsv.parse(request.responseText, f);\n      };\n    }\n    dsv.parse = function(text, f) {\n      var o;\n      return dsv.parseRows(text, function(row, i) {\n        if (o) return o(row, i - 1);\n        var a = new Function(\"d\", \"return {\" + row.map(function(name, i) {\n          return JSON.stringify(name) + \": d[\" + i + \"]\";\n        }).join(\",\") + \"}\");\n        o = f ? function(row, i) {\n          return f(a(row), i);\n        } : a;\n      });\n    };\n    dsv.parseRows = function(text, f) {\n      var EOL = {}, EOF = {}, rows = [], N = text.length, I = 0, n = 0, t, eol;\n      function token() {\n        if (I >= N) return EOF;\n        if (eol) return eol = false, EOL;\n        var j = I;\n        if (text.charCodeAt(j) === 34) {\n          var i = j;\n          while (i++ < N) {\n            if (text.charCodeAt(i) === 34) {\n              if (text.charCodeAt(i + 1) !== 34) break;\n              ++i;\n            }\n          }\n          I = i + 2;\n          var c = text.charCodeAt(i + 1);\n          if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(i + 2) === 10) ++I;\n          } else if (c === 10) {\n            eol = true;\n          }\n          return text.slice(j + 1, i).replace(/\"\"/g, '\"');\n        }\n        while (I < N) {\n          var c = text.charCodeAt(I++), k = 1;\n          if (c === 10) eol = true; else if (c === 13) {\n            eol = true;\n            if (text.charCodeAt(I) === 10) ++I, ++k;\n          } else if (c !== delimiterCode) continue;\n          return text.slice(j, I - k);\n        }\n        return text.slice(j);\n      }\n      while ((t = token()) !== EOF) {\n        var a = [];\n        while (t !== EOL && t !== EOF) {\n          a.push(t);\n          t = token();\n        }\n        if (f && (a = f(a, n++)) == null) continue;\n        rows.push(a);\n      }\n      return rows;\n    };\n    dsv.format = function(rows) {\n      if (Array.isArray(rows[0])) return dsv.formatRows(rows);\n      var fieldSet = new d3_Set(), fields = [];\n      rows.forEach(function(row) {\n        for (var field in row) {\n          if (!fieldSet.has(field)) {\n            fields.push(fieldSet.add(field));\n          }\n        }\n      });\n      return [ fields.map(formatValue).join(delimiter) ].concat(rows.map(function(row) {\n        return fields.map(function(field) {\n          return formatValue(row[field]);\n        }).join(delimiter);\n      })).join(\"\\n\");\n    };\n    dsv.formatRows = function(rows) {\n      return rows.map(formatRow).join(\"\\n\");\n    };\n    function formatRow(row) {\n      return row.map(formatValue).join(delimiter);\n    }\n    function formatValue(text) {\n      return reFormat.test(text) ? '\"' + text.replace(/\\\"/g, '\"\"') + '\"' : text;\n    }\n    return dsv;\n  };\n  d3.csv = d3.dsv(\",\", \"text/csv\");\n  d3.tsv = d3.dsv(\"\t\", \"text/tab-separated-values\");\n  var d3_timer_queueHead, d3_timer_queueTail, d3_timer_interval, d3_timer_timeout, d3_timer_active, d3_timer_frame = this[d3_vendorSymbol(this, \"requestAnimationFrame\")] || function(callback) {\n    setTimeout(callback, 17);\n  };\n  d3.timer = function(callback, delay, then) {\n    var n = arguments.length;\n    if (n < 2) delay = 0;\n    if (n < 3) then = Date.now();\n    var time = then + delay, timer = {\n      c: callback,\n      t: time,\n      f: false,\n      n: null\n    };\n    if (d3_timer_queueTail) d3_timer_queueTail.n = timer; else d3_timer_queueHead = timer;\n    d3_timer_queueTail = timer;\n    if (!d3_timer_interval) {\n      d3_timer_timeout = clearTimeout(d3_timer_timeout);\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  };\n  function d3_timer_step() {\n    var now = d3_timer_mark(), delay = d3_timer_sweep() - now;\n    if (delay > 24) {\n      if (isFinite(delay)) {\n        clearTimeout(d3_timer_timeout);\n        d3_timer_timeout = setTimeout(d3_timer_step, delay);\n      }\n      d3_timer_interval = 0;\n    } else {\n      d3_timer_interval = 1;\n      d3_timer_frame(d3_timer_step);\n    }\n  }\n  d3.timer.flush = function() {\n    d3_timer_mark();\n    d3_timer_sweep();\n  };\n  function d3_timer_mark() {\n    var now = Date.now();\n    d3_timer_active = d3_timer_queueHead;\n    while (d3_timer_active) {\n      if (now >= d3_timer_active.t) d3_timer_active.f = d3_timer_active.c(now - d3_timer_active.t);\n      d3_timer_active = d3_timer_active.n;\n    }\n    return now;\n  }\n  function d3_timer_sweep() {\n    var t0, t1 = d3_timer_queueHead, time = Infinity;\n    while (t1) {\n      if (t1.f) {\n        t1 = t0 ? t0.n = t1.n : d3_timer_queueHead = t1.n;\n      } else {\n        if (t1.t < time) time = t1.t;\n        t1 = (t0 = t1).n;\n      }\n    }\n    d3_timer_queueTail = t0;\n    return time;\n  }\n  function d3_format_precision(x, p) {\n    return p - (x ? Math.ceil(Math.log(x) / Math.LN10) : 1);\n  }\n  d3.round = function(x, n) {\n    return n ? Math.round(x * (n = Math.pow(10, n))) / n : Math.round(x);\n  };\n  var d3_formatPrefixes = [ \"y\", \"z\", \"a\", \"f\", \"p\", \"n\", \"µ\", \"m\", \"\", \"k\", \"M\", \"G\", \"T\", \"P\", \"E\", \"Z\", \"Y\" ].map(d3_formatPrefix);\n  d3.formatPrefix = function(value, precision) {\n    var i = 0;\n    if (value) {\n      if (value < 0) value *= -1;\n      if (precision) value = d3.round(value, d3_format_precision(value, precision));\n      i = 1 + Math.floor(1e-12 + Math.log(value) / Math.LN10);\n      i = Math.max(-24, Math.min(24, Math.floor((i - 1) / 3) * 3));\n    }\n    return d3_formatPrefixes[8 + i / 3];\n  };\n  function d3_formatPrefix(d, i) {\n    var k = Math.pow(10, abs(8 - i) * 3);\n    return {\n      scale: i > 8 ? function(d) {\n        return d / k;\n      } : function(d) {\n        return d * k;\n      },\n      symbol: d\n    };\n  }\n  function d3_locale_numberFormat(locale) {\n    var locale_decimal = locale.decimal, locale_thousands = locale.thousands, locale_grouping = locale.grouping, locale_currency = locale.currency, formatGroup = locale_grouping && locale_thousands ? function(value, width) {\n      var i = value.length, t = [], j = 0, g = locale_grouping[0], length = 0;\n      while (i > 0 && g > 0) {\n        if (length + g + 1 > width) g = Math.max(1, width - length);\n        t.push(value.substring(i -= g, i + g));\n        if ((length += g + 1) > width) break;\n        g = locale_grouping[j = (j + 1) % locale_grouping.length];\n      }\n      return t.reverse().join(locale_thousands);\n    } : d3_identity;\n    return function(specifier) {\n      var match = d3_format_re.exec(specifier), fill = match[1] || \" \", align = match[2] || \">\", sign = match[3] || \"-\", symbol = match[4] || \"\", zfill = match[5], width = +match[6], comma = match[7], precision = match[8], type = match[9], scale = 1, prefix = \"\", suffix = \"\", integer = false, exponent = true;\n      if (precision) precision = +precision.substring(1);\n      if (zfill || fill === \"0\" && align === \"=\") {\n        zfill = fill = \"0\";\n        align = \"=\";\n      }\n      switch (type) {\n       case \"n\":\n        comma = true;\n        type = \"g\";\n        break;\n\n       case \"%\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"f\";\n        break;\n\n       case \"p\":\n        scale = 100;\n        suffix = \"%\";\n        type = \"r\";\n        break;\n\n       case \"b\":\n       case \"o\":\n       case \"x\":\n       case \"X\":\n        if (symbol === \"#\") prefix = \"0\" + type.toLowerCase();\n\n       case \"c\":\n        exponent = false;\n\n       case \"d\":\n        integer = true;\n        precision = 0;\n        break;\n\n       case \"s\":\n        scale = -1;\n        type = \"r\";\n        break;\n      }\n      if (symbol === \"$\") prefix = locale_currency[0], suffix = locale_currency[1];\n      if (type == \"r\" && !precision) type = \"g\";\n      if (precision != null) {\n        if (type == \"g\") precision = Math.max(1, Math.min(21, precision)); else if (type == \"e\" || type == \"f\") precision = Math.max(0, Math.min(20, precision));\n      }\n      type = d3_format_types.get(type) || d3_format_typeDefault;\n      var zcomma = zfill && comma;\n      return function(value) {\n        var fullSuffix = suffix;\n        if (integer && value % 1) return \"\";\n        var negative = value < 0 || value === 0 && 1 / value < 0 ? (value = -value, \"-\") : sign === \"-\" ? \"\" : sign;\n        if (scale < 0) {\n          var unit = d3.formatPrefix(value, precision);\n          value = unit.scale(value);\n          fullSuffix = unit.symbol + suffix;\n        } else {\n          value *= scale;\n        }\n        value = type(value, precision);\n        var i = value.lastIndexOf(\".\"), before, after;\n        if (i < 0) {\n          var j = exponent ? value.lastIndexOf(\"e\") : -1;\n          if (j < 0) before = value, after = \"\"; else before = value.substring(0, j), after = value.substring(j);\n        } else {\n          before = value.substring(0, i);\n          after = locale_decimal + value.substring(i + 1);\n        }\n        if (!zfill && comma) before = formatGroup(before, Infinity);\n        var length = prefix.length + before.length + after.length + (zcomma ? 0 : negative.length), padding = length < width ? new Array(length = width - length + 1).join(fill) : \"\";\n        if (zcomma) before = formatGroup(padding + before, padding.length ? width - after.length : Infinity);\n        negative += prefix;\n        value = before + after;\n        return (align === \"<\" ? negative + value + padding : align === \">\" ? padding + negative + value : align === \"^\" ? padding.substring(0, length >>= 1) + negative + value + padding.substring(length) : negative + (zcomma ? value : padding + value)) + fullSuffix;\n      };\n    };\n  }\n  var d3_format_re = /(?:([^{])?([<>=^]))?([+\\- ])?([$#])?(0)?(\\d+)?(,)?(\\.-?\\d+)?([a-z%])?/i;\n  var d3_format_types = d3.map({\n    b: function(x) {\n      return x.toString(2);\n    },\n    c: function(x) {\n      return String.fromCharCode(x);\n    },\n    o: function(x) {\n      return x.toString(8);\n    },\n    x: function(x) {\n      return x.toString(16);\n    },\n    X: function(x) {\n      return x.toString(16).toUpperCase();\n    },\n    g: function(x, p) {\n      return x.toPrecision(p);\n    },\n    e: function(x, p) {\n      return x.toExponential(p);\n    },\n    f: function(x, p) {\n      return x.toFixed(p);\n    },\n    r: function(x, p) {\n      return (x = d3.round(x, d3_format_precision(x, p))).toFixed(Math.max(0, Math.min(20, d3_format_precision(x * (1 + 1e-15), p))));\n    }\n  });\n  function d3_format_typeDefault(x) {\n    return x + \"\";\n  }\n  var d3_time = d3.time = {}, d3_date = Date;\n  function d3_date_utc() {\n    this._ = new Date(arguments.length > 1 ? Date.UTC.apply(this, arguments) : arguments[0]);\n  }\n  d3_date_utc.prototype = {\n    getDate: function() {\n      return this._.getUTCDate();\n    },\n    getDay: function() {\n      return this._.getUTCDay();\n    },\n    getFullYear: function() {\n      return this._.getUTCFullYear();\n    },\n    getHours: function() {\n      return this._.getUTCHours();\n    },\n    getMilliseconds: function() {\n      return this._.getUTCMilliseconds();\n    },\n    getMinutes: function() {\n      return this._.getUTCMinutes();\n    },\n    getMonth: function() {\n      return this._.getUTCMonth();\n    },\n    getSeconds: function() {\n      return this._.getUTCSeconds();\n    },\n    getTime: function() {\n      return this._.getTime();\n    },\n    getTimezoneOffset: function() {\n      return 0;\n    },\n    valueOf: function() {\n      return this._.valueOf();\n    },\n    setDate: function() {\n      d3_time_prototype.setUTCDate.apply(this._, arguments);\n    },\n    setDay: function() {\n      d3_time_prototype.setUTCDay.apply(this._, arguments);\n    },\n    setFullYear: function() {\n      d3_time_prototype.setUTCFullYear.apply(this._, arguments);\n    },\n    setHours: function() {\n      d3_time_prototype.setUTCHours.apply(this._, arguments);\n    },\n    setMilliseconds: function() {\n      d3_time_prototype.setUTCMilliseconds.apply(this._, arguments);\n    },\n    setMinutes: function() {\n      d3_time_prototype.setUTCMinutes.apply(this._, arguments);\n    },\n    setMonth: function() {\n      d3_time_prototype.setUTCMonth.apply(this._, arguments);\n    },\n    setSeconds: function() {\n      d3_time_prototype.setUTCSeconds.apply(this._, arguments);\n    },\n    setTime: function() {\n      d3_time_prototype.setTime.apply(this._, arguments);\n    }\n  };\n  var d3_time_prototype = Date.prototype;\n  function d3_time_interval(local, step, number) {\n    function round(date) {\n      var d0 = local(date), d1 = offset(d0, 1);\n      return date - d0 < d1 - date ? d0 : d1;\n    }\n    function ceil(date) {\n      step(date = local(new d3_date(date - 1)), 1);\n      return date;\n    }\n    function offset(date, k) {\n      step(date = new d3_date(+date), k);\n      return date;\n    }\n    function range(t0, t1, dt) {\n      var time = ceil(t0), times = [];\n      if (dt > 1) {\n        while (time < t1) {\n          if (!(number(time) % dt)) times.push(new Date(+time));\n          step(time, 1);\n        }\n      } else {\n        while (time < t1) times.push(new Date(+time)), step(time, 1);\n      }\n      return times;\n    }\n    function range_utc(t0, t1, dt) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = t0;\n        return range(utc, t1, dt);\n      } finally {\n        d3_date = Date;\n      }\n    }\n    local.floor = local;\n    local.round = round;\n    local.ceil = ceil;\n    local.offset = offset;\n    local.range = range;\n    var utc = local.utc = d3_time_interval_utc(local);\n    utc.floor = utc;\n    utc.round = d3_time_interval_utc(round);\n    utc.ceil = d3_time_interval_utc(ceil);\n    utc.offset = d3_time_interval_utc(offset);\n    utc.range = range_utc;\n    return local;\n  }\n  function d3_time_interval_utc(method) {\n    return function(date, k) {\n      try {\n        d3_date = d3_date_utc;\n        var utc = new d3_date_utc();\n        utc._ = date;\n        return method(utc, k)._;\n      } finally {\n        d3_date = Date;\n      }\n    };\n  }\n  d3_time.year = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setMonth(0, 1);\n    return date;\n  }, function(date, offset) {\n    date.setFullYear(date.getFullYear() + offset);\n  }, function(date) {\n    return date.getFullYear();\n  });\n  d3_time.years = d3_time.year.range;\n  d3_time.years.utc = d3_time.year.utc.range;\n  d3_time.day = d3_time_interval(function(date) {\n    var day = new d3_date(2e3, 0);\n    day.setFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n    return day;\n  }, function(date, offset) {\n    date.setDate(date.getDate() + offset);\n  }, function(date) {\n    return date.getDate() - 1;\n  });\n  d3_time.days = d3_time.day.range;\n  d3_time.days.utc = d3_time.day.utc.range;\n  d3_time.dayOfYear = function(date) {\n    var year = d3_time.year(date);\n    return Math.floor((date - year - (date.getTimezoneOffset() - year.getTimezoneOffset()) * 6e4) / 864e5);\n  };\n  [ \"sunday\", \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\" ].forEach(function(day, i) {\n    i = 7 - i;\n    var interval = d3_time[day] = d3_time_interval(function(date) {\n      (date = d3_time.day(date)).setDate(date.getDate() - (date.getDay() + i) % 7);\n      return date;\n    }, function(date, offset) {\n      date.setDate(date.getDate() + Math.floor(offset) * 7);\n    }, function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7) - (day !== i);\n    });\n    d3_time[day + \"s\"] = interval.range;\n    d3_time[day + \"s\"].utc = interval.utc.range;\n    d3_time[day + \"OfYear\"] = function(date) {\n      var day = d3_time.year(date).getDay();\n      return Math.floor((d3_time.dayOfYear(date) + (day + i) % 7) / 7);\n    };\n  });\n  d3_time.week = d3_time.sunday;\n  d3_time.weeks = d3_time.sunday.range;\n  d3_time.weeks.utc = d3_time.sunday.utc.range;\n  d3_time.weekOfYear = d3_time.sundayOfYear;\n  function d3_locale_timeFormat(locale) {\n    var locale_dateTime = locale.dateTime, locale_date = locale.date, locale_time = locale.time, locale_periods = locale.periods, locale_days = locale.days, locale_shortDays = locale.shortDays, locale_months = locale.months, locale_shortMonths = locale.shortMonths;\n    function d3_time_format(template) {\n      var n = template.length;\n      function format(date) {\n        var string = [], i = -1, j = 0, c, p, f;\n        while (++i < n) {\n          if (template.charCodeAt(i) === 37) {\n            string.push(template.slice(j, i));\n            if ((p = d3_time_formatPads[c = template.charAt(++i)]) != null) c = template.charAt(++i);\n            if (f = d3_time_formats[c]) c = f(date, p == null ? c === \"e\" ? \" \" : \"0\" : p);\n            string.push(c);\n            j = i + 1;\n          }\n        }\n        string.push(template.slice(j, i));\n        return string.join(\"\");\n      }\n      format.parse = function(string) {\n        var d = {\n          y: 1900,\n          m: 0,\n          d: 1,\n          H: 0,\n          M: 0,\n          S: 0,\n          L: 0,\n          Z: null\n        }, i = d3_time_parse(d, template, string, 0);\n        if (i != string.length) return null;\n        if (\"p\" in d) d.H = d.H % 12 + d.p * 12;\n        var localZ = d.Z != null && d3_date !== d3_date_utc, date = new (localZ ? d3_date_utc : d3_date)();\n        if (\"j\" in d) date.setFullYear(d.y, 0, d.j); else if (\"w\" in d && (\"W\" in d || \"U\" in d)) {\n          date.setFullYear(d.y, 0, 1);\n          date.setFullYear(d.y, 0, \"W\" in d ? (d.w + 6) % 7 + d.W * 7 - (date.getDay() + 5) % 7 : d.w + d.U * 7 - (date.getDay() + 6) % 7);\n        } else date.setFullYear(d.y, d.m, d.d);\n        date.setHours(d.H + (d.Z / 100 | 0), d.M + d.Z % 100, d.S, d.L);\n        return localZ ? date._ : date;\n      };\n      format.toString = function() {\n        return template;\n      };\n      return format;\n    }\n    function d3_time_parse(date, template, string, j) {\n      var c, p, t, i = 0, n = template.length, m = string.length;\n      while (i < n) {\n        if (j >= m) return -1;\n        c = template.charCodeAt(i++);\n        if (c === 37) {\n          t = template.charAt(i++);\n          p = d3_time_parsers[t in d3_time_formatPads ? template.charAt(i++) : t];\n          if (!p || (j = p(date, string, j)) < 0) return -1;\n        } else if (c != string.charCodeAt(j++)) {\n          return -1;\n        }\n      }\n      return j;\n    }\n    d3_time_format.utc = function(template) {\n      var local = d3_time_format(template);\n      function format(date) {\n        try {\n          d3_date = d3_date_utc;\n          var utc = new d3_date();\n          utc._ = date;\n          return local(utc);\n        } finally {\n          d3_date = Date;\n        }\n      }\n      format.parse = function(string) {\n        try {\n          d3_date = d3_date_utc;\n          var date = local.parse(string);\n          return date && date._;\n        } finally {\n          d3_date = Date;\n        }\n      };\n      format.toString = local.toString;\n      return format;\n    };\n    d3_time_format.multi = d3_time_format.utc.multi = d3_time_formatMulti;\n    var d3_time_periodLookup = d3.map(), d3_time_dayRe = d3_time_formatRe(locale_days), d3_time_dayLookup = d3_time_formatLookup(locale_days), d3_time_dayAbbrevRe = d3_time_formatRe(locale_shortDays), d3_time_dayAbbrevLookup = d3_time_formatLookup(locale_shortDays), d3_time_monthRe = d3_time_formatRe(locale_months), d3_time_monthLookup = d3_time_formatLookup(locale_months), d3_time_monthAbbrevRe = d3_time_formatRe(locale_shortMonths), d3_time_monthAbbrevLookup = d3_time_formatLookup(locale_shortMonths);\n    locale_periods.forEach(function(p, i) {\n      d3_time_periodLookup.set(p.toLowerCase(), i);\n    });\n    var d3_time_formats = {\n      a: function(d) {\n        return locale_shortDays[d.getDay()];\n      },\n      A: function(d) {\n        return locale_days[d.getDay()];\n      },\n      b: function(d) {\n        return locale_shortMonths[d.getMonth()];\n      },\n      B: function(d) {\n        return locale_months[d.getMonth()];\n      },\n      c: d3_time_format(locale_dateTime),\n      d: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      e: function(d, p) {\n        return d3_time_formatPad(d.getDate(), p, 2);\n      },\n      H: function(d, p) {\n        return d3_time_formatPad(d.getHours(), p, 2);\n      },\n      I: function(d, p) {\n        return d3_time_formatPad(d.getHours() % 12 || 12, p, 2);\n      },\n      j: function(d, p) {\n        return d3_time_formatPad(1 + d3_time.dayOfYear(d), p, 3);\n      },\n      L: function(d, p) {\n        return d3_time_formatPad(d.getMilliseconds(), p, 3);\n      },\n      m: function(d, p) {\n        return d3_time_formatPad(d.getMonth() + 1, p, 2);\n      },\n      M: function(d, p) {\n        return d3_time_formatPad(d.getMinutes(), p, 2);\n      },\n      p: function(d) {\n        return locale_periods[+(d.getHours() >= 12)];\n      },\n      S: function(d, p) {\n        return d3_time_formatPad(d.getSeconds(), p, 2);\n      },\n      U: function(d, p) {\n        return d3_time_formatPad(d3_time.sundayOfYear(d), p, 2);\n      },\n      w: function(d) {\n        return d.getDay();\n      },\n      W: function(d, p) {\n        return d3_time_formatPad(d3_time.mondayOfYear(d), p, 2);\n      },\n      x: d3_time_format(locale_date),\n      X: d3_time_format(locale_time),\n      y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 100, p, 2);\n      },\n      Y: function(d, p) {\n        return d3_time_formatPad(d.getFullYear() % 1e4, p, 4);\n      },\n      Z: d3_time_zone,\n      \"%\": function() {\n        return \"%\";\n      }\n    };\n    var d3_time_parsers = {\n      a: d3_time_parseWeekdayAbbrev,\n      A: d3_time_parseWeekday,\n      b: d3_time_parseMonthAbbrev,\n      B: d3_time_parseMonth,\n      c: d3_time_parseLocaleFull,\n      d: d3_time_parseDay,\n      e: d3_time_parseDay,\n      H: d3_time_parseHour24,\n      I: d3_time_parseHour24,\n      j: d3_time_parseDayOfYear,\n      L: d3_time_parseMilliseconds,\n      m: d3_time_parseMonthNumber,\n      M: d3_time_parseMinutes,\n      p: d3_time_parseAmPm,\n      S: d3_time_parseSeconds,\n      U: d3_time_parseWeekNumberSunday,\n      w: d3_time_parseWeekdayNumber,\n      W: d3_time_parseWeekNumberMonday,\n      x: d3_time_parseLocaleDate,\n      X: d3_time_parseLocaleTime,\n      y: d3_time_parseYear,\n      Y: d3_time_parseFullYear,\n      Z: d3_time_parseZone,\n      \"%\": d3_time_parseLiteralPercent\n    };\n    function d3_time_parseWeekdayAbbrev(date, string, i) {\n      d3_time_dayAbbrevRe.lastIndex = 0;\n      var n = d3_time_dayAbbrevRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseWeekday(date, string, i) {\n      d3_time_dayRe.lastIndex = 0;\n      var n = d3_time_dayRe.exec(string.slice(i));\n      return n ? (date.w = d3_time_dayLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonthAbbrev(date, string, i) {\n      d3_time_monthAbbrevRe.lastIndex = 0;\n      var n = d3_time_monthAbbrevRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthAbbrevLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseMonth(date, string, i) {\n      d3_time_monthRe.lastIndex = 0;\n      var n = d3_time_monthRe.exec(string.slice(i));\n      return n ? (date.m = d3_time_monthLookup.get(n[0].toLowerCase()), i + n[0].length) : -1;\n    }\n    function d3_time_parseLocaleFull(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.c.toString(), string, i);\n    }\n    function d3_time_parseLocaleDate(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.x.toString(), string, i);\n    }\n    function d3_time_parseLocaleTime(date, string, i) {\n      return d3_time_parse(date, d3_time_formats.X.toString(), string, i);\n    }\n    function d3_time_parseAmPm(date, string, i) {\n      var n = d3_time_periodLookup.get(string.slice(i, i += 2).toLowerCase());\n      return n == null ? -1 : (date.p = n, i);\n    }\n    return d3_time_format;\n  }\n  var d3_time_formatPads = {\n    \"-\": \"\",\n    _: \" \",\n    \"0\": \"0\"\n  }, d3_time_numberRe = /^\\s*\\d+/, d3_time_percentRe = /^%/;\n  function d3_time_formatPad(value, fill, width) {\n    var sign = value < 0 ? \"-\" : \"\", string = (sign ? -value : value) + \"\", length = string.length;\n    return sign + (length < width ? new Array(width - length + 1).join(fill) + string : string);\n  }\n  function d3_time_formatRe(names) {\n    return new RegExp(\"^(?:\" + names.map(d3.requote).join(\"|\") + \")\", \"i\");\n  }\n  function d3_time_formatLookup(names) {\n    var map = new d3_Map(), i = -1, n = names.length;\n    while (++i < n) map.set(names[i].toLowerCase(), i);\n    return map;\n  }\n  function d3_time_parseWeekdayNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 1));\n    return n ? (date.w = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberSunday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.U = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseWeekNumberMonday(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i));\n    return n ? (date.W = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseFullYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 4));\n    return n ? (date.y = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.y = d3_time_expandYear(+n[0]), i + n[0].length) : -1;\n  }\n  function d3_time_parseZone(date, string, i) {\n    return /^[+-]\\d{4}$/.test(string = string.slice(i, i + 5)) ? (date.Z = -string, \n    i + 5) : -1;\n  }\n  function d3_time_expandYear(d) {\n    return d + (d > 68 ? 1900 : 2e3);\n  }\n  function d3_time_parseMonthNumber(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.m = n[0] - 1, i + n[0].length) : -1;\n  }\n  function d3_time_parseDay(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.d = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseDayOfYear(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.j = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseHour24(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.H = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMinutes(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.M = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseSeconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 2));\n    return n ? (date.S = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_parseMilliseconds(date, string, i) {\n    d3_time_numberRe.lastIndex = 0;\n    var n = d3_time_numberRe.exec(string.slice(i, i + 3));\n    return n ? (date.L = +n[0], i + n[0].length) : -1;\n  }\n  function d3_time_zone(d) {\n    var z = d.getTimezoneOffset(), zs = z > 0 ? \"-\" : \"+\", zh = abs(z) / 60 | 0, zm = abs(z) % 60;\n    return zs + d3_time_formatPad(zh, \"0\", 2) + d3_time_formatPad(zm, \"0\", 2);\n  }\n  function d3_time_parseLiteralPercent(date, string, i) {\n    d3_time_percentRe.lastIndex = 0;\n    var n = d3_time_percentRe.exec(string.slice(i, i + 1));\n    return n ? i + n[0].length : -1;\n  }\n  function d3_time_formatMulti(formats) {\n    var n = formats.length, i = -1;\n    while (++i < n) formats[i][0] = this(formats[i][0]);\n    return function(date) {\n      var i = 0, f = formats[i];\n      while (!f[1](date)) f = formats[++i];\n      return f[0](date);\n    };\n  }\n  d3.locale = function(locale) {\n    return {\n      numberFormat: d3_locale_numberFormat(locale),\n      timeFormat: d3_locale_timeFormat(locale)\n    };\n  };\n  var d3_locale_enUS = d3.locale({\n    decimal: \".\",\n    thousands: \",\",\n    grouping: [ 3 ],\n    currency: [ \"$\", \"\" ],\n    dateTime: \"%a %b %e %X %Y\",\n    date: \"%m/%d/%Y\",\n    time: \"%H:%M:%S\",\n    periods: [ \"AM\", \"PM\" ],\n    days: [ \"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\" ],\n    shortDays: [ \"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\" ],\n    months: [ \"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\" ],\n    shortMonths: [ \"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\" ]\n  });\n  d3.format = d3_locale_enUS.numberFormat;\n  d3.geo = {};\n  function d3_adder() {}\n  d3_adder.prototype = {\n    s: 0,\n    t: 0,\n    add: function(y) {\n      d3_adderSum(y, this.t, d3_adderTemp);\n      d3_adderSum(d3_adderTemp.s, this.s, this);\n      if (this.s) this.t += d3_adderTemp.t; else this.s = d3_adderTemp.t;\n    },\n    reset: function() {\n      this.s = this.t = 0;\n    },\n    valueOf: function() {\n      return this.s;\n    }\n  };\n  var d3_adderTemp = new d3_adder();\n  function d3_adderSum(a, b, o) {\n    var x = o.s = a + b, bv = x - a, av = x - bv;\n    o.t = a - av + (b - bv);\n  }\n  d3.geo.stream = function(object, listener) {\n    if (object && d3_geo_streamObjectType.hasOwnProperty(object.type)) {\n      d3_geo_streamObjectType[object.type](object, listener);\n    } else {\n      d3_geo_streamGeometry(object, listener);\n    }\n  };\n  function d3_geo_streamGeometry(geometry, listener) {\n    if (geometry && d3_geo_streamGeometryType.hasOwnProperty(geometry.type)) {\n      d3_geo_streamGeometryType[geometry.type](geometry, listener);\n    }\n  }\n  var d3_geo_streamObjectType = {\n    Feature: function(feature, listener) {\n      d3_geo_streamGeometry(feature.geometry, listener);\n    },\n    FeatureCollection: function(object, listener) {\n      var features = object.features, i = -1, n = features.length;\n      while (++i < n) d3_geo_streamGeometry(features[i].geometry, listener);\n    }\n  };\n  var d3_geo_streamGeometryType = {\n    Sphere: function(object, listener) {\n      listener.sphere();\n    },\n    Point: function(object, listener) {\n      object = object.coordinates;\n      listener.point(object[0], object[1], object[2]);\n    },\n    MultiPoint: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) object = coordinates[i], listener.point(object[0], object[1], object[2]);\n    },\n    LineString: function(object, listener) {\n      d3_geo_streamLine(object.coordinates, listener, 0);\n    },\n    MultiLineString: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamLine(coordinates[i], listener, 0);\n    },\n    Polygon: function(object, listener) {\n      d3_geo_streamPolygon(object.coordinates, listener);\n    },\n    MultiPolygon: function(object, listener) {\n      var coordinates = object.coordinates, i = -1, n = coordinates.length;\n      while (++i < n) d3_geo_streamPolygon(coordinates[i], listener);\n    },\n    GeometryCollection: function(object, listener) {\n      var geometries = object.geometries, i = -1, n = geometries.length;\n      while (++i < n) d3_geo_streamGeometry(geometries[i], listener);\n    }\n  };\n  function d3_geo_streamLine(coordinates, listener, closed) {\n    var i = -1, n = coordinates.length - closed, coordinate;\n    listener.lineStart();\n    while (++i < n) coordinate = coordinates[i], listener.point(coordinate[0], coordinate[1], coordinate[2]);\n    listener.lineEnd();\n  }\n  function d3_geo_streamPolygon(coordinates, listener) {\n    var i = -1, n = coordinates.length;\n    listener.polygonStart();\n    while (++i < n) d3_geo_streamLine(coordinates[i], listener, 1);\n    listener.polygonEnd();\n  }\n  d3.geo.area = function(object) {\n    d3_geo_areaSum = 0;\n    d3.geo.stream(object, d3_geo_area);\n    return d3_geo_areaSum;\n  };\n  var d3_geo_areaSum, d3_geo_areaRingSum = new d3_adder();\n  var d3_geo_area = {\n    sphere: function() {\n      d3_geo_areaSum += 4 * π;\n    },\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_areaRingSum.reset();\n      d3_geo_area.lineStart = d3_geo_areaRingStart;\n    },\n    polygonEnd: function() {\n      var area = 2 * d3_geo_areaRingSum;\n      d3_geo_areaSum += area < 0 ? 4 * π + area : area;\n      d3_geo_area.lineStart = d3_geo_area.lineEnd = d3_geo_area.point = d3_noop;\n    }\n  };\n  function d3_geo_areaRingStart() {\n    var λ00, φ00, λ0, cosφ0, sinφ0;\n    d3_geo_area.point = function(λ, φ) {\n      d3_geo_area.point = nextPoint;\n      λ0 = (λ00 = λ) * d3_radians, cosφ0 = Math.cos(φ = (φ00 = φ) * d3_radians / 2 + π / 4), \n      sinφ0 = Math.sin(φ);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      φ = φ * d3_radians / 2 + π / 4;\n      var dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, cosφ = Math.cos(φ), sinφ = Math.sin(φ), k = sinφ0 * sinφ, u = cosφ0 * cosφ + k * Math.cos(adλ), v = k * sdλ * Math.sin(adλ);\n      d3_geo_areaRingSum.add(Math.atan2(v, u));\n      λ0 = λ, cosφ0 = cosφ, sinφ0 = sinφ;\n    }\n    d3_geo_area.lineEnd = function() {\n      nextPoint(λ00, φ00);\n    };\n  }\n  function d3_geo_cartesian(spherical) {\n    var λ = spherical[0], φ = spherical[1], cosφ = Math.cos(φ);\n    return [ cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ) ];\n  }\n  function d3_geo_cartesianDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  }\n  function d3_geo_cartesianCross(a, b) {\n    return [ a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0] ];\n  }\n  function d3_geo_cartesianAdd(a, b) {\n    a[0] += b[0];\n    a[1] += b[1];\n    a[2] += b[2];\n  }\n  function d3_geo_cartesianScale(vector, k) {\n    return [ vector[0] * k, vector[1] * k, vector[2] * k ];\n  }\n  function d3_geo_cartesianNormalize(d) {\n    var l = Math.sqrt(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);\n    d[0] /= l;\n    d[1] /= l;\n    d[2] /= l;\n  }\n  function d3_geo_spherical(cartesian) {\n    return [ Math.atan2(cartesian[1], cartesian[0]), d3_asin(cartesian[2]) ];\n  }\n  function d3_geo_sphericalEqual(a, b) {\n    return abs(a[0] - b[0]) < ε && abs(a[1] - b[1]) < ε;\n  }\n  d3.geo.bounds = function() {\n    var λ0, φ0, λ1, φ1, λ_, λ__, φ__, p0, dλSum, ranges, range;\n    var bound = {\n      point: point,\n      lineStart: lineStart,\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        bound.point = ringPoint;\n        bound.lineStart = ringStart;\n        bound.lineEnd = ringEnd;\n        dλSum = 0;\n        d3_geo_area.polygonStart();\n      },\n      polygonEnd: function() {\n        d3_geo_area.polygonEnd();\n        bound.point = point;\n        bound.lineStart = lineStart;\n        bound.lineEnd = lineEnd;\n        if (d3_geo_areaRingSum < 0) λ0 = -(λ1 = 180), φ0 = -(φ1 = 90); else if (dλSum > ε) φ1 = 90; else if (dλSum < -ε) φ0 = -90;\n        range[0] = λ0, range[1] = λ1;\n      }\n    };\n    function point(λ, φ) {\n      ranges.push(range = [ λ0 = λ, λ1 = λ ]);\n      if (φ < φ0) φ0 = φ;\n      if (φ > φ1) φ1 = φ;\n    }\n    function linePoint(λ, φ) {\n      var p = d3_geo_cartesian([ λ * d3_radians, φ * d3_radians ]);\n      if (p0) {\n        var normal = d3_geo_cartesianCross(p0, p), equatorial = [ normal[1], -normal[0], 0 ], inflection = d3_geo_cartesianCross(equatorial, normal);\n        d3_geo_cartesianNormalize(inflection);\n        inflection = d3_geo_spherical(inflection);\n        var dλ = λ - λ_, s = dλ > 0 ? 1 : -1, λi = inflection[0] * d3_degrees * s, antimeridian = abs(dλ) > 180;\n        if (antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = inflection[1] * d3_degrees;\n          if (φi > φ1) φ1 = φi;\n        } else if (λi = (λi + 360) % 360 - 180, antimeridian ^ (s * λ_ < λi && λi < s * λ)) {\n          var φi = -inflection[1] * d3_degrees;\n          if (φi < φ0) φ0 = φi;\n        } else {\n          if (φ < φ0) φ0 = φ;\n          if (φ > φ1) φ1 = φ;\n        }\n        if (antimeridian) {\n          if (λ < λ_) {\n            if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n          } else {\n            if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n          }\n        } else {\n          if (λ1 >= λ0) {\n            if (λ < λ0) λ0 = λ;\n            if (λ > λ1) λ1 = λ;\n          } else {\n            if (λ > λ_) {\n              if (angle(λ0, λ) > angle(λ0, λ1)) λ1 = λ;\n            } else {\n              if (angle(λ, λ1) > angle(λ0, λ1)) λ0 = λ;\n            }\n          }\n        }\n      } else {\n        point(λ, φ);\n      }\n      p0 = p, λ_ = λ;\n    }\n    function lineStart() {\n      bound.point = linePoint;\n    }\n    function lineEnd() {\n      range[0] = λ0, range[1] = λ1;\n      bound.point = point;\n      p0 = null;\n    }\n    function ringPoint(λ, φ) {\n      if (p0) {\n        var dλ = λ - λ_;\n        dλSum += abs(dλ) > 180 ? dλ + (dλ > 0 ? 360 : -360) : dλ;\n      } else λ__ = λ, φ__ = φ;\n      d3_geo_area.point(λ, φ);\n      linePoint(λ, φ);\n    }\n    function ringStart() {\n      d3_geo_area.lineStart();\n    }\n    function ringEnd() {\n      ringPoint(λ__, φ__);\n      d3_geo_area.lineEnd();\n      if (abs(dλSum) > ε) λ0 = -(λ1 = 180);\n      range[0] = λ0, range[1] = λ1;\n      p0 = null;\n    }\n    function angle(λ0, λ1) {\n      return (λ1 -= λ0) < 0 ? λ1 + 360 : λ1;\n    }\n    function compareRanges(a, b) {\n      return a[0] - b[0];\n    }\n    function withinRange(x, range) {\n      return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;\n    }\n    return function(feature) {\n      φ1 = λ1 = -(λ0 = φ0 = Infinity);\n      ranges = [];\n      d3.geo.stream(feature, bound);\n      var n = ranges.length;\n      if (n) {\n        ranges.sort(compareRanges);\n        for (var i = 1, a = ranges[0], b, merged = [ a ]; i < n; ++i) {\n          b = ranges[i];\n          if (withinRange(b[0], a) || withinRange(b[1], a)) {\n            if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];\n            if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];\n          } else {\n            merged.push(a = b);\n          }\n        }\n        var best = -Infinity, dλ;\n        for (var n = merged.length - 1, i = 0, a = merged[n], b; i <= n; a = b, ++i) {\n          b = merged[i];\n          if ((dλ = angle(a[1], b[0])) > best) best = dλ, λ0 = b[0], λ1 = a[1];\n        }\n      }\n      ranges = range = null;\n      return λ0 === Infinity || φ0 === Infinity ? [ [ NaN, NaN ], [ NaN, NaN ] ] : [ [ λ0, φ0 ], [ λ1, φ1 ] ];\n    };\n  }();\n  d3.geo.centroid = function(object) {\n    d3_geo_centroidW0 = d3_geo_centroidW1 = d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n    d3.geo.stream(object, d3_geo_centroid);\n    var x = d3_geo_centroidX2, y = d3_geo_centroidY2, z = d3_geo_centroidZ2, m = x * x + y * y + z * z;\n    if (m < ε2) {\n      x = d3_geo_centroidX1, y = d3_geo_centroidY1, z = d3_geo_centroidZ1;\n      if (d3_geo_centroidW1 < ε) x = d3_geo_centroidX0, y = d3_geo_centroidY0, z = d3_geo_centroidZ0;\n      m = x * x + y * y + z * z;\n      if (m < ε2) return [ NaN, NaN ];\n    }\n    return [ Math.atan2(y, x) * d3_degrees, d3_asin(z / Math.sqrt(m)) * d3_degrees ];\n  };\n  var d3_geo_centroidW0, d3_geo_centroidW1, d3_geo_centroidX0, d3_geo_centroidY0, d3_geo_centroidZ0, d3_geo_centroidX1, d3_geo_centroidY1, d3_geo_centroidZ1, d3_geo_centroidX2, d3_geo_centroidY2, d3_geo_centroidZ2;\n  var d3_geo_centroid = {\n    sphere: d3_noop,\n    point: d3_geo_centroidPoint,\n    lineStart: d3_geo_centroidLineStart,\n    lineEnd: d3_geo_centroidLineEnd,\n    polygonStart: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_centroid.lineStart = d3_geo_centroidLineStart;\n    }\n  };\n  function d3_geo_centroidPoint(λ, φ) {\n    λ *= d3_radians;\n    var cosφ = Math.cos(φ *= d3_radians);\n    d3_geo_centroidPointXYZ(cosφ * Math.cos(λ), cosφ * Math.sin(λ), Math.sin(φ));\n  }\n  function d3_geo_centroidPointXYZ(x, y, z) {\n    ++d3_geo_centroidW0;\n    d3_geo_centroidX0 += (x - d3_geo_centroidX0) / d3_geo_centroidW0;\n    d3_geo_centroidY0 += (y - d3_geo_centroidY0) / d3_geo_centroidW0;\n    d3_geo_centroidZ0 += (z - d3_geo_centroidZ0) / d3_geo_centroidW0;\n  }\n  function d3_geo_centroidLineStart() {\n    var x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroid.point = nextPoint;\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), w = Math.atan2(Math.sqrt((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_centroidLineEnd() {\n    d3_geo_centroid.point = d3_geo_centroidPoint;\n  }\n  function d3_geo_centroidRingStart() {\n    var λ00, φ00, x0, y0, z0;\n    d3_geo_centroid.point = function(λ, φ) {\n      λ00 = λ, φ00 = φ;\n      d3_geo_centroid.point = nextPoint;\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians);\n      x0 = cosφ * Math.cos(λ);\n      y0 = cosφ * Math.sin(λ);\n      z0 = Math.sin(φ);\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    };\n    d3_geo_centroid.lineEnd = function() {\n      nextPoint(λ00, φ00);\n      d3_geo_centroid.lineEnd = d3_geo_centroidLineEnd;\n      d3_geo_centroid.point = d3_geo_centroidPoint;\n    };\n    function nextPoint(λ, φ) {\n      λ *= d3_radians;\n      var cosφ = Math.cos(φ *= d3_radians), x = cosφ * Math.cos(λ), y = cosφ * Math.sin(λ), z = Math.sin(φ), cx = y0 * z - z0 * y, cy = z0 * x - x0 * z, cz = x0 * y - y0 * x, m = Math.sqrt(cx * cx + cy * cy + cz * cz), u = x0 * x + y0 * y + z0 * z, v = m && -d3_acos(u) / m, w = Math.atan2(m, u);\n      d3_geo_centroidX2 += v * cx;\n      d3_geo_centroidY2 += v * cy;\n      d3_geo_centroidZ2 += v * cz;\n      d3_geo_centroidW1 += w;\n      d3_geo_centroidX1 += w * (x0 + (x0 = x));\n      d3_geo_centroidY1 += w * (y0 + (y0 = y));\n      d3_geo_centroidZ1 += w * (z0 + (z0 = z));\n      d3_geo_centroidPointXYZ(x0, y0, z0);\n    }\n  }\n  function d3_geo_compose(a, b) {\n    function compose(x, y) {\n      return x = a(x, y), b(x[0], x[1]);\n    }\n    if (a.invert && b.invert) compose.invert = function(x, y) {\n      return x = b.invert(x, y), x && a.invert(x[0], x[1]);\n    };\n    return compose;\n  }\n  function d3_true() {\n    return true;\n  }\n  function d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener) {\n    var subject = [], clip = [];\n    segments.forEach(function(segment) {\n      if ((n = segment.length - 1) <= 0) return;\n      var n, p0 = segment[0], p1 = segment[n];\n      if (d3_geo_sphericalEqual(p0, p1)) {\n        listener.lineStart();\n        for (var i = 0; i < n; ++i) listener.point((p0 = segment[i])[0], p0[1]);\n        listener.lineEnd();\n        return;\n      }\n      var a = new d3_geo_clipPolygonIntersection(p0, segment, null, true), b = new d3_geo_clipPolygonIntersection(p0, null, a, false);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n      a = new d3_geo_clipPolygonIntersection(p1, segment, null, false);\n      b = new d3_geo_clipPolygonIntersection(p1, null, a, true);\n      a.o = b;\n      subject.push(a);\n      clip.push(b);\n    });\n    clip.sort(compare);\n    d3_geo_clipPolygonLinkCircular(subject);\n    d3_geo_clipPolygonLinkCircular(clip);\n    if (!subject.length) return;\n    for (var i = 0, entry = clipStartInside, n = clip.length; i < n; ++i) {\n      clip[i].e = entry = !entry;\n    }\n    var start = subject[0], points, point;\n    while (1) {\n      var current = start, isSubject = true;\n      while (current.v) if ((current = current.n) === start) return;\n      points = current.z;\n      listener.lineStart();\n      do {\n        current.v = current.o.v = true;\n        if (current.e) {\n          if (isSubject) {\n            for (var i = 0, n = points.length; i < n; ++i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.n.x, 1, listener);\n          }\n          current = current.n;\n        } else {\n          if (isSubject) {\n            points = current.p.z;\n            for (var i = points.length - 1; i >= 0; --i) listener.point((point = points[i])[0], point[1]);\n          } else {\n            interpolate(current.x, current.p.x, -1, listener);\n          }\n          current = current.p;\n        }\n        current = current.o;\n        points = current.z;\n        isSubject = !isSubject;\n      } while (!current.v);\n      listener.lineEnd();\n    }\n  }\n  function d3_geo_clipPolygonLinkCircular(array) {\n    if (!(n = array.length)) return;\n    var n, i = 0, a = array[0], b;\n    while (++i < n) {\n      a.n = b = array[i];\n      b.p = a;\n      a = b;\n    }\n    a.n = b = array[0];\n    b.p = a;\n  }\n  function d3_geo_clipPolygonIntersection(point, points, other, entry) {\n    this.x = point;\n    this.z = points;\n    this.o = other;\n    this.e = entry;\n    this.v = false;\n    this.n = this.p = null;\n  }\n  function d3_geo_clip(pointVisible, clipLine, interpolate, clipStart) {\n    return function(rotate, listener) {\n      var line = clipLine(listener), rotatedClipStart = rotate.invert(clipStart[0], clipStart[1]);\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          clip.point = pointRing;\n          clip.lineStart = ringStart;\n          clip.lineEnd = ringEnd;\n          segments = [];\n          polygon = [];\n        },\n        polygonEnd: function() {\n          clip.point = point;\n          clip.lineStart = lineStart;\n          clip.lineEnd = lineEnd;\n          segments = d3.merge(segments);\n          var clipStartInside = d3_geo_pointInPolygon(rotatedClipStart, polygon);\n          if (segments.length) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            d3_geo_clipPolygon(segments, d3_geo_clipSort, clipStartInside, interpolate, listener);\n          } else if (clipStartInside) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            interpolate(null, null, 1, listener);\n            listener.lineEnd();\n          }\n          if (polygonStarted) listener.polygonEnd(), polygonStarted = false;\n          segments = polygon = null;\n        },\n        sphere: function() {\n          listener.polygonStart();\n          listener.lineStart();\n          interpolate(null, null, 1, listener);\n          listener.lineEnd();\n          listener.polygonEnd();\n        }\n      };\n      function point(λ, φ) {\n        var point = rotate(λ, φ);\n        if (pointVisible(λ = point[0], φ = point[1])) listener.point(λ, φ);\n      }\n      function pointLine(λ, φ) {\n        var point = rotate(λ, φ);\n        line.point(point[0], point[1]);\n      }\n      function lineStart() {\n        clip.point = pointLine;\n        line.lineStart();\n      }\n      function lineEnd() {\n        clip.point = point;\n        line.lineEnd();\n      }\n      var segments;\n      var buffer = d3_geo_clipBufferListener(), ringListener = clipLine(buffer), polygonStarted = false, polygon, ring;\n      function pointRing(λ, φ) {\n        ring.push([ λ, φ ]);\n        var point = rotate(λ, φ);\n        ringListener.point(point[0], point[1]);\n      }\n      function ringStart() {\n        ringListener.lineStart();\n        ring = [];\n      }\n      function ringEnd() {\n        pointRing(ring[0][0], ring[0][1]);\n        ringListener.lineEnd();\n        var clean = ringListener.clean(), ringSegments = buffer.buffer(), segment, n = ringSegments.length;\n        ring.pop();\n        polygon.push(ring);\n        ring = null;\n        if (!n) return;\n        if (clean & 1) {\n          segment = ringSegments[0];\n          var n = segment.length - 1, i = -1, point;\n          if (n > 0) {\n            if (!polygonStarted) listener.polygonStart(), polygonStarted = true;\n            listener.lineStart();\n            while (++i < n) listener.point((point = segment[i])[0], point[1]);\n            listener.lineEnd();\n          }\n          return;\n        }\n        if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));\n        segments.push(ringSegments.filter(d3_geo_clipSegmentLength1));\n      }\n      return clip;\n    };\n  }\n  function d3_geo_clipSegmentLength1(segment) {\n    return segment.length > 1;\n  }\n  function d3_geo_clipBufferListener() {\n    var lines = [], line;\n    return {\n      lineStart: function() {\n        lines.push(line = []);\n      },\n      point: function(λ, φ) {\n        line.push([ λ, φ ]);\n      },\n      lineEnd: d3_noop,\n      buffer: function() {\n        var buffer = lines;\n        lines = [];\n        line = null;\n        return buffer;\n      },\n      rejoin: function() {\n        if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));\n      }\n    };\n  }\n  function d3_geo_clipSort(a, b) {\n    return ((a = a.x)[0] < 0 ? a[1] - halfπ - ε : halfπ - a[1]) - ((b = b.x)[0] < 0 ? b[1] - halfπ - ε : halfπ - b[1]);\n  }\n  var d3_geo_clipAntimeridian = d3_geo_clip(d3_true, d3_geo_clipAntimeridianLine, d3_geo_clipAntimeridianInterpolate, [ -π, -π / 2 ]);\n  function d3_geo_clipAntimeridianLine(listener) {\n    var λ0 = NaN, φ0 = NaN, sλ0 = NaN, clean;\n    return {\n      lineStart: function() {\n        listener.lineStart();\n        clean = 1;\n      },\n      point: function(λ1, φ1) {\n        var sλ1 = λ1 > 0 ? π : -π, dλ = abs(λ1 - λ0);\n        if (abs(dλ - π) < ε) {\n          listener.point(λ0, φ0 = (φ0 + φ1) / 2 > 0 ? halfπ : -halfπ);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          listener.point(λ1, φ0);\n          clean = 0;\n        } else if (sλ0 !== sλ1 && dλ >= π) {\n          if (abs(λ0 - sλ0) < ε) λ0 -= sλ0 * ε;\n          if (abs(λ1 - sλ1) < ε) λ1 -= sλ1 * ε;\n          φ0 = d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1);\n          listener.point(sλ0, φ0);\n          listener.lineEnd();\n          listener.lineStart();\n          listener.point(sλ1, φ0);\n          clean = 0;\n        }\n        listener.point(λ0 = λ1, φ0 = φ1);\n        sλ0 = sλ1;\n      },\n      lineEnd: function() {\n        listener.lineEnd();\n        λ0 = φ0 = NaN;\n      },\n      clean: function() {\n        return 2 - clean;\n      }\n    };\n  }\n  function d3_geo_clipAntimeridianIntersect(λ0, φ0, λ1, φ1) {\n    var cosφ0, cosφ1, sinλ0_λ1 = Math.sin(λ0 - λ1);\n    return abs(sinλ0_λ1) > ε ? Math.atan((Math.sin(φ0) * (cosφ1 = Math.cos(φ1)) * Math.sin(λ1) - Math.sin(φ1) * (cosφ0 = Math.cos(φ0)) * Math.sin(λ0)) / (cosφ0 * cosφ1 * sinλ0_λ1)) : (φ0 + φ1) / 2;\n  }\n  function d3_geo_clipAntimeridianInterpolate(from, to, direction, listener) {\n    var φ;\n    if (from == null) {\n      φ = direction * halfπ;\n      listener.point(-π, φ);\n      listener.point(0, φ);\n      listener.point(π, φ);\n      listener.point(π, 0);\n      listener.point(π, -φ);\n      listener.point(0, -φ);\n      listener.point(-π, -φ);\n      listener.point(-π, 0);\n      listener.point(-π, φ);\n    } else if (abs(from[0] - to[0]) > ε) {\n      var s = from[0] < to[0] ? π : -π;\n      φ = direction * s / 2;\n      listener.point(-s, φ);\n      listener.point(0, φ);\n      listener.point(s, φ);\n    } else {\n      listener.point(to[0], to[1]);\n    }\n  }\n  function d3_geo_pointInPolygon(point, polygon) {\n    var meridian = point[0], parallel = point[1], meridianNormal = [ Math.sin(meridian), -Math.cos(meridian), 0 ], polarAngle = 0, winding = 0;\n    d3_geo_areaRingSum.reset();\n    for (var i = 0, n = polygon.length; i < n; ++i) {\n      var ring = polygon[i], m = ring.length;\n      if (!m) continue;\n      var point0 = ring[0], λ0 = point0[0], φ0 = point0[1] / 2 + π / 4, sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), j = 1;\n      while (true) {\n        if (j === m) j = 0;\n        point = ring[j];\n        var λ = point[0], φ = point[1] / 2 + π / 4, sinφ = Math.sin(φ), cosφ = Math.cos(φ), dλ = λ - λ0, sdλ = dλ >= 0 ? 1 : -1, adλ = sdλ * dλ, antimeridian = adλ > π, k = sinφ0 * sinφ;\n        d3_geo_areaRingSum.add(Math.atan2(k * sdλ * Math.sin(adλ), cosφ0 * cosφ + k * Math.cos(adλ)));\n        polarAngle += antimeridian ? dλ + sdλ * τ : dλ;\n        if (antimeridian ^ λ0 >= meridian ^ λ >= meridian) {\n          var arc = d3_geo_cartesianCross(d3_geo_cartesian(point0), d3_geo_cartesian(point));\n          d3_geo_cartesianNormalize(arc);\n          var intersection = d3_geo_cartesianCross(meridianNormal, arc);\n          d3_geo_cartesianNormalize(intersection);\n          var φarc = (antimeridian ^ dλ >= 0 ? -1 : 1) * d3_asin(intersection[2]);\n          if (parallel > φarc || parallel === φarc && (arc[0] || arc[1])) {\n            winding += antimeridian ^ dλ >= 0 ? 1 : -1;\n          }\n        }\n        if (!j++) break;\n        λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ, point0 = point;\n      }\n    }\n    return (polarAngle < -ε || polarAngle < ε && d3_geo_areaRingSum < 0) ^ winding & 1;\n  }\n  function d3_geo_clipCircle(radius) {\n    var cr = Math.cos(radius), smallRadius = cr > 0, notHemisphere = abs(cr) > ε, interpolate = d3_geo_circleInterpolate(radius, 6 * d3_radians);\n    return d3_geo_clip(visible, clipLine, interpolate, smallRadius ? [ 0, -radius ] : [ -π, radius - π ]);\n    function visible(λ, φ) {\n      return Math.cos(λ) * Math.cos(φ) > cr;\n    }\n    function clipLine(listener) {\n      var point0, c0, v0, v00, clean;\n      return {\n        lineStart: function() {\n          v00 = v0 = false;\n          clean = 1;\n        },\n        point: function(λ, φ) {\n          var point1 = [ λ, φ ], point2, v = visible(λ, φ), c = smallRadius ? v ? 0 : code(λ, φ) : v ? code(λ + (λ < 0 ? π : -π), φ) : 0;\n          if (!point0 && (v00 = v0 = v)) listener.lineStart();\n          if (v !== v0) {\n            point2 = intersect(point0, point1);\n            if (d3_geo_sphericalEqual(point0, point2) || d3_geo_sphericalEqual(point1, point2)) {\n              point1[0] += ε;\n              point1[1] += ε;\n              v = visible(point1[0], point1[1]);\n            }\n          }\n          if (v !== v0) {\n            clean = 0;\n            if (v) {\n              listener.lineStart();\n              point2 = intersect(point1, point0);\n              listener.point(point2[0], point2[1]);\n            } else {\n              point2 = intersect(point0, point1);\n              listener.point(point2[0], point2[1]);\n              listener.lineEnd();\n            }\n            point0 = point2;\n          } else if (notHemisphere && point0 && smallRadius ^ v) {\n            var t;\n            if (!(c & c0) && (t = intersect(point1, point0, true))) {\n              clean = 0;\n              if (smallRadius) {\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n              } else {\n                listener.point(t[1][0], t[1][1]);\n                listener.lineEnd();\n                listener.lineStart();\n                listener.point(t[0][0], t[0][1]);\n              }\n            }\n          }\n          if (v && (!point0 || !d3_geo_sphericalEqual(point0, point1))) {\n            listener.point(point1[0], point1[1]);\n          }\n          point0 = point1, v0 = v, c0 = c;\n        },\n        lineEnd: function() {\n          if (v0) listener.lineEnd();\n          point0 = null;\n        },\n        clean: function() {\n          return clean | (v00 && v0) << 1;\n        }\n      };\n    }\n    function intersect(a, b, two) {\n      var pa = d3_geo_cartesian(a), pb = d3_geo_cartesian(b);\n      var n1 = [ 1, 0, 0 ], n2 = d3_geo_cartesianCross(pa, pb), n2n2 = d3_geo_cartesianDot(n2, n2), n1n2 = n2[0], determinant = n2n2 - n1n2 * n1n2;\n      if (!determinant) return !two && a;\n      var c1 = cr * n2n2 / determinant, c2 = -cr * n1n2 / determinant, n1xn2 = d3_geo_cartesianCross(n1, n2), A = d3_geo_cartesianScale(n1, c1), B = d3_geo_cartesianScale(n2, c2);\n      d3_geo_cartesianAdd(A, B);\n      var u = n1xn2, w = d3_geo_cartesianDot(A, u), uu = d3_geo_cartesianDot(u, u), t2 = w * w - uu * (d3_geo_cartesianDot(A, A) - 1);\n      if (t2 < 0) return;\n      var t = Math.sqrt(t2), q = d3_geo_cartesianScale(u, (-w - t) / uu);\n      d3_geo_cartesianAdd(q, A);\n      q = d3_geo_spherical(q);\n      if (!two) return q;\n      var λ0 = a[0], λ1 = b[0], φ0 = a[1], φ1 = b[1], z;\n      if (λ1 < λ0) z = λ0, λ0 = λ1, λ1 = z;\n      var δλ = λ1 - λ0, polar = abs(δλ - π) < ε, meridian = polar || δλ < ε;\n      if (!polar && φ1 < φ0) z = φ0, φ0 = φ1, φ1 = z;\n      if (meridian ? polar ? φ0 + φ1 > 0 ^ q[1] < (abs(q[0] - λ0) < ε ? φ0 : φ1) : φ0 <= q[1] && q[1] <= φ1 : δλ > π ^ (λ0 <= q[0] && q[0] <= λ1)) {\n        var q1 = d3_geo_cartesianScale(u, (-w + t) / uu);\n        d3_geo_cartesianAdd(q1, A);\n        return [ q, d3_geo_spherical(q1) ];\n      }\n    }\n    function code(λ, φ) {\n      var r = smallRadius ? radius : π - radius, code = 0;\n      if (λ < -r) code |= 1; else if (λ > r) code |= 2;\n      if (φ < -r) code |= 4; else if (φ > r) code |= 8;\n      return code;\n    }\n  }\n  function d3_geom_clipLine(x0, y0, x1, y1) {\n    return function(line) {\n      var a = line.a, b = line.b, ax = a.x, ay = a.y, bx = b.x, by = b.y, t0 = 0, t1 = 1, dx = bx - ax, dy = by - ay, r;\n      r = x0 - ax;\n      if (!dx && r > 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dx > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = x1 - ax;\n      if (!dx && r < 0) return;\n      r /= dx;\n      if (dx < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dx > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      r = y0 - ay;\n      if (!dy && r > 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      } else if (dy > 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      }\n      r = y1 - ay;\n      if (!dy && r < 0) return;\n      r /= dy;\n      if (dy < 0) {\n        if (r > t1) return;\n        if (r > t0) t0 = r;\n      } else if (dy > 0) {\n        if (r < t0) return;\n        if (r < t1) t1 = r;\n      }\n      if (t0 > 0) line.a = {\n        x: ax + t0 * dx,\n        y: ay + t0 * dy\n      };\n      if (t1 < 1) line.b = {\n        x: ax + t1 * dx,\n        y: ay + t1 * dy\n      };\n      return line;\n    };\n  }\n  var d3_geo_clipExtentMAX = 1e9;\n  d3.geo.clipExtent = function() {\n    var x0, y0, x1, y1, stream, clip, clipExtent = {\n      stream: function(output) {\n        if (stream) stream.valid = false;\n        stream = clip(output);\n        stream.valid = true;\n        return stream;\n      },\n      extent: function(_) {\n        if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n        clip = d3_geo_clipExtent(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]);\n        if (stream) stream.valid = false, stream = null;\n        return clipExtent;\n      }\n    };\n    return clipExtent.extent([ [ 0, 0 ], [ 960, 500 ] ]);\n  };\n  function d3_geo_clipExtent(x0, y0, x1, y1) {\n    return function(listener) {\n      var listener_ = listener, bufferListener = d3_geo_clipBufferListener(), clipLine = d3_geom_clipLine(x0, y0, x1, y1), segments, polygon, ring;\n      var clip = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          listener = bufferListener;\n          segments = [];\n          polygon = [];\n          clean = true;\n        },\n        polygonEnd: function() {\n          listener = listener_;\n          segments = d3.merge(segments);\n          var clipStartInside = insidePolygon([ x0, y1 ]), inside = clean && clipStartInside, visible = segments.length;\n          if (inside || visible) {\n            listener.polygonStart();\n            if (inside) {\n              listener.lineStart();\n              interpolate(null, null, 1, listener);\n              listener.lineEnd();\n            }\n            if (visible) {\n              d3_geo_clipPolygon(segments, compare, clipStartInside, interpolate, listener);\n            }\n            listener.polygonEnd();\n          }\n          segments = polygon = ring = null;\n        }\n      };\n      function insidePolygon(p) {\n        var wn = 0, n = polygon.length, y = p[1];\n        for (var i = 0; i < n; ++i) {\n          for (var j = 1, v = polygon[i], m = v.length, a = v[0], b; j < m; ++j) {\n            b = v[j];\n            if (a[1] <= y) {\n              if (b[1] > y && d3_cross2d(a, b, p) > 0) ++wn;\n            } else {\n              if (b[1] <= y && d3_cross2d(a, b, p) < 0) --wn;\n            }\n            a = b;\n          }\n        }\n        return wn !== 0;\n      }\n      function interpolate(from, to, direction, listener) {\n        var a = 0, a1 = 0;\n        if (from == null || (a = corner(from, direction)) !== (a1 = corner(to, direction)) || comparePoints(from, to) < 0 ^ direction > 0) {\n          do {\n            listener.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);\n          } while ((a = (a + direction + 4) % 4) !== a1);\n        } else {\n          listener.point(to[0], to[1]);\n        }\n      }\n      function pointVisible(x, y) {\n        return x0 <= x && x <= x1 && y0 <= y && y <= y1;\n      }\n      function point(x, y) {\n        if (pointVisible(x, y)) listener.point(x, y);\n      }\n      var x__, y__, v__, x_, y_, v_, first, clean;\n      function lineStart() {\n        clip.point = linePoint;\n        if (polygon) polygon.push(ring = []);\n        first = true;\n        v_ = false;\n        x_ = y_ = NaN;\n      }\n      function lineEnd() {\n        if (segments) {\n          linePoint(x__, y__);\n          if (v__ && v_) bufferListener.rejoin();\n          segments.push(bufferListener.buffer());\n        }\n        clip.point = point;\n        if (v_) listener.lineEnd();\n      }\n      function linePoint(x, y) {\n        x = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, x));\n        y = Math.max(-d3_geo_clipExtentMAX, Math.min(d3_geo_clipExtentMAX, y));\n        var v = pointVisible(x, y);\n        if (polygon) ring.push([ x, y ]);\n        if (first) {\n          x__ = x, y__ = y, v__ = v;\n          first = false;\n          if (v) {\n            listener.lineStart();\n            listener.point(x, y);\n          }\n        } else {\n          if (v && v_) listener.point(x, y); else {\n            var l = {\n              a: {\n                x: x_,\n                y: y_\n              },\n              b: {\n                x: x,\n                y: y\n              }\n            };\n            if (clipLine(l)) {\n              if (!v_) {\n                listener.lineStart();\n                listener.point(l.a.x, l.a.y);\n              }\n              listener.point(l.b.x, l.b.y);\n              if (!v) listener.lineEnd();\n              clean = false;\n            } else if (v) {\n              listener.lineStart();\n              listener.point(x, y);\n              clean = false;\n            }\n          }\n        }\n        x_ = x, y_ = y, v_ = v;\n      }\n      return clip;\n    };\n    function corner(p, direction) {\n      return abs(p[0] - x0) < ε ? direction > 0 ? 0 : 3 : abs(p[0] - x1) < ε ? direction > 0 ? 2 : 1 : abs(p[1] - y0) < ε ? direction > 0 ? 1 : 0 : direction > 0 ? 3 : 2;\n    }\n    function compare(a, b) {\n      return comparePoints(a.x, b.x);\n    }\n    function comparePoints(a, b) {\n      var ca = corner(a, 1), cb = corner(b, 1);\n      return ca !== cb ? ca - cb : ca === 0 ? b[1] - a[1] : ca === 1 ? a[0] - b[0] : ca === 2 ? a[1] - b[1] : b[0] - a[0];\n    }\n  }\n  function d3_geo_conic(projectAt) {\n    var φ0 = 0, φ1 = π / 3, m = d3_geo_projectionMutator(projectAt), p = m(φ0, φ1);\n    p.parallels = function(_) {\n      if (!arguments.length) return [ φ0 / π * 180, φ1 / π * 180 ];\n      return m(φ0 = _[0] * π / 180, φ1 = _[1] * π / 180);\n    };\n    return p;\n  }\n  function d3_geo_conicEqualArea(φ0, φ1) {\n    var sinφ0 = Math.sin(φ0), n = (sinφ0 + Math.sin(φ1)) / 2, C = 1 + sinφ0 * (2 * n - sinφ0), ρ0 = Math.sqrt(C) / n;\n    function forward(λ, φ) {\n      var ρ = Math.sqrt(C - 2 * n * Math.sin(φ)) / n;\n      return [ ρ * Math.sin(λ *= n), ρ0 - ρ * Math.cos(λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = ρ0 - y;\n      return [ Math.atan2(x, ρ0_y) / n, d3_asin((C - (x * x + ρ0_y * ρ0_y) * n * n) / (2 * n)) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEqualArea = function() {\n    return d3_geo_conic(d3_geo_conicEqualArea);\n  }).raw = d3_geo_conicEqualArea;\n  d3.geo.albers = function() {\n    return d3.geo.conicEqualArea().rotate([ 96, 0 ]).center([ -.6, 38.7 ]).parallels([ 29.5, 45.5 ]).scale(1070);\n  };\n  d3.geo.albersUsa = function() {\n    var lower48 = d3.geo.albers();\n    var alaska = d3.geo.conicEqualArea().rotate([ 154, 0 ]).center([ -2, 58.5 ]).parallels([ 55, 65 ]);\n    var hawaii = d3.geo.conicEqualArea().rotate([ 157, 0 ]).center([ -3, 19.9 ]).parallels([ 8, 18 ]);\n    var point, pointStream = {\n      point: function(x, y) {\n        point = [ x, y ];\n      }\n    }, lower48Point, alaskaPoint, hawaiiPoint;\n    function albersUsa(coordinates) {\n      var x = coordinates[0], y = coordinates[1];\n      point = null;\n      (lower48Point(x, y), point) || (alaskaPoint(x, y), point) || hawaiiPoint(x, y);\n      return point;\n    }\n    albersUsa.invert = function(coordinates) {\n      var k = lower48.scale(), t = lower48.translate(), x = (coordinates[0] - t[0]) / k, y = (coordinates[1] - t[1]) / k;\n      return (y >= .12 && y < .234 && x >= -.425 && x < -.214 ? alaska : y >= .166 && y < .234 && x >= -.214 && x < -.115 ? hawaii : lower48).invert(coordinates);\n    };\n    albersUsa.stream = function(stream) {\n      var lower48Stream = lower48.stream(stream), alaskaStream = alaska.stream(stream), hawaiiStream = hawaii.stream(stream);\n      return {\n        point: function(x, y) {\n          lower48Stream.point(x, y);\n          alaskaStream.point(x, y);\n          hawaiiStream.point(x, y);\n        },\n        sphere: function() {\n          lower48Stream.sphere();\n          alaskaStream.sphere();\n          hawaiiStream.sphere();\n        },\n        lineStart: function() {\n          lower48Stream.lineStart();\n          alaskaStream.lineStart();\n          hawaiiStream.lineStart();\n        },\n        lineEnd: function() {\n          lower48Stream.lineEnd();\n          alaskaStream.lineEnd();\n          hawaiiStream.lineEnd();\n        },\n        polygonStart: function() {\n          lower48Stream.polygonStart();\n          alaskaStream.polygonStart();\n          hawaiiStream.polygonStart();\n        },\n        polygonEnd: function() {\n          lower48Stream.polygonEnd();\n          alaskaStream.polygonEnd();\n          hawaiiStream.polygonEnd();\n        }\n      };\n    };\n    albersUsa.precision = function(_) {\n      if (!arguments.length) return lower48.precision();\n      lower48.precision(_);\n      alaska.precision(_);\n      hawaii.precision(_);\n      return albersUsa;\n    };\n    albersUsa.scale = function(_) {\n      if (!arguments.length) return lower48.scale();\n      lower48.scale(_);\n      alaska.scale(_ * .35);\n      hawaii.scale(_);\n      return albersUsa.translate(lower48.translate());\n    };\n    albersUsa.translate = function(_) {\n      if (!arguments.length) return lower48.translate();\n      var k = lower48.scale(), x = +_[0], y = +_[1];\n      lower48Point = lower48.translate(_).clipExtent([ [ x - .455 * k, y - .238 * k ], [ x + .455 * k, y + .238 * k ] ]).stream(pointStream).point;\n      alaskaPoint = alaska.translate([ x - .307 * k, y + .201 * k ]).clipExtent([ [ x - .425 * k + ε, y + .12 * k + ε ], [ x - .214 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      hawaiiPoint = hawaii.translate([ x - .205 * k, y + .212 * k ]).clipExtent([ [ x - .214 * k + ε, y + .166 * k + ε ], [ x - .115 * k - ε, y + .234 * k - ε ] ]).stream(pointStream).point;\n      return albersUsa;\n    };\n    return albersUsa.scale(1070);\n  };\n  var d3_geo_pathAreaSum, d3_geo_pathAreaPolygon, d3_geo_pathArea = {\n    point: d3_noop,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: function() {\n      d3_geo_pathAreaPolygon = 0;\n      d3_geo_pathArea.lineStart = d3_geo_pathAreaRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathArea.lineStart = d3_geo_pathArea.lineEnd = d3_geo_pathArea.point = d3_noop;\n      d3_geo_pathAreaSum += abs(d3_geo_pathAreaPolygon / 2);\n    }\n  };\n  function d3_geo_pathAreaRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathArea.point = function(x, y) {\n      d3_geo_pathArea.point = nextPoint;\n      x00 = x0 = x, y00 = y0 = y;\n    };\n    function nextPoint(x, y) {\n      d3_geo_pathAreaPolygon += y0 * x - x0 * y;\n      x0 = x, y0 = y;\n    }\n    d3_geo_pathArea.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  var d3_geo_pathBoundsX0, d3_geo_pathBoundsY0, d3_geo_pathBoundsX1, d3_geo_pathBoundsY1;\n  var d3_geo_pathBounds = {\n    point: d3_geo_pathBoundsPoint,\n    lineStart: d3_noop,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_pathBoundsPoint(x, y) {\n    if (x < d3_geo_pathBoundsX0) d3_geo_pathBoundsX0 = x;\n    if (x > d3_geo_pathBoundsX1) d3_geo_pathBoundsX1 = x;\n    if (y < d3_geo_pathBoundsY0) d3_geo_pathBoundsY0 = y;\n    if (y > d3_geo_pathBoundsY1) d3_geo_pathBoundsY1 = y;\n  }\n  function d3_geo_pathBuffer() {\n    var pointCircle = d3_geo_pathBufferCircle(4.5), buffer = [];\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointCircle = d3_geo_pathBufferCircle(_);\n        return stream;\n      },\n      result: function() {\n        if (buffer.length) {\n          var result = buffer.join(\"\");\n          buffer = [];\n          return result;\n        }\n      }\n    };\n    function point(x, y) {\n      buffer.push(\"M\", x, \",\", y, pointCircle);\n    }\n    function pointLineStart(x, y) {\n      buffer.push(\"M\", x, \",\", y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      buffer.push(\"L\", x, \",\", y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      buffer.push(\"Z\");\n    }\n    return stream;\n  }\n  function d3_geo_pathBufferCircle(radius) {\n    return \"m0,\" + radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + -2 * radius + \"a\" + radius + \",\" + radius + \" 0 1,1 0,\" + 2 * radius + \"z\";\n  }\n  var d3_geo_pathCentroid = {\n    point: d3_geo_pathCentroidPoint,\n    lineStart: d3_geo_pathCentroidLineStart,\n    lineEnd: d3_geo_pathCentroidLineEnd,\n    polygonStart: function() {\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidRingStart;\n    },\n    polygonEnd: function() {\n      d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n      d3_geo_pathCentroid.lineStart = d3_geo_pathCentroidLineStart;\n      d3_geo_pathCentroid.lineEnd = d3_geo_pathCentroidLineEnd;\n    }\n  };\n  function d3_geo_pathCentroidPoint(x, y) {\n    d3_geo_centroidX0 += x;\n    d3_geo_centroidY0 += y;\n    ++d3_geo_centroidZ0;\n  }\n  function d3_geo_pathCentroidLineStart() {\n    var x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n  }\n  function d3_geo_pathCentroidLineEnd() {\n    d3_geo_pathCentroid.point = d3_geo_pathCentroidPoint;\n  }\n  function d3_geo_pathCentroidRingStart() {\n    var x00, y00, x0, y0;\n    d3_geo_pathCentroid.point = function(x, y) {\n      d3_geo_pathCentroid.point = nextPoint;\n      d3_geo_pathCentroidPoint(x00 = x0 = x, y00 = y0 = y);\n    };\n    function nextPoint(x, y) {\n      var dx = x - x0, dy = y - y0, z = Math.sqrt(dx * dx + dy * dy);\n      d3_geo_centroidX1 += z * (x0 + x) / 2;\n      d3_geo_centroidY1 += z * (y0 + y) / 2;\n      d3_geo_centroidZ1 += z;\n      z = y0 * x - x0 * y;\n      d3_geo_centroidX2 += z * (x0 + x);\n      d3_geo_centroidY2 += z * (y0 + y);\n      d3_geo_centroidZ2 += z * 3;\n      d3_geo_pathCentroidPoint(x0 = x, y0 = y);\n    }\n    d3_geo_pathCentroid.lineEnd = function() {\n      nextPoint(x00, y00);\n    };\n  }\n  function d3_geo_pathContext(context) {\n    var pointRadius = 4.5;\n    var stream = {\n      point: point,\n      lineStart: function() {\n        stream.point = pointLineStart;\n      },\n      lineEnd: lineEnd,\n      polygonStart: function() {\n        stream.lineEnd = lineEndPolygon;\n      },\n      polygonEnd: function() {\n        stream.lineEnd = lineEnd;\n        stream.point = point;\n      },\n      pointRadius: function(_) {\n        pointRadius = _;\n        return stream;\n      },\n      result: d3_noop\n    };\n    function point(x, y) {\n      context.moveTo(x + pointRadius, y);\n      context.arc(x, y, pointRadius, 0, τ);\n    }\n    function pointLineStart(x, y) {\n      context.moveTo(x, y);\n      stream.point = pointLine;\n    }\n    function pointLine(x, y) {\n      context.lineTo(x, y);\n    }\n    function lineEnd() {\n      stream.point = point;\n    }\n    function lineEndPolygon() {\n      context.closePath();\n    }\n    return stream;\n  }\n  function d3_geo_resample(project) {\n    var δ2 = .5, cosMinDistance = Math.cos(30 * d3_radians), maxDepth = 16;\n    function resample(stream) {\n      return (maxDepth ? resampleRecursive : resampleNone)(stream);\n    }\n    function resampleNone(stream) {\n      return d3_geo_transformPoint(stream, function(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      });\n    }\n    function resampleRecursive(stream) {\n      var λ00, φ00, x00, y00, a00, b00, c00, λ0, x0, y0, a0, b0, c0;\n      var resample = {\n        point: point,\n        lineStart: lineStart,\n        lineEnd: lineEnd,\n        polygonStart: function() {\n          stream.polygonStart();\n          resample.lineStart = ringStart;\n        },\n        polygonEnd: function() {\n          stream.polygonEnd();\n          resample.lineStart = lineStart;\n        }\n      };\n      function point(x, y) {\n        x = project(x, y);\n        stream.point(x[0], x[1]);\n      }\n      function lineStart() {\n        x0 = NaN;\n        resample.point = linePoint;\n        stream.lineStart();\n      }\n      function linePoint(λ, φ) {\n        var c = d3_geo_cartesian([ λ, φ ]), p = project(λ, φ);\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x0 = p[0], y0 = p[1], λ0 = λ, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);\n        stream.point(x0, y0);\n      }\n      function lineEnd() {\n        resample.point = point;\n        stream.lineEnd();\n      }\n      function ringStart() {\n        lineStart();\n        resample.point = ringPoint;\n        resample.lineEnd = ringEnd;\n      }\n      function ringPoint(λ, φ) {\n        linePoint(λ00 = λ, φ00 = φ), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;\n        resample.point = linePoint;\n      }\n      function ringEnd() {\n        resampleLineTo(x0, y0, λ0, a0, b0, c0, x00, y00, λ00, a00, b00, c00, maxDepth, stream);\n        resample.lineEnd = lineEnd;\n        lineEnd();\n      }\n      return resample;\n    }\n    function resampleLineTo(x0, y0, λ0, a0, b0, c0, x1, y1, λ1, a1, b1, c1, depth, stream) {\n      var dx = x1 - x0, dy = y1 - y0, d2 = dx * dx + dy * dy;\n      if (d2 > 4 * δ2 && depth--) {\n        var a = a0 + a1, b = b0 + b1, c = c0 + c1, m = Math.sqrt(a * a + b * b + c * c), φ2 = Math.asin(c /= m), λ2 = abs(abs(c) - 1) < ε || abs(λ0 - λ1) < ε ? (λ0 + λ1) / 2 : Math.atan2(b, a), p = project(λ2, φ2), x2 = p[0], y2 = p[1], dx2 = x2 - x0, dy2 = y2 - y0, dz = dy * dx2 - dx * dy2;\n        if (dz * dz / d2 > δ2 || abs((dx * dx2 + dy * dy2) / d2 - .5) > .3 || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) {\n          resampleLineTo(x0, y0, λ0, a0, b0, c0, x2, y2, λ2, a /= m, b /= m, c, depth, stream);\n          stream.point(x2, y2);\n          resampleLineTo(x2, y2, λ2, a, b, c, x1, y1, λ1, a1, b1, c1, depth, stream);\n        }\n      }\n    }\n    resample.precision = function(_) {\n      if (!arguments.length) return Math.sqrt(δ2);\n      maxDepth = (δ2 = _ * _) > 0 && 16;\n      return resample;\n    };\n    return resample;\n  }\n  d3.geo.path = function() {\n    var pointRadius = 4.5, projection, context, projectStream, contextStream, cacheStream;\n    function path(object) {\n      if (object) {\n        if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n        if (!cacheStream || !cacheStream.valid) cacheStream = projectStream(contextStream);\n        d3.geo.stream(object, cacheStream);\n      }\n      return contextStream.result();\n    }\n    path.area = function(object) {\n      d3_geo_pathAreaSum = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathArea));\n      return d3_geo_pathAreaSum;\n    };\n    path.centroid = function(object) {\n      d3_geo_centroidX0 = d3_geo_centroidY0 = d3_geo_centroidZ0 = d3_geo_centroidX1 = d3_geo_centroidY1 = d3_geo_centroidZ1 = d3_geo_centroidX2 = d3_geo_centroidY2 = d3_geo_centroidZ2 = 0;\n      d3.geo.stream(object, projectStream(d3_geo_pathCentroid));\n      return d3_geo_centroidZ2 ? [ d3_geo_centroidX2 / d3_geo_centroidZ2, d3_geo_centroidY2 / d3_geo_centroidZ2 ] : d3_geo_centroidZ1 ? [ d3_geo_centroidX1 / d3_geo_centroidZ1, d3_geo_centroidY1 / d3_geo_centroidZ1 ] : d3_geo_centroidZ0 ? [ d3_geo_centroidX0 / d3_geo_centroidZ0, d3_geo_centroidY0 / d3_geo_centroidZ0 ] : [ NaN, NaN ];\n    };\n    path.bounds = function(object) {\n      d3_geo_pathBoundsX1 = d3_geo_pathBoundsY1 = -(d3_geo_pathBoundsX0 = d3_geo_pathBoundsY0 = Infinity);\n      d3.geo.stream(object, projectStream(d3_geo_pathBounds));\n      return [ [ d3_geo_pathBoundsX0, d3_geo_pathBoundsY0 ], [ d3_geo_pathBoundsX1, d3_geo_pathBoundsY1 ] ];\n    };\n    path.projection = function(_) {\n      if (!arguments.length) return projection;\n      projectStream = (projection = _) ? _.stream || d3_geo_pathProjectStream(_) : d3_identity;\n      return reset();\n    };\n    path.context = function(_) {\n      if (!arguments.length) return context;\n      contextStream = (context = _) == null ? new d3_geo_pathBuffer() : new d3_geo_pathContext(_);\n      if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n      return reset();\n    };\n    path.pointRadius = function(_) {\n      if (!arguments.length) return pointRadius;\n      pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n      return path;\n    };\n    function reset() {\n      cacheStream = null;\n      return path;\n    }\n    return path.projection(d3.geo.albersUsa()).context(null);\n  };\n  function d3_geo_pathProjectStream(project) {\n    var resample = d3_geo_resample(function(x, y) {\n      return project([ x * d3_degrees, y * d3_degrees ]);\n    });\n    return function(stream) {\n      return d3_geo_projectionRadians(resample(stream));\n    };\n  }\n  d3.geo.transform = function(methods) {\n    return {\n      stream: function(stream) {\n        var transform = new d3_geo_transform(stream);\n        for (var k in methods) transform[k] = methods[k];\n        return transform;\n      }\n    };\n  };\n  function d3_geo_transform(stream) {\n    this.stream = stream;\n  }\n  d3_geo_transform.prototype = {\n    point: function(x, y) {\n      this.stream.point(x, y);\n    },\n    sphere: function() {\n      this.stream.sphere();\n    },\n    lineStart: function() {\n      this.stream.lineStart();\n    },\n    lineEnd: function() {\n      this.stream.lineEnd();\n    },\n    polygonStart: function() {\n      this.stream.polygonStart();\n    },\n    polygonEnd: function() {\n      this.stream.polygonEnd();\n    }\n  };\n  function d3_geo_transformPoint(stream, point) {\n    return {\n      point: point,\n      sphere: function() {\n        stream.sphere();\n      },\n      lineStart: function() {\n        stream.lineStart();\n      },\n      lineEnd: function() {\n        stream.lineEnd();\n      },\n      polygonStart: function() {\n        stream.polygonStart();\n      },\n      polygonEnd: function() {\n        stream.polygonEnd();\n      }\n    };\n  }\n  d3.geo.projection = d3_geo_projection;\n  d3.geo.projectionMutator = d3_geo_projectionMutator;\n  function d3_geo_projection(project) {\n    return d3_geo_projectionMutator(function() {\n      return project;\n    })();\n  }\n  function d3_geo_projectionMutator(projectAt) {\n    var project, rotate, projectRotate, projectResample = d3_geo_resample(function(x, y) {\n      x = project(x, y);\n      return [ x[0] * k + δx, δy - x[1] * k ];\n    }), k = 150, x = 480, y = 250, λ = 0, φ = 0, δλ = 0, δφ = 0, δγ = 0, δx, δy, preclip = d3_geo_clipAntimeridian, postclip = d3_identity, clipAngle = null, clipExtent = null, stream;\n    function projection(point) {\n      point = projectRotate(point[0] * d3_radians, point[1] * d3_radians);\n      return [ point[0] * k + δx, δy - point[1] * k ];\n    }\n    function invert(point) {\n      point = projectRotate.invert((point[0] - δx) / k, (δy - point[1]) / k);\n      return point && [ point[0] * d3_degrees, point[1] * d3_degrees ];\n    }\n    projection.stream = function(output) {\n      if (stream) stream.valid = false;\n      stream = d3_geo_projectionRadians(preclip(rotate, projectResample(postclip(output))));\n      stream.valid = true;\n      return stream;\n    };\n    projection.clipAngle = function(_) {\n      if (!arguments.length) return clipAngle;\n      preclip = _ == null ? (clipAngle = _, d3_geo_clipAntimeridian) : d3_geo_clipCircle((clipAngle = +_) * d3_radians);\n      return invalidate();\n    };\n    projection.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent;\n      clipExtent = _;\n      postclip = _ ? d3_geo_clipExtent(_[0][0], _[0][1], _[1][0], _[1][1]) : d3_identity;\n      return invalidate();\n    };\n    projection.scale = function(_) {\n      if (!arguments.length) return k;\n      k = +_;\n      return reset();\n    };\n    projection.translate = function(_) {\n      if (!arguments.length) return [ x, y ];\n      x = +_[0];\n      y = +_[1];\n      return reset();\n    };\n    projection.center = function(_) {\n      if (!arguments.length) return [ λ * d3_degrees, φ * d3_degrees ];\n      λ = _[0] % 360 * d3_radians;\n      φ = _[1] % 360 * d3_radians;\n      return reset();\n    };\n    projection.rotate = function(_) {\n      if (!arguments.length) return [ δλ * d3_degrees, δφ * d3_degrees, δγ * d3_degrees ];\n      δλ = _[0] % 360 * d3_radians;\n      δφ = _[1] % 360 * d3_radians;\n      δγ = _.length > 2 ? _[2] % 360 * d3_radians : 0;\n      return reset();\n    };\n    d3.rebind(projection, projectResample, \"precision\");\n    function reset() {\n      projectRotate = d3_geo_compose(rotate = d3_geo_rotation(δλ, δφ, δγ), project);\n      var center = project(λ, φ);\n      δx = x - center[0] * k;\n      δy = y + center[1] * k;\n      return invalidate();\n    }\n    function invalidate() {\n      if (stream) stream.valid = false, stream = null;\n      return projection;\n    }\n    return function() {\n      project = projectAt.apply(this, arguments);\n      projection.invert = project.invert && invert;\n      return reset();\n    };\n  }\n  function d3_geo_projectionRadians(stream) {\n    return d3_geo_transformPoint(stream, function(x, y) {\n      stream.point(x * d3_radians, y * d3_radians);\n    });\n  }\n  function d3_geo_equirectangular(λ, φ) {\n    return [ λ, φ ];\n  }\n  (d3.geo.equirectangular = function() {\n    return d3_geo_projection(d3_geo_equirectangular);\n  }).raw = d3_geo_equirectangular.invert = d3_geo_equirectangular;\n  d3.geo.rotation = function(rotate) {\n    rotate = d3_geo_rotation(rotate[0] % 360 * d3_radians, rotate[1] * d3_radians, rotate.length > 2 ? rotate[2] * d3_radians : 0);\n    function forward(coordinates) {\n      coordinates = rotate(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    }\n    forward.invert = function(coordinates) {\n      coordinates = rotate.invert(coordinates[0] * d3_radians, coordinates[1] * d3_radians);\n      return coordinates[0] *= d3_degrees, coordinates[1] *= d3_degrees, coordinates;\n    };\n    return forward;\n  };\n  function d3_geo_identityRotation(λ, φ) {\n    return [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n  }\n  d3_geo_identityRotation.invert = d3_geo_equirectangular;\n  function d3_geo_rotation(δλ, δφ, δγ) {\n    return δλ ? δφ || δγ ? d3_geo_compose(d3_geo_rotationλ(δλ), d3_geo_rotationφγ(δφ, δγ)) : d3_geo_rotationλ(δλ) : δφ || δγ ? d3_geo_rotationφγ(δφ, δγ) : d3_geo_identityRotation;\n  }\n  function d3_geo_forwardRotationλ(δλ) {\n    return function(λ, φ) {\n      return λ += δλ, [ λ > π ? λ - τ : λ < -π ? λ + τ : λ, φ ];\n    };\n  }\n  function d3_geo_rotationλ(δλ) {\n    var rotation = d3_geo_forwardRotationλ(δλ);\n    rotation.invert = d3_geo_forwardRotationλ(-δλ);\n    return rotation;\n  }\n  function d3_geo_rotationφγ(δφ, δγ) {\n    var cosδφ = Math.cos(δφ), sinδφ = Math.sin(δφ), cosδγ = Math.cos(δγ), sinδγ = Math.sin(δγ);\n    function rotation(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδφ + x * sinδφ;\n      return [ Math.atan2(y * cosδγ - k * sinδγ, x * cosδφ - z * sinδφ), d3_asin(k * cosδγ + y * sinδγ) ];\n    }\n    rotation.invert = function(λ, φ) {\n      var cosφ = Math.cos(φ), x = Math.cos(λ) * cosφ, y = Math.sin(λ) * cosφ, z = Math.sin(φ), k = z * cosδγ - y * sinδγ;\n      return [ Math.atan2(y * cosδγ + z * sinδγ, x * cosδφ + k * sinδφ), d3_asin(k * cosδφ - x * sinδφ) ];\n    };\n    return rotation;\n  }\n  d3.geo.circle = function() {\n    var origin = [ 0, 0 ], angle, precision = 6, interpolate;\n    function circle() {\n      var center = typeof origin === \"function\" ? origin.apply(this, arguments) : origin, rotate = d3_geo_rotation(-center[0] * d3_radians, -center[1] * d3_radians, 0).invert, ring = [];\n      interpolate(null, null, 1, {\n        point: function(x, y) {\n          ring.push(x = rotate(x, y));\n          x[0] *= d3_degrees, x[1] *= d3_degrees;\n        }\n      });\n      return {\n        type: \"Polygon\",\n        coordinates: [ ring ]\n      };\n    }\n    circle.origin = function(x) {\n      if (!arguments.length) return origin;\n      origin = x;\n      return circle;\n    };\n    circle.angle = function(x) {\n      if (!arguments.length) return angle;\n      interpolate = d3_geo_circleInterpolate((angle = +x) * d3_radians, precision * d3_radians);\n      return circle;\n    };\n    circle.precision = function(_) {\n      if (!arguments.length) return precision;\n      interpolate = d3_geo_circleInterpolate(angle * d3_radians, (precision = +_) * d3_radians);\n      return circle;\n    };\n    return circle.angle(90);\n  };\n  function d3_geo_circleInterpolate(radius, precision) {\n    var cr = Math.cos(radius), sr = Math.sin(radius);\n    return function(from, to, direction, listener) {\n      var step = direction * precision;\n      if (from != null) {\n        from = d3_geo_circleAngle(cr, from);\n        to = d3_geo_circleAngle(cr, to);\n        if (direction > 0 ? from < to : from > to) from += direction * τ;\n      } else {\n        from = radius + direction * τ;\n        to = radius - .5 * step;\n      }\n      for (var point, t = from; direction > 0 ? t > to : t < to; t -= step) {\n        listener.point((point = d3_geo_spherical([ cr, -sr * Math.cos(t), -sr * Math.sin(t) ]))[0], point[1]);\n      }\n    };\n  }\n  function d3_geo_circleAngle(cr, point) {\n    var a = d3_geo_cartesian(point);\n    a[0] -= cr;\n    d3_geo_cartesianNormalize(a);\n    var angle = d3_acos(-a[1]);\n    return ((-a[2] < 0 ? -angle : angle) + 2 * Math.PI - ε) % (2 * Math.PI);\n  }\n  d3.geo.distance = function(a, b) {\n    var Δλ = (b[0] - a[0]) * d3_radians, φ0 = a[1] * d3_radians, φ1 = b[1] * d3_radians, sinΔλ = Math.sin(Δλ), cosΔλ = Math.cos(Δλ), sinφ0 = Math.sin(φ0), cosφ0 = Math.cos(φ0), sinφ1 = Math.sin(φ1), cosφ1 = Math.cos(φ1), t;\n    return Math.atan2(Math.sqrt((t = cosφ1 * sinΔλ) * t + (t = cosφ0 * sinφ1 - sinφ0 * cosφ1 * cosΔλ) * t), sinφ0 * sinφ1 + cosφ0 * cosφ1 * cosΔλ);\n  };\n  d3.geo.graticule = function() {\n    var x1, x0, X1, X0, y1, y0, Y1, Y0, dx = 10, dy = dx, DX = 90, DY = 360, x, y, X, Y, precision = 2.5;\n    function graticule() {\n      return {\n        type: \"MultiLineString\",\n        coordinates: lines()\n      };\n    }\n    function lines() {\n      return d3.range(Math.ceil(X0 / DX) * DX, X1, DX).map(X).concat(d3.range(Math.ceil(Y0 / DY) * DY, Y1, DY).map(Y)).concat(d3.range(Math.ceil(x0 / dx) * dx, x1, dx).filter(function(x) {\n        return abs(x % DX) > ε;\n      }).map(x)).concat(d3.range(Math.ceil(y0 / dy) * dy, y1, dy).filter(function(y) {\n        return abs(y % DY) > ε;\n      }).map(y));\n    }\n    graticule.lines = function() {\n      return lines().map(function(coordinates) {\n        return {\n          type: \"LineString\",\n          coordinates: coordinates\n        };\n      });\n    };\n    graticule.outline = function() {\n      return {\n        type: \"Polygon\",\n        coordinates: [ X(X0).concat(Y(Y1).slice(1), X(X1).reverse().slice(1), Y(Y0).reverse().slice(1)) ]\n      };\n    };\n    graticule.extent = function(_) {\n      if (!arguments.length) return graticule.minorExtent();\n      return graticule.majorExtent(_).minorExtent(_);\n    };\n    graticule.majorExtent = function(_) {\n      if (!arguments.length) return [ [ X0, Y0 ], [ X1, Y1 ] ];\n      X0 = +_[0][0], X1 = +_[1][0];\n      Y0 = +_[0][1], Y1 = +_[1][1];\n      if (X0 > X1) _ = X0, X0 = X1, X1 = _;\n      if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.minorExtent = function(_) {\n      if (!arguments.length) return [ [ x0, y0 ], [ x1, y1 ] ];\n      x0 = +_[0][0], x1 = +_[1][0];\n      y0 = +_[0][1], y1 = +_[1][1];\n      if (x0 > x1) _ = x0, x0 = x1, x1 = _;\n      if (y0 > y1) _ = y0, y0 = y1, y1 = _;\n      return graticule.precision(precision);\n    };\n    graticule.step = function(_) {\n      if (!arguments.length) return graticule.minorStep();\n      return graticule.majorStep(_).minorStep(_);\n    };\n    graticule.majorStep = function(_) {\n      if (!arguments.length) return [ DX, DY ];\n      DX = +_[0], DY = +_[1];\n      return graticule;\n    };\n    graticule.minorStep = function(_) {\n      if (!arguments.length) return [ dx, dy ];\n      dx = +_[0], dy = +_[1];\n      return graticule;\n    };\n    graticule.precision = function(_) {\n      if (!arguments.length) return precision;\n      precision = +_;\n      x = d3_geo_graticuleX(y0, y1, 90);\n      y = d3_geo_graticuleY(x0, x1, precision);\n      X = d3_geo_graticuleX(Y0, Y1, 90);\n      Y = d3_geo_graticuleY(X0, X1, precision);\n      return graticule;\n    };\n    return graticule.majorExtent([ [ -180, -90 + ε ], [ 180, 90 - ε ] ]).minorExtent([ [ -180, -80 - ε ], [ 180, 80 + ε ] ]);\n  };\n  function d3_geo_graticuleX(y0, y1, dy) {\n    var y = d3.range(y0, y1 - ε, dy).concat(y1);\n    return function(x) {\n      return y.map(function(y) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_geo_graticuleY(x0, x1, dx) {\n    var x = d3.range(x0, x1 - ε, dx).concat(x1);\n    return function(y) {\n      return x.map(function(x) {\n        return [ x, y ];\n      });\n    };\n  }\n  function d3_source(d) {\n    return d.source;\n  }\n  function d3_target(d) {\n    return d.target;\n  }\n  d3.geo.greatArc = function() {\n    var source = d3_source, source_, target = d3_target, target_;\n    function greatArc() {\n      return {\n        type: \"LineString\",\n        coordinates: [ source_ || source.apply(this, arguments), target_ || target.apply(this, arguments) ]\n      };\n    }\n    greatArc.distance = function() {\n      return d3.geo.distance(source_ || source.apply(this, arguments), target_ || target.apply(this, arguments));\n    };\n    greatArc.source = function(_) {\n      if (!arguments.length) return source;\n      source = _, source_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.target = function(_) {\n      if (!arguments.length) return target;\n      target = _, target_ = typeof _ === \"function\" ? null : _;\n      return greatArc;\n    };\n    greatArc.precision = function() {\n      return arguments.length ? greatArc : 0;\n    };\n    return greatArc;\n  };\n  d3.geo.interpolate = function(source, target) {\n    return d3_geo_interpolate(source[0] * d3_radians, source[1] * d3_radians, target[0] * d3_radians, target[1] * d3_radians);\n  };\n  function d3_geo_interpolate(x0, y0, x1, y1) {\n    var cy0 = Math.cos(y0), sy0 = Math.sin(y0), cy1 = Math.cos(y1), sy1 = Math.sin(y1), kx0 = cy0 * Math.cos(x0), ky0 = cy0 * Math.sin(x0), kx1 = cy1 * Math.cos(x1), ky1 = cy1 * Math.sin(x1), d = 2 * Math.asin(Math.sqrt(d3_haversin(y1 - y0) + cy0 * cy1 * d3_haversin(x1 - x0))), k = 1 / Math.sin(d);\n    var interpolate = d ? function(t) {\n      var B = Math.sin(t *= d) * k, A = Math.sin(d - t) * k, x = A * kx0 + B * kx1, y = A * ky0 + B * ky1, z = A * sy0 + B * sy1;\n      return [ Math.atan2(y, x) * d3_degrees, Math.atan2(z, Math.sqrt(x * x + y * y)) * d3_degrees ];\n    } : function() {\n      return [ x0 * d3_degrees, y0 * d3_degrees ];\n    };\n    interpolate.distance = d;\n    return interpolate;\n  }\n  d3.geo.length = function(object) {\n    d3_geo_lengthSum = 0;\n    d3.geo.stream(object, d3_geo_length);\n    return d3_geo_lengthSum;\n  };\n  var d3_geo_lengthSum;\n  var d3_geo_length = {\n    sphere: d3_noop,\n    point: d3_noop,\n    lineStart: d3_geo_lengthLineStart,\n    lineEnd: d3_noop,\n    polygonStart: d3_noop,\n    polygonEnd: d3_noop\n  };\n  function d3_geo_lengthLineStart() {\n    var λ0, sinφ0, cosφ0;\n    d3_geo_length.point = function(λ, φ) {\n      λ0 = λ * d3_radians, sinφ0 = Math.sin(φ *= d3_radians), cosφ0 = Math.cos(φ);\n      d3_geo_length.point = nextPoint;\n    };\n    d3_geo_length.lineEnd = function() {\n      d3_geo_length.point = d3_geo_length.lineEnd = d3_noop;\n    };\n    function nextPoint(λ, φ) {\n      var sinφ = Math.sin(φ *= d3_radians), cosφ = Math.cos(φ), t = abs((λ *= d3_radians) - λ0), cosΔλ = Math.cos(t);\n      d3_geo_lengthSum += Math.atan2(Math.sqrt((t = cosφ * Math.sin(t)) * t + (t = cosφ0 * sinφ - sinφ0 * cosφ * cosΔλ) * t), sinφ0 * sinφ + cosφ0 * cosφ * cosΔλ);\n      λ0 = λ, sinφ0 = sinφ, cosφ0 = cosφ;\n    }\n  }\n  function d3_geo_azimuthal(scale, angle) {\n    function azimuthal(λ, φ) {\n      var cosλ = Math.cos(λ), cosφ = Math.cos(φ), k = scale(cosλ * cosφ);\n      return [ k * cosφ * Math.sin(λ), k * Math.sin(φ) ];\n    }\n    azimuthal.invert = function(x, y) {\n      var ρ = Math.sqrt(x * x + y * y), c = angle(ρ), sinc = Math.sin(c), cosc = Math.cos(c);\n      return [ Math.atan2(x * sinc, ρ * cosc), Math.asin(ρ && y * sinc / ρ) ];\n    };\n    return azimuthal;\n  }\n  var d3_geo_azimuthalEqualArea = d3_geo_azimuthal(function(cosλcosφ) {\n    return Math.sqrt(2 / (1 + cosλcosφ));\n  }, function(ρ) {\n    return 2 * Math.asin(ρ / 2);\n  });\n  (d3.geo.azimuthalEqualArea = function() {\n    return d3_geo_projection(d3_geo_azimuthalEqualArea);\n  }).raw = d3_geo_azimuthalEqualArea;\n  var d3_geo_azimuthalEquidistant = d3_geo_azimuthal(function(cosλcosφ) {\n    var c = Math.acos(cosλcosφ);\n    return c && c / Math.sin(c);\n  }, d3_identity);\n  (d3.geo.azimuthalEquidistant = function() {\n    return d3_geo_projection(d3_geo_azimuthalEquidistant);\n  }).raw = d3_geo_azimuthalEquidistant;\n  function d3_geo_conicConformal(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), t = function(φ) {\n      return Math.tan(π / 4 + φ / 2);\n    }, n = φ0 === φ1 ? Math.sin(φ0) : Math.log(cosφ0 / Math.cos(φ1)) / Math.log(t(φ1) / t(φ0)), F = cosφ0 * Math.pow(t(φ0), n) / n;\n    if (!n) return d3_geo_mercator;\n    function forward(λ, φ) {\n      if (F > 0) {\n        if (φ < -halfπ + ε) φ = -halfπ + ε;\n      } else {\n        if (φ > halfπ - ε) φ = halfπ - ε;\n      }\n      var ρ = F / Math.pow(t(φ), n);\n      return [ ρ * Math.sin(n * λ), F - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = F - y, ρ = d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y);\n      return [ Math.atan2(x, ρ0_y) / n, 2 * Math.atan(Math.pow(F / ρ, 1 / n)) - halfπ ];\n    };\n    return forward;\n  }\n  (d3.geo.conicConformal = function() {\n    return d3_geo_conic(d3_geo_conicConformal);\n  }).raw = d3_geo_conicConformal;\n  function d3_geo_conicEquidistant(φ0, φ1) {\n    var cosφ0 = Math.cos(φ0), n = φ0 === φ1 ? Math.sin(φ0) : (cosφ0 - Math.cos(φ1)) / (φ1 - φ0), G = cosφ0 / n + φ0;\n    if (abs(n) < ε) return d3_geo_equirectangular;\n    function forward(λ, φ) {\n      var ρ = G - φ;\n      return [ ρ * Math.sin(n * λ), G - ρ * Math.cos(n * λ) ];\n    }\n    forward.invert = function(x, y) {\n      var ρ0_y = G - y;\n      return [ Math.atan2(x, ρ0_y) / n, G - d3_sgn(n) * Math.sqrt(x * x + ρ0_y * ρ0_y) ];\n    };\n    return forward;\n  }\n  (d3.geo.conicEquidistant = function() {\n    return d3_geo_conic(d3_geo_conicEquidistant);\n  }).raw = d3_geo_conicEquidistant;\n  var d3_geo_gnomonic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / cosλcosφ;\n  }, Math.atan);\n  (d3.geo.gnomonic = function() {\n    return d3_geo_projection(d3_geo_gnomonic);\n  }).raw = d3_geo_gnomonic;\n  function d3_geo_mercator(λ, φ) {\n    return [ λ, Math.log(Math.tan(π / 4 + φ / 2)) ];\n  }\n  d3_geo_mercator.invert = function(x, y) {\n    return [ x, 2 * Math.atan(Math.exp(y)) - halfπ ];\n  };\n  function d3_geo_mercatorProjection(project) {\n    var m = d3_geo_projection(project), scale = m.scale, translate = m.translate, clipExtent = m.clipExtent, clipAuto;\n    m.scale = function() {\n      var v = scale.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.translate = function() {\n      var v = translate.apply(m, arguments);\n      return v === m ? clipAuto ? m.clipExtent(null) : m : v;\n    };\n    m.clipExtent = function(_) {\n      var v = clipExtent.apply(m, arguments);\n      if (v === m) {\n        if (clipAuto = _ == null) {\n          var k = π * scale(), t = translate();\n          clipExtent([ [ t[0] - k, t[1] - k ], [ t[0] + k, t[1] + k ] ]);\n        }\n      } else if (clipAuto) {\n        v = null;\n      }\n      return v;\n    };\n    return m.clipExtent(null);\n  }\n  (d3.geo.mercator = function() {\n    return d3_geo_mercatorProjection(d3_geo_mercator);\n  }).raw = d3_geo_mercator;\n  var d3_geo_orthographic = d3_geo_azimuthal(function() {\n    return 1;\n  }, Math.asin);\n  (d3.geo.orthographic = function() {\n    return d3_geo_projection(d3_geo_orthographic);\n  }).raw = d3_geo_orthographic;\n  var d3_geo_stereographic = d3_geo_azimuthal(function(cosλcosφ) {\n    return 1 / (1 + cosλcosφ);\n  }, function(ρ) {\n    return 2 * Math.atan(ρ);\n  });\n  (d3.geo.stereographic = function() {\n    return d3_geo_projection(d3_geo_stereographic);\n  }).raw = d3_geo_stereographic;\n  function d3_geo_transverseMercator(λ, φ) {\n    return [ Math.log(Math.tan(π / 4 + φ / 2)), -λ ];\n  }\n  d3_geo_transverseMercator.invert = function(x, y) {\n    return [ -y, 2 * Math.atan(Math.exp(x)) - halfπ ];\n  };\n  (d3.geo.transverseMercator = function() {\n    var projection = d3_geo_mercatorProjection(d3_geo_transverseMercator), center = projection.center, rotate = projection.rotate;\n    projection.center = function(_) {\n      return _ ? center([ -_[1], _[0] ]) : (_ = center(), [ _[1], -_[0] ]);\n    };\n    projection.rotate = function(_) {\n      return _ ? rotate([ _[0], _[1], _.length > 2 ? _[2] + 90 : 90 ]) : (_ = rotate(), \n      [ _[0], _[1], _[2] - 90 ]);\n    };\n    return rotate([ 0, 0, 90 ]);\n  }).raw = d3_geo_transverseMercator;\n  d3.geom = {};\n  function d3_geom_pointX(d) {\n    return d[0];\n  }\n  function d3_geom_pointY(d) {\n    return d[1];\n  }\n  d3.geom.hull = function(vertices) {\n    var x = d3_geom_pointX, y = d3_geom_pointY;\n    if (arguments.length) return hull(vertices);\n    function hull(data) {\n      if (data.length < 3) return [];\n      var fx = d3_functor(x), fy = d3_functor(y), i, n = data.length, points = [], flippedPoints = [];\n      for (i = 0; i < n; i++) {\n        points.push([ +fx.call(this, data[i], i), +fy.call(this, data[i], i), i ]);\n      }\n      points.sort(d3_geom_hullOrder);\n      for (i = 0; i < n; i++) flippedPoints.push([ points[i][0], -points[i][1] ]);\n      var upper = d3_geom_hullUpper(points), lower = d3_geom_hullUpper(flippedPoints);\n      var skipLeft = lower[0] === upper[0], skipRight = lower[lower.length - 1] === upper[upper.length - 1], polygon = [];\n      for (i = upper.length - 1; i >= 0; --i) polygon.push(data[points[upper[i]][2]]);\n      for (i = +skipLeft; i < lower.length - skipRight; ++i) polygon.push(data[points[lower[i]][2]]);\n      return polygon;\n    }\n    hull.x = function(_) {\n      return arguments.length ? (x = _, hull) : x;\n    };\n    hull.y = function(_) {\n      return arguments.length ? (y = _, hull) : y;\n    };\n    return hull;\n  };\n  function d3_geom_hullUpper(points) {\n    var n = points.length, hull = [ 0, 1 ], hs = 2;\n    for (var i = 2; i < n; i++) {\n      while (hs > 1 && d3_cross2d(points[hull[hs - 2]], points[hull[hs - 1]], points[i]) <= 0) --hs;\n      hull[hs++] = i;\n    }\n    return hull.slice(0, hs);\n  }\n  function d3_geom_hullOrder(a, b) {\n    return a[0] - b[0] || a[1] - b[1];\n  }\n  d3.geom.polygon = function(coordinates) {\n    d3_subclass(coordinates, d3_geom_polygonPrototype);\n    return coordinates;\n  };\n  var d3_geom_polygonPrototype = d3.geom.polygon.prototype = [];\n  d3_geom_polygonPrototype.area = function() {\n    var i = -1, n = this.length, a, b = this[n - 1], area = 0;\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      area += a[1] * b[0] - a[0] * b[1];\n    }\n    return area * .5;\n  };\n  d3_geom_polygonPrototype.centroid = function(k) {\n    var i = -1, n = this.length, x = 0, y = 0, a, b = this[n - 1], c;\n    if (!arguments.length) k = -1 / (6 * this.area());\n    while (++i < n) {\n      a = b;\n      b = this[i];\n      c = a[0] * b[1] - b[0] * a[1];\n      x += (a[0] + b[0]) * c;\n      y += (a[1] + b[1]) * c;\n    }\n    return [ x * k, y * k ];\n  };\n  d3_geom_polygonPrototype.clip = function(subject) {\n    var input, closed = d3_geom_polygonClosed(subject), i = -1, n = this.length - d3_geom_polygonClosed(this), j, m, a = this[n - 1], b, c, d;\n    while (++i < n) {\n      input = subject.slice();\n      subject.length = 0;\n      b = this[i];\n      c = input[(m = input.length - closed) - 1];\n      j = -1;\n      while (++j < m) {\n        d = input[j];\n        if (d3_geom_polygonInside(d, a, b)) {\n          if (!d3_geom_polygonInside(c, a, b)) {\n            subject.push(d3_geom_polygonIntersect(c, d, a, b));\n          }\n          subject.push(d);\n        } else if (d3_geom_polygonInside(c, a, b)) {\n          subject.push(d3_geom_polygonIntersect(c, d, a, b));\n        }\n        c = d;\n      }\n      if (closed) subject.push(subject[0]);\n      a = b;\n    }\n    return subject;\n  };\n  function d3_geom_polygonInside(p, a, b) {\n    return (b[0] - a[0]) * (p[1] - a[1]) < (b[1] - a[1]) * (p[0] - a[0]);\n  }\n  function d3_geom_polygonIntersect(c, d, a, b) {\n    var x1 = c[0], x3 = a[0], x21 = d[0] - x1, x43 = b[0] - x3, y1 = c[1], y3 = a[1], y21 = d[1] - y1, y43 = b[1] - y3, ua = (x43 * (y1 - y3) - y43 * (x1 - x3)) / (y43 * x21 - x43 * y21);\n    return [ x1 + ua * x21, y1 + ua * y21 ];\n  }\n  function d3_geom_polygonClosed(coordinates) {\n    var a = coordinates[0], b = coordinates[coordinates.length - 1];\n    return !(a[0] - b[0] || a[1] - b[1]);\n  }\n  var d3_geom_voronoiEdges, d3_geom_voronoiCells, d3_geom_voronoiBeaches, d3_geom_voronoiBeachPool = [], d3_geom_voronoiFirstCircle, d3_geom_voronoiCircles, d3_geom_voronoiCirclePool = [];\n  function d3_geom_voronoiBeach() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.edge = this.site = this.circle = null;\n  }\n  function d3_geom_voronoiCreateBeach(site) {\n    var beach = d3_geom_voronoiBeachPool.pop() || new d3_geom_voronoiBeach();\n    beach.site = site;\n    return beach;\n  }\n  function d3_geom_voronoiDetachBeach(beach) {\n    d3_geom_voronoiDetachCircle(beach);\n    d3_geom_voronoiBeaches.remove(beach);\n    d3_geom_voronoiBeachPool.push(beach);\n    d3_geom_voronoiRedBlackNode(beach);\n  }\n  function d3_geom_voronoiRemoveBeach(beach) {\n    var circle = beach.circle, x = circle.x, y = circle.cy, vertex = {\n      x: x,\n      y: y\n    }, previous = beach.P, next = beach.N, disappearing = [ beach ];\n    d3_geom_voronoiDetachBeach(beach);\n    var lArc = previous;\n    while (lArc.circle && abs(x - lArc.circle.x) < ε && abs(y - lArc.circle.cy) < ε) {\n      previous = lArc.P;\n      disappearing.unshift(lArc);\n      d3_geom_voronoiDetachBeach(lArc);\n      lArc = previous;\n    }\n    disappearing.unshift(lArc);\n    d3_geom_voronoiDetachCircle(lArc);\n    var rArc = next;\n    while (rArc.circle && abs(x - rArc.circle.x) < ε && abs(y - rArc.circle.cy) < ε) {\n      next = rArc.N;\n      disappearing.push(rArc);\n      d3_geom_voronoiDetachBeach(rArc);\n      rArc = next;\n    }\n    disappearing.push(rArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var nArcs = disappearing.length, iArc;\n    for (iArc = 1; iArc < nArcs; ++iArc) {\n      rArc = disappearing[iArc];\n      lArc = disappearing[iArc - 1];\n      d3_geom_voronoiSetEdgeEnd(rArc.edge, lArc.site, rArc.site, vertex);\n    }\n    lArc = disappearing[0];\n    rArc = disappearing[nArcs - 1];\n    rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, rArc.site, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiAddBeach(site) {\n    var x = site.x, directrix = site.y, lArc, rArc, dxl, dxr, node = d3_geom_voronoiBeaches._;\n    while (node) {\n      dxl = d3_geom_voronoiLeftBreakPoint(node, directrix) - x;\n      if (dxl > ε) node = node.L; else {\n        dxr = x - d3_geom_voronoiRightBreakPoint(node, directrix);\n        if (dxr > ε) {\n          if (!node.R) {\n            lArc = node;\n            break;\n          }\n          node = node.R;\n        } else {\n          if (dxl > -ε) {\n            lArc = node.P;\n            rArc = node;\n          } else if (dxr > -ε) {\n            lArc = node;\n            rArc = node.N;\n          } else {\n            lArc = rArc = node;\n          }\n          break;\n        }\n      }\n    }\n    var newArc = d3_geom_voronoiCreateBeach(site);\n    d3_geom_voronoiBeaches.insert(lArc, newArc);\n    if (!lArc && !rArc) return;\n    if (lArc === rArc) {\n      d3_geom_voronoiDetachCircle(lArc);\n      rArc = d3_geom_voronoiCreateBeach(lArc.site);\n      d3_geom_voronoiBeaches.insert(newArc, rArc);\n      newArc.edge = rArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      d3_geom_voronoiAttachCircle(lArc);\n      d3_geom_voronoiAttachCircle(rArc);\n      return;\n    }\n    if (!rArc) {\n      newArc.edge = d3_geom_voronoiCreateEdge(lArc.site, newArc.site);\n      return;\n    }\n    d3_geom_voronoiDetachCircle(lArc);\n    d3_geom_voronoiDetachCircle(rArc);\n    var lSite = lArc.site, ax = lSite.x, ay = lSite.y, bx = site.x - ax, by = site.y - ay, rSite = rArc.site, cx = rSite.x - ax, cy = rSite.y - ay, d = 2 * (bx * cy - by * cx), hb = bx * bx + by * by, hc = cx * cx + cy * cy, vertex = {\n      x: (cy * hb - by * hc) / d + ax,\n      y: (bx * hc - cx * hb) / d + ay\n    };\n    d3_geom_voronoiSetEdgeEnd(rArc.edge, lSite, rSite, vertex);\n    newArc.edge = d3_geom_voronoiCreateEdge(lSite, site, null, vertex);\n    rArc.edge = d3_geom_voronoiCreateEdge(site, rSite, null, vertex);\n    d3_geom_voronoiAttachCircle(lArc);\n    d3_geom_voronoiAttachCircle(rArc);\n  }\n  function d3_geom_voronoiLeftBreakPoint(arc, directrix) {\n    var site = arc.site, rfocx = site.x, rfocy = site.y, pby2 = rfocy - directrix;\n    if (!pby2) return rfocx;\n    var lArc = arc.P;\n    if (!lArc) return -Infinity;\n    site = lArc.site;\n    var lfocx = site.x, lfocy = site.y, plby2 = lfocy - directrix;\n    if (!plby2) return lfocx;\n    var hl = lfocx - rfocx, aby2 = 1 / pby2 - 1 / plby2, b = hl / plby2;\n    if (aby2) return (-b + Math.sqrt(b * b - 2 * aby2 * (hl * hl / (-2 * plby2) - lfocy + plby2 / 2 + rfocy - pby2 / 2))) / aby2 + rfocx;\n    return (rfocx + lfocx) / 2;\n  }\n  function d3_geom_voronoiRightBreakPoint(arc, directrix) {\n    var rArc = arc.N;\n    if (rArc) return d3_geom_voronoiLeftBreakPoint(rArc, directrix);\n    var site = arc.site;\n    return site.y === directrix ? site.x : Infinity;\n  }\n  function d3_geom_voronoiCell(site) {\n    this.site = site;\n    this.edges = [];\n  }\n  d3_geom_voronoiCell.prototype.prepare = function() {\n    var halfEdges = this.edges, iHalfEdge = halfEdges.length, edge;\n    while (iHalfEdge--) {\n      edge = halfEdges[iHalfEdge].edge;\n      if (!edge.b || !edge.a) halfEdges.splice(iHalfEdge, 1);\n    }\n    halfEdges.sort(d3_geom_voronoiHalfEdgeOrder);\n    return halfEdges.length;\n  };\n  function d3_geom_voronoiCloseCells(extent) {\n    var x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], x2, y2, x3, y3, cells = d3_geom_voronoiCells, iCell = cells.length, cell, iHalfEdge, halfEdges, nHalfEdges, start, end;\n    while (iCell--) {\n      cell = cells[iCell];\n      if (!cell || !cell.prepare()) continue;\n      halfEdges = cell.edges;\n      nHalfEdges = halfEdges.length;\n      iHalfEdge = 0;\n      while (iHalfEdge < nHalfEdges) {\n        end = halfEdges[iHalfEdge].end(), x3 = end.x, y3 = end.y;\n        start = halfEdges[++iHalfEdge % nHalfEdges].start(), x2 = start.x, y2 = start.y;\n        if (abs(x3 - x2) > ε || abs(y3 - y2) > ε) {\n          halfEdges.splice(iHalfEdge, 0, new d3_geom_voronoiHalfEdge(d3_geom_voronoiCreateBorderEdge(cell.site, end, abs(x3 - x0) < ε && y1 - y3 > ε ? {\n            x: x0,\n            y: abs(x2 - x0) < ε ? y2 : y1\n          } : abs(y3 - y1) < ε && x1 - x3 > ε ? {\n            x: abs(y2 - y1) < ε ? x2 : x1,\n            y: y1\n          } : abs(x3 - x1) < ε && y3 - y0 > ε ? {\n            x: x1,\n            y: abs(x2 - x1) < ε ? y2 : y0\n          } : abs(y3 - y0) < ε && x3 - x0 > ε ? {\n            x: abs(y2 - y0) < ε ? x2 : x0,\n            y: y0\n          } : null), cell.site, null));\n          ++nHalfEdges;\n        }\n      }\n    }\n  }\n  function d3_geom_voronoiHalfEdgeOrder(a, b) {\n    return b.angle - a.angle;\n  }\n  function d3_geom_voronoiCircle() {\n    d3_geom_voronoiRedBlackNode(this);\n    this.x = this.y = this.arc = this.site = this.cy = null;\n  }\n  function d3_geom_voronoiAttachCircle(arc) {\n    var lArc = arc.P, rArc = arc.N;\n    if (!lArc || !rArc) return;\n    var lSite = lArc.site, cSite = arc.site, rSite = rArc.site;\n    if (lSite === rSite) return;\n    var bx = cSite.x, by = cSite.y, ax = lSite.x - bx, ay = lSite.y - by, cx = rSite.x - bx, cy = rSite.y - by;\n    var d = 2 * (ax * cy - ay * cx);\n    if (d >= -ε2) return;\n    var ha = ax * ax + ay * ay, hc = cx * cx + cy * cy, x = (cy * ha - ay * hc) / d, y = (ax * hc - cx * ha) / d, cy = y + by;\n    var circle = d3_geom_voronoiCirclePool.pop() || new d3_geom_voronoiCircle();\n    circle.arc = arc;\n    circle.site = cSite;\n    circle.x = x + bx;\n    circle.y = cy + Math.sqrt(x * x + y * y);\n    circle.cy = cy;\n    arc.circle = circle;\n    var before = null, node = d3_geom_voronoiCircles._;\n    while (node) {\n      if (circle.y < node.y || circle.y === node.y && circle.x <= node.x) {\n        if (node.L) node = node.L; else {\n          before = node.P;\n          break;\n        }\n      } else {\n        if (node.R) node = node.R; else {\n          before = node;\n          break;\n        }\n      }\n    }\n    d3_geom_voronoiCircles.insert(before, circle);\n    if (!before) d3_geom_voronoiFirstCircle = circle;\n  }\n  function d3_geom_voronoiDetachCircle(arc) {\n    var circle = arc.circle;\n    if (circle) {\n      if (!circle.P) d3_geom_voronoiFirstCircle = circle.N;\n      d3_geom_voronoiCircles.remove(circle);\n      d3_geom_voronoiCirclePool.push(circle);\n      d3_geom_voronoiRedBlackNode(circle);\n      arc.circle = null;\n    }\n  }\n  function d3_geom_voronoiClipEdges(extent) {\n    var edges = d3_geom_voronoiEdges, clip = d3_geom_clipLine(extent[0][0], extent[0][1], extent[1][0], extent[1][1]), i = edges.length, e;\n    while (i--) {\n      e = edges[i];\n      if (!d3_geom_voronoiConnectEdge(e, extent) || !clip(e) || abs(e.a.x - e.b.x) < ε && abs(e.a.y - e.b.y) < ε) {\n        e.a = e.b = null;\n        edges.splice(i, 1);\n      }\n    }\n  }\n  function d3_geom_voronoiConnectEdge(edge, extent) {\n    var vb = edge.b;\n    if (vb) return true;\n    var va = edge.a, x0 = extent[0][0], x1 = extent[1][0], y0 = extent[0][1], y1 = extent[1][1], lSite = edge.l, rSite = edge.r, lx = lSite.x, ly = lSite.y, rx = rSite.x, ry = rSite.y, fx = (lx + rx) / 2, fy = (ly + ry) / 2, fm, fb;\n    if (ry === ly) {\n      if (fx < x0 || fx >= x1) return;\n      if (lx > rx) {\n        if (!va) va = {\n          x: fx,\n          y: y0\n        }; else if (va.y >= y1) return;\n        vb = {\n          x: fx,\n          y: y1\n        };\n      } else {\n        if (!va) va = {\n          x: fx,\n          y: y1\n        }; else if (va.y < y0) return;\n        vb = {\n          x: fx,\n          y: y0\n        };\n      }\n    } else {\n      fm = (lx - rx) / (ry - ly);\n      fb = fy - fm * fx;\n      if (fm < -1 || fm > 1) {\n        if (lx > rx) {\n          if (!va) va = {\n            x: (y0 - fb) / fm,\n            y: y0\n          }; else if (va.y >= y1) return;\n          vb = {\n            x: (y1 - fb) / fm,\n            y: y1\n          };\n        } else {\n          if (!va) va = {\n            x: (y1 - fb) / fm,\n            y: y1\n          }; else if (va.y < y0) return;\n          vb = {\n            x: (y0 - fb) / fm,\n            y: y0\n          };\n        }\n      } else {\n        if (ly < ry) {\n          if (!va) va = {\n            x: x0,\n            y: fm * x0 + fb\n          }; else if (va.x >= x1) return;\n          vb = {\n            x: x1,\n            y: fm * x1 + fb\n          };\n        } else {\n          if (!va) va = {\n            x: x1,\n            y: fm * x1 + fb\n          }; else if (va.x < x0) return;\n          vb = {\n            x: x0,\n            y: fm * x0 + fb\n          };\n        }\n      }\n    }\n    edge.a = va;\n    edge.b = vb;\n    return true;\n  }\n  function d3_geom_voronoiEdge(lSite, rSite) {\n    this.l = lSite;\n    this.r = rSite;\n    this.a = this.b = null;\n  }\n  function d3_geom_voronoiCreateEdge(lSite, rSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, rSite);\n    d3_geom_voronoiEdges.push(edge);\n    if (va) d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, va);\n    if (vb) d3_geom_voronoiSetEdgeEnd(edge, rSite, lSite, vb);\n    d3_geom_voronoiCells[lSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, lSite, rSite));\n    d3_geom_voronoiCells[rSite.i].edges.push(new d3_geom_voronoiHalfEdge(edge, rSite, lSite));\n    return edge;\n  }\n  function d3_geom_voronoiCreateBorderEdge(lSite, va, vb) {\n    var edge = new d3_geom_voronoiEdge(lSite, null);\n    edge.a = va;\n    edge.b = vb;\n    d3_geom_voronoiEdges.push(edge);\n    return edge;\n  }\n  function d3_geom_voronoiSetEdgeEnd(edge, lSite, rSite, vertex) {\n    if (!edge.a && !edge.b) {\n      edge.a = vertex;\n      edge.l = lSite;\n      edge.r = rSite;\n    } else if (edge.l === rSite) {\n      edge.b = vertex;\n    } else {\n      edge.a = vertex;\n    }\n  }\n  function d3_geom_voronoiHalfEdge(edge, lSite, rSite) {\n    var va = edge.a, vb = edge.b;\n    this.edge = edge;\n    this.site = lSite;\n    this.angle = rSite ? Math.atan2(rSite.y - lSite.y, rSite.x - lSite.x) : edge.l === lSite ? Math.atan2(vb.x - va.x, va.y - vb.y) : Math.atan2(va.x - vb.x, vb.y - va.y);\n  }\n  d3_geom_voronoiHalfEdge.prototype = {\n    start: function() {\n      return this.edge.l === this.site ? this.edge.a : this.edge.b;\n    },\n    end: function() {\n      return this.edge.l === this.site ? this.edge.b : this.edge.a;\n    }\n  };\n  function d3_geom_voronoiRedBlackTree() {\n    this._ = null;\n  }\n  function d3_geom_voronoiRedBlackNode(node) {\n    node.U = node.C = node.L = node.R = node.P = node.N = null;\n  }\n  d3_geom_voronoiRedBlackTree.prototype = {\n    insert: function(after, node) {\n      var parent, grandpa, uncle;\n      if (after) {\n        node.P = after;\n        node.N = after.N;\n        if (after.N) after.N.P = node;\n        after.N = node;\n        if (after.R) {\n          after = after.R;\n          while (after.L) after = after.L;\n          after.L = node;\n        } else {\n          after.R = node;\n        }\n        parent = after;\n      } else if (this._) {\n        after = d3_geom_voronoiRedBlackFirst(this._);\n        node.P = null;\n        node.N = after;\n        after.P = after.L = node;\n        parent = after;\n      } else {\n        node.P = node.N = null;\n        this._ = node;\n        parent = null;\n      }\n      node.L = node.R = null;\n      node.U = parent;\n      node.C = true;\n      after = node;\n      while (parent && parent.C) {\n        grandpa = parent.U;\n        if (parent === grandpa.L) {\n          uncle = grandpa.R;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.R) {\n              d3_geom_voronoiRedBlackRotateLeft(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, grandpa);\n          }\n        } else {\n          uncle = grandpa.L;\n          if (uncle && uncle.C) {\n            parent.C = uncle.C = false;\n            grandpa.C = true;\n            after = grandpa;\n          } else {\n            if (after === parent.L) {\n              d3_geom_voronoiRedBlackRotateRight(this, parent);\n              after = parent;\n              parent = after.U;\n            }\n            parent.C = false;\n            grandpa.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, grandpa);\n          }\n        }\n        parent = after.U;\n      }\n      this._.C = false;\n    },\n    remove: function(node) {\n      if (node.N) node.N.P = node.P;\n      if (node.P) node.P.N = node.N;\n      node.N = node.P = null;\n      var parent = node.U, sibling, left = node.L, right = node.R, next, red;\n      if (!left) next = right; else if (!right) next = left; else next = d3_geom_voronoiRedBlackFirst(right);\n      if (parent) {\n        if (parent.L === node) parent.L = next; else parent.R = next;\n      } else {\n        this._ = next;\n      }\n      if (left && right) {\n        red = next.C;\n        next.C = node.C;\n        next.L = left;\n        left.U = next;\n        if (next !== right) {\n          parent = next.U;\n          next.U = node.U;\n          node = next.R;\n          parent.L = node;\n          next.R = right;\n          right.U = next;\n        } else {\n          next.U = parent;\n          parent = next;\n          node = next.R;\n        }\n      } else {\n        red = node.C;\n        node = next;\n      }\n      if (node) node.U = parent;\n      if (red) return;\n      if (node && node.C) {\n        node.C = false;\n        return;\n      }\n      do {\n        if (node === this._) break;\n        if (node === parent.L) {\n          sibling = parent.R;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            sibling = parent.R;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.R || !sibling.R.C) {\n              sibling.L.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateRight(this, sibling);\n              sibling = parent.R;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.R.C = false;\n            d3_geom_voronoiRedBlackRotateLeft(this, parent);\n            node = this._;\n            break;\n          }\n        } else {\n          sibling = parent.L;\n          if (sibling.C) {\n            sibling.C = false;\n            parent.C = true;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            sibling = parent.L;\n          }\n          if (sibling.L && sibling.L.C || sibling.R && sibling.R.C) {\n            if (!sibling.L || !sibling.L.C) {\n              sibling.R.C = false;\n              sibling.C = true;\n              d3_geom_voronoiRedBlackRotateLeft(this, sibling);\n              sibling = parent.L;\n            }\n            sibling.C = parent.C;\n            parent.C = sibling.L.C = false;\n            d3_geom_voronoiRedBlackRotateRight(this, parent);\n            node = this._;\n            break;\n          }\n        }\n        sibling.C = true;\n        node = parent;\n        parent = parent.U;\n      } while (!node.C);\n      if (node) node.C = false;\n    }\n  };\n  function d3_geom_voronoiRedBlackRotateLeft(tree, node) {\n    var p = node, q = node.R, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.R = q.L;\n    if (p.R) p.R.U = p;\n    q.L = p;\n  }\n  function d3_geom_voronoiRedBlackRotateRight(tree, node) {\n    var p = node, q = node.L, parent = p.U;\n    if (parent) {\n      if (parent.L === p) parent.L = q; else parent.R = q;\n    } else {\n      tree._ = q;\n    }\n    q.U = parent;\n    p.U = q;\n    p.L = q.R;\n    if (p.L) p.L.U = p;\n    q.R = p;\n  }\n  function d3_geom_voronoiRedBlackFirst(node) {\n    while (node.L) node = node.L;\n    return node;\n  }\n  function d3_geom_voronoi(sites, bbox) {\n    var site = sites.sort(d3_geom_voronoiVertexOrder).pop(), x0, y0, circle;\n    d3_geom_voronoiEdges = [];\n    d3_geom_voronoiCells = new Array(sites.length);\n    d3_geom_voronoiBeaches = new d3_geom_voronoiRedBlackTree();\n    d3_geom_voronoiCircles = new d3_geom_voronoiRedBlackTree();\n    while (true) {\n      circle = d3_geom_voronoiFirstCircle;\n      if (site && (!circle || site.y < circle.y || site.y === circle.y && site.x < circle.x)) {\n        if (site.x !== x0 || site.y !== y0) {\n          d3_geom_voronoiCells[site.i] = new d3_geom_voronoiCell(site);\n          d3_geom_voronoiAddBeach(site);\n          x0 = site.x, y0 = site.y;\n        }\n        site = sites.pop();\n      } else if (circle) {\n        d3_geom_voronoiRemoveBeach(circle.arc);\n      } else {\n        break;\n      }\n    }\n    if (bbox) d3_geom_voronoiClipEdges(bbox), d3_geom_voronoiCloseCells(bbox);\n    var diagram = {\n      cells: d3_geom_voronoiCells,\n      edges: d3_geom_voronoiEdges\n    };\n    d3_geom_voronoiBeaches = d3_geom_voronoiCircles = d3_geom_voronoiEdges = d3_geom_voronoiCells = null;\n    return diagram;\n  }\n  function d3_geom_voronoiVertexOrder(a, b) {\n    return b.y - a.y || b.x - a.x;\n  }\n  d3.geom.voronoi = function(points) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, fx = x, fy = y, clipExtent = d3_geom_voronoiClipExtent;\n    if (points) return voronoi(points);\n    function voronoi(data) {\n      var polygons = new Array(data.length), x0 = clipExtent[0][0], y0 = clipExtent[0][1], x1 = clipExtent[1][0], y1 = clipExtent[1][1];\n      d3_geom_voronoi(sites(data), clipExtent).cells.forEach(function(cell, i) {\n        var edges = cell.edges, site = cell.site, polygon = polygons[i] = edges.length ? edges.map(function(e) {\n          var s = e.start();\n          return [ s.x, s.y ];\n        }) : site.x >= x0 && site.x <= x1 && site.y >= y0 && site.y <= y1 ? [ [ x0, y1 ], [ x1, y1 ], [ x1, y0 ], [ x0, y0 ] ] : [];\n        polygon.point = data[i];\n      });\n      return polygons;\n    }\n    function sites(data) {\n      return data.map(function(d, i) {\n        return {\n          x: Math.round(fx(d, i) / ε) * ε,\n          y: Math.round(fy(d, i) / ε) * ε,\n          i: i\n        };\n      });\n    }\n    voronoi.links = function(data) {\n      return d3_geom_voronoi(sites(data)).edges.filter(function(edge) {\n        return edge.l && edge.r;\n      }).map(function(edge) {\n        return {\n          source: data[edge.l.i],\n          target: data[edge.r.i]\n        };\n      });\n    };\n    voronoi.triangles = function(data) {\n      var triangles = [];\n      d3_geom_voronoi(sites(data)).cells.forEach(function(cell, i) {\n        var site = cell.site, edges = cell.edges.sort(d3_geom_voronoiHalfEdgeOrder), j = -1, m = edges.length, e0, s0, e1 = edges[m - 1].edge, s1 = e1.l === site ? e1.r : e1.l;\n        while (++j < m) {\n          e0 = e1;\n          s0 = s1;\n          e1 = edges[j].edge;\n          s1 = e1.l === site ? e1.r : e1.l;\n          if (i < s0.i && i < s1.i && d3_geom_voronoiTriangleArea(site, s0, s1) < 0) {\n            triangles.push([ data[i], data[s0.i], data[s1.i] ]);\n          }\n        }\n      });\n      return triangles;\n    };\n    voronoi.x = function(_) {\n      return arguments.length ? (fx = d3_functor(x = _), voronoi) : x;\n    };\n    voronoi.y = function(_) {\n      return arguments.length ? (fy = d3_functor(y = _), voronoi) : y;\n    };\n    voronoi.clipExtent = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent;\n      clipExtent = _ == null ? d3_geom_voronoiClipExtent : _;\n      return voronoi;\n    };\n    voronoi.size = function(_) {\n      if (!arguments.length) return clipExtent === d3_geom_voronoiClipExtent ? null : clipExtent && clipExtent[1];\n      return voronoi.clipExtent(_ && [ [ 0, 0 ], _ ]);\n    };\n    return voronoi;\n  };\n  var d3_geom_voronoiClipExtent = [ [ -1e6, -1e6 ], [ 1e6, 1e6 ] ];\n  function d3_geom_voronoiTriangleArea(a, b, c) {\n    return (a.x - c.x) * (b.y - a.y) - (a.x - b.x) * (c.y - a.y);\n  }\n  d3.geom.delaunay = function(vertices) {\n    return d3.geom.voronoi().triangles(vertices);\n  };\n  d3.geom.quadtree = function(points, x1, y1, x2, y2) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, compat;\n    if (compat = arguments.length) {\n      x = d3_geom_quadtreeCompatX;\n      y = d3_geom_quadtreeCompatY;\n      if (compat === 3) {\n        y2 = y1;\n        x2 = x1;\n        y1 = x1 = 0;\n      }\n      return quadtree(points);\n    }\n    function quadtree(data) {\n      var d, fx = d3_functor(x), fy = d3_functor(y), xs, ys, i, n, x1_, y1_, x2_, y2_;\n      if (x1 != null) {\n        x1_ = x1, y1_ = y1, x2_ = x2, y2_ = y2;\n      } else {\n        x2_ = y2_ = -(x1_ = y1_ = Infinity);\n        xs = [], ys = [];\n        n = data.length;\n        if (compat) for (i = 0; i < n; ++i) {\n          d = data[i];\n          if (d.x < x1_) x1_ = d.x;\n          if (d.y < y1_) y1_ = d.y;\n          if (d.x > x2_) x2_ = d.x;\n          if (d.y > y2_) y2_ = d.y;\n          xs.push(d.x);\n          ys.push(d.y);\n        } else for (i = 0; i < n; ++i) {\n          var x_ = +fx(d = data[i], i), y_ = +fy(d, i);\n          if (x_ < x1_) x1_ = x_;\n          if (y_ < y1_) y1_ = y_;\n          if (x_ > x2_) x2_ = x_;\n          if (y_ > y2_) y2_ = y_;\n          xs.push(x_);\n          ys.push(y_);\n        }\n      }\n      var dx = x2_ - x1_, dy = y2_ - y1_;\n      if (dx > dy) y2_ = y1_ + dx; else x2_ = x1_ + dy;\n      function insert(n, d, x, y, x1, y1, x2, y2) {\n        if (isNaN(x) || isNaN(y)) return;\n        if (n.leaf) {\n          var nx = n.x, ny = n.y;\n          if (nx != null) {\n            if (abs(nx - x) + abs(ny - y) < .01) {\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            } else {\n              var nPoint = n.point;\n              n.x = n.y = n.point = null;\n              insertChild(n, nPoint, nx, ny, x1, y1, x2, y2);\n              insertChild(n, d, x, y, x1, y1, x2, y2);\n            }\n          } else {\n            n.x = x, n.y = y, n.point = d;\n          }\n        } else {\n          insertChild(n, d, x, y, x1, y1, x2, y2);\n        }\n      }\n      function insertChild(n, d, x, y, x1, y1, x2, y2) {\n        var xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym, i = below << 1 | right;\n        n.leaf = false;\n        n = n.nodes[i] || (n.nodes[i] = d3_geom_quadtreeNode());\n        if (right) x1 = xm; else x2 = xm;\n        if (below) y1 = ym; else y2 = ym;\n        insert(n, d, x, y, x1, y1, x2, y2);\n      }\n      var root = d3_geom_quadtreeNode();\n      root.add = function(d) {\n        insert(root, d, +fx(d, ++i), +fy(d, i), x1_, y1_, x2_, y2_);\n      };\n      root.visit = function(f) {\n        d3_geom_quadtreeVisit(f, root, x1_, y1_, x2_, y2_);\n      };\n      root.find = function(point) {\n        return d3_geom_quadtreeFind(root, point[0], point[1], x1_, y1_, x2_, y2_);\n      };\n      i = -1;\n      if (x1 == null) {\n        while (++i < n) {\n          insert(root, data[i], xs[i], ys[i], x1_, y1_, x2_, y2_);\n        }\n        --i;\n      } else data.forEach(root.add);\n      xs = ys = data = d = null;\n      return root;\n    }\n    quadtree.x = function(_) {\n      return arguments.length ? (x = _, quadtree) : x;\n    };\n    quadtree.y = function(_) {\n      return arguments.length ? (y = _, quadtree) : y;\n    };\n    quadtree.extent = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ [ x1, y1 ], [ x2, y2 ] ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = +_[0][0], y1 = +_[0][1], x2 = +_[1][0], \n      y2 = +_[1][1];\n      return quadtree;\n    };\n    quadtree.size = function(_) {\n      if (!arguments.length) return x1 == null ? null : [ x2 - x1, y2 - y1 ];\n      if (_ == null) x1 = y1 = x2 = y2 = null; else x1 = y1 = 0, x2 = +_[0], y2 = +_[1];\n      return quadtree;\n    };\n    return quadtree;\n  };\n  function d3_geom_quadtreeCompatX(d) {\n    return d.x;\n  }\n  function d3_geom_quadtreeCompatY(d) {\n    return d.y;\n  }\n  function d3_geom_quadtreeNode() {\n    return {\n      leaf: true,\n      nodes: [],\n      point: null,\n      x: null,\n      y: null\n    };\n  }\n  function d3_geom_quadtreeVisit(f, node, x1, y1, x2, y2) {\n    if (!f(node, x1, y1, x2, y2)) {\n      var sx = (x1 + x2) * .5, sy = (y1 + y2) * .5, children = node.nodes;\n      if (children[0]) d3_geom_quadtreeVisit(f, children[0], x1, y1, sx, sy);\n      if (children[1]) d3_geom_quadtreeVisit(f, children[1], sx, y1, x2, sy);\n      if (children[2]) d3_geom_quadtreeVisit(f, children[2], x1, sy, sx, y2);\n      if (children[3]) d3_geom_quadtreeVisit(f, children[3], sx, sy, x2, y2);\n    }\n  }\n  function d3_geom_quadtreeFind(root, x, y, x0, y0, x3, y3) {\n    var minDistance2 = Infinity, closestPoint;\n    (function find(node, x1, y1, x2, y2) {\n      if (x1 > x3 || y1 > y3 || x2 < x0 || y2 < y0) return;\n      if (point = node.point) {\n        var point, dx = x - node.x, dy = y - node.y, distance2 = dx * dx + dy * dy;\n        if (distance2 < minDistance2) {\n          var distance = Math.sqrt(minDistance2 = distance2);\n          x0 = x - distance, y0 = y - distance;\n          x3 = x + distance, y3 = y + distance;\n          closestPoint = point;\n        }\n      }\n      var children = node.nodes, xm = (x1 + x2) * .5, ym = (y1 + y2) * .5, right = x >= xm, below = y >= ym;\n      for (var i = below << 1 | right, j = i + 4; i < j; ++i) {\n        if (node = children[i & 3]) switch (i & 3) {\n         case 0:\n          find(node, x1, y1, xm, ym);\n          break;\n\n         case 1:\n          find(node, xm, y1, x2, ym);\n          break;\n\n         case 2:\n          find(node, x1, ym, xm, y2);\n          break;\n\n         case 3:\n          find(node, xm, ym, x2, y2);\n          break;\n        }\n      }\n    })(root, x0, y0, x3, y3);\n    return closestPoint;\n  }\n  d3.interpolateRgb = d3_interpolateRgb;\n  function d3_interpolateRgb(a, b) {\n    a = d3.rgb(a);\n    b = d3.rgb(b);\n    var ar = a.r, ag = a.g, ab = a.b, br = b.r - ar, bg = b.g - ag, bb = b.b - ab;\n    return function(t) {\n      return \"#\" + d3_rgb_hex(Math.round(ar + br * t)) + d3_rgb_hex(Math.round(ag + bg * t)) + d3_rgb_hex(Math.round(ab + bb * t));\n    };\n  }\n  d3.interpolateObject = d3_interpolateObject;\n  function d3_interpolateObject(a, b) {\n    var i = {}, c = {}, k;\n    for (k in a) {\n      if (k in b) {\n        i[k] = d3_interpolate(a[k], b[k]);\n      } else {\n        c[k] = a[k];\n      }\n    }\n    for (k in b) {\n      if (!(k in a)) {\n        c[k] = b[k];\n      }\n    }\n    return function(t) {\n      for (k in i) c[k] = i[k](t);\n      return c;\n    };\n  }\n  d3.interpolateNumber = d3_interpolateNumber;\n  function d3_interpolateNumber(a, b) {\n    a = +a, b = +b;\n    return function(t) {\n      return a * (1 - t) + b * t;\n    };\n  }\n  d3.interpolateString = d3_interpolateString;\n  function d3_interpolateString(a, b) {\n    var bi = d3_interpolate_numberA.lastIndex = d3_interpolate_numberB.lastIndex = 0, am, bm, bs, i = -1, s = [], q = [];\n    a = a + \"\", b = b + \"\";\n    while ((am = d3_interpolate_numberA.exec(a)) && (bm = d3_interpolate_numberB.exec(b))) {\n      if ((bs = bm.index) > bi) {\n        bs = b.slice(bi, bs);\n        if (s[i]) s[i] += bs; else s[++i] = bs;\n      }\n      if ((am = am[0]) === (bm = bm[0])) {\n        if (s[i]) s[i] += bm; else s[++i] = bm;\n      } else {\n        s[++i] = null;\n        q.push({\n          i: i,\n          x: d3_interpolateNumber(am, bm)\n        });\n      }\n      bi = d3_interpolate_numberB.lastIndex;\n    }\n    if (bi < b.length) {\n      bs = b.slice(bi);\n      if (s[i]) s[i] += bs; else s[++i] = bs;\n    }\n    return s.length < 2 ? q[0] ? (b = q[0].x, function(t) {\n      return b(t) + \"\";\n    }) : function() {\n      return b;\n    } : (b = q.length, function(t) {\n      for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    });\n  }\n  var d3_interpolate_numberA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g, d3_interpolate_numberB = new RegExp(d3_interpolate_numberA.source, \"g\");\n  d3.interpolate = d3_interpolate;\n  function d3_interpolate(a, b) {\n    var i = d3.interpolators.length, f;\n    while (--i >= 0 && !(f = d3.interpolators[i](a, b))) ;\n    return f;\n  }\n  d3.interpolators = [ function(a, b) {\n    var t = typeof b;\n    return (t === \"string\" ? d3_rgb_names.has(b) || /^(#|rgb\\(|hsl\\()/.test(b) ? d3_interpolateRgb : d3_interpolateString : b instanceof d3_color ? d3_interpolateRgb : Array.isArray(b) ? d3_interpolateArray : t === \"object\" && isNaN(b) ? d3_interpolateObject : d3_interpolateNumber)(a, b);\n  } ];\n  d3.interpolateArray = d3_interpolateArray;\n  function d3_interpolateArray(a, b) {\n    var x = [], c = [], na = a.length, nb = b.length, n0 = Math.min(a.length, b.length), i;\n    for (i = 0; i < n0; ++i) x.push(d3_interpolate(a[i], b[i]));\n    for (;i < na; ++i) c[i] = a[i];\n    for (;i < nb; ++i) c[i] = b[i];\n    return function(t) {\n      for (i = 0; i < n0; ++i) c[i] = x[i](t);\n      return c;\n    };\n  }\n  var d3_ease_default = function() {\n    return d3_identity;\n  };\n  var d3_ease = d3.map({\n    linear: d3_ease_default,\n    poly: d3_ease_poly,\n    quad: function() {\n      return d3_ease_quad;\n    },\n    cubic: function() {\n      return d3_ease_cubic;\n    },\n    sin: function() {\n      return d3_ease_sin;\n    },\n    exp: function() {\n      return d3_ease_exp;\n    },\n    circle: function() {\n      return d3_ease_circle;\n    },\n    elastic: d3_ease_elastic,\n    back: d3_ease_back,\n    bounce: function() {\n      return d3_ease_bounce;\n    }\n  });\n  var d3_ease_mode = d3.map({\n    \"in\": d3_identity,\n    out: d3_ease_reverse,\n    \"in-out\": d3_ease_reflect,\n    \"out-in\": function(f) {\n      return d3_ease_reflect(d3_ease_reverse(f));\n    }\n  });\n  d3.ease = function(name) {\n    var i = name.indexOf(\"-\"), t = i >= 0 ? name.slice(0, i) : name, m = i >= 0 ? name.slice(i + 1) : \"in\";\n    t = d3_ease.get(t) || d3_ease_default;\n    m = d3_ease_mode.get(m) || d3_identity;\n    return d3_ease_clamp(m(t.apply(null, d3_arraySlice.call(arguments, 1))));\n  };\n  function d3_ease_clamp(f) {\n    return function(t) {\n      return t <= 0 ? 0 : t >= 1 ? 1 : f(t);\n    };\n  }\n  function d3_ease_reverse(f) {\n    return function(t) {\n      return 1 - f(1 - t);\n    };\n  }\n  function d3_ease_reflect(f) {\n    return function(t) {\n      return .5 * (t < .5 ? f(2 * t) : 2 - f(2 - 2 * t));\n    };\n  }\n  function d3_ease_quad(t) {\n    return t * t;\n  }\n  function d3_ease_cubic(t) {\n    return t * t * t;\n  }\n  function d3_ease_cubicInOut(t) {\n    if (t <= 0) return 0;\n    if (t >= 1) return 1;\n    var t2 = t * t, t3 = t2 * t;\n    return 4 * (t < .5 ? t3 : 3 * (t - t2) + t3 - .75);\n  }\n  function d3_ease_poly(e) {\n    return function(t) {\n      return Math.pow(t, e);\n    };\n  }\n  function d3_ease_sin(t) {\n    return 1 - Math.cos(t * halfπ);\n  }\n  function d3_ease_exp(t) {\n    return Math.pow(2, 10 * (t - 1));\n  }\n  function d3_ease_circle(t) {\n    return 1 - Math.sqrt(1 - t * t);\n  }\n  function d3_ease_elastic(a, p) {\n    var s;\n    if (arguments.length < 2) p = .45;\n    if (arguments.length) s = p / τ * Math.asin(1 / a); else a = 1, s = p / 4;\n    return function(t) {\n      return 1 + a * Math.pow(2, -10 * t) * Math.sin((t - s) * τ / p);\n    };\n  }\n  function d3_ease_back(s) {\n    if (!s) s = 1.70158;\n    return function(t) {\n      return t * t * ((s + 1) * t - s);\n    };\n  }\n  function d3_ease_bounce(t) {\n    return t < 1 / 2.75 ? 7.5625 * t * t : t < 2 / 2.75 ? 7.5625 * (t -= 1.5 / 2.75) * t + .75 : t < 2.5 / 2.75 ? 7.5625 * (t -= 2.25 / 2.75) * t + .9375 : 7.5625 * (t -= 2.625 / 2.75) * t + .984375;\n  }\n  d3.interpolateHcl = d3_interpolateHcl;\n  function d3_interpolateHcl(a, b) {\n    a = d3.hcl(a);\n    b = d3.hcl(b);\n    var ah = a.h, ac = a.c, al = a.l, bh = b.h - ah, bc = b.c - ac, bl = b.l - al;\n    if (isNaN(bc)) bc = 0, ac = isNaN(ac) ? b.c : ac;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hcl_lab(ah + bh * t, ac + bc * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateHsl = d3_interpolateHsl;\n  function d3_interpolateHsl(a, b) {\n    a = d3.hsl(a);\n    b = d3.hsl(b);\n    var ah = a.h, as = a.s, al = a.l, bh = b.h - ah, bs = b.s - as, bl = b.l - al;\n    if (isNaN(bs)) bs = 0, as = isNaN(as) ? b.s : as;\n    if (isNaN(bh)) bh = 0, ah = isNaN(ah) ? b.h : ah; else if (bh > 180) bh -= 360; else if (bh < -180) bh += 360;\n    return function(t) {\n      return d3_hsl_rgb(ah + bh * t, as + bs * t, al + bl * t) + \"\";\n    };\n  }\n  d3.interpolateLab = d3_interpolateLab;\n  function d3_interpolateLab(a, b) {\n    a = d3.lab(a);\n    b = d3.lab(b);\n    var al = a.l, aa = a.a, ab = a.b, bl = b.l - al, ba = b.a - aa, bb = b.b - ab;\n    return function(t) {\n      return d3_lab_rgb(al + bl * t, aa + ba * t, ab + bb * t) + \"\";\n    };\n  }\n  d3.interpolateRound = d3_interpolateRound;\n  function d3_interpolateRound(a, b) {\n    b -= a;\n    return function(t) {\n      return Math.round(a + b * t);\n    };\n  }\n  d3.transform = function(string) {\n    var g = d3_document.createElementNS(d3.ns.prefix.svg, \"g\");\n    return (d3.transform = function(string) {\n      if (string != null) {\n        g.setAttribute(\"transform\", string);\n        var t = g.transform.baseVal.consolidate();\n      }\n      return new d3_transform(t ? t.matrix : d3_transformIdentity);\n    })(string);\n  };\n  function d3_transform(m) {\n    var r0 = [ m.a, m.b ], r1 = [ m.c, m.d ], kx = d3_transformNormalize(r0), kz = d3_transformDot(r0, r1), ky = d3_transformNormalize(d3_transformCombine(r1, r0, -kz)) || 0;\n    if (r0[0] * r1[1] < r1[0] * r0[1]) {\n      r0[0] *= -1;\n      r0[1] *= -1;\n      kx *= -1;\n      kz *= -1;\n    }\n    this.rotate = (kx ? Math.atan2(r0[1], r0[0]) : Math.atan2(-r1[0], r1[1])) * d3_degrees;\n    this.translate = [ m.e, m.f ];\n    this.scale = [ kx, ky ];\n    this.skew = ky ? Math.atan2(kz, ky) * d3_degrees : 0;\n  }\n  d3_transform.prototype.toString = function() {\n    return \"translate(\" + this.translate + \")rotate(\" + this.rotate + \")skewX(\" + this.skew + \")scale(\" + this.scale + \")\";\n  };\n  function d3_transformDot(a, b) {\n    return a[0] * b[0] + a[1] * b[1];\n  }\n  function d3_transformNormalize(a) {\n    var k = Math.sqrt(d3_transformDot(a, a));\n    if (k) {\n      a[0] /= k;\n      a[1] /= k;\n    }\n    return k;\n  }\n  function d3_transformCombine(a, b, k) {\n    a[0] += k * b[0];\n    a[1] += k * b[1];\n    return a;\n  }\n  var d3_transformIdentity = {\n    a: 1,\n    b: 0,\n    c: 0,\n    d: 1,\n    e: 0,\n    f: 0\n  };\n  d3.interpolateTransform = d3_interpolateTransform;\n  function d3_interpolateTransform(a, b) {\n    var s = [], q = [], n, A = d3.transform(a), B = d3.transform(b), ta = A.translate, tb = B.translate, ra = A.rotate, rb = B.rotate, wa = A.skew, wb = B.skew, ka = A.scale, kb = B.scale;\n    if (ta[0] != tb[0] || ta[1] != tb[1]) {\n      s.push(\"translate(\", null, \",\", null, \")\");\n      q.push({\n        i: 1,\n        x: d3_interpolateNumber(ta[0], tb[0])\n      }, {\n        i: 3,\n        x: d3_interpolateNumber(ta[1], tb[1])\n      });\n    } else if (tb[0] || tb[1]) {\n      s.push(\"translate(\" + tb + \")\");\n    } else {\n      s.push(\"\");\n    }\n    if (ra != rb) {\n      if (ra - rb > 180) rb += 360; else if (rb - ra > 180) ra += 360;\n      q.push({\n        i: s.push(s.pop() + \"rotate(\", null, \")\") - 2,\n        x: d3_interpolateNumber(ra, rb)\n      });\n    } else if (rb) {\n      s.push(s.pop() + \"rotate(\" + rb + \")\");\n    }\n    if (wa != wb) {\n      q.push({\n        i: s.push(s.pop() + \"skewX(\", null, \")\") - 2,\n        x: d3_interpolateNumber(wa, wb)\n      });\n    } else if (wb) {\n      s.push(s.pop() + \"skewX(\" + wb + \")\");\n    }\n    if (ka[0] != kb[0] || ka[1] != kb[1]) {\n      n = s.push(s.pop() + \"scale(\", null, \",\", null, \")\");\n      q.push({\n        i: n - 4,\n        x: d3_interpolateNumber(ka[0], kb[0])\n      }, {\n        i: n - 2,\n        x: d3_interpolateNumber(ka[1], kb[1])\n      });\n    } else if (kb[0] != 1 || kb[1] != 1) {\n      s.push(s.pop() + \"scale(\" + kb + \")\");\n    }\n    n = q.length;\n    return function(t) {\n      var i = -1, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  }\n  function d3_uninterpolateNumber(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return (x - a) / b;\n    };\n  }\n  function d3_uninterpolateClamp(a, b) {\n    b = (b -= a = +a) || 1 / b;\n    return function(x) {\n      return Math.max(0, Math.min(1, (x - a) / b));\n    };\n  }\n  d3.layout = {};\n  d3.layout.bundle = function() {\n    return function(links) {\n      var paths = [], i = -1, n = links.length;\n      while (++i < n) paths.push(d3_layout_bundlePath(links[i]));\n      return paths;\n    };\n  };\n  function d3_layout_bundlePath(link) {\n    var start = link.source, end = link.target, lca = d3_layout_bundleLeastCommonAncestor(start, end), points = [ start ];\n    while (start !== lca) {\n      start = start.parent;\n      points.push(start);\n    }\n    var k = points.length;\n    while (end !== lca) {\n      points.splice(k, 0, end);\n      end = end.parent;\n    }\n    return points;\n  }\n  function d3_layout_bundleAncestors(node) {\n    var ancestors = [], parent = node.parent;\n    while (parent != null) {\n      ancestors.push(node);\n      node = parent;\n      parent = parent.parent;\n    }\n    ancestors.push(node);\n    return ancestors;\n  }\n  function d3_layout_bundleLeastCommonAncestor(a, b) {\n    if (a === b) return a;\n    var aNodes = d3_layout_bundleAncestors(a), bNodes = d3_layout_bundleAncestors(b), aNode = aNodes.pop(), bNode = bNodes.pop(), sharedNode = null;\n    while (aNode === bNode) {\n      sharedNode = aNode;\n      aNode = aNodes.pop();\n      bNode = bNodes.pop();\n    }\n    return sharedNode;\n  }\n  d3.layout.chord = function() {\n    var chord = {}, chords, groups, matrix, n, padding = 0, sortGroups, sortSubgroups, sortChords;\n    function relayout() {\n      var subgroups = {}, groupSums = [], groupIndex = d3.range(n), subgroupIndex = [], k, x, x0, i, j;\n      chords = [];\n      groups = [];\n      k = 0, i = -1;\n      while (++i < n) {\n        x = 0, j = -1;\n        while (++j < n) {\n          x += matrix[i][j];\n        }\n        groupSums.push(x);\n        subgroupIndex.push(d3.range(n));\n        k += x;\n      }\n      if (sortGroups) {\n        groupIndex.sort(function(a, b) {\n          return sortGroups(groupSums[a], groupSums[b]);\n        });\n      }\n      if (sortSubgroups) {\n        subgroupIndex.forEach(function(d, i) {\n          d.sort(function(a, b) {\n            return sortSubgroups(matrix[i][a], matrix[i][b]);\n          });\n        });\n      }\n      k = (τ - padding * n) / k;\n      x = 0, i = -1;\n      while (++i < n) {\n        x0 = x, j = -1;\n        while (++j < n) {\n          var di = groupIndex[i], dj = subgroupIndex[di][j], v = matrix[di][dj], a0 = x, a1 = x += v * k;\n          subgroups[di + \"-\" + dj] = {\n            index: di,\n            subindex: dj,\n            startAngle: a0,\n            endAngle: a1,\n            value: v\n          };\n        }\n        groups[di] = {\n          index: di,\n          startAngle: x0,\n          endAngle: x,\n          value: (x - x0) / k\n        };\n        x += padding;\n      }\n      i = -1;\n      while (++i < n) {\n        j = i - 1;\n        while (++j < n) {\n          var source = subgroups[i + \"-\" + j], target = subgroups[j + \"-\" + i];\n          if (source.value || target.value) {\n            chords.push(source.value < target.value ? {\n              source: target,\n              target: source\n            } : {\n              source: source,\n              target: target\n            });\n          }\n        }\n      }\n      if (sortChords) resort();\n    }\n    function resort() {\n      chords.sort(function(a, b) {\n        return sortChords((a.source.value + a.target.value) / 2, (b.source.value + b.target.value) / 2);\n      });\n    }\n    chord.matrix = function(x) {\n      if (!arguments.length) return matrix;\n      n = (matrix = x) && matrix.length;\n      chords = groups = null;\n      return chord;\n    };\n    chord.padding = function(x) {\n      if (!arguments.length) return padding;\n      padding = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortGroups = function(x) {\n      if (!arguments.length) return sortGroups;\n      sortGroups = x;\n      chords = groups = null;\n      return chord;\n    };\n    chord.sortSubgroups = function(x) {\n      if (!arguments.length) return sortSubgroups;\n      sortSubgroups = x;\n      chords = null;\n      return chord;\n    };\n    chord.sortChords = function(x) {\n      if (!arguments.length) return sortChords;\n      sortChords = x;\n      if (chords) resort();\n      return chord;\n    };\n    chord.chords = function() {\n      if (!chords) relayout();\n      return chords;\n    };\n    chord.groups = function() {\n      if (!groups) relayout();\n      return groups;\n    };\n    return chord;\n  };\n  d3.layout.force = function() {\n    var force = {}, event = d3.dispatch(\"start\", \"tick\", \"end\"), size = [ 1, 1 ], drag, alpha, friction = .9, linkDistance = d3_layout_forceLinkDistance, linkStrength = d3_layout_forceLinkStrength, charge = -30, chargeDistance2 = d3_layout_forceChargeDistance2, gravity = .1, theta2 = .64, nodes = [], links = [], distances, strengths, charges;\n    function repulse(node) {\n      return function(quad, x1, _, x2) {\n        if (quad.point !== node) {\n          var dx = quad.cx - node.x, dy = quad.cy - node.y, dw = x2 - x1, dn = dx * dx + dy * dy;\n          if (dw * dw / theta2 < dn) {\n            if (dn < chargeDistance2) {\n              var k = quad.charge / dn;\n              node.px -= dx * k;\n              node.py -= dy * k;\n            }\n            return true;\n          }\n          if (quad.point && dn && dn < chargeDistance2) {\n            var k = quad.pointCharge / dn;\n            node.px -= dx * k;\n            node.py -= dy * k;\n          }\n        }\n        return !quad.charge;\n      };\n    }\n    force.tick = function() {\n      if ((alpha *= .99) < .005) {\n        event.end({\n          type: \"end\",\n          alpha: alpha = 0\n        });\n        return true;\n      }\n      var n = nodes.length, m = links.length, q, i, o, s, t, l, k, x, y;\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        s = o.source;\n        t = o.target;\n        x = t.x - s.x;\n        y = t.y - s.y;\n        if (l = x * x + y * y) {\n          l = alpha * strengths[i] * ((l = Math.sqrt(l)) - distances[i]) / l;\n          x *= l;\n          y *= l;\n          t.x -= x * (k = s.weight / (t.weight + s.weight));\n          t.y -= y * k;\n          s.x += x * (k = 1 - k);\n          s.y += y * k;\n        }\n      }\n      if (k = alpha * gravity) {\n        x = size[0] / 2;\n        y = size[1] / 2;\n        i = -1;\n        if (k) while (++i < n) {\n          o = nodes[i];\n          o.x += (x - o.x) * k;\n          o.y += (y - o.y) * k;\n        }\n      }\n      if (charge) {\n        d3_layout_forceAccumulate(q = d3.geom.quadtree(nodes), alpha, charges);\n        i = -1;\n        while (++i < n) {\n          if (!(o = nodes[i]).fixed) {\n            q.visit(repulse(o));\n          }\n        }\n      }\n      i = -1;\n      while (++i < n) {\n        o = nodes[i];\n        if (o.fixed) {\n          o.x = o.px;\n          o.y = o.py;\n        } else {\n          o.x -= (o.px - (o.px = o.x)) * friction;\n          o.y -= (o.py - (o.py = o.y)) * friction;\n        }\n      }\n      event.tick({\n        type: \"tick\",\n        alpha: alpha\n      });\n    };\n    force.nodes = function(x) {\n      if (!arguments.length) return nodes;\n      nodes = x;\n      return force;\n    };\n    force.links = function(x) {\n      if (!arguments.length) return links;\n      links = x;\n      return force;\n    };\n    force.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return force;\n    };\n    force.linkDistance = function(x) {\n      if (!arguments.length) return linkDistance;\n      linkDistance = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.distance = force.linkDistance;\n    force.linkStrength = function(x) {\n      if (!arguments.length) return linkStrength;\n      linkStrength = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.friction = function(x) {\n      if (!arguments.length) return friction;\n      friction = +x;\n      return force;\n    };\n    force.charge = function(x) {\n      if (!arguments.length) return charge;\n      charge = typeof x === \"function\" ? x : +x;\n      return force;\n    };\n    force.chargeDistance = function(x) {\n      if (!arguments.length) return Math.sqrt(chargeDistance2);\n      chargeDistance2 = x * x;\n      return force;\n    };\n    force.gravity = function(x) {\n      if (!arguments.length) return gravity;\n      gravity = +x;\n      return force;\n    };\n    force.theta = function(x) {\n      if (!arguments.length) return Math.sqrt(theta2);\n      theta2 = x * x;\n      return force;\n    };\n    force.alpha = function(x) {\n      if (!arguments.length) return alpha;\n      x = +x;\n      if (alpha) {\n        if (x > 0) alpha = x; else alpha = 0;\n      } else if (x > 0) {\n        event.start({\n          type: \"start\",\n          alpha: alpha = x\n        });\n        d3.timer(force.tick);\n      }\n      return force;\n    };\n    force.start = function() {\n      var i, n = nodes.length, m = links.length, w = size[0], h = size[1], neighbors, o;\n      for (i = 0; i < n; ++i) {\n        (o = nodes[i]).index = i;\n        o.weight = 0;\n      }\n      for (i = 0; i < m; ++i) {\n        o = links[i];\n        if (typeof o.source == \"number\") o.source = nodes[o.source];\n        if (typeof o.target == \"number\") o.target = nodes[o.target];\n        ++o.source.weight;\n        ++o.target.weight;\n      }\n      for (i = 0; i < n; ++i) {\n        o = nodes[i];\n        if (isNaN(o.x)) o.x = position(\"x\", w);\n        if (isNaN(o.y)) o.y = position(\"y\", h);\n        if (isNaN(o.px)) o.px = o.x;\n        if (isNaN(o.py)) o.py = o.y;\n      }\n      distances = [];\n      if (typeof linkDistance === \"function\") for (i = 0; i < m; ++i) distances[i] = +linkDistance.call(this, links[i], i); else for (i = 0; i < m; ++i) distances[i] = linkDistance;\n      strengths = [];\n      if (typeof linkStrength === \"function\") for (i = 0; i < m; ++i) strengths[i] = +linkStrength.call(this, links[i], i); else for (i = 0; i < m; ++i) strengths[i] = linkStrength;\n      charges = [];\n      if (typeof charge === \"function\") for (i = 0; i < n; ++i) charges[i] = +charge.call(this, nodes[i], i); else for (i = 0; i < n; ++i) charges[i] = charge;\n      function position(dimension, size) {\n        if (!neighbors) {\n          neighbors = new Array(n);\n          for (j = 0; j < n; ++j) {\n            neighbors[j] = [];\n          }\n          for (j = 0; j < m; ++j) {\n            var o = links[j];\n            neighbors[o.source.index].push(o.target);\n            neighbors[o.target.index].push(o.source);\n          }\n        }\n        var candidates = neighbors[i], j = -1, l = candidates.length, x;\n        while (++j < l) if (!isNaN(x = candidates[j][dimension])) return x;\n        return Math.random() * size;\n      }\n      return force.resume();\n    };\n    force.resume = function() {\n      return force.alpha(.1);\n    };\n    force.stop = function() {\n      return force.alpha(0);\n    };\n    force.drag = function() {\n      if (!drag) drag = d3.behavior.drag().origin(d3_identity).on(\"dragstart.force\", d3_layout_forceDragstart).on(\"drag.force\", dragmove).on(\"dragend.force\", d3_layout_forceDragend);\n      if (!arguments.length) return drag;\n      this.on(\"mouseover.force\", d3_layout_forceMouseover).on(\"mouseout.force\", d3_layout_forceMouseout).call(drag);\n    };\n    function dragmove(d) {\n      d.px = d3.event.x, d.py = d3.event.y;\n      force.resume();\n    }\n    return d3.rebind(force, event, \"on\");\n  };\n  function d3_layout_forceDragstart(d) {\n    d.fixed |= 2;\n  }\n  function d3_layout_forceDragend(d) {\n    d.fixed &= ~6;\n  }\n  function d3_layout_forceMouseover(d) {\n    d.fixed |= 4;\n    d.px = d.x, d.py = d.y;\n  }\n  function d3_layout_forceMouseout(d) {\n    d.fixed &= ~4;\n  }\n  function d3_layout_forceAccumulate(quad, alpha, charges) {\n    var cx = 0, cy = 0;\n    quad.charge = 0;\n    if (!quad.leaf) {\n      var nodes = quad.nodes, n = nodes.length, i = -1, c;\n      while (++i < n) {\n        c = nodes[i];\n        if (c == null) continue;\n        d3_layout_forceAccumulate(c, alpha, charges);\n        quad.charge += c.charge;\n        cx += c.charge * c.cx;\n        cy += c.charge * c.cy;\n      }\n    }\n    if (quad.point) {\n      if (!quad.leaf) {\n        quad.point.x += Math.random() - .5;\n        quad.point.y += Math.random() - .5;\n      }\n      var k = alpha * charges[quad.point.index];\n      quad.charge += quad.pointCharge = k;\n      cx += k * quad.point.x;\n      cy += k * quad.point.y;\n    }\n    quad.cx = cx / quad.charge;\n    quad.cy = cy / quad.charge;\n  }\n  var d3_layout_forceLinkDistance = 20, d3_layout_forceLinkStrength = 1, d3_layout_forceChargeDistance2 = Infinity;\n  d3.layout.hierarchy = function() {\n    var sort = d3_layout_hierarchySort, children = d3_layout_hierarchyChildren, value = d3_layout_hierarchyValue;\n    function hierarchy(root) {\n      var stack = [ root ], nodes = [], node;\n      root.depth = 0;\n      while ((node = stack.pop()) != null) {\n        nodes.push(node);\n        if ((childs = children.call(hierarchy, node, node.depth)) && (n = childs.length)) {\n          var n, childs, child;\n          while (--n >= 0) {\n            stack.push(child = childs[n]);\n            child.parent = node;\n            child.depth = node.depth + 1;\n          }\n          if (value) node.value = 0;\n          node.children = childs;\n        } else {\n          if (value) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          delete node.children;\n        }\n      }\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var childs, parent;\n        if (sort && (childs = node.children)) childs.sort(sort);\n        if (value && (parent = node.parent)) parent.value += node.value;\n      });\n      return nodes;\n    }\n    hierarchy.sort = function(x) {\n      if (!arguments.length) return sort;\n      sort = x;\n      return hierarchy;\n    };\n    hierarchy.children = function(x) {\n      if (!arguments.length) return children;\n      children = x;\n      return hierarchy;\n    };\n    hierarchy.value = function(x) {\n      if (!arguments.length) return value;\n      value = x;\n      return hierarchy;\n    };\n    hierarchy.revalue = function(root) {\n      if (value) {\n        d3_layout_hierarchyVisitBefore(root, function(node) {\n          if (node.children) node.value = 0;\n        });\n        d3_layout_hierarchyVisitAfter(root, function(node) {\n          var parent;\n          if (!node.children) node.value = +value.call(hierarchy, node, node.depth) || 0;\n          if (parent = node.parent) parent.value += node.value;\n        });\n      }\n      return root;\n    };\n    return hierarchy;\n  };\n  function d3_layout_hierarchyRebind(object, hierarchy) {\n    d3.rebind(object, hierarchy, \"sort\", \"children\", \"value\");\n    object.nodes = object;\n    object.links = d3_layout_hierarchyLinks;\n    return object;\n  }\n  function d3_layout_hierarchyVisitBefore(node, callback) {\n    var nodes = [ node ];\n    while ((node = nodes.pop()) != null) {\n      callback(node);\n      if ((children = node.children) && (n = children.length)) {\n        var n, children;\n        while (--n >= 0) nodes.push(children[n]);\n      }\n    }\n  }\n  function d3_layout_hierarchyVisitAfter(node, callback) {\n    var nodes = [ node ], nodes2 = [];\n    while ((node = nodes.pop()) != null) {\n      nodes2.push(node);\n      if ((children = node.children) && (n = children.length)) {\n        var i = -1, n, children;\n        while (++i < n) nodes.push(children[i]);\n      }\n    }\n    while ((node = nodes2.pop()) != null) {\n      callback(node);\n    }\n  }\n  function d3_layout_hierarchyChildren(d) {\n    return d.children;\n  }\n  function d3_layout_hierarchyValue(d) {\n    return d.value;\n  }\n  function d3_layout_hierarchySort(a, b) {\n    return b.value - a.value;\n  }\n  function d3_layout_hierarchyLinks(nodes) {\n    return d3.merge(nodes.map(function(parent) {\n      return (parent.children || []).map(function(child) {\n        return {\n          source: parent,\n          target: child\n        };\n      });\n    }));\n  }\n  d3.layout.partition = function() {\n    var hierarchy = d3.layout.hierarchy(), size = [ 1, 1 ];\n    function position(node, x, dx, dy) {\n      var children = node.children;\n      node.x = x;\n      node.y = node.depth * dy;\n      node.dx = dx;\n      node.dy = dy;\n      if (children && (n = children.length)) {\n        var i = -1, n, c, d;\n        dx = node.value ? dx / node.value : 0;\n        while (++i < n) {\n          position(c = children[i], x, d = c.value * dx, dy);\n          x += d;\n        }\n      }\n    }\n    function depth(node) {\n      var children = node.children, d = 0;\n      if (children && (n = children.length)) {\n        var i = -1, n;\n        while (++i < n) d = Math.max(d, depth(children[i]));\n      }\n      return 1 + d;\n    }\n    function partition(d, i) {\n      var nodes = hierarchy.call(this, d, i);\n      position(nodes[0], 0, size[0], size[1] / depth(nodes[0]));\n      return nodes;\n    }\n    partition.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return partition;\n    };\n    return d3_layout_hierarchyRebind(partition, hierarchy);\n  };\n  d3.layout.pie = function() {\n    var value = Number, sort = d3_layout_pieSortByValue, startAngle = 0, endAngle = τ, padAngle = 0;\n    function pie(data) {\n      var n = data.length, values = data.map(function(d, i) {\n        return +value.call(pie, d, i);\n      }), a = +(typeof startAngle === \"function\" ? startAngle.apply(this, arguments) : startAngle), da = (typeof endAngle === \"function\" ? endAngle.apply(this, arguments) : endAngle) - a, p = Math.min(Math.abs(da) / n, +(typeof padAngle === \"function\" ? padAngle.apply(this, arguments) : padAngle)), pa = p * (da < 0 ? -1 : 1), k = (da - n * pa) / d3.sum(values), index = d3.range(n), arcs = [], v;\n      if (sort != null) index.sort(sort === d3_layout_pieSortByValue ? function(i, j) {\n        return values[j] - values[i];\n      } : function(i, j) {\n        return sort(data[i], data[j]);\n      });\n      index.forEach(function(i) {\n        arcs[i] = {\n          data: data[i],\n          value: v = values[i],\n          startAngle: a,\n          endAngle: a += v * k + pa,\n          padAngle: p\n        };\n      });\n      return arcs;\n    }\n    pie.value = function(_) {\n      if (!arguments.length) return value;\n      value = _;\n      return pie;\n    };\n    pie.sort = function(_) {\n      if (!arguments.length) return sort;\n      sort = _;\n      return pie;\n    };\n    pie.startAngle = function(_) {\n      if (!arguments.length) return startAngle;\n      startAngle = _;\n      return pie;\n    };\n    pie.endAngle = function(_) {\n      if (!arguments.length) return endAngle;\n      endAngle = _;\n      return pie;\n    };\n    pie.padAngle = function(_) {\n      if (!arguments.length) return padAngle;\n      padAngle = _;\n      return pie;\n    };\n    return pie;\n  };\n  var d3_layout_pieSortByValue = {};\n  d3.layout.stack = function() {\n    var values = d3_identity, order = d3_layout_stackOrderDefault, offset = d3_layout_stackOffsetZero, out = d3_layout_stackOut, x = d3_layout_stackX, y = d3_layout_stackY;\n    function stack(data, index) {\n      if (!(n = data.length)) return data;\n      var series = data.map(function(d, i) {\n        return values.call(stack, d, i);\n      });\n      var points = series.map(function(d) {\n        return d.map(function(v, i) {\n          return [ x.call(stack, v, i), y.call(stack, v, i) ];\n        });\n      });\n      var orders = order.call(stack, points, index);\n      series = d3.permute(series, orders);\n      points = d3.permute(points, orders);\n      var offsets = offset.call(stack, points, index);\n      var m = series[0].length, n, i, j, o;\n      for (j = 0; j < m; ++j) {\n        out.call(stack, series[0][j], o = offsets[j], points[0][j][1]);\n        for (i = 1; i < n; ++i) {\n          out.call(stack, series[i][j], o += points[i - 1][j][1], points[i][j][1]);\n        }\n      }\n      return data;\n    }\n    stack.values = function(x) {\n      if (!arguments.length) return values;\n      values = x;\n      return stack;\n    };\n    stack.order = function(x) {\n      if (!arguments.length) return order;\n      order = typeof x === \"function\" ? x : d3_layout_stackOrders.get(x) || d3_layout_stackOrderDefault;\n      return stack;\n    };\n    stack.offset = function(x) {\n      if (!arguments.length) return offset;\n      offset = typeof x === \"function\" ? x : d3_layout_stackOffsets.get(x) || d3_layout_stackOffsetZero;\n      return stack;\n    };\n    stack.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      return stack;\n    };\n    stack.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      return stack;\n    };\n    stack.out = function(z) {\n      if (!arguments.length) return out;\n      out = z;\n      return stack;\n    };\n    return stack;\n  };\n  function d3_layout_stackX(d) {\n    return d.x;\n  }\n  function d3_layout_stackY(d) {\n    return d.y;\n  }\n  function d3_layout_stackOut(d, y0, y) {\n    d.y0 = y0;\n    d.y = y;\n  }\n  var d3_layout_stackOrders = d3.map({\n    \"inside-out\": function(data) {\n      var n = data.length, i, j, max = data.map(d3_layout_stackMaxIndex), sums = data.map(d3_layout_stackReduceSum), index = d3.range(n).sort(function(a, b) {\n        return max[a] - max[b];\n      }), top = 0, bottom = 0, tops = [], bottoms = [];\n      for (i = 0; i < n; ++i) {\n        j = index[i];\n        if (top < bottom) {\n          top += sums[j];\n          tops.push(j);\n        } else {\n          bottom += sums[j];\n          bottoms.push(j);\n        }\n      }\n      return bottoms.reverse().concat(tops);\n    },\n    reverse: function(data) {\n      return d3.range(data.length).reverse();\n    },\n    \"default\": d3_layout_stackOrderDefault\n  });\n  var d3_layout_stackOffsets = d3.map({\n    silhouette: function(data) {\n      var n = data.length, m = data[0].length, sums = [], max = 0, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o > max) max = o;\n        sums.push(o);\n      }\n      for (j = 0; j < m; ++j) {\n        y0[j] = (max - sums[j]) / 2;\n      }\n      return y0;\n    },\n    wiggle: function(data) {\n      var n = data.length, x = data[0], m = x.length, i, j, k, s1, s2, s3, dx, o, o0, y0 = [];\n      y0[0] = o = o0 = 0;\n      for (j = 1; j < m; ++j) {\n        for (i = 0, s1 = 0; i < n; ++i) s1 += data[i][j][1];\n        for (i = 0, s2 = 0, dx = x[j][0] - x[j - 1][0]; i < n; ++i) {\n          for (k = 0, s3 = (data[i][j][1] - data[i][j - 1][1]) / (2 * dx); k < i; ++k) {\n            s3 += (data[k][j][1] - data[k][j - 1][1]) / dx;\n          }\n          s2 += s3 * data[i][j][1];\n        }\n        y0[j] = o -= s1 ? s2 / s1 * dx : 0;\n        if (o < o0) o0 = o;\n      }\n      for (j = 0; j < m; ++j) y0[j] -= o0;\n      return y0;\n    },\n    expand: function(data) {\n      var n = data.length, m = data[0].length, k = 1 / n, i, j, o, y0 = [];\n      for (j = 0; j < m; ++j) {\n        for (i = 0, o = 0; i < n; i++) o += data[i][j][1];\n        if (o) for (i = 0; i < n; i++) data[i][j][1] /= o; else for (i = 0; i < n; i++) data[i][j][1] = k;\n      }\n      for (j = 0; j < m; ++j) y0[j] = 0;\n      return y0;\n    },\n    zero: d3_layout_stackOffsetZero\n  });\n  function d3_layout_stackOrderDefault(data) {\n    return d3.range(data.length);\n  }\n  function d3_layout_stackOffsetZero(data) {\n    var j = -1, m = data[0].length, y0 = [];\n    while (++j < m) y0[j] = 0;\n    return y0;\n  }\n  function d3_layout_stackMaxIndex(array) {\n    var i = 1, j = 0, v = array[0][1], k, n = array.length;\n    for (;i < n; ++i) {\n      if ((k = array[i][1]) > v) {\n        j = i;\n        v = k;\n      }\n    }\n    return j;\n  }\n  function d3_layout_stackReduceSum(d) {\n    return d.reduce(d3_layout_stackSum, 0);\n  }\n  function d3_layout_stackSum(p, d) {\n    return p + d[1];\n  }\n  d3.layout.histogram = function() {\n    var frequency = true, valuer = Number, ranger = d3_layout_histogramRange, binner = d3_layout_histogramBinSturges;\n    function histogram(data, i) {\n      var bins = [], values = data.map(valuer, this), range = ranger.call(this, values, i), thresholds = binner.call(this, range, values, i), bin, i = -1, n = values.length, m = thresholds.length - 1, k = frequency ? 1 : 1 / n, x;\n      while (++i < m) {\n        bin = bins[i] = [];\n        bin.dx = thresholds[i + 1] - (bin.x = thresholds[i]);\n        bin.y = 0;\n      }\n      if (m > 0) {\n        i = -1;\n        while (++i < n) {\n          x = values[i];\n          if (x >= range[0] && x <= range[1]) {\n            bin = bins[d3.bisect(thresholds, x, 1, m) - 1];\n            bin.y += k;\n            bin.push(data[i]);\n          }\n        }\n      }\n      return bins;\n    }\n    histogram.value = function(x) {\n      if (!arguments.length) return valuer;\n      valuer = x;\n      return histogram;\n    };\n    histogram.range = function(x) {\n      if (!arguments.length) return ranger;\n      ranger = d3_functor(x);\n      return histogram;\n    };\n    histogram.bins = function(x) {\n      if (!arguments.length) return binner;\n      binner = typeof x === \"number\" ? function(range) {\n        return d3_layout_histogramBinFixed(range, x);\n      } : d3_functor(x);\n      return histogram;\n    };\n    histogram.frequency = function(x) {\n      if (!arguments.length) return frequency;\n      frequency = !!x;\n      return histogram;\n    };\n    return histogram;\n  };\n  function d3_layout_histogramBinSturges(range, values) {\n    return d3_layout_histogramBinFixed(range, Math.ceil(Math.log(values.length) / Math.LN2 + 1));\n  }\n  function d3_layout_histogramBinFixed(range, n) {\n    var x = -1, b = +range[0], m = (range[1] - b) / n, f = [];\n    while (++x <= n) f[x] = m * x + b;\n    return f;\n  }\n  function d3_layout_histogramRange(values) {\n    return [ d3.min(values), d3.max(values) ];\n  }\n  d3.layout.pack = function() {\n    var hierarchy = d3.layout.hierarchy().sort(d3_layout_packSort), padding = 0, size = [ 1, 1 ], radius;\n    function pack(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], w = size[0], h = size[1], r = radius == null ? Math.sqrt : typeof radius === \"function\" ? radius : function() {\n        return radius;\n      };\n      root.x = root.y = 0;\n      d3_layout_hierarchyVisitAfter(root, function(d) {\n        d.r = +r(d.value);\n      });\n      d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n      if (padding) {\n        var dr = padding * (radius ? 1 : Math.max(2 * root.r / w, 2 * root.r / h)) / 2;\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r += dr;\n        });\n        d3_layout_hierarchyVisitAfter(root, d3_layout_packSiblings);\n        d3_layout_hierarchyVisitAfter(root, function(d) {\n          d.r -= dr;\n        });\n      }\n      d3_layout_packTransform(root, w / 2, h / 2, radius ? 1 : 1 / Math.max(2 * root.r / w, 2 * root.r / h));\n      return nodes;\n    }\n    pack.size = function(_) {\n      if (!arguments.length) return size;\n      size = _;\n      return pack;\n    };\n    pack.radius = function(_) {\n      if (!arguments.length) return radius;\n      radius = _ == null || typeof _ === \"function\" ? _ : +_;\n      return pack;\n    };\n    pack.padding = function(_) {\n      if (!arguments.length) return padding;\n      padding = +_;\n      return pack;\n    };\n    return d3_layout_hierarchyRebind(pack, hierarchy);\n  };\n  function d3_layout_packSort(a, b) {\n    return a.value - b.value;\n  }\n  function d3_layout_packInsert(a, b) {\n    var c = a._pack_next;\n    a._pack_next = b;\n    b._pack_prev = a;\n    b._pack_next = c;\n    c._pack_prev = b;\n  }\n  function d3_layout_packSplice(a, b) {\n    a._pack_next = b;\n    b._pack_prev = a;\n  }\n  function d3_layout_packIntersects(a, b) {\n    var dx = b.x - a.x, dy = b.y - a.y, dr = a.r + b.r;\n    return .999 * dr * dr > dx * dx + dy * dy;\n  }\n  function d3_layout_packSiblings(node) {\n    if (!(nodes = node.children) || !(n = nodes.length)) return;\n    var nodes, xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, a, b, c, i, j, k, n;\n    function bound(node) {\n      xMin = Math.min(node.x - node.r, xMin);\n      xMax = Math.max(node.x + node.r, xMax);\n      yMin = Math.min(node.y - node.r, yMin);\n      yMax = Math.max(node.y + node.r, yMax);\n    }\n    nodes.forEach(d3_layout_packLink);\n    a = nodes[0];\n    a.x = -a.r;\n    a.y = 0;\n    bound(a);\n    if (n > 1) {\n      b = nodes[1];\n      b.x = b.r;\n      b.y = 0;\n      bound(b);\n      if (n > 2) {\n        c = nodes[2];\n        d3_layout_packPlace(a, b, c);\n        bound(c);\n        d3_layout_packInsert(a, c);\n        a._pack_prev = c;\n        d3_layout_packInsert(c, b);\n        b = a._pack_next;\n        for (i = 3; i < n; i++) {\n          d3_layout_packPlace(a, b, c = nodes[i]);\n          var isect = 0, s1 = 1, s2 = 1;\n          for (j = b._pack_next; j !== b; j = j._pack_next, s1++) {\n            if (d3_layout_packIntersects(j, c)) {\n              isect = 1;\n              break;\n            }\n          }\n          if (isect == 1) {\n            for (k = a._pack_prev; k !== j._pack_prev; k = k._pack_prev, s2++) {\n              if (d3_layout_packIntersects(k, c)) {\n                break;\n              }\n            }\n          }\n          if (isect) {\n            if (s1 < s2 || s1 == s2 && b.r < a.r) d3_layout_packSplice(a, b = j); else d3_layout_packSplice(a = k, b);\n            i--;\n          } else {\n            d3_layout_packInsert(a, c);\n            b = c;\n            bound(c);\n          }\n        }\n      }\n    }\n    var cx = (xMin + xMax) / 2, cy = (yMin + yMax) / 2, cr = 0;\n    for (i = 0; i < n; i++) {\n      c = nodes[i];\n      c.x -= cx;\n      c.y -= cy;\n      cr = Math.max(cr, c.r + Math.sqrt(c.x * c.x + c.y * c.y));\n    }\n    node.r = cr;\n    nodes.forEach(d3_layout_packUnlink);\n  }\n  function d3_layout_packLink(node) {\n    node._pack_next = node._pack_prev = node;\n  }\n  function d3_layout_packUnlink(node) {\n    delete node._pack_next;\n    delete node._pack_prev;\n  }\n  function d3_layout_packTransform(node, x, y, k) {\n    var children = node.children;\n    node.x = x += k * node.x;\n    node.y = y += k * node.y;\n    node.r *= k;\n    if (children) {\n      var i = -1, n = children.length;\n      while (++i < n) d3_layout_packTransform(children[i], x, y, k);\n    }\n  }\n  function d3_layout_packPlace(a, b, c) {\n    var db = a.r + c.r, dx = b.x - a.x, dy = b.y - a.y;\n    if (db && (dx || dy)) {\n      var da = b.r + c.r, dc = dx * dx + dy * dy;\n      da *= da;\n      db *= db;\n      var x = .5 + (db - da) / (2 * dc), y = Math.sqrt(Math.max(0, 2 * da * (db + dc) - (db -= dc) * db - da * da)) / (2 * dc);\n      c.x = a.x + x * dx + y * dy;\n      c.y = a.y + x * dy - y * dx;\n    } else {\n      c.x = a.x + db;\n      c.y = a.y;\n    }\n  }\n  d3.layout.tree = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = null;\n    function tree(d, i) {\n      var nodes = hierarchy.call(this, d, i), root0 = nodes[0], root1 = wrapTree(root0);\n      d3_layout_hierarchyVisitAfter(root1, firstWalk), root1.parent.m = -root1.z;\n      d3_layout_hierarchyVisitBefore(root1, secondWalk);\n      if (nodeSize) d3_layout_hierarchyVisitBefore(root0, sizeNode); else {\n        var left = root0, right = root0, bottom = root0;\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          if (node.x < left.x) left = node;\n          if (node.x > right.x) right = node;\n          if (node.depth > bottom.depth) bottom = node;\n        });\n        var tx = separation(left, right) / 2 - left.x, kx = size[0] / (right.x + separation(right, left) / 2 + tx), ky = size[1] / (bottom.depth || 1);\n        d3_layout_hierarchyVisitBefore(root0, function(node) {\n          node.x = (node.x + tx) * kx;\n          node.y = node.depth * ky;\n        });\n      }\n      return nodes;\n    }\n    function wrapTree(root0) {\n      var root1 = {\n        A: null,\n        children: [ root0 ]\n      }, queue = [ root1 ], node1;\n      while ((node1 = queue.pop()) != null) {\n        for (var children = node1.children, child, i = 0, n = children.length; i < n; ++i) {\n          queue.push((children[i] = child = {\n            _: children[i],\n            parent: node1,\n            children: (child = children[i].children) && child.slice() || [],\n            A: null,\n            a: null,\n            z: 0,\n            m: 0,\n            c: 0,\n            s: 0,\n            t: null,\n            i: i\n          }).a = child);\n        }\n      }\n      return root1.children[0];\n    }\n    function firstWalk(v) {\n      var children = v.children, siblings = v.parent.children, w = v.i ? siblings[v.i - 1] : null;\n      if (children.length) {\n        d3_layout_treeShift(v);\n        var midpoint = (children[0].z + children[children.length - 1].z) / 2;\n        if (w) {\n          v.z = w.z + separation(v._, w._);\n          v.m = v.z - midpoint;\n        } else {\n          v.z = midpoint;\n        }\n      } else if (w) {\n        v.z = w.z + separation(v._, w._);\n      }\n      v.parent.A = apportion(v, w, v.parent.A || siblings[0]);\n    }\n    function secondWalk(v) {\n      v._.x = v.z + v.parent.m;\n      v.m += v.parent.m;\n    }\n    function apportion(v, w, ancestor) {\n      if (w) {\n        var vip = v, vop = v, vim = w, vom = vip.parent.children[0], sip = vip.m, sop = vop.m, sim = vim.m, som = vom.m, shift;\n        while (vim = d3_layout_treeRight(vim), vip = d3_layout_treeLeft(vip), vim && vip) {\n          vom = d3_layout_treeLeft(vom);\n          vop = d3_layout_treeRight(vop);\n          vop.a = v;\n          shift = vim.z + sim - vip.z - sip + separation(vim._, vip._);\n          if (shift > 0) {\n            d3_layout_treeMove(d3_layout_treeAncestor(vim, v, ancestor), v, shift);\n            sip += shift;\n            sop += shift;\n          }\n          sim += vim.m;\n          sip += vip.m;\n          som += vom.m;\n          sop += vop.m;\n        }\n        if (vim && !d3_layout_treeRight(vop)) {\n          vop.t = vim;\n          vop.m += sim - sop;\n        }\n        if (vip && !d3_layout_treeLeft(vom)) {\n          vom.t = vip;\n          vom.m += sip - som;\n          ancestor = v;\n        }\n      }\n      return ancestor;\n    }\n    function sizeNode(node) {\n      node.x *= size[0];\n      node.y = node.depth * size[1];\n    }\n    tree.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return tree;\n    };\n    tree.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null ? sizeNode : null;\n      return tree;\n    };\n    tree.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) == null ? null : sizeNode;\n      return tree;\n    };\n    return d3_layout_hierarchyRebind(tree, hierarchy);\n  };\n  function d3_layout_treeSeparation(a, b) {\n    return a.parent == b.parent ? 1 : 2;\n  }\n  function d3_layout_treeLeft(v) {\n    var children = v.children;\n    return children.length ? children[0] : v.t;\n  }\n  function d3_layout_treeRight(v) {\n    var children = v.children, n;\n    return (n = children.length) ? children[n - 1] : v.t;\n  }\n  function d3_layout_treeMove(wm, wp, shift) {\n    var change = shift / (wp.i - wm.i);\n    wp.c -= change;\n    wp.s += shift;\n    wm.c += change;\n    wp.z += shift;\n    wp.m += shift;\n  }\n  function d3_layout_treeShift(v) {\n    var shift = 0, change = 0, children = v.children, i = children.length, w;\n    while (--i >= 0) {\n      w = children[i];\n      w.z += shift;\n      w.m += shift;\n      shift += w.s + (change += w.c);\n    }\n  }\n  function d3_layout_treeAncestor(vim, v, ancestor) {\n    return vim.a.parent === v.parent ? vim.a : ancestor;\n  }\n  d3.layout.cluster = function() {\n    var hierarchy = d3.layout.hierarchy().sort(null).value(null), separation = d3_layout_treeSeparation, size = [ 1, 1 ], nodeSize = false;\n    function cluster(d, i) {\n      var nodes = hierarchy.call(this, d, i), root = nodes[0], previousNode, x = 0;\n      d3_layout_hierarchyVisitAfter(root, function(node) {\n        var children = node.children;\n        if (children && children.length) {\n          node.x = d3_layout_clusterX(children);\n          node.y = d3_layout_clusterY(children);\n        } else {\n          node.x = previousNode ? x += separation(node, previousNode) : 0;\n          node.y = 0;\n          previousNode = node;\n        }\n      });\n      var left = d3_layout_clusterLeft(root), right = d3_layout_clusterRight(root), x0 = left.x - separation(left, right) / 2, x1 = right.x + separation(right, left) / 2;\n      d3_layout_hierarchyVisitAfter(root, nodeSize ? function(node) {\n        node.x = (node.x - root.x) * size[0];\n        node.y = (root.y - node.y) * size[1];\n      } : function(node) {\n        node.x = (node.x - x0) / (x1 - x0) * size[0];\n        node.y = (1 - (root.y ? node.y / root.y : 1)) * size[1];\n      });\n      return nodes;\n    }\n    cluster.separation = function(x) {\n      if (!arguments.length) return separation;\n      separation = x;\n      return cluster;\n    };\n    cluster.size = function(x) {\n      if (!arguments.length) return nodeSize ? null : size;\n      nodeSize = (size = x) == null;\n      return cluster;\n    };\n    cluster.nodeSize = function(x) {\n      if (!arguments.length) return nodeSize ? size : null;\n      nodeSize = (size = x) != null;\n      return cluster;\n    };\n    return d3_layout_hierarchyRebind(cluster, hierarchy);\n  };\n  function d3_layout_clusterY(children) {\n    return 1 + d3.max(children, function(child) {\n      return child.y;\n    });\n  }\n  function d3_layout_clusterX(children) {\n    return children.reduce(function(x, child) {\n      return x + child.x;\n    }, 0) / children.length;\n  }\n  function d3_layout_clusterLeft(node) {\n    var children = node.children;\n    return children && children.length ? d3_layout_clusterLeft(children[0]) : node;\n  }\n  function d3_layout_clusterRight(node) {\n    var children = node.children, n;\n    return children && (n = children.length) ? d3_layout_clusterRight(children[n - 1]) : node;\n  }\n  d3.layout.treemap = function() {\n    var hierarchy = d3.layout.hierarchy(), round = Math.round, size = [ 1, 1 ], padding = null, pad = d3_layout_treemapPadNull, sticky = false, stickies, mode = \"squarify\", ratio = .5 * (1 + Math.sqrt(5));\n    function scale(children, k) {\n      var i = -1, n = children.length, child, area;\n      while (++i < n) {\n        area = (child = children[i]).value * (k < 0 ? 0 : k);\n        child.area = isNaN(area) || area <= 0 ? 0 : area;\n      }\n    }\n    function squarify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), row = [], remaining = children.slice(), child, best = Infinity, score, u = mode === \"slice\" ? rect.dx : mode === \"dice\" ? rect.dy : mode === \"slice-dice\" ? node.depth & 1 ? rect.dy : rect.dx : Math.min(rect.dx, rect.dy), n;\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while ((n = remaining.length) > 0) {\n          row.push(child = remaining[n - 1]);\n          row.area += child.area;\n          if (mode !== \"squarify\" || (score = worst(row, u)) <= best) {\n            remaining.pop();\n            best = score;\n          } else {\n            row.area -= row.pop().area;\n            position(row, u, rect, false);\n            u = Math.min(rect.dx, rect.dy);\n            row.length = row.area = 0;\n            best = Infinity;\n          }\n        }\n        if (row.length) {\n          position(row, u, rect, true);\n          row.length = row.area = 0;\n        }\n        children.forEach(squarify);\n      }\n    }\n    function stickify(node) {\n      var children = node.children;\n      if (children && children.length) {\n        var rect = pad(node), remaining = children.slice(), child, row = [];\n        scale(remaining, rect.dx * rect.dy / node.value);\n        row.area = 0;\n        while (child = remaining.pop()) {\n          row.push(child);\n          row.area += child.area;\n          if (child.z != null) {\n            position(row, child.z ? rect.dx : rect.dy, rect, !remaining.length);\n            row.length = row.area = 0;\n          }\n        }\n        children.forEach(stickify);\n      }\n    }\n    function worst(row, u) {\n      var s = row.area, r, rmax = 0, rmin = Infinity, i = -1, n = row.length;\n      while (++i < n) {\n        if (!(r = row[i].area)) continue;\n        if (r < rmin) rmin = r;\n        if (r > rmax) rmax = r;\n      }\n      s *= s;\n      u *= u;\n      return s ? Math.max(u * rmax * ratio / s, s / (u * rmin * ratio)) : Infinity;\n    }\n    function position(row, u, rect, flush) {\n      var i = -1, n = row.length, x = rect.x, y = rect.y, v = u ? round(row.area / u) : 0, o;\n      if (u == rect.dx) {\n        if (flush || v > rect.dy) v = rect.dy;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dy = v;\n          x += o.dx = Math.min(rect.x + rect.dx - x, v ? round(o.area / v) : 0);\n        }\n        o.z = true;\n        o.dx += rect.x + rect.dx - x;\n        rect.y += v;\n        rect.dy -= v;\n      } else {\n        if (flush || v > rect.dx) v = rect.dx;\n        while (++i < n) {\n          o = row[i];\n          o.x = x;\n          o.y = y;\n          o.dx = v;\n          y += o.dy = Math.min(rect.y + rect.dy - y, v ? round(o.area / v) : 0);\n        }\n        o.z = false;\n        o.dy += rect.y + rect.dy - y;\n        rect.x += v;\n        rect.dx -= v;\n      }\n    }\n    function treemap(d) {\n      var nodes = stickies || hierarchy(d), root = nodes[0];\n      root.x = 0;\n      root.y = 0;\n      root.dx = size[0];\n      root.dy = size[1];\n      if (stickies) hierarchy.revalue(root);\n      scale([ root ], root.dx * root.dy / root.value);\n      (stickies ? stickify : squarify)(root);\n      if (sticky) stickies = nodes;\n      return nodes;\n    }\n    treemap.size = function(x) {\n      if (!arguments.length) return size;\n      size = x;\n      return treemap;\n    };\n    treemap.padding = function(x) {\n      if (!arguments.length) return padding;\n      function padFunction(node) {\n        var p = x.call(treemap, node, node.depth);\n        return p == null ? d3_layout_treemapPadNull(node) : d3_layout_treemapPad(node, typeof p === \"number\" ? [ p, p, p, p ] : p);\n      }\n      function padConstant(node) {\n        return d3_layout_treemapPad(node, x);\n      }\n      var type;\n      pad = (padding = x) == null ? d3_layout_treemapPadNull : (type = typeof x) === \"function\" ? padFunction : type === \"number\" ? (x = [ x, x, x, x ], \n      padConstant) : padConstant;\n      return treemap;\n    };\n    treemap.round = function(x) {\n      if (!arguments.length) return round != Number;\n      round = x ? Math.round : Number;\n      return treemap;\n    };\n    treemap.sticky = function(x) {\n      if (!arguments.length) return sticky;\n      sticky = x;\n      stickies = null;\n      return treemap;\n    };\n    treemap.ratio = function(x) {\n      if (!arguments.length) return ratio;\n      ratio = x;\n      return treemap;\n    };\n    treemap.mode = function(x) {\n      if (!arguments.length) return mode;\n      mode = x + \"\";\n      return treemap;\n    };\n    return d3_layout_hierarchyRebind(treemap, hierarchy);\n  };\n  function d3_layout_treemapPadNull(node) {\n    return {\n      x: node.x,\n      y: node.y,\n      dx: node.dx,\n      dy: node.dy\n    };\n  }\n  function d3_layout_treemapPad(node, padding) {\n    var x = node.x + padding[3], y = node.y + padding[0], dx = node.dx - padding[1] - padding[3], dy = node.dy - padding[0] - padding[2];\n    if (dx < 0) {\n      x += dx / 2;\n      dx = 0;\n    }\n    if (dy < 0) {\n      y += dy / 2;\n      dy = 0;\n    }\n    return {\n      x: x,\n      y: y,\n      dx: dx,\n      dy: dy\n    };\n  }\n  d3.random = {\n    normal: function(µ, σ) {\n      var n = arguments.length;\n      if (n < 2) σ = 1;\n      if (n < 1) µ = 0;\n      return function() {\n        var x, y, r;\n        do {\n          x = Math.random() * 2 - 1;\n          y = Math.random() * 2 - 1;\n          r = x * x + y * y;\n        } while (!r || r > 1);\n        return µ + σ * x * Math.sqrt(-2 * Math.log(r) / r);\n      };\n    },\n    logNormal: function() {\n      var random = d3.random.normal.apply(d3, arguments);\n      return function() {\n        return Math.exp(random());\n      };\n    },\n    bates: function(m) {\n      var random = d3.random.irwinHall(m);\n      return function() {\n        return random() / m;\n      };\n    },\n    irwinHall: function(m) {\n      return function() {\n        for (var s = 0, j = 0; j < m; j++) s += Math.random();\n        return s;\n      };\n    }\n  };\n  d3.scale = {};\n  function d3_scaleExtent(domain) {\n    var start = domain[0], stop = domain[domain.length - 1];\n    return start < stop ? [ start, stop ] : [ stop, start ];\n  }\n  function d3_scaleRange(scale) {\n    return scale.rangeExtent ? scale.rangeExtent() : d3_scaleExtent(scale.range());\n  }\n  function d3_scale_bilinear(domain, range, uninterpolate, interpolate) {\n    var u = uninterpolate(domain[0], domain[1]), i = interpolate(range[0], range[1]);\n    return function(x) {\n      return i(u(x));\n    };\n  }\n  function d3_scale_nice(domain, nice) {\n    var i0 = 0, i1 = domain.length - 1, x0 = domain[i0], x1 = domain[i1], dx;\n    if (x1 < x0) {\n      dx = i0, i0 = i1, i1 = dx;\n      dx = x0, x0 = x1, x1 = dx;\n    }\n    domain[i0] = nice.floor(x0);\n    domain[i1] = nice.ceil(x1);\n    return domain;\n  }\n  function d3_scale_niceStep(step) {\n    return step ? {\n      floor: function(x) {\n        return Math.floor(x / step) * step;\n      },\n      ceil: function(x) {\n        return Math.ceil(x / step) * step;\n      }\n    } : d3_scale_niceIdentity;\n  }\n  var d3_scale_niceIdentity = {\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  function d3_scale_polylinear(domain, range, uninterpolate, interpolate) {\n    var u = [], i = [], j = 0, k = Math.min(domain.length, range.length) - 1;\n    if (domain[k] < domain[0]) {\n      domain = domain.slice().reverse();\n      range = range.slice().reverse();\n    }\n    while (++j <= k) {\n      u.push(uninterpolate(domain[j - 1], domain[j]));\n      i.push(interpolate(range[j - 1], range[j]));\n    }\n    return function(x) {\n      var j = d3.bisect(domain, x, 1, k) - 1;\n      return i[j](u[j](x));\n    };\n  }\n  d3.scale.linear = function() {\n    return d3_scale_linear([ 0, 1 ], [ 0, 1 ], d3_interpolate, false);\n  };\n  function d3_scale_linear(domain, range, interpolate, clamp) {\n    var output, input;\n    function rescale() {\n      var linear = Math.min(domain.length, range.length) > 2 ? d3_scale_polylinear : d3_scale_bilinear, uninterpolate = clamp ? d3_uninterpolateClamp : d3_uninterpolateNumber;\n      output = linear(domain, range, uninterpolate, interpolate);\n      input = linear(range, domain, uninterpolate, d3_interpolate);\n      return scale;\n    }\n    function scale(x) {\n      return output(x);\n    }\n    scale.invert = function(y) {\n      return input(y);\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(Number);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.rangeRound = function(x) {\n      return scale.range(x).interpolate(d3_interpolateRound);\n    };\n    scale.clamp = function(x) {\n      if (!arguments.length) return clamp;\n      clamp = x;\n      return rescale();\n    };\n    scale.interpolate = function(x) {\n      if (!arguments.length) return interpolate;\n      interpolate = x;\n      return rescale();\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      d3_scale_linearNice(domain, m);\n      return rescale();\n    };\n    scale.copy = function() {\n      return d3_scale_linear(domain, range, interpolate, clamp);\n    };\n    return rescale();\n  }\n  function d3_scale_linearRebind(scale, linear) {\n    return d3.rebind(scale, linear, \"range\", \"rangeRound\", \"interpolate\", \"clamp\");\n  }\n  function d3_scale_linearNice(domain, m) {\n    return d3_scale_nice(domain, d3_scale_niceStep(d3_scale_linearTickRange(domain, m)[2]));\n  }\n  function d3_scale_linearTickRange(domain, m) {\n    if (m == null) m = 10;\n    var extent = d3_scaleExtent(domain), span = extent[1] - extent[0], step = Math.pow(10, Math.floor(Math.log(span / m) / Math.LN10)), err = m / span * step;\n    if (err <= .15) step *= 10; else if (err <= .35) step *= 5; else if (err <= .75) step *= 2;\n    extent[0] = Math.ceil(extent[0] / step) * step;\n    extent[1] = Math.floor(extent[1] / step) * step + step * .5;\n    extent[2] = step;\n    return extent;\n  }\n  function d3_scale_linearTicks(domain, m) {\n    return d3.range.apply(d3, d3_scale_linearTickRange(domain, m));\n  }\n  function d3_scale_linearTickFormat(domain, m, format) {\n    var range = d3_scale_linearTickRange(domain, m);\n    if (format) {\n      var match = d3_format_re.exec(format);\n      match.shift();\n      if (match[8] === \"s\") {\n        var prefix = d3.formatPrefix(Math.max(abs(range[0]), abs(range[1])));\n        if (!match[7]) match[7] = \".\" + d3_scale_linearPrecision(prefix.scale(range[2]));\n        match[8] = \"f\";\n        format = d3.format(match.join(\"\"));\n        return function(d) {\n          return format(prefix.scale(d)) + prefix.symbol;\n        };\n      }\n      if (!match[7]) match[7] = \".\" + d3_scale_linearFormatPrecision(match[8], range);\n      format = match.join(\"\");\n    } else {\n      format = \",.\" + d3_scale_linearPrecision(range[2]) + \"f\";\n    }\n    return d3.format(format);\n  }\n  var d3_scale_linearFormatSignificant = {\n    s: 1,\n    g: 1,\n    p: 1,\n    r: 1,\n    e: 1\n  };\n  function d3_scale_linearPrecision(value) {\n    return -Math.floor(Math.log(value) / Math.LN10 + .01);\n  }\n  function d3_scale_linearFormatPrecision(type, range) {\n    var p = d3_scale_linearPrecision(range[2]);\n    return type in d3_scale_linearFormatSignificant ? Math.abs(p - d3_scale_linearPrecision(Math.max(abs(range[0]), abs(range[1])))) + +(type !== \"e\") : p - (type === \"%\") * 2;\n  }\n  d3.scale.log = function() {\n    return d3_scale_log(d3.scale.linear().domain([ 0, 1 ]), 10, true, [ 1, 10 ]);\n  };\n  function d3_scale_log(linear, base, positive, domain) {\n    function log(x) {\n      return (positive ? Math.log(x < 0 ? 0 : x) : -Math.log(x > 0 ? 0 : -x)) / Math.log(base);\n    }\n    function pow(x) {\n      return positive ? Math.pow(base, x) : -Math.pow(base, -x);\n    }\n    function scale(x) {\n      return linear(log(x));\n    }\n    scale.invert = function(x) {\n      return pow(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      positive = x[0] >= 0;\n      linear.domain((domain = x.map(Number)).map(log));\n      return scale;\n    };\n    scale.base = function(_) {\n      if (!arguments.length) return base;\n      base = +_;\n      linear.domain(domain.map(log));\n      return scale;\n    };\n    scale.nice = function() {\n      var niced = d3_scale_nice(domain.map(log), positive ? Math : d3_scale_logNiceNegative);\n      linear.domain(niced);\n      domain = niced.map(pow);\n      return scale;\n    };\n    scale.ticks = function() {\n      var extent = d3_scaleExtent(domain), ticks = [], u = extent[0], v = extent[1], i = Math.floor(log(u)), j = Math.ceil(log(v)), n = base % 1 ? 2 : base;\n      if (isFinite(j - i)) {\n        if (positive) {\n          for (;i < j; i++) for (var k = 1; k < n; k++) ticks.push(pow(i) * k);\n          ticks.push(pow(i));\n        } else {\n          ticks.push(pow(i));\n          for (;i++ < j; ) for (var k = n - 1; k > 0; k--) ticks.push(pow(i) * k);\n        }\n        for (i = 0; ticks[i] < u; i++) {}\n        for (j = ticks.length; ticks[j - 1] > v; j--) {}\n        ticks = ticks.slice(i, j);\n      }\n      return ticks;\n    };\n    scale.tickFormat = function(n, format) {\n      if (!arguments.length) return d3_scale_logFormat;\n      if (arguments.length < 2) format = d3_scale_logFormat; else if (typeof format !== \"function\") format = d3.format(format);\n      var k = Math.max(.1, n / scale.ticks().length), f = positive ? (e = 1e-12, Math.ceil) : (e = -1e-12, \n      Math.floor), e;\n      return function(d) {\n        return d / pow(f(log(d) + e)) <= k ? format(d) : \"\";\n      };\n    };\n    scale.copy = function() {\n      return d3_scale_log(linear.copy(), base, positive, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  var d3_scale_logFormat = d3.format(\".0e\"), d3_scale_logNiceNegative = {\n    floor: function(x) {\n      return -Math.ceil(-x);\n    },\n    ceil: function(x) {\n      return -Math.floor(-x);\n    }\n  };\n  d3.scale.pow = function() {\n    return d3_scale_pow(d3.scale.linear(), 1, [ 0, 1 ]);\n  };\n  function d3_scale_pow(linear, exponent, domain) {\n    var powp = d3_scale_powPow(exponent), powb = d3_scale_powPow(1 / exponent);\n    function scale(x) {\n      return linear(powp(x));\n    }\n    scale.invert = function(x) {\n      return powb(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      linear.domain((domain = x.map(Number)).map(powp));\n      return scale;\n    };\n    scale.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    scale.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    scale.nice = function(m) {\n      return scale.domain(d3_scale_linearNice(domain, m));\n    };\n    scale.exponent = function(x) {\n      if (!arguments.length) return exponent;\n      powp = d3_scale_powPow(exponent = x);\n      powb = d3_scale_powPow(1 / exponent);\n      linear.domain(domain.map(powp));\n      return scale;\n    };\n    scale.copy = function() {\n      return d3_scale_pow(linear.copy(), exponent, domain);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_scale_powPow(e) {\n    return function(x) {\n      return x < 0 ? -Math.pow(-x, e) : Math.pow(x, e);\n    };\n  }\n  d3.scale.sqrt = function() {\n    return d3.scale.pow().exponent(.5);\n  };\n  d3.scale.ordinal = function() {\n    return d3_scale_ordinal([], {\n      t: \"range\",\n      a: [ [] ]\n    });\n  };\n  function d3_scale_ordinal(domain, ranger) {\n    var index, range, rangeBand;\n    function scale(x) {\n      return range[((index.get(x) || (ranger.t === \"range\" ? index.set(x, domain.push(x)) : NaN)) - 1) % range.length];\n    }\n    function steps(start, step) {\n      return d3.range(domain.length).map(function(i) {\n        return start + step * i;\n      });\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = [];\n      index = new d3_Map();\n      var i = -1, n = x.length, xi;\n      while (++i < n) if (!index.has(xi = x[i])) index.set(xi, domain.push(xi));\n      return scale[ranger.t].apply(scale, ranger.a);\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      rangeBand = 0;\n      ranger = {\n        t: \"range\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangePoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = (start + stop) / 2, \n      0) : (stop - start) / (domain.length - 1 + padding);\n      range = steps(start + step * padding / 2, step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangePoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundPoints = function(x, padding) {\n      if (arguments.length < 2) padding = 0;\n      var start = x[0], stop = x[1], step = domain.length < 2 ? (start = stop = Math.round((start + stop) / 2), \n      0) : (stop - start) / (domain.length - 1 + padding) | 0;\n      range = steps(start + Math.round(step * padding / 2 + (stop - start - (domain.length - 1 + padding) * step) / 2), step);\n      rangeBand = 0;\n      ranger = {\n        t: \"rangeRoundPoints\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = (stop - start) / (domain.length - padding + 2 * outerPadding);\n      range = steps(start + step * outerPadding, step);\n      if (reverse) range.reverse();\n      rangeBand = step * (1 - padding);\n      ranger = {\n        t: \"rangeBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeRoundBands = function(x, padding, outerPadding) {\n      if (arguments.length < 2) padding = 0;\n      if (arguments.length < 3) outerPadding = padding;\n      var reverse = x[1] < x[0], start = x[reverse - 0], stop = x[1 - reverse], step = Math.floor((stop - start) / (domain.length - padding + 2 * outerPadding));\n      range = steps(start + Math.round((stop - start - (domain.length - padding) * step) / 2), step);\n      if (reverse) range.reverse();\n      rangeBand = Math.round(step * (1 - padding));\n      ranger = {\n        t: \"rangeRoundBands\",\n        a: arguments\n      };\n      return scale;\n    };\n    scale.rangeBand = function() {\n      return rangeBand;\n    };\n    scale.rangeExtent = function() {\n      return d3_scaleExtent(ranger.a[0]);\n    };\n    scale.copy = function() {\n      return d3_scale_ordinal(domain, ranger);\n    };\n    return scale.domain(domain);\n  }\n  d3.scale.category10 = function() {\n    return d3.scale.ordinal().range(d3_category10);\n  };\n  d3.scale.category20 = function() {\n    return d3.scale.ordinal().range(d3_category20);\n  };\n  d3.scale.category20b = function() {\n    return d3.scale.ordinal().range(d3_category20b);\n  };\n  d3.scale.category20c = function() {\n    return d3.scale.ordinal().range(d3_category20c);\n  };\n  var d3_category10 = [ 2062260, 16744206, 2924588, 14034728, 9725885, 9197131, 14907330, 8355711, 12369186, 1556175 ].map(d3_rgbString);\n  var d3_category20 = [ 2062260, 11454440, 16744206, 16759672, 2924588, 10018698, 14034728, 16750742, 9725885, 12955861, 9197131, 12885140, 14907330, 16234194, 8355711, 13092807, 12369186, 14408589, 1556175, 10410725 ].map(d3_rgbString);\n  var d3_category20b = [ 3750777, 5395619, 7040719, 10264286, 6519097, 9216594, 11915115, 13556636, 9202993, 12426809, 15186514, 15190932, 8666169, 11356490, 14049643, 15177372, 8077683, 10834324, 13528509, 14589654 ].map(d3_rgbString);\n  var d3_category20c = [ 3244733, 7057110, 10406625, 13032431, 15095053, 16616764, 16625259, 16634018, 3253076, 7652470, 10607003, 13101504, 7695281, 10394312, 12369372, 14342891, 6513507, 9868950, 12434877, 14277081 ].map(d3_rgbString);\n  d3.scale.quantile = function() {\n    return d3_scale_quantile([], []);\n  };\n  function d3_scale_quantile(domain, range) {\n    var thresholds;\n    function rescale() {\n      var k = 0, q = range.length;\n      thresholds = [];\n      while (++k < q) thresholds[k - 1] = d3.quantile(domain, k / q);\n      return scale;\n    }\n    function scale(x) {\n      if (!isNaN(x = +x)) return range[d3.bisect(thresholds, x)];\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(d3_number).filter(d3_numeric).sort(d3_ascending);\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.quantiles = function() {\n      return thresholds;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return y < 0 ? [ NaN, NaN ] : [ y > 0 ? thresholds[y - 1] : domain[0], y < thresholds.length ? thresholds[y] : domain[domain.length - 1] ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantile(domain, range);\n    };\n    return rescale();\n  }\n  d3.scale.quantize = function() {\n    return d3_scale_quantize(0, 1, [ 0, 1 ]);\n  };\n  function d3_scale_quantize(x0, x1, range) {\n    var kx, i;\n    function scale(x) {\n      return range[Math.max(0, Math.min(i, Math.floor(kx * (x - x0))))];\n    }\n    function rescale() {\n      kx = range.length / (x1 - x0);\n      i = range.length - 1;\n      return scale;\n    }\n    scale.domain = function(x) {\n      if (!arguments.length) return [ x0, x1 ];\n      x0 = +x[0];\n      x1 = +x[x.length - 1];\n      return rescale();\n    };\n    scale.range = function(x) {\n      if (!arguments.length) return range;\n      range = x;\n      return rescale();\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      y = y < 0 ? NaN : y / kx + x0;\n      return [ y, y + 1 / kx ];\n    };\n    scale.copy = function() {\n      return d3_scale_quantize(x0, x1, range);\n    };\n    return rescale();\n  }\n  d3.scale.threshold = function() {\n    return d3_scale_threshold([ .5 ], [ 0, 1 ]);\n  };\n  function d3_scale_threshold(domain, range) {\n    function scale(x) {\n      if (x <= x) return range[d3.bisect(domain, x)];\n    }\n    scale.domain = function(_) {\n      if (!arguments.length) return domain;\n      domain = _;\n      return scale;\n    };\n    scale.range = function(_) {\n      if (!arguments.length) return range;\n      range = _;\n      return scale;\n    };\n    scale.invertExtent = function(y) {\n      y = range.indexOf(y);\n      return [ domain[y - 1], domain[y] ];\n    };\n    scale.copy = function() {\n      return d3_scale_threshold(domain, range);\n    };\n    return scale;\n  }\n  d3.scale.identity = function() {\n    return d3_scale_identity([ 0, 1 ]);\n  };\n  function d3_scale_identity(domain) {\n    function identity(x) {\n      return +x;\n    }\n    identity.invert = identity;\n    identity.domain = identity.range = function(x) {\n      if (!arguments.length) return domain;\n      domain = x.map(identity);\n      return identity;\n    };\n    identity.ticks = function(m) {\n      return d3_scale_linearTicks(domain, m);\n    };\n    identity.tickFormat = function(m, format) {\n      return d3_scale_linearTickFormat(domain, m, format);\n    };\n    identity.copy = function() {\n      return d3_scale_identity(domain);\n    };\n    return identity;\n  }\n  d3.svg = {};\n  function d3_zero() {\n    return 0;\n  }\n  d3.svg.arc = function() {\n    var innerRadius = d3_svg_arcInnerRadius, outerRadius = d3_svg_arcOuterRadius, cornerRadius = d3_zero, padRadius = d3_svg_arcAuto, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle, padAngle = d3_svg_arcPadAngle;\n    function arc() {\n      var r0 = Math.max(0, +innerRadius.apply(this, arguments)), r1 = Math.max(0, +outerRadius.apply(this, arguments)), a0 = startAngle.apply(this, arguments) - halfπ, a1 = endAngle.apply(this, arguments) - halfπ, da = Math.abs(a1 - a0), cw = a0 > a1 ? 0 : 1;\n      if (r1 < r0) rc = r1, r1 = r0, r0 = rc;\n      if (da >= τε) return circleSegment(r1, cw) + (r0 ? circleSegment(r0, 1 - cw) : \"\") + \"Z\";\n      var rc, cr, rp, ap, p0 = 0, p1 = 0, x0, y0, x1, y1, x2, y2, x3, y3, path = [];\n      if (ap = (+padAngle.apply(this, arguments) || 0) / 2) {\n        rp = padRadius === d3_svg_arcAuto ? Math.sqrt(r0 * r0 + r1 * r1) : +padRadius.apply(this, arguments);\n        if (!cw) p1 *= -1;\n        if (r1) p1 = d3_asin(rp / r1 * Math.sin(ap));\n        if (r0) p0 = d3_asin(rp / r0 * Math.sin(ap));\n      }\n      if (r1) {\n        x0 = r1 * Math.cos(a0 + p1);\n        y0 = r1 * Math.sin(a0 + p1);\n        x1 = r1 * Math.cos(a1 - p1);\n        y1 = r1 * Math.sin(a1 - p1);\n        var l1 = Math.abs(a1 - a0 - 2 * p1) <= π ? 0 : 1;\n        if (p1 && d3_svg_arcSweep(x0, y0, x1, y1) === cw ^ l1) {\n          var h1 = (a0 + a1) / 2;\n          x0 = r1 * Math.cos(h1);\n          y0 = r1 * Math.sin(h1);\n          x1 = y1 = null;\n        }\n      } else {\n        x0 = y0 = 0;\n      }\n      if (r0) {\n        x2 = r0 * Math.cos(a1 - p0);\n        y2 = r0 * Math.sin(a1 - p0);\n        x3 = r0 * Math.cos(a0 + p0);\n        y3 = r0 * Math.sin(a0 + p0);\n        var l0 = Math.abs(a0 - a1 + 2 * p0) <= π ? 0 : 1;\n        if (p0 && d3_svg_arcSweep(x2, y2, x3, y3) === 1 - cw ^ l0) {\n          var h0 = (a0 + a1) / 2;\n          x2 = r0 * Math.cos(h0);\n          y2 = r0 * Math.sin(h0);\n          x3 = y3 = null;\n        }\n      } else {\n        x2 = y2 = 0;\n      }\n      if ((rc = Math.min(Math.abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments))) > .001) {\n        cr = r0 < r1 ^ cw ? 0 : 1;\n        var oc = x3 == null ? [ x2, y2 ] : x1 == null ? [ x0, y0 ] : d3_geom_polygonIntersect([ x0, y0 ], [ x3, y3 ], [ x1, y1 ], [ x2, y2 ]), ax = x0 - oc[0], ay = y0 - oc[1], bx = x1 - oc[0], by = y1 - oc[1], kc = 1 / Math.sin(Math.acos((ax * bx + ay * by) / (Math.sqrt(ax * ax + ay * ay) * Math.sqrt(bx * bx + by * by))) / 2), lc = Math.sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n        if (x1 != null) {\n          var rc1 = Math.min(rc, (r1 - lc) / (kc + 1)), t30 = d3_svg_arcCornerTangents(x3 == null ? [ x2, y2 ] : [ x3, y3 ], [ x0, y0 ], r1, rc1, cw), t12 = d3_svg_arcCornerTangents([ x1, y1 ], [ x2, y2 ], r1, rc1, cw);\n          if (rc === rc1) {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t30[1], \"A\", r1, \",\", r1, \" 0 \", 1 - cw ^ d3_svg_arcSweep(t30[1][0], t30[1][1], t12[1][0], t12[1][1]), \",\", cw, \" \", t12[1], \"A\", rc1, \",\", rc1, \" 0 0,\", cr, \" \", t12[0]);\n          } else {\n            path.push(\"M\", t30[0], \"A\", rc1, \",\", rc1, \" 0 1,\", cr, \" \", t12[0]);\n          }\n        } else {\n          path.push(\"M\", x0, \",\", y0);\n        }\n        if (x3 != null) {\n          var rc0 = Math.min(rc, (r0 - lc) / (kc - 1)), t03 = d3_svg_arcCornerTangents([ x0, y0 ], [ x3, y3 ], r0, -rc0, cw), t21 = d3_svg_arcCornerTangents([ x2, y2 ], x1 == null ? [ x0, y0 ] : [ x1, y1 ], r0, -rc0, cw);\n          if (rc === rc0) {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t21[1], \"A\", r0, \",\", r0, \" 0 \", cw ^ d3_svg_arcSweep(t21[1][0], t21[1][1], t03[1][0], t03[1][1]), \",\", 1 - cw, \" \", t03[1], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          } else {\n            path.push(\"L\", t21[0], \"A\", rc0, \",\", rc0, \" 0 0,\", cr, \" \", t03[0]);\n          }\n        } else {\n          path.push(\"L\", x2, \",\", y2);\n        }\n      } else {\n        path.push(\"M\", x0, \",\", y0);\n        if (x1 != null) path.push(\"A\", r1, \",\", r1, \" 0 \", l1, \",\", cw, \" \", x1, \",\", y1);\n        path.push(\"L\", x2, \",\", y2);\n        if (x3 != null) path.push(\"A\", r0, \",\", r0, \" 0 \", l0, \",\", 1 - cw, \" \", x3, \",\", y3);\n      }\n      path.push(\"Z\");\n      return path.join(\"\");\n    }\n    function circleSegment(r1, cw) {\n      return \"M0,\" + r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + -r1 + \"A\" + r1 + \",\" + r1 + \" 0 1,\" + cw + \" 0,\" + r1;\n    }\n    arc.innerRadius = function(v) {\n      if (!arguments.length) return innerRadius;\n      innerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.outerRadius = function(v) {\n      if (!arguments.length) return outerRadius;\n      outerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.cornerRadius = function(v) {\n      if (!arguments.length) return cornerRadius;\n      cornerRadius = d3_functor(v);\n      return arc;\n    };\n    arc.padRadius = function(v) {\n      if (!arguments.length) return padRadius;\n      padRadius = v == d3_svg_arcAuto ? d3_svg_arcAuto : d3_functor(v);\n      return arc;\n    };\n    arc.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return arc;\n    };\n    arc.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return arc;\n    };\n    arc.padAngle = function(v) {\n      if (!arguments.length) return padAngle;\n      padAngle = d3_functor(v);\n      return arc;\n    };\n    arc.centroid = function() {\n      var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2, a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - halfπ;\n      return [ Math.cos(a) * r, Math.sin(a) * r ];\n    };\n    return arc;\n  };\n  var d3_svg_arcAuto = \"auto\";\n  function d3_svg_arcInnerRadius(d) {\n    return d.innerRadius;\n  }\n  function d3_svg_arcOuterRadius(d) {\n    return d.outerRadius;\n  }\n  function d3_svg_arcStartAngle(d) {\n    return d.startAngle;\n  }\n  function d3_svg_arcEndAngle(d) {\n    return d.endAngle;\n  }\n  function d3_svg_arcPadAngle(d) {\n    return d && d.padAngle;\n  }\n  function d3_svg_arcSweep(x0, y0, x1, y1) {\n    return (x0 - x1) * y0 - (y0 - y1) * x0 > 0 ? 0 : 1;\n  }\n  function d3_svg_arcCornerTangents(p0, p1, r1, rc, cw) {\n    var x01 = p0[0] - p1[0], y01 = p0[1] - p1[1], lo = (cw ? rc : -rc) / Math.sqrt(x01 * x01 + y01 * y01), ox = lo * y01, oy = -lo * x01, x1 = p0[0] + ox, y1 = p0[1] + oy, x2 = p1[0] + ox, y2 = p1[1] + oy, x3 = (x1 + x2) / 2, y3 = (y1 + y2) / 2, dx = x2 - x1, dy = y2 - y1, d2 = dx * dx + dy * dy, r = r1 - rc, D = x1 * y2 - x2 * y1, d = (dy < 0 ? -1 : 1) * Math.sqrt(r * r * d2 - D * D), cx0 = (D * dy - dx * d) / d2, cy0 = (-D * dx - dy * d) / d2, cx1 = (D * dy + dx * d) / d2, cy1 = (-D * dx + dy * d) / d2, dx0 = cx0 - x3, dy0 = cy0 - y3, dx1 = cx1 - x3, dy1 = cy1 - y3;\n    if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n    return [ [ cx0 - ox, cy0 - oy ], [ cx0 * r1 / r, cy0 * r1 / r ] ];\n  }\n  function d3_svg_line(projection) {\n    var x = d3_geom_pointX, y = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, tension = .7;\n    function line(data) {\n      var segments = [], points = [], i = -1, n = data.length, d, fx = d3_functor(x), fy = d3_functor(y);\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points), tension));\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points.push([ +fx.call(this, d, i), +fy.call(this, d, i) ]);\n        } else if (points.length) {\n          segment();\n          points = [];\n        }\n      }\n      if (points.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    line.x = function(_) {\n      if (!arguments.length) return x;\n      x = _;\n      return line;\n    };\n    line.y = function(_) {\n      if (!arguments.length) return y;\n      y = _;\n      return line;\n    };\n    line.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return line;\n    };\n    line.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      return line;\n    };\n    line.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return line;\n    };\n    return line;\n  }\n  d3.svg.line = function() {\n    return d3_svg_line(d3_identity);\n  };\n  var d3_svg_lineInterpolators = d3.map({\n    linear: d3_svg_lineLinear,\n    \"linear-closed\": d3_svg_lineLinearClosed,\n    step: d3_svg_lineStep,\n    \"step-before\": d3_svg_lineStepBefore,\n    \"step-after\": d3_svg_lineStepAfter,\n    basis: d3_svg_lineBasis,\n    \"basis-open\": d3_svg_lineBasisOpen,\n    \"basis-closed\": d3_svg_lineBasisClosed,\n    bundle: d3_svg_lineBundle,\n    cardinal: d3_svg_lineCardinal,\n    \"cardinal-open\": d3_svg_lineCardinalOpen,\n    \"cardinal-closed\": d3_svg_lineCardinalClosed,\n    monotone: d3_svg_lineMonotone\n  });\n  d3_svg_lineInterpolators.forEach(function(key, value) {\n    value.key = key;\n    value.closed = /-closed$/.test(key);\n  });\n  function d3_svg_lineLinear(points) {\n    return points.join(\"L\");\n  }\n  function d3_svg_lineLinearClosed(points) {\n    return d3_svg_lineLinear(points) + \"Z\";\n  }\n  function d3_svg_lineStep(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p[0] + (p = points[i])[0]) / 2, \"V\", p[1]);\n    if (n > 1) path.push(\"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepBefore(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"V\", (p = points[i])[1], \"H\", p[0]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineStepAfter(points) {\n    var i = 0, n = points.length, p = points[0], path = [ p[0], \",\", p[1] ];\n    while (++i < n) path.push(\"H\", (p = points[i])[0], \"V\", p[1]);\n    return path.join(\"\");\n  }\n  function d3_svg_lineCardinalOpen(points, tension) {\n    return points.length < 4 ? d3_svg_lineLinear(points) : points[1] + d3_svg_lineHermite(points.slice(1, -1), d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineCardinalClosed(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite((points.push(points[0]), \n    points), d3_svg_lineCardinalTangents([ points[points.length - 2] ].concat(points, [ points[1] ]), tension));\n  }\n  function d3_svg_lineCardinal(points, tension) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineCardinalTangents(points, tension));\n  }\n  function d3_svg_lineHermite(points, tangents) {\n    if (tangents.length < 1 || points.length != tangents.length && points.length != tangents.length + 2) {\n      return d3_svg_lineLinear(points);\n    }\n    var quad = points.length != tangents.length, path = \"\", p0 = points[0], p = points[1], t0 = tangents[0], t = t0, pi = 1;\n    if (quad) {\n      path += \"Q\" + (p[0] - t0[0] * 2 / 3) + \",\" + (p[1] - t0[1] * 2 / 3) + \",\" + p[0] + \",\" + p[1];\n      p0 = points[1];\n      pi = 2;\n    }\n    if (tangents.length > 1) {\n      t = tangents[1];\n      p = points[pi];\n      pi++;\n      path += \"C\" + (p0[0] + t0[0]) + \",\" + (p0[1] + t0[1]) + \",\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      for (var i = 2; i < tangents.length; i++, pi++) {\n        p = points[pi];\n        t = tangents[i];\n        path += \"S\" + (p[0] - t[0]) + \",\" + (p[1] - t[1]) + \",\" + p[0] + \",\" + p[1];\n      }\n    }\n    if (quad) {\n      var lp = points[pi];\n      path += \"Q\" + (p[0] + t[0] * 2 / 3) + \",\" + (p[1] + t[1] * 2 / 3) + \",\" + lp[0] + \",\" + lp[1];\n    }\n    return path;\n  }\n  function d3_svg_lineCardinalTangents(points, tension) {\n    var tangents = [], a = (1 - tension) / 2, p0, p1 = points[0], p2 = points[1], i = 1, n = points.length;\n    while (++i < n) {\n      p0 = p1;\n      p1 = p2;\n      p2 = points[i];\n      tangents.push([ a * (p2[0] - p0[0]), a * (p2[1] - p0[1]) ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineBasis(points) {\n    if (points.length < 3) return d3_svg_lineLinear(points);\n    var i = 1, n = points.length, pi = points[0], x0 = pi[0], y0 = pi[1], px = [ x0, x0, x0, (pi = points[1])[0] ], py = [ y0, y0, y0, pi[1] ], path = [ x0, \",\", y0, \"L\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    points.push(points[n - 1]);\n    while (++i <= n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    points.pop();\n    path.push(\"L\", pi);\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisOpen(points) {\n    if (points.length < 4) return d3_svg_lineLinear(points);\n    var path = [], i = -1, n = points.length, pi, px = [ 0 ], py = [ 0 ];\n    while (++i < 3) {\n      pi = points[i];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path.push(d3_svg_lineDot4(d3_svg_lineBasisBezier3, px) + \",\" + d3_svg_lineDot4(d3_svg_lineBasisBezier3, py));\n    --i;\n    while (++i < n) {\n      pi = points[i];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBasisClosed(points) {\n    var path, i = -1, n = points.length, m = n + 4, pi, px = [], py = [];\n    while (++i < 4) {\n      pi = points[i % n];\n      px.push(pi[0]);\n      py.push(pi[1]);\n    }\n    path = [ d3_svg_lineDot4(d3_svg_lineBasisBezier3, px), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, py) ];\n    --i;\n    while (++i < m) {\n      pi = points[i % n];\n      px.shift();\n      px.push(pi[0]);\n      py.shift();\n      py.push(pi[1]);\n      d3_svg_lineBasisBezier(path, px, py);\n    }\n    return path.join(\"\");\n  }\n  function d3_svg_lineBundle(points, tension) {\n    var n = points.length - 1;\n    if (n) {\n      var x0 = points[0][0], y0 = points[0][1], dx = points[n][0] - x0, dy = points[n][1] - y0, i = -1, p, t;\n      while (++i <= n) {\n        p = points[i];\n        t = i / n;\n        p[0] = tension * p[0] + (1 - tension) * (x0 + t * dx);\n        p[1] = tension * p[1] + (1 - tension) * (y0 + t * dy);\n      }\n    }\n    return d3_svg_lineBasis(points);\n  }\n  function d3_svg_lineDot4(a, b) {\n    return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\n  }\n  var d3_svg_lineBasisBezier1 = [ 0, 2 / 3, 1 / 3, 0 ], d3_svg_lineBasisBezier2 = [ 0, 1 / 3, 2 / 3, 0 ], d3_svg_lineBasisBezier3 = [ 0, 1 / 6, 2 / 3, 1 / 6 ];\n  function d3_svg_lineBasisBezier(path, x, y) {\n    path.push(\"C\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier1, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier2, y), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, x), \",\", d3_svg_lineDot4(d3_svg_lineBasisBezier3, y));\n  }\n  function d3_svg_lineSlope(p0, p1) {\n    return (p1[1] - p0[1]) / (p1[0] - p0[0]);\n  }\n  function d3_svg_lineFiniteDifferences(points) {\n    var i = 0, j = points.length - 1, m = [], p0 = points[0], p1 = points[1], d = m[0] = d3_svg_lineSlope(p0, p1);\n    while (++i < j) {\n      m[i] = (d + (d = d3_svg_lineSlope(p0 = p1, p1 = points[i + 1]))) / 2;\n    }\n    m[i] = d;\n    return m;\n  }\n  function d3_svg_lineMonotoneTangents(points) {\n    var tangents = [], d, a, b, s, m = d3_svg_lineFiniteDifferences(points), i = -1, j = points.length - 1;\n    while (++i < j) {\n      d = d3_svg_lineSlope(points[i], points[i + 1]);\n      if (abs(d) < ε) {\n        m[i] = m[i + 1] = 0;\n      } else {\n        a = m[i] / d;\n        b = m[i + 1] / d;\n        s = a * a + b * b;\n        if (s > 9) {\n          s = d * 3 / Math.sqrt(s);\n          m[i] = s * a;\n          m[i + 1] = s * b;\n        }\n      }\n    }\n    i = -1;\n    while (++i <= j) {\n      s = (points[Math.min(j, i + 1)][0] - points[Math.max(0, i - 1)][0]) / (6 * (1 + m[i] * m[i]));\n      tangents.push([ s || 0, m[i] * s || 0 ]);\n    }\n    return tangents;\n  }\n  function d3_svg_lineMonotone(points) {\n    return points.length < 3 ? d3_svg_lineLinear(points) : points[0] + d3_svg_lineHermite(points, d3_svg_lineMonotoneTangents(points));\n  }\n  d3.svg.line.radial = function() {\n    var line = d3_svg_line(d3_svg_lineRadial);\n    line.radius = line.x, delete line.x;\n    line.angle = line.y, delete line.y;\n    return line;\n  };\n  function d3_svg_lineRadial(points) {\n    var point, i = -1, n = points.length, r, a;\n    while (++i < n) {\n      point = points[i];\n      r = point[0];\n      a = point[1] - halfπ;\n      point[0] = r * Math.cos(a);\n      point[1] = r * Math.sin(a);\n    }\n    return points;\n  }\n  function d3_svg_area(projection) {\n    var x0 = d3_geom_pointX, x1 = d3_geom_pointX, y0 = 0, y1 = d3_geom_pointY, defined = d3_true, interpolate = d3_svg_lineLinear, interpolateKey = interpolate.key, interpolateReverse = interpolate, L = \"L\", tension = .7;\n    function area(data) {\n      var segments = [], points0 = [], points1 = [], i = -1, n = data.length, d, fx0 = d3_functor(x0), fy0 = d3_functor(y0), fx1 = x0 === x1 ? function() {\n        return x;\n      } : d3_functor(x1), fy1 = y0 === y1 ? function() {\n        return y;\n      } : d3_functor(y1), x, y;\n      function segment() {\n        segments.push(\"M\", interpolate(projection(points1), tension), L, interpolateReverse(projection(points0.reverse()), tension), \"Z\");\n      }\n      while (++i < n) {\n        if (defined.call(this, d = data[i], i)) {\n          points0.push([ x = +fx0.call(this, d, i), y = +fy0.call(this, d, i) ]);\n          points1.push([ +fx1.call(this, d, i), +fy1.call(this, d, i) ]);\n        } else if (points0.length) {\n          segment();\n          points0 = [];\n          points1 = [];\n        }\n      }\n      if (points0.length) segment();\n      return segments.length ? segments.join(\"\") : null;\n    }\n    area.x = function(_) {\n      if (!arguments.length) return x1;\n      x0 = x1 = _;\n      return area;\n    };\n    area.x0 = function(_) {\n      if (!arguments.length) return x0;\n      x0 = _;\n      return area;\n    };\n    area.x1 = function(_) {\n      if (!arguments.length) return x1;\n      x1 = _;\n      return area;\n    };\n    area.y = function(_) {\n      if (!arguments.length) return y1;\n      y0 = y1 = _;\n      return area;\n    };\n    area.y0 = function(_) {\n      if (!arguments.length) return y0;\n      y0 = _;\n      return area;\n    };\n    area.y1 = function(_) {\n      if (!arguments.length) return y1;\n      y1 = _;\n      return area;\n    };\n    area.defined = function(_) {\n      if (!arguments.length) return defined;\n      defined = _;\n      return area;\n    };\n    area.interpolate = function(_) {\n      if (!arguments.length) return interpolateKey;\n      if (typeof _ === \"function\") interpolateKey = interpolate = _; else interpolateKey = (interpolate = d3_svg_lineInterpolators.get(_) || d3_svg_lineLinear).key;\n      interpolateReverse = interpolate.reverse || interpolate;\n      L = interpolate.closed ? \"M\" : \"L\";\n      return area;\n    };\n    area.tension = function(_) {\n      if (!arguments.length) return tension;\n      tension = _;\n      return area;\n    };\n    return area;\n  }\n  d3_svg_lineStepBefore.reverse = d3_svg_lineStepAfter;\n  d3_svg_lineStepAfter.reverse = d3_svg_lineStepBefore;\n  d3.svg.area = function() {\n    return d3_svg_area(d3_identity);\n  };\n  d3.svg.area.radial = function() {\n    var area = d3_svg_area(d3_svg_lineRadial);\n    area.radius = area.x, delete area.x;\n    area.innerRadius = area.x0, delete area.x0;\n    area.outerRadius = area.x1, delete area.x1;\n    area.angle = area.y, delete area.y;\n    area.startAngle = area.y0, delete area.y0;\n    area.endAngle = area.y1, delete area.y1;\n    return area;\n  };\n  d3.svg.chord = function() {\n    var source = d3_source, target = d3_target, radius = d3_svg_chordRadius, startAngle = d3_svg_arcStartAngle, endAngle = d3_svg_arcEndAngle;\n    function chord(d, i) {\n      var s = subgroup(this, source, d, i), t = subgroup(this, target, d, i);\n      return \"M\" + s.p0 + arc(s.r, s.p1, s.a1 - s.a0) + (equals(s, t) ? curve(s.r, s.p1, s.r, s.p0) : curve(s.r, s.p1, t.r, t.p0) + arc(t.r, t.p1, t.a1 - t.a0) + curve(t.r, t.p1, s.r, s.p0)) + \"Z\";\n    }\n    function subgroup(self, f, d, i) {\n      var subgroup = f.call(self, d, i), r = radius.call(self, subgroup, i), a0 = startAngle.call(self, subgroup, i) - halfπ, a1 = endAngle.call(self, subgroup, i) - halfπ;\n      return {\n        r: r,\n        a0: a0,\n        a1: a1,\n        p0: [ r * Math.cos(a0), r * Math.sin(a0) ],\n        p1: [ r * Math.cos(a1), r * Math.sin(a1) ]\n      };\n    }\n    function equals(a, b) {\n      return a.a0 == b.a0 && a.a1 == b.a1;\n    }\n    function arc(r, p, a) {\n      return \"A\" + r + \",\" + r + \" 0 \" + +(a > π) + \",1 \" + p;\n    }\n    function curve(r0, p0, r1, p1) {\n      return \"Q 0,0 \" + p1;\n    }\n    chord.radius = function(v) {\n      if (!arguments.length) return radius;\n      radius = d3_functor(v);\n      return chord;\n    };\n    chord.source = function(v) {\n      if (!arguments.length) return source;\n      source = d3_functor(v);\n      return chord;\n    };\n    chord.target = function(v) {\n      if (!arguments.length) return target;\n      target = d3_functor(v);\n      return chord;\n    };\n    chord.startAngle = function(v) {\n      if (!arguments.length) return startAngle;\n      startAngle = d3_functor(v);\n      return chord;\n    };\n    chord.endAngle = function(v) {\n      if (!arguments.length) return endAngle;\n      endAngle = d3_functor(v);\n      return chord;\n    };\n    return chord;\n  };\n  function d3_svg_chordRadius(d) {\n    return d.radius;\n  }\n  d3.svg.diagonal = function() {\n    var source = d3_source, target = d3_target, projection = d3_svg_diagonalProjection;\n    function diagonal(d, i) {\n      var p0 = source.call(this, d, i), p3 = target.call(this, d, i), m = (p0.y + p3.y) / 2, p = [ p0, {\n        x: p0.x,\n        y: m\n      }, {\n        x: p3.x,\n        y: m\n      }, p3 ];\n      p = p.map(projection);\n      return \"M\" + p[0] + \"C\" + p[1] + \" \" + p[2] + \" \" + p[3];\n    }\n    diagonal.source = function(x) {\n      if (!arguments.length) return source;\n      source = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.target = function(x) {\n      if (!arguments.length) return target;\n      target = d3_functor(x);\n      return diagonal;\n    };\n    diagonal.projection = function(x) {\n      if (!arguments.length) return projection;\n      projection = x;\n      return diagonal;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalProjection(d) {\n    return [ d.x, d.y ];\n  }\n  d3.svg.diagonal.radial = function() {\n    var diagonal = d3.svg.diagonal(), projection = d3_svg_diagonalProjection, projection_ = diagonal.projection;\n    diagonal.projection = function(x) {\n      return arguments.length ? projection_(d3_svg_diagonalRadialProjection(projection = x)) : projection;\n    };\n    return diagonal;\n  };\n  function d3_svg_diagonalRadialProjection(projection) {\n    return function() {\n      var d = projection.apply(this, arguments), r = d[0], a = d[1] - halfπ;\n      return [ r * Math.cos(a), r * Math.sin(a) ];\n    };\n  }\n  d3.svg.symbol = function() {\n    var type = d3_svg_symbolType, size = d3_svg_symbolSize;\n    function symbol(d, i) {\n      return (d3_svg_symbols.get(type.call(this, d, i)) || d3_svg_symbolCircle)(size.call(this, d, i));\n    }\n    symbol.type = function(x) {\n      if (!arguments.length) return type;\n      type = d3_functor(x);\n      return symbol;\n    };\n    symbol.size = function(x) {\n      if (!arguments.length) return size;\n      size = d3_functor(x);\n      return symbol;\n    };\n    return symbol;\n  };\n  function d3_svg_symbolSize() {\n    return 64;\n  }\n  function d3_svg_symbolType() {\n    return \"circle\";\n  }\n  function d3_svg_symbolCircle(size) {\n    var r = Math.sqrt(size / π);\n    return \"M0,\" + r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + -r + \"A\" + r + \",\" + r + \" 0 1,1 0,\" + r + \"Z\";\n  }\n  var d3_svg_symbols = d3.map({\n    circle: d3_svg_symbolCircle,\n    cross: function(size) {\n      var r = Math.sqrt(size / 5) / 2;\n      return \"M\" + -3 * r + \",\" + -r + \"H\" + -r + \"V\" + -3 * r + \"H\" + r + \"V\" + -r + \"H\" + 3 * r + \"V\" + r + \"H\" + r + \"V\" + 3 * r + \"H\" + -r + \"V\" + r + \"H\" + -3 * r + \"Z\";\n    },\n    diamond: function(size) {\n      var ry = Math.sqrt(size / (2 * d3_svg_symbolTan30)), rx = ry * d3_svg_symbolTan30;\n      return \"M0,\" + -ry + \"L\" + rx + \",0\" + \" 0,\" + ry + \" \" + -rx + \",0\" + \"Z\";\n    },\n    square: function(size) {\n      var r = Math.sqrt(size) / 2;\n      return \"M\" + -r + \",\" + -r + \"L\" + r + \",\" + -r + \" \" + r + \",\" + r + \" \" + -r + \",\" + r + \"Z\";\n    },\n    \"triangle-down\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + ry + \"L\" + rx + \",\" + -ry + \" \" + -rx + \",\" + -ry + \"Z\";\n    },\n    \"triangle-up\": function(size) {\n      var rx = Math.sqrt(size / d3_svg_symbolSqrt3), ry = rx * d3_svg_symbolSqrt3 / 2;\n      return \"M0,\" + -ry + \"L\" + rx + \",\" + ry + \" \" + -rx + \",\" + ry + \"Z\";\n    }\n  });\n  d3.svg.symbolTypes = d3_svg_symbols.keys();\n  var d3_svg_symbolSqrt3 = Math.sqrt(3), d3_svg_symbolTan30 = Math.tan(30 * d3_radians);\n  d3_selectionPrototype.transition = function(name) {\n    var id = d3_transitionInheritId || ++d3_transitionId, ns = d3_transitionNamespace(name), subgroups = [], subgroup, node, transition = d3_transitionInherit || {\n      time: Date.now(),\n      ease: d3_ease_cubicInOut,\n      delay: 0,\n      duration: 250\n    };\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) d3_transitionNode(node, i, ns, id, transition);\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_selectionPrototype.interrupt = function(name) {\n    return this.each(name == null ? d3_selection_interrupt : d3_selection_interruptNS(d3_transitionNamespace(name)));\n  };\n  var d3_selection_interrupt = d3_selection_interruptNS(d3_transitionNamespace());\n  function d3_selection_interruptNS(ns) {\n    return function() {\n      var lock, active;\n      if ((lock = this[ns]) && (active = lock[lock.active])) {\n        if (--lock.count) delete lock[lock.active]; else delete this[ns];\n        lock.active += .5;\n        active.event && active.event.interrupt.call(this, this.__data__, active.index);\n      }\n    };\n  }\n  function d3_transition(groups, ns, id) {\n    d3_subclass(groups, d3_transitionPrototype);\n    groups.namespace = ns;\n    groups.id = id;\n    return groups;\n  }\n  var d3_transitionPrototype = [], d3_transitionId = 0, d3_transitionInheritId, d3_transitionInherit;\n  d3_transitionPrototype.call = d3_selectionPrototype.call;\n  d3_transitionPrototype.empty = d3_selectionPrototype.empty;\n  d3_transitionPrototype.node = d3_selectionPrototype.node;\n  d3_transitionPrototype.size = d3_selectionPrototype.size;\n  d3.transition = function(selection, name) {\n    return selection && selection.transition ? d3_transitionInheritId ? selection.transition(name) : selection : d3.selection().transition(selection);\n  };\n  d3.transition.prototype = d3_transitionPrototype;\n  d3_transitionPrototype.select = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnode, node;\n    selector = d3_selection_selector(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if ((node = group[i]) && (subnode = selector.call(node, node.__data__, i, j))) {\n          if (\"__data__\" in node) subnode.__data__ = node.__data__;\n          d3_transitionNode(subnode, i, ns, id, node[ns][id]);\n          subgroup.push(subnode);\n        } else {\n          subgroup.push(null);\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.selectAll = function(selector) {\n    var id = this.id, ns = this.namespace, subgroups = [], subgroup, subnodes, node, subnode, transition;\n    selector = d3_selection_selectorAll(selector);\n    for (var j = -1, m = this.length; ++j < m; ) {\n      for (var group = this[j], i = -1, n = group.length; ++i < n; ) {\n        if (node = group[i]) {\n          transition = node[ns][id];\n          subnodes = selector.call(node, node.__data__, i, j);\n          subgroups.push(subgroup = []);\n          for (var k = -1, o = subnodes.length; ++k < o; ) {\n            if (subnode = subnodes[k]) d3_transitionNode(subnode, k, ns, id, transition);\n            subgroup.push(subnode);\n          }\n        }\n      }\n    }\n    return d3_transition(subgroups, ns, id);\n  };\n  d3_transitionPrototype.filter = function(filter) {\n    var subgroups = [], subgroup, group, node;\n    if (typeof filter !== \"function\") filter = d3_selection_filter(filter);\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if ((node = group[i]) && filter.call(node, node.__data__, i, j)) {\n          subgroup.push(node);\n        }\n      }\n    }\n    return d3_transition(subgroups, this.namespace, this.id);\n  };\n  d3_transitionPrototype.tween = function(name, tween) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) return this.node()[ns][id].tween.get(name);\n    return d3_selection_each(this, tween == null ? function(node) {\n      node[ns][id].tween.remove(name);\n    } : function(node) {\n      node[ns][id].tween.set(name, tween);\n    });\n  };\n  function d3_transition_tween(groups, name, value, tween) {\n    var id = groups.id, ns = groups.namespace;\n    return d3_selection_each(groups, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].tween.set(name, tween(value.call(node, node.__data__, i, j)));\n    } : (value = tween(value), function(node) {\n      node[ns][id].tween.set(name, value);\n    }));\n  }\n  d3_transitionPrototype.attr = function(nameNS, value) {\n    if (arguments.length < 2) {\n      for (value in nameNS) this.attr(value, nameNS[value]);\n      return this;\n    }\n    var interpolate = nameNS == \"transform\" ? d3_interpolateTransform : d3_interpolate, name = d3.ns.qualify(nameNS);\n    function attrNull() {\n      this.removeAttribute(name);\n    }\n    function attrNullNS() {\n      this.removeAttributeNS(name.space, name.local);\n    }\n    function attrTween(b) {\n      return b == null ? attrNull : (b += \"\", function() {\n        var a = this.getAttribute(name), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttribute(name, i(t));\n        });\n      });\n    }\n    function attrTweenNS(b) {\n      return b == null ? attrNullNS : (b += \"\", function() {\n        var a = this.getAttributeNS(name.space, name.local), i;\n        return a !== b && (i = interpolate(a, b), function(t) {\n          this.setAttributeNS(name.space, name.local, i(t));\n        });\n      });\n    }\n    return d3_transition_tween(this, \"attr.\" + nameNS, value, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.attrTween = function(nameNS, tween) {\n    var name = d3.ns.qualify(nameNS);\n    function attrTween(d, i) {\n      var f = tween.call(this, d, i, this.getAttribute(name));\n      return f && function(t) {\n        this.setAttribute(name, f(t));\n      };\n    }\n    function attrTweenNS(d, i) {\n      var f = tween.call(this, d, i, this.getAttributeNS(name.space, name.local));\n      return f && function(t) {\n        this.setAttributeNS(name.space, name.local, f(t));\n      };\n    }\n    return this.tween(\"attr.\" + nameNS, name.local ? attrTweenNS : attrTween);\n  };\n  d3_transitionPrototype.style = function(name, value, priority) {\n    var n = arguments.length;\n    if (n < 3) {\n      if (typeof name !== \"string\") {\n        if (n < 2) value = \"\";\n        for (priority in name) this.style(priority, name[priority], value);\n        return this;\n      }\n      priority = \"\";\n    }\n    function styleNull() {\n      this.style.removeProperty(name);\n    }\n    function styleString(b) {\n      return b == null ? styleNull : (b += \"\", function() {\n        var a = d3_window(this).getComputedStyle(this, null).getPropertyValue(name), i;\n        return a !== b && (i = d3_interpolate(a, b), function(t) {\n          this.style.setProperty(name, i(t), priority);\n        });\n      });\n    }\n    return d3_transition_tween(this, \"style.\" + name, value, styleString);\n  };\n  d3_transitionPrototype.styleTween = function(name, tween, priority) {\n    if (arguments.length < 3) priority = \"\";\n    function styleTween(d, i) {\n      var f = tween.call(this, d, i, d3_window(this).getComputedStyle(this, null).getPropertyValue(name));\n      return f && function(t) {\n        this.style.setProperty(name, f(t), priority);\n      };\n    }\n    return this.tween(\"style.\" + name, styleTween);\n  };\n  d3_transitionPrototype.text = function(value) {\n    return d3_transition_tween(this, \"text\", value, d3_transition_text);\n  };\n  function d3_transition_text(b) {\n    if (b == null) b = \"\";\n    return function() {\n      this.textContent = b;\n    };\n  }\n  d3_transitionPrototype.remove = function() {\n    var ns = this.namespace;\n    return this.each(\"end.transition\", function() {\n      var p;\n      if (this[ns].count < 2 && (p = this.parentNode)) p.removeChild(this);\n    });\n  };\n  d3_transitionPrototype.ease = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].ease;\n    if (typeof value !== \"function\") value = d3.ease.apply(d3, arguments);\n    return d3_selection_each(this, function(node) {\n      node[ns][id].ease = value;\n    });\n  };\n  d3_transitionPrototype.delay = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].delay;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].delay = +value.call(node, node.__data__, i, j);\n    } : (value = +value, function(node) {\n      node[ns][id].delay = value;\n    }));\n  };\n  d3_transitionPrototype.duration = function(value) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 1) return this.node()[ns][id].duration;\n    return d3_selection_each(this, typeof value === \"function\" ? function(node, i, j) {\n      node[ns][id].duration = Math.max(1, value.call(node, node.__data__, i, j));\n    } : (value = Math.max(1, value), function(node) {\n      node[ns][id].duration = value;\n    }));\n  };\n  d3_transitionPrototype.each = function(type, listener) {\n    var id = this.id, ns = this.namespace;\n    if (arguments.length < 2) {\n      var inherit = d3_transitionInherit, inheritId = d3_transitionInheritId;\n      try {\n        d3_transitionInheritId = id;\n        d3_selection_each(this, function(node, i, j) {\n          d3_transitionInherit = node[ns][id];\n          type.call(node, node.__data__, i, j);\n        });\n      } finally {\n        d3_transitionInherit = inherit;\n        d3_transitionInheritId = inheritId;\n      }\n    } else {\n      d3_selection_each(this, function(node) {\n        var transition = node[ns][id];\n        (transition.event || (transition.event = d3.dispatch(\"start\", \"end\", \"interrupt\"))).on(type, listener);\n      });\n    }\n    return this;\n  };\n  d3_transitionPrototype.transition = function() {\n    var id0 = this.id, id1 = ++d3_transitionId, ns = this.namespace, subgroups = [], subgroup, group, node, transition;\n    for (var j = 0, m = this.length; j < m; j++) {\n      subgroups.push(subgroup = []);\n      for (var group = this[j], i = 0, n = group.length; i < n; i++) {\n        if (node = group[i]) {\n          transition = node[ns][id0];\n          d3_transitionNode(node, i, ns, id1, {\n            time: transition.time,\n            ease: transition.ease,\n            delay: transition.delay + transition.duration,\n            duration: transition.duration\n          });\n        }\n        subgroup.push(node);\n      }\n    }\n    return d3_transition(subgroups, ns, id1);\n  };\n  function d3_transitionNamespace(name) {\n    return name == null ? \"__transition__\" : \"__transition_\" + name + \"__\";\n  }\n  function d3_transitionNode(node, i, ns, id, inherit) {\n    var lock = node[ns] || (node[ns] = {\n      active: 0,\n      count: 0\n    }), transition = lock[id];\n    if (!transition) {\n      var time = inherit.time;\n      transition = lock[id] = {\n        tween: new d3_Map(),\n        time: time,\n        delay: inherit.delay,\n        duration: inherit.duration,\n        ease: inherit.ease,\n        index: i\n      };\n      inherit = null;\n      ++lock.count;\n      d3.timer(function(elapsed) {\n        var delay = transition.delay, duration, ease, timer = d3_timer_active, tweened = [];\n        timer.t = delay + time;\n        if (delay <= elapsed) return start(elapsed - delay);\n        timer.c = start;\n        function start(elapsed) {\n          if (lock.active > id) return stop();\n          var active = lock[lock.active];\n          if (active) {\n            --lock.count;\n            delete lock[lock.active];\n            active.event && active.event.interrupt.call(node, node.__data__, active.index);\n          }\n          lock.active = id;\n          transition.event && transition.event.start.call(node, node.__data__, i);\n          transition.tween.forEach(function(key, value) {\n            if (value = value.call(node, node.__data__, i)) {\n              tweened.push(value);\n            }\n          });\n          ease = transition.ease;\n          duration = transition.duration;\n          d3.timer(function() {\n            timer.c = tick(elapsed || 1) ? d3_true : tick;\n            return 1;\n          }, 0, time);\n        }\n        function tick(elapsed) {\n          if (lock.active !== id) return 1;\n          var t = elapsed / duration, e = ease(t), n = tweened.length;\n          while (n > 0) {\n            tweened[--n].call(node, e);\n          }\n          if (t >= 1) {\n            transition.event && transition.event.end.call(node, node.__data__, i);\n            return stop();\n          }\n        }\n        function stop() {\n          if (--lock.count) delete lock[id]; else delete node[ns];\n          return 1;\n        }\n      }, 0, time);\n    }\n  }\n  d3.svg.axis = function() {\n    var scale = d3.scale.linear(), orient = d3_svg_axisDefaultOrient, innerTickSize = 6, outerTickSize = 6, tickPadding = 3, tickArguments_ = [ 10 ], tickValues = null, tickFormat_;\n    function axis(g) {\n      g.each(function() {\n        var g = d3.select(this);\n        var scale0 = this.__chart__ || scale, scale1 = this.__chart__ = scale.copy();\n        var ticks = tickValues == null ? scale1.ticks ? scale1.ticks.apply(scale1, tickArguments_) : scale1.domain() : tickValues, tickFormat = tickFormat_ == null ? scale1.tickFormat ? scale1.tickFormat.apply(scale1, tickArguments_) : d3_identity : tickFormat_, tick = g.selectAll(\".tick\").data(ticks, scale1), tickEnter = tick.enter().insert(\"g\", \".domain\").attr(\"class\", \"tick\").style(\"opacity\", ε), tickExit = d3.transition(tick.exit()).style(\"opacity\", ε).remove(), tickUpdate = d3.transition(tick.order()).style(\"opacity\", 1), tickSpacing = Math.max(innerTickSize, 0) + tickPadding, tickTransform;\n        var range = d3_scaleRange(scale1), path = g.selectAll(\".domain\").data([ 0 ]), pathUpdate = (path.enter().append(\"path\").attr(\"class\", \"domain\"), \n        d3.transition(path));\n        tickEnter.append(\"line\");\n        tickEnter.append(\"text\");\n        var lineEnter = tickEnter.select(\"line\"), lineUpdate = tickUpdate.select(\"line\"), text = tick.select(\"text\").text(tickFormat), textEnter = tickEnter.select(\"text\"), textUpdate = tickUpdate.select(\"text\"), sign = orient === \"top\" || orient === \"left\" ? -1 : 1, x1, x2, y1, y2;\n        if (orient === \"bottom\" || orient === \"top\") {\n          tickTransform = d3_svg_axisX, x1 = \"x\", y1 = \"y\", x2 = \"x2\", y2 = \"y2\";\n          text.attr(\"dy\", sign < 0 ? \"0em\" : \".71em\").style(\"text-anchor\", \"middle\");\n          pathUpdate.attr(\"d\", \"M\" + range[0] + \",\" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize);\n        } else {\n          tickTransform = d3_svg_axisY, x1 = \"y\", y1 = \"x\", x2 = \"y2\", y2 = \"x2\";\n          text.attr(\"dy\", \".32em\").style(\"text-anchor\", sign < 0 ? \"end\" : \"start\");\n          pathUpdate.attr(\"d\", \"M\" + sign * outerTickSize + \",\" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize);\n        }\n        lineEnter.attr(y2, sign * innerTickSize);\n        textEnter.attr(y1, sign * tickSpacing);\n        lineUpdate.attr(x2, 0).attr(y2, sign * innerTickSize);\n        textUpdate.attr(x1, 0).attr(y1, sign * tickSpacing);\n        if (scale1.rangeBand) {\n          var x = scale1, dx = x.rangeBand() / 2;\n          scale0 = scale1 = function(d) {\n            return x(d) + dx;\n          };\n        } else if (scale0.rangeBand) {\n          scale0 = scale1;\n        } else {\n          tickExit.call(tickTransform, scale1, scale0);\n        }\n        tickEnter.call(tickTransform, scale0, scale1);\n        tickUpdate.call(tickTransform, scale1, scale1);\n      });\n    }\n    axis.scale = function(x) {\n      if (!arguments.length) return scale;\n      scale = x;\n      return axis;\n    };\n    axis.orient = function(x) {\n      if (!arguments.length) return orient;\n      orient = x in d3_svg_axisOrients ? x + \"\" : d3_svg_axisDefaultOrient;\n      return axis;\n    };\n    axis.ticks = function() {\n      if (!arguments.length) return tickArguments_;\n      tickArguments_ = arguments;\n      return axis;\n    };\n    axis.tickValues = function(x) {\n      if (!arguments.length) return tickValues;\n      tickValues = x;\n      return axis;\n    };\n    axis.tickFormat = function(x) {\n      if (!arguments.length) return tickFormat_;\n      tickFormat_ = x;\n      return axis;\n    };\n    axis.tickSize = function(x) {\n      var n = arguments.length;\n      if (!n) return innerTickSize;\n      innerTickSize = +x;\n      outerTickSize = +arguments[n - 1];\n      return axis;\n    };\n    axis.innerTickSize = function(x) {\n      if (!arguments.length) return innerTickSize;\n      innerTickSize = +x;\n      return axis;\n    };\n    axis.outerTickSize = function(x) {\n      if (!arguments.length) return outerTickSize;\n      outerTickSize = +x;\n      return axis;\n    };\n    axis.tickPadding = function(x) {\n      if (!arguments.length) return tickPadding;\n      tickPadding = +x;\n      return axis;\n    };\n    axis.tickSubdivide = function() {\n      return arguments.length && axis;\n    };\n    return axis;\n  };\n  var d3_svg_axisDefaultOrient = \"bottom\", d3_svg_axisOrients = {\n    top: 1,\n    right: 1,\n    bottom: 1,\n    left: 1\n  };\n  function d3_svg_axisX(selection, x0, x1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = x0(d);\n      return \"translate(\" + (isFinite(v0) ? v0 : x1(d)) + \",0)\";\n    });\n  }\n  function d3_svg_axisY(selection, y0, y1) {\n    selection.attr(\"transform\", function(d) {\n      var v0 = y0(d);\n      return \"translate(0,\" + (isFinite(v0) ? v0 : y1(d)) + \")\";\n    });\n  }\n  d3.svg.brush = function() {\n    var event = d3_eventDispatch(brush, \"brushstart\", \"brush\", \"brushend\"), x = null, y = null, xExtent = [ 0, 0 ], yExtent = [ 0, 0 ], xExtentDomain, yExtentDomain, xClamp = true, yClamp = true, resizes = d3_svg_brushResizes[0];\n    function brush(g) {\n      g.each(function() {\n        var g = d3.select(this).style(\"pointer-events\", \"all\").style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\").on(\"mousedown.brush\", brushstart).on(\"touchstart.brush\", brushstart);\n        var background = g.selectAll(\".background\").data([ 0 ]);\n        background.enter().append(\"rect\").attr(\"class\", \"background\").style(\"visibility\", \"hidden\").style(\"cursor\", \"crosshair\");\n        g.selectAll(\".extent\").data([ 0 ]).enter().append(\"rect\").attr(\"class\", \"extent\").style(\"cursor\", \"move\");\n        var resize = g.selectAll(\".resize\").data(resizes, d3_identity);\n        resize.exit().remove();\n        resize.enter().append(\"g\").attr(\"class\", function(d) {\n          return \"resize \" + d;\n        }).style(\"cursor\", function(d) {\n          return d3_svg_brushCursor[d];\n        }).append(\"rect\").attr(\"x\", function(d) {\n          return /[ew]$/.test(d) ? -3 : null;\n        }).attr(\"y\", function(d) {\n          return /^[ns]/.test(d) ? -3 : null;\n        }).attr(\"width\", 6).attr(\"height\", 6).style(\"visibility\", \"hidden\");\n        resize.style(\"display\", brush.empty() ? \"none\" : null);\n        var gUpdate = d3.transition(g), backgroundUpdate = d3.transition(background), range;\n        if (x) {\n          range = d3_scaleRange(x);\n          backgroundUpdate.attr(\"x\", range[0]).attr(\"width\", range[1] - range[0]);\n          redrawX(gUpdate);\n        }\n        if (y) {\n          range = d3_scaleRange(y);\n          backgroundUpdate.attr(\"y\", range[0]).attr(\"height\", range[1] - range[0]);\n          redrawY(gUpdate);\n        }\n        redraw(gUpdate);\n      });\n    }\n    brush.event = function(g) {\n      g.each(function() {\n        var event_ = event.of(this, arguments), extent1 = {\n          x: xExtent,\n          y: yExtent,\n          i: xExtentDomain,\n          j: yExtentDomain\n        }, extent0 = this.__chart__ || extent1;\n        this.__chart__ = extent1;\n        if (d3_transitionInheritId) {\n          d3.select(this).transition().each(\"start.brush\", function() {\n            xExtentDomain = extent0.i;\n            yExtentDomain = extent0.j;\n            xExtent = extent0.x;\n            yExtent = extent0.y;\n            event_({\n              type: \"brushstart\"\n            });\n          }).tween(\"brush:brush\", function() {\n            var xi = d3_interpolateArray(xExtent, extent1.x), yi = d3_interpolateArray(yExtent, extent1.y);\n            xExtentDomain = yExtentDomain = null;\n            return function(t) {\n              xExtent = extent1.x = xi(t);\n              yExtent = extent1.y = yi(t);\n              event_({\n                type: \"brush\",\n                mode: \"resize\"\n              });\n            };\n          }).each(\"end.brush\", function() {\n            xExtentDomain = extent1.i;\n            yExtentDomain = extent1.j;\n            event_({\n              type: \"brush\",\n              mode: \"resize\"\n            });\n            event_({\n              type: \"brushend\"\n            });\n          });\n        } else {\n          event_({\n            type: \"brushstart\"\n          });\n          event_({\n            type: \"brush\",\n            mode: \"resize\"\n          });\n          event_({\n            type: \"brushend\"\n          });\n        }\n      });\n    };\n    function redraw(g) {\n      g.selectAll(\".resize\").attr(\"transform\", function(d) {\n        return \"translate(\" + xExtent[+/e$/.test(d)] + \",\" + yExtent[+/^s/.test(d)] + \")\";\n      });\n    }\n    function redrawX(g) {\n      g.select(\".extent\").attr(\"x\", xExtent[0]);\n      g.selectAll(\".extent,.n>rect,.s>rect\").attr(\"width\", xExtent[1] - xExtent[0]);\n    }\n    function redrawY(g) {\n      g.select(\".extent\").attr(\"y\", yExtent[0]);\n      g.selectAll(\".extent,.e>rect,.w>rect\").attr(\"height\", yExtent[1] - yExtent[0]);\n    }\n    function brushstart() {\n      var target = this, eventTarget = d3.select(d3.event.target), event_ = event.of(target, arguments), g = d3.select(target), resizing = eventTarget.datum(), resizingX = !/^(n|s)$/.test(resizing) && x, resizingY = !/^(e|w)$/.test(resizing) && y, dragging = eventTarget.classed(\"extent\"), dragRestore = d3_event_dragSuppress(target), center, origin = d3.mouse(target), offset;\n      var w = d3.select(d3_window(target)).on(\"keydown.brush\", keydown).on(\"keyup.brush\", keyup);\n      if (d3.event.changedTouches) {\n        w.on(\"touchmove.brush\", brushmove).on(\"touchend.brush\", brushend);\n      } else {\n        w.on(\"mousemove.brush\", brushmove).on(\"mouseup.brush\", brushend);\n      }\n      g.interrupt().selectAll(\"*\").interrupt();\n      if (dragging) {\n        origin[0] = xExtent[0] - origin[0];\n        origin[1] = yExtent[0] - origin[1];\n      } else if (resizing) {\n        var ex = +/w$/.test(resizing), ey = +/^n/.test(resizing);\n        offset = [ xExtent[1 - ex] - origin[0], yExtent[1 - ey] - origin[1] ];\n        origin[0] = xExtent[ex];\n        origin[1] = yExtent[ey];\n      } else if (d3.event.altKey) center = origin.slice();\n      g.style(\"pointer-events\", \"none\").selectAll(\".resize\").style(\"display\", null);\n      d3.select(\"body\").style(\"cursor\", eventTarget.style(\"cursor\"));\n      event_({\n        type: \"brushstart\"\n      });\n      brushmove();\n      function keydown() {\n        if (d3.event.keyCode == 32) {\n          if (!dragging) {\n            center = null;\n            origin[0] -= xExtent[1];\n            origin[1] -= yExtent[1];\n            dragging = 2;\n          }\n          d3_eventPreventDefault();\n        }\n      }\n      function keyup() {\n        if (d3.event.keyCode == 32 && dragging == 2) {\n          origin[0] += xExtent[1];\n          origin[1] += yExtent[1];\n          dragging = 0;\n          d3_eventPreventDefault();\n        }\n      }\n      function brushmove() {\n        var point = d3.mouse(target), moved = false;\n        if (offset) {\n          point[0] += offset[0];\n          point[1] += offset[1];\n        }\n        if (!dragging) {\n          if (d3.event.altKey) {\n            if (!center) center = [ (xExtent[0] + xExtent[1]) / 2, (yExtent[0] + yExtent[1]) / 2 ];\n            origin[0] = xExtent[+(point[0] < center[0])];\n            origin[1] = yExtent[+(point[1] < center[1])];\n          } else center = null;\n        }\n        if (resizingX && move1(point, x, 0)) {\n          redrawX(g);\n          moved = true;\n        }\n        if (resizingY && move1(point, y, 1)) {\n          redrawY(g);\n          moved = true;\n        }\n        if (moved) {\n          redraw(g);\n          event_({\n            type: \"brush\",\n            mode: dragging ? \"move\" : \"resize\"\n          });\n        }\n      }\n      function move1(point, scale, i) {\n        var range = d3_scaleRange(scale), r0 = range[0], r1 = range[1], position = origin[i], extent = i ? yExtent : xExtent, size = extent[1] - extent[0], min, max;\n        if (dragging) {\n          r0 -= position;\n          r1 -= size + position;\n        }\n        min = (i ? yClamp : xClamp) ? Math.max(r0, Math.min(r1, point[i])) : point[i];\n        if (dragging) {\n          max = (min += position) + size;\n        } else {\n          if (center) position = Math.max(r0, Math.min(r1, 2 * center[i] - min));\n          if (position < min) {\n            max = min;\n            min = position;\n          } else {\n            max = position;\n          }\n        }\n        if (extent[0] != min || extent[1] != max) {\n          if (i) yExtentDomain = null; else xExtentDomain = null;\n          extent[0] = min;\n          extent[1] = max;\n          return true;\n        }\n      }\n      function brushend() {\n        brushmove();\n        g.style(\"pointer-events\", \"all\").selectAll(\".resize\").style(\"display\", brush.empty() ? \"none\" : null);\n        d3.select(\"body\").style(\"cursor\", null);\n        w.on(\"mousemove.brush\", null).on(\"mouseup.brush\", null).on(\"touchmove.brush\", null).on(\"touchend.brush\", null).on(\"keydown.brush\", null).on(\"keyup.brush\", null);\n        dragRestore();\n        event_({\n          type: \"brushend\"\n        });\n      }\n    }\n    brush.x = function(z) {\n      if (!arguments.length) return x;\n      x = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.y = function(z) {\n      if (!arguments.length) return y;\n      y = z;\n      resizes = d3_svg_brushResizes[!x << 1 | !y];\n      return brush;\n    };\n    brush.clamp = function(z) {\n      if (!arguments.length) return x && y ? [ xClamp, yClamp ] : x ? xClamp : y ? yClamp : null;\n      if (x && y) xClamp = !!z[0], yClamp = !!z[1]; else if (x) xClamp = !!z; else if (y) yClamp = !!z;\n      return brush;\n    };\n    brush.extent = function(z) {\n      var x0, x1, y0, y1, t;\n      if (!arguments.length) {\n        if (x) {\n          if (xExtentDomain) {\n            x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n          } else {\n            x0 = xExtent[0], x1 = xExtent[1];\n            if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n          }\n        }\n        if (y) {\n          if (yExtentDomain) {\n            y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n          } else {\n            y0 = yExtent[0], y1 = yExtent[1];\n            if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n          }\n        }\n        return x && y ? [ [ x0, y0 ], [ x1, y1 ] ] : x ? [ x0, x1 ] : y && [ y0, y1 ];\n      }\n      if (x) {\n        x0 = z[0], x1 = z[1];\n        if (y) x0 = x0[0], x1 = x1[0];\n        xExtentDomain = [ x0, x1 ];\n        if (x.invert) x0 = x(x0), x1 = x(x1);\n        if (x1 < x0) t = x0, x0 = x1, x1 = t;\n        if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [ x0, x1 ];\n      }\n      if (y) {\n        y0 = z[0], y1 = z[1];\n        if (x) y0 = y0[1], y1 = y1[1];\n        yExtentDomain = [ y0, y1 ];\n        if (y.invert) y0 = y(y0), y1 = y(y1);\n        if (y1 < y0) t = y0, y0 = y1, y1 = t;\n        if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [ y0, y1 ];\n      }\n      return brush;\n    };\n    brush.clear = function() {\n      if (!brush.empty()) {\n        xExtent = [ 0, 0 ], yExtent = [ 0, 0 ];\n        xExtentDomain = yExtentDomain = null;\n      }\n      return brush;\n    };\n    brush.empty = function() {\n      return !!x && xExtent[0] == xExtent[1] || !!y && yExtent[0] == yExtent[1];\n    };\n    return d3.rebind(brush, event, \"on\");\n  };\n  var d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n  };\n  var d3_svg_brushResizes = [ [ \"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\" ], [ \"e\", \"w\" ], [ \"n\", \"s\" ], [] ];\n  var d3_time_format = d3_time.format = d3_locale_enUS.timeFormat;\n  var d3_time_formatUtc = d3_time_format.utc;\n  var d3_time_formatIso = d3_time_formatUtc(\"%Y-%m-%dT%H:%M:%S.%LZ\");\n  d3_time_format.iso = Date.prototype.toISOString && +new Date(\"2000-01-01T00:00:00.000Z\") ? d3_time_formatIsoNative : d3_time_formatIso;\n  function d3_time_formatIsoNative(date) {\n    return date.toISOString();\n  }\n  d3_time_formatIsoNative.parse = function(string) {\n    var date = new Date(string);\n    return isNaN(date) ? null : date;\n  };\n  d3_time_formatIsoNative.toString = d3_time_formatIso.toString;\n  d3_time.second = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 1e3) * 1e3);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 1e3);\n  }, function(date) {\n    return date.getSeconds();\n  });\n  d3_time.seconds = d3_time.second.range;\n  d3_time.seconds.utc = d3_time.second.utc.range;\n  d3_time.minute = d3_time_interval(function(date) {\n    return new d3_date(Math.floor(date / 6e4) * 6e4);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 6e4);\n  }, function(date) {\n    return date.getMinutes();\n  });\n  d3_time.minutes = d3_time.minute.range;\n  d3_time.minutes.utc = d3_time.minute.utc.range;\n  d3_time.hour = d3_time_interval(function(date) {\n    var timezone = date.getTimezoneOffset() / 60;\n    return new d3_date((Math.floor(date / 36e5 - timezone) + timezone) * 36e5);\n  }, function(date, offset) {\n    date.setTime(date.getTime() + Math.floor(offset) * 36e5);\n  }, function(date) {\n    return date.getHours();\n  });\n  d3_time.hours = d3_time.hour.range;\n  d3_time.hours.utc = d3_time.hour.utc.range;\n  d3_time.month = d3_time_interval(function(date) {\n    date = d3_time.day(date);\n    date.setDate(1);\n    return date;\n  }, function(date, offset) {\n    date.setMonth(date.getMonth() + offset);\n  }, function(date) {\n    return date.getMonth();\n  });\n  d3_time.months = d3_time.month.range;\n  d3_time.months.utc = d3_time.month.utc.range;\n  function d3_time_scale(linear, methods, format) {\n    function scale(x) {\n      return linear(x);\n    }\n    scale.invert = function(x) {\n      return d3_time_scaleDate(linear.invert(x));\n    };\n    scale.domain = function(x) {\n      if (!arguments.length) return linear.domain().map(d3_time_scaleDate);\n      linear.domain(x);\n      return scale;\n    };\n    function tickMethod(extent, count) {\n      var span = extent[1] - extent[0], target = span / count, i = d3.bisect(d3_time_scaleSteps, target);\n      return i == d3_time_scaleSteps.length ? [ methods.year, d3_scale_linearTickRange(extent.map(function(d) {\n        return d / 31536e6;\n      }), count)[2] ] : !i ? [ d3_time_scaleMilliseconds, d3_scale_linearTickRange(extent, count)[2] ] : methods[target / d3_time_scaleSteps[i - 1] < d3_time_scaleSteps[i] / target ? i - 1 : i];\n    }\n    scale.nice = function(interval, skip) {\n      var domain = scale.domain(), extent = d3_scaleExtent(domain), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" && tickMethod(extent, interval);\n      if (method) interval = method[0], skip = method[1];\n      function skipped(date) {\n        return !isNaN(date) && !interval.range(date, d3_time_scaleDate(+date + 1), skip).length;\n      }\n      return scale.domain(d3_scale_nice(domain, skip > 1 ? {\n        floor: function(date) {\n          while (skipped(date = interval.floor(date))) date = d3_time_scaleDate(date - 1);\n          return date;\n        },\n        ceil: function(date) {\n          while (skipped(date = interval.ceil(date))) date = d3_time_scaleDate(+date + 1);\n          return date;\n        }\n      } : interval));\n    };\n    scale.ticks = function(interval, skip) {\n      var extent = d3_scaleExtent(scale.domain()), method = interval == null ? tickMethod(extent, 10) : typeof interval === \"number\" ? tickMethod(extent, interval) : !interval.range && [ {\n        range: interval\n      }, skip ];\n      if (method) interval = method[0], skip = method[1];\n      return interval.range(extent[0], d3_time_scaleDate(+extent[1] + 1), skip < 1 ? 1 : skip);\n    };\n    scale.tickFormat = function() {\n      return format;\n    };\n    scale.copy = function() {\n      return d3_time_scale(linear.copy(), methods, format);\n    };\n    return d3_scale_linearRebind(scale, linear);\n  }\n  function d3_time_scaleDate(t) {\n    return new Date(t);\n  }\n  var d3_time_scaleSteps = [ 1e3, 5e3, 15e3, 3e4, 6e4, 3e5, 9e5, 18e5, 36e5, 108e5, 216e5, 432e5, 864e5, 1728e5, 6048e5, 2592e6, 7776e6, 31536e6 ];\n  var d3_time_scaleLocalMethods = [ [ d3_time.second, 1 ], [ d3_time.second, 5 ], [ d3_time.second, 15 ], [ d3_time.second, 30 ], [ d3_time.minute, 1 ], [ d3_time.minute, 5 ], [ d3_time.minute, 15 ], [ d3_time.minute, 30 ], [ d3_time.hour, 1 ], [ d3_time.hour, 3 ], [ d3_time.hour, 6 ], [ d3_time.hour, 12 ], [ d3_time.day, 1 ], [ d3_time.day, 2 ], [ d3_time.week, 1 ], [ d3_time.month, 1 ], [ d3_time.month, 3 ], [ d3_time.year, 1 ] ];\n  var d3_time_scaleLocalFormat = d3_time_format.multi([ [ \".%L\", function(d) {\n    return d.getMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getDay() && d.getDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  var d3_time_scaleMilliseconds = {\n    range: function(start, stop, step) {\n      return d3.range(Math.ceil(start / step) * step, +stop, step).map(d3_time_scaleDate);\n    },\n    floor: d3_identity,\n    ceil: d3_identity\n  };\n  d3_time_scaleLocalMethods.year = d3_time.year;\n  d3_time.scale = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleLocalMethods, d3_time_scaleLocalFormat);\n  };\n  var d3_time_scaleUtcMethods = d3_time_scaleLocalMethods.map(function(m) {\n    return [ m[0].utc, m[1] ];\n  });\n  var d3_time_scaleUtcFormat = d3_time_formatUtc.multi([ [ \".%L\", function(d) {\n    return d.getUTCMilliseconds();\n  } ], [ \":%S\", function(d) {\n    return d.getUTCSeconds();\n  } ], [ \"%I:%M\", function(d) {\n    return d.getUTCMinutes();\n  } ], [ \"%I %p\", function(d) {\n    return d.getUTCHours();\n  } ], [ \"%a %d\", function(d) {\n    return d.getUTCDay() && d.getUTCDate() != 1;\n  } ], [ \"%b %d\", function(d) {\n    return d.getUTCDate() != 1;\n  } ], [ \"%B\", function(d) {\n    return d.getUTCMonth();\n  } ], [ \"%Y\", d3_true ] ]);\n  d3_time_scaleUtcMethods.year = d3_time.year.utc;\n  d3_time.scale.utc = function() {\n    return d3_time_scale(d3.scale.linear(), d3_time_scaleUtcMethods, d3_time_scaleUtcFormat);\n  };\n  d3.text = d3_xhrType(function(request) {\n    return request.responseText;\n  });\n  d3.json = function(url, callback) {\n    return d3_xhr(url, \"application/json\", d3_json, callback);\n  };\n  function d3_json(request) {\n    return JSON.parse(request.responseText);\n  }\n  d3.html = function(url, callback) {\n    return d3_xhr(url, \"text/html\", d3_html, callback);\n  };\n  function d3_html(request) {\n    var range = d3_document.createRange();\n    range.selectNode(d3_document.body);\n    return range.createContextualFragment(request.responseText);\n  }\n  d3.xml = d3_xhrType(function(request) {\n    return request.responseXML;\n  });\n  if (typeof define === \"function\" && define.amd) define(d3); else if (typeof module === \"object\" && module.exports) module.exports = d3;\n  this.d3 = d3;\n}();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bower_components/d3/d3.js\n// module id = 28\n// module chunks = 0","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nvar React = require('react');\n\nrequire('./listing.less');\n\n/* entry for an alert in the listing, can be expanded (with details) or standard\n * rowId optional: an identifier for the row which will be set as \"data-row-id\" attribute on the <tr>\n * columns list of columns to show in the header\n *     columns to show, can be a string, react component or object with { name: 'name', 'header': false }\n *     'header' (or if simple string) defaults to false\n *     in case 'header' is true, <th> is used for the entries, otherwise <td>\n * tabRenderers optional: list of tab renderers for inline expansion, array of objects with\n *     - name tab name (has to be unique in the entry, used as react key)\n *     - renderer react component\n *     - data render data passed to the tab renderer\n *     - presence 'always', 'onlyActive', 'loadOnDemand', default: 'loadOnDemand'\n *         - 'always' once a row is expanded, this tab is always rendered, but invisible if not active\n *         - 'onlyActive' the tab is only rendered when active\n *         - 'loadOnDemand' the tab is first rendered when it becomes active, then follows 'always' behavior\n *     if tabRenderers isn't set, item can't be expanded inline\n * navigateToItem optional: callback triggered when a row is clicked, pattern suggests navigation\n *     to view expanded item details, if not set, navigation isn't available\n * listingDetail optional: text rendered next to action buttons, similar style to the tab headers\n * listingActions optional: buttons that are presented as actions for the expanded item\n */\nvar ListingRow = React.createClass({\n    propTypes: {\n        rowId: React.PropTypes.string,\n        columns: React.PropTypes.array.isRequired,\n        tabRenderers: React.PropTypes.array,\n        navigateToItem: React.PropTypes.func,\n        listingDetail: React.PropTypes.node,\n        listingActions: React.PropTypes.arrayOf(React.PropTypes.node)\n    },\n    getDefaultProps: function () {\n        return {\n            tabRenderers: [],\n            navigateToItem: null,\n        };\n    },\n    getInitialState: function() {\n        return {\n            expanded: false, // show expanded view if true, otherwise one line compact\n            activeTab: 0,    // currently active tab in expanded mode, defaults to first tab\n            loadedTabs: {},  // which tabs were already loaded - this is important for 'loadOnDemand' setting\n                             // contains tab indices\n        };\n    },\n    handleNavigateClick: function(e) {\n        // only consider primary mouse button\n        if (!e || e.button !== 0)\n            return;\n        this.props.navigateToItem();\n    },\n    handleExpandClick: function(e) {\n        // only consider primary mouse button\n        if (!e || e.button !== 0)\n            return;\n\n        var willBeExpanded = !this.state.expanded && this.props.tabRenderers.length > 0;\n        this.setState( { expanded: willBeExpanded });\n\n        var loadedTabs = {};\n        // unload all tabs if not expanded\n        if (willBeExpanded) {\n            // see if we should preload some tabs\n            var tabIdx;\n            var tabPresence;\n            for (tabIdx = 0; tabIdx < this.props.tabRenderers.length; tabIdx++) {\n                if ('presence' in this.props.tabRenderers[tabIdx])\n                    tabPresence = this.props.tabRenderers[tabIdx].presence;\n                else\n                    tabPresence = 'default';\n                // the active tab is covered by separate logic\n                if (tabPresence == 'always')\n                    loadedTabs[tabIdx] = true;\n            }\n            // ensure the active tab is loaded\n            loadedTabs[this.state.activeTab] = true;\n        }\n\n        this.setState( { loadedTabs: loadedTabs });\n\n        e.stopPropagation();\n        e.preventDefault();\n    },\n    handleTabClick: function(tabIdx, e) {\n        // only consider primary mouse button\n        if (!e || e.button !== 0)\n            return;\n        var prevTab = this.state.activeTab;\n        var prevTabPresence = 'default';\n        var loadedTabs = this.state.loadedTabs;\n        if (prevTab !== tabIdx) {\n            // see if we need to unload the previous tab\n            if ('presence' in this.props.tabRenderers[prevTab])\n                prevTabPresence = this.props.tabRenderers[prevTab].presence;\n\n            if (prevTabPresence == 'onlyActive')\n                delete loadedTabs[prevTab];\n\n            // ensure the new tab is loaded and update state\n            loadedTabs[tabIdx] = true;\n            this.setState({ loadedTabs: loadedTabs, activeTab: tabIdx });\n        }\n        e.stopPropagation();\n        e.preventDefault();\n    },\n    render: function() {\n        var self = this;\n        // only enable navigation if a function is provided and the row isn't expanded (prevnt accidental navigation)\n        var allowNavigate = !!this.props.navigateToItem && !this.state.expanded;\n\n        var headerEntries = this.props.columns.map(function(itm) {\n            if (typeof itm === 'string' || itm === null || itm === undefined || itm instanceof String || React.isValidElement(itm))\n                return (<td>{itm}</td>);\n            else if ('header' in itm && itm.header)\n                return (<th>{itm.name}</th>);\n            else if ('tight' in itm && itm.tight)\n                return (<td className=\"listing-ct-actions\">{itm.name || itm.element}</td>);\n            else\n                return (<td>{itm.name}</td>);\n        });\n\n        var allowExpand = (this.props.tabRenderers.length > 0);\n        var expandToggle = null;\n        if (allowExpand) {\n            expandToggle = <td className=\"listing-ct-toggle\" onClick={ allowNavigate?this.handleExpandClick:undefined }>\n                               <i className=\"fa fa-fw\"></i>\n                           </td>;\n        } else {\n            expandToggle = <td className=\"listing-ct-toggle\"></td>;\n        }\n\n        var listingItemClasses = [\"listing-ct-item\"];\n        if (!allowNavigate)\n            listingItemClasses.push(\"listing-ct-nonavigate\");\n        if (!allowExpand)\n            listingItemClasses.push(\"listing-ct-noexpand\");\n\n        var listingItem = (\n            <tr data-row-id={ this.props.rowId }\n                className={ listingItemClasses.join(' ') }\n                onClick={ allowNavigate?this.handleNavigateClick:this.handleExpandClick }>\n                {expandToggle}\n                {headerEntries}\n            </tr>\n        );\n\n        if (this.state.expanded) {\n            var links = this.props.tabRenderers.map(function(itm, idx) {\n                return (\n                    <li key={idx} className={ (idx === self.state.activeTab) ? \"active\" : \"\"} >\n                        <a href=\"#\" onClick={ self.handleTabClick.bind(self, idx) }>{itm.name}</a>\n                    </li>\n                );\n            });\n            var tabs = [];\n            var tabIdx;\n            var Renderer;\n            var rendererData;\n            var row;\n            for (tabIdx = 0; tabIdx < this.props.tabRenderers.length; tabIdx++) {\n                Renderer = this.props.tabRenderers[tabIdx].renderer;\n                rendererData = this.props.tabRenderers[tabIdx].data;\n                if (tabIdx !== this.state.activeTab && !(tabIdx in this.state.loadedTabs))\n                    continue;\n                row = <Renderer key={ this.props.tabRenderers[tabIdx].name } hidden={ (tabIdx !== this.state.activeTab) } {...rendererData} />;\n                if (tabIdx === this.state.activeTab)\n                    tabs.push(<div className=\"listing-ct-body\" key={tabIdx}>{row}</div>);\n                else\n                    tabs.push(<div className=\"listing-ct-body\" key={tabIdx} hidden>{row}</div>);\n            }\n\n            var listingDetail;\n            if ('listingDetail' in this.props) {\n                listingDetail = (\n                    <span className=\"listing-ct-caption\">\n                        {this.props.listingDetail}\n                    </span>\n                );\n            }\n\n            return (\n                <tbody className=\"open\">\n                    {listingItem}\n                    <tr className=\"listing-ct-panel\">\n                        <td colSpan={ headerEntries.length + (expandToggle?1:0) }>\n                            <div className=\"listing-ct-head\">\n                                <div className=\"listing-ct-actions\">\n                                    {listingDetail}\n                                    {this.props.listingActions}\n                                </div>\n                                <ul className=\"nav nav-tabs nav-tabs-pf\">\n                                    {links}\n                                </ul>\n                            </div>\n                            {tabs}\n                        </td>\n                    </tr>\n                </tbody>\n            );\n        } else {\n            return (\n                <tbody>\n                    {listingItem}\n                    <tr className=\"listing-ct-panel\"/>\n                </tbody>\n            );\n        }\n    }\n});\n\n/* Implements a PatternFly 'List View' pattern\n * https://www.patternfly.org/list-view/\n * Properties:\n * - title\n * - fullWidth optional: set width to 100% of parent, defaults to true\n * - emptyCaption header caption to show if list is empty, defaults to \"No entries\"\n * - columnTitles: array of column titles, as strings\n * - actions: additional listing-wide actions (displayed next to the list's title)\n */\nvar Listing = React.createClass({\n    propTypes: {\n        title: React.PropTypes.string.isRequired,\n        fullWidth: React.PropTypes.bool,\n        emptyCaption: React.PropTypes.string.isRequired,\n        columnTitles: React.PropTypes.arrayOf(React.PropTypes.string),\n        actions: React.PropTypes.arrayOf(React.PropTypes.node)\n    },\n    getDefaultProps: function () {\n        return {\n            fullWidth: true,\n            columnTitles: [],\n            actions: []\n        };\n    },\n    render: function() {\n        var bodyClasses = [\"listing\", \"listing-ct\"];\n        if (this.props.fullWidth)\n            bodyClasses.push(\"listing-ct-wide\");\n        var headerClasses;\n        var headerRow;\n        if (!this.props.children || this.props.children.length === 0) {\n            headerClasses = \"listing-ct-empty\";\n            headerRow = <tr><td>{this.props.emptyCaption}</td></tr>;\n        } else if (this.props.columnTitles.length) {\n            headerRow = (\n                <tr>\n                    <th className=\"listing-ct-toggle\"></th>\n                    { this.props.columnTitles.map(function (title) { return <th>{title}</th>; }) }\n                </tr>\n            );\n        } else {\n           headerRow = <tr/>\n        }\n        return (\n            <table className={ bodyClasses.join(\" \") }>\n                <caption className=\"cockpit-caption\">{this.props.title}{this.props.actions}</caption>\n                <thead className={headerClasses}>\n                    {headerRow}\n                </thead>\n                {this.props.children}\n            </table>\n        );\n    },\n});\n\nmodule.exports = {\n    ListingRow: ListingRow,\n    Listing: Listing,\n};\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/lib/cockpit-components-listing.jsx"],"sourceRoot":""}