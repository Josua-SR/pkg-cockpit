{"version":3,"sources":["webpack:///machines/test-machines.min.js","webpack:///webpack/bootstrap c9dbb2714f97c0ce2628?fc96","webpack:///../pkg/machines/test-machines.js","webpack:///../pkg/machines/config.es6?b225","webpack:///../pkg/machines/helpers.es6?92a0","webpack:///external \"cockpit\"?478e","webpack:///../pkg/lib/qunit-tests.js","webpack:///../bower_components/qunit/qunit/qunit.js","webpack:///../~/process/browser.js","webpack:///../bower_components/qunit-tap/lib/qunit-tap.js","webpack:///../pkg/lib/qunit-config.js","webpack:///../~/webpack/buildin/module.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","QUnit","assert","helpers","test","equal","toFixedPrecision","start","Object","defineProperty","value","VMS_CONFIG","DefaultRefreshInterval","Virsh","connections","system","params","session","isDev","_interopRequireDefault","obj","__esModule","default","toGigaBytes","amount","currentUnit","result","undefined","console","error","toFixed","fixed1","toKiloBytes","isEmpty","str","length","arrayEquals","arr1","arr2","diff","filter","v","index","logDebug","msg","_configEs62","log","rephraseUI","key","original","transform","precision","power","Math","pow","absValue","abs","round","String","floor","fraction","padding","Array","max","join","_cockpit","_cockpit2","_configEs6","_","gettext","autostart","disable","enable","vmStates","running","idle","paused","shutdown","shut off","crashed","dying","pmsuspended","cockpit","window","qunitTap","process","done","config","autorun","previousModule","runLoggingCallbacks","name","failed","moduleStats","bad","passed","all","total","i","banner","tests","runtime","Date","started","stats","html","className","innerHTML","altertitle","defined","document","title","replace","reorder","sessionStorage","indexOf","removeItem","scrolltop","scrollTo","validTest","include","toLowerCase","fullName","testName","callback","testNumber","inArray","charAt","slice","extractStacktrace","e","offset","stack","stacktrace","split","shift","fileName","push","sourceURL","line","sourceFromStacktrace","Error","escapeText","s","synchronize","last","queue","blocking","next","getTime","depth","setTimeout","updateRate","saveGlobal","pollution","noglobals","hasOwn","checkPollution","newGlobals","deletedGlobals","old","pushFailure","a","b","j","splice","extend","prop","addEvent","elem","type","fn","addEventListener","attachEvent","addEvents","elems","hasClass","addClass","removeClass","set","trim","getElementById","registerLoggingCallback","scope","args","callbacks","hasOwnProperty","array","Test","settings","this","assertions","count","onErrorFnPrev","testId","toString","prototype","clearTimeout","x","setItem","errorString","message","substring","objectValues","val","vals","is","testEnvironment","currentModule","currentModuleTestEnvironment","asyncTest","expected","arguments","async","nameHtml","moduleTestEnvironment","expect","asserts","current","semaphore","begin","timeout","stop","testTimeout","ok","F","constructor","hidepassed","requireExpects","urlConfig","label","tooltip","testStart","testDone","moduleStart","moduleDone","location","search","protocol","urlParams","decodeURIComponent","concat","parseInt","isLocal","init","qunit","parentNode","removeChild","createElement","insertBefore","reset","fixture","objectType","match","isNaN","actual","output","source","details","jsDump","parse","url","querystring","encodeURIComponent","host","pathname","readyState","load","len","main","ol","toolbar","selection","urlConfigContainer","moduleFilter","userAgent","numModules","moduleNames","moduleFilterHtml","urlConfigHtml","oldconfig","sort","localeCompare","navigator","tmp","checked","getItem","appendChild","setAttribute","getElementsByTagName","event","target","srcElement","defaultValue","options","selectedIndex","lastChild","selectBox","selectedModule","onerror","filePath","linerNr","ret","ignoreGlobalErrors","li","href","setup","teardown","current_testEnvironment","notrycatch","run","callbackStarted","callbackRuntime","finish","assertion","time","good","collapsed","nodeName","firstChild","duration","notEqual","propEqual","equiv","notPropEqual","deepEqual","notDeepEqual","strictEqual","notStrictEqual","throws","block","expectedOutput","raises","equals","same","bindCallbacks","o","apply","innerEquiv","callers","parents","parentsB","getProto","getPrototypeOf","__proto__","useStrictEquality","string","boolean","number","null","nan","date","valueOf","regexp","global","ignoreCase","multiline","sticky","function","caller","loop","aCircular","bCircular","pop","object","eq","aProperties","bProperties","quote","literal","pre","arr","post","separator","base","indent","inner","up","down","reName","inStack","res","parser","parsers","typeOf","setInterval","nodeType","item","HTML","extra","chr","indentChar","setParser","unknown","exec","nodelist","map","keys","node","open","close","tag","attrs","attributes","nodeValue","functionArgs","l","fromCharCode","functionCode","attribute","n","ns","os","rows","text","row","out","oSpace","nSpace","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","runClearTimeout","marker","cachedClearTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","Item","noop","nextTick","browser","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","cwd","chdir","dir","umask","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","ary","element","removeElement","isPlanRequired","conf","isPassed","isFailed","isAssertOkFailed","escapeLineEndings","ltrim","render","desc","fieldName","fieldValue","formatter","renderIf","shouldRender","formatTestLine","testLine","rest","qunitObject","printLikeFunction","isEnabled","configName","tap","formatDetails","explain","printPlanLine","toCount","puts","initialCount","unsubscribeEvent","eventName","listeners","targetEvents","qu","registeredCallbacks","unsubscribeEvents","eventNames","jsDumpExists","deprecateOption","optionName","fallback","showModuleNameOnFailure","showTestNameOnFailure","showExpectationOnFailure","showSourceOnFailure","flag","noPlan","VERSION","qunitTapVersion","expectedCount","note","diag","arg","unsubscribe","appendCallback","createCallbackAppenderFor","subject","observer","originalLoggingCallback","qunit_started","qunit_onerror","file","tap_regex","tests_included","webpackPolyfill","deprecate","paths","children"],"mappings":"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","file":"machines/test-machines.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar QUnit = __webpack_require__(34);\n\tvar assert = QUnit;\n\t\n\tvar helpers = __webpack_require__(16);\n\t\n\tQUnit.test(\"toFixedPrecision\", function() {\n\t    assert.equal(\"1.0\", helpers.toFixedPrecision(\"1\", 1));\n\t    assert.equal(\"1.0\", helpers.toFixedPrecision(\"1.0\", 1));\n\t    assert.equal(\"1.0\", helpers.toFixedPrecision(\"1.01\", 1));\n\t    assert.equal(\"1.1\", helpers.toFixedPrecision(\"1.1\", 1));\n\t    assert.equal(\"1.1\", helpers.toFixedPrecision(\"1.123\", 1));\n\t\n\t    assert.equal(\"1\", helpers.toFixedPrecision(\"1\", 0));\n\t    assert.equal(\"1\", helpers.toFixedPrecision(\"1.0\", 0));\n\t    assert.equal(\"1\", helpers.toFixedPrecision(\"1.01\", 0));\n\t    assert.equal(\"1\", helpers.toFixedPrecision(\"1.1\", 0));\n\t    assert.equal(\"1\", helpers.toFixedPrecision(\"1.123\", 0));\n\t\n\t    assert.equal(\"1.00\", helpers.toFixedPrecision(\"1\", 2));\n\t    assert.equal(\"1.00\", helpers.toFixedPrecision(\"1.0\", 2));\n\t    assert.equal(\"1.01\", helpers.toFixedPrecision(\"1.01\", 2));\n\t    assert.equal(\"1.10\", helpers.toFixedPrecision(\"1.1\", 2));\n\t    assert.equal(\"1.12\", helpers.toFixedPrecision(\"1.123\", 2));\n\t\n\t    assert.equal(\"12.0\", helpers.toFixedPrecision(\"12\", 1));\n\t    assert.equal(\"12.0\", helpers.toFixedPrecision(\"12.0\", 1));\n\t    assert.equal(\"12.0\", helpers.toFixedPrecision(\"12.01\", 1));\n\t    assert.equal(\"12.0\", helpers.toFixedPrecision(\"12.010\", 1));\n\t    assert.equal(\"12.1\", helpers.toFixedPrecision(\"12.123\", 1));\n\t\n\t    assert.equal(\"12.00\", helpers.toFixedPrecision(\"12\", 2));\n\t    assert.equal(\"12.00\", helpers.toFixedPrecision(\"12.0\", 2));\n\t    assert.equal(\"12.01\", helpers.toFixedPrecision(\"12.01\", 2));\n\t    assert.equal(\"12.01\", helpers.toFixedPrecision(\"12.010\", 2));\n\t    assert.equal(\"12.12\", helpers.toFixedPrecision(\"12.123\", 2));\n\t});\n\t\n\tQUnit.start();\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */,\n/* 6 */,\n/* 7 */,\n/* 8 */,\n/* 9 */,\n/* 10 */,\n/* 11 */,\n/* 12 */,\n/* 13 */,\n/* 14 */,\n/* 15 */\n/***/ function(module, exports) {\n\n\t/*jshint esversion: 6 */\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t/**\n\t * Application-wide constants\n\t * TODO: make this configurable by user\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\tvar VMS_CONFIG = {\n\t    DefaultRefreshInterval: 10000, // in ms\n\t    Virsh: {\n\t        connections: {\n\t            'system': {\n\t                params: ['-c', 'qemu:///system']\n\t            },\n\t            'session': {\n\t                params: ['-c', 'qemu:///session']\n\t            }\n\t        }\n\t    },\n\t    // TODO: make it configurable via config file\n\t    isDev: false };\n\t\n\t// Never commit with 'true'\n\texports['default'] = VMS_CONFIG;\n\tmodule.exports = exports['default'];\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*jshint esversion: 6 */\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t    value: true\n\t});\n\texports.toGigaBytes = toGigaBytes;\n\texports.toKiloBytes = toKiloBytes;\n\texports.isEmpty = isEmpty;\n\texports.arrayEquals = arrayEquals;\n\texports.logDebug = logDebug;\n\texports.rephraseUI = rephraseUI;\n\texports.toFixedPrecision = toFixedPrecision;\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tvar _cockpit = __webpack_require__(17);\n\t\n\tvar _cockpit2 = _interopRequireDefault(_cockpit);\n\t\n\tvar _configEs6 = __webpack_require__(15);\n\t\n\tvar _configEs62 = _interopRequireDefault(_configEs6);\n\t\n\tvar _ = _cockpit2['default'].gettext;\n\t\n\tfunction toGigaBytes(amount, currentUnit) {\n\t    var result = undefined;\n\t    switch (currentUnit) {\n\t        case 'B':\n\t            result = amount / 1024 / 1024 / 1024;\n\t            break;\n\t        case 'KiB':\n\t            result = amount / 1024 / 1024;\n\t            break;\n\t        default:\n\t            console.error('toGigaBytes(): unknown unit: ' + currentUnit);\n\t            result = amount / 1;\n\t    }\n\t\n\t    if (result < 1) {\n\t        result = result.toFixed(2);\n\t    } else {\n\t        var fixed1 = result.toFixed(1);\n\t        result = result - fixed1 === 0 ? result.toFixed(0) : fixed1;\n\t    }\n\t\n\t    return result;\n\t}\n\t\n\tfunction toKiloBytes(amount, currentUnit) {\n\t    var result = undefined;\n\t    switch (currentUnit) {\n\t        case 'B':\n\t            result = amount / 1024;\n\t            break;\n\t        case 'KiB':\n\t            result = amount;\n\t            break;\n\t        case 'MiB':\n\t            result = amount * 1024;\n\t            break;\n\t        case 'GiB':\n\t            result = amount * 1024;\n\t            break;\n\t        default:\n\t            console.error('toKiloBytes(): unknown unit: ' + currentUnit);\n\t            result = amount / 1;\n\t    }\n\t\n\t    return result;\n\t}\n\t\n\tfunction isEmpty(str) {\n\t    return !str || 0 === str.length;\n\t}\n\t\n\tfunction arrayEquals(arr1, arr2) {\n\t    if (arr1.length !== arr2.length) {\n\t        return false;\n\t    }\n\t\n\t    var diff = arr1.filter(function (v, index) {\n\t        return v !== arr2[index];\n\t    });\n\t    return diff.length === 0;\n\t}\n\t\n\tfunction logDebug(msg) {\n\t    if (_configEs62['default'].isDev) {\n\t        console.log(msg);\n\t    }\n\t}\n\t\n\tvar transform = {\n\t    'autostart': {\n\t        'disable': _(\"disabled\"),\n\t        'enable': _(\"enabled\")\n\t    },\n\t    'connections': {\n\t        'system': _(\"System\"),\n\t        'session': _(\"Session\")\n\t    },\n\t    'vmStates': {\n\t        running: _(\"running\"),\n\t        idle: _(\"idle\"),\n\t        paused: _(\"paused\"),\n\t        shutdown: _(\"shutdown\"),\n\t        'shut off': _(\"shut off\"),\n\t        crashed: _(\"crashed\"),\n\t        dying: _(\"dying\"),\n\t        pmsuspended: _(\"suspended (PM)\")\n\t    }\n\t};\n\t\n\tfunction rephraseUI(key, original) {\n\t    if (!(key in transform)) {\n\t        logDebug('rephraseUI(key=\\'' + key + '\\', original=\\'' + original + '\\'): unknown key');\n\t        return original;\n\t    }\n\t\n\t    if (!(original in transform[key])) {\n\t        logDebug('rephraseUI(key=\\'' + key + '\\', original=\\'' + original + '\\'): unknown original value');\n\t        return original;\n\t    }\n\t\n\t    return transform[key][original];\n\t}\n\t\n\tfunction toFixedPrecision(value, precision) {\n\t    precision = precision || 0;\n\t    var power = Math.pow(10, precision);\n\t    var absValue = Math.abs(Math.round(value * power));\n\t    var result = (value < 0 ? '-' : '') + String(Math.floor(absValue / power));\n\t\n\t    if (precision > 0) {\n\t        var fraction = String(absValue % power);\n\t        var padding = new Array(Math.max(precision - fraction.length, 0) + 1).join('0');\n\t        result += '.' + padding + fraction;\n\t    }\n\t    return result;\n\t}\n\n/***/ },\n/* 17 */\n/***/ function(module, exports) {\n\n\tmodule.exports = cockpit;\n\n/***/ },\n/* 18 */,\n/* 19 */,\n/* 20 */,\n/* 21 */,\n/* 22 */,\n/* 23 */,\n/* 24 */,\n/* 25 */,\n/* 26 */,\n/* 27 */,\n/* 28 */,\n/* 29 */,\n/* 30 */,\n/* 31 */,\n/* 32 */,\n/* 33 */,\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2014 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    /* QUnit needs to have 'window' as 'this' in order to load */\n\t    window.QUnit = __webpack_require__(35);\n\t    window.qunitTap = __webpack_require__(37);\n\t\n\t    __webpack_require__(38);\n\t\n\t    __webpack_require__(40);\n\t\n\t    module.exports = window.QUnit;\n\t\n\t}());\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(process) {/*!\n\t * QUnit 1.14.0\n\t * http://qunitjs.com/\n\t *\n\t * Copyright 2013 jQuery Foundation and other contributors\n\t * Released under the MIT license\n\t * http://jquery.org/license\n\t *\n\t * Date: 2014-01-31T16:40Z\n\t */\n\t\n\t(function( window ) {\n\t\n\tvar QUnit,\n\t\tassert,\n\t\tconfig,\n\t\tonErrorFnPrev,\n\t\ttestId = 0,\n\t\tfileName = (sourceFromStacktrace( 0 ) || \"\" ).replace(/(:\\d+)+\\)?/, \"\").replace(/.+\\//, \"\"),\n\t\ttoString = Object.prototype.toString,\n\t\thasOwn = Object.prototype.hasOwnProperty,\n\t\t// Keep a local reference to Date (GH-283)\n\t\tDate = window.Date,\n\t\tsetTimeout = window.setTimeout,\n\t\tclearTimeout = window.clearTimeout,\n\t\tdefined = {\n\t\t\tdocument: typeof window.document !== \"undefined\",\n\t\t\tsetTimeout: typeof window.setTimeout !== \"undefined\",\n\t\t\tsessionStorage: (function() {\n\t\t\t\tvar x = \"qunit-test-string\";\n\t\t\t\ttry {\n\t\t\t\t\tsessionStorage.setItem( x, x );\n\t\t\t\t\tsessionStorage.removeItem( x );\n\t\t\t\t\treturn true;\n\t\t\t\t} catch( e ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}())\n\t\t},\n\t\t/**\n\t\t * Provides a normalized error string, correcting an issue\n\t\t * with IE 7 (and prior) where Error.prototype.toString is\n\t\t * not properly implemented\n\t\t *\n\t\t * Based on http://es5.github.com/#x15.11.4.4\n\t\t *\n\t\t * @param {String|Error} error\n\t\t * @return {String} error message\n\t\t */\n\t\terrorString = function( error ) {\n\t\t\tvar name, message,\n\t\t\t\terrorString = error.toString();\n\t\t\tif ( errorString.substring( 0, 7 ) === \"[object\" ) {\n\t\t\t\tname = error.name ? error.name.toString() : \"Error\";\n\t\t\t\tmessage = error.message ? error.message.toString() : \"\";\n\t\t\t\tif ( name && message ) {\n\t\t\t\t\treturn name + \": \" + message;\n\t\t\t\t} else if ( name ) {\n\t\t\t\t\treturn name;\n\t\t\t\t} else if ( message ) {\n\t\t\t\t\treturn message;\n\t\t\t\t} else {\n\t\t\t\t\treturn \"Error\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn errorString;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * Makes a clone of an object using only Array or Object as base,\n\t\t * and copies over the own enumerable properties.\n\t\t *\n\t\t * @param {Object} obj\n\t\t * @return {Object} New object with only the own properties (recursively).\n\t\t */\n\t\tobjectValues = function( obj ) {\n\t\t\t// Grunt 0.3.x uses an older version of jshint that still has jshint/jshint#392.\n\t\t\t/*jshint newcap: false */\n\t\t\tvar key, val,\n\t\t\t\tvals = QUnit.is( \"array\", obj ) ? [] : {};\n\t\t\tfor ( key in obj ) {\n\t\t\t\tif ( hasOwn.call( obj, key ) ) {\n\t\t\t\t\tval = obj[key];\n\t\t\t\t\tvals[key] = val === Object(val) ? objectValues(val) : val;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn vals;\n\t\t};\n\t\n\t\n\t// Root QUnit object.\n\t// `QUnit` initialized at top of scope\n\tQUnit = {\n\t\n\t\t// call on start of module test to prepend name to all tests\n\t\tmodule: function( name, testEnvironment ) {\n\t\t\tconfig.currentModule = name;\n\t\t\tconfig.currentModuleTestEnvironment = testEnvironment;\n\t\t\tconfig.modules[name] = true;\n\t\t},\n\t\n\t\tasyncTest: function( testName, expected, callback ) {\n\t\t\tif ( arguments.length === 2 ) {\n\t\t\t\tcallback = expected;\n\t\t\t\texpected = null;\n\t\t\t}\n\t\n\t\t\tQUnit.test( testName, expected, callback, true );\n\t\t},\n\t\n\t\ttest: function( testName, expected, callback, async ) {\n\t\t\tvar test,\n\t\t\t\tnameHtml = \"<span class='test-name'>\" + escapeText( testName ) + \"</span>\";\n\t\n\t\t\tif ( arguments.length === 2 ) {\n\t\t\t\tcallback = expected;\n\t\t\t\texpected = null;\n\t\t\t}\n\t\n\t\t\tif ( config.currentModule ) {\n\t\t\t\tnameHtml = \"<span class='module-name'>\" + escapeText( config.currentModule ) + \"</span>: \" + nameHtml;\n\t\t\t}\n\t\n\t\t\ttest = new Test({\n\t\t\t\tnameHtml: nameHtml,\n\t\t\t\ttestName: testName,\n\t\t\t\texpected: expected,\n\t\t\t\tasync: async,\n\t\t\t\tcallback: callback,\n\t\t\t\tmodule: config.currentModule,\n\t\t\t\tmoduleTestEnvironment: config.currentModuleTestEnvironment,\n\t\t\t\tstack: sourceFromStacktrace( 2 )\n\t\t\t});\n\t\n\t\t\tif ( !validTest( test ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\ttest.queue();\n\t\t},\n\t\n\t\t// Specify the number of expected assertions to guarantee that failed test (no assertions are run at all) don't slip through.\n\t\texpect: function( asserts ) {\n\t\t\tif (arguments.length === 1) {\n\t\t\t\tconfig.current.expected = asserts;\n\t\t\t} else {\n\t\t\t\treturn config.current.expected;\n\t\t\t}\n\t\t},\n\t\n\t\tstart: function( count ) {\n\t\t\t// QUnit hasn't been initialized yet.\n\t\t\t// Note: RequireJS (et al) may delay onLoad\n\t\t\tif ( config.semaphore === undefined ) {\n\t\t\t\tQUnit.begin(function() {\n\t\t\t\t\t// This is triggered at the top of QUnit.load, push start() to the event loop, to allow QUnit.load to finish first\n\t\t\t\t\tsetTimeout(function() {\n\t\t\t\t\t\tQUnit.start( count );\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\tconfig.semaphore -= count || 1;\n\t\t\t// don't start until equal number of stop-calls\n\t\t\tif ( config.semaphore > 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// ignore if start is called more often then stop\n\t\t\tif ( config.semaphore < 0 ) {\n\t\t\t\tconfig.semaphore = 0;\n\t\t\t\tQUnit.pushFailure( \"Called start() while already started (QUnit.config.semaphore was 0 already)\", null, sourceFromStacktrace(2) );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// A slight delay, to avoid any current callbacks\n\t\t\tif ( defined.setTimeout ) {\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tif ( config.semaphore > 0 ) {\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\tif ( config.timeout ) {\n\t\t\t\t\t\tclearTimeout( config.timeout );\n\t\t\t\t\t}\n\t\n\t\t\t\t\tconfig.blocking = false;\n\t\t\t\t\tprocess( true );\n\t\t\t\t}, 13);\n\t\t\t} else {\n\t\t\t\tconfig.blocking = false;\n\t\t\t\tprocess( true );\n\t\t\t}\n\t\t},\n\t\n\t\tstop: function( count ) {\n\t\t\tconfig.semaphore += count || 1;\n\t\t\tconfig.blocking = true;\n\t\n\t\t\tif ( config.testTimeout && defined.setTimeout ) {\n\t\t\t\tclearTimeout( config.timeout );\n\t\t\t\tconfig.timeout = setTimeout(function() {\n\t\t\t\t\tQUnit.ok( false, \"Test timed out\" );\n\t\t\t\t\tconfig.semaphore = 1;\n\t\t\t\t\tQUnit.start();\n\t\t\t\t}, config.testTimeout );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t// We use the prototype to distinguish between properties that should\n\t// be exposed as globals (and in exports) and those that shouldn't\n\t(function() {\n\t\tfunction F() {}\n\t\tF.prototype = QUnit;\n\t\tQUnit = new F();\n\t\t// Make F QUnit's constructor so that we can add to the prototype later\n\t\tQUnit.constructor = F;\n\t}());\n\t\n\t/**\n\t * Config object: Maintain internal state\n\t * Later exposed as QUnit.config\n\t * `config` initialized at top of scope\n\t */\n\tconfig = {\n\t\t// The queue of tests to run\n\t\tqueue: [],\n\t\n\t\t// block until document ready\n\t\tblocking: true,\n\t\n\t\t// when enabled, show only failing tests\n\t\t// gets persisted through sessionStorage and can be changed in UI via checkbox\n\t\thidepassed: false,\n\t\n\t\t// by default, run previously failed tests first\n\t\t// very useful in combination with \"Hide passed tests\" checked\n\t\treorder: true,\n\t\n\t\t// by default, modify document.title when suite is done\n\t\taltertitle: true,\n\t\n\t\t// by default, scroll to top of the page when suite is done\n\t\tscrolltop: true,\n\t\n\t\t// when enabled, all tests must call expect()\n\t\trequireExpects: false,\n\t\n\t\t// add checkboxes that are persisted in the query-string\n\t\t// when enabled, the id is set to `true` as a `QUnit.config` property\n\t\turlConfig: [\n\t\t\t{\n\t\t\t\tid: \"noglobals\",\n\t\t\t\tlabel: \"Check for Globals\",\n\t\t\t\ttooltip: \"Enabling this will test if any test introduces new properties on the `window` object. Stored as query-strings.\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tid: \"notrycatch\",\n\t\t\t\tlabel: \"No try-catch\",\n\t\t\t\ttooltip: \"Enabling this will run tests outside of a try-catch block. Makes debugging exceptions in IE reasonable. Stored as query-strings.\"\n\t\t\t}\n\t\t],\n\t\n\t\t// Set of all modules.\n\t\tmodules: {},\n\t\n\t\t// logging callback queues\n\t\tbegin: [],\n\t\tdone: [],\n\t\tlog: [],\n\t\ttestStart: [],\n\t\ttestDone: [],\n\t\tmoduleStart: [],\n\t\tmoduleDone: []\n\t};\n\t\n\t// Initialize more QUnit.config and QUnit.urlParams\n\t(function() {\n\t\tvar i, current,\n\t\t\tlocation = window.location || { search: \"\", protocol: \"file:\" },\n\t\t\tparams = location.search.slice( 1 ).split( \"&\" ),\n\t\t\tlength = params.length,\n\t\t\turlParams = {};\n\t\n\t\tif ( params[ 0 ] ) {\n\t\t\tfor ( i = 0; i < length; i++ ) {\n\t\t\t\tcurrent = params[ i ].split( \"=\" );\n\t\t\t\tcurrent[ 0 ] = decodeURIComponent( current[ 0 ] );\n\t\n\t\t\t\t// allow just a key to turn on a flag, e.g., test.html?noglobals\n\t\t\t\tcurrent[ 1 ] = current[ 1 ] ? decodeURIComponent( current[ 1 ] ) : true;\n\t\t\t\tif ( urlParams[ current[ 0 ] ] ) {\n\t\t\t\t\turlParams[ current[ 0 ] ] = [].concat( urlParams[ current[ 0 ] ], current[ 1 ] );\n\t\t\t\t} else {\n\t\t\t\t\turlParams[ current[ 0 ] ] = current[ 1 ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\tQUnit.urlParams = urlParams;\n\t\n\t\t// String search anywhere in moduleName+testName\n\t\tconfig.filter = urlParams.filter;\n\t\n\t\t// Exact match of the module name\n\t\tconfig.module = urlParams.module;\n\t\n\t\tconfig.testNumber = [];\n\t\tif ( urlParams.testNumber ) {\n\t\n\t\t\t// Ensure that urlParams.testNumber is an array\n\t\t\turlParams.testNumber = [].concat( urlParams.testNumber );\n\t\t\tfor ( i = 0; i < urlParams.testNumber.length; i++ ) {\n\t\t\t\tcurrent = urlParams.testNumber[ i ];\n\t\t\t\tconfig.testNumber.push( parseInt( current, 10 ) );\n\t\t\t}\n\t\t}\n\t\n\t\t// Figure out if we're running the tests from a server or not\n\t\tQUnit.isLocal = location.protocol === \"file:\";\n\t}());\n\t\n\textend( QUnit, {\n\t\n\t\tconfig: config,\n\t\n\t\t// Initialize the configuration options\n\t\tinit: function() {\n\t\t\textend( config, {\n\t\t\t\tstats: { all: 0, bad: 0 },\n\t\t\t\tmoduleStats: { all: 0, bad: 0 },\n\t\t\t\tstarted: +new Date(),\n\t\t\t\tupdateRate: 1000,\n\t\t\t\tblocking: false,\n\t\t\t\tautostart: true,\n\t\t\t\tautorun: false,\n\t\t\t\tfilter: \"\",\n\t\t\t\tqueue: [],\n\t\t\t\tsemaphore: 1\n\t\t\t});\n\t\n\t\t\tvar tests, banner, result,\n\t\t\t\tqunit = id( \"qunit\" );\n\t\n\t\t\tif ( qunit ) {\n\t\t\t\tqunit.innerHTML =\n\t\t\t\t\t\"<h1 id='qunit-header'>\" + escapeText( document.title ) + \"</h1>\" +\n\t\t\t\t\t\"<h2 id='qunit-banner'></h2>\" +\n\t\t\t\t\t\"<div id='qunit-testrunner-toolbar'></div>\" +\n\t\t\t\t\t\"<h2 id='qunit-userAgent'></h2>\" +\n\t\t\t\t\t\"<ol id='qunit-tests'></ol>\";\n\t\t\t}\n\t\n\t\t\ttests = id( \"qunit-tests\" );\n\t\t\tbanner = id( \"qunit-banner\" );\n\t\t\tresult = id( \"qunit-testresult\" );\n\t\n\t\t\tif ( tests ) {\n\t\t\t\ttests.innerHTML = \"\";\n\t\t\t}\n\t\n\t\t\tif ( banner ) {\n\t\t\t\tbanner.className = \"\";\n\t\t\t}\n\t\n\t\t\tif ( result ) {\n\t\t\t\tresult.parentNode.removeChild( result );\n\t\t\t}\n\t\n\t\t\tif ( tests ) {\n\t\t\t\tresult = document.createElement( \"p\" );\n\t\t\t\tresult.id = \"qunit-testresult\";\n\t\t\t\tresult.className = \"result\";\n\t\t\t\ttests.parentNode.insertBefore( result, tests );\n\t\t\t\tresult.innerHTML = \"Running...<br/>&nbsp;\";\n\t\t\t}\n\t\t},\n\t\n\t\t// Resets the test setup. Useful for tests that modify the DOM.\n\t\t/*\n\t\tDEPRECATED: Use multiple tests instead of resetting inside a test.\n\t\tUse testStart or testDone for custom cleanup.\n\t\tThis method will throw an error in 2.0, and will be removed in 2.1\n\t\t*/\n\t\treset: function() {\n\t\t\tvar fixture = id( \"qunit-fixture\" );\n\t\t\tif ( fixture ) {\n\t\t\t\tfixture.innerHTML = config.fixture;\n\t\t\t}\n\t\t},\n\t\n\t\t// Safe object type checking\n\t\tis: function( type, obj ) {\n\t\t\treturn QUnit.objectType( obj ) === type;\n\t\t},\n\t\n\t\tobjectType: function( obj ) {\n\t\t\tif ( typeof obj === \"undefined\" ) {\n\t\t\t\treturn \"undefined\";\n\t\t\t}\n\t\n\t\t\t// Consider: typeof null === object\n\t\t\tif ( obj === null ) {\n\t\t\t\treturn \"null\";\n\t\t\t}\n\t\n\t\t\tvar match = toString.call( obj ).match(/^\\[object\\s(.*)\\]$/),\n\t\t\t\ttype = match && match[1] || \"\";\n\t\n\t\t\tswitch ( type ) {\n\t\t\t\tcase \"Number\":\n\t\t\t\t\tif ( isNaN(obj) ) {\n\t\t\t\t\t\treturn \"nan\";\n\t\t\t\t\t}\n\t\t\t\t\treturn \"number\";\n\t\t\t\tcase \"String\":\n\t\t\t\tcase \"Boolean\":\n\t\t\t\tcase \"Array\":\n\t\t\t\tcase \"Date\":\n\t\t\t\tcase \"RegExp\":\n\t\t\t\tcase \"Function\":\n\t\t\t\t\treturn type.toLowerCase();\n\t\t\t}\n\t\t\tif ( typeof obj === \"object\" ) {\n\t\t\t\treturn \"object\";\n\t\t\t}\n\t\t\treturn undefined;\n\t\t},\n\t\n\t\tpush: function( result, actual, expected, message ) {\n\t\t\tif ( !config.current ) {\n\t\t\t\tthrow new Error( \"assertion outside test context, was \" + sourceFromStacktrace() );\n\t\t\t}\n\t\n\t\t\tvar output, source,\n\t\t\t\tdetails = {\n\t\t\t\t\tmodule: config.current.module,\n\t\t\t\t\tname: config.current.testName,\n\t\t\t\t\tresult: result,\n\t\t\t\t\tmessage: message,\n\t\t\t\t\tactual: actual,\n\t\t\t\t\texpected: expected\n\t\t\t\t};\n\t\n\t\t\tmessage = escapeText( message ) || ( result ? \"okay\" : \"failed\" );\n\t\t\tmessage = \"<span class='test-message'>\" + message + \"</span>\";\n\t\t\toutput = message;\n\t\n\t\t\tif ( !result ) {\n\t\t\t\texpected = escapeText( QUnit.jsDump.parse(expected) );\n\t\t\t\tactual = escapeText( QUnit.jsDump.parse(actual) );\n\t\t\t\toutput += \"<table><tr class='test-expected'><th>Expected: </th><td><pre>\" + expected + \"</pre></td></tr>\";\n\t\n\t\t\t\tif ( actual !== expected ) {\n\t\t\t\t\toutput += \"<tr class='test-actual'><th>Result: </th><td><pre>\" + actual + \"</pre></td></tr>\";\n\t\t\t\t\toutput += \"<tr class='test-diff'><th>Diff: </th><td><pre>\" + QUnit.diff( expected, actual ) + \"</pre></td></tr>\";\n\t\t\t\t}\n\t\n\t\t\t\tsource = sourceFromStacktrace();\n\t\n\t\t\t\tif ( source ) {\n\t\t\t\t\tdetails.source = source;\n\t\t\t\t\toutput += \"<tr class='test-source'><th>Source: </th><td><pre>\" + escapeText( source ) + \"</pre></td></tr>\";\n\t\t\t\t}\n\t\n\t\t\t\toutput += \"</table>\";\n\t\t\t}\n\t\n\t\t\trunLoggingCallbacks( \"log\", QUnit, details );\n\t\n\t\t\tconfig.current.assertions.push({\n\t\t\t\tresult: !!result,\n\t\t\t\tmessage: output\n\t\t\t});\n\t\t},\n\t\n\t\tpushFailure: function( message, source, actual ) {\n\t\t\tif ( !config.current ) {\n\t\t\t\tthrow new Error( \"pushFailure() assertion outside test context, was \" + sourceFromStacktrace(2) );\n\t\t\t}\n\t\n\t\t\tvar output,\n\t\t\t\tdetails = {\n\t\t\t\t\tmodule: config.current.module,\n\t\t\t\t\tname: config.current.testName,\n\t\t\t\t\tresult: false,\n\t\t\t\t\tmessage: message\n\t\t\t\t};\n\t\n\t\t\tmessage = escapeText( message ) || \"error\";\n\t\t\tmessage = \"<span class='test-message'>\" + message + \"</span>\";\n\t\t\toutput = message;\n\t\n\t\t\toutput += \"<table>\";\n\t\n\t\t\tif ( actual ) {\n\t\t\t\toutput += \"<tr class='test-actual'><th>Result: </th><td><pre>\" + escapeText( actual ) + \"</pre></td></tr>\";\n\t\t\t}\n\t\n\t\t\tif ( source ) {\n\t\t\t\tdetails.source = source;\n\t\t\t\toutput += \"<tr class='test-source'><th>Source: </th><td><pre>\" + escapeText( source ) + \"</pre></td></tr>\";\n\t\t\t}\n\t\n\t\t\toutput += \"</table>\";\n\t\n\t\t\trunLoggingCallbacks( \"log\", QUnit, details );\n\t\n\t\t\tconfig.current.assertions.push({\n\t\t\t\tresult: false,\n\t\t\t\tmessage: output\n\t\t\t});\n\t\t},\n\t\n\t\turl: function( params ) {\n\t\t\tparams = extend( extend( {}, QUnit.urlParams ), params );\n\t\t\tvar key,\n\t\t\t\tquerystring = \"?\";\n\t\n\t\t\tfor ( key in params ) {\n\t\t\t\tif ( hasOwn.call( params, key ) ) {\n\t\t\t\t\tquerystring += encodeURIComponent( key ) + \"=\" +\n\t\t\t\t\t\tencodeURIComponent( params[ key ] ) + \"&\";\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn window.location.protocol + \"//\" + window.location.host +\n\t\t\t\twindow.location.pathname + querystring.slice( 0, -1 );\n\t\t},\n\t\n\t\textend: extend,\n\t\tid: id,\n\t\taddEvent: addEvent,\n\t\taddClass: addClass,\n\t\thasClass: hasClass,\n\t\tremoveClass: removeClass\n\t\t// load, equiv, jsDump, diff: Attached later\n\t});\n\t\n\t/**\n\t * @deprecated: Created for backwards compatibility with test runner that set the hook function\n\t * into QUnit.{hook}, instead of invoking it and passing the hook function.\n\t * QUnit.constructor is set to the empty F() above so that we can add to it's prototype here.\n\t * Doing this allows us to tell if the following methods have been overwritten on the actual\n\t * QUnit object.\n\t */\n\textend( QUnit.constructor.prototype, {\n\t\n\t\t// Logging callbacks; all receive a single argument with the listed properties\n\t\t// run test/logs.html for any related changes\n\t\tbegin: registerLoggingCallback( \"begin\" ),\n\t\n\t\t// done: { failed, passed, total, runtime }\n\t\tdone: registerLoggingCallback( \"done\" ),\n\t\n\t\t// log: { result, actual, expected, message }\n\t\tlog: registerLoggingCallback( \"log\" ),\n\t\n\t\t// testStart: { name }\n\t\ttestStart: registerLoggingCallback( \"testStart\" ),\n\t\n\t\t// testDone: { name, failed, passed, total, runtime }\n\t\ttestDone: registerLoggingCallback( \"testDone\" ),\n\t\n\t\t// moduleStart: { name }\n\t\tmoduleStart: registerLoggingCallback( \"moduleStart\" ),\n\t\n\t\t// moduleDone: { name, failed, passed, total }\n\t\tmoduleDone: registerLoggingCallback( \"moduleDone\" )\n\t});\n\t\n\tif ( !defined.document || document.readyState === \"complete\" ) {\n\t\tconfig.autorun = true;\n\t}\n\t\n\tQUnit.load = function() {\n\t\trunLoggingCallbacks( \"begin\", QUnit, {} );\n\t\n\t\t// Initialize the config, saving the execution queue\n\t\tvar banner, filter, i, j, label, len, main, ol, toolbar, val, selection,\n\t\t\turlConfigContainer, moduleFilter, userAgent,\n\t\t\tnumModules = 0,\n\t\t\tmoduleNames = [],\n\t\t\tmoduleFilterHtml = \"\",\n\t\t\turlConfigHtml = \"\",\n\t\t\toldconfig = extend( {}, config );\n\t\n\t\tQUnit.init();\n\t\textend(config, oldconfig);\n\t\n\t\tconfig.blocking = false;\n\t\n\t\tlen = config.urlConfig.length;\n\t\n\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\tval = config.urlConfig[i];\n\t\t\tif ( typeof val === \"string\" ) {\n\t\t\t\tval = {\n\t\t\t\t\tid: val,\n\t\t\t\t\tlabel: val\n\t\t\t\t};\n\t\t\t}\n\t\t\tconfig[ val.id ] = QUnit.urlParams[ val.id ];\n\t\t\tif ( !val.value || typeof val.value === \"string\" ) {\n\t\t\t\turlConfigHtml += \"<input id='qunit-urlconfig-\" + escapeText( val.id ) +\n\t\t\t\t\t\"' name='\" + escapeText( val.id ) +\n\t\t\t\t\t\"' type='checkbox'\" +\n\t\t\t\t\t( val.value ? \" value='\" + escapeText( val.value ) + \"'\" : \"\" ) +\n\t\t\t\t\t( config[ val.id ] ? \" checked='checked'\" : \"\" ) +\n\t\t\t\t\t\" title='\" + escapeText( val.tooltip ) +\n\t\t\t\t\t\"'><label for='qunit-urlconfig-\" + escapeText( val.id ) +\n\t\t\t\t\t\"' title='\" + escapeText( val.tooltip ) + \"'>\" + val.label + \"</label>\";\n\t\t\t} else {\n\t\t\t\turlConfigHtml += \"<label for='qunit-urlconfig-\" + escapeText( val.id ) +\n\t\t\t\t\t\"' title='\" + escapeText( val.tooltip ) +\n\t\t\t\t\t\"'>\" + val.label +\n\t\t\t\t\t\": </label><select id='qunit-urlconfig-\" + escapeText( val.id ) +\n\t\t\t\t\t\"' name='\" + escapeText( val.id ) +\n\t\t\t\t\t\"' title='\" + escapeText( val.tooltip ) +\n\t\t\t\t\t\"'><option></option>\";\n\t\t\t\tselection = false;\n\t\t\t\tif ( QUnit.is( \"array\", val.value ) ) {\n\t\t\t\t\tfor ( j = 0; j < val.value.length; j++ ) {\n\t\t\t\t\t\turlConfigHtml += \"<option value='\" + escapeText( val.value[j] ) + \"'\" +\n\t\t\t\t\t\t\t( config[ val.id ] === val.value[j] ?\n\t\t\t\t\t\t\t\t(selection = true) && \" selected='selected'\" :\n\t\t\t\t\t\t\t\t\"\" ) +\n\t\t\t\t\t\t\t\">\" + escapeText( val.value[j] ) + \"</option>\";\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor ( j in val.value ) {\n\t\t\t\t\t\tif ( hasOwn.call( val.value, j ) ) {\n\t\t\t\t\t\t\turlConfigHtml += \"<option value='\" + escapeText( j ) + \"'\" +\n\t\t\t\t\t\t\t\t( config[ val.id ] === j ?\n\t\t\t\t\t\t\t\t\t(selection = true) && \" selected='selected'\" :\n\t\t\t\t\t\t\t\t\t\"\" ) +\n\t\t\t\t\t\t\t\t\">\" + escapeText( val.value[j] ) + \"</option>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif ( config[ val.id ] && !selection ) {\n\t\t\t\t\turlConfigHtml += \"<option value='\" + escapeText( config[ val.id ] ) +\n\t\t\t\t\t\t\"' selected='selected' disabled='disabled'>\" +\n\t\t\t\t\t\tescapeText( config[ val.id ] ) +\n\t\t\t\t\t\t\"</option>\";\n\t\t\t\t}\n\t\t\t\turlConfigHtml += \"</select>\";\n\t\t\t}\n\t\t}\n\t\tfor ( i in config.modules ) {\n\t\t\tif ( config.modules.hasOwnProperty( i ) ) {\n\t\t\t\tmoduleNames.push(i);\n\t\t\t}\n\t\t}\n\t\tnumModules = moduleNames.length;\n\t\tmoduleNames.sort( function( a, b ) {\n\t\t\treturn a.localeCompare( b );\n\t\t});\n\t\tmoduleFilterHtml += \"<label for='qunit-modulefilter'>Module: </label><select id='qunit-modulefilter' name='modulefilter'><option value='' \" +\n\t\t\t( config.module === undefined  ? \"selected='selected'\" : \"\" ) +\n\t\t\t\">< All Modules ></option>\";\n\t\n\t\n\t\tfor ( i = 0; i < numModules; i++) {\n\t\t\t\tmoduleFilterHtml += \"<option value='\" + escapeText( encodeURIComponent(moduleNames[i]) ) + \"' \" +\n\t\t\t\t\t( config.module === moduleNames[i] ? \"selected='selected'\" : \"\" ) +\n\t\t\t\t\t\">\" + escapeText(moduleNames[i]) + \"</option>\";\n\t\t}\n\t\tmoduleFilterHtml += \"</select>\";\n\t\n\t\t// `userAgent` initialized at top of scope\n\t\tuserAgent = id( \"qunit-userAgent\" );\n\t\tif ( userAgent ) {\n\t\t\tuserAgent.innerHTML = navigator.userAgent;\n\t\t}\n\t\n\t\t// `banner` initialized at top of scope\n\t\tbanner = id( \"qunit-header\" );\n\t\tif ( banner ) {\n\t\t\tbanner.innerHTML = \"<a href='\" + QUnit.url({ filter: undefined, module: undefined, testNumber: undefined }) + \"'>\" + banner.innerHTML + \"</a> \";\n\t\t}\n\t\n\t\t// `toolbar` initialized at top of scope\n\t\ttoolbar = id( \"qunit-testrunner-toolbar\" );\n\t\tif ( toolbar ) {\n\t\t\t// `filter` initialized at top of scope\n\t\t\tfilter = document.createElement( \"input\" );\n\t\t\tfilter.type = \"checkbox\";\n\t\t\tfilter.id = \"qunit-filter-pass\";\n\t\n\t\t\taddEvent( filter, \"click\", function() {\n\t\t\t\tvar tmp,\n\t\t\t\t\tol = id( \"qunit-tests\" );\n\t\n\t\t\t\tif ( filter.checked ) {\n\t\t\t\t\tol.className = ol.className + \" hidepass\";\n\t\t\t\t} else {\n\t\t\t\t\ttmp = \" \" + ol.className.replace( /[\\n\\t\\r]/g, \" \" ) + \" \";\n\t\t\t\t\tol.className = tmp.replace( / hidepass /, \" \" );\n\t\t\t\t}\n\t\t\t\tif ( defined.sessionStorage ) {\n\t\t\t\t\tif (filter.checked) {\n\t\t\t\t\t\tsessionStorage.setItem( \"qunit-filter-passed-tests\", \"true\" );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsessionStorage.removeItem( \"qunit-filter-passed-tests\" );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t\tif ( config.hidepassed || defined.sessionStorage && sessionStorage.getItem( \"qunit-filter-passed-tests\" ) ) {\n\t\t\t\tfilter.checked = true;\n\t\t\t\t// `ol` initialized at top of scope\n\t\t\t\tol = id( \"qunit-tests\" );\n\t\t\t\tol.className = ol.className + \" hidepass\";\n\t\t\t}\n\t\t\ttoolbar.appendChild( filter );\n\t\n\t\t\t// `label` initialized at top of scope\n\t\t\tlabel = document.createElement( \"label\" );\n\t\t\tlabel.setAttribute( \"for\", \"qunit-filter-pass\" );\n\t\t\tlabel.setAttribute( \"title\", \"Only show tests and assertions that fail. Stored in sessionStorage.\" );\n\t\t\tlabel.innerHTML = \"Hide passed tests\";\n\t\t\ttoolbar.appendChild( label );\n\t\n\t\t\turlConfigContainer = document.createElement(\"span\");\n\t\t\turlConfigContainer.innerHTML = urlConfigHtml;\n\t\t\t// For oldIE support:\n\t\t\t// * Add handlers to the individual elements instead of the container\n\t\t\t// * Use \"click\" instead of \"change\" for checkboxes\n\t\t\t// * Fallback from event.target to event.srcElement\n\t\t\taddEvents( urlConfigContainer.getElementsByTagName(\"input\"), \"click\", function( event ) {\n\t\t\t\tvar params = {},\n\t\t\t\t\ttarget = event.target || event.srcElement;\n\t\t\t\tparams[ target.name ] = target.checked ?\n\t\t\t\t\ttarget.defaultValue || true :\n\t\t\t\t\tundefined;\n\t\t\t\twindow.location = QUnit.url( params );\n\t\t\t});\n\t\t\taddEvents( urlConfigContainer.getElementsByTagName(\"select\"), \"change\", function( event ) {\n\t\t\t\tvar params = {},\n\t\t\t\t\ttarget = event.target || event.srcElement;\n\t\t\t\tparams[ target.name ] = target.options[ target.selectedIndex ].value || undefined;\n\t\t\t\twindow.location = QUnit.url( params );\n\t\t\t});\n\t\t\ttoolbar.appendChild( urlConfigContainer );\n\t\n\t\t\tif (numModules > 1) {\n\t\t\t\tmoduleFilter = document.createElement( \"span\" );\n\t\t\t\tmoduleFilter.setAttribute( \"id\", \"qunit-modulefilter-container\" );\n\t\t\t\tmoduleFilter.innerHTML = moduleFilterHtml;\n\t\t\t\taddEvent( moduleFilter.lastChild, \"change\", function() {\n\t\t\t\t\tvar selectBox = moduleFilter.getElementsByTagName(\"select\")[0],\n\t\t\t\t\t\tselectedModule = decodeURIComponent(selectBox.options[selectBox.selectedIndex].value);\n\t\n\t\t\t\t\twindow.location = QUnit.url({\n\t\t\t\t\t\tmodule: ( selectedModule === \"\" ) ? undefined : selectedModule,\n\t\t\t\t\t\t// Remove any existing filters\n\t\t\t\t\t\tfilter: undefined,\n\t\t\t\t\t\ttestNumber: undefined\n\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t\ttoolbar.appendChild(moduleFilter);\n\t\t\t}\n\t\t}\n\t\n\t\t// `main` initialized at top of scope\n\t\tmain = id( \"qunit-fixture\" );\n\t\tif ( main ) {\n\t\t\tconfig.fixture = main.innerHTML;\n\t\t}\n\t\n\t\tif ( config.autostart ) {\n\t\t\tQUnit.start();\n\t\t}\n\t};\n\t\n\tif ( defined.document ) {\n\t\taddEvent( window, \"load\", QUnit.load );\n\t}\n\t\n\t// `onErrorFnPrev` initialized at top of scope\n\t// Preserve other handlers\n\tonErrorFnPrev = window.onerror;\n\t\n\t// Cover uncaught exceptions\n\t// Returning true will suppress the default browser handler,\n\t// returning false will let it run.\n\twindow.onerror = function ( error, filePath, linerNr ) {\n\t\tvar ret = false;\n\t\tif ( onErrorFnPrev ) {\n\t\t\tret = onErrorFnPrev( error, filePath, linerNr );\n\t\t}\n\t\n\t\t// Treat return value as window.onerror itself does,\n\t\t// Only do our handling if not suppressed.\n\t\tif ( ret !== true ) {\n\t\t\tif ( QUnit.config.current ) {\n\t\t\t\tif ( QUnit.config.current.ignoreGlobalErrors ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t\tQUnit.pushFailure( error, filePath + \":\" + linerNr );\n\t\t\t} else {\n\t\t\t\tQUnit.test( \"global failure\", extend( function() {\n\t\t\t\t\tQUnit.pushFailure( error, filePath + \":\" + linerNr );\n\t\t\t\t}, { validTest: validTest } ) );\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\t\n\t\treturn ret;\n\t};\n\t\n\tfunction done() {\n\t\tconfig.autorun = true;\n\t\n\t\t// Log the last module results\n\t\tif ( config.previousModule ) {\n\t\t\trunLoggingCallbacks( \"moduleDone\", QUnit, {\n\t\t\t\tname: config.previousModule,\n\t\t\t\tfailed: config.moduleStats.bad,\n\t\t\t\tpassed: config.moduleStats.all - config.moduleStats.bad,\n\t\t\t\ttotal: config.moduleStats.all\n\t\t\t});\n\t\t}\n\t\tdelete config.previousModule;\n\t\n\t\tvar i, key,\n\t\t\tbanner = id( \"qunit-banner\" ),\n\t\t\ttests = id( \"qunit-tests\" ),\n\t\t\truntime = +new Date() - config.started,\n\t\t\tpassed = config.stats.all - config.stats.bad,\n\t\t\thtml = [\n\t\t\t\t\"Tests completed in \",\n\t\t\t\truntime,\n\t\t\t\t\" milliseconds.<br/>\",\n\t\t\t\t\"<span class='passed'>\",\n\t\t\t\tpassed,\n\t\t\t\t\"</span> assertions of <span class='total'>\",\n\t\t\t\tconfig.stats.all,\n\t\t\t\t\"</span> passed, <span class='failed'>\",\n\t\t\t\tconfig.stats.bad,\n\t\t\t\t\"</span> failed.\"\n\t\t\t].join( \"\" );\n\t\n\t\tif ( banner ) {\n\t\t\tbanner.className = ( config.stats.bad ? \"qunit-fail\" : \"qunit-pass\" );\n\t\t}\n\t\n\t\tif ( tests ) {\n\t\t\tid( \"qunit-testresult\" ).innerHTML = html;\n\t\t}\n\t\n\t\tif ( config.altertitle && defined.document && document.title ) {\n\t\t\t// show ✖ for good, ✔ for bad suite result in title\n\t\t\t// use escape sequences in case file gets loaded with non-utf-8-charset\n\t\t\tdocument.title = [\n\t\t\t\t( config.stats.bad ? \"\\u2716\" : \"\\u2714\" ),\n\t\t\t\tdocument.title.replace( /^[\\u2714\\u2716] /i, \"\" )\n\t\t\t].join( \" \" );\n\t\t}\n\t\n\t\t// clear own sessionStorage items if all tests passed\n\t\tif ( config.reorder && defined.sessionStorage && config.stats.bad === 0 ) {\n\t\t\t// `key` & `i` initialized at top of scope\n\t\t\tfor ( i = 0; i < sessionStorage.length; i++ ) {\n\t\t\t\tkey = sessionStorage.key( i++ );\n\t\t\t\tif ( key.indexOf( \"qunit-test-\" ) === 0 ) {\n\t\t\t\t\tsessionStorage.removeItem( key );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// scroll back to top to show results\n\t\tif ( config.scrolltop && window.scrollTo ) {\n\t\t\twindow.scrollTo(0, 0);\n\t\t}\n\t\n\t\trunLoggingCallbacks( \"done\", QUnit, {\n\t\t\tfailed: config.stats.bad,\n\t\t\tpassed: passed,\n\t\t\ttotal: config.stats.all,\n\t\t\truntime: runtime\n\t\t});\n\t}\n\t\n\t/** @return Boolean: true if this test should be ran */\n\tfunction validTest( test ) {\n\t\tvar include,\n\t\t\tfilter = config.filter && config.filter.toLowerCase(),\n\t\t\tmodule = config.module && config.module.toLowerCase(),\n\t\t\tfullName = ( test.module + \": \" + test.testName ).toLowerCase();\n\t\n\t\t// Internally-generated tests are always valid\n\t\tif ( test.callback && test.callback.validTest === validTest ) {\n\t\t\tdelete test.callback.validTest;\n\t\t\treturn true;\n\t\t}\n\t\n\t\tif ( config.testNumber.length > 0 ) {\n\t\t\tif ( inArray( test.testNumber, config.testNumber ) < 0 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\n\t\tif ( module && ( !test.module || test.module.toLowerCase() !== module ) ) {\n\t\t\treturn false;\n\t\t}\n\t\n\t\tif ( !filter ) {\n\t\t\treturn true;\n\t\t}\n\t\n\t\tinclude = filter.charAt( 0 ) !== \"!\";\n\t\tif ( !include ) {\n\t\t\tfilter = filter.slice( 1 );\n\t\t}\n\t\n\t\t// If the filter matches, we need to honour include\n\t\tif ( fullName.indexOf( filter ) !== -1 ) {\n\t\t\treturn include;\n\t\t}\n\t\n\t\t// Otherwise, do the opposite\n\t\treturn !include;\n\t}\n\t\n\t// so far supports only Firefox, Chrome and Opera (buggy), Safari (for real exceptions)\n\t// Later Safari and IE10 are supposed to support error.stack as well\n\t// See also https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error/Stack\n\tfunction extractStacktrace( e, offset ) {\n\t\toffset = offset === undefined ? 3 : offset;\n\t\n\t\tvar stack, include, i;\n\t\n\t\tif ( e.stacktrace ) {\n\t\t\t// Opera\n\t\t\treturn e.stacktrace.split( \"\\n\" )[ offset + 3 ];\n\t\t} else if ( e.stack ) {\n\t\t\t// Firefox, Chrome\n\t\t\tstack = e.stack.split( \"\\n\" );\n\t\t\tif (/^error$/i.test( stack[0] ) ) {\n\t\t\t\tstack.shift();\n\t\t\t}\n\t\t\tif ( fileName ) {\n\t\t\t\tinclude = [];\n\t\t\t\tfor ( i = offset; i < stack.length; i++ ) {\n\t\t\t\t\tif ( stack[ i ].indexOf( fileName ) !== -1 ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t\tinclude.push( stack[ i ] );\n\t\t\t\t}\n\t\t\t\tif ( include.length ) {\n\t\t\t\t\treturn include.join( \"\\n\" );\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn stack[ offset ];\n\t\t} else if ( e.sourceURL ) {\n\t\t\t// Safari, PhantomJS\n\t\t\t// hopefully one day Safari provides actual stacktraces\n\t\t\t// exclude useless self-reference for generated Error objects\n\t\t\tif ( /qunit.js$/.test( e.sourceURL ) ) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\t// for actual exceptions, this is useful\n\t\t\treturn e.sourceURL + \":\" + e.line;\n\t\t}\n\t}\n\tfunction sourceFromStacktrace( offset ) {\n\t\ttry {\n\t\t\tthrow new Error();\n\t\t} catch ( e ) {\n\t\t\treturn extractStacktrace( e, offset );\n\t\t}\n\t}\n\t\n\t/**\n\t * Escape text for attribute or text content.\n\t */\n\tfunction escapeText( s ) {\n\t\tif ( !s ) {\n\t\t\treturn \"\";\n\t\t}\n\t\ts = s + \"\";\n\t\t// Both single quotes and double quotes (for attributes)\n\t\treturn s.replace( /['\"<>&]/g, function( s ) {\n\t\t\tswitch( s ) {\n\t\t\t\tcase \"'\":\n\t\t\t\t\treturn \"&#039;\";\n\t\t\t\tcase \"\\\"\":\n\t\t\t\t\treturn \"&quot;\";\n\t\t\t\tcase \"<\":\n\t\t\t\t\treturn \"&lt;\";\n\t\t\t\tcase \">\":\n\t\t\t\t\treturn \"&gt;\";\n\t\t\t\tcase \"&\":\n\t\t\t\t\treturn \"&amp;\";\n\t\t\t}\n\t\t});\n\t}\n\t\n\tfunction synchronize( callback, last ) {\n\t\tconfig.queue.push( callback );\n\t\n\t\tif ( config.autorun && !config.blocking ) {\n\t\t\tprocess( last );\n\t\t}\n\t}\n\t\n\tfunction process( last ) {\n\t\tfunction next() {\n\t\t\tprocess( last );\n\t\t}\n\t\tvar start = new Date().getTime();\n\t\tconfig.depth = config.depth ? config.depth + 1 : 1;\n\t\n\t\twhile ( config.queue.length && !config.blocking ) {\n\t\t\tif ( !defined.setTimeout || config.updateRate <= 0 || ( ( new Date().getTime() - start ) < config.updateRate ) ) {\n\t\t\t\tconfig.queue.shift()();\n\t\t\t} else {\n\t\t\t\tsetTimeout( next, 13 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tconfig.depth--;\n\t\tif ( last && !config.blocking && !config.queue.length && config.depth === 0 ) {\n\t\t\tdone();\n\t\t}\n\t}\n\t\n\tfunction saveGlobal() {\n\t\tconfig.pollution = [];\n\t\n\t\tif ( config.noglobals ) {\n\t\t\tfor ( var key in window ) {\n\t\t\t\tif ( hasOwn.call( window, key ) ) {\n\t\t\t\t\t// in Opera sometimes DOM element ids show up here, ignore them\n\t\t\t\t\tif ( /^qunit-test-output/.test( key ) ) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\t\t\t\t\tconfig.pollution.push( key );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\t\n\tfunction checkPollution() {\n\t\tvar newGlobals,\n\t\t\tdeletedGlobals,\n\t\t\told = config.pollution;\n\t\n\t\tsaveGlobal();\n\t\n\t\tnewGlobals = diff( config.pollution, old );\n\t\tif ( newGlobals.length > 0 ) {\n\t\t\tQUnit.pushFailure( \"Introduced global variable(s): \" + newGlobals.join(\", \") );\n\t\t}\n\t\n\t\tdeletedGlobals = diff( old, config.pollution );\n\t\tif ( deletedGlobals.length > 0 ) {\n\t\t\tQUnit.pushFailure( \"Deleted global variable(s): \" + deletedGlobals.join(\", \") );\n\t\t}\n\t}\n\t\n\t// returns a new Array with the elements that are in a but not in b\n\tfunction diff( a, b ) {\n\t\tvar i, j,\n\t\t\tresult = a.slice();\n\t\n\t\tfor ( i = 0; i < result.length; i++ ) {\n\t\t\tfor ( j = 0; j < b.length; j++ ) {\n\t\t\t\tif ( result[i] === b[j] ) {\n\t\t\t\t\tresult.splice( i, 1 );\n\t\t\t\t\ti--;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\t\n\tfunction extend( a, b ) {\n\t\tfor ( var prop in b ) {\n\t\t\tif ( hasOwn.call( b, prop ) ) {\n\t\t\t\t// Avoid \"Member not found\" error in IE8 caused by messing with window.constructor\n\t\t\t\tif ( !( prop === \"constructor\" && a === window ) ) {\n\t\t\t\t\tif ( b[ prop ] === undefined ) {\n\t\t\t\t\t\tdelete a[ prop ];\n\t\t\t\t\t} else {\n\t\t\t\t\t\ta[ prop ] = b[ prop ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn a;\n\t}\n\t\n\t/**\n\t * @param {HTMLElement} elem\n\t * @param {string} type\n\t * @param {Function} fn\n\t */\n\tfunction addEvent( elem, type, fn ) {\n\t\tif ( elem.addEventListener ) {\n\t\n\t\t\t// Standards-based browsers\n\t\t\telem.addEventListener( type, fn, false );\n\t\t} else if ( elem.attachEvent ) {\n\t\n\t\t\t// support: IE <9\n\t\t\telem.attachEvent( \"on\" + type, fn );\n\t\t} else {\n\t\n\t\t\t// Caller must ensure support for event listeners is present\n\t\t\tthrow new Error( \"addEvent() was called in a context without event listener support\" );\n\t\t}\n\t}\n\t\n\t/**\n\t * @param {Array|NodeList} elems\n\t * @param {string} type\n\t * @param {Function} fn\n\t */\n\tfunction addEvents( elems, type, fn ) {\n\t\tvar i = elems.length;\n\t\twhile ( i-- ) {\n\t\t\taddEvent( elems[i], type, fn );\n\t\t}\n\t}\n\t\n\tfunction hasClass( elem, name ) {\n\t\treturn (\" \" + elem.className + \" \").indexOf(\" \" + name + \" \") > -1;\n\t}\n\t\n\tfunction addClass( elem, name ) {\n\t\tif ( !hasClass( elem, name ) ) {\n\t\t\telem.className += (elem.className ? \" \" : \"\") + name;\n\t\t}\n\t}\n\t\n\tfunction removeClass( elem, name ) {\n\t\tvar set = \" \" + elem.className + \" \";\n\t\t// Class name may appear multiple times\n\t\twhile ( set.indexOf(\" \" + name + \" \") > -1 ) {\n\t\t\tset = set.replace(\" \" + name + \" \" , \" \");\n\t\t}\n\t\t// If possible, trim it for prettiness, but not necessarily\n\t\telem.className = typeof set.trim === \"function\" ? set.trim() : set.replace(/^\\s+|\\s+$/g, \"\");\n\t}\n\t\n\tfunction id( name ) {\n\t\treturn defined.document && document.getElementById && document.getElementById( name );\n\t}\n\t\n\tfunction registerLoggingCallback( key ) {\n\t\treturn function( callback ) {\n\t\t\tconfig[key].push( callback );\n\t\t};\n\t}\n\t\n\t// Supports deprecated method of completely overwriting logging callbacks\n\tfunction runLoggingCallbacks( key, scope, args ) {\n\t\tvar i, callbacks;\n\t\tif ( QUnit.hasOwnProperty( key ) ) {\n\t\t\tQUnit[ key ].call(scope, args );\n\t\t} else {\n\t\t\tcallbacks = config[ key ];\n\t\t\tfor ( i = 0; i < callbacks.length; i++ ) {\n\t\t\t\tcallbacks[ i ].call( scope, args );\n\t\t\t}\n\t\t}\n\t}\n\t\n\t// from jquery.js\n\tfunction inArray( elem, array ) {\n\t\tif ( array.indexOf ) {\n\t\t\treturn array.indexOf( elem );\n\t\t}\n\t\n\t\tfor ( var i = 0, length = array.length; i < length; i++ ) {\n\t\t\tif ( array[ i ] === elem ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\t\n\t\treturn -1;\n\t}\n\t\n\tfunction Test( settings ) {\n\t\textend( this, settings );\n\t\tthis.assertions = [];\n\t\tthis.testNumber = ++Test.count;\n\t}\n\t\n\tTest.count = 0;\n\t\n\tTest.prototype = {\n\t\tinit: function() {\n\t\t\tvar a, b, li,\n\t\t\t\ttests = id( \"qunit-tests\" );\n\t\n\t\t\tif ( tests ) {\n\t\t\t\tb = document.createElement( \"strong\" );\n\t\t\t\tb.innerHTML = this.nameHtml;\n\t\n\t\t\t\t// `a` initialized at top of scope\n\t\t\t\ta = document.createElement( \"a\" );\n\t\t\t\ta.innerHTML = \"Rerun\";\n\t\t\t\ta.href = QUnit.url({ testNumber: this.testNumber });\n\t\n\t\t\t\tli = document.createElement( \"li\" );\n\t\t\t\tli.appendChild( b );\n\t\t\t\tli.appendChild( a );\n\t\t\t\tli.className = \"running\";\n\t\t\t\tli.id = this.id = \"qunit-test-output\" + testId++;\n\t\n\t\t\t\ttests.appendChild( li );\n\t\t\t}\n\t\t},\n\t\tsetup: function() {\n\t\t\tif (\n\t\t\t\t// Emit moduleStart when we're switching from one module to another\n\t\t\t\tthis.module !== config.previousModule ||\n\t\t\t\t\t// They could be equal (both undefined) but if the previousModule property doesn't\n\t\t\t\t\t// yet exist it means this is the first test in a suite that isn't wrapped in a\n\t\t\t\t\t// module, in which case we'll just emit a moduleStart event for 'undefined'.\n\t\t\t\t\t// Without this, reporters can get testStart before moduleStart  which is a problem.\n\t\t\t\t\t!hasOwn.call( config, \"previousModule\" )\n\t\t\t) {\n\t\t\t\tif ( hasOwn.call( config, \"previousModule\" ) ) {\n\t\t\t\t\trunLoggingCallbacks( \"moduleDone\", QUnit, {\n\t\t\t\t\t\tname: config.previousModule,\n\t\t\t\t\t\tfailed: config.moduleStats.bad,\n\t\t\t\t\t\tpassed: config.moduleStats.all - config.moduleStats.bad,\n\t\t\t\t\t\ttotal: config.moduleStats.all\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tconfig.previousModule = this.module;\n\t\t\t\tconfig.moduleStats = { all: 0, bad: 0 };\n\t\t\t\trunLoggingCallbacks( \"moduleStart\", QUnit, {\n\t\t\t\t\tname: this.module\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\tconfig.current = this;\n\t\n\t\t\tthis.testEnvironment = extend({\n\t\t\t\tsetup: function() {},\n\t\t\t\tteardown: function() {}\n\t\t\t}, this.moduleTestEnvironment );\n\t\n\t\t\tthis.started = +new Date();\n\t\t\trunLoggingCallbacks( \"testStart\", QUnit, {\n\t\t\t\tname: this.testName,\n\t\t\t\tmodule: this.module\n\t\t\t});\n\t\n\t\t\t/*jshint camelcase:false */\n\t\n\t\n\t\t\t/**\n\t\t\t * Expose the current test environment.\n\t\t\t *\n\t\t\t * @deprecated since 1.12.0: Use QUnit.config.current.testEnvironment instead.\n\t\t\t */\n\t\t\tQUnit.current_testEnvironment = this.testEnvironment;\n\t\n\t\t\t/*jshint camelcase:true */\n\t\n\t\t\tif ( !config.pollution ) {\n\t\t\t\tsaveGlobal();\n\t\t\t}\n\t\t\tif ( config.notrycatch ) {\n\t\t\t\tthis.testEnvironment.setup.call( this.testEnvironment, QUnit.assert );\n\t\t\t\treturn;\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tthis.testEnvironment.setup.call( this.testEnvironment, QUnit.assert );\n\t\t\t} catch( e ) {\n\t\t\t\tQUnit.pushFailure( \"Setup failed on \" + this.testName + \": \" + ( e.message || e ), extractStacktrace( e, 1 ) );\n\t\t\t}\n\t\t},\n\t\trun: function() {\n\t\t\tconfig.current = this;\n\t\n\t\t\tvar running = id( \"qunit-testresult\" );\n\t\n\t\t\tif ( running ) {\n\t\t\t\trunning.innerHTML = \"Running: <br/>\" + this.nameHtml;\n\t\t\t}\n\t\n\t\t\tif ( this.async ) {\n\t\t\t\tQUnit.stop();\n\t\t\t}\n\t\n\t\t\tthis.callbackStarted = +new Date();\n\t\n\t\t\tif ( config.notrycatch ) {\n\t\t\t\tthis.callback.call( this.testEnvironment, QUnit.assert );\n\t\t\t\tthis.callbackRuntime = +new Date() - this.callbackStarted;\n\t\t\t\treturn;\n\t\t\t}\n\t\n\t\t\ttry {\n\t\t\t\tthis.callback.call( this.testEnvironment, QUnit.assert );\n\t\t\t\tthis.callbackRuntime = +new Date() - this.callbackStarted;\n\t\t\t} catch( e ) {\n\t\t\t\tthis.callbackRuntime = +new Date() - this.callbackStarted;\n\t\n\t\t\t\tQUnit.pushFailure( \"Died on test #\" + (this.assertions.length + 1) + \" \" + this.stack + \": \" + ( e.message || e ), extractStacktrace( e, 0 ) );\n\t\t\t\t// else next test will carry the responsibility\n\t\t\t\tsaveGlobal();\n\t\n\t\t\t\t// Restart the tests if they're blocking\n\t\t\t\tif ( config.blocking ) {\n\t\t\t\t\tQUnit.start();\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\tteardown: function() {\n\t\t\tconfig.current = this;\n\t\t\tif ( config.notrycatch ) {\n\t\t\t\tif ( typeof this.callbackRuntime === \"undefined\" ) {\n\t\t\t\t\tthis.callbackRuntime = +new Date() - this.callbackStarted;\n\t\t\t\t}\n\t\t\t\tthis.testEnvironment.teardown.call( this.testEnvironment, QUnit.assert );\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\ttry {\n\t\t\t\t\tthis.testEnvironment.teardown.call( this.testEnvironment, QUnit.assert );\n\t\t\t\t} catch( e ) {\n\t\t\t\t\tQUnit.pushFailure( \"Teardown failed on \" + this.testName + \": \" + ( e.message || e ), extractStacktrace( e, 1 ) );\n\t\t\t\t}\n\t\t\t}\n\t\t\tcheckPollution();\n\t\t},\n\t\tfinish: function() {\n\t\t\tconfig.current = this;\n\t\t\tif ( config.requireExpects && this.expected === null ) {\n\t\t\t\tQUnit.pushFailure( \"Expected number of assertions to be defined, but expect() was not called.\", this.stack );\n\t\t\t} else if ( this.expected !== null && this.expected !== this.assertions.length ) {\n\t\t\t\tQUnit.pushFailure( \"Expected \" + this.expected + \" assertions, but \" + this.assertions.length + \" were run\", this.stack );\n\t\t\t} else if ( this.expected === null && !this.assertions.length ) {\n\t\t\t\tQUnit.pushFailure( \"Expected at least one assertion, but none were run - call expect(0) to accept zero assertions.\", this.stack );\n\t\t\t}\n\t\n\t\t\tvar i, assertion, a, b, time, li, ol,\n\t\t\t\ttest = this,\n\t\t\t\tgood = 0,\n\t\t\t\tbad = 0,\n\t\t\t\ttests = id( \"qunit-tests\" );\n\t\n\t\t\tthis.runtime = +new Date() - this.started;\n\t\t\tconfig.stats.all += this.assertions.length;\n\t\t\tconfig.moduleStats.all += this.assertions.length;\n\t\n\t\t\tif ( tests ) {\n\t\t\t\tol = document.createElement( \"ol\" );\n\t\t\t\tol.className = \"qunit-assert-list\";\n\t\n\t\t\t\tfor ( i = 0; i < this.assertions.length; i++ ) {\n\t\t\t\t\tassertion = this.assertions[i];\n\t\n\t\t\t\t\tli = document.createElement( \"li\" );\n\t\t\t\t\tli.className = assertion.result ? \"pass\" : \"fail\";\n\t\t\t\t\tli.innerHTML = assertion.message || ( assertion.result ? \"okay\" : \"failed\" );\n\t\t\t\t\tol.appendChild( li );\n\t\n\t\t\t\t\tif ( assertion.result ) {\n\t\t\t\t\t\tgood++;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbad++;\n\t\t\t\t\t\tconfig.stats.bad++;\n\t\t\t\t\t\tconfig.moduleStats.bad++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\t// store result when possible\n\t\t\t\tif ( QUnit.config.reorder && defined.sessionStorage ) {\n\t\t\t\t\tif ( bad ) {\n\t\t\t\t\t\tsessionStorage.setItem( \"qunit-test-\" + this.module + \"-\" + this.testName, bad );\n\t\t\t\t\t} else {\n\t\t\t\t\t\tsessionStorage.removeItem( \"qunit-test-\" + this.module + \"-\" + this.testName );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tif ( bad === 0 ) {\n\t\t\t\t\taddClass( ol, \"qunit-collapsed\" );\n\t\t\t\t}\n\t\n\t\t\t\t// `b` initialized at top of scope\n\t\t\t\tb = document.createElement( \"strong\" );\n\t\t\t\tb.innerHTML = this.nameHtml + \" <b class='counts'>(<b class='failed'>\" + bad + \"</b>, <b class='passed'>\" + good + \"</b>, \" + this.assertions.length + \")</b>\";\n\t\n\t\t\t\taddEvent(b, \"click\", function() {\n\t\t\t\t\tvar next = b.parentNode.lastChild,\n\t\t\t\t\t\tcollapsed = hasClass( next, \"qunit-collapsed\" );\n\t\t\t\t\t( collapsed ? removeClass : addClass )( next, \"qunit-collapsed\" );\n\t\t\t\t});\n\t\n\t\t\t\taddEvent(b, \"dblclick\", function( e ) {\n\t\t\t\t\tvar target = e && e.target ? e.target : window.event.srcElement;\n\t\t\t\t\tif ( target.nodeName.toLowerCase() === \"span\" || target.nodeName.toLowerCase() === \"b\" ) {\n\t\t\t\t\t\ttarget = target.parentNode;\n\t\t\t\t\t}\n\t\t\t\t\tif ( window.location && target.nodeName.toLowerCase() === \"strong\" ) {\n\t\t\t\t\t\twindow.location = QUnit.url({ testNumber: test.testNumber });\n\t\t\t\t\t}\n\t\t\t\t});\n\t\n\t\t\t\t// `time` initialized at top of scope\n\t\t\t\ttime = document.createElement( \"span\" );\n\t\t\t\ttime.className = \"runtime\";\n\t\t\t\ttime.innerHTML = this.runtime + \" ms\";\n\t\n\t\t\t\t// `li` initialized at top of scope\n\t\t\t\tli = id( this.id );\n\t\t\t\tli.className = bad ? \"fail\" : \"pass\";\n\t\t\t\tli.removeChild( li.firstChild );\n\t\t\t\ta = li.firstChild;\n\t\t\t\tli.appendChild( b );\n\t\t\t\tli.appendChild( a );\n\t\t\t\tli.appendChild( time );\n\t\t\t\tli.appendChild( ol );\n\t\n\t\t\t} else {\n\t\t\t\tfor ( i = 0; i < this.assertions.length; i++ ) {\n\t\t\t\t\tif ( !this.assertions[i].result ) {\n\t\t\t\t\t\tbad++;\n\t\t\t\t\t\tconfig.stats.bad++;\n\t\t\t\t\t\tconfig.moduleStats.bad++;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\trunLoggingCallbacks( \"testDone\", QUnit, {\n\t\t\t\tname: this.testName,\n\t\t\t\tmodule: this.module,\n\t\t\t\tfailed: bad,\n\t\t\t\tpassed: this.assertions.length - bad,\n\t\t\t\ttotal: this.assertions.length,\n\t\t\t\truntime: this.runtime,\n\t\t\t\t// DEPRECATED: this property will be removed in 2.0.0, use runtime instead\n\t\t\t\tduration: this.runtime\n\t\t\t});\n\t\n\t\t\tQUnit.reset();\n\t\n\t\t\tconfig.current = undefined;\n\t\t},\n\t\n\t\tqueue: function() {\n\t\t\tvar bad,\n\t\t\t\ttest = this;\n\t\n\t\t\tsynchronize(function() {\n\t\t\t\ttest.init();\n\t\t\t});\n\t\t\tfunction run() {\n\t\t\t\t// each of these can by async\n\t\t\t\tsynchronize(function() {\n\t\t\t\t\ttest.setup();\n\t\t\t\t});\n\t\t\t\tsynchronize(function() {\n\t\t\t\t\ttest.run();\n\t\t\t\t});\n\t\t\t\tsynchronize(function() {\n\t\t\t\t\ttest.teardown();\n\t\t\t\t});\n\t\t\t\tsynchronize(function() {\n\t\t\t\t\ttest.finish();\n\t\t\t\t});\n\t\t\t}\n\t\n\t\t\t// `bad` initialized at top of scope\n\t\t\t// defer when previous test run passed, if storage is available\n\t\t\tbad = QUnit.config.reorder && defined.sessionStorage &&\n\t\t\t\t\t\t\t+sessionStorage.getItem( \"qunit-test-\" + this.module + \"-\" + this.testName );\n\t\n\t\t\tif ( bad ) {\n\t\t\t\trun();\n\t\t\t} else {\n\t\t\t\tsynchronize( run, true );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t// `assert` initialized at top of scope\n\t// Assert helpers\n\t// All of these must either call QUnit.push() or manually do:\n\t// - runLoggingCallbacks( \"log\", .. );\n\t// - config.current.assertions.push({ .. });\n\tassert = QUnit.assert = {\n\t\t/**\n\t\t * Asserts rough true-ish result.\n\t\t * @name ok\n\t\t * @function\n\t\t * @example ok( \"asdfasdf\".length > 5, \"There must be at least 5 chars\" );\n\t\t */\n\t\tok: function( result, msg ) {\n\t\t\tif ( !config.current ) {\n\t\t\t\tthrow new Error( \"ok() assertion outside test context, was \" + sourceFromStacktrace(2) );\n\t\t\t}\n\t\t\tresult = !!result;\n\t\t\tmsg = msg || ( result ? \"okay\" : \"failed\" );\n\t\n\t\t\tvar source,\n\t\t\t\tdetails = {\n\t\t\t\t\tmodule: config.current.module,\n\t\t\t\t\tname: config.current.testName,\n\t\t\t\t\tresult: result,\n\t\t\t\t\tmessage: msg\n\t\t\t\t};\n\t\n\t\t\tmsg = \"<span class='test-message'>\" + escapeText( msg ) + \"</span>\";\n\t\n\t\t\tif ( !result ) {\n\t\t\t\tsource = sourceFromStacktrace( 2 );\n\t\t\t\tif ( source ) {\n\t\t\t\t\tdetails.source = source;\n\t\t\t\t\tmsg += \"<table><tr class='test-source'><th>Source: </th><td><pre>\" +\n\t\t\t\t\t\tescapeText( source ) +\n\t\t\t\t\t\t\"</pre></td></tr></table>\";\n\t\t\t\t}\n\t\t\t}\n\t\t\trunLoggingCallbacks( \"log\", QUnit, details );\n\t\t\tconfig.current.assertions.push({\n\t\t\t\tresult: result,\n\t\t\t\tmessage: msg\n\t\t\t});\n\t\t},\n\t\n\t\t/**\n\t\t * Assert that the first two arguments are equal, with an optional message.\n\t\t * Prints out both actual and expected values.\n\t\t * @name equal\n\t\t * @function\n\t\t * @example equal( format( \"Received {0} bytes.\", 2), \"Received 2 bytes.\", \"format() replaces {0} with next argument\" );\n\t\t */\n\t\tequal: function( actual, expected, message ) {\n\t\t\t/*jshint eqeqeq:false */\n\t\t\tQUnit.push( expected == actual, actual, expected, message );\n\t\t},\n\t\n\t\t/**\n\t\t * @name notEqual\n\t\t * @function\n\t\t */\n\t\tnotEqual: function( actual, expected, message ) {\n\t\t\t/*jshint eqeqeq:false */\n\t\t\tQUnit.push( expected != actual, actual, expected, message );\n\t\t},\n\t\n\t\t/**\n\t\t * @name propEqual\n\t\t * @function\n\t\t */\n\t\tpropEqual: function( actual, expected, message ) {\n\t\t\tactual = objectValues(actual);\n\t\t\texpected = objectValues(expected);\n\t\t\tQUnit.push( QUnit.equiv(actual, expected), actual, expected, message );\n\t\t},\n\t\n\t\t/**\n\t\t * @name notPropEqual\n\t\t * @function\n\t\t */\n\t\tnotPropEqual: function( actual, expected, message ) {\n\t\t\tactual = objectValues(actual);\n\t\t\texpected = objectValues(expected);\n\t\t\tQUnit.push( !QUnit.equiv(actual, expected), actual, expected, message );\n\t\t},\n\t\n\t\t/**\n\t\t * @name deepEqual\n\t\t * @function\n\t\t */\n\t\tdeepEqual: function( actual, expected, message ) {\n\t\t\tQUnit.push( QUnit.equiv(actual, expected), actual, expected, message );\n\t\t},\n\t\n\t\t/**\n\t\t * @name notDeepEqual\n\t\t * @function\n\t\t */\n\t\tnotDeepEqual: function( actual, expected, message ) {\n\t\t\tQUnit.push( !QUnit.equiv(actual, expected), actual, expected, message );\n\t\t},\n\t\n\t\t/**\n\t\t * @name strictEqual\n\t\t * @function\n\t\t */\n\t\tstrictEqual: function( actual, expected, message ) {\n\t\t\tQUnit.push( expected === actual, actual, expected, message );\n\t\t},\n\t\n\t\t/**\n\t\t * @name notStrictEqual\n\t\t * @function\n\t\t */\n\t\tnotStrictEqual: function( actual, expected, message ) {\n\t\t\tQUnit.push( expected !== actual, actual, expected, message );\n\t\t},\n\t\n\t\t\"throws\": function( block, expected, message ) {\n\t\t\tvar actual,\n\t\t\t\texpectedOutput = expected,\n\t\t\t\tok = false;\n\t\n\t\t\t// 'expected' is optional\n\t\t\tif ( !message && typeof expected === \"string\" ) {\n\t\t\t\tmessage = expected;\n\t\t\t\texpected = null;\n\t\t\t}\n\t\n\t\t\tconfig.current.ignoreGlobalErrors = true;\n\t\t\ttry {\n\t\t\t\tblock.call( config.current.testEnvironment );\n\t\t\t} catch (e) {\n\t\t\t\tactual = e;\n\t\t\t}\n\t\t\tconfig.current.ignoreGlobalErrors = false;\n\t\n\t\t\tif ( actual ) {\n\t\n\t\t\t\t// we don't want to validate thrown error\n\t\t\t\tif ( !expected ) {\n\t\t\t\t\tok = true;\n\t\t\t\t\texpectedOutput = null;\n\t\n\t\t\t\t// expected is an Error object\n\t\t\t\t} else if ( expected instanceof Error ) {\n\t\t\t\t\tok = actual instanceof Error &&\n\t\t\t\t\t\t actual.name === expected.name &&\n\t\t\t\t\t\t actual.message === expected.message;\n\t\n\t\t\t\t// expected is a regexp\n\t\t\t\t} else if ( QUnit.objectType( expected ) === \"regexp\" ) {\n\t\t\t\t\tok = expected.test( errorString( actual ) );\n\t\n\t\t\t\t// expected is a string\n\t\t\t\t} else if ( QUnit.objectType( expected ) === \"string\" ) {\n\t\t\t\t\tok = expected === errorString( actual );\n\t\n\t\t\t\t// expected is a constructor\n\t\t\t\t} else if ( actual instanceof expected ) {\n\t\t\t\t\tok = true;\n\t\n\t\t\t\t// expected is a validation function which returns true is validation passed\n\t\t\t\t} else if ( expected.call( {}, actual ) === true ) {\n\t\t\t\t\texpectedOutput = null;\n\t\t\t\t\tok = true;\n\t\t\t\t}\n\t\n\t\t\t\tQUnit.push( ok, actual, expectedOutput, message );\n\t\t\t} else {\n\t\t\t\tQUnit.pushFailure( message, null, \"No exception was thrown.\" );\n\t\t\t}\n\t\t}\n\t};\n\t\n\t/**\n\t * @deprecated since 1.8.0\n\t * Kept assertion helpers in root for backwards compatibility.\n\t */\n\textend( QUnit.constructor.prototype, assert );\n\t\n\t/**\n\t * @deprecated since 1.9.0\n\t * Kept to avoid TypeErrors for undefined methods.\n\t */\n\tQUnit.constructor.prototype.raises = function() {\n\t\tQUnit.push( false, false, false, \"QUnit.raises has been deprecated since 2012 (fad3c1ea), use QUnit.throws instead\" );\n\t};\n\t\n\t/**\n\t * @deprecated since 1.0.0, replaced with error pushes since 1.3.0\n\t * Kept to avoid TypeErrors for undefined methods.\n\t */\n\tQUnit.constructor.prototype.equals = function() {\n\t\tQUnit.push( false, false, false, \"QUnit.equals has been deprecated since 2009 (e88049a0), use QUnit.equal instead\" );\n\t};\n\tQUnit.constructor.prototype.same = function() {\n\t\tQUnit.push( false, false, false, \"QUnit.same has been deprecated since 2009 (e88049a0), use QUnit.deepEqual instead\" );\n\t};\n\t\n\t// Test for equality any JavaScript type.\n\t// Author: Philippe Rathé <prathe@gmail.com>\n\tQUnit.equiv = (function() {\n\t\n\t\t// Call the o related callback with the given arguments.\n\t\tfunction bindCallbacks( o, callbacks, args ) {\n\t\t\tvar prop = QUnit.objectType( o );\n\t\t\tif ( prop ) {\n\t\t\t\tif ( QUnit.objectType( callbacks[ prop ] ) === \"function\" ) {\n\t\t\t\t\treturn callbacks[ prop ].apply( callbacks, args );\n\t\t\t\t} else {\n\t\t\t\t\treturn callbacks[ prop ]; // or undefined\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\t// the real equiv function\n\t\tvar innerEquiv,\n\t\t\t// stack to decide between skip/abort functions\n\t\t\tcallers = [],\n\t\t\t// stack to avoiding loops from circular referencing\n\t\t\tparents = [],\n\t\t\tparentsB = [],\n\t\n\t\t\tgetProto = Object.getPrototypeOf || function ( obj ) {\n\t\t\t\t/*jshint camelcase:false */\n\t\t\t\treturn obj.__proto__;\n\t\t\t},\n\t\t\tcallbacks = (function () {\n\t\n\t\t\t\t// for string, boolean, number and null\n\t\t\t\tfunction useStrictEquality( b, a ) {\n\t\t\t\t\t/*jshint eqeqeq:false */\n\t\t\t\t\tif ( b instanceof a.constructor || a instanceof b.constructor ) {\n\t\t\t\t\t\t// to catch short annotation VS 'new' annotation of a\n\t\t\t\t\t\t// declaration\n\t\t\t\t\t\t// e.g. var i = 1;\n\t\t\t\t\t\t// var j = new Number(1);\n\t\t\t\t\t\treturn a == b;\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn a === b;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn {\n\t\t\t\t\t\"string\": useStrictEquality,\n\t\t\t\t\t\"boolean\": useStrictEquality,\n\t\t\t\t\t\"number\": useStrictEquality,\n\t\t\t\t\t\"null\": useStrictEquality,\n\t\t\t\t\t\"undefined\": useStrictEquality,\n\t\n\t\t\t\t\t\"nan\": function( b ) {\n\t\t\t\t\t\treturn isNaN( b );\n\t\t\t\t\t},\n\t\n\t\t\t\t\t\"date\": function( b, a ) {\n\t\t\t\t\t\treturn QUnit.objectType( b ) === \"date\" && a.valueOf() === b.valueOf();\n\t\t\t\t\t},\n\t\n\t\t\t\t\t\"regexp\": function( b, a ) {\n\t\t\t\t\t\treturn QUnit.objectType( b ) === \"regexp\" &&\n\t\t\t\t\t\t\t// the regex itself\n\t\t\t\t\t\t\ta.source === b.source &&\n\t\t\t\t\t\t\t// and its modifiers\n\t\t\t\t\t\t\ta.global === b.global &&\n\t\t\t\t\t\t\t// (gmi) ...\n\t\t\t\t\t\t\ta.ignoreCase === b.ignoreCase &&\n\t\t\t\t\t\t\ta.multiline === b.multiline &&\n\t\t\t\t\t\t\ta.sticky === b.sticky;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t// - skip when the property is a method of an instance (OOP)\n\t\t\t\t\t// - abort otherwise,\n\t\t\t\t\t// initial === would have catch identical references anyway\n\t\t\t\t\t\"function\": function() {\n\t\t\t\t\t\tvar caller = callers[callers.length - 1];\n\t\t\t\t\t\treturn caller !== Object && typeof caller !== \"undefined\";\n\t\t\t\t\t},\n\t\n\t\t\t\t\t\"array\": function( b, a ) {\n\t\t\t\t\t\tvar i, j, len, loop, aCircular, bCircular;\n\t\n\t\t\t\t\t\t// b could be an object literal here\n\t\t\t\t\t\tif ( QUnit.objectType( b ) !== \"array\" ) {\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tlen = a.length;\n\t\t\t\t\t\tif ( len !== b.length ) {\n\t\t\t\t\t\t\t// safe and faster\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// track reference to avoid circular references\n\t\t\t\t\t\tparents.push( a );\n\t\t\t\t\t\tparentsB.push( b );\n\t\t\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\t\t\tloop = false;\n\t\t\t\t\t\t\tfor ( j = 0; j < parents.length; j++ ) {\n\t\t\t\t\t\t\t\taCircular = parents[j] === a[i];\n\t\t\t\t\t\t\t\tbCircular = parentsB[j] === b[i];\n\t\t\t\t\t\t\t\tif ( aCircular || bCircular ) {\n\t\t\t\t\t\t\t\t\tif ( a[i] === b[i] || aCircular && bCircular ) {\n\t\t\t\t\t\t\t\t\t\tloop = true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\t\t\t\t\tparentsB.pop();\n\t\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif ( !loop && !innerEquiv(a[i], b[i]) ) {\n\t\t\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\t\t\tparentsB.pop();\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\tparentsB.pop();\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t},\n\t\n\t\t\t\t\t\"object\": function( b, a ) {\n\t\t\t\t\t\t/*jshint forin:false */\n\t\t\t\t\t\tvar i, j, loop, aCircular, bCircular,\n\t\t\t\t\t\t\t// Default to true\n\t\t\t\t\t\t\teq = true,\n\t\t\t\t\t\t\taProperties = [],\n\t\t\t\t\t\t\tbProperties = [];\n\t\n\t\t\t\t\t\t// comparing constructors is more strict than using\n\t\t\t\t\t\t// instanceof\n\t\t\t\t\t\tif ( a.constructor !== b.constructor ) {\n\t\t\t\t\t\t\t// Allow objects with no prototype to be equivalent to\n\t\t\t\t\t\t\t// objects with Object as their constructor.\n\t\t\t\t\t\t\tif ( !(( getProto(a) === null && getProto(b) === Object.prototype ) ||\n\t\t\t\t\t\t\t\t( getProto(b) === null && getProto(a) === Object.prototype ) ) ) {\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// stack constructor before traversing properties\n\t\t\t\t\t\tcallers.push( a.constructor );\n\t\n\t\t\t\t\t\t// track reference to avoid circular references\n\t\t\t\t\t\tparents.push( a );\n\t\t\t\t\t\tparentsB.push( b );\n\t\n\t\t\t\t\t\t// be strict: don't ensure hasOwnProperty and go deep\n\t\t\t\t\t\tfor ( i in a ) {\n\t\t\t\t\t\t\tloop = false;\n\t\t\t\t\t\t\tfor ( j = 0; j < parents.length; j++ ) {\n\t\t\t\t\t\t\t\taCircular = parents[j] === a[i];\n\t\t\t\t\t\t\t\tbCircular = parentsB[j] === b[i];\n\t\t\t\t\t\t\t\tif ( aCircular || bCircular ) {\n\t\t\t\t\t\t\t\t\tif ( a[i] === b[i] || aCircular && bCircular ) {\n\t\t\t\t\t\t\t\t\t\tloop = true;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\teq = false;\n\t\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\taProperties.push(i);\n\t\t\t\t\t\t\tif ( !loop && !innerEquiv(a[i], b[i]) ) {\n\t\t\t\t\t\t\t\teq = false;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\tparentsB.pop();\n\t\t\t\t\t\tcallers.pop(); // unstack, we are done\n\t\n\t\t\t\t\t\tfor ( i in b ) {\n\t\t\t\t\t\t\tbProperties.push( i ); // collect b's properties\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// Ensures identical properties name\n\t\t\t\t\t\treturn eq && innerEquiv( aProperties.sort(), bProperties.sort() );\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}());\n\t\n\t\tinnerEquiv = function() { // can take multiple arguments\n\t\t\tvar args = [].slice.apply( arguments );\n\t\t\tif ( args.length < 2 ) {\n\t\t\t\treturn true; // end transition\n\t\t\t}\n\t\n\t\t\treturn (function( a, b ) {\n\t\t\t\tif ( a === b ) {\n\t\t\t\t\treturn true; // catch the most you can\n\t\t\t\t} else if ( a === null || b === null || typeof a === \"undefined\" ||\n\t\t\t\t\t\ttypeof b === \"undefined\" ||\n\t\t\t\t\t\tQUnit.objectType(a) !== QUnit.objectType(b) ) {\n\t\t\t\t\treturn false; // don't lose time with error prone cases\n\t\t\t\t} else {\n\t\t\t\t\treturn bindCallbacks(a, callbacks, [ b, a ]);\n\t\t\t\t}\n\t\n\t\t\t\t// apply transition with (1..n) arguments\n\t\t\t}( args[0], args[1] ) && innerEquiv.apply( this, args.splice(1, args.length - 1 )) );\n\t\t};\n\t\n\t\treturn innerEquiv;\n\t}());\n\t\n\t/**\n\t * jsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\n\t * http://flesler.blogspot.com Licensed under BSD\n\t * (http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008\n\t *\n\t * @projectDescription Advanced and extensible data dumping for Javascript.\n\t * @version 1.0.0\n\t * @author Ariel Flesler\n\t * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}\n\t */\n\tQUnit.jsDump = (function() {\n\t\tfunction quote( str ) {\n\t\t\treturn \"\\\"\" + str.toString().replace( /\"/g, \"\\\\\\\"\" ) + \"\\\"\";\n\t\t}\n\t\tfunction literal( o ) {\n\t\t\treturn o + \"\";\n\t\t}\n\t\tfunction join( pre, arr, post ) {\n\t\t\tvar s = jsDump.separator(),\n\t\t\t\tbase = jsDump.indent(),\n\t\t\t\tinner = jsDump.indent(1);\n\t\t\tif ( arr.join ) {\n\t\t\t\tarr = arr.join( \",\" + s + inner );\n\t\t\t}\n\t\t\tif ( !arr ) {\n\t\t\t\treturn pre + post;\n\t\t\t}\n\t\t\treturn [ pre, inner + arr, base + post ].join(s);\n\t\t}\n\t\tfunction array( arr, stack ) {\n\t\t\tvar i = arr.length, ret = new Array(i);\n\t\t\tthis.up();\n\t\t\twhile ( i-- ) {\n\t\t\t\tret[i] = this.parse( arr[i] , undefined , stack);\n\t\t\t}\n\t\t\tthis.down();\n\t\t\treturn join( \"[\", ret, \"]\" );\n\t\t}\n\t\n\t\tvar reName = /^function (\\w+)/,\n\t\t\tjsDump = {\n\t\t\t\t// type is used mostly internally, you can fix a (custom)type in advance\n\t\t\t\tparse: function( obj, type, stack ) {\n\t\t\t\t\tstack = stack || [ ];\n\t\t\t\t\tvar inStack, res,\n\t\t\t\t\t\tparser = this.parsers[ type || this.typeOf(obj) ];\n\t\n\t\t\t\t\ttype = typeof parser;\n\t\t\t\t\tinStack = inArray( obj, stack );\n\t\n\t\t\t\t\tif ( inStack !== -1 ) {\n\t\t\t\t\t\treturn \"recursion(\" + (inStack - stack.length) + \")\";\n\t\t\t\t\t}\n\t\t\t\t\tif ( type === \"function\" )  {\n\t\t\t\t\t\tstack.push( obj );\n\t\t\t\t\t\tres = parser.call( this, obj, stack );\n\t\t\t\t\t\tstack.pop();\n\t\t\t\t\t\treturn res;\n\t\t\t\t\t}\n\t\t\t\t\treturn ( type === \"string\" ) ? parser : this.parsers.error;\n\t\t\t\t},\n\t\t\t\ttypeOf: function( obj ) {\n\t\t\t\t\tvar type;\n\t\t\t\t\tif ( obj === null ) {\n\t\t\t\t\t\ttype = \"null\";\n\t\t\t\t\t} else if ( typeof obj === \"undefined\" ) {\n\t\t\t\t\t\ttype = \"undefined\";\n\t\t\t\t\t} else if ( QUnit.is( \"regexp\", obj) ) {\n\t\t\t\t\t\ttype = \"regexp\";\n\t\t\t\t\t} else if ( QUnit.is( \"date\", obj) ) {\n\t\t\t\t\t\ttype = \"date\";\n\t\t\t\t\t} else if ( QUnit.is( \"function\", obj) ) {\n\t\t\t\t\t\ttype = \"function\";\n\t\t\t\t\t} else if ( typeof obj.setInterval !== undefined && typeof obj.document !== \"undefined\" && typeof obj.nodeType === \"undefined\" ) {\n\t\t\t\t\t\ttype = \"window\";\n\t\t\t\t\t} else if ( obj.nodeType === 9 ) {\n\t\t\t\t\t\ttype = \"document\";\n\t\t\t\t\t} else if ( obj.nodeType ) {\n\t\t\t\t\t\ttype = \"node\";\n\t\t\t\t\t} else if (\n\t\t\t\t\t\t// native arrays\n\t\t\t\t\t\ttoString.call( obj ) === \"[object Array]\" ||\n\t\t\t\t\t\t// NodeList objects\n\t\t\t\t\t\t( typeof obj.length === \"number\" && typeof obj.item !== \"undefined\" && ( obj.length ? obj.item(0) === obj[0] : ( obj.item( 0 ) === null && typeof obj[0] === \"undefined\" ) ) )\n\t\t\t\t\t) {\n\t\t\t\t\t\ttype = \"array\";\n\t\t\t\t\t} else if ( obj.constructor === Error.prototype.constructor ) {\n\t\t\t\t\t\ttype = \"error\";\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttype = typeof obj;\n\t\t\t\t\t}\n\t\t\t\t\treturn type;\n\t\t\t\t},\n\t\t\t\tseparator: function() {\n\t\t\t\t\treturn this.multiline ?\tthis.HTML ? \"<br />\" : \"\\n\" : this.HTML ? \"&nbsp;\" : \" \";\n\t\t\t\t},\n\t\t\t\t// extra can be a number, shortcut for increasing-calling-decreasing\n\t\t\t\tindent: function( extra ) {\n\t\t\t\t\tif ( !this.multiline ) {\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t}\n\t\t\t\t\tvar chr = this.indentChar;\n\t\t\t\t\tif ( this.HTML ) {\n\t\t\t\t\t\tchr = chr.replace( /\\t/g, \"   \" ).replace( / /g, \"&nbsp;\" );\n\t\t\t\t\t}\n\t\t\t\t\treturn new Array( this.depth + ( extra || 0 ) ).join(chr);\n\t\t\t\t},\n\t\t\t\tup: function( a ) {\n\t\t\t\t\tthis.depth += a || 1;\n\t\t\t\t},\n\t\t\t\tdown: function( a ) {\n\t\t\t\t\tthis.depth -= a || 1;\n\t\t\t\t},\n\t\t\t\tsetParser: function( name, parser ) {\n\t\t\t\t\tthis.parsers[name] = parser;\n\t\t\t\t},\n\t\t\t\t// The next 3 are exposed so you can use them\n\t\t\t\tquote: quote,\n\t\t\t\tliteral: literal,\n\t\t\t\tjoin: join,\n\t\t\t\t//\n\t\t\t\tdepth: 1,\n\t\t\t\t// This is the list of parsers, to modify them, use jsDump.setParser\n\t\t\t\tparsers: {\n\t\t\t\t\twindow: \"[Window]\",\n\t\t\t\t\tdocument: \"[Document]\",\n\t\t\t\t\terror: function(error) {\n\t\t\t\t\t\treturn \"Error(\\\"\" + error.message + \"\\\")\";\n\t\t\t\t\t},\n\t\t\t\t\tunknown: \"[Unknown]\",\n\t\t\t\t\t\"null\": \"null\",\n\t\t\t\t\t\"undefined\": \"undefined\",\n\t\t\t\t\t\"function\": function( fn ) {\n\t\t\t\t\t\tvar ret = \"function\",\n\t\t\t\t\t\t\t// functions never have name in IE\n\t\t\t\t\t\t\tname = \"name\" in fn ? fn.name : (reName.exec(fn) || [])[1];\n\t\n\t\t\t\t\t\tif ( name ) {\n\t\t\t\t\t\t\tret += \" \" + name;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tret += \"( \";\n\t\n\t\t\t\t\t\tret = [ ret, QUnit.jsDump.parse( fn, \"functionArgs\" ), \"){\" ].join( \"\" );\n\t\t\t\t\t\treturn join( ret, QUnit.jsDump.parse(fn,\"functionCode\" ), \"}\" );\n\t\t\t\t\t},\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnodelist: array,\n\t\t\t\t\t\"arguments\": array,\n\t\t\t\t\tobject: function( map, stack ) {\n\t\t\t\t\t\t/*jshint forin:false */\n\t\t\t\t\t\tvar ret = [ ], keys, key, val, i;\n\t\t\t\t\t\tQUnit.jsDump.up();\n\t\t\t\t\t\tkeys = [];\n\t\t\t\t\t\tfor ( key in map ) {\n\t\t\t\t\t\t\tkeys.push( key );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tkeys.sort();\n\t\t\t\t\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t\t\t\t\tkey = keys[ i ];\n\t\t\t\t\t\t\tval = map[ key ];\n\t\t\t\t\t\t\tret.push( QUnit.jsDump.parse( key, \"key\" ) + \": \" + QUnit.jsDump.parse( val, undefined, stack ) );\n\t\t\t\t\t\t}\n\t\t\t\t\t\tQUnit.jsDump.down();\n\t\t\t\t\t\treturn join( \"{\", ret, \"}\" );\n\t\t\t\t\t},\n\t\t\t\t\tnode: function( node ) {\n\t\t\t\t\t\tvar len, i, val,\n\t\t\t\t\t\t\topen = QUnit.jsDump.HTML ? \"&lt;\" : \"<\",\n\t\t\t\t\t\t\tclose = QUnit.jsDump.HTML ? \"&gt;\" : \">\",\n\t\t\t\t\t\t\ttag = node.nodeName.toLowerCase(),\n\t\t\t\t\t\t\tret = open + tag,\n\t\t\t\t\t\t\tattrs = node.attributes;\n\t\n\t\t\t\t\t\tif ( attrs ) {\n\t\t\t\t\t\t\tfor ( i = 0, len = attrs.length; i < len; i++ ) {\n\t\t\t\t\t\t\t\tval = attrs[i].nodeValue;\n\t\t\t\t\t\t\t\t// IE6 includes all attributes in .attributes, even ones not explicitly set.\n\t\t\t\t\t\t\t\t// Those have values like undefined, null, 0, false, \"\" or \"inherit\".\n\t\t\t\t\t\t\t\tif ( val && val !== \"inherit\" ) {\n\t\t\t\t\t\t\t\t\tret += \" \" + attrs[i].nodeName + \"=\" + QUnit.jsDump.parse( val, \"attribute\" );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tret += close;\n\t\n\t\t\t\t\t\t// Show content of TextNode or CDATASection\n\t\t\t\t\t\tif ( node.nodeType === 3 || node.nodeType === 4 ) {\n\t\t\t\t\t\t\tret += node.nodeValue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\treturn ret + open + \"/\" + tag + close;\n\t\t\t\t\t},\n\t\t\t\t\t// function calls it internally, it's the arguments part of the function\n\t\t\t\t\tfunctionArgs: function( fn ) {\n\t\t\t\t\t\tvar args,\n\t\t\t\t\t\t\tl = fn.length;\n\t\n\t\t\t\t\t\tif ( !l ) {\n\t\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\targs = new Array(l);\n\t\t\t\t\t\twhile ( l-- ) {\n\t\t\t\t\t\t\t// 97 is 'a'\n\t\t\t\t\t\t\targs[l] = String.fromCharCode(97+l);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn \" \" + args.join( \", \" ) + \" \";\n\t\t\t\t\t},\n\t\t\t\t\t// object calls it internally, the key part of an item in a map\n\t\t\t\t\tkey: quote,\n\t\t\t\t\t// function calls it internally, it's the content of the function\n\t\t\t\t\tfunctionCode: \"[code]\",\n\t\t\t\t\t// node calls it internally, it's an html attribute value\n\t\t\t\t\tattribute: quote,\n\t\t\t\t\tstring: quote,\n\t\t\t\t\tdate: quote,\n\t\t\t\t\tregexp: literal,\n\t\t\t\t\tnumber: literal,\n\t\t\t\t\t\"boolean\": literal\n\t\t\t\t},\n\t\t\t\t// if true, entities are escaped ( <, >, \\t, space and \\n )\n\t\t\t\tHTML: false,\n\t\t\t\t// indentation unit\n\t\t\t\tindentChar: \"  \",\n\t\t\t\t// if true, items in a collection, are separated by a \\n, else just a space.\n\t\t\t\tmultiline: true\n\t\t\t};\n\t\n\t\treturn jsDump;\n\t}());\n\t\n\t/*\n\t * Javascript Diff Algorithm\n\t *  By John Resig (http://ejohn.org/)\n\t *  Modified by Chu Alan \"sprite\"\n\t *\n\t * Released under the MIT license.\n\t *\n\t * More Info:\n\t *  http://ejohn.org/projects/javascript-diff-algorithm/\n\t *\n\t * Usage: QUnit.diff(expected, actual)\n\t *\n\t * QUnit.diff( \"the quick brown fox jumped over\", \"the quick fox jumps over\" ) == \"the  quick <del>brown </del> fox <del>jumped </del><ins>jumps </ins> over\"\n\t */\n\tQUnit.diff = (function() {\n\t\t/*jshint eqeqeq:false, eqnull:true */\n\t\tfunction diff( o, n ) {\n\t\t\tvar i,\n\t\t\t\tns = {},\n\t\t\t\tos = {};\n\t\n\t\t\tfor ( i = 0; i < n.length; i++ ) {\n\t\t\t\tif ( !hasOwn.call( ns, n[i] ) ) {\n\t\t\t\t\tns[ n[i] ] = {\n\t\t\t\t\t\trows: [],\n\t\t\t\t\t\to: null\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tns[ n[i] ].rows.push( i );\n\t\t\t}\n\t\n\t\t\tfor ( i = 0; i < o.length; i++ ) {\n\t\t\t\tif ( !hasOwn.call( os, o[i] ) ) {\n\t\t\t\t\tos[ o[i] ] = {\n\t\t\t\t\t\trows: [],\n\t\t\t\t\t\tn: null\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tos[ o[i] ].rows.push( i );\n\t\t\t}\n\t\n\t\t\tfor ( i in ns ) {\n\t\t\t\tif ( hasOwn.call( ns, i ) ) {\n\t\t\t\t\tif ( ns[i].rows.length === 1 && hasOwn.call( os, i ) && os[i].rows.length === 1 ) {\n\t\t\t\t\t\tn[ ns[i].rows[0] ] = {\n\t\t\t\t\t\t\ttext: n[ ns[i].rows[0] ],\n\t\t\t\t\t\t\trow: os[i].rows[0]\n\t\t\t\t\t\t};\n\t\t\t\t\t\to[ os[i].rows[0] ] = {\n\t\t\t\t\t\t\ttext: o[ os[i].rows[0] ],\n\t\t\t\t\t\t\trow: ns[i].rows[0]\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor ( i = 0; i < n.length - 1; i++ ) {\n\t\t\t\tif ( n[i].text != null && n[ i + 1 ].text == null && n[i].row + 1 < o.length && o[ n[i].row + 1 ].text == null &&\n\t\t\t\t\t\t\tn[ i + 1 ] == o[ n[i].row + 1 ] ) {\n\t\n\t\t\t\t\tn[ i + 1 ] = {\n\t\t\t\t\t\ttext: n[ i + 1 ],\n\t\t\t\t\t\trow: n[i].row + 1\n\t\t\t\t\t};\n\t\t\t\t\to[ n[i].row + 1 ] = {\n\t\t\t\t\t\ttext: o[ n[i].row + 1 ],\n\t\t\t\t\t\trow: i + 1\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tfor ( i = n.length - 1; i > 0; i-- ) {\n\t\t\t\tif ( n[i].text != null && n[ i - 1 ].text == null && n[i].row > 0 && o[ n[i].row - 1 ].text == null &&\n\t\t\t\t\t\t\tn[ i - 1 ] == o[ n[i].row - 1 ]) {\n\t\n\t\t\t\t\tn[ i - 1 ] = {\n\t\t\t\t\t\ttext: n[ i - 1 ],\n\t\t\t\t\t\trow: n[i].row - 1\n\t\t\t\t\t};\n\t\t\t\t\to[ n[i].row - 1 ] = {\n\t\t\t\t\t\ttext: o[ n[i].row - 1 ],\n\t\t\t\t\t\trow: i - 1\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn {\n\t\t\t\to: o,\n\t\t\t\tn: n\n\t\t\t};\n\t\t}\n\t\n\t\treturn function( o, n ) {\n\t\t\to = o.replace( /\\s+$/, \"\" );\n\t\t\tn = n.replace( /\\s+$/, \"\" );\n\t\n\t\t\tvar i, pre,\n\t\t\t\tstr = \"\",\n\t\t\t\tout = diff( o === \"\" ? [] : o.split(/\\s+/), n === \"\" ? [] : n.split(/\\s+/) ),\n\t\t\t\toSpace = o.match(/\\s+/g),\n\t\t\t\tnSpace = n.match(/\\s+/g);\n\t\n\t\t\tif ( oSpace == null ) {\n\t\t\t\toSpace = [ \" \" ];\n\t\t\t}\n\t\t\telse {\n\t\t\t\toSpace.push( \" \" );\n\t\t\t}\n\t\n\t\t\tif ( nSpace == null ) {\n\t\t\t\tnSpace = [ \" \" ];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tnSpace.push( \" \" );\n\t\t\t}\n\t\n\t\t\tif ( out.n.length === 0 ) {\n\t\t\t\tfor ( i = 0; i < out.o.length; i++ ) {\n\t\t\t\t\tstr += \"<del>\" + out.o[i] + oSpace[i] + \"</del>\";\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tif ( out.n[0].text == null ) {\n\t\t\t\t\tfor ( n = 0; n < out.o.length && out.o[n].text == null; n++ ) {\n\t\t\t\t\t\tstr += \"<del>\" + out.o[n] + oSpace[n] + \"</del>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\tfor ( i = 0; i < out.n.length; i++ ) {\n\t\t\t\t\tif (out.n[i].text == null) {\n\t\t\t\t\t\tstr += \"<ins>\" + out.n[i] + nSpace[i] + \"</ins>\";\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// `pre` initialized at top of scope\n\t\t\t\t\t\tpre = \"\";\n\t\n\t\t\t\t\t\tfor ( n = out.n[i].row + 1; n < out.o.length && out.o[n].text == null; n++ ) {\n\t\t\t\t\t\t\tpre += \"<del>\" + out.o[n] + oSpace[n] + \"</del>\";\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstr += \" \" + out.n[i].text + nSpace[i] + pre;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn str;\n\t\t};\n\t}());\n\t\n\t// For browser, export only select globals\n\tif ( typeof window !== \"undefined\" ) {\n\t\textend( window, QUnit.constructor.prototype );\n\t\twindow.QUnit = QUnit;\n\t}\n\t\n\t// For CommonJS environments, export everything\n\tif ( typeof module !== \"undefined\" && module.exports ) {\n\t\tmodule.exports = QUnit;\n\t}\n\t\n\t\n\t// Get a reference to the global object, like window in browsers\n\t}( (function() {\n\t\treturn this;\n\t})() ));\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(36)))\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/**\n\t * QUnit-TAP - A TAP Output Producer Plugin for QUnit\n\t *\n\t * https://github.com/twada/qunit-tap\n\t * version: 1.5.0\n\t *\n\t * Copyright (c) 2010-2014 Takuto Wada\n\t * Dual licensed under the MIT and GPLv2 licenses.\n\t *   https://raw.github.com/twada/qunit-tap/master/MIT-LICENSE.txt\n\t *   https://raw.github.com/twada/qunit-tap/master/GPL-LICENSE.txt\n\t *\n\t * A part of extend function is:\n\t *   Copyright 2012 jQuery Foundation and other contributors\n\t *   Released under the MIT license.\n\t *   http://jquery.org/license\n\t */\n\t(function (root, factory) {\n\t    'use strict';\n\t\n\t    // using returnExports UMD pattern\n\t    if (true) {\n\t        !(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t    } else if (typeof exports === 'object') {\n\t        module.exports = factory();\n\t    } else {\n\t        root.qunitTap = factory();\n\t    }\n\t}(this, function () {\n\t    'use strict';\n\t\n\t    var qunitTapVersion = '1.5.0',\n\t        slice = Array.prototype.slice;\n\t\n\t    // borrowed from qunit.js\n\t    function extend (a, b) {\n\t        var prop;\n\t        for (prop in b) {\n\t            if (b.hasOwnProperty(prop)) {\n\t                if (typeof b[prop] === 'undefined') {\n\t                    delete a[prop];\n\t                } else {\n\t                    a[prop] = b[prop];\n\t                }\n\t            }\n\t        }\n\t        return a;\n\t    }\n\t\n\t    function indexOf (ary, element) {\n\t        var i;\n\t        for (i = 0; i < ary.length; i += 1) {\n\t            if (ary[i] === element) {\n\t                return i;\n\t            }\n\t        }\n\t        return -1;\n\t    }\n\t\n\t    function removeElement (ary, element) {\n\t        var index = indexOf(ary, element);\n\t        if (index !== -1) {\n\t            return ary.splice(index, 1);\n\t        } else {\n\t            return [];\n\t        }\n\t    }\n\t\n\t    function isPlanRequired (conf) {\n\t        return (typeof conf !== 'undefined' && typeof conf.requireExpects !== 'undefined' && conf.requireExpects);\n\t    }\n\t\n\t    function isPassed (details) {\n\t        return !!(details.result);\n\t    }\n\t\n\t    function isFailed (details) {\n\t        return !(isPassed(details));\n\t    }\n\t\n\t    function isAssertOkFailed (details) {\n\t        return isFailed(details) && typeof details.expected === 'undefined' && typeof details.actual === 'undefined';\n\t    }\n\t\n\t    function escapeLineEndings (str) {\n\t        return str.replace(/(\\r?\\n)/g, '$&# ');\n\t    }\n\t\n\t    function ltrim (str) {\n\t        return str.replace(/^\\s+/, '');\n\t    }\n\t\n\t    function noop (obj) {\n\t        return obj;\n\t    }\n\t\n\t    function render (desc, fieldName, fieldValue, formatter) {\n\t        desc.push(fieldName + ': ' + formatter(fieldValue));\n\t    }\n\t\n\t    function renderIf (shouldRender, desc, fieldName, fieldValue, formatter) {\n\t        if (!shouldRender || typeof fieldValue === 'undefined') {\n\t            return;\n\t        }\n\t        render(desc, fieldName, fieldValue, formatter);\n\t    }\n\t\n\t    function formatTestLine (testLine, rest) {\n\t        if (!rest) {\n\t            return testLine;\n\t        }\n\t        return testLine + ' - ' + escapeLineEndings(rest);\n\t    }\n\t\n\t    var createCallbackAppenderFor = function (qu) {\n\t        return function (subject, observer, event) {\n\t            var originalLoggingCallback = subject[event],\n\t                callback = function () {\n\t                    // make listener methods (moduleStart,testStart,log, ...) overridable.\n\t                    observer[event].apply(observer, slice.apply(arguments));\n\t                };\n\t            originalLoggingCallback(callback);\n\t            return callback;\n\t        };\n\t    };\n\t\n\t\n\t    /**\n\t     * QUnit-TAP - A TAP Output Producer Plugin for QUnit\n\t     * @param qunitObject QUnit object reference.\n\t     * @param printLikeFunction print-like function for TAP output (assumes line-separator is added by this function for each call).\n\t     * @param options configuration options to customize default behavior.\n\t     * @return object to provide QUnit-TAP API and customization subject.\n\t     */\n\t    function qunitTap(qunitObject, printLikeFunction, options) {\n\t        if (!qunitObject) {\n\t            throw new Error('should pass QUnit object reference. Please check QUnit\\'s \"require\" path if you are using Node.js (or any CommonJS env).');\n\t        } else if (typeof printLikeFunction !== 'function') {\n\t            throw new Error('should pass print-like function');\n\t        }\n\t\n\t        var qu = qunitObject,\n\t            tap = {},\n\t            jsDumpExists = (typeof qu.jsDump !== 'undefined' && typeof qu.jsDump.parse === 'function'),\n\t            explain = (jsDumpExists ? function explain (obj) { return qu.jsDump.parse(obj); } : noop),\n\t            deprecateOption = function deprecateOption (optionName, fallback) {\n\t                // option deprecation and fallback function\n\t                if (!options || typeof options !== 'object') {\n\t                    return;\n\t                }\n\t                if (typeof options[optionName] === 'undefined') {\n\t                    return;\n\t                }\n\t                printLikeFunction('# WARNING: Option \"' + optionName + '\" is deprecated and will be removed in future version.');\n\t                fallback(options[optionName]);\n\t            },\n\t            targetEvents = [\n\t                'moduleStart',\n\t                'testStart',\n\t                'log',\n\t                'testDone',\n\t                'done'\n\t            ],\n\t            registeredCallbacks = {};\n\t\n\t\n\t        tap.config = extend(\n\t            {\n\t                initialCount: 1,\n\t                showModuleNameOnFailure: true,\n\t                showTestNameOnFailure: true,\n\t                showExpectationOnFailure: true,\n\t                showSourceOnFailure: true\n\t            },\n\t            options\n\t        );\n\t        deprecateOption('noPlan', function (flag) {\n\t            printLikeFunction('# Now QUnit-TAP works as with \"noPlan: true\" by default. If you want to delare plan explicitly, please use \"QUnit.config.requireExpects\" option instead.');\n\t            tap.config.noPlan = flag;\n\t        });\n\t        deprecateOption('count', function (count) {\n\t            tap.config.initialCount = (count + 1);\n\t        });\n\t        deprecateOption('showDetailsOnFailure', function (flag) {\n\t            tap.config.showModuleNameOnFailure = flag;\n\t            tap.config.showTestNameOnFailure = flag;\n\t            tap.config.showExpectationOnFailure = flag;\n\t            tap.config.showSourceOnFailure = flag;\n\t        });\n\t        tap.VERSION = qunitTapVersion;\n\t        tap.puts = printLikeFunction;\n\t        tap.count = tap.config.initialCount - 1;\n\t        tap.expectedCount = tap.config.initialCount - 1;\n\t\n\t        function isEnabled (configName) {\n\t            return tap.config[configName];\n\t        }\n\t\n\t        function formatDetails (details) {\n\t            if (isPassed(details)) {\n\t                return details.message;\n\t            }\n\t            var desc = [];\n\t            if (details.message) {\n\t                desc.push(details.message);\n\t            }\n\t            if (isEnabled('showExpectationOnFailure') && !(isAssertOkFailed(details))) {\n\t                render(desc, 'expected', details.expected, explain);\n\t                render(desc, 'got', details.actual, explain);\n\t            }\n\t            renderIf(isEnabled('showTestNameOnFailure'), desc, 'test', details.name, noop);\n\t            renderIf(isEnabled('showModuleNameOnFailure'), desc, 'module', details.module, noop);\n\t            renderIf(isEnabled('showSourceOnFailure'), desc, 'source', details.source, ltrim);\n\t            return desc.join(', ');\n\t        }\n\t\n\t        function printPlanLine (toCount) {\n\t            tap.puts(tap.config.initialCount + '..' + toCount);\n\t        }\n\t\n\t        function unsubscribeEvent (eventName) {\n\t            var listeners;\n\t            if (indexOf(targetEvents, eventName) === -1) {\n\t                return;\n\t            }\n\t            listeners = qu.config[eventName];\n\t            if (typeof listeners === 'undefined') {\n\t                return;\n\t            }\n\t            removeElement(listeners, registeredCallbacks[eventName]);\n\t        }\n\t\n\t        function unsubscribeEvents (eventNames) {\n\t            var i;\n\t            for (i = 0; i < eventNames.length; i += 1) {\n\t                unsubscribeEvent(eventNames[i]);\n\t            }\n\t        }\n\t\n\t        tap.explain = explain;\n\t\n\t        tap.note = function note (obj) {\n\t            tap.puts(escapeLineEndings('# ' + obj));\n\t        };\n\t\n\t        tap.diag = function diag (obj) {\n\t            tap.note(obj);\n\t            return false;\n\t        };\n\t\n\t        tap.moduleStart = function moduleStart (arg) {\n\t            var name = (typeof arg === 'string') ? arg : arg.name;\n\t            tap.note('module: ' + name);\n\t        };\n\t\n\t        tap.testStart = function testStart (arg) {\n\t            var name = (typeof arg === 'string') ? arg : arg.name;\n\t            tap.note('test: ' + name);\n\t        };\n\t\n\t        tap.log = function log (details) {\n\t            var testLine = '';\n\t            tap.count += 1;\n\t            if (isFailed(details)) {\n\t                testLine += 'not ';\n\t            }\n\t            testLine += ('ok ' + tap.count);\n\t            tap.puts(formatTestLine(testLine, formatDetails(details)));\n\t        };\n\t\n\t        tap.testDone = function testDone () {\n\t            if (isPlanRequired(qu.config)) {\n\t                tap.expectedCount += qu.config.current.expected;\n\t            }\n\t        };\n\t\n\t        tap.done = function done () {\n\t            if (typeof tap.config.noPlan !== 'undefined' && !(tap.config.noPlan)) {\n\t                // Do nothing until removal of 'noPlan' option.\n\t            } else if (isPlanRequired(qu.config)) {\n\t                printPlanLine(tap.expectedCount);\n\t            } else {\n\t                printPlanLine(tap.count);\n\t            }\n\t        };\n\t\n\t        tap.unsubscribe = function unsubscribe () {\n\t            if (typeof qu.config === 'undefined') {\n\t                return;\n\t            }\n\t            if (arguments.length === 0) {\n\t                unsubscribeEvents(targetEvents);\n\t            } else {\n\t                unsubscribeEvents(slice.apply(arguments));\n\t            }\n\t        };\n\t\n\t        (function () {\n\t            var appendCallback = createCallbackAppenderFor(qu),\n\t                eventName, i, callback;\n\t            for (i = 0; i < targetEvents.length; i += 1) {\n\t                eventName = targetEvents[i];\n\t                callback = appendCallback(qu, tap, eventName);\n\t                registeredCallbacks[eventName] = callback;\n\t            }\n\t        })();\n\t\n\t        return tap;\n\t    }\n\t\n\t    qunitTap.qunitTap = function () {\n\t        throw new Error('[BC BREAK] Since 1.4.0, QUnit-TAP exports single qunitTap function as module.exports. Therefore, require(\"qunit-tap\") returns qunitTap function itself. Please fix your code if you are using Node.js (or any CommonJS env).');\n\t    };\n\t\n\t    // using substack pattern (export single function)\n\t    return qunitTap;\n\t}));\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(module) {'use strict';\n\t\n\t/* global QUnit, qunitTap */\n\t\n\tvar qunit_started = false;\n\t\n\t/* Always use explicit start */\n\tQUnit.config.autostart = false;\n\t\n\t/*\n\t * HACK: phantomjs doesn't handle uncaught exceptions as it should if\n\t * window.onerror is non-null, even when that handler returns false\n\t * (expecting that the browser default behavior will occur).\n\t *\n\t * So remove the qunit window.onerror handler until the tests actually\n\t * start, and any errors become part of the test suite results.\n\t */\n\tvar qunit_onerror = window.onerror;\n\twindow.onerror = null;\n\tQUnit.begin(function() {\n\t    window.onerror = function(error, file, line) {\n\t        var ret = false;\n\t        if (qunit_onerror)\n\t            ret = qunit_onerror(error, file, line);\n\t\n\t        /*\n\t         * If a global exception happens during an async test\n\t         * then that test won't be able to call the start() function\n\t         * to move to the next test, so call it here.\n\t         */\n\t        if (QUnit.config.current && QUnit.config.current.async)\n\t            QUnit.start();\n\t\n\t        return ret;\n\t    };\n\t});\n\t\n\tQUnit.moduleStart(function() {\n\t    qunit_started = true;\n\t});\n\t\n\tQUnit.done(function() {\n\t    console.log(\"phantom-tap-done\");\n\t    window.onerror = null;\n\t});\n\t/*\n\t * Now initialize qunit-tap\n\t *\n\t * When not running under tap-phantom this stuff will just show up in\n\t * the console. We print out a special canary at the end of the tests\n\t * so that tap-phantom can know when the testing is done.\n\t *\n\t * In addition double check for a test file that doesn't properly call\n\t * QUnit.start() after its done setting up its tests.\n\t *\n\t * We also want to insert the current test name into all tap lines.\n\t */\n\tvar tap_regex = /^((not )?ok [0-9]+ (- )?)(.*)$/;\n\tqunitTap(QUnit, function() {\n\t    if (arguments.length == 1 && QUnit.config.current) {\n\t        var match = tap_regex.exec(arguments[0]);\n\t        if (match) {\n\t            console.log(match[1] + QUnit.config.current.testName + \": \" + match[4]);\n\t            return;\n\t        }\n\t    }\n\t    console.log.apply(console, arguments);\n\t});\n\t\n\twindow.setTimeout(function() {\n\t    if (!qunit_started) {\n\t        console.log(\"QUnit not started by test\");\n\t        console.log(\"phantom-tap-error\");\n\t    }\n\t}, 20000);\n\t\n\twindow.tests_included = true;\n\t\n\tif (module && module.exports)\n\t    module.exports = QUnit;\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(39)(module)))\n\n/***/ },\n/* 39 */\n/***/ function(module, exports) {\n\n\tmodule.exports = function(module) {\n\t\tif(!module.webpackPolyfill) {\n\t\t\tmodule.deprecate = function() {};\n\t\t\tmodule.paths = [];\n\t\t\t// module.parent = undefined by default\n\t\t\tmodule.children = [];\n\t\t\tmodule.webpackPolyfill = 1;\n\t\t}\n\t\treturn module;\n\t}\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// machines/test-machines.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c9dbb2714f97c0ce2628","'use strict';\n\nvar QUnit = require(\"qunit-tests\");\nvar assert = QUnit;\n\nvar helpers = require(\"./helpers.es6\");\n\nQUnit.test(\"toFixedPrecision\", function() {\n    assert.equal(\"1.0\", helpers.toFixedPrecision(\"1\", 1));\n    assert.equal(\"1.0\", helpers.toFixedPrecision(\"1.0\", 1));\n    assert.equal(\"1.0\", helpers.toFixedPrecision(\"1.01\", 1));\n    assert.equal(\"1.1\", helpers.toFixedPrecision(\"1.1\", 1));\n    assert.equal(\"1.1\", helpers.toFixedPrecision(\"1.123\", 1));\n\n    assert.equal(\"1\", helpers.toFixedPrecision(\"1\", 0));\n    assert.equal(\"1\", helpers.toFixedPrecision(\"1.0\", 0));\n    assert.equal(\"1\", helpers.toFixedPrecision(\"1.01\", 0));\n    assert.equal(\"1\", helpers.toFixedPrecision(\"1.1\", 0));\n    assert.equal(\"1\", helpers.toFixedPrecision(\"1.123\", 0));\n\n    assert.equal(\"1.00\", helpers.toFixedPrecision(\"1\", 2));\n    assert.equal(\"1.00\", helpers.toFixedPrecision(\"1.0\", 2));\n    assert.equal(\"1.01\", helpers.toFixedPrecision(\"1.01\", 2));\n    assert.equal(\"1.10\", helpers.toFixedPrecision(\"1.1\", 2));\n    assert.equal(\"1.12\", helpers.toFixedPrecision(\"1.123\", 2));\n\n    assert.equal(\"12.0\", helpers.toFixedPrecision(\"12\", 1));\n    assert.equal(\"12.0\", helpers.toFixedPrecision(\"12.0\", 1));\n    assert.equal(\"12.0\", helpers.toFixedPrecision(\"12.01\", 1));\n    assert.equal(\"12.0\", helpers.toFixedPrecision(\"12.010\", 1));\n    assert.equal(\"12.1\", helpers.toFixedPrecision(\"12.123\", 1));\n\n    assert.equal(\"12.00\", helpers.toFixedPrecision(\"12\", 2));\n    assert.equal(\"12.00\", helpers.toFixedPrecision(\"12.0\", 2));\n    assert.equal(\"12.01\", helpers.toFixedPrecision(\"12.01\", 2));\n    assert.equal(\"12.01\", helpers.toFixedPrecision(\"12.010\", 2));\n    assert.equal(\"12.12\", helpers.toFixedPrecision(\"12.123\", 2));\n});\n\nQUnit.start();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/machines/test-machines.js\n// module id = 0\n// module chunks = 1","/*jshint esversion: 6 */\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n/**\n * Application-wide constants\n * TODO: make this configurable by user\n */\nconst VMS_CONFIG = {\n    DefaultRefreshInterval: 10000, // in ms\n    Virsh: {\n        connections: {\n            'system': {\n                params: ['-c', 'qemu:///system']\n            },\n            'session': {\n                params: ['-c', 'qemu:///session']\n            }\n        }\n    },\n    // TODO: make it configurable via config file\n    isDev: false, // Never commit with 'true'\n};\n\nexport default VMS_CONFIG;\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/machines/config.es6","/*jshint esversion: 6 */\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\nimport cockpit from 'cockpit';\nimport VMS_CONFIG from './config.es6';\n\nconst _ = cockpit.gettext;\n\nexport function toGigaBytes(amount, currentUnit) {\n    let result;\n    switch (currentUnit) {\n        case 'B':\n            result = amount / 1024 / 1024 / 1024;\n            break;\n        case 'KiB':\n            result = amount / 1024 / 1024;\n            break;\n        default:\n            console.error(`toGigaBytes(): unknown unit: ${currentUnit}`);\n            result = amount / 1;\n    }\n\n    if (result < 1) {\n        result = result.toFixed(2);\n    } else {\n        const fixed1 = result.toFixed(1);\n        result = (result - fixed1 === 0) ? result.toFixed(0) : fixed1;\n    }\n\n    return result;\n}\n\nexport function toKiloBytes(amount, currentUnit) {\n    let result;\n    switch (currentUnit) {\n        case 'B':\n            result = amount / 1024;\n            break;\n        case 'KiB':\n            result = amount;\n            break;\n        case 'MiB':\n            result = amount * 1024;\n            break;\n        case 'GiB':\n            result = amount * 1024;\n            break;\n        default:\n            console.error(`toKiloBytes(): unknown unit: ${currentUnit}`);\n            result = amount / 1;\n    }\n\n    return result;\n}\n\nexport function isEmpty(str) {\n    return (!str || 0 === str.length);\n}\n\nexport function arrayEquals(arr1, arr2) {\n    if (arr1.length !== arr2.length) {\n        return false;\n    }\n\n    const diff = arr1.filter((v, index) => {\n        return v !== arr2[index];\n    });\n    return diff.length === 0;\n}\n\nexport function logDebug(msg) {\n    if (VMS_CONFIG.isDev) {\n        console.log(msg);\n    }\n}\n\nconst transform = {\n    'autostart': {\n        'disable': _(\"disabled\"),\n        'enable': _(\"enabled\"),\n    },\n    'connections': {\n        'system': _(\"System\"),\n        'session': _(\"Session\"),\n    },\n    'vmStates': {\n        running: _(\"running\"),\n        idle: _(\"idle\"),\n        paused: _(\"paused\"),\n        shutdown: _(\"shutdown\"),\n        'shut off': _(\"shut off\"),\n        crashed: _(\"crashed\"),\n        dying: _(\"dying\"),\n        pmsuspended: _(\"suspended (PM)\"),\n    }\n};\n\nexport function rephraseUI(key, original) {\n    if (!(key in transform)) {\n        logDebug(`rephraseUI(key='${key}', original='${original}'): unknown key`);\n        return original;\n    }\n\n    if (!(original in transform[key])) {\n        logDebug(`rephraseUI(key='${key}', original='${original}'): unknown original value`);\n        return original;\n    }\n\n    return transform[key][original];\n}\n\nexport function toFixedPrecision(value, precision) {\n    precision = precision || 0;\n    const power = Math.pow(10, precision);\n    const absValue = Math.abs(Math.round(value * power));\n    let result = (value < 0 ? '-' : '') + String(Math.floor(absValue / power));\n\n    if (precision > 0) {\n        const fraction = String(absValue % power);\n        const padding = new Array(Math.max(precision - fraction.length, 0) + 1).join('0');\n        result += '.' + padding + fraction;\n    }\n    return result;\n}\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/machines/helpers.es6","module.exports = cockpit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cockpit\"\n// module id = 17\n// module chunks = 0 1","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2014 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    /* QUnit needs to have 'window' as 'this' in order to load */\n    window.QUnit = require(\"qunit/qunit/qunit.js\");\n    window.qunitTap = require(\"qunit-tap/lib/qunit-tap.js\");\n\n    require(\"./qunit-config.js\");\n\n    require(\"qunit/qunit/qunit.css\");\n\n    module.exports = window.QUnit;\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/qunit-tests.js\n// module id = 34\n// module chunks = 1","/*!\n * QUnit 1.14.0\n * http://qunitjs.com/\n *\n * Copyright 2013 jQuery Foundation and other contributors\n * Released under the MIT license\n * http://jquery.org/license\n *\n * Date: 2014-01-31T16:40Z\n */\n\n(function( window ) {\n\nvar QUnit,\n\tassert,\n\tconfig,\n\tonErrorFnPrev,\n\ttestId = 0,\n\tfileName = (sourceFromStacktrace( 0 ) || \"\" ).replace(/(:\\d+)+\\)?/, \"\").replace(/.+\\//, \"\"),\n\ttoString = Object.prototype.toString,\n\thasOwn = Object.prototype.hasOwnProperty,\n\t// Keep a local reference to Date (GH-283)\n\tDate = window.Date,\n\tsetTimeout = window.setTimeout,\n\tclearTimeout = window.clearTimeout,\n\tdefined = {\n\t\tdocument: typeof window.document !== \"undefined\",\n\t\tsetTimeout: typeof window.setTimeout !== \"undefined\",\n\t\tsessionStorage: (function() {\n\t\t\tvar x = \"qunit-test-string\";\n\t\t\ttry {\n\t\t\t\tsessionStorage.setItem( x, x );\n\t\t\t\tsessionStorage.removeItem( x );\n\t\t\t\treturn true;\n\t\t\t} catch( e ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}())\n\t},\n\t/**\n\t * Provides a normalized error string, correcting an issue\n\t * with IE 7 (and prior) where Error.prototype.toString is\n\t * not properly implemented\n\t *\n\t * Based on http://es5.github.com/#x15.11.4.4\n\t *\n\t * @param {String|Error} error\n\t * @return {String} error message\n\t */\n\terrorString = function( error ) {\n\t\tvar name, message,\n\t\t\terrorString = error.toString();\n\t\tif ( errorString.substring( 0, 7 ) === \"[object\" ) {\n\t\t\tname = error.name ? error.name.toString() : \"Error\";\n\t\t\tmessage = error.message ? error.message.toString() : \"\";\n\t\t\tif ( name && message ) {\n\t\t\t\treturn name + \": \" + message;\n\t\t\t} else if ( name ) {\n\t\t\t\treturn name;\n\t\t\t} else if ( message ) {\n\t\t\t\treturn message;\n\t\t\t} else {\n\t\t\t\treturn \"Error\";\n\t\t\t}\n\t\t} else {\n\t\t\treturn errorString;\n\t\t}\n\t},\n\t/**\n\t * Makes a clone of an object using only Array or Object as base,\n\t * and copies over the own enumerable properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object} New object with only the own properties (recursively).\n\t */\n\tobjectValues = function( obj ) {\n\t\t// Grunt 0.3.x uses an older version of jshint that still has jshint/jshint#392.\n\t\t/*jshint newcap: false */\n\t\tvar key, val,\n\t\t\tvals = QUnit.is( \"array\", obj ) ? [] : {};\n\t\tfor ( key in obj ) {\n\t\t\tif ( hasOwn.call( obj, key ) ) {\n\t\t\t\tval = obj[key];\n\t\t\t\tvals[key] = val === Object(val) ? objectValues(val) : val;\n\t\t\t}\n\t\t}\n\t\treturn vals;\n\t};\n\n\n// Root QUnit object.\n// `QUnit` initialized at top of scope\nQUnit = {\n\n\t// call on start of module test to prepend name to all tests\n\tmodule: function( name, testEnvironment ) {\n\t\tconfig.currentModule = name;\n\t\tconfig.currentModuleTestEnvironment = testEnvironment;\n\t\tconfig.modules[name] = true;\n\t},\n\n\tasyncTest: function( testName, expected, callback ) {\n\t\tif ( arguments.length === 2 ) {\n\t\t\tcallback = expected;\n\t\t\texpected = null;\n\t\t}\n\n\t\tQUnit.test( testName, expected, callback, true );\n\t},\n\n\ttest: function( testName, expected, callback, async ) {\n\t\tvar test,\n\t\t\tnameHtml = \"<span class='test-name'>\" + escapeText( testName ) + \"</span>\";\n\n\t\tif ( arguments.length === 2 ) {\n\t\t\tcallback = expected;\n\t\t\texpected = null;\n\t\t}\n\n\t\tif ( config.currentModule ) {\n\t\t\tnameHtml = \"<span class='module-name'>\" + escapeText( config.currentModule ) + \"</span>: \" + nameHtml;\n\t\t}\n\n\t\ttest = new Test({\n\t\t\tnameHtml: nameHtml,\n\t\t\ttestName: testName,\n\t\t\texpected: expected,\n\t\t\tasync: async,\n\t\t\tcallback: callback,\n\t\t\tmodule: config.currentModule,\n\t\t\tmoduleTestEnvironment: config.currentModuleTestEnvironment,\n\t\t\tstack: sourceFromStacktrace( 2 )\n\t\t});\n\n\t\tif ( !validTest( test ) ) {\n\t\t\treturn;\n\t\t}\n\n\t\ttest.queue();\n\t},\n\n\t// Specify the number of expected assertions to guarantee that failed test (no assertions are run at all) don't slip through.\n\texpect: function( asserts ) {\n\t\tif (arguments.length === 1) {\n\t\t\tconfig.current.expected = asserts;\n\t\t} else {\n\t\t\treturn config.current.expected;\n\t\t}\n\t},\n\n\tstart: function( count ) {\n\t\t// QUnit hasn't been initialized yet.\n\t\t// Note: RequireJS (et al) may delay onLoad\n\t\tif ( config.semaphore === undefined ) {\n\t\t\tQUnit.begin(function() {\n\t\t\t\t// This is triggered at the top of QUnit.load, push start() to the event loop, to allow QUnit.load to finish first\n\t\t\t\tsetTimeout(function() {\n\t\t\t\t\tQUnit.start( count );\n\t\t\t\t});\n\t\t\t});\n\t\t\treturn;\n\t\t}\n\n\t\tconfig.semaphore -= count || 1;\n\t\t// don't start until equal number of stop-calls\n\t\tif ( config.semaphore > 0 ) {\n\t\t\treturn;\n\t\t}\n\t\t// ignore if start is called more often then stop\n\t\tif ( config.semaphore < 0 ) {\n\t\t\tconfig.semaphore = 0;\n\t\t\tQUnit.pushFailure( \"Called start() while already started (QUnit.config.semaphore was 0 already)\", null, sourceFromStacktrace(2) );\n\t\t\treturn;\n\t\t}\n\t\t// A slight delay, to avoid any current callbacks\n\t\tif ( defined.setTimeout ) {\n\t\t\tsetTimeout(function() {\n\t\t\t\tif ( config.semaphore > 0 ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif ( config.timeout ) {\n\t\t\t\t\tclearTimeout( config.timeout );\n\t\t\t\t}\n\n\t\t\t\tconfig.blocking = false;\n\t\t\t\tprocess( true );\n\t\t\t}, 13);\n\t\t} else {\n\t\t\tconfig.blocking = false;\n\t\t\tprocess( true );\n\t\t}\n\t},\n\n\tstop: function( count ) {\n\t\tconfig.semaphore += count || 1;\n\t\tconfig.blocking = true;\n\n\t\tif ( config.testTimeout && defined.setTimeout ) {\n\t\t\tclearTimeout( config.timeout );\n\t\t\tconfig.timeout = setTimeout(function() {\n\t\t\t\tQUnit.ok( false, \"Test timed out\" );\n\t\t\t\tconfig.semaphore = 1;\n\t\t\t\tQUnit.start();\n\t\t\t}, config.testTimeout );\n\t\t}\n\t}\n};\n\n// We use the prototype to distinguish between properties that should\n// be exposed as globals (and in exports) and those that shouldn't\n(function() {\n\tfunction F() {}\n\tF.prototype = QUnit;\n\tQUnit = new F();\n\t// Make F QUnit's constructor so that we can add to the prototype later\n\tQUnit.constructor = F;\n}());\n\n/**\n * Config object: Maintain internal state\n * Later exposed as QUnit.config\n * `config` initialized at top of scope\n */\nconfig = {\n\t// The queue of tests to run\n\tqueue: [],\n\n\t// block until document ready\n\tblocking: true,\n\n\t// when enabled, show only failing tests\n\t// gets persisted through sessionStorage and can be changed in UI via checkbox\n\thidepassed: false,\n\n\t// by default, run previously failed tests first\n\t// very useful in combination with \"Hide passed tests\" checked\n\treorder: true,\n\n\t// by default, modify document.title when suite is done\n\taltertitle: true,\n\n\t// by default, scroll to top of the page when suite is done\n\tscrolltop: true,\n\n\t// when enabled, all tests must call expect()\n\trequireExpects: false,\n\n\t// add checkboxes that are persisted in the query-string\n\t// when enabled, the id is set to `true` as a `QUnit.config` property\n\turlConfig: [\n\t\t{\n\t\t\tid: \"noglobals\",\n\t\t\tlabel: \"Check for Globals\",\n\t\t\ttooltip: \"Enabling this will test if any test introduces new properties on the `window` object. Stored as query-strings.\"\n\t\t},\n\t\t{\n\t\t\tid: \"notrycatch\",\n\t\t\tlabel: \"No try-catch\",\n\t\t\ttooltip: \"Enabling this will run tests outside of a try-catch block. Makes debugging exceptions in IE reasonable. Stored as query-strings.\"\n\t\t}\n\t],\n\n\t// Set of all modules.\n\tmodules: {},\n\n\t// logging callback queues\n\tbegin: [],\n\tdone: [],\n\tlog: [],\n\ttestStart: [],\n\ttestDone: [],\n\tmoduleStart: [],\n\tmoduleDone: []\n};\n\n// Initialize more QUnit.config and QUnit.urlParams\n(function() {\n\tvar i, current,\n\t\tlocation = window.location || { search: \"\", protocol: \"file:\" },\n\t\tparams = location.search.slice( 1 ).split( \"&\" ),\n\t\tlength = params.length,\n\t\turlParams = {};\n\n\tif ( params[ 0 ] ) {\n\t\tfor ( i = 0; i < length; i++ ) {\n\t\t\tcurrent = params[ i ].split( \"=\" );\n\t\t\tcurrent[ 0 ] = decodeURIComponent( current[ 0 ] );\n\n\t\t\t// allow just a key to turn on a flag, e.g., test.html?noglobals\n\t\t\tcurrent[ 1 ] = current[ 1 ] ? decodeURIComponent( current[ 1 ] ) : true;\n\t\t\tif ( urlParams[ current[ 0 ] ] ) {\n\t\t\t\turlParams[ current[ 0 ] ] = [].concat( urlParams[ current[ 0 ] ], current[ 1 ] );\n\t\t\t} else {\n\t\t\t\turlParams[ current[ 0 ] ] = current[ 1 ];\n\t\t\t}\n\t\t}\n\t}\n\n\tQUnit.urlParams = urlParams;\n\n\t// String search anywhere in moduleName+testName\n\tconfig.filter = urlParams.filter;\n\n\t// Exact match of the module name\n\tconfig.module = urlParams.module;\n\n\tconfig.testNumber = [];\n\tif ( urlParams.testNumber ) {\n\n\t\t// Ensure that urlParams.testNumber is an array\n\t\turlParams.testNumber = [].concat( urlParams.testNumber );\n\t\tfor ( i = 0; i < urlParams.testNumber.length; i++ ) {\n\t\t\tcurrent = urlParams.testNumber[ i ];\n\t\t\tconfig.testNumber.push( parseInt( current, 10 ) );\n\t\t}\n\t}\n\n\t// Figure out if we're running the tests from a server or not\n\tQUnit.isLocal = location.protocol === \"file:\";\n}());\n\nextend( QUnit, {\n\n\tconfig: config,\n\n\t// Initialize the configuration options\n\tinit: function() {\n\t\textend( config, {\n\t\t\tstats: { all: 0, bad: 0 },\n\t\t\tmoduleStats: { all: 0, bad: 0 },\n\t\t\tstarted: +new Date(),\n\t\t\tupdateRate: 1000,\n\t\t\tblocking: false,\n\t\t\tautostart: true,\n\t\t\tautorun: false,\n\t\t\tfilter: \"\",\n\t\t\tqueue: [],\n\t\t\tsemaphore: 1\n\t\t});\n\n\t\tvar tests, banner, result,\n\t\t\tqunit = id( \"qunit\" );\n\n\t\tif ( qunit ) {\n\t\t\tqunit.innerHTML =\n\t\t\t\t\"<h1 id='qunit-header'>\" + escapeText( document.title ) + \"</h1>\" +\n\t\t\t\t\"<h2 id='qunit-banner'></h2>\" +\n\t\t\t\t\"<div id='qunit-testrunner-toolbar'></div>\" +\n\t\t\t\t\"<h2 id='qunit-userAgent'></h2>\" +\n\t\t\t\t\"<ol id='qunit-tests'></ol>\";\n\t\t}\n\n\t\ttests = id( \"qunit-tests\" );\n\t\tbanner = id( \"qunit-banner\" );\n\t\tresult = id( \"qunit-testresult\" );\n\n\t\tif ( tests ) {\n\t\t\ttests.innerHTML = \"\";\n\t\t}\n\n\t\tif ( banner ) {\n\t\t\tbanner.className = \"\";\n\t\t}\n\n\t\tif ( result ) {\n\t\t\tresult.parentNode.removeChild( result );\n\t\t}\n\n\t\tif ( tests ) {\n\t\t\tresult = document.createElement( \"p\" );\n\t\t\tresult.id = \"qunit-testresult\";\n\t\t\tresult.className = \"result\";\n\t\t\ttests.parentNode.insertBefore( result, tests );\n\t\t\tresult.innerHTML = \"Running...<br/>&nbsp;\";\n\t\t}\n\t},\n\n\t// Resets the test setup. Useful for tests that modify the DOM.\n\t/*\n\tDEPRECATED: Use multiple tests instead of resetting inside a test.\n\tUse testStart or testDone for custom cleanup.\n\tThis method will throw an error in 2.0, and will be removed in 2.1\n\t*/\n\treset: function() {\n\t\tvar fixture = id( \"qunit-fixture\" );\n\t\tif ( fixture ) {\n\t\t\tfixture.innerHTML = config.fixture;\n\t\t}\n\t},\n\n\t// Safe object type checking\n\tis: function( type, obj ) {\n\t\treturn QUnit.objectType( obj ) === type;\n\t},\n\n\tobjectType: function( obj ) {\n\t\tif ( typeof obj === \"undefined\" ) {\n\t\t\treturn \"undefined\";\n\t\t}\n\n\t\t// Consider: typeof null === object\n\t\tif ( obj === null ) {\n\t\t\treturn \"null\";\n\t\t}\n\n\t\tvar match = toString.call( obj ).match(/^\\[object\\s(.*)\\]$/),\n\t\t\ttype = match && match[1] || \"\";\n\n\t\tswitch ( type ) {\n\t\t\tcase \"Number\":\n\t\t\t\tif ( isNaN(obj) ) {\n\t\t\t\t\treturn \"nan\";\n\t\t\t\t}\n\t\t\t\treturn \"number\";\n\t\t\tcase \"String\":\n\t\t\tcase \"Boolean\":\n\t\t\tcase \"Array\":\n\t\t\tcase \"Date\":\n\t\t\tcase \"RegExp\":\n\t\t\tcase \"Function\":\n\t\t\t\treturn type.toLowerCase();\n\t\t}\n\t\tif ( typeof obj === \"object\" ) {\n\t\t\treturn \"object\";\n\t\t}\n\t\treturn undefined;\n\t},\n\n\tpush: function( result, actual, expected, message ) {\n\t\tif ( !config.current ) {\n\t\t\tthrow new Error( \"assertion outside test context, was \" + sourceFromStacktrace() );\n\t\t}\n\n\t\tvar output, source,\n\t\t\tdetails = {\n\t\t\t\tmodule: config.current.module,\n\t\t\t\tname: config.current.testName,\n\t\t\t\tresult: result,\n\t\t\t\tmessage: message,\n\t\t\t\tactual: actual,\n\t\t\t\texpected: expected\n\t\t\t};\n\n\t\tmessage = escapeText( message ) || ( result ? \"okay\" : \"failed\" );\n\t\tmessage = \"<span class='test-message'>\" + message + \"</span>\";\n\t\toutput = message;\n\n\t\tif ( !result ) {\n\t\t\texpected = escapeText( QUnit.jsDump.parse(expected) );\n\t\t\tactual = escapeText( QUnit.jsDump.parse(actual) );\n\t\t\toutput += \"<table><tr class='test-expected'><th>Expected: </th><td><pre>\" + expected + \"</pre></td></tr>\";\n\n\t\t\tif ( actual !== expected ) {\n\t\t\t\toutput += \"<tr class='test-actual'><th>Result: </th><td><pre>\" + actual + \"</pre></td></tr>\";\n\t\t\t\toutput += \"<tr class='test-diff'><th>Diff: </th><td><pre>\" + QUnit.diff( expected, actual ) + \"</pre></td></tr>\";\n\t\t\t}\n\n\t\t\tsource = sourceFromStacktrace();\n\n\t\t\tif ( source ) {\n\t\t\t\tdetails.source = source;\n\t\t\t\toutput += \"<tr class='test-source'><th>Source: </th><td><pre>\" + escapeText( source ) + \"</pre></td></tr>\";\n\t\t\t}\n\n\t\t\toutput += \"</table>\";\n\t\t}\n\n\t\trunLoggingCallbacks( \"log\", QUnit, details );\n\n\t\tconfig.current.assertions.push({\n\t\t\tresult: !!result,\n\t\t\tmessage: output\n\t\t});\n\t},\n\n\tpushFailure: function( message, source, actual ) {\n\t\tif ( !config.current ) {\n\t\t\tthrow new Error( \"pushFailure() assertion outside test context, was \" + sourceFromStacktrace(2) );\n\t\t}\n\n\t\tvar output,\n\t\t\tdetails = {\n\t\t\t\tmodule: config.current.module,\n\t\t\t\tname: config.current.testName,\n\t\t\t\tresult: false,\n\t\t\t\tmessage: message\n\t\t\t};\n\n\t\tmessage = escapeText( message ) || \"error\";\n\t\tmessage = \"<span class='test-message'>\" + message + \"</span>\";\n\t\toutput = message;\n\n\t\toutput += \"<table>\";\n\n\t\tif ( actual ) {\n\t\t\toutput += \"<tr class='test-actual'><th>Result: </th><td><pre>\" + escapeText( actual ) + \"</pre></td></tr>\";\n\t\t}\n\n\t\tif ( source ) {\n\t\t\tdetails.source = source;\n\t\t\toutput += \"<tr class='test-source'><th>Source: </th><td><pre>\" + escapeText( source ) + \"</pre></td></tr>\";\n\t\t}\n\n\t\toutput += \"</table>\";\n\n\t\trunLoggingCallbacks( \"log\", QUnit, details );\n\n\t\tconfig.current.assertions.push({\n\t\t\tresult: false,\n\t\t\tmessage: output\n\t\t});\n\t},\n\n\turl: function( params ) {\n\t\tparams = extend( extend( {}, QUnit.urlParams ), params );\n\t\tvar key,\n\t\t\tquerystring = \"?\";\n\n\t\tfor ( key in params ) {\n\t\t\tif ( hasOwn.call( params, key ) ) {\n\t\t\t\tquerystring += encodeURIComponent( key ) + \"=\" +\n\t\t\t\t\tencodeURIComponent( params[ key ] ) + \"&\";\n\t\t\t}\n\t\t}\n\t\treturn window.location.protocol + \"//\" + window.location.host +\n\t\t\twindow.location.pathname + querystring.slice( 0, -1 );\n\t},\n\n\textend: extend,\n\tid: id,\n\taddEvent: addEvent,\n\taddClass: addClass,\n\thasClass: hasClass,\n\tremoveClass: removeClass\n\t// load, equiv, jsDump, diff: Attached later\n});\n\n/**\n * @deprecated: Created for backwards compatibility with test runner that set the hook function\n * into QUnit.{hook}, instead of invoking it and passing the hook function.\n * QUnit.constructor is set to the empty F() above so that we can add to it's prototype here.\n * Doing this allows us to tell if the following methods have been overwritten on the actual\n * QUnit object.\n */\nextend( QUnit.constructor.prototype, {\n\n\t// Logging callbacks; all receive a single argument with the listed properties\n\t// run test/logs.html for any related changes\n\tbegin: registerLoggingCallback( \"begin\" ),\n\n\t// done: { failed, passed, total, runtime }\n\tdone: registerLoggingCallback( \"done\" ),\n\n\t// log: { result, actual, expected, message }\n\tlog: registerLoggingCallback( \"log\" ),\n\n\t// testStart: { name }\n\ttestStart: registerLoggingCallback( \"testStart\" ),\n\n\t// testDone: { name, failed, passed, total, runtime }\n\ttestDone: registerLoggingCallback( \"testDone\" ),\n\n\t// moduleStart: { name }\n\tmoduleStart: registerLoggingCallback( \"moduleStart\" ),\n\n\t// moduleDone: { name, failed, passed, total }\n\tmoduleDone: registerLoggingCallback( \"moduleDone\" )\n});\n\nif ( !defined.document || document.readyState === \"complete\" ) {\n\tconfig.autorun = true;\n}\n\nQUnit.load = function() {\n\trunLoggingCallbacks( \"begin\", QUnit, {} );\n\n\t// Initialize the config, saving the execution queue\n\tvar banner, filter, i, j, label, len, main, ol, toolbar, val, selection,\n\t\turlConfigContainer, moduleFilter, userAgent,\n\t\tnumModules = 0,\n\t\tmoduleNames = [],\n\t\tmoduleFilterHtml = \"\",\n\t\turlConfigHtml = \"\",\n\t\toldconfig = extend( {}, config );\n\n\tQUnit.init();\n\textend(config, oldconfig);\n\n\tconfig.blocking = false;\n\n\tlen = config.urlConfig.length;\n\n\tfor ( i = 0; i < len; i++ ) {\n\t\tval = config.urlConfig[i];\n\t\tif ( typeof val === \"string\" ) {\n\t\t\tval = {\n\t\t\t\tid: val,\n\t\t\t\tlabel: val\n\t\t\t};\n\t\t}\n\t\tconfig[ val.id ] = QUnit.urlParams[ val.id ];\n\t\tif ( !val.value || typeof val.value === \"string\" ) {\n\t\t\turlConfigHtml += \"<input id='qunit-urlconfig-\" + escapeText( val.id ) +\n\t\t\t\t\"' name='\" + escapeText( val.id ) +\n\t\t\t\t\"' type='checkbox'\" +\n\t\t\t\t( val.value ? \" value='\" + escapeText( val.value ) + \"'\" : \"\" ) +\n\t\t\t\t( config[ val.id ] ? \" checked='checked'\" : \"\" ) +\n\t\t\t\t\" title='\" + escapeText( val.tooltip ) +\n\t\t\t\t\"'><label for='qunit-urlconfig-\" + escapeText( val.id ) +\n\t\t\t\t\"' title='\" + escapeText( val.tooltip ) + \"'>\" + val.label + \"</label>\";\n\t\t} else {\n\t\t\turlConfigHtml += \"<label for='qunit-urlconfig-\" + escapeText( val.id ) +\n\t\t\t\t\"' title='\" + escapeText( val.tooltip ) +\n\t\t\t\t\"'>\" + val.label +\n\t\t\t\t\": </label><select id='qunit-urlconfig-\" + escapeText( val.id ) +\n\t\t\t\t\"' name='\" + escapeText( val.id ) +\n\t\t\t\t\"' title='\" + escapeText( val.tooltip ) +\n\t\t\t\t\"'><option></option>\";\n\t\t\tselection = false;\n\t\t\tif ( QUnit.is( \"array\", val.value ) ) {\n\t\t\t\tfor ( j = 0; j < val.value.length; j++ ) {\n\t\t\t\t\turlConfigHtml += \"<option value='\" + escapeText( val.value[j] ) + \"'\" +\n\t\t\t\t\t\t( config[ val.id ] === val.value[j] ?\n\t\t\t\t\t\t\t(selection = true) && \" selected='selected'\" :\n\t\t\t\t\t\t\t\"\" ) +\n\t\t\t\t\t\t\">\" + escapeText( val.value[j] ) + \"</option>\";\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tfor ( j in val.value ) {\n\t\t\t\t\tif ( hasOwn.call( val.value, j ) ) {\n\t\t\t\t\t\turlConfigHtml += \"<option value='\" + escapeText( j ) + \"'\" +\n\t\t\t\t\t\t\t( config[ val.id ] === j ?\n\t\t\t\t\t\t\t\t(selection = true) && \" selected='selected'\" :\n\t\t\t\t\t\t\t\t\"\" ) +\n\t\t\t\t\t\t\t\">\" + escapeText( val.value[j] ) + \"</option>\";\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ( config[ val.id ] && !selection ) {\n\t\t\t\turlConfigHtml += \"<option value='\" + escapeText( config[ val.id ] ) +\n\t\t\t\t\t\"' selected='selected' disabled='disabled'>\" +\n\t\t\t\t\tescapeText( config[ val.id ] ) +\n\t\t\t\t\t\"</option>\";\n\t\t\t}\n\t\t\turlConfigHtml += \"</select>\";\n\t\t}\n\t}\n\tfor ( i in config.modules ) {\n\t\tif ( config.modules.hasOwnProperty( i ) ) {\n\t\t\tmoduleNames.push(i);\n\t\t}\n\t}\n\tnumModules = moduleNames.length;\n\tmoduleNames.sort( function( a, b ) {\n\t\treturn a.localeCompare( b );\n\t});\n\tmoduleFilterHtml += \"<label for='qunit-modulefilter'>Module: </label><select id='qunit-modulefilter' name='modulefilter'><option value='' \" +\n\t\t( config.module === undefined  ? \"selected='selected'\" : \"\" ) +\n\t\t\">< All Modules ></option>\";\n\n\n\tfor ( i = 0; i < numModules; i++) {\n\t\t\tmoduleFilterHtml += \"<option value='\" + escapeText( encodeURIComponent(moduleNames[i]) ) + \"' \" +\n\t\t\t\t( config.module === moduleNames[i] ? \"selected='selected'\" : \"\" ) +\n\t\t\t\t\">\" + escapeText(moduleNames[i]) + \"</option>\";\n\t}\n\tmoduleFilterHtml += \"</select>\";\n\n\t// `userAgent` initialized at top of scope\n\tuserAgent = id( \"qunit-userAgent\" );\n\tif ( userAgent ) {\n\t\tuserAgent.innerHTML = navigator.userAgent;\n\t}\n\n\t// `banner` initialized at top of scope\n\tbanner = id( \"qunit-header\" );\n\tif ( banner ) {\n\t\tbanner.innerHTML = \"<a href='\" + QUnit.url({ filter: undefined, module: undefined, testNumber: undefined }) + \"'>\" + banner.innerHTML + \"</a> \";\n\t}\n\n\t// `toolbar` initialized at top of scope\n\ttoolbar = id( \"qunit-testrunner-toolbar\" );\n\tif ( toolbar ) {\n\t\t// `filter` initialized at top of scope\n\t\tfilter = document.createElement( \"input\" );\n\t\tfilter.type = \"checkbox\";\n\t\tfilter.id = \"qunit-filter-pass\";\n\n\t\taddEvent( filter, \"click\", function() {\n\t\t\tvar tmp,\n\t\t\t\tol = id( \"qunit-tests\" );\n\n\t\t\tif ( filter.checked ) {\n\t\t\t\tol.className = ol.className + \" hidepass\";\n\t\t\t} else {\n\t\t\t\ttmp = \" \" + ol.className.replace( /[\\n\\t\\r]/g, \" \" ) + \" \";\n\t\t\t\tol.className = tmp.replace( / hidepass /, \" \" );\n\t\t\t}\n\t\t\tif ( defined.sessionStorage ) {\n\t\t\t\tif (filter.checked) {\n\t\t\t\t\tsessionStorage.setItem( \"qunit-filter-passed-tests\", \"true\" );\n\t\t\t\t} else {\n\t\t\t\t\tsessionStorage.removeItem( \"qunit-filter-passed-tests\" );\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\tif ( config.hidepassed || defined.sessionStorage && sessionStorage.getItem( \"qunit-filter-passed-tests\" ) ) {\n\t\t\tfilter.checked = true;\n\t\t\t// `ol` initialized at top of scope\n\t\t\tol = id( \"qunit-tests\" );\n\t\t\tol.className = ol.className + \" hidepass\";\n\t\t}\n\t\ttoolbar.appendChild( filter );\n\n\t\t// `label` initialized at top of scope\n\t\tlabel = document.createElement( \"label\" );\n\t\tlabel.setAttribute( \"for\", \"qunit-filter-pass\" );\n\t\tlabel.setAttribute( \"title\", \"Only show tests and assertions that fail. Stored in sessionStorage.\" );\n\t\tlabel.innerHTML = \"Hide passed tests\";\n\t\ttoolbar.appendChild( label );\n\n\t\turlConfigContainer = document.createElement(\"span\");\n\t\turlConfigContainer.innerHTML = urlConfigHtml;\n\t\t// For oldIE support:\n\t\t// * Add handlers to the individual elements instead of the container\n\t\t// * Use \"click\" instead of \"change\" for checkboxes\n\t\t// * Fallback from event.target to event.srcElement\n\t\taddEvents( urlConfigContainer.getElementsByTagName(\"input\"), \"click\", function( event ) {\n\t\t\tvar params = {},\n\t\t\t\ttarget = event.target || event.srcElement;\n\t\t\tparams[ target.name ] = target.checked ?\n\t\t\t\ttarget.defaultValue || true :\n\t\t\t\tundefined;\n\t\t\twindow.location = QUnit.url( params );\n\t\t});\n\t\taddEvents( urlConfigContainer.getElementsByTagName(\"select\"), \"change\", function( event ) {\n\t\t\tvar params = {},\n\t\t\t\ttarget = event.target || event.srcElement;\n\t\t\tparams[ target.name ] = target.options[ target.selectedIndex ].value || undefined;\n\t\t\twindow.location = QUnit.url( params );\n\t\t});\n\t\ttoolbar.appendChild( urlConfigContainer );\n\n\t\tif (numModules > 1) {\n\t\t\tmoduleFilter = document.createElement( \"span\" );\n\t\t\tmoduleFilter.setAttribute( \"id\", \"qunit-modulefilter-container\" );\n\t\t\tmoduleFilter.innerHTML = moduleFilterHtml;\n\t\t\taddEvent( moduleFilter.lastChild, \"change\", function() {\n\t\t\t\tvar selectBox = moduleFilter.getElementsByTagName(\"select\")[0],\n\t\t\t\t\tselectedModule = decodeURIComponent(selectBox.options[selectBox.selectedIndex].value);\n\n\t\t\t\twindow.location = QUnit.url({\n\t\t\t\t\tmodule: ( selectedModule === \"\" ) ? undefined : selectedModule,\n\t\t\t\t\t// Remove any existing filters\n\t\t\t\t\tfilter: undefined,\n\t\t\t\t\ttestNumber: undefined\n\t\t\t\t});\n\t\t\t});\n\t\t\ttoolbar.appendChild(moduleFilter);\n\t\t}\n\t}\n\n\t// `main` initialized at top of scope\n\tmain = id( \"qunit-fixture\" );\n\tif ( main ) {\n\t\tconfig.fixture = main.innerHTML;\n\t}\n\n\tif ( config.autostart ) {\n\t\tQUnit.start();\n\t}\n};\n\nif ( defined.document ) {\n\taddEvent( window, \"load\", QUnit.load );\n}\n\n// `onErrorFnPrev` initialized at top of scope\n// Preserve other handlers\nonErrorFnPrev = window.onerror;\n\n// Cover uncaught exceptions\n// Returning true will suppress the default browser handler,\n// returning false will let it run.\nwindow.onerror = function ( error, filePath, linerNr ) {\n\tvar ret = false;\n\tif ( onErrorFnPrev ) {\n\t\tret = onErrorFnPrev( error, filePath, linerNr );\n\t}\n\n\t// Treat return value as window.onerror itself does,\n\t// Only do our handling if not suppressed.\n\tif ( ret !== true ) {\n\t\tif ( QUnit.config.current ) {\n\t\t\tif ( QUnit.config.current.ignoreGlobalErrors ) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tQUnit.pushFailure( error, filePath + \":\" + linerNr );\n\t\t} else {\n\t\t\tQUnit.test( \"global failure\", extend( function() {\n\t\t\t\tQUnit.pushFailure( error, filePath + \":\" + linerNr );\n\t\t\t}, { validTest: validTest } ) );\n\t\t}\n\t\treturn false;\n\t}\n\n\treturn ret;\n};\n\nfunction done() {\n\tconfig.autorun = true;\n\n\t// Log the last module results\n\tif ( config.previousModule ) {\n\t\trunLoggingCallbacks( \"moduleDone\", QUnit, {\n\t\t\tname: config.previousModule,\n\t\t\tfailed: config.moduleStats.bad,\n\t\t\tpassed: config.moduleStats.all - config.moduleStats.bad,\n\t\t\ttotal: config.moduleStats.all\n\t\t});\n\t}\n\tdelete config.previousModule;\n\n\tvar i, key,\n\t\tbanner = id( \"qunit-banner\" ),\n\t\ttests = id( \"qunit-tests\" ),\n\t\truntime = +new Date() - config.started,\n\t\tpassed = config.stats.all - config.stats.bad,\n\t\thtml = [\n\t\t\t\"Tests completed in \",\n\t\t\truntime,\n\t\t\t\" milliseconds.<br/>\",\n\t\t\t\"<span class='passed'>\",\n\t\t\tpassed,\n\t\t\t\"</span> assertions of <span class='total'>\",\n\t\t\tconfig.stats.all,\n\t\t\t\"</span> passed, <span class='failed'>\",\n\t\t\tconfig.stats.bad,\n\t\t\t\"</span> failed.\"\n\t\t].join( \"\" );\n\n\tif ( banner ) {\n\t\tbanner.className = ( config.stats.bad ? \"qunit-fail\" : \"qunit-pass\" );\n\t}\n\n\tif ( tests ) {\n\t\tid( \"qunit-testresult\" ).innerHTML = html;\n\t}\n\n\tif ( config.altertitle && defined.document && document.title ) {\n\t\t// show ✖ for good, ✔ for bad suite result in title\n\t\t// use escape sequences in case file gets loaded with non-utf-8-charset\n\t\tdocument.title = [\n\t\t\t( config.stats.bad ? \"\\u2716\" : \"\\u2714\" ),\n\t\t\tdocument.title.replace( /^[\\u2714\\u2716] /i, \"\" )\n\t\t].join( \" \" );\n\t}\n\n\t// clear own sessionStorage items if all tests passed\n\tif ( config.reorder && defined.sessionStorage && config.stats.bad === 0 ) {\n\t\t// `key` & `i` initialized at top of scope\n\t\tfor ( i = 0; i < sessionStorage.length; i++ ) {\n\t\t\tkey = sessionStorage.key( i++ );\n\t\t\tif ( key.indexOf( \"qunit-test-\" ) === 0 ) {\n\t\t\t\tsessionStorage.removeItem( key );\n\t\t\t}\n\t\t}\n\t}\n\n\t// scroll back to top to show results\n\tif ( config.scrolltop && window.scrollTo ) {\n\t\twindow.scrollTo(0, 0);\n\t}\n\n\trunLoggingCallbacks( \"done\", QUnit, {\n\t\tfailed: config.stats.bad,\n\t\tpassed: passed,\n\t\ttotal: config.stats.all,\n\t\truntime: runtime\n\t});\n}\n\n/** @return Boolean: true if this test should be ran */\nfunction validTest( test ) {\n\tvar include,\n\t\tfilter = config.filter && config.filter.toLowerCase(),\n\t\tmodule = config.module && config.module.toLowerCase(),\n\t\tfullName = ( test.module + \": \" + test.testName ).toLowerCase();\n\n\t// Internally-generated tests are always valid\n\tif ( test.callback && test.callback.validTest === validTest ) {\n\t\tdelete test.callback.validTest;\n\t\treturn true;\n\t}\n\n\tif ( config.testNumber.length > 0 ) {\n\t\tif ( inArray( test.testNumber, config.testNumber ) < 0 ) {\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tif ( module && ( !test.module || test.module.toLowerCase() !== module ) ) {\n\t\treturn false;\n\t}\n\n\tif ( !filter ) {\n\t\treturn true;\n\t}\n\n\tinclude = filter.charAt( 0 ) !== \"!\";\n\tif ( !include ) {\n\t\tfilter = filter.slice( 1 );\n\t}\n\n\t// If the filter matches, we need to honour include\n\tif ( fullName.indexOf( filter ) !== -1 ) {\n\t\treturn include;\n\t}\n\n\t// Otherwise, do the opposite\n\treturn !include;\n}\n\n// so far supports only Firefox, Chrome and Opera (buggy), Safari (for real exceptions)\n// Later Safari and IE10 are supposed to support error.stack as well\n// See also https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error/Stack\nfunction extractStacktrace( e, offset ) {\n\toffset = offset === undefined ? 3 : offset;\n\n\tvar stack, include, i;\n\n\tif ( e.stacktrace ) {\n\t\t// Opera\n\t\treturn e.stacktrace.split( \"\\n\" )[ offset + 3 ];\n\t} else if ( e.stack ) {\n\t\t// Firefox, Chrome\n\t\tstack = e.stack.split( \"\\n\" );\n\t\tif (/^error$/i.test( stack[0] ) ) {\n\t\t\tstack.shift();\n\t\t}\n\t\tif ( fileName ) {\n\t\t\tinclude = [];\n\t\t\tfor ( i = offset; i < stack.length; i++ ) {\n\t\t\t\tif ( stack[ i ].indexOf( fileName ) !== -1 ) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\tinclude.push( stack[ i ] );\n\t\t\t}\n\t\t\tif ( include.length ) {\n\t\t\t\treturn include.join( \"\\n\" );\n\t\t\t}\n\t\t}\n\t\treturn stack[ offset ];\n\t} else if ( e.sourceURL ) {\n\t\t// Safari, PhantomJS\n\t\t// hopefully one day Safari provides actual stacktraces\n\t\t// exclude useless self-reference for generated Error objects\n\t\tif ( /qunit.js$/.test( e.sourceURL ) ) {\n\t\t\treturn;\n\t\t}\n\t\t// for actual exceptions, this is useful\n\t\treturn e.sourceURL + \":\" + e.line;\n\t}\n}\nfunction sourceFromStacktrace( offset ) {\n\ttry {\n\t\tthrow new Error();\n\t} catch ( e ) {\n\t\treturn extractStacktrace( e, offset );\n\t}\n}\n\n/**\n * Escape text for attribute or text content.\n */\nfunction escapeText( s ) {\n\tif ( !s ) {\n\t\treturn \"\";\n\t}\n\ts = s + \"\";\n\t// Both single quotes and double quotes (for attributes)\n\treturn s.replace( /['\"<>&]/g, function( s ) {\n\t\tswitch( s ) {\n\t\t\tcase \"'\":\n\t\t\t\treturn \"&#039;\";\n\t\t\tcase \"\\\"\":\n\t\t\t\treturn \"&quot;\";\n\t\t\tcase \"<\":\n\t\t\t\treturn \"&lt;\";\n\t\t\tcase \">\":\n\t\t\t\treturn \"&gt;\";\n\t\t\tcase \"&\":\n\t\t\t\treturn \"&amp;\";\n\t\t}\n\t});\n}\n\nfunction synchronize( callback, last ) {\n\tconfig.queue.push( callback );\n\n\tif ( config.autorun && !config.blocking ) {\n\t\tprocess( last );\n\t}\n}\n\nfunction process( last ) {\n\tfunction next() {\n\t\tprocess( last );\n\t}\n\tvar start = new Date().getTime();\n\tconfig.depth = config.depth ? config.depth + 1 : 1;\n\n\twhile ( config.queue.length && !config.blocking ) {\n\t\tif ( !defined.setTimeout || config.updateRate <= 0 || ( ( new Date().getTime() - start ) < config.updateRate ) ) {\n\t\t\tconfig.queue.shift()();\n\t\t} else {\n\t\t\tsetTimeout( next, 13 );\n\t\t\tbreak;\n\t\t}\n\t}\n\tconfig.depth--;\n\tif ( last && !config.blocking && !config.queue.length && config.depth === 0 ) {\n\t\tdone();\n\t}\n}\n\nfunction saveGlobal() {\n\tconfig.pollution = [];\n\n\tif ( config.noglobals ) {\n\t\tfor ( var key in window ) {\n\t\t\tif ( hasOwn.call( window, key ) ) {\n\t\t\t\t// in Opera sometimes DOM element ids show up here, ignore them\n\t\t\t\tif ( /^qunit-test-output/.test( key ) ) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tconfig.pollution.push( key );\n\t\t\t}\n\t\t}\n\t}\n}\n\nfunction checkPollution() {\n\tvar newGlobals,\n\t\tdeletedGlobals,\n\t\told = config.pollution;\n\n\tsaveGlobal();\n\n\tnewGlobals = diff( config.pollution, old );\n\tif ( newGlobals.length > 0 ) {\n\t\tQUnit.pushFailure( \"Introduced global variable(s): \" + newGlobals.join(\", \") );\n\t}\n\n\tdeletedGlobals = diff( old, config.pollution );\n\tif ( deletedGlobals.length > 0 ) {\n\t\tQUnit.pushFailure( \"Deleted global variable(s): \" + deletedGlobals.join(\", \") );\n\t}\n}\n\n// returns a new Array with the elements that are in a but not in b\nfunction diff( a, b ) {\n\tvar i, j,\n\t\tresult = a.slice();\n\n\tfor ( i = 0; i < result.length; i++ ) {\n\t\tfor ( j = 0; j < b.length; j++ ) {\n\t\t\tif ( result[i] === b[j] ) {\n\t\t\t\tresult.splice( i, 1 );\n\t\t\t\ti--;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\treturn result;\n}\n\nfunction extend( a, b ) {\n\tfor ( var prop in b ) {\n\t\tif ( hasOwn.call( b, prop ) ) {\n\t\t\t// Avoid \"Member not found\" error in IE8 caused by messing with window.constructor\n\t\t\tif ( !( prop === \"constructor\" && a === window ) ) {\n\t\t\t\tif ( b[ prop ] === undefined ) {\n\t\t\t\t\tdelete a[ prop ];\n\t\t\t\t} else {\n\t\t\t\t\ta[ prop ] = b[ prop ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a;\n}\n\n/**\n * @param {HTMLElement} elem\n * @param {string} type\n * @param {Function} fn\n */\nfunction addEvent( elem, type, fn ) {\n\tif ( elem.addEventListener ) {\n\n\t\t// Standards-based browsers\n\t\telem.addEventListener( type, fn, false );\n\t} else if ( elem.attachEvent ) {\n\n\t\t// support: IE <9\n\t\telem.attachEvent( \"on\" + type, fn );\n\t} else {\n\n\t\t// Caller must ensure support for event listeners is present\n\t\tthrow new Error( \"addEvent() was called in a context without event listener support\" );\n\t}\n}\n\n/**\n * @param {Array|NodeList} elems\n * @param {string} type\n * @param {Function} fn\n */\nfunction addEvents( elems, type, fn ) {\n\tvar i = elems.length;\n\twhile ( i-- ) {\n\t\taddEvent( elems[i], type, fn );\n\t}\n}\n\nfunction hasClass( elem, name ) {\n\treturn (\" \" + elem.className + \" \").indexOf(\" \" + name + \" \") > -1;\n}\n\nfunction addClass( elem, name ) {\n\tif ( !hasClass( elem, name ) ) {\n\t\telem.className += (elem.className ? \" \" : \"\") + name;\n\t}\n}\n\nfunction removeClass( elem, name ) {\n\tvar set = \" \" + elem.className + \" \";\n\t// Class name may appear multiple times\n\twhile ( set.indexOf(\" \" + name + \" \") > -1 ) {\n\t\tset = set.replace(\" \" + name + \" \" , \" \");\n\t}\n\t// If possible, trim it for prettiness, but not necessarily\n\telem.className = typeof set.trim === \"function\" ? set.trim() : set.replace(/^\\s+|\\s+$/g, \"\");\n}\n\nfunction id( name ) {\n\treturn defined.document && document.getElementById && document.getElementById( name );\n}\n\nfunction registerLoggingCallback( key ) {\n\treturn function( callback ) {\n\t\tconfig[key].push( callback );\n\t};\n}\n\n// Supports deprecated method of completely overwriting logging callbacks\nfunction runLoggingCallbacks( key, scope, args ) {\n\tvar i, callbacks;\n\tif ( QUnit.hasOwnProperty( key ) ) {\n\t\tQUnit[ key ].call(scope, args );\n\t} else {\n\t\tcallbacks = config[ key ];\n\t\tfor ( i = 0; i < callbacks.length; i++ ) {\n\t\t\tcallbacks[ i ].call( scope, args );\n\t\t}\n\t}\n}\n\n// from jquery.js\nfunction inArray( elem, array ) {\n\tif ( array.indexOf ) {\n\t\treturn array.indexOf( elem );\n\t}\n\n\tfor ( var i = 0, length = array.length; i < length; i++ ) {\n\t\tif ( array[ i ] === elem ) {\n\t\t\treturn i;\n\t\t}\n\t}\n\n\treturn -1;\n}\n\nfunction Test( settings ) {\n\textend( this, settings );\n\tthis.assertions = [];\n\tthis.testNumber = ++Test.count;\n}\n\nTest.count = 0;\n\nTest.prototype = {\n\tinit: function() {\n\t\tvar a, b, li,\n\t\t\ttests = id( \"qunit-tests\" );\n\n\t\tif ( tests ) {\n\t\t\tb = document.createElement( \"strong\" );\n\t\t\tb.innerHTML = this.nameHtml;\n\n\t\t\t// `a` initialized at top of scope\n\t\t\ta = document.createElement( \"a\" );\n\t\t\ta.innerHTML = \"Rerun\";\n\t\t\ta.href = QUnit.url({ testNumber: this.testNumber });\n\n\t\t\tli = document.createElement( \"li\" );\n\t\t\tli.appendChild( b );\n\t\t\tli.appendChild( a );\n\t\t\tli.className = \"running\";\n\t\t\tli.id = this.id = \"qunit-test-output\" + testId++;\n\n\t\t\ttests.appendChild( li );\n\t\t}\n\t},\n\tsetup: function() {\n\t\tif (\n\t\t\t// Emit moduleStart when we're switching from one module to another\n\t\t\tthis.module !== config.previousModule ||\n\t\t\t\t// They could be equal (both undefined) but if the previousModule property doesn't\n\t\t\t\t// yet exist it means this is the first test in a suite that isn't wrapped in a\n\t\t\t\t// module, in which case we'll just emit a moduleStart event for 'undefined'.\n\t\t\t\t// Without this, reporters can get testStart before moduleStart  which is a problem.\n\t\t\t\t!hasOwn.call( config, \"previousModule\" )\n\t\t) {\n\t\t\tif ( hasOwn.call( config, \"previousModule\" ) ) {\n\t\t\t\trunLoggingCallbacks( \"moduleDone\", QUnit, {\n\t\t\t\t\tname: config.previousModule,\n\t\t\t\t\tfailed: config.moduleStats.bad,\n\t\t\t\t\tpassed: config.moduleStats.all - config.moduleStats.bad,\n\t\t\t\t\ttotal: config.moduleStats.all\n\t\t\t\t});\n\t\t\t}\n\t\t\tconfig.previousModule = this.module;\n\t\t\tconfig.moduleStats = { all: 0, bad: 0 };\n\t\t\trunLoggingCallbacks( \"moduleStart\", QUnit, {\n\t\t\t\tname: this.module\n\t\t\t});\n\t\t}\n\n\t\tconfig.current = this;\n\n\t\tthis.testEnvironment = extend({\n\t\t\tsetup: function() {},\n\t\t\tteardown: function() {}\n\t\t}, this.moduleTestEnvironment );\n\n\t\tthis.started = +new Date();\n\t\trunLoggingCallbacks( \"testStart\", QUnit, {\n\t\t\tname: this.testName,\n\t\t\tmodule: this.module\n\t\t});\n\n\t\t/*jshint camelcase:false */\n\n\n\t\t/**\n\t\t * Expose the current test environment.\n\t\t *\n\t\t * @deprecated since 1.12.0: Use QUnit.config.current.testEnvironment instead.\n\t\t */\n\t\tQUnit.current_testEnvironment = this.testEnvironment;\n\n\t\t/*jshint camelcase:true */\n\n\t\tif ( !config.pollution ) {\n\t\t\tsaveGlobal();\n\t\t}\n\t\tif ( config.notrycatch ) {\n\t\t\tthis.testEnvironment.setup.call( this.testEnvironment, QUnit.assert );\n\t\t\treturn;\n\t\t}\n\t\ttry {\n\t\t\tthis.testEnvironment.setup.call( this.testEnvironment, QUnit.assert );\n\t\t} catch( e ) {\n\t\t\tQUnit.pushFailure( \"Setup failed on \" + this.testName + \": \" + ( e.message || e ), extractStacktrace( e, 1 ) );\n\t\t}\n\t},\n\trun: function() {\n\t\tconfig.current = this;\n\n\t\tvar running = id( \"qunit-testresult\" );\n\n\t\tif ( running ) {\n\t\t\trunning.innerHTML = \"Running: <br/>\" + this.nameHtml;\n\t\t}\n\n\t\tif ( this.async ) {\n\t\t\tQUnit.stop();\n\t\t}\n\n\t\tthis.callbackStarted = +new Date();\n\n\t\tif ( config.notrycatch ) {\n\t\t\tthis.callback.call( this.testEnvironment, QUnit.assert );\n\t\t\tthis.callbackRuntime = +new Date() - this.callbackStarted;\n\t\t\treturn;\n\t\t}\n\n\t\ttry {\n\t\t\tthis.callback.call( this.testEnvironment, QUnit.assert );\n\t\t\tthis.callbackRuntime = +new Date() - this.callbackStarted;\n\t\t} catch( e ) {\n\t\t\tthis.callbackRuntime = +new Date() - this.callbackStarted;\n\n\t\t\tQUnit.pushFailure( \"Died on test #\" + (this.assertions.length + 1) + \" \" + this.stack + \": \" + ( e.message || e ), extractStacktrace( e, 0 ) );\n\t\t\t// else next test will carry the responsibility\n\t\t\tsaveGlobal();\n\n\t\t\t// Restart the tests if they're blocking\n\t\t\tif ( config.blocking ) {\n\t\t\t\tQUnit.start();\n\t\t\t}\n\t\t}\n\t},\n\tteardown: function() {\n\t\tconfig.current = this;\n\t\tif ( config.notrycatch ) {\n\t\t\tif ( typeof this.callbackRuntime === \"undefined\" ) {\n\t\t\t\tthis.callbackRuntime = +new Date() - this.callbackStarted;\n\t\t\t}\n\t\t\tthis.testEnvironment.teardown.call( this.testEnvironment, QUnit.assert );\n\t\t\treturn;\n\t\t} else {\n\t\t\ttry {\n\t\t\t\tthis.testEnvironment.teardown.call( this.testEnvironment, QUnit.assert );\n\t\t\t} catch( e ) {\n\t\t\t\tQUnit.pushFailure( \"Teardown failed on \" + this.testName + \": \" + ( e.message || e ), extractStacktrace( e, 1 ) );\n\t\t\t}\n\t\t}\n\t\tcheckPollution();\n\t},\n\tfinish: function() {\n\t\tconfig.current = this;\n\t\tif ( config.requireExpects && this.expected === null ) {\n\t\t\tQUnit.pushFailure( \"Expected number of assertions to be defined, but expect() was not called.\", this.stack );\n\t\t} else if ( this.expected !== null && this.expected !== this.assertions.length ) {\n\t\t\tQUnit.pushFailure( \"Expected \" + this.expected + \" assertions, but \" + this.assertions.length + \" were run\", this.stack );\n\t\t} else if ( this.expected === null && !this.assertions.length ) {\n\t\t\tQUnit.pushFailure( \"Expected at least one assertion, but none were run - call expect(0) to accept zero assertions.\", this.stack );\n\t\t}\n\n\t\tvar i, assertion, a, b, time, li, ol,\n\t\t\ttest = this,\n\t\t\tgood = 0,\n\t\t\tbad = 0,\n\t\t\ttests = id( \"qunit-tests\" );\n\n\t\tthis.runtime = +new Date() - this.started;\n\t\tconfig.stats.all += this.assertions.length;\n\t\tconfig.moduleStats.all += this.assertions.length;\n\n\t\tif ( tests ) {\n\t\t\tol = document.createElement( \"ol\" );\n\t\t\tol.className = \"qunit-assert-list\";\n\n\t\t\tfor ( i = 0; i < this.assertions.length; i++ ) {\n\t\t\t\tassertion = this.assertions[i];\n\n\t\t\t\tli = document.createElement( \"li\" );\n\t\t\t\tli.className = assertion.result ? \"pass\" : \"fail\";\n\t\t\t\tli.innerHTML = assertion.message || ( assertion.result ? \"okay\" : \"failed\" );\n\t\t\t\tol.appendChild( li );\n\n\t\t\t\tif ( assertion.result ) {\n\t\t\t\t\tgood++;\n\t\t\t\t} else {\n\t\t\t\t\tbad++;\n\t\t\t\t\tconfig.stats.bad++;\n\t\t\t\t\tconfig.moduleStats.bad++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// store result when possible\n\t\t\tif ( QUnit.config.reorder && defined.sessionStorage ) {\n\t\t\t\tif ( bad ) {\n\t\t\t\t\tsessionStorage.setItem( \"qunit-test-\" + this.module + \"-\" + this.testName, bad );\n\t\t\t\t} else {\n\t\t\t\t\tsessionStorage.removeItem( \"qunit-test-\" + this.module + \"-\" + this.testName );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif ( bad === 0 ) {\n\t\t\t\taddClass( ol, \"qunit-collapsed\" );\n\t\t\t}\n\n\t\t\t// `b` initialized at top of scope\n\t\t\tb = document.createElement( \"strong\" );\n\t\t\tb.innerHTML = this.nameHtml + \" <b class='counts'>(<b class='failed'>\" + bad + \"</b>, <b class='passed'>\" + good + \"</b>, \" + this.assertions.length + \")</b>\";\n\n\t\t\taddEvent(b, \"click\", function() {\n\t\t\t\tvar next = b.parentNode.lastChild,\n\t\t\t\t\tcollapsed = hasClass( next, \"qunit-collapsed\" );\n\t\t\t\t( collapsed ? removeClass : addClass )( next, \"qunit-collapsed\" );\n\t\t\t});\n\n\t\t\taddEvent(b, \"dblclick\", function( e ) {\n\t\t\t\tvar target = e && e.target ? e.target : window.event.srcElement;\n\t\t\t\tif ( target.nodeName.toLowerCase() === \"span\" || target.nodeName.toLowerCase() === \"b\" ) {\n\t\t\t\t\ttarget = target.parentNode;\n\t\t\t\t}\n\t\t\t\tif ( window.location && target.nodeName.toLowerCase() === \"strong\" ) {\n\t\t\t\t\twindow.location = QUnit.url({ testNumber: test.testNumber });\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// `time` initialized at top of scope\n\t\t\ttime = document.createElement( \"span\" );\n\t\t\ttime.className = \"runtime\";\n\t\t\ttime.innerHTML = this.runtime + \" ms\";\n\n\t\t\t// `li` initialized at top of scope\n\t\t\tli = id( this.id );\n\t\t\tli.className = bad ? \"fail\" : \"pass\";\n\t\t\tli.removeChild( li.firstChild );\n\t\t\ta = li.firstChild;\n\t\t\tli.appendChild( b );\n\t\t\tli.appendChild( a );\n\t\t\tli.appendChild( time );\n\t\t\tli.appendChild( ol );\n\n\t\t} else {\n\t\t\tfor ( i = 0; i < this.assertions.length; i++ ) {\n\t\t\t\tif ( !this.assertions[i].result ) {\n\t\t\t\t\tbad++;\n\t\t\t\t\tconfig.stats.bad++;\n\t\t\t\t\tconfig.moduleStats.bad++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\trunLoggingCallbacks( \"testDone\", QUnit, {\n\t\t\tname: this.testName,\n\t\t\tmodule: this.module,\n\t\t\tfailed: bad,\n\t\t\tpassed: this.assertions.length - bad,\n\t\t\ttotal: this.assertions.length,\n\t\t\truntime: this.runtime,\n\t\t\t// DEPRECATED: this property will be removed in 2.0.0, use runtime instead\n\t\t\tduration: this.runtime\n\t\t});\n\n\t\tQUnit.reset();\n\n\t\tconfig.current = undefined;\n\t},\n\n\tqueue: function() {\n\t\tvar bad,\n\t\t\ttest = this;\n\n\t\tsynchronize(function() {\n\t\t\ttest.init();\n\t\t});\n\t\tfunction run() {\n\t\t\t// each of these can by async\n\t\t\tsynchronize(function() {\n\t\t\t\ttest.setup();\n\t\t\t});\n\t\t\tsynchronize(function() {\n\t\t\t\ttest.run();\n\t\t\t});\n\t\t\tsynchronize(function() {\n\t\t\t\ttest.teardown();\n\t\t\t});\n\t\t\tsynchronize(function() {\n\t\t\t\ttest.finish();\n\t\t\t});\n\t\t}\n\n\t\t// `bad` initialized at top of scope\n\t\t// defer when previous test run passed, if storage is available\n\t\tbad = QUnit.config.reorder && defined.sessionStorage &&\n\t\t\t\t\t\t+sessionStorage.getItem( \"qunit-test-\" + this.module + \"-\" + this.testName );\n\n\t\tif ( bad ) {\n\t\t\trun();\n\t\t} else {\n\t\t\tsynchronize( run, true );\n\t\t}\n\t}\n};\n\n// `assert` initialized at top of scope\n// Assert helpers\n// All of these must either call QUnit.push() or manually do:\n// - runLoggingCallbacks( \"log\", .. );\n// - config.current.assertions.push({ .. });\nassert = QUnit.assert = {\n\t/**\n\t * Asserts rough true-ish result.\n\t * @name ok\n\t * @function\n\t * @example ok( \"asdfasdf\".length > 5, \"There must be at least 5 chars\" );\n\t */\n\tok: function( result, msg ) {\n\t\tif ( !config.current ) {\n\t\t\tthrow new Error( \"ok() assertion outside test context, was \" + sourceFromStacktrace(2) );\n\t\t}\n\t\tresult = !!result;\n\t\tmsg = msg || ( result ? \"okay\" : \"failed\" );\n\n\t\tvar source,\n\t\t\tdetails = {\n\t\t\t\tmodule: config.current.module,\n\t\t\t\tname: config.current.testName,\n\t\t\t\tresult: result,\n\t\t\t\tmessage: msg\n\t\t\t};\n\n\t\tmsg = \"<span class='test-message'>\" + escapeText( msg ) + \"</span>\";\n\n\t\tif ( !result ) {\n\t\t\tsource = sourceFromStacktrace( 2 );\n\t\t\tif ( source ) {\n\t\t\t\tdetails.source = source;\n\t\t\t\tmsg += \"<table><tr class='test-source'><th>Source: </th><td><pre>\" +\n\t\t\t\t\tescapeText( source ) +\n\t\t\t\t\t\"</pre></td></tr></table>\";\n\t\t\t}\n\t\t}\n\t\trunLoggingCallbacks( \"log\", QUnit, details );\n\t\tconfig.current.assertions.push({\n\t\t\tresult: result,\n\t\t\tmessage: msg\n\t\t});\n\t},\n\n\t/**\n\t * Assert that the first two arguments are equal, with an optional message.\n\t * Prints out both actual and expected values.\n\t * @name equal\n\t * @function\n\t * @example equal( format( \"Received {0} bytes.\", 2), \"Received 2 bytes.\", \"format() replaces {0} with next argument\" );\n\t */\n\tequal: function( actual, expected, message ) {\n\t\t/*jshint eqeqeq:false */\n\t\tQUnit.push( expected == actual, actual, expected, message );\n\t},\n\n\t/**\n\t * @name notEqual\n\t * @function\n\t */\n\tnotEqual: function( actual, expected, message ) {\n\t\t/*jshint eqeqeq:false */\n\t\tQUnit.push( expected != actual, actual, expected, message );\n\t},\n\n\t/**\n\t * @name propEqual\n\t * @function\n\t */\n\tpropEqual: function( actual, expected, message ) {\n\t\tactual = objectValues(actual);\n\t\texpected = objectValues(expected);\n\t\tQUnit.push( QUnit.equiv(actual, expected), actual, expected, message );\n\t},\n\n\t/**\n\t * @name notPropEqual\n\t * @function\n\t */\n\tnotPropEqual: function( actual, expected, message ) {\n\t\tactual = objectValues(actual);\n\t\texpected = objectValues(expected);\n\t\tQUnit.push( !QUnit.equiv(actual, expected), actual, expected, message );\n\t},\n\n\t/**\n\t * @name deepEqual\n\t * @function\n\t */\n\tdeepEqual: function( actual, expected, message ) {\n\t\tQUnit.push( QUnit.equiv(actual, expected), actual, expected, message );\n\t},\n\n\t/**\n\t * @name notDeepEqual\n\t * @function\n\t */\n\tnotDeepEqual: function( actual, expected, message ) {\n\t\tQUnit.push( !QUnit.equiv(actual, expected), actual, expected, message );\n\t},\n\n\t/**\n\t * @name strictEqual\n\t * @function\n\t */\n\tstrictEqual: function( actual, expected, message ) {\n\t\tQUnit.push( expected === actual, actual, expected, message );\n\t},\n\n\t/**\n\t * @name notStrictEqual\n\t * @function\n\t */\n\tnotStrictEqual: function( actual, expected, message ) {\n\t\tQUnit.push( expected !== actual, actual, expected, message );\n\t},\n\n\t\"throws\": function( block, expected, message ) {\n\t\tvar actual,\n\t\t\texpectedOutput = expected,\n\t\t\tok = false;\n\n\t\t// 'expected' is optional\n\t\tif ( !message && typeof expected === \"string\" ) {\n\t\t\tmessage = expected;\n\t\t\texpected = null;\n\t\t}\n\n\t\tconfig.current.ignoreGlobalErrors = true;\n\t\ttry {\n\t\t\tblock.call( config.current.testEnvironment );\n\t\t} catch (e) {\n\t\t\tactual = e;\n\t\t}\n\t\tconfig.current.ignoreGlobalErrors = false;\n\n\t\tif ( actual ) {\n\n\t\t\t// we don't want to validate thrown error\n\t\t\tif ( !expected ) {\n\t\t\t\tok = true;\n\t\t\t\texpectedOutput = null;\n\n\t\t\t// expected is an Error object\n\t\t\t} else if ( expected instanceof Error ) {\n\t\t\t\tok = actual instanceof Error &&\n\t\t\t\t\t actual.name === expected.name &&\n\t\t\t\t\t actual.message === expected.message;\n\n\t\t\t// expected is a regexp\n\t\t\t} else if ( QUnit.objectType( expected ) === \"regexp\" ) {\n\t\t\t\tok = expected.test( errorString( actual ) );\n\n\t\t\t// expected is a string\n\t\t\t} else if ( QUnit.objectType( expected ) === \"string\" ) {\n\t\t\t\tok = expected === errorString( actual );\n\n\t\t\t// expected is a constructor\n\t\t\t} else if ( actual instanceof expected ) {\n\t\t\t\tok = true;\n\n\t\t\t// expected is a validation function which returns true is validation passed\n\t\t\t} else if ( expected.call( {}, actual ) === true ) {\n\t\t\t\texpectedOutput = null;\n\t\t\t\tok = true;\n\t\t\t}\n\n\t\t\tQUnit.push( ok, actual, expectedOutput, message );\n\t\t} else {\n\t\t\tQUnit.pushFailure( message, null, \"No exception was thrown.\" );\n\t\t}\n\t}\n};\n\n/**\n * @deprecated since 1.8.0\n * Kept assertion helpers in root for backwards compatibility.\n */\nextend( QUnit.constructor.prototype, assert );\n\n/**\n * @deprecated since 1.9.0\n * Kept to avoid TypeErrors for undefined methods.\n */\nQUnit.constructor.prototype.raises = function() {\n\tQUnit.push( false, false, false, \"QUnit.raises has been deprecated since 2012 (fad3c1ea), use QUnit.throws instead\" );\n};\n\n/**\n * @deprecated since 1.0.0, replaced with error pushes since 1.3.0\n * Kept to avoid TypeErrors for undefined methods.\n */\nQUnit.constructor.prototype.equals = function() {\n\tQUnit.push( false, false, false, \"QUnit.equals has been deprecated since 2009 (e88049a0), use QUnit.equal instead\" );\n};\nQUnit.constructor.prototype.same = function() {\n\tQUnit.push( false, false, false, \"QUnit.same has been deprecated since 2009 (e88049a0), use QUnit.deepEqual instead\" );\n};\n\n// Test for equality any JavaScript type.\n// Author: Philippe Rathé <prathe@gmail.com>\nQUnit.equiv = (function() {\n\n\t// Call the o related callback with the given arguments.\n\tfunction bindCallbacks( o, callbacks, args ) {\n\t\tvar prop = QUnit.objectType( o );\n\t\tif ( prop ) {\n\t\t\tif ( QUnit.objectType( callbacks[ prop ] ) === \"function\" ) {\n\t\t\t\treturn callbacks[ prop ].apply( callbacks, args );\n\t\t\t} else {\n\t\t\t\treturn callbacks[ prop ]; // or undefined\n\t\t\t}\n\t\t}\n\t}\n\n\t// the real equiv function\n\tvar innerEquiv,\n\t\t// stack to decide between skip/abort functions\n\t\tcallers = [],\n\t\t// stack to avoiding loops from circular referencing\n\t\tparents = [],\n\t\tparentsB = [],\n\n\t\tgetProto = Object.getPrototypeOf || function ( obj ) {\n\t\t\t/*jshint camelcase:false */\n\t\t\treturn obj.__proto__;\n\t\t},\n\t\tcallbacks = (function () {\n\n\t\t\t// for string, boolean, number and null\n\t\t\tfunction useStrictEquality( b, a ) {\n\t\t\t\t/*jshint eqeqeq:false */\n\t\t\t\tif ( b instanceof a.constructor || a instanceof b.constructor ) {\n\t\t\t\t\t// to catch short annotation VS 'new' annotation of a\n\t\t\t\t\t// declaration\n\t\t\t\t\t// e.g. var i = 1;\n\t\t\t\t\t// var j = new Number(1);\n\t\t\t\t\treturn a == b;\n\t\t\t\t} else {\n\t\t\t\t\treturn a === b;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t\"string\": useStrictEquality,\n\t\t\t\t\"boolean\": useStrictEquality,\n\t\t\t\t\"number\": useStrictEquality,\n\t\t\t\t\"null\": useStrictEquality,\n\t\t\t\t\"undefined\": useStrictEquality,\n\n\t\t\t\t\"nan\": function( b ) {\n\t\t\t\t\treturn isNaN( b );\n\t\t\t\t},\n\n\t\t\t\t\"date\": function( b, a ) {\n\t\t\t\t\treturn QUnit.objectType( b ) === \"date\" && a.valueOf() === b.valueOf();\n\t\t\t\t},\n\n\t\t\t\t\"regexp\": function( b, a ) {\n\t\t\t\t\treturn QUnit.objectType( b ) === \"regexp\" &&\n\t\t\t\t\t\t// the regex itself\n\t\t\t\t\t\ta.source === b.source &&\n\t\t\t\t\t\t// and its modifiers\n\t\t\t\t\t\ta.global === b.global &&\n\t\t\t\t\t\t// (gmi) ...\n\t\t\t\t\t\ta.ignoreCase === b.ignoreCase &&\n\t\t\t\t\t\ta.multiline === b.multiline &&\n\t\t\t\t\t\ta.sticky === b.sticky;\n\t\t\t\t},\n\n\t\t\t\t// - skip when the property is a method of an instance (OOP)\n\t\t\t\t// - abort otherwise,\n\t\t\t\t// initial === would have catch identical references anyway\n\t\t\t\t\"function\": function() {\n\t\t\t\t\tvar caller = callers[callers.length - 1];\n\t\t\t\t\treturn caller !== Object && typeof caller !== \"undefined\";\n\t\t\t\t},\n\n\t\t\t\t\"array\": function( b, a ) {\n\t\t\t\t\tvar i, j, len, loop, aCircular, bCircular;\n\n\t\t\t\t\t// b could be an object literal here\n\t\t\t\t\tif ( QUnit.objectType( b ) !== \"array\" ) {\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\tlen = a.length;\n\t\t\t\t\tif ( len !== b.length ) {\n\t\t\t\t\t\t// safe and faster\n\t\t\t\t\t\treturn false;\n\t\t\t\t\t}\n\n\t\t\t\t\t// track reference to avoid circular references\n\t\t\t\t\tparents.push( a );\n\t\t\t\t\tparentsB.push( b );\n\t\t\t\t\tfor ( i = 0; i < len; i++ ) {\n\t\t\t\t\t\tloop = false;\n\t\t\t\t\t\tfor ( j = 0; j < parents.length; j++ ) {\n\t\t\t\t\t\t\taCircular = parents[j] === a[i];\n\t\t\t\t\t\t\tbCircular = parentsB[j] === b[i];\n\t\t\t\t\t\t\tif ( aCircular || bCircular ) {\n\t\t\t\t\t\t\t\tif ( a[i] === b[i] || aCircular && bCircular ) {\n\t\t\t\t\t\t\t\t\tloop = true;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\t\t\t\tparentsB.pop();\n\t\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( !loop && !innerEquiv(a[i], b[i]) ) {\n\t\t\t\t\t\t\tparents.pop();\n\t\t\t\t\t\t\tparentsB.pop();\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tparents.pop();\n\t\t\t\t\tparentsB.pop();\n\t\t\t\t\treturn true;\n\t\t\t\t},\n\n\t\t\t\t\"object\": function( b, a ) {\n\t\t\t\t\t/*jshint forin:false */\n\t\t\t\t\tvar i, j, loop, aCircular, bCircular,\n\t\t\t\t\t\t// Default to true\n\t\t\t\t\t\teq = true,\n\t\t\t\t\t\taProperties = [],\n\t\t\t\t\t\tbProperties = [];\n\n\t\t\t\t\t// comparing constructors is more strict than using\n\t\t\t\t\t// instanceof\n\t\t\t\t\tif ( a.constructor !== b.constructor ) {\n\t\t\t\t\t\t// Allow objects with no prototype to be equivalent to\n\t\t\t\t\t\t// objects with Object as their constructor.\n\t\t\t\t\t\tif ( !(( getProto(a) === null && getProto(b) === Object.prototype ) ||\n\t\t\t\t\t\t\t( getProto(b) === null && getProto(a) === Object.prototype ) ) ) {\n\t\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// stack constructor before traversing properties\n\t\t\t\t\tcallers.push( a.constructor );\n\n\t\t\t\t\t// track reference to avoid circular references\n\t\t\t\t\tparents.push( a );\n\t\t\t\t\tparentsB.push( b );\n\n\t\t\t\t\t// be strict: don't ensure hasOwnProperty and go deep\n\t\t\t\t\tfor ( i in a ) {\n\t\t\t\t\t\tloop = false;\n\t\t\t\t\t\tfor ( j = 0; j < parents.length; j++ ) {\n\t\t\t\t\t\t\taCircular = parents[j] === a[i];\n\t\t\t\t\t\t\tbCircular = parentsB[j] === b[i];\n\t\t\t\t\t\t\tif ( aCircular || bCircular ) {\n\t\t\t\t\t\t\t\tif ( a[i] === b[i] || aCircular && bCircular ) {\n\t\t\t\t\t\t\t\t\tloop = true;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\teq = false;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\taProperties.push(i);\n\t\t\t\t\t\tif ( !loop && !innerEquiv(a[i], b[i]) ) {\n\t\t\t\t\t\t\teq = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tparents.pop();\n\t\t\t\t\tparentsB.pop();\n\t\t\t\t\tcallers.pop(); // unstack, we are done\n\n\t\t\t\t\tfor ( i in b ) {\n\t\t\t\t\t\tbProperties.push( i ); // collect b's properties\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ensures identical properties name\n\t\t\t\t\treturn eq && innerEquiv( aProperties.sort(), bProperties.sort() );\n\t\t\t\t}\n\t\t\t};\n\t\t}());\n\n\tinnerEquiv = function() { // can take multiple arguments\n\t\tvar args = [].slice.apply( arguments );\n\t\tif ( args.length < 2 ) {\n\t\t\treturn true; // end transition\n\t\t}\n\n\t\treturn (function( a, b ) {\n\t\t\tif ( a === b ) {\n\t\t\t\treturn true; // catch the most you can\n\t\t\t} else if ( a === null || b === null || typeof a === \"undefined\" ||\n\t\t\t\t\ttypeof b === \"undefined\" ||\n\t\t\t\t\tQUnit.objectType(a) !== QUnit.objectType(b) ) {\n\t\t\t\treturn false; // don't lose time with error prone cases\n\t\t\t} else {\n\t\t\t\treturn bindCallbacks(a, callbacks, [ b, a ]);\n\t\t\t}\n\n\t\t\t// apply transition with (1..n) arguments\n\t\t}( args[0], args[1] ) && innerEquiv.apply( this, args.splice(1, args.length - 1 )) );\n\t};\n\n\treturn innerEquiv;\n}());\n\n/**\n * jsDump Copyright (c) 2008 Ariel Flesler - aflesler(at)gmail(dot)com |\n * http://flesler.blogspot.com Licensed under BSD\n * (http://www.opensource.org/licenses/bsd-license.php) Date: 5/15/2008\n *\n * @projectDescription Advanced and extensible data dumping for Javascript.\n * @version 1.0.0\n * @author Ariel Flesler\n * @link {http://flesler.blogspot.com/2008/05/jsdump-pretty-dump-of-any-javascript.html}\n */\nQUnit.jsDump = (function() {\n\tfunction quote( str ) {\n\t\treturn \"\\\"\" + str.toString().replace( /\"/g, \"\\\\\\\"\" ) + \"\\\"\";\n\t}\n\tfunction literal( o ) {\n\t\treturn o + \"\";\n\t}\n\tfunction join( pre, arr, post ) {\n\t\tvar s = jsDump.separator(),\n\t\t\tbase = jsDump.indent(),\n\t\t\tinner = jsDump.indent(1);\n\t\tif ( arr.join ) {\n\t\t\tarr = arr.join( \",\" + s + inner );\n\t\t}\n\t\tif ( !arr ) {\n\t\t\treturn pre + post;\n\t\t}\n\t\treturn [ pre, inner + arr, base + post ].join(s);\n\t}\n\tfunction array( arr, stack ) {\n\t\tvar i = arr.length, ret = new Array(i);\n\t\tthis.up();\n\t\twhile ( i-- ) {\n\t\t\tret[i] = this.parse( arr[i] , undefined , stack);\n\t\t}\n\t\tthis.down();\n\t\treturn join( \"[\", ret, \"]\" );\n\t}\n\n\tvar reName = /^function (\\w+)/,\n\t\tjsDump = {\n\t\t\t// type is used mostly internally, you can fix a (custom)type in advance\n\t\t\tparse: function( obj, type, stack ) {\n\t\t\t\tstack = stack || [ ];\n\t\t\t\tvar inStack, res,\n\t\t\t\t\tparser = this.parsers[ type || this.typeOf(obj) ];\n\n\t\t\t\ttype = typeof parser;\n\t\t\t\tinStack = inArray( obj, stack );\n\n\t\t\t\tif ( inStack !== -1 ) {\n\t\t\t\t\treturn \"recursion(\" + (inStack - stack.length) + \")\";\n\t\t\t\t}\n\t\t\t\tif ( type === \"function\" )  {\n\t\t\t\t\tstack.push( obj );\n\t\t\t\t\tres = parser.call( this, obj, stack );\n\t\t\t\t\tstack.pop();\n\t\t\t\t\treturn res;\n\t\t\t\t}\n\t\t\t\treturn ( type === \"string\" ) ? parser : this.parsers.error;\n\t\t\t},\n\t\t\ttypeOf: function( obj ) {\n\t\t\t\tvar type;\n\t\t\t\tif ( obj === null ) {\n\t\t\t\t\ttype = \"null\";\n\t\t\t\t} else if ( typeof obj === \"undefined\" ) {\n\t\t\t\t\ttype = \"undefined\";\n\t\t\t\t} else if ( QUnit.is( \"regexp\", obj) ) {\n\t\t\t\t\ttype = \"regexp\";\n\t\t\t\t} else if ( QUnit.is( \"date\", obj) ) {\n\t\t\t\t\ttype = \"date\";\n\t\t\t\t} else if ( QUnit.is( \"function\", obj) ) {\n\t\t\t\t\ttype = \"function\";\n\t\t\t\t} else if ( typeof obj.setInterval !== undefined && typeof obj.document !== \"undefined\" && typeof obj.nodeType === \"undefined\" ) {\n\t\t\t\t\ttype = \"window\";\n\t\t\t\t} else if ( obj.nodeType === 9 ) {\n\t\t\t\t\ttype = \"document\";\n\t\t\t\t} else if ( obj.nodeType ) {\n\t\t\t\t\ttype = \"node\";\n\t\t\t\t} else if (\n\t\t\t\t\t// native arrays\n\t\t\t\t\ttoString.call( obj ) === \"[object Array]\" ||\n\t\t\t\t\t// NodeList objects\n\t\t\t\t\t( typeof obj.length === \"number\" && typeof obj.item !== \"undefined\" && ( obj.length ? obj.item(0) === obj[0] : ( obj.item( 0 ) === null && typeof obj[0] === \"undefined\" ) ) )\n\t\t\t\t) {\n\t\t\t\t\ttype = \"array\";\n\t\t\t\t} else if ( obj.constructor === Error.prototype.constructor ) {\n\t\t\t\t\ttype = \"error\";\n\t\t\t\t} else {\n\t\t\t\t\ttype = typeof obj;\n\t\t\t\t}\n\t\t\t\treturn type;\n\t\t\t},\n\t\t\tseparator: function() {\n\t\t\t\treturn this.multiline ?\tthis.HTML ? \"<br />\" : \"\\n\" : this.HTML ? \"&nbsp;\" : \" \";\n\t\t\t},\n\t\t\t// extra can be a number, shortcut for increasing-calling-decreasing\n\t\t\tindent: function( extra ) {\n\t\t\t\tif ( !this.multiline ) {\n\t\t\t\t\treturn \"\";\n\t\t\t\t}\n\t\t\t\tvar chr = this.indentChar;\n\t\t\t\tif ( this.HTML ) {\n\t\t\t\t\tchr = chr.replace( /\\t/g, \"   \" ).replace( / /g, \"&nbsp;\" );\n\t\t\t\t}\n\t\t\t\treturn new Array( this.depth + ( extra || 0 ) ).join(chr);\n\t\t\t},\n\t\t\tup: function( a ) {\n\t\t\t\tthis.depth += a || 1;\n\t\t\t},\n\t\t\tdown: function( a ) {\n\t\t\t\tthis.depth -= a || 1;\n\t\t\t},\n\t\t\tsetParser: function( name, parser ) {\n\t\t\t\tthis.parsers[name] = parser;\n\t\t\t},\n\t\t\t// The next 3 are exposed so you can use them\n\t\t\tquote: quote,\n\t\t\tliteral: literal,\n\t\t\tjoin: join,\n\t\t\t//\n\t\t\tdepth: 1,\n\t\t\t// This is the list of parsers, to modify them, use jsDump.setParser\n\t\t\tparsers: {\n\t\t\t\twindow: \"[Window]\",\n\t\t\t\tdocument: \"[Document]\",\n\t\t\t\terror: function(error) {\n\t\t\t\t\treturn \"Error(\\\"\" + error.message + \"\\\")\";\n\t\t\t\t},\n\t\t\t\tunknown: \"[Unknown]\",\n\t\t\t\t\"null\": \"null\",\n\t\t\t\t\"undefined\": \"undefined\",\n\t\t\t\t\"function\": function( fn ) {\n\t\t\t\t\tvar ret = \"function\",\n\t\t\t\t\t\t// functions never have name in IE\n\t\t\t\t\t\tname = \"name\" in fn ? fn.name : (reName.exec(fn) || [])[1];\n\n\t\t\t\t\tif ( name ) {\n\t\t\t\t\t\tret += \" \" + name;\n\t\t\t\t\t}\n\t\t\t\t\tret += \"( \";\n\n\t\t\t\t\tret = [ ret, QUnit.jsDump.parse( fn, \"functionArgs\" ), \"){\" ].join( \"\" );\n\t\t\t\t\treturn join( ret, QUnit.jsDump.parse(fn,\"functionCode\" ), \"}\" );\n\t\t\t\t},\n\t\t\t\tarray: array,\n\t\t\t\tnodelist: array,\n\t\t\t\t\"arguments\": array,\n\t\t\t\tobject: function( map, stack ) {\n\t\t\t\t\t/*jshint forin:false */\n\t\t\t\t\tvar ret = [ ], keys, key, val, i;\n\t\t\t\t\tQUnit.jsDump.up();\n\t\t\t\t\tkeys = [];\n\t\t\t\t\tfor ( key in map ) {\n\t\t\t\t\t\tkeys.push( key );\n\t\t\t\t\t}\n\t\t\t\t\tkeys.sort();\n\t\t\t\t\tfor ( i = 0; i < keys.length; i++ ) {\n\t\t\t\t\t\tkey = keys[ i ];\n\t\t\t\t\t\tval = map[ key ];\n\t\t\t\t\t\tret.push( QUnit.jsDump.parse( key, \"key\" ) + \": \" + QUnit.jsDump.parse( val, undefined, stack ) );\n\t\t\t\t\t}\n\t\t\t\t\tQUnit.jsDump.down();\n\t\t\t\t\treturn join( \"{\", ret, \"}\" );\n\t\t\t\t},\n\t\t\t\tnode: function( node ) {\n\t\t\t\t\tvar len, i, val,\n\t\t\t\t\t\topen = QUnit.jsDump.HTML ? \"&lt;\" : \"<\",\n\t\t\t\t\t\tclose = QUnit.jsDump.HTML ? \"&gt;\" : \">\",\n\t\t\t\t\t\ttag = node.nodeName.toLowerCase(),\n\t\t\t\t\t\tret = open + tag,\n\t\t\t\t\t\tattrs = node.attributes;\n\n\t\t\t\t\tif ( attrs ) {\n\t\t\t\t\t\tfor ( i = 0, len = attrs.length; i < len; i++ ) {\n\t\t\t\t\t\t\tval = attrs[i].nodeValue;\n\t\t\t\t\t\t\t// IE6 includes all attributes in .attributes, even ones not explicitly set.\n\t\t\t\t\t\t\t// Those have values like undefined, null, 0, false, \"\" or \"inherit\".\n\t\t\t\t\t\t\tif ( val && val !== \"inherit\" ) {\n\t\t\t\t\t\t\t\tret += \" \" + attrs[i].nodeName + \"=\" + QUnit.jsDump.parse( val, \"attribute\" );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tret += close;\n\n\t\t\t\t\t// Show content of TextNode or CDATASection\n\t\t\t\t\tif ( node.nodeType === 3 || node.nodeType === 4 ) {\n\t\t\t\t\t\tret += node.nodeValue;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn ret + open + \"/\" + tag + close;\n\t\t\t\t},\n\t\t\t\t// function calls it internally, it's the arguments part of the function\n\t\t\t\tfunctionArgs: function( fn ) {\n\t\t\t\t\tvar args,\n\t\t\t\t\t\tl = fn.length;\n\n\t\t\t\t\tif ( !l ) {\n\t\t\t\t\t\treturn \"\";\n\t\t\t\t\t}\n\n\t\t\t\t\targs = new Array(l);\n\t\t\t\t\twhile ( l-- ) {\n\t\t\t\t\t\t// 97 is 'a'\n\t\t\t\t\t\targs[l] = String.fromCharCode(97+l);\n\t\t\t\t\t}\n\t\t\t\t\treturn \" \" + args.join( \", \" ) + \" \";\n\t\t\t\t},\n\t\t\t\t// object calls it internally, the key part of an item in a map\n\t\t\t\tkey: quote,\n\t\t\t\t// function calls it internally, it's the content of the function\n\t\t\t\tfunctionCode: \"[code]\",\n\t\t\t\t// node calls it internally, it's an html attribute value\n\t\t\t\tattribute: quote,\n\t\t\t\tstring: quote,\n\t\t\t\tdate: quote,\n\t\t\t\tregexp: literal,\n\t\t\t\tnumber: literal,\n\t\t\t\t\"boolean\": literal\n\t\t\t},\n\t\t\t// if true, entities are escaped ( <, >, \\t, space and \\n )\n\t\t\tHTML: false,\n\t\t\t// indentation unit\n\t\t\tindentChar: \"  \",\n\t\t\t// if true, items in a collection, are separated by a \\n, else just a space.\n\t\t\tmultiline: true\n\t\t};\n\n\treturn jsDump;\n}());\n\n/*\n * Javascript Diff Algorithm\n *  By John Resig (http://ejohn.org/)\n *  Modified by Chu Alan \"sprite\"\n *\n * Released under the MIT license.\n *\n * More Info:\n *  http://ejohn.org/projects/javascript-diff-algorithm/\n *\n * Usage: QUnit.diff(expected, actual)\n *\n * QUnit.diff( \"the quick brown fox jumped over\", \"the quick fox jumps over\" ) == \"the  quick <del>brown </del> fox <del>jumped </del><ins>jumps </ins> over\"\n */\nQUnit.diff = (function() {\n\t/*jshint eqeqeq:false, eqnull:true */\n\tfunction diff( o, n ) {\n\t\tvar i,\n\t\t\tns = {},\n\t\t\tos = {};\n\n\t\tfor ( i = 0; i < n.length; i++ ) {\n\t\t\tif ( !hasOwn.call( ns, n[i] ) ) {\n\t\t\t\tns[ n[i] ] = {\n\t\t\t\t\trows: [],\n\t\t\t\t\to: null\n\t\t\t\t};\n\t\t\t}\n\t\t\tns[ n[i] ].rows.push( i );\n\t\t}\n\n\t\tfor ( i = 0; i < o.length; i++ ) {\n\t\t\tif ( !hasOwn.call( os, o[i] ) ) {\n\t\t\t\tos[ o[i] ] = {\n\t\t\t\t\trows: [],\n\t\t\t\t\tn: null\n\t\t\t\t};\n\t\t\t}\n\t\t\tos[ o[i] ].rows.push( i );\n\t\t}\n\n\t\tfor ( i in ns ) {\n\t\t\tif ( hasOwn.call( ns, i ) ) {\n\t\t\t\tif ( ns[i].rows.length === 1 && hasOwn.call( os, i ) && os[i].rows.length === 1 ) {\n\t\t\t\t\tn[ ns[i].rows[0] ] = {\n\t\t\t\t\t\ttext: n[ ns[i].rows[0] ],\n\t\t\t\t\t\trow: os[i].rows[0]\n\t\t\t\t\t};\n\t\t\t\t\to[ os[i].rows[0] ] = {\n\t\t\t\t\t\ttext: o[ os[i].rows[0] ],\n\t\t\t\t\t\trow: ns[i].rows[0]\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfor ( i = 0; i < n.length - 1; i++ ) {\n\t\t\tif ( n[i].text != null && n[ i + 1 ].text == null && n[i].row + 1 < o.length && o[ n[i].row + 1 ].text == null &&\n\t\t\t\t\t\tn[ i + 1 ] == o[ n[i].row + 1 ] ) {\n\n\t\t\t\tn[ i + 1 ] = {\n\t\t\t\t\ttext: n[ i + 1 ],\n\t\t\t\t\trow: n[i].row + 1\n\t\t\t\t};\n\t\t\t\to[ n[i].row + 1 ] = {\n\t\t\t\t\ttext: o[ n[i].row + 1 ],\n\t\t\t\t\trow: i + 1\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\tfor ( i = n.length - 1; i > 0; i-- ) {\n\t\t\tif ( n[i].text != null && n[ i - 1 ].text == null && n[i].row > 0 && o[ n[i].row - 1 ].text == null &&\n\t\t\t\t\t\tn[ i - 1 ] == o[ n[i].row - 1 ]) {\n\n\t\t\t\tn[ i - 1 ] = {\n\t\t\t\t\ttext: n[ i - 1 ],\n\t\t\t\t\trow: n[i].row - 1\n\t\t\t\t};\n\t\t\t\to[ n[i].row - 1 ] = {\n\t\t\t\t\ttext: o[ n[i].row - 1 ],\n\t\t\t\t\trow: i - 1\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\to: o,\n\t\t\tn: n\n\t\t};\n\t}\n\n\treturn function( o, n ) {\n\t\to = o.replace( /\\s+$/, \"\" );\n\t\tn = n.replace( /\\s+$/, \"\" );\n\n\t\tvar i, pre,\n\t\t\tstr = \"\",\n\t\t\tout = diff( o === \"\" ? [] : o.split(/\\s+/), n === \"\" ? [] : n.split(/\\s+/) ),\n\t\t\toSpace = o.match(/\\s+/g),\n\t\t\tnSpace = n.match(/\\s+/g);\n\n\t\tif ( oSpace == null ) {\n\t\t\toSpace = [ \" \" ];\n\t\t}\n\t\telse {\n\t\t\toSpace.push( \" \" );\n\t\t}\n\n\t\tif ( nSpace == null ) {\n\t\t\tnSpace = [ \" \" ];\n\t\t}\n\t\telse {\n\t\t\tnSpace.push( \" \" );\n\t\t}\n\n\t\tif ( out.n.length === 0 ) {\n\t\t\tfor ( i = 0; i < out.o.length; i++ ) {\n\t\t\t\tstr += \"<del>\" + out.o[i] + oSpace[i] + \"</del>\";\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tif ( out.n[0].text == null ) {\n\t\t\t\tfor ( n = 0; n < out.o.length && out.o[n].text == null; n++ ) {\n\t\t\t\t\tstr += \"<del>\" + out.o[n] + oSpace[n] + \"</del>\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor ( i = 0; i < out.n.length; i++ ) {\n\t\t\t\tif (out.n[i].text == null) {\n\t\t\t\t\tstr += \"<ins>\" + out.n[i] + nSpace[i] + \"</ins>\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// `pre` initialized at top of scope\n\t\t\t\t\tpre = \"\";\n\n\t\t\t\t\tfor ( n = out.n[i].row + 1; n < out.o.length && out.o[n].text == null; n++ ) {\n\t\t\t\t\t\tpre += \"<del>\" + out.o[n] + oSpace[n] + \"</del>\";\n\t\t\t\t\t}\n\t\t\t\t\tstr += \" \" + out.n[i].text + nSpace[i] + pre;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn str;\n\t};\n}());\n\n// For browser, export only select globals\nif ( typeof window !== \"undefined\" ) {\n\textend( window, QUnit.constructor.prototype );\n\twindow.QUnit = QUnit;\n}\n\n// For CommonJS environments, export everything\nif ( typeof module !== \"undefined\" && module.exports ) {\n\tmodule.exports = QUnit;\n}\n\n\n// Get a reference to the global object, like window in browsers\n}( (function() {\n\treturn this;\n})() ));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bower_components/qunit/qunit/qunit.js\n// module id = 35\n// module chunks = 1","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/process/browser.js\n// module id = 36\n// module chunks = 1","/**\n * QUnit-TAP - A TAP Output Producer Plugin for QUnit\n *\n * https://github.com/twada/qunit-tap\n * version: 1.5.0\n *\n * Copyright (c) 2010-2014 Takuto Wada\n * Dual licensed under the MIT and GPLv2 licenses.\n *   https://raw.github.com/twada/qunit-tap/master/MIT-LICENSE.txt\n *   https://raw.github.com/twada/qunit-tap/master/GPL-LICENSE.txt\n *\n * A part of extend function is:\n *   Copyright 2012 jQuery Foundation and other contributors\n *   Released under the MIT license.\n *   http://jquery.org/license\n */\n(function (root, factory) {\n    'use strict';\n\n    // using returnExports UMD pattern\n    if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else if (typeof exports === 'object') {\n        module.exports = factory();\n    } else {\n        root.qunitTap = factory();\n    }\n}(this, function () {\n    'use strict';\n\n    var qunitTapVersion = '1.5.0',\n        slice = Array.prototype.slice;\n\n    // borrowed from qunit.js\n    function extend (a, b) {\n        var prop;\n        for (prop in b) {\n            if (b.hasOwnProperty(prop)) {\n                if (typeof b[prop] === 'undefined') {\n                    delete a[prop];\n                } else {\n                    a[prop] = b[prop];\n                }\n            }\n        }\n        return a;\n    }\n\n    function indexOf (ary, element) {\n        var i;\n        for (i = 0; i < ary.length; i += 1) {\n            if (ary[i] === element) {\n                return i;\n            }\n        }\n        return -1;\n    }\n\n    function removeElement (ary, element) {\n        var index = indexOf(ary, element);\n        if (index !== -1) {\n            return ary.splice(index, 1);\n        } else {\n            return [];\n        }\n    }\n\n    function isPlanRequired (conf) {\n        return (typeof conf !== 'undefined' && typeof conf.requireExpects !== 'undefined' && conf.requireExpects);\n    }\n\n    function isPassed (details) {\n        return !!(details.result);\n    }\n\n    function isFailed (details) {\n        return !(isPassed(details));\n    }\n\n    function isAssertOkFailed (details) {\n        return isFailed(details) && typeof details.expected === 'undefined' && typeof details.actual === 'undefined';\n    }\n\n    function escapeLineEndings (str) {\n        return str.replace(/(\\r?\\n)/g, '$&# ');\n    }\n\n    function ltrim (str) {\n        return str.replace(/^\\s+/, '');\n    }\n\n    function noop (obj) {\n        return obj;\n    }\n\n    function render (desc, fieldName, fieldValue, formatter) {\n        desc.push(fieldName + ': ' + formatter(fieldValue));\n    }\n\n    function renderIf (shouldRender, desc, fieldName, fieldValue, formatter) {\n        if (!shouldRender || typeof fieldValue === 'undefined') {\n            return;\n        }\n        render(desc, fieldName, fieldValue, formatter);\n    }\n\n    function formatTestLine (testLine, rest) {\n        if (!rest) {\n            return testLine;\n        }\n        return testLine + ' - ' + escapeLineEndings(rest);\n    }\n\n    var createCallbackAppenderFor = function (qu) {\n        return function (subject, observer, event) {\n            var originalLoggingCallback = subject[event],\n                callback = function () {\n                    // make listener methods (moduleStart,testStart,log, ...) overridable.\n                    observer[event].apply(observer, slice.apply(arguments));\n                };\n            originalLoggingCallback(callback);\n            return callback;\n        };\n    };\n\n\n    /**\n     * QUnit-TAP - A TAP Output Producer Plugin for QUnit\n     * @param qunitObject QUnit object reference.\n     * @param printLikeFunction print-like function for TAP output (assumes line-separator is added by this function for each call).\n     * @param options configuration options to customize default behavior.\n     * @return object to provide QUnit-TAP API and customization subject.\n     */\n    function qunitTap(qunitObject, printLikeFunction, options) {\n        if (!qunitObject) {\n            throw new Error('should pass QUnit object reference. Please check QUnit\\'s \"require\" path if you are using Node.js (or any CommonJS env).');\n        } else if (typeof printLikeFunction !== 'function') {\n            throw new Error('should pass print-like function');\n        }\n\n        var qu = qunitObject,\n            tap = {},\n            jsDumpExists = (typeof qu.jsDump !== 'undefined' && typeof qu.jsDump.parse === 'function'),\n            explain = (jsDumpExists ? function explain (obj) { return qu.jsDump.parse(obj); } : noop),\n            deprecateOption = function deprecateOption (optionName, fallback) {\n                // option deprecation and fallback function\n                if (!options || typeof options !== 'object') {\n                    return;\n                }\n                if (typeof options[optionName] === 'undefined') {\n                    return;\n                }\n                printLikeFunction('# WARNING: Option \"' + optionName + '\" is deprecated and will be removed in future version.');\n                fallback(options[optionName]);\n            },\n            targetEvents = [\n                'moduleStart',\n                'testStart',\n                'log',\n                'testDone',\n                'done'\n            ],\n            registeredCallbacks = {};\n\n\n        tap.config = extend(\n            {\n                initialCount: 1,\n                showModuleNameOnFailure: true,\n                showTestNameOnFailure: true,\n                showExpectationOnFailure: true,\n                showSourceOnFailure: true\n            },\n            options\n        );\n        deprecateOption('noPlan', function (flag) {\n            printLikeFunction('# Now QUnit-TAP works as with \"noPlan: true\" by default. If you want to delare plan explicitly, please use \"QUnit.config.requireExpects\" option instead.');\n            tap.config.noPlan = flag;\n        });\n        deprecateOption('count', function (count) {\n            tap.config.initialCount = (count + 1);\n        });\n        deprecateOption('showDetailsOnFailure', function (flag) {\n            tap.config.showModuleNameOnFailure = flag;\n            tap.config.showTestNameOnFailure = flag;\n            tap.config.showExpectationOnFailure = flag;\n            tap.config.showSourceOnFailure = flag;\n        });\n        tap.VERSION = qunitTapVersion;\n        tap.puts = printLikeFunction;\n        tap.count = tap.config.initialCount - 1;\n        tap.expectedCount = tap.config.initialCount - 1;\n\n        function isEnabled (configName) {\n            return tap.config[configName];\n        }\n\n        function formatDetails (details) {\n            if (isPassed(details)) {\n                return details.message;\n            }\n            var desc = [];\n            if (details.message) {\n                desc.push(details.message);\n            }\n            if (isEnabled('showExpectationOnFailure') && !(isAssertOkFailed(details))) {\n                render(desc, 'expected', details.expected, explain);\n                render(desc, 'got', details.actual, explain);\n            }\n            renderIf(isEnabled('showTestNameOnFailure'), desc, 'test', details.name, noop);\n            renderIf(isEnabled('showModuleNameOnFailure'), desc, 'module', details.module, noop);\n            renderIf(isEnabled('showSourceOnFailure'), desc, 'source', details.source, ltrim);\n            return desc.join(', ');\n        }\n\n        function printPlanLine (toCount) {\n            tap.puts(tap.config.initialCount + '..' + toCount);\n        }\n\n        function unsubscribeEvent (eventName) {\n            var listeners;\n            if (indexOf(targetEvents, eventName) === -1) {\n                return;\n            }\n            listeners = qu.config[eventName];\n            if (typeof listeners === 'undefined') {\n                return;\n            }\n            removeElement(listeners, registeredCallbacks[eventName]);\n        }\n\n        function unsubscribeEvents (eventNames) {\n            var i;\n            for (i = 0; i < eventNames.length; i += 1) {\n                unsubscribeEvent(eventNames[i]);\n            }\n        }\n\n        tap.explain = explain;\n\n        tap.note = function note (obj) {\n            tap.puts(escapeLineEndings('# ' + obj));\n        };\n\n        tap.diag = function diag (obj) {\n            tap.note(obj);\n            return false;\n        };\n\n        tap.moduleStart = function moduleStart (arg) {\n            var name = (typeof arg === 'string') ? arg : arg.name;\n            tap.note('module: ' + name);\n        };\n\n        tap.testStart = function testStart (arg) {\n            var name = (typeof arg === 'string') ? arg : arg.name;\n            tap.note('test: ' + name);\n        };\n\n        tap.log = function log (details) {\n            var testLine = '';\n            tap.count += 1;\n            if (isFailed(details)) {\n                testLine += 'not ';\n            }\n            testLine += ('ok ' + tap.count);\n            tap.puts(formatTestLine(testLine, formatDetails(details)));\n        };\n\n        tap.testDone = function testDone () {\n            if (isPlanRequired(qu.config)) {\n                tap.expectedCount += qu.config.current.expected;\n            }\n        };\n\n        tap.done = function done () {\n            if (typeof tap.config.noPlan !== 'undefined' && !(tap.config.noPlan)) {\n                // Do nothing until removal of 'noPlan' option.\n            } else if (isPlanRequired(qu.config)) {\n                printPlanLine(tap.expectedCount);\n            } else {\n                printPlanLine(tap.count);\n            }\n        };\n\n        tap.unsubscribe = function unsubscribe () {\n            if (typeof qu.config === 'undefined') {\n                return;\n            }\n            if (arguments.length === 0) {\n                unsubscribeEvents(targetEvents);\n            } else {\n                unsubscribeEvents(slice.apply(arguments));\n            }\n        };\n\n        (function () {\n            var appendCallback = createCallbackAppenderFor(qu),\n                eventName, i, callback;\n            for (i = 0; i < targetEvents.length; i += 1) {\n                eventName = targetEvents[i];\n                callback = appendCallback(qu, tap, eventName);\n                registeredCallbacks[eventName] = callback;\n            }\n        })();\n\n        return tap;\n    }\n\n    qunitTap.qunitTap = function () {\n        throw new Error('[BC BREAK] Since 1.4.0, QUnit-TAP exports single qunitTap function as module.exports. Therefore, require(\"qunit-tap\") returns qunitTap function itself. Please fix your code if you are using Node.js (or any CommonJS env).');\n    };\n\n    // using substack pattern (export single function)\n    return qunitTap;\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../bower_components/qunit-tap/lib/qunit-tap.js\n// module id = 37\n// module chunks = 1","'use strict';\n\n/* global QUnit, qunitTap */\n\nvar qunit_started = false;\n\n/* Always use explicit start */\nQUnit.config.autostart = false;\n\n/*\n * HACK: phantomjs doesn't handle uncaught exceptions as it should if\n * window.onerror is non-null, even when that handler returns false\n * (expecting that the browser default behavior will occur).\n *\n * So remove the qunit window.onerror handler until the tests actually\n * start, and any errors become part of the test suite results.\n */\nvar qunit_onerror = window.onerror;\nwindow.onerror = null;\nQUnit.begin(function() {\n    window.onerror = function(error, file, line) {\n        var ret = false;\n        if (qunit_onerror)\n            ret = qunit_onerror(error, file, line);\n\n        /*\n         * If a global exception happens during an async test\n         * then that test won't be able to call the start() function\n         * to move to the next test, so call it here.\n         */\n        if (QUnit.config.current && QUnit.config.current.async)\n            QUnit.start();\n\n        return ret;\n    };\n});\n\nQUnit.moduleStart(function() {\n    qunit_started = true;\n});\n\nQUnit.done(function() {\n    console.log(\"phantom-tap-done\");\n    window.onerror = null;\n});\n/*\n * Now initialize qunit-tap\n *\n * When not running under tap-phantom this stuff will just show up in\n * the console. We print out a special canary at the end of the tests\n * so that tap-phantom can know when the testing is done.\n *\n * In addition double check for a test file that doesn't properly call\n * QUnit.start() after its done setting up its tests.\n *\n * We also want to insert the current test name into all tap lines.\n */\nvar tap_regex = /^((not )?ok [0-9]+ (- )?)(.*)$/;\nqunitTap(QUnit, function() {\n    if (arguments.length == 1 && QUnit.config.current) {\n        var match = tap_regex.exec(arguments[0]);\n        if (match) {\n            console.log(match[1] + QUnit.config.current.testName + \": \" + match[4]);\n            return;\n        }\n    }\n    console.log.apply(console, arguments);\n});\n\nwindow.setTimeout(function() {\n    if (!qunit_started) {\n        console.log(\"QUnit not started by test\");\n        console.log(\"phantom-tap-error\");\n    }\n}, 20000);\n\nwindow.tests_included = true;\n\nif (module && module.exports)\n    module.exports = QUnit;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/qunit-config.js\n// module id = 38\n// module chunks = 1","module.exports = function(module) {\n\tif(!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tmodule.children = [];\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/webpack/buildin/module.js\n// module id = 39\n// module chunks = 1"],"sourceRoot":""}