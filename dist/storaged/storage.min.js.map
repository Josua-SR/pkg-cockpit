{"version":3,"sources":["webpack:///storaged/storage.min.js","webpack:///webpack/bootstrap 286e4c59a6a7e45c7f9c","webpack:///../pkg/storaged/devices.js","webpack:///external \"jQuery\"","webpack:///external \"cockpit\"","webpack:///../pkg/storaged/client.js","webpack:///../pkg/storaged/utils.js","webpack:///../pkg/lib/mustache.js","webpack:///../~/mustache/mustache.js","webpack:///../pkg/lib/service.js","webpack:///../pkg/lib/python.jsx","webpack:///../pkg/lib/inotify.py","webpack:///../pkg/storaged/nfs-mounts.py","webpack:///../pkg/storaged/jobs.js","webpack:///../pkg/storaged/overview.js","webpack:///../pkg/lib/plot.js","webpack:///../~/jquery-flot/jquery.flot.js","webpack:///../~/jquery-flot/jquery.flot.selection.js","webpack:///../~/jquery-flot/jquery.flot.time.js","webpack:///../pkg/lib/journal.js","webpack:///../pkg/lib/journal_day_header.mustache","webpack:///../pkg/lib/journal_line.mustache","webpack:///../pkg/lib/journal_reboot.mustache","webpack:///../pkg/storaged/dialog.js","webpack:///../pkg/lib/patterns.js","webpack:///../pkg/storaged/permissions.js","webpack:///../pkg/storaged/details.jsx","webpack:///../~/react-lite/dist/react-lite.js","webpack:///../pkg/storaged/block-details.jsx","webpack:///../pkg/storaged/content-views.jsx","webpack:///../pkg/lib/cockpit-components-listing.jsx","webpack:///../pkg/storaged/storage-controls.jsx","webpack:///../pkg/lib/cockpit-components-onoff.jsx","webpack:///../pkg/lib/cockpit-components-tooltip.jsx","webpack:///../pkg/storaged/format-dialog.jsx","webpack:///../pkg/storaged/fsys-tab.jsx","webpack:///../pkg/storaged/crypto-tab.jsx","webpack:///../pkg/storaged/lvol-tabs.jsx","webpack:///../pkg/storaged/pvol-tabs.jsx","webpack:///../pkg/storaged/part-tab.jsx","webpack:///../pkg/storaged/swap-tab.jsx","webpack:///../pkg/storaged/unrecognized-tab.jsx","webpack:///../pkg/storaged/drive-details.jsx","webpack:///../pkg/storaged/vgroup-details.jsx","webpack:///../pkg/storaged/mdraid-details.jsx","webpack:///../pkg/storaged/job-views.jsx"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","init","navigate","path","cockpit","location","length","details_page","hide","overview_page","show","console","warn","$","update_multipath_broken","multipathd_running","multipathd_service","state","multipath_broken","client","broken_multipath_present","toggle","jobs_manager","on","go","this","attr","utils","init_arming_zones","translate","features","jobs","overview","details","get_multipathd_service","spawn","superuser","fail","error","text","_","toString","modal","gettext","jQuery","instance_sampler","metrics","source","handle_meta","msg","self","data","instances","i","handle_data","changed","s","inst","triggerHandler","close","channel","payload","event","log","message","JSON","parse","proxy","iface","storaged_client","STORAGED_IFACE_PFX","STORAGED_OPATH_PFX","watch","proxies","init_proxies","path_namespace","mdraids","vgroups","lvols","drives","drives_ata","blocks","blocks_ptable","blocks_part","blocks_lvm2","blocks_pvol","blocks_fsys","blocks_crypto","blocks_swap","iscsi_sessions","is_multipath_master","block","Symlinks","decode_filename","indexOf","update_indices","enter_slashdev","enc","slashdevs_block","replace","cmp_pvols","a","b","block_cmp","enter_job","job","Objects","forEach","path_jobs","parent","get_parent","mdraid","vgroup","pvol","lvol","part","drives_multipath_blocks","drives_block","undefined","Drive","push","sort","mdraids_block","MDRaid","mdraids_members","MDRaidMember","Device","PreferredDevice","uuids_mdraid","UUID","vgnames_vgroup","Name","vgroups_pvols","VolumeGroup","vgroups_lvols","localeCompare","lvols_block","LogicalVolume","lvols_pool_members","Type","ThinPool","blocks_cleartext","CryptoBackingDevice","blocks_partitions","Table","Offset","init_model","callback","wait_all","objects","obj","pop","wait","pull_time","then","now","time_offset","parseInt","Date","getTime","enable_features","manager","valid","EnableModules","defer","manager_lvm2","manager_iscsi","iscsi","hacks","with_storaged_iscsi_sessions","SessionsSupported","resolve","lvm2","promise","dispatchEvent","nfs_mounts","spawn_nfs_mounts","args","python","inotify_py","nfs_mounts_py","err","get_fsys_size","entry","fields","fsys_sizes","done","output","update_entry","new_fields","stringify","add_entry","remove_entry","mount_entry","unmount_entry","stop_and_unmount_entry","users","units","map","u","unit","stop_and_remove_entry","entry_users","entries","buf","stream","lines","split","init_manager","fallback_udisks","STORAGED_SERVICE","udisks","dbus","udisks_manager","storaged_service","storaged_opath_pfx","storaged_iface_pfx","storaged","storaged_manager","manifests","event_target","method","options","name","swap_sizes","blockdev_io","derive","older_than","version","compare_versions","Version","nfs","is_old_udisks2","get_children","children","IsContainer","ptable_path","IsContained","sync","input","depth","na","nb","attrs","seen","nodeType","nodeName","parentNode","replaceChild","removeChild","nodeValue","attributes","value","setAttribute","removeAttribute","firstChild","nextSibling","appendChild","mustache","service","C_","to_ints","str","a_ints","b_ints","len","Math","min","hostnamed","array_find","array","pred","flatten","array_of_arrays","Array","prototype","concat","apply","encoded","utf8_decoder","decode","base64_decode","slice","encode_filename","decoded","base64_encode","utf8_encoder","encode","fmt_size","bytes","format_bytes","fmt_size_long","with_binary_unit","with_decimal_unit","fmt_rate","bytes_per_sec","format_bytes_per_sec","format_temperature","kelvin","celcius","fahrenheit","toFixed","format_fsys_usage","used","total","parts","join","format_delay","d","seconds","round","minutes","floor","hours","format_size_and_text","size","format","desc","validate_lvm2_name","match","search","block_name","mdraid_name","StaticHostname","host","lvol_name","type","Origin","render","drive_name","drive","name_parts","Vendor","Model","Serial","WWN","get_block_link_target","fmt_part","link","is_lvol","is_crypt","is_part","target","html","get_partitions","process_level","level","container_start","container_size","append_free_space","start","result","n","is_container","is_contained","last_end","total_end","partitions","Size","get_available_spaces","is_free","has_fs_label","IdUsage","IdType","block_pvol","is_mpath_member","members","block_ptable","block_part","HintIgnore","make","add_free_spaces","spaces","Object","keys","filter","make_block_path_cmp","available_space_to_option","spc","Title","Label","prepare_available_spaces","spcs","prepare","CreatePartition","all","DeviceNumber","path_a","path_b","$top","was_active","hasClass","toggleClass","parents","reset_arming_zone","$btn","$zone","$arm_btn","find","removeClass","get_active_usage","get_usage","fsys","usage","MountPoints","res","raw","Teardown","Mounts","MDRaidMembers","PhysicalVolumes","Blocking","use","active_state","MountPoint","ActiveDevices","as","VGroup","FreeSize","HasMounts","HasMDRaidMembers","HasPhysicalVolumes","teardown_active_usage","unmount","mounteds","Unmount","mdraid_remove","RemoveDevice","wipe","t","v","pvol_remove","pvols","handle_vg","vg","pvs","by_vgroup","Delete","tear-down","pv","fn","amend","each","el","selector","element","document","querySelector","show_soon","ready","hasAttribute","val","getAttribute","window","clearTimeout","setTimeout","String","template","cache","div","createElement","innerHTML","extend","view","partials","to_html","send","clearCache","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","root","factory","testRegExp","re","string","RegExp_test","isWhitespace","nonSpaceRe","isFunction","object","escapeRegExp","escapeHtml","entityMap","escapeTags","tags","isArray","Error","RegExp","parseTemplate","stripSpace","hasTag","nonSpace","tokens","spaceRe","chr","token","openSection","tagRes","scanner","Scanner","sections","eos","pos","scanUntil","charAt","scan","tagRe","whiteRe","equalsRe","curlyRe","nestTokens","squashTokens","lastToken","squashedTokens","section","nestedTokens","collector","tail","Context","parentContext",".","Writer","test","Object_toString","&","<",">","\"","'","/","index","substring","lookup","context","names","renderTokens","originalTemplate","subRender","buffer","j","jlen","escape","defaultWriter","wait_valid","with_systemd_manager","systemd_manager","systemd_client","Subscribe","update_from_unit","exists","LoadState","ActiveState","UnitFileState","enabled","wait_callbacks","update_from_service","refresh","refresh_interface","props","ifaces","notify","on_job_new_removed_refresh","number","unit_id","call_manager","call_manager_with_job","dfd","results","pending_jobs","reject","call_manager_with_reload","stop","restart","tryRestart","enable","disable","LoadUnit","addEventListener","reloading","_interopRequireDefault","__esModule","default","script_pieces","script","_cockpit2","pyinvoke","defineProperty","_cockpit","init_jobs","update_job_spinners","show_spinners_for_path","css","show_spinners_for_object","show_spinners_for_objects","paths","query_jobs_data","make_description","fmt","descriptions","Operation","operation","cmp_job","StartTime","job_is_stable","age_ms","server_now","ExpectedEndTime","make_job","remaining","Description","Progress","ProgressValid","RemainingTime","Cancelable","ata-smart-selftest","drive-eject","encrypted-unlock","encrypted-lock","encrypted-modify","swapspace-start","swapspace-stop","filesystem-mount","filesystem-unmount","filesystem-modify","format-erase","format-mkfs","loop-setup","partition-modify","partition-delete","partition-create","cleanup","ata-secure-erase","ata-enhanced-secure-erase","md-raid-stop","md-raid-start","md-raid-fault-device","md-raid-remove-device","md-raid-create","mdraid-check-job","mdraid-repair-job","mdraid-recover-job","mdraid-sync-job","lvm-lvol-delete","lvm-lvol-activate","lvm-lvol-deactivate","lvm-lvol-snapshot","lvm-vg-create","lvm-vg-delete","lvm-vg-add-device","lvm-vg-rem-device","lvm-vg-empty-device","lvm-vg-create-volume","lvm-vg-rename","lvm-vg-resize","render_jobs_panel","js","jobs_tmpl","Jobs","HasJobs","update","query","init_overview","render_mdraids","cmp_mdraid","make_mdraid","mdraids_tmpl","MDRaids","HasMDRaids","permissions","render_vgroups","cmp_vgroup","make_vgroup","vgroups_tmpl","VGroups","HasVGroups","render_iscsi_sessions","cmp_session","make_session","session","Tpgt","Address","Port","iscsi_sessions_tmpl","Sessions","HasSessions","render_drives","cmp_drive","SortKey","classify_drive","MediaRemovable","Media","MediaCompatibility","RotationRate","make_drive","dev","io","classification","size_str","Classification","ReadRate","WriteRate","Highlight","cur_highlight","drives_tmpl","Drives","HasDrives","read_series","add_instance","write_series","render_others","is_other","block_lvm2","make_other","o","others_tmpl","Others","HasOthers","render_mounts","is_mount","cmp_mount","IdLabel","make_mount","fsys_size","mount_points","LinkTarget","DeviceSize","UsageText","UsagePercent","UsageCritical","IsMounted","mounts_tmpl","render_nfs_mounts","make_nfs_mount","mounted","Server","RemoteDir","CanEdit","fstab","action_arg","is_armed","nfs_mounts_tmpl","armed","nfs_disarm","checked","error_title","nfs_busy_dialog","dialog_title","action_title","action","dialog","open","HasUnits","Units","Unit","Fields","Action","DangerButton","nfs_fstab_dialog","remote_choices","vals","server","server_to_check","server_check_deferred","this_deferred","dirs","line","busy","Alerts","Message","TextInput","Value","validate","disabled","ComboBox","Choices","remote","dir","opts","render_jobs","plot_setup","flot","axes","getAxes","yaxis","datamax","max","make_plot_post","plot","bytes_per_sec_tick_unit","highlight_drive","iscsi_discover","PassInput","Deferred","username","password","cancelled","address","iscsi_add","cancel","failure_filter","field","iscsi_login","cred_vals","node.startup","discover_vals","nodes","target_rows","Columns","SelectRow","Headers","Rows","iscsi_add_with_creds","login_vals","iscsi_remove","Logout","iscsi_change_name","read_plot","resize","write_plot","nfs_users_tmpl","arg","read_plot_data","direct","internal","threshold","read_plot_options","plot_simple_template","ticks","memory_ticks","tickFormatter","format_bytes_per_sec_tick_no_unit","grid","hoverable","autoHighlight","setup_hook","post_hook","set_options","add_metrics_stacked_instances_series","start_walking","write_plot_data","write_plot_options","plot_controls","setup_plot_controls","reset","append","journal","logbox","SelectOne","Options","selected","visible","SelectMany","EmptyWarning","disks","disks_needed","arguments","MDRaidCreate","chunk","find_vgroup","VolumeGroupCreate","setup_plot","graph_id","user_options","sync_divs","inner_div","width","outer_div","height","set_yaxis_max","running","maybe_start","starting","clearInterval","setInterval","setData","setupGrid","draw","destroy","trigger","off","empty","colors","legend","series","shadowSize","lineWidth","fill","xaxis","points","radius","borderWidth","aboveData","color","borderColor","scale","labelMargin","plotter","x_range_seconds","x_stop_seconds","refresh_now","flot_data","beg","interval","end","refresh_pending","walk","stop_walking","move","clearSelection","ceil","x_offset","sync_suppressed","count","get_options","add_metrics_sum_series","add_series","remove_series","splice","move_to_front","remove","build_metric","flat_sum","sum","reset_series","check_archives","archives","chanopts_list","metrics_row","add","factor","row","x","hover_hit","item","hover","archive_source","omit-instances","instance_data","ts","last","abs","last_instance","clear_instances","y","metrics_path_names","next_hover_series","next_hover_val","cur_hover_series","cur_hover_val","hover_on","hover_off","selecting","ranges","to","from","plot_colors","tickLength","mode","format_date_tick","minTickSize","reserveSpace","tickColor","pow","LN2","month_names","axis","pad","begin","year_index","month_index","day_index","hour_minute_index","tickSize","l","getFullYear","getMonth","getDate","label","getHours","getMinutes","substr","bytes_tick_unit","format_bytes_tick_no_unit","format_bytes_tick","format_bytes_per_sec_tick","bits_per_sec_tick_unit","format_bits_per_sec","format_bits_per_sec_tick_no_unit","format_bits_per_sec_tick","container","plots","zoom_plot_start","plot_x_stop","update_plot_buttons","zoom_plot_in","x_range","x_stop","zoom_history","plot_x_range","plot_reset","zoom_plot_out","r","plot_zoom_steps","format_range","ngettext","update_selection_zooming","plot_min_x_range","addClass","selection","click","step","setup_complicated_plot","basic_flot_row","stacked_flot_row","ser","x_rh_stack_graphs","g","normalize","f","clamp","clone","extract","elem","toLowerCase","get","exec","parseFloat","trim","lookupColors","aqua","azure","beige","black","blue","brown","cyan","darkblue","darkcyan","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkviolet","fuchsia","gold","green","indigo","khaki","lightblue","lightcyan","lightgreen","lightgrey","lightpink","lightyellow","lime","magenta","maroon","navy","olive","orange","pink","purple","violet","red","silver","white","yellow","Canvas","cls","className","direction","position","left","top","appendTo","getContext","G_vmlCanvasManager","initElement","devicePixelRatio","backingStoreRatio","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","pixelRatio","textContainer","_textCache","Plot","placeholder","data_","options_","plugins","executeHooks","hook","initPlugins","classes","parseOptions","axisOptions","axisCount","fontSize","fontSizeDefault","fontDefaults","style","variant","weight","family","xaxes","font","lineHeight","yaxes","noTicks","x2axis","y2axis","coloredAreas","markings","coloredAreasColor","markingsColor","bars","highlightColor","getOrCreateAxis","hooks","processOptions","parseData","fillInSeriesOptions","processData","axisNumber","coord","allAxes","grep","canvasToAxisCoords","c2p","x1","y1","axisToCanvasCoords","key","p2c","neededColors","maxIndex","sc","colorPool","colorPoolSize","variation","colori","zero","updateAxis","datamin","fakeInfinity","k","ps","topSentry","Number","POSITIVE_INFINITY","bottomSentry","NEGATIVE_INFINITY","MAX_VALUE","datapoints","processRawData","required","autoscale","defaultValue","horizontal","pointsize","insertSteps","steps","nullify","isNaN","Infinity","processDatapoints","xmin","ymin","xmax","ymax","delta","align","barWidth","setupCanvases","surface","overlay","ctx","octx","eventHolder","unbind","existing","shutdown","clear","bindEvents","mousemove","onMouseMove","bind","onMouseLeave","clickable","onClick","redrawTimeout","setTransformationHelpers","identity","transform","it","inverseTransform","plotWidth","plotHeight","measureTickLabels","labelWidth","labelHeight","maxWidth","legacyStyles","layer","info","getTextInfo","allocateAxisBoxFirstPhase","lw","lh","isXAxis","axisMargin","padding","innermost","outermost","first","found","plotOffset","bottom","box","right","allocateAxisBoxSecondPhase","adjustLayoutForThingsStickingOut","minMargin","minBorderMargin","margins","showGrid","margin","processOffset","axisOpts","setRange","allocatedAxes","setupTickGeneration","setTicks","snapRangeToTicks","drawAxisLabels","insertLegend","widen","autoscaleMargin","sqrt","dec","LN10","maxDec","tickDecimals","magn","norm","tickGenerator","prev","floorInBase","NaN","formatted","decimal","precision","alignTicksWithAxis","otherAxis","niceTicks","extraDec","oticks","drawBackground","backgroundColor","drawGrid","drawSeries","triggerRedrawOverlay","extractRange","tmp","save","fillStyle","getColorOrGradient","fillRect","restore","bw","bc","xrange","yrange","xequal","yequal","markingsLineWidth","subPixel","beginPath","strokeStyle","moveTo","lineTo","stroke","xoff","yoff","strokeRect","tick","halign","valign","removeText","addText","drawSeriesLines","drawSeriesBars","drawSeriesPoints","plotLine","xoffset","yoffset","axisx","axisy","prevx","prevy","x2","y2","plotLineArea","areaOpen","ypos","segmentStart","segmentEnd","x1old","x2old","lineJoin","sw","angle","PI","sin","cos","getFillStyle","plotPoints","offset","shadow","symbol","arc","closePath","w","drawBar","barLeft","barRight","fillStyleCallback","drawLeft","drawRight","drawTop","drawBottom","plotBars","filloptions","seriesColor","fillColor","fragments","rowStarted","lf","labelFormatter","sorted","reverse","ascending","noColumns","labelBoxBorderColor","table","backgroundOpacity","prependTo","findNearbyItem","mouseX","mouseY","seriesFilter","maxDistance","mouseActiveRadius","smallestDistance","mx","my","maxx","maxy","dx","dy","dist","datapoint","dataIndex","seriesIndex","e","triggerClickHoverEvent","eventname","canvasX","pageX","canvasY","pageY","highlights","h","auto","point","unhighlight","highlight","interaction","redrawOverlayInterval","drawOverlay","hi","drawBarHighlight","drawPointHighlight","indexOfHighlight","pointRadius","spec","defaultColor","gradient","createLinearGradient","co","brightness","opacity","addColorStop","getPlaceholder","getCanvas","getPlotOffset","getData","getXAxes","getYAxes","getOptions","pointOffset","removeData","base","hasOwnProperty","detach","clearRect","layerKey","getTextLayer","layerCache","styleKey","styleCache","positions","active","rendered","font-size","insertAfter","textStyle","max-width","outerWidth","outerHeight","text-align","updateSelection","getSelection","onMouseDown","which","body","focus","onselectstart","savedhandlers","ondrag","setSelectionPos","mouseUpHandler","onMouseUp","one","selectionIsSane","triggerSelectedEvent","c1","c2","second","p1","p2","preventEvent","setSelection","range","minSize","mousedown","shape","formatDate","monthNames","dayNames","strftime","leftPad","isAM","hours12","getDay","getSeconds","makeUtcWrapper","addProxyMethod","sourceObj","sourceMethod","targetObj","targetMethod","utc","date","dateGenerator","timezone","timezoneJS","setTimezone","setTime","axisName","specQuarters","specMonths","timeUnitSize","year","setSeconds","setMinutes","setHours","setMonth","setFullYear","setMilliseconds","minute","hour","day","setDate","month","quarter","carry","timeformat","useQuarters","span","suffix","hourCode","rt","twelveHourClock","baseSpec","output_funcs_for_box","render_line","ident","prio","time","cursor","Mustache","line_template","render_reboot_separator","reboot_line","render_day_header","day_header_template","parse_html","jquery","reboot_template","reboot","elt","prepend","insertBefore","remove_last","lastChild","remove_first","journalctl","fire_streamers","ents","streamers","matches","follow","cmd","directory","boot","since","until","after","proc","batch","latency","ex","problem","exit_status","always","printable","renderer","funcs_or_box","copy_object","format_entry","journal_entry","full","bootid","entry_is_equal","render_state_line","output_funcs","last_time","start_new_line","top_state","bottom_state","top_output","header_present","line_present","first_time","prepend_flush","bottom_output","append_flush","max_entries","createTextNode","init_dialogs","storage_dialog_tmpl","dialog_open","def","toggle_arrow","collapsed","update_visibility","select_row","tbody","dropdown_option_clicked","setup_size_slider","Max","$dialog","SizeSlider","slider","Round","replaceWith","size_slider_changed","size_text_changed","size_unit_changed","prop","format_number","unit_val","max_fmt","max_parse","size_update","combobox_set_choices","choices","when","get_field_values","$f","$ul","combobox_reset_dynamic_choices","combobox_some_dynamic","combobox_timeout","get_name","SizeInput","CheckBox","Arrow","CheckBoxText","invisible","update_fields","validate_field","AllowInfinite","get_validated_field_values","errors","error_field_to_target","ValueMB","get_byte_units","HasOptions","Checked","Danger","HasBody","cur_dialog","ev","unique","unique_number","clear_errors","sel","field_error","next","wrapper","is","selectpicker","global_error","alert","footer","display_errors","any","DialogWait","handle","clear_wait","ctl","removeAttr","display_wait","before","cancellation","controls","not","progress","onoff_refresh","andSelf","onoff","buttons","onoff_change","onoff_value","resize_flex","flex","update_value","check_overflow","offsetWidth","scrollWidth","setup_slider","set","hitx","offsetX","clientX","setup_sliders","update_privileged","perm","denied_message","placement","allowed","allowed_key","tooltip","update_privileged_ui","update_storage_privileged","permission","user","admin","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_react2","Details","page","display","unmountComponentAtNode","getElementById","StdDetailsLayout","_createClass","defineProperties","descriptor","protoProps","staticProps","_react","_utils","_utils2","_blockDetails","_driveDetails","_vgroupDetails","_mdraidDetails","_jobViews","_React$Component","getPrototypeOf","sidebar","header","content","Component","_React$Component2","_this2","on_client_changed","setState","removeEventListener","go_up","button","DriveDetails","BlockDetails","VGroupDetails","MDRaidDetails","global","createVnode","vtype","ref","vnode","refs","VSTATELESS","VCOMPONENT","uid","getUid","initVnode","namespaceURI","node","VELEMENT","initVelem","initVcomponent","initVstateless","VCOMMENT","createComment","updateVnode","newVnode","updateVcomponent","updateVstateless","oldHtml","HTML_KEY","__html","updateVelem","initVchildren","updateVChildren","patches","removes","updates","creates","diffVchildren","flatEach","applyDestroy","applyUpdate","applyCreate","newNode","shouldIgnore","replaceData","currentNode","childNodes","destroyVnode","destroyVelem","destroyVcomponent","destroyVstateless","velem","SVGNamespaceURI","createElementNS","isCustomComponent","setProps","addItem","pendingRefs","vchildren","getFlattenChildren","isArr","collectChild","child","toJS","newVchildren","vchildrenLen","newVchildrenLen","_vnode","_newVnode","shouldIgnoreUpdate","_vnode2","shouldRemove","_newVnode2","newVelem","patchProps","detachRef","attachRef","eventStore","vstateless","renderVstateless","newVstateless","compareTwoVnodes","syncCache","componentContext","getContextByTypes","contextTypes","vcomponent","component","updater","$updater","$cache","isPending","componentWillMount","getState","renderComponent","getChildContext","isMounted","pendingComponents","newVcomponent","nextProps","componentWillReceiveProps","needToggleIsPending","emitUpdate","forceUpdate","noop","componentWillUnmount","curContext","clearPendingComponents","components","componentDidMount","clearPendingRefs","list","refValue","clearPending","getDOMNode","refKey","isFn","oldCache","vchild","Updater","pendingStates","pendingCallbacks","nextContext","clearCallbacks","shouldUpdate","nextState","shouldComponentUpdate","getEventName","addEvent","eventType","listener","unbubbleEvents","dispatchUnbubbleEvent","eventTypes","inMobile","ON_CLICK_KEY","emptyFunction","supportInputEvent","removeEvent","syntheticEvent","updateQueue","_target","createSyntheticEvent","currentTarget","$cancelBubble","batchUpdate","nativeEvent","cancelBubble","persist","setStyle","elemStyle","styles","styleName","setStyleValue","removeStyle","patchStyle","newStyle","prefixKey","prefix","toUpperCase","styleValue","isUnitlessNumber","RE_NUMBER","mergeConfigToProperties","config","attrNS","domAttrs","domProps","propName","propConfig","properties","attributeName","propertyName","attributeNamespace","mustUseProperty","checkMask","MUST_USE_PROPERTY","hasBooleanValue","HAS_BOOLEAN_VALUE","hasNumericValue","HAS_NUMERIC_VALUE","hasPositiveNumericValue","HAS_POSITIVE_NUMERIC_VALUE","hasOverloadedBooleanValue","HAS_OVERLOADED_BOOLEAN_VALUE","bitmask","setPropValue","propInfo","removePropValue","namespace","setAttributeNS","isCustomAttribute","VALID_ATTRIBUTE_NAME_REGEX","updateSelectOptions","select","multiple","propValue","selectedValue","option","selectedIndex","pipe","fn1","fn2","iteratee","setProp","EVENT_KEYS","removeProp","oldValue","patchProp","isSelect","newProps","isValidContainer","ELEMENT_NODE_TYPE","DOC_NODE_TYPE","DOCUMENT_FRAGMENT_NODE_TYPE","renderTreeIntoContainer","COMPONENT_ID","argsCache","pendingRendering","oldVnode","rootNode","vnodeStore","childNode","unstable_renderSubtreeIntoContainer","parentComponent","subVnode","findDOMNode","isReactComponent","finalProps","propKey","defaultProps","argsLen","finalChildren","isValidElement","cloneElement","originElem","_len","_key","createFactory","_len2","_key2","only","store","keyMap","isEqual","getKey","_ref","escapeUserProvidedKey","toArray","userProvidedKeyEscapeRegex","eachMixin","mixins","mixin","combineMixinToProto","proto","curValue","$getInitialStates","combineMixinToClass","propTypes","statics","getDefaultProps","bindContext","getInitialState","_this","Facade","createClass","Klass","autobind","specMixins","displayName","shallowEqual","objA","objB","keysA","keysB","PureComponent","shallowCompare","updaters","updateComponent","addState","replaceState","isReplace","addCallback","ReactComponentSymbol","componentWillUpdate","componentDidUpdate","onmousemove","ontouchmove","onmouseleave","onmouseenter","onload","onunload","onscroll","onfocus","onblur","onrowexit","onbeforeunload","onstop","ondragdrop","ondragenter","ondragexit","ondraggesture","ondragover","oncontextmenu","onerror","onabort","oncanplay","oncanplaythrough","ondurationchange","onemptied","onended","onloadeddata","onloadedmetadata","onloadstart","onencrypted","onpause","onplay","onplaying","onprogress","onratechange","onseeking","onseeked","onstalled","onsuspend","ontimeupdate","onvolumechange","onwaiting","animationIterationCount","borderImageOutset","borderImageSlice","borderImageWidth","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridColumn","fontWeight","lineClamp","order","orphans","tabSize","widows","zIndex","zoom","fillOpacity","floodOpacity","stopOpacity","strokeDasharray","strokeDashoffset","strokeMiterlimit","strokeOpacity","strokeWidth","prefixes","ATTRIBUTE_NAME_START_CHAR","ATTRIBUTE_NAME_CHAR","HTMLDOMPropertyConfig","accept","acceptCharset","accessKey","allowFullScreen","allowTransparency","alt","async","autoComplete","autoFocus","autoPlay","capture","cellPadding","cellSpacing","charSet","challenge","cite","classID","cols","colSpan","contentEditable","contextMenu","coords","crossOrigin","dateTime","defaultChecked","download","draggable","encType","form","formAction","formEncType","formMethod","formNoValidate","formTarget","frameBorder","headers","hidden","high","href","hrefLang","htmlFor","httpEquiv","icon","inputMode","integrity","keyParams","keyType","kind","lang","loop","low","manifest","marginHeight","marginWidth","maxLength","media","mediaGroup","minLength","muted","nonce","noValidate","optimum","pattern","poster","preload","profile","radioGroup","readOnly","referrerPolicy","rel","reversed","role","rows","rowSpan","sandbox","scope","scoped","scrolling","seamless","sizes","spellCheck","src","srcDoc","srcLang","srcSet","summary","tabIndex","title","useMap","wmode","wrap","about","datatype","inlist","property","playsInline","resource","typeof","vocab","autoCapitalize","autoCorrect","autoSave","itemProp","itemScope","itemType","itemID","itemRef","security","unselectable","xlink","xml","ATTRS","accentHeight","accumulate","additive","alignmentBaseline","allowReorder","alphabetic","amplitude","arabicForm","ascent","attributeType","autoReverse","azimuth","baseFrequency","baseProfile","baselineShift","bbox","bias","by","calcMode","capHeight","clip","clipPath","clipRule","clipPathUnits","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","contentScriptType","contentStyleType","cx","cy","decelerate","descent","diffuseConstant","divisor","dominantBaseline","dur","edgeMode","elevation","enableBackground","exponent","externalResourcesRequired","fillRule","filterRes","filterUnits","floodColor","focusable","fontFamily","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fx","fy","g1","g2","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","glyphRef","gradientTransform","gradientUnits","hanging","horizAdvX","horizOriginX","ideographic","imageRendering","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","kerning","keyPoints","keySplines","keyTimes","lengthAdjust","letterSpacing","lightingColor","limitingConeAngle","local","markerEnd","markerMid","markerStart","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","numOctaves","operator","orient","orientation","origin","overflow","overlinePosition","overlineThickness","paintOrder","panose1","pathLength","patternContentUnits","patternTransform","patternUnits","pointerEvents","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","refX","refY","renderingIntent","repeatCount","repeatDur","requiredExtensions","requiredFeatures","rotate","rx","ry","seed","shapeRendering","slope","spacing","specularConstant","specularExponent","speed","spreadMethod","startOffset","stdDeviation","stemh","stemv","stitchTiles","stopColor","strikethroughPosition","strikethroughThickness","strokeLinecap","strokeLinejoin","surfaceScale","systemLanguage","tableValues","targetX","targetY","textAnchor","textDecoration","textRendering","textLength","u1","u2","underlinePosition","underlineThickness","unicode","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","values","vectorEffect","vertAdvY","vertOriginX","vertOriginY","viewBox","viewTarget","visibility","widths","wordSpacing","writingMode","xHeight","xChannelSelector","xlinkActuate","xlinkArcrole","xlinkHref","xlinkRole","xlinkShow","xlinkTitle","xlinkType","xmlBase","xmlns","xmlnsXlink","xmlLang","xmlSpace","yChannelSelector","z","zoomAndPan","SVGDOMPropertyConfig","freeze","ReactDOM","tagNames","DOM","tagName","check","isRequired","PropTypes","bool","func","arrayOf","instanceOf","objectOf","oneOf","oneOfType","Children","isPureReactComponent","React","__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","_details","_contentViews","_contentViews2","Block","next_default_logical_volume_name","find_lvol","create_tabs","is_partition","endsWith","add_tab","tabs","create_thin","ExtentSize","CreateThinVolume","add_action","excuse","tab_actions","StorageButton","lock","crypto","Lock","unlock","GetSecretConfiguration","items","Unlock","passphrase","activate","Activate","deactivate","Deactivate","delete_","danger","is_filesystem","is_crypto","row_action","PoolVolTab","BlockVolTab","PartitionTab","FilesystemTab","CryptoTab","PVolTab","MDRaidMemberTab","SwapTab","UnrecognizedTab","Active","renderers","actions","block_description","append_row","job_object","last_column","tight","CockpitListing","ListingRow","columns","tabRenderers","listingActions","append_non_partitioned_block","cleartext_block","append_device","append_partitions","create_partition","FormatDialog","format_dialog","is_dos_partitioned","device_level","btn","append_extended_partition","partition","process_partitions","block_rows","block_content","format_disk","no-block","erase","Format","format_disk_btn","ReadOnly","Listing","append_logical_volume_block","append_logical_volume","member_lvol","vgroup_rows","StorageControls","StorageLink","create_logical_volume","purpose","CreatePlainVolume","CreateThinPoolVolume","new_volume_link","emptyCaption","_extends","assign","rowId","navigateToItem","listingDetail","selectChanged","initiallyExpanded","initiallyActiveTab","expanded","activeTab","loadedTabs","handleNavigateClick","handleExpandClick","willBeExpanded","tabIdx","tabPresence","presence","stopPropagation","preventDefault","handleSelectClick","handleTabClick","prevTab","prevTabPresence","expandToggle","allowNavigate","headerEntries","itm","allowExpand","listingItemClasses","clickHandler","allowSelect","listingItem","data-row-id","Renderer","rendererData","links","idx","fullWidth","columnTitles","bodyClasses","headerClasses","headerRow","selectableRows","caption","_cockpitComponentsOnoff","Tooltip","StorageControl","onPermissionChanged","markup","dangerouslySetInnerHTML","tip","StorageBlockNavLink","fmt_to_array","StorageOnOff","_this3","onChange","promise_goal_state","_this4","OnOffSwitch","StorageMultiAction","_this6","dflt","btn_classes","data-toggle","act","captionOff","captionOn","handleOnOffClick","newState","onClasses","offClasses","onMouseover","onMouseout","fixDOMElements","previousElementSibling","offsetHeight","offsetLeft","offsetTop","arrow","getElementsByClassName","arrow_left","abs_left","abs_top","max_width","offsetParent","x_delta","parse_options","unparse_options","extract_option","opt","mounting_dialog_fields","is_custom","mount_dir","mount_options","split_options","opt_auto","opt_ro","extra_options","mounting","RowTitle","crypto_options_auto","mount_auto","crypto_options_ro","mount_ro","mounting_dialog_options","mount_extra_options","crypto_options_dialog_fields","crypto_options_dialog_options","crypto_extra_options","enable_dos_extended","is_encrypted","is_encrypted_and_not_old_udisks2","is_filesystem_and_not_old_udisks2","create_partition_and_format","ptable","part_type","part_name","part_options","CreatePartitionAndFormat","add_fsys","storaged_name","SupportedFilesystems","filesystem_options","phrase","phrase2","custom","dry-run-first","config_items","mount_point","freq","passno","track-parents","crypto_options","store_passphrase","FormatButton","onSamplesChanged","rename_dialog","block_fsys","SetLabel","maybe_update_config","new_is_custom","new_dir","new_opts","new_config","old_config","AddConfigurationItem","RemoveConfigurationItem","old_dir","old_opts","UpdateConfigurationItem","mounting_dialog","mount","Mount","is_filesystem_mounted","samples","Configuration","mounted_at","edit_config","modify","commit","edit_stored_passphrase","edit_options","old_options","lvol_rename","Rename","lvol_resize","pool","resize_fsys","Resize","create_snapshot","CreateSnapshot","rename","perc","ratio","DataAllocatedRatio","MetadataAllocatedRatio","data-goto-vgroup","data-goto-mdraid","block_swap","Start","Stop","is_active","drive_ata","drive_block","multipath_blocks","assessment","SmartFailing","SmartTemperature","Revision","_storageControls","_dialog","_dialog2","VGroupSidebar","filter_inside_vgroup","add_disk","AddDevice","render_pvol","pvol_empty_and_remove","EmptyDevice","remove_action","remove_excuse","poll_timer","needs_polling","Poll","ensurePolling","NeedsPolling","MDRaidSidebar","filter_inside_mdraid","render_member","state_text","faulty","in_sync","spare","write_mostly","blocked","slot","states","is_in_sync","is_recovering","n_recovering","n_spares","dynamic_members","Level","Running","add_excuse","format_level","raid0","raid1","raid4","raid5","raid6","raid10","toggle_bitmap","SetBitmapLocation","start-degraded","start_scrub","RequestSyncAction","stop_scrub","delete_dialog","wipe_members","member","NumDevices","ChunkSize","bitmap","BitmapLocation","degraded_message","Degraded","job_row","Cancel"],"mappings":"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","file":"storaged/storage.min.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(5);\n\n\n/***/ },\n/* 1 */,\n/* 2 */,\n/* 3 */,\n/* 4 */,\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2015 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(6);\n\t    var cockpit = __webpack_require__(7);\n\t\n\t    var client = __webpack_require__(8);\n\t    var jobs = __webpack_require__(16);\n\t    var overview = __webpack_require__(17);\n\t    var details = __webpack_require__(31);\n\t    var utils = __webpack_require__(9);\n\t\n\t    __webpack_require__(54);\n\t    __webpack_require__(55);\n\t    __webpack_require__(56);\n\t    __webpack_require__(57);\n\t    __webpack_require__(58);\n\t\n\t    var _ = cockpit.gettext;\n\t\n\t    /* INITIALIZATION AND NAVIGATION\n\t     */\n\t\n\t    function init() {\n\t        var jobs_manager;\n\t        var overview_page;\n\t        var details_page;\n\t\n\t        $('body').on('click', '[data-goto-block]', function () {\n\t            cockpit.location.go([ $(this).attr('data-goto-block') ]);\n\t        });\n\t\n\t        $('body').on('click', '[data-goto-mdraid]', function () {\n\t            cockpit.location.go([ 'mdraid', $(this).attr('data-goto-mdraid') ]);\n\t        });\n\t\n\t        $('body').on('click', '[data-goto-vgroup]', function () {\n\t            cockpit.location.go([ 'vg', $(this).attr('data-goto-vgroup') ]);\n\t        });\n\t\n\t        utils.init_arming_zones($('body'));\n\t\n\t        function navigate() {\n\t            var path = cockpit.location.path;\n\t\n\t            if (path.length === 0) {\n\t                details_page.hide();\n\t                overview_page.show();\n\t            } else if (path.length == 1) {\n\t                overview_page.hide();\n\t                details_page.show('block', path[0]);\n\t            } else if (path.length == 2 && path[0] == 'mdraid') {\n\t                overview_page.hide();\n\t                details_page.show('mdraid', path[1]);\n\t            } else if (path.length == 2 && path[0] == 'vg') {\n\t                overview_page.hide();\n\t                details_page.show('vgroup', path[1]);\n\t            } else { /* redirect */\n\t                console.warn(\"not a init location: \" + path);\n\t                cockpit.location = '';\n\t            }\n\t            $(\"body\").show();\n\t        }\n\t\n\t        client.init(function () {\n\t            cockpit.translate();\n\t            if (client.features === false) {\n\t                $('#unsupported').show();\n\t                $(\"body\").show();\n\t            } else {\n\t                jobs_manager = jobs.init(client);\n\t                overview_page = overview.init(client, jobs_manager);\n\t                details_page = details.init(client, jobs_manager);\n\t                $(cockpit).on(\"locationchanged\", navigate);\n\t                navigate();\n\t            }\n\t        });\n\t\n\t        // Watching multipath for brokeness\n\t\n\t        var multipathd_service = utils.get_multipathd_service();\n\t\n\t        function update_multipath_broken() {\n\t            // When in doubt, assume everything is alright\n\t            var multipathd_running = !multipathd_service.state || multipathd_service.state === \"running\";\n\t            var multipath_broken = client.broken_multipath_present === true;\n\t            $('#multipath-broken').toggle(multipath_broken && !multipathd_running);\n\t        }\n\t\n\t        $(multipathd_service).on('changed', update_multipath_broken);\n\t        $(client).on('changed', update_multipath_broken);\n\t        update_multipath_broken();\n\t\n\t        $('#activate-multipath').on('click', function () {\n\t            cockpit.spawn([ \"mpathconf\", \"--enable\", \"--with_multipathd\", \"y\" ],\n\t                          { superuser: \"try\"\n\t                          }).\n\t                fail(function (error) {\n\t                    $('#error-popup-title').text(_(\"Error\"));\n\t                    $('#error-popup-message').text(error.toString());\n\t                    $('#error-popup').modal('show');\n\t                });\n\t        });\n\t    }\n\t\n\t    $(init);\n\t}());\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports) {\n\n\tmodule.exports = jQuery;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\tmodule.exports = cockpit;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2015 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(6);\n\t    var cockpit = __webpack_require__(7);\n\t\n\t    var utils = __webpack_require__(9);\n\t\n\t    var python = __webpack_require__(13);\n\t    var inotify_py = __webpack_require__(14);\n\t    var nfs_mounts_py = __webpack_require__(15);\n\t\n\t    /* STORAGED CLIENT\n\t     */\n\t\n\t    /* HACK: https://github.com/storaged-project/storaged/pull/68 */\n\t    var hacks = { };\n\t    if (cockpit.manifests[\"storage\"] && cockpit.manifests[\"storage\"][\"hacks\"])\n\t        hacks = cockpit.manifests[\"storage\"][\"hacks\"];\n\t\n\t    var client = { };\n\t\n\t    cockpit.event_target(client);\n\t\n\t    /* Metrics\n\t     */\n\t\n\t    function instance_sampler(metrics, source) {\n\t        var instances;\n\t        var self = {\n\t            data: { },\n\t            close: close\n\t        };\n\t\n\t        function handle_meta(msg) {\n\t            self.data = { };\n\t            instances = [ ];\n\t            for (var m = 0; m < msg.metrics.length; m++) {\n\t                instances[m] = msg.metrics[m].instances;\n\t                for (var i = 0; i < instances[m].length; i++)\n\t                    self.data[instances[m][i]] = [ ];\n\t            }\n\t        }\n\t\n\t        function handle_data(msg) {\n\t            var changed = false;\n\t            for (var s = 0; s < msg.length; s++) {\n\t                var metrics = msg[s];\n\t                for (var m = 0; m < metrics.length; m++) {\n\t                    var inst = metrics[m];\n\t                    for (var i = 0; i < inst.length; i++) {\n\t                        if (inst[i] !== null) {\n\t                            changed = true;\n\t                            self.data[instances[m][i]][m] = inst[i];\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t            if (changed)\n\t                $(self).triggerHandler('changed');\n\t        }\n\t\n\t        var channel = cockpit.channel({ payload: \"metrics1\",\n\t                                        source: source || \"internal\",\n\t                                        metrics: metrics\n\t                                      });\n\t        $(channel).on(\"closed\", function (event, error) {\n\t            console.log(\"closed\", error);\n\t        });\n\t        $(channel).on(\"message\", function (event, message) {\n\t            var msg = JSON.parse(message);\n\t            if (msg.length)\n\t                handle_data(msg);\n\t            else\n\t                handle_meta(msg);\n\t        });\n\t\n\t        function close() {\n\t            channel.close();\n\t        }\n\t\n\t        return self;\n\t    }\n\t\n\t    /* D-Bus proxies\n\t     */\n\t\n\t    var STORAGED_SERVICE;\n\t    var STORAGED_OPATH_PFX;\n\t    var STORAGED_IFACE_PFX;\n\t\n\t    client.time_offset = undefined;  /* Number of milliseconds that the server is ahead of us. */\n\t    client.features = undefined;\n\t\n\t    client.storaged_client = undefined;\n\t\n\t    function proxy(iface, path) {\n\t        return client.storaged_client.proxy(STORAGED_IFACE_PFX + \".\" + iface,\n\t                                            STORAGED_OPATH_PFX + \"/\" + path,\n\t                                            { watch: true });\n\t    }\n\t\n\t    function proxies(iface) {\n\t        /* We create the proxies here with 'watch' set to false and\n\t         * establish a general watch for all of them.  This is more\n\t         * efficient since it reduces the number of D-Bus calls done\n\t         * by the cache.\n\t         */\n\t        return client.storaged_client.proxies(STORAGED_IFACE_PFX + \".\" + iface,\n\t                                              STORAGED_OPATH_PFX,\n\t                                              { watch: false });\n\t    }\n\t\n\t    client.call = function call(path, iface, method, args, options) {\n\t        return client.storaged_client.call(path, STORAGED_IFACE_PFX + \".\" + iface, method, args, options);\n\t    };\n\t\n\t    function init_proxies () {\n\t        client.storaged_client.watch({ path_namespace: STORAGED_OPATH_PFX });\n\t\n\t        client.mdraids = proxies(\"MDRaid\");\n\t        client.vgroups = proxies(\"VolumeGroup\");\n\t        client.lvols = proxies(\"LogicalVolume\");\n\t        client.drives = proxies(\"Drive\");\n\t        client.drives_ata = proxies(\"Drive.Ata\");\n\t        client.blocks = proxies(\"Block\");\n\t        client.blocks_ptable = proxies(\"PartitionTable\");\n\t        client.blocks_part = proxies(\"Partition\");\n\t        client.blocks_lvm2 = proxies(\"Block.LVM2\");\n\t        client.blocks_pvol = proxies(\"PhysicalVolume\");\n\t        client.blocks_fsys = proxies(\"Filesystem\");\n\t        client.blocks_crypto = proxies(\"Encrypted\");\n\t        client.blocks_swap = proxies(\"Swapspace\");\n\t        client.iscsi_sessions = proxies(\"ISCSI.Session\");\n\t        client.jobs = proxies(\"Job\");\n\t    }\n\t\n\t    /* Monitors\n\t     */\n\t\n\t    client.fsys_sizes = instance_sampler([ { name: \"mount.used\" },\n\t                                           { name: \"mount.total\" }\n\t                                         ]);\n\t\n\t    client.swap_sizes = instance_sampler([ { name: \"swapdev.length\" },\n\t                                           { name: \"swapdev.free\" },\n\t                                         ], \"direct\");\n\t\n\t    client.blockdev_io = instance_sampler([ { name: \"block.device.read\", derive: \"rate\" },\n\t                                            { name: \"block.device.written\", derive: \"rate\" }\n\t                                          ]);\n\t\n\t    /* Derived indices.\n\t     */\n\t\n\t    function is_multipath_master(block) {\n\t        // The master has \"mpath\" in its device mapper UUID.  In the\n\t        // future, storaged will hopefully provide this information\n\t        // directly.\n\t        if (block.Symlinks && block.Symlinks.length) {\n\t            for (var i = 0; i < block.Symlinks.length; i++)\n\t                if (utils.decode_filename(block.Symlinks[i]).indexOf(\"/dev/disk/by-id/dm-uuid-mpath-\") === 0)\n\t                    return true;\n\t        }\n\t        return false;\n\t    }\n\t\n\t    function update_indices() {\n\t        var path, block, mdraid, vgroup, pvol, lvol, part, i;\n\t\n\t        client.broken_multipath_present = false;\n\t        client.drives_multipath_blocks = { };\n\t        client.drives_block = { };\n\t        for (path in client.drives) {\n\t            client.drives_multipath_blocks[path] = [ ];\n\t        }\n\t        for (path in client.blocks) {\n\t            block = client.blocks[path];\n\t            if (!client.blocks_part[path] && client.drives_multipath_blocks[block.Drive] !== undefined) {\n\t                if (is_multipath_master(block))\n\t                    client.drives_block[block.Drive] = block;\n\t                else\n\t                    client.drives_multipath_blocks[block.Drive].push(block);\n\t            }\n\t        }\n\t        for (path in client.drives_multipath_blocks) {\n\t            /* If there is no multipath master and only a single\n\t             * member, then this is actually a normal singlepath\n\t             * device.\n\t             */\n\t\n\t            if (!client.drives_block[path] && client.drives_multipath_blocks[path].length == 1) {\n\t                client.drives_block[path] = client.drives_multipath_blocks[path][0];\n\t                client.drives_multipath_blocks[path] = [ ];\n\t            } else {\n\t                client.drives_multipath_blocks[path].sort(utils.block_cmp);\n\t                if (!client.drives_block[path])\n\t                    client.broken_multipath_present = true;\n\t            }\n\t        }\n\t\n\t        client.mdraids_block = { };\n\t        for (path in client.blocks) {\n\t            block = client.blocks[path];\n\t            if (block.MDRaid != \"/\")\n\t                client.mdraids_block[block.MDRaid] = block;\n\t        }\n\t\n\t        client.mdraids_members = { };\n\t        for (path in client.mdraids) {\n\t            client.mdraids_members[path] = [ ];\n\t        }\n\t        for (path in client.blocks) {\n\t            block = client.blocks[path];\n\t            if (client.mdraids_members[block.MDRaidMember] !== undefined)\n\t                client.mdraids_members[block.MDRaidMember].push(block);\n\t        }\n\t        for (path in client.mdraids_members) {\n\t            client.mdraids_members[path].sort(utils.block_cmp);\n\t        }\n\t\n\t        client.slashdevs_block = { };\n\t        function enter_slashdev(block, enc) {\n\t            client.slashdevs_block[utils.decode_filename(enc).replace(/^\\/dev\\//, \"\")] = block;\n\t        }\n\t        for (path in client.blocks) {\n\t            block = client.blocks[path];\n\t            enter_slashdev(block, block.Device);\n\t            enter_slashdev(block, block.PreferredDevice);\n\t            for (i = 0; i < block.Symlinks.length; i++)\n\t                enter_slashdev(block, block.Symlinks[i]);\n\t        }\n\t\n\t        client.uuids_mdraid = { };\n\t        for (path in client.mdraids) {\n\t            mdraid = client.mdraids[path];\n\t            client.uuids_mdraid[mdraid.UUID] = mdraid;\n\t        }\n\t\n\t        client.vgnames_vgroup = { };\n\t        for (path in client.vgroups) {\n\t            vgroup = client.vgroups[path];\n\t            client.vgnames_vgroup[vgroup.Name] = vgroup;\n\t        }\n\t\n\t        client.vgroups_pvols = { };\n\t        for (path in client.vgroups) {\n\t            client.vgroups_pvols[path] = [ ];\n\t        }\n\t        for (path in client.blocks_pvol) {\n\t            pvol = client.blocks_pvol[path];\n\t            if (client.vgroups_pvols[pvol.VolumeGroup] !== undefined)\n\t                client.vgroups_pvols[pvol.VolumeGroup].push(pvol);\n\t        }\n\t        function cmp_pvols(a, b) {\n\t            return utils.block_cmp(client.blocks[a.path], client.blocks[b.path]);\n\t        }\n\t        for (path in client.vgroups_pvols) {\n\t            client.vgroups_pvols[path].sort(cmp_pvols);\n\t        }\n\t\n\t        client.vgroups_lvols = { };\n\t        for (path in client.vgroups) {\n\t            client.vgroups_lvols[path] = [ ];\n\t        }\n\t        for (path in client.lvols) {\n\t            lvol = client.lvols[path];\n\t            if (client.vgroups_lvols[lvol.VolumeGroup] !== undefined)\n\t                client.vgroups_lvols[lvol.VolumeGroup].push(lvol);\n\t        }\n\t        for (path in client.vgroups_lvols) {\n\t            client.vgroups_lvols[path].sort(function (a, b) { return a.Name.localeCompare(b.Name); });\n\t        }\n\t\n\t        client.lvols_block = { };\n\t        for (path in client.blocks_lvm2) {\n\t            client.lvols_block[client.blocks_lvm2[path].LogicalVolume] = client.blocks[path];\n\t        }\n\t\n\t        client.lvols_pool_members = { };\n\t        for (path in client.lvols) {\n\t            if (client.lvols[path].Type == \"pool\")\n\t                client.lvols_pool_members[path] = [ ];\n\t        }\n\t        for (path in client.lvols) {\n\t            lvol = client.lvols[path];\n\t            if (client.lvols_pool_members[lvol.ThinPool] !== undefined)\n\t                client.lvols_pool_members[lvol.ThinPool].push(lvol);\n\t        }\n\t        for (path in client.lvols_pool_members) {\n\t            client.lvols_pool_members[path].sort(function (a, b) { return a.Name.localeCompare(b.Name); });\n\t        }\n\t\n\t        client.blocks_cleartext = { };\n\t        for (path in client.blocks) {\n\t            block = client.blocks[path];\n\t            if (block.CryptoBackingDevice != \"/\")\n\t                client.blocks_cleartext[block.CryptoBackingDevice] = block;\n\t        }\n\t\n\t        client.blocks_partitions = { };\n\t        for (path in client.blocks_ptable) {\n\t            client.blocks_partitions[path] = [ ];\n\t        }\n\t        for (path in client.blocks_part) {\n\t            part = client.blocks_part[path];\n\t            if (client.blocks_partitions[part.Table] !== undefined)\n\t                client.blocks_partitions[part.Table].push(part);\n\t        }\n\t        for (path in client.blocks_partitions) {\n\t            client.blocks_partitions[path].sort(function (a, b) { return a.Offset - b.Offset; });\n\t        }\n\t\n\t        client.path_jobs = { };\n\t        function enter_job(job) {\n\t            job.Objects.forEach(function (path) {\n\t                client.path_jobs[path] = job;\n\t                var parent = utils.get_parent(client, path);\n\t                while (parent) {\n\t                    path = parent;\n\t                    parent = utils.get_parent(client, path);\n\t                }\n\t                client.path_jobs[path] = job;\n\t            });\n\t        }\n\t        for (path in client.jobs) {\n\t            enter_job(client.jobs[path]);\n\t        }\n\t    }\n\t\n\t    function init_model(callback) {\n\t\n\t        function wait_all(objects, callback) {\n\t            var obj = objects.pop();\n\t            if (obj) {\n\t                obj.wait(function () {\n\t                    wait_all(objects, callback);\n\t                });\n\t            } else {\n\t                callback();\n\t            }\n\t        }\n\t\n\t        function pull_time() {\n\t            return cockpit.spawn([\"date\", \"+%s\"])\n\t                .then(function (now) {\n\t                    client.time_offset = parseInt(now, 10) * 1000 - new Date().getTime();\n\t                });\n\t        }\n\t\n\t        function enable_features() {\n\t            if (!client.manager.valid)\n\t                return cockpit.resolve(false);\n\t            if (!client.manager.EnableModules)\n\t                return cockpit.resolve({ });\n\t            return client.manager.EnableModules(true).then(\n\t                function() {\n\t                    var defer = cockpit.defer();\n\t                    client.manager_lvm2 = proxy(\"Manager.LVM2\", \"Manager\");\n\t                    client.manager_iscsi = proxy(\"Manager.ISCSI.Initiator\", \"Manager\");\n\t                    wait_all([ client.manager_lvm2, client.manager_iscsi],\n\t                            function () {\n\t                                var iscsi = (hacks.with_storaged_iscsi_sessions != \"no\" &&\n\t                                        client.manager_iscsi.valid &&\n\t                                        client.manager_iscsi.SessionsSupported !== false);\n\t                                defer.resolve({ lvm2: client.manager_lvm2.valid, iscsi: iscsi });\n\t                            });\n\t                    return defer.promise;\n\t                }, function(error) {\n\t                    console.warn(\"Can't enable storaged modules\", error.toString());\n\t                    return cockpit.resolve({ });\n\t                });\n\t        }\n\t\n\t        wait_all([ client.manager,\n\t                   client.mdraids, client.vgroups, client.drives,\n\t                   client.blocks, client.blocks_ptable, client.blocks_lvm2, client.blocks_fsys\n\t                 ], function () {\n\t            pull_time().then(function() {\n\t                enable_features().then(function(features) {\n\t                    client.features = features;\n\t                    callback();\n\t                });\n\t\n\t                $(client.storaged_client).on('notify', function () {\n\t                    update_indices();\n\t                    client.dispatchEvent(\"changed\");\n\t                });\n\t                update_indices();\n\t            });\n\t        });\n\t    }\n\t\n\t    client.older_than = function older_than(version) {\n\t        return utils.compare_versions(this.manager.Version, version) < 0;\n\t    };\n\t\n\t    /* NFS mounts\n\t     */\n\t\n\t    function nfs_mounts() {\n\t        var self = {\n\t            entries: [ ],\n\t            fsys_sizes: { },\n\t\n\t            get_fsys_size: get_fsys_size,\n\t            entry_users: entry_users,\n\t\n\t            update_entry: update_entry,\n\t            add_entry: add_entry,\n\t            remove_entry: remove_entry,\n\t\n\t            mount_entry: mount_entry,\n\t            unmount_entry: unmount_entry,\n\t            stop_and_unmount_entry: stop_and_unmount_entry,\n\t            stop_and_remove_entry: stop_and_remove_entry\n\t        };\n\t\n\t        function spawn_nfs_mounts(args) {\n\t            return python.spawn([ inotify_py, nfs_mounts_py ], args, { superuser: \"try\", err: \"message\" });\n\t        }\n\t\n\t        var buf = \"\";\n\t        spawn_nfs_mounts([ \"monitor\" ])\n\t            .stream(function (output) {\n\t                var lines;\n\t\n\t                buf += output;\n\t                lines = buf.split(\"\\n\");\n\t                buf = lines[lines.length-1];\n\t                if (lines.length >= 2) {\n\t                    self.entries = JSON.parse(lines[lines.length-2]);\n\t                    self.fsys_sizes = { };\n\t                    $(self).triggerHandler('changed');\n\t                }\n\t            }).\n\t            fail(function (error) {\n\t                if (error != \"closed\") {\n\t                    console.warn(error);\n\t                }\n\t            });\n\t\n\t        function get_fsys_size(entry) {\n\t            var path = entry.fields[1];\n\t            if (self.fsys_sizes[path])\n\t                return self.fsys_sizes[path];\n\t\n\t            if (self.fsys_sizes[path] === false)\n\t                return null;\n\t\n\t            self.fsys_sizes[path] = false;\n\t            cockpit.spawn([ \"stat\", \"-f\", \"-c\", \"[ %S, %f, %b ]\", path ], { err: \"message\" })\n\t                .done(function (output) {\n\t                    var data = JSON.parse(output);\n\t                    self.fsys_sizes[path] = [ (data[2]-data[1])*data[0], data[2]*data[0] ];\n\t                    $(self).triggerHandler('changed');\n\t                })\n\t                .fail(function () {\n\t                    self.fsys_sizes[path] = [ 0, 0 ];\n\t                    $(self).triggerHandler('changed');\n\t                });\n\t\n\t            return null;\n\t        }\n\t\n\t        function update_entry(entry, new_fields) {\n\t            return spawn_nfs_mounts([ \"update\", JSON.stringify(entry), JSON.stringify(new_fields) ]);\n\t        }\n\t\n\t        function add_entry(fields) {\n\t            return spawn_nfs_mounts([ \"add\", JSON.stringify(fields) ]);\n\t        }\n\t\n\t        function remove_entry(entry) {\n\t            return spawn_nfs_mounts([ \"remove\", JSON.stringify(entry) ]);\n\t        }\n\t\n\t        function mount_entry(entry) {\n\t            return spawn_nfs_mounts([ \"mount\", JSON.stringify(entry) ]);\n\t        }\n\t\n\t        function unmount_entry(entry) {\n\t            return spawn_nfs_mounts([ \"unmount\", JSON.stringify(entry) ]);\n\t        }\n\t\n\t        function stop_and_unmount_entry(users, entry) {\n\t            var units = users.map(function (u) { return u.unit; });\n\t            return spawn_nfs_mounts([ \"stop-and-unmount\", JSON.stringify(units), JSON.stringify(entry) ]);\n\t        }\n\t\n\t        function stop_and_remove_entry(users, entry) {\n\t            var units = users.map(function (u) { return u.unit; });\n\t            return spawn_nfs_mounts([ \"stop-and-remove\", JSON.stringify(units), JSON.stringify(entry) ]);\n\t        }\n\t\n\t        function entry_users(entry) {\n\t            return spawn_nfs_mounts([ \"users\", JSON.stringify(entry) ]).then(JSON.parse);\n\t        }\n\t\n\t        return self;\n\t    }\n\t\n\t    client.nfs = nfs_mounts();\n\t\n\t    function init_manager() {\n\t        /* Storaged 2.6 and later uses the UDisks2 API names, but try the\n\t         * older storaged API first as a fallback.\n\t         */\n\t\n\t        var storaged_service = \"org.storaged.Storaged\";\n\t        var storaged_opath_pfx = \"/org/storaged/Storaged\";\n\t        var storaged_iface_pfx = \"org.storaged.Storaged\";\n\t\n\t        var storaged = cockpit.dbus(storaged_service);\n\t        var storaged_manager = storaged.proxy(storaged_iface_pfx + \".Manager\",\n\t                storaged_opath_pfx + \"/Manager\", { watch: true });\n\t\n\t        function fallback_udisks() {\n\t            STORAGED_SERVICE = \"org.freedesktop.UDisks2\";\n\t            STORAGED_OPATH_PFX = \"/org/freedesktop/UDisks2\";\n\t            STORAGED_IFACE_PFX = \"org.freedesktop.UDisks2\";\n\t\n\t            var udisks = cockpit.dbus(STORAGED_SERVICE);\n\t            var udisks_manager = udisks.proxy(STORAGED_IFACE_PFX + \".Manager\",\n\t                    STORAGED_OPATH_PFX + \"/Manager\", { watch: true });\n\t\n\t            return udisks_manager.wait().then(function () {\n\t                return udisks_manager;\n\t            });\n\t        }\n\t\n\t        return storaged_manager.wait().then(function() {\n\t            if (storaged_manager.valid) {\n\t                console.log(\"Using older 'storaged' API: \" + storaged_service);\n\t                STORAGED_SERVICE = storaged_service;\n\t                STORAGED_OPATH_PFX = storaged_opath_pfx;\n\t                STORAGED_IFACE_PFX = storaged_iface_pfx;\n\t                return storaged_manager;\n\t            } else {\n\t                return fallback_udisks();\n\t            }\n\t        }, fallback_udisks);\n\t    }\n\t\n\t    client.init = function init_storaged(callback) {\n\t        init_manager().then(function(manager) {\n\t            client.storaged_client = manager.client;\n\t            client.manager = manager;\n\t\n\t            // The first storaged version with the UDisks2 API names was 2.6\n\t            client.is_old_udisks2 = (STORAGED_SERVICE == \"org.freedesktop.UDisks2\" && client.older_than(\"2.6\"));\n\t            if (client.is_old_udisks2)\n\t                console.log(\"Using older 'udisks2' implementation: \" + manager.Version);\n\t\n\t            init_proxies();\n\t            init_model(callback);\n\t        }, function() {\n\t            client.features = false;\n\t            callback();\n\t        });\n\t    };\n\t\n\t    module.exports = client;\n\t}());\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2015 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(6);\n\t    var cockpit = __webpack_require__(7);\n\t\n\t    var mustache = __webpack_require__(10);\n\t    var service = __webpack_require__(12);\n\t\n\t    var _ = cockpit.gettext;\n\t    var C_ = cockpit.gettext;\n\t\n\t    /* UTILITIES\n\t     */\n\t\n\t    var utils = { };\n\t\n\t    utils.compare_versions = function compare_versions(a, b) {\n\t        function to_ints(str) {\n\t            return str.split(\".\").map(function (s) { return s ? parseInt(s, 10) : 0; });\n\t        }\n\t\n\t        var a_ints = to_ints(a);\n\t        var b_ints = to_ints(b);\n\t        var len = Math.min(a_ints.length, b_ints.length);\n\t        var i;\n\t\n\t        for (i = 0; i < len; i++) {\n\t            if (a_ints[i] == b_ints[i])\n\t                continue;\n\t            return a_ints[i] - b_ints[i];\n\t        }\n\t\n\t        return a_ints.length - b_ints.length;\n\t    };\n\t\n\t    utils.hostnamed = cockpit.dbus(\"org.freedesktop.hostname1\").proxy();\n\t\n\t    utils.array_find = function array_find(array, pred) {\n\t        for (var i = 0; i < array.length; i++)\n\t            if (pred(array[i]))\n\t                return array[i];\n\t        return undefined;\n\t    };\n\t\n\t    utils.flatten = function flatten(array_of_arrays) {\n\t        if (array_of_arrays.length > 0)\n\t            return Array.prototype.concat.apply([], array_of_arrays);\n\t        else\n\t            return [ ];\n\t    };\n\t\n\t    utils.decode_filename = function decode_filename(encoded) {\n\t        return cockpit.utf8_decoder().decode(cockpit.base64_decode(encoded).slice(0,-1));\n\t    };\n\t\n\t    utils.encode_filename = function encode_filename(decoded) {\n\t        return cockpit.base64_encode(cockpit.utf8_encoder().encode(decoded).concat([0]));\n\t    };\n\t\n\t    utils.fmt_size = function fmt_size(bytes) {\n\t        return cockpit.format_bytes(bytes, 1024);\n\t    };\n\t\n\t    utils.fmt_size_long = function fmt_size_long(bytes) {\n\t        var with_binary_unit = cockpit.format_bytes(bytes, 1024);\n\t        var with_decimal_unit = cockpit.format_bytes(bytes, 1000);\n\t        /* Translators: Used in \"...\" */\n\t        return with_binary_unit + \", \" + with_decimal_unit + \", \" + bytes + \" \" + C_(\"format-bytes\", \"bytes\");\n\t    };\n\t\n\t    utils.fmt_rate = function fmt_rate(bytes_per_sec) {\n\t        return cockpit.format_bytes_per_sec(bytes_per_sec, 1024);\n\t    };\n\t\n\t    utils.format_temperature = function format_temperature(kelvin) {\n\t        var celcius = kelvin - 273.15;\n\t        var fahrenheit = 9.0 * celcius / 5.0 + 32.0;\n\t        return celcius.toFixed(1) + \"° C / \" + fahrenheit.toFixed(1) + \"° F\";\n\t    };\n\t\n\t    utils.format_fsys_usage = function format_fsys_usage(used, total) {\n\t        var text = \"\";\n\t        var units = 1024;\n\t        var parts = cockpit.format_bytes(total, units, true);\n\t        text = \" / \" + parts.join(\" \");\n\t        units = parts[1];\n\t\n\t        parts = cockpit.format_bytes(used, units, true);\n\t        return parts[0] + text;\n\t    };\n\t\n\t    utils.format_delay = function format_delay(d) {\n\t        var seconds = Math.round(d/1000);\n\t        var minutes = Math.floor(seconds / 60);\n\t        var hours = Math.floor(minutes / 60);\n\t        seconds = seconds - minutes*60;\n\t        minutes = minutes - hours*60;\n\t\n\t        var s = seconds + \" seconds\";\n\t        if (minutes > 0)\n\t            s = minutes + \" minutes, \" + s;\n\t        if (hours > 0)\n\t            s = hours + \" hours, \" + s;\n\t        return s;\n\t    };\n\t\n\t    utils.format_size_and_text = function format_size_and_text(size, text) {\n\t        return cockpit.format(_(\"${size} ${desc}\"), { size: utils.fmt_size(size), desc: text});\n\t    };\n\t\n\t    utils.validate_lvm2_name = function validate_lvm2_name(name) {\n\t        if (name === \"\")\n\t            return _(\"Name cannot be empty.\");\n\t        if (name.length > 127)\n\t            return _(\"Name cannot be longer than 127 characters.\");\n\t        var m = name.match(/[^a-zA-Z0-9+._-]/);\n\t        if (m) {\n\t            if (m[0].search(/\\s+/) === -1)\n\t                return cockpit.format(_(\"Name cannot contain the character '$0'.\"), m[0]);\n\t            else\n\t                    return cockpit.format(_(\"Name cannot contain whitespace.\"), m[0]);\n\t        }\n\t    };\n\t\n\t    utils.block_name = function block_name(block) {\n\t        return utils.decode_filename(block.PreferredDevice);\n\t    };\n\t\n\t    utils.mdraid_name = function mdraid_name(mdraid) {\n\t        if (!mdraid.Name)\n\t            return \"\";\n\t\n\t        var parts = mdraid.Name.split(\":\");\n\t\n\t        if (parts.length != 2)\n\t            return mdraid.Name;\n\t\n\t        /* if we call hostnamed too early, before the dbus.proxy() promise is fulfilled,\n\t         * it will not be valid yet; it's too inconvenient to make this\n\t         * function asynchronous, so just don't show the host name in this case */\n\t        if (utils.hostnamed.StaticHostname === undefined || parts[0] == utils.hostnamed.StaticHostname)\n\t            return parts[1];\n\t        else\n\t            return cockpit.format(_(\"$name (from $host)\"),\n\t                                  { name: parts[1],\n\t                                    host: parts[0]\n\t                                  });\n\t    };\n\t\n\t    utils.lvol_name = function lvol_name(lvol) {\n\t        var type;\n\t        if (lvol.Type == \"pool\")\n\t            type = _(\"Pool for Thin Logical Volumes\");\n\t        else if (lvol.ThinPool != \"/\")\n\t            type =_(\"Thin Logical Volume\");\n\t        else if (lvol.Origin != \"/\")\n\t            type = _(\"Logical Volume (Snapshot)\");\n\t        else\n\t            type = _(\"Logical Volume\");\n\t        return mustache.render('{{Type}} \"{{Name}}\"', { Type: type, Name: lvol.Name });\n\t    };\n\t\n\t    utils.drive_name = function drive_name(drive) {\n\t        var name_parts = [ ];\n\t        if (drive.Vendor)\n\t            name_parts.push(drive.Vendor);\n\t        if (drive.Model)\n\t            name_parts.push(drive.Model);\n\t\n\t        var name = name_parts.join(\" \");\n\t        if (drive.Serial)\n\t            name += \" (\" + drive.Serial + \")\";\n\t        else if (drive.WWN)\n\t            name += \" (\" + drive.WWN + \")\";\n\t\n\t        return name;\n\t    };\n\t\n\t    utils.get_block_link_target = function get_block_link_target(client, path) {\n\t        var is_part, is_crypt, is_lvol;\n\t\n\t        while (true) {\n\t            if (client.blocks_part[path] && client.blocks_ptable[client.blocks_part[path].Table]) {\n\t                is_part = true;\n\t                path = client.blocks_part[path].Table;\n\t            } else if (client.blocks[path] && client.blocks[client.blocks[path].CryptoBackingDevice]) {\n\t                is_crypt = true;\n\t                path = client.blocks[path].CryptoBackingDevice;\n\t            } else\n\t                break;\n\t        }\n\t\n\t        if (client.blocks_lvm2[path] && client.lvols[client.blocks_lvm2[path].LogicalVolume])\n\t            is_lvol = true;\n\t\n\t        function fmt_part(link) {\n\t            // Partitions of logical volumes are shown as just logical volumes.\n\t            if (is_lvol && is_crypt)\n\t                return cockpit.format(_(\"<span>Encrypted Logical Volume of $0</span>\"), link);\n\t            else if (is_part && is_crypt)\n\t                return cockpit.format(_(\"<span>Encrypted Partition of $0</span>\"), link);\n\t            else if (is_lvol)\n\t                return cockpit.format(_(\"<span>Logical Volume of $0</span>\"), link);\n\t            else if (is_part)\n\t                return cockpit.format(_(\"<span>Partition of $0</span>\"), link);\n\t            else if (is_crypt)\n\t                return cockpit.format(_(\"<span>Encrypted $0</span>\"), link);\n\t            else\n\t                return link;\n\t        }\n\t\n\t        var block = client.blocks[path];\n\t        if (!block)\n\t            return;\n\t\n\t        var type, target, name;\n\t        if (client.mdraids[block.MDRaid]) {\n\t            type = \"mdraid\";\n\t            target = client.mdraids[block.MDRaid].UUID;\n\t            name = cockpit.format(_(\"RAID Device $0\"), utils.mdraid_name(client.mdraids[block.MDRaid]));\n\t        } else if (client.blocks_lvm2[path] &&\n\t                   client.lvols[client.blocks_lvm2[path].LogicalVolume] &&\n\t                   client.vgroups[client.lvols[client.blocks_lvm2[path].LogicalVolume].VolumeGroup]) {\n\t            type = \"vgroup\";\n\t            target = client.vgroups[client.lvols[client.blocks_lvm2[path].LogicalVolume].VolumeGroup].Name;\n\t            name = cockpit.format(_(\"Volume Group $0\"), target);\n\t        } else {\n\t            type = \"block\";\n\t            target = utils.block_name(block).replace(/^\\/dev\\//, \"\");\n\t            if (client.drives[block.Drive])\n\t                name = utils.drive_name(client.drives[block.Drive]);\n\t            else\n\t                name = utils.block_name(block);\n\t        }\n\t\n\t        return {\n\t            type: type,\n\t            target: target,\n\t            html: fmt_part(mustache.render('<a data-goto-{{type}}=\"{{target}}\">{{name}}</a>',\n\t                                           { type: type, target: target, name: name }))\n\t        };\n\t    };\n\t\n\t    utils.get_partitions = function get_partitions(client, block) {\n\t        var partitions = client.blocks_partitions[block.path];\n\t\n\t        function process_level(level, container_start, container_size) {\n\t            var n;\n\t            var last_end = container_start;\n\t            var total_end = container_start + container_size;\n\t            var block, start, size, is_container, is_contained;\n\t\n\t            var result = [ ];\n\t\n\t            function append_free_space(start, size) {\n\t                // There is a lot of rounding and aligning going on in\n\t                // the storage stack.  All of udisks2, libblockdev,\n\t                // and libparted seem to contribute their own ideas of\n\t                // where a partition really should start.\n\t                //\n\t                // The start of partitions are aggressively rounded\n\t                // up, sometimes twice, but the end is not aligned in\n\t                // the same way.  This means that a few megabytes of\n\t                // free space will show up between partitions.\n\t                //\n\t                // We hide these small free spaces because they are\n\t                // unexpected and can't be used for anything anyway.\n\t                //\n\t                // \"Small\" is anything less than 3 MiB, which seems to\n\t                // work okay.  (The worst case is probably creating\n\t                // the first logical partition inside a extended\n\t                // partition with udisks+libblockdev.  It leads to a 2\n\t                // MiB gap.)\n\t\n\t                if (size >= 3*1024*1024) {\n\t                    result.push({ type: 'free', start: start, size: size });\n\t                }\n\t            }\n\t\n\t            for (n = 0; n < partitions.length; n++) {\n\t                block = client.blocks[partitions[n].path];\n\t                start = partitions[n].Offset;\n\t                size = partitions[n].Size;\n\t                is_container = partitions[n].IsContainer;\n\t                is_contained = partitions[n].IsContained;\n\t\n\t                if (block === null)\n\t                    continue;\n\t\n\t                if (level === 0 && is_contained)\n\t                    continue;\n\t\n\t                if (level == 1 && !is_contained)\n\t                    continue;\n\t\n\t                if (start < container_start || start+size > container_start+container_size)\n\t                    continue;\n\t\n\t                append_free_space(last_end, start - last_end);\n\t                if (is_container) {\n\t                    result.push({ type: 'container', block: block, size: size,\n\t                                  partitions: process_level(level+1, start, size) });\n\t                } else {\n\t                    result.push({ type: 'block', block: block });\n\t                }\n\t                last_end = start + size;\n\t            }\n\t\n\t            append_free_space(last_end, total_end - last_end);\n\t\n\t            return result;\n\t        }\n\t\n\t        return process_level(0, 0, block.Size);\n\t    };\n\t\n\t    utils.get_available_spaces = function get_available_spaces(client) {\n\t        function is_free(path) {\n\t            var block = client.blocks[path];\n\t            var block_ptable = client.blocks_ptable[path];\n\t            var block_part = client.blocks_part[path];\n\t            var block_pvol = client.blocks_pvol[path];\n\t\n\t            function has_fs_label() {\n\t                if (!block.IdUsage)\n\t                    return false;\n\t                // Devices with a LVM2_member label need to actually be\n\t                // associated with a volume group.\n\t                if (block.IdType == 'LVM2_member' && (!block_pvol || !client.vgroups[block_pvol.VolumeGroup]))\n\t                    return false;\n\t                return true;\n\t            }\n\t\n\t            function is_mpath_member() {\n\t                if (!client.drives[block.Drive])\n\t                    return false;\n\t                if (!client.drives_block[block.Drive]) {\n\t                    // Broken multipath drive\n\t                    return true;\n\t                }\n\t                var members = client.drives_multipath_blocks[block.Drive];\n\t                for (var i = 0; i < members.length; i++) {\n\t                    if (members[i] == block)\n\t                        return true;\n\t                }\n\t                return false;\n\t            }\n\t\n\t            return (!block.HintIgnore &&\n\t                    block.Size > 0 &&\n\t                    !has_fs_label() &&\n\t                    !is_mpath_member() &&\n\t                    !block_ptable &&\n\t                    !(block_part && block_part.IsContainer));\n\t        }\n\t\n\t        function make(path) {\n\t            var block = client.blocks[path];\n\t            var link = utils.get_block_link_target(client, path);\n\t            var text = $('<div>').html(link.html).text();\n\t            return { type: 'block', block: block, size: block.Size, desc: text };\n\t        }\n\t\n\t        var spaces = Object.keys(client.blocks).filter(is_free).sort(utils.make_block_path_cmp(client)).map(make);\n\t\n\t        function add_free_spaces(block) {\n\t            var parts = utils.get_partitions(client, block);\n\t            var i, p, link, text;\n\t            for (i in parts) {\n\t                p = parts[i];\n\t                if (p.type == 'free') {\n\t                    link = utils.get_block_link_target(client, block.path);\n\t                    text = $('<div>').html(link.html).text();\n\t                    spaces.push({ type: 'free', block: block, start: p.start, size: p.size,\n\t                                  desc: cockpit.format(_(\"unpartitioned space on $0\"), text) });\n\t                }\n\t            }\n\t        }\n\t\n\t        for (var p in client.blocks_ptable)\n\t            add_free_spaces(client.blocks[p]);\n\t\n\t        return spaces;\n\t    };\n\t\n\t    utils.available_space_to_option = function available_space_to_option(spc) {\n\t        return {\n\t            value: spc,\n\t            Title: utils.format_size_and_text(spc.size, spc.desc),\n\t            Label: utils.block_name(spc.block)\n\t        };\n\t    };\n\t\n\t    utils.prepare_available_spaces = function prepare_available_spaces(client, spcs) {\n\t        function prepare(spc) {\n\t            if (spc.type == 'block')\n\t                return cockpit.resolve(spc.block.path);\n\t            else if (spc.type == 'free') {\n\t                var block_ptable = client.blocks_ptable[spc.block.path];\n\t                return block_ptable.CreatePartition(spc.start, spc.size, \"\", \"\", { });\n\t            }\n\t        }\n\t        return cockpit.all(spcs.map(prepare));\n\t    };\n\t\n\t    /* Comparison function for sorting lists of block devices.\n\t\n\t       We sort by major:minor numbers to get the expected order when\n\t       there are more than 10 devices of a kind.  For example, if you\n\t       have 20 loopback devices named loop0 to loop19, sorting them\n\t       alphabetically would put them in the wrong order\n\t\n\t           loop0, loop1, loop10, loop11, ..., loop2, ...\n\t\n\t       Sorting by major:minor is an easy way to do the right thing.\n\t    */\n\t\n\t    utils.block_cmp = function block_cmp(a, b) {\n\t        return a.DeviceNumber - b.DeviceNumber;\n\t    };\n\t\n\t    utils.make_block_path_cmp = function(client) {\n\t        return function(path_a, path_b) {\n\t            return utils.block_cmp(client.blocks[path_a], client.blocks[path_b]);\n\t        };\n\t    };\n\t\n\t    var multipathd_service;\n\t\n\t    utils.get_multipathd_service = function() {\n\t        if (!multipathd_service)\n\t            multipathd_service = service.proxy(\"multipathd\");\n\t        return multipathd_service;\n\t    };\n\t\n\t    utils.init_arming_zones = function init_arming_zones($top) {\n\t        $top.on('click', 'button.arm-button', function () {\n\t            var was_active = $(this).hasClass('active');\n\t            $(this).toggleClass('active', !was_active);\n\t            $(this).parents('.arming-zone').toggleClass('armed', !was_active);\n\t        });\n\t    };\n\t\n\t    utils.reset_arming_zone = function reset_arming_zone($btn) {\n\t        var $zone = $btn.parents('.arming-zone');\n\t        var $arm_btn = $zone.find('.arm-button');\n\t        $arm_btn.removeClass('active');\n\t        $zone.removeClass('armed');\n\t    };\n\t\n\t\n\t    utils.get_parent = function(client, path) {\n\t        if (client.blocks_part[path] && client.blocks[client.blocks_part[path].Table])\n\t            return client.blocks_part[path].Table;\n\t        if (client.blocks[path] && client.blocks[client.blocks[path].CryptoBackingDevice])\n\t            return client.blocks[path].CryptoBackingDevice;\n\t        if (client.blocks[path] && client.drives[client.blocks[path].Drive])\n\t            return client.blocks[path].Drive;\n\t        if (client.blocks[path] && client.mdraids[client.blocks[path].MDRaid])\n\t            return client.blocks[path].MDRaid;\n\t        if (client.blocks_lvm2[path] && client.lvols[client.blocks_lvm2[path].LogicalVolume])\n\t            return client.blocks_lvm2[path].LogicalVolume;\n\t        if (client.lvols[path] && client.vgroups[client.lvols[path].VolumeGroup])\n\t            return client.lvols[path].VolumeGroup;\n\t    };\n\t\n\t    function get_children(client, path) {\n\t        var children = [ ];\n\t\n\t        if (client.blocks_cleartext[path]) {\n\t            children.push(client.blocks_cleartext[path].path);\n\t        }\n\t\n\t        if (client.blocks_ptable[path]) {\n\t            client.blocks_partitions[path].forEach(function (part) {\n\t                if (!part.IsContainer)\n\t                    children.push(part.path);\n\t            });\n\t        }\n\t\n\t        if (client.blocks_part[path] && client.blocks_part[path].IsContainer) {\n\t            var ptable_path = client.blocks_part[path].Table;\n\t            client.blocks_partitions[ptable_path].forEach(function (part) {\n\t                if (part.IsContained)\n\t                    children.push(part.path);\n\t            });\n\t        }\n\t\n\t        if (client.vgroups[path]) {\n\t            client.vgroups_lvols[path].forEach(function (lvol) {\n\t                if (client.lvols_block[lvol.path])\n\t                    children.push(client.lvols_block[lvol.path].path);\n\t            });\n\t        }\n\t\n\t        return children;\n\t    }\n\t\n\t    utils.get_active_usage = function get_active_usage(client, path) {\n\t\n\t        function get_usage(path) {\n\t            var block = client.blocks[path];\n\t            var fsys = client.blocks_fsys[path];\n\t            var mdraid = block && client.mdraids[block.MDRaidMember];\n\t            var pvol = client.blocks_pvol[path];\n\t            var vgroup = pvol && client.vgroups[pvol.VolumeGroup];\n\t\n\t            var usage = utils.flatten(get_children(client, path).map(get_usage));\n\t\n\t            if (fsys && fsys.MountPoints.length > 0)\n\t                usage.push({ usage: 'mounted',\n\t                             block: block,\n\t                             fsys: fsys\n\t                           });\n\t\n\t            if (mdraid)\n\t                usage.push({ usage: 'mdraid-member',\n\t                             block: block,\n\t                             mdraid: mdraid\n\t                           });\n\t\n\t            if (vgroup)\n\t                usage.push({ usage: 'pvol',\n\t                             block: block,\n\t                             pvol: pvol,\n\t                             vgroup: vgroup\n\t                           });\n\t\n\t            return usage;\n\t        }\n\t\n\t        // Prepare the result for Mustache\n\t\n\t        var usage = get_usage(path);\n\t\n\t        var res = {\n\t            raw: usage,\n\t            Teardown: {\n\t                Mounts: [ ],\n\t                MDRaidMembers: [ ],\n\t                PhysicalVolumes: [ ]\n\t            },\n\t            Blocking: {\n\t                Mounts: [ ],\n\t                MDRaidMembers: [ ],\n\t                PhysicalVolumes: [ ]\n\t            }\n\t        };\n\t\n\t        usage.forEach(function (use) {\n\t            var entry, active_state;\n\t\n\t            if (use.usage == 'mounted') {\n\t                res.Teardown.Mounts.push({\n\t                    Name: utils.block_name(use.block),\n\t                    MountPoint: utils.decode_filename(use.fsys.MountPoints[0])\n\t                });\n\t            } else if (use.usage == 'mdraid-member') {\n\t                entry = {\n\t                    Name: utils.block_name(use.block),\n\t                    MDRaid: utils.mdraid_name(use.mdraid)\n\t                };\n\t                active_state = utils.array_find(use.mdraid.ActiveDevices, function (as) {\n\t                    return as[0] == use.block.path;\n\t                });\n\t                if (active_state && active_state[1] < 0)\n\t                    res.Teardown.MDRaidMembers.push(entry);\n\t                else\n\t                    res.Blocking.MDRaidMembers.push(entry);\n\t            } else if (use.usage == 'pvol') {\n\t                entry = {\n\t                    Name: utils.block_name(use.block),\n\t                    VGroup: use.vgroup.Name\n\t                };\n\t                if (use.pvol.FreeSize == use.pvol.Size) {\n\t                    res.Teardown.PhysicalVolumes.push(entry);\n\t                } else {\n\t                    res.Blocking.PhysicalVolumes.push(entry);\n\t                }\n\t            }\n\t        });\n\t\n\t        res.Teardown.HasMounts = res.Teardown.Mounts.length > 0;\n\t        res.Teardown.HasMDRaidMembers = res.Teardown.MDRaidMembers.length > 0;\n\t        res.Teardown.HasPhysicalVolumes = res.Teardown.PhysicalVolumes.length > 0;\n\t\n\t        res.Blocking.HasMounts = res.Blocking.Mounts.length > 0;\n\t        res.Blocking.HasMDRaidMembers = res.Blocking.MDRaidMembers.length > 0;\n\t        res.Blocking.HasPhysicalVolumes = res.Blocking.PhysicalVolumes.length > 0;\n\t\n\t        if (!res.Blocking.HasMounts && !res.Blocking.HasMDRaidMembers && !res.Blocking.HasPhysicalVolumes)\n\t            res.Blocking = null;\n\t\n\t        return res;\n\t    };\n\t\n\t    utils.teardown_active_usage = function teardown_active_usage(client, usage) {\n\t\n\t        // The code below is complicated by the fact that the last\n\t        // physical volume of a volume group can not be removed\n\t        // directly (even if it is completely empty).  We want to\n\t        // remove the whole volume group instead in this case.\n\t        //\n\t        // However, we might be removing the last two (or more)\n\t        // physical volumes here, and it is easiest to catch this\n\t        // condition upfront by reshuffling the data structures.\n\t\n\t        function unmount(mounteds) {\n\t            return cockpit.all(mounteds.map(function (m) {\n\t                return m.fsys.Unmount({});\n\t            }));\n\t        }\n\t\n\t        function mdraid_remove(members) {\n\t            return cockpit.all(members.map(function (m) {\n\t                return m.mdraid.RemoveDevice(m.block.path, { wipe: { t: 'b', v: true } });\n\t            }));\n\t        }\n\t\n\t        function pvol_remove(pvols) {\n\t            var by_vgroup = { }, p;\n\t            pvols.forEach(function (p) {\n\t                if (!by_vgroup[p.vgroup.path])\n\t                    by_vgroup[p.vgroup.path] = [ ];\n\t                by_vgroup[p.vgroup.path].push(p.block);\n\t            });\n\t\n\t            function handle_vg(p) {\n\t                var vg = client.vgroups[p];\n\t                var pvs = by_vgroup[p];\n\t                // If we would remove all physical volumes of a volume\n\t                // group, remove the whole volume group instead.\n\t                if (pvs.length == client.vgroups_pvols[p].length) {\n\t                    return vg.Delete({ 'tear-down': { t: 'b', v: true }\n\t                                     });\n\t                } else {\n\t                    return cockpit.all(pvs.map(function (pv) {\n\t                        return vg.RemoveDevice(pv.path, true, {});\n\t                    }));\n\t                }\n\t            }\n\t\n\t            for (p in by_vgroup)\n\t                handle_vg(p);\n\t        }\n\t\n\t        return cockpit.all([ unmount(usage.raw.filter(function(use) { return use.usage == \"mounted\"; })),\n\t                             mdraid_remove(usage.raw.filter(function(use) { return use.usage == \"mdraid-member\"; })),\n\t                             pvol_remove(usage.raw.filter(function(use) { return use.usage == \"pvol\"; }))\n\t                           ]);\n\t    };\n\t\n\t    /* jQuery.amend function. This will be removed as we move towards React */\n\t\n\t    function sync(output, input, depth) {\n\t        var na, nb, a, b, i;\n\t        var attrs, attr, seen;\n\t\n\t        if (depth > 0) {\n\t            if (output.nodeType != input.nodeType ||\n\t                output.nodeName != input.nodeName ||\n\t                (output.nodeType != 1 && output.nodeType != 3)) {\n\t                output.parentNode.replaceChild(input.parentNode.removeChild(input), output);\n\t                return;\n\t\n\t            } else if (output.nodeType == 3) {\n\t                if (output.nodeValue != input.nodeValue)\n\t                    output.nodeValue = input.nodeValue;\n\t                return;\n\t            }\n\t        }\n\t\n\t        if (output.nodeType == 1) {\n\t\n\t            /* Sync attributes */\n\t            if (depth > 0) {\n\t                seen = { };\n\t                attrs = output.attributes;\n\t                for (i = attrs.length - 1; i >= 0; i--)\n\t                    seen[attrs[i].name] = attrs[i].value;\n\t                for (i = input.attributes.length - 1; i >= 0; i--) {\n\t                    attr = input.attributes[i];\n\t                    if (seen[attr.name] !== attr.value)\n\t                        output.setAttribute(attr.name, attr.value);\n\t                    delete seen[attr.name];\n\t                }\n\t                for (i in seen)\n\t                    output.removeAttribute(i);\n\t            }\n\t\n\t            /* Sync children */\n\t            na = output.firstChild;\n\t            nb = input.firstChild;\n\t            for(;;) {\n\t                a = na;\n\t                b = nb;\n\t                while (a && a.nodeType != 1 && a.nodeType != 3)\n\t                    a = a.nextSibling;\n\t                while (b && b.nodeType != 1 && b.nodeType != 3)\n\t                    b = b.nextSibling;\n\t                if (!a && !b) {\n\t                    break;\n\t                } else if (!a) {\n\t                    na = null;\n\t                    nb = b.nextSibling;\n\t                    output.appendChild(input.removeChild(b));\n\t                } else if (!b) {\n\t                    na = a.nextSibling;\n\t                    nb = null;\n\t                    output.removeChild(a);\n\t                } else {\n\t                    na = a.nextSibling;\n\t                    nb = b.nextSibling;\n\t                    sync(a, b, (depth || 0) + 1);\n\t                }\n\t            }\n\t        }\n\t    }\n\t\n\t    $.fn.amend = function amend(data, options) {\n\t        this.each(function() {\n\t            var el = $(\"<div>\").html(data);\n\t            sync(this, el[0], 0);\n\t        });\n\t        return this;\n\t    };\n\t\n\t    /* Prevent flicker due to the marriage of jQuery and React here */\n\t    utils.hide = function hide(selector) {\n\t        var element = document.querySelector(\"#storage-detail\");\n\t        element.setAttribute(\"hidden\", \"\");\n\t    };\n\t\n\t    utils.show_soon = function show_soon(selector, ready) {\n\t        var element = document.querySelector(selector);\n\t        if (!element.hasAttribute(\"hidden\"))\n\t            return;\n\t        var val = element.getAttribute(\"hidden\");\n\t        if (ready) {\n\t            element.removeAttribute(\"hidden\");\n\t            window.clearTimeout(parseInt(val, 10));\n\t        } else if (!val) {\n\t            val = window.setTimeout(function() {\n\t                show_soon(selector, true);\n\t            }, 2000);\n\t            element.setAttribute(\"hidden\", String(val));\n\t        }\n\t    };\n\t\n\t    module.exports = utils;\n\t}());\n\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\tvar cockpit = __webpack_require__(7);\n\tvar mustache = __webpack_require__(11);\n\t\n\t/*\n\t * Turns a mustache template into a translated mustache template\n\t * by preparsing it and translating it.\n\t */\n\tvar cache = { };\n\t\n\tfunction translate(template) {\n\t    if (template in cache)\n\t        return cache[template];\n\t    var div = document.createElement(\"div\");\n\t    div.innerHTML = template;\n\t    cockpit.translate(div);\n\t    var result = div.innerHTML;\n\t    cache[template] = result;\n\t    return result;\n\t}\n\t\n\t/* Just like the mustache object, except for translated */\n\tmodule.exports = cockpit.extend({ }, mustache, {\n\t    render: function render(template, view, partials) {\n\t        return translate(mustache.render(template, view, partials));\n\t    },\n\t    to_html: function to_html(template, view, partials, send) {\n\t        return translate(mustache.to_html(template, view, partials, send));\n\t    },\n\t    clearCache: function clearCache() {\n\t        cache = { };\n\t        return mustache.clearCache();\n\t    }\n\t});\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n\t * mustache.js - Logic-less {{mustache}} templates with JavaScript\n\t * http://github.com/janl/mustache.js\n\t */\n\t\n\t/*global define: false*/\n\t\n\t(function (root, factory) {\n\t  if (typeof exports === \"object\" && exports) {\n\t    factory(exports); // CommonJS\n\t  } else {\n\t    var mustache = {};\n\t    factory(mustache);\n\t    if (true) {\n\t      !(__WEBPACK_AMD_DEFINE_FACTORY__ = (mustache), __WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ? (__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) : __WEBPACK_AMD_DEFINE_FACTORY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)); // AMD\n\t    } else {\n\t      root.Mustache = mustache; // <script>\n\t    }\n\t  }\n\t}(this, function (mustache) {\n\t\n\t  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n\t  // See https://github.com/janl/mustache.js/issues/189\n\t  var RegExp_test = RegExp.prototype.test;\n\t  function testRegExp(re, string) {\n\t    return RegExp_test.call(re, string);\n\t  }\n\t\n\t  var nonSpaceRe = /\\S/;\n\t  function isWhitespace(string) {\n\t    return !testRegExp(nonSpaceRe, string);\n\t  }\n\t\n\t  var Object_toString = Object.prototype.toString;\n\t  var isArray = Array.isArray || function (object) {\n\t    return Object_toString.call(object) === '[object Array]';\n\t  };\n\t\n\t  function isFunction(object) {\n\t    return typeof object === 'function';\n\t  }\n\t\n\t  function escapeRegExp(string) {\n\t    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n\t  }\n\t\n\t  var entityMap = {\n\t    \"&\": \"&amp;\",\n\t    \"<\": \"&lt;\",\n\t    \">\": \"&gt;\",\n\t    '\"': '&quot;',\n\t    \"'\": '&#39;',\n\t    \"/\": '&#x2F;'\n\t  };\n\t\n\t  function escapeHtml(string) {\n\t    return String(string).replace(/[&<>\"'\\/]/g, function (s) {\n\t      return entityMap[s];\n\t    });\n\t  }\n\t\n\t  function escapeTags(tags) {\n\t    if (!isArray(tags) || tags.length !== 2) {\n\t      throw new Error('Invalid tags: ' + tags);\n\t    }\n\t\n\t    return [\n\t      new RegExp(escapeRegExp(tags[0]) + \"\\\\s*\"),\n\t      new RegExp(\"\\\\s*\" + escapeRegExp(tags[1]))\n\t    ];\n\t  }\n\t\n\t  var whiteRe = /\\s*/;\n\t  var spaceRe = /\\s+/;\n\t  var equalsRe = /\\s*=/;\n\t  var curlyRe = /\\s*\\}/;\n\t  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\t\n\t  /**\n\t   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n\t   * argument is given here it must be an array with two string values: the\n\t   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n\t   * course, the default is to use mustaches (i.e. mustache.tags).\n\t   *\n\t   * A token is an array with at least 4 elements. The first element is the\n\t   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n\t   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n\t   * all text that appears outside a symbol this element is \"text\".\n\t   *\n\t   * The second element of a token is its \"value\". For mustache tags this is\n\t   * whatever else was inside the tag besides the opening symbol. For text tokens\n\t   * this is the text itself.\n\t   *\n\t   * The third and fourth elements of the token are the start and end indices,\n\t   * respectively, of the token in the original template.\n\t   *\n\t   * Tokens that are the root node of a subtree contain two more elements: 1) an\n\t   * array of tokens in the subtree and 2) the index in the original template at\n\t   * which the closing tag for that section begins.\n\t   */\n\t  function parseTemplate(template, tags) {\n\t    tags = tags || mustache.tags;\n\t    template = template || '';\n\t\n\t    if (typeof tags === 'string') {\n\t      tags = tags.split(spaceRe);\n\t    }\n\t\n\t    var tagRes = escapeTags(tags);\n\t    var scanner = new Scanner(template);\n\t\n\t    var sections = [];     // Stack to hold section tokens\n\t    var tokens = [];       // Buffer to hold the tokens\n\t    var spaces = [];       // Indices of whitespace tokens on the current line\n\t    var hasTag = false;    // Is there a {{tag}} on the current line?\n\t    var nonSpace = false;  // Is there a non-space char on the current line?\n\t\n\t    // Strips all whitespace tokens array for the current line\n\t    // if there was a {{#tag}} on it and otherwise only space.\n\t    function stripSpace() {\n\t      if (hasTag && !nonSpace) {\n\t        while (spaces.length) {\n\t          delete tokens[spaces.pop()];\n\t        }\n\t      } else {\n\t        spaces = [];\n\t      }\n\t\n\t      hasTag = false;\n\t      nonSpace = false;\n\t    }\n\t\n\t    var start, type, value, chr, token, openSection;\n\t    while (!scanner.eos()) {\n\t      start = scanner.pos;\n\t\n\t      // Match any text between tags.\n\t      value = scanner.scanUntil(tagRes[0]);\n\t      if (value) {\n\t        for (var i = 0, len = value.length; i < len; ++i) {\n\t          chr = value.charAt(i);\n\t\n\t          if (isWhitespace(chr)) {\n\t            spaces.push(tokens.length);\n\t          } else {\n\t            nonSpace = true;\n\t          }\n\t\n\t          tokens.push(['text', chr, start, start + 1]);\n\t          start += 1;\n\t\n\t          // Check for whitespace on the current line.\n\t          if (chr === '\\n') {\n\t            stripSpace();\n\t          }\n\t        }\n\t      }\n\t\n\t      // Match the opening tag.\n\t      if (!scanner.scan(tagRes[0])) break;\n\t      hasTag = true;\n\t\n\t      // Get the tag type.\n\t      type = scanner.scan(tagRe) || 'name';\n\t      scanner.scan(whiteRe);\n\t\n\t      // Get the tag value.\n\t      if (type === '=') {\n\t        value = scanner.scanUntil(equalsRe);\n\t        scanner.scan(equalsRe);\n\t        scanner.scanUntil(tagRes[1]);\n\t      } else if (type === '{') {\n\t        value = scanner.scanUntil(new RegExp('\\\\s*' + escapeRegExp('}' + tags[1])));\n\t        scanner.scan(curlyRe);\n\t        scanner.scanUntil(tagRes[1]);\n\t        type = '&';\n\t      } else {\n\t        value = scanner.scanUntil(tagRes[1]);\n\t      }\n\t\n\t      // Match the closing tag.\n\t      if (!scanner.scan(tagRes[1])) {\n\t        throw new Error('Unclosed tag at ' + scanner.pos);\n\t      }\n\t\n\t      token = [ type, value, start, scanner.pos ];\n\t      tokens.push(token);\n\t\n\t      if (type === '#' || type === '^') {\n\t        sections.push(token);\n\t      } else if (type === '/') {\n\t        // Check section nesting.\n\t        openSection = sections.pop();\n\t\n\t        if (!openSection) {\n\t          throw new Error('Unopened section \"' + value + '\" at ' + start);\n\t        }\n\t        if (openSection[1] !== value) {\n\t          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n\t        }\n\t      } else if (type === 'name' || type === '{' || type === '&') {\n\t        nonSpace = true;\n\t      } else if (type === '=') {\n\t        // Set the tags for the next time around.\n\t        tagRes = escapeTags(tags = value.split(spaceRe));\n\t      }\n\t    }\n\t\n\t    // Make sure there are no open sections when we're done.\n\t    openSection = sections.pop();\n\t    if (openSection) {\n\t      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n\t    }\n\t\n\t    return nestTokens(squashTokens(tokens));\n\t  }\n\t\n\t  /**\n\t   * Combines the values of consecutive text tokens in the given `tokens` array\n\t   * to a single token.\n\t   */\n\t  function squashTokens(tokens) {\n\t    var squashedTokens = [];\n\t\n\t    var token, lastToken;\n\t    for (var i = 0, len = tokens.length; i < len; ++i) {\n\t      token = tokens[i];\n\t\n\t      if (token) {\n\t        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n\t          lastToken[1] += token[1];\n\t          lastToken[3] = token[3];\n\t        } else {\n\t          squashedTokens.push(token);\n\t          lastToken = token;\n\t        }\n\t      }\n\t    }\n\t\n\t    return squashedTokens;\n\t  }\n\t\n\t  /**\n\t   * Forms the given array of `tokens` into a nested tree structure where\n\t   * tokens that represent a section have two additional items: 1) an array of\n\t   * all tokens that appear in that section and 2) the index in the original\n\t   * template that represents the end of that section.\n\t   */\n\t  function nestTokens(tokens) {\n\t    var nestedTokens = [];\n\t    var collector = nestedTokens;\n\t    var sections = [];\n\t\n\t    var token, section;\n\t    for (var i = 0, len = tokens.length; i < len; ++i) {\n\t      token = tokens[i];\n\t\n\t      switch (token[0]) {\n\t      case '#':\n\t      case '^':\n\t        collector.push(token);\n\t        sections.push(token);\n\t        collector = token[4] = [];\n\t        break;\n\t      case '/':\n\t        section = sections.pop();\n\t        section[5] = token[2];\n\t        collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n\t        break;\n\t      default:\n\t        collector.push(token);\n\t      }\n\t    }\n\t\n\t    return nestedTokens;\n\t  }\n\t\n\t  /**\n\t   * A simple string scanner that is used by the template parser to find\n\t   * tokens in template strings.\n\t   */\n\t  function Scanner(string) {\n\t    this.string = string;\n\t    this.tail = string;\n\t    this.pos = 0;\n\t  }\n\t\n\t  /**\n\t   * Returns `true` if the tail is empty (end of string).\n\t   */\n\t  Scanner.prototype.eos = function () {\n\t    return this.tail === \"\";\n\t  };\n\t\n\t  /**\n\t   * Tries to match the given regular expression at the current position.\n\t   * Returns the matched text if it can match, the empty string otherwise.\n\t   */\n\t  Scanner.prototype.scan = function (re) {\n\t    var match = this.tail.match(re);\n\t\n\t    if (match && match.index === 0) {\n\t      var string = match[0];\n\t      this.tail = this.tail.substring(string.length);\n\t      this.pos += string.length;\n\t      return string;\n\t    }\n\t\n\t    return \"\";\n\t  };\n\t\n\t  /**\n\t   * Skips all text until the given regular expression can be matched. Returns\n\t   * the skipped string, which is the entire tail if no match can be made.\n\t   */\n\t  Scanner.prototype.scanUntil = function (re) {\n\t    var index = this.tail.search(re), match;\n\t\n\t    switch (index) {\n\t    case -1:\n\t      match = this.tail;\n\t      this.tail = \"\";\n\t      break;\n\t    case 0:\n\t      match = \"\";\n\t      break;\n\t    default:\n\t      match = this.tail.substring(0, index);\n\t      this.tail = this.tail.substring(index);\n\t    }\n\t\n\t    this.pos += match.length;\n\t\n\t    return match;\n\t  };\n\t\n\t  /**\n\t   * Represents a rendering context by wrapping a view object and\n\t   * maintaining a reference to the parent context.\n\t   */\n\t  function Context(view, parentContext) {\n\t    this.view = view == null ? {} : view;\n\t    this.cache = { '.': this.view };\n\t    this.parent = parentContext;\n\t  }\n\t\n\t  /**\n\t   * Creates a new context using the given view with this context\n\t   * as the parent.\n\t   */\n\t  Context.prototype.push = function (view) {\n\t    return new Context(view, this);\n\t  };\n\t\n\t  /**\n\t   * Returns the value of the given name in this context, traversing\n\t   * up the context hierarchy if the value is absent in this context's view.\n\t   */\n\t  Context.prototype.lookup = function (name) {\n\t    var value;\n\t    if (name in this.cache) {\n\t      value = this.cache[name];\n\t    } else {\n\t      var context = this;\n\t\n\t      while (context) {\n\t        if (name.indexOf('.') > 0) {\n\t          value = context.view;\n\t\n\t          var names = name.split('.'), i = 0;\n\t          while (value != null && i < names.length) {\n\t            value = value[names[i++]];\n\t          }\n\t        } else {\n\t          value = context.view[name];\n\t        }\n\t\n\t        if (value != null) break;\n\t\n\t        context = context.parent;\n\t      }\n\t\n\t      this.cache[name] = value;\n\t    }\n\t\n\t    if (isFunction(value)) {\n\t      value = value.call(this.view);\n\t    }\n\t\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * A Writer knows how to take a stream of tokens and render them to a\n\t   * string, given a context. It also maintains a cache of templates to\n\t   * avoid the need to parse the same template twice.\n\t   */\n\t  function Writer() {\n\t    this.cache = {};\n\t  }\n\t\n\t  /**\n\t   * Clears all cached templates in this writer.\n\t   */\n\t  Writer.prototype.clearCache = function () {\n\t    this.cache = {};\n\t  };\n\t\n\t  /**\n\t   * Parses and caches the given `template` and returns the array of tokens\n\t   * that is generated from the parse.\n\t   */\n\t  Writer.prototype.parse = function (template, tags) {\n\t    var cache = this.cache;\n\t    var tokens = cache[template];\n\t\n\t    if (tokens == null) {\n\t      tokens = cache[template] = parseTemplate(template, tags);\n\t    }\n\t\n\t    return tokens;\n\t  };\n\t\n\t  /**\n\t   * High-level method that is used to render the given `template` with\n\t   * the given `view`.\n\t   *\n\t   * The optional `partials` argument may be an object that contains the\n\t   * names and templates of partials that are used in the template. It may\n\t   * also be a function that is used to load partial templates on the fly\n\t   * that takes a single argument: the name of the partial.\n\t   */\n\t  Writer.prototype.render = function (template, view, partials) {\n\t    var tokens = this.parse(template);\n\t    var context = (view instanceof Context) ? view : new Context(view);\n\t    return this.renderTokens(tokens, context, partials, template);\n\t  };\n\t\n\t  /**\n\t   * Low-level method that renders the given array of `tokens` using\n\t   * the given `context` and `partials`.\n\t   *\n\t   * Note: The `originalTemplate` is only ever used to extract the portion\n\t   * of the original template that was contained in a higher-order section.\n\t   * If the template doesn't use higher-order sections, this argument may\n\t   * be omitted.\n\t   */\n\t  Writer.prototype.renderTokens = function (tokens, context, partials, originalTemplate) {\n\t    var buffer = '';\n\t\n\t    // This function is used to render an arbitrary template\n\t    // in the current context by higher-order sections.\n\t    var self = this;\n\t    function subRender(template) {\n\t      return self.render(template, context, partials);\n\t    }\n\t\n\t    var token, value;\n\t    for (var i = 0, len = tokens.length; i < len; ++i) {\n\t      token = tokens[i];\n\t\n\t      switch (token[0]) {\n\t      case '#':\n\t        value = context.lookup(token[1]);\n\t        if (!value) continue;\n\t\n\t        if (isArray(value)) {\n\t          for (var j = 0, jlen = value.length; j < jlen; ++j) {\n\t            buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n\t          }\n\t        } else if (typeof value === 'object' || typeof value === 'string') {\n\t          buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n\t        } else if (isFunction(value)) {\n\t          if (typeof originalTemplate !== 'string') {\n\t            throw new Error('Cannot use higher-order sections without the original template');\n\t          }\n\t\n\t          // Extract the portion of the original template that the section contains.\n\t          value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\t\n\t          if (value != null) buffer += value;\n\t        } else {\n\t          buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n\t        }\n\t\n\t        break;\n\t      case '^':\n\t        value = context.lookup(token[1]);\n\t\n\t        // Use JavaScript's definition of falsy. Include empty arrays.\n\t        // See https://github.com/janl/mustache.js/issues/186\n\t        if (!value || (isArray(value) && value.length === 0)) {\n\t          buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n\t        }\n\t\n\t        break;\n\t      case '>':\n\t        if (!partials) continue;\n\t        value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n\t        if (value != null) buffer += this.renderTokens(this.parse(value), context, partials, value);\n\t        break;\n\t      case '&':\n\t        value = context.lookup(token[1]);\n\t        if (value != null) buffer += value;\n\t        break;\n\t      case 'name':\n\t        value = context.lookup(token[1]);\n\t        if (value != null) buffer += mustache.escape(value);\n\t        break;\n\t      case 'text':\n\t        buffer += token[1];\n\t        break;\n\t      }\n\t    }\n\t\n\t    return buffer;\n\t  };\n\t\n\t  mustache.name = \"mustache.js\";\n\t  mustache.version = \"0.8.1\";\n\t  mustache.tags = [ \"{{\", \"}}\" ];\n\t\n\t  // All high-level mustache.* functions use this writer.\n\t  var defaultWriter = new Writer();\n\t\n\t  /**\n\t   * Clears all cached templates in the default writer.\n\t   */\n\t  mustache.clearCache = function () {\n\t    return defaultWriter.clearCache();\n\t  };\n\t\n\t  /**\n\t   * Parses and caches the given template in the default writer and returns the\n\t   * array of tokens it contains. Doing this ahead of time avoids the need to\n\t   * parse templates on the fly as they are rendered.\n\t   */\n\t  mustache.parse = function (template, tags) {\n\t    return defaultWriter.parse(template, tags);\n\t  };\n\t\n\t  /**\n\t   * Renders the `template` with the given `view` and `partials` using the\n\t   * default writer.\n\t   */\n\t  mustache.render = function (template, view, partials) {\n\t    return defaultWriter.render(template, view, partials);\n\t  };\n\t\n\t  // This is here for backwards compatibility with 0.4.x.\n\t  mustache.to_html = function (template, view, partials, send) {\n\t    var result = mustache.render(template, view, partials);\n\t\n\t    if (isFunction(send)) {\n\t      send(result);\n\t    } else {\n\t      return result;\n\t    }\n\t  };\n\t\n\t  // Export the escaping function so that the user may override it.\n\t  // See https://github.com/janl/mustache.js/issues/244\n\t  mustache.escape = escapeHtml;\n\t\n\t  // Export these mainly for testing, but also for advanced usage.\n\t  mustache.Scanner = Scanner;\n\t  mustache.Context = Context;\n\t  mustache.Writer = Writer;\n\t\n\t}));\n\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var cockpit = __webpack_require__(7);\n\t\n\t    /* SERVICE MANAGEMENT API\n\t     *\n\t     * The \"service\" module lets you monitor and manage a\n\t     * system service on localhost in a simple way.\n\t     *\n\t     * It mainly exists because talking to the systemd D-Bus API is\n\t     * not trivial enough to do it directly.\n\t     *\n\t     * - proxy = service.proxy(name)\n\t     *\n\t     * Create a proxy that represents the service named NAME.\n\t     *\n\t     * The proxy has properties and methods (described below) that\n\t     * allow you to monitor the state of the service, and perform\n\t     * simple actions on it.\n\t     *\n\t     * Initially, any of the properties can be \"null\" until their\n\t     * actual values have been retrieved in the background.\n\t     *\n\t     * - $(proxy).on('changed', function (event) { ... })\n\t     *\n\t     * The 'changed' event is emitted whenever one of the properties\n\t     * of the proxy changes.\n\t     *\n\t     * - proxy.exists\n\t     *\n\t     * A boolean that tells whether the service is known or not.  A\n\t     * proxy with 'exists == false' will have 'state == undefined' and\n\t     * 'enabled == undefined'.\n\t     *\n\t     * - proxy.state\n\t     *\n\t     * Either 'undefined' when the state can't be retrieved, or a\n\t     * string that has one of the values \"starting\", \"running\",\n\t     * \"stopping\", \"stopped\", or \"failed\".\n\t     *\n\t     * - proxy.enabled\n\t     *\n\t     * Either 'undefined' when the value can't be retrieved, or a\n\t     * boolean that tells whether the service is started 'enabled'.\n\t     * What it means exactly for a service to be enabled depends on\n\t     * the service, but a enabled service is usually started on boot,\n\t     * no matter wether other services need it or not.  A disabled\n\t     * service is usually only started when it is needed by some other\n\t     * service.\n\t     *\n\t     * - proxy.unit\n\t     * - proxy.service\n\t     *\n\t     * The raw org.freedesktop.systemd1.Unit and Service D-Bus\n\t     * interface proxies for the service.\n\t     *\n\t     * - promise = proxy.start()\n\t     *\n\t     * Start the service.  The return value is a standard jQuery\n\t     * promise as returned from DBusClient.call.\n\t     *\n\t     * - promise =  proxy.restart()\n\t     *\n\t     * Restart the service.\n\t     *\n\t     * - promise = proxy.tryRestart()\n\t     * \n\t     * Try to restart the service if it's running or starting\n\t     *\n\t     * - promise = proxy.stop()\n\t     *\n\t     * Stop the service.\n\t     *\n\t     * - promise = proxy.enable()\n\t     *\n\t     * Enable the service.\n\t     *\n\t     * - promise = proxy.disable()\n\t     *\n\t     * Disable the service.\n\t     */\n\t\n\t    var systemd_client;\n\t    var systemd_manager;\n\t\n\t    function wait_valid(proxy, callback) {\n\t        proxy.wait(function() {\n\t            if (proxy.valid)\n\t                callback();\n\t        });\n\t    }\n\t\n\t    function with_systemd_manager(done) {\n\t        if (!systemd_manager) {\n\t            systemd_client = cockpit.dbus(\"org.freedesktop.systemd1\", { superuser: \"try\" });\n\t            systemd_manager = systemd_client.proxy(\"org.freedesktop.systemd1.Manager\",\n\t                                                   \"/org/freedesktop/systemd1\");\n\t            wait_valid(systemd_manager, function() {\n\t                systemd_manager.Subscribe().\n\t                    fail(function (error) {\n\t                        if (error.name != \"org.freedesktop.systemd1.AlreadySubscribed\" &&\n\t                            error.name != \"org.freedesktop.DBus.Error.FileExists\")\n\t                            console.warn(\"Subscribing to systemd signals failed\", error);\n\t                    });\n\t            });\n\t        }\n\t        wait_valid(systemd_manager, done);\n\t    }\n\t\n\t    function proxy(name) {\n\t        var self = {\n\t            exists: null,\n\t            state: null,\n\t            enabled: null,\n\t\n\t            wait: wait,\n\t\n\t            start: start,\n\t            stop: stop,\n\t            restart: restart,\n\t            tryRestart: tryRestart,\n\t\n\t            enable: enable,\n\t            disable: disable\n\t        };\n\t\n\t        cockpit.event_target(self);\n\t\n\t        var unit, service;\n\t        var wait_callbacks = cockpit.defer();\n\t\n\t        if (name.indexOf(\".\") == -1)\n\t            name = name + \".service\";\n\t\n\t        function update_from_unit() {\n\t            self.exists = (unit.LoadState != \"not-found\" || unit.ActiveState != \"inactive\");\n\t\n\t            if (unit.ActiveState == \"activating\")\n\t                self.state = \"starting\";\n\t            else if (unit.ActiveState == \"deactivating\")\n\t                self.state = \"stopping\";\n\t            else if (unit.ActiveState == \"active\" || unit.ActiveState == \"reloading\")\n\t                self.state = \"running\";\n\t            else if (unit.ActiveState == \"failed\")\n\t                self.state = \"failed\";\n\t            else if (unit.ActiveState == \"inactive\" && self.exists)\n\t                self.state = \"stopped\";\n\t            else\n\t                self.state = undefined;\n\t\n\t            if (unit.UnitFileState == \"enabled\" || unit.UnitFileState == \"linked\")\n\t                self.enabled = true;\n\t            else if (unit.UnitFileState == \"disabled\" || unit.UnitFileState == \"masked\")\n\t                self.enabled = false;\n\t            else\n\t                self.enabled = undefined;\n\t\n\t            self.unit = unit;\n\t\n\t            self.dispatchEvent(\"changed\");\n\t            wait_callbacks.resolve();\n\t        }\n\t\n\t        function update_from_service() {\n\t            self.service = service;\n\t            self.dispatchEvent(\"changed\");\n\t        }\n\t\n\t        with_systemd_manager(function () {\n\t            systemd_manager.LoadUnit(name).\n\t                done(function (path) {\n\t                    unit = systemd_client.proxy('org.freedesktop.systemd1.Unit', path);\n\t                    unit.addEventListener('changed', update_from_unit);\n\t                    wait_valid(unit, update_from_unit);\n\t\n\t                    service = systemd_client.proxy('org.freedesktop.systemd1.Service', path);\n\t                    service.addEventListener('changed', update_from_service);\n\t                    wait_valid(service, update_from_service);\n\t                }).\n\t                fail(function (error) {\n\t                    self.exists = false;\n\t                    self.dispatchEvent('changed');\n\t                });\n\t        });\n\t\n\t        function refresh() {\n\t            if (!unit || !service)\n\t                return;\n\t\n\t            function refresh_interface(path, iface) {\n\t                systemd_client.call(path,\n\t                                    \"org.freedesktop.DBus.Properties\", \"GetAll\", [ iface ]).\n\t                    fail(function (error) {\n\t                        console.log(error);\n\t                    }).\n\t                    done(function (result) {\n\t                        var props = { };\n\t                        for (var p in result[0])\n\t                            props[p] = result[0][p].v;\n\t                        var ifaces = { };\n\t                        ifaces[iface] = props;\n\t                        var data = { };\n\t                        data[unit.path] = ifaces;\n\t                        systemd_client.notify(data);\n\t                    });\n\t            }\n\t\n\t            refresh_interface(unit.path, \"org.freedesktop.systemd1.Unit\");\n\t            refresh_interface(service.path, \"org.freedesktop.systemd1.Service\");\n\t        }\n\t\n\t        function on_job_new_removed_refresh(event, number, path, unit_id, result) {\n\t            if (unit_id == name)\n\t                refresh();\n\t        }\n\t\n\t        /* HACK - https://bugs.freedesktop.org/show_bug.cgi?id=69575\n\t         *\n\t         * We need to explicitly get new property values when getting\n\t         * a UnitNew signal since UnitNew doesn't carry them.\n\t         * However, reacting to UnitNew with GetAll could lead to an\n\t         * infinite loop since systemd emits a UnitNew in reaction to\n\t         * GetAll for units that it doesn't want to keep loaded, such\n\t         * as units without unit files.\n\t         *\n\t         * So we ignore UnitNew and instead assume that the unit state\n\t         * only changes in interesting ways when there is a job for it\n\t         * or when the daemon is reloaded (or when we get a property\n\t         * change notification, of course).\n\t         */\n\t\n\t        if (false) {\n\t            // This is what we want to do.\n\t\n\t            systemd_manager.addEventListener(\"UnitNew\", function (event, unit_id, path) {\n\t                if (unit_id == name)\n\t                    refresh();\n\t            });\n\t        } else {\n\t            // This is what we have to do.\n\t\n\t            systemd_manager.addEventListener(\"Reloading\", function (event, reloading) {\n\t                if (!reloading)\n\t                    refresh();\n\t            });\n\t\n\t            systemd_manager.addEventListener(\"JobNew\", on_job_new_removed_refresh);\n\t            systemd_manager.addEventListener(\"JobRemoved\", on_job_new_removed_refresh);\n\t        }\n\t\n\t        function wait(callback) {\n\t            wait_callbacks.promise.then(callback);\n\t        }\n\t\n\t        /* Actions\n\t         *\n\t         * We don't call methods on the D-Bus proxies here since they\n\t         * might not be ready when these functions are called.\n\t         */\n\t\n\t        var pending_jobs = { };\n\t\n\t        systemd_manager.addEventListener(\"JobRemoved\", function (event, number, path, unit_id, result) {\n\t            if (pending_jobs[path]) {\n\t                if (result == \"done\")\n\t                    pending_jobs[path].resolve();\n\t                else\n\t                    pending_jobs[path].reject(result);\n\t                delete pending_jobs[path];\n\t            }\n\t        });\n\t\n\t        function call_manager(method, args) {\n\t            return systemd_client.call(\"/org/freedesktop/systemd1\",\n\t                                       \"org.freedesktop.systemd1.Manager\",\n\t                                       method, args);\n\t        }\n\t\n\t        function call_manager_with_job(method, args) {\n\t            var dfd = cockpit.defer();\n\t            call_manager(method, args).\n\t                done(function (results) {\n\t                    var path = results[0];\n\t                    pending_jobs[path] = dfd;\n\t                }).\n\t                fail(function (error) {\n\t                    dfd.reject(error);\n\t                });\n\t            return dfd.promise();\n\t        }\n\t\n\t        function call_manager_with_reload(method, args) {\n\t            return call_manager(method, args).then(function () {\n\t                return call_manager(\"Reload\", [ ]);\n\t            });\n\t        }\n\t\n\t        function start() {\n\t            return call_manager_with_job(\"StartUnit\", [ name, \"replace\" ]);\n\t        }\n\t\n\t        function stop() {\n\t            return call_manager_with_job(\"StopUnit\", [ name, \"replace\" ]);\n\t        }\n\t\n\t        function restart() {\n\t            return call_manager_with_job(\"RestartUnit\", [ name, \"replace\" ]);\n\t        }\n\t\n\t        function tryRestart() {\n\t            return call_manager_with_job(\"TryRestartUnit\", [ name, \"replace\" ]);\n\t        }\n\t\n\t        function enable() {\n\t            return call_manager_with_reload(\"EnableUnitFiles\", [ [ name ], false, false ]);\n\t        }\n\t\n\t        function disable() {\n\t            return call_manager_with_reload(\"DisableUnitFiles\", [ [ name ], false ]);\n\t        }\n\t\n\t        return self;\n\t    }\n\t\n\t    module.exports = {\n\t        proxy: proxy\n\t    };\n\t}());\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.spawn = spawn;\n\t\n\tvar _cockpit = __webpack_require__(7);\n\t\n\tvar _cockpit2 = _interopRequireDefault(_cockpit);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\t// FIXME: eventually convert all images to python 3\n\tvar pyinvoke = [\"sh\", \"-ec\", \"exec $(which python3 2>/dev/null || which python) $@\", \"--\", \"-\"]; /*\n\t                                                                                                  * This file is part of Cockpit.\n\t                                                                                                  *\n\t                                                                                                  * Copyright (C) 2017 Red Hat, Inc.\n\t                                                                                                  *\n\t                                                                                                  * Cockpit is free software; you can redistribute it and/or modify it\n\t                                                                                                  * under the terms of the GNU Lesser General Public License as published by\n\t                                                                                                  * the Free Software Foundation; either version 2.1 of the License, or\n\t                                                                                                  * (at your option) any later version.\n\t                                                                                                  *\n\t                                                                                                  * Cockpit is distributed in the hope that it will be useful, but\n\t                                                                                                  * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t                                                                                                  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t                                                                                                  * Lesser General Public License for more details.\n\t                                                                                                  *\n\t                                                                                                  * You should have received a copy of the GNU Lesser General Public License\n\t                                                                                                  * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t                                                                                                  */\n\t\n\tfunction spawn(script_pieces, args, options) {\n\t    var script;\n\t    if (typeof script_pieces == \"string\") script = script_pieces;else script = script_pieces.join(\"\\n\");\n\t\n\t    return _cockpit2.default.spawn(pyinvoke.concat(args), options).input(script);\n\t}\n\n/***/ },\n/* 14 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"#\\n# This file is part of Cockpit.\\n#\\n# Copyright (C) 2017 Red Hat, Inc.\\n#\\n# Cockpit is free software; you can redistribute it and/or modify it\\n# under the terms of the GNU Lesser General Public License as published by\\n# the Free Software Foundation; either version 2.1 of the License, or\\n# (at your option) any later version.\\n#\\n# Cockpit is distributed in the hope that it will be useful, but\\n# WITHOUT ANY WARRANTY; without even the implied warranty of\\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\\n# Lesser General Public License for more details.\\n#\\n# You should have received a copy of the GNU Lesser General Public License\\n# along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\\n\\nimport os\\nimport ctypes\\nimport struct\\nimport subprocess\\nimport traceback\\n\\nIN_CLOSE_WRITE = 0x00000008\\nIN_MOVED_FROM  = 0x00000040\\nIN_MOVED_TO    = 0x00000080\\nIN_CREATE      = 0x00000100\\nIN_DELETE      = 0x00000200\\nIN_DELETE_SELF = 0x00000400\\nIN_MOVE_SELF   = 0x00000800\\nIN_IGNORED     = 0x00008000\\n\\nclass Inotify:\\n    def __init__(self):\\n        self._libc = ctypes.CDLL(None, use_errno=True)\\n        self._get_errno_func = ctypes.get_errno\\n\\n        self._libc.inotify_init.argtypes = []\\n        self._libc.inotify_init.restype = ctypes.c_int\\n        self._libc.inotify_add_watch.argtypes = [ctypes.c_int, ctypes.c_char_p,\\n                                                 ctypes.c_uint32]\\n        self._libc.inotify_add_watch.restype = ctypes.c_int\\n        self._libc.inotify_rm_watch.argtypes = [ctypes.c_int, ctypes.c_int]\\n        self._libc.inotify_rm_watch.restype = ctypes.c_int\\n\\n        self.fd = self._libc.inotify_init()\\n\\n    def add_watch(self, path, mask):\\n        path = ctypes.create_string_buffer(path.encode(sys.getfilesystemencoding()))\\n        wd = self._libc.inotify_add_watch(self.fd, path, mask)\\n        if wd < 0:\\n            sys.stderr.write(\\\"can't add watch for %s: %s\\\\n\\\" % (path, os.strerror(self._get_errno_func())))\\n        return wd\\n\\n    def rem_watch(self, wd):\\n        if self._libc.inotify_rm_watch(self.fd, wd) < 0:\\n            sys.stderr.write(\\\"can't remove watch: %s\\\\n\\\" % (os.strerror(self._get_errno_func())))\\n\\n    def process(self, callback):\\n        buf = os.read(self.fd, 4096)\\n        pos = 0\\n        while pos < len(buf):\\n            (wd, mask, cookie, name_len) = struct.unpack('iIII', buf[pos:pos+16])\\n            pos += 16\\n            (name,) = struct.unpack('%ds' % name_len, buf[pos:pos + name_len])\\n            pos += name_len\\n            callback(wd, mask, name.decode().rstrip('\\\\0'))\\n\\n    def run(self, callback):\\n        while True:\\n            self.process(callback)\\n\"\n\n/***/ },\n/* 15 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"#! /usr/bin/python\\n\\n# nfs-mounts   --  Monitor and manage NFS mounts\\n#\\n# This is similar to how UDisks2 monitors and manages block device\\n# mounts, but for NFS.  This might be moved into UDisks2, or not.\\n\\n# We monitor all NFS remotes listed in /etc/fstab and in /proc/self/mounts.\\n# If a entry from mtab is also found in fstab, we report only the\\n# fstab entry and mark it is \\\"mounted\\\".\\n\\nimport select\\nimport re\\nimport sys\\nimport json\\nimport errno\\n\\nclass Watcher:\\n    def __init__(self, path):\\n        self.inotify = Inotify()\\n        self.path = path\\n        self.setup()\\n\\n    def setup(self):\\n        self.wd = self.inotify.add_watch(self.path, IN_CLOSE_WRITE)\\n\\n    def process(self, callback = None):\\n        def event(wd, mask, name):\\n            if callback:\\n                callback()\\n            if mask & IN_IGNORED:\\n                self.setup()\\n        self.inotify.process(event)\\n\\ndef field_escape(str):\\n    return str.replace(\\\"\\\\\\\\\\\", \\\"\\\\\\\\134\\\").replace(\\\" \\\", \\\"\\\\\\\\040\\\").replace(\\\"\\\\t\\\", \\\"\\\\\\\\011\\\")\\n\\ndef field_unescape(str):\\n    return re.sub(\\\"\\\\\\\\\\\\\\\\([0-7]{1,3})\\\", lambda m: chr(int(m.group(1), 8)), str)\\n\\ndef parse_tab(name):\\n    entries = [ ]\\n    for line in open(name, \\\"r\\\").read().split(\\\"\\\\n\\\"):\\n        sline = line.strip()\\n        if sline == \\\"\\\" or sline[0] == \\\"#\\\":\\n            continue\\n        fields = list(map(field_unescape, re.split(\\\"[ \\\\t]+\\\", sline)))\\n        if len(fields) > 0 and \\\":\\\" in fields[0]:\\n            entries.append(fields)\\n    return entries\\n\\ndef index_tab(tab):\\n    by_remote = { }\\n    for t in tab:\\n        if not t[0] in by_remote:\\n            by_remote[t[0]] = [ ]\\n        by_remote[t[0]].append(t)\\n    return by_remote\\n\\ndef modify_tab(name, modify):\\n    lines = open(name, \\\"r\\\").read().split(\\\"\\\\n\\\")\\n    if len(lines) > 0 and lines[len(lines)-1] == \\\"\\\":\\n        del lines[len(lines)-1]\\n\\n    new_lines = [ ]\\n    for line in lines:\\n        sline = line.strip()\\n        if sline == \\\"\\\" or sline[0] == \\\"#\\\":\\n            new_lines.append(line)\\n        else:\\n            fields = list(map(field_unescape, re.split(\\\"[ \\\\t]+\\\", sline)))\\n            if len(fields) > 0 and \\\":\\\" in fields[0]:\\n                new_fields = modify(fields)\\n                if new_fields:\\n                    if new_fields == fields:\\n                        new_lines.append(line)\\n                    else:\\n                        new_lines.append(\\\" \\\".join(map(field_escape, new_fields)))\\n            else:\\n                new_lines.append(line)\\n    new_fields = modify(None)\\n    if new_fields:\\n        new_lines.append(\\\" \\\".join(map(field_escape, new_fields)))\\n\\n    f = open(name + \\\".tmp\\\", \\\"w\\\")\\n    f.write(\\\"\\\\n\\\".join(new_lines) + \\\"\\\\n\\\")\\n    f.flush()\\n    os.fsync(f.fileno())\\n    f.close()\\n    os.rename(name + \\\".tmp\\\", name)\\n\\nfstab = [ ]\\nfstab_by_remote = { }\\n\\nmtab = [ ]\\nmtab_by_remote = { }\\n\\ndef process_fstab():\\n    global fstab, fstab_by_remote\\n    fstab = parse_tab(\\\"/etc/fstab\\\")\\n    fstab_by_remote = index_tab(fstab)\\n\\ndef process_mtab():\\n    global mtab, mtab_by_remote\\n    mtab = parse_tab(\\\"/proc/self/mounts\\\")\\n    mtab_by_remote = index_tab(mtab)\\n\\ndef find_in_tab(tab_by_remote, fields):\\n    for t in tab_by_remote.get(fields[0], [ ]):\\n        if t[0] == fields[0] and t[1] == fields[1]:\\n            return t\\n    return None\\n\\ndef report():\\n    data = [ ]\\n    for f in fstab:\\n        m = find_in_tab(mtab_by_remote, f)\\n        data.append({ \\\"fstab\\\": True, \\\"fields\\\": f, \\\"mounted\\\": m is not None })\\n    for m in mtab:\\n        if not find_in_tab(fstab_by_remote, m):\\n            data.append({ \\\"fstab\\\": False, \\\"fields\\\": m, \\\"mounted\\\": True })\\n    sys.stdout.write(json.dumps(data) + \\\"\\\\n\\\")\\n    sys.stdout.flush()\\n\\ndef monitor():\\n    process_mtab()\\n    process_fstab()\\n    report()\\n    fstab_watcher = Watcher(\\\"/etc/fstab\\\")\\n    mtab_file = open(\\\"/proc/self/mounts\\\", \\\"r\\\")\\n    while True:\\n        (r, w, x) = select.select([ fstab_watcher.inotify.fd ], [ ], [ mtab_file ])\\n        if mtab_file in x:\\n            process_mtab()\\n            report()\\n        if fstab_watcher.inotify.fd in r:\\n            fstab_watcher.process()\\n            process_fstab()\\n            report()\\n\\ndef mkdir_if_necessary(path):\\n    if not os.path.exists(path):\\n        os.makedirs(path)\\n\\ndef rmdir_if_empty(path):\\n    try:\\n        os.rmdir(path)\\n    except OSError as e:\\n        if e.errno not in [ errno.ENOTEMPTY, errno.ENOTDIR, errno.ENOENT ]:\\n            raise\\n\\ndef update(entry, new_fields):\\n    old_fields = entry[\\\"fields\\\"]\\n    if old_fields[1] != new_fields[1]:\\n        mkdir_if_necessary(new_fields[1])\\n    if entry[\\\"mounted\\\"]:\\n        if (new_fields[0] == old_fields[0]\\n            and new_fields[1] == old_fields[1]\\n            and new_fields[2] == old_fields[2]):\\n            remount(new_fields)\\n        else:\\n            try:\\n                unmount(entry)\\n                if old_fields[1] != new_fields[1]:\\n                    rmdir_if_empty(old_fields[1])\\n            except subprocess.CalledProcessError:\\n                pass\\n            mount({ \\\"fields\\\": new_fields })\\n    else:\\n        if old_fields[1] != new_fields[1]:\\n            rmdir_if_empty(old_fields[1])\\n    modify_tab(\\\"/etc/fstab\\\", lambda fields: new_fields if fields == old_fields else fields)\\n\\ndef add(new_fields):\\n    mkdir_if_necessary(new_fields[1])\\n    mount({ \\\"fields\\\": new_fields })\\n    modify_tab(\\\"/etc/fstab\\\", lambda fields: new_fields if fields is None else fields)\\n\\ndef remove(entry):\\n    old_fields = entry[\\\"fields\\\"]\\n    if entry[\\\"mounted\\\"]:\\n        unmount(entry)\\n    rmdir_if_empty(old_fields[1])\\n    modify_tab(\\\"/etc/fstab\\\", lambda fields: None if fields == old_fields else fields)\\n\\ndef mount(entry):\\n    fields = entry[\\\"fields\\\"]\\n    mkdir_if_necessary(fields[1])\\n    subprocess.check_call([ \\\"mount\\\",\\n                            \\\"-t\\\", fields[2],\\n                            \\\"-o\\\", fields[3],\\n                            fields[0],\\n                            fields[1] ])\\n\\ndef remount(fields):\\n    subprocess.check_call([ \\\"mount\\\",\\n                            \\\"-o\\\", \\\"remount,\\\" + fields[3],\\n                            fields[0],\\n                            fields[1] ])\\n\\ndef unmount(entry):\\n    subprocess.check_call([ \\\"umount\\\", entry[\\\"fields\\\"][1] ])\\n\\ndef fuser(entry):\\n\\n    import dbus\\n    bus = dbus.SystemBus()\\n    systemd_manager = dbus.Interface(bus.get_object('org.freedesktop.systemd1', '/org/freedesktop/systemd1'),\\n                                     dbus_interface='org.freedesktop.systemd1.Manager')\\n\\n    if not entry[\\\"mounted\\\"]:\\n        return [ ]\\n\\n    mount_point = entry[\\\"fields\\\"][1]\\n    results = { }\\n\\n    def check(path, pid):\\n        t = os.readlink(path)\\n        if t == mount_point or t.startswith(mount_point + \\\"/\\\"):\\n            unit = systemd_manager.GetUnitByPID(int(pid))\\n            if unit not in results:\\n                unit_obj = bus.get_object('org.freedesktop.systemd1', unit)\\n                desc = unit_obj.Get(\\\"org.freedesktop.systemd1.Unit\\\", \\\"Description\\\",\\n                                    dbus_interface=\\\"org.freedesktop.DBus.Properties\\\")\\n                id = unit_obj.Get(\\\"org.freedesktop.systemd1.Unit\\\", \\\"Id\\\",\\n                                  dbus_interface=\\\"org.freedesktop.DBus.Properties\\\")\\n                results[unit] = { \\\"unit\\\": id, \\\"desc\\\": desc }\\n            return True\\n        return False\\n\\n    def checkdir(path, pid):\\n        for f in os.listdir(path):\\n            if check(os.path.join(path, f), pid):\\n                return True\\n        return False\\n\\n    my_pid = os.getpid()\\n\\n    for p in os.listdir(\\\"/proc/\\\"):\\n        if not p.isdigit():\\n            continue\\n        if int(p) == my_pid:\\n            continue\\n        proc = \\\"/proc/%s/\\\" % p\\n        try:\\n            if check(proc + \\\"exe\\\", p): continue\\n            if check(proc + \\\"root\\\", p): continue\\n            if check(proc + \\\"cwd\\\", p): continue\\n            if checkdir(proc + \\\"fd\\\", p): continue\\n            if checkdir(proc + \\\"map_files\\\", p): continue\\n        except OSError:\\n            pass\\n\\n    return list(results.values())\\n\\ndef users(entry):\\n    data = fuser(entry)\\n    sys.stdout.write(json.dumps(data) + \\\"\\\\n\\\")\\n    sys.stdout.flush()\\n\\ndef stop_units(units):\\n    import dbus\\n    bus = dbus.SystemBus()\\n    systemd_manager = dbus.Interface(bus.get_object('org.freedesktop.systemd1', '/org/freedesktop/systemd1'),\\n                                     dbus_interface='org.freedesktop.systemd1.Manager')\\n    for u in units:\\n        systemd_manager.StopUnit(u, 'replace')\\n\\ndef stop_and_unmount(units, entry):\\n    stop_units(units)\\n    unmount(entry)\\n\\ndef stop_and_remove(units, entry):\\n    stop_units(units)\\n    remove(entry)\\n\\ndef dispatch(argv):\\n    if argv[1] == \\\"monitor\\\":\\n        monitor()\\n    elif argv[1] == \\\"update\\\":\\n        update(json.loads(argv[2]), json.loads(argv[3]))\\n    elif argv[1] == \\\"add\\\":\\n        add(json.loads(argv[2]))\\n    elif argv[1] == \\\"remove\\\":\\n        remove(json.loads(argv[2]))\\n    elif argv[1] == \\\"mount\\\":\\n        mount(json.loads(argv[2]))\\n    elif argv[1] == \\\"unmount\\\":\\n        unmount(json.loads(argv[2]))\\n    elif argv[1] == \\\"stop-and-unmount\\\":\\n        stop_and_unmount(json.loads(argv[2]), json.loads(argv[3]))\\n    elif argv[1] == \\\"stop-and-remove\\\":\\n        stop_and_remove(json.loads(argv[2]), json.loads(argv[3]))\\n    elif argv[1] == \\\"users\\\":\\n        users(json.loads(argv[2]))\\n\\ntry:\\n    dispatch(sys.argv)\\nexcept subprocess.CalledProcessError as e:\\n    sys.exit(e.returncode)\\nexcept Exception as e:\\n    sys.stderr.write(str(e) + \\\"\\\\n\\\")\\n    sys.exit(1)\\n\"\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2015 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(6);\n\t    var cockpit = __webpack_require__(7);\n\t\n\t    var mustache = __webpack_require__(10);\n\t\n\t    var utils = __webpack_require__(9);\n\t\n\t    var _ = cockpit.gettext;\n\t\n\t    /* JOBS\n\t     */\n\t\n\t    function init_jobs(client) {\n\t\n\t        var jobs_tmpl = $(\"#jobs-tmpl\").html();\n\t        mustache.parse(jobs_tmpl);\n\t\n\t        function update_job_spinners(parent) {\n\t            var path;\n\t\n\t            $(parent).find('[data-job-object]').css('visibility', 'hidden');\n\t\n\t            function show_spinners_for_path(path) {\n\t                $(parent).find('[data-job-object=\"' + path + '\"]').css('visibility', 'visible');\n\t            }\n\t\n\t            function show_spinners_for_object(path) {\n\t                show_spinners_for_path(path);\n\t                var parent = utils.get_parent(client, path);\n\t                if (parent)\n\t                    show_spinners_for_object(parent);\n\t            }\n\t\n\t            function show_spinners_for_objects(paths) {\n\t                if (!paths || !paths.length)\n\t                    return;\n\t                for (var i = 0; i < paths.length; i++)\n\t                    show_spinners_for_object(paths[i]);\n\t            }\n\t\n\t            for (path in client.jobs)\n\t                show_spinners_for_objects(client.jobs[path].Objects);\n\t        }\n\t\n\t        $(client.jobs).on('added removed changed', function () {\n\t            update_job_spinners('body');\n\t        });\n\t\n\t        function query_jobs_data() {\n\t\n\t            /* Human readable descriptions of the symbolic \"Operation\"\n\t             * property of job objects.  These are from the storaged\n\t             * documentation at\n\t             *\n\t             *   http://storaged.org/doc/udisks2-api/gdbus-org.freedesktop.UDisks2.Job.html\n\t             */\n\t\n\t            var descriptions = {\n\t                'ata-smart-selftest':          _(\"SMART self-test of $target\"),\n\t                'drive-eject':                 _(\"Ejecting $target\"),\n\t                'encrypted-unlock':            _(\"Unlocking $target\"),\n\t                'encrypted-lock':              _(\"Locking $target\"),\n\t                'encrypted-modify':            _(\"Modifying $target\"),\n\t                'swapspace-start':             _(\"Starting swapspace $target\"),\n\t                'swapspace-stop':              _(\"Stopping swapspace $target\"),\n\t                'filesystem-mount':            _(\"Mounting $target\"),\n\t                'filesystem-unmount':          _(\"Unmounting $target\"),\n\t                'filesystem-modify':           _(\"Modifying $target\"),\n\t                'format-erase':                _(\"Erasing $target\"),\n\t                'format-mkfs':                 _(\"Creating filesystem on $target\"),\n\t                'loop-setup':                  _(\"Setting up loop device $target\"),\n\t                'partition-modify':            _(\"Modifying $target\"),\n\t                'partition-delete':            _(\"Deleting $target\"),\n\t                'partition-create':            _(\"Creating partition $target\"),\n\t                'cleanup':                     _(\"Cleaning up for $target\"),\n\t                'ata-secure-erase':            _(\"Securely erasing $target\"),\n\t                'ata-enhanced-secure-erase':   _(\"Very securely erasing $target\"),\n\t                'md-raid-stop':                _(\"Stopping RAID Device $target\"),\n\t                'md-raid-start':               _(\"Starting RAID Device $target\"),\n\t                'md-raid-fault-device':        _(\"Marking $target as faulty\"),\n\t                'md-raid-remove-device':       _(\"Removing $target from RAID Device\"),\n\t                'md-raid-create':              _(\"Creating RAID Device $target\"),\n\t                'mdraid-check-job':            _(\"Checking RAID Device $target\"),\n\t                'mdraid-repair-job':           _(\"Checking and Repairing RAID Device $target\"),\n\t                'mdraid-recover-job':          _(\"Recovering RAID Device $target\"),\n\t                'mdraid-sync-job':             _(\"Synchronizing RAID Device $target\"),\n\t                'lvm-lvol-delete':             _(\"Deleting $target\"),\n\t                'lvm-lvol-activate':           _(\"Activating $target\"),\n\t                'lvm-lvol-deactivate':         _(\"Deactivating $target\"),\n\t                'lvm-lvol-snapshot':           _(\"Creating snapshot of $target\"),\n\t                'lvm-vg-create':               _(\"Creating volume group $target\"),\n\t                'lvm-vg-delete':               _(\"Deleting volume group $target\"),\n\t                'lvm-vg-add-device':           _(\"Adding physical volume to $target\"),\n\t                'lvm-vg-rem-device':           _(\"Removing physical volume from $target\"),\n\t                'lvm-vg-empty-device':         _(\"Emptying $target\"),\n\t                'lvm-vg-create-volume':        _(\"Creating logical volume $target\"),\n\t                'lvm-vg-rename':               _(\"Renaming $target\"),\n\t                'lvm-vg-resize':               _(\"Resizing $target\")\n\t            };\n\t\n\t            var server_now = new Date().getTime() + client.time_offset;\n\t\n\t            function make_description(job) {\n\t                var fmt = descriptions[job.Operation];\n\t                if (!fmt)\n\t                    fmt = _(\"Operation '$operation' on $target\");\n\t\n\t                var target =\n\t                    job.Objects.map(function (path) {\n\t                        if (client.blocks[path])\n\t                            return utils.block_name(client.blocks[path]);\n\t                        else if (client.mdraids[path])\n\t                            return utils.mdraid_name(client.mdraids[path]);\n\t                        else if (client.vgroups[path])\n\t                            return client.vgroups[path].Name;\n\t                        else if (client.lvols[path])\n\t                            return utils.lvol_name(client.lvols[path]);\n\t                        else\n\t                            return _(\"unknown target\");\n\t                    }).join(\", \");\n\t\n\t                return cockpit.format(fmt, { operation: job.Operation, target: target });\n\t            }\n\t\n\t            function job(path) {\n\t                return client.jobs[path];\n\t            }\n\t\n\t            function cmp_job(a, b) {\n\t                return job(a).StartTime - job(b).StartTime;\n\t            }\n\t\n\t            function job_is_stable(path) {\n\t                var j = job(path);\n\t\n\t                var age_ms = server_now - j.StartTime/1000;\n\t                if (age_ms >= 2000)\n\t                    return true;\n\t\n\t                if (j.ExpectedEndTime > 0 && (j.ExpectedEndTime/1000 - server_now) >= 2000)\n\t                    return true;\n\t\n\t                return false;\n\t            }\n\t\n\t            function make_job(path) {\n\t                var j = job(path);\n\t\n\t                var remaining = null;\n\t                if (j.ExpectedEndTime > 0) {\n\t                    var d = j.ExpectedEndTime/1000 - server_now;\n\t                    if (d > 0)\n\t                        remaining = utils.format_delay (d);\n\t                }\n\t\n\t                return {\n\t                    path: path,\n\t                    dbus: j,\n\t                    Description: make_description(j),\n\t                    Progress: j.ProgressValid && (j.Progress*100).toFixed() + \"%\",\n\t                    RemainingTime: remaining,\n\t                    Cancelable: j.Cancelable\n\t                };\n\t            }\n\t\n\t            return (Object.keys(client.jobs).\n\t                    filter(job_is_stable).\n\t                    sort(cmp_job).\n\t                    map(make_job));\n\t        }\n\t\n\t        function render_jobs_panel() {\n\t            var js = query_jobs_data();\n\t            return mustache.render(jobs_tmpl,\n\t                                   { Jobs: js,\n\t                                     HasJobs: js.length > 0\n\t                                   });\n\t        }\n\t\n\t        return {\n\t            update:  update_job_spinners,\n\t            query:   query_jobs_data,\n\t            render:  render_jobs_panel\n\t        };\n\t\n\t    }\n\t\n\t    module.exports = {\n\t        init: init_jobs\n\t    };\n\t\n\t}());\n\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2015 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(6);\n\t    var cockpit = __webpack_require__(7);\n\t\n\t    var mustache = __webpack_require__(10);\n\t    var plot = __webpack_require__(18);\n\t    var journal = __webpack_require__(22);\n\t\n\t    var utils = __webpack_require__(9);\n\t    var dialog = __webpack_require__(26);\n\t    var permissions = __webpack_require__(30);\n\t\n\t    var _ = cockpit.gettext;\n\t    var C_ = cockpit.gettext;\n\t\n\t    /* OVERVIEW PAGE\n\t     */\n\t\n\t\n\t    function init_overview(client, jobs) {\n\t        var read_series, write_series;\n\t\n\t        $('#vgroups').toggle(client.features.lvm2);\n\t        $('#iscsi-sessions').toggle(client.features.iscsi);\n\t\n\t        var mdraids_tmpl = $(\"#mdraids-tmpl\").html();\n\t        mustache.parse(mdraids_tmpl);\n\t\n\t        function render_mdraids() {\n\t            function cmp_mdraid(path_a, path_b) {\n\t                // TODO - ignore host part\n\t                return client.mdraids[path_a].Name.localeCompare(client.mdraids[path_b].Name);\n\t            }\n\t\n\t            function make_mdraid(path) {\n\t                var mdraid = client.mdraids[path];\n\t\n\t                return {\n\t                    path: path,\n\t                    UUID: mdraid.UUID,\n\t                    Size: utils.fmt_size(mdraid.Size),\n\t                    Name: utils.mdraid_name(mdraid)\n\t                };\n\t            }\n\t\n\t            var m = Object.keys(client.mdraids).sort(cmp_mdraid).map(make_mdraid);\n\t            $('#mdraids').amend(mustache.render(mdraids_tmpl,\n\t                                                { MDRaids: m,\n\t                                                  HasMDRaids: m.length > 0\n\t                                                }));\n\t            permissions.update();\n\t            jobs.update('#mdraids');\n\t        }\n\t\n\t        $(client).on('changed', render_mdraids);\n\t\n\t        var vgroups_tmpl = $(\"#vgroups-tmpl\").html();\n\t        mustache.parse(vgroups_tmpl);\n\t\n\t        function render_vgroups() {\n\t            function cmp_vgroup(path_a, path_b) {\n\t                return client.vgroups[path_a].Name.localeCompare(client.vgroups[path_b].Name);\n\t            }\n\t\n\t            function make_vgroup(path) {\n\t                var vgroup = client.vgroups[path];\n\t\n\t                return {\n\t                    path: path,\n\t                    Size: utils.fmt_size(vgroup.Size),\n\t                    Name: vgroup.Name\n\t                };\n\t            }\n\t\n\t            var v = Object.keys(client.vgroups).sort(cmp_vgroup).map(make_vgroup);\n\t            $('#vgroups').amend(mustache.render(vgroups_tmpl,\n\t                                                { VGroups: v,\n\t                                                  HasVGroups: v.length > 0\n\t                                                }));\n\t            permissions.update();\n\t            jobs.update('#vgroups');\n\t        }\n\t\n\t        $(client).on('changed', render_vgroups);\n\t\n\t        var iscsi_sessions_tmpl = $(\"#iscsi-sessions-tmpl\").html();\n\t        mustache.parse(iscsi_sessions_tmpl);\n\t\n\t        function render_iscsi_sessions() {\n\t            function cmp_session(a, b) {\n\t                return a.Name.localeCompare(b.Name);\n\t            }\n\t\n\t            function make_session(path) {\n\t                var session = client.iscsi_sessions[path];\n\t                return {\n\t                    path: path,\n\t                    Name: session.data[\"target_name\"] || \"\",\n\t                    Tpgt: session.data[\"tpgt\"],\n\t                    Address: session.data[\"persistent_address\"],\n\t                    Port: session.data[\"persistent_port\"]\n\t                };\n\t            }\n\t\n\t            var s = Object.keys(client.iscsi_sessions).map(make_session).sort(cmp_session);\n\t            $('#iscsi-sessions').amend(mustache.render(iscsi_sessions_tmpl,\n\t                                                       { Sessions: s,\n\t                                                         HasSessions: s.length > 0\n\t                                                       }));\n\t            permissions.update();\n\t        }\n\t\n\t        $(client).on('changed', render_iscsi_sessions);\n\t\n\t        var drives_tmpl = $(\"#drives-tmpl\").html();\n\t        mustache.parse(drives_tmpl);\n\t\n\t        var cur_highlight;\n\t\n\t        function render_drives() {\n\t            function cmp_drive(path_a, path_b) {\n\t                return client.drives[path_a].SortKey.localeCompare(client.drives[path_b].SortKey);\n\t            }\n\t\n\t            function classify_drive(drive) {\n\t                if (drive.MediaRemovable || drive.Media) {\n\t                    for (var i = 0; i < drive.MediaCompatibility.length; i++)\n\t                        if (drive.MediaCompatibility[i].indexOf(\"optical\") === 0)\n\t                            return \"optical\";\n\t                    return \"removable\";\n\t                }\n\t\n\t                return (drive.RotationRate === 0)? \"ssd\" : \"hdd\";\n\t            }\n\t\n\t            function make_drive(path) {\n\t                var drive = client.drives[path];\n\t                var block = client.drives_block[path];\n\t\n\t                if (!block) {\n\t                    // A drive without a primary block device might be\n\t                    // a unconfigured multipath device.  Try to hobble\n\t                    // along here by arbitrarily picking one of the\n\t                    // multipath devices.\n\t                    block = client.drives_multipath_blocks[path][0];\n\t                }\n\t\n\t                if (!block)\n\t                    return;\n\t\n\t                var dev = utils.decode_filename(block.Device).replace(/^\\/dev\\//, \"\");\n\t                var io = client.blockdev_io.data[dev];\n\t\n\t                var name = utils.drive_name(drive);\n\t                var classification = classify_drive(drive);\n\t                var size_str = utils.fmt_size(drive.Size);\n\t                var desc;\n\t                if (classification == \"hdd\") {\n\t                    desc = size_str + \" \" + C_(\"storage\", \"Hard Disk\");\n\t                } else if (classification == \"ssd\") {\n\t                    desc = size_str + \" \" + C_(\"storage\", \"Solid-State Disk\");\n\t                } else if (classification == \"removable\") {\n\t                    if (drive.Size === 0)\n\t                        desc = C_(\"storage\", \"Removable Drive\");\n\t                    else\n\t                        desc = size_str + \" \" + C_(\"storage\", \"Removable Drive\");\n\t                } else if (classification == \"optical\") {\n\t                    desc = C_(\"storage\", \"Optical Drive\");\n\t                } else {\n\t                    if (drive.Size === 0)\n\t                        desc = C_(\"storage\", \"Drive\");\n\t                    else\n\t                        desc = size_str + \" \" + C_(\"storage\", \"Drive\");\n\t                }\n\t\n\t                return {\n\t                    path: path,\n\t                    dev: dev,\n\t                    Name: name,\n\t                    Classification: classification,\n\t                    Description: desc,\n\t                    ReadRate: io && utils.fmt_rate(io[0]),\n\t                    WriteRate: io && utils.fmt_rate(io[1]),\n\t                    Highlight: dev == cur_highlight\n\t                };\n\t            }\n\t\n\t            var d = Object.keys(client.drives).sort(cmp_drive).map(make_drive);\n\t            $('#drives').amend(mustache.render(drives_tmpl,\n\t                                               { Drives: d,\n\t                                                 HasDrives: d.length > 0\n\t                                               }));\n\t            permissions.update();\n\t            jobs.update('#drives');\n\t\n\t            for (var p in d) {\n\t                if (d[p] && d[p].dev) {\n\t                    read_series.add_instance(d[p].dev);\n\t                    write_series.add_instance(d[p].dev);\n\t                }\n\t            }\n\t        }\n\t\n\t        $(client).on('changed', render_drives);\n\t        $(client.blockdev_io).on('changed', render_drives);\n\t\n\t        var others_tmpl = $(\"#others-tmpl\").html();\n\t        mustache.parse(others_tmpl);\n\t\n\t        function render_others() {\n\t            function is_other(path) {\n\t                var block = client.blocks[path];\n\t                var block_part = client.blocks_part[path];\n\t                var block_lvm2 = client.blocks_lvm2[path];\n\t\n\t                return ((!block_part || block_part.Table == \"/\") &&\n\t                        block.Drive == \"/\" &&\n\t                        block.CryptoBackingDevice == \"/\" &&\n\t                        block.MDRaid == \"/\" &&\n\t                        (!block_lvm2 || block_lvm2.LogicalVolume == \"/\") &&\n\t                        !block.HintIgnore &&\n\t                        block.Size > 0);\n\t            }\n\t\n\t            function make_other(path) {\n\t                var block = client.blocks[path];\n\t                var name = utils.block_name(block);\n\t\n\t                return {\n\t                    path: path,\n\t                    dev: name.replace(/^\\/dev\\//, \"\"),\n\t                    Name: name,\n\t                    Description: cockpit.format(_(\"$0 Block Device\"), utils.fmt_size(block.Size))\n\t                };\n\t            }\n\t\n\t            var o = Object.keys(client.blocks).filter(is_other).sort(utils.make_block_path_cmp(client)).map(make_other);\n\t            $('#others').amend(mustache.render(others_tmpl,\n\t                                               { Others: o,\n\t                                                 HasOthers: o.length > 0\n\t                                               }));\n\t            permissions.update();\n\t        }\n\t\n\t        $(client).on('changed', render_others);\n\t\n\t        var mounts_tmpl = $(\"#mounts-tmpl\").html();\n\t        mustache.parse(mounts_tmpl);\n\t\n\t        function render_mounts() {\n\t            function is_mount(path) {\n\t                var block = client.blocks[path];\n\t                var fsys = client.blocks_fsys[path];\n\t                return fsys && block.IdUsage == \"filesystem\" && block.IdType != \"mpath_member\" && !block.HintIgnore;\n\t            }\n\t\n\t            function cmp_mount(path_a, path_b) {\n\t                return client.blocks[path_a].IdLabel.localeCompare(client.blocks[path_b]).IdLabel;\n\t            }\n\t\n\t            function make_mount(path) {\n\t                var block = client.blocks[path];\n\t                var fsys = client.blocks_fsys[path];\n\t                var mount_points = fsys.MountPoints.map(utils.decode_filename);\n\t                var fsys_size;\n\t                for (var i = 0; i < mount_points.length && !fsys_size; i++)\n\t                    fsys_size = client.fsys_sizes.data[mount_points[i]];\n\t\n\t                return {\n\t                    LinkTarget: utils.get_block_link_target(client, path),\n\t                    Name: block.IdLabel || utils.block_name(block),\n\t                    DeviceSize: utils.fmt_size(block.Size),\n\t                    UsageText: fsys_size? utils.format_fsys_usage(fsys_size[0], fsys_size[1]) : null,\n\t                    UsagePercent: fsys_size? fsys_size[0] / fsys_size[1] * 100 : null,\n\t                    UsageCritical: fsys_size && fsys_size[0] > 0.95 * fsys_size[1],\n\t                    MountPoints: fsys.MountPoints.map(utils.decode_filename),\n\t                    IsMounted: fsys.MountPoints.length > 0\n\t                };\n\t            }\n\t\n\t            var m = Object.keys(client.blocks).filter(is_mount).sort(cmp_mount).map(make_mount);\n\t            $('#mounts').amend(mustache.render(mounts_tmpl,\n\t                                               { Mounts: m,\n\t                                                 HasMounts: m.length > 0\n\t                                               }));\n\t\n\t            /* Apply these styles */\n\t            $('#mounts [data-width]').each(function() {\n\t                $(this).css(\"width\", $(this).attr(\"data-width\"));\n\t            });\n\t\n\t            permissions.update();\n\t            jobs.update('#mounts');\n\t        }\n\t\n\t        $(client).on('changed', render_mounts);\n\t        $(client.fsys_sizes).on('changed', render_mounts);\n\t\n\t        var nfs_mounts_tmpl = $(\"#nfs-mounts-tmpl\").html();\n\t        mustache.parse(nfs_mounts_tmpl);\n\t\n\t        var nfs_users_tmpl = $(\"#nfs-users-tmpl\").html();\n\t        mustache.parse(nfs_users_tmpl);\n\t\n\t        function render_nfs_mounts() {\n\t\n\t            function make_nfs_mount(entry, index) {\n\t                var fsys_size;\n\t                if (entry.mounted)\n\t                    fsys_size = client.nfs.get_fsys_size(entry);\n\t\n\t                return {\n\t                    Server: entry.fields[0].split(\":\")[0],\n\t                    RemoteDir: entry.fields[0].split(\":\")[1],\n\t                    UsageText: fsys_size? utils.format_fsys_usage(fsys_size[0], fsys_size[1]) : null,\n\t                    UsagePercent: fsys_size? fsys_size[0] / fsys_size[1] * 100 : null,\n\t                    UsageCritical: fsys_size && fsys_size[0] > 0.95 * fsys_size[1],\n\t                    MountPoint: entry.fields[1],\n\t                    IsMounted: entry.mounted,\n\t                    CanEdit: entry.fstab,\n\t                    action_arg: index\n\t                };\n\t            }\n\t\n\t            var m = client.nfs.entries.map(make_nfs_mount);\n\t\n\t            var is_armed = $('#nfs-mounts .nfs-arm-button').hasClass('active');\n\t            $('#nfs-mounts').amend(mustache.render(nfs_mounts_tmpl,\n\t                                                   { armed: is_armed,\n\t                                                     Mounts: m,\n\t                                                     HasMounts: m.length > 0\n\t                                                   }));\n\t\n\t            /* Apply these styles */\n\t            $('#nfs-mounts [data-width]').each(function() {\n\t                $(this).css(\"width\", $(this).attr(\"data-width\"));\n\t            });\n\t        }\n\t\n\t        $('#storage').on('click', '#nfs-mounts .nfs-arm-button', function (event) {\n\t            $(this).toggleClass('active');\n\t            render_nfs_mounts();\n\t        });\n\t\n\t        function nfs_disarm() {\n\t            $('#nfs-mounts .nfs-arm-button').removeClass('active');\n\t            render_nfs_mounts();\n\t        }\n\t\n\t        function checked(error_title, promise) {\n\t            promise.fail(function (error, output) {\n\t                $('#error-popup-title').text(error_title);\n\t                $('#error-popup-message').text(error.toString());\n\t                $('#error-popup').modal('show');\n\t            });\n\t        }\n\t\n\t        $('#storage').on('click', '[data-action=\"mount-mount\"]', function () {\n\t            var arg = $(this).attr('data-arg');\n\t            var entry = client.nfs.entries[arg];\n\t            checked(\"Could not mount the filesystem\",\n\t                    client.nfs.mount_entry(entry));\n\t            nfs_disarm();\n\t            return false;\n\t        });\n\t\n\t        function nfs_busy_dialog(dialog_title,\n\t                                 entry, error,\n\t                                 action_title, action) {\n\t\n\t            function show(users) {\n\t                if (users.length === 0) {\n\t                    $('#error-popup-title').text(dialog_title);\n\t                    $('#error-popup-message').text(error.toString());\n\t                    $('#error-popup').modal('show');\n\t                } else {\n\t                    dialog.open({ Title: dialog_title,\n\t                                  Teardown: {\n\t                                      HasUnits: true,\n\t                                      Units: users.map(function (u) { return { Unit: u.unit, Name: u.desc }; })\n\t                                  },\n\t                                  Fields: [ ],\n\t                                  Action: users? {\n\t                                      DangerButton: true,\n\t                                      Title: action_title,\n\t                                      action: function () {\n\t                                          return action(users);\n\t                                      }\n\t                                  } : null\n\t                                });\n\t                }\n\t            }\n\t\n\t            client.nfs.entry_users(entry)\n\t                .done(function (users) {\n\t                    show(users);\n\t                })\n\t                .fail(function (error) {\n\t                    show([ ]);\n\t                });\n\t        }\n\t\n\t        $('#storage').on('click', '[data-action=\"mount-unmount\"]', function () {\n\t            var arg = $(this).attr('data-arg');\n\t            var entry = client.nfs.entries[arg];\n\t            client.nfs.unmount_entry(entry)\n\t                .fail(function (error) {\n\t                    nfs_busy_dialog(_(\"Unable to unmount filesystem\"),\n\t                                    entry, error,\n\t                                    _(\"Stop and unmount\"),\n\t                                    function (users) {\n\t                                        return client.nfs.stop_and_unmount_entry(users, entry);\n\t                                    });\n\t                });\n\t            nfs_disarm();\n\t            return false;\n\t        });\n\t\n\t        function nfs_fstab_dialog(entry) {\n\t\n\t            var server_to_check;\n\t            var server_check_deferred;\n\t\n\t            function remote_choices(vals) {\n\t                if (vals.server == server_to_check)\n\t                    return false;\n\t\n\t                server_to_check = vals.server;\n\t                if (server_check_deferred)\n\t                    server_check_deferred.resolve(false);\n\t\n\t                var this_deferred = cockpit.defer();\n\t                server_check_deferred = this_deferred;\n\t\n\t                cockpit.spawn([ \"showmount\", \"-e\", \"--no-headers\", server_to_check ], { err: \"message\" })\n\t                        .done(function (output) {\n\t                            if (this_deferred == server_check_deferred) {\n\t                                var dirs = [ ];\n\t                                output.split(\"\\n\").forEach(function (line) {\n\t                                    var d = line.split(\" \")[0];\n\t                                    if (d)\n\t                                        dirs.push(d);\n\t                                });\n\t                                this_deferred.resolve(dirs);\n\t                                server_check_deferred = null;\n\t                            } else {\n\t                                this_deferred.resolve(false);\n\t                            }\n\t                        }).\n\t                        fail(function (error) {\n\t                            console.warn(error);\n\t                            this_deferred.resolve([ ]);\n\t                        });\n\t\n\t                return this_deferred.promise();\n\t            }\n\t\n\t            function show(busy) {\n\t                dialog.open({ Title: entry? _(\"NFS Mount\") : _(\"New NFS Mount\"),\n\t                              Alerts: busy? [ { Message: _(\"This NFS mount is in use and only its options can be changed.\") } ] : null,\n\t                              Fields: [\n\t                                  { TextInput: \"server\",\n\t                                    Title: _(\"Server Address\"),\n\t                                    Value: entry? entry.fields[0].split(\":\")[0] : \"\",\n\t                                    validate: function (val) {\n\t                                        if (val === \"\")\n\t                                            return _(\"Server cannot be empty.\");\n\t                                    },\n\t                                    disabled: busy\n\t                                  },\n\t                                  { ComboBox: \"remote\",\n\t                                    Title: _(\"Path on Server\"),\n\t                                    Value: entry? entry.fields[0].split(\":\")[1] : \"\",\n\t                                    Choices: remote_choices,\n\t                                    validate: function (val) {\n\t                                        if (val === \"\")\n\t                                            return _(\"Path on server cannot be empty.\");\n\t                                        if (val[0] !== \"/\")\n\t                                            return _(\"Path on server must start with \\\"/\\\".\");\n\t                                    },\n\t                                    disabled: busy\n\t                                  },\n\t                                  { TextInput: \"dir\",\n\t                                    Title: _(\"Local Mount Point\"),\n\t                                    Value: entry? entry.fields[1] : \"\",\n\t                                    validate: function (val) {\n\t                                        if (val === \"\")\n\t                                            return _(\"Mount point cannot be empty.\");\n\t                                        if (val[0] !== \"/\")\n\t                                            return _(\"Mount point must start with \\\"/\\\".\");\n\t                                    },\n\t                                    disabled: busy\n\t                                  },\n\t                                  { TextInput: \"opts\",\n\t                                    Title: _(\"Mount Options\"),\n\t                                    Value: entry? entry.fields[3] : \"defaults\",\n\t                                    validate: function (val) {\n\t                                        if (val === \"\")\n\t                                            return _(\"Options cannot be empty.\");\n\t                                    }\n\t                                  }\n\t                              ],\n\t                              Action: {\n\t                                  Title: entry? _(\"Apply\") : _(\"Add\"),\n\t                                  action: function (vals) {\n\t                                      var fields = [ vals.server + \":\" + vals.remote,\n\t                                                     vals.dir,\n\t                                                     entry? entry.fields[2]: \"nfs\",\n\t                                                     vals.opts ];\n\t\n\t                                      if (entry)\n\t                                          return client.nfs.update_entry(entry, fields);\n\t                                      else\n\t                                          return client.nfs.add_entry(fields);\n\t                                  }\n\t                              }\n\t                            });\n\t            }\n\t\n\t            if (entry) {\n\t                client.nfs.entry_users(entry)\n\t                    .done(function (users) {\n\t                        show(users.length > 0);\n\t                    })\n\t                    .fail(function () {\n\t                        show(false);\n\t                    });\n\t            } else\n\t                show(false);\n\t        }\n\t\n\t        $('#storage').on('click', '[data-action=\"mount-edit\"]', function () {\n\t            var arg = $(this).attr('data-arg');\n\t            var entry = client.nfs.entries[arg];\n\t            if (entry)\n\t                nfs_fstab_dialog(entry);\n\t            nfs_disarm();\n\t            return false;\n\t        });\n\t\n\t        $('#storage').on('click', '[data-action=\"mount-add\"]', function () {\n\t            nfs_fstab_dialog(null);\n\t            return false;\n\t        });\n\t\n\t        $('#storage').on('click', '[data-action=\"mount-remove\"]', function () {\n\t            var arg = $(this).attr('data-arg');\n\t            var entry = client.nfs.entries[arg];\n\t            client.nfs.remove_entry(entry)\n\t                .fail(function (error) {\n\t                    nfs_busy_dialog(_(\"Unable to remove mount\"),\n\t                                    entry, error,\n\t                                    _(\"Stop and remove\"),\n\t                                    function (users) {\n\t                                        return client.nfs.stop_and_remove_entry(users, entry);\n\t                                    });\n\t                });\n\t            nfs_disarm();\n\t            return false;\n\t        });\n\t\n\t        $(client.nfs).on('changed', render_nfs_mounts);\n\t\n\t        function render_jobs() {\n\t            $('#jobs').amend(jobs.render());\n\t            permissions.update();\n\t        }\n\t\n\t        $(client).on('changed', render_jobs);\n\t\n\t        function plot_setup(flot) {\n\t            var axes = flot.getAxes();\n\t            if (axes.yaxis.datamax < 100000)\n\t                axes.yaxis.options.max = 100000;\n\t            else\n\t                axes.yaxis.options.max = null;\n\t            axes.yaxis.options.min = 0;\n\t        }\n\t\n\t        function make_plot_post(unit) {\n\t            return function (flot) {\n\t                var axes = flot.getAxes();\n\t                $(unit).text(plot.bytes_per_sec_tick_unit(axes.yaxis));\n\t            };\n\t        }\n\t\n\t        function highlight_drive(event, dev) {\n\t            cur_highlight = dev;\n\t            render_drives();\n\t        }\n\t\n\t        var read_plot_data = {\n\t            direct: \"disk.dev.read_bytes\",\n\t            internal: \"block.device.read\",\n\t            units: \"bytes\",\n\t            derive: \"rate\",\n\t            threshold: 1000\n\t        };\n\t\n\t        var read_plot_options = plot.plot_simple_template();\n\t        $.extend(read_plot_options.yaxis, { ticks: plot.memory_ticks,\n\t                                            tickFormatter: plot.format_bytes_per_sec_tick_no_unit\n\t                                          });\n\t        $.extend(read_plot_options.grid,  { hoverable: true,\n\t                                            autoHighlight: false\n\t                                          });\n\t        read_plot_options.setup_hook = plot_setup;\n\t        read_plot_options.post_hook = make_plot_post(\"#storage-reading-unit\");\n\t        var read_plot = plot.plot($(\"#storage-reading-graph\"), 300);\n\t        read_plot.set_options(read_plot_options);\n\t        read_series = read_plot.add_metrics_stacked_instances_series(read_plot_data, { });\n\t        read_plot.start_walking();\n\t        $(read_series).on('hover', highlight_drive);\n\t\n\t        var write_plot_data = {\n\t            direct: \"disk.dev.write_bytes\",\n\t            internal: \"block.device.written\",\n\t            units: \"bytes\",\n\t            derive: \"rate\",\n\t            threshold: 1000\n\t        };\n\t\n\t        var write_plot_options = plot.plot_simple_template();\n\t        $.extend(write_plot_options.yaxis, { ticks: plot.memory_ticks,\n\t                                             tickFormatter: plot.format_bytes_per_sec_tick_no_unit\n\t                                           });\n\t        $.extend(write_plot_options.grid,  { hoverable: true,\n\t                                             autoHighlight: false\n\t                                           });\n\t        write_plot_options.setup_hook = plot_setup;\n\t        write_plot_options.post_hook = make_plot_post(\"#storage-writing-unit\");\n\t        var write_plot = plot.plot($(\"#storage-writing-graph\"), 300);\n\t        write_plot.set_options(write_plot_options);\n\t        write_series = write_plot.add_metrics_stacked_instances_series(write_plot_data, { });\n\t        write_plot.start_walking();\n\t        $(write_series).on('hover', highlight_drive);\n\t\n\t        $(window).on('resize', function () {\n\t            read_plot.resize();\n\t            write_plot.resize();\n\t        });\n\t\n\t        var plot_controls = plot.setup_plot_controls($('#storage'), $('#storage-graph-toolbar'));\n\t        plot_controls.reset([ read_plot, write_plot ]);\n\t\n\t        render_mdraids();\n\t        render_vgroups();\n\t        render_iscsi_sessions();\n\t        render_drives();\n\t        render_others();\n\t        render_mounts();\n\t        render_nfs_mounts();\n\t        render_jobs();\n\t\n\t        $('#storage-log').append(\n\t            journal.logbox([ \"_SYSTEMD_UNIT=storaged.service\", \"+\",\n\t                            \"_SYSTEMD_UNIT=udisks2.service\", \"+\",\n\t                            \"_SYSTEMD_UNIT=dm-event.service\", \"+\",\n\t                            \"_SYSTEMD_UNIT=smartd.service\", \"+\",\n\t                            \"_SYSTEMD_UNIT=multipathd.service\"\n\t                          ],\n\t                          10));\n\t\n\t        $('#create-mdraid').on('click', function () {\n\t            dialog.open({ Title: _(\"Create RAID Device\"),\n\t                          Fields: [\n\t                              { TextInput: \"name\",\n\t                                Title: _(\"Name\"),\n\t                              },\n\t                              { SelectOne: \"level\",\n\t                                Title: _(\"RAID Level\"),\n\t                                Options: [\n\t                                    { value: \"raid0\",  Title: _(\"RAID 0 (Stripe)\") },\n\t                                    { value: \"raid1\",  Title: _(\"RAID 1 (Mirror)\") },\n\t                                    { value: \"raid4\",  Title: _(\"RAID 4 (Dedicated Parity)\") },\n\t                                    { value: \"raid5\",  Title: _(\"RAID 5 (Distributed Parity)\"), selected: true },\n\t                                    { value: \"raid6\",  Title: _(\"RAID 6 (Double Distributed Parity)\") },\n\t                                    { value: \"raid10\", Title: _(\"RAID 10 (Stripe of Mirrors)\") }\n\t                                ]\n\t                              },\n\t                              { SelectOne: \"chunk\",\n\t                                Title: _(\"Chunk Size\"),\n\t                                Options: [\n\t                                    { value: \"4\", Title: _(\"4 KiB\") },\n\t                                    { value: \"8\", Title: _(\"8 KiB\") },\n\t                                    { value: \"16\", Title: _(\"16 KiB\") },\n\t                                    { value: \"32\", Title: _(\"32 KiB\") },\n\t                                    { value: \"64\", Title: _(\"64 KiB\") },\n\t                                    { value: \"128\", Title: _(\"128 KiB\") },\n\t                                    { value: \"512\", Title: _(\"512 KiB\"), selected: true },\n\t                                    { value: \"1024\", Title: _(\"1 MiB\") },\n\t                                    { value: \"2048\", Title: _(\"2 MiB\") }\n\t                                ],\n\t                                visible: function (vals) {\n\t                                    return vals.level != \"raid1\";\n\t                                }\n\t                              },\n\t                              { SelectMany: \"disks\",\n\t                                Title: _(\"Disks\"),\n\t                                Options: utils.get_available_spaces(client).map(utils.available_space_to_option),\n\t                                EmptyWarning: _(\"No disks are available.\"),\n\t                                validate: function (disks, vals) {\n\t                                    var disks_needed = vals.level == \"raid6\"? 4 : 2;\n\t                                    if (disks.length < disks_needed)\n\t                                        return cockpit.format(_(\"At least $0 disks are needed.\"),\n\t                                                              disks_needed);\n\t                                }\n\t                              }\n\t                          ],\n\t                          Action: {\n\t                              Title: _(\"Create\"),\n\t                              action: function (vals) {\n\t                                  return utils.prepare_available_spaces(client, vals.disks).then(function () {\n\t                                      var paths = Array.prototype.slice.call(arguments);\n\t                                      return client.manager.MDRaidCreate(paths, vals.level,\n\t                                                                         vals.name, (vals.chunk || 0) * 1024,\n\t                                                                         { });\n\t                                  });\n\t                              }\n\t                          }\n\t                        });\n\t        });\n\t\n\t        $('#create-volume-group').on('click', function () {\n\t            function find_vgroup(name) {\n\t                for (var p in client.vgroups) {\n\t                    if (client.vgroups[p].Name == name)\n\t                        return client.vgroups[p];\n\t                }\n\t                return null;\n\t            }\n\t\n\t            var name;\n\t            for (var i = 0; i < 1000; i++) {\n\t                name = \"vgroup\" + i.toFixed();\n\t                if (!find_vgroup(name))\n\t                    break;\n\t            }\n\t\n\t            dialog.open({ Title: _(\"Create Volume Group\"),\n\t                          Fields: [\n\t                              { TextInput: \"name\",\n\t                                Title: _(\"Name\"),\n\t                                Value: name,\n\t                                validate: utils.validate_lvm2_name\n\t                              },\n\t                              { SelectMany: \"disks\",\n\t                                Title: _(\"Disks\"),\n\t                                Options: utils.get_available_spaces(client).map(utils.available_space_to_option),\n\t                                EmptyWarning: _(\"No disks are available.\"),\n\t                                validate: function (disks) {\n\t                                    if (disks.length === 0)\n\t                                        return _(\"At least one disk is needed.\");\n\t                                }\n\t                              }\n\t                          ],\n\t                          Action: {\n\t                              Title: _(\"Create\"),\n\t                              action: function (vals, dialog) {\n\t                                  return utils.prepare_available_spaces(client, vals.disks).then(function () {\n\t                                      var paths = Array.prototype.slice.call(arguments);\n\t                                      return client.manager_lvm2.VolumeGroupCreate(vals.name, paths, { });\n\t                                  });\n\t                              }\n\t                          }\n\t                        });\n\t        });\n\t\n\t        function iscsi_discover() {\n\t            dialog.open({ Title: _(\"Add iSCSI Portal\"),\n\t                          Fields: [\n\t                              { TextInput: \"address\",\n\t                                Title: _(\"Server Address\"),\n\t                                validate: function (val) {\n\t                                    if (val === \"\")\n\t                                        return _(\"Server address cannot be empty.\");\n\t                                }\n\t                              },\n\t                              { TextInput: \"username\",\n\t                                Title: _(\"Username\")\n\t\n\t                              },\n\t                              { PassInput: \"password\",\n\t                                Title: _(\"Password\")\n\t                              }\n\t                          ],\n\t                          Action: {\n\t                              Title: _(\"Next\"),\n\t                              action: function (vals, dialog) {\n\t                                  var dfd = $.Deferred();\n\t\n\t                                  var options = { };\n\t                                  if (vals.username || vals.password) {\n\t                                      options.username = { t: 's', v: vals.username };\n\t                                      options.password = { t: 's', v: vals.password };\n\t                                  }\n\t\n\t                                  var cancelled = false;\n\t                                  client.manager_iscsi.call('DiscoverSendTargets',\n\t                                                            [ vals.address,\n\t                                                              0,\n\t                                                              options\n\t                                                            ]).\n\t                                      done(function (results) {\n\t                                          if (!cancelled) {\n\t                                              dfd.resolve();\n\t                                              iscsi_add(vals, results[0]);\n\t                                          }\n\t                                      }).\n\t                                      fail(function (error) {\n\t                                          if (!cancelled)\n\t                                              dfd.reject(error);\n\t                                      });\n\t\n\t                                  var promise = dfd.promise();\n\t                                  promise.cancel = function () {\n\t                                      cancelled = true;\n\t                                      dfd.reject();\n\t                                  };\n\t                                  return promise;\n\t                              },\n\t                              failure_filter: function (vals, err) {\n\t                                  if (!err)\n\t                                      return err;\n\t\n\t                                  // HACK - https://github.com/storaged-project/storaged/issues/26\n\t                                  if (err.message.indexOf(\"initiator failed authorization\") != -1)\n\t                                      return [ { field: \"username\",\n\t                                                 message: null,\n\t                                               },\n\t                                               { field: \"password\",\n\t                                                 message: _(\"Invalid username or password\"),\n\t                                               }\n\t                                             ];\n\t                                  else if (err.message.indexOf(\"cannot resolve host name\") != -1)\n\t                                      return { field: \"address\",\n\t                                               message: _(\"Unknown host name\")\n\t                                             };\n\t                                  else if (err.message.indexOf(\"connection login retries\") != -1)\n\t                                      return { field: \"address\",\n\t                                               message: _(\"Unable to reach server\")\n\t                                             };\n\t                                  else\n\t                                      return err;\n\t                              }\n\t                          }\n\t                        });\n\t        }\n\t\n\t        function iscsi_login(target, cred_vals) {\n\t            var options = {\n\t                'node.startup': { t: 's', v: \"automatic\" }\n\t            };\n\t            if (cred_vals.username || cred_vals.password) {\n\t                options.username = { t: 's', v: cred_vals.username };\n\t                options.password = { t: 's', v: cred_vals.password };\n\t            }\n\t            return client.manager_iscsi.call('Login',\n\t                                             [ target[0],\n\t                                               target[1],\n\t                                               target[2],\n\t                                               target[3],\n\t                                               target[4],\n\t                                               options\n\t                                             ]);\n\t        }\n\t\n\t        function iscsi_add(discover_vals, nodes) {\n\t            var target_rows = nodes.map(function (n) {\n\t                return { Columns: [ n[0], n[2], n[3] ],\n\t                         value: n\n\t                       };\n\t            });\n\t            dialog.open({ Title: cockpit.format(_(\"Available targets on $0\"),\n\t                                                discover_vals.address),\n\t                          Fields: [\n\t                              { SelectRow: \"target\",\n\t                                Title: _(\"Targets\"),\n\t                                Headers: [ _(\"Name\"), _(\"Address\"),_(\"Port\") ],\n\t                                Rows: target_rows\n\t                              }\n\t                          ],\n\t                          Action: {\n\t                              Title: _(\"Add\"),\n\t                              action: function (vals) {\n\t                                  return iscsi_login(vals.target, discover_vals);\n\t                              },\n\t                              failure_filter: function (vals, err) {\n\t                                  // HACK - https://github.com/storaged-project/storaged/issues/26\n\t                                  if (err.message.indexOf(\"authorization\") != -1)\n\t                                      iscsi_add_with_creds(discover_vals, vals);\n\t                                  else\n\t                                      return err;\n\t                              }\n\t                          }\n\t                        });\n\t        }\n\t\n\t        function iscsi_add_with_creds(discover_vals, login_vals) {\n\t            dialog.open({ Title: _(\"Authentication required\"),\n\t                          Fields: [\n\t                              { TextInput: \"username\",\n\t                                Title: _(\"Username\"),\n\t                                Value: discover_vals.username\n\t                              },\n\t                              { PassInput: \"password\",\n\t                                Title: _(\"Password\"),\n\t                                Value: discover_vals.password\n\t                              }\n\t                          ],\n\t                          Action: {\n\t                              Title: _(\"Add\"),\n\t                              action: function (vals) {\n\t                                  return iscsi_login(login_vals.target, vals);\n\t                              },\n\t                              failure_filter: function (vals, err) {\n\t                                  // HACK - https://github.com/storaged-project/storaged/issues/26\n\t                                  if (err.message.indexOf(\"authorization\") != -1)\n\t                                      return [ { field: \"username\",\n\t                                                 message: null,\n\t                                               },\n\t                                               { field: \"password\",\n\t                                                 message: _(\"Invalid username or password\"),\n\t                                               }\n\t                                             ];\n\t                                  else\n\t                                      return err;\n\t                              }\n\t                          }\n\t                        });\n\t        }\n\t\n\t        function iscsi_remove(path) {\n\t            var session = client.iscsi_sessions[path];\n\t            if (!session)\n\t                return;\n\t\n\t            var options = {\n\t                'node.startup': { t: 's', v: \"manual\" }\n\t            };\n\t\n\t            session.Logout(options).\n\t                fail(function (error) {\n\t                    $('#error-popup-title').text(_(\"Error\"));\n\t                    $('#error-popup-message').text(error.toString());\n\t                    $('#error-popup').modal('show');\n\t                });\n\t        }\n\t\n\t        function iscsi_change_name() {\n\t            client.manager_iscsi.call('GetInitiatorName').\n\t                done(function (results) {\n\t                    var name = results[0];\n\t                    dialog.open({ Title: _(\"Change iSCSI Initiator Name\"),\n\t                                  Fields: [\n\t                                      { TextInput: \"name\",\n\t                                        Title: _(\"Name\"),\n\t                                        Value: name\n\t                                      }\n\t                                  ],\n\t                                  Action: {\n\t                                      Title: _(\"Change\"),\n\t                                      action: function (vals) {\n\t                                          return client.manager_iscsi.call('SetInitiatorName',\n\t                                                                           [ vals.name,\n\t                                                                             { }\n\t                                                                           ]);\n\t                                      }\n\t                                  }\n\t                                });\n\t                });\n\t        }\n\t\n\t        $('#storage').on('click', '[data-action=\"add-iscsi-portal\"]', function () {\n\t            iscsi_discover();\n\t        });\n\t\n\t        $('#storage').on('click', '[data-action=\"edit-iscsi\"]', function () {\n\t            iscsi_change_name();\n\t        });\n\t\n\t        $('#storage').on('click', '[data-iscsi-session-remove]', function () {\n\t            utils.reset_arming_zone($(this));\n\t            iscsi_remove($(this).attr('data-iscsi-session-remove'));\n\t        });\n\t\n\t        function hide() {\n\t            $('#storage').hide();\n\t        }\n\t\n\t        function show() {\n\t            $('#storage').show();\n\t            read_plot.resize();\n\t            write_plot.resize();\n\t        }\n\t\n\t        return {\n\t            show: show,\n\t            hide: hide\n\t        };\n\t    }\n\t\n\t    module.exports = {\n\t        init: init_overview\n\t    };\n\t}());\n\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2014 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\tvar $ = __webpack_require__(6);\n\tvar cockpit = __webpack_require__(7);\n\t\n\t__webpack_require__(19);\n\t__webpack_require__(20);\n\t__webpack_require__(21);\n\t\n\tvar plotter = { };\n\t\n\tvar C_ = cockpit.gettext;\n\t\n\t/* A thin abstraction over flot and metrics channels.  It mostly\n\t * shields you from hairy array acrobatics and having to know when it\n\t * is safe or required to create the flot object.\n\t *\n\t *\n\t * - plot = plotter.plot(element, x_range, [x_stop])\n\t *\n\t * Creates a 'plot' object attached to the given DOM element.  It will\n\t * show 'x_range' seconds worth of samples, until 'x_stop'.\n\t *\n\t * If 'x_stop' is undefined, the plot will show the last 'x_range'\n\t * seconds until now and walking will work as expected (see below).\n\t *\n\t * If 'x_stop' is not undefined, it should be the number of seconds\n\t * since the epoch.\n\t *\n\t * - plot.start_walking()\n\t *\n\t * Scroll towards the future.\n\t *\n\t * - plot.stop_walking()\n\t *\n\t * Stop automatic scrolling.\n\t *\n\t * - plot.refresh()\n\t *\n\t * Draw the plot.\n\t *\n\t * - plot.resize()\n\t *\n\t * Resize the plot to fit into its DOM element.  This will\n\t * automatically refresh the plot.  You should also call this function\n\t * when 'element' has changed visibility as that might affect its\n\t * size.\n\t *\n\t * - plot.set_options(options)\n\t *\n\t * Set the global flot options.  You need to refresh the plot\n\t * afterwards.\n\t *\n\t * In addition to the flot options, you can also set the 'setup_hook'\n\t * field to a function.  This function will be called between\n\t * flot.setData() and flot.draw() and can be used to adjust the axes\n\t * limits, for example.  It is called with the flot object as its only\n\t * parameter.\n\t *\n\t * Setting the 'post_hook' to a function will call that function after\n\t * each refresh of the plot.  This is used to decorate a plot with the\n\t * unit strings, for example.\n\t *\n\t * - options = plot.get_options()\n\t *\n\t * Get the global flot options.  You can modify the object and then\n\t * pass it to set_options.  Don't forget to refresh the plot.\n\t *\n\t * - plot.reset(x_range, [x_stop])\n\t *\n\t * Resets the range of the plot.  All current sources are reinitialzed\n\t * but keep their current samples.\n\t *\n\t * - plot.destroy()\n\t *\n\t * Resets the plot to be empty.  The plot will disappear completely\n\t * from the DOM, including the grid.\n\t *\n\t * - series = plot.add_metrics_sum_series(desc, options)\n\t *\n\t * Adds a single series into the plot that is fed by a metrics\n\t * channel.  The series will have the given flot options.  The plot\n\t * will automatically refresh as data becomes available from the\n\t * channel.\n\t *\n\t * The single value for the series is computed by summing the values\n\t * for all metrics and all instances that are delivered by the\n\t * channel.\n\t *\n\t * The 'desc' argument determines the channel options:\n\t *\n\t *   metrics:         An array with the names of all metrics to monitor.\n\t *   units:           The common units string for all metrics.\n\t *   instances:       A optional list of instances to include.\n\t *   omit_instances:  A optional list of instances to omit.\n\t *   factor:          A factor to apply to the final sum of all samples.\n\t *\n\t * - series.options\n\t *\n\t * Direct access to the series options.  You need to refresh the plot\n\t * after changing it.\n\t *\n\t * - series.move_to_front()\n\t *\n\t * Move the series in front of all other series.  You need to refresh\n\t * the plot to see the effect immediately.\n\t *\n\t * - series.remove()\n\t *\n\t * Removes the series from its plot.  The plot will be refreshed.\n\t *\n\t * - $(series).on('hover', function (event, val) { ... })\n\t *\n\t * This event is triggered when the user hovers over the series ('val'\n\t * == true), or stops hovering over it ('val' == false).\n\t */\n\t\n\tplotter.plot = function plot(element, x_range_seconds, x_stop_seconds) {\n\t    var options = { };\n\t    var result = { };\n\t\n\t    var series = [ ];\n\t    var flot_data = [ ];\n\t    var flot = null;\n\t\n\t    var interval;\n\t    var grid;\n\t\n\t    function refresh_now() {\n\t        if (element.height() === 0 || element.width() === 0)\n\t            return;\n\t\n\t        if (flot === null)\n\t            flot = $.plot(element, flot_data, options);\n\t\n\t        flot.setData(flot_data);\n\t        var axes = flot.getAxes();\n\t\n\t        /* Walking and fetching samples are not synchronized, which\n\t         * means that a walk step might reveal a sample that hasn't\n\t         * been fetched yet.  To reduce flicker, we cut off one extra\n\t         * sample at the end.\n\t         */\n\t        axes.xaxis.options.min = grid.beg * interval;\n\t        axes.xaxis.options.max = (grid.end - 2) * interval;\n\t        if (options.setup_hook)\n\t            options.setup_hook(flot);\n\t\n\t        /* This makes sure that the axes are displayed even for an\n\t         * empty plot.\n\t         */\n\t        axes.xaxis.show = true;\n\t        axes.xaxis.used = true;\n\t        axes.yaxis.show = true;\n\t        axes.yaxis.used = true;\n\t\n\t        flot.setupGrid();\n\t        flot.draw();\n\t\n\t        if (options.post_hook)\n\t            options.post_hook(flot);\n\t    }\n\t\n\t    var refresh_pending = false;\n\t\n\t    function refresh() {\n\t        if (!refresh_pending) {\n\t            refresh_pending = true;\n\t            window.setTimeout(function () {\n\t                refresh_pending = false;\n\t                refresh_now();\n\t            }, 0);\n\t        }\n\t    }\n\t\n\t    function start_walking() {\n\t        grid.walk();\n\t    }\n\t\n\t    function stop_walking() {\n\t        grid.move(grid.beg, grid.end);\n\t    }\n\t\n\t    var sync_suppressed = 0;\n\t\n\t    function reset(x_range_seconds, x_stop_seconds) {\n\t        if (flot)\n\t            flot.clearSelection(true);\n\t\n\t        // Fill the plot with about 1000 samples, but don't sample\n\t        // faster than once per second.\n\t        //\n\t        // TODO - do this based on the actual size of the plot.\n\t\n\t        interval = Math.ceil(x_range_seconds / 1000) * 1000;\n\t\n\t        var x_offset;\n\t        if (x_stop_seconds !== undefined)\n\t            x_offset = (new Date().getTime()) - x_stop_seconds * 1000;\n\t        else\n\t            x_offset = 0;\n\t\n\t        var beg = -Math.ceil((x_range_seconds * 1000 + x_offset) / interval);\n\t        var end = -Math.floor(x_offset / interval);\n\t\n\t        if (grid && grid.interval == interval) {\n\t            grid.move(beg, end);\n\t        } else {\n\t            if (grid)\n\t                grid.close();\n\t            grid = cockpit.grid(interval, beg, end);\n\t            sync_suppressed++;\n\t            for (var i = 0; i < series.length; i++)\n\t                series[i].reset();\n\t            sync_suppressed--;\n\t            sync();\n\t\n\t            $(grid).on('notify', function (event, index, count) {\n\t                refresh();\n\t            });\n\t        }\n\t    }\n\t\n\t    function sync() {\n\t        if (sync_suppressed === 0)\n\t            grid.sync();\n\t    }\n\t\n\t    function destroy() {\n\t        grid.close();\n\t        for (var i = 0; i < series.length; i++)\n\t            series[i].stop();\n\t\n\t        options = { };\n\t        series = [ ];\n\t        flot_data = [ ];\n\t        flot = null;\n\t        $(element).empty();\n\t        $(element).data(\"flot_data\", null);\n\t    }\n\t\n\t    function resize() {\n\t        if (element.height() === 0 || element.width() === 0)\n\t            return;\n\t        if (flot)\n\t            flot.resize();\n\t        refresh();\n\t    }\n\t\n\t    function set_options(opts) {\n\t        options = opts;\n\t        flot = null;\n\t    }\n\t\n\t    function get_options() {\n\t        return options;\n\t    }\n\t\n\t    function add_metrics_sum_series(desc, opts) {\n\t        var channel = null;\n\t\n\t        var self = {\n\t            options: opts,\n\t            move_to_front: move_to_front,\n\t            remove: remove\n\t        };\n\t\n\t        series.push({\n\t            stop: stop,\n\t            reset: reset_series,\n\t            hover_hit: hover_hit,\n\t            hover: hover\n\t        });\n\t\n\t        function stop() {\n\t            if (channel)\n\t                channel.close();\n\t        }\n\t\n\t        function add_series() {\n\t            flot_data.push(opts);\n\t        }\n\t\n\t        function remove_series() {\n\t            var pos = flot_data.indexOf(opts);\n\t            if (pos >= 0)\n\t                flot_data.splice(pos, 1);\n\t        }\n\t\n\t        function move_to_front() {\n\t            var pos = flot_data.indexOf(opts);\n\t            if (pos >= 0) {\n\t                flot_data.splice(pos, 1);\n\t                flot_data.push(opts);\n\t            }\n\t        }\n\t\n\t        function remove() {\n\t            stop();\n\t            remove_series();\n\t            refresh();\n\t        }\n\t\n\t        function build_metric(n) {\n\t            return { name: n, units: desc.units, derive: desc.derive };\n\t        }\n\t\n\t        var chanopts_list = [ ];\n\t\n\t        if (desc.direct) {\n\t            chanopts_list.push({ source: \"direct\",\n\t                                 archive_source: \"pcp-archive\",\n\t                                 metrics: desc.direct.map(build_metric),\n\t                                 instances: desc.instances,\n\t                                 \"omit-instances\": desc['omit-instances'],\n\t                                 host: desc.host\n\t                               });\n\t        }\n\t\n\t        if (desc.internal) {\n\t            chanopts_list.push({ source: \"internal\",\n\t                                 metrics: desc.internal.map(build_metric),\n\t                                 instances: desc.instances,\n\t                                 \"omit-instances\": desc['omit-instances'],\n\t                                 host: desc.host\n\t                               });\n\t        }\n\t\n\t        function flat_sum(val) {\n\t            var i, sum;\n\t\n\t            if (!val)\n\t                return 0;\n\t            if (val.length !== undefined) {\n\t                sum = 0;\n\t                for (i = 0; i < val.length; i++)\n\t                    sum += flat_sum(val[i]);\n\t                return sum;\n\t            }\n\t            return val;\n\t        }\n\t\n\t        function reset_series() {\n\t            if (channel)\n\t                channel.close();\n\t\n\t            channel = cockpit.metrics(interval, chanopts_list);\n\t\n\t            var metrics_row = grid.add(channel, [ ]);\n\t            var factor = desc.factor || 1;\n\t            opts.data = grid.add(function(row, x, n) {\n\t                for (var i = 0; i < n; i++)\n\t                    row[x + i] = [(grid.beg + x + i)*interval, flat_sum(metrics_row[x + i]) * factor];\n\t            });\n\t\n\t            function check_archives() {\n\t                if (channel.archives && !result.archives) {\n\t                    result.archives = true;\n\t                    $(result).triggerHandler(\"changed\");\n\t                }\n\t            }\n\t\n\t            $(channel).on('changed', check_archives);\n\t            check_archives();\n\t\n\t            sync();\n\t        }\n\t\n\t        function hover_hit(pos, item) {\n\t            return !!(item && (item.series.data == opts.data));\n\t        }\n\t\n\t        function hover(val) {\n\t            $(self).triggerHandler('hover', [ val ]);\n\t        }\n\t\n\t        reset_series();\n\t        add_series();\n\t\n\t        return self;\n\t    }\n\t\n\t    function add_metrics_stacked_instances_series(desc, opts) {\n\t        var channel = null;\n\t\n\t        var self = {\n\t            add_instance:    add_instance,\n\t            clear_instances: clear_instances\n\t        };\n\t\n\t        series.push({\n\t            stop: stop,\n\t            reset: reset_series,\n\t            hover_hit: hover_hit,\n\t            hover: hover\n\t        });\n\t\n\t        function stop() {\n\t            if (channel)\n\t                channel.close();\n\t        }\n\t\n\t        function build_metric(n) {\n\t            return { name: n, units: desc.units, derive: desc.derive };\n\t        }\n\t\n\t        var chanopts_list = [ ];\n\t\n\t        if (desc.direct) {\n\t            chanopts_list.push({ source: \"direct\",\n\t                                 archive_source: \"pcp-archive\",\n\t                                 metrics: [ build_metric(desc.direct) ],\n\t                                 metrics_path_names: [ \"a\" ],\n\t                                 instances: desc.instances,\n\t                                 \"omit-instances\": desc['omit-instances'],\n\t                                 host: desc.host\n\t                               });\n\t        }\n\t\n\t        if (desc.internal) {\n\t            chanopts_list.push({ source: \"internal\",\n\t                                 metrics: [ build_metric(desc.internal) ],\n\t                                 metrics_path_names: [ \"a\" ],\n\t                                 instances: desc.instances,\n\t                                 \"omit-instances\": desc['omit-instances'],\n\t                                 host: desc.host\n\t                               });\n\t        }\n\t\n\t        var instances = { };\n\t        var last_instance = null;\n\t\n\t        function reset_series() {\n\t            if (channel)\n\t                channel.close();\n\t\n\t            channel = cockpit.metrics(interval, chanopts_list);\n\t\n\t            function check_archives() {\n\t                if (channel.archives && !result.archives) {\n\t                    result.archives = true;\n\t                    $(result).triggerHandler(\"changed\");\n\t                }\n\t            }\n\t\n\t            $(channel).on('changed', check_archives);\n\t            check_archives();\n\t\n\t            sync_suppressed++;\n\t            for (var name in instances)\n\t                instances[name].reset();\n\t            sync_suppressed--;\n\t            sync();\n\t        }\n\t\n\t        function add_instance(name, selector) {\n\t            if (instances[name])\n\t                return;\n\t\n\t            var instance_data = $.extend({ selector: selector }, opts);\n\t            var factor = desc.factor || 1;\n\t            var threshold = desc.threshold || 0;\n\t            var metrics_row;\n\t\n\t            var last = last_instance;\n\t\n\t            function reset() {\n\t                metrics_row = grid.add(channel, [ \"a\", name ]);\n\t                instance_data.data = grid.add(function(row, x, n) {\n\t                    for (var i = 0; i < n; i++) {\n\t                        var value = (metrics_row[x + i] || 0)*factor;\n\t                        var ts = (grid.beg + x + i)*interval;\n\t                        var floor = 0;\n\t\n\t                        if (last) {\n\t                            if (last.data[x + i][1])\n\t                                floor = last.data[x + i][1];\n\t                            else\n\t                                floor = last.data[x + i][2];\n\t                        }\n\t\n\t                        if (Math.abs(value) > threshold) {\n\t                            row[x + i] = [ ts, floor + value, floor ];\n\t                            if (row[x + i - 1] && row[x + i - 1][1] === null)\n\t                                row[x + i - 1][1] = row[x + i - 1][2];\n\t                        } else {\n\t                            row[x + i] = [ ts, null, floor ];\n\t                            if (row[x + i - 1] && row[x + i - 1][1] !== null)\n\t                                row[x + i - 1][1] = row[x + i - 1][2];\n\t                        }\n\t                    }\n\t                });\n\t                sync();\n\t            }\n\t\n\t            function remove() {\n\t                grid.remove(metrics_row);\n\t                grid.remove(instance_data.data);\n\t                var pos = flot_data.indexOf(instance_data);\n\t                if (pos >= 0)\n\t                    flot_data.splice(pos, 1);\n\t            }\n\t\n\t            last_instance = instance_data;\n\t            instances[name] = instance_data;\n\t            instance_data.reset = reset;\n\t            instance_data.remove = remove;\n\t\n\t            reset();\n\t            flot_data.push(instance_data);\n\t        }\n\t\n\t        function clear_instances() {\n\t            for (var i in instances)\n\t                instances[i].remove();\n\t            instances = { };\n\t            last_instance = null;\n\t        }\n\t\n\t        function hover_hit(pos, item) {\n\t            var name, index;\n\t\n\t            if (!grid)\n\t                return false;\n\t\n\t            index = Math.round(pos.x/interval) - grid.beg;\n\t            if (index < 0)\n\t                index = 0;\n\t\n\t            for (name in instances) {\n\t                var d = instances[name].data;\n\t                if (d[index] && d[index][1] && d[index][2] <= pos.y && pos.y <= d[index][1])\n\t                    return instances[name].selector || name;\n\t            }\n\t            return false;\n\t        }\n\t\n\t        function hover(val) {\n\t            $(self).triggerHandler('hover', [ val ]);\n\t        }\n\t\n\t        reset_series();\n\t        return self;\n\t    }\n\t\n\t    var cur_hover_series = null;\n\t    var cur_hover_val = false;\n\t\n\t    function hover(next_hover_series, next_hover_val) {\n\t        if (cur_hover_series != next_hover_series) {\n\t            if (cur_hover_series)\n\t                cur_hover_series.hover(false);\n\t            cur_hover_series = next_hover_series;\n\t            cur_hover_val = next_hover_val;\n\t            if (cur_hover_series)\n\t                cur_hover_series.hover(cur_hover_val);\n\t        } else if (cur_hover_val != next_hover_val) {\n\t            cur_hover_val = next_hover_val;\n\t            if (cur_hover_series)\n\t                cur_hover_series.hover(cur_hover_val);\n\t        }\n\t    }\n\t\n\t    function hover_on(event, pos, item) {\n\t        var next_hover_series = null;\n\t        var next_hover_val = false;\n\t        for (var i = 0; i < series.length; i++) {\n\t            next_hover_val = series[i].hover_hit(pos, item);\n\t            if (next_hover_val) {\n\t                next_hover_series = series[i];\n\t                break;\n\t            }\n\t        }\n\t\n\t        hover(next_hover_series, next_hover_val);\n\t    }\n\t\n\t    function hover_off(event) {\n\t        hover(null, false);\n\t    }\n\t\n\t    function selecting(event, ranges) {\n\t        if (ranges)\n\t            $(result).triggerHandler(\"zoomstart\", [ ]);\n\t    }\n\t\n\t    function selected(event, ranges) {\n\t        flot.clearSelection(true);\n\t        $(result).triggerHandler(\"zoom\", [ (ranges.xaxis.to - ranges.xaxis.from) / 1000, ranges.xaxis.to / 1000]);\n\t    }\n\t\n\t    $(element).on(\"plothover\", hover_on);\n\t    $(element).on(\"mouseleave\", hover_off);\n\t    $(element).on(\"plotselecting\", selecting);\n\t    $(element).on(\"plotselected\", selected);\n\t\n\t    // for testing\n\t    $(element).data(\"flot_data\", flot_data);\n\t\n\t    reset(x_range_seconds, x_stop_seconds);\n\t\n\t    $.extend(result, {\n\t        archives: false, /* true if any archive data found */\n\t        start_walking: start_walking,\n\t        stop_walking: stop_walking,\n\t        refresh: refresh,\n\t        reset: reset,\n\t        destroy: destroy,\n\t        resize: resize,\n\t        set_options: set_options,\n\t        get_options: get_options,\n\t        add_metrics_sum_series: add_metrics_sum_series,\n\t        add_metrics_stacked_instances_series: add_metrics_stacked_instances_series\n\t    });\n\t\n\t    return result;\n\t};\n\t\n\tvar plot_colors = [ \"#006bb4\",\n\t                    \"#008ff0\",\n\t                    \"#2daaff\",\n\t                    \"#69c2ff\",\n\t                    \"#a5daff\",\n\t                    \"#e1f3ff\",\n\t                    \"#00243c\",\n\t                    \"#004778\"\n\t                  ];\n\t\n\tplotter.plot_simple_template = function simple() {\n\t    return {\n\t        colors: plot_colors,\n\t        legend: { show: false },\n\t        series: { shadowSize: 0,\n\t            lines: {\n\t                lineWidth: 2.0,\n\t                fill: 0.4\n\t            }\n\t        },\n\t        xaxis: { tickLength: 0,\n\t                 mode: \"time\",\n\t                 tickFormatter: plotter.format_date_tick,\n\t                 minTickSize: [ 1, 'minute' ],\n\t                 reserveSpace: false\n\t               },\n\t        yaxis: { tickColor: \"#d1d1d1\",\n\t                 min: 0\n\t               },\n\t        /*\n\t         * The point radius influences the margin around the grid even if no points\n\t         * are plotted. We don't want any margin, so we set the radius to zero.\n\t         */\n\t        points: {\n\t            radius: 0\n\t        },\n\t        grid: {\n\t            borderWidth: 1,\n\t            aboveData: false,\n\t            color: \"black\",\n\t            borderColor: $.color.parse(\"black\").scale('a', 0.22).toString(),\n\t            labelMargin: 0\n\t        }\n\t    };\n\t};\n\t\n\tplotter.memory_ticks = function memory_ticks(opts) {\n\t    // Not more than 5 ticks, nicely rounded to powers of 2.\n\t    var size = Math.pow(2.0, Math.ceil(Math.log(opts.max/5)/Math.LN2));\n\t    var ticks = [ ];\n\t    for (var t = 0; t < opts.max; t += size)\n\t        ticks.push(t);\n\t    return ticks;\n\t};\n\t\n\tvar month_names = [\n\t    C_(\"month-name\", 'Jan'),\n\t    C_(\"month-name\", 'Feb'),\n\t    C_(\"month-name\", 'Mar'),\n\t    C_(\"month-name\", 'Apr'),\n\t    C_(\"month-name\", 'May'),\n\t    C_(\"month-name\", 'Jun'),\n\t    C_(\"month-name\", 'Jul'),\n\t    C_(\"month-name\", 'Aug'),\n\t    C_(\"month-name\", 'Sep'),\n\t    C_(\"month-name\", 'Oct'),\n\t    C_(\"month-name\", 'Nov'),\n\t    C_(\"month-name\", 'Dec')\n\t];\n\t\n\tplotter.format_date_tick = function format_date_tick(val, axis) {\n\t    function pad(n) {\n\t        var str = n.toFixed();\n\t        if(str.length == 1)\n\t            str = '0' + str;\n\t        return str;\n\t    }\n\t\n\t    var year_index = 0;\n\t    var month_index = 1;\n\t    var day_index = 2;\n\t    var hour_minute_index = 3;\n\t\n\t    var begin;\n\t    var end;\n\t\n\t    // Determine the smallest unit according to the steps from one\n\t    // tick to the next.\n\t\n\t    var size = axis.tickSize[1];\n\t    if (size == \"minute\" || size == \"hour\")\n\t        end = hour_minute_index;\n\t    else if (size == \"day\")\n\t        end = day_index;\n\t    else if (size == \"month\")\n\t        end = month_index;\n\t    else\n\t        end = year_index;\n\t\n\t    // Determine biggest unit according to how far away the left edge\n\t    // of the graph is from 'now'.\n\t\n\t    var n = new Date();\n\t    var l = new Date(axis.min);\n\t\n\t    begin = year_index;\n\t    if (l.getFullYear() == n.getFullYear()) {\n\t        begin = month_index;\n\t        if (l.getMonth() == n.getMonth()) {\n\t            begin = day_index;\n\t            if (l.getDate() == n.getDate())\n\t                begin = hour_minute_index;\n\t        }\n\t    }\n\t\n\t    // Adjust so that it all makes sense\n\t\n\t    if (begin > end)\n\t        begin = end;\n\t    if (begin == day_index)\n\t        begin = month_index;\n\t\n\t    // And render it\n\t\n\t    var d = new Date(val);\n\t    var label = \" \";\n\t\n\t    if (year_index >= begin && year_index <= end)\n\t        label += d.getFullYear().toFixed() + \" \";\n\t    if (month_index >= begin && month_index <= end)\n\t        label += month_names[d.getMonth()] + \" \";\n\t    if (day_index >= begin && day_index <= end)\n\t        label += d.getDate().toFixed() + \" \";\n\t    if (hour_minute_index >= begin && hour_minute_index <= end)\n\t        label += pad(d.getHours()) + ':' + pad(d.getMinutes()) + \" \";\n\t\n\t    return label.substr(0, label.length-1);\n\t};\n\t\n\tplotter.bytes_tick_unit = function bytes_tick_unit(axis) {\n\t    return cockpit.format_bytes(axis.max, 1024, true)[1];\n\t};\n\t\n\tplotter.format_bytes_tick_no_unit = function format_bytes_tick_no_unit(val, axis) {\n\t    return cockpit.format_bytes(val, plotter.bytes_tick_unit(axis), true)[0];\n\t};\n\t\n\tplotter.format_bytes_tick = function format_bytes_tick(val, axis) {\n\t    return cockpit.format_bytes(val, 1024);\n\t};\n\t\n\tplotter.bytes_per_sec_tick_unit = function bytes_per_sec_tick_unit(axis) {\n\t    return cockpit.format_bytes_per_sec(axis.max, 1024, true)[1];\n\t};\n\t\n\tplotter.format_bytes_per_sec_tick_no_unit = function format_bytes_per_sec_tick_no_unit(val, axis) {\n\t    return cockpit.format_bytes_per_sec(val, plotter.bytes_per_sec_tick_unit(axis), true)[0];\n\t};\n\t\n\tplotter.format_bytes_per_sec_tick = function format_bytes_per_sec_tick(val, axis) {\n\t    return cockpit.format_bytes_per_sec(val, 1024);\n\t};\n\t\n\tplotter.bits_per_sec_tick_unit = function bits_per_sec_tick_unit(axis) {\n\t    return cockpit.format_bits_per_sec(axis.max*8, 1000, true)[1];\n\t};\n\t\n\tplotter.format_bits_per_sec_tick_no_unit = function format_bits_per_sec_tick_no_tick(val, axis) {\n\t    return cockpit.format_bits_per_sec(val*8, plotter.bits_per_sec_tick_unit(axis), true)[0];\n\t};\n\t\n\tplotter.format_bits_per_sec_tick = function format_bits_per_sec_tick(val, axis) {\n\t    return cockpit.format_bits_per_sec(val*8, 1000);\n\t};\n\t\n\tplotter.setup_plot_controls = function setup_plot_controls(container, element, plots) {\n\t\n\t    var plot_min_x_range = 5*60;\n\t    var plot_zoom_steps = [ 5*60,  60*60, 6*60*60, 24*60*60, 7*24*60*60, 30*24*60*60, 365*24*60*60 ];\n\t\n\t    var plot_x_range = 5*60;\n\t    var plot_x_stop;\n\t    var zoom_history = [ ];\n\t\n\t    element.find('[data-range]').click(function () {\n\t        zoom_history = [ ];\n\t        plot_x_range = parseInt($(this).attr('data-range'), 10);\n\t        plot_reset();\n\t    });\n\t\n\t    element.find('[data-action=\"goto-now\"]').click(function () {\n\t        plot_x_stop = undefined;\n\t        plot_reset();\n\t    });\n\t\n\t    element.find('[data-action=\"scroll-left\"]').click(function () {\n\t        var step = plot_x_range / 10;\n\t        if (plot_x_stop === undefined)\n\t            plot_x_stop = (new Date()).getTime() / 1000;\n\t        plot_x_stop -= step;\n\t        plot_reset();\n\t    });\n\t\n\t    element.find('[data-action=\"scroll-right\"]').click(function () {\n\t        var step = plot_x_range / 10;\n\t        if (plot_x_stop !== undefined) {\n\t            plot_x_stop += step;\n\t            plot_reset();\n\t        }\n\t    });\n\t\n\t    element.find('[data-action=\"zoom-out\"]').click(function () {\n\t        zoom_plot_out();\n\t    });\n\t\n\t    function zoom_plot_start() {\n\t        if (plot_x_stop === undefined) {\n\t            plots.forEach(function (p) {\n\t                p.stop_walking();\n\t            });\n\t            plot_x_stop = (new Date()).getTime() / 1000;\n\t            update_plot_buttons();\n\t        }\n\t    }\n\t\n\t    function zoom_plot_in(x_range, x_stop) {\n\t        zoom_history.push(plot_x_range);\n\t        plot_x_range = x_range;\n\t        plot_x_stop = x_stop;\n\t        plot_reset();\n\t    }\n\t\n\t    function zoom_plot_out() {\n\t        var r = zoom_history.pop();\n\t        if (r === undefined) {\n\t            var i;\n\t            for (i = 0; i < plot_zoom_steps.length-1; i++) {\n\t                if (plot_zoom_steps[i] > plot_x_range)\n\t                    break;\n\t            }\n\t            r = plot_zoom_steps[i];\n\t        }\n\t        if (plot_x_stop !== undefined)\n\t            plot_x_stop += (r - plot_x_range)/2;\n\t        plot_x_range = r;\n\t        plot_reset();\n\t    }\n\t\n\t    function format_range(seconds) {\n\t        var n;\n\t        if (seconds >= 365*24*60*60) {\n\t            n = Math.ceil(seconds / (365*24*60*60));\n\t            return cockpit.format(cockpit.ngettext(\"$0 year\", \"$0 years\", n), n);\n\t        } else if (seconds >= 30*24*60*60) {\n\t            n = Math.ceil(seconds / (30*24*60*60));\n\t            return cockpit.format(cockpit.ngettext(\"$0 month\", \"$0 months\", n), n);\n\t        } else if (seconds >= 7*24*60*60) {\n\t            n = Math.ceil(seconds / (7*24*60*60));\n\t            return cockpit.format(cockpit.ngettext(\"$0 week\", \"$0 weeks\", n), n);\n\t        } else if (seconds >= 24*60*60) {\n\t            n = Math.ceil(seconds / (24*60*60));\n\t            return cockpit.format(cockpit.ngettext(\"$0 day\", \"$0 days\", n), n);\n\t        } else if (seconds >= 60*60) {\n\t            n = Math.ceil(seconds / (60*60));\n\t            return cockpit.format(cockpit.ngettext(\"$0 hour\", \"$0 hours\", n), n);\n\t        } else {\n\t            n = Math.ceil(seconds / 60);\n\t            return cockpit.format(cockpit.ngettext(\"$0 minute\", \"$0 minutes\", n), n);\n\t        }\n\t    }\n\t\n\t    function update_plot_buttons() {\n\t        element.find('[data-action=\"scroll-right\"]')\n\t            .attr('disabled', plot_x_stop === undefined);\n\t        element.find('[data-action=\"zoom-out\"]')\n\t            .attr('disabled', plot_x_range >= plot_zoom_steps[plot_zoom_steps.length-1]);\n\t    }\n\t\n\t    function update_selection_zooming() {\n\t        var mode;\n\t\n\t        if (container.hasClass('show-zoom-controls') && plot_x_range > plot_min_x_range) {\n\t            container.addClass('show-zoom-cursor');\n\t            mode = \"x\";\n\t        } else {\n\t            container.removeClass('show-zoom-cursor');\n\t            mode = null;\n\t        }\n\t\n\t        plots.forEach(function (p) {\n\t            var options = p.get_options();\n\t            if (!options.selection || options.selection.mode != mode) {\n\t                options.selection = { mode: mode, color: \"#d4edfa\" };\n\t                p.set_options(options);\n\t                p.refresh();\n\t            }\n\t        });\n\t    }\n\t\n\t    function plot_reset() {\n\t        if (plot_x_range < plot_min_x_range) {\n\t            plot_x_stop += (plot_min_x_range - plot_x_range)/2;\n\t            plot_x_range = plot_min_x_range;\n\t        }\n\t        if (plot_x_stop >= (new Date()).getTime() / 1000 - 10)\n\t            plot_x_stop = undefined;\n\t\n\t        element.find('.dropdown-toggle span:first-child').text(format_range(plot_x_range));\n\t\n\t        plots.forEach(function (p) {\n\t            p.stop_walking();\n\t            p.reset(plot_x_range, plot_x_stop);\n\t            p.refresh();\n\t            if (plot_x_stop === undefined)\n\t                p.start_walking();\n\t\n\t            function check_archives() {\n\t                if (p.archives) {\n\t                    container.addClass('show-zoom-controls');\n\t                    update_selection_zooming();\n\t                }\n\t            }\n\t\n\t            $(p).on(\"changed\", check_archives);\n\t            check_archives();\n\t        });\n\t\n\t        update_plot_buttons();\n\t        update_selection_zooming();\n\t    }\n\t\n\t    function reset(p) {\n\t        if (p === undefined)\n\t            p = [ ];\n\t        plots = p;\n\t        plots.forEach(function (p) {\n\t            $(p).on(\"zoomstart\", function (event) { zoom_plot_start(); });\n\t            $(p).on(\"zoom\", function (event, x_range, x_stop) { zoom_plot_in(x_range, x_stop); });\n\t        });\n\t        plot_reset();\n\t    }\n\t\n\t    reset(plots);\n\t\n\t    return {\n\t        reset: reset\n\t    };\n\t};\n\t\n\tfunction setup_plot(graph_id, grid, data, user_options) {\n\t    var options = {\n\t        colors: [ \"#0099d3\" ],\n\t        legend: { show: false },\n\t        series: { shadowSize: 0,\n\t                  lines: { lineWidth: 0.0,\n\t                           fill: 1.0\n\t                         }\n\t                },\n\t        xaxis: { tickFormatter: function() { return \"\"; } },\n\t        yaxis: { tickFormatter: function() { return \"\"; } },\n\t        // The point radius influences\n\t        // the margin around the grid\n\t        // even if no points are plotted.\n\t        // We don't want any margin, so\n\t        // we set the radius to zero.\n\t        points: { radius: 0 },\n\t        grid: { borderWidth: 1,\n\t                aboveData: true,\n\t                color: \"black\",\n\t                borderColor: $.color.parse(\"black\").scale('a', 0.22).toString(),\n\t                labelMargin: 0\n\t              }\n\t    };\n\t\n\t    var plot;\n\t    var running = false;\n\t    var self;\n\t\n\t    $.extend(true, options, user_options);\n\t\n\t    // We put the plot inside its own div so that we can give that div\n\t    // a fixed size which only changes when we can also immediately\n\t    // call plot.resize().  Otherwise, the labels and legends briefly\n\t    // get out of sync during resizing.\n\t\n\t    var outer_div = $(graph_id);\n\t    var inner_div = $('<div/>');\n\t    var starting = null;\n\t    outer_div.empty();\n\t    outer_div.append(inner_div);\n\t\n\t    function sync_divs ()\n\t    {\n\t        inner_div.width(outer_div.width());\n\t        inner_div.height(outer_div.height());\n\t    }\n\t\n\t    // Updating flot options is tricky and somewhat implementation\n\t    // defined.  Different options needs different approaches.  So we\n\t    // just have very specific functions for changing specific options\n\t    // until a pattern emerges.\n\t\n\t    function set_yaxis_max (max) {\n\t        if (plot) {\n\t            plot.getAxes().yaxis.options.max = max;\n\t            refresh ();\n\t        } else {\n\t            options.yaxis.max = max;\n\t        }\n\t    }\n\t\n\t    function start ()\n\t    {\n\t        running = true;\n\t        maybe_start();\n\t    }\n\t\n\t    function maybe_start() {\n\t        if (running && outer_div.width() > 0 && outer_div.height() > 0) {\n\t            if (!plot) {\n\t                sync_divs ();\n\t                plot = $.plot(inner_div, data, options);\n\t            } else\n\t                resize();\n\t\n\t            if (starting)\n\t                window.clearInterval(starting);\n\t        } else if (!starting) {\n\t            starting = window.setInterval(maybe_start, 500);\n\t        }\n\t\n\t    }\n\t\n\t    function stop ()\n\t    {\n\t        running = false;\n\t    }\n\t\n\t    function refresh() {\n\t        if (plot && running) {\n\t            plot.setData(data);\n\t            if (user_options.setup_hook)\n\t                user_options.setup_hook(plot);\n\t            plot.setupGrid();\n\t            plot.draw();\n\t            if (user_options.post_hook)\n\t                user_options.post_hook(plot);\n\t        }\n\t    }\n\t\n\t    function resize() {\n\t        if (plot && running) {\n\t            sync_divs ();\n\t            if (inner_div.width() > 0 && inner_div.height() > 0)\n\t                plot.resize();\n\t            refresh();\n\t        }\n\t    }\n\t\n\t    function destroy () {\n\t        $(self).trigger('destroyed');\n\t        $(window).off('resize', resize);\n\t        $(outer_div).empty();\n\t        plot = null;\n\t    }\n\t\n\t    $(grid).on('notify', refresh);\n\t    $(window).on('resize', resize);\n\t    maybe_start();\n\t\n\t    self = { start: start, stop: stop,\n\t             resize: resize, element: inner_div[0],\n\t             set_yaxis_max: set_yaxis_max,\n\t             destroy: destroy\n\t           };\n\t    return self;\n\t}\n\t\n\tplotter.setup_complicated_plot = function setup_complicated_plot(graph_id, grid, series, options) {\n\t    function basic_flot_row(grid, input) {\n\t        return grid.add(function(row, x, n) {\n\t            for (var i = 0; i < n; i++)\n\t                row[x + i] = [i, input[x + i] || 0];\n\t        });\n\t    }\n\t\n\t    function stacked_flot_row(grid, input, last) {\n\t        return grid.add(function(row, x, n) {\n\t            var i, l, floor, val;\n\t            for (i = 0; i < n; i++) {\n\t                floor = 0;\n\t                if (last) {\n\t                    l = last[x + i];\n\t                    floor = l ? l[1] : 0;\n\t                }\n\t                val = (input[x + i] || 0);\n\t                row[x + i] = [i, val + floor, floor];\n\t            }\n\t        });\n\t    }\n\t\n\t    /* All the data row setup happens now */\n\t    var last = null;\n\t    series.forEach(function(ser, i) {\n\t        if (options.x_rh_stack_graphs)\n\t            ser.data = stacked_flot_row(grid, ser.row, last);\n\t        else\n\t            ser.data = basic_flot_row(grid, ser.row);\n\t        last = ser.data;\n\t    });\n\t    return setup_plot(graph_id, grid, series, options);\n\t};\n\t\n\tmodule.exports = plotter;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t/* Javascript plotting library for jQuery, version 0.8.3.\n\t\n\tCopyright (c) 2007-2014 IOLA and Ole Laursen.\n\tLicensed under the MIT license.\n\t\n\t*/\n\t\n\t// first an inline dependency, jquery.colorhelpers.js, we inline it here\n\t// for convenience\n\t\n\t/* Plugin for jQuery for working with colors.\n\t *\n\t * Version 1.1.\n\t *\n\t * Inspiration from jQuery color animation plugin by John Resig.\n\t *\n\t * Released under the MIT license by Ole Laursen, October 2009.\n\t *\n\t * Examples:\n\t *\n\t *   $.color.parse(\"#fff\").scale('rgb', 0.25).add('a', -0.5).toString()\n\t *   var c = $.color.extract($(\"#mydiv\"), 'background-color');\n\t *   console.log(c.r, c.g, c.b, c.a);\n\t *   $.color.make(100, 50, 25, 0.4).toString() // returns \"rgba(100,50,25,0.4)\"\n\t *\n\t * Note that .scale() and .add() return the same modified object\n\t * instead of making a new one.\n\t *\n\t * V. 1.1: Fix error handling so e.g. parsing an empty string does\n\t * produce a color rather than just crashing.\n\t */\n\t(function($){$.color={};$.color.make=function(r,g,b,a){var o={};o.r=r||0;o.g=g||0;o.b=b||0;o.a=a!=null?a:1;o.add=function(c,d){for(var i=0;i<c.length;++i)o[c.charAt(i)]+=d;return o.normalize()};o.scale=function(c,f){for(var i=0;i<c.length;++i)o[c.charAt(i)]*=f;return o.normalize()};o.toString=function(){if(o.a>=1){return\"rgb(\"+[o.r,o.g,o.b].join(\",\")+\")\"}else{return\"rgba(\"+[o.r,o.g,o.b,o.a].join(\",\")+\")\"}};o.normalize=function(){function clamp(min,value,max){return value<min?min:value>max?max:value}o.r=clamp(0,parseInt(o.r),255);o.g=clamp(0,parseInt(o.g),255);o.b=clamp(0,parseInt(o.b),255);o.a=clamp(0,o.a,1);return o};o.clone=function(){return $.color.make(o.r,o.b,o.g,o.a)};return o.normalize()};$.color.extract=function(elem,css){var c;do{c=elem.css(css).toLowerCase();if(c!=\"\"&&c!=\"transparent\")break;elem=elem.parent()}while(elem.length&&!$.nodeName(elem.get(0),\"body\"));if(c==\"rgba(0, 0, 0, 0)\")c=\"transparent\";return $.color.parse(c)};$.color.parse=function(str){var res,m=$.color.make;if(res=/rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10));if(res=/rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10),parseFloat(res[4]));if(res=/rgb\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55);if(res=/rgba\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55,parseFloat(res[4]));if(res=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(str))return m(parseInt(res[1],16),parseInt(res[2],16),parseInt(res[3],16));if(res=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(str))return m(parseInt(res[1]+res[1],16),parseInt(res[2]+res[2],16),parseInt(res[3]+res[3],16));var name=$.trim(str).toLowerCase();if(name==\"transparent\")return m(255,255,255,0);else{res=lookupColors[name]||[0,0,0];return m(res[0],res[1],res[2])}};var lookupColors={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}})(jQuery);\n\t\n\t// the actual Flot code\n\t(function($) {\n\t\n\t\t// Cache the prototype hasOwnProperty for faster access\n\t\n\t\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t\n\t    // A shim to provide 'detach' to jQuery versions prior to 1.4.  Using a DOM\n\t    // operation produces the same effect as detach, i.e. removing the element\n\t    // without touching its jQuery data.\n\t\n\t    // Do not merge this into Flot 0.9, since it requires jQuery 1.4.4+.\n\t\n\t    if (!$.fn.detach) {\n\t        $.fn.detach = function() {\n\t            return this.each(function() {\n\t                if (this.parentNode) {\n\t                    this.parentNode.removeChild( this );\n\t                }\n\t            });\n\t        };\n\t    }\n\t\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t// The Canvas object is a wrapper around an HTML5 <canvas> tag.\n\t\t//\n\t\t// @constructor\n\t\t// @param {string} cls List of classes to apply to the canvas.\n\t\t// @param {element} container Element onto which to append the canvas.\n\t\t//\n\t\t// Requiring a container is a little iffy, but unfortunately canvas\n\t\t// operations don't work unless the canvas is attached to the DOM.\n\t\n\t\tfunction Canvas(cls, container) {\n\t\n\t\t\tvar element = container.children(\".\" + cls)[0];\n\t\n\t\t\tif (element == null) {\n\t\n\t\t\t\telement = document.createElement(\"canvas\");\n\t\t\t\telement.className = cls;\n\t\n\t\t\t\t$(element).css({ direction: \"ltr\", position: \"absolute\", left: 0, top: 0 })\n\t\t\t\t\t.appendTo(container);\n\t\n\t\t\t\t// If HTML5 Canvas isn't available, fall back to [Ex|Flash]canvas\n\t\n\t\t\t\tif (!element.getContext) {\n\t\t\t\t\tif (window.G_vmlCanvasManager) {\n\t\t\t\t\t\telement = window.G_vmlCanvasManager.initElement(element);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(\"Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tthis.element = element;\n\t\n\t\t\tvar context = this.context = element.getContext(\"2d\");\n\t\n\t\t\t// Determine the screen's ratio of physical to device-independent\n\t\t\t// pixels.  This is the ratio between the canvas width that the browser\n\t\t\t// advertises and the number of pixels actually present in that space.\n\t\n\t\t\t// The iPhone 4, for example, has a device-independent width of 320px,\n\t\t\t// but its screen is actually 640px wide.  It therefore has a pixel\n\t\t\t// ratio of 2, while most normal devices have a ratio of 1.\n\t\n\t\t\tvar devicePixelRatio = window.devicePixelRatio || 1,\n\t\t\t\tbackingStoreRatio =\n\t\t\t\t\tcontext.webkitBackingStorePixelRatio ||\n\t\t\t\t\tcontext.mozBackingStorePixelRatio ||\n\t\t\t\t\tcontext.msBackingStorePixelRatio ||\n\t\t\t\t\tcontext.oBackingStorePixelRatio ||\n\t\t\t\t\tcontext.backingStorePixelRatio || 1;\n\t\n\t\t\tthis.pixelRatio = devicePixelRatio / backingStoreRatio;\n\t\n\t\t\t// Size the canvas to match the internal dimensions of its container\n\t\n\t\t\tthis.resize(container.width(), container.height());\n\t\n\t\t\t// Collection of HTML div layers for text overlaid onto the canvas\n\t\n\t\t\tthis.textContainer = null;\n\t\t\tthis.text = {};\n\t\n\t\t\t// Cache of text fragments and metrics, so we can avoid expensively\n\t\t\t// re-calculating them when the plot is re-rendered in a loop.\n\t\n\t\t\tthis._textCache = {};\n\t\t}\n\t\n\t\t// Resizes the canvas to the given dimensions.\n\t\t//\n\t\t// @param {number} width New width of the canvas, in pixels.\n\t\t// @param {number} width New height of the canvas, in pixels.\n\t\n\t\tCanvas.prototype.resize = function(width, height) {\n\t\n\t\t\tif (width <= 0 || height <= 0) {\n\t\t\t\tthrow new Error(\"Invalid dimensions for plot, width = \" + width + \", height = \" + height);\n\t\t\t}\n\t\n\t\t\tvar element = this.element,\n\t\t\t\tcontext = this.context,\n\t\t\t\tpixelRatio = this.pixelRatio;\n\t\n\t\t\t// Resize the canvas, increasing its density based on the display's\n\t\t\t// pixel ratio; basically giving it more pixels without increasing the\n\t\t\t// size of its element, to take advantage of the fact that retina\n\t\t\t// displays have that many more pixels in the same advertised space.\n\t\n\t\t\t// Resizing should reset the state (excanvas seems to be buggy though)\n\t\n\t\t\tif (this.width != width) {\n\t\t\t\telement.width = width * pixelRatio;\n\t\t\t\telement.style.width = width + \"px\";\n\t\t\t\tthis.width = width;\n\t\t\t}\n\t\n\t\t\tif (this.height != height) {\n\t\t\t\telement.height = height * pixelRatio;\n\t\t\t\telement.style.height = height + \"px\";\n\t\t\t\tthis.height = height;\n\t\t\t}\n\t\n\t\t\t// Save the context, so we can reset in case we get replotted.  The\n\t\t\t// restore ensure that we're really back at the initial state, and\n\t\t\t// should be safe even if we haven't saved the initial state yet.\n\t\n\t\t\tcontext.restore();\n\t\t\tcontext.save();\n\t\n\t\t\t// Scale the coordinate space to match the display density; so even though we\n\t\t\t// may have twice as many pixels, we still want lines and other drawing to\n\t\t\t// appear at the same size; the extra pixels will just make them crisper.\n\t\n\t\t\tcontext.scale(pixelRatio, pixelRatio);\n\t\t};\n\t\n\t\t// Clears the entire canvas area, not including any overlaid HTML text\n\t\n\t\tCanvas.prototype.clear = function() {\n\t\t\tthis.context.clearRect(0, 0, this.width, this.height);\n\t\t};\n\t\n\t\t// Finishes rendering the canvas, including managing the text overlay.\n\t\n\t\tCanvas.prototype.render = function() {\n\t\n\t\t\tvar cache = this._textCache;\n\t\n\t\t\t// For each text layer, add elements marked as active that haven't\n\t\t\t// already been rendered, and remove those that are no longer active.\n\t\n\t\t\tfor (var layerKey in cache) {\n\t\t\t\tif (hasOwnProperty.call(cache, layerKey)) {\n\t\n\t\t\t\t\tvar layer = this.getTextLayer(layerKey),\n\t\t\t\t\t\tlayerCache = cache[layerKey];\n\t\n\t\t\t\t\tlayer.hide();\n\t\n\t\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\t\n\t\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\t\n\t\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\t\tif (position.active) {\n\t\t\t\t\t\t\t\t\t\t\tif (!position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\t\tlayer.append(position.element);\n\t\t\t\t\t\t\t\t\t\t\t\tposition.rendered = true;\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\t\tpositions.splice(i--, 1);\n\t\t\t\t\t\t\t\t\t\t\tif (position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\t\tposition.element.detach();\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\tif (positions.length == 0) {\n\t\t\t\t\t\t\t\t\t\tdelete styleCache[key];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\n\t\t\t\t\tlayer.show();\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t// Creates (if necessary) and returns the text overlay container.\n\t\t//\n\t\t// @param {string} classes String of space-separated CSS classes used to\n\t\t//     uniquely identify the text layer.\n\t\t// @return {object} The jQuery-wrapped text-layer div.\n\t\n\t\tCanvas.prototype.getTextLayer = function(classes) {\n\t\n\t\t\tvar layer = this.text[classes];\n\t\n\t\t\t// Create the text layer if it doesn't exist\n\t\n\t\t\tif (layer == null) {\n\t\n\t\t\t\t// Create the text layer container, if it doesn't exist\n\t\n\t\t\t\tif (this.textContainer == null) {\n\t\t\t\t\tthis.textContainer = $(\"<div class='flot-text'></div>\")\n\t\t\t\t\t\t.css({\n\t\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t\t'font-size': \"smaller\",\n\t\t\t\t\t\t\tcolor: \"#545454\"\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.insertAfter(this.element);\n\t\t\t\t}\n\t\n\t\t\t\tlayer = this.text[classes] = $(\"<div></div>\")\n\t\t\t\t\t.addClass(classes)\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\tright: 0\n\t\t\t\t\t})\n\t\t\t\t\t.appendTo(this.textContainer);\n\t\t\t}\n\t\n\t\t\treturn layer;\n\t\t};\n\t\n\t\t// Creates (if necessary) and returns a text info object.\n\t\t//\n\t\t// The object looks like this:\n\t\t//\n\t\t// {\n\t\t//     width: Width of the text's wrapper div.\n\t\t//     height: Height of the text's wrapper div.\n\t\t//     element: The jQuery-wrapped HTML div containing the text.\n\t\t//     positions: Array of positions at which this text is drawn.\n\t\t// }\n\t\t//\n\t\t// The positions array contains objects that look like this:\n\t\t//\n\t\t// {\n\t\t//     active: Flag indicating whether the text should be visible.\n\t\t//     rendered: Flag indicating whether the text is currently visible.\n\t\t//     element: The jQuery-wrapped HTML div containing the text.\n\t\t//     x: X coordinate at which to draw the text.\n\t\t//     y: Y coordinate at which to draw the text.\n\t\t// }\n\t\t//\n\t\t// Each position after the first receives a clone of the original element.\n\t\t//\n\t\t// The idea is that that the width, height, and general 'identity' of the\n\t\t// text is constant no matter where it is placed; the placements are a\n\t\t// secondary property.\n\t\t//\n\t\t// Canvas maintains a cache of recently-used text info objects; getTextInfo\n\t\t// either returns the cached element or creates a new entry.\n\t\t//\n\t\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t\t//     identifying the layer containing this text.\n\t\t// @param {string} text Text string to retrieve info for.\n\t\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t\t//     classes or a font-spec object, defining the text's font and style.\n\t\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t\t//     Angle is currently unused, it will be implemented in the future.\n\t\t// @param {number=} width Maximum width of the text before it wraps.\n\t\t// @return {object} a text info object.\n\t\n\t\tCanvas.prototype.getTextInfo = function(layer, text, font, angle, width) {\n\t\n\t\t\tvar textStyle, layerCache, styleCache, info;\n\t\n\t\t\t// Cast the value to a string, in case we were given a number or such\n\t\n\t\t\ttext = \"\" + text;\n\t\n\t\t\t// If the font is a font-spec object, generate a CSS font definition\n\t\n\t\t\tif (typeof font === \"object\") {\n\t\t\t\ttextStyle = font.style + \" \" + font.variant + \" \" + font.weight + \" \" + font.size + \"px/\" + font.lineHeight + \"px \" + font.family;\n\t\t\t} else {\n\t\t\t\ttextStyle = font;\n\t\t\t}\n\t\n\t\t\t// Retrieve (or create) the cache for the text's layer and styles\n\t\n\t\t\tlayerCache = this._textCache[layer];\n\t\n\t\t\tif (layerCache == null) {\n\t\t\t\tlayerCache = this._textCache[layer] = {};\n\t\t\t}\n\t\n\t\t\tstyleCache = layerCache[textStyle];\n\t\n\t\t\tif (styleCache == null) {\n\t\t\t\tstyleCache = layerCache[textStyle] = {};\n\t\t\t}\n\t\n\t\t\tinfo = styleCache[text];\n\t\n\t\t\t// If we can't find a matching element in our cache, create a new one\n\t\n\t\t\tif (info == null) {\n\t\n\t\t\t\tvar element = $(\"<div></div>\").html(text)\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\t'max-width': width,\n\t\t\t\t\t\ttop: -9999\n\t\t\t\t\t})\n\t\t\t\t\t.appendTo(this.getTextLayer(layer));\n\t\n\t\t\t\tif (typeof font === \"object\") {\n\t\t\t\t\telement.css({\n\t\t\t\t\t\tfont: textStyle,\n\t\t\t\t\t\tcolor: font.color\n\t\t\t\t\t});\n\t\t\t\t} else if (typeof font === \"string\") {\n\t\t\t\t\telement.addClass(font);\n\t\t\t\t}\n\t\n\t\t\t\tinfo = styleCache[text] = {\n\t\t\t\t\twidth: element.outerWidth(true),\n\t\t\t\t\theight: element.outerHeight(true),\n\t\t\t\t\telement: element,\n\t\t\t\t\tpositions: []\n\t\t\t\t};\n\t\n\t\t\t\telement.detach();\n\t\t\t}\n\t\n\t\t\treturn info;\n\t\t};\n\t\n\t\t// Adds a text string to the canvas text overlay.\n\t\t//\n\t\t// The text isn't drawn immediately; it is marked as rendering, which will\n\t\t// result in its addition to the canvas on the next render pass.\n\t\t//\n\t\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t\t//     identifying the layer containing this text.\n\t\t// @param {number} x X coordinate at which to draw the text.\n\t\t// @param {number} y Y coordinate at which to draw the text.\n\t\t// @param {string} text Text string to draw.\n\t\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t\t//     classes or a font-spec object, defining the text's font and style.\n\t\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t\t//     Angle is currently unused, it will be implemented in the future.\n\t\t// @param {number=} width Maximum width of the text before it wraps.\n\t\t// @param {string=} halign Horizontal alignment of the text; either \"left\",\n\t\t//     \"center\" or \"right\".\n\t\t// @param {string=} valign Vertical alignment of the text; either \"top\",\n\t\t//     \"middle\" or \"bottom\".\n\t\n\t\tCanvas.prototype.addText = function(layer, x, y, text, font, angle, width, halign, valign) {\n\t\n\t\t\tvar info = this.getTextInfo(layer, text, font, angle, width),\n\t\t\t\tpositions = info.positions;\n\t\n\t\t\t// Tweak the div's position to match the text's alignment\n\t\n\t\t\tif (halign == \"center\") {\n\t\t\t\tx -= info.width / 2;\n\t\t\t} else if (halign == \"right\") {\n\t\t\t\tx -= info.width;\n\t\t\t}\n\t\n\t\t\tif (valign == \"middle\") {\n\t\t\t\ty -= info.height / 2;\n\t\t\t} else if (valign == \"bottom\") {\n\t\t\t\ty -= info.height;\n\t\t\t}\n\t\n\t\t\t// Determine whether this text already exists at this position.\n\t\t\t// If so, mark it for inclusion in the next render pass.\n\t\n\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\t\tposition.active = true;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\t// If the text doesn't exist at this position, create a new entry\n\t\n\t\t\t// For the very first position we'll re-use the original element,\n\t\t\t// while for subsequent ones we'll clone it.\n\t\n\t\t\tposition = {\n\t\t\t\tactive: true,\n\t\t\t\trendered: false,\n\t\t\t\telement: positions.length ? info.element.clone() : info.element,\n\t\t\t\tx: x,\n\t\t\t\ty: y\n\t\t\t};\n\t\n\t\t\tpositions.push(position);\n\t\n\t\t\t// Move the element to its final position within the container\n\t\n\t\t\tposition.element.css({\n\t\t\t\ttop: Math.round(y),\n\t\t\t\tleft: Math.round(x),\n\t\t\t\t'text-align': halign\t// In case the text wraps\n\t\t\t});\n\t\t};\n\t\n\t\t// Removes one or more text strings from the canvas text overlay.\n\t\t//\n\t\t// If no parameters are given, all text within the layer is removed.\n\t\t//\n\t\t// Note that the text is not immediately removed; it is simply marked as\n\t\t// inactive, which will result in its removal on the next render pass.\n\t\t// This avoids the performance penalty for 'clear and redraw' behavior,\n\t\t// where we potentially get rid of all text on a layer, but will likely\n\t\t// add back most or all of it later, as when redrawing axes, for example.\n\t\t//\n\t\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t\t//     identifying the layer containing this text.\n\t\t// @param {number=} x X coordinate of the text.\n\t\t// @param {number=} y Y coordinate of the text.\n\t\t// @param {string=} text Text string to remove.\n\t\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t\t//     classes or a font-spec object, defining the text's font and style.\n\t\t// @param {number=} angle Angle at which the text is rotated, in degrees.\n\t\t//     Angle is currently unused, it will be implemented in the future.\n\t\n\t\tCanvas.prototype.removeText = function(layer, x, y, text, font, angle) {\n\t\t\tif (text == null) {\n\t\t\t\tvar layerCache = this._textCache[layer];\n\t\t\t\tif (layerCache != null) {\n\t\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\t\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\t\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\t\tposition.active = false;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar positions = this.getTextInfo(layer, text, font, angle).positions;\n\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\t\t\tposition.active = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\n\t\t///////////////////////////////////////////////////////////////////////////\n\t\t// The top-level container for the entire plot.\n\t\n\t    function Plot(placeholder, data_, options_, plugins) {\n\t        // data is on the form:\n\t        //   [ series1, series2 ... ]\n\t        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]\n\t        // or { data: [ [x1, y1], [x2, y2], ... ], label: \"some label\", ... }\n\t\n\t        var series = [],\n\t            options = {\n\t                // the color theme used for graphs\n\t                colors: [\"#edc240\", \"#afd8f8\", \"#cb4b4b\", \"#4da74d\", \"#9440ed\"],\n\t                legend: {\n\t                    show: true,\n\t                    noColumns: 1, // number of colums in legend table\n\t                    labelFormatter: null, // fn: string -> string\n\t                    labelBoxBorderColor: \"#ccc\", // border color for the little label boxes\n\t                    container: null, // container (as jQuery object) to put legend in, null means default on top of graph\n\t                    position: \"ne\", // position of default legend container within plot\n\t                    margin: 5, // distance from grid edge to default legend container within plot\n\t                    backgroundColor: null, // null means auto-detect\n\t                    backgroundOpacity: 0.85, // set to 0 to avoid background\n\t                    sorted: null    // default to no legend sorting\n\t                },\n\t                xaxis: {\n\t                    show: null, // null = auto-detect, true = always, false = never\n\t                    position: \"bottom\", // or \"top\"\n\t                    mode: null, // null or \"time\"\n\t                    font: null, // null (derived from CSS in placeholder) or object like { size: 11, lineHeight: 13, style: \"italic\", weight: \"bold\", family: \"sans-serif\", variant: \"small-caps\" }\n\t                    color: null, // base color, labels, ticks\n\t                    tickColor: null, // possibly different color of ticks, e.g. \"rgba(0,0,0,0.15)\"\n\t                    transform: null, // null or f: number -> number to transform axis\n\t                    inverseTransform: null, // if transform is set, this should be the inverse function\n\t                    min: null, // min. value to show, null means set automatically\n\t                    max: null, // max. value to show, null means set automatically\n\t                    autoscaleMargin: null, // margin in % to add if auto-setting min/max\n\t                    ticks: null, // either [1, 3] or [[1, \"a\"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks\n\t                    tickFormatter: null, // fn: number -> string\n\t                    labelWidth: null, // size of tick labels in pixels\n\t                    labelHeight: null,\n\t                    reserveSpace: null, // whether to reserve space even if axis isn't shown\n\t                    tickLength: null, // size in pixels of ticks, or \"full\" for whole line\n\t                    alignTicksWithAxis: null, // axis number or null for no sync\n\t                    tickDecimals: null, // no. of decimals, null means auto\n\t                    tickSize: null, // number or [number, \"unit\"]\n\t                    minTickSize: null // number or [number, \"unit\"]\n\t                },\n\t                yaxis: {\n\t                    autoscaleMargin: 0.02,\n\t                    position: \"left\" // or \"right\"\n\t                },\n\t                xaxes: [],\n\t                yaxes: [],\n\t                series: {\n\t                    points: {\n\t                        show: false,\n\t                        radius: 3,\n\t                        lineWidth: 2, // in pixels\n\t                        fill: true,\n\t                        fillColor: \"#ffffff\",\n\t                        symbol: \"circle\" // or callback\n\t                    },\n\t                    lines: {\n\t                        // we don't put in show: false so we can see\n\t                        // whether lines were actively disabled\n\t                        lineWidth: 2, // in pixels\n\t                        fill: false,\n\t                        fillColor: null,\n\t                        steps: false\n\t                        // Omit 'zero', so we can later default its value to\n\t                        // match that of the 'fill' option.\n\t                    },\n\t                    bars: {\n\t                        show: false,\n\t                        lineWidth: 2, // in pixels\n\t                        barWidth: 1, // in units of the x axis\n\t                        fill: true,\n\t                        fillColor: null,\n\t                        align: \"left\", // \"left\", \"right\", or \"center\"\n\t                        horizontal: false,\n\t                        zero: true\n\t                    },\n\t                    shadowSize: 3,\n\t                    highlightColor: null\n\t                },\n\t                grid: {\n\t                    show: true,\n\t                    aboveData: false,\n\t                    color: \"#545454\", // primary color used for outline and labels\n\t                    backgroundColor: null, // null for transparent, else color\n\t                    borderColor: null, // set if different from the grid color\n\t                    tickColor: null, // color for the ticks, e.g. \"rgba(0,0,0,0.15)\"\n\t                    margin: 0, // distance from the canvas edge to the grid\n\t                    labelMargin: 5, // in pixels\n\t                    axisMargin: 8, // in pixels\n\t                    borderWidth: 2, // in pixels\n\t                    minBorderMargin: null, // in pixels, null means taken from points radius\n\t                    markings: null, // array of ranges or fn: axes -> array of ranges\n\t                    markingsColor: \"#f4f4f4\",\n\t                    markingsLineWidth: 2,\n\t                    // interactive stuff\n\t                    clickable: false,\n\t                    hoverable: false,\n\t                    autoHighlight: true, // highlight in case mouse is near\n\t                    mouseActiveRadius: 10 // how far the mouse can be away to activate an item\n\t                },\n\t                interaction: {\n\t                    redrawOverlayInterval: 1000/60 // time between updates, -1 means in same flow\n\t                },\n\t                hooks: {}\n\t            },\n\t        surface = null,     // the canvas for the plot itself\n\t        overlay = null,     // canvas for interactive stuff on top of plot\n\t        eventHolder = null, // jQuery object that events should be bound to\n\t        ctx = null, octx = null,\n\t        xaxes = [], yaxes = [],\n\t        plotOffset = { left: 0, right: 0, top: 0, bottom: 0},\n\t        plotWidth = 0, plotHeight = 0,\n\t        hooks = {\n\t            processOptions: [],\n\t            processRawData: [],\n\t            processDatapoints: [],\n\t            processOffset: [],\n\t            drawBackground: [],\n\t            drawSeries: [],\n\t            draw: [],\n\t            bindEvents: [],\n\t            drawOverlay: [],\n\t            shutdown: []\n\t        },\n\t        plot = this;\n\t\n\t        // public functions\n\t        plot.setData = setData;\n\t        plot.setupGrid = setupGrid;\n\t        plot.draw = draw;\n\t        plot.getPlaceholder = function() { return placeholder; };\n\t        plot.getCanvas = function() { return surface.element; };\n\t        plot.getPlotOffset = function() { return plotOffset; };\n\t        plot.width = function () { return plotWidth; };\n\t        plot.height = function () { return plotHeight; };\n\t        plot.offset = function () {\n\t            var o = eventHolder.offset();\n\t            o.left += plotOffset.left;\n\t            o.top += plotOffset.top;\n\t            return o;\n\t        };\n\t        plot.getData = function () { return series; };\n\t        plot.getAxes = function () {\n\t            var res = {}, i;\n\t            $.each(xaxes.concat(yaxes), function (_, axis) {\n\t                if (axis)\n\t                    res[axis.direction + (axis.n != 1 ? axis.n : \"\") + \"axis\"] = axis;\n\t            });\n\t            return res;\n\t        };\n\t        plot.getXAxes = function () { return xaxes; };\n\t        plot.getYAxes = function () { return yaxes; };\n\t        plot.c2p = canvasToAxisCoords;\n\t        plot.p2c = axisToCanvasCoords;\n\t        plot.getOptions = function () { return options; };\n\t        plot.highlight = highlight;\n\t        plot.unhighlight = unhighlight;\n\t        plot.triggerRedrawOverlay = triggerRedrawOverlay;\n\t        plot.pointOffset = function(point) {\n\t            return {\n\t                left: parseInt(xaxes[axisNumber(point, \"x\") - 1].p2c(+point.x) + plotOffset.left, 10),\n\t                top: parseInt(yaxes[axisNumber(point, \"y\") - 1].p2c(+point.y) + plotOffset.top, 10)\n\t            };\n\t        };\n\t        plot.shutdown = shutdown;\n\t        plot.destroy = function () {\n\t            shutdown();\n\t            placeholder.removeData(\"plot\").empty();\n\t\n\t            series = [];\n\t            options = null;\n\t            surface = null;\n\t            overlay = null;\n\t            eventHolder = null;\n\t            ctx = null;\n\t            octx = null;\n\t            xaxes = [];\n\t            yaxes = [];\n\t            hooks = null;\n\t            highlights = [];\n\t            plot = null;\n\t        };\n\t        plot.resize = function () {\n\t        \tvar width = placeholder.width(),\n\t        \t\theight = placeholder.height();\n\t            surface.resize(width, height);\n\t            overlay.resize(width, height);\n\t        };\n\t\n\t        // public attributes\n\t        plot.hooks = hooks;\n\t\n\t        // initialize\n\t        initPlugins(plot);\n\t        parseOptions(options_);\n\t        setupCanvases();\n\t        setData(data_);\n\t        setupGrid();\n\t        draw();\n\t        bindEvents();\n\t\n\t\n\t        function executeHooks(hook, args) {\n\t            args = [plot].concat(args);\n\t            for (var i = 0; i < hook.length; ++i)\n\t                hook[i].apply(this, args);\n\t        }\n\t\n\t        function initPlugins() {\n\t\n\t            // References to key classes, allowing plugins to modify them\n\t\n\t            var classes = {\n\t                Canvas: Canvas\n\t            };\n\t\n\t            for (var i = 0; i < plugins.length; ++i) {\n\t                var p = plugins[i];\n\t                p.init(plot, classes);\n\t                if (p.options)\n\t                    $.extend(true, options, p.options);\n\t            }\n\t        }\n\t\n\t        function parseOptions(opts) {\n\t\n\t            $.extend(true, options, opts);\n\t\n\t            // $.extend merges arrays, rather than replacing them.  When less\n\t            // colors are provided than the size of the default palette, we\n\t            // end up with those colors plus the remaining defaults, which is\n\t            // not expected behavior; avoid it by replacing them here.\n\t\n\t            if (opts && opts.colors) {\n\t            \toptions.colors = opts.colors;\n\t            }\n\t\n\t            if (options.xaxis.color == null)\n\t                options.xaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\t            if (options.yaxis.color == null)\n\t                options.yaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\t\n\t            if (options.xaxis.tickColor == null) // grid.tickColor for back-compatibility\n\t                options.xaxis.tickColor = options.grid.tickColor || options.xaxis.color;\n\t            if (options.yaxis.tickColor == null) // grid.tickColor for back-compatibility\n\t                options.yaxis.tickColor = options.grid.tickColor || options.yaxis.color;\n\t\n\t            if (options.grid.borderColor == null)\n\t                options.grid.borderColor = options.grid.color;\n\t            if (options.grid.tickColor == null)\n\t                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\t\n\t            // Fill in defaults for axis options, including any unspecified\n\t            // font-spec fields, if a font-spec was provided.\n\t\n\t            // If no x/y axis options were provided, create one of each anyway,\n\t            // since the rest of the code assumes that they exist.\n\t\n\t            var i, axisOptions, axisCount,\n\t                fontSize = placeholder.css(\"font-size\"),\n\t                fontSizeDefault = fontSize ? +fontSize.replace(\"px\", \"\") : 13,\n\t                fontDefaults = {\n\t                    style: placeholder.css(\"font-style\"),\n\t                    size: Math.round(0.8 * fontSizeDefault),\n\t                    variant: placeholder.css(\"font-variant\"),\n\t                    weight: placeholder.css(\"font-weight\"),\n\t                    family: placeholder.css(\"font-family\")\n\t                };\n\t\n\t            axisCount = options.xaxes.length || 1;\n\t            for (i = 0; i < axisCount; ++i) {\n\t\n\t                axisOptions = options.xaxes[i];\n\t                if (axisOptions && !axisOptions.tickColor) {\n\t                    axisOptions.tickColor = axisOptions.color;\n\t                }\n\t\n\t                axisOptions = $.extend(true, {}, options.xaxis, axisOptions);\n\t                options.xaxes[i] = axisOptions;\n\t\n\t                if (axisOptions.font) {\n\t                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n\t                    if (!axisOptions.font.color) {\n\t                        axisOptions.font.color = axisOptions.color;\n\t                    }\n\t                    if (!axisOptions.font.lineHeight) {\n\t                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n\t                    }\n\t                }\n\t            }\n\t\n\t            axisCount = options.yaxes.length || 1;\n\t            for (i = 0; i < axisCount; ++i) {\n\t\n\t                axisOptions = options.yaxes[i];\n\t                if (axisOptions && !axisOptions.tickColor) {\n\t                    axisOptions.tickColor = axisOptions.color;\n\t                }\n\t\n\t                axisOptions = $.extend(true, {}, options.yaxis, axisOptions);\n\t                options.yaxes[i] = axisOptions;\n\t\n\t                if (axisOptions.font) {\n\t                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n\t                    if (!axisOptions.font.color) {\n\t                        axisOptions.font.color = axisOptions.color;\n\t                    }\n\t                    if (!axisOptions.font.lineHeight) {\n\t                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n\t                    }\n\t                }\n\t            }\n\t\n\t            // backwards compatibility, to be removed in future\n\t            if (options.xaxis.noTicks && options.xaxis.ticks == null)\n\t                options.xaxis.ticks = options.xaxis.noTicks;\n\t            if (options.yaxis.noTicks && options.yaxis.ticks == null)\n\t                options.yaxis.ticks = options.yaxis.noTicks;\n\t            if (options.x2axis) {\n\t                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);\n\t                options.xaxes[1].position = \"top\";\n\t                // Override the inherit to allow the axis to auto-scale\n\t                if (options.x2axis.min == null) {\n\t                    options.xaxes[1].min = null;\n\t                }\n\t                if (options.x2axis.max == null) {\n\t                    options.xaxes[1].max = null;\n\t                }\n\t            }\n\t            if (options.y2axis) {\n\t                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);\n\t                options.yaxes[1].position = \"right\";\n\t                // Override the inherit to allow the axis to auto-scale\n\t                if (options.y2axis.min == null) {\n\t                    options.yaxes[1].min = null;\n\t                }\n\t                if (options.y2axis.max == null) {\n\t                    options.yaxes[1].max = null;\n\t                }\n\t            }\n\t            if (options.grid.coloredAreas)\n\t                options.grid.markings = options.grid.coloredAreas;\n\t            if (options.grid.coloredAreasColor)\n\t                options.grid.markingsColor = options.grid.coloredAreasColor;\n\t            if (options.lines)\n\t                $.extend(true, options.series.lines, options.lines);\n\t            if (options.points)\n\t                $.extend(true, options.series.points, options.points);\n\t            if (options.bars)\n\t                $.extend(true, options.series.bars, options.bars);\n\t            if (options.shadowSize != null)\n\t                options.series.shadowSize = options.shadowSize;\n\t            if (options.highlightColor != null)\n\t                options.series.highlightColor = options.highlightColor;\n\t\n\t            // save options on axes for future reference\n\t            for (i = 0; i < options.xaxes.length; ++i)\n\t                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];\n\t            for (i = 0; i < options.yaxes.length; ++i)\n\t                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];\n\t\n\t            // add hooks from options\n\t            for (var n in hooks)\n\t                if (options.hooks[n] && options.hooks[n].length)\n\t                    hooks[n] = hooks[n].concat(options.hooks[n]);\n\t\n\t            executeHooks(hooks.processOptions, [options]);\n\t        }\n\t\n\t        function setData(d) {\n\t            series = parseData(d);\n\t            fillInSeriesOptions();\n\t            processData();\n\t        }\n\t\n\t        function parseData(d) {\n\t            var res = [];\n\t            for (var i = 0; i < d.length; ++i) {\n\t                var s = $.extend(true, {}, options.series);\n\t\n\t                if (d[i].data != null) {\n\t                    s.data = d[i].data; // move the data instead of deep-copy\n\t                    delete d[i].data;\n\t\n\t                    $.extend(true, s, d[i]);\n\t\n\t                    d[i].data = s.data;\n\t                }\n\t                else\n\t                    s.data = d[i];\n\t                res.push(s);\n\t            }\n\t\n\t            return res;\n\t        }\n\t\n\t        function axisNumber(obj, coord) {\n\t            var a = obj[coord + \"axis\"];\n\t            if (typeof a == \"object\") // if we got a real axis, extract number\n\t                a = a.n;\n\t            if (typeof a != \"number\")\n\t                a = 1; // default to first axis\n\t            return a;\n\t        }\n\t\n\t        function allAxes() {\n\t            // return flat array without annoying null entries\n\t            return $.grep(xaxes.concat(yaxes), function (a) { return a; });\n\t        }\n\t\n\t        function canvasToAxisCoords(pos) {\n\t            // return an object with x/y corresponding to all used axes\n\t            var res = {}, i, axis;\n\t            for (i = 0; i < xaxes.length; ++i) {\n\t                axis = xaxes[i];\n\t                if (axis && axis.used)\n\t                    res[\"x\" + axis.n] = axis.c2p(pos.left);\n\t            }\n\t\n\t            for (i = 0; i < yaxes.length; ++i) {\n\t                axis = yaxes[i];\n\t                if (axis && axis.used)\n\t                    res[\"y\" + axis.n] = axis.c2p(pos.top);\n\t            }\n\t\n\t            if (res.x1 !== undefined)\n\t                res.x = res.x1;\n\t            if (res.y1 !== undefined)\n\t                res.y = res.y1;\n\t\n\t            return res;\n\t        }\n\t\n\t        function axisToCanvasCoords(pos) {\n\t            // get canvas coords from the first pair of x/y found in pos\n\t            var res = {}, i, axis, key;\n\t\n\t            for (i = 0; i < xaxes.length; ++i) {\n\t                axis = xaxes[i];\n\t                if (axis && axis.used) {\n\t                    key = \"x\" + axis.n;\n\t                    if (pos[key] == null && axis.n == 1)\n\t                        key = \"x\";\n\t\n\t                    if (pos[key] != null) {\n\t                        res.left = axis.p2c(pos[key]);\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t\n\t            for (i = 0; i < yaxes.length; ++i) {\n\t                axis = yaxes[i];\n\t                if (axis && axis.used) {\n\t                    key = \"y\" + axis.n;\n\t                    if (pos[key] == null && axis.n == 1)\n\t                        key = \"y\";\n\t\n\t                    if (pos[key] != null) {\n\t                        res.top = axis.p2c(pos[key]);\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t\n\t            return res;\n\t        }\n\t\n\t        function getOrCreateAxis(axes, number) {\n\t            if (!axes[number - 1])\n\t                axes[number - 1] = {\n\t                    n: number, // save the number for future reference\n\t                    direction: axes == xaxes ? \"x\" : \"y\",\n\t                    options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)\n\t                };\n\t\n\t            return axes[number - 1];\n\t        }\n\t\n\t        function fillInSeriesOptions() {\n\t\n\t            var neededColors = series.length, maxIndex = -1, i;\n\t\n\t            // Subtract the number of series that already have fixed colors or\n\t            // color indexes from the number that we still need to generate.\n\t\n\t            for (i = 0; i < series.length; ++i) {\n\t                var sc = series[i].color;\n\t                if (sc != null) {\n\t                    neededColors--;\n\t                    if (typeof sc == \"number\" && sc > maxIndex) {\n\t                        maxIndex = sc;\n\t                    }\n\t                }\n\t            }\n\t\n\t            // If any of the series have fixed color indexes, then we need to\n\t            // generate at least as many colors as the highest index.\n\t\n\t            if (neededColors <= maxIndex) {\n\t                neededColors = maxIndex + 1;\n\t            }\n\t\n\t            // Generate all the colors, using first the option colors and then\n\t            // variations on those colors once they're exhausted.\n\t\n\t            var c, colors = [], colorPool = options.colors,\n\t                colorPoolSize = colorPool.length, variation = 0;\n\t\n\t            for (i = 0; i < neededColors; i++) {\n\t\n\t                c = $.color.parse(colorPool[i % colorPoolSize] || \"#666\");\n\t\n\t                // Each time we exhaust the colors in the pool we adjust\n\t                // a scaling factor used to produce more variations on\n\t                // those colors. The factor alternates negative/positive\n\t                // to produce lighter/darker colors.\n\t\n\t                // Reset the variation after every few cycles, or else\n\t                // it will end up producing only white or black colors.\n\t\n\t                if (i % colorPoolSize == 0 && i) {\n\t                    if (variation >= 0) {\n\t                        if (variation < 0.5) {\n\t                            variation = -variation - 0.2;\n\t                        } else variation = 0;\n\t                    } else variation = -variation;\n\t                }\n\t\n\t                colors[i] = c.scale('rgb', 1 + variation);\n\t            }\n\t\n\t            // Finalize the series options, filling in their colors\n\t\n\t            var colori = 0, s;\n\t            for (i = 0; i < series.length; ++i) {\n\t                s = series[i];\n\t\n\t                // assign colors\n\t                if (s.color == null) {\n\t                    s.color = colors[colori].toString();\n\t                    ++colori;\n\t                }\n\t                else if (typeof s.color == \"number\")\n\t                    s.color = colors[s.color].toString();\n\t\n\t                // turn on lines automatically in case nothing is set\n\t                if (s.lines.show == null) {\n\t                    var v, show = true;\n\t                    for (v in s)\n\t                        if (s[v] && s[v].show) {\n\t                            show = false;\n\t                            break;\n\t                        }\n\t                    if (show)\n\t                        s.lines.show = true;\n\t                }\n\t\n\t                // If nothing was provided for lines.zero, default it to match\n\t                // lines.fill, since areas by default should extend to zero.\n\t\n\t                if (s.lines.zero == null) {\n\t                    s.lines.zero = !!s.lines.fill;\n\t                }\n\t\n\t                // setup axes\n\t                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, \"x\"));\n\t                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, \"y\"));\n\t            }\n\t        }\n\t\n\t        function processData() {\n\t            var topSentry = Number.POSITIVE_INFINITY,\n\t                bottomSentry = Number.NEGATIVE_INFINITY,\n\t                fakeInfinity = Number.MAX_VALUE,\n\t                i, j, k, m, length,\n\t                s, points, ps, x, y, axis, val, f, p,\n\t                data, format;\n\t\n\t            function updateAxis(axis, min, max) {\n\t                if (min < axis.datamin && min != -fakeInfinity)\n\t                    axis.datamin = min;\n\t                if (max > axis.datamax && max != fakeInfinity)\n\t                    axis.datamax = max;\n\t            }\n\t\n\t            $.each(allAxes(), function (_, axis) {\n\t                // init axis\n\t                axis.datamin = topSentry;\n\t                axis.datamax = bottomSentry;\n\t                axis.used = false;\n\t            });\n\t\n\t            for (i = 0; i < series.length; ++i) {\n\t                s = series[i];\n\t                s.datapoints = { points: [] };\n\t\n\t                executeHooks(hooks.processRawData, [ s, s.data, s.datapoints ]);\n\t            }\n\t\n\t            // first pass: clean and copy data\n\t            for (i = 0; i < series.length; ++i) {\n\t                s = series[i];\n\t\n\t                data = s.data;\n\t                format = s.datapoints.format;\n\t\n\t                if (!format) {\n\t                    format = [];\n\t                    // find out how to copy\n\t                    format.push({ x: true, number: true, required: true });\n\t                    format.push({ y: true, number: true, required: true });\n\t\n\t                    if (s.bars.show || (s.lines.show && s.lines.fill)) {\n\t                        var autoscale = !!((s.bars.show && s.bars.zero) || (s.lines.show && s.lines.zero));\n\t                        format.push({ y: true, number: true, required: false, defaultValue: 0, autoscale: autoscale });\n\t                        if (s.bars.horizontal) {\n\t                            delete format[format.length - 1].y;\n\t                            format[format.length - 1].x = true;\n\t                        }\n\t                    }\n\t\n\t                    s.datapoints.format = format;\n\t                }\n\t\n\t                if (s.datapoints.pointsize != null)\n\t                    continue; // already filled in\n\t\n\t                s.datapoints.pointsize = format.length;\n\t\n\t                ps = s.datapoints.pointsize;\n\t                points = s.datapoints.points;\n\t\n\t                var insertSteps = s.lines.show && s.lines.steps;\n\t                s.xaxis.used = s.yaxis.used = true;\n\t\n\t                for (j = k = 0; j < data.length; ++j, k += ps) {\n\t                    p = data[j];\n\t\n\t                    var nullify = p == null;\n\t                    if (!nullify) {\n\t                        for (m = 0; m < ps; ++m) {\n\t                            val = p[m];\n\t                            f = format[m];\n\t\n\t                            if (f) {\n\t                                if (f.number && val != null) {\n\t                                    val = +val; // convert to number\n\t                                    if (isNaN(val))\n\t                                        val = null;\n\t                                    else if (val == Infinity)\n\t                                        val = fakeInfinity;\n\t                                    else if (val == -Infinity)\n\t                                        val = -fakeInfinity;\n\t                                }\n\t\n\t                                if (val == null) {\n\t                                    if (f.required)\n\t                                        nullify = true;\n\t\n\t                                    if (f.defaultValue != null)\n\t                                        val = f.defaultValue;\n\t                                }\n\t                            }\n\t\n\t                            points[k + m] = val;\n\t                        }\n\t                    }\n\t\n\t                    if (nullify) {\n\t                        for (m = 0; m < ps; ++m) {\n\t                            val = points[k + m];\n\t                            if (val != null) {\n\t                                f = format[m];\n\t                                // extract min/max info\n\t                                if (f.autoscale !== false) {\n\t                                    if (f.x) {\n\t                                        updateAxis(s.xaxis, val, val);\n\t                                    }\n\t                                    if (f.y) {\n\t                                        updateAxis(s.yaxis, val, val);\n\t                                    }\n\t                                }\n\t                            }\n\t                            points[k + m] = null;\n\t                        }\n\t                    }\n\t                    else {\n\t                        // a little bit of line specific stuff that\n\t                        // perhaps shouldn't be here, but lacking\n\t                        // better means...\n\t                        if (insertSteps && k > 0\n\t                            && points[k - ps] != null\n\t                            && points[k - ps] != points[k]\n\t                            && points[k - ps + 1] != points[k + 1]) {\n\t                            // copy the point to make room for a middle point\n\t                            for (m = 0; m < ps; ++m)\n\t                                points[k + ps + m] = points[k + m];\n\t\n\t                            // middle point has same y\n\t                            points[k + 1] = points[k - ps + 1];\n\t\n\t                            // we've added a point, better reflect that\n\t                            k += ps;\n\t                        }\n\t                    }\n\t                }\n\t            }\n\t\n\t            // give the hooks a chance to run\n\t            for (i = 0; i < series.length; ++i) {\n\t                s = series[i];\n\t\n\t                executeHooks(hooks.processDatapoints, [ s, s.datapoints]);\n\t            }\n\t\n\t            // second pass: find datamax/datamin for auto-scaling\n\t            for (i = 0; i < series.length; ++i) {\n\t                s = series[i];\n\t                points = s.datapoints.points;\n\t                ps = s.datapoints.pointsize;\n\t                format = s.datapoints.format;\n\t\n\t                var xmin = topSentry, ymin = topSentry,\n\t                    xmax = bottomSentry, ymax = bottomSentry;\n\t\n\t                for (j = 0; j < points.length; j += ps) {\n\t                    if (points[j] == null)\n\t                        continue;\n\t\n\t                    for (m = 0; m < ps; ++m) {\n\t                        val = points[j + m];\n\t                        f = format[m];\n\t                        if (!f || f.autoscale === false || val == fakeInfinity || val == -fakeInfinity)\n\t                            continue;\n\t\n\t                        if (f.x) {\n\t                            if (val < xmin)\n\t                                xmin = val;\n\t                            if (val > xmax)\n\t                                xmax = val;\n\t                        }\n\t                        if (f.y) {\n\t                            if (val < ymin)\n\t                                ymin = val;\n\t                            if (val > ymax)\n\t                                ymax = val;\n\t                        }\n\t                    }\n\t                }\n\t\n\t                if (s.bars.show) {\n\t                    // make sure we got room for the bar on the dancing floor\n\t                    var delta;\n\t\n\t                    switch (s.bars.align) {\n\t                        case \"left\":\n\t                            delta = 0;\n\t                            break;\n\t                        case \"right\":\n\t                            delta = -s.bars.barWidth;\n\t                            break;\n\t                        default:\n\t                            delta = -s.bars.barWidth / 2;\n\t                    }\n\t\n\t                    if (s.bars.horizontal) {\n\t                        ymin += delta;\n\t                        ymax += delta + s.bars.barWidth;\n\t                    }\n\t                    else {\n\t                        xmin += delta;\n\t                        xmax += delta + s.bars.barWidth;\n\t                    }\n\t                }\n\t\n\t                updateAxis(s.xaxis, xmin, xmax);\n\t                updateAxis(s.yaxis, ymin, ymax);\n\t            }\n\t\n\t            $.each(allAxes(), function (_, axis) {\n\t                if (axis.datamin == topSentry)\n\t                    axis.datamin = null;\n\t                if (axis.datamax == bottomSentry)\n\t                    axis.datamax = null;\n\t            });\n\t        }\n\t\n\t        function setupCanvases() {\n\t\n\t            // Make sure the placeholder is clear of everything except canvases\n\t            // from a previous plot in this container that we'll try to re-use.\n\t\n\t            placeholder.css(\"padding\", 0) // padding messes up the positioning\n\t                .children().filter(function(){\n\t                    return !$(this).hasClass(\"flot-overlay\") && !$(this).hasClass('flot-base');\n\t                }).remove();\n\t\n\t            if (placeholder.css(\"position\") == 'static')\n\t                placeholder.css(\"position\", \"relative\"); // for positioning labels and overlay\n\t\n\t            surface = new Canvas(\"flot-base\", placeholder);\n\t            overlay = new Canvas(\"flot-overlay\", placeholder); // overlay canvas for interactive features\n\t\n\t            ctx = surface.context;\n\t            octx = overlay.context;\n\t\n\t            // define which element we're listening for events on\n\t            eventHolder = $(overlay.element).unbind();\n\t\n\t            // If we're re-using a plot object, shut down the old one\n\t\n\t            var existing = placeholder.data(\"plot\");\n\t\n\t            if (existing) {\n\t                existing.shutdown();\n\t                overlay.clear();\n\t            }\n\t\n\t            // save in case we get replotted\n\t            placeholder.data(\"plot\", plot);\n\t        }\n\t\n\t        function bindEvents() {\n\t            // bind events\n\t            if (options.grid.hoverable) {\n\t                eventHolder.mousemove(onMouseMove);\n\t\n\t                // Use bind, rather than .mouseleave, because we officially\n\t                // still support jQuery 1.2.6, which doesn't define a shortcut\n\t                // for mouseenter or mouseleave.  This was a bug/oversight that\n\t                // was fixed somewhere around 1.3.x.  We can return to using\n\t                // .mouseleave when we drop support for 1.2.6.\n\t\n\t                eventHolder.bind(\"mouseleave\", onMouseLeave);\n\t            }\n\t\n\t            if (options.grid.clickable)\n\t                eventHolder.click(onClick);\n\t\n\t            executeHooks(hooks.bindEvents, [eventHolder]);\n\t        }\n\t\n\t        function shutdown() {\n\t            if (redrawTimeout)\n\t                clearTimeout(redrawTimeout);\n\t\n\t            eventHolder.unbind(\"mousemove\", onMouseMove);\n\t            eventHolder.unbind(\"mouseleave\", onMouseLeave);\n\t            eventHolder.unbind(\"click\", onClick);\n\t\n\t            executeHooks(hooks.shutdown, [eventHolder]);\n\t        }\n\t\n\t        function setTransformationHelpers(axis) {\n\t            // set helper functions on the axis, assumes plot area\n\t            // has been computed already\n\t\n\t            function identity(x) { return x; }\n\t\n\t            var s, m, t = axis.options.transform || identity,\n\t                it = axis.options.inverseTransform;\n\t\n\t            // precompute how much the axis is scaling a point\n\t            // in canvas space\n\t            if (axis.direction == \"x\") {\n\t                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));\n\t                m = Math.min(t(axis.max), t(axis.min));\n\t            }\n\t            else {\n\t                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));\n\t                s = -s;\n\t                m = Math.max(t(axis.max), t(axis.min));\n\t            }\n\t\n\t            // data point to canvas coordinate\n\t            if (t == identity) // slight optimization\n\t                axis.p2c = function (p) { return (p - m) * s; };\n\t            else\n\t                axis.p2c = function (p) { return (t(p) - m) * s; };\n\t            // canvas coordinate to data point\n\t            if (!it)\n\t                axis.c2p = function (c) { return m + c / s; };\n\t            else\n\t                axis.c2p = function (c) { return it(m + c / s); };\n\t        }\n\t\n\t        function measureTickLabels(axis) {\n\t\n\t            var opts = axis.options,\n\t                ticks = axis.ticks || [],\n\t                labelWidth = opts.labelWidth || 0,\n\t                labelHeight = opts.labelHeight || 0,\n\t                maxWidth = labelWidth || (axis.direction == \"x\" ? Math.floor(surface.width / (ticks.length || 1)) : null),\n\t                legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n\t                layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n\t                font = opts.font || \"flot-tick-label tickLabel\";\n\t\n\t            for (var i = 0; i < ticks.length; ++i) {\n\t\n\t                var t = ticks[i];\n\t\n\t                if (!t.label)\n\t                    continue;\n\t\n\t                var info = surface.getTextInfo(layer, t.label, font, null, maxWidth);\n\t\n\t                labelWidth = Math.max(labelWidth, info.width);\n\t                labelHeight = Math.max(labelHeight, info.height);\n\t            }\n\t\n\t            axis.labelWidth = opts.labelWidth || labelWidth;\n\t            axis.labelHeight = opts.labelHeight || labelHeight;\n\t        }\n\t\n\t        function allocateAxisBoxFirstPhase(axis) {\n\t            // find the bounding box of the axis by looking at label\n\t            // widths/heights and ticks, make room by diminishing the\n\t            // plotOffset; this first phase only looks at one\n\t            // dimension per axis, the other dimension depends on the\n\t            // other axes so will have to wait\n\t\n\t            var lw = axis.labelWidth,\n\t                lh = axis.labelHeight,\n\t                pos = axis.options.position,\n\t                isXAxis = axis.direction === \"x\",\n\t                tickLength = axis.options.tickLength,\n\t                axisMargin = options.grid.axisMargin,\n\t                padding = options.grid.labelMargin,\n\t                innermost = true,\n\t                outermost = true,\n\t                first = true,\n\t                found = false;\n\t\n\t            // Determine the axis's position in its direction and on its side\n\t\n\t            $.each(isXAxis ? xaxes : yaxes, function(i, a) {\n\t                if (a && (a.show || a.reserveSpace)) {\n\t                    if (a === axis) {\n\t                        found = true;\n\t                    } else if (a.options.position === pos) {\n\t                        if (found) {\n\t                            outermost = false;\n\t                        } else {\n\t                            innermost = false;\n\t                        }\n\t                    }\n\t                    if (!found) {\n\t                        first = false;\n\t                    }\n\t                }\n\t            });\n\t\n\t            // The outermost axis on each side has no margin\n\t\n\t            if (outermost) {\n\t                axisMargin = 0;\n\t            }\n\t\n\t            // The ticks for the first axis in each direction stretch across\n\t\n\t            if (tickLength == null) {\n\t                tickLength = first ? \"full\" : 5;\n\t            }\n\t\n\t            if (!isNaN(+tickLength))\n\t                padding += +tickLength;\n\t\n\t            if (isXAxis) {\n\t                lh += padding;\n\t\n\t                if (pos == \"bottom\") {\n\t                    plotOffset.bottom += lh + axisMargin;\n\t                    axis.box = { top: surface.height - plotOffset.bottom, height: lh };\n\t                }\n\t                else {\n\t                    axis.box = { top: plotOffset.top + axisMargin, height: lh };\n\t                    plotOffset.top += lh + axisMargin;\n\t                }\n\t            }\n\t            else {\n\t                lw += padding;\n\t\n\t                if (pos == \"left\") {\n\t                    axis.box = { left: plotOffset.left + axisMargin, width: lw };\n\t                    plotOffset.left += lw + axisMargin;\n\t                }\n\t                else {\n\t                    plotOffset.right += lw + axisMargin;\n\t                    axis.box = { left: surface.width - plotOffset.right, width: lw };\n\t                }\n\t            }\n\t\n\t             // save for future reference\n\t            axis.position = pos;\n\t            axis.tickLength = tickLength;\n\t            axis.box.padding = padding;\n\t            axis.innermost = innermost;\n\t        }\n\t\n\t        function allocateAxisBoxSecondPhase(axis) {\n\t            // now that all axis boxes have been placed in one\n\t            // dimension, we can set the remaining dimension coordinates\n\t            if (axis.direction == \"x\") {\n\t                axis.box.left = plotOffset.left - axis.labelWidth / 2;\n\t                axis.box.width = surface.width - plotOffset.left - plotOffset.right + axis.labelWidth;\n\t            }\n\t            else {\n\t                axis.box.top = plotOffset.top - axis.labelHeight / 2;\n\t                axis.box.height = surface.height - plotOffset.bottom - plotOffset.top + axis.labelHeight;\n\t            }\n\t        }\n\t\n\t        function adjustLayoutForThingsStickingOut() {\n\t            // possibly adjust plot offset to ensure everything stays\n\t            // inside the canvas and isn't clipped off\n\t\n\t            var minMargin = options.grid.minBorderMargin,\n\t                axis, i;\n\t\n\t            // check stuff from the plot (FIXME: this should just read\n\t            // a value from the series, otherwise it's impossible to\n\t            // customize)\n\t            if (minMargin == null) {\n\t                minMargin = 0;\n\t                for (i = 0; i < series.length; ++i)\n\t                    minMargin = Math.max(minMargin, 2 * (series[i].points.radius + series[i].points.lineWidth/2));\n\t            }\n\t\n\t            var margins = {\n\t                left: minMargin,\n\t                right: minMargin,\n\t                top: minMargin,\n\t                bottom: minMargin\n\t            };\n\t\n\t            // check axis labels, note we don't check the actual\n\t            // labels but instead use the overall width/height to not\n\t            // jump as much around with replots\n\t            $.each(allAxes(), function (_, axis) {\n\t                if (axis.reserveSpace && axis.ticks && axis.ticks.length) {\n\t                    if (axis.direction === \"x\") {\n\t                        margins.left = Math.max(margins.left, axis.labelWidth / 2);\n\t                        margins.right = Math.max(margins.right, axis.labelWidth / 2);\n\t                    } else {\n\t                        margins.bottom = Math.max(margins.bottom, axis.labelHeight / 2);\n\t                        margins.top = Math.max(margins.top, axis.labelHeight / 2);\n\t                    }\n\t                }\n\t            });\n\t\n\t            plotOffset.left = Math.ceil(Math.max(margins.left, plotOffset.left));\n\t            plotOffset.right = Math.ceil(Math.max(margins.right, plotOffset.right));\n\t            plotOffset.top = Math.ceil(Math.max(margins.top, plotOffset.top));\n\t            plotOffset.bottom = Math.ceil(Math.max(margins.bottom, plotOffset.bottom));\n\t        }\n\t\n\t        function setupGrid() {\n\t            var i, axes = allAxes(), showGrid = options.grid.show;\n\t\n\t            // Initialize the plot's offset from the edge of the canvas\n\t\n\t            for (var a in plotOffset) {\n\t                var margin = options.grid.margin || 0;\n\t                plotOffset[a] = typeof margin == \"number\" ? margin : margin[a] || 0;\n\t            }\n\t\n\t            executeHooks(hooks.processOffset, [plotOffset]);\n\t\n\t            // If the grid is visible, add its border width to the offset\n\t\n\t            for (var a in plotOffset) {\n\t                if(typeof(options.grid.borderWidth) == \"object\") {\n\t                    plotOffset[a] += showGrid ? options.grid.borderWidth[a] : 0;\n\t                }\n\t                else {\n\t                    plotOffset[a] += showGrid ? options.grid.borderWidth : 0;\n\t                }\n\t            }\n\t\n\t            $.each(axes, function (_, axis) {\n\t                var axisOpts = axis.options;\n\t                axis.show = axisOpts.show == null ? axis.used : axisOpts.show;\n\t                axis.reserveSpace = axisOpts.reserveSpace == null ? axis.show : axisOpts.reserveSpace;\n\t                setRange(axis);\n\t            });\n\t\n\t            if (showGrid) {\n\t\n\t                var allocatedAxes = $.grep(axes, function (axis) {\n\t                    return axis.show || axis.reserveSpace;\n\t                });\n\t\n\t                $.each(allocatedAxes, function (_, axis) {\n\t                    // make the ticks\n\t                    setupTickGeneration(axis);\n\t                    setTicks(axis);\n\t                    snapRangeToTicks(axis, axis.ticks);\n\t                    // find labelWidth/Height for axis\n\t                    measureTickLabels(axis);\n\t                });\n\t\n\t                // with all dimensions calculated, we can compute the\n\t                // axis bounding boxes, start from the outside\n\t                // (reverse order)\n\t                for (i = allocatedAxes.length - 1; i >= 0; --i)\n\t                    allocateAxisBoxFirstPhase(allocatedAxes[i]);\n\t\n\t                // make sure we've got enough space for things that\n\t                // might stick out\n\t                adjustLayoutForThingsStickingOut();\n\t\n\t                $.each(allocatedAxes, function (_, axis) {\n\t                    allocateAxisBoxSecondPhase(axis);\n\t                });\n\t            }\n\t\n\t            plotWidth = surface.width - plotOffset.left - plotOffset.right;\n\t            plotHeight = surface.height - plotOffset.bottom - plotOffset.top;\n\t\n\t            // now we got the proper plot dimensions, we can compute the scaling\n\t            $.each(axes, function (_, axis) {\n\t                setTransformationHelpers(axis);\n\t            });\n\t\n\t            if (showGrid) {\n\t                drawAxisLabels();\n\t            }\n\t\n\t            insertLegend();\n\t        }\n\t\n\t        function setRange(axis) {\n\t            var opts = axis.options,\n\t                min = +(opts.min != null ? opts.min : axis.datamin),\n\t                max = +(opts.max != null ? opts.max : axis.datamax),\n\t                delta = max - min;\n\t\n\t            if (delta == 0.0) {\n\t                // degenerate case\n\t                var widen = max == 0 ? 1 : 0.01;\n\t\n\t                if (opts.min == null)\n\t                    min -= widen;\n\t                // always widen max if we couldn't widen min to ensure we\n\t                // don't fall into min == max which doesn't work\n\t                if (opts.max == null || opts.min != null)\n\t                    max += widen;\n\t            }\n\t            else {\n\t                // consider autoscaling\n\t                var margin = opts.autoscaleMargin;\n\t                if (margin != null) {\n\t                    if (opts.min == null) {\n\t                        min -= delta * margin;\n\t                        // make sure we don't go below zero if all values\n\t                        // are positive\n\t                        if (min < 0 && axis.datamin != null && axis.datamin >= 0)\n\t                            min = 0;\n\t                    }\n\t                    if (opts.max == null) {\n\t                        max += delta * margin;\n\t                        if (max > 0 && axis.datamax != null && axis.datamax <= 0)\n\t                            max = 0;\n\t                    }\n\t                }\n\t            }\n\t            axis.min = min;\n\t            axis.max = max;\n\t        }\n\t\n\t        function setupTickGeneration(axis) {\n\t            var opts = axis.options;\n\t\n\t            // estimate number of ticks\n\t            var noTicks;\n\t            if (typeof opts.ticks == \"number\" && opts.ticks > 0)\n\t                noTicks = opts.ticks;\n\t            else\n\t                // heuristic based on the model a*sqrt(x) fitted to\n\t                // some data points that seemed reasonable\n\t                noTicks = 0.3 * Math.sqrt(axis.direction == \"x\" ? surface.width : surface.height);\n\t\n\t            var delta = (axis.max - axis.min) / noTicks,\n\t                dec = -Math.floor(Math.log(delta) / Math.LN10),\n\t                maxDec = opts.tickDecimals;\n\t\n\t            if (maxDec != null && dec > maxDec) {\n\t                dec = maxDec;\n\t            }\n\t\n\t            var magn = Math.pow(10, -dec),\n\t                norm = delta / magn, // norm is between 1.0 and 10.0\n\t                size;\n\t\n\t            if (norm < 1.5) {\n\t                size = 1;\n\t            } else if (norm < 3) {\n\t                size = 2;\n\t                // special case for 2.5, requires an extra decimal\n\t                if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {\n\t                    size = 2.5;\n\t                    ++dec;\n\t                }\n\t            } else if (norm < 7.5) {\n\t                size = 5;\n\t            } else {\n\t                size = 10;\n\t            }\n\t\n\t            size *= magn;\n\t\n\t            if (opts.minTickSize != null && size < opts.minTickSize) {\n\t                size = opts.minTickSize;\n\t            }\n\t\n\t            axis.delta = delta;\n\t            axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);\n\t            axis.tickSize = opts.tickSize || size;\n\t\n\t            // Time mode was moved to a plug-in in 0.8, and since so many people use it\n\t            // we'll add an especially friendly reminder to make sure they included it.\n\t\n\t            if (opts.mode == \"time\" && !axis.tickGenerator) {\n\t                throw new Error(\"Time mode requires the flot.time plugin.\");\n\t            }\n\t\n\t            // Flot supports base-10 axes; any other mode else is handled by a plug-in,\n\t            // like flot.time.js.\n\t\n\t            if (!axis.tickGenerator) {\n\t\n\t                axis.tickGenerator = function (axis) {\n\t\n\t                    var ticks = [],\n\t                        start = floorInBase(axis.min, axis.tickSize),\n\t                        i = 0,\n\t                        v = Number.NaN,\n\t                        prev;\n\t\n\t                    do {\n\t                        prev = v;\n\t                        v = start + i * axis.tickSize;\n\t                        ticks.push(v);\n\t                        ++i;\n\t                    } while (v < axis.max && v != prev);\n\t                    return ticks;\n\t                };\n\t\n\t\t\t\t\taxis.tickFormatter = function (value, axis) {\n\t\n\t\t\t\t\t\tvar factor = axis.tickDecimals ? Math.pow(10, axis.tickDecimals) : 1;\n\t\t\t\t\t\tvar formatted = \"\" + Math.round(value * factor) / factor;\n\t\n\t\t\t\t\t\t// If tickDecimals was specified, ensure that we have exactly that\n\t\t\t\t\t\t// much precision; otherwise default to the value's own precision.\n\t\n\t\t\t\t\t\tif (axis.tickDecimals != null) {\n\t\t\t\t\t\t\tvar decimal = formatted.indexOf(\".\");\n\t\t\t\t\t\t\tvar precision = decimal == -1 ? 0 : formatted.length - decimal - 1;\n\t\t\t\t\t\t\tif (precision < axis.tickDecimals) {\n\t\t\t\t\t\t\t\treturn (precision ? formatted : formatted + \".\") + (\"\" + factor).substr(1, axis.tickDecimals - precision);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\n\t                    return formatted;\n\t                };\n\t            }\n\t\n\t            if ($.isFunction(opts.tickFormatter))\n\t                axis.tickFormatter = function (v, axis) { return \"\" + opts.tickFormatter(v, axis); };\n\t\n\t            if (opts.alignTicksWithAxis != null) {\n\t                var otherAxis = (axis.direction == \"x\" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];\n\t                if (otherAxis && otherAxis.used && otherAxis != axis) {\n\t                    // consider snapping min/max to outermost nice ticks\n\t                    var niceTicks = axis.tickGenerator(axis);\n\t                    if (niceTicks.length > 0) {\n\t                        if (opts.min == null)\n\t                            axis.min = Math.min(axis.min, niceTicks[0]);\n\t                        if (opts.max == null && niceTicks.length > 1)\n\t                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);\n\t                    }\n\t\n\t                    axis.tickGenerator = function (axis) {\n\t                        // copy ticks, scaled to this axis\n\t                        var ticks = [], v, i;\n\t                        for (i = 0; i < otherAxis.ticks.length; ++i) {\n\t                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);\n\t                            v = axis.min + v * (axis.max - axis.min);\n\t                            ticks.push(v);\n\t                        }\n\t                        return ticks;\n\t                    };\n\t\n\t                    // we might need an extra decimal since forced\n\t                    // ticks don't necessarily fit naturally\n\t                    if (!axis.mode && opts.tickDecimals == null) {\n\t                        var extraDec = Math.max(0, -Math.floor(Math.log(axis.delta) / Math.LN10) + 1),\n\t                            ts = axis.tickGenerator(axis);\n\t\n\t                        // only proceed if the tick interval rounded\n\t                        // with an extra decimal doesn't give us a\n\t                        // zero at end\n\t                        if (!(ts.length > 1 && /\\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))))\n\t                            axis.tickDecimals = extraDec;\n\t                    }\n\t                }\n\t            }\n\t        }\n\t\n\t        function setTicks(axis) {\n\t            var oticks = axis.options.ticks, ticks = [];\n\t            if (oticks == null || (typeof oticks == \"number\" && oticks > 0))\n\t                ticks = axis.tickGenerator(axis);\n\t            else if (oticks) {\n\t                if ($.isFunction(oticks))\n\t                    // generate the ticks\n\t                    ticks = oticks(axis);\n\t                else\n\t                    ticks = oticks;\n\t            }\n\t\n\t            // clean up/labelify the supplied ticks, copy them over\n\t            var i, v;\n\t            axis.ticks = [];\n\t            for (i = 0; i < ticks.length; ++i) {\n\t                var label = null;\n\t                var t = ticks[i];\n\t                if (typeof t == \"object\") {\n\t                    v = +t[0];\n\t                    if (t.length > 1)\n\t                        label = t[1];\n\t                }\n\t                else\n\t                    v = +t;\n\t                if (label == null)\n\t                    label = axis.tickFormatter(v, axis);\n\t                if (!isNaN(v))\n\t                    axis.ticks.push({ v: v, label: label });\n\t            }\n\t        }\n\t\n\t        function snapRangeToTicks(axis, ticks) {\n\t            if (axis.options.autoscaleMargin && ticks.length > 0) {\n\t                // snap to ticks\n\t                if (axis.options.min == null)\n\t                    axis.min = Math.min(axis.min, ticks[0].v);\n\t                if (axis.options.max == null && ticks.length > 1)\n\t                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);\n\t            }\n\t        }\n\t\n\t        function draw() {\n\t\n\t            surface.clear();\n\t\n\t            executeHooks(hooks.drawBackground, [ctx]);\n\t\n\t            var grid = options.grid;\n\t\n\t            // draw background, if any\n\t            if (grid.show && grid.backgroundColor)\n\t                drawBackground();\n\t\n\t            if (grid.show && !grid.aboveData) {\n\t                drawGrid();\n\t            }\n\t\n\t            for (var i = 0; i < series.length; ++i) {\n\t                executeHooks(hooks.drawSeries, [ctx, series[i]]);\n\t                drawSeries(series[i]);\n\t            }\n\t\n\t            executeHooks(hooks.draw, [ctx]);\n\t\n\t            if (grid.show && grid.aboveData) {\n\t                drawGrid();\n\t            }\n\t\n\t            surface.render();\n\t\n\t            // A draw implies that either the axes or data have changed, so we\n\t            // should probably update the overlay highlights as well.\n\t\n\t            triggerRedrawOverlay();\n\t        }\n\t\n\t        function extractRange(ranges, coord) {\n\t            var axis, from, to, key, axes = allAxes();\n\t\n\t            for (var i = 0; i < axes.length; ++i) {\n\t                axis = axes[i];\n\t                if (axis.direction == coord) {\n\t                    key = coord + axis.n + \"axis\";\n\t                    if (!ranges[key] && axis.n == 1)\n\t                        key = coord + \"axis\"; // support x1axis as xaxis\n\t                    if (ranges[key]) {\n\t                        from = ranges[key].from;\n\t                        to = ranges[key].to;\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t\n\t            // backwards-compat stuff - to be removed in future\n\t            if (!ranges[key]) {\n\t                axis = coord == \"x\" ? xaxes[0] : yaxes[0];\n\t                from = ranges[coord + \"1\"];\n\t                to = ranges[coord + \"2\"];\n\t            }\n\t\n\t            // auto-reverse as an added bonus\n\t            if (from != null && to != null && from > to) {\n\t                var tmp = from;\n\t                from = to;\n\t                to = tmp;\n\t            }\n\t\n\t            return { from: from, to: to, axis: axis };\n\t        }\n\t\n\t        function drawBackground() {\n\t            ctx.save();\n\t            ctx.translate(plotOffset.left, plotOffset.top);\n\t\n\t            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, \"rgba(255, 255, 255, 0)\");\n\t            ctx.fillRect(0, 0, plotWidth, plotHeight);\n\t            ctx.restore();\n\t        }\n\t\n\t        function drawGrid() {\n\t            var i, axes, bw, bc;\n\t\n\t            ctx.save();\n\t            ctx.translate(plotOffset.left, plotOffset.top);\n\t\n\t            // draw markings\n\t            var markings = options.grid.markings;\n\t            if (markings) {\n\t                if ($.isFunction(markings)) {\n\t                    axes = plot.getAxes();\n\t                    // xmin etc. is backwards compatibility, to be\n\t                    // removed in the future\n\t                    axes.xmin = axes.xaxis.min;\n\t                    axes.xmax = axes.xaxis.max;\n\t                    axes.ymin = axes.yaxis.min;\n\t                    axes.ymax = axes.yaxis.max;\n\t\n\t                    markings = markings(axes);\n\t                }\n\t\n\t                for (i = 0; i < markings.length; ++i) {\n\t                    var m = markings[i],\n\t                        xrange = extractRange(m, \"x\"),\n\t                        yrange = extractRange(m, \"y\");\n\t\n\t                    // fill in missing\n\t                    if (xrange.from == null)\n\t                        xrange.from = xrange.axis.min;\n\t                    if (xrange.to == null)\n\t                        xrange.to = xrange.axis.max;\n\t                    if (yrange.from == null)\n\t                        yrange.from = yrange.axis.min;\n\t                    if (yrange.to == null)\n\t                        yrange.to = yrange.axis.max;\n\t\n\t                    // clip\n\t                    if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max ||\n\t                        yrange.to < yrange.axis.min || yrange.from > yrange.axis.max)\n\t                        continue;\n\t\n\t                    xrange.from = Math.max(xrange.from, xrange.axis.min);\n\t                    xrange.to = Math.min(xrange.to, xrange.axis.max);\n\t                    yrange.from = Math.max(yrange.from, yrange.axis.min);\n\t                    yrange.to = Math.min(yrange.to, yrange.axis.max);\n\t\n\t                    var xequal = xrange.from === xrange.to,\n\t                        yequal = yrange.from === yrange.to;\n\t\n\t                    if (xequal && yequal) {\n\t                        continue;\n\t                    }\n\t\n\t                    // then draw\n\t                    xrange.from = Math.floor(xrange.axis.p2c(xrange.from));\n\t                    xrange.to = Math.floor(xrange.axis.p2c(xrange.to));\n\t                    yrange.from = Math.floor(yrange.axis.p2c(yrange.from));\n\t                    yrange.to = Math.floor(yrange.axis.p2c(yrange.to));\n\t\n\t                    if (xequal || yequal) {\n\t                        var lineWidth = m.lineWidth || options.grid.markingsLineWidth,\n\t                            subPixel = lineWidth % 2 ? 0.5 : 0;\n\t                        ctx.beginPath();\n\t                        ctx.strokeStyle = m.color || options.grid.markingsColor;\n\t                        ctx.lineWidth = lineWidth;\n\t                        if (xequal) {\n\t                            ctx.moveTo(xrange.to + subPixel, yrange.from);\n\t                            ctx.lineTo(xrange.to + subPixel, yrange.to);\n\t                        } else {\n\t                            ctx.moveTo(xrange.from, yrange.to + subPixel);\n\t                            ctx.lineTo(xrange.to, yrange.to + subPixel);                            \n\t                        }\n\t                        ctx.stroke();\n\t                    } else {\n\t                        ctx.fillStyle = m.color || options.grid.markingsColor;\n\t                        ctx.fillRect(xrange.from, yrange.to,\n\t                                     xrange.to - xrange.from,\n\t                                     yrange.from - yrange.to);\n\t                    }\n\t                }\n\t            }\n\t\n\t            // draw the ticks\n\t            axes = allAxes();\n\t            bw = options.grid.borderWidth;\n\t\n\t            for (var j = 0; j < axes.length; ++j) {\n\t                var axis = axes[j], box = axis.box,\n\t                    t = axis.tickLength, x, y, xoff, yoff;\n\t                if (!axis.show || axis.ticks.length == 0)\n\t                    continue;\n\t\n\t                ctx.lineWidth = 1;\n\t\n\t                // find the edges\n\t                if (axis.direction == \"x\") {\n\t                    x = 0;\n\t                    if (t == \"full\")\n\t                        y = (axis.position == \"top\" ? 0 : plotHeight);\n\t                    else\n\t                        y = box.top - plotOffset.top + (axis.position == \"top\" ? box.height : 0);\n\t                }\n\t                else {\n\t                    y = 0;\n\t                    if (t == \"full\")\n\t                        x = (axis.position == \"left\" ? 0 : plotWidth);\n\t                    else\n\t                        x = box.left - plotOffset.left + (axis.position == \"left\" ? box.width : 0);\n\t                }\n\t\n\t                // draw tick bar\n\t                if (!axis.innermost) {\n\t                    ctx.strokeStyle = axis.options.color;\n\t                    ctx.beginPath();\n\t                    xoff = yoff = 0;\n\t                    if (axis.direction == \"x\")\n\t                        xoff = plotWidth + 1;\n\t                    else\n\t                        yoff = plotHeight + 1;\n\t\n\t                    if (ctx.lineWidth == 1) {\n\t                        if (axis.direction == \"x\") {\n\t                            y = Math.floor(y) + 0.5;\n\t                        } else {\n\t                            x = Math.floor(x) + 0.5;\n\t                        }\n\t                    }\n\t\n\t                    ctx.moveTo(x, y);\n\t                    ctx.lineTo(x + xoff, y + yoff);\n\t                    ctx.stroke();\n\t                }\n\t\n\t                // draw ticks\n\t\n\t                ctx.strokeStyle = axis.options.tickColor;\n\t\n\t                ctx.beginPath();\n\t                for (i = 0; i < axis.ticks.length; ++i) {\n\t                    var v = axis.ticks[i].v;\n\t\n\t                    xoff = yoff = 0;\n\t\n\t                    if (isNaN(v) || v < axis.min || v > axis.max\n\t                        // skip those lying on the axes if we got a border\n\t                        || (t == \"full\"\n\t                            && ((typeof bw == \"object\" && bw[axis.position] > 0) || bw > 0)\n\t                            && (v == axis.min || v == axis.max)))\n\t                        continue;\n\t\n\t                    if (axis.direction == \"x\") {\n\t                        x = axis.p2c(v);\n\t                        yoff = t == \"full\" ? -plotHeight : t;\n\t\n\t                        if (axis.position == \"top\")\n\t                            yoff = -yoff;\n\t                    }\n\t                    else {\n\t                        y = axis.p2c(v);\n\t                        xoff = t == \"full\" ? -plotWidth : t;\n\t\n\t                        if (axis.position == \"left\")\n\t                            xoff = -xoff;\n\t                    }\n\t\n\t                    if (ctx.lineWidth == 1) {\n\t                        if (axis.direction == \"x\")\n\t                            x = Math.floor(x) + 0.5;\n\t                        else\n\t                            y = Math.floor(y) + 0.5;\n\t                    }\n\t\n\t                    ctx.moveTo(x, y);\n\t                    ctx.lineTo(x + xoff, y + yoff);\n\t                }\n\t\n\t                ctx.stroke();\n\t            }\n\t\n\t\n\t            // draw border\n\t            if (bw) {\n\t                // If either borderWidth or borderColor is an object, then draw the border\n\t                // line by line instead of as one rectangle\n\t                bc = options.grid.borderColor;\n\t                if(typeof bw == \"object\" || typeof bc == \"object\") {\n\t                    if (typeof bw !== \"object\") {\n\t                        bw = {top: bw, right: bw, bottom: bw, left: bw};\n\t                    }\n\t                    if (typeof bc !== \"object\") {\n\t                        bc = {top: bc, right: bc, bottom: bc, left: bc};\n\t                    }\n\t\n\t                    if (bw.top > 0) {\n\t                        ctx.strokeStyle = bc.top;\n\t                        ctx.lineWidth = bw.top;\n\t                        ctx.beginPath();\n\t                        ctx.moveTo(0 - bw.left, 0 - bw.top/2);\n\t                        ctx.lineTo(plotWidth, 0 - bw.top/2);\n\t                        ctx.stroke();\n\t                    }\n\t\n\t                    if (bw.right > 0) {\n\t                        ctx.strokeStyle = bc.right;\n\t                        ctx.lineWidth = bw.right;\n\t                        ctx.beginPath();\n\t                        ctx.moveTo(plotWidth + bw.right / 2, 0 - bw.top);\n\t                        ctx.lineTo(plotWidth + bw.right / 2, plotHeight);\n\t                        ctx.stroke();\n\t                    }\n\t\n\t                    if (bw.bottom > 0) {\n\t                        ctx.strokeStyle = bc.bottom;\n\t                        ctx.lineWidth = bw.bottom;\n\t                        ctx.beginPath();\n\t                        ctx.moveTo(plotWidth + bw.right, plotHeight + bw.bottom / 2);\n\t                        ctx.lineTo(0, plotHeight + bw.bottom / 2);\n\t                        ctx.stroke();\n\t                    }\n\t\n\t                    if (bw.left > 0) {\n\t                        ctx.strokeStyle = bc.left;\n\t                        ctx.lineWidth = bw.left;\n\t                        ctx.beginPath();\n\t                        ctx.moveTo(0 - bw.left/2, plotHeight + bw.bottom);\n\t                        ctx.lineTo(0- bw.left/2, 0);\n\t                        ctx.stroke();\n\t                    }\n\t                }\n\t                else {\n\t                    ctx.lineWidth = bw;\n\t                    ctx.strokeStyle = options.grid.borderColor;\n\t                    ctx.strokeRect(-bw/2, -bw/2, plotWidth + bw, plotHeight + bw);\n\t                }\n\t            }\n\t\n\t            ctx.restore();\n\t        }\n\t\n\t        function drawAxisLabels() {\n\t\n\t            $.each(allAxes(), function (_, axis) {\n\t                var box = axis.box,\n\t                    legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n\t                    layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n\t                    font = axis.options.font || \"flot-tick-label tickLabel\",\n\t                    tick, x, y, halign, valign;\n\t\n\t                // Remove text before checking for axis.show and ticks.length;\n\t                // otherwise plugins, like flot-tickrotor, that draw their own\n\t                // tick labels will end up with both theirs and the defaults.\n\t\n\t                surface.removeText(layer);\n\t\n\t                if (!axis.show || axis.ticks.length == 0)\n\t                    return;\n\t\n\t                for (var i = 0; i < axis.ticks.length; ++i) {\n\t\n\t                    tick = axis.ticks[i];\n\t                    if (!tick.label || tick.v < axis.min || tick.v > axis.max)\n\t                        continue;\n\t\n\t                    if (axis.direction == \"x\") {\n\t                        halign = \"center\";\n\t                        x = plotOffset.left + axis.p2c(tick.v);\n\t                        if (axis.position == \"bottom\") {\n\t                            y = box.top + box.padding;\n\t                        } else {\n\t                            y = box.top + box.height - box.padding;\n\t                            valign = \"bottom\";\n\t                        }\n\t                    } else {\n\t                        valign = \"middle\";\n\t                        y = plotOffset.top + axis.p2c(tick.v);\n\t                        if (axis.position == \"left\") {\n\t                            x = box.left + box.width - box.padding;\n\t                            halign = \"right\";\n\t                        } else {\n\t                            x = box.left + box.padding;\n\t                        }\n\t                    }\n\t\n\t                    surface.addText(layer, x, y, tick.label, font, null, null, halign, valign);\n\t                }\n\t            });\n\t        }\n\t\n\t        function drawSeries(series) {\n\t            if (series.lines.show)\n\t                drawSeriesLines(series);\n\t            if (series.bars.show)\n\t                drawSeriesBars(series);\n\t            if (series.points.show)\n\t                drawSeriesPoints(series);\n\t        }\n\t\n\t        function drawSeriesLines(series) {\n\t            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {\n\t                var points = datapoints.points,\n\t                    ps = datapoints.pointsize,\n\t                    prevx = null, prevy = null;\n\t\n\t                ctx.beginPath();\n\t                for (var i = ps; i < points.length; i += ps) {\n\t                    var x1 = points[i - ps], y1 = points[i - ps + 1],\n\t                        x2 = points[i], y2 = points[i + 1];\n\t\n\t                    if (x1 == null || x2 == null)\n\t                        continue;\n\t\n\t                    // clip with ymin\n\t                    if (y1 <= y2 && y1 < axisy.min) {\n\t                        if (y2 < axisy.min)\n\t                            continue;   // line segment is outside\n\t                        // compute new intersection point\n\t                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n\t                        y1 = axisy.min;\n\t                    }\n\t                    else if (y2 <= y1 && y2 < axisy.min) {\n\t                        if (y1 < axisy.min)\n\t                            continue;\n\t                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n\t                        y2 = axisy.min;\n\t                    }\n\t\n\t                    // clip with ymax\n\t                    if (y1 >= y2 && y1 > axisy.max) {\n\t                        if (y2 > axisy.max)\n\t                            continue;\n\t                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n\t                        y1 = axisy.max;\n\t                    }\n\t                    else if (y2 >= y1 && y2 > axisy.max) {\n\t                        if (y1 > axisy.max)\n\t                            continue;\n\t                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n\t                        y2 = axisy.max;\n\t                    }\n\t\n\t                    // clip with xmin\n\t                    if (x1 <= x2 && x1 < axisx.min) {\n\t                        if (x2 < axisx.min)\n\t                            continue;\n\t                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n\t                        x1 = axisx.min;\n\t                    }\n\t                    else if (x2 <= x1 && x2 < axisx.min) {\n\t                        if (x1 < axisx.min)\n\t                            continue;\n\t                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n\t                        x2 = axisx.min;\n\t                    }\n\t\n\t                    // clip with xmax\n\t                    if (x1 >= x2 && x1 > axisx.max) {\n\t                        if (x2 > axisx.max)\n\t                            continue;\n\t                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n\t                        x1 = axisx.max;\n\t                    }\n\t                    else if (x2 >= x1 && x2 > axisx.max) {\n\t                        if (x1 > axisx.max)\n\t                            continue;\n\t                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n\t                        x2 = axisx.max;\n\t                    }\n\t\n\t                    if (x1 != prevx || y1 != prevy)\n\t                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);\n\t\n\t                    prevx = x2;\n\t                    prevy = y2;\n\t                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);\n\t                }\n\t                ctx.stroke();\n\t            }\n\t\n\t            function plotLineArea(datapoints, axisx, axisy) {\n\t                var points = datapoints.points,\n\t                    ps = datapoints.pointsize,\n\t                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),\n\t                    i = 0, top, areaOpen = false,\n\t                    ypos = 1, segmentStart = 0, segmentEnd = 0;\n\t\n\t                // we process each segment in two turns, first forward\n\t                // direction to sketch out top, then once we hit the\n\t                // end we go backwards to sketch the bottom\n\t                while (true) {\n\t                    if (ps > 0 && i > points.length + ps)\n\t                        break;\n\t\n\t                    i += ps; // ps is negative if going backwards\n\t\n\t                    var x1 = points[i - ps],\n\t                        y1 = points[i - ps + ypos],\n\t                        x2 = points[i], y2 = points[i + ypos];\n\t\n\t                    if (areaOpen) {\n\t                        if (ps > 0 && x1 != null && x2 == null) {\n\t                            // at turning point\n\t                            segmentEnd = i;\n\t                            ps = -ps;\n\t                            ypos = 2;\n\t                            continue;\n\t                        }\n\t\n\t                        if (ps < 0 && i == segmentStart + ps) {\n\t                            // done with the reverse sweep\n\t                            ctx.fill();\n\t                            areaOpen = false;\n\t                            ps = -ps;\n\t                            ypos = 1;\n\t                            i = segmentStart = segmentEnd + ps;\n\t                            continue;\n\t                        }\n\t                    }\n\t\n\t                    if (x1 == null || x2 == null)\n\t                        continue;\n\t\n\t                    // clip x values\n\t\n\t                    // clip with xmin\n\t                    if (x1 <= x2 && x1 < axisx.min) {\n\t                        if (x2 < axisx.min)\n\t                            continue;\n\t                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n\t                        x1 = axisx.min;\n\t                    }\n\t                    else if (x2 <= x1 && x2 < axisx.min) {\n\t                        if (x1 < axisx.min)\n\t                            continue;\n\t                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n\t                        x2 = axisx.min;\n\t                    }\n\t\n\t                    // clip with xmax\n\t                    if (x1 >= x2 && x1 > axisx.max) {\n\t                        if (x2 > axisx.max)\n\t                            continue;\n\t                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n\t                        x1 = axisx.max;\n\t                    }\n\t                    else if (x2 >= x1 && x2 > axisx.max) {\n\t                        if (x1 > axisx.max)\n\t                            continue;\n\t                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n\t                        x2 = axisx.max;\n\t                    }\n\t\n\t                    if (!areaOpen) {\n\t                        // open area\n\t                        ctx.beginPath();\n\t                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));\n\t                        areaOpen = true;\n\t                    }\n\t\n\t                    // now first check the case where both is outside\n\t                    if (y1 >= axisy.max && y2 >= axisy.max) {\n\t                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));\n\t                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));\n\t                        continue;\n\t                    }\n\t                    else if (y1 <= axisy.min && y2 <= axisy.min) {\n\t                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));\n\t                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));\n\t                        continue;\n\t                    }\n\t\n\t                    // else it's a bit more complicated, there might\n\t                    // be a flat maxed out rectangle first, then a\n\t                    // triangular cutout or reverse; to find these\n\t                    // keep track of the current x values\n\t                    var x1old = x1, x2old = x2;\n\t\n\t                    // clip the y values, without shortcutting, we\n\t                    // go through all cases in turn\n\t\n\t                    // clip with ymin\n\t                    if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {\n\t                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n\t                        y1 = axisy.min;\n\t                    }\n\t                    else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {\n\t                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n\t                        y2 = axisy.min;\n\t                    }\n\t\n\t                    // clip with ymax\n\t                    if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {\n\t                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n\t                        y1 = axisy.max;\n\t                    }\n\t                    else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {\n\t                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n\t                        y2 = axisy.max;\n\t                    }\n\t\n\t                    // if the x value was changed we got a rectangle\n\t                    // to fill\n\t                    if (x1 != x1old) {\n\t                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));\n\t                        // it goes to (x1, y1), but we fill that below\n\t                    }\n\t\n\t                    // fill triangular section, this sometimes result\n\t                    // in redundant points if (x1, y1) hasn't changed\n\t                    // from previous line to, but we just ignore that\n\t                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));\n\t                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n\t\n\t                    // fill the other rectangle if it's there\n\t                    if (x2 != x2old) {\n\t                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n\t                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));\n\t                    }\n\t                }\n\t            }\n\t\n\t            ctx.save();\n\t            ctx.translate(plotOffset.left, plotOffset.top);\n\t            ctx.lineJoin = \"round\";\n\t\n\t            var lw = series.lines.lineWidth,\n\t                sw = series.shadowSize;\n\t            // FIXME: consider another form of shadow when filling is turned on\n\t            if (lw > 0 && sw > 0) {\n\t                // draw shadow as a thick and thin line with transparency\n\t                ctx.lineWidth = sw;\n\t                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n\t                // position shadow at angle from the mid of line\n\t                var angle = Math.PI/18;\n\t                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/2), Math.cos(angle) * (lw/2 + sw/2), series.xaxis, series.yaxis);\n\t                ctx.lineWidth = sw/2;\n\t                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/4), Math.cos(angle) * (lw/2 + sw/4), series.xaxis, series.yaxis);\n\t            }\n\t\n\t            ctx.lineWidth = lw;\n\t            ctx.strokeStyle = series.color;\n\t            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);\n\t            if (fillStyle) {\n\t                ctx.fillStyle = fillStyle;\n\t                plotLineArea(series.datapoints, series.xaxis, series.yaxis);\n\t            }\n\t\n\t            if (lw > 0)\n\t                plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);\n\t            ctx.restore();\n\t        }\n\t\n\t        function drawSeriesPoints(series) {\n\t            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {\n\t                var points = datapoints.points, ps = datapoints.pointsize;\n\t\n\t                for (var i = 0; i < points.length; i += ps) {\n\t                    var x = points[i], y = points[i + 1];\n\t                    if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n\t                        continue;\n\t\n\t                    ctx.beginPath();\n\t                    x = axisx.p2c(x);\n\t                    y = axisy.p2c(y) + offset;\n\t                    if (symbol == \"circle\")\n\t                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);\n\t                    else\n\t                        symbol(ctx, x, y, radius, shadow);\n\t                    ctx.closePath();\n\t\n\t                    if (fillStyle) {\n\t                        ctx.fillStyle = fillStyle;\n\t                        ctx.fill();\n\t                    }\n\t                    ctx.stroke();\n\t                }\n\t            }\n\t\n\t            ctx.save();\n\t            ctx.translate(plotOffset.left, plotOffset.top);\n\t\n\t            var lw = series.points.lineWidth,\n\t                sw = series.shadowSize,\n\t                radius = series.points.radius,\n\t                symbol = series.points.symbol;\n\t\n\t            // If the user sets the line width to 0, we change it to a very \n\t            // small value. A line width of 0 seems to force the default of 1.\n\t            // Doing the conditional here allows the shadow setting to still be \n\t            // optional even with a lineWidth of 0.\n\t\n\t            if( lw == 0 )\n\t                lw = 0.0001;\n\t\n\t            if (lw > 0 && sw > 0) {\n\t                // draw shadow in two steps\n\t                var w = sw / 2;\n\t                ctx.lineWidth = w;\n\t                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n\t                plotPoints(series.datapoints, radius, null, w + w/2, true,\n\t                           series.xaxis, series.yaxis, symbol);\n\t\n\t                ctx.strokeStyle = \"rgba(0,0,0,0.2)\";\n\t                plotPoints(series.datapoints, radius, null, w/2, true,\n\t                           series.xaxis, series.yaxis, symbol);\n\t            }\n\t\n\t            ctx.lineWidth = lw;\n\t            ctx.strokeStyle = series.color;\n\t            plotPoints(series.datapoints, radius,\n\t                       getFillStyle(series.points, series.color), 0, false,\n\t                       series.xaxis, series.yaxis, symbol);\n\t            ctx.restore();\n\t        }\n\t\n\t        function drawBar(x, y, b, barLeft, barRight, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {\n\t            var left, right, bottom, top,\n\t                drawLeft, drawRight, drawTop, drawBottom,\n\t                tmp;\n\t\n\t            // in horizontal mode, we start the bar from the left\n\t            // instead of from the bottom so it appears to be\n\t            // horizontal rather than vertical\n\t            if (horizontal) {\n\t                drawBottom = drawRight = drawTop = true;\n\t                drawLeft = false;\n\t                left = b;\n\t                right = x;\n\t                top = y + barLeft;\n\t                bottom = y + barRight;\n\t\n\t                // account for negative bars\n\t                if (right < left) {\n\t                    tmp = right;\n\t                    right = left;\n\t                    left = tmp;\n\t                    drawLeft = true;\n\t                    drawRight = false;\n\t                }\n\t            }\n\t            else {\n\t                drawLeft = drawRight = drawTop = true;\n\t                drawBottom = false;\n\t                left = x + barLeft;\n\t                right = x + barRight;\n\t                bottom = b;\n\t                top = y;\n\t\n\t                // account for negative bars\n\t                if (top < bottom) {\n\t                    tmp = top;\n\t                    top = bottom;\n\t                    bottom = tmp;\n\t                    drawBottom = true;\n\t                    drawTop = false;\n\t                }\n\t            }\n\t\n\t            // clip\n\t            if (right < axisx.min || left > axisx.max ||\n\t                top < axisy.min || bottom > axisy.max)\n\t                return;\n\t\n\t            if (left < axisx.min) {\n\t                left = axisx.min;\n\t                drawLeft = false;\n\t            }\n\t\n\t            if (right > axisx.max) {\n\t                right = axisx.max;\n\t                drawRight = false;\n\t            }\n\t\n\t            if (bottom < axisy.min) {\n\t                bottom = axisy.min;\n\t                drawBottom = false;\n\t            }\n\t\n\t            if (top > axisy.max) {\n\t                top = axisy.max;\n\t                drawTop = false;\n\t            }\n\t\n\t            left = axisx.p2c(left);\n\t            bottom = axisy.p2c(bottom);\n\t            right = axisx.p2c(right);\n\t            top = axisy.p2c(top);\n\t\n\t            // fill the bar\n\t            if (fillStyleCallback) {\n\t                c.fillStyle = fillStyleCallback(bottom, top);\n\t                c.fillRect(left, top, right - left, bottom - top)\n\t            }\n\t\n\t            // draw outline\n\t            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {\n\t                c.beginPath();\n\t\n\t                // FIXME: inline moveTo is buggy with excanvas\n\t                c.moveTo(left, bottom);\n\t                if (drawLeft)\n\t                    c.lineTo(left, top);\n\t                else\n\t                    c.moveTo(left, top);\n\t                if (drawTop)\n\t                    c.lineTo(right, top);\n\t                else\n\t                    c.moveTo(right, top);\n\t                if (drawRight)\n\t                    c.lineTo(right, bottom);\n\t                else\n\t                    c.moveTo(right, bottom);\n\t                if (drawBottom)\n\t                    c.lineTo(left, bottom);\n\t                else\n\t                    c.moveTo(left, bottom);\n\t                c.stroke();\n\t            }\n\t        }\n\t\n\t        function drawSeriesBars(series) {\n\t            function plotBars(datapoints, barLeft, barRight, fillStyleCallback, axisx, axisy) {\n\t                var points = datapoints.points, ps = datapoints.pointsize;\n\t\n\t                for (var i = 0; i < points.length; i += ps) {\n\t                    if (points[i] == null)\n\t                        continue;\n\t                    drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);\n\t                }\n\t            }\n\t\n\t            ctx.save();\n\t            ctx.translate(plotOffset.left, plotOffset.top);\n\t\n\t            // FIXME: figure out a way to add shadows (for instance along the right edge)\n\t            ctx.lineWidth = series.bars.lineWidth;\n\t            ctx.strokeStyle = series.color;\n\t\n\t            var barLeft;\n\t\n\t            switch (series.bars.align) {\n\t                case \"left\":\n\t                    barLeft = 0;\n\t                    break;\n\t                case \"right\":\n\t                    barLeft = -series.bars.barWidth;\n\t                    break;\n\t                default:\n\t                    barLeft = -series.bars.barWidth / 2;\n\t            }\n\t\n\t            var fillStyleCallback = series.bars.fill ? function (bottom, top) { return getFillStyle(series.bars, series.color, bottom, top); } : null;\n\t            plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, fillStyleCallback, series.xaxis, series.yaxis);\n\t            ctx.restore();\n\t        }\n\t\n\t        function getFillStyle(filloptions, seriesColor, bottom, top) {\n\t            var fill = filloptions.fill;\n\t            if (!fill)\n\t                return null;\n\t\n\t            if (filloptions.fillColor)\n\t                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);\n\t\n\t            var c = $.color.parse(seriesColor);\n\t            c.a = typeof fill == \"number\" ? fill : 0.4;\n\t            c.normalize();\n\t            return c.toString();\n\t        }\n\t\n\t        function insertLegend() {\n\t\n\t            if (options.legend.container != null) {\n\t                $(options.legend.container).html(\"\");\n\t            } else {\n\t                placeholder.find(\".legend\").remove();\n\t            }\n\t\n\t            if (!options.legend.show) {\n\t                return;\n\t            }\n\t\n\t            var fragments = [], entries = [], rowStarted = false,\n\t                lf = options.legend.labelFormatter, s, label;\n\t\n\t            // Build a list of legend entries, with each having a label and a color\n\t\n\t            for (var i = 0; i < series.length; ++i) {\n\t                s = series[i];\n\t                if (s.label) {\n\t                    label = lf ? lf(s.label, s) : s.label;\n\t                    if (label) {\n\t                        entries.push({\n\t                            label: label,\n\t                            color: s.color\n\t                        });\n\t                    }\n\t                }\n\t            }\n\t\n\t            // Sort the legend using either the default or a custom comparator\n\t\n\t            if (options.legend.sorted) {\n\t                if ($.isFunction(options.legend.sorted)) {\n\t                    entries.sort(options.legend.sorted);\n\t                } else if (options.legend.sorted == \"reverse\") {\n\t                \tentries.reverse();\n\t                } else {\n\t                    var ascending = options.legend.sorted != \"descending\";\n\t                    entries.sort(function(a, b) {\n\t                        return a.label == b.label ? 0 : (\n\t                            (a.label < b.label) != ascending ? 1 : -1   // Logical XOR\n\t                        );\n\t                    });\n\t                }\n\t            }\n\t\n\t            // Generate markup for the list of entries, in their final order\n\t\n\t            for (var i = 0; i < entries.length; ++i) {\n\t\n\t                var entry = entries[i];\n\t\n\t                if (i % options.legend.noColumns == 0) {\n\t                    if (rowStarted)\n\t                        fragments.push('</tr>');\n\t                    fragments.push('<tr>');\n\t                    rowStarted = true;\n\t                }\n\t\n\t                fragments.push(\n\t                    '<td class=\"legendColorBox\"><div style=\"border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px\"><div style=\"width:4px;height:0;border:5px solid ' + entry.color + ';overflow:hidden\"></div></div></td>' +\n\t                    '<td class=\"legendLabel\">' + entry.label + '</td>'\n\t                );\n\t            }\n\t\n\t            if (rowStarted)\n\t                fragments.push('</tr>');\n\t\n\t            if (fragments.length == 0)\n\t                return;\n\t\n\t            var table = '<table style=\"font-size:smaller;color:' + options.grid.color + '\">' + fragments.join(\"\") + '</table>';\n\t            if (options.legend.container != null)\n\t                $(options.legend.container).html(table);\n\t            else {\n\t                var pos = \"\",\n\t                    p = options.legend.position,\n\t                    m = options.legend.margin;\n\t                if (m[0] == null)\n\t                    m = [m, m];\n\t                if (p.charAt(0) == \"n\")\n\t                    pos += 'top:' + (m[1] + plotOffset.top) + 'px;';\n\t                else if (p.charAt(0) == \"s\")\n\t                    pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';\n\t                if (p.charAt(1) == \"e\")\n\t                    pos += 'right:' + (m[0] + plotOffset.right) + 'px;';\n\t                else if (p.charAt(1) == \"w\")\n\t                    pos += 'left:' + (m[0] + plotOffset.left) + 'px;';\n\t                var legend = $('<div class=\"legend\">' + table.replace('style=\"', 'style=\"position:absolute;' + pos +';') + '</div>').appendTo(placeholder);\n\t                if (options.legend.backgroundOpacity != 0.0) {\n\t                    // put in the transparent background\n\t                    // separately to avoid blended labels and\n\t                    // label boxes\n\t                    var c = options.legend.backgroundColor;\n\t                    if (c == null) {\n\t                        c = options.grid.backgroundColor;\n\t                        if (c && typeof c == \"string\")\n\t                            c = $.color.parse(c);\n\t                        else\n\t                            c = $.color.extract(legend, 'background-color');\n\t                        c.a = 1;\n\t                        c = c.toString();\n\t                    }\n\t                    var div = legend.children();\n\t                    $('<div style=\"position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos +'background-color:' + c + ';\"> </div>').prependTo(legend).css('opacity', options.legend.backgroundOpacity);\n\t                }\n\t            }\n\t        }\n\t\n\t\n\t        // interactive features\n\t\n\t        var highlights = [],\n\t            redrawTimeout = null;\n\t\n\t        // returns the data item the mouse is over, or null if none is found\n\t        function findNearbyItem(mouseX, mouseY, seriesFilter) {\n\t            var maxDistance = options.grid.mouseActiveRadius,\n\t                smallestDistance = maxDistance * maxDistance + 1,\n\t                item = null, foundPoint = false, i, j, ps;\n\t\n\t            for (i = series.length - 1; i >= 0; --i) {\n\t                if (!seriesFilter(series[i]))\n\t                    continue;\n\t\n\t                var s = series[i],\n\t                    axisx = s.xaxis,\n\t                    axisy = s.yaxis,\n\t                    points = s.datapoints.points,\n\t                    mx = axisx.c2p(mouseX), // precompute some stuff to make the loop faster\n\t                    my = axisy.c2p(mouseY),\n\t                    maxx = maxDistance / axisx.scale,\n\t                    maxy = maxDistance / axisy.scale;\n\t\n\t                ps = s.datapoints.pointsize;\n\t                // with inverse transforms, we can't use the maxx/maxy\n\t                // optimization, sadly\n\t                if (axisx.options.inverseTransform)\n\t                    maxx = Number.MAX_VALUE;\n\t                if (axisy.options.inverseTransform)\n\t                    maxy = Number.MAX_VALUE;\n\t\n\t                if (s.lines.show || s.points.show) {\n\t                    for (j = 0; j < points.length; j += ps) {\n\t                        var x = points[j], y = points[j + 1];\n\t                        if (x == null)\n\t                            continue;\n\t\n\t                        // For points and lines, the cursor must be within a\n\t                        // certain distance to the data point\n\t                        if (x - mx > maxx || x - mx < -maxx ||\n\t                            y - my > maxy || y - my < -maxy)\n\t                            continue;\n\t\n\t                        // We have to calculate distances in pixels, not in\n\t                        // data units, because the scales of the axes may be different\n\t                        var dx = Math.abs(axisx.p2c(x) - mouseX),\n\t                            dy = Math.abs(axisy.p2c(y) - mouseY),\n\t                            dist = dx * dx + dy * dy; // we save the sqrt\n\t\n\t                        // use <= to ensure last point takes precedence\n\t                        // (last generally means on top of)\n\t                        if (dist < smallestDistance) {\n\t                            smallestDistance = dist;\n\t                            item = [i, j / ps];\n\t                        }\n\t                    }\n\t                }\n\t\n\t                if (s.bars.show && !item) { // no other point can be nearby\n\t\n\t                    var barLeft, barRight;\n\t\n\t                    switch (s.bars.align) {\n\t                        case \"left\":\n\t                            barLeft = 0;\n\t                            break;\n\t                        case \"right\":\n\t                            barLeft = -s.bars.barWidth;\n\t                            break;\n\t                        default:\n\t                            barLeft = -s.bars.barWidth / 2;\n\t                    }\n\t\n\t                    barRight = barLeft + s.bars.barWidth;\n\t\n\t                    for (j = 0; j < points.length; j += ps) {\n\t                        var x = points[j], y = points[j + 1], b = points[j + 2];\n\t                        if (x == null)\n\t                            continue;\n\t\n\t                        // for a bar graph, the cursor must be inside the bar\n\t                        if (series[i].bars.horizontal ?\n\t                            (mx <= Math.max(b, x) && mx >= Math.min(b, x) &&\n\t                             my >= y + barLeft && my <= y + barRight) :\n\t                            (mx >= x + barLeft && mx <= x + barRight &&\n\t                             my >= Math.min(b, y) && my <= Math.max(b, y)))\n\t                                item = [i, j / ps];\n\t                    }\n\t                }\n\t            }\n\t\n\t            if (item) {\n\t                i = item[0];\n\t                j = item[1];\n\t                ps = series[i].datapoints.pointsize;\n\t\n\t                return { datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),\n\t                         dataIndex: j,\n\t                         series: series[i],\n\t                         seriesIndex: i };\n\t            }\n\t\n\t            return null;\n\t        }\n\t\n\t        function onMouseMove(e) {\n\t            if (options.grid.hoverable)\n\t                triggerClickHoverEvent(\"plothover\", e,\n\t                                       function (s) { return s[\"hoverable\"] != false; });\n\t        }\n\t\n\t        function onMouseLeave(e) {\n\t            if (options.grid.hoverable)\n\t                triggerClickHoverEvent(\"plothover\", e,\n\t                                       function (s) { return false; });\n\t        }\n\t\n\t        function onClick(e) {\n\t            triggerClickHoverEvent(\"plotclick\", e,\n\t                                   function (s) { return s[\"clickable\"] != false; });\n\t        }\n\t\n\t        // trigger click or hover event (they send the same parameters\n\t        // so we share their code)\n\t        function triggerClickHoverEvent(eventname, event, seriesFilter) {\n\t            var offset = eventHolder.offset(),\n\t                canvasX = event.pageX - offset.left - plotOffset.left,\n\t                canvasY = event.pageY - offset.top - plotOffset.top,\n\t            pos = canvasToAxisCoords({ left: canvasX, top: canvasY });\n\t\n\t            pos.pageX = event.pageX;\n\t            pos.pageY = event.pageY;\n\t\n\t            var item = findNearbyItem(canvasX, canvasY, seriesFilter);\n\t\n\t            if (item) {\n\t                // fill in mouse pos for any listeners out there\n\t                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left, 10);\n\t                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top, 10);\n\t            }\n\t\n\t            if (options.grid.autoHighlight) {\n\t                // clear auto-highlights\n\t                for (var i = 0; i < highlights.length; ++i) {\n\t                    var h = highlights[i];\n\t                    if (h.auto == eventname &&\n\t                        !(item && h.series == item.series &&\n\t                          h.point[0] == item.datapoint[0] &&\n\t                          h.point[1] == item.datapoint[1]))\n\t                        unhighlight(h.series, h.point);\n\t                }\n\t\n\t                if (item)\n\t                    highlight(item.series, item.datapoint, eventname);\n\t            }\n\t\n\t            placeholder.trigger(eventname, [ pos, item ]);\n\t        }\n\t\n\t        function triggerRedrawOverlay() {\n\t            var t = options.interaction.redrawOverlayInterval;\n\t            if (t == -1) {      // skip event queue\n\t                drawOverlay();\n\t                return;\n\t            }\n\t\n\t            if (!redrawTimeout)\n\t                redrawTimeout = setTimeout(drawOverlay, t);\n\t        }\n\t\n\t        function drawOverlay() {\n\t            redrawTimeout = null;\n\t\n\t            // draw highlights\n\t            octx.save();\n\t            overlay.clear();\n\t            octx.translate(plotOffset.left, plotOffset.top);\n\t\n\t            var i, hi;\n\t            for (i = 0; i < highlights.length; ++i) {\n\t                hi = highlights[i];\n\t\n\t                if (hi.series.bars.show)\n\t                    drawBarHighlight(hi.series, hi.point);\n\t                else\n\t                    drawPointHighlight(hi.series, hi.point);\n\t            }\n\t            octx.restore();\n\t\n\t            executeHooks(hooks.drawOverlay, [octx]);\n\t        }\n\t\n\t        function highlight(s, point, auto) {\n\t            if (typeof s == \"number\")\n\t                s = series[s];\n\t\n\t            if (typeof point == \"number\") {\n\t                var ps = s.datapoints.pointsize;\n\t                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n\t            }\n\t\n\t            var i = indexOfHighlight(s, point);\n\t            if (i == -1) {\n\t                highlights.push({ series: s, point: point, auto: auto });\n\t\n\t                triggerRedrawOverlay();\n\t            }\n\t            else if (!auto)\n\t                highlights[i].auto = false;\n\t        }\n\t\n\t        function unhighlight(s, point) {\n\t            if (s == null && point == null) {\n\t                highlights = [];\n\t                triggerRedrawOverlay();\n\t                return;\n\t            }\n\t\n\t            if (typeof s == \"number\")\n\t                s = series[s];\n\t\n\t            if (typeof point == \"number\") {\n\t                var ps = s.datapoints.pointsize;\n\t                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n\t            }\n\t\n\t            var i = indexOfHighlight(s, point);\n\t            if (i != -1) {\n\t                highlights.splice(i, 1);\n\t\n\t                triggerRedrawOverlay();\n\t            }\n\t        }\n\t\n\t        function indexOfHighlight(s, p) {\n\t            for (var i = 0; i < highlights.length; ++i) {\n\t                var h = highlights[i];\n\t                if (h.series == s && h.point[0] == p[0]\n\t                    && h.point[1] == p[1])\n\t                    return i;\n\t            }\n\t            return -1;\n\t        }\n\t\n\t        function drawPointHighlight(series, point) {\n\t            var x = point[0], y = point[1],\n\t                axisx = series.xaxis, axisy = series.yaxis,\n\t                highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString();\n\t\n\t            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n\t                return;\n\t\n\t            var pointRadius = series.points.radius + series.points.lineWidth / 2;\n\t            octx.lineWidth = pointRadius;\n\t            octx.strokeStyle = highlightColor;\n\t            var radius = 1.5 * pointRadius;\n\t            x = axisx.p2c(x);\n\t            y = axisy.p2c(y);\n\t\n\t            octx.beginPath();\n\t            if (series.points.symbol == \"circle\")\n\t                octx.arc(x, y, radius, 0, 2 * Math.PI, false);\n\t            else\n\t                series.points.symbol(octx, x, y, radius, false);\n\t            octx.closePath();\n\t            octx.stroke();\n\t        }\n\t\n\t        function drawBarHighlight(series, point) {\n\t            var highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString(),\n\t                fillStyle = highlightColor,\n\t                barLeft;\n\t\n\t            switch (series.bars.align) {\n\t                case \"left\":\n\t                    barLeft = 0;\n\t                    break;\n\t                case \"right\":\n\t                    barLeft = -series.bars.barWidth;\n\t                    break;\n\t                default:\n\t                    barLeft = -series.bars.barWidth / 2;\n\t            }\n\t\n\t            octx.lineWidth = series.bars.lineWidth;\n\t            octx.strokeStyle = highlightColor;\n\t\n\t            drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth,\n\t                    function () { return fillStyle; }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);\n\t        }\n\t\n\t        function getColorOrGradient(spec, bottom, top, defaultColor) {\n\t            if (typeof spec == \"string\")\n\t                return spec;\n\t            else {\n\t                // assume this is a gradient spec; IE currently only\n\t                // supports a simple vertical gradient properly, so that's\n\t                // what we support too\n\t                var gradient = ctx.createLinearGradient(0, top, 0, bottom);\n\t\n\t                for (var i = 0, l = spec.colors.length; i < l; ++i) {\n\t                    var c = spec.colors[i];\n\t                    if (typeof c != \"string\") {\n\t                        var co = $.color.parse(defaultColor);\n\t                        if (c.brightness != null)\n\t                            co = co.scale('rgb', c.brightness);\n\t                        if (c.opacity != null)\n\t                            co.a *= c.opacity;\n\t                        c = co.toString();\n\t                    }\n\t                    gradient.addColorStop(i / (l - 1), c);\n\t                }\n\t\n\t                return gradient;\n\t            }\n\t        }\n\t    }\n\t\n\t    // Add the plot function to the top level of the jQuery object\n\t\n\t    $.plot = function(placeholder, data, options) {\n\t        //var t0 = new Date();\n\t        var plot = new Plot($(placeholder), data, options, $.plot.plugins);\n\t        //(window.console ? console.log : alert)(\"time used (msecs): \" + ((new Date()).getTime() - t0.getTime()));\n\t        return plot;\n\t    };\n\t\n\t    $.plot.version = \"0.8.3\";\n\t\n\t    $.plot.plugins = [];\n\t\n\t    // Also add the plot function as a chainable property\n\t\n\t    $.fn.plot = function(data, options) {\n\t        return this.each(function() {\n\t            $.plot(this, data, options);\n\t        });\n\t    };\n\t\n\t    // round to nearby lower multiple of base\n\t    function floorInBase(n, base) {\n\t        return base * Math.floor(n / base);\n\t    }\n\t\n\t})(jQuery);\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t/* Flot plugin for selecting regions of a plot.\n\t\n\tCopyright (c) 2007-2014 IOLA and Ole Laursen.\n\tLicensed under the MIT license.\n\t\n\tThe plugin supports these options:\n\t\n\tselection: {\n\t\tmode: null or \"x\" or \"y\" or \"xy\",\n\t\tcolor: color,\n\t\tshape: \"round\" or \"miter\" or \"bevel\",\n\t\tminSize: number of pixels\n\t}\n\t\n\tSelection support is enabled by setting the mode to one of \"x\", \"y\" or \"xy\".\n\tIn \"x\" mode, the user will only be able to specify the x range, similarly for\n\t\"y\" mode. For \"xy\", the selection becomes a rectangle where both ranges can be\n\tspecified. \"color\" is color of the selection (if you need to change the color\n\tlater on, you can get to it with plot.getOptions().selection.color). \"shape\"\n\tis the shape of the corners of the selection.\n\t\n\t\"minSize\" is the minimum size a selection can be in pixels. This value can\n\tbe customized to determine the smallest size a selection can be and still\n\thave the selection rectangle be displayed. When customizing this value, the\n\tfact that it refers to pixels, not axis units must be taken into account.\n\tThus, for example, if there is a bar graph in time mode with BarWidth set to 1\n\tminute, setting \"minSize\" to 1 will not make the minimum selection size 1\n\tminute, but rather 1 pixel. Note also that setting \"minSize\" to 0 will prevent\n\t\"plotunselected\" events from being fired when the user clicks the mouse without\n\tdragging.\n\t\n\tWhen selection support is enabled, a \"plotselected\" event will be emitted on\n\tthe DOM element you passed into the plot function. The event handler gets a\n\tparameter with the ranges selected on the axes, like this:\n\t\n\t\tplaceholder.bind( \"plotselected\", function( event, ranges ) {\n\t\t\talert(\"You selected \" + ranges.xaxis.from + \" to \" + ranges.xaxis.to)\n\t\t\t// similar for yaxis - with multiple axes, the extra ones are in\n\t\t\t// x2axis, x3axis, ...\n\t\t});\n\t\n\tThe \"plotselected\" event is only fired when the user has finished making the\n\tselection. A \"plotselecting\" event is fired during the process with the same\n\tparameters as the \"plotselected\" event, in case you want to know what's\n\thappening while it's happening,\n\t\n\tA \"plotunselected\" event with no arguments is emitted when the user clicks the\n\tmouse to remove the selection. As stated above, setting \"minSize\" to 0 will\n\tdestroy this behavior.\n\t\n\tThe plugin allso adds the following methods to the plot object:\n\t\n\t- setSelection( ranges, preventEvent )\n\t\n\t  Set the selection rectangle. The passed in ranges is on the same form as\n\t  returned in the \"plotselected\" event. If the selection mode is \"x\", you\n\t  should put in either an xaxis range, if the mode is \"y\" you need to put in\n\t  an yaxis range and both xaxis and yaxis if the selection mode is \"xy\", like\n\t  this:\n\t\n\t\tsetSelection({ xaxis: { from: 0, to: 10 }, yaxis: { from: 40, to: 60 } });\n\t\n\t  setSelection will trigger the \"plotselected\" event when called. If you don't\n\t  want that to happen, e.g. if you're inside a \"plotselected\" handler, pass\n\t  true as the second parameter. If you are using multiple axes, you can\n\t  specify the ranges on any of those, e.g. as x2axis/x3axis/... instead of\n\t  xaxis, the plugin picks the first one it sees.\n\t\n\t- clearSelection( preventEvent )\n\t\n\t  Clear the selection rectangle. Pass in true to avoid getting a\n\t  \"plotunselected\" event.\n\t\n\t- getSelection()\n\t\n\t  Returns the current selection in the same format as the \"plotselected\"\n\t  event. If there's currently no selection, the function returns null.\n\t\n\t*/\n\t\n\t(function ($) {\n\t    function init(plot) {\n\t        var selection = {\n\t                first: { x: -1, y: -1}, second: { x: -1, y: -1},\n\t                show: false,\n\t                active: false\n\t            };\n\t\n\t        // FIXME: The drag handling implemented here should be\n\t        // abstracted out, there's some similar code from a library in\n\t        // the navigation plugin, this should be massaged a bit to fit\n\t        // the Flot cases here better and reused. Doing this would\n\t        // make this plugin much slimmer.\n\t        var savedhandlers = {};\n\t\n\t        var mouseUpHandler = null;\n\t        \n\t        function onMouseMove(e) {\n\t            if (selection.active) {\n\t                updateSelection(e);\n\t                \n\t                plot.getPlaceholder().trigger(\"plotselecting\", [ getSelection() ]);\n\t            }\n\t        }\n\t\n\t        function onMouseDown(e) {\n\t            if (e.which != 1)  // only accept left-click\n\t                return;\n\t            \n\t            // cancel out any text selections\n\t            document.body.focus();\n\t\n\t            // prevent text selection and drag in old-school browsers\n\t            if (document.onselectstart !== undefined && savedhandlers.onselectstart == null) {\n\t                savedhandlers.onselectstart = document.onselectstart;\n\t                document.onselectstart = function () { return false; };\n\t            }\n\t            if (document.ondrag !== undefined && savedhandlers.ondrag == null) {\n\t                savedhandlers.ondrag = document.ondrag;\n\t                document.ondrag = function () { return false; };\n\t            }\n\t\n\t            setSelectionPos(selection.first, e);\n\t\n\t            selection.active = true;\n\t\n\t            // this is a bit silly, but we have to use a closure to be\n\t            // able to whack the same handler again\n\t            mouseUpHandler = function (e) { onMouseUp(e); };\n\t            \n\t            $(document).one(\"mouseup\", mouseUpHandler);\n\t        }\n\t\n\t        function onMouseUp(e) {\n\t            mouseUpHandler = null;\n\t            \n\t            // revert drag stuff for old-school browsers\n\t            if (document.onselectstart !== undefined)\n\t                document.onselectstart = savedhandlers.onselectstart;\n\t            if (document.ondrag !== undefined)\n\t                document.ondrag = savedhandlers.ondrag;\n\t\n\t            // no more dragging\n\t            selection.active = false;\n\t            updateSelection(e);\n\t\n\t            if (selectionIsSane())\n\t                triggerSelectedEvent();\n\t            else {\n\t                // this counts as a clear\n\t                plot.getPlaceholder().trigger(\"plotunselected\", [ ]);\n\t                plot.getPlaceholder().trigger(\"plotselecting\", [ null ]);\n\t            }\n\t\n\t            return false;\n\t        }\n\t\n\t        function getSelection() {\n\t            if (!selectionIsSane())\n\t                return null;\n\t            \n\t            if (!selection.show) return null;\n\t\n\t            var r = {}, c1 = selection.first, c2 = selection.second;\n\t            $.each(plot.getAxes(), function (name, axis) {\n\t                if (axis.used) {\n\t                    var p1 = axis.c2p(c1[axis.direction]), p2 = axis.c2p(c2[axis.direction]); \n\t                    r[name] = { from: Math.min(p1, p2), to: Math.max(p1, p2) };\n\t                }\n\t            });\n\t            return r;\n\t        }\n\t\n\t        function triggerSelectedEvent() {\n\t            var r = getSelection();\n\t\n\t            plot.getPlaceholder().trigger(\"plotselected\", [ r ]);\n\t\n\t            // backwards-compat stuff, to be removed in future\n\t            if (r.xaxis && r.yaxis)\n\t                plot.getPlaceholder().trigger(\"selected\", [ { x1: r.xaxis.from, y1: r.yaxis.from, x2: r.xaxis.to, y2: r.yaxis.to } ]);\n\t        }\n\t\n\t        function clamp(min, value, max) {\n\t            return value < min ? min: (value > max ? max: value);\n\t        }\n\t\n\t        function setSelectionPos(pos, e) {\n\t            var o = plot.getOptions();\n\t            var offset = plot.getPlaceholder().offset();\n\t            var plotOffset = plot.getPlotOffset();\n\t            pos.x = clamp(0, e.pageX - offset.left - plotOffset.left, plot.width());\n\t            pos.y = clamp(0, e.pageY - offset.top - plotOffset.top, plot.height());\n\t\n\t            if (o.selection.mode == \"y\")\n\t                pos.x = pos == selection.first ? 0 : plot.width();\n\t\n\t            if (o.selection.mode == \"x\")\n\t                pos.y = pos == selection.first ? 0 : plot.height();\n\t        }\n\t\n\t        function updateSelection(pos) {\n\t            if (pos.pageX == null)\n\t                return;\n\t\n\t            setSelectionPos(selection.second, pos);\n\t            if (selectionIsSane()) {\n\t                selection.show = true;\n\t                plot.triggerRedrawOverlay();\n\t            }\n\t            else\n\t                clearSelection(true);\n\t        }\n\t\n\t        function clearSelection(preventEvent) {\n\t            if (selection.show) {\n\t                selection.show = false;\n\t                plot.triggerRedrawOverlay();\n\t                if (!preventEvent)\n\t                    plot.getPlaceholder().trigger(\"plotunselected\", [ ]);\n\t            }\n\t        }\n\t\n\t        // function taken from markings support in Flot\n\t        function extractRange(ranges, coord) {\n\t            var axis, from, to, key, axes = plot.getAxes();\n\t\n\t            for (var k in axes) {\n\t                axis = axes[k];\n\t                if (axis.direction == coord) {\n\t                    key = coord + axis.n + \"axis\";\n\t                    if (!ranges[key] && axis.n == 1)\n\t                        key = coord + \"axis\"; // support x1axis as xaxis\n\t                    if (ranges[key]) {\n\t                        from = ranges[key].from;\n\t                        to = ranges[key].to;\n\t                        break;\n\t                    }\n\t                }\n\t            }\n\t\n\t            // backwards-compat stuff - to be removed in future\n\t            if (!ranges[key]) {\n\t                axis = coord == \"x\" ? plot.getXAxes()[0] : plot.getYAxes()[0];\n\t                from = ranges[coord + \"1\"];\n\t                to = ranges[coord + \"2\"];\n\t            }\n\t\n\t            // auto-reverse as an added bonus\n\t            if (from != null && to != null && from > to) {\n\t                var tmp = from;\n\t                from = to;\n\t                to = tmp;\n\t            }\n\t            \n\t            return { from: from, to: to, axis: axis };\n\t        }\n\t        \n\t        function setSelection(ranges, preventEvent) {\n\t            var axis, range, o = plot.getOptions();\n\t\n\t            if (o.selection.mode == \"y\") {\n\t                selection.first.x = 0;\n\t                selection.second.x = plot.width();\n\t            }\n\t            else {\n\t                range = extractRange(ranges, \"x\");\n\t\n\t                selection.first.x = range.axis.p2c(range.from);\n\t                selection.second.x = range.axis.p2c(range.to);\n\t            }\n\t\n\t            if (o.selection.mode == \"x\") {\n\t                selection.first.y = 0;\n\t                selection.second.y = plot.height();\n\t            }\n\t            else {\n\t                range = extractRange(ranges, \"y\");\n\t\n\t                selection.first.y = range.axis.p2c(range.from);\n\t                selection.second.y = range.axis.p2c(range.to);\n\t            }\n\t\n\t            selection.show = true;\n\t            plot.triggerRedrawOverlay();\n\t            if (!preventEvent && selectionIsSane())\n\t                triggerSelectedEvent();\n\t        }\n\t\n\t        function selectionIsSane() {\n\t            var minSize = plot.getOptions().selection.minSize;\n\t            return Math.abs(selection.second.x - selection.first.x) >= minSize &&\n\t                Math.abs(selection.second.y - selection.first.y) >= minSize;\n\t        }\n\t\n\t        plot.clearSelection = clearSelection;\n\t        plot.setSelection = setSelection;\n\t        plot.getSelection = getSelection;\n\t\n\t        plot.hooks.bindEvents.push(function(plot, eventHolder) {\n\t            var o = plot.getOptions();\n\t            if (o.selection.mode != null) {\n\t                eventHolder.mousemove(onMouseMove);\n\t                eventHolder.mousedown(onMouseDown);\n\t            }\n\t        });\n\t\n\t\n\t        plot.hooks.drawOverlay.push(function (plot, ctx) {\n\t            // draw selection\n\t            if (selection.show && selectionIsSane()) {\n\t                var plotOffset = plot.getPlotOffset();\n\t                var o = plot.getOptions();\n\t\n\t                ctx.save();\n\t                ctx.translate(plotOffset.left, plotOffset.top);\n\t\n\t                var c = $.color.parse(o.selection.color);\n\t\n\t                ctx.strokeStyle = c.scale('a', 0.8).toString();\n\t                ctx.lineWidth = 1;\n\t                ctx.lineJoin = o.selection.shape;\n\t                ctx.fillStyle = c.scale('a', 0.4).toString();\n\t\n\t                var x = Math.min(selection.first.x, selection.second.x) + 0.5,\n\t                    y = Math.min(selection.first.y, selection.second.y) + 0.5,\n\t                    w = Math.abs(selection.second.x - selection.first.x) - 1,\n\t                    h = Math.abs(selection.second.y - selection.first.y) - 1;\n\t\n\t                ctx.fillRect(x, y, w, h);\n\t                ctx.strokeRect(x, y, w, h);\n\t\n\t                ctx.restore();\n\t            }\n\t        });\n\t        \n\t        plot.hooks.shutdown.push(function (plot, eventHolder) {\n\t            eventHolder.unbind(\"mousemove\", onMouseMove);\n\t            eventHolder.unbind(\"mousedown\", onMouseDown);\n\t            \n\t            if (mouseUpHandler)\n\t                $(document).unbind(\"mouseup\", mouseUpHandler);\n\t        });\n\t\n\t    }\n\t\n\t    $.plot.plugins.push({\n\t        init: init,\n\t        options: {\n\t            selection: {\n\t                mode: null, // one of null, \"x\", \"y\" or \"xy\"\n\t                color: \"#e8cfac\",\n\t                shape: \"round\", // one of \"round\", \"miter\", or \"bevel\"\n\t                minSize: 5 // minimum number of pixels\n\t            }\n\t        },\n\t        name: 'selection',\n\t        version: '1.1'\n\t    });\n\t})(jQuery);\n\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\t/* Pretty handling of time axes.\n\t\n\tCopyright (c) 2007-2014 IOLA and Ole Laursen.\n\tLicensed under the MIT license.\n\t\n\tSet axis.mode to \"time\" to enable. See the section \"Time series data\" in\n\tAPI.txt for details.\n\t\n\t*/\n\t\n\t(function($) {\n\t\n\t\tvar options = {\n\t\t\txaxis: {\n\t\t\t\ttimezone: null,\t\t// \"browser\" for local to the client or timezone for timezone-js\n\t\t\t\ttimeformat: null,\t// format string to use\n\t\t\t\ttwelveHourClock: false,\t// 12 or 24 time in time mode\n\t\t\t\tmonthNames: null\t// list of names of months\n\t\t\t}\n\t\t};\n\t\n\t\t// round to nearby lower multiple of base\n\t\n\t\tfunction floorInBase(n, base) {\n\t\t\treturn base * Math.floor(n / base);\n\t\t}\n\t\n\t\t// Returns a string with the date d formatted according to fmt.\n\t\t// A subset of the Open Group's strftime format is supported.\n\t\n\t\tfunction formatDate(d, fmt, monthNames, dayNames) {\n\t\n\t\t\tif (typeof d.strftime == \"function\") {\n\t\t\t\treturn d.strftime(fmt);\n\t\t\t}\n\t\n\t\t\tvar leftPad = function(n, pad) {\n\t\t\t\tn = \"\" + n;\n\t\t\t\tpad = \"\" + (pad == null ? \"0\" : pad);\n\t\t\t\treturn n.length == 1 ? pad + n : n;\n\t\t\t};\n\t\n\t\t\tvar r = [];\n\t\t\tvar escape = false;\n\t\t\tvar hours = d.getHours();\n\t\t\tvar isAM = hours < 12;\n\t\n\t\t\tif (monthNames == null) {\n\t\t\t\tmonthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\t\t}\n\t\n\t\t\tif (dayNames == null) {\n\t\t\t\tdayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\t\t\t}\n\t\n\t\t\tvar hours12;\n\t\n\t\t\tif (hours > 12) {\n\t\t\t\thours12 = hours - 12;\n\t\t\t} else if (hours == 0) {\n\t\t\t\thours12 = 12;\n\t\t\t} else {\n\t\t\t\thours12 = hours;\n\t\t\t}\n\t\n\t\t\tfor (var i = 0; i < fmt.length; ++i) {\n\t\n\t\t\t\tvar c = fmt.charAt(i);\n\t\n\t\t\t\tif (escape) {\n\t\t\t\t\tswitch (c) {\n\t\t\t\t\t\tcase 'a': c = \"\" + dayNames[d.getDay()]; break;\n\t\t\t\t\t\tcase 'b': c = \"\" + monthNames[d.getMonth()]; break;\n\t\t\t\t\t\tcase 'd': c = leftPad(d.getDate()); break;\n\t\t\t\t\t\tcase 'e': c = leftPad(d.getDate(), \" \"); break;\n\t\t\t\t\t\tcase 'h':\t// For back-compat with 0.7; remove in 1.0\n\t\t\t\t\t\tcase 'H': c = leftPad(hours); break;\n\t\t\t\t\t\tcase 'I': c = leftPad(hours12); break;\n\t\t\t\t\t\tcase 'l': c = leftPad(hours12, \" \"); break;\n\t\t\t\t\t\tcase 'm': c = leftPad(d.getMonth() + 1); break;\n\t\t\t\t\t\tcase 'M': c = leftPad(d.getMinutes()); break;\n\t\t\t\t\t\t// quarters not in Open Group's strftime specification\n\t\t\t\t\t\tcase 'q':\n\t\t\t\t\t\t\tc = \"\" + (Math.floor(d.getMonth() / 3) + 1); break;\n\t\t\t\t\t\tcase 'S': c = leftPad(d.getSeconds()); break;\n\t\t\t\t\t\tcase 'y': c = leftPad(d.getFullYear() % 100); break;\n\t\t\t\t\t\tcase 'Y': c = \"\" + d.getFullYear(); break;\n\t\t\t\t\t\tcase 'p': c = (isAM) ? (\"\" + \"am\") : (\"\" + \"pm\"); break;\n\t\t\t\t\t\tcase 'P': c = (isAM) ? (\"\" + \"AM\") : (\"\" + \"PM\"); break;\n\t\t\t\t\t\tcase 'w': c = \"\" + d.getDay(); break;\n\t\t\t\t\t}\n\t\t\t\t\tr.push(c);\n\t\t\t\t\tescape = false;\n\t\t\t\t} else {\n\t\t\t\t\tif (c == \"%\") {\n\t\t\t\t\t\tescape = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tr.push(c);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\treturn r.join(\"\");\n\t\t}\n\t\n\t\t// To have a consistent view of time-based data independent of which time\n\t\t// zone the client happens to be in we need a date-like object independent\n\t\t// of time zones.  This is done through a wrapper that only calls the UTC\n\t\t// versions of the accessor methods.\n\t\n\t\tfunction makeUtcWrapper(d) {\n\t\n\t\t\tfunction addProxyMethod(sourceObj, sourceMethod, targetObj, targetMethod) {\n\t\t\t\tsourceObj[sourceMethod] = function() {\n\t\t\t\t\treturn targetObj[targetMethod].apply(targetObj, arguments);\n\t\t\t\t};\n\t\t\t};\n\t\n\t\t\tvar utc = {\n\t\t\t\tdate: d\n\t\t\t};\n\t\n\t\t\t// support strftime, if found\n\t\n\t\t\tif (d.strftime != undefined) {\n\t\t\t\taddProxyMethod(utc, \"strftime\", d, \"strftime\");\n\t\t\t}\n\t\n\t\t\taddProxyMethod(utc, \"getTime\", d, \"getTime\");\n\t\t\taddProxyMethod(utc, \"setTime\", d, \"setTime\");\n\t\n\t\t\tvar props = [\"Date\", \"Day\", \"FullYear\", \"Hours\", \"Milliseconds\", \"Minutes\", \"Month\", \"Seconds\"];\n\t\n\t\t\tfor (var p = 0; p < props.length; p++) {\n\t\t\t\taddProxyMethod(utc, \"get\" + props[p], d, \"getUTC\" + props[p]);\n\t\t\t\taddProxyMethod(utc, \"set\" + props[p], d, \"setUTC\" + props[p]);\n\t\t\t}\n\t\n\t\t\treturn utc;\n\t\t};\n\t\n\t\t// select time zone strategy.  This returns a date-like object tied to the\n\t\t// desired timezone\n\t\n\t\tfunction dateGenerator(ts, opts) {\n\t\t\tif (opts.timezone == \"browser\") {\n\t\t\t\treturn new Date(ts);\n\t\t\t} else if (!opts.timezone || opts.timezone == \"utc\") {\n\t\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t\t} else if (typeof timezoneJS != \"undefined\" && typeof timezoneJS.Date != \"undefined\") {\n\t\t\t\tvar d = new timezoneJS.Date();\n\t\t\t\t// timezone-js is fickle, so be sure to set the time zone before\n\t\t\t\t// setting the time.\n\t\t\t\td.setTimezone(opts.timezone);\n\t\t\t\td.setTime(ts);\n\t\t\t\treturn d;\n\t\t\t} else {\n\t\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t\t}\n\t\t}\n\t\t\n\t\t// map of app. size of time units in milliseconds\n\t\n\t\tvar timeUnitSize = {\n\t\t\t\"second\": 1000,\n\t\t\t\"minute\": 60 * 1000,\n\t\t\t\"hour\": 60 * 60 * 1000,\n\t\t\t\"day\": 24 * 60 * 60 * 1000,\n\t\t\t\"month\": 30 * 24 * 60 * 60 * 1000,\n\t\t\t\"quarter\": 3 * 30 * 24 * 60 * 60 * 1000,\n\t\t\t\"year\": 365.2425 * 24 * 60 * 60 * 1000\n\t\t};\n\t\n\t\t// the allowed tick sizes, after 1 year we use\n\t\t// an integer algorithm\n\t\n\t\tvar baseSpec = [\n\t\t\t[1, \"second\"], [2, \"second\"], [5, \"second\"], [10, \"second\"],\n\t\t\t[30, \"second\"], \n\t\t\t[1, \"minute\"], [2, \"minute\"], [5, \"minute\"], [10, \"minute\"],\n\t\t\t[30, \"minute\"], \n\t\t\t[1, \"hour\"], [2, \"hour\"], [4, \"hour\"],\n\t\t\t[8, \"hour\"], [12, \"hour\"],\n\t\t\t[1, \"day\"], [2, \"day\"], [3, \"day\"],\n\t\t\t[0.25, \"month\"], [0.5, \"month\"], [1, \"month\"],\n\t\t\t[2, \"month\"]\n\t\t];\n\t\n\t\t// we don't know which variant(s) we'll need yet, but generating both is\n\t\t// cheap\n\t\n\t\tvar specMonths = baseSpec.concat([[3, \"month\"], [6, \"month\"],\n\t\t\t[1, \"year\"]]);\n\t\tvar specQuarters = baseSpec.concat([[1, \"quarter\"], [2, \"quarter\"],\n\t\t\t[1, \"year\"]]);\n\t\n\t\tfunction init(plot) {\n\t\t\tplot.hooks.processOptions.push(function (plot, options) {\n\t\t\t\t$.each(plot.getAxes(), function(axisName, axis) {\n\t\n\t\t\t\t\tvar opts = axis.options;\n\t\n\t\t\t\t\tif (opts.mode == \"time\") {\n\t\t\t\t\t\taxis.tickGenerator = function(axis) {\n\t\n\t\t\t\t\t\t\tvar ticks = [];\n\t\t\t\t\t\t\tvar d = dateGenerator(axis.min, opts);\n\t\t\t\t\t\t\tvar minSize = 0;\n\t\n\t\t\t\t\t\t\t// make quarter use a possibility if quarters are\n\t\t\t\t\t\t\t// mentioned in either of these options\n\t\n\t\t\t\t\t\t\tvar spec = (opts.tickSize && opts.tickSize[1] ===\n\t\t\t\t\t\t\t\t\"quarter\") ||\n\t\t\t\t\t\t\t\t(opts.minTickSize && opts.minTickSize[1] ===\n\t\t\t\t\t\t\t\t\"quarter\") ? specQuarters : specMonths;\n\t\n\t\t\t\t\t\t\tif (opts.minTickSize != null) {\n\t\t\t\t\t\t\t\tif (typeof opts.tickSize == \"number\") {\n\t\t\t\t\t\t\t\t\tminSize = opts.tickSize;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tminSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tfor (var i = 0; i < spec.length - 1; ++i) {\n\t\t\t\t\t\t\t\tif (axis.delta < (spec[i][0] * timeUnitSize[spec[i][1]]\n\t\t\t\t\t\t\t\t\t\t\t\t  + spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2\n\t\t\t\t\t\t\t\t\t&& spec[i][0] * timeUnitSize[spec[i][1]] >= minSize) {\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tvar size = spec[i][0];\n\t\t\t\t\t\t\tvar unit = spec[i][1];\n\t\n\t\t\t\t\t\t\t// special-case the possibility of several years\n\t\n\t\t\t\t\t\t\tif (unit == \"year\") {\n\t\n\t\t\t\t\t\t\t\t// if given a minTickSize in years, just use it,\n\t\t\t\t\t\t\t\t// ensuring that it's an integer\n\t\n\t\t\t\t\t\t\t\tif (opts.minTickSize != null && opts.minTickSize[1] == \"year\") {\n\t\t\t\t\t\t\t\t\tsize = Math.floor(opts.minTickSize[0]);\n\t\t\t\t\t\t\t\t} else {\n\t\n\t\t\t\t\t\t\t\t\tvar magn = Math.pow(10, Math.floor(Math.log(axis.delta / timeUnitSize.year) / Math.LN10));\n\t\t\t\t\t\t\t\t\tvar norm = (axis.delta / timeUnitSize.year) / magn;\n\t\n\t\t\t\t\t\t\t\t\tif (norm < 1.5) {\n\t\t\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t\t\t} else if (norm < 3) {\n\t\t\t\t\t\t\t\t\t\tsize = 2;\n\t\t\t\t\t\t\t\t\t} else if (norm < 7.5) {\n\t\t\t\t\t\t\t\t\t\tsize = 5;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tsize = 10;\n\t\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t\tsize *= magn;\n\t\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t\t// minimum size for years is 1\n\t\n\t\t\t\t\t\t\t\tif (size < 1) {\n\t\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\taxis.tickSize = opts.tickSize || [size, unit];\n\t\t\t\t\t\t\tvar tickSize = axis.tickSize[0];\n\t\t\t\t\t\t\tunit = axis.tickSize[1];\n\t\n\t\t\t\t\t\t\tvar step = tickSize * timeUnitSize[unit];\n\t\n\t\t\t\t\t\t\tif (unit == \"second\") {\n\t\t\t\t\t\t\t\td.setSeconds(floorInBase(d.getSeconds(), tickSize));\n\t\t\t\t\t\t\t} else if (unit == \"minute\") {\n\t\t\t\t\t\t\t\td.setMinutes(floorInBase(d.getMinutes(), tickSize));\n\t\t\t\t\t\t\t} else if (unit == \"hour\") {\n\t\t\t\t\t\t\t\td.setHours(floorInBase(d.getHours(), tickSize));\n\t\t\t\t\t\t\t} else if (unit == \"month\") {\n\t\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), tickSize));\n\t\t\t\t\t\t\t} else if (unit == \"quarter\") {\n\t\t\t\t\t\t\t\td.setMonth(3 * floorInBase(d.getMonth() / 3,\n\t\t\t\t\t\t\t\t\ttickSize));\n\t\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\t\td.setFullYear(floorInBase(d.getFullYear(), tickSize));\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// reset smaller components\n\t\n\t\t\t\t\t\t\td.setMilliseconds(0);\n\t\n\t\t\t\t\t\t\tif (step >= timeUnitSize.minute) {\n\t\t\t\t\t\t\t\td.setSeconds(0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (step >= timeUnitSize.hour) {\n\t\t\t\t\t\t\t\td.setMinutes(0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (step >= timeUnitSize.day) {\n\t\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (step >= timeUnitSize.day * 4) {\n\t\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (step >= timeUnitSize.month * 2) {\n\t\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 3));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (step >= timeUnitSize.quarter * 2) {\n\t\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 6));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (step >= timeUnitSize.year) {\n\t\t\t\t\t\t\t\td.setMonth(0);\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tvar carry = 0;\n\t\t\t\t\t\t\tvar v = Number.NaN;\n\t\t\t\t\t\t\tvar prev;\n\t\n\t\t\t\t\t\t\tdo {\n\t\n\t\t\t\t\t\t\t\tprev = v;\n\t\t\t\t\t\t\t\tv = d.getTime();\n\t\t\t\t\t\t\t\tticks.push(v);\n\t\n\t\t\t\t\t\t\t\tif (unit == \"month\" || unit == \"quarter\") {\n\t\t\t\t\t\t\t\t\tif (tickSize < 1) {\n\t\n\t\t\t\t\t\t\t\t\t\t// a bit complicated - we'll divide the\n\t\t\t\t\t\t\t\t\t\t// month/quarter up but we need to take\n\t\t\t\t\t\t\t\t\t\t// care of fractions so we don't end up in\n\t\t\t\t\t\t\t\t\t\t// the middle of a day\n\t\n\t\t\t\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t\t\t\t\tvar start = d.getTime();\n\t\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\t\t(unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t\t\tvar end = d.getTime();\n\t\t\t\t\t\t\t\t\t\td.setTime(v + carry * timeUnitSize.hour + (end - start) * tickSize);\n\t\t\t\t\t\t\t\t\t\tcarry = d.getHours();\n\t\t\t\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\t\ttickSize * (unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\t\t\td.setFullYear(d.getFullYear() + tickSize);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\td.setTime(v + step);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} while (v < axis.max && v != prev);\n\t\n\t\t\t\t\t\t\treturn ticks;\n\t\t\t\t\t\t};\n\t\n\t\t\t\t\t\taxis.tickFormatter = function (v, axis) {\n\t\n\t\t\t\t\t\t\tvar d = dateGenerator(v, axis.options);\n\t\n\t\t\t\t\t\t\t// first check global format\n\t\n\t\t\t\t\t\t\tif (opts.timeformat != null) {\n\t\t\t\t\t\t\t\treturn formatDate(d, opts.timeformat, opts.monthNames, opts.dayNames);\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// possibly use quarters if quarters are mentioned in\n\t\t\t\t\t\t\t// any of these places\n\t\n\t\t\t\t\t\t\tvar useQuarters = (axis.options.tickSize &&\n\t\t\t\t\t\t\t\t\taxis.options.tickSize[1] == \"quarter\") ||\n\t\t\t\t\t\t\t\t(axis.options.minTickSize &&\n\t\t\t\t\t\t\t\t\taxis.options.minTickSize[1] == \"quarter\");\n\t\n\t\t\t\t\t\t\tvar t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];\n\t\t\t\t\t\t\tvar span = axis.max - axis.min;\n\t\t\t\t\t\t\tvar suffix = (opts.twelveHourClock) ? \" %p\" : \"\";\n\t\t\t\t\t\t\tvar hourCode = (opts.twelveHourClock) ? \"%I\" : \"%H\";\n\t\t\t\t\t\t\tvar fmt;\n\t\n\t\t\t\t\t\t\tif (t < timeUnitSize.minute) {\n\t\t\t\t\t\t\t\tfmt = hourCode + \":%M:%S\" + suffix;\n\t\t\t\t\t\t\t} else if (t < timeUnitSize.day) {\n\t\t\t\t\t\t\t\tif (span < 2 * timeUnitSize.day) {\n\t\t\t\t\t\t\t\t\tfmt = hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfmt = \"%b %d \" + hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (t < timeUnitSize.month) {\n\t\t\t\t\t\t\t\tfmt = \"%b %d\";\n\t\t\t\t\t\t\t} else if ((useQuarters && t < timeUnitSize.quarter) ||\n\t\t\t\t\t\t\t\t(!useQuarters && t < timeUnitSize.year)) {\n\t\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\t\tfmt = \"%b\";\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfmt = \"%b %Y\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (useQuarters && t < timeUnitSize.year) {\n\t\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\t\tfmt = \"Q%q\";\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tfmt = \"Q%q %Y\";\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"%Y\";\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\tvar rt = formatDate(d, fmt, opts.monthNames, opts.dayNames);\n\t\n\t\t\t\t\t\t\treturn rt;\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\n\t\t$.plot.plugins.push({\n\t\t\tinit: init,\n\t\t\toptions: options,\n\t\t\tname: 'time',\n\t\t\tversion: '1.0'\n\t\t});\n\t\n\t\t// Time-axis support used to be in Flot core, which exposed the\n\t\t// formatDate function on the plot object.  Various plugins depend\n\t\t// on the function, so we need to re-expose it here.\n\t\n\t\t$.plot.formatDate = formatDate;\n\t\t$.plot.dateGenerator = dateGenerator;\n\t\n\t})(jQuery);\n\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2015 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var cockpit = __webpack_require__(7);\n\t    var Mustache = __webpack_require__(10);\n\t    var day_header_template = __webpack_require__(23);\n\t    var line_template = __webpack_require__(24);\n\t    var reboot_template = __webpack_require__(25);\n\t\n\t    var _ = cockpit.gettext;\n\t    var C_ = cockpit.gettext;\n\t\n\t    var journal = { };\n\t\n\t    /**\n\t     * journalctl([match, ...], [options])\n\t     * @match: any number of journal match strings\n\t     * @options: an object containing further options\n\t     *\n\t     * Load and (by default) stream journal entries as\n\t     * json objects. This function returns a jQuery deferred\n\t     * object which delivers the various journal entries.\n\t     *\n\t     * The various @match strings are journalctl matches.\n\t     * Zero, one or more can be specified. They must be in\n\t     * string format, or arrays of strings.\n\t     *\n\t     * The optional @options object can contain the following:\n\t     *  * \"host\": the host to load journal from\n\t     *  * \"count\": number of entries to load and/or pre-stream.\n\t     *    Default is 10\n\t     *  * \"follow\": if set to false just load entries and don't\n\t     *    stream further journal data. Default is true.\n\t     *  * \"directory\": optional directory to load journal files\n\t     *  * \"boot\": when set only list entries from this specific\n\t     *    boot id, or if null then the current boot.\n\t     *  * \"since\": if specified list entries since the date/time\n\t     *  * \"until\": if specified list entries until the date/time\n\t     *  * \"cursor\": a cursor to start listing entries from\n\t     *  * \"after\": a cursor to start listing entries after\n\t     *\n\t     * Returns a jQuery deferred promise. You can call these\n\t     * functions on the deferred to handle the responses. Note that\n\t     * there are additional non-jQuery methods.\n\t     *\n\t     *  .done(function(entries) { }): Called when done, @entries is\n\t     *         an array of all journal entries loaded. If .stream()\n\t     *         has been invoked then @entries will be empty.\n\t     *  .fail(funciton(ex) { }): called if the operation fails\n\t     *  .stream(function(entries) { }): called when we receive entries\n\t     *         entries. Called once per batch of journal @entries,\n\t     *         whether following or not.\n\t     *  .stop(): stop following or retrieving entries.\n\t     */\n\t\n\t    journal.journalctl = function journalctl(/* ... */) {\n\t        var matches = [];\n\t        var i, arg, options = { follow: true };\n\t        for (i = 0; i < arguments.length; i++) {\n\t            arg = arguments[i];\n\t            if (typeof arg == \"string\") {\n\t                matches.push(arg);\n\t            } else if (typeof arg == \"object\") {\n\t                if (arg instanceof Array) {\n\t                    matches.push.apply(matches, arg);\n\t                } else {\n\t                    cockpit.extend(options, arg);\n\t                    break;\n\t                }\n\t            } else {\n\t                console.warn(\"journal.journalctl called with invalid argument:\", arg);\n\t            }\n\t        }\n\t\n\t        if (options.count === undefined) {\n\t            if (options.follow)\n\t                options.count = 10;\n\t            else\n\t                options.count = null;\n\t        }\n\t\n\t        var cmd = [ \"journalctl\", \"-q\", \"--output=json\" ];\n\t        if (!options.count)\n\t            cmd.push(\"--no-tail\");\n\t        else\n\t            cmd.push(\"--lines=\" + options.count);\n\t        if (options.directory)\n\t            cmd.push(\"--directory=\" + options.directory);\n\t        if (options.boot)\n\t            cmd.push(\"--boot=\" + options.boot);\n\t        else if (options.boot !== undefined)\n\t            cmd.push(\"--boot\");\n\t        if (options.since)\n\t            cmd.push(\"--since=\" + options.since);\n\t        if (options.until)\n\t            cmd.push(\"--until=\" + options.until);\n\t        if (options.cursor)\n\t            cmd.push(\"--cursor=\" + options.cursor);\n\t        if (options.after)\n\t            cmd.push(\"--after=\" + options.after);\n\t\n\t        /* journalctl doesn't allow reverse and follow together */\n\t        if (options.reverse)\n\t            cmd.push(\"--reverse\");\n\t        else if (options.follow)\n\t            cmd.push(\"--follow\");\n\t\n\t        cmd.push(\"--\");\n\t        cmd.push.apply(cmd, matches);\n\t\n\t        var dfd = new cockpit.defer();\n\t        var promise;\n\t        var buffer = \"\";\n\t        var entries = [];\n\t        var streamers = [];\n\t        var interval = null;\n\t\n\t        function fire_streamers() {\n\t            var ents, i;\n\t            if (streamers.length && entries.length > 0) {\n\t                ents = entries;\n\t                entries = [];\n\t                for (i = 0; i < streamers.length; i++)\n\t                    streamers[i].apply(promise, [ents]);\n\t            } else {\n\t                window.clearInterval(interval);\n\t                interval = null;\n\t            }\n\t        }\n\t\n\t        var proc = cockpit.spawn(cmd, { host: options.host, batch: 8192, latency: 300, superuser: \"try\" }).\n\t            stream(function(data) {\n\t\n\t                if (buffer)\n\t                    data = buffer + data;\n\t                buffer = \"\";\n\t\n\t                var lines = data.split(\"\\n\");\n\t                var last = lines.length - 1;\n\t                lines.forEach(function(line, i) {\n\t                    if (i == last) {\n\t                        buffer = line;\n\t                    } else if (line && line.indexOf(\"-- \") !== 0) {\n\t                        try {\n\t                            entries.push(JSON.parse(line));\n\t                        } catch (e) {\n\t                            console.warn(e, line);\n\t                        }\n\t                    }\n\t                });\n\t\n\t                if (streamers.length && interval === null)\n\t                    interval = window.setInterval(fire_streamers, 300);\n\t            }).\n\t            done(function() {\n\t                fire_streamers();\n\t                dfd.resolve(entries);\n\t            }).\n\t            fail(function(ex) {\n\t                /* The journalctl command fails when no entries are matched\n\t                 * so we just ignore this status code */\n\t                if (ex.problem == \"cancelled\" ||\n\t                    ex.exit_status === 1) {\n\t                    fire_streamers();\n\t                    dfd.resolve(entries);\n\t                } else {\n\t                    dfd.reject(ex);\n\t                }\n\t            }).\n\t            always(function() {\n\t                window.clearInterval(interval);\n\t            });\n\t\n\t        promise = dfd.promise();\n\t        promise.stream = function stream(callback) {\n\t            streamers.push(callback);\n\t            return this;\n\t        };\n\t        promise.stop = function stop() {\n\t            proc.close(\"cancelled\");\n\t        };\n\t        return promise;\n\t    };\n\t\n\t    journal.printable = function printable(value) {\n\t        if (value === undefined || value === null)\n\t            return _(\"[no data]\");\n\t        else if (typeof(value) == \"string\")\n\t            return value;\n\t        else if (value.length !== undefined)\n\t            return cockpit.format(_(\"[$0 bytes of binary data]\"), value.length);\n\t        else\n\t            return _(\"[binary data]\");\n\t    };\n\t\n\t    function output_funcs_for_box(box) {\n\t        /* Dereference any jQuery object here */\n\t        if (box.jquery)\n\t            box = box[0];\n\t\n\t        Mustache.parse(day_header_template);\n\t        Mustache.parse(line_template);\n\t        Mustache.parse(reboot_template);\n\t\n\t        function render_line(ident, prio, message, count, time, entry) {\n\t            var parts = {\n\t                    'cursor': entry[\"__CURSOR\"],\n\t                    'time': time,\n\t                    'message': message,\n\t                    'service': ident\n\t                };\n\t            if (count > 1)\n\t                parts['count'] = count;\n\t            if (ident === 'abrt-notification') {\n\t                parts['problem'] = true;\n\t                parts['service'] = entry['PROBLEM_BINARY'];\n\t            }\n\t            else if (prio < 4)\n\t                parts['warning'] = true;\n\t            return Mustache.render(line_template, parts);\n\t        }\n\t\n\t        var reboot = _(\"Reboot\");\n\t        var reboot_line = Mustache.render(reboot_template, {'message': reboot} );\n\t\n\t        function render_reboot_separator() {\n\t            return reboot_line;\n\t        }\n\t\n\t        function render_day_header(day) {\n\t            return Mustache.render(day_header_template, {'day': day} );\n\t        }\n\t\n\t        function parse_html(string) {\n\t            var div = document.createElement(\"div\");\n\t            div.innerHTML = string.trim();\n\t            return div.children[0];\n\t        }\n\t\n\t        return {\n\t            render_line: render_line,\n\t            render_day_header: render_day_header,\n\t            render_reboot_separator: render_reboot_separator,\n\t\n\t            append: function(elt) {\n\t                if (typeof (elt) == \"string\")\n\t                    elt = parse_html(elt);\n\t                box.appendChild(elt);\n\t            },\n\t            prepend: function(elt) {\n\t                if (typeof (elt) == \"string\")\n\t                    elt = parse_html(elt);\n\t                if (box.firstChild)\n\t                    box.insertBefore(elt, box.firstChild);\n\t                else\n\t                    box.appendChild(elt);\n\t            },\n\t            remove_last: function() {\n\t                if (box.lastChild)\n\t                    box.removeChild(box.lastChild);\n\t            },\n\t            remove_first: function() {\n\t                if (box.firstChild)\n\t                    box.removeChild(box.firstChild);\n\t            },\n\t        };\n\t    }\n\t\n\t    var month_names = [\n\t        C_(\"month-name\", 'January'),\n\t        C_(\"month-name\", 'February'),\n\t        C_(\"month-name\", 'March'),\n\t        C_(\"month-name\", 'April'),\n\t        C_(\"month-name\", 'May'),\n\t        C_(\"month-name\", 'June'),\n\t        C_(\"month-name\", 'July'),\n\t        C_(\"month-name\", 'August'),\n\t        C_(\"month-name\", 'September'),\n\t        C_(\"month-name\", 'October'),\n\t        C_(\"month-name\", 'November'),\n\t        C_(\"month-name\", 'December')\n\t    ];\n\t\n\t    /* Render the journal entries by passing suitable HTML strings back to\n\t       the caller via the 'output_funcs'.\n\t\n\t       Rendering is context aware.  It will insert 'reboot' markers, for\n\t       example, and collapse repeated lines.  You can extend the output at\n\t       the bottom and also at the top.\n\t\n\t       A new renderer is created by calling 'journal.renderer' like\n\t       so:\n\t\n\t          var renderer = journal.renderer(funcs);\n\t\n\t       You can feed new entries into the renderer by calling various\n\t       methods on the returned object:\n\t\n\t          - renderer.append(journal_entry)\n\t          - renderer.append_flush()\n\t          - renderer.prepend(journal_entry)\n\t          - renderer.prepend_flush()\n\t\n\t       A 'journal_entry' is one element of the result array returned by a\n\t       call to 'Query' with the 'cockpit.journal_fields' as the fields to\n\t       return.\n\t\n\t       Calling 'append' will append the given entry to the end of the\n\t       output, naturally, and 'prepend' will prepend it to the start.\n\t\n\t       The output might lag behind what has been input via 'append' and\n\t       'prepend', and you need to call 'append_flush' and 'prepend_flush'\n\t       respectively to ensure that the output is up-to-date.  Flushing a\n\t       renderer does not introduce discontinuities into the output.  You\n\t       can continue to feed entries into the renderer after flushing and\n\t       repeated lines will be correctly collapsed across the flush, for\n\t       example.\n\t\n\t       The renderer will call methods of the 'output_funcs' object to\n\t       produce the desired output:\n\t\n\t          - output_funcs.append(rendered)\n\t          - output_funcs.remove_last()\n\t          - output_funcs.prepend(rendered)\n\t          - output_funcs.remove_first()\n\t\n\t       The 'rendered' argument is the return value of one of the rendering\n\t       functions described below.  The 'append' and 'prepend' methods\n\t       should add this element to the output, naturally, and 'remove_last'\n\t       and 'remove_first' should remove the indicated element.\n\t\n\t       If you never call 'prepend' on the renderer, 'output_func.prepend'\n\t       isn't called either.  If you never call 'renderer.prepend' after\n\t       'renderer.prepend_flush', then 'output_func.remove_first' will\n\t       never be called.  The same guarantees exist for the 'append' family\n\t       of functions.\n\t\n\t       The actual rendering is also done by calling methods on\n\t       'output_funcs':\n\t\n\t          - output_funcs.render_line(ident, prio, message, count, time, cursor)\n\t          - output_funcs.render_day_header(day)\n\t          - output_funcs.render_reboot_separator()\n\t\n\t    */\n\t\n\t    journal.renderer = function renderer(funcs_or_box) {\n\t        var output_funcs;\n\t        if (funcs_or_box.render_line)\n\t            output_funcs = funcs_or_box;\n\t        else\n\t            output_funcs = output_funcs_for_box(funcs_or_box);\n\t\n\t        function copy_object(o) {\n\t            var c = { }; for(var p in o) c[p] = o[p]; return c;\n\t        }\n\t\n\t        // A 'entry' object describes a journal entry in formatted form.\n\t        // It has fields 'bootid', 'ident', 'prio', 'message', 'time',\n\t        // 'day', all of which are strings.\n\t\n\t        function format_entry(journal_entry) {\n\t            function pad(n) {\n\t                var str = n.toFixed();\n\t                if(str.length == 1)\n\t                    str = '0' + str;\n\t                return str;\n\t            }\n\t\n\t            var d = new Date(journal_entry[\"__REALTIME_TIMESTAMP\"] / 1000);\n\t            return {\n\t                cursor: journal_entry[\"__CURSOR\"],\n\t                full: journal_entry,\n\t                day: month_names[d.getMonth()] + ' ' + d.getDate().toFixed() + ', ' + d.getFullYear().toFixed(),\n\t                time: pad(d.getHours()) + ':' + pad(d.getMinutes()),\n\t                bootid: journal_entry[\"_BOOT_ID\"],\n\t                ident: journal_entry[\"SYSLOG_IDENTIFIER\"] || journal_entry[\"_COMM\"],\n\t                prio: journal_entry[\"PRIORITY\"],\n\t                message: journal.printable(journal_entry[\"MESSAGE\"])\n\t            };\n\t        }\n\t\n\t        function entry_is_equal(a, b) {\n\t            return (a && b &&\n\t                    a.day == b.day &&\n\t                    a.bootid == b.bootid &&\n\t                    a.ident == b.ident &&\n\t                    a.prio == b.prio &&\n\t                    a.message == b.message);\n\t        }\n\t\n\t        // A state object describes a line that should be eventually\n\t        // output.  It has an 'entry' field as per description above, and\n\t        // also 'count', 'last_time', and 'first_time', which record\n\t        // repeated entries.  Additionally:\n\t        //\n\t        // line_present: When true, the line has been output already with\n\t        //     some preliminary data.  It needs to be removed before\n\t        //     outputting more recent data.\n\t        //\n\t        // header_present: The day header has been output preliminarily\n\t        //     before the actual log lines.  It needs to be removed before\n\t        //     prepending more lines.  If both line_present and\n\t        //     header_present are true, then the header comes first in the\n\t        //     output, followed by the line.\n\t\n\t        function render_state_line(state) {\n\t            return output_funcs.render_line(state.entry.ident,\n\t                                            state.entry.prio,\n\t                                            state.entry.message,\n\t                                            state.count,\n\t                                            state.last_time,\n\t                                            state.entry.full);\n\t        }\n\t\n\t        // We keep the state of the first and last journal lines,\n\t        // respectively, in order to collapse repeated lines, and to\n\t        // insert reboot markers and day headers.\n\t        //\n\t        // Normally, there are two state objects, but if only a single\n\t        // line has been output so far, top_state and bottom_state point\n\t        // to the same object.\n\t\n\t        var top_state, bottom_state;\n\t\n\t        top_state = bottom_state = { };\n\t\n\t        function start_new_line() {\n\t            // If we now have two lines, split the state\n\t            if (top_state === bottom_state && top_state.entry) {\n\t                top_state = copy_object(bottom_state);\n\t            }\n\t        }\n\t\n\t        function top_output() {\n\t            if (top_state.header_present) {\n\t                output_funcs.remove_first();\n\t                top_state.header_present = false;\n\t            }\n\t            if (top_state.line_present) {\n\t                output_funcs.remove_first();\n\t                top_state.line_present = false;\n\t            }\n\t            if (top_state.entry) {\n\t                output_funcs.prepend(render_state_line(top_state));\n\t                top_state.line_present = true;\n\t            }\n\t        }\n\t\n\t        function prepend(journal_entry) {\n\t            var entry = format_entry(journal_entry);\n\t\n\t            if (entry_is_equal(top_state.entry, entry)) {\n\t                top_state.count += 1;\n\t                top_state.first_time = entry.time;\n\t            } else {\n\t                top_output();\n\t\n\t                if (top_state.entry) {\n\t                    if (entry.bootid != top_state.entry.bootid)\n\t                        output_funcs.prepend(output_funcs.render_reboot_separator());\n\t                    if (entry.day != top_state.entry.day)\n\t                        output_funcs.prepend(output_funcs.render_day_header(top_state.entry.day));\n\t                }\n\t\n\t                start_new_line();\n\t                top_state.entry = entry;\n\t                top_state.count = 1;\n\t                top_state.first_time = top_state.last_time = entry.time;\n\t                top_state.line_present = false;\n\t            }\n\t        }\n\t\n\t        function prepend_flush() {\n\t            top_output();\n\t            if (top_state.entry) {\n\t                output_funcs.prepend(output_funcs.render_day_header(top_state.entry.day));\n\t                top_state.header_present = true;\n\t            }\n\t        }\n\t\n\t        function bottom_output() {\n\t            if (bottom_state.line_present) {\n\t                output_funcs.remove_last();\n\t                bottom_state.line_present = false;\n\t            }\n\t            if (bottom_state.entry) {\n\t                output_funcs.append(render_state_line(bottom_state));\n\t                bottom_state.line_present = true;\n\t            }\n\t        }\n\t\n\t        function append(journal_entry) {\n\t            var entry = format_entry(journal_entry);\n\t\n\t            if (entry_is_equal(bottom_state.entry, entry)) {\n\t                bottom_state.count += 1;\n\t                bottom_state.last_time = entry.time;\n\t            } else {\n\t                bottom_output();\n\t\n\t                if (!bottom_state.entry || entry.day != bottom_state.entry.day) {\n\t                    output_funcs.append(output_funcs.render_day_header(entry.day));\n\t                    bottom_state.header_present = true;\n\t                }\n\t                if (bottom_state.entry && entry.bootid != bottom_state.entry.bootid)\n\t                    output_funcs.append(output_funcs.render_reboot_separator());\n\t\n\t                start_new_line();\n\t                bottom_state.entry = entry;\n\t                bottom_state.count = 1;\n\t                bottom_state.first_time = bottom_state.last_time = entry.time;\n\t                bottom_state.line_present = false;\n\t            }\n\t        }\n\t\n\t        function append_flush() {\n\t            bottom_output();\n\t        }\n\t\n\t        return { prepend: prepend,\n\t                 prepend_flush: prepend_flush,\n\t                 append: append,\n\t                 append_flush: append_flush\n\t               };\n\t    };\n\t\n\t    journal.logbox = function logbox(match, max_entries) {\n\t        var entries = [ ];\n\t        var box = document.createElement(\"div\");\n\t\n\t        function render() {\n\t            var renderer = journal.renderer(box);\n\t            while(box.firstChild)\n\t                box.removeChild(box.firstChild);\n\t            for (var i = 0; i < entries.length; i++) {\n\t                renderer.prepend(entries[i]);\n\t            }\n\t            renderer.prepend_flush();\n\t            if (entries.length > 0)\n\t                box.removeAttribute(\"hidden\");\n\t            else\n\t                box.setAttribute(\"hidden\", \"hidden\");\n\t        }\n\t\n\t        render();\n\t\n\t        var promise = journal.journalctl(match, { count: max_entries }).\n\t            stream(function(tail) {\n\t                entries = entries.concat(tail);\n\t                if (entries.length > max_entries)\n\t                    entries = entries.slice(-max_entries);\n\t                render();\n\t            }).\n\t            fail(function(error) {\n\t                box.appendChild(document.createTextNode(error.message));\n\t                box.removeAttribute(\"hidden\");\n\t            });\n\t\n\t        /* Both a DOM element and a promise */\n\t        return promise.promise(box);\n\t    };\n\t\n\t    module.exports = journal;\n\t}());\n\n\n/***/ },\n/* 23 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"panel-heading\\\">{{day}}</div>\\n\"\n\n/***/ },\n/* 24 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"cockpit-logline\\\" data-cursor=\\\"{{cursor}}\\\">\\n  <div class=\\\"cockpit-log-warning\\\">{{#warning}}\\n    <i class=\\\"fa fa-exclamation-triangle\\\"></i>\\n  {{/warning}}{{#problem}}\\n    <i class=\\\"fa fa-times-circle-o\\\"></i>\\n  {{/problem}}\\n  </div>\\n  <div class=\\\"cockpit-log-time\\\">{{time}}</div>\\n  <span class=\\\"cockpit-log-message\\\">{{message}}</span>\\n  {{! if we have count (repeated messages), show service name and badge - otherwise just the service }}\\n  {{#count}}\\n  <div class=\\\"cockpit-log-service-container\\\">\\n    <div class=\\\"cockpit-log-service-reduced\\\">{{service}}</div>\\n    <span class=\\\"badge\\\">{{count}}&#160;<i class=\\\"fa fa-caret-right\\\"></i></span>\\n  </div>\\n  {{/count}}{{^count}}\\n  <div class=\\\"cockpit-log-service\\\">{{service}}</div>\\n  {{/count}}\\n</div>\\n\"\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<div class=\\\"cockpit-logline\\\">\\n  {{! placeholders for correct message alignment }}\\n  <div class=\\\"cockpit-log-warning\\\"></div>\\n  <span class=\\\"cockpit-log-message cockpit-logmsg-reboot\\\">{{message}}</span>\\n</div>\\n\"\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2015 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(6);\n\t    var cockpit = __webpack_require__(7);\n\t\n\t    var mustache = __webpack_require__(10);\n\t    __webpack_require__(27);\n\t    __webpack_require__(28);\n\t\n\t    var _ = cockpit.gettext;\n\t\n\t    /* GENERIC STORAGE DIALOG SUPPORT\n\t     */\n\t\n\t    var storage_dialog_tmpl;\n\t\n\t    function init_dialogs() {\n\t        storage_dialog_tmpl = $(\"#storage-dialog-tmpl\").html();\n\t        mustache.parse(storage_dialog_tmpl);\n\t    }\n\t\n\t    var cur_dialog;\n\t\n\t    function dialog_open(def) {\n\t\n\t        def.Fields.forEach(function (f) {\n\t            // Convert initial values for SizeInput fields to MB.\n\t            if (f.SizeInput && f.Value)\n\t                f.ValueMB = (f.Value / (1024*1024)).toFixed(0);\n\t\n\t            // Put in the Units for SizeSliders\n\t            if (f.SizeSlider && !f.Units)\n\t                f.Units = cockpit.get_byte_units(f.Value || f.Max);\n\t\n\t            // Help SelectMany with counting\n\t            if (f.SelectMany)\n\t                f.HasOptions = (f.Options.length > 0);\n\t\n\t            // Help CheckBoxText with detecting \"false\"\n\t            if (f.CheckBoxText)\n\t                f.Checked = (f.Value !== false);\n\t        });\n\t\n\t        if (def.Action && def.Action.Danger)\n\t            def.Action.DangerButton = true;\n\t\n\t        function empty(obj) { return !obj || obj.length === 0; }\n\t\n\t        def.HasBody = !empty(def.Fields) || !empty(def.Alerts) || !empty(def.Blocking);\n\t\n\t        function toggle_arrow(event) {\n\t            /* jshint validthis:true */\n\t            var collapsed = $(this).hasClass('collapsed');\n\t            if (collapsed) {\n\t                $(this).removeClass('collapsed');\n\t                $(this).find('.fa').removeClass('fa-angle-right').addClass('fa-angle-down');\n\t            } else {\n\t                $(this).addClass('collapsed');\n\t                $(this).find('.fa').removeClass('fa-angle-down').addClass('fa-angle-right');\n\t            }\n\t            update_visibility();\n\t        }\n\t\n\t        function select_row(event) {\n\t            /* jshint validthis:true */\n\t            var tbody = $(this);\n\t            var row = $(event.target).parent('tr');\n\t            tbody.find('tr').removeClass('highlight-ct');\n\t            row.addClass('highlight-ct');\n\t        }\n\t\n\t        if (cur_dialog)\n\t            cur_dialog.modal('hide');\n\t\n\t        var $dialog = $(mustache.render(storage_dialog_tmpl, def));\n\t        $('body').append($dialog);\n\t        cur_dialog = $dialog;\n\t\n\t        $dialog.on('hidden.bs.modal', function () {\n\t            $dialog.remove();\n\t        });\n\t\n\t        $dialog.find('.dialog-arrow').on('click', toggle_arrow);\n\t        $dialog.find('.dialog-select-row-table tbody').on('click', select_row);\n\t        $dialog.find('.dialog-select-row-table tbody tr:first-child').addClass('highlight-ct');\n\t\n\t        /* Dropdowns\n\t         */\n\t\n\t        function dropdown_option_clicked(target) {\n\t            if (target.hasClass(\"disabled\"))\n\t                return false;\n\t            var parent = target.parents(\".dropdown\");\n\t            parent.find(\"button span\").first().text(target.text());\n\t            parent.val(target.attr(\"value\"));\n\t            parent.find(\"li.selected\").removeClass(\"selected\");\n\t            target.addClass(\"selected\");\n\t            parent.trigger(\"change\", [ ]);\n\t        }\n\t\n\t        $dialog.on(\"click\", \".dropdown li[value]\", function(ev) {\n\t            return dropdown_option_clicked($(this));\n\t        });\n\t\n\t        $dialog.find(\".dropdown\").each(function (i, parent) {\n\t            var selected;\n\t            $(parent).find(\"li[value]\").each(function (i, target) {\n\t                if (!selected || $(target).attr(\"selected\"))\n\t                    selected = $(target);\n\t            });\n\t            dropdown_option_clicked(selected);\n\t        });\n\t\n\t        /* Size sliders\n\t         */\n\t\n\t        function setup_size_slider(field) {\n\t            var value = field.Value || field.Max;\n\t            var parent = $dialog.find('[data-field=\"' + field.SizeSlider + '\"]');\n\t            var input = parent.find('.size-text');\n\t            var unit = parent.find('.size-unit');\n\t            var slider = $(\"<div class='slider'>\").\n\t                append($(\"<div class='slider-bar'>\").\n\t                    append($(\"<div class='slider-thumb'>\")));\n\t            $(slider).slider();\n\t\n\t            parent.data('max', field.Max);\n\t            parent.data('round', field.Round);\n\t            parent.find('.slider').replaceWith(slider);\n\t\n\t            $(slider).on('change', size_slider_changed);\n\t            parent.find('.size-text').on('change', size_text_changed);\n\t            parent.find('.size-unit').on('change', size_unit_changed);\n\t\n\t            slider.prop(\"value\", value / field.Max);\n\t            parent.val(value);\n\t            input.val(cockpit.format_number(value / +unit.val()));\n\t        }\n\t\n\t        function size_slider_changed(event, value) {\n\t            /* jshint validthis:true */\n\t            var parent = $(this).parents('.size-slider');\n\t            var input = parent.find('.size-text');\n\t            var unit = parent.find('.size-unit');\n\t            var max = parent.data('max');\n\t            var round = parent.data('round');\n\t\n\t            value *= max;\n\t            if (round)\n\t                value = Math.round(value / round) * round;\n\t\n\t            if (value < 0)\n\t                value = 0;\n\t            if (value > max)\n\t                value = max;\n\t\n\t            input.val(cockpit.format_number(value / +unit.val()));\n\t            parent.val(value);\n\t            $(parent).trigger(\"change\");\n\t        }\n\t\n\t        function size_text_changed(event) {\n\t            /* jshint validthis:true */\n\t            var input = $(this);\n\t            var parent = input.parents('.size-slider');\n\t            var unit = parent.find('.size-unit');\n\t            var unit_val = +unit.val();\n\t            var slider = parent.find('.slider');\n\t            var max = parent.data('max');\n\t            var value = +input.val() * unit_val;\n\t\n\t            // As a special case, if the user types something that\n\t            // looks like the maximum when formatted, always use\n\t            // exactly the maximum.  Otherwise we have the confusing\n\t            // possibility that with the exact same string in the text\n\t            // input, the size is sometimes too large and sometimes\n\t            // not.\n\t\n\t            var max_fmt = cockpit.format_number(max / unit_val);\n\t            var max_parse = +max_fmt * unit_val;\n\t\n\t            if (value == max_parse)\n\t                value = max;\n\t\n\t            slider.prop(\"value\", value / max);\n\t            parent.val(value);\n\t            $(parent).trigger(\"change\");\n\t        }\n\t\n\t        function size_unit_changed(event) {\n\t            /* jshint validthis:true */\n\t            var unit = $(this);\n\t            var parent = unit.parents('.size-slider');\n\t            var input = parent.find('.size-text');\n\t\n\t            input.val(cockpit.format_number(+parent.val() / +unit.val()));\n\t        }\n\t\n\t        function size_update(field, value) {\n\t            var parent = $dialog.find('[data-field=\"' + field.SizeSlider + '\"]');\n\t            var input = parent.find('.size-text');\n\t            var unit = parent.find('.size-unit');\n\t            var slider = parent.find('.slider');\n\t\n\t            if (typeof value == \"number\")\n\t                value = { Value: value };\n\t\n\t            if (value.Max !== undefined) {\n\t                field.Max = value.Max;\n\t                parent.data('max', field.Max);\n\t            }\n\t\n\t            if (value.Round !== undefined) {\n\t                field.Round = value.Round;\n\t                parent.data('round', field.Round);\n\t            }\n\t\n\t            if (value.Value !== undefined) {\n\t                slider.prop(\"value\", value.Value / field.Max);\n\t                input.val(cockpit.format_number(value.Value / +unit.val()));\n\t                parent.val(value.Value);\n\t            }\n\t        }\n\t\n\t        def.Fields.forEach(function (f) {\n\t            if (f.SizeSlider) {\n\t                setup_size_slider(f);\n\t            }\n\t        });\n\t\n\t        // CheckBoxText\n\t\n\t        $dialog.on(\"change\", \".dialog-checkbox-text input[type=checkbox]\", function (event) {\n\t            var parent = $(event.target).parents(\"[data-field]\");\n\t            var input = parent.find(\"input[type=text]\");\n\t            input.toggle(event.target.checked);\n\t        });\n\t\n\t        /* ComboBoxes\n\t         */\n\t\n\t        $dialog.on(\"click\", \".combobox-container .caret\", function(ev) {\n\t            $(this).parents(\".input-group\").toggleClass(\"open\");\n\t        });\n\t\n\t        $dialog.on(\"click\", \".combobox-container li a\", function(ev) {\n\t            $(this).parents(\".input-group\").find(\"input\").val($(this).text()).trigger(\"change\");\n\t            $(this).parents(\".input-group\").removeClass(\"open\");\n\t        });\n\t\n\t        function combobox_set_choices(name, choices) {\n\t            if (typeof choices == 'function') {\n\t                $.when(choices(get_field_values())).then(function (result) {\n\t                    if (result !== false)\n\t                        combobox_set_choices(name, result);\n\t                });\n\t                return;\n\t            }\n\t\n\t            var $f = $dialog.find('[data-field=\"' + name + '\"]');\n\t            var $ul = $f.find('ul');\n\t            $ul.empty().append(choices.map(function (c) {\n\t                return $('<li>').append($('<a>').text(c));\n\t            }));\n\t            $f.find(\".caret\").toggle(choices.length > 0);\n\t        }\n\t\n\t        var combobox_some_dynamic = false;\n\t\n\t        $dialog.find(\".combobox-container .caret\").hide();\n\t        def.Fields.forEach(function (f) {\n\t            if (f.ComboBox) {\n\t                if (typeof f.Choices == 'function')\n\t                    combobox_some_dynamic = true;\n\t                combobox_set_choices(f.ComboBox, f.Choices);\n\t            }\n\t        });\n\t\n\t        var combobox_timeout;\n\t\n\t        function combobox_reset_dynamic_choices() {\n\t            if (!combobox_some_dynamic)\n\t                return;\n\t\n\t            if (combobox_timeout)\n\t                window.clearTimeout(combobox_timeout);\n\t            combobox_timeout = window.setTimeout(function () {\n\t                def.Fields.forEach(function (f) {\n\t                    if (f.ComboBox && typeof f.Choices == 'function') {\n\t                        combobox_set_choices(f.ComboBox, f.Choices);\n\t                    }\n\t                });\n\t            }, 500);\n\t        }\n\t\n\t        /* Main\n\t         */\n\t\n\t        var invisible = { };\n\t\n\t        function get_name(f) {\n\t            return (f.TextInput || f.PassInput || f.SelectOne || f.SelectMany || f.SizeInput ||\n\t                    f.SizeSlider || f.CheckBox || f.Arrow || f.SelectRow || f.CheckBoxText || f.ComboBox);\n\t        }\n\t\n\t        function get_field_values() {\n\t            var vals = { };\n\t\n\t            def.Fields.forEach(function (f) {\n\t                var n = get_name(f);\n\t                var $f = $dialog.find('[data-field=\"' + n + '\"]');\n\t                if (f.TextInput)\n\t                    vals[n] = $f.val();\n\t                else if (f.PassInput)\n\t                    vals[n] = $f.val();\n\t                else if (f.SelectOne)\n\t                    vals[n] = $f.val();\n\t                else if (f.SizeInput)\n\t                    vals[n] = parseInt($f.val(), 10)*1024*1024;\n\t                else if (f.SizeSlider)\n\t                    vals[n] = parseInt($f.val(), 10);\n\t                else if (f.CheckBox)\n\t                    vals[n] = $f.prop('checked');\n\t                else if (f.SelectMany) {\n\t                    vals[n] = [ ];\n\t                    $f.find('input').each(function (i, e) {\n\t                        if (e.checked)\n\t                            vals[n].push(f.Options[i].value);\n\t                    });\n\t                } else if (f.SelectRow) {\n\t                    $f.find('tbody tr').each(function (i, e) {\n\t                        if ($(e).hasClass('highlight-ct'))\n\t                            vals[n] = f.Rows[i].value;\n\t                    });\n\t                } else if (f.ComboBox) {\n\t                    vals[n] = $f.find('input[type=text]').val();\n\t                } else if (f.Arrow) {\n\t                    vals[n] = !$f.hasClass('collapsed');\n\t                } else if (f.CheckBoxText) {\n\t                    var box = $f.find(\"input[type=checkbox]\");\n\t                    var input = $f.find(\"input[type=text]\");\n\t                    if (!box.prop('checked'))\n\t                        vals[n] = false;\n\t                    else\n\t                        vals[n] = input.val();\n\t                }\n\t            });\n\t\n\t            return vals;\n\t        }\n\t\n\t        function update_visibility() {\n\t            var vals = get_field_values();\n\t\n\t            def.Fields.forEach(function (f) {\n\t                if (f.visible) {\n\t                    var n = get_name(f);\n\t                    invisible[n] = !f.visible(vals);\n\t                    $dialog.find('[data-field=\"' + n + '\"]').parents('tr').toggle(!invisible[n]);\n\t                }\n\t            });\n\t        }\n\t\n\t        function update_fields(trigger) {\n\t            def.Fields.forEach(function (f) {\n\t                if (f.TextInput && f.update) {\n\t                    $dialog.find('[data-field=\"' + f.TextInput + '\"]').val(f.update(get_field_values(), trigger));\n\t                } else if (f.CheckBox && f.update) {\n\t                    $dialog.find('[data-field=\"' + f.CheckBox + '\"]').prop('checked',\n\t                                                                           f.update(get_field_values(), trigger));\n\t                } else if (f.SizeSlider && f.update) {\n\t                    size_update(f, f.update(get_field_values(), trigger));\n\t                }\n\t            });\n\t        }\n\t\n\t        function validate_field(field, val, vals) {\n\t            var msg = null;\n\t\n\t            if (field.SizeSlider) {\n\t                if (isNaN(val))\n\t                    msg = _(\"Size must be a number\");\n\t                if (val === 0)\n\t                    msg = _(\"Size cannot be zero\");\n\t                if (val < 0)\n\t                    msg = _(\"Size cannot be negative\");\n\t                if (!field.AllowInfinite && val > field.Max)\n\t                    msg = _(\"Size is too large\");\n\t            }\n\t\n\t            if (field.validate)\n\t                msg = field.validate(val, vals);\n\t\n\t            return msg;\n\t        }\n\t\n\t        function get_validated_field_values() {\n\t            var vals = get_field_values();\n\t\n\t            var errors = [ ];\n\t            def.Fields.forEach(function (f) {\n\t                var n = get_name(f);\n\t                if (invisible[n])\n\t                    vals[n] = undefined;\n\t                else {\n\t                    var msg = validate_field(f, vals[n], vals);\n\t                    if (msg) {\n\t                        var err = new Error(msg);\n\t                        err.target = '[data-field=\"' + n + '\"]';\n\t                        errors.push(err);\n\t                    }\n\t                }\n\t            });\n\t\n\t            $dialog.dialog('failure', errors);\n\t            return (errors.length === 0)? vals : null;\n\t        }\n\t\n\t        $dialog.on('change input', function (event) {\n\t            update_visibility();\n\t            combobox_reset_dynamic_choices();\n\t            var trigger = $(event.target).attr(\"data-field\");\n\t            if (trigger)\n\t                update_fields(trigger);\n\t        });\n\t\n\t        function error_field_to_target(err) {\n\t            if (err.field)\n\t                return { message: err.message,\n\t                         target: '[data-field=\"' + err.field + '\"]'\n\t                       };\n\t            else\n\t                return err;\n\t        }\n\t\n\t        function close() {\n\t            if (combobox_timeout)\n\t                window.clearTimeout(combobox_timeout);\n\t            $dialog.modal('hide');\n\t        }\n\t\n\t        $dialog.find('button[data-action=\"cancel\"]').on('click', function () {\n\t            close();\n\t        });\n\t\n\t        $dialog.find('button[data-action=\"apply\"]').on('click', function () {\n\t            var vals = get_validated_field_values();\n\t            if (vals !== null) {\n\t                var promise = def.Action.action(vals);\n\t                if (promise) {\n\t                    $dialog.dialog('wait', promise);\n\t                    promise\n\t                        .done(function (result) {\n\t                            close();\n\t                        })\n\t                        .fail(function (err) {\n\t                            if (def.Action.failure_filter)\n\t                                err = def.Action.failure_filter(vals, err);\n\t                            if (err) {\n\t                                if (err.length)\n\t                                    err = err.map(error_field_to_target);\n\t                                else\n\t                                    err = error_field_to_target(err);\n\t                                $dialog.dialog('failure', err);\n\t                            }\n\t                        });\n\t                } else {\n\t                    close();\n\t                }\n\t            }\n\t        });\n\t\n\t        update_visibility();\n\t        $dialog.modal('show');\n\t    }\n\t\n\t    $(init_dialogs);\n\t\n\t    module.exports = { open: dialog_open };\n\t}());\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(6);\n\t    var cockpit = __webpack_require__(7);\n\t\n\t    var unique_number = 0;\n\t    function unique() {\n\t        unique_number += 1;\n\t        return \"unique\" + -(new Date()) + -unique_number;\n\t    }\n\t\n\t    /* Dialog Patterns */\n\t\n\t    function clear_errors(sel) {\n\t        sel.find(\".dialog-error\").remove();\n\t        sel.find(\".has-error\").removeClass(\"has-error\");\n\t        sel.find(\".dialog-wrapper\").off(\".dialog-error\");\n\t        sel.off(\".dialog-error\");\n\t    }\n\t\n\t    function field_error(target, error) {\n\t        var wrapper = target.parent();\n\t        var next, refresh;\n\t\n\t        if (!wrapper.is(\".dialog-wrapper\")) {\n\t            wrapper = $(\"<div class='dialog-wrapper'>\").insertBefore(target);\n\t\n\t            /*\n\t             * Some bootstrap plugins replace html controls with their own\n\t             * stuff, so we have to account for that here.\n\t             */\n\t\n\t            next = target.next();\n\t            if (next.is(\".bootstrap-select\") && next.selectpicker) {\n\t                next.remove();\n\t                refresh = next.selectpicker;\n\t            }\n\t\n\t            target.remove().appendTo(wrapper);\n\t\n\t            if (refresh)\n\t                refresh.call(target);\n\t        }\n\t\n\t        var message;\n\t        if (error.message)\n\t            message = $(\"<div class='dialog-error help-block'>\").text(error.message);\n\t        wrapper.addClass(\"has-error\").append(message);\n\t\n\t        if (!wrapper.hasClass(\"error-keep\")) {\n\t            wrapper.on(\"keypress.dialog-error change.dialog-error\", function() {\n\t                wrapper.removeClass(\"has-error\")\n\t                    .find(\".dialog-error.help-block\").css(\"visibility\", \"hidden\");\n\t            });\n\t        }\n\t    }\n\t\n\t    function global_error(sel, error) {\n\t        var alert = $(\"<div class='alert alert-danger dialog-error'>\");\n\t        var text = error.message || error.toString();\n\t        alert.text(text);\n\t        $(\"<span class='fa fa-exclamation-triangle'>\").prependTo(alert);\n\t\n\t        /* Always log global dialog errors for easier debugging */\n\t        console.warn(text);\n\t\n\t        var footer = sel.find(\".modal-footer\");\n\t        if (footer.length)\n\t            alert.prependTo(footer);\n\t        else\n\t            alert.appendTo(sel);\n\t    }\n\t\n\t    function display_errors(sel, errors) {\n\t        clear_errors(sel);\n\t\n\t        /* The list of errors can also be passed as an array */\n\t        if (errors.length == 1 && $.isArray(errors[0]))\n\t            errors = errors[0];\n\t\n\t        var any = false;\n\t        errors.forEach(function(error) {\n\t            var target;\n\t            if (error) {\n\t                target = sel.find(error.target);\n\t\n\t                /* Errors for a specific field added below that field */\n\t                if (target && target.length)\n\t                    field_error(target, error);\n\t                else\n\t                    global_error(sel, error);\n\t\n\t                any = true;\n\t            }\n\t        });\n\t\n\t        if (!any)\n\t            return;\n\t\n\t        /* When dialog is shown again, remove all mods */\n\t        sel.on(\"show.bs.modal.dialog-error\", function() {\n\t            clear_errors(sel);\n\t        });\n\t    }\n\t\n\t    function DialogWait(promise, handle) {\n\t        this.promise = promise;\n\t        this.disabled = [];\n\t        this.handle = handle;\n\t    }\n\t\n\t    function clear_wait(sel) {\n\t        var data = sel.data(\"dialog-wait\");\n\t        sel.data(\"dialog-wait\", null);\n\t\n\t        sel.find(\".dialog-wait-ct\").remove();\n\t        sel.find(\".btn\").off(\".dialog-wait\");\n\t        sel.off(\".dialog-wait\");\n\t\n\t        if (data) {\n\t            data.disabled.forEach(function(ctl) {\n\t                ctl.removeAttr(\"disabled\");\n\t            });\n\t        }\n\t    }\n\t\n\t    function display_wait(sel, promise, handle) {\n\t        clear_wait(sel);\n\t\n\t        if (!promise) {\n\t            if (handle)\n\t                sel.modal(\"hide\");\n\t            return sel;\n\t        }\n\t\n\t        /* Clear all errors in the dialog */\n\t        if (handle)\n\t            display_errors(sel, []);\n\t\n\t        var wait = $(\"<div class='dialog-wait-ct pull-left'>\");\n\t        $(\"<div class='spinner spinner-sm'>\").appendTo(wait);\n\t        var message = $(\"<span>\").appendTo(wait);\n\t\n\t        sel.find(\".modal-footer button\").first().before(wait);\n\t\n\t        var data = new DialogWait(promise, handle);\n\t        sel.data(\"dialog-wait\", data);\n\t\n\t        var cancellation = promise.cancel || promise.close;\n\t        var cancelled = false;\n\t\n\t        /* Disable everything and stash previous disabled state */\n\t        var controls = sel.find(\".form-control\").add(\".btn\", sel);\n\t        if (cancellation)\n\t            controls = controls.not(\"[data-dismiss]\").not(\".btn-cancel\");\n\t        controls.each(function() {\n\t            var ctl = $(this);\n\t            if (!ctl.attr(\"disabled\")) {\n\t                data.disabled.push(ctl);\n\t                ctl.attr(\"disabled\", \"disabled\");\n\t            }\n\t        });\n\t\n\t        sel.find(\".btn[data-dismiss], .btn-cancel\").on(\"click.dialog-wait\", function() {\n\t            cancelled = true;\n\t            if (cancellation)\n\t                cancellation.apply(promise);\n\t            return false;\n\t        });\n\t\n\t        /* When dialog is shown again, remove all mods */\n\t        sel.on(\"hide.bs.modal.dialog-wait\", function() {\n\t            clear_wait(sel);\n\t        });\n\t\n\t        /*\n\t         * There is no way to remove a callback from a promise\n\t         * so we have to be careful to only react if still\n\t         * processing the same promise.\n\t         */\n\t        function restore() {\n\t            var state, data = sel.data(\"dialog-wait\");\n\t            if (data && data.promise === promise) {\n\t                clear_wait(sel);\n\t                state = promise.state();\n\t                if (cancelled || (state == \"resolved\" && data.handle))\n\t                    sel.modal('hide');\n\t                else if (state == \"rejected\" && data.handle)\n\t                    display_errors(sel, [ arguments[0] ]);\n\t            }\n\t        }\n\t\n\t        function update(arg) {\n\t            var data = sel.data(\"dialog-wait\");\n\t            if (data && data.promise === promise) {\n\t                if (typeof arg !== \"string\")\n\t                    arg = \"\";\n\t                message.text(arg);\n\t            }\n\t        }\n\t\n\t        promise\n\t            .always(restore)\n\t            .progress(update);\n\t\n\t        return sel;\n\t    }\n\t\n\t    $.fn.dialog = function dialog(action /* ... */) {\n\t        if (action === \"failure\")\n\t            return display_errors(this, Array.prototype.slice.call(arguments, 1));\n\t        else if (action === \"wait\")\n\t            return display_wait(this, arguments[1]);\n\t        else if (action === \"promise\")\n\t            return display_wait(this, arguments[1], true);\n\t        else\n\t            console.warn(\"unknown dialog action: \" + action);\n\t    };\n\t\n\t    window.addEventListener(\"hashchange\", function() {\n\t        $(\".modal\").modal(\"hide\");\n\t    });\n\t\n\t    /*\n\t     * OnOff switch pattern\n\t     */\n\t\n\t    function onoff_refresh(sel) {\n\t        /* During testing, no Cockpit dependency */\n\t        var _ = cockpit.gettext || function(x) { return x; };\n\t\n\t        sel = sel.find(\".btn-onoff-ct\").andSelf().filter(\".btn-onoff-ct\");\n\t        sel.each(function(x, el) {\n\t            var self = $(el)\n\t                .attr(\"data-toggle\", \"buttons\")\n\t                .addClass(\"btn-group\");\n\t            var value = self.onoff(\"value\");\n\t            var buttons = self.find(\".btn\");\n\t            var name = self.find(\"input\").first().attr(\"name\") || unique();\n\t            var i, input, text;\n\t            for (i = buttons.length; i < 2; i++) {\n\t                input = $('<input type=\"radio\" autocomplete=\"off\">');\n\t                text = document.createTextNode(i === 0 ? _(\"On\") : _(\"Off\"));\n\t                self.append($('<label class=\"btn\">').append(input, text));\n\t                buttons = null;\n\t            }\n\t            buttons = buttons || self.find(\".btn\");\n\t            buttons.find(\"input\").attr(\"name\", name);\n\t            onoff_change(self, !!value);\n\t        });\n\t        return sel;\n\t    }\n\t\n\t    function onoff_value(sel) {\n\t        return sel.find(\".btn\").first().hasClass(\"active\");\n\t    }\n\t\n\t    function onoff_change(sel, value) {\n\t        return sel.each(function(i, el) {\n\t            var buttons = $(el).find(\".btn\");\n\t            buttons.first().toggleClass(\"active\", !!value).find(\"input\").prop(\"checked\", !!value);\n\t            buttons.last().toggleClass(\"active\", !value).find(\"input\").prop(\"checked\", !value);\n\t        });\n\t    }\n\t\n\t    $.fn.onoff = function onoff(action /* ... */) {\n\t        if (arguments.length === 0 || action == \"refresh\") {\n\t            return onoff_refresh(this);\n\t        } else if (action === \"value\") {\n\t            if (arguments.length === 1)\n\t                return onoff_value(this);\n\t            else\n\t                return onoff_change(this, arguments[1]);\n\t        } else if (action == \"disabled\") {\n\t            return this.find(\".btn\").toggleClass(\"disabled\", arguments[1]);\n\t        } else {\n\t            console.warn(\"unknown switch action: \" + action);\n\t        }\n\t    };\n\t\n\t    /* ----------------------------------------------------------------------------\n\t     * Sliders\n\t     *\n\t     * <div class=\"slider\" value=\"0.5\">\n\t     *    <div class=\"slider-bar\">\n\t     *        <div class=\"slider-thumb\"></div>\n\t     *    </div>\n\t     *    <div class=\"slider-bar\">\n\t     *        <!-- optional left overs -->\n\t     *    </div>\n\t     * </div>\n\t     *\n\t     * A slider control. The first div.slider-bar is the one that is resized.\n\t     * The value will be bounded between 0 and 1 as a floating point number.\n\t     *\n\t     * The following div.slider-bar if present is resized to fill the remainder\n\t     * of the slider if not given a specific size. You can put more div.slider-bar\n\t     * inside it to reflect squashing other prevous allocations.\n\t     *\n\t     * If the following div.slider-bar have a width specified, then the\n\t     * slider supports the concept of overflowing. If the slider overflows\n\t     * it will get the .slider-warning class and go a bit red.\n\t     *\n\t     * On document creation any div.slider are automatically turned into\n\t     * Bar graphs.\n\t     *\n\t     * Slider has the following extra read/write properties:\n\t     *\n\t     * .value: the floating point value the slider is set to.\n\t     * .disabled: whether to display slider as disabled and refuse interacton.\n\t     *\n\t     * Slider has this event:\n\t     *\n\t     * on('change'): fired when the slider changes, passes value as additional arg.\n\t     */\n\t\n\t    function resize_flex(slider, flex, total, part) {\n\t        var value = 0;\n\t        if (part > total)\n\t            value = 1;\n\t        else if (part < 0 || isNaN(part))\n\t            value = 0;\n\t        else if (!isNaN(total) && total > 0 && part >= 0)\n\t            value = (part / total);\n\t        $(flex).css('width', (value * 100) + \"%\").\n\t            next(\"div\").css('margin-left', $(flex).css('width'));\n\t\n\t        /* Set the property and the attribute */\n\t        slider.value = value;\n\t    }\n\t\n\t    function update_value(slider) {\n\t        resize_flex(slider, $(slider).children(\"div.slider-bar\").first()[0], 1, slider.value);\n\t    }\n\t\n\t    function check_overflow(slider) {\n\t        $(slider).toggleClass(\"slider-warning\",\n\t                              slider.offsetWidth < slider.scrollWidth);\n\t    }\n\t\n\t    function setup_slider(slider) {\n\t        $(slider).attr('unselectable', 'on');\n\t\n\t        Object.defineProperty(slider, \"value\", {\n\t            get: function() {\n\t                return parseFloat(this.getAttribute(\"value\"));\n\t            },\n\t            set: function(v) {\n\t                var s = String(v);\n\t                if (s != this.getAttribute(\"value\")) {\n\t                    this.setAttribute(\"value\", v);\n\t                    update_value(slider);\n\t                    check_overflow(slider);\n\t                }\n\t            }\n\t        });\n\t\n\t        Object.defineProperty(slider, \"disabled\", {\n\t            get: function() {\n\t                if (!this.hasAttribute(\"disabled\"))\n\t                    return false;\n\t                return this.getAttribute(\"disabled\").toLowerCase() != \"false\";\n\t            },\n\t            set: function(v) {\n\t                this.setAttribute(\"disabled\", v ? \"true\" : \"false\");\n\t            }\n\t        });\n\t\n\t        update_value(slider);\n\t        check_overflow(slider);\n\t\n\t        $(slider).on(\"change\", function() {\n\t            update_value(slider);\n\t            $(slider).toggleClass(\"slider-disabled\", slider.disabled);\n\t        });\n\t\n\t        if (slider.disabled)\n\t            $(slider).addClass(\"slider-disabled\");\n\t\n\t        $(slider).on(\"mousedown\", function(ev) {\n\t            if (slider.disabled)\n\t                return true; /* default action */\n\t            var flex;\n\t            var offset = $(slider).offset().left;\n\t            if ($(ev.target).hasClass(\"slider-thumb\")) {\n\t                var hitx  = (ev.offsetX || ev.clientX - $(ev.target).offset().left);\n\t                offset += (hitx - $(ev.target).outerWidth() / 2);\n\t                flex = $(ev.target).parent()[0];\n\t            } else {\n\t                flex = $(slider).children(\"div.slider-bar\").first()[0];\n\t                resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n\t                $(slider).trigger(\"change\", [slider.value]);\n\t                check_overflow(slider);\n\t            }\n\t\n\t            $(document).\n\t                on(\"mousemove.slider\", function(ev) {\n\t                    resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n\t                    $(slider).trigger(\"change\", [slider.value]);\n\t                    check_overflow(slider);\n\t                    return false;\n\t                }).\n\t                on(\"mouseup.slider\", function(ev) {\n\t                    $(document).\n\t                        off(\"mousemove.slider\").\n\t                        off(\"mouseup.slider\");\n\t                    return false;\n\t                });\n\t            return false; /* no default action */\n\t        });\n\t    }\n\t\n\t    function setup_sliders() {\n\t        $(\"div.slider\").each(function() {\n\t            setup_slider(this);\n\t        });\n\t    }\n\t\n\t    $.fn.slider = function Slider(action) {\n\t        var sel = this;\n\t        if (arguments.length === 0 || action == \"refresh\") {\n\t            sel.each(function() {\n\t                setup_slider(this);\n\t            });\n\t            return sel;\n\t        } else {\n\t            console.warn(\"unknown slider action: \" + action);\n\t        }\n\t    };\n\t\n\t    $(document).ready(setup_sliders);\n\t\n\t    /* -----------------------------------------------------------------------------\n\t     * Privileged UI actions.\n\t     */\n\t\n\t    // placement is optional, \"top\", \"left\", \"bottom\", \"right\"\n\t    $.fn.update_privileged = function update_privileged(perm, denied_message, placement) {\n\t        var allowed = (perm.allowed !== false);\n\t        var selector = this;\n\t\n\t        selector.each(function() {\n\t            // preserve old title first time to use when allowed\n\t            // activate tooltip\n\t            var allowed_key = 'allowed-title';\n\t            if (typeof $(this).data(allowed_key) === 'undefined' ||\n\t                   $(this).data(allowed_key) === false)\n\t                $(this).data(allowed_key, $(this).attr('title') || \"\");\n\t\n\t            var options = { html: true };\n\t            if (placement)\n\t                options['placement'] = placement;\n\t\n\t            $(this).tooltip(options);\n\t\n\t            if ($(this).hasClass(\"disabled\") === allowed) {\n\t              $(this).toggleClass(\"disabled\", !allowed)\n\t                   .attr('data-original-title', null);\n\t\n\t              if (allowed)\n\t                  $(this).attr('title', $(this).data(allowed_key));\n\t              else\n\t                  $(this).attr('title', denied_message);\n\t              $(this).tooltip('fixTitle');\n\t            }\n\t        });\n\t\n\t        return selector;\n\t    };\n\t}());\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 29 */,\n/* 30 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2015 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t(function() {\n\t    \"use strict\";\n\t\n\t    var $ = __webpack_require__(6);\n\t    var cockpit = __webpack_require__(7);\n\t\n\t    var _ = cockpit.gettext;\n\t\n\t    /* PERMISSIONS\n\t     */\n\t\n\t    function update_privileged_ui(perm, selector, denied_message) {\n\t        var allowed = (perm.allowed !== false);\n\t        $(selector).each(function() {\n\t            // preserve old title first time to use when allowed\n\t            // activate tooltip\n\t            var allowed_key = 'allowed-title';\n\t            if (typeof $(this).data(allowed_key) === 'undefined' ||\n\t                $(this).data(allowed_key) === false)\n\t                $(this).data(allowed_key, $(this).attr('title') || \"\");\n\t            $(this).tooltip({ html: true });\n\t\n\t            if ($(this).hasClass(\"disabled\") === allowed) {\n\t                $(this).toggleClass(\"disabled\", !allowed)\n\t                    .attr('data-original-title', null);\n\t\n\t                if (allowed)\n\t                    $(this).attr('title', $(this).data(allowed_key));\n\t                else\n\t                    $(this).attr('title', denied_message);\n\t                $(this).tooltip('fixTitle');\n\t            }\n\t        });\n\t    }\n\t\n\t    var permission = cockpit.permission({ admin: true });\n\t\n\t    function update_storage_privileged() {\n\t        update_privileged_ui(permission, \".storage-privileged\",\n\t                             cockpit.format(\n\t                                 _(\"The user <b>$0</b> is not permitted to manage storage\"),\n\t                                 permission.user ? permission.user.name : ''));\n\t    }\n\t\n\t    $(permission).on(\"changed\", update_storage_privileged);\n\t\n\t    module.exports = {\n\t        permission: permission,\n\t        update: update_storage_privileged\n\t    };\n\t\n\t}());\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.StdDetailsLayout = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\texports.init = init;\n\t\n\tvar _cockpit = __webpack_require__(7);\n\t\n\tvar _cockpit2 = _interopRequireDefault(_cockpit);\n\t\n\tvar _react = __webpack_require__(32);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _utils = __webpack_require__(9);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _blockDetails = __webpack_require__(33);\n\t\n\tvar _driveDetails = __webpack_require__(50);\n\t\n\tvar _vgroupDetails = __webpack_require__(51);\n\t\n\tvar _mdraidDetails = __webpack_require__(52);\n\t\n\tvar _jobViews = __webpack_require__(53);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file is part of Cockpit.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (C) 2017 Red Hat, Inc.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Cockpit is free software; you can redistribute it and/or modify it\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the terms of the GNU Lesser General Public License as published by\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Free Software Foundation; either version 2.1 of the License, or\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * (at your option) any later version.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Cockpit is distributed in the hope that it will be useful, but\n\twithout even the implied warranty of\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Lesser General Public License for more details.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You should have received a copy of the GNU Lesser General Public License\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar _ = _cockpit2.default.gettext;\n\t\n\tvar StdDetailsLayout = exports.StdDetailsLayout = function (_React$Component) {\n\t    _inherits(StdDetailsLayout, _React$Component);\n\t\n\t    function StdDetailsLayout() {\n\t        _classCallCheck(this, StdDetailsLayout);\n\t\n\t        return _possibleConstructorReturn(this, (StdDetailsLayout.__proto__ || Object.getPrototypeOf(StdDetailsLayout)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(StdDetailsLayout, [{\n\t        key: \"render\",\n\t        value: function render() {\n\t            if (this.props.sidebar) {\n\t                return _react2.default.createElement(\n\t                    \"div\",\n\t                    null,\n\t                    _react2.default.createElement(\n\t                        \"div\",\n\t                        { id: \"detail-header\", className: \"col-md-12\" },\n\t                        this.props.alert,\n\t                        this.props.header\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        \"div\",\n\t                        { id: \"detail-sidebar\", className: \"col-md-4 col-lg-3 col-md-push-8 col-lg-push-9\" },\n\t                        this.props.sidebar\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        \"div\",\n\t                        { className: \"col-md-8 col-lg-9 col-md-pull-4 col-lg-pull-3\" },\n\t                        _react2.default.createElement(\n\t                            \"div\",\n\t                            { id: \"detail-content\" },\n\t                            this.props.content\n\t                        ),\n\t                        _react2.default.createElement(_jobViews.Jobs, { jobs: this.props.jobs })\n\t                    )\n\t                );\n\t            } else {\n\t                return _react2.default.createElement(\n\t                    \"div\",\n\t                    null,\n\t                    _react2.default.createElement(\n\t                        \"div\",\n\t                        { id: \"detail-header\", className: \"col-md-12\" },\n\t                        this.props.alert,\n\t                        this.props.header\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        \"div\",\n\t                        { className: \"col-md-12\" },\n\t                        _react2.default.createElement(\n\t                            \"div\",\n\t                            { id: \"detail-content\" },\n\t                            this.props.content\n\t                        ),\n\t                        _react2.default.createElement(_jobViews.Jobs, { jobs: this.props.jobs })\n\t                    )\n\t                );\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return StdDetailsLayout;\n\t}(_react2.default.Component);\n\t\n\tvar Details = function (_React$Component2) {\n\t    _inherits(Details, _React$Component2);\n\t\n\t    function Details() {\n\t        _classCallCheck(this, Details);\n\t\n\t        var _this2 = _possibleConstructorReturn(this, (Details.__proto__ || Object.getPrototypeOf(Details)).call(this));\n\t\n\t        _this2.on_client_changed = function () {\n\t            _this2.setState({});\n\t        };\n\t        return _this2;\n\t    }\n\t\n\t    _createClass(Details, [{\n\t        key: \"componentDidMount\",\n\t        value: function componentDidMount() {\n\t            this.props.client.addEventListener(\"changed\", this.on_client_changed);\n\t        }\n\t    }, {\n\t        key: \"componentWillUnmount\",\n\t        value: function componentWillUnmount() {\n\t            this.props.client.removeEventListener(\"changed\", this.on_client_changed);\n\t        }\n\t    }, {\n\t        key: \"render\",\n\t        value: function render() {\n\t            var client = this.props.client;\n\t            var jobs = this.props.jobs;\n\t\n\t            function go_up(event) {\n\t                if (!event || event.button !== 0) return;\n\t                _cockpit2.default.location.go(\"/\");\n\t            }\n\t\n\t            var body = null;\n\t            var name = this.props.name;\n\t            if (this.props.type == \"block\") {\n\t                var block = client.slashdevs_block[this.props.name];\n\t                var drive = block && client.drives[block.Drive];\n\t\n\t                if (drive) {\n\t                    name = _utils2.default.drive_name(drive);\n\t                    body = _react2.default.createElement(_driveDetails.DriveDetails, { client: client, jobs: jobs, drive: drive });\n\t                } else if (block) {\n\t                    name = _utils2.default.block_name(block);\n\t                    body = _react2.default.createElement(_blockDetails.BlockDetails, { client: client, jobs: jobs, block: block });\n\t                }\n\t            } else if (this.props.type == \"vgroup\") {\n\t                var vgroup = client.vgnames_vgroup[this.props.name];\n\t                if (vgroup) {\n\t                    name = vgroup.Name;\n\t                    body = _react2.default.createElement(_vgroupDetails.VGroupDetails, { client: client, jobs: jobs, vgroup: vgroup });\n\t                }\n\t            } else if (this.props.type == \"mdraid\") {\n\t                var mdraid = client.uuids_mdraid[this.props.name];\n\t                if (mdraid) {\n\t                    name = _utils2.default.mdraid_name(mdraid);\n\t                    body = _react2.default.createElement(_mdraidDetails.MDRaidDetails, { client: client, jobs: jobs, mdraid: mdraid });\n\t                }\n\t            }\n\t\n\t            if (!body) body = _react2.default.createElement(\n\t                \"div\",\n\t                { className: \"col-md-12\" },\n\t                _(\"Not found\")\n\t            );\n\t\n\t            return _react2.default.createElement(\n\t                \"div\",\n\t                null,\n\t                _react2.default.createElement(\n\t                    \"div\",\n\t                    { className: \"col-md-12\" },\n\t                    _react2.default.createElement(\n\t                        \"ol\",\n\t                        { className: \"breadcrumb\" },\n\t                        _react2.default.createElement(\n\t                            \"li\",\n\t                            null,\n\t                            _react2.default.createElement(\n\t                                \"a\",\n\t                                { onClick: go_up },\n\t                                _(\"Storage\")\n\t                            )\n\t                        ),\n\t                        _react2.default.createElement(\n\t                            \"li\",\n\t                            { className: \"active\" },\n\t                            name\n\t                        )\n\t                    )\n\t                ),\n\t                body\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return Details;\n\t}(_react2.default.Component);\n\t\n\tfunction init(client, jobs) {\n\t    var page = document.getElementById(\"storage-detail\");\n\t\n\t    function show(type, name) {\n\t        _react2.default.render(_react2.default.createElement(Details, { client: client, jobs: jobs, type: type, name: name }), page);\n\t        page.style.display = \"block\";\n\t    }\n\t\n\t    function hide() {\n\t        page.style.display = \"none\";\n\t        _react2.default.unmountComponentAtNode(page);\n\t    }\n\t\n\t    return { show: show, hide: hide };\n\t}\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * react-lite.js v0.15.39\n\t * (c) 2017 Jade Gu\n\t * Released under the MIT License.\n\t */\n\t(function (global, factory) {\n\t   true ? module.exports = factory() :\n\t  typeof define === 'function' && define.amd ? define(factory) :\n\t  global.React = factory();\n\t}(this, function () { 'use strict';\n\t\n\t  var HTML_KEY = 'dangerouslySetInnerHTML';\n\t  var SVGNamespaceURI = 'http://www.w3.org/2000/svg';\n\t  var COMPONENT_ID = 'liteid';\n\t  var VELEMENT = 2;\n\t  var VSTATELESS = 3;\n\t  var VCOMPONENT = 4;\n\t  var VCOMMENT = 5;\n\t  var ELEMENT_NODE_TYPE = 1;\n\t  var DOC_NODE_TYPE = 9;\n\t  var DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\t\n\t  /**\r\n\t   * current stateful component's refs property\r\n\t   * will attach to every vnode created by calling component.render method\r\n\t   */\n\t  var refs = null;\n\t\n\t  function createVnode(vtype, type, props, key, ref) {\n\t      var vnode = {\n\t          vtype: vtype,\n\t          type: type,\n\t          props: props,\n\t          refs: refs,\n\t          key: key,\n\t          ref: ref\n\t      };\n\t      if (vtype === VSTATELESS || vtype === VCOMPONENT) {\n\t          vnode.uid = getUid();\n\t      }\n\t      return vnode;\n\t  }\n\t\n\t  function initVnode(vnode, parentContext, namespaceURI) {\n\t      var vtype = vnode.vtype;\n\t\n\t      var node = null;\n\t      if (!vtype) {\n\t          // init text\n\t          node = document.createTextNode(vnode);\n\t      } else if (vtype === VELEMENT) {\n\t          // init element\n\t          node = initVelem(vnode, parentContext, namespaceURI);\n\t      } else if (vtype === VCOMPONENT) {\n\t          // init stateful component\n\t          node = initVcomponent(vnode, parentContext, namespaceURI);\n\t      } else if (vtype === VSTATELESS) {\n\t          // init stateless component\n\t          node = initVstateless(vnode, parentContext, namespaceURI);\n\t      } else if (vtype === VCOMMENT) {\n\t          // init comment\n\t          node = document.createComment('react-text: ' + (vnode.uid || getUid()));\n\t      }\n\t      return node;\n\t  }\n\t\n\t  function updateVnode(vnode, newVnode, node, parentContext) {\n\t      var vtype = vnode.vtype;\n\t\n\t      if (vtype === VCOMPONENT) {\n\t          return updateVcomponent(vnode, newVnode, node, parentContext);\n\t      }\n\t\n\t      if (vtype === VSTATELESS) {\n\t          return updateVstateless(vnode, newVnode, node, parentContext);\n\t      }\n\t\n\t      // ignore VCOMMENT and other vtypes\n\t      if (vtype !== VELEMENT) {\n\t          return node;\n\t      }\n\t\n\t      var oldHtml = vnode.props[HTML_KEY] && vnode.props[HTML_KEY].__html;\n\t      if (oldHtml != null) {\n\t          updateVelem(vnode, newVnode, node, parentContext);\n\t          initVchildren(newVnode, node, parentContext);\n\t      } else {\n\t          updateVChildren(vnode, newVnode, node, parentContext);\n\t          updateVelem(vnode, newVnode, node, parentContext);\n\t      }\n\t      return node;\n\t  }\n\t\n\t  function updateVChildren(vnode, newVnode, node, parentContext) {\n\t      var patches = {\n\t          removes: [],\n\t          updates: [],\n\t          creates: []\n\t      };\n\t      diffVchildren(patches, vnode, newVnode, node, parentContext);\n\t      flatEach(patches.removes, applyDestroy);\n\t      flatEach(patches.updates, applyUpdate);\n\t      flatEach(patches.creates, applyCreate);\n\t  }\n\t\n\t  function applyUpdate(data) {\n\t      if (!data) {\n\t          return;\n\t      }\n\t      var vnode = data.vnode;\n\t      var newNode = data.node;\n\t\n\t      // update\n\t      if (!data.shouldIgnore) {\n\t          if (!vnode.vtype) {\n\t              newNode.replaceData(0, newNode.length, data.newVnode);\n\t          } else if (vnode.vtype === VELEMENT) {\n\t              updateVelem(vnode, data.newVnode, newNode, data.parentContext);\n\t          } else if (vnode.vtype === VSTATELESS) {\n\t              newNode = updateVstateless(vnode, data.newVnode, newNode, data.parentContext);\n\t          } else if (vnode.vtype === VCOMPONENT) {\n\t              newNode = updateVcomponent(vnode, data.newVnode, newNode, data.parentContext);\n\t          }\n\t      }\n\t\n\t      // re-order\n\t      var currentNode = newNode.parentNode.childNodes[data.index];\n\t      if (currentNode !== newNode) {\n\t          newNode.parentNode.insertBefore(newNode, currentNode);\n\t      }\n\t      return newNode;\n\t  }\n\t\n\t  function applyDestroy(data) {\n\t      destroyVnode(data.vnode, data.node);\n\t      data.node.parentNode.removeChild(data.node);\n\t  }\n\t\n\t  function applyCreate(data) {\n\t      var node = initVnode(data.vnode, data.parentContext, data.parentNode.namespaceURI);\n\t      data.parentNode.insertBefore(node, data.parentNode.childNodes[data.index]);\n\t  }\n\t\n\t  /**\r\n\t   * Only vnode which has props.children need to call destroy function\r\n\t   * to check whether subTree has component that need to call lify-cycle method and release cache.\r\n\t   */\n\t\n\t  function destroyVnode(vnode, node) {\n\t      var vtype = vnode.vtype;\n\t\n\t      if (vtype === VELEMENT) {\n\t          // destroy element\n\t          destroyVelem(vnode, node);\n\t      } else if (vtype === VCOMPONENT) {\n\t          // destroy state component\n\t          destroyVcomponent(vnode, node);\n\t      } else if (vtype === VSTATELESS) {\n\t          // destroy stateless component\n\t          destroyVstateless(vnode, node);\n\t      }\n\t  }\n\t\n\t  function initVelem(velem, parentContext, namespaceURI) {\n\t      var type = velem.type;\n\t      var props = velem.props;\n\t\n\t      var node = null;\n\t\n\t      if (type === 'svg' || namespaceURI === SVGNamespaceURI) {\n\t          node = document.createElementNS(SVGNamespaceURI, type);\n\t          namespaceURI = SVGNamespaceURI;\n\t      } else {\n\t          node = document.createElement(type);\n\t      }\n\t\n\t      initVchildren(velem, node, parentContext);\n\t\n\t      var isCustomComponent = type.indexOf('-') >= 0 || props.is != null;\n\t      setProps(node, props, isCustomComponent);\n\t\n\t      if (velem.ref != null) {\n\t          addItem(pendingRefs, velem);\n\t          addItem(pendingRefs, node);\n\t      }\n\t\n\t      return node;\n\t  }\n\t\n\t  function initVchildren(velem, node, parentContext) {\n\t      var vchildren = node.vchildren = getFlattenChildren(velem);\n\t      var namespaceURI = node.namespaceURI;\n\t      for (var i = 0, len = vchildren.length; i < len; i++) {\n\t          node.appendChild(initVnode(vchildren[i], parentContext, namespaceURI));\n\t      }\n\t  }\n\t\n\t  function getFlattenChildren(vnode) {\n\t      var children = vnode.props.children;\n\t\n\t      var vchildren = [];\n\t      if (isArr(children)) {\n\t          flatEach(children, collectChild, vchildren);\n\t      } else {\n\t          collectChild(children, vchildren);\n\t      }\n\t      return vchildren;\n\t  }\n\t\n\t  function collectChild(child, children) {\n\t      if (child != null && typeof child !== 'boolean') {\n\t          if (!child.vtype) {\n\t              // convert immutablejs data\n\t              if (child.toJS) {\n\t                  child = child.toJS();\n\t                  if (isArr(child)) {\n\t                      flatEach(child, collectChild, children);\n\t                  } else {\n\t                      collectChild(child, children);\n\t                  }\n\t                  return;\n\t              }\n\t              child = '' + child;\n\t          }\n\t          children[children.length] = child;\n\t      }\n\t  }\n\t\n\t  function diffVchildren(patches, vnode, newVnode, node, parentContext) {\n\t      if (!node.vchildren) return; // react-lite hasn't seen this DOM node before\n\t\n\t      var childNodes = node.childNodes;\n\t      var vchildren = node.vchildren;\n\t\n\t      var newVchildren = node.vchildren = getFlattenChildren(newVnode);\n\t      var vchildrenLen = vchildren.length;\n\t      var newVchildrenLen = newVchildren.length;\n\t\n\t      if (vchildrenLen === 0) {\n\t          if (newVchildrenLen > 0) {\n\t              for (var i = 0; i < newVchildrenLen; i++) {\n\t                  addItem(patches.creates, {\n\t                      vnode: newVchildren[i],\n\t                      parentNode: node,\n\t                      parentContext: parentContext,\n\t                      index: i\n\t                  });\n\t              }\n\t          }\n\t          return;\n\t      } else if (newVchildrenLen === 0) {\n\t          for (var i = 0; i < vchildrenLen; i++) {\n\t              addItem(patches.removes, {\n\t                  vnode: vchildren[i],\n\t                  node: childNodes[i]\n\t              });\n\t          }\n\t          return;\n\t      }\n\t\n\t      var updates = Array(newVchildrenLen);\n\t      var removes = null;\n\t      var creates = null;\n\t\n\t      // isEqual\n\t      for (var i = 0; i < vchildrenLen; i++) {\n\t          var _vnode = vchildren[i];\n\t          for (var j = 0; j < newVchildrenLen; j++) {\n\t              if (updates[j]) {\n\t                  continue;\n\t              }\n\t              var _newVnode = newVchildren[j];\n\t              if (_vnode === _newVnode) {\n\t                  updates[j] = {\n\t                      shouldIgnore: shouldIgnoreUpdate(node),\n\t                      vnode: _vnode,\n\t                      newVnode: _newVnode,\n\t                      node: childNodes[i],\n\t                      parentContext: parentContext,\n\t                      index: j\n\t                  };\n\t                  vchildren[i] = null;\n\t                  break;\n\t              }\n\t          }\n\t      }\n\t\n\t      // isSimilar\n\t      for (var i = 0; i < vchildrenLen; i++) {\n\t          var _vnode2 = vchildren[i];\n\t          if (_vnode2 === null) {\n\t              continue;\n\t          }\n\t          var shouldRemove = true;\n\t          for (var j = 0; j < newVchildrenLen; j++) {\n\t              if (updates[j]) {\n\t                  continue;\n\t              }\n\t              var _newVnode2 = newVchildren[j];\n\t              if (_newVnode2.type === _vnode2.type && _newVnode2.key === _vnode2.key && _newVnode2.refs === _vnode2.refs) {\n\t                  updates[j] = {\n\t                      vnode: _vnode2,\n\t                      newVnode: _newVnode2,\n\t                      node: childNodes[i],\n\t                      parentContext: parentContext,\n\t                      index: j\n\t                  };\n\t                  shouldRemove = false;\n\t                  break;\n\t              }\n\t          }\n\t          if (shouldRemove) {\n\t              if (!removes) {\n\t                  removes = [];\n\t              }\n\t              addItem(removes, {\n\t                  vnode: _vnode2,\n\t                  node: childNodes[i]\n\t              });\n\t          }\n\t      }\n\t\n\t      for (var i = 0; i < newVchildrenLen; i++) {\n\t          var item = updates[i];\n\t          if (!item) {\n\t              if (!creates) {\n\t                  creates = [];\n\t              }\n\t              addItem(creates, {\n\t                  vnode: newVchildren[i],\n\t                  parentNode: node,\n\t                  parentContext: parentContext,\n\t                  index: i\n\t              });\n\t          } else if (item.vnode.vtype === VELEMENT) {\n\t              diffVchildren(patches, item.vnode, item.newVnode, item.node, item.parentContext);\n\t          }\n\t      }\n\t\n\t      if (removes) {\n\t          addItem(patches.removes, removes);\n\t      }\n\t      if (creates) {\n\t          addItem(patches.creates, creates);\n\t      }\n\t      addItem(patches.updates, updates);\n\t  }\n\t\n\t  function updateVelem(velem, newVelem, node) {\n\t      var isCustomComponent = velem.type.indexOf('-') >= 0 || velem.props.is != null;\n\t      patchProps(node, velem.props, newVelem.props, isCustomComponent);\n\t      if (velem.ref !== newVelem.ref) {\n\t          detachRef(velem.refs, velem.ref, node);\n\t          attachRef(newVelem.refs, newVelem.ref, node);\n\t      }\n\t      return node;\n\t  }\n\t\n\t  function destroyVelem(velem, node) {\n\t      var props = velem.props;\n\t      var vchildren = node.vchildren;\n\t      var childNodes = node.childNodes;\n\t\n\t      if (vchildren) {\n\t          for (var i = 0, len = vchildren.length; i < len; i++) {\n\t              destroyVnode(vchildren[i], childNodes[i]);\n\t          }\n\t      }\n\t      detachRef(velem.refs, velem.ref, node);\n\t      node.eventStore = node.vchildren = null;\n\t  }\n\t\n\t  function initVstateless(vstateless, parentContext, namespaceURI) {\n\t      var vnode = renderVstateless(vstateless, parentContext);\n\t      var node = initVnode(vnode, parentContext, namespaceURI);\n\t      node.cache = node.cache || {};\n\t      node.cache[vstateless.uid] = vnode;\n\t      return node;\n\t  }\n\t\n\t  function updateVstateless(vstateless, newVstateless, node, parentContext) {\n\t      var uid = vstateless.uid;\n\t      var vnode = node.cache[uid];\n\t      delete node.cache[uid];\n\t      var newVnode = renderVstateless(newVstateless, parentContext);\n\t      var newNode = compareTwoVnodes(vnode, newVnode, node, parentContext);\n\t      newNode.cache = newNode.cache || {};\n\t      newNode.cache[newVstateless.uid] = newVnode;\n\t      if (newNode !== node) {\n\t          syncCache(newNode.cache, node.cache, newNode);\n\t      }\n\t      return newNode;\n\t  }\n\t\n\t  function destroyVstateless(vstateless, node) {\n\t      var uid = vstateless.uid;\n\t      var vnode = node.cache[uid];\n\t      delete node.cache[uid];\n\t      destroyVnode(vnode, node);\n\t  }\n\t\n\t  function renderVstateless(vstateless, parentContext) {\n\t      var factory = vstateless.type;\n\t      var props = vstateless.props;\n\t\n\t      var componentContext = getContextByTypes(parentContext, factory.contextTypes);\n\t      var vnode = factory(props, componentContext);\n\t      if (vnode && vnode.render) {\n\t          vnode = vnode.render();\n\t      }\n\t      if (vnode === null || vnode === false) {\n\t          vnode = createVnode(VCOMMENT);\n\t      } else if (!vnode || !vnode.vtype) {\n\t          throw new Error('@' + factory.name + '#render:You may have returned undefined, an array or some other invalid object');\n\t      }\n\t      return vnode;\n\t  }\n\t\n\t  function initVcomponent(vcomponent, parentContext, namespaceURI) {\n\t      var Component = vcomponent.type;\n\t      var props = vcomponent.props;\n\t      var uid = vcomponent.uid;\n\t\n\t      var componentContext = getContextByTypes(parentContext, Component.contextTypes);\n\t      var component = new Component(props, componentContext);\n\t      var updater = component.$updater;\n\t      var cache = component.$cache;\n\t\n\t      cache.parentContext = parentContext;\n\t      updater.isPending = true;\n\t      component.props = component.props || props;\n\t      component.context = component.context || componentContext;\n\t      if (component.componentWillMount) {\n\t          component.componentWillMount();\n\t          component.state = updater.getState();\n\t      }\n\t      var vnode = renderComponent(component);\n\t      var node = initVnode(vnode, getChildContext(component, parentContext), namespaceURI);\n\t      node.cache = node.cache || {};\n\t      node.cache[uid] = component;\n\t      cache.vnode = vnode;\n\t      cache.node = node;\n\t      cache.isMounted = true;\n\t      addItem(pendingComponents, component);\n\t\n\t      if (vcomponent.ref != null) {\n\t          addItem(pendingRefs, vcomponent);\n\t          addItem(pendingRefs, component);\n\t      }\n\t\n\t      return node;\n\t  }\n\t\n\t  function updateVcomponent(vcomponent, newVcomponent, node, parentContext) {\n\t      var uid = vcomponent.uid;\n\t      var component = node.cache[uid];\n\t      var updater = component.$updater;\n\t      var cache = component.$cache;\n\t      var Component = newVcomponent.type;\n\t      var nextProps = newVcomponent.props;\n\t\n\t      var componentContext = getContextByTypes(parentContext, Component.contextTypes);\n\t      delete node.cache[uid];\n\t      node.cache[newVcomponent.uid] = component;\n\t      cache.parentContext = parentContext;\n\t      if (component.componentWillReceiveProps) {\n\t          var needToggleIsPending = !updater.isPending;\n\t          if (needToggleIsPending) updater.isPending = true;\n\t          component.componentWillReceiveProps(nextProps, componentContext);\n\t          if (needToggleIsPending) updater.isPending = false;\n\t      }\n\t\n\t      if (vcomponent.ref !== newVcomponent.ref) {\n\t          detachRef(vcomponent.refs, vcomponent.ref, component);\n\t          attachRef(newVcomponent.refs, newVcomponent.ref, component);\n\t      }\n\t\n\t      updater.emitUpdate(nextProps, componentContext);\n\t\n\t      return cache.node;\n\t  }\n\t\n\t  function destroyVcomponent(vcomponent, node) {\n\t      var uid = vcomponent.uid;\n\t      var component = node.cache[uid];\n\t      var cache = component.$cache;\n\t      delete node.cache[uid];\n\t      detachRef(vcomponent.refs, vcomponent.ref, component);\n\t      component.setState = component.forceUpdate = noop;\n\t      if (component.componentWillUnmount) {\n\t          component.componentWillUnmount();\n\t      }\n\t      destroyVnode(cache.vnode, node);\n\t      delete component.setState;\n\t      cache.isMounted = false;\n\t      cache.node = cache.parentContext = cache.vnode = component.refs = component.context = null;\n\t  }\n\t\n\t  function getContextByTypes(curContext, contextTypes) {\n\t      var context = {};\n\t      if (!contextTypes || !curContext) {\n\t          return context;\n\t      }\n\t      for (var key in contextTypes) {\n\t          if (contextTypes.hasOwnProperty(key)) {\n\t              context[key] = curContext[key];\n\t          }\n\t      }\n\t      return context;\n\t  }\n\t\n\t  function renderComponent(component, parentContext) {\n\t      refs = component.refs;\n\t      var vnode = component.render();\n\t      if (vnode === null || vnode === false) {\n\t          vnode = createVnode(VCOMMENT);\n\t      } else if (!vnode || !vnode.vtype) {\n\t          throw new Error('@' + component.constructor.name + '#render:You may have returned undefined, an array or some other invalid object');\n\t      }\n\t      refs = null;\n\t      return vnode;\n\t  }\n\t\n\t  function getChildContext(component, parentContext) {\n\t      if (component.getChildContext) {\n\t          var curContext = component.getChildContext();\n\t          if (curContext) {\n\t              parentContext = extend(extend({}, parentContext), curContext);\n\t          }\n\t      }\n\t      return parentContext;\n\t  }\n\t\n\t  var pendingComponents = [];\n\t  function clearPendingComponents() {\n\t      var len = pendingComponents.length;\n\t      if (!len) {\n\t          return;\n\t      }\n\t      var components = pendingComponents;\n\t      pendingComponents = [];\n\t      var i = -1;\n\t      while (len--) {\n\t          var component = components[++i];\n\t          var updater = component.$updater;\n\t          if (component.componentDidMount) {\n\t              component.componentDidMount();\n\t          }\n\t          updater.isPending = false;\n\t          updater.emitUpdate();\n\t      }\n\t  }\n\t\n\t  var pendingRefs = [];\n\t  function clearPendingRefs() {\n\t      var len = pendingRefs.length;\n\t      if (!len) {\n\t          return;\n\t      }\n\t      var list = pendingRefs;\n\t      pendingRefs = [];\n\t      for (var i = 0; i < len; i += 2) {\n\t          var vnode = list[i];\n\t          var refValue = list[i + 1];\n\t          attachRef(vnode.refs, vnode.ref, refValue);\n\t      }\n\t  }\n\t\n\t  function clearPending() {\n\t      clearPendingRefs();\n\t      clearPendingComponents();\n\t  }\n\t\n\t  function compareTwoVnodes(vnode, newVnode, node, parentContext) {\n\t      var newNode = node;\n\t      if (newVnode == null) {\n\t          // remove\n\t          destroyVnode(vnode, node);\n\t          node.parentNode.removeChild(node);\n\t      } else if (vnode.type !== newVnode.type || vnode.key !== newVnode.key) {\n\t          // replace\n\t          destroyVnode(vnode, node);\n\t          newNode = initVnode(newVnode, parentContext, node.namespaceURI);\n\t          node.parentNode.replaceChild(newNode, node);\n\t      } else if (vnode !== newVnode || parentContext) {\n\t          // same type and same key -> update\n\t          newNode = updateVnode(vnode, newVnode, node, parentContext);\n\t      }\n\t      return newNode;\n\t  }\n\t\n\t  function getDOMNode() {\n\t      return this;\n\t  }\n\t\n\t  function attachRef(refs, refKey, refValue) {\n\t      if (refKey == null || !refValue) {\n\t          return;\n\t      }\n\t      if (refValue.nodeName && !refValue.getDOMNode) {\n\t          // support react v0.13 style: this.refs.myInput.getDOMNode()\n\t          refValue.getDOMNode = getDOMNode;\n\t      }\n\t      if (isFn(refKey)) {\n\t          refKey(refValue);\n\t      } else if (refs) {\n\t          refs[refKey] = refValue;\n\t      }\n\t  }\n\t\n\t  function detachRef(refs, refKey, refValue) {\n\t      if (refKey == null) {\n\t          return;\n\t      }\n\t      if (isFn(refKey)) {\n\t          refKey(null);\n\t      } else if (refs && refs[refKey] === refValue) {\n\t          delete refs[refKey];\n\t      }\n\t  }\n\t\n\t  function syncCache(cache, oldCache, node) {\n\t      for (var key in oldCache) {\n\t          if (!oldCache.hasOwnProperty(key)) {\n\t              continue;\n\t          }\n\t          var value = oldCache[key];\n\t          cache[key] = value;\n\t\n\t          // is component, update component.$cache.node\n\t          if (value.forceUpdate) {\n\t              value.$cache.node = node;\n\t          }\n\t      }\n\t  }\n\t\n\t  function shouldIgnoreUpdate(node) {\n\t      var vchildren = node.vchildren;\n\t      var children = node.children;\n\t\n\t      if (vchildren) {\n\t          for (var i = 0; i < vchildren.length; i++) {\n\t              var vchild = vchildren[i];\n\t              if (vchild.vtype === VCOMPONENT || vchild.vtype === VSTATELESS) {\n\t                  if (vchild.type.contextTypes) {\n\t                      return false;\n\t                  }\n\t              }\n\t          }\n\t      }\n\t\n\t      if (children) {\n\t          for (var i = 0; i < children.length; i++) {\n\t              if (!shouldIgnoreUpdate(children[i])) {\n\t                  return false;\n\t              }\n\t          }\n\t      }\n\t\n\t      return true;\n\t  }\n\t\n\t  var updateQueue = {\n\t  \tupdaters: [],\n\t  \tisPending: false,\n\t  \tadd: function add(updater) {\n\t  \t\taddItem(this.updaters, updater);\n\t  \t},\n\t  \tbatchUpdate: function batchUpdate() {\n\t  \t\tif (this.isPending) {\n\t  \t\t\treturn;\n\t  \t\t}\n\t  \t\tthis.isPending = true;\n\t  \t\t/*\r\n\t     each updater.update may add new updater to updateQueue\r\n\t     clear them with a loop\r\n\t     event bubbles from bottom-level to top-level\r\n\t     reverse the updater order can merge some props and state and reduce the refresh times\r\n\t     see Updater.update method below to know why\r\n\t    */\n\t  \t\tvar updaters = this.updaters;\n\t\n\t  \t\tvar updater = undefined;\n\t  \t\twhile (updater = updaters.pop()) {\n\t  \t\t\tupdater.updateComponent();\n\t  \t\t}\n\t  \t\tthis.isPending = false;\n\t  \t}\n\t  };\n\t\n\t  function Updater(instance) {\n\t  \tthis.instance = instance;\n\t  \tthis.pendingStates = [];\n\t  \tthis.pendingCallbacks = [];\n\t  \tthis.isPending = false;\n\t  \tthis.nextProps = this.nextContext = null;\n\t  \tthis.clearCallbacks = this.clearCallbacks.bind(this);\n\t  }\n\t\n\t  Updater.prototype = {\n\t  \temitUpdate: function emitUpdate(nextProps, nextContext) {\n\t  \t\tthis.nextProps = nextProps;\n\t  \t\tthis.nextContext = nextContext;\n\t  \t\t// receive nextProps!! should update immediately\n\t  \t\tnextProps || !updateQueue.isPending ? this.updateComponent() : updateQueue.add(this);\n\t  \t},\n\t  \tupdateComponent: function updateComponent() {\n\t  \t\tvar instance = this.instance;\n\t  \t\tvar pendingStates = this.pendingStates;\n\t  \t\tvar nextProps = this.nextProps;\n\t  \t\tvar nextContext = this.nextContext;\n\t\n\t  \t\tif (nextProps || pendingStates.length > 0) {\n\t  \t\t\tnextProps = nextProps || instance.props;\n\t  \t\t\tnextContext = nextContext || instance.context;\n\t  \t\t\tthis.nextProps = this.nextContext = null;\n\t  \t\t\t// merge the nextProps and nextState and update by one time\n\t  \t\t\tshouldUpdate(instance, nextProps, this.getState(), nextContext, this.clearCallbacks);\n\t  \t\t}\n\t  \t},\n\t  \taddState: function addState(nextState) {\n\t  \t\tif (nextState) {\n\t  \t\t\taddItem(this.pendingStates, nextState);\n\t  \t\t\tif (!this.isPending) {\n\t  \t\t\t\tthis.emitUpdate();\n\t  \t\t\t}\n\t  \t\t}\n\t  \t},\n\t  \treplaceState: function replaceState(nextState) {\n\t  \t\tvar pendingStates = this.pendingStates;\n\t\n\t  \t\tpendingStates.pop();\n\t  \t\t// push special params to point out should replace state\n\t  \t\taddItem(pendingStates, [nextState]);\n\t  \t},\n\t  \tgetState: function getState() {\n\t  \t\tvar instance = this.instance;\n\t  \t\tvar pendingStates = this.pendingStates;\n\t  \t\tvar state = instance.state;\n\t  \t\tvar props = instance.props;\n\t\n\t  \t\tif (pendingStates.length) {\n\t  \t\t\tstate = extend({}, state);\n\t  \t\t\tpendingStates.forEach(function (nextState) {\n\t  \t\t\t\tvar isReplace = isArr(nextState);\n\t  \t\t\t\tif (isReplace) {\n\t  \t\t\t\t\tnextState = nextState[0];\n\t  \t\t\t\t}\n\t  \t\t\t\tif (isFn(nextState)) {\n\t  \t\t\t\t\tnextState = nextState.call(instance, state, props);\n\t  \t\t\t\t}\n\t  \t\t\t\t// replace state\n\t  \t\t\t\tif (isReplace) {\n\t  \t\t\t\t\tstate = extend({}, nextState);\n\t  \t\t\t\t} else {\n\t  \t\t\t\t\textend(state, nextState);\n\t  \t\t\t\t}\n\t  \t\t\t});\n\t  \t\t\tpendingStates.length = 0;\n\t  \t\t}\n\t  \t\treturn state;\n\t  \t},\n\t  \tclearCallbacks: function clearCallbacks() {\n\t  \t\tvar pendingCallbacks = this.pendingCallbacks;\n\t  \t\tvar instance = this.instance;\n\t\n\t  \t\tif (pendingCallbacks.length > 0) {\n\t  \t\t\tthis.pendingCallbacks = [];\n\t  \t\t\tpendingCallbacks.forEach(function (callback) {\n\t  \t\t\t\treturn callback.call(instance);\n\t  \t\t\t});\n\t  \t\t}\n\t  \t},\n\t  \taddCallback: function addCallback(callback) {\n\t  \t\tif (isFn(callback)) {\n\t  \t\t\taddItem(this.pendingCallbacks, callback);\n\t  \t\t}\n\t  \t}\n\t  };\n\t  function Component(props, context) {\n\t  \tthis.$updater = new Updater(this);\n\t  \tthis.$cache = { isMounted: false };\n\t  \tthis.props = props;\n\t  \tthis.state = {};\n\t  \tthis.refs = {};\n\t  \tthis.context = context;\n\t  }\n\t\n\t  var ReactComponentSymbol = {};\n\t\n\t  Component.prototype = {\n\t  \tconstructor: Component,\n\t  \tisReactComponent: ReactComponentSymbol,\n\t  \t// getChildContext: _.noop,\n\t  \t// componentWillUpdate: _.noop,\n\t  \t// componentDidUpdate: _.noop,\n\t  \t// componentWillReceiveProps: _.noop,\n\t  \t// componentWillMount: _.noop,\n\t  \t// componentDidMount: _.noop,\n\t  \t// componentWillUnmount: _.noop,\n\t  \t// shouldComponentUpdate(nextProps, nextState) {\n\t  \t// \treturn true\n\t  \t// },\n\t  \tforceUpdate: function forceUpdate(callback) {\n\t  \t\tvar $updater = this.$updater;\n\t  \t\tvar $cache = this.$cache;\n\t  \t\tvar props = this.props;\n\t  \t\tvar state = this.state;\n\t  \t\tvar context = this.context;\n\t\n\t  \t\tif (!$cache.isMounted) {\n\t  \t\t\treturn;\n\t  \t\t}\n\t  \t\t// if updater is pending, add state to trigger nexttick update\n\t  \t\tif ($updater.isPending) {\n\t  \t\t\t$updater.addState(state);\n\t  \t\t\treturn;\n\t  \t\t}\n\t  \t\tvar nextProps = $cache.props || props;\n\t  \t\tvar nextState = $cache.state || state;\n\t  \t\tvar nextContext = $cache.context || context;\n\t  \t\tvar parentContext = $cache.parentContext;\n\t  \t\tvar node = $cache.node;\n\t  \t\tvar vnode = $cache.vnode;\n\t  \t\t$cache.props = $cache.state = $cache.context = null;\n\t  \t\t$updater.isPending = true;\n\t  \t\tif (this.componentWillUpdate) {\n\t  \t\t\tthis.componentWillUpdate(nextProps, nextState, nextContext);\n\t  \t\t}\n\t  \t\tthis.state = nextState;\n\t  \t\tthis.props = nextProps;\n\t  \t\tthis.context = nextContext;\n\t  \t\tvar newVnode = renderComponent(this);\n\t  \t\tvar newNode = compareTwoVnodes(vnode, newVnode, node, getChildContext(this, parentContext));\n\t  \t\tif (newNode !== node) {\n\t  \t\t\tnewNode.cache = newNode.cache || {};\n\t  \t\t\tsyncCache(newNode.cache, node.cache, newNode);\n\t  \t\t}\n\t  \t\t$cache.vnode = newVnode;\n\t  \t\t$cache.node = newNode;\n\t  \t\tclearPending();\n\t  \t\tif (this.componentDidUpdate) {\n\t  \t\t\tthis.componentDidUpdate(props, state, context);\n\t  \t\t}\n\t  \t\tif (callback) {\n\t  \t\t\tcallback.call(this);\n\t  \t\t}\n\t  \t\t$updater.isPending = false;\n\t  \t\t$updater.emitUpdate();\n\t  \t},\n\t  \tsetState: function setState(nextState, callback) {\n\t  \t\tvar $updater = this.$updater;\n\t\n\t  \t\t$updater.addCallback(callback);\n\t  \t\t$updater.addState(nextState);\n\t  \t},\n\t  \treplaceState: function replaceState(nextState, callback) {\n\t  \t\tvar $updater = this.$updater;\n\t\n\t  \t\t$updater.addCallback(callback);\n\t  \t\t$updater.replaceState(nextState);\n\t  \t},\n\t  \tgetDOMNode: function getDOMNode() {\n\t  \t\tvar node = this.$cache.node;\n\t  \t\treturn node && node.nodeName === '#comment' ? null : node;\n\t  \t},\n\t  \tisMounted: function isMounted() {\n\t  \t\treturn this.$cache.isMounted;\n\t  \t}\n\t  };\n\t\n\t  function shouldUpdate(component, nextProps, nextState, nextContext, callback) {\n\t  \tvar shouldComponentUpdate = true;\n\t  \tif (component.shouldComponentUpdate) {\n\t  \t\tshouldComponentUpdate = component.shouldComponentUpdate(nextProps, nextState, nextContext);\n\t  \t}\n\t  \tif (shouldComponentUpdate === false) {\n\t  \t\tcomponent.props = nextProps;\n\t  \t\tcomponent.state = nextState;\n\t  \t\tcomponent.context = nextContext || {};\n\t  \t\treturn;\n\t  \t}\n\t  \tvar cache = component.$cache;\n\t  \tcache.props = nextProps;\n\t  \tcache.state = nextState;\n\t  \tcache.context = nextContext || {};\n\t  \tcomponent.forceUpdate(callback);\n\t  }\n\t\n\t  // event config\n\t  var unbubbleEvents = {\n\t      /**\r\n\t       * should not bind mousemove in document scope\r\n\t       * even though mousemove event can bubble\r\n\t       */\n\t      onmousemove: 1,\n\t      ontouchmove: 1,\n\t      onmouseleave: 1,\n\t      onmouseenter: 1,\n\t      onload: 1,\n\t      onunload: 1,\n\t      onscroll: 1,\n\t      onfocus: 1,\n\t      onblur: 1,\n\t      onrowexit: 1,\n\t      onbeforeunload: 1,\n\t      onstop: 1,\n\t      ondragdrop: 1,\n\t      ondragenter: 1,\n\t      ondragexit: 1,\n\t      ondraggesture: 1,\n\t      ondragover: 1,\n\t      oncontextmenu: 1,\n\t      onerror: 1,\n\t\n\t      // media event\n\t      onabort: 1,\n\t      oncanplay: 1,\n\t      oncanplaythrough: 1,\n\t      ondurationchange: 1,\n\t      onemptied: 1,\n\t      onended: 1,\n\t      onloadeddata: 1,\n\t      onloadedmetadata: 1,\n\t      onloadstart: 1,\n\t      onencrypted: 1,\n\t      onpause: 1,\n\t      onplay: 1,\n\t      onplaying: 1,\n\t      onprogress: 1,\n\t      onratechange: 1,\n\t      onseeking: 1,\n\t      onseeked: 1,\n\t      onstalled: 1,\n\t      onsuspend: 1,\n\t      ontimeupdate: 1,\n\t      onvolumechange: 1,\n\t      onwaiting: 1\n\t  };\n\t\n\t  function getEventName(key) {\n\t      if (key === 'onDoubleClick') {\n\t          key = 'ondblclick';\n\t      } else if (key === 'onTouchTap') {\n\t          key = 'onclick';\n\t      }\n\t\n\t      return key.toLowerCase();\n\t  }\n\t\n\t  // Mobile Safari does not fire properly bubble click events on\n\t  // non-interactive elements, which means delegated click listeners do not\n\t  // fire. The workaround for this bug involves attaching an empty click\n\t  // listener on the target node.\n\t  var inMobile = ('ontouchstart' in document);\n\t  var emptyFunction = function emptyFunction() {};\n\t  var ON_CLICK_KEY = 'onclick';\n\t\n\t  var eventTypes = {};\n\t\n\t  function addEvent(elem, eventType, listener) {\n\t      eventType = getEventName(eventType);\n\t\n\t      var eventStore = elem.eventStore || (elem.eventStore = {});\n\t      eventStore[eventType] = listener;\n\t\n\t      if (unbubbleEvents[eventType] === 1) {\n\t          elem[eventType] = dispatchUnbubbleEvent;\n\t          return;\n\t      } else if (!eventTypes[eventType]) {\n\t          // onclick -> click\n\t          document.addEventListener(eventType.substr(2), dispatchEvent, false);\n\t          eventTypes[eventType] = true;\n\t      }\n\t\n\t      if (inMobile && eventType === ON_CLICK_KEY) {\n\t          elem.addEventListener('click', emptyFunction, false);\n\t          return;\n\t      }\n\t\n\t      var nodeName = elem.nodeName;\n\t\n\t      if (eventType === 'onchange' && supportInputEvent(elem)) {\n\t          addEvent(elem, 'oninput', listener);\n\t      }\n\t  }\n\t\n\t  function removeEvent(elem, eventType) {\n\t      eventType = getEventName(eventType);\n\t\n\t      var eventStore = elem.eventStore || (elem.eventStore = {});\n\t      delete eventStore[eventType];\n\t\n\t      if (unbubbleEvents[eventType] === 1) {\n\t          elem[eventType] = null;\n\t          return;\n\t      } else if (inMobile && eventType === ON_CLICK_KEY) {\n\t          elem.removeEventListener('click', emptyFunction, false);\n\t          return;\n\t      }\n\t\n\t      var nodeName = elem.nodeName;\n\t\n\t      if (eventType === 'onchange' && supportInputEvent(elem)) {\n\t          delete eventStore['oninput'];\n\t      }\n\t  }\n\t\n\t  function dispatchEvent(event) {\n\t      var target = event.target;\n\t      var type = event.type;\n\t\n\t      var eventType = 'on' + type;\n\t      var syntheticEvent = undefined;\n\t\n\t      updateQueue.isPending = true;\n\t      while (target) {\n\t          var _target = target;\n\t          var eventStore = _target.eventStore;\n\t\n\t          var listener = eventStore && eventStore[eventType];\n\t          if (!listener) {\n\t              target = target.parentNode;\n\t              continue;\n\t          }\n\t          if (!syntheticEvent) {\n\t              syntheticEvent = createSyntheticEvent(event);\n\t          }\n\t          syntheticEvent.currentTarget = target;\n\t          listener.call(target, syntheticEvent);\n\t          if (syntheticEvent.$cancelBubble) {\n\t              break;\n\t          }\n\t          target = target.parentNode;\n\t      }\n\t      updateQueue.isPending = false;\n\t      updateQueue.batchUpdate();\n\t  }\n\t\n\t  function dispatchUnbubbleEvent(event) {\n\t      var target = event.currentTarget || event.target;\n\t      var eventType = 'on' + event.type;\n\t      var syntheticEvent = createSyntheticEvent(event);\n\t\n\t      syntheticEvent.currentTarget = target;\n\t      updateQueue.isPending = true;\n\t\n\t      var eventStore = target.eventStore;\n\t\n\t      var listener = eventStore && eventStore[eventType];\n\t      if (listener) {\n\t          listener.call(target, syntheticEvent);\n\t      }\n\t\n\t      updateQueue.isPending = false;\n\t      updateQueue.batchUpdate();\n\t  }\n\t\n\t  function createSyntheticEvent(nativeEvent) {\n\t      var syntheticEvent = {};\n\t      var cancelBubble = function cancelBubble() {\n\t          return syntheticEvent.$cancelBubble = true;\n\t      };\n\t      syntheticEvent.nativeEvent = nativeEvent;\n\t      syntheticEvent.persist = noop;\n\t      for (var key in nativeEvent) {\n\t          if (typeof nativeEvent[key] !== 'function') {\n\t              syntheticEvent[key] = nativeEvent[key];\n\t          } else if (key === 'stopPropagation' || key === 'stopImmediatePropagation') {\n\t              syntheticEvent[key] = cancelBubble;\n\t          } else {\n\t              syntheticEvent[key] = nativeEvent[key].bind(nativeEvent);\n\t          }\n\t      }\n\t      return syntheticEvent;\n\t  }\n\t\n\t  function supportInputEvent(elem) {\n\t      var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n\t      return nodeName !== 'select' && !(nodeName === 'input' && elem.type === 'file');\n\t  }\n\t\n\t  function setStyle(elemStyle, styles) {\n\t      for (var styleName in styles) {\n\t          if (styles.hasOwnProperty(styleName)) {\n\t              setStyleValue(elemStyle, styleName, styles[styleName]);\n\t          }\n\t      }\n\t  }\n\t\n\t  function removeStyle(elemStyle, styles) {\n\t      for (var styleName in styles) {\n\t          if (styles.hasOwnProperty(styleName)) {\n\t              elemStyle[styleName] = '';\n\t          }\n\t      }\n\t  }\n\t\n\t  function patchStyle(elemStyle, style, newStyle) {\n\t      if (style === newStyle) {\n\t          return;\n\t      }\n\t      if (!newStyle && style) {\n\t          removeStyle(elemStyle, style);\n\t          return;\n\t      } else if (newStyle && !style) {\n\t          setStyle(elemStyle, newStyle);\n\t          return;\n\t      }\n\t\n\t      for (var key in style) {\n\t          if (newStyle.hasOwnProperty(key)) {\n\t              if (newStyle[key] !== style[key]) {\n\t                  setStyleValue(elemStyle, key, newStyle[key]);\n\t              }\n\t          } else {\n\t              elemStyle[key] = '';\n\t          }\n\t      }\n\t      for (var key in newStyle) {\n\t          if (!style.hasOwnProperty(key)) {\n\t              setStyleValue(elemStyle, key, newStyle[key]);\n\t          }\n\t      }\n\t  }\n\t\n\t  /**\r\n\t   * CSS properties which accept numbers but are not in units of \"px\".\r\n\t   */\n\t  var isUnitlessNumber = {\n\t      animationIterationCount: 1,\n\t      borderImageOutset: 1,\n\t      borderImageSlice: 1,\n\t      borderImageWidth: 1,\n\t      boxFlex: 1,\n\t      boxFlexGroup: 1,\n\t      boxOrdinalGroup: 1,\n\t      columnCount: 1,\n\t      flex: 1,\n\t      flexGrow: 1,\n\t      flexPositive: 1,\n\t      flexShrink: 1,\n\t      flexNegative: 1,\n\t      flexOrder: 1,\n\t      gridRow: 1,\n\t      gridColumn: 1,\n\t      fontWeight: 1,\n\t      lineClamp: 1,\n\t      lineHeight: 1,\n\t      opacity: 1,\n\t      order: 1,\n\t      orphans: 1,\n\t      tabSize: 1,\n\t      widows: 1,\n\t      zIndex: 1,\n\t      zoom: 1,\n\t\n\t      // SVG-related properties\n\t      fillOpacity: 1,\n\t      floodOpacity: 1,\n\t      stopOpacity: 1,\n\t      strokeDasharray: 1,\n\t      strokeDashoffset: 1,\n\t      strokeMiterlimit: 1,\n\t      strokeOpacity: 1,\n\t      strokeWidth: 1\n\t  };\n\t\n\t  function prefixKey(prefix, key) {\n\t      return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n\t  }\n\t\n\t  var prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\t\n\t  Object.keys(isUnitlessNumber).forEach(function (prop) {\n\t      prefixes.forEach(function (prefix) {\n\t          isUnitlessNumber[prefixKey(prefix, prop)] = 1;\n\t      });\n\t  });\n\t\n\t  var RE_NUMBER = /^-?\\d+(\\.\\d+)?$/;\n\t  function setStyleValue(elemStyle, styleName, styleValue) {\n\t\n\t      if (!isUnitlessNumber[styleName] && RE_NUMBER.test(styleValue)) {\n\t          elemStyle[styleName] = styleValue + 'px';\n\t          return;\n\t      }\n\t\n\t      if (styleName === 'float') {\n\t          styleName = 'cssFloat';\n\t      }\n\t\n\t      if (styleValue == null || typeof styleValue === 'boolean') {\n\t          styleValue = '';\n\t      }\n\t\n\t      elemStyle[styleName] = styleValue;\n\t  }\n\t\n\t  var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n\t  var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\uB7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\n\t\n\t  var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\t\n\t  var isCustomAttribute = RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$'));\n\t  // will merge some data in properties below\n\t  var properties = {};\n\t\n\t  /**\r\n\t   * Mapping from normalized, camelcased property names to a configuration that\r\n\t   * specifies how the associated DOM property should be accessed or rendered.\r\n\t   */\n\t  var MUST_USE_PROPERTY = 0x1;\n\t  var HAS_BOOLEAN_VALUE = 0x4;\n\t  var HAS_NUMERIC_VALUE = 0x8;\n\t  var HAS_POSITIVE_NUMERIC_VALUE = 0x10 | 0x8;\n\t  var HAS_OVERLOADED_BOOLEAN_VALUE = 0x20;\n\t\n\t  // html config\n\t  var HTMLDOMPropertyConfig = {\n\t      props: {\n\t          /**\r\n\t           * Standard Properties\r\n\t           */\n\t          accept: 0,\n\t          acceptCharset: 0,\n\t          accessKey: 0,\n\t          action: 0,\n\t          allowFullScreen: HAS_BOOLEAN_VALUE,\n\t          allowTransparency: 0,\n\t          alt: 0,\n\t          async: HAS_BOOLEAN_VALUE,\n\t          autoComplete: 0,\n\t          autoFocus: HAS_BOOLEAN_VALUE,\n\t          autoPlay: HAS_BOOLEAN_VALUE,\n\t          capture: HAS_BOOLEAN_VALUE,\n\t          cellPadding: 0,\n\t          cellSpacing: 0,\n\t          charSet: 0,\n\t          challenge: 0,\n\t          checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t          cite: 0,\n\t          classID: 0,\n\t          className: 0,\n\t          cols: HAS_POSITIVE_NUMERIC_VALUE,\n\t          colSpan: 0,\n\t          content: 0,\n\t          contentEditable: 0,\n\t          contextMenu: 0,\n\t          controls: HAS_BOOLEAN_VALUE,\n\t          coords: 0,\n\t          crossOrigin: 0,\n\t          data: 0, // For `<object />` acts as `src`.\n\t          dateTime: 0,\n\t          'default': HAS_BOOLEAN_VALUE,\n\t          // not in regular react, they did it in other way\n\t          defaultValue: MUST_USE_PROPERTY,\n\t          // not in regular react, they did it in other way\n\t          defaultChecked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t          defer: HAS_BOOLEAN_VALUE,\n\t          dir: 0,\n\t          disabled: HAS_BOOLEAN_VALUE,\n\t          download: HAS_OVERLOADED_BOOLEAN_VALUE,\n\t          draggable: 0,\n\t          encType: 0,\n\t          form: 0,\n\t          formAction: 0,\n\t          formEncType: 0,\n\t          formMethod: 0,\n\t          formNoValidate: HAS_BOOLEAN_VALUE,\n\t          formTarget: 0,\n\t          frameBorder: 0,\n\t          headers: 0,\n\t          height: 0,\n\t          hidden: HAS_BOOLEAN_VALUE,\n\t          high: 0,\n\t          href: 0,\n\t          hrefLang: 0,\n\t          htmlFor: 0,\n\t          httpEquiv: 0,\n\t          icon: 0,\n\t          id: 0,\n\t          inputMode: 0,\n\t          integrity: 0,\n\t          is: 0,\n\t          keyParams: 0,\n\t          keyType: 0,\n\t          kind: 0,\n\t          label: 0,\n\t          lang: 0,\n\t          list: 0,\n\t          loop: HAS_BOOLEAN_VALUE,\n\t          low: 0,\n\t          manifest: 0,\n\t          marginHeight: 0,\n\t          marginWidth: 0,\n\t          max: 0,\n\t          maxLength: 0,\n\t          media: 0,\n\t          mediaGroup: 0,\n\t          method: 0,\n\t          min: 0,\n\t          minLength: 0,\n\t          // Caution; `option.selected` is not updated if `select.multiple` is\n\t          // disabled with `removeAttribute`.\n\t          multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t          muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t          name: 0,\n\t          nonce: 0,\n\t          noValidate: HAS_BOOLEAN_VALUE,\n\t          open: HAS_BOOLEAN_VALUE,\n\t          optimum: 0,\n\t          pattern: 0,\n\t          placeholder: 0,\n\t          poster: 0,\n\t          preload: 0,\n\t          profile: 0,\n\t          radioGroup: 0,\n\t          readOnly: HAS_BOOLEAN_VALUE,\n\t          referrerPolicy: 0,\n\t          rel: 0,\n\t          required: HAS_BOOLEAN_VALUE,\n\t          reversed: HAS_BOOLEAN_VALUE,\n\t          role: 0,\n\t          rows: HAS_POSITIVE_NUMERIC_VALUE,\n\t          rowSpan: HAS_NUMERIC_VALUE,\n\t          sandbox: 0,\n\t          scope: 0,\n\t          scoped: HAS_BOOLEAN_VALUE,\n\t          scrolling: 0,\n\t          seamless: HAS_BOOLEAN_VALUE,\n\t          selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n\t          shape: 0,\n\t          size: HAS_POSITIVE_NUMERIC_VALUE,\n\t          sizes: 0,\n\t          span: HAS_POSITIVE_NUMERIC_VALUE,\n\t          spellCheck: 0,\n\t          src: 0,\n\t          srcDoc: 0,\n\t          srcLang: 0,\n\t          srcSet: 0,\n\t          start: HAS_NUMERIC_VALUE,\n\t          step: 0,\n\t          style: 0,\n\t          summary: 0,\n\t          tabIndex: 0,\n\t          target: 0,\n\t          title: 0,\n\t          // Setting .type throws on non-<input> tags\n\t          type: 0,\n\t          useMap: 0,\n\t          value: MUST_USE_PROPERTY,\n\t          width: 0,\n\t          wmode: 0,\n\t          wrap: 0,\n\t\n\t          /**\r\n\t           * RDFa Properties\r\n\t           */\n\t          about: 0,\n\t          datatype: 0,\n\t          inlist: 0,\n\t          prefix: 0,\n\t          // property is also supported for OpenGraph in meta tags.\n\t          property: 0,\n\t          playsInline: HAS_BOOLEAN_VALUE,\n\t          resource: 0,\n\t          'typeof': 0,\n\t          vocab: 0,\n\t\n\t          /**\r\n\t           * Non-standard Properties\r\n\t           */\n\t          // autoCapitalize and autoCorrect are supported in Mobile Safari for\n\t          // keyboard hints.\n\t          autoCapitalize: 0,\n\t          autoCorrect: 0,\n\t          // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n\t          autoSave: 0,\n\t          // color is for Safari mask-icon link\n\t          color: 0,\n\t          // itemProp, itemScope, itemType are for\n\t          // Microdata support. See http://schema.org/docs/gs.html\n\t          itemProp: 0,\n\t          itemScope: HAS_BOOLEAN_VALUE,\n\t          itemType: 0,\n\t          // itemID and itemRef are for Microdata support as well but\n\t          // only specified in the WHATWG spec document. See\n\t          // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n\t          itemID: 0,\n\t          itemRef: 0,\n\t          // results show looking glass icon and recent searches on input\n\t          // search fields in WebKit/Blink\n\t          results: 0,\n\t          // IE-only attribute that specifies security restrictions on an iframe\n\t          // as an alternative to the sandbox attribute on IE<10\n\t          security: 0,\n\t          // IE-only attribute that controls focus behavior\n\t          unselectable: 0\n\t      },\n\t      attrNS: {},\n\t      domAttrs: {\n\t          acceptCharset: 'accept-charset',\n\t          className: 'class',\n\t          htmlFor: 'for',\n\t          httpEquiv: 'http-equiv'\n\t      },\n\t      domProps: {}\n\t  };\n\t\n\t  // svg config\n\t  var xlink = 'http://www.w3.org/1999/xlink';\n\t  var xml = 'http://www.w3.org/XML/1998/namespace';\n\t\n\t  // We use attributes for everything SVG so let's avoid some duplication and run\n\t  // code instead.\n\t  // The following are all specified in the HTML config already so we exclude here.\n\t  // - class (as className)\n\t  // - color\n\t  // - height\n\t  // - id\n\t  // - lang\n\t  // - max\n\t  // - media\n\t  // - method\n\t  // - min\n\t  // - name\n\t  // - style\n\t  // - target\n\t  // - type\n\t  // - width\n\t  var ATTRS = {\n\t      accentHeight: 'accent-height',\n\t      accumulate: 0,\n\t      additive: 0,\n\t      alignmentBaseline: 'alignment-baseline',\n\t      allowReorder: 'allowReorder',\n\t      alphabetic: 0,\n\t      amplitude: 0,\n\t      arabicForm: 'arabic-form',\n\t      ascent: 0,\n\t      attributeName: 'attributeName',\n\t      attributeType: 'attributeType',\n\t      autoReverse: 'autoReverse',\n\t      azimuth: 0,\n\t      baseFrequency: 'baseFrequency',\n\t      baseProfile: 'baseProfile',\n\t      baselineShift: 'baseline-shift',\n\t      bbox: 0,\n\t      begin: 0,\n\t      bias: 0,\n\t      by: 0,\n\t      calcMode: 'calcMode',\n\t      capHeight: 'cap-height',\n\t      clip: 0,\n\t      clipPath: 'clip-path',\n\t      clipRule: 'clip-rule',\n\t      clipPathUnits: 'clipPathUnits',\n\t      colorInterpolation: 'color-interpolation',\n\t      colorInterpolationFilters: 'color-interpolation-filters',\n\t      colorProfile: 'color-profile',\n\t      colorRendering: 'color-rendering',\n\t      contentScriptType: 'contentScriptType',\n\t      contentStyleType: 'contentStyleType',\n\t      cursor: 0,\n\t      cx: 0,\n\t      cy: 0,\n\t      d: 0,\n\t      decelerate: 0,\n\t      descent: 0,\n\t      diffuseConstant: 'diffuseConstant',\n\t      direction: 0,\n\t      display: 0,\n\t      divisor: 0,\n\t      dominantBaseline: 'dominant-baseline',\n\t      dur: 0,\n\t      dx: 0,\n\t      dy: 0,\n\t      edgeMode: 'edgeMode',\n\t      elevation: 0,\n\t      enableBackground: 'enable-background',\n\t      end: 0,\n\t      exponent: 0,\n\t      externalResourcesRequired: 'externalResourcesRequired',\n\t      fill: 0,\n\t      fillOpacity: 'fill-opacity',\n\t      fillRule: 'fill-rule',\n\t      filter: 0,\n\t      filterRes: 'filterRes',\n\t      filterUnits: 'filterUnits',\n\t      floodColor: 'flood-color',\n\t      floodOpacity: 'flood-opacity',\n\t      focusable: 0,\n\t      fontFamily: 'font-family',\n\t      fontSize: 'font-size',\n\t      fontSizeAdjust: 'font-size-adjust',\n\t      fontStretch: 'font-stretch',\n\t      fontStyle: 'font-style',\n\t      fontVariant: 'font-variant',\n\t      fontWeight: 'font-weight',\n\t      format: 0,\n\t      from: 0,\n\t      fx: 0,\n\t      fy: 0,\n\t      g1: 0,\n\t      g2: 0,\n\t      glyphName: 'glyph-name',\n\t      glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n\t      glyphOrientationVertical: 'glyph-orientation-vertical',\n\t      glyphRef: 'glyphRef',\n\t      gradientTransform: 'gradientTransform',\n\t      gradientUnits: 'gradientUnits',\n\t      hanging: 0,\n\t      horizAdvX: 'horiz-adv-x',\n\t      horizOriginX: 'horiz-origin-x',\n\t      ideographic: 0,\n\t      imageRendering: 'image-rendering',\n\t      'in': 0,\n\t      in2: 0,\n\t      intercept: 0,\n\t      k: 0,\n\t      k1: 0,\n\t      k2: 0,\n\t      k3: 0,\n\t      k4: 0,\n\t      kernelMatrix: 'kernelMatrix',\n\t      kernelUnitLength: 'kernelUnitLength',\n\t      kerning: 0,\n\t      keyPoints: 'keyPoints',\n\t      keySplines: 'keySplines',\n\t      keyTimes: 'keyTimes',\n\t      lengthAdjust: 'lengthAdjust',\n\t      letterSpacing: 'letter-spacing',\n\t      lightingColor: 'lighting-color',\n\t      limitingConeAngle: 'limitingConeAngle',\n\t      local: 0,\n\t      markerEnd: 'marker-end',\n\t      markerMid: 'marker-mid',\n\t      markerStart: 'marker-start',\n\t      markerHeight: 'markerHeight',\n\t      markerUnits: 'markerUnits',\n\t      markerWidth: 'markerWidth',\n\t      mask: 0,\n\t      maskContentUnits: 'maskContentUnits',\n\t      maskUnits: 'maskUnits',\n\t      mathematical: 0,\n\t      mode: 0,\n\t      numOctaves: 'numOctaves',\n\t      offset: 0,\n\t      opacity: 0,\n\t      operator: 0,\n\t      order: 0,\n\t      orient: 0,\n\t      orientation: 0,\n\t      origin: 0,\n\t      overflow: 0,\n\t      overlinePosition: 'overline-position',\n\t      overlineThickness: 'overline-thickness',\n\t      paintOrder: 'paint-order',\n\t      panose1: 'panose-1',\n\t      pathLength: 'pathLength',\n\t      patternContentUnits: 'patternContentUnits',\n\t      patternTransform: 'patternTransform',\n\t      patternUnits: 'patternUnits',\n\t      pointerEvents: 'pointer-events',\n\t      points: 0,\n\t      pointsAtX: 'pointsAtX',\n\t      pointsAtY: 'pointsAtY',\n\t      pointsAtZ: 'pointsAtZ',\n\t      preserveAlpha: 'preserveAlpha',\n\t      preserveAspectRatio: 'preserveAspectRatio',\n\t      primitiveUnits: 'primitiveUnits',\n\t      r: 0,\n\t      radius: 0,\n\t      refX: 'refX',\n\t      refY: 'refY',\n\t      renderingIntent: 'rendering-intent',\n\t      repeatCount: 'repeatCount',\n\t      repeatDur: 'repeatDur',\n\t      requiredExtensions: 'requiredExtensions',\n\t      requiredFeatures: 'requiredFeatures',\n\t      restart: 0,\n\t      result: 0,\n\t      rotate: 0,\n\t      rx: 0,\n\t      ry: 0,\n\t      scale: 0,\n\t      seed: 0,\n\t      shapeRendering: 'shape-rendering',\n\t      slope: 0,\n\t      spacing: 0,\n\t      specularConstant: 'specularConstant',\n\t      specularExponent: 'specularExponent',\n\t      speed: 0,\n\t      spreadMethod: 'spreadMethod',\n\t      startOffset: 'startOffset',\n\t      stdDeviation: 'stdDeviation',\n\t      stemh: 0,\n\t      stemv: 0,\n\t      stitchTiles: 'stitchTiles',\n\t      stopColor: 'stop-color',\n\t      stopOpacity: 'stop-opacity',\n\t      strikethroughPosition: 'strikethrough-position',\n\t      strikethroughThickness: 'strikethrough-thickness',\n\t      string: 0,\n\t      stroke: 0,\n\t      strokeDasharray: 'stroke-dasharray',\n\t      strokeDashoffset: 'stroke-dashoffset',\n\t      strokeLinecap: 'stroke-linecap',\n\t      strokeLinejoin: 'stroke-linejoin',\n\t      strokeMiterlimit: 'stroke-miterlimit',\n\t      strokeOpacity: 'stroke-opacity',\n\t      strokeWidth: 'stroke-width',\n\t      surfaceScale: 'surfaceScale',\n\t      systemLanguage: 'systemLanguage',\n\t      tableValues: 'tableValues',\n\t      targetX: 'targetX',\n\t      targetY: 'targetY',\n\t      textAnchor: 'text-anchor',\n\t      textDecoration: 'text-decoration',\n\t      textRendering: 'text-rendering',\n\t      textLength: 'textLength',\n\t      to: 0,\n\t      transform: 0,\n\t      u1: 0,\n\t      u2: 0,\n\t      underlinePosition: 'underline-position',\n\t      underlineThickness: 'underline-thickness',\n\t      unicode: 0,\n\t      unicodeBidi: 'unicode-bidi',\n\t      unicodeRange: 'unicode-range',\n\t      unitsPerEm: 'units-per-em',\n\t      vAlphabetic: 'v-alphabetic',\n\t      vHanging: 'v-hanging',\n\t      vIdeographic: 'v-ideographic',\n\t      vMathematical: 'v-mathematical',\n\t      values: 0,\n\t      vectorEffect: 'vector-effect',\n\t      version: 0,\n\t      vertAdvY: 'vert-adv-y',\n\t      vertOriginX: 'vert-origin-x',\n\t      vertOriginY: 'vert-origin-y',\n\t      viewBox: 'viewBox',\n\t      viewTarget: 'viewTarget',\n\t      visibility: 0,\n\t      widths: 0,\n\t      wordSpacing: 'word-spacing',\n\t      writingMode: 'writing-mode',\n\t      x: 0,\n\t      xHeight: 'x-height',\n\t      x1: 0,\n\t      x2: 0,\n\t      xChannelSelector: 'xChannelSelector',\n\t      xlinkActuate: 'xlink:actuate',\n\t      xlinkArcrole: 'xlink:arcrole',\n\t      xlinkHref: 'xlink:href',\n\t      xlinkRole: 'xlink:role',\n\t      xlinkShow: 'xlink:show',\n\t      xlinkTitle: 'xlink:title',\n\t      xlinkType: 'xlink:type',\n\t      xmlBase: 'xml:base',\n\t      xmlns: 0,\n\t      xmlnsXlink: 'xmlns:xlink',\n\t      xmlLang: 'xml:lang',\n\t      xmlSpace: 'xml:space',\n\t      y: 0,\n\t      y1: 0,\n\t      y2: 0,\n\t      yChannelSelector: 'yChannelSelector',\n\t      z: 0,\n\t      zoomAndPan: 'zoomAndPan'\n\t  };\n\t\n\t  var SVGDOMPropertyConfig = {\n\t      props: {},\n\t      attrNS: {\n\t          xlinkActuate: xlink,\n\t          xlinkArcrole: xlink,\n\t          xlinkHref: xlink,\n\t          xlinkRole: xlink,\n\t          xlinkShow: xlink,\n\t          xlinkTitle: xlink,\n\t          xlinkType: xlink,\n\t          xmlBase: xml,\n\t          xmlLang: xml,\n\t          xmlSpace: xml\n\t      },\n\t      domAttrs: {},\n\t      domProps: {}\n\t  };\n\t\n\t  Object.keys(ATTRS).map(function (key) {\n\t      SVGDOMPropertyConfig.props[key] = 0;\n\t      if (ATTRS[key]) {\n\t          SVGDOMPropertyConfig.domAttrs[key] = ATTRS[key];\n\t      }\n\t  });\n\t\n\t  // merge html and svg config into properties\n\t  mergeConfigToProperties(HTMLDOMPropertyConfig);\n\t  mergeConfigToProperties(SVGDOMPropertyConfig);\n\t\n\t  function mergeConfigToProperties(config) {\n\t      var\n\t      // all react/react-lite supporting property names in here\n\t      props = config.props;\n\t      var\n\t      // attributes namespace in here\n\t      attrNS = config.attrNS;\n\t      var\n\t      // propName in props which should use to be dom-attribute in here\n\t      domAttrs = config.domAttrs;\n\t      var\n\t      // propName in props which should use to be dom-property in here\n\t      domProps = config.domProps;\n\t\n\t      for (var propName in props) {\n\t          if (!props.hasOwnProperty(propName)) {\n\t              continue;\n\t          }\n\t          var propConfig = props[propName];\n\t          properties[propName] = {\n\t              attributeName: domAttrs.hasOwnProperty(propName) ? domAttrs[propName] : propName.toLowerCase(),\n\t              propertyName: domProps.hasOwnProperty(propName) ? domProps[propName] : propName,\n\t              attributeNamespace: attrNS.hasOwnProperty(propName) ? attrNS[propName] : null,\n\t              mustUseProperty: checkMask(propConfig, MUST_USE_PROPERTY),\n\t              hasBooleanValue: checkMask(propConfig, HAS_BOOLEAN_VALUE),\n\t              hasNumericValue: checkMask(propConfig, HAS_NUMERIC_VALUE),\n\t              hasPositiveNumericValue: checkMask(propConfig, HAS_POSITIVE_NUMERIC_VALUE),\n\t              hasOverloadedBooleanValue: checkMask(propConfig, HAS_OVERLOADED_BOOLEAN_VALUE)\n\t          };\n\t      }\n\t  }\n\t\n\t  function checkMask(value, bitmask) {\n\t      return (value & bitmask) === bitmask;\n\t  }\n\t\n\t  /**\r\n\t   * Sets the value for a property on a node.\r\n\t   *\r\n\t   * @param {DOMElement} node\r\n\t   * @param {string} name\r\n\t   * @param {*} value\r\n\t   */\n\t\n\t  function setPropValue(node, name, value) {\n\t      var propInfo = properties.hasOwnProperty(name) && properties[name];\n\t      if (propInfo) {\n\t          // should delete value from dom\n\t          if (value == null || propInfo.hasBooleanValue && !value || propInfo.hasNumericValue && isNaN(value) || propInfo.hasPositiveNumericValue && value < 1 || propInfo.hasOverloadedBooleanValue && value === false) {\n\t              removePropValue(node, name);\n\t          } else if (propInfo.mustUseProperty) {\n\t              node[propInfo.propertyName] = value;\n\t          } else {\n\t              var attributeName = propInfo.attributeName;\n\t              var namespace = propInfo.attributeNamespace;\n\t\n\t              // `setAttribute` with objects becomes only `[object]` in IE8/9,\n\t              // ('' + value) makes it output the correct toString()-value.\n\t              if (namespace) {\n\t                  node.setAttributeNS(namespace, attributeName, '' + value);\n\t              } else if (propInfo.hasBooleanValue || propInfo.hasOverloadedBooleanValue && value === true) {\n\t                  node.setAttribute(attributeName, '');\n\t              } else {\n\t                  node.setAttribute(attributeName, '' + value);\n\t              }\n\t          }\n\t      } else if (isCustomAttribute(name) && VALID_ATTRIBUTE_NAME_REGEX.test(name)) {\n\t          if (value == null) {\n\t              node.removeAttribute(name);\n\t          } else {\n\t              node.setAttribute(name, '' + value);\n\t          }\n\t      }\n\t  }\n\t\n\t  /**\r\n\t   * Deletes the value for a property on a node.\r\n\t   *\r\n\t   * @param {DOMElement} node\r\n\t   * @param {string} name\r\n\t   */\n\t\n\t  function removePropValue(node, name) {\n\t      var propInfo = properties.hasOwnProperty(name) && properties[name];\n\t      if (propInfo) {\n\t          if (propInfo.mustUseProperty) {\n\t              var propName = propInfo.propertyName;\n\t              if (propInfo.hasBooleanValue) {\n\t                  node[propName] = false;\n\t              } else {\n\t                  node[propName] = '';\n\t              }\n\t          } else {\n\t              node.removeAttribute(propInfo.attributeName);\n\t          }\n\t      } else if (isCustomAttribute(name)) {\n\t          node.removeAttribute(name);\n\t      }\n\t  }\n\t\n\t  function updateSelectOptions(select, multiple, propValue) {\n\t      var selectedValue, i;\n\t      var options = select.options;\n\t\n\t      if (multiple) {\n\t          select.multiple = true;\n\t          if (!Array.isArray(propValue)) {\n\t              throw new Error('The value prop supplied to <select> must be an array if `multiple` is true');\n\t          }\n\t          selectedValue = {};\n\t          for (i = 0; i < propValue.length; i++) {\n\t              selectedValue['' + propValue[i]] = true;\n\t          }\n\t          for (i = 0; i < options.length; i++) {\n\t              var selected = selectedValue.hasOwnProperty(options[i].value);\n\t              if (options[i].selected !== selected) {\n\t                  options[i].selected = selected;\n\t              }\n\t          }\n\t      } else {\n\t          select.multiple = false;\n\t          if (Array.isArray(propValue)) {\n\t              throw new Error('The value prop supplied to <select> must be a scalar value if `multiple` is false.');\n\t          }\n\t          // Do not set `select.value` as exact behavior isn't consistent across all\n\t          // browsers for all cases.\n\t          selectedValue = '' + propValue;\n\t          for (i = 0; i < options.length; i++) {\n\t              var option = options[i];\n\t              if (option.value === selectedValue) {\n\t                  if (!option.selected) {\n\t                      option.selected = true;\n\t                  }\n\t              } else {\n\t                  if (option.selected) {\n\t                      option.selected = false;\n\t                  }\n\t              }\n\t          }\n\t\n\t          if (options.selectedIndex < 0 && options.length) {\n\t              options[0].selected = true;\n\t          }\n\t      }\n\t  }\n\t\n\t  function isFn(obj) {\n\t      return typeof obj === 'function';\n\t  }\n\t\n\t  var isArr = Array.isArray;\n\t\n\t  function noop() {}\n\t\n\t  function identity(obj) {\n\t      return obj;\n\t  }\n\t\n\t  function pipe(fn1, fn2) {\n\t      return function () {\n\t          fn1.apply(this, arguments);\n\t          return fn2.apply(this, arguments);\n\t      };\n\t  }\n\t\n\t  function addItem(list, item) {\n\t      list[list.length] = item;\n\t  }\n\t\n\t  function flatEach(list, iteratee, a) {\n\t      var len = list.length;\n\t      var i = -1;\n\t\n\t      while (len--) {\n\t          var item = list[++i];\n\t          if (isArr(item)) {\n\t              flatEach(item, iteratee, a);\n\t          } else {\n\t              iteratee(item, a);\n\t          }\n\t      }\n\t  }\n\t\n\t  function extend(to, from) {\n\t      if (!from) {\n\t          return to;\n\t      }\n\t      var keys = Object.keys(from);\n\t      var i = keys.length;\n\t      while (i--) {\n\t          to[keys[i]] = from[keys[i]];\n\t      }\n\t      return to;\n\t  }\n\t\n\t  var uid = 0;\n\t\n\t  function getUid() {\n\t      return ++uid;\n\t  }\n\t\n\t  var EVENT_KEYS = /^on/i;\n\t\n\t  function setProp(elem, key, value, isCustomComponent) {\n\t      if (EVENT_KEYS.test(key)) {\n\t          addEvent(elem, key, value);\n\t      } else if (key === 'style') {\n\t          setStyle(elem.style, value);\n\t      } else if (key === HTML_KEY) {\n\t          if (value && value.__html != null) {\n\t              elem.innerHTML = value.__html;\n\t          }\n\t      } else if (isCustomComponent) {\n\t          if (value == null) {\n\t              elem.removeAttribute(key);\n\t          } else {\n\t              elem.setAttribute(key, '' + value);\n\t          }\n\t      } else {\n\t          setPropValue(elem, key, value);\n\t      }\n\t  }\n\t\n\t  function removeProp(elem, key, oldValue, isCustomComponent) {\n\t      if (EVENT_KEYS.test(key)) {\n\t          removeEvent(elem, key);\n\t      } else if (key === 'style') {\n\t          removeStyle(elem.style, oldValue);\n\t      } else if (key === HTML_KEY) {\n\t          elem.innerHTML = '';\n\t      } else if (isCustomComponent) {\n\t          elem.removeAttribute(key);\n\t      } else {\n\t          removePropValue(elem, key);\n\t      }\n\t  }\n\t\n\t  function patchProp(elem, key, value, oldValue, isCustomComponent) {\n\t      if (key === 'value' || key === 'checked') {\n\t          oldValue = elem[key];\n\t      }\n\t      if (value === oldValue) {\n\t          return;\n\t      }\n\t      if (value === undefined) {\n\t          removeProp(elem, key, oldValue, isCustomComponent);\n\t          return;\n\t      }\n\t      if (key === 'style') {\n\t          patchStyle(elem.style, oldValue, value);\n\t      } else {\n\t          setProp(elem, key, value, isCustomComponent);\n\t      }\n\t  }\n\t\n\t  function setProps(elem, props, isCustomComponent) {\n\t      var isSelect = elem.nodeName === 'SELECT';\n\t      for (var key in props) {\n\t          if (key !== 'children') {\n\t              if (isSelect && (key === 'value' || key === 'defaultValue')) {\n\t                  updateSelectOptions(elem, props.multiple, props[key]);\n\t              } else {\n\t                  setProp(elem, key, props[key], isCustomComponent);\n\t              }\n\t          }\n\t      }\n\t  }\n\t\n\t  function patchProps(elem, props, newProps, isCustomComponent) {\n\t      var isSelect = elem.nodeName === 'SELECT';\n\t      for (var key in props) {\n\t          if (key !== 'children') {\n\t              if (newProps.hasOwnProperty(key)) {\n\t                  if (isSelect && (key === 'value' || key === 'defaultValue')) {\n\t                      updateSelectOptions(elem, newProps.multiple, newProps[key]);\n\t                  } else {\n\t                      patchProp(elem, key, newProps[key], props[key], isCustomComponent);\n\t                  }\n\t              } else {\n\t                  removeProp(elem, key, props[key], isCustomComponent);\n\t              }\n\t          }\n\t      }\n\t      for (var key in newProps) {\n\t          if (key !== 'children' && !props.hasOwnProperty(key)) {\n\t              if (isSelect && (key === 'value' || key === 'defaultValue')) {\n\t                  updateSelectOptions(elem, newProps.multiple, newProps[key]);\n\t              } else {\n\t                  setProp(elem, key, newProps[key], isCustomComponent);\n\t              }\n\t          }\n\t      }\n\t  }\n\t\n\t  if (!Object.freeze) {\n\t      Object.freeze = identity;\n\t  }\n\t\n\t  function isValidContainer(node) {\n\t  \treturn !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));\n\t  }\n\t\n\t  var pendingRendering = {};\n\t  var vnodeStore = {};\n\t  function renderTreeIntoContainer(vnode, container, callback, parentContext) {\n\t  \tif (!vnode.vtype) {\n\t  \t\tthrow new Error('cannot render ' + vnode + ' to container');\n\t  \t}\n\t  \tif (!isValidContainer(container)) {\n\t  \t\tthrow new Error('container ' + container + ' is not a DOM element');\n\t  \t}\n\t  \tvar id = container[COMPONENT_ID] || (container[COMPONENT_ID] = getUid());\n\t  \tvar argsCache = pendingRendering[id];\n\t\n\t  \t// component lify cycle method maybe call root rendering\n\t  \t// should bundle them and render by only one time\n\t  \tif (argsCache) {\n\t  \t\tif (argsCache === true) {\n\t  \t\t\tpendingRendering[id] = argsCache = { vnode: vnode, callback: callback, parentContext: parentContext };\n\t  \t\t} else {\n\t  \t\t\targsCache.vnode = vnode;\n\t  \t\t\targsCache.parentContext = parentContext;\n\t  \t\t\targsCache.callback = argsCache.callback ? pipe(argsCache.callback, callback) : callback;\n\t  \t\t}\n\t  \t\treturn;\n\t  \t}\n\t\n\t  \tpendingRendering[id] = true;\n\t  \tvar oldVnode = null;\n\t  \tvar rootNode = null;\n\t  \tif (oldVnode = vnodeStore[id]) {\n\t  \t\trootNode = compareTwoVnodes(oldVnode, vnode, container.firstChild, parentContext);\n\t  \t} else {\n\t  \t\trootNode = initVnode(vnode, parentContext, container.namespaceURI);\n\t  \t\tvar childNode = null;\n\t  \t\twhile (childNode = container.lastChild) {\n\t  \t\t\tcontainer.removeChild(childNode);\n\t  \t\t}\n\t  \t\tcontainer.appendChild(rootNode);\n\t  \t}\n\t  \tvnodeStore[id] = vnode;\n\t  \tvar isPending = updateQueue.isPending;\n\t  \tupdateQueue.isPending = true;\n\t  \tclearPending();\n\t  \targsCache = pendingRendering[id];\n\t  \tdelete pendingRendering[id];\n\t\n\t  \tvar result = null;\n\t  \tif (typeof argsCache === 'object') {\n\t  \t\tresult = renderTreeIntoContainer(argsCache.vnode, container, argsCache.callback, argsCache.parentContext);\n\t  \t} else if (vnode.vtype === VELEMENT) {\n\t  \t\tresult = rootNode;\n\t  \t} else if (vnode.vtype === VCOMPONENT) {\n\t  \t\tresult = rootNode.cache[vnode.uid];\n\t  \t}\n\t\n\t  \tif (!isPending) {\n\t  \t\tupdateQueue.isPending = false;\n\t  \t\tupdateQueue.batchUpdate();\n\t  \t}\n\t\n\t  \tif (callback) {\n\t  \t\tcallback.call(result);\n\t  \t}\n\t\n\t  \treturn result;\n\t  }\n\t\n\t  function render(vnode, container, callback) {\n\t  \treturn renderTreeIntoContainer(vnode, container, callback);\n\t  }\n\t\n\t  function unstable_renderSubtreeIntoContainer(parentComponent, subVnode, container, callback) {\n\t  \tvar context = parentComponent.$cache.parentContext;\n\t  \treturn renderTreeIntoContainer(subVnode, container, callback, context);\n\t  }\n\t\n\t  function unmountComponentAtNode(container) {\n\t  \tif (!container.nodeName) {\n\t  \t\tthrow new Error('expect node');\n\t  \t}\n\t  \tvar id = container[COMPONENT_ID];\n\t  \tvar vnode = null;\n\t  \tif (vnode = vnodeStore[id]) {\n\t  \t\tdestroyVnode(vnode, container.firstChild);\n\t  \t\tcontainer.removeChild(container.firstChild);\n\t  \t\tdelete vnodeStore[id];\n\t  \t\treturn true;\n\t  \t}\n\t  \treturn false;\n\t  }\n\t\n\t  function findDOMNode(node) {\n\t  \tif (node == null) {\n\t  \t\treturn null;\n\t  \t}\n\t  \tif (node.nodeName) {\n\t  \t\treturn node;\n\t  \t}\n\t  \tvar component = node;\n\t  \t// if component.node equal to false, component must be unmounted\n\t  \tif (component.getDOMNode && component.$cache.isMounted) {\n\t  \t\treturn component.getDOMNode();\n\t  \t}\n\t  \tthrow new Error('findDOMNode can not find Node');\n\t  }\n\t\n\t  var ReactDOM = Object.freeze({\n\t  \trender: render,\n\t  \tunstable_renderSubtreeIntoContainer: unstable_renderSubtreeIntoContainer,\n\t  \tunmountComponentAtNode: unmountComponentAtNode,\n\t  \tfindDOMNode: findDOMNode\n\t  });\n\t\n\t  function createElement(type, props, children) {\n\t  \tvar vtype = null;\n\t  \tif (typeof type === 'string') {\n\t  \t\tvtype = VELEMENT;\n\t  \t} else if (typeof type === 'function') {\n\t  \t\tif (type.prototype && type.prototype.isReactComponent) {\n\t  \t\t\tvtype = VCOMPONENT;\n\t  \t\t} else {\n\t  \t\t\tvtype = VSTATELESS;\n\t  \t\t}\n\t  \t} else {\n\t  \t\tthrow new Error('React.createElement: unexpect type [ ' + type + ' ]');\n\t  \t}\n\t\n\t  \tvar key = null;\n\t  \tvar ref = null;\n\t  \tvar finalProps = {};\n\t  \tif (props != null) {\n\t  \t\tfor (var propKey in props) {\n\t  \t\t\tif (!props.hasOwnProperty(propKey)) {\n\t  \t\t\t\tcontinue;\n\t  \t\t\t}\n\t  \t\t\tif (propKey === 'key') {\n\t  \t\t\t\tif (props.key !== undefined) {\n\t  \t\t\t\t\tkey = '' + props.key;\n\t  \t\t\t\t}\n\t  \t\t\t} else if (propKey === 'ref') {\n\t  \t\t\t\tif (props.ref !== undefined) {\n\t  \t\t\t\t\tref = props.ref;\n\t  \t\t\t\t}\n\t  \t\t\t} else {\n\t  \t\t\t\tfinalProps[propKey] = props[propKey];\n\t  \t\t\t}\n\t  \t\t}\n\t  \t}\n\t\n\t  \tvar defaultProps = type.defaultProps;\n\t\n\t  \tif (defaultProps) {\n\t  \t\tfor (var propKey in defaultProps) {\n\t  \t\t\tif (finalProps[propKey] === undefined) {\n\t  \t\t\t\tfinalProps[propKey] = defaultProps[propKey];\n\t  \t\t\t}\n\t  \t\t}\n\t  \t}\n\t\n\t  \tvar argsLen = arguments.length;\n\t  \tvar finalChildren = children;\n\t\n\t  \tif (argsLen > 3) {\n\t  \t\tfinalChildren = Array(argsLen - 2);\n\t  \t\tfor (var i = 2; i < argsLen; i++) {\n\t  \t\t\tfinalChildren[i - 2] = arguments[i];\n\t  \t\t}\n\t  \t}\n\t\n\t  \tif (finalChildren !== undefined) {\n\t  \t\tfinalProps.children = finalChildren;\n\t  \t}\n\t\n\t  \treturn createVnode(vtype, type, finalProps, key, ref);\n\t  }\n\t\n\t  function isValidElement(obj) {\n\t  \treturn obj != null && !!obj.vtype;\n\t  }\n\t\n\t  function cloneElement(originElem, props) {\n\t  \tvar type = originElem.type;\n\t  \tvar key = originElem.key;\n\t  \tvar ref = originElem.ref;\n\t\n\t  \tvar newProps = extend(extend({ key: key, ref: ref }, originElem.props), props);\n\t\n\t  \tfor (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n\t  \t\tchildren[_key - 2] = arguments[_key];\n\t  \t}\n\t\n\t  \tvar vnode = createElement.apply(undefined, [type, newProps].concat(children));\n\t  \tif (vnode.ref === originElem.ref) {\n\t  \t\tvnode.refs = originElem.refs;\n\t  \t}\n\t  \treturn vnode;\n\t  }\n\t\n\t  function createFactory(type) {\n\t  \tvar factory = function factory() {\n\t  \t\tfor (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n\t  \t\t\targs[_key2] = arguments[_key2];\n\t  \t\t}\n\t\n\t  \t\treturn createElement.apply(undefined, [type].concat(args));\n\t  \t};\n\t  \tfactory.type = type;\n\t  \treturn factory;\n\t  }\n\t\n\t  var tagNames = 'a|abbr|address|area|article|aside|audio|b|base|bdi|bdo|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|data|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|main|map|mark|menu|menuitem|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|source|span|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|track|u|ul|var|video|wbr|circle|clipPath|defs|ellipse|g|image|line|linearGradient|mask|path|pattern|polygon|polyline|radialGradient|rect|stop|svg|text|tspan';\n\t  var DOM = {};\n\t  tagNames.split('|').forEach(function (tagName) {\n\t  \tDOM[tagName] = createFactory(tagName);\n\t  });\n\t\n\t  var check = function check() {\n\t      return check;\n\t  };\n\t  check.isRequired = check;\n\t  var PropTypes = {\n\t      \"array\": check,\n\t      \"bool\": check,\n\t      \"func\": check,\n\t      \"number\": check,\n\t      \"object\": check,\n\t      \"string\": check,\n\t      \"any\": check,\n\t      \"arrayOf\": check,\n\t      \"element\": check,\n\t      \"instanceOf\": check,\n\t      \"node\": check,\n\t      \"objectOf\": check,\n\t      \"oneOf\": check,\n\t      \"oneOfType\": check,\n\t      \"shape\": check\n\t  };\n\t\n\t  function only(children) {\n\t  \tif (isValidElement(children)) {\n\t  \t\treturn children;\n\t  \t}\n\t  \tthrow new Error('expect only one child');\n\t  }\n\t\n\t  function forEach(children, iteratee, context) {\n\t  \tif (children == null) {\n\t  \t\treturn children;\n\t  \t}\n\t  \tvar index = 0;\n\t  \tif (isArr(children)) {\n\t  \t\tflatEach(children, function (child) {\n\t  \t\t\t// from traverseAllChildrenImpl in react\n\t  \t\t\tvar type = typeof child;\n\t  \t\t\tif (type === 'undefined' || type === 'boolean') {\n\t  \t\t\t\t// All of the above are perceived as null.\n\t  \t\t\t\tchild = null;\n\t  \t\t\t}\n\t\n\t  \t\t\titeratee.call(context, child, index++);\n\t  \t\t});\n\t  \t} else {\n\t  \t\t// from traverseAllChildrenImpl in react\n\t  \t\tvar type = typeof children;\n\t  \t\tif (type === 'undefined' || type === 'boolean') {\n\t  \t\t\t// All of the above are perceived as null.\n\t  \t\t\tchildren = null;\n\t  \t\t}\n\t  \t\titeratee.call(context, children, index);\n\t  \t}\n\t  }\n\t\n\t  function map(children, iteratee, context) {\n\t  \tif (children == null) {\n\t  \t\treturn children;\n\t  \t}\n\t  \tvar store = [];\n\t  \tvar keyMap = {};\n\t  \tforEach(children, function (child, index) {\n\t  \t\tvar data = {};\n\t  \t\tdata.child = iteratee.call(context, child, index) || child;\n\t  \t\tdata.isEqual = data.child === child;\n\t  \t\tvar key = data.key = getKey(child, index);\n\t  \t\tif (keyMap.hasOwnProperty(key)) {\n\t  \t\t\tkeyMap[key] += 1;\n\t  \t\t} else {\n\t  \t\t\tkeyMap[key] = 0;\n\t  \t\t}\n\t  \t\tdata.index = keyMap[key];\n\t  \t\taddItem(store, data);\n\t  \t});\n\t  \tvar result = [];\n\t  \tstore.forEach(function (_ref) {\n\t  \t\tvar child = _ref.child;\n\t  \t\tvar key = _ref.key;\n\t  \t\tvar index = _ref.index;\n\t  \t\tvar isEqual = _ref.isEqual;\n\t\n\t  \t\tif (child == null || typeof child === 'boolean') {\n\t  \t\t\treturn;\n\t  \t\t}\n\t  \t\tif (!isValidElement(child) || key == null) {\n\t  \t\t\taddItem(result, child);\n\t  \t\t\treturn;\n\t  \t\t}\n\t  \t\tif (keyMap[key] !== 0) {\n\t  \t\t\tkey += ':' + index;\n\t  \t\t}\n\t  \t\tif (!isEqual) {\n\t  \t\t\tkey = escapeUserProvidedKey(child.key || '') + '/' + key;\n\t  \t\t}\n\t  \t\tchild = cloneElement(child, { key: key });\n\t  \t\taddItem(result, child);\n\t  \t});\n\t  \treturn result;\n\t  }\n\t\n\t  function count(children) {\n\t  \tvar count = 0;\n\t  \tforEach(children, function () {\n\t  \t\tcount++;\n\t  \t});\n\t  \treturn count;\n\t  }\n\t\n\t  function toArray(children) {\n\t  \treturn map(children, identity) || [];\n\t  }\n\t\n\t  function getKey(child, index) {\n\t  \tvar key = undefined;\n\t  \tif (isValidElement(child) && typeof child.key === 'string') {\n\t  \t\tkey = '.$' + child.key;\n\t  \t} else {\n\t  \t\tkey = '.' + index.toString(36);\n\t  \t}\n\t  \treturn key;\n\t  }\n\t\n\t  var userProvidedKeyEscapeRegex = /\\/(?!\\/)/g;\n\t  function escapeUserProvidedKey(text) {\n\t  \treturn ('' + text).replace(userProvidedKeyEscapeRegex, '//');\n\t  }\n\t\n\t  var Children = Object.freeze({\n\t  \tonly: only,\n\t  \tforEach: forEach,\n\t  \tmap: map,\n\t  \tcount: count,\n\t  \ttoArray: toArray\n\t  });\n\t\n\t  function eachMixin(mixins, iteratee) {\n\t  \tmixins.forEach(function (mixin) {\n\t  \t\tif (mixin) {\n\t  \t\t\tif (isArr(mixin.mixins)) {\n\t  \t\t\t\teachMixin(mixin.mixins, iteratee);\n\t  \t\t\t}\n\t  \t\t\titeratee(mixin);\n\t  \t\t}\n\t  \t});\n\t  }\n\t\n\t  function combineMixinToProto(proto, mixin) {\n\t  \tfor (var key in mixin) {\n\t  \t\tif (!mixin.hasOwnProperty(key)) {\n\t  \t\t\tcontinue;\n\t  \t\t}\n\t  \t\tvar value = mixin[key];\n\t  \t\tif (key === 'getInitialState') {\n\t  \t\t\taddItem(proto.$getInitialStates, value);\n\t  \t\t\tcontinue;\n\t  \t\t}\n\t  \t\tvar curValue = proto[key];\n\t  \t\tif (isFn(curValue) && isFn(value)) {\n\t  \t\t\tproto[key] = pipe(curValue, value);\n\t  \t\t} else {\n\t  \t\t\tproto[key] = value;\n\t  \t\t}\n\t  \t}\n\t  }\n\t\n\t  function combineMixinToClass(Component, mixin) {\n\t  \tif (mixin.propTypes) {\n\t  \t\tComponent.propTypes = Component.propTypes || {};\n\t  \t\textend(Component.propTypes, mixin.propTypes);\n\t  \t}\n\t  \tif (mixin.contextTypes) {\n\t  \t\tComponent.contextTypes = Component.contextTypes || {};\n\t  \t\textend(Component.contextTypes, mixin.contextTypes);\n\t  \t}\n\t  \textend(Component, mixin.statics);\n\t  \tif (isFn(mixin.getDefaultProps)) {\n\t  \t\tComponent.defaultProps = Component.defaultProps || {};\n\t  \t\textend(Component.defaultProps, mixin.getDefaultProps());\n\t  \t}\n\t  }\n\t\n\t  function bindContext(obj, source) {\n\t  \tfor (var key in source) {\n\t  \t\tif (source.hasOwnProperty(key)) {\n\t  \t\t\tif (isFn(source[key])) {\n\t  \t\t\t\tobj[key] = source[key].bind(obj);\n\t  \t\t\t}\n\t  \t\t}\n\t  \t}\n\t  }\n\t\n\t  var Facade = function Facade() {};\n\t  Facade.prototype = Component.prototype;\n\t\n\t  function getInitialState() {\n\t  \tvar _this = this;\n\t\n\t  \tvar state = {};\n\t  \tvar setState = this.setState;\n\t  \tthis.setState = Facade;\n\t  \tthis.$getInitialStates.forEach(function (getInitialState) {\n\t  \t\tif (isFn(getInitialState)) {\n\t  \t\t\textend(state, getInitialState.call(_this));\n\t  \t\t}\n\t  \t});\n\t  \tthis.setState = setState;\n\t  \treturn state;\n\t  }\n\t  function createClass(spec) {\n\t  \tif (!isFn(spec.render)) {\n\t  \t\tthrow new Error('createClass: spec.render is not function');\n\t  \t}\n\t  \tvar specMixins = spec.mixins || [];\n\t  \tvar mixins = specMixins.concat(spec);\n\t  \tspec.mixins = null;\n\t  \tfunction Klass(props, context) {\n\t  \t\tComponent.call(this, props, context);\n\t  \t\tthis.constructor = Klass;\n\t  \t\tspec.autobind !== false && bindContext(this, Klass.prototype);\n\t  \t\tthis.state = this.getInitialState() || this.state;\n\t  \t}\n\t  \tKlass.displayName = spec.displayName;\n\t  \tvar proto = Klass.prototype = new Facade();\n\t  \tproto.$getInitialStates = [];\n\t  \teachMixin(mixins, function (mixin) {\n\t  \t\tcombineMixinToProto(proto, mixin);\n\t  \t\tcombineMixinToClass(Klass, mixin);\n\t  \t});\n\t  \tproto.getInitialState = getInitialState;\n\t  \tspec.mixins = specMixins;\n\t  \treturn Klass;\n\t  }\n\t\n\t  function shallowEqual(objA, objB) {\n\t      if (objA === objB) {\n\t          return true;\n\t      }\n\t\n\t      if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n\t          return false;\n\t      }\n\t\n\t      var keysA = Object.keys(objA);\n\t      var keysB = Object.keys(objB);\n\t\n\t      if (keysA.length !== keysB.length) {\n\t          return false;\n\t      }\n\t\n\t      // Test for A's keys different from B.\n\t      for (var i = 0; i < keysA.length; i++) {\n\t          if (!objB.hasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n\t              return false;\n\t          }\n\t      }\n\t\n\t      return true;\n\t  }\n\t\n\t  function PureComponent(props, context) {\n\t  \tComponent.call(this, props, context);\n\t  }\n\t\n\t  PureComponent.prototype = Object.create(Component.prototype);\n\t  PureComponent.prototype.constructor = PureComponent;\n\t  PureComponent.prototype.isPureReactComponent = true;\n\t  PureComponent.prototype.shouldComponentUpdate = shallowCompare;\n\t\n\t  function shallowCompare(nextProps, nextState) {\n\t  \treturn !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);\n\t  }\n\t\n\t  var React = extend({\n\t      version: '0.15.1',\n\t      cloneElement: cloneElement,\n\t      isValidElement: isValidElement,\n\t      createElement: createElement,\n\t      createFactory: createFactory,\n\t      Component: Component,\n\t      PureComponent: PureComponent,\n\t      createClass: createClass,\n\t      Children: Children,\n\t      PropTypes: PropTypes,\n\t      DOM: DOM\n\t  }, ReactDOM);\n\t\n\t  React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;\n\t\n\t  return React;\n\t\n\t}));\n\n/***/ },\n/* 33 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.BlockDetails = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _cockpit = __webpack_require__(7);\n\t\n\tvar _cockpit2 = _interopRequireDefault(_cockpit);\n\t\n\tvar _react = __webpack_require__(32);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _utils = __webpack_require__(9);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _details = __webpack_require__(31);\n\t\n\tvar _contentViews = __webpack_require__(34);\n\t\n\tvar _contentViews2 = _interopRequireDefault(_contentViews);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file is part of Cockpit.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (C) 2017 Red Hat, Inc.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Cockpit is free software; you can redistribute it and/or modify it\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the terms of the GNU Lesser General Public License as published by\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Free Software Foundation; either version 2.1 of the License, or\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * (at your option) any later version.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Cockpit is distributed in the hope that it will be useful, but\n\twithout even the implied warranty of\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Lesser General Public License for more details.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You should have received a copy of the GNU Lesser General Public License\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar _ = _cockpit2.default.gettext;\n\t\n\tvar BlockDetails = exports.BlockDetails = function (_React$Component) {\n\t    _inherits(BlockDetails, _React$Component);\n\t\n\t    function BlockDetails() {\n\t        _classCallCheck(this, BlockDetails);\n\t\n\t        return _possibleConstructorReturn(this, (BlockDetails.__proto__ || Object.getPrototypeOf(BlockDetails)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(BlockDetails, [{\n\t        key: \"render\",\n\t        value: function render() {\n\t            var block = this.props.block;\n\t\n\t            var header = _react2.default.createElement(\n\t                \"div\",\n\t                { className: \"panel panel-default\" },\n\t                _react2.default.createElement(\n\t                    \"div\",\n\t                    { className: \"panel-heading\" },\n\t                    _(\"Block\")\n\t                ),\n\t                _react2.default.createElement(\n\t                    \"div\",\n\t                    { className: \"panel-body\" },\n\t                    _react2.default.createElement(\n\t                        \"table\",\n\t                        { className: \"info-table-ct\" },\n\t                        _react2.default.createElement(\n\t                            \"tr\",\n\t                            null,\n\t                            _react2.default.createElement(\n\t                                \"td\",\n\t                                null,\n\t                                _(\"storage\", \"Capacity\")\n\t                            ),\n\t                            _react2.default.createElement(\n\t                                \"td\",\n\t                                null,\n\t                                _utils2.default.fmt_size_long(block.Size)\n\t                            )\n\t                        ),\n\t                        _react2.default.createElement(\n\t                            \"tr\",\n\t                            null,\n\t                            _react2.default.createElement(\n\t                                \"td\",\n\t                                null,\n\t                                _(\"storage\", \"Device File\")\n\t                            ),\n\t                            _react2.default.createElement(\n\t                                \"td\",\n\t                                null,\n\t                                _utils2.default.block_name(block)\n\t                            )\n\t                        )\n\t                    )\n\t                )\n\t            );\n\t\n\t            var content = _react2.default.createElement(_contentViews2.default.Block, { client: this.props.client, block: block });\n\t\n\t            return _react2.default.createElement(_details.StdDetailsLayout, { jobs: this.props.jobs, header: header, content: content });\n\t        }\n\t    }]);\n\t\n\t    return BlockDetails;\n\t}(_react2.default.Component);\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar cockpit = __webpack_require__(7);\n\tvar dialog = __webpack_require__(26);\n\tvar utils = __webpack_require__(9);\n\t\n\tvar React = __webpack_require__(32);\n\tvar CockpitListing = __webpack_require__(35);\n\tvar StorageControls = __webpack_require__(37);\n\tvar FormatDialog = __webpack_require__(42);\n\t\n\tvar StorageButton = StorageControls.StorageButton;\n\tvar StorageLink = StorageControls.StorageLink;\n\t\n\tvar FilesystemTab = __webpack_require__(43).FilesystemTab;\n\tvar CryptoTab = __webpack_require__(44).CryptoTab;\n\tvar BlockVolTab = __webpack_require__(45).BlockVolTab;\n\tvar PoolVolTab = __webpack_require__(45).PoolVolTab;\n\tvar PVolTab = __webpack_require__(46).PVolTab;\n\tvar MDRaidMemberTab = __webpack_require__(46).MDRaidMemberTab;\n\tvar PartitionTab = __webpack_require__(47).PartitionTab;\n\tvar SwapTab = __webpack_require__(48).SwapTab;\n\tvar UnrecognizedTab = __webpack_require__(49).UnrecognizedTab;\n\t\n\tvar _ = cockpit.gettext;\n\tvar C_ = cockpit.gettext;\n\t\n\tfunction next_default_logical_volume_name(client, vgroup) {\n\t    function find_lvol(name) {\n\t        var lvols = client.vgroups_lvols[vgroup.path];\n\t        for (var i = 0; i < lvols.length; i++) {\n\t            if (lvols[i].Name == name) return lvols[i];\n\t        }\n\t        return null;\n\t    }\n\t\n\t    var name;\n\t    for (var i = 0; i < 1000; i++) {\n\t        name = \"lvol\" + i.toFixed();\n\t        if (!find_lvol(name)) break;\n\t    }\n\t\n\t    return name;\n\t}\n\t\n\tfunction create_tabs(client, target, is_partition) {\n\t    function endsWith(str, suffix) {\n\t        return str.indexOf(suffix, str.length - suffix.length) !== -1;\n\t    }\n\t\n\t    var block = endsWith(target.iface, \".Block\") ? target : null;\n\t    var block_lvm2 = block && client.blocks_lvm2[block.path];\n\t    var block_pvol = block && client.blocks_pvol[block.path];\n\t\n\t    var lvol = endsWith(target.iface, \".LogicalVolume\") ? target : block_lvm2 && client.lvols[block_lvm2.LogicalVolume];\n\t\n\t    var is_filesystem = block && block.IdUsage == 'filesystem';\n\t    var is_crypto = block && block.IdUsage == 'crypto';\n\t\n\t    var tabs = [];\n\t    var row_action = null;\n\t\n\t    function add_tab(name, renderer) {\n\t        tabs.push({ name: name,\n\t            renderer: renderer,\n\t            data: {\n\t                client: client,\n\t                block: block,\n\t                lvol: lvol\n\t            }\n\t        });\n\t    }\n\t\n\t    function create_thin() {\n\t        var vgroup = lvol && client.vgroups[lvol.VolumeGroup];\n\t        if (!vgroup) return;\n\t\n\t        dialog.open({ Title: _(\"Create Thin Volume\"),\n\t            Fields: [{ TextInput: \"name\",\n\t                Title: _(\"Name\"),\n\t                Value: next_default_logical_volume_name(client, vgroup),\n\t                validate: utils.validate_lvm2_name\n\t            }, { SizeSlider: \"size\",\n\t                Title: _(\"Size\"),\n\t                Value: lvol.Size,\n\t                Max: lvol.Size * 3,\n\t                AllowInfinite: true,\n\t                Round: vgroup.ExtentSize\n\t            }],\n\t            Action: {\n\t                Title: _(\"Create\"),\n\t                action: function action(vals) {\n\t                    return vgroup.CreateThinVolume(vals.name, vals.size, lvol.path, {});\n\t                }\n\t            }\n\t        });\n\t    }\n\t\n\t    if (lvol) {\n\t        if (lvol.Type == \"pool\") {\n\t            add_tab(_(\"Pool\"), PoolVolTab);\n\t            row_action = React.createElement(\n\t                StorageButton,\n\t                { onClick: create_thin },\n\t                _(\"Create Thin Volume\")\n\t            );\n\t        } else {\n\t            add_tab(_(\"Volume\"), BlockVolTab);\n\t        }\n\t    }\n\t\n\t    if (is_partition) {\n\t        add_tab(_(\"Partition\"), PartitionTab);\n\t    }\n\t\n\t    if (is_filesystem) {\n\t        add_tab(_(\"Filesystem\"), FilesystemTab);\n\t    } else if (is_crypto) {\n\t        add_tab(_(\"Encryption\"), CryptoTab);\n\t    } else if (block && block.IdUsage == \"raid\" && block.IdType == \"LVM2_member\" || block_pvol && client.vgroups[block_pvol.VolumeGroup]) {\n\t        add_tab(_(\"Physical Volume\"), PVolTab);\n\t    } else if (block && block.IdUsage == \"raid\" || block && client.mdraids[block.MDRaidMember]) {\n\t        add_tab(_(\"RAID Member\"), MDRaidMemberTab);\n\t    } else if (block && block.IdUsage == \"other\" && block.IdType == \"swap\") {\n\t        add_tab(_(\"Swap\"), SwapTab);\n\t    } else if (block) {\n\t        add_tab(_(\"Unrecognized Data\"), UnrecognizedTab);\n\t    }\n\t\n\t    var tab_actions = [];\n\t\n\t    function add_action(title, func, excuse) {\n\t        tab_actions.push(React.createElement(\n\t            StorageButton,\n\t            { onClick: func, excuse: excuse },\n\t            title\n\t        ));\n\t    }\n\t\n\t    function lock() {\n\t        var crypto = client.blocks_crypto[block.path];\n\t        if (!crypto) return;\n\t\n\t        return crypto.Lock({});\n\t    }\n\t\n\t    function unlock() {\n\t        var crypto = client.blocks_crypto[block.path];\n\t        if (!crypto) return;\n\t\n\t        /* If there is a stored passphrase, the Unlock method will\n\t         * use it unconditionally.  So we don't ask for one in\n\t         * that case.\n\t         *\n\t         * https://udisks.freedesktop.org/docs/latest/gdbus-org.freedesktop.UDisks2.Block.html#gdbus-method-org-freedesktop-UDisks2-Block.GetSecretConfiguration\n\t         */\n\t        return block.GetSecretConfiguration({}).then(function (items) {\n\t            for (var i = 0; i < items.length; i++) {\n\t                if (items[i][0] == 'crypttab' && items[i][1]['passphrase-contents'] && utils.decode_filename(items[i][1]['passphrase-contents'].v)) {\n\t                    return crypto.Unlock(\"\", {});\n\t                }\n\t            }\n\t\n\t            dialog.open({ Title: _(\"Unlock\"),\n\t                Fields: [{ PassInput: \"passphrase\",\n\t                    Title: _(\"Passphrase\")\n\t                }],\n\t                Action: {\n\t                    Title: _(\"Unlock\"),\n\t                    action: function action(vals) {\n\t                        return crypto.Unlock(vals.passphrase, {});\n\t                    }\n\t                }\n\t            });\n\t        });\n\t    }\n\t\n\t    if (is_crypto) {\n\t        if (client.blocks_cleartext[block.path]) {\n\t            add_action(_(\"Lock\"), lock);\n\t        } else {\n\t            add_action(_(\"Unlock\"), unlock);\n\t        }\n\t    }\n\t\n\t    function activate() {\n\t        return lvol.Activate({});\n\t    }\n\t\n\t    function deactivate() {\n\t        return lvol.Deactivate({});\n\t    }\n\t\n\t    if (lvol) {\n\t        if (lvol.Active) {\n\t            add_action(_(\"Deactivate\"), deactivate);\n\t        } else {\n\t            add_action(_(\"Activate\"), activate);\n\t        }\n\t    }\n\t\n\t    function delete_() {\n\t        var block_part;\n\t\n\t        /* This is called only for logical volumes and partitions\n\t         */\n\t\n\t        if (block) block_part = client.blocks_part[block.path];\n\t\n\t        var name, danger;\n\t\n\t        if (lvol) {\n\t            name = utils.lvol_name(lvol);\n\t            danger = _(\"Deleting a logical volume will delete all data in it.\");\n\t        } else if (block_part) {\n\t            name = utils.block_name(block);\n\t            danger = _(\"Deleting a partition will delete all data in it.\");\n\t        }\n\t\n\t        if (name) {\n\t            var usage = utils.get_active_usage(client, target.path);\n\t\n\t            if (usage.Blocking) {\n\t                dialog.open({ Title: cockpit.format(_(\"$0 is in active use\"), name),\n\t                    Blocking: usage.Blocking,\n\t                    Fields: []\n\t                });\n\t                return;\n\t            }\n\t\n\t            dialog.open({ Title: cockpit.format(_(\"Please confirm deletion of $0\"), name),\n\t                Teardown: usage.Teardown,\n\t                Fields: [],\n\t                Action: {\n\t                    Danger: danger,\n\t                    Title: _(\"Delete\"),\n\t                    action: function action() {\n\t                        return utils.teardown_active_usage(client, usage).then(function () {\n\t                            if (lvol) return lvol.Delete({ 'tear-down': { t: 'b', v: true }\n\t                            });else if (block_part) return block_part.Delete({ 'tear-down': { t: 'b', v: true }\n\t                            });\n\t                        });\n\t                    }\n\t                }\n\t            });\n\t        }\n\t    }\n\t\n\t    if (is_partition || lvol) {\n\t        var excuse = null;\n\t        if (client.is_old_udisks2 && is_crypto && client.blocks_cleartext[block.path]) excuse = _(\"Can't delete while unlocked\");\n\t        add_action(_(\"Delete\"), delete_, excuse);\n\t    }\n\t\n\t    return {\n\t        renderers: tabs,\n\t        actions: [React.createElement(\n\t            \"div\",\n\t            null,\n\t            tab_actions\n\t        )],\n\t        row_action: row_action\n\t    };\n\t}\n\t\n\tfunction block_description(client, block) {\n\t    var usage;\n\t    var block_pvol = client.blocks_pvol[block.path];\n\t\n\t    if (block.IdUsage == \"filesystem\") {\n\t        usage = cockpit.format(C_(\"storage-id-desc\", \"$0 File System\"), block.IdType);\n\t    } else if (block.IdUsage == \"raid\") {\n\t        if (block_pvol && client.vgroups[block_pvol.VolumeGroup]) {\n\t            var vgroup = client.vgroups[block_pvol.VolumeGroup];\n\t            usage = cockpit.format(_(\"Physical volume of $0\"), vgroup.Name);\n\t        } else if (client.mdraids[block.MDRaidMember]) {\n\t            var mdraid = client.mdraids[block.MDRaidMember];\n\t            usage = cockpit.format(_(\"Member of RAID Device $0\"), utils.mdraid_name(mdraid));\n\t        } else if (block.IdType == \"LVM2_member\") {\n\t            usage = _(\"Physical Volume\");\n\t        } else {\n\t            usage = _(\"Member of RAID Device\");\n\t        }\n\t    } else if (block.IdUsage == \"crypto\") {\n\t        usage = C_(\"storage-id-desc\", \"Encrypted data\");\n\t    } else if (block.IdUsage == \"other\") {\n\t        if (block.IdType == \"swap\") {\n\t            usage = C_(\"storage-id-desc\", \"Swap Space\");\n\t        } else {\n\t            usage = C_(\"storage-id-desc\", \"Other Data\");\n\t        }\n\t    } else {\n\t        usage = C_(\"storage-id-desc\", \"Unrecognized Data\");\n\t    }\n\t\n\t    return {\n\t        size: block.Size,\n\t        text: usage\n\t    };\n\t}\n\t\n\tfunction append_row(client, rows, level, key, name, desc, tabs, job_object) {\n\t    // Except in a very few cases, we don't both have a button and\n\t    // a spinner in the same row, so we put them in the same\n\t    // place.\n\t\n\t    var last_column = null;\n\t    if (job_object) last_column = React.createElement(\"span\", { className: \"spinner spinner-sm spinner-inline\",\n\t        style: { visibility: client.path_jobs[job_object] ? \"visible\" : \"hidden\" } });\n\t    if (tabs.row_action) {\n\t        if (last_column) {\n\t            last_column = React.createElement(\n\t                \"span\",\n\t                null,\n\t                last_column,\n\t                tabs.row_action\n\t            );\n\t        } else {\n\t            last_column = tabs.row_action;\n\t        }\n\t    }\n\t\n\t    var cols = [React.createElement(\n\t        \"span\",\n\t        { className: \"content-level-\" + level },\n\t        utils.format_size_and_text(desc.size, desc.text)\n\t    ), { name: name, 'header': true }, { name: last_column, tight: true }];\n\t    rows.push(React.createElement(CockpitListing.ListingRow, { key: key,\n\t        columns: cols,\n\t        tabRenderers: tabs.renderers,\n\t        listingActions: tabs.actions }));\n\t}\n\t\n\tfunction append_non_partitioned_block(client, rows, level, block, is_partition) {\n\t    var desc, tabs;\n\t    var cleartext_block;\n\t\n\t    if (block.IdUsage == 'crypto') cleartext_block = client.blocks_cleartext[block.path];\n\t\n\t    tabs = create_tabs(client, block, is_partition);\n\t    desc = block_description(client, block);\n\t\n\t    append_row(client, rows, level, block.path, utils.block_name(block), desc, tabs, block.path);\n\t\n\t    if (cleartext_block) append_device(client, rows, level + 1, cleartext_block);\n\t}\n\t\n\tfunction append_partitions(client, rows, level, block) {\n\t    var block_ptable = client.blocks_ptable[block.path];\n\t    var device_level = level;\n\t\n\t    var is_dos_partitioned = block_ptable.Type == 'dos';\n\t\n\t    function append_free_space(level, start, size) {\n\t        function create_partition() {\n\t            FormatDialog.format_dialog(client, block.path, start, size, is_dos_partitioned && level <= device_level);\n\t        }\n\t\n\t        var btn = React.createElement(\n\t            StorageButton,\n\t            { onClick: create_partition },\n\t            _(\"Create Partition\")\n\t        );\n\t\n\t        var cols = [React.createElement(\n\t            \"span\",\n\t            { className: \"content-level-\" + level },\n\t            utils.format_size_and_text(size, _(\"Free Space\"))\n\t        ), \"\", { element: btn, tight: true }];\n\t\n\t        rows.push(React.createElement(CockpitListing.ListingRow, { columns: cols }));\n\t    }\n\t\n\t    function append_extended_partition(level, partition) {\n\t        var desc = {\n\t            size: partition.size,\n\t            text: _(\"Extended Partition\")\n\t        };\n\t        var tabs = create_tabs(client, partition.block, true);\n\t        append_row(client, rows, level, partition.block.path, utils.block_name(partition.block), desc, tabs, partition.block.path);\n\t        process_partitions(level + 1, partition.partitions);\n\t    }\n\t\n\t    function process_partitions(level, partitions) {\n\t        var i, p;\n\t        for (i = 0; i < partitions.length; i++) {\n\t            p = partitions[i];\n\t            if (p.type == 'free') append_free_space(level, p.start, p.size);else if (p.type == 'container') append_extended_partition(level, p);else append_non_partitioned_block(client, rows, level, p.block, true);\n\t        }\n\t    }\n\t\n\t    process_partitions(level, utils.get_partitions(client, block));\n\t}\n\t\n\tfunction append_device(client, rows, level, block) {\n\t    if (client.blocks_ptable[block.path]) append_partitions(client, rows, level, block);else append_non_partitioned_block(client, rows, level, block, null);\n\t}\n\t\n\tfunction block_rows(client, block) {\n\t    var rows = [];\n\t    append_device(client, rows, 0, block);\n\t    return rows;\n\t}\n\t\n\tfunction block_content(client, block) {\n\t    if (!block) return null;\n\t\n\t    if (block.Size === 0) return null;\n\t\n\t    function format_disk() {\n\t        var usage = utils.get_active_usage(client, block.path);\n\t\n\t        if (usage.Blocking) {\n\t            dialog.open({ Title: cockpit.format(_(\"$0 is in active use\"), utils.block_name(block)),\n\t                Blocking: usage.Blocking,\n\t                Fields: []\n\t            });\n\t            return;\n\t        }\n\t\n\t        dialog.open({ Title: cockpit.format(_(\"Format Disk $0\"), utils.block_name(block)),\n\t            Teardown: usage.Teardown,\n\t            Fields: [{ SelectOne: \"erase\",\n\t                Title: _(\"Erase\"),\n\t                Options: [{ value: \"no\", Title: _(\"Don't overwrite existing data\") }, { value: \"zero\", Title: _(\"Overwrite existing data with zeros\") }]\n\t            }, { SelectOne: \"type\",\n\t                Title: _(\"Partitioning\"),\n\t                Options: [{ value: \"dos\", Title: _(\"Compatible with all systems and devices (MBR)\") }, { value: \"gpt\", Title: _(\"Compatible with modern system and hard disks > 2TB (GPT)\"),\n\t                    selected: true\n\t                }, { value: \"empty\", Title: _(\"No partitioning\") }]\n\t            }],\n\t            Action: {\n\t                Title: _(\"Format\"),\n\t                Danger: _(\"Formatting a disk will erase all data on it.\"),\n\t                action: function action(vals) {\n\t                    var options = { 'no-block': { t: 'b', v: true },\n\t                        'tear-down': { t: 'b', v: true }\n\t                    };\n\t                    if (vals.erase != \"no\") options.erase = { t: 's', v: vals.erase };\n\t                    return utils.teardown_active_usage(client, usage).then(function () {\n\t                        return block.Format(vals.type, options);\n\t                    });\n\t                }\n\t            }\n\t        });\n\t    }\n\t\n\t    var format_disk_btn = React.createElement(\n\t        \"div\",\n\t        { className: \"pull-right\" },\n\t        React.createElement(\n\t            StorageButton,\n\t            { onClick: format_disk, excuse: block.ReadOnly ? _(\"Device is read-only\") : null },\n\t            _(\"Create partition table\")\n\t        )\n\t    );\n\t\n\t    return React.createElement(\n\t        CockpitListing.Listing,\n\t        { title: _(\"Content\"),\n\t            actions: format_disk_btn },\n\t        block_rows(client, block)\n\t    );\n\t}\n\t\n\tvar Block = React.createClass({\n\t    displayName: \"Block\",\n\t\n\t    render: function render() {\n\t        return block_content(this.props.client, this.props.block);\n\t    }\n\t});\n\t\n\tfunction append_logical_volume_block(client, rows, level, block, lvol) {\n\t    var tabs, desc;\n\t    if (client.blocks_ptable[block.path]) {\n\t        desc = {\n\t            size: block.Size,\n\t            text: lvol.Name\n\t        };\n\t        tabs = create_tabs(client, block, false);\n\t        append_row(client, rows, level, lvol.Name, utils.block_name(block), desc, tabs, block.path);\n\t        append_partitions(client, rows, level + 1, block);\n\t    } else {\n\t        append_non_partitioned_block(client, rows, level, block, false);\n\t    }\n\t}\n\t\n\tfunction append_logical_volume(client, rows, level, lvol) {\n\t    var tabs, desc, block;\n\t\n\t    if (lvol.Type == \"pool\") {\n\t        desc = {\n\t            size: lvol.Size,\n\t            text: _(\"Pool for Thin Volumes\")\n\t        };\n\t        tabs = create_tabs(client, lvol, false);\n\t        append_row(client, rows, level, lvol.Name, lvol.Name, desc, tabs, false);\n\t        client.lvols_pool_members[lvol.path].forEach(function (member_lvol) {\n\t            append_logical_volume(client, rows, level + 1, member_lvol);\n\t        });\n\t    } else {\n\t        block = client.lvols_block[lvol.path];\n\t        if (block) append_logical_volume_block(client, rows, level, block, lvol);else {\n\t            // If we can't find the block for a active\n\t            // volume, Storaged or something below is\n\t            // probably misbehaving, and we show it as\n\t            // \"unsupported\".\n\t\n\t            desc = {\n\t                size: lvol.Size,\n\t                text: lvol.Active ? _(\"Unsupported volume\") : _(\"Inactive volume\")\n\t            };\n\t            tabs = create_tabs(client, lvol, false);\n\t            append_row(client, rows, level, lvol.Name, lvol.Name, desc, tabs, false);\n\t        }\n\t    }\n\t}\n\t\n\tfunction vgroup_rows(client, vgroup) {\n\t    var rows = [];\n\t    (client.vgroups_lvols[vgroup.path] || []).forEach(function (lvol) {\n\t        if (lvol.ThinPool == \"/\") append_logical_volume(client, rows, 0, lvol);\n\t    });\n\t    return rows;\n\t}\n\t\n\tvar VGroup = React.createClass({\n\t    displayName: \"VGroup\",\n\t\n\t    render: function render() {\n\t        var self = this;\n\t        var vgroup = this.props.vgroup;\n\t\n\t        function create_logical_volume() {\n\t            if (vgroup.FreeSize == 0) return;\n\t\n\t            dialog.open({ Title: _(\"Create Logical Volume\"),\n\t                Fields: [{ TextInput: \"name\",\n\t                    Title: _(\"Name\"),\n\t                    Value: next_default_logical_volume_name(self.props.client, vgroup),\n\t                    validate: utils.validate_lvm2_name\n\t                }, { SelectOne: \"purpose\",\n\t                    Title: _(\"Purpose\"),\n\t                    Options: [{ value: \"block\", Title: _(\"Block device for filesystems\"),\n\t                        selected: true\n\t                    }, { value: \"pool\", Title: _(\"Pool for thinly provisioned volumes\")\n\t                        /* Not implemented\n\t                           { value: \"cache\", Title: _(\"Cache\") }\n\t                         */\n\t                    }]\n\t                },\n\t                /* Not Implemented\n\t                   { SelectOne: \"layout\",\n\t                   Title: _(\"Layout\"),\n\t                   Options: [\n\t                   { value: \"linear\", Title: _(\"Linear\"),\n\t                   selected: true\n\t                   },\n\t                   { value: \"striped\", Title: _(\"Striped (RAID 0)\"),\n\t                   enabled: raid_is_possible\n\t                   },\n\t                   { value: \"raid1\", Title: _(\"Mirrored (RAID 1)\"),\n\t                   enabled: raid_is_possible\n\t                   },\n\t                   { value: \"raid10\", Title: _(\"Striped and mirrored (RAID 10)\"),\n\t                   enabled: raid_is_possible\n\t                   },\n\t                   { value: \"raid4\", Title: _(\"With dedicated parity (RAID 4)\"),\n\t                   enabled: raid_is_possible\n\t                   },\n\t                   { value: \"raid5\", Title: _(\"With distributed parity (RAID 5)\"),\n\t                   enabled: raid_is_possible\n\t                   },\n\t                   { value: \"raid6\", Title: _(\"With double distributed parity (RAID 6)\"),\n\t                   enabled: raid_is_possible\n\t                   }\n\t                   ],\n\t                   },\n\t                 */\n\t                { SizeSlider: \"size\",\n\t                    Title: _(\"Size\"),\n\t                    Max: vgroup.FreeSize,\n\t                    Round: vgroup.ExtentSize\n\t                }],\n\t                Action: {\n\t                    Title: _(\"Create\"),\n\t                    action: function action(vals) {\n\t                        if (vals.purpose == \"block\") return vgroup.CreatePlainVolume(vals.name, vals.size, {});else if (vals.purpose == \"pool\") return vgroup.CreateThinPoolVolume(vals.name, vals.size, {});\n\t                    }\n\t                }\n\t            });\n\t        }\n\t\n\t        var excuse = vgroup.FreeSize == 0 && _(\"No free space\");\n\t\n\t        var new_volume_link = React.createElement(\n\t            \"div\",\n\t            { className: \"pull-right\" },\n\t            React.createElement(\n\t                StorageLink,\n\t                { onClick: create_logical_volume,\n\t                    excuse: excuse },\n\t                React.createElement(\"span\", { className: \"pficon pficon-add-circle-o\" }),\n\t                \" \",\n\t                _(\"Create new Logical Volume\")\n\t            )\n\t        );\n\t\n\t        return React.createElement(\n\t            CockpitListing.Listing,\n\t            { title: \"Logical Volumes\",\n\t                actions: new_volume_link,\n\t                emptyCaption: _(\"No Logical Volumes\") },\n\t            vgroup_rows(self.props.client, vgroup)\n\t        );\n\t    }\n\t});\n\t\n\tmodule.exports = {\n\t    Block: Block,\n\t    VGroup: VGroup\n\t};\n\n/***/ },\n/* 35 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar React = __webpack_require__(32);\n\t\n\t__webpack_require__(36);\n\t\n\t/* entry for an alert in the listing, can be expanded (with details) or standard\n\t * rowId optional: an identifier for the row which will be set as \"data-row-id\" attribute on the <tr>\n\t * columns list of columns to show in the header\n\t *     columns to show, can be a string, react component or object with { name: 'name', 'header': false }\n\t *     'header' (or if simple string) defaults to false\n\t *     in case 'header' is true, <th> is used for the entries, otherwise <td>\n\t * tabRenderers optional: list of tab renderers for inline expansion, array of objects with\n\t *     - name tab name (has to be unique in the entry, used as react key)\n\t *     - renderer react component\n\t *     - data render data passed to the tab renderer\n\t *     - presence 'always', 'onlyActive', 'loadOnDemand', default: 'loadOnDemand'\n\t *         - 'always' once a row is expanded, this tab is always rendered, but invisible if not active\n\t *         - 'onlyActive' the tab is only rendered when active\n\t *         - 'loadOnDemand' the tab is first rendered when it becomes active, then follows 'always' behavior\n\t *     if tabRenderers isn't set, item can't be expanded inline\n\t * navigateToItem optional: callback triggered when a row is clicked, pattern suggests navigation\n\t *     to view expanded item details, if not set, navigation isn't available\n\t * listingDetail optional: text rendered next to action buttons, similar style to the tab headers\n\t * listingActions optional: buttons that are presented as actions for the expanded item\n\t * selectChanged optional: callback will be used when the \"selected\" state changes\n\t * selected optional: true if the item is selected, can't be true if row has navigation or expansion\n\t * initiallyExpanded optional: the entry will be initially rendered as expanded, but then behaves normally\n\t */\n\tvar ListingRow = React.createClass({\n\t    displayName: 'ListingRow',\n\t\n\t    propTypes: {\n\t        rowId: React.PropTypes.string,\n\t        columns: React.PropTypes.array.isRequired,\n\t        tabRenderers: React.PropTypes.array,\n\t        navigateToItem: React.PropTypes.func,\n\t        listingDetail: React.PropTypes.node,\n\t        listingActions: React.PropTypes.arrayOf(React.PropTypes.node),\n\t        selectChanged: React.PropTypes.func,\n\t        selected: React.PropTypes.bool,\n\t        initiallyExpanded: React.PropTypes.bool,\n\t        initiallyActiveTab: React.PropTypes.bool\n\t    },\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            tabRenderers: [],\n\t            navigateToItem: null\n\t        };\n\t    },\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            expanded: this.props.initiallyExpanded, // show expanded view if true, otherwise one line compact\n\t            activeTab: this.props.initiallyActiveTab ? this.props.initiallyActiveTab : 0, // currently active tab in expanded mode, defaults to first tab\n\t            loadedTabs: {}, // which tabs were already loaded - this is important for 'loadOnDemand' setting\n\t            // contains tab indices\n\t            selected: this.props.selected // whether the current row is selected\n\t        };\n\t    },\n\t    handleNavigateClick: function handleNavigateClick(e) {\n\t        // only consider primary mouse button\n\t        if (!e || e.button !== 0) return;\n\t        this.props.navigateToItem();\n\t    },\n\t    handleExpandClick: function handleExpandClick(e) {\n\t        // only consider primary mouse button\n\t        if (!e || e.button !== 0) return;\n\t\n\t        var willBeExpanded = !this.state.expanded && this.props.tabRenderers.length > 0;\n\t        this.setState({ expanded: willBeExpanded });\n\t\n\t        var loadedTabs = {};\n\t        // unload all tabs if not expanded\n\t        if (willBeExpanded) {\n\t            // see if we should preload some tabs\n\t            var tabIdx;\n\t            var tabPresence;\n\t            for (tabIdx = 0; tabIdx < this.props.tabRenderers.length; tabIdx++) {\n\t                if ('presence' in this.props.tabRenderers[tabIdx]) tabPresence = this.props.tabRenderers[tabIdx].presence;else tabPresence = 'default';\n\t                // the active tab is covered by separate logic\n\t                if (tabPresence == 'always') loadedTabs[tabIdx] = true;\n\t            }\n\t            // ensure the active tab is loaded\n\t            loadedTabs[this.state.activeTab] = true;\n\t        }\n\t\n\t        this.setState({ loadedTabs: loadedTabs });\n\t\n\t        e.stopPropagation();\n\t        e.preventDefault();\n\t    },\n\t    handleSelectClick: function handleSelectClick(e) {\n\t        // only consider primary mouse button\n\t        if (!e || e.button !== 0) return;\n\t\n\t        var selected = !this.state.selected;\n\t        this.setState({ selected: selected });\n\t\n\t        if (this.props.selectChanged) this.props.selectChanged(selected);\n\t\n\t        e.stopPropagation();\n\t        e.preventDefault();\n\t    },\n\t    handleTabClick: function handleTabClick(tabIdx, e) {\n\t        // only consider primary mouse button\n\t        if (!e || e.button !== 0) return;\n\t        var prevTab = this.state.activeTab;\n\t        var prevTabPresence = 'default';\n\t        var loadedTabs = this.state.loadedTabs;\n\t        if (prevTab !== tabIdx) {\n\t            // see if we need to unload the previous tab\n\t            if ('presence' in this.props.tabRenderers[prevTab]) prevTabPresence = this.props.tabRenderers[prevTab].presence;\n\t\n\t            if (prevTabPresence == 'onlyActive') delete loadedTabs[prevTab];\n\t\n\t            // ensure the new tab is loaded and update state\n\t            loadedTabs[tabIdx] = true;\n\t            this.setState({ loadedTabs: loadedTabs, activeTab: tabIdx });\n\t        }\n\t        e.stopPropagation();\n\t        e.preventDefault();\n\t    },\n\t    render: function render() {\n\t        var self = this;\n\t        // only enable navigation if a function is provided and the row isn't expanded (prevent accidental navigation)\n\t        var allowNavigate = !!this.props.navigateToItem && !this.state.expanded;\n\t\n\t        var headerEntries = this.props.columns.map(function (itm) {\n\t            if (typeof itm === 'string' || typeof itm === 'number' || itm === null || itm === undefined || itm instanceof String || React.isValidElement(itm)) return React.createElement(\n\t                'td',\n\t                null,\n\t                itm\n\t            );else if ('header' in itm && itm.header) return React.createElement(\n\t                'th',\n\t                null,\n\t                itm.name\n\t            );else if ('tight' in itm && itm.tight) return React.createElement(\n\t                'td',\n\t                { className: 'listing-ct-actions' },\n\t                itm.name || itm.element\n\t            );else return React.createElement(\n\t                'td',\n\t                null,\n\t                itm.name\n\t            );\n\t        });\n\t\n\t        var allowExpand = this.props.tabRenderers.length > 0;\n\t        var expandToggle;\n\t        if (allowExpand) {\n\t            expandToggle = React.createElement(\n\t                'td',\n\t                { className: 'listing-ct-toggle', onClick: allowNavigate ? this.handleExpandClick : undefined },\n\t                React.createElement('i', { className: 'fa fa-fw' })\n\t            );\n\t        } else {\n\t            expandToggle = React.createElement('td', { className: 'listing-ct-toggle' });\n\t        }\n\t\n\t        var listingItemClasses = [\"listing-ct-item\"];\n\t        if (!allowNavigate) listingItemClasses.push(\"listing-ct-nonavigate\");\n\t        if (!allowExpand) listingItemClasses.push(\"listing-ct-noexpand\");\n\t\n\t        var allowSelect = !(allowNavigate || allowExpand) && this.state.selected !== undefined;\n\t        var clickHandler;\n\t        if (allowSelect) {\n\t            clickHandler = this.handleSelectClick;\n\t            if (this.state.selected) listingItemClasses.push(\"listing-ct-selected\");\n\t        } else {\n\t            if (allowNavigate) clickHandler = this.handleNavigateClick;else clickHandler = this.handleExpandClick;\n\t        }\n\t\n\t        var listingItem = React.createElement(\n\t            'tr',\n\t            { 'data-row-id': this.props.rowId,\n\t                className: listingItemClasses.join(' '),\n\t                onClick: clickHandler },\n\t            expandToggle,\n\t            headerEntries\n\t        );\n\t\n\t        if (this.state.expanded) {\n\t            var links = this.props.tabRenderers.map(function (itm, idx) {\n\t                return React.createElement(\n\t                    'li',\n\t                    { key: idx, className: idx === self.state.activeTab ? \"active\" : \"\" },\n\t                    React.createElement(\n\t                        'a',\n\t                        { href: '#', onClick: self.handleTabClick.bind(self, idx) },\n\t                        itm.name\n\t                    )\n\t                );\n\t            });\n\t            var tabs = [];\n\t            var tabIdx;\n\t            var Renderer;\n\t            var rendererData;\n\t            var row;\n\t            for (tabIdx = 0; tabIdx < this.props.tabRenderers.length; tabIdx++) {\n\t                Renderer = this.props.tabRenderers[tabIdx].renderer;\n\t                rendererData = this.props.tabRenderers[tabIdx].data;\n\t                if (tabIdx !== this.state.activeTab && !(tabIdx in this.state.loadedTabs)) continue;\n\t                row = React.createElement(Renderer, _extends({ key: this.props.tabRenderers[tabIdx].name, hidden: tabIdx !== this.state.activeTab }, rendererData));\n\t                if (tabIdx === this.state.activeTab) tabs.push(React.createElement(\n\t                    'div',\n\t                    { className: 'listing-ct-body', key: tabIdx },\n\t                    row\n\t                ));else tabs.push(React.createElement(\n\t                    'div',\n\t                    { className: 'listing-ct-body', key: tabIdx, hidden: true },\n\t                    row\n\t                ));\n\t            }\n\t\n\t            var listingDetail;\n\t            if ('listingDetail' in this.props) {\n\t                listingDetail = React.createElement(\n\t                    'span',\n\t                    { className: 'listing-ct-caption' },\n\t                    this.props.listingDetail\n\t                );\n\t            }\n\t\n\t            return React.createElement(\n\t                'tbody',\n\t                { className: 'open' },\n\t                listingItem,\n\t                React.createElement(\n\t                    'tr',\n\t                    { className: 'listing-ct-panel' },\n\t                    React.createElement(\n\t                        'td',\n\t                        { colSpan: headerEntries.length + (expandToggle ? 1 : 0) },\n\t                        React.createElement(\n\t                            'div',\n\t                            { className: 'listing-ct-head' },\n\t                            React.createElement(\n\t                                'div',\n\t                                { className: 'listing-ct-actions' },\n\t                                listingDetail,\n\t                                this.props.listingActions\n\t                            ),\n\t                            React.createElement(\n\t                                'ul',\n\t                                { className: 'nav nav-tabs nav-tabs-pf' },\n\t                                links\n\t                            )\n\t                        ),\n\t                        tabs\n\t                    )\n\t                )\n\t            );\n\t        } else {\n\t            return React.createElement(\n\t                'tbody',\n\t                null,\n\t                listingItem,\n\t                React.createElement('tr', { className: 'listing-ct-panel' })\n\t            );\n\t        }\n\t    }\n\t});\n\t\n\t/* Implements a PatternFly 'List View' pattern\n\t * https://www.patternfly.org/list-view/\n\t * Properties:\n\t * - title\n\t * - fullWidth optional: set width to 100% of parent, defaults to true\n\t * - emptyCaption header caption to show if list is empty, defaults to \"No entries\"\n\t * - columnTitles: array of column titles, as strings\n\t * - actions: additional listing-wide actions (displayed next to the list's title)\n\t */\n\tvar Listing = React.createClass({\n\t    displayName: 'Listing',\n\t\n\t    propTypes: {\n\t        title: React.PropTypes.string.isRequired,\n\t        fullWidth: React.PropTypes.bool,\n\t        emptyCaption: React.PropTypes.string.isRequired,\n\t        columnTitles: React.PropTypes.arrayOf(React.PropTypes.string),\n\t        actions: React.PropTypes.arrayOf(React.PropTypes.node)\n\t    },\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            fullWidth: true,\n\t            columnTitles: [],\n\t            actions: []\n\t        };\n\t    },\n\t    render: function render() {\n\t        var bodyClasses = [\"listing\", \"listing-ct\"];\n\t        if (this.props.fullWidth) bodyClasses.push(\"listing-ct-wide\");\n\t        var headerClasses;\n\t        var headerRow;\n\t        var selectableRows;\n\t        if (!this.props.children || this.props.children.length === 0) {\n\t            headerClasses = \"listing-ct-empty\";\n\t            headerRow = React.createElement(\n\t                'tr',\n\t                null,\n\t                React.createElement(\n\t                    'td',\n\t                    null,\n\t                    this.props.emptyCaption\n\t                )\n\t            );\n\t        } else if (this.props.columnTitles.length) {\n\t            // check if any of the children are selectable\n\t            selectableRows = false;\n\t            this.props.children.forEach(function (r) {\n\t                if (r.props.selected !== undefined) selectableRows = true;\n\t            });\n\t\n\t            if (selectableRows) {\n\t                // now make sure that if one is set, it's available on all items\n\t                this.props.children.forEach(function (r) {\n\t                    if (r.props.selected === undefined) r.props.selected = false;\n\t                });\n\t            }\n\t\n\t            headerRow = React.createElement(\n\t                'tr',\n\t                null,\n\t                React.createElement('th', { className: 'listing-ct-toggle' }),\n\t                this.props.columnTitles.map(function (title) {\n\t                    return React.createElement(\n\t                        'th',\n\t                        null,\n\t                        title\n\t                    );\n\t                })\n\t            );\n\t        } else {\n\t            headerRow = React.createElement('tr', null);\n\t        }\n\t        var caption;\n\t        if (this.props.title || this.props.actions && this.props.actions.length > 0) caption = React.createElement(\n\t            'caption',\n\t            { className: 'cockpit-caption' },\n\t            this.props.title,\n\t            this.props.actions\n\t        );\n\t\n\t        return React.createElement(\n\t            'table',\n\t            { className: bodyClasses.join(\" \") },\n\t            caption,\n\t            React.createElement(\n\t                'thead',\n\t                { className: headerClasses },\n\t                headerRow\n\t            ),\n\t            this.props.children\n\t        );\n\t    }\n\t});\n\t\n\tmodule.exports = {\n\t    ListingRow: ListingRow,\n\t    Listing: Listing\n\t};\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 37 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _cockpitComponentsOnoff = __webpack_require__(38);\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar cockpit = __webpack_require__(7);\n\tvar permission = __webpack_require__(30).permission;\n\tvar utils = __webpack_require__(9);\n\tvar $ = __webpack_require__(6);\n\t\n\tvar React = __webpack_require__(32);\n\tvar Tooltip = __webpack_require__(40).Tooltip;\n\t\n\tvar _ = cockpit.gettext;\n\t\n\t/* StorageControl - a button or similar that triggers\n\t *                  a privileged action.\n\t *\n\t * It can be disabled and will show a tooltip then.  It will\n\t * automatically disable itself when the logged in user doesn't\n\t * have permission.\n\t *\n\t * Properties:\n\t *\n\t * - excuse:  If set, the button/link is disabled and will show the\n\t *            excuse in a tooltip.\n\t */\n\t\n\tvar StorageControl = React.createClass({\n\t    displayName: \"StorageControl\",\n\t\n\t    getInitialState: function getInitialState() {\n\t        return { allowed: permission.allowed !== false };\n\t    },\n\t    onPermissionChanged: function onPermissionChanged() {\n\t        this.setState({ allowed: permission.allowed !== false });\n\t    },\n\t    componentDidMount: function componentDidMount() {\n\t        $(permission).on(\"changed\", this.onPermissionChanged);\n\t    },\n\t    componentWillUnmount: function componentWillUnmount() {\n\t        $(permission).off(\"changed\", this.onPermissionChanged);\n\t    },\n\t    render: function render() {\n\t        var excuse = this.props.excuse;\n\t        if (!this.state.allowed) {\n\t            var markup = {\n\t                __html: cockpit.format(_(\"The user <b>$0</b> is not permitted to manage storage\"), permission.user ? permission.user.name : '')\n\t            };\n\t            excuse = React.createElement(\"span\", { dangerouslySetInnerHTML: markup });\n\t        }\n\t\n\t        return React.createElement(\n\t            Tooltip,\n\t            { tip: excuse },\n\t            this.props.content(excuse)\n\t        );\n\t    }\n\t\n\t});\n\t\n\tfunction checked(callback) {\n\t    return function (event) {\n\t        // only consider primary mouse button\n\t        if (!event || event.button !== 0) return;\n\t        var promise = callback();\n\t        if (promise) promise.fail(function (error) {\n\t            $('#error-popup-title').text(_(\"Error\"));\n\t            $('#error-popup-message').text(error.toString());\n\t            $('#error-popup').modal('show');\n\t        });\n\t        event.stopPropagation();\n\t    };\n\t}\n\t\n\tvar StorageButton = React.createClass({\n\t    displayName: \"StorageButton\",\n\t\n\t    render: function render() {\n\t        var _this = this;\n\t\n\t        return React.createElement(StorageControl, { excuse: this.props.excuse,\n\t            content: function content(excuse) {\n\t                return React.createElement(\n\t                    \"button\",\n\t                    { onClick: checked(_this.props.onClick),\n\t                        className: \"btn btn-default\" + (excuse ? \" disabled\" : \"\") },\n\t                    _this.props.children\n\t                );\n\t            } });\n\t    }\n\t});\n\t\n\tvar StorageLink = React.createClass({\n\t    displayName: \"StorageLink\",\n\t\n\t    render: function render() {\n\t        var _this2 = this;\n\t\n\t        return React.createElement(StorageControl, { excuse: this.props.excuse,\n\t            content: function content(excuse) {\n\t                return React.createElement(\n\t                    \"a\",\n\t                    { onClick: checked(_this2.props.onClick),\n\t                        className: excuse ? \" disabled\" : \"\" },\n\t                    _this2.props.children\n\t                );\n\t            } });\n\t    }\n\t});\n\t\n\t/* StorageBlockNavLink - describe a given block device concisely and\n\t                         allow navigating to its details.\n\t\n\t   Properties:\n\t\n\t   - client\n\t   - block\n\t */\n\t\n\tvar StorageBlockNavLink = React.createClass({\n\t    displayName: \"StorageBlockNavLink\",\n\t\n\t    render: function render() {\n\t        var self = this;\n\t        var client = self.props.client;\n\t        var block = self.props.block;\n\t\n\t        if (!block) return;\n\t\n\t        var path = block.path;\n\t        var is_part, is_crypt, is_lvol;\n\t\n\t        for (;;) {\n\t            if (client.blocks_part[path] && client.blocks_ptable[client.blocks_part[path].Table]) {\n\t                is_part = true;\n\t                path = client.blocks_part[path].Table;\n\t            } else if (client.blocks[path] && client.blocks[client.blocks[path].CryptoBackingDevice]) {\n\t                is_crypt = true;\n\t                path = client.blocks[path].CryptoBackingDevice;\n\t            } else {\n\t                break;\n\t            }\n\t        }\n\t\n\t        block = client.blocks[path];\n\t\n\t        if (client.blocks_lvm2[path] && client.lvols[client.blocks_lvm2[path].LogicalVolume]) is_lvol = true;\n\t\n\t        var name, go;\n\t        if (client.mdraids[block.MDRaid]) {\n\t            name = cockpit.format(_(\"RAID Device $0\"), utils.mdraid_name(client.mdraids[block.MDRaid]));\n\t            go = function go() {\n\t                cockpit.location.go(['mdraid', client.mdraids[block.MDRaid].UUID]);\n\t            };\n\t        } else if (client.blocks_lvm2[path] && client.lvols[client.blocks_lvm2[path].LogicalVolume] && client.vgroups[client.lvols[client.blocks_lvm2[path].LogicalVolume].VolumeGroup]) {\n\t            var vg = client.vgroups[client.lvols[client.blocks_lvm2[path].LogicalVolume].VolumeGroup].Name;\n\t            name = cockpit.format(_(\"Volume Group $0\"), vg);\n\t            go = function go() {\n\t                console.location.go(['vg', vg]);\n\t            };\n\t        } else {\n\t            if (client.drives[block.Drive]) name = utils.drive_name(client.drives[block.Drive]);else name = utils.block_name(block);\n\t            go = function go() {\n\t                cockpit.location.go([utils.block_name(block).replace(/^\\/dev\\//, \"\")]);\n\t            };\n\t        }\n\t\n\t        var link = React.createElement(\n\t            \"a\",\n\t            { onClick: go },\n\t            name\n\t        );\n\t\n\t        // TODO - generalize this to arbitrary number of arguments (when needed)\n\t        function fmt_to_array(fmt, arg) {\n\t            var index = fmt.indexOf(\"$0\");\n\t            if (index >= 0) return [fmt.slice(0, index), arg, fmt.slice(index + 2)];else return [fmt];\n\t        }\n\t\n\t        if (is_lvol && is_crypt) return React.createElement(\n\t            \"span\",\n\t            null,\n\t            fmt_to_array(_(\"Encrypted Logical Volume of $0\"), link)\n\t        );else if (is_part && is_crypt) return React.createElement(\n\t            \"span\",\n\t            null,\n\t            fmt_to_array(_(\"Encrypted Partition of $0\"), link)\n\t        );else if (is_lvol) return React.createElement(\n\t            \"span\",\n\t            null,\n\t            fmt_to_array(_(\"Logical Volume of $0\"), link)\n\t        );else if (is_part) return React.createElement(\n\t            \"span\",\n\t            null,\n\t            fmt_to_array(_(\"Partition of $0\"), link)\n\t        );else if (is_crypt) return React.createElement(\n\t            \"span\",\n\t            null,\n\t            fmt_to_array(_(\"Encrypted $0\"), link)\n\t        );else return link;\n\t    }\n\t});\n\t\n\t// StorageOnOff - OnOff switch for asynchronous actions.\n\t//\n\t\n\tvar StorageOnOff = function (_React$Component) {\n\t    _inherits(StorageOnOff, _React$Component);\n\t\n\t    function StorageOnOff() {\n\t        _classCallCheck(this, StorageOnOff);\n\t\n\t        var _this3 = _possibleConstructorReturn(this, (StorageOnOff.__proto__ || Object.getPrototypeOf(StorageOnOff)).call(this));\n\t\n\t        _this3.state = { promise: null };\n\t        return _this3;\n\t    }\n\t\n\t    _createClass(StorageOnOff, [{\n\t        key: \"render\",\n\t        value: function render() {\n\t            var _this4 = this;\n\t\n\t            var self = this;\n\t\n\t            function onChange(val) {\n\t                var promise = self.props.onChange(val);\n\t                if (promise) {\n\t                    promise.always(function () {\n\t                        self.setState({ promise: null });\n\t                    });\n\t                    promise.fail(function (error) {\n\t                        $('#error-popup-title').text(_(\"Error\"));\n\t                        $('#error-popup-message').text(error.toString());\n\t                        $('#error-popup').modal('show');\n\t                    });\n\t                }\n\t\n\t                self.setState({ promise: promise, promise_goal_state: val });\n\t            }\n\t\n\t            return React.createElement(StorageControl, { excuse: this.props.excuse,\n\t                content: function content(excuse) {\n\t                    return React.createElement(_cockpitComponentsOnoff.OnOffSwitch, { state: _this4.state.promise ? _this4.state.promise_goal_state : _this4.props.state,\n\t                        enabled: !excuse && !_this4.state.promise,\n\t                        onChange: onChange });\n\t                } });\n\t        }\n\t    }]);\n\t\n\t    return StorageOnOff;\n\t}(React.Component);\n\t\n\tvar StorageMultiAction = function (_React$Component2) {\n\t    _inherits(StorageMultiAction, _React$Component2);\n\t\n\t    function StorageMultiAction() {\n\t        _classCallCheck(this, StorageMultiAction);\n\t\n\t        return _possibleConstructorReturn(this, (StorageMultiAction.__proto__ || Object.getPrototypeOf(StorageMultiAction)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(StorageMultiAction, [{\n\t        key: \"render\",\n\t        value: function render() {\n\t            var _this6 = this;\n\t\n\t            var dflt = this.props.actions[this.props.default];\n\t\n\t            return React.createElement(StorageControl, { excuse: this.props.excuse,\n\t                content: function content(excuse) {\n\t                    var btn_classes = \"btn btn-default\";\n\t                    if (excuse) btn_classes += \" disabled\";\n\t                    return React.createElement(\n\t                        \"div\",\n\t                        { className: \"btn-group\" },\n\t                        React.createElement(\n\t                            \"button\",\n\t                            { className: btn_classes, onClick: checked(dflt.action) },\n\t                            dflt.title\n\t                        ),\n\t                        React.createElement(\n\t                            \"button\",\n\t                            { className: btn_classes + \" dropdown-toggle\",\n\t                                \"data-toggle\": \"dropdown\" },\n\t                            React.createElement(\"span\", { className: \"caret\" })\n\t                        ),\n\t                        React.createElement(\n\t                            \"ul\",\n\t                            { className: \"dropdown-menu action-dropdown-menu\", role: \"menu\" },\n\t                            _this6.props.actions.map(function (act) {\n\t                                return React.createElement(\n\t                                    \"li\",\n\t                                    { className: \"presentation\" },\n\t                                    React.createElement(\n\t                                        \"a\",\n\t                                        { role: \"menuitem\", onClick: checked(act.action) },\n\t                                        act.title\n\t                                    )\n\t                                );\n\t                            })\n\t                        )\n\t                    );\n\t                } });\n\t        }\n\t    }]);\n\t\n\t    return StorageMultiAction;\n\t}(React.Component);\n\t\n\tmodule.exports = {\n\t    StorageButton: StorageButton,\n\t    StorageLink: StorageLink,\n\t    StorageBlockNavLink: StorageBlockNavLink,\n\t    StorageOnOff: StorageOnOff,\n\t    StorageMultiAction: StorageMultiAction\n\t};\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2017 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar cockpit = __webpack_require__(7);\n\tvar React = __webpack_require__(32);\n\tvar _ = cockpit.gettext;\n\t\n\t__webpack_require__(39);\n\t\n\t/* Component to show an on/off switch\n\t * state      boolean value (off or on)\n\t * captionOff optional string, default 'Off'\n\t * captionOn  optional string, default 'On'\n\t * onChange   triggered when the switch is flipped, parameter: new state\n\t * enabled    whether the component is enabled or not, defaults to true\n\t */\n\tvar OnOffSwitch = React.createClass({\n\t    displayName: \"OnOffSwitch\",\n\t\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            captionOff: _(\"Off\"),\n\t            captionOn: _(\"On\"),\n\t            enabled: true\n\t        };\n\t    },\n\t    handleOnOffClick: function handleOnOffClick(newState, e) {\n\t        // only consider primary mouse button\n\t        if (!e || e.button !== 0) return;\n\t        // only notify if the component is enabled\n\t        if (this.props.onChange && this.props.enabled) this.props.onChange(newState);\n\t        e.stopPropagation();\n\t    },\n\t    render: function render() {\n\t        var onClasses = [\"btn\"];\n\t        var offClasses = [\"btn\"];\n\t        if (this.props.state) onClasses.push(\"active\");else offClasses.push(\"active\");\n\t        if (!this.props.enabled) {\n\t            onClasses.push(\"disabled\");\n\t            offClasses.push(\"disabled\");\n\t        }\n\t        var clickHandler = this.handleOnOffClick.bind(this, !this.props.state);\n\t        return React.createElement(\n\t            \"div\",\n\t            { className: \"btn-group btn-onoff-ct\", enabled: this.props.enabled },\n\t            React.createElement(\n\t                \"label\",\n\t                { className: onClasses.join(\" \") },\n\t                React.createElement(\"input\", { type: \"radio\" }),\n\t                React.createElement(\n\t                    \"span\",\n\t                    { onClick: clickHandler },\n\t                    this.props.captionOn\n\t                )\n\t            ),\n\t            React.createElement(\n\t                \"label\",\n\t                { className: offClasses.join(\" \") },\n\t                React.createElement(\"input\", { type: \"radio\" }),\n\t                React.createElement(\n\t                    \"span\",\n\t                    { onClick: clickHandler },\n\t                    this.props.captionOff\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tmodule.exports = {\n\t    OnOffSwitch: OnOffSwitch\n\t};\n\n/***/ },\n/* 39 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 40 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar React = __webpack_require__(32);\n\t\n\t__webpack_require__(41);\n\t\n\t/* A tooltip, styled via Patternfly/Bootstrap.\n\t *\n\t * Example:\n\t *\n\t *   <Tooltip tip=\"Insufficient privileges\">\n\t *      <button disabled>Reboot</button>\n\t *   </ToolTip>\n\t *\n\t * Whenever the mouse hovers over the children of a Tooltip,\n\t * the text (or arbitrary element) in the \"tip\" property is shown.\n\t */\n\t\n\tvar Tooltip = React.createClass({\n\t    displayName: 'Tooltip',\n\t\n\t    getInitialState: function getInitialState() {\n\t        return { open: false, pos: \"top\" };\n\t    },\n\t    onMouseover: function onMouseover() {\n\t        this.setState({ open: true });\n\t    },\n\t    onMouseout: function onMouseout() {\n\t        this.setState({ open: false });\n\t    },\n\t    render: function render() {\n\t        var self = this;\n\t\n\t        if (!self.props.tip) return self.props.children;\n\t\n\t        /* Placement\n\t         *\n\t         * We assume that there is enough space to display the tooltip\n\t         * in its natural width, and that there is either enough space\n\t         * above or below the element that will show the tooltip.\n\t         *\n\t         * If there is enough space above, the tooltip goes to the\n\t         * top, otherwise below.  It is then moved left or right until\n\t         * it is fully visible.\n\t         */\n\t\n\t        /* The life of a tooltip\n\t         *\n\t         * The tooltip starts out at position (-10000,0) so that it is\n\t         * well outside its parent.  This seems to give it its natural\n\t         * width without the browser trying to fit it into the parent,\n\t         * which usually results in a undesired tall and narrow\n\t         * layout.\n\t         *\n\t         * On first interaction and before moving it into place, we\n\t         * prevent the tooltip from resizing by setting the \"width\"\n\t         * and \"height\" styles to its current dimensions.\n\t         *\n\t         * Once moved into place, it stays where it is and is just\n\t         * raised and lowered in the Z dimension in addition to being\n\t         * made visible and invisible.\n\t         */\n\t\n\t        function fixDOMElements(tip) {\n\t            var child = tip && tip.previousElementSibling;\n\t\n\t            // Do nothing unless fully mounted\n\t            if (!tip || !child) return;\n\t\n\t            // Stop resizing\n\t            if ((!tip.style.width || !tip.style.height) && tip.offsetWidth > 0) {\n\t                tip.style.width = tip.offsetWidth + \"px\";\n\t                tip.style.height = tip.offsetHeight + \"px\";\n\t            }\n\t\n\t            // Position it\n\t            if (tip.offsetLeft === -10000) {\n\t                var left = child.offsetLeft + 0.5 * child.offsetWidth - 0.5 * tip.offsetWidth;\n\t                var top = child.offsetTop - tip.offsetHeight;\n\t\n\t                var arrow = tip.getElementsByClassName(\"tooltip-arrow\")[0];\n\t                var arrow_left = tip.offsetWidth / 2;\n\t\n\t                // Figure out where it is on the page\n\t                var abs_left = left,\n\t                    abs_top = top,\n\t                    max_width = child.offsetWidth;\n\t                var el = tip.offsetParent;\n\t                while (el) {\n\t                    abs_left += el.offsetLeft;\n\t                    abs_top += el.offsetTop;\n\t                    max_width = el.offsetWidth;\n\t                    el = el.offsetParent;\n\t                }\n\t\n\t                // Move it left/right until it is full in view\n\t                var x_delta = 0;\n\t                if (abs_left < 0) x_delta = -abs_left + 5;else if (abs_left + tip.offsetWidth > max_width) x_delta = -(abs_left + tip.offsetWidth - max_width) - 5;\n\t                left += x_delta;\n\t                arrow_left -= x_delta;\n\t\n\t                // Move it to bottom if abs_top < 0\n\t                if (abs_top < 0) {\n\t                    top = child.offsetTop + child.offsetHeight;\n\t                    self.setState({ pos: \"bottom\" });\n\t                }\n\t\n\t                tip.style.left = left + \"px\";\n\t                tip.style.top = top + \"px\";\n\t                arrow.style.left = arrow_left + \"px\";\n\t            }\n\t\n\t            tip.style.zIndex = self.state.open ? 2000 : -2000;\n\t        }\n\t\n\t        var classes = \"tooltip \" + self.state.pos;\n\t        if (self.state.open) classes += \" in\";\n\t\n\t        return React.createElement(\n\t            'div',\n\t            { className: 'tooltip-ct-outer' },\n\t            React.createElement(\n\t                'div',\n\t                { className: 'tooltip-ct-inner',\n\t                    onMouseover: this.onMouseover,\n\t                    onMouseout: this.onMouseout },\n\t                self.props.children\n\t            ),\n\t            React.createElement(\n\t                'div',\n\t                { ref: fixDOMElements, className: classes, style: { top: 0, left: -10000 } },\n\t                React.createElement('div', { className: 'tooltip-arrow' }),\n\t                React.createElement(\n\t                    'div',\n\t                    { className: 'tooltip-inner' },\n\t                    self.props.tip\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tmodule.exports = {\n\t    Tooltip: Tooltip\n\t};\n\n/***/ },\n/* 41 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar cockpit = __webpack_require__(7);\n\tvar utils = __webpack_require__(9);\n\tvar dialog = __webpack_require__(26);\n\t\n\tvar React = __webpack_require__(32);\n\tvar StorageControls = __webpack_require__(37);\n\t\n\tvar _ = cockpit.gettext;\n\t\n\tfunction parse_options(options) {\n\t    if (options) return options.split(\",\").map(function (s) {\n\t        return s.trim();\n\t    }).filter(function (s) {\n\t        return s != \"\";\n\t    });else return [];\n\t}\n\t\n\tfunction unparse_options(split) {\n\t    return split.join(\",\");\n\t}\n\t\n\tfunction extract_option(split, opt) {\n\t    var index = split.indexOf(opt);\n\t    if (index >= 0) {\n\t        split.splice(index, 1);\n\t        return true;\n\t    } else {\n\t        return false;\n\t    }\n\t}\n\t\n\tfunction mounting_dialog_fields(is_custom, mount_dir, mount_options, _visible) {\n\t\n\t    if (!_visible) _visible = function visible() {\n\t        return true;\n\t    };\n\t\n\t    var split_options = parse_options(mount_options == \"defaults\" ? \"\" : mount_options);\n\t    var opt_auto = !extract_option(split_options, \"noauto\");\n\t    var opt_ro = extract_option(split_options, \"ro\");\n\t    var extra_options = unparse_options(split_options);\n\t\n\t    return [{ SelectOne: \"mounting\",\n\t        Title: _(\"Mounting\"),\n\t        Options: [{ value: \"default\", Title: _(\"Default\"), selected: !is_custom }, { value: \"custom\", Title: _(\"Custom\"), selected: is_custom }],\n\t        visible: _visible\n\t    }, { TextInput: \"mount_point\",\n\t        Title: _(\"Mount Point\"),\n\t        Value: mount_dir,\n\t        visible: function visible(vals) {\n\t            return _visible(vals) && vals.mounting == \"custom\";\n\t        },\n\t        validate: function validate(val) {\n\t            if (val.trim() == \"\") return _(\"Mount point can not be empty\");\n\t        }\n\t    }, { RowTitle: _(\"Mount options\"),\n\t        CheckBox: \"mount_auto\",\n\t        Title: _(\"Mount at boot\"),\n\t        Value: opt_auto,\n\t        visible: function visible(vals) {\n\t            return _visible(vals) && vals.mounting == \"custom\";\n\t        },\n\t        update: function update(vals, trigger) {\n\t            if (trigger == \"crypto_options_auto\" && vals.crypto_options_auto == false) return false;else return vals.mount_auto;\n\t        }\n\t    }, { CheckBox: \"mount_ro\",\n\t        Title: _(\"Mount read only\"),\n\t        Value: opt_ro,\n\t        visible: function visible(vals) {\n\t            return _visible(vals) && vals.mounting == \"custom\";\n\t        },\n\t        update: function update(vals, trigger) {\n\t            if (trigger == \"crypto_options_ro\" && vals.crypto_options_ro == true) return true;else return vals.mount_ro;\n\t        }\n\t    }, { CheckBoxText: \"mount_extra_options\",\n\t        Title: _(\"Custom mount options\"),\n\t        Value: extra_options == \"\" ? false : extra_options,\n\t        visible: function visible(vals) {\n\t            return _visible(vals) && vals.mounting == \"custom\";\n\t        }\n\t    }];\n\t}\n\t\n\tfunction mounting_dialog_options(vals) {\n\t    var opts = [];\n\t    if (!vals.mount_auto) opts.push(\"noauto\");\n\t    if (vals.mount_ro) opts.push(\"ro\");\n\t    if (vals.mount_extra_options !== false) opts = opts.concat(parse_options(vals.mount_extra_options));\n\t    return unparse_options(opts);\n\t}\n\t\n\tfunction crypto_options_dialog_fields(options, visible) {\n\t    var split_options = parse_options(options);\n\t    var opt_auto = !extract_option(split_options, \"noauto\");\n\t    var opt_ro = extract_option(split_options, \"readonly\");\n\t    var extra_options = unparse_options(split_options);\n\t\n\t    return [{ RowTitle: _(\"Encryption Options\"),\n\t        CheckBox: \"crypto_options_auto\",\n\t        Title: _(\"Unlock at boot\"),\n\t        Value: opt_auto,\n\t        visible: visible\n\t    }, { CheckBox: \"crypto_options_ro\",\n\t        Title: _(\"Unlock read only\"),\n\t        Value: opt_ro,\n\t        visible: visible\n\t    }, { CheckBoxText: \"crypto_extra_options\",\n\t        Title: _(\"Custom encryption options\"),\n\t        Value: extra_options == \"\" ? false : extra_options,\n\t        visible: visible\n\t    }];\n\t}\n\t\n\tfunction crypto_options_dialog_options(vals) {\n\t    var opts = [];\n\t    if (!vals.crypto_options_auto) opts.push(\"noauto\");\n\t    if (vals.crypto_options_ro) opts.push(\"readonly\");\n\t    if (vals.crypto_extra_options !== false) opts = opts.concat(parse_options(vals.crypto_extra_options));\n\t    return unparse_options(opts);\n\t}\n\t\n\tfunction format_dialog(client, path, start, size, enable_dos_extended) {\n\t    var block = client.blocks[path];\n\t    var block_ptable = client.blocks_ptable[path];\n\t\n\t    var create_partition = start !== undefined;\n\t\n\t    var title;\n\t    if (create_partition) title = cockpit.format(_(\"Create partition on $0\"), utils.block_name(block));else title = cockpit.format(_(\"Format $0\"), utils.block_name(block));\n\t\n\t    function is_encrypted(vals) {\n\t        return vals.type == \"luks+xfs\" || vals.type == \"luks+ext4\";\n\t    }\n\t\n\t    function is_filesystem(vals) {\n\t        return vals.type != \"empty\" && vals.type != \"dos-extended\";\n\t    }\n\t\n\t    /* Older UDisks2 implementation don't have good\n\t     * enough support for maintaining fstab and crypptab, so\n\t     * we do n't offer that in the UI.  (Most importantly, they\n\t     * miss the 'tear-down' option and without that we'll end\n\t     * up with obsolete fstab files all the time, which will\n\t     * break the next boot.)\n\t     */\n\t\n\t    function is_encrypted_and_not_old_udisks2(vals) {\n\t        return !client.is_old_udisks2 && is_encrypted(vals);\n\t    }\n\t\n\t    function is_filesystem_and_not_old_udisks2(vals) {\n\t        return !client.is_old_udisks2 && is_filesystem(vals);\n\t    }\n\t\n\t    /* Older UDisks2 implementations don't have\n\t     * CreateAndFormatPartition, so we simulate that.\n\t     */\n\t\n\t    function create_partition_and_format(ptable, start, size, part_type, part_name, part_options, type, options) {\n\t        if (!client.is_old_udisks2) return ptable.CreatePartitionAndFormat(start, size, part_type, part_name, part_options, type, options);\n\t\n\t        return ptable.CreatePartition(start, size, part_type, part_name, part_options).then(function (partition) {\n\t            // We don't use client.blocks[partition] here\n\t            // because it might temporarily not exist.  In\n\t            // that case, we prefer storaged to tell us in a\n\t            // D-Bus error instead of causing a JavaScript\n\t            // exception.\n\t            //\n\t            // See https://github.com/cockpit-project/cockpit/issues/4181\n\t            return client.call(partition, \"Block\", \"Format\", [type, options]).then(function () {\n\t                return partition;\n\t            });\n\t        });\n\t    }\n\t\n\t    function add_fsys(storaged_name, entry) {\n\t        if (storaged_name === true || !client.manager.SupportedFilesystems || client.manager.SupportedFilesystems.indexOf(storaged_name) != -1) filesystem_options.push(entry);\n\t    }\n\t\n\t    var filesystem_options = [];\n\t    add_fsys(\"xfs\", { value: \"xfs\", Title: _(\"XFS - Red Hat Enterprise Linux 7 default\") });\n\t    add_fsys(\"ext4\", { value: \"ext4\", Title: _(\"ext4 - Red Hat Enterprise Linux 6 default\") });\n\t    add_fsys(\"xfs\", { value: \"luks+xfs\", Title: _(\"Encrypted XFS (LUKS)\") });\n\t    add_fsys(\"ext4\", { value: \"luks+ext4\", Title: _(\"Encrypted EXT4 (LUKS)\") });\n\t    add_fsys(\"vfat\", { value: \"vfat\", Title: _(\"VFAT - Compatible with all systems and devices\") });\n\t    add_fsys(\"ntfs\", { value: \"ntfs\", Title: _(\"NTFS - Compatible with most systems\") });\n\t    add_fsys(true, { value: \"dos-extended\", Title: _(\"Extended Partition\"),\n\t        disabled: !(create_partition && enable_dos_extended) });\n\t    add_fsys(true, { value: \"empty\", Title: _(\"No Filesystem\") });\n\t    add_fsys(true, { value: \"custom\", Title: _(\"Custom (Enter filesystem type)\") });\n\t\n\t    var usage = utils.get_active_usage(client, create_partition ? null : path);\n\t\n\t    if (usage.Blocking) {\n\t        dialog.open({ Title: cockpit.format(_(\"$0 is in active use\"), utils.block_name(block)),\n\t            Blocking: usage.Blocking,\n\t            Fields: []\n\t        });\n\t        return;\n\t    }\n\t\n\t    dialog.open({ Title: title,\n\t        Teardown: usage.Teardown,\n\t        Fields: [{ SizeSlider: \"size\",\n\t            Title: _(\"Size\"),\n\t            Value: size,\n\t            Max: size,\n\t            visible: function visible() {\n\t                return create_partition;\n\t            }\n\t        }, { SelectOne: \"erase\",\n\t            Title: _(\"Erase\"),\n\t            Options: [{ value: \"no\", Title: _(\"Don't overwrite existing data\") }, { value: \"zero\", Title: _(\"Overwrite existing data with zeros\") }]\n\t        }, { SelectOne: \"type\",\n\t            Title: _(\"Type\"),\n\t            Options: filesystem_options\n\t        }, { TextInput: \"name\",\n\t            Title: _(\"Name\"),\n\t            visible: is_filesystem\n\t        }, { TextInput: \"custom\",\n\t            Title: _(\"Filesystem type\"),\n\t            visible: function visible(vals) {\n\t                return vals.type == \"custom\";\n\t            }\n\t        }, { PassInput: \"passphrase\",\n\t            Title: _(\"Passphrase\"),\n\t            validate: function validate(phrase) {\n\t                if (phrase === \"\") return _(\"Passphrase cannot be empty\");\n\t            },\n\t            visible: is_encrypted\n\t        }, { PassInput: \"passphrase2\",\n\t            Title: _(\"Confirm passphrase\"),\n\t            validate: function validate(phrase2, vals) {\n\t                if (phrase2 != vals.passphrase) return _(\"Passphrases do not match\");\n\t            },\n\t            visible: is_encrypted\n\t        }, { CheckBox: \"store_passphrase\",\n\t            Title: _(\"Store passphrase\"),\n\t            visible: is_encrypted_and_not_old_udisks2\n\t        }].concat(crypto_options_dialog_fields(\"\", is_encrypted_and_not_old_udisks2)).concat(mounting_dialog_fields(false, \"\", \"\", is_filesystem_and_not_old_udisks2)),\n\t        Action: {\n\t            Title: create_partition ? _(\"Create partition\") : _(\"Format\"),\n\t            Danger: create_partition ? null : _(\"Formatting a storage device will erase all data on it.\"),\n\t            action: function action(vals) {\n\t                if (vals.type == \"custom\") vals.type = vals.custom;\n\t\n\t                var options = { 'no-block': { t: 'b', v: true },\n\t                    'dry-run-first': { t: 'b', v: true },\n\t                    'tear-down': { t: 'b', v: true }\n\t                };\n\t                if (vals.erase != \"no\") options.erase = { t: 's', v: vals.erase };\n\t                if (vals.name) options.label = { t: 's', v: vals.name };\n\t\n\t                var config_items = [];\n\t                var mount_options = mounting_dialog_options(vals);\n\t                if (vals.mounting == \"custom\") config_items.push([\"fstab\", {\n\t                    dir: { t: 'ay', v: utils.encode_filename(vals.mount_point) },\n\t                    type: { t: 'ay', v: utils.encode_filename(\"auto\") },\n\t                    opts: { t: 'ay', v: utils.encode_filename(mount_options || \"defaults\") },\n\t                    freq: { t: 'i', v: 0 },\n\t                    passno: { t: 'i', v: 0 },\n\t                    \"track-parents\": { t: 'b', v: true }\n\t                }]);\n\t\n\t                var crypto_options = crypto_options_dialog_options(vals);\n\t                if (is_encrypted(vals)) {\n\t                    vals.type = vals.type.replace(\"luks+\", \"\");\n\t                    options[\"encrypt.passphrase\"] = { t: 's', v: vals.passphrase };\n\t\n\t                    var item = {\n\t                        options: { t: 'ay', v: utils.encode_filename(crypto_options) },\n\t                        \"track-parents\": { t: 'b', v: true }\n\t                    };\n\t                    if (vals.store_passphrase) {\n\t                        item[\"passphrase-contents\"] = { t: 'ay', v: utils.encode_filename(vals.passphrase) };\n\t                    } else {\n\t                        item[\"passphrase-contents\"] = { t: 'ay', v: utils.encode_filename(\"\") };\n\t                    }\n\t                    config_items.push([\"crypttab\", item]);\n\t                }\n\t\n\t                if (config_items.length > 0) options[\"config-items\"] = { t: 'a(sa{sv})', v: config_items };\n\t\n\t                function format() {\n\t                    if (create_partition) {\n\t                        if (vals.type == \"dos-extended\") return block_ptable.CreatePartition(start, vals.size, \"0x05\", \"\", {});else if (vals.type == \"empty\") return block_ptable.CreatePartition(start, vals.size, \"\", \"\", {});else return create_partition_and_format(block_ptable, start, vals.size, \"\", \"\", {}, vals.type, options);\n\t                    } else {\n\t                        return block.Format(vals.type, options);\n\t                    }\n\t                }\n\t\n\t                return utils.teardown_active_usage(client, usage).then(format);\n\t            }\n\t        }\n\t    });\n\t}\n\t\n\tvar FormatButton = React.createClass({\n\t    displayName: \"FormatButton\",\n\t\n\t    onClick: function onClick() {\n\t        format_dialog(this.props.client, this.props.block.path);\n\t    },\n\t    render: function render() {\n\t        return React.createElement(\n\t            StorageControls.StorageButton,\n\t            { onClick: this.onClick,\n\t                excuse: this.props.block.ReadOnly ? _(\"Device is read-only\") : null },\n\t            _(\"Format\")\n\t        );\n\t    }\n\t});\n\t\n\tmodule.exports = {\n\t    mounting_dialog_fields: mounting_dialog_fields,\n\t    mounting_dialog_options: mounting_dialog_options,\n\t    crypto_options_dialog_fields: crypto_options_dialog_fields,\n\t    crypto_options_dialog_options: crypto_options_dialog_options,\n\t    format_dialog: format_dialog,\n\t    FormatButton: FormatButton\n\t};\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar cockpit = __webpack_require__(7);\n\tvar dialog = __webpack_require__(26);\n\tvar utils = __webpack_require__(9);\n\tvar $ = __webpack_require__(6);\n\t\n\tvar React = __webpack_require__(32);\n\tvar StorageControls = __webpack_require__(37);\n\tvar FormatDialog = __webpack_require__(42);\n\t\n\tvar StorageButton = StorageControls.StorageButton;\n\tvar StorageLink = StorageControls.StorageLink;\n\tvar FormatButton = FormatDialog.FormatButton;\n\t\n\tvar _ = cockpit.gettext;\n\t\n\tvar FilesystemTab = React.createClass({\n\t    displayName: \"FilesystemTab\",\n\t\n\t    onSamplesChanged: function onSamplesChanged() {\n\t        this.setState({});\n\t    },\n\t    componentDidMount: function componentDidMount() {\n\t        $(this.props.client.fsys_sizes).on(\"changed\", this.onSamplesChanged);\n\t    },\n\t    componentWillUnmount: function componentWillUnmount() {\n\t        $(this.props.client.fsys_sizes).off(\"changed\", this.onSamplesChanged);\n\t    },\n\t    render: function render() {\n\t        var self = this;\n\t        var block = self.props.block;\n\t        var block_fsys = block && self.props.client.blocks_fsys[block.path];\n\t        var is_filesystem_mounted = block_fsys && block_fsys.MountPoints.length > 0;\n\t        var used;\n\t\n\t        if (is_filesystem_mounted) {\n\t            var m = utils.decode_filename(block_fsys.MountPoints[0]);\n\t            var samples = self.props.client.fsys_sizes.data[m];\n\t            if (samples) used = cockpit.format(_(\"$0 of $1\"), utils.fmt_size(samples[0]), utils.fmt_size(samples[1]));else used = _(\"Unknown\");\n\t        } else {\n\t            used = \"-\";\n\t        }\n\t\n\t        function rename_dialog() {\n\t            dialog.open({ Title: _(\"Filesystem Name\"),\n\t                Fields: [{ TextInput: \"name\",\n\t                    Title: _(\"Name\"),\n\t                    Value: block.IdLabel\n\t                }],\n\t                Action: {\n\t                    Title: _(\"Apply\"),\n\t                    action: function action(vals) {\n\t                        return block_fsys.SetLabel(vals.name, {});\n\t                    }\n\t                }\n\t            });\n\t        }\n\t\n\t        var old_config, old_dir, old_opts;\n\t\n\t        old_config = utils.array_find(block.Configuration, function (c) {\n\t            return c[0] == \"fstab\";\n\t        });\n\t        if (old_config) {\n\t            old_dir = utils.decode_filename(old_config[1].dir.v);\n\t            old_opts = utils.decode_filename(old_config[1].opts.v).split(\",\").filter(function (s) {\n\t                return s.indexOf(\"x-parent\") !== 0;\n\t            }).join(\",\");\n\t        }\n\t\n\t        var mounted_at = block_fsys ? block_fsys.MountPoints.map(utils.decode_filename) : [];\n\t\n\t        function maybe_update_config(new_is_custom, new_dir, new_opts) {\n\t            var new_config = null;\n\t            if (new_is_custom) {\n\t                new_config = [\"fstab\", {\n\t                    dir: { t: 'ay', v: utils.encode_filename(new_dir) },\n\t                    type: { t: 'ay', v: utils.encode_filename(\"auto\") },\n\t                    opts: { t: 'ay', v: utils.encode_filename(new_opts || \"defaults\") },\n\t                    freq: { t: 'i', v: 0 },\n\t                    passno: { t: 'i', v: 0 },\n\t                    \"track-parents\": { t: 'b', v: true }\n\t                }];\n\t            }\n\t\n\t            if (!old_config && new_config) return block.AddConfigurationItem(new_config, {});else if (old_config && !new_config) return block.RemoveConfigurationItem(old_config, {});else if (old_config && new_config && (new_dir != old_dir || new_opts != old_opts)) return block.UpdateConfigurationItem(old_config, new_config, {});\n\t        }\n\t\n\t        function mounting_dialog() {\n\t            dialog.open({ Title: _(\"Filesystem Mounting\"),\n\t                Fields: FormatDialog.mounting_dialog_fields(!!old_config, old_dir, old_opts),\n\t                Action: {\n\t                    Title: _(\"Apply\"),\n\t                    action: function action(vals) {\n\t                        return maybe_update_config(vals.mounting == \"custom\", vals.mount_point, FormatDialog.mounting_dialog_options(vals));\n\t                    }\n\t                }\n\t            });\n\t        }\n\t\n\t        function mount() {\n\t            return block_fsys.Mount({});\n\t        }\n\t\n\t        function unmount() {\n\t            return block_fsys.Unmount({});\n\t        }\n\t\n\t        // See format-dialog.jsx for why we don't offer editing\n\t        // fstab for the old UDisks2\n\t\n\t        return React.createElement(\n\t            \"div\",\n\t            null,\n\t            React.createElement(\n\t                \"div\",\n\t                { className: \"tab-actions\" },\n\t                React.createElement(FormatButton, { client: this.props.client, block: this.props.block })\n\t            ),\n\t            React.createElement(\n\t                \"table\",\n\t                { className: \"info-table-ct\" },\n\t                React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Name\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        React.createElement(\n\t                            StorageLink,\n\t                            { onClick: rename_dialog },\n\t                            this.props.block.IdLabel || \"-\"\n\t                        )\n\t                    )\n\t                ),\n\t                !self.props.client.is_old_udisks2 ? React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Mount Point\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        React.createElement(\n\t                            StorageLink,\n\t                            { onClick: mounting_dialog },\n\t                            old_dir || _(\"(default)\")\n\t                        ),\n\t                        !is_filesystem_mounted ? React.createElement(\n\t                            StorageButton,\n\t                            { onClick: mount },\n\t                            _(\"Mount\")\n\t                        ) : null\n\t                    )\n\t                ) : null,\n\t                old_opts ? React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Mount Options\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        React.createElement(\n\t                            StorageLink,\n\t                            { onClick: mounting_dialog },\n\t                            old_opts\n\t                        )\n\t                    )\n\t                ) : null,\n\t                mounted_at.length > 0 || self.props.client.is_old_udisks2 ? React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Mounted At\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        mounted_at.join(\", \"),\n\t                        mounted_at.length > 0 ? React.createElement(\n\t                            StorageButton,\n\t                            { onClick: unmount },\n\t                            _(\"Unmount\")\n\t                        ) : React.createElement(\n\t                            StorageButton,\n\t                            { onClick: mount },\n\t                            _(\"Mount\")\n\t                        )\n\t                    )\n\t                ) : null,\n\t                React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Used\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        used\n\t                    )\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tmodule.exports = {\n\t    FilesystemTab: FilesystemTab\n\t};\n\n/***/ },\n/* 44 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar cockpit = __webpack_require__(7);\n\tvar dialog = __webpack_require__(26);\n\tvar utils = __webpack_require__(9);\n\tvar $ = __webpack_require__(6);\n\t\n\tvar React = __webpack_require__(32);\n\tvar StorageControls = __webpack_require__(37);\n\tvar FormatDialog = __webpack_require__(42);\n\t\n\tvar StorageButton = StorageControls.StorageButton;\n\tvar StorageLink = StorageControls.StorageLink;\n\tvar FormatButton = FormatDialog.FormatButton;\n\t\n\tvar _ = cockpit.gettext;\n\t\n\tvar CryptoTab = React.createClass({\n\t    displayName: \"CryptoTab\",\n\t\n\t    render: function render() {\n\t        var self = this;\n\t        var block = self.props.block;\n\t\n\t        function edit_config(modify) {\n\t            var old_config, new_config;\n\t\n\t            function commit() {\n\t                new_config[1][\"track-parents\"] = { t: 'b', v: true };\n\t                if (old_config) return block.UpdateConfigurationItem(old_config, new_config, {});else return block.AddConfigurationItem(new_config, {});\n\t            }\n\t\n\t            block.GetSecretConfiguration({}).done(function (items) {\n\t                old_config = utils.array_find(items, function (c) {\n\t                    return c[0] == \"crypttab\";\n\t                });\n\t                new_config = [\"crypttab\", old_config ? $.extend({}, old_config[1]) : {}];\n\t\n\t                // UDisks insists on always having a \"passphrase-contents\" field when\n\t                // adding a crypttab entry, but doesn't include one itself when returning\n\t                // an entry without a stored passphrase.\n\t                //\n\t                if (!new_config[1]['passphrase-contents']) new_config[1]['passphrase-contents'] = { t: 'ay', v: utils.encode_filename(\"\") };\n\t\n\t                modify(new_config[1], commit);\n\t            });\n\t        }\n\t\n\t        function edit_stored_passphrase() {\n\t            edit_config(function (config, commit) {\n\t                dialog.open({ Title: _(\"Stored Passphrase\"),\n\t                    Fields: [{ PassInput: \"passphrase\",\n\t                        Title: _(\"Stored Passphrase\"),\n\t                        Value: config && config['passphrase-contents'] ? utils.decode_filename(config['passphrase-contents'].v) : \"\"\n\t                    }],\n\t                    Action: {\n\t                        Title: _(\"Apply\"),\n\t                        action: function action(vals) {\n\t                            config[\"passphrase-contents\"] = {\n\t                                t: 'ay',\n\t                                v: utils.encode_filename(vals.passphrase)\n\t                            };\n\t                            delete config[\"passphrase-path\"];\n\t                            return commit();\n\t                        }\n\t                    }\n\t                });\n\t            });\n\t        }\n\t\n\t        var old_config, old_options;\n\t\n\t        old_config = utils.array_find(block.Configuration, function (c) {\n\t            return c[0] == \"crypttab\";\n\t        });\n\t        if (old_config) {\n\t            old_options = utils.decode_filename(old_config[1].options.v).split(\",\").filter(function (s) {\n\t                return s.indexOf(\"x-parent\") !== 0;\n\t            }).join(\",\");\n\t        }\n\t\n\t        function edit_options() {\n\t            edit_config(function (config, commit) {\n\t                dialog.open({ Title: _(\"Encryption Options\"),\n\t                    Fields: FormatDialog.crypto_options_dialog_fields(old_options),\n\t                    Action: {\n\t                        Title: _(\"Apply\"),\n\t                        action: function action(vals) {\n\t                            config[\"options\"] = {\n\t                                t: 'ay',\n\t                                v: utils.encode_filename(FormatDialog.crypto_options_dialog_options(vals))\n\t                            };\n\t                            return commit();\n\t                        }\n\t                    }\n\t                });\n\t            });\n\t        }\n\t\n\t        // See format-dialog.jsx above for why we don't offer editing\n\t        // crypttab for the old UDisks2\n\t\n\t        return React.createElement(\n\t            \"div\",\n\t            null,\n\t            React.createElement(\n\t                \"div\",\n\t                { className: \"tab-actions\" },\n\t                React.createElement(FormatButton, { client: this.props.client, block: this.props.block })\n\t            ),\n\t            React.createElement(\n\t                \"table\",\n\t                { className: \"info-table-ct\" },\n\t                !self.props.client.is_old_udisks2 ? React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Stored passphrase\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        React.createElement(\n\t                            StorageButton,\n\t                            { onClick: edit_stored_passphrase },\n\t                            _(\"Edit\")\n\t                        )\n\t                    )\n\t                ) : null,\n\t                !self.props.client.is_old_udisks2 ? React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Options\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        React.createElement(\n\t                            StorageLink,\n\t                            { onClick: edit_options },\n\t                            old_options || _(\"(none)\")\n\t                        )\n\t                    )\n\t                ) : null\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tmodule.exports = {\n\t    CryptoTab: CryptoTab\n\t};\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar cockpit = __webpack_require__(7);\n\tvar dialog = __webpack_require__(26);\n\tvar utils = __webpack_require__(9);\n\tvar $ = __webpack_require__(6);\n\t\n\tvar React = __webpack_require__(32);\n\tvar StorageControls = __webpack_require__(37);\n\t\n\tvar StorageButton = StorageControls.StorageButton;\n\tvar StorageLink = StorageControls.StorageLink;\n\t\n\tvar _ = cockpit.gettext;\n\t\n\tfunction lvol_rename(lvol) {\n\t    dialog.open({ Title: _(\"Rename Logical Volume\"),\n\t        Fields: [{ TextInput: \"name\",\n\t            Title: _(\"Name\"),\n\t            Value: lvol.Name\n\t        }],\n\t        Action: {\n\t            Title: _(\"Rename\"),\n\t            action: function action(vals) {\n\t                return lvol.Rename(vals.name, {});\n\t            }\n\t        }\n\t    });\n\t}\n\t\n\tfunction lvol_resize(client, lvol) {\n\t    var block = client.lvols_block[lvol.path];\n\t    var vgroup = client.vgroups[lvol.VolumeGroup];\n\t    var pool = client.lvols[lvol.ThinPool];\n\t\n\t    /* Resizing is only safe when lvol has a filesystem\n\t       and that filesystem is resized at the same time.\n\t        So we always resize the filesystem for lvols that\n\t       have one, and refuse to shrink otherwise.\n\t        Note that shrinking a filesystem will not always\n\t       succeed, but it is never dangerous.\n\t     */\n\t\n\t    dialog.open({ Title: _(\"Resize Logical Volume\"),\n\t        Fields: [{ SizeSlider: \"size\",\n\t            Title: _(\"Size\"),\n\t            Value: lvol.Size,\n\t            Max: pool ? pool.Size * 3 : lvol.Size + vgroup.FreeSize,\n\t            AllowInfinite: !!pool,\n\t            Round: vgroup.ExtentSize\n\t        }, { CheckBox: \"fsys\",\n\t            Title: _(\"Resize Filesystem\"),\n\t            Value: block && block.IdUsage == \"filesystem\",\n\t            visible: function visible() {\n\t                return lvol.Type == \"block\";\n\t            }\n\t        }],\n\t        Action: {\n\t            Title: _(\"Resize\"),\n\t            action: function action(vals) {\n\t\n\t                function error(msg) {\n\t                    return $.Deferred().reject({ message: msg }).promise();\n\t                }\n\t\n\t                var fsys = block && block.IdUsage == \"filesystem\";\n\t                if (!fsys && vals.size < lvol.Size) return error(_(\"This logical volume cannot be made smaller.\"));\n\t\n\t                var options = {};\n\t                if (fsys) options.resize_fsys = { t: 'b', v: fsys };\n\t\n\t                return lvol.Resize(vals.size, options);\n\t            }\n\t        }\n\t    });\n\t}\n\t\n\tvar BlockVolTab = React.createClass({\n\t    displayName: \"BlockVolTab\",\n\t\n\t    render: function render() {\n\t        var self = this;\n\t        var lvol = self.props.lvol;\n\t        var vgroup = self.props.client.vgroups[lvol.VolumeGroup];\n\t\n\t        function create_snapshot() {\n\t            dialog.open({ Title: _(\"Create Snapshot\"),\n\t                Fields: [{ TextInput: \"name\",\n\t                    Title: _(\"Name\"),\n\t                    validate: utils.validate_lvm2_name\n\t                }, { SizeSlider: \"size\",\n\t                    Title: _(\"Size\"),\n\t                    Value: lvol.Size * 0.2,\n\t                    Max: lvol.Size,\n\t                    Round: vgroup.ExtentSize,\n\t                    visible: function visible() {\n\t                        return lvol.ThinPool == \"/\";\n\t                    }\n\t                }],\n\t                Action: {\n\t                    Title: _(\"Create\"),\n\t                    action: function action(vals) {\n\t                        return lvol.CreateSnapshot(vals.name, vals.size || 0, {});\n\t                    }\n\t                }\n\t            });\n\t        }\n\t\n\t        function rename() {\n\t            lvol_rename(lvol);\n\t        }\n\t\n\t        function resize() {\n\t            lvol_resize(self.props.client, lvol);\n\t        }\n\t\n\t        return React.createElement(\n\t            \"div\",\n\t            null,\n\t            React.createElement(\n\t                \"div\",\n\t                { className: \"tab-actions\" },\n\t                React.createElement(\n\t                    StorageButton,\n\t                    { onClick: create_snapshot },\n\t                    _(\"Create Snapshot\")\n\t                )\n\t            ),\n\t            React.createElement(\n\t                \"table\",\n\t                { className: \"info-table-ct\" },\n\t                React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Name\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        React.createElement(\n\t                            StorageLink,\n\t                            { onClick: rename },\n\t                            this.props.lvol.Name\n\t                        )\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Size\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        React.createElement(\n\t                            StorageLink,\n\t                            { onClick: resize },\n\t                            utils.fmt_size(this.props.lvol.Size)\n\t                        )\n\t                    )\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tvar PoolVolTab = React.createClass({\n\t    displayName: \"PoolVolTab\",\n\t\n\t    render: function render() {\n\t        var self = this;\n\t\n\t        function perc(ratio) {\n\t            return (ratio * 100).toFixed(0) + \"%\";\n\t        }\n\t\n\t        function rename() {\n\t            lvol_rename(self.props.lvol);\n\t        }\n\t\n\t        function resize() {\n\t            lvol_resize(self.props.client, self.props.lvol);\n\t        }\n\t\n\t        return React.createElement(\n\t            \"div\",\n\t            null,\n\t            React.createElement(\n\t                \"table\",\n\t                { className: \"info-table-ct\" },\n\t                React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Name\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        React.createElement(\n\t                            StorageLink,\n\t                            { onClick: rename },\n\t                            this.props.lvol.Name\n\t                        )\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Size\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        React.createElement(\n\t                            StorageLink,\n\t                            { onClick: resize },\n\t                            utils.fmt_size(this.props.lvol.Size)\n\t                        )\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Data Used\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        perc(this.props.lvol.DataAllocatedRatio)\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Metadata Used\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        perc(this.props.lvol.MetadataAllocatedRatio)\n\t                    )\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tmodule.exports = {\n\t    BlockVolTab: BlockVolTab,\n\t    PoolVolTab: PoolVolTab\n\t};\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar cockpit = __webpack_require__(7);\n\tvar utils = __webpack_require__(9);\n\t\n\tvar React = __webpack_require__(32);\n\tvar FormatDialog = __webpack_require__(42);\n\t\n\tvar FormatButton = FormatDialog.FormatButton;\n\t\n\tvar _ = cockpit.gettext;\n\t\n\tvar PVolTab = React.createClass({\n\t    displayName: \"PVolTab\",\n\t\n\t    render: function render() {\n\t        var block_pvol = this.props.client.blocks_pvol[this.props.block.path];\n\t        var vgroup = block_pvol && this.props.client.vgroups[block_pvol.VolumeGroup];\n\t\n\t        return React.createElement(\n\t            \"div\",\n\t            null,\n\t            React.createElement(\n\t                \"div\",\n\t                { className: \"tab-actions\" },\n\t                React.createElement(FormatButton, { client: this.props.client, block: this.props.block })\n\t            ),\n\t            React.createElement(\n\t                \"table\",\n\t                { className: \"info-table-ct\" },\n\t                React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Volume Group\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        vgroup ? React.createElement(\n\t                            \"a\",\n\t                            { \"data-goto-vgroup\": vgroup.Name },\n\t                            vgroup.Name\n\t                        ) : \"-\"\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Free\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        block_pvol ? utils.fmt_size(block_pvol.FreeSize) : \"-\"\n\t                    )\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tvar MDRaidMemberTab = React.createClass({\n\t    displayName: \"MDRaidMemberTab\",\n\t\n\t    render: function render() {\n\t        var mdraid = this.props.client.mdraids[this.props.block.MDRaidMember];\n\t\n\t        return React.createElement(\n\t            \"div\",\n\t            null,\n\t            React.createElement(\n\t                \"div\",\n\t                { className: \"tab-actions\" },\n\t                React.createElement(FormatButton, { client: this.props.client, block: this.props.block })\n\t            ),\n\t            React.createElement(\n\t                \"table\",\n\t                { className: \"info-table-ct\" },\n\t                React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"RAID Device\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        mdraid ? React.createElement(\n\t                            \"a\",\n\t                            { \"data-goto-mdraid\": mdraid.UUID },\n\t                            utils.mdraid_name(mdraid)\n\t                        ) : \"-\"\n\t                    )\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tmodule.exports = {\n\t    PVolTab: PVolTab,\n\t    MDRaidMemberTab: MDRaidMemberTab\n\t};\n\n/***/ },\n/* 47 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar cockpit = __webpack_require__(7);\n\tvar utils = __webpack_require__(9);\n\t\n\tvar React = __webpack_require__(32);\n\t\n\tvar _ = cockpit.gettext;\n\t\n\tvar PartitionTab = React.createClass({\n\t    displayName: \"PartitionTab\",\n\t\n\t    render: function render() {\n\t        var block_part = this.props.client.blocks_part[this.props.block.path];\n\t\n\t        return React.createElement(\n\t            \"div\",\n\t            null,\n\t            React.createElement(\n\t                \"table\",\n\t                { className: \"info-table-ct\" },\n\t                React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Name\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        block_part.Name || \"-\"\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Size\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        utils.fmt_size(block_part.Size)\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"UUID\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        block_part.UUID\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Type\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        block_part.Type\n\t                    )\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tmodule.exports = {\n\t    PartitionTab: PartitionTab\n\t};\n\n/***/ },\n/* 48 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar cockpit = __webpack_require__(7);\n\tvar utils = __webpack_require__(9);\n\tvar $ = __webpack_require__(6);\n\t\n\tvar React = __webpack_require__(32);\n\tvar StorageControls = __webpack_require__(37);\n\tvar FormatDialog = __webpack_require__(42);\n\t\n\tvar StorageButton = StorageControls.StorageButton;\n\tvar FormatButton = FormatDialog.FormatButton;\n\t\n\tvar _ = cockpit.gettext;\n\t\n\tvar SwapTab = React.createClass({\n\t    displayName: \"SwapTab\",\n\t\n\t    onSamplesChanged: function onSamplesChanged() {\n\t        this.setState({});\n\t    },\n\t    componentDidMount: function componentDidMount() {\n\t        $(this.props.client.swap_sizes).on(\"changed\", this.onSamplesChanged);\n\t    },\n\t    componentWillUnmount: function componentWillUnmount() {\n\t        $(this.props.client.swap_sizes).off(\"changed\", this.onSamplesChanged);\n\t    },\n\t    render: function render() {\n\t        var self = this;\n\t        var block_swap = self.props.client.blocks_swap[self.props.block.path];\n\t        var is_active = block_swap && block_swap.Active;\n\t        var used;\n\t\n\t        if (is_active) {\n\t            var samples = self.props.client.swap_sizes.data[utils.decode_filename(self.props.block.Device)];\n\t            if (samples) used = utils.fmt_size(samples[0] - samples[1]);else used = _(\"Unknown\");\n\t        } else {\n\t            used = \"-\";\n\t        }\n\t\n\t        function start() {\n\t            if (block_swap) return block_swap.Start({});\n\t        }\n\t\n\t        function stop() {\n\t            if (block_swap) return block_swap.Stop({});\n\t        }\n\t\n\t        return React.createElement(\n\t            \"div\",\n\t            null,\n\t            React.createElement(\n\t                \"div\",\n\t                { className: \"tab-actions\" },\n\t                is_active ? React.createElement(\n\t                    StorageButton,\n\t                    { onClick: stop },\n\t                    _(\"Stop\")\n\t                ) : React.createElement(\n\t                    StorageButton,\n\t                    { onClick: start },\n\t                    _(\"Start\")\n\t                ),\n\t                React.createElement(FormatButton, { client: this.props.client, block: this.props.block })\n\t            ),\n\t            React.createElement(\n\t                \"table\",\n\t                { className: \"info-table-ct\" },\n\t                React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Used\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        used\n\t                    )\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tmodule.exports = {\n\t    SwapTab: SwapTab\n\t};\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\n\t * This file is part of Cockpit.\n\t *\n\t * Copyright (C) 2016 Red Hat, Inc.\n\t *\n\t * Cockpit is free software; you can redistribute it and/or modify it\n\t * under the terms of the GNU Lesser General Public License as published by\n\t * the Free Software Foundation; either version 2.1 of the License, or\n\t * (at your option) any later version.\n\t *\n\t * Cockpit is distributed in the hope that it will be useful, but\n\t * WITHOUT ANY WARRANTY; without even the implied warranty of\n\t * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t * Lesser General Public License for more details.\n\t *\n\t * You should have received a copy of the GNU Lesser General Public License\n\t * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t */\n\t\n\t\"use strict\";\n\t\n\tvar cockpit = __webpack_require__(7);\n\t\n\tvar React = __webpack_require__(32);\n\tvar FormatDialog = __webpack_require__(42);\n\t\n\tvar FormatButton = FormatDialog.FormatButton;\n\t\n\tvar _ = cockpit.gettext;\n\t\n\tvar UnrecognizedTab = React.createClass({\n\t    displayName: \"UnrecognizedTab\",\n\t\n\t    render: function render() {\n\t        return React.createElement(\n\t            \"div\",\n\t            null,\n\t            React.createElement(\n\t                \"div\",\n\t                { className: \"tab-actions\" },\n\t                React.createElement(FormatButton, { client: this.props.client, block: this.props.block })\n\t            ),\n\t            React.createElement(\n\t                \"table\",\n\t                { className: \"info-table-ct\" },\n\t                React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Usage\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        this.props.block.IdUsage || \"-\"\n\t                    )\n\t                ),\n\t                React.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"Type\")\n\t                    ),\n\t                    React.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        this.props.block.IdType || \"-\"\n\t                    )\n\t                )\n\t            )\n\t        );\n\t    }\n\t});\n\t\n\tmodule.exports = {\n\t    UnrecognizedTab: UnrecognizedTab\n\t};\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.DriveDetails = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _cockpit = __webpack_require__(7);\n\t\n\tvar _cockpit2 = _interopRequireDefault(_cockpit);\n\t\n\tvar _react = __webpack_require__(32);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _utils = __webpack_require__(9);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _details = __webpack_require__(31);\n\t\n\tvar _contentViews = __webpack_require__(34);\n\t\n\tvar _contentViews2 = _interopRequireDefault(_contentViews);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file is part of Cockpit.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (C) 2017 Red Hat, Inc.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Cockpit is free software; you can redistribute it and/or modify it\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the terms of the GNU Lesser General Public License as published by\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Free Software Foundation; either version 2.1 of the License, or\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * (at your option) any later version.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Cockpit is distributed in the hope that it will be useful, but\n\twithout even the implied warranty of\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Lesser General Public License for more details.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You should have received a copy of the GNU Lesser General Public License\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar _ = _cockpit2.default.gettext;\n\t\n\tvar DriveDetails = exports.DriveDetails = function (_React$Component) {\n\t    _inherits(DriveDetails, _React$Component);\n\t\n\t    function DriveDetails() {\n\t        _classCallCheck(this, DriveDetails);\n\t\n\t        return _possibleConstructorReturn(this, (DriveDetails.__proto__ || Object.getPrototypeOf(DriveDetails)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(DriveDetails, [{\n\t        key: \"render\",\n\t        value: function render() {\n\t            var client = this.props.client;\n\t            var drive = this.props.drive;\n\t            var drive_ata = client.drives_ata[drive.path];\n\t            var drive_block = drive && client.drives_block[drive.path];\n\t            var multipath_blocks = drive && client.drives_multipath_blocks[drive.path];\n\t\n\t            function row(title, value) {\n\t                if (value) return _react2.default.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    _react2.default.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        title\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        value\n\t                    )\n\t                );else return null;\n\t            }\n\t\n\t            var assessment = null;\n\t            if (drive_ata) {\n\t                assessment = _react2.default.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    _react2.default.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"storage\", \"Assessment\")\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        drive_ata.SmartFailing ? _react2.default.createElement(\n\t                            \"span\",\n\t                            { className: \"cockpit-disk-failing\" },\n\t                            _(\"DISK IS FAILING\")\n\t                        ) : _react2.default.createElement(\n\t                            \"span\",\n\t                            null,\n\t                            _(\"Disk is OK\")\n\t                        ),\n\t                        drive_ata.SmartTemperature > 0 ? _react2.default.createElement(\n\t                            \"span\",\n\t                            null,\n\t                            \"(\",\n\t                            _utils2.default.format_temperature(drive_ata.SmartTemperature),\n\t                            \")\"\n\t                        ) : null\n\t                    )\n\t                );\n\t            }\n\t\n\t            var header = _react2.default.createElement(\n\t                \"div\",\n\t                { className: \"panel panel-default\" },\n\t                _react2.default.createElement(\n\t                    \"div\",\n\t                    { className: \"panel-heading\" },\n\t                    _(\"Drive\")\n\t                ),\n\t                _react2.default.createElement(\n\t                    \"div\",\n\t                    { className: \"panel-body\" },\n\t                    _react2.default.createElement(\n\t                        \"table\",\n\t                        { className: \"info-table-ct\" },\n\t                        row(_(\"storage\", \"Model\"), drive.Model),\n\t                        row(_(\"storage\", \"Firmware Version\"), drive.Revision),\n\t                        row(_(\"storage\", \"Serial Number\"), drive.Serial),\n\t                        row(_(\"storage\", \"World Wide Name\"), drive.WWN),\n\t                        row(_(\"storage\", \"Capacity\"), drive.Size ? _utils2.default.fmt_size_long(drive.Size) : _(\"No media inserted\")),\n\t                        assessment,\n\t                        row(_(\"storage\", \"Device File\"), drive_block ? _utils2.default.block_name(drive_block) : \"-\"),\n\t                        multipath_blocks.length > 0 && row(_(\"storage\", \"Multipathed Devices\"), multipath_blocks.map(_utils2.default.block_name).join(\" \"))\n\t                    )\n\t                )\n\t            );\n\t\n\t            var content = _react2.default.createElement(_contentViews2.default.Block, { client: this.props.client, block: drive_block });\n\t\n\t            return _react2.default.createElement(_details.StdDetailsLayout, { jobs: this.props.jobs, header: header, content: content });\n\t        }\n\t    }]);\n\t\n\t    return DriveDetails;\n\t}(_react2.default.Component);\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.VGroupDetails = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _cockpit = __webpack_require__(7);\n\t\n\tvar _cockpit2 = _interopRequireDefault(_cockpit);\n\t\n\tvar _react = __webpack_require__(32);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _utils = __webpack_require__(9);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _details = __webpack_require__(31);\n\t\n\tvar _contentViews = __webpack_require__(34);\n\t\n\tvar _contentViews2 = _interopRequireDefault(_contentViews);\n\t\n\tvar _storageControls = __webpack_require__(37);\n\t\n\tvar _dialog = __webpack_require__(26);\n\t\n\tvar _dialog2 = _interopRequireDefault(_dialog);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file is part of Cockpit.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (C) 2017 Red Hat, Inc.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Cockpit is free software; you can redistribute it and/or modify it\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the terms of the GNU Lesser General Public License as published by\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Free Software Foundation; either version 2.1 of the License, or\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * (at your option) any later version.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Cockpit is distributed in the hope that it will be useful, but\n\twithout even the implied warranty of\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Lesser General Public License for more details.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You should have received a copy of the GNU Lesser General Public License\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar _ = _cockpit2.default.gettext;\n\t\n\tvar VGroupSidebar = function (_React$Component) {\n\t    _inherits(VGroupSidebar, _React$Component);\n\t\n\t    function VGroupSidebar() {\n\t        _classCallCheck(this, VGroupSidebar);\n\t\n\t        return _possibleConstructorReturn(this, (VGroupSidebar.__proto__ || Object.getPrototypeOf(VGroupSidebar)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(VGroupSidebar, [{\n\t        key: \"render\",\n\t        value: function render() {\n\t            var self = this;\n\t            var client = self.props.client;\n\t            var vgroup = self.props.vgroup;\n\t            var pvols = client.vgroups_pvols[vgroup.path] || [];\n\t\n\t            function filter_inside_vgroup(spc) {\n\t                var block = spc.block;\n\t                if (client.blocks_part[block.path]) block = client.blocks[client.blocks_part[block.path].Table];\n\t                var lvol = block && client.blocks_lvm2[block.path] && client.lvols[client.blocks_lvm2[block.path].LogicalVolume];\n\t                return !lvol || lvol.VolumeGroup != vgroup.path;\n\t            }\n\t\n\t            function add_disk() {\n\t                _dialog2.default.open({ Title: _(\"Add Disks\"),\n\t                    Fields: [{ SelectMany: \"disks\",\n\t                        Title: _(\"Disks\"),\n\t                        Options: _utils2.default.get_available_spaces(client).filter(filter_inside_vgroup).map(_utils2.default.available_space_to_option),\n\t                        EmptyWarning: _(\"No disks are available.\"),\n\t                        validate: function validate(disks) {\n\t                            if (disks.length === 0) return _(\"At least one disk is needed.\");\n\t                        }\n\t                    }],\n\t                    Action: {\n\t                        Title: _(\"Add\"),\n\t                        action: function action(vals) {\n\t                            return _utils2.default.prepare_available_spaces(client, vals.disks).then(function () {\n\t                                var paths = Array.prototype.slice.call(arguments);\n\t                                return _cockpit2.default.all(paths.map(function (p) {\n\t                                    return vgroup.AddDevice(p, {});\n\t                                }));\n\t                            });\n\t                        }\n\t                    }\n\t                });\n\t            }\n\t\n\t            function render_pvol(pvol) {\n\t                var remove_action = null;\n\t                var remove_excuse = null;\n\t\n\t                function pvol_remove() {\n\t                    return vgroup.RemoveDevice(pvol.path, true, {});\n\t                }\n\t\n\t                function pvol_empty_and_remove() {\n\t                    return vgroup.EmptyDevice(pvol.path, {}).then(function () {\n\t                        vgroup.RemoveDevice(pvol.path, true, {});\n\t                    });\n\t                }\n\t\n\t                if (pvols.length === 1) {\n\t                    remove_excuse = _(\"The last physical volume of a volume group cannot be removed.\");\n\t                } else if (pvol.FreeSize < pvol.Size) {\n\t                    if (pvol.Size <= vgroup.FreeSize) remove_action = pvol_empty_and_remove;else remove_excuse = _cockpit2.default.format(_(\"There is not enough free space elsewhere to remove this physical volume. At least $0 more free space is needed.\"), _utils2.default.fmt_size(pvol.Size - vgroup.FreeSize));\n\t                } else {\n\t                    remove_action = pvol_remove;\n\t                }\n\t\n\t                return _react2.default.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    _react2.default.createElement(\n\t                        \"td\",\n\t                        { className: \"storage-icon\" },\n\t                        _react2.default.createElement(\n\t                            \"div\",\n\t                            null,\n\t                            _react2.default.createElement(\"img\", { src: \"images/storage-disk.png\" })\n\t                        )\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _react2.default.createElement(_storageControls.StorageBlockNavLink, { client: client, block: client.blocks[pvol.path] }),\n\t                        _react2.default.createElement(\"br\", null),\n\t                        _react2.default.createElement(\n\t                            \"span\",\n\t                            null,\n\t                            _cockpit2.default.format(_(\"$0, $1 free\"), _utils2.default.fmt_size(pvol.Size), _utils2.default.fmt_size(pvol.FreeSize))\n\t                        )\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        \"td\",\n\t                        { className: \"storage-action\" },\n\t                        _react2.default.createElement(\n\t                            _storageControls.StorageButton,\n\t                            { onClick: remove_action, excuse: remove_excuse },\n\t                            _react2.default.createElement(\"span\", { className: \"fa fa-minus\" })\n\t                        )\n\t                    )\n\t                );\n\t            }\n\t\n\t            return _react2.default.createElement(\n\t                \"div\",\n\t                { className: \"panel panel-default\" },\n\t                _react2.default.createElement(\n\t                    \"div\",\n\t                    { className: \"panel-heading\" },\n\t                    _react2.default.createElement(\n\t                        \"span\",\n\t                        null,\n\t                        _(\"Physical Volumes\")\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        \"span\",\n\t                        { className: \"pull-right\" },\n\t                        _react2.default.createElement(\n\t                            _storageControls.StorageButton,\n\t                            { onClick: add_disk },\n\t                            _react2.default.createElement(\"span\", { className: \"fa fa-plus\" })\n\t                        )\n\t                    )\n\t                ),\n\t                _react2.default.createElement(\n\t                    \"table\",\n\t                    { className: \"table\" },\n\t                    _react2.default.createElement(\n\t                        \"tbody\",\n\t                        null,\n\t                        pvols.map(render_pvol)\n\t                    )\n\t                )\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return VGroupSidebar;\n\t}(_react2.default.Component);\n\t\n\tvar VGroupDetails = exports.VGroupDetails = function (_React$Component2) {\n\t    _inherits(VGroupDetails, _React$Component2);\n\t\n\t    function VGroupDetails() {\n\t        _classCallCheck(this, VGroupDetails);\n\t\n\t        var _this2 = _possibleConstructorReturn(this, (VGroupDetails.__proto__ || Object.getPrototypeOf(VGroupDetails)).call(this));\n\t\n\t        _this2.poll_timer = null;\n\t        return _this2;\n\t    }\n\t\n\t    _createClass(VGroupDetails, [{\n\t        key: \"ensurePolling\",\n\t        value: function ensurePolling(needs_polling) {\n\t            var _this3 = this;\n\t\n\t            if (needs_polling && this.poll_timer === null) {\n\t                this.poll_timer = window.setInterval(function () {\n\t                    _this3.props.vgroup.Poll();\n\t                }, 2000);\n\t            } else if (!needs_polling && this.poll_timer !== null) {\n\t                window.clearInterval(this.poll_timer);\n\t                this.poll_timer = null;\n\t            }\n\t        }\n\t    }, {\n\t        key: \"componentWillUnmount\",\n\t        value: function componentWillUnmount() {\n\t            this.ensurePolling(false);\n\t        }\n\t    }, {\n\t        key: \"render\",\n\t        value: function render() {\n\t            var client = this.props.client;\n\t            var vgroup = this.props.vgroup;\n\t\n\t            this.ensurePolling(vgroup.NeedsPolling);\n\t\n\t            function rename() {\n\t                var location = _cockpit2.default.location;\n\t\n\t                _dialog2.default.open({ Title: _(\"Rename Volume Group\"),\n\t                    Fields: [{ TextInput: \"name\",\n\t                        Title: _(\"Name\"),\n\t                        Value: vgroup.Name,\n\t                        validate: _utils2.default.validate_lvm2_name\n\t                    }],\n\t                    Action: {\n\t                        Title: _(\"Rename\"),\n\t                        action: function action(vals) {\n\t                            return vgroup.Rename(vals.name, {}).done(function () {\n\t                                location.go(['vg', vals.name]);\n\t                            });\n\t                        }\n\t                    }\n\t                });\n\t            }\n\t\n\t            function delete_() {\n\t                var location = _cockpit2.default.location;\n\t                var usage = _utils2.default.get_active_usage(client, vgroup.path);\n\t\n\t                if (usage.Blocking) {\n\t                    _dialog2.default.open({ Title: _cockpit2.default.format(_(\"$0 is in active use\"), vgroup.Name),\n\t                        Blocking: usage.Blocking,\n\t                        Fields: []\n\t                    });\n\t                    return;\n\t                }\n\t\n\t                _dialog2.default.open({ Title: _cockpit2.default.format(_(\"Please confirm deletion of $0\"), vgroup.Name),\n\t                    Teardown: usage.Teardown,\n\t                    Fields: [],\n\t                    Action: {\n\t                        Danger: _(\"Deleting a volume group will erase all data on it.\"),\n\t                        Title: _(\"Delete\"),\n\t                        action: function action() {\n\t                            return _utils2.default.teardown_active_usage(client, usage).then(function () {\n\t                                return vgroup.Delete(true, { 'tear-down': { t: 'b', v: true }\n\t                                }).done(function () {\n\t                                    location.go('/');\n\t                                });\n\t                            });\n\t                        }\n\t                    }\n\t                });\n\t            }\n\t\n\t            var actions = [{ title: _(\"Rename\"), action: rename }, { title: _(\"Delete\"), action: delete_ }];\n\t\n\t            var header = _react2.default.createElement(\n\t                \"div\",\n\t                { className: \"panel panel-default\" },\n\t                _react2.default.createElement(\n\t                    \"div\",\n\t                    { className: \"panel-heading\" },\n\t                    _cockpit2.default.format(_(\"Volume Group $0\"), vgroup.Name),\n\t                    _react2.default.createElement(\n\t                        \"span\",\n\t                        { className: \"pull-right\" },\n\t                        _react2.default.createElement(_storageControls.StorageMultiAction, { actions: actions, \"default\": 0 })\n\t                    )\n\t                ),\n\t                _react2.default.createElement(\n\t                    \"div\",\n\t                    { className: \"panel-body\" },\n\t                    _react2.default.createElement(\n\t                        \"table\",\n\t                        { className: \"info-table-ct\" },\n\t                        _react2.default.createElement(\n\t                            \"tr\",\n\t                            null,\n\t                            _react2.default.createElement(\n\t                                \"td\",\n\t                                null,\n\t                                _(\"storage\", \"UUID\")\n\t                            ),\n\t                            _react2.default.createElement(\n\t                                \"td\",\n\t                                null,\n\t                                vgroup.UUID\n\t                            )\n\t                        ),\n\t                        _react2.default.createElement(\n\t                            \"tr\",\n\t                            null,\n\t                            _react2.default.createElement(\n\t                                \"td\",\n\t                                null,\n\t                                _(\"storage\", \"Capacity\")\n\t                            ),\n\t                            _react2.default.createElement(\n\t                                \"td\",\n\t                                null,\n\t                                _utils2.default.fmt_size_long(vgroup.Size)\n\t                            )\n\t                        )\n\t                    )\n\t                )\n\t            );\n\t\n\t            var sidebar = _react2.default.createElement(VGroupSidebar, { client: this.props.client, vgroup: vgroup });\n\t\n\t            var content = _react2.default.createElement(_contentViews2.default.VGroup, { client: this.props.client, vgroup: vgroup });\n\t\n\t            return _react2.default.createElement(_details.StdDetailsLayout, { jobs: this.props.jobs,\n\t                header: header,\n\t                sidebar: sidebar,\n\t                content: content });\n\t        }\n\t    }]);\n\t\n\t    return VGroupDetails;\n\t}(_react2.default.Component);\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.MDRaidDetails = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _cockpit = __webpack_require__(7);\n\t\n\tvar _cockpit2 = _interopRequireDefault(_cockpit);\n\t\n\tvar _react = __webpack_require__(32);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _utils = __webpack_require__(9);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _details = __webpack_require__(31);\n\t\n\tvar _contentViews = __webpack_require__(34);\n\t\n\tvar _contentViews2 = _interopRequireDefault(_contentViews);\n\t\n\tvar _storageControls = __webpack_require__(37);\n\t\n\tvar _dialog = __webpack_require__(26);\n\t\n\tvar _dialog2 = _interopRequireDefault(_dialog);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file is part of Cockpit.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (C) 2017 Red Hat, Inc.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Cockpit is free software; you can redistribute it and/or modify it\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the terms of the GNU Lesser General Public License as published by\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Free Software Foundation; either version 2.1 of the License, or\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * (at your option) any later version.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Cockpit is distributed in the hope that it will be useful, but\n\twithout even the implied warranty of\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Lesser General Public License for more details.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You should have received a copy of the GNU Lesser General Public License\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar _ = _cockpit2.default.gettext;\n\t\n\tvar MDRaidSidebar = function (_React$Component) {\n\t    _inherits(MDRaidSidebar, _React$Component);\n\t\n\t    function MDRaidSidebar() {\n\t        _classCallCheck(this, MDRaidSidebar);\n\t\n\t        return _possibleConstructorReturn(this, (MDRaidSidebar.__proto__ || Object.getPrototypeOf(MDRaidSidebar)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(MDRaidSidebar, [{\n\t        key: \"render\",\n\t        value: function render() {\n\t            var self = this;\n\t            var client = self.props.client;\n\t            var mdraid = self.props.mdraid;\n\t\n\t            function filter_inside_mdraid(spc) {\n\t                var block = spc.block;\n\t                if (client.blocks_part[block.path]) block = client.blocks[client.blocks_part[block.path].Table];\n\t                return block && block.MDRaid != mdraid.path;\n\t            }\n\t\n\t            function add_disk() {\n\t                _dialog2.default.open({ Title: _(\"Add Disks\"),\n\t                    Fields: [{ SelectMany: \"disks\",\n\t                        Title: _(\"Disks\"),\n\t                        Options: _utils2.default.get_available_spaces(client).filter(filter_inside_mdraid).map(_utils2.default.available_space_to_option),\n\t                        EmptyWarning: _(\"No disks are available.\"),\n\t                        validate: function validate(disks) {\n\t                            if (disks.length === 0) return _(\"At least one disk is needed.\");\n\t                        }\n\t                    }],\n\t                    Action: {\n\t                        Title: _(\"Add\"),\n\t                        action: function action(vals) {\n\t                            return _utils2.default.prepare_available_spaces(client, vals.disks).then(function () {\n\t                                var paths = Array.prototype.slice.call(arguments);\n\t                                return _cockpit2.default.all(paths.map(function (p) {\n\t                                    return mdraid.AddDevice(p, {});\n\t                                }));\n\t                            });\n\t                        }\n\t                    }\n\t                });\n\t            }\n\t\n\t            var members = client.mdraids_members[mdraid.path] || [];\n\t            var dynamic_members = mdraid.Level != \"raid0\";\n\t\n\t            var n_spares = 0,\n\t                n_recovering = 0;\n\t            mdraid.ActiveDevices.forEach(function (as) {\n\t                if (as[2].indexOf(\"spare\") >= 0) {\n\t                    if (as[1] < 0) n_spares += 1;else n_recovering += 1;\n\t                }\n\t            });\n\t\n\t            /* Older versions of Udisks/storaged don't have a Running property */\n\t            var running = mdraid.Running;\n\t            if (running === undefined) running = mdraid.ActiveDevices && mdraid.ActiveDevices.length > 0;\n\t\n\t            function render_member(block) {\n\t                var active_state = _utils2.default.array_find(mdraid.ActiveDevices, function (as) {\n\t                    return as[0] == block.path;\n\t                });\n\t\n\t                function state_text(state) {\n\t                    return { faulty: _(\"FAILED\"),\n\t                        in_sync: _(\"In Sync\"),\n\t                        spare: active_state[1] < 0 ? _(\"Spare\") : _(\"Recovering\"),\n\t                        write_mostly: _(\"Write-mostly\"),\n\t                        blocked: _(\"Blocked\")\n\t                    }[state] || _cockpit2.default.format(_(\"Unknown ($0)\"), state);\n\t                }\n\t\n\t                var slot = active_state && active_state[1] >= 0 && active_state[1].toString();\n\t                var states = active_state && active_state[2].map(state_text).join(\", \");\n\t\n\t                var is_in_sync = active_state && active_state[2].indexOf(\"in_sync\") >= 0;\n\t                var is_recovering = active_state && active_state[2].indexOf(\"spare\") >= 0 && active_state[1] >= 0;\n\t\n\t                var remove_excuse = false;\n\t                if (!running) remove_excuse = _(\"The RAID device must be running in order to remove disks.\");else if (is_in_sync && n_recovering > 0 || is_recovering) remove_excuse = _(\"This disk cannot be removed while the device is recovering.\");else if (is_in_sync && n_spares < 1) remove_excuse = _(\"A spare disk needs to be added first before this disk can be removed.\");else if (members.length <= 1) remove_excuse = _(\"The last disk of a RAID device cannot be removed.\");\n\t\n\t                function remove() {\n\t                    return mdraid.RemoveDevice(block.path, { wipe: { t: 'b', v: true } });\n\t                }\n\t\n\t                return _react2.default.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    _react2.default.createElement(\n\t                        \"td\",\n\t                        { className: \"storage-icon\" },\n\t                        _react2.default.createElement(\n\t                            \"div\",\n\t                            null,\n\t                            _react2.default.createElement(\"img\", { src: \"images/storage-disk.png\" })\n\t                        )\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        slot ? slot : \"-\",\n\t                        \" \",\n\t                        _react2.default.createElement(_storageControls.StorageBlockNavLink, { client: client, block: block }),\n\t                        _react2.default.createElement(\"br\", null),\n\t                        _react2.default.createElement(\n\t                            \"span\",\n\t                            { className: \"state\" },\n\t                            states\n\t                        )\n\t                    ),\n\t                    dynamic_members ? _react2.default.createElement(\n\t                        \"td\",\n\t                        { className: \"storage-action\" },\n\t                        _react2.default.createElement(\n\t                            _storageControls.StorageButton,\n\t                            { onClick: remove, excuse: remove_excuse },\n\t                            _react2.default.createElement(\"span\", { className: \"fa fa-minus\" })\n\t                        )\n\t                    ) : null\n\t                );\n\t            }\n\t\n\t            var add_excuse = false;\n\t            if (!running) add_excuse = _(\"The RAID device must be running in order to add spare disks.\");\n\t\n\t            return _react2.default.createElement(\n\t                \"div\",\n\t                { className: \"panel panel-default\" },\n\t                _react2.default.createElement(\n\t                    \"div\",\n\t                    { className: \"panel-heading\" },\n\t                    _react2.default.createElement(\n\t                        \"span\",\n\t                        null,\n\t                        _(\"Disks\")\n\t                    ),\n\t                    dynamic_members ? _react2.default.createElement(\n\t                        \"span\",\n\t                        { className: \"pull-right\" },\n\t                        _react2.default.createElement(\n\t                            _storageControls.StorageButton,\n\t                            { onClick: add_disk, excuse: add_excuse },\n\t                            _react2.default.createElement(\"span\", { className: \"fa fa-plus\" })\n\t                        )\n\t                    ) : null\n\t                ),\n\t                _react2.default.createElement(\n\t                    \"table\",\n\t                    { className: \"table\" },\n\t                    _react2.default.createElement(\n\t                        \"tbody\",\n\t                        null,\n\t                        members.map(render_member)\n\t                    )\n\t                )\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return MDRaidSidebar;\n\t}(_react2.default.Component);\n\t\n\tvar MDRaidDetails = exports.MDRaidDetails = function (_React$Component2) {\n\t    _inherits(MDRaidDetails, _React$Component2);\n\t\n\t    function MDRaidDetails() {\n\t        _classCallCheck(this, MDRaidDetails);\n\t\n\t        return _possibleConstructorReturn(this, (MDRaidDetails.__proto__ || Object.getPrototypeOf(MDRaidDetails)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(MDRaidDetails, [{\n\t        key: \"render\",\n\t        value: function render() {\n\t            var client = this.props.client;\n\t            var mdraid = this.props.mdraid;\n\t            var block = mdraid && client.mdraids_block[mdraid.path];\n\t\n\t            function format_level(str) {\n\t                return { \"raid0\": _(\"RAID 0\"),\n\t                    \"raid1\": _(\"RAID 1\"),\n\t                    \"raid4\": _(\"RAID 4\"),\n\t                    \"raid5\": _(\"RAID 5\"),\n\t                    \"raid6\": _(\"RAID 6\"),\n\t                    \"raid10\": _(\"RAID 10\")\n\t                }[str] || _cockpit2.default.format(_(\"RAID ($0)\"), str);\n\t            }\n\t\n\t            var level = format_level(mdraid.Level);\n\t            if (mdraid.NumDevices > 0) level += \", \" + _cockpit2.default.format(_(\"$0 Disks\"), mdraid.NumDevices);\n\t            if (mdraid.ChunkSize > 0) level += \", \" + _cockpit2.default.format(_(\"$0 Chunk Size\"), _utils2.default.fmt_size(mdraid.ChunkSize));\n\t\n\t            function toggle_bitmap(val) {\n\t                return mdraid.SetBitmapLocation(_utils2.default.encode_filename(val ? 'internal' : 'none'), {});\n\t            }\n\t\n\t            var bitmap = null;\n\t            if (mdraid.BitmapLocation) {\n\t                var value = _utils2.default.decode_filename(mdraid.BitmapLocation) != \"none\";\n\t                bitmap = _react2.default.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    _react2.default.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _(\"storage\", \"Bitmap\")\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        _react2.default.createElement(_storageControls.StorageOnOff, { state: value, onChange: toggle_bitmap })\n\t                    )\n\t                );\n\t            }\n\t\n\t            var degraded_message = null;\n\t            if (mdraid.Degraded > 0) {\n\t                var text = _cockpit2.default.format(_cockpit2.default.ngettext(\"$0 disk is missing\", \"$0 disks are missing\", mdraid.Degraded), mdraid.Degraded);\n\t                degraded_message = _react2.default.createElement(\n\t                    \"div\",\n\t                    { className: \"alert alert-danger\" },\n\t                    _react2.default.createElement(\"span\", { className: \"pficon pficon-error-circle-o\" }),\n\t                    _react2.default.createElement(\n\t                        \"span\",\n\t                        null,\n\t                        _(\"The RAID Array is in a degraded state\")\n\t                    ),\n\t                    \" - \",\n\t                    text\n\t                );\n\t            }\n\t\n\t            /* Older versions of Udisks/storaged don't have a Running property */\n\t            var running = mdraid.Running;\n\t            if (running === undefined) running = mdraid.ActiveDevices && mdraid.ActiveDevices.length > 0;\n\t\n\t            function start() {\n\t                return mdraid.Start({ \"start-degraded\": { t: 'b', v: true } });\n\t            }\n\t\n\t            function stop() {\n\t                return mdraid.Stop({});\n\t            }\n\t\n\t            function start_scrub() {\n\t                return mdraid.RequestSyncAction(\"repair\", {});\n\t            }\n\t\n\t            function stop_scrub() {\n\t                return mdraid.RequestSyncAction(\"idle\", {});\n\t            }\n\t\n\t            function delete_dialog() {\n\t                var location = _cockpit2.default.location;\n\t\n\t                function delete_() {\n\t                    if (mdraid.Delete) return mdraid.Delete({ 'tear-down': { t: 'b', v: true } });\n\t\n\t                    // If we don't have a Delete method, we simulate\n\t                    // it by stopping the array and wiping all\n\t                    // members.\n\t\n\t                    function wipe_members() {\n\t                        return _cockpit2.default.all(client.mdraids_members[mdraid.path].map(function (member) {\n\t                            return member.Format('empty', {});\n\t                        }));\n\t                    }\n\t\n\t                    if (mdraid.ActiveDevices && mdraid.ActiveDevices.length > 0) return mdraid.Stop({}).then(wipe_members);else return wipe_members();\n\t                }\n\t\n\t                var usage = _utils2.default.get_active_usage(client, block ? block.path : \"\");\n\t\n\t                if (usage.Blocking) {\n\t                    _dialog2.default.open({ Title: _cockpit2.default.format(_(\"$0 is in active use\"), _utils2.default.mdraid_name(mdraid)),\n\t                        Blocking: usage.Blocking,\n\t                        Fields: []\n\t                    });\n\t                    return;\n\t                }\n\t\n\t                _dialog2.default.open({ Title: _cockpit2.default.format(_(\"Please confirm deletion of $0\"), _utils2.default.mdraid_name(mdraid)),\n\t                    Teardown: usage.Teardown,\n\t                    Fields: [],\n\t                    Action: {\n\t                        Title: _(\"Delete\"),\n\t                        Danger: _(\"Deleting a RAID device will erase all data on it.\"),\n\t                        action: function action() {\n\t                            return _utils2.default.teardown_active_usage(client, usage).then(delete_).then(function () {\n\t                                location.go('/');\n\t                            });\n\t                        }\n\t                    }\n\t                });\n\t            }\n\t\n\t            var actions = [{ title: _(\"Start\"), action: start }, { title: _(\"Stop\"), action: stop }, { title: _(\"Start Scrubbing\"), action: start_scrub }, { title: _(\"Stop Scrubbing\"), action: stop_scrub }, { title: _(\"Delete\"), action: delete_dialog }];\n\t\n\t            var header = _react2.default.createElement(\n\t                \"div\",\n\t                { className: \"panel panel-default\" },\n\t                _react2.default.createElement(\n\t                    \"div\",\n\t                    { className: \"panel-heading\" },\n\t                    _cockpit2.default.format(_(\"RAID Device $0\"), _utils2.default.mdraid_name(mdraid)),\n\t                    _react2.default.createElement(\n\t                        \"span\",\n\t                        { className: \"pull-right\" },\n\t                        _react2.default.createElement(_storageControls.StorageMultiAction, { actions: actions, \"default\": running ? 1 : 0 })\n\t                    )\n\t                ),\n\t                _react2.default.createElement(\n\t                    \"div\",\n\t                    { className: \"panel-body\" },\n\t                    _react2.default.createElement(\n\t                        \"table\",\n\t                        { className: \"info-table-ct\" },\n\t                        _react2.default.createElement(\n\t                            \"tr\",\n\t                            null,\n\t                            _react2.default.createElement(\n\t                                \"td\",\n\t                                null,\n\t                                _(\"storage\", \"Device\")\n\t                            ),\n\t                            _react2.default.createElement(\n\t                                \"td\",\n\t                                null,\n\t                                block ? _utils2.default.decode_filename(block.PreferredDevice) : \"-\"\n\t                            )\n\t                        ),\n\t                        _react2.default.createElement(\n\t                            \"tr\",\n\t                            null,\n\t                            _react2.default.createElement(\n\t                                \"td\",\n\t                                null,\n\t                                _(\"storage\", \"UUID\")\n\t                            ),\n\t                            _react2.default.createElement(\n\t                                \"td\",\n\t                                null,\n\t                                mdraid.UUID\n\t                            )\n\t                        ),\n\t                        _react2.default.createElement(\n\t                            \"tr\",\n\t                            null,\n\t                            _react2.default.createElement(\n\t                                \"td\",\n\t                                null,\n\t                                _(\"storage\", \"Capacity\")\n\t                            ),\n\t                            _react2.default.createElement(\n\t                                \"td\",\n\t                                null,\n\t                                _utils2.default.fmt_size_long(mdraid.Size)\n\t                            )\n\t                        ),\n\t                        _react2.default.createElement(\n\t                            \"tr\",\n\t                            null,\n\t                            _react2.default.createElement(\n\t                                \"td\",\n\t                                null,\n\t                                _(\"storage\", \"RAID Level\")\n\t                            ),\n\t                            _react2.default.createElement(\n\t                                \"td\",\n\t                                null,\n\t                                level\n\t                            )\n\t                        ),\n\t                        bitmap,\n\t                        _react2.default.createElement(\n\t                            \"tr\",\n\t                            null,\n\t                            _react2.default.createElement(\n\t                                \"td\",\n\t                                null,\n\t                                _(\"storage\", \"State\")\n\t                            ),\n\t                            _react2.default.createElement(\n\t                                \"td\",\n\t                                null,\n\t                                running ? _(\"Running\") : _(\"Not running\")\n\t                            )\n\t                        )\n\t                    )\n\t                )\n\t            );\n\t\n\t            var sidebar = _react2.default.createElement(MDRaidSidebar, { client: this.props.client, mdraid: mdraid });\n\t\n\t            var content = _react2.default.createElement(_contentViews2.default.Block, { client: this.props.client, block: block });\n\t\n\t            return _react2.default.createElement(_details.StdDetailsLayout, { jobs: this.props.jobs, alert: degraded_message,\n\t                header: header,\n\t                sidebar: sidebar,\n\t                content: content });\n\t        }\n\t    }]);\n\t\n\t    return MDRaidDetails;\n\t}(_react2.default.Component);\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.Jobs = undefined;\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _cockpit = __webpack_require__(7);\n\t\n\tvar _cockpit2 = _interopRequireDefault(_cockpit);\n\t\n\tvar _react = __webpack_require__(32);\n\t\n\tvar _react2 = _interopRequireDefault(_react);\n\t\n\tvar _storageControls = __webpack_require__(37);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * This file is part of Cockpit.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Copyright (C) 2017 Red Hat, Inc.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Cockpit is free software; you can redistribute it and/or modify it\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * under the terms of the GNU Lesser General Public License as published by\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * the Free Software Foundation; either version 2.1 of the License, or\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * (at your option) any later version.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Cockpit is distributed in the hope that it will be useful, but\n\twithout even the implied warranty of\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Lesser General Public License for more details.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                *\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * You should have received a copy of the GNU Lesser General Public License\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n\t                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\t\n\tvar _ = _cockpit2.default.gettext;\n\t\n\tvar Jobs = exports.Jobs = function (_React$Component) {\n\t    _inherits(Jobs, _React$Component);\n\t\n\t    function Jobs() {\n\t        _classCallCheck(this, Jobs);\n\t\n\t        return _possibleConstructorReturn(this, (Jobs.__proto__ || Object.getPrototypeOf(Jobs)).apply(this, arguments));\n\t    }\n\t\n\t    _createClass(Jobs, [{\n\t        key: \"render\",\n\t        value: function render() {\n\t            var jobs = this.props.jobs.query();\n\t\n\t            if (jobs.length === 0) return null;\n\t\n\t            function job_row(job) {\n\t                function cancel() {\n\t                    return job.dbus.Cancel({});\n\t                }\n\t                return _react2.default.createElement(\n\t                    \"tr\",\n\t                    null,\n\t                    _react2.default.createElement(\n\t                        \"td\",\n\t                        { className: \"job-description\" },\n\t                        job.Description\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        job.Progress\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        \"td\",\n\t                        null,\n\t                        job.RemainingTime\n\t                    ),\n\t                    _react2.default.createElement(\n\t                        \"td\",\n\t                        { className: \"job-action\" },\n\t                        job.Cancelable ? _react2.default.createElement(\n\t                            _storageControls.StorageButton,\n\t                            { onClick: cancel },\n\t                            _(\"Cancel\")\n\t                        ) : null\n\t                    )\n\t                );\n\t            }\n\t\n\t            return _react2.default.createElement(\n\t                \"div\",\n\t                { className: \"detail-jobs panel panel-default\" },\n\t                _react2.default.createElement(\n\t                    \"div\",\n\t                    { className: \"panel-heading\" },\n\t                    _(\"Jobs\")\n\t                ),\n\t                _react2.default.createElement(\n\t                    \"table\",\n\t                    { className: \"table\" },\n\t                    _react2.default.createElement(\n\t                        \"tbody\",\n\t                        null,\n\t                        jobs.map(job_row)\n\t                    )\n\t                )\n\t            );\n\t        }\n\t    }]);\n\t\n\t    return Jobs;\n\t}(_react2.default.Component);\n\n/***/ },\n/* 54 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 55 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 56 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 57 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ },\n/* 58 */\n/***/ function(module, exports) {\n\n\t// removed by extract-text-webpack-plugin\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// storaged/storage.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 286e4c59a6a7e45c7f9c","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2015 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    var $ = require(\"jquery\");\n    var cockpit = require(\"cockpit\");\n\n    var client = require(\"./client\");\n    var jobs = require(\"./jobs\");\n    var overview = require(\"./overview\");\n    var details = require(\"./details.jsx\");\n    var utils = require(\"./utils\");\n\n    require(\"page.css\");\n    require(\"table.css\");\n    require(\"plot.css\");\n    require(\"journal.css\");\n    require(\"./storage.css\");\n\n    var _ = cockpit.gettext;\n\n    /* INITIALIZATION AND NAVIGATION\n     */\n\n    function init() {\n        var jobs_manager;\n        var overview_page;\n        var details_page;\n\n        $('body').on('click', '[data-goto-block]', function () {\n            cockpit.location.go([ $(this).attr('data-goto-block') ]);\n        });\n\n        $('body').on('click', '[data-goto-mdraid]', function () {\n            cockpit.location.go([ 'mdraid', $(this).attr('data-goto-mdraid') ]);\n        });\n\n        $('body').on('click', '[data-goto-vgroup]', function () {\n            cockpit.location.go([ 'vg', $(this).attr('data-goto-vgroup') ]);\n        });\n\n        utils.init_arming_zones($('body'));\n\n        function navigate() {\n            var path = cockpit.location.path;\n\n            if (path.length === 0) {\n                details_page.hide();\n                overview_page.show();\n            } else if (path.length == 1) {\n                overview_page.hide();\n                details_page.show('block', path[0]);\n            } else if (path.length == 2 && path[0] == 'mdraid') {\n                overview_page.hide();\n                details_page.show('mdraid', path[1]);\n            } else if (path.length == 2 && path[0] == 'vg') {\n                overview_page.hide();\n                details_page.show('vgroup', path[1]);\n            } else { /* redirect */\n                console.warn(\"not a init location: \" + path);\n                cockpit.location = '';\n            }\n            $(\"body\").show();\n        }\n\n        client.init(function () {\n            cockpit.translate();\n            if (client.features === false) {\n                $('#unsupported').show();\n                $(\"body\").show();\n            } else {\n                jobs_manager = jobs.init(client);\n                overview_page = overview.init(client, jobs_manager);\n                details_page = details.init(client, jobs_manager);\n                $(cockpit).on(\"locationchanged\", navigate);\n                navigate();\n            }\n        });\n\n        // Watching multipath for brokeness\n\n        var multipathd_service = utils.get_multipathd_service();\n\n        function update_multipath_broken() {\n            // When in doubt, assume everything is alright\n            var multipathd_running = !multipathd_service.state || multipathd_service.state === \"running\";\n            var multipath_broken = client.broken_multipath_present === true;\n            $('#multipath-broken').toggle(multipath_broken && !multipathd_running);\n        }\n\n        $(multipathd_service).on('changed', update_multipath_broken);\n        $(client).on('changed', update_multipath_broken);\n        update_multipath_broken();\n\n        $('#activate-multipath').on('click', function () {\n            cockpit.spawn([ \"mpathconf\", \"--enable\", \"--with_multipathd\", \"y\" ],\n                          { superuser: \"try\"\n                          }).\n                fail(function (error) {\n                    $('#error-popup-title').text(_(\"Error\"));\n                    $('#error-popup-message').text(error.toString());\n                    $('#error-popup').modal('show');\n                });\n        });\n    }\n\n    $(init);\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/storaged/devices.js\n// module id = 5\n// module chunks = 0","module.exports = jQuery;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jQuery\"\n// module id = 6\n// module chunks = 0 1","module.exports = cockpit;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"cockpit\"\n// module id = 7\n// module chunks = 0 1","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2015 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    var $ = require('jquery');\n    var cockpit = require('cockpit');\n\n    var utils = require('./utils');\n\n    var python = require(\"python.jsx\");\n    var inotify_py = require(\"raw!inotify.py\");\n    var nfs_mounts_py = require(\"raw!./nfs-mounts.py\");\n\n    /* STORAGED CLIENT\n     */\n\n    /* HACK: https://github.com/storaged-project/storaged/pull/68 */\n    var hacks = { };\n    if (cockpit.manifests[\"storage\"] && cockpit.manifests[\"storage\"][\"hacks\"])\n        hacks = cockpit.manifests[\"storage\"][\"hacks\"];\n\n    var client = { };\n\n    cockpit.event_target(client);\n\n    /* Metrics\n     */\n\n    function instance_sampler(metrics, source) {\n        var instances;\n        var self = {\n            data: { },\n            close: close\n        };\n\n        function handle_meta(msg) {\n            self.data = { };\n            instances = [ ];\n            for (var m = 0; m < msg.metrics.length; m++) {\n                instances[m] = msg.metrics[m].instances;\n                for (var i = 0; i < instances[m].length; i++)\n                    self.data[instances[m][i]] = [ ];\n            }\n        }\n\n        function handle_data(msg) {\n            var changed = false;\n            for (var s = 0; s < msg.length; s++) {\n                var metrics = msg[s];\n                for (var m = 0; m < metrics.length; m++) {\n                    var inst = metrics[m];\n                    for (var i = 0; i < inst.length; i++) {\n                        if (inst[i] !== null) {\n                            changed = true;\n                            self.data[instances[m][i]][m] = inst[i];\n                        }\n                    }\n                }\n            }\n            if (changed)\n                $(self).triggerHandler('changed');\n        }\n\n        var channel = cockpit.channel({ payload: \"metrics1\",\n                                        source: source || \"internal\",\n                                        metrics: metrics\n                                      });\n        $(channel).on(\"closed\", function (event, error) {\n            console.log(\"closed\", error);\n        });\n        $(channel).on(\"message\", function (event, message) {\n            var msg = JSON.parse(message);\n            if (msg.length)\n                handle_data(msg);\n            else\n                handle_meta(msg);\n        });\n\n        function close() {\n            channel.close();\n        }\n\n        return self;\n    }\n\n    /* D-Bus proxies\n     */\n\n    var STORAGED_SERVICE;\n    var STORAGED_OPATH_PFX;\n    var STORAGED_IFACE_PFX;\n\n    client.time_offset = undefined;  /* Number of milliseconds that the server is ahead of us. */\n    client.features = undefined;\n\n    client.storaged_client = undefined;\n\n    function proxy(iface, path) {\n        return client.storaged_client.proxy(STORAGED_IFACE_PFX + \".\" + iface,\n                                            STORAGED_OPATH_PFX + \"/\" + path,\n                                            { watch: true });\n    }\n\n    function proxies(iface) {\n        /* We create the proxies here with 'watch' set to false and\n         * establish a general watch for all of them.  This is more\n         * efficient since it reduces the number of D-Bus calls done\n         * by the cache.\n         */\n        return client.storaged_client.proxies(STORAGED_IFACE_PFX + \".\" + iface,\n                                              STORAGED_OPATH_PFX,\n                                              { watch: false });\n    }\n\n    client.call = function call(path, iface, method, args, options) {\n        return client.storaged_client.call(path, STORAGED_IFACE_PFX + \".\" + iface, method, args, options);\n    };\n\n    function init_proxies () {\n        client.storaged_client.watch({ path_namespace: STORAGED_OPATH_PFX });\n\n        client.mdraids = proxies(\"MDRaid\");\n        client.vgroups = proxies(\"VolumeGroup\");\n        client.lvols = proxies(\"LogicalVolume\");\n        client.drives = proxies(\"Drive\");\n        client.drives_ata = proxies(\"Drive.Ata\");\n        client.blocks = proxies(\"Block\");\n        client.blocks_ptable = proxies(\"PartitionTable\");\n        client.blocks_part = proxies(\"Partition\");\n        client.blocks_lvm2 = proxies(\"Block.LVM2\");\n        client.blocks_pvol = proxies(\"PhysicalVolume\");\n        client.blocks_fsys = proxies(\"Filesystem\");\n        client.blocks_crypto = proxies(\"Encrypted\");\n        client.blocks_swap = proxies(\"Swapspace\");\n        client.iscsi_sessions = proxies(\"ISCSI.Session\");\n        client.jobs = proxies(\"Job\");\n    }\n\n    /* Monitors\n     */\n\n    client.fsys_sizes = instance_sampler([ { name: \"mount.used\" },\n                                           { name: \"mount.total\" }\n                                         ]);\n\n    client.swap_sizes = instance_sampler([ { name: \"swapdev.length\" },\n                                           { name: \"swapdev.free\" },\n                                         ], \"direct\");\n\n    client.blockdev_io = instance_sampler([ { name: \"block.device.read\", derive: \"rate\" },\n                                            { name: \"block.device.written\", derive: \"rate\" }\n                                          ]);\n\n    /* Derived indices.\n     */\n\n    function is_multipath_master(block) {\n        // The master has \"mpath\" in its device mapper UUID.  In the\n        // future, storaged will hopefully provide this information\n        // directly.\n        if (block.Symlinks && block.Symlinks.length) {\n            for (var i = 0; i < block.Symlinks.length; i++)\n                if (utils.decode_filename(block.Symlinks[i]).indexOf(\"/dev/disk/by-id/dm-uuid-mpath-\") === 0)\n                    return true;\n        }\n        return false;\n    }\n\n    function update_indices() {\n        var path, block, mdraid, vgroup, pvol, lvol, part, i;\n\n        client.broken_multipath_present = false;\n        client.drives_multipath_blocks = { };\n        client.drives_block = { };\n        for (path in client.drives) {\n            client.drives_multipath_blocks[path] = [ ];\n        }\n        for (path in client.blocks) {\n            block = client.blocks[path];\n            if (!client.blocks_part[path] && client.drives_multipath_blocks[block.Drive] !== undefined) {\n                if (is_multipath_master(block))\n                    client.drives_block[block.Drive] = block;\n                else\n                    client.drives_multipath_blocks[block.Drive].push(block);\n            }\n        }\n        for (path in client.drives_multipath_blocks) {\n            /* If there is no multipath master and only a single\n             * member, then this is actually a normal singlepath\n             * device.\n             */\n\n            if (!client.drives_block[path] && client.drives_multipath_blocks[path].length == 1) {\n                client.drives_block[path] = client.drives_multipath_blocks[path][0];\n                client.drives_multipath_blocks[path] = [ ];\n            } else {\n                client.drives_multipath_blocks[path].sort(utils.block_cmp);\n                if (!client.drives_block[path])\n                    client.broken_multipath_present = true;\n            }\n        }\n\n        client.mdraids_block = { };\n        for (path in client.blocks) {\n            block = client.blocks[path];\n            if (block.MDRaid != \"/\")\n                client.mdraids_block[block.MDRaid] = block;\n        }\n\n        client.mdraids_members = { };\n        for (path in client.mdraids) {\n            client.mdraids_members[path] = [ ];\n        }\n        for (path in client.blocks) {\n            block = client.blocks[path];\n            if (client.mdraids_members[block.MDRaidMember] !== undefined)\n                client.mdraids_members[block.MDRaidMember].push(block);\n        }\n        for (path in client.mdraids_members) {\n            client.mdraids_members[path].sort(utils.block_cmp);\n        }\n\n        client.slashdevs_block = { };\n        function enter_slashdev(block, enc) {\n            client.slashdevs_block[utils.decode_filename(enc).replace(/^\\/dev\\//, \"\")] = block;\n        }\n        for (path in client.blocks) {\n            block = client.blocks[path];\n            enter_slashdev(block, block.Device);\n            enter_slashdev(block, block.PreferredDevice);\n            for (i = 0; i < block.Symlinks.length; i++)\n                enter_slashdev(block, block.Symlinks[i]);\n        }\n\n        client.uuids_mdraid = { };\n        for (path in client.mdraids) {\n            mdraid = client.mdraids[path];\n            client.uuids_mdraid[mdraid.UUID] = mdraid;\n        }\n\n        client.vgnames_vgroup = { };\n        for (path in client.vgroups) {\n            vgroup = client.vgroups[path];\n            client.vgnames_vgroup[vgroup.Name] = vgroup;\n        }\n\n        client.vgroups_pvols = { };\n        for (path in client.vgroups) {\n            client.vgroups_pvols[path] = [ ];\n        }\n        for (path in client.blocks_pvol) {\n            pvol = client.blocks_pvol[path];\n            if (client.vgroups_pvols[pvol.VolumeGroup] !== undefined)\n                client.vgroups_pvols[pvol.VolumeGroup].push(pvol);\n        }\n        function cmp_pvols(a, b) {\n            return utils.block_cmp(client.blocks[a.path], client.blocks[b.path]);\n        }\n        for (path in client.vgroups_pvols) {\n            client.vgroups_pvols[path].sort(cmp_pvols);\n        }\n\n        client.vgroups_lvols = { };\n        for (path in client.vgroups) {\n            client.vgroups_lvols[path] = [ ];\n        }\n        for (path in client.lvols) {\n            lvol = client.lvols[path];\n            if (client.vgroups_lvols[lvol.VolumeGroup] !== undefined)\n                client.vgroups_lvols[lvol.VolumeGroup].push(lvol);\n        }\n        for (path in client.vgroups_lvols) {\n            client.vgroups_lvols[path].sort(function (a, b) { return a.Name.localeCompare(b.Name); });\n        }\n\n        client.lvols_block = { };\n        for (path in client.blocks_lvm2) {\n            client.lvols_block[client.blocks_lvm2[path].LogicalVolume] = client.blocks[path];\n        }\n\n        client.lvols_pool_members = { };\n        for (path in client.lvols) {\n            if (client.lvols[path].Type == \"pool\")\n                client.lvols_pool_members[path] = [ ];\n        }\n        for (path in client.lvols) {\n            lvol = client.lvols[path];\n            if (client.lvols_pool_members[lvol.ThinPool] !== undefined)\n                client.lvols_pool_members[lvol.ThinPool].push(lvol);\n        }\n        for (path in client.lvols_pool_members) {\n            client.lvols_pool_members[path].sort(function (a, b) { return a.Name.localeCompare(b.Name); });\n        }\n\n        client.blocks_cleartext = { };\n        for (path in client.blocks) {\n            block = client.blocks[path];\n            if (block.CryptoBackingDevice != \"/\")\n                client.blocks_cleartext[block.CryptoBackingDevice] = block;\n        }\n\n        client.blocks_partitions = { };\n        for (path in client.blocks_ptable) {\n            client.blocks_partitions[path] = [ ];\n        }\n        for (path in client.blocks_part) {\n            part = client.blocks_part[path];\n            if (client.blocks_partitions[part.Table] !== undefined)\n                client.blocks_partitions[part.Table].push(part);\n        }\n        for (path in client.blocks_partitions) {\n            client.blocks_partitions[path].sort(function (a, b) { return a.Offset - b.Offset; });\n        }\n\n        client.path_jobs = { };\n        function enter_job(job) {\n            job.Objects.forEach(function (path) {\n                client.path_jobs[path] = job;\n                var parent = utils.get_parent(client, path);\n                while (parent) {\n                    path = parent;\n                    parent = utils.get_parent(client, path);\n                }\n                client.path_jobs[path] = job;\n            });\n        }\n        for (path in client.jobs) {\n            enter_job(client.jobs[path]);\n        }\n    }\n\n    function init_model(callback) {\n\n        function wait_all(objects, callback) {\n            var obj = objects.pop();\n            if (obj) {\n                obj.wait(function () {\n                    wait_all(objects, callback);\n                });\n            } else {\n                callback();\n            }\n        }\n\n        function pull_time() {\n            return cockpit.spawn([\"date\", \"+%s\"])\n                .then(function (now) {\n                    client.time_offset = parseInt(now, 10) * 1000 - new Date().getTime();\n                });\n        }\n\n        function enable_features() {\n            if (!client.manager.valid)\n                return cockpit.resolve(false);\n            if (!client.manager.EnableModules)\n                return cockpit.resolve({ });\n            return client.manager.EnableModules(true).then(\n                function() {\n                    var defer = cockpit.defer();\n                    client.manager_lvm2 = proxy(\"Manager.LVM2\", \"Manager\");\n                    client.manager_iscsi = proxy(\"Manager.ISCSI.Initiator\", \"Manager\");\n                    wait_all([ client.manager_lvm2, client.manager_iscsi],\n                            function () {\n                                var iscsi = (hacks.with_storaged_iscsi_sessions != \"no\" &&\n                                        client.manager_iscsi.valid &&\n                                        client.manager_iscsi.SessionsSupported !== false);\n                                defer.resolve({ lvm2: client.manager_lvm2.valid, iscsi: iscsi });\n                            });\n                    return defer.promise;\n                }, function(error) {\n                    console.warn(\"Can't enable storaged modules\", error.toString());\n                    return cockpit.resolve({ });\n                });\n        }\n\n        wait_all([ client.manager,\n                   client.mdraids, client.vgroups, client.drives,\n                   client.blocks, client.blocks_ptable, client.blocks_lvm2, client.blocks_fsys\n                 ], function () {\n            pull_time().then(function() {\n                enable_features().then(function(features) {\n                    client.features = features;\n                    callback();\n                });\n\n                $(client.storaged_client).on('notify', function () {\n                    update_indices();\n                    client.dispatchEvent(\"changed\");\n                });\n                update_indices();\n            });\n        });\n    }\n\n    client.older_than = function older_than(version) {\n        return utils.compare_versions(this.manager.Version, version) < 0;\n    };\n\n    /* NFS mounts\n     */\n\n    function nfs_mounts() {\n        var self = {\n            entries: [ ],\n            fsys_sizes: { },\n\n            get_fsys_size: get_fsys_size,\n            entry_users: entry_users,\n\n            update_entry: update_entry,\n            add_entry: add_entry,\n            remove_entry: remove_entry,\n\n            mount_entry: mount_entry,\n            unmount_entry: unmount_entry,\n            stop_and_unmount_entry: stop_and_unmount_entry,\n            stop_and_remove_entry: stop_and_remove_entry\n        };\n\n        function spawn_nfs_mounts(args) {\n            return python.spawn([ inotify_py, nfs_mounts_py ], args, { superuser: \"try\", err: \"message\" });\n        }\n\n        var buf = \"\";\n        spawn_nfs_mounts([ \"monitor\" ])\n            .stream(function (output) {\n                var lines;\n\n                buf += output;\n                lines = buf.split(\"\\n\");\n                buf = lines[lines.length-1];\n                if (lines.length >= 2) {\n                    self.entries = JSON.parse(lines[lines.length-2]);\n                    self.fsys_sizes = { };\n                    $(self).triggerHandler('changed');\n                }\n            }).\n            fail(function (error) {\n                if (error != \"closed\") {\n                    console.warn(error);\n                }\n            });\n\n        function get_fsys_size(entry) {\n            var path = entry.fields[1];\n            if (self.fsys_sizes[path])\n                return self.fsys_sizes[path];\n\n            if (self.fsys_sizes[path] === false)\n                return null;\n\n            self.fsys_sizes[path] = false;\n            cockpit.spawn([ \"stat\", \"-f\", \"-c\", \"[ %S, %f, %b ]\", path ], { err: \"message\" })\n                .done(function (output) {\n                    var data = JSON.parse(output);\n                    self.fsys_sizes[path] = [ (data[2]-data[1])*data[0], data[2]*data[0] ];\n                    $(self).triggerHandler('changed');\n                })\n                .fail(function () {\n                    self.fsys_sizes[path] = [ 0, 0 ];\n                    $(self).triggerHandler('changed');\n                });\n\n            return null;\n        }\n\n        function update_entry(entry, new_fields) {\n            return spawn_nfs_mounts([ \"update\", JSON.stringify(entry), JSON.stringify(new_fields) ]);\n        }\n\n        function add_entry(fields) {\n            return spawn_nfs_mounts([ \"add\", JSON.stringify(fields) ]);\n        }\n\n        function remove_entry(entry) {\n            return spawn_nfs_mounts([ \"remove\", JSON.stringify(entry) ]);\n        }\n\n        function mount_entry(entry) {\n            return spawn_nfs_mounts([ \"mount\", JSON.stringify(entry) ]);\n        }\n\n        function unmount_entry(entry) {\n            return spawn_nfs_mounts([ \"unmount\", JSON.stringify(entry) ]);\n        }\n\n        function stop_and_unmount_entry(users, entry) {\n            var units = users.map(function (u) { return u.unit; });\n            return spawn_nfs_mounts([ \"stop-and-unmount\", JSON.stringify(units), JSON.stringify(entry) ]);\n        }\n\n        function stop_and_remove_entry(users, entry) {\n            var units = users.map(function (u) { return u.unit; });\n            return spawn_nfs_mounts([ \"stop-and-remove\", JSON.stringify(units), JSON.stringify(entry) ]);\n        }\n\n        function entry_users(entry) {\n            return spawn_nfs_mounts([ \"users\", JSON.stringify(entry) ]).then(JSON.parse);\n        }\n\n        return self;\n    }\n\n    client.nfs = nfs_mounts();\n\n    function init_manager() {\n        /* Storaged 2.6 and later uses the UDisks2 API names, but try the\n         * older storaged API first as a fallback.\n         */\n\n        var storaged_service = \"org.storaged.Storaged\";\n        var storaged_opath_pfx = \"/org/storaged/Storaged\";\n        var storaged_iface_pfx = \"org.storaged.Storaged\";\n\n        var storaged = cockpit.dbus(storaged_service);\n        var storaged_manager = storaged.proxy(storaged_iface_pfx + \".Manager\",\n                storaged_opath_pfx + \"/Manager\", { watch: true });\n\n        function fallback_udisks() {\n            STORAGED_SERVICE = \"org.freedesktop.UDisks2\";\n            STORAGED_OPATH_PFX = \"/org/freedesktop/UDisks2\";\n            STORAGED_IFACE_PFX = \"org.freedesktop.UDisks2\";\n\n            var udisks = cockpit.dbus(STORAGED_SERVICE);\n            var udisks_manager = udisks.proxy(STORAGED_IFACE_PFX + \".Manager\",\n                    STORAGED_OPATH_PFX + \"/Manager\", { watch: true });\n\n            return udisks_manager.wait().then(function () {\n                return udisks_manager;\n            });\n        }\n\n        return storaged_manager.wait().then(function() {\n            if (storaged_manager.valid) {\n                console.log(\"Using older 'storaged' API: \" + storaged_service);\n                STORAGED_SERVICE = storaged_service;\n                STORAGED_OPATH_PFX = storaged_opath_pfx;\n                STORAGED_IFACE_PFX = storaged_iface_pfx;\n                return storaged_manager;\n            } else {\n                return fallback_udisks();\n            }\n        }, fallback_udisks);\n    }\n\n    client.init = function init_storaged(callback) {\n        init_manager().then(function(manager) {\n            client.storaged_client = manager.client;\n            client.manager = manager;\n\n            // The first storaged version with the UDisks2 API names was 2.6\n            client.is_old_udisks2 = (STORAGED_SERVICE == \"org.freedesktop.UDisks2\" && client.older_than(\"2.6\"));\n            if (client.is_old_udisks2)\n                console.log(\"Using older 'udisks2' implementation: \" + manager.Version);\n\n            init_proxies();\n            init_model(callback);\n        }, function() {\n            client.features = false;\n            callback();\n        });\n    };\n\n    module.exports = client;\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/storaged/client.js\n// module id = 8\n// module chunks = 0","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2015 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    var $ = require(\"jquery\");\n    var cockpit = require(\"cockpit\");\n\n    var mustache = require(\"mustache\");\n    var service = require(\"service\");\n\n    var _ = cockpit.gettext;\n    var C_ = cockpit.gettext;\n\n    /* UTILITIES\n     */\n\n    var utils = { };\n\n    utils.compare_versions = function compare_versions(a, b) {\n        function to_ints(str) {\n            return str.split(\".\").map(function (s) { return s ? parseInt(s, 10) : 0; });\n        }\n\n        var a_ints = to_ints(a);\n        var b_ints = to_ints(b);\n        var len = Math.min(a_ints.length, b_ints.length);\n        var i;\n\n        for (i = 0; i < len; i++) {\n            if (a_ints[i] == b_ints[i])\n                continue;\n            return a_ints[i] - b_ints[i];\n        }\n\n        return a_ints.length - b_ints.length;\n    };\n\n    utils.hostnamed = cockpit.dbus(\"org.freedesktop.hostname1\").proxy();\n\n    utils.array_find = function array_find(array, pred) {\n        for (var i = 0; i < array.length; i++)\n            if (pred(array[i]))\n                return array[i];\n        return undefined;\n    };\n\n    utils.flatten = function flatten(array_of_arrays) {\n        if (array_of_arrays.length > 0)\n            return Array.prototype.concat.apply([], array_of_arrays);\n        else\n            return [ ];\n    };\n\n    utils.decode_filename = function decode_filename(encoded) {\n        return cockpit.utf8_decoder().decode(cockpit.base64_decode(encoded).slice(0,-1));\n    };\n\n    utils.encode_filename = function encode_filename(decoded) {\n        return cockpit.base64_encode(cockpit.utf8_encoder().encode(decoded).concat([0]));\n    };\n\n    utils.fmt_size = function fmt_size(bytes) {\n        return cockpit.format_bytes(bytes, 1024);\n    };\n\n    utils.fmt_size_long = function fmt_size_long(bytes) {\n        var with_binary_unit = cockpit.format_bytes(bytes, 1024);\n        var with_decimal_unit = cockpit.format_bytes(bytes, 1000);\n        /* Translators: Used in \"...\" */\n        return with_binary_unit + \", \" + with_decimal_unit + \", \" + bytes + \" \" + C_(\"format-bytes\", \"bytes\");\n    };\n\n    utils.fmt_rate = function fmt_rate(bytes_per_sec) {\n        return cockpit.format_bytes_per_sec(bytes_per_sec, 1024);\n    };\n\n    utils.format_temperature = function format_temperature(kelvin) {\n        var celcius = kelvin - 273.15;\n        var fahrenheit = 9.0 * celcius / 5.0 + 32.0;\n        return celcius.toFixed(1) + \"° C / \" + fahrenheit.toFixed(1) + \"° F\";\n    };\n\n    utils.format_fsys_usage = function format_fsys_usage(used, total) {\n        var text = \"\";\n        var units = 1024;\n        var parts = cockpit.format_bytes(total, units, true);\n        text = \" / \" + parts.join(\" \");\n        units = parts[1];\n\n        parts = cockpit.format_bytes(used, units, true);\n        return parts[0] + text;\n    };\n\n    utils.format_delay = function format_delay(d) {\n        var seconds = Math.round(d/1000);\n        var minutes = Math.floor(seconds / 60);\n        var hours = Math.floor(minutes / 60);\n        seconds = seconds - minutes*60;\n        minutes = minutes - hours*60;\n\n        var s = seconds + \" seconds\";\n        if (minutes > 0)\n            s = minutes + \" minutes, \" + s;\n        if (hours > 0)\n            s = hours + \" hours, \" + s;\n        return s;\n    };\n\n    utils.format_size_and_text = function format_size_and_text(size, text) {\n        return cockpit.format(_(\"${size} ${desc}\"), { size: utils.fmt_size(size), desc: text});\n    };\n\n    utils.validate_lvm2_name = function validate_lvm2_name(name) {\n        if (name === \"\")\n            return _(\"Name cannot be empty.\");\n        if (name.length > 127)\n            return _(\"Name cannot be longer than 127 characters.\");\n        var m = name.match(/[^a-zA-Z0-9+._-]/);\n        if (m) {\n            if (m[0].search(/\\s+/) === -1)\n                return cockpit.format(_(\"Name cannot contain the character '$0'.\"), m[0]);\n            else\n                    return cockpit.format(_(\"Name cannot contain whitespace.\"), m[0]);\n        }\n    };\n\n    utils.block_name = function block_name(block) {\n        return utils.decode_filename(block.PreferredDevice);\n    };\n\n    utils.mdraid_name = function mdraid_name(mdraid) {\n        if (!mdraid.Name)\n            return \"\";\n\n        var parts = mdraid.Name.split(\":\");\n\n        if (parts.length != 2)\n            return mdraid.Name;\n\n        /* if we call hostnamed too early, before the dbus.proxy() promise is fulfilled,\n         * it will not be valid yet; it's too inconvenient to make this\n         * function asynchronous, so just don't show the host name in this case */\n        if (utils.hostnamed.StaticHostname === undefined || parts[0] == utils.hostnamed.StaticHostname)\n            return parts[1];\n        else\n            return cockpit.format(_(\"$name (from $host)\"),\n                                  { name: parts[1],\n                                    host: parts[0]\n                                  });\n    };\n\n    utils.lvol_name = function lvol_name(lvol) {\n        var type;\n        if (lvol.Type == \"pool\")\n            type = _(\"Pool for Thin Logical Volumes\");\n        else if (lvol.ThinPool != \"/\")\n            type =_(\"Thin Logical Volume\");\n        else if (lvol.Origin != \"/\")\n            type = _(\"Logical Volume (Snapshot)\");\n        else\n            type = _(\"Logical Volume\");\n        return mustache.render('{{Type}} \"{{Name}}\"', { Type: type, Name: lvol.Name });\n    };\n\n    utils.drive_name = function drive_name(drive) {\n        var name_parts = [ ];\n        if (drive.Vendor)\n            name_parts.push(drive.Vendor);\n        if (drive.Model)\n            name_parts.push(drive.Model);\n\n        var name = name_parts.join(\" \");\n        if (drive.Serial)\n            name += \" (\" + drive.Serial + \")\";\n        else if (drive.WWN)\n            name += \" (\" + drive.WWN + \")\";\n\n        return name;\n    };\n\n    utils.get_block_link_target = function get_block_link_target(client, path) {\n        var is_part, is_crypt, is_lvol;\n\n        while (true) {\n            if (client.blocks_part[path] && client.blocks_ptable[client.blocks_part[path].Table]) {\n                is_part = true;\n                path = client.blocks_part[path].Table;\n            } else if (client.blocks[path] && client.blocks[client.blocks[path].CryptoBackingDevice]) {\n                is_crypt = true;\n                path = client.blocks[path].CryptoBackingDevice;\n            } else\n                break;\n        }\n\n        if (client.blocks_lvm2[path] && client.lvols[client.blocks_lvm2[path].LogicalVolume])\n            is_lvol = true;\n\n        function fmt_part(link) {\n            // Partitions of logical volumes are shown as just logical volumes.\n            if (is_lvol && is_crypt)\n                return cockpit.format(_(\"<span>Encrypted Logical Volume of $0</span>\"), link);\n            else if (is_part && is_crypt)\n                return cockpit.format(_(\"<span>Encrypted Partition of $0</span>\"), link);\n            else if (is_lvol)\n                return cockpit.format(_(\"<span>Logical Volume of $0</span>\"), link);\n            else if (is_part)\n                return cockpit.format(_(\"<span>Partition of $0</span>\"), link);\n            else if (is_crypt)\n                return cockpit.format(_(\"<span>Encrypted $0</span>\"), link);\n            else\n                return link;\n        }\n\n        var block = client.blocks[path];\n        if (!block)\n            return;\n\n        var type, target, name;\n        if (client.mdraids[block.MDRaid]) {\n            type = \"mdraid\";\n            target = client.mdraids[block.MDRaid].UUID;\n            name = cockpit.format(_(\"RAID Device $0\"), utils.mdraid_name(client.mdraids[block.MDRaid]));\n        } else if (client.blocks_lvm2[path] &&\n                   client.lvols[client.blocks_lvm2[path].LogicalVolume] &&\n                   client.vgroups[client.lvols[client.blocks_lvm2[path].LogicalVolume].VolumeGroup]) {\n            type = \"vgroup\";\n            target = client.vgroups[client.lvols[client.blocks_lvm2[path].LogicalVolume].VolumeGroup].Name;\n            name = cockpit.format(_(\"Volume Group $0\"), target);\n        } else {\n            type = \"block\";\n            target = utils.block_name(block).replace(/^\\/dev\\//, \"\");\n            if (client.drives[block.Drive])\n                name = utils.drive_name(client.drives[block.Drive]);\n            else\n                name = utils.block_name(block);\n        }\n\n        return {\n            type: type,\n            target: target,\n            html: fmt_part(mustache.render('<a data-goto-{{type}}=\"{{target}}\">{{name}}</a>',\n                                           { type: type, target: target, name: name }))\n        };\n    };\n\n    utils.get_partitions = function get_partitions(client, block) {\n        var partitions = client.blocks_partitions[block.path];\n\n        function process_level(level, container_start, container_size) {\n            var n;\n            var last_end = container_start;\n            var total_end = container_start + container_size;\n            var block, start, size, is_container, is_contained;\n\n            var result = [ ];\n\n            function append_free_space(start, size) {\n                // There is a lot of rounding and aligning going on in\n                // the storage stack.  All of udisks2, libblockdev,\n                // and libparted seem to contribute their own ideas of\n                // where a partition really should start.\n                //\n                // The start of partitions are aggressively rounded\n                // up, sometimes twice, but the end is not aligned in\n                // the same way.  This means that a few megabytes of\n                // free space will show up between partitions.\n                //\n                // We hide these small free spaces because they are\n                // unexpected and can't be used for anything anyway.\n                //\n                // \"Small\" is anything less than 3 MiB, which seems to\n                // work okay.  (The worst case is probably creating\n                // the first logical partition inside a extended\n                // partition with udisks+libblockdev.  It leads to a 2\n                // MiB gap.)\n\n                if (size >= 3*1024*1024) {\n                    result.push({ type: 'free', start: start, size: size });\n                }\n            }\n\n            for (n = 0; n < partitions.length; n++) {\n                block = client.blocks[partitions[n].path];\n                start = partitions[n].Offset;\n                size = partitions[n].Size;\n                is_container = partitions[n].IsContainer;\n                is_contained = partitions[n].IsContained;\n\n                if (block === null)\n                    continue;\n\n                if (level === 0 && is_contained)\n                    continue;\n\n                if (level == 1 && !is_contained)\n                    continue;\n\n                if (start < container_start || start+size > container_start+container_size)\n                    continue;\n\n                append_free_space(last_end, start - last_end);\n                if (is_container) {\n                    result.push({ type: 'container', block: block, size: size,\n                                  partitions: process_level(level+1, start, size) });\n                } else {\n                    result.push({ type: 'block', block: block });\n                }\n                last_end = start + size;\n            }\n\n            append_free_space(last_end, total_end - last_end);\n\n            return result;\n        }\n\n        return process_level(0, 0, block.Size);\n    };\n\n    utils.get_available_spaces = function get_available_spaces(client) {\n        function is_free(path) {\n            var block = client.blocks[path];\n            var block_ptable = client.blocks_ptable[path];\n            var block_part = client.blocks_part[path];\n            var block_pvol = client.blocks_pvol[path];\n\n            function has_fs_label() {\n                if (!block.IdUsage)\n                    return false;\n                // Devices with a LVM2_member label need to actually be\n                // associated with a volume group.\n                if (block.IdType == 'LVM2_member' && (!block_pvol || !client.vgroups[block_pvol.VolumeGroup]))\n                    return false;\n                return true;\n            }\n\n            function is_mpath_member() {\n                if (!client.drives[block.Drive])\n                    return false;\n                if (!client.drives_block[block.Drive]) {\n                    // Broken multipath drive\n                    return true;\n                }\n                var members = client.drives_multipath_blocks[block.Drive];\n                for (var i = 0; i < members.length; i++) {\n                    if (members[i] == block)\n                        return true;\n                }\n                return false;\n            }\n\n            return (!block.HintIgnore &&\n                    block.Size > 0 &&\n                    !has_fs_label() &&\n                    !is_mpath_member() &&\n                    !block_ptable &&\n                    !(block_part && block_part.IsContainer));\n        }\n\n        function make(path) {\n            var block = client.blocks[path];\n            var link = utils.get_block_link_target(client, path);\n            var text = $('<div>').html(link.html).text();\n            return { type: 'block', block: block, size: block.Size, desc: text };\n        }\n\n        var spaces = Object.keys(client.blocks).filter(is_free).sort(utils.make_block_path_cmp(client)).map(make);\n\n        function add_free_spaces(block) {\n            var parts = utils.get_partitions(client, block);\n            var i, p, link, text;\n            for (i in parts) {\n                p = parts[i];\n                if (p.type == 'free') {\n                    link = utils.get_block_link_target(client, block.path);\n                    text = $('<div>').html(link.html).text();\n                    spaces.push({ type: 'free', block: block, start: p.start, size: p.size,\n                                  desc: cockpit.format(_(\"unpartitioned space on $0\"), text) });\n                }\n            }\n        }\n\n        for (var p in client.blocks_ptable)\n            add_free_spaces(client.blocks[p]);\n\n        return spaces;\n    };\n\n    utils.available_space_to_option = function available_space_to_option(spc) {\n        return {\n            value: spc,\n            Title: utils.format_size_and_text(spc.size, spc.desc),\n            Label: utils.block_name(spc.block)\n        };\n    };\n\n    utils.prepare_available_spaces = function prepare_available_spaces(client, spcs) {\n        function prepare(spc) {\n            if (spc.type == 'block')\n                return cockpit.resolve(spc.block.path);\n            else if (spc.type == 'free') {\n                var block_ptable = client.blocks_ptable[spc.block.path];\n                return block_ptable.CreatePartition(spc.start, spc.size, \"\", \"\", { });\n            }\n        }\n        return cockpit.all(spcs.map(prepare));\n    };\n\n    /* Comparison function for sorting lists of block devices.\n\n       We sort by major:minor numbers to get the expected order when\n       there are more than 10 devices of a kind.  For example, if you\n       have 20 loopback devices named loop0 to loop19, sorting them\n       alphabetically would put them in the wrong order\n\n           loop0, loop1, loop10, loop11, ..., loop2, ...\n\n       Sorting by major:minor is an easy way to do the right thing.\n    */\n\n    utils.block_cmp = function block_cmp(a, b) {\n        return a.DeviceNumber - b.DeviceNumber;\n    };\n\n    utils.make_block_path_cmp = function(client) {\n        return function(path_a, path_b) {\n            return utils.block_cmp(client.blocks[path_a], client.blocks[path_b]);\n        };\n    };\n\n    var multipathd_service;\n\n    utils.get_multipathd_service = function() {\n        if (!multipathd_service)\n            multipathd_service = service.proxy(\"multipathd\");\n        return multipathd_service;\n    };\n\n    utils.init_arming_zones = function init_arming_zones($top) {\n        $top.on('click', 'button.arm-button', function () {\n            var was_active = $(this).hasClass('active');\n            $(this).toggleClass('active', !was_active);\n            $(this).parents('.arming-zone').toggleClass('armed', !was_active);\n        });\n    };\n\n    utils.reset_arming_zone = function reset_arming_zone($btn) {\n        var $zone = $btn.parents('.arming-zone');\n        var $arm_btn = $zone.find('.arm-button');\n        $arm_btn.removeClass('active');\n        $zone.removeClass('armed');\n    };\n\n\n    utils.get_parent = function(client, path) {\n        if (client.blocks_part[path] && client.blocks[client.blocks_part[path].Table])\n            return client.blocks_part[path].Table;\n        if (client.blocks[path] && client.blocks[client.blocks[path].CryptoBackingDevice])\n            return client.blocks[path].CryptoBackingDevice;\n        if (client.blocks[path] && client.drives[client.blocks[path].Drive])\n            return client.blocks[path].Drive;\n        if (client.blocks[path] && client.mdraids[client.blocks[path].MDRaid])\n            return client.blocks[path].MDRaid;\n        if (client.blocks_lvm2[path] && client.lvols[client.blocks_lvm2[path].LogicalVolume])\n            return client.blocks_lvm2[path].LogicalVolume;\n        if (client.lvols[path] && client.vgroups[client.lvols[path].VolumeGroup])\n            return client.lvols[path].VolumeGroup;\n    };\n\n    function get_children(client, path) {\n        var children = [ ];\n\n        if (client.blocks_cleartext[path]) {\n            children.push(client.blocks_cleartext[path].path);\n        }\n\n        if (client.blocks_ptable[path]) {\n            client.blocks_partitions[path].forEach(function (part) {\n                if (!part.IsContainer)\n                    children.push(part.path);\n            });\n        }\n\n        if (client.blocks_part[path] && client.blocks_part[path].IsContainer) {\n            var ptable_path = client.blocks_part[path].Table;\n            client.blocks_partitions[ptable_path].forEach(function (part) {\n                if (part.IsContained)\n                    children.push(part.path);\n            });\n        }\n\n        if (client.vgroups[path]) {\n            client.vgroups_lvols[path].forEach(function (lvol) {\n                if (client.lvols_block[lvol.path])\n                    children.push(client.lvols_block[lvol.path].path);\n            });\n        }\n\n        return children;\n    }\n\n    utils.get_active_usage = function get_active_usage(client, path) {\n\n        function get_usage(path) {\n            var block = client.blocks[path];\n            var fsys = client.blocks_fsys[path];\n            var mdraid = block && client.mdraids[block.MDRaidMember];\n            var pvol = client.blocks_pvol[path];\n            var vgroup = pvol && client.vgroups[pvol.VolumeGroup];\n\n            var usage = utils.flatten(get_children(client, path).map(get_usage));\n\n            if (fsys && fsys.MountPoints.length > 0)\n                usage.push({ usage: 'mounted',\n                             block: block,\n                             fsys: fsys\n                           });\n\n            if (mdraid)\n                usage.push({ usage: 'mdraid-member',\n                             block: block,\n                             mdraid: mdraid\n                           });\n\n            if (vgroup)\n                usage.push({ usage: 'pvol',\n                             block: block,\n                             pvol: pvol,\n                             vgroup: vgroup\n                           });\n\n            return usage;\n        }\n\n        // Prepare the result for Mustache\n\n        var usage = get_usage(path);\n\n        var res = {\n            raw: usage,\n            Teardown: {\n                Mounts: [ ],\n                MDRaidMembers: [ ],\n                PhysicalVolumes: [ ]\n            },\n            Blocking: {\n                Mounts: [ ],\n                MDRaidMembers: [ ],\n                PhysicalVolumes: [ ]\n            }\n        };\n\n        usage.forEach(function (use) {\n            var entry, active_state;\n\n            if (use.usage == 'mounted') {\n                res.Teardown.Mounts.push({\n                    Name: utils.block_name(use.block),\n                    MountPoint: utils.decode_filename(use.fsys.MountPoints[0])\n                });\n            } else if (use.usage == 'mdraid-member') {\n                entry = {\n                    Name: utils.block_name(use.block),\n                    MDRaid: utils.mdraid_name(use.mdraid)\n                };\n                active_state = utils.array_find(use.mdraid.ActiveDevices, function (as) {\n                    return as[0] == use.block.path;\n                });\n                if (active_state && active_state[1] < 0)\n                    res.Teardown.MDRaidMembers.push(entry);\n                else\n                    res.Blocking.MDRaidMembers.push(entry);\n            } else if (use.usage == 'pvol') {\n                entry = {\n                    Name: utils.block_name(use.block),\n                    VGroup: use.vgroup.Name\n                };\n                if (use.pvol.FreeSize == use.pvol.Size) {\n                    res.Teardown.PhysicalVolumes.push(entry);\n                } else {\n                    res.Blocking.PhysicalVolumes.push(entry);\n                }\n            }\n        });\n\n        res.Teardown.HasMounts = res.Teardown.Mounts.length > 0;\n        res.Teardown.HasMDRaidMembers = res.Teardown.MDRaidMembers.length > 0;\n        res.Teardown.HasPhysicalVolumes = res.Teardown.PhysicalVolumes.length > 0;\n\n        res.Blocking.HasMounts = res.Blocking.Mounts.length > 0;\n        res.Blocking.HasMDRaidMembers = res.Blocking.MDRaidMembers.length > 0;\n        res.Blocking.HasPhysicalVolumes = res.Blocking.PhysicalVolumes.length > 0;\n\n        if (!res.Blocking.HasMounts && !res.Blocking.HasMDRaidMembers && !res.Blocking.HasPhysicalVolumes)\n            res.Blocking = null;\n\n        return res;\n    };\n\n    utils.teardown_active_usage = function teardown_active_usage(client, usage) {\n\n        // The code below is complicated by the fact that the last\n        // physical volume of a volume group can not be removed\n        // directly (even if it is completely empty).  We want to\n        // remove the whole volume group instead in this case.\n        //\n        // However, we might be removing the last two (or more)\n        // physical volumes here, and it is easiest to catch this\n        // condition upfront by reshuffling the data structures.\n\n        function unmount(mounteds) {\n            return cockpit.all(mounteds.map(function (m) {\n                return m.fsys.Unmount({});\n            }));\n        }\n\n        function mdraid_remove(members) {\n            return cockpit.all(members.map(function (m) {\n                return m.mdraid.RemoveDevice(m.block.path, { wipe: { t: 'b', v: true } });\n            }));\n        }\n\n        function pvol_remove(pvols) {\n            var by_vgroup = { }, p;\n            pvols.forEach(function (p) {\n                if (!by_vgroup[p.vgroup.path])\n                    by_vgroup[p.vgroup.path] = [ ];\n                by_vgroup[p.vgroup.path].push(p.block);\n            });\n\n            function handle_vg(p) {\n                var vg = client.vgroups[p];\n                var pvs = by_vgroup[p];\n                // If we would remove all physical volumes of a volume\n                // group, remove the whole volume group instead.\n                if (pvs.length == client.vgroups_pvols[p].length) {\n                    return vg.Delete({ 'tear-down': { t: 'b', v: true }\n                                     });\n                } else {\n                    return cockpit.all(pvs.map(function (pv) {\n                        return vg.RemoveDevice(pv.path, true, {});\n                    }));\n                }\n            }\n\n            for (p in by_vgroup)\n                handle_vg(p);\n        }\n\n        return cockpit.all([ unmount(usage.raw.filter(function(use) { return use.usage == \"mounted\"; })),\n                             mdraid_remove(usage.raw.filter(function(use) { return use.usage == \"mdraid-member\"; })),\n                             pvol_remove(usage.raw.filter(function(use) { return use.usage == \"pvol\"; }))\n                           ]);\n    };\n\n    /* jQuery.amend function. This will be removed as we move towards React */\n\n    function sync(output, input, depth) {\n        var na, nb, a, b, i;\n        var attrs, attr, seen;\n\n        if (depth > 0) {\n            if (output.nodeType != input.nodeType ||\n                output.nodeName != input.nodeName ||\n                (output.nodeType != 1 && output.nodeType != 3)) {\n                output.parentNode.replaceChild(input.parentNode.removeChild(input), output);\n                return;\n\n            } else if (output.nodeType == 3) {\n                if (output.nodeValue != input.nodeValue)\n                    output.nodeValue = input.nodeValue;\n                return;\n            }\n        }\n\n        if (output.nodeType == 1) {\n\n            /* Sync attributes */\n            if (depth > 0) {\n                seen = { };\n                attrs = output.attributes;\n                for (i = attrs.length - 1; i >= 0; i--)\n                    seen[attrs[i].name] = attrs[i].value;\n                for (i = input.attributes.length - 1; i >= 0; i--) {\n                    attr = input.attributes[i];\n                    if (seen[attr.name] !== attr.value)\n                        output.setAttribute(attr.name, attr.value);\n                    delete seen[attr.name];\n                }\n                for (i in seen)\n                    output.removeAttribute(i);\n            }\n\n            /* Sync children */\n            na = output.firstChild;\n            nb = input.firstChild;\n            for(;;) {\n                a = na;\n                b = nb;\n                while (a && a.nodeType != 1 && a.nodeType != 3)\n                    a = a.nextSibling;\n                while (b && b.nodeType != 1 && b.nodeType != 3)\n                    b = b.nextSibling;\n                if (!a && !b) {\n                    break;\n                } else if (!a) {\n                    na = null;\n                    nb = b.nextSibling;\n                    output.appendChild(input.removeChild(b));\n                } else if (!b) {\n                    na = a.nextSibling;\n                    nb = null;\n                    output.removeChild(a);\n                } else {\n                    na = a.nextSibling;\n                    nb = b.nextSibling;\n                    sync(a, b, (depth || 0) + 1);\n                }\n            }\n        }\n    }\n\n    $.fn.amend = function amend(data, options) {\n        this.each(function() {\n            var el = $(\"<div>\").html(data);\n            sync(this, el[0], 0);\n        });\n        return this;\n    };\n\n    /* Prevent flicker due to the marriage of jQuery and React here */\n    utils.hide = function hide(selector) {\n        var element = document.querySelector(\"#storage-detail\");\n        element.setAttribute(\"hidden\", \"\");\n    };\n\n    utils.show_soon = function show_soon(selector, ready) {\n        var element = document.querySelector(selector);\n        if (!element.hasAttribute(\"hidden\"))\n            return;\n        var val = element.getAttribute(\"hidden\");\n        if (ready) {\n            element.removeAttribute(\"hidden\");\n            window.clearTimeout(parseInt(val, 10));\n        } else if (!val) {\n            val = window.setTimeout(function() {\n                show_soon(selector, true);\n            }, 2000);\n            element.setAttribute(\"hidden\", String(val));\n        }\n    };\n\n    module.exports = utils;\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/storaged/utils.js\n// module id = 9\n// module chunks = 0 1","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar cockpit = require(\"cockpit\");\nvar mustache = require(\"mustache/mustache\");\n\n/*\n * Turns a mustache template into a translated mustache template\n * by preparsing it and translating it.\n */\nvar cache = { };\n\nfunction translate(template) {\n    if (template in cache)\n        return cache[template];\n    var div = document.createElement(\"div\");\n    div.innerHTML = template;\n    cockpit.translate(div);\n    var result = div.innerHTML;\n    cache[template] = result;\n    return result;\n}\n\n/* Just like the mustache object, except for translated */\nmodule.exports = cockpit.extend({ }, mustache, {\n    render: function render(template, view, partials) {\n        return translate(mustache.render(template, view, partials));\n    },\n    to_html: function to_html(template, view, partials, send) {\n        return translate(mustache.to_html(template, view, partials, send));\n    },\n    clearCache: function clearCache() {\n        cache = { };\n        return mustache.clearCache();\n    }\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/mustache.js\n// module id = 10\n// module chunks = 0 1","/*!\n * mustache.js - Logic-less {{mustache}} templates with JavaScript\n * http://github.com/janl/mustache.js\n */\n\n/*global define: false*/\n\n(function (root, factory) {\n  if (typeof exports === \"object\" && exports) {\n    factory(exports); // CommonJS\n  } else {\n    var mustache = {};\n    factory(mustache);\n    if (typeof define === \"function\" && define.amd) {\n      define(mustache); // AMD\n    } else {\n      root.Mustache = mustache; // <script>\n    }\n  }\n}(this, function (mustache) {\n\n  // Workaround for https://issues.apache.org/jira/browse/COUCHDB-577\n  // See https://github.com/janl/mustache.js/issues/189\n  var RegExp_test = RegExp.prototype.test;\n  function testRegExp(re, string) {\n    return RegExp_test.call(re, string);\n  }\n\n  var nonSpaceRe = /\\S/;\n  function isWhitespace(string) {\n    return !testRegExp(nonSpaceRe, string);\n  }\n\n  var Object_toString = Object.prototype.toString;\n  var isArray = Array.isArray || function (object) {\n    return Object_toString.call(object) === '[object Array]';\n  };\n\n  function isFunction(object) {\n    return typeof object === 'function';\n  }\n\n  function escapeRegExp(string) {\n    return string.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n  }\n\n  var entityMap = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    \"/\": '&#x2F;'\n  };\n\n  function escapeHtml(string) {\n    return String(string).replace(/[&<>\"'\\/]/g, function (s) {\n      return entityMap[s];\n    });\n  }\n\n  function escapeTags(tags) {\n    if (!isArray(tags) || tags.length !== 2) {\n      throw new Error('Invalid tags: ' + tags);\n    }\n\n    return [\n      new RegExp(escapeRegExp(tags[0]) + \"\\\\s*\"),\n      new RegExp(\"\\\\s*\" + escapeRegExp(tags[1]))\n    ];\n  }\n\n  var whiteRe = /\\s*/;\n  var spaceRe = /\\s+/;\n  var equalsRe = /\\s*=/;\n  var curlyRe = /\\s*\\}/;\n  var tagRe = /#|\\^|\\/|>|\\{|&|=|!/;\n\n  /**\n   * Breaks up the given `template` string into a tree of tokens. If the `tags`\n   * argument is given here it must be an array with two string values: the\n   * opening and closing tags used in the template (e.g. [ \"<%\", \"%>\" ]). Of\n   * course, the default is to use mustaches (i.e. mustache.tags).\n   *\n   * A token is an array with at least 4 elements. The first element is the\n   * mustache symbol that was used inside the tag, e.g. \"#\" or \"&\". If the tag\n   * did not contain a symbol (i.e. {{myValue}}) this element is \"name\". For\n   * all text that appears outside a symbol this element is \"text\".\n   *\n   * The second element of a token is its \"value\". For mustache tags this is\n   * whatever else was inside the tag besides the opening symbol. For text tokens\n   * this is the text itself.\n   *\n   * The third and fourth elements of the token are the start and end indices,\n   * respectively, of the token in the original template.\n   *\n   * Tokens that are the root node of a subtree contain two more elements: 1) an\n   * array of tokens in the subtree and 2) the index in the original template at\n   * which the closing tag for that section begins.\n   */\n  function parseTemplate(template, tags) {\n    tags = tags || mustache.tags;\n    template = template || '';\n\n    if (typeof tags === 'string') {\n      tags = tags.split(spaceRe);\n    }\n\n    var tagRes = escapeTags(tags);\n    var scanner = new Scanner(template);\n\n    var sections = [];     // Stack to hold section tokens\n    var tokens = [];       // Buffer to hold the tokens\n    var spaces = [];       // Indices of whitespace tokens on the current line\n    var hasTag = false;    // Is there a {{tag}} on the current line?\n    var nonSpace = false;  // Is there a non-space char on the current line?\n\n    // Strips all whitespace tokens array for the current line\n    // if there was a {{#tag}} on it and otherwise only space.\n    function stripSpace() {\n      if (hasTag && !nonSpace) {\n        while (spaces.length) {\n          delete tokens[spaces.pop()];\n        }\n      } else {\n        spaces = [];\n      }\n\n      hasTag = false;\n      nonSpace = false;\n    }\n\n    var start, type, value, chr, token, openSection;\n    while (!scanner.eos()) {\n      start = scanner.pos;\n\n      // Match any text between tags.\n      value = scanner.scanUntil(tagRes[0]);\n      if (value) {\n        for (var i = 0, len = value.length; i < len; ++i) {\n          chr = value.charAt(i);\n\n          if (isWhitespace(chr)) {\n            spaces.push(tokens.length);\n          } else {\n            nonSpace = true;\n          }\n\n          tokens.push(['text', chr, start, start + 1]);\n          start += 1;\n\n          // Check for whitespace on the current line.\n          if (chr === '\\n') {\n            stripSpace();\n          }\n        }\n      }\n\n      // Match the opening tag.\n      if (!scanner.scan(tagRes[0])) break;\n      hasTag = true;\n\n      // Get the tag type.\n      type = scanner.scan(tagRe) || 'name';\n      scanner.scan(whiteRe);\n\n      // Get the tag value.\n      if (type === '=') {\n        value = scanner.scanUntil(equalsRe);\n        scanner.scan(equalsRe);\n        scanner.scanUntil(tagRes[1]);\n      } else if (type === '{') {\n        value = scanner.scanUntil(new RegExp('\\\\s*' + escapeRegExp('}' + tags[1])));\n        scanner.scan(curlyRe);\n        scanner.scanUntil(tagRes[1]);\n        type = '&';\n      } else {\n        value = scanner.scanUntil(tagRes[1]);\n      }\n\n      // Match the closing tag.\n      if (!scanner.scan(tagRes[1])) {\n        throw new Error('Unclosed tag at ' + scanner.pos);\n      }\n\n      token = [ type, value, start, scanner.pos ];\n      tokens.push(token);\n\n      if (type === '#' || type === '^') {\n        sections.push(token);\n      } else if (type === '/') {\n        // Check section nesting.\n        openSection = sections.pop();\n\n        if (!openSection) {\n          throw new Error('Unopened section \"' + value + '\" at ' + start);\n        }\n        if (openSection[1] !== value) {\n          throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + start);\n        }\n      } else if (type === 'name' || type === '{' || type === '&') {\n        nonSpace = true;\n      } else if (type === '=') {\n        // Set the tags for the next time around.\n        tagRes = escapeTags(tags = value.split(spaceRe));\n      }\n    }\n\n    // Make sure there are no open sections when we're done.\n    openSection = sections.pop();\n    if (openSection) {\n      throw new Error('Unclosed section \"' + openSection[1] + '\" at ' + scanner.pos);\n    }\n\n    return nestTokens(squashTokens(tokens));\n  }\n\n  /**\n   * Combines the values of consecutive text tokens in the given `tokens` array\n   * to a single token.\n   */\n  function squashTokens(tokens) {\n    var squashedTokens = [];\n\n    var token, lastToken;\n    for (var i = 0, len = tokens.length; i < len; ++i) {\n      token = tokens[i];\n\n      if (token) {\n        if (token[0] === 'text' && lastToken && lastToken[0] === 'text') {\n          lastToken[1] += token[1];\n          lastToken[3] = token[3];\n        } else {\n          squashedTokens.push(token);\n          lastToken = token;\n        }\n      }\n    }\n\n    return squashedTokens;\n  }\n\n  /**\n   * Forms the given array of `tokens` into a nested tree structure where\n   * tokens that represent a section have two additional items: 1) an array of\n   * all tokens that appear in that section and 2) the index in the original\n   * template that represents the end of that section.\n   */\n  function nestTokens(tokens) {\n    var nestedTokens = [];\n    var collector = nestedTokens;\n    var sections = [];\n\n    var token, section;\n    for (var i = 0, len = tokens.length; i < len; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n      case '#':\n      case '^':\n        collector.push(token);\n        sections.push(token);\n        collector = token[4] = [];\n        break;\n      case '/':\n        section = sections.pop();\n        section[5] = token[2];\n        collector = sections.length > 0 ? sections[sections.length - 1][4] : nestedTokens;\n        break;\n      default:\n        collector.push(token);\n      }\n    }\n\n    return nestedTokens;\n  }\n\n  /**\n   * A simple string scanner that is used by the template parser to find\n   * tokens in template strings.\n   */\n  function Scanner(string) {\n    this.string = string;\n    this.tail = string;\n    this.pos = 0;\n  }\n\n  /**\n   * Returns `true` if the tail is empty (end of string).\n   */\n  Scanner.prototype.eos = function () {\n    return this.tail === \"\";\n  };\n\n  /**\n   * Tries to match the given regular expression at the current position.\n   * Returns the matched text if it can match, the empty string otherwise.\n   */\n  Scanner.prototype.scan = function (re) {\n    var match = this.tail.match(re);\n\n    if (match && match.index === 0) {\n      var string = match[0];\n      this.tail = this.tail.substring(string.length);\n      this.pos += string.length;\n      return string;\n    }\n\n    return \"\";\n  };\n\n  /**\n   * Skips all text until the given regular expression can be matched. Returns\n   * the skipped string, which is the entire tail if no match can be made.\n   */\n  Scanner.prototype.scanUntil = function (re) {\n    var index = this.tail.search(re), match;\n\n    switch (index) {\n    case -1:\n      match = this.tail;\n      this.tail = \"\";\n      break;\n    case 0:\n      match = \"\";\n      break;\n    default:\n      match = this.tail.substring(0, index);\n      this.tail = this.tail.substring(index);\n    }\n\n    this.pos += match.length;\n\n    return match;\n  };\n\n  /**\n   * Represents a rendering context by wrapping a view object and\n   * maintaining a reference to the parent context.\n   */\n  function Context(view, parentContext) {\n    this.view = view == null ? {} : view;\n    this.cache = { '.': this.view };\n    this.parent = parentContext;\n  }\n\n  /**\n   * Creates a new context using the given view with this context\n   * as the parent.\n   */\n  Context.prototype.push = function (view) {\n    return new Context(view, this);\n  };\n\n  /**\n   * Returns the value of the given name in this context, traversing\n   * up the context hierarchy if the value is absent in this context's view.\n   */\n  Context.prototype.lookup = function (name) {\n    var value;\n    if (name in this.cache) {\n      value = this.cache[name];\n    } else {\n      var context = this;\n\n      while (context) {\n        if (name.indexOf('.') > 0) {\n          value = context.view;\n\n          var names = name.split('.'), i = 0;\n          while (value != null && i < names.length) {\n            value = value[names[i++]];\n          }\n        } else {\n          value = context.view[name];\n        }\n\n        if (value != null) break;\n\n        context = context.parent;\n      }\n\n      this.cache[name] = value;\n    }\n\n    if (isFunction(value)) {\n      value = value.call(this.view);\n    }\n\n    return value;\n  };\n\n  /**\n   * A Writer knows how to take a stream of tokens and render them to a\n   * string, given a context. It also maintains a cache of templates to\n   * avoid the need to parse the same template twice.\n   */\n  function Writer() {\n    this.cache = {};\n  }\n\n  /**\n   * Clears all cached templates in this writer.\n   */\n  Writer.prototype.clearCache = function () {\n    this.cache = {};\n  };\n\n  /**\n   * Parses and caches the given `template` and returns the array of tokens\n   * that is generated from the parse.\n   */\n  Writer.prototype.parse = function (template, tags) {\n    var cache = this.cache;\n    var tokens = cache[template];\n\n    if (tokens == null) {\n      tokens = cache[template] = parseTemplate(template, tags);\n    }\n\n    return tokens;\n  };\n\n  /**\n   * High-level method that is used to render the given `template` with\n   * the given `view`.\n   *\n   * The optional `partials` argument may be an object that contains the\n   * names and templates of partials that are used in the template. It may\n   * also be a function that is used to load partial templates on the fly\n   * that takes a single argument: the name of the partial.\n   */\n  Writer.prototype.render = function (template, view, partials) {\n    var tokens = this.parse(template);\n    var context = (view instanceof Context) ? view : new Context(view);\n    return this.renderTokens(tokens, context, partials, template);\n  };\n\n  /**\n   * Low-level method that renders the given array of `tokens` using\n   * the given `context` and `partials`.\n   *\n   * Note: The `originalTemplate` is only ever used to extract the portion\n   * of the original template that was contained in a higher-order section.\n   * If the template doesn't use higher-order sections, this argument may\n   * be omitted.\n   */\n  Writer.prototype.renderTokens = function (tokens, context, partials, originalTemplate) {\n    var buffer = '';\n\n    // This function is used to render an arbitrary template\n    // in the current context by higher-order sections.\n    var self = this;\n    function subRender(template) {\n      return self.render(template, context, partials);\n    }\n\n    var token, value;\n    for (var i = 0, len = tokens.length; i < len; ++i) {\n      token = tokens[i];\n\n      switch (token[0]) {\n      case '#':\n        value = context.lookup(token[1]);\n        if (!value) continue;\n\n        if (isArray(value)) {\n          for (var j = 0, jlen = value.length; j < jlen; ++j) {\n            buffer += this.renderTokens(token[4], context.push(value[j]), partials, originalTemplate);\n          }\n        } else if (typeof value === 'object' || typeof value === 'string') {\n          buffer += this.renderTokens(token[4], context.push(value), partials, originalTemplate);\n        } else if (isFunction(value)) {\n          if (typeof originalTemplate !== 'string') {\n            throw new Error('Cannot use higher-order sections without the original template');\n          }\n\n          // Extract the portion of the original template that the section contains.\n          value = value.call(context.view, originalTemplate.slice(token[3], token[5]), subRender);\n\n          if (value != null) buffer += value;\n        } else {\n          buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n        }\n\n        break;\n      case '^':\n        value = context.lookup(token[1]);\n\n        // Use JavaScript's definition of falsy. Include empty arrays.\n        // See https://github.com/janl/mustache.js/issues/186\n        if (!value || (isArray(value) && value.length === 0)) {\n          buffer += this.renderTokens(token[4], context, partials, originalTemplate);\n        }\n\n        break;\n      case '>':\n        if (!partials) continue;\n        value = isFunction(partials) ? partials(token[1]) : partials[token[1]];\n        if (value != null) buffer += this.renderTokens(this.parse(value), context, partials, value);\n        break;\n      case '&':\n        value = context.lookup(token[1]);\n        if (value != null) buffer += value;\n        break;\n      case 'name':\n        value = context.lookup(token[1]);\n        if (value != null) buffer += mustache.escape(value);\n        break;\n      case 'text':\n        buffer += token[1];\n        break;\n      }\n    }\n\n    return buffer;\n  };\n\n  mustache.name = \"mustache.js\";\n  mustache.version = \"0.8.1\";\n  mustache.tags = [ \"{{\", \"}}\" ];\n\n  // All high-level mustache.* functions use this writer.\n  var defaultWriter = new Writer();\n\n  /**\n   * Clears all cached templates in the default writer.\n   */\n  mustache.clearCache = function () {\n    return defaultWriter.clearCache();\n  };\n\n  /**\n   * Parses and caches the given template in the default writer and returns the\n   * array of tokens it contains. Doing this ahead of time avoids the need to\n   * parse templates on the fly as they are rendered.\n   */\n  mustache.parse = function (template, tags) {\n    return defaultWriter.parse(template, tags);\n  };\n\n  /**\n   * Renders the `template` with the given `view` and `partials` using the\n   * default writer.\n   */\n  mustache.render = function (template, view, partials) {\n    return defaultWriter.render(template, view, partials);\n  };\n\n  // This is here for backwards compatibility with 0.4.x.\n  mustache.to_html = function (template, view, partials, send) {\n    var result = mustache.render(template, view, partials);\n\n    if (isFunction(send)) {\n      send(result);\n    } else {\n      return result;\n    }\n  };\n\n  // Export the escaping function so that the user may override it.\n  // See https://github.com/janl/mustache.js/issues/244\n  mustache.escape = escapeHtml;\n\n  // Export these mainly for testing, but also for advanced usage.\n  mustache.Scanner = Scanner;\n  mustache.Context = Context;\n  mustache.Writer = Writer;\n\n}));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/mustache/mustache.js\n// module id = 11\n// module chunks = 0 1","'use strict';\n\n(function() {\n    \"use strict\";\n\n    var cockpit = require(\"cockpit\");\n\n    /* SERVICE MANAGEMENT API\n     *\n     * The \"service\" module lets you monitor and manage a\n     * system service on localhost in a simple way.\n     *\n     * It mainly exists because talking to the systemd D-Bus API is\n     * not trivial enough to do it directly.\n     *\n     * - proxy = service.proxy(name)\n     *\n     * Create a proxy that represents the service named NAME.\n     *\n     * The proxy has properties and methods (described below) that\n     * allow you to monitor the state of the service, and perform\n     * simple actions on it.\n     *\n     * Initially, any of the properties can be \"null\" until their\n     * actual values have been retrieved in the background.\n     *\n     * - $(proxy).on('changed', function (event) { ... })\n     *\n     * The 'changed' event is emitted whenever one of the properties\n     * of the proxy changes.\n     *\n     * - proxy.exists\n     *\n     * A boolean that tells whether the service is known or not.  A\n     * proxy with 'exists == false' will have 'state == undefined' and\n     * 'enabled == undefined'.\n     *\n     * - proxy.state\n     *\n     * Either 'undefined' when the state can't be retrieved, or a\n     * string that has one of the values \"starting\", \"running\",\n     * \"stopping\", \"stopped\", or \"failed\".\n     *\n     * - proxy.enabled\n     *\n     * Either 'undefined' when the value can't be retrieved, or a\n     * boolean that tells whether the service is started 'enabled'.\n     * What it means exactly for a service to be enabled depends on\n     * the service, but a enabled service is usually started on boot,\n     * no matter wether other services need it or not.  A disabled\n     * service is usually only started when it is needed by some other\n     * service.\n     *\n     * - proxy.unit\n     * - proxy.service\n     *\n     * The raw org.freedesktop.systemd1.Unit and Service D-Bus\n     * interface proxies for the service.\n     *\n     * - promise = proxy.start()\n     *\n     * Start the service.  The return value is a standard jQuery\n     * promise as returned from DBusClient.call.\n     *\n     * - promise =  proxy.restart()\n     *\n     * Restart the service.\n     *\n     * - promise = proxy.tryRestart()\n     * \n     * Try to restart the service if it's running or starting\n     *\n     * - promise = proxy.stop()\n     *\n     * Stop the service.\n     *\n     * - promise = proxy.enable()\n     *\n     * Enable the service.\n     *\n     * - promise = proxy.disable()\n     *\n     * Disable the service.\n     */\n\n    var systemd_client;\n    var systemd_manager;\n\n    function wait_valid(proxy, callback) {\n        proxy.wait(function() {\n            if (proxy.valid)\n                callback();\n        });\n    }\n\n    function with_systemd_manager(done) {\n        if (!systemd_manager) {\n            systemd_client = cockpit.dbus(\"org.freedesktop.systemd1\", { superuser: \"try\" });\n            systemd_manager = systemd_client.proxy(\"org.freedesktop.systemd1.Manager\",\n                                                   \"/org/freedesktop/systemd1\");\n            wait_valid(systemd_manager, function() {\n                systemd_manager.Subscribe().\n                    fail(function (error) {\n                        if (error.name != \"org.freedesktop.systemd1.AlreadySubscribed\" &&\n                            error.name != \"org.freedesktop.DBus.Error.FileExists\")\n                            console.warn(\"Subscribing to systemd signals failed\", error);\n                    });\n            });\n        }\n        wait_valid(systemd_manager, done);\n    }\n\n    function proxy(name) {\n        var self = {\n            exists: null,\n            state: null,\n            enabled: null,\n\n            wait: wait,\n\n            start: start,\n            stop: stop,\n            restart: restart,\n            tryRestart: tryRestart,\n\n            enable: enable,\n            disable: disable\n        };\n\n        cockpit.event_target(self);\n\n        var unit, service;\n        var wait_callbacks = cockpit.defer();\n\n        if (name.indexOf(\".\") == -1)\n            name = name + \".service\";\n\n        function update_from_unit() {\n            self.exists = (unit.LoadState != \"not-found\" || unit.ActiveState != \"inactive\");\n\n            if (unit.ActiveState == \"activating\")\n                self.state = \"starting\";\n            else if (unit.ActiveState == \"deactivating\")\n                self.state = \"stopping\";\n            else if (unit.ActiveState == \"active\" || unit.ActiveState == \"reloading\")\n                self.state = \"running\";\n            else if (unit.ActiveState == \"failed\")\n                self.state = \"failed\";\n            else if (unit.ActiveState == \"inactive\" && self.exists)\n                self.state = \"stopped\";\n            else\n                self.state = undefined;\n\n            if (unit.UnitFileState == \"enabled\" || unit.UnitFileState == \"linked\")\n                self.enabled = true;\n            else if (unit.UnitFileState == \"disabled\" || unit.UnitFileState == \"masked\")\n                self.enabled = false;\n            else\n                self.enabled = undefined;\n\n            self.unit = unit;\n\n            self.dispatchEvent(\"changed\");\n            wait_callbacks.resolve();\n        }\n\n        function update_from_service() {\n            self.service = service;\n            self.dispatchEvent(\"changed\");\n        }\n\n        with_systemd_manager(function () {\n            systemd_manager.LoadUnit(name).\n                done(function (path) {\n                    unit = systemd_client.proxy('org.freedesktop.systemd1.Unit', path);\n                    unit.addEventListener('changed', update_from_unit);\n                    wait_valid(unit, update_from_unit);\n\n                    service = systemd_client.proxy('org.freedesktop.systemd1.Service', path);\n                    service.addEventListener('changed', update_from_service);\n                    wait_valid(service, update_from_service);\n                }).\n                fail(function (error) {\n                    self.exists = false;\n                    self.dispatchEvent('changed');\n                });\n        });\n\n        function refresh() {\n            if (!unit || !service)\n                return;\n\n            function refresh_interface(path, iface) {\n                systemd_client.call(path,\n                                    \"org.freedesktop.DBus.Properties\", \"GetAll\", [ iface ]).\n                    fail(function (error) {\n                        console.log(error);\n                    }).\n                    done(function (result) {\n                        var props = { };\n                        for (var p in result[0])\n                            props[p] = result[0][p].v;\n                        var ifaces = { };\n                        ifaces[iface] = props;\n                        var data = { };\n                        data[unit.path] = ifaces;\n                        systemd_client.notify(data);\n                    });\n            }\n\n            refresh_interface(unit.path, \"org.freedesktop.systemd1.Unit\");\n            refresh_interface(service.path, \"org.freedesktop.systemd1.Service\");\n        }\n\n        function on_job_new_removed_refresh(event, number, path, unit_id, result) {\n            if (unit_id == name)\n                refresh();\n        }\n\n        /* HACK - https://bugs.freedesktop.org/show_bug.cgi?id=69575\n         *\n         * We need to explicitly get new property values when getting\n         * a UnitNew signal since UnitNew doesn't carry them.\n         * However, reacting to UnitNew with GetAll could lead to an\n         * infinite loop since systemd emits a UnitNew in reaction to\n         * GetAll for units that it doesn't want to keep loaded, such\n         * as units without unit files.\n         *\n         * So we ignore UnitNew and instead assume that the unit state\n         * only changes in interesting ways when there is a job for it\n         * or when the daemon is reloaded (or when we get a property\n         * change notification, of course).\n         */\n\n        if (false) {\n            // This is what we want to do.\n\n            systemd_manager.addEventListener(\"UnitNew\", function (event, unit_id, path) {\n                if (unit_id == name)\n                    refresh();\n            });\n        } else {\n            // This is what we have to do.\n\n            systemd_manager.addEventListener(\"Reloading\", function (event, reloading) {\n                if (!reloading)\n                    refresh();\n            });\n\n            systemd_manager.addEventListener(\"JobNew\", on_job_new_removed_refresh);\n            systemd_manager.addEventListener(\"JobRemoved\", on_job_new_removed_refresh);\n        }\n\n        function wait(callback) {\n            wait_callbacks.promise.then(callback);\n        }\n\n        /* Actions\n         *\n         * We don't call methods on the D-Bus proxies here since they\n         * might not be ready when these functions are called.\n         */\n\n        var pending_jobs = { };\n\n        systemd_manager.addEventListener(\"JobRemoved\", function (event, number, path, unit_id, result) {\n            if (pending_jobs[path]) {\n                if (result == \"done\")\n                    pending_jobs[path].resolve();\n                else\n                    pending_jobs[path].reject(result);\n                delete pending_jobs[path];\n            }\n        });\n\n        function call_manager(method, args) {\n            return systemd_client.call(\"/org/freedesktop/systemd1\",\n                                       \"org.freedesktop.systemd1.Manager\",\n                                       method, args);\n        }\n\n        function call_manager_with_job(method, args) {\n            var dfd = cockpit.defer();\n            call_manager(method, args).\n                done(function (results) {\n                    var path = results[0];\n                    pending_jobs[path] = dfd;\n                }).\n                fail(function (error) {\n                    dfd.reject(error);\n                });\n            return dfd.promise();\n        }\n\n        function call_manager_with_reload(method, args) {\n            return call_manager(method, args).then(function () {\n                return call_manager(\"Reload\", [ ]);\n            });\n        }\n\n        function start() {\n            return call_manager_with_job(\"StartUnit\", [ name, \"replace\" ]);\n        }\n\n        function stop() {\n            return call_manager_with_job(\"StopUnit\", [ name, \"replace\" ]);\n        }\n\n        function restart() {\n            return call_manager_with_job(\"RestartUnit\", [ name, \"replace\" ]);\n        }\n\n        function tryRestart() {\n            return call_manager_with_job(\"TryRestartUnit\", [ name, \"replace\" ]);\n        }\n\n        function enable() {\n            return call_manager_with_reload(\"EnableUnitFiles\", [ [ name ], false, false ]);\n        }\n\n        function disable() {\n            return call_manager_with_reload(\"DisableUnitFiles\", [ [ name ], false ]);\n        }\n\n        return self;\n    }\n\n    module.exports = {\n        proxy: proxy\n    };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/service.js\n// module id = 12\n// module chunks = 0 1","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2017 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport cockpit from \"cockpit\";\n\n// FIXME: eventually convert all images to python 3\nconst pyinvoke = [ \"sh\", \"-ec\", \"exec $(which python3 2>/dev/null || which python) $@\", \"--\", \"-\" ];\n\nexport function spawn (script_pieces, args, options) {\n    var script;\n    if (typeof script_pieces == \"string\")\n        script = script_pieces;\n    else\n        script = script_pieces.join(\"\\n\");\n\n    return cockpit.spawn(pyinvoke.concat(args), options).input(script);\n}\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/lib/python.jsx","module.exports = \"#\\n# This file is part of Cockpit.\\n#\\n# Copyright (C) 2017 Red Hat, Inc.\\n#\\n# Cockpit is free software; you can redistribute it and/or modify it\\n# under the terms of the GNU Lesser General Public License as published by\\n# the Free Software Foundation; either version 2.1 of the License, or\\n# (at your option) any later version.\\n#\\n# Cockpit is distributed in the hope that it will be useful, but\\n# WITHOUT ANY WARRANTY; without even the implied warranty of\\n# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\\n# Lesser General Public License for more details.\\n#\\n# You should have received a copy of the GNU Lesser General Public License\\n# along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\\n\\nimport os\\nimport ctypes\\nimport struct\\nimport subprocess\\nimport traceback\\n\\nIN_CLOSE_WRITE = 0x00000008\\nIN_MOVED_FROM  = 0x00000040\\nIN_MOVED_TO    = 0x00000080\\nIN_CREATE      = 0x00000100\\nIN_DELETE      = 0x00000200\\nIN_DELETE_SELF = 0x00000400\\nIN_MOVE_SELF   = 0x00000800\\nIN_IGNORED     = 0x00008000\\n\\nclass Inotify:\\n    def __init__(self):\\n        self._libc = ctypes.CDLL(None, use_errno=True)\\n        self._get_errno_func = ctypes.get_errno\\n\\n        self._libc.inotify_init.argtypes = []\\n        self._libc.inotify_init.restype = ctypes.c_int\\n        self._libc.inotify_add_watch.argtypes = [ctypes.c_int, ctypes.c_char_p,\\n                                                 ctypes.c_uint32]\\n        self._libc.inotify_add_watch.restype = ctypes.c_int\\n        self._libc.inotify_rm_watch.argtypes = [ctypes.c_int, ctypes.c_int]\\n        self._libc.inotify_rm_watch.restype = ctypes.c_int\\n\\n        self.fd = self._libc.inotify_init()\\n\\n    def add_watch(self, path, mask):\\n        path = ctypes.create_string_buffer(path.encode(sys.getfilesystemencoding()))\\n        wd = self._libc.inotify_add_watch(self.fd, path, mask)\\n        if wd < 0:\\n            sys.stderr.write(\\\"can't add watch for %s: %s\\\\n\\\" % (path, os.strerror(self._get_errno_func())))\\n        return wd\\n\\n    def rem_watch(self, wd):\\n        if self._libc.inotify_rm_watch(self.fd, wd) < 0:\\n            sys.stderr.write(\\\"can't remove watch: %s\\\\n\\\" % (os.strerror(self._get_errno_func())))\\n\\n    def process(self, callback):\\n        buf = os.read(self.fd, 4096)\\n        pos = 0\\n        while pos < len(buf):\\n            (wd, mask, cookie, name_len) = struct.unpack('iIII', buf[pos:pos+16])\\n            pos += 16\\n            (name,) = struct.unpack('%ds' % name_len, buf[pos:pos + name_len])\\n            pos += name_len\\n            callback(wd, mask, name.decode().rstrip('\\\\0'))\\n\\n    def run(self, callback):\\n        while True:\\n            self.process(callback)\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/lib/inotify.py\n// module id = 14\n// module chunks = 0","module.exports = \"#! /usr/bin/python\\n\\n# nfs-mounts   --  Monitor and manage NFS mounts\\n#\\n# This is similar to how UDisks2 monitors and manages block device\\n# mounts, but for NFS.  This might be moved into UDisks2, or not.\\n\\n# We monitor all NFS remotes listed in /etc/fstab and in /proc/self/mounts.\\n# If a entry from mtab is also found in fstab, we report only the\\n# fstab entry and mark it is \\\"mounted\\\".\\n\\nimport select\\nimport re\\nimport sys\\nimport json\\nimport errno\\n\\nclass Watcher:\\n    def __init__(self, path):\\n        self.inotify = Inotify()\\n        self.path = path\\n        self.setup()\\n\\n    def setup(self):\\n        self.wd = self.inotify.add_watch(self.path, IN_CLOSE_WRITE)\\n\\n    def process(self, callback = None):\\n        def event(wd, mask, name):\\n            if callback:\\n                callback()\\n            if mask & IN_IGNORED:\\n                self.setup()\\n        self.inotify.process(event)\\n\\ndef field_escape(str):\\n    return str.replace(\\\"\\\\\\\\\\\", \\\"\\\\\\\\134\\\").replace(\\\" \\\", \\\"\\\\\\\\040\\\").replace(\\\"\\\\t\\\", \\\"\\\\\\\\011\\\")\\n\\ndef field_unescape(str):\\n    return re.sub(\\\"\\\\\\\\\\\\\\\\([0-7]{1,3})\\\", lambda m: chr(int(m.group(1), 8)), str)\\n\\ndef parse_tab(name):\\n    entries = [ ]\\n    for line in open(name, \\\"r\\\").read().split(\\\"\\\\n\\\"):\\n        sline = line.strip()\\n        if sline == \\\"\\\" or sline[0] == \\\"#\\\":\\n            continue\\n        fields = list(map(field_unescape, re.split(\\\"[ \\\\t]+\\\", sline)))\\n        if len(fields) > 0 and \\\":\\\" in fields[0]:\\n            entries.append(fields)\\n    return entries\\n\\ndef index_tab(tab):\\n    by_remote = { }\\n    for t in tab:\\n        if not t[0] in by_remote:\\n            by_remote[t[0]] = [ ]\\n        by_remote[t[0]].append(t)\\n    return by_remote\\n\\ndef modify_tab(name, modify):\\n    lines = open(name, \\\"r\\\").read().split(\\\"\\\\n\\\")\\n    if len(lines) > 0 and lines[len(lines)-1] == \\\"\\\":\\n        del lines[len(lines)-1]\\n\\n    new_lines = [ ]\\n    for line in lines:\\n        sline = line.strip()\\n        if sline == \\\"\\\" or sline[0] == \\\"#\\\":\\n            new_lines.append(line)\\n        else:\\n            fields = list(map(field_unescape, re.split(\\\"[ \\\\t]+\\\", sline)))\\n            if len(fields) > 0 and \\\":\\\" in fields[0]:\\n                new_fields = modify(fields)\\n                if new_fields:\\n                    if new_fields == fields:\\n                        new_lines.append(line)\\n                    else:\\n                        new_lines.append(\\\" \\\".join(map(field_escape, new_fields)))\\n            else:\\n                new_lines.append(line)\\n    new_fields = modify(None)\\n    if new_fields:\\n        new_lines.append(\\\" \\\".join(map(field_escape, new_fields)))\\n\\n    f = open(name + \\\".tmp\\\", \\\"w\\\")\\n    f.write(\\\"\\\\n\\\".join(new_lines) + \\\"\\\\n\\\")\\n    f.flush()\\n    os.fsync(f.fileno())\\n    f.close()\\n    os.rename(name + \\\".tmp\\\", name)\\n\\nfstab = [ ]\\nfstab_by_remote = { }\\n\\nmtab = [ ]\\nmtab_by_remote = { }\\n\\ndef process_fstab():\\n    global fstab, fstab_by_remote\\n    fstab = parse_tab(\\\"/etc/fstab\\\")\\n    fstab_by_remote = index_tab(fstab)\\n\\ndef process_mtab():\\n    global mtab, mtab_by_remote\\n    mtab = parse_tab(\\\"/proc/self/mounts\\\")\\n    mtab_by_remote = index_tab(mtab)\\n\\ndef find_in_tab(tab_by_remote, fields):\\n    for t in tab_by_remote.get(fields[0], [ ]):\\n        if t[0] == fields[0] and t[1] == fields[1]:\\n            return t\\n    return None\\n\\ndef report():\\n    data = [ ]\\n    for f in fstab:\\n        m = find_in_tab(mtab_by_remote, f)\\n        data.append({ \\\"fstab\\\": True, \\\"fields\\\": f, \\\"mounted\\\": m is not None })\\n    for m in mtab:\\n        if not find_in_tab(fstab_by_remote, m):\\n            data.append({ \\\"fstab\\\": False, \\\"fields\\\": m, \\\"mounted\\\": True })\\n    sys.stdout.write(json.dumps(data) + \\\"\\\\n\\\")\\n    sys.stdout.flush()\\n\\ndef monitor():\\n    process_mtab()\\n    process_fstab()\\n    report()\\n    fstab_watcher = Watcher(\\\"/etc/fstab\\\")\\n    mtab_file = open(\\\"/proc/self/mounts\\\", \\\"r\\\")\\n    while True:\\n        (r, w, x) = select.select([ fstab_watcher.inotify.fd ], [ ], [ mtab_file ])\\n        if mtab_file in x:\\n            process_mtab()\\n            report()\\n        if fstab_watcher.inotify.fd in r:\\n            fstab_watcher.process()\\n            process_fstab()\\n            report()\\n\\ndef mkdir_if_necessary(path):\\n    if not os.path.exists(path):\\n        os.makedirs(path)\\n\\ndef rmdir_if_empty(path):\\n    try:\\n        os.rmdir(path)\\n    except OSError as e:\\n        if e.errno not in [ errno.ENOTEMPTY, errno.ENOTDIR, errno.ENOENT ]:\\n            raise\\n\\ndef update(entry, new_fields):\\n    old_fields = entry[\\\"fields\\\"]\\n    if old_fields[1] != new_fields[1]:\\n        mkdir_if_necessary(new_fields[1])\\n    if entry[\\\"mounted\\\"]:\\n        if (new_fields[0] == old_fields[0]\\n            and new_fields[1] == old_fields[1]\\n            and new_fields[2] == old_fields[2]):\\n            remount(new_fields)\\n        else:\\n            try:\\n                unmount(entry)\\n                if old_fields[1] != new_fields[1]:\\n                    rmdir_if_empty(old_fields[1])\\n            except subprocess.CalledProcessError:\\n                pass\\n            mount({ \\\"fields\\\": new_fields })\\n    else:\\n        if old_fields[1] != new_fields[1]:\\n            rmdir_if_empty(old_fields[1])\\n    modify_tab(\\\"/etc/fstab\\\", lambda fields: new_fields if fields == old_fields else fields)\\n\\ndef add(new_fields):\\n    mkdir_if_necessary(new_fields[1])\\n    mount({ \\\"fields\\\": new_fields })\\n    modify_tab(\\\"/etc/fstab\\\", lambda fields: new_fields if fields is None else fields)\\n\\ndef remove(entry):\\n    old_fields = entry[\\\"fields\\\"]\\n    if entry[\\\"mounted\\\"]:\\n        unmount(entry)\\n    rmdir_if_empty(old_fields[1])\\n    modify_tab(\\\"/etc/fstab\\\", lambda fields: None if fields == old_fields else fields)\\n\\ndef mount(entry):\\n    fields = entry[\\\"fields\\\"]\\n    mkdir_if_necessary(fields[1])\\n    subprocess.check_call([ \\\"mount\\\",\\n                            \\\"-t\\\", fields[2],\\n                            \\\"-o\\\", fields[3],\\n                            fields[0],\\n                            fields[1] ])\\n\\ndef remount(fields):\\n    subprocess.check_call([ \\\"mount\\\",\\n                            \\\"-o\\\", \\\"remount,\\\" + fields[3],\\n                            fields[0],\\n                            fields[1] ])\\n\\ndef unmount(entry):\\n    subprocess.check_call([ \\\"umount\\\", entry[\\\"fields\\\"][1] ])\\n\\ndef fuser(entry):\\n\\n    import dbus\\n    bus = dbus.SystemBus()\\n    systemd_manager = dbus.Interface(bus.get_object('org.freedesktop.systemd1', '/org/freedesktop/systemd1'),\\n                                     dbus_interface='org.freedesktop.systemd1.Manager')\\n\\n    if not entry[\\\"mounted\\\"]:\\n        return [ ]\\n\\n    mount_point = entry[\\\"fields\\\"][1]\\n    results = { }\\n\\n    def check(path, pid):\\n        t = os.readlink(path)\\n        if t == mount_point or t.startswith(mount_point + \\\"/\\\"):\\n            unit = systemd_manager.GetUnitByPID(int(pid))\\n            if unit not in results:\\n                unit_obj = bus.get_object('org.freedesktop.systemd1', unit)\\n                desc = unit_obj.Get(\\\"org.freedesktop.systemd1.Unit\\\", \\\"Description\\\",\\n                                    dbus_interface=\\\"org.freedesktop.DBus.Properties\\\")\\n                id = unit_obj.Get(\\\"org.freedesktop.systemd1.Unit\\\", \\\"Id\\\",\\n                                  dbus_interface=\\\"org.freedesktop.DBus.Properties\\\")\\n                results[unit] = { \\\"unit\\\": id, \\\"desc\\\": desc }\\n            return True\\n        return False\\n\\n    def checkdir(path, pid):\\n        for f in os.listdir(path):\\n            if check(os.path.join(path, f), pid):\\n                return True\\n        return False\\n\\n    my_pid = os.getpid()\\n\\n    for p in os.listdir(\\\"/proc/\\\"):\\n        if not p.isdigit():\\n            continue\\n        if int(p) == my_pid:\\n            continue\\n        proc = \\\"/proc/%s/\\\" % p\\n        try:\\n            if check(proc + \\\"exe\\\", p): continue\\n            if check(proc + \\\"root\\\", p): continue\\n            if check(proc + \\\"cwd\\\", p): continue\\n            if checkdir(proc + \\\"fd\\\", p): continue\\n            if checkdir(proc + \\\"map_files\\\", p): continue\\n        except OSError:\\n            pass\\n\\n    return list(results.values())\\n\\ndef users(entry):\\n    data = fuser(entry)\\n    sys.stdout.write(json.dumps(data) + \\\"\\\\n\\\")\\n    sys.stdout.flush()\\n\\ndef stop_units(units):\\n    import dbus\\n    bus = dbus.SystemBus()\\n    systemd_manager = dbus.Interface(bus.get_object('org.freedesktop.systemd1', '/org/freedesktop/systemd1'),\\n                                     dbus_interface='org.freedesktop.systemd1.Manager')\\n    for u in units:\\n        systemd_manager.StopUnit(u, 'replace')\\n\\ndef stop_and_unmount(units, entry):\\n    stop_units(units)\\n    unmount(entry)\\n\\ndef stop_and_remove(units, entry):\\n    stop_units(units)\\n    remove(entry)\\n\\ndef dispatch(argv):\\n    if argv[1] == \\\"monitor\\\":\\n        monitor()\\n    elif argv[1] == \\\"update\\\":\\n        update(json.loads(argv[2]), json.loads(argv[3]))\\n    elif argv[1] == \\\"add\\\":\\n        add(json.loads(argv[2]))\\n    elif argv[1] == \\\"remove\\\":\\n        remove(json.loads(argv[2]))\\n    elif argv[1] == \\\"mount\\\":\\n        mount(json.loads(argv[2]))\\n    elif argv[1] == \\\"unmount\\\":\\n        unmount(json.loads(argv[2]))\\n    elif argv[1] == \\\"stop-and-unmount\\\":\\n        stop_and_unmount(json.loads(argv[2]), json.loads(argv[3]))\\n    elif argv[1] == \\\"stop-and-remove\\\":\\n        stop_and_remove(json.loads(argv[2]), json.loads(argv[3]))\\n    elif argv[1] == \\\"users\\\":\\n        users(json.loads(argv[2]))\\n\\ntry:\\n    dispatch(sys.argv)\\nexcept subprocess.CalledProcessError as e:\\n    sys.exit(e.returncode)\\nexcept Exception as e:\\n    sys.stderr.write(str(e) + \\\"\\\\n\\\")\\n    sys.exit(1)\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/storaged/nfs-mounts.py\n// module id = 15\n// module chunks = 0","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2015 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    var $ = require(\"jquery\");\n    var cockpit = require(\"cockpit\");\n\n    var mustache = require(\"mustache\");\n\n    var utils = require(\"./utils\");\n\n    var _ = cockpit.gettext;\n\n    /* JOBS\n     */\n\n    function init_jobs(client) {\n\n        var jobs_tmpl = $(\"#jobs-tmpl\").html();\n        mustache.parse(jobs_tmpl);\n\n        function update_job_spinners(parent) {\n            var path;\n\n            $(parent).find('[data-job-object]').css('visibility', 'hidden');\n\n            function show_spinners_for_path(path) {\n                $(parent).find('[data-job-object=\"' + path + '\"]').css('visibility', 'visible');\n            }\n\n            function show_spinners_for_object(path) {\n                show_spinners_for_path(path);\n                var parent = utils.get_parent(client, path);\n                if (parent)\n                    show_spinners_for_object(parent);\n            }\n\n            function show_spinners_for_objects(paths) {\n                if (!paths || !paths.length)\n                    return;\n                for (var i = 0; i < paths.length; i++)\n                    show_spinners_for_object(paths[i]);\n            }\n\n            for (path in client.jobs)\n                show_spinners_for_objects(client.jobs[path].Objects);\n        }\n\n        $(client.jobs).on('added removed changed', function () {\n            update_job_spinners('body');\n        });\n\n        function query_jobs_data() {\n\n            /* Human readable descriptions of the symbolic \"Operation\"\n             * property of job objects.  These are from the storaged\n             * documentation at\n             *\n             *   http://storaged.org/doc/udisks2-api/gdbus-org.freedesktop.UDisks2.Job.html\n             */\n\n            var descriptions = {\n                'ata-smart-selftest':          _(\"SMART self-test of $target\"),\n                'drive-eject':                 _(\"Ejecting $target\"),\n                'encrypted-unlock':            _(\"Unlocking $target\"),\n                'encrypted-lock':              _(\"Locking $target\"),\n                'encrypted-modify':            _(\"Modifying $target\"),\n                'swapspace-start':             _(\"Starting swapspace $target\"),\n                'swapspace-stop':              _(\"Stopping swapspace $target\"),\n                'filesystem-mount':            _(\"Mounting $target\"),\n                'filesystem-unmount':          _(\"Unmounting $target\"),\n                'filesystem-modify':           _(\"Modifying $target\"),\n                'format-erase':                _(\"Erasing $target\"),\n                'format-mkfs':                 _(\"Creating filesystem on $target\"),\n                'loop-setup':                  _(\"Setting up loop device $target\"),\n                'partition-modify':            _(\"Modifying $target\"),\n                'partition-delete':            _(\"Deleting $target\"),\n                'partition-create':            _(\"Creating partition $target\"),\n                'cleanup':                     _(\"Cleaning up for $target\"),\n                'ata-secure-erase':            _(\"Securely erasing $target\"),\n                'ata-enhanced-secure-erase':   _(\"Very securely erasing $target\"),\n                'md-raid-stop':                _(\"Stopping RAID Device $target\"),\n                'md-raid-start':               _(\"Starting RAID Device $target\"),\n                'md-raid-fault-device':        _(\"Marking $target as faulty\"),\n                'md-raid-remove-device':       _(\"Removing $target from RAID Device\"),\n                'md-raid-create':              _(\"Creating RAID Device $target\"),\n                'mdraid-check-job':            _(\"Checking RAID Device $target\"),\n                'mdraid-repair-job':           _(\"Checking and Repairing RAID Device $target\"),\n                'mdraid-recover-job':          _(\"Recovering RAID Device $target\"),\n                'mdraid-sync-job':             _(\"Synchronizing RAID Device $target\"),\n                'lvm-lvol-delete':             _(\"Deleting $target\"),\n                'lvm-lvol-activate':           _(\"Activating $target\"),\n                'lvm-lvol-deactivate':         _(\"Deactivating $target\"),\n                'lvm-lvol-snapshot':           _(\"Creating snapshot of $target\"),\n                'lvm-vg-create':               _(\"Creating volume group $target\"),\n                'lvm-vg-delete':               _(\"Deleting volume group $target\"),\n                'lvm-vg-add-device':           _(\"Adding physical volume to $target\"),\n                'lvm-vg-rem-device':           _(\"Removing physical volume from $target\"),\n                'lvm-vg-empty-device':         _(\"Emptying $target\"),\n                'lvm-vg-create-volume':        _(\"Creating logical volume $target\"),\n                'lvm-vg-rename':               _(\"Renaming $target\"),\n                'lvm-vg-resize':               _(\"Resizing $target\")\n            };\n\n            var server_now = new Date().getTime() + client.time_offset;\n\n            function make_description(job) {\n                var fmt = descriptions[job.Operation];\n                if (!fmt)\n                    fmt = _(\"Operation '$operation' on $target\");\n\n                var target =\n                    job.Objects.map(function (path) {\n                        if (client.blocks[path])\n                            return utils.block_name(client.blocks[path]);\n                        else if (client.mdraids[path])\n                            return utils.mdraid_name(client.mdraids[path]);\n                        else if (client.vgroups[path])\n                            return client.vgroups[path].Name;\n                        else if (client.lvols[path])\n                            return utils.lvol_name(client.lvols[path]);\n                        else\n                            return _(\"unknown target\");\n                    }).join(\", \");\n\n                return cockpit.format(fmt, { operation: job.Operation, target: target });\n            }\n\n            function job(path) {\n                return client.jobs[path];\n            }\n\n            function cmp_job(a, b) {\n                return job(a).StartTime - job(b).StartTime;\n            }\n\n            function job_is_stable(path) {\n                var j = job(path);\n\n                var age_ms = server_now - j.StartTime/1000;\n                if (age_ms >= 2000)\n                    return true;\n\n                if (j.ExpectedEndTime > 0 && (j.ExpectedEndTime/1000 - server_now) >= 2000)\n                    return true;\n\n                return false;\n            }\n\n            function make_job(path) {\n                var j = job(path);\n\n                var remaining = null;\n                if (j.ExpectedEndTime > 0) {\n                    var d = j.ExpectedEndTime/1000 - server_now;\n                    if (d > 0)\n                        remaining = utils.format_delay (d);\n                }\n\n                return {\n                    path: path,\n                    dbus: j,\n                    Description: make_description(j),\n                    Progress: j.ProgressValid && (j.Progress*100).toFixed() + \"%\",\n                    RemainingTime: remaining,\n                    Cancelable: j.Cancelable\n                };\n            }\n\n            return (Object.keys(client.jobs).\n                    filter(job_is_stable).\n                    sort(cmp_job).\n                    map(make_job));\n        }\n\n        function render_jobs_panel() {\n            var js = query_jobs_data();\n            return mustache.render(jobs_tmpl,\n                                   { Jobs: js,\n                                     HasJobs: js.length > 0\n                                   });\n        }\n\n        return {\n            update:  update_job_spinners,\n            query:   query_jobs_data,\n            render:  render_jobs_panel\n        };\n\n    }\n\n    module.exports = {\n        init: init_jobs\n    };\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/storaged/jobs.js\n// module id = 16\n// module chunks = 0","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2015 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    var $ = require(\"jquery\");\n    var cockpit = require(\"cockpit\");\n\n    var mustache = require(\"mustache\");\n    var plot = require(\"plot\");\n    var journal = require(\"journal\");\n\n    var utils = require(\"./utils\");\n    var dialog = require(\"./dialog\");\n    var permissions = require(\"./permissions\");\n\n    var _ = cockpit.gettext;\n    var C_ = cockpit.gettext;\n\n    /* OVERVIEW PAGE\n     */\n\n\n    function init_overview(client, jobs) {\n        var read_series, write_series;\n\n        $('#vgroups').toggle(client.features.lvm2);\n        $('#iscsi-sessions').toggle(client.features.iscsi);\n\n        var mdraids_tmpl = $(\"#mdraids-tmpl\").html();\n        mustache.parse(mdraids_tmpl);\n\n        function render_mdraids() {\n            function cmp_mdraid(path_a, path_b) {\n                // TODO - ignore host part\n                return client.mdraids[path_a].Name.localeCompare(client.mdraids[path_b].Name);\n            }\n\n            function make_mdraid(path) {\n                var mdraid = client.mdraids[path];\n\n                return {\n                    path: path,\n                    UUID: mdraid.UUID,\n                    Size: utils.fmt_size(mdraid.Size),\n                    Name: utils.mdraid_name(mdraid)\n                };\n            }\n\n            var m = Object.keys(client.mdraids).sort(cmp_mdraid).map(make_mdraid);\n            $('#mdraids').amend(mustache.render(mdraids_tmpl,\n                                                { MDRaids: m,\n                                                  HasMDRaids: m.length > 0\n                                                }));\n            permissions.update();\n            jobs.update('#mdraids');\n        }\n\n        $(client).on('changed', render_mdraids);\n\n        var vgroups_tmpl = $(\"#vgroups-tmpl\").html();\n        mustache.parse(vgroups_tmpl);\n\n        function render_vgroups() {\n            function cmp_vgroup(path_a, path_b) {\n                return client.vgroups[path_a].Name.localeCompare(client.vgroups[path_b].Name);\n            }\n\n            function make_vgroup(path) {\n                var vgroup = client.vgroups[path];\n\n                return {\n                    path: path,\n                    Size: utils.fmt_size(vgroup.Size),\n                    Name: vgroup.Name\n                };\n            }\n\n            var v = Object.keys(client.vgroups).sort(cmp_vgroup).map(make_vgroup);\n            $('#vgroups').amend(mustache.render(vgroups_tmpl,\n                                                { VGroups: v,\n                                                  HasVGroups: v.length > 0\n                                                }));\n            permissions.update();\n            jobs.update('#vgroups');\n        }\n\n        $(client).on('changed', render_vgroups);\n\n        var iscsi_sessions_tmpl = $(\"#iscsi-sessions-tmpl\").html();\n        mustache.parse(iscsi_sessions_tmpl);\n\n        function render_iscsi_sessions() {\n            function cmp_session(a, b) {\n                return a.Name.localeCompare(b.Name);\n            }\n\n            function make_session(path) {\n                var session = client.iscsi_sessions[path];\n                return {\n                    path: path,\n                    Name: session.data[\"target_name\"] || \"\",\n                    Tpgt: session.data[\"tpgt\"],\n                    Address: session.data[\"persistent_address\"],\n                    Port: session.data[\"persistent_port\"]\n                };\n            }\n\n            var s = Object.keys(client.iscsi_sessions).map(make_session).sort(cmp_session);\n            $('#iscsi-sessions').amend(mustache.render(iscsi_sessions_tmpl,\n                                                       { Sessions: s,\n                                                         HasSessions: s.length > 0\n                                                       }));\n            permissions.update();\n        }\n\n        $(client).on('changed', render_iscsi_sessions);\n\n        var drives_tmpl = $(\"#drives-tmpl\").html();\n        mustache.parse(drives_tmpl);\n\n        var cur_highlight;\n\n        function render_drives() {\n            function cmp_drive(path_a, path_b) {\n                return client.drives[path_a].SortKey.localeCompare(client.drives[path_b].SortKey);\n            }\n\n            function classify_drive(drive) {\n                if (drive.MediaRemovable || drive.Media) {\n                    for (var i = 0; i < drive.MediaCompatibility.length; i++)\n                        if (drive.MediaCompatibility[i].indexOf(\"optical\") === 0)\n                            return \"optical\";\n                    return \"removable\";\n                }\n\n                return (drive.RotationRate === 0)? \"ssd\" : \"hdd\";\n            }\n\n            function make_drive(path) {\n                var drive = client.drives[path];\n                var block = client.drives_block[path];\n\n                if (!block) {\n                    // A drive without a primary block device might be\n                    // a unconfigured multipath device.  Try to hobble\n                    // along here by arbitrarily picking one of the\n                    // multipath devices.\n                    block = client.drives_multipath_blocks[path][0];\n                }\n\n                if (!block)\n                    return;\n\n                var dev = utils.decode_filename(block.Device).replace(/^\\/dev\\//, \"\");\n                var io = client.blockdev_io.data[dev];\n\n                var name = utils.drive_name(drive);\n                var classification = classify_drive(drive);\n                var size_str = utils.fmt_size(drive.Size);\n                var desc;\n                if (classification == \"hdd\") {\n                    desc = size_str + \" \" + C_(\"storage\", \"Hard Disk\");\n                } else if (classification == \"ssd\") {\n                    desc = size_str + \" \" + C_(\"storage\", \"Solid-State Disk\");\n                } else if (classification == \"removable\") {\n                    if (drive.Size === 0)\n                        desc = C_(\"storage\", \"Removable Drive\");\n                    else\n                        desc = size_str + \" \" + C_(\"storage\", \"Removable Drive\");\n                } else if (classification == \"optical\") {\n                    desc = C_(\"storage\", \"Optical Drive\");\n                } else {\n                    if (drive.Size === 0)\n                        desc = C_(\"storage\", \"Drive\");\n                    else\n                        desc = size_str + \" \" + C_(\"storage\", \"Drive\");\n                }\n\n                return {\n                    path: path,\n                    dev: dev,\n                    Name: name,\n                    Classification: classification,\n                    Description: desc,\n                    ReadRate: io && utils.fmt_rate(io[0]),\n                    WriteRate: io && utils.fmt_rate(io[1]),\n                    Highlight: dev == cur_highlight\n                };\n            }\n\n            var d = Object.keys(client.drives).sort(cmp_drive).map(make_drive);\n            $('#drives').amend(mustache.render(drives_tmpl,\n                                               { Drives: d,\n                                                 HasDrives: d.length > 0\n                                               }));\n            permissions.update();\n            jobs.update('#drives');\n\n            for (var p in d) {\n                if (d[p] && d[p].dev) {\n                    read_series.add_instance(d[p].dev);\n                    write_series.add_instance(d[p].dev);\n                }\n            }\n        }\n\n        $(client).on('changed', render_drives);\n        $(client.blockdev_io).on('changed', render_drives);\n\n        var others_tmpl = $(\"#others-tmpl\").html();\n        mustache.parse(others_tmpl);\n\n        function render_others() {\n            function is_other(path) {\n                var block = client.blocks[path];\n                var block_part = client.blocks_part[path];\n                var block_lvm2 = client.blocks_lvm2[path];\n\n                return ((!block_part || block_part.Table == \"/\") &&\n                        block.Drive == \"/\" &&\n                        block.CryptoBackingDevice == \"/\" &&\n                        block.MDRaid == \"/\" &&\n                        (!block_lvm2 || block_lvm2.LogicalVolume == \"/\") &&\n                        !block.HintIgnore &&\n                        block.Size > 0);\n            }\n\n            function make_other(path) {\n                var block = client.blocks[path];\n                var name = utils.block_name(block);\n\n                return {\n                    path: path,\n                    dev: name.replace(/^\\/dev\\//, \"\"),\n                    Name: name,\n                    Description: cockpit.format(_(\"$0 Block Device\"), utils.fmt_size(block.Size))\n                };\n            }\n\n            var o = Object.keys(client.blocks).filter(is_other).sort(utils.make_block_path_cmp(client)).map(make_other);\n            $('#others').amend(mustache.render(others_tmpl,\n                                               { Others: o,\n                                                 HasOthers: o.length > 0\n                                               }));\n            permissions.update();\n        }\n\n        $(client).on('changed', render_others);\n\n        var mounts_tmpl = $(\"#mounts-tmpl\").html();\n        mustache.parse(mounts_tmpl);\n\n        function render_mounts() {\n            function is_mount(path) {\n                var block = client.blocks[path];\n                var fsys = client.blocks_fsys[path];\n                return fsys && block.IdUsage == \"filesystem\" && block.IdType != \"mpath_member\" && !block.HintIgnore;\n            }\n\n            function cmp_mount(path_a, path_b) {\n                return client.blocks[path_a].IdLabel.localeCompare(client.blocks[path_b]).IdLabel;\n            }\n\n            function make_mount(path) {\n                var block = client.blocks[path];\n                var fsys = client.blocks_fsys[path];\n                var mount_points = fsys.MountPoints.map(utils.decode_filename);\n                var fsys_size;\n                for (var i = 0; i < mount_points.length && !fsys_size; i++)\n                    fsys_size = client.fsys_sizes.data[mount_points[i]];\n\n                return {\n                    LinkTarget: utils.get_block_link_target(client, path),\n                    Name: block.IdLabel || utils.block_name(block),\n                    DeviceSize: utils.fmt_size(block.Size),\n                    UsageText: fsys_size? utils.format_fsys_usage(fsys_size[0], fsys_size[1]) : null,\n                    UsagePercent: fsys_size? fsys_size[0] / fsys_size[1] * 100 : null,\n                    UsageCritical: fsys_size && fsys_size[0] > 0.95 * fsys_size[1],\n                    MountPoints: fsys.MountPoints.map(utils.decode_filename),\n                    IsMounted: fsys.MountPoints.length > 0\n                };\n            }\n\n            var m = Object.keys(client.blocks).filter(is_mount).sort(cmp_mount).map(make_mount);\n            $('#mounts').amend(mustache.render(mounts_tmpl,\n                                               { Mounts: m,\n                                                 HasMounts: m.length > 0\n                                               }));\n\n            /* Apply these styles */\n            $('#mounts [data-width]').each(function() {\n                $(this).css(\"width\", $(this).attr(\"data-width\"));\n            });\n\n            permissions.update();\n            jobs.update('#mounts');\n        }\n\n        $(client).on('changed', render_mounts);\n        $(client.fsys_sizes).on('changed', render_mounts);\n\n        var nfs_mounts_tmpl = $(\"#nfs-mounts-tmpl\").html();\n        mustache.parse(nfs_mounts_tmpl);\n\n        var nfs_users_tmpl = $(\"#nfs-users-tmpl\").html();\n        mustache.parse(nfs_users_tmpl);\n\n        function render_nfs_mounts() {\n\n            function make_nfs_mount(entry, index) {\n                var fsys_size;\n                if (entry.mounted)\n                    fsys_size = client.nfs.get_fsys_size(entry);\n\n                return {\n                    Server: entry.fields[0].split(\":\")[0],\n                    RemoteDir: entry.fields[0].split(\":\")[1],\n                    UsageText: fsys_size? utils.format_fsys_usage(fsys_size[0], fsys_size[1]) : null,\n                    UsagePercent: fsys_size? fsys_size[0] / fsys_size[1] * 100 : null,\n                    UsageCritical: fsys_size && fsys_size[0] > 0.95 * fsys_size[1],\n                    MountPoint: entry.fields[1],\n                    IsMounted: entry.mounted,\n                    CanEdit: entry.fstab,\n                    action_arg: index\n                };\n            }\n\n            var m = client.nfs.entries.map(make_nfs_mount);\n\n            var is_armed = $('#nfs-mounts .nfs-arm-button').hasClass('active');\n            $('#nfs-mounts').amend(mustache.render(nfs_mounts_tmpl,\n                                                   { armed: is_armed,\n                                                     Mounts: m,\n                                                     HasMounts: m.length > 0\n                                                   }));\n\n            /* Apply these styles */\n            $('#nfs-mounts [data-width]').each(function() {\n                $(this).css(\"width\", $(this).attr(\"data-width\"));\n            });\n        }\n\n        $('#storage').on('click', '#nfs-mounts .nfs-arm-button', function (event) {\n            $(this).toggleClass('active');\n            render_nfs_mounts();\n        });\n\n        function nfs_disarm() {\n            $('#nfs-mounts .nfs-arm-button').removeClass('active');\n            render_nfs_mounts();\n        }\n\n        function checked(error_title, promise) {\n            promise.fail(function (error, output) {\n                $('#error-popup-title').text(error_title);\n                $('#error-popup-message').text(error.toString());\n                $('#error-popup').modal('show');\n            });\n        }\n\n        $('#storage').on('click', '[data-action=\"mount-mount\"]', function () {\n            var arg = $(this).attr('data-arg');\n            var entry = client.nfs.entries[arg];\n            checked(\"Could not mount the filesystem\",\n                    client.nfs.mount_entry(entry));\n            nfs_disarm();\n            return false;\n        });\n\n        function nfs_busy_dialog(dialog_title,\n                                 entry, error,\n                                 action_title, action) {\n\n            function show(users) {\n                if (users.length === 0) {\n                    $('#error-popup-title').text(dialog_title);\n                    $('#error-popup-message').text(error.toString());\n                    $('#error-popup').modal('show');\n                } else {\n                    dialog.open({ Title: dialog_title,\n                                  Teardown: {\n                                      HasUnits: true,\n                                      Units: users.map(function (u) { return { Unit: u.unit, Name: u.desc }; })\n                                  },\n                                  Fields: [ ],\n                                  Action: users? {\n                                      DangerButton: true,\n                                      Title: action_title,\n                                      action: function () {\n                                          return action(users);\n                                      }\n                                  } : null\n                                });\n                }\n            }\n\n            client.nfs.entry_users(entry)\n                .done(function (users) {\n                    show(users);\n                })\n                .fail(function (error) {\n                    show([ ]);\n                });\n        }\n\n        $('#storage').on('click', '[data-action=\"mount-unmount\"]', function () {\n            var arg = $(this).attr('data-arg');\n            var entry = client.nfs.entries[arg];\n            client.nfs.unmount_entry(entry)\n                .fail(function (error) {\n                    nfs_busy_dialog(_(\"Unable to unmount filesystem\"),\n                                    entry, error,\n                                    _(\"Stop and unmount\"),\n                                    function (users) {\n                                        return client.nfs.stop_and_unmount_entry(users, entry);\n                                    });\n                });\n            nfs_disarm();\n            return false;\n        });\n\n        function nfs_fstab_dialog(entry) {\n\n            var server_to_check;\n            var server_check_deferred;\n\n            function remote_choices(vals) {\n                if (vals.server == server_to_check)\n                    return false;\n\n                server_to_check = vals.server;\n                if (server_check_deferred)\n                    server_check_deferred.resolve(false);\n\n                var this_deferred = cockpit.defer();\n                server_check_deferred = this_deferred;\n\n                cockpit.spawn([ \"showmount\", \"-e\", \"--no-headers\", server_to_check ], { err: \"message\" })\n                        .done(function (output) {\n                            if (this_deferred == server_check_deferred) {\n                                var dirs = [ ];\n                                output.split(\"\\n\").forEach(function (line) {\n                                    var d = line.split(\" \")[0];\n                                    if (d)\n                                        dirs.push(d);\n                                });\n                                this_deferred.resolve(dirs);\n                                server_check_deferred = null;\n                            } else {\n                                this_deferred.resolve(false);\n                            }\n                        }).\n                        fail(function (error) {\n                            console.warn(error);\n                            this_deferred.resolve([ ]);\n                        });\n\n                return this_deferred.promise();\n            }\n\n            function show(busy) {\n                dialog.open({ Title: entry? _(\"NFS Mount\") : _(\"New NFS Mount\"),\n                              Alerts: busy? [ { Message: _(\"This NFS mount is in use and only its options can be changed.\") } ] : null,\n                              Fields: [\n                                  { TextInput: \"server\",\n                                    Title: _(\"Server Address\"),\n                                    Value: entry? entry.fields[0].split(\":\")[0] : \"\",\n                                    validate: function (val) {\n                                        if (val === \"\")\n                                            return _(\"Server cannot be empty.\");\n                                    },\n                                    disabled: busy\n                                  },\n                                  { ComboBox: \"remote\",\n                                    Title: _(\"Path on Server\"),\n                                    Value: entry? entry.fields[0].split(\":\")[1] : \"\",\n                                    Choices: remote_choices,\n                                    validate: function (val) {\n                                        if (val === \"\")\n                                            return _(\"Path on server cannot be empty.\");\n                                        if (val[0] !== \"/\")\n                                            return _(\"Path on server must start with \\\"/\\\".\");\n                                    },\n                                    disabled: busy\n                                  },\n                                  { TextInput: \"dir\",\n                                    Title: _(\"Local Mount Point\"),\n                                    Value: entry? entry.fields[1] : \"\",\n                                    validate: function (val) {\n                                        if (val === \"\")\n                                            return _(\"Mount point cannot be empty.\");\n                                        if (val[0] !== \"/\")\n                                            return _(\"Mount point must start with \\\"/\\\".\");\n                                    },\n                                    disabled: busy\n                                  },\n                                  { TextInput: \"opts\",\n                                    Title: _(\"Mount Options\"),\n                                    Value: entry? entry.fields[3] : \"defaults\",\n                                    validate: function (val) {\n                                        if (val === \"\")\n                                            return _(\"Options cannot be empty.\");\n                                    }\n                                  }\n                              ],\n                              Action: {\n                                  Title: entry? _(\"Apply\") : _(\"Add\"),\n                                  action: function (vals) {\n                                      var fields = [ vals.server + \":\" + vals.remote,\n                                                     vals.dir,\n                                                     entry? entry.fields[2]: \"nfs\",\n                                                     vals.opts ];\n\n                                      if (entry)\n                                          return client.nfs.update_entry(entry, fields);\n                                      else\n                                          return client.nfs.add_entry(fields);\n                                  }\n                              }\n                            });\n            }\n\n            if (entry) {\n                client.nfs.entry_users(entry)\n                    .done(function (users) {\n                        show(users.length > 0);\n                    })\n                    .fail(function () {\n                        show(false);\n                    });\n            } else\n                show(false);\n        }\n\n        $('#storage').on('click', '[data-action=\"mount-edit\"]', function () {\n            var arg = $(this).attr('data-arg');\n            var entry = client.nfs.entries[arg];\n            if (entry)\n                nfs_fstab_dialog(entry);\n            nfs_disarm();\n            return false;\n        });\n\n        $('#storage').on('click', '[data-action=\"mount-add\"]', function () {\n            nfs_fstab_dialog(null);\n            return false;\n        });\n\n        $('#storage').on('click', '[data-action=\"mount-remove\"]', function () {\n            var arg = $(this).attr('data-arg');\n            var entry = client.nfs.entries[arg];\n            client.nfs.remove_entry(entry)\n                .fail(function (error) {\n                    nfs_busy_dialog(_(\"Unable to remove mount\"),\n                                    entry, error,\n                                    _(\"Stop and remove\"),\n                                    function (users) {\n                                        return client.nfs.stop_and_remove_entry(users, entry);\n                                    });\n                });\n            nfs_disarm();\n            return false;\n        });\n\n        $(client.nfs).on('changed', render_nfs_mounts);\n\n        function render_jobs() {\n            $('#jobs').amend(jobs.render());\n            permissions.update();\n        }\n\n        $(client).on('changed', render_jobs);\n\n        function plot_setup(flot) {\n            var axes = flot.getAxes();\n            if (axes.yaxis.datamax < 100000)\n                axes.yaxis.options.max = 100000;\n            else\n                axes.yaxis.options.max = null;\n            axes.yaxis.options.min = 0;\n        }\n\n        function make_plot_post(unit) {\n            return function (flot) {\n                var axes = flot.getAxes();\n                $(unit).text(plot.bytes_per_sec_tick_unit(axes.yaxis));\n            };\n        }\n\n        function highlight_drive(event, dev) {\n            cur_highlight = dev;\n            render_drives();\n        }\n\n        var read_plot_data = {\n            direct: \"disk.dev.read_bytes\",\n            internal: \"block.device.read\",\n            units: \"bytes\",\n            derive: \"rate\",\n            threshold: 1000\n        };\n\n        var read_plot_options = plot.plot_simple_template();\n        $.extend(read_plot_options.yaxis, { ticks: plot.memory_ticks,\n                                            tickFormatter: plot.format_bytes_per_sec_tick_no_unit\n                                          });\n        $.extend(read_plot_options.grid,  { hoverable: true,\n                                            autoHighlight: false\n                                          });\n        read_plot_options.setup_hook = plot_setup;\n        read_plot_options.post_hook = make_plot_post(\"#storage-reading-unit\");\n        var read_plot = plot.plot($(\"#storage-reading-graph\"), 300);\n        read_plot.set_options(read_plot_options);\n        read_series = read_plot.add_metrics_stacked_instances_series(read_plot_data, { });\n        read_plot.start_walking();\n        $(read_series).on('hover', highlight_drive);\n\n        var write_plot_data = {\n            direct: \"disk.dev.write_bytes\",\n            internal: \"block.device.written\",\n            units: \"bytes\",\n            derive: \"rate\",\n            threshold: 1000\n        };\n\n        var write_plot_options = plot.plot_simple_template();\n        $.extend(write_plot_options.yaxis, { ticks: plot.memory_ticks,\n                                             tickFormatter: plot.format_bytes_per_sec_tick_no_unit\n                                           });\n        $.extend(write_plot_options.grid,  { hoverable: true,\n                                             autoHighlight: false\n                                           });\n        write_plot_options.setup_hook = plot_setup;\n        write_plot_options.post_hook = make_plot_post(\"#storage-writing-unit\");\n        var write_plot = plot.plot($(\"#storage-writing-graph\"), 300);\n        write_plot.set_options(write_plot_options);\n        write_series = write_plot.add_metrics_stacked_instances_series(write_plot_data, { });\n        write_plot.start_walking();\n        $(write_series).on('hover', highlight_drive);\n\n        $(window).on('resize', function () {\n            read_plot.resize();\n            write_plot.resize();\n        });\n\n        var plot_controls = plot.setup_plot_controls($('#storage'), $('#storage-graph-toolbar'));\n        plot_controls.reset([ read_plot, write_plot ]);\n\n        render_mdraids();\n        render_vgroups();\n        render_iscsi_sessions();\n        render_drives();\n        render_others();\n        render_mounts();\n        render_nfs_mounts();\n        render_jobs();\n\n        $('#storage-log').append(\n            journal.logbox([ \"_SYSTEMD_UNIT=storaged.service\", \"+\",\n                            \"_SYSTEMD_UNIT=udisks2.service\", \"+\",\n                            \"_SYSTEMD_UNIT=dm-event.service\", \"+\",\n                            \"_SYSTEMD_UNIT=smartd.service\", \"+\",\n                            \"_SYSTEMD_UNIT=multipathd.service\"\n                          ],\n                          10));\n\n        $('#create-mdraid').on('click', function () {\n            dialog.open({ Title: _(\"Create RAID Device\"),\n                          Fields: [\n                              { TextInput: \"name\",\n                                Title: _(\"Name\"),\n                              },\n                              { SelectOne: \"level\",\n                                Title: _(\"RAID Level\"),\n                                Options: [\n                                    { value: \"raid0\",  Title: _(\"RAID 0 (Stripe)\") },\n                                    { value: \"raid1\",  Title: _(\"RAID 1 (Mirror)\") },\n                                    { value: \"raid4\",  Title: _(\"RAID 4 (Dedicated Parity)\") },\n                                    { value: \"raid5\",  Title: _(\"RAID 5 (Distributed Parity)\"), selected: true },\n                                    { value: \"raid6\",  Title: _(\"RAID 6 (Double Distributed Parity)\") },\n                                    { value: \"raid10\", Title: _(\"RAID 10 (Stripe of Mirrors)\") }\n                                ]\n                              },\n                              { SelectOne: \"chunk\",\n                                Title: _(\"Chunk Size\"),\n                                Options: [\n                                    { value: \"4\", Title: _(\"4 KiB\") },\n                                    { value: \"8\", Title: _(\"8 KiB\") },\n                                    { value: \"16\", Title: _(\"16 KiB\") },\n                                    { value: \"32\", Title: _(\"32 KiB\") },\n                                    { value: \"64\", Title: _(\"64 KiB\") },\n                                    { value: \"128\", Title: _(\"128 KiB\") },\n                                    { value: \"512\", Title: _(\"512 KiB\"), selected: true },\n                                    { value: \"1024\", Title: _(\"1 MiB\") },\n                                    { value: \"2048\", Title: _(\"2 MiB\") }\n                                ],\n                                visible: function (vals) {\n                                    return vals.level != \"raid1\";\n                                }\n                              },\n                              { SelectMany: \"disks\",\n                                Title: _(\"Disks\"),\n                                Options: utils.get_available_spaces(client).map(utils.available_space_to_option),\n                                EmptyWarning: _(\"No disks are available.\"),\n                                validate: function (disks, vals) {\n                                    var disks_needed = vals.level == \"raid6\"? 4 : 2;\n                                    if (disks.length < disks_needed)\n                                        return cockpit.format(_(\"At least $0 disks are needed.\"),\n                                                              disks_needed);\n                                }\n                              }\n                          ],\n                          Action: {\n                              Title: _(\"Create\"),\n                              action: function (vals) {\n                                  return utils.prepare_available_spaces(client, vals.disks).then(function () {\n                                      var paths = Array.prototype.slice.call(arguments);\n                                      return client.manager.MDRaidCreate(paths, vals.level,\n                                                                         vals.name, (vals.chunk || 0) * 1024,\n                                                                         { });\n                                  });\n                              }\n                          }\n                        });\n        });\n\n        $('#create-volume-group').on('click', function () {\n            function find_vgroup(name) {\n                for (var p in client.vgroups) {\n                    if (client.vgroups[p].Name == name)\n                        return client.vgroups[p];\n                }\n                return null;\n            }\n\n            var name;\n            for (var i = 0; i < 1000; i++) {\n                name = \"vgroup\" + i.toFixed();\n                if (!find_vgroup(name))\n                    break;\n            }\n\n            dialog.open({ Title: _(\"Create Volume Group\"),\n                          Fields: [\n                              { TextInput: \"name\",\n                                Title: _(\"Name\"),\n                                Value: name,\n                                validate: utils.validate_lvm2_name\n                              },\n                              { SelectMany: \"disks\",\n                                Title: _(\"Disks\"),\n                                Options: utils.get_available_spaces(client).map(utils.available_space_to_option),\n                                EmptyWarning: _(\"No disks are available.\"),\n                                validate: function (disks) {\n                                    if (disks.length === 0)\n                                        return _(\"At least one disk is needed.\");\n                                }\n                              }\n                          ],\n                          Action: {\n                              Title: _(\"Create\"),\n                              action: function (vals, dialog) {\n                                  return utils.prepare_available_spaces(client, vals.disks).then(function () {\n                                      var paths = Array.prototype.slice.call(arguments);\n                                      return client.manager_lvm2.VolumeGroupCreate(vals.name, paths, { });\n                                  });\n                              }\n                          }\n                        });\n        });\n\n        function iscsi_discover() {\n            dialog.open({ Title: _(\"Add iSCSI Portal\"),\n                          Fields: [\n                              { TextInput: \"address\",\n                                Title: _(\"Server Address\"),\n                                validate: function (val) {\n                                    if (val === \"\")\n                                        return _(\"Server address cannot be empty.\");\n                                }\n                              },\n                              { TextInput: \"username\",\n                                Title: _(\"Username\")\n\n                              },\n                              { PassInput: \"password\",\n                                Title: _(\"Password\")\n                              }\n                          ],\n                          Action: {\n                              Title: _(\"Next\"),\n                              action: function (vals, dialog) {\n                                  var dfd = $.Deferred();\n\n                                  var options = { };\n                                  if (vals.username || vals.password) {\n                                      options.username = { t: 's', v: vals.username };\n                                      options.password = { t: 's', v: vals.password };\n                                  }\n\n                                  var cancelled = false;\n                                  client.manager_iscsi.call('DiscoverSendTargets',\n                                                            [ vals.address,\n                                                              0,\n                                                              options\n                                                            ]).\n                                      done(function (results) {\n                                          if (!cancelled) {\n                                              dfd.resolve();\n                                              iscsi_add(vals, results[0]);\n                                          }\n                                      }).\n                                      fail(function (error) {\n                                          if (!cancelled)\n                                              dfd.reject(error);\n                                      });\n\n                                  var promise = dfd.promise();\n                                  promise.cancel = function () {\n                                      cancelled = true;\n                                      dfd.reject();\n                                  };\n                                  return promise;\n                              },\n                              failure_filter: function (vals, err) {\n                                  if (!err)\n                                      return err;\n\n                                  // HACK - https://github.com/storaged-project/storaged/issues/26\n                                  if (err.message.indexOf(\"initiator failed authorization\") != -1)\n                                      return [ { field: \"username\",\n                                                 message: null,\n                                               },\n                                               { field: \"password\",\n                                                 message: _(\"Invalid username or password\"),\n                                               }\n                                             ];\n                                  else if (err.message.indexOf(\"cannot resolve host name\") != -1)\n                                      return { field: \"address\",\n                                               message: _(\"Unknown host name\")\n                                             };\n                                  else if (err.message.indexOf(\"connection login retries\") != -1)\n                                      return { field: \"address\",\n                                               message: _(\"Unable to reach server\")\n                                             };\n                                  else\n                                      return err;\n                              }\n                          }\n                        });\n        }\n\n        function iscsi_login(target, cred_vals) {\n            var options = {\n                'node.startup': { t: 's', v: \"automatic\" }\n            };\n            if (cred_vals.username || cred_vals.password) {\n                options.username = { t: 's', v: cred_vals.username };\n                options.password = { t: 's', v: cred_vals.password };\n            }\n            return client.manager_iscsi.call('Login',\n                                             [ target[0],\n                                               target[1],\n                                               target[2],\n                                               target[3],\n                                               target[4],\n                                               options\n                                             ]);\n        }\n\n        function iscsi_add(discover_vals, nodes) {\n            var target_rows = nodes.map(function (n) {\n                return { Columns: [ n[0], n[2], n[3] ],\n                         value: n\n                       };\n            });\n            dialog.open({ Title: cockpit.format(_(\"Available targets on $0\"),\n                                                discover_vals.address),\n                          Fields: [\n                              { SelectRow: \"target\",\n                                Title: _(\"Targets\"),\n                                Headers: [ _(\"Name\"), _(\"Address\"),_(\"Port\") ],\n                                Rows: target_rows\n                              }\n                          ],\n                          Action: {\n                              Title: _(\"Add\"),\n                              action: function (vals) {\n                                  return iscsi_login(vals.target, discover_vals);\n                              },\n                              failure_filter: function (vals, err) {\n                                  // HACK - https://github.com/storaged-project/storaged/issues/26\n                                  if (err.message.indexOf(\"authorization\") != -1)\n                                      iscsi_add_with_creds(discover_vals, vals);\n                                  else\n                                      return err;\n                              }\n                          }\n                        });\n        }\n\n        function iscsi_add_with_creds(discover_vals, login_vals) {\n            dialog.open({ Title: _(\"Authentication required\"),\n                          Fields: [\n                              { TextInput: \"username\",\n                                Title: _(\"Username\"),\n                                Value: discover_vals.username\n                              },\n                              { PassInput: \"password\",\n                                Title: _(\"Password\"),\n                                Value: discover_vals.password\n                              }\n                          ],\n                          Action: {\n                              Title: _(\"Add\"),\n                              action: function (vals) {\n                                  return iscsi_login(login_vals.target, vals);\n                              },\n                              failure_filter: function (vals, err) {\n                                  // HACK - https://github.com/storaged-project/storaged/issues/26\n                                  if (err.message.indexOf(\"authorization\") != -1)\n                                      return [ { field: \"username\",\n                                                 message: null,\n                                               },\n                                               { field: \"password\",\n                                                 message: _(\"Invalid username or password\"),\n                                               }\n                                             ];\n                                  else\n                                      return err;\n                              }\n                          }\n                        });\n        }\n\n        function iscsi_remove(path) {\n            var session = client.iscsi_sessions[path];\n            if (!session)\n                return;\n\n            var options = {\n                'node.startup': { t: 's', v: \"manual\" }\n            };\n\n            session.Logout(options).\n                fail(function (error) {\n                    $('#error-popup-title').text(_(\"Error\"));\n                    $('#error-popup-message').text(error.toString());\n                    $('#error-popup').modal('show');\n                });\n        }\n\n        function iscsi_change_name() {\n            client.manager_iscsi.call('GetInitiatorName').\n                done(function (results) {\n                    var name = results[0];\n                    dialog.open({ Title: _(\"Change iSCSI Initiator Name\"),\n                                  Fields: [\n                                      { TextInput: \"name\",\n                                        Title: _(\"Name\"),\n                                        Value: name\n                                      }\n                                  ],\n                                  Action: {\n                                      Title: _(\"Change\"),\n                                      action: function (vals) {\n                                          return client.manager_iscsi.call('SetInitiatorName',\n                                                                           [ vals.name,\n                                                                             { }\n                                                                           ]);\n                                      }\n                                  }\n                                });\n                });\n        }\n\n        $('#storage').on('click', '[data-action=\"add-iscsi-portal\"]', function () {\n            iscsi_discover();\n        });\n\n        $('#storage').on('click', '[data-action=\"edit-iscsi\"]', function () {\n            iscsi_change_name();\n        });\n\n        $('#storage').on('click', '[data-iscsi-session-remove]', function () {\n            utils.reset_arming_zone($(this));\n            iscsi_remove($(this).attr('data-iscsi-session-remove'));\n        });\n\n        function hide() {\n            $('#storage').hide();\n        }\n\n        function show() {\n            $('#storage').show();\n            read_plot.resize();\n            write_plot.resize();\n        }\n\n        return {\n            show: show,\n            hide: hide\n        };\n    }\n\n    module.exports = {\n        init: init_overview\n    };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/storaged/overview.js\n// module id = 17\n// module chunks = 0","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2014 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nvar $ = require(\"jquery\");\nvar cockpit = require(\"cockpit\");\n\nrequire(\"jquery-flot/jquery.flot\");\nrequire(\"jquery-flot/jquery.flot.selection\");\nrequire(\"jquery-flot/jquery.flot.time\");\n\nvar plotter = { };\n\nvar C_ = cockpit.gettext;\n\n/* A thin abstraction over flot and metrics channels.  It mostly\n * shields you from hairy array acrobatics and having to know when it\n * is safe or required to create the flot object.\n *\n *\n * - plot = plotter.plot(element, x_range, [x_stop])\n *\n * Creates a 'plot' object attached to the given DOM element.  It will\n * show 'x_range' seconds worth of samples, until 'x_stop'.\n *\n * If 'x_stop' is undefined, the plot will show the last 'x_range'\n * seconds until now and walking will work as expected (see below).\n *\n * If 'x_stop' is not undefined, it should be the number of seconds\n * since the epoch.\n *\n * - plot.start_walking()\n *\n * Scroll towards the future.\n *\n * - plot.stop_walking()\n *\n * Stop automatic scrolling.\n *\n * - plot.refresh()\n *\n * Draw the plot.\n *\n * - plot.resize()\n *\n * Resize the plot to fit into its DOM element.  This will\n * automatically refresh the plot.  You should also call this function\n * when 'element' has changed visibility as that might affect its\n * size.\n *\n * - plot.set_options(options)\n *\n * Set the global flot options.  You need to refresh the plot\n * afterwards.\n *\n * In addition to the flot options, you can also set the 'setup_hook'\n * field to a function.  This function will be called between\n * flot.setData() and flot.draw() and can be used to adjust the axes\n * limits, for example.  It is called with the flot object as its only\n * parameter.\n *\n * Setting the 'post_hook' to a function will call that function after\n * each refresh of the plot.  This is used to decorate a plot with the\n * unit strings, for example.\n *\n * - options = plot.get_options()\n *\n * Get the global flot options.  You can modify the object and then\n * pass it to set_options.  Don't forget to refresh the plot.\n *\n * - plot.reset(x_range, [x_stop])\n *\n * Resets the range of the plot.  All current sources are reinitialzed\n * but keep their current samples.\n *\n * - plot.destroy()\n *\n * Resets the plot to be empty.  The plot will disappear completely\n * from the DOM, including the grid.\n *\n * - series = plot.add_metrics_sum_series(desc, options)\n *\n * Adds a single series into the plot that is fed by a metrics\n * channel.  The series will have the given flot options.  The plot\n * will automatically refresh as data becomes available from the\n * channel.\n *\n * The single value for the series is computed by summing the values\n * for all metrics and all instances that are delivered by the\n * channel.\n *\n * The 'desc' argument determines the channel options:\n *\n *   metrics:         An array with the names of all metrics to monitor.\n *   units:           The common units string for all metrics.\n *   instances:       A optional list of instances to include.\n *   omit_instances:  A optional list of instances to omit.\n *   factor:          A factor to apply to the final sum of all samples.\n *\n * - series.options\n *\n * Direct access to the series options.  You need to refresh the plot\n * after changing it.\n *\n * - series.move_to_front()\n *\n * Move the series in front of all other series.  You need to refresh\n * the plot to see the effect immediately.\n *\n * - series.remove()\n *\n * Removes the series from its plot.  The plot will be refreshed.\n *\n * - $(series).on('hover', function (event, val) { ... })\n *\n * This event is triggered when the user hovers over the series ('val'\n * == true), or stops hovering over it ('val' == false).\n */\n\nplotter.plot = function plot(element, x_range_seconds, x_stop_seconds) {\n    var options = { };\n    var result = { };\n\n    var series = [ ];\n    var flot_data = [ ];\n    var flot = null;\n\n    var interval;\n    var grid;\n\n    function refresh_now() {\n        if (element.height() === 0 || element.width() === 0)\n            return;\n\n        if (flot === null)\n            flot = $.plot(element, flot_data, options);\n\n        flot.setData(flot_data);\n        var axes = flot.getAxes();\n\n        /* Walking and fetching samples are not synchronized, which\n         * means that a walk step might reveal a sample that hasn't\n         * been fetched yet.  To reduce flicker, we cut off one extra\n         * sample at the end.\n         */\n        axes.xaxis.options.min = grid.beg * interval;\n        axes.xaxis.options.max = (grid.end - 2) * interval;\n        if (options.setup_hook)\n            options.setup_hook(flot);\n\n        /* This makes sure that the axes are displayed even for an\n         * empty plot.\n         */\n        axes.xaxis.show = true;\n        axes.xaxis.used = true;\n        axes.yaxis.show = true;\n        axes.yaxis.used = true;\n\n        flot.setupGrid();\n        flot.draw();\n\n        if (options.post_hook)\n            options.post_hook(flot);\n    }\n\n    var refresh_pending = false;\n\n    function refresh() {\n        if (!refresh_pending) {\n            refresh_pending = true;\n            window.setTimeout(function () {\n                refresh_pending = false;\n                refresh_now();\n            }, 0);\n        }\n    }\n\n    function start_walking() {\n        grid.walk();\n    }\n\n    function stop_walking() {\n        grid.move(grid.beg, grid.end);\n    }\n\n    var sync_suppressed = 0;\n\n    function reset(x_range_seconds, x_stop_seconds) {\n        if (flot)\n            flot.clearSelection(true);\n\n        // Fill the plot with about 1000 samples, but don't sample\n        // faster than once per second.\n        //\n        // TODO - do this based on the actual size of the plot.\n\n        interval = Math.ceil(x_range_seconds / 1000) * 1000;\n\n        var x_offset;\n        if (x_stop_seconds !== undefined)\n            x_offset = (new Date().getTime()) - x_stop_seconds * 1000;\n        else\n            x_offset = 0;\n\n        var beg = -Math.ceil((x_range_seconds * 1000 + x_offset) / interval);\n        var end = -Math.floor(x_offset / interval);\n\n        if (grid && grid.interval == interval) {\n            grid.move(beg, end);\n        } else {\n            if (grid)\n                grid.close();\n            grid = cockpit.grid(interval, beg, end);\n            sync_suppressed++;\n            for (var i = 0; i < series.length; i++)\n                series[i].reset();\n            sync_suppressed--;\n            sync();\n\n            $(grid).on('notify', function (event, index, count) {\n                refresh();\n            });\n        }\n    }\n\n    function sync() {\n        if (sync_suppressed === 0)\n            grid.sync();\n    }\n\n    function destroy() {\n        grid.close();\n        for (var i = 0; i < series.length; i++)\n            series[i].stop();\n\n        options = { };\n        series = [ ];\n        flot_data = [ ];\n        flot = null;\n        $(element).empty();\n        $(element).data(\"flot_data\", null);\n    }\n\n    function resize() {\n        if (element.height() === 0 || element.width() === 0)\n            return;\n        if (flot)\n            flot.resize();\n        refresh();\n    }\n\n    function set_options(opts) {\n        options = opts;\n        flot = null;\n    }\n\n    function get_options() {\n        return options;\n    }\n\n    function add_metrics_sum_series(desc, opts) {\n        var channel = null;\n\n        var self = {\n            options: opts,\n            move_to_front: move_to_front,\n            remove: remove\n        };\n\n        series.push({\n            stop: stop,\n            reset: reset_series,\n            hover_hit: hover_hit,\n            hover: hover\n        });\n\n        function stop() {\n            if (channel)\n                channel.close();\n        }\n\n        function add_series() {\n            flot_data.push(opts);\n        }\n\n        function remove_series() {\n            var pos = flot_data.indexOf(opts);\n            if (pos >= 0)\n                flot_data.splice(pos, 1);\n        }\n\n        function move_to_front() {\n            var pos = flot_data.indexOf(opts);\n            if (pos >= 0) {\n                flot_data.splice(pos, 1);\n                flot_data.push(opts);\n            }\n        }\n\n        function remove() {\n            stop();\n            remove_series();\n            refresh();\n        }\n\n        function build_metric(n) {\n            return { name: n, units: desc.units, derive: desc.derive };\n        }\n\n        var chanopts_list = [ ];\n\n        if (desc.direct) {\n            chanopts_list.push({ source: \"direct\",\n                                 archive_source: \"pcp-archive\",\n                                 metrics: desc.direct.map(build_metric),\n                                 instances: desc.instances,\n                                 \"omit-instances\": desc['omit-instances'],\n                                 host: desc.host\n                               });\n        }\n\n        if (desc.internal) {\n            chanopts_list.push({ source: \"internal\",\n                                 metrics: desc.internal.map(build_metric),\n                                 instances: desc.instances,\n                                 \"omit-instances\": desc['omit-instances'],\n                                 host: desc.host\n                               });\n        }\n\n        function flat_sum(val) {\n            var i, sum;\n\n            if (!val)\n                return 0;\n            if (val.length !== undefined) {\n                sum = 0;\n                for (i = 0; i < val.length; i++)\n                    sum += flat_sum(val[i]);\n                return sum;\n            }\n            return val;\n        }\n\n        function reset_series() {\n            if (channel)\n                channel.close();\n\n            channel = cockpit.metrics(interval, chanopts_list);\n\n            var metrics_row = grid.add(channel, [ ]);\n            var factor = desc.factor || 1;\n            opts.data = grid.add(function(row, x, n) {\n                for (var i = 0; i < n; i++)\n                    row[x + i] = [(grid.beg + x + i)*interval, flat_sum(metrics_row[x + i]) * factor];\n            });\n\n            function check_archives() {\n                if (channel.archives && !result.archives) {\n                    result.archives = true;\n                    $(result).triggerHandler(\"changed\");\n                }\n            }\n\n            $(channel).on('changed', check_archives);\n            check_archives();\n\n            sync();\n        }\n\n        function hover_hit(pos, item) {\n            return !!(item && (item.series.data == opts.data));\n        }\n\n        function hover(val) {\n            $(self).triggerHandler('hover', [ val ]);\n        }\n\n        reset_series();\n        add_series();\n\n        return self;\n    }\n\n    function add_metrics_stacked_instances_series(desc, opts) {\n        var channel = null;\n\n        var self = {\n            add_instance:    add_instance,\n            clear_instances: clear_instances\n        };\n\n        series.push({\n            stop: stop,\n            reset: reset_series,\n            hover_hit: hover_hit,\n            hover: hover\n        });\n\n        function stop() {\n            if (channel)\n                channel.close();\n        }\n\n        function build_metric(n) {\n            return { name: n, units: desc.units, derive: desc.derive };\n        }\n\n        var chanopts_list = [ ];\n\n        if (desc.direct) {\n            chanopts_list.push({ source: \"direct\",\n                                 archive_source: \"pcp-archive\",\n                                 metrics: [ build_metric(desc.direct) ],\n                                 metrics_path_names: [ \"a\" ],\n                                 instances: desc.instances,\n                                 \"omit-instances\": desc['omit-instances'],\n                                 host: desc.host\n                               });\n        }\n\n        if (desc.internal) {\n            chanopts_list.push({ source: \"internal\",\n                                 metrics: [ build_metric(desc.internal) ],\n                                 metrics_path_names: [ \"a\" ],\n                                 instances: desc.instances,\n                                 \"omit-instances\": desc['omit-instances'],\n                                 host: desc.host\n                               });\n        }\n\n        var instances = { };\n        var last_instance = null;\n\n        function reset_series() {\n            if (channel)\n                channel.close();\n\n            channel = cockpit.metrics(interval, chanopts_list);\n\n            function check_archives() {\n                if (channel.archives && !result.archives) {\n                    result.archives = true;\n                    $(result).triggerHandler(\"changed\");\n                }\n            }\n\n            $(channel).on('changed', check_archives);\n            check_archives();\n\n            sync_suppressed++;\n            for (var name in instances)\n                instances[name].reset();\n            sync_suppressed--;\n            sync();\n        }\n\n        function add_instance(name, selector) {\n            if (instances[name])\n                return;\n\n            var instance_data = $.extend({ selector: selector }, opts);\n            var factor = desc.factor || 1;\n            var threshold = desc.threshold || 0;\n            var metrics_row;\n\n            var last = last_instance;\n\n            function reset() {\n                metrics_row = grid.add(channel, [ \"a\", name ]);\n                instance_data.data = grid.add(function(row, x, n) {\n                    for (var i = 0; i < n; i++) {\n                        var value = (metrics_row[x + i] || 0)*factor;\n                        var ts = (grid.beg + x + i)*interval;\n                        var floor = 0;\n\n                        if (last) {\n                            if (last.data[x + i][1])\n                                floor = last.data[x + i][1];\n                            else\n                                floor = last.data[x + i][2];\n                        }\n\n                        if (Math.abs(value) > threshold) {\n                            row[x + i] = [ ts, floor + value, floor ];\n                            if (row[x + i - 1] && row[x + i - 1][1] === null)\n                                row[x + i - 1][1] = row[x + i - 1][2];\n                        } else {\n                            row[x + i] = [ ts, null, floor ];\n                            if (row[x + i - 1] && row[x + i - 1][1] !== null)\n                                row[x + i - 1][1] = row[x + i - 1][2];\n                        }\n                    }\n                });\n                sync();\n            }\n\n            function remove() {\n                grid.remove(metrics_row);\n                grid.remove(instance_data.data);\n                var pos = flot_data.indexOf(instance_data);\n                if (pos >= 0)\n                    flot_data.splice(pos, 1);\n            }\n\n            last_instance = instance_data;\n            instances[name] = instance_data;\n            instance_data.reset = reset;\n            instance_data.remove = remove;\n\n            reset();\n            flot_data.push(instance_data);\n        }\n\n        function clear_instances() {\n            for (var i in instances)\n                instances[i].remove();\n            instances = { };\n            last_instance = null;\n        }\n\n        function hover_hit(pos, item) {\n            var name, index;\n\n            if (!grid)\n                return false;\n\n            index = Math.round(pos.x/interval) - grid.beg;\n            if (index < 0)\n                index = 0;\n\n            for (name in instances) {\n                var d = instances[name].data;\n                if (d[index] && d[index][1] && d[index][2] <= pos.y && pos.y <= d[index][1])\n                    return instances[name].selector || name;\n            }\n            return false;\n        }\n\n        function hover(val) {\n            $(self).triggerHandler('hover', [ val ]);\n        }\n\n        reset_series();\n        return self;\n    }\n\n    var cur_hover_series = null;\n    var cur_hover_val = false;\n\n    function hover(next_hover_series, next_hover_val) {\n        if (cur_hover_series != next_hover_series) {\n            if (cur_hover_series)\n                cur_hover_series.hover(false);\n            cur_hover_series = next_hover_series;\n            cur_hover_val = next_hover_val;\n            if (cur_hover_series)\n                cur_hover_series.hover(cur_hover_val);\n        } else if (cur_hover_val != next_hover_val) {\n            cur_hover_val = next_hover_val;\n            if (cur_hover_series)\n                cur_hover_series.hover(cur_hover_val);\n        }\n    }\n\n    function hover_on(event, pos, item) {\n        var next_hover_series = null;\n        var next_hover_val = false;\n        for (var i = 0; i < series.length; i++) {\n            next_hover_val = series[i].hover_hit(pos, item);\n            if (next_hover_val) {\n                next_hover_series = series[i];\n                break;\n            }\n        }\n\n        hover(next_hover_series, next_hover_val);\n    }\n\n    function hover_off(event) {\n        hover(null, false);\n    }\n\n    function selecting(event, ranges) {\n        if (ranges)\n            $(result).triggerHandler(\"zoomstart\", [ ]);\n    }\n\n    function selected(event, ranges) {\n        flot.clearSelection(true);\n        $(result).triggerHandler(\"zoom\", [ (ranges.xaxis.to - ranges.xaxis.from) / 1000, ranges.xaxis.to / 1000]);\n    }\n\n    $(element).on(\"plothover\", hover_on);\n    $(element).on(\"mouseleave\", hover_off);\n    $(element).on(\"plotselecting\", selecting);\n    $(element).on(\"plotselected\", selected);\n\n    // for testing\n    $(element).data(\"flot_data\", flot_data);\n\n    reset(x_range_seconds, x_stop_seconds);\n\n    $.extend(result, {\n        archives: false, /* true if any archive data found */\n        start_walking: start_walking,\n        stop_walking: stop_walking,\n        refresh: refresh,\n        reset: reset,\n        destroy: destroy,\n        resize: resize,\n        set_options: set_options,\n        get_options: get_options,\n        add_metrics_sum_series: add_metrics_sum_series,\n        add_metrics_stacked_instances_series: add_metrics_stacked_instances_series\n    });\n\n    return result;\n};\n\nvar plot_colors = [ \"#006bb4\",\n                    \"#008ff0\",\n                    \"#2daaff\",\n                    \"#69c2ff\",\n                    \"#a5daff\",\n                    \"#e1f3ff\",\n                    \"#00243c\",\n                    \"#004778\"\n                  ];\n\nplotter.plot_simple_template = function simple() {\n    return {\n        colors: plot_colors,\n        legend: { show: false },\n        series: { shadowSize: 0,\n            lines: {\n                lineWidth: 2.0,\n                fill: 0.4\n            }\n        },\n        xaxis: { tickLength: 0,\n                 mode: \"time\",\n                 tickFormatter: plotter.format_date_tick,\n                 minTickSize: [ 1, 'minute' ],\n                 reserveSpace: false\n               },\n        yaxis: { tickColor: \"#d1d1d1\",\n                 min: 0\n               },\n        /*\n         * The point radius influences the margin around the grid even if no points\n         * are plotted. We don't want any margin, so we set the radius to zero.\n         */\n        points: {\n            radius: 0\n        },\n        grid: {\n            borderWidth: 1,\n            aboveData: false,\n            color: \"black\",\n            borderColor: $.color.parse(\"black\").scale('a', 0.22).toString(),\n            labelMargin: 0\n        }\n    };\n};\n\nplotter.memory_ticks = function memory_ticks(opts) {\n    // Not more than 5 ticks, nicely rounded to powers of 2.\n    var size = Math.pow(2.0, Math.ceil(Math.log(opts.max/5)/Math.LN2));\n    var ticks = [ ];\n    for (var t = 0; t < opts.max; t += size)\n        ticks.push(t);\n    return ticks;\n};\n\nvar month_names = [\n    C_(\"month-name\", 'Jan'),\n    C_(\"month-name\", 'Feb'),\n    C_(\"month-name\", 'Mar'),\n    C_(\"month-name\", 'Apr'),\n    C_(\"month-name\", 'May'),\n    C_(\"month-name\", 'Jun'),\n    C_(\"month-name\", 'Jul'),\n    C_(\"month-name\", 'Aug'),\n    C_(\"month-name\", 'Sep'),\n    C_(\"month-name\", 'Oct'),\n    C_(\"month-name\", 'Nov'),\n    C_(\"month-name\", 'Dec')\n];\n\nplotter.format_date_tick = function format_date_tick(val, axis) {\n    function pad(n) {\n        var str = n.toFixed();\n        if(str.length == 1)\n            str = '0' + str;\n        return str;\n    }\n\n    var year_index = 0;\n    var month_index = 1;\n    var day_index = 2;\n    var hour_minute_index = 3;\n\n    var begin;\n    var end;\n\n    // Determine the smallest unit according to the steps from one\n    // tick to the next.\n\n    var size = axis.tickSize[1];\n    if (size == \"minute\" || size == \"hour\")\n        end = hour_minute_index;\n    else if (size == \"day\")\n        end = day_index;\n    else if (size == \"month\")\n        end = month_index;\n    else\n        end = year_index;\n\n    // Determine biggest unit according to how far away the left edge\n    // of the graph is from 'now'.\n\n    var n = new Date();\n    var l = new Date(axis.min);\n\n    begin = year_index;\n    if (l.getFullYear() == n.getFullYear()) {\n        begin = month_index;\n        if (l.getMonth() == n.getMonth()) {\n            begin = day_index;\n            if (l.getDate() == n.getDate())\n                begin = hour_minute_index;\n        }\n    }\n\n    // Adjust so that it all makes sense\n\n    if (begin > end)\n        begin = end;\n    if (begin == day_index)\n        begin = month_index;\n\n    // And render it\n\n    var d = new Date(val);\n    var label = \" \";\n\n    if (year_index >= begin && year_index <= end)\n        label += d.getFullYear().toFixed() + \" \";\n    if (month_index >= begin && month_index <= end)\n        label += month_names[d.getMonth()] + \" \";\n    if (day_index >= begin && day_index <= end)\n        label += d.getDate().toFixed() + \" \";\n    if (hour_minute_index >= begin && hour_minute_index <= end)\n        label += pad(d.getHours()) + ':' + pad(d.getMinutes()) + \" \";\n\n    return label.substr(0, label.length-1);\n};\n\nplotter.bytes_tick_unit = function bytes_tick_unit(axis) {\n    return cockpit.format_bytes(axis.max, 1024, true)[1];\n};\n\nplotter.format_bytes_tick_no_unit = function format_bytes_tick_no_unit(val, axis) {\n    return cockpit.format_bytes(val, plotter.bytes_tick_unit(axis), true)[0];\n};\n\nplotter.format_bytes_tick = function format_bytes_tick(val, axis) {\n    return cockpit.format_bytes(val, 1024);\n};\n\nplotter.bytes_per_sec_tick_unit = function bytes_per_sec_tick_unit(axis) {\n    return cockpit.format_bytes_per_sec(axis.max, 1024, true)[1];\n};\n\nplotter.format_bytes_per_sec_tick_no_unit = function format_bytes_per_sec_tick_no_unit(val, axis) {\n    return cockpit.format_bytes_per_sec(val, plotter.bytes_per_sec_tick_unit(axis), true)[0];\n};\n\nplotter.format_bytes_per_sec_tick = function format_bytes_per_sec_tick(val, axis) {\n    return cockpit.format_bytes_per_sec(val, 1024);\n};\n\nplotter.bits_per_sec_tick_unit = function bits_per_sec_tick_unit(axis) {\n    return cockpit.format_bits_per_sec(axis.max*8, 1000, true)[1];\n};\n\nplotter.format_bits_per_sec_tick_no_unit = function format_bits_per_sec_tick_no_tick(val, axis) {\n    return cockpit.format_bits_per_sec(val*8, plotter.bits_per_sec_tick_unit(axis), true)[0];\n};\n\nplotter.format_bits_per_sec_tick = function format_bits_per_sec_tick(val, axis) {\n    return cockpit.format_bits_per_sec(val*8, 1000);\n};\n\nplotter.setup_plot_controls = function setup_plot_controls(container, element, plots) {\n\n    var plot_min_x_range = 5*60;\n    var plot_zoom_steps = [ 5*60,  60*60, 6*60*60, 24*60*60, 7*24*60*60, 30*24*60*60, 365*24*60*60 ];\n\n    var plot_x_range = 5*60;\n    var plot_x_stop;\n    var zoom_history = [ ];\n\n    element.find('[data-range]').click(function () {\n        zoom_history = [ ];\n        plot_x_range = parseInt($(this).attr('data-range'), 10);\n        plot_reset();\n    });\n\n    element.find('[data-action=\"goto-now\"]').click(function () {\n        plot_x_stop = undefined;\n        plot_reset();\n    });\n\n    element.find('[data-action=\"scroll-left\"]').click(function () {\n        var step = plot_x_range / 10;\n        if (plot_x_stop === undefined)\n            plot_x_stop = (new Date()).getTime() / 1000;\n        plot_x_stop -= step;\n        plot_reset();\n    });\n\n    element.find('[data-action=\"scroll-right\"]').click(function () {\n        var step = plot_x_range / 10;\n        if (plot_x_stop !== undefined) {\n            plot_x_stop += step;\n            plot_reset();\n        }\n    });\n\n    element.find('[data-action=\"zoom-out\"]').click(function () {\n        zoom_plot_out();\n    });\n\n    function zoom_plot_start() {\n        if (plot_x_stop === undefined) {\n            plots.forEach(function (p) {\n                p.stop_walking();\n            });\n            plot_x_stop = (new Date()).getTime() / 1000;\n            update_plot_buttons();\n        }\n    }\n\n    function zoom_plot_in(x_range, x_stop) {\n        zoom_history.push(plot_x_range);\n        plot_x_range = x_range;\n        plot_x_stop = x_stop;\n        plot_reset();\n    }\n\n    function zoom_plot_out() {\n        var r = zoom_history.pop();\n        if (r === undefined) {\n            var i;\n            for (i = 0; i < plot_zoom_steps.length-1; i++) {\n                if (plot_zoom_steps[i] > plot_x_range)\n                    break;\n            }\n            r = plot_zoom_steps[i];\n        }\n        if (plot_x_stop !== undefined)\n            plot_x_stop += (r - plot_x_range)/2;\n        plot_x_range = r;\n        plot_reset();\n    }\n\n    function format_range(seconds) {\n        var n;\n        if (seconds >= 365*24*60*60) {\n            n = Math.ceil(seconds / (365*24*60*60));\n            return cockpit.format(cockpit.ngettext(\"$0 year\", \"$0 years\", n), n);\n        } else if (seconds >= 30*24*60*60) {\n            n = Math.ceil(seconds / (30*24*60*60));\n            return cockpit.format(cockpit.ngettext(\"$0 month\", \"$0 months\", n), n);\n        } else if (seconds >= 7*24*60*60) {\n            n = Math.ceil(seconds / (7*24*60*60));\n            return cockpit.format(cockpit.ngettext(\"$0 week\", \"$0 weeks\", n), n);\n        } else if (seconds >= 24*60*60) {\n            n = Math.ceil(seconds / (24*60*60));\n            return cockpit.format(cockpit.ngettext(\"$0 day\", \"$0 days\", n), n);\n        } else if (seconds >= 60*60) {\n            n = Math.ceil(seconds / (60*60));\n            return cockpit.format(cockpit.ngettext(\"$0 hour\", \"$0 hours\", n), n);\n        } else {\n            n = Math.ceil(seconds / 60);\n            return cockpit.format(cockpit.ngettext(\"$0 minute\", \"$0 minutes\", n), n);\n        }\n    }\n\n    function update_plot_buttons() {\n        element.find('[data-action=\"scroll-right\"]')\n            .attr('disabled', plot_x_stop === undefined);\n        element.find('[data-action=\"zoom-out\"]')\n            .attr('disabled', plot_x_range >= plot_zoom_steps[plot_zoom_steps.length-1]);\n    }\n\n    function update_selection_zooming() {\n        var mode;\n\n        if (container.hasClass('show-zoom-controls') && plot_x_range > plot_min_x_range) {\n            container.addClass('show-zoom-cursor');\n            mode = \"x\";\n        } else {\n            container.removeClass('show-zoom-cursor');\n            mode = null;\n        }\n\n        plots.forEach(function (p) {\n            var options = p.get_options();\n            if (!options.selection || options.selection.mode != mode) {\n                options.selection = { mode: mode, color: \"#d4edfa\" };\n                p.set_options(options);\n                p.refresh();\n            }\n        });\n    }\n\n    function plot_reset() {\n        if (plot_x_range < plot_min_x_range) {\n            plot_x_stop += (plot_min_x_range - plot_x_range)/2;\n            plot_x_range = plot_min_x_range;\n        }\n        if (plot_x_stop >= (new Date()).getTime() / 1000 - 10)\n            plot_x_stop = undefined;\n\n        element.find('.dropdown-toggle span:first-child').text(format_range(plot_x_range));\n\n        plots.forEach(function (p) {\n            p.stop_walking();\n            p.reset(plot_x_range, plot_x_stop);\n            p.refresh();\n            if (plot_x_stop === undefined)\n                p.start_walking();\n\n            function check_archives() {\n                if (p.archives) {\n                    container.addClass('show-zoom-controls');\n                    update_selection_zooming();\n                }\n            }\n\n            $(p).on(\"changed\", check_archives);\n            check_archives();\n        });\n\n        update_plot_buttons();\n        update_selection_zooming();\n    }\n\n    function reset(p) {\n        if (p === undefined)\n            p = [ ];\n        plots = p;\n        plots.forEach(function (p) {\n            $(p).on(\"zoomstart\", function (event) { zoom_plot_start(); });\n            $(p).on(\"zoom\", function (event, x_range, x_stop) { zoom_plot_in(x_range, x_stop); });\n        });\n        plot_reset();\n    }\n\n    reset(plots);\n\n    return {\n        reset: reset\n    };\n};\n\nfunction setup_plot(graph_id, grid, data, user_options) {\n    var options = {\n        colors: [ \"#0099d3\" ],\n        legend: { show: false },\n        series: { shadowSize: 0,\n                  lines: { lineWidth: 0.0,\n                           fill: 1.0\n                         }\n                },\n        xaxis: { tickFormatter: function() { return \"\"; } },\n        yaxis: { tickFormatter: function() { return \"\"; } },\n        // The point radius influences\n        // the margin around the grid\n        // even if no points are plotted.\n        // We don't want any margin, so\n        // we set the radius to zero.\n        points: { radius: 0 },\n        grid: { borderWidth: 1,\n                aboveData: true,\n                color: \"black\",\n                borderColor: $.color.parse(\"black\").scale('a', 0.22).toString(),\n                labelMargin: 0\n              }\n    };\n\n    var plot;\n    var running = false;\n    var self;\n\n    $.extend(true, options, user_options);\n\n    // We put the plot inside its own div so that we can give that div\n    // a fixed size which only changes when we can also immediately\n    // call plot.resize().  Otherwise, the labels and legends briefly\n    // get out of sync during resizing.\n\n    var outer_div = $(graph_id);\n    var inner_div = $('<div/>');\n    var starting = null;\n    outer_div.empty();\n    outer_div.append(inner_div);\n\n    function sync_divs ()\n    {\n        inner_div.width(outer_div.width());\n        inner_div.height(outer_div.height());\n    }\n\n    // Updating flot options is tricky and somewhat implementation\n    // defined.  Different options needs different approaches.  So we\n    // just have very specific functions for changing specific options\n    // until a pattern emerges.\n\n    function set_yaxis_max (max) {\n        if (plot) {\n            plot.getAxes().yaxis.options.max = max;\n            refresh ();\n        } else {\n            options.yaxis.max = max;\n        }\n    }\n\n    function start ()\n    {\n        running = true;\n        maybe_start();\n    }\n\n    function maybe_start() {\n        if (running && outer_div.width() > 0 && outer_div.height() > 0) {\n            if (!plot) {\n                sync_divs ();\n                plot = $.plot(inner_div, data, options);\n            } else\n                resize();\n\n            if (starting)\n                window.clearInterval(starting);\n        } else if (!starting) {\n            starting = window.setInterval(maybe_start, 500);\n        }\n\n    }\n\n    function stop ()\n    {\n        running = false;\n    }\n\n    function refresh() {\n        if (plot && running) {\n            plot.setData(data);\n            if (user_options.setup_hook)\n                user_options.setup_hook(plot);\n            plot.setupGrid();\n            plot.draw();\n            if (user_options.post_hook)\n                user_options.post_hook(plot);\n        }\n    }\n\n    function resize() {\n        if (plot && running) {\n            sync_divs ();\n            if (inner_div.width() > 0 && inner_div.height() > 0)\n                plot.resize();\n            refresh();\n        }\n    }\n\n    function destroy () {\n        $(self).trigger('destroyed');\n        $(window).off('resize', resize);\n        $(outer_div).empty();\n        plot = null;\n    }\n\n    $(grid).on('notify', refresh);\n    $(window).on('resize', resize);\n    maybe_start();\n\n    self = { start: start, stop: stop,\n             resize: resize, element: inner_div[0],\n             set_yaxis_max: set_yaxis_max,\n             destroy: destroy\n           };\n    return self;\n}\n\nplotter.setup_complicated_plot = function setup_complicated_plot(graph_id, grid, series, options) {\n    function basic_flot_row(grid, input) {\n        return grid.add(function(row, x, n) {\n            for (var i = 0; i < n; i++)\n                row[x + i] = [i, input[x + i] || 0];\n        });\n    }\n\n    function stacked_flot_row(grid, input, last) {\n        return grid.add(function(row, x, n) {\n            var i, l, floor, val;\n            for (i = 0; i < n; i++) {\n                floor = 0;\n                if (last) {\n                    l = last[x + i];\n                    floor = l ? l[1] : 0;\n                }\n                val = (input[x + i] || 0);\n                row[x + i] = [i, val + floor, floor];\n            }\n        });\n    }\n\n    /* All the data row setup happens now */\n    var last = null;\n    series.forEach(function(ser, i) {\n        if (options.x_rh_stack_graphs)\n            ser.data = stacked_flot_row(grid, ser.row, last);\n        else\n            ser.data = basic_flot_row(grid, ser.row);\n        last = ser.data;\n    });\n    return setup_plot(graph_id, grid, series, options);\n};\n\nmodule.exports = plotter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/plot.js\n// module id = 18\n// module chunks = 0","/* Javascript plotting library for jQuery, version 0.8.3.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\n*/\n\n// first an inline dependency, jquery.colorhelpers.js, we inline it here\n// for convenience\n\n/* Plugin for jQuery for working with colors.\n *\n * Version 1.1.\n *\n * Inspiration from jQuery color animation plugin by John Resig.\n *\n * Released under the MIT license by Ole Laursen, October 2009.\n *\n * Examples:\n *\n *   $.color.parse(\"#fff\").scale('rgb', 0.25).add('a', -0.5).toString()\n *   var c = $.color.extract($(\"#mydiv\"), 'background-color');\n *   console.log(c.r, c.g, c.b, c.a);\n *   $.color.make(100, 50, 25, 0.4).toString() // returns \"rgba(100,50,25,0.4)\"\n *\n * Note that .scale() and .add() return the same modified object\n * instead of making a new one.\n *\n * V. 1.1: Fix error handling so e.g. parsing an empty string does\n * produce a color rather than just crashing.\n */\n(function($){$.color={};$.color.make=function(r,g,b,a){var o={};o.r=r||0;o.g=g||0;o.b=b||0;o.a=a!=null?a:1;o.add=function(c,d){for(var i=0;i<c.length;++i)o[c.charAt(i)]+=d;return o.normalize()};o.scale=function(c,f){for(var i=0;i<c.length;++i)o[c.charAt(i)]*=f;return o.normalize()};o.toString=function(){if(o.a>=1){return\"rgb(\"+[o.r,o.g,o.b].join(\",\")+\")\"}else{return\"rgba(\"+[o.r,o.g,o.b,o.a].join(\",\")+\")\"}};o.normalize=function(){function clamp(min,value,max){return value<min?min:value>max?max:value}o.r=clamp(0,parseInt(o.r),255);o.g=clamp(0,parseInt(o.g),255);o.b=clamp(0,parseInt(o.b),255);o.a=clamp(0,o.a,1);return o};o.clone=function(){return $.color.make(o.r,o.b,o.g,o.a)};return o.normalize()};$.color.extract=function(elem,css){var c;do{c=elem.css(css).toLowerCase();if(c!=\"\"&&c!=\"transparent\")break;elem=elem.parent()}while(elem.length&&!$.nodeName(elem.get(0),\"body\"));if(c==\"rgba(0, 0, 0, 0)\")c=\"transparent\";return $.color.parse(c)};$.color.parse=function(str){var res,m=$.color.make;if(res=/rgb\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10));if(res=/rgba\\(\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]{1,3})\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseInt(res[1],10),parseInt(res[2],10),parseInt(res[3],10),parseFloat(res[4]));if(res=/rgb\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55);if(res=/rgba\\(\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\%\\s*,\\s*([0-9]+(?:\\.[0-9]+)?)\\s*\\)/.exec(str))return m(parseFloat(res[1])*2.55,parseFloat(res[2])*2.55,parseFloat(res[3])*2.55,parseFloat(res[4]));if(res=/#([a-fA-F0-9]{2})([a-fA-F0-9]{2})([a-fA-F0-9]{2})/.exec(str))return m(parseInt(res[1],16),parseInt(res[2],16),parseInt(res[3],16));if(res=/#([a-fA-F0-9])([a-fA-F0-9])([a-fA-F0-9])/.exec(str))return m(parseInt(res[1]+res[1],16),parseInt(res[2]+res[2],16),parseInt(res[3]+res[3],16));var name=$.trim(str).toLowerCase();if(name==\"transparent\")return m(255,255,255,0);else{res=lookupColors[name]||[0,0,0];return m(res[0],res[1],res[2])}};var lookupColors={aqua:[0,255,255],azure:[240,255,255],beige:[245,245,220],black:[0,0,0],blue:[0,0,255],brown:[165,42,42],cyan:[0,255,255],darkblue:[0,0,139],darkcyan:[0,139,139],darkgrey:[169,169,169],darkgreen:[0,100,0],darkkhaki:[189,183,107],darkmagenta:[139,0,139],darkolivegreen:[85,107,47],darkorange:[255,140,0],darkorchid:[153,50,204],darkred:[139,0,0],darksalmon:[233,150,122],darkviolet:[148,0,211],fuchsia:[255,0,255],gold:[255,215,0],green:[0,128,0],indigo:[75,0,130],khaki:[240,230,140],lightblue:[173,216,230],lightcyan:[224,255,255],lightgreen:[144,238,144],lightgrey:[211,211,211],lightpink:[255,182,193],lightyellow:[255,255,224],lime:[0,255,0],magenta:[255,0,255],maroon:[128,0,0],navy:[0,0,128],olive:[128,128,0],orange:[255,165,0],pink:[255,192,203],purple:[128,0,128],violet:[128,0,128],red:[255,0,0],silver:[192,192,192],white:[255,255,255],yellow:[255,255,0]}})(jQuery);\n\n// the actual Flot code\n(function($) {\n\n\t// Cache the prototype hasOwnProperty for faster access\n\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n    // A shim to provide 'detach' to jQuery versions prior to 1.4.  Using a DOM\n    // operation produces the same effect as detach, i.e. removing the element\n    // without touching its jQuery data.\n\n    // Do not merge this into Flot 0.9, since it requires jQuery 1.4.4+.\n\n    if (!$.fn.detach) {\n        $.fn.detach = function() {\n            return this.each(function() {\n                if (this.parentNode) {\n                    this.parentNode.removeChild( this );\n                }\n            });\n        };\n    }\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// The Canvas object is a wrapper around an HTML5 <canvas> tag.\n\t//\n\t// @constructor\n\t// @param {string} cls List of classes to apply to the canvas.\n\t// @param {element} container Element onto which to append the canvas.\n\t//\n\t// Requiring a container is a little iffy, but unfortunately canvas\n\t// operations don't work unless the canvas is attached to the DOM.\n\n\tfunction Canvas(cls, container) {\n\n\t\tvar element = container.children(\".\" + cls)[0];\n\n\t\tif (element == null) {\n\n\t\t\telement = document.createElement(\"canvas\");\n\t\t\telement.className = cls;\n\n\t\t\t$(element).css({ direction: \"ltr\", position: \"absolute\", left: 0, top: 0 })\n\t\t\t\t.appendTo(container);\n\n\t\t\t// If HTML5 Canvas isn't available, fall back to [Ex|Flash]canvas\n\n\t\t\tif (!element.getContext) {\n\t\t\t\tif (window.G_vmlCanvasManager) {\n\t\t\t\t\telement = window.G_vmlCanvasManager.initElement(element);\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error(\"Canvas is not available. If you're using IE with a fall-back such as Excanvas, then there's either a mistake in your conditional include, or the page has no DOCTYPE and is rendering in Quirks Mode.\");\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.element = element;\n\n\t\tvar context = this.context = element.getContext(\"2d\");\n\n\t\t// Determine the screen's ratio of physical to device-independent\n\t\t// pixels.  This is the ratio between the canvas width that the browser\n\t\t// advertises and the number of pixels actually present in that space.\n\n\t\t// The iPhone 4, for example, has a device-independent width of 320px,\n\t\t// but its screen is actually 640px wide.  It therefore has a pixel\n\t\t// ratio of 2, while most normal devices have a ratio of 1.\n\n\t\tvar devicePixelRatio = window.devicePixelRatio || 1,\n\t\t\tbackingStoreRatio =\n\t\t\t\tcontext.webkitBackingStorePixelRatio ||\n\t\t\t\tcontext.mozBackingStorePixelRatio ||\n\t\t\t\tcontext.msBackingStorePixelRatio ||\n\t\t\t\tcontext.oBackingStorePixelRatio ||\n\t\t\t\tcontext.backingStorePixelRatio || 1;\n\n\t\tthis.pixelRatio = devicePixelRatio / backingStoreRatio;\n\n\t\t// Size the canvas to match the internal dimensions of its container\n\n\t\tthis.resize(container.width(), container.height());\n\n\t\t// Collection of HTML div layers for text overlaid onto the canvas\n\n\t\tthis.textContainer = null;\n\t\tthis.text = {};\n\n\t\t// Cache of text fragments and metrics, so we can avoid expensively\n\t\t// re-calculating them when the plot is re-rendered in a loop.\n\n\t\tthis._textCache = {};\n\t}\n\n\t// Resizes the canvas to the given dimensions.\n\t//\n\t// @param {number} width New width of the canvas, in pixels.\n\t// @param {number} width New height of the canvas, in pixels.\n\n\tCanvas.prototype.resize = function(width, height) {\n\n\t\tif (width <= 0 || height <= 0) {\n\t\t\tthrow new Error(\"Invalid dimensions for plot, width = \" + width + \", height = \" + height);\n\t\t}\n\n\t\tvar element = this.element,\n\t\t\tcontext = this.context,\n\t\t\tpixelRatio = this.pixelRatio;\n\n\t\t// Resize the canvas, increasing its density based on the display's\n\t\t// pixel ratio; basically giving it more pixels without increasing the\n\t\t// size of its element, to take advantage of the fact that retina\n\t\t// displays have that many more pixels in the same advertised space.\n\n\t\t// Resizing should reset the state (excanvas seems to be buggy though)\n\n\t\tif (this.width != width) {\n\t\t\telement.width = width * pixelRatio;\n\t\t\telement.style.width = width + \"px\";\n\t\t\tthis.width = width;\n\t\t}\n\n\t\tif (this.height != height) {\n\t\t\telement.height = height * pixelRatio;\n\t\t\telement.style.height = height + \"px\";\n\t\t\tthis.height = height;\n\t\t}\n\n\t\t// Save the context, so we can reset in case we get replotted.  The\n\t\t// restore ensure that we're really back at the initial state, and\n\t\t// should be safe even if we haven't saved the initial state yet.\n\n\t\tcontext.restore();\n\t\tcontext.save();\n\n\t\t// Scale the coordinate space to match the display density; so even though we\n\t\t// may have twice as many pixels, we still want lines and other drawing to\n\t\t// appear at the same size; the extra pixels will just make them crisper.\n\n\t\tcontext.scale(pixelRatio, pixelRatio);\n\t};\n\n\t// Clears the entire canvas area, not including any overlaid HTML text\n\n\tCanvas.prototype.clear = function() {\n\t\tthis.context.clearRect(0, 0, this.width, this.height);\n\t};\n\n\t// Finishes rendering the canvas, including managing the text overlay.\n\n\tCanvas.prototype.render = function() {\n\n\t\tvar cache = this._textCache;\n\n\t\t// For each text layer, add elements marked as active that haven't\n\t\t// already been rendered, and remove those that are no longer active.\n\n\t\tfor (var layerKey in cache) {\n\t\t\tif (hasOwnProperty.call(cache, layerKey)) {\n\n\t\t\t\tvar layer = this.getTextLayer(layerKey),\n\t\t\t\t\tlayerCache = cache[layerKey];\n\n\t\t\t\tlayer.hide();\n\n\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\tif (position.active) {\n\t\t\t\t\t\t\t\t\t\tif (!position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\tlayer.append(position.element);\n\t\t\t\t\t\t\t\t\t\t\tposition.rendered = true;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tpositions.splice(i--, 1);\n\t\t\t\t\t\t\t\t\t\tif (position.rendered) {\n\t\t\t\t\t\t\t\t\t\t\tposition.element.detach();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (positions.length == 0) {\n\t\t\t\t\t\t\t\t\tdelete styleCache[key];\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tlayer.show();\n\t\t\t}\n\t\t}\n\t};\n\n\t// Creates (if necessary) and returns the text overlay container.\n\t//\n\t// @param {string} classes String of space-separated CSS classes used to\n\t//     uniquely identify the text layer.\n\t// @return {object} The jQuery-wrapped text-layer div.\n\n\tCanvas.prototype.getTextLayer = function(classes) {\n\n\t\tvar layer = this.text[classes];\n\n\t\t// Create the text layer if it doesn't exist\n\n\t\tif (layer == null) {\n\n\t\t\t// Create the text layer container, if it doesn't exist\n\n\t\t\tif (this.textContainer == null) {\n\t\t\t\tthis.textContainer = $(\"<div class='flot-text'></div>\")\n\t\t\t\t\t.css({\n\t\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tleft: 0,\n\t\t\t\t\t\tbottom: 0,\n\t\t\t\t\t\tright: 0,\n\t\t\t\t\t\t'font-size': \"smaller\",\n\t\t\t\t\t\tcolor: \"#545454\"\n\t\t\t\t\t})\n\t\t\t\t\t.insertAfter(this.element);\n\t\t\t}\n\n\t\t\tlayer = this.text[classes] = $(\"<div></div>\")\n\t\t\t\t.addClass(classes)\n\t\t\t\t.css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\ttop: 0,\n\t\t\t\t\tleft: 0,\n\t\t\t\t\tbottom: 0,\n\t\t\t\t\tright: 0\n\t\t\t\t})\n\t\t\t\t.appendTo(this.textContainer);\n\t\t}\n\n\t\treturn layer;\n\t};\n\n\t// Creates (if necessary) and returns a text info object.\n\t//\n\t// The object looks like this:\n\t//\n\t// {\n\t//     width: Width of the text's wrapper div.\n\t//     height: Height of the text's wrapper div.\n\t//     element: The jQuery-wrapped HTML div containing the text.\n\t//     positions: Array of positions at which this text is drawn.\n\t// }\n\t//\n\t// The positions array contains objects that look like this:\n\t//\n\t// {\n\t//     active: Flag indicating whether the text should be visible.\n\t//     rendered: Flag indicating whether the text is currently visible.\n\t//     element: The jQuery-wrapped HTML div containing the text.\n\t//     x: X coordinate at which to draw the text.\n\t//     y: Y coordinate at which to draw the text.\n\t// }\n\t//\n\t// Each position after the first receives a clone of the original element.\n\t//\n\t// The idea is that that the width, height, and general 'identity' of the\n\t// text is constant no matter where it is placed; the placements are a\n\t// secondary property.\n\t//\n\t// Canvas maintains a cache of recently-used text info objects; getTextInfo\n\t// either returns the cached element or creates a new entry.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {string} text Text string to retrieve info for.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\t// @param {number=} width Maximum width of the text before it wraps.\n\t// @return {object} a text info object.\n\n\tCanvas.prototype.getTextInfo = function(layer, text, font, angle, width) {\n\n\t\tvar textStyle, layerCache, styleCache, info;\n\n\t\t// Cast the value to a string, in case we were given a number or such\n\n\t\ttext = \"\" + text;\n\n\t\t// If the font is a font-spec object, generate a CSS font definition\n\n\t\tif (typeof font === \"object\") {\n\t\t\ttextStyle = font.style + \" \" + font.variant + \" \" + font.weight + \" \" + font.size + \"px/\" + font.lineHeight + \"px \" + font.family;\n\t\t} else {\n\t\t\ttextStyle = font;\n\t\t}\n\n\t\t// Retrieve (or create) the cache for the text's layer and styles\n\n\t\tlayerCache = this._textCache[layer];\n\n\t\tif (layerCache == null) {\n\t\t\tlayerCache = this._textCache[layer] = {};\n\t\t}\n\n\t\tstyleCache = layerCache[textStyle];\n\n\t\tif (styleCache == null) {\n\t\t\tstyleCache = layerCache[textStyle] = {};\n\t\t}\n\n\t\tinfo = styleCache[text];\n\n\t\t// If we can't find a matching element in our cache, create a new one\n\n\t\tif (info == null) {\n\n\t\t\tvar element = $(\"<div></div>\").html(text)\n\t\t\t\t.css({\n\t\t\t\t\tposition: \"absolute\",\n\t\t\t\t\t'max-width': width,\n\t\t\t\t\ttop: -9999\n\t\t\t\t})\n\t\t\t\t.appendTo(this.getTextLayer(layer));\n\n\t\t\tif (typeof font === \"object\") {\n\t\t\t\telement.css({\n\t\t\t\t\tfont: textStyle,\n\t\t\t\t\tcolor: font.color\n\t\t\t\t});\n\t\t\t} else if (typeof font === \"string\") {\n\t\t\t\telement.addClass(font);\n\t\t\t}\n\n\t\t\tinfo = styleCache[text] = {\n\t\t\t\twidth: element.outerWidth(true),\n\t\t\t\theight: element.outerHeight(true),\n\t\t\t\telement: element,\n\t\t\t\tpositions: []\n\t\t\t};\n\n\t\t\telement.detach();\n\t\t}\n\n\t\treturn info;\n\t};\n\n\t// Adds a text string to the canvas text overlay.\n\t//\n\t// The text isn't drawn immediately; it is marked as rendering, which will\n\t// result in its addition to the canvas on the next render pass.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {number} x X coordinate at which to draw the text.\n\t// @param {number} y Y coordinate at which to draw the text.\n\t// @param {string} text Text string to draw.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which to rotate the text, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\t// @param {number=} width Maximum width of the text before it wraps.\n\t// @param {string=} halign Horizontal alignment of the text; either \"left\",\n\t//     \"center\" or \"right\".\n\t// @param {string=} valign Vertical alignment of the text; either \"top\",\n\t//     \"middle\" or \"bottom\".\n\n\tCanvas.prototype.addText = function(layer, x, y, text, font, angle, width, halign, valign) {\n\n\t\tvar info = this.getTextInfo(layer, text, font, angle, width),\n\t\t\tpositions = info.positions;\n\n\t\t// Tweak the div's position to match the text's alignment\n\n\t\tif (halign == \"center\") {\n\t\t\tx -= info.width / 2;\n\t\t} else if (halign == \"right\") {\n\t\t\tx -= info.width;\n\t\t}\n\n\t\tif (valign == \"middle\") {\n\t\t\ty -= info.height / 2;\n\t\t} else if (valign == \"bottom\") {\n\t\t\ty -= info.height;\n\t\t}\n\n\t\t// Determine whether this text already exists at this position.\n\t\t// If so, mark it for inclusion in the next render pass.\n\n\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\tposition.active = true;\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\t// If the text doesn't exist at this position, create a new entry\n\n\t\t// For the very first position we'll re-use the original element,\n\t\t// while for subsequent ones we'll clone it.\n\n\t\tposition = {\n\t\t\tactive: true,\n\t\t\trendered: false,\n\t\t\telement: positions.length ? info.element.clone() : info.element,\n\t\t\tx: x,\n\t\t\ty: y\n\t\t};\n\n\t\tpositions.push(position);\n\n\t\t// Move the element to its final position within the container\n\n\t\tposition.element.css({\n\t\t\ttop: Math.round(y),\n\t\t\tleft: Math.round(x),\n\t\t\t'text-align': halign\t// In case the text wraps\n\t\t});\n\t};\n\n\t// Removes one or more text strings from the canvas text overlay.\n\t//\n\t// If no parameters are given, all text within the layer is removed.\n\t//\n\t// Note that the text is not immediately removed; it is simply marked as\n\t// inactive, which will result in its removal on the next render pass.\n\t// This avoids the performance penalty for 'clear and redraw' behavior,\n\t// where we potentially get rid of all text on a layer, but will likely\n\t// add back most or all of it later, as when redrawing axes, for example.\n\t//\n\t// @param {string} layer A string of space-separated CSS classes uniquely\n\t//     identifying the layer containing this text.\n\t// @param {number=} x X coordinate of the text.\n\t// @param {number=} y Y coordinate of the text.\n\t// @param {string=} text Text string to remove.\n\t// @param {(string|object)=} font Either a string of space-separated CSS\n\t//     classes or a font-spec object, defining the text's font and style.\n\t// @param {number=} angle Angle at which the text is rotated, in degrees.\n\t//     Angle is currently unused, it will be implemented in the future.\n\n\tCanvas.prototype.removeText = function(layer, x, y, text, font, angle) {\n\t\tif (text == null) {\n\t\t\tvar layerCache = this._textCache[layer];\n\t\t\tif (layerCache != null) {\n\t\t\t\tfor (var styleKey in layerCache) {\n\t\t\t\t\tif (hasOwnProperty.call(layerCache, styleKey)) {\n\t\t\t\t\t\tvar styleCache = layerCache[styleKey];\n\t\t\t\t\t\tfor (var key in styleCache) {\n\t\t\t\t\t\t\tif (hasOwnProperty.call(styleCache, key)) {\n\t\t\t\t\t\t\t\tvar positions = styleCache[key].positions;\n\t\t\t\t\t\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\t\t\t\t\t\tposition.active = false;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tvar positions = this.getTextInfo(layer, text, font, angle).positions;\n\t\t\tfor (var i = 0, position; position = positions[i]; i++) {\n\t\t\t\tif (position.x == x && position.y == y) {\n\t\t\t\t\tposition.active = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\t///////////////////////////////////////////////////////////////////////////\n\t// The top-level container for the entire plot.\n\n    function Plot(placeholder, data_, options_, plugins) {\n        // data is on the form:\n        //   [ series1, series2 ... ]\n        // where series is either just the data as [ [x1, y1], [x2, y2], ... ]\n        // or { data: [ [x1, y1], [x2, y2], ... ], label: \"some label\", ... }\n\n        var series = [],\n            options = {\n                // the color theme used for graphs\n                colors: [\"#edc240\", \"#afd8f8\", \"#cb4b4b\", \"#4da74d\", \"#9440ed\"],\n                legend: {\n                    show: true,\n                    noColumns: 1, // number of colums in legend table\n                    labelFormatter: null, // fn: string -> string\n                    labelBoxBorderColor: \"#ccc\", // border color for the little label boxes\n                    container: null, // container (as jQuery object) to put legend in, null means default on top of graph\n                    position: \"ne\", // position of default legend container within plot\n                    margin: 5, // distance from grid edge to default legend container within plot\n                    backgroundColor: null, // null means auto-detect\n                    backgroundOpacity: 0.85, // set to 0 to avoid background\n                    sorted: null    // default to no legend sorting\n                },\n                xaxis: {\n                    show: null, // null = auto-detect, true = always, false = never\n                    position: \"bottom\", // or \"top\"\n                    mode: null, // null or \"time\"\n                    font: null, // null (derived from CSS in placeholder) or object like { size: 11, lineHeight: 13, style: \"italic\", weight: \"bold\", family: \"sans-serif\", variant: \"small-caps\" }\n                    color: null, // base color, labels, ticks\n                    tickColor: null, // possibly different color of ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    transform: null, // null or f: number -> number to transform axis\n                    inverseTransform: null, // if transform is set, this should be the inverse function\n                    min: null, // min. value to show, null means set automatically\n                    max: null, // max. value to show, null means set automatically\n                    autoscaleMargin: null, // margin in % to add if auto-setting min/max\n                    ticks: null, // either [1, 3] or [[1, \"a\"], 3] or (fn: axis info -> ticks) or app. number of ticks for auto-ticks\n                    tickFormatter: null, // fn: number -> string\n                    labelWidth: null, // size of tick labels in pixels\n                    labelHeight: null,\n                    reserveSpace: null, // whether to reserve space even if axis isn't shown\n                    tickLength: null, // size in pixels of ticks, or \"full\" for whole line\n                    alignTicksWithAxis: null, // axis number or null for no sync\n                    tickDecimals: null, // no. of decimals, null means auto\n                    tickSize: null, // number or [number, \"unit\"]\n                    minTickSize: null // number or [number, \"unit\"]\n                },\n                yaxis: {\n                    autoscaleMargin: 0.02,\n                    position: \"left\" // or \"right\"\n                },\n                xaxes: [],\n                yaxes: [],\n                series: {\n                    points: {\n                        show: false,\n                        radius: 3,\n                        lineWidth: 2, // in pixels\n                        fill: true,\n                        fillColor: \"#ffffff\",\n                        symbol: \"circle\" // or callback\n                    },\n                    lines: {\n                        // we don't put in show: false so we can see\n                        // whether lines were actively disabled\n                        lineWidth: 2, // in pixels\n                        fill: false,\n                        fillColor: null,\n                        steps: false\n                        // Omit 'zero', so we can later default its value to\n                        // match that of the 'fill' option.\n                    },\n                    bars: {\n                        show: false,\n                        lineWidth: 2, // in pixels\n                        barWidth: 1, // in units of the x axis\n                        fill: true,\n                        fillColor: null,\n                        align: \"left\", // \"left\", \"right\", or \"center\"\n                        horizontal: false,\n                        zero: true\n                    },\n                    shadowSize: 3,\n                    highlightColor: null\n                },\n                grid: {\n                    show: true,\n                    aboveData: false,\n                    color: \"#545454\", // primary color used for outline and labels\n                    backgroundColor: null, // null for transparent, else color\n                    borderColor: null, // set if different from the grid color\n                    tickColor: null, // color for the ticks, e.g. \"rgba(0,0,0,0.15)\"\n                    margin: 0, // distance from the canvas edge to the grid\n                    labelMargin: 5, // in pixels\n                    axisMargin: 8, // in pixels\n                    borderWidth: 2, // in pixels\n                    minBorderMargin: null, // in pixels, null means taken from points radius\n                    markings: null, // array of ranges or fn: axes -> array of ranges\n                    markingsColor: \"#f4f4f4\",\n                    markingsLineWidth: 2,\n                    // interactive stuff\n                    clickable: false,\n                    hoverable: false,\n                    autoHighlight: true, // highlight in case mouse is near\n                    mouseActiveRadius: 10 // how far the mouse can be away to activate an item\n                },\n                interaction: {\n                    redrawOverlayInterval: 1000/60 // time between updates, -1 means in same flow\n                },\n                hooks: {}\n            },\n        surface = null,     // the canvas for the plot itself\n        overlay = null,     // canvas for interactive stuff on top of plot\n        eventHolder = null, // jQuery object that events should be bound to\n        ctx = null, octx = null,\n        xaxes = [], yaxes = [],\n        plotOffset = { left: 0, right: 0, top: 0, bottom: 0},\n        plotWidth = 0, plotHeight = 0,\n        hooks = {\n            processOptions: [],\n            processRawData: [],\n            processDatapoints: [],\n            processOffset: [],\n            drawBackground: [],\n            drawSeries: [],\n            draw: [],\n            bindEvents: [],\n            drawOverlay: [],\n            shutdown: []\n        },\n        plot = this;\n\n        // public functions\n        plot.setData = setData;\n        plot.setupGrid = setupGrid;\n        plot.draw = draw;\n        plot.getPlaceholder = function() { return placeholder; };\n        plot.getCanvas = function() { return surface.element; };\n        plot.getPlotOffset = function() { return plotOffset; };\n        plot.width = function () { return plotWidth; };\n        plot.height = function () { return plotHeight; };\n        plot.offset = function () {\n            var o = eventHolder.offset();\n            o.left += plotOffset.left;\n            o.top += plotOffset.top;\n            return o;\n        };\n        plot.getData = function () { return series; };\n        plot.getAxes = function () {\n            var res = {}, i;\n            $.each(xaxes.concat(yaxes), function (_, axis) {\n                if (axis)\n                    res[axis.direction + (axis.n != 1 ? axis.n : \"\") + \"axis\"] = axis;\n            });\n            return res;\n        };\n        plot.getXAxes = function () { return xaxes; };\n        plot.getYAxes = function () { return yaxes; };\n        plot.c2p = canvasToAxisCoords;\n        plot.p2c = axisToCanvasCoords;\n        plot.getOptions = function () { return options; };\n        plot.highlight = highlight;\n        plot.unhighlight = unhighlight;\n        plot.triggerRedrawOverlay = triggerRedrawOverlay;\n        plot.pointOffset = function(point) {\n            return {\n                left: parseInt(xaxes[axisNumber(point, \"x\") - 1].p2c(+point.x) + plotOffset.left, 10),\n                top: parseInt(yaxes[axisNumber(point, \"y\") - 1].p2c(+point.y) + plotOffset.top, 10)\n            };\n        };\n        plot.shutdown = shutdown;\n        plot.destroy = function () {\n            shutdown();\n            placeholder.removeData(\"plot\").empty();\n\n            series = [];\n            options = null;\n            surface = null;\n            overlay = null;\n            eventHolder = null;\n            ctx = null;\n            octx = null;\n            xaxes = [];\n            yaxes = [];\n            hooks = null;\n            highlights = [];\n            plot = null;\n        };\n        plot.resize = function () {\n        \tvar width = placeholder.width(),\n        \t\theight = placeholder.height();\n            surface.resize(width, height);\n            overlay.resize(width, height);\n        };\n\n        // public attributes\n        plot.hooks = hooks;\n\n        // initialize\n        initPlugins(plot);\n        parseOptions(options_);\n        setupCanvases();\n        setData(data_);\n        setupGrid();\n        draw();\n        bindEvents();\n\n\n        function executeHooks(hook, args) {\n            args = [plot].concat(args);\n            for (var i = 0; i < hook.length; ++i)\n                hook[i].apply(this, args);\n        }\n\n        function initPlugins() {\n\n            // References to key classes, allowing plugins to modify them\n\n            var classes = {\n                Canvas: Canvas\n            };\n\n            for (var i = 0; i < plugins.length; ++i) {\n                var p = plugins[i];\n                p.init(plot, classes);\n                if (p.options)\n                    $.extend(true, options, p.options);\n            }\n        }\n\n        function parseOptions(opts) {\n\n            $.extend(true, options, opts);\n\n            // $.extend merges arrays, rather than replacing them.  When less\n            // colors are provided than the size of the default palette, we\n            // end up with those colors plus the remaining defaults, which is\n            // not expected behavior; avoid it by replacing them here.\n\n            if (opts && opts.colors) {\n            \toptions.colors = opts.colors;\n            }\n\n            if (options.xaxis.color == null)\n                options.xaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n            if (options.yaxis.color == null)\n                options.yaxis.color = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\n            if (options.xaxis.tickColor == null) // grid.tickColor for back-compatibility\n                options.xaxis.tickColor = options.grid.tickColor || options.xaxis.color;\n            if (options.yaxis.tickColor == null) // grid.tickColor for back-compatibility\n                options.yaxis.tickColor = options.grid.tickColor || options.yaxis.color;\n\n            if (options.grid.borderColor == null)\n                options.grid.borderColor = options.grid.color;\n            if (options.grid.tickColor == null)\n                options.grid.tickColor = $.color.parse(options.grid.color).scale('a', 0.22).toString();\n\n            // Fill in defaults for axis options, including any unspecified\n            // font-spec fields, if a font-spec was provided.\n\n            // If no x/y axis options were provided, create one of each anyway,\n            // since the rest of the code assumes that they exist.\n\n            var i, axisOptions, axisCount,\n                fontSize = placeholder.css(\"font-size\"),\n                fontSizeDefault = fontSize ? +fontSize.replace(\"px\", \"\") : 13,\n                fontDefaults = {\n                    style: placeholder.css(\"font-style\"),\n                    size: Math.round(0.8 * fontSizeDefault),\n                    variant: placeholder.css(\"font-variant\"),\n                    weight: placeholder.css(\"font-weight\"),\n                    family: placeholder.css(\"font-family\")\n                };\n\n            axisCount = options.xaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n\n                axisOptions = options.xaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.xaxis, axisOptions);\n                options.xaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            axisCount = options.yaxes.length || 1;\n            for (i = 0; i < axisCount; ++i) {\n\n                axisOptions = options.yaxes[i];\n                if (axisOptions && !axisOptions.tickColor) {\n                    axisOptions.tickColor = axisOptions.color;\n                }\n\n                axisOptions = $.extend(true, {}, options.yaxis, axisOptions);\n                options.yaxes[i] = axisOptions;\n\n                if (axisOptions.font) {\n                    axisOptions.font = $.extend({}, fontDefaults, axisOptions.font);\n                    if (!axisOptions.font.color) {\n                        axisOptions.font.color = axisOptions.color;\n                    }\n                    if (!axisOptions.font.lineHeight) {\n                        axisOptions.font.lineHeight = Math.round(axisOptions.font.size * 1.15);\n                    }\n                }\n            }\n\n            // backwards compatibility, to be removed in future\n            if (options.xaxis.noTicks && options.xaxis.ticks == null)\n                options.xaxis.ticks = options.xaxis.noTicks;\n            if (options.yaxis.noTicks && options.yaxis.ticks == null)\n                options.yaxis.ticks = options.yaxis.noTicks;\n            if (options.x2axis) {\n                options.xaxes[1] = $.extend(true, {}, options.xaxis, options.x2axis);\n                options.xaxes[1].position = \"top\";\n                // Override the inherit to allow the axis to auto-scale\n                if (options.x2axis.min == null) {\n                    options.xaxes[1].min = null;\n                }\n                if (options.x2axis.max == null) {\n                    options.xaxes[1].max = null;\n                }\n            }\n            if (options.y2axis) {\n                options.yaxes[1] = $.extend(true, {}, options.yaxis, options.y2axis);\n                options.yaxes[1].position = \"right\";\n                // Override the inherit to allow the axis to auto-scale\n                if (options.y2axis.min == null) {\n                    options.yaxes[1].min = null;\n                }\n                if (options.y2axis.max == null) {\n                    options.yaxes[1].max = null;\n                }\n            }\n            if (options.grid.coloredAreas)\n                options.grid.markings = options.grid.coloredAreas;\n            if (options.grid.coloredAreasColor)\n                options.grid.markingsColor = options.grid.coloredAreasColor;\n            if (options.lines)\n                $.extend(true, options.series.lines, options.lines);\n            if (options.points)\n                $.extend(true, options.series.points, options.points);\n            if (options.bars)\n                $.extend(true, options.series.bars, options.bars);\n            if (options.shadowSize != null)\n                options.series.shadowSize = options.shadowSize;\n            if (options.highlightColor != null)\n                options.series.highlightColor = options.highlightColor;\n\n            // save options on axes for future reference\n            for (i = 0; i < options.xaxes.length; ++i)\n                getOrCreateAxis(xaxes, i + 1).options = options.xaxes[i];\n            for (i = 0; i < options.yaxes.length; ++i)\n                getOrCreateAxis(yaxes, i + 1).options = options.yaxes[i];\n\n            // add hooks from options\n            for (var n in hooks)\n                if (options.hooks[n] && options.hooks[n].length)\n                    hooks[n] = hooks[n].concat(options.hooks[n]);\n\n            executeHooks(hooks.processOptions, [options]);\n        }\n\n        function setData(d) {\n            series = parseData(d);\n            fillInSeriesOptions();\n            processData();\n        }\n\n        function parseData(d) {\n            var res = [];\n            for (var i = 0; i < d.length; ++i) {\n                var s = $.extend(true, {}, options.series);\n\n                if (d[i].data != null) {\n                    s.data = d[i].data; // move the data instead of deep-copy\n                    delete d[i].data;\n\n                    $.extend(true, s, d[i]);\n\n                    d[i].data = s.data;\n                }\n                else\n                    s.data = d[i];\n                res.push(s);\n            }\n\n            return res;\n        }\n\n        function axisNumber(obj, coord) {\n            var a = obj[coord + \"axis\"];\n            if (typeof a == \"object\") // if we got a real axis, extract number\n                a = a.n;\n            if (typeof a != \"number\")\n                a = 1; // default to first axis\n            return a;\n        }\n\n        function allAxes() {\n            // return flat array without annoying null entries\n            return $.grep(xaxes.concat(yaxes), function (a) { return a; });\n        }\n\n        function canvasToAxisCoords(pos) {\n            // return an object with x/y corresponding to all used axes\n            var res = {}, i, axis;\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used)\n                    res[\"x\" + axis.n] = axis.c2p(pos.left);\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used)\n                    res[\"y\" + axis.n] = axis.c2p(pos.top);\n            }\n\n            if (res.x1 !== undefined)\n                res.x = res.x1;\n            if (res.y1 !== undefined)\n                res.y = res.y1;\n\n            return res;\n        }\n\n        function axisToCanvasCoords(pos) {\n            // get canvas coords from the first pair of x/y found in pos\n            var res = {}, i, axis, key;\n\n            for (i = 0; i < xaxes.length; ++i) {\n                axis = xaxes[i];\n                if (axis && axis.used) {\n                    key = \"x\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"x\";\n\n                    if (pos[key] != null) {\n                        res.left = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            for (i = 0; i < yaxes.length; ++i) {\n                axis = yaxes[i];\n                if (axis && axis.used) {\n                    key = \"y\" + axis.n;\n                    if (pos[key] == null && axis.n == 1)\n                        key = \"y\";\n\n                    if (pos[key] != null) {\n                        res.top = axis.p2c(pos[key]);\n                        break;\n                    }\n                }\n            }\n\n            return res;\n        }\n\n        function getOrCreateAxis(axes, number) {\n            if (!axes[number - 1])\n                axes[number - 1] = {\n                    n: number, // save the number for future reference\n                    direction: axes == xaxes ? \"x\" : \"y\",\n                    options: $.extend(true, {}, axes == xaxes ? options.xaxis : options.yaxis)\n                };\n\n            return axes[number - 1];\n        }\n\n        function fillInSeriesOptions() {\n\n            var neededColors = series.length, maxIndex = -1, i;\n\n            // Subtract the number of series that already have fixed colors or\n            // color indexes from the number that we still need to generate.\n\n            for (i = 0; i < series.length; ++i) {\n                var sc = series[i].color;\n                if (sc != null) {\n                    neededColors--;\n                    if (typeof sc == \"number\" && sc > maxIndex) {\n                        maxIndex = sc;\n                    }\n                }\n            }\n\n            // If any of the series have fixed color indexes, then we need to\n            // generate at least as many colors as the highest index.\n\n            if (neededColors <= maxIndex) {\n                neededColors = maxIndex + 1;\n            }\n\n            // Generate all the colors, using first the option colors and then\n            // variations on those colors once they're exhausted.\n\n            var c, colors = [], colorPool = options.colors,\n                colorPoolSize = colorPool.length, variation = 0;\n\n            for (i = 0; i < neededColors; i++) {\n\n                c = $.color.parse(colorPool[i % colorPoolSize] || \"#666\");\n\n                // Each time we exhaust the colors in the pool we adjust\n                // a scaling factor used to produce more variations on\n                // those colors. The factor alternates negative/positive\n                // to produce lighter/darker colors.\n\n                // Reset the variation after every few cycles, or else\n                // it will end up producing only white or black colors.\n\n                if (i % colorPoolSize == 0 && i) {\n                    if (variation >= 0) {\n                        if (variation < 0.5) {\n                            variation = -variation - 0.2;\n                        } else variation = 0;\n                    } else variation = -variation;\n                }\n\n                colors[i] = c.scale('rgb', 1 + variation);\n            }\n\n            // Finalize the series options, filling in their colors\n\n            var colori = 0, s;\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                // assign colors\n                if (s.color == null) {\n                    s.color = colors[colori].toString();\n                    ++colori;\n                }\n                else if (typeof s.color == \"number\")\n                    s.color = colors[s.color].toString();\n\n                // turn on lines automatically in case nothing is set\n                if (s.lines.show == null) {\n                    var v, show = true;\n                    for (v in s)\n                        if (s[v] && s[v].show) {\n                            show = false;\n                            break;\n                        }\n                    if (show)\n                        s.lines.show = true;\n                }\n\n                // If nothing was provided for lines.zero, default it to match\n                // lines.fill, since areas by default should extend to zero.\n\n                if (s.lines.zero == null) {\n                    s.lines.zero = !!s.lines.fill;\n                }\n\n                // setup axes\n                s.xaxis = getOrCreateAxis(xaxes, axisNumber(s, \"x\"));\n                s.yaxis = getOrCreateAxis(yaxes, axisNumber(s, \"y\"));\n            }\n        }\n\n        function processData() {\n            var topSentry = Number.POSITIVE_INFINITY,\n                bottomSentry = Number.NEGATIVE_INFINITY,\n                fakeInfinity = Number.MAX_VALUE,\n                i, j, k, m, length,\n                s, points, ps, x, y, axis, val, f, p,\n                data, format;\n\n            function updateAxis(axis, min, max) {\n                if (min < axis.datamin && min != -fakeInfinity)\n                    axis.datamin = min;\n                if (max > axis.datamax && max != fakeInfinity)\n                    axis.datamax = max;\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                // init axis\n                axis.datamin = topSentry;\n                axis.datamax = bottomSentry;\n                axis.used = false;\n            });\n\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                s.datapoints = { points: [] };\n\n                executeHooks(hooks.processRawData, [ s, s.data, s.datapoints ]);\n            }\n\n            // first pass: clean and copy data\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                data = s.data;\n                format = s.datapoints.format;\n\n                if (!format) {\n                    format = [];\n                    // find out how to copy\n                    format.push({ x: true, number: true, required: true });\n                    format.push({ y: true, number: true, required: true });\n\n                    if (s.bars.show || (s.lines.show && s.lines.fill)) {\n                        var autoscale = !!((s.bars.show && s.bars.zero) || (s.lines.show && s.lines.zero));\n                        format.push({ y: true, number: true, required: false, defaultValue: 0, autoscale: autoscale });\n                        if (s.bars.horizontal) {\n                            delete format[format.length - 1].y;\n                            format[format.length - 1].x = true;\n                        }\n                    }\n\n                    s.datapoints.format = format;\n                }\n\n                if (s.datapoints.pointsize != null)\n                    continue; // already filled in\n\n                s.datapoints.pointsize = format.length;\n\n                ps = s.datapoints.pointsize;\n                points = s.datapoints.points;\n\n                var insertSteps = s.lines.show && s.lines.steps;\n                s.xaxis.used = s.yaxis.used = true;\n\n                for (j = k = 0; j < data.length; ++j, k += ps) {\n                    p = data[j];\n\n                    var nullify = p == null;\n                    if (!nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = p[m];\n                            f = format[m];\n\n                            if (f) {\n                                if (f.number && val != null) {\n                                    val = +val; // convert to number\n                                    if (isNaN(val))\n                                        val = null;\n                                    else if (val == Infinity)\n                                        val = fakeInfinity;\n                                    else if (val == -Infinity)\n                                        val = -fakeInfinity;\n                                }\n\n                                if (val == null) {\n                                    if (f.required)\n                                        nullify = true;\n\n                                    if (f.defaultValue != null)\n                                        val = f.defaultValue;\n                                }\n                            }\n\n                            points[k + m] = val;\n                        }\n                    }\n\n                    if (nullify) {\n                        for (m = 0; m < ps; ++m) {\n                            val = points[k + m];\n                            if (val != null) {\n                                f = format[m];\n                                // extract min/max info\n                                if (f.autoscale !== false) {\n                                    if (f.x) {\n                                        updateAxis(s.xaxis, val, val);\n                                    }\n                                    if (f.y) {\n                                        updateAxis(s.yaxis, val, val);\n                                    }\n                                }\n                            }\n                            points[k + m] = null;\n                        }\n                    }\n                    else {\n                        // a little bit of line specific stuff that\n                        // perhaps shouldn't be here, but lacking\n                        // better means...\n                        if (insertSteps && k > 0\n                            && points[k - ps] != null\n                            && points[k - ps] != points[k]\n                            && points[k - ps + 1] != points[k + 1]) {\n                            // copy the point to make room for a middle point\n                            for (m = 0; m < ps; ++m)\n                                points[k + ps + m] = points[k + m];\n\n                            // middle point has same y\n                            points[k + 1] = points[k - ps + 1];\n\n                            // we've added a point, better reflect that\n                            k += ps;\n                        }\n                    }\n                }\n            }\n\n            // give the hooks a chance to run\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n\n                executeHooks(hooks.processDatapoints, [ s, s.datapoints]);\n            }\n\n            // second pass: find datamax/datamin for auto-scaling\n            for (i = 0; i < series.length; ++i) {\n                s = series[i];\n                points = s.datapoints.points;\n                ps = s.datapoints.pointsize;\n                format = s.datapoints.format;\n\n                var xmin = topSentry, ymin = topSentry,\n                    xmax = bottomSentry, ymax = bottomSentry;\n\n                for (j = 0; j < points.length; j += ps) {\n                    if (points[j] == null)\n                        continue;\n\n                    for (m = 0; m < ps; ++m) {\n                        val = points[j + m];\n                        f = format[m];\n                        if (!f || f.autoscale === false || val == fakeInfinity || val == -fakeInfinity)\n                            continue;\n\n                        if (f.x) {\n                            if (val < xmin)\n                                xmin = val;\n                            if (val > xmax)\n                                xmax = val;\n                        }\n                        if (f.y) {\n                            if (val < ymin)\n                                ymin = val;\n                            if (val > ymax)\n                                ymax = val;\n                        }\n                    }\n                }\n\n                if (s.bars.show) {\n                    // make sure we got room for the bar on the dancing floor\n                    var delta;\n\n                    switch (s.bars.align) {\n                        case \"left\":\n                            delta = 0;\n                            break;\n                        case \"right\":\n                            delta = -s.bars.barWidth;\n                            break;\n                        default:\n                            delta = -s.bars.barWidth / 2;\n                    }\n\n                    if (s.bars.horizontal) {\n                        ymin += delta;\n                        ymax += delta + s.bars.barWidth;\n                    }\n                    else {\n                        xmin += delta;\n                        xmax += delta + s.bars.barWidth;\n                    }\n                }\n\n                updateAxis(s.xaxis, xmin, xmax);\n                updateAxis(s.yaxis, ymin, ymax);\n            }\n\n            $.each(allAxes(), function (_, axis) {\n                if (axis.datamin == topSentry)\n                    axis.datamin = null;\n                if (axis.datamax == bottomSentry)\n                    axis.datamax = null;\n            });\n        }\n\n        function setupCanvases() {\n\n            // Make sure the placeholder is clear of everything except canvases\n            // from a previous plot in this container that we'll try to re-use.\n\n            placeholder.css(\"padding\", 0) // padding messes up the positioning\n                .children().filter(function(){\n                    return !$(this).hasClass(\"flot-overlay\") && !$(this).hasClass('flot-base');\n                }).remove();\n\n            if (placeholder.css(\"position\") == 'static')\n                placeholder.css(\"position\", \"relative\"); // for positioning labels and overlay\n\n            surface = new Canvas(\"flot-base\", placeholder);\n            overlay = new Canvas(\"flot-overlay\", placeholder); // overlay canvas for interactive features\n\n            ctx = surface.context;\n            octx = overlay.context;\n\n            // define which element we're listening for events on\n            eventHolder = $(overlay.element).unbind();\n\n            // If we're re-using a plot object, shut down the old one\n\n            var existing = placeholder.data(\"plot\");\n\n            if (existing) {\n                existing.shutdown();\n                overlay.clear();\n            }\n\n            // save in case we get replotted\n            placeholder.data(\"plot\", plot);\n        }\n\n        function bindEvents() {\n            // bind events\n            if (options.grid.hoverable) {\n                eventHolder.mousemove(onMouseMove);\n\n                // Use bind, rather than .mouseleave, because we officially\n                // still support jQuery 1.2.6, which doesn't define a shortcut\n                // for mouseenter or mouseleave.  This was a bug/oversight that\n                // was fixed somewhere around 1.3.x.  We can return to using\n                // .mouseleave when we drop support for 1.2.6.\n\n                eventHolder.bind(\"mouseleave\", onMouseLeave);\n            }\n\n            if (options.grid.clickable)\n                eventHolder.click(onClick);\n\n            executeHooks(hooks.bindEvents, [eventHolder]);\n        }\n\n        function shutdown() {\n            if (redrawTimeout)\n                clearTimeout(redrawTimeout);\n\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n            eventHolder.unbind(\"mouseleave\", onMouseLeave);\n            eventHolder.unbind(\"click\", onClick);\n\n            executeHooks(hooks.shutdown, [eventHolder]);\n        }\n\n        function setTransformationHelpers(axis) {\n            // set helper functions on the axis, assumes plot area\n            // has been computed already\n\n            function identity(x) { return x; }\n\n            var s, m, t = axis.options.transform || identity,\n                it = axis.options.inverseTransform;\n\n            // precompute how much the axis is scaling a point\n            // in canvas space\n            if (axis.direction == \"x\") {\n                s = axis.scale = plotWidth / Math.abs(t(axis.max) - t(axis.min));\n                m = Math.min(t(axis.max), t(axis.min));\n            }\n            else {\n                s = axis.scale = plotHeight / Math.abs(t(axis.max) - t(axis.min));\n                s = -s;\n                m = Math.max(t(axis.max), t(axis.min));\n            }\n\n            // data point to canvas coordinate\n            if (t == identity) // slight optimization\n                axis.p2c = function (p) { return (p - m) * s; };\n            else\n                axis.p2c = function (p) { return (t(p) - m) * s; };\n            // canvas coordinate to data point\n            if (!it)\n                axis.c2p = function (c) { return m + c / s; };\n            else\n                axis.c2p = function (c) { return it(m + c / s); };\n        }\n\n        function measureTickLabels(axis) {\n\n            var opts = axis.options,\n                ticks = axis.ticks || [],\n                labelWidth = opts.labelWidth || 0,\n                labelHeight = opts.labelHeight || 0,\n                maxWidth = labelWidth || (axis.direction == \"x\" ? Math.floor(surface.width / (ticks.length || 1)) : null),\n                legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                font = opts.font || \"flot-tick-label tickLabel\";\n\n            for (var i = 0; i < ticks.length; ++i) {\n\n                var t = ticks[i];\n\n                if (!t.label)\n                    continue;\n\n                var info = surface.getTextInfo(layer, t.label, font, null, maxWidth);\n\n                labelWidth = Math.max(labelWidth, info.width);\n                labelHeight = Math.max(labelHeight, info.height);\n            }\n\n            axis.labelWidth = opts.labelWidth || labelWidth;\n            axis.labelHeight = opts.labelHeight || labelHeight;\n        }\n\n        function allocateAxisBoxFirstPhase(axis) {\n            // find the bounding box of the axis by looking at label\n            // widths/heights and ticks, make room by diminishing the\n            // plotOffset; this first phase only looks at one\n            // dimension per axis, the other dimension depends on the\n            // other axes so will have to wait\n\n            var lw = axis.labelWidth,\n                lh = axis.labelHeight,\n                pos = axis.options.position,\n                isXAxis = axis.direction === \"x\",\n                tickLength = axis.options.tickLength,\n                axisMargin = options.grid.axisMargin,\n                padding = options.grid.labelMargin,\n                innermost = true,\n                outermost = true,\n                first = true,\n                found = false;\n\n            // Determine the axis's position in its direction and on its side\n\n            $.each(isXAxis ? xaxes : yaxes, function(i, a) {\n                if (a && (a.show || a.reserveSpace)) {\n                    if (a === axis) {\n                        found = true;\n                    } else if (a.options.position === pos) {\n                        if (found) {\n                            outermost = false;\n                        } else {\n                            innermost = false;\n                        }\n                    }\n                    if (!found) {\n                        first = false;\n                    }\n                }\n            });\n\n            // The outermost axis on each side has no margin\n\n            if (outermost) {\n                axisMargin = 0;\n            }\n\n            // The ticks for the first axis in each direction stretch across\n\n            if (tickLength == null) {\n                tickLength = first ? \"full\" : 5;\n            }\n\n            if (!isNaN(+tickLength))\n                padding += +tickLength;\n\n            if (isXAxis) {\n                lh += padding;\n\n                if (pos == \"bottom\") {\n                    plotOffset.bottom += lh + axisMargin;\n                    axis.box = { top: surface.height - plotOffset.bottom, height: lh };\n                }\n                else {\n                    axis.box = { top: plotOffset.top + axisMargin, height: lh };\n                    plotOffset.top += lh + axisMargin;\n                }\n            }\n            else {\n                lw += padding;\n\n                if (pos == \"left\") {\n                    axis.box = { left: plotOffset.left + axisMargin, width: lw };\n                    plotOffset.left += lw + axisMargin;\n                }\n                else {\n                    plotOffset.right += lw + axisMargin;\n                    axis.box = { left: surface.width - plotOffset.right, width: lw };\n                }\n            }\n\n             // save for future reference\n            axis.position = pos;\n            axis.tickLength = tickLength;\n            axis.box.padding = padding;\n            axis.innermost = innermost;\n        }\n\n        function allocateAxisBoxSecondPhase(axis) {\n            // now that all axis boxes have been placed in one\n            // dimension, we can set the remaining dimension coordinates\n            if (axis.direction == \"x\") {\n                axis.box.left = plotOffset.left - axis.labelWidth / 2;\n                axis.box.width = surface.width - plotOffset.left - plotOffset.right + axis.labelWidth;\n            }\n            else {\n                axis.box.top = plotOffset.top - axis.labelHeight / 2;\n                axis.box.height = surface.height - plotOffset.bottom - plotOffset.top + axis.labelHeight;\n            }\n        }\n\n        function adjustLayoutForThingsStickingOut() {\n            // possibly adjust plot offset to ensure everything stays\n            // inside the canvas and isn't clipped off\n\n            var minMargin = options.grid.minBorderMargin,\n                axis, i;\n\n            // check stuff from the plot (FIXME: this should just read\n            // a value from the series, otherwise it's impossible to\n            // customize)\n            if (minMargin == null) {\n                minMargin = 0;\n                for (i = 0; i < series.length; ++i)\n                    minMargin = Math.max(minMargin, 2 * (series[i].points.radius + series[i].points.lineWidth/2));\n            }\n\n            var margins = {\n                left: minMargin,\n                right: minMargin,\n                top: minMargin,\n                bottom: minMargin\n            };\n\n            // check axis labels, note we don't check the actual\n            // labels but instead use the overall width/height to not\n            // jump as much around with replots\n            $.each(allAxes(), function (_, axis) {\n                if (axis.reserveSpace && axis.ticks && axis.ticks.length) {\n                    if (axis.direction === \"x\") {\n                        margins.left = Math.max(margins.left, axis.labelWidth / 2);\n                        margins.right = Math.max(margins.right, axis.labelWidth / 2);\n                    } else {\n                        margins.bottom = Math.max(margins.bottom, axis.labelHeight / 2);\n                        margins.top = Math.max(margins.top, axis.labelHeight / 2);\n                    }\n                }\n            });\n\n            plotOffset.left = Math.ceil(Math.max(margins.left, plotOffset.left));\n            plotOffset.right = Math.ceil(Math.max(margins.right, plotOffset.right));\n            plotOffset.top = Math.ceil(Math.max(margins.top, plotOffset.top));\n            plotOffset.bottom = Math.ceil(Math.max(margins.bottom, plotOffset.bottom));\n        }\n\n        function setupGrid() {\n            var i, axes = allAxes(), showGrid = options.grid.show;\n\n            // Initialize the plot's offset from the edge of the canvas\n\n            for (var a in plotOffset) {\n                var margin = options.grid.margin || 0;\n                plotOffset[a] = typeof margin == \"number\" ? margin : margin[a] || 0;\n            }\n\n            executeHooks(hooks.processOffset, [plotOffset]);\n\n            // If the grid is visible, add its border width to the offset\n\n            for (var a in plotOffset) {\n                if(typeof(options.grid.borderWidth) == \"object\") {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth[a] : 0;\n                }\n                else {\n                    plotOffset[a] += showGrid ? options.grid.borderWidth : 0;\n                }\n            }\n\n            $.each(axes, function (_, axis) {\n                var axisOpts = axis.options;\n                axis.show = axisOpts.show == null ? axis.used : axisOpts.show;\n                axis.reserveSpace = axisOpts.reserveSpace == null ? axis.show : axisOpts.reserveSpace;\n                setRange(axis);\n            });\n\n            if (showGrid) {\n\n                var allocatedAxes = $.grep(axes, function (axis) {\n                    return axis.show || axis.reserveSpace;\n                });\n\n                $.each(allocatedAxes, function (_, axis) {\n                    // make the ticks\n                    setupTickGeneration(axis);\n                    setTicks(axis);\n                    snapRangeToTicks(axis, axis.ticks);\n                    // find labelWidth/Height for axis\n                    measureTickLabels(axis);\n                });\n\n                // with all dimensions calculated, we can compute the\n                // axis bounding boxes, start from the outside\n                // (reverse order)\n                for (i = allocatedAxes.length - 1; i >= 0; --i)\n                    allocateAxisBoxFirstPhase(allocatedAxes[i]);\n\n                // make sure we've got enough space for things that\n                // might stick out\n                adjustLayoutForThingsStickingOut();\n\n                $.each(allocatedAxes, function (_, axis) {\n                    allocateAxisBoxSecondPhase(axis);\n                });\n            }\n\n            plotWidth = surface.width - plotOffset.left - plotOffset.right;\n            plotHeight = surface.height - plotOffset.bottom - plotOffset.top;\n\n            // now we got the proper plot dimensions, we can compute the scaling\n            $.each(axes, function (_, axis) {\n                setTransformationHelpers(axis);\n            });\n\n            if (showGrid) {\n                drawAxisLabels();\n            }\n\n            insertLegend();\n        }\n\n        function setRange(axis) {\n            var opts = axis.options,\n                min = +(opts.min != null ? opts.min : axis.datamin),\n                max = +(opts.max != null ? opts.max : axis.datamax),\n                delta = max - min;\n\n            if (delta == 0.0) {\n                // degenerate case\n                var widen = max == 0 ? 1 : 0.01;\n\n                if (opts.min == null)\n                    min -= widen;\n                // always widen max if we couldn't widen min to ensure we\n                // don't fall into min == max which doesn't work\n                if (opts.max == null || opts.min != null)\n                    max += widen;\n            }\n            else {\n                // consider autoscaling\n                var margin = opts.autoscaleMargin;\n                if (margin != null) {\n                    if (opts.min == null) {\n                        min -= delta * margin;\n                        // make sure we don't go below zero if all values\n                        // are positive\n                        if (min < 0 && axis.datamin != null && axis.datamin >= 0)\n                            min = 0;\n                    }\n                    if (opts.max == null) {\n                        max += delta * margin;\n                        if (max > 0 && axis.datamax != null && axis.datamax <= 0)\n                            max = 0;\n                    }\n                }\n            }\n            axis.min = min;\n            axis.max = max;\n        }\n\n        function setupTickGeneration(axis) {\n            var opts = axis.options;\n\n            // estimate number of ticks\n            var noTicks;\n            if (typeof opts.ticks == \"number\" && opts.ticks > 0)\n                noTicks = opts.ticks;\n            else\n                // heuristic based on the model a*sqrt(x) fitted to\n                // some data points that seemed reasonable\n                noTicks = 0.3 * Math.sqrt(axis.direction == \"x\" ? surface.width : surface.height);\n\n            var delta = (axis.max - axis.min) / noTicks,\n                dec = -Math.floor(Math.log(delta) / Math.LN10),\n                maxDec = opts.tickDecimals;\n\n            if (maxDec != null && dec > maxDec) {\n                dec = maxDec;\n            }\n\n            var magn = Math.pow(10, -dec),\n                norm = delta / magn, // norm is between 1.0 and 10.0\n                size;\n\n            if (norm < 1.5) {\n                size = 1;\n            } else if (norm < 3) {\n                size = 2;\n                // special case for 2.5, requires an extra decimal\n                if (norm > 2.25 && (maxDec == null || dec + 1 <= maxDec)) {\n                    size = 2.5;\n                    ++dec;\n                }\n            } else if (norm < 7.5) {\n                size = 5;\n            } else {\n                size = 10;\n            }\n\n            size *= magn;\n\n            if (opts.minTickSize != null && size < opts.minTickSize) {\n                size = opts.minTickSize;\n            }\n\n            axis.delta = delta;\n            axis.tickDecimals = Math.max(0, maxDec != null ? maxDec : dec);\n            axis.tickSize = opts.tickSize || size;\n\n            // Time mode was moved to a plug-in in 0.8, and since so many people use it\n            // we'll add an especially friendly reminder to make sure they included it.\n\n            if (opts.mode == \"time\" && !axis.tickGenerator) {\n                throw new Error(\"Time mode requires the flot.time plugin.\");\n            }\n\n            // Flot supports base-10 axes; any other mode else is handled by a plug-in,\n            // like flot.time.js.\n\n            if (!axis.tickGenerator) {\n\n                axis.tickGenerator = function (axis) {\n\n                    var ticks = [],\n                        start = floorInBase(axis.min, axis.tickSize),\n                        i = 0,\n                        v = Number.NaN,\n                        prev;\n\n                    do {\n                        prev = v;\n                        v = start + i * axis.tickSize;\n                        ticks.push(v);\n                        ++i;\n                    } while (v < axis.max && v != prev);\n                    return ticks;\n                };\n\n\t\t\t\taxis.tickFormatter = function (value, axis) {\n\n\t\t\t\t\tvar factor = axis.tickDecimals ? Math.pow(10, axis.tickDecimals) : 1;\n\t\t\t\t\tvar formatted = \"\" + Math.round(value * factor) / factor;\n\n\t\t\t\t\t// If tickDecimals was specified, ensure that we have exactly that\n\t\t\t\t\t// much precision; otherwise default to the value's own precision.\n\n\t\t\t\t\tif (axis.tickDecimals != null) {\n\t\t\t\t\t\tvar decimal = formatted.indexOf(\".\");\n\t\t\t\t\t\tvar precision = decimal == -1 ? 0 : formatted.length - decimal - 1;\n\t\t\t\t\t\tif (precision < axis.tickDecimals) {\n\t\t\t\t\t\t\treturn (precision ? formatted : formatted + \".\") + (\"\" + factor).substr(1, axis.tickDecimals - precision);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n                    return formatted;\n                };\n            }\n\n            if ($.isFunction(opts.tickFormatter))\n                axis.tickFormatter = function (v, axis) { return \"\" + opts.tickFormatter(v, axis); };\n\n            if (opts.alignTicksWithAxis != null) {\n                var otherAxis = (axis.direction == \"x\" ? xaxes : yaxes)[opts.alignTicksWithAxis - 1];\n                if (otherAxis && otherAxis.used && otherAxis != axis) {\n                    // consider snapping min/max to outermost nice ticks\n                    var niceTicks = axis.tickGenerator(axis);\n                    if (niceTicks.length > 0) {\n                        if (opts.min == null)\n                            axis.min = Math.min(axis.min, niceTicks[0]);\n                        if (opts.max == null && niceTicks.length > 1)\n                            axis.max = Math.max(axis.max, niceTicks[niceTicks.length - 1]);\n                    }\n\n                    axis.tickGenerator = function (axis) {\n                        // copy ticks, scaled to this axis\n                        var ticks = [], v, i;\n                        for (i = 0; i < otherAxis.ticks.length; ++i) {\n                            v = (otherAxis.ticks[i].v - otherAxis.min) / (otherAxis.max - otherAxis.min);\n                            v = axis.min + v * (axis.max - axis.min);\n                            ticks.push(v);\n                        }\n                        return ticks;\n                    };\n\n                    // we might need an extra decimal since forced\n                    // ticks don't necessarily fit naturally\n                    if (!axis.mode && opts.tickDecimals == null) {\n                        var extraDec = Math.max(0, -Math.floor(Math.log(axis.delta) / Math.LN10) + 1),\n                            ts = axis.tickGenerator(axis);\n\n                        // only proceed if the tick interval rounded\n                        // with an extra decimal doesn't give us a\n                        // zero at end\n                        if (!(ts.length > 1 && /\\..*0$/.test((ts[1] - ts[0]).toFixed(extraDec))))\n                            axis.tickDecimals = extraDec;\n                    }\n                }\n            }\n        }\n\n        function setTicks(axis) {\n            var oticks = axis.options.ticks, ticks = [];\n            if (oticks == null || (typeof oticks == \"number\" && oticks > 0))\n                ticks = axis.tickGenerator(axis);\n            else if (oticks) {\n                if ($.isFunction(oticks))\n                    // generate the ticks\n                    ticks = oticks(axis);\n                else\n                    ticks = oticks;\n            }\n\n            // clean up/labelify the supplied ticks, copy them over\n            var i, v;\n            axis.ticks = [];\n            for (i = 0; i < ticks.length; ++i) {\n                var label = null;\n                var t = ticks[i];\n                if (typeof t == \"object\") {\n                    v = +t[0];\n                    if (t.length > 1)\n                        label = t[1];\n                }\n                else\n                    v = +t;\n                if (label == null)\n                    label = axis.tickFormatter(v, axis);\n                if (!isNaN(v))\n                    axis.ticks.push({ v: v, label: label });\n            }\n        }\n\n        function snapRangeToTicks(axis, ticks) {\n            if (axis.options.autoscaleMargin && ticks.length > 0) {\n                // snap to ticks\n                if (axis.options.min == null)\n                    axis.min = Math.min(axis.min, ticks[0].v);\n                if (axis.options.max == null && ticks.length > 1)\n                    axis.max = Math.max(axis.max, ticks[ticks.length - 1].v);\n            }\n        }\n\n        function draw() {\n\n            surface.clear();\n\n            executeHooks(hooks.drawBackground, [ctx]);\n\n            var grid = options.grid;\n\n            // draw background, if any\n            if (grid.show && grid.backgroundColor)\n                drawBackground();\n\n            if (grid.show && !grid.aboveData) {\n                drawGrid();\n            }\n\n            for (var i = 0; i < series.length; ++i) {\n                executeHooks(hooks.drawSeries, [ctx, series[i]]);\n                drawSeries(series[i]);\n            }\n\n            executeHooks(hooks.draw, [ctx]);\n\n            if (grid.show && grid.aboveData) {\n                drawGrid();\n            }\n\n            surface.render();\n\n            // A draw implies that either the axes or data have changed, so we\n            // should probably update the overlay highlights as well.\n\n            triggerRedrawOverlay();\n        }\n\n        function extractRange(ranges, coord) {\n            var axis, from, to, key, axes = allAxes();\n\n            for (var i = 0; i < axes.length; ++i) {\n                axis = axes[i];\n                if (axis.direction == coord) {\n                    key = coord + axis.n + \"axis\";\n                    if (!ranges[key] && axis.n == 1)\n                        key = coord + \"axis\"; // support x1axis as xaxis\n                    if (ranges[key]) {\n                        from = ranges[key].from;\n                        to = ranges[key].to;\n                        break;\n                    }\n                }\n            }\n\n            // backwards-compat stuff - to be removed in future\n            if (!ranges[key]) {\n                axis = coord == \"x\" ? xaxes[0] : yaxes[0];\n                from = ranges[coord + \"1\"];\n                to = ranges[coord + \"2\"];\n            }\n\n            // auto-reverse as an added bonus\n            if (from != null && to != null && from > to) {\n                var tmp = from;\n                from = to;\n                to = tmp;\n            }\n\n            return { from: from, to: to, axis: axis };\n        }\n\n        function drawBackground() {\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            ctx.fillStyle = getColorOrGradient(options.grid.backgroundColor, plotHeight, 0, \"rgba(255, 255, 255, 0)\");\n            ctx.fillRect(0, 0, plotWidth, plotHeight);\n            ctx.restore();\n        }\n\n        function drawGrid() {\n            var i, axes, bw, bc;\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // draw markings\n            var markings = options.grid.markings;\n            if (markings) {\n                if ($.isFunction(markings)) {\n                    axes = plot.getAxes();\n                    // xmin etc. is backwards compatibility, to be\n                    // removed in the future\n                    axes.xmin = axes.xaxis.min;\n                    axes.xmax = axes.xaxis.max;\n                    axes.ymin = axes.yaxis.min;\n                    axes.ymax = axes.yaxis.max;\n\n                    markings = markings(axes);\n                }\n\n                for (i = 0; i < markings.length; ++i) {\n                    var m = markings[i],\n                        xrange = extractRange(m, \"x\"),\n                        yrange = extractRange(m, \"y\");\n\n                    // fill in missing\n                    if (xrange.from == null)\n                        xrange.from = xrange.axis.min;\n                    if (xrange.to == null)\n                        xrange.to = xrange.axis.max;\n                    if (yrange.from == null)\n                        yrange.from = yrange.axis.min;\n                    if (yrange.to == null)\n                        yrange.to = yrange.axis.max;\n\n                    // clip\n                    if (xrange.to < xrange.axis.min || xrange.from > xrange.axis.max ||\n                        yrange.to < yrange.axis.min || yrange.from > yrange.axis.max)\n                        continue;\n\n                    xrange.from = Math.max(xrange.from, xrange.axis.min);\n                    xrange.to = Math.min(xrange.to, xrange.axis.max);\n                    yrange.from = Math.max(yrange.from, yrange.axis.min);\n                    yrange.to = Math.min(yrange.to, yrange.axis.max);\n\n                    var xequal = xrange.from === xrange.to,\n                        yequal = yrange.from === yrange.to;\n\n                    if (xequal && yequal) {\n                        continue;\n                    }\n\n                    // then draw\n                    xrange.from = Math.floor(xrange.axis.p2c(xrange.from));\n                    xrange.to = Math.floor(xrange.axis.p2c(xrange.to));\n                    yrange.from = Math.floor(yrange.axis.p2c(yrange.from));\n                    yrange.to = Math.floor(yrange.axis.p2c(yrange.to));\n\n                    if (xequal || yequal) {\n                        var lineWidth = m.lineWidth || options.grid.markingsLineWidth,\n                            subPixel = lineWidth % 2 ? 0.5 : 0;\n                        ctx.beginPath();\n                        ctx.strokeStyle = m.color || options.grid.markingsColor;\n                        ctx.lineWidth = lineWidth;\n                        if (xequal) {\n                            ctx.moveTo(xrange.to + subPixel, yrange.from);\n                            ctx.lineTo(xrange.to + subPixel, yrange.to);\n                        } else {\n                            ctx.moveTo(xrange.from, yrange.to + subPixel);\n                            ctx.lineTo(xrange.to, yrange.to + subPixel);                            \n                        }\n                        ctx.stroke();\n                    } else {\n                        ctx.fillStyle = m.color || options.grid.markingsColor;\n                        ctx.fillRect(xrange.from, yrange.to,\n                                     xrange.to - xrange.from,\n                                     yrange.from - yrange.to);\n                    }\n                }\n            }\n\n            // draw the ticks\n            axes = allAxes();\n            bw = options.grid.borderWidth;\n\n            for (var j = 0; j < axes.length; ++j) {\n                var axis = axes[j], box = axis.box,\n                    t = axis.tickLength, x, y, xoff, yoff;\n                if (!axis.show || axis.ticks.length == 0)\n                    continue;\n\n                ctx.lineWidth = 1;\n\n                // find the edges\n                if (axis.direction == \"x\") {\n                    x = 0;\n                    if (t == \"full\")\n                        y = (axis.position == \"top\" ? 0 : plotHeight);\n                    else\n                        y = box.top - plotOffset.top + (axis.position == \"top\" ? box.height : 0);\n                }\n                else {\n                    y = 0;\n                    if (t == \"full\")\n                        x = (axis.position == \"left\" ? 0 : plotWidth);\n                    else\n                        x = box.left - plotOffset.left + (axis.position == \"left\" ? box.width : 0);\n                }\n\n                // draw tick bar\n                if (!axis.innermost) {\n                    ctx.strokeStyle = axis.options.color;\n                    ctx.beginPath();\n                    xoff = yoff = 0;\n                    if (axis.direction == \"x\")\n                        xoff = plotWidth + 1;\n                    else\n                        yoff = plotHeight + 1;\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\") {\n                            y = Math.floor(y) + 0.5;\n                        } else {\n                            x = Math.floor(x) + 0.5;\n                        }\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                    ctx.stroke();\n                }\n\n                // draw ticks\n\n                ctx.strokeStyle = axis.options.tickColor;\n\n                ctx.beginPath();\n                for (i = 0; i < axis.ticks.length; ++i) {\n                    var v = axis.ticks[i].v;\n\n                    xoff = yoff = 0;\n\n                    if (isNaN(v) || v < axis.min || v > axis.max\n                        // skip those lying on the axes if we got a border\n                        || (t == \"full\"\n                            && ((typeof bw == \"object\" && bw[axis.position] > 0) || bw > 0)\n                            && (v == axis.min || v == axis.max)))\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        x = axis.p2c(v);\n                        yoff = t == \"full\" ? -plotHeight : t;\n\n                        if (axis.position == \"top\")\n                            yoff = -yoff;\n                    }\n                    else {\n                        y = axis.p2c(v);\n                        xoff = t == \"full\" ? -plotWidth : t;\n\n                        if (axis.position == \"left\")\n                            xoff = -xoff;\n                    }\n\n                    if (ctx.lineWidth == 1) {\n                        if (axis.direction == \"x\")\n                            x = Math.floor(x) + 0.5;\n                        else\n                            y = Math.floor(y) + 0.5;\n                    }\n\n                    ctx.moveTo(x, y);\n                    ctx.lineTo(x + xoff, y + yoff);\n                }\n\n                ctx.stroke();\n            }\n\n\n            // draw border\n            if (bw) {\n                // If either borderWidth or borderColor is an object, then draw the border\n                // line by line instead of as one rectangle\n                bc = options.grid.borderColor;\n                if(typeof bw == \"object\" || typeof bc == \"object\") {\n                    if (typeof bw !== \"object\") {\n                        bw = {top: bw, right: bw, bottom: bw, left: bw};\n                    }\n                    if (typeof bc !== \"object\") {\n                        bc = {top: bc, right: bc, bottom: bc, left: bc};\n                    }\n\n                    if (bw.top > 0) {\n                        ctx.strokeStyle = bc.top;\n                        ctx.lineWidth = bw.top;\n                        ctx.beginPath();\n                        ctx.moveTo(0 - bw.left, 0 - bw.top/2);\n                        ctx.lineTo(plotWidth, 0 - bw.top/2);\n                        ctx.stroke();\n                    }\n\n                    if (bw.right > 0) {\n                        ctx.strokeStyle = bc.right;\n                        ctx.lineWidth = bw.right;\n                        ctx.beginPath();\n                        ctx.moveTo(plotWidth + bw.right / 2, 0 - bw.top);\n                        ctx.lineTo(plotWidth + bw.right / 2, plotHeight);\n                        ctx.stroke();\n                    }\n\n                    if (bw.bottom > 0) {\n                        ctx.strokeStyle = bc.bottom;\n                        ctx.lineWidth = bw.bottom;\n                        ctx.beginPath();\n                        ctx.moveTo(plotWidth + bw.right, plotHeight + bw.bottom / 2);\n                        ctx.lineTo(0, plotHeight + bw.bottom / 2);\n                        ctx.stroke();\n                    }\n\n                    if (bw.left > 0) {\n                        ctx.strokeStyle = bc.left;\n                        ctx.lineWidth = bw.left;\n                        ctx.beginPath();\n                        ctx.moveTo(0 - bw.left/2, plotHeight + bw.bottom);\n                        ctx.lineTo(0- bw.left/2, 0);\n                        ctx.stroke();\n                    }\n                }\n                else {\n                    ctx.lineWidth = bw;\n                    ctx.strokeStyle = options.grid.borderColor;\n                    ctx.strokeRect(-bw/2, -bw/2, plotWidth + bw, plotHeight + bw);\n                }\n            }\n\n            ctx.restore();\n        }\n\n        function drawAxisLabels() {\n\n            $.each(allAxes(), function (_, axis) {\n                var box = axis.box,\n                    legacyStyles = axis.direction + \"Axis \" + axis.direction + axis.n + \"Axis\",\n                    layer = \"flot-\" + axis.direction + \"-axis flot-\" + axis.direction + axis.n + \"-axis \" + legacyStyles,\n                    font = axis.options.font || \"flot-tick-label tickLabel\",\n                    tick, x, y, halign, valign;\n\n                // Remove text before checking for axis.show and ticks.length;\n                // otherwise plugins, like flot-tickrotor, that draw their own\n                // tick labels will end up with both theirs and the defaults.\n\n                surface.removeText(layer);\n\n                if (!axis.show || axis.ticks.length == 0)\n                    return;\n\n                for (var i = 0; i < axis.ticks.length; ++i) {\n\n                    tick = axis.ticks[i];\n                    if (!tick.label || tick.v < axis.min || tick.v > axis.max)\n                        continue;\n\n                    if (axis.direction == \"x\") {\n                        halign = \"center\";\n                        x = plotOffset.left + axis.p2c(tick.v);\n                        if (axis.position == \"bottom\") {\n                            y = box.top + box.padding;\n                        } else {\n                            y = box.top + box.height - box.padding;\n                            valign = \"bottom\";\n                        }\n                    } else {\n                        valign = \"middle\";\n                        y = plotOffset.top + axis.p2c(tick.v);\n                        if (axis.position == \"left\") {\n                            x = box.left + box.width - box.padding;\n                            halign = \"right\";\n                        } else {\n                            x = box.left + box.padding;\n                        }\n                    }\n\n                    surface.addText(layer, x, y, tick.label, font, null, null, halign, valign);\n                }\n            });\n        }\n\n        function drawSeries(series) {\n            if (series.lines.show)\n                drawSeriesLines(series);\n            if (series.bars.show)\n                drawSeriesBars(series);\n            if (series.points.show)\n                drawSeriesPoints(series);\n        }\n\n        function drawSeriesLines(series) {\n            function plotLine(datapoints, xoffset, yoffset, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    prevx = null, prevy = null;\n\n                ctx.beginPath();\n                for (var i = ps; i < points.length; i += ps) {\n                    var x1 = points[i - ps], y1 = points[i - ps + 1],\n                        x2 = points[i], y2 = points[i + 1];\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min) {\n                        if (y2 < axisy.min)\n                            continue;   // line segment is outside\n                        // compute new intersection point\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min) {\n                        if (y1 < axisy.min)\n                            continue;\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max) {\n                        if (y2 > axisy.max)\n                            continue;\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max) {\n                        if (y1 > axisy.max)\n                            continue;\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (x1 != prevx || y1 != prevy)\n                        ctx.moveTo(axisx.p2c(x1) + xoffset, axisy.p2c(y1) + yoffset);\n\n                    prevx = x2;\n                    prevy = y2;\n                    ctx.lineTo(axisx.p2c(x2) + xoffset, axisy.p2c(y2) + yoffset);\n                }\n                ctx.stroke();\n            }\n\n            function plotLineArea(datapoints, axisx, axisy) {\n                var points = datapoints.points,\n                    ps = datapoints.pointsize,\n                    bottom = Math.min(Math.max(0, axisy.min), axisy.max),\n                    i = 0, top, areaOpen = false,\n                    ypos = 1, segmentStart = 0, segmentEnd = 0;\n\n                // we process each segment in two turns, first forward\n                // direction to sketch out top, then once we hit the\n                // end we go backwards to sketch the bottom\n                while (true) {\n                    if (ps > 0 && i > points.length + ps)\n                        break;\n\n                    i += ps; // ps is negative if going backwards\n\n                    var x1 = points[i - ps],\n                        y1 = points[i - ps + ypos],\n                        x2 = points[i], y2 = points[i + ypos];\n\n                    if (areaOpen) {\n                        if (ps > 0 && x1 != null && x2 == null) {\n                            // at turning point\n                            segmentEnd = i;\n                            ps = -ps;\n                            ypos = 2;\n                            continue;\n                        }\n\n                        if (ps < 0 && i == segmentStart + ps) {\n                            // done with the reverse sweep\n                            ctx.fill();\n                            areaOpen = false;\n                            ps = -ps;\n                            ypos = 1;\n                            i = segmentStart = segmentEnd + ps;\n                            continue;\n                        }\n                    }\n\n                    if (x1 == null || x2 == null)\n                        continue;\n\n                    // clip x values\n\n                    // clip with xmin\n                    if (x1 <= x2 && x1 < axisx.min) {\n                        if (x2 < axisx.min)\n                            continue;\n                        y1 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.min;\n                    }\n                    else if (x2 <= x1 && x2 < axisx.min) {\n                        if (x1 < axisx.min)\n                            continue;\n                        y2 = (axisx.min - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.min;\n                    }\n\n                    // clip with xmax\n                    if (x1 >= x2 && x1 > axisx.max) {\n                        if (x2 > axisx.max)\n                            continue;\n                        y1 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x1 = axisx.max;\n                    }\n                    else if (x2 >= x1 && x2 > axisx.max) {\n                        if (x1 > axisx.max)\n                            continue;\n                        y2 = (axisx.max - x1) / (x2 - x1) * (y2 - y1) + y1;\n                        x2 = axisx.max;\n                    }\n\n                    if (!areaOpen) {\n                        // open area\n                        ctx.beginPath();\n                        ctx.moveTo(axisx.p2c(x1), axisy.p2c(bottom));\n                        areaOpen = true;\n                    }\n\n                    // now first check the case where both is outside\n                    if (y1 >= axisy.max && y2 >= axisy.max) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.max));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.max));\n                        continue;\n                    }\n                    else if (y1 <= axisy.min && y2 <= axisy.min) {\n                        ctx.lineTo(axisx.p2c(x1), axisy.p2c(axisy.min));\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(axisy.min));\n                        continue;\n                    }\n\n                    // else it's a bit more complicated, there might\n                    // be a flat maxed out rectangle first, then a\n                    // triangular cutout or reverse; to find these\n                    // keep track of the current x values\n                    var x1old = x1, x2old = x2;\n\n                    // clip the y values, without shortcutting, we\n                    // go through all cases in turn\n\n                    // clip with ymin\n                    if (y1 <= y2 && y1 < axisy.min && y2 >= axisy.min) {\n                        x1 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.min;\n                    }\n                    else if (y2 <= y1 && y2 < axisy.min && y1 >= axisy.min) {\n                        x2 = (axisy.min - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.min;\n                    }\n\n                    // clip with ymax\n                    if (y1 >= y2 && y1 > axisy.max && y2 <= axisy.max) {\n                        x1 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y1 = axisy.max;\n                    }\n                    else if (y2 >= y1 && y2 > axisy.max && y1 <= axisy.max) {\n                        x2 = (axisy.max - y1) / (y2 - y1) * (x2 - x1) + x1;\n                        y2 = axisy.max;\n                    }\n\n                    // if the x value was changed we got a rectangle\n                    // to fill\n                    if (x1 != x1old) {\n                        ctx.lineTo(axisx.p2c(x1old), axisy.p2c(y1));\n                        // it goes to (x1, y1), but we fill that below\n                    }\n\n                    // fill triangular section, this sometimes result\n                    // in redundant points if (x1, y1) hasn't changed\n                    // from previous line to, but we just ignore that\n                    ctx.lineTo(axisx.p2c(x1), axisy.p2c(y1));\n                    ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n\n                    // fill the other rectangle if it's there\n                    if (x2 != x2old) {\n                        ctx.lineTo(axisx.p2c(x2), axisy.p2c(y2));\n                        ctx.lineTo(axisx.p2c(x2old), axisy.p2c(y2));\n                    }\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n            ctx.lineJoin = \"round\";\n\n            var lw = series.lines.lineWidth,\n                sw = series.shadowSize;\n            // FIXME: consider another form of shadow when filling is turned on\n            if (lw > 0 && sw > 0) {\n                // draw shadow as a thick and thin line with transparency\n                ctx.lineWidth = sw;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                // position shadow at angle from the mid of line\n                var angle = Math.PI/18;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/2), Math.cos(angle) * (lw/2 + sw/2), series.xaxis, series.yaxis);\n                ctx.lineWidth = sw/2;\n                plotLine(series.datapoints, Math.sin(angle) * (lw/2 + sw/4), Math.cos(angle) * (lw/2 + sw/4), series.xaxis, series.yaxis);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            var fillStyle = getFillStyle(series.lines, series.color, 0, plotHeight);\n            if (fillStyle) {\n                ctx.fillStyle = fillStyle;\n                plotLineArea(series.datapoints, series.xaxis, series.yaxis);\n            }\n\n            if (lw > 0)\n                plotLine(series.datapoints, 0, 0, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function drawSeriesPoints(series) {\n            function plotPoints(datapoints, radius, fillStyle, offset, shadow, axisx, axisy, symbol) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    var x = points[i], y = points[i + 1];\n                    if (x == null || x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                        continue;\n\n                    ctx.beginPath();\n                    x = axisx.p2c(x);\n                    y = axisy.p2c(y) + offset;\n                    if (symbol == \"circle\")\n                        ctx.arc(x, y, radius, 0, shadow ? Math.PI : Math.PI * 2, false);\n                    else\n                        symbol(ctx, x, y, radius, shadow);\n                    ctx.closePath();\n\n                    if (fillStyle) {\n                        ctx.fillStyle = fillStyle;\n                        ctx.fill();\n                    }\n                    ctx.stroke();\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            var lw = series.points.lineWidth,\n                sw = series.shadowSize,\n                radius = series.points.radius,\n                symbol = series.points.symbol;\n\n            // If the user sets the line width to 0, we change it to a very \n            // small value. A line width of 0 seems to force the default of 1.\n            // Doing the conditional here allows the shadow setting to still be \n            // optional even with a lineWidth of 0.\n\n            if( lw == 0 )\n                lw = 0.0001;\n\n            if (lw > 0 && sw > 0) {\n                // draw shadow in two steps\n                var w = sw / 2;\n                ctx.lineWidth = w;\n                ctx.strokeStyle = \"rgba(0,0,0,0.1)\";\n                plotPoints(series.datapoints, radius, null, w + w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n\n                ctx.strokeStyle = \"rgba(0,0,0,0.2)\";\n                plotPoints(series.datapoints, radius, null, w/2, true,\n                           series.xaxis, series.yaxis, symbol);\n            }\n\n            ctx.lineWidth = lw;\n            ctx.strokeStyle = series.color;\n            plotPoints(series.datapoints, radius,\n                       getFillStyle(series.points, series.color), 0, false,\n                       series.xaxis, series.yaxis, symbol);\n            ctx.restore();\n        }\n\n        function drawBar(x, y, b, barLeft, barRight, fillStyleCallback, axisx, axisy, c, horizontal, lineWidth) {\n            var left, right, bottom, top,\n                drawLeft, drawRight, drawTop, drawBottom,\n                tmp;\n\n            // in horizontal mode, we start the bar from the left\n            // instead of from the bottom so it appears to be\n            // horizontal rather than vertical\n            if (horizontal) {\n                drawBottom = drawRight = drawTop = true;\n                drawLeft = false;\n                left = b;\n                right = x;\n                top = y + barLeft;\n                bottom = y + barRight;\n\n                // account for negative bars\n                if (right < left) {\n                    tmp = right;\n                    right = left;\n                    left = tmp;\n                    drawLeft = true;\n                    drawRight = false;\n                }\n            }\n            else {\n                drawLeft = drawRight = drawTop = true;\n                drawBottom = false;\n                left = x + barLeft;\n                right = x + barRight;\n                bottom = b;\n                top = y;\n\n                // account for negative bars\n                if (top < bottom) {\n                    tmp = top;\n                    top = bottom;\n                    bottom = tmp;\n                    drawBottom = true;\n                    drawTop = false;\n                }\n            }\n\n            // clip\n            if (right < axisx.min || left > axisx.max ||\n                top < axisy.min || bottom > axisy.max)\n                return;\n\n            if (left < axisx.min) {\n                left = axisx.min;\n                drawLeft = false;\n            }\n\n            if (right > axisx.max) {\n                right = axisx.max;\n                drawRight = false;\n            }\n\n            if (bottom < axisy.min) {\n                bottom = axisy.min;\n                drawBottom = false;\n            }\n\n            if (top > axisy.max) {\n                top = axisy.max;\n                drawTop = false;\n            }\n\n            left = axisx.p2c(left);\n            bottom = axisy.p2c(bottom);\n            right = axisx.p2c(right);\n            top = axisy.p2c(top);\n\n            // fill the bar\n            if (fillStyleCallback) {\n                c.fillStyle = fillStyleCallback(bottom, top);\n                c.fillRect(left, top, right - left, bottom - top)\n            }\n\n            // draw outline\n            if (lineWidth > 0 && (drawLeft || drawRight || drawTop || drawBottom)) {\n                c.beginPath();\n\n                // FIXME: inline moveTo is buggy with excanvas\n                c.moveTo(left, bottom);\n                if (drawLeft)\n                    c.lineTo(left, top);\n                else\n                    c.moveTo(left, top);\n                if (drawTop)\n                    c.lineTo(right, top);\n                else\n                    c.moveTo(right, top);\n                if (drawRight)\n                    c.lineTo(right, bottom);\n                else\n                    c.moveTo(right, bottom);\n                if (drawBottom)\n                    c.lineTo(left, bottom);\n                else\n                    c.moveTo(left, bottom);\n                c.stroke();\n            }\n        }\n\n        function drawSeriesBars(series) {\n            function plotBars(datapoints, barLeft, barRight, fillStyleCallback, axisx, axisy) {\n                var points = datapoints.points, ps = datapoints.pointsize;\n\n                for (var i = 0; i < points.length; i += ps) {\n                    if (points[i] == null)\n                        continue;\n                    drawBar(points[i], points[i + 1], points[i + 2], barLeft, barRight, fillStyleCallback, axisx, axisy, ctx, series.bars.horizontal, series.bars.lineWidth);\n                }\n            }\n\n            ctx.save();\n            ctx.translate(plotOffset.left, plotOffset.top);\n\n            // FIXME: figure out a way to add shadows (for instance along the right edge)\n            ctx.lineWidth = series.bars.lineWidth;\n            ctx.strokeStyle = series.color;\n\n            var barLeft;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -series.bars.barWidth;\n                    break;\n                default:\n                    barLeft = -series.bars.barWidth / 2;\n            }\n\n            var fillStyleCallback = series.bars.fill ? function (bottom, top) { return getFillStyle(series.bars, series.color, bottom, top); } : null;\n            plotBars(series.datapoints, barLeft, barLeft + series.bars.barWidth, fillStyleCallback, series.xaxis, series.yaxis);\n            ctx.restore();\n        }\n\n        function getFillStyle(filloptions, seriesColor, bottom, top) {\n            var fill = filloptions.fill;\n            if (!fill)\n                return null;\n\n            if (filloptions.fillColor)\n                return getColorOrGradient(filloptions.fillColor, bottom, top, seriesColor);\n\n            var c = $.color.parse(seriesColor);\n            c.a = typeof fill == \"number\" ? fill : 0.4;\n            c.normalize();\n            return c.toString();\n        }\n\n        function insertLegend() {\n\n            if (options.legend.container != null) {\n                $(options.legend.container).html(\"\");\n            } else {\n                placeholder.find(\".legend\").remove();\n            }\n\n            if (!options.legend.show) {\n                return;\n            }\n\n            var fragments = [], entries = [], rowStarted = false,\n                lf = options.legend.labelFormatter, s, label;\n\n            // Build a list of legend entries, with each having a label and a color\n\n            for (var i = 0; i < series.length; ++i) {\n                s = series[i];\n                if (s.label) {\n                    label = lf ? lf(s.label, s) : s.label;\n                    if (label) {\n                        entries.push({\n                            label: label,\n                            color: s.color\n                        });\n                    }\n                }\n            }\n\n            // Sort the legend using either the default or a custom comparator\n\n            if (options.legend.sorted) {\n                if ($.isFunction(options.legend.sorted)) {\n                    entries.sort(options.legend.sorted);\n                } else if (options.legend.sorted == \"reverse\") {\n                \tentries.reverse();\n                } else {\n                    var ascending = options.legend.sorted != \"descending\";\n                    entries.sort(function(a, b) {\n                        return a.label == b.label ? 0 : (\n                            (a.label < b.label) != ascending ? 1 : -1   // Logical XOR\n                        );\n                    });\n                }\n            }\n\n            // Generate markup for the list of entries, in their final order\n\n            for (var i = 0; i < entries.length; ++i) {\n\n                var entry = entries[i];\n\n                if (i % options.legend.noColumns == 0) {\n                    if (rowStarted)\n                        fragments.push('</tr>');\n                    fragments.push('<tr>');\n                    rowStarted = true;\n                }\n\n                fragments.push(\n                    '<td class=\"legendColorBox\"><div style=\"border:1px solid ' + options.legend.labelBoxBorderColor + ';padding:1px\"><div style=\"width:4px;height:0;border:5px solid ' + entry.color + ';overflow:hidden\"></div></div></td>' +\n                    '<td class=\"legendLabel\">' + entry.label + '</td>'\n                );\n            }\n\n            if (rowStarted)\n                fragments.push('</tr>');\n\n            if (fragments.length == 0)\n                return;\n\n            var table = '<table style=\"font-size:smaller;color:' + options.grid.color + '\">' + fragments.join(\"\") + '</table>';\n            if (options.legend.container != null)\n                $(options.legend.container).html(table);\n            else {\n                var pos = \"\",\n                    p = options.legend.position,\n                    m = options.legend.margin;\n                if (m[0] == null)\n                    m = [m, m];\n                if (p.charAt(0) == \"n\")\n                    pos += 'top:' + (m[1] + plotOffset.top) + 'px;';\n                else if (p.charAt(0) == \"s\")\n                    pos += 'bottom:' + (m[1] + plotOffset.bottom) + 'px;';\n                if (p.charAt(1) == \"e\")\n                    pos += 'right:' + (m[0] + plotOffset.right) + 'px;';\n                else if (p.charAt(1) == \"w\")\n                    pos += 'left:' + (m[0] + plotOffset.left) + 'px;';\n                var legend = $('<div class=\"legend\">' + table.replace('style=\"', 'style=\"position:absolute;' + pos +';') + '</div>').appendTo(placeholder);\n                if (options.legend.backgroundOpacity != 0.0) {\n                    // put in the transparent background\n                    // separately to avoid blended labels and\n                    // label boxes\n                    var c = options.legend.backgroundColor;\n                    if (c == null) {\n                        c = options.grid.backgroundColor;\n                        if (c && typeof c == \"string\")\n                            c = $.color.parse(c);\n                        else\n                            c = $.color.extract(legend, 'background-color');\n                        c.a = 1;\n                        c = c.toString();\n                    }\n                    var div = legend.children();\n                    $('<div style=\"position:absolute;width:' + div.width() + 'px;height:' + div.height() + 'px;' + pos +'background-color:' + c + ';\"> </div>').prependTo(legend).css('opacity', options.legend.backgroundOpacity);\n                }\n            }\n        }\n\n\n        // interactive features\n\n        var highlights = [],\n            redrawTimeout = null;\n\n        // returns the data item the mouse is over, or null if none is found\n        function findNearbyItem(mouseX, mouseY, seriesFilter) {\n            var maxDistance = options.grid.mouseActiveRadius,\n                smallestDistance = maxDistance * maxDistance + 1,\n                item = null, foundPoint = false, i, j, ps;\n\n            for (i = series.length - 1; i >= 0; --i) {\n                if (!seriesFilter(series[i]))\n                    continue;\n\n                var s = series[i],\n                    axisx = s.xaxis,\n                    axisy = s.yaxis,\n                    points = s.datapoints.points,\n                    mx = axisx.c2p(mouseX), // precompute some stuff to make the loop faster\n                    my = axisy.c2p(mouseY),\n                    maxx = maxDistance / axisx.scale,\n                    maxy = maxDistance / axisy.scale;\n\n                ps = s.datapoints.pointsize;\n                // with inverse transforms, we can't use the maxx/maxy\n                // optimization, sadly\n                if (axisx.options.inverseTransform)\n                    maxx = Number.MAX_VALUE;\n                if (axisy.options.inverseTransform)\n                    maxy = Number.MAX_VALUE;\n\n                if (s.lines.show || s.points.show) {\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1];\n                        if (x == null)\n                            continue;\n\n                        // For points and lines, the cursor must be within a\n                        // certain distance to the data point\n                        if (x - mx > maxx || x - mx < -maxx ||\n                            y - my > maxy || y - my < -maxy)\n                            continue;\n\n                        // We have to calculate distances in pixels, not in\n                        // data units, because the scales of the axes may be different\n                        var dx = Math.abs(axisx.p2c(x) - mouseX),\n                            dy = Math.abs(axisy.p2c(y) - mouseY),\n                            dist = dx * dx + dy * dy; // we save the sqrt\n\n                        // use <= to ensure last point takes precedence\n                        // (last generally means on top of)\n                        if (dist < smallestDistance) {\n                            smallestDistance = dist;\n                            item = [i, j / ps];\n                        }\n                    }\n                }\n\n                if (s.bars.show && !item) { // no other point can be nearby\n\n                    var barLeft, barRight;\n\n                    switch (s.bars.align) {\n                        case \"left\":\n                            barLeft = 0;\n                            break;\n                        case \"right\":\n                            barLeft = -s.bars.barWidth;\n                            break;\n                        default:\n                            barLeft = -s.bars.barWidth / 2;\n                    }\n\n                    barRight = barLeft + s.bars.barWidth;\n\n                    for (j = 0; j < points.length; j += ps) {\n                        var x = points[j], y = points[j + 1], b = points[j + 2];\n                        if (x == null)\n                            continue;\n\n                        // for a bar graph, the cursor must be inside the bar\n                        if (series[i].bars.horizontal ?\n                            (mx <= Math.max(b, x) && mx >= Math.min(b, x) &&\n                             my >= y + barLeft && my <= y + barRight) :\n                            (mx >= x + barLeft && mx <= x + barRight &&\n                             my >= Math.min(b, y) && my <= Math.max(b, y)))\n                                item = [i, j / ps];\n                    }\n                }\n            }\n\n            if (item) {\n                i = item[0];\n                j = item[1];\n                ps = series[i].datapoints.pointsize;\n\n                return { datapoint: series[i].datapoints.points.slice(j * ps, (j + 1) * ps),\n                         dataIndex: j,\n                         series: series[i],\n                         seriesIndex: i };\n            }\n\n            return null;\n        }\n\n        function onMouseMove(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return s[\"hoverable\"] != false; });\n        }\n\n        function onMouseLeave(e) {\n            if (options.grid.hoverable)\n                triggerClickHoverEvent(\"plothover\", e,\n                                       function (s) { return false; });\n        }\n\n        function onClick(e) {\n            triggerClickHoverEvent(\"plotclick\", e,\n                                   function (s) { return s[\"clickable\"] != false; });\n        }\n\n        // trigger click or hover event (they send the same parameters\n        // so we share their code)\n        function triggerClickHoverEvent(eventname, event, seriesFilter) {\n            var offset = eventHolder.offset(),\n                canvasX = event.pageX - offset.left - plotOffset.left,\n                canvasY = event.pageY - offset.top - plotOffset.top,\n            pos = canvasToAxisCoords({ left: canvasX, top: canvasY });\n\n            pos.pageX = event.pageX;\n            pos.pageY = event.pageY;\n\n            var item = findNearbyItem(canvasX, canvasY, seriesFilter);\n\n            if (item) {\n                // fill in mouse pos for any listeners out there\n                item.pageX = parseInt(item.series.xaxis.p2c(item.datapoint[0]) + offset.left + plotOffset.left, 10);\n                item.pageY = parseInt(item.series.yaxis.p2c(item.datapoint[1]) + offset.top + plotOffset.top, 10);\n            }\n\n            if (options.grid.autoHighlight) {\n                // clear auto-highlights\n                for (var i = 0; i < highlights.length; ++i) {\n                    var h = highlights[i];\n                    if (h.auto == eventname &&\n                        !(item && h.series == item.series &&\n                          h.point[0] == item.datapoint[0] &&\n                          h.point[1] == item.datapoint[1]))\n                        unhighlight(h.series, h.point);\n                }\n\n                if (item)\n                    highlight(item.series, item.datapoint, eventname);\n            }\n\n            placeholder.trigger(eventname, [ pos, item ]);\n        }\n\n        function triggerRedrawOverlay() {\n            var t = options.interaction.redrawOverlayInterval;\n            if (t == -1) {      // skip event queue\n                drawOverlay();\n                return;\n            }\n\n            if (!redrawTimeout)\n                redrawTimeout = setTimeout(drawOverlay, t);\n        }\n\n        function drawOverlay() {\n            redrawTimeout = null;\n\n            // draw highlights\n            octx.save();\n            overlay.clear();\n            octx.translate(plotOffset.left, plotOffset.top);\n\n            var i, hi;\n            for (i = 0; i < highlights.length; ++i) {\n                hi = highlights[i];\n\n                if (hi.series.bars.show)\n                    drawBarHighlight(hi.series, hi.point);\n                else\n                    drawPointHighlight(hi.series, hi.point);\n            }\n            octx.restore();\n\n            executeHooks(hooks.drawOverlay, [octx]);\n        }\n\n        function highlight(s, point, auto) {\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i == -1) {\n                highlights.push({ series: s, point: point, auto: auto });\n\n                triggerRedrawOverlay();\n            }\n            else if (!auto)\n                highlights[i].auto = false;\n        }\n\n        function unhighlight(s, point) {\n            if (s == null && point == null) {\n                highlights = [];\n                triggerRedrawOverlay();\n                return;\n            }\n\n            if (typeof s == \"number\")\n                s = series[s];\n\n            if (typeof point == \"number\") {\n                var ps = s.datapoints.pointsize;\n                point = s.datapoints.points.slice(ps * point, ps * (point + 1));\n            }\n\n            var i = indexOfHighlight(s, point);\n            if (i != -1) {\n                highlights.splice(i, 1);\n\n                triggerRedrawOverlay();\n            }\n        }\n\n        function indexOfHighlight(s, p) {\n            for (var i = 0; i < highlights.length; ++i) {\n                var h = highlights[i];\n                if (h.series == s && h.point[0] == p[0]\n                    && h.point[1] == p[1])\n                    return i;\n            }\n            return -1;\n        }\n\n        function drawPointHighlight(series, point) {\n            var x = point[0], y = point[1],\n                axisx = series.xaxis, axisy = series.yaxis,\n                highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString();\n\n            if (x < axisx.min || x > axisx.max || y < axisy.min || y > axisy.max)\n                return;\n\n            var pointRadius = series.points.radius + series.points.lineWidth / 2;\n            octx.lineWidth = pointRadius;\n            octx.strokeStyle = highlightColor;\n            var radius = 1.5 * pointRadius;\n            x = axisx.p2c(x);\n            y = axisy.p2c(y);\n\n            octx.beginPath();\n            if (series.points.symbol == \"circle\")\n                octx.arc(x, y, radius, 0, 2 * Math.PI, false);\n            else\n                series.points.symbol(octx, x, y, radius, false);\n            octx.closePath();\n            octx.stroke();\n        }\n\n        function drawBarHighlight(series, point) {\n            var highlightColor = (typeof series.highlightColor === \"string\") ? series.highlightColor : $.color.parse(series.color).scale('a', 0.5).toString(),\n                fillStyle = highlightColor,\n                barLeft;\n\n            switch (series.bars.align) {\n                case \"left\":\n                    barLeft = 0;\n                    break;\n                case \"right\":\n                    barLeft = -series.bars.barWidth;\n                    break;\n                default:\n                    barLeft = -series.bars.barWidth / 2;\n            }\n\n            octx.lineWidth = series.bars.lineWidth;\n            octx.strokeStyle = highlightColor;\n\n            drawBar(point[0], point[1], point[2] || 0, barLeft, barLeft + series.bars.barWidth,\n                    function () { return fillStyle; }, series.xaxis, series.yaxis, octx, series.bars.horizontal, series.bars.lineWidth);\n        }\n\n        function getColorOrGradient(spec, bottom, top, defaultColor) {\n            if (typeof spec == \"string\")\n                return spec;\n            else {\n                // assume this is a gradient spec; IE currently only\n                // supports a simple vertical gradient properly, so that's\n                // what we support too\n                var gradient = ctx.createLinearGradient(0, top, 0, bottom);\n\n                for (var i = 0, l = spec.colors.length; i < l; ++i) {\n                    var c = spec.colors[i];\n                    if (typeof c != \"string\") {\n                        var co = $.color.parse(defaultColor);\n                        if (c.brightness != null)\n                            co = co.scale('rgb', c.brightness);\n                        if (c.opacity != null)\n                            co.a *= c.opacity;\n                        c = co.toString();\n                    }\n                    gradient.addColorStop(i / (l - 1), c);\n                }\n\n                return gradient;\n            }\n        }\n    }\n\n    // Add the plot function to the top level of the jQuery object\n\n    $.plot = function(placeholder, data, options) {\n        //var t0 = new Date();\n        var plot = new Plot($(placeholder), data, options, $.plot.plugins);\n        //(window.console ? console.log : alert)(\"time used (msecs): \" + ((new Date()).getTime() - t0.getTime()));\n        return plot;\n    };\n\n    $.plot.version = \"0.8.3\";\n\n    $.plot.plugins = [];\n\n    // Also add the plot function as a chainable property\n\n    $.fn.plot = function(data, options) {\n        return this.each(function() {\n            $.plot(this, data, options);\n        });\n    };\n\n    // round to nearby lower multiple of base\n    function floorInBase(n, base) {\n        return base * Math.floor(n / base);\n    }\n\n})(jQuery);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/jquery-flot/jquery.flot.js\n// module id = 19\n// module chunks = 0","/* Flot plugin for selecting regions of a plot.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nThe plugin supports these options:\n\nselection: {\n\tmode: null or \"x\" or \"y\" or \"xy\",\n\tcolor: color,\n\tshape: \"round\" or \"miter\" or \"bevel\",\n\tminSize: number of pixels\n}\n\nSelection support is enabled by setting the mode to one of \"x\", \"y\" or \"xy\".\nIn \"x\" mode, the user will only be able to specify the x range, similarly for\n\"y\" mode. For \"xy\", the selection becomes a rectangle where both ranges can be\nspecified. \"color\" is color of the selection (if you need to change the color\nlater on, you can get to it with plot.getOptions().selection.color). \"shape\"\nis the shape of the corners of the selection.\n\n\"minSize\" is the minimum size a selection can be in pixels. This value can\nbe customized to determine the smallest size a selection can be and still\nhave the selection rectangle be displayed. When customizing this value, the\nfact that it refers to pixels, not axis units must be taken into account.\nThus, for example, if there is a bar graph in time mode with BarWidth set to 1\nminute, setting \"minSize\" to 1 will not make the minimum selection size 1\nminute, but rather 1 pixel. Note also that setting \"minSize\" to 0 will prevent\n\"plotunselected\" events from being fired when the user clicks the mouse without\ndragging.\n\nWhen selection support is enabled, a \"plotselected\" event will be emitted on\nthe DOM element you passed into the plot function. The event handler gets a\nparameter with the ranges selected on the axes, like this:\n\n\tplaceholder.bind( \"plotselected\", function( event, ranges ) {\n\t\talert(\"You selected \" + ranges.xaxis.from + \" to \" + ranges.xaxis.to)\n\t\t// similar for yaxis - with multiple axes, the extra ones are in\n\t\t// x2axis, x3axis, ...\n\t});\n\nThe \"plotselected\" event is only fired when the user has finished making the\nselection. A \"plotselecting\" event is fired during the process with the same\nparameters as the \"plotselected\" event, in case you want to know what's\nhappening while it's happening,\n\nA \"plotunselected\" event with no arguments is emitted when the user clicks the\nmouse to remove the selection. As stated above, setting \"minSize\" to 0 will\ndestroy this behavior.\n\nThe plugin allso adds the following methods to the plot object:\n\n- setSelection( ranges, preventEvent )\n\n  Set the selection rectangle. The passed in ranges is on the same form as\n  returned in the \"plotselected\" event. If the selection mode is \"x\", you\n  should put in either an xaxis range, if the mode is \"y\" you need to put in\n  an yaxis range and both xaxis and yaxis if the selection mode is \"xy\", like\n  this:\n\n\tsetSelection({ xaxis: { from: 0, to: 10 }, yaxis: { from: 40, to: 60 } });\n\n  setSelection will trigger the \"plotselected\" event when called. If you don't\n  want that to happen, e.g. if you're inside a \"plotselected\" handler, pass\n  true as the second parameter. If you are using multiple axes, you can\n  specify the ranges on any of those, e.g. as x2axis/x3axis/... instead of\n  xaxis, the plugin picks the first one it sees.\n\n- clearSelection( preventEvent )\n\n  Clear the selection rectangle. Pass in true to avoid getting a\n  \"plotunselected\" event.\n\n- getSelection()\n\n  Returns the current selection in the same format as the \"plotselected\"\n  event. If there's currently no selection, the function returns null.\n\n*/\n\n(function ($) {\n    function init(plot) {\n        var selection = {\n                first: { x: -1, y: -1}, second: { x: -1, y: -1},\n                show: false,\n                active: false\n            };\n\n        // FIXME: The drag handling implemented here should be\n        // abstracted out, there's some similar code from a library in\n        // the navigation plugin, this should be massaged a bit to fit\n        // the Flot cases here better and reused. Doing this would\n        // make this plugin much slimmer.\n        var savedhandlers = {};\n\n        var mouseUpHandler = null;\n        \n        function onMouseMove(e) {\n            if (selection.active) {\n                updateSelection(e);\n                \n                plot.getPlaceholder().trigger(\"plotselecting\", [ getSelection() ]);\n            }\n        }\n\n        function onMouseDown(e) {\n            if (e.which != 1)  // only accept left-click\n                return;\n            \n            // cancel out any text selections\n            document.body.focus();\n\n            // prevent text selection and drag in old-school browsers\n            if (document.onselectstart !== undefined && savedhandlers.onselectstart == null) {\n                savedhandlers.onselectstart = document.onselectstart;\n                document.onselectstart = function () { return false; };\n            }\n            if (document.ondrag !== undefined && savedhandlers.ondrag == null) {\n                savedhandlers.ondrag = document.ondrag;\n                document.ondrag = function () { return false; };\n            }\n\n            setSelectionPos(selection.first, e);\n\n            selection.active = true;\n\n            // this is a bit silly, but we have to use a closure to be\n            // able to whack the same handler again\n            mouseUpHandler = function (e) { onMouseUp(e); };\n            \n            $(document).one(\"mouseup\", mouseUpHandler);\n        }\n\n        function onMouseUp(e) {\n            mouseUpHandler = null;\n            \n            // revert drag stuff for old-school browsers\n            if (document.onselectstart !== undefined)\n                document.onselectstart = savedhandlers.onselectstart;\n            if (document.ondrag !== undefined)\n                document.ondrag = savedhandlers.ondrag;\n\n            // no more dragging\n            selection.active = false;\n            updateSelection(e);\n\n            if (selectionIsSane())\n                triggerSelectedEvent();\n            else {\n                // this counts as a clear\n                plot.getPlaceholder().trigger(\"plotunselected\", [ ]);\n                plot.getPlaceholder().trigger(\"plotselecting\", [ null ]);\n            }\n\n            return false;\n        }\n\n        function getSelection() {\n            if (!selectionIsSane())\n                return null;\n            \n            if (!selection.show) return null;\n\n            var r = {}, c1 = selection.first, c2 = selection.second;\n            $.each(plot.getAxes(), function (name, axis) {\n                if (axis.used) {\n                    var p1 = axis.c2p(c1[axis.direction]), p2 = axis.c2p(c2[axis.direction]); \n                    r[name] = { from: Math.min(p1, p2), to: Math.max(p1, p2) };\n                }\n            });\n            return r;\n        }\n\n        function triggerSelectedEvent() {\n            var r = getSelection();\n\n            plot.getPlaceholder().trigger(\"plotselected\", [ r ]);\n\n            // backwards-compat stuff, to be removed in future\n            if (r.xaxis && r.yaxis)\n                plot.getPlaceholder().trigger(\"selected\", [ { x1: r.xaxis.from, y1: r.yaxis.from, x2: r.xaxis.to, y2: r.yaxis.to } ]);\n        }\n\n        function clamp(min, value, max) {\n            return value < min ? min: (value > max ? max: value);\n        }\n\n        function setSelectionPos(pos, e) {\n            var o = plot.getOptions();\n            var offset = plot.getPlaceholder().offset();\n            var plotOffset = plot.getPlotOffset();\n            pos.x = clamp(0, e.pageX - offset.left - plotOffset.left, plot.width());\n            pos.y = clamp(0, e.pageY - offset.top - plotOffset.top, plot.height());\n\n            if (o.selection.mode == \"y\")\n                pos.x = pos == selection.first ? 0 : plot.width();\n\n            if (o.selection.mode == \"x\")\n                pos.y = pos == selection.first ? 0 : plot.height();\n        }\n\n        function updateSelection(pos) {\n            if (pos.pageX == null)\n                return;\n\n            setSelectionPos(selection.second, pos);\n            if (selectionIsSane()) {\n                selection.show = true;\n                plot.triggerRedrawOverlay();\n            }\n            else\n                clearSelection(true);\n        }\n\n        function clearSelection(preventEvent) {\n            if (selection.show) {\n                selection.show = false;\n                plot.triggerRedrawOverlay();\n                if (!preventEvent)\n                    plot.getPlaceholder().trigger(\"plotunselected\", [ ]);\n            }\n        }\n\n        // function taken from markings support in Flot\n        function extractRange(ranges, coord) {\n            var axis, from, to, key, axes = plot.getAxes();\n\n            for (var k in axes) {\n                axis = axes[k];\n                if (axis.direction == coord) {\n                    key = coord + axis.n + \"axis\";\n                    if (!ranges[key] && axis.n == 1)\n                        key = coord + \"axis\"; // support x1axis as xaxis\n                    if (ranges[key]) {\n                        from = ranges[key].from;\n                        to = ranges[key].to;\n                        break;\n                    }\n                }\n            }\n\n            // backwards-compat stuff - to be removed in future\n            if (!ranges[key]) {\n                axis = coord == \"x\" ? plot.getXAxes()[0] : plot.getYAxes()[0];\n                from = ranges[coord + \"1\"];\n                to = ranges[coord + \"2\"];\n            }\n\n            // auto-reverse as an added bonus\n            if (from != null && to != null && from > to) {\n                var tmp = from;\n                from = to;\n                to = tmp;\n            }\n            \n            return { from: from, to: to, axis: axis };\n        }\n        \n        function setSelection(ranges, preventEvent) {\n            var axis, range, o = plot.getOptions();\n\n            if (o.selection.mode == \"y\") {\n                selection.first.x = 0;\n                selection.second.x = plot.width();\n            }\n            else {\n                range = extractRange(ranges, \"x\");\n\n                selection.first.x = range.axis.p2c(range.from);\n                selection.second.x = range.axis.p2c(range.to);\n            }\n\n            if (o.selection.mode == \"x\") {\n                selection.first.y = 0;\n                selection.second.y = plot.height();\n            }\n            else {\n                range = extractRange(ranges, \"y\");\n\n                selection.first.y = range.axis.p2c(range.from);\n                selection.second.y = range.axis.p2c(range.to);\n            }\n\n            selection.show = true;\n            plot.triggerRedrawOverlay();\n            if (!preventEvent && selectionIsSane())\n                triggerSelectedEvent();\n        }\n\n        function selectionIsSane() {\n            var minSize = plot.getOptions().selection.minSize;\n            return Math.abs(selection.second.x - selection.first.x) >= minSize &&\n                Math.abs(selection.second.y - selection.first.y) >= minSize;\n        }\n\n        plot.clearSelection = clearSelection;\n        plot.setSelection = setSelection;\n        plot.getSelection = getSelection;\n\n        plot.hooks.bindEvents.push(function(plot, eventHolder) {\n            var o = plot.getOptions();\n            if (o.selection.mode != null) {\n                eventHolder.mousemove(onMouseMove);\n                eventHolder.mousedown(onMouseDown);\n            }\n        });\n\n\n        plot.hooks.drawOverlay.push(function (plot, ctx) {\n            // draw selection\n            if (selection.show && selectionIsSane()) {\n                var plotOffset = plot.getPlotOffset();\n                var o = plot.getOptions();\n\n                ctx.save();\n                ctx.translate(plotOffset.left, plotOffset.top);\n\n                var c = $.color.parse(o.selection.color);\n\n                ctx.strokeStyle = c.scale('a', 0.8).toString();\n                ctx.lineWidth = 1;\n                ctx.lineJoin = o.selection.shape;\n                ctx.fillStyle = c.scale('a', 0.4).toString();\n\n                var x = Math.min(selection.first.x, selection.second.x) + 0.5,\n                    y = Math.min(selection.first.y, selection.second.y) + 0.5,\n                    w = Math.abs(selection.second.x - selection.first.x) - 1,\n                    h = Math.abs(selection.second.y - selection.first.y) - 1;\n\n                ctx.fillRect(x, y, w, h);\n                ctx.strokeRect(x, y, w, h);\n\n                ctx.restore();\n            }\n        });\n        \n        plot.hooks.shutdown.push(function (plot, eventHolder) {\n            eventHolder.unbind(\"mousemove\", onMouseMove);\n            eventHolder.unbind(\"mousedown\", onMouseDown);\n            \n            if (mouseUpHandler)\n                $(document).unbind(\"mouseup\", mouseUpHandler);\n        });\n\n    }\n\n    $.plot.plugins.push({\n        init: init,\n        options: {\n            selection: {\n                mode: null, // one of null, \"x\", \"y\" or \"xy\"\n                color: \"#e8cfac\",\n                shape: \"round\", // one of \"round\", \"miter\", or \"bevel\"\n                minSize: 5 // minimum number of pixels\n            }\n        },\n        name: 'selection',\n        version: '1.1'\n    });\n})(jQuery);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/jquery-flot/jquery.flot.selection.js\n// module id = 20\n// module chunks = 0","/* Pretty handling of time axes.\n\nCopyright (c) 2007-2014 IOLA and Ole Laursen.\nLicensed under the MIT license.\n\nSet axis.mode to \"time\" to enable. See the section \"Time series data\" in\nAPI.txt for details.\n\n*/\n\n(function($) {\n\n\tvar options = {\n\t\txaxis: {\n\t\t\ttimezone: null,\t\t// \"browser\" for local to the client or timezone for timezone-js\n\t\t\ttimeformat: null,\t// format string to use\n\t\t\ttwelveHourClock: false,\t// 12 or 24 time in time mode\n\t\t\tmonthNames: null\t// list of names of months\n\t\t}\n\t};\n\n\t// round to nearby lower multiple of base\n\n\tfunction floorInBase(n, base) {\n\t\treturn base * Math.floor(n / base);\n\t}\n\n\t// Returns a string with the date d formatted according to fmt.\n\t// A subset of the Open Group's strftime format is supported.\n\n\tfunction formatDate(d, fmt, monthNames, dayNames) {\n\n\t\tif (typeof d.strftime == \"function\") {\n\t\t\treturn d.strftime(fmt);\n\t\t}\n\n\t\tvar leftPad = function(n, pad) {\n\t\t\tn = \"\" + n;\n\t\t\tpad = \"\" + (pad == null ? \"0\" : pad);\n\t\t\treturn n.length == 1 ? pad + n : n;\n\t\t};\n\n\t\tvar r = [];\n\t\tvar escape = false;\n\t\tvar hours = d.getHours();\n\t\tvar isAM = hours < 12;\n\n\t\tif (monthNames == null) {\n\t\t\tmonthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"];\n\t\t}\n\n\t\tif (dayNames == null) {\n\t\t\tdayNames = [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"];\n\t\t}\n\n\t\tvar hours12;\n\n\t\tif (hours > 12) {\n\t\t\thours12 = hours - 12;\n\t\t} else if (hours == 0) {\n\t\t\thours12 = 12;\n\t\t} else {\n\t\t\thours12 = hours;\n\t\t}\n\n\t\tfor (var i = 0; i < fmt.length; ++i) {\n\n\t\t\tvar c = fmt.charAt(i);\n\n\t\t\tif (escape) {\n\t\t\t\tswitch (c) {\n\t\t\t\t\tcase 'a': c = \"\" + dayNames[d.getDay()]; break;\n\t\t\t\t\tcase 'b': c = \"\" + monthNames[d.getMonth()]; break;\n\t\t\t\t\tcase 'd': c = leftPad(d.getDate()); break;\n\t\t\t\t\tcase 'e': c = leftPad(d.getDate(), \" \"); break;\n\t\t\t\t\tcase 'h':\t// For back-compat with 0.7; remove in 1.0\n\t\t\t\t\tcase 'H': c = leftPad(hours); break;\n\t\t\t\t\tcase 'I': c = leftPad(hours12); break;\n\t\t\t\t\tcase 'l': c = leftPad(hours12, \" \"); break;\n\t\t\t\t\tcase 'm': c = leftPad(d.getMonth() + 1); break;\n\t\t\t\t\tcase 'M': c = leftPad(d.getMinutes()); break;\n\t\t\t\t\t// quarters not in Open Group's strftime specification\n\t\t\t\t\tcase 'q':\n\t\t\t\t\t\tc = \"\" + (Math.floor(d.getMonth() / 3) + 1); break;\n\t\t\t\t\tcase 'S': c = leftPad(d.getSeconds()); break;\n\t\t\t\t\tcase 'y': c = leftPad(d.getFullYear() % 100); break;\n\t\t\t\t\tcase 'Y': c = \"\" + d.getFullYear(); break;\n\t\t\t\t\tcase 'p': c = (isAM) ? (\"\" + \"am\") : (\"\" + \"pm\"); break;\n\t\t\t\t\tcase 'P': c = (isAM) ? (\"\" + \"AM\") : (\"\" + \"PM\"); break;\n\t\t\t\t\tcase 'w': c = \"\" + d.getDay(); break;\n\t\t\t\t}\n\t\t\t\tr.push(c);\n\t\t\t\tescape = false;\n\t\t\t} else {\n\t\t\t\tif (c == \"%\") {\n\t\t\t\t\tescape = true;\n\t\t\t\t} else {\n\t\t\t\t\tr.push(c);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn r.join(\"\");\n\t}\n\n\t// To have a consistent view of time-based data independent of which time\n\t// zone the client happens to be in we need a date-like object independent\n\t// of time zones.  This is done through a wrapper that only calls the UTC\n\t// versions of the accessor methods.\n\n\tfunction makeUtcWrapper(d) {\n\n\t\tfunction addProxyMethod(sourceObj, sourceMethod, targetObj, targetMethod) {\n\t\t\tsourceObj[sourceMethod] = function() {\n\t\t\t\treturn targetObj[targetMethod].apply(targetObj, arguments);\n\t\t\t};\n\t\t};\n\n\t\tvar utc = {\n\t\t\tdate: d\n\t\t};\n\n\t\t// support strftime, if found\n\n\t\tif (d.strftime != undefined) {\n\t\t\taddProxyMethod(utc, \"strftime\", d, \"strftime\");\n\t\t}\n\n\t\taddProxyMethod(utc, \"getTime\", d, \"getTime\");\n\t\taddProxyMethod(utc, \"setTime\", d, \"setTime\");\n\n\t\tvar props = [\"Date\", \"Day\", \"FullYear\", \"Hours\", \"Milliseconds\", \"Minutes\", \"Month\", \"Seconds\"];\n\n\t\tfor (var p = 0; p < props.length; p++) {\n\t\t\taddProxyMethod(utc, \"get\" + props[p], d, \"getUTC\" + props[p]);\n\t\t\taddProxyMethod(utc, \"set\" + props[p], d, \"setUTC\" + props[p]);\n\t\t}\n\n\t\treturn utc;\n\t};\n\n\t// select time zone strategy.  This returns a date-like object tied to the\n\t// desired timezone\n\n\tfunction dateGenerator(ts, opts) {\n\t\tif (opts.timezone == \"browser\") {\n\t\t\treturn new Date(ts);\n\t\t} else if (!opts.timezone || opts.timezone == \"utc\") {\n\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t} else if (typeof timezoneJS != \"undefined\" && typeof timezoneJS.Date != \"undefined\") {\n\t\t\tvar d = new timezoneJS.Date();\n\t\t\t// timezone-js is fickle, so be sure to set the time zone before\n\t\t\t// setting the time.\n\t\t\td.setTimezone(opts.timezone);\n\t\t\td.setTime(ts);\n\t\t\treturn d;\n\t\t} else {\n\t\t\treturn makeUtcWrapper(new Date(ts));\n\t\t}\n\t}\n\t\n\t// map of app. size of time units in milliseconds\n\n\tvar timeUnitSize = {\n\t\t\"second\": 1000,\n\t\t\"minute\": 60 * 1000,\n\t\t\"hour\": 60 * 60 * 1000,\n\t\t\"day\": 24 * 60 * 60 * 1000,\n\t\t\"month\": 30 * 24 * 60 * 60 * 1000,\n\t\t\"quarter\": 3 * 30 * 24 * 60 * 60 * 1000,\n\t\t\"year\": 365.2425 * 24 * 60 * 60 * 1000\n\t};\n\n\t// the allowed tick sizes, after 1 year we use\n\t// an integer algorithm\n\n\tvar baseSpec = [\n\t\t[1, \"second\"], [2, \"second\"], [5, \"second\"], [10, \"second\"],\n\t\t[30, \"second\"], \n\t\t[1, \"minute\"], [2, \"minute\"], [5, \"minute\"], [10, \"minute\"],\n\t\t[30, \"minute\"], \n\t\t[1, \"hour\"], [2, \"hour\"], [4, \"hour\"],\n\t\t[8, \"hour\"], [12, \"hour\"],\n\t\t[1, \"day\"], [2, \"day\"], [3, \"day\"],\n\t\t[0.25, \"month\"], [0.5, \"month\"], [1, \"month\"],\n\t\t[2, \"month\"]\n\t];\n\n\t// we don't know which variant(s) we'll need yet, but generating both is\n\t// cheap\n\n\tvar specMonths = baseSpec.concat([[3, \"month\"], [6, \"month\"],\n\t\t[1, \"year\"]]);\n\tvar specQuarters = baseSpec.concat([[1, \"quarter\"], [2, \"quarter\"],\n\t\t[1, \"year\"]]);\n\n\tfunction init(plot) {\n\t\tplot.hooks.processOptions.push(function (plot, options) {\n\t\t\t$.each(plot.getAxes(), function(axisName, axis) {\n\n\t\t\t\tvar opts = axis.options;\n\n\t\t\t\tif (opts.mode == \"time\") {\n\t\t\t\t\taxis.tickGenerator = function(axis) {\n\n\t\t\t\t\t\tvar ticks = [];\n\t\t\t\t\t\tvar d = dateGenerator(axis.min, opts);\n\t\t\t\t\t\tvar minSize = 0;\n\n\t\t\t\t\t\t// make quarter use a possibility if quarters are\n\t\t\t\t\t\t// mentioned in either of these options\n\n\t\t\t\t\t\tvar spec = (opts.tickSize && opts.tickSize[1] ===\n\t\t\t\t\t\t\t\"quarter\") ||\n\t\t\t\t\t\t\t(opts.minTickSize && opts.minTickSize[1] ===\n\t\t\t\t\t\t\t\"quarter\") ? specQuarters : specMonths;\n\n\t\t\t\t\t\tif (opts.minTickSize != null) {\n\t\t\t\t\t\t\tif (typeof opts.tickSize == \"number\") {\n\t\t\t\t\t\t\t\tminSize = opts.tickSize;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tminSize = opts.minTickSize[0] * timeUnitSize[opts.minTickSize[1]];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor (var i = 0; i < spec.length - 1; ++i) {\n\t\t\t\t\t\t\tif (axis.delta < (spec[i][0] * timeUnitSize[spec[i][1]]\n\t\t\t\t\t\t\t\t\t\t\t  + spec[i + 1][0] * timeUnitSize[spec[i + 1][1]]) / 2\n\t\t\t\t\t\t\t\t&& spec[i][0] * timeUnitSize[spec[i][1]] >= minSize) {\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar size = spec[i][0];\n\t\t\t\t\t\tvar unit = spec[i][1];\n\n\t\t\t\t\t\t// special-case the possibility of several years\n\n\t\t\t\t\t\tif (unit == \"year\") {\n\n\t\t\t\t\t\t\t// if given a minTickSize in years, just use it,\n\t\t\t\t\t\t\t// ensuring that it's an integer\n\n\t\t\t\t\t\t\tif (opts.minTickSize != null && opts.minTickSize[1] == \"year\") {\n\t\t\t\t\t\t\t\tsize = Math.floor(opts.minTickSize[0]);\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tvar magn = Math.pow(10, Math.floor(Math.log(axis.delta / timeUnitSize.year) / Math.LN10));\n\t\t\t\t\t\t\t\tvar norm = (axis.delta / timeUnitSize.year) / magn;\n\n\t\t\t\t\t\t\t\tif (norm < 1.5) {\n\t\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t\t} else if (norm < 3) {\n\t\t\t\t\t\t\t\t\tsize = 2;\n\t\t\t\t\t\t\t\t} else if (norm < 7.5) {\n\t\t\t\t\t\t\t\t\tsize = 5;\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tsize = 10;\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tsize *= magn;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// minimum size for years is 1\n\n\t\t\t\t\t\t\tif (size < 1) {\n\t\t\t\t\t\t\t\tsize = 1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\taxis.tickSize = opts.tickSize || [size, unit];\n\t\t\t\t\t\tvar tickSize = axis.tickSize[0];\n\t\t\t\t\t\tunit = axis.tickSize[1];\n\n\t\t\t\t\t\tvar step = tickSize * timeUnitSize[unit];\n\n\t\t\t\t\t\tif (unit == \"second\") {\n\t\t\t\t\t\t\td.setSeconds(floorInBase(d.getSeconds(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"minute\") {\n\t\t\t\t\t\t\td.setMinutes(floorInBase(d.getMinutes(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"hour\") {\n\t\t\t\t\t\t\td.setHours(floorInBase(d.getHours(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"month\") {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), tickSize));\n\t\t\t\t\t\t} else if (unit == \"quarter\") {\n\t\t\t\t\t\t\td.setMonth(3 * floorInBase(d.getMonth() / 3,\n\t\t\t\t\t\t\t\ttickSize));\n\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\td.setFullYear(floorInBase(d.getFullYear(), tickSize));\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// reset smaller components\n\n\t\t\t\t\t\td.setMilliseconds(0);\n\n\t\t\t\t\t\tif (step >= timeUnitSize.minute) {\n\t\t\t\t\t\t\td.setSeconds(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.hour) {\n\t\t\t\t\t\t\td.setMinutes(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.day) {\n\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.day * 4) {\n\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.month * 2) {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 3));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.quarter * 2) {\n\t\t\t\t\t\t\td.setMonth(floorInBase(d.getMonth(), 6));\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (step >= timeUnitSize.year) {\n\t\t\t\t\t\t\td.setMonth(0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar carry = 0;\n\t\t\t\t\t\tvar v = Number.NaN;\n\t\t\t\t\t\tvar prev;\n\n\t\t\t\t\t\tdo {\n\n\t\t\t\t\t\t\tprev = v;\n\t\t\t\t\t\t\tv = d.getTime();\n\t\t\t\t\t\t\tticks.push(v);\n\n\t\t\t\t\t\t\tif (unit == \"month\" || unit == \"quarter\") {\n\t\t\t\t\t\t\t\tif (tickSize < 1) {\n\n\t\t\t\t\t\t\t\t\t// a bit complicated - we'll divide the\n\t\t\t\t\t\t\t\t\t// month/quarter up but we need to take\n\t\t\t\t\t\t\t\t\t// care of fractions so we don't end up in\n\t\t\t\t\t\t\t\t\t// the middle of a day\n\n\t\t\t\t\t\t\t\t\td.setDate(1);\n\t\t\t\t\t\t\t\t\tvar start = d.getTime();\n\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\t(unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t\tvar end = d.getTime();\n\t\t\t\t\t\t\t\t\td.setTime(v + carry * timeUnitSize.hour + (end - start) * tickSize);\n\t\t\t\t\t\t\t\t\tcarry = d.getHours();\n\t\t\t\t\t\t\t\t\td.setHours(0);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\td.setMonth(d.getMonth() +\n\t\t\t\t\t\t\t\t\t\ttickSize * (unit == \"quarter\" ? 3 : 1));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else if (unit == \"year\") {\n\t\t\t\t\t\t\t\td.setFullYear(d.getFullYear() + tickSize);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\td.setTime(v + step);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} while (v < axis.max && v != prev);\n\n\t\t\t\t\t\treturn ticks;\n\t\t\t\t\t};\n\n\t\t\t\t\taxis.tickFormatter = function (v, axis) {\n\n\t\t\t\t\t\tvar d = dateGenerator(v, axis.options);\n\n\t\t\t\t\t\t// first check global format\n\n\t\t\t\t\t\tif (opts.timeformat != null) {\n\t\t\t\t\t\t\treturn formatDate(d, opts.timeformat, opts.monthNames, opts.dayNames);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// possibly use quarters if quarters are mentioned in\n\t\t\t\t\t\t// any of these places\n\n\t\t\t\t\t\tvar useQuarters = (axis.options.tickSize &&\n\t\t\t\t\t\t\t\taxis.options.tickSize[1] == \"quarter\") ||\n\t\t\t\t\t\t\t(axis.options.minTickSize &&\n\t\t\t\t\t\t\t\taxis.options.minTickSize[1] == \"quarter\");\n\n\t\t\t\t\t\tvar t = axis.tickSize[0] * timeUnitSize[axis.tickSize[1]];\n\t\t\t\t\t\tvar span = axis.max - axis.min;\n\t\t\t\t\t\tvar suffix = (opts.twelveHourClock) ? \" %p\" : \"\";\n\t\t\t\t\t\tvar hourCode = (opts.twelveHourClock) ? \"%I\" : \"%H\";\n\t\t\t\t\t\tvar fmt;\n\n\t\t\t\t\t\tif (t < timeUnitSize.minute) {\n\t\t\t\t\t\t\tfmt = hourCode + \":%M:%S\" + suffix;\n\t\t\t\t\t\t} else if (t < timeUnitSize.day) {\n\t\t\t\t\t\t\tif (span < 2 * timeUnitSize.day) {\n\t\t\t\t\t\t\t\tfmt = hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"%b %d \" + hourCode + \":%M\" + suffix;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (t < timeUnitSize.month) {\n\t\t\t\t\t\t\tfmt = \"%b %d\";\n\t\t\t\t\t\t} else if ((useQuarters && t < timeUnitSize.quarter) ||\n\t\t\t\t\t\t\t(!useQuarters && t < timeUnitSize.year)) {\n\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\tfmt = \"%b\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"%b %Y\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (useQuarters && t < timeUnitSize.year) {\n\t\t\t\t\t\t\tif (span < timeUnitSize.year) {\n\t\t\t\t\t\t\t\tfmt = \"Q%q\";\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tfmt = \"Q%q %Y\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfmt = \"%Y\";\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar rt = formatDate(d, fmt, opts.monthNames, opts.dayNames);\n\n\t\t\t\t\t\treturn rt;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\n\t$.plot.plugins.push({\n\t\tinit: init,\n\t\toptions: options,\n\t\tname: 'time',\n\t\tversion: '1.0'\n\t});\n\n\t// Time-axis support used to be in Flot core, which exposed the\n\t// formatDate function on the plot object.  Various plugins depend\n\t// on the function, so we need to re-expose it here.\n\n\t$.plot.formatDate = formatDate;\n\t$.plot.dateGenerator = dateGenerator;\n\n})(jQuery);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/jquery-flot/jquery.flot.time.js\n// module id = 21\n// module chunks = 0","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2015 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    var cockpit = require(\"cockpit\");\n    var Mustache = require(\"mustache\");\n    var day_header_template = require('raw!journal_day_header.mustache');\n    var line_template = require('raw!journal_line.mustache');\n    var reboot_template = require('raw!journal_reboot.mustache');\n\n    var _ = cockpit.gettext;\n    var C_ = cockpit.gettext;\n\n    var journal = { };\n\n    /**\n     * journalctl([match, ...], [options])\n     * @match: any number of journal match strings\n     * @options: an object containing further options\n     *\n     * Load and (by default) stream journal entries as\n     * json objects. This function returns a jQuery deferred\n     * object which delivers the various journal entries.\n     *\n     * The various @match strings are journalctl matches.\n     * Zero, one or more can be specified. They must be in\n     * string format, or arrays of strings.\n     *\n     * The optional @options object can contain the following:\n     *  * \"host\": the host to load journal from\n     *  * \"count\": number of entries to load and/or pre-stream.\n     *    Default is 10\n     *  * \"follow\": if set to false just load entries and don't\n     *    stream further journal data. Default is true.\n     *  * \"directory\": optional directory to load journal files\n     *  * \"boot\": when set only list entries from this specific\n     *    boot id, or if null then the current boot.\n     *  * \"since\": if specified list entries since the date/time\n     *  * \"until\": if specified list entries until the date/time\n     *  * \"cursor\": a cursor to start listing entries from\n     *  * \"after\": a cursor to start listing entries after\n     *\n     * Returns a jQuery deferred promise. You can call these\n     * functions on the deferred to handle the responses. Note that\n     * there are additional non-jQuery methods.\n     *\n     *  .done(function(entries) { }): Called when done, @entries is\n     *         an array of all journal entries loaded. If .stream()\n     *         has been invoked then @entries will be empty.\n     *  .fail(funciton(ex) { }): called if the operation fails\n     *  .stream(function(entries) { }): called when we receive entries\n     *         entries. Called once per batch of journal @entries,\n     *         whether following or not.\n     *  .stop(): stop following or retrieving entries.\n     */\n\n    journal.journalctl = function journalctl(/* ... */) {\n        var matches = [];\n        var i, arg, options = { follow: true };\n        for (i = 0; i < arguments.length; i++) {\n            arg = arguments[i];\n            if (typeof arg == \"string\") {\n                matches.push(arg);\n            } else if (typeof arg == \"object\") {\n                if (arg instanceof Array) {\n                    matches.push.apply(matches, arg);\n                } else {\n                    cockpit.extend(options, arg);\n                    break;\n                }\n            } else {\n                console.warn(\"journal.journalctl called with invalid argument:\", arg);\n            }\n        }\n\n        if (options.count === undefined) {\n            if (options.follow)\n                options.count = 10;\n            else\n                options.count = null;\n        }\n\n        var cmd = [ \"journalctl\", \"-q\", \"--output=json\" ];\n        if (!options.count)\n            cmd.push(\"--no-tail\");\n        else\n            cmd.push(\"--lines=\" + options.count);\n        if (options.directory)\n            cmd.push(\"--directory=\" + options.directory);\n        if (options.boot)\n            cmd.push(\"--boot=\" + options.boot);\n        else if (options.boot !== undefined)\n            cmd.push(\"--boot\");\n        if (options.since)\n            cmd.push(\"--since=\" + options.since);\n        if (options.until)\n            cmd.push(\"--until=\" + options.until);\n        if (options.cursor)\n            cmd.push(\"--cursor=\" + options.cursor);\n        if (options.after)\n            cmd.push(\"--after=\" + options.after);\n\n        /* journalctl doesn't allow reverse and follow together */\n        if (options.reverse)\n            cmd.push(\"--reverse\");\n        else if (options.follow)\n            cmd.push(\"--follow\");\n\n        cmd.push(\"--\");\n        cmd.push.apply(cmd, matches);\n\n        var dfd = new cockpit.defer();\n        var promise;\n        var buffer = \"\";\n        var entries = [];\n        var streamers = [];\n        var interval = null;\n\n        function fire_streamers() {\n            var ents, i;\n            if (streamers.length && entries.length > 0) {\n                ents = entries;\n                entries = [];\n                for (i = 0; i < streamers.length; i++)\n                    streamers[i].apply(promise, [ents]);\n            } else {\n                window.clearInterval(interval);\n                interval = null;\n            }\n        }\n\n        var proc = cockpit.spawn(cmd, { host: options.host, batch: 8192, latency: 300, superuser: \"try\" }).\n            stream(function(data) {\n\n                if (buffer)\n                    data = buffer + data;\n                buffer = \"\";\n\n                var lines = data.split(\"\\n\");\n                var last = lines.length - 1;\n                lines.forEach(function(line, i) {\n                    if (i == last) {\n                        buffer = line;\n                    } else if (line && line.indexOf(\"-- \") !== 0) {\n                        try {\n                            entries.push(JSON.parse(line));\n                        } catch (e) {\n                            console.warn(e, line);\n                        }\n                    }\n                });\n\n                if (streamers.length && interval === null)\n                    interval = window.setInterval(fire_streamers, 300);\n            }).\n            done(function() {\n                fire_streamers();\n                dfd.resolve(entries);\n            }).\n            fail(function(ex) {\n                /* The journalctl command fails when no entries are matched\n                 * so we just ignore this status code */\n                if (ex.problem == \"cancelled\" ||\n                    ex.exit_status === 1) {\n                    fire_streamers();\n                    dfd.resolve(entries);\n                } else {\n                    dfd.reject(ex);\n                }\n            }).\n            always(function() {\n                window.clearInterval(interval);\n            });\n\n        promise = dfd.promise();\n        promise.stream = function stream(callback) {\n            streamers.push(callback);\n            return this;\n        };\n        promise.stop = function stop() {\n            proc.close(\"cancelled\");\n        };\n        return promise;\n    };\n\n    journal.printable = function printable(value) {\n        if (value === undefined || value === null)\n            return _(\"[no data]\");\n        else if (typeof(value) == \"string\")\n            return value;\n        else if (value.length !== undefined)\n            return cockpit.format(_(\"[$0 bytes of binary data]\"), value.length);\n        else\n            return _(\"[binary data]\");\n    };\n\n    function output_funcs_for_box(box) {\n        /* Dereference any jQuery object here */\n        if (box.jquery)\n            box = box[0];\n\n        Mustache.parse(day_header_template);\n        Mustache.parse(line_template);\n        Mustache.parse(reboot_template);\n\n        function render_line(ident, prio, message, count, time, entry) {\n            var parts = {\n                    'cursor': entry[\"__CURSOR\"],\n                    'time': time,\n                    'message': message,\n                    'service': ident\n                };\n            if (count > 1)\n                parts['count'] = count;\n            if (ident === 'abrt-notification') {\n                parts['problem'] = true;\n                parts['service'] = entry['PROBLEM_BINARY'];\n            }\n            else if (prio < 4)\n                parts['warning'] = true;\n            return Mustache.render(line_template, parts);\n        }\n\n        var reboot = _(\"Reboot\");\n        var reboot_line = Mustache.render(reboot_template, {'message': reboot} );\n\n        function render_reboot_separator() {\n            return reboot_line;\n        }\n\n        function render_day_header(day) {\n            return Mustache.render(day_header_template, {'day': day} );\n        }\n\n        function parse_html(string) {\n            var div = document.createElement(\"div\");\n            div.innerHTML = string.trim();\n            return div.children[0];\n        }\n\n        return {\n            render_line: render_line,\n            render_day_header: render_day_header,\n            render_reboot_separator: render_reboot_separator,\n\n            append: function(elt) {\n                if (typeof (elt) == \"string\")\n                    elt = parse_html(elt);\n                box.appendChild(elt);\n            },\n            prepend: function(elt) {\n                if (typeof (elt) == \"string\")\n                    elt = parse_html(elt);\n                if (box.firstChild)\n                    box.insertBefore(elt, box.firstChild);\n                else\n                    box.appendChild(elt);\n            },\n            remove_last: function() {\n                if (box.lastChild)\n                    box.removeChild(box.lastChild);\n            },\n            remove_first: function() {\n                if (box.firstChild)\n                    box.removeChild(box.firstChild);\n            },\n        };\n    }\n\n    var month_names = [\n        C_(\"month-name\", 'January'),\n        C_(\"month-name\", 'February'),\n        C_(\"month-name\", 'March'),\n        C_(\"month-name\", 'April'),\n        C_(\"month-name\", 'May'),\n        C_(\"month-name\", 'June'),\n        C_(\"month-name\", 'July'),\n        C_(\"month-name\", 'August'),\n        C_(\"month-name\", 'September'),\n        C_(\"month-name\", 'October'),\n        C_(\"month-name\", 'November'),\n        C_(\"month-name\", 'December')\n    ];\n\n    /* Render the journal entries by passing suitable HTML strings back to\n       the caller via the 'output_funcs'.\n\n       Rendering is context aware.  It will insert 'reboot' markers, for\n       example, and collapse repeated lines.  You can extend the output at\n       the bottom and also at the top.\n\n       A new renderer is created by calling 'journal.renderer' like\n       so:\n\n          var renderer = journal.renderer(funcs);\n\n       You can feed new entries into the renderer by calling various\n       methods on the returned object:\n\n          - renderer.append(journal_entry)\n          - renderer.append_flush()\n          - renderer.prepend(journal_entry)\n          - renderer.prepend_flush()\n\n       A 'journal_entry' is one element of the result array returned by a\n       call to 'Query' with the 'cockpit.journal_fields' as the fields to\n       return.\n\n       Calling 'append' will append the given entry to the end of the\n       output, naturally, and 'prepend' will prepend it to the start.\n\n       The output might lag behind what has been input via 'append' and\n       'prepend', and you need to call 'append_flush' and 'prepend_flush'\n       respectively to ensure that the output is up-to-date.  Flushing a\n       renderer does not introduce discontinuities into the output.  You\n       can continue to feed entries into the renderer after flushing and\n       repeated lines will be correctly collapsed across the flush, for\n       example.\n\n       The renderer will call methods of the 'output_funcs' object to\n       produce the desired output:\n\n          - output_funcs.append(rendered)\n          - output_funcs.remove_last()\n          - output_funcs.prepend(rendered)\n          - output_funcs.remove_first()\n\n       The 'rendered' argument is the return value of one of the rendering\n       functions described below.  The 'append' and 'prepend' methods\n       should add this element to the output, naturally, and 'remove_last'\n       and 'remove_first' should remove the indicated element.\n\n       If you never call 'prepend' on the renderer, 'output_func.prepend'\n       isn't called either.  If you never call 'renderer.prepend' after\n       'renderer.prepend_flush', then 'output_func.remove_first' will\n       never be called.  The same guarantees exist for the 'append' family\n       of functions.\n\n       The actual rendering is also done by calling methods on\n       'output_funcs':\n\n          - output_funcs.render_line(ident, prio, message, count, time, cursor)\n          - output_funcs.render_day_header(day)\n          - output_funcs.render_reboot_separator()\n\n    */\n\n    journal.renderer = function renderer(funcs_or_box) {\n        var output_funcs;\n        if (funcs_or_box.render_line)\n            output_funcs = funcs_or_box;\n        else\n            output_funcs = output_funcs_for_box(funcs_or_box);\n\n        function copy_object(o) {\n            var c = { }; for(var p in o) c[p] = o[p]; return c;\n        }\n\n        // A 'entry' object describes a journal entry in formatted form.\n        // It has fields 'bootid', 'ident', 'prio', 'message', 'time',\n        // 'day', all of which are strings.\n\n        function format_entry(journal_entry) {\n            function pad(n) {\n                var str = n.toFixed();\n                if(str.length == 1)\n                    str = '0' + str;\n                return str;\n            }\n\n            var d = new Date(journal_entry[\"__REALTIME_TIMESTAMP\"] / 1000);\n            return {\n                cursor: journal_entry[\"__CURSOR\"],\n                full: journal_entry,\n                day: month_names[d.getMonth()] + ' ' + d.getDate().toFixed() + ', ' + d.getFullYear().toFixed(),\n                time: pad(d.getHours()) + ':' + pad(d.getMinutes()),\n                bootid: journal_entry[\"_BOOT_ID\"],\n                ident: journal_entry[\"SYSLOG_IDENTIFIER\"] || journal_entry[\"_COMM\"],\n                prio: journal_entry[\"PRIORITY\"],\n                message: journal.printable(journal_entry[\"MESSAGE\"])\n            };\n        }\n\n        function entry_is_equal(a, b) {\n            return (a && b &&\n                    a.day == b.day &&\n                    a.bootid == b.bootid &&\n                    a.ident == b.ident &&\n                    a.prio == b.prio &&\n                    a.message == b.message);\n        }\n\n        // A state object describes a line that should be eventually\n        // output.  It has an 'entry' field as per description above, and\n        // also 'count', 'last_time', and 'first_time', which record\n        // repeated entries.  Additionally:\n        //\n        // line_present: When true, the line has been output already with\n        //     some preliminary data.  It needs to be removed before\n        //     outputting more recent data.\n        //\n        // header_present: The day header has been output preliminarily\n        //     before the actual log lines.  It needs to be removed before\n        //     prepending more lines.  If both line_present and\n        //     header_present are true, then the header comes first in the\n        //     output, followed by the line.\n\n        function render_state_line(state) {\n            return output_funcs.render_line(state.entry.ident,\n                                            state.entry.prio,\n                                            state.entry.message,\n                                            state.count,\n                                            state.last_time,\n                                            state.entry.full);\n        }\n\n        // We keep the state of the first and last journal lines,\n        // respectively, in order to collapse repeated lines, and to\n        // insert reboot markers and day headers.\n        //\n        // Normally, there are two state objects, but if only a single\n        // line has been output so far, top_state and bottom_state point\n        // to the same object.\n\n        var top_state, bottom_state;\n\n        top_state = bottom_state = { };\n\n        function start_new_line() {\n            // If we now have two lines, split the state\n            if (top_state === bottom_state && top_state.entry) {\n                top_state = copy_object(bottom_state);\n            }\n        }\n\n        function top_output() {\n            if (top_state.header_present) {\n                output_funcs.remove_first();\n                top_state.header_present = false;\n            }\n            if (top_state.line_present) {\n                output_funcs.remove_first();\n                top_state.line_present = false;\n            }\n            if (top_state.entry) {\n                output_funcs.prepend(render_state_line(top_state));\n                top_state.line_present = true;\n            }\n        }\n\n        function prepend(journal_entry) {\n            var entry = format_entry(journal_entry);\n\n            if (entry_is_equal(top_state.entry, entry)) {\n                top_state.count += 1;\n                top_state.first_time = entry.time;\n            } else {\n                top_output();\n\n                if (top_state.entry) {\n                    if (entry.bootid != top_state.entry.bootid)\n                        output_funcs.prepend(output_funcs.render_reboot_separator());\n                    if (entry.day != top_state.entry.day)\n                        output_funcs.prepend(output_funcs.render_day_header(top_state.entry.day));\n                }\n\n                start_new_line();\n                top_state.entry = entry;\n                top_state.count = 1;\n                top_state.first_time = top_state.last_time = entry.time;\n                top_state.line_present = false;\n            }\n        }\n\n        function prepend_flush() {\n            top_output();\n            if (top_state.entry) {\n                output_funcs.prepend(output_funcs.render_day_header(top_state.entry.day));\n                top_state.header_present = true;\n            }\n        }\n\n        function bottom_output() {\n            if (bottom_state.line_present) {\n                output_funcs.remove_last();\n                bottom_state.line_present = false;\n            }\n            if (bottom_state.entry) {\n                output_funcs.append(render_state_line(bottom_state));\n                bottom_state.line_present = true;\n            }\n        }\n\n        function append(journal_entry) {\n            var entry = format_entry(journal_entry);\n\n            if (entry_is_equal(bottom_state.entry, entry)) {\n                bottom_state.count += 1;\n                bottom_state.last_time = entry.time;\n            } else {\n                bottom_output();\n\n                if (!bottom_state.entry || entry.day != bottom_state.entry.day) {\n                    output_funcs.append(output_funcs.render_day_header(entry.day));\n                    bottom_state.header_present = true;\n                }\n                if (bottom_state.entry && entry.bootid != bottom_state.entry.bootid)\n                    output_funcs.append(output_funcs.render_reboot_separator());\n\n                start_new_line();\n                bottom_state.entry = entry;\n                bottom_state.count = 1;\n                bottom_state.first_time = bottom_state.last_time = entry.time;\n                bottom_state.line_present = false;\n            }\n        }\n\n        function append_flush() {\n            bottom_output();\n        }\n\n        return { prepend: prepend,\n                 prepend_flush: prepend_flush,\n                 append: append,\n                 append_flush: append_flush\n               };\n    };\n\n    journal.logbox = function logbox(match, max_entries) {\n        var entries = [ ];\n        var box = document.createElement(\"div\");\n\n        function render() {\n            var renderer = journal.renderer(box);\n            while(box.firstChild)\n                box.removeChild(box.firstChild);\n            for (var i = 0; i < entries.length; i++) {\n                renderer.prepend(entries[i]);\n            }\n            renderer.prepend_flush();\n            if (entries.length > 0)\n                box.removeAttribute(\"hidden\");\n            else\n                box.setAttribute(\"hidden\", \"hidden\");\n        }\n\n        render();\n\n        var promise = journal.journalctl(match, { count: max_entries }).\n            stream(function(tail) {\n                entries = entries.concat(tail);\n                if (entries.length > max_entries)\n                    entries = entries.slice(-max_entries);\n                render();\n            }).\n            fail(function(error) {\n                box.appendChild(document.createTextNode(error.message));\n                box.removeAttribute(\"hidden\");\n            });\n\n        /* Both a DOM element and a promise */\n        return promise.promise(box);\n    };\n\n    module.exports = journal;\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/journal.js\n// module id = 22\n// module chunks = 0","module.exports = \"<div class=\\\"panel-heading\\\">{{day}}</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/lib/journal_day_header.mustache\n// module id = 23\n// module chunks = 0","module.exports = \"<div class=\\\"cockpit-logline\\\" data-cursor=\\\"{{cursor}}\\\">\\n  <div class=\\\"cockpit-log-warning\\\">{{#warning}}\\n    <i class=\\\"fa fa-exclamation-triangle\\\"></i>\\n  {{/warning}}{{#problem}}\\n    <i class=\\\"fa fa-times-circle-o\\\"></i>\\n  {{/problem}}\\n  </div>\\n  <div class=\\\"cockpit-log-time\\\">{{time}}</div>\\n  <span class=\\\"cockpit-log-message\\\">{{message}}</span>\\n  {{! if we have count (repeated messages), show service name and badge - otherwise just the service }}\\n  {{#count}}\\n  <div class=\\\"cockpit-log-service-container\\\">\\n    <div class=\\\"cockpit-log-service-reduced\\\">{{service}}</div>\\n    <span class=\\\"badge\\\">{{count}}&#160;<i class=\\\"fa fa-caret-right\\\"></i></span>\\n  </div>\\n  {{/count}}{{^count}}\\n  <div class=\\\"cockpit-log-service\\\">{{service}}</div>\\n  {{/count}}\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/lib/journal_line.mustache\n// module id = 24\n// module chunks = 0","module.exports = \"<div class=\\\"cockpit-logline\\\">\\n  {{! placeholders for correct message alignment }}\\n  <div class=\\\"cockpit-log-warning\\\"></div>\\n  <span class=\\\"cockpit-log-message cockpit-logmsg-reboot\\\">{{message}}</span>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/raw-loader!../pkg/lib/journal_reboot.mustache\n// module id = 25\n// module chunks = 0","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2015 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    var $ = require(\"jquery\");\n    var cockpit = require(\"cockpit\");\n\n    var mustache = require(\"mustache\");\n    require(\"patterns\");\n    require(\"cockpit-components-file-autocomplete.css\");\n\n    var _ = cockpit.gettext;\n\n    /* GENERIC STORAGE DIALOG SUPPORT\n     */\n\n    var storage_dialog_tmpl;\n\n    function init_dialogs() {\n        storage_dialog_tmpl = $(\"#storage-dialog-tmpl\").html();\n        mustache.parse(storage_dialog_tmpl);\n    }\n\n    var cur_dialog;\n\n    function dialog_open(def) {\n\n        def.Fields.forEach(function (f) {\n            // Convert initial values for SizeInput fields to MB.\n            if (f.SizeInput && f.Value)\n                f.ValueMB = (f.Value / (1024*1024)).toFixed(0);\n\n            // Put in the Units for SizeSliders\n            if (f.SizeSlider && !f.Units)\n                f.Units = cockpit.get_byte_units(f.Value || f.Max);\n\n            // Help SelectMany with counting\n            if (f.SelectMany)\n                f.HasOptions = (f.Options.length > 0);\n\n            // Help CheckBoxText with detecting \"false\"\n            if (f.CheckBoxText)\n                f.Checked = (f.Value !== false);\n        });\n\n        if (def.Action && def.Action.Danger)\n            def.Action.DangerButton = true;\n\n        function empty(obj) { return !obj || obj.length === 0; }\n\n        def.HasBody = !empty(def.Fields) || !empty(def.Alerts) || !empty(def.Blocking);\n\n        function toggle_arrow(event) {\n            /* jshint validthis:true */\n            var collapsed = $(this).hasClass('collapsed');\n            if (collapsed) {\n                $(this).removeClass('collapsed');\n                $(this).find('.fa').removeClass('fa-angle-right').addClass('fa-angle-down');\n            } else {\n                $(this).addClass('collapsed');\n                $(this).find('.fa').removeClass('fa-angle-down').addClass('fa-angle-right');\n            }\n            update_visibility();\n        }\n\n        function select_row(event) {\n            /* jshint validthis:true */\n            var tbody = $(this);\n            var row = $(event.target).parent('tr');\n            tbody.find('tr').removeClass('highlight-ct');\n            row.addClass('highlight-ct');\n        }\n\n        if (cur_dialog)\n            cur_dialog.modal('hide');\n\n        var $dialog = $(mustache.render(storage_dialog_tmpl, def));\n        $('body').append($dialog);\n        cur_dialog = $dialog;\n\n        $dialog.on('hidden.bs.modal', function () {\n            $dialog.remove();\n        });\n\n        $dialog.find('.dialog-arrow').on('click', toggle_arrow);\n        $dialog.find('.dialog-select-row-table tbody').on('click', select_row);\n        $dialog.find('.dialog-select-row-table tbody tr:first-child').addClass('highlight-ct');\n\n        /* Dropdowns\n         */\n\n        function dropdown_option_clicked(target) {\n            if (target.hasClass(\"disabled\"))\n                return false;\n            var parent = target.parents(\".dropdown\");\n            parent.find(\"button span\").first().text(target.text());\n            parent.val(target.attr(\"value\"));\n            parent.find(\"li.selected\").removeClass(\"selected\");\n            target.addClass(\"selected\");\n            parent.trigger(\"change\", [ ]);\n        }\n\n        $dialog.on(\"click\", \".dropdown li[value]\", function(ev) {\n            return dropdown_option_clicked($(this));\n        });\n\n        $dialog.find(\".dropdown\").each(function (i, parent) {\n            var selected;\n            $(parent).find(\"li[value]\").each(function (i, target) {\n                if (!selected || $(target).attr(\"selected\"))\n                    selected = $(target);\n            });\n            dropdown_option_clicked(selected);\n        });\n\n        /* Size sliders\n         */\n\n        function setup_size_slider(field) {\n            var value = field.Value || field.Max;\n            var parent = $dialog.find('[data-field=\"' + field.SizeSlider + '\"]');\n            var input = parent.find('.size-text');\n            var unit = parent.find('.size-unit');\n            var slider = $(\"<div class='slider'>\").\n                append($(\"<div class='slider-bar'>\").\n                    append($(\"<div class='slider-thumb'>\")));\n            $(slider).slider();\n\n            parent.data('max', field.Max);\n            parent.data('round', field.Round);\n            parent.find('.slider').replaceWith(slider);\n\n            $(slider).on('change', size_slider_changed);\n            parent.find('.size-text').on('change', size_text_changed);\n            parent.find('.size-unit').on('change', size_unit_changed);\n\n            slider.prop(\"value\", value / field.Max);\n            parent.val(value);\n            input.val(cockpit.format_number(value / +unit.val()));\n        }\n\n        function size_slider_changed(event, value) {\n            /* jshint validthis:true */\n            var parent = $(this).parents('.size-slider');\n            var input = parent.find('.size-text');\n            var unit = parent.find('.size-unit');\n            var max = parent.data('max');\n            var round = parent.data('round');\n\n            value *= max;\n            if (round)\n                value = Math.round(value / round) * round;\n\n            if (value < 0)\n                value = 0;\n            if (value > max)\n                value = max;\n\n            input.val(cockpit.format_number(value / +unit.val()));\n            parent.val(value);\n            $(parent).trigger(\"change\");\n        }\n\n        function size_text_changed(event) {\n            /* jshint validthis:true */\n            var input = $(this);\n            var parent = input.parents('.size-slider');\n            var unit = parent.find('.size-unit');\n            var unit_val = +unit.val();\n            var slider = parent.find('.slider');\n            var max = parent.data('max');\n            var value = +input.val() * unit_val;\n\n            // As a special case, if the user types something that\n            // looks like the maximum when formatted, always use\n            // exactly the maximum.  Otherwise we have the confusing\n            // possibility that with the exact same string in the text\n            // input, the size is sometimes too large and sometimes\n            // not.\n\n            var max_fmt = cockpit.format_number(max / unit_val);\n            var max_parse = +max_fmt * unit_val;\n\n            if (value == max_parse)\n                value = max;\n\n            slider.prop(\"value\", value / max);\n            parent.val(value);\n            $(parent).trigger(\"change\");\n        }\n\n        function size_unit_changed(event) {\n            /* jshint validthis:true */\n            var unit = $(this);\n            var parent = unit.parents('.size-slider');\n            var input = parent.find('.size-text');\n\n            input.val(cockpit.format_number(+parent.val() / +unit.val()));\n        }\n\n        function size_update(field, value) {\n            var parent = $dialog.find('[data-field=\"' + field.SizeSlider + '\"]');\n            var input = parent.find('.size-text');\n            var unit = parent.find('.size-unit');\n            var slider = parent.find('.slider');\n\n            if (typeof value == \"number\")\n                value = { Value: value };\n\n            if (value.Max !== undefined) {\n                field.Max = value.Max;\n                parent.data('max', field.Max);\n            }\n\n            if (value.Round !== undefined) {\n                field.Round = value.Round;\n                parent.data('round', field.Round);\n            }\n\n            if (value.Value !== undefined) {\n                slider.prop(\"value\", value.Value / field.Max);\n                input.val(cockpit.format_number(value.Value / +unit.val()));\n                parent.val(value.Value);\n            }\n        }\n\n        def.Fields.forEach(function (f) {\n            if (f.SizeSlider) {\n                setup_size_slider(f);\n            }\n        });\n\n        // CheckBoxText\n\n        $dialog.on(\"change\", \".dialog-checkbox-text input[type=checkbox]\", function (event) {\n            var parent = $(event.target).parents(\"[data-field]\");\n            var input = parent.find(\"input[type=text]\");\n            input.toggle(event.target.checked);\n        });\n\n        /* ComboBoxes\n         */\n\n        $dialog.on(\"click\", \".combobox-container .caret\", function(ev) {\n            $(this).parents(\".input-group\").toggleClass(\"open\");\n        });\n\n        $dialog.on(\"click\", \".combobox-container li a\", function(ev) {\n            $(this).parents(\".input-group\").find(\"input\").val($(this).text()).trigger(\"change\");\n            $(this).parents(\".input-group\").removeClass(\"open\");\n        });\n\n        function combobox_set_choices(name, choices) {\n            if (typeof choices == 'function') {\n                $.when(choices(get_field_values())).then(function (result) {\n                    if (result !== false)\n                        combobox_set_choices(name, result);\n                });\n                return;\n            }\n\n            var $f = $dialog.find('[data-field=\"' + name + '\"]');\n            var $ul = $f.find('ul');\n            $ul.empty().append(choices.map(function (c) {\n                return $('<li>').append($('<a>').text(c));\n            }));\n            $f.find(\".caret\").toggle(choices.length > 0);\n        }\n\n        var combobox_some_dynamic = false;\n\n        $dialog.find(\".combobox-container .caret\").hide();\n        def.Fields.forEach(function (f) {\n            if (f.ComboBox) {\n                if (typeof f.Choices == 'function')\n                    combobox_some_dynamic = true;\n                combobox_set_choices(f.ComboBox, f.Choices);\n            }\n        });\n\n        var combobox_timeout;\n\n        function combobox_reset_dynamic_choices() {\n            if (!combobox_some_dynamic)\n                return;\n\n            if (combobox_timeout)\n                window.clearTimeout(combobox_timeout);\n            combobox_timeout = window.setTimeout(function () {\n                def.Fields.forEach(function (f) {\n                    if (f.ComboBox && typeof f.Choices == 'function') {\n                        combobox_set_choices(f.ComboBox, f.Choices);\n                    }\n                });\n            }, 500);\n        }\n\n        /* Main\n         */\n\n        var invisible = { };\n\n        function get_name(f) {\n            return (f.TextInput || f.PassInput || f.SelectOne || f.SelectMany || f.SizeInput ||\n                    f.SizeSlider || f.CheckBox || f.Arrow || f.SelectRow || f.CheckBoxText || f.ComboBox);\n        }\n\n        function get_field_values() {\n            var vals = { };\n\n            def.Fields.forEach(function (f) {\n                var n = get_name(f);\n                var $f = $dialog.find('[data-field=\"' + n + '\"]');\n                if (f.TextInput)\n                    vals[n] = $f.val();\n                else if (f.PassInput)\n                    vals[n] = $f.val();\n                else if (f.SelectOne)\n                    vals[n] = $f.val();\n                else if (f.SizeInput)\n                    vals[n] = parseInt($f.val(), 10)*1024*1024;\n                else if (f.SizeSlider)\n                    vals[n] = parseInt($f.val(), 10);\n                else if (f.CheckBox)\n                    vals[n] = $f.prop('checked');\n                else if (f.SelectMany) {\n                    vals[n] = [ ];\n                    $f.find('input').each(function (i, e) {\n                        if (e.checked)\n                            vals[n].push(f.Options[i].value);\n                    });\n                } else if (f.SelectRow) {\n                    $f.find('tbody tr').each(function (i, e) {\n                        if ($(e).hasClass('highlight-ct'))\n                            vals[n] = f.Rows[i].value;\n                    });\n                } else if (f.ComboBox) {\n                    vals[n] = $f.find('input[type=text]').val();\n                } else if (f.Arrow) {\n                    vals[n] = !$f.hasClass('collapsed');\n                } else if (f.CheckBoxText) {\n                    var box = $f.find(\"input[type=checkbox]\");\n                    var input = $f.find(\"input[type=text]\");\n                    if (!box.prop('checked'))\n                        vals[n] = false;\n                    else\n                        vals[n] = input.val();\n                }\n            });\n\n            return vals;\n        }\n\n        function update_visibility() {\n            var vals = get_field_values();\n\n            def.Fields.forEach(function (f) {\n                if (f.visible) {\n                    var n = get_name(f);\n                    invisible[n] = !f.visible(vals);\n                    $dialog.find('[data-field=\"' + n + '\"]').parents('tr').toggle(!invisible[n]);\n                }\n            });\n        }\n\n        function update_fields(trigger) {\n            def.Fields.forEach(function (f) {\n                if (f.TextInput && f.update) {\n                    $dialog.find('[data-field=\"' + f.TextInput + '\"]').val(f.update(get_field_values(), trigger));\n                } else if (f.CheckBox && f.update) {\n                    $dialog.find('[data-field=\"' + f.CheckBox + '\"]').prop('checked',\n                                                                           f.update(get_field_values(), trigger));\n                } else if (f.SizeSlider && f.update) {\n                    size_update(f, f.update(get_field_values(), trigger));\n                }\n            });\n        }\n\n        function validate_field(field, val, vals) {\n            var msg = null;\n\n            if (field.SizeSlider) {\n                if (isNaN(val))\n                    msg = _(\"Size must be a number\");\n                if (val === 0)\n                    msg = _(\"Size cannot be zero\");\n                if (val < 0)\n                    msg = _(\"Size cannot be negative\");\n                if (!field.AllowInfinite && val > field.Max)\n                    msg = _(\"Size is too large\");\n            }\n\n            if (field.validate)\n                msg = field.validate(val, vals);\n\n            return msg;\n        }\n\n        function get_validated_field_values() {\n            var vals = get_field_values();\n\n            var errors = [ ];\n            def.Fields.forEach(function (f) {\n                var n = get_name(f);\n                if (invisible[n])\n                    vals[n] = undefined;\n                else {\n                    var msg = validate_field(f, vals[n], vals);\n                    if (msg) {\n                        var err = new Error(msg);\n                        err.target = '[data-field=\"' + n + '\"]';\n                        errors.push(err);\n                    }\n                }\n            });\n\n            $dialog.dialog('failure', errors);\n            return (errors.length === 0)? vals : null;\n        }\n\n        $dialog.on('change input', function (event) {\n            update_visibility();\n            combobox_reset_dynamic_choices();\n            var trigger = $(event.target).attr(\"data-field\");\n            if (trigger)\n                update_fields(trigger);\n        });\n\n        function error_field_to_target(err) {\n            if (err.field)\n                return { message: err.message,\n                         target: '[data-field=\"' + err.field + '\"]'\n                       };\n            else\n                return err;\n        }\n\n        function close() {\n            if (combobox_timeout)\n                window.clearTimeout(combobox_timeout);\n            $dialog.modal('hide');\n        }\n\n        $dialog.find('button[data-action=\"cancel\"]').on('click', function () {\n            close();\n        });\n\n        $dialog.find('button[data-action=\"apply\"]').on('click', function () {\n            var vals = get_validated_field_values();\n            if (vals !== null) {\n                var promise = def.Action.action(vals);\n                if (promise) {\n                    $dialog.dialog('wait', promise);\n                    promise\n                        .done(function (result) {\n                            close();\n                        })\n                        .fail(function (err) {\n                            if (def.Action.failure_filter)\n                                err = def.Action.failure_filter(vals, err);\n                            if (err) {\n                                if (err.length)\n                                    err = err.map(error_field_to_target);\n                                else\n                                    err = error_field_to_target(err);\n                                $dialog.dialog('failure', err);\n                            }\n                        });\n                } else {\n                    close();\n                }\n            }\n        });\n\n        update_visibility();\n        $dialog.modal('show');\n    }\n\n    $(init_dialogs);\n\n    module.exports = { open: dialog_open };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/storaged/dialog.js\n// module id = 26\n// module chunks = 0","'use strict';\n\n(function() {\n    \"use strict\";\n\n    var $ = require('jquery');\n    var cockpit = require('cockpit');\n\n    var unique_number = 0;\n    function unique() {\n        unique_number += 1;\n        return \"unique\" + -(new Date()) + -unique_number;\n    }\n\n    /* Dialog Patterns */\n\n    function clear_errors(sel) {\n        sel.find(\".dialog-error\").remove();\n        sel.find(\".has-error\").removeClass(\"has-error\");\n        sel.find(\".dialog-wrapper\").off(\".dialog-error\");\n        sel.off(\".dialog-error\");\n    }\n\n    function field_error(target, error) {\n        var wrapper = target.parent();\n        var next, refresh;\n\n        if (!wrapper.is(\".dialog-wrapper\")) {\n            wrapper = $(\"<div class='dialog-wrapper'>\").insertBefore(target);\n\n            /*\n             * Some bootstrap plugins replace html controls with their own\n             * stuff, so we have to account for that here.\n             */\n\n            next = target.next();\n            if (next.is(\".bootstrap-select\") && next.selectpicker) {\n                next.remove();\n                refresh = next.selectpicker;\n            }\n\n            target.remove().appendTo(wrapper);\n\n            if (refresh)\n                refresh.call(target);\n        }\n\n        var message;\n        if (error.message)\n            message = $(\"<div class='dialog-error help-block'>\").text(error.message);\n        wrapper.addClass(\"has-error\").append(message);\n\n        if (!wrapper.hasClass(\"error-keep\")) {\n            wrapper.on(\"keypress.dialog-error change.dialog-error\", function() {\n                wrapper.removeClass(\"has-error\")\n                    .find(\".dialog-error.help-block\").css(\"visibility\", \"hidden\");\n            });\n        }\n    }\n\n    function global_error(sel, error) {\n        var alert = $(\"<div class='alert alert-danger dialog-error'>\");\n        var text = error.message || error.toString();\n        alert.text(text);\n        $(\"<span class='fa fa-exclamation-triangle'>\").prependTo(alert);\n\n        /* Always log global dialog errors for easier debugging */\n        console.warn(text);\n\n        var footer = sel.find(\".modal-footer\");\n        if (footer.length)\n            alert.prependTo(footer);\n        else\n            alert.appendTo(sel);\n    }\n\n    function display_errors(sel, errors) {\n        clear_errors(sel);\n\n        /* The list of errors can also be passed as an array */\n        if (errors.length == 1 && $.isArray(errors[0]))\n            errors = errors[0];\n\n        var any = false;\n        errors.forEach(function(error) {\n            var target;\n            if (error) {\n                target = sel.find(error.target);\n\n                /* Errors for a specific field added below that field */\n                if (target && target.length)\n                    field_error(target, error);\n                else\n                    global_error(sel, error);\n\n                any = true;\n            }\n        });\n\n        if (!any)\n            return;\n\n        /* When dialog is shown again, remove all mods */\n        sel.on(\"show.bs.modal.dialog-error\", function() {\n            clear_errors(sel);\n        });\n    }\n\n    function DialogWait(promise, handle) {\n        this.promise = promise;\n        this.disabled = [];\n        this.handle = handle;\n    }\n\n    function clear_wait(sel) {\n        var data = sel.data(\"dialog-wait\");\n        sel.data(\"dialog-wait\", null);\n\n        sel.find(\".dialog-wait-ct\").remove();\n        sel.find(\".btn\").off(\".dialog-wait\");\n        sel.off(\".dialog-wait\");\n\n        if (data) {\n            data.disabled.forEach(function(ctl) {\n                ctl.removeAttr(\"disabled\");\n            });\n        }\n    }\n\n    function display_wait(sel, promise, handle) {\n        clear_wait(sel);\n\n        if (!promise) {\n            if (handle)\n                sel.modal(\"hide\");\n            return sel;\n        }\n\n        /* Clear all errors in the dialog */\n        if (handle)\n            display_errors(sel, []);\n\n        var wait = $(\"<div class='dialog-wait-ct pull-left'>\");\n        $(\"<div class='spinner spinner-sm'>\").appendTo(wait);\n        var message = $(\"<span>\").appendTo(wait);\n\n        sel.find(\".modal-footer button\").first().before(wait);\n\n        var data = new DialogWait(promise, handle);\n        sel.data(\"dialog-wait\", data);\n\n        var cancellation = promise.cancel || promise.close;\n        var cancelled = false;\n\n        /* Disable everything and stash previous disabled state */\n        var controls = sel.find(\".form-control\").add(\".btn\", sel);\n        if (cancellation)\n            controls = controls.not(\"[data-dismiss]\").not(\".btn-cancel\");\n        controls.each(function() {\n            var ctl = $(this);\n            if (!ctl.attr(\"disabled\")) {\n                data.disabled.push(ctl);\n                ctl.attr(\"disabled\", \"disabled\");\n            }\n        });\n\n        sel.find(\".btn[data-dismiss], .btn-cancel\").on(\"click.dialog-wait\", function() {\n            cancelled = true;\n            if (cancellation)\n                cancellation.apply(promise);\n            return false;\n        });\n\n        /* When dialog is shown again, remove all mods */\n        sel.on(\"hide.bs.modal.dialog-wait\", function() {\n            clear_wait(sel);\n        });\n\n        /*\n         * There is no way to remove a callback from a promise\n         * so we have to be careful to only react if still\n         * processing the same promise.\n         */\n        function restore() {\n            var state, data = sel.data(\"dialog-wait\");\n            if (data && data.promise === promise) {\n                clear_wait(sel);\n                state = promise.state();\n                if (cancelled || (state == \"resolved\" && data.handle))\n                    sel.modal('hide');\n                else if (state == \"rejected\" && data.handle)\n                    display_errors(sel, [ arguments[0] ]);\n            }\n        }\n\n        function update(arg) {\n            var data = sel.data(\"dialog-wait\");\n            if (data && data.promise === promise) {\n                if (typeof arg !== \"string\")\n                    arg = \"\";\n                message.text(arg);\n            }\n        }\n\n        promise\n            .always(restore)\n            .progress(update);\n\n        return sel;\n    }\n\n    $.fn.dialog = function dialog(action /* ... */) {\n        if (action === \"failure\")\n            return display_errors(this, Array.prototype.slice.call(arguments, 1));\n        else if (action === \"wait\")\n            return display_wait(this, arguments[1]);\n        else if (action === \"promise\")\n            return display_wait(this, arguments[1], true);\n        else\n            console.warn(\"unknown dialog action: \" + action);\n    };\n\n    window.addEventListener(\"hashchange\", function() {\n        $(\".modal\").modal(\"hide\");\n    });\n\n    /*\n     * OnOff switch pattern\n     */\n\n    function onoff_refresh(sel) {\n        /* During testing, no Cockpit dependency */\n        var _ = cockpit.gettext || function(x) { return x; };\n\n        sel = sel.find(\".btn-onoff-ct\").andSelf().filter(\".btn-onoff-ct\");\n        sel.each(function(x, el) {\n            var self = $(el)\n                .attr(\"data-toggle\", \"buttons\")\n                .addClass(\"btn-group\");\n            var value = self.onoff(\"value\");\n            var buttons = self.find(\".btn\");\n            var name = self.find(\"input\").first().attr(\"name\") || unique();\n            var i, input, text;\n            for (i = buttons.length; i < 2; i++) {\n                input = $('<input type=\"radio\" autocomplete=\"off\">');\n                text = document.createTextNode(i === 0 ? _(\"On\") : _(\"Off\"));\n                self.append($('<label class=\"btn\">').append(input, text));\n                buttons = null;\n            }\n            buttons = buttons || self.find(\".btn\");\n            buttons.find(\"input\").attr(\"name\", name);\n            onoff_change(self, !!value);\n        });\n        return sel;\n    }\n\n    function onoff_value(sel) {\n        return sel.find(\".btn\").first().hasClass(\"active\");\n    }\n\n    function onoff_change(sel, value) {\n        return sel.each(function(i, el) {\n            var buttons = $(el).find(\".btn\");\n            buttons.first().toggleClass(\"active\", !!value).find(\"input\").prop(\"checked\", !!value);\n            buttons.last().toggleClass(\"active\", !value).find(\"input\").prop(\"checked\", !value);\n        });\n    }\n\n    $.fn.onoff = function onoff(action /* ... */) {\n        if (arguments.length === 0 || action == \"refresh\") {\n            return onoff_refresh(this);\n        } else if (action === \"value\") {\n            if (arguments.length === 1)\n                return onoff_value(this);\n            else\n                return onoff_change(this, arguments[1]);\n        } else if (action == \"disabled\") {\n            return this.find(\".btn\").toggleClass(\"disabled\", arguments[1]);\n        } else {\n            console.warn(\"unknown switch action: \" + action);\n        }\n    };\n\n    /* ----------------------------------------------------------------------------\n     * Sliders\n     *\n     * <div class=\"slider\" value=\"0.5\">\n     *    <div class=\"slider-bar\">\n     *        <div class=\"slider-thumb\"></div>\n     *    </div>\n     *    <div class=\"slider-bar\">\n     *        <!-- optional left overs -->\n     *    </div>\n     * </div>\n     *\n     * A slider control. The first div.slider-bar is the one that is resized.\n     * The value will be bounded between 0 and 1 as a floating point number.\n     *\n     * The following div.slider-bar if present is resized to fill the remainder\n     * of the slider if not given a specific size. You can put more div.slider-bar\n     * inside it to reflect squashing other prevous allocations.\n     *\n     * If the following div.slider-bar have a width specified, then the\n     * slider supports the concept of overflowing. If the slider overflows\n     * it will get the .slider-warning class and go a bit red.\n     *\n     * On document creation any div.slider are automatically turned into\n     * Bar graphs.\n     *\n     * Slider has the following extra read/write properties:\n     *\n     * .value: the floating point value the slider is set to.\n     * .disabled: whether to display slider as disabled and refuse interacton.\n     *\n     * Slider has this event:\n     *\n     * on('change'): fired when the slider changes, passes value as additional arg.\n     */\n\n    function resize_flex(slider, flex, total, part) {\n        var value = 0;\n        if (part > total)\n            value = 1;\n        else if (part < 0 || isNaN(part))\n            value = 0;\n        else if (!isNaN(total) && total > 0 && part >= 0)\n            value = (part / total);\n        $(flex).css('width', (value * 100) + \"%\").\n            next(\"div\").css('margin-left', $(flex).css('width'));\n\n        /* Set the property and the attribute */\n        slider.value = value;\n    }\n\n    function update_value(slider) {\n        resize_flex(slider, $(slider).children(\"div.slider-bar\").first()[0], 1, slider.value);\n    }\n\n    function check_overflow(slider) {\n        $(slider).toggleClass(\"slider-warning\",\n                              slider.offsetWidth < slider.scrollWidth);\n    }\n\n    function setup_slider(slider) {\n        $(slider).attr('unselectable', 'on');\n\n        Object.defineProperty(slider, \"value\", {\n            get: function() {\n                return parseFloat(this.getAttribute(\"value\"));\n            },\n            set: function(v) {\n                var s = String(v);\n                if (s != this.getAttribute(\"value\")) {\n                    this.setAttribute(\"value\", v);\n                    update_value(slider);\n                    check_overflow(slider);\n                }\n            }\n        });\n\n        Object.defineProperty(slider, \"disabled\", {\n            get: function() {\n                if (!this.hasAttribute(\"disabled\"))\n                    return false;\n                return this.getAttribute(\"disabled\").toLowerCase() != \"false\";\n            },\n            set: function(v) {\n                this.setAttribute(\"disabled\", v ? \"true\" : \"false\");\n            }\n        });\n\n        update_value(slider);\n        check_overflow(slider);\n\n        $(slider).on(\"change\", function() {\n            update_value(slider);\n            $(slider).toggleClass(\"slider-disabled\", slider.disabled);\n        });\n\n        if (slider.disabled)\n            $(slider).addClass(\"slider-disabled\");\n\n        $(slider).on(\"mousedown\", function(ev) {\n            if (slider.disabled)\n                return true; /* default action */\n            var flex;\n            var offset = $(slider).offset().left;\n            if ($(ev.target).hasClass(\"slider-thumb\")) {\n                var hitx  = (ev.offsetX || ev.clientX - $(ev.target).offset().left);\n                offset += (hitx - $(ev.target).outerWidth() / 2);\n                flex = $(ev.target).parent()[0];\n            } else {\n                flex = $(slider).children(\"div.slider-bar\").first()[0];\n                resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n                $(slider).trigger(\"change\", [slider.value]);\n                check_overflow(slider);\n            }\n\n            $(document).\n                on(\"mousemove.slider\", function(ev) {\n                    resize_flex(slider, flex, $(slider).width(), (ev.pageX - offset));\n                    $(slider).trigger(\"change\", [slider.value]);\n                    check_overflow(slider);\n                    return false;\n                }).\n                on(\"mouseup.slider\", function(ev) {\n                    $(document).\n                        off(\"mousemove.slider\").\n                        off(\"mouseup.slider\");\n                    return false;\n                });\n            return false; /* no default action */\n        });\n    }\n\n    function setup_sliders() {\n        $(\"div.slider\").each(function() {\n            setup_slider(this);\n        });\n    }\n\n    $.fn.slider = function Slider(action) {\n        var sel = this;\n        if (arguments.length === 0 || action == \"refresh\") {\n            sel.each(function() {\n                setup_slider(this);\n            });\n            return sel;\n        } else {\n            console.warn(\"unknown slider action: \" + action);\n        }\n    };\n\n    $(document).ready(setup_sliders);\n\n    /* -----------------------------------------------------------------------------\n     * Privileged UI actions.\n     */\n\n    // placement is optional, \"top\", \"left\", \"bottom\", \"right\"\n    $.fn.update_privileged = function update_privileged(perm, denied_message, placement) {\n        var allowed = (perm.allowed !== false);\n        var selector = this;\n\n        selector.each(function() {\n            // preserve old title first time to use when allowed\n            // activate tooltip\n            var allowed_key = 'allowed-title';\n            if (typeof $(this).data(allowed_key) === 'undefined' ||\n                   $(this).data(allowed_key) === false)\n                $(this).data(allowed_key, $(this).attr('title') || \"\");\n\n            var options = { html: true };\n            if (placement)\n                options['placement'] = placement;\n\n            $(this).tooltip(options);\n\n            if ($(this).hasClass(\"disabled\") === allowed) {\n              $(this).toggleClass(\"disabled\", !allowed)\n                   .attr('data-original-title', null);\n\n              if (allowed)\n                  $(this).attr('title', $(this).data(allowed_key));\n              else\n                  $(this).attr('title', denied_message);\n              $(this).tooltip('fixTitle');\n            }\n        });\n\n        return selector;\n    };\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/lib/patterns.js\n// module id = 27\n// module chunks = 0","'use strict';\n\n/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2015 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n(function() {\n    \"use strict\";\n\n    var $ = require(\"jquery\");\n    var cockpit = require(\"cockpit\");\n\n    var _ = cockpit.gettext;\n\n    /* PERMISSIONS\n     */\n\n    function update_privileged_ui(perm, selector, denied_message) {\n        var allowed = (perm.allowed !== false);\n        $(selector).each(function() {\n            // preserve old title first time to use when allowed\n            // activate tooltip\n            var allowed_key = 'allowed-title';\n            if (typeof $(this).data(allowed_key) === 'undefined' ||\n                $(this).data(allowed_key) === false)\n                $(this).data(allowed_key, $(this).attr('title') || \"\");\n            $(this).tooltip({ html: true });\n\n            if ($(this).hasClass(\"disabled\") === allowed) {\n                $(this).toggleClass(\"disabled\", !allowed)\n                    .attr('data-original-title', null);\n\n                if (allowed)\n                    $(this).attr('title', $(this).data(allowed_key));\n                else\n                    $(this).attr('title', denied_message);\n                $(this).tooltip('fixTitle');\n            }\n        });\n    }\n\n    var permission = cockpit.permission({ admin: true });\n\n    function update_storage_privileged() {\n        update_privileged_ui(permission, \".storage-privileged\",\n                             cockpit.format(\n                                 _(\"The user <b>$0</b> is not permitted to manage storage\"),\n                                 permission.user ? permission.user.name : ''));\n    }\n\n    $(permission).on(\"changed\", update_storage_privileged);\n\n    module.exports = {\n        permission: permission,\n        update: update_storage_privileged\n    };\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../pkg/storaged/permissions.js\n// module id = 30\n// module chunks = 0","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2017 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport cockpit from \"cockpit\";\nimport React from \"react\";\n\nimport utils from \"./utils.js\";\nimport { BlockDetails } from \"./block-details.jsx\";\nimport { DriveDetails } from \"./drive-details.jsx\";\nimport { VGroupDetails } from \"./vgroup-details.jsx\";\nimport { MDRaidDetails } from \"./mdraid-details.jsx\";\nimport { Jobs } from \"./job-views.jsx\";\n\nconst _ = cockpit.gettext;\n\nexport class StdDetailsLayout extends React.Component {\n    render() {\n        if (this.props.sidebar) {\n            return (\n                <div>\n                    <div id=\"detail-header\" className=\"col-md-12\">\n                        { this.props.alert }\n                        { this.props.header }\n                    </div>\n                    <div id=\"detail-sidebar\" className=\"col-md-4 col-lg-3 col-md-push-8 col-lg-push-9\">\n                        { this.props.sidebar }\n                    </div>\n                    <div className=\"col-md-8 col-lg-9 col-md-pull-4 col-lg-pull-3\">\n                        <div id=\"detail-content\">\n                            { this.props.content }\n                        </div>\n                        <Jobs jobs={this.props.jobs}/>\n                    </div>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <div id=\"detail-header\" className=\"col-md-12\">\n                        { this.props.alert }\n                        { this.props.header }\n                    </div>\n                    <div className=\"col-md-12\">\n                        <div id=\"detail-content\">\n                            { this.props.content }\n                        </div>\n                        <Jobs jobs={this.props.jobs}/>\n                    </div>\n                </div>\n            );\n        }\n\n    }\n}\n\nclass Details extends React.Component {\n    constructor() {\n        super();\n        this.on_client_changed = () => { this.setState({}); };\n    }\n\n    componentDidMount() {\n        this.props.client.addEventListener(\"changed\", this.on_client_changed);\n    }\n\n    componentWillUnmount() {\n        this.props.client.removeEventListener(\"changed\", this.on_client_changed);\n    }\n\n    render() {\n        var client = this.props.client;\n        var jobs = this.props.jobs;\n\n        function go_up(event) {\n            if (!event || event.button !== 0)\n                return;\n            cockpit.location.go(\"/\");\n        }\n\n        var body = null;\n        var name = this.props.name;\n        if (this.props.type == \"block\") {\n            var block = client.slashdevs_block[this.props.name];\n            var drive = block && client.drives[block.Drive];\n\n            if (drive) {\n                name = utils.drive_name(drive);\n                body = <DriveDetails client={client} jobs={jobs} drive={drive}/>;\n            } else if (block) {\n                name = utils.block_name(block);\n                body = <BlockDetails client={client} jobs={jobs} block={block}/>;\n            }\n        } else if (this.props.type == \"vgroup\") {\n            var vgroup = client.vgnames_vgroup[this.props.name];\n            if (vgroup) {\n                name = vgroup.Name;\n                body =  <VGroupDetails client={client} jobs={jobs} vgroup={vgroup}/>;\n            }\n        } else if (this.props.type == \"mdraid\") {\n            var mdraid = client.uuids_mdraid[this.props.name];\n            if (mdraid) {\n                name = utils.mdraid_name(mdraid);\n                body =  <MDRaidDetails client={client} jobs={jobs} mdraid={mdraid}/>;\n            }\n        }\n\n        if (!body)\n            body = <div className=\"col-md-12\">{_(\"Not found\")}</div>;\n\n        return (\n            <div>\n                <div className=\"col-md-12\">\n                    <ol className=\"breadcrumb\">\n                        <li><a onClick={go_up}>{_(\"Storage\")}</a></li>\n                        <li className=\"active\">{name}</li>\n                    </ol>\n                </div>\n                {body}\n            </div>\n        );\n    }\n}\n\nexport function init(client, jobs) {\n    var page = document.getElementById(\"storage-detail\");\n\n    function show(type, name) {\n        React.render(<Details client={client} jobs={jobs} type={type} name={name}/>, page);\n        page.style.display = \"block\";\n    }\n\n    function hide() {\n        page.style.display = \"none\";\n        React.unmountComponentAtNode(page);\n    }\n\n    return { show: show, hide: hide };\n}\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/storaged/details.jsx","/*!\n * react-lite.js v0.15.39\n * (c) 2017 Jade Gu\n * Released under the MIT License.\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  global.React = factory();\n}(this, function () { 'use strict';\n\n  var HTML_KEY = 'dangerouslySetInnerHTML';\n  var SVGNamespaceURI = 'http://www.w3.org/2000/svg';\n  var COMPONENT_ID = 'liteid';\n  var VELEMENT = 2;\n  var VSTATELESS = 3;\n  var VCOMPONENT = 4;\n  var VCOMMENT = 5;\n  var ELEMENT_NODE_TYPE = 1;\n  var DOC_NODE_TYPE = 9;\n  var DOCUMENT_FRAGMENT_NODE_TYPE = 11;\n\n  /**\r\n   * current stateful component's refs property\r\n   * will attach to every vnode created by calling component.render method\r\n   */\n  var refs = null;\n\n  function createVnode(vtype, type, props, key, ref) {\n      var vnode = {\n          vtype: vtype,\n          type: type,\n          props: props,\n          refs: refs,\n          key: key,\n          ref: ref\n      };\n      if (vtype === VSTATELESS || vtype === VCOMPONENT) {\n          vnode.uid = getUid();\n      }\n      return vnode;\n  }\n\n  function initVnode(vnode, parentContext, namespaceURI) {\n      var vtype = vnode.vtype;\n\n      var node = null;\n      if (!vtype) {\n          // init text\n          node = document.createTextNode(vnode);\n      } else if (vtype === VELEMENT) {\n          // init element\n          node = initVelem(vnode, parentContext, namespaceURI);\n      } else if (vtype === VCOMPONENT) {\n          // init stateful component\n          node = initVcomponent(vnode, parentContext, namespaceURI);\n      } else if (vtype === VSTATELESS) {\n          // init stateless component\n          node = initVstateless(vnode, parentContext, namespaceURI);\n      } else if (vtype === VCOMMENT) {\n          // init comment\n          node = document.createComment('react-text: ' + (vnode.uid || getUid()));\n      }\n      return node;\n  }\n\n  function updateVnode(vnode, newVnode, node, parentContext) {\n      var vtype = vnode.vtype;\n\n      if (vtype === VCOMPONENT) {\n          return updateVcomponent(vnode, newVnode, node, parentContext);\n      }\n\n      if (vtype === VSTATELESS) {\n          return updateVstateless(vnode, newVnode, node, parentContext);\n      }\n\n      // ignore VCOMMENT and other vtypes\n      if (vtype !== VELEMENT) {\n          return node;\n      }\n\n      var oldHtml = vnode.props[HTML_KEY] && vnode.props[HTML_KEY].__html;\n      if (oldHtml != null) {\n          updateVelem(vnode, newVnode, node, parentContext);\n          initVchildren(newVnode, node, parentContext);\n      } else {\n          updateVChildren(vnode, newVnode, node, parentContext);\n          updateVelem(vnode, newVnode, node, parentContext);\n      }\n      return node;\n  }\n\n  function updateVChildren(vnode, newVnode, node, parentContext) {\n      var patches = {\n          removes: [],\n          updates: [],\n          creates: []\n      };\n      diffVchildren(patches, vnode, newVnode, node, parentContext);\n      flatEach(patches.removes, applyDestroy);\n      flatEach(patches.updates, applyUpdate);\n      flatEach(patches.creates, applyCreate);\n  }\n\n  function applyUpdate(data) {\n      if (!data) {\n          return;\n      }\n      var vnode = data.vnode;\n      var newNode = data.node;\n\n      // update\n      if (!data.shouldIgnore) {\n          if (!vnode.vtype) {\n              newNode.replaceData(0, newNode.length, data.newVnode);\n          } else if (vnode.vtype === VELEMENT) {\n              updateVelem(vnode, data.newVnode, newNode, data.parentContext);\n          } else if (vnode.vtype === VSTATELESS) {\n              newNode = updateVstateless(vnode, data.newVnode, newNode, data.parentContext);\n          } else if (vnode.vtype === VCOMPONENT) {\n              newNode = updateVcomponent(vnode, data.newVnode, newNode, data.parentContext);\n          }\n      }\n\n      // re-order\n      var currentNode = newNode.parentNode.childNodes[data.index];\n      if (currentNode !== newNode) {\n          newNode.parentNode.insertBefore(newNode, currentNode);\n      }\n      return newNode;\n  }\n\n  function applyDestroy(data) {\n      destroyVnode(data.vnode, data.node);\n      data.node.parentNode.removeChild(data.node);\n  }\n\n  function applyCreate(data) {\n      var node = initVnode(data.vnode, data.parentContext, data.parentNode.namespaceURI);\n      data.parentNode.insertBefore(node, data.parentNode.childNodes[data.index]);\n  }\n\n  /**\r\n   * Only vnode which has props.children need to call destroy function\r\n   * to check whether subTree has component that need to call lify-cycle method and release cache.\r\n   */\n\n  function destroyVnode(vnode, node) {\n      var vtype = vnode.vtype;\n\n      if (vtype === VELEMENT) {\n          // destroy element\n          destroyVelem(vnode, node);\n      } else if (vtype === VCOMPONENT) {\n          // destroy state component\n          destroyVcomponent(vnode, node);\n      } else if (vtype === VSTATELESS) {\n          // destroy stateless component\n          destroyVstateless(vnode, node);\n      }\n  }\n\n  function initVelem(velem, parentContext, namespaceURI) {\n      var type = velem.type;\n      var props = velem.props;\n\n      var node = null;\n\n      if (type === 'svg' || namespaceURI === SVGNamespaceURI) {\n          node = document.createElementNS(SVGNamespaceURI, type);\n          namespaceURI = SVGNamespaceURI;\n      } else {\n          node = document.createElement(type);\n      }\n\n      initVchildren(velem, node, parentContext);\n\n      var isCustomComponent = type.indexOf('-') >= 0 || props.is != null;\n      setProps(node, props, isCustomComponent);\n\n      if (velem.ref != null) {\n          addItem(pendingRefs, velem);\n          addItem(pendingRefs, node);\n      }\n\n      return node;\n  }\n\n  function initVchildren(velem, node, parentContext) {\n      var vchildren = node.vchildren = getFlattenChildren(velem);\n      var namespaceURI = node.namespaceURI;\n      for (var i = 0, len = vchildren.length; i < len; i++) {\n          node.appendChild(initVnode(vchildren[i], parentContext, namespaceURI));\n      }\n  }\n\n  function getFlattenChildren(vnode) {\n      var children = vnode.props.children;\n\n      var vchildren = [];\n      if (isArr(children)) {\n          flatEach(children, collectChild, vchildren);\n      } else {\n          collectChild(children, vchildren);\n      }\n      return vchildren;\n  }\n\n  function collectChild(child, children) {\n      if (child != null && typeof child !== 'boolean') {\n          if (!child.vtype) {\n              // convert immutablejs data\n              if (child.toJS) {\n                  child = child.toJS();\n                  if (isArr(child)) {\n                      flatEach(child, collectChild, children);\n                  } else {\n                      collectChild(child, children);\n                  }\n                  return;\n              }\n              child = '' + child;\n          }\n          children[children.length] = child;\n      }\n  }\n\n  function diffVchildren(patches, vnode, newVnode, node, parentContext) {\n      if (!node.vchildren) return; // react-lite hasn't seen this DOM node before\n\n      var childNodes = node.childNodes;\n      var vchildren = node.vchildren;\n\n      var newVchildren = node.vchildren = getFlattenChildren(newVnode);\n      var vchildrenLen = vchildren.length;\n      var newVchildrenLen = newVchildren.length;\n\n      if (vchildrenLen === 0) {\n          if (newVchildrenLen > 0) {\n              for (var i = 0; i < newVchildrenLen; i++) {\n                  addItem(patches.creates, {\n                      vnode: newVchildren[i],\n                      parentNode: node,\n                      parentContext: parentContext,\n                      index: i\n                  });\n              }\n          }\n          return;\n      } else if (newVchildrenLen === 0) {\n          for (var i = 0; i < vchildrenLen; i++) {\n              addItem(patches.removes, {\n                  vnode: vchildren[i],\n                  node: childNodes[i]\n              });\n          }\n          return;\n      }\n\n      var updates = Array(newVchildrenLen);\n      var removes = null;\n      var creates = null;\n\n      // isEqual\n      for (var i = 0; i < vchildrenLen; i++) {\n          var _vnode = vchildren[i];\n          for (var j = 0; j < newVchildrenLen; j++) {\n              if (updates[j]) {\n                  continue;\n              }\n              var _newVnode = newVchildren[j];\n              if (_vnode === _newVnode) {\n                  updates[j] = {\n                      shouldIgnore: shouldIgnoreUpdate(node),\n                      vnode: _vnode,\n                      newVnode: _newVnode,\n                      node: childNodes[i],\n                      parentContext: parentContext,\n                      index: j\n                  };\n                  vchildren[i] = null;\n                  break;\n              }\n          }\n      }\n\n      // isSimilar\n      for (var i = 0; i < vchildrenLen; i++) {\n          var _vnode2 = vchildren[i];\n          if (_vnode2 === null) {\n              continue;\n          }\n          var shouldRemove = true;\n          for (var j = 0; j < newVchildrenLen; j++) {\n              if (updates[j]) {\n                  continue;\n              }\n              var _newVnode2 = newVchildren[j];\n              if (_newVnode2.type === _vnode2.type && _newVnode2.key === _vnode2.key && _newVnode2.refs === _vnode2.refs) {\n                  updates[j] = {\n                      vnode: _vnode2,\n                      newVnode: _newVnode2,\n                      node: childNodes[i],\n                      parentContext: parentContext,\n                      index: j\n                  };\n                  shouldRemove = false;\n                  break;\n              }\n          }\n          if (shouldRemove) {\n              if (!removes) {\n                  removes = [];\n              }\n              addItem(removes, {\n                  vnode: _vnode2,\n                  node: childNodes[i]\n              });\n          }\n      }\n\n      for (var i = 0; i < newVchildrenLen; i++) {\n          var item = updates[i];\n          if (!item) {\n              if (!creates) {\n                  creates = [];\n              }\n              addItem(creates, {\n                  vnode: newVchildren[i],\n                  parentNode: node,\n                  parentContext: parentContext,\n                  index: i\n              });\n          } else if (item.vnode.vtype === VELEMENT) {\n              diffVchildren(patches, item.vnode, item.newVnode, item.node, item.parentContext);\n          }\n      }\n\n      if (removes) {\n          addItem(patches.removes, removes);\n      }\n      if (creates) {\n          addItem(patches.creates, creates);\n      }\n      addItem(patches.updates, updates);\n  }\n\n  function updateVelem(velem, newVelem, node) {\n      var isCustomComponent = velem.type.indexOf('-') >= 0 || velem.props.is != null;\n      patchProps(node, velem.props, newVelem.props, isCustomComponent);\n      if (velem.ref !== newVelem.ref) {\n          detachRef(velem.refs, velem.ref, node);\n          attachRef(newVelem.refs, newVelem.ref, node);\n      }\n      return node;\n  }\n\n  function destroyVelem(velem, node) {\n      var props = velem.props;\n      var vchildren = node.vchildren;\n      var childNodes = node.childNodes;\n\n      if (vchildren) {\n          for (var i = 0, len = vchildren.length; i < len; i++) {\n              destroyVnode(vchildren[i], childNodes[i]);\n          }\n      }\n      detachRef(velem.refs, velem.ref, node);\n      node.eventStore = node.vchildren = null;\n  }\n\n  function initVstateless(vstateless, parentContext, namespaceURI) {\n      var vnode = renderVstateless(vstateless, parentContext);\n      var node = initVnode(vnode, parentContext, namespaceURI);\n      node.cache = node.cache || {};\n      node.cache[vstateless.uid] = vnode;\n      return node;\n  }\n\n  function updateVstateless(vstateless, newVstateless, node, parentContext) {\n      var uid = vstateless.uid;\n      var vnode = node.cache[uid];\n      delete node.cache[uid];\n      var newVnode = renderVstateless(newVstateless, parentContext);\n      var newNode = compareTwoVnodes(vnode, newVnode, node, parentContext);\n      newNode.cache = newNode.cache || {};\n      newNode.cache[newVstateless.uid] = newVnode;\n      if (newNode !== node) {\n          syncCache(newNode.cache, node.cache, newNode);\n      }\n      return newNode;\n  }\n\n  function destroyVstateless(vstateless, node) {\n      var uid = vstateless.uid;\n      var vnode = node.cache[uid];\n      delete node.cache[uid];\n      destroyVnode(vnode, node);\n  }\n\n  function renderVstateless(vstateless, parentContext) {\n      var factory = vstateless.type;\n      var props = vstateless.props;\n\n      var componentContext = getContextByTypes(parentContext, factory.contextTypes);\n      var vnode = factory(props, componentContext);\n      if (vnode && vnode.render) {\n          vnode = vnode.render();\n      }\n      if (vnode === null || vnode === false) {\n          vnode = createVnode(VCOMMENT);\n      } else if (!vnode || !vnode.vtype) {\n          throw new Error('@' + factory.name + '#render:You may have returned undefined, an array or some other invalid object');\n      }\n      return vnode;\n  }\n\n  function initVcomponent(vcomponent, parentContext, namespaceURI) {\n      var Component = vcomponent.type;\n      var props = vcomponent.props;\n      var uid = vcomponent.uid;\n\n      var componentContext = getContextByTypes(parentContext, Component.contextTypes);\n      var component = new Component(props, componentContext);\n      var updater = component.$updater;\n      var cache = component.$cache;\n\n      cache.parentContext = parentContext;\n      updater.isPending = true;\n      component.props = component.props || props;\n      component.context = component.context || componentContext;\n      if (component.componentWillMount) {\n          component.componentWillMount();\n          component.state = updater.getState();\n      }\n      var vnode = renderComponent(component);\n      var node = initVnode(vnode, getChildContext(component, parentContext), namespaceURI);\n      node.cache = node.cache || {};\n      node.cache[uid] = component;\n      cache.vnode = vnode;\n      cache.node = node;\n      cache.isMounted = true;\n      addItem(pendingComponents, component);\n\n      if (vcomponent.ref != null) {\n          addItem(pendingRefs, vcomponent);\n          addItem(pendingRefs, component);\n      }\n\n      return node;\n  }\n\n  function updateVcomponent(vcomponent, newVcomponent, node, parentContext) {\n      var uid = vcomponent.uid;\n      var component = node.cache[uid];\n      var updater = component.$updater;\n      var cache = component.$cache;\n      var Component = newVcomponent.type;\n      var nextProps = newVcomponent.props;\n\n      var componentContext = getContextByTypes(parentContext, Component.contextTypes);\n      delete node.cache[uid];\n      node.cache[newVcomponent.uid] = component;\n      cache.parentContext = parentContext;\n      if (component.componentWillReceiveProps) {\n          var needToggleIsPending = !updater.isPending;\n          if (needToggleIsPending) updater.isPending = true;\n          component.componentWillReceiveProps(nextProps, componentContext);\n          if (needToggleIsPending) updater.isPending = false;\n      }\n\n      if (vcomponent.ref !== newVcomponent.ref) {\n          detachRef(vcomponent.refs, vcomponent.ref, component);\n          attachRef(newVcomponent.refs, newVcomponent.ref, component);\n      }\n\n      updater.emitUpdate(nextProps, componentContext);\n\n      return cache.node;\n  }\n\n  function destroyVcomponent(vcomponent, node) {\n      var uid = vcomponent.uid;\n      var component = node.cache[uid];\n      var cache = component.$cache;\n      delete node.cache[uid];\n      detachRef(vcomponent.refs, vcomponent.ref, component);\n      component.setState = component.forceUpdate = noop;\n      if (component.componentWillUnmount) {\n          component.componentWillUnmount();\n      }\n      destroyVnode(cache.vnode, node);\n      delete component.setState;\n      cache.isMounted = false;\n      cache.node = cache.parentContext = cache.vnode = component.refs = component.context = null;\n  }\n\n  function getContextByTypes(curContext, contextTypes) {\n      var context = {};\n      if (!contextTypes || !curContext) {\n          return context;\n      }\n      for (var key in contextTypes) {\n          if (contextTypes.hasOwnProperty(key)) {\n              context[key] = curContext[key];\n          }\n      }\n      return context;\n  }\n\n  function renderComponent(component, parentContext) {\n      refs = component.refs;\n      var vnode = component.render();\n      if (vnode === null || vnode === false) {\n          vnode = createVnode(VCOMMENT);\n      } else if (!vnode || !vnode.vtype) {\n          throw new Error('@' + component.constructor.name + '#render:You may have returned undefined, an array or some other invalid object');\n      }\n      refs = null;\n      return vnode;\n  }\n\n  function getChildContext(component, parentContext) {\n      if (component.getChildContext) {\n          var curContext = component.getChildContext();\n          if (curContext) {\n              parentContext = extend(extend({}, parentContext), curContext);\n          }\n      }\n      return parentContext;\n  }\n\n  var pendingComponents = [];\n  function clearPendingComponents() {\n      var len = pendingComponents.length;\n      if (!len) {\n          return;\n      }\n      var components = pendingComponents;\n      pendingComponents = [];\n      var i = -1;\n      while (len--) {\n          var component = components[++i];\n          var updater = component.$updater;\n          if (component.componentDidMount) {\n              component.componentDidMount();\n          }\n          updater.isPending = false;\n          updater.emitUpdate();\n      }\n  }\n\n  var pendingRefs = [];\n  function clearPendingRefs() {\n      var len = pendingRefs.length;\n      if (!len) {\n          return;\n      }\n      var list = pendingRefs;\n      pendingRefs = [];\n      for (var i = 0; i < len; i += 2) {\n          var vnode = list[i];\n          var refValue = list[i + 1];\n          attachRef(vnode.refs, vnode.ref, refValue);\n      }\n  }\n\n  function clearPending() {\n      clearPendingRefs();\n      clearPendingComponents();\n  }\n\n  function compareTwoVnodes(vnode, newVnode, node, parentContext) {\n      var newNode = node;\n      if (newVnode == null) {\n          // remove\n          destroyVnode(vnode, node);\n          node.parentNode.removeChild(node);\n      } else if (vnode.type !== newVnode.type || vnode.key !== newVnode.key) {\n          // replace\n          destroyVnode(vnode, node);\n          newNode = initVnode(newVnode, parentContext, node.namespaceURI);\n          node.parentNode.replaceChild(newNode, node);\n      } else if (vnode !== newVnode || parentContext) {\n          // same type and same key -> update\n          newNode = updateVnode(vnode, newVnode, node, parentContext);\n      }\n      return newNode;\n  }\n\n  function getDOMNode() {\n      return this;\n  }\n\n  function attachRef(refs, refKey, refValue) {\n      if (refKey == null || !refValue) {\n          return;\n      }\n      if (refValue.nodeName && !refValue.getDOMNode) {\n          // support react v0.13 style: this.refs.myInput.getDOMNode()\n          refValue.getDOMNode = getDOMNode;\n      }\n      if (isFn(refKey)) {\n          refKey(refValue);\n      } else if (refs) {\n          refs[refKey] = refValue;\n      }\n  }\n\n  function detachRef(refs, refKey, refValue) {\n      if (refKey == null) {\n          return;\n      }\n      if (isFn(refKey)) {\n          refKey(null);\n      } else if (refs && refs[refKey] === refValue) {\n          delete refs[refKey];\n      }\n  }\n\n  function syncCache(cache, oldCache, node) {\n      for (var key in oldCache) {\n          if (!oldCache.hasOwnProperty(key)) {\n              continue;\n          }\n          var value = oldCache[key];\n          cache[key] = value;\n\n          // is component, update component.$cache.node\n          if (value.forceUpdate) {\n              value.$cache.node = node;\n          }\n      }\n  }\n\n  function shouldIgnoreUpdate(node) {\n      var vchildren = node.vchildren;\n      var children = node.children;\n\n      if (vchildren) {\n          for (var i = 0; i < vchildren.length; i++) {\n              var vchild = vchildren[i];\n              if (vchild.vtype === VCOMPONENT || vchild.vtype === VSTATELESS) {\n                  if (vchild.type.contextTypes) {\n                      return false;\n                  }\n              }\n          }\n      }\n\n      if (children) {\n          for (var i = 0; i < children.length; i++) {\n              if (!shouldIgnoreUpdate(children[i])) {\n                  return false;\n              }\n          }\n      }\n\n      return true;\n  }\n\n  var updateQueue = {\n  \tupdaters: [],\n  \tisPending: false,\n  \tadd: function add(updater) {\n  \t\taddItem(this.updaters, updater);\n  \t},\n  \tbatchUpdate: function batchUpdate() {\n  \t\tif (this.isPending) {\n  \t\t\treturn;\n  \t\t}\n  \t\tthis.isPending = true;\n  \t\t/*\r\n     each updater.update may add new updater to updateQueue\r\n     clear them with a loop\r\n     event bubbles from bottom-level to top-level\r\n     reverse the updater order can merge some props and state and reduce the refresh times\r\n     see Updater.update method below to know why\r\n    */\n  \t\tvar updaters = this.updaters;\n\n  \t\tvar updater = undefined;\n  \t\twhile (updater = updaters.pop()) {\n  \t\t\tupdater.updateComponent();\n  \t\t}\n  \t\tthis.isPending = false;\n  \t}\n  };\n\n  function Updater(instance) {\n  \tthis.instance = instance;\n  \tthis.pendingStates = [];\n  \tthis.pendingCallbacks = [];\n  \tthis.isPending = false;\n  \tthis.nextProps = this.nextContext = null;\n  \tthis.clearCallbacks = this.clearCallbacks.bind(this);\n  }\n\n  Updater.prototype = {\n  \temitUpdate: function emitUpdate(nextProps, nextContext) {\n  \t\tthis.nextProps = nextProps;\n  \t\tthis.nextContext = nextContext;\n  \t\t// receive nextProps!! should update immediately\n  \t\tnextProps || !updateQueue.isPending ? this.updateComponent() : updateQueue.add(this);\n  \t},\n  \tupdateComponent: function updateComponent() {\n  \t\tvar instance = this.instance;\n  \t\tvar pendingStates = this.pendingStates;\n  \t\tvar nextProps = this.nextProps;\n  \t\tvar nextContext = this.nextContext;\n\n  \t\tif (nextProps || pendingStates.length > 0) {\n  \t\t\tnextProps = nextProps || instance.props;\n  \t\t\tnextContext = nextContext || instance.context;\n  \t\t\tthis.nextProps = this.nextContext = null;\n  \t\t\t// merge the nextProps and nextState and update by one time\n  \t\t\tshouldUpdate(instance, nextProps, this.getState(), nextContext, this.clearCallbacks);\n  \t\t}\n  \t},\n  \taddState: function addState(nextState) {\n  \t\tif (nextState) {\n  \t\t\taddItem(this.pendingStates, nextState);\n  \t\t\tif (!this.isPending) {\n  \t\t\t\tthis.emitUpdate();\n  \t\t\t}\n  \t\t}\n  \t},\n  \treplaceState: function replaceState(nextState) {\n  \t\tvar pendingStates = this.pendingStates;\n\n  \t\tpendingStates.pop();\n  \t\t// push special params to point out should replace state\n  \t\taddItem(pendingStates, [nextState]);\n  \t},\n  \tgetState: function getState() {\n  \t\tvar instance = this.instance;\n  \t\tvar pendingStates = this.pendingStates;\n  \t\tvar state = instance.state;\n  \t\tvar props = instance.props;\n\n  \t\tif (pendingStates.length) {\n  \t\t\tstate = extend({}, state);\n  \t\t\tpendingStates.forEach(function (nextState) {\n  \t\t\t\tvar isReplace = isArr(nextState);\n  \t\t\t\tif (isReplace) {\n  \t\t\t\t\tnextState = nextState[0];\n  \t\t\t\t}\n  \t\t\t\tif (isFn(nextState)) {\n  \t\t\t\t\tnextState = nextState.call(instance, state, props);\n  \t\t\t\t}\n  \t\t\t\t// replace state\n  \t\t\t\tif (isReplace) {\n  \t\t\t\t\tstate = extend({}, nextState);\n  \t\t\t\t} else {\n  \t\t\t\t\textend(state, nextState);\n  \t\t\t\t}\n  \t\t\t});\n  \t\t\tpendingStates.length = 0;\n  \t\t}\n  \t\treturn state;\n  \t},\n  \tclearCallbacks: function clearCallbacks() {\n  \t\tvar pendingCallbacks = this.pendingCallbacks;\n  \t\tvar instance = this.instance;\n\n  \t\tif (pendingCallbacks.length > 0) {\n  \t\t\tthis.pendingCallbacks = [];\n  \t\t\tpendingCallbacks.forEach(function (callback) {\n  \t\t\t\treturn callback.call(instance);\n  \t\t\t});\n  \t\t}\n  \t},\n  \taddCallback: function addCallback(callback) {\n  \t\tif (isFn(callback)) {\n  \t\t\taddItem(this.pendingCallbacks, callback);\n  \t\t}\n  \t}\n  };\n  function Component(props, context) {\n  \tthis.$updater = new Updater(this);\n  \tthis.$cache = { isMounted: false };\n  \tthis.props = props;\n  \tthis.state = {};\n  \tthis.refs = {};\n  \tthis.context = context;\n  }\n\n  var ReactComponentSymbol = {};\n\n  Component.prototype = {\n  \tconstructor: Component,\n  \tisReactComponent: ReactComponentSymbol,\n  \t// getChildContext: _.noop,\n  \t// componentWillUpdate: _.noop,\n  \t// componentDidUpdate: _.noop,\n  \t// componentWillReceiveProps: _.noop,\n  \t// componentWillMount: _.noop,\n  \t// componentDidMount: _.noop,\n  \t// componentWillUnmount: _.noop,\n  \t// shouldComponentUpdate(nextProps, nextState) {\n  \t// \treturn true\n  \t// },\n  \tforceUpdate: function forceUpdate(callback) {\n  \t\tvar $updater = this.$updater;\n  \t\tvar $cache = this.$cache;\n  \t\tvar props = this.props;\n  \t\tvar state = this.state;\n  \t\tvar context = this.context;\n\n  \t\tif (!$cache.isMounted) {\n  \t\t\treturn;\n  \t\t}\n  \t\t// if updater is pending, add state to trigger nexttick update\n  \t\tif ($updater.isPending) {\n  \t\t\t$updater.addState(state);\n  \t\t\treturn;\n  \t\t}\n  \t\tvar nextProps = $cache.props || props;\n  \t\tvar nextState = $cache.state || state;\n  \t\tvar nextContext = $cache.context || context;\n  \t\tvar parentContext = $cache.parentContext;\n  \t\tvar node = $cache.node;\n  \t\tvar vnode = $cache.vnode;\n  \t\t$cache.props = $cache.state = $cache.context = null;\n  \t\t$updater.isPending = true;\n  \t\tif (this.componentWillUpdate) {\n  \t\t\tthis.componentWillUpdate(nextProps, nextState, nextContext);\n  \t\t}\n  \t\tthis.state = nextState;\n  \t\tthis.props = nextProps;\n  \t\tthis.context = nextContext;\n  \t\tvar newVnode = renderComponent(this);\n  \t\tvar newNode = compareTwoVnodes(vnode, newVnode, node, getChildContext(this, parentContext));\n  \t\tif (newNode !== node) {\n  \t\t\tnewNode.cache = newNode.cache || {};\n  \t\t\tsyncCache(newNode.cache, node.cache, newNode);\n  \t\t}\n  \t\t$cache.vnode = newVnode;\n  \t\t$cache.node = newNode;\n  \t\tclearPending();\n  \t\tif (this.componentDidUpdate) {\n  \t\t\tthis.componentDidUpdate(props, state, context);\n  \t\t}\n  \t\tif (callback) {\n  \t\t\tcallback.call(this);\n  \t\t}\n  \t\t$updater.isPending = false;\n  \t\t$updater.emitUpdate();\n  \t},\n  \tsetState: function setState(nextState, callback) {\n  \t\tvar $updater = this.$updater;\n\n  \t\t$updater.addCallback(callback);\n  \t\t$updater.addState(nextState);\n  \t},\n  \treplaceState: function replaceState(nextState, callback) {\n  \t\tvar $updater = this.$updater;\n\n  \t\t$updater.addCallback(callback);\n  \t\t$updater.replaceState(nextState);\n  \t},\n  \tgetDOMNode: function getDOMNode() {\n  \t\tvar node = this.$cache.node;\n  \t\treturn node && node.nodeName === '#comment' ? null : node;\n  \t},\n  \tisMounted: function isMounted() {\n  \t\treturn this.$cache.isMounted;\n  \t}\n  };\n\n  function shouldUpdate(component, nextProps, nextState, nextContext, callback) {\n  \tvar shouldComponentUpdate = true;\n  \tif (component.shouldComponentUpdate) {\n  \t\tshouldComponentUpdate = component.shouldComponentUpdate(nextProps, nextState, nextContext);\n  \t}\n  \tif (shouldComponentUpdate === false) {\n  \t\tcomponent.props = nextProps;\n  \t\tcomponent.state = nextState;\n  \t\tcomponent.context = nextContext || {};\n  \t\treturn;\n  \t}\n  \tvar cache = component.$cache;\n  \tcache.props = nextProps;\n  \tcache.state = nextState;\n  \tcache.context = nextContext || {};\n  \tcomponent.forceUpdate(callback);\n  }\n\n  // event config\n  var unbubbleEvents = {\n      /**\r\n       * should not bind mousemove in document scope\r\n       * even though mousemove event can bubble\r\n       */\n      onmousemove: 1,\n      ontouchmove: 1,\n      onmouseleave: 1,\n      onmouseenter: 1,\n      onload: 1,\n      onunload: 1,\n      onscroll: 1,\n      onfocus: 1,\n      onblur: 1,\n      onrowexit: 1,\n      onbeforeunload: 1,\n      onstop: 1,\n      ondragdrop: 1,\n      ondragenter: 1,\n      ondragexit: 1,\n      ondraggesture: 1,\n      ondragover: 1,\n      oncontextmenu: 1,\n      onerror: 1,\n\n      // media event\n      onabort: 1,\n      oncanplay: 1,\n      oncanplaythrough: 1,\n      ondurationchange: 1,\n      onemptied: 1,\n      onended: 1,\n      onloadeddata: 1,\n      onloadedmetadata: 1,\n      onloadstart: 1,\n      onencrypted: 1,\n      onpause: 1,\n      onplay: 1,\n      onplaying: 1,\n      onprogress: 1,\n      onratechange: 1,\n      onseeking: 1,\n      onseeked: 1,\n      onstalled: 1,\n      onsuspend: 1,\n      ontimeupdate: 1,\n      onvolumechange: 1,\n      onwaiting: 1\n  };\n\n  function getEventName(key) {\n      if (key === 'onDoubleClick') {\n          key = 'ondblclick';\n      } else if (key === 'onTouchTap') {\n          key = 'onclick';\n      }\n\n      return key.toLowerCase();\n  }\n\n  // Mobile Safari does not fire properly bubble click events on\n  // non-interactive elements, which means delegated click listeners do not\n  // fire. The workaround for this bug involves attaching an empty click\n  // listener on the target node.\n  var inMobile = ('ontouchstart' in document);\n  var emptyFunction = function emptyFunction() {};\n  var ON_CLICK_KEY = 'onclick';\n\n  var eventTypes = {};\n\n  function addEvent(elem, eventType, listener) {\n      eventType = getEventName(eventType);\n\n      var eventStore = elem.eventStore || (elem.eventStore = {});\n      eventStore[eventType] = listener;\n\n      if (unbubbleEvents[eventType] === 1) {\n          elem[eventType] = dispatchUnbubbleEvent;\n          return;\n      } else if (!eventTypes[eventType]) {\n          // onclick -> click\n          document.addEventListener(eventType.substr(2), dispatchEvent, false);\n          eventTypes[eventType] = true;\n      }\n\n      if (inMobile && eventType === ON_CLICK_KEY) {\n          elem.addEventListener('click', emptyFunction, false);\n          return;\n      }\n\n      var nodeName = elem.nodeName;\n\n      if (eventType === 'onchange' && supportInputEvent(elem)) {\n          addEvent(elem, 'oninput', listener);\n      }\n  }\n\n  function removeEvent(elem, eventType) {\n      eventType = getEventName(eventType);\n\n      var eventStore = elem.eventStore || (elem.eventStore = {});\n      delete eventStore[eventType];\n\n      if (unbubbleEvents[eventType] === 1) {\n          elem[eventType] = null;\n          return;\n      } else if (inMobile && eventType === ON_CLICK_KEY) {\n          elem.removeEventListener('click', emptyFunction, false);\n          return;\n      }\n\n      var nodeName = elem.nodeName;\n\n      if (eventType === 'onchange' && supportInputEvent(elem)) {\n          delete eventStore['oninput'];\n      }\n  }\n\n  function dispatchEvent(event) {\n      var target = event.target;\n      var type = event.type;\n\n      var eventType = 'on' + type;\n      var syntheticEvent = undefined;\n\n      updateQueue.isPending = true;\n      while (target) {\n          var _target = target;\n          var eventStore = _target.eventStore;\n\n          var listener = eventStore && eventStore[eventType];\n          if (!listener) {\n              target = target.parentNode;\n              continue;\n          }\n          if (!syntheticEvent) {\n              syntheticEvent = createSyntheticEvent(event);\n          }\n          syntheticEvent.currentTarget = target;\n          listener.call(target, syntheticEvent);\n          if (syntheticEvent.$cancelBubble) {\n              break;\n          }\n          target = target.parentNode;\n      }\n      updateQueue.isPending = false;\n      updateQueue.batchUpdate();\n  }\n\n  function dispatchUnbubbleEvent(event) {\n      var target = event.currentTarget || event.target;\n      var eventType = 'on' + event.type;\n      var syntheticEvent = createSyntheticEvent(event);\n\n      syntheticEvent.currentTarget = target;\n      updateQueue.isPending = true;\n\n      var eventStore = target.eventStore;\n\n      var listener = eventStore && eventStore[eventType];\n      if (listener) {\n          listener.call(target, syntheticEvent);\n      }\n\n      updateQueue.isPending = false;\n      updateQueue.batchUpdate();\n  }\n\n  function createSyntheticEvent(nativeEvent) {\n      var syntheticEvent = {};\n      var cancelBubble = function cancelBubble() {\n          return syntheticEvent.$cancelBubble = true;\n      };\n      syntheticEvent.nativeEvent = nativeEvent;\n      syntheticEvent.persist = noop;\n      for (var key in nativeEvent) {\n          if (typeof nativeEvent[key] !== 'function') {\n              syntheticEvent[key] = nativeEvent[key];\n          } else if (key === 'stopPropagation' || key === 'stopImmediatePropagation') {\n              syntheticEvent[key] = cancelBubble;\n          } else {\n              syntheticEvent[key] = nativeEvent[key].bind(nativeEvent);\n          }\n      }\n      return syntheticEvent;\n  }\n\n  function supportInputEvent(elem) {\n      var nodeName = elem.nodeName && elem.nodeName.toLowerCase();\n      return nodeName !== 'select' && !(nodeName === 'input' && elem.type === 'file');\n  }\n\n  function setStyle(elemStyle, styles) {\n      for (var styleName in styles) {\n          if (styles.hasOwnProperty(styleName)) {\n              setStyleValue(elemStyle, styleName, styles[styleName]);\n          }\n      }\n  }\n\n  function removeStyle(elemStyle, styles) {\n      for (var styleName in styles) {\n          if (styles.hasOwnProperty(styleName)) {\n              elemStyle[styleName] = '';\n          }\n      }\n  }\n\n  function patchStyle(elemStyle, style, newStyle) {\n      if (style === newStyle) {\n          return;\n      }\n      if (!newStyle && style) {\n          removeStyle(elemStyle, style);\n          return;\n      } else if (newStyle && !style) {\n          setStyle(elemStyle, newStyle);\n          return;\n      }\n\n      for (var key in style) {\n          if (newStyle.hasOwnProperty(key)) {\n              if (newStyle[key] !== style[key]) {\n                  setStyleValue(elemStyle, key, newStyle[key]);\n              }\n          } else {\n              elemStyle[key] = '';\n          }\n      }\n      for (var key in newStyle) {\n          if (!style.hasOwnProperty(key)) {\n              setStyleValue(elemStyle, key, newStyle[key]);\n          }\n      }\n  }\n\n  /**\r\n   * CSS properties which accept numbers but are not in units of \"px\".\r\n   */\n  var isUnitlessNumber = {\n      animationIterationCount: 1,\n      borderImageOutset: 1,\n      borderImageSlice: 1,\n      borderImageWidth: 1,\n      boxFlex: 1,\n      boxFlexGroup: 1,\n      boxOrdinalGroup: 1,\n      columnCount: 1,\n      flex: 1,\n      flexGrow: 1,\n      flexPositive: 1,\n      flexShrink: 1,\n      flexNegative: 1,\n      flexOrder: 1,\n      gridRow: 1,\n      gridColumn: 1,\n      fontWeight: 1,\n      lineClamp: 1,\n      lineHeight: 1,\n      opacity: 1,\n      order: 1,\n      orphans: 1,\n      tabSize: 1,\n      widows: 1,\n      zIndex: 1,\n      zoom: 1,\n\n      // SVG-related properties\n      fillOpacity: 1,\n      floodOpacity: 1,\n      stopOpacity: 1,\n      strokeDasharray: 1,\n      strokeDashoffset: 1,\n      strokeMiterlimit: 1,\n      strokeOpacity: 1,\n      strokeWidth: 1\n  };\n\n  function prefixKey(prefix, key) {\n      return prefix + key.charAt(0).toUpperCase() + key.substring(1);\n  }\n\n  var prefixes = ['Webkit', 'ms', 'Moz', 'O'];\n\n  Object.keys(isUnitlessNumber).forEach(function (prop) {\n      prefixes.forEach(function (prefix) {\n          isUnitlessNumber[prefixKey(prefix, prop)] = 1;\n      });\n  });\n\n  var RE_NUMBER = /^-?\\d+(\\.\\d+)?$/;\n  function setStyleValue(elemStyle, styleName, styleValue) {\n\n      if (!isUnitlessNumber[styleName] && RE_NUMBER.test(styleValue)) {\n          elemStyle[styleName] = styleValue + 'px';\n          return;\n      }\n\n      if (styleName === 'float') {\n          styleName = 'cssFloat';\n      }\n\n      if (styleValue == null || typeof styleValue === 'boolean') {\n          styleValue = '';\n      }\n\n      elemStyle[styleName] = styleValue;\n  }\n\n  var ATTRIBUTE_NAME_START_CHAR = ':A-Z_a-z\\\\u00C0-\\\\u00D6\\\\u00D8-\\\\u00F6\\\\u00F8-\\\\u02FF\\\\u0370-\\\\u037D\\\\u037F-\\\\u1FFF\\\\u200C-\\\\u200D\\\\u2070-\\\\u218F\\\\u2C00-\\\\u2FEF\\\\u3001-\\\\uD7FF\\\\uF900-\\\\uFDCF\\\\uFDF0-\\\\uFFFD';\n  var ATTRIBUTE_NAME_CHAR = ATTRIBUTE_NAME_START_CHAR + '\\\\-.0-9\\\\uB7\\\\u0300-\\\\u036F\\\\u203F-\\\\u2040';\n\n  var VALID_ATTRIBUTE_NAME_REGEX = new RegExp('^[' + ATTRIBUTE_NAME_START_CHAR + '][' + ATTRIBUTE_NAME_CHAR + ']*$');\n\n  var isCustomAttribute = RegExp.prototype.test.bind(new RegExp('^(data|aria)-[' + ATTRIBUTE_NAME_CHAR + ']*$'));\n  // will merge some data in properties below\n  var properties = {};\n\n  /**\r\n   * Mapping from normalized, camelcased property names to a configuration that\r\n   * specifies how the associated DOM property should be accessed or rendered.\r\n   */\n  var MUST_USE_PROPERTY = 0x1;\n  var HAS_BOOLEAN_VALUE = 0x4;\n  var HAS_NUMERIC_VALUE = 0x8;\n  var HAS_POSITIVE_NUMERIC_VALUE = 0x10 | 0x8;\n  var HAS_OVERLOADED_BOOLEAN_VALUE = 0x20;\n\n  // html config\n  var HTMLDOMPropertyConfig = {\n      props: {\n          /**\r\n           * Standard Properties\r\n           */\n          accept: 0,\n          acceptCharset: 0,\n          accessKey: 0,\n          action: 0,\n          allowFullScreen: HAS_BOOLEAN_VALUE,\n          allowTransparency: 0,\n          alt: 0,\n          async: HAS_BOOLEAN_VALUE,\n          autoComplete: 0,\n          autoFocus: HAS_BOOLEAN_VALUE,\n          autoPlay: HAS_BOOLEAN_VALUE,\n          capture: HAS_BOOLEAN_VALUE,\n          cellPadding: 0,\n          cellSpacing: 0,\n          charSet: 0,\n          challenge: 0,\n          checked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n          cite: 0,\n          classID: 0,\n          className: 0,\n          cols: HAS_POSITIVE_NUMERIC_VALUE,\n          colSpan: 0,\n          content: 0,\n          contentEditable: 0,\n          contextMenu: 0,\n          controls: HAS_BOOLEAN_VALUE,\n          coords: 0,\n          crossOrigin: 0,\n          data: 0, // For `<object />` acts as `src`.\n          dateTime: 0,\n          'default': HAS_BOOLEAN_VALUE,\n          // not in regular react, they did it in other way\n          defaultValue: MUST_USE_PROPERTY,\n          // not in regular react, they did it in other way\n          defaultChecked: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n          defer: HAS_BOOLEAN_VALUE,\n          dir: 0,\n          disabled: HAS_BOOLEAN_VALUE,\n          download: HAS_OVERLOADED_BOOLEAN_VALUE,\n          draggable: 0,\n          encType: 0,\n          form: 0,\n          formAction: 0,\n          formEncType: 0,\n          formMethod: 0,\n          formNoValidate: HAS_BOOLEAN_VALUE,\n          formTarget: 0,\n          frameBorder: 0,\n          headers: 0,\n          height: 0,\n          hidden: HAS_BOOLEAN_VALUE,\n          high: 0,\n          href: 0,\n          hrefLang: 0,\n          htmlFor: 0,\n          httpEquiv: 0,\n          icon: 0,\n          id: 0,\n          inputMode: 0,\n          integrity: 0,\n          is: 0,\n          keyParams: 0,\n          keyType: 0,\n          kind: 0,\n          label: 0,\n          lang: 0,\n          list: 0,\n          loop: HAS_BOOLEAN_VALUE,\n          low: 0,\n          manifest: 0,\n          marginHeight: 0,\n          marginWidth: 0,\n          max: 0,\n          maxLength: 0,\n          media: 0,\n          mediaGroup: 0,\n          method: 0,\n          min: 0,\n          minLength: 0,\n          // Caution; `option.selected` is not updated if `select.multiple` is\n          // disabled with `removeAttribute`.\n          multiple: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n          muted: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n          name: 0,\n          nonce: 0,\n          noValidate: HAS_BOOLEAN_VALUE,\n          open: HAS_BOOLEAN_VALUE,\n          optimum: 0,\n          pattern: 0,\n          placeholder: 0,\n          poster: 0,\n          preload: 0,\n          profile: 0,\n          radioGroup: 0,\n          readOnly: HAS_BOOLEAN_VALUE,\n          referrerPolicy: 0,\n          rel: 0,\n          required: HAS_BOOLEAN_VALUE,\n          reversed: HAS_BOOLEAN_VALUE,\n          role: 0,\n          rows: HAS_POSITIVE_NUMERIC_VALUE,\n          rowSpan: HAS_NUMERIC_VALUE,\n          sandbox: 0,\n          scope: 0,\n          scoped: HAS_BOOLEAN_VALUE,\n          scrolling: 0,\n          seamless: HAS_BOOLEAN_VALUE,\n          selected: MUST_USE_PROPERTY | HAS_BOOLEAN_VALUE,\n          shape: 0,\n          size: HAS_POSITIVE_NUMERIC_VALUE,\n          sizes: 0,\n          span: HAS_POSITIVE_NUMERIC_VALUE,\n          spellCheck: 0,\n          src: 0,\n          srcDoc: 0,\n          srcLang: 0,\n          srcSet: 0,\n          start: HAS_NUMERIC_VALUE,\n          step: 0,\n          style: 0,\n          summary: 0,\n          tabIndex: 0,\n          target: 0,\n          title: 0,\n          // Setting .type throws on non-<input> tags\n          type: 0,\n          useMap: 0,\n          value: MUST_USE_PROPERTY,\n          width: 0,\n          wmode: 0,\n          wrap: 0,\n\n          /**\r\n           * RDFa Properties\r\n           */\n          about: 0,\n          datatype: 0,\n          inlist: 0,\n          prefix: 0,\n          // property is also supported for OpenGraph in meta tags.\n          property: 0,\n          playsInline: HAS_BOOLEAN_VALUE,\n          resource: 0,\n          'typeof': 0,\n          vocab: 0,\n\n          /**\r\n           * Non-standard Properties\r\n           */\n          // autoCapitalize and autoCorrect are supported in Mobile Safari for\n          // keyboard hints.\n          autoCapitalize: 0,\n          autoCorrect: 0,\n          // autoSave allows WebKit/Blink to persist values of input fields on page reloads\n          autoSave: 0,\n          // color is for Safari mask-icon link\n          color: 0,\n          // itemProp, itemScope, itemType are for\n          // Microdata support. See http://schema.org/docs/gs.html\n          itemProp: 0,\n          itemScope: HAS_BOOLEAN_VALUE,\n          itemType: 0,\n          // itemID and itemRef are for Microdata support as well but\n          // only specified in the WHATWG spec document. See\n          // https://html.spec.whatwg.org/multipage/microdata.html#microdata-dom-api\n          itemID: 0,\n          itemRef: 0,\n          // results show looking glass icon and recent searches on input\n          // search fields in WebKit/Blink\n          results: 0,\n          // IE-only attribute that specifies security restrictions on an iframe\n          // as an alternative to the sandbox attribute on IE<10\n          security: 0,\n          // IE-only attribute that controls focus behavior\n          unselectable: 0\n      },\n      attrNS: {},\n      domAttrs: {\n          acceptCharset: 'accept-charset',\n          className: 'class',\n          htmlFor: 'for',\n          httpEquiv: 'http-equiv'\n      },\n      domProps: {}\n  };\n\n  // svg config\n  var xlink = 'http://www.w3.org/1999/xlink';\n  var xml = 'http://www.w3.org/XML/1998/namespace';\n\n  // We use attributes for everything SVG so let's avoid some duplication and run\n  // code instead.\n  // The following are all specified in the HTML config already so we exclude here.\n  // - class (as className)\n  // - color\n  // - height\n  // - id\n  // - lang\n  // - max\n  // - media\n  // - method\n  // - min\n  // - name\n  // - style\n  // - target\n  // - type\n  // - width\n  var ATTRS = {\n      accentHeight: 'accent-height',\n      accumulate: 0,\n      additive: 0,\n      alignmentBaseline: 'alignment-baseline',\n      allowReorder: 'allowReorder',\n      alphabetic: 0,\n      amplitude: 0,\n      arabicForm: 'arabic-form',\n      ascent: 0,\n      attributeName: 'attributeName',\n      attributeType: 'attributeType',\n      autoReverse: 'autoReverse',\n      azimuth: 0,\n      baseFrequency: 'baseFrequency',\n      baseProfile: 'baseProfile',\n      baselineShift: 'baseline-shift',\n      bbox: 0,\n      begin: 0,\n      bias: 0,\n      by: 0,\n      calcMode: 'calcMode',\n      capHeight: 'cap-height',\n      clip: 0,\n      clipPath: 'clip-path',\n      clipRule: 'clip-rule',\n      clipPathUnits: 'clipPathUnits',\n      colorInterpolation: 'color-interpolation',\n      colorInterpolationFilters: 'color-interpolation-filters',\n      colorProfile: 'color-profile',\n      colorRendering: 'color-rendering',\n      contentScriptType: 'contentScriptType',\n      contentStyleType: 'contentStyleType',\n      cursor: 0,\n      cx: 0,\n      cy: 0,\n      d: 0,\n      decelerate: 0,\n      descent: 0,\n      diffuseConstant: 'diffuseConstant',\n      direction: 0,\n      display: 0,\n      divisor: 0,\n      dominantBaseline: 'dominant-baseline',\n      dur: 0,\n      dx: 0,\n      dy: 0,\n      edgeMode: 'edgeMode',\n      elevation: 0,\n      enableBackground: 'enable-background',\n      end: 0,\n      exponent: 0,\n      externalResourcesRequired: 'externalResourcesRequired',\n      fill: 0,\n      fillOpacity: 'fill-opacity',\n      fillRule: 'fill-rule',\n      filter: 0,\n      filterRes: 'filterRes',\n      filterUnits: 'filterUnits',\n      floodColor: 'flood-color',\n      floodOpacity: 'flood-opacity',\n      focusable: 0,\n      fontFamily: 'font-family',\n      fontSize: 'font-size',\n      fontSizeAdjust: 'font-size-adjust',\n      fontStretch: 'font-stretch',\n      fontStyle: 'font-style',\n      fontVariant: 'font-variant',\n      fontWeight: 'font-weight',\n      format: 0,\n      from: 0,\n      fx: 0,\n      fy: 0,\n      g1: 0,\n      g2: 0,\n      glyphName: 'glyph-name',\n      glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n      glyphOrientationVertical: 'glyph-orientation-vertical',\n      glyphRef: 'glyphRef',\n      gradientTransform: 'gradientTransform',\n      gradientUnits: 'gradientUnits',\n      hanging: 0,\n      horizAdvX: 'horiz-adv-x',\n      horizOriginX: 'horiz-origin-x',\n      ideographic: 0,\n      imageRendering: 'image-rendering',\n      'in': 0,\n      in2: 0,\n      intercept: 0,\n      k: 0,\n      k1: 0,\n      k2: 0,\n      k3: 0,\n      k4: 0,\n      kernelMatrix: 'kernelMatrix',\n      kernelUnitLength: 'kernelUnitLength',\n      kerning: 0,\n      keyPoints: 'keyPoints',\n      keySplines: 'keySplines',\n      keyTimes: 'keyTimes',\n      lengthAdjust: 'lengthAdjust',\n      letterSpacing: 'letter-spacing',\n      lightingColor: 'lighting-color',\n      limitingConeAngle: 'limitingConeAngle',\n      local: 0,\n      markerEnd: 'marker-end',\n      markerMid: 'marker-mid',\n      markerStart: 'marker-start',\n      markerHeight: 'markerHeight',\n      markerUnits: 'markerUnits',\n      markerWidth: 'markerWidth',\n      mask: 0,\n      maskContentUnits: 'maskContentUnits',\n      maskUnits: 'maskUnits',\n      mathematical: 0,\n      mode: 0,\n      numOctaves: 'numOctaves',\n      offset: 0,\n      opacity: 0,\n      operator: 0,\n      order: 0,\n      orient: 0,\n      orientation: 0,\n      origin: 0,\n      overflow: 0,\n      overlinePosition: 'overline-position',\n      overlineThickness: 'overline-thickness',\n      paintOrder: 'paint-order',\n      panose1: 'panose-1',\n      pathLength: 'pathLength',\n      patternContentUnits: 'patternContentUnits',\n      patternTransform: 'patternTransform',\n      patternUnits: 'patternUnits',\n      pointerEvents: 'pointer-events',\n      points: 0,\n      pointsAtX: 'pointsAtX',\n      pointsAtY: 'pointsAtY',\n      pointsAtZ: 'pointsAtZ',\n      preserveAlpha: 'preserveAlpha',\n      preserveAspectRatio: 'preserveAspectRatio',\n      primitiveUnits: 'primitiveUnits',\n      r: 0,\n      radius: 0,\n      refX: 'refX',\n      refY: 'refY',\n      renderingIntent: 'rendering-intent',\n      repeatCount: 'repeatCount',\n      repeatDur: 'repeatDur',\n      requiredExtensions: 'requiredExtensions',\n      requiredFeatures: 'requiredFeatures',\n      restart: 0,\n      result: 0,\n      rotate: 0,\n      rx: 0,\n      ry: 0,\n      scale: 0,\n      seed: 0,\n      shapeRendering: 'shape-rendering',\n      slope: 0,\n      spacing: 0,\n      specularConstant: 'specularConstant',\n      specularExponent: 'specularExponent',\n      speed: 0,\n      spreadMethod: 'spreadMethod',\n      startOffset: 'startOffset',\n      stdDeviation: 'stdDeviation',\n      stemh: 0,\n      stemv: 0,\n      stitchTiles: 'stitchTiles',\n      stopColor: 'stop-color',\n      stopOpacity: 'stop-opacity',\n      strikethroughPosition: 'strikethrough-position',\n      strikethroughThickness: 'strikethrough-thickness',\n      string: 0,\n      stroke: 0,\n      strokeDasharray: 'stroke-dasharray',\n      strokeDashoffset: 'stroke-dashoffset',\n      strokeLinecap: 'stroke-linecap',\n      strokeLinejoin: 'stroke-linejoin',\n      strokeMiterlimit: 'stroke-miterlimit',\n      strokeOpacity: 'stroke-opacity',\n      strokeWidth: 'stroke-width',\n      surfaceScale: 'surfaceScale',\n      systemLanguage: 'systemLanguage',\n      tableValues: 'tableValues',\n      targetX: 'targetX',\n      targetY: 'targetY',\n      textAnchor: 'text-anchor',\n      textDecoration: 'text-decoration',\n      textRendering: 'text-rendering',\n      textLength: 'textLength',\n      to: 0,\n      transform: 0,\n      u1: 0,\n      u2: 0,\n      underlinePosition: 'underline-position',\n      underlineThickness: 'underline-thickness',\n      unicode: 0,\n      unicodeBidi: 'unicode-bidi',\n      unicodeRange: 'unicode-range',\n      unitsPerEm: 'units-per-em',\n      vAlphabetic: 'v-alphabetic',\n      vHanging: 'v-hanging',\n      vIdeographic: 'v-ideographic',\n      vMathematical: 'v-mathematical',\n      values: 0,\n      vectorEffect: 'vector-effect',\n      version: 0,\n      vertAdvY: 'vert-adv-y',\n      vertOriginX: 'vert-origin-x',\n      vertOriginY: 'vert-origin-y',\n      viewBox: 'viewBox',\n      viewTarget: 'viewTarget',\n      visibility: 0,\n      widths: 0,\n      wordSpacing: 'word-spacing',\n      writingMode: 'writing-mode',\n      x: 0,\n      xHeight: 'x-height',\n      x1: 0,\n      x2: 0,\n      xChannelSelector: 'xChannelSelector',\n      xlinkActuate: 'xlink:actuate',\n      xlinkArcrole: 'xlink:arcrole',\n      xlinkHref: 'xlink:href',\n      xlinkRole: 'xlink:role',\n      xlinkShow: 'xlink:show',\n      xlinkTitle: 'xlink:title',\n      xlinkType: 'xlink:type',\n      xmlBase: 'xml:base',\n      xmlns: 0,\n      xmlnsXlink: 'xmlns:xlink',\n      xmlLang: 'xml:lang',\n      xmlSpace: 'xml:space',\n      y: 0,\n      y1: 0,\n      y2: 0,\n      yChannelSelector: 'yChannelSelector',\n      z: 0,\n      zoomAndPan: 'zoomAndPan'\n  };\n\n  var SVGDOMPropertyConfig = {\n      props: {},\n      attrNS: {\n          xlinkActuate: xlink,\n          xlinkArcrole: xlink,\n          xlinkHref: xlink,\n          xlinkRole: xlink,\n          xlinkShow: xlink,\n          xlinkTitle: xlink,\n          xlinkType: xlink,\n          xmlBase: xml,\n          xmlLang: xml,\n          xmlSpace: xml\n      },\n      domAttrs: {},\n      domProps: {}\n  };\n\n  Object.keys(ATTRS).map(function (key) {\n      SVGDOMPropertyConfig.props[key] = 0;\n      if (ATTRS[key]) {\n          SVGDOMPropertyConfig.domAttrs[key] = ATTRS[key];\n      }\n  });\n\n  // merge html and svg config into properties\n  mergeConfigToProperties(HTMLDOMPropertyConfig);\n  mergeConfigToProperties(SVGDOMPropertyConfig);\n\n  function mergeConfigToProperties(config) {\n      var\n      // all react/react-lite supporting property names in here\n      props = config.props;\n      var\n      // attributes namespace in here\n      attrNS = config.attrNS;\n      var\n      // propName in props which should use to be dom-attribute in here\n      domAttrs = config.domAttrs;\n      var\n      // propName in props which should use to be dom-property in here\n      domProps = config.domProps;\n\n      for (var propName in props) {\n          if (!props.hasOwnProperty(propName)) {\n              continue;\n          }\n          var propConfig = props[propName];\n          properties[propName] = {\n              attributeName: domAttrs.hasOwnProperty(propName) ? domAttrs[propName] : propName.toLowerCase(),\n              propertyName: domProps.hasOwnProperty(propName) ? domProps[propName] : propName,\n              attributeNamespace: attrNS.hasOwnProperty(propName) ? attrNS[propName] : null,\n              mustUseProperty: checkMask(propConfig, MUST_USE_PROPERTY),\n              hasBooleanValue: checkMask(propConfig, HAS_BOOLEAN_VALUE),\n              hasNumericValue: checkMask(propConfig, HAS_NUMERIC_VALUE),\n              hasPositiveNumericValue: checkMask(propConfig, HAS_POSITIVE_NUMERIC_VALUE),\n              hasOverloadedBooleanValue: checkMask(propConfig, HAS_OVERLOADED_BOOLEAN_VALUE)\n          };\n      }\n  }\n\n  function checkMask(value, bitmask) {\n      return (value & bitmask) === bitmask;\n  }\n\n  /**\r\n   * Sets the value for a property on a node.\r\n   *\r\n   * @param {DOMElement} node\r\n   * @param {string} name\r\n   * @param {*} value\r\n   */\n\n  function setPropValue(node, name, value) {\n      var propInfo = properties.hasOwnProperty(name) && properties[name];\n      if (propInfo) {\n          // should delete value from dom\n          if (value == null || propInfo.hasBooleanValue && !value || propInfo.hasNumericValue && isNaN(value) || propInfo.hasPositiveNumericValue && value < 1 || propInfo.hasOverloadedBooleanValue && value === false) {\n              removePropValue(node, name);\n          } else if (propInfo.mustUseProperty) {\n              node[propInfo.propertyName] = value;\n          } else {\n              var attributeName = propInfo.attributeName;\n              var namespace = propInfo.attributeNamespace;\n\n              // `setAttribute` with objects becomes only `[object]` in IE8/9,\n              // ('' + value) makes it output the correct toString()-value.\n              if (namespace) {\n                  node.setAttributeNS(namespace, attributeName, '' + value);\n              } else if (propInfo.hasBooleanValue || propInfo.hasOverloadedBooleanValue && value === true) {\n                  node.setAttribute(attributeName, '');\n              } else {\n                  node.setAttribute(attributeName, '' + value);\n              }\n          }\n      } else if (isCustomAttribute(name) && VALID_ATTRIBUTE_NAME_REGEX.test(name)) {\n          if (value == null) {\n              node.removeAttribute(name);\n          } else {\n              node.setAttribute(name, '' + value);\n          }\n      }\n  }\n\n  /**\r\n   * Deletes the value for a property on a node.\r\n   *\r\n   * @param {DOMElement} node\r\n   * @param {string} name\r\n   */\n\n  function removePropValue(node, name) {\n      var propInfo = properties.hasOwnProperty(name) && properties[name];\n      if (propInfo) {\n          if (propInfo.mustUseProperty) {\n              var propName = propInfo.propertyName;\n              if (propInfo.hasBooleanValue) {\n                  node[propName] = false;\n              } else {\n                  node[propName] = '';\n              }\n          } else {\n              node.removeAttribute(propInfo.attributeName);\n          }\n      } else if (isCustomAttribute(name)) {\n          node.removeAttribute(name);\n      }\n  }\n\n  function updateSelectOptions(select, multiple, propValue) {\n      var selectedValue, i;\n      var options = select.options;\n\n      if (multiple) {\n          select.multiple = true;\n          if (!Array.isArray(propValue)) {\n              throw new Error('The value prop supplied to <select> must be an array if `multiple` is true');\n          }\n          selectedValue = {};\n          for (i = 0; i < propValue.length; i++) {\n              selectedValue['' + propValue[i]] = true;\n          }\n          for (i = 0; i < options.length; i++) {\n              var selected = selectedValue.hasOwnProperty(options[i].value);\n              if (options[i].selected !== selected) {\n                  options[i].selected = selected;\n              }\n          }\n      } else {\n          select.multiple = false;\n          if (Array.isArray(propValue)) {\n              throw new Error('The value prop supplied to <select> must be a scalar value if `multiple` is false.');\n          }\n          // Do not set `select.value` as exact behavior isn't consistent across all\n          // browsers for all cases.\n          selectedValue = '' + propValue;\n          for (i = 0; i < options.length; i++) {\n              var option = options[i];\n              if (option.value === selectedValue) {\n                  if (!option.selected) {\n                      option.selected = true;\n                  }\n              } else {\n                  if (option.selected) {\n                      option.selected = false;\n                  }\n              }\n          }\n\n          if (options.selectedIndex < 0 && options.length) {\n              options[0].selected = true;\n          }\n      }\n  }\n\n  function isFn(obj) {\n      return typeof obj === 'function';\n  }\n\n  var isArr = Array.isArray;\n\n  function noop() {}\n\n  function identity(obj) {\n      return obj;\n  }\n\n  function pipe(fn1, fn2) {\n      return function () {\n          fn1.apply(this, arguments);\n          return fn2.apply(this, arguments);\n      };\n  }\n\n  function addItem(list, item) {\n      list[list.length] = item;\n  }\n\n  function flatEach(list, iteratee, a) {\n      var len = list.length;\n      var i = -1;\n\n      while (len--) {\n          var item = list[++i];\n          if (isArr(item)) {\n              flatEach(item, iteratee, a);\n          } else {\n              iteratee(item, a);\n          }\n      }\n  }\n\n  function extend(to, from) {\n      if (!from) {\n          return to;\n      }\n      var keys = Object.keys(from);\n      var i = keys.length;\n      while (i--) {\n          to[keys[i]] = from[keys[i]];\n      }\n      return to;\n  }\n\n  var uid = 0;\n\n  function getUid() {\n      return ++uid;\n  }\n\n  var EVENT_KEYS = /^on/i;\n\n  function setProp(elem, key, value, isCustomComponent) {\n      if (EVENT_KEYS.test(key)) {\n          addEvent(elem, key, value);\n      } else if (key === 'style') {\n          setStyle(elem.style, value);\n      } else if (key === HTML_KEY) {\n          if (value && value.__html != null) {\n              elem.innerHTML = value.__html;\n          }\n      } else if (isCustomComponent) {\n          if (value == null) {\n              elem.removeAttribute(key);\n          } else {\n              elem.setAttribute(key, '' + value);\n          }\n      } else {\n          setPropValue(elem, key, value);\n      }\n  }\n\n  function removeProp(elem, key, oldValue, isCustomComponent) {\n      if (EVENT_KEYS.test(key)) {\n          removeEvent(elem, key);\n      } else if (key === 'style') {\n          removeStyle(elem.style, oldValue);\n      } else if (key === HTML_KEY) {\n          elem.innerHTML = '';\n      } else if (isCustomComponent) {\n          elem.removeAttribute(key);\n      } else {\n          removePropValue(elem, key);\n      }\n  }\n\n  function patchProp(elem, key, value, oldValue, isCustomComponent) {\n      if (key === 'value' || key === 'checked') {\n          oldValue = elem[key];\n      }\n      if (value === oldValue) {\n          return;\n      }\n      if (value === undefined) {\n          removeProp(elem, key, oldValue, isCustomComponent);\n          return;\n      }\n      if (key === 'style') {\n          patchStyle(elem.style, oldValue, value);\n      } else {\n          setProp(elem, key, value, isCustomComponent);\n      }\n  }\n\n  function setProps(elem, props, isCustomComponent) {\n      var isSelect = elem.nodeName === 'SELECT';\n      for (var key in props) {\n          if (key !== 'children') {\n              if (isSelect && (key === 'value' || key === 'defaultValue')) {\n                  updateSelectOptions(elem, props.multiple, props[key]);\n              } else {\n                  setProp(elem, key, props[key], isCustomComponent);\n              }\n          }\n      }\n  }\n\n  function patchProps(elem, props, newProps, isCustomComponent) {\n      var isSelect = elem.nodeName === 'SELECT';\n      for (var key in props) {\n          if (key !== 'children') {\n              if (newProps.hasOwnProperty(key)) {\n                  if (isSelect && (key === 'value' || key === 'defaultValue')) {\n                      updateSelectOptions(elem, newProps.multiple, newProps[key]);\n                  } else {\n                      patchProp(elem, key, newProps[key], props[key], isCustomComponent);\n                  }\n              } else {\n                  removeProp(elem, key, props[key], isCustomComponent);\n              }\n          }\n      }\n      for (var key in newProps) {\n          if (key !== 'children' && !props.hasOwnProperty(key)) {\n              if (isSelect && (key === 'value' || key === 'defaultValue')) {\n                  updateSelectOptions(elem, newProps.multiple, newProps[key]);\n              } else {\n                  setProp(elem, key, newProps[key], isCustomComponent);\n              }\n          }\n      }\n  }\n\n  if (!Object.freeze) {\n      Object.freeze = identity;\n  }\n\n  function isValidContainer(node) {\n  \treturn !!(node && (node.nodeType === ELEMENT_NODE_TYPE || node.nodeType === DOC_NODE_TYPE || node.nodeType === DOCUMENT_FRAGMENT_NODE_TYPE));\n  }\n\n  var pendingRendering = {};\n  var vnodeStore = {};\n  function renderTreeIntoContainer(vnode, container, callback, parentContext) {\n  \tif (!vnode.vtype) {\n  \t\tthrow new Error('cannot render ' + vnode + ' to container');\n  \t}\n  \tif (!isValidContainer(container)) {\n  \t\tthrow new Error('container ' + container + ' is not a DOM element');\n  \t}\n  \tvar id = container[COMPONENT_ID] || (container[COMPONENT_ID] = getUid());\n  \tvar argsCache = pendingRendering[id];\n\n  \t// component lify cycle method maybe call root rendering\n  \t// should bundle them and render by only one time\n  \tif (argsCache) {\n  \t\tif (argsCache === true) {\n  \t\t\tpendingRendering[id] = argsCache = { vnode: vnode, callback: callback, parentContext: parentContext };\n  \t\t} else {\n  \t\t\targsCache.vnode = vnode;\n  \t\t\targsCache.parentContext = parentContext;\n  \t\t\targsCache.callback = argsCache.callback ? pipe(argsCache.callback, callback) : callback;\n  \t\t}\n  \t\treturn;\n  \t}\n\n  \tpendingRendering[id] = true;\n  \tvar oldVnode = null;\n  \tvar rootNode = null;\n  \tif (oldVnode = vnodeStore[id]) {\n  \t\trootNode = compareTwoVnodes(oldVnode, vnode, container.firstChild, parentContext);\n  \t} else {\n  \t\trootNode = initVnode(vnode, parentContext, container.namespaceURI);\n  \t\tvar childNode = null;\n  \t\twhile (childNode = container.lastChild) {\n  \t\t\tcontainer.removeChild(childNode);\n  \t\t}\n  \t\tcontainer.appendChild(rootNode);\n  \t}\n  \tvnodeStore[id] = vnode;\n  \tvar isPending = updateQueue.isPending;\n  \tupdateQueue.isPending = true;\n  \tclearPending();\n  \targsCache = pendingRendering[id];\n  \tdelete pendingRendering[id];\n\n  \tvar result = null;\n  \tif (typeof argsCache === 'object') {\n  \t\tresult = renderTreeIntoContainer(argsCache.vnode, container, argsCache.callback, argsCache.parentContext);\n  \t} else if (vnode.vtype === VELEMENT) {\n  \t\tresult = rootNode;\n  \t} else if (vnode.vtype === VCOMPONENT) {\n  \t\tresult = rootNode.cache[vnode.uid];\n  \t}\n\n  \tif (!isPending) {\n  \t\tupdateQueue.isPending = false;\n  \t\tupdateQueue.batchUpdate();\n  \t}\n\n  \tif (callback) {\n  \t\tcallback.call(result);\n  \t}\n\n  \treturn result;\n  }\n\n  function render(vnode, container, callback) {\n  \treturn renderTreeIntoContainer(vnode, container, callback);\n  }\n\n  function unstable_renderSubtreeIntoContainer(parentComponent, subVnode, container, callback) {\n  \tvar context = parentComponent.$cache.parentContext;\n  \treturn renderTreeIntoContainer(subVnode, container, callback, context);\n  }\n\n  function unmountComponentAtNode(container) {\n  \tif (!container.nodeName) {\n  \t\tthrow new Error('expect node');\n  \t}\n  \tvar id = container[COMPONENT_ID];\n  \tvar vnode = null;\n  \tif (vnode = vnodeStore[id]) {\n  \t\tdestroyVnode(vnode, container.firstChild);\n  \t\tcontainer.removeChild(container.firstChild);\n  \t\tdelete vnodeStore[id];\n  \t\treturn true;\n  \t}\n  \treturn false;\n  }\n\n  function findDOMNode(node) {\n  \tif (node == null) {\n  \t\treturn null;\n  \t}\n  \tif (node.nodeName) {\n  \t\treturn node;\n  \t}\n  \tvar component = node;\n  \t// if component.node equal to false, component must be unmounted\n  \tif (component.getDOMNode && component.$cache.isMounted) {\n  \t\treturn component.getDOMNode();\n  \t}\n  \tthrow new Error('findDOMNode can not find Node');\n  }\n\n  var ReactDOM = Object.freeze({\n  \trender: render,\n  \tunstable_renderSubtreeIntoContainer: unstable_renderSubtreeIntoContainer,\n  \tunmountComponentAtNode: unmountComponentAtNode,\n  \tfindDOMNode: findDOMNode\n  });\n\n  function createElement(type, props, children) {\n  \tvar vtype = null;\n  \tif (typeof type === 'string') {\n  \t\tvtype = VELEMENT;\n  \t} else if (typeof type === 'function') {\n  \t\tif (type.prototype && type.prototype.isReactComponent) {\n  \t\t\tvtype = VCOMPONENT;\n  \t\t} else {\n  \t\t\tvtype = VSTATELESS;\n  \t\t}\n  \t} else {\n  \t\tthrow new Error('React.createElement: unexpect type [ ' + type + ' ]');\n  \t}\n\n  \tvar key = null;\n  \tvar ref = null;\n  \tvar finalProps = {};\n  \tif (props != null) {\n  \t\tfor (var propKey in props) {\n  \t\t\tif (!props.hasOwnProperty(propKey)) {\n  \t\t\t\tcontinue;\n  \t\t\t}\n  \t\t\tif (propKey === 'key') {\n  \t\t\t\tif (props.key !== undefined) {\n  \t\t\t\t\tkey = '' + props.key;\n  \t\t\t\t}\n  \t\t\t} else if (propKey === 'ref') {\n  \t\t\t\tif (props.ref !== undefined) {\n  \t\t\t\t\tref = props.ref;\n  \t\t\t\t}\n  \t\t\t} else {\n  \t\t\t\tfinalProps[propKey] = props[propKey];\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \tvar defaultProps = type.defaultProps;\n\n  \tif (defaultProps) {\n  \t\tfor (var propKey in defaultProps) {\n  \t\t\tif (finalProps[propKey] === undefined) {\n  \t\t\t\tfinalProps[propKey] = defaultProps[propKey];\n  \t\t\t}\n  \t\t}\n  \t}\n\n  \tvar argsLen = arguments.length;\n  \tvar finalChildren = children;\n\n  \tif (argsLen > 3) {\n  \t\tfinalChildren = Array(argsLen - 2);\n  \t\tfor (var i = 2; i < argsLen; i++) {\n  \t\t\tfinalChildren[i - 2] = arguments[i];\n  \t\t}\n  \t}\n\n  \tif (finalChildren !== undefined) {\n  \t\tfinalProps.children = finalChildren;\n  \t}\n\n  \treturn createVnode(vtype, type, finalProps, key, ref);\n  }\n\n  function isValidElement(obj) {\n  \treturn obj != null && !!obj.vtype;\n  }\n\n  function cloneElement(originElem, props) {\n  \tvar type = originElem.type;\n  \tvar key = originElem.key;\n  \tvar ref = originElem.ref;\n\n  \tvar newProps = extend(extend({ key: key, ref: ref }, originElem.props), props);\n\n  \tfor (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n  \t\tchildren[_key - 2] = arguments[_key];\n  \t}\n\n  \tvar vnode = createElement.apply(undefined, [type, newProps].concat(children));\n  \tif (vnode.ref === originElem.ref) {\n  \t\tvnode.refs = originElem.refs;\n  \t}\n  \treturn vnode;\n  }\n\n  function createFactory(type) {\n  \tvar factory = function factory() {\n  \t\tfor (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n  \t\t\targs[_key2] = arguments[_key2];\n  \t\t}\n\n  \t\treturn createElement.apply(undefined, [type].concat(args));\n  \t};\n  \tfactory.type = type;\n  \treturn factory;\n  }\n\n  var tagNames = 'a|abbr|address|area|article|aside|audio|b|base|bdi|bdo|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|data|datalist|dd|del|details|dfn|dialog|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|h1|h2|h3|h4|h5|h6|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|main|map|mark|menu|menuitem|meta|meter|nav|noscript|object|ol|optgroup|option|output|p|param|picture|pre|progress|q|rp|rt|ruby|s|samp|script|section|select|small|source|span|strong|style|sub|summary|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|track|u|ul|var|video|wbr|circle|clipPath|defs|ellipse|g|image|line|linearGradient|mask|path|pattern|polygon|polyline|radialGradient|rect|stop|svg|text|tspan';\n  var DOM = {};\n  tagNames.split('|').forEach(function (tagName) {\n  \tDOM[tagName] = createFactory(tagName);\n  });\n\n  var check = function check() {\n      return check;\n  };\n  check.isRequired = check;\n  var PropTypes = {\n      \"array\": check,\n      \"bool\": check,\n      \"func\": check,\n      \"number\": check,\n      \"object\": check,\n      \"string\": check,\n      \"any\": check,\n      \"arrayOf\": check,\n      \"element\": check,\n      \"instanceOf\": check,\n      \"node\": check,\n      \"objectOf\": check,\n      \"oneOf\": check,\n      \"oneOfType\": check,\n      \"shape\": check\n  };\n\n  function only(children) {\n  \tif (isValidElement(children)) {\n  \t\treturn children;\n  \t}\n  \tthrow new Error('expect only one child');\n  }\n\n  function forEach(children, iteratee, context) {\n  \tif (children == null) {\n  \t\treturn children;\n  \t}\n  \tvar index = 0;\n  \tif (isArr(children)) {\n  \t\tflatEach(children, function (child) {\n  \t\t\t// from traverseAllChildrenImpl in react\n  \t\t\tvar type = typeof child;\n  \t\t\tif (type === 'undefined' || type === 'boolean') {\n  \t\t\t\t// All of the above are perceived as null.\n  \t\t\t\tchild = null;\n  \t\t\t}\n\n  \t\t\titeratee.call(context, child, index++);\n  \t\t});\n  \t} else {\n  \t\t// from traverseAllChildrenImpl in react\n  \t\tvar type = typeof children;\n  \t\tif (type === 'undefined' || type === 'boolean') {\n  \t\t\t// All of the above are perceived as null.\n  \t\t\tchildren = null;\n  \t\t}\n  \t\titeratee.call(context, children, index);\n  \t}\n  }\n\n  function map(children, iteratee, context) {\n  \tif (children == null) {\n  \t\treturn children;\n  \t}\n  \tvar store = [];\n  \tvar keyMap = {};\n  \tforEach(children, function (child, index) {\n  \t\tvar data = {};\n  \t\tdata.child = iteratee.call(context, child, index) || child;\n  \t\tdata.isEqual = data.child === child;\n  \t\tvar key = data.key = getKey(child, index);\n  \t\tif (keyMap.hasOwnProperty(key)) {\n  \t\t\tkeyMap[key] += 1;\n  \t\t} else {\n  \t\t\tkeyMap[key] = 0;\n  \t\t}\n  \t\tdata.index = keyMap[key];\n  \t\taddItem(store, data);\n  \t});\n  \tvar result = [];\n  \tstore.forEach(function (_ref) {\n  \t\tvar child = _ref.child;\n  \t\tvar key = _ref.key;\n  \t\tvar index = _ref.index;\n  \t\tvar isEqual = _ref.isEqual;\n\n  \t\tif (child == null || typeof child === 'boolean') {\n  \t\t\treturn;\n  \t\t}\n  \t\tif (!isValidElement(child) || key == null) {\n  \t\t\taddItem(result, child);\n  \t\t\treturn;\n  \t\t}\n  \t\tif (keyMap[key] !== 0) {\n  \t\t\tkey += ':' + index;\n  \t\t}\n  \t\tif (!isEqual) {\n  \t\t\tkey = escapeUserProvidedKey(child.key || '') + '/' + key;\n  \t\t}\n  \t\tchild = cloneElement(child, { key: key });\n  \t\taddItem(result, child);\n  \t});\n  \treturn result;\n  }\n\n  function count(children) {\n  \tvar count = 0;\n  \tforEach(children, function () {\n  \t\tcount++;\n  \t});\n  \treturn count;\n  }\n\n  function toArray(children) {\n  \treturn map(children, identity) || [];\n  }\n\n  function getKey(child, index) {\n  \tvar key = undefined;\n  \tif (isValidElement(child) && typeof child.key === 'string') {\n  \t\tkey = '.$' + child.key;\n  \t} else {\n  \t\tkey = '.' + index.toString(36);\n  \t}\n  \treturn key;\n  }\n\n  var userProvidedKeyEscapeRegex = /\\/(?!\\/)/g;\n  function escapeUserProvidedKey(text) {\n  \treturn ('' + text).replace(userProvidedKeyEscapeRegex, '//');\n  }\n\n  var Children = Object.freeze({\n  \tonly: only,\n  \tforEach: forEach,\n  \tmap: map,\n  \tcount: count,\n  \ttoArray: toArray\n  });\n\n  function eachMixin(mixins, iteratee) {\n  \tmixins.forEach(function (mixin) {\n  \t\tif (mixin) {\n  \t\t\tif (isArr(mixin.mixins)) {\n  \t\t\t\teachMixin(mixin.mixins, iteratee);\n  \t\t\t}\n  \t\t\titeratee(mixin);\n  \t\t}\n  \t});\n  }\n\n  function combineMixinToProto(proto, mixin) {\n  \tfor (var key in mixin) {\n  \t\tif (!mixin.hasOwnProperty(key)) {\n  \t\t\tcontinue;\n  \t\t}\n  \t\tvar value = mixin[key];\n  \t\tif (key === 'getInitialState') {\n  \t\t\taddItem(proto.$getInitialStates, value);\n  \t\t\tcontinue;\n  \t\t}\n  \t\tvar curValue = proto[key];\n  \t\tif (isFn(curValue) && isFn(value)) {\n  \t\t\tproto[key] = pipe(curValue, value);\n  \t\t} else {\n  \t\t\tproto[key] = value;\n  \t\t}\n  \t}\n  }\n\n  function combineMixinToClass(Component, mixin) {\n  \tif (mixin.propTypes) {\n  \t\tComponent.propTypes = Component.propTypes || {};\n  \t\textend(Component.propTypes, mixin.propTypes);\n  \t}\n  \tif (mixin.contextTypes) {\n  \t\tComponent.contextTypes = Component.contextTypes || {};\n  \t\textend(Component.contextTypes, mixin.contextTypes);\n  \t}\n  \textend(Component, mixin.statics);\n  \tif (isFn(mixin.getDefaultProps)) {\n  \t\tComponent.defaultProps = Component.defaultProps || {};\n  \t\textend(Component.defaultProps, mixin.getDefaultProps());\n  \t}\n  }\n\n  function bindContext(obj, source) {\n  \tfor (var key in source) {\n  \t\tif (source.hasOwnProperty(key)) {\n  \t\t\tif (isFn(source[key])) {\n  \t\t\t\tobj[key] = source[key].bind(obj);\n  \t\t\t}\n  \t\t}\n  \t}\n  }\n\n  var Facade = function Facade() {};\n  Facade.prototype = Component.prototype;\n\n  function getInitialState() {\n  \tvar _this = this;\n\n  \tvar state = {};\n  \tvar setState = this.setState;\n  \tthis.setState = Facade;\n  \tthis.$getInitialStates.forEach(function (getInitialState) {\n  \t\tif (isFn(getInitialState)) {\n  \t\t\textend(state, getInitialState.call(_this));\n  \t\t}\n  \t});\n  \tthis.setState = setState;\n  \treturn state;\n  }\n  function createClass(spec) {\n  \tif (!isFn(spec.render)) {\n  \t\tthrow new Error('createClass: spec.render is not function');\n  \t}\n  \tvar specMixins = spec.mixins || [];\n  \tvar mixins = specMixins.concat(spec);\n  \tspec.mixins = null;\n  \tfunction Klass(props, context) {\n  \t\tComponent.call(this, props, context);\n  \t\tthis.constructor = Klass;\n  \t\tspec.autobind !== false && bindContext(this, Klass.prototype);\n  \t\tthis.state = this.getInitialState() || this.state;\n  \t}\n  \tKlass.displayName = spec.displayName;\n  \tvar proto = Klass.prototype = new Facade();\n  \tproto.$getInitialStates = [];\n  \teachMixin(mixins, function (mixin) {\n  \t\tcombineMixinToProto(proto, mixin);\n  \t\tcombineMixinToClass(Klass, mixin);\n  \t});\n  \tproto.getInitialState = getInitialState;\n  \tspec.mixins = specMixins;\n  \treturn Klass;\n  }\n\n  function shallowEqual(objA, objB) {\n      if (objA === objB) {\n          return true;\n      }\n\n      if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n          return false;\n      }\n\n      var keysA = Object.keys(objA);\n      var keysB = Object.keys(objB);\n\n      if (keysA.length !== keysB.length) {\n          return false;\n      }\n\n      // Test for A's keys different from B.\n      for (var i = 0; i < keysA.length; i++) {\n          if (!objB.hasOwnProperty(keysA[i]) || objA[keysA[i]] !== objB[keysA[i]]) {\n              return false;\n          }\n      }\n\n      return true;\n  }\n\n  function PureComponent(props, context) {\n  \tComponent.call(this, props, context);\n  }\n\n  PureComponent.prototype = Object.create(Component.prototype);\n  PureComponent.prototype.constructor = PureComponent;\n  PureComponent.prototype.isPureReactComponent = true;\n  PureComponent.prototype.shouldComponentUpdate = shallowCompare;\n\n  function shallowCompare(nextProps, nextState) {\n  \treturn !shallowEqual(this.props, nextProps) || !shallowEqual(this.state, nextState);\n  }\n\n  var React = extend({\n      version: '0.15.1',\n      cloneElement: cloneElement,\n      isValidElement: isValidElement,\n      createElement: createElement,\n      createFactory: createFactory,\n      Component: Component,\n      PureComponent: PureComponent,\n      createClass: createClass,\n      Children: Children,\n      PropTypes: PropTypes,\n      DOM: DOM\n  }, ReactDOM);\n\n  React.__SECRET_DOM_DO_NOT_USE_OR_YOU_WILL_BE_FIRED = ReactDOM;\n\n  return React;\n\n}));\n\n\n//////////////////\n// WEBPACK FOOTER\n// ../~/react-lite/dist/react-lite.js\n// module id = 32\n// module chunks = 0","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2017 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport cockpit from \"cockpit\";\nimport React from \"react\";\nimport utils from \"./utils.js\";\nimport { StdDetailsLayout } from \"./details.jsx\";\nimport Content from \"./content-views.jsx\";\n\nconst _ = cockpit.gettext;\n\nexport class BlockDetails extends React.Component {\n    render() {\n        var block = this.props.block;\n\n        var header = (\n            <div className=\"panel panel-default\">\n                <div className=\"panel-heading\">{_(\"Block\")}</div>\n                <div className=\"panel-body\">\n                    <table className=\"info-table-ct\">\n                        <tr>\n                            <td>{_(\"storage\", \"Capacity\")}</td>\n                            <td>{ utils.fmt_size_long(block.Size) }</td>\n                        </tr>\n                        <tr>\n                            <td>{_(\"storage\", \"Device File\")}</td>\n                            <td>{ utils.block_name(block) }</td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        );\n\n        var content = <Content.Block client={this.props.client} block={block}/>;\n\n        return <StdDetailsLayout jobs={this.props.jobs} header={header} content={content}/>;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/storaged/block-details.jsx","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nvar cockpit = require(\"cockpit\");\nvar dialog = require(\"./dialog\");\nvar utils = require(\"./utils.js\");\n\nvar React = require(\"react\");\nvar CockpitListing = require(\"cockpit-components-listing.jsx\");\nvar StorageControls = require(\"./storage-controls.jsx\");\nvar FormatDialog = require(\"./format-dialog.jsx\");\n\nvar StorageButton = StorageControls.StorageButton;\nvar StorageLink =   StorageControls.StorageLink;\n\nvar FilesystemTab   = require(\"./fsys-tab.jsx\").FilesystemTab;\nvar CryptoTab       = require(\"./crypto-tab.jsx\").CryptoTab;\nvar BlockVolTab     = require(\"./lvol-tabs.jsx\").BlockVolTab;\nvar PoolVolTab      = require(\"./lvol-tabs.jsx\").PoolVolTab;\nvar PVolTab         = require(\"./pvol-tabs.jsx\").PVolTab;\nvar MDRaidMemberTab = require(\"./pvol-tabs.jsx\").MDRaidMemberTab;\nvar PartitionTab    = require(\"./part-tab.jsx\").PartitionTab;\nvar SwapTab         = require(\"./swap-tab.jsx\").SwapTab;\nvar UnrecognizedTab = require(\"./unrecognized-tab.jsx\").UnrecognizedTab;\n\nvar _ = cockpit.gettext;\nvar C_ = cockpit.gettext;\n\nfunction next_default_logical_volume_name(client, vgroup) {\n    function find_lvol(name) {\n        var lvols = client.vgroups_lvols[vgroup.path];\n        for (var i = 0; i < lvols.length; i++) {\n            if (lvols[i].Name == name)\n                return lvols[i];\n        }\n        return null;\n    }\n\n    var name;\n    for (var i = 0; i < 1000; i++) {\n        name = \"lvol\" + i.toFixed();\n        if (!find_lvol(name))\n            break;\n    }\n\n    return name;\n}\n\nfunction create_tabs(client, target, is_partition) {\n    function endsWith(str, suffix) {\n        return str.indexOf(suffix, str.length - suffix.length) !== -1;\n    }\n\n    var block = endsWith(target.iface, \".Block\")? target : null;\n    var block_lvm2 = block && client.blocks_lvm2[block.path];\n    var block_pvol = block && client.blocks_pvol[block.path];\n\n    var lvol = (endsWith(target.iface, \".LogicalVolume\")?\n                target :\n                block_lvm2 && client.lvols[block_lvm2.LogicalVolume]);\n\n    var is_filesystem         = (block && block.IdUsage == 'filesystem');\n    var is_crypto             = (block && block.IdUsage == 'crypto');\n\n    var tabs = [ ];\n    var row_action = null;\n\n    function add_tab(name, renderer) {\n        tabs.push(\n            { name: name,\n              renderer: renderer,\n              data: {\n                  client: client,\n                  block: block,\n                  lvol: lvol,\n              }\n            });\n    }\n\n    function create_thin() {\n        var vgroup = lvol && client.vgroups[lvol.VolumeGroup];\n        if (!vgroup)\n            return;\n\n        dialog.open({ Title: _(\"Create Thin Volume\"),\n                      Fields: [\n                          { TextInput: \"name\",\n                            Title: _(\"Name\"),\n                            Value: next_default_logical_volume_name(client, vgroup),\n                            validate: utils.validate_lvm2_name\n                          },\n                          { SizeSlider: \"size\",\n                            Title: _(\"Size\"),\n                            Value: lvol.Size,\n                            Max: lvol.Size * 3,\n                            AllowInfinite: true,\n                            Round: vgroup.ExtentSize\n                          }\n                      ],\n                      Action: {\n                          Title: _(\"Create\"),\n                          action: function (vals) {\n                              return vgroup.CreateThinVolume(vals.name, vals.size, lvol.path, { });\n                          }\n                      }\n        });\n    }\n\n    if (lvol) {\n        if (lvol.Type == \"pool\") {\n            add_tab(_(\"Pool\"), PoolVolTab);\n            row_action = <StorageButton onClick={create_thin}>{_(\"Create Thin Volume\")}</StorageButton>;\n        } else {\n            add_tab(_(\"Volume\"), BlockVolTab);\n        }\n    }\n\n    if (is_partition) {\n        add_tab(_(\"Partition\"), PartitionTab);\n    }\n\n    if (is_filesystem) {\n        add_tab(_(\"Filesystem\"), FilesystemTab);\n    } else if (is_crypto) {\n        add_tab(_(\"Encryption\"), CryptoTab);\n    } else if ((block && block.IdUsage == \"raid\" && block.IdType == \"LVM2_member\") ||\n               (block_pvol && client.vgroups[block_pvol.VolumeGroup])) {\n        add_tab(_(\"Physical Volume\"), PVolTab);\n    } else if ((block && block.IdUsage == \"raid\") ||\n               (block && client.mdraids[block.MDRaidMember])) {\n        add_tab(_(\"RAID Member\"), MDRaidMemberTab);\n    } else if (block && block.IdUsage == \"other\" && block.IdType == \"swap\") {\n        add_tab(_(\"Swap\"), SwapTab);\n    } else if (block) {\n        add_tab(_(\"Unrecognized Data\"), UnrecognizedTab);\n    }\n\n    var tab_actions = [ ];\n\n    function add_action(title, func, excuse) {\n        tab_actions.push(<StorageButton onClick={func} excuse={excuse}>{title}</StorageButton>);\n    }\n\n    function lock() {\n        var crypto = client.blocks_crypto[block.path];\n        if (!crypto)\n            return;\n\n        return crypto.Lock({});\n    }\n\n    function unlock() {\n        var crypto = client.blocks_crypto[block.path];\n        if (!crypto)\n            return;\n\n        /* If there is a stored passphrase, the Unlock method will\n         * use it unconditionally.  So we don't ask for one in\n         * that case.\n         *\n         * https://udisks.freedesktop.org/docs/latest/gdbus-org.freedesktop.UDisks2.Block.html#gdbus-method-org-freedesktop-UDisks2-Block.GetSecretConfiguration\n         */\n        return block.GetSecretConfiguration({}).then(function (items) {\n            for (var i = 0; i < items.length; i++) {\n                if (items[i][0] == 'crypttab' &&\n                    items[i][1]['passphrase-contents'] &&\n                    utils.decode_filename(items[i][1]['passphrase-contents'].v)) {\n                    return crypto.Unlock(\"\", { });\n                }\n            }\n\n            dialog.open({ Title: _(\"Unlock\"),\n                          Fields: [\n                              { PassInput: \"passphrase\",\n                                Title: _(\"Passphrase\")\n                              }\n                          ],\n                          Action: {\n                              Title: _(\"Unlock\"),\n                              action: function (vals) {\n                                  return crypto.Unlock(vals.passphrase, {});\n                              }\n                          }\n                        });\n        });\n    }\n\n    if (is_crypto) {\n        if (client.blocks_cleartext[block.path]) {\n            add_action(_(\"Lock\"), lock);\n        } else {\n            add_action(_(\"Unlock\"), unlock);\n        }\n    }\n\n    function activate() {\n        return lvol.Activate({});\n    }\n\n    function deactivate() {\n        return lvol.Deactivate({});\n    }\n\n    if (lvol) {\n        if (lvol.Active) {\n            add_action(_(\"Deactivate\"), deactivate);\n        } else {\n            add_action(_(\"Activate\"), activate);\n        }\n    }\n\n    function delete_() {\n        var block_part;\n\n        /* This is called only for logical volumes and partitions\n         */\n\n        if (block)\n            block_part = client.blocks_part[block.path];\n\n        var name, danger;\n\n        if (lvol) {\n            name = utils.lvol_name(lvol);\n            danger = _(\"Deleting a logical volume will delete all data in it.\");\n        } else if (block_part) {\n            name = utils.block_name(block);\n            danger = _(\"Deleting a partition will delete all data in it.\");\n        }\n\n        if (name) {\n            var usage = utils.get_active_usage(client, target.path);\n\n            if (usage.Blocking) {\n                dialog.open({ Title: cockpit.format(_(\"$0 is in active use\"), name),\n                              Blocking: usage.Blocking,\n                              Fields: [ ]\n                });\n                return;\n            }\n\n            dialog.open({ Title: cockpit.format(_(\"Please confirm deletion of $0\"), name),\n                          Teardown: usage.Teardown,\n                          Fields: [\n                          ],\n                          Action: {\n                              Danger: danger,\n                              Title: _(\"Delete\"),\n                              action: function () {\n                                  return utils.teardown_active_usage(client, usage).\n                                               then(function () {\n                                                   if (lvol)\n                                                       return lvol.Delete({ 'tear-down': { t: 'b', v: true }\n                                                       });\n                                                   else if (block_part)\n                                                       return block_part.Delete({ 'tear-down': { t: 'b', v: true }\n                                                       });\n                                               });\n                              }\n                          }\n            });\n        }\n    }\n\n    if (is_partition || lvol) {\n        var excuse = null;\n        if (client.is_old_udisks2 && is_crypto && client.blocks_cleartext[block.path])\n            excuse = _(\"Can't delete while unlocked\");\n        add_action(_(\"Delete\"), delete_, excuse);\n    }\n\n    return {\n        renderers: tabs,\n        actions: [ <div>{tab_actions}</div> ],\n        row_action: row_action,\n    };\n}\n\nfunction block_description(client, block) {\n    var usage;\n    var block_pvol = client.blocks_pvol[block.path];\n\n    if (block.IdUsage == \"filesystem\") {\n        usage = cockpit.format(C_(\"storage-id-desc\", \"$0 File System\"), block.IdType);\n    } else if (block.IdUsage == \"raid\") {\n        if (block_pvol && client.vgroups[block_pvol.VolumeGroup]) {\n            var vgroup = client.vgroups[block_pvol.VolumeGroup];\n            usage = cockpit.format(_(\"Physical volume of $0\"), vgroup.Name);\n        } else if (client.mdraids[block.MDRaidMember]) {\n            var mdraid = client.mdraids[block.MDRaidMember];\n            usage = cockpit.format(_(\"Member of RAID Device $0\"), utils.mdraid_name(mdraid));\n        } else if (block.IdType == \"LVM2_member\") {\n            usage = _(\"Physical Volume\");\n        } else {\n            usage = _(\"Member of RAID Device\");\n        }\n    } else if (block.IdUsage == \"crypto\") {\n        usage = C_(\"storage-id-desc\", \"Encrypted data\");\n    } else if (block.IdUsage == \"other\") {\n        if (block.IdType == \"swap\") {\n            usage = C_(\"storage-id-desc\", \"Swap Space\");\n        } else {\n            usage = C_(\"storage-id-desc\", \"Other Data\");\n        }\n    } else {\n        usage = C_(\"storage-id-desc\", \"Unrecognized Data\");\n    }\n\n    return {\n        size: block.Size,\n        text: usage\n    };\n}\n\nfunction append_row(client, rows, level, key, name, desc, tabs, job_object) {\n    // Except in a very few cases, we don't both have a button and\n    // a spinner in the same row, so we put them in the same\n    // place.\n\n    var last_column = null;\n    if (job_object)\n        last_column = (\n            <span className=\"spinner spinner-sm spinner-inline\"\n                  style={{visibility: client.path_jobs[job_object]? \"visible\" : \"hidden\"}}>\n            </span>);\n    if (tabs.row_action) {\n        if (last_column) {\n            last_column = <span>{last_column}{tabs.row_action}</span>;\n        } else {\n            last_column = tabs.row_action;\n        }\n    }\n\n    var cols = [\n        <span className={\"content-level-\" + level}>\n            {utils.format_size_and_text(desc.size, desc.text)}\n        </span>,\n        { name: name, 'header': true },\n        { name: last_column, tight: true },\n    ];\n    rows.push(\n        <CockpitListing.ListingRow key={key}\n                                   columns={cols}\n                                   tabRenderers={tabs.renderers}\n                                   listingActions={tabs.actions}/>\n    );\n}\n\nfunction append_non_partitioned_block(client, rows, level, block, is_partition) {\n    var desc, tabs;\n    var cleartext_block;\n\n    if (block.IdUsage == 'crypto')\n        cleartext_block = client.blocks_cleartext[block.path];\n\n    tabs = create_tabs(client, block, is_partition);\n    desc = block_description(client, block);\n\n    append_row(client, rows, level, block.path, utils.block_name(block), desc, tabs, block.path);\n\n    if (cleartext_block)\n        append_device(client, rows, level+1, cleartext_block);\n}\n\nfunction append_partitions(client, rows, level, block) {\n    var block_ptable = client.blocks_ptable[block.path];\n    var device_level = level;\n\n    var is_dos_partitioned = (block_ptable.Type == 'dos');\n\n    function append_free_space(level, start, size) {\n        function create_partition() {\n            FormatDialog.format_dialog(client, block.path, start, size, is_dos_partitioned && level <= device_level);\n        }\n\n        var btn = (\n            <StorageButton onClick={create_partition}>\n                {_(\"Create Partition\")}\n            </StorageButton>\n        );\n\n        var cols = [\n            <span className={\"content-level-\" + level}>\n                {utils.format_size_and_text(size, _(\"Free Space\"))}\n            </span>,\n            \"\",\n            { element: btn, tight: true }\n        ];\n\n        rows.push(\n            <CockpitListing.ListingRow columns={cols}/>\n        );\n    }\n\n    function append_extended_partition(level, partition) {\n        var desc = {\n            size: partition.size,\n            text: _(\"Extended Partition\")\n        };\n        var tabs = create_tabs(client, partition.block, true);\n        append_row(client, rows, level, partition.block.path, utils.block_name(partition.block), desc, tabs, partition.block.path);\n        process_partitions(level + 1, partition.partitions);\n    }\n\n    function process_partitions(level, partitions) {\n        var i, p;\n        for (i = 0; i < partitions.length; i++) {\n            p = partitions[i];\n            if (p.type == 'free')\n                append_free_space(level, p.start, p.size);\n            else if (p.type == 'container')\n                append_extended_partition(level, p);\n            else\n                append_non_partitioned_block(client, rows, level, p.block, true);\n        }\n    }\n\n    process_partitions(level, utils.get_partitions(client, block));\n}\n\nfunction append_device(client, rows, level, block) {\n    if (client.blocks_ptable[block.path])\n        append_partitions(client, rows, level, block);\n    else\n        append_non_partitioned_block(client, rows, level, block, null);\n}\n\nfunction block_rows(client, block) {\n    var rows = [ ];\n    append_device(client, rows, 0, block);\n    return rows;\n}\n\nfunction block_content(client, block) {\n    if (!block)\n        return null;\n\n    if (block.Size === 0)\n        return null;\n\n    function format_disk() {\n        var usage = utils.get_active_usage(client, block.path);\n\n        if (usage.Blocking) {\n            dialog.open({ Title: cockpit.format(_(\"$0 is in active use\"), utils.block_name(block)),\n                          Blocking: usage.Blocking,\n                          Fields: [ ]\n            });\n            return;\n        }\n\n        dialog.open({ Title: cockpit.format(_(\"Format Disk $0\"), utils.block_name(block)),\n                      Teardown: usage.Teardown,\n                      Fields: [\n                          { SelectOne: \"erase\",\n                            Title: _(\"Erase\"),\n                            Options: [\n                                { value: \"no\", Title: _(\"Don't overwrite existing data\") },\n                                { value: \"zero\", Title: _(\"Overwrite existing data with zeros\") }\n                            ]\n                          },\n                          { SelectOne: \"type\",\n                            Title: _(\"Partitioning\"),\n                            Options: [\n                                { value: \"dos\", Title: _(\"Compatible with all systems and devices (MBR)\") },\n                                { value: \"gpt\", Title: _(\"Compatible with modern system and hard disks > 2TB (GPT)\"),\n                                  selected: true\n                                },\n                                { value: \"empty\", Title: _(\"No partitioning\") }\n                            ]\n                          }\n                      ],\n                      Action: {\n                          Title: _(\"Format\"),\n                          Danger: _(\"Formatting a disk will erase all data on it.\"),\n                          action: function (vals) {\n                              var options = { 'no-block': { t: 'b', v: true },\n                                              'tear-down': { t: 'b', v: true }\n                              };\n                              if (vals.erase != \"no\")\n                                  options.erase = { t: 's', v: vals.erase };\n                              return utils.teardown_active_usage(client, usage).\n                                           then(function () {\n                                               return block.Format(vals.type, options);\n                                           });\n                          }\n                      }\n        });\n    }\n\n    var format_disk_btn = (\n        <div className=\"pull-right\">\n            <StorageButton onClick={format_disk} excuse={block.ReadOnly? _(\"Device is read-only\") : null}>\n                {_(\"Create partition table\")}\n            </StorageButton>\n        </div>);\n\n    return (\n        <CockpitListing.Listing title={_(\"Content\")}\n                                actions={format_disk_btn}>\n            { block_rows(client, block) }\n        </CockpitListing.Listing>\n    );\n}\n\nvar Block = React.createClass({\n    render: function () {\n        return block_content(this.props.client, this.props.block);\n    }\n});\n\nfunction append_logical_volume_block(client, rows, level, block, lvol) {\n    var tabs, desc;\n    if (client.blocks_ptable[block.path]) {\n        desc = {\n            size: block.Size,\n            text: lvol.Name\n        };\n        tabs = create_tabs(client, block, false);\n        append_row(client, rows, level, lvol.Name, utils.block_name(block), desc, tabs, block.path);\n        append_partitions(client, rows, level+1, block);\n    } else {\n        append_non_partitioned_block (client, rows, level, block, false);\n    }\n}\n\nfunction append_logical_volume(client, rows, level, lvol) {\n    var tabs, desc, block;\n\n    if (lvol.Type == \"pool\") {\n        desc = {\n            size: lvol.Size,\n            text: _(\"Pool for Thin Volumes\")\n        };\n        tabs = create_tabs (client, lvol, false);\n        append_row(client, rows, level, lvol.Name, lvol.Name, desc, tabs, false);\n        client.lvols_pool_members[lvol.path].forEach(function (member_lvol) {\n            append_logical_volume (client, rows, level+1, member_lvol);\n        });\n    } else {\n        block = client.lvols_block[lvol.path];\n        if (block)\n            append_logical_volume_block (client, rows, level, block, lvol);\n        else {\n            // If we can't find the block for a active\n            // volume, Storaged or something below is\n            // probably misbehaving, and we show it as\n            // \"unsupported\".\n\n            desc = {\n                size: lvol.Size,\n                text: lvol.Active? _(\"Unsupported volume\") : _(\"Inactive volume\")\n            }\n            tabs = create_tabs (client, lvol, false);\n            append_row(client, rows, level, lvol.Name, lvol.Name, desc, tabs, false);\n        }\n    }\n}\n\nfunction vgroup_rows(client, vgroup) {\n    var rows = [ ];\n    (client.vgroups_lvols[vgroup.path] || [ ]).forEach(function (lvol) {\n        if (lvol.ThinPool == \"/\")\n            append_logical_volume(client, rows, 0, lvol);\n    });\n    return rows;\n}\n\nvar VGroup = React.createClass({\n    render: function () {\n        var self = this;\n        var vgroup = this.props.vgroup;\n\n        function create_logical_volume() {\n            if (vgroup.FreeSize == 0)\n                return;\n\n            dialog.open({ Title: _(\"Create Logical Volume\"),\n                          Fields: [\n                              { TextInput: \"name\",\n                                Title: _(\"Name\"),\n                                Value: next_default_logical_volume_name(self.props.client, vgroup),\n                                validate: utils.validate_lvm2_name\n                              },\n                              { SelectOne: \"purpose\",\n                                Title: _(\"Purpose\"),\n                                Options: [\n                                    { value: \"block\", Title: _(\"Block device for filesystems\"),\n                                      selected: true\n                                    },\n                                    { value: \"pool\", Title: _(\"Pool for thinly provisioned volumes\") }\n                                    /* Not implemented\n                                       { value: \"cache\", Title: _(\"Cache\") }\n                                     */\n                                ]\n                              },\n                              /* Not Implemented\n                                 { SelectOne: \"layout\",\n                                 Title: _(\"Layout\"),\n                                 Options: [\n                                 { value: \"linear\", Title: _(\"Linear\"),\n                                 selected: true\n                                 },\n                                 { value: \"striped\", Title: _(\"Striped (RAID 0)\"),\n                                 enabled: raid_is_possible\n                                 },\n                                 { value: \"raid1\", Title: _(\"Mirrored (RAID 1)\"),\n                                 enabled: raid_is_possible\n                                 },\n                                 { value: \"raid10\", Title: _(\"Striped and mirrored (RAID 10)\"),\n                                 enabled: raid_is_possible\n                                 },\n                                 { value: \"raid4\", Title: _(\"With dedicated parity (RAID 4)\"),\n                                 enabled: raid_is_possible\n                                 },\n                                 { value: \"raid5\", Title: _(\"With distributed parity (RAID 5)\"),\n                                 enabled: raid_is_possible\n                                 },\n                                 { value: \"raid6\", Title: _(\"With double distributed parity (RAID 6)\"),\n                                 enabled: raid_is_possible\n                                 }\n                                 ],\n                                 },\n                               */\n                              { SizeSlider: \"size\",\n                                Title: _(\"Size\"),\n                                Max: vgroup.FreeSize,\n                                Round: vgroup.ExtentSize\n                              }\n                          ],\n                          Action: {\n                              Title: _(\"Create\"),\n                              action: function (vals) {\n                                  if (vals.purpose == \"block\")\n                                      return vgroup.CreatePlainVolume(vals.name, vals.size, { });\n                                  else if (vals.purpose == \"pool\")\n                                      return vgroup.CreateThinPoolVolume(vals.name, vals.size, { });\n                              }\n                          }\n            });\n        }\n\n        var excuse = vgroup.FreeSize == 0 && _(\"No free space\");\n\n        var new_volume_link = (\n            <div className=\"pull-right\">\n                <StorageLink onClick={create_logical_volume}\n                             excuse={excuse}>\n                    <span className=\"pficon pficon-add-circle-o\"></span>\n                    {\" \"}\n                    {_(\"Create new Logical Volume\")}\n                </StorageLink>\n            </div>);\n\n        return (\n            <CockpitListing.Listing title=\"Logical Volumes\"\n                                    actions={new_volume_link}\n                                    emptyCaption={_(\"No Logical Volumes\")}>\n                { vgroup_rows(self.props.client, vgroup) }\n            </CockpitListing.Listing>\n        );\n    }\n});\n\nmodule.exports = {\n    Block: Block,\n    VGroup: VGroup\n};\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/storaged/content-views.jsx","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nvar React = require('react');\n\nrequire('./listing.less');\n\n/* entry for an alert in the listing, can be expanded (with details) or standard\n * rowId optional: an identifier for the row which will be set as \"data-row-id\" attribute on the <tr>\n * columns list of columns to show in the header\n *     columns to show, can be a string, react component or object with { name: 'name', 'header': false }\n *     'header' (or if simple string) defaults to false\n *     in case 'header' is true, <th> is used for the entries, otherwise <td>\n * tabRenderers optional: list of tab renderers for inline expansion, array of objects with\n *     - name tab name (has to be unique in the entry, used as react key)\n *     - renderer react component\n *     - data render data passed to the tab renderer\n *     - presence 'always', 'onlyActive', 'loadOnDemand', default: 'loadOnDemand'\n *         - 'always' once a row is expanded, this tab is always rendered, but invisible if not active\n *         - 'onlyActive' the tab is only rendered when active\n *         - 'loadOnDemand' the tab is first rendered when it becomes active, then follows 'always' behavior\n *     if tabRenderers isn't set, item can't be expanded inline\n * navigateToItem optional: callback triggered when a row is clicked, pattern suggests navigation\n *     to view expanded item details, if not set, navigation isn't available\n * listingDetail optional: text rendered next to action buttons, similar style to the tab headers\n * listingActions optional: buttons that are presented as actions for the expanded item\n * selectChanged optional: callback will be used when the \"selected\" state changes\n * selected optional: true if the item is selected, can't be true if row has navigation or expansion\n * initiallyExpanded optional: the entry will be initially rendered as expanded, but then behaves normally\n */\nvar ListingRow = React.createClass({\n    propTypes: {\n        rowId: React.PropTypes.string,\n        columns: React.PropTypes.array.isRequired,\n        tabRenderers: React.PropTypes.array,\n        navigateToItem: React.PropTypes.func,\n        listingDetail: React.PropTypes.node,\n        listingActions: React.PropTypes.arrayOf(React.PropTypes.node),\n        selectChanged: React.PropTypes.func,\n        selected: React.PropTypes.bool,\n        initiallyExpanded: React.PropTypes.bool,\n        initiallyActiveTab: React.PropTypes.bool,\n    },\n    getDefaultProps: function () {\n        return {\n            tabRenderers: [],\n            navigateToItem: null,\n        };\n    },\n    getInitialState: function() {\n        return {\n            expanded: this.props.initiallyExpanded, // show expanded view if true, otherwise one line compact\n            activeTab: this.props.initiallyActiveTab ? this.props.initiallyActiveTab : 0,    // currently active tab in expanded mode, defaults to first tab\n            loadedTabs: {},  // which tabs were already loaded - this is important for 'loadOnDemand' setting\n                             // contains tab indices\n            selected: this.props.selected, // whether the current row is selected\n        };\n    },\n    handleNavigateClick: function(e) {\n        // only consider primary mouse button\n        if (!e || e.button !== 0)\n            return;\n        this.props.navigateToItem();\n    },\n    handleExpandClick: function(e) {\n        // only consider primary mouse button\n        if (!e || e.button !== 0)\n            return;\n\n        var willBeExpanded = !this.state.expanded && this.props.tabRenderers.length > 0;\n        this.setState( { expanded: willBeExpanded });\n\n        var loadedTabs = {};\n        // unload all tabs if not expanded\n        if (willBeExpanded) {\n            // see if we should preload some tabs\n            var tabIdx;\n            var tabPresence;\n            for (tabIdx = 0; tabIdx < this.props.tabRenderers.length; tabIdx++) {\n                if ('presence' in this.props.tabRenderers[tabIdx])\n                    tabPresence = this.props.tabRenderers[tabIdx].presence;\n                else\n                    tabPresence = 'default';\n                // the active tab is covered by separate logic\n                if (tabPresence == 'always')\n                    loadedTabs[tabIdx] = true;\n            }\n            // ensure the active tab is loaded\n            loadedTabs[this.state.activeTab] = true;\n        }\n\n        this.setState( { loadedTabs: loadedTabs });\n\n        e.stopPropagation();\n        e.preventDefault();\n    },\n    handleSelectClick: function(e) {\n        // only consider primary mouse button\n        if (!e || e.button !== 0)\n            return;\n\n        var selected = !this.state.selected;\n        this.setState( { selected: selected });\n\n        if (this.props.selectChanged)\n            this.props.selectChanged(selected);\n\n        e.stopPropagation();\n        e.preventDefault();\n    },\n    handleTabClick: function(tabIdx, e) {\n        // only consider primary mouse button\n        if (!e || e.button !== 0)\n            return;\n        var prevTab = this.state.activeTab;\n        var prevTabPresence = 'default';\n        var loadedTabs = this.state.loadedTabs;\n        if (prevTab !== tabIdx) {\n            // see if we need to unload the previous tab\n            if ('presence' in this.props.tabRenderers[prevTab])\n                prevTabPresence = this.props.tabRenderers[prevTab].presence;\n\n            if (prevTabPresence == 'onlyActive')\n                delete loadedTabs[prevTab];\n\n            // ensure the new tab is loaded and update state\n            loadedTabs[tabIdx] = true;\n            this.setState({ loadedTabs: loadedTabs, activeTab: tabIdx });\n        }\n        e.stopPropagation();\n        e.preventDefault();\n    },\n    render: function() {\n        var self = this;\n        // only enable navigation if a function is provided and the row isn't expanded (prevent accidental navigation)\n        var allowNavigate = !!this.props.navigateToItem && !this.state.expanded;\n\n        var headerEntries = this.props.columns.map(function(itm) {\n            if (typeof itm === 'string' || typeof itm === 'number' || itm === null || itm === undefined || itm instanceof String || React.isValidElement(itm))\n                return (<td>{itm}</td>);\n            else if ('header' in itm && itm.header)\n                return (<th>{itm.name}</th>);\n            else if ('tight' in itm && itm.tight)\n                return (<td className=\"listing-ct-actions\">{itm.name || itm.element}</td>);\n            else\n                return (<td>{itm.name}</td>);\n        });\n\n        var allowExpand = (this.props.tabRenderers.length > 0);\n        var expandToggle;\n        if (allowExpand) {\n            expandToggle = <td className=\"listing-ct-toggle\" onClick={ allowNavigate?this.handleExpandClick:undefined }>\n                               <i className=\"fa fa-fw\"></i>\n                           </td>;\n        } else {\n            expandToggle = <td className=\"listing-ct-toggle\"></td>;\n        }\n\n        var listingItemClasses = [\"listing-ct-item\"];\n        if (!allowNavigate)\n            listingItemClasses.push(\"listing-ct-nonavigate\");\n        if (!allowExpand)\n            listingItemClasses.push(\"listing-ct-noexpand\");\n\n        var allowSelect = !(allowNavigate || allowExpand) && (this.state.selected !== undefined);\n        var clickHandler;\n        if (allowSelect) {\n            clickHandler = this.handleSelectClick;\n            if (this.state.selected)\n                listingItemClasses.push(\"listing-ct-selected\");\n        } else {\n            if (allowNavigate)\n                clickHandler = this.handleNavigateClick;\n            else\n                clickHandler = this.handleExpandClick;\n        }\n\n        var listingItem = (\n            <tr data-row-id={ this.props.rowId }\n                className={ listingItemClasses.join(' ') }\n                onClick={clickHandler}>\n                {expandToggle}\n                {headerEntries}\n            </tr>\n        );\n\n        if (this.state.expanded) {\n            var links = this.props.tabRenderers.map(function(itm, idx) {\n                return (\n                    <li key={idx} className={ (idx === self.state.activeTab) ? \"active\" : \"\"} >\n                        <a href=\"#\" onClick={ self.handleTabClick.bind(self, idx) }>{itm.name}</a>\n                    </li>\n                );\n            });\n            var tabs = [];\n            var tabIdx;\n            var Renderer;\n            var rendererData;\n            var row;\n            for (tabIdx = 0; tabIdx < this.props.tabRenderers.length; tabIdx++) {\n                Renderer = this.props.tabRenderers[tabIdx].renderer;\n                rendererData = this.props.tabRenderers[tabIdx].data;\n                if (tabIdx !== this.state.activeTab && !(tabIdx in this.state.loadedTabs))\n                    continue;\n                row = <Renderer key={ this.props.tabRenderers[tabIdx].name } hidden={ (tabIdx !== this.state.activeTab) } {...rendererData} />;\n                if (tabIdx === this.state.activeTab)\n                    tabs.push(<div className=\"listing-ct-body\" key={tabIdx}>{row}</div>);\n                else\n                    tabs.push(<div className=\"listing-ct-body\" key={tabIdx} hidden>{row}</div>);\n            }\n\n            var listingDetail;\n            if ('listingDetail' in this.props) {\n                listingDetail = (\n                    <span className=\"listing-ct-caption\">\n                        {this.props.listingDetail}\n                    </span>\n                );\n            }\n\n            return (\n                <tbody className=\"open\">\n                    {listingItem}\n                    <tr className=\"listing-ct-panel\">\n                        <td colSpan={ headerEntries.length + (expandToggle?1:0) }>\n                            <div className=\"listing-ct-head\">\n                                <div className=\"listing-ct-actions\">\n                                    {listingDetail}\n                                    {this.props.listingActions}\n                                </div>\n                                <ul className=\"nav nav-tabs nav-tabs-pf\">\n                                    {links}\n                                </ul>\n                            </div>\n                            {tabs}\n                        </td>\n                    </tr>\n                </tbody>\n            );\n        } else {\n            return (\n                <tbody>\n                    {listingItem}\n                    <tr className=\"listing-ct-panel\"/>\n                </tbody>\n            );\n        }\n    }\n});\n\n/* Implements a PatternFly 'List View' pattern\n * https://www.patternfly.org/list-view/\n * Properties:\n * - title\n * - fullWidth optional: set width to 100% of parent, defaults to true\n * - emptyCaption header caption to show if list is empty, defaults to \"No entries\"\n * - columnTitles: array of column titles, as strings\n * - actions: additional listing-wide actions (displayed next to the list's title)\n */\nvar Listing = React.createClass({\n    propTypes: {\n        title: React.PropTypes.string.isRequired,\n        fullWidth: React.PropTypes.bool,\n        emptyCaption: React.PropTypes.string.isRequired,\n        columnTitles: React.PropTypes.arrayOf(React.PropTypes.string),\n        actions: React.PropTypes.arrayOf(React.PropTypes.node)\n    },\n    getDefaultProps: function () {\n        return {\n            fullWidth: true,\n            columnTitles: [],\n            actions: []\n        };\n    },\n    render: function() {\n        var bodyClasses = [\"listing\", \"listing-ct\"];\n        if (this.props.fullWidth)\n            bodyClasses.push(\"listing-ct-wide\");\n        var headerClasses;\n        var headerRow;\n        var selectableRows;\n        if (!this.props.children || this.props.children.length === 0) {\n            headerClasses = \"listing-ct-empty\";\n            headerRow = <tr><td>{this.props.emptyCaption}</td></tr>;\n        } else if (this.props.columnTitles.length) {\n            // check if any of the children are selectable\n            selectableRows = false;\n            this.props.children.forEach(function(r) {\n                if (r.props.selected !== undefined)\n                    selectableRows = true;\n            });\n\n            if (selectableRows) {\n                // now make sure that if one is set, it's available on all items\n                this.props.children.forEach(function(r) {\n                    if (r.props.selected === undefined)\n                        r.props.selected = false;\n                });\n            }\n\n            headerRow = (\n                <tr>\n                    <th className=\"listing-ct-toggle\"></th>\n                    { this.props.columnTitles.map(function (title) { return <th>{title}</th>; }) }\n                </tr>\n            );\n        } else {\n           headerRow = <tr/>\n        }\n        var caption;\n        if (this.props.title || (this.props.actions && this.props.actions.length > 0))\n            caption = <caption className=\"cockpit-caption\">{this.props.title}{this.props.actions}</caption>;\n\n        return (\n            <table className={ bodyClasses.join(\" \") }>\n                {caption}\n                <thead className={headerClasses}>\n                    {headerRow}\n                </thead>\n                {this.props.children}\n            </table>\n        );\n    },\n});\n\nmodule.exports = {\n    ListingRow: ListingRow,\n    Listing: Listing,\n};\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/lib/cockpit-components-listing.jsx","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nvar cockpit = require(\"cockpit\");\nvar permission = require(\"./permissions.js\").permission;\nvar utils = require(\"./utils.js\");\nvar $ = require(\"jquery\");\n\nvar React = require(\"react\");\nvar Tooltip = require(\"cockpit-components-tooltip.jsx\").Tooltip;\n\nimport { OnOffSwitch } from \"cockpit-components-onoff.jsx\";\n\nvar _ = cockpit.gettext;\n\n/* StorageControl - a button or similar that triggers\n *                  a privileged action.\n *\n * It can be disabled and will show a tooltip then.  It will\n * automatically disable itself when the logged in user doesn't\n * have permission.\n *\n * Properties:\n *\n * - excuse:  If set, the button/link is disabled and will show the\n *            excuse in a tooltip.\n */\n\nvar StorageControl = React.createClass({\n    getInitialState: function () {\n        return { allowed: permission.allowed !== false };\n    },\n    onPermissionChanged: function () {\n        this.setState({ allowed: permission.allowed !== false });\n    },\n    componentDidMount: function () {\n        $(permission).on(\"changed\", this.onPermissionChanged);\n    },\n    componentWillUnmount: function () {\n        $(permission).off(\"changed\", this.onPermissionChanged);\n    },\n    render: function () {\n        var excuse = this.props.excuse;\n        if (!this.state.allowed) {\n            var markup = {\n                __html: cockpit.format(_(\"The user <b>$0</b> is not permitted to manage storage\"),\n                                       permission.user ? permission.user.name : '')\n            }\n            excuse = <span dangerouslySetInnerHTML={markup}></span>;\n        }\n\n        return (\n            <Tooltip tip={excuse}>\n                { this.props.content(excuse) }\n            </Tooltip>\n        );\n    }\n\n});\n\nfunction checked(callback) {\n    return function (event) {\n        // only consider primary mouse button\n        if (!event || event.button !== 0)\n            return;\n        var promise = callback();\n        if (promise)\n            promise.fail(function (error) {\n                $('#error-popup-title').text(_(\"Error\"));\n                $('#error-popup-message').text(error.toString());\n                $('#error-popup').modal('show');\n            });\n        event.stopPropagation();\n    };\n}\n\nvar StorageButton = React.createClass({\n    render: function () {\n        return (\n            <StorageControl excuse={this.props.excuse}\n                            content={(excuse) => (\n                                    <button onClick={checked(this.props.onClick)}\n                                            className={\"btn btn-default\" + (excuse? \" disabled\" : \"\")}>\n                                                      {this.props.children}\n                                    </button>\n                                )}/>\n        );\n    }\n});\n\nvar StorageLink = React.createClass({\n    render: function () {\n        return (\n            <StorageControl excuse={this.props.excuse}\n                            content={(excuse) => (\n                                    <a onClick={checked(this.props.onClick)}\n                                       className={excuse? \" disabled\" : \"\"}>\n                                                 {this.props.children}\n                                    </a>\n                            )}/>\n        );\n    }\n});\n\n/* StorageBlockNavLink - describe a given block device concisely and\n                         allow navigating to its details.\n\n   Properties:\n\n   - client\n   - block\n */\n\nvar StorageBlockNavLink = React.createClass({\n    render: function () {\n        var self = this;\n        var client = self.props.client;\n        var block = self.props.block;\n\n        if (!block)\n            return;\n\n        var path = block.path;\n        var is_part, is_crypt, is_lvol;\n\n        for (;;) {\n            if (client.blocks_part[path] && client.blocks_ptable[client.blocks_part[path].Table]) {\n                is_part = true;\n                path = client.blocks_part[path].Table;\n            } else if (client.blocks[path] && client.blocks[client.blocks[path].CryptoBackingDevice]) {\n                is_crypt = true;\n                path = client.blocks[path].CryptoBackingDevice;\n            } else {\n                break;\n            }\n        }\n\n        block = client.blocks[path];\n\n        if (client.blocks_lvm2[path] && client.lvols[client.blocks_lvm2[path].LogicalVolume])\n            is_lvol = true;\n\n        var name, go;\n        if (client.mdraids[block.MDRaid]) {\n            name = cockpit.format(_(\"RAID Device $0\"), utils.mdraid_name(client.mdraids[block.MDRaid]));\n            go = function () {\n                cockpit.location.go([ 'mdraid', client.mdraids[block.MDRaid].UUID ]);\n            };\n        } else if (client.blocks_lvm2[path] &&\n                   client.lvols[client.blocks_lvm2[path].LogicalVolume] &&\n                   client.vgroups[client.lvols[client.blocks_lvm2[path].LogicalVolume].VolumeGroup]) {\n                       var vg = client.vgroups[client.lvols[client.blocks_lvm2[path].LogicalVolume].VolumeGroup].Name;\n                       name = cockpit.format(_(\"Volume Group $0\"), vg);\n                       go = function () {\n                           console.location.go([ 'vg', vg ]);\n                       };\n        } else {\n            if (client.drives[block.Drive])\n                name = utils.drive_name(client.drives[block.Drive]);\n            else\n                name = utils.block_name(block);\n            go = function () {\n                cockpit.location.go([ utils.block_name(block).replace(/^\\/dev\\//, \"\") ]);\n            };\n        }\n\n        var link = <a onClick={go}>{name}</a>;\n\n        // TODO - generalize this to arbitrary number of arguments (when needed)\n        function fmt_to_array(fmt, arg) {\n            var index = fmt.indexOf(\"$0\");\n            if (index >= 0)\n                return [ fmt.slice(0, index), arg, fmt.slice(index+2) ];\n            else\n                return [ fmt ];\n        }\n\n        if (is_lvol && is_crypt)\n            return <span>{fmt_to_array(_(\"Encrypted Logical Volume of $0\"), link)}</span>;\n        else if (is_part && is_crypt)\n            return <span>{fmt_to_array(_(\"Encrypted Partition of $0\"), link)}</span>;\n        else if (is_lvol)\n            return <span>{fmt_to_array(_(\"Logical Volume of $0\"), link)}</span>;\n        else if (is_part)\n            return <span>{fmt_to_array(_(\"Partition of $0\"), link)}</span>;\n        else if (is_crypt)\n            return <span>{fmt_to_array(_(\"Encrypted $0\"), link)}</span>;\n        else\n            return link;\n    }\n});\n\n// StorageOnOff - OnOff switch for asynchronous actions.\n//\n\nclass StorageOnOff extends React.Component {\n    constructor() {\n        super();\n        this.state = { promise: null };\n    }\n\n    render() {\n        var self = this;\n\n        function onChange(val) {\n            var promise = self.props.onChange(val);\n            if (promise) {\n                promise.always(function() {\n                    self.setState({ promise: null })\n                });\n                promise.fail(function(error) {\n                    $('#error-popup-title').text(_(\"Error\"));\n                    $('#error-popup-message').text(error.toString());\n                    $('#error-popup').modal('show');\n                });\n            }\n\n            self.setState({ promise: promise, promise_goal_state: val });\n        }\n\n        return (\n            <StorageControl excuse={this.props.excuse}\n                            content={(excuse) => (\n                                    <OnOffSwitch state={this.state.promise\n                                                        ? this.state.promise_goal_state\n                                                        : this.props.state}\n                                                 enabled={!excuse && !this.state.promise}\n                                                 onChange={onChange}/>\n                                )}/>\n        );\n    }\n}\n\nclass StorageMultiAction extends React.Component {\n    render() {\n        var dflt = this.props.actions[this.props.default];\n\n        return (\n            <StorageControl excuse={this.props.excuse}\n                            content={(excuse) => {\n                                    var btn_classes = \"btn btn-default\";\n                                    if (excuse)\n                                        btn_classes += \" disabled\";\n                                    return (\n                                        <div className=\"btn-group\">\n                                            <button className={btn_classes} onClick={checked(dflt.action)}>\n                                                                                                 {dflt.title}\n                                            </button>\n                                            <button className={btn_classes + \" dropdown-toggle\"}\n                                                    data-toggle=\"dropdown\">\n                                                <span className=\"caret\"></span>\n                                            </button>\n                                            <ul className=\"dropdown-menu action-dropdown-menu\" role=\"menu\">\n                                                { this.props.actions.map((act) => (\n                                                      <li className=\"presentation\">\n                                                          <a role=\"menuitem\" onClick={checked(act.action)}>\n                                                                                     {act.title}\n                                                          </a>\n                                                      </li>))\n                                                }\n                                            </ul>\n                                        </div>\n                                    );\n                            }}/>\n        );\n    }\n}\n\nmodule.exports = {\n    StorageButton: StorageButton,\n    StorageLink:   StorageLink,\n    StorageBlockNavLink: StorageBlockNavLink,\n    StorageOnOff: StorageOnOff,\n    StorageMultiAction: StorageMultiAction\n};\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/storaged/storage-controls.jsx","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2017 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nvar cockpit = require(\"cockpit\");\nvar React = require(\"react\");\nvar _ = cockpit.gettext;\n\nrequire(\"./cockpit-components-onoff.css\");\n\n/* Component to show an on/off switch\n * state      boolean value (off or on)\n * captionOff optional string, default 'Off'\n * captionOn  optional string, default 'On'\n * onChange   triggered when the switch is flipped, parameter: new state\n * enabled    whether the component is enabled or not, defaults to true\n */\nvar OnOffSwitch = React.createClass({\n    getDefaultProps: function() {\n        return {\n            captionOff: _(\"Off\"),\n            captionOn: _(\"On\"),\n            enabled: true,\n        };\n    },\n    handleOnOffClick: function(newState, e) {\n        // only consider primary mouse button\n        if (!e || e.button !== 0)\n            return;\n        // only notify if the component is enabled\n        if (this.props.onChange && this.props.enabled)\n            this.props.onChange(newState);\n        e.stopPropagation();\n    },\n    render: function() {\n        var onClasses = [\"btn\"];\n        var offClasses = [\"btn\"];\n        if (this.props.state)\n            onClasses.push(\"active\");\n        else\n            offClasses.push(\"active\");\n        if (!this.props.enabled) {\n            onClasses.push(\"disabled\");\n            offClasses.push(\"disabled\");\n        }\n        var clickHandler = this.handleOnOffClick.bind(this, !this.props.state);\n        return (\n            <div className=\"btn-group btn-onoff-ct\" enabled={this.props.enabled}>\n                <label className={ onClasses.join(\" \") }>\n                    <input type=\"radio\" />\n                    <span onClick={clickHandler}>{this.props.captionOn}</span>\n                </label>\n                <label className={ offClasses.join(\" \") }>\n                    <input type=\"radio\" />\n                    <span onClick={clickHandler}>{this.props.captionOff}</span>\n                </label>\n            </div>\n        );\n    }\n});\n\nmodule.exports = {\n    OnOffSwitch: OnOffSwitch,\n};\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/lib/cockpit-components-onoff.jsx","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nvar React = require('react');\n\nrequire('./tooltip.css');\n\n/* A tooltip, styled via Patternfly/Bootstrap.\n *\n * Example:\n *\n *   <Tooltip tip=\"Insufficient privileges\">\n *      <button disabled>Reboot</button>\n *   </ToolTip>\n *\n * Whenever the mouse hovers over the children of a Tooltip,\n * the text (or arbitrary element) in the \"tip\" property is shown.\n */\n\nvar Tooltip = React.createClass({\n    getInitialState: function () {\n        return { open: false, pos: \"top\" };\n    },\n    onMouseover: function () {\n        this.setState({ open: true });\n    },\n    onMouseout: function () {\n        this.setState({ open: false });\n    },\n    render: function () {\n        var self = this;\n\n        if (!self.props.tip)\n            return self.props.children;\n\n        /* Placement\n         *\n         * We assume that there is enough space to display the tooltip\n         * in its natural width, and that there is either enough space\n         * above or below the element that will show the tooltip.\n         *\n         * If there is enough space above, the tooltip goes to the\n         * top, otherwise below.  It is then moved left or right until\n         * it is fully visible.\n         */\n\n        /* The life of a tooltip\n         *\n         * The tooltip starts out at position (-10000,0) so that it is\n         * well outside its parent.  This seems to give it its natural\n         * width without the browser trying to fit it into the parent,\n         * which usually results in a undesired tall and narrow\n         * layout.\n         *\n         * On first interaction and before moving it into place, we\n         * prevent the tooltip from resizing by setting the \"width\"\n         * and \"height\" styles to its current dimensions.\n         *\n         * Once moved into place, it stays where it is and is just\n         * raised and lowered in the Z dimension in addition to being\n         * made visible and invisible.\n         */\n\n        function fixDOMElements(tip) {\n            var child = tip && tip.previousElementSibling;\n\n            // Do nothing unless fully mounted\n            if (!tip || !child)\n                return;\n\n            // Stop resizing\n            if ((!tip.style.width || !tip.style.height) && tip.offsetWidth > 0) {\n                tip.style.width = tip.offsetWidth + \"px\";\n                tip.style.height = tip.offsetHeight + \"px\";\n            }\n\n            // Position it\n            if (tip.offsetLeft === -10000) {\n                var left = child.offsetLeft + 0.5*child.offsetWidth - 0.5*tip.offsetWidth;\n                var top = child.offsetTop - tip.offsetHeight;\n\n                var arrow = tip.getElementsByClassName(\"tooltip-arrow\")[0];\n                var arrow_left = tip.offsetWidth / 2;\n\n                // Figure out where it is on the page\n                var abs_left = left, abs_top = top, max_width = child.offsetWidth;\n                var el = tip.offsetParent;\n                while (el) {\n                    abs_left += el.offsetLeft;\n                    abs_top += el.offsetTop;\n                    max_width = el.offsetWidth;\n                    el = el.offsetParent;\n                }\n\n                // Move it left/right until it is full in view\n                var x_delta = 0;\n                if (abs_left < 0)\n                    x_delta = -abs_left + 5;\n                else if (abs_left + tip.offsetWidth > max_width)\n                    x_delta = -(abs_left + tip.offsetWidth - max_width) - 5;\n                left += x_delta;\n                arrow_left -= x_delta;\n\n                // Move it to bottom if abs_top < 0\n                if (abs_top < 0) {\n                    top = child.offsetTop + child.offsetHeight;\n                    self.setState({ pos: \"bottom\" });\n                }\n\n                tip.style.left = left + \"px\";\n                tip.style.top = top + \"px\";\n                arrow.style.left = arrow_left + \"px\";\n            }\n\n            tip.style.zIndex = self.state.open ? 2000 : -2000;\n        }\n\n        var classes = \"tooltip \" + self.state.pos;\n        if (self.state.open)\n            classes += \" in\";\n\n        return (\n            <div className=\"tooltip-ct-outer\">\n                <div className=\"tooltip-ct-inner\"\n                     onMouseover={this.onMouseover}\n                     onMouseout={this.onMouseout}>\n                    {self.props.children}\n                </div>\n                <div ref={fixDOMElements} className={classes} style={{ top: 0, left: -10000 }}>\n                    <div className=\"tooltip-arrow\"></div>\n                    <div className=\"tooltip-inner\">{self.props.tip}</div>\n                </div>\n            </div>\n        );\n    }\n});\n\nmodule.exports = {\n    Tooltip: Tooltip,\n};\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/lib/cockpit-components-tooltip.jsx","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nvar cockpit = require(\"cockpit\");\nvar utils = require(\"./utils.js\");\nvar dialog = require(\"./dialog.js\");\n\nvar React = require(\"react\");\nvar StorageControls = require(\"./storage-controls.jsx\");\n\nvar _ = cockpit.gettext;\n\nfunction parse_options(options) {\n    if (options)\n        return (options.split(\",\")\n                       .map(function (s) { return s.trim() })\n                       .filter(function (s) { return s != \"\" }));\n    else\n        return [ ];\n}\n\nfunction unparse_options(split) {\n    return split.join(\",\");\n}\n\nfunction extract_option(split, opt) {\n    var index = split.indexOf(opt);\n    if (index >= 0) {\n        split.splice(index, 1);\n        return true;\n    } else {\n        return false;\n    }\n}\n\nfunction mounting_dialog_fields(is_custom, mount_dir, mount_options, visible) {\n\n    if (!visible)\n        visible = function () { return true; };\n\n    var split_options = parse_options(mount_options == \"defaults\" ? \"\" : mount_options);\n    var opt_auto = !extract_option(split_options, \"noauto\");\n    var opt_ro = extract_option(split_options, \"ro\");\n    var extra_options = unparse_options(split_options);\n\n    return [\n        { SelectOne: \"mounting\",\n          Title: _(\"Mounting\"),\n          Options: [\n              { value: \"default\", Title: _(\"Default\"), selected: !is_custom },\n              { value: \"custom\", Title: _(\"Custom\"), selected: is_custom }\n          ],\n          visible: visible\n        },\n        { TextInput: \"mount_point\",\n          Title: _(\"Mount Point\"),\n          Value: mount_dir,\n          visible: function (vals) {\n              return visible(vals) && vals.mounting == \"custom\";\n          },\n          validate: function (val) {\n              if (val.trim() == \"\")\n                  return _(\"Mount point can not be empty\");\n          }\n        },\n        { RowTitle: _(\"Mount options\"),\n          CheckBox: \"mount_auto\",\n          Title: _(\"Mount at boot\"),\n          Value: opt_auto,\n          visible: function (vals) {\n              return visible(vals) && vals.mounting == \"custom\";\n          },\n          update: function (vals, trigger) {\n              if (trigger == \"crypto_options_auto\" && vals.crypto_options_auto == false)\n                  return false;\n              else\n                  return vals.mount_auto;\n          }\n        },\n        { CheckBox: \"mount_ro\",\n          Title: _(\"Mount read only\"),\n          Value: opt_ro,\n          visible: function (vals) {\n              return visible(vals) && vals.mounting == \"custom\";\n          },\n          update: function (vals, trigger) {\n              if (trigger == \"crypto_options_ro\" && vals.crypto_options_ro == true)\n                  return true;\n              else\n                  return vals.mount_ro;\n          }\n        },\n        { CheckBoxText: \"mount_extra_options\",\n          Title: _(\"Custom mount options\"),\n          Value: extra_options == \"\" ? false : extra_options,\n          visible: function (vals) {\n              return visible(vals) && vals.mounting == \"custom\";\n          }\n        }\n    ];\n}\n\nfunction mounting_dialog_options(vals) {\n    var opts = [ ];\n    if (!vals.mount_auto)\n        opts.push(\"noauto\");\n    if (vals.mount_ro)\n        opts.push(\"ro\");\n    if (vals.mount_extra_options !== false)\n        opts = opts.concat(parse_options(vals.mount_extra_options));\n    return unparse_options(opts);\n}\n\nfunction crypto_options_dialog_fields(options, visible) {\n    var split_options = parse_options(options);\n    var opt_auto = !extract_option(split_options, \"noauto\");\n    var opt_ro = extract_option(split_options, \"readonly\");\n    var extra_options = unparse_options(split_options);\n\n    return [\n        { RowTitle: _(\"Encryption Options\"),\n          CheckBox: \"crypto_options_auto\",\n          Title: _(\"Unlock at boot\"),\n          Value: opt_auto,\n          visible: visible\n        },\n        { CheckBox: \"crypto_options_ro\",\n          Title: _(\"Unlock read only\"),\n          Value: opt_ro,\n          visible: visible\n        },\n        { CheckBoxText: \"crypto_extra_options\",\n          Title: _(\"Custom encryption options\"),\n          Value: extra_options == \"\" ? false : extra_options,\n          visible: visible\n        }\n    ];\n}\n\nfunction crypto_options_dialog_options(vals) {\n    var opts = [ ];\n    if (!vals.crypto_options_auto)\n        opts.push(\"noauto\");\n    if (vals.crypto_options_ro)\n        opts.push(\"readonly\");\n    if (vals.crypto_extra_options !== false)\n        opts = opts.concat(parse_options(vals.crypto_extra_options));\n    return unparse_options(opts);\n}\n\nfunction format_dialog(client, path, start, size, enable_dos_extended) {\n    var block = client.blocks[path];\n    var block_ptable = client.blocks_ptable[path];\n\n    var create_partition = (start !== undefined);\n\n    var title;\n    if (create_partition)\n        title = cockpit.format(_(\"Create partition on $0\"), utils.block_name(block));\n    else\n        title = cockpit.format(_(\"Format $0\"), utils.block_name(block));\n\n    function is_encrypted(vals) {\n        return vals.type == \"luks+xfs\" || vals.type == \"luks+ext4\";\n    }\n\n    function is_filesystem(vals) {\n        return vals.type != \"empty\" && vals.type != \"dos-extended\";\n    }\n\n    /* Older UDisks2 implementation don't have good\n     * enough support for maintaining fstab and crypptab, so\n     * we do n't offer that in the UI.  (Most importantly, they\n     * miss the 'tear-down' option and without that we'll end\n     * up with obsolete fstab files all the time, which will\n     * break the next boot.)\n     */\n\n    function is_encrypted_and_not_old_udisks2(vals) {\n        return !client.is_old_udisks2 && is_encrypted(vals);\n    }\n\n    function is_filesystem_and_not_old_udisks2(vals) {\n        return !client.is_old_udisks2 && is_filesystem(vals);\n    }\n\n    /* Older UDisks2 implementations don't have\n     * CreateAndFormatPartition, so we simulate that.\n     */\n\n    function create_partition_and_format(ptable,\n                                         start, size,\n                                         part_type, part_name, part_options,\n                                         type, options) {\n        if (!client.is_old_udisks2)\n            return ptable.CreatePartitionAndFormat(start, size,\n                                                   part_type, part_name, part_options,\n                                                   type, options);\n\n        return ptable.CreatePartition(start, size, part_type, part_name, part_options)\n            .then(function (partition) {\n                // We don't use client.blocks[partition] here\n                // because it might temporarily not exist.  In\n                // that case, we prefer storaged to tell us in a\n                // D-Bus error instead of causing a JavaScript\n                // exception.\n                //\n                // See https://github.com/cockpit-project/cockpit/issues/4181\n                return client.call(partition, \"Block\", \"Format\", [ type, options ]).then(function () {\n                    return partition;\n                });\n            });\n    }\n\n    function add_fsys(storaged_name, entry) {\n        if (storaged_name === true ||\n            !client.manager.SupportedFilesystems ||\n            client.manager.SupportedFilesystems.indexOf(storaged_name) != -1)\n            filesystem_options.push(entry);\n    }\n\n    var filesystem_options = [ ];\n    add_fsys(\"xfs\",  { value: \"xfs\", Title: _(\"XFS - Red Hat Enterprise Linux 7 default\") });\n    add_fsys(\"ext4\", { value: \"ext4\", Title: _(\"ext4 - Red Hat Enterprise Linux 6 default\") });\n    add_fsys(\"xfs\",  { value: \"luks+xfs\", Title: _(\"Encrypted XFS (LUKS)\") });\n    add_fsys(\"ext4\", { value: \"luks+ext4\", Title: _(\"Encrypted EXT4 (LUKS)\") });\n    add_fsys(\"vfat\", { value: \"vfat\", Title: _(\"VFAT - Compatible with all systems and devices\") });\n    add_fsys(\"ntfs\", { value: \"ntfs\", Title: _(\"NTFS - Compatible with most systems\") });\n    add_fsys(true, { value: \"dos-extended\", Title: _(\"Extended Partition\"),\n                     disabled: !(create_partition && enable_dos_extended) });\n    add_fsys(true, { value: \"empty\", Title: _(\"No Filesystem\") });\n    add_fsys(true, { value: \"custom\", Title: _(\"Custom (Enter filesystem type)\") });\n\n    var usage = utils.get_active_usage(client, create_partition? null : path);\n\n    if (usage.Blocking) {\n        dialog.open({ Title: cockpit.format(_(\"$0 is in active use\"), utils.block_name(block)),\n                      Blocking: usage.Blocking,\n                      Fields: [ ]\n        });\n        return;\n    }\n\n    dialog.open({ Title: title,\n                  Teardown: usage.Teardown,\n                  Fields: [\n                      { SizeSlider: \"size\",\n                        Title: _(\"Size\"),\n                        Value: size,\n                        Max: size,\n                        visible: function () {\n                            return create_partition;\n                        }\n                      },\n                      { SelectOne: \"erase\",\n                        Title: _(\"Erase\"),\n                        Options: [\n                            { value: \"no\", Title: _(\"Don't overwrite existing data\") },\n                            { value: \"zero\", Title: _(\"Overwrite existing data with zeros\") }\n                        ]\n                      },\n                      { SelectOne: \"type\",\n                        Title: _(\"Type\"),\n                        Options: filesystem_options\n                      },\n                      { TextInput: \"name\",\n                        Title: _(\"Name\"),\n                        visible: is_filesystem\n                      },\n                      { TextInput: \"custom\",\n                        Title: _(\"Filesystem type\"),\n                        visible: function (vals) {\n                            return vals.type == \"custom\";\n                        }\n                      },\n                      { PassInput: \"passphrase\",\n                        Title: _(\"Passphrase\"),\n                        validate: function (phrase) {\n                            if (phrase === \"\")\n                                return _(\"Passphrase cannot be empty\");\n                        },\n                        visible: is_encrypted\n                      },\n                      { PassInput: \"passphrase2\",\n                        Title: _(\"Confirm passphrase\"),\n                        validate: function (phrase2, vals) {\n                            if (phrase2 != vals.passphrase)\n                                return _(\"Passphrases do not match\");\n                        },\n                        visible: is_encrypted\n                      },\n                      { CheckBox: \"store_passphrase\",\n                        Title: _(\"Store passphrase\"),\n                        visible: is_encrypted_and_not_old_udisks2\n                      }\n                  ].concat(crypto_options_dialog_fields(\"\", is_encrypted_and_not_old_udisks2))\n                   .concat(mounting_dialog_fields(false, \"\", \"\", is_filesystem_and_not_old_udisks2)),\n                  Action: {\n                      Title: create_partition? _(\"Create partition\") : _(\"Format\"),\n                      Danger: (create_partition?\n                               null : _(\"Formatting a storage device will erase all data on it.\")),\n                      action: function (vals) {\n                          if (vals.type == \"custom\")\n                              vals.type = vals.custom;\n\n                          var options = { 'no-block': { t: 'b', v: true },\n                                          'dry-run-first': { t: 'b', v: true },\n                                          'tear-down': { t: 'b', v: true }\n                          };\n                          if (vals.erase != \"no\")\n                              options.erase = { t: 's', v: vals.erase };\n                          if (vals.name)\n                              options.label = { t: 's', v: vals.name };\n\n                          var config_items = [ ];\n                          var mount_options = mounting_dialog_options(vals);\n                          if (vals.mounting == \"custom\")\n                              config_items.push([\n                                  \"fstab\", {\n                                      dir: { t: 'ay', v: utils.encode_filename(vals.mount_point) },\n                                      type: { t: 'ay', v: utils.encode_filename(\"auto\") },\n                                      opts: { t: 'ay', v: utils.encode_filename(mount_options || \"defaults\") },\n                                      freq: { t: 'i', v: 0 },\n                                      passno: { t: 'i', v: 0 },\n                                      \"track-parents\": { t: 'b', v: true }\n                                  }]);\n\n                          var crypto_options = crypto_options_dialog_options(vals);\n                          if (is_encrypted(vals)) {\n                              vals.type = vals.type.replace(\"luks+\", \"\");\n                              options[\"encrypt.passphrase\"] = { t: 's', v: vals.passphrase };\n\n                              var item = {\n                                  options: { t: 'ay', v: utils.encode_filename(crypto_options) },\n                                  \"track-parents\": { t: 'b', v: true }\n                              };\n                              if (vals.store_passphrase) {\n                                  item[\"passphrase-contents\"] =\n                                  { t: 'ay', v: utils.encode_filename(vals.passphrase) };\n                              } else {\n                                  item[\"passphrase-contents\"] =\n                                  { t: 'ay', v: utils.encode_filename(\"\") };\n                              }\n                              config_items.push([ \"crypttab\", item ]);\n                          }\n\n                          if (config_items.length > 0)\n                              options[\"config-items\"] = { t: 'a(sa{sv})', v: config_items };\n\n                          function format() {\n                              if (create_partition) {\n                                  if (vals.type == \"dos-extended\")\n                                      return block_ptable.CreatePartition(start, vals.size, \"0x05\", \"\", { });\n                                  else if (vals.type == \"empty\")\n                                      return block_ptable.CreatePartition(start, vals.size, \"\", \"\", { });\n                                  else\n                                      return create_partition_and_format (block_ptable,\n                                                                          start, vals.size, \"\", \"\", { },\n                                                                          vals.type, options);\n                              } else {\n                                  return block.Format(vals.type, options);\n                              }\n                          }\n\n                          return utils.teardown_active_usage(client, usage).then(format);\n                      }\n                  }\n    });\n}\n\nvar FormatButton = React.createClass({\n    onClick: function () {\n        format_dialog(this.props.client, this.props.block.path);\n    },\n    render: function () {\n        return (\n            <StorageControls.StorageButton onClick={this.onClick}\n                                           excuse={this.props.block.ReadOnly? _(\"Device is read-only\") : null}>\n                {_(\"Format\")}\n            </StorageControls.StorageButton>\n        );\n    }\n});\n\nmodule.exports = {\n    mounting_dialog_fields: mounting_dialog_fields,\n    mounting_dialog_options: mounting_dialog_options,\n    crypto_options_dialog_fields: crypto_options_dialog_fields,\n    crypto_options_dialog_options: crypto_options_dialog_options,\n    format_dialog: format_dialog,\n    FormatButton: FormatButton\n};\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/storaged/format-dialog.jsx","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nvar cockpit = require(\"cockpit\");\nvar dialog = require(\"./dialog\");\nvar utils = require(\"./utils.js\");\nvar $ = require(\"jquery\");\n\nvar React = require(\"react\");\nvar StorageControls = require(\"./storage-controls.jsx\");\nvar FormatDialog = require(\"./format-dialog.jsx\");\n\nvar StorageButton = StorageControls.StorageButton;\nvar StorageLink =   StorageControls.StorageLink;\nvar FormatButton =  FormatDialog.FormatButton;\n\nvar _ = cockpit.gettext;\n\nvar FilesystemTab = React.createClass({\n    onSamplesChanged: function () {\n        this.setState({});\n    },\n    componentDidMount: function () {\n        $(this.props.client.fsys_sizes).on(\"changed\", this.onSamplesChanged);\n    },\n    componentWillUnmount: function () {\n        $(this.props.client.fsys_sizes).off(\"changed\", this.onSamplesChanged);\n    },\n    render: function () {\n        var self = this;\n        var block = self.props.block;\n        var block_fsys = block && self.props.client.blocks_fsys[block.path];\n        var is_filesystem_mounted = (block_fsys && block_fsys.MountPoints.length > 0);\n        var used;\n\n        if (is_filesystem_mounted) {\n            var m = utils.decode_filename(block_fsys.MountPoints[0]);\n            var samples = self.props.client.fsys_sizes.data[m];\n            if (samples)\n                used = cockpit.format(_(\"$0 of $1\"),\n                                      utils.fmt_size(samples[0]),\n                                      utils.fmt_size(samples[1]));\n            else\n                used = _(\"Unknown\");\n        } else {\n            used = \"-\";\n        }\n\n        function rename_dialog() {\n            dialog.open({ Title: _(\"Filesystem Name\"),\n                          Fields: [\n                              { TextInput: \"name\",\n                                Title: _(\"Name\"),\n                                Value: block.IdLabel\n                              },\n                          ],\n                          Action: {\n                              Title: _(\"Apply\"),\n                              action: function (vals) {\n                                  return block_fsys.SetLabel(vals.name, {});\n                              }\n                          }\n            });\n        }\n\n        var old_config, old_dir, old_opts;\n\n        old_config = utils.array_find(block.Configuration, function (c) { return c[0] == \"fstab\"; });\n        if (old_config) {\n            old_dir = utils.decode_filename(old_config[1].dir.v);\n            old_opts = (utils.decode_filename(old_config[1].opts.v).\n                              split(\",\").\n                              filter(function (s) { return s.indexOf(\"x-parent\") !== 0; }).\n                              join(\",\"));\n        }\n\n        var mounted_at = block_fsys? block_fsys.MountPoints.map(utils.decode_filename) : [ ];\n\n        function maybe_update_config(new_is_custom, new_dir, new_opts) {\n            var new_config = null;\n            if (new_is_custom) {\n                new_config = [\n                    \"fstab\", {\n                        dir: { t: 'ay', v: utils.encode_filename(new_dir) },\n                        type: { t: 'ay', v: utils.encode_filename(\"auto\") },\n                        opts: { t: 'ay', v: utils.encode_filename(new_opts || \"defaults\") },\n                        freq: { t: 'i', v: 0 },\n                        passno: { t: 'i', v: 0 },\n                        \"track-parents\": { t: 'b', v: true }\n                    }];\n            }\n\n            if (!old_config && new_config)\n                return block.AddConfigurationItem(new_config, {});\n            else if (old_config && !new_config)\n                return block.RemoveConfigurationItem(old_config, {});\n            else if (old_config && new_config && (new_dir != old_dir || new_opts != old_opts))\n                return block.UpdateConfigurationItem(old_config, new_config, {});\n        }\n\n        function mounting_dialog() {\n            dialog.open({ Title: _(\"Filesystem Mounting\"),\n                          Fields: FormatDialog.mounting_dialog_fields(!!old_config, old_dir, old_opts),\n                          Action: {\n                              Title: _(\"Apply\"),\n                              action: function (vals) {\n                                  return maybe_update_config(vals.mounting == \"custom\",\n                                                             vals.mount_point,\n                                                             FormatDialog.mounting_dialog_options(vals));\n                              }\n                          }\n            });\n        }\n\n        function mount() {\n            return block_fsys.Mount({});\n        }\n\n        function unmount() {\n            return block_fsys.Unmount({});\n        }\n\n        // See format-dialog.jsx for why we don't offer editing\n        // fstab for the old UDisks2\n\n        return (\n            <div>\n                <div className=\"tab-actions\">\n                    <FormatButton client={this.props.client} block={this.props.block}/>\n                </div>\n                <table className=\"info-table-ct\">\n                    <tr>\n                        <td>{_(\"Name\")}</td>\n                        <td>\n                            <StorageLink onClick={rename_dialog}>\n                                {this.props.block.IdLabel || \"-\"}\n                            </StorageLink>\n                        </td>\n                    </tr>\n                    { (!self.props.client.is_old_udisks2)\n                          ? (\n                              <tr>\n                                  <td>{_(\"Mount Point\")}</td>\n                                  <td>\n                                      <StorageLink onClick={mounting_dialog}>\n                                          {old_dir || _(\"(default)\")}\n                                      </StorageLink>\n                                      { (!is_filesystem_mounted)\n                                            ? <StorageButton onClick={mount}>{_(\"Mount\")}</StorageButton>\n                                            : null\n                                      }\n                                  </td>\n                              </tr>\n                          )\n                          : null\n                    }\n                    { (old_opts)\n                          ? (\n                              <tr>\n                                  <td>{_(\"Mount Options\")}</td>\n                                  <td>\n                                      <StorageLink onClick={mounting_dialog}>\n                                          {old_opts}\n                                      </StorageLink>\n                                  </td>\n                              </tr>\n                          )\n                          : null\n                    }\n                    { (mounted_at.length > 0 || self.props.client.is_old_udisks2)\n                          ? (\n                              <tr>\n                                  <td>{_(\"Mounted At\")}</td>\n                                  <td>\n                                      {mounted_at.join(\", \")}\n                                      { (mounted_at.length > 0)\n                                            ? <StorageButton onClick={unmount}>{_(\"Unmount\")}</StorageButton>\n                                            : <StorageButton onClick={mount}>{_(\"Mount\")}</StorageButton>\n                                      }\n                                  </td>\n                              </tr>\n                          )\n                          : null\n                    }\n                    <tr>\n                        <td>{_(\"Used\")}</td>\n                        <td>{used}</td>\n                    </tr>\n                </table>\n            </div>\n        );\n    },\n});\n\nmodule.exports = {\n    FilesystemTab: FilesystemTab\n};\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/storaged/fsys-tab.jsx","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nvar cockpit = require(\"cockpit\");\nvar dialog = require(\"./dialog\");\nvar utils = require(\"./utils.js\");\nvar $ = require(\"jquery\");\n\nvar React = require(\"react\");\nvar StorageControls = require(\"./storage-controls.jsx\");\nvar FormatDialog = require(\"./format-dialog.jsx\");\n\nvar StorageButton = StorageControls.StorageButton;\nvar StorageLink =   StorageControls.StorageLink;\nvar FormatButton =  FormatDialog.FormatButton;\n\nvar _ = cockpit.gettext;\n\nvar CryptoTab = React.createClass({\n    render: function () {\n        var self = this;\n        var block = self.props.block;\n\n        function edit_config(modify) {\n            var old_config, new_config;\n\n            function commit() {\n                new_config[1][\"track-parents\"] = { t: 'b', v: true };\n                if (old_config)\n                    return block.UpdateConfigurationItem(old_config, new_config, { });\n                else\n                    return block.AddConfigurationItem(new_config, { });\n            }\n\n            block.GetSecretConfiguration({}).done(\n                function (items) {\n                    old_config = utils.array_find(items, function (c) { return c[0] == \"crypttab\"; });\n                    new_config = [ \"crypttab\", old_config? $.extend({ }, old_config[1]) : { } ];\n\n                    // UDisks insists on always having a \"passphrase-contents\" field when\n                    // adding a crypttab entry, but doesn't include one itself when returning\n                    // an entry without a stored passphrase.\n                    //\n                    if (!new_config[1]['passphrase-contents'])\n                        new_config[1]['passphrase-contents'] = { t: 'ay', v: utils.encode_filename(\"\") };\n\n                    modify (new_config[1], commit);\n                });\n        }\n\n        function edit_stored_passphrase() {\n            edit_config(function (config, commit) {\n                dialog.open({ Title: _(\"Stored Passphrase\"),\n                              Fields: [\n                                  { PassInput: \"passphrase\",\n                                    Title: _(\"Stored Passphrase\"),\n                                    Value: (config && config['passphrase-contents'] ?\n                                            utils.decode_filename(config['passphrase-contents'].v) :\n                                            \"\")\n                                  }\n                              ],\n                              Action: {\n                                  Title: _(\"Apply\"),\n                                  action: function (vals) {\n                                      config[\"passphrase-contents\"] = {\n                                          t: 'ay',\n                                          v: utils.encode_filename(vals.passphrase)\n                                      }\n                                      delete config[\"passphrase-path\"];\n                                      return commit();\n                                  }\n                              }\n                });\n            });\n        }\n\n        var old_config, old_options;\n\n        old_config = utils.array_find(block.Configuration, function (c) { return c[0] == \"crypttab\"; });\n        if (old_config) {\n            old_options = (utils.decode_filename(old_config[1].options.v).\n                                 split(\",\").\n                                 filter(function (s) { return s.indexOf(\"x-parent\") !== 0; }).\n                                 join(\",\"));\n        }\n\n        function edit_options() {\n            edit_config(function (config, commit) {\n                dialog.open({ Title: _(\"Encryption Options\"),\n                              Fields: FormatDialog.crypto_options_dialog_fields(old_options),\n                              Action: {\n                                  Title: _(\"Apply\"),\n                                  action: function (vals) {\n                                      config[\"options\"] = {\n                                          t: 'ay',\n                                          v: utils.encode_filename(FormatDialog.crypto_options_dialog_options(vals))\n                                      }\n                                      return commit();\n                                  }\n                              }\n                });\n            });\n        }\n\n        // See format-dialog.jsx above for why we don't offer editing\n        // crypttab for the old UDisks2\n\n        return (\n            <div>\n                <div className=\"tab-actions\">\n                    <FormatButton client={this.props.client} block={this.props.block}/>\n                </div>\n                <table className=\"info-table-ct\">\n                    { !self.props.client.is_old_udisks2 ?\n                      <tr>\n                          <td>{_(\"Stored passphrase\")}</td>\n                          <td><StorageButton onClick={edit_stored_passphrase}>{_(\"Edit\")}</StorageButton></td>\n                      </tr> : null\n                    }\n                    { !self.props.client.is_old_udisks2 ?\n                      <tr>\n                          <td>{_(\"Options\")}</td>\n                          <td><StorageLink onClick={edit_options}>{old_options || _(\"(none)\")}</StorageLink></td>\n                    </tr> : null\n                    }\n                </table>\n            </div>\n        );\n    },\n});\n\nmodule.exports = {\n    CryptoTab: CryptoTab\n};\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/storaged/crypto-tab.jsx","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nvar cockpit = require(\"cockpit\");\nvar dialog = require(\"./dialog\");\nvar utils = require(\"./utils.js\");\nvar $ = require(\"jquery\");\n\nvar React = require(\"react\");\nvar StorageControls = require(\"./storage-controls.jsx\");\n\nvar StorageButton = StorageControls.StorageButton;\nvar StorageLink =   StorageControls.StorageLink;\n\nvar _ = cockpit.gettext;\n\nfunction lvol_rename(lvol) {\n    dialog.open({ Title: _(\"Rename Logical Volume\"),\n                  Fields: [\n                      { TextInput: \"name\",\n                        Title: _(\"Name\"),\n                        Value: lvol.Name\n                      }\n                  ],\n                  Action: {\n                      Title: _(\"Rename\"),\n                      action: function (vals) {\n                          return lvol.Rename(vals.name, { });\n                      }\n                  }\n    });\n}\n\nfunction lvol_resize(client, lvol) {\n    var block = client.lvols_block[lvol.path];\n    var vgroup = client.vgroups[lvol.VolumeGroup];\n    var pool = client.lvols[lvol.ThinPool];\n\n    /* Resizing is only safe when lvol has a filesystem\n       and that filesystem is resized at the same time.\n\n       So we always resize the filesystem for lvols that\n       have one, and refuse to shrink otherwise.\n\n       Note that shrinking a filesystem will not always\n       succeed, but it is never dangerous.\n     */\n\n    dialog.open({ Title: _(\"Resize Logical Volume\"),\n                  Fields: [\n                      { SizeSlider: \"size\",\n                        Title: _(\"Size\"),\n                        Value: lvol.Size,\n                        Max: (pool ?\n                              pool.Size * 3 :\n                              lvol.Size + vgroup.FreeSize),\n                        AllowInfinite: !!pool,\n                        Round: vgroup.ExtentSize\n                      },\n                      { CheckBox: \"fsys\",\n                        Title: _(\"Resize Filesystem\"),\n                        Value: block && block.IdUsage == \"filesystem\",\n                        visible: function () {\n                            return lvol.Type == \"block\";\n                        }\n                      }\n                  ],\n                  Action: {\n                      Title: _(\"Resize\"),\n                      action: function (vals) {\n\n                          function error(msg) {\n                              return $.Deferred().reject({ message: msg }).promise();\n                          }\n\n                          var fsys = (block && block.IdUsage == \"filesystem\");\n                          if (!fsys && vals.size < lvol.Size)\n                              return error(_(\"This logical volume cannot be made smaller.\"));\n\n                          var options = { };\n                          if (fsys)\n                              options.resize_fsys = { t: 'b', v: fsys };\n\n                          return lvol.Resize(vals.size, options);\n                      }\n                  }\n    });\n}\n\nvar BlockVolTab = React.createClass({\n    render: function () {\n        var self = this;\n        var lvol = self.props.lvol;\n        var vgroup = self.props.client.vgroups[lvol.VolumeGroup];\n\n        function create_snapshot() {\n            dialog.open({ Title: _(\"Create Snapshot\"),\n                          Fields: [\n                              { TextInput: \"name\",\n                                Title: _(\"Name\"),\n                                validate: utils.validate_lvm2_name\n                              },\n                              { SizeSlider: \"size\",\n                                Title: _(\"Size\"),\n                                Value: lvol.Size * 0.2,\n                                Max: lvol.Size,\n                                Round: vgroup.ExtentSize,\n                                visible: function () {\n                                    return lvol.ThinPool == \"/\";\n                                }\n                              }\n                          ],\n                          Action: {\n                              Title: _(\"Create\"),\n                              action: function (vals) {\n                                  return lvol.CreateSnapshot(vals.name, vals.size || 0, { });\n                              }\n                          }\n            });\n        }\n\n        function rename() {\n            lvol_rename(lvol);\n        }\n\n        function resize() {\n            lvol_resize(self.props.client, lvol);\n        }\n\n        return (\n            <div>\n                <div className=\"tab-actions\">\n                    <StorageButton onClick={create_snapshot}>{_(\"Create Snapshot\")}</StorageButton>\n                </div>\n                <table className=\"info-table-ct\">\n                    <tr>\n                        <td>{_(\"Name\")}</td>\n                        <td>\n                            <StorageLink onClick={rename}>{this.props.lvol.Name}</StorageLink>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>{_(\"Size\")}</td>\n                        <td>\n                            <StorageLink onClick={resize}>{utils.fmt_size(this.props.lvol.Size)}</StorageLink>\n                        </td>\n                    </tr>\n                </table>\n            </div>\n        );\n    },\n});\n\nvar PoolVolTab = React.createClass({\n    render: function () {\n        var self = this;\n\n        function perc(ratio) {\n            return (ratio*100).toFixed(0) + \"%\";\n        }\n\n        function rename() {\n            lvol_rename(self.props.lvol);\n        }\n\n        function resize() {\n            lvol_resize(self.props.client, self.props.lvol);\n        }\n\n        return (\n            <div>\n                <table className=\"info-table-ct\">\n                    <tr>\n                        <td>{_(\"Name\")}</td>\n                        <td>\n                            <StorageLink onClick={rename}>{this.props.lvol.Name}</StorageLink>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>{_(\"Size\")}</td>\n                        <td>\n                            <StorageLink onClick={resize}>{utils.fmt_size(this.props.lvol.Size)}</StorageLink>\n                        </td>\n                    </tr>\n                    <tr>\n                        <td>{_(\"Data Used\")}</td>\n                        <td>{perc(this.props.lvol.DataAllocatedRatio)}</td>\n                    </tr>\n                    <tr>\n                        <td>{_(\"Metadata Used\")}</td>\n                        <td>{perc(this.props.lvol.MetadataAllocatedRatio)}</td>\n                    </tr>\n                </table>\n            </div>\n        );\n    },\n});\n\nmodule.exports = {\n    BlockVolTab: BlockVolTab,\n    PoolVolTab:  PoolVolTab\n};\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/storaged/lvol-tabs.jsx","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nvar cockpit = require(\"cockpit\");\nvar utils = require(\"./utils.js\");\n\nvar React = require(\"react\");\nvar FormatDialog = require(\"./format-dialog.jsx\");\n\nvar FormatButton =  FormatDialog.FormatButton;\n\nvar _ = cockpit.gettext;\n\nvar PVolTab = React.createClass({\n    render: function () {\n        var block_pvol = this.props.client.blocks_pvol[this.props.block.path];\n        var vgroup = block_pvol && this.props.client.vgroups[block_pvol.VolumeGroup];\n\n        return (\n            <div>\n                <div className=\"tab-actions\">\n                    <FormatButton client={this.props.client} block={this.props.block}/>\n                </div>\n                <table className=\"info-table-ct\">\n                    <tr>\n                        <td>{_(\"Volume Group\")}</td>\n                        <td>{vgroup? <a data-goto-vgroup={vgroup.Name}>{vgroup.Name}</a> : \"-\"}</td>\n                    </tr>\n                    <tr>\n                        <td>{_(\"Free\")}</td>\n                        <td>{block_pvol? utils.fmt_size(block_pvol.FreeSize) : \"-\"}</td>\n                    </tr>\n                </table>\n            </div>\n        );\n    },\n});\n\nvar MDRaidMemberTab = React.createClass({\n    render: function () {\n        var mdraid = this.props.client.mdraids[this.props.block.MDRaidMember];\n\n        return (\n            <div>\n                <div className=\"tab-actions\">\n                    <FormatButton client={this.props.client} block={this.props.block}/>\n                </div>\n                <table className=\"info-table-ct\">\n                    <tr>\n                        <td>{_(\"RAID Device\")}</td>\n                        <td>{mdraid? <a data-goto-mdraid={mdraid.UUID}>{utils.mdraid_name(mdraid)}</a> : \"-\"}</td>\n                    </tr>\n                </table>\n            </div>\n        );\n    },\n});\n\nmodule.exports = {\n    PVolTab:         PVolTab,\n    MDRaidMemberTab: MDRaidMemberTab\n};\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/storaged/pvol-tabs.jsx","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nvar cockpit = require(\"cockpit\");\nvar utils = require(\"./utils.js\");\n\nvar React = require(\"react\");\n\nvar _ = cockpit.gettext;\n\nvar PartitionTab = React.createClass({\n    render: function () {\n        var block_part = this.props.client.blocks_part[this.props.block.path];\n\n        return (\n            <div>\n                <table className=\"info-table-ct\">\n                    <tr>\n                        <td>{_(\"Name\")}</td>\n                        <td>{block_part.Name || \"-\"}</td>\n                    </tr>\n                    <tr>\n                        <td>{_(\"Size\")}</td>\n                        <td>{utils.fmt_size(block_part.Size)}</td>\n                    </tr>\n                    <tr>\n                        <td>{_(\"UUID\")}</td>\n                        <td>{block_part.UUID}</td>\n                    </tr>\n                    <tr>\n                        <td>{_(\"Type\")}</td>\n                        <td>{block_part.Type}</td>\n                    </tr>\n                </table>\n            </div>\n        );\n    },\n});\n\nmodule.exports = {\n    PartitionTab: PartitionTab\n};\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/storaged/part-tab.jsx","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nvar cockpit = require(\"cockpit\");\nvar utils = require(\"./utils.js\");\nvar $ = require(\"jquery\");\n\nvar React = require(\"react\");\nvar StorageControls = require(\"./storage-controls.jsx\");\nvar FormatDialog = require(\"./format-dialog.jsx\");\n\nvar StorageButton = StorageControls.StorageButton;\nvar FormatButton =  FormatDialog.FormatButton;\n\nvar _ = cockpit.gettext;\n\nvar SwapTab =  React.createClass({\n    onSamplesChanged: function () {\n        this.setState({});\n    },\n    componentDidMount: function () {\n        $(this.props.client.swap_sizes).on(\"changed\", this.onSamplesChanged);\n    },\n    componentWillUnmount: function () {\n        $(this.props.client.swap_sizes).off(\"changed\", this.onSamplesChanged);\n    },\n    render: function () {\n        var self = this;\n        var block_swap = self.props.client.blocks_swap[self.props.block.path];\n        var is_active = block_swap && block_swap.Active;\n        var used;\n\n        if (is_active) {\n            var samples = self.props.client.swap_sizes.data[utils.decode_filename(self.props.block.Device)];\n            if (samples)\n                used = utils.fmt_size(samples[0] - samples[1]);\n            else\n                used = _(\"Unknown\");\n        } else {\n            used = \"-\";\n        }\n\n        function start() {\n            if (block_swap)\n                return block_swap.Start({});\n        }\n\n        function stop() {\n            if (block_swap)\n                return block_swap.Stop({});\n        }\n\n        return (\n            <div>\n                <div className=\"tab-actions\">\n                    { (is_active)\n                          ? <StorageButton onClick={stop}>{_(\"Stop\")}</StorageButton>\n                          : <StorageButton onClick={start}>{_(\"Start\")}</StorageButton>\n                    }\n                    <FormatButton client={this.props.client} block={this.props.block}/>\n                </div>\n                <table className=\"info-table-ct\">\n                    <tr>\n                        <td>{_(\"Used\")}</td>\n                        <td>{used}</td>\n                    </tr>\n                </table>\n            </div>\n        );\n    },\n});\n\nmodule.exports = {\n    SwapTab: SwapTab\n};\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/storaged/swap-tab.jsx","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2016 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\n\"use strict\";\n\nvar cockpit = require(\"cockpit\");\n\nvar React = require(\"react\");\nvar FormatDialog = require(\"./format-dialog.jsx\");\n\nvar FormatButton =  FormatDialog.FormatButton;\n\nvar _ = cockpit.gettext;\n\nvar UnrecognizedTab =  React.createClass({\n    render: function () {\n        return (\n            <div>\n                <div className=\"tab-actions\">\n                    <FormatButton client={this.props.client} block={this.props.block}/>\n                </div>\n                <table className=\"info-table-ct\">\n                    <tr>\n                        <td>{_(\"Usage\")}</td>\n                        <td>{this.props.block.IdUsage || \"-\"}</td>\n                    </tr>\n                    <tr>\n                        <td>{_(\"Type\")}</td>\n                        <td>{this.props.block.IdType || \"-\"}</td>\n                    </tr>\n                </table>\n            </div>\n        );\n    },\n});\n\nmodule.exports = {\n    UnrecognizedTab: UnrecognizedTab\n};\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/storaged/unrecognized-tab.jsx","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2017 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport cockpit from \"cockpit\";\nimport React from \"react\";\nimport utils from \"./utils.js\";\nimport { StdDetailsLayout } from \"./details.jsx\";\nimport Content from \"./content-views.jsx\";\n\nconst _ = cockpit.gettext;\n\nexport class DriveDetails extends React.Component {\n    render() {\n        var client = this.props.client;\n        var drive = this.props.drive;\n        var drive_ata = client.drives_ata[drive.path];\n        var drive_block = drive && client.drives_block[drive.path];\n        var multipath_blocks = drive && client.drives_multipath_blocks[drive.path];\n\n        function row(title, value) {\n            if (value)\n                return <tr><td>{title}</td><td>{value}</td></tr>;\n            else\n                return null;\n        }\n\n        var assessment = null;\n        if (drive_ata) {\n            assessment = (\n                <tr>\n                    <td>{_(\"storage\", \"Assessment\")}</td>\n                    <td>\n                        { drive_ata.SmartFailing\n                          ? <span className=\"cockpit-disk-failing\">{_(\"DISK IS FAILING\")}</span>\n                          : <span>{_(\"Disk is OK\")}</span>\n                        }\n                        { drive_ata.SmartTemperature > 0\n                          ? <span>({utils.format_temperature(drive_ata.SmartTemperature)})</span>\n                          : null\n                        }\n                    </td>\n                </tr>\n            );\n        }\n\n        var header = (\n            <div className=\"panel panel-default\">\n                <div className=\"panel-heading\">{_(\"Drive\")}</div>\n                <div className=\"panel-body\">\n                    <table className=\"info-table-ct\">\n                        { row(_(\"storage\", \"Model\"), drive.Model) }\n                        { row(_(\"storage\", \"Firmware Version\"), drive.Revision) }\n                        { row(_(\"storage\", \"Serial Number\"), drive.Serial) }\n                        { row(_(\"storage\", \"World Wide Name\"), drive.WWN) }\n                        { row(_(\"storage\", \"Capacity\"),\n                              drive.Size ? utils.fmt_size_long(drive.Size)\n                                  : _(\"No media inserted\")) }\n                        { assessment }\n                        { row(_(\"storage\", \"Device File\"), drive_block? utils.block_name(drive_block) : \"-\") }\n                        { multipath_blocks.length > 0 && row(_(\"storage\", \"Multipathed Devices\"),\n                                                             multipath_blocks.map(utils.block_name).join(\" \")) }\n                    </table>\n                </div>\n            </div>\n        );\n\n        var content = <Content.Block client={this.props.client} block={drive_block}/>;\n\n        return <StdDetailsLayout jobs={this.props.jobs} header={header} content={content}/>;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/storaged/drive-details.jsx","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2017 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport cockpit from \"cockpit\";\nimport React from \"react\";\nimport utils from \"./utils.js\";\nimport { StdDetailsLayout } from \"./details.jsx\";\nimport Content from \"./content-views.jsx\";\nimport { StorageButton, StorageBlockNavLink, StorageMultiAction } from \"./storage-controls.jsx\";\nimport dialog from \"./dialog.js\";\n\nconst _ = cockpit.gettext;\n\nclass VGroupSidebar extends React.Component {\n    render() {\n        var self = this;\n        var client = self.props.client;\n        var vgroup = self.props.vgroup;\n        var pvols = client.vgroups_pvols[vgroup.path] || [];\n\n        function filter_inside_vgroup(spc) {\n            var block = spc.block;\n            if (client.blocks_part[block.path])\n                block = client.blocks[client.blocks_part[block.path].Table];\n            var lvol = (block &&\n                        client.blocks_lvm2[block.path] &&\n                        client.lvols[client.blocks_lvm2[block.path].LogicalVolume]);\n            return !lvol || lvol.VolumeGroup != vgroup.path;\n        }\n\n        function add_disk() {\n            dialog.open({ Title: _(\"Add Disks\"),\n                          Fields: [\n                              { SelectMany: \"disks\",\n                                Title: _(\"Disks\"),\n                                Options: (\n                                    utils.get_available_spaces(client)\n                                         .filter(filter_inside_vgroup)\n                                         .map(utils.available_space_to_option)\n                                ),\n                                EmptyWarning: _(\"No disks are available.\"),\n                                validate: function(disks) {\n                                    if (disks.length === 0)\n                                        return _(\"At least one disk is needed.\");\n                                }\n                              }\n                          ],\n                          Action: {\n                              Title: _(\"Add\"),\n                              action: function(vals) {\n                                  return utils.prepare_available_spaces(client, vals.disks).then(function() {\n                                      var paths = Array.prototype.slice.call(arguments);\n                                      return cockpit.all(paths.map(function(p) {\n                                          return vgroup.AddDevice(p, {});\n                                      }));\n                                  });\n                              }\n                          }\n            });\n        }\n\n        function render_pvol(pvol) {\n            var remove_action = null;\n            var remove_excuse = null;\n\n            function pvol_remove() {\n                return vgroup.RemoveDevice(pvol.path, true, {});\n            }\n\n            function pvol_empty_and_remove() {\n                return (vgroup.EmptyDevice(pvol.path, {})\n                              .then(function() {\n                                  vgroup.RemoveDevice(pvol.path, true, {});\n                              }));\n            }\n\n            if (pvols.length === 1) {\n                remove_excuse = _(\"The last physical volume of a volume group cannot be removed.\");\n            } else if (pvol.FreeSize < pvol.Size) {\n                if (pvol.Size <= vgroup.FreeSize)\n                    remove_action = pvol_empty_and_remove;\n                else\n                    remove_excuse = cockpit.format(\n                        _(\"There is not enough free space elsewhere to remove this physical volume. At least $0 more free space is needed.\"),\n                        utils.fmt_size(pvol.Size - vgroup.FreeSize)\n                    );\n            } else {\n                remove_action = pvol_remove;\n            }\n\n            return (\n                <tr>\n                    <td className=\"storage-icon\">\n                        <div><img src=\"images/storage-disk.png\"></img></div>\n                    </td>\n                    <td>\n                        <StorageBlockNavLink client={client} block={ client.blocks[pvol.path] }/>\n                        <br></br>\n                        <span>\n                            {cockpit.format(_(\"$0, $1 free\"),\n                                            utils.fmt_size(pvol.Size),\n                                            utils.fmt_size(pvol.FreeSize))}\n                        </span>\n                    </td>\n                    <td className=\"storage-action\">\n                        <StorageButton onClick={remove_action} excuse={remove_excuse}>\n                            <span className=\"fa fa-minus\"></span>\n                        </StorageButton>\n                    </td>\n                </tr>);\n        }\n\n        return (\n            <div className=\"panel panel-default\">\n                <div className=\"panel-heading\">\n                    <span>{_(\"Physical Volumes\")}</span>\n                    <span className=\"pull-right\">\n                        <StorageButton onClick={add_disk}>\n                            <span className=\"fa fa-plus\"></span>\n                        </StorageButton>\n                    </span>\n                </div>\n                <table className=\"table\">\n                    <tbody>\n                        { pvols.map(render_pvol) }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport class VGroupDetails extends React.Component {\n    constructor() {\n        super();\n        this.poll_timer = null;\n    }\n\n    ensurePolling(needs_polling) {\n        if (needs_polling && this.poll_timer === null) {\n            this.poll_timer = window.setInterval(() => { this.props.vgroup.Poll(); }, 2000);\n        } else if (!needs_polling && this.poll_timer !== null) {\n            window.clearInterval(this.poll_timer);\n            this.poll_timer =  null;\n        }\n    }\n\n    componentWillUnmount() {\n        this.ensurePolling(false);\n    }\n\n    render() {\n        var client = this.props.client;\n        var vgroup = this.props.vgroup;\n\n        this.ensurePolling(vgroup.NeedsPolling);\n\n        function rename() {\n            var location = cockpit.location;\n\n            dialog.open({ Title: _(\"Rename Volume Group\"),\n                          Fields: [\n                              { TextInput: \"name\",\n                                Title: _(\"Name\"),\n                                Value: vgroup.Name,\n                                validate: utils.validate_lvm2_name\n                              },\n                          ],\n                          Action: {\n                              Title: _(\"Rename\"),\n                              action: function (vals) {\n                                  return vgroup.Rename(vals.name, { }).\n                                                done(function () {\n                                                    location.go([ 'vg', vals.name ]);\n                                                });\n                              }\n                          }\n            });\n        }\n\n        function delete_() {\n            var location = cockpit.location;\n            var usage = utils.get_active_usage(client, vgroup.path);\n\n            if (usage.Blocking) {\n                dialog.open({ Title: cockpit.format(_(\"$0 is in active use\"), vgroup.Name),\n                              Blocking: usage.Blocking,\n                              Fields: [ ]\n                });\n                return;\n            }\n\n            dialog.open({ Title: cockpit.format(_(\"Please confirm deletion of $0\"), vgroup.Name),\n                          Teardown: usage.Teardown,\n                          Fields: [\n                          ],\n                          Action: {\n                              Danger: _(\"Deleting a volume group will erase all data on it.\"),\n                              Title: _(\"Delete\"),\n                              action: function () {\n                                  return utils.teardown_active_usage(client, usage).\n                                               then(function () {\n                                                   return vgroup.Delete(true,\n                                                                        { 'tear-down': { t: 'b', v: true }\n                                                                        }).\n                                                                 done(function () {\n                                                                     location.go('/');\n                                                                 });\n                                               });\n                              }\n                          }\n            });\n        }\n\n        var actions = [\n            { title: _(\"Rename\"), action: rename },\n            { title: _(\"Delete\"), action: delete_ }\n        ];\n\n        var header = (\n            <div className=\"panel panel-default\">\n                <div className=\"panel-heading\">\n                    {cockpit.format(_(\"Volume Group $0\"), vgroup.Name)}\n                    <span className=\"pull-right\">\n                        <StorageMultiAction actions={actions} default={0}/>\n                    </span>\n                </div>\n                <div className=\"panel-body\">\n                    <table className=\"info-table-ct\">\n                        <tr>\n                            <td>{_(\"storage\", \"UUID\")}</td>\n                            <td>{ vgroup.UUID }</td>\n                        </tr>\n                        <tr>\n                            <td>{_(\"storage\", \"Capacity\")}</td>\n                            <td>{ utils.fmt_size_long(vgroup.Size) }</td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        );\n\n        var sidebar = <VGroupSidebar client={this.props.client} vgroup={vgroup}/>;\n\n        var content = <Content.VGroup client={this.props.client} vgroup={vgroup}/>;\n\n        return <StdDetailsLayout jobs={this.props.jobs}\n                                 header={ header }\n                                 sidebar={ sidebar }\n                                 content={ content }/>;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/storaged/vgroup-details.jsx","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2017 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport cockpit from \"cockpit\";\nimport React from \"react\";\nimport utils from \"./utils.js\";\nimport { StdDetailsLayout } from \"./details.jsx\";\nimport Content from \"./content-views.jsx\";\nimport { StorageButton, StorageBlockNavLink, StorageMultiAction, StorageOnOff } from \"./storage-controls.jsx\";\nimport dialog from \"./dialog.js\";\n\nconst _ = cockpit.gettext;\n\nclass MDRaidSidebar extends React.Component {\n    render() {\n        var self = this;\n        var client = self.props.client;\n        var mdraid = self.props.mdraid;\n\n        function filter_inside_mdraid(spc) {\n            var block = spc.block;\n            if (client.blocks_part[block.path])\n                block = client.blocks[client.blocks_part[block.path].Table];\n            return block && block.MDRaid != mdraid.path;\n        }\n\n        function add_disk() {\n            dialog.open({ Title: _(\"Add Disks\"),\n                          Fields: [\n                              { SelectMany: \"disks\",\n                                Title: _(\"Disks\"),\n                                Options: (\n                                    utils.get_available_spaces(client)\n                                         .filter(filter_inside_mdraid)\n                                         .map(utils.available_space_to_option)\n                                ),\n                                EmptyWarning: _(\"No disks are available.\"),\n                                validate: function (disks) {\n                                    if (disks.length === 0)\n                                        return _(\"At least one disk is needed.\");\n                                }\n                              }\n                          ],\n                          Action: {\n                              Title: _(\"Add\"),\n                              action: function(vals) {\n                                  return utils.prepare_available_spaces(client, vals.disks).then(function() {\n                                      var paths = Array.prototype.slice.call(arguments);\n                                      return cockpit.all(paths.map(function(p) {\n                                          return mdraid.AddDevice(p, {});\n                                      }));\n                                  });\n                              }\n                          }\n            });\n        }\n\n        var members = client.mdraids_members[mdraid.path] || [];\n        var dynamic_members = (mdraid.Level != \"raid0\");\n\n        var n_spares = 0, n_recovering = 0;\n        mdraid.ActiveDevices.forEach(function(as) {\n            if (as[2].indexOf(\"spare\") >= 0) {\n                if (as[1] < 0)\n                    n_spares += 1;\n                else\n                    n_recovering += 1;\n            }\n        });\n\n        /* Older versions of Udisks/storaged don't have a Running property */\n        var running = mdraid.Running;\n        if (running === undefined)\n            running = mdraid.ActiveDevices && mdraid.ActiveDevices.length > 0;\n\n        function render_member(block) {\n            var active_state = utils.array_find(mdraid.ActiveDevices, function(as) {\n                return as[0] == block.path;\n            });\n\n            function state_text(state) {\n                return { faulty:       _(\"FAILED\"),\n                         in_sync:      _(\"In Sync\"),\n                         spare:        active_state[1] < 0 ? _(\"Spare\") : _(\"Recovering\"),\n                         write_mostly: _(\"Write-mostly\"),\n                         blocked:      _(\"Blocked\")\n                }[state] || cockpit.format(_(\"Unknown ($0)\"), state);\n            }\n\n            var slot = active_state && active_state[1] >= 0 && active_state[1].toString();\n            var states = active_state && active_state[2].map(state_text).join(\", \");\n\n            var is_in_sync = (active_state && active_state[2].indexOf(\"in_sync\") >= 0);\n            var is_recovering = (active_state && active_state[2].indexOf(\"spare\") >= 0 && active_state[1] >= 0);\n\n            var remove_excuse = false;\n            if (!running)\n                remove_excuse = _(\"The RAID device must be running in order to remove disks.\");\n            else if ((is_in_sync && n_recovering > 0) || is_recovering)\n                remove_excuse = _(\"This disk cannot be removed while the device is recovering.\");\n            else if (is_in_sync && n_spares < 1)\n                remove_excuse = _(\"A spare disk needs to be added first before this disk can be removed.\");\n            else if (members.length <= 1)\n                remove_excuse = _(\"The last disk of a RAID device cannot be removed.\");\n\n            function remove() {\n                return mdraid.RemoveDevice(block.path, { wipe: { t: 'b', v: true } });\n            }\n\n            return (\n                <tr>\n                    <td className=\"storage-icon\">\n                        <div><img src=\"images/storage-disk.png\"></img></div>\n                    </td>\n                    <td>\n                        {slot? slot : \"-\"} <StorageBlockNavLink client={client} block={block}/>\n                        <br/>\n                        <span className=\"state\">{states}</span>\n                    </td>\n                    { dynamic_members ?\n                      <td className=\"storage-action\">\n                          <StorageButton onClick={remove} excuse={remove_excuse}>\n                              <span className=\"fa fa-minus\"></span>\n                          </StorageButton>\n                      </td>\n                      : null }\n                </tr>);\n        }\n\n        var add_excuse = false;\n        if (!running)\n            add_excuse = _(\"The RAID device must be running in order to add spare disks.\");\n\n        return (\n            <div className=\"panel panel-default\">\n                <div className=\"panel-heading\">\n                    <span>{_(\"Disks\")}</span>\n                    {dynamic_members ?\n                     <span className=\"pull-right\">\n                         <StorageButton onClick={add_disk} excuse={add_excuse}>\n                             <span className=\"fa fa-plus\"></span>\n                         </StorageButton>\n                     </span>\n                     : null}\n                </div>\n                <table className=\"table\">\n                    <tbody>\n                        {members.map(render_member)}\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nexport class MDRaidDetails extends React.Component {\n    render() {\n        var client = this.props.client;\n        var mdraid = this.props.mdraid;\n        var block = mdraid && client.mdraids_block[mdraid.path];\n\n        function format_level(str) {\n            return { \"raid0\": _(\"RAID 0\"),\n                     \"raid1\": _(\"RAID 1\"),\n                     \"raid4\": _(\"RAID 4\"),\n                     \"raid5\": _(\"RAID 5\"),\n                     \"raid6\": _(\"RAID 6\"),\n                     \"raid10\": _(\"RAID 10\")\n            }[str] || cockpit.format(_(\"RAID ($0)\"), str);\n        }\n\n        var level = format_level(mdraid.Level);\n        if (mdraid.NumDevices > 0)\n            level += \", \" + cockpit.format(_(\"$0 Disks\"), mdraid.NumDevices);\n        if (mdraid.ChunkSize > 0)\n            level += \", \" + cockpit.format(_(\"$0 Chunk Size\"), utils.fmt_size(mdraid.ChunkSize));\n\n        function toggle_bitmap(val) {\n            return mdraid.SetBitmapLocation(utils.encode_filename(val? 'internal' : 'none'), {});\n        }\n\n        var bitmap = null;\n        if (mdraid.BitmapLocation) {\n            var value = utils.decode_filename(mdraid.BitmapLocation) != \"none\";\n            bitmap = (\n                <tr>\n                    <td>{_(\"storage\", \"Bitmap\")}</td>\n                    <td><StorageOnOff state={value} onChange={toggle_bitmap}/></td>\n                </tr>\n            );\n        }\n\n        var degraded_message = null;\n        if (mdraid.Degraded > 0) {\n            var text = cockpit.format(\n                cockpit.ngettext(\"$0 disk is missing\", \"$0 disks are missing\", mdraid.Degraded),\n                mdraid.Degraded\n            );\n            degraded_message = (\n                <div className=\"alert alert-danger\">\n                    <span className=\"pficon pficon-error-circle-o\"></span>\n                    <span>{_(\"The RAID Array is in a degraded state\")}</span> - {text}\n                </div>\n            );\n        }\n\n        /* Older versions of Udisks/storaged don't have a Running property */\n        var running = mdraid.Running;\n        if (running === undefined)\n            running = mdraid.ActiveDevices && mdraid.ActiveDevices.length > 0;\n\n        function start() {\n            return mdraid.Start({ \"start-degraded\": { t: 'b', v: true } });\n        }\n\n        function stop() {\n            return mdraid.Stop({});\n        }\n\n        function start_scrub() {\n            return mdraid.RequestSyncAction(\"repair\", {});\n        }\n\n        function stop_scrub() {\n            return mdraid.RequestSyncAction(\"idle\", {});\n        }\n\n        function delete_dialog() {\n            var location = cockpit.location;\n\n            function delete_() {\n                if (mdraid.Delete)\n                    return mdraid.Delete({ 'tear-down': { t: 'b', v: true } });\n\n                // If we don't have a Delete method, we simulate\n                // it by stopping the array and wiping all\n                // members.\n\n                function wipe_members() {\n                    return cockpit.all(client.mdraids_members[mdraid.path].map(function (member) {\n                        return member.Format('empty', { });\n                    }));\n                }\n\n                if (mdraid.ActiveDevices && mdraid.ActiveDevices.length > 0)\n                    return mdraid.Stop({}).then(wipe_members);\n                else\n                    return wipe_members();\n            }\n\n            var usage = utils.get_active_usage(client, block? block.path : \"\");\n\n            if (usage.Blocking) {\n                dialog.open({ Title: cockpit.format(_(\"$0 is in active use\"), utils.mdraid_name(mdraid)),\n                              Blocking: usage.Blocking,\n                              Fields: [ ]\n                });\n                return;\n            }\n\n            dialog.open({ Title: cockpit.format(_(\"Please confirm deletion of $0\"),\n                                                utils.mdraid_name(mdraid)),\n                          Teardown: usage.Teardown,\n                          Fields: [ ],\n                          Action: {\n                              Title: _(\"Delete\"),\n                              Danger: _(\"Deleting a RAID device will erase all data on it.\"),\n                              action: function () {\n                                  return utils.teardown_active_usage(client, usage).\n                                               then(delete_).\n                                               then(function () {\n                                                   location.go('/');\n                                               });\n                              }\n                          }\n            });\n        }\n\n        var actions = [\n            { title: _(\"Start\"),           action: start },\n            { title: _(\"Stop\"),            action: stop },\n            { title: _(\"Start Scrubbing\"), action: start_scrub },\n            { title: _(\"Stop Scrubbing\"),  action: stop_scrub },\n            { title: _(\"Delete\"),          action: delete_dialog }\n        ];\n\n        var header = (\n            <div className=\"panel panel-default\">\n                <div className=\"panel-heading\">\n                    { cockpit.format(_(\"RAID Device $0\"), utils.mdraid_name(mdraid)) }\n                    <span className=\"pull-right\">\n                        <StorageMultiAction actions={actions} default={running? 1 : 0}/>\n                    </span>\n                </div>\n                <div className=\"panel-body\">\n                    <table className=\"info-table-ct\">\n                        <tr>\n                            <td>{_(\"storage\", \"Device\")}</td>\n                            <td>{ block? utils.decode_filename(block.PreferredDevice) : \"-\" }</td>\n                        </tr>\n                        <tr>\n                            <td>{_(\"storage\", \"UUID\")}</td>\n                            <td>{ mdraid.UUID }</td>\n                        </tr>\n                        <tr>\n                            <td>{_(\"storage\", \"Capacity\")}</td>\n                            <td>{ utils.fmt_size_long(mdraid.Size) }</td>\n                        </tr>\n                        <tr>\n                            <td>{_(\"storage\", \"RAID Level\")}</td>\n                            <td>{ level }</td>\n                        </tr>\n                        { bitmap }\n                        <tr>\n                            <td>{_(\"storage\", \"State\")}</td>\n                            <td>{ running? _(\"Running\"): _(\"Not running\") }</td>\n                        </tr>\n                    </table>\n                </div>\n            </div>\n        );\n\n        var sidebar = <MDRaidSidebar client={this.props.client} mdraid={mdraid}/>;\n\n        var content = <Content.Block client={this.props.client} block={block}/>;\n\n        return <StdDetailsLayout jobs={this.props.jobs} alert={degraded_message}\n                                 header={ header }\n                                 sidebar={ sidebar }\n                                 content={ content }/>;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/storaged/mdraid-details.jsx","/*\n * This file is part of Cockpit.\n *\n * Copyright (C) 2017 Red Hat, Inc.\n *\n * Cockpit is free software; you can redistribute it and/or modify it\n * under the terms of the GNU Lesser General Public License as published by\n * the Free Software Foundation; either version 2.1 of the License, or\n * (at your option) any later version.\n *\n * Cockpit is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU\n * Lesser General Public License for more details.\n *\n * You should have received a copy of the GNU Lesser General Public License\n * along with Cockpit; If not, see <http://www.gnu.org/licenses/>.\n */\n\nimport cockpit from \"cockpit\";\nimport React from \"react\";\nimport { StorageButton } from \"./storage-controls.jsx\";\n\nconst _ = cockpit.gettext;\n\nexport class Jobs extends React.Component {\n    render() {\n        var jobs = this.props.jobs.query();\n\n        if (jobs.length === 0)\n            return null;\n\n        function job_row(job) {\n            function cancel() {\n                return job.dbus.Cancel({});\n            }\n            return (\n                <tr>\n                    <td className=\"job-description\">{job.Description}</td>\n                    <td>{job.Progress}</td>\n                    <td>{job.RemainingTime}</td>\n                    <td className=\"job-action\">\n                        { job.Cancelable? <StorageButton onClick={cancel}>{_(\"Cancel\")}</StorageButton> : null }\n                    </td>\n                </tr>\n            );\n        }\n\n        return (\n            <div className=\"detail-jobs panel panel-default\">\n                <div className=\"panel-heading\">{_(\"Jobs\")}</div>\n                <table className=\"table\">\n                    <tbody>\n                        { jobs.map(job_row) }\n                    </tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ../pkg/storaged/job-views.jsx"],"sourceRoot":""}